digraph "CFG for '_Z15init_and_updatePfii' function" {
	label="CFG for '_Z15init_and_updatePfii' function";

	Node0x616bd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 9\l  %7 = add i32 %6, %4\l  %8 = icmp sgt i32 %7, 1\l  %9 = icmp slt i32 %7, %1\l  %10 = select i1 %8, i1 %9, i1 false\l  br i1 %10, label %11, label %251\l|{<s0>T|<s1>F}}"];
	Node0x616bd10:s0 -> Node0x616ca70;
	Node0x616bd10:s1 -> Node0x616d6a0;
	Node0x616ca70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%11:\l11:                                               \l  %12 = add nsw i32 %1, -1\l  %13 = sitofp i32 %12 to float\l  %14 = sitofp i32 %7 to float\l  %15 = fdiv contract float %14, %13\l  %16 = fpext float %15 to double\l  %17 = fmul contract double %16, 0x401921FB53C8D4F1\l  %18 = tail call double @llvm.fabs.f64(double %17)\l  %19 = fcmp olt double %18, 0x41D0000000000000\l  br i1 %19, label %20, label %39\l|{<s0>T|<s1>F}}"];
	Node0x616ca70:s0 -> Node0x616e890;
	Node0x616ca70:s1 -> Node0x616e920;
	Node0x616e890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%20:\l20:                                               \l  %21 = fmul double %18, 0x3FE45F306DC9C883\l  %22 = tail call double @llvm.rint.f64(double %21)\l  %23 = tail call double @llvm.fma.f64(double %22, double 0xBFF921FB54442D18,\l... double %18)\l  %24 = tail call double @llvm.fma.f64(double %22, double 0xBC91A62633145C00,\l... double %23)\l  %25 = fmul double %22, 0x3C91A62633145C00\l  %26 = fneg double %25\l  %27 = tail call double @llvm.fma.f64(double %22, double 0x3C91A62633145C00,\l... double %26)\l  %28 = fsub double %23, %25\l  %29 = fsub double %23, %28\l  %30 = fsub double %29, %25\l  %31 = fsub double %28, %24\l  %32 = fadd double %31, %30\l  %33 = fsub double %32, %27\l  %34 = tail call double @llvm.fma.f64(double %22, double 0xB97B839A252049C0,\l... double %33)\l  %35 = fadd double %24, %34\l  %36 = fsub double %35, %24\l  %37 = fsub double %34, %36\l  %38 = fptosi double %22 to i32\l  br label %115\l}"];
	Node0x616e890 -> Node0x616fc20;
	Node0x616e920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%39:\l39:                                               \l  %40 = tail call double @llvm.amdgcn.trig.preop.f64(double %18, i32 0)\l  %41 = tail call double @llvm.amdgcn.trig.preop.f64(double %18, i32 1)\l  %42 = tail call double @llvm.amdgcn.trig.preop.f64(double %18, i32 2)\l  %43 = fcmp oge double %18, 0x7B00000000000000\l  %44 = tail call double @llvm.amdgcn.ldexp.f64(double %18, i32 -128)\l  %45 = select i1 %43, double %44, double %18\l  %46 = fmul double %42, %45\l  %47 = fneg double %46\l  %48 = tail call double @llvm.fma.f64(double %42, double %45, double %47)\l  %49 = fmul double %41, %45\l  %50 = fneg double %49\l  %51 = tail call double @llvm.fma.f64(double %41, double %45, double %50)\l  %52 = fmul double %40, %45\l  %53 = fneg double %52\l  %54 = tail call double @llvm.fma.f64(double %40, double %45, double %53)\l  %55 = fadd double %49, %54\l  %56 = fsub double %55, %49\l  %57 = fsub double %55, %56\l  %58 = fsub double %54, %56\l  %59 = fsub double %49, %57\l  %60 = fadd double %58, %59\l  %61 = fadd double %46, %51\l  %62 = fsub double %61, %46\l  %63 = fsub double %61, %62\l  %64 = fsub double %51, %62\l  %65 = fsub double %46, %63\l  %66 = fadd double %64, %65\l  %67 = fadd double %61, %60\l  %68 = fsub double %67, %61\l  %69 = fsub double %67, %68\l  %70 = fsub double %60, %68\l  %71 = fsub double %61, %69\l  %72 = fadd double %70, %71\l  %73 = fadd double %66, %72\l  %74 = fadd double %48, %73\l  %75 = fadd double %52, %55\l  %76 = fsub double %75, %52\l  %77 = fsub double %55, %76\l  %78 = fadd double %77, %67\l  %79 = fsub double %78, %77\l  %80 = fsub double %67, %79\l  %81 = fadd double %80, %74\l  %82 = tail call double @llvm.amdgcn.ldexp.f64(double %75, i32 -2)\l  %83 = tail call double @llvm.amdgcn.fract.f64(double %82)\l  %84 = tail call i1 @llvm.amdgcn.class.f64(double %82, i32 516)\l  %85 = select i1 %84, double 0.000000e+00, double %83\l  %86 = tail call double @llvm.amdgcn.ldexp.f64(double %85, i32 2)\l  %87 = fadd double %86, %78\l  %88 = fcmp olt double %87, 0.000000e+00\l  %89 = select i1 %88, double 4.000000e+00, double 0.000000e+00\l  %90 = fadd double %86, %89\l  %91 = fadd double %78, %90\l  %92 = fptosi double %91 to i32\l  %93 = sitofp i32 %92 to double\l  %94 = fsub double %90, %93\l  %95 = fadd double %78, %94\l  %96 = fsub double %95, %94\l  %97 = fsub double %78, %96\l  %98 = fadd double %81, %97\l  %99 = fcmp oge double %95, 5.000000e-01\l  %100 = zext i1 %99 to i32\l  %101 = add nsw i32 %100, %92\l  %102 = select i1 %99, double 1.000000e+00, double 0.000000e+00\l  %103 = fsub double %95, %102\l  %104 = fadd double %103, %98\l  %105 = fsub double %104, %103\l  %106 = fsub double %98, %105\l  %107 = fmul double %104, 0x3FF921FB54442D18\l  %108 = fneg double %107\l  %109 = tail call double @llvm.fma.f64(double %104, double\l... 0x3FF921FB54442D18, double %108)\l  %110 = tail call double @llvm.fma.f64(double %104, double\l... 0x3C91A62633145C07, double %109)\l  %111 = tail call double @llvm.fma.f64(double %106, double\l... 0x3FF921FB54442D18, double %110)\l  %112 = fadd double %107, %111\l  %113 = fsub double %112, %107\l  %114 = fsub double %111, %113\l  br label %115\l}"];
	Node0x616e920 -> Node0x616fc20;
	Node0x616fc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%115:\l115:                                              \l  %116 = phi double [ %37, %20 ], [ %114, %39 ]\l  %117 = phi double [ %35, %20 ], [ %112, %39 ]\l  %118 = phi i32 [ %38, %20 ], [ %101, %39 ]\l  %119 = fmul double %117, %117\l  %120 = fmul double %119, 5.000000e-01\l  %121 = fsub double 1.000000e+00, %120\l  %122 = fsub double 1.000000e+00, %121\l  %123 = fsub double %122, %120\l  %124 = fmul double %119, %119\l  %125 = tail call double @llvm.fma.f64(double %119, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %126 = tail call double @llvm.fma.f64(double %119, double %125, double\l... 0xBE927E4FA17F65F6)\l  %127 = tail call double @llvm.fma.f64(double %119, double %126, double\l... 0x3EFA01A019F4EC90)\l  %128 = tail call double @llvm.fma.f64(double %119, double %127, double\l... 0xBF56C16C16C16967)\l  %129 = tail call double @llvm.fma.f64(double %119, double %128, double\l... 0x3FA5555555555555)\l  %130 = fneg double %116\l  %131 = tail call double @llvm.fma.f64(double %117, double %130, double %123)\l  %132 = tail call double @llvm.fma.f64(double %124, double %129, double %131)\l  %133 = fadd double %121, %132\l  %134 = tail call double @llvm.fma.f64(double %119, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %135 = tail call double @llvm.fma.f64(double %119, double %134, double\l... 0x3EC71DE3796CDE01)\l  %136 = tail call double @llvm.fma.f64(double %119, double %135, double\l... 0xBF2A01A019E83E5C)\l  %137 = tail call double @llvm.fma.f64(double %119, double %136, double\l... 0x3F81111111110BB3)\l  %138 = fneg double %119\l  %139 = fmul double %117, %138\l  %140 = fmul double %116, 5.000000e-01\l  %141 = tail call double @llvm.fma.f64(double %139, double %137, double %140)\l  %142 = tail call double @llvm.fma.f64(double %119, double %141, double %130)\l  %143 = tail call double @llvm.fma.f64(double %139, double\l... 0xBFC5555555555555, double %142)\l  %144 = fsub double %117, %143\l  %145 = and i32 %118, 1\l  %146 = icmp eq i32 %145, 0\l  %147 = select i1 %146, double %144, double %133\l  %148 = bitcast double %147 to \<2 x i32\>\l  %149 = shl i32 %118, 30\l  %150 = bitcast double %17 to \<2 x i32\>\l  %151 = extractelement \<2 x i32\> %150, i64 1\l  %152 = xor i32 %149, %151\l  %153 = and i32 %152, -2147483648\l  %154 = extractelement \<2 x i32\> %148, i64 1\l  %155 = xor i32 %154, %153\l  %156 = insertelement \<2 x i32\> %148, i32 %155, i64 1\l  %157 = tail call i1 @llvm.amdgcn.class.f64(double %18, i32 504)\l  %158 = select i1 %157, \<2 x i32\> %156, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %159 = bitcast \<2 x i32\> %158 to double\l  %160 = fptrunc double %159 to float\l  %161 = icmp slt i32 %2, 1\l  br i1 %161, label %185, label %162\l|{<s0>T|<s1>F}}"];
	Node0x616fc20:s0 -> Node0x6176a80;
	Node0x616fc20:s1 -> Node0x6176b10;
	Node0x6176b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%162:\l162:                                              \l  %163 = and i32 %2, 7\l  %164 = icmp ult i32 %2, 8\l  br i1 %164, label %167, label %165\l|{<s0>T|<s1>F}}"];
	Node0x6176b10:s0 -> Node0x6176dd0;
	Node0x6176b10:s1 -> Node0x6176e20;
	Node0x6176e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%165:\l165:                                              \l  %166 = and i32 %2, -8\l  br label %189\l}"];
	Node0x6176e20 -> Node0x6177020;
	Node0x6176dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%167:\l167:                                              \l  %168 = phi float [ undef, %162 ], [ %248, %189 ]\l  %169 = phi float [ %160, %162 ], [ %241, %189 ]\l  %170 = phi float [ %160, %162 ], [ %248, %189 ]\l  %171 = icmp eq i32 %163, 0\l  br i1 %171, label %185, label %172\l|{<s0>T|<s1>F}}"];
	Node0x6176dd0:s0 -> Node0x6176a80;
	Node0x6176dd0:s1 -> Node0x6177840;
	Node0x6177840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%172:\l172:                                              \l  %173 = phi float [ %174, %172 ], [ %169, %167 ]\l  %174 = phi float [ %182, %172 ], [ %170, %167 ]\l  %175 = phi i32 [ %183, %172 ], [ 0, %167 ]\l  %176 = fpext float %174 to double\l  %177 = fmul contract double %176, 2.000000e+00\l  %178 = fpext float %173 to double\l  %179 = fsub contract double %177, %178\l  %180 = fmul contract double %177, 0x3FB70A3D70A3D70A\l  %181 = fsub contract double %179, %180\l  %182 = fptrunc double %181 to float\l  %183 = add i32 %175, 1\l  %184 = icmp eq i32 %183, %163\l  br i1 %184, label %185, label %172, !llvm.loop !5\l|{<s0>T|<s1>F}}"];
	Node0x6177840:s0 -> Node0x6176a80;
	Node0x6177840:s1 -> Node0x6177840;
	Node0x6176a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%185:\l185:                                              \l  %186 = phi float [ %160, %115 ], [ %168, %167 ], [ %182, %172 ]\l  %187 = zext i32 %7 to i64\l  %188 = getelementptr inbounds float, float addrspace(1)* %0, i64 %187\l  store float %186, float addrspace(1)* %188, align 4, !tbaa !7\l  br label %251\l}"];
	Node0x6176a80 -> Node0x616d6a0;
	Node0x6177020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%189:\l189:                                              \l  %190 = phi float [ %160, %165 ], [ %241, %189 ]\l  %191 = phi float [ %160, %165 ], [ %248, %189 ]\l  %192 = phi i32 [ 0, %165 ], [ %249, %189 ]\l  %193 = fpext float %191 to double\l  %194 = fmul contract double %193, 2.000000e+00\l  %195 = fpext float %190 to double\l  %196 = fsub contract double %194, %195\l  %197 = fmul contract double %194, 0x3FB70A3D70A3D70A\l  %198 = fsub contract double %196, %197\l  %199 = fptrunc double %198 to float\l  %200 = fpext float %199 to double\l  %201 = fmul contract double %200, 2.000000e+00\l  %202 = fpext float %191 to double\l  %203 = fsub contract double %201, %202\l  %204 = fmul contract double %201, 0x3FB70A3D70A3D70A\l  %205 = fsub contract double %203, %204\l  %206 = fptrunc double %205 to float\l  %207 = fpext float %206 to double\l  %208 = fmul contract double %207, 2.000000e+00\l  %209 = fpext float %199 to double\l  %210 = fsub contract double %208, %209\l  %211 = fmul contract double %208, 0x3FB70A3D70A3D70A\l  %212 = fsub contract double %210, %211\l  %213 = fptrunc double %212 to float\l  %214 = fpext float %213 to double\l  %215 = fmul contract double %214, 2.000000e+00\l  %216 = fpext float %206 to double\l  %217 = fsub contract double %215, %216\l  %218 = fmul contract double %215, 0x3FB70A3D70A3D70A\l  %219 = fsub contract double %217, %218\l  %220 = fptrunc double %219 to float\l  %221 = fpext float %220 to double\l  %222 = fmul contract double %221, 2.000000e+00\l  %223 = fpext float %213 to double\l  %224 = fsub contract double %222, %223\l  %225 = fmul contract double %222, 0x3FB70A3D70A3D70A\l  %226 = fsub contract double %224, %225\l  %227 = fptrunc double %226 to float\l  %228 = fpext float %227 to double\l  %229 = fmul contract double %228, 2.000000e+00\l  %230 = fpext float %220 to double\l  %231 = fsub contract double %229, %230\l  %232 = fmul contract double %229, 0x3FB70A3D70A3D70A\l  %233 = fsub contract double %231, %232\l  %234 = fptrunc double %233 to float\l  %235 = fpext float %234 to double\l  %236 = fmul contract double %235, 2.000000e+00\l  %237 = fpext float %227 to double\l  %238 = fsub contract double %236, %237\l  %239 = fmul contract double %236, 0x3FB70A3D70A3D70A\l  %240 = fsub contract double %238, %239\l  %241 = fptrunc double %240 to float\l  %242 = fpext float %241 to double\l  %243 = fmul contract double %242, 2.000000e+00\l  %244 = fpext float %234 to double\l  %245 = fsub contract double %243, %244\l  %246 = fmul contract double %243, 0x3FB70A3D70A3D70A\l  %247 = fsub contract double %245, %246\l  %248 = fptrunc double %247 to float\l  %249 = add i32 %192, 8\l  %250 = icmp eq i32 %249, %166\l  br i1 %250, label %167, label %189, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x6177020:s0 -> Node0x6176dd0;
	Node0x6177020:s1 -> Node0x6177020;
	Node0x616d6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%251:\l251:                                              \l  ret void\l}"];
}
