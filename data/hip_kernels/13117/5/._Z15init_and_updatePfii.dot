digraph "CFG for '_Z15init_and_updatePfii' function" {
	label="CFG for '_Z15init_and_updatePfii' function";

	Node0x6036930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 9\l  %7 = add i32 %6, %4\l  %8 = icmp sgt i32 %7, 1\l  %9 = icmp slt i32 %7, %1\l  %10 = select i1 %8, i1 %9, i1 false\l  br i1 %10, label %11, label %225\l|{<s0>T|<s1>F}}"];
	Node0x6036930:s0 -> Node0x6037690;
	Node0x6036930:s1 -> Node0x60382c0;
	Node0x6037690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%11:\l11:                                               \l  %12 = add nsw i32 %1, -1\l  %13 = sitofp i32 %12 to float\l  %14 = add nsw i32 %7, -1\l  %15 = sitofp i32 %14 to float\l  %16 = fdiv contract float %15, %13\l  %17 = fpext float %16 to double\l  %18 = fmul contract double %17, 0x401921FB54411744\l  %19 = tail call double @llvm.fabs.f64(double %18)\l  %20 = fcmp olt double %19, 0x41D0000000000000\l  br i1 %20, label %21, label %40\l|{<s0>T|<s1>F}}"];
	Node0x6037690:s0 -> Node0x6039560;
	Node0x6037690:s1 -> Node0x60395f0;
	Node0x6039560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%21:\l21:                                               \l  %22 = fmul double %19, 0x3FE45F306DC9C883\l  %23 = tail call double @llvm.rint.f64(double %22)\l  %24 = tail call double @llvm.fma.f64(double %23, double 0xBFF921FB54442D18,\l... double %19)\l  %25 = tail call double @llvm.fma.f64(double %23, double 0xBC91A62633145C00,\l... double %24)\l  %26 = fmul double %23, 0x3C91A62633145C00\l  %27 = fneg double %26\l  %28 = tail call double @llvm.fma.f64(double %23, double 0x3C91A62633145C00,\l... double %27)\l  %29 = fsub double %24, %26\l  %30 = fsub double %24, %29\l  %31 = fsub double %30, %26\l  %32 = fsub double %29, %25\l  %33 = fadd double %32, %31\l  %34 = fsub double %33, %28\l  %35 = tail call double @llvm.fma.f64(double %23, double 0xB97B839A252049C0,\l... double %34)\l  %36 = fadd double %25, %35\l  %37 = fsub double %36, %25\l  %38 = fsub double %35, %37\l  %39 = fptosi double %23 to i32\l  br label %116\l}"];
	Node0x6039560 -> Node0x603a8f0;
	Node0x60395f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%40:\l40:                                               \l  %41 = tail call double @llvm.amdgcn.trig.preop.f64(double %19, i32 0)\l  %42 = tail call double @llvm.amdgcn.trig.preop.f64(double %19, i32 1)\l  %43 = tail call double @llvm.amdgcn.trig.preop.f64(double %19, i32 2)\l  %44 = fcmp oge double %19, 0x7B00000000000000\l  %45 = tail call double @llvm.amdgcn.ldexp.f64(double %19, i32 -128)\l  %46 = select i1 %44, double %45, double %19\l  %47 = fmul double %43, %46\l  %48 = fneg double %47\l  %49 = tail call double @llvm.fma.f64(double %43, double %46, double %48)\l  %50 = fmul double %42, %46\l  %51 = fneg double %50\l  %52 = tail call double @llvm.fma.f64(double %42, double %46, double %51)\l  %53 = fmul double %41, %46\l  %54 = fneg double %53\l  %55 = tail call double @llvm.fma.f64(double %41, double %46, double %54)\l  %56 = fadd double %50, %55\l  %57 = fsub double %56, %50\l  %58 = fsub double %56, %57\l  %59 = fsub double %55, %57\l  %60 = fsub double %50, %58\l  %61 = fadd double %59, %60\l  %62 = fadd double %47, %52\l  %63 = fsub double %62, %47\l  %64 = fsub double %62, %63\l  %65 = fsub double %52, %63\l  %66 = fsub double %47, %64\l  %67 = fadd double %65, %66\l  %68 = fadd double %62, %61\l  %69 = fsub double %68, %62\l  %70 = fsub double %68, %69\l  %71 = fsub double %61, %69\l  %72 = fsub double %62, %70\l  %73 = fadd double %71, %72\l  %74 = fadd double %67, %73\l  %75 = fadd double %49, %74\l  %76 = fadd double %53, %56\l  %77 = fsub double %76, %53\l  %78 = fsub double %56, %77\l  %79 = fadd double %78, %68\l  %80 = fsub double %79, %78\l  %81 = fsub double %68, %80\l  %82 = fadd double %81, %75\l  %83 = tail call double @llvm.amdgcn.ldexp.f64(double %76, i32 -2)\l  %84 = tail call double @llvm.amdgcn.fract.f64(double %83)\l  %85 = tail call i1 @llvm.amdgcn.class.f64(double %83, i32 516)\l  %86 = select i1 %85, double 0.000000e+00, double %84\l  %87 = tail call double @llvm.amdgcn.ldexp.f64(double %86, i32 2)\l  %88 = fadd double %87, %79\l  %89 = fcmp olt double %88, 0.000000e+00\l  %90 = select i1 %89, double 4.000000e+00, double 0.000000e+00\l  %91 = fadd double %87, %90\l  %92 = fadd double %79, %91\l  %93 = fptosi double %92 to i32\l  %94 = sitofp i32 %93 to double\l  %95 = fsub double %91, %94\l  %96 = fadd double %79, %95\l  %97 = fsub double %96, %95\l  %98 = fsub double %79, %97\l  %99 = fadd double %82, %98\l  %100 = fcmp oge double %96, 5.000000e-01\l  %101 = zext i1 %100 to i32\l  %102 = add nsw i32 %101, %93\l  %103 = select i1 %100, double 1.000000e+00, double 0.000000e+00\l  %104 = fsub double %96, %103\l  %105 = fadd double %104, %99\l  %106 = fsub double %105, %104\l  %107 = fsub double %99, %106\l  %108 = fmul double %105, 0x3FF921FB54442D18\l  %109 = fneg double %108\l  %110 = tail call double @llvm.fma.f64(double %105, double\l... 0x3FF921FB54442D18, double %109)\l  %111 = tail call double @llvm.fma.f64(double %105, double\l... 0x3C91A62633145C07, double %110)\l  %112 = tail call double @llvm.fma.f64(double %107, double\l... 0x3FF921FB54442D18, double %111)\l  %113 = fadd double %108, %112\l  %114 = fsub double %113, %108\l  %115 = fsub double %112, %114\l  br label %116\l}"];
	Node0x60395f0 -> Node0x603a8f0;
	Node0x603a8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%116:\l116:                                              \l  %117 = phi double [ %38, %21 ], [ %115, %40 ]\l  %118 = phi double [ %36, %21 ], [ %113, %40 ]\l  %119 = phi i32 [ %39, %21 ], [ %102, %40 ]\l  %120 = fmul double %118, %118\l  %121 = fmul double %120, 5.000000e-01\l  %122 = fsub double 1.000000e+00, %121\l  %123 = fsub double 1.000000e+00, %122\l  %124 = fsub double %123, %121\l  %125 = fmul double %120, %120\l  %126 = tail call double @llvm.fma.f64(double %120, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %127 = tail call double @llvm.fma.f64(double %120, double %126, double\l... 0xBE927E4FA17F65F6)\l  %128 = tail call double @llvm.fma.f64(double %120, double %127, double\l... 0x3EFA01A019F4EC90)\l  %129 = tail call double @llvm.fma.f64(double %120, double %128, double\l... 0xBF56C16C16C16967)\l  %130 = tail call double @llvm.fma.f64(double %120, double %129, double\l... 0x3FA5555555555555)\l  %131 = fneg double %117\l  %132 = tail call double @llvm.fma.f64(double %118, double %131, double %124)\l  %133 = tail call double @llvm.fma.f64(double %125, double %130, double %132)\l  %134 = fadd double %122, %133\l  %135 = tail call double @llvm.fma.f64(double %120, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %136 = tail call double @llvm.fma.f64(double %120, double %135, double\l... 0x3EC71DE3796CDE01)\l  %137 = tail call double @llvm.fma.f64(double %120, double %136, double\l... 0xBF2A01A019E83E5C)\l  %138 = tail call double @llvm.fma.f64(double %120, double %137, double\l... 0x3F81111111110BB3)\l  %139 = fneg double %120\l  %140 = fmul double %118, %139\l  %141 = fmul double %117, 5.000000e-01\l  %142 = tail call double @llvm.fma.f64(double %140, double %138, double %141)\l  %143 = tail call double @llvm.fma.f64(double %120, double %142, double %131)\l  %144 = tail call double @llvm.fma.f64(double %140, double\l... 0xBFC5555555555555, double %143)\l  %145 = fsub double %118, %144\l  %146 = and i32 %119, 1\l  %147 = icmp eq i32 %146, 0\l  %148 = select i1 %147, double %145, double %134\l  %149 = bitcast double %148 to \<2 x i32\>\l  %150 = shl i32 %119, 30\l  %151 = bitcast double %18 to \<2 x i32\>\l  %152 = extractelement \<2 x i32\> %151, i64 1\l  %153 = xor i32 %150, %152\l  %154 = and i32 %153, -2147483648\l  %155 = extractelement \<2 x i32\> %149, i64 1\l  %156 = xor i32 %155, %154\l  %157 = insertelement \<2 x i32\> %149, i32 %156, i64 1\l  %158 = tail call i1 @llvm.amdgcn.class.f64(double %19, i32 504)\l  %159 = select i1 %158, \<2 x i32\> %157, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %160 = bitcast \<2 x i32\> %159 to double\l  %161 = fptrunc double %160 to float\l  %162 = icmp slt i32 %2, 1\l  br i1 %162, label %183, label %163\l|{<s0>T|<s1>F}}"];
	Node0x603a8f0:s0 -> Node0x6041750;
	Node0x603a8f0:s1 -> Node0x60417e0;
	Node0x60417e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%163:\l163:                                              \l  %164 = and i32 %2, 7\l  %165 = icmp ult i32 %2, 8\l  br i1 %165, label %168, label %166\l|{<s0>T|<s1>F}}"];
	Node0x60417e0:s0 -> Node0x6041aa0;
	Node0x60417e0:s1 -> Node0x6041af0;
	Node0x6041af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%166:\l166:                                              \l  %167 = and i32 %2, -8\l  br label %187\l}"];
	Node0x6041af0 -> Node0x6041cf0;
	Node0x6041aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%168:\l168:                                              \l  %169 = phi float [ undef, %163 ], [ %222, %187 ]\l  %170 = phi float [ %161, %163 ], [ %218, %187 ]\l  %171 = phi float [ %161, %163 ], [ %222, %187 ]\l  %172 = icmp eq i32 %164, 0\l  br i1 %172, label %183, label %173\l|{<s0>T|<s1>F}}"];
	Node0x6041aa0:s0 -> Node0x6041750;
	Node0x6041aa0:s1 -> Node0x6042510;
	Node0x6042510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%173:\l173:                                              \l  %174 = phi float [ %175, %173 ], [ %170, %168 ]\l  %175 = phi float [ %180, %173 ], [ %171, %168 ]\l  %176 = phi i32 [ %181, %173 ], [ 0, %168 ]\l  %177 = fmul contract float %175, 2.000000e+00\l  %178 = fsub contract float %177, %174\l  %179 = fmul contract float %177, 0x3FB70A3D80000000\l  %180 = fsub contract float %178, %179\l  %181 = add i32 %176, 1\l  %182 = icmp eq i32 %181, %164\l  br i1 %182, label %183, label %173, !llvm.loop !5\l|{<s0>T|<s1>F}}"];
	Node0x6042510:s0 -> Node0x6041750;
	Node0x6042510:s1 -> Node0x6042510;
	Node0x6041750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%183:\l183:                                              \l  %184 = phi float [ %161, %116 ], [ %169, %168 ], [ %180, %173 ]\l  %185 = zext i32 %7 to i64\l  %186 = getelementptr inbounds float, float addrspace(1)* %0, i64 %185\l  store float %184, float addrspace(1)* %186, align 4, !tbaa !7\l  br label %225\l}"];
	Node0x6041750 -> Node0x60382c0;
	Node0x6041cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%187:\l187:                                              \l  %188 = phi float [ %161, %166 ], [ %218, %187 ]\l  %189 = phi float [ %161, %166 ], [ %222, %187 ]\l  %190 = phi i32 [ 0, %166 ], [ %223, %187 ]\l  %191 = fmul contract float %189, 2.000000e+00\l  %192 = fsub contract float %191, %188\l  %193 = fmul contract float %191, 0x3FB70A3D80000000\l  %194 = fsub contract float %192, %193\l  %195 = fmul contract float %194, 2.000000e+00\l  %196 = fsub contract float %195, %189\l  %197 = fmul contract float %195, 0x3FB70A3D80000000\l  %198 = fsub contract float %196, %197\l  %199 = fmul contract float %198, 2.000000e+00\l  %200 = fsub contract float %199, %194\l  %201 = fmul contract float %199, 0x3FB70A3D80000000\l  %202 = fsub contract float %200, %201\l  %203 = fmul contract float %202, 2.000000e+00\l  %204 = fsub contract float %203, %198\l  %205 = fmul contract float %203, 0x3FB70A3D80000000\l  %206 = fsub contract float %204, %205\l  %207 = fmul contract float %206, 2.000000e+00\l  %208 = fsub contract float %207, %202\l  %209 = fmul contract float %207, 0x3FB70A3D80000000\l  %210 = fsub contract float %208, %209\l  %211 = fmul contract float %210, 2.000000e+00\l  %212 = fsub contract float %211, %206\l  %213 = fmul contract float %211, 0x3FB70A3D80000000\l  %214 = fsub contract float %212, %213\l  %215 = fmul contract float %214, 2.000000e+00\l  %216 = fsub contract float %215, %210\l  %217 = fmul contract float %215, 0x3FB70A3D80000000\l  %218 = fsub contract float %216, %217\l  %219 = fmul contract float %218, 2.000000e+00\l  %220 = fsub contract float %219, %214\l  %221 = fmul contract float %219, 0x3FB70A3D80000000\l  %222 = fsub contract float %220, %221\l  %223 = add i32 %190, 8\l  %224 = icmp eq i32 %223, %167\l  br i1 %224, label %168, label %187, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x6041cf0:s0 -> Node0x6041aa0;
	Node0x6041cf0:s1 -> Node0x6041cf0;
	Node0x60382c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%225:\l225:                                              \l  ret void\l}"];
}
