digraph "CFG for '_Z18calculateHistogramPjjjP13__hip_texture' function" {
	label="CFG for '_Z18calculateHistogramPjjjP13__hip_texture' function";

	Node0x58973f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = mul i32 %5, %10\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %24 = add i32 %22, %23\l  %25 = mul nuw nsw i32 %23, %10\l  %26 = add nuw nsw i32 %25, %15\l  %27 = udiv i32 %13, %10\l  %28 = mul i32 %27, %10\l  %29 = icmp ugt i32 %13, %28\l  %30 = zext i1 %29 to i32\l  %31 = add i32 %27, %30\l  %32 = mul i32 %31, %17\l  %33 = add i32 %32, %5\l  %34 = shl i32 %33, 8\l  %35 = icmp ult i32 %26, 256\l  br i1 %35, label %36, label %38\l|{<s0>T|<s1>F}}"];
	Node0x58973f0:s0 -> Node0x589b710;
	Node0x58973f0:s1 -> Node0x589b7a0;
	Node0x589b710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%36:\l36:                                               \l  %37 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ18calculateHistogramPjjjP13__hip_textureE13histo_private, i32 0, i32 %26\l  store i32 0, i32 addrspace(3)* %37, align 4, !tbaa !16\l  br label %38\l}"];
	Node0x589b710 -> Node0x589b7a0;
	Node0x589b7a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %39 = uitofp i32 %16 to float\l  %40 = uitofp i32 %24 to float\l  %41 = bitcast %struct.__hip_texture addrspace(1)* %3 to i32 addrspace(1)*\l  %42 = addrspacecast i32 addrspace(1)* %41 to i32 addrspace(4)*\l  %43 = getelementptr inbounds i32, i32 addrspace(4)* %42, i64 12\l  %44 = getelementptr inbounds i32, i32 addrspace(4)* %42, i64 10\l  %45 = load i32, i32 addrspace(4)* %44, align 4, !tbaa !20, !amdgpu.noclobber\l... !5\l  %46 = uitofp i32 %45 to float\l  %47 = getelementptr inbounds i32, i32 addrspace(4)* %42, i64 2\l  %48 = load i32, i32 addrspace(4)* %47, align 4, !tbaa !20, !amdgpu.noclobber\l... !5\l  %49 = lshr i32 %48, 14\l  %50 = and i32 %49, 16383\l  %51 = add nuw nsw i32 %50, 1\l  %52 = uitofp i32 %51 to float\l  %53 = load i32, i32 addrspace(4)* %43, align 4, !tbaa !20, !amdgpu.noclobber\l... !5\l  %54 = and i32 %53, 32768\l  %55 = icmp eq i32 %54, 0\l  %56 = select i1 %55, float %46, float 1.000000e+00\l  %57 = select i1 %55, float %52, float 1.000000e+00\l  %58 = getelementptr inbounds i32, i32 addrspace(4)* %42, i64 14\l  %59 = load i32, i32 addrspace(4)* %58, align 4, !tbaa !20, !amdgpu.noclobber\l... !5\l  %60 = and i32 %59, 1048576\l  %61 = icmp eq i32 %60, 0\l  %62 = bitcast i32 addrspace(4)* %43 to \<4 x i32\> addrspace(4)*\l  %63 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %62, align 16, !tbaa !21,\l... !amdgpu.noclobber !5\l  %64 = bitcast %struct.__hip_texture addrspace(1)* %3 to \<8 x i32\>\l... addrspace(1)*\l  %65 = addrspacecast \<8 x i32\> addrspace(1)* %64 to \<8 x i32\> addrspace(4)*\l  %66 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %65, align 32, !tbaa !21,\l... !amdgpu.noclobber !5\l  %67 = tail call float @llvm.amdgcn.rcp.f32(float %57)\l  %68 = fmul float %57, %40\l  %69 = tail call float @llvm.floor.f32(float %68)\l  %70 = fmul float %67, %69\l  %71 = select i1 %61, float %70, float %40\l  %72 = tail call float @llvm.amdgcn.rcp.f32(float %56)\l  %73 = fmul float %56, %39\l  %74 = tail call float @llvm.floor.f32(float %73)\l  %75 = fmul float %72, %74\l  %76 = select i1 %61, float %75, float %39\l  %77 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %76, float %71, \<8 x i32\> %66, \<4 x i32\> %63, i1 false, i32 0, i32 0)\l  %78 = bitcast float %77 to i32\l  %79 = and i32 %78, 255\l  %80 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ18calculateHistogramPjjjP13__hip_textureE13histo_private, i32 0, i32 %79\l  %81 = atomicrmw add i32 addrspace(3)* %80, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %35, label %82, label %88\l|{<s0>T|<s1>F}}"];
	Node0x589b7a0:s0 -> Node0x58a03f0;
	Node0x589b7a0:s1 -> Node0x58a0440;
	Node0x58a03f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%82:\l82:                                               \l  %83 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ18calculateHistogramPjjjP13__hip_textureE13histo_private, i32 0, i32 %26\l  %84 = load i32, i32 addrspace(3)* %83, align 4, !tbaa !16\l  %85 = add nuw i32 %34, %26\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %86\l  store i32 %84, i32 addrspace(1)* %87, align 4, !tbaa !16\l  br label %88\l}"];
	Node0x58a03f0 -> Node0x58a0440;
	Node0x58a0440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  ret void\l}"];
}
