digraph "CFG for '_Z16reduction_kernelPfS_j' function" {
	label="CFG for '_Z16reduction_kernelPfS_j' function";

	Node0x6176b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = icmp ult i32 %15, %2\l  br i1 %16, label %17, label %46\l|{<s0>T|<s1>F}}"];
	Node0x6176b50:s0 -> Node0x61784a0;
	Node0x6176b50:s1 -> Node0x6178e50;
	Node0x61784a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%17:\l17:                                               \l  %18 = udiv i32 %12, %9\l  %19 = mul i32 %18, %9\l  %20 = icmp ugt i32 %12, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = shl nuw nsw i32 %9, 2\l  %24 = mul i32 %23, %22\l  %25 = mul i32 %22, %9\l  %26 = shl nuw nsw i32 %9, 1\l  %27 = mul i32 %26, %22\l  %28 = mul nuw nsw i32 %9, 3\l  %29 = mul i32 %28, %22\l  br label %30\l}"];
	Node0x61784a0 -> Node0x6179690;
	Node0x6179690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi float [ 0.000000e+00, %17 ], [ %39, %72 ]\l  %32 = phi float [ 0.000000e+00, %17 ], [ %56, %72 ]\l  %33 = phi float [ 0.000000e+00, %17 ], [ %65, %72 ]\l  %34 = phi float [ 0.000000e+00, %17 ], [ %74, %72 ]\l  %35 = phi i32 [ %15, %17 ], [ %75, %72 ]\l  %36 = zext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %39 = fadd contract float %38, %31\l  %40 = add i32 %25, %35\l  %41 = icmp ult i32 %40, %2\l  br i1 %41, label %50, label %54\l|{<s0>T|<s1>F}}"];
	Node0x6179690:s0 -> Node0x617b3e0;
	Node0x6179690:s1 -> Node0x617b430;
	Node0x617b570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%42:\l42:                                               \l  %43 = fadd contract float %56, %39\l  %44 = fadd contract float %65, %43\l  %45 = fadd contract float %74, %44\l  br label %46\l}"];
	Node0x617b570 -> Node0x6178e50;
	Node0x6178e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%46:\l46:                                               \l  %47 = phi float [ %45, %42 ], [ 0.000000e+00, %3 ]\l  %48 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s_data,\l... i32 0, i32 %14\l  store float %47, float addrspace(3)* %48, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %49 = icmp ult i16 %8, 2\l  br i1 %49, label %77, label %79\l|{<s0>T|<s1>F}}"];
	Node0x6178e50:s0 -> Node0x617c340;
	Node0x6178e50:s1 -> Node0x617c3d0;
	Node0x617b3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%50:\l50:                                               \l  %51 = zext i32 %40 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  br label %54\l}"];
	Node0x617b3e0 -> Node0x617b430;
	Node0x617b430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = phi contract float [ %53, %50 ], [ 0.000000e+00, %30 ]\l  %56 = fadd contract float %55, %32\l  %57 = add i32 %27, %35\l  %58 = icmp ult i32 %57, %2\l  br i1 %58, label %59, label %63\l|{<s0>T|<s1>F}}"];
	Node0x617b430:s0 -> Node0x617c990;
	Node0x617b430:s1 -> Node0x617c9e0;
	Node0x617c990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%59:\l59:                                               \l  %60 = zext i32 %57 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  br label %63\l}"];
	Node0x617c990 -> Node0x617c9e0;
	Node0x617c9e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = phi contract float [ %62, %59 ], [ 0.000000e+00, %54 ]\l  %65 = fadd contract float %64, %33\l  %66 = add i32 %29, %35\l  %67 = icmp ult i32 %66, %2\l  br i1 %67, label %68, label %72\l|{<s0>T|<s1>F}}"];
	Node0x617c9e0:s0 -> Node0x617a5e0;
	Node0x617c9e0:s1 -> Node0x617a1d0;
	Node0x617a5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%68:\l68:                                               \l  %69 = zext i32 %66 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %1, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  br label %72\l}"];
	Node0x617a5e0 -> Node0x617a1d0;
	Node0x617a1d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  %73 = phi contract float [ %71, %68 ], [ 0.000000e+00, %63 ]\l  %74 = fadd contract float %73, %34\l  %75 = add i32 %24, %35\l  %76 = icmp ult i32 %75, %2\l  br i1 %76, label %30, label %42, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x617a1d0:s0 -> Node0x6179690;
	Node0x617a1d0:s1 -> Node0x617b570;
	Node0x617c340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%77:\l77:                                               \l  %78 = icmp eq i32 %14, 0\l  br i1 %78, label %91, label %95\l|{<s0>T|<s1>F}}"];
	Node0x617c340:s0 -> Node0x617d850;
	Node0x617c340:s1 -> Node0x617d8a0;
	Node0x617c3d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  %80 = phi i32 [ %81, %89 ], [ %9, %46 ]\l  %81 = lshr i32 %80, 1\l  %82 = icmp ult i32 %14, %81\l  br i1 %82, label %83, label %89\l|{<s0>T|<s1>F}}"];
	Node0x617c3d0:s0 -> Node0x617dc00;
	Node0x617c3d0:s1 -> Node0x617d9a0;
	Node0x617dc00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%83:\l83:                                               \l  %84 = add nuw nsw i32 %81, %14\l  %85 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s_data,\l... i32 0, i32 %84\l  %86 = load float, float addrspace(3)* %85, align 4, !tbaa !16\l  %87 = load float, float addrspace(3)* %48, align 4, !tbaa !16\l  %88 = fadd contract float %86, %87\l  store float %88, float addrspace(3)* %48, align 4, !tbaa !16\l  br label %89\l}"];
	Node0x617dc00 -> Node0x617d9a0;
	Node0x617d9a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%89:\l89:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %90 = icmp ult i32 %80, 4\l  br i1 %90, label %77, label %79, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x617d9a0:s0 -> Node0x617c340;
	Node0x617d9a0:s1 -> Node0x617c3d0;
	Node0x617d850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%91:\l91:                                               \l  %92 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @s_data, i32 0, i32 0), align 4, !tbaa !16\l  %93 = zext i32 %4 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %0, i64 %93\l  store float %92, float addrspace(1)* %94, align 4, !tbaa !16\l  br label %95\l}"];
	Node0x617d850 -> Node0x617d8a0;
	Node0x617d8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%95:\l95:                                               \l  ret void\l}"];
}
