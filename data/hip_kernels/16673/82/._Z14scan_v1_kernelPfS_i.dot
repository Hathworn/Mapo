digraph "CFG for '_Z14scan_v1_kernelPfS_i' function" {
	label="CFG for '_Z14scan_v1_kernelPfS_i' function";

	Node0x4eb3730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %8\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp sgt i32 %2, 0\l  br i1 %13, label %14, label %40\l|{<s0>T|<s1>F}}"];
	Node0x4eb3730:s0 -> Node0x4eb5630;
	Node0x4eb3730:s1 -> Node0x4eb56c0;
	Node0x4eb5630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%14:\l14:                                               \l  %15 = and i32 %2, 7\l  %16 = icmp ult i32 %2, 8\l  br i1 %16, label %19, label %17\l|{<s0>T|<s1>F}}"];
	Node0x4eb5630:s0 -> Node0x4eb4ee0;
	Node0x4eb5630:s1 -> Node0x4eb5a90;
	Node0x4eb5a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%17:\l17:                                               \l  %18 = and i32 %2, -8\l  br label %44\l}"];
	Node0x4eb5a90 -> Node0x4eb5c50;
	Node0x4eb4ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = phi float [ undef, %14 ], [ %126, %125 ]\l  %21 = phi i32 [ 0, %14 ], [ %127, %125 ]\l  %22 = phi float [ 0.000000e+00, %14 ], [ %126, %125 ]\l  %23 = icmp eq i32 %15, 0\l  br i1 %23, label %40, label %24\l|{<s0>T|<s1>F}}"];
	Node0x4eb4ee0:s0 -> Node0x4eb56c0;
	Node0x4eb4ee0:s1 -> Node0x4eb6f50;
	Node0x4eb6f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %37, %35 ], [ %21, %19 ]\l  %26 = phi float [ %36, %35 ], [ %22, %19 ]\l  %27 = phi i32 [ %38, %35 ], [ 0, %19 ]\l  %28 = sub nsw i32 %12, %25\l  %29 = icmp sgt i32 %28, -1\l  br i1 %29, label %30, label %35\l|{<s0>T|<s1>F}}"];
	Node0x4eb6f50:s0 -> Node0x4eb7590;
	Node0x4eb6f50:s1 -> Node0x4eb70c0;
	Node0x4eb7590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%30:\l30:                                               \l  %31 = zext i32 %28 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = fadd contract float %26, %33\l  br label %35\l}"];
	Node0x4eb7590 -> Node0x4eb70c0;
	Node0x4eb70c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi float [ %34, %30 ], [ %26, %24 ]\l  %37 = add nuw nsw i32 %25, 1\l  %38 = add i32 %27, 1\l  %39 = icmp eq i32 %38, %15\l  br i1 %39, label %40, label %24, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4eb70c0:s0 -> Node0x4eb56c0;
	Node0x4eb70c0:s1 -> Node0x4eb6f50;
	Node0x4eb56c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%40:\l40:                                               \l  %41 = phi float [ 0.000000e+00, %3 ], [ %20, %19 ], [ %36, %35 ]\l  %42 = sext i32 %12 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  store float %41, float addrspace(1)* %43, align 4, !tbaa !7\l  ret void\l}"];
	Node0x4eb5c50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%44:\l44:                                               \l  %45 = phi i32 [ 0, %17 ], [ %127, %125 ]\l  %46 = phi float [ 0.000000e+00, %17 ], [ %126, %125 ]\l  %47 = phi i32 [ 0, %17 ], [ %128, %125 ]\l  %48 = sub nsw i32 %12, %45\l  %49 = icmp sgt i32 %48, -1\l  br i1 %49, label %50, label %55\l|{<s0>T|<s1>F}}"];
	Node0x4eb5c50:s0 -> Node0x4eb91d0;
	Node0x4eb5c50:s1 -> Node0x4eb9220;
	Node0x4eb91d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%50:\l50:                                               \l  %51 = zext i32 %48 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %54 = fadd contract float %46, %53\l  br label %55\l}"];
	Node0x4eb91d0 -> Node0x4eb9220;
	Node0x4eb9220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%55:\l55:                                               \l  %56 = phi float [ %54, %50 ], [ %46, %44 ]\l  %57 = xor i32 %45, -1\l  %58 = add i32 %12, %57\l  %59 = icmp sgt i32 %58, -1\l  br i1 %59, label %60, label %65\l|{<s0>T|<s1>F}}"];
	Node0x4eb9220:s0 -> Node0x4eb9800;
	Node0x4eb9220:s1 -> Node0x4eb9850;
	Node0x4eb9800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%60:\l60:                                               \l  %61 = zext i32 %58 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %64 = fadd contract float %56, %63\l  br label %65\l}"];
	Node0x4eb9800 -> Node0x4eb9850;
	Node0x4eb9850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%65:\l65:                                               \l  %66 = phi float [ %64, %60 ], [ %56, %55 ]\l  %67 = or i32 %45, 2\l  %68 = sub nsw i32 %12, %67\l  %69 = icmp sgt i32 %68, -1\l  br i1 %69, label %70, label %75\l|{<s0>T|<s1>F}}"];
	Node0x4eb9850:s0 -> Node0x4eb7990;
	Node0x4eb9850:s1 -> Node0x4eba0d0;
	Node0x4eb7990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%70:\l70:                                               \l  %71 = zext i32 %68 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %74 = fadd contract float %66, %73\l  br label %75\l}"];
	Node0x4eb7990 -> Node0x4eba0d0;
	Node0x4eba0d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%75:\l75:                                               \l  %76 = phi float [ %74, %70 ], [ %66, %65 ]\l  %77 = or i32 %45, 3\l  %78 = sub nsw i32 %12, %77\l  %79 = icmp sgt i32 %78, -1\l  br i1 %79, label %80, label %85\l|{<s0>T|<s1>F}}"];
	Node0x4eba0d0:s0 -> Node0x4eba6f0;
	Node0x4eba0d0:s1 -> Node0x4eba740;
	Node0x4eba6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%80:\l80:                                               \l  %81 = zext i32 %78 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %1, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %84 = fadd contract float %76, %83\l  br label %85\l}"];
	Node0x4eba6f0 -> Node0x4eba740;
	Node0x4eba740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%85:\l85:                                               \l  %86 = phi float [ %84, %80 ], [ %76, %75 ]\l  %87 = or i32 %45, 4\l  %88 = sub nsw i32 %12, %87\l  %89 = icmp sgt i32 %88, -1\l  br i1 %89, label %90, label %95\l|{<s0>T|<s1>F}}"];
	Node0x4eba740:s0 -> Node0x4ebad60;
	Node0x4eba740:s1 -> Node0x4ebadb0;
	Node0x4ebad60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%90:\l90:                                               \l  %91 = zext i32 %88 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %1, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %94 = fadd contract float %86, %93\l  br label %95\l}"];
	Node0x4ebad60 -> Node0x4ebadb0;
	Node0x4ebadb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%95:\l95:                                               \l  %96 = phi float [ %94, %90 ], [ %86, %85 ]\l  %97 = or i32 %45, 5\l  %98 = sub nsw i32 %12, %97\l  %99 = icmp sgt i32 %98, -1\l  br i1 %99, label %100, label %105\l|{<s0>T|<s1>F}}"];
	Node0x4ebadb0:s0 -> Node0x4ebb400;
	Node0x4ebadb0:s1 -> Node0x4ebb450;
	Node0x4ebb400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%100:\l100:                                              \l  %101 = zext i32 %98 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %1, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %104 = fadd contract float %96, %103\l  br label %105\l}"];
	Node0x4ebb400 -> Node0x4ebb450;
	Node0x4ebb450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%105:\l105:                                              \l  %106 = phi float [ %104, %100 ], [ %96, %95 ]\l  %107 = or i32 %45, 6\l  %108 = sub nsw i32 %12, %107\l  %109 = icmp sgt i32 %108, -1\l  br i1 %109, label %110, label %115\l|{<s0>T|<s1>F}}"];
	Node0x4ebb450:s0 -> Node0x4ebbaa0;
	Node0x4ebb450:s1 -> Node0x4ebbaf0;
	Node0x4ebbaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%110:\l110:                                              \l  %111 = zext i32 %108 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %1, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %114 = fadd contract float %106, %113\l  br label %115\l}"];
	Node0x4ebbaa0 -> Node0x4ebbaf0;
	Node0x4ebbaf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%115:\l115:                                              \l  %116 = phi float [ %114, %110 ], [ %106, %105 ]\l  %117 = or i32 %45, 7\l  %118 = sub nsw i32 %12, %117\l  %119 = icmp sgt i32 %118, -1\l  br i1 %119, label %120, label %125\l|{<s0>T|<s1>F}}"];
	Node0x4ebbaf0:s0 -> Node0x4ebc140;
	Node0x4ebbaf0:s1 -> Node0x4eb6160;
	Node0x4ebc140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%120:\l120:                                              \l  %121 = zext i32 %118 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %1, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %124 = fadd contract float %116, %123\l  br label %125\l}"];
	Node0x4ebc140 -> Node0x4eb6160;
	Node0x4eb6160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%125:\l125:                                              \l  %126 = phi float [ %124, %120 ], [ %116, %115 ]\l  %127 = add nuw nsw i32 %45, 8\l  %128 = add i32 %47, 8\l  %129 = icmp eq i32 %128, %18\l  br i1 %129, label %19, label %44, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4eb6160:s0 -> Node0x4eb4ee0;
	Node0x4eb6160:s1 -> Node0x4eb5c50;
}
