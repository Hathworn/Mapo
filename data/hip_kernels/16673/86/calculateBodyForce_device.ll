; ModuleID = '../data/hip_kernels/16673/86/main.cu'
source_filename = "../data/hip_kernels/16673/86/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

%struct.HIP_vector_type.0 = type { %struct.HIP_vector_base.1 }
%struct.HIP_vector_base.1 = type { %union.anon.2 }
%union.anon.2 = type { %"struct.HIP_vector_base<float, 3>::Native_vec_" }
%"struct.HIP_vector_base<float, 3>::Native_vec_" = type { [3 x float] }
%struct.HIP_vector_type = type { %struct.HIP_vector_base }
%struct.HIP_vector_base = type { %union.anon }
%union.anon = type { <4 x float> }

@_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position = internal unnamed_addr addrspace(3) global [32 x %struct.HIP_vector_type.0] undef, align 16

; Function Attrs: convergent mustprogress norecurse nounwind
define protected amdgpu_kernel void @_Z18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fi(%struct.HIP_vector_type addrspace(1)* nocapture readonly %0, %struct.HIP_vector_type addrspace(1)* nocapture %1, float %2, i32 %3) local_unnamed_addr #0 {
  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()
  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4
  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*
  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5
  %9 = zext i16 %8 to i32
  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12
  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*
  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6
  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %14 = mul i32 %13, %9
  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15
  %16 = add i32 %14, %15
  %17 = icmp slt i32 %16, %3
  br i1 %17, label %18, label %903

18:                                               ; preds = %4
  %19 = udiv i32 %12, %9
  %20 = mul i32 %19, %9
  %21 = icmp ugt i32 %12, %20
  %22 = zext i1 %21 to i32
  %23 = add i32 %19, %22
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = sext i32 %16 to i64
  br label %35

27:                                               ; preds = %18
  %28 = getelementptr inbounds [32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 %15, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds [32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 %15, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds [32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 %15, i32 0, i32 0, i32 0, i32 0, i32 2
  %31 = sext i32 %16 to i64
  %32 = getelementptr inbounds %struct.HIP_vector_type, %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 0
  %33 = getelementptr inbounds %struct.HIP_vector_type, %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 1
  %34 = getelementptr inbounds %struct.HIP_vector_type, %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 2
  br label %52

35:                                               ; preds = %52, %25
  %36 = phi i64 [ %26, %25 ], [ %31, %52 ]
  %37 = phi float [ 0.000000e+00, %25 ], [ %900, %52 ]
  %38 = phi float [ 0.000000e+00, %25 ], [ %898, %52 ]
  %39 = phi float [ 0.000000e+00, %25 ], [ %896, %52 ]
  %40 = fmul contract float %39, %2
  %41 = getelementptr inbounds %struct.HIP_vector_type, %struct.HIP_vector_type addrspace(1)* %1, i64 %36, i32 0, i32 0, i32 0, i64 0
  %42 = load float, float addrspace(1)* %41, align 16, !tbaa !16, !amdgpu.noclobber !5
  %43 = fadd contract float %40, %42
  store float %43, float addrspace(1)* %41, align 16, !tbaa !16
  %44 = fmul contract float %38, %2
  %45 = getelementptr inbounds %struct.HIP_vector_type, %struct.HIP_vector_type addrspace(1)* %1, i64 %36, i32 0, i32 0, i32 0, i64 1
  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !16, !amdgpu.noclobber !5
  %47 = fadd contract float %44, %46
  store float %47, float addrspace(1)* %45, align 4, !tbaa !16
  %48 = fmul contract float %37, %2
  %49 = getelementptr inbounds %struct.HIP_vector_type, %struct.HIP_vector_type addrspace(1)* %1, i64 %36, i32 0, i32 0, i32 0, i64 2
  %50 = load float, float addrspace(1)* %49, align 8, !tbaa !16, !amdgpu.noclobber !5
  %51 = fadd contract float %48, %50
  store float %51, float addrspace(1)* %49, align 8, !tbaa !16
  br label %903

52:                                               ; preds = %27, %52
  %53 = phi float [ 0.000000e+00, %27 ], [ %896, %52 ]
  %54 = phi float [ 0.000000e+00, %27 ], [ %898, %52 ]
  %55 = phi float [ 0.000000e+00, %27 ], [ %900, %52 ]
  %56 = phi i32 [ 0, %27 ], [ %901, %52 ]
  %57 = mul i32 %56, %9
  %58 = add i32 %57, %15
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %struct.HIP_vector_type, %struct.HIP_vector_type addrspace(1)* %0, i64 %59, i32 0, i32 0, i32 0, i64 0
  %61 = load float, float addrspace(1)* %60, align 16, !amdgpu.noclobber !5
  %62 = getelementptr inbounds %struct.HIP_vector_type, %struct.HIP_vector_type addrspace(1)* %0, i64 %59, i32 0, i32 0, i32 0, i64 1
  %63 = load float, float addrspace(1)* %62, align 4, !amdgpu.noclobber !5
  %64 = getelementptr inbounds %struct.HIP_vector_type, %struct.HIP_vector_type addrspace(1)* %0, i64 %59, i32 0, i32 0, i32 0, i64 2
  %65 = load float, float addrspace(1)* %64, align 8, !amdgpu.noclobber !5
  store float %61, float addrspace(3)* %28, align 4
  store float %63, float addrspace(3)* %29, align 4
  store float %65, float addrspace(3)* %30, align 4
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %66 = load float, float addrspace(1)* %32, align 16, !tbaa !16, !amdgpu.noclobber !5
  %67 = load float, float addrspace(1)* %33, align 4, !tbaa !16, !amdgpu.noclobber !5
  %68 = load float, float addrspace(1)* %34, align 8, !tbaa !16, !amdgpu.noclobber !5
  %69 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 16, !tbaa !16
  %70 = fsub contract float %69, %66
  %71 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %72 = fsub contract float %71, %67
  %73 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2), align 8, !tbaa !16
  %74 = fsub contract float %73, %68
  %75 = fmul contract float %70, %70
  %76 = fmul contract float %72, %72
  %77 = fadd contract float %75, %76
  %78 = fmul contract float %74, %74
  %79 = fadd contract float %77, %78
  %80 = fadd contract float %79, 0x3E112E0BE0000000
  %81 = fcmp olt float %80, 0x39B0000000000000
  %82 = select i1 %81, float 0x4310000000000000, float 1.000000e+00
  %83 = select i1 %81, float 0x4630000000000000, float 1.000000e+00
  %84 = fmul float %80, %83
  %85 = tail call float @llvm.amdgcn.rsq.f32(float %84)
  %86 = fmul float %82, %85
  %87 = fmul contract float %86, %86
  %88 = fmul contract float %86, %87
  %89 = fmul contract float %70, %88
  %90 = fadd contract float %53, %89
  %91 = fmul contract float %72, %88
  %92 = fadd contract float %54, %91
  %93 = fmul contract float %74, %88
  %94 = fadd contract float %55, %93
  %95 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %96 = fsub contract float %95, %66
  %97 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1), align 16, !tbaa !16
  %98 = fsub contract float %97, %67
  %99 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %100 = fsub contract float %99, %68
  %101 = fmul contract float %96, %96
  %102 = fmul contract float %98, %98
  %103 = fadd contract float %101, %102
  %104 = fmul contract float %100, %100
  %105 = fadd contract float %103, %104
  %106 = fadd contract float %105, 0x3E112E0BE0000000
  %107 = fcmp olt float %106, 0x39B0000000000000
  %108 = select i1 %107, float 0x4310000000000000, float 1.000000e+00
  %109 = select i1 %107, float 0x4630000000000000, float 1.000000e+00
  %110 = fmul float %106, %109
  %111 = tail call float @llvm.amdgcn.rsq.f32(float %110)
  %112 = fmul float %108, %111
  %113 = fmul contract float %112, %112
  %114 = fmul contract float %112, %113
  %115 = fmul contract float %96, %114
  %116 = fadd contract float %90, %115
  %117 = fmul contract float %98, %114
  %118 = fadd contract float %92, %117
  %119 = fmul contract float %100, %114
  %120 = fadd contract float %94, %119
  %121 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !16
  %122 = fsub contract float %121, %66
  %123 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %124 = fsub contract float %123, %67
  %125 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2), align 16, !tbaa !16
  %126 = fsub contract float %125, %68
  %127 = fmul contract float %122, %122
  %128 = fmul contract float %124, %124
  %129 = fadd contract float %127, %128
  %130 = fmul contract float %126, %126
  %131 = fadd contract float %129, %130
  %132 = fadd contract float %131, 0x3E112E0BE0000000
  %133 = fcmp olt float %132, 0x39B0000000000000
  %134 = select i1 %133, float 0x4310000000000000, float 1.000000e+00
  %135 = select i1 %133, float 0x4630000000000000, float 1.000000e+00
  %136 = fmul float %132, %135
  %137 = tail call float @llvm.amdgcn.rsq.f32(float %136)
  %138 = fmul float %134, %137
  %139 = fmul contract float %138, %138
  %140 = fmul contract float %138, %139
  %141 = fmul contract float %122, %140
  %142 = fadd contract float %116, %141
  %143 = fmul contract float %124, %140
  %144 = fadd contract float %118, %143
  %145 = fmul contract float %126, %140
  %146 = fadd contract float %120, %145
  %147 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %148 = fsub contract float %147, %66
  %149 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !16
  %150 = fsub contract float %149, %67
  %151 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %152 = fsub contract float %151, %68
  %153 = fmul contract float %148, %148
  %154 = fmul contract float %150, %150
  %155 = fadd contract float %153, %154
  %156 = fmul contract float %152, %152
  %157 = fadd contract float %155, %156
  %158 = fadd contract float %157, 0x3E112E0BE0000000
  %159 = fcmp olt float %158, 0x39B0000000000000
  %160 = select i1 %159, float 0x4310000000000000, float 1.000000e+00
  %161 = select i1 %159, float 0x4630000000000000, float 1.000000e+00
  %162 = fmul float %158, %161
  %163 = tail call float @llvm.amdgcn.rsq.f32(float %162)
  %164 = fmul float %160, %163
  %165 = fmul contract float %164, %164
  %166 = fmul contract float %164, %165
  %167 = fmul contract float %148, %166
  %168 = fadd contract float %142, %167
  %169 = fmul contract float %150, %166
  %170 = fadd contract float %144, %169
  %171 = fmul contract float %152, %166
  %172 = fadd contract float %146, %171
  %173 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0), align 16, !tbaa !16
  %174 = fsub contract float %173, %66
  %175 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %176 = fsub contract float %175, %67
  %177 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2), align 8, !tbaa !16
  %178 = fsub contract float %177, %68
  %179 = fmul contract float %174, %174
  %180 = fmul contract float %176, %176
  %181 = fadd contract float %179, %180
  %182 = fmul contract float %178, %178
  %183 = fadd contract float %181, %182
  %184 = fadd contract float %183, 0x3E112E0BE0000000
  %185 = fcmp olt float %184, 0x39B0000000000000
  %186 = select i1 %185, float 0x4310000000000000, float 1.000000e+00
  %187 = select i1 %185, float 0x4630000000000000, float 1.000000e+00
  %188 = fmul float %184, %187
  %189 = tail call float @llvm.amdgcn.rsq.f32(float %188)
  %190 = fmul float %186, %189
  %191 = fmul contract float %190, %190
  %192 = fmul contract float %190, %191
  %193 = fmul contract float %174, %192
  %194 = fadd contract float %168, %193
  %195 = fmul contract float %176, %192
  %196 = fadd contract float %170, %195
  %197 = fmul contract float %178, %192
  %198 = fadd contract float %172, %197
  %199 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %200 = fsub contract float %199, %66
  %201 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1), align 16, !tbaa !16
  %202 = fsub contract float %201, %67
  %203 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %204 = fsub contract float %203, %68
  %205 = fmul contract float %200, %200
  %206 = fmul contract float %202, %202
  %207 = fadd contract float %205, %206
  %208 = fmul contract float %204, %204
  %209 = fadd contract float %207, %208
  %210 = fadd contract float %209, 0x3E112E0BE0000000
  %211 = fcmp olt float %210, 0x39B0000000000000
  %212 = select i1 %211, float 0x4310000000000000, float 1.000000e+00
  %213 = select i1 %211, float 0x4630000000000000, float 1.000000e+00
  %214 = fmul float %210, %213
  %215 = tail call float @llvm.amdgcn.rsq.f32(float %214)
  %216 = fmul float %212, %215
  %217 = fmul contract float %216, %216
  %218 = fmul contract float %216, %217
  %219 = fmul contract float %200, %218
  %220 = fadd contract float %194, %219
  %221 = fmul contract float %202, %218
  %222 = fadd contract float %196, %221
  %223 = fmul contract float %204, %218
  %224 = fadd contract float %198, %223
  %225 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !16
  %226 = fsub contract float %225, %66
  %227 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %228 = fsub contract float %227, %67
  %229 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 2), align 16, !tbaa !16
  %230 = fsub contract float %229, %68
  %231 = fmul contract float %226, %226
  %232 = fmul contract float %228, %228
  %233 = fadd contract float %231, %232
  %234 = fmul contract float %230, %230
  %235 = fadd contract float %233, %234
  %236 = fadd contract float %235, 0x3E112E0BE0000000
  %237 = fcmp olt float %236, 0x39B0000000000000
  %238 = select i1 %237, float 0x4310000000000000, float 1.000000e+00
  %239 = select i1 %237, float 0x4630000000000000, float 1.000000e+00
  %240 = fmul float %236, %239
  %241 = tail call float @llvm.amdgcn.rsq.f32(float %240)
  %242 = fmul float %238, %241
  %243 = fmul contract float %242, %242
  %244 = fmul contract float %242, %243
  %245 = fmul contract float %226, %244
  %246 = fadd contract float %220, %245
  %247 = fmul contract float %228, %244
  %248 = fadd contract float %222, %247
  %249 = fmul contract float %230, %244
  %250 = fadd contract float %224, %249
  %251 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %252 = fsub contract float %251, %66
  %253 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !16
  %254 = fsub contract float %253, %67
  %255 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %256 = fsub contract float %255, %68
  %257 = fmul contract float %252, %252
  %258 = fmul contract float %254, %254
  %259 = fadd contract float %257, %258
  %260 = fmul contract float %256, %256
  %261 = fadd contract float %259, %260
  %262 = fadd contract float %261, 0x3E112E0BE0000000
  %263 = fcmp olt float %262, 0x39B0000000000000
  %264 = select i1 %263, float 0x4310000000000000, float 1.000000e+00
  %265 = select i1 %263, float 0x4630000000000000, float 1.000000e+00
  %266 = fmul float %262, %265
  %267 = tail call float @llvm.amdgcn.rsq.f32(float %266)
  %268 = fmul float %264, %267
  %269 = fmul contract float %268, %268
  %270 = fmul contract float %268, %269
  %271 = fmul contract float %252, %270
  %272 = fadd contract float %246, %271
  %273 = fmul contract float %254, %270
  %274 = fadd contract float %248, %273
  %275 = fmul contract float %256, %270
  %276 = fadd contract float %250, %275
  %277 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0), align 16, !tbaa !16
  %278 = fsub contract float %277, %66
  %279 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %280 = fsub contract float %279, %67
  %281 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 2), align 8, !tbaa !16
  %282 = fsub contract float %281, %68
  %283 = fmul contract float %278, %278
  %284 = fmul contract float %280, %280
  %285 = fadd contract float %283, %284
  %286 = fmul contract float %282, %282
  %287 = fadd contract float %285, %286
  %288 = fadd contract float %287, 0x3E112E0BE0000000
  %289 = fcmp olt float %288, 0x39B0000000000000
  %290 = select i1 %289, float 0x4310000000000000, float 1.000000e+00
  %291 = select i1 %289, float 0x4630000000000000, float 1.000000e+00
  %292 = fmul float %288, %291
  %293 = tail call float @llvm.amdgcn.rsq.f32(float %292)
  %294 = fmul float %290, %293
  %295 = fmul contract float %294, %294
  %296 = fmul contract float %294, %295
  %297 = fmul contract float %278, %296
  %298 = fadd contract float %272, %297
  %299 = fmul contract float %280, %296
  %300 = fadd contract float %274, %299
  %301 = fmul contract float %282, %296
  %302 = fadd contract float %276, %301
  %303 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %304 = fsub contract float %303, %66
  %305 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 1), align 16, !tbaa !16
  %306 = fsub contract float %305, %67
  %307 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %308 = fsub contract float %307, %68
  %309 = fmul contract float %304, %304
  %310 = fmul contract float %306, %306
  %311 = fadd contract float %309, %310
  %312 = fmul contract float %308, %308
  %313 = fadd contract float %311, %312
  %314 = fadd contract float %313, 0x3E112E0BE0000000
  %315 = fcmp olt float %314, 0x39B0000000000000
  %316 = select i1 %315, float 0x4310000000000000, float 1.000000e+00
  %317 = select i1 %315, float 0x4630000000000000, float 1.000000e+00
  %318 = fmul float %314, %317
  %319 = tail call float @llvm.amdgcn.rsq.f32(float %318)
  %320 = fmul float %316, %319
  %321 = fmul contract float %320, %320
  %322 = fmul contract float %320, %321
  %323 = fmul contract float %304, %322
  %324 = fadd contract float %298, %323
  %325 = fmul contract float %306, %322
  %326 = fadd contract float %300, %325
  %327 = fmul contract float %308, %322
  %328 = fadd contract float %302, %327
  %329 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !16
  %330 = fsub contract float %329, %66
  %331 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %332 = fsub contract float %331, %67
  %333 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 2), align 16, !tbaa !16
  %334 = fsub contract float %333, %68
  %335 = fmul contract float %330, %330
  %336 = fmul contract float %332, %332
  %337 = fadd contract float %335, %336
  %338 = fmul contract float %334, %334
  %339 = fadd contract float %337, %338
  %340 = fadd contract float %339, 0x3E112E0BE0000000
  %341 = fcmp olt float %340, 0x39B0000000000000
  %342 = select i1 %341, float 0x4310000000000000, float 1.000000e+00
  %343 = select i1 %341, float 0x4630000000000000, float 1.000000e+00
  %344 = fmul float %340, %343
  %345 = tail call float @llvm.amdgcn.rsq.f32(float %344)
  %346 = fmul float %342, %345
  %347 = fmul contract float %346, %346
  %348 = fmul contract float %346, %347
  %349 = fmul contract float %330, %348
  %350 = fadd contract float %324, %349
  %351 = fmul contract float %332, %348
  %352 = fadd contract float %326, %351
  %353 = fmul contract float %334, %348
  %354 = fadd contract float %328, %353
  %355 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %356 = fsub contract float %355, %66
  %357 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !16
  %358 = fsub contract float %357, %67
  %359 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %360 = fsub contract float %359, %68
  %361 = fmul contract float %356, %356
  %362 = fmul contract float %358, %358
  %363 = fadd contract float %361, %362
  %364 = fmul contract float %360, %360
  %365 = fadd contract float %363, %364
  %366 = fadd contract float %365, 0x3E112E0BE0000000
  %367 = fcmp olt float %366, 0x39B0000000000000
  %368 = select i1 %367, float 0x4310000000000000, float 1.000000e+00
  %369 = select i1 %367, float 0x4630000000000000, float 1.000000e+00
  %370 = fmul float %366, %369
  %371 = tail call float @llvm.amdgcn.rsq.f32(float %370)
  %372 = fmul float %368, %371
  %373 = fmul contract float %372, %372
  %374 = fmul contract float %372, %373
  %375 = fmul contract float %356, %374
  %376 = fadd contract float %350, %375
  %377 = fmul contract float %358, %374
  %378 = fadd contract float %352, %377
  %379 = fmul contract float %360, %374
  %380 = fadd contract float %354, %379
  %381 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0), align 16, !tbaa !16
  %382 = fsub contract float %381, %66
  %383 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %384 = fsub contract float %383, %67
  %385 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 2), align 8, !tbaa !16
  %386 = fsub contract float %385, %68
  %387 = fmul contract float %382, %382
  %388 = fmul contract float %384, %384
  %389 = fadd contract float %387, %388
  %390 = fmul contract float %386, %386
  %391 = fadd contract float %389, %390
  %392 = fadd contract float %391, 0x3E112E0BE0000000
  %393 = fcmp olt float %392, 0x39B0000000000000
  %394 = select i1 %393, float 0x4310000000000000, float 1.000000e+00
  %395 = select i1 %393, float 0x4630000000000000, float 1.000000e+00
  %396 = fmul float %392, %395
  %397 = tail call float @llvm.amdgcn.rsq.f32(float %396)
  %398 = fmul float %394, %397
  %399 = fmul contract float %398, %398
  %400 = fmul contract float %398, %399
  %401 = fmul contract float %382, %400
  %402 = fadd contract float %376, %401
  %403 = fmul contract float %384, %400
  %404 = fadd contract float %378, %403
  %405 = fmul contract float %386, %400
  %406 = fadd contract float %380, %405
  %407 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %408 = fsub contract float %407, %66
  %409 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 1), align 16, !tbaa !16
  %410 = fsub contract float %409, %67
  %411 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %412 = fsub contract float %411, %68
  %413 = fmul contract float %408, %408
  %414 = fmul contract float %410, %410
  %415 = fadd contract float %413, %414
  %416 = fmul contract float %412, %412
  %417 = fadd contract float %415, %416
  %418 = fadd contract float %417, 0x3E112E0BE0000000
  %419 = fcmp olt float %418, 0x39B0000000000000
  %420 = select i1 %419, float 0x4310000000000000, float 1.000000e+00
  %421 = select i1 %419, float 0x4630000000000000, float 1.000000e+00
  %422 = fmul float %418, %421
  %423 = tail call float @llvm.amdgcn.rsq.f32(float %422)
  %424 = fmul float %420, %423
  %425 = fmul contract float %424, %424
  %426 = fmul contract float %424, %425
  %427 = fmul contract float %408, %426
  %428 = fadd contract float %402, %427
  %429 = fmul contract float %410, %426
  %430 = fadd contract float %404, %429
  %431 = fmul contract float %412, %426
  %432 = fadd contract float %406, %431
  %433 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !16
  %434 = fsub contract float %433, %66
  %435 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %436 = fsub contract float %435, %67
  %437 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 2), align 16, !tbaa !16
  %438 = fsub contract float %437, %68
  %439 = fmul contract float %434, %434
  %440 = fmul contract float %436, %436
  %441 = fadd contract float %439, %440
  %442 = fmul contract float %438, %438
  %443 = fadd contract float %441, %442
  %444 = fadd contract float %443, 0x3E112E0BE0000000
  %445 = fcmp olt float %444, 0x39B0000000000000
  %446 = select i1 %445, float 0x4310000000000000, float 1.000000e+00
  %447 = select i1 %445, float 0x4630000000000000, float 1.000000e+00
  %448 = fmul float %444, %447
  %449 = tail call float @llvm.amdgcn.rsq.f32(float %448)
  %450 = fmul float %446, %449
  %451 = fmul contract float %450, %450
  %452 = fmul contract float %450, %451
  %453 = fmul contract float %434, %452
  %454 = fadd contract float %428, %453
  %455 = fmul contract float %436, %452
  %456 = fadd contract float %430, %455
  %457 = fmul contract float %438, %452
  %458 = fadd contract float %432, %457
  %459 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %460 = fsub contract float %459, %66
  %461 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !16
  %462 = fsub contract float %461, %67
  %463 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %464 = fsub contract float %463, %68
  %465 = fmul contract float %460, %460
  %466 = fmul contract float %462, %462
  %467 = fadd contract float %465, %466
  %468 = fmul contract float %464, %464
  %469 = fadd contract float %467, %468
  %470 = fadd contract float %469, 0x3E112E0BE0000000
  %471 = fcmp olt float %470, 0x39B0000000000000
  %472 = select i1 %471, float 0x4310000000000000, float 1.000000e+00
  %473 = select i1 %471, float 0x4630000000000000, float 1.000000e+00
  %474 = fmul float %470, %473
  %475 = tail call float @llvm.amdgcn.rsq.f32(float %474)
  %476 = fmul float %472, %475
  %477 = fmul contract float %476, %476
  %478 = fmul contract float %476, %477
  %479 = fmul contract float %460, %478
  %480 = fadd contract float %454, %479
  %481 = fmul contract float %462, %478
  %482 = fadd contract float %456, %481
  %483 = fmul contract float %464, %478
  %484 = fadd contract float %458, %483
  %485 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0), align 16, !tbaa !16
  %486 = fsub contract float %485, %66
  %487 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %488 = fsub contract float %487, %67
  %489 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 2), align 8, !tbaa !16
  %490 = fsub contract float %489, %68
  %491 = fmul contract float %486, %486
  %492 = fmul contract float %488, %488
  %493 = fadd contract float %491, %492
  %494 = fmul contract float %490, %490
  %495 = fadd contract float %493, %494
  %496 = fadd contract float %495, 0x3E112E0BE0000000
  %497 = fcmp olt float %496, 0x39B0000000000000
  %498 = select i1 %497, float 0x4310000000000000, float 1.000000e+00
  %499 = select i1 %497, float 0x4630000000000000, float 1.000000e+00
  %500 = fmul float %496, %499
  %501 = tail call float @llvm.amdgcn.rsq.f32(float %500)
  %502 = fmul float %498, %501
  %503 = fmul contract float %502, %502
  %504 = fmul contract float %502, %503
  %505 = fmul contract float %486, %504
  %506 = fadd contract float %480, %505
  %507 = fmul contract float %488, %504
  %508 = fadd contract float %482, %507
  %509 = fmul contract float %490, %504
  %510 = fadd contract float %484, %509
  %511 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %512 = fsub contract float %511, %66
  %513 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 1), align 16, !tbaa !16
  %514 = fsub contract float %513, %67
  %515 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %516 = fsub contract float %515, %68
  %517 = fmul contract float %512, %512
  %518 = fmul contract float %514, %514
  %519 = fadd contract float %517, %518
  %520 = fmul contract float %516, %516
  %521 = fadd contract float %519, %520
  %522 = fadd contract float %521, 0x3E112E0BE0000000
  %523 = fcmp olt float %522, 0x39B0000000000000
  %524 = select i1 %523, float 0x4310000000000000, float 1.000000e+00
  %525 = select i1 %523, float 0x4630000000000000, float 1.000000e+00
  %526 = fmul float %522, %525
  %527 = tail call float @llvm.amdgcn.rsq.f32(float %526)
  %528 = fmul float %524, %527
  %529 = fmul contract float %528, %528
  %530 = fmul contract float %528, %529
  %531 = fmul contract float %512, %530
  %532 = fadd contract float %506, %531
  %533 = fmul contract float %514, %530
  %534 = fadd contract float %508, %533
  %535 = fmul contract float %516, %530
  %536 = fadd contract float %510, %535
  %537 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !16
  %538 = fsub contract float %537, %66
  %539 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %540 = fsub contract float %539, %67
  %541 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 2), align 16, !tbaa !16
  %542 = fsub contract float %541, %68
  %543 = fmul contract float %538, %538
  %544 = fmul contract float %540, %540
  %545 = fadd contract float %543, %544
  %546 = fmul contract float %542, %542
  %547 = fadd contract float %545, %546
  %548 = fadd contract float %547, 0x3E112E0BE0000000
  %549 = fcmp olt float %548, 0x39B0000000000000
  %550 = select i1 %549, float 0x4310000000000000, float 1.000000e+00
  %551 = select i1 %549, float 0x4630000000000000, float 1.000000e+00
  %552 = fmul float %548, %551
  %553 = tail call float @llvm.amdgcn.rsq.f32(float %552)
  %554 = fmul float %550, %553
  %555 = fmul contract float %554, %554
  %556 = fmul contract float %554, %555
  %557 = fmul contract float %538, %556
  %558 = fadd contract float %532, %557
  %559 = fmul contract float %540, %556
  %560 = fadd contract float %534, %559
  %561 = fmul contract float %542, %556
  %562 = fadd contract float %536, %561
  %563 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %564 = fsub contract float %563, %66
  %565 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !16
  %566 = fsub contract float %565, %67
  %567 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %568 = fsub contract float %567, %68
  %569 = fmul contract float %564, %564
  %570 = fmul contract float %566, %566
  %571 = fadd contract float %569, %570
  %572 = fmul contract float %568, %568
  %573 = fadd contract float %571, %572
  %574 = fadd contract float %573, 0x3E112E0BE0000000
  %575 = fcmp olt float %574, 0x39B0000000000000
  %576 = select i1 %575, float 0x4310000000000000, float 1.000000e+00
  %577 = select i1 %575, float 0x4630000000000000, float 1.000000e+00
  %578 = fmul float %574, %577
  %579 = tail call float @llvm.amdgcn.rsq.f32(float %578)
  %580 = fmul float %576, %579
  %581 = fmul contract float %580, %580
  %582 = fmul contract float %580, %581
  %583 = fmul contract float %564, %582
  %584 = fadd contract float %558, %583
  %585 = fmul contract float %566, %582
  %586 = fadd contract float %560, %585
  %587 = fmul contract float %568, %582
  %588 = fadd contract float %562, %587
  %589 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0), align 16, !tbaa !16
  %590 = fsub contract float %589, %66
  %591 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 20, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %592 = fsub contract float %591, %67
  %593 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 20, i32 0, i32 0, i32 0, i32 0, i32 2), align 8, !tbaa !16
  %594 = fsub contract float %593, %68
  %595 = fmul contract float %590, %590
  %596 = fmul contract float %592, %592
  %597 = fadd contract float %595, %596
  %598 = fmul contract float %594, %594
  %599 = fadd contract float %597, %598
  %600 = fadd contract float %599, 0x3E112E0BE0000000
  %601 = fcmp olt float %600, 0x39B0000000000000
  %602 = select i1 %601, float 0x4310000000000000, float 1.000000e+00
  %603 = select i1 %601, float 0x4630000000000000, float 1.000000e+00
  %604 = fmul float %600, %603
  %605 = tail call float @llvm.amdgcn.rsq.f32(float %604)
  %606 = fmul float %602, %605
  %607 = fmul contract float %606, %606
  %608 = fmul contract float %606, %607
  %609 = fmul contract float %590, %608
  %610 = fadd contract float %584, %609
  %611 = fmul contract float %592, %608
  %612 = fadd contract float %586, %611
  %613 = fmul contract float %594, %608
  %614 = fadd contract float %588, %613
  %615 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %616 = fsub contract float %615, %66
  %617 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 1), align 16, !tbaa !16
  %618 = fsub contract float %617, %67
  %619 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %620 = fsub contract float %619, %68
  %621 = fmul contract float %616, %616
  %622 = fmul contract float %618, %618
  %623 = fadd contract float %621, %622
  %624 = fmul contract float %620, %620
  %625 = fadd contract float %623, %624
  %626 = fadd contract float %625, 0x3E112E0BE0000000
  %627 = fcmp olt float %626, 0x39B0000000000000
  %628 = select i1 %627, float 0x4310000000000000, float 1.000000e+00
  %629 = select i1 %627, float 0x4630000000000000, float 1.000000e+00
  %630 = fmul float %626, %629
  %631 = tail call float @llvm.amdgcn.rsq.f32(float %630)
  %632 = fmul float %628, %631
  %633 = fmul contract float %632, %632
  %634 = fmul contract float %632, %633
  %635 = fmul contract float %616, %634
  %636 = fadd contract float %610, %635
  %637 = fmul contract float %618, %634
  %638 = fadd contract float %612, %637
  %639 = fmul contract float %620, %634
  %640 = fadd contract float %614, %639
  %641 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 22, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !16
  %642 = fsub contract float %641, %66
  %643 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 22, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %644 = fsub contract float %643, %67
  %645 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 22, i32 0, i32 0, i32 0, i32 0, i32 2), align 16, !tbaa !16
  %646 = fsub contract float %645, %68
  %647 = fmul contract float %642, %642
  %648 = fmul contract float %644, %644
  %649 = fadd contract float %647, %648
  %650 = fmul contract float %646, %646
  %651 = fadd contract float %649, %650
  %652 = fadd contract float %651, 0x3E112E0BE0000000
  %653 = fcmp olt float %652, 0x39B0000000000000
  %654 = select i1 %653, float 0x4310000000000000, float 1.000000e+00
  %655 = select i1 %653, float 0x4630000000000000, float 1.000000e+00
  %656 = fmul float %652, %655
  %657 = tail call float @llvm.amdgcn.rsq.f32(float %656)
  %658 = fmul float %654, %657
  %659 = fmul contract float %658, %658
  %660 = fmul contract float %658, %659
  %661 = fmul contract float %642, %660
  %662 = fadd contract float %636, %661
  %663 = fmul contract float %644, %660
  %664 = fadd contract float %638, %663
  %665 = fmul contract float %646, %660
  %666 = fadd contract float %640, %665
  %667 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 23, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %668 = fsub contract float %667, %66
  %669 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 23, i32 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !16
  %670 = fsub contract float %669, %67
  %671 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 23, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %672 = fsub contract float %671, %68
  %673 = fmul contract float %668, %668
  %674 = fmul contract float %670, %670
  %675 = fadd contract float %673, %674
  %676 = fmul contract float %672, %672
  %677 = fadd contract float %675, %676
  %678 = fadd contract float %677, 0x3E112E0BE0000000
  %679 = fcmp olt float %678, 0x39B0000000000000
  %680 = select i1 %679, float 0x4310000000000000, float 1.000000e+00
  %681 = select i1 %679, float 0x4630000000000000, float 1.000000e+00
  %682 = fmul float %678, %681
  %683 = tail call float @llvm.amdgcn.rsq.f32(float %682)
  %684 = fmul float %680, %683
  %685 = fmul contract float %684, %684
  %686 = fmul contract float %684, %685
  %687 = fmul contract float %668, %686
  %688 = fadd contract float %662, %687
  %689 = fmul contract float %670, %686
  %690 = fadd contract float %664, %689
  %691 = fmul contract float %672, %686
  %692 = fadd contract float %666, %691
  %693 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0), align 16, !tbaa !16
  %694 = fsub contract float %693, %66
  %695 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %696 = fsub contract float %695, %67
  %697 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 2), align 8, !tbaa !16
  %698 = fsub contract float %697, %68
  %699 = fmul contract float %694, %694
  %700 = fmul contract float %696, %696
  %701 = fadd contract float %699, %700
  %702 = fmul contract float %698, %698
  %703 = fadd contract float %701, %702
  %704 = fadd contract float %703, 0x3E112E0BE0000000
  %705 = fcmp olt float %704, 0x39B0000000000000
  %706 = select i1 %705, float 0x4310000000000000, float 1.000000e+00
  %707 = select i1 %705, float 0x4630000000000000, float 1.000000e+00
  %708 = fmul float %704, %707
  %709 = tail call float @llvm.amdgcn.rsq.f32(float %708)
  %710 = fmul float %706, %709
  %711 = fmul contract float %710, %710
  %712 = fmul contract float %710, %711
  %713 = fmul contract float %694, %712
  %714 = fadd contract float %688, %713
  %715 = fmul contract float %696, %712
  %716 = fadd contract float %690, %715
  %717 = fmul contract float %698, %712
  %718 = fadd contract float %692, %717
  %719 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %720 = fsub contract float %719, %66
  %721 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 1), align 16, !tbaa !16
  %722 = fsub contract float %721, %67
  %723 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %724 = fsub contract float %723, %68
  %725 = fmul contract float %720, %720
  %726 = fmul contract float %722, %722
  %727 = fadd contract float %725, %726
  %728 = fmul contract float %724, %724
  %729 = fadd contract float %727, %728
  %730 = fadd contract float %729, 0x3E112E0BE0000000
  %731 = fcmp olt float %730, 0x39B0000000000000
  %732 = select i1 %731, float 0x4310000000000000, float 1.000000e+00
  %733 = select i1 %731, float 0x4630000000000000, float 1.000000e+00
  %734 = fmul float %730, %733
  %735 = tail call float @llvm.amdgcn.rsq.f32(float %734)
  %736 = fmul float %732, %735
  %737 = fmul contract float %736, %736
  %738 = fmul contract float %736, %737
  %739 = fmul contract float %720, %738
  %740 = fadd contract float %714, %739
  %741 = fmul contract float %722, %738
  %742 = fadd contract float %716, %741
  %743 = fmul contract float %724, %738
  %744 = fadd contract float %718, %743
  %745 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 26, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !16
  %746 = fsub contract float %745, %66
  %747 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 26, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %748 = fsub contract float %747, %67
  %749 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 26, i32 0, i32 0, i32 0, i32 0, i32 2), align 16, !tbaa !16
  %750 = fsub contract float %749, %68
  %751 = fmul contract float %746, %746
  %752 = fmul contract float %748, %748
  %753 = fadd contract float %751, %752
  %754 = fmul contract float %750, %750
  %755 = fadd contract float %753, %754
  %756 = fadd contract float %755, 0x3E112E0BE0000000
  %757 = fcmp olt float %756, 0x39B0000000000000
  %758 = select i1 %757, float 0x4310000000000000, float 1.000000e+00
  %759 = select i1 %757, float 0x4630000000000000, float 1.000000e+00
  %760 = fmul float %756, %759
  %761 = tail call float @llvm.amdgcn.rsq.f32(float %760)
  %762 = fmul float %758, %761
  %763 = fmul contract float %762, %762
  %764 = fmul contract float %762, %763
  %765 = fmul contract float %746, %764
  %766 = fadd contract float %740, %765
  %767 = fmul contract float %748, %764
  %768 = fadd contract float %742, %767
  %769 = fmul contract float %750, %764
  %770 = fadd contract float %744, %769
  %771 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 27, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %772 = fsub contract float %771, %66
  %773 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 27, i32 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !16
  %774 = fsub contract float %773, %67
  %775 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 27, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %776 = fsub contract float %775, %68
  %777 = fmul contract float %772, %772
  %778 = fmul contract float %774, %774
  %779 = fadd contract float %777, %778
  %780 = fmul contract float %776, %776
  %781 = fadd contract float %779, %780
  %782 = fadd contract float %781, 0x3E112E0BE0000000
  %783 = fcmp olt float %782, 0x39B0000000000000
  %784 = select i1 %783, float 0x4310000000000000, float 1.000000e+00
  %785 = select i1 %783, float 0x4630000000000000, float 1.000000e+00
  %786 = fmul float %782, %785
  %787 = tail call float @llvm.amdgcn.rsq.f32(float %786)
  %788 = fmul float %784, %787
  %789 = fmul contract float %788, %788
  %790 = fmul contract float %788, %789
  %791 = fmul contract float %772, %790
  %792 = fadd contract float %766, %791
  %793 = fmul contract float %774, %790
  %794 = fadd contract float %768, %793
  %795 = fmul contract float %776, %790
  %796 = fadd contract float %770, %795
  %797 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 28, i32 0, i32 0, i32 0, i32 0, i32 0), align 16, !tbaa !16
  %798 = fsub contract float %797, %66
  %799 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 28, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %800 = fsub contract float %799, %67
  %801 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 28, i32 0, i32 0, i32 0, i32 0, i32 2), align 8, !tbaa !16
  %802 = fsub contract float %801, %68
  %803 = fmul contract float %798, %798
  %804 = fmul contract float %800, %800
  %805 = fadd contract float %803, %804
  %806 = fmul contract float %802, %802
  %807 = fadd contract float %805, %806
  %808 = fadd contract float %807, 0x3E112E0BE0000000
  %809 = fcmp olt float %808, 0x39B0000000000000
  %810 = select i1 %809, float 0x4310000000000000, float 1.000000e+00
  %811 = select i1 %809, float 0x4630000000000000, float 1.000000e+00
  %812 = fmul float %808, %811
  %813 = tail call float @llvm.amdgcn.rsq.f32(float %812)
  %814 = fmul float %810, %813
  %815 = fmul contract float %814, %814
  %816 = fmul contract float %814, %815
  %817 = fmul contract float %798, %816
  %818 = fadd contract float %792, %817
  %819 = fmul contract float %800, %816
  %820 = fadd contract float %794, %819
  %821 = fmul contract float %802, %816
  %822 = fadd contract float %796, %821
  %823 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 29, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %824 = fsub contract float %823, %66
  %825 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 29, i32 0, i32 0, i32 0, i32 0, i32 1), align 16, !tbaa !16
  %826 = fsub contract float %825, %67
  %827 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 29, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %828 = fsub contract float %827, %68
  %829 = fmul contract float %824, %824
  %830 = fmul contract float %826, %826
  %831 = fadd contract float %829, %830
  %832 = fmul contract float %828, %828
  %833 = fadd contract float %831, %832
  %834 = fadd contract float %833, 0x3E112E0BE0000000
  %835 = fcmp olt float %834, 0x39B0000000000000
  %836 = select i1 %835, float 0x4310000000000000, float 1.000000e+00
  %837 = select i1 %835, float 0x4630000000000000, float 1.000000e+00
  %838 = fmul float %834, %837
  %839 = tail call float @llvm.amdgcn.rsq.f32(float %838)
  %840 = fmul float %836, %839
  %841 = fmul contract float %840, %840
  %842 = fmul contract float %840, %841
  %843 = fmul contract float %824, %842
  %844 = fadd contract float %818, %843
  %845 = fmul contract float %826, %842
  %846 = fadd contract float %820, %845
  %847 = fmul contract float %828, %842
  %848 = fadd contract float %822, %847
  %849 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 30, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !16
  %850 = fsub contract float %849, %66
  %851 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 30, i32 0, i32 0, i32 0, i32 0, i32 1), align 4, !tbaa !16
  %852 = fsub contract float %851, %67
  %853 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 30, i32 0, i32 0, i32 0, i32 0, i32 2), align 16, !tbaa !16
  %854 = fsub contract float %853, %68
  %855 = fmul contract float %850, %850
  %856 = fmul contract float %852, %852
  %857 = fadd contract float %855, %856
  %858 = fmul contract float %854, %854
  %859 = fadd contract float %857, %858
  %860 = fadd contract float %859, 0x3E112E0BE0000000
  %861 = fcmp olt float %860, 0x39B0000000000000
  %862 = select i1 %861, float 0x4310000000000000, float 1.000000e+00
  %863 = select i1 %861, float 0x4630000000000000, float 1.000000e+00
  %864 = fmul float %860, %863
  %865 = tail call float @llvm.amdgcn.rsq.f32(float %864)
  %866 = fmul float %862, %865
  %867 = fmul contract float %866, %866
  %868 = fmul contract float %866, %867
  %869 = fmul contract float %850, %868
  %870 = fadd contract float %844, %869
  %871 = fmul contract float %852, %868
  %872 = fadd contract float %846, %871
  %873 = fmul contract float %854, %868
  %874 = fadd contract float %848, %873
  %875 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 31, i32 0, i32 0, i32 0, i32 0, i32 0), align 4, !tbaa !16
  %876 = fsub contract float %875, %66
  %877 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 31, i32 0, i32 0, i32 0, i32 0, i32 1), align 8, !tbaa !16
  %878 = fsub contract float %877, %67
  %879 = load float, float addrspace(3)* getelementptr inbounds ([32 x %struct.HIP_vector_type.0], [32 x %struct.HIP_vector_type.0] addrspace(3)* @_ZZ18calculateBodyForceP15HIP_vector_typeIfLj4EES1_fiE15shared_position, i32 0, i32 31, i32 0, i32 0, i32 0, i32 0, i32 2), align 4, !tbaa !16
  %880 = fsub contract float %879, %68
  %881 = fmul contract float %876, %876
  %882 = fmul contract float %878, %878
  %883 = fadd contract float %881, %882
  %884 = fmul contract float %880, %880
  %885 = fadd contract float %883, %884
  %886 = fadd contract float %885, 0x3E112E0BE0000000
  %887 = fcmp olt float %886, 0x39B0000000000000
  %888 = select i1 %887, float 0x4310000000000000, float 1.000000e+00
  %889 = select i1 %887, float 0x4630000000000000, float 1.000000e+00
  %890 = fmul float %886, %889
  %891 = tail call float @llvm.amdgcn.rsq.f32(float %890)
  %892 = fmul float %888, %891
  %893 = fmul contract float %892, %892
  %894 = fmul contract float %892, %893
  %895 = fmul contract float %876, %894
  %896 = fadd contract float %870, %895
  %897 = fmul contract float %878, %894
  %898 = fadd contract float %872, %897
  %899 = fmul contract float %880, %894
  %900 = fadd contract float %874, %899
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %901 = add nuw nsw i32 %56, 1
  %902 = icmp eq i32 %901, %23
  br i1 %902, label %35, label %52, !llvm.loop !19

903:                                              ; preds = %35, %4
  ret void
}

; Function Attrs: convergent mustprogress nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.amdgcn.rsq.f32(float) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #2

attributes #0 = { convergent mustprogress norecurse nounwind "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{i16 1, i16 1025}
!5 = !{}
!6 = !{!7, !11, i64 12}
!7 = !{!"hsa_kernel_dispatch_packet_s", !8, i64 0, !8, i64 2, !8, i64 4, !8, i64 6, !8, i64 8, !8, i64 10, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !12, i64 32, !13, i64 40, !12, i64 48, !14, i64 56}
!8 = !{!"short", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C/C++ TBAA"}
!11 = !{!"int", !9, i64 0}
!12 = !{!"long", !9, i64 0}
!13 = !{!"any pointer", !9, i64 0}
!14 = !{!"hsa_signal_s", !12, i64 0}
!15 = !{i32 0, i32 1024}
!16 = !{!17, !17, i64 0}
!17 = !{!"omnipotent char", !18, i64 0}
!18 = !{!"Simple C++ TBAA"}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.mustprogress"}
