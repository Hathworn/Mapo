digraph "CFG for '_Z4evenPjj' function" {
	label="CFG for '_Z4evenPjj' function";

	Node0x56585d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = mul i32 %3, %8\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = add i32 %10, %1\l  %12 = add i32 %11, %9\l  %13 = shl i32 %12, 1\l  %14 = add i32 %13, 8\l  %15 = add i32 %13, 11\l  %16 = shl i32 %14, 1\l  %17 = add i32 %16, -4\l  %18 = icmp ule i32 %15, %17\l  %19 = mul i32 %15, %14\l  %20 = icmp ult i32 %19, 100000000\l  %21 = select i1 %18, i1 %20, i1 false\l  br i1 %21, label %22, label %47\l|{<s0>T|<s1>F}}"];
	Node0x56585d0:s0 -> Node0x565abb0;
	Node0x56585d0:s1 -> Node0x565ac40;
	Node0x565abb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%22:\l22:                                               \l  %23 = udiv i32 99999999, %14\l  %24 = add i32 %13, 9\l  %25 = add i32 %13, 7\l  br label %26\l}"];
	Node0x565abb0 -> Node0x565afc0;
	Node0x565afc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%26:\l26:                                               \l  %27 = phi i32 [ %17, %22 ], [ %33, %31 ]\l  %28 = phi i32 [ %15, %22 ], [ %32, %31 ]\l  %29 = tail call i32 @llvm.umin.i32(i32 %27, i32 %23)\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %30 = icmp ugt i32 %28, %29\l  br i1 %30, label %31, label %38\l|{<s0>T|<s1>F}}"];
	Node0x565afc0:s0 -> Node0x565b0b0;
	Node0x565afc0:s1 -> Node0x565b8f0;
	Node0x565b0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%31:\l31:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %32 = add i32 %24, %28\l  %33 = add i32 %25, %27\l  %34 = icmp ule i32 %32, %33\l  %35 = mul i32 %32, %14\l  %36 = icmp ult i32 %35, 100000000\l  %37 = select i1 %34, i1 %36, i1 false\l  br i1 %37, label %26, label %47, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x565b0b0:s0 -> Node0x565afc0;
	Node0x565b0b0:s1 -> Node0x565ac40;
	Node0x565b8f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i32 [ %45, %38 ], [ %28, %26 ]\l  %40 = mul i32 %39, %14\l  %41 = lshr exact i32 %40, 1\l  %42 = zext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %42\l  %44 = tail call i32 @llvm.amdgcn.atomic.inc.i32.p1i32(i32 addrspace(1)* %43,\l... i32 -1, i32 2, i32 4, i1 false)\l  %45 = add i32 %39, 1\l  %46 = icmp ugt i32 %45, %29\l  br i1 %46, label %31, label %38, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x565b8f0:s0 -> Node0x565b0b0;
	Node0x565b8f0:s1 -> Node0x565b8f0;
	Node0x565ac40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%47:\l47:                                               \l  ret void\l}"];
}
