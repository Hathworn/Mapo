digraph "CFG for '_Z3oddPjj' function" {
	label="CFG for '_Z3oddPjj' function";

	Node0x4f6f5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = mul i32 %3, %8\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = add i32 %10, %1\l  %12 = add i32 %11, %9\l  %13 = shl i32 %12, 1\l  %14 = add i32 %13, 7\l  %15 = add i32 %13, 10\l  %16 = shl i32 %14, 1\l  %17 = add i32 %16, -4\l  %18 = icmp ule i32 %15, %17\l  %19 = mul i32 %15, %14\l  %20 = icmp ult i32 %19, 100000000\l  %21 = select i1 %18, i1 %20, i1 false\l  br i1 %21, label %22, label %48\l|{<s0>T|<s1>F}}"];
	Node0x4f6f5f0:s0 -> Node0x4f71bd0;
	Node0x4f6f5f0:s1 -> Node0x4f71c60;
	Node0x4f71bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%22:\l22:                                               \l  %23 = udiv i32 99999999, %14\l  %24 = add i32 %13, 8\l  %25 = add i32 %13, 6\l  br label %26\l}"];
	Node0x4f71bd0 -> Node0x4f71fe0;
	Node0x4f71fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%26:\l26:                                               \l  %27 = phi i32 [ %17, %22 ], [ %35, %33 ]\l  %28 = phi i32 [ %15, %22 ], [ %34, %33 ]\l  %29 = tail call i32 @llvm.umin.i32(i32 %27, i32 %23)\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %30 = lshr exact i32 %28, 1\l  %31 = lshr i32 %29, 1\l  %32 = icmp ugt i32 %30, %31\l  br i1 %32, label %33, label %40\l|{<s0>T|<s1>F}}"];
	Node0x4f71fe0:s0 -> Node0x4f720d0;
	Node0x4f71fe0:s1 -> Node0x4f717d0;
	Node0x4f720d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%33:\l33:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %34 = add i32 %24, %28\l  %35 = add i32 %25, %27\l  %36 = icmp ule i32 %34, %35\l  %37 = mul i32 %34, %14\l  %38 = icmp ult i32 %37, 100000000\l  %39 = select i1 %36, i1 %38, i1 false\l  br i1 %39, label %26, label %48, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x4f720d0:s0 -> Node0x4f71fe0;
	Node0x4f720d0:s1 -> Node0x4f71c60;
	Node0x4f717d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ %46, %40 ], [ %30, %26 ]\l  %42 = mul i32 %41, %14\l  %43 = zext i32 %42 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %43\l  %45 = tail call i32 @llvm.amdgcn.atomic.inc.i32.p1i32(i32 addrspace(1)* %44,\l... i32 -1, i32 2, i32 4, i1 false)\l  %46 = add nuw nsw i32 %41, 1\l  %47 = icmp ult i32 %41, %31\l  br i1 %47, label %40, label %33, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x4f717d0:s0 -> Node0x4f717d0;
	Node0x4f717d0:s1 -> Node0x4f720d0;
	Node0x4f71c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%48:\l48:                                               \l  ret void\l}"];
}
