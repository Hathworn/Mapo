digraph "CFG for '_Z36cunnx_WindowGate_updateOutput_kernelPfS_S_S_PKfS1_iiiffi' function" {
	label="CFG for '_Z36cunnx_WindowGate_updateOutput_kernelPfS_S_S_PKfS1_iiiffi' function";

	Node0x5e2f600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = mul i32 %14, %6\l  %16 = zext i32 %15 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %4, i64 %16\l  %18 = mul i32 %14, %8\l  %19 = zext i32 %18 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %0, i64 %19\l  %21 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ36cunnx_WindowGate_updateOutput_kernelPfS_S_S_PKfS1_iiiffiE6buffer, i32\l... 0, i32 %13\l  store float 0.000000e+00, float addrspace(3)* %21, align 4, !tbaa !5\l  %22 = icmp ult i32 %13, %6\l  br i1 %22, label %23, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5e2f600:s0 -> Node0x5e324e0;
	Node0x5e2f600:s1 -> Node0x5e32570;
	Node0x5e324e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%23:\l23:                                               \l  %24 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %25 = getelementptr i8, i8 addrspace(4)* %24, i64 4\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 4, !range !9, !invariant.load\l... !10\l  %28 = zext i16 %27 to i32\l  br label %32\l}"];
	Node0x5e324e0 -> Node0x5e32da0;
	Node0x5e32ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%29:\l29:                                               \l  store float %41, float addrspace(3)* %21, align 4, !tbaa !5\l  br label %30\l}"];
	Node0x5e32ea0 -> Node0x5e32570;
	Node0x5e32570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%30:\l30:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %31 = icmp ult i32 %13, 64\l  br i1 %31, label %44, label %50\l|{<s0>T|<s1>F}}"];
	Node0x5e32570:s0 -> Node0x5e339a0;
	Node0x5e32570:s1 -> Node0x5e33a30;
	Node0x5e32da0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = phi float [ 0.000000e+00, %23 ], [ %41, %32 ]\l  %34 = phi i32 [ %13, %23 ], [ %42, %32 ]\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %17, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !5,\l... !amdgpu.noclobber !10\l  %38 = add nuw i32 %34, 1\l  %39 = uitofp i32 %38 to float\l  %40 = fmul contract float %37, %39\l  %41 = fadd contract float %33, %40\l  %42 = add i32 %34, %28\l  %43 = icmp ult i32 %42, %6\l  br i1 %43, label %32, label %29, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5e32da0:s0 -> Node0x5e32da0;
	Node0x5e32da0:s1 -> Node0x5e32ea0;
	Node0x5e339a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%44:\l44:                                               \l  %45 = add nuw nsw i32 %13, 64\l  %46 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ36cunnx_WindowGate_updateOutput_kernelPfS_S_S_PKfS1_iiiffiE6buffer, i32\l... 0, i32 %45\l  %47 = load float, float addrspace(3)* %46, align 4, !tbaa !5\l  %48 = load float, float addrspace(3)* %21, align 4, !tbaa !5\l  %49 = fadd contract float %47, %48\l  store float %49, float addrspace(3)* %21, align 4, !tbaa !5\l  br label %50\l}"];
	Node0x5e339a0 -> Node0x5e33a30;
	Node0x5e33a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%50:\l50:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %51 = icmp ult i32 %13, 32\l  br i1 %51, label %52, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5e33a30:s0 -> Node0x5e35120;
	Node0x5e33a30:s1 -> Node0x5e35170;
	Node0x5e35120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%52:\l52:                                               \l  %53 = add nuw nsw i32 %13, 32\l  %54 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ36cunnx_WindowGate_updateOutput_kernelPfS_S_S_PKfS1_iiiffiE6buffer, i32\l... 0, i32 %53\l  %55 = load float, float addrspace(3)* %54, align 4, !tbaa !5\l  %56 = load float, float addrspace(3)* %21, align 4, !tbaa !5\l  %57 = fadd contract float %55, %56\l  store float %57, float addrspace(3)* %21, align 4, !tbaa !5\l  br label %58\l}"];
	Node0x5e35120 -> Node0x5e35170;
	Node0x5e35170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%58:\l58:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %59 = icmp ult i32 %13, 16\l  br i1 %59, label %60, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5e35170:s0 -> Node0x5e35830;
	Node0x5e35170:s1 -> Node0x5e35880;
	Node0x5e35830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%60:\l60:                                               \l  %61 = add nuw nsw i32 %13, 16\l  %62 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ36cunnx_WindowGate_updateOutput_kernelPfS_S_S_PKfS1_iiiffiE6buffer, i32\l... 0, i32 %61\l  %63 = load float, float addrspace(3)* %62, align 4, !tbaa !5\l  %64 = load float, float addrspace(3)* %21, align 4, !tbaa !5\l  %65 = fadd contract float %63, %64\l  store float %65, float addrspace(3)* %21, align 4, !tbaa !5\l  br label %66\l}"];
	Node0x5e35830 -> Node0x5e35880;
	Node0x5e35880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%66:\l66:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %67 = icmp ult i32 %13, 8\l  br i1 %67, label %68, label %74\l|{<s0>T|<s1>F}}"];
	Node0x5e35880:s0 -> Node0x5e361a0;
	Node0x5e35880:s1 -> Node0x5e361f0;
	Node0x5e361a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%68:\l68:                                               \l  %69 = add nuw nsw i32 %13, 8\l  %70 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ36cunnx_WindowGate_updateOutput_kernelPfS_S_S_PKfS1_iiiffiE6buffer, i32\l... 0, i32 %69\l  %71 = load float, float addrspace(3)* %70, align 4, !tbaa !5\l  %72 = load float, float addrspace(3)* %21, align 4, !tbaa !5\l  %73 = fadd contract float %71, %72\l  store float %73, float addrspace(3)* %21, align 4, !tbaa !5\l  br label %74\l}"];
	Node0x5e361a0 -> Node0x5e361f0;
	Node0x5e361f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%74:\l74:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %75 = icmp ult i32 %13, 4\l  br i1 %75, label %76, label %82\l|{<s0>T|<s1>F}}"];
	Node0x5e361f0:s0 -> Node0x5e368b0;
	Node0x5e361f0:s1 -> Node0x5e36900;
	Node0x5e368b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%76:\l76:                                               \l  %77 = add nuw nsw i32 %13, 4\l  %78 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ36cunnx_WindowGate_updateOutput_kernelPfS_S_S_PKfS1_iiiffiE6buffer, i32\l... 0, i32 %77\l  %79 = load float, float addrspace(3)* %78, align 4, !tbaa !5\l  %80 = load float, float addrspace(3)* %21, align 4, !tbaa !5\l  %81 = fadd contract float %79, %80\l  store float %81, float addrspace(3)* %21, align 4, !tbaa !5\l  br label %82\l}"];
	Node0x5e368b0 -> Node0x5e36900;
	Node0x5e36900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%82:\l82:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %83 = icmp ult i32 %13, 2\l  br i1 %83, label %84, label %90\l|{<s0>T|<s1>F}}"];
	Node0x5e36900:s0 -> Node0x5e36ff0;
	Node0x5e36900:s1 -> Node0x5e37040;
	Node0x5e36ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%84:\l84:                                               \l  %85 = add nuw nsw i32 %13, 2\l  %86 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ36cunnx_WindowGate_updateOutput_kernelPfS_S_S_PKfS1_iiiffiE6buffer, i32\l... 0, i32 %85\l  %87 = load float, float addrspace(3)* %86, align 4, !tbaa !5\l  %88 = load float, float addrspace(3)* %21, align 4, !tbaa !5\l  %89 = fadd contract float %87, %88\l  store float %89, float addrspace(3)* %21, align 4, !tbaa !5\l  br label %90\l}"];
	Node0x5e36ff0 -> Node0x5e37040;
	Node0x5e37040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%90:\l90:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %91 = icmp eq i32 %13, 0\l  br i1 %91, label %92, label %132\l|{<s0>T|<s1>F}}"];
	Node0x5e37040:s0 -> Node0x5e37730;
	Node0x5e37040:s1 -> Node0x5e37780;
	Node0x5e37730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%92:\l92:                                               \l  %93 = add nuw nsw i32 %13, 1\l  %94 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ36cunnx_WindowGate_updateOutput_kernelPfS_S_S_PKfS1_iiiffiE6buffer, i32\l... 0, i32 %93\l  %95 = load float, float addrspace(3)* %94, align 4, !tbaa !5\l  %96 = load float, float addrspace(3)* %21, align 4, !tbaa !5\l  %97 = fadd contract float %95, %96\l  store float %97, float addrspace(3)* %21, align 4, !tbaa !5\l  %98 = load float, float addrspace(3)* getelementptr inbounds ([128 x float],\l... [128 x float] addrspace(3)*\l... @_ZZ36cunnx_WindowGate_updateOutput_kernelPfS_S_S_PKfS1_iiiffiE6buffer, i32\l... 0, i32 0), align 16, !tbaa !5\l  %99 = sitofp i32 %6 to float\l  %100 = fdiv contract float %98, %99\l  %101 = zext i32 %14 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %2, i64 %101\l  store float %100, float addrspace(1)* %102, align 4, !tbaa !5\l  %103 = icmp eq i32 %11, 0\l  br i1 %103, label %110, label %104\l|{<s0>T|<s1>F}}"];
	Node0x5e37730:s0 -> Node0x5e38210;
	Node0x5e37730:s1 -> Node0x5e38260;
	Node0x5e38260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%104:\l104:                                              \l  %105 = getelementptr inbounds float, float addrspace(1)* %5, i64 %101\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !5\l  %107 = fadd contract float %100, %106\l  %108 = tail call float @llvm.maxnum.f32(float %107, float 0.000000e+00)\l  %109 = tail call float @llvm.minnum.f32(float %108, float 1.000000e+00)\l  br label %110\l}"];
	Node0x5e38260 -> Node0x5e38210;
	Node0x5e38210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%110:\l110:                                              \l  %111 = phi float [ %109, %104 ], [ %100, %92 ]\l  %112 = sitofp i32 %7 to float\l  %113 = fmul contract float %111, %112\l  %114 = fpext float %113 to double\l  %115 = sitofp i32 %8 to float\l  %116 = fpext float %115 to double\l  %117 = fmul contract double %116, 5.000000e-01\l  %118 = fsub contract double %114, %117\l  %119 = fptrunc double %118 to float\l  %120 = add i32 %7, 1\l  %121 = sub i32 %120, %8\l  %122 = sitofp i32 %121 to float\l  %123 = tail call float @llvm.minnum.f32(float %119, float %122)\l  %124 = tail call float @llvm.maxnum.f32(float %123, float 1.000000e+00)\l  %125 = tail call float @llvm.ceil.f32(float %124)\l  %126 = fadd contract float %125, -1.000000e+00\l  %127 = fsub contract float %113, %126\l  %128 = fptosi float %125 to i32\l  %129 = sitofp i32 %128 to float\l  %130 = getelementptr inbounds float, float addrspace(1)* %3, i64 %101\l  store float %129, float addrspace(1)* %130, align 4, !tbaa !5\l  %131 = getelementptr inbounds float, float addrspace(1)* %1, i64 %101\l  store float %127, float addrspace(1)* %131, align 4, !tbaa !5\l  store float %127, float addrspace(3)* getelementptr inbounds ([128 x float],\l... [128 x float] addrspace(3)*\l... @_ZZ36cunnx_WindowGate_updateOutput_kernelPfS_S_S_PKfS1_iiiffiE6buffer, i32\l... 0, i32 0), align 16, !tbaa !5\l  br label %132\l}"];
	Node0x5e38210 -> Node0x5e37780;
	Node0x5e37780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%132:\l132:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %133 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ36cunnx_WindowGate_updateOutput_kernelPfS_S_S_PKfS1_iiiffiE6buffer, i32\l... 0, i32 0), align 16, !tbaa !5\l  %134 = icmp slt i32 %13, %8\l  br i1 %134, label %135, label %141\l|{<s0>T|<s1>F}}"];
	Node0x5e37780:s0 -> Node0x5e3a0d0;
	Node0x5e37780:s1 -> Node0x5e3a120;
	Node0x5e3a0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%135:\l135:                                              \l  %136 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %137 = getelementptr i8, i8 addrspace(4)* %136, i64 4\l  %138 = bitcast i8 addrspace(4)* %137 to i16 addrspace(4)*\l  %139 = load i16, i16 addrspace(4)* %138, align 4, !range !9, !invariant.load\l... !10\l  %140 = zext i16 %139 to i32\l  br label %142\l}"];
	Node0x5e3a0d0 -> Node0x5e3ab30;
	Node0x5e3a120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%141:\l141:                                              \l  ret void\l}"];
	Node0x5e3ab30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%142:\l142:                                              \l  %143 = phi i32 [ %13, %135 ], [ %166, %142 ]\l  %144 = add nsw i32 %143, 1\l  %145 = sitofp i32 %144 to float\l  %146 = fsub contract float %145, %133\l  %147 = fmul contract float %146, %146\l  %148 = fmul contract float %147, %10\l  %149 = fmul float %148, 0x3FF7154760000000\l  %150 = tail call float @llvm.rint.f32(float %149)\l  %151 = fcmp ogt float %148, 0x40562E4300000000\l  %152 = fcmp olt float %148, 0xC059D1DA00000000\l  %153 = fneg float %149\l  %154 = tail call float @llvm.fma.f32(float %148, float 0x3FF7154760000000,\l... float %153)\l  %155 = tail call float @llvm.fma.f32(float %148, float 0x3E54AE0BE0000000,\l... float %154)\l  %156 = fsub float %149, %150\l  %157 = fadd float %155, %156\l  %158 = tail call float @llvm.exp2.f32(float %157)\l  %159 = fptosi float %150 to i32\l  %160 = tail call float @llvm.amdgcn.ldexp.f32(float %158, i32 %159)\l  %161 = select i1 %152, float 0.000000e+00, float %160\l  %162 = select i1 %151, float 0x7FF0000000000000, float %161\l  %163 = fmul contract float %162, %9\l  %164 = sext i32 %143 to i64\l  %165 = getelementptr inbounds float, float addrspace(1)* %20, i64 %164\l  store float %163, float addrspace(1)* %165, align 4, !tbaa !5\l  %166 = add i32 %143, %140\l  %167 = icmp slt i32 %166, %8\l  br i1 %167, label %142, label %141, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5e3ab30:s0 -> Node0x5e3ab30;
	Node0x5e3ab30:s1 -> Node0x5e3a120;
}
