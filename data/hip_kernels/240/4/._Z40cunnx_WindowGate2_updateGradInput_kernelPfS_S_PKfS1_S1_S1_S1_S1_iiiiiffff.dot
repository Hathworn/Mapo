digraph "CFG for '_Z40cunnx_WindowGate2_updateGradInput_kernelPfS_S_PKfS1_S1_S1_S1_S1_iiiiiffff' function" {
	label="CFG for '_Z40cunnx_WindowGate2_updateGradInput_kernelPfS_S_PKfS1_S1_S1_S1_S1_iiiiiffff' function";

	Node0x4cfd700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%18:\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = mul i32 %20, %12\l  %22 = zext i32 %21 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %8, i64 %22\l  %24 = mul i32 %20, %9\l  %25 = zext i32 %24 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %0, i64 %25\l  %27 = zext i32 %20 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %5, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %30 = fadd contract float %29, -1.000000e+00\l  %31 = fptosi float %30 to i32\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %26, i64 %32\l  %34 = icmp slt i32 %19, %11\l  br i1 %34, label %35, label %46\l|{<s0>T|<s1>F}}"];
	Node0x4cfd700:s0 -> Node0x4cfd930;
	Node0x4cfd700:s1 -> Node0x4d00c80;
	Node0x4cfd930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%35:\l35:                                               \l  %36 = icmp sgt i32 %13, 0\l  %37 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %38 = getelementptr i8, i8 addrspace(4)* %37, i64 4\l  %39 = bitcast i8 addrspace(4)* %38 to i16 addrspace(4)*\l  %40 = load i16, i16 addrspace(4)* %39, align 4, !range !10, !invariant.load\l... !9\l  %41 = zext i16 %40 to i32\l  %42 = and i32 %13, 7\l  %43 = icmp ult i32 %13, 8\l  %44 = and i32 %13, -8\l  %45 = icmp eq i32 %42, 0\l  br label %47\l}"];
	Node0x4cfd930 -> Node0x4d02310;
	Node0x4d00c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%46:\l46:                                               \l  ret void\l}"];
	Node0x4d02310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%47:\l47:                                               \l  %48 = phi i32 [ %19, %35 ], [ %74, %68 ]\l  %49 = mul nsw i32 %48, %13\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %23, i64 %50\l  br i1 %36, label %52, label %68\l|{<s0>T|<s1>F}}"];
	Node0x4d02310:s0 -> Node0x4d02730;
	Node0x4d02310:s1 -> Node0x4d02490;
	Node0x4d02730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%52:\l52:                                               \l  br i1 %43, label %53, label %76\l|{<s0>T|<s1>F}}"];
	Node0x4d02730:s0 -> Node0x4d02870;
	Node0x4d02730:s1 -> Node0x4d028c0;
	Node0x4d02870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%53:\l53:                                               \l  %54 = phi float [ undef, %52 ], [ %118, %76 ]\l  %55 = phi i32 [ 0, %52 ], [ %119, %76 ]\l  %56 = phi float [ 0.000000e+00, %52 ], [ %118, %76 ]\l  br i1 %45, label %68, label %57\l|{<s0>T|<s1>F}}"];
	Node0x4d02870:s0 -> Node0x4d02490;
	Node0x4d02870:s1 -> Node0x4d03110;
	Node0x4d03110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  %58 = phi i32 [ %65, %57 ], [ %55, %53 ]\l  %59 = phi float [ %64, %57 ], [ %56, %53 ]\l  %60 = phi i32 [ %66, %57 ], [ 0, %53 ]\l  %61 = zext i32 %58 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %51, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !5\l  %64 = fadd contract float %59, %63\l  %65 = add nuw nsw i32 %58, 1\l  %66 = add i32 %60, 1\l  %67 = icmp eq i32 %66, %42\l  br i1 %67, label %68, label %57, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4d03110:s0 -> Node0x4d02490;
	Node0x4d03110:s1 -> Node0x4d03110;
	Node0x4d02490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%68:\l68:                                               \l  %69 = phi float [ 0.000000e+00, %47 ], [ %54, %53 ], [ %64, %57 ]\l  %70 = sext i32 %48 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %33, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5\l  %73 = fadd contract float %69, %72\l  store float %73, float addrspace(1)* %71, align 4, !tbaa !5\l  %74 = add i32 %48, %41\l  %75 = icmp slt i32 %74, %11\l  br i1 %75, label %47, label %46, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4d02490:s0 -> Node0x4d02310;
	Node0x4d02490:s1 -> Node0x4d00c80;
	Node0x4d028c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%76:\l76:                                               \l  %77 = phi i32 [ %119, %76 ], [ 0, %52 ]\l  %78 = phi float [ %118, %76 ], [ 0.000000e+00, %52 ]\l  %79 = phi i32 [ %120, %76 ], [ 0, %52 ]\l  %80 = zext i32 %77 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %51, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !5\l  %83 = fadd contract float %78, %82\l  %84 = or i32 %77, 1\l  %85 = zext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %51, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !5\l  %88 = fadd contract float %83, %87\l  %89 = or i32 %77, 2\l  %90 = zext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %51, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !5\l  %93 = fadd contract float %88, %92\l  %94 = or i32 %77, 3\l  %95 = zext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %51, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !5\l  %98 = fadd contract float %93, %97\l  %99 = or i32 %77, 4\l  %100 = zext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %51, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !5\l  %103 = fadd contract float %98, %102\l  %104 = or i32 %77, 5\l  %105 = zext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %51, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !5\l  %108 = fadd contract float %103, %107\l  %109 = or i32 %77, 6\l  %110 = zext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %51, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !5\l  %113 = fadd contract float %108, %112\l  %114 = or i32 %77, 7\l  %115 = zext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %51, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !5\l  %118 = fadd contract float %113, %117\l  %119 = add nuw nsw i32 %77, 8\l  %120 = add i32 %79, 8\l  %121 = icmp eq i32 %120, %44\l  br i1 %121, label %53, label %76, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4d028c0:s0 -> Node0x4d02870;
	Node0x4d028c0:s1 -> Node0x4d028c0;
}
