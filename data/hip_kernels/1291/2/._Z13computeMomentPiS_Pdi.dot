digraph "CFG for '_Z13computeMomentPiS_Pdi' function" {
	label="CFG for '_Z13computeMomentPiS_Pdi' function";

	Node0x46b3fc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp ult i32 %12, 5\l  %23 = icmp ult i32 %20, 5\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %32\l|{<s0>T|<s1>F}}"];
	Node0x46b3fc0:s0 -> Node0x46b7a60;
	Node0x46b3fc0:s1 -> Node0x46b7af0;
	Node0x46b7a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%25:\l25:                                               \l  %26 = mul nuw nsw i32 %12, 5\l  %27 = add nuw nsw i32 %26, %20\l  %28 = zext i32 %27 to i64\l  %29 = getelementptr inbounds double, double addrspace(1)* %2, i64 %28\l  %30 = load double, double addrspace(1)* %29, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = getelementptr inbounds [5 x [5 x double]], [5 x [5 x double]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 %12,\l... i32 %20\l  store double %30, double addrspace(3)* %31, align 8, !tbaa !7\l  br label %32\l}"];
	Node0x46b7a60 -> Node0x46b7af0;
	Node0x46b7af0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %33 = mul nsw i32 %13, %3\l  %34 = add nsw i32 %33, %21\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %35\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %38 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %12,\l... i32 %20\l  store i32 %37, i32 addrspace(3)* %38, align 4, !tbaa !11\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %39 = icmp slt i32 %13, %3\l  %40 = icmp slt i32 %21, %3\l  %41 = select i1 %39, i1 %40, i1 false\l  br i1 %41, label %42, label %584\l|{<s0>T|<s1>F}}"];
	Node0x46b7af0:s0 -> Node0x46b9bb0;
	Node0x46b7af0:s1 -> Node0x46b9c00;
	Node0x46b9bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%42:\l42:                                               \l  %43 = icmp ugt i32 %20, 4\l  %44 = add nsw i32 %12, -5\l  %45 = icmp ult i32 %44, 22\l  %46 = select i1 %45, i1 %43, i1 false\l  %47 = icmp ult i32 %20, 27\l  %48 = select i1 %46, i1 %47, i1 false\l  %49 = add i32 %13, %3\l  %50 = add i32 %21, %3\l  %51 = add i32 %49, -2\l  %52 = add nsw i32 %12, -2\l  br i1 %48, label %53, label %57\l|{<s0>T|<s1>F}}"];
	Node0x46b9bb0:s0 -> Node0x46ba3e0;
	Node0x46b9bb0:s1 -> Node0x46ba430;
	Node0x46ba3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%53:\l53:                                               \l  %54 = add nsw i32 %20, -2\l  %55 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %52,\l... i32 %54\l  %56 = load i32, i32 addrspace(3)* %55, align 4, !tbaa !11\l  br label %66\l}"];
	Node0x46ba3e0 -> Node0x46ba600;
	Node0x46ba430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%57:\l57:                                               \l  %58 = srem i32 %51, %3\l  %59 = add i32 %50, -2\l  %60 = srem i32 %59, %3\l  %61 = mul nsw i32 %58, %3\l  %62 = add nsw i32 %61, %60\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  br label %66\l}"];
	Node0x46ba430 -> Node0x46ba600;
	Node0x46ba600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%66:\l66:                                               \l  %67 = phi i32 [ %56, %53 ], [ %65, %57 ]\l  %68 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 0, i32 0), align\l... 16, !tbaa !7\l  %69 = sitofp i32 %67 to double\l  %70 = fmul contract double %68, %69\l  %71 = fadd contract double %70, 0.000000e+00\l  %72 = fptrunc double %71 to float\l  br i1 %48, label %82, label %73\l|{<s0>T|<s1>F}}"];
	Node0x46ba600:s0 -> Node0x46b90c0;
	Node0x46ba600:s1 -> Node0x46bbfb0;
	Node0x46bbfb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%73:\l73:                                               \l  %74 = srem i32 %51, %3\l  %75 = add i32 %50, -1\l  %76 = srem i32 %75, %3\l  %77 = mul nsw i32 %74, %3\l  %78 = add nsw i32 %77, %76\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %79\l  %81 = load i32, i32 addrspace(1)* %80, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  br label %86\l}"];
	Node0x46bbfb0 -> Node0x46bc570;
	Node0x46b90c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%82:\l82:                                               \l  %83 = add nsw i32 %20, -1\l  %84 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %52,\l... i32 %83\l  %85 = load i32, i32 addrspace(3)* %84, align 4, !tbaa !11\l  br label %86\l}"];
	Node0x46b90c0 -> Node0x46bc570;
	Node0x46bc570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%86:\l86:                                               \l  %87 = phi i32 [ %85, %82 ], [ %81, %73 ]\l  %88 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 0, i32 1), align 8,\l... !tbaa !7\l  %89 = sitofp i32 %87 to double\l  %90 = fmul contract double %88, %89\l  %91 = fpext float %72 to double\l  %92 = fadd contract double %90, %91\l  %93 = fptrunc double %92 to float\l  br i1 %48, label %102, label %94\l|{<s0>T|<s1>F}}"];
	Node0x46bc570:s0 -> Node0x46bc970;
	Node0x46bc570:s1 -> Node0x46bcd80;
	Node0x46bcd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%94:\l94:                                               \l  %95 = srem i32 %51, %3\l  %96 = srem i32 %50, %3\l  %97 = mul nsw i32 %95, %3\l  %98 = add nsw i32 %97, %96\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %99\l  %101 = load i32, i32 addrspace(1)* %100, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %105\l}"];
	Node0x46bcd80 -> Node0x46bd240;
	Node0x46bc970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%102:\l102:                                              \l  %103 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %52,\l... i32 %20\l  %104 = load i32, i32 addrspace(3)* %103, align 4, !tbaa !11\l  br label %105\l}"];
	Node0x46bc970 -> Node0x46bd240;
	Node0x46bd240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%105:\l105:                                              \l  %106 = phi i32 [ %104, %102 ], [ %101, %94 ]\l  %107 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 0, i32 2), align\l... 16, !tbaa !7\l  %108 = sitofp i32 %106 to double\l  %109 = fmul contract double %107, %108\l  %110 = fpext float %93 to double\l  %111 = fadd contract double %109, %110\l  %112 = fptrunc double %111 to float\l  br i1 %48, label %122, label %113\l|{<s0>T|<s1>F}}"];
	Node0x46bd240:s0 -> Node0x46bd5b0;
	Node0x46bd240:s1 -> Node0x46bd9c0;
	Node0x46bd9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%113:\l113:                                              \l  %114 = srem i32 %51, %3\l  %115 = add i32 %50, 1\l  %116 = srem i32 %115, %3\l  %117 = mul nsw i32 %114, %3\l  %118 = add nsw i32 %117, %116\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %119\l  %121 = load i32, i32 addrspace(1)* %120, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %126\l}"];
	Node0x46bd9c0 -> Node0x46bdf10;
	Node0x46bd5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%122:\l122:                                              \l  %123 = add nuw nsw i32 %20, 1\l  %124 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %52,\l... i32 %123\l  %125 = load i32, i32 addrspace(3)* %124, align 4, !tbaa !11\l  br label %126\l}"];
	Node0x46bd5b0 -> Node0x46bdf10;
	Node0x46bdf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%126:\l126:                                              \l  %127 = phi i32 [ %125, %122 ], [ %121, %113 ]\l  %128 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 0, i32 3), align 8,\l... !tbaa !7\l  %129 = sitofp i32 %127 to double\l  %130 = fmul contract double %128, %129\l  %131 = fpext float %112 to double\l  %132 = fadd contract double %130, %131\l  %133 = fptrunc double %132 to float\l  br i1 %48, label %143, label %134\l|{<s0>T|<s1>F}}"];
	Node0x46bdf10:s0 -> Node0x46bae20;
	Node0x46bdf10:s1 -> Node0x46bae70;
	Node0x46bae70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%134:\l134:                                              \l  %135 = srem i32 %51, %3\l  %136 = add i32 %50, 2\l  %137 = srem i32 %136, %3\l  %138 = mul nsw i32 %135, %3\l  %139 = add nsw i32 %138, %137\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %140\l  %142 = load i32, i32 addrspace(1)* %141, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %147\l}"];
	Node0x46bae70 -> Node0x46bf080;
	Node0x46bae20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%143:\l143:                                              \l  %144 = add nuw nsw i32 %20, 2\l  %145 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %52,\l... i32 %144\l  %146 = load i32, i32 addrspace(3)* %145, align 4, !tbaa !11\l  br label %147\l}"];
	Node0x46bae20 -> Node0x46bf080;
	Node0x46bf080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%147:\l147:                                              \l  %148 = phi i32 [ %146, %143 ], [ %142, %134 ]\l  %149 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 0, i32 4), align\l... 16, !tbaa !7\l  %150 = sitofp i32 %148 to double\l  %151 = fmul contract double %149, %150\l  %152 = fpext float %133 to double\l  %153 = fadd contract double %151, %152\l  %154 = fptrunc double %153 to float\l  %155 = add i32 %49, -1\l  %156 = add nsw i32 %12, -1\l  br i1 %48, label %166, label %157\l|{<s0>T|<s1>F}}"];
	Node0x46bf080:s0 -> Node0x46bf480;
	Node0x46bf080:s1 -> Node0x46bf980;
	Node0x46bf980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%157:\l157:                                              \l  %158 = srem i32 %155, %3\l  %159 = add i32 %50, -2\l  %160 = srem i32 %159, %3\l  %161 = mul nsw i32 %158, %3\l  %162 = add nsw i32 %161, %160\l  %163 = sext i32 %162 to i64\l  %164 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %163\l  %165 = load i32, i32 addrspace(1)* %164, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %170\l}"];
	Node0x46bf980 -> Node0x46bfed0;
	Node0x46bf480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%166:\l166:                                              \l  %167 = add nsw i32 %20, -2\l  %168 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %156,\l... i32 %167\l  %169 = load i32, i32 addrspace(3)* %168, align 4, !tbaa !11\l  br label %170\l}"];
	Node0x46bf480 -> Node0x46bfed0;
	Node0x46bfed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%170:\l170:                                              \l  %171 = phi i32 [ %169, %166 ], [ %165, %157 ]\l  %172 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 1, i32 0), align 8,\l... !tbaa !7\l  %173 = sitofp i32 %171 to double\l  %174 = fmul contract double %172, %173\l  %175 = fpext float %154 to double\l  %176 = fadd contract double %174, %175\l  %177 = fptrunc double %176 to float\l  br i1 %48, label %187, label %178\l|{<s0>T|<s1>F}}"];
	Node0x46bfed0:s0 -> Node0x46c02d0;
	Node0x46bfed0:s1 -> Node0x46c06b0;
	Node0x46c06b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%178:\l178:                                              \l  %179 = srem i32 %155, %3\l  %180 = add i32 %50, -1\l  %181 = srem i32 %180, %3\l  %182 = mul nsw i32 %179, %3\l  %183 = add nsw i32 %182, %181\l  %184 = sext i32 %183 to i64\l  %185 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %184\l  %186 = load i32, i32 addrspace(1)* %185, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %191\l}"];
	Node0x46c06b0 -> Node0x46c0c00;
	Node0x46c02d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%187:\l187:                                              \l  %188 = add nsw i32 %20, -1\l  %189 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %156,\l... i32 %188\l  %190 = load i32, i32 addrspace(3)* %189, align 4, !tbaa !11\l  br label %191\l}"];
	Node0x46c02d0 -> Node0x46c0c00;
	Node0x46c0c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%191:\l191:                                              \l  %192 = phi i32 [ %190, %187 ], [ %186, %178 ]\l  %193 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 1, i32 1), align\l... 16, !tbaa !7\l  %194 = sitofp i32 %192 to double\l  %195 = fmul contract double %193, %194\l  %196 = fpext float %177 to double\l  %197 = fadd contract double %195, %196\l  %198 = fptrunc double %197 to float\l  br i1 %48, label %207, label %199\l|{<s0>T|<s1>F}}"];
	Node0x46c0c00:s0 -> Node0x46c1000;
	Node0x46c0c00:s1 -> Node0x46c13e0;
	Node0x46c13e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%199:\l199:                                              \l  %200 = srem i32 %155, %3\l  %201 = srem i32 %50, %3\l  %202 = mul nsw i32 %200, %3\l  %203 = add nsw i32 %202, %201\l  %204 = sext i32 %203 to i64\l  %205 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %204\l  %206 = load i32, i32 addrspace(1)* %205, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %210\l}"];
	Node0x46c13e0 -> Node0x46c18a0;
	Node0x46c1000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%207:\l207:                                              \l  %208 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %156,\l... i32 %20\l  %209 = load i32, i32 addrspace(3)* %208, align 4, !tbaa !11\l  br label %210\l}"];
	Node0x46c1000 -> Node0x46c18a0;
	Node0x46c18a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%210:\l210:                                              \l  %211 = phi i32 [ %209, %207 ], [ %206, %199 ]\l  %212 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 1, i32 2), align 8,\l... !tbaa !7\l  %213 = sitofp i32 %211 to double\l  %214 = fmul contract double %212, %213\l  %215 = fpext float %198 to double\l  %216 = fadd contract double %214, %215\l  %217 = fptrunc double %216 to float\l  br i1 %48, label %227, label %218\l|{<s0>T|<s1>F}}"];
	Node0x46c18a0:s0 -> Node0x46c1c10;
	Node0x46c18a0:s1 -> Node0x46c1ff0;
	Node0x46c1ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%218:\l218:                                              \l  %219 = srem i32 %155, %3\l  %220 = add i32 %50, 1\l  %221 = srem i32 %220, %3\l  %222 = mul nsw i32 %219, %3\l  %223 = add nsw i32 %222, %221\l  %224 = sext i32 %223 to i64\l  %225 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %224\l  %226 = load i32, i32 addrspace(1)* %225, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %231\l}"];
	Node0x46c1ff0 -> Node0x46c2540;
	Node0x46c1c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%227:\l227:                                              \l  %228 = add nuw nsw i32 %20, 1\l  %229 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %156,\l... i32 %228\l  %230 = load i32, i32 addrspace(3)* %229, align 4, !tbaa !11\l  br label %231\l}"];
	Node0x46c1c10 -> Node0x46c2540;
	Node0x46c2540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%231:\l231:                                              \l  %232 = phi i32 [ %230, %227 ], [ %226, %218 ]\l  %233 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 1, i32 3), align\l... 16, !tbaa !7\l  %234 = sitofp i32 %232 to double\l  %235 = fmul contract double %233, %234\l  %236 = fpext float %217 to double\l  %237 = fadd contract double %235, %236\l  %238 = fptrunc double %237 to float\l  br i1 %48, label %248, label %239\l|{<s0>T|<s1>F}}"];
	Node0x46c2540:s0 -> Node0x46c2940;
	Node0x46c2540:s1 -> Node0x46c2d20;
	Node0x46c2d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%239:\l239:                                              \l  %240 = srem i32 %155, %3\l  %241 = add i32 %50, 2\l  %242 = srem i32 %241, %3\l  %243 = mul nsw i32 %240, %3\l  %244 = add nsw i32 %243, %242\l  %245 = sext i32 %244 to i64\l  %246 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %245\l  %247 = load i32, i32 addrspace(1)* %246, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %252\l}"];
	Node0x46c2d20 -> Node0x46c3270;
	Node0x46c2940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%248:\l248:                                              \l  %249 = add nuw nsw i32 %20, 2\l  %250 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %156,\l... i32 %249\l  %251 = load i32, i32 addrspace(3)* %250, align 4, !tbaa !11\l  br label %252\l}"];
	Node0x46c2940 -> Node0x46c3270;
	Node0x46c3270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%252:\l252:                                              \l  %253 = phi i32 [ %251, %248 ], [ %247, %239 ]\l  %254 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 1, i32 4), align 8,\l... !tbaa !7\l  %255 = sitofp i32 %253 to double\l  %256 = fmul contract double %254, %255\l  %257 = fpext float %238 to double\l  %258 = fadd contract double %256, %257\l  %259 = fptrunc double %258 to float\l  br i1 %48, label %269, label %260\l|{<s0>T|<s1>F}}"];
	Node0x46c3270:s0 -> Node0x46c3670;
	Node0x46c3270:s1 -> Node0x46be620;
	Node0x46be620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%260:\l260:                                              \l  %261 = srem i32 %49, %3\l  %262 = add i32 %50, -2\l  %263 = srem i32 %262, %3\l  %264 = mul nsw i32 %261, %3\l  %265 = add nsw i32 %264, %263\l  %266 = sext i32 %265 to i64\l  %267 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %266\l  %268 = load i32, i32 addrspace(1)* %267, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %273\l}"];
	Node0x46be620 -> Node0x46beb70;
	Node0x46c3670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%269:\l269:                                              \l  %270 = add nsw i32 %20, -2\l  %271 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %12,\l... i32 %270\l  %272 = load i32, i32 addrspace(3)* %271, align 4, !tbaa !11\l  br label %273\l}"];
	Node0x46c3670 -> Node0x46beb70;
	Node0x46beb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%273:\l273:                                              \l  %274 = phi i32 [ %272, %269 ], [ %268, %260 ]\l  %275 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 2, i32 0), align\l... 16, !tbaa !7\l  %276 = sitofp i32 %274 to double\l  %277 = fmul contract double %275, %276\l  %278 = fpext float %259 to double\l  %279 = fadd contract double %277, %278\l  %280 = fptrunc double %279 to float\l  br i1 %48, label %290, label %281\l|{<s0>T|<s1>F}}"];
	Node0x46beb70:s0 -> Node0x46c4ba0;
	Node0x46beb70:s1 -> Node0x46c4f80;
	Node0x46c4f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%281:\l281:                                              \l  %282 = srem i32 %49, %3\l  %283 = add i32 %50, -1\l  %284 = srem i32 %283, %3\l  %285 = mul nsw i32 %282, %3\l  %286 = add nsw i32 %285, %284\l  %287 = sext i32 %286 to i64\l  %288 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %287\l  %289 = load i32, i32 addrspace(1)* %288, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %294\l}"];
	Node0x46c4f80 -> Node0x46c54d0;
	Node0x46c4ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%290:\l290:                                              \l  %291 = add nsw i32 %20, -1\l  %292 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %12,\l... i32 %291\l  %293 = load i32, i32 addrspace(3)* %292, align 4, !tbaa !11\l  br label %294\l}"];
	Node0x46c4ba0 -> Node0x46c54d0;
	Node0x46c54d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%294:\l294:                                              \l  %295 = phi i32 [ %293, %290 ], [ %289, %281 ]\l  %296 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 2, i32 1), align 8,\l... !tbaa !7\l  %297 = sitofp i32 %295 to double\l  %298 = fmul contract double %296, %297\l  %299 = fpext float %280 to double\l  %300 = fadd contract double %298, %299\l  %301 = fptrunc double %300 to float\l  br i1 %48, label %310, label %302\l|{<s0>T|<s1>F}}"];
	Node0x46c54d0:s0 -> Node0x46c58d0;
	Node0x46c54d0:s1 -> Node0x46c5cb0;
	Node0x46c5cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%302:\l302:                                              \l  %303 = srem i32 %49, %3\l  %304 = srem i32 %50, %3\l  %305 = mul nsw i32 %303, %3\l  %306 = add nsw i32 %305, %304\l  %307 = sext i32 %306 to i64\l  %308 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %307\l  %309 = load i32, i32 addrspace(1)* %308, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %312\l}"];
	Node0x46c5cb0 -> Node0x46c6170;
	Node0x46c58d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%310:\l310:                                              \l  %311 = load i32, i32 addrspace(3)* %38, align 4, !tbaa !11\l  br label %312\l}"];
	Node0x46c58d0 -> Node0x46c6170;
	Node0x46c6170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%312:\l312:                                              \l  %313 = phi i32 [ %311, %310 ], [ %309, %302 ]\l  %314 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 2, i32 2), align\l... 16, !tbaa !7\l  %315 = sitofp i32 %313 to double\l  %316 = fmul contract double %314, %315\l  %317 = fpext float %301 to double\l  %318 = fadd contract double %316, %317\l  %319 = fptrunc double %318 to float\l  br i1 %48, label %329, label %320\l|{<s0>T|<s1>F}}"];
	Node0x46c6170:s0 -> Node0x46c6400;
	Node0x46c6170:s1 -> Node0x46c67e0;
	Node0x46c67e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%320:\l320:                                              \l  %321 = srem i32 %49, %3\l  %322 = add i32 %50, 1\l  %323 = srem i32 %322, %3\l  %324 = mul nsw i32 %321, %3\l  %325 = add nsw i32 %324, %323\l  %326 = sext i32 %325 to i64\l  %327 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %326\l  %328 = load i32, i32 addrspace(1)* %327, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %333\l}"];
	Node0x46c67e0 -> Node0x46b4de0;
	Node0x46c6400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%329:\l329:                                              \l  %330 = add nuw nsw i32 %20, 1\l  %331 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %12,\l... i32 %330\l  %332 = load i32, i32 addrspace(3)* %331, align 4, !tbaa !11\l  br label %333\l}"];
	Node0x46c6400 -> Node0x46b4de0;
	Node0x46b4de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%333:\l333:                                              \l  %334 = phi i32 [ %332, %329 ], [ %328, %320 ]\l  %335 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 2, i32 3), align 8,\l... !tbaa !7\l  %336 = sitofp i32 %334 to double\l  %337 = fmul contract double %335, %336\l  %338 = fpext float %319 to double\l  %339 = fadd contract double %337, %338\l  %340 = fptrunc double %339 to float\l  br i1 %48, label %350, label %341\l|{<s0>T|<s1>F}}"];
	Node0x46b4de0:s0 -> Node0x46b51e0;
	Node0x46b4de0:s1 -> Node0x46b55c0;
	Node0x46b55c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%341:\l341:                                              \l  %342 = srem i32 %49, %3\l  %343 = add i32 %50, 2\l  %344 = srem i32 %343, %3\l  %345 = mul nsw i32 %342, %3\l  %346 = add nsw i32 %345, %344\l  %347 = sext i32 %346 to i64\l  %348 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %347\l  %349 = load i32, i32 addrspace(1)* %348, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %354\l}"];
	Node0x46b55c0 -> Node0x46c8470;
	Node0x46b51e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%350:\l350:                                              \l  %351 = add nuw nsw i32 %20, 2\l  %352 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %12,\l... i32 %351\l  %353 = load i32, i32 addrspace(3)* %352, align 4, !tbaa !11\l  br label %354\l}"];
	Node0x46b51e0 -> Node0x46c8470;
	Node0x46c8470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%354:\l354:                                              \l  %355 = phi i32 [ %353, %350 ], [ %349, %341 ]\l  %356 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 2, i32 4), align\l... 16, !tbaa !7\l  %357 = sitofp i32 %355 to double\l  %358 = fmul contract double %356, %357\l  %359 = fpext float %340 to double\l  %360 = fadd contract double %358, %359\l  %361 = fptrunc double %360 to float\l  %362 = add i32 %49, 1\l  %363 = add nuw nsw i32 %12, 1\l  br i1 %48, label %373, label %364\l|{<s0>T|<s1>F}}"];
	Node0x46c8470:s0 -> Node0x46c8870;
	Node0x46c8470:s1 -> Node0x46c8d70;
	Node0x46c8d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%364:\l364:                                              \l  %365 = srem i32 %362, %3\l  %366 = add i32 %50, -2\l  %367 = srem i32 %366, %3\l  %368 = mul nsw i32 %365, %3\l  %369 = add nsw i32 %368, %367\l  %370 = sext i32 %369 to i64\l  %371 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %370\l  %372 = load i32, i32 addrspace(1)* %371, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %377\l}"];
	Node0x46c8d70 -> Node0x46c92c0;
	Node0x46c8870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%373:\l373:                                              \l  %374 = add nsw i32 %20, -2\l  %375 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %363,\l... i32 %374\l  %376 = load i32, i32 addrspace(3)* %375, align 4, !tbaa !11\l  br label %377\l}"];
	Node0x46c8870 -> Node0x46c92c0;
	Node0x46c92c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%377:\l377:                                              \l  %378 = phi i32 [ %376, %373 ], [ %372, %364 ]\l  %379 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 3, i32 0), align 8,\l... !tbaa !7\l  %380 = sitofp i32 %378 to double\l  %381 = fmul contract double %379, %380\l  %382 = fpext float %361 to double\l  %383 = fadd contract double %381, %382\l  %384 = fptrunc double %383 to float\l  br i1 %48, label %394, label %385\l|{<s0>T|<s1>F}}"];
	Node0x46c92c0:s0 -> Node0x46c96c0;
	Node0x46c92c0:s1 -> Node0x46c9aa0;
	Node0x46c9aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%385:\l385:                                              \l  %386 = srem i32 %362, %3\l  %387 = add i32 %50, -1\l  %388 = srem i32 %387, %3\l  %389 = mul nsw i32 %386, %3\l  %390 = add nsw i32 %389, %388\l  %391 = sext i32 %390 to i64\l  %392 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %391\l  %393 = load i32, i32 addrspace(1)* %392, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %398\l}"];
	Node0x46c9aa0 -> Node0x46c9ff0;
	Node0x46c96c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%394:\l394:                                              \l  %395 = add nsw i32 %20, -1\l  %396 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %363,\l... i32 %395\l  %397 = load i32, i32 addrspace(3)* %396, align 4, !tbaa !11\l  br label %398\l}"];
	Node0x46c96c0 -> Node0x46c9ff0;
	Node0x46c9ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%398:\l398:                                              \l  %399 = phi i32 [ %397, %394 ], [ %393, %385 ]\l  %400 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 3, i32 1), align\l... 16, !tbaa !7\l  %401 = sitofp i32 %399 to double\l  %402 = fmul contract double %400, %401\l  %403 = fpext float %384 to double\l  %404 = fadd contract double %402, %403\l  %405 = fptrunc double %404 to float\l  br i1 %48, label %414, label %406\l|{<s0>T|<s1>F}}"];
	Node0x46c9ff0:s0 -> Node0x46ca3f0;
	Node0x46c9ff0:s1 -> Node0x46ca7d0;
	Node0x46ca7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%406:\l406:                                              \l  %407 = srem i32 %362, %3\l  %408 = srem i32 %50, %3\l  %409 = mul nsw i32 %407, %3\l  %410 = add nsw i32 %409, %408\l  %411 = sext i32 %410 to i64\l  %412 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %411\l  %413 = load i32, i32 addrspace(1)* %412, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %417\l}"];
	Node0x46ca7d0 -> Node0x46cac90;
	Node0x46ca3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%414:\l414:                                              \l  %415 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %363,\l... i32 %20\l  %416 = load i32, i32 addrspace(3)* %415, align 4, !tbaa !11\l  br label %417\l}"];
	Node0x46ca3f0 -> Node0x46cac90;
	Node0x46cac90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%417:\l417:                                              \l  %418 = phi i32 [ %416, %414 ], [ %413, %406 ]\l  %419 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 3, i32 2), align 8,\l... !tbaa !7\l  %420 = sitofp i32 %418 to double\l  %421 = fmul contract double %419, %420\l  %422 = fpext float %405 to double\l  %423 = fadd contract double %421, %422\l  %424 = fptrunc double %423 to float\l  br i1 %48, label %434, label %425\l|{<s0>T|<s1>F}}"];
	Node0x46cac90:s0 -> Node0x46cb000;
	Node0x46cac90:s1 -> Node0x46cb3e0;
	Node0x46cb3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%425:\l425:                                              \l  %426 = srem i32 %362, %3\l  %427 = add i32 %50, 1\l  %428 = srem i32 %427, %3\l  %429 = mul nsw i32 %426, %3\l  %430 = add nsw i32 %429, %428\l  %431 = sext i32 %430 to i64\l  %432 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %431\l  %433 = load i32, i32 addrspace(1)* %432, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %438\l}"];
	Node0x46cb3e0 -> Node0x46cb930;
	Node0x46cb000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%434:\l434:                                              \l  %435 = add nuw nsw i32 %20, 1\l  %436 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %363,\l... i32 %435\l  %437 = load i32, i32 addrspace(3)* %436, align 4, !tbaa !11\l  br label %438\l}"];
	Node0x46cb000 -> Node0x46cb930;
	Node0x46cb930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%438:\l438:                                              \l  %439 = phi i32 [ %437, %434 ], [ %433, %425 ]\l  %440 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 3, i32 3), align\l... 16, !tbaa !7\l  %441 = sitofp i32 %439 to double\l  %442 = fmul contract double %440, %441\l  %443 = fpext float %424 to double\l  %444 = fadd contract double %442, %443\l  %445 = fptrunc double %444 to float\l  br i1 %48, label %455, label %446\l|{<s0>T|<s1>F}}"];
	Node0x46cb930:s0 -> Node0x46cbd30;
	Node0x46cb930:s1 -> Node0x46cc110;
	Node0x46cc110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%446:\l446:                                              \l  %447 = srem i32 %362, %3\l  %448 = add i32 %50, 2\l  %449 = srem i32 %448, %3\l  %450 = mul nsw i32 %447, %3\l  %451 = add nsw i32 %450, %449\l  %452 = sext i32 %451 to i64\l  %453 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %452\l  %454 = load i32, i32 addrspace(1)* %453, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %459\l}"];
	Node0x46cc110 -> Node0x46cc660;
	Node0x46cbd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%455:\l455:                                              \l  %456 = add nuw nsw i32 %20, 2\l  %457 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %363,\l... i32 %456\l  %458 = load i32, i32 addrspace(3)* %457, align 4, !tbaa !11\l  br label %459\l}"];
	Node0x46cbd30 -> Node0x46cc660;
	Node0x46cc660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%459:\l459:                                              \l  %460 = phi i32 [ %458, %455 ], [ %454, %446 ]\l  %461 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 3, i32 4), align 8,\l... !tbaa !7\l  %462 = sitofp i32 %460 to double\l  %463 = fmul contract double %461, %462\l  %464 = fpext float %445 to double\l  %465 = fadd contract double %463, %464\l  %466 = fptrunc double %465 to float\l  %467 = add i32 %49, 2\l  %468 = add nuw nsw i32 %12, 2\l  br i1 %48, label %478, label %469\l|{<s0>T|<s1>F}}"];
	Node0x46cc660:s0 -> Node0x46cca60;
	Node0x46cc660:s1 -> Node0x46ccf60;
	Node0x46ccf60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%469:\l469:                                              \l  %470 = srem i32 %467, %3\l  %471 = add i32 %50, -2\l  %472 = srem i32 %471, %3\l  %473 = mul nsw i32 %470, %3\l  %474 = add nsw i32 %473, %472\l  %475 = sext i32 %474 to i64\l  %476 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %475\l  %477 = load i32, i32 addrspace(1)* %476, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %482\l}"];
	Node0x46ccf60 -> Node0x46cd8c0;
	Node0x46cca60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%478:\l478:                                              \l  %479 = add nsw i32 %20, -2\l  %480 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %468,\l... i32 %479\l  %481 = load i32, i32 addrspace(3)* %480, align 4, !tbaa !11\l  br label %482\l}"];
	Node0x46cca60 -> Node0x46cd8c0;
	Node0x46cd8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%482:\l482:                                              \l  %483 = phi i32 [ %481, %478 ], [ %477, %469 ]\l  %484 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 4, i32 0), align\l... 16, !tbaa !7\l  %485 = sitofp i32 %483 to double\l  %486 = fmul contract double %484, %485\l  %487 = fpext float %466 to double\l  %488 = fadd contract double %486, %487\l  %489 = fptrunc double %488 to float\l  br i1 %48, label %499, label %490\l|{<s0>T|<s1>F}}"];
	Node0x46cd8c0:s0 -> Node0x46cdcc0;
	Node0x46cd8c0:s1 -> Node0x46ce0a0;
	Node0x46ce0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%490:\l490:                                              \l  %491 = srem i32 %467, %3\l  %492 = add i32 %50, -1\l  %493 = srem i32 %492, %3\l  %494 = mul nsw i32 %491, %3\l  %495 = add nsw i32 %494, %493\l  %496 = sext i32 %495 to i64\l  %497 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %496\l  %498 = load i32, i32 addrspace(1)* %497, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %503\l}"];
	Node0x46ce0a0 -> Node0x46b92d0;
	Node0x46cdcc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%499:\l499:                                              \l  %500 = add nsw i32 %20, -1\l  %501 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %468,\l... i32 %500\l  %502 = load i32, i32 addrspace(3)* %501, align 4, !tbaa !11\l  br label %503\l}"];
	Node0x46cdcc0 -> Node0x46b92d0;
	Node0x46b92d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%503:\l503:                                              \l  %504 = phi i32 [ %502, %499 ], [ %498, %490 ]\l  %505 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 4, i32 1), align 8,\l... !tbaa !7\l  %506 = sitofp i32 %504 to double\l  %507 = fmul contract double %505, %506\l  %508 = fpext float %489 to double\l  %509 = fadd contract double %507, %508\l  %510 = fptrunc double %509 to float\l  br i1 %48, label %519, label %511\l|{<s0>T|<s1>F}}"];
	Node0x46b92d0:s0 -> Node0x46b96d0;
	Node0x46b92d0:s1 -> Node0x46cee00;
	Node0x46cee00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%511:\l511:                                              \l  %512 = srem i32 %467, %3\l  %513 = srem i32 %50, %3\l  %514 = mul nsw i32 %512, %3\l  %515 = add nsw i32 %514, %513\l  %516 = sext i32 %515 to i64\l  %517 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %516\l  %518 = load i32, i32 addrspace(1)* %517, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %522\l}"];
	Node0x46cee00 -> Node0x46c4820;
	Node0x46b96d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%519:\l519:                                              \l  %520 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %468,\l... i32 %20\l  %521 = load i32, i32 addrspace(3)* %520, align 4, !tbaa !11\l  br label %522\l}"];
	Node0x46b96d0 -> Node0x46c4820;
	Node0x46c4820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%522:\l522:                                              \l  %523 = phi i32 [ %521, %519 ], [ %518, %511 ]\l  %524 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 4, i32 2), align\l... 16, !tbaa !7\l  %525 = sitofp i32 %523 to double\l  %526 = fmul contract double %524, %525\l  %527 = fpext float %510 to double\l  %528 = fadd contract double %526, %527\l  %529 = fptrunc double %528 to float\l  br i1 %48, label %539, label %530\l|{<s0>T|<s1>F}}"];
	Node0x46c4820:s0 -> Node0x46ce8d0;
	Node0x46c4820:s1 -> Node0x46cebb0;
	Node0x46cebb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%530:\l530:                                              \l  %531 = srem i32 %467, %3\l  %532 = add i32 %50, 1\l  %533 = srem i32 %532, %3\l  %534 = mul nsw i32 %531, %3\l  %535 = add nsw i32 %534, %533\l  %536 = sext i32 %535 to i64\l  %537 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %536\l  %538 = load i32, i32 addrspace(1)* %537, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %543\l}"];
	Node0x46cebb0 -> Node0x46d15a0;
	Node0x46ce8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%539:\l539:                                              \l  %540 = add nuw nsw i32 %20, 1\l  %541 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %468,\l... i32 %540\l  %542 = load i32, i32 addrspace(3)* %541, align 4, !tbaa !11\l  br label %543\l}"];
	Node0x46ce8d0 -> Node0x46d15a0;
	Node0x46d15a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%543:\l543:                                              \l  %544 = phi i32 [ %542, %539 ], [ %538, %530 ]\l  %545 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 4, i32 3), align 8,\l... !tbaa !7\l  %546 = sitofp i32 %544 to double\l  %547 = fmul contract double %545, %546\l  %548 = fpext float %529 to double\l  %549 = fadd contract double %547, %548\l  %550 = fptrunc double %549 to float\l  br i1 %48, label %560, label %551\l|{<s0>T|<s1>F}}"];
	Node0x46d15a0:s0 -> Node0x46d1960;
	Node0x46d15a0:s1 -> Node0x46d1d40;
	Node0x46d1d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%551:\l551:                                              \l  %552 = srem i32 %467, %3\l  %553 = add i32 %50, 2\l  %554 = srem i32 %553, %3\l  %555 = mul nsw i32 %552, %3\l  %556 = add nsw i32 %555, %554\l  %557 = sext i32 %556 to i64\l  %558 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %557\l  %559 = load i32, i32 addrspace(1)* %558, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %564\l}"];
	Node0x46d1d40 -> Node0x46d2290;
	Node0x46d1960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%560:\l560:                                              \l  %561 = add nuw nsw i32 %20, 2\l  %562 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13computeMomentPiS_PdiE14readArr_shared, i32 0, i32 %468,\l... i32 %561\l  %563 = load i32, i32 addrspace(3)* %562, align 4, !tbaa !11\l  br label %564\l}"];
	Node0x46d1960 -> Node0x46d2290;
	Node0x46d2290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%564:\l564:                                              \l  %565 = phi i32 [ %563, %560 ], [ %559, %551 ]\l  %566 = load double, double addrspace(3)* getelementptr inbounds ([5 x [5 x\l... double]], [5 x [5 x double]] addrspace(3)*\l... @_ZZ13computeMomentPiS_PdiE16weightArr_shared, i32 0, i32 4, i32 4), align\l... 16, !tbaa !7\l  %567 = sitofp i32 %565 to double\l  %568 = fmul contract double %566, %567\l  %569 = fpext float %550 to double\l  %570 = fadd contract double %568, %569\l  %571 = fptrunc double %570 to float\l  %572 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %35\l  %573 = fcmp contract olt float %571, 0xBEB0C6F7A0000000\l  br i1 %48, label %574, label %578\l|{<s0>T|<s1>F}}"];
	Node0x46d2290:s0 -> Node0x46d2690;
	Node0x46d2290:s1 -> Node0x46d2ba0;
	Node0x46d2690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%574:\l574:                                              \l  %575 = load i32, i32 addrspace(3)* %38, align 4, !tbaa !11\l  store i32 %575, i32 addrspace(1)* %572, align 4, !tbaa !11\l  br i1 %573, label %582, label %576\l|{<s0>T|<s1>F}}"];
	Node0x46d2690:s0 -> Node0x46d2de0;
	Node0x46d2690:s1 -> Node0x46d2e30;
	Node0x46d2e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%576:\l576:                                              \l  %577 = fcmp contract ogt float %571, 0x3EB0C6F7A0000000\l  br i1 %577, label %582, label %584\l|{<s0>T|<s1>F}}"];
	Node0x46d2e30:s0 -> Node0x46d2de0;
	Node0x46d2e30:s1 -> Node0x46b9c00;
	Node0x46d2ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%578:\l578:                                              \l  %579 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  store i32 %579, i32 addrspace(1)* %572, align 4, !tbaa !11\l  br i1 %573, label %582, label %580\l|{<s0>T|<s1>F}}"];
	Node0x46d2ba0:s0 -> Node0x46d2de0;
	Node0x46d2ba0:s1 -> Node0x46d31b0;
	Node0x46d31b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%580:\l580:                                              \l  %581 = fcmp contract ogt float %571, 0x3EB0C6F7A0000000\l  br i1 %581, label %582, label %584\l|{<s0>T|<s1>F}}"];
	Node0x46d31b0:s0 -> Node0x46d2de0;
	Node0x46d31b0:s1 -> Node0x46b9c00;
	Node0x46d2de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%582:\l582:                                              \l  %583 = phi i32 [ -1, %574 ], [ 1, %576 ], [ -1, %578 ], [ 1, %580 ]\l  store i32 %583, i32 addrspace(1)* %572, align 4, !tbaa !11\l  br label %584\l}"];
	Node0x46d2de0 -> Node0x46b9c00;
	Node0x46b9c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%584:\l584:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
