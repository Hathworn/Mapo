digraph "CFG for '_Z24calculateDelaysAndPhasesPdddiiiPfPiS0_' function" {
	label="CFG for '_Z24calculateDelaysAndPhasesPdddiiiPfPiS0_' function";

	Node0x5a687e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !7\l  %20 = mul i32 %11, %16\l  %21 = add i32 %20, %10\l  %22 = zext i32 %21 to i64\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %24 = zext i32 %23 to i64\l  %25 = udiv i32 %19, %16\l  %26 = mul i32 %25, %16\l  %27 = icmp ugt i32 %19, %26\l  %28 = zext i1 %27 to i32\l  %29 = add i32 %25, %28\l  %30 = mul i32 %29, %16\l  %31 = shl nuw nsw i64 %24, 2\l  %32 = getelementptr inbounds double, double addrspace(1)* %0, i64 %31\l  %33 = add nuw nsw i64 %31, 3\l  %34 = getelementptr inbounds double, double addrspace(1)* %0, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %36 = load double, double addrspace(1)* %32, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %37 = uitofp i32 %21 to double\l  %38 = fmul contract double %36, %37\l  %39 = fmul contract double %38, %37\l  %40 = getelementptr inbounds double, double addrspace(1)* %32, i64 1\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %42 = fmul contract double %41, %37\l  %43 = fadd contract double %39, %42\l  %44 = getelementptr inbounds double, double addrspace(1)* %32, i64 2\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %46 = fadd contract double %45, %43\l  %47 = fadd contract double %37, 5.000000e-01\l  %48 = fmul contract double %36, %47\l  %49 = fmul contract double %47, %48\l  %50 = fmul contract double %41, %47\l  %51 = fadd contract double %50, %49\l  %52 = fadd contract double %45, %51\l  %53 = fadd contract double %37, 1.000000e+00\l  %54 = fmul contract double %36, %53\l  %55 = fmul contract double %53, %54\l  %56 = fmul contract double %41, %53\l  %57 = fadd contract double %56, %55\l  %58 = fadd contract double %45, %57\l  %59 = fsub contract double %58, %46\l  %60 = fmul contract double %59, 5.000000e-01\l  %61 = fadd contract double %46, %60\l  %62 = fsub contract double %52, %61\l  %63 = fdiv contract double %62, 3.000000e+00\l  %64 = fadd contract double %46, %63\l  %65 = fadd contract double %60, %64\l  %66 = sitofp i32 %3 to double\l  %67 = fdiv contract double %59, %66\l  %68 = fsub contract double %65, %35\l  %69 = fdiv contract double %68, %2\l  %70 = sitofp i32 %5 to double\l  %71 = fdiv contract double %69, %70\l  %72 = tail call double @llvm.rint.f64(double %71)\l  %73 = fptosi double %72 to i32\l  %74 = mul nsw i32 %73, %5\l  %75 = sext i32 %30 to i64\l  %76 = mul nsw i64 %75, %24\l  %77 = add nsw i64 %76, %22\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %77\l  store i32 %74, i32 addrspace(1)* %78, align 4, !tbaa !20\l  %79 = sitofp i32 %74 to double\l  %80 = fsub contract double %69, %79\l  %81 = fmul contract double %80, -2.000000e+00\l  %82 = fmul contract double %81, 0x400921FB54442D18\l  %83 = fdiv contract double %82, %66\l  %84 = fptrunc double %83 to float\l  %85 = getelementptr inbounds float, float addrspace(1)* %8, i64 %77\l  store float %84, float addrspace(1)* %85, align 4, !tbaa !22\l  %86 = fmul contract double %64, %1\l  %87 = fptosi double %86 to i32\l  %88 = sitofp i32 %87 to double\l  %89 = fsub contract double %86, %88\l  %90 = fptrunc double %89 to float\l  %91 = fmul contract float %90, 2.000000e+00\l  %92 = fpext float %91 to double\l  %93 = fmul contract double %92, 0x400921FB54442D18\l  %94 = fptrunc double %93 to float\l  %95 = shl i64 %77, 1\l  %96 = getelementptr inbounds float, float addrspace(1)* %6, i64 %95\l  store float %94, float addrspace(1)* %96, align 4, !tbaa !22\l  %97 = fmul contract double %67, %1\l  %98 = fptrunc double %97 to float\l  %99 = fmul contract float %98, 2.000000e+00\l  %100 = fpext float %99 to double\l  %101 = fmul contract double %100, 0x400921FB54442D18\l  %102 = fptrunc double %101 to float\l  %103 = add nuw nsw i64 %95, 1\l  %104 = getelementptr inbounds float, float addrspace(1)* %6, i64 %103\l  store float %102, float addrspace(1)* %104, align 4, !tbaa !22\l  ret void\l}"];
}
