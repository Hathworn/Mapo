digraph "CFG for '_Z10pfbFilter4PfS_S_i' function" {
	label="CFG for '_Z10pfbFilter4PfS_S_i' function";

	Node0x62d5300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %13 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 2, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %6, %16\l  %18 = add i32 %17, %12\l  %19 = shl nuw nsw i32 %10, 2\l  %20 = mul i32 %19, %18\l  %21 = add i32 %20, %11\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %1, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %25 = zext i32 %11 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %2, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %28 = fmul contract float %24, %27\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %22\l  store float %28, float addrspace(1)* %29, align 4, !tbaa !7\l  %30 = add nsw i32 %21, %10\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7\l  %34 = load float, float addrspace(1)* %26, align 4, !tbaa !7\l  %35 = fmul contract float %33, %34\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  store float %35, float addrspace(1)* %36, align 4, !tbaa !7\l  %37 = shl nuw nsw i32 %10, 1\l  %38 = add nsw i32 %21, %37\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7\l  %42 = load float, float addrspace(1)* %26, align 4, !tbaa !7\l  %43 = fmul contract float %41, %42\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  store float %43, float addrspace(1)* %44, align 4, !tbaa !7\l  %45 = mul nuw nsw i32 %10, 3\l  %46 = add nsw i32 %21, %45\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7\l  %50 = load float, float addrspace(1)* %26, align 4, !tbaa !7\l  %51 = fmul contract float %49, %50\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  store float %51, float addrspace(1)* %52, align 4, !tbaa !7\l  %53 = icmp sgt i32 %3, 1\l  br i1 %53, label %54, label %104\l|{<s0>T|<s1>F}}"];
	Node0x62d5300:s0 -> Node0x62da720;
	Node0x62d5300:s1 -> Node0x62da7b0;
	Node0x62da720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%54:\l54:                                               \l  %55 = add i32 %3, -1\l  %56 = and i32 %55, 1\l  %57 = icmp eq i32 %3, 2\l  br i1 %57, label %60, label %58\l|{<s0>T|<s1>F}}"];
	Node0x62da720:s0 -> Node0x62daaa0;
	Node0x62da720:s1 -> Node0x62daaf0;
	Node0x62daaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%58:\l58:                                               \l  %59 = and i32 %55, -2\l  br label %105\l}"];
	Node0x62daaf0 -> Node0x62dacf0;
	Node0x62daaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%60:\l60:                                               \l  %61 = phi float [ %35, %54 ], [ %185, %105 ]\l  %62 = phi float [ %28, %54 ], [ %158, %105 ]\l  %63 = phi i32 [ 1, %54 ], [ %159, %105 ]\l  %64 = icmp eq i32 %56, 0\l  br i1 %64, label %104, label %65\l|{<s0>T|<s1>F}}"];
	Node0x62daaa0:s0 -> Node0x62da7b0;
	Node0x62daaa0:s1 -> Node0x62d98f0;
	Node0x62d98f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%65:\l65:                                               \l  %66 = mul nuw nsw i32 %63, %10\l  %67 = add nsw i32 %66, %21\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %1, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7\l  %71 = add nuw i32 %66, %11\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %2, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7\l  %75 = fmul contract float %70, %74\l  %76 = fadd contract float %62, %75\l  store float %76, float addrspace(1)* %29, align 4, !tbaa !7\l  %77 = add nuw nsw i32 %63, 1\l  %78 = mul nuw nsw i32 %77, %10\l  %79 = add nsw i32 %78, %21\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  %83 = load float, float addrspace(1)* %73, align 4, !tbaa !7\l  %84 = fmul contract float %82, %83\l  %85 = fadd contract float %61, %84\l  store float %85, float addrspace(1)* %36, align 4, !tbaa !7\l  %86 = add nuw nsw i32 %63, 2\l  %87 = mul nuw nsw i32 %86, %10\l  %88 = add nsw i32 %87, %21\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %1, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !7\l  %92 = load float, float addrspace(1)* %73, align 4, !tbaa !7\l  %93 = fmul contract float %91, %92\l  %94 = fadd contract float %85, %93\l  store float %94, float addrspace(1)* %36, align 4, !tbaa !7\l  %95 = add nuw nsw i32 %63, 3\l  %96 = mul nsw i32 %95, %10\l  %97 = add nsw i32 %96, %21\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %1, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7\l  %101 = load float, float addrspace(1)* %73, align 4, !tbaa !7\l  %102 = fmul contract float %100, %101\l  %103 = fadd contract float %94, %102\l  store float %103, float addrspace(1)* %36, align 4, !tbaa !7\l  br label %104\l}"];
	Node0x62d98f0 -> Node0x62da7b0;
	Node0x62da7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%104:\l104:                                              \l  ret void\l}"];
	Node0x62dacf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  %106 = phi float [ %35, %58 ], [ %185, %105 ]\l  %107 = phi float [ %28, %58 ], [ %158, %105 ]\l  %108 = phi i32 [ 1, %58 ], [ %159, %105 ]\l  %109 = phi i32 [ 0, %58 ], [ %186, %105 ]\l  %110 = mul nuw nsw i32 %108, %10\l  %111 = add nsw i32 %110, %21\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %1, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !7\l  %115 = add nuw i32 %110, %11\l  %116 = zext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %2, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !7\l  %119 = fmul contract float %114, %118\l  %120 = fadd contract float %107, %119\l  store float %120, float addrspace(1)* %29, align 4, !tbaa !7\l  %121 = add nuw nsw i32 %108, 1\l  %122 = mul nuw nsw i32 %121, %10\l  %123 = add nsw i32 %122, %21\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %1, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7\l  %127 = load float, float addrspace(1)* %117, align 4, !tbaa !7\l  %128 = fmul contract float %126, %127\l  %129 = fadd contract float %106, %128\l  store float %129, float addrspace(1)* %36, align 4, !tbaa !7\l  %130 = add nuw nsw i32 %108, 2\l  %131 = mul nuw nsw i32 %130, %10\l  %132 = add nsw i32 %131, %21\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %1, i64 %133\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !7\l  %136 = load float, float addrspace(1)* %117, align 4, !tbaa !7\l  %137 = fmul contract float %135, %136\l  %138 = fadd contract float %129, %137\l  store float %138, float addrspace(1)* %36, align 4, !tbaa !7\l  %139 = add nuw nsw i32 %108, 3\l  %140 = mul nsw i32 %139, %10\l  %141 = add nsw i32 %140, %21\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %1, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !7\l  %145 = load float, float addrspace(1)* %117, align 4, !tbaa !7\l  %146 = fmul contract float %144, %145\l  %147 = fadd contract float %138, %146\l  store float %147, float addrspace(1)* %36, align 4, !tbaa !7\l  %148 = mul nuw nsw i32 %121, %10\l  %149 = add nsw i32 %148, %21\l  %150 = sext i32 %149 to i64\l  %151 = getelementptr inbounds float, float addrspace(1)* %1, i64 %150\l  %152 = load float, float addrspace(1)* %151, align 4, !tbaa !7\l  %153 = add nuw i32 %148, %11\l  %154 = zext i32 %153 to i64\l  %155 = getelementptr inbounds float, float addrspace(1)* %2, i64 %154\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !7\l  %157 = fmul contract float %152, %156\l  %158 = fadd contract float %120, %157\l  store float %158, float addrspace(1)* %29, align 4, !tbaa !7\l  %159 = add nuw nsw i32 %108, 2\l  %160 = mul nuw nsw i32 %159, %10\l  %161 = add nsw i32 %160, %21\l  %162 = sext i32 %161 to i64\l  %163 = getelementptr inbounds float, float addrspace(1)* %1, i64 %162\l  %164 = load float, float addrspace(1)* %163, align 4, !tbaa !7\l  %165 = load float, float addrspace(1)* %155, align 4, !tbaa !7\l  %166 = fmul contract float %164, %165\l  %167 = fadd contract float %147, %166\l  store float %167, float addrspace(1)* %36, align 4, !tbaa !7\l  %168 = add nuw nsw i32 %108, 3\l  %169 = mul nuw nsw i32 %168, %10\l  %170 = add nsw i32 %169, %21\l  %171 = sext i32 %170 to i64\l  %172 = getelementptr inbounds float, float addrspace(1)* %1, i64 %171\l  %173 = load float, float addrspace(1)* %172, align 4, !tbaa !7\l  %174 = load float, float addrspace(1)* %155, align 4, !tbaa !7\l  %175 = fmul contract float %173, %174\l  %176 = fadd contract float %167, %175\l  store float %176, float addrspace(1)* %36, align 4, !tbaa !7\l  %177 = add nuw nsw i32 %108, 4\l  %178 = mul nsw i32 %177, %10\l  %179 = add nsw i32 %178, %21\l  %180 = sext i32 %179 to i64\l  %181 = getelementptr inbounds float, float addrspace(1)* %1, i64 %180\l  %182 = load float, float addrspace(1)* %181, align 4, !tbaa !7\l  %183 = load float, float addrspace(1)* %155, align 4, !tbaa !7\l  %184 = fmul contract float %182, %183\l  %185 = fadd contract float %176, %184\l  store float %185, float addrspace(1)* %36, align 4, !tbaa !7\l  %186 = add i32 %109, 2\l  %187 = icmp eq i32 %186, %59\l  br i1 %187, label %60, label %105, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x62dacf0:s0 -> Node0x62daaa0;
	Node0x62dacf0:s1 -> Node0x62dacf0;
}
