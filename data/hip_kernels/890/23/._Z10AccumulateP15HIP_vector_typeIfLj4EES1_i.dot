digraph "CFG for '_Z10AccumulateP15HIP_vector_typeIfLj4EES1_i' function" {
	label="CFG for '_Z10AccumulateP15HIP_vector_typeIfLj4EES1_i' function";

	Node0x52106e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !6\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %8\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = zext i32 %15 to i64\l  %17 = udiv i32 %11, %8\l  %18 = mul i32 %17, %8\l  %19 = icmp ugt i32 %11, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %8\l  %23 = zext i32 %22 to i64\l  %24 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %16\l  %25 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %16\l  %26 = bitcast %struct.HIP_vector_type addrspace(1)* %25 to i8 addrspace(1)*\l  %27 = bitcast %struct.HIP_vector_type addrspace(1)* %24 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %26, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %27, i64 16, i1 false)\l  %28 = icmp sgt i32 %2, 1\l  br i1 %28, label %29, label %67\l|{<s0>T|<s1>F}}"];
	Node0x52106e0:s0 -> Node0x5216170;
	Node0x52106e0:s1 -> Node0x5216200;
	Node0x5216170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%29:\l29:                                               \l  %30 = getelementptr %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(1)* %25, i64 0, i32 0, i32 0, i32 0, i64 0\l  %31 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %16, i32 0, i32 0, i32 0, i64 1\l  %32 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %16, i32 0, i32 0, i32 0, i64 2\l  %33 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %16, i32 0, i32 0, i32 0, i64 3\l  %34 = load float, float addrspace(1)* %30, align 16, !tbaa !16\l  %35 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %36 = load float, float addrspace(1)* %32, align 8, !tbaa !16\l  %37 = load float, float addrspace(1)* %33, align 4, !tbaa !16\l  %38 = add i32 %2, -1\l  %39 = and i32 %38, 1\l  %40 = icmp eq i32 %2, 2\l  br i1 %40, label %45, label %41\l|{<s0>T|<s1>F}}"];
	Node0x5216170:s0 -> Node0x52174a0;
	Node0x5216170:s1 -> Node0x5217530;
	Node0x5217530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%41:\l41:                                               \l  %42 = and i32 %38, -2\l  br label %68\l}"];
	Node0x5217530 -> Node0x5217730;
	Node0x52177f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%43:\l43:                                               \l  %44 = zext i32 %106 to i64\l  br label %45\l}"];
	Node0x52177f0 -> Node0x52174a0;
	Node0x52174a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%45:\l45:                                               \l  %46 = phi float [ %37, %29 ], [ %105, %43 ]\l  %47 = phi float [ %36, %29 ], [ %102, %43 ]\l  %48 = phi float [ %35, %29 ], [ %99, %43 ]\l  %49 = phi float [ %34, %29 ], [ %96, %43 ]\l  %50 = phi i64 [ 1, %29 ], [ %44, %43 ]\l  %51 = icmp eq i32 %39, 0\l  br i1 %51, label %67, label %52\l|{<s0>T|<s1>F}}"];
	Node0x52174a0:s0 -> Node0x5216200;
	Node0x52174a0:s1 -> Node0x5217f10;
	Node0x5217f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%52:\l52:                                               \l  %53 = mul nuw nsw i64 %50, %23\l  %54 = add nuw i64 %53, %16\l  %55 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %54, i32 0, i32 0, i32 0, i64 0\l  %56 = load float, float addrspace(1)* %55, align 16, !tbaa !16\l  %57 = fadd contract float %56, %49\l  store float %57, float addrspace(1)* %30, align 16, !tbaa !16\l  %58 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %54, i32 0, i32 0, i32 0, i64 1\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !16\l  %60 = fadd contract float %59, %48\l  store float %60, float addrspace(1)* %31, align 4, !tbaa !16\l  %61 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %54, i32 0, i32 0, i32 0, i64 2\l  %62 = load float, float addrspace(1)* %61, align 8, !tbaa !16\l  %63 = fadd contract float %62, %47\l  store float %63, float addrspace(1)* %32, align 8, !tbaa !16\l  %64 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %54, i32 0, i32 0, i32 0, i64 3\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !16\l  %66 = fadd contract float %65, %46\l  store float %66, float addrspace(1)* %33, align 4, !tbaa !16\l  br label %67\l}"];
	Node0x5217f10 -> Node0x5216200;
	Node0x5216200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%67:\l67:                                               \l  ret void\l}"];
	Node0x5217730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = phi float [ %37, %41 ], [ %105, %68 ]\l  %70 = phi float [ %36, %41 ], [ %102, %68 ]\l  %71 = phi float [ %35, %41 ], [ %99, %68 ]\l  %72 = phi float [ %34, %41 ], [ %96, %68 ]\l  %73 = phi i32 [ 1, %41 ], [ %106, %68 ]\l  %74 = phi i32 [ 0, %41 ], [ %107, %68 ]\l  %75 = zext i32 %73 to i64\l  %76 = mul nuw nsw i64 %75, %23\l  %77 = add nuw i64 %76, %16\l  %78 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %77, i32 0, i32 0, i32 0, i64 0\l  %79 = load float, float addrspace(1)* %78, align 16, !tbaa !16\l  %80 = fadd contract float %79, %72\l  store float %80, float addrspace(1)* %30, align 16, !tbaa !16\l  %81 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %77, i32 0, i32 0, i32 0, i64 1\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !16\l  %83 = fadd contract float %82, %71\l  store float %83, float addrspace(1)* %31, align 4, !tbaa !16\l  %84 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %77, i32 0, i32 0, i32 0, i64 2\l  %85 = load float, float addrspace(1)* %84, align 8, !tbaa !16\l  %86 = fadd contract float %85, %70\l  store float %86, float addrspace(1)* %32, align 8, !tbaa !16\l  %87 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %77, i32 0, i32 0, i32 0, i64 3\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !16\l  %89 = fadd contract float %88, %69\l  store float %89, float addrspace(1)* %33, align 4, !tbaa !16\l  %90 = add nuw nsw i32 %73, 1\l  %91 = zext i32 %90 to i64\l  %92 = mul nuw nsw i64 %91, %23\l  %93 = add nuw i64 %92, %16\l  %94 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %93, i32 0, i32 0, i32 0, i64 0\l  %95 = load float, float addrspace(1)* %94, align 16, !tbaa !16\l  %96 = fadd contract float %95, %80\l  store float %96, float addrspace(1)* %30, align 16, !tbaa !16\l  %97 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %93, i32 0, i32 0, i32 0, i64 1\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !16\l  %99 = fadd contract float %98, %83\l  store float %99, float addrspace(1)* %31, align 4, !tbaa !16\l  %100 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %93, i32 0, i32 0, i32 0, i64 2\l  %101 = load float, float addrspace(1)* %100, align 8, !tbaa !16\l  %102 = fadd contract float %101, %86\l  store float %102, float addrspace(1)* %32, align 8, !tbaa !16\l  %103 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %93, i32 0, i32 0, i32 0, i64 3\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !16\l  %105 = fadd contract float %104, %89\l  store float %105, float addrspace(1)* %33, align 4, !tbaa !16\l  %106 = add nuw nsw i32 %73, 2\l  %107 = add nuw i32 %74, 2\l  %108 = icmp eq i32 %107, %42\l  br i1 %108, label %43, label %68, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5217730:s0 -> Node0x52177f0;
	Node0x5217730:s1 -> Node0x5217730;
}
