digraph "CFG for '_Z9fillArrayPai' function" {
	label="CFG for '_Z9fillArrayPai' function";

	Node0x52aadc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%2:\l  %3 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %4 = getelementptr i8, i8 addrspace(4)* %3, i64 4\l  %5 = bitcast i8 addrspace(4)* %4 to i16 addrspace(4)*\l  %6 = load i16, i16 addrspace(4)* %5, align 4, !range !4, !invariant.load !5\l  %7 = zext i16 %6 to i32\l  %8 = getelementptr inbounds i8, i8 addrspace(4)* %3, i64 12\l  %9 = bitcast i8 addrspace(4)* %8 to i32 addrspace(4)*\l  %10 = load i32, i32 addrspace(4)* %9, align 4, !tbaa !6\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %11, %7\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %14 = add i32 %12, %13\l  %15 = zext i32 %14 to i64\l  %16 = udiv i32 %10, %7\l  %17 = mul i32 %16, %7\l  %18 = icmp ugt i32 %10, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %7\l  %22 = zext i32 %21 to i64\l  %23 = icmp sgt i32 %1, 0\l  br i1 %23, label %25, label %24\l|{<s0>T|<s1>F}}"];
	Node0x52aadc0:s0 -> Node0x52ad490;
	Node0x52aadc0:s1 -> Node0x52ad520;
	Node0x52ad520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x52ad490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %169, %146 ], [ 0, %2 ]\l  %27 = zext i32 %26 to i64\l  %28 = mul nuw nsw i64 %27, %22\l  %29 = add nuw i64 %28, %15\l  %30 = uitofp i64 %29 to float\l  %31 = fdiv contract float %30, 1.000000e+02\l  %32 = fcmp olt float %31, 1.310720e+05\l  br i1 %32, label %33, label %40\l|{<s0>T|<s1>F}}"];
	Node0x52ad490:s0 -> Node0x52ad060;
	Node0x52ad490:s1 -> Node0x52ad0f0;
	Node0x52ad060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%33:\l33:                                               \l  %34 = fmul float %31, 0x3FE45F3060000000\l  %35 = tail call float @llvm.rint.f32(float %34)\l  %36 = tail call float @llvm.fma.f32(float %35, float 0xBFF921FB40000000,\l... float %31)\l  %37 = tail call float @llvm.fma.f32(float %35, float 0xBE74442D00000000,\l... float %36)\l  %38 = tail call float @llvm.fma.f32(float %35, float 0xBCF8469880000000,\l... float %37)\l  %39 = fptosi float %35 to i32\l  br label %146\l}"];
	Node0x52ad060 -> Node0x52ad6e0;
	Node0x52ad0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%40:\l40:                                               \l  %41 = bitcast float %31 to i32\l  %42 = lshr i32 %41, 23\l  %43 = and i32 %41, 8388607\l  %44 = or i32 %43, 8388608\l  %45 = zext i32 %44 to i64\l  %46 = mul nuw nsw i64 %45, 4266746795\l  %47 = trunc i64 %46 to i32\l  %48 = lshr i64 %46, 32\l  %49 = mul nuw nsw i64 %45, 1011060801\l  %50 = add nuw nsw i64 %48, %49\l  %51 = trunc i64 %50 to i32\l  %52 = lshr i64 %50, 32\l  %53 = mul nuw nsw i64 %45, 3680671129\l  %54 = add nuw nsw i64 %52, %53\l  %55 = trunc i64 %54 to i32\l  %56 = lshr i64 %54, 32\l  %57 = mul nuw nsw i64 %45, 4113882560\l  %58 = add nuw nsw i64 %56, %57\l  %59 = trunc i64 %58 to i32\l  %60 = lshr i64 %58, 32\l  %61 = mul nuw nsw i64 %45, 4230436817\l  %62 = add nuw nsw i64 %60, %61\l  %63 = trunc i64 %62 to i32\l  %64 = lshr i64 %62, 32\l  %65 = mul nuw nsw i64 %45, 1313084713\l  %66 = add nuw nsw i64 %64, %65\l  %67 = trunc i64 %66 to i32\l  %68 = lshr i64 %66, 32\l  %69 = mul nuw nsw i64 %45, 2734261102\l  %70 = add nuw nsw i64 %68, %69\l  %71 = trunc i64 %70 to i32\l  %72 = lshr i64 %70, 32\l  %73 = trunc i64 %72 to i32\l  %74 = add nsw i32 %42, -120\l  %75 = icmp ugt i32 %74, 63\l  %76 = select i1 %75, i32 %67, i32 %73\l  %77 = select i1 %75, i32 %63, i32 %71\l  %78 = select i1 %75, i32 %59, i32 %67\l  %79 = select i1 %75, i32 %55, i32 %63\l  %80 = select i1 %75, i32 %51, i32 %59\l  %81 = select i1 %75, i32 %47, i32 %55\l  %82 = select i1 %75, i32 -64, i32 0\l  %83 = add nsw i32 %82, %74\l  %84 = icmp ugt i32 %83, 31\l  %85 = select i1 %84, i32 %77, i32 %76\l  %86 = select i1 %84, i32 %78, i32 %77\l  %87 = select i1 %84, i32 %79, i32 %78\l  %88 = select i1 %84, i32 %80, i32 %79\l  %89 = select i1 %84, i32 %81, i32 %80\l  %90 = select i1 %84, i32 -32, i32 0\l  %91 = add nsw i32 %90, %83\l  %92 = icmp ugt i32 %91, 31\l  %93 = select i1 %92, i32 %86, i32 %85\l  %94 = select i1 %92, i32 %87, i32 %86\l  %95 = select i1 %92, i32 %88, i32 %87\l  %96 = select i1 %92, i32 %89, i32 %88\l  %97 = select i1 %92, i32 -32, i32 0\l  %98 = add nsw i32 %97, %91\l  %99 = icmp eq i32 %98, 0\l  %100 = sub nsw i32 32, %98\l  %101 = tail call i32 @llvm.fshr.i32(i32 %93, i32 %94, i32 %100)\l  %102 = tail call i32 @llvm.fshr.i32(i32 %94, i32 %95, i32 %100)\l  %103 = tail call i32 @llvm.fshr.i32(i32 %95, i32 %96, i32 %100)\l  %104 = select i1 %99, i32 %93, i32 %101\l  %105 = select i1 %99, i32 %94, i32 %102\l  %106 = select i1 %99, i32 %95, i32 %103\l  %107 = lshr i32 %104, 29\l  %108 = tail call i32 @llvm.fshl.i32(i32 %104, i32 %105, i32 2)\l  %109 = tail call i32 @llvm.fshl.i32(i32 %105, i32 %106, i32 2)\l  %110 = tail call i32 @llvm.fshl.i32(i32 %106, i32 %96, i32 2)\l  %111 = and i32 %107, 1\l  %112 = sub nsw i32 0, %111\l  %113 = shl i32 %107, 31\l  %114 = xor i32 %108, %112\l  %115 = xor i32 %109, %112\l  %116 = xor i32 %110, %112\l  %117 = tail call i32 @llvm.ctlz.i32(i32 %114, i1 false), !range !16\l  %118 = sub nsw i32 31, %117\l  %119 = tail call i32 @llvm.fshr.i32(i32 %114, i32 %115, i32 %118)\l  %120 = tail call i32 @llvm.fshr.i32(i32 %115, i32 %116, i32 %118)\l  %121 = shl nuw nsw i32 %117, 23\l  %122 = sub nuw nsw i32 1056964608, %121\l  %123 = lshr i32 %119, 9\l  %124 = or i32 %123, %122\l  %125 = or i32 %124, %113\l  %126 = bitcast i32 %125 to float\l  %127 = tail call i32 @llvm.fshl.i32(i32 %119, i32 %120, i32 23)\l  %128 = tail call i32 @llvm.ctlz.i32(i32 %127, i1 false), !range !16\l  %129 = fmul float %126, 0x3FF921FB40000000\l  %130 = add nuw nsw i32 %128, %117\l  %131 = shl nuw nsw i32 %130, 23\l  %132 = sub nuw nsw i32 855638016, %131\l  %133 = sub nsw i32 31, %128\l  %134 = tail call i32 @llvm.fshr.i32(i32 %127, i32 %120, i32 %133)\l  %135 = lshr i32 %134, 9\l  %136 = or i32 %132, %135\l  %137 = or i32 %136, %113\l  %138 = bitcast i32 %137 to float\l  %139 = fneg float %129\l  %140 = tail call float @llvm.fma.f32(float %126, float 0x3FF921FB40000000,\l... float %139)\l  %141 = tail call float @llvm.fma.f32(float %126, float 0x3E74442D00000000,\l... float %140)\l  %142 = tail call float @llvm.fma.f32(float %138, float 0x3FF921FB40000000,\l... float %141)\l  %143 = fadd float %129, %142\l  %144 = lshr i32 %104, 30\l  %145 = add nuw nsw i32 %111, %144\l  br label %146\l}"];
	Node0x52ad0f0 -> Node0x52ad6e0;
	Node0x52ad6e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%146:\l146:                                              \l  %147 = phi float [ %38, %33 ], [ %143, %40 ]\l  %148 = phi i32 [ %39, %33 ], [ %145, %40 ]\l  %149 = fmul float %147, %147\l  %150 = tail call float @llvm.fmuladd.f32(float %149, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %151 = tail call float @llvm.fmuladd.f32(float %149, float %150, float\l... 0xBFC55553A0000000)\l  %152 = fmul float %149, %151\l  %153 = tail call float @llvm.fmuladd.f32(float %147, float %152, float %147)\l  %154 = tail call float @llvm.fmuladd.f32(float %149, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %155 = tail call float @llvm.fmuladd.f32(float %149, float %154, float\l... 0x3FA5557EE0000000)\l  %156 = tail call float @llvm.fmuladd.f32(float %149, float %155, float\l... 0xBFE0000080000000)\l  %157 = tail call float @llvm.fmuladd.f32(float %149, float %156, float\l... 1.000000e+00)\l  %158 = and i32 %148, 1\l  %159 = icmp eq i32 %158, 0\l  %160 = select i1 %159, float %153, float %157\l  %161 = bitcast float %160 to i32\l  %162 = shl i32 %148, 30\l  %163 = and i32 %162, -2147483648\l  %164 = xor i32 %163, %161\l  %165 = bitcast i32 %164 to float\l  %166 = fmul contract float %165, 3.000000e+01\l  %167 = fptosi float %166 to i8\l  %168 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %29\l  store i8 %167, i8 addrspace(1)* %168, align 1, !tbaa !17\l  %169 = add nuw nsw i32 %26, 1\l  %170 = icmp eq i32 %169, %1\l  br i1 %170, label %24, label %25, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x52ad6e0:s0 -> Node0x52ad520;
	Node0x52ad6e0:s1 -> Node0x52ad490;
}
