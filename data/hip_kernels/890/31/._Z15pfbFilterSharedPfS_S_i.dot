digraph "CFG for '_Z15pfbFilterSharedPfS_S_i' function" {
	label="CFG for '_Z15pfbFilterSharedPfS_S_i' function";

	Node0x575c6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %13 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 2, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %6, %16\l  %18 = add i32 %17, %12\l  %19 = mul i32 %18, %10\l  %20 = add i32 %19, %11\l  %21 = mul nsw i32 %10, %3\l  %22 = icmp slt i32 %20, %21\l  %23 = sext i32 %20 to i64\l  br i1 %22, label %24, label %28\l|{<s0>T|<s1>F}}"];
	Node0x575c6a0:s0 -> Node0x575fef0;
	Node0x575c6a0:s1 -> Node0x575ff80;
	Node0x575fef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%24:\l24:                                               \l  %25 = getelementptr inbounds float, float addrspace(1)* %2, i64 %23\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_taps, i32 0, i32 %20\l  store float %26, float addrspace(3)* %27, align 4, !tbaa !7\l  br label %28\l}"];
	Node0x575fef0 -> Node0x575ff80;
	Node0x575ff80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%28:\l28:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %29 = getelementptr inbounds float, float addrspace(1)* %1, i64 %23\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_taps, i32 0, i32 %11\l  %32 = load float, float addrspace(3)* %31, align 4, !tbaa !7\l  %33 = fmul contract float %30, %32\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %23\l  store float %33, float addrspace(1)* %34, align 4, !tbaa !7\l  %35 = icmp sgt i32 %3, 1\l  br i1 %35, label %36, label %64\l|{<s0>T|<s1>F}}"];
	Node0x575ff80:s0 -> Node0x575fb30;
	Node0x575ff80:s1 -> Node0x57614b0;
	Node0x575fb30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%36:\l36:                                               \l  %37 = add i32 %3, -1\l  %38 = add i32 %3, -2\l  %39 = and i32 %37, 7\l  %40 = icmp ult i32 %38, 7\l  br i1 %40, label %43, label %41\l|{<s0>T|<s1>F}}"];
	Node0x575fb30:s0 -> Node0x5761860;
	Node0x575fb30:s1 -> Node0x57618b0;
	Node0x57618b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%41:\l41:                                               \l  %42 = and i32 %37, -8\l  br label %65\l}"];
	Node0x57618b0 -> Node0x5761ab0;
	Node0x5761860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%43:\l43:                                               \l  %44 = phi float [ %33, %36 ], [ %155, %65 ]\l  %45 = phi i32 [ 1, %36 ], [ %156, %65 ]\l  %46 = icmp eq i32 %39, 0\l  br i1 %46, label %64, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5761860:s0 -> Node0x57614b0;
	Node0x5761860:s1 -> Node0x5761e00;
	Node0x5761e00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi float [ %60, %47 ], [ %44, %43 ]\l  %49 = phi i32 [ %61, %47 ], [ %45, %43 ]\l  %50 = phi i32 [ %62, %47 ], [ 0, %43 ]\l  %51 = mul nuw nsw i32 %49, %10\l  %52 = add nsw i32 %51, %20\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %56 = add nuw i32 %51, %11\l  %57 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_taps, i32 0, i32 %56\l  %58 = load float, float addrspace(3)* %57, align 4, !tbaa !7\l  %59 = fmul contract float %55, %58\l  %60 = fadd contract float %48, %59\l  store float %60, float addrspace(1)* %34, align 4, !tbaa !7\l  %61 = add nuw nsw i32 %49, 1\l  %62 = add i32 %50, 1\l  %63 = icmp eq i32 %62, %39\l  br i1 %63, label %64, label %47, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5761e00:s0 -> Node0x57614b0;
	Node0x5761e00:s1 -> Node0x5761e00;
	Node0x57614b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%64:\l64:                                               \l  ret void\l}"];
	Node0x5761ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%65:\l65:                                               \l  %66 = phi float [ %33, %41 ], [ %155, %65 ]\l  %67 = phi i32 [ 1, %41 ], [ %156, %65 ]\l  %68 = phi i32 [ 0, %41 ], [ %157, %65 ]\l  %69 = mul nuw nsw i32 %67, %10\l  %70 = add nsw i32 %69, %20\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7\l  %74 = add nuw i32 %69, %11\l  %75 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_taps, i32 0, i32 %74\l  %76 = load float, float addrspace(3)* %75, align 4, !tbaa !7\l  %77 = fmul contract float %73, %76\l  %78 = fadd contract float %66, %77\l  store float %78, float addrspace(1)* %34, align 4, !tbaa !7\l  %79 = add nuw nsw i32 %67, 1\l  %80 = mul nuw nsw i32 %79, %10\l  %81 = add nsw i32 %80, %20\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %1, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  %85 = add nuw i32 %80, %11\l  %86 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_taps, i32 0, i32 %85\l  %87 = load float, float addrspace(3)* %86, align 4, !tbaa !7\l  %88 = fmul contract float %84, %87\l  %89 = fadd contract float %78, %88\l  store float %89, float addrspace(1)* %34, align 4, !tbaa !7\l  %90 = add nuw nsw i32 %67, 2\l  %91 = mul nuw nsw i32 %90, %10\l  %92 = add nsw i32 %91, %20\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %1, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7\l  %96 = add nuw i32 %91, %11\l  %97 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_taps, i32 0, i32 %96\l  %98 = load float, float addrspace(3)* %97, align 4, !tbaa !7\l  %99 = fmul contract float %95, %98\l  %100 = fadd contract float %89, %99\l  store float %100, float addrspace(1)* %34, align 4, !tbaa !7\l  %101 = add nuw nsw i32 %67, 3\l  %102 = mul nuw nsw i32 %101, %10\l  %103 = add nsw i32 %102, %20\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %1, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7\l  %107 = add nuw i32 %102, %11\l  %108 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_taps, i32 0, i32 %107\l  %109 = load float, float addrspace(3)* %108, align 4, !tbaa !7\l  %110 = fmul contract float %106, %109\l  %111 = fadd contract float %100, %110\l  store float %111, float addrspace(1)* %34, align 4, !tbaa !7\l  %112 = add nuw nsw i32 %67, 4\l  %113 = mul nuw nsw i32 %112, %10\l  %114 = add nsw i32 %113, %20\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %1, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !7\l  %118 = add nuw i32 %113, %11\l  %119 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_taps, i32 0, i32 %118\l  %120 = load float, float addrspace(3)* %119, align 4, !tbaa !7\l  %121 = fmul contract float %117, %120\l  %122 = fadd contract float %111, %121\l  store float %122, float addrspace(1)* %34, align 4, !tbaa !7\l  %123 = add nuw nsw i32 %67, 5\l  %124 = mul nuw nsw i32 %123, %10\l  %125 = add nsw i32 %124, %20\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %1, i64 %126\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !7\l  %129 = add nuw i32 %124, %11\l  %130 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_taps, i32 0, i32 %129\l  %131 = load float, float addrspace(3)* %130, align 4, !tbaa !7\l  %132 = fmul contract float %128, %131\l  %133 = fadd contract float %122, %132\l  store float %133, float addrspace(1)* %34, align 4, !tbaa !7\l  %134 = add nuw nsw i32 %67, 6\l  %135 = mul nuw nsw i32 %134, %10\l  %136 = add nsw i32 %135, %20\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %1, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !7\l  %140 = add nuw i32 %135, %11\l  %141 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_taps, i32 0, i32 %140\l  %142 = load float, float addrspace(3)* %141, align 4, !tbaa !7\l  %143 = fmul contract float %139, %142\l  %144 = fadd contract float %133, %143\l  store float %144, float addrspace(1)* %34, align 4, !tbaa !7\l  %145 = add nuw nsw i32 %67, 7\l  %146 = mul nuw nsw i32 %145, %10\l  %147 = add nsw i32 %146, %20\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds float, float addrspace(1)* %1, i64 %148\l  %150 = load float, float addrspace(1)* %149, align 4, !tbaa !7\l  %151 = add nuw i32 %146, %11\l  %152 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_taps, i32 0, i32 %151\l  %153 = load float, float addrspace(3)* %152, align 4, !tbaa !7\l  %154 = fmul contract float %150, %153\l  %155 = fadd contract float %144, %154\l  store float %155, float addrspace(1)* %34, align 4, !tbaa !7\l  %156 = add nuw nsw i32 %67, 8\l  %157 = add i32 %68, 8\l  %158 = icmp eq i32 %157, %42\l  br i1 %158, label %43, label %65, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5761ab0:s0 -> Node0x5761860;
	Node0x5761ab0:s1 -> Node0x5761ab0;
}
