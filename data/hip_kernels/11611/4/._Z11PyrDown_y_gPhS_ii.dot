digraph "CFG for '_Z11PyrDown_y_gPhS_ii' function" {
	label="CFG for '_Z11PyrDown_y_gPhS_ii' function";

	Node0x4a06b70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %13, %2\l  %23 = icmp slt i32 %21, %3\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %83\l|{<s0>T|<s1>F}}"];
	Node0x4a06b70:s0 -> Node0x4a0a610;
	Node0x4a06b70:s1 -> Node0x4a0a6a0;
	Node0x4a0a610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%25:\l25:                                               \l  %26 = shl nsw i32 %21, 1\l  %27 = add nsw i32 %26, -2\l  %28 = mul nsw i32 %27, %2\l  %29 = add nsw i32 %28, %13\l  %30 = shl nsw i32 %29, 1\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %31\l  %33 = load i8, i8 addrspace(1)* %32, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %34 = uitofp i8 %33 to float\l  %35 = fmul contract float %34, 6.250000e-02\l  %36 = add nsw i32 %26, -1\l  %37 = mul nsw i32 %36, %2\l  %38 = add nsw i32 %37, %13\l  %39 = shl nsw i32 %38, 1\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %40\l  %42 = load i8, i8 addrspace(1)* %41, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %43 = uitofp i8 %42 to float\l  %44 = fmul contract float %43, 2.500000e-01\l  %45 = mul nsw i32 %26, %2\l  %46 = add nsw i32 %45, %13\l  %47 = shl nsw i32 %46, 1\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %48\l  %50 = load i8, i8 addrspace(1)* %49, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %51 = uitofp i8 %50 to float\l  %52 = fmul contract float %51, 3.000000e+00\l  %53 = fmul contract float %52, 1.250000e-01\l  %54 = add nuw nsw i32 %26, 1\l  %55 = mul nsw i32 %54, %2\l  %56 = add nsw i32 %55, %13\l  %57 = shl nsw i32 %56, 1\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %58\l  %60 = load i8, i8 addrspace(1)* %59, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %61 = uitofp i8 %60 to float\l  %62 = fmul contract float %61, 2.500000e-01\l  %63 = add nsw i32 %26, 2\l  %64 = mul nsw i32 %63, %2\l  %65 = add i32 %64, %13\l  %66 = shl i32 %65, 1\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %67\l  %69 = load i8, i8 addrspace(1)* %68, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %70 = uitofp i8 %69 to float\l  %71 = fmul contract float %70, 6.250000e-02\l  %72 = fadd contract float %35, %44\l  %73 = fadd contract float %72, %53\l  %74 = fadd contract float %62, %73\l  %75 = fadd contract float %71, %74\l  %76 = fptosi float %75 to i32\l  %77 = tail call i32 @llvm.smin.i32(i32 %76, i32 255)\l  %78 = trunc i32 %77 to i8\l  %79 = mul nsw i32 %21, %2\l  %80 = add nsw i32 %79, %13\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %81\l  store i8 %78, i8 addrspace(1)* %82, align 1, !tbaa !7\l  br label %83\l}"];
	Node0x4a0a610 -> Node0x4a0a6a0;
	Node0x4a0a6a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  ret void\l}"];
}
