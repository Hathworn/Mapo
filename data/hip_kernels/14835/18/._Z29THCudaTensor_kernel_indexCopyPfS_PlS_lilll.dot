digraph "CFG for '_Z29THCudaTensor_kernel_indexCopyPfS_PlS_lilll' function" {
	label="CFG for '_Z29THCudaTensor_kernel_indexCopyPfS_PlS_lilll' function";

	Node0x597c460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %10, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %20, %21\l  %24 = mul i32 %23, %15\l  %25 = add i32 %24, %22\l  %26 = freeze i32 %25\l  %27 = sdiv i64 %7, %6\l  %28 = sext i32 %26 to i64\l  %29 = icmp sgt i64 %27, %28\l  %30 = icmp sgt i64 %6, 0\l  %31 = and i1 %29, %30\l  br i1 %31, label %32, label %100\l|{<s0>T|<s1>F}}"];
	Node0x597c460:s0 -> Node0x5980970;
	Node0x597c460:s1 -> Node0x5980a00;
	Node0x5980970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%32:\l32:                                               \l  %33 = icmp sgt i64 %4, 0\l  %34 = sext i32 %5 to i64\l  %35 = getelementptr inbounds i64, i64 addrspace(1)* %2, i64 %34\l  %36 = load i64, i64 addrspace(1)* %35, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  br label %37\l}"];
	Node0x5980970 -> Node0x5981010;
	Node0x5981010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%37:\l37:                                               \l  %38 = phi i64 [ 0, %32 ], [ %57, %39 ]\l  br i1 %33, label %59, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5981010:s0 -> Node0x5981250;
	Node0x5981010:s1 -> Node0x5981110;
	Node0x5981110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%39:\l39:                                               \l  %40 = phi i32 [ 0, %37 ], [ %94, %92 ]\l  %41 = phi i32 [ 0, %37 ], [ %95, %92 ]\l  %42 = sext i32 %40 to i64\l  %43 = mul nsw i64 %36, %38\l  %44 = add nsw i64 %43, %42\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !11\l  %47 = sext i32 %41 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %3, i64 %38\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !11\l  %50 = fptosi float %49 to i32\l  %51 = add nsw i32 %50, -1\l  %52 = sext i32 %51 to i64\l  %53 = mul nsw i64 %36, %52\l  %54 = add nsw i64 %53, %47\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  store float %46, float addrspace(1)* %55, align 4, !tbaa !11\l  %56 = add nuw nsw i64 %38, 1\l  %57 = and i64 %56, 4294967295\l  %58 = icmp slt i64 %57, %6\l  br i1 %58, label %37, label %100, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5981110:s0 -> Node0x5981010;
	Node0x5981110:s1 -> Node0x5980a00;
	Node0x5981250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi i64 [ %98, %92 ], [ 0, %37 ]\l  %61 = phi i32 [ %97, %92 ], [ %26, %37 ]\l  %62 = phi i32 [ %95, %92 ], [ 0, %37 ]\l  %63 = phi i32 [ %94, %92 ], [ 0, %37 ]\l  %64 = trunc i64 %60 to i32\l  %65 = icmp slt i32 %64, %5\l  br i1 %65, label %66, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5981250:s0 -> Node0x5980bd0;
	Node0x5981250:s1 -> Node0x5980c60;
	Node0x5980bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%66:\l66:                                               \l  %67 = getelementptr inbounds i64, i64 addrspace(1)* %2, i64 %60\l  %68 = load i64, i64 addrspace(1)* %67, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  %69 = sdiv i64 %68, %8\l  %70 = sext i32 %61 to i64\l  %71 = sdiv i64 %70, %69\l  %72 = mul nsw i64 %71, %69\l  %73 = trunc i64 %72 to i32\l  %74 = sub i32 %61, %73\l  %75 = mul nsw i64 %72, %6\l  %76 = trunc i64 %75 to i32\l  %77 = add i32 %63, %76\l  %78 = mul nsw i64 %71, %68\l  %79 = trunc i64 %78 to i32\l  %80 = add i32 %62, %79\l  br label %92\l}"];
	Node0x5980bd0 -> Node0x59813f0;
	Node0x5980c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%81:\l81:                                               \l  %82 = icmp sgt i32 %64, %5\l  br i1 %82, label %83, label %92\l|{<s0>T|<s1>F}}"];
	Node0x5980c60:s0 -> Node0x5980cf0;
	Node0x5980c60:s1 -> Node0x59813f0;
	Node0x5980cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%83:\l83:                                               \l  %84 = sext i32 %61 to i64\l  %85 = getelementptr inbounds i64, i64 addrspace(1)* %2, i64 %60\l  %86 = load i64, i64 addrspace(1)* %85, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  %87 = srem i64 %84, %86\l  %88 = trunc i64 %87 to i32\l  %89 = sub i32 %61, %88\l  %90 = add i32 %89, %63\l  %91 = add i32 %89, %62\l  br label %92\l}"];
	Node0x5980cf0 -> Node0x59813f0;
	Node0x59813f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%92:\l92:                                               \l  %93 = phi i32 [ %74, %66 ], [ %88, %83 ], [ %61, %81 ]\l  %94 = phi i32 [ %77, %66 ], [ %90, %83 ], [ %63, %81 ]\l  %95 = phi i32 [ %80, %66 ], [ %91, %83 ], [ %62, %81 ]\l  %96 = add nuw nsw i64 %60, 1\l  %97 = freeze i32 %93\l  %98 = and i64 %96, 4294967295\l  %99 = icmp slt i64 %98, %4\l  br i1 %99, label %59, label %39, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x59813f0:s0 -> Node0x5981250;
	Node0x59813f0:s1 -> Node0x5981110;
	Node0x5980a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%100:\l100:                                              \l  ret void\l}"];
}
