digraph "CFG for '_Z15__minkowskidistPdiS_iS_iiiid' function" {
	label="CFG for '_Z15__minkowskidistPdiS_iS_iiiid' function";

	Node0x46ee2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%10:\l  %11 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 24\l  %13 = bitcast i8 addrspace(4)* %12 to i64 addrspace(4)*\l  %14 = load i64, i64 addrspace(4)* %13, align 8, !tbaa !4\l  %15 = inttoptr i64 %14 to i8 addrspace(1)*\l  %16 = addrspacecast i8 addrspace(1)* %15 to i8*\l  %17 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %18 = extractelement \<2 x i64\> %17, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([58 x i8], [58 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %19, label %23\l|{<s0>T|<s1>F}}"];
	Node0x46ee2a0:s0 -> Node0x46f02a0;
	Node0x46ee2a0:s1 -> Node0x46f0c90;
	Node0x46f02a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%19:\l19:                                               \l  %20 = and i64 %18, -227\l  %21 = or i64 %20, 34\l  %22 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %21, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %463\l}"];
	Node0x46f02a0 -> Node0x46f0f50;
	Node0x46f0c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%23:\l23:                                               \l  %24 = and i64 %18, -3\l  %25 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %24, i64 0\l  br label %26\l}"];
	Node0x46f0c90 -> Node0x46f1a60;
	Node0x46f1a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%26:\l26:                                               \l  %27 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([58 x i8], [58 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([58 x i8], [58 x i8] addrspace(4)*\l... @.str, i64 0, i64 57) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([58 x i8]* addrspacecast ([58 x i8] addrspace(4)* @.str to [58 x i8]*) to\l... i64)), i64 1))), %23 ], [ %460, %452 ]\l  %28 = phi i8 addrspace(4)* [ getelementptr inbounds ([58 x i8], [58 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %23 ], [ %461, %452 ]\l  %29 = phi \<2 x i64\> [ %25, %23 ], [ %459, %452 ]\l  %30 = icmp ugt i64 %27, 56\l  %31 = extractelement \<2 x i64\> %29, i64 0\l  %32 = or i64 %31, 2\l  %33 = insertelement \<2 x i64\> poison, i64 %32, i64 0\l  %34 = select i1 %30, \<2 x i64\> %29, \<2 x i64\> %33\l  %35 = tail call i64 @llvm.umin.i64(i64 %27, i64 56)\l  %36 = trunc i64 %35 to i32\l  %37 = extractelement \<2 x i64\> %34, i64 0\l  %38 = icmp ugt i32 %36, 7\l  br i1 %38, label %41, label %39\l|{<s0>T|<s1>F}}"];
	Node0x46f1a60:s0 -> Node0x46f2af0;
	Node0x46f1a60:s1 -> Node0x46f2b80;
	Node0x46f2b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%39:\l39:                                               \l  %40 = icmp eq i32 %36, 0\l  br i1 %40, label %94, label %81\l|{<s0>T|<s1>F}}"];
	Node0x46f2b80:s0 -> Node0x46f2d80;
	Node0x46f2b80:s1 -> Node0x46f2dd0;
	Node0x46f2af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%41:\l41:                                               \l  %42 = load i8, i8 addrspace(4)* %28, align 1, !tbaa !8\l  %43 = zext i8 %42 to i64\l  %44 = getelementptr inbounds i8, i8 addrspace(4)* %28, i64 1\l  %45 = load i8, i8 addrspace(4)* %44, align 1, !tbaa !8\l  %46 = zext i8 %45 to i64\l  %47 = shl nuw nsw i64 %46, 8\l  %48 = or i64 %47, %43\l  %49 = getelementptr inbounds i8, i8 addrspace(4)* %28, i64 2\l  %50 = load i8, i8 addrspace(4)* %49, align 1, !tbaa !8\l  %51 = zext i8 %50 to i64\l  %52 = shl nuw nsw i64 %51, 16\l  %53 = or i64 %48, %52\l  %54 = getelementptr inbounds i8, i8 addrspace(4)* %28, i64 3\l  %55 = load i8, i8 addrspace(4)* %54, align 1, !tbaa !8\l  %56 = zext i8 %55 to i64\l  %57 = shl nuw nsw i64 %56, 24\l  %58 = or i64 %53, %57\l  %59 = getelementptr inbounds i8, i8 addrspace(4)* %28, i64 4\l  %60 = load i8, i8 addrspace(4)* %59, align 1, !tbaa !8\l  %61 = zext i8 %60 to i64\l  %62 = shl nuw nsw i64 %61, 32\l  %63 = or i64 %58, %62\l  %64 = getelementptr inbounds i8, i8 addrspace(4)* %28, i64 5\l  %65 = load i8, i8 addrspace(4)* %64, align 1, !tbaa !8\l  %66 = zext i8 %65 to i64\l  %67 = shl nuw nsw i64 %66, 40\l  %68 = or i64 %63, %67\l  %69 = getelementptr inbounds i8, i8 addrspace(4)* %28, i64 6\l  %70 = load i8, i8 addrspace(4)* %69, align 1, !tbaa !8\l  %71 = zext i8 %70 to i64\l  %72 = shl nuw nsw i64 %71, 48\l  %73 = or i64 %68, %72\l  %74 = getelementptr inbounds i8, i8 addrspace(4)* %28, i64 7\l  %75 = load i8, i8 addrspace(4)* %74, align 1, !tbaa !8\l  %76 = zext i8 %75 to i64\l  %77 = shl nuw i64 %76, 56\l  %78 = or i64 %73, %77\l  %79 = add nsw i32 %36, -8\l  %80 = getelementptr inbounds i8, i8 addrspace(4)* %28, i64 8\l  br label %94\l}"];
	Node0x46f2af0 -> Node0x46f2d80;
	Node0x46f2dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = phi i32 [ %92, %81 ], [ 0, %39 ]\l  %83 = phi i64 [ %91, %81 ], [ 0, %39 ]\l  %84 = zext i32 %82 to i64\l  %85 = getelementptr inbounds i8, i8 addrspace(4)* %28, i64 %84\l  %86 = load i8, i8 addrspace(4)* %85, align 1, !tbaa !8\l  %87 = zext i8 %86 to i64\l  %88 = shl i32 %82, 3\l  %89 = zext i32 %88 to i64\l  %90 = shl nuw i64 %87, %89\l  %91 = or i64 %90, %83\l  %92 = add nuw nsw i32 %82, 1\l  %93 = icmp eq i32 %92, %36\l  br i1 %93, label %94, label %81, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x46f2dd0:s0 -> Node0x46f2d80;
	Node0x46f2dd0:s1 -> Node0x46f2dd0;
	Node0x46f2d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%94:\l94:                                               \l  %95 = phi i8 addrspace(4)* [ %80, %41 ], [ %28, %39 ], [ %28, %81 ]\l  %96 = phi i32 [ %79, %41 ], [ 0, %39 ], [ 0, %81 ]\l  %97 = phi i64 [ %78, %41 ], [ 0, %39 ], [ %91, %81 ]\l  %98 = icmp ugt i32 %96, 7\l  br i1 %98, label %101, label %99\l|{<s0>T|<s1>F}}"];
	Node0x46f2d80:s0 -> Node0x46f5ab0;
	Node0x46f2d80:s1 -> Node0x46f5b00;
	Node0x46f5b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%99:\l99:                                               \l  %100 = icmp eq i32 %96, 0\l  br i1 %100, label %154, label %141\l|{<s0>T|<s1>F}}"];
	Node0x46f5b00:s0 -> Node0x46f5cd0;
	Node0x46f5b00:s1 -> Node0x46f5d20;
	Node0x46f5ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%101:\l101:                                              \l  %102 = load i8, i8 addrspace(4)* %95, align 1, !tbaa !8\l  %103 = zext i8 %102 to i64\l  %104 = getelementptr inbounds i8, i8 addrspace(4)* %95, i64 1\l  %105 = load i8, i8 addrspace(4)* %104, align 1, !tbaa !8\l  %106 = zext i8 %105 to i64\l  %107 = shl nuw nsw i64 %106, 8\l  %108 = or i64 %107, %103\l  %109 = getelementptr inbounds i8, i8 addrspace(4)* %95, i64 2\l  %110 = load i8, i8 addrspace(4)* %109, align 1, !tbaa !8\l  %111 = zext i8 %110 to i64\l  %112 = shl nuw nsw i64 %111, 16\l  %113 = or i64 %108, %112\l  %114 = getelementptr inbounds i8, i8 addrspace(4)* %95, i64 3\l  %115 = load i8, i8 addrspace(4)* %114, align 1, !tbaa !8\l  %116 = zext i8 %115 to i64\l  %117 = shl nuw nsw i64 %116, 24\l  %118 = or i64 %113, %117\l  %119 = getelementptr inbounds i8, i8 addrspace(4)* %95, i64 4\l  %120 = load i8, i8 addrspace(4)* %119, align 1, !tbaa !8\l  %121 = zext i8 %120 to i64\l  %122 = shl nuw nsw i64 %121, 32\l  %123 = or i64 %118, %122\l  %124 = getelementptr inbounds i8, i8 addrspace(4)* %95, i64 5\l  %125 = load i8, i8 addrspace(4)* %124, align 1, !tbaa !8\l  %126 = zext i8 %125 to i64\l  %127 = shl nuw nsw i64 %126, 40\l  %128 = or i64 %123, %127\l  %129 = getelementptr inbounds i8, i8 addrspace(4)* %95, i64 6\l  %130 = load i8, i8 addrspace(4)* %129, align 1, !tbaa !8\l  %131 = zext i8 %130 to i64\l  %132 = shl nuw nsw i64 %131, 48\l  %133 = or i64 %128, %132\l  %134 = getelementptr inbounds i8, i8 addrspace(4)* %95, i64 7\l  %135 = load i8, i8 addrspace(4)* %134, align 1, !tbaa !8\l  %136 = zext i8 %135 to i64\l  %137 = shl nuw i64 %136, 56\l  %138 = or i64 %133, %137\l  %139 = add nsw i32 %96, -8\l  %140 = getelementptr inbounds i8, i8 addrspace(4)* %95, i64 8\l  br label %154\l}"];
	Node0x46f5ab0 -> Node0x46f5cd0;
	Node0x46f5d20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%141:\l141:                                              \l  %142 = phi i32 [ %152, %141 ], [ 0, %99 ]\l  %143 = phi i64 [ %151, %141 ], [ 0, %99 ]\l  %144 = zext i32 %142 to i64\l  %145 = getelementptr inbounds i8, i8 addrspace(4)* %95, i64 %144\l  %146 = load i8, i8 addrspace(4)* %145, align 1, !tbaa !8\l  %147 = zext i8 %146 to i64\l  %148 = shl i32 %142, 3\l  %149 = zext i32 %148 to i64\l  %150 = shl nuw i64 %147, %149\l  %151 = or i64 %150, %143\l  %152 = add nuw nsw i32 %142, 1\l  %153 = icmp eq i32 %152, %96\l  br i1 %153, label %154, label %141\l|{<s0>T|<s1>F}}"];
	Node0x46f5d20:s0 -> Node0x46f5cd0;
	Node0x46f5d20:s1 -> Node0x46f5d20;
	Node0x46f5cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%154:\l154:                                              \l  %155 = phi i8 addrspace(4)* [ %140, %101 ], [ %95, %99 ], [ %95, %141 ]\l  %156 = phi i32 [ %139, %101 ], [ 0, %99 ], [ 0, %141 ]\l  %157 = phi i64 [ %138, %101 ], [ 0, %99 ], [ %151, %141 ]\l  %158 = icmp ugt i32 %156, 7\l  br i1 %158, label %161, label %159\l|{<s0>T|<s1>F}}"];
	Node0x46f5cd0:s0 -> Node0x46f8200;
	Node0x46f5cd0:s1 -> Node0x46f8250;
	Node0x46f8250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%159:\l159:                                              \l  %160 = icmp eq i32 %156, 0\l  br i1 %160, label %214, label %201\l|{<s0>T|<s1>F}}"];
	Node0x46f8250:s0 -> Node0x46f83e0;
	Node0x46f8250:s1 -> Node0x46f8430;
	Node0x46f8200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%161:\l161:                                              \l  %162 = load i8, i8 addrspace(4)* %155, align 1, !tbaa !8\l  %163 = zext i8 %162 to i64\l  %164 = getelementptr inbounds i8, i8 addrspace(4)* %155, i64 1\l  %165 = load i8, i8 addrspace(4)* %164, align 1, !tbaa !8\l  %166 = zext i8 %165 to i64\l  %167 = shl nuw nsw i64 %166, 8\l  %168 = or i64 %167, %163\l  %169 = getelementptr inbounds i8, i8 addrspace(4)* %155, i64 2\l  %170 = load i8, i8 addrspace(4)* %169, align 1, !tbaa !8\l  %171 = zext i8 %170 to i64\l  %172 = shl nuw nsw i64 %171, 16\l  %173 = or i64 %168, %172\l  %174 = getelementptr inbounds i8, i8 addrspace(4)* %155, i64 3\l  %175 = load i8, i8 addrspace(4)* %174, align 1, !tbaa !8\l  %176 = zext i8 %175 to i64\l  %177 = shl nuw nsw i64 %176, 24\l  %178 = or i64 %173, %177\l  %179 = getelementptr inbounds i8, i8 addrspace(4)* %155, i64 4\l  %180 = load i8, i8 addrspace(4)* %179, align 1, !tbaa !8\l  %181 = zext i8 %180 to i64\l  %182 = shl nuw nsw i64 %181, 32\l  %183 = or i64 %178, %182\l  %184 = getelementptr inbounds i8, i8 addrspace(4)* %155, i64 5\l  %185 = load i8, i8 addrspace(4)* %184, align 1, !tbaa !8\l  %186 = zext i8 %185 to i64\l  %187 = shl nuw nsw i64 %186, 40\l  %188 = or i64 %183, %187\l  %189 = getelementptr inbounds i8, i8 addrspace(4)* %155, i64 6\l  %190 = load i8, i8 addrspace(4)* %189, align 1, !tbaa !8\l  %191 = zext i8 %190 to i64\l  %192 = shl nuw nsw i64 %191, 48\l  %193 = or i64 %188, %192\l  %194 = getelementptr inbounds i8, i8 addrspace(4)* %155, i64 7\l  %195 = load i8, i8 addrspace(4)* %194, align 1, !tbaa !8\l  %196 = zext i8 %195 to i64\l  %197 = shl nuw i64 %196, 56\l  %198 = or i64 %193, %197\l  %199 = add nsw i32 %156, -8\l  %200 = getelementptr inbounds i8, i8 addrspace(4)* %155, i64 8\l  br label %214\l}"];
	Node0x46f8200 -> Node0x46f83e0;
	Node0x46f8430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%201:\l201:                                              \l  %202 = phi i32 [ %212, %201 ], [ 0, %159 ]\l  %203 = phi i64 [ %211, %201 ], [ 0, %159 ]\l  %204 = zext i32 %202 to i64\l  %205 = getelementptr inbounds i8, i8 addrspace(4)* %155, i64 %204\l  %206 = load i8, i8 addrspace(4)* %205, align 1, !tbaa !8\l  %207 = zext i8 %206 to i64\l  %208 = shl i32 %202, 3\l  %209 = zext i32 %208 to i64\l  %210 = shl nuw i64 %207, %209\l  %211 = or i64 %210, %203\l  %212 = add nuw nsw i32 %202, 1\l  %213 = icmp eq i32 %212, %156\l  br i1 %213, label %214, label %201\l|{<s0>T|<s1>F}}"];
	Node0x46f8430:s0 -> Node0x46f83e0;
	Node0x46f8430:s1 -> Node0x46f8430;
	Node0x46f83e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%214:\l214:                                              \l  %215 = phi i8 addrspace(4)* [ %200, %161 ], [ %155, %159 ], [ %155, %201 ]\l  %216 = phi i32 [ %199, %161 ], [ 0, %159 ], [ 0, %201 ]\l  %217 = phi i64 [ %198, %161 ], [ 0, %159 ], [ %211, %201 ]\l  %218 = icmp ugt i32 %216, 7\l  br i1 %218, label %221, label %219\l|{<s0>T|<s1>F}}"];
	Node0x46f83e0:s0 -> Node0x46fa480;
	Node0x46f83e0:s1 -> Node0x46fa4d0;
	Node0x46fa4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%219:\l219:                                              \l  %220 = icmp eq i32 %216, 0\l  br i1 %220, label %274, label %261\l|{<s0>T|<s1>F}}"];
	Node0x46fa4d0:s0 -> Node0x46fa660;
	Node0x46fa4d0:s1 -> Node0x46fa6b0;
	Node0x46fa480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%221:\l221:                                              \l  %222 = load i8, i8 addrspace(4)* %215, align 1, !tbaa !8\l  %223 = zext i8 %222 to i64\l  %224 = getelementptr inbounds i8, i8 addrspace(4)* %215, i64 1\l  %225 = load i8, i8 addrspace(4)* %224, align 1, !tbaa !8\l  %226 = zext i8 %225 to i64\l  %227 = shl nuw nsw i64 %226, 8\l  %228 = or i64 %227, %223\l  %229 = getelementptr inbounds i8, i8 addrspace(4)* %215, i64 2\l  %230 = load i8, i8 addrspace(4)* %229, align 1, !tbaa !8\l  %231 = zext i8 %230 to i64\l  %232 = shl nuw nsw i64 %231, 16\l  %233 = or i64 %228, %232\l  %234 = getelementptr inbounds i8, i8 addrspace(4)* %215, i64 3\l  %235 = load i8, i8 addrspace(4)* %234, align 1, !tbaa !8\l  %236 = zext i8 %235 to i64\l  %237 = shl nuw nsw i64 %236, 24\l  %238 = or i64 %233, %237\l  %239 = getelementptr inbounds i8, i8 addrspace(4)* %215, i64 4\l  %240 = load i8, i8 addrspace(4)* %239, align 1, !tbaa !8\l  %241 = zext i8 %240 to i64\l  %242 = shl nuw nsw i64 %241, 32\l  %243 = or i64 %238, %242\l  %244 = getelementptr inbounds i8, i8 addrspace(4)* %215, i64 5\l  %245 = load i8, i8 addrspace(4)* %244, align 1, !tbaa !8\l  %246 = zext i8 %245 to i64\l  %247 = shl nuw nsw i64 %246, 40\l  %248 = or i64 %243, %247\l  %249 = getelementptr inbounds i8, i8 addrspace(4)* %215, i64 6\l  %250 = load i8, i8 addrspace(4)* %249, align 1, !tbaa !8\l  %251 = zext i8 %250 to i64\l  %252 = shl nuw nsw i64 %251, 48\l  %253 = or i64 %248, %252\l  %254 = getelementptr inbounds i8, i8 addrspace(4)* %215, i64 7\l  %255 = load i8, i8 addrspace(4)* %254, align 1, !tbaa !8\l  %256 = zext i8 %255 to i64\l  %257 = shl nuw i64 %256, 56\l  %258 = or i64 %253, %257\l  %259 = add nsw i32 %216, -8\l  %260 = getelementptr inbounds i8, i8 addrspace(4)* %215, i64 8\l  br label %274\l}"];
	Node0x46fa480 -> Node0x46fa660;
	Node0x46fa6b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%261:\l261:                                              \l  %262 = phi i32 [ %272, %261 ], [ 0, %219 ]\l  %263 = phi i64 [ %271, %261 ], [ 0, %219 ]\l  %264 = zext i32 %262 to i64\l  %265 = getelementptr inbounds i8, i8 addrspace(4)* %215, i64 %264\l  %266 = load i8, i8 addrspace(4)* %265, align 1, !tbaa !8\l  %267 = zext i8 %266 to i64\l  %268 = shl i32 %262, 3\l  %269 = zext i32 %268 to i64\l  %270 = shl nuw i64 %267, %269\l  %271 = or i64 %270, %263\l  %272 = add nuw nsw i32 %262, 1\l  %273 = icmp eq i32 %272, %216\l  br i1 %273, label %274, label %261\l|{<s0>T|<s1>F}}"];
	Node0x46fa6b0:s0 -> Node0x46fa660;
	Node0x46fa6b0:s1 -> Node0x46fa6b0;
	Node0x46fa660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%274:\l274:                                              \l  %275 = phi i8 addrspace(4)* [ %260, %221 ], [ %215, %219 ], [ %215, %261 ]\l  %276 = phi i32 [ %259, %221 ], [ 0, %219 ], [ 0, %261 ]\l  %277 = phi i64 [ %258, %221 ], [ 0, %219 ], [ %271, %261 ]\l  %278 = icmp ugt i32 %276, 7\l  br i1 %278, label %281, label %279\l|{<s0>T|<s1>F}}"];
	Node0x46fa660:s0 -> Node0x46fcef0;
	Node0x46fa660:s1 -> Node0x46fcf40;
	Node0x46fcf40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%279:\l279:                                              \l  %280 = icmp eq i32 %276, 0\l  br i1 %280, label %334, label %321\l|{<s0>T|<s1>F}}"];
	Node0x46fcf40:s0 -> Node0x46fd0d0;
	Node0x46fcf40:s1 -> Node0x46fd120;
	Node0x46fcef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%281:\l281:                                              \l  %282 = load i8, i8 addrspace(4)* %275, align 1, !tbaa !8\l  %283 = zext i8 %282 to i64\l  %284 = getelementptr inbounds i8, i8 addrspace(4)* %275, i64 1\l  %285 = load i8, i8 addrspace(4)* %284, align 1, !tbaa !8\l  %286 = zext i8 %285 to i64\l  %287 = shl nuw nsw i64 %286, 8\l  %288 = or i64 %287, %283\l  %289 = getelementptr inbounds i8, i8 addrspace(4)* %275, i64 2\l  %290 = load i8, i8 addrspace(4)* %289, align 1, !tbaa !8\l  %291 = zext i8 %290 to i64\l  %292 = shl nuw nsw i64 %291, 16\l  %293 = or i64 %288, %292\l  %294 = getelementptr inbounds i8, i8 addrspace(4)* %275, i64 3\l  %295 = load i8, i8 addrspace(4)* %294, align 1, !tbaa !8\l  %296 = zext i8 %295 to i64\l  %297 = shl nuw nsw i64 %296, 24\l  %298 = or i64 %293, %297\l  %299 = getelementptr inbounds i8, i8 addrspace(4)* %275, i64 4\l  %300 = load i8, i8 addrspace(4)* %299, align 1, !tbaa !8\l  %301 = zext i8 %300 to i64\l  %302 = shl nuw nsw i64 %301, 32\l  %303 = or i64 %298, %302\l  %304 = getelementptr inbounds i8, i8 addrspace(4)* %275, i64 5\l  %305 = load i8, i8 addrspace(4)* %304, align 1, !tbaa !8\l  %306 = zext i8 %305 to i64\l  %307 = shl nuw nsw i64 %306, 40\l  %308 = or i64 %303, %307\l  %309 = getelementptr inbounds i8, i8 addrspace(4)* %275, i64 6\l  %310 = load i8, i8 addrspace(4)* %309, align 1, !tbaa !8\l  %311 = zext i8 %310 to i64\l  %312 = shl nuw nsw i64 %311, 48\l  %313 = or i64 %308, %312\l  %314 = getelementptr inbounds i8, i8 addrspace(4)* %275, i64 7\l  %315 = load i8, i8 addrspace(4)* %314, align 1, !tbaa !8\l  %316 = zext i8 %315 to i64\l  %317 = shl nuw i64 %316, 56\l  %318 = or i64 %313, %317\l  %319 = add nsw i32 %276, -8\l  %320 = getelementptr inbounds i8, i8 addrspace(4)* %275, i64 8\l  br label %334\l}"];
	Node0x46fcef0 -> Node0x46fd0d0;
	Node0x46fd120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%321:\l321:                                              \l  %322 = phi i32 [ %332, %321 ], [ 0, %279 ]\l  %323 = phi i64 [ %331, %321 ], [ 0, %279 ]\l  %324 = zext i32 %322 to i64\l  %325 = getelementptr inbounds i8, i8 addrspace(4)* %275, i64 %324\l  %326 = load i8, i8 addrspace(4)* %325, align 1, !tbaa !8\l  %327 = zext i8 %326 to i64\l  %328 = shl i32 %322, 3\l  %329 = zext i32 %328 to i64\l  %330 = shl nuw i64 %327, %329\l  %331 = or i64 %330, %323\l  %332 = add nuw nsw i32 %322, 1\l  %333 = icmp eq i32 %332, %276\l  br i1 %333, label %334, label %321\l|{<s0>T|<s1>F}}"];
	Node0x46fd120:s0 -> Node0x46fd0d0;
	Node0x46fd120:s1 -> Node0x46fd120;
	Node0x46fd0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%334:\l334:                                              \l  %335 = phi i8 addrspace(4)* [ %320, %281 ], [ %275, %279 ], [ %275, %321 ]\l  %336 = phi i32 [ %319, %281 ], [ 0, %279 ], [ 0, %321 ]\l  %337 = phi i64 [ %318, %281 ], [ 0, %279 ], [ %331, %321 ]\l  %338 = icmp ugt i32 %336, 7\l  br i1 %338, label %341, label %339\l|{<s0>T|<s1>F}}"];
	Node0x46fd0d0:s0 -> Node0x46ff140;
	Node0x46fd0d0:s1 -> Node0x46ff190;
	Node0x46ff190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%339:\l339:                                              \l  %340 = icmp eq i32 %336, 0\l  br i1 %340, label %394, label %381\l|{<s0>T|<s1>F}}"];
	Node0x46ff190:s0 -> Node0x46ff320;
	Node0x46ff190:s1 -> Node0x46ff370;
	Node0x46ff140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%341:\l341:                                              \l  %342 = load i8, i8 addrspace(4)* %335, align 1, !tbaa !8\l  %343 = zext i8 %342 to i64\l  %344 = getelementptr inbounds i8, i8 addrspace(4)* %335, i64 1\l  %345 = load i8, i8 addrspace(4)* %344, align 1, !tbaa !8\l  %346 = zext i8 %345 to i64\l  %347 = shl nuw nsw i64 %346, 8\l  %348 = or i64 %347, %343\l  %349 = getelementptr inbounds i8, i8 addrspace(4)* %335, i64 2\l  %350 = load i8, i8 addrspace(4)* %349, align 1, !tbaa !8\l  %351 = zext i8 %350 to i64\l  %352 = shl nuw nsw i64 %351, 16\l  %353 = or i64 %348, %352\l  %354 = getelementptr inbounds i8, i8 addrspace(4)* %335, i64 3\l  %355 = load i8, i8 addrspace(4)* %354, align 1, !tbaa !8\l  %356 = zext i8 %355 to i64\l  %357 = shl nuw nsw i64 %356, 24\l  %358 = or i64 %353, %357\l  %359 = getelementptr inbounds i8, i8 addrspace(4)* %335, i64 4\l  %360 = load i8, i8 addrspace(4)* %359, align 1, !tbaa !8\l  %361 = zext i8 %360 to i64\l  %362 = shl nuw nsw i64 %361, 32\l  %363 = or i64 %358, %362\l  %364 = getelementptr inbounds i8, i8 addrspace(4)* %335, i64 5\l  %365 = load i8, i8 addrspace(4)* %364, align 1, !tbaa !8\l  %366 = zext i8 %365 to i64\l  %367 = shl nuw nsw i64 %366, 40\l  %368 = or i64 %363, %367\l  %369 = getelementptr inbounds i8, i8 addrspace(4)* %335, i64 6\l  %370 = load i8, i8 addrspace(4)* %369, align 1, !tbaa !8\l  %371 = zext i8 %370 to i64\l  %372 = shl nuw nsw i64 %371, 48\l  %373 = or i64 %368, %372\l  %374 = getelementptr inbounds i8, i8 addrspace(4)* %335, i64 7\l  %375 = load i8, i8 addrspace(4)* %374, align 1, !tbaa !8\l  %376 = zext i8 %375 to i64\l  %377 = shl nuw i64 %376, 56\l  %378 = or i64 %373, %377\l  %379 = add nsw i32 %336, -8\l  %380 = getelementptr inbounds i8, i8 addrspace(4)* %335, i64 8\l  br label %394\l}"];
	Node0x46ff140 -> Node0x46ff320;
	Node0x46ff370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%381:\l381:                                              \l  %382 = phi i32 [ %392, %381 ], [ 0, %339 ]\l  %383 = phi i64 [ %391, %381 ], [ 0, %339 ]\l  %384 = zext i32 %382 to i64\l  %385 = getelementptr inbounds i8, i8 addrspace(4)* %335, i64 %384\l  %386 = load i8, i8 addrspace(4)* %385, align 1, !tbaa !8\l  %387 = zext i8 %386 to i64\l  %388 = shl i32 %382, 3\l  %389 = zext i32 %388 to i64\l  %390 = shl nuw i64 %387, %389\l  %391 = or i64 %390, %383\l  %392 = add nuw nsw i32 %382, 1\l  %393 = icmp eq i32 %392, %336\l  br i1 %393, label %394, label %381\l|{<s0>T|<s1>F}}"];
	Node0x46ff370:s0 -> Node0x46ff320;
	Node0x46ff370:s1 -> Node0x46ff370;
	Node0x46ff320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%394:\l394:                                              \l  %395 = phi i8 addrspace(4)* [ %380, %341 ], [ %335, %339 ], [ %335, %381 ]\l  %396 = phi i32 [ %379, %341 ], [ 0, %339 ], [ 0, %381 ]\l  %397 = phi i64 [ %378, %341 ], [ 0, %339 ], [ %391, %381 ]\l  %398 = icmp ugt i32 %396, 7\l  br i1 %398, label %401, label %399\l|{<s0>T|<s1>F}}"];
	Node0x46ff320:s0 -> Node0x47023c0;
	Node0x46ff320:s1 -> Node0x4702410;
	Node0x4702410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%399:\l399:                                              \l  %400 = icmp eq i32 %396, 0\l  br i1 %400, label %452, label %439\l|{<s0>T|<s1>F}}"];
	Node0x4702410:s0 -> Node0x46f1ed0;
	Node0x4702410:s1 -> Node0x47025a0;
	Node0x47023c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%401:\l401:                                              \l  %402 = load i8, i8 addrspace(4)* %395, align 1, !tbaa !8\l  %403 = zext i8 %402 to i64\l  %404 = getelementptr inbounds i8, i8 addrspace(4)* %395, i64 1\l  %405 = load i8, i8 addrspace(4)* %404, align 1, !tbaa !8\l  %406 = zext i8 %405 to i64\l  %407 = shl nuw nsw i64 %406, 8\l  %408 = or i64 %407, %403\l  %409 = getelementptr inbounds i8, i8 addrspace(4)* %395, i64 2\l  %410 = load i8, i8 addrspace(4)* %409, align 1, !tbaa !8\l  %411 = zext i8 %410 to i64\l  %412 = shl nuw nsw i64 %411, 16\l  %413 = or i64 %408, %412\l  %414 = getelementptr inbounds i8, i8 addrspace(4)* %395, i64 3\l  %415 = load i8, i8 addrspace(4)* %414, align 1, !tbaa !8\l  %416 = zext i8 %415 to i64\l  %417 = shl nuw nsw i64 %416, 24\l  %418 = or i64 %413, %417\l  %419 = getelementptr inbounds i8, i8 addrspace(4)* %395, i64 4\l  %420 = load i8, i8 addrspace(4)* %419, align 1, !tbaa !8\l  %421 = zext i8 %420 to i64\l  %422 = shl nuw nsw i64 %421, 32\l  %423 = or i64 %418, %422\l  %424 = getelementptr inbounds i8, i8 addrspace(4)* %395, i64 5\l  %425 = load i8, i8 addrspace(4)* %424, align 1, !tbaa !8\l  %426 = zext i8 %425 to i64\l  %427 = shl nuw nsw i64 %426, 40\l  %428 = or i64 %423, %427\l  %429 = getelementptr inbounds i8, i8 addrspace(4)* %395, i64 6\l  %430 = load i8, i8 addrspace(4)* %429, align 1, !tbaa !8\l  %431 = zext i8 %430 to i64\l  %432 = shl nuw nsw i64 %431, 48\l  %433 = or i64 %428, %432\l  %434 = getelementptr inbounds i8, i8 addrspace(4)* %395, i64 7\l  %435 = load i8, i8 addrspace(4)* %434, align 1, !tbaa !8\l  %436 = zext i8 %435 to i64\l  %437 = shl nuw i64 %436, 56\l  %438 = or i64 %433, %437\l  br label %452\l}"];
	Node0x47023c0 -> Node0x46f1ed0;
	Node0x47025a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%439:\l439:                                              \l  %440 = phi i32 [ %450, %439 ], [ 0, %399 ]\l  %441 = phi i64 [ %449, %439 ], [ 0, %399 ]\l  %442 = zext i32 %440 to i64\l  %443 = getelementptr inbounds i8, i8 addrspace(4)* %395, i64 %442\l  %444 = load i8, i8 addrspace(4)* %443, align 1, !tbaa !8\l  %445 = zext i8 %444 to i64\l  %446 = shl i32 %440, 3\l  %447 = zext i32 %446 to i64\l  %448 = shl nuw i64 %445, %447\l  %449 = or i64 %448, %441\l  %450 = add nuw nsw i32 %440, 1\l  %451 = icmp eq i32 %450, %396\l  br i1 %451, label %452, label %439\l|{<s0>T|<s1>F}}"];
	Node0x47025a0:s0 -> Node0x46f1ed0;
	Node0x47025a0:s1 -> Node0x47025a0;
	Node0x46f1ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%452:\l452:                                              \l  %453 = phi i64 [ %438, %401 ], [ 0, %399 ], [ %449, %439 ]\l  %454 = shl nuw nsw i64 %35, 2\l  %455 = add nuw nsw i64 %454, 28\l  %456 = and i64 %455, 480\l  %457 = and i64 %37, -225\l  %458 = or i64 %457, %456\l  %459 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %458, i64 noundef %97, i64 noundef %157, i64 noundef %217, i64\l... noundef %277, i64 noundef %337, i64 noundef %397, i64 noundef %453) #10\l  %460 = sub i64 %27, %35\l  %461 = getelementptr inbounds i8, i8 addrspace(4)* %28, i64 %35\l  %462 = icmp eq i64 %460, 0\l  br i1 %462, label %463, label %26\l|{<s0>T|<s1>F}}"];
	Node0x46f1ed0:s0 -> Node0x46f0f50;
	Node0x46f1ed0:s1 -> Node0x46f1a60;
	Node0x46f0f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%463:\l463:                                              \l  ret void\l}"];
}
