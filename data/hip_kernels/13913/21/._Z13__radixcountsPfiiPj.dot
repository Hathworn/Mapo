digraph "CFG for '_Z13__radixcountsPfiiPj' function" {
	label="CFG for '_Z13__radixcountsPfiiPj' function";

	Node0x5a0a120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%4:\l  %5 = alloca float, align 4, addrspace(5)\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = zext i32 %6 to i64\l  %8 = sext i32 %1 to i64\l  %9 = mul nsw i64 %8, %7\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !4\l  %14 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !13, !invariant.load\l... !14\l  %17 = zext i16 %16 to i32\l  %18 = udiv i32 %13, %17\l  %19 = mul i32 %18, %17\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = zext i32 %22 to i64\l  %24 = sdiv i64 %9, %23\l  %25 = trunc i64 %24 to i32\l  %26 = add i32 %6, 1\l  %27 = zext i32 %26 to i64\l  %28 = mul nsw i64 %8, %27\l  %29 = sdiv i64 %28, %23\l  %30 = trunc i64 %29 to i32\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %32 = icmp slt i32 %25, %30\l  br i1 %32, label %33, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5a0a120:s0 -> Node0x5a0c000;
	Node0x5a0a120:s1 -> Node0x5a0c090;
	Node0x5a0c000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%33:\l33:                                               \l  %34 = sdiv i32 %25, 4096\l  %35 = add i32 %34, %6\l  %36 = shl i32 %35, 8\l  %37 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ13__radixcountsPfiiPjE2ic, i32 0, i32 %31\l  %38 = bitcast float addrspace(5)* %5 to i8 addrspace(5)*\l  %39 = getelementptr inbounds i8, i8 addrspace(5)* %38, i32 %2\l  br label %41\l}"];
	Node0x5a0c000 -> Node0x5a0d230;
	Node0x5a0c090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%40:\l40:                                               \l  ret void\l}"];
	Node0x5a0d230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%41:\l41:                                               \l  %42 = phi i32 [ %36, %33 ], [ %53, %48 ]\l  %43 = phi i32 [ %25, %33 ], [ %54, %48 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  store i32 0, i32 addrspace(3)* %37, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %44 = add nsw i32 %43, %31\l  %45 = add nsw i32 %44, 4096\l  %46 = tail call i32 @llvm.smin.i32(i32 %30, i32 %45)\l  %47 = icmp slt i32 %44, %46\l  br i1 %47, label %56, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5a0d230:s0 -> Node0x5a0dfa0;
	Node0x5a0d230:s1 -> Node0x5a0d370;
	Node0x5a0d370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%48:\l48:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %49 = load i32, i32 addrspace(3)* %37, align 4, !tbaa !16\l  %50 = add i32 %42, %31\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %51\l  store i32 %49, i32 addrspace(1)* %52, align 4, !tbaa !16\l  %53 = add nsw i32 %42, 256\l  %54 = add nsw i32 %43, 4096\l  %55 = icmp slt i32 %54, %30\l  br i1 %55, label %41, label %40, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5a0d370:s0 -> Node0x5a0d230;
	Node0x5a0d370:s1 -> Node0x5a0c090;
	Node0x5a0dfa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  %57 = phi i32 [ %65, %56 ], [ %44, %41 ]\l  call void @llvm.lifetime.start.p5i8(i64 4, i8 addrspace(5)* %38) #6\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !22\l  store float %60, float addrspace(5)* %5, align 4, !tbaa !22\l  %61 = load i8, i8 addrspace(5)* %39, align 1, !tbaa !24\l  %62 = zext i8 %61 to i32\l  %63 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ13__radixcountsPfiiPjE2ic, i32 0, i32 %62\l  %64 = tail call i32 @llvm.amdgcn.atomic.inc.i32.p3i32(i32 addrspace(3)* %63,\l... i32 2147418112, i32 2, i32 4, i1 false)\l  call void @llvm.lifetime.end.p5i8(i64 4, i8 addrspace(5)* %38) #6\l  %65 = add nsw i32 %57, 256\l  %66 = icmp slt i32 %65, %46\l  br i1 %66, label %56, label %48, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x5a0dfa0:s0 -> Node0x5a0dfa0;
	Node0x5a0dfa0:s1 -> Node0x5a0d370;
}
