```
// Ensure coalesced memory access by aligning data loads in global memory.
// Use shared memory to minimize global memory reads for 'strata'.
// Optimize shared memory usage by carefully managing synchronization points.
// Unroll inner loop to improve instruction throughput and hide latency.
// Utilize atomic operations for accurate histogram counting without data races.
// Consider minimizing thread divergence by optimizing conditional branches.
// Perform memory alignment for 'a' array to optimize global memory access.
```