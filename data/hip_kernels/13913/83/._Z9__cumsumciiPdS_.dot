digraph "CFG for '_Z9__cumsumciiPdS_' function" {
	label="CFG for '_Z9__cumsumciiPdS_' function";

	Node0x56c3080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 2, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %14 = icmp slt i32 %13, %1\l  br i1 %14, label %15, label %81\l|{<s0>T|<s1>F}}"];
	Node0x56c3080:s0 -> Node0x56c5260;
	Node0x56c3080:s1 -> Node0x56c52f0;
	Node0x56c5260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%15:\l15:                                               \l  %16 = icmp sgt i32 %0, 0\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %18 = getelementptr inbounds [32 x double], [32 x double] addrspace(3)*\l... @_ZZ9__cumsumciiPdS_E4buff, i32 0, i32 %17\l  %19 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4\l  %22 = zext i16 %21 to i32\l  %23 = uitofp i16 %21 to double\l  %24 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %25 = bitcast i8 addrspace(4)* %24 to i32 addrspace(4)*\l  %26 = load i32, i32 addrspace(4)* %25, align 4, !tbaa !7\l  %27 = udiv i32 %26, %22\l  %28 = mul i32 %27, %22\l  %29 = icmp ugt i32 %26, %28\l  %30 = zext i1 %29 to i32\l  %31 = add i32 %27, %30\l  %32 = mul i32 %31, %10\l  br label %33\l}"];
	Node0x56c5260 -> Node0x56c54c0;
	Node0x56c54c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%33:\l33:                                               \l  %34 = phi i32 [ %13, %15 ], [ %79, %78 ]\l  br i1 %16, label %35, label %78\l|{<s0>T|<s1>F}}"];
	Node0x56c54c0:s0 -> Node0x56c6420;
	Node0x56c54c0:s1 -> Node0x56c62e0;
	Node0x56c6420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%35:\l35:                                               \l  %36 = mul nsw i32 %34, %0\l  br label %37\l}"];
	Node0x56c6420 -> Node0x56c65f0;
	Node0x56c65f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%37:\l37:                                               \l  %38 = phi double [ 0.000000e+00, %35 ], [ %75, %74 ]\l  %39 = phi i32 [ 0, %35 ], [ %76, %74 ]\l  %40 = add i32 %39, %17\l  %41 = icmp ult i32 %40, %0\l  br i1 %41, label %42, label %47\l|{<s0>T|<s1>F}}"];
	Node0x56c65f0:s0 -> Node0x56c74b0;
	Node0x56c65f0:s1 -> Node0x56c7540;
	Node0x56c74b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%42:\l42:                                               \l  %43 = add i32 %40, %36\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds double, double addrspace(1)* %2, i64 %44\l  %46 = load double, double addrspace(1)* %45, align 8, !tbaa !16\l  br label %47\l}"];
	Node0x56c74b0 -> Node0x56c7540;
	Node0x56c7540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%47:\l47:                                               \l  %48 = phi double [ %46, %42 ], [ 0.000000e+00, %37 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  store double %48, double addrspace(3)* %18, align 8, !tbaa !16\l  %49 = sub nsw i32 %0, %39\l  %50 = sitofp i32 %49 to double\l  %51 = tail call double @llvm.minnum.f64(double %23, double %50)\l  %52 = fptosi double %51 to i32\l  %53 = icmp sgt i32 %52, 1\l  br i1 %53, label %54, label %67\l|{<s0>T|<s1>F}}"];
	Node0x56c7540:s0 -> Node0x56c86c0;
	Node0x56c7540:s1 -> Node0x56c8750;
	Node0x56c86c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = phi double [ %64, %63 ], [ %48, %47 ]\l  %56 = phi i32 [ %65, %63 ], [ 1, %47 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %57 = icmp ult i32 %17, %56\l  br i1 %57, label %63, label %58\l|{<s0>T|<s1>F}}"];
	Node0x56c86c0:s0 -> Node0x56c88c0;
	Node0x56c86c0:s1 -> Node0x56c8e00;
	Node0x56c8e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%58:\l58:                                               \l  %59 = sub i32 %17, %56\l  %60 = getelementptr inbounds [32 x double], [32 x double] addrspace(3)*\l... @_ZZ9__cumsumciiPdS_E4buff, i32 0, i32 %59\l  %61 = load double, double addrspace(3)* %60, align 8, !tbaa !16\l  %62 = fadd contract double %55, %61\l  br label %63\l}"];
	Node0x56c8e00 -> Node0x56c88c0;
	Node0x56c88c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = phi double [ %62, %58 ], [ %55, %54 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  store double %64, double addrspace(3)* %18, align 8, !tbaa !16\l  %65 = shl nsw i32 %56, 1\l  %66 = icmp slt i32 %65, %52\l  br i1 %66, label %54, label %67, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x56c88c0:s0 -> Node0x56c86c0;
	Node0x56c88c0:s1 -> Node0x56c8750;
	Node0x56c8750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%67:\l67:                                               \l  %68 = phi double [ %48, %47 ], [ %64, %63 ]\l  br i1 %41, label %69, label %74\l|{<s0>T|<s1>F}}"];
	Node0x56c8750:s0 -> Node0x56c98f0;
	Node0x56c8750:s1 -> Node0x56c7130;
	Node0x56c98f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%69:\l69:                                               \l  %70 = fadd contract double %38, %68\l  %71 = add i32 %40, %36\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds double, double addrspace(1)* %3, i64 %72\l  store double %70, double addrspace(1)* %73, align 8, !tbaa !16\l  br label %74\l}"];
	Node0x56c98f0 -> Node0x56c7130;
	Node0x56c7130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%74:\l74:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %75 = load double, double addrspace(3)* getelementptr inbounds ([32 x\l... double], [32 x double] addrspace(3)* @_ZZ9__cumsumciiPdS_E4buff, i32 0, i32\l... 31), align 8, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %76 = add i32 %39, %22\l  %77 = icmp slt i32 %76, %0\l  br i1 %77, label %37, label %78, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x56c7130:s0 -> Node0x56c65f0;
	Node0x56c7130:s1 -> Node0x56c62e0;
	Node0x56c62e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%78:\l78:                                               \l  %79 = add i32 %32, %34\l  %80 = icmp slt i32 %79, %1\l  br i1 %80, label %33, label %81, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x56c62e0:s0 -> Node0x56c54c0;
	Node0x56c62e0:s1 -> Node0x56c52f0;
	Node0x56c52f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%81:\l81:                                               \l  ret void\l}"];
}
