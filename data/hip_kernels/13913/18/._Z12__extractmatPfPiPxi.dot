digraph "CFG for '_Z12__extractmatPfPiPxi' function" {
	label="CFG for '_Z12__extractmatPfPiPxi' function";

	Node0x4cbb9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = udiv i32 %13, %10\l  %16 = mul i32 %15, %10\l  %17 = icmp ugt i32 %13, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = mul i32 %19, %20\l  %22 = add i32 %21, %14\l  %23 = mul i32 %22, %10\l  %24 = add i32 %23, %5\l  %25 = icmp slt i32 %24, %3\l  br i1 %25, label %26, label %41\l|{<s0>T|<s1>F}}"];
	Node0x4cbb9c0:s0 -> Node0x4cbe1b0;
	Node0x4cbb9c0:s1 -> Node0x4cbe240;
	Node0x4cbe1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%26:\l26:                                               \l  %27 = mul i32 %19, %10\l  %28 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 16\l  %29 = bitcast i8 addrspace(4)* %28 to i32 addrspace(4)*\l  %30 = load i32, i32 addrspace(4)* %29, align 8, !tbaa !16\l  %31 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %32 = bitcast i8 addrspace(4)* %31 to i16 addrspace(4)*\l  %33 = load i16, i16 addrspace(4)* %32, align 2, !range !5, !invariant.load !6\l  %34 = zext i16 %33 to i32\l  %35 = udiv i32 %30, %34\l  %36 = mul i32 %35, %34\l  %37 = icmp ugt i32 %30, %36\l  %38 = zext i1 %37 to i32\l  %39 = add i32 %35, %38\l  %40 = mul i32 %27, %39\l  br label %42\l}"];
	Node0x4cbe1b0 -> Node0x4cbfa50;
	Node0x4cbe240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%41:\l41:                                               \l  ret void\l}"];
	Node0x4cbfa50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = phi i32 [ %24, %26 ], [ %57, %42 ]\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i64, i64 addrspace(1)* %2, i64 %44\l  %46 = bitcast i64 addrspace(1)* %45 to i32 addrspace(1)*\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !17\l  %48 = and i32 %47, 2147483647\l  %49 = sub nsw i32 0, %48\l  %50 = icmp slt i32 %47, 0\l  %51 = select i1 %50, i32 %49, i32 %47\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %53 = bitcast float addrspace(1)* %52 to i32 addrspace(1)*\l  store i32 %51, i32 addrspace(1)* %53, align 4, !tbaa !21\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %46, i64 1\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !17\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %44\l  store i32 %55, i32 addrspace(1)* %56, align 4, !tbaa !17\l  %57 = add i32 %40, %43\l  %58 = icmp slt i32 %57, %3\l  br i1 %58, label %42, label %41, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x4cbfa50:s0 -> Node0x4cbfa50;
	Node0x4cbfa50:s1 -> Node0x4cbe240;
}
