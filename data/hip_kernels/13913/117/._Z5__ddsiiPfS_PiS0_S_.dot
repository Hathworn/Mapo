digraph "CFG for '_Z5__ddsiiPfS_PiS0_S_' function" {
	label="CFG for '_Z5__ddsiiPfS_PiS0_S_' function";

	Node0x5648080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = zext i32 %8 to i64\l  %10 = sext i32 %1 to i64\l  %11 = mul nsw i64 %10, %9\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !4\l  %16 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !13, !invariant.load\l... !14\l  %19 = zext i16 %18 to i32\l  %20 = udiv i32 %15, %19\l  %21 = mul i32 %20, %19\l  %22 = icmp ugt i32 %15, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = zext i32 %24 to i64\l  %26 = sdiv i64 %11, %25\l  %27 = trunc i64 %26 to i32\l  %28 = add i32 %8, 1\l  %29 = zext i32 %28 to i64\l  %30 = mul nsw i64 %10, %29\l  %31 = sdiv i64 %30, %25\l  %32 = trunc i64 %31 to i32\l  %33 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %34 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %35 = mul nuw nsw i32 %34, %19\l  %36 = add nuw nsw i32 %35, %33\l  %37 = icmp slt i32 %27, %32\l  br i1 %37, label %38, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5648080:s0 -> Node0x564b410;
	Node0x5648080:s1 -> Node0x564b4a0;
	Node0x564b410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%38:\l38:                                               \l  %39 = icmp slt i32 %36, %0\l  %40 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %41 = bitcast i8 addrspace(4)* %40 to i16 addrspace(4)*\l  %42 = load i16, i16 addrspace(4)* %41, align 2\l  %43 = zext i16 %42 to i32\l  %44 = mul nuw nsw i32 %43, %19\l  %45 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ5__ddsiiPfS_PiS0_S_E5parts, i32 0, i32 %36\l  %46 = icmp ugt i32 %44, 1\l  %47 = icmp eq i32 %36, 0\l  br label %49\l}"];
	Node0x564b410 -> Node0x564bb40;
	Node0x564b4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%48:\l48:                                               \l  ret void\l}"];
	Node0x564bb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%49:\l49:                                               \l  %50 = phi i32 [ %27, %38 ], [ %92, %91 ]\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !16\l  %54 = mul nsw i32 %53, %0\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %51\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !16\l  %57 = mul nsw i32 %56, %0\l  br i1 %39, label %60, label %58\l|{<s0>T|<s1>F}}"];
	Node0x564bb40:s0 -> Node0x564c8b0;
	Node0x564bb40:s1 -> Node0x564c940;
	Node0x564c940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%58:\l58:                                               \l  %59 = phi float [ 0.000000e+00, %49 ], [ %72, %60 ]\l  store float %59, float addrspace(3)* %45, align 4, !tbaa !20\l  br i1 %46, label %76, label %75\l|{<s0>T|<s1>F}}"];
	Node0x564c940:s0 -> Node0x564d780;
	Node0x564c940:s1 -> Node0x564d810;
	Node0x564c8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  %61 = phi i32 [ %73, %60 ], [ %36, %49 ]\l  %62 = phi float [ %72, %60 ], [ 0.000000e+00, %49 ]\l  %63 = add nsw i32 %61, %54\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %2, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !20\l  %67 = add nsw i32 %61, %57\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %3, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !20\l  %71 = fmul contract float %66, %70\l  %72 = fadd contract float %62, %71\l  %73 = add i32 %44, %61\l  %74 = icmp slt i32 %73, %0\l  br i1 %74, label %60, label %58, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x564c8b0:s0 -> Node0x564c8b0;
	Node0x564c8b0:s1 -> Node0x564c940;
	Node0x564d810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%75:\l75:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %47, label %88, label %91\l|{<s0>T|<s1>F}}"];
	Node0x564d810:s0 -> Node0x564ecf0;
	Node0x564d810:s1 -> Node0x564bc80;
	Node0x564d780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  %77 = phi i32 [ %86, %85 ], [ 1, %58 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %78 = add nsw i32 %77, %36\l  %79 = icmp ult i32 %78, %44\l  br i1 %79, label %80, label %85\l|{<s0>T|<s1>F}}"];
	Node0x564d780:s0 -> Node0x564f2b0;
	Node0x564d780:s1 -> Node0x564ee30;
	Node0x564f2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%80:\l80:                                               \l  %81 = load float, float addrspace(3)* %45, align 4, !tbaa !20\l  %82 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ5__ddsiiPfS_PiS0_S_E5parts, i32 0, i32 %78\l  %83 = load float, float addrspace(3)* %82, align 4, !tbaa !20\l  %84 = fadd contract float %81, %83\l  store float %84, float addrspace(3)* %45, align 4, !tbaa !20\l  br label %85\l}"];
	Node0x564f2b0 -> Node0x564ee30;
	Node0x564ee30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  %86 = shl nsw i32 %77, 1\l  %87 = icmp ult i32 %86, %44\l  br i1 %87, label %76, label %75, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x564ee30:s0 -> Node0x564d780;
	Node0x564ee30:s1 -> Node0x564d810;
	Node0x564ecf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%88:\l88:                                               \l  %89 = load float, float addrspace(3)* getelementptr inbounds ([1024 x\l... float], [1024 x float] addrspace(3)* @_ZZ5__ddsiiPfS_PiS0_S_E5parts, i32 0,\l... i32 0), align 16, !tbaa !20\l  %90 = getelementptr inbounds float, float addrspace(1)* %6, i64 %51\l  store float %89, float addrspace(1)* %90, align 4, !tbaa !20\l  br label %91\l}"];
	Node0x564ecf0 -> Node0x564bc80;
	Node0x564bc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%91:\l91:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %92 = add nsw i32 %50, 1\l  %93 = icmp slt i32 %92, %32\l  br i1 %93, label %49, label %48, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x564bc80:s0 -> Node0x564bb40;
	Node0x564bc80:s1 -> Node0x564b4a0;
}
