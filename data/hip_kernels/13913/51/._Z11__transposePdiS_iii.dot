digraph "CFG for '_Z11__transposePdiS_iii' function" {
	label="CFG for '_Z11__transposePdiS_iii' function";

	Node0x632bf80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %9 = bitcast i8 addrspace(4)* %8 to i32 addrspace(4)*\l  %10 = load i32, i32 addrspace(4)* %9, align 4, !tbaa !4\l  %11 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !13, !invariant.load\l... !14\l  %14 = zext i16 %13 to i32\l  %15 = udiv i32 %10, %14\l  %16 = mul i32 %15, %14\l  %17 = icmp ugt i32 %10, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = shl i32 %19, 5\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 16\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 8, !tbaa !15\l  %24 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !13, !invariant.load\l... !14\l  %27 = zext i16 %26 to i32\l  %28 = udiv i32 %23, %27\l  %29 = mul i32 %28, %27\l  %30 = icmp ugt i32 %23, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = shl i32 %32, 5\l  %34 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %35 = shl i32 %34, 5\l  %36 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %37 = shl i32 %36, 5\l  %38 = icmp slt i32 %37, %5\l  br i1 %38, label %39, label %52\l|{<s0>T|<s1>F}}"];
	Node0x632bf80:s0 -> Node0x632f950;
	Node0x632bf80:s1 -> Node0x632f9e0;
	Node0x632f950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%39:\l39:                                               \l  %40 = icmp slt i32 %35, %4\l  %41 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %42 = tail call i32 @llvm.amdgcn.workitem.id.y()\l  br label %43\l}"];
	Node0x632f950 -> Node0x632ff90;
	Node0x632ff90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%43:\l43:                                               \l  %44 = phi i32 [ %37, %39 ], [ %54, %53 ]\l  br i1 %40, label %45, label %53\l|{<s0>T|<s1>F}}"];
	Node0x632ff90:s0 -> Node0x6330200;
	Node0x632ff90:s1 -> Node0x63300c0;
	Node0x6330200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%45:\l45:                                               \l  %46 = add nsw i32 %44, 32\l  %47 = tail call i32 @llvm.smin.i32(i32 %5, i32 %46)\l  %48 = add i32 %44, %42\l  %49 = icmp sge i32 %48, %47\l  %50 = add i32 %44, %41\l  %51 = icmp ult i32 %50, %5\l  br label %56\l}"];
	Node0x6330200 -> Node0x6330840;
	Node0x632f9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%52:\l52:                                               \l  ret void\l}"];
	Node0x63300c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%53:\l53:                                               \l  %54 = add nsw i32 %44, %33\l  %55 = icmp slt i32 %54, %5\l  br i1 %55, label %43, label %52, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x63300c0:s0 -> Node0x632ff90;
	Node0x63300c0:s1 -> Node0x632f9e0;
	Node0x6330840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%56:\l56:                                               \l  %57 = phi i32 [ %35, %45 ], [ %90, %89 ]\l  %58 = add i32 %57, %41\l  %59 = icmp uge i32 %58, %4\l  %60 = select i1 %59, i1 true, i1 %49\l  br i1 %60, label %72, label %61\l|{<s0>T|<s1>F}}"];
	Node0x6330840:s0 -> Node0x6330f50;
	Node0x6330840:s1 -> Node0x6330fe0;
	Node0x6330fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = phi i32 [ %70, %61 ], [ %48, %56 ]\l  %63 = mul nsw i32 %62, %1\l  %64 = add i32 %63, %58\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds double, double addrspace(1)* %0, i64 %65\l  %67 = load double, double addrspace(1)* %66, align 8, !tbaa !18\l  %68 = sub nsw i32 %62, %44\l  %69 = getelementptr inbounds [32 x [33 x double]], [32 x [33 x double]]\l... addrspace(3)* @_ZZ11__transposePdiS_iiiE4tile, i32 0, i32 %41, i32 %68\l  store double %67, double addrspace(3)* %69, align 8, !tbaa !18\l  %70 = add i32 %62, %27\l  %71 = icmp slt i32 %70, %47\l  br i1 %71, label %61, label %72, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x6330fe0:s0 -> Node0x6330fe0;
	Node0x6330fe0:s1 -> Node0x6330f50;
	Node0x6330f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%72:\l72:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %51, label %73, label %89\l|{<s0>T|<s1>F}}"];
	Node0x6330f50:s0 -> Node0x63325b0;
	Node0x6330f50:s1 -> Node0x6330c10;
	Node0x63325b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%73:\l73:                                               \l  %74 = add nsw i32 %57, 32\l  %75 = tail call i32 @llvm.smin.i32(i32 %4, i32 %74)\l  %76 = add i32 %57, %42\l  %77 = icmp slt i32 %76, %75\l  br i1 %77, label %78, label %89\l|{<s0>T|<s1>F}}"];
	Node0x63325b0:s0 -> Node0x63329b0;
	Node0x63325b0:s1 -> Node0x6330c10;
	Node0x63329b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%78:\l78:                                               \l  %79 = phi i32 [ %87, %78 ], [ %76, %73 ]\l  %80 = sub nsw i32 %79, %57\l  %81 = getelementptr inbounds [32 x [33 x double]], [32 x [33 x double]]\l... addrspace(3)* @_ZZ11__transposePdiS_iiiE4tile, i32 0, i32 %80, i32 %41\l  %82 = load double, double addrspace(3)* %81, align 8, !tbaa !18\l  %83 = mul nsw i32 %79, %3\l  %84 = add i32 %83, %50\l  %85 = zext i32 %84 to i64\l  %86 = getelementptr inbounds double, double addrspace(1)* %2, i64 %85\l  store double %82, double addrspace(1)* %86, align 8, !tbaa !18\l  %87 = add i32 %79, %27\l  %88 = icmp slt i32 %87, %75\l  br i1 %88, label %78, label %89, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x63329b0:s0 -> Node0x63329b0;
	Node0x63329b0:s1 -> Node0x6330c10;
	Node0x6330c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%89:\l89:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %90 = add nsw i32 %57, %20\l  %91 = icmp slt i32 %90, %4\l  br i1 %91, label %56, label %53, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x6330c10:s0 -> Node0x6330840;
	Node0x6330c10:s1 -> Node0x63300c0;
}
