digraph "CFG for '_Z14__extractmat2dPfPxii' function" {
	label="CFG for '_Z14__extractmat2dPfPxii' function";

	Node0x54ff8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = udiv i32 %13, %10\l  %16 = mul i32 %15, %10\l  %17 = icmp ugt i32 %13, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = mul i32 %19, %20\l  %22 = add i32 %21, %14\l  %23 = mul i32 %22, %10\l  %24 = add i32 %23, %5\l  %25 = mul nsw i32 %3, %2\l  %26 = icmp slt i32 %24, %25\l  br i1 %26, label %27, label %42\l|{<s0>T|<s1>F}}"];
	Node0x54ff8e0:s0 -> Node0x5502160;
	Node0x54ff8e0:s1 -> Node0x55021f0;
	Node0x5502160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%27:\l27:                                               \l  %28 = mul i32 %19, %10\l  %29 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 16\l  %30 = bitcast i8 addrspace(4)* %29 to i32 addrspace(4)*\l  %31 = load i32, i32 addrspace(4)* %30, align 8, !tbaa !16\l  %32 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %33 = bitcast i8 addrspace(4)* %32 to i16 addrspace(4)*\l  %34 = load i16, i16 addrspace(4)* %33, align 2, !range !5, !invariant.load !6\l  %35 = zext i16 %34 to i32\l  %36 = udiv i32 %31, %35\l  %37 = mul i32 %36, %35\l  %38 = icmp ugt i32 %31, %37\l  %39 = zext i1 %38 to i32\l  %40 = add i32 %36, %39\l  %41 = mul i32 %28, %40\l  br label %43\l}"];
	Node0x5502160 -> Node0x55039d0;
	Node0x55021f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%42:\l42:                                               \l  ret void\l}"];
	Node0x55039d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi i32 [ %24, %27 ], [ %55, %43 ]\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %45\l  %47 = bitcast i64 addrspace(1)* %46 to i32 addrspace(1)*\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !17, !amdgpu.noclobber\l... !6\l  %49 = and i32 %48, 2147483647\l  %50 = sub nsw i32 0, %49\l  %51 = icmp slt i32 %48, 0\l  %52 = select i1 %51, i32 %50, i32 %48\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %54 = bitcast float addrspace(1)* %53 to i32 addrspace(1)*\l  store i32 %52, i32 addrspace(1)* %54, align 4, !tbaa !21\l  %55 = add i32 %41, %44\l  %56 = icmp slt i32 %55, %25\l  br i1 %56, label %43, label %42, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x55039d0:s0 -> Node0x55039d0;
	Node0x55039d0:s1 -> Node0x55021f0;
}
