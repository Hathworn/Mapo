digraph "CFG for '_Z12__extractmatPdPiPxi' function" {
	label="CFG for '_Z12__extractmatPdPiPxi' function";

	Node0x5bff150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = alloca i32, align 4, addrspace(5)\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = udiv i32 %14, %11\l  %17 = mul i32 %16, %11\l  %18 = icmp ugt i32 %14, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = mul i32 %20, %21\l  %23 = add i32 %22, %15\l  %24 = mul i32 %23, %11\l  %25 = add i32 %24, %6\l  %26 = icmp slt i32 %25, %3\l  br i1 %26, label %27, label %44\l|{<s0>T|<s1>F}}"];
	Node0x5bff150:s0 -> Node0x5c019f0;
	Node0x5bff150:s1 -> Node0x5c01a80;
	Node0x5c019f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%27:\l27:                                               \l  %28 = mul i32 %20, %11\l  %29 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 16\l  %30 = bitcast i8 addrspace(4)* %29 to i32 addrspace(4)*\l  %31 = load i32, i32 addrspace(4)* %30, align 8, !tbaa !16\l  %32 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %33 = bitcast i8 addrspace(4)* %32 to i16 addrspace(4)*\l  %34 = load i16, i16 addrspace(4)* %33, align 2, !range !5, !invariant.load !6\l  %35 = zext i16 %34 to i32\l  %36 = udiv i32 %31, %35\l  %37 = mul i32 %36, %35\l  %38 = icmp ugt i32 %31, %37\l  %39 = zext i1 %38 to i32\l  %40 = add i32 %36, %39\l  %41 = mul i32 %28, %40\l  %42 = bitcast i32 addrspace(5)* %5 to i8 addrspace(5)*\l  %43 = bitcast i32 addrspace(5)* %5 to double addrspace(5)*\l  br label %45\l}"];
	Node0x5c019f0 -> Node0x5c03340;
	Node0x5c01a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%44:\l44:                                               \l  ret void\l}"];
	Node0x5c03340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = phi i32 [ %25, %27 ], [ %60, %45 ]\l  call void @llvm.lifetime.start.p5i8(i64 4, i8 addrspace(5)* %42)\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds i64, i64 addrspace(1)* %2, i64 %47\l  %49 = bitcast i64 addrspace(1)* %48 to i32 addrspace(1)*\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !17\l  %51 = and i32 %50, 2147483647\l  %52 = sub nsw i32 0, %51\l  %53 = icmp slt i32 %50, 0\l  %54 = select i1 %53, i32 %52, i32 %50\l  store i32 %54, i32 addrspace(5)* %5, align 4, !tbaa !17\l  %55 = load double, double addrspace(5)* %43, align 4, !tbaa !21\l  %56 = getelementptr inbounds double, double addrspace(1)* %0, i64 %47\l  store double %55, double addrspace(1)* %56, align 8, !tbaa !21\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %49, i64 1\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !17\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %47\l  store i32 %58, i32 addrspace(1)* %59, align 4, !tbaa !17\l  call void @llvm.lifetime.end.p5i8(i64 4, i8 addrspace(5)* %42)\l  %60 = add i32 %41, %46\l  %61 = icmp slt i32 %60, %3\l  br i1 %61, label %45, label %44, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5c03340:s0 -> Node0x5c03340;
	Node0x5c03340:s1 -> Node0x5c01a80;
}
