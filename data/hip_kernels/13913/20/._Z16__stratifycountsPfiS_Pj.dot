digraph "CFG for '_Z16__stratifycountsPfiS_Pj' function" {
	label="CFG for '_Z16__stratifycountsPfiS_Pj' function";

	Node0x4ecdce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = zext i32 %5 to i64\l  %7 = sext i32 %1 to i64\l  %8 = mul nsw i64 %7, %6\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !4\l  %13 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !13, !invariant.load\l... !14\l  %16 = zext i16 %15 to i32\l  %17 = udiv i32 %12, %16\l  %18 = mul i32 %17, %16\l  %19 = icmp ugt i32 %12, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = zext i32 %21 to i64\l  %23 = sdiv i64 %8, %22\l  %24 = trunc i64 %23 to i32\l  %25 = add i32 %5, 1\l  %26 = zext i32 %25 to i64\l  %27 = mul nsw i64 %7, %26\l  %28 = sdiv i64 %27, %22\l  %29 = trunc i64 %28 to i32\l  %30 = sdiv i32 %24, 4096\l  %31 = add i32 %30, %5\l  %32 = shl i32 %31, 8\l  %33 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %34 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %35 = mul nuw nsw i32 %34, %16\l  %36 = add nuw nsw i32 %35, %33\l  %37 = icmp eq i32 %34, 0\l  br i1 %37, label %38, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4ecdce0:s0 -> Node0x4ed12e0;
	Node0x4ecdce0:s1 -> Node0x4ed1370;
	Node0x4ed12e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%38:\l38:                                               \l  %39 = zext i32 %33 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %42 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ16__stratifycountsPfiS_PjE2ss, i32 0, i32 %33\l  store float %41, float addrspace(3)* %42, align 4, !tbaa !16\l  br label %43\l}"];
	Node0x4ed12e0 -> Node0x4ed1370;
	Node0x4ed1370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%43:\l43:                                               \l  %44 = icmp slt i32 %24, %29\l  br i1 %44, label %45, label %52\l|{<s0>T|<s1>F}}"];
	Node0x4ed1370:s0 -> Node0x4ed1e40;
	Node0x4ed1370:s1 -> Node0x4ed26f0;
	Node0x4ed1e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%45:\l45:                                               \l  %46 = icmp ult i32 %34, 4\l  %47 = getelementptr inbounds [256 x [4 x i32]], [256 x [4 x i32]]\l... addrspace(3)* @_ZZ16__stratifycountsPfiS_PjE2ic, i32 0, i32 %33, i32 %34\l  %48 = getelementptr inbounds [256 x [4 x i32]], [256 x [4 x i32]]\l... addrspace(3)* @_ZZ16__stratifycountsPfiS_PjE2ic, i32 0, i32 %33, i32 0\l  %49 = getelementptr inbounds [256 x [4 x i32]], [256 x [4 x i32]]\l... addrspace(3)* @_ZZ16__stratifycountsPfiS_PjE2ic, i32 0, i32 %33, i32 1\l  %50 = getelementptr inbounds [256 x [4 x i32]], [256 x [4 x i32]]\l... addrspace(3)* @_ZZ16__stratifycountsPfiS_PjE2ic, i32 0, i32 %33, i32 2\l  %51 = getelementptr inbounds [256 x [4 x i32]], [256 x [4 x i32]]\l... addrspace(3)* @_ZZ16__stratifycountsPfiS_PjE2ic, i32 0, i32 %33, i32 3\l  br label %53\l}"];
	Node0x4ed1e40 -> Node0x4ed2880;
	Node0x4ed26f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%52:\l52:                                               \l  ret void\l}"];
	Node0x4ed2880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%53:\l53:                                               \l  %54 = phi i32 [ %32, %45 ], [ %130, %129 ]\l  %55 = phi i32 [ %24, %45 ], [ %131, %129 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %46, label %56, label %57\l|{<s0>T|<s1>F}}"];
	Node0x4ed2880:s0 -> Node0x4ed33a0;
	Node0x4ed2880:s1 -> Node0x4ed3430;
	Node0x4ed33a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%56:\l56:                                               \l  store i32 0, i32 addrspace(3)* %47, align 4, !tbaa !20\l  br label %57\l}"];
	Node0x4ed33a0 -> Node0x4ed3430;
	Node0x4ed3430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%57:\l57:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %58 = add nsw i32 %36, %55\l  %59 = add nsw i32 %58, 4096\l  %60 = tail call i32 @llvm.smin.i32(i32 %29, i32 %59)\l  %61 = icmp slt i32 %58, %60\l  br i1 %61, label %62, label %64\l|{<s0>T|<s1>F}}"];
	Node0x4ed3430:s0 -> Node0x4ed3c70;
	Node0x4ed3430:s1 -> Node0x4ed3d00;
	Node0x4ed3c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%62:\l62:                                               \l  %63 = load float, float addrspace(3)* getelementptr inbounds ([256 x float],\l... [256 x float] addrspace(3)* @_ZZ16__stratifycountsPfiS_PjE2ss, i32 0, i32 0),\l... align 16, !tbaa !16\l  br label %65\l}"];
	Node0x4ed3c70 -> Node0x4ed3e90;
	Node0x4ed3d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%64:\l64:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %37, label %118, label %129\l|{<s0>T|<s1>F}}"];
	Node0x4ed3d00:s0 -> Node0x4ed0600;
	Node0x4ed3d00:s1 -> Node0x4ed2e80;
	Node0x4ed3e90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = phi i32 [ %58, %62 ], [ %116, %65 ]\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %2, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !16\l  %70 = fcmp contract ogt float %69, %63\l  %71 = select i1 %70, i32 2, i32 1\l  %72 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ16__stratifycountsPfiS_PjE2ss, i32 0, i32 %71\l  %73 = load float, float addrspace(3)* %72, align 4, !tbaa !16\l  %74 = fcmp contract ogt float %69, %73\l  %75 = shl nuw nsw i32 %71, 1\l  %76 = select i1 %74, i32 2, i32 1\l  %77 = add nuw nsw i32 %75, %76\l  %78 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ16__stratifycountsPfiS_PjE2ss, i32 0, i32 %77\l  %79 = load float, float addrspace(3)* %78, align 4, !tbaa !16\l  %80 = fcmp contract ogt float %69, %79\l  %81 = shl nuw nsw i32 %77, 1\l  %82 = select i1 %80, i32 2, i32 1\l  %83 = add nuw nsw i32 %81, %82\l  %84 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ16__stratifycountsPfiS_PjE2ss, i32 0, i32 %83\l  %85 = load float, float addrspace(3)* %84, align 4, !tbaa !16\l  %86 = fcmp contract ogt float %69, %85\l  %87 = shl nuw nsw i32 %83, 1\l  %88 = select i1 %86, i32 2, i32 1\l  %89 = add nuw nsw i32 %87, %88\l  %90 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ16__stratifycountsPfiS_PjE2ss, i32 0, i32 %89\l  %91 = load float, float addrspace(3)* %90, align 4, !tbaa !16\l  %92 = fcmp contract ogt float %69, %91\l  %93 = shl nuw nsw i32 %89, 1\l  %94 = select i1 %92, i32 2, i32 1\l  %95 = add nuw nsw i32 %93, %94\l  %96 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ16__stratifycountsPfiS_PjE2ss, i32 0, i32 %95\l  %97 = load float, float addrspace(3)* %96, align 4, !tbaa !16\l  %98 = fcmp contract ogt float %69, %97\l  %99 = shl nuw nsw i32 %95, 1\l  %100 = select i1 %98, i32 2, i32 1\l  %101 = add nuw nsw i32 %99, %100\l  %102 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ16__stratifycountsPfiS_PjE2ss, i32 0, i32 %101\l  %103 = load float, float addrspace(3)* %102, align 4, !tbaa !16\l  %104 = fcmp contract ogt float %69, %103\l  %105 = shl nuw nsw i32 %101, 1\l  %106 = select i1 %104, i32 2, i32 1\l  %107 = add nuw nsw i32 %105, %106\l  %108 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ16__stratifycountsPfiS_PjE2ss, i32 0, i32 %107\l  %109 = load float, float addrspace(3)* %108, align 4, !tbaa !16\l  %110 = fcmp contract ogt float %69, %109\l  %111 = shl nuw nsw i32 %107, 1\l  %112 = select i1 %110, i32 -253, i32 -254\l  %113 = add nsw i32 %112, %111\l  %114 = getelementptr inbounds [256 x [4 x i32]], [256 x [4 x i32]]\l... addrspace(3)* @_ZZ16__stratifycountsPfiS_PjE2ic, i32 0, i32 %113, i32 %34\l  %115 = tail call i32 @llvm.amdgcn.atomic.inc.i32.p3i32(i32 addrspace(3)*\l... %114, i32 2147418112, i32 2, i32 4, i1 false)\l  %116 = add nsw i32 %66, 1024\l  %117 = icmp slt i32 %116, %60\l  br i1 %117, label %65, label %64, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4ed3e90:s0 -> Node0x4ed3e90;
	Node0x4ed3e90:s1 -> Node0x4ed3d00;
	Node0x4ed0600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%118:\l118:                                              \l  %119 = load i32, i32 addrspace(3)* %48, align 16, !tbaa !20\l  %120 = load i32, i32 addrspace(3)* %49, align 4, !tbaa !20\l  %121 = add i32 %120, %119\l  %122 = load i32, i32 addrspace(3)* %50, align 8, !tbaa !20\l  %123 = add i32 %121, %122\l  %124 = load i32, i32 addrspace(3)* %51, align 4, !tbaa !20\l  %125 = add i32 %123, %124\l  %126 = add i32 %54, %33\l  %127 = zext i32 %126 to i64\l  %128 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %127\l  store i32 %125, i32 addrspace(1)* %128, align 4, !tbaa !20\l  br label %129\l}"];
	Node0x4ed0600 -> Node0x4ed2e80;
	Node0x4ed2e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%129:\l129:                                              \l  %130 = add nsw i32 %54, 256\l  %131 = add nsw i32 %55, 4096\l  %132 = icmp slt i32 %131, %29\l  br i1 %132, label %53, label %52, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4ed2e80:s0 -> Node0x4ed2880;
	Node0x4ed2e80:s1 -> Node0x4ed26f0;
}
