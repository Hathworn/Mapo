digraph "CFG for '_Z13smooth_kernelPfiiiiifS_' function" {
	label="CFG for '_Z13smooth_kernelPfiiiiifS_' function";

	Node0x5a451f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !4\l  %15 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !13, !invariant.load\l... !14\l  %18 = zext i16 %17 to i32\l  %19 = udiv i32 %14, %18\l  %20 = mul i32 %19, %18\l  %21 = icmp ugt i32 %14, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %10\l  %25 = add i32 %24, %9\l  %26 = mul i32 %25, %18\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %28 = add i32 %26, %27\l  %29 = icmp slt i32 %28, %1\l  br i1 %29, label %30, label %176\l|{<s0>T|<s1>F}}"];
	Node0x5a451f0:s0 -> Node0x5a47a20;
	Node0x5a451f0:s1 -> Node0x5a47ab0;
	Node0x5a47a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%30:\l30:                                               \l  %31 = freeze i32 %28\l  %32 = freeze i32 %2\l  %33 = sdiv i32 %31, %32\l  %34 = mul i32 %33, %32\l  %35 = sub i32 %31, %34\l  %36 = freeze i32 %3\l  %37 = sdiv i32 %33, %36\l  %38 = mul i32 %37, %36\l  %39 = sub i32 %33, %38\l  %40 = freeze i32 %37\l  %41 = sitofp i32 %5 to float\l  %42 = fmul contract float %41, -5.000000e-01\l  %43 = fptosi float %42 to i32\l  %44 = mul nsw i32 %40, %3\l  %45 = icmp sgt i32 %5, 0\l  br i1 %45, label %46, label %176\l|{<s0>T|<s1>F}}"];
	Node0x5a47a20:s0 -> Node0x5a48ec0;
	Node0x5a47a20:s1 -> Node0x5a47ab0;
	Node0x5a48ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%46:\l46:                                               \l  %47 = add nsw i32 %44, %39\l  %48 = mul nsw i32 %47, %2\l  %49 = add nsw i32 %48, %35\l  %50 = add nsw i32 %39, %43\l  %51 = add nsw i32 %35, %43\l  %52 = sext i32 %49 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = getelementptr inbounds float, float addrspace(1)* %7, i64 %52\l  %55 = and i32 %5, 3\l  %56 = icmp ult i32 %5, 4\l  %57 = and i32 %5, -4\l  %58 = icmp eq i32 %55, 0\l  br label %59\l}"];
	Node0x5a48ec0 -> Node0x5a49750;
	Node0x5a49750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%59:\l59:                                               \l  %60 = phi i32 [ 0, %46 ], [ %174, %173 ]\l  %61 = add nsw i32 %50, %60\l  %62 = add nsw i32 %61, %44\l  %63 = mul nsw i32 %62, %2\l  %64 = icmp sgt i32 %61, -1\l  %65 = icmp slt i32 %61, %3\l  br i1 %56, label %147, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5a49750:s0 -> Node0x5a47d60;
	Node0x5a49750:s1 -> Node0x5a47df0;
	Node0x5a47df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%66:\l66:                                               \l  %67 = phi i32 [ %144, %140 ], [ 0, %59 ]\l  %68 = phi i32 [ %145, %140 ], [ 0, %59 ]\l  %69 = add nsw i32 %51, %67\l  %70 = add nsw i32 %69, %63\l  br i1 %64, label %71, label %83\l|{<s0>T|<s1>F}}"];
	Node0x5a47df0:s0 -> Node0x5a4a400;
	Node0x5a47df0:s1 -> Node0x5a4a490;
	Node0x5a4a400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%71:\l71:                                               \l  %72 = icmp sgt i32 %69, -1\l  %73 = select i1 %65, i1 %72, i1 false\l  %74 = icmp slt i32 %69, %2\l  %75 = select i1 %73, i1 %74, i1 false\l  br i1 %75, label %76, label %83\l|{<s0>T|<s1>F}}"];
	Node0x5a4a400:s0 -> Node0x5a4a880;
	Node0x5a4a400:s1 -> Node0x5a4a490;
	Node0x5a4a880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%76:\l76:                                               \l  %77 = sext i32 %70 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !16\l  %80 = load float, float addrspace(1)* %53, align 4, !tbaa !16\l  %81 = fsub contract float %79, %80\l  %82 = fmul contract float %81, %6\l  br label %83\l}"];
	Node0x5a4a880 -> Node0x5a4a490;
	Node0x5a4a490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%83:\l83:                                               \l  %84 = phi contract float [ %82, %76 ], [ 0.000000e+00, %71 ], [\l... 0.000000e+00, %66 ]\l  %85 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %86 = fadd contract float %84, %85\l  store float %86, float addrspace(1)* %54, align 4, !tbaa !16\l  %87 = or i32 %67, 1\l  %88 = add nsw i32 %51, %87\l  %89 = add nsw i32 %88, %63\l  br i1 %64, label %90, label %102\l|{<s0>T|<s1>F}}"];
	Node0x5a4a490:s0 -> Node0x5a4b850;
	Node0x5a4a490:s1 -> Node0x5a4b8e0;
	Node0x5a4b850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%90:\l90:                                               \l  %91 = icmp sgt i32 %88, -1\l  %92 = select i1 %65, i1 %91, i1 false\l  %93 = icmp slt i32 %88, %2\l  %94 = select i1 %92, i1 %93, i1 false\l  br i1 %94, label %95, label %102\l|{<s0>T|<s1>F}}"];
	Node0x5a4b850:s0 -> Node0x5a4bca0;
	Node0x5a4b850:s1 -> Node0x5a4b8e0;
	Node0x5a4bca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%95:\l95:                                               \l  %96 = sext i32 %89 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %0, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !16\l  %99 = load float, float addrspace(1)* %53, align 4, !tbaa !16\l  %100 = fsub contract float %98, %99\l  %101 = fmul contract float %100, %6\l  br label %102\l}"];
	Node0x5a4bca0 -> Node0x5a4b8e0;
	Node0x5a4b8e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%102:\l102:                                              \l  %103 = phi contract float [ %101, %95 ], [ 0.000000e+00, %90 ], [\l... 0.000000e+00, %83 ]\l  %104 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %105 = fadd contract float %103, %104\l  store float %105, float addrspace(1)* %54, align 4, !tbaa !16\l  %106 = or i32 %67, 2\l  %107 = add nsw i32 %51, %106\l  %108 = add nsw i32 %107, %63\l  br i1 %64, label %109, label %121\l|{<s0>T|<s1>F}}"];
	Node0x5a4b8e0:s0 -> Node0x5a4c560;
	Node0x5a4b8e0:s1 -> Node0x5a4c5b0;
	Node0x5a4c560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%109:\l109:                                              \l  %110 = icmp sgt i32 %107, -1\l  %111 = select i1 %65, i1 %110, i1 false\l  %112 = icmp slt i32 %107, %2\l  %113 = select i1 %111, i1 %112, i1 false\l  br i1 %113, label %114, label %121\l|{<s0>T|<s1>F}}"];
	Node0x5a4c560:s0 -> Node0x5a4c930;
	Node0x5a4c560:s1 -> Node0x5a4c5b0;
	Node0x5a4c930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%114:\l114:                                              \l  %115 = sext i32 %108 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %0, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !16\l  %118 = load float, float addrspace(1)* %53, align 4, !tbaa !16\l  %119 = fsub contract float %117, %118\l  %120 = fmul contract float %119, %6\l  br label %121\l}"];
	Node0x5a4c930 -> Node0x5a4c5b0;
	Node0x5a4c5b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%121:\l121:                                              \l  %122 = phi contract float [ %120, %114 ], [ 0.000000e+00, %109 ], [\l... 0.000000e+00, %102 ]\l  %123 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %124 = fadd contract float %122, %123\l  store float %124, float addrspace(1)* %54, align 4, !tbaa !16\l  %125 = or i32 %67, 3\l  %126 = add nsw i32 %51, %125\l  %127 = add nsw i32 %126, %63\l  br i1 %64, label %128, label %140\l|{<s0>T|<s1>F}}"];
	Node0x5a4c5b0:s0 -> Node0x5a4d1f0;
	Node0x5a4c5b0:s1 -> Node0x5a4a0b0;
	Node0x5a4d1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%128:\l128:                                              \l  %129 = icmp sgt i32 %126, -1\l  %130 = select i1 %65, i1 %129, i1 false\l  %131 = icmp slt i32 %126, %2\l  %132 = select i1 %130, i1 %131, i1 false\l  br i1 %132, label %133, label %140\l|{<s0>T|<s1>F}}"];
	Node0x5a4d1f0:s0 -> Node0x5a49e70;
	Node0x5a4d1f0:s1 -> Node0x5a4a0b0;
	Node0x5a49e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%133:\l133:                                              \l  %134 = sext i32 %127 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %0, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !16\l  %137 = load float, float addrspace(1)* %53, align 4, !tbaa !16\l  %138 = fsub contract float %136, %137\l  %139 = fmul contract float %138, %6\l  br label %140\l}"];
	Node0x5a49e70 -> Node0x5a4a0b0;
	Node0x5a4a0b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%140:\l140:                                              \l  %141 = phi contract float [ %139, %133 ], [ 0.000000e+00, %128 ], [\l... 0.000000e+00, %121 ]\l  %142 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %143 = fadd contract float %141, %142\l  store float %143, float addrspace(1)* %54, align 4, !tbaa !16\l  %144 = add nuw nsw i32 %67, 4\l  %145 = add i32 %68, 4\l  %146 = icmp eq i32 %145, %57\l  br i1 %146, label %147, label %66, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5a4a0b0:s0 -> Node0x5a47d60;
	Node0x5a4a0b0:s1 -> Node0x5a47df0;
	Node0x5a47d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%147:\l147:                                              \l  %148 = phi i32 [ 0, %59 ], [ %144, %140 ]\l  br i1 %58, label %173, label %149\l|{<s0>T|<s1>F}}"];
	Node0x5a47d60:s0 -> Node0x5a49840;
	Node0x5a47d60:s1 -> Node0x5a4e400;
	Node0x5a4e400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%149:\l149:                                              \l  %150 = phi i32 [ %170, %166 ], [ %148, %147 ]\l  %151 = phi i32 [ %171, %166 ], [ 0, %147 ]\l  %152 = add nsw i32 %51, %150\l  %153 = add nsw i32 %152, %63\l  br i1 %64, label %154, label %166\l|{<s0>T|<s1>F}}"];
	Node0x5a4e400:s0 -> Node0x5a4e7d0;
	Node0x5a4e400:s1 -> Node0x5a4e500;
	Node0x5a4e7d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%154:\l154:                                              \l  %155 = icmp sgt i32 %152, -1\l  %156 = select i1 %65, i1 %155, i1 false\l  %157 = icmp slt i32 %152, %2\l  %158 = select i1 %156, i1 %157, i1 false\l  br i1 %158, label %159, label %166\l|{<s0>T|<s1>F}}"];
	Node0x5a4e7d0:s0 -> Node0x5a4eb90;
	Node0x5a4e7d0:s1 -> Node0x5a4e500;
	Node0x5a4eb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%159:\l159:                                              \l  %160 = sext i32 %153 to i64\l  %161 = getelementptr inbounds float, float addrspace(1)* %0, i64 %160\l  %162 = load float, float addrspace(1)* %161, align 4, !tbaa !16\l  %163 = load float, float addrspace(1)* %53, align 4, !tbaa !16\l  %164 = fsub contract float %162, %163\l  %165 = fmul contract float %164, %6\l  br label %166\l}"];
	Node0x5a4eb90 -> Node0x5a4e500;
	Node0x5a4e500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%166:\l166:                                              \l  %167 = phi contract float [ %165, %159 ], [ 0.000000e+00, %154 ], [\l... 0.000000e+00, %149 ]\l  %168 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %169 = fadd contract float %167, %168\l  store float %169, float addrspace(1)* %54, align 4, !tbaa !16\l  %170 = add nuw nsw i32 %150, 1\l  %171 = add i32 %151, 1\l  %172 = icmp eq i32 %171, %55\l  br i1 %172, label %173, label %149, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5a4e500:s0 -> Node0x5a49840;
	Node0x5a4e500:s1 -> Node0x5a4e400;
	Node0x5a49840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%173:\l173:                                              \l  %174 = add nuw nsw i32 %60, 1\l  %175 = icmp eq i32 %174, %5\l  br i1 %175, label %176, label %59, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5a49840:s0 -> Node0x5a47ab0;
	Node0x5a49840:s1 -> Node0x5a49750;
	Node0x5a47ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%176:\l176:                                              \l  ret void\l}"];
}
