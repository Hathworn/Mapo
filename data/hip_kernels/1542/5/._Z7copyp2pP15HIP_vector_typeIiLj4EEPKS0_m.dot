digraph "CFG for '_Z7copyp2pP15HIP_vector_typeIiLj4EEPKS0_m' function" {
	label="CFG for '_Z7copyp2pP15HIP_vector_typeIiLj4EEPKS0_m' function";

	Node0x64d7bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = zext i32 %15 to i64\l  %17 = udiv i32 %12, %9\l  %18 = mul i32 %17, %9\l  %19 = icmp ugt i32 %12, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %9\l  %23 = zext i32 %22 to i64\l  %24 = icmp ult i64 %16, %2\l  br i1 %24, label %26, label %25\l|{<s0>T|<s1>F}}"];
	Node0x64d7bf0:s0 -> Node0x64dd140;
	Node0x64d7bf0:s1 -> Node0x64dd1d0;
	Node0x64dd1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%25:\l25:                                               \l  ret void\l}"];
	Node0x64dd140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i64 [ %60, %55 ], [ %16, %3 ]\l  %28 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %27\l  %29 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %27\l  %30 = bitcast %struct.HIP_vector_type addrspace(1)* %29 to i8 addrspace(1)*\l  %31 = bitcast %struct.HIP_vector_type addrspace(1)* %28 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %30, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %31, i64 16, i1 false)\l  %32 = add i64 %27, %23\l  %33 = icmp ult i64 %32, %2\l  br i1 %33, label %34, label %25, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x64dd140:s0 -> Node0x64dcd10;
	Node0x64dd140:s1 -> Node0x64dd1d0;
	Node0x64dcd10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %32\l  %36 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %32\l  %37 = bitcast %struct.HIP_vector_type addrspace(1)* %36 to i8 addrspace(1)*\l  %38 = bitcast %struct.HIP_vector_type addrspace(1)* %35 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %37, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %38, i64 16, i1 false)\l  %39 = add i64 %32, %23\l  %40 = icmp ult i64 %39, %2\l  br i1 %40, label %41, label %25, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x64dcd10:s0 -> Node0x64de380;
	Node0x64dcd10:s1 -> Node0x64dd1d0;
	Node0x64de380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%41:\l41:                                               \l  %42 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %39\l  %43 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %39\l  %44 = bitcast %struct.HIP_vector_type addrspace(1)* %43 to i8 addrspace(1)*\l  %45 = bitcast %struct.HIP_vector_type addrspace(1)* %42 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %44, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %45, i64 16, i1 false)\l  %46 = add i64 %39, %23\l  %47 = icmp ult i64 %46, %2\l  br i1 %47, label %48, label %25, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x64de380:s0 -> Node0x64def20;
	Node0x64de380:s1 -> Node0x64dd1d0;
	Node0x64def20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%48:\l48:                                               \l  %49 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %46\l  %50 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %46\l  %51 = bitcast %struct.HIP_vector_type addrspace(1)* %50 to i8 addrspace(1)*\l  %52 = bitcast %struct.HIP_vector_type addrspace(1)* %49 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %51, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %52, i64 16, i1 false)\l  %53 = add i64 %46, %23\l  %54 = icmp ult i64 %53, %2\l  br i1 %54, label %55, label %25, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x64def20:s0 -> Node0x64dd360;
	Node0x64def20:s1 -> Node0x64dd1d0;
	Node0x64dd360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%55:\l55:                                               \l  %56 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %53\l  %57 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %53\l  %58 = bitcast %struct.HIP_vector_type addrspace(1)* %57 to i8 addrspace(1)*\l  %59 = bitcast %struct.HIP_vector_type addrspace(1)* %56 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %58, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %59, i64 16, i1 false)\l  %60 = add i64 %53, %23\l  %61 = icmp ult i64 %60, %2\l  br i1 %61, label %26, label %25, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x64dd360:s0 -> Node0x64dd140;
	Node0x64dd360:s1 -> Node0x64dd1d0;
}
