digraph "CFG for '_Z9pi_randomPfS_Pi' function" {
	label="CFG for '_Z9pi_randomPfS_Pi' function";

	Node0x6125880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = mul nuw nsw i32 %11, 1000\l  %13 = add i32 %10, %12\l  br label %17\l}"];
	Node0x6125880 -> Node0x6127780;
	Node0x6127880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%14:\l14:                                               \l  %15 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %11\l  store i32 %103, i32 addrspace(3)* %15, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %16 = icmp eq i32 %11, 0\l  br i1 %16, label %109, label %213\l|{<s0>T|<s1>F}}"];
	Node0x6127880:s0 -> Node0x61271d0;
	Node0x6127880:s1 -> Node0x61280b0;
	Node0x6127780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = phi i32 [ 0, %3 ], [ %104, %102 ]\l  %19 = phi i32 [ 0, %3 ], [ %103, %102 ]\l  %20 = add nsw i32 %13, %18\l  %21 = icmp slt i32 %20, 100000000\l  br i1 %21, label %22, label %34\l|{<s0>T|<s1>F}}"];
	Node0x6127780:s0 -> Node0x6128530;
	Node0x6127780:s1 -> Node0x61285c0;
	Node0x6128530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%22:\l22:                                               \l  %23 = sext i32 %20 to i64\l  %24 = getelementptr inbounds float, float addrspace(1)* %0, i64 %23\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %26 = fmul contract float %25, %25\l  %27 = getelementptr inbounds float, float addrspace(1)* %1, i64 %23\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %29 = fmul contract float %28, %28\l  %30 = fadd contract float %26, %29\l  %31 = fcmp contract olt float %30, 1.000000e+00\l  %32 = zext i1 %31 to i32\l  %33 = add nsw i32 %19, %32\l  br label %34\l}"];
	Node0x6128530 -> Node0x61285c0;
	Node0x61285c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i32 [ %19, %17 ], [ %33, %22 ]\l  %36 = add nuw nsw i32 %18, 1\l  %37 = add nsw i32 %13, %36\l  %38 = icmp slt i32 %37, 100000000\l  br i1 %38, label %39, label %51\l|{<s0>T|<s1>F}}"];
	Node0x61285c0:s0 -> Node0x612a910;
	Node0x61285c0:s1 -> Node0x612a960;
	Node0x612a910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%39:\l39:                                               \l  %40 = sext i32 %37 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %43 = fmul contract float %42, %42\l  %44 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %46 = fmul contract float %45, %45\l  %47 = fadd contract float %43, %46\l  %48 = fcmp contract olt float %47, 1.000000e+00\l  %49 = zext i1 %48 to i32\l  %50 = add nsw i32 %35, %49\l  br label %51\l}"];
	Node0x612a910 -> Node0x612a960;
	Node0x612a960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32 [ %35, %34 ], [ %50, %39 ]\l  %53 = add nuw nsw i32 %18, 2\l  %54 = add nsw i32 %13, %53\l  %55 = icmp slt i32 %54, 100000000\l  br i1 %55, label %56, label %68\l|{<s0>T|<s1>F}}"];
	Node0x612a960:s0 -> Node0x612b3b0;
	Node0x612a960:s1 -> Node0x612b400;
	Node0x612b3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%56:\l56:                                               \l  %57 = sext i32 %54 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %60 = fmul contract float %59, %59\l  %61 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %63 = fmul contract float %62, %62\l  %64 = fadd contract float %60, %63\l  %65 = fcmp contract olt float %64, 1.000000e+00\l  %66 = zext i1 %65 to i32\l  %67 = add nsw i32 %52, %66\l  br label %68\l}"];
	Node0x612b3b0 -> Node0x612b400;
	Node0x612b400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = phi i32 [ %52, %51 ], [ %67, %56 ]\l  %70 = add nuw nsw i32 %18, 3\l  %71 = add nsw i32 %13, %70\l  %72 = icmp slt i32 %71, 100000000\l  br i1 %72, label %73, label %85\l|{<s0>T|<s1>F}}"];
	Node0x612b400:s0 -> Node0x612c060;
	Node0x612b400:s1 -> Node0x612c0b0;
	Node0x612c060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%73:\l73:                                               \l  %74 = sext i32 %71 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %77 = fmul contract float %76, %76\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %74\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %80 = fmul contract float %79, %79\l  %81 = fadd contract float %77, %80\l  %82 = fcmp contract olt float %81, 1.000000e+00\l  %83 = zext i1 %82 to i32\l  %84 = add nsw i32 %69, %83\l  br label %85\l}"];
	Node0x612c060 -> Node0x612c0b0;
	Node0x612c0b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  %86 = phi i32 [ %69, %68 ], [ %84, %73 ]\l  %87 = add nuw nsw i32 %18, 4\l  %88 = add nsw i32 %13, %87\l  %89 = icmp slt i32 %88, 100000000\l  br i1 %89, label %90, label %102\l|{<s0>T|<s1>F}}"];
	Node0x612c0b0:s0 -> Node0x612cb00;
	Node0x612c0b0:s1 -> Node0x61281f0;
	Node0x612cb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%90:\l90:                                               \l  %91 = sext i32 %88 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %94 = fmul contract float %93, %93\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %91\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %97 = fmul contract float %96, %96\l  %98 = fadd contract float %94, %97\l  %99 = fcmp contract olt float %98, 1.000000e+00\l  %100 = zext i1 %99 to i32\l  %101 = add nsw i32 %86, %100\l  br label %102\l}"];
	Node0x612cb00 -> Node0x61281f0;
	Node0x61281f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  %103 = phi i32 [ %86, %85 ], [ %101, %90 ]\l  %104 = add nuw nsw i32 %18, 5\l  %105 = icmp eq i32 %104, 1000\l  br i1 %105, label %14, label %17, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x61281f0:s0 -> Node0x6127880;
	Node0x61281f0:s1 -> Node0x6127780;
	Node0x612d5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%106:\l106:                                              \l  %107 = zext i32 %4 to i64\l  %108 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %107\l  store i32 %210, i32 addrspace(1)* %108, align 4, !tbaa !7\l  br label %213\l}"];
	Node0x612d5b0 -> Node0x61280b0;
	Node0x61271d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%109:\l109:                                              \l  %110 = phi i32 [ %211, %109 ], [ 0, %14 ]\l  %111 = phi i32 [ %210, %109 ], [ 0, %14 ]\l  %112 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %110\l  %113 = load i32, i32 addrspace(3)* %112, align 4, !tbaa !7\l  %114 = add nsw i32 %113, %111\l  %115 = add nuw nsw i32 %110, 1\l  %116 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %115\l  %117 = load i32, i32 addrspace(3)* %116, align 4, !tbaa !7\l  %118 = add nsw i32 %117, %114\l  %119 = add nuw nsw i32 %110, 2\l  %120 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %119\l  %121 = load i32, i32 addrspace(3)* %120, align 4, !tbaa !7\l  %122 = add nsw i32 %121, %118\l  %123 = add nuw nsw i32 %110, 3\l  %124 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %123\l  %125 = load i32, i32 addrspace(3)* %124, align 4, !tbaa !7\l  %126 = add nsw i32 %125, %122\l  %127 = add nuw nsw i32 %110, 4\l  %128 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %127\l  %129 = load i32, i32 addrspace(3)* %128, align 4, !tbaa !7\l  %130 = add nsw i32 %129, %126\l  %131 = add nuw nsw i32 %110, 5\l  %132 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %131\l  %133 = load i32, i32 addrspace(3)* %132, align 4, !tbaa !7\l  %134 = add nsw i32 %133, %130\l  %135 = add nuw nsw i32 %110, 6\l  %136 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %135\l  %137 = load i32, i32 addrspace(3)* %136, align 4, !tbaa !7\l  %138 = add nsw i32 %137, %134\l  %139 = add nuw nsw i32 %110, 7\l  %140 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %139\l  %141 = load i32, i32 addrspace(3)* %140, align 4, !tbaa !7\l  %142 = add nsw i32 %141, %138\l  %143 = add nuw nsw i32 %110, 8\l  %144 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %143\l  %145 = load i32, i32 addrspace(3)* %144, align 4, !tbaa !7\l  %146 = add nsw i32 %145, %142\l  %147 = add nuw nsw i32 %110, 9\l  %148 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %147\l  %149 = load i32, i32 addrspace(3)* %148, align 4, !tbaa !7\l  %150 = add nsw i32 %149, %146\l  %151 = add nuw nsw i32 %110, 10\l  %152 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %151\l  %153 = load i32, i32 addrspace(3)* %152, align 4, !tbaa !7\l  %154 = add nsw i32 %153, %150\l  %155 = add nuw nsw i32 %110, 11\l  %156 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %155\l  %157 = load i32, i32 addrspace(3)* %156, align 4, !tbaa !7\l  %158 = add nsw i32 %157, %154\l  %159 = add nuw nsw i32 %110, 12\l  %160 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %159\l  %161 = load i32, i32 addrspace(3)* %160, align 4, !tbaa !7\l  %162 = add nsw i32 %161, %158\l  %163 = add nuw nsw i32 %110, 13\l  %164 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %163\l  %165 = load i32, i32 addrspace(3)* %164, align 4, !tbaa !7\l  %166 = add nsw i32 %165, %162\l  %167 = add nuw nsw i32 %110, 14\l  %168 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %167\l  %169 = load i32, i32 addrspace(3)* %168, align 4, !tbaa !7\l  %170 = add nsw i32 %169, %166\l  %171 = add nuw nsw i32 %110, 15\l  %172 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %171\l  %173 = load i32, i32 addrspace(3)* %172, align 4, !tbaa !7\l  %174 = add nsw i32 %173, %170\l  %175 = add nuw nsw i32 %110, 16\l  %176 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %175\l  %177 = load i32, i32 addrspace(3)* %176, align 4, !tbaa !7\l  %178 = add nsw i32 %177, %174\l  %179 = add nuw nsw i32 %110, 17\l  %180 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %179\l  %181 = load i32, i32 addrspace(3)* %180, align 4, !tbaa !7\l  %182 = add nsw i32 %181, %178\l  %183 = add nuw nsw i32 %110, 18\l  %184 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %183\l  %185 = load i32, i32 addrspace(3)* %184, align 4, !tbaa !7\l  %186 = add nsw i32 %185, %182\l  %187 = add nuw nsw i32 %110, 19\l  %188 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %187\l  %189 = load i32, i32 addrspace(3)* %188, align 4, !tbaa !7\l  %190 = add nsw i32 %189, %186\l  %191 = add nuw nsw i32 %110, 20\l  %192 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %191\l  %193 = load i32, i32 addrspace(3)* %192, align 4, !tbaa !7\l  %194 = add nsw i32 %193, %190\l  %195 = add nuw nsw i32 %110, 21\l  %196 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %195\l  %197 = load i32, i32 addrspace(3)* %196, align 4, !tbaa !7\l  %198 = add nsw i32 %197, %194\l  %199 = add nuw nsw i32 %110, 22\l  %200 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %199\l  %201 = load i32, i32 addrspace(3)* %200, align 4, !tbaa !7\l  %202 = add nsw i32 %201, %198\l  %203 = add nuw nsw i32 %110, 23\l  %204 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %203\l  %205 = load i32, i32 addrspace(3)* %204, align 4, !tbaa !7\l  %206 = add nsw i32 %205, %202\l  %207 = add nuw nsw i32 %110, 24\l  %208 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ9pi_randomPfS_PiE6counts, i32 0, i32 %207\l  %209 = load i32, i32 addrspace(3)* %208, align 4, !tbaa !7\l  %210 = add nsw i32 %209, %206\l  %211 = add nuw nsw i32 %110, 25\l  %212 = icmp eq i32 %211, 500\l  br i1 %212, label %106, label %109, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x61271d0:s0 -> Node0x612d5b0;
	Node0x61271d0:s1 -> Node0x61271d0;
	Node0x61280b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%213:\l213:                                              \l  ret void\l}"];
}
