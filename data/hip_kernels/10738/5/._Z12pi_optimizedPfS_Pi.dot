digraph "CFG for '_Z12pi_optimizedPfS_Pi' function" {
	label="CFG for '_Z12pi_optimizedPfS_Pi' function";

	Node0x58e4980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  br label %16\l}"];
	Node0x58e4980 -> Node0x58e67f0;
	Node0x58e68f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%13:\l13:                                               \l  %14 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %11\l  store i32 %107, i32 addrspace(3)* %14, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %15 = icmp eq i32 %11, 0\l  br i1 %15, label %113, label %217\l|{<s0>T|<s1>F}}"];
	Node0x58e68f0:s0 -> Node0x58e6fe0;
	Node0x58e68f0:s1 -> Node0x58e7070;
	Node0x58e67f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  %17 = phi i32 [ 0, %3 ], [ %107, %106 ]\l  %18 = phi i32 [ 0, %3 ], [ %108, %106 ]\l  %19 = mul nuw nsw i32 %18, 100000\l  %20 = add nsw i32 %12, %19\l  %21 = icmp slt i32 %20, 100000000\l  br i1 %21, label %22, label %34\l|{<s0>T|<s1>F}}"];
	Node0x58e67f0:s0 -> Node0x58e7630;
	Node0x58e67f0:s1 -> Node0x58e76c0;
	Node0x58e7630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%22:\l22:                                               \l  %23 = sext i32 %20 to i64\l  %24 = getelementptr inbounds float, float addrspace(1)* %0, i64 %23\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %26 = fmul contract float %25, %25\l  %27 = getelementptr inbounds float, float addrspace(1)* %1, i64 %23\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %29 = fmul contract float %28, %28\l  %30 = fadd contract float %26, %29\l  %31 = fcmp contract olt float %30, 1.000000e+00\l  %32 = zext i1 %31 to i32\l  %33 = add nsw i32 %17, %32\l  br label %34\l}"];
	Node0x58e7630 -> Node0x58e76c0;
	Node0x58e76c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i32 [ %17, %16 ], [ %33, %22 ]\l  %36 = mul nuw i32 %18, 100000\l  %37 = add nuw i32 %36, 100000\l  %38 = add nsw i32 %12, %37\l  %39 = icmp slt i32 %38, 100000000\l  br i1 %39, label %40, label %52\l|{<s0>T|<s1>F}}"];
	Node0x58e76c0:s0 -> Node0x58e9aa0;
	Node0x58e76c0:s1 -> Node0x58e9af0;
	Node0x58e9aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%40:\l40:                                               \l  %41 = sext i32 %38 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %44 = fmul contract float %43, %43\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %47 = fmul contract float %46, %46\l  %48 = fadd contract float %44, %47\l  %49 = fcmp contract olt float %48, 1.000000e+00\l  %50 = zext i1 %49 to i32\l  %51 = add nsw i32 %35, %50\l  br label %52\l}"];
	Node0x58e9aa0 -> Node0x58e9af0;
	Node0x58e9af0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi i32 [ %35, %34 ], [ %51, %40 ]\l  %54 = mul nuw i32 %18, 100000\l  %55 = add nuw i32 %54, 200000\l  %56 = add nsw i32 %12, %55\l  %57 = icmp slt i32 %56, 100000000\l  br i1 %57, label %58, label %70\l|{<s0>T|<s1>F}}"];
	Node0x58e9af0:s0 -> Node0x58ea5a0;
	Node0x58e9af0:s1 -> Node0x58ea5f0;
	Node0x58ea5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%58:\l58:                                               \l  %59 = sext i32 %56 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %62 = fmul contract float %61, %61\l  %63 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %65 = fmul contract float %64, %64\l  %66 = fadd contract float %62, %65\l  %67 = fcmp contract olt float %66, 1.000000e+00\l  %68 = zext i1 %67 to i32\l  %69 = add nsw i32 %53, %68\l  br label %70\l}"];
	Node0x58ea5a0 -> Node0x58ea5f0;
	Node0x58ea5f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = phi i32 [ %53, %52 ], [ %69, %58 ]\l  %72 = mul nuw i32 %18, 100000\l  %73 = add nuw i32 %72, 300000\l  %74 = add nsw i32 %12, %73\l  %75 = icmp slt i32 %74, 100000000\l  br i1 %75, label %76, label %88\l|{<s0>T|<s1>F}}"];
	Node0x58ea5f0:s0 -> Node0x58eb2e0;
	Node0x58ea5f0:s1 -> Node0x58eb330;
	Node0x58eb2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%76:\l76:                                               \l  %77 = sext i32 %74 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %80 = fmul contract float %79, %79\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %77\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %83 = fmul contract float %82, %82\l  %84 = fadd contract float %80, %83\l  %85 = fcmp contract olt float %84, 1.000000e+00\l  %86 = zext i1 %85 to i32\l  %87 = add nsw i32 %71, %86\l  br label %88\l}"];
	Node0x58eb2e0 -> Node0x58eb330;
	Node0x58eb330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  %89 = phi i32 [ %71, %70 ], [ %87, %76 ]\l  %90 = mul nuw i32 %18, 100000\l  %91 = add nuw i32 %90, 400000\l  %92 = add nsw i32 %12, %91\l  %93 = icmp slt i32 %92, 100000000\l  br i1 %93, label %94, label %106\l|{<s0>T|<s1>F}}"];
	Node0x58eb330:s0 -> Node0x58ebe10;
	Node0x58eb330:s1 -> Node0x58e62d0;
	Node0x58ebe10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%94:\l94:                                               \l  %95 = sext i32 %92 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %0, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %98 = fmul contract float %97, %97\l  %99 = getelementptr inbounds float, float addrspace(1)* %1, i64 %95\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %101 = fmul contract float %100, %100\l  %102 = fadd contract float %98, %101\l  %103 = fcmp contract olt float %102, 1.000000e+00\l  %104 = zext i1 %103 to i32\l  %105 = add nsw i32 %89, %104\l  br label %106\l}"];
	Node0x58ebe10 -> Node0x58e62d0;
	Node0x58e62d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  %107 = phi i32 [ %89, %88 ], [ %105, %94 ]\l  %108 = add nuw nsw i32 %18, 5\l  %109 = icmp eq i32 %108, 1000\l  br i1 %109, label %13, label %16, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x58e62d0:s0 -> Node0x58e68f0;
	Node0x58e62d0:s1 -> Node0x58e67f0;
	Node0x58ec8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%110:\l110:                                              \l  %111 = zext i32 %4 to i64\l  %112 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %111\l  store i32 %214, i32 addrspace(1)* %112, align 4, !tbaa !7\l  br label %217\l}"];
	Node0x58ec8c0 -> Node0x58e7070;
	Node0x58e6fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%113:\l113:                                              \l  %114 = phi i32 [ %215, %113 ], [ 0, %13 ]\l  %115 = phi i32 [ %214, %113 ], [ 0, %13 ]\l  %116 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %114\l  %117 = load i32, i32 addrspace(3)* %116, align 4, !tbaa !7\l  %118 = add nsw i32 %117, %115\l  %119 = add nuw nsw i32 %114, 1\l  %120 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %119\l  %121 = load i32, i32 addrspace(3)* %120, align 4, !tbaa !7\l  %122 = add nsw i32 %121, %118\l  %123 = add nuw nsw i32 %114, 2\l  %124 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %123\l  %125 = load i32, i32 addrspace(3)* %124, align 4, !tbaa !7\l  %126 = add nsw i32 %125, %122\l  %127 = add nuw nsw i32 %114, 3\l  %128 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %127\l  %129 = load i32, i32 addrspace(3)* %128, align 4, !tbaa !7\l  %130 = add nsw i32 %129, %126\l  %131 = add nuw nsw i32 %114, 4\l  %132 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %131\l  %133 = load i32, i32 addrspace(3)* %132, align 4, !tbaa !7\l  %134 = add nsw i32 %133, %130\l  %135 = add nuw nsw i32 %114, 5\l  %136 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %135\l  %137 = load i32, i32 addrspace(3)* %136, align 4, !tbaa !7\l  %138 = add nsw i32 %137, %134\l  %139 = add nuw nsw i32 %114, 6\l  %140 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %139\l  %141 = load i32, i32 addrspace(3)* %140, align 4, !tbaa !7\l  %142 = add nsw i32 %141, %138\l  %143 = add nuw nsw i32 %114, 7\l  %144 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %143\l  %145 = load i32, i32 addrspace(3)* %144, align 4, !tbaa !7\l  %146 = add nsw i32 %145, %142\l  %147 = add nuw nsw i32 %114, 8\l  %148 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %147\l  %149 = load i32, i32 addrspace(3)* %148, align 4, !tbaa !7\l  %150 = add nsw i32 %149, %146\l  %151 = add nuw nsw i32 %114, 9\l  %152 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %151\l  %153 = load i32, i32 addrspace(3)* %152, align 4, !tbaa !7\l  %154 = add nsw i32 %153, %150\l  %155 = add nuw nsw i32 %114, 10\l  %156 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %155\l  %157 = load i32, i32 addrspace(3)* %156, align 4, !tbaa !7\l  %158 = add nsw i32 %157, %154\l  %159 = add nuw nsw i32 %114, 11\l  %160 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %159\l  %161 = load i32, i32 addrspace(3)* %160, align 4, !tbaa !7\l  %162 = add nsw i32 %161, %158\l  %163 = add nuw nsw i32 %114, 12\l  %164 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %163\l  %165 = load i32, i32 addrspace(3)* %164, align 4, !tbaa !7\l  %166 = add nsw i32 %165, %162\l  %167 = add nuw nsw i32 %114, 13\l  %168 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %167\l  %169 = load i32, i32 addrspace(3)* %168, align 4, !tbaa !7\l  %170 = add nsw i32 %169, %166\l  %171 = add nuw nsw i32 %114, 14\l  %172 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %171\l  %173 = load i32, i32 addrspace(3)* %172, align 4, !tbaa !7\l  %174 = add nsw i32 %173, %170\l  %175 = add nuw nsw i32 %114, 15\l  %176 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %175\l  %177 = load i32, i32 addrspace(3)* %176, align 4, !tbaa !7\l  %178 = add nsw i32 %177, %174\l  %179 = add nuw nsw i32 %114, 16\l  %180 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %179\l  %181 = load i32, i32 addrspace(3)* %180, align 4, !tbaa !7\l  %182 = add nsw i32 %181, %178\l  %183 = add nuw nsw i32 %114, 17\l  %184 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %183\l  %185 = load i32, i32 addrspace(3)* %184, align 4, !tbaa !7\l  %186 = add nsw i32 %185, %182\l  %187 = add nuw nsw i32 %114, 18\l  %188 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %187\l  %189 = load i32, i32 addrspace(3)* %188, align 4, !tbaa !7\l  %190 = add nsw i32 %189, %186\l  %191 = add nuw nsw i32 %114, 19\l  %192 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %191\l  %193 = load i32, i32 addrspace(3)* %192, align 4, !tbaa !7\l  %194 = add nsw i32 %193, %190\l  %195 = add nuw nsw i32 %114, 20\l  %196 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %195\l  %197 = load i32, i32 addrspace(3)* %196, align 4, !tbaa !7\l  %198 = add nsw i32 %197, %194\l  %199 = add nuw nsw i32 %114, 21\l  %200 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %199\l  %201 = load i32, i32 addrspace(3)* %200, align 4, !tbaa !7\l  %202 = add nsw i32 %201, %198\l  %203 = add nuw nsw i32 %114, 22\l  %204 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %203\l  %205 = load i32, i32 addrspace(3)* %204, align 4, !tbaa !7\l  %206 = add nsw i32 %205, %202\l  %207 = add nuw nsw i32 %114, 23\l  %208 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %207\l  %209 = load i32, i32 addrspace(3)* %208, align 4, !tbaa !7\l  %210 = add nsw i32 %209, %206\l  %211 = add nuw nsw i32 %114, 24\l  %212 = getelementptr inbounds [500 x i32], [500 x i32] addrspace(3)*\l... @_ZZ12pi_optimizedPfS_PiE6counts, i32 0, i32 %211\l  %213 = load i32, i32 addrspace(3)* %212, align 4, !tbaa !7\l  %214 = add nsw i32 %213, %210\l  %215 = add nuw nsw i32 %114, 25\l  %216 = icmp eq i32 %215, 500\l  br i1 %216, label %110, label %113, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x58e6fe0:s0 -> Node0x58ec8c0;
	Node0x58e6fe0:s1 -> Node0x58e6fe0;
	Node0x58e7070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%217:\l217:                                              \l  ret void\l}"];
}
