digraph "CFG for '_Z16gpu_get_neighorsPiii' function" {
	label="CFG for '_Z16gpu_get_neighorsPiii' function";

	Node0x63448f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %6 = bitcast i8 addrspace(4)* %5 to i32 addrspace(4)*\l  %7 = load i32, i32 addrspace(4)* %6, align 4, !tbaa !4\l  %8 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !13, !invariant.load\l... !14\l  %11 = zext i16 %10 to i32\l  %12 = udiv i32 %7, %11\l  %13 = mul i32 %12, %11\l  %14 = icmp ugt i32 %7, %13\l  %15 = zext i1 %14 to i32\l  %16 = add i32 %12, %15\l  %17 = udiv i32 %1, %16\l  %18 = icmp eq i32 %17, -1\l  br i1 %18, label %40, label %19\l|{<s0>T|<s1>F}}"];
	Node0x63448f0:s0 -> Node0x6344af0;
	Node0x63448f0:s1 -> Node0x63468c0;
	Node0x63468c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%19:\l19:                                               \l  %20 = udiv i32 %1, %11\l  %21 = icmp eq i32 %20, -1\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %24 = sdiv i32 %2, 2\l  %25 = shl nsw i32 %24, 1\l  %26 = add nuw nsw i32 %25, 1\l  %27 = and i32 %26, 7\l  %28 = icmp ult i32 %25, 7\l  %29 = and i32 %26, -8\l  br label %30\l}"];
	Node0x63468c0 -> Node0x63472c0;
	Node0x63472c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%30:\l30:                                               \l  %31 = phi i32 [ 0, %19 ], [ %42, %41 ]\l  br i1 %21, label %41, label %32\l|{<s0>T|<s1>F}}"];
	Node0x63472c0:s0 -> Node0x6347420;
	Node0x63472c0:s1 -> Node0x6347560;
	Node0x6347560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%32:\l32:                                               \l  %33 = mul i32 %16, %31\l  %34 = add i32 %33, %22\l  %35 = icmp sge i32 %34, %1\l  %36 = sub nsw i32 %34, %24\l  %37 = add nsw i32 %34, %24\l  %38 = icmp sgt i32 %36, %37\l  %39 = mul nsw i32 %34, %1\l  br label %44\l}"];
	Node0x6347560 -> Node0x6346770;
	Node0x6344af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%40:\l40:                                               \l  ret void\l}"];
	Node0x6347420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%41:\l41:                                               \l  %42 = add nuw nsw i32 %31, 1\l  %43 = icmp eq i32 %31, %17\l  br i1 %43, label %40, label %30, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x6347420:s0 -> Node0x6344af0;
	Node0x6347420:s1 -> Node0x63472c0;
	Node0x6346770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%44:\l44:                                               \l  %45 = phi i32 [ 0, %32 ], [ %158, %157 ]\l  %46 = mul i32 %45, %11\l  %47 = add i32 %46, %23\l  %48 = icmp sge i32 %47, %1\l  %49 = select i1 %35, i1 true, i1 %48\l  %50 = select i1 %49, i1 true, i1 %38\l  br i1 %50, label %157, label %51\l|{<s0>T|<s1>F}}"];
	Node0x6346770:s0 -> Node0x6347f20;
	Node0x6346770:s1 -> Node0x63483a0;
	Node0x63483a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%51:\l51:                                               \l  %52 = sub nsw i32 %47, %24\l  %53 = add nsw i32 %47, %24\l  %54 = icmp sgt i32 %52, %53\l  %55 = add i32 %47, %39\l  %56 = mul i32 %55, %2\l  br label %57\l}"];
	Node0x63483a0 -> Node0x63487b0;
	Node0x63487b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%57:\l57:                                               \l  %58 = phi i32 [ %36, %51 ], [ %85, %83 ]\l  %59 = phi i32 [ 0, %51 ], [ %84, %83 ]\l  br i1 %54, label %83, label %60\l|{<s0>T|<s1>F}}"];
	Node0x63487b0:s0 -> Node0x63488a0;
	Node0x63487b0:s1 -> Node0x6348b00;
	Node0x6348b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%60:\l60:                                               \l  %61 = add i32 %59, %56\l  %62 = mul i32 %61, %2\l  %63 = add nsw i32 %58, %1\l  %64 = srem i32 %63, %1\l  %65 = mul nsw i32 %64, %1\l  br i1 %28, label %66, label %87\l|{<s0>T|<s1>F}}"];
	Node0x6348b00:s0 -> Node0x6347730;
	Node0x6348b00:s1 -> Node0x6347780;
	Node0x6347730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%66:\l66:                                               \l  %67 = phi i32 [ %52, %60 ], [ %154, %87 ]\l  %68 = phi i32 [ 0, %60 ], [ %153, %87 ]\l  br label %69\l}"];
	Node0x6347730 -> Node0x63494c0;
	Node0x63494c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  %70 = phi i32 [ %67, %66 ], [ %80, %69 ]\l  %71 = phi i32 [ %68, %66 ], [ %79, %69 ]\l  %72 = phi i32 [ 0, %66 ], [ %81, %69 ]\l  %73 = add nsw i32 %71, %62\l  %74 = add nsw i32 %70, %1\l  %75 = srem i32 %74, %1\l  %76 = add nsw i32 %65, %75\l  %77 = sext i32 %73 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %77\l  store i32 %76, i32 addrspace(1)* %78, align 4, !tbaa !17\l  %79 = add nuw i32 %71, 1\l  %80 = add nsw i32 %70, 1\l  %81 = add i32 %72, 1\l  %82 = icmp eq i32 %81, %27\l  br i1 %82, label %83, label %69, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x63494c0:s0 -> Node0x63488a0;
	Node0x63494c0:s1 -> Node0x63494c0;
	Node0x63488a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%83:\l83:                                               \l  %84 = add nuw i32 %59, 1\l  %85 = add nsw i32 %58, 1\l  %86 = icmp eq i32 %59, %25\l  br i1 %86, label %157, label %57, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x63488a0:s0 -> Node0x6347f20;
	Node0x63488a0:s1 -> Node0x63487b0;
	Node0x6347780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%87:\l87:                                               \l  %88 = phi i32 [ %154, %87 ], [ %52, %60 ]\l  %89 = phi i32 [ %153, %87 ], [ 0, %60 ]\l  %90 = phi i32 [ %155, %87 ], [ 0, %60 ]\l  %91 = add nsw i32 %89, %62\l  %92 = add nsw i32 %88, %1\l  %93 = srem i32 %92, %1\l  %94 = add nsw i32 %65, %93\l  %95 = sext i32 %91 to i64\l  %96 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %95\l  store i32 %94, i32 addrspace(1)* %96, align 4, !tbaa !17\l  %97 = or i32 %89, 1\l  %98 = add nsw i32 %88, 1\l  %99 = add nsw i32 %97, %62\l  %100 = add nsw i32 %98, %1\l  %101 = srem i32 %100, %1\l  %102 = add nsw i32 %65, %101\l  %103 = sext i32 %99 to i64\l  %104 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %103\l  store i32 %102, i32 addrspace(1)* %104, align 4, !tbaa !17\l  %105 = or i32 %89, 2\l  %106 = add nsw i32 %88, 2\l  %107 = add nsw i32 %105, %62\l  %108 = add nsw i32 %106, %1\l  %109 = srem i32 %108, %1\l  %110 = add nsw i32 %65, %109\l  %111 = sext i32 %107 to i64\l  %112 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %111\l  store i32 %110, i32 addrspace(1)* %112, align 4, !tbaa !17\l  %113 = or i32 %89, 3\l  %114 = add nsw i32 %88, 3\l  %115 = add nsw i32 %113, %62\l  %116 = add nsw i32 %114, %1\l  %117 = srem i32 %116, %1\l  %118 = add nsw i32 %65, %117\l  %119 = sext i32 %115 to i64\l  %120 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %119\l  store i32 %118, i32 addrspace(1)* %120, align 4, !tbaa !17\l  %121 = or i32 %89, 4\l  %122 = add nsw i32 %88, 4\l  %123 = add nsw i32 %121, %62\l  %124 = add nsw i32 %122, %1\l  %125 = srem i32 %124, %1\l  %126 = add nsw i32 %65, %125\l  %127 = sext i32 %123 to i64\l  %128 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %127\l  store i32 %126, i32 addrspace(1)* %128, align 4, !tbaa !17\l  %129 = or i32 %89, 5\l  %130 = add nsw i32 %88, 5\l  %131 = add nsw i32 %129, %62\l  %132 = add nsw i32 %130, %1\l  %133 = srem i32 %132, %1\l  %134 = add nsw i32 %65, %133\l  %135 = sext i32 %131 to i64\l  %136 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %135\l  store i32 %134, i32 addrspace(1)* %136, align 4, !tbaa !17\l  %137 = or i32 %89, 6\l  %138 = add nsw i32 %88, 6\l  %139 = add nsw i32 %137, %62\l  %140 = add nsw i32 %138, %1\l  %141 = srem i32 %140, %1\l  %142 = add nsw i32 %65, %141\l  %143 = sext i32 %139 to i64\l  %144 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %143\l  store i32 %142, i32 addrspace(1)* %144, align 4, !tbaa !17\l  %145 = or i32 %89, 7\l  %146 = add nsw i32 %88, 7\l  %147 = add nsw i32 %145, %62\l  %148 = add nsw i32 %146, %1\l  %149 = srem i32 %148, %1\l  %150 = add nsw i32 %65, %149\l  %151 = sext i32 %147 to i64\l  %152 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %151\l  store i32 %150, i32 addrspace(1)* %152, align 4, !tbaa !17\l  %153 = add nuw i32 %89, 8\l  %154 = add nsw i32 %88, 8\l  %155 = add i32 %90, 8\l  %156 = icmp eq i32 %155, %29\l  br i1 %156, label %66, label %87, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x6347780:s0 -> Node0x6347730;
	Node0x6347780:s1 -> Node0x6347780;
	Node0x6347f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%157:\l157:                                              \l  %158 = add nuw nsw i32 %45, 1\l  %159 = icmp eq i32 %45, %20\l  br i1 %159, label %41, label %44, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x6347f20:s0 -> Node0x6347420;
	Node0x6347f20:s1 -> Node0x6346770;
}
