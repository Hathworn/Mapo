digraph "CFG for '_Z17matrix_matrix_newPiS_S_iii' function" {
	label="CFG for '_Z17matrix_matrix_newPiS_S_iii' function";

	Node0x4d31bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = mul i32 %8, %13\l  %18 = add i32 %17, %7\l  %19 = mul nsw i32 %4, %3\l  %20 = icmp slt i32 %18, %19\l  br i1 %20, label %21, label %172\l|{<s0>T|<s1>F}}"];
	Node0x4d31bd0:s0 -> Node0x4d33e80;
	Node0x4d31bd0:s1 -> Node0x4d33f10;
	Node0x4d33e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%21:\l21:                                               \l  %22 = icmp sgt i32 %5, 0\l  %23 = udiv i32 %16, %13\l  %24 = mul i32 %23, %13\l  %25 = icmp ugt i32 %16, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %13\l  %29 = and i32 %5, 7\l  %30 = icmp ult i32 %5, 8\l  %31 = and i32 %5, -8\l  %32 = icmp eq i32 %29, 0\l  br label %33\l}"];
	Node0x4d33e80 -> Node0x4d33bc0;
	Node0x4d33bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%33:\l33:                                               \l  %34 = phi i32 [ %18, %21 ], [ %68, %64 ]\l  %35 = freeze i32 %34\l  %36 = freeze i32 %4\l  %37 = sdiv i32 %35, %36\l  %38 = mul i32 %37, %36\l  %39 = sub i32 %35, %38\l  br i1 %22, label %40, label %64\l|{<s0>T|<s1>F}}"];
	Node0x4d33bc0:s0 -> Node0x4d34cd0;
	Node0x4d33bc0:s1 -> Node0x4d34900;
	Node0x4d34cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%40:\l40:                                               \l  %41 = mul nsw i32 %37, %5\l  br i1 %30, label %42, label %70\l|{<s0>T|<s1>F}}"];
	Node0x4d34cd0:s0 -> Node0x4d34ea0;
	Node0x4d34cd0:s1 -> Node0x4d34ef0;
	Node0x4d34ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%42:\l42:                                               \l  %43 = phi i32 [ undef, %40 ], [ %168, %70 ]\l  %44 = phi i32 [ 0, %40 ], [ %169, %70 ]\l  %45 = phi i32 [ 0, %40 ], [ %168, %70 ]\l  br i1 %32, label %64, label %46\l|{<s0>T|<s1>F}}"];
	Node0x4d34ea0:s0 -> Node0x4d34900;
	Node0x4d34ea0:s1 -> Node0x4d35700;
	Node0x4d35700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i32 [ %61, %46 ], [ %44, %42 ]\l  %48 = phi i32 [ %60, %46 ], [ %45, %42 ]\l  %49 = phi i32 [ %62, %46 ], [ 0, %42 ]\l  %50 = add nsw i32 %47, %41\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !16\l  %54 = mul nsw i32 %47, %4\l  %55 = add nsw i32 %54, %39\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %56\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !16\l  %59 = mul nsw i32 %58, %53\l  %60 = add nsw i32 %59, %48\l  %61 = add nuw nsw i32 %47, 1\l  %62 = add i32 %49, 1\l  %63 = icmp eq i32 %62, %29\l  br i1 %63, label %64, label %46, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4d35700:s0 -> Node0x4d34900;
	Node0x4d35700:s1 -> Node0x4d35700;
	Node0x4d34900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%64:\l64:                                               \l  %65 = phi i32 [ 0, %33 ], [ %43, %42 ], [ %60, %46 ]\l  %66 = sext i32 %34 to i64\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %66\l  store i32 %65, i32 addrspace(1)* %67, align 4, !tbaa !16\l  %68 = add i32 %28, %34\l  %69 = icmp slt i32 %68, %19\l  br i1 %69, label %33, label %172, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4d34900:s0 -> Node0x4d33bc0;
	Node0x4d34900:s1 -> Node0x4d33f10;
	Node0x4d34ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%70:\l70:                                               \l  %71 = phi i32 [ %169, %70 ], [ 0, %40 ]\l  %72 = phi i32 [ %168, %70 ], [ 0, %40 ]\l  %73 = phi i32 [ %170, %70 ], [ 0, %40 ]\l  %74 = add nsw i32 %71, %41\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %75\l  %77 = load i32, i32 addrspace(1)* %76, align 4, !tbaa !16\l  %78 = mul nsw i32 %71, %4\l  %79 = add nsw i32 %78, %39\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %80\l  %82 = load i32, i32 addrspace(1)* %81, align 4, !tbaa !16\l  %83 = mul nsw i32 %82, %77\l  %84 = add nsw i32 %83, %72\l  %85 = or i32 %71, 1\l  %86 = add nsw i32 %85, %41\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %87\l  %89 = load i32, i32 addrspace(1)* %88, align 4, !tbaa !16\l  %90 = mul nsw i32 %85, %4\l  %91 = add nsw i32 %90, %39\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %92\l  %94 = load i32, i32 addrspace(1)* %93, align 4, !tbaa !16\l  %95 = mul nsw i32 %94, %89\l  %96 = add nsw i32 %95, %84\l  %97 = or i32 %71, 2\l  %98 = add nsw i32 %97, %41\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %99\l  %101 = load i32, i32 addrspace(1)* %100, align 4, !tbaa !16\l  %102 = mul nsw i32 %97, %4\l  %103 = add nsw i32 %102, %39\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %104\l  %106 = load i32, i32 addrspace(1)* %105, align 4, !tbaa !16\l  %107 = mul nsw i32 %106, %101\l  %108 = add nsw i32 %107, %96\l  %109 = or i32 %71, 3\l  %110 = add nsw i32 %109, %41\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %111\l  %113 = load i32, i32 addrspace(1)* %112, align 4, !tbaa !16\l  %114 = mul nsw i32 %109, %4\l  %115 = add nsw i32 %114, %39\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %116\l  %118 = load i32, i32 addrspace(1)* %117, align 4, !tbaa !16\l  %119 = mul nsw i32 %118, %113\l  %120 = add nsw i32 %119, %108\l  %121 = or i32 %71, 4\l  %122 = add nsw i32 %121, %41\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %123\l  %125 = load i32, i32 addrspace(1)* %124, align 4, !tbaa !16\l  %126 = mul nsw i32 %121, %4\l  %127 = add nsw i32 %126, %39\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %128\l  %130 = load i32, i32 addrspace(1)* %129, align 4, !tbaa !16\l  %131 = mul nsw i32 %130, %125\l  %132 = add nsw i32 %131, %120\l  %133 = or i32 %71, 5\l  %134 = add nsw i32 %133, %41\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %135\l  %137 = load i32, i32 addrspace(1)* %136, align 4, !tbaa !16\l  %138 = mul nsw i32 %133, %4\l  %139 = add nsw i32 %138, %39\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %140\l  %142 = load i32, i32 addrspace(1)* %141, align 4, !tbaa !16\l  %143 = mul nsw i32 %142, %137\l  %144 = add nsw i32 %143, %132\l  %145 = or i32 %71, 6\l  %146 = add nsw i32 %145, %41\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %147\l  %149 = load i32, i32 addrspace(1)* %148, align 4, !tbaa !16\l  %150 = mul nsw i32 %145, %4\l  %151 = add nsw i32 %150, %39\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %152\l  %154 = load i32, i32 addrspace(1)* %153, align 4, !tbaa !16\l  %155 = mul nsw i32 %154, %149\l  %156 = add nsw i32 %155, %144\l  %157 = or i32 %71, 7\l  %158 = add nsw i32 %157, %41\l  %159 = sext i32 %158 to i64\l  %160 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %159\l  %161 = load i32, i32 addrspace(1)* %160, align 4, !tbaa !16\l  %162 = mul nsw i32 %157, %4\l  %163 = add nsw i32 %162, %39\l  %164 = sext i32 %163 to i64\l  %165 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %164\l  %166 = load i32, i32 addrspace(1)* %165, align 4, !tbaa !16\l  %167 = mul nsw i32 %166, %161\l  %168 = add nsw i32 %167, %156\l  %169 = add nuw nsw i32 %71, 8\l  %170 = add i32 %73, 8\l  %171 = icmp eq i32 %170, %31\l  br i1 %171, label %42, label %70, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4d34ef0:s0 -> Node0x4d34ea0;
	Node0x4d34ef0:s1 -> Node0x4d34ef0;
	Node0x4d33f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%172:\l172:                                              \l  ret void\l}"];
}
