digraph "CFG for '_Z21matrix_matrix_mul_oldPiS_S_iii' function" {
	label="CFG for '_Z21matrix_matrix_mul_oldPiS_S_iii' function";

	Node0x5eced10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = mul i32 %8, %13\l  %18 = add i32 %17, %7\l  %19 = icmp slt i32 %18, %3\l  br i1 %19, label %20, label %175\l|{<s0>T|<s1>F}}"];
	Node0x5eced10:s0 -> Node0x5ed0f70;
	Node0x5eced10:s1 -> Node0x5ed1000;
	Node0x5ed0f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%20:\l20:                                               \l  %21 = icmp sgt i32 %4, 0\l  %22 = icmp sgt i32 %5, 0\l  %23 = udiv i32 %16, %13\l  %24 = mul i32 %23, %13\l  %25 = icmp ugt i32 %16, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %13\l  %29 = and i32 %5, 7\l  %30 = icmp ult i32 %5, 8\l  %31 = and i32 %5, -8\l  %32 = icmp eq i32 %29, 0\l  br label %33\l}"];
	Node0x5ed0f70 -> Node0x5ed0d40;
	Node0x5ed0d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%33:\l33:                                               \l  %34 = phi i32 [ %18, %20 ], [ %42, %41 ]\l  br i1 %21, label %35, label %41\l|{<s0>T|<s1>F}}"];
	Node0x5ed0d40:s0 -> Node0x5ed1bc0;
	Node0x5ed0d40:s1 -> Node0x5ed1a80;
	Node0x5ed1bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%35:\l35:                                               \l  %36 = mul nsw i32 %34, %5\l  %37 = mul nsw i32 %34, %4\l  br label %38\l}"];
	Node0x5ed1bc0 -> Node0x5ed1e20;
	Node0x5ed1e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%38:\l38:                                               \l  %39 = phi i32 [ 0, %35 ], [ %71, %66 ]\l  br i1 %22, label %40, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5ed1e20:s0 -> Node0x5ed2050;
	Node0x5ed1e20:s1 -> Node0x5ed1f10;
	Node0x5ed2050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%40:\l40:                                               \l  br i1 %30, label %44, label %73\l|{<s0>T|<s1>F}}"];
	Node0x5ed2050:s0 -> Node0x5ed2190;
	Node0x5ed2050:s1 -> Node0x5ed21e0;
	Node0x5ed1a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%41:\l41:                                               \l  %42 = add i32 %28, %34\l  %43 = icmp slt i32 %42, %3\l  br i1 %43, label %33, label %175, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5ed1a80:s0 -> Node0x5ed0d40;
	Node0x5ed1a80:s1 -> Node0x5ed1000;
	Node0x5ed2190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%44:\l44:                                               \l  %45 = phi i32 [ undef, %40 ], [ %171, %73 ]\l  %46 = phi i32 [ 0, %40 ], [ %172, %73 ]\l  %47 = phi i32 [ 0, %40 ], [ %171, %73 ]\l  br i1 %32, label %66, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5ed2190:s0 -> Node0x5ed1f10;
	Node0x5ed2190:s1 -> Node0x5ed2c40;
	Node0x5ed2c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i32 [ %63, %48 ], [ %46, %44 ]\l  %50 = phi i32 [ %62, %48 ], [ %47, %44 ]\l  %51 = phi i32 [ %64, %48 ], [ 0, %44 ]\l  %52 = add nsw i32 %49, %36\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !18\l  %56 = mul nsw i32 %49, %4\l  %57 = add nsw i32 %56, %39\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %58\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !18\l  %61 = mul nsw i32 %60, %55\l  %62 = add nsw i32 %61, %50\l  %63 = add nuw nsw i32 %49, 1\l  %64 = add i32 %51, 1\l  %65 = icmp eq i32 %64, %29\l  br i1 %65, label %66, label %48, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5ed2c40:s0 -> Node0x5ed1f10;
	Node0x5ed2c40:s1 -> Node0x5ed2c40;
	Node0x5ed1f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%66:\l66:                                               \l  %67 = phi i32 [ 0, %38 ], [ %45, %44 ], [ %62, %48 ]\l  %68 = add nsw i32 %39, %37\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %69\l  store i32 %67, i32 addrspace(1)* %70, align 4, !tbaa !18\l  %71 = add nuw nsw i32 %39, 1\l  %72 = icmp eq i32 %71, %4\l  br i1 %72, label %41, label %38, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5ed1f10:s0 -> Node0x5ed1a80;
	Node0x5ed1f10:s1 -> Node0x5ed1e20;
	Node0x5ed21e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%73:\l73:                                               \l  %74 = phi i32 [ %172, %73 ], [ 0, %40 ]\l  %75 = phi i32 [ %171, %73 ], [ 0, %40 ]\l  %76 = phi i32 [ %173, %73 ], [ 0, %40 ]\l  %77 = add nsw i32 %74, %36\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %78\l  %80 = load i32, i32 addrspace(1)* %79, align 4, !tbaa !18\l  %81 = mul nsw i32 %74, %4\l  %82 = add nsw i32 %81, %39\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !18\l  %86 = mul nsw i32 %85, %80\l  %87 = add nsw i32 %86, %75\l  %88 = or i32 %74, 1\l  %89 = add nsw i32 %88, %36\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %90\l  %92 = load i32, i32 addrspace(1)* %91, align 4, !tbaa !18\l  %93 = mul nsw i32 %88, %4\l  %94 = add nsw i32 %93, %39\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %95\l  %97 = load i32, i32 addrspace(1)* %96, align 4, !tbaa !18\l  %98 = mul nsw i32 %97, %92\l  %99 = add nsw i32 %98, %87\l  %100 = or i32 %74, 2\l  %101 = add nsw i32 %100, %36\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %102\l  %104 = load i32, i32 addrspace(1)* %103, align 4, !tbaa !18\l  %105 = mul nsw i32 %100, %4\l  %106 = add nsw i32 %105, %39\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %107\l  %109 = load i32, i32 addrspace(1)* %108, align 4, !tbaa !18\l  %110 = mul nsw i32 %109, %104\l  %111 = add nsw i32 %110, %99\l  %112 = or i32 %74, 3\l  %113 = add nsw i32 %112, %36\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %114\l  %116 = load i32, i32 addrspace(1)* %115, align 4, !tbaa !18\l  %117 = mul nsw i32 %112, %4\l  %118 = add nsw i32 %117, %39\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %119\l  %121 = load i32, i32 addrspace(1)* %120, align 4, !tbaa !18\l  %122 = mul nsw i32 %121, %116\l  %123 = add nsw i32 %122, %111\l  %124 = or i32 %74, 4\l  %125 = add nsw i32 %124, %36\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %126\l  %128 = load i32, i32 addrspace(1)* %127, align 4, !tbaa !18\l  %129 = mul nsw i32 %124, %4\l  %130 = add nsw i32 %129, %39\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %131\l  %133 = load i32, i32 addrspace(1)* %132, align 4, !tbaa !18\l  %134 = mul nsw i32 %133, %128\l  %135 = add nsw i32 %134, %123\l  %136 = or i32 %74, 5\l  %137 = add nsw i32 %136, %36\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %138\l  %140 = load i32, i32 addrspace(1)* %139, align 4, !tbaa !18\l  %141 = mul nsw i32 %136, %4\l  %142 = add nsw i32 %141, %39\l  %143 = sext i32 %142 to i64\l  %144 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %143\l  %145 = load i32, i32 addrspace(1)* %144, align 4, !tbaa !18\l  %146 = mul nsw i32 %145, %140\l  %147 = add nsw i32 %146, %135\l  %148 = or i32 %74, 6\l  %149 = add nsw i32 %148, %36\l  %150 = sext i32 %149 to i64\l  %151 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %150\l  %152 = load i32, i32 addrspace(1)* %151, align 4, !tbaa !18\l  %153 = mul nsw i32 %148, %4\l  %154 = add nsw i32 %153, %39\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %155\l  %157 = load i32, i32 addrspace(1)* %156, align 4, !tbaa !18\l  %158 = mul nsw i32 %157, %152\l  %159 = add nsw i32 %158, %147\l  %160 = or i32 %74, 7\l  %161 = add nsw i32 %160, %36\l  %162 = sext i32 %161 to i64\l  %163 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %162\l  %164 = load i32, i32 addrspace(1)* %163, align 4, !tbaa !18\l  %165 = mul nsw i32 %160, %4\l  %166 = add nsw i32 %165, %39\l  %167 = sext i32 %166 to i64\l  %168 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %167\l  %169 = load i32, i32 addrspace(1)* %168, align 4, !tbaa !18\l  %170 = mul nsw i32 %169, %164\l  %171 = add nsw i32 %170, %159\l  %172 = add nuw nsw i32 %74, 8\l  %173 = add i32 %76, 8\l  %174 = icmp eq i32 %173, %31\l  br i1 %174, label %44, label %73, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x5ed21e0:s0 -> Node0x5ed2190;
	Node0x5ed21e0:s1 -> Node0x5ed21e0;
	Node0x5ed1000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%175:\l175:                                              \l  ret void\l}"];
}
