digraph "CFG for '_Z14kernel_loopingPfj' function" {
	label="CFG for '_Z14kernel_loopingPfj' function";

	Node0x59f4170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !7\l  %13 = mul i32 %4, %9\l  %14 = add i32 %13, %3\l  %15 = zext i32 %14 to i64\l  %16 = zext i32 %1 to i64\l  %17 = icmp ult i32 %14, %1\l  br i1 %17, label %18, label %170\l|{<s0>T|<s1>F}}"];
	Node0x59f4170:s0 -> Node0x59f50e0;
	Node0x59f4170:s1 -> Node0x59f6550;
	Node0x59f50e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%18:\l18:                                               \l  %19 = udiv i32 %12, %9\l  %20 = mul i32 %19, %9\l  %21 = icmp ugt i32 %12, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %9\l  %25 = zext i32 %24 to i64\l  br label %171\l}"];
	Node0x59f50e0 -> Node0x59f6a40;
	Node0x59f6b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%26:\l26:                                               \l  br i1 %17, label %27, label %170\l|{<s0>T|<s1>F}}"];
	Node0x59f6b00:s0 -> Node0x59f6b90;
	Node0x59f6b00:s1 -> Node0x59f6550;
	Node0x59f6b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%27:\l27:                                               \l  %28 = udiv i32 %12, %9\l  %29 = mul i32 %28, %9\l  %30 = icmp ugt i32 %12, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = mul i32 %32, %9\l  %34 = zext i32 %33 to i64\l  br label %35\l}"];
	Node0x59f6b90 -> Node0x59f7150;
	Node0x59f7150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%35:\l35:                                               \l  %36 = phi i64 [ %15, %27 ], [ %40, %35 ]\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !16\l  %39 = fadd contract float %38, 1.000000e+00\l  store float %39, float addrspace(1)* %37, align 4, !tbaa !16\l  %40 = add i64 %36, %34\l  %41 = icmp ult i64 %40, %16\l  br i1 %41, label %35, label %42, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x59f7150:s0 -> Node0x59f7150;
	Node0x59f7150:s1 -> Node0x59f87e0;
	Node0x59f87e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%42:\l42:                                               \l  br i1 %17, label %43, label %170\l|{<s0>T|<s1>F}}"];
	Node0x59f87e0:s0 -> Node0x59f8a20;
	Node0x59f87e0:s1 -> Node0x59f6550;
	Node0x59f8a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%43:\l43:                                               \l  %44 = udiv i32 %12, %9\l  %45 = mul i32 %44, %9\l  %46 = icmp ugt i32 %12, %45\l  %47 = zext i1 %46 to i32\l  %48 = add i32 %44, %47\l  %49 = mul i32 %48, %9\l  %50 = zext i32 %49 to i64\l  br label %51\l}"];
	Node0x59f8a20 -> Node0x59f8ed0;
	Node0x59f8ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%51:\l51:                                               \l  %52 = phi i64 [ %15, %43 ], [ %56, %51 ]\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !16\l  %55 = fadd contract float %54, 1.000000e+00\l  store float %55, float addrspace(1)* %53, align 4, !tbaa !16\l  %56 = add i64 %52, %50\l  %57 = icmp ult i64 %56, %16\l  br i1 %57, label %51, label %58, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x59f8ed0:s0 -> Node0x59f8ed0;
	Node0x59f8ed0:s1 -> Node0x59f9390;
	Node0x59f9390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%58:\l58:                                               \l  br i1 %17, label %59, label %170\l|{<s0>T|<s1>F}}"];
	Node0x59f9390:s0 -> Node0x59f9aa0;
	Node0x59f9390:s1 -> Node0x59f6550;
	Node0x59f9aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%59:\l59:                                               \l  %60 = udiv i32 %12, %9\l  %61 = mul i32 %60, %9\l  %62 = icmp ugt i32 %12, %61\l  %63 = zext i1 %62 to i32\l  %64 = add i32 %60, %63\l  %65 = mul i32 %64, %9\l  %66 = zext i32 %65 to i64\l  br label %67\l}"];
	Node0x59f9aa0 -> Node0x59f7040;
	Node0x59f7040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%67:\l67:                                               \l  %68 = phi i64 [ %15, %59 ], [ %72, %67 ]\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !16\l  %71 = fadd contract float %70, 1.000000e+00\l  store float %71, float addrspace(1)* %69, align 4, !tbaa !16\l  %72 = add i64 %68, %66\l  %73 = icmp ult i64 %72, %16\l  br i1 %73, label %67, label %74, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x59f7040:s0 -> Node0x59f7040;
	Node0x59f7040:s1 -> Node0x59fa610;
	Node0x59fa610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%74:\l74:                                               \l  br i1 %17, label %75, label %170\l|{<s0>T|<s1>F}}"];
	Node0x59fa610:s0 -> Node0x59fa710;
	Node0x59fa610:s1 -> Node0x59f6550;
	Node0x59fa710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%75:\l75:                                               \l  %76 = udiv i32 %12, %9\l  %77 = mul i32 %76, %9\l  %78 = icmp ugt i32 %12, %77\l  %79 = zext i1 %78 to i32\l  %80 = add i32 %76, %79\l  %81 = mul i32 %80, %9\l  %82 = zext i32 %81 to i64\l  br label %83\l}"];
	Node0x59fa710 -> Node0x59fabc0;
	Node0x59fabc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%83:\l83:                                               \l  %84 = phi i64 [ %15, %75 ], [ %88, %83 ]\l  %85 = getelementptr inbounds float, float addrspace(1)* %0, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !16\l  %87 = fadd contract float %86, 1.000000e+00\l  store float %87, float addrspace(1)* %85, align 4, !tbaa !16\l  %88 = add i64 %84, %82\l  %89 = icmp ult i64 %88, %16\l  br i1 %89, label %83, label %90, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x59fabc0:s0 -> Node0x59fabc0;
	Node0x59fabc0:s1 -> Node0x59fb080;
	Node0x59fb080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%90:\l90:                                               \l  br i1 %17, label %91, label %170\l|{<s0>T|<s1>F}}"];
	Node0x59fb080:s0 -> Node0x59fb180;
	Node0x59fb080:s1 -> Node0x59f6550;
	Node0x59fb180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%91:\l91:                                               \l  %92 = udiv i32 %12, %9\l  %93 = mul i32 %92, %9\l  %94 = icmp ugt i32 %12, %93\l  %95 = zext i1 %94 to i32\l  %96 = add i32 %92, %95\l  %97 = mul i32 %96, %9\l  %98 = zext i32 %97 to i64\l  br label %99\l}"];
	Node0x59fb180 -> Node0x59fb630;
	Node0x59fb630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%99:\l99:                                               \l  %100 = phi i64 [ %15, %91 ], [ %104, %99 ]\l  %101 = getelementptr inbounds float, float addrspace(1)* %0, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !16\l  %103 = fadd contract float %102, 1.000000e+00\l  store float %103, float addrspace(1)* %101, align 4, !tbaa !16\l  %104 = add i64 %100, %98\l  %105 = icmp ult i64 %104, %16\l  br i1 %105, label %99, label %106, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x59fb630:s0 -> Node0x59fb630;
	Node0x59fb630:s1 -> Node0x59fbaf0;
	Node0x59fbaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%106:\l106:                                              \l  br i1 %17, label %107, label %170\l|{<s0>T|<s1>F}}"];
	Node0x59fbaf0:s0 -> Node0x59fbbf0;
	Node0x59fbaf0:s1 -> Node0x59f6550;
	Node0x59fbbf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%107:\l107:                                              \l  %108 = udiv i32 %12, %9\l  %109 = mul i32 %108, %9\l  %110 = icmp ugt i32 %12, %109\l  %111 = zext i1 %110 to i32\l  %112 = add i32 %108, %111\l  %113 = mul i32 %112, %9\l  %114 = zext i32 %113 to i64\l  br label %115\l}"];
	Node0x59fbbf0 -> Node0x59fc0a0;
	Node0x59fc0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%115:\l115:                                              \l  %116 = phi i64 [ %15, %107 ], [ %120, %115 ]\l  %117 = getelementptr inbounds float, float addrspace(1)* %0, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !16\l  %119 = fadd contract float %118, 1.000000e+00\l  store float %119, float addrspace(1)* %117, align 4, !tbaa !16\l  %120 = add i64 %116, %114\l  %121 = icmp ult i64 %120, %16\l  br i1 %121, label %115, label %122, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x59fc0a0:s0 -> Node0x59fc0a0;
	Node0x59fc0a0:s1 -> Node0x59fc560;
	Node0x59fc560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%122:\l122:                                              \l  br i1 %17, label %123, label %170\l|{<s0>T|<s1>F}}"];
	Node0x59fc560:s0 -> Node0x59fc660;
	Node0x59fc560:s1 -> Node0x59f6550;
	Node0x59fc660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%123:\l123:                                              \l  %124 = udiv i32 %12, %9\l  %125 = mul i32 %124, %9\l  %126 = icmp ugt i32 %12, %125\l  %127 = zext i1 %126 to i32\l  %128 = add i32 %124, %127\l  %129 = mul i32 %128, %9\l  %130 = zext i32 %129 to i64\l  br label %131\l}"];
	Node0x59fc660 -> Node0x59f9f50;
	Node0x59f9f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%131:\l131:                                              \l  %132 = phi i64 [ %15, %123 ], [ %136, %131 ]\l  %133 = getelementptr inbounds float, float addrspace(1)* %0, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !16\l  %135 = fadd contract float %134, 1.000000e+00\l  store float %135, float addrspace(1)* %133, align 4, !tbaa !16\l  %136 = add i64 %132, %130\l  %137 = icmp ult i64 %136, %16\l  br i1 %137, label %131, label %138, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x59f9f50:s0 -> Node0x59f9f50;
	Node0x59f9f50:s1 -> Node0x59fd3d0;
	Node0x59fd3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%138:\l138:                                              \l  br i1 %17, label %139, label %170\l|{<s0>T|<s1>F}}"];
	Node0x59fd3d0:s0 -> Node0x59fd4d0;
	Node0x59fd3d0:s1 -> Node0x59f6550;
	Node0x59fd4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%139:\l139:                                              \l  %140 = udiv i32 %12, %9\l  %141 = mul i32 %140, %9\l  %142 = icmp ugt i32 %12, %141\l  %143 = zext i1 %142 to i32\l  %144 = add i32 %140, %143\l  %145 = mul i32 %144, %9\l  %146 = zext i32 %145 to i64\l  br label %147\l}"];
	Node0x59fd4d0 -> Node0x59fd980;
	Node0x59fd980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%147:\l147:                                              \l  %148 = phi i64 [ %15, %139 ], [ %152, %147 ]\l  %149 = getelementptr inbounds float, float addrspace(1)* %0, i64 %148\l  %150 = load float, float addrspace(1)* %149, align 4, !tbaa !16\l  %151 = fadd contract float %150, 1.000000e+00\l  store float %151, float addrspace(1)* %149, align 4, !tbaa !16\l  %152 = add i64 %148, %146\l  %153 = icmp ult i64 %152, %16\l  br i1 %153, label %147, label %154, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x59fd980:s0 -> Node0x59fd980;
	Node0x59fd980:s1 -> Node0x59fde40;
	Node0x59fde40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%154:\l154:                                              \l  br i1 %17, label %155, label %170\l|{<s0>T|<s1>F}}"];
	Node0x59fde40:s0 -> Node0x59fdf40;
	Node0x59fde40:s1 -> Node0x59f6550;
	Node0x59fdf40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%155:\l155:                                              \l  %156 = udiv i32 %12, %9\l  %157 = mul i32 %156, %9\l  %158 = icmp ugt i32 %12, %157\l  %159 = zext i1 %158 to i32\l  %160 = add i32 %156, %159\l  %161 = mul i32 %160, %9\l  %162 = zext i32 %161 to i64\l  br label %163\l}"];
	Node0x59fdf40 -> Node0x59fe3f0;
	Node0x59fe3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%163:\l163:                                              \l  %164 = phi i64 [ %15, %155 ], [ %168, %163 ]\l  %165 = getelementptr inbounds float, float addrspace(1)* %0, i64 %164\l  %166 = load float, float addrspace(1)* %165, align 4, !tbaa !16\l  %167 = fadd contract float %166, 1.000000e+00\l  store float %167, float addrspace(1)* %165, align 4, !tbaa !16\l  %168 = add i64 %164, %162\l  %169 = icmp ult i64 %168, %16\l  br i1 %169, label %163, label %170, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x59fe3f0:s0 -> Node0x59fe3f0;
	Node0x59fe3f0:s1 -> Node0x59f6550;
	Node0x59f6550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%170:\l170:                                              \l  ret void\l}"];
	Node0x59f6a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%171:\l171:                                              \l  %172 = phi i64 [ %15, %18 ], [ %176, %171 ]\l  %173 = getelementptr inbounds float, float addrspace(1)* %0, i64 %172\l  %174 = load float, float addrspace(1)* %173, align 4, !tbaa !16\l  %175 = fadd contract float %174, 1.000000e+00\l  store float %175, float addrspace(1)* %173, align 4, !tbaa !16\l  %176 = add i64 %172, %25\l  %177 = icmp ult i64 %176, %16\l  br i1 %177, label %171, label %26, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x59f6a40:s0 -> Node0x59f6a40;
	Node0x59f6a40:s1 -> Node0x59f6b00;
}
