digraph "CFG for '_Z26dev_get_potential_at_pointfPfS_S_S_S_S_S_S_iS_S_S_S_S_S_S_i' function" {
	label="CFG for '_Z26dev_get_potential_at_pointfPfS_S_S_S_S_S_S_iS_S_S_S_S_S_S_i' function";

	Node0x5406df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%18:\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %22 = getelementptr i8, i8 addrspace(4)* %21, i64 4\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 4, !range !5, !invariant.load !6\l  %25 = zext i16 %24 to i32\l  %26 = getelementptr inbounds i8, i8 addrspace(4)* %21, i64 12\l  %27 = bitcast i8 addrspace(4)* %26 to i32 addrspace(4)*\l  %28 = load i32, i32 addrspace(4)* %27, align 4, !tbaa !7\l  %29 = mul i32 %20, %25\l  %30 = add i32 %29, %19\l  %31 = icmp slt i32 %30, %9\l  br i1 %31, label %32, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5406df0:s0 -> Node0x5409eb0;
	Node0x5406df0:s1 -> Node0x5409f40;
	Node0x5409eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%32:\l32:                                               \l  %33 = icmp sgt i32 %17, 0\l  %34 = udiv i32 %28, %25\l  %35 = mul i32 %34, %25\l  %36 = icmp ugt i32 %28, %35\l  %37 = zext i1 %36 to i32\l  %38 = add i32 %34, %37\l  %39 = mul i32 %38, %25\l  br label %41\l}"];
	Node0x5409eb0 -> Node0x540a560;
	Node0x5409f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%40:\l40:                                               \l  ret void\l}"];
	Node0x540a560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = phi i32 [ %30, %32 ], [ %57, %56 ]\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !16\l  %46 = fmul contract float %45, %45\l  %47 = fadd contract float %46, %0\l  %48 = getelementptr inbounds float, float addrspace(1)* %8, i64 %43\l  store float 0.000000e+00, float addrspace(1)* %48, align 4, !tbaa !16\l  br i1 %33, label %49, label %56\l|{<s0>T|<s1>F}}"];
	Node0x540a560:s0 -> Node0x540bd40;
	Node0x540a560:s1 -> Node0x540a6a0;
	Node0x540bd40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%49:\l49:                                               \l  %50 = getelementptr inbounds float, float addrspace(1)* %2, i64 %43\l  %51 = getelementptr inbounds float, float addrspace(1)* %5, i64 %43\l  %52 = getelementptr inbounds float, float addrspace(1)* %3, i64 %43\l  %53 = getelementptr inbounds float, float addrspace(1)* %6, i64 %43\l  %54 = getelementptr inbounds float, float addrspace(1)* %4, i64 %43\l  %55 = getelementptr inbounds float, float addrspace(1)* %7, i64 %43\l  br label %59\l}"];
	Node0x540bd40 -> Node0x540c240;
	Node0x540a6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%56:\l56:                                               \l  %57 = add i32 %39, %42\l  %58 = icmp slt i32 %57, %9\l  br i1 %58, label %41, label %40, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x540a6a0:s0 -> Node0x540a560;
	Node0x540a6a0:s1 -> Node0x5409f40;
	Node0x540c240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi float [ 0.000000e+00, %49 ], [ %124, %123 ]\l  %61 = phi i32 [ 0, %49 ], [ %125, %123 ]\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %11, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !16\l  %65 = load float, float addrspace(1)* %50, align 4, !tbaa !16\l  %66 = fsub contract float %64, %65\l  %67 = getelementptr inbounds float, float addrspace(1)* %14, i64 %62\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !16\l  %69 = load float, float addrspace(1)* %51, align 4, !tbaa !16\l  %70 = fsub contract float %68, %69\l  %71 = fadd contract float %66, %70\l  %72 = getelementptr inbounds float, float addrspace(1)* %12, i64 %62\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !16\l  %74 = load float, float addrspace(1)* %52, align 4, !tbaa !16\l  %75 = fsub contract float %73, %74\l  %76 = getelementptr inbounds float, float addrspace(1)* %15, i64 %62\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !16\l  %78 = load float, float addrspace(1)* %53, align 4, !tbaa !16\l  %79 = fsub contract float %77, %78\l  %80 = fadd contract float %75, %79\l  %81 = getelementptr inbounds float, float addrspace(1)* %13, i64 %62\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !16\l  %83 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %84 = fsub contract float %82, %83\l  %85 = getelementptr inbounds float, float addrspace(1)* %16, i64 %62\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !16\l  %87 = load float, float addrspace(1)* %55, align 4, !tbaa !16\l  %88 = fsub contract float %86, %87\l  %89 = fadd contract float %84, %88\l  %90 = fmul contract float %71, %71\l  %91 = fmul contract float %80, %80\l  %92 = fadd contract float %90, %91\l  %93 = fmul contract float %89, %89\l  %94 = fadd contract float %92, %93\l  %95 = fcmp contract ogt float %94, 0.000000e+00\l  br i1 %95, label %96, label %123\l|{<s0>T|<s1>F}}"];
	Node0x540c240:s0 -> Node0x540dc10;
	Node0x540c240:s1 -> Node0x540c590;
	Node0x540dc10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%96:\l96:                                               \l  %97 = fadd contract float %47, %94\l  %98 = fcmp olt float %97, 0x39F0000000000000\l  %99 = select i1 %98, float 0x41F0000000000000, float 1.000000e+00\l  %100 = fmul float %97, %99\l  %101 = tail call float @llvm.sqrt.f32(float %100)\l  %102 = bitcast float %101 to i32\l  %103 = add nsw i32 %102, -1\l  %104 = bitcast i32 %103 to float\l  %105 = add nsw i32 %102, 1\l  %106 = bitcast i32 %105 to float\l  %107 = tail call i1 @llvm.amdgcn.class.f32(float %100, i32 608)\l  %108 = select i1 %98, float 0x3EF0000000000000, float 1.000000e+00\l  %109 = fneg float %106\l  %110 = tail call float @llvm.fma.f32(float %109, float %101, float %100)\l  %111 = fcmp ogt float %110, 0.000000e+00\l  %112 = fneg float %104\l  %113 = tail call float @llvm.fma.f32(float %112, float %101, float %100)\l  %114 = fcmp ole float %113, 0.000000e+00\l  %115 = select i1 %114, float %104, float %101\l  %116 = select i1 %111, float %106, float %115\l  %117 = fmul float %108, %116\l  %118 = select i1 %107, float %100, float %117\l  %119 = getelementptr inbounds float, float addrspace(1)* %10, i64 %62\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !16\l  %121 = fdiv contract float %120, %118\l  %122 = fsub contract float %60, %121\l  store float %122, float addrspace(1)* %48, align 4, !tbaa !16\l  br label %123\l}"];
	Node0x540dc10 -> Node0x540c590;
	Node0x540c590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%123:\l123:                                              \l  %124 = phi float [ %60, %59 ], [ %122, %96 ]\l  %125 = add nuw nsw i32 %61, 1\l  %126 = icmp eq i32 %125, %17\l  br i1 %126, label %56, label %59, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x540c590:s0 -> Node0x540a6a0;
	Node0x540c590:s1 -> Node0x540c240;
}
