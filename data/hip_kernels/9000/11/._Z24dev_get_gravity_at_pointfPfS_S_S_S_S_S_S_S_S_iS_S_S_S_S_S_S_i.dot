digraph "CFG for '_Z24dev_get_gravity_at_pointfPfS_S_S_S_S_S_S_S_S_iS_S_S_S_S_S_S_i' function" {
	label="CFG for '_Z24dev_get_gravity_at_pointfPfS_S_S_S_S_S_S_S_S_iS_S_S_S_S_S_S_i' function";

	Node0x47e2120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%20:\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %23 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %24 = getelementptr i8, i8 addrspace(4)* %23, i64 4\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 4, !range !5, !invariant.load !6\l  %27 = zext i16 %26 to i32\l  %28 = getelementptr inbounds i8, i8 addrspace(4)* %23, i64 12\l  %29 = bitcast i8 addrspace(4)* %28 to i32 addrspace(4)*\l  %30 = load i32, i32 addrspace(4)* %29, align 4, !tbaa !7\l  %31 = mul i32 %22, %27\l  %32 = add i32 %31, %21\l  %33 = icmp slt i32 %32, %11\l  br i1 %33, label %34, label %42\l|{<s0>T|<s1>F}}"];
	Node0x47e2120:s0 -> Node0x47e2290;
	Node0x47e2120:s1 -> Node0x47e53f0;
	Node0x47e2290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%34:\l34:                                               \l  %35 = icmp sgt i32 %19, 0\l  %36 = udiv i32 %30, %27\l  %37 = mul i32 %36, %27\l  %38 = icmp ugt i32 %30, %37\l  %39 = zext i1 %38 to i32\l  %40 = add i32 %36, %39\l  %41 = mul i32 %40, %27\l  br label %43\l}"];
	Node0x47e2290 -> Node0x47e5900;
	Node0x47e53f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%42:\l42:                                               \l  ret void\l}"];
	Node0x47e5900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%43:\l43:                                               \l  %44 = phi i32 [ %32, %34 ], [ %61, %60 ]\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !16\l  %48 = fmul contract float %47, %47\l  %49 = fadd contract float %48, %0\l  %50 = getelementptr inbounds float, float addrspace(1)* %8, i64 %45\l  store float 0.000000e+00, float addrspace(1)* %50, align 4, !tbaa !16\l  %51 = getelementptr inbounds float, float addrspace(1)* %9, i64 %45\l  store float 0.000000e+00, float addrspace(1)* %51, align 4, !tbaa !16\l  %52 = getelementptr inbounds float, float addrspace(1)* %10, i64 %45\l  store float 0.000000e+00, float addrspace(1)* %52, align 4, !tbaa !16\l  br i1 %35, label %53, label %60\l|{<s0>T|<s1>F}}"];
	Node0x47e5900:s0 -> Node0x47e7310;
	Node0x47e5900:s1 -> Node0x47e5a10;
	Node0x47e7310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%53:\l53:                                               \l  %54 = getelementptr inbounds float, float addrspace(1)* %2, i64 %45\l  %55 = getelementptr inbounds float, float addrspace(1)* %5, i64 %45\l  %56 = getelementptr inbounds float, float addrspace(1)* %3, i64 %45\l  %57 = getelementptr inbounds float, float addrspace(1)* %6, i64 %45\l  %58 = getelementptr inbounds float, float addrspace(1)* %4, i64 %45\l  %59 = getelementptr inbounds float, float addrspace(1)* %7, i64 %45\l  br label %63\l}"];
	Node0x47e7310 -> Node0x47e7810;
	Node0x47e5a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%60:\l60:                                               \l  %61 = add i32 %41, %44\l  %62 = icmp slt i32 %61, %11\l  br i1 %62, label %43, label %42, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x47e5a10:s0 -> Node0x47e5900;
	Node0x47e5a10:s1 -> Node0x47e53f0;
	Node0x47e7810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = phi i32 [ 0, %53 ], [ %136, %135 ]\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %13, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !16\l  %68 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %69 = fsub contract float %67, %68\l  %70 = getelementptr inbounds float, float addrspace(1)* %16, i64 %65\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !16\l  %72 = load float, float addrspace(1)* %55, align 4, !tbaa !16\l  %73 = fsub contract float %71, %72\l  %74 = fadd contract float %69, %73\l  %75 = getelementptr inbounds float, float addrspace(1)* %14, i64 %65\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !16\l  %77 = load float, float addrspace(1)* %56, align 4, !tbaa !16\l  %78 = fsub contract float %76, %77\l  %79 = getelementptr inbounds float, float addrspace(1)* %17, i64 %65\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !16\l  %81 = load float, float addrspace(1)* %57, align 4, !tbaa !16\l  %82 = fsub contract float %80, %81\l  %83 = fadd contract float %78, %82\l  %84 = getelementptr inbounds float, float addrspace(1)* %15, i64 %65\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !16\l  %86 = load float, float addrspace(1)* %58, align 4, !tbaa !16\l  %87 = fsub contract float %85, %86\l  %88 = getelementptr inbounds float, float addrspace(1)* %18, i64 %65\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !16\l  %90 = load float, float addrspace(1)* %59, align 4, !tbaa !16\l  %91 = fsub contract float %89, %90\l  %92 = fadd contract float %87, %91\l  %93 = fmul contract float %74, %74\l  %94 = fmul contract float %83, %83\l  %95 = fadd contract float %93, %94\l  %96 = fmul contract float %92, %92\l  %97 = fadd contract float %95, %96\l  %98 = fcmp contract ogt float %97, 0.000000e+00\l  br i1 %98, label %99, label %135\l|{<s0>T|<s1>F}}"];
	Node0x47e7810:s0 -> Node0x47e90a0;
	Node0x47e7810:s1 -> Node0x47e7b60;
	Node0x47e90a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%99:\l99:                                               \l  %100 = fadd contract float %49, %97\l  %101 = getelementptr inbounds float, float addrspace(1)* %12, i64 %65\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !16\l  %103 = fcmp olt float %100, 0x39F0000000000000\l  %104 = select i1 %103, float 0x41F0000000000000, float 1.000000e+00\l  %105 = fmul float %100, %104\l  %106 = tail call float @llvm.sqrt.f32(float %105)\l  %107 = bitcast float %106 to i32\l  %108 = add nsw i32 %107, -1\l  %109 = bitcast i32 %108 to float\l  %110 = add nsw i32 %107, 1\l  %111 = bitcast i32 %110 to float\l  %112 = tail call i1 @llvm.amdgcn.class.f32(float %105, i32 608)\l  %113 = select i1 %103, float 0x3EF0000000000000, float 1.000000e+00\l  %114 = fneg float %111\l  %115 = tail call float @llvm.fma.f32(float %114, float %106, float %105)\l  %116 = fcmp ogt float %115, 0.000000e+00\l  %117 = fneg float %109\l  %118 = tail call float @llvm.fma.f32(float %117, float %106, float %105)\l  %119 = fcmp ole float %118, 0.000000e+00\l  %120 = select i1 %119, float %109, float %106\l  %121 = select i1 %116, float %111, float %120\l  %122 = fmul float %113, %121\l  %123 = select i1 %112, float %105, float %122\l  %124 = fmul contract float %100, %123\l  %125 = fdiv contract float %102, %124\l  %126 = fmul contract float %74, %125\l  %127 = load float, float addrspace(1)* %50, align 4, !tbaa !16\l  %128 = fadd contract float %127, %126\l  store float %128, float addrspace(1)* %50, align 4, !tbaa !16\l  %129 = fmul contract float %83, %125\l  %130 = load float, float addrspace(1)* %51, align 4, !tbaa !16\l  %131 = fadd contract float %129, %130\l  store float %131, float addrspace(1)* %51, align 4, !tbaa !16\l  %132 = fmul contract float %92, %125\l  %133 = load float, float addrspace(1)* %52, align 4, !tbaa !16\l  %134 = fadd contract float %132, %133\l  store float %134, float addrspace(1)* %52, align 4, !tbaa !16\l  br label %135\l}"];
	Node0x47e90a0 -> Node0x47e7b60;
	Node0x47e7b60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%135:\l135:                                              \l  %136 = add nuw nsw i32 %64, 1\l  %137 = icmp eq i32 %136, %19\l  br i1 %137, label %60, label %63, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x47e7b60:s0 -> Node0x47e5a10;
	Node0x47e7b60:s1 -> Node0x47e7810;
}
