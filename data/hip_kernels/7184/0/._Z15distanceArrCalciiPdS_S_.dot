digraph "CFG for '_Z15distanceArrCalciiPdS_S_' function" {
	label="CFG for '_Z15distanceArrCalciiPdS_S_' function";

	Node0x5443f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = urem i32 %0, %10\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = icmp ugt i32 %15, %16\l  br i1 %17, label %26, label %18\l|{<s0>T|<s1>F}}"];
	Node0x5443f20:s0 -> Node0x54460c0;
	Node0x5443f20:s1 -> Node0x5446150;
	Node0x5446150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = add i32 %14, 1\l  %20 = udiv i32 %13, %10\l  %21 = mul i32 %20, %10\l  %22 = icmp ugt i32 %13, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = icmp eq i32 %19, %24\l  br i1 %25, label %77, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5446150:s0 -> Node0x5446660;
	Node0x5446150:s1 -> Node0x54460c0;
	Node0x54460c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d8564670",label="{%26:\l26:                                               \l  %27 = mul i32 %14, %1\l  %28 = add i32 %27, %16\l  %29 = shl i32 %28, 1\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %31 = shl nuw nsw i32 %30, 1\l  %32 = sext i32 %29 to i64\l  %33 = getelementptr inbounds double, double addrspace(1)* %3, i64 %32\l  %34 = load double, double addrspace(1)* %33, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %35 = zext i32 %31 to i64\l  %36 = getelementptr inbounds double, double addrspace(1)* %4, i64 %35\l  %37 = load double, double addrspace(1)* %36, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %38 = fsub contract double %34, %37\l  %39 = fmul contract double %38, %38\l  %40 = add nuw nsw i32 %29, 1\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %3, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %44 = add nuw nsw i32 %31, 1\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds double, double addrspace(1)* %4, i64 %45\l  %47 = load double, double addrspace(1)* %46, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %48 = fsub contract double %43, %47\l  %49 = fmul contract double %48, %48\l  %50 = fadd contract double %39, %49\l  %51 = fcmp olt double %50, 0x1000000000000000\l  %52 = select i1 %51, double 0x4FF0000000000000, double 1.000000e+00\l  %53 = fmul double %50, %52\l  %54 = tail call double @llvm.amdgcn.rsq.f64(double %53)\l  %55 = fmul double %53, %54\l  %56 = fmul double %54, 5.000000e-01\l  %57 = fneg double %56\l  %58 = tail call double @llvm.fma.f64(double %57, double %55, double\l... 5.000000e-01)\l  %59 = tail call double @llvm.fma.f64(double %56, double %58, double %56)\l  %60 = tail call double @llvm.fma.f64(double %55, double %58, double %55)\l  %61 = fneg double %60\l  %62 = tail call double @llvm.fma.f64(double %61, double %60, double %53)\l  %63 = tail call double @llvm.fma.f64(double %62, double %59, double %60)\l  %64 = fneg double %63\l  %65 = tail call double @llvm.fma.f64(double %64, double %63, double %53)\l  %66 = tail call double @llvm.fma.f64(double %65, double %59, double %63)\l  %67 = select i1 %51, double 0x37F0000000000000, double 1.000000e+00\l  %68 = fmul double %67, %66\l  %69 = fcmp oeq double %53, 0.000000e+00\l  %70 = fcmp oeq double %53, 0x7FF0000000000000\l  %71 = or i1 %69, %70\l  %72 = select i1 %71, double %53, double %68\l  %73 = mul i32 %30, %0\l  %74 = add nsw i32 %28, %73\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds double, double addrspace(1)* %2, i64 %75\l  store double %72, double addrspace(1)* %76, align 8, !tbaa !16\l  br label %77\l}"];
	Node0x54460c0 -> Node0x5446660;
	Node0x5446660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  ret void\l}"];
}
