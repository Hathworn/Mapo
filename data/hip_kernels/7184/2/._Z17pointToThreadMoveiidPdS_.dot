digraph "CFG for '_Z17pointToThreadMoveiidPdS_' function" {
	label="CFG for '_Z17pointToThreadMoveiidPdS_' function";

	Node0x494c7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = udiv i32 %13, %10\l  %16 = mul i32 %15, %10\l  %17 = icmp ugt i32 %13, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, -1\l  %20 = add i32 %19, %18\l  %21 = icmp eq i32 %14, %20\l  br i1 %21, label %24, label %22\l|{<s0>T|<s1>F}}"];
	Node0x494c7b0:s0 -> Node0x494e880;
	Node0x494c7b0:s1 -> Node0x494e910;
	Node0x494e910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%22:\l22:                                               \l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  br label %28\l}"];
	Node0x494e910 -> Node0x494edc0;
	Node0x494e880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%24:\l24:                                               \l  %25 = urem i32 %0, %10\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %27 = icmp ugt i32 %25, %26\l  br i1 %27, label %28, label %48\l|{<s0>T|<s1>F}}"];
	Node0x494e880:s0 -> Node0x494edc0;
	Node0x494e880:s1 -> Node0x494ec20;
	Node0x494edc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d8564670",label="{%28:\l28:                                               \l  %29 = phi i32 [ %23, %22 ], [ %26, %24 ]\l  %30 = mul i32 %14, %1\l  %31 = add i32 %30, %29\l  %32 = shl i32 %31, 1\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %4, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !16\l  %36 = fmul contract double %35, %2\l  %37 = getelementptr inbounds double, double addrspace(1)* %3, i64 %33\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !16\l  %39 = fadd contract double %38, %36\l  store double %39, double addrspace(1)* %37, align 8, !tbaa !16\l  %40 = add nuw nsw i32 %32, 1\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %4, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !16\l  %44 = fmul contract double %43, %2\l  %45 = getelementptr inbounds double, double addrspace(1)* %3, i64 %41\l  %46 = load double, double addrspace(1)* %45, align 8, !tbaa !16\l  %47 = fadd contract double %46, %44\l  store double %47, double addrspace(1)* %45, align 8, !tbaa !16\l  br label %48\l}"];
	Node0x494edc0 -> Node0x494ec20;
	Node0x494ec20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  ret void\l}"];
}
