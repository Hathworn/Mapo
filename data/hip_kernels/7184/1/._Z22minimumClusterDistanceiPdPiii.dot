digraph "CFG for '_Z22minimumClusterDistanceiPdPiii' function" {
	label="CFG for '_Z22minimumClusterDistanceiPdPiii' function";

	Node0x634bbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = add i32 %14, 1\l  %16 = udiv i32 %13, %10\l  %17 = mul i32 %16, %10\l  %18 = icmp ugt i32 %13, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = icmp eq i32 %15, %20\l  br i1 %21, label %24, label %22\l|{<s0>T|<s1>F}}"];
	Node0x634bbb0:s0 -> Node0x634dcc0;
	Node0x634bbb0:s1 -> Node0x634dd50;
	Node0x634dd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%22:\l22:                                               \l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  br label %28\l}"];
	Node0x634dd50 -> Node0x634e200;
	Node0x634dcc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%24:\l24:                                               \l  %25 = urem i32 %3, %10\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %27 = icmp ugt i32 %25, %26\l  br i1 %27, label %28, label %156\l|{<s0>T|<s1>F}}"];
	Node0x634dcc0:s0 -> Node0x634e200;
	Node0x634dcc0:s1 -> Node0x634e060;
	Node0x634e200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%28:\l28:                                               \l  %29 = phi i32 [ %23, %22 ], [ %26, %24 ]\l  %30 = mul i32 %14, %0\l  %31 = add i32 %30, %29\l  %32 = sext i32 %31 to i64\l  %33 = icmp sgt i32 %4, 0\l  br i1 %33, label %34, label %153\l|{<s0>T|<s1>F}}"];
	Node0x634e200:s0 -> Node0x634da50;
	Node0x634e200:s1 -> Node0x634f040;
	Node0x634da50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds double, double addrspace(1)* %1, i64 %32\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %37 = and i32 %4, 7\l  %38 = icmp ult i32 %4, 8\l  br i1 %38, label %128, label %39\l|{<s0>T|<s1>F}}"];
	Node0x634da50:s0 -> Node0x634fb90;
	Node0x634da50:s1 -> Node0x634fc20;
	Node0x634fc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%39:\l39:                                               \l  %40 = and i32 %4, -8\l  br label %41\l}"];
	Node0x634fc20 -> Node0x634fe20;
	Node0x634fe20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%41:\l41:                                               \l  %42 = phi i32 [ 0, %39 ], [ %125, %41 ]\l  %43 = phi double [ undef, %39 ], [ %124, %41 ]\l  %44 = phi double [ %36, %39 ], [ %123, %41 ]\l  %45 = phi i32 [ 0, %39 ], [ %126, %41 ]\l  %46 = mul nsw i32 %42, %3\l  %47 = add nsw i32 %46, %31\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %1, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %51 = fcmp contract olt double %50, %44\l  %52 = sitofp i32 %42 to double\l  %53 = select i1 %51, double %50, double %44\l  %54 = select i1 %51, double %52, double %43\l  %55 = or i32 %42, 1\l  %56 = mul nsw i32 %55, %3\l  %57 = add nsw i32 %56, %31\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds double, double addrspace(1)* %1, i64 %58\l  %60 = load double, double addrspace(1)* %59, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %61 = fcmp contract olt double %60, %53\l  %62 = sitofp i32 %55 to double\l  %63 = select i1 %61, double %60, double %53\l  %64 = select i1 %61, double %62, double %54\l  %65 = or i32 %42, 2\l  %66 = mul nsw i32 %65, %3\l  %67 = add nsw i32 %66, %31\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds double, double addrspace(1)* %1, i64 %68\l  %70 = load double, double addrspace(1)* %69, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %71 = fcmp contract olt double %70, %63\l  %72 = sitofp i32 %65 to double\l  %73 = select i1 %71, double %70, double %63\l  %74 = select i1 %71, double %72, double %64\l  %75 = or i32 %42, 3\l  %76 = mul nsw i32 %75, %3\l  %77 = add nsw i32 %76, %31\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds double, double addrspace(1)* %1, i64 %78\l  %80 = load double, double addrspace(1)* %79, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %81 = fcmp contract olt double %80, %73\l  %82 = sitofp i32 %75 to double\l  %83 = select i1 %81, double %80, double %73\l  %84 = select i1 %81, double %82, double %74\l  %85 = or i32 %42, 4\l  %86 = mul nsw i32 %85, %3\l  %87 = add nsw i32 %86, %31\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds double, double addrspace(1)* %1, i64 %88\l  %90 = load double, double addrspace(1)* %89, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %91 = fcmp contract olt double %90, %83\l  %92 = sitofp i32 %85 to double\l  %93 = select i1 %91, double %90, double %83\l  %94 = select i1 %91, double %92, double %84\l  %95 = or i32 %42, 5\l  %96 = mul nsw i32 %95, %3\l  %97 = add nsw i32 %96, %31\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds double, double addrspace(1)* %1, i64 %98\l  %100 = load double, double addrspace(1)* %99, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %101 = fcmp contract olt double %100, %93\l  %102 = sitofp i32 %95 to double\l  %103 = select i1 %101, double %100, double %93\l  %104 = select i1 %101, double %102, double %94\l  %105 = or i32 %42, 6\l  %106 = mul nsw i32 %105, %3\l  %107 = add nsw i32 %106, %31\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds double, double addrspace(1)* %1, i64 %108\l  %110 = load double, double addrspace(1)* %109, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %111 = fcmp contract olt double %110, %103\l  %112 = sitofp i32 %105 to double\l  %113 = select i1 %111, double %110, double %103\l  %114 = select i1 %111, double %112, double %104\l  %115 = or i32 %42, 7\l  %116 = mul nsw i32 %115, %3\l  %117 = add nsw i32 %116, %31\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds double, double addrspace(1)* %1, i64 %118\l  %120 = load double, double addrspace(1)* %119, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %121 = fcmp contract olt double %120, %113\l  %122 = sitofp i32 %115 to double\l  %123 = select i1 %121, double %120, double %113\l  %124 = select i1 %121, double %122, double %114\l  %125 = add nuw nsw i32 %42, 8\l  %126 = add i32 %45, 8\l  %127 = icmp eq i32 %126, %40\l  br i1 %127, label %128, label %41, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x634fe20:s0 -> Node0x634fb90;
	Node0x634fe20:s1 -> Node0x634fe20;
	Node0x634fb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%128:\l128:                                              \l  %129 = phi i32 [ 0, %34 ], [ %125, %41 ]\l  %130 = phi double [ undef, %34 ], [ %124, %41 ]\l  %131 = phi double [ %36, %34 ], [ %123, %41 ]\l  %132 = icmp eq i32 %37, 0\l  br i1 %132, label %150, label %133\l|{<s0>T|<s1>F}}"];
	Node0x634fb90:s0 -> Node0x6351ad0;
	Node0x634fb90:s1 -> Node0x6351b20;
	Node0x6351b20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%133:\l133:                                              \l  %134 = phi i32 [ %147, %133 ], [ %129, %128 ]\l  %135 = phi double [ %146, %133 ], [ %130, %128 ]\l  %136 = phi double [ %145, %133 ], [ %131, %128 ]\l  %137 = phi i32 [ %148, %133 ], [ 0, %128 ]\l  %138 = mul nsw i32 %134, %3\l  %139 = add nsw i32 %138, %31\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds double, double addrspace(1)* %1, i64 %140\l  %142 = load double, double addrspace(1)* %141, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %143 = fcmp contract olt double %142, %136\l  %144 = sitofp i32 %134 to double\l  %145 = select i1 %143, double %142, double %136\l  %146 = select i1 %143, double %144, double %135\l  %147 = add nuw nsw i32 %134, 1\l  %148 = add i32 %137, 1\l  %149 = icmp eq i32 %148, %37\l  br i1 %149, label %150, label %133, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x6351b20:s0 -> Node0x6351ad0;
	Node0x6351b20:s1 -> Node0x6351b20;
	Node0x6351ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%150:\l150:                                              \l  %151 = phi double [ %130, %128 ], [ %146, %133 ]\l  %152 = fptosi double %151 to i32\l  br label %153\l}"];
	Node0x6351ad0 -> Node0x634f040;
	Node0x634f040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%153:\l153:                                              \l  %154 = phi i32 [ undef, %28 ], [ %152, %150 ]\l  %155 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %32\l  store i32 %154, i32 addrspace(1)* %155, align 4, !tbaa !24\l  br label %156\l}"];
	Node0x634f040 -> Node0x634e060;
	Node0x634e060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%156:\l156:                                              \l  ret void\l}"];
}
