digraph "CFG for '_Z21PD_INPLACE_GPU_KERNELPfS_PhS_ii' function" {
	label="CFG for '_Z21PD_INPLACE_GPU_KERNELPfS_PhS_ii' function";

	Node0x577e680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = load float, float addrspace(1)* %3, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %8 = getelementptr inbounds float, float addrspace(1)* %3, i64 2\l  %9 = load float, float addrspace(1)* %8, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %10 = getelementptr inbounds float, float addrspace(1)* %3, i64 1\l  %11 = load float, float addrspace(1)* %10, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = mul i32 %12, %5\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = shl i32 %14, 10\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %17 = or i32 %15, %16\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !10, !invariant.load\l... !8\l  %22 = zext i16 %21 to i32\l  %23 = icmp slt i32 %17, %5\l  br i1 %23, label %24, label %30\l|{<s0>T|<s1>F}}"];
	Node0x577e680:s0 -> Node0x5781a10;
	Node0x577e680:s1 -> Node0x5781aa0;
	Node0x5781a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%24:\l24:                                               \l  %25 = add nsw i32 %17, %13\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %29 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_input, i32 0, i32 %16\l  store float %28, float addrspace(3)* %29, align 4, !tbaa !4\l  br label %30\l}"];
	Node0x5781a10 -> Node0x5781aa0;
	Node0x5781aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%30:\l30:                                               \l  %31 = add nuw nsw i32 %16, %22\l  %32 = add i32 %17, %22\l  %33 = icmp slt i32 %32, %5\l  br i1 %33, label %34, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5781aa0:s0 -> Node0x5781300;
	Node0x5781aa0:s1 -> Node0x5782320;
	Node0x5781300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%34:\l34:                                               \l  %35 = add nsw i32 %32, %13\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %39 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_input, i32 0, i32 %31\l  store float %38, float addrspace(3)* %39, align 4, !tbaa !4\l  br label %40\l}"];
	Node0x5781300 -> Node0x5782320;
	Node0x5782320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%40:\l40:                                               \l  %41 = add nuw nsw i32 %31, %22\l  %42 = add nsw i32 %4, 1023\l  %43 = add nsw i32 %4, -1\l  %44 = mul i32 %43, %12\l  %45 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 12\l  %46 = bitcast i8 addrspace(4)* %45 to i32 addrspace(4)*\l  %47 = load i32, i32 addrspace(4)* %46, align 4, !tbaa !11\l  %48 = udiv i32 %47, %22\l  %49 = mul i32 %48, %22\l  %50 = icmp ugt i32 %47, %49\l  %51 = zext i1 %50 to i32\l  %52 = add i32 %48, %51\l  %53 = mul i32 %44, %52\l  %54 = icmp slt i32 %41, %42\l  br i1 %54, label %55, label %69\l|{<s0>T|<s1>F}}"];
	Node0x5782320:s0 -> Node0x5783120;
	Node0x5782320:s1 -> Node0x57831b0;
	Node0x5783120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%55:\l55:                                               \l  %56 = mul i32 %43, %14\l  %57 = add i32 %56, %16\l  br label %58\l}"];
	Node0x5783120 -> Node0x5783410;
	Node0x5783410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi i32 [ %67, %58 ], [ %57, %55 ]\l  %60 = phi i32 [ %66, %58 ], [ %41, %55 ]\l  %61 = add nsw i32 %59, %53\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %1, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %65 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_input, i32 0, i32 %60\l  store float %64, float addrspace(3)* %65, align 4, !tbaa !4\l  %66 = add i32 %60, %22\l  %67 = add i32 %59, %22\l  %68 = icmp slt i32 %66, %42\l  br i1 %68, label %58, label %69, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5783410:s0 -> Node0x5783410;
	Node0x5783410:s1 -> Node0x57831b0;
	Node0x57831b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%69:\l69:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %70 = shl nuw nsw i32 %16, 1\l  %71 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_input, i32 0, i32 %70\l  %72 = load float, float addrspace(3)* %71, align 4, !tbaa !4\l  %73 = fsub contract float %72, %7\l  %74 = fdiv contract float %73, %9\l  %75 = insertelement \<2 x float\> undef, float %74, i64 0\l  %76 = add nuw nsw i32 %70, 1\l  %77 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_input, i32 0, i32 %76\l  %78 = load float, float addrspace(3)* %77, align 4, !tbaa !4\l  %79 = fsub contract float %78, %7\l  %80 = fdiv contract float %79, %9\l  %81 = insertelement \<2 x float\> %75, float %80, i64 1\l  %82 = icmp sgt i32 %4, 1\l  br i1 %82, label %83, label %122\l|{<s0>T|<s1>F}}"];
	Node0x57831b0:s0 -> Node0x57853f0;
	Node0x57831b0:s1 -> Node0x5785480;
	Node0x57853f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  %84 = phi i32 [ %95, %83 ], [ 1, %69 ]\l  %85 = phi float [ %94, %83 ], [ %72, %69 ]\l  %86 = phi \<2 x i32\> [ %118, %83 ], [ \<i32 1, i32 1\>, %69 ]\l  %87 = phi \<2 x float\> [ %117, %83 ], [ %81, %69 ]\l  %88 = sitofp i32 %84 to float\l  %89 = fmul contract float %11, %88\l  %90 = fadd contract float %9, %89\l  %91 = add nuw nsw i32 %84, %70\l  %92 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_input, i32 0, i32 %91\l  %93 = load float, float addrspace(3)* %92, align 4, !tbaa !4\l  %94 = fadd contract float %85, %93\l  %95 = add nuw nsw i32 %84, 1\l  %96 = sitofp i32 %95 to float\l  %97 = fmul contract float %7, %96\l  %98 = fsub contract float %94, %97\l  %99 = fdiv contract float %98, %90\l  %100 = extractelement \<2 x float\> %87, i64 0\l  %101 = fcmp contract ogt float %99, %100\l  %102 = insertelement \<2 x float\> %87, float %99, i64 0\l  %103 = insertelement \<2 x i32\> %86, i32 %95, i64 0\l  %104 = select i1 %101, \<2 x float\> %102, \<2 x float\> %87\l  %105 = select i1 %101, \<2 x i32\> %103, \<2 x i32\> %86\l  %106 = add nuw nsw i32 %91, 1\l  %107 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_input, i32 0, i32 %106\l  %108 = load float, float addrspace(3)* %107, align 4, !tbaa !4\l  %109 = fsub contract float %94, %72\l  %110 = fadd contract float %109, %108\l  %111 = fsub contract float %110, %97\l  %112 = fdiv contract float %111, %90\l  %113 = extractelement \<2 x float\> %104, i64 1\l  %114 = fcmp contract ogt float %112, %113\l  %115 = insertelement \<2 x float\> %104, float %112, i64 1\l  %116 = insertelement \<2 x i32\> %105, i32 %95, i64 1\l  %117 = select i1 %114, \<2 x float\> %115, \<2 x float\> %104\l  %118 = select i1 %114, \<2 x i32\> %116, \<2 x i32\> %105\l  %119 = icmp eq i32 %95, %4\l  br i1 %119, label %120, label %83, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x57853f0:s0 -> Node0x5786e30;
	Node0x57853f0:s1 -> Node0x57853f0;
	Node0x5786e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%120:\l120:                                              \l  %121 = bitcast \<2 x i32\> %118 to \<8 x i8\>\l  br label %122\l}"];
	Node0x5786e30 -> Node0x5785480;
	Node0x5785480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%122:\l122:                                              \l  %123 = phi \<2 x float\> [ %81, %69 ], [ %117, %120 ]\l  %124 = phi \<8 x i8\> [ \<i8 1, i8 0, i8 0, i8 0, i8 1, i8 0, i8 0, i8 0\>, %69\l... ], [ %121, %120 ]\l  %125 = add i32 %15, %70\l  %126 = icmp slt i32 %125, %5\l  br i1 %126, label %127, label %134\l|{<s0>T|<s1>F}}"];
	Node0x5785480:s0 -> Node0x5787310;
	Node0x5785480:s1 -> Node0x5787360;
	Node0x5787310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%127:\l127:                                              \l  %128 = extractelement \<2 x float\> %123, i64 0\l  %129 = add i32 %125, %13\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %0, i64 %130\l  store float %128, float addrspace(1)* %131, align 4, !tbaa !4\l  %132 = extractelement \<8 x i8\> %124, i64 0\l  %133 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %130\l  store i8 %132, i8 addrspace(1)* %133, align 1, !tbaa !23\l  br label %134\l}"];
	Node0x5787310 -> Node0x5787360;
	Node0x5787360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%134:\l134:                                              \l  %135 = or i32 %125, 1\l  %136 = icmp slt i32 %135, %5\l  br i1 %136, label %137, label %144\l|{<s0>T|<s1>F}}"];
	Node0x5787360:s0 -> Node0x5787fd0;
	Node0x5787360:s1 -> Node0x5788020;
	Node0x5787fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%137:\l137:                                              \l  %138 = extractelement \<2 x float\> %123, i64 1\l  %139 = add i32 %135, %13\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %0, i64 %140\l  store float %138, float addrspace(1)* %141, align 4, !tbaa !4\l  %142 = extractelement \<8 x i8\> %124, i64 4\l  %143 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %140\l  store i8 %142, i8 addrspace(1)* %143, align 1, !tbaa !23\l  br label %144\l}"];
	Node0x5787fd0 -> Node0x5788020;
	Node0x5788020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%144:\l144:                                              \l  ret void\l}"];
}
