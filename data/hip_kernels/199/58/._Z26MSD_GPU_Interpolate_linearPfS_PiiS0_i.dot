digraph "CFG for '_Z26MSD_GPU_Interpolate_linearPfS_PiiS0_i' function" {
	label="CFG for '_Z26MSD_GPU_Interpolate_linearPfS_PiiS0_i' function";

	Node0x62d7c50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = zext i32 %7 to i64\l  %9 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %8\l  %10 = load i32, i32 addrspace(1)* %9, align 4, !tbaa !5, !amdgpu.noclobber !9\l  %11 = icmp sgt i32 %10, %5\l  br i1 %11, label %75, label %12\l|{<s0>T|<s1>F}}"];
	Node0x62d7c50:s0 -> Node0x62d6ec0;
	Node0x62d7c50:s1 -> Node0x62d8fd0;
	Node0x62d8fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%12:\l12:                                               \l  %13 = sitofp i32 %10 to float\l  %14 = tail call i1 @llvm.amdgcn.class.f32(float %13, i32 144)\l  %15 = select i1 %14, float 0x41F0000000000000, float 1.000000e+00\l  %16 = fmul float %15, %13\l  %17 = tail call float @llvm.log2.f32(float %16)\l  %18 = select i1 %14, float 3.200000e+01, float 0.000000e+00\l  %19 = fsub float %17, %18\l  %20 = tail call float @llvm.floor.f32(float %19)\l  %21 = fptosi float %20 to i32\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %22\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %25 = sitofp i32 %24 to float\l  %26 = mul nsw i32 %21, 3\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %30 = add nsw i32 %26, 1\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %34 = add nsw i32 %3, -1\l  %35 = icmp eq i32 %34, %21\l  %36 = fcmp contract oeq float %25, %13\l  %37 = select i1 %35, i1 %36, i1 false\l  br i1 %37, label %38, label %42\l|{<s0>T|<s1>F}}"];
	Node0x62d8fd0:s0 -> Node0x62dcaf0;
	Node0x62d8fd0:s1 -> Node0x62dcb80;
	Node0x62dcaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%38:\l38:                                               \l  %39 = shl nuw nsw i32 %7, 1\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  store float %29, float addrspace(1)* %41, align 4, !tbaa !10\l  br label %69\l}"];
	Node0x62dcaf0 -> Node0x62dcf20;
	Node0x62dcb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%42:\l42:                                               \l  %43 = add nsw i32 %21, 1\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %47 = sitofp i32 %46 to float\l  %48 = fsub contract float %47, %25\l  %49 = mul nsw i32 %43, 3\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %53 = fsub contract float %52, %29\l  %54 = add nsw i32 %49, 1\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %58 = fsub contract float %57, %33\l  %59 = fdiv contract float %53, %48\l  %60 = fsub contract float %13, %25\l  %61 = fmul contract float %60, %59\l  %62 = fadd contract float %29, %61\l  %63 = shl nuw nsw i32 %7, 1\l  %64 = zext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  store float %62, float addrspace(1)* %65, align 4, !tbaa !10\l  %66 = fdiv contract float %58, %48\l  %67 = fmul contract float %60, %66\l  %68 = fadd contract float %33, %67\l  br label %69\l}"];
	Node0x62dcb80 -> Node0x62dcf20;
	Node0x62dcf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%69:\l69:                                               \l  %70 = phi i32 [ %39, %38 ], [ %63, %42 ]\l  %71 = phi float [ %33, %38 ], [ %68, %42 ]\l  %72 = or i32 %70, 1\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  store float %71, float addrspace(1)* %74, align 4, !tbaa !10\l  br label %75\l}"];
	Node0x62dcf20 -> Node0x62d6ec0;
	Node0x62d6ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  ret void\l}"];
}
