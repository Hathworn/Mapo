digraph "CFG for '_Z15SNR_GPU_limitedPfS_PtS_iiii' function" {
	label="CFG for '_Z15SNR_GPU_limitedPfS_PtS_iiii' function";

	Node0x5d09bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = lshr i32 %9, 5\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = lshr i16 %14, 5\l  %16 = zext i16 %15 to i32\l  %17 = load float, float addrspace(1)* %3, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %18 = getelementptr inbounds float, float addrspace(1)* %3, i64 1\l  %19 = load float, float addrspace(1)* %18, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = mul i32 %20, %16\l  %22 = add i32 %21, %10\l  %23 = mul i32 %22, %6\l  %24 = icmp sgt i32 %4, 0\l  br i1 %24, label %25, label %34\l|{<s0>T|<s1>F}}"];
	Node0x5d09bb0:s0 -> Node0x5d0cca0;
	Node0x5d09bb0:s1 -> Node0x5d0cd30;
	Node0x5d0cca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%25:\l25:                                               \l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %27 = shl i32 %26, 5\l  %28 = mul i32 %27, %4\l  %29 = and i32 %9, 31\l  %30 = or i32 %28, %29\l  %31 = sub nsw i32 %6, %7\l  %32 = icmp eq i32 %5, 1\l  %33 = trunc i32 %5 to i16\l  br label %35\l}"];
	Node0x5d0cca0 -> Node0x5d0b860;
	Node0x5d0cd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%34:\l34:                                               \l  ret void\l}"];
	Node0x5d0b860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i32 [ 0, %25 ], [ %64, %62 ]\l  %37 = phi i32 [ %30, %25 ], [ %63, %62 ]\l  %38 = icmp slt i32 %37, %31\l  br i1 %38, label %39, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5d0b860:s0 -> Node0x5d0d9a0;
	Node0x5d0b860:s1 -> Node0x5d0da30;
	Node0x5d0d9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%39:\l39:                                               \l  %40 = add nsw i32 %37, %23\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7\l  %45 = fsub contract float %44, %17\l  %46 = fdiv contract float %45, %19\l  br i1 %32, label %47, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5d0d9a0:s0 -> Node0x5d0dfa0;
	Node0x5d0d9a0:s1 -> Node0x5d0dff0;
	Node0x5d0dfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%47:\l47:                                               \l  store float %46, float addrspace(1)* %42, align 4, !tbaa !7\l  br label %58\l}"];
	Node0x5d0dfa0 -> Node0x5d0e1c0;
	Node0x5d0dff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%48:\l48:                                               \l  %49 = load float, float addrspace(1)* %42, align 4, !tbaa !7\l  %50 = fcmp contract ogt float %46, %49\l  br i1 %50, label %51, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5d0dff0:s0 -> Node0x5d0e380;
	Node0x5d0dff0:s1 -> Node0x5d0b8b0;
	Node0x5d0e380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%51:\l51:                                               \l  store float %46, float addrspace(1)* %42, align 4, !tbaa !7\l  br label %58\l}"];
	Node0x5d0e380 -> Node0x5d0e1c0;
	Node0x5d0da30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%52:\l52:                                               \l  %53 = icmp slt i32 %37, %6\l  br i1 %53, label %54, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5d0da30:s0 -> Node0x5d0e610;
	Node0x5d0da30:s1 -> Node0x5d0b8b0;
	Node0x5d0e610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%54:\l54:                                               \l  %55 = add nsw i32 %37, %23\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  store float 0.000000e+00, float addrspace(1)* %57, align 4, !tbaa !7\l  br label %58\l}"];
	Node0x5d0e610 -> Node0x5d0e1c0;
	Node0x5d0e1c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%58:\l58:                                               \l  %59 = phi i64 [ %56, %54 ], [ %41, %47 ], [ %41, %51 ]\l  %60 = phi i16 [ 0, %54 ], [ 1, %47 ], [ %33, %51 ]\l  %61 = getelementptr inbounds i16, i16 addrspace(1)* %2, i64 %59\l  store i16 %60, i16 addrspace(1)* %61, align 2, !tbaa !11\l  br label %62\l}"];
	Node0x5d0e1c0 -> Node0x5d0b8b0;
	Node0x5d0b8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  %63 = add nsw i32 %37, 32\l  %64 = add nuw nsw i32 %36, 1\l  %65 = icmp eq i32 %64, %4\l  br i1 %65, label %34, label %35, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5d0b8b0:s0 -> Node0x5d0cd30;
	Node0x5d0b8b0:s1 -> Node0x5d0b860;
}
