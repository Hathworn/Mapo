digraph "CFG for '_Z22sga_down_data_backwardiPKfPfiiiiS1_' function" {
	label="CFG for '_Z22sga_down_data_backwardiPKfPfiiiiS1_' function";

	Node0x62328f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = icmp slt i32 %17, %0\l  br i1 %18, label %19, label %225\l|{<s0>T|<s1>F}}"];
	Node0x62328f0:s0 -> Node0x6234860;
	Node0x62328f0:s1 -> Node0x62348f0;
	Node0x6234860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%19:\l19:                                               \l  %20 = mul nsw i32 %4, %3\l  %21 = freeze i32 %17\l  %22 = freeze i32 %4\l  %23 = sdiv i32 %21, %22\l  %24 = mul nsw i32 %23, %20\l  %25 = mul nsw i32 %24, %5\l  %26 = mul i32 %23, %22\l  %27 = sub i32 %21, %26\l  %28 = add nsw i32 %25, %27\l  %29 = mul nsw i32 %24, %6\l  %30 = add nsw i32 %29, %27\l  %31 = icmp sgt i32 %3, 0\l  br i1 %31, label %32, label %225\l|{<s0>T|<s1>F}}"];
	Node0x6234860:s0 -> Node0x62350b0;
	Node0x6234860:s1 -> Node0x62348f0;
	Node0x62350b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%32:\l32:                                               \l  %33 = icmp sgt i32 %5, 0\l  %34 = shl nsw i32 %4, 1\l  %35 = add i32 %20, %4\l  %36 = shl i32 %35, 1\l  %37 = mul nsw i32 %20, 3\l  %38 = shl nsw i32 %20, 2\l  br label %51\l}"];
	Node0x62350b0 -> Node0x62356c0;
	Node0x6235780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%39:\l39:                                               \l  %40 = icmp sgt i32 %52, 1\l  br i1 %40, label %51, label %41, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x6235780:s0 -> Node0x62356c0;
	Node0x6235780:s1 -> Node0x62358d0;
	Node0x62358d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%41:\l41:                                               \l  br i1 %31, label %42, label %225\l|{<s0>T|<s1>F}}"];
	Node0x62358d0:s0 -> Node0x6235b80;
	Node0x62358d0:s1 -> Node0x62348f0;
	Node0x6235b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%42:\l42:                                               \l  %43 = mul nsw i32 %20, 3\l  %44 = add nsw i32 %5, -1\l  %45 = mul nsw i32 %44, %20\l  %46 = shl nsw i32 %20, 2\l  %47 = and i32 %3, 1\l  %48 = icmp eq i32 %3, 1\l  br i1 %48, label %195, label %49\l|{<s0>T|<s1>F}}"];
	Node0x6235b80:s0 -> Node0x6235fe0;
	Node0x6235b80:s1 -> Node0x6236030;
	Node0x6236030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%49:\l49:                                               \l  %50 = and i32 %3, -2\l  br label %136\l}"];
	Node0x6236030 -> Node0x6236230;
	Node0x62356c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%51:\l51:                                               \l  %52 = phi i32 [ %3, %32 ], [ %53, %39 ]\l  %53 = add nsw i32 %52, -1\l  %54 = mul nsw i32 %53, %4\l  %55 = add nsw i32 %54, %30\l  br i1 %33, label %56, label %39\l|{<s0>T|<s1>F}}"];
	Node0x62356c0:s0 -> Node0x6236580;
	Node0x62356c0:s1 -> Node0x6235780;
	Node0x6236580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%56:\l56:                                               \l  %57 = add i32 %54, %28\l  %58 = icmp slt i32 %52, %3\l  %59 = add nsw i32 %55, %4\l  %60 = add nsw i32 %59, %20\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  %63 = add nuw nsw i32 %52, 1\l  %64 = icmp slt i32 %63, %3\l  %65 = add i32 %36, %55\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %1, i64 %66\l  %68 = add nsw i32 %59, %37\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %1, i64 %69\l  %71 = add nsw i32 %59, %38\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %1, i64 %72\l  %74 = sext i32 %55 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %74\l  br label %76\l}"];
	Node0x6236580 -> Node0x6235370;
	Node0x6235370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  %77 = phi i32 [ 0, %56 ], [ %103, %128 ]\l  %78 = mul nsw i32 %77, %20\l  %79 = add i32 %57, %78\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %2, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !9\l  br i1 %58, label %83, label %91\l|{<s0>T|<s1>F}}"];
	Node0x6235370:s0 -> Node0x6237880;
	Node0x6235370:s1 -> Node0x6237910;
	Node0x6237880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%83:\l83:                                               \l  %84 = add nsw i32 %79, %4\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %2, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !9\l  %88 = load float, float addrspace(1)* %62, align 4, !tbaa !9\l  %89 = fmul contract float %87, %88\l  %90 = fadd contract float %82, %89\l  br label %91\l}"];
	Node0x6237880 -> Node0x6237910;
	Node0x6237910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%91:\l91:                                               \l  %92 = phi float [ %90, %83 ], [ %82, %76 ]\l  br i1 %64, label %93, label %101\l|{<s0>T|<s1>F}}"];
	Node0x6237910:s0 -> Node0x6238520;
	Node0x6237910:s1 -> Node0x6238570;
	Node0x6238520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%93:\l93:                                               \l  %94 = add nsw i32 %79, %34\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %2, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !9\l  %98 = load float, float addrspace(1)* %67, align 4, !tbaa !9\l  %99 = fmul contract float %97, %98\l  %100 = fadd contract float %92, %99\l  br label %101\l}"];
	Node0x6238520 -> Node0x6238570;
	Node0x6238570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%101:\l101:                                              \l  %102 = phi float [ %100, %93 ], [ %92, %91 ]\l  %103 = add nuw nsw i32 %77, 1\l  %104 = icmp slt i32 %103, %5\l  %105 = select i1 %58, i1 %104, i1 false\l  br i1 %105, label %106, label %115\l|{<s0>T|<s1>F}}"];
	Node0x6238570:s0 -> Node0x6238d00;
	Node0x6238570:s1 -> Node0x6238d50;
	Node0x6238d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%106:\l106:                                              \l  %107 = add nsw i32 %79, %4\l  %108 = add nsw i32 %107, %20\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %2, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !9\l  %112 = load float, float addrspace(1)* %70, align 4, !tbaa !9\l  %113 = fmul contract float %111, %112\l  %114 = fadd contract float %102, %113\l  br label %115\l}"];
	Node0x6238d00 -> Node0x6238d50;
	Node0x6238d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%115:\l115:                                              \l  %116 = phi float [ %114, %106 ], [ %102, %101 ]\l  %117 = icmp ne i32 %77, 0\l  %118 = select i1 %58, i1 %117, i1 false\l  br i1 %118, label %119, label %128\l|{<s0>T|<s1>F}}"];
	Node0x6238d50:s0 -> Node0x62394e0;
	Node0x6238d50:s1 -> Node0x6237330;
	Node0x62394e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%119:\l119:                                              \l  %120 = add nsw i32 %79, %4\l  %121 = sub i32 %120, %20\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %2, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !9\l  %125 = load float, float addrspace(1)* %73, align 4, !tbaa !9\l  %126 = fmul contract float %124, %125\l  %127 = fadd contract float %116, %126\l  br label %128\l}"];
	Node0x62394e0 -> Node0x6237330;
	Node0x6237330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%128:\l128:                                              \l  %129 = phi float [ %127, %119 ], [ %116, %115 ]\l  store float %129, float addrspace(1)* %81, align 4, !tbaa !9\l  %130 = load float, float addrspace(1)* %75, align 4, !tbaa !9\l  %131 = fmul contract float %129, %130\l  %132 = getelementptr inbounds float, float addrspace(1)* %7, i64 %80\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !9\l  %134 = fadd contract float %133, %131\l  store float %134, float addrspace(1)* %132, align 4, !tbaa !9\l  %135 = icmp eq i32 %103, %5\l  br i1 %135, label %39, label %76, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x6237330:s0 -> Node0x6235780;
	Node0x6237330:s1 -> Node0x6235370;
	Node0x6236230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%136:\l136:                                              \l  %137 = phi i32 [ 0, %49 ], [ %192, %136 ]\l  %138 = phi i32 [ 0, %49 ], [ %193, %136 ]\l  %139 = mul nsw i32 %137, %4\l  %140 = add nsw i32 %139, %28\l  %141 = add nsw i32 %139, %30\l  %142 = sext i32 %140 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %2, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !9\l  %145 = add nsw i32 %141, %43\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %1, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !9\l  %149 = fmul contract float %144, %148\l  %150 = getelementptr inbounds float, float addrspace(1)* %7, i64 %142\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !9\l  %152 = fadd contract float %151, %149\l  store float %152, float addrspace(1)* %150, align 4, !tbaa !9\l  %153 = add nsw i32 %140, %45\l  %154 = sext i32 %153 to i64\l  %155 = getelementptr inbounds float, float addrspace(1)* %2, i64 %154\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !9\l  %157 = add nsw i32 %141, %46\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %1, i64 %158\l  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !9\l  %161 = fmul contract float %156, %160\l  %162 = getelementptr inbounds float, float addrspace(1)* %7, i64 %154\l  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !9\l  %164 = fadd contract float %163, %161\l  store float %164, float addrspace(1)* %162, align 4, !tbaa !9\l  %165 = or i32 %137, 1\l  %166 = mul nsw i32 %165, %4\l  %167 = add nsw i32 %166, %28\l  %168 = add nsw i32 %166, %30\l  %169 = sext i32 %167 to i64\l  %170 = getelementptr inbounds float, float addrspace(1)* %2, i64 %169\l  %171 = load float, float addrspace(1)* %170, align 4, !tbaa !9\l  %172 = add nsw i32 %168, %43\l  %173 = sext i32 %172 to i64\l  %174 = getelementptr inbounds float, float addrspace(1)* %1, i64 %173\l  %175 = load float, float addrspace(1)* %174, align 4, !tbaa !9\l  %176 = fmul contract float %171, %175\l  %177 = getelementptr inbounds float, float addrspace(1)* %7, i64 %169\l  %178 = load float, float addrspace(1)* %177, align 4, !tbaa !9\l  %179 = fadd contract float %178, %176\l  store float %179, float addrspace(1)* %177, align 4, !tbaa !9\l  %180 = add nsw i32 %167, %45\l  %181 = sext i32 %180 to i64\l  %182 = getelementptr inbounds float, float addrspace(1)* %2, i64 %181\l  %183 = load float, float addrspace(1)* %182, align 4, !tbaa !9\l  %184 = add nsw i32 %168, %46\l  %185 = sext i32 %184 to i64\l  %186 = getelementptr inbounds float, float addrspace(1)* %1, i64 %185\l  %187 = load float, float addrspace(1)* %186, align 4, !tbaa !9\l  %188 = fmul contract float %183, %187\l  %189 = getelementptr inbounds float, float addrspace(1)* %7, i64 %181\l  %190 = load float, float addrspace(1)* %189, align 4, !tbaa !9\l  %191 = fadd contract float %190, %188\l  store float %191, float addrspace(1)* %189, align 4, !tbaa !9\l  %192 = add nuw nsw i32 %137, 2\l  %193 = add i32 %138, 2\l  %194 = icmp eq i32 %193, %50\l  br i1 %194, label %195, label %136, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x6236230:s0 -> Node0x6235fe0;
	Node0x6236230:s1 -> Node0x6236230;
	Node0x6235fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%195:\l195:                                              \l  %196 = phi i32 [ 0, %42 ], [ %192, %136 ]\l  %197 = icmp eq i32 %47, 0\l  br i1 %197, label %225, label %198\l|{<s0>T|<s1>F}}"];
	Node0x6235fe0:s0 -> Node0x62348f0;
	Node0x6235fe0:s1 -> Node0x623c920;
	Node0x623c920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%198:\l198:                                              \l  %199 = mul nsw i32 %196, %4\l  %200 = add nsw i32 %199, %28\l  %201 = add nsw i32 %199, %30\l  %202 = sext i32 %200 to i64\l  %203 = getelementptr inbounds float, float addrspace(1)* %2, i64 %202\l  %204 = load float, float addrspace(1)* %203, align 4, !tbaa !9\l  %205 = add nsw i32 %201, %43\l  %206 = sext i32 %205 to i64\l  %207 = getelementptr inbounds float, float addrspace(1)* %1, i64 %206\l  %208 = load float, float addrspace(1)* %207, align 4, !tbaa !9\l  %209 = fmul contract float %204, %208\l  %210 = getelementptr inbounds float, float addrspace(1)* %7, i64 %202\l  %211 = load float, float addrspace(1)* %210, align 4, !tbaa !9\l  %212 = fadd contract float %211, %209\l  store float %212, float addrspace(1)* %210, align 4, !tbaa !9\l  %213 = add nsw i32 %200, %45\l  %214 = sext i32 %213 to i64\l  %215 = getelementptr inbounds float, float addrspace(1)* %2, i64 %214\l  %216 = load float, float addrspace(1)* %215, align 4, !tbaa !9\l  %217 = add nsw i32 %201, %46\l  %218 = sext i32 %217 to i64\l  %219 = getelementptr inbounds float, float addrspace(1)* %1, i64 %218\l  %220 = load float, float addrspace(1)* %219, align 4, !tbaa !9\l  %221 = fmul contract float %216, %220\l  %222 = getelementptr inbounds float, float addrspace(1)* %7, i64 %214\l  %223 = load float, float addrspace(1)* %222, align 4, !tbaa !9\l  %224 = fadd contract float %223, %221\l  store float %224, float addrspace(1)* %222, align 4, !tbaa !9\l  br label %225\l}"];
	Node0x623c920 -> Node0x62348f0;
	Node0x62348f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%225:\l225:                                              \l  ret void\l}"];
}
