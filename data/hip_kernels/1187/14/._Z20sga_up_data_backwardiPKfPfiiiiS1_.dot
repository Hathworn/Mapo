digraph "CFG for '_Z20sga_up_data_backwardiPKfPfiiiiS1_' function" {
	label="CFG for '_Z20sga_up_data_backwardiPKfPfiiiiS1_' function";

	Node0x60728b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = icmp slt i32 %17, %0\l  br i1 %18, label %19, label %224\l|{<s0>T|<s1>F}}"];
	Node0x60728b0:s0 -> Node0x6074820;
	Node0x60728b0:s1 -> Node0x60748b0;
	Node0x6074820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%19:\l19:                                               \l  %20 = mul nsw i32 %4, %3\l  %21 = freeze i32 %17\l  %22 = freeze i32 %4\l  %23 = sdiv i32 %21, %22\l  %24 = mul nsw i32 %23, %20\l  %25 = mul nsw i32 %24, %5\l  %26 = mul i32 %23, %22\l  %27 = sub i32 %21, %26\l  %28 = add nsw i32 %25, %27\l  %29 = mul nsw i32 %24, %6\l  %30 = add nsw i32 %29, %27\l  %31 = icmp sgt i32 %3, 0\l  br i1 %31, label %32, label %224\l|{<s0>T|<s1>F}}"];
	Node0x6074820:s0 -> Node0x6075070;
	Node0x6074820:s1 -> Node0x60748b0;
	Node0x6075070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%32:\l32:                                               \l  %33 = icmp sgt i32 %5, 0\l  %34 = sub i32 %20, %4\l  %35 = shl nsw i32 %4, 1\l  %36 = shl i32 %34, 1\l  %37 = mul nsw i32 %20, 3\l  %38 = sub i32 %37, %4\l  %39 = add i32 %20, %4\l  %40 = shl nsw i32 %20, 2\l  %41 = sub i32 %40, %4\l  br label %52\l}"];
	Node0x6075070 -> Node0x6075830;
	Node0x60758f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%42:\l42:                                               \l  br i1 %31, label %43, label %224\l|{<s0>T|<s1>F}}"];
	Node0x60758f0:s0 -> Node0x6075980;
	Node0x60758f0:s1 -> Node0x60748b0;
	Node0x6075980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%43:\l43:                                               \l  %44 = mul nsw i32 %20, 3\l  %45 = add nsw i32 %5, -1\l  %46 = mul nsw i32 %45, %20\l  %47 = shl nsw i32 %20, 2\l  %48 = and i32 %3, 1\l  %49 = icmp eq i32 %3, 1\l  br i1 %49, label %194, label %50\l|{<s0>T|<s1>F}}"];
	Node0x6075980:s0 -> Node0x6075e10;
	Node0x6075980:s1 -> Node0x6075e60;
	Node0x6075e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%50:\l50:                                               \l  %51 = and i32 %3, -2\l  br label %135\l}"];
	Node0x6075e60 -> Node0x6076060;
	Node0x6075830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%52:\l52:                                               \l  %53 = phi i32 [ 0, %32 ], [ %75, %74 ]\l  %54 = mul nsw i32 %53, %4\l  %55 = add nsw i32 %54, %30\l  br i1 %33, label %56, label %74\l|{<s0>T|<s1>F}}"];
	Node0x6075830:s0 -> Node0x60763b0;
	Node0x6075830:s1 -> Node0x6076150;
	Node0x60763b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%56:\l56:                                               \l  %57 = add i32 %54, %28\l  %58 = icmp eq i32 %53, 0\l  %59 = add i32 %34, %55\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  %62 = icmp ugt i32 %53, 1\l  %63 = add i32 %36, %55\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  %66 = add i32 %38, %55\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %69 = add i32 %41, %55\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %1, i64 %70\l  %72 = sext i32 %55 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %1, i64 %72\l  br label %77\l}"];
	Node0x60763b0 -> Node0x6077030;
	Node0x6076150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%74:\l74:                                               \l  %75 = add nuw nsw i32 %53, 1\l  %76 = icmp eq i32 %75, %3\l  br i1 %76, label %42, label %52, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x6076150:s0 -> Node0x60758f0;
	Node0x6076150:s1 -> Node0x6075830;
	Node0x6077030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi i32 [ 0, %56 ], [ %104, %127 ]\l  %79 = mul nsw i32 %78, %20\l  %80 = add i32 %57, %79\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %2, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !9\l  br i1 %58, label %92, label %84\l|{<s0>T|<s1>F}}"];
	Node0x6077030:s0 -> Node0x60778d0;
	Node0x6077030:s1 -> Node0x6077960;
	Node0x6077960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%84:\l84:                                               \l  %85 = sub nsw i32 %80, %4\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %2, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !9\l  %89 = load float, float addrspace(1)* %61, align 4, !tbaa !9\l  %90 = fmul contract float %88, %89\l  %91 = fadd contract float %83, %90\l  br label %92\l}"];
	Node0x6077960 -> Node0x60778d0;
	Node0x60778d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%92:\l92:                                               \l  %93 = phi float [ %91, %84 ], [ %83, %77 ]\l  br i1 %62, label %94, label %102\l|{<s0>T|<s1>F}}"];
	Node0x60778d0:s0 -> Node0x6078570;
	Node0x60778d0:s1 -> Node0x60785c0;
	Node0x6078570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%94:\l94:                                               \l  %95 = sub nsw i32 %80, %35\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %2, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !9\l  %99 = load float, float addrspace(1)* %65, align 4, !tbaa !9\l  %100 = fmul contract float %98, %99\l  %101 = fadd contract float %93, %100\l  br label %102\l}"];
	Node0x6078570 -> Node0x60785c0;
	Node0x60785c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  %103 = phi float [ %101, %94 ], [ %93, %92 ]\l  %104 = add nuw nsw i32 %78, 1\l  %105 = icmp sge i32 %104, %5\l  %106 = select i1 %58, i1 true, i1 %105\l  br i1 %106, label %115, label %107\l|{<s0>T|<s1>F}}"];
	Node0x60785c0:s0 -> Node0x6078d50;
	Node0x60785c0:s1 -> Node0x6078da0;
	Node0x6078da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%107:\l107:                                              \l  %108 = add i32 %34, %80\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %2, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !9\l  %112 = load float, float addrspace(1)* %68, align 4, !tbaa !9\l  %113 = fmul contract float %111, %112\l  %114 = fadd contract float %103, %113\l  br label %115\l}"];
	Node0x6078da0 -> Node0x6078d50;
	Node0x6078d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%115:\l115:                                              \l  %116 = phi float [ %114, %107 ], [ %103, %102 ]\l  %117 = icmp eq i32 %78, 0\l  %118 = select i1 %58, i1 true, i1 %117\l  br i1 %118, label %127, label %119\l|{<s0>T|<s1>F}}"];
	Node0x6078d50:s0 -> Node0x6077380;
	Node0x6078d50:s1 -> Node0x60794a0;
	Node0x60794a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%119:\l119:                                              \l  %120 = sub i32 %80, %39\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %2, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !9\l  %124 = load float, float addrspace(1)* %71, align 4, !tbaa !9\l  %125 = fmul contract float %123, %124\l  %126 = fadd contract float %116, %125\l  br label %127\l}"];
	Node0x60794a0 -> Node0x6077380;
	Node0x6077380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%127:\l127:                                              \l  %128 = phi float [ %126, %119 ], [ %116, %115 ]\l  store float %128, float addrspace(1)* %82, align 4, !tbaa !9\l  %129 = load float, float addrspace(1)* %73, align 4, !tbaa !9\l  %130 = fmul contract float %128, %129\l  %131 = getelementptr inbounds float, float addrspace(1)* %7, i64 %81\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !9\l  %133 = fadd contract float %132, %130\l  store float %133, float addrspace(1)* %131, align 4, !tbaa !9\l  %134 = icmp eq i32 %104, %5\l  br i1 %134, label %74, label %77, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x6077380:s0 -> Node0x6076150;
	Node0x6077380:s1 -> Node0x6077030;
	Node0x6076060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%135:\l135:                                              \l  %136 = phi i32 [ 0, %50 ], [ %191, %135 ]\l  %137 = phi i32 [ 0, %50 ], [ %192, %135 ]\l  %138 = mul nsw i32 %136, %4\l  %139 = add nsw i32 %138, %30\l  %140 = add nsw i32 %138, %28\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %2, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !9\l  %144 = add nsw i32 %139, %44\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %1, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !9\l  %148 = fmul contract float %143, %147\l  %149 = getelementptr inbounds float, float addrspace(1)* %7, i64 %141\l  %150 = load float, float addrspace(1)* %149, align 4, !tbaa !9\l  %151 = fadd contract float %150, %148\l  store float %151, float addrspace(1)* %149, align 4, !tbaa !9\l  %152 = add nsw i32 %140, %46\l  %153 = sext i32 %152 to i64\l  %154 = getelementptr inbounds float, float addrspace(1)* %2, i64 %153\l  %155 = load float, float addrspace(1)* %154, align 4, !tbaa !9\l  %156 = add nsw i32 %139, %47\l  %157 = sext i32 %156 to i64\l  %158 = getelementptr inbounds float, float addrspace(1)* %1, i64 %157\l  %159 = load float, float addrspace(1)* %158, align 4, !tbaa !9\l  %160 = fmul contract float %155, %159\l  %161 = getelementptr inbounds float, float addrspace(1)* %7, i64 %153\l  %162 = load float, float addrspace(1)* %161, align 4, !tbaa !9\l  %163 = fadd contract float %162, %160\l  store float %163, float addrspace(1)* %161, align 4, !tbaa !9\l  %164 = or i32 %136, 1\l  %165 = mul nsw i32 %164, %4\l  %166 = add nsw i32 %165, %30\l  %167 = add nsw i32 %165, %28\l  %168 = sext i32 %167 to i64\l  %169 = getelementptr inbounds float, float addrspace(1)* %2, i64 %168\l  %170 = load float, float addrspace(1)* %169, align 4, !tbaa !9\l  %171 = add nsw i32 %166, %44\l  %172 = sext i32 %171 to i64\l  %173 = getelementptr inbounds float, float addrspace(1)* %1, i64 %172\l  %174 = load float, float addrspace(1)* %173, align 4, !tbaa !9\l  %175 = fmul contract float %170, %174\l  %176 = getelementptr inbounds float, float addrspace(1)* %7, i64 %168\l  %177 = load float, float addrspace(1)* %176, align 4, !tbaa !9\l  %178 = fadd contract float %177, %175\l  store float %178, float addrspace(1)* %176, align 4, !tbaa !9\l  %179 = add nsw i32 %167, %46\l  %180 = sext i32 %179 to i64\l  %181 = getelementptr inbounds float, float addrspace(1)* %2, i64 %180\l  %182 = load float, float addrspace(1)* %181, align 4, !tbaa !9\l  %183 = add nsw i32 %166, %47\l  %184 = sext i32 %183 to i64\l  %185 = getelementptr inbounds float, float addrspace(1)* %1, i64 %184\l  %186 = load float, float addrspace(1)* %185, align 4, !tbaa !9\l  %187 = fmul contract float %182, %186\l  %188 = getelementptr inbounds float, float addrspace(1)* %7, i64 %180\l  %189 = load float, float addrspace(1)* %188, align 4, !tbaa !9\l  %190 = fadd contract float %189, %187\l  store float %190, float addrspace(1)* %188, align 4, !tbaa !9\l  %191 = add nuw nsw i32 %136, 2\l  %192 = add i32 %137, 2\l  %193 = icmp eq i32 %192, %51\l  br i1 %193, label %194, label %135, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x6076060:s0 -> Node0x6075e10;
	Node0x6076060:s1 -> Node0x6076060;
	Node0x6075e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%194:\l194:                                              \l  %195 = phi i32 [ 0, %43 ], [ %191, %135 ]\l  %196 = icmp eq i32 %48, 0\l  br i1 %196, label %224, label %197\l|{<s0>T|<s1>F}}"];
	Node0x6075e10:s0 -> Node0x60748b0;
	Node0x6075e10:s1 -> Node0x607c820;
	Node0x607c820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%197:\l197:                                              \l  %198 = mul nsw i32 %195, %4\l  %199 = add nsw i32 %198, %30\l  %200 = add nsw i32 %198, %28\l  %201 = sext i32 %200 to i64\l  %202 = getelementptr inbounds float, float addrspace(1)* %2, i64 %201\l  %203 = load float, float addrspace(1)* %202, align 4, !tbaa !9\l  %204 = add nsw i32 %199, %44\l  %205 = sext i32 %204 to i64\l  %206 = getelementptr inbounds float, float addrspace(1)* %1, i64 %205\l  %207 = load float, float addrspace(1)* %206, align 4, !tbaa !9\l  %208 = fmul contract float %203, %207\l  %209 = getelementptr inbounds float, float addrspace(1)* %7, i64 %201\l  %210 = load float, float addrspace(1)* %209, align 4, !tbaa !9\l  %211 = fadd contract float %210, %208\l  store float %211, float addrspace(1)* %209, align 4, !tbaa !9\l  %212 = add nsw i32 %200, %46\l  %213 = sext i32 %212 to i64\l  %214 = getelementptr inbounds float, float addrspace(1)* %2, i64 %213\l  %215 = load float, float addrspace(1)* %214, align 4, !tbaa !9\l  %216 = add nsw i32 %199, %47\l  %217 = sext i32 %216 to i64\l  %218 = getelementptr inbounds float, float addrspace(1)* %1, i64 %217\l  %219 = load float, float addrspace(1)* %218, align 4, !tbaa !9\l  %220 = fmul contract float %215, %219\l  %221 = getelementptr inbounds float, float addrspace(1)* %7, i64 %213\l  %222 = load float, float addrspace(1)* %221, align 4, !tbaa !9\l  %223 = fadd contract float %222, %220\l  store float %223, float addrspace(1)* %221, align 4, !tbaa !9\l  br label %224\l}"];
	Node0x607c820 -> Node0x60748b0;
	Node0x60748b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%224:\l224:                                              \l  ret void\l}"];
}
