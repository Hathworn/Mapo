digraph "CFG for '_Z23sga_right_data_backwardiPKfPfiiiiS1_' function" {
	label="CFG for '_Z23sga_right_data_backwardiPKfPfiiiiS1_' function";

	Node0x499b4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = icmp slt i32 %17, %0\l  br i1 %18, label %19, label %278\l|{<s0>T|<s1>F}}"];
	Node0x499b4d0:s0 -> Node0x499d440;
	Node0x499b4d0:s1 -> Node0x499d4d0;
	Node0x499d440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%19:\l19:                                               \l  %20 = mul nsw i32 %4, %3\l  %21 = freeze i32 %17\l  %22 = freeze i32 %3\l  %23 = sdiv i32 %21, %22\l  %24 = mul nsw i32 %23, %20\l  %25 = mul nsw i32 %24, %5\l  %26 = mul i32 %23, %22\l  %27 = sub i32 %21, %26\l  %28 = mul nsw i32 %27, %4\l  %29 = add nsw i32 %25, %28\l  %30 = mul nsw i32 %24, %6\l  %31 = add nsw i32 %30, %28\l  %32 = icmp sgt i32 %4, 0\l  br i1 %32, label %33, label %278\l|{<s0>T|<s1>F}}"];
	Node0x499d440:s0 -> Node0x499d2a0;
	Node0x499d440:s1 -> Node0x499d4d0;
	Node0x499d2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%33:\l33:                                               \l  %34 = icmp sgt i32 %5, 0\l  %35 = shl nsw i32 %20, 1\l  %36 = add i32 %35, 2\l  %37 = mul nsw i32 %20, 3\l  %38 = shl nsw i32 %20, 2\l  br label %51\l}"];
	Node0x499d2a0 -> Node0x499e290;
	Node0x499e350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%39:\l39:                                               \l  %40 = icmp sgt i32 %52, 1\l  br i1 %40, label %51, label %41, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x499e350:s0 -> Node0x499e290;
	Node0x499e350:s1 -> Node0x499e4a0;
	Node0x499e4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%41:\l41:                                               \l  br i1 %32, label %42, label %278\l|{<s0>T|<s1>F}}"];
	Node0x499e4a0:s0 -> Node0x499e750;
	Node0x499e4a0:s1 -> Node0x499d4d0;
	Node0x499e750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%42:\l42:                                               \l  %43 = mul nsw i32 %20, 3\l  %44 = add nsw i32 %5, -1\l  %45 = mul nsw i32 %44, %20\l  %46 = shl nsw i32 %20, 2\l  %47 = and i32 %4, 3\l  %48 = icmp ult i32 %4, 4\l  br i1 %48, label %244, label %49\l|{<s0>T|<s1>F}}"];
	Node0x499e750:s0 -> Node0x499ebe0;
	Node0x499e750:s1 -> Node0x499ec30;
	Node0x499ec30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%49:\l49:                                               \l  %50 = and i32 %4, -4\l  br label %135\l}"];
	Node0x499ec30 -> Node0x499ee30;
	Node0x499e290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%51:\l51:                                               \l  %52 = phi i32 [ %4, %33 ], [ %53, %39 ]\l  %53 = add nsw i32 %52, -1\l  %54 = add nsw i32 %53, %31\l  br i1 %34, label %55, label %39\l|{<s0>T|<s1>F}}"];
	Node0x499e290:s0 -> Node0x499f0f0;
	Node0x499e290:s1 -> Node0x499e350;
	Node0x499f0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%55:\l55:                                               \l  %56 = icmp slt i32 %52, %4\l  %57 = add i32 %52, %31\l  %58 = add nsw i32 %57, %20\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  %61 = add nuw nsw i32 %52, 1\l  %62 = icmp slt i32 %61, %4\l  %63 = add i32 %36, %54\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  %66 = add nsw i32 %57, %37\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %69 = add nsw i32 %57, %38\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %1, i64 %70\l  %72 = sext i32 %54 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %1, i64 %72\l  br label %74\l}"];
	Node0x499f0f0 -> Node0x499fd90;
	Node0x499fd90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = phi i32 [ 0, %55 ], [ %102, %127 ]\l  %76 = mul nsw i32 %75, %20\l  %77 = add nsw i32 %76, %29\l  %78 = add nsw i32 %77, %53\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %2, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !9\l  br i1 %56, label %82, label %90\l|{<s0>T|<s1>F}}"];
	Node0x499fd90:s0 -> Node0x49a03f0;
	Node0x499fd90:s1 -> Node0x49a0480;
	Node0x49a03f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%82:\l82:                                               \l  %83 = add i32 %77, %52\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %2, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !9\l  %87 = load float, float addrspace(1)* %60, align 4, !tbaa !9\l  %88 = fmul contract float %86, %87\l  %89 = fadd contract float %81, %88\l  br label %90\l}"];
	Node0x49a03f0 -> Node0x49a0480;
	Node0x49a0480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = phi float [ %89, %82 ], [ %81, %74 ]\l  br i1 %62, label %92, label %100\l|{<s0>T|<s1>F}}"];
	Node0x49a0480:s0 -> Node0x49a1090;
	Node0x49a0480:s1 -> Node0x49a10e0;
	Node0x49a1090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%92:\l92:                                               \l  %93 = add nsw i32 %78, 2\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %2, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !9\l  %97 = load float, float addrspace(1)* %65, align 4, !tbaa !9\l  %98 = fmul contract float %96, %97\l  %99 = fadd contract float %91, %98\l  br label %100\l}"];
	Node0x49a1090 -> Node0x49a10e0;
	Node0x49a10e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%100:\l100:                                              \l  %101 = phi float [ %99, %92 ], [ %91, %90 ]\l  %102 = add nuw nsw i32 %75, 1\l  %103 = icmp slt i32 %102, %5\l  %104 = select i1 %56, i1 %103, i1 false\l  br i1 %104, label %105, label %114\l|{<s0>T|<s1>F}}"];
	Node0x49a10e0:s0 -> Node0x49a1870;
	Node0x49a10e0:s1 -> Node0x49a18c0;
	Node0x49a1870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%105:\l105:                                              \l  %106 = add i32 %77, %52\l  %107 = add nsw i32 %106, %20\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %2, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !9\l  %111 = load float, float addrspace(1)* %68, align 4, !tbaa !9\l  %112 = fmul contract float %110, %111\l  %113 = fadd contract float %101, %112\l  br label %114\l}"];
	Node0x49a1870 -> Node0x49a18c0;
	Node0x49a18c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  %115 = phi float [ %113, %105 ], [ %101, %100 ]\l  %116 = icmp ne i32 %75, 0\l  %117 = select i1 %56, i1 %116, i1 false\l  br i1 %117, label %118, label %127\l|{<s0>T|<s1>F}}"];
	Node0x49a18c0:s0 -> Node0x49a2050;
	Node0x49a18c0:s1 -> Node0x499fe50;
	Node0x49a2050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%118:\l118:                                              \l  %119 = add i32 %77, %52\l  %120 = sub i32 %119, %20\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %2, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !9\l  %124 = load float, float addrspace(1)* %71, align 4, !tbaa !9\l  %125 = fmul contract float %123, %124\l  %126 = fadd contract float %115, %125\l  br label %127\l}"];
	Node0x49a2050 -> Node0x499fe50;
	Node0x499fe50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%127:\l127:                                              \l  %128 = phi float [ %126, %118 ], [ %115, %114 ]\l  store float %128, float addrspace(1)* %80, align 4, !tbaa !9\l  %129 = load float, float addrspace(1)* %73, align 4, !tbaa !9\l  %130 = fmul contract float %128, %129\l  %131 = getelementptr inbounds float, float addrspace(1)* %7, i64 %79\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !9\l  %133 = fadd contract float %132, %130\l  store float %133, float addrspace(1)* %131, align 4, !tbaa !9\l  %134 = icmp eq i32 %102, %5\l  br i1 %134, label %39, label %74, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x499fe50:s0 -> Node0x499e350;
	Node0x499fe50:s1 -> Node0x499fd90;
	Node0x499ee30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%135:\l135:                                              \l  %136 = phi i32 [ 0, %49 ], [ %241, %135 ]\l  %137 = phi i32 [ 0, %49 ], [ %242, %135 ]\l  %138 = add nsw i32 %136, %31\l  %139 = add nsw i32 %136, %29\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %2, i64 %140\l  %142 = load float, float addrspace(1)* %141, align 4, !tbaa !9\l  %143 = add nsw i32 %138, %43\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %1, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !9\l  %147 = fmul contract float %142, %146\l  %148 = getelementptr inbounds float, float addrspace(1)* %7, i64 %140\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !9\l  %150 = fadd contract float %149, %147\l  store float %150, float addrspace(1)* %148, align 4, !tbaa !9\l  %151 = add nsw i32 %139, %45\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds float, float addrspace(1)* %2, i64 %152\l  %154 = load float, float addrspace(1)* %153, align 4, !tbaa !9\l  %155 = add nsw i32 %138, %46\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds float, float addrspace(1)* %1, i64 %156\l  %158 = load float, float addrspace(1)* %157, align 4, !tbaa !9\l  %159 = fmul contract float %154, %158\l  %160 = getelementptr inbounds float, float addrspace(1)* %7, i64 %152\l  %161 = load float, float addrspace(1)* %160, align 4, !tbaa !9\l  %162 = fadd contract float %161, %159\l  store float %162, float addrspace(1)* %160, align 4, !tbaa !9\l  %163 = or i32 %136, 1\l  %164 = add nsw i32 %163, %31\l  %165 = add nsw i32 %163, %29\l  %166 = sext i32 %165 to i64\l  %167 = getelementptr inbounds float, float addrspace(1)* %2, i64 %166\l  %168 = load float, float addrspace(1)* %167, align 4, !tbaa !9\l  %169 = add nsw i32 %164, %43\l  %170 = sext i32 %169 to i64\l  %171 = getelementptr inbounds float, float addrspace(1)* %1, i64 %170\l  %172 = load float, float addrspace(1)* %171, align 4, !tbaa !9\l  %173 = fmul contract float %168, %172\l  %174 = getelementptr inbounds float, float addrspace(1)* %7, i64 %166\l  %175 = load float, float addrspace(1)* %174, align 4, !tbaa !9\l  %176 = fadd contract float %175, %173\l  store float %176, float addrspace(1)* %174, align 4, !tbaa !9\l  %177 = add nsw i32 %165, %45\l  %178 = sext i32 %177 to i64\l  %179 = getelementptr inbounds float, float addrspace(1)* %2, i64 %178\l  %180 = load float, float addrspace(1)* %179, align 4, !tbaa !9\l  %181 = add nsw i32 %164, %46\l  %182 = sext i32 %181 to i64\l  %183 = getelementptr inbounds float, float addrspace(1)* %1, i64 %182\l  %184 = load float, float addrspace(1)* %183, align 4, !tbaa !9\l  %185 = fmul contract float %180, %184\l  %186 = getelementptr inbounds float, float addrspace(1)* %7, i64 %178\l  %187 = load float, float addrspace(1)* %186, align 4, !tbaa !9\l  %188 = fadd contract float %187, %185\l  store float %188, float addrspace(1)* %186, align 4, !tbaa !9\l  %189 = or i32 %136, 2\l  %190 = add nsw i32 %189, %31\l  %191 = add nsw i32 %189, %29\l  %192 = sext i32 %191 to i64\l  %193 = getelementptr inbounds float, float addrspace(1)* %2, i64 %192\l  %194 = load float, float addrspace(1)* %193, align 4, !tbaa !9\l  %195 = add nsw i32 %190, %43\l  %196 = sext i32 %195 to i64\l  %197 = getelementptr inbounds float, float addrspace(1)* %1, i64 %196\l  %198 = load float, float addrspace(1)* %197, align 4, !tbaa !9\l  %199 = fmul contract float %194, %198\l  %200 = getelementptr inbounds float, float addrspace(1)* %7, i64 %192\l  %201 = load float, float addrspace(1)* %200, align 4, !tbaa !9\l  %202 = fadd contract float %201, %199\l  store float %202, float addrspace(1)* %200, align 4, !tbaa !9\l  %203 = add nsw i32 %191, %45\l  %204 = sext i32 %203 to i64\l  %205 = getelementptr inbounds float, float addrspace(1)* %2, i64 %204\l  %206 = load float, float addrspace(1)* %205, align 4, !tbaa !9\l  %207 = add nsw i32 %190, %46\l  %208 = sext i32 %207 to i64\l  %209 = getelementptr inbounds float, float addrspace(1)* %1, i64 %208\l  %210 = load float, float addrspace(1)* %209, align 4, !tbaa !9\l  %211 = fmul contract float %206, %210\l  %212 = getelementptr inbounds float, float addrspace(1)* %7, i64 %204\l  %213 = load float, float addrspace(1)* %212, align 4, !tbaa !9\l  %214 = fadd contract float %213, %211\l  store float %214, float addrspace(1)* %212, align 4, !tbaa !9\l  %215 = or i32 %136, 3\l  %216 = add nsw i32 %215, %31\l  %217 = add nsw i32 %215, %29\l  %218 = sext i32 %217 to i64\l  %219 = getelementptr inbounds float, float addrspace(1)* %2, i64 %218\l  %220 = load float, float addrspace(1)* %219, align 4, !tbaa !9\l  %221 = add nsw i32 %216, %43\l  %222 = sext i32 %221 to i64\l  %223 = getelementptr inbounds float, float addrspace(1)* %1, i64 %222\l  %224 = load float, float addrspace(1)* %223, align 4, !tbaa !9\l  %225 = fmul contract float %220, %224\l  %226 = getelementptr inbounds float, float addrspace(1)* %7, i64 %218\l  %227 = load float, float addrspace(1)* %226, align 4, !tbaa !9\l  %228 = fadd contract float %227, %225\l  store float %228, float addrspace(1)* %226, align 4, !tbaa !9\l  %229 = add nsw i32 %217, %45\l  %230 = sext i32 %229 to i64\l  %231 = getelementptr inbounds float, float addrspace(1)* %2, i64 %230\l  %232 = load float, float addrspace(1)* %231, align 4, !tbaa !9\l  %233 = add nsw i32 %216, %46\l  %234 = sext i32 %233 to i64\l  %235 = getelementptr inbounds float, float addrspace(1)* %1, i64 %234\l  %236 = load float, float addrspace(1)* %235, align 4, !tbaa !9\l  %237 = fmul contract float %232, %236\l  %238 = getelementptr inbounds float, float addrspace(1)* %7, i64 %230\l  %239 = load float, float addrspace(1)* %238, align 4, !tbaa !9\l  %240 = fadd contract float %239, %237\l  store float %240, float addrspace(1)* %238, align 4, !tbaa !9\l  %241 = add nuw nsw i32 %136, 4\l  %242 = add i32 %137, 4\l  %243 = icmp eq i32 %242, %50\l  br i1 %243, label %244, label %135, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x499ee30:s0 -> Node0x499ebe0;
	Node0x499ee30:s1 -> Node0x499ee30;
	Node0x499ebe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%244:\l244:                                              \l  %245 = phi i32 [ 0, %42 ], [ %241, %135 ]\l  %246 = icmp eq i32 %47, 0\l  br i1 %246, label %278, label %247\l|{<s0>T|<s1>F}}"];
	Node0x499ebe0:s0 -> Node0x499d4d0;
	Node0x499ebe0:s1 -> Node0x49a0d10;
	Node0x49a0d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%247:\l247:                                              \l  %248 = phi i32 [ %275, %247 ], [ %245, %244 ]\l  %249 = phi i32 [ %276, %247 ], [ 0, %244 ]\l  %250 = add nsw i32 %248, %31\l  %251 = add nsw i32 %248, %29\l  %252 = sext i32 %251 to i64\l  %253 = getelementptr inbounds float, float addrspace(1)* %2, i64 %252\l  %254 = load float, float addrspace(1)* %253, align 4, !tbaa !9\l  %255 = add nsw i32 %250, %43\l  %256 = sext i32 %255 to i64\l  %257 = getelementptr inbounds float, float addrspace(1)* %1, i64 %256\l  %258 = load float, float addrspace(1)* %257, align 4, !tbaa !9\l  %259 = fmul contract float %254, %258\l  %260 = getelementptr inbounds float, float addrspace(1)* %7, i64 %252\l  %261 = load float, float addrspace(1)* %260, align 4, !tbaa !9\l  %262 = fadd contract float %261, %259\l  store float %262, float addrspace(1)* %260, align 4, !tbaa !9\l  %263 = add nsw i32 %251, %45\l  %264 = sext i32 %263 to i64\l  %265 = getelementptr inbounds float, float addrspace(1)* %2, i64 %264\l  %266 = load float, float addrspace(1)* %265, align 4, !tbaa !9\l  %267 = add nsw i32 %250, %46\l  %268 = sext i32 %267 to i64\l  %269 = getelementptr inbounds float, float addrspace(1)* %1, i64 %268\l  %270 = load float, float addrspace(1)* %269, align 4, !tbaa !9\l  %271 = fmul contract float %266, %270\l  %272 = getelementptr inbounds float, float addrspace(1)* %7, i64 %264\l  %273 = load float, float addrspace(1)* %272, align 4, !tbaa !9\l  %274 = fadd contract float %273, %271\l  store float %274, float addrspace(1)* %272, align 4, !tbaa !9\l  %275 = add nuw nsw i32 %248, 1\l  %276 = add i32 %249, 1\l  %277 = icmp eq i32 %276, %47\l  br i1 %277, label %278, label %247, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x49a0d10:s0 -> Node0x499d4d0;
	Node0x49a0d10:s1 -> Node0x49a0d10;
	Node0x499d4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%278:\l278:                                              \l  ret void\l}"];
}
