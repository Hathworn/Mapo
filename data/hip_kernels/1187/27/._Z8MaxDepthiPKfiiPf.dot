digraph "CFG for '_Z8MaxDepthiPKfiiPf' function" {
	label="CFG for '_Z8MaxDepthiPKfiiPf' function";

	Node0x5bfcc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = freeze i32 %14\l  %16 = icmp slt i32 %15, %0\l  br i1 %16, label %17, label %171\l|{<s0>T|<s1>F}}"];
	Node0x5bfcc30:s0 -> Node0x5bfd720;
	Node0x5bfcc30:s1 -> Node0x5bfec70;
	Node0x5bfd720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%17:\l17:                                               \l  %18 = srem i32 %15, %2\l  %19 = sub nsw i32 %15, %18\l  %20 = mul nsw i32 %19, %3\l  %21 = add nsw i32 %20, %18\l  %22 = icmp sgt i32 %3, 1\l  br i1 %22, label %23, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5bfd720:s0 -> Node0x5bff080;
	Node0x5bfd720:s1 -> Node0x5bff0d0;
	Node0x5bff080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%23:\l23:                                               \l  %24 = add i32 %3, -1\l  %25 = add i32 %3, -2\l  %26 = and i32 %24, 7\l  %27 = icmp ult i32 %25, 7\l  br i1 %27, label %30, label %28\l|{<s0>T|<s1>F}}"];
	Node0x5bff080:s0 -> Node0x5bff4e0;
	Node0x5bff080:s1 -> Node0x5bff530;
	Node0x5bff530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%28:\l28:                                               \l  %29 = and i32 %24, -8\l  br label %61\l}"];
	Node0x5bff530 -> Node0x5bff730;
	Node0x5bff4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%30:\l30:                                               \l  %31 = phi i32 [ undef, %23 ], [ %167, %61 ]\l  %32 = phi i32 [ 1, %23 ], [ %168, %61 ]\l  %33 = phi i32 [ 0, %23 ], [ %167, %61 ]\l  %34 = icmp eq i32 %26, 0\l  br i1 %34, label %54, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5bff4e0:s0 -> Node0x5c000b0;
	Node0x5bff4e0:s1 -> Node0x5c00140;
	Node0x5c00140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i32 [ %51, %35 ], [ %32, %30 ]\l  %37 = phi i32 [ %50, %35 ], [ %33, %30 ]\l  %38 = phi i32 [ %52, %35 ], [ 0, %30 ]\l  %39 = mul nsw i32 %37, %2\l  %40 = add nsw i32 %39, %21\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = mul nsw i32 %36, %2\l  %45 = add nsw i32 %44, %21\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %49 = fcmp contract olt float %43, %48\l  %50 = select i1 %49, i32 %36, i32 %37\l  %51 = add nuw nsw i32 %36, 1\l  %52 = add i32 %38, 1\l  %53 = icmp eq i32 %52, %26\l  br i1 %53, label %54, label %35, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5c00140:s0 -> Node0x5c000b0;
	Node0x5c00140:s1 -> Node0x5c00140;
	Node0x5c000b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%54:\l54:                                               \l  %55 = phi i32 [ %31, %30 ], [ %50, %35 ]\l  %56 = sitofp i32 %55 to float\l  br label %57\l}"];
	Node0x5c000b0 -> Node0x5bff0d0;
	Node0x5bff0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%57:\l57:                                               \l  %58 = phi float [ 0.000000e+00, %17 ], [ %56, %54 ]\l  %59 = sext i32 %15 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %4, i64 %59\l  store float %58, float addrspace(1)* %60, align 4, !tbaa !7\l  br label %171\l}"];
	Node0x5bff0d0 -> Node0x5bfec70;
	Node0x5bff730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%61:\l61:                                               \l  %62 = phi i32 [ 1, %28 ], [ %168, %61 ]\l  %63 = phi i32 [ 0, %28 ], [ %167, %61 ]\l  %64 = phi i32 [ 0, %28 ], [ %169, %61 ]\l  %65 = mul nsw i32 %63, %2\l  %66 = add nsw i32 %65, %21\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %70 = mul nsw i32 %62, %2\l  %71 = add nsw i32 %70, %21\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %1, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %75 = fcmp contract olt float %69, %74\l  %76 = select i1 %75, i32 %62, i32 %63\l  %77 = add nuw nsw i32 %62, 1\l  %78 = mul nsw i32 %76, %2\l  %79 = add nsw i32 %78, %21\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %83 = mul nsw i32 %77, %2\l  %84 = add nsw i32 %83, %21\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %1, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %88 = fcmp contract olt float %82, %87\l  %89 = select i1 %88, i32 %77, i32 %76\l  %90 = add nuw nsw i32 %62, 2\l  %91 = mul nsw i32 %89, %2\l  %92 = add nsw i32 %91, %21\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %1, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %96 = mul nsw i32 %90, %2\l  %97 = add nsw i32 %96, %21\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %1, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %101 = fcmp contract olt float %95, %100\l  %102 = select i1 %101, i32 %90, i32 %89\l  %103 = add nuw nsw i32 %62, 3\l  %104 = mul nsw i32 %102, %2\l  %105 = add nsw i32 %104, %21\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %1, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %109 = mul nsw i32 %103, %2\l  %110 = add nsw i32 %109, %21\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %1, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %114 = fcmp contract olt float %108, %113\l  %115 = select i1 %114, i32 %103, i32 %102\l  %116 = add nuw nsw i32 %62, 4\l  %117 = mul nsw i32 %115, %2\l  %118 = add nsw i32 %117, %21\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %1, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %122 = mul nsw i32 %116, %2\l  %123 = add nsw i32 %122, %21\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %1, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %127 = fcmp contract olt float %121, %126\l  %128 = select i1 %127, i32 %116, i32 %115\l  %129 = add nuw nsw i32 %62, 5\l  %130 = mul nsw i32 %128, %2\l  %131 = add nsw i32 %130, %21\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %1, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %135 = mul nsw i32 %129, %2\l  %136 = add nsw i32 %135, %21\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %1, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %140 = fcmp contract olt float %134, %139\l  %141 = select i1 %140, i32 %129, i32 %128\l  %142 = add nuw nsw i32 %62, 6\l  %143 = mul nsw i32 %141, %2\l  %144 = add nsw i32 %143, %21\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %1, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %148 = mul nsw i32 %142, %2\l  %149 = add nsw i32 %148, %21\l  %150 = sext i32 %149 to i64\l  %151 = getelementptr inbounds float, float addrspace(1)* %1, i64 %150\l  %152 = load float, float addrspace(1)* %151, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %153 = fcmp contract olt float %147, %152\l  %154 = select i1 %153, i32 %142, i32 %141\l  %155 = add nuw nsw i32 %62, 7\l  %156 = mul nsw i32 %154, %2\l  %157 = add nsw i32 %156, %21\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %1, i64 %158\l  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %161 = mul nsw i32 %155, %2\l  %162 = add nsw i32 %161, %21\l  %163 = sext i32 %162 to i64\l  %164 = getelementptr inbounds float, float addrspace(1)* %1, i64 %163\l  %165 = load float, float addrspace(1)* %164, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %166 = fcmp contract olt float %160, %165\l  %167 = select i1 %166, i32 %155, i32 %154\l  %168 = add nuw nsw i32 %62, 8\l  %169 = add i32 %64, 8\l  %170 = icmp eq i32 %169, %29\l  br i1 %170, label %30, label %61, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5bff730:s0 -> Node0x5bff4e0;
	Node0x5bff730:s1 -> Node0x5bff730;
	Node0x5bfec70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%171:\l171:                                              \l  ret void\l}"];
}
