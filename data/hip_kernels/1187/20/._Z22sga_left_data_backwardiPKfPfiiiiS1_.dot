digraph "CFG for '_Z22sga_left_data_backwardiPKfPfiiiiS1_' function" {
	label="CFG for '_Z22sga_left_data_backwardiPKfPfiiiiS1_' function";

	Node0x4c09480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = icmp slt i32 %17, %0\l  br i1 %18, label %19, label %277\l|{<s0>T|<s1>F}}"];
	Node0x4c09480:s0 -> Node0x4c0b3f0;
	Node0x4c09480:s1 -> Node0x4c0b480;
	Node0x4c0b3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%19:\l19:                                               \l  %20 = mul nsw i32 %4, %3\l  %21 = freeze i32 %17\l  %22 = freeze i32 %3\l  %23 = sdiv i32 %21, %22\l  %24 = mul nsw i32 %23, %20\l  %25 = mul nsw i32 %24, %5\l  %26 = mul i32 %23, %22\l  %27 = sub i32 %21, %26\l  %28 = mul nsw i32 %27, %4\l  %29 = add nsw i32 %25, %28\l  %30 = mul nsw i32 %24, %6\l  %31 = add nsw i32 %30, %28\l  %32 = icmp sgt i32 %4, 0\l  br i1 %32, label %33, label %277\l|{<s0>T|<s1>F}}"];
	Node0x4c0b3f0:s0 -> Node0x4c0b250;
	Node0x4c0b3f0:s1 -> Node0x4c0b480;
	Node0x4c0b250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%33:\l33:                                               \l  %34 = icmp sgt i32 %5, 0\l  %35 = shl nsw i32 %20, 1\l  %36 = add nsw i32 %35, -2\l  %37 = add nsw i32 %20, -1\l  %38 = mul nsw i32 %20, 3\l  %39 = shl nsw i32 %20, 2\l  br label %50\l}"];
	Node0x4c0b250 -> Node0x4c0c330;
	Node0x4c0c3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%40:\l40:                                               \l  br i1 %32, label %41, label %277\l|{<s0>T|<s1>F}}"];
	Node0x4c0c3f0:s0 -> Node0x4c0c480;
	Node0x4c0c3f0:s1 -> Node0x4c0b480;
	Node0x4c0c480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%41:\l41:                                               \l  %42 = mul nsw i32 %20, 3\l  %43 = add nsw i32 %5, -1\l  %44 = mul nsw i32 %43, %20\l  %45 = shl nsw i32 %20, 2\l  %46 = and i32 %4, 3\l  %47 = icmp ult i32 %4, 4\l  br i1 %47, label %243, label %48\l|{<s0>T|<s1>F}}"];
	Node0x4c0c480:s0 -> Node0x4c0c910;
	Node0x4c0c480:s1 -> Node0x4c0c960;
	Node0x4c0c960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%48:\l48:                                               \l  %49 = and i32 %4, -4\l  br label %134\l}"];
	Node0x4c0c960 -> Node0x4c0cb60;
	Node0x4c0c330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%50:\l50:                                               \l  %51 = phi i32 [ 0, %33 ], [ %73, %72 ]\l  %52 = add nsw i32 %51, %31\l  br i1 %34, label %53, label %72\l|{<s0>T|<s1>F}}"];
	Node0x4c0c330:s0 -> Node0x4c0ce20;
	Node0x4c0c330:s1 -> Node0x4c0cc50;
	Node0x4c0ce20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%53:\l53:                                               \l  %54 = add i32 %51, %29\l  %55 = icmp eq i32 %51, 0\l  %56 = add nsw i32 %52, -1\l  %57 = add nsw i32 %56, %20\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %1, i64 %58\l  %60 = icmp ugt i32 %51, 1\l  %61 = add i32 %36, %52\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %1, i64 %62\l  %64 = add nsw i32 %56, %38\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %65\l  %67 = add nsw i32 %56, %39\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %1, i64 %68\l  %70 = sext i32 %52 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %1, i64 %70\l  br label %75\l}"];
	Node0x4c0ce20 -> Node0x4c0db30;
	Node0x4c0cc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%72:\l72:                                               \l  %73 = add nuw nsw i32 %51, 1\l  %74 = icmp eq i32 %73, %4\l  br i1 %74, label %40, label %50, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x4c0cc50:s0 -> Node0x4c0c3f0;
	Node0x4c0cc50:s1 -> Node0x4c0c330;
	Node0x4c0db30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  %76 = phi i32 [ 0, %53 ], [ %102, %126 ]\l  %77 = mul nsw i32 %76, %20\l  %78 = add i32 %54, %77\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %2, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !9\l  br i1 %55, label %90, label %82\l|{<s0>T|<s1>F}}"];
	Node0x4c0db30:s0 -> Node0x4c0e3d0;
	Node0x4c0db30:s1 -> Node0x4c0e460;
	Node0x4c0e460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%82:\l82:                                               \l  %83 = add nsw i32 %78, -1\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %2, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !9\l  %87 = load float, float addrspace(1)* %59, align 4, !tbaa !9\l  %88 = fmul contract float %86, %87\l  %89 = fadd contract float %81, %88\l  br label %90\l}"];
	Node0x4c0e460 -> Node0x4c0e3d0;
	Node0x4c0e3d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = phi float [ %89, %82 ], [ %81, %75 ]\l  br i1 %60, label %92, label %100\l|{<s0>T|<s1>F}}"];
	Node0x4c0e3d0:s0 -> Node0x4c0f070;
	Node0x4c0e3d0:s1 -> Node0x4c0f0c0;
	Node0x4c0f070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%92:\l92:                                               \l  %93 = add nsw i32 %78, -2\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %2, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !9\l  %97 = load float, float addrspace(1)* %63, align 4, !tbaa !9\l  %98 = fmul contract float %96, %97\l  %99 = fadd contract float %91, %98\l  br label %100\l}"];
	Node0x4c0f070 -> Node0x4c0f0c0;
	Node0x4c0f0c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%100:\l100:                                              \l  %101 = phi float [ %99, %92 ], [ %91, %90 ]\l  %102 = add nuw nsw i32 %76, 1\l  %103 = icmp sge i32 %102, %5\l  %104 = select i1 %55, i1 true, i1 %103\l  br i1 %104, label %113, label %105\l|{<s0>T|<s1>F}}"];
	Node0x4c0f0c0:s0 -> Node0x4c0f850;
	Node0x4c0f0c0:s1 -> Node0x4c0f8a0;
	Node0x4c0f8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%105:\l105:                                              \l  %106 = add i32 %37, %78\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %2, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !9\l  %110 = load float, float addrspace(1)* %66, align 4, !tbaa !9\l  %111 = fmul contract float %109, %110\l  %112 = fadd contract float %101, %111\l  br label %113\l}"];
	Node0x4c0f8a0 -> Node0x4c0f850;
	Node0x4c0f850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%113:\l113:                                              \l  %114 = phi float [ %112, %105 ], [ %101, %100 ]\l  %115 = icmp eq i32 %76, 0\l  %116 = select i1 %55, i1 true, i1 %115\l  br i1 %116, label %126, label %117\l|{<s0>T|<s1>F}}"];
	Node0x4c0f850:s0 -> Node0x4c0de80;
	Node0x4c0f850:s1 -> Node0x4c0ffa0;
	Node0x4c0ffa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%117:\l117:                                              \l  %118 = sub i32 %78, %20\l  %119 = add nsw i32 %118, -1\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %2, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !9\l  %123 = load float, float addrspace(1)* %69, align 4, !tbaa !9\l  %124 = fmul contract float %122, %123\l  %125 = fadd contract float %114, %124\l  br label %126\l}"];
	Node0x4c0ffa0 -> Node0x4c0de80;
	Node0x4c0de80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%126:\l126:                                              \l  %127 = phi float [ %125, %117 ], [ %114, %113 ]\l  store float %127, float addrspace(1)* %80, align 4, !tbaa !9\l  %128 = load float, float addrspace(1)* %71, align 4, !tbaa !9\l  %129 = fmul contract float %127, %128\l  %130 = getelementptr inbounds float, float addrspace(1)* %7, i64 %79\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !9\l  %132 = fadd contract float %131, %129\l  store float %132, float addrspace(1)* %130, align 4, !tbaa !9\l  %133 = icmp eq i32 %102, %5\l  br i1 %133, label %72, label %75, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4c0de80:s0 -> Node0x4c0cc50;
	Node0x4c0de80:s1 -> Node0x4c0db30;
	Node0x4c0cb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%134:\l134:                                              \l  %135 = phi i32 [ 0, %48 ], [ %240, %134 ]\l  %136 = phi i32 [ 0, %48 ], [ %241, %134 ]\l  %137 = add nsw i32 %135, %31\l  %138 = add nsw i32 %135, %29\l  %139 = sext i32 %138 to i64\l  %140 = getelementptr inbounds float, float addrspace(1)* %2, i64 %139\l  %141 = load float, float addrspace(1)* %140, align 4, !tbaa !9\l  %142 = add nsw i32 %137, %42\l  %143 = sext i32 %142 to i64\l  %144 = getelementptr inbounds float, float addrspace(1)* %1, i64 %143\l  %145 = load float, float addrspace(1)* %144, align 4, !tbaa !9\l  %146 = fmul contract float %141, %145\l  %147 = getelementptr inbounds float, float addrspace(1)* %7, i64 %139\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !9\l  %149 = fadd contract float %148, %146\l  store float %149, float addrspace(1)* %147, align 4, !tbaa !9\l  %150 = add nsw i32 %138, %44\l  %151 = sext i32 %150 to i64\l  %152 = getelementptr inbounds float, float addrspace(1)* %2, i64 %151\l  %153 = load float, float addrspace(1)* %152, align 4, !tbaa !9\l  %154 = add nsw i32 %137, %45\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds float, float addrspace(1)* %1, i64 %155\l  %157 = load float, float addrspace(1)* %156, align 4, !tbaa !9\l  %158 = fmul contract float %153, %157\l  %159 = getelementptr inbounds float, float addrspace(1)* %7, i64 %151\l  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !9\l  %161 = fadd contract float %160, %158\l  store float %161, float addrspace(1)* %159, align 4, !tbaa !9\l  %162 = or i32 %135, 1\l  %163 = add nsw i32 %162, %31\l  %164 = add nsw i32 %162, %29\l  %165 = sext i32 %164 to i64\l  %166 = getelementptr inbounds float, float addrspace(1)* %2, i64 %165\l  %167 = load float, float addrspace(1)* %166, align 4, !tbaa !9\l  %168 = add nsw i32 %163, %42\l  %169 = sext i32 %168 to i64\l  %170 = getelementptr inbounds float, float addrspace(1)* %1, i64 %169\l  %171 = load float, float addrspace(1)* %170, align 4, !tbaa !9\l  %172 = fmul contract float %167, %171\l  %173 = getelementptr inbounds float, float addrspace(1)* %7, i64 %165\l  %174 = load float, float addrspace(1)* %173, align 4, !tbaa !9\l  %175 = fadd contract float %174, %172\l  store float %175, float addrspace(1)* %173, align 4, !tbaa !9\l  %176 = add nsw i32 %164, %44\l  %177 = sext i32 %176 to i64\l  %178 = getelementptr inbounds float, float addrspace(1)* %2, i64 %177\l  %179 = load float, float addrspace(1)* %178, align 4, !tbaa !9\l  %180 = add nsw i32 %163, %45\l  %181 = sext i32 %180 to i64\l  %182 = getelementptr inbounds float, float addrspace(1)* %1, i64 %181\l  %183 = load float, float addrspace(1)* %182, align 4, !tbaa !9\l  %184 = fmul contract float %179, %183\l  %185 = getelementptr inbounds float, float addrspace(1)* %7, i64 %177\l  %186 = load float, float addrspace(1)* %185, align 4, !tbaa !9\l  %187 = fadd contract float %186, %184\l  store float %187, float addrspace(1)* %185, align 4, !tbaa !9\l  %188 = or i32 %135, 2\l  %189 = add nsw i32 %188, %31\l  %190 = add nsw i32 %188, %29\l  %191 = sext i32 %190 to i64\l  %192 = getelementptr inbounds float, float addrspace(1)* %2, i64 %191\l  %193 = load float, float addrspace(1)* %192, align 4, !tbaa !9\l  %194 = add nsw i32 %189, %42\l  %195 = sext i32 %194 to i64\l  %196 = getelementptr inbounds float, float addrspace(1)* %1, i64 %195\l  %197 = load float, float addrspace(1)* %196, align 4, !tbaa !9\l  %198 = fmul contract float %193, %197\l  %199 = getelementptr inbounds float, float addrspace(1)* %7, i64 %191\l  %200 = load float, float addrspace(1)* %199, align 4, !tbaa !9\l  %201 = fadd contract float %200, %198\l  store float %201, float addrspace(1)* %199, align 4, !tbaa !9\l  %202 = add nsw i32 %190, %44\l  %203 = sext i32 %202 to i64\l  %204 = getelementptr inbounds float, float addrspace(1)* %2, i64 %203\l  %205 = load float, float addrspace(1)* %204, align 4, !tbaa !9\l  %206 = add nsw i32 %189, %45\l  %207 = sext i32 %206 to i64\l  %208 = getelementptr inbounds float, float addrspace(1)* %1, i64 %207\l  %209 = load float, float addrspace(1)* %208, align 4, !tbaa !9\l  %210 = fmul contract float %205, %209\l  %211 = getelementptr inbounds float, float addrspace(1)* %7, i64 %203\l  %212 = load float, float addrspace(1)* %211, align 4, !tbaa !9\l  %213 = fadd contract float %212, %210\l  store float %213, float addrspace(1)* %211, align 4, !tbaa !9\l  %214 = or i32 %135, 3\l  %215 = add nsw i32 %214, %31\l  %216 = add nsw i32 %214, %29\l  %217 = sext i32 %216 to i64\l  %218 = getelementptr inbounds float, float addrspace(1)* %2, i64 %217\l  %219 = load float, float addrspace(1)* %218, align 4, !tbaa !9\l  %220 = add nsw i32 %215, %42\l  %221 = sext i32 %220 to i64\l  %222 = getelementptr inbounds float, float addrspace(1)* %1, i64 %221\l  %223 = load float, float addrspace(1)* %222, align 4, !tbaa !9\l  %224 = fmul contract float %219, %223\l  %225 = getelementptr inbounds float, float addrspace(1)* %7, i64 %217\l  %226 = load float, float addrspace(1)* %225, align 4, !tbaa !9\l  %227 = fadd contract float %226, %224\l  store float %227, float addrspace(1)* %225, align 4, !tbaa !9\l  %228 = add nsw i32 %216, %44\l  %229 = sext i32 %228 to i64\l  %230 = getelementptr inbounds float, float addrspace(1)* %2, i64 %229\l  %231 = load float, float addrspace(1)* %230, align 4, !tbaa !9\l  %232 = add nsw i32 %215, %45\l  %233 = sext i32 %232 to i64\l  %234 = getelementptr inbounds float, float addrspace(1)* %1, i64 %233\l  %235 = load float, float addrspace(1)* %234, align 4, !tbaa !9\l  %236 = fmul contract float %231, %235\l  %237 = getelementptr inbounds float, float addrspace(1)* %7, i64 %229\l  %238 = load float, float addrspace(1)* %237, align 4, !tbaa !9\l  %239 = fadd contract float %238, %236\l  store float %239, float addrspace(1)* %237, align 4, !tbaa !9\l  %240 = add nuw nsw i32 %135, 4\l  %241 = add i32 %136, 4\l  %242 = icmp eq i32 %241, %49\l  br i1 %242, label %243, label %134, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4c0cb60:s0 -> Node0x4c0c910;
	Node0x4c0cb60:s1 -> Node0x4c0cb60;
	Node0x4c0c910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%243:\l243:                                              \l  %244 = phi i32 [ 0, %41 ], [ %240, %134 ]\l  %245 = icmp eq i32 %46, 0\l  br i1 %245, label %277, label %246\l|{<s0>T|<s1>F}}"];
	Node0x4c0c910:s0 -> Node0x4c0b480;
	Node0x4c0c910:s1 -> Node0x4c0e8f0;
	Node0x4c0e8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%246:\l246:                                              \l  %247 = phi i32 [ %274, %246 ], [ %244, %243 ]\l  %248 = phi i32 [ %275, %246 ], [ 0, %243 ]\l  %249 = add nsw i32 %247, %31\l  %250 = add nsw i32 %247, %29\l  %251 = sext i32 %250 to i64\l  %252 = getelementptr inbounds float, float addrspace(1)* %2, i64 %251\l  %253 = load float, float addrspace(1)* %252, align 4, !tbaa !9\l  %254 = add nsw i32 %249, %42\l  %255 = sext i32 %254 to i64\l  %256 = getelementptr inbounds float, float addrspace(1)* %1, i64 %255\l  %257 = load float, float addrspace(1)* %256, align 4, !tbaa !9\l  %258 = fmul contract float %253, %257\l  %259 = getelementptr inbounds float, float addrspace(1)* %7, i64 %251\l  %260 = load float, float addrspace(1)* %259, align 4, !tbaa !9\l  %261 = fadd contract float %260, %258\l  store float %261, float addrspace(1)* %259, align 4, !tbaa !9\l  %262 = add nsw i32 %250, %44\l  %263 = sext i32 %262 to i64\l  %264 = getelementptr inbounds float, float addrspace(1)* %2, i64 %263\l  %265 = load float, float addrspace(1)* %264, align 4, !tbaa !9\l  %266 = add nsw i32 %249, %45\l  %267 = sext i32 %266 to i64\l  %268 = getelementptr inbounds float, float addrspace(1)* %1, i64 %267\l  %269 = load float, float addrspace(1)* %268, align 4, !tbaa !9\l  %270 = fmul contract float %265, %269\l  %271 = getelementptr inbounds float, float addrspace(1)* %7, i64 %263\l  %272 = load float, float addrspace(1)* %271, align 4, !tbaa !9\l  %273 = fadd contract float %272, %270\l  store float %273, float addrspace(1)* %271, align 4, !tbaa !9\l  %274 = add nuw nsw i32 %247, 1\l  %275 = add i32 %248, 1\l  %276 = icmp eq i32 %275, %46\l  br i1 %276, label %277, label %246, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4c0e8f0:s0 -> Node0x4c0b480;
	Node0x4c0e8f0:s1 -> Node0x4c0e8f0;
	Node0x4c0b480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%277:\l277:                                              \l  ret void\l}"];
}
