digraph "CFG for '_Z19lga_filter_backwardiPKfS0_iiiiPf' function" {
	label="CFG for '_Z19lga_filter_backwardiPKfS0_iiiiPf' function";

	Node0x506bc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = icmp slt i32 %17, %0\l  br i1 %18, label %19, label %193\l|{<s0>T|<s1>F}}"];
	Node0x506bc20:s0 -> Node0x506db90;
	Node0x506bc20:s1 -> Node0x506dc20;
	Node0x506db90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%19:\l19:                                               \l  %20 = mul nsw i32 %4, %3\l  %21 = shl nsw i32 %6, 1\l  %22 = add nuw nsw i32 %21, 1\l  %23 = mul i32 %22, %22\l  %24 = mul i32 %23, 3\l  %25 = mul i32 %24, %20\l  %26 = sdiv i32 %17, %25\l  %27 = mul nsw i32 %20, %5\l  %28 = mul nsw i32 %27, %26\l  %29 = freeze i32 %17\l  %30 = freeze i32 %20\l  %31 = sdiv i32 %29, %30\l  %32 = mul i32 %31, %30\l  %33 = sub i32 %29, %32\l  %34 = add nsw i32 %28, %33\l  %35 = srem i32 %31, %24\l  %36 = sdiv i32 %35, %23\l  %37 = add nsw i32 %36, -1\l  %38 = freeze i32 %35\l  %39 = freeze i32 %22\l  %40 = sdiv i32 %38, %39\l  %41 = srem i32 %40, %22\l  %42 = sub nsw i32 %41, %6\l  %43 = mul i32 %40, %39\l  %44 = sub i32 %38, %43\l  %45 = sub nsw i32 %44, %6\l  %46 = sdiv i32 %33, %4\l  %47 = add nsw i32 %46, %42\l  %48 = srem i32 %17, %4\l  %49 = add nsw i32 %48, %45\l  %50 = icmp sgt i32 %5, 0\l  br i1 %50, label %51, label %193\l|{<s0>T|<s1>F}}"];
	Node0x506db90:s0 -> Node0x506f000;
	Node0x506db90:s1 -> Node0x506dc20;
	Node0x506f000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%51:\l51:                                               \l  %52 = icmp sgt i32 %47, -1\l  %53 = icmp sgt i32 %49, -1\l  %54 = select i1 %52, i1 %53, i1 false\l  %55 = icmp slt i32 %47, %3\l  %56 = icmp slt i32 %49, %4\l  %57 = sext i32 %17 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %7, i64 %57\l  %59 = mul nsw i32 %42, %4\l  %60 = mul nsw i32 %37, %20\l  %61 = and i32 %5, 3\l  %62 = icmp ult i32 %5, 4\l  br i1 %62, label %162, label %63\l|{<s0>T|<s1>F}}"];
	Node0x506f000:s0 -> Node0x506f7a0;
	Node0x506f000:s1 -> Node0x506f7f0;
	Node0x506f7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%63:\l63:                                               \l  %64 = and i32 %5, -4\l  br label %65\l}"];
	Node0x506f7f0 -> Node0x506e4a0;
	Node0x506e4a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%65:\l65:                                               \l  %66 = phi i32 [ 0, %63 ], [ %159, %65 ]\l  %67 = phi i32 [ 0, %63 ], [ %160, %65 ]\l  %68 = add nsw i32 %66, %37\l  %69 = icmp sgt i32 %68, -1\l  %70 = select i1 %54, i1 %69, i1 false\l  %71 = select i1 %70, i1 %55, i1 false\l  %72 = select i1 %71, i1 %56, i1 false\l  %73 = icmp slt i32 %68, %5\l  %74 = select i1 %72, i1 %73, i1 false\l  %75 = mul nsw i32 %66, %20\l  %76 = add i32 %75, %34\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %2, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7\l  %80 = add i32 %76, %60\l  %81 = add i32 %80, %45\l  %82 = add i32 %81, %59\l  %83 = sext i32 %82 to i64\l  %84 = select i1 %74, i64 %83, i64 %77\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = fmul contract float %79, %86\l  %88 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %89 = fadd contract float %88, %87\l  store float %89, float addrspace(1)* %58, align 4, !tbaa !7\l  %90 = or i32 %66, 1\l  %91 = add i32 %66, %36\l  %92 = icmp sgt i32 %91, -1\l  %93 = select i1 %54, i1 %92, i1 false\l  %94 = select i1 %93, i1 %55, i1 false\l  %95 = select i1 %94, i1 %56, i1 false\l  %96 = icmp slt i32 %91, %5\l  %97 = select i1 %95, i1 %96, i1 false\l  %98 = mul nsw i32 %90, %20\l  %99 = add i32 %98, %34\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %2, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !7\l  %103 = add i32 %99, %60\l  %104 = add i32 %103, %45\l  %105 = add i32 %104, %59\l  %106 = sext i32 %105 to i64\l  %107 = select i1 %97, i64 %106, i64 %100\l  %108 = getelementptr inbounds float, float addrspace(1)* %1, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !7\l  %110 = fmul contract float %102, %109\l  %111 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %112 = fadd contract float %111, %110\l  store float %112, float addrspace(1)* %58, align 4, !tbaa !7\l  %113 = or i32 %66, 2\l  %114 = add nsw i32 %113, %37\l  %115 = icmp sgt i32 %114, -1\l  %116 = select i1 %54, i1 %115, i1 false\l  %117 = select i1 %116, i1 %55, i1 false\l  %118 = select i1 %117, i1 %56, i1 false\l  %119 = icmp slt i32 %114, %5\l  %120 = select i1 %118, i1 %119, i1 false\l  %121 = mul nsw i32 %113, %20\l  %122 = add i32 %121, %34\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %2, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !7\l  %126 = add i32 %122, %60\l  %127 = add i32 %126, %45\l  %128 = add i32 %127, %59\l  %129 = sext i32 %128 to i64\l  %130 = select i1 %120, i64 %129, i64 %123\l  %131 = getelementptr inbounds float, float addrspace(1)* %1, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !7\l  %133 = fmul contract float %125, %132\l  %134 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %135 = fadd contract float %134, %133\l  store float %135, float addrspace(1)* %58, align 4, !tbaa !7\l  %136 = or i32 %66, 3\l  %137 = add nsw i32 %136, %37\l  %138 = icmp sgt i32 %137, -1\l  %139 = select i1 %54, i1 %138, i1 false\l  %140 = select i1 %139, i1 %55, i1 false\l  %141 = select i1 %140, i1 %56, i1 false\l  %142 = icmp slt i32 %137, %5\l  %143 = select i1 %141, i1 %142, i1 false\l  %144 = mul nsw i32 %136, %20\l  %145 = add i32 %144, %34\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %2, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !7\l  %149 = add i32 %145, %60\l  %150 = add i32 %149, %45\l  %151 = add i32 %150, %59\l  %152 = sext i32 %151 to i64\l  %153 = select i1 %143, i64 %152, i64 %146\l  %154 = getelementptr inbounds float, float addrspace(1)* %1, i64 %153\l  %155 = load float, float addrspace(1)* %154, align 4, !tbaa !7\l  %156 = fmul contract float %148, %155\l  %157 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %158 = fadd contract float %157, %156\l  store float %158, float addrspace(1)* %58, align 4, !tbaa !7\l  %159 = add nuw nsw i32 %66, 4\l  %160 = add i32 %67, 4\l  %161 = icmp eq i32 %160, %64\l  br i1 %161, label %162, label %65, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x506e4a0:s0 -> Node0x506f7a0;
	Node0x506e4a0:s1 -> Node0x506e4a0;
	Node0x506f7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%162:\l162:                                              \l  %163 = phi i32 [ 0, %51 ], [ %159, %65 ]\l  %164 = icmp eq i32 %61, 0\l  br i1 %164, label %193, label %165\l|{<s0>T|<s1>F}}"];
	Node0x506f7a0:s0 -> Node0x506dc20;
	Node0x506f7a0:s1 -> Node0x50744c0;
	Node0x50744c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%165:\l165:                                              \l  %166 = phi i32 [ %190, %165 ], [ %163, %162 ]\l  %167 = phi i32 [ %191, %165 ], [ 0, %162 ]\l  %168 = add nsw i32 %166, %37\l  %169 = icmp sgt i32 %168, -1\l  %170 = select i1 %54, i1 %169, i1 false\l  %171 = select i1 %170, i1 %55, i1 false\l  %172 = select i1 %171, i1 %56, i1 false\l  %173 = icmp slt i32 %168, %5\l  %174 = select i1 %172, i1 %173, i1 false\l  %175 = mul nsw i32 %166, %20\l  %176 = add i32 %175, %34\l  %177 = sext i32 %176 to i64\l  %178 = getelementptr inbounds float, float addrspace(1)* %2, i64 %177\l  %179 = load float, float addrspace(1)* %178, align 4, !tbaa !7\l  %180 = add i32 %176, %60\l  %181 = add i32 %180, %45\l  %182 = add i32 %181, %59\l  %183 = sext i32 %182 to i64\l  %184 = select i1 %174, i64 %183, i64 %177\l  %185 = getelementptr inbounds float, float addrspace(1)* %1, i64 %184\l  %186 = load float, float addrspace(1)* %185, align 4, !tbaa !7\l  %187 = fmul contract float %179, %186\l  %188 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %189 = fadd contract float %188, %187\l  store float %189, float addrspace(1)* %58, align 4, !tbaa !7\l  %190 = add nuw nsw i32 %166, 1\l  %191 = add i32 %167, 1\l  %192 = icmp eq i32 %191, %61\l  br i1 %192, label %193, label %165, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x50744c0:s0 -> Node0x506dc20;
	Node0x50744c0:s1 -> Node0x50744c0;
	Node0x506dc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%193:\l193:                                              \l  ret void\l}"];
}
