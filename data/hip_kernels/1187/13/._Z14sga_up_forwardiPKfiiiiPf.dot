digraph "CFG for '_Z14sga_up_forwardiPKfiiiiPf' function" {
	label="CFG for '_Z14sga_up_forwardiPKfiiiiPf' function";

	Node0x608c2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %120\l|{<s0>T|<s1>F}}"];
	Node0x608c2c0:s0 -> Node0x608e1f0;
	Node0x608c2c0:s1 -> Node0x608e280;
	Node0x608e1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %3, %2\l  %20 = freeze i32 %16\l  %21 = freeze i32 %3\l  %22 = sdiv i32 %20, %21\l  %23 = mul nsw i32 %22, %19\l  %24 = mul nsw i32 %23, %4\l  %25 = mul i32 %22, %21\l  %26 = sub i32 %20, %25\l  %27 = mul nsw i32 %23, %5\l  %28 = icmp sgt i32 %2, 0\l  br i1 %28, label %29, label %120\l|{<s0>T|<s1>F}}"];
	Node0x608e1f0:s0 -> Node0x608e920;
	Node0x608e1f0:s1 -> Node0x608e280;
	Node0x608e920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%29:\l29:                                               \l  %30 = icmp sgt i32 %4, 0\l  %31 = shl nsw i32 %19, 1\l  %32 = shl nsw i32 %3, 1\l  %33 = mul nsw i32 %19, 3\l  %34 = shl nsw i32 %19, 2\l  br label %37\l}"];
	Node0x608e920 -> Node0x608eea0;
	Node0x608ef60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%35:\l35:                                               \l  %36 = icmp sgt i32 %38, 1\l  br i1 %36, label %37, label %120, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x608ef60:s0 -> Node0x608eea0;
	Node0x608ef60:s1 -> Node0x608e280;
	Node0x608eea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%37:\l37:                                               \l  %38 = phi i32 [ %2, %29 ], [ %39, %35 ]\l  %39 = add nsw i32 %38, -1\l  %40 = mul nsw i32 %39, %3\l  %41 = add i32 %40, %26\l  %42 = add i32 %41, %27\l  br i1 %30, label %43, label %35\l|{<s0>T|<s1>F}}"];
	Node0x608eea0:s0 -> Node0x608f5c0;
	Node0x608eea0:s1 -> Node0x608ef60;
	Node0x608f5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%43:\l43:                                               \l  %44 = add i32 %41, %24\l  %45 = sext i32 %42 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  %47 = icmp slt i32 %38, %2\l  %48 = add nsw i32 %42, %19\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  %51 = add nuw nsw i32 %38, 1\l  %52 = icmp slt i32 %51, %2\l  %53 = add nsw i32 %42, %31\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = add nsw i32 %42, %33\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  %59 = add nsw i32 %42, %34\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  br label %62\l}"];
	Node0x608f5c0 -> Node0x6090090;
	Node0x6090090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  %63 = phi i32 [ 0, %43 ], [ %105, %114 ]\l  %64 = mul nsw i32 %63, %19\l  %65 = add i32 %44, %64\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %6, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !9\l  %69 = load float, float addrspace(1)* %46, align 4, !tbaa !9\l  %70 = fmul contract float %68, %69\l  %71 = fadd contract float %70, 0.000000e+00\l  br i1 %47, label %72, label %77\l|{<s0>T|<s1>F}}"];
	Node0x6090090:s0 -> Node0x6091a50;
	Node0x6090090:s1 -> Node0x6091ae0;
	Node0x6091a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%72:\l72:                                               \l  %73 = add nsw i32 %65, %3\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %6, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !9\l  br label %77\l}"];
	Node0x6091a50 -> Node0x6091ae0;
	Node0x6091ae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi float [ %76, %72 ], [ %68, %62 ]\l  %79 = load float, float addrspace(1)* %50, align 4, !tbaa !9\l  %80 = fmul contract float %78, %79\l  %81 = fadd contract float %71, %80\l  br i1 %52, label %82, label %87\l|{<s0>T|<s1>F}}"];
	Node0x6091ae0:s0 -> Node0x60920e0;
	Node0x6091ae0:s1 -> Node0x6092130;
	Node0x60920e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%82:\l82:                                               \l  %83 = add nsw i32 %65, %32\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %6, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !9\l  br label %87\l}"];
	Node0x60920e0 -> Node0x6092130;
	Node0x6092130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  %88 = phi float [ %86, %82 ], [ %68, %77 ]\l  %89 = load float, float addrspace(1)* %55, align 4, !tbaa !9\l  %90 = fmul contract float %88, %89\l  %91 = fadd contract float %81, %90\l  %92 = icmp ne i32 %63, 0\l  %93 = select i1 %47, i1 %92, i1 false\l  br i1 %93, label %94, label %100\l|{<s0>T|<s1>F}}"];
	Node0x6092130:s0 -> Node0x6092830;
	Node0x6092130:s1 -> Node0x6092880;
	Node0x6092830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%94:\l94:                                               \l  %95 = add nsw i32 %65, %3\l  %96 = sub i32 %95, %19\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %6, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !9\l  br label %100\l}"];
	Node0x6092830 -> Node0x6092880;
	Node0x6092880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%100:\l100:                                              \l  %101 = phi float [ %99, %94 ], [ %68, %87 ]\l  %102 = load float, float addrspace(1)* %58, align 4, !tbaa !9\l  %103 = fmul contract float %101, %102\l  %104 = fadd contract float %91, %103\l  %105 = add nuw nsw i32 %63, 1\l  %106 = icmp slt i32 %105, %4\l  %107 = select i1 %47, i1 %106, i1 false\l  br i1 %107, label %108, label %114\l|{<s0>T|<s1>F}}"];
	Node0x6092880:s0 -> Node0x60930d0;
	Node0x6092880:s1 -> Node0x6090150;
	Node0x60930d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%108:\l108:                                              \l  %109 = add nsw i32 %65, %3\l  %110 = add nsw i32 %109, %19\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %6, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !9\l  br label %114\l}"];
	Node0x60930d0 -> Node0x6090150;
	Node0x6090150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  %115 = phi float [ %113, %108 ], [ %68, %100 ]\l  %116 = load float, float addrspace(1)* %61, align 4, !tbaa !9\l  %117 = fmul contract float %115, %116\l  %118 = fadd contract float %104, %117\l  store float %118, float addrspace(1)* %67, align 4, !tbaa !9\l  %119 = icmp eq i32 %105, %4\l  br i1 %119, label %35, label %62, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x6090150:s0 -> Node0x608ef60;
	Node0x6090150:s1 -> Node0x6090090;
	Node0x608e280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%120:\l120:                                              \l  ret void\l}"];
}
