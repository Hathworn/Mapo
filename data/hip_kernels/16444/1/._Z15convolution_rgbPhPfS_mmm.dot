digraph "CFG for '_Z15convolution_rgbPhPfS_mmm' function" {
	label="CFG for '_Z15convolution_rgbPhPfS_mmm' function";

	Node0x6252c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%6:\l  %7 = add i64 %5, 8589934591\l  %8 = lshr i64 %7, 1\l  %9 = trunc i64 %8 to i32\l  %10 = mul i32 %9, 3\l  %11 = mul i64 %8, 25769803776\l  %12 = ashr exact i64 %11, 32\l  %13 = add i64 %12, %3\l  %14 = trunc i64 %13 to i32\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %17 = getelementptr i8, i8 addrspace(4)* %16, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %15, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = add i32 %23, %10\l  %25 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %26 = getelementptr i8, i8 addrspace(4)* %16, i64 6\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 2, !range !4, !invariant.load !5\l  %29 = zext i16 %28 to i32\l  %30 = mul i32 %25, %29\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %32 = add i32 %30, %31\l  %33 = add i32 %32, %10\l  %34 = icmp slt i32 %24, %10\l  br i1 %34, label %88, label %35\l|{<s0>T|<s1>F}}"];
	Node0x6252c70:s0 -> Node0x6253ca0;
	Node0x6252c70:s1 -> Node0x6256d60;
	Node0x6256d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%35:\l35:                                               \l  %36 = mul i64 %4, 3\l  %37 = add i64 %12, %36\l  %38 = trunc i64 %37 to i32\l  %39 = sub i32 %38, %10\l  %40 = icmp ult i32 %24, %39\l  %41 = icmp sge i32 %33, %10\l  %42 = select i1 %40, i1 %41, i1 false\l  %43 = sub i32 %14, %10\l  %44 = icmp ult i32 %33, %43\l  %45 = select i1 %42, i1 %44, i1 false\l  br i1 %45, label %46, label %88\l|{<s0>T|<s1>F}}"];
	Node0x6256d60:s0 -> Node0x6257490;
	Node0x6256d60:s1 -> Node0x6253ca0;
	Node0x6257490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%46:\l46:                                               \l  %47 = trunc i64 %3 to i32\l  %48 = mul i32 %23, %47\l  %49 = add i32 %48, %32\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %50\l  store i8 0, i8 addrspace(1)* %51, align 1, !tbaa !7\l  %52 = sub nsw i32 0, %10\l  %53 = icmp slt i32 %10, 0\l  br i1 %53, label %88, label %54\l|{<s0>T|<s1>F}}"];
	Node0x6257490:s0 -> Node0x6253ca0;
	Node0x6257490:s1 -> Node0x6257b40;
	Node0x6257b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%54:\l54:                                               \l  %55 = trunc i64 %5 to i32\l  br label %56\l}"];
	Node0x6257b40 -> Node0x6257cf0;
	Node0x6257cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%56:\l56:                                               \l  %57 = phi i8 [ 0, %54 ], [ %84, %64 ]\l  %58 = phi i32 [ 0, %54 ], [ %65, %64 ]\l  %59 = phi i32 [ %52, %54 ], [ %66, %64 ]\l  %60 = add nsw i32 %59, %24\l  %61 = mul i32 %60, %14\l  %62 = add i32 %61, %33\l  %63 = mul i32 %58, %55\l  br label %68\l}"];
	Node0x6257cf0 -> Node0x62583a0;
	Node0x6257de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%64:\l64:                                               \l  %65 = add nuw nsw i32 %58, 1\l  %66 = add nsw i32 %59, 3\l  %67 = icmp sgt i32 %66, %10\l  br i1 %67, label %88, label %56, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x6257de0:s0 -> Node0x6253ca0;
	Node0x6257de0:s1 -> Node0x6257cf0;
	Node0x62583a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = phi i8 [ %57, %56 ], [ %84, %68 ]\l  %70 = phi i32 [ %52, %56 ], [ %86, %68 ]\l  %71 = phi i32 [ 0, %56 ], [ %85, %68 ]\l  %72 = add i32 %62, %70\l  %73 = add i32 %71, %63\l  %74 = zext i32 %72 to i64\l  %75 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %74\l  %76 = load i8, i8 addrspace(1)* %75, align 1, !tbaa !7\l  %77 = uitofp i8 %76 to float\l  %78 = zext i32 %73 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %1, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !12\l  %81 = fmul contract float %80, %77\l  %82 = uitofp i8 %69 to float\l  %83 = fadd contract float %81, %82\l  %84 = fptoui float %83 to i8\l  store i8 %84, i8 addrspace(1)* %51, align 1, !tbaa !7\l  %85 = add nuw nsw i32 %71, 1\l  %86 = add nsw i32 %70, 3\l  %87 = icmp sgt i32 %86, %10\l  br i1 %87, label %64, label %68, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x62583a0:s0 -> Node0x6257de0;
	Node0x62583a0:s1 -> Node0x62583a0;
	Node0x6253ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%88:\l88:                                               \l  ret void\l}"];
}
