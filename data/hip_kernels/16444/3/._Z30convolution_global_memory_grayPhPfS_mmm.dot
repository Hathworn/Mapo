digraph "CFG for '_Z30convolution_global_memory_grayPhPfS_mmm' function" {
	label="CFG for '_Z30convolution_global_memory_grayPhPfS_mmm' function";

	Node0x5430820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%6:\l  %7 = add i64 %5, 8589934591\l  %8 = lshr i64 %7, 1\l  %9 = trunc i64 %8 to i32\l  %10 = sub i32 0, %9\l  %11 = shl i32 %9, 1\l  %12 = trunc i64 %3 to i32\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = add i32 %21, %9\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %24 = getelementptr i8, i8 addrspace(4)* %14, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !4, !invariant.load !5\l  %27 = zext i16 %26 to i32\l  %28 = mul i32 %23, %27\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %30 = add i32 %28, %29\l  %31 = add i32 %30, %9\l  %32 = icmp slt i32 %31, %9\l  br i1 %32, label %156, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5430820:s0 -> Node0x54317e0;
	Node0x5430820:s1 -> Node0x5431870;
	Node0x5431870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%33:\l33:                                               \l  %34 = trunc i64 %4 to i32\l  %35 = sub i32 %34, %9\l  %36 = add i32 %35, %11\l  %37 = icmp uge i32 %31, %36\l  %38 = icmp slt i32 %22, %9\l  %39 = select i1 %37, i1 true, i1 %38\l  %40 = sub i32 %12, %9\l  %41 = add i32 %40, %11\l  %42 = icmp uge i32 %22, %41\l  %43 = select i1 %39, i1 true, i1 %42\l  %44 = icmp sgt i32 %10, %9\l  %45 = select i1 %43, i1 true, i1 %44\l  br i1 %45, label %156, label %46\l|{<s0>T|<s1>F}}"];
	Node0x5431870:s0 -> Node0x54317e0;
	Node0x5431870:s1 -> Node0x5435030;
	Node0x5435030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%46:\l46:                                               \l  %47 = mul i32 %30, %12\l  %48 = add i32 %47, %21\l  %49 = trunc i64 %5 to i32\l  %50 = zext i32 %48 to i64\l  %51 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %50\l  %52 = add nuw nsw i32 %11, 1\l  %53 = and i32 %52, 3\l  %54 = icmp ult i32 %11, 3\l  br label %55\l}"];
	Node0x5435030 -> Node0x54355b0;
	Node0x54355b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%55:\l55:                                               \l  %56 = phi i32 [ %10, %46 ], [ %86, %85 ]\l  %57 = add nsw i32 %56, %22\l  %58 = add nsw i32 %56, %9\l  %59 = mul i32 %58, %49\l  %60 = add i32 %59, %9\l  %61 = load i8, i8 addrspace(1)* %51, align 1, !tbaa !7\l  br label %62\l}"];
	Node0x54355b0 -> Node0x5435c00;
	Node0x5435c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  %63 = phi i8 [ %61, %55 ], [ %80, %62 ]\l  %64 = phi i32 [ %10, %55 ], [ %81, %62 ]\l  %65 = phi i32 [ 0, %55 ], [ %82, %62 ]\l  %66 = add nsw i32 %64, %31\l  %67 = mul i32 %66, %12\l  %68 = add i32 %57, %67\l  %69 = add i32 %60, %64\l  %70 = zext i32 %68 to i64\l  %71 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %70\l  %72 = load i8, i8 addrspace(1)* %71, align 1, !tbaa !7\l  %73 = uitofp i8 %72 to float\l  %74 = zext i32 %69 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !10\l  %77 = fmul contract float %76, %73\l  %78 = uitofp i8 %63 to float\l  %79 = fadd contract float %77, %78\l  %80 = fptoui float %79 to i8\l  store i8 %80, i8 addrspace(1)* %51, align 1, !tbaa !7\l  %81 = add i32 %64, 1\l  %82 = add i32 %65, 1\l  %83 = icmp eq i32 %82, %53\l  br i1 %83, label %84, label %62, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5435c00:s0 -> Node0x5437390;
	Node0x5435c00:s1 -> Node0x5435c00;
	Node0x5437390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%84:\l84:                                               \l  br i1 %54, label %85, label %88\l|{<s0>T|<s1>F}}"];
	Node0x5437390:s0 -> Node0x54356a0;
	Node0x5437390:s1 -> Node0x5437550;
	Node0x54356a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%85:\l85:                                               \l  %86 = add i32 %56, 1\l  %87 = icmp eq i32 %56, %9\l  br i1 %87, label %156, label %55, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x54356a0:s0 -> Node0x54317e0;
	Node0x54356a0:s1 -> Node0x54355b0;
	Node0x5437550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%88:\l88:                                               \l  %89 = phi i8 [ %153, %88 ], [ %80, %84 ]\l  %90 = phi i32 [ %154, %88 ], [ %81, %84 ]\l  %91 = add nsw i32 %90, %31\l  %92 = mul i32 %91, %12\l  %93 = add i32 %57, %92\l  %94 = add i32 %60, %90\l  %95 = zext i32 %93 to i64\l  %96 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %95\l  %97 = load i8, i8 addrspace(1)* %96, align 1, !tbaa !7\l  %98 = uitofp i8 %97 to float\l  %99 = zext i32 %94 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %1, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !10\l  %102 = fmul contract float %101, %98\l  %103 = uitofp i8 %89 to float\l  %104 = fadd contract float %102, %103\l  %105 = fptoui float %104 to i8\l  store i8 %105, i8 addrspace(1)* %51, align 1, !tbaa !7\l  %106 = add i32 %90, 1\l  %107 = add nsw i32 %106, %31\l  %108 = mul i32 %107, %12\l  %109 = add i32 %57, %108\l  %110 = add i32 %60, %106\l  %111 = zext i32 %109 to i64\l  %112 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %111\l  %113 = load i8, i8 addrspace(1)* %112, align 1, !tbaa !7\l  %114 = uitofp i8 %113 to float\l  %115 = zext i32 %110 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %1, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !10\l  %118 = fmul contract float %117, %114\l  %119 = uitofp i8 %105 to float\l  %120 = fadd contract float %118, %119\l  %121 = fptoui float %120 to i8\l  store i8 %121, i8 addrspace(1)* %51, align 1, !tbaa !7\l  %122 = add i32 %90, 2\l  %123 = add nsw i32 %122, %31\l  %124 = mul i32 %123, %12\l  %125 = add i32 %57, %124\l  %126 = add i32 %60, %122\l  %127 = zext i32 %125 to i64\l  %128 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %127\l  %129 = load i8, i8 addrspace(1)* %128, align 1, !tbaa !7\l  %130 = uitofp i8 %129 to float\l  %131 = zext i32 %126 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %1, i64 %131\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !10\l  %134 = fmul contract float %133, %130\l  %135 = uitofp i8 %121 to float\l  %136 = fadd contract float %134, %135\l  %137 = fptoui float %136 to i8\l  store i8 %137, i8 addrspace(1)* %51, align 1, !tbaa !7\l  %138 = add i32 %90, 3\l  %139 = add nsw i32 %138, %31\l  %140 = mul i32 %139, %12\l  %141 = add i32 %57, %140\l  %142 = add i32 %60, %138\l  %143 = zext i32 %141 to i64\l  %144 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %143\l  %145 = load i8, i8 addrspace(1)* %144, align 1, !tbaa !7\l  %146 = uitofp i8 %145 to float\l  %147 = zext i32 %142 to i64\l  %148 = getelementptr inbounds float, float addrspace(1)* %1, i64 %147\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !10\l  %150 = fmul contract float %149, %146\l  %151 = uitofp i8 %137 to float\l  %152 = fadd contract float %150, %151\l  %153 = fptoui float %152 to i8\l  store i8 %153, i8 addrspace(1)* %51, align 1, !tbaa !7\l  %154 = add i32 %90, 4\l  %155 = icmp eq i32 %138, %9\l  br i1 %155, label %85, label %88, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5437550:s0 -> Node0x54356a0;
	Node0x5437550:s1 -> Node0x5437550;
	Node0x54317e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%156:\l156:                                              \l  ret void\l}"];
}
