digraph "CFG for '_Z9MatrixMulPfS_S_i' function" {
	label="CFG for '_Z9MatrixMulPfS_S_i' function";

	Node0x526cb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = icmp slt i32 %21, %3\l  %23 = icmp slt i32 %13, %3\l  %24 = select i1 %22, i1 %23, i1 false\l  %25 = icmp sgt i32 %3, 0\l  %26 = and i1 %24, %25\l  br i1 %26, label %27, label %161\l|{<s0>T|<s1>F}}"];
	Node0x526cb90:s0 -> Node0x5270790;
	Node0x526cb90:s1 -> Node0x5270820;
	Node0x5270790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %21, %3\l  %29 = add nsw i32 %28, %13\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7\l  %33 = and i32 %3, 7\l  %34 = icmp ult i32 %3, 8\l  br i1 %34, label %139, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5270790:s0 -> Node0x526f560;
	Node0x5270790:s1 -> Node0x5271010;
	Node0x5271010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%35:\l35:                                               \l  %36 = and i32 %3, -8\l  br label %37\l}"];
	Node0x5271010 -> Node0x5271210;
	Node0x5271210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%37:\l37:                                               \l  %38 = phi float [ %32, %35 ], [ %135, %37 ]\l  %39 = phi i32 [ 0, %35 ], [ %136, %37 ]\l  %40 = phi i32 [ 0, %35 ], [ %137, %37 ]\l  %41 = add nsw i32 %39, %28\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7\l  %45 = mul nsw i32 %39, %3\l  %46 = add nsw i32 %45, %13\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7\l  %50 = fmul contract float %44, %49\l  %51 = fadd contract float %38, %50\l  store float %51, float addrspace(1)* %31, align 4, !tbaa !7\l  %52 = or i32 %39, 1\l  %53 = add nsw i32 %52, %28\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  %57 = mul nsw i32 %52, %3\l  %58 = add nsw i32 %57, %13\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7\l  %62 = fmul contract float %56, %61\l  %63 = fadd contract float %51, %62\l  store float %63, float addrspace(1)* %31, align 4, !tbaa !7\l  %64 = or i32 %39, 2\l  %65 = add nsw i32 %64, %28\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7\l  %69 = mul nsw i32 %64, %3\l  %70 = add nsw i32 %69, %13\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7\l  %74 = fmul contract float %68, %73\l  %75 = fadd contract float %63, %74\l  store float %75, float addrspace(1)* %31, align 4, !tbaa !7\l  %76 = or i32 %39, 3\l  %77 = add nsw i32 %76, %28\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7\l  %81 = mul nsw i32 %76, %3\l  %82 = add nsw i32 %81, %13\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %1, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !7\l  %86 = fmul contract float %80, %85\l  %87 = fadd contract float %75, %86\l  store float %87, float addrspace(1)* %31, align 4, !tbaa !7\l  %88 = or i32 %39, 4\l  %89 = add nsw i32 %88, %28\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7\l  %93 = mul nsw i32 %88, %3\l  %94 = add nsw i32 %93, %13\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %1, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !7\l  %98 = fmul contract float %92, %97\l  %99 = fadd contract float %87, %98\l  store float %99, float addrspace(1)* %31, align 4, !tbaa !7\l  %100 = or i32 %39, 5\l  %101 = add nsw i32 %100, %28\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %0, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !7\l  %105 = mul nsw i32 %100, %3\l  %106 = add nsw i32 %105, %13\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %1, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !7\l  %110 = fmul contract float %104, %109\l  %111 = fadd contract float %99, %110\l  store float %111, float addrspace(1)* %31, align 4, !tbaa !7\l  %112 = or i32 %39, 6\l  %113 = add nsw i32 %112, %28\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7\l  %117 = mul nsw i32 %112, %3\l  %118 = add nsw i32 %117, %13\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %1, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7\l  %122 = fmul contract float %116, %121\l  %123 = fadd contract float %111, %122\l  store float %123, float addrspace(1)* %31, align 4, !tbaa !7\l  %124 = or i32 %39, 7\l  %125 = add nsw i32 %124, %28\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %0, i64 %126\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !7\l  %129 = mul nsw i32 %124, %3\l  %130 = add nsw i32 %129, %13\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %1, i64 %131\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !7\l  %134 = fmul contract float %128, %133\l  %135 = fadd contract float %123, %134\l  store float %135, float addrspace(1)* %31, align 4, !tbaa !7\l  %136 = add nuw nsw i32 %39, 8\l  %137 = add i32 %40, 8\l  %138 = icmp eq i32 %137, %36\l  br i1 %138, label %139, label %37, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5271210:s0 -> Node0x526f560;
	Node0x5271210:s1 -> Node0x5271210;
	Node0x526f560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%139:\l139:                                              \l  %140 = phi float [ %32, %27 ], [ %135, %37 ]\l  %141 = phi i32 [ 0, %27 ], [ %136, %37 ]\l  %142 = icmp eq i32 %33, 0\l  br i1 %142, label %161, label %143\l|{<s0>T|<s1>F}}"];
	Node0x526f560:s0 -> Node0x5270820;
	Node0x526f560:s1 -> Node0x5275f10;
	Node0x5275f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%143:\l143:                                              \l  %144 = phi float [ %157, %143 ], [ %140, %139 ]\l  %145 = phi i32 [ %158, %143 ], [ %141, %139 ]\l  %146 = phi i32 [ %159, %143 ], [ 0, %139 ]\l  %147 = add nsw i32 %145, %28\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds float, float addrspace(1)* %0, i64 %148\l  %150 = load float, float addrspace(1)* %149, align 4, !tbaa !7\l  %151 = mul nsw i32 %145, %3\l  %152 = add nsw i32 %151, %13\l  %153 = sext i32 %152 to i64\l  %154 = getelementptr inbounds float, float addrspace(1)* %1, i64 %153\l  %155 = load float, float addrspace(1)* %154, align 4, !tbaa !7\l  %156 = fmul contract float %150, %155\l  %157 = fadd contract float %144, %156\l  store float %157, float addrspace(1)* %31, align 4, !tbaa !7\l  %158 = add nuw nsw i32 %145, 1\l  %159 = add i32 %146, 1\l  %160 = icmp eq i32 %159, %33\l  br i1 %160, label %161, label %143, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5275f10:s0 -> Node0x5270820;
	Node0x5275f10:s1 -> Node0x5275f10;
	Node0x5270820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%161:\l161:                                              \l  ret void\l}"];
}
