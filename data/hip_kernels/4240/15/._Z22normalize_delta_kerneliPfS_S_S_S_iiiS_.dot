digraph "CFG for '_Z22normalize_delta_kerneliPfS_S_S_S_iiiS_' function" {
	label="CFG for '_Z22normalize_delta_kerneliPfS_S_S_S_iiiS_' function";

	Node0x4aaa5e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !4\l  %17 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !13, !invariant.load\l... !14\l  %20 = zext i16 %19 to i32\l  %21 = udiv i32 %16, %20\l  %22 = mul i32 %21, %20\l  %23 = icmp ugt i32 %16, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %12\l  %27 = add i32 %26, %11\l  %28 = mul i32 %27, %20\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %30 = add i32 %28, %29\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %87\l|{<s0>T|<s1>F}}"];
	Node0x4aaa5e0:s0 -> Node0x4aad9c0;
	Node0x4aaa5e0:s1 -> Node0x4aada50;
	Node0x4aad9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = sdiv i32 %30, %8\l  %34 = srem i32 %33, %7\l  %35 = sext i32 %30 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %9, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %38 = sext i32 %34 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %3, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %41 = fcmp olt float %40, 0x39F0000000000000\l  %42 = select i1 %41, float 0x41F0000000000000, float 1.000000e+00\l  %43 = fmul float %40, %42\l  %44 = tail call float @llvm.sqrt.f32(float %43)\l  %45 = bitcast float %44 to i32\l  %46 = add nsw i32 %45, -1\l  %47 = bitcast i32 %46 to float\l  %48 = add nsw i32 %45, 1\l  %49 = bitcast i32 %48 to float\l  %50 = tail call i1 @llvm.amdgcn.class.f32(float %43, i32 608)\l  %51 = select i1 %41, float 0x3EF0000000000000, float 1.000000e+00\l  %52 = fneg float %49\l  %53 = tail call float @llvm.fma.f32(float %52, float %44, float %43)\l  %54 = fcmp ogt float %53, 0.000000e+00\l  %55 = fneg float %47\l  %56 = tail call float @llvm.fma.f32(float %55, float %44, float %43)\l  %57 = fcmp ole float %56, 0.000000e+00\l  %58 = select i1 %57, float %47, float %44\l  %59 = select i1 %54, float %49, float %58\l  %60 = fmul float %51, %59\l  %61 = select i1 %50, float %43, float %60\l  %62 = fadd contract float %61, 0x3EB0C6F7A0000000\l  %63 = fdiv contract float %37, %62\l  %64 = fpext float %63 to double\l  %65 = getelementptr inbounds float, float addrspace(1)* %5, i64 %38\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %67 = fpext float %66 to double\l  %68 = fmul contract double %67, 2.000000e+00\l  %69 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %71 = getelementptr inbounds float, float addrspace(1)* %2, i64 %38\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %73 = fsub contract float %70, %72\l  %74 = fpext float %73 to double\l  %75 = fmul contract double %68, %74\l  %76 = mul nsw i32 %8, %6\l  %77 = sitofp i32 %76 to double\l  %78 = fdiv contract double %75, %77\l  %79 = fadd contract double %78, %64\l  %80 = getelementptr inbounds float, float addrspace(1)* %4, i64 %38\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %82 = sitofp i32 %76 to float\l  %83 = fdiv contract float %81, %82\l  %84 = fpext float %83 to double\l  %85 = fadd contract double %79, %84\l  %86 = fptrunc double %85 to float\l  store float %86, float addrspace(1)* %36, align 4, !tbaa !16\l  br label %87\l}"];
	Node0x4aad9c0 -> Node0x4aada50;
	Node0x4aada50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  ret void\l}"];
}
