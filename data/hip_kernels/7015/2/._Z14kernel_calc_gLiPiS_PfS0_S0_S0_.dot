digraph "CFG for '_Z14kernel_calc_gLiPiS_PfS0_S0_S0_' function" {
	label="CFG for '_Z14kernel_calc_gLiPiS_PfS0_S0_S0_' function";

	Node0x4acd3b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = alloca i32, align 4, addrspace(5)\l  %9 = addrspacecast i32 addrspace(5)* %8 to i32*\l  %10 = bitcast i32 addrspace(5)* %8 to i8 addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 4, i8 addrspace(5)* %10) #4\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = mul i32 %17, %16\l  %19 = add i32 %18, %11\l  store volatile i32 %19, i32* %9, align 4, !tbaa !7\l  %20 = sext i32 %0 to i64\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %20\l  %22 = load i32, i32 addrspace(1)* %21, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %23 = load volatile i32, i32* %9, align 4, !tbaa !7\l  %24 = add nsw i32 %22, -1\l  %25 = icmp slt i32 %23, %24\l  br i1 %25, label %26, label %67\l|{<s0>T|<s1>F}}"];
	Node0x4acd3b0:s0 -> Node0x4ad06e0;
	Node0x4acd3b0:s1 -> Node0x4ad0770;
	Node0x4ad06e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%26:\l26:                                               \l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %20\l  %28 = load i32, i32 addrspace(1)* %27, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %29 = load volatile i32, i32* %9, align 4, !tbaa !7\l  %30 = add nsw i32 %29, %28\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %3, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %34 = fneg contract float %33\l  %35 = fmul float %33, 0xBFF7154760000000\l  %36 = tail call float @llvm.rint.f32(float %35)\l  %37 = fcmp olt float %33, 0xC0562E4300000000\l  %38 = fcmp ogt float %33, 0x4059D1DA00000000\l  %39 = fneg float %35\l  %40 = tail call float @llvm.fma.f32(float %34, float 0x3FF7154760000000,\l... float %39)\l  %41 = tail call float @llvm.fma.f32(float %34, float 0x3E54AE0BE0000000,\l... float %40)\l  %42 = fsub float %35, %36\l  %43 = fadd float %41, %42\l  %44 = tail call float @llvm.exp2.f32(float %43)\l  %45 = fptosi float %36 to i32\l  %46 = tail call float @llvm.amdgcn.ldexp.f32(float %44, i32 %45)\l  %47 = select i1 %38, float 0.000000e+00, float %46\l  %48 = select i1 %37, float 0x7FF0000000000000, float %47\l  %49 = fadd contract float %48, 1.000000e+00\l  %50 = fmul contract float %49, %49\l  %51 = fdiv contract float %48, %50\l  %52 = load volatile i32, i32* %9, align 4, !tbaa !7\l  %53 = add nsw i32 %52, %28\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %4, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %57 = load volatile i32, i32* %9, align 4, !tbaa !7\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %5, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %61 = fsub contract float %56, %60\l  %62 = fmul contract float %61, %51\l  %63 = load volatile i32, i32* %9, align 4, !tbaa !7\l  %64 = add nsw i32 %63, %28\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %6, i64 %65\l  store float %62, float addrspace(1)* %66, align 4, !tbaa !11\l  br label %67\l}"];
	Node0x4ad06e0 -> Node0x4ad0770;
	Node0x4ad0770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  call void @llvm.lifetime.end.p5i8(i64 4, i8 addrspace(5)* %10) #4\l  ret void\l}"];
}
