digraph "CFG for '_Z22kernel_weight_update_2iPiS_S_PfS0_S0_S0_S0_S0_ff' function" {
	label="CFG for '_Z22kernel_weight_update_2iPiS_S_PfS0_S0_S0_S0_S0_ff' function";

	Node0x5a9f1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %14, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %13\l  %22 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 4, !range !5, !invariant.load !6\l  %25 = zext i16 %24 to i32\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %27 = sext i32 %0 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %30 = add nsw i32 %0, 1\l  %31 = sext i32 %30 to i64\l  %32 = icmp slt i32 %21, %29\l  br i1 %32, label %33, label %74\l|{<s0>T|<s1>F}}"];
	Node0x5a9f1a0:s0 -> Node0x5aa1640;
	Node0x5a9f1a0:s1 -> Node0x5aa16d0;
	Node0x5aa1640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%33:\l33:                                               \l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %31\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %27\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %38 = add nsw i32 %37, %21\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %5, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %42 = add nsw i32 %35, -1\l  %43 = icmp slt i32 %26, %42\l  br i1 %43, label %44, label %74\l|{<s0>T|<s1>F}}"];
	Node0x5aa1640:s0 -> Node0x5aa4800;
	Node0x5aa1640:s1 -> Node0x5aa16d0;
	Node0x5aa4800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%44:\l44:                                               \l  %45 = mul nsw i32 %42, %21\l  %46 = add i32 %45, %26\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %27\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %49 = add i32 %46, %48\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %31\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %52 = add nsw i32 %51, %26\l  br label %53\l}"];
	Node0x5aa4800 -> Node0x5aa4e10;
	Node0x5aa4e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi i32 [ %61, %53 ], [ %52, %44 ]\l  %55 = phi i32 [ %72, %53 ], [ %26, %44 ]\l  %56 = phi i32 [ %71, %53 ], [ %49, %44 ]\l  %57 = sext i32 %54 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %7, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !11\l  %60 = fmul contract float %41, %59\l  %61 = add nsw i32 %54, %25\l  %62 = sext i32 %56 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %9, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !11\l  %65 = fmul contract float %64, %11\l  %66 = fmul contract float %60, %10\l  %67 = fsub contract float %65, %66\l  store float %67, float addrspace(1)* %63, align 4, !tbaa !11\l  %68 = getelementptr inbounds float, float addrspace(1)* %8, i64 %62\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !11\l  %70 = fadd contract float %69, %67\l  store float %70, float addrspace(1)* %68, align 4, !tbaa !11\l  %71 = add nsw i32 %56, %25\l  %72 = add nuw nsw i32 %55, %25\l  %73 = icmp slt i32 %72, %42\l  br i1 %73, label %53, label %74, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5aa4e10:s0 -> Node0x5aa4e10;
	Node0x5aa4e10:s1 -> Node0x5aa16d0;
	Node0x5aa16d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%74:\l74:                                               \l  ret void\l}"];
}
