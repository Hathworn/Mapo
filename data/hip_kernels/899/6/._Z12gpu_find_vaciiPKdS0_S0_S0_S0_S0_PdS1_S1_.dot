digraph "CFG for '_Z12gpu_find_vaciiPKdS0_S0_S0_S0_S0_PdS1_S1_' function" {
	label="CFG for '_Z12gpu_find_vaciiPKdS0_S0_S0_S0_S0_PdS1_S1_' function";

	Node0x630c8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = mul nsw i32 %13, %0\l  %15 = icmp slt i32 %0, -126\l  br i1 %15, label %61, label %16\l|{<s0>T|<s1>F}}"];
	Node0x630c8d0:s0 -> Node0x630e610;
	Node0x630c8d0:s1 -> Node0x630e6a0;
	Node0x630e6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%16:\l16:                                               \l  %17 = add nsw i32 %0, -1\l  %18 = sdiv i32 %17, 128\l  %19 = add nsw i32 %18, 1\l  %20 = and i32 %19, 1\l  %21 = add i32 %0, 126\l  %22 = icmp ult i32 %21, 255\l  br i1 %22, label %27, label %23\l|{<s0>T|<s1>F}}"];
	Node0x630e6a0:s0 -> Node0x630ecb0;
	Node0x630e6a0:s1 -> Node0x630ed00;
	Node0x630ed00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%23:\l23:                                               \l  %24 = and i32 %19, -2\l  br label %77\l}"];
	Node0x630ed00 -> Node0x630ef00;
	Node0x630efc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%25:\l25:                                               \l  %26 = shl nsw i32 %142, 7\l  br label %27\l}"];
	Node0x630efc0 -> Node0x630ecb0;
	Node0x630ecb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%27:\l27:                                               \l  %28 = phi double [ undef, %16 ], [ %139, %25 ]\l  %29 = phi double [ undef, %16 ], [ %140, %25 ]\l  %30 = phi double [ undef, %16 ], [ %141, %25 ]\l  %31 = phi double [ 0.000000e+00, %16 ], [ %141, %25 ]\l  %32 = phi i32 [ 0, %16 ], [ %26, %25 ]\l  %33 = phi double [ 0.000000e+00, %16 ], [ %140, %25 ]\l  %34 = phi double [ 0.000000e+00, %16 ], [ %139, %25 ]\l  %35 = icmp eq i32 %20, 0\l  br i1 %35, label %61, label %36\l|{<s0>T|<s1>F}}"];
	Node0x630ecb0:s0 -> Node0x630e610;
	Node0x630ecb0:s1 -> Node0x63103b0;
	Node0x63103b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%36:\l36:                                               \l  %37 = add nuw nsw i32 %32, %12\l  %38 = icmp slt i32 %37, %0\l  br i1 %38, label %39, label %61\l|{<s0>T|<s1>F}}"];
	Node0x63103b0:s0 -> Node0x6310610;
	Node0x63103b0:s1 -> Node0x630e610;
	Node0x6310610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%39:\l39:                                               \l  %40 = zext i32 %37 to i64\l  %41 = getelementptr inbounds double, double addrspace(1)* %2, i64 %40\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %43 = add nsw i32 %37, %14\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds double, double addrspace(1)* %5, i64 %44\l  %46 = load double, double addrspace(1)* %45, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %47 = fmul contract double %42, %46\l  %48 = fadd contract double %31, %47\l  %49 = getelementptr inbounds double, double addrspace(1)* %3, i64 %40\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %51 = getelementptr inbounds double, double addrspace(1)* %6, i64 %44\l  %52 = load double, double addrspace(1)* %51, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %53 = fmul contract double %50, %52\l  %54 = fadd contract double %34, %53\l  %55 = getelementptr inbounds double, double addrspace(1)* %4, i64 %40\l  %56 = load double, double addrspace(1)* %55, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %57 = getelementptr inbounds double, double addrspace(1)* %7, i64 %44\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %59 = fmul contract double %56, %58\l  %60 = fadd contract double %33, %59\l  br label %61\l}"];
	Node0x6310610 -> Node0x630e610;
	Node0x630e610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%61:\l61:                                               \l  %62 = phi double [ 0.000000e+00, %11 ], [ %28, %27 ], [ %54, %39 ], [ %34,\l... %36 ]\l  %63 = phi double [ 0.000000e+00, %11 ], [ %29, %27 ], [ %60, %39 ], [ %33,\l... %36 ]\l  %64 = phi double [ 0.000000e+00, %11 ], [ %30, %27 ], [ %48, %39 ], [ %31,\l... %36 ]\l  %65 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_PdS1_S1_E7s_vac_x, i32 0, i32 %12\l  store double %64, double addrspace(3)* %65, align 8, !tbaa !5\l  %66 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_PdS1_S1_E7s_vac_y, i32 0, i32 %12\l  store double %62, double addrspace(3)* %66, align 8, !tbaa !5\l  %67 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_PdS1_S1_E7s_vac_z, i32 0, i32 %12\l  store double %63, double addrspace(3)* %67, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %68 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %69 = getelementptr i8, i8 addrspace(4)* %68, i64 4\l  %70 = bitcast i8 addrspace(4)* %69 to i16 addrspace(4)*\l  %71 = load i16, i16 addrspace(4)* %70, align 4, !range !10, !invariant.load\l... !9\l  %72 = zext i16 %71 to i32\l  %73 = getelementptr inbounds i8, i8 addrspace(4)* %68, i64 12\l  %74 = bitcast i8 addrspace(4)* %73 to i32 addrspace(4)*\l  %75 = load i32, i32 addrspace(4)* %74, align 4, !tbaa !11\l  %76 = icmp ult i16 %71, 2\l  br i1 %76, label %145, label %147\l|{<s0>T|<s1>F}}"];
	Node0x630e610:s0 -> Node0x63138c0;
	Node0x630e610:s1 -> Node0x6313950;
	Node0x630ef00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%77:\l77:                                               \l  %78 = phi double [ 0.000000e+00, %23 ], [ %141, %138 ]\l  %79 = phi i32 [ 0, %23 ], [ %142, %138 ]\l  %80 = phi double [ 0.000000e+00, %23 ], [ %140, %138 ]\l  %81 = phi double [ 0.000000e+00, %23 ], [ %139, %138 ]\l  %82 = phi i32 [ 0, %23 ], [ %143, %138 ]\l  %83 = shl nsw i32 %79, 7\l  %84 = add nuw nsw i32 %83, %12\l  %85 = icmp slt i32 %84, %0\l  br i1 %85, label %86, label %108\l|{<s0>T|<s1>F}}"];
	Node0x630ef00:s0 -> Node0x6314010;
	Node0x630ef00:s1 -> Node0x63140a0;
	Node0x6314010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%86:\l86:                                               \l  %87 = zext i32 %84 to i64\l  %88 = getelementptr inbounds double, double addrspace(1)* %2, i64 %87\l  %89 = load double, double addrspace(1)* %88, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %90 = add nsw i32 %84, %14\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds double, double addrspace(1)* %5, i64 %91\l  %93 = load double, double addrspace(1)* %92, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %94 = fmul contract double %89, %93\l  %95 = fadd contract double %78, %94\l  %96 = getelementptr inbounds double, double addrspace(1)* %3, i64 %87\l  %97 = load double, double addrspace(1)* %96, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %98 = getelementptr inbounds double, double addrspace(1)* %6, i64 %91\l  %99 = load double, double addrspace(1)* %98, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %100 = fmul contract double %97, %99\l  %101 = fadd contract double %81, %100\l  %102 = getelementptr inbounds double, double addrspace(1)* %4, i64 %87\l  %103 = load double, double addrspace(1)* %102, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %104 = getelementptr inbounds double, double addrspace(1)* %7, i64 %91\l  %105 = load double, double addrspace(1)* %104, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %106 = fmul contract double %103, %105\l  %107 = fadd contract double %80, %106\l  br label %108\l}"];
	Node0x6314010 -> Node0x63140a0;
	Node0x63140a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%108:\l108:                                              \l  %109 = phi double [ %101, %86 ], [ %81, %77 ]\l  %110 = phi double [ %107, %86 ], [ %80, %77 ]\l  %111 = phi double [ %95, %86 ], [ %78, %77 ]\l  %112 = shl i32 %79, 7\l  %113 = or i32 %112, 128\l  %114 = add nuw nsw i32 %113, %12\l  %115 = icmp slt i32 %114, %0\l  br i1 %115, label %116, label %138\l|{<s0>T|<s1>F}}"];
	Node0x63140a0:s0 -> Node0x6315380;
	Node0x63140a0:s1 -> Node0x6313a90;
	Node0x6315380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%116:\l116:                                              \l  %117 = zext i32 %114 to i64\l  %118 = getelementptr inbounds double, double addrspace(1)* %2, i64 %117\l  %119 = load double, double addrspace(1)* %118, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %120 = add nsw i32 %114, %14\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds double, double addrspace(1)* %5, i64 %121\l  %123 = load double, double addrspace(1)* %122, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %124 = fmul contract double %119, %123\l  %125 = fadd contract double %111, %124\l  %126 = getelementptr inbounds double, double addrspace(1)* %3, i64 %117\l  %127 = load double, double addrspace(1)* %126, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %128 = getelementptr inbounds double, double addrspace(1)* %6, i64 %121\l  %129 = load double, double addrspace(1)* %128, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %130 = fmul contract double %127, %129\l  %131 = fadd contract double %109, %130\l  %132 = getelementptr inbounds double, double addrspace(1)* %4, i64 %117\l  %133 = load double, double addrspace(1)* %132, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %134 = getelementptr inbounds double, double addrspace(1)* %7, i64 %121\l  %135 = load double, double addrspace(1)* %134, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %136 = fmul contract double %133, %135\l  %137 = fadd contract double %110, %136\l  br label %138\l}"];
	Node0x6315380 -> Node0x6313a90;
	Node0x6313a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%138:\l138:                                              \l  %139 = phi double [ %131, %116 ], [ %109, %108 ]\l  %140 = phi double [ %137, %116 ], [ %110, %108 ]\l  %141 = phi double [ %125, %116 ], [ %111, %108 ]\l  %142 = add nuw nsw i32 %79, 2\l  %143 = add i32 %82, 2\l  %144 = icmp eq i32 %143, %24\l  br i1 %144, label %25, label %77, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x6313a90:s0 -> Node0x630efc0;
	Node0x6313a90:s1 -> Node0x630ef00;
	Node0x63138c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%145:\l145:                                              \l  %146 = icmp eq i32 %12, 0\l  br i1 %146, label %167, label %195\l|{<s0>T|<s1>F}}"];
	Node0x63138c0:s0 -> Node0x6316ae0;
	Node0x63138c0:s1 -> Node0x6316b30;
	Node0x6313950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%147:\l147:                                              \l  %148 = phi i32 [ %149, %165 ], [ %72, %61 ]\l  %149 = lshr i32 %148, 1\l  %150 = icmp ult i32 %12, %149\l  br i1 %150, label %151, label %165\l|{<s0>T|<s1>F}}"];
	Node0x6313950:s0 -> Node0x6316e50;
	Node0x6313950:s1 -> Node0x6316c30;
	Node0x6316e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%151:\l151:                                              \l  %152 = add nuw nsw i32 %149, %12\l  %153 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_PdS1_S1_E7s_vac_x, i32 0, i32 %152\l  %154 = load double, double addrspace(3)* %153, align 8, !tbaa !5\l  %155 = load double, double addrspace(3)* %65, align 8, !tbaa !5\l  %156 = fadd contract double %154, %155\l  store double %156, double addrspace(3)* %65, align 8, !tbaa !5\l  %157 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_PdS1_S1_E7s_vac_y, i32 0, i32 %152\l  %158 = load double, double addrspace(3)* %157, align 8, !tbaa !5\l  %159 = load double, double addrspace(3)* %66, align 8, !tbaa !5\l  %160 = fadd contract double %158, %159\l  store double %160, double addrspace(3)* %66, align 8, !tbaa !5\l  %161 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_PdS1_S1_E7s_vac_z, i32 0, i32 %152\l  %162 = load double, double addrspace(3)* %161, align 8, !tbaa !5\l  %163 = load double, double addrspace(3)* %67, align 8, !tbaa !5\l  %164 = fadd contract double %162, %163\l  store double %164, double addrspace(3)* %67, align 8, !tbaa !5\l  br label %165\l}"];
	Node0x6316e50 -> Node0x6316c30;
	Node0x6316c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%165:\l165:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %166 = icmp ult i32 %148, 4\l  br i1 %166, label %145, label %147, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x6316c30:s0 -> Node0x63138c0;
	Node0x6316c30:s1 -> Node0x6313950;
	Node0x6316ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%167:\l167:                                              \l  %168 = icmp sgt i32 %13, %1\l  %169 = load double, double addrspace(3)* getelementptr inbounds ([128 x\l... double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_PdS1_S1_E7s_vac_x, i32 0, i32 0), align\l... 16, !tbaa !5\l  br i1 %168, label %173, label %170\l|{<s0>T|<s1>F}}"];
	Node0x6316ae0:s0 -> Node0x6318020;
	Node0x6316ae0:s1 -> Node0x6318070;
	Node0x6318070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%170:\l170:                                              \l  %171 = sub nsw i32 %1, %13\l  %172 = sext i32 %171 to i64\l  br label %182\l}"];
	Node0x6318070 -> Node0x6318270;
	Node0x6318020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%173:\l173:                                              \l  %174 = udiv i32 %75, %72\l  %175 = mul i32 %174, %72\l  %176 = icmp ugt i32 %75, %175\l  %177 = zext i1 %176 to i32\l  %178 = sub i32 %1, %13\l  %179 = add i32 %178, %174\l  %180 = add i32 %179, %177\l  %181 = zext i32 %180 to i64\l  br label %182\l}"];
	Node0x6318020 -> Node0x6318270;
	Node0x6318270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%182:\l182:                                              \l  %183 = phi i64 [ %181, %173 ], [ %172, %170 ]\l  %184 = getelementptr inbounds double, double addrspace(1)* %8, i64 %183\l  %185 = load double, double addrspace(1)* %184, align 8, !tbaa !5\l  %186 = fadd contract double %169, %185\l  store double %186, double addrspace(1)* %184, align 8, !tbaa !5\l  %187 = load double, double addrspace(3)* getelementptr inbounds ([128 x\l... double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_PdS1_S1_E7s_vac_y, i32 0, i32 0), align\l... 16, !tbaa !5\l  %188 = getelementptr inbounds double, double addrspace(1)* %9, i64 %183\l  %189 = load double, double addrspace(1)* %188, align 8, !tbaa !5\l  %190 = fadd contract double %187, %189\l  store double %190, double addrspace(1)* %188, align 8, !tbaa !5\l  %191 = load double, double addrspace(3)* getelementptr inbounds ([128 x\l... double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_PdS1_S1_E7s_vac_z, i32 0, i32 0), align\l... 16, !tbaa !5\l  %192 = getelementptr inbounds double, double addrspace(1)* %10, i64 %183\l  %193 = load double, double addrspace(1)* %192, align 8, !tbaa !5\l  %194 = fadd contract double %191, %193\l  store double %194, double addrspace(1)* %192, align 8, !tbaa !5\l  br label %195\l}"];
	Node0x6318270 -> Node0x6316b30;
	Node0x6316b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%195:\l195:                                              \l  ret void\l}"];
}
