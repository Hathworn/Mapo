digraph "CFG for '_Z34gpu_calculate_potential_differenceiiPKdS0_Pd' function" {
	label="CFG for '_Z34gpu_calculate_potential_differenceiiPKdS0_Pd' function";

	Node0x4553720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = getelementptr inbounds [1024 x double], [1024 x double] addrspace(3)*\l... @_ZZ34gpu_calculate_potential_differenceiiPKdS0_PdE6s_diff, i32 0, i32 %6\l  %8 = icmp sgt i32 %1, 0\l  br i1 %8, label %9, label %39\l|{<s0>T|<s1>F}}"];
	Node0x4553720:s0 -> Node0x4552e20;
	Node0x4553720:s1 -> Node0x4554cf0;
	Node0x4552e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%9:\l9:                                                \l  %10 = and i32 %1, 3\l  %11 = icmp ult i32 %1, 4\l  br i1 %11, label %14, label %12\l|{<s0>T|<s1>F}}"];
	Node0x4552e20:s0 -> Node0x4554f80;
	Node0x4552e20:s1 -> Node0x4554fd0;
	Node0x4554fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%12:\l12:                                               \l  %13 = and i32 %1, -4\l  br label %48\l}"];
	Node0x4554fd0 -> Node0x45551d0;
	Node0x4554f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%14:\l14:                                               \l  %15 = phi double [ undef, %9 ], [ %106, %105 ]\l  %16 = phi double [ 0.000000e+00, %9 ], [ %106, %105 ]\l  %17 = phi i32 [ 0, %9 ], [ %107, %105 ]\l  %18 = icmp eq i32 %10, 0\l  br i1 %18, label %39, label %19\l|{<s0>T|<s1>F}}"];
	Node0x4554f80:s0 -> Node0x4554cf0;
	Node0x4554f80:s1 -> Node0x4556150;
	Node0x4556150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%19:\l19:                                               \l  %20 = phi double [ %35, %34 ], [ %16, %14 ]\l  %21 = phi i32 [ %36, %34 ], [ %17, %14 ]\l  %22 = phi i32 [ %37, %34 ], [ 0, %14 ]\l  %23 = shl nsw i32 %21, 10\l  %24 = or i32 %23, %6\l  %25 = icmp slt i32 %24, %0\l  br i1 %25, label %26, label %34\l|{<s0>T|<s1>F}}"];
	Node0x4556150:s0 -> Node0x4556820;
	Node0x4556150:s1 -> Node0x45562c0;
	Node0x4556820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%26:\l26:                                               \l  %27 = zext i32 %24 to i64\l  %28 = getelementptr inbounds double, double addrspace(1)* %3, i64 %27\l  %29 = load double, double addrspace(1)* %28, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %30 = getelementptr inbounds double, double addrspace(1)* %2, i64 %27\l  %31 = load double, double addrspace(1)* %30, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %32 = fsub contract double %29, %31\l  %33 = fadd contract double %20, %32\l  br label %34\l}"];
	Node0x4556820 -> Node0x45562c0;
	Node0x45562c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%34:\l34:                                               \l  %35 = phi double [ %33, %26 ], [ %20, %19 ]\l  %36 = add nuw nsw i32 %21, 1\l  %37 = add i32 %22, 1\l  %38 = icmp eq i32 %37, %10\l  br i1 %38, label %39, label %19, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x45562c0:s0 -> Node0x4554cf0;
	Node0x45562c0:s1 -> Node0x4556150;
	Node0x4554cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%39:\l39:                                               \l  %40 = phi double [ 0.000000e+00, %5 ], [ %15, %14 ], [ %35, %34 ]\l  store double %40, double addrspace(3)* %7, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %41 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %42 = getelementptr i8, i8 addrspace(4)* %41, i64 4\l  %43 = bitcast i8 addrspace(4)* %42 to i16 addrspace(4)*\l  %44 = load i16, i16 addrspace(4)* %43, align 4, !range !12, !invariant.load\l... !9\l  %45 = icmp ult i16 %44, 2\l  br i1 %45, label %110, label %46\l|{<s0>T|<s1>F}}"];
	Node0x4554cf0:s0 -> Node0x4558ad0;
	Node0x4554cf0:s1 -> Node0x4558b60;
	Node0x4558b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%46:\l46:                                               \l  %47 = zext i16 %44 to i32\l  br label %112\l}"];
	Node0x4558b60 -> Node0x4558d10;
	Node0x45551d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%48:\l48:                                               \l  %49 = phi double [ 0.000000e+00, %12 ], [ %106, %105 ]\l  %50 = phi i32 [ 0, %12 ], [ %107, %105 ]\l  %51 = phi i32 [ 0, %12 ], [ %108, %105 ]\l  %52 = shl nsw i32 %50, 10\l  %53 = or i32 %52, %6\l  %54 = icmp slt i32 %53, %0\l  br i1 %54, label %55, label %63\l|{<s0>T|<s1>F}}"];
	Node0x45551d0:s0 -> Node0x45591c0;
	Node0x45551d0:s1 -> Node0x4559250;
	Node0x45591c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%55:\l55:                                               \l  %56 = zext i32 %53 to i64\l  %57 = getelementptr inbounds double, double addrspace(1)* %3, i64 %56\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %59 = getelementptr inbounds double, double addrspace(1)* %2, i64 %56\l  %60 = load double, double addrspace(1)* %59, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %61 = fsub contract double %58, %60\l  %62 = fadd contract double %49, %61\l  br label %63\l}"];
	Node0x45591c0 -> Node0x4559250;
	Node0x4559250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%63:\l63:                                               \l  %64 = phi double [ %62, %55 ], [ %49, %48 ]\l  %65 = shl i32 %50, 10\l  %66 = or i32 %65, %6\l  %67 = or i32 %66, 1024\l  %68 = icmp slt i32 %67, %0\l  br i1 %68, label %69, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4559250:s0 -> Node0x4557d40;
	Node0x4559250:s1 -> Node0x4559db0;
	Node0x4557d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%69:\l69:                                               \l  %70 = zext i32 %67 to i64\l  %71 = getelementptr inbounds double, double addrspace(1)* %3, i64 %70\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %73 = getelementptr inbounds double, double addrspace(1)* %2, i64 %70\l  %74 = load double, double addrspace(1)* %73, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %75 = fsub contract double %72, %74\l  %76 = fadd contract double %64, %75\l  br label %77\l}"];
	Node0x4557d40 -> Node0x4559db0;
	Node0x4559db0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%77:\l77:                                               \l  %78 = phi double [ %76, %69 ], [ %64, %63 ]\l  %79 = shl i32 %50, 10\l  %80 = or i32 %79, %6\l  %81 = or i32 %80, 2048\l  %82 = icmp slt i32 %81, %0\l  br i1 %82, label %83, label %91\l|{<s0>T|<s1>F}}"];
	Node0x4559db0:s0 -> Node0x455a640;
	Node0x4559db0:s1 -> Node0x455a690;
	Node0x455a640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%83:\l83:                                               \l  %84 = zext i32 %81 to i64\l  %85 = getelementptr inbounds double, double addrspace(1)* %3, i64 %84\l  %86 = load double, double addrspace(1)* %85, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %87 = getelementptr inbounds double, double addrspace(1)* %2, i64 %84\l  %88 = load double, double addrspace(1)* %87, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %89 = fsub contract double %86, %88\l  %90 = fadd contract double %78, %89\l  br label %91\l}"];
	Node0x455a640 -> Node0x455a690;
	Node0x455a690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%91:\l91:                                               \l  %92 = phi double [ %90, %83 ], [ %78, %77 ]\l  %93 = shl i32 %50, 10\l  %94 = or i32 %93, %6\l  %95 = or i32 %94, 3072\l  %96 = icmp slt i32 %95, %0\l  br i1 %96, label %97, label %105\l|{<s0>T|<s1>F}}"];
	Node0x455a690:s0 -> Node0x455af50;
	Node0x455a690:s1 -> Node0x45552c0;
	Node0x455af50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%97:\l97:                                               \l  %98 = zext i32 %95 to i64\l  %99 = getelementptr inbounds double, double addrspace(1)* %3, i64 %98\l  %100 = load double, double addrspace(1)* %99, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %101 = getelementptr inbounds double, double addrspace(1)* %2, i64 %98\l  %102 = load double, double addrspace(1)* %101, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %103 = fsub contract double %100, %102\l  %104 = fadd contract double %92, %103\l  br label %105\l}"];
	Node0x455af50 -> Node0x45552c0;
	Node0x45552c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%105:\l105:                                              \l  %106 = phi double [ %104, %97 ], [ %92, %91 ]\l  %107 = add nuw nsw i32 %50, 4\l  %108 = add i32 %51, 4\l  %109 = icmp eq i32 %108, %13\l  br i1 %109, label %14, label %48, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x45552c0:s0 -> Node0x4554f80;
	Node0x45552c0:s1 -> Node0x45551d0;
	Node0x4558ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%110:\l110:                                              \l  %111 = icmp eq i32 %6, 0\l  br i1 %111, label %124, label %126\l|{<s0>T|<s1>F}}"];
	Node0x4558ad0:s0 -> Node0x455b900;
	Node0x4558ad0:s1 -> Node0x455b950;
	Node0x4558d10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%112:\l112:                                              \l  %113 = phi i32 [ %114, %122 ], [ %47, %46 ]\l  %114 = lshr i32 %113, 1\l  %115 = icmp ult i32 %6, %114\l  br i1 %115, label %116, label %122\l|{<s0>T|<s1>F}}"];
	Node0x4558d10:s0 -> Node0x455bcb0;
	Node0x4558d10:s1 -> Node0x455ba50;
	Node0x455bcb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%116:\l116:                                              \l  %117 = add nuw nsw i32 %114, %6\l  %118 = getelementptr inbounds [1024 x double], [1024 x double] addrspace(3)*\l... @_ZZ34gpu_calculate_potential_differenceiiPKdS0_PdE6s_diff, i32 0, i32 %117\l  %119 = load double, double addrspace(3)* %118, align 8, !tbaa !5\l  %120 = load double, double addrspace(3)* %7, align 8, !tbaa !5\l  %121 = fadd contract double %119, %120\l  store double %121, double addrspace(3)* %7, align 8, !tbaa !5\l  br label %122\l}"];
	Node0x455bcb0 -> Node0x455ba50;
	Node0x455ba50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%122:\l122:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %123 = icmp ult i32 %113, 4\l  br i1 %123, label %110, label %112, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x455ba50:s0 -> Node0x4558ad0;
	Node0x455ba50:s1 -> Node0x4558d10;
	Node0x455b900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%124:\l124:                                              \l  %125 = load double, double addrspace(3)* getelementptr inbounds ([1024 x\l... double], [1024 x double] addrspace(3)*\l... @_ZZ34gpu_calculate_potential_differenceiiPKdS0_PdE6s_diff, i32 0, i32 0),\l... align 16, !tbaa !5\l  store double %125, double addrspace(1)* %4, align 8, !tbaa !5\l  br label %126\l}"];
	Node0x455b900 -> Node0x455b950;
	Node0x455b950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%126:\l126:                                              \l  ret void\l}"];
}
