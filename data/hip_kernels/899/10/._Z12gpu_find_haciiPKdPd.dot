digraph "CFG for '_Z12gpu_find_haciiPKdPd' function" {
	label="CFG for '_Z12gpu_find_haciiPKdPd' function";

	Node0x53cd880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = sub nsw i32 %1, %6\l  %8 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_haciiPKdPdE8s_hac_xi, i32 0, i32 %5\l  store double 0.000000e+00, double addrspace(3)* %8, align 8, !tbaa !5\l  %9 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_haciiPKdPdE8s_hac_xo, i32 0, i32 %5\l  store double 0.000000e+00, double addrspace(3)* %9, align 8, !tbaa !5\l  %10 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_haciiPKdPdE8s_hac_yi, i32 0, i32 %5\l  store double 0.000000e+00, double addrspace(3)* %10, align 8, !tbaa !5\l  %11 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_haciiPKdPdE8s_hac_yo, i32 0, i32 %5\l  store double 0.000000e+00, double addrspace(3)* %11, align 8, !tbaa !5\l  %12 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_haciiPKdPdE7s_hac_z, i32 0, i32 %5\l  store double 0.000000e+00, double addrspace(3)* %12, align 8, !tbaa !5\l  %13 = icmp slt i32 %1, -126\l  br i1 %13, label %20, label %14\l|{<s0>T|<s1>F}}"];
	Node0x53cd880:s0 -> Node0x53cfc70;
	Node0x53cd880:s1 -> Node0x53d08e0;
	Node0x53d08e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%14:\l14:                                               \l  %15 = add nsw i32 %1, -1\l  %16 = sdiv i32 %15, 128\l  %17 = shl nsw i32 %1, 1\l  %18 = mul nsw i32 %1, 3\l  %19 = shl nsw i32 %1, 2\l  br label %28\l}"];
	Node0x53d08e0 -> Node0x53d0e60;
	Node0x53cfc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%20:\l20:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %21 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %22 = getelementptr i8, i8 addrspace(4)* %21, i64 4\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 4, !range !9, !invariant.load\l... !10\l  %25 = icmp ult i16 %24, 2\l  br i1 %25, label %104, label %26\l|{<s0>T|<s1>F}}"];
	Node0x53cfc70:s0 -> Node0x53d1940;
	Node0x53cfc70:s1 -> Node0x53d19d0;
	Node0x53d19d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%26:\l26:                                               \l  %27 = zext i16 %24 to i32\l  br label %106\l}"];
	Node0x53d19d0 -> Node0x53d1b80;
	Node0x53d0e60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi double [ 0.000000e+00, %14 ], [ %97, %96 ]\l  %30 = phi double [ 0.000000e+00, %14 ], [ %98, %96 ]\l  %31 = phi double [ 0.000000e+00, %14 ], [ %99, %96 ]\l  %32 = phi double [ 0.000000e+00, %14 ], [ %100, %96 ]\l  %33 = phi double [ 0.000000e+00, %14 ], [ %101, %96 ]\l  %34 = phi i32 [ 0, %14 ], [ %102, %96 ]\l  %35 = shl nsw i32 %34, 7\l  %36 = add nuw nsw i32 %35, %5\l  %37 = add nsw i32 %36, %6\l  %38 = icmp slt i32 %37, %1\l  br i1 %38, label %39, label %96\l|{<s0>T|<s1>F}}"];
	Node0x53d0e60:s0 -> Node0x53d26e0;
	Node0x53d0e60:s1 -> Node0x53d1c70;
	Node0x53d26e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%39:\l39:                                               \l  %40 = zext i32 %36 to i64\l  %41 = getelementptr inbounds double, double addrspace(1)* %2, i64 %40\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !5,\l... !amdgpu.noclobber !10\l  %43 = sext i32 %37 to i64\l  %44 = getelementptr inbounds double, double addrspace(1)* %2, i64 %43\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !5,\l... !amdgpu.noclobber !10\l  %46 = fmul contract double %42, %45\l  %47 = add nsw i32 %37, %1\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %2, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !5,\l... !amdgpu.noclobber !10\l  %51 = fmul contract double %42, %50\l  %52 = fadd contract double %46, %51\l  %53 = fadd contract double %33, %52\l  store double %53, double addrspace(3)* %8, align 8, !tbaa !5\l  %54 = add nsw i32 %36, %1\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds double, double addrspace(1)* %2, i64 %55\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !5,\l... !amdgpu.noclobber !10\l  %58 = fmul contract double %50, %57\l  %59 = fmul contract double %45, %57\l  %60 = fadd contract double %58, %59\l  %61 = fadd contract double %32, %60\l  store double %61, double addrspace(3)* %9, align 8, !tbaa !5\l  %62 = add nsw i32 %36, %17\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds double, double addrspace(1)* %2, i64 %63\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !5,\l... !amdgpu.noclobber !10\l  %66 = add nsw i32 %37, %17\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds double, double addrspace(1)* %2, i64 %67\l  %69 = load double, double addrspace(1)* %68, align 8, !tbaa !5,\l... !amdgpu.noclobber !10\l  %70 = fmul contract double %65, %69\l  %71 = add nsw i32 %37, %18\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds double, double addrspace(1)* %2, i64 %72\l  %74 = load double, double addrspace(1)* %73, align 8, !tbaa !5,\l... !amdgpu.noclobber !10\l  %75 = fmul contract double %65, %74\l  %76 = fadd contract double %70, %75\l  %77 = fadd contract double %31, %76\l  store double %77, double addrspace(3)* %10, align 8, !tbaa !5\l  %78 = add nsw i32 %36, %18\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds double, double addrspace(1)* %2, i64 %79\l  %81 = load double, double addrspace(1)* %80, align 8, !tbaa !5,\l... !amdgpu.noclobber !10\l  %82 = fmul contract double %74, %81\l  %83 = fmul contract double %69, %81\l  %84 = fadd contract double %82, %83\l  %85 = fadd contract double %30, %84\l  store double %85, double addrspace(3)* %11, align 8, !tbaa !5\l  %86 = add nsw i32 %36, %19\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds double, double addrspace(1)* %2, i64 %87\l  %89 = load double, double addrspace(1)* %88, align 8, !tbaa !5,\l... !amdgpu.noclobber !10\l  %90 = add nsw i32 %37, %19\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds double, double addrspace(1)* %2, i64 %91\l  %93 = load double, double addrspace(1)* %92, align 8, !tbaa !5,\l... !amdgpu.noclobber !10\l  %94 = fmul contract double %89, %93\l  %95 = fadd contract double %29, %94\l  store double %95, double addrspace(3)* %12, align 8, !tbaa !5\l  br label %96\l}"];
	Node0x53d26e0 -> Node0x53d1c70;
	Node0x53d1c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%96:\l96:                                               \l  %97 = phi double [ %95, %39 ], [ %29, %28 ]\l  %98 = phi double [ %85, %39 ], [ %30, %28 ]\l  %99 = phi double [ %77, %39 ], [ %31, %28 ]\l  %100 = phi double [ %61, %39 ], [ %32, %28 ]\l  %101 = phi double [ %53, %39 ], [ %33, %28 ]\l  %102 = add nuw nsw i32 %34, 1\l  %103 = icmp eq i32 %34, %16\l  br i1 %103, label %20, label %28, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x53d1c70:s0 -> Node0x53cfc70;
	Node0x53d1c70:s1 -> Node0x53d0e60;
	Node0x53d1940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%104:\l104:                                              \l  %105 = icmp eq i32 %5, 0\l  br i1 %105, label %134, label %163\l|{<s0>T|<s1>F}}"];
	Node0x53d1940:s0 -> Node0x53d5a30;
	Node0x53d1940:s1 -> Node0x53d5a80;
	Node0x53d1b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  %107 = phi i32 [ %108, %132 ], [ %27, %26 ]\l  %108 = lshr i32 %107, 1\l  %109 = icmp ult i32 %5, %108\l  br i1 %109, label %110, label %132\l|{<s0>T|<s1>F}}"];
	Node0x53d1b80:s0 -> Node0x53d5da0;
	Node0x53d1b80:s1 -> Node0x53d5b80;
	Node0x53d5da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%110:\l110:                                              \l  %111 = add nuw nsw i32 %108, %5\l  %112 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_haciiPKdPdE8s_hac_xi, i32 0, i32 %111\l  %113 = load double, double addrspace(3)* %112, align 8, !tbaa !5\l  %114 = load double, double addrspace(3)* %8, align 8, !tbaa !5\l  %115 = fadd contract double %113, %114\l  store double %115, double addrspace(3)* %8, align 8, !tbaa !5\l  %116 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_haciiPKdPdE8s_hac_xo, i32 0, i32 %111\l  %117 = load double, double addrspace(3)* %116, align 8, !tbaa !5\l  %118 = load double, double addrspace(3)* %9, align 8, !tbaa !5\l  %119 = fadd contract double %117, %118\l  store double %119, double addrspace(3)* %9, align 8, !tbaa !5\l  %120 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_haciiPKdPdE8s_hac_yi, i32 0, i32 %111\l  %121 = load double, double addrspace(3)* %120, align 8, !tbaa !5\l  %122 = load double, double addrspace(3)* %10, align 8, !tbaa !5\l  %123 = fadd contract double %121, %122\l  store double %123, double addrspace(3)* %10, align 8, !tbaa !5\l  %124 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_haciiPKdPdE8s_hac_yo, i32 0, i32 %111\l  %125 = load double, double addrspace(3)* %124, align 8, !tbaa !5\l  %126 = load double, double addrspace(3)* %11, align 8, !tbaa !5\l  %127 = fadd contract double %125, %126\l  store double %127, double addrspace(3)* %11, align 8, !tbaa !5\l  %128 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_haciiPKdPdE7s_hac_z, i32 0, i32 %111\l  %129 = load double, double addrspace(3)* %128, align 8, !tbaa !5\l  %130 = load double, double addrspace(3)* %12, align 8, !tbaa !5\l  %131 = fadd contract double %129, %130\l  store double %131, double addrspace(3)* %12, align 8, !tbaa !5\l  br label %132\l}"];
	Node0x53d5da0 -> Node0x53d5b80;
	Node0x53d5b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%132:\l132:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %133 = icmp ult i32 %107, 4\l  br i1 %133, label %104, label %106, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x53d5b80:s0 -> Node0x53d1940;
	Node0x53d5b80:s1 -> Node0x53d1b80;
	Node0x53d5a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%134:\l134:                                              \l  %135 = load double, double addrspace(3)* getelementptr inbounds ([128 x\l... double], [128 x double] addrspace(3)* @_ZZ12gpu_find_haciiPKdPdE8s_hac_xi,\l... i32 0, i32 0), align 16, !tbaa !5\l  %136 = sitofp i32 %7 to double\l  %137 = fdiv contract double %135, %136\l  %138 = sext i32 %6 to i64\l  %139 = getelementptr inbounds double, double addrspace(1)* %3, i64 %138\l  store double %137, double addrspace(1)* %139, align 8, !tbaa !5\l  %140 = load double, double addrspace(3)* getelementptr inbounds ([128 x\l... double], [128 x double] addrspace(3)* @_ZZ12gpu_find_haciiPKdPdE8s_hac_xo,\l... i32 0, i32 0), align 16, !tbaa !5\l  %141 = fdiv contract double %140, %136\l  %142 = add nsw i32 %6, %0\l  %143 = sext i32 %142 to i64\l  %144 = getelementptr inbounds double, double addrspace(1)* %3, i64 %143\l  store double %141, double addrspace(1)* %144, align 8, !tbaa !5\l  %145 = load double, double addrspace(3)* getelementptr inbounds ([128 x\l... double], [128 x double] addrspace(3)* @_ZZ12gpu_find_haciiPKdPdE8s_hac_yi,\l... i32 0, i32 0), align 16, !tbaa !5\l  %146 = fdiv contract double %145, %136\l  %147 = shl nsw i32 %0, 1\l  %148 = add nsw i32 %147, %6\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds double, double addrspace(1)* %3, i64 %149\l  store double %146, double addrspace(1)* %150, align 8, !tbaa !5\l  %151 = load double, double addrspace(3)* getelementptr inbounds ([128 x\l... double], [128 x double] addrspace(3)* @_ZZ12gpu_find_haciiPKdPdE8s_hac_yo,\l... i32 0, i32 0), align 16, !tbaa !5\l  %152 = fdiv contract double %151, %136\l  %153 = mul nsw i32 %0, 3\l  %154 = add nsw i32 %153, %6\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds double, double addrspace(1)* %3, i64 %155\l  store double %152, double addrspace(1)* %156, align 8, !tbaa !5\l  %157 = load double, double addrspace(3)* getelementptr inbounds ([128 x\l... double], [128 x double] addrspace(3)* @_ZZ12gpu_find_haciiPKdPdE7s_hac_z, i32\l... 0, i32 0), align 16, !tbaa !5\l  %158 = fdiv contract double %157, %136\l  %159 = shl nsw i32 %0, 2\l  %160 = add nsw i32 %159, %6\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds double, double addrspace(1)* %3, i64 %161\l  store double %158, double addrspace(1)* %162, align 8, !tbaa !5\l  br label %163\l}"];
	Node0x53d5a30 -> Node0x53d5a80;
	Node0x53d5a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%163:\l163:                                              \l  ret void\l}"];
}
