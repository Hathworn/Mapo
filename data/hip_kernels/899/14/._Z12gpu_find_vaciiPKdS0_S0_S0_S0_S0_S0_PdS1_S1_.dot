digraph "CFG for '_Z12gpu_find_vaciiPKdS0_S0_S0_S0_S0_S0_PdS1_S1_' function" {
	label="CFG for '_Z12gpu_find_vaciiPKdS0_S0_S0_S0_S0_S0_PdS1_S1_' function";

	Node0x5938b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = mul nsw i32 %14, %0\l  %16 = icmp slt i32 %0, -126\l  br i1 %16, label %67, label %17\l|{<s0>T|<s1>F}}"];
	Node0x5938b00:s0 -> Node0x5938760;
	Node0x5938b00:s1 -> Node0x593aa00;
	Node0x593aa00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%17:\l17:                                               \l  %18 = add nsw i32 %0, -1\l  %19 = sdiv i32 %18, 128\l  %20 = add nsw i32 %19, 1\l  %21 = and i32 %20, 1\l  %22 = add i32 %0, 126\l  %23 = icmp ult i32 %22, 255\l  br i1 %23, label %28, label %24\l|{<s0>T|<s1>F}}"];
	Node0x593aa00:s0 -> Node0x593af90;
	Node0x593aa00:s1 -> Node0x593afe0;
	Node0x593afe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%24:\l24:                                               \l  %25 = and i32 %20, -2\l  br label %83\l}"];
	Node0x593afe0 -> Node0x593b1e0;
	Node0x593b2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%26:\l26:                                               \l  %27 = shl nsw i32 %158, 7\l  br label %28\l}"];
	Node0x593b2a0 -> Node0x593af90;
	Node0x593af90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%28:\l28:                                               \l  %29 = phi double [ undef, %17 ], [ %155, %26 ]\l  %30 = phi double [ undef, %17 ], [ %156, %26 ]\l  %31 = phi double [ undef, %17 ], [ %157, %26 ]\l  %32 = phi double [ 0.000000e+00, %17 ], [ %157, %26 ]\l  %33 = phi double [ 0.000000e+00, %17 ], [ %156, %26 ]\l  %34 = phi i32 [ 0, %17 ], [ %27, %26 ]\l  %35 = phi double [ 0.000000e+00, %17 ], [ %155, %26 ]\l  %36 = icmp eq i32 %21, 0\l  br i1 %36, label %67, label %37\l|{<s0>T|<s1>F}}"];
	Node0x593af90:s0 -> Node0x5938760;
	Node0x593af90:s1 -> Node0x593c6b0;
	Node0x593c6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%37:\l37:                                               \l  %38 = add nuw nsw i32 %34, %13\l  %39 = icmp slt i32 %38, %0\l  br i1 %39, label %40, label %67\l|{<s0>T|<s1>F}}"];
	Node0x593c6b0:s0 -> Node0x593c910;
	Node0x593c6b0:s1 -> Node0x5938760;
	Node0x593c910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%40:\l40:                                               \l  %41 = zext i32 %38 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %2, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %44 = getelementptr inbounds double, double addrspace(1)* %3, i64 %41\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %46 = fmul contract double %43, %45\l  %47 = add nsw i32 %38, %15\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %6, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %51 = fmul contract double %46, %50\l  %52 = fadd contract double %32, %51\l  %53 = getelementptr inbounds double, double addrspace(1)* %4, i64 %41\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %55 = fmul contract double %43, %54\l  %56 = getelementptr inbounds double, double addrspace(1)* %7, i64 %48\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %58 = fmul contract double %55, %57\l  %59 = fadd contract double %33, %58\l  %60 = getelementptr inbounds double, double addrspace(1)* %5, i64 %41\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %62 = fmul contract double %43, %61\l  %63 = getelementptr inbounds double, double addrspace(1)* %8, i64 %48\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %65 = fmul contract double %62, %64\l  %66 = fadd contract double %35, %65\l  br label %67\l}"];
	Node0x593c910 -> Node0x5938760;
	Node0x5938760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%67:\l67:                                               \l  %68 = phi double [ 0.000000e+00, %12 ], [ %29, %28 ], [ %66, %40 ], [ %35,\l... %37 ]\l  %69 = phi double [ 0.000000e+00, %12 ], [ %30, %28 ], [ %59, %40 ], [ %33,\l... %37 ]\l  %70 = phi double [ 0.000000e+00, %12 ], [ %31, %28 ], [ %52, %40 ], [ %32,\l... %37 ]\l  %71 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_S0_PdS1_S1_E7s_vac_x, i32 0, i32 %13\l  store double %70, double addrspace(3)* %71, align 8, !tbaa !5\l  %72 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_S0_PdS1_S1_E7s_vac_y, i32 0, i32 %13\l  store double %69, double addrspace(3)* %72, align 8, !tbaa !5\l  %73 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_S0_PdS1_S1_E7s_vac_z, i32 0, i32 %13\l  store double %68, double addrspace(3)* %73, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %74 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %75 = getelementptr i8, i8 addrspace(4)* %74, i64 4\l  %76 = bitcast i8 addrspace(4)* %75 to i16 addrspace(4)*\l  %77 = load i16, i16 addrspace(4)* %76, align 4, !range !10, !invariant.load\l... !9\l  %78 = zext i16 %77 to i32\l  %79 = getelementptr inbounds i8, i8 addrspace(4)* %74, i64 12\l  %80 = bitcast i8 addrspace(4)* %79 to i32 addrspace(4)*\l  %81 = load i32, i32 addrspace(4)* %80, align 4, !tbaa !11\l  %82 = icmp ult i16 %77, 2\l  br i1 %82, label %161, label %163\l|{<s0>T|<s1>F}}"];
	Node0x5938760:s0 -> Node0x593fe80;
	Node0x5938760:s1 -> Node0x593ff10;
	Node0x593b1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%83:\l83:                                               \l  %84 = phi double [ 0.000000e+00, %24 ], [ %157, %154 ]\l  %85 = phi double [ 0.000000e+00, %24 ], [ %156, %154 ]\l  %86 = phi i32 [ 0, %24 ], [ %158, %154 ]\l  %87 = phi double [ 0.000000e+00, %24 ], [ %155, %154 ]\l  %88 = phi i32 [ 0, %24 ], [ %159, %154 ]\l  %89 = shl nsw i32 %86, 7\l  %90 = add nuw nsw i32 %89, %13\l  %91 = icmp slt i32 %90, %0\l  br i1 %91, label %92, label %119\l|{<s0>T|<s1>F}}"];
	Node0x593b1e0:s0 -> Node0x59405d0;
	Node0x593b1e0:s1 -> Node0x5940660;
	Node0x59405d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%92:\l92:                                               \l  %93 = zext i32 %90 to i64\l  %94 = getelementptr inbounds double, double addrspace(1)* %2, i64 %93\l  %95 = load double, double addrspace(1)* %94, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %96 = getelementptr inbounds double, double addrspace(1)* %3, i64 %93\l  %97 = load double, double addrspace(1)* %96, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %98 = fmul contract double %95, %97\l  %99 = add nsw i32 %90, %15\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds double, double addrspace(1)* %6, i64 %100\l  %102 = load double, double addrspace(1)* %101, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %103 = fmul contract double %98, %102\l  %104 = fadd contract double %84, %103\l  %105 = getelementptr inbounds double, double addrspace(1)* %4, i64 %93\l  %106 = load double, double addrspace(1)* %105, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %107 = fmul contract double %95, %106\l  %108 = getelementptr inbounds double, double addrspace(1)* %7, i64 %100\l  %109 = load double, double addrspace(1)* %108, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %110 = fmul contract double %107, %109\l  %111 = fadd contract double %85, %110\l  %112 = getelementptr inbounds double, double addrspace(1)* %5, i64 %93\l  %113 = load double, double addrspace(1)* %112, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %114 = fmul contract double %95, %113\l  %115 = getelementptr inbounds double, double addrspace(1)* %8, i64 %100\l  %116 = load double, double addrspace(1)* %115, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %117 = fmul contract double %114, %116\l  %118 = fadd contract double %87, %117\l  br label %119\l}"];
	Node0x59405d0 -> Node0x5940660;
	Node0x5940660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%119:\l119:                                              \l  %120 = phi double [ %118, %92 ], [ %87, %83 ]\l  %121 = phi double [ %111, %92 ], [ %85, %83 ]\l  %122 = phi double [ %104, %92 ], [ %84, %83 ]\l  %123 = shl i32 %86, 7\l  %124 = or i32 %123, 128\l  %125 = add nuw nsw i32 %124, %13\l  %126 = icmp slt i32 %125, %0\l  br i1 %126, label %127, label %154\l|{<s0>T|<s1>F}}"];
	Node0x5940660:s0 -> Node0x5941c40;
	Node0x5940660:s1 -> Node0x5940050;
	Node0x5941c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%127:\l127:                                              \l  %128 = zext i32 %125 to i64\l  %129 = getelementptr inbounds double, double addrspace(1)* %2, i64 %128\l  %130 = load double, double addrspace(1)* %129, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %131 = getelementptr inbounds double, double addrspace(1)* %3, i64 %128\l  %132 = load double, double addrspace(1)* %131, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %133 = fmul contract double %130, %132\l  %134 = add nsw i32 %125, %15\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds double, double addrspace(1)* %6, i64 %135\l  %137 = load double, double addrspace(1)* %136, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %138 = fmul contract double %133, %137\l  %139 = fadd contract double %122, %138\l  %140 = getelementptr inbounds double, double addrspace(1)* %4, i64 %128\l  %141 = load double, double addrspace(1)* %140, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %142 = fmul contract double %130, %141\l  %143 = getelementptr inbounds double, double addrspace(1)* %7, i64 %135\l  %144 = load double, double addrspace(1)* %143, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %145 = fmul contract double %142, %144\l  %146 = fadd contract double %121, %145\l  %147 = getelementptr inbounds double, double addrspace(1)* %5, i64 %128\l  %148 = load double, double addrspace(1)* %147, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %149 = fmul contract double %130, %148\l  %150 = getelementptr inbounds double, double addrspace(1)* %8, i64 %135\l  %151 = load double, double addrspace(1)* %150, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %152 = fmul contract double %149, %151\l  %153 = fadd contract double %120, %152\l  br label %154\l}"];
	Node0x5941c40 -> Node0x5940050;
	Node0x5940050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%154:\l154:                                              \l  %155 = phi double [ %153, %127 ], [ %120, %119 ]\l  %156 = phi double [ %146, %127 ], [ %121, %119 ]\l  %157 = phi double [ %139, %127 ], [ %122, %119 ]\l  %158 = add nuw nsw i32 %86, 2\l  %159 = add i32 %88, 2\l  %160 = icmp eq i32 %159, %25\l  br i1 %160, label %26, label %83, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5940050:s0 -> Node0x593b2a0;
	Node0x5940050:s1 -> Node0x593b1e0;
	Node0x593fe80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%161:\l161:                                              \l  %162 = icmp eq i32 %13, 0\l  br i1 %162, label %183, label %211\l|{<s0>T|<s1>F}}"];
	Node0x593fe80:s0 -> Node0x59436c0;
	Node0x593fe80:s1 -> Node0x5943710;
	Node0x593ff10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%163:\l163:                                              \l  %164 = phi i32 [ %165, %181 ], [ %78, %67 ]\l  %165 = lshr i32 %164, 1\l  %166 = icmp ult i32 %13, %165\l  br i1 %166, label %167, label %181\l|{<s0>T|<s1>F}}"];
	Node0x593ff10:s0 -> Node0x5943a30;
	Node0x593ff10:s1 -> Node0x5943810;
	Node0x5943a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%167:\l167:                                              \l  %168 = add nuw nsw i32 %165, %13\l  %169 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_S0_PdS1_S1_E7s_vac_x, i32 0, i32 %168\l  %170 = load double, double addrspace(3)* %169, align 8, !tbaa !5\l  %171 = load double, double addrspace(3)* %71, align 8, !tbaa !5\l  %172 = fadd contract double %170, %171\l  store double %172, double addrspace(3)* %71, align 8, !tbaa !5\l  %173 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_S0_PdS1_S1_E7s_vac_y, i32 0, i32 %168\l  %174 = load double, double addrspace(3)* %173, align 8, !tbaa !5\l  %175 = load double, double addrspace(3)* %72, align 8, !tbaa !5\l  %176 = fadd contract double %174, %175\l  store double %176, double addrspace(3)* %72, align 8, !tbaa !5\l  %177 = getelementptr inbounds [128 x double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_S0_PdS1_S1_E7s_vac_z, i32 0, i32 %168\l  %178 = load double, double addrspace(3)* %177, align 8, !tbaa !5\l  %179 = load double, double addrspace(3)* %73, align 8, !tbaa !5\l  %180 = fadd contract double %178, %179\l  store double %180, double addrspace(3)* %73, align 8, !tbaa !5\l  br label %181\l}"];
	Node0x5943a30 -> Node0x5943810;
	Node0x5943810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%181:\l181:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %182 = icmp ult i32 %164, 4\l  br i1 %182, label %161, label %163, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5943810:s0 -> Node0x593fe80;
	Node0x5943810:s1 -> Node0x593ff10;
	Node0x59436c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%183:\l183:                                              \l  %184 = icmp sgt i32 %14, %1\l  %185 = load double, double addrspace(3)* getelementptr inbounds ([128 x\l... double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_S0_PdS1_S1_E7s_vac_x, i32 0, i32 0),\l... align 16, !tbaa !5\l  br i1 %184, label %189, label %186\l|{<s0>T|<s1>F}}"];
	Node0x59436c0:s0 -> Node0x5944c00;
	Node0x59436c0:s1 -> Node0x5944c50;
	Node0x5944c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%186:\l186:                                              \l  %187 = sub nsw i32 %1, %14\l  %188 = sext i32 %187 to i64\l  br label %198\l}"];
	Node0x5944c50 -> Node0x5944e50;
	Node0x5944c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%189:\l189:                                              \l  %190 = udiv i32 %81, %78\l  %191 = mul i32 %190, %78\l  %192 = icmp ugt i32 %81, %191\l  %193 = zext i1 %192 to i32\l  %194 = sub i32 %1, %14\l  %195 = add i32 %194, %190\l  %196 = add i32 %195, %193\l  %197 = zext i32 %196 to i64\l  br label %198\l}"];
	Node0x5944c00 -> Node0x5944e50;
	Node0x5944e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%198:\l198:                                              \l  %199 = phi i64 [ %197, %189 ], [ %188, %186 ]\l  %200 = getelementptr inbounds double, double addrspace(1)* %9, i64 %199\l  %201 = load double, double addrspace(1)* %200, align 8, !tbaa !5\l  %202 = fadd contract double %185, %201\l  store double %202, double addrspace(1)* %200, align 8, !tbaa !5\l  %203 = load double, double addrspace(3)* getelementptr inbounds ([128 x\l... double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_S0_PdS1_S1_E7s_vac_y, i32 0, i32 0),\l... align 16, !tbaa !5\l  %204 = getelementptr inbounds double, double addrspace(1)* %10, i64 %199\l  %205 = load double, double addrspace(1)* %204, align 8, !tbaa !5\l  %206 = fadd contract double %203, %205\l  store double %206, double addrspace(1)* %204, align 8, !tbaa !5\l  %207 = load double, double addrspace(3)* getelementptr inbounds ([128 x\l... double], [128 x double] addrspace(3)*\l... @_ZZ12gpu_find_vaciiPKdS0_S0_S0_S0_S0_S0_PdS1_S1_E7s_vac_z, i32 0, i32 0),\l... align 16, !tbaa !5\l  %208 = getelementptr inbounds double, double addrspace(1)* %11, i64 %199\l  %209 = load double, double addrspace(1)* %208, align 8, !tbaa !5\l  %210 = fadd contract double %207, %209\l  store double %210, double addrspace(1)* %208, align 8, !tbaa !5\l  br label %211\l}"];
	Node0x5944e50 -> Node0x5943710;
	Node0x5943710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%211:\l211:                                              \l  ret void\l}"];
}
