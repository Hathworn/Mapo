digraph "CFG for '_Z30gpu_calculate_force_square_maxiiPKdPd' function" {
	label="CFG for '_Z30gpu_calculate_force_square_maxiiPKdPd' function";

	Node0x4cedf00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = getelementptr inbounds [1024 x double], [1024 x double] addrspace(3)*\l... @_ZZ30gpu_calculate_force_square_maxiiPKdPdE14s_force_square, i32 0, i32 %5\l  %7 = icmp sgt i32 %1, 0\l  br i1 %7, label %8, label %37\l|{<s0>T|<s1>F}}"];
	Node0x4cedf00:s0 -> Node0x4cef4b0;
	Node0x4cedf00:s1 -> Node0x4cef540;
	Node0x4cef4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%8:\l8:                                                \l  %9 = and i32 %1, 7\l  %10 = icmp ult i32 %1, 8\l  br i1 %10, label %13, label %11\l|{<s0>T|<s1>F}}"];
	Node0x4cef4b0:s0 -> Node0x4cedf90;
	Node0x4cef4b0:s1 -> Node0x4cef860;
	Node0x4cef860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%11:\l11:                                               \l  %12 = and i32 %1, -8\l  br label %46\l}"];
	Node0x4cef860 -> Node0x4cefa60;
	Node0x4cedf90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%13:\l13:                                               \l  %14 = phi double [ undef, %8 ], [ %152, %151 ]\l  %15 = phi double [ 0.000000e+00, %8 ], [ %152, %151 ]\l  %16 = phi i32 [ 0, %8 ], [ %153, %151 ]\l  %17 = icmp eq i32 %9, 0\l  br i1 %17, label %37, label %18\l|{<s0>T|<s1>F}}"];
	Node0x4cedf90:s0 -> Node0x4cef540;
	Node0x4cedf90:s1 -> Node0x4cf09c0;
	Node0x4cf09c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%18:\l18:                                               \l  %19 = phi double [ %33, %32 ], [ %15, %13 ]\l  %20 = phi i32 [ %34, %32 ], [ %16, %13 ]\l  %21 = phi i32 [ %35, %32 ], [ 0, %13 ]\l  %22 = shl nsw i32 %20, 10\l  %23 = or i32 %22, %5\l  %24 = icmp slt i32 %23, %0\l  br i1 %24, label %25, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4cf09c0:s0 -> Node0x4cf1090;
	Node0x4cf09c0:s1 -> Node0x4cf0b30;
	Node0x4cf1090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%25:\l25:                                               \l  %26 = zext i32 %23 to i64\l  %27 = getelementptr inbounds double, double addrspace(1)* %2, i64 %26\l  %28 = load double, double addrspace(1)* %27, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %29 = fmul contract double %28, %28\l  %30 = fcmp contract ogt double %29, %19\l  %31 = select i1 %30, double %29, double %19\l  br label %32\l}"];
	Node0x4cf1090 -> Node0x4cf0b30;
	Node0x4cf0b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = phi double [ %31, %25 ], [ %19, %18 ]\l  %34 = add nuw nsw i32 %20, 1\l  %35 = add i32 %21, 1\l  %36 = icmp eq i32 %35, %9\l  br i1 %36, label %37, label %18, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4cf0b30:s0 -> Node0x4cef540;
	Node0x4cf0b30:s1 -> Node0x4cf09c0;
	Node0x4cef540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%37:\l37:                                               \l  %38 = phi double [ 0.000000e+00, %4 ], [ %14, %13 ], [ %33, %32 ]\l  store double %38, double addrspace(3)* %6, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %39 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %40 = getelementptr i8, i8 addrspace(4)* %39, i64 4\l  %41 = bitcast i8 addrspace(4)* %40 to i16 addrspace(4)*\l  %42 = load i16, i16 addrspace(4)* %41, align 4, !range !12, !invariant.load\l... !9\l  %43 = icmp ult i16 %42, 2\l  br i1 %43, label %156, label %44\l|{<s0>T|<s1>F}}"];
	Node0x4cef540:s0 -> Node0x4cf32a0;
	Node0x4cef540:s1 -> Node0x4cf3330;
	Node0x4cf3330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%44:\l44:                                               \l  %45 = zext i16 %42 to i32\l  br label %158\l}"];
	Node0x4cf3330 -> Node0x4cf34e0;
	Node0x4cefa60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%46:\l46:                                               \l  %47 = phi double [ 0.000000e+00, %11 ], [ %152, %151 ]\l  %48 = phi i32 [ 0, %11 ], [ %153, %151 ]\l  %49 = phi i32 [ 0, %11 ], [ %154, %151 ]\l  %50 = shl nsw i32 %48, 10\l  %51 = or i32 %50, %5\l  %52 = icmp slt i32 %51, %0\l  br i1 %52, label %53, label %60\l|{<s0>T|<s1>F}}"];
	Node0x4cefa60:s0 -> Node0x4cf3990;
	Node0x4cefa60:s1 -> Node0x4cf3a20;
	Node0x4cf3990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%53:\l53:                                               \l  %54 = zext i32 %51 to i64\l  %55 = getelementptr inbounds double, double addrspace(1)* %2, i64 %54\l  %56 = load double, double addrspace(1)* %55, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %57 = fmul contract double %56, %56\l  %58 = fcmp contract ogt double %57, %47\l  %59 = select i1 %58, double %57, double %47\l  br label %60\l}"];
	Node0x4cf3990 -> Node0x4cf3a20;
	Node0x4cf3a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%60:\l60:                                               \l  %61 = phi double [ %59, %53 ], [ %47, %46 ]\l  %62 = shl i32 %48, 10\l  %63 = or i32 %62, %5\l  %64 = or i32 %63, 1024\l  %65 = icmp slt i32 %64, %0\l  br i1 %65, label %66, label %73\l|{<s0>T|<s1>F}}"];
	Node0x4cf3a20:s0 -> Node0x4cf18d0;
	Node0x4cf3a20:s1 -> Node0x4cf1920;
	Node0x4cf18d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%66:\l66:                                               \l  %67 = zext i32 %64 to i64\l  %68 = getelementptr inbounds double, double addrspace(1)* %2, i64 %67\l  %69 = load double, double addrspace(1)* %68, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %70 = fmul contract double %69, %69\l  %71 = fcmp contract ogt double %70, %61\l  %72 = select i1 %71, double %70, double %61\l  br label %73\l}"];
	Node0x4cf18d0 -> Node0x4cf1920;
	Node0x4cf1920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%73:\l73:                                               \l  %74 = phi double [ %72, %66 ], [ %61, %60 ]\l  %75 = shl i32 %48, 10\l  %76 = or i32 %75, %5\l  %77 = or i32 %76, 2048\l  %78 = icmp slt i32 %77, %0\l  br i1 %78, label %79, label %86\l|{<s0>T|<s1>F}}"];
	Node0x4cf1920:s0 -> Node0x4cf4cf0;
	Node0x4cf1920:s1 -> Node0x4cf4d40;
	Node0x4cf4cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%79:\l79:                                               \l  %80 = zext i32 %77 to i64\l  %81 = getelementptr inbounds double, double addrspace(1)* %2, i64 %80\l  %82 = load double, double addrspace(1)* %81, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %83 = fmul contract double %82, %82\l  %84 = fcmp contract ogt double %83, %74\l  %85 = select i1 %84, double %83, double %74\l  br label %86\l}"];
	Node0x4cf4cf0 -> Node0x4cf4d40;
	Node0x4cf4d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%86:\l86:                                               \l  %87 = phi double [ %85, %79 ], [ %74, %73 ]\l  %88 = shl i32 %48, 10\l  %89 = or i32 %88, %5\l  %90 = or i32 %89, 3072\l  %91 = icmp slt i32 %90, %0\l  br i1 %91, label %92, label %99\l|{<s0>T|<s1>F}}"];
	Node0x4cf4d40:s0 -> Node0x4cf5530;
	Node0x4cf4d40:s1 -> Node0x4cf5580;
	Node0x4cf5530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%92:\l92:                                               \l  %93 = zext i32 %90 to i64\l  %94 = getelementptr inbounds double, double addrspace(1)* %2, i64 %93\l  %95 = load double, double addrspace(1)* %94, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %96 = fmul contract double %95, %95\l  %97 = fcmp contract ogt double %96, %87\l  %98 = select i1 %97, double %96, double %87\l  br label %99\l}"];
	Node0x4cf5530 -> Node0x4cf5580;
	Node0x4cf5580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%99:\l99:                                               \l  %100 = phi double [ %98, %92 ], [ %87, %86 ]\l  %101 = shl i32 %48, 10\l  %102 = or i32 %101, %5\l  %103 = or i32 %102, 4096\l  %104 = icmp slt i32 %103, %0\l  br i1 %104, label %105, label %112\l|{<s0>T|<s1>F}}"];
	Node0x4cf5580:s0 -> Node0x4cf5da0;
	Node0x4cf5580:s1 -> Node0x4cf5df0;
	Node0x4cf5da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%105:\l105:                                              \l  %106 = zext i32 %103 to i64\l  %107 = getelementptr inbounds double, double addrspace(1)* %2, i64 %106\l  %108 = load double, double addrspace(1)* %107, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %109 = fmul contract double %108, %108\l  %110 = fcmp contract ogt double %109, %100\l  %111 = select i1 %110, double %109, double %100\l  br label %112\l}"];
	Node0x4cf5da0 -> Node0x4cf5df0;
	Node0x4cf5df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%112:\l112:                                              \l  %113 = phi double [ %111, %105 ], [ %100, %99 ]\l  %114 = shl i32 %48, 10\l  %115 = or i32 %114, %5\l  %116 = or i32 %115, 5120\l  %117 = icmp slt i32 %116, %0\l  br i1 %117, label %118, label %125\l|{<s0>T|<s1>F}}"];
	Node0x4cf5df0:s0 -> Node0x4cf6610;
	Node0x4cf5df0:s1 -> Node0x4cf6660;
	Node0x4cf6610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%118:\l118:                                              \l  %119 = zext i32 %116 to i64\l  %120 = getelementptr inbounds double, double addrspace(1)* %2, i64 %119\l  %121 = load double, double addrspace(1)* %120, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %122 = fmul contract double %121, %121\l  %123 = fcmp contract ogt double %122, %113\l  %124 = select i1 %123, double %122, double %113\l  br label %125\l}"];
	Node0x4cf6610 -> Node0x4cf6660;
	Node0x4cf6660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%125:\l125:                                              \l  %126 = phi double [ %124, %118 ], [ %113, %112 ]\l  %127 = shl i32 %48, 10\l  %128 = or i32 %127, %5\l  %129 = or i32 %128, 6144\l  %130 = icmp slt i32 %129, %0\l  br i1 %130, label %131, label %138\l|{<s0>T|<s1>F}}"];
	Node0x4cf6660:s0 -> Node0x4cf4310;
	Node0x4cf6660:s1 -> Node0x4cf4360;
	Node0x4cf4310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%131:\l131:                                              \l  %132 = zext i32 %129 to i64\l  %133 = getelementptr inbounds double, double addrspace(1)* %2, i64 %132\l  %134 = load double, double addrspace(1)* %133, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %135 = fmul contract double %134, %134\l  %136 = fcmp contract ogt double %135, %126\l  %137 = select i1 %136, double %135, double %126\l  br label %138\l}"];
	Node0x4cf4310 -> Node0x4cf4360;
	Node0x4cf4360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%138:\l138:                                              \l  %139 = phi double [ %137, %131 ], [ %126, %125 ]\l  %140 = shl i32 %48, 10\l  %141 = or i32 %140, %5\l  %142 = or i32 %141, 7168\l  %143 = icmp slt i32 %142, %0\l  br i1 %143, label %144, label %151\l|{<s0>T|<s1>F}}"];
	Node0x4cf4360:s0 -> Node0x4cf7b10;
	Node0x4cf4360:s1 -> Node0x4cefb50;
	Node0x4cf7b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%144:\l144:                                              \l  %145 = zext i32 %142 to i64\l  %146 = getelementptr inbounds double, double addrspace(1)* %2, i64 %145\l  %147 = load double, double addrspace(1)* %146, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %148 = fmul contract double %147, %147\l  %149 = fcmp contract ogt double %148, %139\l  %150 = select i1 %149, double %148, double %139\l  br label %151\l}"];
	Node0x4cf7b10 -> Node0x4cefb50;
	Node0x4cefb50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%151:\l151:                                              \l  %152 = phi double [ %150, %144 ], [ %139, %138 ]\l  %153 = add nuw nsw i32 %48, 8\l  %154 = add i32 %49, 8\l  %155 = icmp eq i32 %154, %12\l  br i1 %155, label %13, label %46, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4cefb50:s0 -> Node0x4cedf90;
	Node0x4cefb50:s1 -> Node0x4cefa60;
	Node0x4cf32a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%156:\l156:                                              \l  %157 = icmp eq i32 %5, 0\l  br i1 %157, label %171, label %173\l|{<s0>T|<s1>F}}"];
	Node0x4cf32a0:s0 -> Node0x4cf8420;
	Node0x4cf32a0:s1 -> Node0x4cf8470;
	Node0x4cf34e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%158:\l158:                                              \l  %159 = phi i32 [ %160, %169 ], [ %45, %44 ]\l  %160 = lshr i32 %159, 1\l  %161 = icmp ult i32 %5, %160\l  br i1 %161, label %162, label %169\l|{<s0>T|<s1>F}}"];
	Node0x4cf34e0:s0 -> Node0x4cf87d0;
	Node0x4cf34e0:s1 -> Node0x4cf8570;
	Node0x4cf87d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%162:\l162:                                              \l  %163 = add nuw nsw i32 %160, %5\l  %164 = getelementptr inbounds [1024 x double], [1024 x double] addrspace(3)*\l... @_ZZ30gpu_calculate_force_square_maxiiPKdPdE14s_force_square, i32 0, i32 %163\l  %165 = load double, double addrspace(3)* %164, align 8, !tbaa !5\l  %166 = load double, double addrspace(3)* %6, align 8, !tbaa !5\l  %167 = fcmp contract ogt double %165, %166\l  br i1 %167, label %168, label %169\l|{<s0>T|<s1>F}}"];
	Node0x4cf87d0:s0 -> Node0x4cf8c50;
	Node0x4cf87d0:s1 -> Node0x4cf8570;
	Node0x4cf8c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%168:\l168:                                              \l  store double %165, double addrspace(3)* %6, align 8, !tbaa !5\l  br label %169\l}"];
	Node0x4cf8c50 -> Node0x4cf8570;
	Node0x4cf8570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%169:\l169:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %170 = icmp ult i32 %159, 4\l  br i1 %170, label %156, label %158, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4cf8570:s0 -> Node0x4cf32a0;
	Node0x4cf8570:s1 -> Node0x4cf34e0;
	Node0x4cf8420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%171:\l171:                                              \l  %172 = load double, double addrspace(3)* getelementptr inbounds ([1024 x\l... double], [1024 x double] addrspace(3)*\l... @_ZZ30gpu_calculate_force_square_maxiiPKdPdE14s_force_square, i32 0, i32 0),\l... align 16, !tbaa !5\l  store double %172, double addrspace(1)* %3, align 8, !tbaa !5\l  br label %173\l}"];
	Node0x4cf8420 -> Node0x4cf8470;
	Node0x4cf8470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%173:\l173:                                              \l  ret void\l}"];
}
