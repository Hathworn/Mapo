digraph "CFG for '_Z16reduceUnrolling8PiS_j' function" {
	label="CFG for '_Z16reduceUnrolling8PiS_j' function";

	Node0x54c3e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = shl i32 %5, 3\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %4\l  %14 = zext i32 %12 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %14\l  %16 = mul nuw nsw i32 %10, 7\l  %17 = add i32 %13, %16\l  %18 = icmp ult i32 %17, %2\l  br i1 %18, label %19, label %62\l|{<s0>T|<s1>F}}"];
	Node0x54c3e80:s0 -> Node0x54c4c10;
	Node0x54c3e80:s1 -> Node0x54c6180;
	Node0x54c4c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%19:\l19:                                               \l  %20 = zext i32 %13 to i64\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %20\l  %22 = load i32, i32 addrspace(1)* %21, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %23 = add i32 %13, %10\l  %24 = zext i32 %23 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %27 = shl nuw nsw i32 %10, 1\l  %28 = add i32 %13, %27\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %32 = mul nuw nsw i32 %10, 3\l  %33 = add i32 %13, %32\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %34\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %37 = shl nuw nsw i32 %10, 2\l  %38 = add i32 %13, %37\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %42 = mul nuw nsw i32 %10, 5\l  %43 = add i32 %13, %42\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %47 = mul nuw nsw i32 %10, 6\l  %48 = add i32 %13, %47\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %49\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %52 = zext i32 %17 to i64\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %52\l  %54 = load i32, i32 addrspace(1)* %53, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %55 = add nsw i32 %26, %22\l  %56 = add nsw i32 %55, %31\l  %57 = add nsw i32 %56, %36\l  %58 = add nsw i32 %57, %41\l  %59 = add nsw i32 %58, %46\l  %60 = add nsw i32 %59, %51\l  %61 = add nsw i32 %60, %54\l  store i32 %61, i32 addrspace(1)* %21, align 4, !tbaa !7\l  br label %62\l}"];
	Node0x54c4c10 -> Node0x54c6180;
	Node0x54c6180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%62:\l62:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %63 = icmp ult i16 %9, 2\l  br i1 %63, label %67, label %64\l|{<s0>T|<s1>F}}"];
	Node0x54c6180:s0 -> Node0x54c8e60;
	Node0x54c6180:s1 -> Node0x54c8ef0;
	Node0x54c8ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%64:\l64:                                               \l  %65 = zext i32 %4 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %65\l  br label %69\l}"];
	Node0x54c8ef0 -> Node0x54c7910;
	Node0x54c8e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%67:\l67:                                               \l  %68 = icmp eq i32 %4, 0\l  br i1 %68, label %82, label %86\l|{<s0>T|<s1>F}}"];
	Node0x54c8e60:s0 -> Node0x54c94d0;
	Node0x54c8e60:s1 -> Node0x54c9520;
	Node0x54c7910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  %70 = phi i32 [ %10, %64 ], [ %71, %80 ]\l  %71 = lshr i32 %70, 1\l  %72 = icmp ult i32 %4, %71\l  br i1 %72, label %73, label %80\l|{<s0>T|<s1>F}}"];
	Node0x54c7910:s0 -> Node0x54c98f0;
	Node0x54c7910:s1 -> Node0x54c9690;
	Node0x54c98f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%73:\l73:                                               \l  %74 = add nuw nsw i32 %71, %4\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %75\l  %77 = load i32, i32 addrspace(1)* %76, align 4, !tbaa !7\l  %78 = load i32, i32 addrspace(1)* %66, align 4, !tbaa !7\l  %79 = add nsw i32 %78, %77\l  store i32 %79, i32 addrspace(1)* %66, align 4, !tbaa !7\l  br label %80\l}"];
	Node0x54c98f0 -> Node0x54c9690;
	Node0x54c9690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %81 = icmp ult i32 %70, 4\l  br i1 %81, label %67, label %69, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x54c9690:s0 -> Node0x54c8e60;
	Node0x54c9690:s1 -> Node0x54c7910;
	Node0x54c94d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%82:\l82:                                               \l  %83 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !7\l  %84 = zext i32 %5 to i64\l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %84\l  store i32 %83, i32 addrspace(1)* %85, align 4, !tbaa !7\l  br label %86\l}"];
	Node0x54c94d0 -> Node0x54c9520;
	Node0x54c9520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%86:\l86:                                               \l  ret void\l}"];
}
