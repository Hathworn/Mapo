digraph "CFG for '_Z17reduceUnrolling16PiS_j' function" {
	label="CFG for '_Z17reduceUnrolling16PiS_j' function";

	Node0x547c700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = shl i32 %5, 4\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %4\l  %14 = zext i32 %12 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %14\l  %16 = mul nuw nsw i32 %10, 15\l  %17 = add i32 %13, %16\l  %18 = icmp ult i32 %17, %2\l  br i1 %18, label %19, label %110\l|{<s0>T|<s1>F}}"];
	Node0x547c700:s0 -> Node0x547d490;
	Node0x547c700:s1 -> Node0x547ea00;
	Node0x547d490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%19:\l19:                                               \l  %20 = zext i32 %13 to i64\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %20\l  %22 = load i32, i32 addrspace(1)* %21, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %23 = add i32 %13, %10\l  %24 = zext i32 %23 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %27 = shl nuw nsw i32 %10, 1\l  %28 = add i32 %13, %27\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %32 = mul nuw nsw i32 %10, 3\l  %33 = add i32 %13, %32\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %34\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %37 = shl nuw nsw i32 %10, 2\l  %38 = add i32 %13, %37\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %42 = mul nuw nsw i32 %10, 5\l  %43 = add i32 %13, %42\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %47 = mul nuw nsw i32 %10, 6\l  %48 = add i32 %13, %47\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %49\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %52 = mul nuw nsw i32 %10, 7\l  %53 = add i32 %13, %52\l  %54 = zext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %54\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %57 = shl nuw nsw i32 %10, 3\l  %58 = add i32 %13, %57\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %62 = mul nuw nsw i32 %10, 9\l  %63 = add i32 %13, %62\l  %64 = zext i32 %63 to i64\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %64\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %67 = mul nuw nsw i32 %10, 10\l  %68 = add i32 %13, %67\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %69\l  %71 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %72 = mul nuw nsw i32 %10, 11\l  %73 = add i32 %13, %72\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %74\l  %76 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %77 = mul nuw nsw i32 %10, 12\l  %78 = add i32 %13, %77\l  %79 = zext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %79\l  %81 = load i32, i32 addrspace(1)* %80, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %82 = mul nuw nsw i32 %10, 13\l  %83 = add i32 %13, %82\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %84\l  %86 = load i32, i32 addrspace(1)* %85, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %87 = mul nuw nsw i32 %10, 14\l  %88 = add i32 %13, %87\l  %89 = zext i32 %88 to i64\l  %90 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %89\l  %91 = load i32, i32 addrspace(1)* %90, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %92 = zext i32 %17 to i64\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %92\l  %94 = load i32, i32 addrspace(1)* %93, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %95 = add nsw i32 %26, %22\l  %96 = add nsw i32 %95, %31\l  %97 = add nsw i32 %96, %36\l  %98 = add nsw i32 %97, %41\l  %99 = add nsw i32 %98, %46\l  %100 = add nsw i32 %99, %51\l  %101 = add nsw i32 %100, %56\l  %102 = add nsw i32 %101, %61\l  %103 = add nsw i32 %102, %66\l  %104 = add nsw i32 %103, %71\l  %105 = add nsw i32 %104, %76\l  %106 = add nsw i32 %105, %81\l  %107 = add nsw i32 %106, %86\l  %108 = add nsw i32 %107, %91\l  %109 = add nsw i32 %108, %94\l  store i32 %109, i32 addrspace(1)* %21, align 4, !tbaa !7\l  br label %110\l}"];
	Node0x547d490 -> Node0x547ea00;
	Node0x547ea00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%110:\l110:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %111 = icmp ult i16 %9, 2\l  br i1 %111, label %115, label %112\l|{<s0>T|<s1>F}}"];
	Node0x547ea00:s0 -> Node0x54835e0;
	Node0x547ea00:s1 -> Node0x5483670;
	Node0x5483670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%112:\l112:                                              \l  %113 = zext i32 %4 to i64\l  %114 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %113\l  br label %117\l}"];
	Node0x5483670 -> Node0x54838c0;
	Node0x54835e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%115:\l115:                                              \l  %116 = icmp eq i32 %4, 0\l  br i1 %116, label %130, label %134\l|{<s0>T|<s1>F}}"];
	Node0x54835e0:s0 -> Node0x5483a40;
	Node0x54835e0:s1 -> Node0x5483a90;
	Node0x54838c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%117:\l117:                                              \l  %118 = phi i32 [ %10, %112 ], [ %119, %128 ]\l  %119 = lshr i32 %118, 1\l  %120 = icmp ult i32 %4, %119\l  br i1 %120, label %121, label %128\l|{<s0>T|<s1>F}}"];
	Node0x54838c0:s0 -> Node0x5483e60;
	Node0x54838c0:s1 -> Node0x5483c00;
	Node0x5483e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%121:\l121:                                              \l  %122 = add nuw nsw i32 %119, %4\l  %123 = zext i32 %122 to i64\l  %124 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %123\l  %125 = load i32, i32 addrspace(1)* %124, align 4, !tbaa !7\l  %126 = load i32, i32 addrspace(1)* %114, align 4, !tbaa !7\l  %127 = add nsw i32 %126, %125\l  store i32 %127, i32 addrspace(1)* %114, align 4, !tbaa !7\l  br label %128\l}"];
	Node0x5483e60 -> Node0x5483c00;
	Node0x5483c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%128:\l128:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %129 = icmp ult i32 %118, 4\l  br i1 %129, label %115, label %117, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5483c00:s0 -> Node0x54835e0;
	Node0x5483c00:s1 -> Node0x54838c0;
	Node0x5483a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%130:\l130:                                              \l  %131 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !7\l  %132 = zext i32 %5 to i64\l  %133 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %132\l  store i32 %131, i32 addrspace(1)* %133, align 4, !tbaa !7\l  br label %134\l}"];
	Node0x5483a40 -> Node0x5483a90;
	Node0x5483a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%134:\l134:                                              \l  ret void\l}"];
}
