digraph "CFG for '_Z19transposeUnroll4ColPiS_ii' function" {
	label="CFG for '_Z19transposeUnroll4ColPiS_ii' function";

	Node0x597d850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = shl i32 %6, 2\l  %13 = mul i32 %12, %11\l  %14 = add i32 %13, %5\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = add i32 %21, %15\l  %23 = mul i32 %22, %2\l  %24 = add i32 %23, %14\l  %25 = mul i32 %14, %3\l  %26 = add i32 %25, %22\l  %27 = mul nuw nsw i32 %11, 3\l  %28 = add i32 %14, %27\l  %29 = icmp ult i32 %28, %2\l  %30 = icmp ult i32 %22, %3\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %63\l|{<s0>T|<s1>F}}"];
	Node0x597d850:s0 -> Node0x5981730;
	Node0x597d850:s1 -> Node0x59817c0;
	Node0x5981730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = zext i32 %26 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %36 = zext i32 %24 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %36\l  store i32 %35, i32 addrspace(1)* %37, align 4, !tbaa !7\l  %38 = mul i32 %11, %3\l  %39 = add i32 %26, %38\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %40\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !7\l  %43 = add i32 %24, %11\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %44\l  store i32 %42, i32 addrspace(1)* %45, align 4, !tbaa !7\l  %46 = shl i32 %38, 1\l  %47 = add i32 %26, %46\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %48\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !7\l  %51 = shl nuw nsw i32 %11, 1\l  %52 = add i32 %24, %51\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %53\l  store i32 %50, i32 addrspace(1)* %54, align 4, !tbaa !7\l  %55 = mul i32 %38, 3\l  %56 = add i32 %26, %55\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %57\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !7\l  %60 = add i32 %24, %27\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %61\l  store i32 %59, i32 addrspace(1)* %62, align 4, !tbaa !7\l  br label %63\l}"];
	Node0x5981730 -> Node0x59817c0;
	Node0x59817c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  ret void\l}"];
}
