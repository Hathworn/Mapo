digraph "CFG for '_Z14softmax_kerneliiiPffS_' function" {
	label="CFG for '_Z14softmax_kerneliiiPffS_' function";

	Node0x46374c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !4\l  %13 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !13, !invariant.load\l... !14\l  %16 = zext i16 %15 to i32\l  %17 = udiv i32 %12, %16\l  %18 = mul i32 %17, %16\l  %19 = icmp ugt i32 %12, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %8\l  %23 = add i32 %22, %7\l  %24 = mul i32 %23, %16\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %26, %2\l  br i1 %27, label %28, label %259\l|{<s0>T|<s1>F}}"];
	Node0x46374c0:s0 -> Node0x4639cd0;
	Node0x46374c0:s1 -> Node0x4639d60;
	Node0x4639cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%28:\l28:                                               \l  %29 = mul nsw i32 %26, %1\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %3, i64 %30\l  %32 = getelementptr inbounds float, float addrspace(1)* %5, i64 %30\l  %33 = icmp sgt i32 %0, 0\l  br i1 %33, label %34, label %58\l|{<s0>T|<s1>F}}"];
	Node0x4639cd0:s0 -> Node0x4639440;
	Node0x4639cd0:s1 -> Node0x463a2f0;
	Node0x4639440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%34:\l34:                                               \l  %35 = and i32 %0, 7\l  %36 = icmp ult i32 %0, 8\l  br i1 %36, label %39, label %37\l|{<s0>T|<s1>F}}"];
	Node0x4639440:s0 -> Node0x463a580;
	Node0x4639440:s1 -> Node0x463a5d0;
	Node0x463a5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%37:\l37:                                               \l  %38 = and i32 %0, -8\l  br label %66\l}"];
	Node0x463a5d0 -> Node0x463a7d0;
	Node0x463a580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%39:\l39:                                               \l  %40 = phi float [ undef, %34 ], [ %132, %66 ]\l  %41 = phi i32 [ 0, %34 ], [ %133, %66 ]\l  %42 = phi float [ 0xFFF0000000000000, %34 ], [ %132, %66 ]\l  %43 = icmp eq i32 %35, 0\l  br i1 %43, label %58, label %44\l|{<s0>T|<s1>F}}"];
	Node0x463a580:s0 -> Node0x463a2f0;
	Node0x463a580:s1 -> Node0x463ba40;
	Node0x463ba40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi i32 [ %55, %44 ], [ %41, %39 ]\l  %46 = phi float [ %54, %44 ], [ %42, %39 ]\l  %47 = phi i32 [ %56, %44 ], [ 0, %39 ]\l  %48 = zext i32 %45 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %31, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %51 = fptosi float %50 to i32\l  %52 = sitofp i32 %51 to float\l  %53 = fcmp contract olt float %46, %52\l  %54 = select contract i1 %53, float %52, float %46\l  %55 = add nuw nsw i32 %45, 1\l  %56 = add i32 %47, 1\l  %57 = icmp eq i32 %56, %35\l  br i1 %57, label %58, label %44, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x463ba40:s0 -> Node0x463a2f0;
	Node0x463ba40:s1 -> Node0x463ba40;
	Node0x463a2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%58:\l58:                                               \l  %59 = phi float [ 0xFFF0000000000000, %28 ], [ %40, %39 ], [ %54, %44 ]\l  br i1 %33, label %60, label %164\l|{<s0>T|<s1>F}}"];
	Node0x463a2f0:s0 -> Node0x463cdf0;
	Node0x463a2f0:s1 -> Node0x463ce40;
	Node0x463cdf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%60:\l60:                                               \l  %61 = fdiv contract float %59, %4\l  %62 = and i32 %0, 1\l  %63 = icmp eq i32 %0, 1\l  br i1 %63, label %138, label %64\l|{<s0>T|<s1>F}}"];
	Node0x463cdf0:s0 -> Node0x463d130;
	Node0x463cdf0:s1 -> Node0x463d180;
	Node0x463d180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%64:\l64:                                               \l  %65 = and i32 %0, -2\l  br label %171\l}"];
	Node0x463d180 -> Node0x463a170;
	Node0x463a7d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%66:\l66:                                               \l  %67 = phi i32 [ 0, %37 ], [ %133, %66 ]\l  %68 = phi float [ 0xFFF0000000000000, %37 ], [ %132, %66 ]\l  %69 = phi i32 [ 0, %37 ], [ %134, %66 ]\l  %70 = zext i32 %67 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %31, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %73 = fptosi float %72 to i32\l  %74 = sitofp i32 %73 to float\l  %75 = fcmp contract olt float %68, %74\l  %76 = select contract i1 %75, float %74, float %68\l  %77 = or i32 %67, 1\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %31, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %81 = fptosi float %80 to i32\l  %82 = sitofp i32 %81 to float\l  %83 = fcmp contract olt float %76, %82\l  %84 = select contract i1 %83, float %82, float %76\l  %85 = or i32 %67, 2\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %31, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %89 = fptosi float %88 to i32\l  %90 = sitofp i32 %89 to float\l  %91 = fcmp contract olt float %84, %90\l  %92 = select contract i1 %91, float %90, float %84\l  %93 = or i32 %67, 3\l  %94 = zext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %31, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %97 = fptosi float %96 to i32\l  %98 = sitofp i32 %97 to float\l  %99 = fcmp contract olt float %92, %98\l  %100 = select contract i1 %99, float %98, float %92\l  %101 = or i32 %67, 4\l  %102 = zext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %31, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %105 = fptosi float %104 to i32\l  %106 = sitofp i32 %105 to float\l  %107 = fcmp contract olt float %100, %106\l  %108 = select contract i1 %107, float %106, float %100\l  %109 = or i32 %67, 5\l  %110 = zext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %31, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %113 = fptosi float %112 to i32\l  %114 = sitofp i32 %113 to float\l  %115 = fcmp contract olt float %108, %114\l  %116 = select contract i1 %115, float %114, float %108\l  %117 = or i32 %67, 6\l  %118 = zext i32 %117 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %31, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %121 = fptosi float %120 to i32\l  %122 = sitofp i32 %121 to float\l  %123 = fcmp contract olt float %116, %122\l  %124 = select contract i1 %123, float %122, float %116\l  %125 = or i32 %67, 7\l  %126 = zext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %31, i64 %126\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %129 = fptosi float %128 to i32\l  %130 = sitofp i32 %129 to float\l  %131 = fcmp contract olt float %124, %130\l  %132 = select contract i1 %131, float %130, float %124\l  %133 = add nuw nsw i32 %67, 8\l  %134 = add i32 %69, 8\l  %135 = icmp eq i32 %134, %38\l  br i1 %135, label %39, label %66, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x463a7d0:s0 -> Node0x463a580;
	Node0x463a7d0:s1 -> Node0x463a7d0;
	Node0x4640940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%136:\l136:                                              \l  %137 = zext i32 %218 to i64\l  br label %138\l}"];
	Node0x4640940 -> Node0x463d130;
	Node0x463d130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%138:\l138:                                              \l  %139 = phi float [ undef, %60 ], [ %216, %136 ]\l  %140 = phi i64 [ 0, %60 ], [ %137, %136 ]\l  %141 = phi float [ 0.000000e+00, %60 ], [ %216, %136 ]\l  %142 = icmp eq i32 %62, 0\l  br i1 %142, label %164, label %143\l|{<s0>T|<s1>F}}"];
	Node0x463d130:s0 -> Node0x463ce40;
	Node0x463d130:s1 -> Node0x4640d10;
	Node0x4640d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%143:\l143:                                              \l  %144 = getelementptr inbounds float, float addrspace(1)* %31, i64 %140\l  %145 = load float, float addrspace(1)* %144, align 4, !tbaa !16\l  %146 = fdiv contract float %145, %4\l  %147 = fsub contract float %146, %61\l  %148 = fmul float %147, 0x3FF7154760000000\l  %149 = tail call float @llvm.rint.f32(float %148)\l  %150 = fcmp ogt float %147, 0x40562E4300000000\l  %151 = fcmp olt float %147, 0xC059D1DA00000000\l  %152 = fneg float %148\l  %153 = tail call float @llvm.fma.f32(float %147, float 0x3FF7154760000000,\l... float %152)\l  %154 = tail call float @llvm.fma.f32(float %147, float 0x3E54AE0BE0000000,\l... float %153)\l  %155 = fsub float %148, %149\l  %156 = fadd float %154, %155\l  %157 = tail call float @llvm.exp2.f32(float %156)\l  %158 = fptosi float %149 to i32\l  %159 = tail call float @llvm.amdgcn.ldexp.f32(float %157, i32 %158)\l  %160 = select i1 %151, float 0.000000e+00, float %159\l  %161 = select i1 %150, float 0x7FF0000000000000, float %160\l  %162 = fadd contract float %141, %161\l  %163 = getelementptr inbounds float, float addrspace(1)* %32, i64 %140\l  store float %161, float addrspace(1)* %163, align 4, !tbaa !16\l  br label %164\l}"];
	Node0x4640d10 -> Node0x463ce40;
	Node0x463ce40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%164:\l164:                                              \l  %165 = phi float [ 0.000000e+00, %58 ], [ %139, %138 ], [ %162, %143 ]\l  br i1 %33, label %166, label %259\l|{<s0>T|<s1>F}}"];
	Node0x463ce40:s0 -> Node0x4642410;
	Node0x463ce40:s1 -> Node0x4639d60;
	Node0x4642410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%166:\l166:                                              \l  %167 = and i32 %0, 3\l  %168 = icmp ult i32 %0, 4\l  br i1 %168, label %246, label %169\l|{<s0>T|<s1>F}}"];
	Node0x4642410:s0 -> Node0x4642630;
	Node0x4642410:s1 -> Node0x4642680;
	Node0x4642680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%169:\l169:                                              \l  %170 = and i32 %0, -4\l  br label %221\l}"];
	Node0x4642680 -> Node0x4642850;
	Node0x463a170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%171:\l171:                                              \l  %172 = phi i32 [ 0, %64 ], [ %218, %171 ]\l  %173 = phi float [ 0.000000e+00, %64 ], [ %216, %171 ]\l  %174 = phi i32 [ 0, %64 ], [ %219, %171 ]\l  %175 = zext i32 %172 to i64\l  %176 = getelementptr inbounds float, float addrspace(1)* %31, i64 %175\l  %177 = load float, float addrspace(1)* %176, align 4, !tbaa !16\l  %178 = fdiv contract float %177, %4\l  %179 = fsub contract float %178, %61\l  %180 = fmul float %179, 0x3FF7154760000000\l  %181 = tail call float @llvm.rint.f32(float %180)\l  %182 = fcmp ogt float %179, 0x40562E4300000000\l  %183 = fcmp olt float %179, 0xC059D1DA00000000\l  %184 = fneg float %180\l  %185 = tail call float @llvm.fma.f32(float %179, float 0x3FF7154760000000,\l... float %184)\l  %186 = tail call float @llvm.fma.f32(float %179, float 0x3E54AE0BE0000000,\l... float %185)\l  %187 = fsub float %180, %181\l  %188 = fadd float %186, %187\l  %189 = tail call float @llvm.exp2.f32(float %188)\l  %190 = fptosi float %181 to i32\l  %191 = tail call float @llvm.amdgcn.ldexp.f32(float %189, i32 %190)\l  %192 = select i1 %183, float 0.000000e+00, float %191\l  %193 = select i1 %182, float 0x7FF0000000000000, float %192\l  %194 = fadd contract float %173, %193\l  %195 = getelementptr inbounds float, float addrspace(1)* %32, i64 %175\l  store float %193, float addrspace(1)* %195, align 4, !tbaa !16\l  %196 = or i32 %172, 1\l  %197 = zext i32 %196 to i64\l  %198 = getelementptr inbounds float, float addrspace(1)* %31, i64 %197\l  %199 = load float, float addrspace(1)* %198, align 4, !tbaa !16\l  %200 = fdiv contract float %199, %4\l  %201 = fsub contract float %200, %61\l  %202 = fmul float %201, 0x3FF7154760000000\l  %203 = tail call float @llvm.rint.f32(float %202)\l  %204 = fcmp ogt float %201, 0x40562E4300000000\l  %205 = fcmp olt float %201, 0xC059D1DA00000000\l  %206 = fneg float %202\l  %207 = tail call float @llvm.fma.f32(float %201, float 0x3FF7154760000000,\l... float %206)\l  %208 = tail call float @llvm.fma.f32(float %201, float 0x3E54AE0BE0000000,\l... float %207)\l  %209 = fsub float %202, %203\l  %210 = fadd float %208, %209\l  %211 = tail call float @llvm.exp2.f32(float %210)\l  %212 = fptosi float %203 to i32\l  %213 = tail call float @llvm.amdgcn.ldexp.f32(float %211, i32 %212)\l  %214 = select i1 %205, float 0.000000e+00, float %213\l  %215 = select i1 %204, float 0x7FF0000000000000, float %214\l  %216 = fadd contract float %194, %215\l  %217 = getelementptr inbounds float, float addrspace(1)* %32, i64 %197\l  store float %215, float addrspace(1)* %217, align 4, !tbaa !16\l  %218 = add nuw nsw i32 %172, 2\l  %219 = add i32 %174, 2\l  %220 = icmp eq i32 %219, %65\l  br i1 %220, label %136, label %171, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x463a170:s0 -> Node0x4640940;
	Node0x463a170:s1 -> Node0x463a170;
	Node0x4642850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%221:\l221:                                              \l  %222 = phi i32 [ 0, %169 ], [ %243, %221 ]\l  %223 = phi i32 [ 0, %169 ], [ %244, %221 ]\l  %224 = zext i32 %222 to i64\l  %225 = getelementptr inbounds float, float addrspace(1)* %32, i64 %224\l  %226 = load float, float addrspace(1)* %225, align 4, !tbaa !16\l  %227 = fdiv contract float %226, %165\l  store float %227, float addrspace(1)* %225, align 4, !tbaa !16\l  %228 = or i32 %222, 1\l  %229 = zext i32 %228 to i64\l  %230 = getelementptr inbounds float, float addrspace(1)* %32, i64 %229\l  %231 = load float, float addrspace(1)* %230, align 4, !tbaa !16\l  %232 = fdiv contract float %231, %165\l  store float %232, float addrspace(1)* %230, align 4, !tbaa !16\l  %233 = or i32 %222, 2\l  %234 = zext i32 %233 to i64\l  %235 = getelementptr inbounds float, float addrspace(1)* %32, i64 %234\l  %236 = load float, float addrspace(1)* %235, align 4, !tbaa !16\l  %237 = fdiv contract float %236, %165\l  store float %237, float addrspace(1)* %235, align 4, !tbaa !16\l  %238 = or i32 %222, 3\l  %239 = zext i32 %238 to i64\l  %240 = getelementptr inbounds float, float addrspace(1)* %32, i64 %239\l  %241 = load float, float addrspace(1)* %240, align 4, !tbaa !16\l  %242 = fdiv contract float %241, %165\l  store float %242, float addrspace(1)* %240, align 4, !tbaa !16\l  %243 = add nuw nsw i32 %222, 4\l  %244 = add i32 %223, 4\l  %245 = icmp eq i32 %244, %170\l  br i1 %245, label %246, label %221, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x4642850:s0 -> Node0x4642630;
	Node0x4642850:s1 -> Node0x4642850;
	Node0x4642630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%246:\l246:                                              \l  %247 = phi i32 [ 0, %166 ], [ %243, %221 ]\l  %248 = icmp eq i32 %167, 0\l  br i1 %248, label %259, label %249\l|{<s0>T|<s1>F}}"];
	Node0x4642630:s0 -> Node0x4639d60;
	Node0x4642630:s1 -> Node0x4645ee0;
	Node0x4645ee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%249:\l249:                                              \l  %250 = phi i32 [ %256, %249 ], [ %247, %246 ]\l  %251 = phi i32 [ %257, %249 ], [ 0, %246 ]\l  %252 = zext i32 %250 to i64\l  %253 = getelementptr inbounds float, float addrspace(1)* %32, i64 %252\l  %254 = load float, float addrspace(1)* %253, align 4, !tbaa !16\l  %255 = fdiv contract float %254, %165\l  store float %255, float addrspace(1)* %253, align 4, !tbaa !16\l  %256 = add nuw nsw i32 %250, 1\l  %257 = add i32 %251, 1\l  %258 = icmp eq i32 %257, %167\l  br i1 %258, label %259, label %249, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x4645ee0:s0 -> Node0x4639d60;
	Node0x4645ee0:s1 -> Node0x4645ee0;
	Node0x4639d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%259:\l259:                                              \l  ret void\l}"];
}
