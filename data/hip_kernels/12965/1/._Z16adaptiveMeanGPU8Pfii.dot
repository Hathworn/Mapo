digraph "CFG for '_Z16adaptiveMeanGPU8Pfii' function" {
	label="CFG for '_Z16adaptiveMeanGPU8Pfii' function";

	Node0x5103ee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %5, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = add i32 %12, 4\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %4, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = add i32 %21, 4\l  %23 = mul i32 %22, %1\l  %24 = add i32 %23, %13\l  %25 = add nuw nsw i32 %11, 4\l  %26 = add nuw nsw i32 %20, 4\l  %27 = add nsw i32 %1, -4\l  %28 = icmp ugt i32 %13, %27\l  %29 = add nsw i32 %2, -4\l  %30 = icmp ugt i32 %22, %29\l  %31 = select i1 %28, i1 true, i1 %30\l  br i1 %31, label %407, label %32\l|{<s0>T|<s1>F}}"];
	Node0x5103ee0:s0 -> Node0x5107e50;
	Node0x5103ee0:s1 -> Node0x5107ee0;
	Node0x5107ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%32:\l32:                                               \l  %33 = add nsw i32 %9, -1\l  %34 = icmp eq i32 %11, %33\l  br i1 %34, label %35, label %54\l|{<s0>T|<s1>F}}"];
	Node0x5107ee0:s0 -> Node0x51061c0;
	Node0x5107ee0:s1 -> Node0x51082c0;
	Node0x51061c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%35:\l35:                                               \l  %36 = add i32 %24, 1\l  %37 = zext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = add nuw nsw i32 %11, 5\l  %41 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %40, i32 %26\l  store float %39, float addrspace(3)* %41, align 4, !tbaa !7\l  %42 = add i32 %24, 2\l  %43 = zext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %46 = add nuw nsw i32 %11, 6\l  %47 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %46, i32 %26\l  store float %45, float addrspace(3)* %47, align 4, !tbaa !7\l  %48 = add i32 %24, 3\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %52 = add nuw nsw i32 %11, 7\l  %53 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %52, i32 %26\l  store float %51, float addrspace(3)* %53, align 4, !tbaa !7\l  br label %54\l}"];
	Node0x51061c0 -> Node0x51082c0;
	Node0x51082c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%54:\l54:                                               \l  %55 = icmp eq i32 %11, 0\l  br i1 %55, label %56, label %77\l|{<s0>T|<s1>F}}"];
	Node0x51082c0:s0 -> Node0x51093b0;
	Node0x51082c0:s1 -> Node0x5109b50;
	Node0x51093b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%56:\l56:                                               \l  %57 = add i32 %23, %12\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %61 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 0, i32 %26\l  store float %60, float addrspace(3)* %61, align 4, !tbaa !7\l  %62 = add i32 %24, -3\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %66 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 1, i32 %26\l  store float %65, float addrspace(3)* %66, align 4, !tbaa !7\l  %67 = add i32 %24, -2\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %71 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 2, i32 %26\l  store float %70, float addrspace(3)* %71, align 4, !tbaa !7\l  %72 = add i32 %24, -1\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %76 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 3, i32 %26\l  store float %75, float addrspace(3)* %76, align 4, !tbaa !7\l  br label %77\l}"];
	Node0x51093b0 -> Node0x5109b50;
	Node0x5109b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%77:\l77:                                               \l  %78 = icmp eq i32 %20, 0\l  br i1 %78, label %79, label %107\l|{<s0>T|<s1>F}}"];
	Node0x5109b50:s0 -> Node0x5109ea0;
	Node0x5109b50:s1 -> Node0x510af20;
	Node0x5109ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%79:\l79:                                               \l  %80 = mul i32 %21, %1\l  %81 = add i32 %80, %13\l  %82 = zext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %0, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %85 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 0\l  store float %84, float addrspace(3)* %85, align 4, !tbaa !7\l  %86 = add i32 %21, 1\l  %87 = mul i32 %86, %1\l  %88 = add i32 %87, %13\l  %89 = zext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %0, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %92 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 1\l  store float %91, float addrspace(3)* %92, align 4, !tbaa !7\l  %93 = add i32 %21, 2\l  %94 = mul i32 %93, %1\l  %95 = add i32 %94, %13\l  %96 = zext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %0, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %99 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 2\l  store float %98, float addrspace(3)* %99, align 4, !tbaa !7\l  %100 = add i32 %21, 3\l  %101 = mul i32 %100, %1\l  %102 = add i32 %101, %13\l  %103 = zext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %0, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %106 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 3\l  store float %105, float addrspace(3)* %106, align 4, !tbaa !7\l  br label %107\l}"];
	Node0x5109ea0 -> Node0x510af20;
	Node0x510af20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%107:\l107:                                              \l  %108 = add nsw i32 %18, -1\l  %109 = icmp eq i32 %20, %108\l  br i1 %109, label %110, label %135\l|{<s0>T|<s1>F}}"];
	Node0x510af20:s0 -> Node0x510b300;
	Node0x510af20:s1 -> Node0x510c4f0;
	Node0x510b300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%110:\l110:                                              \l  %111 = add i32 %21, 5\l  %112 = mul i32 %111, %1\l  %113 = add i32 %112, %13\l  %114 = zext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %117 = add nuw nsw i32 %20, 5\l  %118 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 %117\l  store float %116, float addrspace(3)* %118, align 4, !tbaa !7\l  %119 = add i32 %21, 6\l  %120 = mul i32 %119, %1\l  %121 = add i32 %120, %13\l  %122 = zext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %0, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %125 = add nuw nsw i32 %20, 6\l  %126 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 %125\l  store float %124, float addrspace(3)* %126, align 4, !tbaa !7\l  %127 = add i32 %21, 7\l  %128 = mul i32 %127, %1\l  %129 = add i32 %128, %13\l  %130 = zext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %0, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %133 = add nuw nsw i32 %20, 7\l  %134 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 %133\l  store float %132, float addrspace(3)* %134, align 4, !tbaa !7\l  br label %135\l}"];
	Node0x510b300 -> Node0x510c4f0;
	Node0x510c4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%135:\l135:                                              \l  %136 = zext i32 %24 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %0, i64 %136\l  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %139 = fcmp contract olt float %138, 0.000000e+00\l  %140 = select i1 %139, float -1.000000e+01, float %138\l  %141 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 %26\l  store float %140, float addrspace(3)* %141, align 4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %142 = load float, float addrspace(3)* %141, align 4, !tbaa !7\l  %143 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %11, i32 %26\l  %144 = load float, float addrspace(3)* %143, align 4, !tbaa !7\l  %145 = fsub contract float %144, %142\l  %146 = tail call float @llvm.fabs.f32(float %145)\l  %147 = fsub contract float 4.000000e+00, %146\l  %148 = tail call float @llvm.maxnum.f32(float %147, float 0.000000e+00)\l  %149 = fadd contract float %148, 0.000000e+00\l  %150 = add nuw nsw i32 %11, 1\l  %151 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %150, i32 %26\l  %152 = load float, float addrspace(3)* %151, align 4, !tbaa !7\l  %153 = fsub contract float %152, %142\l  %154 = tail call float @llvm.fabs.f32(float %153)\l  %155 = fsub contract float 4.000000e+00, %154\l  %156 = tail call float @llvm.maxnum.f32(float %155, float 0.000000e+00)\l  %157 = fadd contract float %149, %156\l  %158 = add nuw nsw i32 %11, 2\l  %159 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %158, i32 %26\l  %160 = load float, float addrspace(3)* %159, align 4, !tbaa !7\l  %161 = fsub contract float %160, %142\l  %162 = tail call float @llvm.fabs.f32(float %161)\l  %163 = fsub contract float 4.000000e+00, %162\l  %164 = tail call float @llvm.maxnum.f32(float %163, float 0.000000e+00)\l  %165 = fadd contract float %157, %164\l  %166 = add nuw nsw i32 %11, 3\l  %167 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %166, i32 %26\l  %168 = load float, float addrspace(3)* %167, align 4, !tbaa !7\l  %169 = fsub contract float %168, %142\l  %170 = tail call float @llvm.fabs.f32(float %169)\l  %171 = fsub contract float 4.000000e+00, %170\l  %172 = tail call float @llvm.maxnum.f32(float %171, float 0.000000e+00)\l  %173 = fadd contract float %165, %172\l  %174 = fsub contract float %142, %142\l  %175 = tail call float @llvm.fabs.f32(float %174)\l  %176 = fsub contract float 4.000000e+00, %175\l  %177 = tail call float @llvm.maxnum.f32(float %176, float 0.000000e+00)\l  %178 = fadd contract float %173, %177\l  %179 = add nuw nsw i32 %11, 5\l  %180 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %179, i32 %26\l  %181 = load float, float addrspace(3)* %180, align 4, !tbaa !7\l  %182 = fsub contract float %181, %142\l  %183 = tail call float @llvm.fabs.f32(float %182)\l  %184 = fsub contract float 4.000000e+00, %183\l  %185 = tail call float @llvm.maxnum.f32(float %184, float 0.000000e+00)\l  %186 = fadd contract float %178, %185\l  %187 = add nuw nsw i32 %11, 6\l  %188 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %187, i32 %26\l  %189 = load float, float addrspace(3)* %188, align 4, !tbaa !7\l  %190 = fsub contract float %189, %142\l  %191 = tail call float @llvm.fabs.f32(float %190)\l  %192 = fsub contract float 4.000000e+00, %191\l  %193 = tail call float @llvm.maxnum.f32(float %192, float 0.000000e+00)\l  %194 = fadd contract float %186, %193\l  %195 = add nuw nsw i32 %11, 7\l  %196 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %195, i32 %26\l  %197 = load float, float addrspace(3)* %196, align 4, !tbaa !7\l  %198 = fsub contract float %197, %142\l  %199 = tail call float @llvm.fabs.f32(float %198)\l  %200 = fsub contract float 4.000000e+00, %199\l  %201 = tail call float @llvm.maxnum.f32(float %200, float 0.000000e+00)\l  %202 = fadd contract float %194, %201\l  %203 = fcmp contract ogt float %202, 0.000000e+00\l  br i1 %203, label %204, label %224\l|{<s0>T|<s1>F}}"];
	Node0x510c4f0:s0 -> Node0x5111a90;
	Node0x510c4f0:s1 -> Node0x5111ae0;
	Node0x5111a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%204:\l204:                                              \l  %205 = fmul contract float %144, %148\l  %206 = fadd contract float %205, 0.000000e+00\l  %207 = fmul contract float %152, %156\l  %208 = fadd contract float %206, %207\l  %209 = fmul contract float %160, %164\l  %210 = fadd contract float %208, %209\l  %211 = fmul contract float %168, %172\l  %212 = fadd contract float %210, %211\l  %213 = fmul contract float %142, %177\l  %214 = fadd contract float %212, %213\l  %215 = fmul contract float %181, %185\l  %216 = fadd contract float %214, %215\l  %217 = fmul contract float %189, %193\l  %218 = fadd contract float %216, %217\l  %219 = fmul contract float %197, %201\l  %220 = fadd contract float %218, %219\l  %221 = fdiv contract float %220, %202\l  %222 = fcmp contract ult float %221, 0.000000e+00\l  br i1 %222, label %224, label %223\l|{<s0>T|<s1>F}}"];
	Node0x5111a90:s0 -> Node0x5111ae0;
	Node0x5111a90:s1 -> Node0x5112640;
	Node0x5112640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%223:\l223:                                              \l  store float %221, float addrspace(1)* %137, align 4, !tbaa !7\l  br label %224\l}"];
	Node0x5112640 -> Node0x5111ae0;
	Node0x5111ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%224:\l224:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %34, label %225, label %238\l|{<s0>T|<s1>F}}"];
	Node0x5111ae0:s0 -> Node0x51129b0;
	Node0x5111ae0:s1 -> Node0x5112a00;
	Node0x51129b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%225:\l225:                                              \l  %226 = add i32 %24, 1\l  %227 = zext i32 %226 to i64\l  %228 = getelementptr inbounds float, float addrspace(1)* %0, i64 %227\l  %229 = load float, float addrspace(1)* %228, align 4, !tbaa !7\l  store float %229, float addrspace(3)* %180, align 4, !tbaa !7\l  %230 = add i32 %24, 2\l  %231 = zext i32 %230 to i64\l  %232 = getelementptr inbounds float, float addrspace(1)* %0, i64 %231\l  %233 = load float, float addrspace(1)* %232, align 4, !tbaa !7\l  store float %233, float addrspace(3)* %188, align 4, !tbaa !7\l  %234 = add i32 %24, 3\l  %235 = zext i32 %234 to i64\l  %236 = getelementptr inbounds float, float addrspace(1)* %0, i64 %235\l  %237 = load float, float addrspace(1)* %236, align 4, !tbaa !7\l  store float %237, float addrspace(3)* %196, align 4, !tbaa !7\l  br label %238\l}"];
	Node0x51129b0 -> Node0x5112a00;
	Node0x5112a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%238:\l238:                                              \l  br i1 %55, label %239, label %260\l|{<s0>T|<s1>F}}"];
	Node0x5112a00:s0 -> Node0x5104d10;
	Node0x5112a00:s1 -> Node0x5104d60;
	Node0x5104d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%239:\l239:                                              \l  %240 = add i32 %23, %12\l  %241 = zext i32 %240 to i64\l  %242 = getelementptr inbounds float, float addrspace(1)* %0, i64 %241\l  %243 = load float, float addrspace(1)* %242, align 4, !tbaa !7\l  %244 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 0, i32 %26\l  store float %243, float addrspace(3)* %244, align 4, !tbaa !7\l  %245 = add i32 %24, -3\l  %246 = zext i32 %245 to i64\l  %247 = getelementptr inbounds float, float addrspace(1)* %0, i64 %246\l  %248 = load float, float addrspace(1)* %247, align 4, !tbaa !7\l  %249 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 1, i32 %26\l  store float %248, float addrspace(3)* %249, align 4, !tbaa !7\l  %250 = add i32 %24, -2\l  %251 = zext i32 %250 to i64\l  %252 = getelementptr inbounds float, float addrspace(1)* %0, i64 %251\l  %253 = load float, float addrspace(1)* %252, align 4, !tbaa !7\l  %254 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 2, i32 %26\l  store float %253, float addrspace(3)* %254, align 4, !tbaa !7\l  %255 = add i32 %24, -1\l  %256 = zext i32 %255 to i64\l  %257 = getelementptr inbounds float, float addrspace(1)* %0, i64 %256\l  %258 = load float, float addrspace(1)* %257, align 4, !tbaa !7\l  %259 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 3, i32 %26\l  store float %258, float addrspace(3)* %259, align 4, !tbaa !7\l  br label %260\l}"];
	Node0x5104d10 -> Node0x5104d60;
	Node0x5104d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%260:\l260:                                              \l  br i1 %78, label %261, label %289\l|{<s0>T|<s1>F}}"];
	Node0x5104d60:s0 -> Node0x5105070;
	Node0x5104d60:s1 -> Node0x510d2b0;
	Node0x5105070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%261:\l261:                                              \l  %262 = mul i32 %21, %1\l  %263 = add i32 %262, %13\l  %264 = zext i32 %263 to i64\l  %265 = getelementptr inbounds float, float addrspace(1)* %0, i64 %264\l  %266 = load float, float addrspace(1)* %265, align 4, !tbaa !7\l  %267 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 0\l  store float %266, float addrspace(3)* %267, align 4, !tbaa !7\l  %268 = add i32 %21, 1\l  %269 = mul i32 %268, %1\l  %270 = add i32 %269, %13\l  %271 = zext i32 %270 to i64\l  %272 = getelementptr inbounds float, float addrspace(1)* %0, i64 %271\l  %273 = load float, float addrspace(1)* %272, align 4, !tbaa !7\l  %274 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 1\l  store float %273, float addrspace(3)* %274, align 4, !tbaa !7\l  %275 = add i32 %21, 2\l  %276 = mul i32 %275, %1\l  %277 = add i32 %276, %13\l  %278 = zext i32 %277 to i64\l  %279 = getelementptr inbounds float, float addrspace(1)* %0, i64 %278\l  %280 = load float, float addrspace(1)* %279, align 4, !tbaa !7\l  %281 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 2\l  store float %280, float addrspace(3)* %281, align 4, !tbaa !7\l  %282 = add i32 %21, 3\l  %283 = mul i32 %282, %1\l  %284 = add i32 %283, %13\l  %285 = zext i32 %284 to i64\l  %286 = getelementptr inbounds float, float addrspace(1)* %0, i64 %285\l  %287 = load float, float addrspace(1)* %286, align 4, !tbaa !7\l  %288 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 3\l  store float %287, float addrspace(3)* %288, align 4, !tbaa !7\l  br label %289\l}"];
	Node0x5105070 -> Node0x510d2b0;
	Node0x510d2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%289:\l289:                                              \l  br i1 %109, label %294, label %290\l|{<s0>T|<s1>F}}"];
	Node0x510d2b0:s0 -> Node0x510d650;
	Node0x510d2b0:s1 -> Node0x5116f40;
	Node0x5116f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%290:\l290:                                              \l  %291 = add nuw nsw i32 %20, 5\l  %292 = add nuw nsw i32 %20, 6\l  %293 = add nuw nsw i32 %20, 7\l  br label %319\l}"];
	Node0x5116f40 -> Node0x51171f0;
	Node0x510d650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%294:\l294:                                              \l  %295 = add i32 %21, 5\l  %296 = mul i32 %295, %1\l  %297 = add i32 %296, %13\l  %298 = zext i32 %297 to i64\l  %299 = getelementptr inbounds float, float addrspace(1)* %0, i64 %298\l  %300 = load float, float addrspace(1)* %299, align 4, !tbaa !7\l  %301 = add nuw nsw i32 %20, 5\l  %302 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 %301\l  store float %300, float addrspace(3)* %302, align 4, !tbaa !7\l  %303 = add i32 %21, 6\l  %304 = mul i32 %303, %1\l  %305 = add i32 %304, %13\l  %306 = zext i32 %305 to i64\l  %307 = getelementptr inbounds float, float addrspace(1)* %0, i64 %306\l  %308 = load float, float addrspace(1)* %307, align 4, !tbaa !7\l  %309 = add nuw nsw i32 %20, 6\l  %310 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 %309\l  store float %308, float addrspace(3)* %310, align 4, !tbaa !7\l  %311 = add i32 %21, 7\l  %312 = mul i32 %311, %1\l  %313 = add i32 %312, %13\l  %314 = zext i32 %313 to i64\l  %315 = getelementptr inbounds float, float addrspace(1)* %0, i64 %314\l  %316 = load float, float addrspace(1)* %315, align 4, !tbaa !7\l  %317 = add nuw nsw i32 %20, 7\l  %318 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 %317\l  store float %316, float addrspace(3)* %318, align 4, !tbaa !7\l  br label %319\l}"];
	Node0x510d650 -> Node0x51171f0;
	Node0x51171f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%319:\l319:                                              \l  %320 = phi i32 [ %293, %290 ], [ %317, %294 ]\l  %321 = phi i32 [ %292, %290 ], [ %309, %294 ]\l  %322 = phi i32 [ %291, %290 ], [ %301, %294 ]\l  %323 = load float, float addrspace(1)* %137, align 4, !tbaa !7\l  %324 = fcmp contract olt float %323, 0.000000e+00\l  %325 = select i1 %324, float -1.000000e+01, float %323\l  store float %325, float addrspace(3)* %141, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %326 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 %20\l  %327 = load float, float addrspace(3)* %326, align 4, !tbaa !7\l  %328 = add nuw nsw i32 %20, 1\l  %329 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 %328\l  %330 = load float, float addrspace(3)* %329, align 4, !tbaa !7\l  %331 = add nuw nsw i32 %20, 2\l  %332 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 %331\l  %333 = load float, float addrspace(3)* %332, align 4, !tbaa !7\l  %334 = add nuw nsw i32 %20, 3\l  %335 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 %334\l  %336 = bitcast float addrspace(3)* %335 to \<2 x float\> addrspace(3)*\l  %337 = load \<2 x float\>, \<2 x float\> addrspace(3)* %336, align 4, !tbaa !7\l  %338 = extractelement \<2 x float\> %337, i64 1\l  %339 = fsub contract float %327, %338\l  %340 = tail call float @llvm.fabs.f32(float %339)\l  %341 = fsub contract float 4.000000e+00, %340\l  %342 = tail call float @llvm.maxnum.f32(float %341, float 0.000000e+00)\l  %343 = fadd contract float %342, 0.000000e+00\l  %344 = fsub contract float %330, %338\l  %345 = tail call float @llvm.fabs.f32(float %344)\l  %346 = fsub contract float 4.000000e+00, %345\l  %347 = tail call float @llvm.maxnum.f32(float %346, float 0.000000e+00)\l  %348 = fadd contract float %343, %347\l  %349 = fsub contract float %333, %338\l  %350 = tail call float @llvm.fabs.f32(float %349)\l  %351 = fsub contract float 4.000000e+00, %350\l  %352 = tail call float @llvm.maxnum.f32(float %351, float 0.000000e+00)\l  %353 = fadd contract float %348, %352\l  %354 = extractelement \<2 x float\> %337, i64 0\l  %355 = fsub contract float %354, %338\l  %356 = tail call float @llvm.fabs.f32(float %355)\l  %357 = fsub contract float 4.000000e+00, %356\l  %358 = tail call float @llvm.maxnum.f32(float %357, float 0.000000e+00)\l  %359 = fadd contract float %353, %358\l  %360 = fsub contract float %338, %338\l  %361 = tail call float @llvm.fabs.f32(float %360)\l  %362 = fsub contract float 4.000000e+00, %361\l  %363 = tail call float @llvm.maxnum.f32(float %362, float 0.000000e+00)\l  %364 = fadd contract float %359, %363\l  %365 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 %322\l  %366 = load float, float addrspace(3)* %365, align 4, !tbaa !7\l  %367 = fsub contract float %366, %338\l  %368 = tail call float @llvm.fabs.f32(float %367)\l  %369 = fsub contract float 4.000000e+00, %368\l  %370 = tail call float @llvm.maxnum.f32(float %369, float 0.000000e+00)\l  %371 = fadd contract float %364, %370\l  %372 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 %321\l  %373 = load float, float addrspace(3)* %372, align 4, !tbaa !7\l  %374 = fsub contract float %373, %338\l  %375 = tail call float @llvm.fabs.f32(float %374)\l  %376 = fsub contract float 4.000000e+00, %375\l  %377 = tail call float @llvm.maxnum.f32(float %376, float 0.000000e+00)\l  %378 = fadd contract float %371, %377\l  %379 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ16adaptiveMeanGPU8PfiiE8D_shared, i32 0, i32 %25, i32 %320\l  %380 = load float, float addrspace(3)* %379, align 4, !tbaa !7\l  %381 = fsub contract float %380, %338\l  %382 = tail call float @llvm.fabs.f32(float %381)\l  %383 = fsub contract float 4.000000e+00, %382\l  %384 = tail call float @llvm.maxnum.f32(float %383, float 0.000000e+00)\l  %385 = fadd contract float %378, %384\l  %386 = fcmp contract ogt float %385, 0.000000e+00\l  br i1 %386, label %387, label %407\l|{<s0>T|<s1>F}}"];
	Node0x51171f0:s0 -> Node0x511bd70;
	Node0x51171f0:s1 -> Node0x5107e50;
	Node0x511bd70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%387:\l387:                                              \l  %388 = fmul contract float %327, %342\l  %389 = fadd contract float %388, 0.000000e+00\l  %390 = fmul contract float %330, %347\l  %391 = fadd contract float %389, %390\l  %392 = fmul contract float %333, %352\l  %393 = fadd contract float %391, %392\l  %394 = fmul contract float %354, %358\l  %395 = fadd contract float %393, %394\l  %396 = fmul contract float %338, %363\l  %397 = fadd contract float %395, %396\l  %398 = fmul contract float %366, %370\l  %399 = fadd contract float %397, %398\l  %400 = fmul contract float %373, %377\l  %401 = fadd contract float %399, %400\l  %402 = fmul contract float %380, %384\l  %403 = fadd contract float %401, %402\l  %404 = fdiv contract float %403, %385\l  %405 = fcmp contract ult float %404, 0.000000e+00\l  br i1 %405, label %407, label %406\l|{<s0>T|<s1>F}}"];
	Node0x511bd70:s0 -> Node0x5107e50;
	Node0x511bd70:s1 -> Node0x511c890;
	Node0x511c890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%406:\l406:                                              \l  store float %404, float addrspace(1)* %137, align 4, !tbaa !7\l  br label %407\l}"];
	Node0x511c890 -> Node0x5107e50;
	Node0x5107e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%407:\l407:                                              \l  ret void\l}"];
}
