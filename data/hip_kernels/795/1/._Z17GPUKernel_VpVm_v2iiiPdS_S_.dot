digraph "CFG for '_Z17GPUKernel_VpVm_v2iiiPdS_S_' function" {
	label="CFG for '_Z17GPUKernel_VpVm_v2iiiPdS_S_' function";

	Node0x493ea40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 16\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 8, !tbaa !4\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 2, !range !13, !invariant.load\l... !14\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %7\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = add i32 %21, %22\l  %24 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 4, !range !13, !invariant.load\l... !14\l  %27 = zext i16 %26 to i32\l  %28 = mul i32 %23, %27\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %30 = add i32 %28, %29\l  %31 = mul nsw i32 %2, %2\l  %32 = icmp slt i32 %30, %31\l  br i1 %32, label %33, label %62\l|{<s0>T|<s1>F}}"];
	Node0x493ea40:s0 -> Node0x49407d0;
	Node0x493ea40:s1 -> Node0x4940860;
	Node0x49407d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%33:\l33:                                               \l  %34 = freeze i32 %30\l  %35 = freeze i32 %2\l  %36 = sdiv i32 %34, %35\l  %37 = mul i32 %36, %35\l  %38 = sub i32 %34, %37\l  %39 = icmp sgt i32 %38, %36\l  br i1 %39, label %62, label %40\l|{<s0>T|<s1>F}}"];
	Node0x49407d0:s0 -> Node0x4940860;
	Node0x49407d0:s1 -> Node0x49427a0;
	Node0x49427a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%40:\l40:                                               \l  %41 = add nsw i32 %36, 1\l  %42 = mul nsw i32 %41, %36\l  %43 = sdiv i32 %42, 2\l  %44 = add nsw i32 %43, %38\l  %45 = mul nsw i32 %38, %2\l  %46 = add nsw i32 %45, %36\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds double, double addrspace(1)* %3, i64 %47\l  %49 = load double, double addrspace(1)* %48, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  %50 = mul nsw i32 %36, %2\l  %51 = add nsw i32 %50, %38\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds double, double addrspace(1)* %3, i64 %52\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  %55 = fadd contract double %49, %54\l  %56 = sext i32 %44 to i64\l  %57 = getelementptr inbounds double, double addrspace(1)* %4, i64 %56\l  store double %55, double addrspace(1)* %57, align 8, !tbaa !16\l  %58 = load double, double addrspace(1)* %48, align 8, !tbaa !16\l  %59 = load double, double addrspace(1)* %53, align 8, !tbaa !16\l  %60 = fsub contract double %58, %59\l  %61 = getelementptr inbounds double, double addrspace(1)* %5, i64 %56\l  store double %60, double addrspace(1)* %61, align 8, !tbaa !16\l  br label %62\l}"];
	Node0x49427a0 -> Node0x4940860;
	Node0x4940860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  ret void\l}"];
}
