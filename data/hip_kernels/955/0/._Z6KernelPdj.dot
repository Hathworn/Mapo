digraph "CFG for '_Z6KernelPdj' function" {
	label="CFG for '_Z6KernelPdj' function";

	Node0x46294a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = add i32 %10, %3\l  %12 = icmp eq i32 %11, 0\l  br i1 %12, label %13, label %14\l|{<s0>T|<s1>F}}"];
	Node0x46294a0:s0 -> Node0x462a450;
	Node0x46294a0:s1 -> Node0x462b470;
	Node0x462a450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%13:\l13:                                               \l  store double 0.000000e+00, double addrspace(1)* %0, align 8, !tbaa !7\l  br label %44\l}"];
	Node0x462a450 -> Node0x462c1c0;
	Node0x462b470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%14:\l14:                                               \l  %15 = add i32 %1, -1\l  %16 = icmp eq i32 %11, %15\l  br i1 %16, label %17, label %25\l|{<s0>T|<s1>F}}"];
	Node0x462b470:s0 -> Node0x462b180;
	Node0x462b470:s1 -> Node0x462c4f0;
	Node0x462b180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%17:\l17:                                               \l  %18 = add i32 %1, -2\l  %19 = zext i32 %18 to i64\l  %20 = getelementptr inbounds double, double addrspace(1)* %0, i64 %19\l  %21 = load double, double addrspace(1)* %20, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %22 = fadd contract double %21, 5.000000e+00\l  %23 = zext i32 %11 to i64\l  %24 = getelementptr inbounds double, double addrspace(1)* %0, i64 %23\l  store double %22, double addrspace(1)* %24, align 8, !tbaa !7\l  br label %44\l}"];
	Node0x462b180 -> Node0x462c1c0;
	Node0x462c4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%25:\l25:                                               \l  %26 = icmp ult i32 %11, %1\l  br i1 %26, label %27, label %44\l|{<s0>T|<s1>F}}"];
	Node0x462c4f0:s0 -> Node0x462d830;
	Node0x462c4f0:s1 -> Node0x462c1c0;
	Node0x462d830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%27:\l27:                                               \l  %28 = add nuw nsw i32 %11, 1\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds double, double addrspace(1)* %0, i64 %29\l  %31 = load double, double addrspace(1)* %30, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %32 = sext i32 %11 to i64\l  %33 = getelementptr inbounds double, double addrspace(1)* %0, i64 %32\l  %34 = load double, double addrspace(1)* %33, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %35 = fmul contract double %34, 2.000000e+00\l  %36 = fsub contract double %31, %35\l  %37 = add nsw i32 %11, -1\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds double, double addrspace(1)* %0, i64 %38\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %41 = fadd contract double %40, %36\l  %42 = fmul contract double %41, 1.000000e-01\l  %43 = fadd contract double %34, %42\l  store double %43, double addrspace(1)* %33, align 8, !tbaa !7\l  br label %44\l}"];
	Node0x462d830 -> Node0x462c1c0;
	Node0x462c1c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  ret void\l}"];
}
