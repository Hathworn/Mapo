digraph "CFG for '_Z21weighted_delta_kerneliPfS_S_S_S_S_S_' function" {
	label="CFG for '_Z21weighted_delta_kerneliPfS_S_S_S_S_S_' function";

	Node0x5c6ce40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !4\l  %15 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !13, !invariant.load\l... !14\l  %18 = zext i16 %17 to i32\l  %19 = udiv i32 %14, %18\l  %20 = mul i32 %19, %18\l  %21 = icmp ugt i32 %14, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %10\l  %25 = add i32 %24, %9\l  %26 = mul i32 %25, %18\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %28 = add i32 %26, %27\l  %29 = icmp slt i32 %28, %0\l  br i1 %29, label %30, label %67\l|{<s0>T|<s1>F}}"];
	Node0x5c6ce40:s0 -> Node0x5c6f6b0;
	Node0x5c6ce40:s1 -> Node0x5c6f740;
	Node0x5c6f6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%30:\l30:                                               \l  %31 = icmp eq float addrspace(1)* %4, addrspacecast (float* null to float\l... addrspace(1)*)\l  br i1 %31, label %42, label %32\l|{<s0>T|<s1>F}}"];
	Node0x5c6f6b0:s0 -> Node0x5c6ff30;
	Node0x5c6f6b0:s1 -> Node0x5c6ffc0;
	Node0x5c6ffc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%32:\l32:                                               \l  %33 = sext i32 %28 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %7, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %36 = getelementptr inbounds float, float addrspace(1)* %3, i64 %33\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %38 = fmul contract float %35, %37\l  %39 = getelementptr inbounds float, float addrspace(1)* %4, i64 %33\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %41 = fadd contract float %40, %38\l  store float %41, float addrspace(1)* %39, align 4, !tbaa !16\l  br label %42\l}"];
	Node0x5c6ffc0 -> Node0x5c6ff30;
	Node0x5c6ff30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%42:\l42:                                               \l  %43 = icmp eq float addrspace(1)* %5, addrspacecast (float* null to float\l... addrspace(1)*)\l  %44 = sext i32 %28 to i64\l  br i1 %43, label %55, label %45\l|{<s0>T|<s1>F}}"];
	Node0x5c6ff30:s0 -> Node0x5c716e0;
	Node0x5c6ff30:s1 -> Node0x5c71730;
	Node0x5c71730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%45:\l45:                                               \l  %46 = getelementptr inbounds float, float addrspace(1)* %7, i64 %44\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !16\l  %48 = getelementptr inbounds float, float addrspace(1)* %3, i64 %44\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !16\l  %50 = fsub contract float 1.000000e+00, %49\l  %51 = fmul contract float %47, %50\l  %52 = getelementptr inbounds float, float addrspace(1)* %5, i64 %44\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !16\l  %54 = fadd contract float %53, %51\l  store float %54, float addrspace(1)* %52, align 4, !tbaa !16\l  br label %55\l}"];
	Node0x5c71730 -> Node0x5c716e0;
	Node0x5c716e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%55:\l55:                                               \l  %56 = getelementptr inbounds float, float addrspace(1)* %7, i64 %44\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !16\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !16\l  %60 = getelementptr inbounds float, float addrspace(1)* %2, i64 %44\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !16\l  %62 = fsub contract float %59, %61\l  %63 = fmul contract float %57, %62\l  %64 = getelementptr inbounds float, float addrspace(1)* %6, i64 %44\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !16\l  %66 = fadd contract float %65, %63\l  store float %66, float addrspace(1)* %64, align 4, !tbaa !16\l  br label %67\l}"];
	Node0x5c716e0 -> Node0x5c6f740;
	Node0x5c6f740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  ret void\l}"];
}
