digraph "CFG for '_Z8_l1reg32idPfS_' function" {
	label="CFG for '_Z8_l1reg32idPfS_' function";

	Node0x4ffb820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %50\l|{<s0>T|<s1>F}}"];
	Node0x4ffb820:s0 -> Node0x4ffb870;
	Node0x4ffb820:s1 -> Node0x4ffdb20;
	Node0x4ffb870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  %19 = udiv i32 %14, %11\l  %20 = mul i32 %19, %11\l  %21 = icmp ugt i32 %14, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %11\l  br label %25\l}"];
	Node0x4ffb870 -> Node0x4ffdfa0;
	Node0x4ffdfa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %16, %18 ], [ %48, %47 ]\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %2, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16\l  %30 = fcmp contract ogt float %29, 0.000000e+00\l  br i1 %30, label %31, label %36\l|{<s0>T|<s1>F}}"];
	Node0x4ffdfa0:s0 -> Node0x4ffef70;
	Node0x4ffdfa0:s1 -> Node0x4fff000;
	Node0x4ffef70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%31:\l31:                                               \l  %32 = getelementptr inbounds float, float addrspace(1)* %3, i64 %27\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !16\l  %34 = fpext float %33 to double\l  %35 = fadd contract double %34, %1\l  br label %43\l}"];
	Node0x4ffef70 -> Node0x4fffa90;
	Node0x4fff000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%36:\l36:                                               \l  %37 = fcmp contract olt float %29, 0.000000e+00\l  br i1 %37, label %38, label %47\l|{<s0>T|<s1>F}}"];
	Node0x4fff000:s0 -> Node0x4fffbe0;
	Node0x4fff000:s1 -> Node0x4ffe060;
	Node0x4fffbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%38:\l38:                                               \l  %39 = getelementptr inbounds float, float addrspace(1)* %3, i64 %27\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !16\l  %41 = fpext float %40 to double\l  %42 = fsub contract double %41, %1\l  br label %43\l}"];
	Node0x4fffbe0 -> Node0x4fffa90;
	Node0x4fffa90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%43:\l43:                                               \l  %44 = phi double [ %42, %38 ], [ %35, %31 ]\l  %45 = phi float addrspace(1)* [ %39, %38 ], [ %32, %31 ]\l  %46 = fptrunc double %44 to float\l  store float %46, float addrspace(1)* %45, align 4, !tbaa !16\l  br label %47\l}"];
	Node0x4fffa90 -> Node0x4ffe060;
	Node0x4ffe060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = add i32 %24, %26\l  %49 = icmp slt i32 %48, %0\l  br i1 %49, label %25, label %50, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4ffe060:s0 -> Node0x4ffdfa0;
	Node0x4ffe060:s1 -> Node0x4ffdb20;
	Node0x4ffdb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%50:\l50:                                               \l  ret void\l}"];
}
