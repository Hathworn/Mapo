digraph "CFG for '_Z7_drop32iPfS_S_dd' function" {
	label="CFG for '_Z7_drop32iPfS_S_dd' function";

	Node0x57f9730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = mul i32 %8, %13\l  %18 = add i32 %17, %7\l  %19 = icmp slt i32 %18, %0\l  br i1 %19, label %20, label %45\l|{<s0>T|<s1>F}}"];
	Node0x57f9730:s0 -> Node0x57fb950;
	Node0x57f9730:s1 -> Node0x57fb9e0;
	Node0x57fb950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%20:\l20:                                               \l  %21 = udiv i32 %16, %13\l  %22 = mul i32 %21, %13\l  %23 = icmp ugt i32 %16, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %13\l  br label %27\l}"];
	Node0x57fb950 -> Node0x57fbe60;
	Node0x57fbe60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %18, %20 ], [ %43, %40 ]\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %3, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !16\l  %32 = fpext float %31 to double\l  %33 = fcmp contract olt double %32, %4\l  br i1 %33, label %40, label %34\l|{<s0>T|<s1>F}}"];
	Node0x57fbe60:s0 -> Node0x57fbf20;
	Node0x57fbe60:s1 -> Node0x57fb7b0;
	Node0x57fb7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %29\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %37 = fpext float %36 to double\l  %38 = fmul contract double %37, %5\l  %39 = fptrunc double %38 to float\l  br label %40\l}"];
	Node0x57fb7b0 -> Node0x57fbf20;
	Node0x57fbf20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi float [ %39, %34 ], [ 0.000000e+00, %27 ]\l  %42 = getelementptr inbounds float, float addrspace(1)* %2, i64 %29\l  store float %41, float addrspace(1)* %42, align 4\l  %43 = add i32 %26, %28\l  %44 = icmp slt i32 %43, %0\l  br i1 %44, label %27, label %45, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x57fbf20:s0 -> Node0x57fbe60;
	Node0x57fbf20:s1 -> Node0x57fb9e0;
	Node0x57fb9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%45:\l45:                                               \l  ret void\l}"];
}
