digraph "CFG for '_Z7_adam32iidddPfS_S_' function" {
	label="CFG for '_Z7_adam32iidddPfS_S_' function";

	Node0x55ed4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !7\l  %19 = mul i32 %10, %15\l  %20 = add i32 %19, %9\l  %21 = icmp slt i32 %20, %0\l  br i1 %21, label %22, label %482\l|{<s0>T|<s1>F}}"];
	Node0x55ed4d0:s0 -> Node0x55ef6d0;
	Node0x55ed4d0:s1 -> Node0x55ef760;
	Node0x55ef6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%22:\l22:                                               \l  %23 = fsub contract double 1.000000e+00, %3\l  %24 = fsub contract double 1.000000e+00, %4\l  %25 = sitofp i32 %1 to double\l  %26 = tail call double @llvm.fabs.f64(double %3)\l  %27 = tail call double @llvm.amdgcn.frexp.mant.f64(double %26)\l  %28 = fcmp olt double %27, 0x3FE5555555555555\l  %29 = zext i1 %28 to i32\l  %30 = tail call double @llvm.amdgcn.ldexp.f64(double %27, i32 %29)\l  %31 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %26)\l  %32 = sub nsw i32 %31, %29\l  %33 = fadd double %30, -1.000000e+00\l  %34 = fadd double %30, 1.000000e+00\l  %35 = fadd double %34, -1.000000e+00\l  %36 = fsub double %30, %35\l  %37 = tail call double @llvm.amdgcn.rcp.f64(double %34)\l  %38 = fneg double %34\l  %39 = tail call double @llvm.fma.f64(double %38, double %37, double\l... 1.000000e+00)\l  %40 = tail call double @llvm.fma.f64(double %39, double %37, double %37)\l  %41 = tail call double @llvm.fma.f64(double %38, double %40, double\l... 1.000000e+00)\l  %42 = tail call double @llvm.fma.f64(double %41, double %40, double %40)\l  %43 = fmul double %33, %42\l  %44 = fmul double %34, %43\l  %45 = fneg double %44\l  %46 = tail call double @llvm.fma.f64(double %43, double %34, double %45)\l  %47 = tail call double @llvm.fma.f64(double %43, double %36, double %46)\l  %48 = fadd double %44, %47\l  %49 = fsub double %48, %44\l  %50 = fsub double %47, %49\l  %51 = fsub double %33, %48\l  %52 = fsub double %33, %51\l  %53 = fsub double %52, %48\l  %54 = fsub double %53, %50\l  %55 = fadd double %51, %54\l  %56 = fmul double %42, %55\l  %57 = fadd double %43, %56\l  %58 = fsub double %57, %43\l  %59 = fsub double %56, %58\l  %60 = fmul double %57, %57\l  %61 = fneg double %60\l  %62 = tail call double @llvm.fma.f64(double %57, double %57, double %61)\l  %63 = fmul double %59, 2.000000e+00\l  %64 = tail call double @llvm.fma.f64(double %57, double %63, double %62)\l  %65 = fadd double %60, %64\l  %66 = fsub double %65, %60\l  %67 = fsub double %64, %66\l  %68 = tail call double @llvm.fma.f64(double %65, double 0x3FBDEE674222DE17,\l... double 0x3FBA6564968915A9)\l  %69 = tail call double @llvm.fma.f64(double %65, double %68, double\l... 0x3FBE25E43ABE935A)\l  %70 = tail call double @llvm.fma.f64(double %65, double %69, double\l... 0x3FC110EF47E6C9C2)\l  %71 = tail call double @llvm.fma.f64(double %65, double %70, double\l... 0x3FC3B13BCFA74449)\l  %72 = tail call double @llvm.fma.f64(double %65, double %71, double\l... 0x3FC745D171BF3C30)\l  %73 = tail call double @llvm.fma.f64(double %65, double %72, double\l... 0x3FCC71C71C7792CE)\l  %74 = tail call double @llvm.fma.f64(double %65, double %73, double\l... 0x3FD24924924920DA)\l  %75 = tail call double @llvm.fma.f64(double %65, double %74, double\l... 0x3FD999999999999C)\l  %76 = sitofp i32 %32 to double\l  %77 = fmul double %76, 0x3FE62E42FEFA39EF\l  %78 = fneg double %77\l  %79 = tail call double @llvm.fma.f64(double %76, double 0x3FE62E42FEFA39EF,\l... double %78)\l  %80 = tail call double @llvm.fma.f64(double %76, double 0x3C7ABC9E3B39803F,\l... double %79)\l  %81 = fadd double %77, %80\l  %82 = fsub double %81, %77\l  %83 = fsub double %80, %82\l  %84 = tail call double @llvm.amdgcn.ldexp.f64(double %57, i32 1)\l  %85 = tail call double @llvm.amdgcn.ldexp.f64(double %59, i32 1)\l  %86 = fmul double %57, %65\l  %87 = fneg double %86\l  %88 = tail call double @llvm.fma.f64(double %65, double %57, double %87)\l  %89 = tail call double @llvm.fma.f64(double %65, double %59, double %88)\l  %90 = tail call double @llvm.fma.f64(double %67, double %57, double %89)\l  %91 = fadd double %86, %90\l  %92 = fsub double %91, %86\l  %93 = fsub double %90, %92\l  %94 = fmul double %65, %75\l  %95 = fneg double %94\l  %96 = tail call double @llvm.fma.f64(double %65, double %75, double %95)\l  %97 = tail call double @llvm.fma.f64(double %67, double %75, double %96)\l  %98 = fadd double %94, %97\l  %99 = fsub double %98, %94\l  %100 = fsub double %97, %99\l  %101 = fadd double %98, 0x3FE5555555555555\l  %102 = fadd double %101, 0xBFE5555555555555\l  %103 = fsub double %98, %102\l  %104 = fadd double %100, 0x3C8543B0D5DF274D\l  %105 = fadd double %104, %103\l  %106 = fadd double %101, %105\l  %107 = fsub double %106, %101\l  %108 = fsub double %105, %107\l  %109 = fmul double %91, %106\l  %110 = fneg double %109\l  %111 = tail call double @llvm.fma.f64(double %91, double %106, double %110)\l  %112 = tail call double @llvm.fma.f64(double %91, double %108, double %111)\l  %113 = tail call double @llvm.fma.f64(double %93, double %106, double %112)\l  %114 = fadd double %109, %113\l  %115 = fsub double %114, %109\l  %116 = fsub double %113, %115\l  %117 = fadd double %84, %114\l  %118 = fsub double %117, %84\l  %119 = fsub double %114, %118\l  %120 = fadd double %85, %116\l  %121 = fadd double %120, %119\l  %122 = fadd double %117, %121\l  %123 = fsub double %122, %117\l  %124 = fsub double %121, %123\l  %125 = fadd double %81, %122\l  %126 = fsub double %125, %81\l  %127 = fsub double %125, %126\l  %128 = fsub double %81, %127\l  %129 = fsub double %122, %126\l  %130 = fadd double %129, %128\l  %131 = fadd double %83, %124\l  %132 = fsub double %131, %83\l  %133 = fsub double %131, %132\l  %134 = fsub double %83, %133\l  %135 = fsub double %124, %132\l  %136 = fadd double %135, %134\l  %137 = fadd double %131, %130\l  %138 = fadd double %125, %137\l  %139 = fsub double %138, %125\l  %140 = fsub double %137, %139\l  %141 = fadd double %136, %140\l  %142 = fadd double %138, %141\l  %143 = fsub double %142, %138\l  %144 = fsub double %141, %143\l  %145 = fmul double %142, %25\l  %146 = fneg double %145\l  %147 = tail call double @llvm.fma.f64(double %25, double %142, double %146)\l  %148 = tail call double @llvm.fma.f64(double %25, double %144, double %147)\l  %149 = fadd double %145, %148\l  %150 = fsub double %149, %145\l  %151 = fsub double %148, %150\l  %152 = tail call double @llvm.fabs.f64(double %145) #3\l  %153 = fcmp oeq double %152, 0x7FF0000000000000\l  %154 = select i1 %153, double %145, double %149\l  %155 = tail call double @llvm.fabs.f64(double %154) #3\l  %156 = fcmp oeq double %155, 0x7FF0000000000000\l  %157 = select i1 %156, double 0.000000e+00, double %151\l  %158 = fmul double %154, 0x3FF71547652B82FE\l  %159 = tail call double @llvm.rint.f64(double %158)\l  %160 = fneg double %159\l  %161 = tail call double @llvm.fma.f64(double %160, double\l... 0x3FE62E42FEFA39EF, double %154)\l  %162 = tail call double @llvm.fma.f64(double %160, double\l... 0x3C7ABC9E3B39803F, double %161)\l  %163 = tail call double @llvm.fma.f64(double %162, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %164 = tail call double @llvm.fma.f64(double %162, double %163, double\l... 0x3EC71DEE623FDE64)\l  %165 = tail call double @llvm.fma.f64(double %162, double %164, double\l... 0x3EFA01997C89E6B0)\l  %166 = tail call double @llvm.fma.f64(double %162, double %165, double\l... 0x3F2A01A014761F6E)\l  %167 = tail call double @llvm.fma.f64(double %162, double %166, double\l... 0x3F56C16C1852B7B0)\l  %168 = tail call double @llvm.fma.f64(double %162, double %167, double\l... 0x3F81111111122322)\l  %169 = tail call double @llvm.fma.f64(double %162, double %168, double\l... 0x3FA55555555502A1)\l  %170 = tail call double @llvm.fma.f64(double %162, double %169, double\l... 0x3FC5555555555511)\l  %171 = tail call double @llvm.fma.f64(double %162, double %170, double\l... 0x3FE000000000000B)\l  %172 = tail call double @llvm.fma.f64(double %162, double %171, double\l... 1.000000e+00)\l  %173 = tail call double @llvm.fma.f64(double %162, double %172, double\l... 1.000000e+00)\l  %174 = fptosi double %159 to i32\l  %175 = tail call double @llvm.amdgcn.ldexp.f64(double %173, i32 %174)\l  %176 = fcmp ogt double %154, 1.024000e+03\l  %177 = select i1 %176, double 0x7FF0000000000000, double %175\l  %178 = fcmp olt double %154, -1.075000e+03\l  %179 = select i1 %178, double 0.000000e+00, double %177\l  %180 = tail call double @llvm.fma.f64(double %179, double %157, double %179)\l  %181 = tail call double @llvm.fabs.f64(double %179) #3\l  %182 = fcmp oeq double %181, 0x7FF0000000000000\l  %183 = select i1 %182, double %179, double %180\l  %184 = tail call double @llvm.fabs.f64(double %25)\l  %185 = tail call double @llvm.trunc.f64(double %184)\l  %186 = fcmp oeq double %184, %185\l  %187 = zext i1 %186 to i32\l  %188 = fmul double %185, 5.000000e-01\l  %189 = tail call double @llvm.amdgcn.fract.f64(double %188)\l  %190 = tail call i1 @llvm.amdgcn.class.f64(double %188, i32 516)\l  %191 = select i1 %190, double 0.000000e+00, double %189\l  %192 = fcmp oeq double %191, 0.000000e+00\l  %193 = and i1 %186, %192\l  %194 = zext i1 %193 to i32\l  %195 = add nuw nsw i32 %194, %187\l  %196 = icmp eq i32 %195, 1\l  %197 = fcmp olt double %3, 0.000000e+00\l  %198 = and i1 %197, %196\l  %199 = select i1 %198, double -0.000000e+00, double 0.000000e+00\l  %200 = tail call double @llvm.copysign.f64(double %183, double %199)\l  %201 = fcmp uge double %3, 0.000000e+00\l  %202 = icmp ne i32 %195, 0\l  %203 = select i1 %201, i1 true, i1 %202\l  %204 = select i1 %203, double %200, double 0x7FF8000000000000\l  %205 = fcmp oeq double %184, 0x7FF0000000000000\l  %206 = fcmp oeq double %26, 1.000000e+00\l  %207 = fadd double %26, -1.000000e+00\l  %208 = bitcast double %25 to \<2 x i32\>\l  %209 = extractelement \<2 x i32\> %208, i64 1\l  %210 = bitcast double %207 to \<2 x i32\>\l  %211 = extractelement \<2 x i32\> %210, i64 1\l  %212 = xor i32 %211, %209\l  %213 = icmp sgt i32 %212, -1\l  %214 = select i1 %213, double 0x7FF0000000000000, double 0.000000e+00\l  %215 = select i1 %206, double %26, double %214\l  %216 = select i1 %205, double %215, double %204\l  %217 = fcmp oeq double %26, 0x7FF0000000000000\l  %218 = fcmp oeq double %3, 0.000000e+00\l  %219 = or i1 %218, %217\l  %220 = icmp slt i32 %1, 0\l  %221 = xor i1 %220, %218\l  %222 = select i1 %221, double 0.000000e+00, double 0x7FF0000000000000\l  %223 = select i1 %196, double %3, double 0.000000e+00\l  %224 = tail call double @llvm.copysign.f64(double %222, double %223)\l  %225 = select i1 %219, double %224, double %216\l  %226 = fcmp uno double %3, 0.000000e+00\l  %227 = fcmp oeq double %3, 1.000000e+00\l  %228 = icmp eq i32 %1, 0\l  %229 = or i1 %228, %227\l  %230 = fsub contract double 1.000000e+00, %225\l  %231 = select i1 %226, double 0x7FF8000000000000, double %230\l  %232 = select i1 %229, double 0.000000e+00, double %231\l  %233 = tail call double @llvm.fabs.f64(double %4)\l  %234 = tail call double @llvm.amdgcn.frexp.mant.f64(double %233)\l  %235 = fcmp olt double %234, 0x3FE5555555555555\l  %236 = zext i1 %235 to i32\l  %237 = tail call double @llvm.amdgcn.ldexp.f64(double %234, i32 %236)\l  %238 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %233)\l  %239 = sub nsw i32 %238, %236\l  %240 = fadd double %237, -1.000000e+00\l  %241 = fadd double %237, 1.000000e+00\l  %242 = fadd double %241, -1.000000e+00\l  %243 = fsub double %237, %242\l  %244 = tail call double @llvm.amdgcn.rcp.f64(double %241)\l  %245 = fneg double %241\l  %246 = tail call double @llvm.fma.f64(double %245, double %244, double\l... 1.000000e+00)\l  %247 = tail call double @llvm.fma.f64(double %246, double %244, double %244)\l  %248 = tail call double @llvm.fma.f64(double %245, double %247, double\l... 1.000000e+00)\l  %249 = tail call double @llvm.fma.f64(double %248, double %247, double %247)\l  %250 = fmul double %240, %249\l  %251 = fmul double %241, %250\l  %252 = fneg double %251\l  %253 = tail call double @llvm.fma.f64(double %250, double %241, double %252)\l  %254 = tail call double @llvm.fma.f64(double %250, double %243, double %253)\l  %255 = fadd double %251, %254\l  %256 = fsub double %255, %251\l  %257 = fsub double %254, %256\l  %258 = fsub double %240, %255\l  %259 = fsub double %240, %258\l  %260 = fsub double %259, %255\l  %261 = fsub double %260, %257\l  %262 = fadd double %258, %261\l  %263 = fmul double %249, %262\l  %264 = fadd double %250, %263\l  %265 = fsub double %264, %250\l  %266 = fsub double %263, %265\l  %267 = fmul double %264, %264\l  %268 = fneg double %267\l  %269 = tail call double @llvm.fma.f64(double %264, double %264, double %268)\l  %270 = fmul double %266, 2.000000e+00\l  %271 = tail call double @llvm.fma.f64(double %264, double %270, double %269)\l  %272 = fadd double %267, %271\l  %273 = fsub double %272, %267\l  %274 = fsub double %271, %273\l  %275 = tail call double @llvm.fma.f64(double %272, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %276 = tail call double @llvm.fma.f64(double %272, double %275, double\l... 0x3FBE25E43ABE935A)\l  %277 = tail call double @llvm.fma.f64(double %272, double %276, double\l... 0x3FC110EF47E6C9C2)\l  %278 = tail call double @llvm.fma.f64(double %272, double %277, double\l... 0x3FC3B13BCFA74449)\l  %279 = tail call double @llvm.fma.f64(double %272, double %278, double\l... 0x3FC745D171BF3C30)\l  %280 = tail call double @llvm.fma.f64(double %272, double %279, double\l... 0x3FCC71C71C7792CE)\l  %281 = tail call double @llvm.fma.f64(double %272, double %280, double\l... 0x3FD24924924920DA)\l  %282 = tail call double @llvm.fma.f64(double %272, double %281, double\l... 0x3FD999999999999C)\l  %283 = sitofp i32 %239 to double\l  %284 = fmul double %283, 0x3FE62E42FEFA39EF\l  %285 = fneg double %284\l  %286 = tail call double @llvm.fma.f64(double %283, double\l... 0x3FE62E42FEFA39EF, double %285)\l  %287 = tail call double @llvm.fma.f64(double %283, double\l... 0x3C7ABC9E3B39803F, double %286)\l  %288 = fadd double %284, %287\l  %289 = fsub double %288, %284\l  %290 = fsub double %287, %289\l  %291 = tail call double @llvm.amdgcn.ldexp.f64(double %264, i32 1)\l  %292 = tail call double @llvm.amdgcn.ldexp.f64(double %266, i32 1)\l  %293 = fmul double %264, %272\l  %294 = fneg double %293\l  %295 = tail call double @llvm.fma.f64(double %272, double %264, double %294)\l  %296 = tail call double @llvm.fma.f64(double %272, double %266, double %295)\l  %297 = tail call double @llvm.fma.f64(double %274, double %264, double %296)\l  %298 = fadd double %293, %297\l  %299 = fsub double %298, %293\l  %300 = fsub double %297, %299\l  %301 = fmul double %272, %282\l  %302 = fneg double %301\l  %303 = tail call double @llvm.fma.f64(double %272, double %282, double %302)\l  %304 = tail call double @llvm.fma.f64(double %274, double %282, double %303)\l  %305 = fadd double %301, %304\l  %306 = fsub double %305, %301\l  %307 = fsub double %304, %306\l  %308 = fadd double %305, 0x3FE5555555555555\l  %309 = fadd double %308, 0xBFE5555555555555\l  %310 = fsub double %305, %309\l  %311 = fadd double %307, 0x3C8543B0D5DF274D\l  %312 = fadd double %311, %310\l  %313 = fadd double %308, %312\l  %314 = fsub double %313, %308\l  %315 = fsub double %312, %314\l  %316 = fmul double %298, %313\l  %317 = fneg double %316\l  %318 = tail call double @llvm.fma.f64(double %298, double %313, double %317)\l  %319 = tail call double @llvm.fma.f64(double %298, double %315, double %318)\l  %320 = tail call double @llvm.fma.f64(double %300, double %313, double %319)\l  %321 = fadd double %316, %320\l  %322 = fsub double %321, %316\l  %323 = fsub double %320, %322\l  %324 = fadd double %291, %321\l  %325 = fsub double %324, %291\l  %326 = fsub double %321, %325\l  %327 = fadd double %292, %323\l  %328 = fadd double %327, %326\l  %329 = fadd double %324, %328\l  %330 = fsub double %329, %324\l  %331 = fsub double %328, %330\l  %332 = fadd double %288, %329\l  %333 = fsub double %332, %288\l  %334 = fsub double %332, %333\l  %335 = fsub double %288, %334\l  %336 = fsub double %329, %333\l  %337 = fadd double %336, %335\l  %338 = fadd double %290, %331\l  %339 = fsub double %338, %290\l  %340 = fsub double %338, %339\l  %341 = fsub double %290, %340\l  %342 = fsub double %331, %339\l  %343 = fadd double %342, %341\l  %344 = fadd double %338, %337\l  %345 = fadd double %332, %344\l  %346 = fsub double %345, %332\l  %347 = fsub double %344, %346\l  %348 = fadd double %343, %347\l  %349 = fadd double %345, %348\l  %350 = fsub double %349, %345\l  %351 = fsub double %348, %350\l  %352 = fmul double %349, %25\l  %353 = fneg double %352\l  %354 = tail call double @llvm.fma.f64(double %25, double %349, double %353)\l  %355 = tail call double @llvm.fma.f64(double %25, double %351, double %354)\l  %356 = fadd double %352, %355\l  %357 = fsub double %356, %352\l  %358 = fsub double %355, %357\l  %359 = tail call double @llvm.fabs.f64(double %352) #3\l  %360 = fcmp oeq double %359, 0x7FF0000000000000\l  %361 = select i1 %360, double %352, double %356\l  %362 = tail call double @llvm.fabs.f64(double %361) #3\l  %363 = fcmp oeq double %362, 0x7FF0000000000000\l  %364 = select i1 %363, double 0.000000e+00, double %358\l  %365 = fmul double %361, 0x3FF71547652B82FE\l  %366 = tail call double @llvm.rint.f64(double %365)\l  %367 = fneg double %366\l  %368 = tail call double @llvm.fma.f64(double %367, double\l... 0x3FE62E42FEFA39EF, double %361)\l  %369 = tail call double @llvm.fma.f64(double %367, double\l... 0x3C7ABC9E3B39803F, double %368)\l  %370 = tail call double @llvm.fma.f64(double %369, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %371 = tail call double @llvm.fma.f64(double %369, double %370, double\l... 0x3EC71DEE623FDE64)\l  %372 = tail call double @llvm.fma.f64(double %369, double %371, double\l... 0x3EFA01997C89E6B0)\l  %373 = tail call double @llvm.fma.f64(double %369, double %372, double\l... 0x3F2A01A014761F6E)\l  %374 = tail call double @llvm.fma.f64(double %369, double %373, double\l... 0x3F56C16C1852B7B0)\l  %375 = tail call double @llvm.fma.f64(double %369, double %374, double\l... 0x3F81111111122322)\l  %376 = tail call double @llvm.fma.f64(double %369, double %375, double\l... 0x3FA55555555502A1)\l  %377 = tail call double @llvm.fma.f64(double %369, double %376, double\l... 0x3FC5555555555511)\l  %378 = tail call double @llvm.fma.f64(double %369, double %377, double\l... 0x3FE000000000000B)\l  %379 = tail call double @llvm.fma.f64(double %369, double %378, double\l... 1.000000e+00)\l  %380 = tail call double @llvm.fma.f64(double %369, double %379, double\l... 1.000000e+00)\l  %381 = fptosi double %366 to i32\l  %382 = tail call double @llvm.amdgcn.ldexp.f64(double %380, i32 %381)\l  %383 = fcmp ogt double %361, 1.024000e+03\l  %384 = select i1 %383, double 0x7FF0000000000000, double %382\l  %385 = fcmp olt double %361, -1.075000e+03\l  %386 = select i1 %385, double 0.000000e+00, double %384\l  %387 = tail call double @llvm.fma.f64(double %386, double %364, double %386)\l  %388 = tail call double @llvm.fabs.f64(double %386) #3\l  %389 = fcmp oeq double %388, 0x7FF0000000000000\l  %390 = select i1 %389, double %386, double %387\l  %391 = fcmp olt double %4, 0.000000e+00\l  %392 = and i1 %391, %196\l  %393 = select i1 %392, double -0.000000e+00, double 0.000000e+00\l  %394 = tail call double @llvm.copysign.f64(double %390, double %393)\l  %395 = fcmp uge double %4, 0.000000e+00\l  %396 = select i1 %395, i1 true, i1 %202\l  %397 = select i1 %396, double %394, double 0x7FF8000000000000\l  %398 = fcmp oeq double %233, 1.000000e+00\l  %399 = fadd double %233, -1.000000e+00\l  %400 = bitcast double %399 to \<2 x i32\>\l  %401 = extractelement \<2 x i32\> %400, i64 1\l  %402 = xor i32 %401, %209\l  %403 = icmp sgt i32 %402, -1\l  %404 = select i1 %403, double 0x7FF0000000000000, double 0.000000e+00\l  %405 = select i1 %398, double %233, double %404\l  %406 = select i1 %205, double %405, double %397\l  %407 = fcmp oeq double %233, 0x7FF0000000000000\l  %408 = fcmp oeq double %4, 0.000000e+00\l  %409 = or i1 %408, %407\l  %410 = xor i1 %220, %408\l  %411 = select i1 %410, double 0.000000e+00, double 0x7FF0000000000000\l  %412 = select i1 %196, double %4, double 0.000000e+00\l  %413 = tail call double @llvm.copysign.f64(double %411, double %412)\l  %414 = select i1 %409, double %413, double %406\l  %415 = fcmp uno double %4, 0.000000e+00\l  %416 = fcmp oeq double %4, 1.000000e+00\l  %417 = or i1 %228, %416\l  %418 = fsub contract double 1.000000e+00, %414\l  %419 = select i1 %415, double 0x7FF8000000000000, double %418\l  %420 = select i1 %417, double 0.000000e+00, double %419\l  %421 = udiv i32 %18, %15\l  %422 = mul i32 %421, %15\l  %423 = icmp ugt i32 %18, %422\l  %424 = zext i1 %423 to i32\l  %425 = add i32 %421, %424\l  %426 = mul i32 %425, %15\l  br label %427\l}"];
	Node0x55ef6d0 -> Node0x5605620;
	Node0x5605620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%427:\l427:                                              \l  %428 = phi i32 [ %20, %22 ], [ %480, %427 ]\l  %429 = sext i32 %428 to i64\l  %430 = getelementptr inbounds float, float addrspace(1)* %5, i64 %429\l  %431 = load float, float addrspace(1)* %430, align 4, !tbaa !16\l  %432 = fpext float %431 to double\l  %433 = fmul contract double %432, %3\l  %434 = getelementptr inbounds float, float addrspace(1)* %7, i64 %429\l  %435 = load float, float addrspace(1)* %434, align 4, !tbaa !16\l  %436 = fpext float %435 to double\l  %437 = fmul contract double %23, %436\l  %438 = fadd contract double %433, %437\l  %439 = fptrunc double %438 to float\l  store float %439, float addrspace(1)* %430, align 4, !tbaa !16\l  %440 = getelementptr inbounds float, float addrspace(1)* %6, i64 %429\l  %441 = load float, float addrspace(1)* %440, align 4, !tbaa !16\l  %442 = fpext float %441 to double\l  %443 = fmul contract double %442, %4\l  %444 = load float, float addrspace(1)* %434, align 4, !tbaa !16\l  %445 = fmul contract float %444, %444\l  %446 = fpext float %445 to double\l  %447 = fmul contract double %24, %446\l  %448 = fadd contract double %443, %447\l  %449 = fptrunc double %448 to float\l  store float %449, float addrspace(1)* %440, align 4, !tbaa !16\l  %450 = load float, float addrspace(1)* %430, align 4, !tbaa !16\l  %451 = fpext float %450 to double\l  %452 = fdiv contract double %451, %232\l  %453 = fpext float %449 to double\l  %454 = fdiv contract double %453, %420\l  %455 = fcmp olt double %454, 0x1000000000000000\l  %456 = select i1 %455, double 0x4FF0000000000000, double 1.000000e+00\l  %457 = fmul double %454, %456\l  %458 = tail call double @llvm.amdgcn.rsq.f64(double %457)\l  %459 = fmul double %457, %458\l  %460 = fmul double %458, 5.000000e-01\l  %461 = fneg double %460\l  %462 = tail call double @llvm.fma.f64(double %461, double %459, double\l... 5.000000e-01)\l  %463 = tail call double @llvm.fma.f64(double %460, double %462, double %460)\l  %464 = tail call double @llvm.fma.f64(double %459, double %462, double %459)\l  %465 = fneg double %464\l  %466 = tail call double @llvm.fma.f64(double %465, double %464, double %457)\l  %467 = tail call double @llvm.fma.f64(double %466, double %463, double %464)\l  %468 = fneg double %467\l  %469 = tail call double @llvm.fma.f64(double %468, double %467, double %457)\l  %470 = tail call double @llvm.fma.f64(double %469, double %463, double %467)\l  %471 = select i1 %455, double 0x37F0000000000000, double 1.000000e+00\l  %472 = fmul double %471, %470\l  %473 = fcmp oeq double %457, 0.000000e+00\l  %474 = fcmp oeq double %457, 0x7FF0000000000000\l  %475 = or i1 %473, %474\l  %476 = select i1 %475, double %457, double %472\l  %477 = fadd contract double %476, %2\l  %478 = fdiv contract double %452, %477\l  %479 = fptrunc double %478 to float\l  store float %479, float addrspace(1)* %434, align 4, !tbaa !16\l  %480 = add i32 %426, %428\l  %481 = icmp slt i32 %480, %0\l  br i1 %481, label %427, label %482, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5605620:s0 -> Node0x5605620;
	Node0x5605620:s1 -> Node0x55ef760;
	Node0x55ef760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%482:\l482:                                              \l  ret void\l}"];
}
