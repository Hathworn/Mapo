digraph "CFG for '_Z12_kgauss64mapiiPdS_S_d' function" {
	label="CFG for '_Z12_kgauss64mapiiPdS_S_d' function";

	Node0x5ce8fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = mul i32 %8, %13\l  %18 = add i32 %17, %7\l  %19 = mul nsw i32 %1, %0\l  %20 = icmp slt i32 %18, %19\l  br i1 %20, label %21, label %73\l|{<s0>T|<s1>F}}"];
	Node0x5ce8fd0:s0 -> Node0x5ceb280;
	Node0x5ce8fd0:s1 -> Node0x5ceb310;
	Node0x5ceb280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%21:\l21:                                               \l  %22 = fneg contract double %5\l  %23 = udiv i32 %16, %13\l  %24 = mul i32 %23, %13\l  %25 = icmp ugt i32 %16, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %13\l  br label %29\l}"];
	Node0x5ceb280 -> Node0x5ceb800;
	Node0x5ceb800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %18, %21 ], [ %71, %29 ]\l  %31 = freeze i32 %30\l  %32 = freeze i32 %0\l  %33 = sdiv i32 %31, %32\l  %34 = mul i32 %33, %32\l  %35 = sub i32 %31, %34\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds double, double addrspace(1)* %2, i64 %36\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !16\l  %39 = sext i32 %33 to i64\l  %40 = getelementptr inbounds double, double addrspace(1)* %3, i64 %39\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !16\l  %42 = fadd contract double %38, %41\l  %43 = sext i32 %30 to i64\l  %44 = getelementptr inbounds double, double addrspace(1)* %4, i64 %43\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !16\l  %46 = fmul contract double %45, 2.000000e+00\l  %47 = fsub contract double %42, %46\l  %48 = fmul contract double %47, %22\l  %49 = fmul double %48, 0x3FF71547652B82FE\l  %50 = tail call double @llvm.rint.f64(double %49)\l  %51 = fneg double %50\l  %52 = tail call double @llvm.fma.f64(double %51, double 0x3FE62E42FEFA39EF,\l... double %48)\l  %53 = tail call double @llvm.fma.f64(double %51, double 0x3C7ABC9E3B39803F,\l... double %52)\l  %54 = tail call double @llvm.fma.f64(double %53, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %55 = tail call double @llvm.fma.f64(double %53, double %54, double\l... 0x3EC71DEE623FDE64)\l  %56 = tail call double @llvm.fma.f64(double %53, double %55, double\l... 0x3EFA01997C89E6B0)\l  %57 = tail call double @llvm.fma.f64(double %53, double %56, double\l... 0x3F2A01A014761F6E)\l  %58 = tail call double @llvm.fma.f64(double %53, double %57, double\l... 0x3F56C16C1852B7B0)\l  %59 = tail call double @llvm.fma.f64(double %53, double %58, double\l... 0x3F81111111122322)\l  %60 = tail call double @llvm.fma.f64(double %53, double %59, double\l... 0x3FA55555555502A1)\l  %61 = tail call double @llvm.fma.f64(double %53, double %60, double\l... 0x3FC5555555555511)\l  %62 = tail call double @llvm.fma.f64(double %53, double %61, double\l... 0x3FE000000000000B)\l  %63 = tail call double @llvm.fma.f64(double %53, double %62, double\l... 1.000000e+00)\l  %64 = tail call double @llvm.fma.f64(double %53, double %63, double\l... 1.000000e+00)\l  %65 = fptosi double %50 to i32\l  %66 = tail call double @llvm.amdgcn.ldexp.f64(double %64, i32 %65)\l  %67 = fcmp ogt double %48, 1.024000e+03\l  %68 = select i1 %67, double 0x7FF0000000000000, double %66\l  %69 = fcmp olt double %48, -1.075000e+03\l  %70 = select i1 %69, double 0.000000e+00, double %68\l  store double %70, double addrspace(1)* %44, align 8, !tbaa !16\l  %71 = add i32 %28, %30\l  %72 = icmp slt i32 %71, %19\l  br i1 %72, label %29, label %73, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5ceb800:s0 -> Node0x5ceb800;
	Node0x5ceb800:s1 -> Node0x5ceb310;
	Node0x5ceb310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%73:\l73:                                               \l  ret void\l}"];
}
