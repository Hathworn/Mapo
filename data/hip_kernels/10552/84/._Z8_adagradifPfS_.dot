digraph "CFG for '_Z8_adagradifPfS_' function" {
	label="CFG for '_Z8_adagradifPfS_' function";

	Node0x5405b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5405b00:s0 -> Node0x5405b50;
	Node0x5405b00:s1 -> Node0x5407dd0;
	Node0x5405b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  %19 = udiv i32 %14, %11\l  %20 = mul i32 %19, %11\l  %21 = icmp ugt i32 %14, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %11\l  br label %25\l}"];
	Node0x5405b50 -> Node0x5408250;
	Node0x5408250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %16, %18 ], [ %58, %25 ]\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %3, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16\l  %30 = fmul contract float %29, %29\l  %31 = getelementptr inbounds float, float addrspace(1)* %2, i64 %27\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %33 = fadd contract float %32, %30\l  store float %33, float addrspace(1)* %31, align 4, !tbaa !16\l  %34 = fcmp olt float %33, 0x39F0000000000000\l  %35 = select i1 %34, float 0x41F0000000000000, float 1.000000e+00\l  %36 = fmul float %33, %35\l  %37 = tail call float @llvm.sqrt.f32(float %36)\l  %38 = bitcast float %37 to i32\l  %39 = add nsw i32 %38, -1\l  %40 = bitcast i32 %39 to float\l  %41 = add nsw i32 %38, 1\l  %42 = bitcast i32 %41 to float\l  %43 = tail call i1 @llvm.amdgcn.class.f32(float %36, i32 608)\l  %44 = select i1 %34, float 0x3EF0000000000000, float 1.000000e+00\l  %45 = fneg float %42\l  %46 = tail call float @llvm.fma.f32(float %45, float %37, float %36)\l  %47 = fcmp ogt float %46, 0.000000e+00\l  %48 = fneg float %40\l  %49 = tail call float @llvm.fma.f32(float %48, float %37, float %36)\l  %50 = fcmp ole float %49, 0.000000e+00\l  %51 = select i1 %50, float %40, float %37\l  %52 = select i1 %47, float %42, float %51\l  %53 = fmul float %44, %52\l  %54 = select i1 %43, float %36, float %53\l  %55 = fadd contract float %54, %1\l  %56 = load float, float addrspace(1)* %28, align 4, !tbaa !16\l  %57 = fdiv contract float %56, %55\l  store float %57, float addrspace(1)* %28, align 4, !tbaa !16\l  %58 = add i32 %24, %26\l  %59 = icmp slt i32 %58, %0\l  br i1 %59, label %25, label %60, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5408250:s0 -> Node0x5408250;
	Node0x5408250:s1 -> Node0x5407dd0;
	Node0x5407dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%60:\l60:                                               \l  ret void\l}"];
}
