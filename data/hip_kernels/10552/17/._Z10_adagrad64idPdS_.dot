digraph "CFG for '_Z10_adagrad64idPdS_' function" {
	label="CFG for '_Z10_adagrad64idPdS_' function";

	Node0x4c65b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %61\l|{<s0>T|<s1>F}}"];
	Node0x4c65b80:s0 -> Node0x4c65bd0;
	Node0x4c65b80:s1 -> Node0x4c67e50;
	Node0x4c65bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  %19 = udiv i32 %14, %11\l  %20 = mul i32 %19, %11\l  %21 = icmp ugt i32 %14, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %11\l  br label %25\l}"];
	Node0x4c65bd0 -> Node0x4c682d0;
	Node0x4c682d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %16, %18 ], [ %59, %25 ]\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds double, double addrspace(1)* %3, i64 %27\l  %29 = load double, double addrspace(1)* %28, align 8, !tbaa !16\l  %30 = fmul contract double %29, %29\l  %31 = getelementptr inbounds double, double addrspace(1)* %2, i64 %27\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !16\l  %33 = fadd contract double %32, %30\l  store double %33, double addrspace(1)* %31, align 8, !tbaa !16\l  %34 = fadd contract double %33, %1\l  %35 = fcmp olt double %34, 0x1000000000000000\l  %36 = select i1 %35, double 0x4FF0000000000000, double 1.000000e+00\l  %37 = fmul double %34, %36\l  %38 = tail call double @llvm.amdgcn.rsq.f64(double %37)\l  %39 = fmul double %37, %38\l  %40 = fmul double %38, 5.000000e-01\l  %41 = fneg double %40\l  %42 = tail call double @llvm.fma.f64(double %41, double %39, double\l... 5.000000e-01)\l  %43 = tail call double @llvm.fma.f64(double %40, double %42, double %40)\l  %44 = tail call double @llvm.fma.f64(double %39, double %42, double %39)\l  %45 = fneg double %44\l  %46 = tail call double @llvm.fma.f64(double %45, double %44, double %37)\l  %47 = tail call double @llvm.fma.f64(double %46, double %43, double %44)\l  %48 = fneg double %47\l  %49 = tail call double @llvm.fma.f64(double %48, double %47, double %37)\l  %50 = tail call double @llvm.fma.f64(double %49, double %43, double %47)\l  %51 = select i1 %35, double 0x37F0000000000000, double 1.000000e+00\l  %52 = fmul double %51, %50\l  %53 = fcmp oeq double %37, 0.000000e+00\l  %54 = fcmp oeq double %37, 0x7FF0000000000000\l  %55 = or i1 %53, %54\l  %56 = select i1 %55, double %37, double %52\l  %57 = load double, double addrspace(1)* %28, align 8, !tbaa !16\l  %58 = fdiv contract double %57, %56\l  store double %58, double addrspace(1)* %28, align 8, !tbaa !16\l  %59 = add i32 %24, %26\l  %60 = icmp slt i32 %59, %0\l  br i1 %60, label %25, label %61, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4c682d0:s0 -> Node0x4c682d0;
	Node0x4c682d0:s1 -> Node0x4c67e50;
	Node0x4c67e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%61:\l61:                                               \l  ret void\l}"];
}
