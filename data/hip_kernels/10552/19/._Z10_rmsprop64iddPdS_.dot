digraph "CFG for '_Z10_rmsprop64iddPdS_' function" {
	label="CFG for '_Z10_rmsprop64iddPdS_' function";

	Node0x4698c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !7\l  %16 = mul i32 %7, %12\l  %17 = add i32 %16, %6\l  %18 = icmp slt i32 %17, %0\l  br i1 %18, label %19, label %65\l|{<s0>T|<s1>F}}"];
	Node0x4698c40:s0 -> Node0x469ae40;
	Node0x4698c40:s1 -> Node0x469aed0;
	Node0x469ae40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%19:\l19:                                               \l  %20 = fsub contract double 1.000000e+00, %2\l  %21 = udiv i32 %15, %12\l  %22 = mul i32 %21, %12\l  %23 = icmp ugt i32 %15, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %12\l  br label %27\l}"];
	Node0x469ae40 -> Node0x469bdf0;
	Node0x469bdf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %17, %19 ], [ %63, %27 ]\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds double, double addrspace(1)* %3, i64 %29\l  %31 = load double, double addrspace(1)* %30, align 8, !tbaa !16\l  %32 = fmul contract double %31, %2\l  %33 = getelementptr inbounds double, double addrspace(1)* %4, i64 %29\l  %34 = load double, double addrspace(1)* %33, align 8, !tbaa !16\l  %35 = fmul contract double %20, %34\l  %36 = fmul contract double %34, %35\l  %37 = fadd contract double %32, %36\l  store double %37, double addrspace(1)* %30, align 8, !tbaa !16\l  %38 = fadd contract double %37, %1\l  %39 = fcmp olt double %38, 0x1000000000000000\l  %40 = select i1 %39, double 0x4FF0000000000000, double 1.000000e+00\l  %41 = fmul double %38, %40\l  %42 = tail call double @llvm.amdgcn.rsq.f64(double %41)\l  %43 = fmul double %41, %42\l  %44 = fmul double %42, 5.000000e-01\l  %45 = fneg double %44\l  %46 = tail call double @llvm.fma.f64(double %45, double %43, double\l... 5.000000e-01)\l  %47 = tail call double @llvm.fma.f64(double %44, double %46, double %44)\l  %48 = tail call double @llvm.fma.f64(double %43, double %46, double %43)\l  %49 = fneg double %48\l  %50 = tail call double @llvm.fma.f64(double %49, double %48, double %41)\l  %51 = tail call double @llvm.fma.f64(double %50, double %47, double %48)\l  %52 = fneg double %51\l  %53 = tail call double @llvm.fma.f64(double %52, double %51, double %41)\l  %54 = tail call double @llvm.fma.f64(double %53, double %47, double %51)\l  %55 = select i1 %39, double 0x37F0000000000000, double 1.000000e+00\l  %56 = fmul double %55, %54\l  %57 = fcmp oeq double %41, 0.000000e+00\l  %58 = fcmp oeq double %41, 0x7FF0000000000000\l  %59 = or i1 %57, %58\l  %60 = select i1 %59, double %41, double %56\l  %61 = load double, double addrspace(1)* %33, align 8, !tbaa !16\l  %62 = fdiv contract double %61, %60\l  store double %62, double addrspace(1)* %33, align 8, !tbaa !16\l  %63 = add i32 %26, %28\l  %64 = icmp slt i32 %63, %0\l  br i1 %64, label %27, label %65, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x469bdf0:s0 -> Node0x469bdf0;
	Node0x469bdf0:s1 -> Node0x469aed0;
	Node0x469aed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%65:\l65:                                               \l  ret void\l}"];
}
