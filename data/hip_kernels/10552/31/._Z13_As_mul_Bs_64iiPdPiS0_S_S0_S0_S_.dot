digraph "CFG for '_Z13_As_mul_Bs_64iiPdPiS0_S_S0_S0_S_' function" {
	label="CFG for '_Z13_As_mul_Bs_64iiPdPiS0_S_S0_S0_S_' function";

	Node0x474c700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !7\l  %20 = mul i32 %11, %16\l  %21 = add i32 %20, %10\l  %22 = icmp slt i32 %21, %1\l  br i1 %22, label %23, label %93\l|{<s0>T|<s1>F}}"];
	Node0x474c700:s0 -> Node0x474f4a0;
	Node0x474c700:s1 -> Node0x474f530;
	Node0x474f4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%23:\l23:                                               \l  %24 = udiv i32 %19, %16\l  %25 = mul i32 %24, %16\l  %26 = icmp ugt i32 %19, %25\l  %27 = zext i1 %26 to i32\l  %28 = add i32 %24, %27\l  %29 = mul i32 %28, %16\l  %30 = icmp sgt i32 %0, 0\l  br label %31\l}"];
	Node0x474f4a0 -> Node0x474fa40;
	Node0x474fa40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%31:\l31:                                               \l  %32 = phi i32 [ %21, %23 ], [ %91, %90 ]\l  %33 = mul nsw i32 %32, %0\l  %34 = add nsw i32 %33, %0\l  br i1 %30, label %35, label %41\l|{<s0>T|<s1>F}}"];
	Node0x474fa40:s0 -> Node0x474eff0;
	Node0x474fa40:s1 -> Node0x474ff50;
	Node0x474eff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%35:\l35:                                               \l  %36 = phi i32 [ %39, %35 ], [ %33, %31 ]\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds double, double addrspace(1)* %8, i64 %37\l  store double 0.000000e+00, double addrspace(1)* %38, align 8, !tbaa !16\l  %39 = add nsw i32 %36, 1\l  %40 = icmp slt i32 %39, %34\l  br i1 %40, label %35, label %41, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x474eff0:s0 -> Node0x474eff0;
	Node0x474eff0:s1 -> Node0x474ff50;
	Node0x474ff50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%41:\l41:                                               \l  %42 = sext i32 %32 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %42\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !22, !amdgpu.noclobber\l... !6\l  %45 = add nsw i32 %32, 1\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !22, !amdgpu.noclobber\l... !6\l  %49 = add nsw i32 %48, -1\l  %50 = icmp slt i32 %44, %48\l  br i1 %50, label %51, label %90\l|{<s0>T|<s1>F}}"];
	Node0x474ff50:s0 -> Node0x4752400;
	Node0x474ff50:s1 -> Node0x474fb30;
	Node0x4752400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%51:\l51:                                               \l  %52 = add nsw i32 %44, -1\l  %53 = add nsw i32 %33, -1\l  br label %54\l}"];
	Node0x4752400 -> Node0x4752660;
	Node0x4752660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%54:\l54:                                               \l  %55 = phi i32 [ %52, %51 ], [ %88, %87 ]\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %56\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !22, !amdgpu.noclobber\l... !6\l  %59 = add nsw i32 %58, -1\l  %60 = getelementptr inbounds double, double addrspace(1)* %5, i64 %56\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !16\l  %62 = sext i32 %59 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %62\l  %64 = bitcast i32 addrspace(1)* %63 to \<2 x i32\> addrspace(1)*\l  %65 = load \<2 x i32\>, \<2 x i32\> addrspace(1)* %64, align 4, !tbaa !22\l  %66 = extractelement \<2 x i32\> %65, i64 1\l  %67 = add nsw i32 %66, -1\l  %68 = extractelement \<2 x i32\> %65, i64 0\l  %69 = icmp slt i32 %68, %66\l  br i1 %69, label %70, label %87\l|{<s0>T|<s1>F}}"];
	Node0x4752660:s0 -> Node0x474fe30;
	Node0x4752660:s1 -> Node0x4752750;
	Node0x474fe30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%70:\l70:                                               \l  %71 = add nsw i32 %68, -1\l  br label %72\l}"];
	Node0x474fe30 -> Node0x4754070;
	Node0x4754070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  %73 = phi i32 [ %85, %72 ], [ %71, %70 ]\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %74\l  %76 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !22, !amdgpu.noclobber\l... !6\l  %77 = getelementptr inbounds double, double addrspace(1)* %2, i64 %74\l  %78 = load double, double addrspace(1)* %77, align 8, !tbaa !16\l  %79 = fmul contract double %61, %78\l  %80 = add i32 %53, %76\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds double, double addrspace(1)* %8, i64 %81\l  %83 = load double, double addrspace(1)* %82, align 8, !tbaa !16\l  %84 = fadd contract double %83, %79\l  store double %84, double addrspace(1)* %82, align 8, !tbaa !16\l  %85 = add nsw i32 %73, 1\l  %86 = icmp slt i32 %85, %67\l  br i1 %86, label %72, label %87, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4754070:s0 -> Node0x4754070;
	Node0x4754070:s1 -> Node0x4752750;
	Node0x4752750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%87:\l87:                                               \l  %88 = add nsw i32 %55, 1\l  %89 = icmp slt i32 %88, %49\l  br i1 %89, label %54, label %90, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x4752750:s0 -> Node0x4752660;
	Node0x4752750:s1 -> Node0x474fb30;
	Node0x474fb30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%90:\l90:                                               \l  %91 = add i32 %29, %32\l  %92 = icmp slt i32 %91, %1\l  br i1 %92, label %31, label %93, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x474fb30:s0 -> Node0x474fa40;
	Node0x474fb30:s1 -> Node0x474f530;
	Node0x474f530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%93:\l93:                                               \l  ret void\l}"];
}
