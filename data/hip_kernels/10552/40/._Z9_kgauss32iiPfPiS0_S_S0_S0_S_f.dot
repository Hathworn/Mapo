digraph "CFG for '_Z9_kgauss32iiPfPiS0_S_S0_S0_S_f' function" {
	label="CFG for '_Z9_kgauss32iiPfPiS0_S_S0_S0_S_f' function";

	Node0x51ff2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %19 = bitcast i8 addrspace(4)* %18 to i32 addrspace(4)*\l  %20 = load i32, i32 addrspace(4)* %19, align 4, !tbaa !7\l  %21 = mul i32 %12, %17\l  %22 = add i32 %21, %11\l  %23 = mul nsw i32 %1, %0\l  %24 = icmp slt i32 %22, %23\l  br i1 %24, label %25, label %137\l|{<s0>T|<s1>F}}"];
	Node0x51ff2e0:s0 -> Node0x5202140;
	Node0x51ff2e0:s1 -> Node0x52021d0;
	Node0x5202140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%25:\l25:                                               \l  %26 = fneg contract float %9\l  %27 = fpext float %26 to double\l  %28 = udiv i32 %20, %17\l  %29 = mul i32 %28, %17\l  %30 = icmp ugt i32 %20, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = mul i32 %32, %17\l  br label %34\l}"];
	Node0x5202140 -> Node0x5201b90;
	Node0x5201b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%34:\l34:                                               \l  %35 = phi i32 [ %22, %25 ], [ %135, %107 ]\l  %36 = freeze i32 %35\l  %37 = freeze i32 %0\l  %38 = sdiv i32 %36, %37\l  %39 = mul i32 %38, %37\l  %40 = sub i32 %36, %39\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %41\l  %43 = bitcast i32 addrspace(1)* %42 to \<2 x i32\> addrspace(1)*\l  %44 = load \<2 x i32\>, \<2 x i32\> addrspace(1)* %43, align 4, !tbaa !16\l  %45 = extractelement \<2 x i32\> %44, i64 1\l  %46 = add nsw i32 %45, -1\l  %47 = sext i32 %38 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %47\l  %49 = bitcast i32 addrspace(1)* %48 to \<2 x i32\> addrspace(1)*\l  %50 = load \<2 x i32\>, \<2 x i32\> addrspace(1)* %49, align 4, !tbaa !16\l  %51 = extractelement \<2 x i32\> %50, i64 1\l  %52 = add nsw i32 %51, -1\l  %53 = extractelement \<2 x i32\> %44, i64 0\l  %54 = icmp slt i32 %53, %45\l  %55 = extractelement \<2 x i32\> %50, i64 0\l  %56 = icmp slt i32 %55, %51\l  %57 = select i1 %54, i1 true, i1 %56\l  br i1 %57, label %58, label %107\l|{<s0>T|<s1>F}}"];
	Node0x5201b90:s0 -> Node0x52043f0;
	Node0x5201b90:s1 -> Node0x5202920;
	Node0x52043f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%58:\l58:                                               \l  %59 = add nsw i32 %55, -1\l  %60 = add nsw i32 %53, -1\l  br label %61\l}"];
	Node0x52043f0 -> Node0x5204650;
	Node0x5204650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = phi i1 [ %105, %97 ], [ %56, %58 ]\l  %63 = phi i1 [ %104, %97 ], [ %54, %58 ]\l  %64 = phi double [ %103, %97 ], [ 0.000000e+00, %58 ]\l  %65 = phi i32 [ %99, %97 ], [ %60, %58 ]\l  %66 = phi i32 [ %98, %97 ], [ %59, %58 ]\l  br i1 %63, label %67, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5204650:s0 -> Node0x5205980;
	Node0x5204650:s1 -> Node0x5205a10;
	Node0x5205980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%67:\l67:                                               \l  %68 = sext i32 %65 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  br label %71\l}"];
	Node0x5205980 -> Node0x5205a10;
	Node0x5205a10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = phi i32 [ %70, %67 ], [ 2147483647, %61 ]\l  br i1 %62, label %73, label %77\l|{<s0>T|<s1>F}}"];
	Node0x5205a10:s0 -> Node0x5206440;
	Node0x5205a10:s1 -> Node0x5206490;
	Node0x5206440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%73:\l73:                                               \l  %74 = sext i32 %66 to i64\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %74\l  %76 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  br label %77\l}"];
	Node0x5206440 -> Node0x5206490;
	Node0x5206490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi i32 [ %76, %73 ], [ 2147483647, %71 ]\l  %79 = icmp slt i32 %78, %72\l  br i1 %79, label %80, label %85\l|{<s0>T|<s1>F}}"];
	Node0x5206490:s0 -> Node0x5206930;
	Node0x5206490:s1 -> Node0x5206980;
	Node0x5206930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%80:\l80:                                               \l  %81 = add nsw i32 %66, 1\l  %82 = sext i32 %66 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %5, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !20\l  br label %97\l}"];
	Node0x5206930 -> Node0x5204740;
	Node0x5206980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%85:\l85:                                               \l  %86 = icmp slt i32 %72, %78\l  %87 = add nsw i32 %65, 1\l  %88 = sext i32 %65 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %2, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !20\l  br i1 %86, label %97, label %91\l|{<s0>T|<s1>F}}"];
	Node0x5206980:s0 -> Node0x5204740;
	Node0x5206980:s1 -> Node0x5207720;
	Node0x5207720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%91:\l91:                                               \l  %92 = add nsw i32 %66, 1\l  %93 = sext i32 %66 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %5, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !20\l  %96 = fsub contract float %90, %95\l  br label %97\l}"];
	Node0x5207720 -> Node0x5204740;
	Node0x5204740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  %98 = phi i32 [ %81, %80 ], [ %92, %91 ], [ %66, %85 ]\l  %99 = phi i32 [ %65, %80 ], [ %87, %91 ], [ %87, %85 ]\l  %100 = phi contract float [ %84, %80 ], [ %96, %91 ], [ %90, %85 ]\l  %101 = fpext float %100 to double\l  %102 = fmul contract double %101, %101\l  %103 = fadd contract double %64, %102\l  %104 = icmp slt i32 %99, %46\l  %105 = icmp slt i32 %98, %52\l  %106 = select i1 %104, i1 true, i1 %105\l  br i1 %106, label %61, label %107, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5204740:s0 -> Node0x5204650;
	Node0x5204740:s1 -> Node0x5202920;
	Node0x5202920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%107:\l107:                                              \l  %108 = phi double [ 0.000000e+00, %34 ], [ %103, %97 ]\l  %109 = fmul contract double %108, %27\l  %110 = fmul double %109, 0x3FF71547652B82FE\l  %111 = tail call double @llvm.rint.f64(double %110)\l  %112 = fneg double %111\l  %113 = tail call double @llvm.fma.f64(double %112, double\l... 0x3FE62E42FEFA39EF, double %109)\l  %114 = tail call double @llvm.fma.f64(double %112, double\l... 0x3C7ABC9E3B39803F, double %113)\l  %115 = tail call double @llvm.fma.f64(double %114, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %116 = tail call double @llvm.fma.f64(double %114, double %115, double\l... 0x3EC71DEE623FDE64)\l  %117 = tail call double @llvm.fma.f64(double %114, double %116, double\l... 0x3EFA01997C89E6B0)\l  %118 = tail call double @llvm.fma.f64(double %114, double %117, double\l... 0x3F2A01A014761F6E)\l  %119 = tail call double @llvm.fma.f64(double %114, double %118, double\l... 0x3F56C16C1852B7B0)\l  %120 = tail call double @llvm.fma.f64(double %114, double %119, double\l... 0x3F81111111122322)\l  %121 = tail call double @llvm.fma.f64(double %114, double %120, double\l... 0x3FA55555555502A1)\l  %122 = tail call double @llvm.fma.f64(double %114, double %121, double\l... 0x3FC5555555555511)\l  %123 = tail call double @llvm.fma.f64(double %114, double %122, double\l... 0x3FE000000000000B)\l  %124 = tail call double @llvm.fma.f64(double %114, double %123, double\l... 1.000000e+00)\l  %125 = tail call double @llvm.fma.f64(double %114, double %124, double\l... 1.000000e+00)\l  %126 = fptosi double %111 to i32\l  %127 = tail call double @llvm.amdgcn.ldexp.f64(double %125, i32 %126)\l  %128 = fcmp ogt double %109, 1.024000e+03\l  %129 = select i1 %128, double 0x7FF0000000000000, double %127\l  %130 = fcmp olt double %109, -1.075000e+03\l  %131 = select i1 %130, double 0.000000e+00, double %129\l  %132 = fptrunc double %131 to float\l  %133 = sext i32 %35 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %8, i64 %133\l  store float %132, float addrspace(1)* %134, align 4, !tbaa !20\l  %135 = add i32 %33, %35\l  %136 = icmp slt i32 %135, %23\l  br i1 %136, label %34, label %137, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5202920:s0 -> Node0x5201b90;
	Node0x5202920:s1 -> Node0x52021d0;
	Node0x52021d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%137:\l137:                                              \l  ret void\l}"];
}
