digraph "CFG for '_Z9_logpforwiiPf' function" {
	label="CFG for '_Z9_logpforwiiPf' function";

	Node0x5488420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = mul i32 %5, %10\l  %15 = add i32 %14, %4\l  %16 = icmp slt i32 %15, %1\l  br i1 %16, label %17, label %91\l|{<s0>T|<s1>F}}"];
	Node0x5488420:s0 -> Node0x5489180;
	Node0x5488420:s1 -> Node0x5489d40;
	Node0x5489180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%17:\l17:                                               \l  %18 = udiv i32 %13, %10\l  %19 = mul i32 %18, %10\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %10\l  %24 = icmp sgt i32 %0, 0\l  br label %25\l}"];
	Node0x5489180 -> Node0x548ac00;
	Node0x548ac00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%25:\l25:                                               \l  %26 = phi i32 [ %15, %17 ], [ %81, %80 ]\l  %27 = mul nsw i32 %26, %0\l  %28 = add nsw i32 %27, %0\l  br i1 %24, label %31, label %29\l|{<s0>T|<s1>F}}"];
	Node0x548ac00:s0 -> Node0x548af50;
	Node0x548ac00:s1 -> Node0x548afe0;
	Node0x548afe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%29:\l29:                                               \l  %30 = phi float [ 0xFFF0000000000000, %25 ], [ %38, %31 ]\l  br i1 %24, label %56, label %41\l|{<s0>T|<s1>F}}"];
	Node0x548afe0:s0 -> Node0x548bc50;
	Node0x548afe0:s1 -> Node0x548bce0;
	Node0x548af50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = phi i32 [ %39, %31 ], [ %27, %25 ]\l  %33 = phi float [ %38, %31 ], [ 0xFFF0000000000000, %25 ]\l  %34 = sext i32 %32 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %37 = fcmp contract ogt float %36, %33\l  %38 = select i1 %37, float %36, float %33\l  %39 = add nsw i32 %32, 1\l  %40 = icmp slt i32 %39, %28\l  br i1 %40, label %31, label %29, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x548af50:s0 -> Node0x548af50;
	Node0x548af50:s1 -> Node0x548afe0;
	Node0x548bce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = phi float [ 0.000000e+00, %29 ], [ %77, %56 ]\l  %43 = tail call i1 @llvm.amdgcn.class.f32(float %42, i32 144)\l  %44 = select i1 %43, float 0x41F0000000000000, float 1.000000e+00\l  %45 = fmul float %42, %44\l  %46 = tail call float @llvm.log2.f32(float %45)\l  %47 = fmul float %46, 0x3FE62E42E0000000\l  %48 = tail call i1 @llvm.amdgcn.class.f32(float %46, i32 519)\l  %49 = fneg float %47\l  %50 = tail call float @llvm.fma.f32(float %46, float 0x3FE62E42E0000000,\l... float %49)\l  %51 = tail call float @llvm.fma.f32(float %46, float 0x3E6EFA39E0000000,\l... float %50)\l  %52 = fadd float %47, %51\l  %53 = select i1 %48, float %46, float %52\l  %54 = select i1 %43, float 0x40362E4300000000, float 0.000000e+00\l  %55 = fsub float %53, %54\l  br i1 %24, label %83, label %80\l|{<s0>T|<s1>F}}"];
	Node0x548bce0:s0 -> Node0x548d7e0;
	Node0x548bce0:s1 -> Node0x548acf0;
	Node0x548bc50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  %57 = phi i32 [ %78, %56 ], [ %27, %29 ]\l  %58 = phi float [ %77, %56 ], [ 0.000000e+00, %29 ]\l  %59 = sext i32 %57 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %2, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !16\l  %62 = fsub contract float %61, %30\l  store float %62, float addrspace(1)* %60, align 4, !tbaa !16\l  %63 = fmul float %62, 0x3FF7154760000000\l  %64 = tail call float @llvm.rint.f32(float %63)\l  %65 = fcmp ogt float %62, 0x40562E4300000000\l  %66 = fcmp olt float %62, 0xC059D1DA00000000\l  %67 = fneg float %63\l  %68 = tail call float @llvm.fma.f32(float %62, float 0x3FF7154760000000,\l... float %67)\l  %69 = tail call float @llvm.fma.f32(float %62, float 0x3E54AE0BE0000000,\l... float %68)\l  %70 = fsub float %63, %64\l  %71 = fadd float %69, %70\l  %72 = tail call float @llvm.exp2.f32(float %71)\l  %73 = fptosi float %64 to i32\l  %74 = tail call float @llvm.amdgcn.ldexp.f32(float %72, i32 %73)\l  %75 = select i1 %66, float 0.000000e+00, float %74\l  %76 = select i1 %65, float 0x7FF0000000000000, float %75\l  %77 = fadd contract float %58, %76\l  %78 = add nsw i32 %57, 1\l  %79 = icmp slt i32 %78, %28\l  br i1 %79, label %56, label %41, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x548bc50:s0 -> Node0x548bc50;
	Node0x548bc50:s1 -> Node0x548bce0;
	Node0x548acf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%80:\l80:                                               \l  %81 = add i32 %23, %26\l  %82 = icmp slt i32 %81, %1\l  br i1 %82, label %25, label %91, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x548acf0:s0 -> Node0x548ac00;
	Node0x548acf0:s1 -> Node0x5489d40;
	Node0x548d7e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  %84 = phi i32 [ %89, %83 ], [ %27, %41 ]\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %2, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !16\l  %88 = fsub contract float %87, %55\l  store float %88, float addrspace(1)* %86, align 4, !tbaa !16\l  %89 = add nsw i32 %84, 1\l  %90 = icmp slt i32 %89, %28\l  br i1 %90, label %83, label %80, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x548d7e0:s0 -> Node0x548d7e0;
	Node0x548d7e0:s1 -> Node0x548acf0;
	Node0x5489d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%91:\l91:                                               \l  ret void\l}"];
}
