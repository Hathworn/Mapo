digraph "CFG for '_Z12_kgauss32mapiiPfS_S_f' function" {
	label="CFG for '_Z12_kgauss32mapiiPfS_S_f' function";

	Node0x5160cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = mul i32 %8, %13\l  %18 = add i32 %17, %7\l  %19 = mul nsw i32 %1, %0\l  %20 = icmp slt i32 %18, %19\l  br i1 %20, label %21, label %65\l|{<s0>T|<s1>F}}"];
	Node0x5160cb0:s0 -> Node0x5162f60;
	Node0x5160cb0:s1 -> Node0x5162ff0;
	Node0x5162f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%21:\l21:                                               \l  %22 = fneg contract float %5\l  %23 = udiv i32 %16, %13\l  %24 = mul i32 %23, %13\l  %25 = icmp ugt i32 %16, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %13\l  br label %29\l}"];
	Node0x5162f60 -> Node0x51634e0;
	Node0x51634e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %18, %21 ], [ %63, %29 ]\l  %31 = freeze i32 %30\l  %32 = freeze i32 %0\l  %33 = sdiv i32 %31, %32\l  %34 = mul i32 %33, %32\l  %35 = sub i32 %31, %34\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !16\l  %39 = sext i32 %33 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %3, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16\l  %42 = fadd contract float %38, %41\l  %43 = sext i32 %30 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %4, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !16\l  %46 = fmul contract float %45, 2.000000e+00\l  %47 = fsub contract float %42, %46\l  %48 = fmul contract float %47, %22\l  %49 = fmul float %48, 0x3FF7154760000000\l  %50 = tail call float @llvm.rint.f32(float %49)\l  %51 = fcmp ogt float %48, 0x40562E4300000000\l  %52 = fcmp olt float %48, 0xC059D1DA00000000\l  %53 = fneg float %49\l  %54 = tail call float @llvm.fma.f32(float %48, float 0x3FF7154760000000,\l... float %53)\l  %55 = tail call float @llvm.fma.f32(float %48, float 0x3E54AE0BE0000000,\l... float %54)\l  %56 = fsub float %49, %50\l  %57 = fadd float %55, %56\l  %58 = tail call float @llvm.exp2.f32(float %57)\l  %59 = fptosi float %50 to i32\l  %60 = tail call float @llvm.amdgcn.ldexp.f32(float %58, i32 %59)\l  %61 = select i1 %52, float 0.000000e+00, float %60\l  %62 = select i1 %51, float 0x7FF0000000000000, float %61\l  store float %62, float addrspace(1)* %44, align 4, !tbaa !16\l  %63 = add i32 %28, %30\l  %64 = icmp slt i32 %63, %19\l  br i1 %64, label %29, label %65, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x51634e0:s0 -> Node0x51634e0;
	Node0x51634e0:s1 -> Node0x5162ff0;
	Node0x5162ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%65:\l65:                                               \l  ret void\l}"];
}
