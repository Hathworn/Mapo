digraph "CFG for '_Z10_adagrad32idPfS_' function" {
	label="CFG for '_Z10_adagrad32idPfS_' function";

	Node0x4a39bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %64\l|{<s0>T|<s1>F}}"];
	Node0x4a39bd0:s0 -> Node0x4a39c20;
	Node0x4a39bd0:s1 -> Node0x4a3bea0;
	Node0x4a39c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  %19 = udiv i32 %14, %11\l  %20 = mul i32 %19, %11\l  %21 = icmp ugt i32 %14, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %11\l  br label %25\l}"];
	Node0x4a39c20 -> Node0x4a3c320;
	Node0x4a3c320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %16, %18 ], [ %62, %25 ]\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %3, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16\l  %30 = fmul contract float %29, %29\l  %31 = getelementptr inbounds float, float addrspace(1)* %2, i64 %27\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %33 = fadd contract float %32, %30\l  store float %33, float addrspace(1)* %31, align 4, !tbaa !16\l  %34 = fpext float %33 to double\l  %35 = fadd contract double %34, %1\l  %36 = fcmp olt double %35, 0x1000000000000000\l  %37 = select i1 %36, double 0x4FF0000000000000, double 1.000000e+00\l  %38 = fmul double %35, %37\l  %39 = tail call double @llvm.amdgcn.rsq.f64(double %38)\l  %40 = fmul double %38, %39\l  %41 = fmul double %39, 5.000000e-01\l  %42 = fneg double %41\l  %43 = tail call double @llvm.fma.f64(double %42, double %40, double\l... 5.000000e-01)\l  %44 = tail call double @llvm.fma.f64(double %41, double %43, double %41)\l  %45 = tail call double @llvm.fma.f64(double %40, double %43, double %40)\l  %46 = fneg double %45\l  %47 = tail call double @llvm.fma.f64(double %46, double %45, double %38)\l  %48 = tail call double @llvm.fma.f64(double %47, double %44, double %45)\l  %49 = fneg double %48\l  %50 = tail call double @llvm.fma.f64(double %49, double %48, double %38)\l  %51 = tail call double @llvm.fma.f64(double %50, double %44, double %48)\l  %52 = select i1 %36, double 0x37F0000000000000, double 1.000000e+00\l  %53 = fmul double %52, %51\l  %54 = fcmp oeq double %38, 0.000000e+00\l  %55 = fcmp oeq double %38, 0x7FF0000000000000\l  %56 = or i1 %54, %55\l  %57 = select i1 %56, double %38, double %53\l  %58 = load float, float addrspace(1)* %28, align 4, !tbaa !16\l  %59 = fpext float %58 to double\l  %60 = fdiv contract double %59, %57\l  %61 = fptrunc double %60 to float\l  store float %61, float addrspace(1)* %28, align 4, !tbaa !16\l  %62 = add i32 %24, %26\l  %63 = icmp slt i32 %62, %0\l  br i1 %63, label %25, label %64, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4a3c320:s0 -> Node0x4a3c320;
	Node0x4a3c320:s1 -> Node0x4a3bea0;
	Node0x4a3bea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%64:\l64:                                               \l  ret void\l}"];
}
