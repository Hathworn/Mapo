digraph "CFG for '_Z11_kpolymap64iPddd' function" {
	label="CFG for '_Z11_kpolymap64iPddd' function";

	Node0x5dca1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %239\l|{<s0>T|<s1>F}}"];
	Node0x5dca1a0:s0 -> Node0x5dca1f0;
	Node0x5dca1a0:s1 -> Node0x5dcc470;
	Node0x5dca1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  %19 = tail call double @llvm.fabs.f64(double %3)\l  %20 = tail call double @llvm.trunc.f64(double %19)\l  %21 = fcmp oeq double %19, %20\l  %22 = zext i1 %21 to i32\l  %23 = fmul double %20, 5.000000e-01\l  %24 = tail call double @llvm.amdgcn.fract.f64(double %23)\l  %25 = tail call i1 @llvm.amdgcn.class.f64(double %23, i32 516)\l  %26 = select i1 %25, double 0.000000e+00, double %24\l  %27 = fcmp oeq double %26, 0.000000e+00\l  %28 = and i1 %21, %27\l  %29 = zext i1 %28 to i32\l  %30 = add nuw nsw i32 %29, %22\l  %31 = icmp eq i32 %30, 1\l  %32 = icmp ne i32 %30, 0\l  %33 = fcmp oeq double %19, 0x7FF0000000000000\l  %34 = bitcast double %3 to \<2 x i32\>\l  %35 = extractelement \<2 x i32\> %34, i64 1\l  %36 = fcmp olt double %3, 0.000000e+00\l  %37 = fcmp oeq double %3, 0.000000e+00\l  %38 = udiv i32 %14, %11\l  %39 = mul i32 %38, %11\l  %40 = icmp ugt i32 %14, %39\l  %41 = zext i1 %40 to i32\l  %42 = add i32 %38, %41\l  %43 = mul i32 %42, %11\l  br label %44\l}"];
	Node0x5dca1f0 -> Node0x5dcebf0;
	Node0x5dcebf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi i32 [ %16, %18 ], [ %237, %44 ]\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds double, double addrspace(1)* %1, i64 %46\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !16\l  %49 = fadd contract double %48, %2\l  %50 = tail call double @llvm.fabs.f64(double %49)\l  %51 = tail call double @llvm.amdgcn.frexp.mant.f64(double %50)\l  %52 = fcmp olt double %51, 0x3FE5555555555555\l  %53 = zext i1 %52 to i32\l  %54 = tail call double @llvm.amdgcn.ldexp.f64(double %51, i32 %53)\l  %55 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %50)\l  %56 = sub nsw i32 %55, %53\l  %57 = fadd double %54, -1.000000e+00\l  %58 = fadd double %54, 1.000000e+00\l  %59 = fadd double %58, -1.000000e+00\l  %60 = fsub double %54, %59\l  %61 = tail call double @llvm.amdgcn.rcp.f64(double %58)\l  %62 = fneg double %58\l  %63 = tail call double @llvm.fma.f64(double %62, double %61, double\l... 1.000000e+00)\l  %64 = tail call double @llvm.fma.f64(double %63, double %61, double %61)\l  %65 = tail call double @llvm.fma.f64(double %62, double %64, double\l... 1.000000e+00)\l  %66 = tail call double @llvm.fma.f64(double %65, double %64, double %64)\l  %67 = fmul double %57, %66\l  %68 = fmul double %58, %67\l  %69 = fneg double %68\l  %70 = tail call double @llvm.fma.f64(double %67, double %58, double %69)\l  %71 = tail call double @llvm.fma.f64(double %67, double %60, double %70)\l  %72 = fadd double %68, %71\l  %73 = fsub double %72, %68\l  %74 = fsub double %71, %73\l  %75 = fsub double %57, %72\l  %76 = fsub double %57, %75\l  %77 = fsub double %76, %72\l  %78 = fsub double %77, %74\l  %79 = fadd double %75, %78\l  %80 = fmul double %66, %79\l  %81 = fadd double %67, %80\l  %82 = fsub double %81, %67\l  %83 = fsub double %80, %82\l  %84 = fmul double %81, %81\l  %85 = fneg double %84\l  %86 = tail call double @llvm.fma.f64(double %81, double %81, double %85)\l  %87 = fmul double %83, 2.000000e+00\l  %88 = tail call double @llvm.fma.f64(double %81, double %87, double %86)\l  %89 = fadd double %84, %88\l  %90 = fsub double %89, %84\l  %91 = fsub double %88, %90\l  %92 = tail call double @llvm.fma.f64(double %89, double 0x3FBDEE674222DE17,\l... double 0x3FBA6564968915A9)\l  %93 = tail call double @llvm.fma.f64(double %89, double %92, double\l... 0x3FBE25E43ABE935A)\l  %94 = tail call double @llvm.fma.f64(double %89, double %93, double\l... 0x3FC110EF47E6C9C2)\l  %95 = tail call double @llvm.fma.f64(double %89, double %94, double\l... 0x3FC3B13BCFA74449)\l  %96 = tail call double @llvm.fma.f64(double %89, double %95, double\l... 0x3FC745D171BF3C30)\l  %97 = tail call double @llvm.fma.f64(double %89, double %96, double\l... 0x3FCC71C71C7792CE)\l  %98 = tail call double @llvm.fma.f64(double %89, double %97, double\l... 0x3FD24924924920DA)\l  %99 = tail call double @llvm.fma.f64(double %89, double %98, double\l... 0x3FD999999999999C)\l  %100 = sitofp i32 %56 to double\l  %101 = fmul double %100, 0x3FE62E42FEFA39EF\l  %102 = fneg double %101\l  %103 = tail call double @llvm.fma.f64(double %100, double\l... 0x3FE62E42FEFA39EF, double %102)\l  %104 = tail call double @llvm.fma.f64(double %100, double\l... 0x3C7ABC9E3B39803F, double %103)\l  %105 = fadd double %101, %104\l  %106 = fsub double %105, %101\l  %107 = fsub double %104, %106\l  %108 = tail call double @llvm.amdgcn.ldexp.f64(double %81, i32 1)\l  %109 = tail call double @llvm.amdgcn.ldexp.f64(double %83, i32 1)\l  %110 = fmul double %81, %89\l  %111 = fneg double %110\l  %112 = tail call double @llvm.fma.f64(double %89, double %81, double %111)\l  %113 = tail call double @llvm.fma.f64(double %89, double %83, double %112)\l  %114 = tail call double @llvm.fma.f64(double %91, double %81, double %113)\l  %115 = fadd double %110, %114\l  %116 = fsub double %115, %110\l  %117 = fsub double %114, %116\l  %118 = fmul double %89, %99\l  %119 = fneg double %118\l  %120 = tail call double @llvm.fma.f64(double %89, double %99, double %119)\l  %121 = tail call double @llvm.fma.f64(double %91, double %99, double %120)\l  %122 = fadd double %118, %121\l  %123 = fsub double %122, %118\l  %124 = fsub double %121, %123\l  %125 = fadd double %122, 0x3FE5555555555555\l  %126 = fadd double %125, 0xBFE5555555555555\l  %127 = fsub double %122, %126\l  %128 = fadd double %124, 0x3C8543B0D5DF274D\l  %129 = fadd double %128, %127\l  %130 = fadd double %125, %129\l  %131 = fsub double %130, %125\l  %132 = fsub double %129, %131\l  %133 = fmul double %115, %130\l  %134 = fneg double %133\l  %135 = tail call double @llvm.fma.f64(double %115, double %130, double %134)\l  %136 = tail call double @llvm.fma.f64(double %115, double %132, double %135)\l  %137 = tail call double @llvm.fma.f64(double %117, double %130, double %136)\l  %138 = fadd double %133, %137\l  %139 = fsub double %138, %133\l  %140 = fsub double %137, %139\l  %141 = fadd double %108, %138\l  %142 = fsub double %141, %108\l  %143 = fsub double %138, %142\l  %144 = fadd double %109, %140\l  %145 = fadd double %144, %143\l  %146 = fadd double %141, %145\l  %147 = fsub double %146, %141\l  %148 = fsub double %145, %147\l  %149 = fadd double %105, %146\l  %150 = fsub double %149, %105\l  %151 = fsub double %149, %150\l  %152 = fsub double %105, %151\l  %153 = fsub double %146, %150\l  %154 = fadd double %153, %152\l  %155 = fadd double %107, %148\l  %156 = fsub double %155, %107\l  %157 = fsub double %155, %156\l  %158 = fsub double %107, %157\l  %159 = fsub double %148, %156\l  %160 = fadd double %159, %158\l  %161 = fadd double %155, %154\l  %162 = fadd double %149, %161\l  %163 = fsub double %162, %149\l  %164 = fsub double %161, %163\l  %165 = fadd double %160, %164\l  %166 = fadd double %162, %165\l  %167 = fsub double %166, %162\l  %168 = fsub double %165, %167\l  %169 = fmul double %166, %3\l  %170 = fneg double %169\l  %171 = tail call double @llvm.fma.f64(double %3, double %166, double %170)\l  %172 = tail call double @llvm.fma.f64(double %3, double %168, double %171)\l  %173 = fadd double %169, %172\l  %174 = fsub double %173, %169\l  %175 = fsub double %172, %174\l  %176 = tail call double @llvm.fabs.f64(double %169) #3\l  %177 = fcmp oeq double %176, 0x7FF0000000000000\l  %178 = select i1 %177, double %169, double %173\l  %179 = tail call double @llvm.fabs.f64(double %178) #3\l  %180 = fcmp oeq double %179, 0x7FF0000000000000\l  %181 = select i1 %180, double 0.000000e+00, double %175\l  %182 = fmul double %178, 0x3FF71547652B82FE\l  %183 = tail call double @llvm.rint.f64(double %182)\l  %184 = fneg double %183\l  %185 = tail call double @llvm.fma.f64(double %184, double\l... 0x3FE62E42FEFA39EF, double %178)\l  %186 = tail call double @llvm.fma.f64(double %184, double\l... 0x3C7ABC9E3B39803F, double %185)\l  %187 = tail call double @llvm.fma.f64(double %186, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %188 = tail call double @llvm.fma.f64(double %186, double %187, double\l... 0x3EC71DEE623FDE64)\l  %189 = tail call double @llvm.fma.f64(double %186, double %188, double\l... 0x3EFA01997C89E6B0)\l  %190 = tail call double @llvm.fma.f64(double %186, double %189, double\l... 0x3F2A01A014761F6E)\l  %191 = tail call double @llvm.fma.f64(double %186, double %190, double\l... 0x3F56C16C1852B7B0)\l  %192 = tail call double @llvm.fma.f64(double %186, double %191, double\l... 0x3F81111111122322)\l  %193 = tail call double @llvm.fma.f64(double %186, double %192, double\l... 0x3FA55555555502A1)\l  %194 = tail call double @llvm.fma.f64(double %186, double %193, double\l... 0x3FC5555555555511)\l  %195 = tail call double @llvm.fma.f64(double %186, double %194, double\l... 0x3FE000000000000B)\l  %196 = tail call double @llvm.fma.f64(double %186, double %195, double\l... 1.000000e+00)\l  %197 = tail call double @llvm.fma.f64(double %186, double %196, double\l... 1.000000e+00)\l  %198 = fptosi double %183 to i32\l  %199 = tail call double @llvm.amdgcn.ldexp.f64(double %197, i32 %198)\l  %200 = fcmp ogt double %178, 1.024000e+03\l  %201 = select i1 %200, double 0x7FF0000000000000, double %199\l  %202 = fcmp olt double %178, -1.075000e+03\l  %203 = select i1 %202, double 0.000000e+00, double %201\l  %204 = tail call double @llvm.fma.f64(double %203, double %181, double %203)\l  %205 = tail call double @llvm.fabs.f64(double %203) #3\l  %206 = fcmp oeq double %205, 0x7FF0000000000000\l  %207 = select i1 %206, double %203, double %204\l  %208 = fcmp olt double %49, 0.000000e+00\l  %209 = and i1 %31, %208\l  %210 = select i1 %209, double -0.000000e+00, double 0.000000e+00\l  %211 = tail call double @llvm.copysign.f64(double %207, double %210)\l  %212 = fcmp uge double %49, 0.000000e+00\l  %213 = select i1 %212, i1 true, i1 %32\l  %214 = select i1 %213, double %211, double 0x7FF8000000000000\l  %215 = fcmp oeq double %50, 1.000000e+00\l  %216 = fadd double %50, -1.000000e+00\l  %217 = bitcast double %216 to \<2 x i32\>\l  %218 = extractelement \<2 x i32\> %217, i64 1\l  %219 = xor i32 %218, %35\l  %220 = icmp sgt i32 %219, -1\l  %221 = select i1 %220, double 0x7FF0000000000000, double 0.000000e+00\l  %222 = select i1 %215, double %50, double %221\l  %223 = select i1 %33, double %222, double %214\l  %224 = fcmp oeq double %50, 0x7FF0000000000000\l  %225 = fcmp oeq double %49, 0.000000e+00\l  %226 = or i1 %225, %224\l  %227 = xor i1 %36, %225\l  %228 = select i1 %227, double 0.000000e+00, double 0x7FF0000000000000\l  %229 = select i1 %31, double %49, double 0.000000e+00\l  %230 = tail call double @llvm.copysign.f64(double %228, double %229)\l  %231 = select i1 %226, double %230, double %223\l  %232 = fcmp uno double %49, %3\l  %233 = select i1 %232, double 0x7FF8000000000000, double %231\l  %234 = fcmp oeq double %49, 1.000000e+00\l  %235 = or i1 %37, %234\l  %236 = select i1 %235, double 1.000000e+00, double %233\l  store double %236, double addrspace(1)* %47, align 8, !tbaa !16\l  %237 = add i32 %43, %45\l  %238 = icmp slt i32 %237, %0\l  br i1 %238, label %44, label %239, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5dcebf0:s0 -> Node0x5dcebf0;
	Node0x5dcebf0:s1 -> Node0x5dcc470;
	Node0x5dcc470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%239:\l239:                                              \l  ret void\l}"];
}
