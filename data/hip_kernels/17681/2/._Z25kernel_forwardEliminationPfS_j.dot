digraph "CFG for '_Z25kernel_forwardEliminationPfS_j' function" {
	label="CFG for '_Z25kernel_forwardEliminationPfS_j' function";

	Node0x6376ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = mul i32 %4, %2\l  %6 = mul i32 %5, %2\l  %7 = add i32 %2, -1\l  %8 = icmp eq i32 %7, 0\l  br i1 %8, label %191, label %9\l|{<s0>T|<s1>F}}"];
	Node0x6376ee0:s0 -> Node0x6377cb0;
	Node0x6376ee0:s1 -> Node0x6378620;
	Node0x6378620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%9:\l9:                                                \l  %10 = and i32 %2, 7\l  %11 = icmp ult i32 %2, 8\l  %12 = and i32 %2, -8\l  %13 = icmp eq i32 %10, 0\l  br label %16\l}"];
	Node0x6378620 -> Node0x6378a30;
	Node0x6378af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%14:\l14:                                               \l  %15 = icmp eq i32 %18, %7\l  br i1 %15, label %191, label %16, !llvm.loop !5\l|{<s0>T|<s1>F}}"];
	Node0x6378af0:s0 -> Node0x6377cb0;
	Node0x6378af0:s1 -> Node0x6378a30;
	Node0x6378a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%16:\l16:                                               \l  %17 = phi i32 [ %18, %14 ], [ 0, %9 ]\l  %18 = add nuw i32 %17, 1\l  %19 = icmp ult i32 %18, %2\l  br i1 %19, label %20, label %14\l|{<s0>T|<s1>F}}"];
	Node0x6378a30:s0 -> Node0x63790f0;
	Node0x6378a30:s1 -> Node0x6378af0;
	Node0x63790f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%20:\l20:                                               \l  %21 = mul i32 %17, %2\l  %22 = add i32 %21, %6\l  %23 = add i32 %22, %17\l  %24 = zext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %0, i64 %24\l  %26 = add i32 %17, %6\l  %27 = zext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  br label %29\l}"];
	Node0x63790f0 -> Node0x6379650;
	Node0x6379650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%29:\l29:                                               \l  %30 = phi i32 [ %18, %20 ], [ %189, %178 ]\l  %31 = mul i32 %30, %2\l  %32 = add i32 %31, %6\l  %33 = add i32 %32, %17\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7\l  %37 = load float, float addrspace(1)* %25, align 4, !tbaa !7\l  %38 = fdiv contract float %36, %37\l  %39 = fpext float %38 to double\l  br i1 %11, label %157, label %40\l|{<s0>T|<s1>F}}"];
	Node0x6379650:s0 -> Node0x637a510;
	Node0x6379650:s1 -> Node0x637a560;
	Node0x637a560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%40:\l40:                                               \l  %41 = phi i32 [ %154, %40 ], [ 0, %29 ]\l  %42 = phi i32 [ %155, %40 ], [ 0, %29 ]\l  %43 = add i32 %41, %22\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %47 = fpext float %46 to double\l  %48 = fmul contract double %39, %47\l  %49 = add i32 %41, %32\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  %53 = fpext float %52 to double\l  %54 = fsub contract double %53, %48\l  %55 = fptrunc double %54 to float\l  store float %55, float addrspace(1)* %51, align 4, !tbaa !7\l  %56 = or i32 %41, 1\l  %57 = add i32 %56, %22\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7\l  %61 = fpext float %60 to double\l  %62 = fmul contract double %39, %61\l  %63 = add i32 %56, %32\l  %64 = zext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %0, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7\l  %67 = fpext float %66 to double\l  %68 = fsub contract double %67, %62\l  %69 = fptrunc double %68 to float\l  store float %69, float addrspace(1)* %65, align 4, !tbaa !7\l  %70 = or i32 %41, 2\l  %71 = add i32 %70, %22\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7\l  %75 = fpext float %74 to double\l  %76 = fmul contract double %39, %75\l  %77 = add i32 %70, %32\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7\l  %81 = fpext float %80 to double\l  %82 = fsub contract double %81, %76\l  %83 = fptrunc double %82 to float\l  store float %83, float addrspace(1)* %79, align 4, !tbaa !7\l  %84 = or i32 %41, 3\l  %85 = add i32 %84, %22\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7\l  %89 = fpext float %88 to double\l  %90 = fmul contract double %39, %89\l  %91 = add i32 %84, %32\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %0, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7\l  %95 = fpext float %94 to double\l  %96 = fsub contract double %95, %90\l  %97 = fptrunc double %96 to float\l  store float %97, float addrspace(1)* %93, align 4, !tbaa !7\l  %98 = or i32 %41, 4\l  %99 = add i32 %98, %22\l  %100 = zext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %0, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !7\l  %103 = fpext float %102 to double\l  %104 = fmul contract double %39, %103\l  %105 = add i32 %98, %32\l  %106 = zext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %0, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7\l  %109 = fpext float %108 to double\l  %110 = fsub contract double %109, %104\l  %111 = fptrunc double %110 to float\l  store float %111, float addrspace(1)* %107, align 4, !tbaa !7\l  %112 = or i32 %41, 5\l  %113 = add i32 %112, %22\l  %114 = zext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7\l  %117 = fpext float %116 to double\l  %118 = fmul contract double %39, %117\l  %119 = add i32 %112, %32\l  %120 = zext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %0, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7\l  %123 = fpext float %122 to double\l  %124 = fsub contract double %123, %118\l  %125 = fptrunc double %124 to float\l  store float %125, float addrspace(1)* %121, align 4, !tbaa !7\l  %126 = or i32 %41, 6\l  %127 = add i32 %126, %22\l  %128 = zext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %0, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !7\l  %131 = fpext float %130 to double\l  %132 = fmul contract double %39, %131\l  %133 = add i32 %126, %32\l  %134 = zext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %0, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !7\l  %137 = fpext float %136 to double\l  %138 = fsub contract double %137, %132\l  %139 = fptrunc double %138 to float\l  store float %139, float addrspace(1)* %135, align 4, !tbaa !7\l  %140 = or i32 %41, 7\l  %141 = add i32 %140, %22\l  %142 = zext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %0, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !7\l  %145 = fpext float %144 to double\l  %146 = fmul contract double %39, %145\l  %147 = add i32 %140, %32\l  %148 = zext i32 %147 to i64\l  %149 = getelementptr inbounds float, float addrspace(1)* %0, i64 %148\l  %150 = load float, float addrspace(1)* %149, align 4, !tbaa !7\l  %151 = fpext float %150 to double\l  %152 = fsub contract double %151, %146\l  %153 = fptrunc double %152 to float\l  store float %153, float addrspace(1)* %149, align 4, !tbaa !7\l  %154 = add nuw i32 %41, 8\l  %155 = add i32 %42, 8\l  %156 = icmp eq i32 %155, %12\l  br i1 %156, label %157, label %40, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x637a560:s0 -> Node0x637a510;
	Node0x637a560:s1 -> Node0x637a560;
	Node0x637a510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%157:\l157:                                              \l  %158 = phi i32 [ 0, %29 ], [ %154, %40 ]\l  br i1 %13, label %178, label %159\l|{<s0>T|<s1>F}}"];
	Node0x637a510:s0 -> Node0x6379710;
	Node0x637a510:s1 -> Node0x637f0b0;
	Node0x637f0b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%159:\l159:                                              \l  %160 = phi i32 [ %175, %159 ], [ %158, %157 ]\l  %161 = phi i32 [ %176, %159 ], [ 0, %157 ]\l  %162 = add i32 %160, %22\l  %163 = zext i32 %162 to i64\l  %164 = getelementptr inbounds float, float addrspace(1)* %0, i64 %163\l  %165 = load float, float addrspace(1)* %164, align 4, !tbaa !7\l  %166 = fpext float %165 to double\l  %167 = fmul contract double %39, %166\l  %168 = add i32 %160, %32\l  %169 = zext i32 %168 to i64\l  %170 = getelementptr inbounds float, float addrspace(1)* %0, i64 %169\l  %171 = load float, float addrspace(1)* %170, align 4, !tbaa !7\l  %172 = fpext float %171 to double\l  %173 = fsub contract double %172, %167\l  %174 = fptrunc double %173 to float\l  store float %174, float addrspace(1)* %170, align 4, !tbaa !7\l  %175 = add nuw i32 %160, 1\l  %176 = add i32 %161, 1\l  %177 = icmp eq i32 %176, %10\l  br i1 %177, label %178, label %159, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x637f0b0:s0 -> Node0x6379710;
	Node0x637f0b0:s1 -> Node0x637f0b0;
	Node0x6379710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%178:\l178:                                              \l  %179 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %180 = fpext float %179 to double\l  %181 = fmul contract double %39, %180\l  %182 = add i32 %30, %6\l  %183 = zext i32 %182 to i64\l  %184 = getelementptr inbounds float, float addrspace(1)* %1, i64 %183\l  %185 = load float, float addrspace(1)* %184, align 4, !tbaa !7\l  %186 = fpext float %185 to double\l  %187 = fsub contract double %186, %181\l  %188 = fptrunc double %187 to float\l  store float %188, float addrspace(1)* %184, align 4, !tbaa !7\l  %189 = add i32 %30, 1\l  %190 = icmp ult i32 %189, %2\l  br i1 %190, label %29, label %14, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x6379710:s0 -> Node0x6379650;
	Node0x6379710:s1 -> Node0x6378af0;
	Node0x6377cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%191:\l191:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
