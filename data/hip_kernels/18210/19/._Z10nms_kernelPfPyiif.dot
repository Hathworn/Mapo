digraph "CFG for '_Z10nms_kernelPfPyiif' function" {
	label="CFG for '_Z10nms_kernelPfPyiif' function";

	Node0x64a43b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = shl nsw i32 %7, 6\l  %10 = sub nsw i32 %2, %9\l  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 64)\l  %12 = shl nsw i32 %6, 6\l  %13 = sub nsw i32 %2, %12\l  %14 = tail call i32 @llvm.smin.i32(i32 %13, i32 64)\l  %15 = icmp slt i32 %8, %14\l  br i1 %15, label %16, label %48\l|{<s0>T|<s1>F}}"];
	Node0x64a43b0:s0 -> Node0x64a6220;
	Node0x64a43b0:s1 -> Node0x64a62b0;
	Node0x64a6220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%16:\l16:                                               \l  %17 = add nsw i32 %12, %8\l  %18 = mul nsw i32 %17, 5\l  %19 = mul nuw nsw i32 %8, 5\l  %20 = sext i32 %18 to i64\l  %21 = getelementptr inbounds float, float addrspace(1)* %0, i64 %20\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %23 = getelementptr inbounds [320 x float], [320 x float] addrspace(3)*\l... @_ZZ10nms_kernelPfPyiifE2sh, i32 0, i32 %19\l  store float %22, float addrspace(3)* %23, align 4, !tbaa !5\l  %24 = add nsw i32 %18, 1\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %0, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %28 = add nuw nsw i32 %19, 1\l  %29 = getelementptr inbounds [320 x float], [320 x float] addrspace(3)*\l... @_ZZ10nms_kernelPfPyiifE2sh, i32 0, i32 %28\l  store float %27, float addrspace(3)* %29, align 4, !tbaa !5\l  %30 = add nsw i32 %18, 2\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %34 = add nuw nsw i32 %19, 2\l  %35 = getelementptr inbounds [320 x float], [320 x float] addrspace(3)*\l... @_ZZ10nms_kernelPfPyiifE2sh, i32 0, i32 %34\l  store float %33, float addrspace(3)* %35, align 4, !tbaa !5\l  %36 = add nsw i32 %18, 3\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %40 = add nuw nsw i32 %19, 3\l  %41 = getelementptr inbounds [320 x float], [320 x float] addrspace(3)*\l... @_ZZ10nms_kernelPfPyiifE2sh, i32 0, i32 %40\l  store float %39, float addrspace(3)* %41, align 4, !tbaa !5\l  %42 = add nsw i32 %18, 4\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %46 = add nuw nsw i32 %19, 4\l  %47 = getelementptr inbounds [320 x float], [320 x float] addrspace(3)*\l... @_ZZ10nms_kernelPfPyiifE2sh, i32 0, i32 %46\l  store float %45, float addrspace(3)* %47, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %48\l}"];
	Node0x64a6220 -> Node0x64a62b0;
	Node0x64a62b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = icmp slt i32 %8, %11\l  br i1 %49, label %50, label %109\l|{<s0>T|<s1>F}}"];
	Node0x64a62b0:s0 -> Node0x64a8e90;
	Node0x64a62b0:s1 -> Node0x64a8ee0;
	Node0x64a8e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%50:\l50:                                               \l  %51 = add nsw i32 %9, %8\l  %52 = mul nsw i32 %51, 5\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  %55 = icmp eq i32 %6, %7\l  %56 = add nuw nsw i32 %8, 1\l  %57 = select i1 %55, i32 %56, i32 0\l  %58 = icmp slt i32 %57, %14\l  br i1 %58, label %59, label %103\l|{<s0>T|<s1>F}}"];
	Node0x64a8e90:s0 -> Node0x64a94b0;
	Node0x64a8e90:s1 -> Node0x64a9500;
	Node0x64a94b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%59:\l59:                                               \l  %60 = mul nuw nsw i32 %8, 5\l  %61 = getelementptr inbounds [320 x float], [320 x float] addrspace(3)*\l... @_ZZ10nms_kernelPfPyiifE2sh, i32 0, i32 %60\l  %62 = getelementptr inbounds float, float addrspace(1)* %54, i64 2\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %64 = getelementptr inbounds float, float addrspace(3)* %61, i32 2\l  %65 = load float, float addrspace(3)* %64, align 4, !tbaa !5\l  %66 = tail call float @llvm.minnum.f32(float %63, float %65)\l  %67 = load float, float addrspace(1)* %54, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %68 = load float, float addrspace(3)* %61, align 4, !tbaa !5\l  %69 = tail call float @llvm.maxnum.f32(float %67, float %68)\l  %70 = fsub contract float %66, %69\l  %71 = fpext float %70 to double\l  %72 = tail call double @llvm.maxnum.f64(double %71, double 0.000000e+00)\l  %73 = fptrunc double %72 to float\l  %74 = getelementptr inbounds float, float addrspace(1)* %54, i64 3\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %76 = getelementptr inbounds float, float addrspace(3)* %61, i32 3\l  %77 = load float, float addrspace(3)* %76, align 4, !tbaa !5\l  %78 = tail call float @llvm.minnum.f32(float %75, float %77)\l  %79 = getelementptr inbounds float, float addrspace(1)* %54, i64 1\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %81 = getelementptr inbounds float, float addrspace(3)* %61, i32 1\l  %82 = load float, float addrspace(3)* %81, align 4, !tbaa !5\l  %83 = tail call float @llvm.maxnum.f32(float %80, float %82)\l  %84 = fsub contract float %78, %83\l  %85 = fpext float %84 to double\l  %86 = tail call double @llvm.maxnum.f64(double %85, double 0.000000e+00)\l  %87 = fptrunc double %86 to float\l  %88 = fmul contract float %73, %87\l  %89 = fsub contract float %63, %67\l  %90 = fsub contract float %75, %80\l  %91 = fmul contract float %89, %90\l  %92 = fsub contract float %65, %68\l  %93 = fsub contract float %77, %82\l  %94 = fmul contract float %92, %93\l  %95 = fadd contract float %91, %94\l  %96 = fsub contract float %95, %88\l  %97 = fadd contract float %96, 0x3F1A36E2E0000000\l  %98 = fdiv contract float %88, %97\l  %99 = zext i32 %8 to i64\l  %100 = shl nuw i64 1, %99\l  %101 = fcmp contract ult float %98, %4\l  %102 = select i1 %101, i64 0, i64 %100\l  br label %103\l}"];
	Node0x64a94b0 -> Node0x64a9500;
	Node0x64a9500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%103:\l103:                                              \l  %104 = phi i64 [ 0, %50 ], [ %102, %59 ]\l  %105 = mul nsw i32 %51, %3\l  %106 = add nsw i32 %105, %6\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %107\l  store i64 %104, i64 addrspace(1)* %108, align 8, !tbaa !10\l  br label %109\l}"];
	Node0x64a9500 -> Node0x64a8ee0;
	Node0x64a8ee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%109:\l109:                                              \l  ret void\l}"];
}
