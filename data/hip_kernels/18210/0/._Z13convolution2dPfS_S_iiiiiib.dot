digraph "CFG for '_Z13convolution2dPfS_S_iiiiiib' function" {
	label="CFG for '_Z13convolution2dPfS_S_iiiiiib' function";

	Node0x511a6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %11, %19\l  %21 = add i32 %20, %13\l  %22 = getelementptr i8, i8 addrspace(4)* %15, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !5, !invariant.load !6\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %12, %25\l  %27 = add i32 %26, %14\l  %28 = mul nsw i32 %27, %8\l  %29 = add nsw i32 %28, %21\l  %30 = mul nsw i32 %8, %7\l  %31 = icmp slt i32 %29, %30\l  br i1 %31, label %32, label %184\l|{<s0>T|<s1>F}}"];
	Node0x511a6c0:s0 -> Node0x511ecf0;
	Node0x511a6c0:s1 -> Node0x511ed80;
	Node0x511ecf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%32:\l32:                                               \l  %33 = icmp sgt i32 %5, 0\l  br i1 %33, label %34, label %55\l|{<s0>T|<s1>F}}"];
	Node0x511ecf0:s0 -> Node0x511d5d0;
	Node0x511ecf0:s1 -> Node0x511f0d0;
	Node0x511d5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%34:\l34:                                               \l  %35 = icmp sgt i32 %6, 0\l  %36 = lshr i32 %5, 1\l  %37 = sub nsw i32 0, %36\l  %38 = sdiv i32 %6, -2\l  %39 = select i1 %9, i32 %37, i32 0\l  %40 = add i32 %21, %39\l  %41 = select i1 %9, i32 %38, i32 0\l  %42 = add i32 %27, %41\l  %43 = and i32 %6, 3\l  %44 = icmp ult i32 %6, 4\l  %45 = and i32 %6, -4\l  %46 = icmp eq i32 %43, 0\l  br label %47\l}"];
	Node0x511d5d0 -> Node0x511fa00;
	Node0x511fa00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%47:\l47:                                               \l  %48 = phi i32 [ 0, %34 ], [ %92, %90 ]\l  %49 = phi float [ 0.000000e+00, %34 ], [ %91, %90 ]\l  br i1 %35, label %50, label %90\l|{<s0>T|<s1>F}}"];
	Node0x511fa00:s0 -> Node0x51207a0;
	Node0x511fa00:s1 -> Node0x511faf0;
	Node0x51207a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%50:\l50:                                               \l  %51 = mul nsw i32 %48, %6\l  %52 = add nsw i32 %40, %48\l  %53 = icmp sgt i32 %52, -1\l  %54 = icmp slt i32 %52, %3\l  br i1 %44, label %59, label %94\l|{<s0>T|<s1>F}}"];
	Node0x51207a0:s0 -> Node0x5120b50;
	Node0x51207a0:s1 -> Node0x5120ba0;
	Node0x511f0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%55:\l55:                                               \l  %56 = phi float [ 0.000000e+00, %32 ], [ %91, %90 ]\l  %57 = sext i32 %29 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %2, i64 %57\l  store float %56, float addrspace(1)* %58, align 4, !tbaa !7\l  br label %184\l}"];
	Node0x511f0d0 -> Node0x511ed80;
	Node0x5120b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%59:\l59:                                               \l  %60 = phi float [ undef, %50 ], [ %180, %179 ]\l  %61 = phi i32 [ 0, %50 ], [ %181, %179 ]\l  %62 = phi float [ %49, %50 ], [ %180, %179 ]\l  br i1 %46, label %90, label %63\l|{<s0>T|<s1>F}}"];
	Node0x5120b50:s0 -> Node0x511faf0;
	Node0x5120b50:s1 -> Node0x51217f0;
	Node0x51217f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = phi i32 [ %87, %85 ], [ %61, %59 ]\l  %65 = phi float [ %86, %85 ], [ %62, %59 ]\l  %66 = phi i32 [ %88, %85 ], [ 0, %59 ]\l  %67 = add nsw i32 %42, %64\l  br i1 %53, label %68, label %85\l|{<s0>T|<s1>F}}"];
	Node0x51217f0:s0 -> Node0x5121fa0;
	Node0x51217f0:s1 -> Node0x5121960;
	Node0x5121fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%68:\l68:                                               \l  %69 = icmp sgt i32 %67, -1\l  %70 = select i1 %54, i1 %69, i1 false\l  %71 = icmp slt i32 %67, %4\l  %72 = select i1 %70, i1 %71, i1 false\l  br i1 %72, label %73, label %85\l|{<s0>T|<s1>F}}"];
	Node0x5121fa0:s0 -> Node0x5122360;
	Node0x5121fa0:s1 -> Node0x5121960;
	Node0x5122360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%73:\l73:                                               \l  %74 = mul nsw i32 %67, %4\l  %75 = add nsw i32 %74, %52\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %79 = add nsw i32 %64, %51\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %83 = fmul contract float %78, %82\l  %84 = fadd contract float %65, %83\l  br label %85\l}"];
	Node0x5122360 -> Node0x5121960;
	Node0x5121960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  %86 = phi float [ %84, %73 ], [ %65, %68 ], [ %65, %63 ]\l  %87 = add nuw nsw i32 %64, 1\l  %88 = add i32 %66, 1\l  %89 = icmp eq i32 %88, %43\l  br i1 %89, label %90, label %63, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5121960:s0 -> Node0x511faf0;
	Node0x5121960:s1 -> Node0x51217f0;
	Node0x511faf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%90:\l90:                                               \l  %91 = phi float [ %49, %47 ], [ %60, %59 ], [ %86, %85 ]\l  %92 = add nuw nsw i32 %48, 1\l  %93 = icmp eq i32 %92, %5\l  br i1 %93, label %55, label %47, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x511faf0:s0 -> Node0x511f0d0;
	Node0x511faf0:s1 -> Node0x511fa00;
	Node0x5120ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%94:\l94:                                               \l  %95 = phi i32 [ %181, %179 ], [ 0, %50 ]\l  %96 = phi float [ %180, %179 ], [ %49, %50 ]\l  %97 = phi i32 [ %182, %179 ], [ 0, %50 ]\l  %98 = add nsw i32 %42, %95\l  br i1 %53, label %99, label %116\l|{<s0>T|<s1>F}}"];
	Node0x5120ba0:s0 -> Node0x5123ad0;
	Node0x5120ba0:s1 -> Node0x5123b20;
	Node0x5123ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%99:\l99:                                               \l  %100 = icmp sgt i32 %98, -1\l  %101 = select i1 %54, i1 %100, i1 false\l  %102 = icmp slt i32 %98, %4\l  %103 = select i1 %101, i1 %102, i1 false\l  br i1 %103, label %104, label %116\l|{<s0>T|<s1>F}}"];
	Node0x5123ad0:s0 -> Node0x5123ee0;
	Node0x5123ad0:s1 -> Node0x5123b20;
	Node0x5123ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%104:\l104:                                              \l  %105 = mul nsw i32 %98, %4\l  %106 = add nsw i32 %105, %52\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %0, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %110 = add nsw i32 %95, %51\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %1, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %114 = fmul contract float %109, %113\l  %115 = fadd contract float %96, %114\l  br label %116\l}"];
	Node0x5123ee0 -> Node0x5123b20;
	Node0x5123b20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%116:\l116:                                              \l  %117 = phi float [ %115, %104 ], [ %96, %99 ], [ %96, %94 ]\l  %118 = or i32 %95, 1\l  %119 = add nsw i32 %42, %118\l  br i1 %53, label %120, label %137\l|{<s0>T|<s1>F}}"];
	Node0x5123b20:s0 -> Node0x5124850;
	Node0x5123b20:s1 -> Node0x51248a0;
	Node0x5124850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%120:\l120:                                              \l  %121 = icmp sgt i32 %119, -1\l  %122 = select i1 %54, i1 %121, i1 false\l  %123 = icmp slt i32 %119, %4\l  %124 = select i1 %122, i1 %123, i1 false\l  br i1 %124, label %125, label %137\l|{<s0>T|<s1>F}}"];
	Node0x5124850:s0 -> Node0x5124c60;
	Node0x5124850:s1 -> Node0x51248a0;
	Node0x5124c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%125:\l125:                                              \l  %126 = mul nsw i32 %119, %4\l  %127 = add nsw i32 %126, %52\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %0, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %131 = add nsw i32 %118, %51\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %1, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %135 = fmul contract float %130, %134\l  %136 = fadd contract float %117, %135\l  br label %137\l}"];
	Node0x5124c60 -> Node0x51248a0;
	Node0x51248a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%137:\l137:                                              \l  %138 = phi float [ %136, %125 ], [ %117, %120 ], [ %117, %116 ]\l  %139 = or i32 %95, 2\l  %140 = add nsw i32 %42, %139\l  br i1 %53, label %141, label %158\l|{<s0>T|<s1>F}}"];
	Node0x51248a0:s0 -> Node0x51259f0;
	Node0x51248a0:s1 -> Node0x5125a40;
	Node0x51259f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%141:\l141:                                              \l  %142 = icmp sgt i32 %140, -1\l  %143 = select i1 %54, i1 %142, i1 false\l  %144 = icmp slt i32 %140, %4\l  %145 = select i1 %143, i1 %144, i1 false\l  br i1 %145, label %146, label %158\l|{<s0>T|<s1>F}}"];
	Node0x51259f0:s0 -> Node0x5125e00;
	Node0x51259f0:s1 -> Node0x5125a40;
	Node0x5125e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%146:\l146:                                              \l  %147 = mul nsw i32 %140, %4\l  %148 = add nsw i32 %147, %52\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %0, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %152 = add nsw i32 %139, %51\l  %153 = sext i32 %152 to i64\l  %154 = getelementptr inbounds float, float addrspace(1)* %1, i64 %153\l  %155 = load float, float addrspace(1)* %154, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %156 = fmul contract float %151, %155\l  %157 = fadd contract float %138, %156\l  br label %158\l}"];
	Node0x5125e00 -> Node0x5125a40;
	Node0x5125a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%158:\l158:                                              \l  %159 = phi float [ %157, %146 ], [ %138, %141 ], [ %138, %137 ]\l  %160 = or i32 %95, 3\l  %161 = add nsw i32 %42, %160\l  br i1 %53, label %162, label %179\l|{<s0>T|<s1>F}}"];
	Node0x5125a40:s0 -> Node0x5126770;
	Node0x5125a40:s1 -> Node0x51214e0;
	Node0x5126770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%162:\l162:                                              \l  %163 = icmp sgt i32 %161, -1\l  %164 = select i1 %54, i1 %163, i1 false\l  %165 = icmp slt i32 %161, %4\l  %166 = select i1 %164, i1 %165, i1 false\l  br i1 %166, label %167, label %179\l|{<s0>T|<s1>F}}"];
	Node0x5126770:s0 -> Node0x5126af0;
	Node0x5126770:s1 -> Node0x51214e0;
	Node0x5126af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%167:\l167:                                              \l  %168 = mul nsw i32 %161, %4\l  %169 = add nsw i32 %168, %52\l  %170 = sext i32 %169 to i64\l  %171 = getelementptr inbounds float, float addrspace(1)* %0, i64 %170\l  %172 = load float, float addrspace(1)* %171, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %173 = add nsw i32 %160, %51\l  %174 = sext i32 %173 to i64\l  %175 = getelementptr inbounds float, float addrspace(1)* %1, i64 %174\l  %176 = load float, float addrspace(1)* %175, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %177 = fmul contract float %172, %176\l  %178 = fadd contract float %159, %177\l  br label %179\l}"];
	Node0x5126af0 -> Node0x51214e0;
	Node0x51214e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%179:\l179:                                              \l  %180 = phi float [ %178, %167 ], [ %159, %162 ], [ %159, %158 ]\l  %181 = add nuw nsw i32 %95, 4\l  %182 = add i32 %97, 4\l  %183 = icmp eq i32 %182, %45\l  br i1 %183, label %59, label %94, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x51214e0:s0 -> Node0x5120b50;
	Node0x51214e0:s1 -> Node0x5120ba0;
	Node0x511ed80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%184:\l184:                                              \l  ret void\l}"];
}
