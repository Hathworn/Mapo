digraph "CFG for '_Z6kernelPiS_S_i' function" {
	label="CFG for '_Z6kernelPiS_S_i' function";

	Node0x5c27620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %3\l  %15 = icmp sgt i32 %3, 0\l  %16 = and i1 %14, %15\l  br i1 %16, label %17, label %117\l|{<s0>T|<s1>F}}"];
	Node0x5c27620:s0 -> Node0x5c28d60;
	Node0x5c27620:s1 -> Node0x5c29750;
	Node0x5c28d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%17:\l17:                                               \l  %18 = mul nsw i32 %13, %3\l  %19 = and i32 %3, 7\l  %20 = icmp ult i32 %3, 8\l  br i1 %20, label %100, label %21\l|{<s0>T|<s1>F}}"];
	Node0x5c28d60:s0 -> Node0x5c29aa0;
	Node0x5c28d60:s1 -> Node0x5c29af0;
	Node0x5c29af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%21:\l21:                                               \l  %22 = and i32 %3, -8\l  br label %23\l}"];
	Node0x5c29af0 -> Node0x5c29cf0;
	Node0x5c29cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%23:\l23:                                               \l  %24 = phi i32 [ 0, %21 ], [ %97, %23 ]\l  %25 = phi i32 [ 0, %21 ], [ %98, %23 ]\l  %26 = add nsw i32 %24, %18\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !7\l  %30 = add nsw i32 %29, 1\l  store i32 %30, i32 addrspace(1)* %28, align 4, !tbaa !7\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %27\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %27\l  store i32 %32, i32 addrspace(1)* %33, align 4, !tbaa !7\l  %34 = or i32 %24, 1\l  %35 = add nsw i32 %34, %18\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !7\l  %39 = add nsw i32 %38, 1\l  store i32 %39, i32 addrspace(1)* %37, align 4, !tbaa !7\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %36\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %36\l  store i32 %41, i32 addrspace(1)* %42, align 4, !tbaa !7\l  %43 = or i32 %24, 2\l  %44 = add nsw i32 %43, %18\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %45\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !7\l  %48 = add nsw i32 %47, 1\l  store i32 %48, i32 addrspace(1)* %46, align 4, !tbaa !7\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %45\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !7\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %45\l  store i32 %50, i32 addrspace(1)* %51, align 4, !tbaa !7\l  %52 = or i32 %24, 3\l  %53 = add nsw i32 %52, %18\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %54\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !7\l  %57 = add nsw i32 %56, 1\l  store i32 %57, i32 addrspace(1)* %55, align 4, !tbaa !7\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %54\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !7\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %54\l  store i32 %59, i32 addrspace(1)* %60, align 4, !tbaa !7\l  %61 = or i32 %24, 4\l  %62 = add nsw i32 %61, %18\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !7\l  %66 = add nsw i32 %65, 1\l  store i32 %66, i32 addrspace(1)* %64, align 4, !tbaa !7\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %63\l  %68 = load i32, i32 addrspace(1)* %67, align 4, !tbaa !7\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %63\l  store i32 %68, i32 addrspace(1)* %69, align 4, !tbaa !7\l  %70 = or i32 %24, 5\l  %71 = add nsw i32 %70, %18\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %72\l  %74 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !7\l  %75 = add nsw i32 %74, 1\l  store i32 %75, i32 addrspace(1)* %73, align 4, !tbaa !7\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %72\l  %77 = load i32, i32 addrspace(1)* %76, align 4, !tbaa !7\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %72\l  store i32 %77, i32 addrspace(1)* %78, align 4, !tbaa !7\l  %79 = or i32 %24, 6\l  %80 = add nsw i32 %79, %18\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !7\l  %84 = add nsw i32 %83, 1\l  store i32 %84, i32 addrspace(1)* %82, align 4, !tbaa !7\l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %81\l  %86 = load i32, i32 addrspace(1)* %85, align 4, !tbaa !7\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %81\l  store i32 %86, i32 addrspace(1)* %87, align 4, !tbaa !7\l  %88 = or i32 %24, 7\l  %89 = add nsw i32 %88, %18\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %90\l  %92 = load i32, i32 addrspace(1)* %91, align 4, !tbaa !7\l  %93 = add nsw i32 %92, 1\l  store i32 %93, i32 addrspace(1)* %91, align 4, !tbaa !7\l  %94 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %90\l  %95 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !7\l  %96 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %90\l  store i32 %95, i32 addrspace(1)* %96, align 4, !tbaa !7\l  %97 = add nuw nsw i32 %24, 8\l  %98 = add i32 %25, 8\l  %99 = icmp eq i32 %98, %22\l  br i1 %99, label %100, label %23, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5c29cf0:s0 -> Node0x5c29aa0;
	Node0x5c29cf0:s1 -> Node0x5c29cf0;
	Node0x5c29aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%100:\l100:                                              \l  %101 = phi i32 [ 0, %17 ], [ %97, %23 ]\l  %102 = icmp eq i32 %19, 0\l  br i1 %102, label %117, label %103\l|{<s0>T|<s1>F}}"];
	Node0x5c29aa0:s0 -> Node0x5c29750;
	Node0x5c29aa0:s1 -> Node0x5c2df40;
	Node0x5c2df40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%103:\l103:                                              \l  %104 = phi i32 [ %114, %103 ], [ %101, %100 ]\l  %105 = phi i32 [ %115, %103 ], [ 0, %100 ]\l  %106 = add nsw i32 %104, %18\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %107\l  %109 = load i32, i32 addrspace(1)* %108, align 4, !tbaa !7\l  %110 = add nsw i32 %109, 1\l  store i32 %110, i32 addrspace(1)* %108, align 4, !tbaa !7\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %107\l  %112 = load i32, i32 addrspace(1)* %111, align 4, !tbaa !7\l  %113 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %107\l  store i32 %112, i32 addrspace(1)* %113, align 4, !tbaa !7\l  %114 = add nuw nsw i32 %104, 1\l  %115 = add i32 %105, 1\l  %116 = icmp eq i32 %115, %19\l  br i1 %116, label %117, label %103, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5c2df40:s0 -> Node0x5c29750;
	Node0x5c2df40:s1 -> Node0x5c2df40;
	Node0x5c29750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%117:\l117:                                              \l  ret void\l}"];
}
