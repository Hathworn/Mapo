digraph "CFG for '_Z21OptimizedMMKernel_2_8PfS_S_i' function" {
	label="CFG for '_Z21OptimizedMMKernel_2_8PfS_S_i' function";

	Node0x4f954f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = add i32 %13, %5\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %6\l  %22 = udiv i32 %3, %12\l  %23 = icmp sgt i32 %22, 0\l  %24 = mul nsw i32 %21, %3\l  br i1 %23, label %25, label %45\l|{<s0>T|<s1>F}}"];
	Node0x4f954f0:s0 -> Node0x4f98fe0;
	Node0x4f954f0:s1 -> Node0x4f99070;
	Node0x4f98fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%25:\l25:                                               \l  %26 = add i32 %24, %5\l  %27 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedA, i32 0, i32 %6, i32\l... %5\l  %28 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedB, i32 0, i32 %6, i32\l... %5\l  %29 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedA, i32 0, i32 %6, i32\l... 0\l  %30 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedB, i32 0, i32 0, i32\l... %5\l  %31 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedA, i32 0, i32 %6, i32\l... 1\l  %32 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedB, i32 0, i32 1, i32\l... %5\l  %33 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedA, i32 0, i32 %6, i32\l... 2\l  %34 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedB, i32 0, i32 2, i32\l... %5\l  %35 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedA, i32 0, i32 %6, i32\l... 3\l  %36 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedB, i32 0, i32 3, i32\l... %5\l  %37 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedA, i32 0, i32 %6, i32\l... 4\l  %38 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedB, i32 0, i32 4, i32\l... %5\l  %39 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedA, i32 0, i32 %6, i32\l... 5\l  %40 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedB, i32 0, i32 5, i32\l... %5\l  %41 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedA, i32 0, i32 %6, i32\l... 6\l  %42 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedB, i32 0, i32 6, i32\l... %5\l  %43 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedA, i32 0, i32 %6, i32\l... 7\l  %44 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_8PfS_S_iE7sharedB, i32 0, i32 7, i32\l... %5\l  br label %50\l}"];
	Node0x4f98fe0 -> Node0x4f99290;
	Node0x4f99070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%45:\l45:                                               \l  %46 = phi float [ 0.000000e+00, %4 ], [ %95, %50 ]\l  %47 = add nsw i32 %24, %14\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %2, i64 %48\l  store float %46, float addrspace(1)* %49, align 4, !tbaa !7\l  ret void\l}"];
	Node0x4f99290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i32 [ 0, %25 ], [ %96, %50 ]\l  %52 = phi float [ 0.000000e+00, %25 ], [ %95, %50 ]\l  %53 = shl nsw i32 %51, 3\l  %54 = add i32 %26, %53\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  store float %57, float addrspace(3)* %27, align 4, !tbaa !7\l  %58 = add nuw i32 %53, %6\l  %59 = mul i32 %58, %3\l  %60 = add nsw i32 %59, %14\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  store float %63, float addrspace(3)* %28, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %64 = load float, float addrspace(3)* %29, align 16, !tbaa !7\l  %65 = load float, float addrspace(3)* %30, align 4, !tbaa !7\l  %66 = fmul contract float %64, %65\l  %67 = fadd contract float %52, %66\l  %68 = load float, float addrspace(3)* %31, align 4, !tbaa !7\l  %69 = load float, float addrspace(3)* %32, align 4, !tbaa !7\l  %70 = fmul contract float %68, %69\l  %71 = fadd contract float %67, %70\l  %72 = load float, float addrspace(3)* %33, align 8, !tbaa !7\l  %73 = load float, float addrspace(3)* %34, align 4, !tbaa !7\l  %74 = fmul contract float %72, %73\l  %75 = fadd contract float %71, %74\l  %76 = load float, float addrspace(3)* %35, align 4, !tbaa !7\l  %77 = load float, float addrspace(3)* %36, align 4, !tbaa !7\l  %78 = fmul contract float %76, %77\l  %79 = fadd contract float %75, %78\l  %80 = load float, float addrspace(3)* %37, align 16, !tbaa !7\l  %81 = load float, float addrspace(3)* %38, align 4, !tbaa !7\l  %82 = fmul contract float %80, %81\l  %83 = fadd contract float %79, %82\l  %84 = load float, float addrspace(3)* %39, align 4, !tbaa !7\l  %85 = load float, float addrspace(3)* %40, align 4, !tbaa !7\l  %86 = fmul contract float %84, %85\l  %87 = fadd contract float %83, %86\l  %88 = load float, float addrspace(3)* %41, align 8, !tbaa !7\l  %89 = load float, float addrspace(3)* %42, align 4, !tbaa !7\l  %90 = fmul contract float %88, %89\l  %91 = fadd contract float %87, %90\l  %92 = load float, float addrspace(3)* %43, align 4, !tbaa !7\l  %93 = load float, float addrspace(3)* %44, align 4, !tbaa !7\l  %94 = fmul contract float %92, %93\l  %95 = fadd contract float %91, %94\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %96 = add nuw nsw i32 %51, 1\l  %97 = icmp eq i32 %96, %22\l  br i1 %97, label %45, label %50, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4f99290:s0 -> Node0x4f99070;
	Node0x4f99290:s1 -> Node0x4f99290;
}
