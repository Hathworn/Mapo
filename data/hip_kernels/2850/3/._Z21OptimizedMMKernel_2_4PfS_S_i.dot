digraph "CFG for '_Z21OptimizedMMKernel_2_4PfS_S_i' function" {
	label="CFG for '_Z21OptimizedMMKernel_2_4PfS_S_i' function";

	Node0x5191d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = add i32 %13, %5\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %6\l  %22 = udiv i32 %3, %12\l  %23 = icmp sgt i32 %22, 0\l  %24 = mul nsw i32 %21, %3\l  br i1 %23, label %25, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5191d30:s0 -> Node0x5195820;
	Node0x5191d30:s1 -> Node0x51958b0;
	Node0x5195820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%25:\l25:                                               \l  %26 = add i32 %24, %5\l  %27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_4PfS_S_iE7sharedA, i32 0, i32 %6, i32\l... %5\l  %28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_4PfS_S_iE7sharedB, i32 0, i32 %6, i32\l... %5\l  %29 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_4PfS_S_iE7sharedA, i32 0, i32 %6, i32\l... 0\l  %30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_4PfS_S_iE7sharedB, i32 0, i32 0, i32\l... %5\l  %31 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_4PfS_S_iE7sharedA, i32 0, i32 %6, i32\l... 1\l  %32 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_4PfS_S_iE7sharedB, i32 0, i32 1, i32\l... %5\l  %33 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_4PfS_S_iE7sharedA, i32 0, i32 %6, i32\l... 2\l  %34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_4PfS_S_iE7sharedB, i32 0, i32 2, i32\l... %5\l  %35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_4PfS_S_iE7sharedA, i32 0, i32 %6, i32\l... 3\l  %36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ21OptimizedMMKernel_2_4PfS_S_iE7sharedB, i32 0, i32 3, i32\l... %5\l  br label %42\l}"];
	Node0x5195820 -> Node0x5195ad0;
	Node0x51958b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%37:\l37:                                               \l  %38 = phi float [ 0.000000e+00, %4 ], [ %71, %42 ]\l  %39 = add nsw i32 %24, %14\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %2, i64 %40\l  store float %38, float addrspace(1)* %41, align 4, !tbaa !7\l  ret void\l}"];
	Node0x5195ad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = phi i32 [ 0, %25 ], [ %72, %42 ]\l  %44 = phi float [ 0.000000e+00, %25 ], [ %71, %42 ]\l  %45 = shl nsw i32 %43, 2\l  %46 = add i32 %26, %45\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  store float %49, float addrspace(3)* %27, align 4, !tbaa !7\l  %50 = add nuw i32 %45, %6\l  %51 = mul i32 %50, %3\l  %52 = add nsw i32 %51, %14\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  store float %55, float addrspace(3)* %28, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %56 = load float, float addrspace(3)* %29, align 16, !tbaa !7\l  %57 = load float, float addrspace(3)* %30, align 4, !tbaa !7\l  %58 = fmul contract float %56, %57\l  %59 = fadd contract float %44, %58\l  %60 = load float, float addrspace(3)* %31, align 4, !tbaa !7\l  %61 = load float, float addrspace(3)* %32, align 4, !tbaa !7\l  %62 = fmul contract float %60, %61\l  %63 = fadd contract float %59, %62\l  %64 = load float, float addrspace(3)* %33, align 8, !tbaa !7\l  %65 = load float, float addrspace(3)* %34, align 4, !tbaa !7\l  %66 = fmul contract float %64, %65\l  %67 = fadd contract float %63, %66\l  %68 = load float, float addrspace(3)* %35, align 4, !tbaa !7\l  %69 = load float, float addrspace(3)* %36, align 4, !tbaa !7\l  %70 = fmul contract float %68, %69\l  %71 = fadd contract float %67, %70\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %72 = add nuw nsw i32 %43, 1\l  %73 = icmp eq i32 %72, %22\l  br i1 %73, label %37, label %42, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5195ad0:s0 -> Node0x51958b0;
	Node0x5195ad0:s1 -> Node0x5195ad0;
}
