digraph "CFG for '_Z13g_getSoftMaxPPfS_i' function" {
	label="CFG for '_Z13g_getSoftMaxPPfS_i' function";

	Node0x4c170b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @_share,\l... i32 0, i32 %9\l  %11 = mul nsw i32 %4, %2\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds float, float addrspace(1)* %0, i64 %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = getelementptr inbounds float, float addrspace(3)* %10, i32 %14\l  store float 0.000000e+00, float addrspace(3)* %15, align 4, !tbaa !7\l  %16 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @_share,\l... i32 0, i32 %14\l  store float -1.000000e+08, float addrspace(3)* %16, align 4, !tbaa !7\l  %17 = icmp sgt i32 %2, 0\l  br i1 %17, label %20, label %18\l|{<s0>T|<s1>F}}"];
	Node0x4c170b0:s0 -> Node0x4c18a40;
	Node0x4c170b0:s1 -> Node0x4c1a690;
	Node0x4c1a690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%18:\l18:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %19 = icmp eq i16 %8, 1\l  br i1 %19, label %52, label %37\l|{<s0>T|<s1>F}}"];
	Node0x4c1a690:s0 -> Node0x4c1ab00;
	Node0x4c1a690:s1 -> Node0x4c1ab90;
	Node0x4c18a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = phi float [ %34, %33 ], [ -1.000000e+08, %3 ]\l  %22 = phi i32 [ %35, %33 ], [ 0, %3 ]\l  %23 = add i32 %22, %14\l  %24 = icmp slt i32 %23, %2\l  br i1 %24, label %25, label %33\l|{<s0>T|<s1>F}}"];
	Node0x4c18a40:s0 -> Node0x4c1b080;
	Node0x4c18a40:s1 -> Node0x4c1ad00;
	Node0x4c1b080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%25:\l25:                                               \l  %26 = sext i32 %23 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %1, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %29 = getelementptr inbounds float, float addrspace(1)* %13, i64 %26\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7\l  %31 = fadd contract float %28, %30\l  store float %31, float addrspace(1)* %29, align 4, !tbaa !7\l  %32 = tail call float @llvm.maxnum.f32(float %21, float %31)\l  store float %32, float addrspace(3)* %16, align 4, !tbaa !7\l  br label %33\l}"];
	Node0x4c1b080 -> Node0x4c1ad00;
	Node0x4c1ad00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi float [ %32, %25 ], [ %21, %20 ]\l  %35 = add i32 %22, %9\l  %36 = icmp slt i32 %35, %2\l  br i1 %36, label %20, label %18, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4c1ad00:s0 -> Node0x4c18a40;
	Node0x4c1ad00:s1 -> Node0x4c1a690;
	Node0x4c1ab90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%37:\l37:                                               \l  %38 = phi i32 [ %40, %50 ], [ %9, %18 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %39 = add nsw i32 %38, 1\l  %40 = ashr i32 %39, 1\l  %41 = ashr i32 %38, 1\l  %42 = icmp ult i32 %14, %41\l  br i1 %42, label %43, label %50\l|{<s0>T|<s1>F}}"];
	Node0x4c1ab90:s0 -> Node0x4c1c220;
	Node0x4c1ab90:s1 -> Node0x4c1bcb0;
	Node0x4c1c220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%43:\l43:                                               \l  %44 = load float, float addrspace(3)* %16, align 4, !tbaa !7\l  %45 = add nsw i32 %40, %14\l  %46 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @_share,\l... i32 0, i32 %45\l  %47 = load float, float addrspace(3)* %46, align 4, !tbaa !7\l  %48 = fcmp contract olt float %44, %47\l  br i1 %48, label %49, label %50\l|{<s0>T|<s1>F}}"];
	Node0x4c1c220:s0 -> Node0x4c1c5e0;
	Node0x4c1c220:s1 -> Node0x4c1bcb0;
	Node0x4c1c5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%49:\l49:                                               \l  store float %47, float addrspace(3)* %16, align 4, !tbaa !7\l  br label %50\l}"];
	Node0x4c1c5e0 -> Node0x4c1bcb0;
	Node0x4c1bcb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%50:\l50:                                               \l  %51 = icmp eq i32 %40, 1\l  br i1 %51, label %52, label %37, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4c1bcb0:s0 -> Node0x4c1ab00;
	Node0x4c1bcb0:s1 -> Node0x4c1ab90;
	Node0x4c1ab00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%52:\l52:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %17, label %54, label %53\l|{<s0>T|<s1>F}}"];
	Node0x4c1ab00:s0 -> Node0x4c1cb10;
	Node0x4c1ab00:s1 -> Node0x4c1cb60;
	Node0x4c1cb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%53:\l53:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %19, label %84, label %70\l|{<s0>T|<s1>F}}"];
	Node0x4c1cb60:s0 -> Node0x4c1ce10;
	Node0x4c1cb60:s1 -> Node0x4c1ce60;
	Node0x4c1cb10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = phi i32 [ %68, %67 ], [ 0, %52 ]\l  %56 = add i32 %55, %14\l  %57 = icmp slt i32 %56, %2\l  br i1 %57, label %58, label %67\l|{<s0>T|<s1>F}}"];
	Node0x4c1cb10:s0 -> Node0x4c1d200;
	Node0x4c1cb10:s1 -> Node0x4c1cfa0;
	Node0x4c1d200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%58:\l58:                                               \l  %59 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @_share, i32 0, i32 0), align 4, !tbaa !7\l  %60 = sext i32 %56 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %13, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %63 = fsub contract float %62, %59\l  %64 = tail call float @llvm.exp.f32(float %63)\l  store float %64, float addrspace(1)* %61, align 4, !tbaa !7\l  %65 = load float, float addrspace(3)* %15, align 4, !tbaa !7\l  %66 = fadd contract float %65, %64\l  store float %66, float addrspace(3)* %15, align 4, !tbaa !7\l  br label %67\l}"];
	Node0x4c1d200 -> Node0x4c1cfa0;
	Node0x4c1cfa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = add i32 %55, %9\l  %69 = icmp slt i32 %68, %2\l  br i1 %69, label %54, label %53, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4c1cfa0:s0 -> Node0x4c1cb10;
	Node0x4c1cfa0:s1 -> Node0x4c1cb60;
	Node0x4c1ce60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%70:\l70:                                               \l  %71 = phi i32 [ %73, %82 ], [ %9, %53 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %72 = add nsw i32 %71, 1\l  %73 = ashr i32 %72, 1\l  %74 = ashr i32 %71, 1\l  %75 = icmp ult i32 %14, %74\l  br i1 %75, label %76, label %82\l|{<s0>T|<s1>F}}"];
	Node0x4c1ce60:s0 -> Node0x4c1e6b0;
	Node0x4c1ce60:s1 -> Node0x4c1e140;
	Node0x4c1e6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%76:\l76:                                               \l  %77 = add nsw i32 %73, %14\l  %78 = getelementptr inbounds float, float addrspace(3)* %10, i32 %77\l  %79 = load float, float addrspace(3)* %78, align 4, !tbaa !7\l  %80 = load float, float addrspace(3)* %15, align 4, !tbaa !7\l  %81 = fadd contract float %79, %80\l  store float %81, float addrspace(3)* %15, align 4, !tbaa !7\l  br label %82\l}"];
	Node0x4c1e6b0 -> Node0x4c1e140;
	Node0x4c1e140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%82:\l82:                                               \l  %83 = icmp eq i32 %73, 1\l  br i1 %83, label %84, label %70, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4c1e140:s0 -> Node0x4c1ce10;
	Node0x4c1e140:s1 -> Node0x4c1ce60;
	Node0x4c1ce10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%84:\l84:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %17, label %86, label %85\l|{<s0>T|<s1>F}}"];
	Node0x4c1ce10:s0 -> Node0x4c1ee80;
	Node0x4c1ce10:s1 -> Node0x4c1eed0;
	Node0x4c1eed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%85:\l85:                                               \l  ret void\l}"];
	Node0x4c1ee80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  %87 = phi i32 [ %97, %96 ], [ 0, %84 ]\l  %88 = add i32 %87, %14\l  %89 = icmp slt i32 %88, %2\l  br i1 %89, label %90, label %96\l|{<s0>T|<s1>F}}"];
	Node0x4c1ee80:s0 -> Node0x4c1f280;
	Node0x4c1ee80:s1 -> Node0x4c1f060;
	Node0x4c1f280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%90:\l90:                                               \l  %91 = load float, float addrspace(3)* %10, align 4, !tbaa !7\l  %92 = sext i32 %88 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %13, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7\l  %95 = fdiv contract float %94, %91\l  store float %95, float addrspace(1)* %93, align 4, !tbaa !7\l  br label %96\l}"];
	Node0x4c1f280 -> Node0x4c1f060;
	Node0x4c1f060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%96:\l96:                                               \l  %97 = add i32 %87, %9\l  %98 = icmp slt i32 %97, %2\l  br i1 %98, label %86, label %85, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4c1f060:s0 -> Node0x4c1ee80;
	Node0x4c1f060:s1 -> Node0x4c1eed0;
}
