digraph "CFG for '_Z15g_One_wgrad_AddPfS_S_iiif' function" {
	label="CFG for '_Z15g_One_wgrad_AddPfS_S_iiif' function";

	Node0x601e580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @_sum,\l... i32 0, i32 %10\l  store float 0.000000e+00, float addrspace(3)* %11, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %12 = icmp sgt i32 %3, 0\l  br i1 %12, label %13, label %20\l|{<s0>T|<s1>F}}"];
	Node0x601e580:s0 -> Node0x6020dd0;
	Node0x601e580:s1 -> Node0x6020e60;
	Node0x6020dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%13:\l13:                                               \l  %14 = mul nsw i32 %8, %3\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !9, !invariant.load\l... !10\l  %19 = zext i16 %18 to i32\l  br label %22\l}"];
	Node0x6020dd0 -> Node0x60217d0;
	Node0x6020e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%20:\l20:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %21 = icmp eq i32 %3, 1\l  br i1 %21, label %52, label %38\l|{<s0>T|<s1>F}}"];
	Node0x6020e60:s0 -> Node0x6021b10;
	Node0x6020e60:s1 -> Node0x6021b60;
	Node0x60217d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = phi i32 [ 0, %13 ], [ %36, %35 ]\l  %24 = add i32 %23, %10\l  %25 = icmp slt i32 %24, %3\l  br i1 %25, label %26, label %35\l|{<s0>T|<s1>F}}"];
	Node0x60217d0:s0 -> Node0x6021f00;
	Node0x60217d0:s1 -> Node0x6021ca0;
	Node0x6021f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%26:\l26:                                               \l  %27 = add i32 %24, %14\l  %28 = mul i32 %27, %4\l  %29 = add nsw i32 %28, %9\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !5,\l... !amdgpu.noclobber !10\l  %33 = load float, float addrspace(3)* %11, align 4, !tbaa !5\l  %34 = fadd contract float %32, %33\l  store float %34, float addrspace(3)* %11, align 4, !tbaa !5\l  br label %35\l}"];
	Node0x6021f00 -> Node0x6021ca0;
	Node0x6021ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = add i32 %23, %19\l  %37 = icmp slt i32 %36, %3\l  br i1 %37, label %22, label %20, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x6021ca0:s0 -> Node0x60217d0;
	Node0x6021ca0:s1 -> Node0x6020e60;
	Node0x6021b60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%38:\l38:                                               \l  %39 = phi i32 [ %41, %50 ], [ %3, %20 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %40 = add nsw i32 %39, 1\l  %41 = ashr i32 %40, 1\l  %42 = ashr i32 %39, 1\l  %43 = icmp slt i32 %10, %42\l  br i1 %43, label %44, label %50\l|{<s0>T|<s1>F}}"];
	Node0x6021b60:s0 -> Node0x6023ab0;
	Node0x6021b60:s1 -> Node0x6023580;
	Node0x6023ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%44:\l44:                                               \l  %45 = add nsw i32 %41, %10\l  %46 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @_sum,\l... i32 0, i32 %45\l  %47 = load float, float addrspace(3)* %46, align 4, !tbaa !5\l  %48 = load float, float addrspace(3)* %11, align 4, !tbaa !5\l  %49 = fadd contract float %47, %48\l  store float %49, float addrspace(3)* %11, align 4, !tbaa !5\l  br label %50\l}"];
	Node0x6023ab0 -> Node0x6023580;
	Node0x6023580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%50:\l50:                                               \l  %51 = icmp eq i32 %41, 1\l  br i1 %51, label %52, label %38, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x6023580:s0 -> Node0x6021b10;
	Node0x6023580:s1 -> Node0x6021b60;
	Node0x6021b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%52:\l52:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %53 = icmp eq i32 %10, 0\l  br i1 %53, label %54, label %66\l|{<s0>T|<s1>F}}"];
	Node0x6021b10:s0 -> Node0x6024330;
	Node0x6021b10:s1 -> Node0x6024380;
	Node0x6024330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%54:\l54:                                               \l  %55 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @_sum, i32 0, i32 0), align 4, !tbaa !5\l  %56 = sitofp i32 %3 to float\l  %57 = fdiv contract float %55, %56\l  %58 = mul nsw i32 %8, %4\l  %59 = add nsw i32 %58, %9\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %2, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !5\l  %63 = fmul contract float %62, %6\l  %64 = fadd contract float %57, %63\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  store float %64, float addrspace(1)* %65, align 4, !tbaa !5\l  br label %66\l}"];
	Node0x6024330 -> Node0x6024380;
	Node0x6024380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%66:\l66:                                               \l  ret void\l}"];
}
