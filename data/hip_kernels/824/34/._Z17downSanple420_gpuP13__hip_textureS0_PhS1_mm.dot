digraph "CFG for '_Z17downSanple420_gpuP13__hip_textureS0_PhS1_mm' function" {
	label="CFG for '_Z17downSanple420_gpuP13__hip_textureS0_PhS1_mm' function";

	Node0x4f1ee50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = sext i32 %15 to i64\l  %17 = icmp ult i64 %16, %4\l  br i1 %17, label %18, label %111\l|{<s0>T|<s1>F}}"];
	Node0x4f1ee50:s0 -> Node0x4f23670;
	Node0x4f1ee50:s1 -> Node0x4f23700;
	Node0x4f23670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%18:\l18:                                               \l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = shl i32 %26, 1\l  %28 = sext i32 %27 to i64\l  %29 = icmp ult i64 %28, %5\l  br i1 %29, label %30, label %111\l|{<s0>T|<s1>F}}"];
	Node0x4f23670:s0 -> Node0x4f25360;
	Node0x4f23670:s1 -> Node0x4f23700;
	Node0x4f25360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%30:\l30:                                               \l  %31 = lshr i64 %4, 1\l  %32 = icmp ugt i64 %31, %16\l  %33 = trunc i64 %31 to i32\l  %34 = select i1 %32, i8 addrspace(1)* %2, i8 addrspace(1)* %3\l  %35 = select i1 %32, %struct.__hip_texture addrspace(1)* %0,\l... %struct.__hip_texture addrspace(1)* %1\l  %36 = select i1 %32, i32 0, i32 %33\l  %37 = sub i32 %15, %36\l  %38 = shl i32 %37, 1\l  %39 = sitofp i32 %38 to float\l  %40 = sitofp i32 %27 to float\l  %41 = bitcast %struct.__hip_texture addrspace(1)* %35 to i32 addrspace(1)*\l  %42 = addrspacecast i32 addrspace(1)* %41 to i32 addrspace(4)*\l  %43 = getelementptr inbounds i32, i32 addrspace(4)* %42, i64 12\l  %44 = getelementptr inbounds i32, i32 addrspace(4)* %42, i64 10\l  %45 = load i32, i32 addrspace(4)* %44, align 4, !tbaa !7\l  %46 = uitofp i32 %45 to float\l  %47 = getelementptr inbounds i32, i32 addrspace(4)* %42, i64 2\l  %48 = load i32, i32 addrspace(4)* %47, align 4, !tbaa !7\l  %49 = lshr i32 %48, 14\l  %50 = and i32 %49, 16383\l  %51 = add nuw nsw i32 %50, 1\l  %52 = uitofp i32 %51 to float\l  %53 = load i32, i32 addrspace(4)* %43, align 4, !tbaa !7\l  %54 = and i32 %53, 32768\l  %55 = icmp eq i32 %54, 0\l  %56 = select i1 %55, float %46, float 1.000000e+00\l  %57 = select i1 %55, float %52, float 1.000000e+00\l  %58 = getelementptr inbounds i32, i32 addrspace(4)* %42, i64 14\l  %59 = load i32, i32 addrspace(4)* %58, align 4, !tbaa !7\l  %60 = and i32 %59, 1048576\l  %61 = icmp eq i32 %60, 0\l  %62 = bitcast i32 addrspace(4)* %43 to \<4 x i32\> addrspace(4)*\l  %63 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %62, align 16, !tbaa !11\l  %64 = bitcast %struct.__hip_texture addrspace(1)* %35 to \<8 x i32\>\l... addrspace(1)*\l  %65 = addrspacecast \<8 x i32\> addrspace(1)* %64 to \<8 x i32\> addrspace(4)*\l  %66 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %65, align 32, !tbaa !11\l  %67 = tail call float @llvm.amdgcn.rcp.f32(float %57)\l  %68 = fmul float %57, %40\l  %69 = tail call float @llvm.floor.f32(float %68)\l  %70 = fmul float %67, %69\l  %71 = select i1 %61, float %70, float %40\l  %72 = tail call float @llvm.amdgcn.rcp.f32(float %56)\l  %73 = fmul float %56, %39\l  %74 = tail call float @llvm.floor.f32(float %73)\l  %75 = fmul float %72, %74\l  %76 = select i1 %61, float %75, float %39\l  %77 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %76, float %71, \<8 x i32\> %66, \<4 x i32\> %63, i1 false, i32 0, i32 0)\l  %78 = bitcast float %77 to i32\l  %79 = and i32 %78, 65535\l  %80 = add nuw nsw i32 %38, 1\l  %81 = sitofp i32 %80 to float\l  %82 = fmul float %56, %81\l  %83 = tail call float @llvm.floor.f32(float %82)\l  %84 = fmul float %72, %83\l  %85 = select i1 %61, float %84, float %81\l  %86 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %85, float %71, \<8 x i32\> %66, \<4 x i32\> %63, i1 false, i32 0, i32 0)\l  %87 = bitcast float %86 to i32\l  %88 = add nuw nsw i32 %27, 1\l  %89 = sitofp i32 %88 to float\l  %90 = fmul float %57, %89\l  %91 = tail call float @llvm.floor.f32(float %90)\l  %92 = fmul float %67, %91\l  %93 = select i1 %61, float %92, float %89\l  %94 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %76, float %93, \<8 x i32\> %66, \<4 x i32\> %63, i1 false, i32 0, i32 0)\l  %95 = bitcast float %94 to i32\l  %96 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %85, float %93, \<8 x i32\> %66, \<4 x i32\> %63, i1 false, i32 0, i32 0)\l  %97 = bitcast float %96 to i32\l  %98 = add nuw nsw i32 %79, 1\l  %99 = add i32 %98, %87\l  %100 = add i32 %99, %95\l  %101 = add i32 %100, %97\l  %102 = lshr i32 %101, 2\l  %103 = trunc i32 %102 to i8\l  %104 = ashr exact i32 %27, 1\l  %105 = sext i32 %104 to i64\l  %106 = mul i64 %105, %4\l  %107 = sext i32 %38 to i64\l  %108 = add i64 %106, %107\l  %109 = lshr i64 %108, 1\l  %110 = getelementptr inbounds i8, i8 addrspace(1)* %34, i64 %109\l  store i8 %103, i8 addrspace(1)* %110, align 1, !tbaa !12\l  br label %111\l}"];
	Node0x4f25360 -> Node0x4f23700;
	Node0x4f23700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  ret void\l}"];
}
