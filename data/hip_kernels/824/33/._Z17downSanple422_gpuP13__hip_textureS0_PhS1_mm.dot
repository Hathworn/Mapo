digraph "CFG for '_Z17downSanple422_gpuP13__hip_textureS0_PhS1_mm' function" {
	label="CFG for '_Z17downSanple422_gpuP13__hip_textureS0_PhS1_mm' function";

	Node0x46d5b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = sext i32 %15 to i64\l  %25 = icmp ult i64 %24, %4\l  %26 = sext i32 %23 to i64\l  %27 = icmp ult i64 %26, %5\l  %28 = select i1 %25, i1 %27, i1 false\l  br i1 %28, label %29, label %94\l|{<s0>T|<s1>F}}"];
	Node0x46d5b00:s0 -> Node0x46dbec0;
	Node0x46d5b00:s1 -> Node0x46dbf50;
	Node0x46dbec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = lshr i64 %4, 1\l  %31 = icmp ugt i64 %30, %24\l  %32 = trunc i64 %30 to i32\l  %33 = select i1 %31, i8 addrspace(1)* %2, i8 addrspace(1)* %3\l  %34 = select i1 %31, %struct.__hip_texture addrspace(1)* %0,\l... %struct.__hip_texture addrspace(1)* %1\l  %35 = select i1 %31, i32 0, i32 %32\l  %36 = sub i32 %15, %35\l  %37 = shl i32 %36, 1\l  %38 = sitofp i32 %37 to float\l  %39 = sitofp i32 %23 to float\l  %40 = bitcast %struct.__hip_texture addrspace(1)* %34 to i32 addrspace(1)*\l  %41 = addrspacecast i32 addrspace(1)* %40 to i32 addrspace(4)*\l  %42 = getelementptr inbounds i32, i32 addrspace(4)* %41, i64 12\l  %43 = getelementptr inbounds i32, i32 addrspace(4)* %41, i64 10\l  %44 = load i32, i32 addrspace(4)* %43, align 4, !tbaa !7\l  %45 = uitofp i32 %44 to float\l  %46 = getelementptr inbounds i32, i32 addrspace(4)* %41, i64 2\l  %47 = load i32, i32 addrspace(4)* %46, align 4, !tbaa !7\l  %48 = lshr i32 %47, 14\l  %49 = and i32 %48, 16383\l  %50 = add nuw nsw i32 %49, 1\l  %51 = uitofp i32 %50 to float\l  %52 = load i32, i32 addrspace(4)* %42, align 4, !tbaa !7\l  %53 = and i32 %52, 32768\l  %54 = icmp eq i32 %53, 0\l  %55 = select i1 %54, float %45, float 1.000000e+00\l  %56 = select i1 %54, float %51, float 1.000000e+00\l  %57 = getelementptr inbounds i32, i32 addrspace(4)* %41, i64 14\l  %58 = load i32, i32 addrspace(4)* %57, align 4, !tbaa !7\l  %59 = and i32 %58, 1048576\l  %60 = icmp eq i32 %59, 0\l  %61 = bitcast i32 addrspace(4)* %42 to \<4 x i32\> addrspace(4)*\l  %62 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %61, align 16, !tbaa !11\l  %63 = bitcast %struct.__hip_texture addrspace(1)* %34 to \<8 x i32\>\l... addrspace(1)*\l  %64 = addrspacecast \<8 x i32\> addrspace(1)* %63 to \<8 x i32\> addrspace(4)*\l  %65 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %64, align 32, !tbaa !11\l  %66 = tail call float @llvm.amdgcn.rcp.f32(float %56)\l  %67 = fmul float %56, %39\l  %68 = tail call float @llvm.floor.f32(float %67)\l  %69 = fmul float %66, %68\l  %70 = select i1 %60, float %69, float %39\l  %71 = tail call float @llvm.amdgcn.rcp.f32(float %55)\l  %72 = fmul float %55, %38\l  %73 = tail call float @llvm.floor.f32(float %72)\l  %74 = fmul float %71, %73\l  %75 = select i1 %60, float %74, float %38\l  %76 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %75, float %70, \<8 x i32\> %65, \<4 x i32\> %62, i1 false, i32 0, i32 0)\l  %77 = bitcast float %76 to i32\l  %78 = add nuw nsw i32 %37, 1\l  %79 = sitofp i32 %78 to float\l  %80 = fmul float %55, %79\l  %81 = tail call float @llvm.floor.f32(float %80)\l  %82 = fmul float %71, %81\l  %83 = select i1 %60, float %82, float %79\l  %84 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %83, float %70, \<8 x i32\> %65, \<4 x i32\> %62, i1 false, i32 0, i32 0)\l  %85 = bitcast float %84 to i32\l  %86 = add i32 %85, %77\l  %87 = lshr i32 %86, 1\l  %88 = trunc i32 %87 to i8\l  %89 = mul i64 %26, %4\l  %90 = sext i32 %37 to i64\l  %91 = add i64 %89, %90\l  %92 = lshr i64 %91, 1\l  %93 = getelementptr inbounds i8, i8 addrspace(1)* %33, i64 %92\l  store i8 %88, i8 addrspace(1)* %93, align 1, !tbaa !12\l  br label %94\l}"];
	Node0x46dbec0 -> Node0x46dbf50;
	Node0x46dbf50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  ret void\l}"];
}
