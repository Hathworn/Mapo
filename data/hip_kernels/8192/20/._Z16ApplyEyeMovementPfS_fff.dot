digraph "CFG for '_Z16ApplyEyeMovementPfS_fff' function" {
	label="CFG for '_Z16ApplyEyeMovementPfS_fff' function";

	Node0x468fa80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = getelementptr inbounds float, float addrspace(1)* %1, i64 4\l  %7 = load float, float addrspace(1)* %6, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %8 = fcmp contract ogt float %7, 0.000000e+00\l  br i1 %8, label %9, label %52\l|{<s0>T|<s1>F}}"];
	Node0x468fa80:s0 -> Node0x468ece0;
	Node0x468fa80:s1 -> Node0x4691a60;
	Node0x468ece0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%9:\l9:                                                \l  %10 = load float, float addrspace(1)* %1, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %11 = fmul contract float %10, %2\l  %12 = tail call float @llvm.minnum.f32(float %11, float 1.000000e+00)\l  %13 = tail call float @llvm.maxnum.f32(float %12, float -1.000000e+00)\l  store float %13, float addrspace(1)* %0, align 4, !tbaa !4\l  %14 = getelementptr inbounds float, float addrspace(1)* %1, i64 1\l  %15 = load float, float addrspace(1)* %14, align 4, !tbaa !4\l  %16 = fmul contract float %15, %2\l  %17 = tail call float @llvm.minnum.f32(float %16, float 1.000000e+00)\l  %18 = tail call float @llvm.maxnum.f32(float %17, float -1.000000e+00)\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 1\l  store float %18, float addrspace(1)* %19, align 4, !tbaa !4\l  %20 = getelementptr inbounds float, float addrspace(1)* %1, i64 2\l  %21 = bitcast float addrspace(1)* %20 to \<2 x float\> addrspace(1)*\l  %22 = load \<2 x float\>, \<2 x float\> addrspace(1)* %21, align 4, !tbaa !4\l  %23 = extractelement \<2 x float\> %22, i64 0\l  %24 = extractelement \<2 x float\> %22, i64 1\l  %25 = fadd contract float %23, %24\l  %26 = fmul contract float %25, 5.000000e-01\l  %27 = fcmp olt float %26, 0x39F0000000000000\l  %28 = select i1 %27, float 0x41F0000000000000, float 1.000000e+00\l  %29 = fmul float %26, %28\l  %30 = tail call float @llvm.sqrt.f32(float %29)\l  %31 = bitcast float %30 to i32\l  %32 = add nsw i32 %31, -1\l  %33 = bitcast i32 %32 to float\l  %34 = add nsw i32 %31, 1\l  %35 = bitcast i32 %34 to float\l  %36 = tail call i1 @llvm.amdgcn.class.f32(float %29, i32 608)\l  %37 = select i1 %27, float 0x3EF0000000000000, float 1.000000e+00\l  %38 = fneg float %35\l  %39 = tail call float @llvm.fma.f32(float %38, float %30, float %29)\l  %40 = fcmp ogt float %39, 0.000000e+00\l  %41 = fneg float %33\l  %42 = tail call float @llvm.fma.f32(float %41, float %30, float %29)\l  %43 = fcmp ole float %42, 0.000000e+00\l  %44 = select i1 %43, float %33, float %30\l  %45 = select i1 %40, float %35, float %44\l  %46 = fmul float %37, %45\l  %47 = select i1 %36, float %29, float %46\l  %48 = fmul contract float %47, %3\l  %49 = fadd contract float %48, %4\l  %50 = tail call float @llvm.minnum.f32(float %49, float 1.000000e+00)\l  %51 = tail call float @llvm.maxnum.f32(float %50, float 0.000000e+00)\l  br label %54\l}"];
	Node0x468ece0 -> Node0x4695630;
	Node0x4691a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%52:\l52:                                               \l  store float 0.000000e+00, float addrspace(1)* %0, align 4, !tbaa !4\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 1\l  store float 0.000000e+00, float addrspace(1)* %53, align 4, !tbaa !4\l  br label %54\l}"];
	Node0x4691a60 -> Node0x4695630;
	Node0x4695630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = phi float [ %51, %9 ], [ 1.000000e+00, %52 ]\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 2\l  store float %55, float addrspace(1)* %56, align 4\l  ret void\l}"];
}
