digraph "CFG for '_Z25CumulateThroughTimeKernelPfii' function" {
	label="CFG for '_Z25CumulateThroughTimeKernelPfii' function";

	Node0x48c0530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !6\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = udiv i32 %11, %8\l  %15 = mul i32 %14, %8\l  %16 = icmp ugt i32 %11, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = mul i32 %18, %13\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %21 = add i32 %19, %12\l  %22 = mul i32 %21, %8\l  %23 = add i32 %22, %20\l  %24 = icmp slt i32 %23, %1\l  br i1 %24, label %25, label %126\l|{<s0>T|<s1>F}}"];
	Node0x48c0530:s0 -> Node0x48c2de0;
	Node0x48c0530:s1 -> Node0x48c2e70;
	Node0x48c2de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%25:\l25:                                               \l  %26 = sext i32 %2 to i64\l  %27 = icmp ugt i32 %2, 1\l  br i1 %27, label %28, label %126\l|{<s0>T|<s1>F}}"];
	Node0x48c2de0:s0 -> Node0x48c30b0;
	Node0x48c2de0:s1 -> Node0x48c2e70;
	Node0x48c30b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%28:\l28:                                               \l  %29 = sext i32 %23 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %0, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !16\l  %32 = add nsw i64 %26, -1\l  %33 = add nsw i64 %26, -2\l  %34 = and i64 %32, 7\l  %35 = icmp ult i64 %33, 7\l  br i1 %35, label %108, label %36\l|{<s0>T|<s1>F}}"];
	Node0x48c30b0:s0 -> Node0x48c3820;
	Node0x48c30b0:s1 -> Node0x48c38b0;
	Node0x48c38b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%36:\l36:                                               \l  %37 = and i64 %32, -8\l  br label %38\l}"];
	Node0x48c38b0 -> Node0x48c3ab0;
	Node0x48c3ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%38:\l38:                                               \l  %39 = phi float [ %31, %36 ], [ %104, %38 ]\l  %40 = phi i64 [ 1, %36 ], [ %105, %38 ]\l  %41 = phi i64 [ 0, %36 ], [ %106, %38 ]\l  %42 = trunc i64 %40 to i32\l  %43 = mul i32 %42, %1\l  %44 = add nsw i32 %43, %23\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !16\l  %48 = fadd contract float %47, %39\l  store float %48, float addrspace(1)* %30, align 4, !tbaa !16\l  %49 = trunc i64 %40 to i32\l  %50 = add i32 %49, 1\l  %51 = mul i32 %50, %1\l  %52 = add nsw i32 %51, %23\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %56 = fadd contract float %55, %48\l  store float %56, float addrspace(1)* %30, align 4, !tbaa !16\l  %57 = trunc i64 %40 to i32\l  %58 = add i32 %57, 2\l  %59 = mul i32 %58, %1\l  %60 = add nsw i32 %59, %23\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !16\l  %64 = fadd contract float %63, %56\l  store float %64, float addrspace(1)* %30, align 4, !tbaa !16\l  %65 = trunc i64 %40 to i32\l  %66 = add i32 %65, 3\l  %67 = mul i32 %66, %1\l  %68 = add nsw i32 %67, %23\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %0, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !16\l  %72 = fadd contract float %71, %64\l  store float %72, float addrspace(1)* %30, align 4, !tbaa !16\l  %73 = trunc i64 %40 to i32\l  %74 = add i32 %73, 4\l  %75 = mul i32 %74, %1\l  %76 = add nsw i32 %75, %23\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !16\l  %80 = fadd contract float %79, %72\l  store float %80, float addrspace(1)* %30, align 4, !tbaa !16\l  %81 = trunc i64 %40 to i32\l  %82 = add i32 %81, 5\l  %83 = mul i32 %82, %1\l  %84 = add nsw i32 %83, %23\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !16\l  %88 = fadd contract float %87, %80\l  store float %88, float addrspace(1)* %30, align 4, !tbaa !16\l  %89 = trunc i64 %40 to i32\l  %90 = add i32 %89, 6\l  %91 = mul i32 %90, %1\l  %92 = add nsw i32 %91, %23\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %0, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !16\l  %96 = fadd contract float %95, %88\l  store float %96, float addrspace(1)* %30, align 4, !tbaa !16\l  %97 = trunc i64 %40 to i32\l  %98 = add i32 %97, 7\l  %99 = mul i32 %98, %1\l  %100 = add nsw i32 %99, %23\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %0, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !16\l  %104 = fadd contract float %103, %96\l  store float %104, float addrspace(1)* %30, align 4, !tbaa !16\l  %105 = add nuw i64 %40, 8\l  %106 = add i64 %41, 8\l  %107 = icmp eq i64 %106, %37\l  br i1 %107, label %108, label %38, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x48c3ab0:s0 -> Node0x48c3820;
	Node0x48c3ab0:s1 -> Node0x48c3ab0;
	Node0x48c3820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%108:\l108:                                              \l  %109 = phi float [ %31, %28 ], [ %104, %38 ]\l  %110 = phi i64 [ 1, %28 ], [ %105, %38 ]\l  %111 = icmp eq i64 %34, 0\l  br i1 %111, label %126, label %112\l|{<s0>T|<s1>F}}"];
	Node0x48c3820:s0 -> Node0x48c2e70;
	Node0x48c3820:s1 -> Node0x48c72a0;
	Node0x48c72a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%112:\l112:                                              \l  %113 = phi float [ %122, %112 ], [ %109, %108 ]\l  %114 = phi i64 [ %123, %112 ], [ %110, %108 ]\l  %115 = phi i64 [ %124, %112 ], [ 0, %108 ]\l  %116 = trunc i64 %114 to i32\l  %117 = mul i32 %116, %1\l  %118 = add nsw i32 %117, %23\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %0, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !16\l  %122 = fadd contract float %121, %113\l  store float %122, float addrspace(1)* %30, align 4, !tbaa !16\l  %123 = add nuw i64 %114, 1\l  %124 = add i64 %115, 1\l  %125 = icmp eq i64 %124, %34\l  br i1 %125, label %126, label %112, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x48c72a0:s0 -> Node0x48c2e70;
	Node0x48c72a0:s1 -> Node0x48c72a0;
	Node0x48c2e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%126:\l126:                                              \l  ret void\l}"];
}
