digraph "CFG for '_Z31LSTMCellInputGradientKernelBPTTPfS_S_S_iii' function" {
	label="CFG for '_Z31LSTMCellInputGradientKernelBPTTPfS_S_S_iii' function";

	Node0x4f2da40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = udiv i32 %15, %12\l  %19 = mul i32 %18, %12\l  %20 = icmp ugt i32 %15, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %17\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %25 = add i32 %23, %16\l  %26 = mul i32 %25, %12\l  %27 = add i32 %26, %24\l  %28 = add nsw i32 %5, %4\l  %29 = add nsw i32 %28, 1\l  %30 = mul nsw i32 %29, %5\l  %31 = icmp slt i32 %27, %30\l  br i1 %31, label %32, label %67\l|{<s0>T|<s1>F}}"];
	Node0x4f2da40:s0 -> Node0x4f30460;
	Node0x4f2da40:s1 -> Node0x4f304f0;
	Node0x4f30460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = freeze i32 %27\l  %34 = freeze i32 %29\l  %35 = sdiv i32 %33, %34\l  %36 = mul i32 %35, %34\l  %37 = sub i32 %33, %36\l  %38 = icmp sgt i32 %37, -1\l  %39 = icmp slt i32 %37, %4\l  %40 = select i1 %38, i1 %39, i1 false\l  %41 = icmp slt i32 %37, %28\l  %42 = xor i1 %39, true\l  %43 = select i1 %42, i1 %41, i1 false\l  %44 = icmp eq i32 %37, %28\l  %45 = uitofp i1 %40 to float\l  %46 = sext i32 %37 to i64\l  %47 = select i1 %40, i64 %46, i64 0\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %50 = fmul contract float %49, %45\l  %51 = uitofp i1 %43 to float\l  %52 = sub nsw i32 %37, %4\l  %53 = sext i32 %52 to i64\l  %54 = select i1 %43, i64 %53, i64 0\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %57 = fmul contract float %56, %51\l  %58 = fadd contract float %50, %57\l  %59 = uitofp i1 %44 to float\l  %60 = fadd contract float %58, %59\l  %61 = sext i32 %35 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %2, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %64 = fmul contract float %63, %60\l  %65 = sext i32 %27 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %3, i64 %65\l  store float %64, float addrspace(1)* %66, align 4, !tbaa !16\l  br label %67\l}"];
	Node0x4f30460 -> Node0x4f304f0;
	Node0x4f304f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  ret void\l}"];
}
