digraph "CFG for '_Z47BilinearResampleSubImageKernel_ForManyProposalsPKfPfS0_biiiiiii' function" {
	label="CFG for '_Z47BilinearResampleSubImageKernel_ForManyProposalsPKfPfS0_biiiiiii' function";

	Node0x4ff1c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !6\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = udiv i32 %19, %16\l  %23 = mul i32 %22, %16\l  %24 = icmp ugt i32 %19, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %29 = add i32 %27, %20\l  %30 = mul i32 %29, %16\l  %31 = add i32 %30, %28\l  %32 = freeze i32 %31\l  %33 = freeze i32 %7\l  %34 = sdiv i32 %32, %33\l  %35 = mul i32 %34, %33\l  %36 = sub i32 %32, %35\l  %37 = freeze i32 %8\l  %38 = sdiv i32 %34, %37\l  %39 = mul i32 %38, %37\l  %40 = sub i32 %34, %39\l  %41 = icmp slt i32 %31, %10\l  br i1 %41, label %42, label %153\l|{<s0>T|<s1>F}}"];
	Node0x4ff1c70:s0 -> Node0x4ff5890;
	Node0x4ff1c70:s1 -> Node0x4ff5920;
	Node0x4ff5890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%42:\l42:                                               \l  %43 = mul nsw i32 %38, %4\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %2, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %47 = add nsw i32 %43, 1\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %2, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %51 = add nsw i32 %43, 2\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %2, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %55 = add nsw i32 %5, -1\l  %56 = add nsw i32 %6, -1\l  %57 = tail call i32 @llvm.smin.i32(i32 %55, i32 %56)\l  %58 = sitofp i32 %57 to float\l  %59 = fmul contract float %54, %58\l  %60 = fptosi float %59 to i32\l  %61 = tail call i32 @llvm.smax.i32(i32 %60, i32 1)\l  %62 = tail call i32 @llvm.smin.i32(i32 %57, i32 %61)\l  %63 = sitofp i32 %5 to float\l  %64 = fadd contract float %46, 1.000000e+00\l  %65 = fmul contract float %64, %63\l  %66 = fmul contract float %65, 5.000000e-01\l  %67 = fptosi float %66 to i32\l  %68 = sdiv i32 %62, 2\l  %69 = sub nsw i32 %67, %68\l  %70 = sitofp i32 %6 to float\l  %71 = fadd contract float %50, 1.000000e+00\l  %72 = fmul contract float %71, %70\l  %73 = fmul contract float %72, 5.000000e-01\l  %74 = fptosi float %73 to i32\l  %75 = sub nsw i32 %74, %68\l  br i1 %3, label %76, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4ff5890:s0 -> Node0x4ff8b00;
	Node0x4ff5890:s1 -> Node0x4ff8b50;
	Node0x4ff8b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%76:\l76:                                               \l  %77 = tail call i32 @llvm.smax.i32(i32 %69, i32 1)\l  %78 = tail call i32 @llvm.smax.i32(i32 %75, i32 1)\l  %79 = xor i32 %62, -1\l  %80 = add i32 %79, %5\l  %81 = tail call i32 @llvm.smin.i32(i32 %77, i32 %80)\l  %82 = add i32 %79, %6\l  %83 = tail call i32 @llvm.smin.i32(i32 %78, i32 %82)\l  br label %84\l}"];
	Node0x4ff8b00 -> Node0x4ff8b50;
	Node0x4ff8b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%84:\l84:                                               \l  %85 = phi i32 [ %83, %76 ], [ %75, %42 ]\l  %86 = phi i32 [ %81, %76 ], [ %69, %42 ]\l  %87 = add nsw i32 %62, -1\l  %88 = sitofp i32 %87 to float\l  %89 = add nsw i32 %7, -1\l  %90 = sitofp i32 %89 to float\l  %91 = fdiv contract float %88, %90\l  %92 = add nsw i32 %8, -1\l  %93 = sitofp i32 %92 to float\l  %94 = fdiv contract float %88, %93\l  %95 = sitofp i32 %36 to float\l  %96 = fmul contract float %91, %95\l  %97 = fptosi float %96 to i32\l  %98 = sitofp i32 %40 to float\l  %99 = fmul contract float %94, %98\l  %100 = fptosi float %99 to i32\l  %101 = add i32 %86, %97\l  %102 = icmp sgt i32 %101, -1\l  br i1 %102, label %103, label %153\l|{<s0>T|<s1>F}}"];
	Node0x4ff8b50:s0 -> Node0x4ff9c70;
	Node0x4ff8b50:s1 -> Node0x4ff5920;
	Node0x4ff9c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%103:\l103:                                              \l  %104 = add nsw i32 %85, %100\l  %105 = icmp sgt i32 %104, -1\l  %106 = icmp slt i32 %101, %5\l  %107 = select i1 %105, i1 %106, i1 false\l  %108 = icmp slt i32 %104, %6\l  %109 = select i1 %107, i1 %108, i1 false\l  br i1 %109, label %110, label %153\l|{<s0>T|<s1>F}}"];
	Node0x4ff9c70:s0 -> Node0x4ffa110;
	Node0x4ff9c70:s1 -> Node0x4ff5920;
	Node0x4ffa110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%110:\l110:                                              \l  %111 = sitofp i32 %97 to float\l  %112 = fsub contract float %96, %111\l  %113 = sitofp i32 %100 to float\l  %114 = fsub contract float %99, %113\l  %115 = mul nsw i32 %104, %5\l  %116 = add i32 %101, %115\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %0, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %120 = add nsw i32 %116, 1\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %0, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %124 = add nuw nsw i32 %104, 1\l  %125 = mul nsw i32 %124, %5\l  %126 = add i32 %101, %125\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds float, float addrspace(1)* %0, i64 %127\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %130 = add nsw i32 %126, 1\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %0, i64 %131\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %134 = fsub contract float 1.000000e+00, %112\l  %135 = fmul contract float %134, %119\l  %136 = fsub contract float 1.000000e+00, %114\l  %137 = fmul contract float %136, %135\l  %138 = fmul contract float %112, %123\l  %139 = fmul contract float %136, %138\l  %140 = fadd contract float %137, %139\l  %141 = fmul contract float %114, %129\l  %142 = fmul contract float %134, %141\l  %143 = fadd contract float %140, %142\l  %144 = fmul contract float %112, %133\l  %145 = fmul contract float %114, %144\l  %146 = fadd contract float %143, %145\l  %147 = mul i32 %38, %8\l  %148 = add i32 %147, %40\l  %149 = mul i32 %148, %7\l  %150 = add i32 %149, %36\l  %151 = sext i32 %150 to i64\l  %152 = getelementptr inbounds float, float addrspace(1)* %1, i64 %151\l  store float %146, float addrspace(1)* %152, align 4, !tbaa !16\l  br label %153\l}"];
	Node0x4ffa110 -> Node0x4ff5920;
	Node0x4ff5920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%153:\l153:                                              \l  ret void\l}"];
}
