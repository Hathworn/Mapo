digraph "CFG for '_Z24PrepareDerivativesKernelPfS_S_ii' function" {
	label="CFG for '_Z24PrepareDerivativesKernelPfS_S_ii' function";

	Node0x470db00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = udiv i32 %13, %10\l  %17 = mul i32 %16, %10\l  %18 = icmp ugt i32 %13, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %15\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %23 = add i32 %21, %14\l  %24 = mul i32 %23, %10\l  %25 = add i32 %24, %22\l  %26 = mul nsw i32 %4, %3\l  %27 = icmp slt i32 %25, %26\l  br i1 %27, label %28, label %61\l|{<s0>T|<s1>F}}"];
	Node0x470db00:s0 -> Node0x47103e0;
	Node0x470db00:s1 -> Node0x4710470;
	Node0x47103e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%28:\l28:                                               \l  %29 = sext i32 %25 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %2, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %32 = fmul contract float %31, 1.000000e+05\l  %33 = add nsw i32 %25, %26\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %37 = fmul contract float %36, 1.000000e+05\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %29\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %29\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %42 = fsub contract float %39, %41\l  %43 = fmul contract float %42, 1.000000e+05\l  store float %39, float addrspace(1)* %40, align 4, !tbaa !16\l  %44 = fmul contract float %32, %37\l  %45 = shl nsw i32 %26, 1\l  %46 = add nsw i32 %25, %45\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %47\l  store float %44, float addrspace(1)* %48, align 4, !tbaa !16\l  %49 = fmul contract float %32, %43\l  %50 = mul nsw i32 %26, 3\l  %51 = add nsw i32 %25, %50\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %2, i64 %52\l  store float %49, float addrspace(1)* %53, align 4, !tbaa !16\l  %54 = fmul contract float %37, %43\l  %55 = shl nsw i32 %26, 2\l  %56 = add nsw i32 %25, %55\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %2, i64 %57\l  store float %54, float addrspace(1)* %58, align 4, !tbaa !16\l  %59 = fmul contract float %32, %32\l  store float %59, float addrspace(1)* %30, align 4, !tbaa !16\l  %60 = fmul contract float %37, %37\l  store float %60, float addrspace(1)* %35, align 4, !tbaa !16\l  br label %61\l}"];
	Node0x47103e0 -> Node0x4710470;
	Node0x4710470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  ret void\l}"];
}
