digraph "CFG for '_Z13WinnersKernelPfS_iS_fi' function" {
	label="CFG for '_Z13WinnersKernelPfS_iS_fi' function";

	Node0x63bf170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = udiv i32 %14, %11\l  %18 = mul i32 %17, %11\l  %19 = icmp ugt i32 %14, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %16\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %24 = add i32 %22, %15\l  %25 = mul i32 %24, %11\l  %26 = add i32 %25, %23\l  %27 = icmp slt i32 %26, %5\l  br i1 %27, label %28, label %88\l|{<s0>T|<s1>F}}"];
	Node0x63bf170:s0 -> Node0x63c1980;
	Node0x63bf170:s1 -> Node0x63c1a10;
	Node0x63c1980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%28:\l28:                                               \l  %29 = sext i32 %26 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %0, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %32 = fcmp contract oeq float %31, 1.000000e+00\l  br i1 %32, label %33, label %88\l|{<s0>T|<s1>F}}"];
	Node0x63c1980:s0 -> Node0x63c0fd0;
	Node0x63c1980:s1 -> Node0x63c1a10;
	Node0x63c0fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%33:\l33:                                               \l  %34 = mul nsw i32 %26, 3\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %3, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %38 = add nsw i32 %34, 1\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %3, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %42 = add nsw i32 %34, 2\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %3, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %46 = fmul contract float %4, 0x3FF3333340000000\l  %47 = fmul contract float %46, 5.000000e-01\l  %48 = fsub contract float %37, %47\l  %49 = sext i32 %2 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  store float %48, float addrspace(1)* %50, align 4, !tbaa !16\l  %51 = fsub contract float %41, %47\l  %52 = add nsw i32 %2, 1\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  store float %51, float addrspace(1)* %54, align 4, !tbaa !16\l  %55 = fsub contract float %45, %47\l  %56 = add nsw i32 %2, 2\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  store float %55, float addrspace(1)* %58, align 4, !tbaa !16\l  %59 = add nsw i32 %2, 3\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  store float %48, float addrspace(1)* %61, align 4, !tbaa !16\l  %62 = add nsw i32 %2, 4\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %1, i64 %63\l  store float %51, float addrspace(1)* %64, align 4, !tbaa !16\l  %65 = fadd contract float %47, %45\l  %66 = add nsw i32 %2, 5\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  store float %65, float addrspace(1)* %68, align 4, !tbaa !16\l  %69 = fadd contract float %47, %37\l  %70 = add nsw i32 %2, 6\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %71\l  store float %69, float addrspace(1)* %72, align 4, !tbaa !16\l  %73 = add nsw i32 %2, 7\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %74\l  store float %51, float addrspace(1)* %75, align 4, !tbaa !16\l  %76 = add nsw i32 %2, 8\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %77\l  store float %65, float addrspace(1)* %78, align 4, !tbaa !16\l  %79 = add nsw i32 %2, 9\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  store float %69, float addrspace(1)* %81, align 4, !tbaa !16\l  %82 = add nsw i32 %2, 10\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %1, i64 %83\l  store float %51, float addrspace(1)* %84, align 4, !tbaa !16\l  %85 = add nsw i32 %2, 11\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  store float %55, float addrspace(1)* %87, align 4, !tbaa !16\l  br label %88\l}"];
	Node0x63c0fd0 -> Node0x63c1a10;
	Node0x63c1a10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  ret void\l}"];
}
