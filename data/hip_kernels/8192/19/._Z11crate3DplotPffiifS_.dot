digraph "CFG for '_Z11crate3DplotPffiifS_' function" {
	label="CFG for '_Z11crate3DplotPffiifS_' function";

	Node0x4a8f4f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = udiv i32 %14, %11\l  %18 = mul i32 %17, %11\l  %19 = icmp ugt i32 %14, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %16\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %24 = add i32 %22, %15\l  %25 = mul i32 %24, %11\l  %26 = add i32 %25, %23\l  %27 = mul nsw i32 %3, %2\l  %28 = sitofp i32 %2 to float\l  %29 = fdiv contract float 1.000000e+00, %28\l  %30 = sitofp i32 %3 to float\l  %31 = fdiv contract float 1.000000e+00, %30\l  %32 = freeze i32 %26\l  %33 = freeze i32 %3\l  %34 = sdiv i32 %32, %33\l  %35 = mul i32 %34, %33\l  %36 = sub i32 %32, %35\l  %37 = sub nsw i32 %3, %36\l  %38 = icmp slt i32 %26, %27\l  br i1 %38, label %39, label %157\l|{<s0>T|<s1>F}}"];
	Node0x4a8f4f0:s0 -> Node0x4a92de0;
	Node0x4a8f4f0:s1 -> Node0x4a92e70;
	Node0x4a92de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%39:\l39:                                               \l  %40 = add nsw i32 %37, -1\l  %41 = sext i32 %26 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %44 = fdiv contract float %43, %4\l  %45 = bitcast float addrspace(1)* %5 to %struct.HIP_vector_type addrspace(1)*\l  %46 = mul nsw i32 %27, 60\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %5, i64 %47\l  %49 = bitcast float addrspace(1)* %48 to %struct.HIP_vector_type.0\l... addrspace(1)*\l  %50 = sitofp i32 %34 to float\l  %51 = fmul contract float %50, %1\l  %52 = fadd contract float %51, 0.000000e+00\l  %53 = shl nsw i32 %26, 2\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %45, i64 %54\l  %56 = getelementptr %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(1)* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0\l  store float %52, float addrspace(1)* %56, align 4, !tbaa !20\l  %57 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %45, i64 %54, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float %44, float addrspace(1)* %57, align 4, !tbaa !20\l  %58 = sitofp i32 %40 to float\l  %59 = fmul contract float %58, %1\l  %60 = fadd contract float %59, 0.000000e+00\l  %61 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %45, i64 %54, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  store float %60, float addrspace(1)* %61, align 4, !tbaa !20\l  %62 = fmul contract float %29, %50\l  %63 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %49, i64 %54, i32 0, i32 0, i32 0,\l... i64 0\l  store float %62, float addrspace(1)* %63, align 8, !tbaa !20\l  %64 = fmul contract float %31, %58\l  %65 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %49, i64 %54, i32 0, i32 0, i32 0,\l... i64 1\l  store float %64, float addrspace(1)* %65, align 4, !tbaa !20\l  %66 = add nsw i32 %34, 1\l  %67 = sitofp i32 %66 to float\l  %68 = fmul contract float %67, %1\l  %69 = add nuw nsw i32 %53, 1\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %45, i64 %70\l  %72 = getelementptr %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(1)* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0\l  store float %68, float addrspace(1)* %72, align 4, !tbaa !20\l  %73 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %45, i64 %70, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float %44, float addrspace(1)* %73, align 4, !tbaa !20\l  %74 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %45, i64 %70, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  store float %60, float addrspace(1)* %74, align 4, !tbaa !20\l  %75 = fmul contract float %29, %67\l  %76 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %49, i64 %70, i32 0, i32 0, i32 0,\l... i64 0\l  store float %75, float addrspace(1)* %76, align 8, !tbaa !20\l  %77 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %49, i64 %70, i32 0, i32 0, i32 0,\l... i64 1\l  store float %64, float addrspace(1)* %77, align 4, !tbaa !20\l  %78 = add nuw nsw i32 %53, 2\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %45, i64 %79\l  %81 = getelementptr %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(1)* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0\l  store float %68, float addrspace(1)* %81, align 4, !tbaa !20\l  %82 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %45, i64 %79, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float %44, float addrspace(1)* %82, align 4, !tbaa !20\l  %83 = sitofp i32 %37 to float\l  %84 = fmul contract float %83, %1\l  %85 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %45, i64 %79, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  store float %84, float addrspace(1)* %85, align 4, !tbaa !20\l  %86 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %49, i64 %79, i32 0, i32 0, i32 0,\l... i64 0\l  store float %75, float addrspace(1)* %86, align 8, !tbaa !20\l  %87 = fmul contract float %31, %83\l  %88 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %49, i64 %79, i32 0, i32 0, i32 0,\l... i64 1\l  store float %87, float addrspace(1)* %88, align 4, !tbaa !20\l  %89 = add nuw nsw i32 %53, 3\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %45, i64 %90\l  %92 = getelementptr %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(1)* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0\l  store float %52, float addrspace(1)* %92, align 4, !tbaa !20\l  %93 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %45, i64 %90, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float %44, float addrspace(1)* %93, align 4, !tbaa !20\l  %94 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %45, i64 %90, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  store float %84, float addrspace(1)* %94, align 4, !tbaa !20\l  %95 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %49, i64 %90, i32 0, i32 0, i32 0,\l... i64 0\l  store float %62, float addrspace(1)* %95, align 8, !tbaa !20\l  %96 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %49, i64 %90, i32 0, i32 0, i32 0,\l... i64 1\l  store float %87, float addrspace(1)* %96, align 4, !tbaa !20\l  %97 = mul nsw i32 %27, 12\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %5, i64 %98\l  %100 = bitcast float addrspace(1)* %99 to %struct.HIP_vector_type\l... addrspace(1)*\l  %101 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %100, i64 %54\l  %102 = bitcast %struct.HIP_vector_type addrspace(1)* %101 to i8 addrspace(1)*\l  %103 = bitcast %struct.HIP_vector_type addrspace(1)* %55 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %102, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %103, i64 12, i1 false)\l  %104 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %100, i64 %54, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float 0.000000e+00, float addrspace(1)* %104, align 4, !tbaa !20\l  %105 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %100, i64 %70\l  %106 = bitcast %struct.HIP_vector_type addrspace(1)* %105 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %106, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %103, i64 12, i1 false)\l  %107 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %100, i64 %79\l  %108 = bitcast %struct.HIP_vector_type addrspace(1)* %107 to i8 addrspace(1)*\l  %109 = bitcast %struct.HIP_vector_type addrspace(1)* %91 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %108, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %109, i64 12, i1 false)\l  %110 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %100, i64 %90\l  %111 = bitcast %struct.HIP_vector_type addrspace(1)* %110 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %111, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %109, i64 12, i1 false)\l  %112 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %100, i64 %90, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float 0.000000e+00, float addrspace(1)* %112, align 4, !tbaa !20\l  %113 = mul nsw i32 %27, 24\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %5, i64 %114\l  %116 = bitcast float addrspace(1)* %115 to %struct.HIP_vector_type\l... addrspace(1)*\l  %117 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %116, i64 %54\l  %118 = bitcast %struct.HIP_vector_type addrspace(1)* %117 to i8 addrspace(1)*\l  %119 = bitcast %struct.HIP_vector_type addrspace(1)* %80 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %118, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %119, i64 12, i1 false)\l  %120 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %116, i64 %54, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float 0.000000e+00, float addrspace(1)* %120, align 4, !tbaa !20\l  %121 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %116, i64 %70\l  %122 = bitcast %struct.HIP_vector_type addrspace(1)* %121 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %122, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %109, i64 12, i1 false)\l  %123 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %116, i64 %70, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float 0.000000e+00, float addrspace(1)* %123, align 4, !tbaa !20\l  %124 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %116, i64 %79\l  %125 = bitcast %struct.HIP_vector_type addrspace(1)* %124 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %125, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %109, i64 12, i1 false)\l  %126 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %116, i64 %90\l  %127 = bitcast %struct.HIP_vector_type addrspace(1)* %126 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %127, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %119, i64 12, i1 false)\l  %128 = mul nsw i32 %27, 36\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %5, i64 %129\l  %131 = bitcast float addrspace(1)* %130 to %struct.HIP_vector_type\l... addrspace(1)*\l  %132 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %131, i64 %54\l  %133 = bitcast %struct.HIP_vector_type addrspace(1)* %132 to i8 addrspace(1)*\l  %134 = bitcast %struct.HIP_vector_type addrspace(1)* %71 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %133, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %134, i64 12, i1 false)\l  %135 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %131, i64 %54, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float 0.000000e+00, float addrspace(1)* %135, align 4, !tbaa !20\l  %136 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %131, i64 %70\l  %137 = bitcast %struct.HIP_vector_type addrspace(1)* %136 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %137, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %103, i64 12, i1 false)\l  %138 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %131, i64 %70, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float 0.000000e+00, float addrspace(1)* %138, align 4, !tbaa !20\l  %139 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %131, i64 %79\l  %140 = bitcast %struct.HIP_vector_type addrspace(1)* %139 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %140, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %103, i64 12, i1 false)\l  %141 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %131, i64 %90\l  %142 = bitcast %struct.HIP_vector_type addrspace(1)* %141 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %142, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %134, i64 12, i1 false)\l  %143 = mul nsw i32 %27, 48\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %5, i64 %144\l  %146 = bitcast float addrspace(1)* %145 to %struct.HIP_vector_type\l... addrspace(1)*\l  %147 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %146, i64 %54\l  %148 = bitcast %struct.HIP_vector_type addrspace(1)* %147 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %148, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %119, i64 12, i1 false)\l  %149 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %146, i64 %54, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float 0.000000e+00, float addrspace(1)* %149, align 4, !tbaa !20\l  %150 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %146, i64 %70\l  %151 = bitcast %struct.HIP_vector_type addrspace(1)* %150 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %151, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %119, i64 12, i1 false)\l  %152 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %146, i64 %79\l  %153 = bitcast %struct.HIP_vector_type addrspace(1)* %152 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %153, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %134, i64 12, i1 false)\l  %154 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %146, i64 %90\l  %155 = bitcast %struct.HIP_vector_type addrspace(1)* %154 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %155, i8 addrspace(1)* noundef align 4\l... dereferenceable(12) %134, i64 12, i1 false)\l  %156 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %146, i64 %90, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float 0.000000e+00, float addrspace(1)* %156, align 4, !tbaa !20\l  br label %157\l}"];
	Node0x4a92de0 -> Node0x4a92e70;
	Node0x4a92e70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%157:\l157:                                              \l  ret void\l}"];
}
