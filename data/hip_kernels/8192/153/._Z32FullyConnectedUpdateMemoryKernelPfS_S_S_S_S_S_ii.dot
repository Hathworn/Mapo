digraph "CFG for '_Z32FullyConnectedUpdateMemoryKernelPfS_S_S_S_S_S_ii' function" {
	label="CFG for '_Z32FullyConnectedUpdateMemoryKernelPfS_S_S_S_S_S_ii' function";

	Node0x4c4a760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#dc5d4a70",label="{%9:\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !6\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = udiv i32 %17, %14\l  %21 = mul i32 %20, %14\l  %22 = icmp ugt i32 %17, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %19\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %27 = add i32 %25, %18\l  %28 = mul i32 %27, %14\l  %29 = add i32 %28, %26\l  %30 = icmp slt i32 %29, %8\l  br i1 %30, label %31, label %102\l|{<s0>T|<s1>F}}"];
	Node0x4c4a760:s0 -> Node0x4c4dd70;
	Node0x4c4a760:s1 -> Node0x4c4de00;
	Node0x4c4dd70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%31:\l31:                                               \l  %32 = sext i32 %29 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %6, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %35 = fcmp contract une float %34, 0.000000e+00\l  br i1 %35, label %102, label %36\l|{<s0>T|<s1>F}}"];
	Node0x4c4dd70:s0 -> Node0x4c4de00;
	Node0x4c4dd70:s1 -> Node0x4c4f430;
	Node0x4c4f430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%36:\l36:                                               \l  %37 = icmp sgt i32 %7, 0\l  br i1 %37, label %38, label %90\l|{<s0>T|<s1>F}}"];
	Node0x4c4f430:s0 -> Node0x4c4f600;
	Node0x4c4f430:s1 -> Node0x4c4f650;
	Node0x4c4f600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%38:\l38:                                               \l  %39 = and i32 %7, 1\l  %40 = icmp eq i32 %7, 1\l  br i1 %40, label %74, label %41\l|{<s0>T|<s1>F}}"];
	Node0x4c4f600:s0 -> Node0x4c4f8e0;
	Node0x4c4f600:s1 -> Node0x4c4f930;
	Node0x4c4f930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%41:\l41:                                               \l  %42 = and i32 %7, -2\l  br label %43\l}"];
	Node0x4c4f930 -> Node0x4c4fb30;
	Node0x4c4fb30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi i32 [ %29, %41 ], [ %71, %43 ]\l  %45 = phi i32 [ 0, %41 ], [ %72, %43 ]\l  %46 = sext i32 %44 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !16\l  %49 = fmul contract float %48, %48\l  %50 = getelementptr inbounds float, float addrspace(1)* %2, i64 %46\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !16\l  %52 = fdiv contract float %49, %51\l  %53 = fsub contract float 1.000000e+00, %52\l  %54 = getelementptr inbounds float, float addrspace(1)* %4, i64 %46\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %56 = fmul contract float %55, %53\l  %57 = fadd contract float %56, 1.000000e+00\l  store float %57, float addrspace(1)* %54, align 4, !tbaa !16\l  %58 = add nsw i32 %44, %8\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !16\l  %62 = fmul contract float %61, %61\l  %63 = getelementptr inbounds float, float addrspace(1)* %2, i64 %59\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !16\l  %65 = fdiv contract float %62, %64\l  %66 = fsub contract float 1.000000e+00, %65\l  %67 = getelementptr inbounds float, float addrspace(1)* %4, i64 %59\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !16\l  %69 = fmul contract float %68, %66\l  %70 = fadd contract float %69, 1.000000e+00\l  store float %70, float addrspace(1)* %67, align 4, !tbaa !16\l  %71 = add nsw i32 %58, %8\l  %72 = add i32 %45, 2\l  %73 = icmp eq i32 %72, %42\l  br i1 %73, label %74, label %43, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4c4fb30:s0 -> Node0x4c4f8e0;
	Node0x4c4fb30:s1 -> Node0x4c4fb30;
	Node0x4c4f8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%74:\l74:                                               \l  %75 = phi i32 [ %29, %38 ], [ %71, %43 ]\l  %76 = icmp eq i32 %39, 0\l  br i1 %76, label %90, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4c4f8e0:s0 -> Node0x4c4f650;
	Node0x4c4f8e0:s1 -> Node0x4c51970;
	Node0x4c51970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%77:\l77:                                               \l  %78 = sext i32 %75 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !16\l  %81 = fmul contract float %80, %80\l  %82 = getelementptr inbounds float, float addrspace(1)* %2, i64 %78\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !16\l  %84 = fdiv contract float %81, %83\l  %85 = fsub contract float 1.000000e+00, %84\l  %86 = getelementptr inbounds float, float addrspace(1)* %4, i64 %78\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !16\l  %88 = fmul contract float %87, %85\l  %89 = fadd contract float %88, 1.000000e+00\l  store float %89, float addrspace(1)* %86, align 4, !tbaa !16\l  br label %90\l}"];
	Node0x4c51970 -> Node0x4c4f650;
	Node0x4c4f650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%90:\l90:                                               \l  %91 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !16\l  %93 = fmul contract float %92, %92\l  %94 = getelementptr inbounds float, float addrspace(1)* %3, i64 %32\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !16\l  %96 = fdiv contract float %93, %95\l  %97 = fsub contract float 1.000000e+00, %96\l  %98 = getelementptr inbounds float, float addrspace(1)* %5, i64 %32\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !16\l  %100 = fmul contract float %99, %97\l  %101 = fadd contract float %100, 1.000000e+00\l  store float %101, float addrspace(1)* %98, align 4, !tbaa !16\l  br label %102\l}"];
	Node0x4c4f650 -> Node0x4c4de00;
	Node0x4c4de00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#dc5d4a70",label="{%102:\l102:                                              \l  ret void\l}"];
}
