digraph "CFG for '_Z36FullyConnectedUpdateParametersKernelPfS_S_S_S_S_S_ii' function" {
	label="CFG for '_Z36FullyConnectedUpdateParametersKernelPfS_S_S_S_S_S_ii' function";

	Node0x57ef4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%9:\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !6\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = udiv i32 %17, %14\l  %21 = mul i32 %20, %14\l  %22 = icmp ugt i32 %17, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %19\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %27 = add i32 %25, %18\l  %28 = mul i32 %27, %14\l  %29 = add i32 %28, %26\l  %30 = icmp slt i32 %29, %8\l  br i1 %30, label %31, label %155\l|{<s0>T|<s1>F}}"];
	Node0x57ef4e0:s0 -> Node0x57f2b00;
	Node0x57ef4e0:s1 -> Node0x57f2b90;
	Node0x57f2b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%31:\l31:                                               \l  %32 = sext i32 %29 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %6, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %35 = fcmp contract une float %34, 0.000000e+00\l  br i1 %35, label %155, label %36\l|{<s0>T|<s1>F}}"];
	Node0x57f2b00:s0 -> Node0x57f2b90;
	Node0x57f2b00:s1 -> Node0x57f41c0;
	Node0x57f41c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%36:\l36:                                               \l  %37 = icmp sgt i32 %7, 0\l  br i1 %37, label %38, label %146\l|{<s0>T|<s1>F}}"];
	Node0x57f41c0:s0 -> Node0x57f4390;
	Node0x57f41c0:s1 -> Node0x57f43e0;
	Node0x57f4390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%38:\l38:                                               \l  %39 = and i32 %7, 7\l  %40 = icmp ult i32 %7, 8\l  br i1 %40, label %128, label %41\l|{<s0>T|<s1>F}}"];
	Node0x57f4390:s0 -> Node0x57f46a0;
	Node0x57f4390:s1 -> Node0x57f46f0;
	Node0x57f46f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%41:\l41:                                               \l  %42 = and i32 %7, -8\l  br label %43\l}"];
	Node0x57f46f0 -> Node0x57f48f0;
	Node0x57f48f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%43:\l43:                                               \l  %44 = phi i32 [ %29, %41 ], [ %125, %43 ]\l  %45 = phi i32 [ 0, %41 ], [ %126, %43 ]\l  %46 = sext i32 %44 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %2, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !16\l  %49 = getelementptr inbounds float, float addrspace(1)* %4, i64 %46\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !16\l  %51 = fmul contract float %48, %50\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !16\l  %54 = fsub contract float %53, %51\l  store float %54, float addrspace(1)* %52, align 4, !tbaa !16\l  %55 = add nsw i32 %44, %8\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %2, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !16\l  %59 = getelementptr inbounds float, float addrspace(1)* %4, i64 %56\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !16\l  %61 = fmul contract float %58, %60\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !16\l  %64 = fsub contract float %63, %61\l  store float %64, float addrspace(1)* %62, align 4, !tbaa !16\l  %65 = add nsw i32 %55, %8\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %2, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !16\l  %69 = getelementptr inbounds float, float addrspace(1)* %4, i64 %66\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !16\l  %71 = fmul contract float %68, %70\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !16\l  %74 = fsub contract float %73, %71\l  store float %74, float addrspace(1)* %72, align 4, !tbaa !16\l  %75 = add nsw i32 %65, %8\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %2, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !16\l  %79 = getelementptr inbounds float, float addrspace(1)* %4, i64 %76\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !16\l  %81 = fmul contract float %78, %80\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !16\l  %84 = fsub contract float %83, %81\l  store float %84, float addrspace(1)* %82, align 4, !tbaa !16\l  %85 = add nsw i32 %75, %8\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %2, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !16\l  %89 = getelementptr inbounds float, float addrspace(1)* %4, i64 %86\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !16\l  %91 = fmul contract float %88, %90\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !16\l  %94 = fsub contract float %93, %91\l  store float %94, float addrspace(1)* %92, align 4, !tbaa !16\l  %95 = add nsw i32 %85, %8\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %2, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !16\l  %99 = getelementptr inbounds float, float addrspace(1)* %4, i64 %96\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !16\l  %101 = fmul contract float %98, %100\l  %102 = getelementptr inbounds float, float addrspace(1)* %0, i64 %96\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !16\l  %104 = fsub contract float %103, %101\l  store float %104, float addrspace(1)* %102, align 4, !tbaa !16\l  %105 = add nsw i32 %95, %8\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %2, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !16\l  %109 = getelementptr inbounds float, float addrspace(1)* %4, i64 %106\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !16\l  %111 = fmul contract float %108, %110\l  %112 = getelementptr inbounds float, float addrspace(1)* %0, i64 %106\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !16\l  %114 = fsub contract float %113, %111\l  store float %114, float addrspace(1)* %112, align 4, !tbaa !16\l  %115 = add nsw i32 %105, %8\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %2, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !16\l  %119 = getelementptr inbounds float, float addrspace(1)* %4, i64 %116\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !16\l  %121 = fmul contract float %118, %120\l  %122 = getelementptr inbounds float, float addrspace(1)* %0, i64 %116\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !16\l  %124 = fsub contract float %123, %121\l  store float %124, float addrspace(1)* %122, align 4, !tbaa !16\l  %125 = add nsw i32 %115, %8\l  %126 = add i32 %45, 8\l  %127 = icmp eq i32 %126, %42\l  br i1 %127, label %128, label %43, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x57f48f0:s0 -> Node0x57f46a0;
	Node0x57f48f0:s1 -> Node0x57f48f0;
	Node0x57f46a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%128:\l128:                                              \l  %129 = phi i32 [ %29, %38 ], [ %125, %43 ]\l  %130 = icmp eq i32 %39, 0\l  br i1 %130, label %146, label %131\l|{<s0>T|<s1>F}}"];
	Node0x57f46a0:s0 -> Node0x57f43e0;
	Node0x57f46a0:s1 -> Node0x57f5dd0;
	Node0x57f5dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%131:\l131:                                              \l  %132 = phi i32 [ %143, %131 ], [ %129, %128 ]\l  %133 = phi i32 [ %144, %131 ], [ 0, %128 ]\l  %134 = sext i32 %132 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %2, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !16\l  %137 = getelementptr inbounds float, float addrspace(1)* %4, i64 %134\l  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !16\l  %139 = fmul contract float %136, %138\l  %140 = getelementptr inbounds float, float addrspace(1)* %0, i64 %134\l  %141 = load float, float addrspace(1)* %140, align 4, !tbaa !16\l  %142 = fsub contract float %141, %139\l  store float %142, float addrspace(1)* %140, align 4, !tbaa !16\l  %143 = add nsw i32 %132, %8\l  %144 = add i32 %133, 1\l  %145 = icmp eq i32 %144, %39\l  br i1 %145, label %146, label %131, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x57f5dd0:s0 -> Node0x57f43e0;
	Node0x57f5dd0:s1 -> Node0x57f5dd0;
	Node0x57f43e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%146:\l146:                                              \l  %147 = getelementptr inbounds float, float addrspace(1)* %3, i64 %32\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !16\l  %149 = getelementptr inbounds float, float addrspace(1)* %5, i64 %32\l  %150 = load float, float addrspace(1)* %149, align 4, !tbaa !16\l  %151 = fmul contract float %148, %150\l  %152 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  %153 = load float, float addrspace(1)* %152, align 4, !tbaa !16\l  %154 = fsub contract float %153, %151\l  store float %154, float addrspace(1)* %152, align 4, !tbaa !16\l  br label %155\l}"];
	Node0x57f43e0 -> Node0x57f2b90;
	Node0x57f2b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%155:\l155:                                              \l  ret void\l}"];
}
