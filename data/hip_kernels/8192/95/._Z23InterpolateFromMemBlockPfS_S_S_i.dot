digraph "CFG for '_Z23InterpolateFromMemBlockPfS_S_S_i' function" {
	label="CFG for '_Z23InterpolateFromMemBlockPfS_S_S_i' function";

	Node0x473aa80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = udiv i32 %13, %10\l  %17 = mul i32 %16, %10\l  %18 = icmp ugt i32 %13, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %15\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %23 = add i32 %21, %14\l  %24 = mul i32 %23, %10\l  %25 = add i32 %24, %22\l  %26 = icmp slt i32 %25, %4\l  br i1 %26, label %27, label %54\l|{<s0>T|<s1>F}}"];
	Node0x473aa80:s0 -> Node0x473d2d0;
	Node0x473aa80:s1 -> Node0x473d360;
	Node0x473d2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%27:\l27:                                               \l  %28 = load float, float addrspace(1)* %3, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %29 = fcmp contract ugt float %28, 0.000000e+00\l  br i1 %29, label %34, label %30\l|{<s0>T|<s1>F}}"];
	Node0x473d2d0:s0 -> Node0x473e780;
	Node0x473d2d0:s1 -> Node0x473e810;
	Node0x473e810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%30:\l30:                                               \l  %31 = sext i32 %25 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  br label %50\l}"];
	Node0x473e810 -> Node0x473ca20;
	Node0x473e780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%34:\l34:                                               \l  %35 = fcmp contract ult float %28, 1.000000e+00\l  br i1 %35, label %40, label %36\l|{<s0>T|<s1>F}}"];
	Node0x473e780:s0 -> Node0x473f380;
	Node0x473e780:s1 -> Node0x473f410;
	Node0x473f410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%36:\l36:                                               \l  %37 = sext i32 %25 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  br label %50\l}"];
	Node0x473f410 -> Node0x473ca20;
	Node0x473f380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%40:\l40:                                               \l  %41 = fsub contract float 1.000000e+00, %28\l  %42 = sext i32 %25 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %45 = fmul contract float %41, %44\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %48 = fmul contract float %28, %47\l  %49 = fadd contract float %45, %48\l  br label %50\l}"];
	Node0x473f380 -> Node0x473ca20;
	Node0x473ca20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%50:\l50:                                               \l  %51 = phi i64 [ %31, %30 ], [ %42, %40 ], [ %37, %36 ]\l  %52 = phi float [ %33, %30 ], [ %49, %40 ], [ %39, %36 ]\l  %53 = getelementptr inbounds float, float addrspace(1)* %2, i64 %51\l  store float %52, float addrspace(1)* %53, align 4, !tbaa !16\l  br label %54\l}"];
	Node0x473ca20 -> Node0x473d360;
	Node0x473d360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  ret void\l}"];
}
