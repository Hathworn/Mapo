digraph "CFG for '_Z23NewNodeConnectionKerneliiiPiS_S_Pffif' function" {
	label="CFG for '_Z23NewNodeConnectionKerneliiiPiS_S_Pffif' function";

	Node0x5c8c290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !6\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = udiv i32 %18, %15\l  %22 = mul i32 %21, %15\l  %23 = icmp ugt i32 %18, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %20\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %28 = add i32 %26, %19\l  %29 = mul i32 %28, %15\l  %30 = add i32 %29, %27\l  %31 = icmp slt i32 %30, 1\l  br i1 %31, label %32, label %76\l|{<s0>T|<s1>F}}"];
	Node0x5c8c290:s0 -> Node0x5c8f8b0;
	Node0x5c8c290:s1 -> Node0x5c8f940;
	Node0x5c8f8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%32:\l32:                                               \l  %33 = sext i32 %2 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %33\l  store i32 1, i32 addrspace(1)* %34, align 4, !tbaa !16\l  %35 = mul nsw i32 %8, %1\l  %36 = add nsw i32 %35, %0\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %37\l  store i32 0, i32 addrspace(1)* %38, align 4, !tbaa !16\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %37\l  store i32 0, i32 addrspace(1)* %39, align 4, !tbaa !16\l  %40 = mul nsw i32 %8, %0\l  %41 = add nsw i32 %40, %1\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %42\l  store i32 0, i32 addrspace(1)* %43, align 4, !tbaa !16\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %42\l  store i32 0, i32 addrspace(1)* %44, align 4, !tbaa !16\l  %45 = add nsw i32 %35, %2\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %46\l  store i32 1, i32 addrspace(1)* %47, align 4, !tbaa !16\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %46\l  store i32 0, i32 addrspace(1)* %48, align 4, !tbaa !16\l  %49 = mul nsw i32 %8, %2\l  %50 = add nsw i32 %49, %1\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %51\l  store i32 1, i32 addrspace(1)* %52, align 4, !tbaa !16\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %51\l  store i32 0, i32 addrspace(1)* %53, align 4, !tbaa !16\l  %54 = add nsw i32 %40, %2\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %55\l  store i32 1, i32 addrspace(1)* %56, align 4, !tbaa !16\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %55\l  store i32 0, i32 addrspace(1)* %57, align 4, !tbaa !16\l  %58 = add nsw i32 %49, %0\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %59\l  store i32 1, i32 addrspace(1)* %60, align 4, !tbaa !16\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %59\l  store i32 0, i32 addrspace(1)* %61, align 4, !tbaa !16\l  %62 = sext i32 %1 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %6, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %65 = fmul contract float %64, %7\l  %66 = fsub contract float %64, %65\l  store float %66, float addrspace(1)* %63, align 4, !tbaa !20\l  %67 = sext i32 %0 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %6, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !20\l  %70 = fmul contract float %69, %7\l  %71 = fsub contract float %69, %70\l  store float %71, float addrspace(1)* %68, align 4, !tbaa !20\l  %72 = load float, float addrspace(1)* %63, align 4, !tbaa !20\l  %73 = fadd contract float %72, %71\l  %74 = fmul contract float %73, %9\l  %75 = getelementptr inbounds float, float addrspace(1)* %6, i64 %33\l  store float %74, float addrspace(1)* %75, align 4, !tbaa !20\l  br label %76\l}"];
	Node0x5c8f8b0 -> Node0x5c8f940;
	Node0x5c8f940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  ret void\l}"];
}
