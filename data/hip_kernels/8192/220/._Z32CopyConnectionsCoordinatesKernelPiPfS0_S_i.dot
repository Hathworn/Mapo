digraph "CFG for '_Z32CopyConnectionsCoordinatesKernelPiPfS0_S_i' function" {
	label="CFG for '_Z32CopyConnectionsCoordinatesKernelPiPfS0_S_i' function";

	Node0x6264fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = udiv i32 %13, %10\l  %17 = mul i32 %16, %10\l  %18 = icmp ugt i32 %13, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %15\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %23 = add i32 %21, %14\l  %24 = mul i32 %23, %10\l  %25 = add i32 %24, %22\l  %26 = mul nsw i32 %4, %4\l  %27 = icmp slt i32 %25, %26\l  br i1 %27, label %28, label %84\l|{<s0>T|<s1>F}}"];
	Node0x6264fa0:s0 -> Node0x6267880;
	Node0x6264fa0:s1 -> Node0x6267910;
	Node0x6267880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%28:\l28:                                               \l  %29 = sext i32 %25 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %32 = icmp eq i32 %31, 1\l  br i1 %32, label %33, label %84\l|{<s0>T|<s1>F}}"];
	Node0x6267880:s0 -> Node0x6266ed0;
	Node0x6267880:s1 -> Node0x6267910;
	Node0x6266ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%33:\l33:                                               \l  %34 = freeze i32 %25\l  %35 = freeze i32 %4\l  %36 = sdiv i32 %34, %35\l  %37 = mul i32 %36, %35\l  %38 = sub i32 %34, %37\l  %39 = icmp sgt i32 %38, %36\l  br i1 %39, label %40, label %84\l|{<s0>T|<s1>F}}"];
	Node0x6266ed0:s0 -> Node0x6268960;
	Node0x6266ed0:s1 -> Node0x6267910;
	Node0x6268960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%40:\l40:                                               \l  %41 = atomicrmw add i32 addrspace(1)* %3, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %42 = mul nsw i32 %36, 3\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !20\l  %46 = mul nsw i32 %41, 6\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %47\l  store float %45, float addrspace(1)* %48, align 4, !tbaa !20\l  %49 = add nsw i32 %42, 1\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %1, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !20\l  %53 = or i32 %46, 1\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %2, i64 %54\l  store float %52, float addrspace(1)* %55, align 4, !tbaa !20\l  %56 = add nsw i32 %42, 2\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !20\l  %60 = add nsw i32 %46, 2\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %2, i64 %61\l  store float %59, float addrspace(1)* %62, align 4, !tbaa !20\l  %63 = mul nsw i32 %38, 3\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !20\l  %67 = add nsw i32 %46, 3\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %2, i64 %68\l  store float %66, float addrspace(1)* %69, align 4, !tbaa !20\l  %70 = add nsw i32 %63, 1\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !20\l  %74 = add nsw i32 %46, 4\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %2, i64 %75\l  store float %73, float addrspace(1)* %76, align 4, !tbaa !20\l  %77 = add nsw i32 %63, 2\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %1, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !20\l  %81 = add nsw i32 %46, 5\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %2, i64 %82\l  store float %80, float addrspace(1)* %83, align 4, !tbaa !20\l  br label %84\l}"];
	Node0x6268960 -> Node0x6267910;
	Node0x6267910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  ret void\l}"];
}
