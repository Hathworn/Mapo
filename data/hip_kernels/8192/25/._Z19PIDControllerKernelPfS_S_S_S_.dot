digraph "CFG for '_Z19PIDControllerKernelPfS_S_S_S_' function" {
	label="CFG for '_Z19PIDControllerKernelPfS_S_S_S_' function";

	Node0x59e72b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = udiv i32 %13, %10\l  %17 = mul i32 %16, %10\l  %18 = icmp ugt i32 %13, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %15\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %23 = add i32 %21, %14\l  %24 = mul i32 %23, %10\l  %25 = add i32 %24, %22\l  %26 = load i32, i32 addrspace(4)* @D_COUNT, align 4, !tbaa !16\l  %27 = icmp slt i32 %25, %26\l  br i1 %27, label %28, label %61\l|{<s0>T|<s1>F}}"];
	Node0x59e72b0:s0 -> Node0x59e96a0;
	Node0x59e72b0:s1 -> Node0x59e9730;
	Node0x59e96a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%28:\l28:                                               \l  %29 = sext i32 %25 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %0, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %32 = getelementptr inbounds float, float addrspace(1)* %1, i64 %29\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %34 = fsub contract float %31, %33\l  %35 = load float, float addrspace(4)* @D_INTEGRAL_DECAY, align 4, !tbaa !20\l  %36 = getelementptr inbounds float, float addrspace(1)* %4, i64 %29\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %38 = fmul contract float %35, %37\l  %39 = fadd contract float %34, %38\l  store float %39, float addrspace(1)* %36, align 4, !tbaa !20\l  %40 = getelementptr inbounds float, float addrspace(1)* %3, i64 %29\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !20\l  %42 = fsub contract float %34, %41\l  store float %34, float addrspace(1)* %40, align 4, !tbaa !20\l  %43 = load float, float addrspace(4)* @D_OFFSET, align 4, !tbaa !20\l  %44 = load float, float addrspace(4)* @D_PROPORTIONAL_GAIN, align 4, !tbaa\l... !20\l  %45 = fmul contract float %34, %44\l  %46 = fadd contract float %43, %45\l  %47 = load float, float addrspace(4)* @D_INTEGRAL_GAIN, align 4, !tbaa !20\l  %48 = load float, float addrspace(1)* %36, align 4, !tbaa !20\l  %49 = fmul contract float %47, %48\l  %50 = fadd contract float %46, %49\l  %51 = load float, float addrspace(4)* @D_DERIVATIVE_GAIN, align 4, !tbaa !20\l  %52 = fmul contract float %42, %51\l  %53 = fadd contract float %50, %52\l  %54 = load float, float addrspace(4)* @D_MAX_OUTPUT, align 4, !tbaa !20\l  %55 = fcmp contract ogt float %53, %54\l  %56 = select i1 %55, float %54, float %53\l  %57 = load float, float addrspace(4)* @D_MIN_OUTPUT, align 4, !tbaa !20\l  %58 = fcmp contract olt float %56, %57\l  %59 = select i1 %58, float %57, float %56\l  %60 = getelementptr inbounds float, float addrspace(1)* %2, i64 %29\l  store float %59, float addrspace(1)* %60, align 4, !tbaa !20\l  br label %61\l}"];
	Node0x59e96a0 -> Node0x59e9730;
	Node0x59e9730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  ret void\l}"];
}
