digraph "CFG for '_Z32FullyConnectedAdjustMemoryKernelPfS_S_S_S_S_S_S_S_S_S_S_S_S_S_ii' function" {
	label="CFG for '_Z32FullyConnectedAdjustMemoryKernelPfS_S_S_S_S_S_S_S_S_S_S_S_S_S_ii' function";

	Node0x6157e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%17:\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 12\l  %24 = bitcast i8 addrspace(4)* %23 to i32 addrspace(4)*\l  %25 = load i32, i32 addrspace(4)* %24, align 4, !tbaa !6\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %27 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %28 = udiv i32 %25, %22\l  %29 = mul i32 %28, %22\l  %30 = icmp ugt i32 %25, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = mul i32 %32, %27\l  %34 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %35 = add i32 %33, %26\l  %36 = mul i32 %35, %22\l  %37 = add i32 %36, %34\l  %38 = icmp slt i32 %37, %16\l  br i1 %38, label %39, label %193\l|{<s0>T|<s1>F}}"];
	Node0x6157e30:s0 -> Node0x615b390;
	Node0x6157e30:s1 -> Node0x615b420;
	Node0x615b390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%39:\l39:                                               \l  %40 = sext i32 %37 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %14, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %43 = fcmp contract une float %42, 0.000000e+00\l  br i1 %43, label %193, label %44\l|{<s0>T|<s1>F}}"];
	Node0x615b390:s0 -> Node0x615b420;
	Node0x615b390:s1 -> Node0x615c950;
	Node0x615c950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%44:\l44:                                               \l  %45 = icmp sgt i32 %15, 0\l  br i1 %45, label %46, label %123\l|{<s0>T|<s1>F}}"];
	Node0x615c950:s0 -> Node0x615cb20;
	Node0x615c950:s1 -> Node0x615cb70;
	Node0x615cb20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i32 [ %120, %119 ], [ %37, %44 ]\l  %48 = phi i32 [ %121, %119 ], [ 0, %44 ]\l  %49 = sext i32 %47 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !16\l  %52 = getelementptr inbounds float, float addrspace(1)* %4, i64 %49\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !16\l  %54 = fsub contract float %51, %53\l  %55 = tail call float @llvm.fabs.f32(float %54)\l  %56 = getelementptr inbounds float, float addrspace(1)* %6, i64 %49\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !16\l  %58 = fcmp olt float %57, 0x39F0000000000000\l  %59 = select i1 %58, float 0x41F0000000000000, float 1.000000e+00\l  %60 = fmul float %57, %59\l  %61 = tail call float @llvm.sqrt.f32(float %60)\l  %62 = bitcast float %61 to i32\l  %63 = add nsw i32 %62, -1\l  %64 = bitcast i32 %63 to float\l  %65 = add nsw i32 %62, 1\l  %66 = bitcast i32 %65 to float\l  %67 = tail call i1 @llvm.amdgcn.class.f32(float %60, i32 608)\l  %68 = select i1 %58, float 0x3EF0000000000000, float 1.000000e+00\l  %69 = fneg float %66\l  %70 = tail call float @llvm.fma.f32(float %69, float %61, float %60)\l  %71 = fcmp ogt float %70, 0.000000e+00\l  %72 = fneg float %64\l  %73 = tail call float @llvm.fma.f32(float %72, float %61, float %60)\l  %74 = fcmp ole float %73, 0.000000e+00\l  %75 = select i1 %74, float %64, float %61\l  %76 = select i1 %71, float %66, float %75\l  %77 = fmul float %68, %76\l  %78 = select i1 %67, float %60, float %77\l  %79 = fmul contract float %78, 2.000000e+00\l  %80 = fmul contract float %53, %53\l  %81 = fsub contract float %79, %80\l  %82 = fcmp contract ogt float %55, %81\l  br i1 %82, label %117, label %83\l|{<s0>T|<s1>F}}"];
	Node0x615cb20:s0 -> Node0x615f370;
	Node0x615cb20:s1 -> Node0x615f400;
	Node0x615f400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%83:\l83:                                               \l  %84 = getelementptr inbounds float, float addrspace(1)* %2, i64 %49\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !16\l  %86 = getelementptr inbounds float, float addrspace(1)* %8, i64 %49\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !16\l  %88 = fsub contract float %85, %87\l  %89 = tail call float @llvm.fabs.f32(float %88)\l  %90 = getelementptr inbounds float, float addrspace(1)* %10, i64 %49\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !16\l  %92 = fmul contract float %91, %91\l  %93 = fsub contract float %91, %92\l  %94 = fcmp olt float %93, 0x39F0000000000000\l  %95 = select i1 %94, float 0x41F0000000000000, float 1.000000e+00\l  %96 = fmul float %93, %95\l  %97 = tail call float @llvm.sqrt.f32(float %96)\l  %98 = bitcast float %97 to i32\l  %99 = add nsw i32 %98, -1\l  %100 = bitcast i32 %99 to float\l  %101 = add nsw i32 %98, 1\l  %102 = bitcast i32 %101 to float\l  %103 = tail call i1 @llvm.amdgcn.class.f32(float %96, i32 608)\l  %104 = select i1 %94, float 0x3EF0000000000000, float 1.000000e+00\l  %105 = fneg float %102\l  %106 = tail call float @llvm.fma.f32(float %105, float %97, float %96)\l  %107 = fcmp ogt float %106, 0.000000e+00\l  %108 = fneg float %100\l  %109 = tail call float @llvm.fma.f32(float %108, float %97, float %96)\l  %110 = fcmp ole float %109, 0.000000e+00\l  %111 = select i1 %110, float %100, float %97\l  %112 = select i1 %107, float %102, float %111\l  %113 = fmul float %104, %112\l  %114 = select i1 %103, float %96, float %113\l  %115 = fmul contract float %114, 2.000000e+00\l  %116 = fcmp contract ogt float %89, %115\l  br i1 %116, label %117, label %119\l|{<s0>T|<s1>F}}"];
	Node0x615f400:s0 -> Node0x615f370;
	Node0x615f400:s1 -> Node0x615cce0;
	Node0x615f370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%117:\l117:                                              \l  %118 = getelementptr inbounds float, float addrspace(1)* %12, i64 %49\l  store float 0x40019999A0000000, float addrspace(1)* %118, align 4, !tbaa !16\l  br label %119\l}"];
	Node0x615f370 -> Node0x615cce0;
	Node0x615cce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%119:\l119:                                              \l  %120 = add nsw i32 %47, %16\l  %121 = add nuw nsw i32 %48, 1\l  %122 = icmp eq i32 %121, %15\l  br i1 %122, label %123, label %46, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x615cce0:s0 -> Node0x615cb70;
	Node0x615cce0:s1 -> Node0x615cb20;
	Node0x615cb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%123:\l123:                                              \l  %124 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !16\l  %126 = getelementptr inbounds float, float addrspace(1)* %5, i64 %40\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !16\l  %128 = fsub contract float %125, %127\l  %129 = tail call float @llvm.fabs.f32(float %128)\l  %130 = getelementptr inbounds float, float addrspace(1)* %7, i64 %40\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !16\l  %132 = fcmp olt float %131, 0x39F0000000000000\l  %133 = select i1 %132, float 0x41F0000000000000, float 1.000000e+00\l  %134 = fmul float %131, %133\l  %135 = tail call float @llvm.sqrt.f32(float %134)\l  %136 = bitcast float %135 to i32\l  %137 = add nsw i32 %136, -1\l  %138 = bitcast i32 %137 to float\l  %139 = add nsw i32 %136, 1\l  %140 = bitcast i32 %139 to float\l  %141 = tail call i1 @llvm.amdgcn.class.f32(float %134, i32 608)\l  %142 = select i1 %132, float 0x3EF0000000000000, float 1.000000e+00\l  %143 = fneg float %140\l  %144 = tail call float @llvm.fma.f32(float %143, float %135, float %134)\l  %145 = fcmp ogt float %144, 0.000000e+00\l  %146 = fneg float %138\l  %147 = tail call float @llvm.fma.f32(float %146, float %135, float %134)\l  %148 = fcmp ole float %147, 0.000000e+00\l  %149 = select i1 %148, float %138, float %135\l  %150 = select i1 %145, float %140, float %149\l  %151 = fmul float %142, %150\l  %152 = select i1 %141, float %134, float %151\l  %153 = fmul contract float %152, 2.000000e+00\l  %154 = fmul contract float %127, %127\l  %155 = fsub contract float %153, %154\l  %156 = fcmp contract ogt float %129, %155\l  br i1 %156, label %191, label %157\l|{<s0>T|<s1>F}}"];
	Node0x615cb70:s0 -> Node0x6162860;
	Node0x615cb70:s1 -> Node0x61628b0;
	Node0x61628b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%157:\l157:                                              \l  %158 = getelementptr inbounds float, float addrspace(1)* %3, i64 %40\l  %159 = load float, float addrspace(1)* %158, align 4, !tbaa !16\l  %160 = getelementptr inbounds float, float addrspace(1)* %9, i64 %40\l  %161 = load float, float addrspace(1)* %160, align 4, !tbaa !16\l  %162 = fsub contract float %159, %161\l  %163 = tail call float @llvm.fabs.f32(float %162)\l  %164 = getelementptr inbounds float, float addrspace(1)* %11, i64 %40\l  %165 = load float, float addrspace(1)* %164, align 4, !tbaa !16\l  %166 = fmul contract float %165, %165\l  %167 = fsub contract float %165, %166\l  %168 = fcmp olt float %167, 0x39F0000000000000\l  %169 = select i1 %168, float 0x41F0000000000000, float 1.000000e+00\l  %170 = fmul float %167, %169\l  %171 = tail call float @llvm.sqrt.f32(float %170)\l  %172 = bitcast float %171 to i32\l  %173 = add nsw i32 %172, -1\l  %174 = bitcast i32 %173 to float\l  %175 = add nsw i32 %172, 1\l  %176 = bitcast i32 %175 to float\l  %177 = tail call i1 @llvm.amdgcn.class.f32(float %170, i32 608)\l  %178 = select i1 %168, float 0x3EF0000000000000, float 1.000000e+00\l  %179 = fneg float %176\l  %180 = tail call float @llvm.fma.f32(float %179, float %171, float %170)\l  %181 = fcmp ogt float %180, 0.000000e+00\l  %182 = fneg float %174\l  %183 = tail call float @llvm.fma.f32(float %182, float %171, float %170)\l  %184 = fcmp ole float %183, 0.000000e+00\l  %185 = select i1 %184, float %174, float %171\l  %186 = select i1 %181, float %176, float %185\l  %187 = fmul float %178, %186\l  %188 = select i1 %177, float %170, float %187\l  %189 = fmul contract float %188, 2.000000e+00\l  %190 = fcmp contract ogt float %163, %189\l  br i1 %190, label %191, label %193\l|{<s0>T|<s1>F}}"];
	Node0x61628b0:s0 -> Node0x6162860;
	Node0x61628b0:s1 -> Node0x615b420;
	Node0x6162860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%191:\l191:                                              \l  %192 = getelementptr inbounds float, float addrspace(1)* %13, i64 %40\l  store float 0x40019999A0000000, float addrspace(1)* %192, align 4, !tbaa !16\l  br label %193\l}"];
	Node0x6162860 -> Node0x615b420;
	Node0x615b420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%193:\l193:                                              \l  ret void\l}"];
}
