digraph "CFG for '_Z17PrepareMeanStdDevPfS_ii' function" {
	label="CFG for '_Z17PrepareMeanStdDevPfS_ii' function";

	Node0x4c31a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = udiv i32 %12, %9\l  %16 = mul i32 %15, %9\l  %17 = icmp ugt i32 %12, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %14\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %13\l  %23 = mul i32 %22, %9\l  %24 = add i32 %23, %21\l  %25 = mul nsw i32 %3, %2\l  %26 = icmp slt i32 %24, %25\l  br i1 %26, label %27, label %67\l|{<s0>T|<s1>F}}"];
	Node0x4c31a60:s0 -> Node0x4c34340;
	Node0x4c31a60:s1 -> Node0x4c343d0;
	Node0x4c34340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%27:\l27:                                               \l  %28 = freeze i32 %24\l  %29 = freeze i32 %2\l  %30 = sdiv i32 %28, %29\l  %31 = mul i32 %30, %29\l  %32 = sub i32 %28, %31\l  %33 = sitofp i32 %32 to float\l  %34 = fmul contract float %33, 2.000000e+00\l  %35 = sitofp i32 %2 to float\l  %36 = fdiv contract float %34, %35\l  %37 = fadd contract float %36, -1.000000e+00\l  %38 = sitofp i32 %30 to float\l  %39 = fmul contract float %38, 2.000000e+00\l  %40 = sitofp i32 %3 to float\l  %41 = fdiv contract float %39, %40\l  %42 = fadd contract float %41, -1.000000e+00\l  %43 = sext i32 %24 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %46 = fmul contract float %45, %37\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  store float %46, float addrspace(1)* %47, align 4, !tbaa !16\l  %48 = load float, float addrspace(1)* %44, align 4, !tbaa !16\l  %49 = fmul contract float %48, %42\l  %50 = add nsw i32 %24, %25\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  store float %49, float addrspace(1)* %52, align 4, !tbaa !16\l  %53 = load float, float addrspace(1)* %44, align 4, !tbaa !16\l  %54 = fmul contract float %37, %53\l  %55 = fmul contract float %37, %54\l  %56 = shl nsw i32 %25, 1\l  %57 = add nsw i32 %24, %56\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %1, i64 %58\l  store float %55, float addrspace(1)* %59, align 4, !tbaa !16\l  %60 = load float, float addrspace(1)* %44, align 4, !tbaa !16\l  %61 = fmul contract float %42, %60\l  %62 = fmul contract float %42, %61\l  %63 = mul nsw i32 %25, 3\l  %64 = add nsw i32 %24, %63\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %65\l  store float %62, float addrspace(1)* %66, align 4, !tbaa !16\l  br label %67\l}"];
	Node0x4c34340 -> Node0x4c343d0;
	Node0x4c343d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  ret void\l}"];
}
