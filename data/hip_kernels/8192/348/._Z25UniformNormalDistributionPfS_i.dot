digraph "CFG for '_Z25UniformNormalDistributionPfS_i' function" {
	label="CFG for '_Z25UniformNormalDistributionPfS_i' function";

	Node0x4ef87f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !6\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = udiv i32 %11, %8\l  %15 = mul i32 %14, %8\l  %16 = icmp ugt i32 %11, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = mul i32 %18, %13\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %21 = add i32 %19, %12\l  %22 = mul i32 %21, %8\l  %23 = add i32 %22, %20\l  %24 = icmp slt i32 %23, %2\l  br i1 %24, label %25, label %159\l|{<s0>T|<s1>F}}"];
	Node0x4ef87f0:s0 -> Node0x4efb0a0;
	Node0x4ef87f0:s1 -> Node0x4efb130;
	Node0x4efb0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%25:\l25:                                               \l  %26 = sext i32 %23 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %29 = sitofp i32 %2 to float\l  %30 = icmp slt i32 %2, 1\l  %31 = select i1 %30, float 0x41F0000000000000, float 1.000000e+00\l  %32 = fmul float %31, %29\l  %33 = tail call float @llvm.sqrt.f32(float %32)\l  %34 = bitcast float %33 to i32\l  %35 = add nsw i32 %34, -1\l  %36 = bitcast i32 %35 to float\l  %37 = add nsw i32 %34, 1\l  %38 = bitcast i32 %37 to float\l  %39 = tail call i1 @llvm.amdgcn.class.f32(float %32, i32 608)\l  %40 = select i1 %30, float 0x3EF0000000000000, float 1.000000e+00\l  %41 = fneg float %38\l  %42 = tail call float @llvm.fma.f32(float %41, float %33, float %32)\l  %43 = fcmp ogt float %42, 0.000000e+00\l  %44 = fneg float %36\l  %45 = tail call float @llvm.fma.f32(float %44, float %33, float %32)\l  %46 = fcmp ole float %45, 0.000000e+00\l  %47 = select i1 %46, float %36, float %33\l  %48 = select i1 %43, float %38, float %47\l  %49 = fmul float %40, %48\l  %50 = select i1 %39, float %32, float %49\l  %51 = fmul contract float %50, %28\l  %52 = fpext float %51 to double\l  %53 = tail call double @llvm.fabs.f64(double %52)\l  %54 = fcmp ogt double %53, 0x40434D4EDCE2B7D6\l  %55 = tail call double @llvm.copysign.f64(double 0x40434D4EDCE2B7D6, double\l... %52)\l  %56 = select i1 %54, double %55, double %52\l  %57 = fmul double %56, 0xBFE6A09E667F3BCD\l  %58 = fneg double %57\l  %59 = tail call double @llvm.fma.f64(double %56, double 0xBFE6A09E667F3BCD,\l... double %58)\l  %60 = tail call double @llvm.fma.f64(double %56, double 0x3C8BDD3413B26456,\l... double %59)\l  %61 = fadd double %57, %60\l  %62 = fsub double %61, %57\l  %63 = fsub double %60, %62\l  %64 = tail call double @llvm.fabs.f64(double %61)\l  %65 = fneg double %61\l  %66 = fmul double %61, %65\l  %67 = fneg double %66\l  %68 = tail call double @llvm.fma.f64(double %65, double %61, double %67)\l  %69 = fmul double %66, 0x3FF71547652B82FE\l  %70 = tail call double @llvm.rint.f64(double %69)\l  %71 = fneg double %70\l  %72 = tail call double @llvm.fma.f64(double %71, double 0x3FE62E42FEFA39EF,\l... double %66)\l  %73 = tail call double @llvm.fma.f64(double %71, double 0x3C7ABC9E3B39803F,\l... double %72)\l  %74 = tail call double @llvm.fma.f64(double %73, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %75 = tail call double @llvm.fma.f64(double %73, double %74, double\l... 0x3EC71DEE623FDE64)\l  %76 = tail call double @llvm.fma.f64(double %73, double %75, double\l... 0x3EFA01997C89E6B0)\l  %77 = tail call double @llvm.fma.f64(double %73, double %76, double\l... 0x3F2A01A014761F6E)\l  %78 = tail call double @llvm.fma.f64(double %73, double %77, double\l... 0x3F56C16C1852B7B0)\l  %79 = tail call double @llvm.fma.f64(double %73, double %78, double\l... 0x3F81111111122322)\l  %80 = tail call double @llvm.fma.f64(double %73, double %79, double\l... 0x3FA55555555502A1)\l  %81 = tail call double @llvm.fma.f64(double %73, double %80, double\l... 0x3FC5555555555511)\l  %82 = tail call double @llvm.fma.f64(double %73, double %81, double\l... 0x3FE000000000000B)\l  %83 = tail call double @llvm.fma.f64(double %73, double %82, double\l... 1.000000e+00)\l  %84 = tail call double @llvm.fma.f64(double %73, double %83, double\l... 1.000000e+00)\l  %85 = fptosi double %70 to i32\l  %86 = tail call double @llvm.amdgcn.ldexp.f64(double %84, i32 %85)\l  %87 = fcmp ogt double %66, 1.024000e+03\l  %88 = select i1 %87, double 0x7FF0000000000000, double %86\l  %89 = fcmp olt double %66, -1.075000e+03\l  %90 = select i1 %89, double 0.000000e+00, double %88\l  %91 = tail call double @llvm.fma.f64(double %90, double %68, double %90)\l  %92 = fadd double %64, -4.000000e+00\l  %93 = fadd double %64, 4.000000e+00\l  %94 = tail call double @llvm.amdgcn.rcp.f64(double %93)\l  %95 = fneg double %93\l  %96 = tail call double @llvm.fma.f64(double %95, double %94, double\l... 1.000000e+00)\l  %97 = tail call double @llvm.fma.f64(double %96, double %94, double %94)\l  %98 = tail call double @llvm.fma.f64(double %95, double %97, double\l... 1.000000e+00)\l  %99 = tail call double @llvm.fma.f64(double %98, double %97, double %97)\l  %100 = fmul double %92, %99\l  %101 = fneg double %100\l  %102 = fadd double %100, 1.000000e+00\l  %103 = tail call double @llvm.fma.f64(double %102, double -4.000000e+00,\l... double %64)\l  %104 = tail call double @llvm.fma.f64(double %101, double %64, double %103)\l  %105 = tail call double @llvm.fma.f64(double %99, double %104, double %100)\l  %106 = tail call double @llvm.fma.f64(double %105, double\l... 0xBE41F39D54DF3C0E, double 0xBE41166337CFA789)\l  %107 = tail call double @llvm.fma.f64(double %105, double %106, double\l... 0x3E7B45F1D9802B82)\l  %108 = tail call double @llvm.fma.f64(double %105, double %107, double\l... 0x3E6D90488A03DCDB)\l  %109 = tail call double @llvm.fma.f64(double %105, double %108, double\l... 0xBEAB87B02EBA62D8)\l  %110 = tail call double @llvm.fma.f64(double %105, double %109, double\l... 0x3E95104BA56E15F1)\l  %111 = tail call double @llvm.fma.f64(double %105, double %110, double\l... 0x3ED7F29F71C907DE)\l  %112 = tail call double @llvm.fma.f64(double %105, double %111, double\l... 0xBEE78F5C2CD770FB)\l  %113 = tail call double @llvm.fma.f64(double %105, double %112, double\l... 0xBEF995FB76D0A51A)\l  %114 = tail call double @llvm.fma.f64(double %105, double %113, double\l... 0x3F23BE2EC022D0ED)\l  %115 = tail call double @llvm.fma.f64(double %105, double %114, double\l... 0xBF2A1DEB2FDBF62E)\l  %116 = tail call double @llvm.fma.f64(double %105, double %115, double\l... 0xBF48D4AC3689FC43)\l  %117 = tail call double @llvm.fma.f64(double %105, double %116, double\l... 0x3F749C67192D909B)\l  %118 = tail call double @llvm.fma.f64(double %105, double %117, double\l... 0xBF909623852FF070)\l  %119 = tail call double @llvm.fma.f64(double %105, double %118, double\l... 0x3FA3079EDFADEA8F)\l  %120 = tail call double @llvm.fma.f64(double %105, double %119, double\l... 0xBFB0FB06DFF65910)\l  %121 = tail call double @llvm.fma.f64(double %105, double %120, double\l... 0x3FB7FEE004DE8F32)\l  %122 = tail call double @llvm.fma.f64(double %105, double %121, double\l... 0xBFB9DDB23C3DBEB3)\l  %123 = tail call double @llvm.fma.f64(double %105, double %122, double\l... 0x3FB16ECEFCFA6930)\l  %124 = tail call double @llvm.fma.f64(double %105, double %123, double\l... 0x3F8F7F5DF66FB8A3)\l  %125 = tail call double @llvm.fma.f64(double %105, double %124, double\l... 0xBFC1DF1AD154A2A8)\l  %126 = tail call double @llvm.fma.f64(double %105, double %125, double\l... 0x3FCDD2C8B74FEBF8)\l  %127 = fadd double %64, %64\l  %128 = fadd double %127, 1.000000e+00\l  %129 = tail call double @llvm.amdgcn.rcp.f64(double %128)\l  %130 = fneg double %128\l  %131 = tail call double @llvm.fma.f64(double %130, double %129, double\l... 1.000000e+00)\l  %132 = tail call double @llvm.fma.f64(double %131, double %129, double %129)\l  %133 = tail call double @llvm.fma.f64(double %130, double %132, double\l... 1.000000e+00)\l  %134 = tail call double @llvm.fma.f64(double %133, double %132, double %132)\l  %135 = tail call double @llvm.fma.f64(double %126, double %134, double %134)\l  %136 = fneg double %135\l  %137 = tail call double @llvm.fma.f64(double %136, double %127, double\l... 1.000000e+00)\l  %138 = fsub double %126, %135\l  %139 = fadd double %137, %138\l  %140 = tail call double @llvm.fma.f64(double %134, double %139, double %135)\l  %141 = fmul double %91, %140\l  %142 = fcmp ogt double %64, 0x403B39DC41E48BFC\l  %143 = select i1 %142, double 0.000000e+00, double %141\l  %144 = fsub double 2.000000e+00, %143\l  %145 = fcmp olt double %61, 0.000000e+00\l  %146 = select i1 %145, double %144, double %143\l  %147 = fmul double %61, -2.000000e+00\l  %148 = fmul double %147, %146\l  %149 = fcmp oge double %56, -1.000000e+00\l  %150 = select i1 %149, double 0.000000e+00, double %148\l  %151 = tail call double @llvm.fma.f64(double %63, double %150, double %146)\l  %152 = fmul double %151, 5.000000e-01\l  %153 = fptrunc double %152 to float\l  %154 = fpext float %153 to double\l  %155 = fadd contract double %154, -5.000000e-01\l  %156 = fmul contract double %155, 2.000000e+00\l  %157 = fptrunc double %156 to float\l  %158 = getelementptr inbounds float, float addrspace(1)* %1, i64 %26\l  store float %157, float addrspace(1)* %158, align 4, !tbaa !16\l  br label %159\l}"];
	Node0x4efb0a0 -> Node0x4efb130;
	Node0x4efb130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%159:\l159:                                              \l  ret void\l}"];
}
