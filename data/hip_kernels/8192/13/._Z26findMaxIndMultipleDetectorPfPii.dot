digraph "CFG for '_Z26findMaxIndMultipleDetectorPfPii' function" {
	label="CFG for '_Z26findMaxIndMultipleDetectorPfPii' function";

	Node0x4ea6790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%3:\l  %4 = icmp sgt i32 %2, 1\l  br i1 %4, label %5, label %44\l|{<s0>T|<s1>F}}"];
	Node0x4ea6790:s0 -> Node0x4ea6f00;
	Node0x4ea6790:s1 -> Node0x4ea6f90;
	Node0x4ea6f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%5:\l5:                                                \l  %6 = add i32 %2, -1\l  %7 = add i32 %2, -2\l  %8 = and i32 %6, 7\l  %9 = icmp ult i32 %7, 7\l  br i1 %9, label %12, label %10\l|{<s0>T|<s1>F}}"];
	Node0x4ea6f00:s0 -> Node0x4ea6eb0;
	Node0x4ea6f00:s1 -> Node0x4ea7400;
	Node0x4ea7400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%10:\l10:                                               \l  %11 = and i32 %6, -8\l  br label %46\l}"];
	Node0x4ea7400 -> Node0x4ea7600;
	Node0x4ea6eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%12:\l12:                                               \l  %13 = phi i32 [ undef, %5 ], [ %152, %46 ]\l  %14 = phi i32 [ undef, %5 ], [ %153, %46 ]\l  %15 = phi i32 [ 1, %5 ], [ %154, %46 ]\l  %16 = phi i32 [ 1, %5 ], [ %153, %46 ]\l  %17 = phi i32 [ 0, %5 ], [ %152, %46 ]\l  %18 = icmp eq i32 %8, 0\l  br i1 %18, label %39, label %19\l|{<s0>T|<s1>F}}"];
	Node0x4ea6eb0:s0 -> Node0x4ea80b0;
	Node0x4ea6eb0:s1 -> Node0x4ea8140;
	Node0x4ea8140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = phi i32 [ %36, %19 ], [ %15, %12 ]\l  %21 = phi i32 [ %35, %19 ], [ %16, %12 ]\l  %22 = phi i32 [ %34, %19 ], [ %17, %12 ]\l  %23 = phi i32 [ %37, %19 ], [ 0, %12 ]\l  %24 = sext i32 %22 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %0, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %27 = zext i32 %20 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %30 = fcmp contract olt float %26, %29\l  %31 = fcmp contract oeq float %26, %29\l  %32 = zext i1 %31 to i32\l  %33 = add nsw i32 %21, %32\l  %34 = select i1 %30, i32 %20, i32 %22\l  %35 = select i1 %30, i32 1, i32 %33\l  %36 = add nuw nsw i32 %20, 1\l  %37 = add i32 %23, 1\l  %38 = icmp eq i32 %37, %8\l  br i1 %38, label %39, label %19, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x4ea8140:s0 -> Node0x4ea80b0;
	Node0x4ea8140:s1 -> Node0x4ea8140;
	Node0x4ea80b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%39:\l39:                                               \l  %40 = phi i32 [ %13, %12 ], [ %34, %19 ]\l  %41 = phi i32 [ %14, %12 ], [ %35, %19 ]\l  %42 = icmp sgt i32 %41, 1\l  %43 = select i1 %42, i32 -1, i32 %40\l  br label %44\l}"];
	Node0x4ea80b0 -> Node0x4ea6f90;
	Node0x4ea6f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%44:\l44:                                               \l  %45 = phi i32 [ 0, %3 ], [ %43, %39 ]\l  store i32 %45, i32 addrspace(1)* %1, align 4, !tbaa !11\l  ret void\l}"];
	Node0x4ea7600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%46:\l46:                                               \l  %47 = phi i32 [ 1, %10 ], [ %154, %46 ]\l  %48 = phi i32 [ 1, %10 ], [ %153, %46 ]\l  %49 = phi i32 [ 0, %10 ], [ %152, %46 ]\l  %50 = phi i32 [ 0, %10 ], [ %155, %46 ]\l  %51 = sext i32 %49 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %54 = zext i32 %47 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %57 = fcmp contract olt float %53, %56\l  %58 = fcmp contract oeq float %53, %56\l  %59 = zext i1 %58 to i32\l  %60 = add nsw i32 %48, %59\l  %61 = select i1 %57, i32 %47, i32 %49\l  %62 = select i1 %57, i32 1, i32 %60\l  %63 = add nuw nsw i32 %47, 1\l  %64 = sext i32 %61 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %0, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %67 = zext i32 %63 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %70 = fcmp contract olt float %66, %69\l  %71 = fcmp contract oeq float %66, %69\l  %72 = zext i1 %71 to i32\l  %73 = add nsw i32 %62, %72\l  %74 = select i1 %70, i32 %63, i32 %61\l  %75 = select i1 %70, i32 1, i32 %73\l  %76 = add nuw nsw i32 %47, 2\l  %77 = sext i32 %74 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %80 = zext i32 %76 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %83 = fcmp contract olt float %79, %82\l  %84 = fcmp contract oeq float %79, %82\l  %85 = zext i1 %84 to i32\l  %86 = add nsw i32 %75, %85\l  %87 = select i1 %83, i32 %76, i32 %74\l  %88 = select i1 %83, i32 1, i32 %86\l  %89 = add nuw nsw i32 %47, 3\l  %90 = sext i32 %87 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %93 = zext i32 %89 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %0, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %96 = fcmp contract olt float %92, %95\l  %97 = fcmp contract oeq float %92, %95\l  %98 = zext i1 %97 to i32\l  %99 = add nsw i32 %88, %98\l  %100 = select i1 %96, i32 %89, i32 %87\l  %101 = select i1 %96, i32 1, i32 %99\l  %102 = add nuw nsw i32 %47, 4\l  %103 = sext i32 %100 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %0, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %106 = zext i32 %102 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %0, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %109 = fcmp contract olt float %105, %108\l  %110 = fcmp contract oeq float %105, %108\l  %111 = zext i1 %110 to i32\l  %112 = add nsw i32 %101, %111\l  %113 = select i1 %109, i32 %102, i32 %100\l  %114 = select i1 %109, i32 1, i32 %112\l  %115 = add nuw nsw i32 %47, 5\l  %116 = sext i32 %113 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %0, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %119 = zext i32 %115 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %0, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %122 = fcmp contract olt float %118, %121\l  %123 = fcmp contract oeq float %118, %121\l  %124 = zext i1 %123 to i32\l  %125 = add nsw i32 %114, %124\l  %126 = select i1 %122, i32 %115, i32 %113\l  %127 = select i1 %122, i32 1, i32 %125\l  %128 = add nuw nsw i32 %47, 6\l  %129 = sext i32 %126 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %0, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %132 = zext i32 %128 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %0, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %135 = fcmp contract olt float %131, %134\l  %136 = fcmp contract oeq float %131, %134\l  %137 = zext i1 %136 to i32\l  %138 = add nsw i32 %127, %137\l  %139 = select i1 %135, i32 %128, i32 %126\l  %140 = select i1 %135, i32 1, i32 %138\l  %141 = add nuw nsw i32 %47, 7\l  %142 = sext i32 %139 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %0, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %145 = zext i32 %141 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %0, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %148 = fcmp contract olt float %144, %147\l  %149 = fcmp contract oeq float %144, %147\l  %150 = zext i1 %149 to i32\l  %151 = add nsw i32 %140, %150\l  %152 = select i1 %148, i32 %141, i32 %139\l  %153 = select i1 %148, i32 1, i32 %151\l  %154 = add nuw nsw i32 %47, 8\l  %155 = add i32 %50, 8\l  %156 = icmp eq i32 %155, %11\l  br i1 %156, label %12, label %46, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4ea7600:s0 -> Node0x4ea6eb0;
	Node0x4ea7600:s1 -> Node0x4ea7600;
}
