digraph "CFG for '_Z22BilinearResampleKernelPfS_iiii' function" {
	label="CFG for '_Z22BilinearResampleKernelPfS_iiii' function";

	Node0x5c621c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = udiv i32 %14, %11\l  %18 = mul i32 %17, %11\l  %19 = icmp ugt i32 %14, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %16\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %24 = add i32 %22, %15\l  %25 = mul i32 %24, %11\l  %26 = add i32 %25, %23\l  %27 = mul nsw i32 %5, %4\l  %28 = icmp slt i32 %26, %27\l  br i1 %28, label %29, label %107\l|{<s0>T|<s1>F}}"];
	Node0x5c621c0:s0 -> Node0x5c64aa0;
	Node0x5c621c0:s1 -> Node0x5c64b30;
	Node0x5c64aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%29:\l29:                                               \l  %30 = freeze i32 %26\l  %31 = freeze i32 %4\l  %32 = sdiv i32 %30, %31\l  %33 = mul i32 %32, %31\l  %34 = sub i32 %30, %33\l  %35 = add nsw i32 %2, -1\l  %36 = sitofp i32 %35 to float\l  %37 = add nsw i32 %4, -1\l  %38 = sitofp i32 %37 to float\l  %39 = fdiv contract float %36, %38\l  %40 = add nsw i32 %3, -1\l  %41 = sitofp i32 %40 to float\l  %42 = add nsw i32 %5, -1\l  %43 = sitofp i32 %42 to float\l  %44 = fdiv contract float %41, %43\l  %45 = sitofp i32 %34 to float\l  %46 = fmul contract float %39, %45\l  %47 = sitofp i32 %32 to float\l  %48 = fmul contract float %44, %47\l  %49 = tail call float @llvm.floor.f32(float %46)\l  %50 = fptosi float %49 to i32\l  %51 = tail call float @llvm.ceil.f32(float %46)\l  %52 = fptosi float %51 to i32\l  %53 = tail call float @llvm.floor.f32(float %48)\l  %54 = fptosi float %53 to i32\l  %55 = tail call float @llvm.ceil.f32(float %48)\l  %56 = fptosi float %55 to i32\l  %57 = sitofp i32 %50 to float\l  %58 = fsub contract float %57, %46\l  %59 = fadd contract float %58, 1.000000e+00\l  %60 = sitofp i32 %52 to float\l  %61 = fsub contract float %46, %60\l  %62 = fadd contract float %61, 1.000000e+00\l  %63 = sitofp i32 %54 to float\l  %64 = fsub contract float %63, %48\l  %65 = fadd contract float %64, 1.000000e+00\l  %66 = sitofp i32 %56 to float\l  %67 = fsub contract float %48, %66\l  %68 = fadd contract float %67, 1.000000e+00\l  %69 = mul nsw i32 %54, %2\l  %70 = add nsw i32 %69, %50\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %74 = mul nsw i32 %56, %2\l  %75 = add nsw i32 %74, %50\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %79 = icmp eq i32 %50, %52\l  br i1 %79, label %95, label %80\l|{<s0>T|<s1>F}}"];
	Node0x5c64aa0:s0 -> Node0x5c68560;
	Node0x5c64aa0:s1 -> Node0x5c685f0;
	Node0x5c685f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%80:\l80:                                               \l  %81 = add nsw i32 %74, %52\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %0, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %85 = add nsw i32 %69, %52\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %89 = fmul contract float %73, %59\l  %90 = fmul contract float %62, %88\l  %91 = fadd contract float %89, %90\l  %92 = fmul contract float %78, %59\l  %93 = fmul contract float %62, %84\l  %94 = fadd contract float %92, %93\l  br label %95\l}"];
	Node0x5c685f0 -> Node0x5c68560;
	Node0x5c68560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%95:\l95:                                               \l  %96 = phi float [ %94, %80 ], [ %78, %29 ]\l  %97 = phi float [ %91, %80 ], [ %73, %29 ]\l  %98 = icmp eq i32 %54, %56\l  %99 = fmul contract float %65, %97\l  %100 = fmul contract float %68, %96\l  %101 = fadd contract float %100, %99\l  %102 = select i1 %98, float %97, float %101\l  %103 = mul nsw i32 %32, %4\l  %104 = add nsw i32 %103, %34\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %1, i64 %105\l  store float %102, float addrspace(1)* %106, align 4, !tbaa !16\l  br label %107\l}"];
	Node0x5c68560 -> Node0x5c64b30;
	Node0x5c64b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  ret void\l}"];
}
