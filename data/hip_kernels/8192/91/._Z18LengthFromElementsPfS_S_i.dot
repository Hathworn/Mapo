digraph "CFG for '_Z18LengthFromElementsPfS_S_i' function" {
	label="CFG for '_Z18LengthFromElementsPfS_S_i' function";

	Node0x5200b10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = udiv i32 %12, %9\l  %16 = mul i32 %15, %9\l  %17 = icmp ugt i32 %12, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %14\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %13\l  %23 = mul i32 %22, %9\l  %24 = add i32 %23, %21\l  %25 = icmp slt i32 %24, %3\l  br i1 %25, label %26, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5200b10:s0 -> Node0x5203360;
	Node0x5200b10:s1 -> Node0x52033f0;
	Node0x5203360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%26:\l26:                                               \l  %27 = sext i32 %24 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %30 = fmul contract float %29, %29\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %33 = fmul contract float %32, %32\l  %34 = fadd contract float %30, %33\l  %35 = fcmp olt float %34, 0x39F0000000000000\l  %36 = select i1 %35, float 0x41F0000000000000, float 1.000000e+00\l  %37 = fmul float %34, %36\l  %38 = tail call float @llvm.sqrt.f32(float %37)\l  %39 = bitcast float %38 to i32\l  %40 = add nsw i32 %39, -1\l  %41 = bitcast i32 %40 to float\l  %42 = add nsw i32 %39, 1\l  %43 = bitcast i32 %42 to float\l  %44 = tail call i1 @llvm.amdgcn.class.f32(float %37, i32 608)\l  %45 = select i1 %35, float 0x3EF0000000000000, float 1.000000e+00\l  %46 = fneg float %43\l  %47 = tail call float @llvm.fma.f32(float %46, float %38, float %37)\l  %48 = fcmp ogt float %47, 0.000000e+00\l  %49 = fneg float %41\l  %50 = tail call float @llvm.fma.f32(float %49, float %38, float %37)\l  %51 = fcmp ole float %50, 0.000000e+00\l  %52 = select i1 %51, float %41, float %38\l  %53 = select i1 %48, float %43, float %52\l  %54 = fmul float %45, %53\l  %55 = select i1 %44, float %37, float %54\l  %56 = getelementptr inbounds float, float addrspace(1)* %2, i64 %27\l  store float %55, float addrspace(1)* %56, align 4, !tbaa !16\l  br label %57\l}"];
	Node0x5203360 -> Node0x52033f0;
	Node0x52033f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  ret void\l}"];
}
