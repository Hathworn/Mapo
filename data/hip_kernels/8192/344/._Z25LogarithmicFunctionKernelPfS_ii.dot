digraph "CFG for '_Z25LogarithmicFunctionKernelPfS_ii' function" {
	label="CFG for '_Z25LogarithmicFunctionKernelPfS_ii' function";

	Node0x5267050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = udiv i32 %12, %9\l  %16 = mul i32 %15, %9\l  %17 = icmp ugt i32 %12, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %14\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %13\l  %23 = mul i32 %22, %9\l  %24 = add i32 %23, %21\l  %25 = icmp slt i32 %24, %2\l  br i1 %25, label %26, label %75\l|{<s0>T|<s1>F}}"];
	Node0x5267050:s0 -> Node0x52698e0;
	Node0x5267050:s1 -> Node0x5269970;
	Node0x52698e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%26:\l26:                                               \l  switch i32 %3, label %75 [\l    i32 1, label %27\l    i32 2, label %44\l    i32 3, label %54\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>3}}"];
	Node0x52698e0:s0 -> Node0x5269970;
	Node0x52698e0:s1 -> Node0x5269ab0;
	Node0x52698e0:s2 -> Node0x5269b30;
	Node0x52698e0:s3 -> Node0x5269bf0;
	Node0x5269ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%27:\l27:                                               \l  %28 = sext i32 %24 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %31 = tail call i1 @llvm.amdgcn.class.f32(float %30, i32 144)\l  %32 = select i1 %31, float 0x41F0000000000000, float 1.000000e+00\l  %33 = fmul float %30, %32\l  %34 = tail call float @llvm.log2.f32(float %33)\l  %35 = fmul float %34, 0x3FE62E42E0000000\l  %36 = tail call i1 @llvm.amdgcn.class.f32(float %34, i32 519)\l  %37 = fneg float %35\l  %38 = tail call float @llvm.fma.f32(float %34, float 0x3FE62E42E0000000,\l... float %37)\l  %39 = tail call float @llvm.fma.f32(float %34, float 0x3E6EFA39E0000000,\l... float %38)\l  %40 = fadd float %35, %39\l  %41 = select i1 %36, float %34, float %40\l  %42 = select i1 %31, float 0x40362E4300000000, float 0.000000e+00\l  %43 = fsub float %41, %42\l  br label %71\l}"];
	Node0x5269ab0 -> Node0x526c210;
	Node0x5269b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%44:\l44:                                               \l  %45 = sext i32 %24 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %48 = tail call i1 @llvm.amdgcn.class.f32(float %47, i32 144)\l  %49 = select i1 %48, float 0x41F0000000000000, float 1.000000e+00\l  %50 = fmul float %47, %49\l  %51 = tail call float @llvm.log2.f32(float %50)\l  %52 = select i1 %48, float 3.200000e+01, float 0.000000e+00\l  %53 = fsub float %51, %52\l  br label %71\l}"];
	Node0x5269b30 -> Node0x526c210;
	Node0x5269bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%54:\l54:                                               \l  %55 = sext i32 %24 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %58 = tail call i1 @llvm.amdgcn.class.f32(float %57, i32 144)\l  %59 = select i1 %58, float 0x41F0000000000000, float 1.000000e+00\l  %60 = fmul float %57, %59\l  %61 = tail call float @llvm.log2.f32(float %60)\l  %62 = fmul float %61, 0x3FD3441340000000\l  %63 = tail call i1 @llvm.amdgcn.class.f32(float %61, i32 519)\l  %64 = fneg float %62\l  %65 = tail call float @llvm.fma.f32(float %61, float 0x3FD3441340000000,\l... float %64)\l  %66 = tail call float @llvm.fma.f32(float %61, float 0x3E509F79E0000000,\l... float %65)\l  %67 = fadd float %62, %66\l  %68 = select i1 %63, float %61, float %67\l  %69 = select i1 %58, float 0x4023441360000000, float 0.000000e+00\l  %70 = fsub float %68, %69\l  br label %71\l}"];
	Node0x5269bf0 -> Node0x526c210;
	Node0x526c210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%71:\l71:                                               \l  %72 = phi i64 [ %28, %27 ], [ %45, %44 ], [ %55, %54 ]\l  %73 = phi float [ %43, %27 ], [ %53, %44 ], [ %70, %54 ]\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %72\l  store float %73, float addrspace(1)* %74, align 4, !tbaa !16\l  br label %75\l}"];
	Node0x526c210 -> Node0x5269970;
	Node0x5269970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  ret void\l}"];
}
