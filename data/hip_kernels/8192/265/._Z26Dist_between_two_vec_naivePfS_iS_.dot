digraph "CFG for '_Z26Dist_between_two_vec_naivePfS_iS_' function" {
	label="CFG for '_Z26Dist_between_two_vec_naivePfS_iS_' function";

	Node0x589bf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = icmp sgt i32 %2, 0\l  br i1 %5, label %6, label %30\l|{<s0>T|<s1>F}}"];
	Node0x589bf70:s0 -> Node0x589c6f0;
	Node0x589bf70:s1 -> Node0x589c740;
	Node0x589c6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%6:\l6:                                                \l  %7 = and i32 %2, 7\l  %8 = icmp ult i32 %2, 8\l  br i1 %8, label %11, label %9\l|{<s0>T|<s1>F}}"];
	Node0x589c6f0:s0 -> Node0x589c000;
	Node0x589c6f0:s1 -> Node0x589ca90;
	Node0x589ca90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%9:\l9:                                                \l  %10 = and i32 %2, -8\l  br label %32\l}"];
	Node0x589ca90 -> Node0x589cc90;
	Node0x589c000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%11:\l11:                                               \l  %12 = phi float [ undef, %6 ], [ %98, %32 ]\l  %13 = phi i32 [ 0, %6 ], [ %99, %32 ]\l  %14 = phi float [ 0.000000e+00, %6 ], [ %98, %32 ]\l  %15 = icmp eq i32 %7, 0\l  br i1 %15, label %30, label %16\l|{<s0>T|<s1>F}}"];
	Node0x589c000:s0 -> Node0x589c740;
	Node0x589c000:s1 -> Node0x589df00;
	Node0x589df00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  %17 = phi i32 [ %27, %16 ], [ %13, %11 ]\l  %18 = phi float [ %26, %16 ], [ %14, %11 ]\l  %19 = phi i32 [ %28, %16 ], [ 0, %11 ]\l  %20 = zext i32 %17 to i64\l  %21 = getelementptr inbounds float, float addrspace(1)* %0, i64 %20\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %23 = getelementptr inbounds float, float addrspace(1)* %1, i64 %20\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %25 = fsub contract float %22, %24\l  %26 = fadd contract float %18, %25\l  %27 = add nuw nsw i32 %17, 1\l  %28 = add i32 %19, 1\l  %29 = icmp eq i32 %28, %7\l  br i1 %29, label %30, label %16, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x589df00:s0 -> Node0x589c740;
	Node0x589df00:s1 -> Node0x589df00;
	Node0x589c740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%30:\l30:                                               \l  %31 = phi float [ 0.000000e+00, %4 ], [ %12, %11 ], [ %26, %16 ]\l  store float %31, float addrspace(1)* %3, align 4, !tbaa !4\l  ret void\l}"];
	Node0x589cc90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = phi i32 [ 0, %9 ], [ %99, %32 ]\l  %34 = phi float [ 0.000000e+00, %9 ], [ %98, %32 ]\l  %35 = phi i32 [ 0, %9 ], [ %100, %32 ]\l  %36 = zext i32 %33 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %39 = getelementptr inbounds float, float addrspace(1)* %1, i64 %36\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %41 = fsub contract float %38, %40\l  %42 = fadd contract float %34, %41\l  %43 = or i32 %33, 1\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %49 = fsub contract float %46, %48\l  %50 = fadd contract float %42, %49\l  %51 = or i32 %33, 2\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %52\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %57 = fsub contract float %54, %56\l  %58 = fadd contract float %50, %57\l  %59 = or i32 %33, 3\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %63 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %65 = fsub contract float %62, %64\l  %66 = fadd contract float %58, %65\l  %67 = or i32 %33, 4\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %71 = getelementptr inbounds float, float addrspace(1)* %1, i64 %68\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %73 = fsub contract float %70, %72\l  %74 = fadd contract float %66, %73\l  %75 = or i32 %33, 5\l  %76 = zext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %79 = getelementptr inbounds float, float addrspace(1)* %1, i64 %76\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %81 = fsub contract float %78, %80\l  %82 = fadd contract float %74, %81\l  %83 = or i32 %33, 6\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %0, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %87 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %89 = fsub contract float %86, %88\l  %90 = fadd contract float %82, %89\l  %91 = or i32 %33, 7\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %0, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %92\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %97 = fsub contract float %94, %96\l  %98 = fadd contract float %90, %97\l  %99 = add nuw nsw i32 %33, 8\l  %100 = add i32 %35, 8\l  %101 = icmp eq i32 %100, %10\l  br i1 %101, label %11, label %32, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x589cc90:s0 -> Node0x589c000;
	Node0x589cc90:s1 -> Node0x589cc90;
}
