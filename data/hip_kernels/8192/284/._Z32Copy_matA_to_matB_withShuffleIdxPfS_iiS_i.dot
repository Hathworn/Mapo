digraph "CFG for '_Z32Copy_matA_to_matB_withShuffleIdxPfS_iiS_i' function" {
	label="CFG for '_Z32Copy_matA_to_matB_withShuffleIdxPfS_iiS_i' function";

	Node0x4637750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = udiv i32 %14, %11\l  %18 = mul i32 %17, %11\l  %19 = icmp ugt i32 %14, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %16\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %24 = add i32 %22, %15\l  %25 = mul i32 %24, %11\l  %26 = add i32 %25, %23\l  %27 = freeze i32 %26\l  %28 = freeze i32 %3\l  %29 = sdiv i32 %27, %28\l  %30 = mul i32 %29, %28\l  %31 = sub i32 %27, %30\l  %32 = icmp slt i32 %26, %2\l  br i1 %32, label %33, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4637750:s0 -> Node0x46395f0;
	Node0x4637750:s1 -> Node0x4639680;
	Node0x46395f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%33:\l33:                                               \l  %34 = xor i32 %29, -1\l  %35 = add i32 %34, %5\l  %36 = sext i32 %29 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %4, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %39 = fptosi float %38 to i32\l  %40 = mul nsw i32 %39, %3\l  %41 = add nsw i32 %40, %31\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %45 = mul nsw i32 %35, %3\l  %46 = add nsw i32 %45, %31\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  store float %44, float addrspace(1)* %48, align 4, !tbaa !16\l  br label %49\l}"];
	Node0x46395f0 -> Node0x4639680;
	Node0x4639680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  ret void\l}"];
}
