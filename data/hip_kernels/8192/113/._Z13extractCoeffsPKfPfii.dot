digraph "CFG for '_Z13extractCoeffsPKfPfii' function" {
	label="CFG for '_Z13extractCoeffsPKfPfii' function";

	Node0x587d4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 2, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 8\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %5, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !6\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %19, %20\l  %24 = mul i32 %23, %14\l  %25 = add i32 %24, %21\l  %26 = mul i32 %25, %10\l  %27 = add i32 %26, %22\l  %28 = mul i32 %3, %3\l  %29 = mul i32 %28, %27\l  %30 = mul nsw i32 %27, %2\l  %31 = sext i32 %29 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = sext i32 %30 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  store float %33, float addrspace(1)* %35, align 4, !tbaa !7\l  %36 = icmp sgt i32 %2, 1\l  br i1 %36, label %37, label %130\l|{<s0>T|<s1>F}}"];
	Node0x587d4c0:s0 -> Node0x5881f80;
	Node0x587d4c0:s1 -> Node0x5882010;
	Node0x5881f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%37:\l37:                                               \l  %38 = add nsw i32 %2, -1\l  %39 = add nsw i32 %3, -1\l  %40 = add i32 %30, %2\l  br label %41\l}"];
	Node0x5881f80 -> Node0x5882330;
	Node0x5882330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%41:\l41:                                               \l  %42 = phi i32 [ 1, %37 ], [ %128, %123 ]\l  %43 = phi i32 [ 0, %37 ], [ %127, %123 ]\l  %44 = phi i32 [ %38, %37 ], [ %124, %123 ]\l  %45 = icmp slt i32 %42, %39\l  %46 = add nsw i32 %42, 1\l  %47 = sub i32 %42, %43\l  %48 = add i32 %47, 1\l  %49 = select i1 %45, i32 %46, i32 %48\l  %50 = and i32 %49, 1\l  %51 = icmp eq i32 %50, 0\l  br i1 %51, label %55, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5882330:s0 -> Node0x5882be0;
	Node0x5882330:s1 -> Node0x5882c70;
	Node0x5882c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%52:\l52:                                               \l  %53 = sub nsw i32 0, %44\l  %54 = icmp sgt i32 %49, 1\l  br i1 %54, label %79, label %106\l|{<s0>T|<s1>F}}"];
	Node0x5882c70:s0 -> Node0x5882ed0;
	Node0x5882c70:s1 -> Node0x5882f20;
	Node0x5882be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%55:\l55:                                               \l  %56 = icmp sgt i32 %49, 0\l  br i1 %56, label %57, label %123\l|{<s0>T|<s1>F}}"];
	Node0x5882be0:s0 -> Node0x58830f0;
	Node0x5882be0:s1 -> Node0x5882420;
	Node0x58830f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  %58 = phi i32 [ %71, %57 ], [ %49, %55 ]\l  %59 = phi i32 [ %75, %57 ], [ %43, %55 ]\l  %60 = phi i32 [ %74, %57 ], [ %42, %55 ]\l  %61 = phi i32 [ %72, %57 ], [ %44, %55 ]\l  %62 = add nsw i32 %60, %29\l  %63 = mul nsw i32 %59, %3\l  %64 = add nsw i32 %62, %63\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %0, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7\l  %68 = sub i32 %40, %61\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %1, i64 %69\l  store float %67, float addrspace(1)* %70, align 4, !tbaa !7\l  %71 = add nsw i32 %58, -1\l  %72 = add nsw i32 %61, -1\l  %73 = and i32 %58, 1\l  %74 = sub i32 %59, %73\l  %75 = add nsw i32 %73, %60\l  %76 = icmp ugt i32 %58, 1\l  %77 = icmp ne i32 %72, 0\l  %78 = select i1 %76, i1 %77, i1 false\l  br i1 %78, label %57, label %123, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x58830f0:s0 -> Node0x58830f0;
	Node0x58830f0:s1 -> Node0x5882420;
	Node0x5882ed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%79:\l79:                                               \l  %80 = phi i32 [ %102, %79 ], [ %53, %52 ]\l  %81 = phi i32 [ %94, %79 ], [ %49, %52 ]\l  %82 = phi i32 [ %101, %79 ], [ %43, %52 ]\l  %83 = phi i32 [ %99, %79 ], [ %42, %52 ]\l  %84 = phi i32 [ %95, %79 ], [ %44, %52 ]\l  %85 = add nsw i32 %83, %29\l  %86 = mul nsw i32 %82, %3\l  %87 = add nsw i32 %85, %86\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !7\l  %91 = add i32 %40, %80\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %1, i64 %92\l  store float %90, float addrspace(1)* %93, align 4, !tbaa !7\l  %94 = add nsw i32 %81, -1\l  %95 = add nsw i32 %84, -1\l  %96 = and i32 %81, -2147483647\l  %97 = icmp ne i32 %96, 1\l  %98 = sext i1 %97 to i32\l  %99 = add nsw i32 %82, %98\l  %100 = zext i1 %97 to i32\l  %101 = add nsw i32 %83, %100\l  %102 = sub i32 1, %84\l  %103 = icmp ugt i32 %81, 2\l  %104 = icmp ne i32 %95, 0\l  %105 = select i1 %103, i1 %104, i1 false\l  br i1 %105, label %79, label %106, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5882ed0:s0 -> Node0x5882ed0;
	Node0x5882ed0:s1 -> Node0x5882f20;
	Node0x5882f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%106:\l106:                                              \l  %107 = phi i32 [ %44, %52 ], [ %95, %79 ]\l  %108 = phi i32 [ %42, %52 ], [ %99, %79 ]\l  %109 = phi i32 [ %43, %52 ], [ %101, %79 ]\l  %110 = phi i32 [ %53, %52 ], [ %102, %79 ]\l  %111 = phi i1 [ true, %52 ], [ %104, %79 ]\l  br i1 %111, label %112, label %123\l|{<s0>T|<s1>F}}"];
	Node0x5882f20:s0 -> Node0x58858d0;
	Node0x5882f20:s1 -> Node0x5882420;
	Node0x58858d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%112:\l112:                                              \l  %113 = add nsw i32 %108, %29\l  %114 = mul nsw i32 %109, %3\l  %115 = add nsw i32 %113, %114\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %0, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !7\l  %119 = add i32 %40, %110\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %1, i64 %120\l  store float %118, float addrspace(1)* %121, align 4, !tbaa !7\l  %122 = add nsw i32 %107, -1\l  br label %123\l}"];
	Node0x58858d0 -> Node0x5882420;
	Node0x5882420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%123:\l123:                                              \l  %124 = phi i32 [ %122, %112 ], [ 0, %106 ], [ %44, %55 ], [ %72, %57 ]\l  %125 = icmp eq i32 %42, %39\l  %126 = zext i1 %125 to i32\l  %127 = add nuw nsw i32 %43, %126\l  %128 = select i1 %125, i32 %42, i32 %46\l  %129 = icmp sgt i32 %124, 0\l  br i1 %129, label %41, label %130, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5882420:s0 -> Node0x5882330;
	Node0x5882420:s1 -> Node0x5882010;
	Node0x5882010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%130:\l130:                                              \l  ret void\l}"];
}
