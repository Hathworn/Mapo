digraph "CFG for '_Z40RetinaTransform_HaveAtLeastOneValueTherePfS_iiS_iS_iiS_' function" {
	label="CFG for '_Z40RetinaTransform_HaveAtLeastOneValueTherePfS_iiS_iS_iiS_' function";

	Node0x633d4f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !6\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = udiv i32 %18, %15\l  %22 = mul i32 %21, %15\l  %23 = icmp ugt i32 %18, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %20\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %28 = add i32 %26, %19\l  %29 = mul i32 %28, %15\l  %30 = add i32 %29, %27\l  %31 = sitofp i32 %2 to float\l  %32 = sitofp i32 %3 to float\l  %33 = icmp slt i32 %30, %5\l  br i1 %33, label %34, label %90\l|{<s0>T|<s1>F}}"];
	Node0x633d4f0:s0 -> Node0x633fbf0;
	Node0x633d4f0:s1 -> Node0x6340de0;
	Node0x633fbf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%34:\l34:                                               \l  %35 = add nsw i32 %2, -1\l  %36 = add nsw i32 %3, -1\l  %37 = tail call i32 @llvm.smin.i32(i32 %35, i32 %36)\l  %38 = tail call float @llvm.minnum.f32(float %31, float %32)\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 2\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %41 = fmul contract float %38, %40\l  %42 = fptosi float %41 to i32\l  %43 = tail call i32 @llvm.smax.i32(i32 %42, i32 1)\l  %44 = tail call i32 @llvm.smin.i32(i32 %37, i32 %43)\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 1\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %47 = fadd contract float %46, 1.000000e+00\l  %48 = fmul contract float %47, %32\l  %49 = fmul contract float %48, 5.000000e-01\l  %50 = fptosi float %49 to i32\l  %51 = load float, float addrspace(1)* %0, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %52 = fadd contract float %51, 1.000000e+00\l  %53 = fmul contract float %52, %31\l  %54 = fmul contract float %53, 5.000000e-01\l  %55 = fptosi float %54 to i32\l  %56 = sext i32 %30 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %4, i64 %56\l  store float 0.000000e+00, float addrspace(1)* %57, align 4, !tbaa !16\l  %58 = mul nsw i32 %30, %8\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %6, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !16\l  %62 = sitofp i32 %44 to float\l  %63 = fmul contract float %61, %62\l  %64 = add nsw i32 %58, 1\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %6, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !16\l  %68 = fmul contract float %67, %62\l  %69 = sitofp i32 %55 to float\l  %70 = fadd contract float %63, %69\l  %71 = fptosi float %70 to i32\l  %72 = sitofp i32 %50 to float\l  %73 = fadd contract float %68, %72\l  %74 = fptosi float %73 to i32\l  %75 = icmp slt i32 %71, %2\l  br i1 %75, label %76, label %90\l|{<s0>T|<s1>F}}"];
	Node0x633fbf0:s0 -> Node0x6344640;
	Node0x633fbf0:s1 -> Node0x6340de0;
	Node0x6344640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%76:\l76:                                               \l  %77 = icmp slt i32 %74, %3\l  %78 = or i32 %71, %74\l  %79 = icmp sgt i32 %78, -1\l  %80 = select i1 %77, i1 %79, i1 false\l  br i1 %80, label %81, label %90\l|{<s0>T|<s1>F}}"];
	Node0x6344640:s0 -> Node0x63449e0;
	Node0x6344640:s1 -> Node0x6340de0;
	Node0x63449e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%81:\l81:                                               \l  %82 = mul nsw i32 %74, %2\l  %83 = add nsw i32 %82, %71\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !16\l  store float %86, float addrspace(1)* %57, align 4, !tbaa !16\l  %87 = atomicrmw fadd float addrspace(1)* %57, float %86\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %88 = getelementptr inbounds float, float addrspace(1)* %9, i64 %56\l  %89 = atomicrmw fadd float addrspace(1)* %88, float 1.000000e+00\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %90\l}"];
	Node0x63449e0 -> Node0x6340de0;
	Node0x6340de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  ret void\l}"];
}
