digraph "CFG for '_Z25ExponentialFunctionKernelfPfS_i' function" {
	label="CFG for '_Z25ExponentialFunctionKernelfPfS_i' function";

	Node0x4bd5bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = udiv i32 %12, %9\l  %16 = mul i32 %15, %9\l  %17 = icmp ugt i32 %12, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %14\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %13\l  %23 = mul i32 %22, %9\l  %24 = add i32 %23, %21\l  %25 = icmp slt i32 %24, %3\l  br i1 %25, label %26, label %222\l|{<s0>T|<s1>F}}"];
	Node0x4bd5bf0:s0 -> Node0x4bd8480;
	Node0x4bd5bf0:s1 -> Node0x4bd8510;
	Node0x4bd8480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%26:\l26:                                               \l  %27 = sext i32 %24 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %30 = tail call float @llvm.fabs.f32(float %29)\l  %31 = tail call float @llvm.amdgcn.frexp.mant.f32(float %30)\l  %32 = fcmp olt float %31, 0x3FE5555560000000\l  %33 = zext i1 %32 to i32\l  %34 = tail call float @llvm.amdgcn.ldexp.f32(float %31, i32 %33)\l  %35 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %30)\l  %36 = sub nsw i32 %35, %33\l  %37 = fadd float %34, -1.000000e+00\l  %38 = fadd float %34, 1.000000e+00\l  %39 = fadd float %38, -1.000000e+00\l  %40 = fsub float %34, %39\l  %41 = tail call float @llvm.amdgcn.rcp.f32(float %38)\l  %42 = fmul float %37, %41\l  %43 = fmul float %38, %42\l  %44 = fneg float %43\l  %45 = tail call float @llvm.fma.f32(float %42, float %38, float %44)\l  %46 = tail call float @llvm.fma.f32(float %42, float %40, float %45)\l  %47 = fadd float %43, %46\l  %48 = fsub float %47, %43\l  %49 = fsub float %46, %48\l  %50 = fsub float %37, %47\l  %51 = fsub float %37, %50\l  %52 = fsub float %51, %47\l  %53 = fsub float %52, %49\l  %54 = fadd float %50, %53\l  %55 = fmul float %41, %54\l  %56 = fadd float %42, %55\l  %57 = fsub float %56, %42\l  %58 = fsub float %55, %57\l  %59 = fmul float %56, %56\l  %60 = fneg float %59\l  %61 = tail call float @llvm.fma.f32(float %56, float %56, float %60)\l  %62 = fmul float %58, 2.000000e+00\l  %63 = tail call float @llvm.fma.f32(float %56, float %62, float %61)\l  %64 = fadd float %59, %63\l  %65 = fsub float %64, %59\l  %66 = fsub float %63, %65\l  %67 = tail call float @llvm.fmuladd.f32(float %64, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %68 = tail call float @llvm.fmuladd.f32(float %64, float %67, float\l... 0x3FD999BDE0000000)\l  %69 = sitofp i32 %36 to float\l  %70 = fmul float %69, 0x3FE62E4300000000\l  %71 = fneg float %70\l  %72 = tail call float @llvm.fma.f32(float %69, float 0x3FE62E4300000000,\l... float %71)\l  %73 = tail call float @llvm.fma.f32(float %69, float 0xBE205C6100000000,\l... float %72)\l  %74 = fadd float %70, %73\l  %75 = fsub float %74, %70\l  %76 = fsub float %73, %75\l  %77 = tail call float @llvm.amdgcn.ldexp.f32(float %56, i32 1)\l  %78 = fmul float %56, %64\l  %79 = fneg float %78\l  %80 = tail call float @llvm.fma.f32(float %64, float %56, float %79)\l  %81 = tail call float @llvm.fma.f32(float %64, float %58, float %80)\l  %82 = tail call float @llvm.fma.f32(float %66, float %56, float %81)\l  %83 = fadd float %78, %82\l  %84 = fsub float %83, %78\l  %85 = fsub float %82, %84\l  %86 = fmul float %64, %68\l  %87 = fneg float %86\l  %88 = tail call float @llvm.fma.f32(float %64, float %68, float %87)\l  %89 = tail call float @llvm.fma.f32(float %66, float %68, float %88)\l  %90 = fadd float %86, %89\l  %91 = fsub float %90, %86\l  %92 = fsub float %89, %91\l  %93 = fadd float %90, 0x3FE5555540000000\l  %94 = fadd float %93, 0xBFE5555540000000\l  %95 = fsub float %90, %94\l  %96 = fadd float %92, 0x3E2E720200000000\l  %97 = fadd float %96, %95\l  %98 = fadd float %93, %97\l  %99 = fsub float %98, %93\l  %100 = fsub float %97, %99\l  %101 = fmul float %83, %98\l  %102 = fneg float %101\l  %103 = tail call float @llvm.fma.f32(float %83, float %98, float %102)\l  %104 = tail call float @llvm.fma.f32(float %83, float %100, float %103)\l  %105 = tail call float @llvm.fma.f32(float %85, float %98, float %104)\l  %106 = tail call float @llvm.amdgcn.ldexp.f32(float %58, i32 1)\l  %107 = fadd float %101, %105\l  %108 = fsub float %107, %101\l  %109 = fsub float %105, %108\l  %110 = fadd float %77, %107\l  %111 = fsub float %110, %77\l  %112 = fsub float %107, %111\l  %113 = fadd float %106, %109\l  %114 = fadd float %113, %112\l  %115 = fadd float %110, %114\l  %116 = fsub float %115, %110\l  %117 = fsub float %114, %116\l  %118 = fadd float %74, %115\l  %119 = fsub float %118, %74\l  %120 = fsub float %118, %119\l  %121 = fsub float %74, %120\l  %122 = fsub float %115, %119\l  %123 = fadd float %122, %121\l  %124 = fadd float %76, %117\l  %125 = fsub float %124, %76\l  %126 = fsub float %124, %125\l  %127 = fsub float %76, %126\l  %128 = fsub float %117, %125\l  %129 = fadd float %128, %127\l  %130 = fadd float %124, %123\l  %131 = fadd float %118, %130\l  %132 = fsub float %131, %118\l  %133 = fsub float %130, %132\l  %134 = fadd float %129, %133\l  %135 = fadd float %131, %134\l  %136 = fsub float %135, %131\l  %137 = fsub float %134, %136\l  %138 = fmul float %135, %0\l  %139 = fneg float %138\l  %140 = tail call float @llvm.fma.f32(float %0, float %135, float %139)\l  %141 = tail call float @llvm.fma.f32(float %0, float %137, float %140)\l  %142 = fadd float %138, %141\l  %143 = fsub float %142, %138\l  %144 = fsub float %141, %143\l  %145 = tail call float @llvm.fabs.f32(float %138) #3\l  %146 = fcmp oeq float %145, 0x7FF0000000000000\l  %147 = select i1 %146, float %138, float %142\l  %148 = tail call float @llvm.fabs.f32(float %147) #3\l  %149 = fcmp oeq float %148, 0x7FF0000000000000\l  %150 = select i1 %149, float 0.000000e+00, float %144\l  %151 = fcmp oeq float %147, 0x40562E4300000000\l  %152 = select i1 %151, float 0x3EE0000000000000, float 0.000000e+00\l  %153 = fsub float %147, %152\l  %154 = fadd float %152, %150\l  %155 = fmul float %153, 0x3FF7154760000000\l  %156 = tail call float @llvm.rint.f32(float %155)\l  %157 = fcmp ogt float %153, 0x40562E4300000000\l  %158 = fcmp olt float %153, 0xC059D1DA00000000\l  %159 = fneg float %155\l  %160 = tail call float @llvm.fma.f32(float %153, float 0x3FF7154760000000,\l... float %159)\l  %161 = tail call float @llvm.fma.f32(float %153, float 0x3E54AE0BE0000000,\l... float %160)\l  %162 = fsub float %155, %156\l  %163 = fadd float %161, %162\l  %164 = tail call float @llvm.exp2.f32(float %163)\l  %165 = fptosi float %156 to i32\l  %166 = tail call float @llvm.amdgcn.ldexp.f32(float %164, i32 %165)\l  %167 = select i1 %158, float 0.000000e+00, float %166\l  %168 = select i1 %157, float 0x7FF0000000000000, float %167\l  %169 = tail call float @llvm.fma.f32(float %168, float %154, float %168)\l  %170 = tail call float @llvm.fabs.f32(float %168) #3\l  %171 = fcmp oeq float %170, 0x7FF0000000000000\l  %172 = select i1 %171, float %168, float %169\l  %173 = tail call float @llvm.fabs.f32(float %0)\l  %174 = tail call float @llvm.trunc.f32(float %173)\l  %175 = fcmp oeq float %173, %174\l  %176 = zext i1 %175 to i32\l  %177 = fmul float %174, 5.000000e-01\l  %178 = tail call float @llvm.amdgcn.fract.f32(float %177)\l  %179 = tail call i1 @llvm.amdgcn.class.f32(float %177, i32 516)\l  %180 = select i1 %179, float 0.000000e+00, float %178\l  %181 = fcmp oeq float %180, 0.000000e+00\l  %182 = and i1 %175, %181\l  %183 = zext i1 %182 to i32\l  %184 = add nuw nsw i32 %183, %176\l  %185 = icmp eq i32 %184, 1\l  %186 = fcmp olt float %29, 0.000000e+00\l  %187 = and i1 %185, %186\l  %188 = select i1 %187, float -0.000000e+00, float 0.000000e+00\l  %189 = tail call float @llvm.copysign.f32(float %172, float %188)\l  %190 = fcmp uge float %29, 0.000000e+00\l  %191 = icmp ne i32 %184, 0\l  %192 = select i1 %190, i1 true, i1 %191\l  %193 = select i1 %192, float %189, float 0x7FF8000000000000\l  %194 = fcmp oeq float %173, 0x7FF0000000000000\l  br i1 %194, label %195, label %204\l|{<s0>T|<s1>F}}"];
	Node0x4bd8480:s0 -> Node0x4be2810;
	Node0x4bd8480:s1 -> Node0x4be28a0;
	Node0x4be2810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%195:\l195:                                              \l  %196 = fcmp oeq float %30, 1.000000e+00\l  %197 = fadd float %30, -1.000000e+00\l  %198 = bitcast float %0 to i32\l  %199 = bitcast float %197 to i32\l  %200 = xor i32 %199, %198\l  %201 = icmp sgt i32 %200, -1\l  %202 = select i1 %201, float 0x7FF0000000000000, float 0.000000e+00\l  %203 = select i1 %196, float %30, float %202\l  br label %204\l}"];
	Node0x4be2810 -> Node0x4be28a0;
	Node0x4be28a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%204:\l204:                                              \l  %205 = phi float [ %193, %26 ], [ %203, %195 ]\l  %206 = fcmp oeq float %30, 0x7FF0000000000000\l  %207 = fcmp oeq float %29, 0.000000e+00\l  %208 = or i1 %207, %206\l  %209 = fcmp olt float %0, 0.000000e+00\l  %210 = xor i1 %209, %207\l  %211 = select i1 %210, float 0.000000e+00, float 0x7FF0000000000000\l  %212 = select i1 %185, float %29, float 0.000000e+00\l  %213 = tail call float @llvm.copysign.f32(float %211, float %212)\l  %214 = select i1 %208, float %213, float %205\l  %215 = fcmp uno float %29, %0\l  %216 = select i1 %215, float 0x7FF8000000000000, float %214\l  %217 = fcmp oeq float %29, 1.000000e+00\l  %218 = fcmp oeq float %0, 0.000000e+00\l  %219 = or i1 %218, %217\l  %220 = select i1 %219, float 1.000000e+00, float %216\l  %221 = getelementptr inbounds float, float addrspace(1)* %2, i64 %27\l  store float %220, float addrspace(1)* %221, align 4, !tbaa !16\l  br label %222\l}"];
	Node0x4be28a0 -> Node0x4bd8510;
	Node0x4bd8510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%222:\l222:                                              \l  ret void\l}"];
}
