digraph "CFG for '_Z25ChangeOutputWeightsKernelPfS_S_S_ff' function" {
	label="CFG for '_Z25ChangeOutputWeightsKernelPfS_S_S_ff' function";

	Node0x4980870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = udiv i32 %14, %11\l  %18 = mul i32 %17, %11\l  %19 = icmp ugt i32 %14, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %16\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %24 = add i32 %22, %15\l  %25 = mul i32 %24, %11\l  %26 = add i32 %25, %23\l  %27 = load i32, i32 addrspace(4)* @D_HIDDEN_UNITS, align 4, !tbaa !16\l  %28 = load i32, i32 addrspace(4)* @D_OUTPUT_UNITS, align 4, !tbaa !16\l  %29 = mul nsw i32 %28, %27\l  %30 = icmp slt i32 %26, %29\l  br i1 %30, label %31, label %53\l|{<s0>T|<s1>F}}"];
	Node0x4980870:s0 -> Node0x4983370;
	Node0x4980870:s1 -> Node0x4983400;
	Node0x4983370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%31:\l31:                                               \l  %32 = freeze i32 %26\l  %33 = freeze i32 %27\l  %34 = sdiv i32 %32, %33\l  %35 = mul i32 %34, %33\l  %36 = sub i32 %32, %35\l  %37 = sext i32 %34 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %2, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %40 = sext i32 %36 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %3, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %43 = fmul contract float %39, %42\l  %44 = fmul contract float %43, %4\l  %45 = sext i32 %26 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %48 = fmul contract float %47, %5\l  %49 = fadd contract float %44, %48\l  store float %49, float addrspace(1)* %46, align 4, !tbaa !20\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !20\l  %52 = fadd contract float %51, %49\l  store float %52, float addrspace(1)* %50, align 4, !tbaa !20\l  br label %53\l}"];
	Node0x4983370 -> Node0x4983400;
	Node0x4983400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  ret void\l}"];
}
