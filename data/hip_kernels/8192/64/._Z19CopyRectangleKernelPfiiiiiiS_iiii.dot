digraph "CFG for '_Z19CopyRectangleKernelPfiiiiiiS_iiii' function" {
	label="CFG for '_Z19CopyRectangleKernelPfiiiiiiS_iiii' function";

	Node0x60afc90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %19 = bitcast i8 addrspace(4)* %18 to i32 addrspace(4)*\l  %20 = load i32, i32 addrspace(4)* %19, align 4, !tbaa !6\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = udiv i32 %20, %17\l  %24 = mul i32 %23, %17\l  %25 = icmp ugt i32 %20, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %22\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %30 = add i32 %28, %21\l  %31 = mul i32 %30, %17\l  %32 = add i32 %31, %29\l  %33 = mul nsw i32 %6, %5\l  %34 = icmp slt i32 %32, %33\l  br i1 %34, label %35, label %58\l|{<s0>T|<s1>F}}"];
	Node0x60afc90:s0 -> Node0x60b2020;
	Node0x60afc90:s1 -> Node0x60b32d0;
	Node0x60b2020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%35:\l35:                                               \l  %36 = freeze i32 %32\l  %37 = freeze i32 %5\l  %38 = sdiv i32 %36, %37\l  %39 = mul i32 %38, %37\l  %40 = sub i32 %36, %39\l  %41 = add nsw i32 %40, %3\l  %42 = add nsw i32 %38, %4\l  %43 = add nsw i32 %40, %10\l  %44 = add nsw i32 %38, %11\l  %45 = sext i32 %1 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = mul nsw i32 %42, %2\l  %48 = add nsw i32 %41, %47\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %46, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %52 = sext i32 %8 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %7, i64 %52\l  %54 = mul nsw i32 %44, %9\l  %55 = add nsw i32 %43, %54\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %53, i64 %56\l  store float %51, float addrspace(1)* %57, align 4, !tbaa !16\l  br label %58\l}"];
	Node0x60b2020 -> Node0x60b32d0;
	Node0x60b32d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  ret void\l}"];
}
