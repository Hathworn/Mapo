digraph "CFG for '_Z10splitNodesPiS_ii' function" {
	label="CFG for '_Z10splitNodesPiS_ii' function";

	Node0x4f0ecb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %2\l  br i1 %14, label %15, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4f0ecb0:s0 -> Node0x4f10b90;
	Node0x4f0ecb0:s1 -> Node0x4f10c20;
	Node0x4f10b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%15:\l15:                                               \l  %16 = add nsw i32 %13, %3\l  %17 = shl nsw i32 %16, 1\l  %18 = sext i32 %17 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %21 = and i32 %20, 1073741824\l  %22 = icmp eq i32 %21, 0\l  br i1 %22, label %84, label %23\l|{<s0>T|<s1>F}}"];
	Node0x4f10b90:s0 -> Node0x4f10c20;
	Node0x4f10b90:s1 -> Node0x4f11990;
	Node0x4f11990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%23:\l23:                                               \l  %24 = atomicrmw add i32 addrspace(1)* %1, i32 8 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %25 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7\l  %26 = and i32 %25, -1073741824\l  %27 = and i32 %24, 1073741823\l  %28 = or i32 %26, %27\l  store i32 %28, i32 addrspace(1)* %19, align 4, !tbaa !7\l  %29 = shl nsw i32 %24, 1\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %30\l  store i32 0, i32 addrspace(1)* %31, align 4, !tbaa !7\l  %32 = add nuw nsw i32 %29, 1\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %33\l  store i32 0, i32 addrspace(1)* %34, align 4, !tbaa !7\l  %35 = shl i32 %24, 1\l  %36 = add i32 %35, 2\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %37\l  store i32 0, i32 addrspace(1)* %38, align 4, !tbaa !7\l  %39 = add i32 %35, 3\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %40\l  store i32 0, i32 addrspace(1)* %41, align 4, !tbaa !7\l  %42 = shl i32 %24, 1\l  %43 = add i32 %42, 4\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %44\l  store i32 0, i32 addrspace(1)* %45, align 4, !tbaa !7\l  %46 = add i32 %42, 5\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %47\l  store i32 0, i32 addrspace(1)* %48, align 4, !tbaa !7\l  %49 = shl i32 %24, 1\l  %50 = add i32 %49, 6\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %51\l  store i32 0, i32 addrspace(1)* %52, align 4, !tbaa !7\l  %53 = add i32 %49, 7\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %54\l  store i32 0, i32 addrspace(1)* %55, align 4, !tbaa !7\l  %56 = shl i32 %24, 1\l  %57 = add i32 %56, 8\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %58\l  store i32 0, i32 addrspace(1)* %59, align 4, !tbaa !7\l  %60 = add i32 %56, 9\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %61\l  store i32 0, i32 addrspace(1)* %62, align 4, !tbaa !7\l  %63 = shl i32 %24, 1\l  %64 = add i32 %63, 10\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %65\l  store i32 0, i32 addrspace(1)* %66, align 4, !tbaa !7\l  %67 = add i32 %63, 11\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %68\l  store i32 0, i32 addrspace(1)* %69, align 4, !tbaa !7\l  %70 = shl i32 %24, 1\l  %71 = add i32 %70, 12\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %72\l  store i32 0, i32 addrspace(1)* %73, align 4, !tbaa !7\l  %74 = add i32 %70, 13\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %75\l  store i32 0, i32 addrspace(1)* %76, align 4, !tbaa !7\l  %77 = shl i32 %24, 1\l  %78 = add i32 %77, 14\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %79\l  store i32 0, i32 addrspace(1)* %80, align 4, !tbaa !7\l  %81 = add i32 %77, 15\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %82\l  store i32 0, i32 addrspace(1)* %83, align 4, !tbaa !7\l  br label %84\l}"];
	Node0x4f11990 -> Node0x4f10c20;
	Node0x4f10c20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  ret void\l}"];
}
