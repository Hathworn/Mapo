digraph "CFG for '_Z4tanhPfS_ii' function" {
	label="CFG for '_Z4tanhPfS_ii' function";

	Node0x45a0f30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %13, %3\l  %23 = icmp slt i32 %21, %2\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %65\l|{<s0>T|<s1>F}}"];
	Node0x45a0f30:s0 -> Node0x45a49e0;
	Node0x45a0f30:s1 -> Node0x45a4a70;
	Node0x45a49e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%25:\l25:                                               \l  %26 = mul nsw i32 %21, %3\l  %27 = add nsw i32 %26, %13\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = tail call float @llvm.fabs.f32(float %30)\l  %32 = fcmp olt float %31, 6.250000e-01\l  br i1 %32, label %33, label %41\l|{<s0>T|<s1>F}}"];
	Node0x45a49e0:s0 -> Node0x45a30b0;
	Node0x45a49e0:s1 -> Node0x45a3140;
	Node0x45a30b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%33:\l33:                                               \l  %34 = fmul float %30, %30\l  %35 = tail call float @llvm.fmuladd.f32(float %34, float 0xBF7758E7A0000000,\l... float 0x3F95211920000000)\l  %36 = tail call float @llvm.fmuladd.f32(float %34, float %35, float\l... 0xBFAB8389C0000000)\l  %37 = tail call float @llvm.fmuladd.f32(float %34, float %36, float\l... 0x3FC1107040000000)\l  %38 = tail call float @llvm.fmuladd.f32(float %34, float %37, float\l... 0xBFD5555320000000)\l  %39 = fmul float %31, %38\l  %40 = tail call float @llvm.fmuladd.f32(float %34, float %39, float %31)\l  br label %58\l}"];
	Node0x45a30b0 -> Node0x45a6970;
	Node0x45a3140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%41:\l41:                                               \l  %42 = fmul float %31, 2.000000e+00\l  %43 = fmul float %42, 0x3FF7154760000000\l  %44 = tail call float @llvm.rint.f32(float %43)\l  %45 = fcmp ogt float %42, 0x40562E4300000000\l  %46 = fneg float %43\l  %47 = tail call float @llvm.fma.f32(float %42, float 0x3FF7154760000000,\l... float %46)\l  %48 = tail call float @llvm.fma.f32(float %42, float 0x3E54AE0BE0000000,\l... float %47)\l  %49 = fsub float %43, %44\l  %50 = fadd float %48, %49\l  %51 = tail call float @llvm.exp2.f32(float %50)\l  %52 = fptosi float %44 to i32\l  %53 = tail call float @llvm.amdgcn.ldexp.f32(float %51, i32 %52)\l  %54 = fadd float %53, 1.000000e+00\l  %55 = select i1 %45, float 0x7FF0000000000000, float %54\l  %56 = tail call float @llvm.amdgcn.rcp.f32(float %55)\l  %57 = tail call float @llvm.fmuladd.f32(float %56, float -2.000000e+00,\l... float 1.000000e+00)\l  br label %58\l}"];
	Node0x45a3140 -> Node0x45a6970;
	Node0x45a6970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%58:\l58:                                               \l  %59 = phi float [ %40, %33 ], [ %57, %41 ]\l  %60 = tail call float @llvm.copysign.f32(float %59, float %30)\l  %61 = sext i32 %21 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %64 = fadd contract float %60, %63\l  store float %64, float addrspace(1)* %29, align 4, !tbaa !7\l  br label %65\l}"];
	Node0x45a6970 -> Node0x45a4a70;
	Node0x45a4a70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  ret void\l}"];
}
