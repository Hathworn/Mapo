digraph "CFG for '_Z10GRUPreparePji' function" {
	label="CFG for '_Z10GRUPreparePji' function";

	Node0x4ad93e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%2:\l  %3 = icmp sgt i32 %1, 0\l  br i1 %3, label %4, label %20\l|{<s0>T|<s1>F}}"];
	Node0x4ad93e0:s0 -> Node0x4ad9ad0;
	Node0x4ad93e0:s1 -> Node0x4ad9b60;
	Node0x4ad9ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%4:\l4:                                                \l  %5 = and i32 %1, 7\l  %6 = icmp ult i32 %1, 8\l  br i1 %6, label %9, label %7\l|{<s0>T|<s1>F}}"];
	Node0x4ad9ad0:s0 -> Node0x4ad9e10;
	Node0x4ad9ad0:s1 -> Node0x4ad9e60;
	Node0x4ad9e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%7:\l7:                                                \l  %8 = and i32 %1, -8\l  br label %21\l}"];
	Node0x4ad9e60 -> Node0x4ad9ca0;
	Node0x4ad9e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%9:\l9:                                                \l  %10 = phi i32 [ 0, %4 ], [ %47, %21 ]\l  %11 = icmp eq i32 %5, 0\l  br i1 %11, label %20, label %12\l|{<s0>T|<s1>F}}"];
	Node0x4ad9e10:s0 -> Node0x4ad9b60;
	Node0x4ad9e10:s1 -> Node0x4ada2d0;
	Node0x4ada2d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l12:                                               \l  %13 = phi i32 [ %17, %12 ], [ %10, %9 ]\l  %14 = phi i32 [ %18, %12 ], [ 0, %9 ]\l  %15 = zext i32 %13 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %15\l  store i32 0, i32 addrspace(1)* %16, align 4, !tbaa !4\l  %17 = add nuw nsw i32 %13, 1\l  %18 = add i32 %14, 1\l  %19 = icmp eq i32 %18, %5\l  br i1 %19, label %20, label %12, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x4ada2d0:s0 -> Node0x4ad9b60;
	Node0x4ada2d0:s1 -> Node0x4ada2d0;
	Node0x4ad9b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%20:\l20:                                               \l  ret void\l}"];
	Node0x4ad9ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%21:\l21:                                               \l  %22 = phi i32 [ 0, %7 ], [ %47, %21 ]\l  %23 = phi i32 [ 0, %7 ], [ %48, %21 ]\l  %24 = zext i32 %22 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %24\l  store i32 0, i32 addrspace(1)* %25, align 4, !tbaa !4\l  %26 = or i32 %22, 1\l  %27 = zext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %27\l  store i32 0, i32 addrspace(1)* %28, align 4, !tbaa !4\l  %29 = or i32 %22, 2\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %30\l  store i32 0, i32 addrspace(1)* %31, align 4, !tbaa !4\l  %32 = or i32 %22, 3\l  %33 = zext i32 %32 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %33\l  store i32 0, i32 addrspace(1)* %34, align 4, !tbaa !4\l  %35 = or i32 %22, 4\l  %36 = zext i32 %35 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %36\l  store i32 0, i32 addrspace(1)* %37, align 4, !tbaa !4\l  %38 = or i32 %22, 5\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %39\l  store i32 0, i32 addrspace(1)* %40, align 4, !tbaa !4\l  %41 = or i32 %22, 6\l  %42 = zext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %42\l  store i32 0, i32 addrspace(1)* %43, align 4, !tbaa !4\l  %44 = or i32 %22, 7\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %45\l  store i32 0, i32 addrspace(1)* %46, align 4, !tbaa !4\l  %47 = add nuw nsw i32 %22, 8\l  %48 = add i32 %23, 8\l  %49 = icmp eq i32 %48, %8\l  br i1 %49, label %9, label %21, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4ad9ca0:s0 -> Node0x4ad9e10;
	Node0x4ad9ca0:s1 -> Node0x4ad9ca0;
}
