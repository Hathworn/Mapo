digraph "CFG for '_Z20get_vertex_row_groupPiS_iii' function" {
	label="CFG for '_Z20get_vertex_row_groupPiS_iii' function";

	Node0x51d8070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = icmp slt i32 %6, %3\l  br i1 %7, label %8, label %26\l|{<s0>T|<s1>F}}"];
	Node0x51d8070:s0 -> Node0x51d8e60;
	Node0x51d8070:s1 -> Node0x51d8ef0;
	Node0x51d8e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%8:\l8:                                                \l  %9 = icmp sgt i32 %2, 0\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = and i32 %2, 7\l  %16 = icmp ult i32 %2, 8\l  %17 = and i32 %2, -8\l  %18 = icmp eq i32 %15, 0\l  br label %19\l}"];
	Node0x51d8e60 -> Node0x51d9060;
	Node0x51d9060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%19:\l19:                                               \l  %20 = phi i32 [ %6, %8 ], [ %44, %43 ]\l  br i1 %9, label %21, label %43\l|{<s0>T|<s1>F}}"];
	Node0x51d9060:s0 -> Node0x51da3f0;
	Node0x51d9060:s1 -> Node0x51da2b0;
	Node0x51da3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%21:\l21:                                               \l  %22 = mul nsw i32 %20, %4\l  %23 = sext i32 %20 to i64\l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %23\l  %25 = load i32, i32 addrspace(1)* %24, align 4, !tbaa !7\l  br i1 %16, label %27, label %46\l|{<s0>T|<s1>F}}"];
	Node0x51da3f0:s0 -> Node0x51da870;
	Node0x51da3f0:s1 -> Node0x51da900;
	Node0x51d8ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%26:\l26:                                               \l  ret void\l}"];
	Node0x51da870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%27:\l27:                                               \l  %28 = phi i32 [ %25, %21 ], [ %105, %46 ]\l  %29 = phi i32 [ 0, %21 ], [ %103, %46 ]\l  br i1 %18, label %43, label %30\l|{<s0>T|<s1>F}}"];
	Node0x51da870:s0 -> Node0x51da2b0;
	Node0x51da870:s1 -> Node0x51dac20;
	Node0x51dac20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ %40, %30 ], [ %28, %27 ]\l  %32 = phi i32 [ %38, %30 ], [ %29, %27 ]\l  %33 = phi i32 [ %41, %30 ], [ 0, %27 ]\l  %34 = add nsw i32 %32, %22\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %35\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !7\l  %38 = add nuw nsw i32 %32, 1\l  %39 = mul nsw i32 %37, %38\l  %40 = add nsw i32 %31, %39\l  store i32 %40, i32 addrspace(1)* %24, align 4, !tbaa !7\l  %41 = add i32 %33, 1\l  %42 = icmp eq i32 %41, %15\l  br i1 %42, label %43, label %30, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x51dac20:s0 -> Node0x51da2b0;
	Node0x51dac20:s1 -> Node0x51dac20;
	Node0x51da2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%43:\l43:                                               \l  %44 = add i32 %20, %14\l  %45 = icmp slt i32 %44, %3\l  br i1 %45, label %19, label %26, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x51da2b0:s0 -> Node0x51d9060;
	Node0x51da2b0:s1 -> Node0x51d8ef0;
	Node0x51da900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%46:\l46:                                               \l  %47 = phi i32 [ %105, %46 ], [ %25, %21 ]\l  %48 = phi i32 [ %103, %46 ], [ 0, %21 ]\l  %49 = phi i32 [ %106, %46 ], [ 0, %21 ]\l  %50 = add nsw i32 %48, %22\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !7\l  %54 = or i32 %48, 1\l  %55 = mul nsw i32 %53, %54\l  %56 = add nsw i32 %47, %55\l  store i32 %56, i32 addrspace(1)* %24, align 4, !tbaa !7\l  %57 = add nsw i32 %54, %22\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %58\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !7\l  %61 = or i32 %48, 2\l  %62 = mul nsw i32 %60, %61\l  %63 = add nsw i32 %56, %62\l  store i32 %63, i32 addrspace(1)* %24, align 4, !tbaa !7\l  %64 = add nsw i32 %61, %22\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %65\l  %67 = load i32, i32 addrspace(1)* %66, align 4, !tbaa !7\l  %68 = or i32 %48, 3\l  %69 = mul nsw i32 %67, %68\l  %70 = add nsw i32 %63, %69\l  store i32 %70, i32 addrspace(1)* %24, align 4, !tbaa !7\l  %71 = add nsw i32 %68, %22\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %72\l  %74 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !7\l  %75 = or i32 %48, 4\l  %76 = mul nsw i32 %74, %75\l  %77 = add nsw i32 %70, %76\l  store i32 %77, i32 addrspace(1)* %24, align 4, !tbaa !7\l  %78 = add nsw i32 %75, %22\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %79\l  %81 = load i32, i32 addrspace(1)* %80, align 4, !tbaa !7\l  %82 = or i32 %48, 5\l  %83 = mul nsw i32 %81, %82\l  %84 = add nsw i32 %77, %83\l  store i32 %84, i32 addrspace(1)* %24, align 4, !tbaa !7\l  %85 = add nsw i32 %82, %22\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %86\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !7\l  %89 = or i32 %48, 6\l  %90 = mul nsw i32 %88, %89\l  %91 = add nsw i32 %84, %90\l  store i32 %91, i32 addrspace(1)* %24, align 4, !tbaa !7\l  %92 = add nsw i32 %89, %22\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %93\l  %95 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !7\l  %96 = or i32 %48, 7\l  %97 = mul nsw i32 %95, %96\l  %98 = add nsw i32 %91, %97\l  store i32 %98, i32 addrspace(1)* %24, align 4, !tbaa !7\l  %99 = add nsw i32 %96, %22\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %100\l  %102 = load i32, i32 addrspace(1)* %101, align 4, !tbaa !7\l  %103 = add nuw nsw i32 %48, 8\l  %104 = mul nsw i32 %102, %103\l  %105 = add nsw i32 %98, %104\l  store i32 %105, i32 addrspace(1)* %24, align 4, !tbaa !7\l  %106 = add i32 %49, 8\l  %107 = icmp eq i32 %106, %17\l  br i1 %107, label %27, label %46, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x51da900:s0 -> Node0x51da870;
	Node0x51da900:s1 -> Node0x51da900;
}
