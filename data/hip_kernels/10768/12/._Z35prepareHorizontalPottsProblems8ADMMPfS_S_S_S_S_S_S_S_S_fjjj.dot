digraph "CFG for '_Z35prepareHorizontalPottsProblems8ADMMPfS_S_S_S_S_S_S_S_S_fjjj' function" {
	label="CFG for '_Z35prepareHorizontalPottsProblems8ADMMPfS_S_S_S_S_S_S_S_S_fjjj' function";

	Node0x61f7480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %16 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = getelementptr i8, i8 addrspace(4)* %16, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = add i32 %22, %15\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %25 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %26 = getelementptr i8, i8 addrspace(4)* %16, i64 6\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 2, !range !5, !invariant.load !6\l  %29 = zext i16 %28 to i32\l  %30 = mul i32 %25, %29\l  %31 = add i32 %30, %24\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !4\l  %33 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %34 = getelementptr i8, i8 addrspace(4)* %16, i64 8\l  %35 = bitcast i8 addrspace(4)* %34 to i16 addrspace(4)*\l  %36 = load i16, i16 addrspace(4)* %35, align 4, !range !5, !invariant.load !6\l  %37 = zext i16 %36 to i32\l  %38 = mul i32 %33, %37\l  %39 = add i32 %38, %32\l  %40 = icmp ult i32 %23, %11\l  %41 = icmp ult i32 %31, %12\l  %42 = select i1 %40, i1 %41, i1 false\l  %43 = icmp ult i32 %39, %13\l  %44 = select i1 %42, i1 %43, i1 false\l  br i1 %44, label %45, label %84\l|{<s0>T|<s1>F}}"];
	Node0x61f7480:s0 -> Node0x61fc540;
	Node0x61f7480:s1 -> Node0x61fc5d0;
	Node0x61fc540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%45:\l45:                                               \l  %46 = mul i32 %31, %11\l  %47 = add i32 %46, %23\l  %48 = mul i32 %12, %11\l  %49 = mul i32 %48, %39\l  %50 = add i32 %47, %49\l  %51 = zext i32 %47 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %5, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %54 = zext i32 %50 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %57 = fmul contract float %53, %56\l  %58 = fmul contract float %10, 2.000000e+00\l  %59 = getelementptr inbounds float, float addrspace(1)* %2, i64 %54\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %61 = getelementptr inbounds float, float addrspace(1)* %3, i64 %54\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %63 = fadd contract float %60, %62\l  %64 = getelementptr inbounds float, float addrspace(1)* %4, i64 %54\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %66 = fadd contract float %63, %65\l  %67 = fmul contract float %58, %66\l  %68 = fadd contract float %57, %67\l  %69 = getelementptr inbounds float, float addrspace(1)* %7, i64 %54\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %71 = fneg contract float %70\l  %72 = getelementptr inbounds float, float addrspace(1)* %8, i64 %54\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %74 = fsub contract float %71, %73\l  %75 = getelementptr inbounds float, float addrspace(1)* %9, i64 %54\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %77 = fsub contract float %74, %76\l  %78 = fmul contract float %77, 2.000000e+00\l  %79 = fadd contract float %68, %78\l  %80 = getelementptr inbounds float, float addrspace(1)* %6, i64 %51\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %82 = fdiv contract float %79, %81\l  %83 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  store float %82, float addrspace(1)* %83, align 4, !tbaa !7\l  br label %84\l}"];
	Node0x61fc540 -> Node0x61fc5d0;
	Node0x61fc5d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  ret void\l}"];
}
