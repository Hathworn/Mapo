digraph "CFG for '_Z35updateLagrangeMultiplierKernel8ADMMPfS_S_S_S_S_S_S_S_S_S_fjjj' function" {
	label="CFG for '_Z35updateLagrangeMultiplierKernel8ADMMPfS_S_S_S_S_S_S_S_S_S_fjjj' function";

	Node0x49a0940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %17 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = getelementptr i8, i8 addrspace(4)* %17, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = add i32 %23, %16\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %27 = getelementptr i8, i8 addrspace(4)* %17, i64 6\l  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*\l  %29 = load i16, i16 addrspace(4)* %28, align 2, !range !5, !invariant.load !6\l  %30 = zext i16 %29 to i32\l  %31 = mul i32 %26, %30\l  %32 = add i32 %31, %25\l  %33 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !4\l  %34 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %35 = getelementptr i8, i8 addrspace(4)* %17, i64 8\l  %36 = bitcast i8 addrspace(4)* %35 to i16 addrspace(4)*\l  %37 = load i16, i16 addrspace(4)* %36, align 4, !range !5, !invariant.load !6\l  %38 = zext i16 %37 to i32\l  %39 = mul i32 %34, %38\l  %40 = add i32 %39, %33\l  %41 = icmp ult i32 %24, %12\l  %42 = icmp ult i32 %32, %13\l  %43 = select i1 %41, i1 %42, i1 false\l  %44 = icmp ult i32 %40, %14\l  %45 = select i1 %43, i1 %44, i1 false\l  br i1 %45, label %46, label %102\l|{<s0>T|<s1>F}}"];
	Node0x49a0940:s0 -> Node0x49a5a40;
	Node0x49a0940:s1 -> Node0x49a5ad0;
	Node0x49a5a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%46:\l46:                                               \l  %47 = mul i32 %40, %13\l  %48 = add i32 %47, %32\l  %49 = mul i32 %48, %12\l  %50 = add i32 %49, %24\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %56 = fsub contract float %53, %55\l  %57 = getelementptr inbounds float, float addrspace(1)* %10, i64 %51\l  store float %56, float addrspace(1)* %57, align 4, !tbaa !7\l  %58 = getelementptr inbounds float, float addrspace(1)* %4, i64 %51\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = load float, float addrspace(1)* %52, align 4, !tbaa !7\l  %61 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %62 = fsub contract float %60, %61\l  %63 = fmul contract float %62, %11\l  %64 = fadd contract float %59, %63\l  store float %64, float addrspace(1)* %58, align 4, !tbaa !7\l  %65 = getelementptr inbounds float, float addrspace(1)* %5, i64 %51\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7\l  %67 = load float, float addrspace(1)* %52, align 4, !tbaa !7\l  %68 = getelementptr inbounds float, float addrspace(1)* %2, i64 %51\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7\l  %70 = fsub contract float %67, %69\l  %71 = fmul contract float %70, %11\l  %72 = fadd contract float %66, %71\l  store float %72, float addrspace(1)* %65, align 4, !tbaa !7\l  %73 = getelementptr inbounds float, float addrspace(1)* %6, i64 %51\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7\l  %75 = load float, float addrspace(1)* %52, align 4, !tbaa !7\l  %76 = getelementptr inbounds float, float addrspace(1)* %3, i64 %51\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7\l  %78 = fsub contract float %75, %77\l  %79 = fmul contract float %78, %11\l  %80 = fadd contract float %74, %79\l  store float %80, float addrspace(1)* %73, align 4, !tbaa !7\l  %81 = getelementptr inbounds float, float addrspace(1)* %7, i64 %51\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  %83 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %84 = load float, float addrspace(1)* %68, align 4, !tbaa !7\l  %85 = fsub contract float %83, %84\l  %86 = fmul contract float %85, %11\l  %87 = fadd contract float %82, %86\l  store float %87, float addrspace(1)* %81, align 4, !tbaa !7\l  %88 = getelementptr inbounds float, float addrspace(1)* %8, i64 %51\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7\l  %90 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %91 = load float, float addrspace(1)* %76, align 4, !tbaa !7\l  %92 = fsub contract float %90, %91\l  %93 = fmul contract float %92, %11\l  %94 = fadd contract float %89, %93\l  store float %94, float addrspace(1)* %88, align 4, !tbaa !7\l  %95 = getelementptr inbounds float, float addrspace(1)* %9, i64 %51\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7\l  %97 = load float, float addrspace(1)* %68, align 4, !tbaa !7\l  %98 = load float, float addrspace(1)* %76, align 4, !tbaa !7\l  %99 = fsub contract float %97, %98\l  %100 = fmul contract float %99, %11\l  %101 = fadd contract float %96, %100\l  store float %101, float addrspace(1)* %95, align 4, !tbaa !7\l  br label %102\l}"];
	Node0x49a5a40 -> Node0x49a5ad0;
	Node0x49a5ad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  ret void\l}"];
}
