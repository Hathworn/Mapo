digraph "CFG for '_Z33prepareVerticalPottsProblems4ADMMPfS_S_S_S_S_fjjj' function" {
	label="CFG for '_Z33prepareVerticalPottsProblems4ADMMPfS_S_S_S_S_fjjj' function";

	Node0x5e75070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = add i32 %18, %11\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !5, !invariant.load !6\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %21, %25\l  %27 = add i32 %26, %20\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !4\l  %29 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %30 = getelementptr i8, i8 addrspace(4)* %12, i64 8\l  %31 = bitcast i8 addrspace(4)* %30 to i16 addrspace(4)*\l  %32 = load i16, i16 addrspace(4)* %31, align 4, !range !5, !invariant.load !6\l  %33 = zext i16 %32 to i32\l  %34 = mul i32 %29, %33\l  %35 = add i32 %34, %28\l  %36 = icmp ult i32 %19, %7\l  %37 = icmp ult i32 %27, %8\l  %38 = select i1 %36, i1 %37, i1 false\l  %39 = icmp ult i32 %35, %9\l  %40 = select i1 %38, i1 %39, i1 false\l  br i1 %40, label %41, label %65\l|{<s0>T|<s1>F}}"];
	Node0x5e75070:s0 -> Node0x5e7a0b0;
	Node0x5e75070:s1 -> Node0x5e7a140;
	Node0x5e7a0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%41:\l41:                                               \l  %42 = mul i32 %27, %7\l  %43 = add i32 %42, %19\l  %44 = mul i32 %8, %7\l  %45 = mul i32 %44, %35\l  %46 = add i32 %43, %45\l  %47 = zext i32 %43 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %3, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %50 = zext i32 %46 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %53 = fmul contract float %49, %52\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %50\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %56 = fmul contract float %55, %6\l  %57 = fadd contract float %53, %56\l  %58 = getelementptr inbounds float, float addrspace(1)* %5, i64 %50\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %60 = fadd contract float %59, %57\l  %61 = getelementptr inbounds float, float addrspace(1)* %4, i64 %47\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %63 = fdiv contract float %60, %62\l  %64 = getelementptr inbounds float, float addrspace(1)* %2, i64 %50\l  store float %63, float addrspace(1)* %64, align 4, !tbaa !7\l  br label %65\l}"];
	Node0x5e7a0b0 -> Node0x5e7a140;
	Node0x5e7a140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  ret void\l}"];
}
