digraph "CFG for '_Z15forces_and_stepPdS_jdt' function" {
	label="CFG for '_Z15forces_and_stepPdS_jdt' function";

	Node0x63da490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%5:\l  %6 = zext i16 %4 to i32\l  %7 = icmp eq i16 %4, 0\l  br i1 %7, label %21, label %8\l|{<s0>T|<s1>F}}"];
	Node0x63da490:s0 -> Node0x63dabf0;
	Node0x63da490:s1 -> Node0x63dac40;
	Node0x63dac40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%8:\l8:                                                \l  %9 = mul nuw nsw i32 %6, 5\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = mul i32 %9, %18\l  %20 = mul i32 %2, 5\l  br label %22\l}"];
	Node0x63dac40 -> Node0x63dc7e0;
	Node0x63dabf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%21:\l21:                                               \l  ret void\l}"];
	Node0x63dc7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%22:\l22:                                               \l  %23 = phi i32 [ %19, %8 ], [ %298, %297 ]\l  %24 = phi i32 [ 0, %8 ], [ %299, %297 ]\l  %25 = icmp ult i32 %23, %20\l  br i1 %25, label %26, label %297\l|{<s0>T|<s1>F}}"];
	Node0x63dc7e0:s0 -> Node0x63dcc10;
	Node0x63dc7e0:s1 -> Node0x63dc930;
	Node0x63dcc10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%26:\l26:                                               \l  %27 = zext i32 %23 to i64\l  %28 = getelementptr inbounds double, double addrspace(1)* %0, i64 %27\l  %29 = load double, double addrspace(1)* %28, align 8, !tbaa !7\l  %30 = add nuw i32 %23, 1\l  %31 = zext i32 %30 to i64\l  %32 = getelementptr inbounds double, double addrspace(1)* %0, i64 %31\l  %33 = load double, double addrspace(1)* %32, align 8, !tbaa !7\l  %34 = add i32 %23, 4\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds double, double addrspace(1)* %0, i64 %35\l  br label %66\l}"];
	Node0x63dcc10 -> Node0x63ddaf0;
	Node0x63ddbf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%37:\l37:                                               \l  %38 = add i32 %23, 2\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds double, double addrspace(1)* %0, i64 %39\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !7\l  %42 = load double, double addrspace(1)* %36, align 8, !tbaa !7\l  %43 = fdiv contract double %293, %42\l  %44 = fmul contract double %43, %3\l  %45 = fadd contract double %41, %44\l  %46 = getelementptr inbounds double, double addrspace(1)* %1, i64 %39\l  store double %45, double addrspace(1)* %46, align 8, !tbaa !7\l  %47 = add i32 %23, 3\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %0, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !7\l  %51 = load double, double addrspace(1)* %36, align 8, !tbaa !7\l  %52 = fdiv contract double %294, %51\l  %53 = fmul contract double %52, %3\l  %54 = fadd contract double %50, %53\l  %55 = getelementptr inbounds double, double addrspace(1)* %1, i64 %48\l  store double %54, double addrspace(1)* %55, align 8, !tbaa !7\l  %56 = load double, double addrspace(1)* %28, align 8, !tbaa !7\l  %57 = fmul contract double %45, %3\l  %58 = fadd contract double %57, %56\l  %59 = getelementptr inbounds double, double addrspace(1)* %1, i64 %27\l  store double %58, double addrspace(1)* %59, align 8, !tbaa !7\l  %60 = load double, double addrspace(1)* %32, align 8, !tbaa !7\l  %61 = fmul contract double %54, %3\l  %62 = fadd contract double %60, %61\l  %63 = getelementptr inbounds double, double addrspace(1)* %1, i64 %31\l  store double %62, double addrspace(1)* %63, align 8, !tbaa !7\l  %64 = load double, double addrspace(1)* %36, align 8, !tbaa !7\l  %65 = getelementptr inbounds double, double addrspace(1)* %1, i64 %35\l  store double %64, double addrspace(1)* %65, align 8, !tbaa !7\l  br label %297\l}"];
	Node0x63ddbf0 -> Node0x63dc930;
	Node0x63ddaf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi i32 [ 0, %26 ], [ %295, %292 ]\l  %68 = phi double [ 0.000000e+00, %26 ], [ %294, %292 ]\l  %69 = phi double [ 0.000000e+00, %26 ], [ %293, %292 ]\l  %70 = zext i32 %67 to i64\l  %71 = getelementptr inbounds double, double addrspace(1)* %0, i64 %70\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !7\l  %73 = fsub contract double %72, %29\l  %74 = add nuw i32 %67, 1\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds double, double addrspace(1)* %0, i64 %75\l  %77 = load double, double addrspace(1)* %76, align 8, !tbaa !7\l  %78 = fsub contract double %77, %33\l  %79 = fcmp contract oeq double %73, 0.000000e+00\l  %80 = fcmp contract oeq double %78, 0.000000e+00\l  %81 = select i1 %79, i1 %80, i1 false\l  br i1 %81, label %292, label %82\l|{<s0>T|<s1>F}}"];
	Node0x63ddaf0:s0 -> Node0x63dd340;
	Node0x63ddaf0:s1 -> Node0x63e05c0;
	Node0x63e05c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%82:\l82:                                               \l  %83 = add i32 %67, 4\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds double, double addrspace(1)* %0, i64 %84\l  %86 = load double, double addrspace(1)* %85, align 8, !tbaa !7\l  %87 = fmul contract double %86, 4.302000e-03\l  %88 = load double, double addrspace(1)* %36, align 8, !tbaa !7\l  %89 = fmul contract double %87, %88\l  %90 = fmul contract double %73, %89\l  %91 = fmul contract double %73, %73\l  %92 = fmul contract double %78, %78\l  %93 = fadd contract double %91, %92\l  %94 = fcmp olt double %93, 0x1000000000000000\l  %95 = select i1 %94, double 0x4FF0000000000000, double 1.000000e+00\l  %96 = fmul double %93, %95\l  %97 = tail call double @llvm.amdgcn.rsq.f64(double %96)\l  %98 = fmul double %96, %97\l  %99 = fmul double %97, 5.000000e-01\l  %100 = fneg double %99\l  %101 = tail call double @llvm.fma.f64(double %100, double %98, double\l... 5.000000e-01)\l  %102 = tail call double @llvm.fma.f64(double %99, double %101, double %99)\l  %103 = tail call double @llvm.fma.f64(double %98, double %101, double %98)\l  %104 = fneg double %103\l  %105 = tail call double @llvm.fma.f64(double %104, double %103, double %96)\l  %106 = tail call double @llvm.fma.f64(double %105, double %102, double %103)\l  %107 = fneg double %106\l  %108 = tail call double @llvm.fma.f64(double %107, double %106, double %96)\l  %109 = tail call double @llvm.fma.f64(double %108, double %102, double %106)\l  %110 = select i1 %94, double 0x37F0000000000000, double 1.000000e+00\l  %111 = fmul double %110, %109\l  %112 = fcmp oeq double %96, 0.000000e+00\l  %113 = fcmp oeq double %96, 0x7FF0000000000000\l  %114 = or i1 %112, %113\l  %115 = select i1 %114, double %96, double %111\l  %116 = tail call double @llvm.fabs.f64(double %115)\l  %117 = tail call double @llvm.amdgcn.frexp.mant.f64(double %116)\l  %118 = fcmp olt double %117, 0x3FE5555555555555\l  %119 = zext i1 %118 to i32\l  %120 = tail call double @llvm.amdgcn.ldexp.f64(double %117, i32 %119)\l  %121 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %116)\l  %122 = sub nsw i32 %121, %119\l  %123 = fadd double %120, -1.000000e+00\l  %124 = fadd double %120, 1.000000e+00\l  %125 = fadd double %124, -1.000000e+00\l  %126 = fsub double %120, %125\l  %127 = tail call double @llvm.amdgcn.rcp.f64(double %124)\l  %128 = fneg double %124\l  %129 = tail call double @llvm.fma.f64(double %128, double %127, double\l... 1.000000e+00)\l  %130 = tail call double @llvm.fma.f64(double %129, double %127, double %127)\l  %131 = tail call double @llvm.fma.f64(double %128, double %130, double\l... 1.000000e+00)\l  %132 = tail call double @llvm.fma.f64(double %131, double %130, double %130)\l  %133 = fmul double %123, %132\l  %134 = fmul double %124, %133\l  %135 = fneg double %134\l  %136 = tail call double @llvm.fma.f64(double %133, double %124, double %135)\l  %137 = tail call double @llvm.fma.f64(double %133, double %126, double %136)\l  %138 = fadd double %134, %137\l  %139 = fsub double %138, %134\l  %140 = fsub double %137, %139\l  %141 = fsub double %123, %138\l  %142 = fsub double %123, %141\l  %143 = fsub double %142, %138\l  %144 = fsub double %143, %140\l  %145 = fadd double %141, %144\l  %146 = fmul double %132, %145\l  %147 = fadd double %133, %146\l  %148 = fsub double %147, %133\l  %149 = fsub double %146, %148\l  %150 = fmul double %147, %147\l  %151 = fneg double %150\l  %152 = tail call double @llvm.fma.f64(double %147, double %147, double %151)\l  %153 = fmul double %149, 2.000000e+00\l  %154 = tail call double @llvm.fma.f64(double %147, double %153, double %152)\l  %155 = fadd double %150, %154\l  %156 = fsub double %155, %150\l  %157 = fsub double %154, %156\l  %158 = tail call double @llvm.fma.f64(double %155, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %159 = tail call double @llvm.fma.f64(double %155, double %158, double\l... 0x3FBE25E43ABE935A)\l  %160 = tail call double @llvm.fma.f64(double %155, double %159, double\l... 0x3FC110EF47E6C9C2)\l  %161 = tail call double @llvm.fma.f64(double %155, double %160, double\l... 0x3FC3B13BCFA74449)\l  %162 = tail call double @llvm.fma.f64(double %155, double %161, double\l... 0x3FC745D171BF3C30)\l  %163 = tail call double @llvm.fma.f64(double %155, double %162, double\l... 0x3FCC71C71C7792CE)\l  %164 = tail call double @llvm.fma.f64(double %155, double %163, double\l... 0x3FD24924924920DA)\l  %165 = tail call double @llvm.fma.f64(double %155, double %164, double\l... 0x3FD999999999999C)\l  %166 = sitofp i32 %122 to double\l  %167 = fmul double %166, 0x3FE62E42FEFA39EF\l  %168 = fneg double %167\l  %169 = tail call double @llvm.fma.f64(double %166, double\l... 0x3FE62E42FEFA39EF, double %168)\l  %170 = tail call double @llvm.fma.f64(double %166, double\l... 0x3C7ABC9E3B39803F, double %169)\l  %171 = fadd double %167, %170\l  %172 = fsub double %171, %167\l  %173 = fsub double %170, %172\l  %174 = tail call double @llvm.amdgcn.ldexp.f64(double %147, i32 1)\l  %175 = tail call double @llvm.amdgcn.ldexp.f64(double %149, i32 1)\l  %176 = fmul double %147, %155\l  %177 = fneg double %176\l  %178 = tail call double @llvm.fma.f64(double %155, double %147, double %177)\l  %179 = tail call double @llvm.fma.f64(double %155, double %149, double %178)\l  %180 = tail call double @llvm.fma.f64(double %157, double %147, double %179)\l  %181 = fadd double %176, %180\l  %182 = fsub double %181, %176\l  %183 = fsub double %180, %182\l  %184 = fmul double %155, %165\l  %185 = fneg double %184\l  %186 = tail call double @llvm.fma.f64(double %155, double %165, double %185)\l  %187 = tail call double @llvm.fma.f64(double %157, double %165, double %186)\l  %188 = fadd double %184, %187\l  %189 = fsub double %188, %184\l  %190 = fsub double %187, %189\l  %191 = fadd double %188, 0x3FE5555555555555\l  %192 = fadd double %191, 0xBFE5555555555555\l  %193 = fsub double %188, %192\l  %194 = fadd double %190, 0x3C8543B0D5DF274D\l  %195 = fadd double %194, %193\l  %196 = fadd double %191, %195\l  %197 = fsub double %196, %191\l  %198 = fsub double %195, %197\l  %199 = fmul double %181, %196\l  %200 = fneg double %199\l  %201 = tail call double @llvm.fma.f64(double %181, double %196, double %200)\l  %202 = tail call double @llvm.fma.f64(double %181, double %198, double %201)\l  %203 = tail call double @llvm.fma.f64(double %183, double %196, double %202)\l  %204 = fadd double %199, %203\l  %205 = fsub double %204, %199\l  %206 = fsub double %203, %205\l  %207 = fadd double %174, %204\l  %208 = fsub double %207, %174\l  %209 = fsub double %204, %208\l  %210 = fadd double %175, %206\l  %211 = fadd double %210, %209\l  %212 = fadd double %207, %211\l  %213 = fsub double %212, %207\l  %214 = fsub double %211, %213\l  %215 = fadd double %171, %212\l  %216 = fsub double %215, %171\l  %217 = fsub double %215, %216\l  %218 = fsub double %171, %217\l  %219 = fsub double %212, %216\l  %220 = fadd double %219, %218\l  %221 = fadd double %173, %214\l  %222 = fsub double %221, %173\l  %223 = fsub double %221, %222\l  %224 = fsub double %173, %223\l  %225 = fsub double %214, %222\l  %226 = fadd double %225, %224\l  %227 = fadd double %221, %220\l  %228 = fadd double %215, %227\l  %229 = fsub double %228, %215\l  %230 = fsub double %227, %229\l  %231 = fadd double %226, %230\l  %232 = fadd double %228, %231\l  %233 = fsub double %232, %228\l  %234 = fsub double %231, %233\l  %235 = fmul double %232, 3.000000e+00\l  %236 = fneg double %235\l  %237 = tail call double @llvm.fma.f64(double %232, double 3.000000e+00,\l... double %236)\l  %238 = tail call double @llvm.fma.f64(double %234, double 3.000000e+00,\l... double %237)\l  %239 = fadd double %235, %238\l  %240 = fsub double %239, %235\l  %241 = fsub double %238, %240\l  %242 = tail call double @llvm.fabs.f64(double %235) #3\l  %243 = fcmp oeq double %242, 0x7FF0000000000000\l  %244 = select i1 %243, double %235, double %239\l  %245 = tail call double @llvm.fabs.f64(double %244) #3\l  %246 = fcmp oeq double %245, 0x7FF0000000000000\l  %247 = select i1 %246, double 0.000000e+00, double %241\l  %248 = fmul double %244, 0x3FF71547652B82FE\l  %249 = tail call double @llvm.rint.f64(double %248)\l  %250 = fneg double %249\l  %251 = tail call double @llvm.fma.f64(double %250, double\l... 0x3FE62E42FEFA39EF, double %244)\l  %252 = tail call double @llvm.fma.f64(double %250, double\l... 0x3C7ABC9E3B39803F, double %251)\l  %253 = tail call double @llvm.fma.f64(double %252, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %254 = tail call double @llvm.fma.f64(double %252, double %253, double\l... 0x3EC71DEE623FDE64)\l  %255 = tail call double @llvm.fma.f64(double %252, double %254, double\l... 0x3EFA01997C89E6B0)\l  %256 = tail call double @llvm.fma.f64(double %252, double %255, double\l... 0x3F2A01A014761F6E)\l  %257 = tail call double @llvm.fma.f64(double %252, double %256, double\l... 0x3F56C16C1852B7B0)\l  %258 = tail call double @llvm.fma.f64(double %252, double %257, double\l... 0x3F81111111122322)\l  %259 = tail call double @llvm.fma.f64(double %252, double %258, double\l... 0x3FA55555555502A1)\l  %260 = tail call double @llvm.fma.f64(double %252, double %259, double\l... 0x3FC5555555555511)\l  %261 = tail call double @llvm.fma.f64(double %252, double %260, double\l... 0x3FE000000000000B)\l  %262 = tail call double @llvm.fma.f64(double %252, double %261, double\l... 1.000000e+00)\l  %263 = tail call double @llvm.fma.f64(double %252, double %262, double\l... 1.000000e+00)\l  %264 = fptosi double %249 to i32\l  %265 = tail call double @llvm.amdgcn.ldexp.f64(double %263, i32 %264)\l  %266 = fcmp ogt double %244, 1.024000e+03\l  %267 = select i1 %266, double 0x7FF0000000000000, double %265\l  %268 = fcmp olt double %244, -1.075000e+03\l  %269 = select i1 %268, double 0.000000e+00, double %267\l  %270 = tail call double @llvm.fma.f64(double %269, double %247, double %269)\l  %271 = tail call double @llvm.fabs.f64(double %269) #3\l  %272 = fcmp oeq double %271, 0x7FF0000000000000\l  %273 = select i1 %272, double %269, double %270\l  %274 = fcmp olt double %115, 0.000000e+00\l  %275 = select i1 %274, double -0.000000e+00, double 0.000000e+00\l  %276 = tail call double @llvm.copysign.f64(double %273, double %275)\l  %277 = fcmp oeq double %116, 0x7FF0000000000000\l  %278 = fcmp oeq double %115, 0.000000e+00\l  %279 = or i1 %278, %277\l  %280 = select i1 %278, double 0.000000e+00, double 0x7FF0000000000000\l  %281 = tail call double @llvm.copysign.f64(double %280, double %115)\l  %282 = select i1 %279, double %281, double %276\l  %283 = fcmp uno double %115, 0.000000e+00\l  %284 = select i1 %283, double 0x7FF8000000000000, double %282\l  %285 = fcmp oeq double %115, 1.000000e+00\l  %286 = select i1 %285, double 1.000000e+00, double %284\l  %287 = fdiv contract double %90, %286\l  %288 = fadd contract double %69, %287\l  %289 = fmul contract double %78, %89\l  %290 = fdiv contract double %289, %286\l  %291 = fadd contract double %68, %290\l  br label %292\l}"];
	Node0x63e05c0 -> Node0x63dd340;
	Node0x63dd340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%292:\l292:                                              \l  %293 = phi double [ %288, %82 ], [ %69, %66 ]\l  %294 = phi double [ %291, %82 ], [ %68, %66 ]\l  %295 = add i32 %67, 5\l  %296 = icmp ult i32 %295, %20\l  br i1 %296, label %66, label %37, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x63dd340:s0 -> Node0x63ddaf0;
	Node0x63dd340:s1 -> Node0x63ddbf0;
	Node0x63dc930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%297:\l297:                                              \l  %298 = add i32 %23, 5\l  %299 = add nuw nsw i32 %24, 1\l  %300 = icmp eq i32 %299, %6\l  br i1 %300, label %21, label %22, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x63dc930:s0 -> Node0x63dabf0;
	Node0x63dc930:s1 -> Node0x63dc7e0;
}
