digraph "CFG for '_Z16calculateFitnessPiS_S_S_S_S_S_S_' function" {
	label="CFG for '_Z16calculateFitnessPiS_S_S_S_S_S_S_' function";

	Node0x54b2e80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = zext i32 %9 to i64\l  %12 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %11\l  %13 = load i32, i32 addrspace(1)* %12, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %14 = sext i32 %10 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %14\l  %16 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %17 = icmp eq i32 %13, %16\l  br i1 %17, label %18, label %37\l|{<s0>T|<s1>F}}"];
	Node0x54b2e80:s0 -> Node0x54b51e0;
	Node0x54b2e80:s1 -> Node0x54b5270;
	Node0x54b51e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%18:\l18:                                               \l  %19 = sext i32 %13 to i64\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %19\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %19\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %27 = icmp slt i32 %21, %26\l  br i1 %27, label %28, label %37\l|{<s0>T|<s1>F}}"];
	Node0x54b51e0:s0 -> Node0x54b58d0;
	Node0x54b51e0:s1 -> Node0x54b5270;
	Node0x54b58d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%28:\l28:                                               \l  %29 = mul nsw i32 %9, %10\l  %30 = add nsw i32 %29, %9\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %34 = add nsw i32 %33, 1\l  store i32 %34, i32 addrspace(1)* %32, align 4, !tbaa !5\l  %35 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !5\l  %36 = load i32, i32 addrspace(1)* %12, align 4, !tbaa !5\l  br label %37\l}"];
	Node0x54b58d0 -> Node0x54b5270;
	Node0x54b5270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi i32 [ %36, %28 ], [ %13, %18 ], [ %13, %8 ]\l  %39 = phi i32 [ %35, %28 ], [ %13, %18 ], [ %16, %8 ]\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %40\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !5\l  %43 = sext i32 %38 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %43\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !5\l  %46 = icmp eq i32 %42, %45\l  br i1 %46, label %47, label %66\l|{<s0>T|<s1>F}}"];
	Node0x54b5270:s0 -> Node0x54b6ba0;
	Node0x54b5270:s1 -> Node0x54b6bf0;
	Node0x54b6ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%47:\l47:                                               \l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %43\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !5\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %40\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !5\l  %52 = icmp ne i32 %49, %51\l  %53 = icmp eq i32 %38, %39\l  %54 = select i1 %52, i1 true, i1 %53\l  br i1 %54, label %66, label %55\l|{<s0>T|<s1>F}}"];
	Node0x54b6ba0:s0 -> Node0x54b6bf0;
	Node0x54b6ba0:s1 -> Node0x54b7120;
	Node0x54b7120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%55:\l55:                                               \l  %56 = mul nsw i32 %9, %10\l  %57 = add nsw i32 %56, %9\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %58\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !5\l  %61 = add nsw i32 %60, 1\l  store i32 %61, i32 addrspace(1)* %59, align 4, !tbaa !5\l  %62 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !5\l  %63 = load i32, i32 addrspace(1)* %12, align 4, !tbaa !5\l  %64 = sext i32 %63 to i64\l  %65 = sext i32 %62 to i64\l  br label %66\l}"];
	Node0x54b7120 -> Node0x54b6bf0;
	Node0x54b6bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi i64 [ %65, %55 ], [ %40, %47 ], [ %40, %37 ]\l  %68 = phi i64 [ %64, %55 ], [ %43, %47 ], [ %43, %37 ]\l  %69 = phi i32 [ %63, %55 ], [ %38, %47 ], [ %38, %37 ]\l  %70 = phi i32 [ %62, %55 ], [ %39, %47 ], [ %39, %37 ]\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %68\l  %72 = load i32, i32 addrspace(1)* %71, align 4, !tbaa !5\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %67\l  %74 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !5\l  %75 = icmp ne i32 %72, %74\l  %76 = icmp eq i32 %69, %70\l  %77 = select i1 %75, i1 true, i1 %76\l  br i1 %77, label %85, label %78\l|{<s0>T|<s1>F}}"];
	Node0x54b6bf0:s0 -> Node0x54b8180;
	Node0x54b6bf0:s1 -> Node0x54b81d0;
	Node0x54b81d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%78:\l78:                                               \l  %79 = mul nsw i32 %9, %10\l  %80 = add nsw i32 %79, %9\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !5\l  %84 = add nsw i32 %83, 1\l  store i32 %84, i32 addrspace(1)* %82, align 4, !tbaa !5\l  br label %85\l}"];
	Node0x54b81d0 -> Node0x54b8180;
	Node0x54b8180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  ret void\l}"];
}
