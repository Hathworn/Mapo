digraph "CFG for '_Z20consolidateHistogramPmS_j' function" {
	label="CFG for '_Z20consolidateHistogramPmS_j' function";

	Node0x4f63b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = icmp eq i32 %2, 0\l  br i1 %5, label %31, label %6\l|{<s0>T|<s1>F}}"];
	Node0x4f63b90:s0 -> Node0x4f65010;
	Node0x4f63b90:s1 -> Node0x4f650a0;
	Node0x4f650a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%6:\l6:                                                \l  %7 = zext i32 %4 to i64\l  %8 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %7\l  %9 = load i64, i64 addrspace(1)* %8, align 8, !tbaa !5\l  %10 = and i32 %2, 7\l  %11 = icmp ult i32 %2, 8\l  br i1 %11, label %14, label %12\l|{<s0>T|<s1>F}}"];
	Node0x4f650a0:s0 -> Node0x4f64920;
	Node0x4f650a0:s1 -> Node0x4f65680;
	Node0x4f65680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%12:\l12:                                               \l  %13 = and i32 %2, -8\l  br label %32\l}"];
	Node0x4f65680 -> Node0x4f65880;
	Node0x4f64920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%14:\l14:                                               \l  %15 = phi i64 [ %9, %6 ], [ %90, %32 ]\l  %16 = phi i32 [ 0, %6 ], [ %91, %32 ]\l  %17 = icmp eq i32 %10, 0\l  br i1 %17, label %31, label %18\l|{<s0>T|<s1>F}}"];
	Node0x4f64920:s0 -> Node0x4f65010;
	Node0x4f64920:s1 -> Node0x4f65c50;
	Node0x4f65c50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%18:\l18:                                               \l  %19 = phi i64 [ %27, %18 ], [ %15, %14 ]\l  %20 = phi i32 [ %28, %18 ], [ %16, %14 ]\l  %21 = phi i32 [ %29, %18 ], [ 0, %14 ]\l  %22 = shl i32 %20, 8\l  %23 = add i32 %22, %4\l  %24 = zext i32 %23 to i64\l  %25 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %24\l  %26 = load i64, i64 addrspace(1)* %25, align 8, !tbaa !5\l  %27 = add i64 %19, %26\l  store i64 %27, i64 addrspace(1)* %8, align 8, !tbaa !5\l  %28 = add nuw i32 %20, 1\l  %29 = add i32 %21, 1\l  %30 = icmp eq i32 %29, %10\l  br i1 %30, label %31, label %18, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x4f65c50:s0 -> Node0x4f65010;
	Node0x4f65c50:s1 -> Node0x4f65c50;
	Node0x4f65010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%31:\l31:                                               \l  ret void\l}"];
	Node0x4f65880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = phi i64 [ %9, %12 ], [ %90, %32 ]\l  %34 = phi i32 [ 0, %12 ], [ %91, %32 ]\l  %35 = phi i32 [ 0, %12 ], [ %92, %32 ]\l  %36 = shl i32 %34, 8\l  %37 = or i32 %36, %4\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %38\l  %40 = load i64, i64 addrspace(1)* %39, align 8, !tbaa !5\l  %41 = add i64 %33, %40\l  store i64 %41, i64 addrspace(1)* %8, align 8, !tbaa !5\l  %42 = shl i32 %34, 8\l  %43 = or i32 %42, 256\l  %44 = add nuw nsw i32 %43, %4\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %45\l  %47 = load i64, i64 addrspace(1)* %46, align 8, !tbaa !5\l  %48 = add i64 %41, %47\l  store i64 %48, i64 addrspace(1)* %8, align 8, !tbaa !5\l  %49 = shl i32 %34, 8\l  %50 = or i32 %49, 512\l  %51 = add nuw nsw i32 %50, %4\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %52\l  %54 = load i64, i64 addrspace(1)* %53, align 8, !tbaa !5\l  %55 = add i64 %48, %54\l  store i64 %55, i64 addrspace(1)* %8, align 8, !tbaa !5\l  %56 = shl i32 %34, 8\l  %57 = or i32 %56, 768\l  %58 = add nuw nsw i32 %57, %4\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %59\l  %61 = load i64, i64 addrspace(1)* %60, align 8, !tbaa !5\l  %62 = add i64 %55, %61\l  store i64 %62, i64 addrspace(1)* %8, align 8, !tbaa !5\l  %63 = shl i32 %34, 8\l  %64 = or i32 %63, %4\l  %65 = or i32 %64, 1024\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %66\l  %68 = load i64, i64 addrspace(1)* %67, align 8, !tbaa !5\l  %69 = add i64 %62, %68\l  store i64 %69, i64 addrspace(1)* %8, align 8, !tbaa !5\l  %70 = shl i32 %34, 8\l  %71 = or i32 %70, 1280\l  %72 = add i32 %71, %4\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %73\l  %75 = load i64, i64 addrspace(1)* %74, align 8, !tbaa !5\l  %76 = add i64 %69, %75\l  store i64 %76, i64 addrspace(1)* %8, align 8, !tbaa !5\l  %77 = shl i32 %34, 8\l  %78 = or i32 %77, 1536\l  %79 = add i32 %78, %4\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %80\l  %82 = load i64, i64 addrspace(1)* %81, align 8, !tbaa !5\l  %83 = add i64 %76, %82\l  store i64 %83, i64 addrspace(1)* %8, align 8, !tbaa !5\l  %84 = shl i32 %34, 8\l  %85 = or i32 %84, 1792\l  %86 = add i32 %85, %4\l  %87 = zext i32 %86 to i64\l  %88 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %87\l  %89 = load i64, i64 addrspace(1)* %88, align 8, !tbaa !5\l  %90 = add i64 %83, %89\l  store i64 %90, i64 addrspace(1)* %8, align 8, !tbaa !5\l  %91 = add nuw i32 %34, 8\l  %92 = add i32 %35, 8\l  %93 = icmp eq i32 %92, %13\l  br i1 %93, label %14, label %32, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4f65880:s0 -> Node0x4f64920;
	Node0x4f65880:s1 -> Node0x4f65880;
}
