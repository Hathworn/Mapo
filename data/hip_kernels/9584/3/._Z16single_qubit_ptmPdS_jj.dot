digraph "CFG for '_Z16single_qubit_ptmPdS_jj' function" {
	label="CFG for '_Z16single_qubit_ptmPdS_jj' function";

	Node0x4bc5a10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = shl i32 %3, 1\l  %15 = lshr i32 %13, %14\l  %16 = icmp eq i32 %15, 0\l  br i1 %16, label %17, label %92\l|{<s0>T|<s1>F}}"];
	Node0x4bc5a10:s0 -> Node0x4bc5a60;
	Node0x4bc5a10:s1 -> Node0x4bc72f0;
	Node0x4bc5a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%17:\l17:                                               \l  %18 = shl i32 %2, 1\l  %19 = add i32 %18, 2\l  %20 = shl nsw i32 -1, %19\l  %21 = xor i32 %20, -1\l  %22 = or i32 %12, %5\l  %23 = and i32 %22, %20\l  %24 = and i32 %22, 3\l  %25 = shl i32 %24, %18\l  %26 = or i32 %25, %23\l  %27 = and i32 %22, %21\l  %28 = ashr i32 %27, 2\l  %29 = or i32 %26, %28\l  %30 = icmp ult i32 %5, 16\l  br i1 %30, label %31, label %36\l|{<s0>T|<s1>F}}"];
	Node0x4bc5a60:s0 -> Node0x4bc84c0;
	Node0x4bc5a60:s1 -> Node0x4bc8510;
	Node0x4bc84c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%31:\l31:                                               \l  %32 = zext i32 %5 to i64\l  %33 = getelementptr inbounds double, double addrspace(1)* %1, i64 %32\l  %34 = load double, double addrspace(1)* %33, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %35 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %5\l  store double %34, double addrspace(3)* %35, align 8, !tbaa !7\l  br label %36\l}"];
	Node0x4bc84c0 -> Node0x4bc8510;
	Node0x4bc8510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%36:\l36:                                               \l  %37 = icmp ult i32 %3, 2\l  br i1 %37, label %38, label %54\l|{<s0>T|<s1>F}}"];
	Node0x4bc8510:s0 -> Node0x4bc98f0;
	Node0x4bc8510:s1 -> Node0x4bc9940;
	Node0x4bc98f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%38:\l38:                                               \l  %39 = add nuw nsw i32 %5, 4\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds double, double addrspace(1)* %1, i64 %40\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %43 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %39\l  store double %42, double addrspace(3)* %43, align 8, !tbaa !7\l  %44 = add nuw nsw i32 %5, 8\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds double, double addrspace(1)* %1, i64 %45\l  %47 = load double, double addrspace(1)* %46, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %48 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %44\l  store double %47, double addrspace(3)* %48, align 8, !tbaa !7\l  %49 = add nuw nsw i32 %5, 12\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds double, double addrspace(1)* %1, i64 %50\l  %52 = load double, double addrspace(1)* %51, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %53 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %49\l  store double %52, double addrspace(3)* %53, align 8, !tbaa !7\l  br label %54\l}"];
	Node0x4bc98f0 -> Node0x4bc9940;
	Node0x4bc9940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%54:\l54:                                               \l  %55 = sext i32 %29 to i64\l  %56 = getelementptr inbounds double, double addrspace(1)* %0, i64 %55\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %58 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 16), i32\l... %5\l  store double %57, double addrspace(3)* %58, align 8, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %59 = and i32 %5, 1020\l  %60 = shl nuw nsw i32 %5, 2\l  %61 = and i32 %60, 12\l  %62 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %61\l  %63 = load double, double addrspace(3)* %62, align 8, !tbaa !7\l  %64 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 16), i32\l... %59\l  %65 = load double, double addrspace(3)* %64, align 8, !tbaa !7\l  %66 = fmul contract double %63, %65\l  %67 = fadd contract double %66, 0.000000e+00\l  %68 = or i32 %61, 1\l  %69 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %68\l  %70 = load double, double addrspace(3)* %69, align 8, !tbaa !7\l  %71 = or i32 %59, 1\l  %72 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 16), i32\l... %71\l  %73 = load double, double addrspace(3)* %72, align 8, !tbaa !7\l  %74 = fmul contract double %70, %73\l  %75 = fadd contract double %67, %74\l  %76 = or i32 %61, 2\l  %77 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %76\l  %78 = load double, double addrspace(3)* %77, align 8, !tbaa !7\l  %79 = or i32 %59, 2\l  %80 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 16), i32\l... %79\l  %81 = load double, double addrspace(3)* %80, align 8, !tbaa !7\l  %82 = fmul contract double %78, %81\l  %83 = fadd contract double %75, %82\l  %84 = or i32 %61, 3\l  %85 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %84\l  %86 = load double, double addrspace(3)* %85, align 8, !tbaa !7\l  %87 = or i32 %5, 3\l  %88 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 16), i32\l... %87\l  %89 = load double, double addrspace(3)* %88, align 8, !tbaa !7\l  %90 = fmul contract double %86, %89\l  %91 = fadd contract double %83, %90\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  store double %91, double addrspace(1)* %56, align 8, !tbaa !7\l  br label %92\l}"];
	Node0x4bc9940 -> Node0x4bc72f0;
	Node0x4bc72f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%92:\l92:                                               \l  ret void\l}"];
}
