digraph "CFG for '_Z5tracePdi' function" {
	label="CFG for '_Z5tracePdi' function";

	Node0x50c1040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = icmp sgt i32 %1, -1\l  %5 = shl nuw i32 1, %1\l  %6 = select i1 %4, i32 %5, i32 0\l  %7 = zext i32 %3 to i64\l  %8 = getelementptr inbounds double, double addrspace(1)* %0, i64 %7\l  %9 = load double, double addrspace(1)* %8, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %10 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @s_diag, i32 0, i32 %3\l  store double %9, double addrspace(3)* %10, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !10, !invariant.load\l... !9\l  %15 = zext i16 %14 to i32\l  %16 = icmp ugt i16 %14, 1\l  br i1 %16, label %20, label %17\l|{<s0>T|<s1>F}}"];
	Node0x50c1040:s0 -> Node0x50c2780;
	Node0x50c1040:s1 -> Node0x50c4370;
	Node0x50c4370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%17:\l17:                                               \l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %19 = icmp eq i32 %3, 0\l  br i1 %19, label %44, label %38\l|{<s0>T|<s1>F}}"];
	Node0x50c4370:s0 -> Node0x50c4930;
	Node0x50c4370:s1 -> Node0x50c4980;
	Node0x50c2780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = phi i32 [ %36, %35 ], [ 1, %2 ]\l  %22 = phi double [ %31, %35 ], [ undef, %2 ]\l  %23 = icmp eq i32 %21, %6\l  %24 = icmp ult i32 %3, %21\l  %25 = select i1 %23, i1 true, i1 %24\l  br i1 %25, label %30, label %26\l|{<s0>T|<s1>F}}"];
	Node0x50c2780:s0 -> Node0x50c5300;
	Node0x50c2780:s1 -> Node0x50c5390;
	Node0x50c5390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%26:\l26:                                               \l  %27 = sub i32 %3, %21\l  %28 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @s_diag, i32 0, i32 %27\l  %29 = load double, double addrspace(3)* %28, align 8, !tbaa !5\l  br label %30\l}"];
	Node0x50c5390 -> Node0x50c5300;
	Node0x50c5300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi double [ %29, %26 ], [ %22, %20 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %25, label %35, label %32\l|{<s0>T|<s1>F}}"];
	Node0x50c5300:s0 -> Node0x50c4ac0;
	Node0x50c5300:s1 -> Node0x50c5950;
	Node0x50c5950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%32:\l32:                                               \l  %33 = load double, double addrspace(3)* %10, align 8, !tbaa !5\l  %34 = fadd contract double %31, %33\l  store double %34, double addrspace(3)* %10, align 8, !tbaa !5\l  br label %35\l}"];
	Node0x50c5950 -> Node0x50c4ac0;
	Node0x50c4ac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %36 = shl i32 %21, 1\l  %37 = icmp ult i32 %36, %15\l  br i1 %37, label %20, label %17, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x50c4ac0:s0 -> Node0x50c2780;
	Node0x50c4ac0:s1 -> Node0x50c4370;
	Node0x50c4980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%38:\l38:                                               \l  %39 = icmp eq i32 %3, 1\l  %40 = select i1 %39, i1 %4, i1 false\l  br i1 %40, label %41, label %52\l|{<s0>T|<s1>F}}"];
	Node0x50c4980:s0 -> Node0x50c6260;
	Node0x50c4980:s1 -> Node0x50c62b0;
	Node0x50c6260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%41:\l41:                                               \l  %42 = xor i32 %6, -1\l  %43 = add i32 %18, 1\l  br label %44\l}"];
	Node0x50c6260 -> Node0x50c4930;
	Node0x50c4930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%44:\l44:                                               \l  %45 = phi i32 [ %43, %41 ], [ %18, %17 ]\l  %46 = phi i32 [ %42, %41 ], [ -1, %17 ]\l  %47 = add i32 %46, %15\l  %48 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @s_diag, i32 0, i32 %47\l  %49 = load double, double addrspace(3)* %48, align 8, !tbaa !5\l  %50 = zext i32 %45 to i64\l  %51 = getelementptr inbounds double, double addrspace(1)* %0, i64 %50\l  store double %49, double addrspace(1)* %51, align 8, !tbaa !5\l  br label %52\l}"];
	Node0x50c4930 -> Node0x50c62b0;
	Node0x50c62b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%52:\l52:                                               \l  ret void\l}"];
}
