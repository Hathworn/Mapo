digraph "CFG for '_Z13two_qubit_ptmPdS_jjj' function" {
	label="CFG for '_Z13two_qubit_ptmPdS_jjj' function";

	Node0x5aa1b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.umax.i32(i32 %2, i32 %3)\l  %15 = tail call i32 @llvm.umin.i32(i32 %2, i32 %3)\l  %16 = shl nsw i32 %14, 1\l  %17 = add nsw i32 %16, 2\l  %18 = shl nsw i32 -1, %17\l  %19 = xor i32 %18, -1\l  %20 = shl nsw i32 %15, 1\l  %21 = add nsw i32 %20, 4\l  %22 = shl nsw i32 -1, %21\l  %23 = and i32 %22, %19\l  %24 = or i32 %18, %22\l  %25 = xor i32 %24, -1\l  %26 = or i32 %13, %6\l  %27 = and i32 %23, %26\l  %28 = ashr i32 %27, 2\l  %29 = and i32 %26, %25\l  %30 = ashr i32 %29, 4\l  %31 = and i32 %26, 3\l  %32 = shl i32 %2, 1\l  %33 = shl i32 %31, %32\l  %34 = lshr i32 %26, 2\l  %35 = and i32 %34, 3\l  %36 = shl i32 %3, 1\l  %37 = shl i32 %35, %36\l  %38 = udiv i32 255, %12\l  %39 = add nuw nsw i32 %38, 1\l  %40 = and i32 %39, 7\l  %41 = icmp ugt i16 %11, 36\l  br i1 %41, label %44, label %42\l|{<s0>T|<s1>F}}"];
	Node0x5aa1b70:s0 -> Node0x5aa4f00;
	Node0x5aa1b70:s1 -> Node0x5aa4f90;
	Node0x5aa4f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%42:\l42:                                               \l  %43 = and i32 %39, -8\l  br label %66\l}"];
	Node0x5aa4f90 -> Node0x5aa5190;
	Node0x5aa4f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%44:\l44:                                               \l  %45 = phi i32 [ 0, %5 ], [ %140, %139 ]\l  %46 = icmp eq i32 %40, 0\l  br i1 %46, label %61, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5aa4f00:s0 -> Node0x5aa5480;
	Node0x5aa4f00:s1 -> Node0x5aa5510;
	Node0x5aa5510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi i32 [ %58, %57 ], [ %45, %44 ]\l  %49 = phi i32 [ %59, %57 ], [ 0, %44 ]\l  %50 = add nuw nsw i32 %48, %6\l  %51 = icmp ult i32 %50, 256\l  br i1 %51, label %52, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5aa5510:s0 -> Node0x5aa5a30;
	Node0x5aa5510:s1 -> Node0x5aa5680;
	Node0x5aa5a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%52:\l52:                                               \l  %53 = zext i32 %50 to i64\l  %54 = getelementptr inbounds double, double addrspace(1)* %1, i64 %53\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %56 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %50\l  store double %55, double addrspace(3)* %56, align 8, !tbaa !7\l  br label %57\l}"];
	Node0x5aa5a30 -> Node0x5aa5680;
	Node0x5aa5680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  %58 = add nuw nsw i32 %48, %12\l  %59 = add i32 %49, 1\l  %60 = icmp eq i32 %59, %40\l  br i1 %60, label %61, label %47, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5aa5680:s0 -> Node0x5aa5480;
	Node0x5aa5680:s1 -> Node0x5aa5510;
	Node0x5aa5480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%61:\l61:                                               \l  %62 = add i32 %13, %6\l  %63 = shl i32 %4, 1\l  %64 = lshr i32 %62, %63\l  %65 = icmp eq i32 %64, 0\l  br i1 %65, label %143, label %282\l|{<s0>T|<s1>F}}"];
	Node0x5aa5480:s0 -> Node0x5aa48d0;
	Node0x5aa5480:s1 -> Node0x5aa4920;
	Node0x5aa5190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%66:\l66:                                               \l  %67 = phi i32 [ 0, %42 ], [ %140, %139 ]\l  %68 = phi i32 [ 0, %42 ], [ %141, %139 ]\l  %69 = add nuw nsw i32 %67, %6\l  %70 = icmp ult i32 %69, 256\l  br i1 %70, label %71, label %76\l|{<s0>T|<s1>F}}"];
	Node0x5aa5190:s0 -> Node0x5aa77e0;
	Node0x5aa5190:s1 -> Node0x5aa7870;
	Node0x5aa77e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%71:\l71:                                               \l  %72 = zext i32 %69 to i64\l  %73 = getelementptr inbounds double, double addrspace(1)* %1, i64 %72\l  %74 = load double, double addrspace(1)* %73, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %75 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %69\l  store double %74, double addrspace(3)* %75, align 8, !tbaa !7\l  br label %76\l}"];
	Node0x5aa77e0 -> Node0x5aa7870;
	Node0x5aa7870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%76:\l76:                                               \l  %77 = add nuw nsw i32 %67, %12\l  %78 = add nuw nsw i32 %77, %6\l  %79 = icmp ult i32 %78, 256\l  br i1 %79, label %80, label %85\l|{<s0>T|<s1>F}}"];
	Node0x5aa7870:s0 -> Node0x5aa7ea0;
	Node0x5aa7870:s1 -> Node0x5aa7ef0;
	Node0x5aa7ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%80:\l80:                                               \l  %81 = zext i32 %78 to i64\l  %82 = getelementptr inbounds double, double addrspace(1)* %1, i64 %81\l  %83 = load double, double addrspace(1)* %82, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %84 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %78\l  store double %83, double addrspace(3)* %84, align 8, !tbaa !7\l  br label %85\l}"];
	Node0x5aa7ea0 -> Node0x5aa7ef0;
	Node0x5aa7ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%85:\l85:                                               \l  %86 = add nuw nsw i32 %77, %12\l  %87 = add nuw nsw i32 %86, %6\l  %88 = icmp ult i32 %87, 256\l  br i1 %88, label %89, label %94\l|{<s0>T|<s1>F}}"];
	Node0x5aa7ef0:s0 -> Node0x5aa8520;
	Node0x5aa7ef0:s1 -> Node0x5aa8570;
	Node0x5aa8520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%89:\l89:                                               \l  %90 = zext i32 %87 to i64\l  %91 = getelementptr inbounds double, double addrspace(1)* %1, i64 %90\l  %92 = load double, double addrspace(1)* %91, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %93 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %87\l  store double %92, double addrspace(3)* %93, align 8, !tbaa !7\l  br label %94\l}"];
	Node0x5aa8520 -> Node0x5aa8570;
	Node0x5aa8570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%94:\l94:                                               \l  %95 = add nuw nsw i32 %86, %12\l  %96 = add nuw nsw i32 %95, %6\l  %97 = icmp ult i32 %96, 256\l  br i1 %97, label %98, label %103\l|{<s0>T|<s1>F}}"];
	Node0x5aa8570:s0 -> Node0x5aa8ba0;
	Node0x5aa8570:s1 -> Node0x5aa8bf0;
	Node0x5aa8ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%98:\l98:                                               \l  %99 = zext i32 %96 to i64\l  %100 = getelementptr inbounds double, double addrspace(1)* %1, i64 %99\l  %101 = load double, double addrspace(1)* %100, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %102 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %96\l  store double %101, double addrspace(3)* %102, align 8, !tbaa !7\l  br label %103\l}"];
	Node0x5aa8ba0 -> Node0x5aa8bf0;
	Node0x5aa8bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%103:\l103:                                              \l  %104 = add nuw nsw i32 %95, %12\l  %105 = add nuw nsw i32 %104, %6\l  %106 = icmp ult i32 %105, 256\l  br i1 %106, label %107, label %112\l|{<s0>T|<s1>F}}"];
	Node0x5aa8bf0:s0 -> Node0x5aa9220;
	Node0x5aa8bf0:s1 -> Node0x5aa9270;
	Node0x5aa9220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%107:\l107:                                              \l  %108 = zext i32 %105 to i64\l  %109 = getelementptr inbounds double, double addrspace(1)* %1, i64 %108\l  %110 = load double, double addrspace(1)* %109, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %111 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %105\l  store double %110, double addrspace(3)* %111, align 8, !tbaa !7\l  br label %112\l}"];
	Node0x5aa9220 -> Node0x5aa9270;
	Node0x5aa9270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%112:\l112:                                              \l  %113 = add nuw nsw i32 %104, %12\l  %114 = add nuw nsw i32 %113, %6\l  %115 = icmp ult i32 %114, 256\l  br i1 %115, label %116, label %121\l|{<s0>T|<s1>F}}"];
	Node0x5aa9270:s0 -> Node0x5aa98a0;
	Node0x5aa9270:s1 -> Node0x5aa98f0;
	Node0x5aa98a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%116:\l116:                                              \l  %117 = zext i32 %114 to i64\l  %118 = getelementptr inbounds double, double addrspace(1)* %1, i64 %117\l  %119 = load double, double addrspace(1)* %118, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %120 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %114\l  store double %119, double addrspace(3)* %120, align 8, !tbaa !7\l  br label %121\l}"];
	Node0x5aa98a0 -> Node0x5aa98f0;
	Node0x5aa98f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%121:\l121:                                              \l  %122 = add nuw nsw i32 %113, %12\l  %123 = add nuw nsw i32 %122, %6\l  %124 = icmp ult i32 %123, 256\l  br i1 %124, label %125, label %130\l|{<s0>T|<s1>F}}"];
	Node0x5aa98f0:s0 -> Node0x5aa9f20;
	Node0x5aa98f0:s1 -> Node0x5aa9f70;
	Node0x5aa9f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%125:\l125:                                              \l  %126 = zext i32 %123 to i64\l  %127 = getelementptr inbounds double, double addrspace(1)* %1, i64 %126\l  %128 = load double, double addrspace(1)* %127, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %129 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %123\l  store double %128, double addrspace(3)* %129, align 8, !tbaa !7\l  br label %130\l}"];
	Node0x5aa9f20 -> Node0x5aa9f70;
	Node0x5aa9f70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%130:\l130:                                              \l  %131 = add nuw nsw i32 %122, %12\l  %132 = add nuw nsw i32 %131, %6\l  %133 = icmp ult i32 %132, 256\l  br i1 %133, label %134, label %139\l|{<s0>T|<s1>F}}"];
	Node0x5aa9f70:s0 -> Node0x5aa74b0;
	Node0x5aa9f70:s1 -> Node0x5aa52b0;
	Node0x5aa74b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%134:\l134:                                              \l  %135 = zext i32 %132 to i64\l  %136 = getelementptr inbounds double, double addrspace(1)* %1, i64 %135\l  %137 = load double, double addrspace(1)* %136, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %138 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %132\l  store double %137, double addrspace(3)* %138, align 8, !tbaa !7\l  br label %139\l}"];
	Node0x5aa74b0 -> Node0x5aa52b0;
	Node0x5aa52b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%139:\l139:                                              \l  %140 = add nuw nsw i32 %131, %12\l  %141 = add i32 %68, 8\l  %142 = icmp eq i32 %141, %43\l  br i1 %142, label %44, label %66, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5aa52b0:s0 -> Node0x5aa4f00;
	Node0x5aa52b0:s1 -> Node0x5aa5190;
	Node0x5aa48d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%143:\l143:                                              \l  %144 = and i32 %26, %18\l  %145 = or i32 %28, %144\l  %146 = or i32 %145, %30\l  %147 = or i32 %146, %33\l  %148 = or i32 %147, %37\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds double, double addrspace(1)* %0, i64 %149\l  %151 = load double, double addrspace(1)* %150, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %152 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %6\l  store double %151, double addrspace(3)* %152, align 8, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %153 = and i32 %6, 1008\l  %154 = shl nuw nsw i32 %6, 4\l  %155 = and i32 %154, 240\l  %156 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %155\l  %157 = load double, double addrspace(3)* %156, align 8, !tbaa !7\l  %158 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %153\l  %159 = load double, double addrspace(3)* %158, align 8, !tbaa !7\l  %160 = fmul contract double %157, %159\l  %161 = fadd contract double %160, 0.000000e+00\l  %162 = or i32 %155, 1\l  %163 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %162\l  %164 = load double, double addrspace(3)* %163, align 8, !tbaa !7\l  %165 = or i32 %153, 1\l  %166 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %165\l  %167 = load double, double addrspace(3)* %166, align 8, !tbaa !7\l  %168 = fmul contract double %164, %167\l  %169 = fadd contract double %161, %168\l  %170 = or i32 %155, 2\l  %171 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %170\l  %172 = load double, double addrspace(3)* %171, align 8, !tbaa !7\l  %173 = or i32 %153, 2\l  %174 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %173\l  %175 = load double, double addrspace(3)* %174, align 8, !tbaa !7\l  %176 = fmul contract double %172, %175\l  %177 = fadd contract double %169, %176\l  %178 = or i32 %155, 3\l  %179 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %178\l  %180 = load double, double addrspace(3)* %179, align 8, !tbaa !7\l  %181 = or i32 %153, 3\l  %182 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %181\l  %183 = load double, double addrspace(3)* %182, align 8, !tbaa !7\l  %184 = fmul contract double %180, %183\l  %185 = fadd contract double %177, %184\l  %186 = or i32 %155, 4\l  %187 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %186\l  %188 = load double, double addrspace(3)* %187, align 8, !tbaa !7\l  %189 = or i32 %153, 4\l  %190 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %189\l  %191 = load double, double addrspace(3)* %190, align 8, !tbaa !7\l  %192 = fmul contract double %188, %191\l  %193 = fadd contract double %185, %192\l  %194 = or i32 %155, 5\l  %195 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %194\l  %196 = load double, double addrspace(3)* %195, align 8, !tbaa !7\l  %197 = or i32 %153, 5\l  %198 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %197\l  %199 = load double, double addrspace(3)* %198, align 8, !tbaa !7\l  %200 = fmul contract double %196, %199\l  %201 = fadd contract double %193, %200\l  %202 = or i32 %155, 6\l  %203 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %202\l  %204 = load double, double addrspace(3)* %203, align 8, !tbaa !7\l  %205 = or i32 %153, 6\l  %206 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %205\l  %207 = load double, double addrspace(3)* %206, align 8, !tbaa !7\l  %208 = fmul contract double %204, %207\l  %209 = fadd contract double %201, %208\l  %210 = or i32 %155, 7\l  %211 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %210\l  %212 = load double, double addrspace(3)* %211, align 8, !tbaa !7\l  %213 = or i32 %153, 7\l  %214 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %213\l  %215 = load double, double addrspace(3)* %214, align 8, !tbaa !7\l  %216 = fmul contract double %212, %215\l  %217 = fadd contract double %209, %216\l  %218 = or i32 %155, 8\l  %219 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %218\l  %220 = load double, double addrspace(3)* %219, align 8, !tbaa !7\l  %221 = or i32 %153, 8\l  %222 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %221\l  %223 = load double, double addrspace(3)* %222, align 8, !tbaa !7\l  %224 = fmul contract double %220, %223\l  %225 = fadd contract double %217, %224\l  %226 = or i32 %155, 9\l  %227 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %226\l  %228 = load double, double addrspace(3)* %227, align 8, !tbaa !7\l  %229 = or i32 %153, 9\l  %230 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %229\l  %231 = load double, double addrspace(3)* %230, align 8, !tbaa !7\l  %232 = fmul contract double %228, %231\l  %233 = fadd contract double %225, %232\l  %234 = or i32 %155, 10\l  %235 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %234\l  %236 = load double, double addrspace(3)* %235, align 8, !tbaa !7\l  %237 = or i32 %153, 10\l  %238 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %237\l  %239 = load double, double addrspace(3)* %238, align 8, !tbaa !7\l  %240 = fmul contract double %236, %239\l  %241 = fadd contract double %233, %240\l  %242 = or i32 %155, 11\l  %243 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %242\l  %244 = load double, double addrspace(3)* %243, align 8, !tbaa !7\l  %245 = or i32 %153, 11\l  %246 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %245\l  %247 = load double, double addrspace(3)* %246, align 8, !tbaa !7\l  %248 = fmul contract double %244, %247\l  %249 = fadd contract double %241, %248\l  %250 = or i32 %155, 12\l  %251 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %250\l  %252 = load double, double addrspace(3)* %251, align 8, !tbaa !7\l  %253 = or i32 %153, 12\l  %254 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %253\l  %255 = load double, double addrspace(3)* %254, align 8, !tbaa !7\l  %256 = fmul contract double %252, %255\l  %257 = fadd contract double %249, %256\l  %258 = or i32 %155, 13\l  %259 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %258\l  %260 = load double, double addrspace(3)* %259, align 8, !tbaa !7\l  %261 = or i32 %153, 13\l  %262 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %261\l  %263 = load double, double addrspace(3)* %262, align 8, !tbaa !7\l  %264 = fmul contract double %260, %263\l  %265 = fadd contract double %257, %264\l  %266 = or i32 %155, 14\l  %267 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %266\l  %268 = load double, double addrspace(3)* %267, align 8, !tbaa !7\l  %269 = or i32 %153, 14\l  %270 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %269\l  %271 = load double, double addrspace(3)* %270, align 8, !tbaa !7\l  %272 = fmul contract double %268, %271\l  %273 = fadd contract double %265, %272\l  %274 = or i32 %155, 15\l  %275 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @ptm,\l... i32 0, i32 %274\l  %276 = load double, double addrspace(3)* %275, align 8, !tbaa !7\l  %277 = or i32 %6, 15\l  %278 = getelementptr inbounds double, double addrspace(3)* getelementptr\l... inbounds ([0 x double], [0 x double] addrspace(3)* @ptm, i32 0, i32 256), i32\l... %277\l  %279 = load double, double addrspace(3)* %278, align 8, !tbaa !7\l  %280 = fmul contract double %276, %279\l  %281 = fadd contract double %273, %280\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  store double %281, double addrspace(1)* %150, align 8, !tbaa !7\l  br label %282\l}"];
	Node0x5aa48d0 -> Node0x5aa4920;
	Node0x5aa4920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%282:\l282:                                              \l  ret void\l}"];
}
