digraph "CFG for '_Z8get_diagPdS_j' function" {
	label="CFG for '_Z8get_diagPdS_j' function";

	Node0x45ed850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = shl nuw i32 1, %2\l  %14 = icmp slt i32 %12, %13\l  br i1 %14, label %15, label %99\l|{<s0>T|<s1>F}}"];
	Node0x45ed850:s0 -> Node0x45ef7e0;
	Node0x45ed850:s1 -> Node0x45ef870;
	Node0x45ef7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = and i32 %12, 1\l  %17 = shl nuw nsw i32 %16, 1\l  %18 = and i32 %12, 2\l  %19 = shl nuw nsw i32 %18, 1\l  %20 = shl nuw nsw i32 %18, 2\l  %21 = or i32 %17, %20\l  %22 = or i32 %21, %19\l  %23 = and i32 %12, 4\l  %24 = shl nuw nsw i32 %23, 2\l  %25 = shl nuw nsw i32 %23, 3\l  %26 = or i32 %22, %25\l  %27 = or i32 %26, %24\l  %28 = and i32 %12, 8\l  %29 = shl nuw nsw i32 %28, 3\l  %30 = shl nuw nsw i32 %28, 4\l  %31 = or i32 %27, %30\l  %32 = or i32 %31, %29\l  %33 = and i32 %12, 16\l  %34 = shl nuw nsw i32 %33, 4\l  %35 = shl nuw nsw i32 %33, 5\l  %36 = or i32 %32, %35\l  %37 = or i32 %36, %34\l  %38 = and i32 %12, 32\l  %39 = shl nuw nsw i32 %38, 5\l  %40 = shl nuw nsw i32 %38, 6\l  %41 = or i32 %37, %40\l  %42 = or i32 %41, %39\l  %43 = and i32 %12, 64\l  %44 = shl nuw nsw i32 %43, 6\l  %45 = shl nuw nsw i32 %43, 7\l  %46 = or i32 %42, %45\l  %47 = or i32 %46, %44\l  %48 = and i32 %12, 128\l  %49 = shl nuw nsw i32 %48, 7\l  %50 = shl nuw nsw i32 %48, 8\l  %51 = or i32 %47, %50\l  %52 = or i32 %51, %49\l  %53 = and i32 %12, 256\l  %54 = shl nuw nsw i32 %53, 8\l  %55 = shl nuw nsw i32 %53, 9\l  %56 = or i32 %52, %55\l  %57 = or i32 %56, %54\l  %58 = and i32 %12, 512\l  %59 = shl nuw nsw i32 %58, 9\l  %60 = shl nuw nsw i32 %58, 10\l  %61 = or i32 %57, %60\l  %62 = or i32 %61, %59\l  %63 = and i32 %12, 1024\l  %64 = shl nuw nsw i32 %63, 10\l  %65 = shl nuw nsw i32 %63, 11\l  %66 = or i32 %62, %65\l  %67 = or i32 %66, %64\l  %68 = and i32 %12, 2048\l  %69 = shl nuw nsw i32 %68, 11\l  %70 = shl nuw nsw i32 %68, 12\l  %71 = or i32 %67, %70\l  %72 = or i32 %71, %69\l  %73 = and i32 %12, 4096\l  %74 = shl nuw nsw i32 %73, 12\l  %75 = shl nuw nsw i32 %73, 13\l  %76 = or i32 %72, %75\l  %77 = or i32 %76, %74\l  %78 = and i32 %12, 8192\l  %79 = shl nuw nsw i32 %78, 13\l  %80 = shl nuw nsw i32 %78, 14\l  %81 = or i32 %77, %80\l  %82 = or i32 %81, %79\l  %83 = and i32 %12, 16384\l  %84 = shl nuw nsw i32 %83, 14\l  %85 = shl nuw nsw i32 %83, 15\l  %86 = or i32 %82, %85\l  %87 = or i32 %86, %84\l  %88 = and i32 %12, 32768\l  %89 = shl nuw nsw i32 %88, 15\l  %90 = shl nuw i32 %88, 16\l  %91 = or i32 %87, %90\l  %92 = or i32 %91, %89\l  %93 = or i32 %92, %16\l  %94 = zext i32 %93 to i64\l  %95 = getelementptr inbounds double, double addrspace(1)* %0, i64 %94\l  %96 = load double, double addrspace(1)* %95, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %97 = sext i32 %12 to i64\l  %98 = getelementptr inbounds double, double addrspace(1)* %1, i64 %97\l  store double %96, double addrspace(1)* %98, align 8, !tbaa !7\l  br label %99\l}"];
	Node0x45ef7e0 -> Node0x45ef870;
	Node0x45ef870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%99:\l99:                                               \l  ret void\l}"];
}
