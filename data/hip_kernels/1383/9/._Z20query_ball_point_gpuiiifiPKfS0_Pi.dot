digraph "CFG for '_Z20query_ball_point_gpuiiifiPKfS0_Pi' function" {
	label="CFG for '_Z20query_ball_point_gpuiiifiPKfS0_Pi' function";

	Node0x6433e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%8:\l  %9 = icmp sgt i32 %0, 0\l  br i1 %9, label %10, label %32\l|{<s0>T|<s1>F}}"];
	Node0x6433e30:s0 -> Node0x6433de0;
	Node0x6433e30:s1 -> Node0x64345f0;
	Node0x6433de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%10:\l10:                                               \l  %11 = icmp sgt i32 %2, 0\l  %12 = icmp slt i32 %1, 1\l  %13 = icmp eq i32 %4, 0\l  %14 = select i1 %12, i1 true, i1 %13\l  %15 = icmp slt i32 %4, 1\l  %16 = mul nsw i32 %1, 3\l  %17 = sext i32 %16 to i64\l  %18 = mul nsw i32 %2, 3\l  %19 = sext i32 %18 to i64\l  %20 = mul nsw i32 %4, %2\l  %21 = sext i32 %20 to i64\l  %22 = add i32 %4, -1\l  %23 = and i32 %4, 7\l  %24 = icmp ult i32 %22, 7\l  %25 = and i32 %4, -8\l  %26 = icmp eq i32 %23, 0\l  br label %27\l}"];
	Node0x6433de0 -> Node0x6433050;
	Node0x6433050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%27:\l27:                                               \l  %28 = phi float addrspace(1)* [ %5, %10 ], [ %50, %49 ]\l  %29 = phi float addrspace(1)* [ %6, %10 ], [ %51, %49 ]\l  %30 = phi i32 addrspace(1)* [ %7, %10 ], [ %52, %49 ]\l  %31 = phi i32 [ 0, %10 ], [ %53, %49 ]\l  br i1 %11, label %33, label %49\l|{<s0>T|<s1>F}}"];
	Node0x6433050:s0 -> Node0x6435730;
	Node0x6433050:s1 -> Node0x6435290;
	Node0x64345f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%32:\l32:                                               \l  ret void\l}"];
	Node0x6435730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%33:\l33:                                               \l  %34 = phi i32 [ %165, %164 ], [ 0, %27 ]\l  br i1 %14, label %164, label %35\l|{<s0>T|<s1>F}}"];
	Node0x6435730:s0 -> Node0x6434bc0;
	Node0x6435730:s1 -> Node0x6435b30;
	Node0x6435b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%35:\l35:                                               \l  %36 = mul nsw i32 %34, 3\l  %37 = zext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %29, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !4\l  %40 = add nuw nsw i32 %36, 1\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %29, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !4\l  %44 = add nuw nsw i32 %36, 2\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %29, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !4\l  %48 = mul nsw i32 %34, %4\l  br label %55\l}"];
	Node0x6435b30 -> Node0x6437470;
	Node0x6435290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%49:\l49:                                               \l  %50 = getelementptr inbounds float, float addrspace(1)* %28, i64 %17\l  %51 = getelementptr inbounds float, float addrspace(1)* %29, i64 %19\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %30, i64 %21\l  %53 = add nuw nsw i32 %31, 1\l  %54 = icmp eq i32 %53, %0\l  br i1 %54, label %32, label %27, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x6435290:s0 -> Node0x64345f0;
	Node0x6435290:s1 -> Node0x6433050;
	Node0x6437470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%55:\l55:                                               \l  %56 = phi i32 [ 0, %35 ], [ %159, %158 ]\l  %57 = phi i32 [ 0, %35 ], [ %160, %158 ]\l  %58 = mul nuw nsw i32 %57, 3\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %28, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !4\l  %62 = add nuw nsw i32 %58, 1\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %28, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !4\l  %66 = add nuw nsw i32 %58, 2\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %28, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !4\l  %70 = fsub contract float %39, %61\l  %71 = fmul contract float %70, %70\l  %72 = fsub contract float %43, %65\l  %73 = fmul contract float %72, %72\l  %74 = fadd contract float %71, %73\l  %75 = fsub contract float %47, %69\l  %76 = fmul contract float %75, %75\l  %77 = fadd contract float %74, %76\l  %78 = fcmp olt float %77, 0x39F0000000000000\l  %79 = select i1 %78, float 0x41F0000000000000, float 1.000000e+00\l  %80 = fmul float %77, %79\l  %81 = tail call float @llvm.sqrt.f32(float %80)\l  %82 = bitcast float %81 to i32\l  %83 = add nsw i32 %82, -1\l  %84 = bitcast i32 %83 to float\l  %85 = add nsw i32 %82, 1\l  %86 = bitcast i32 %85 to float\l  %87 = tail call i1 @llvm.amdgcn.class.f32(float %80, i32 608)\l  %88 = select i1 %78, float 0x3EF0000000000000, float 1.000000e+00\l  %89 = fneg float %86\l  %90 = tail call float @llvm.fma.f32(float %89, float %81, float %80)\l  %91 = fcmp ogt float %90, 0.000000e+00\l  %92 = fneg float %84\l  %93 = tail call float @llvm.fma.f32(float %92, float %81, float %80)\l  %94 = fcmp ole float %93, 0.000000e+00\l  %95 = select i1 %94, float %84, float %81\l  %96 = select i1 %91, float %86, float %95\l  %97 = fmul float %88, %96\l  %98 = select i1 %87, float %80, float %97\l  %99 = tail call float @llvm.maxnum.f32(float %98, float 0x3BC79CA100000000)\l  %100 = fcmp contract olt float %99, %3\l  br i1 %100, label %101, label %158\l|{<s0>T|<s1>F}}"];
	Node0x6437470:s0 -> Node0x643a7a0;
	Node0x6437470:s1 -> Node0x64379a0;
	Node0x643a7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%101:\l101:                                              \l  %102 = icmp ne i32 %56, 0\l  %103 = select i1 %102, i1 true, i1 %15\l  br i1 %103, label %153, label %104\l|{<s0>T|<s1>F}}"];
	Node0x643a7a0:s0 -> Node0x643aa20;
	Node0x643a7a0:s1 -> Node0x643aa70;
	Node0x643aa70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%104:\l104:                                              \l  br i1 %24, label %142, label %105\l|{<s0>T|<s1>F}}"];
	Node0x643aa70:s0 -> Node0x643abb0;
	Node0x643aa70:s1 -> Node0x643ac00;
	Node0x643ac00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%105:\l105:                                              \l  %106 = phi i32 [ %139, %105 ], [ 0, %104 ]\l  %107 = phi i32 [ %140, %105 ], [ 0, %104 ]\l  %108 = add nsw i32 %106, %48\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds i32, i32 addrspace(1)* %30, i64 %109\l  store i32 %57, i32 addrspace(1)* %110, align 4, !tbaa !10\l  %111 = or i32 %106, 1\l  %112 = add nsw i32 %111, %48\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds i32, i32 addrspace(1)* %30, i64 %113\l  store i32 %57, i32 addrspace(1)* %114, align 4, !tbaa !10\l  %115 = or i32 %106, 2\l  %116 = add nsw i32 %115, %48\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds i32, i32 addrspace(1)* %30, i64 %117\l  store i32 %57, i32 addrspace(1)* %118, align 4, !tbaa !10\l  %119 = or i32 %106, 3\l  %120 = add nsw i32 %119, %48\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds i32, i32 addrspace(1)* %30, i64 %121\l  store i32 %57, i32 addrspace(1)* %122, align 4, !tbaa !10\l  %123 = or i32 %106, 4\l  %124 = add nsw i32 %123, %48\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds i32, i32 addrspace(1)* %30, i64 %125\l  store i32 %57, i32 addrspace(1)* %126, align 4, !tbaa !10\l  %127 = or i32 %106, 5\l  %128 = add nsw i32 %127, %48\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds i32, i32 addrspace(1)* %30, i64 %129\l  store i32 %57, i32 addrspace(1)* %130, align 4, !tbaa !10\l  %131 = or i32 %106, 6\l  %132 = add nsw i32 %131, %48\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds i32, i32 addrspace(1)* %30, i64 %133\l  store i32 %57, i32 addrspace(1)* %134, align 4, !tbaa !10\l  %135 = or i32 %106, 7\l  %136 = add nsw i32 %135, %48\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds i32, i32 addrspace(1)* %30, i64 %137\l  store i32 %57, i32 addrspace(1)* %138, align 4, !tbaa !10\l  %139 = add nuw nsw i32 %106, 8\l  %140 = add i32 %107, 8\l  %141 = icmp eq i32 %140, %25\l  br i1 %141, label %142, label %105, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x643ac00:s0 -> Node0x643abb0;
	Node0x643ac00:s1 -> Node0x643ac00;
	Node0x643abb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%142:\l142:                                              \l  %143 = phi i32 [ 0, %104 ], [ %139, %105 ]\l  br i1 %26, label %153, label %144\l|{<s0>T|<s1>F}}"];
	Node0x643abb0:s0 -> Node0x643aa20;
	Node0x643abb0:s1 -> Node0x643d4a0;
	Node0x643d4a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%144:\l144:                                              \l  %145 = phi i32 [ %150, %144 ], [ %143, %142 ]\l  %146 = phi i32 [ %151, %144 ], [ 0, %142 ]\l  %147 = add nsw i32 %145, %48\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds i32, i32 addrspace(1)* %30, i64 %148\l  store i32 %57, i32 addrspace(1)* %149, align 4, !tbaa !10\l  %150 = add nuw nsw i32 %145, 1\l  %151 = add i32 %146, 1\l  %152 = icmp eq i32 %151, %23\l  br i1 %152, label %153, label %144, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x643d4a0:s0 -> Node0x643aa20;
	Node0x643d4a0:s1 -> Node0x643d4a0;
	Node0x643aa20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%153:\l153:                                              \l  %154 = add nsw i32 %56, %48\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds i32, i32 addrspace(1)* %30, i64 %155\l  store i32 %57, i32 addrspace(1)* %156, align 4, !tbaa !10\l  %157 = add nsw i32 %56, 1\l  br label %158\l}"];
	Node0x643aa20 -> Node0x64379a0;
	Node0x64379a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%158:\l158:                                              \l  %159 = phi i32 [ %157, %153 ], [ %56, %55 ]\l  %160 = add nuw nsw i32 %57, 1\l  %161 = icmp sge i32 %160, %1\l  %162 = icmp eq i32 %159, %4\l  %163 = select i1 %161, i1 true, i1 %162\l  br i1 %163, label %164, label %55, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x64379a0:s0 -> Node0x6434bc0;
	Node0x64379a0:s1 -> Node0x6437470;
	Node0x6434bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%164:\l164:                                              \l  %165 = add nuw nsw i32 %34, 1\l  %166 = icmp eq i32 %165, %2\l  br i1 %166, label %49, label %33, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x6434bc0:s0 -> Node0x6435290;
	Node0x6434bc0:s1 -> Node0x6435730;
}
