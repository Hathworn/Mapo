digraph "CFG for '_Z20group_point_grad_gpuiiiiiPKfPKiPf' function" {
	label="CFG for '_Z20group_point_grad_gpuiiiiiPKfPKiPf' function";

	Node0x59849f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%8:\l  %9 = icmp sgt i32 %0, 0\l  br i1 %9, label %10, label %29\l|{<s0>T|<s1>F}}"];
	Node0x59849f0:s0 -> Node0x5983c30;
	Node0x59849f0:s1 -> Node0x59851b0;
	Node0x5983c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%10:\l10:                                               \l  %11 = icmp sgt i32 %3, 0\l  %12 = icmp sgt i32 %4, 0\l  %13 = icmp sgt i32 %2, 0\l  %14 = mul nsw i32 %4, %3\l  %15 = sext i32 %14 to i64\l  %16 = mul nsw i32 %14, %2\l  %17 = sext i32 %16 to i64\l  %18 = mul nsw i32 %2, %1\l  %19 = sext i32 %18 to i64\l  %20 = and i32 %2, 7\l  %21 = icmp ult i32 %2, 8\l  %22 = and i32 %2, -8\l  %23 = icmp eq i32 %20, 0\l  br label %24\l}"];
	Node0x5983c30 -> Node0x5985b10;
	Node0x5985b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%24:\l24:                                               \l  %25 = phi float addrspace(1)* [ %5, %10 ], [ %36, %34 ]\l  %26 = phi i32 [ 0, %10 ], [ %38, %34 ]\l  %27 = phi float addrspace(1)* [ %7, %10 ], [ %37, %34 ]\l  %28 = phi i32 addrspace(1)* [ %6, %10 ], [ %35, %34 ]\l  br i1 %11, label %30, label %34\l|{<s0>T|<s1>F}}"];
	Node0x5985b10:s0 -> Node0x59860a0;
	Node0x5985b10:s1 -> Node0x5985c00;
	Node0x59851b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%29:\l29:                                               \l  ret void\l}"];
	Node0x59860a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%30:\l30:                                               \l  %31 = phi i32 [ %41, %40 ], [ 0, %24 ]\l  br i1 %12, label %32, label %40\l|{<s0>T|<s1>F}}"];
	Node0x59860a0:s0 -> Node0x5986360;
	Node0x59860a0:s1 -> Node0x5986260;
	Node0x5986360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%32:\l32:                                               \l  %33 = mul nsw i32 %31, %4\l  br label %43\l}"];
	Node0x5986360 -> Node0x59856c0;
	Node0x5985c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %28, i64 %15\l  %36 = getelementptr inbounds float, float addrspace(1)* %25, i64 %17\l  %37 = getelementptr inbounds float, float addrspace(1)* %27, i64 %19\l  %38 = add nuw nsw i32 %26, 1\l  %39 = icmp eq i32 %38, %0\l  br i1 %39, label %29, label %24, !llvm.loop !4\l|{<s0>T|<s1>F}}"];
	Node0x5985c00:s0 -> Node0x59851b0;
	Node0x5985c00:s1 -> Node0x5985b10;
	Node0x5986260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%40:\l40:                                               \l  %41 = add nuw nsw i32 %31, 1\l  %42 = icmp eq i32 %41, %3\l  br i1 %42, label %34, label %30, !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x5986260:s0 -> Node0x5985c00;
	Node0x5986260:s1 -> Node0x59860a0;
	Node0x59856c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%43:\l43:                                               \l  %44 = phi i32 [ 0, %32 ], [ %70, %69 ]\l  %45 = add nsw i32 %44, %33\l  br i1 %13, label %46, label %69\l|{<s0>T|<s1>F}}"];
	Node0x59856c0:s0 -> Node0x5987930;
	Node0x59856c0:s1 -> Node0x5985f80;
	Node0x5987930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%46:\l46:                                               \l  %47 = sext i32 %45 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %28, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !7\l  %50 = mul i32 %45, %2\l  %51 = mul nsw i32 %49, %2\l  br i1 %21, label %52, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5987930:s0 -> Node0x5987e10;
	Node0x5987930:s1 -> Node0x5987ea0;
	Node0x5987e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%52:\l52:                                               \l  %53 = phi i32 [ 0, %46 ], [ %154, %72 ]\l  br i1 %23, label %69, label %54\l|{<s0>T|<s1>F}}"];
	Node0x5987e10:s0 -> Node0x5985f80;
	Node0x5987e10:s1 -> Node0x5988090;
	Node0x5988090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = phi i32 [ %66, %54 ], [ %53, %52 ]\l  %56 = phi i32 [ %67, %54 ], [ 0, %52 ]\l  %57 = add nsw i32 %55, %50\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %25, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !11\l  %61 = add nsw i32 %55, %51\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %27, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !11\l  %65 = fadd contract float %60, %64\l  store float %65, float addrspace(1)* %63, align 4, !tbaa !11\l  %66 = add nuw nsw i32 %55, 1\l  %67 = add i32 %56, 1\l  %68 = icmp eq i32 %67, %20\l  br i1 %68, label %69, label %54, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5988090:s0 -> Node0x5985f80;
	Node0x5988090:s1 -> Node0x5988090;
	Node0x5985f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%69:\l69:                                               \l  %70 = add nuw nsw i32 %44, 1\l  %71 = icmp eq i32 %70, %4\l  br i1 %71, label %40, label %43, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5985f80:s0 -> Node0x5986260;
	Node0x5985f80:s1 -> Node0x59856c0;
	Node0x5987ea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%72:\l72:                                               \l  %73 = phi i32 [ %154, %72 ], [ 0, %46 ]\l  %74 = phi i32 [ %155, %72 ], [ 0, %46 ]\l  %75 = add nsw i32 %73, %50\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %25, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !11\l  %79 = add nsw i32 %73, %51\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %27, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !11\l  %83 = fadd contract float %78, %82\l  store float %83, float addrspace(1)* %81, align 4, !tbaa !11\l  %84 = or i32 %73, 1\l  %85 = add nsw i32 %84, %50\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %25, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !11\l  %89 = add nsw i32 %84, %51\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %27, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !11\l  %93 = fadd contract float %88, %92\l  store float %93, float addrspace(1)* %91, align 4, !tbaa !11\l  %94 = or i32 %73, 2\l  %95 = add nsw i32 %94, %50\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %25, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !11\l  %99 = add nsw i32 %94, %51\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %27, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !11\l  %103 = fadd contract float %98, %102\l  store float %103, float addrspace(1)* %101, align 4, !tbaa !11\l  %104 = or i32 %73, 3\l  %105 = add nsw i32 %104, %50\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %25, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !11\l  %109 = add nsw i32 %104, %51\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %27, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !11\l  %113 = fadd contract float %108, %112\l  store float %113, float addrspace(1)* %111, align 4, !tbaa !11\l  %114 = or i32 %73, 4\l  %115 = add nsw i32 %114, %50\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %25, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !11\l  %119 = add nsw i32 %114, %51\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %27, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !11\l  %123 = fadd contract float %118, %122\l  store float %123, float addrspace(1)* %121, align 4, !tbaa !11\l  %124 = or i32 %73, 5\l  %125 = add nsw i32 %124, %50\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %25, i64 %126\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !11\l  %129 = add nsw i32 %124, %51\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %27, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !11\l  %133 = fadd contract float %128, %132\l  store float %133, float addrspace(1)* %131, align 4, !tbaa !11\l  %134 = or i32 %73, 6\l  %135 = add nsw i32 %134, %50\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %25, i64 %136\l  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !11\l  %139 = add nsw i32 %134, %51\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %27, i64 %140\l  %142 = load float, float addrspace(1)* %141, align 4, !tbaa !11\l  %143 = fadd contract float %138, %142\l  store float %143, float addrspace(1)* %141, align 4, !tbaa !11\l  %144 = or i32 %73, 7\l  %145 = add nsw i32 %144, %50\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %25, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !11\l  %149 = add nsw i32 %144, %51\l  %150 = sext i32 %149 to i64\l  %151 = getelementptr inbounds float, float addrspace(1)* %27, i64 %150\l  %152 = load float, float addrspace(1)* %151, align 4, !tbaa !11\l  %153 = fadd contract float %148, %152\l  store float %153, float addrspace(1)* %151, align 4, !tbaa !11\l  %154 = add nuw nsw i32 %73, 8\l  %155 = add i32 %74, 8\l  %156 = icmp eq i32 %155, %22\l  br i1 %156, label %52, label %72, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5987ea0:s0 -> Node0x5987e10;
	Node0x5987ea0:s1 -> Node0x5987ea0;
}
