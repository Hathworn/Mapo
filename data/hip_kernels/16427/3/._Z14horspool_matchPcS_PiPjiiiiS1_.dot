digraph "CFG for '_Z14horspool_matchPcS_PiPjiiiiS1_' function" {
	label="CFG for '_Z14horspool_matchPcS_PiPjiiiiS1_' function";

	Node0x4965bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = mul i32 %16, %15\l  %18 = add i32 %17, %10\l  %19 = icmp sgt i32 %18, %5\l  br i1 %19, label %144, label %20\l|{<s0>T|<s1>F}}"];
	Node0x4965bf0:s0 -> Node0x4968170;
	Node0x4965bf0:s1 -> Node0x4968200;
	Node0x4968200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%20:\l20:                                               \l  %21 = mul nsw i32 %18, %4\l  %22 = add nsw i32 %7, -1\l  %23 = add i32 %22, %4\l  %24 = add i32 %23, %21\l  %25 = add i32 %22, %21\l  %26 = icmp slt i32 %25, %24\l  %27 = icmp slt i32 %25, %6\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %69\l|{<s0>T|<s1>F}}"];
	Node0x4968200:s0 -> Node0x4968810;
	Node0x4968200:s1 -> Node0x4968860;
	Node0x4968810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%29:\l29:                                               \l  %30 = icmp sgt i32 %7, 0\l  br label %31\l}"];
	Node0x4968810 -> Node0x4968a60;
	Node0x4968a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%31:\l31:                                               \l  %32 = phi i32 [ %25, %29 ], [ %65, %63 ]\l  %33 = phi i32 [ 0, %29 ], [ %64, %63 ]\l  br i1 %30, label %34, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4968a60:s0 -> Node0x4968000;
	Node0x4968a60:s1 -> Node0x4968f40;
	Node0x4968000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i32 [ %47, %46 ], [ 0, %31 ]\l  %36 = xor i32 %35, -1\l  %37 = add i32 %36, %7\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %38\l  %40 = load i8, i8 addrspace(1)* %39, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %41 = sub nsw i32 %32, %35\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %42\l  %44 = load i8, i8 addrspace(1)* %43, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %45 = icmp eq i8 %40, %44\l  br i1 %45, label %46, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4968000:s0 -> Node0x49690b0;
	Node0x4968000:s1 -> Node0x4968f40;
	Node0x49690b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = add nuw nsw i32 %35, 1\l  %48 = icmp eq i32 %47, %7\l  br i1 %48, label %49, label %34, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x49690b0:s0 -> Node0x4968f40;
	Node0x49690b0:s1 -> Node0x4968000;
	Node0x4968f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%49:\l49:                                               \l  %50 = phi i32 [ 0, %31 ], [ %35, %34 ], [ %7, %46 ]\l  %51 = icmp eq i32 %50, %7\l  br i1 %51, label %52, label %55\l|{<s0>T|<s1>F}}"];
	Node0x4968f40:s0 -> Node0x496aa50;
	Node0x4968f40:s1 -> Node0x496aaa0;
	Node0x496aa50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%52:\l52:                                               \l  %53 = add nsw i32 %33, 1\l  %54 = add nsw i32 %32, 1\l  br label %63\l}"];
	Node0x496aa50 -> Node0x4968b50;
	Node0x496aaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%55:\l55:                                               \l  %56 = sext i32 %32 to i64\l  %57 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %56\l  %58 = load i8, i8 addrspace(1)* %57, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %59 = sext i8 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !12, !amdgpu.noclobber\l... !6\l  %62 = add nsw i32 %61, %32\l  br label %63\l}"];
	Node0x496aaa0 -> Node0x4968b50;
	Node0x4968b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%63:\l63:                                               \l  %64 = phi i32 [ %53, %52 ], [ %33, %55 ]\l  %65 = phi i32 [ %54, %52 ], [ %62, %55 ]\l  %66 = icmp slt i32 %65, %24\l  %67 = icmp slt i32 %65, %6\l  %68 = select i1 %66, i1 %67, i1 false\l  br i1 %68, label %31, label %69, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4968b50:s0 -> Node0x4968a60;
	Node0x4968b50:s1 -> Node0x4968860;
	Node0x4968860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%69:\l69:                                               \l  %70 = phi i32 [ 0, %20 ], [ %64, %63 ]\l  %71 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %10\l  store i32 %70, i32 addrspace(3)* %71, align 4, !tbaa !12\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %72 = icmp eq i32 %10, 0\l  br i1 %72, label %76, label %144\l|{<s0>T|<s1>F}}"];
	Node0x4968860:s0 -> Node0x496c420;
	Node0x4968860:s1 -> Node0x4968170;
	Node0x496c560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%73:\l73:                                               \l  %74 = zext i32 %16 to i64\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %74\l  store i32 %141, i32 addrspace(1)* %75, align 4, !tbaa !12\l  br label %144\l}"];
	Node0x496c560 -> Node0x4968170;
	Node0x496c420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%76:\l76:                                               \l  %77 = phi i32 [ %142, %76 ], [ 0, %69 ]\l  %78 = phi i32 [ %141, %76 ], [ 0, %69 ]\l  %79 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %77\l  %80 = load i32, i32 addrspace(3)* %79, align 4, !tbaa !12\l  %81 = add nsw i32 %80, %78\l  %82 = or i32 %77, 1\l  %83 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %82\l  %84 = load i32, i32 addrspace(3)* %83, align 4, !tbaa !12\l  %85 = add nsw i32 %84, %81\l  %86 = or i32 %77, 2\l  %87 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %86\l  %88 = load i32, i32 addrspace(3)* %87, align 4, !tbaa !12\l  %89 = add nsw i32 %88, %85\l  %90 = or i32 %77, 3\l  %91 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %90\l  %92 = load i32, i32 addrspace(3)* %91, align 4, !tbaa !12\l  %93 = add nsw i32 %92, %89\l  %94 = or i32 %77, 4\l  %95 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %94\l  %96 = load i32, i32 addrspace(3)* %95, align 4, !tbaa !12\l  %97 = add nsw i32 %96, %93\l  %98 = or i32 %77, 5\l  %99 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %98\l  %100 = load i32, i32 addrspace(3)* %99, align 4, !tbaa !12\l  %101 = add nsw i32 %100, %97\l  %102 = or i32 %77, 6\l  %103 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %102\l  %104 = load i32, i32 addrspace(3)* %103, align 4, !tbaa !12\l  %105 = add nsw i32 %104, %101\l  %106 = or i32 %77, 7\l  %107 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %106\l  %108 = load i32, i32 addrspace(3)* %107, align 4, !tbaa !12\l  %109 = add nsw i32 %108, %105\l  %110 = or i32 %77, 8\l  %111 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %110\l  %112 = load i32, i32 addrspace(3)* %111, align 4, !tbaa !12\l  %113 = add nsw i32 %112, %109\l  %114 = or i32 %77, 9\l  %115 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %114\l  %116 = load i32, i32 addrspace(3)* %115, align 4, !tbaa !12\l  %117 = add nsw i32 %116, %113\l  %118 = or i32 %77, 10\l  %119 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %118\l  %120 = load i32, i32 addrspace(3)* %119, align 4, !tbaa !12\l  %121 = add nsw i32 %120, %117\l  %122 = or i32 %77, 11\l  %123 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %122\l  %124 = load i32, i32 addrspace(3)* %123, align 4, !tbaa !12\l  %125 = add nsw i32 %124, %121\l  %126 = or i32 %77, 12\l  %127 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %126\l  %128 = load i32, i32 addrspace(3)* %127, align 4, !tbaa !12\l  %129 = add nsw i32 %128, %125\l  %130 = or i32 %77, 13\l  %131 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %130\l  %132 = load i32, i32 addrspace(3)* %131, align 4, !tbaa !12\l  %133 = add nsw i32 %132, %129\l  %134 = or i32 %77, 14\l  %135 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %134\l  %136 = load i32, i32 addrspace(3)* %135, align 4, !tbaa !12\l  %137 = add nsw i32 %136, %133\l  %138 = or i32 %77, 15\l  %139 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %138\l  %140 = load i32, i32 addrspace(3)* %139, align 4, !tbaa !12\l  %141 = add nsw i32 %140, %137\l  %142 = add nuw nsw i32 %77, 16\l  %143 = icmp eq i32 %142, 512\l  br i1 %143, label %73, label %76, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x496c420:s0 -> Node0x496c560;
	Node0x496c420:s1 -> Node0x496c420;
	Node0x4968170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%144:\l144:                                              \l  ret void\l}"];
}
