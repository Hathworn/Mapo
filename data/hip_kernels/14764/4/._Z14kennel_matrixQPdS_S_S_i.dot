digraph "CFG for '_Z14kennel_matrixQPdS_S_S_i' function" {
	label="CFG for '_Z14kennel_matrixQPdS_S_S_i' function";

	Node0x4767950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %11\l  %14 = add i32 %13, %6\l  %15 = freeze i32 %14\l  %16 = freeze i32 %4\l  %17 = sdiv i32 %15, %16\l  %18 = add nsw i32 %14, %4\l  %19 = sext i32 %18 to i64\l  %20 = getelementptr inbounds double, double addrspace(1)* %3, i64 %19\l  store double 0.000000e+00, double addrspace(1)* %20, align 8, !tbaa !7\l  %21 = icmp sgt i32 %4, 0\l  br i1 %21, label %22, label %30\l|{<s0>T|<s1>F}}"];
	Node0x4767950:s0 -> Node0x476a7b0;
	Node0x4767950:s1 -> Node0x476a840;
	Node0x476a7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%22:\l22:                                               \l  %23 = mul i32 %17, %16\l  %24 = sub i32 %15, %23\l  %25 = sext i32 %17 to i64\l  %26 = getelementptr inbounds double, double addrspace(1)* %1, i64 %25\l  %27 = mul nsw i32 %17, %4\l  %28 = mul nsw i32 %24, %4\l  %29 = bitcast double addrspace(1)* %20 to i64 addrspace(1)*\l  br label %31\l}"];
	Node0x476a7b0 -> Node0x476ad40;
	Node0x476a840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%30:\l30:                                               \l  ret void\l}"];
	Node0x476ad40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%31:\l31:                                               \l  %32 = phi i32 [ 0, %22 ], [ %62, %61 ]\l  %33 = load double, double addrspace(1)* %26, align 8, !tbaa !7\l  %34 = fcmp contract une double %33, 0.000000e+00\l  br i1 %34, label %35, label %61\l|{<s0>T|<s1>F}}"];
	Node0x476ad40:s0 -> Node0x476b7a0;
	Node0x476ad40:s1 -> Node0x476ae80;
	Node0x476b7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%35:\l35:                                               \l  %36 = zext i32 %32 to i64\l  %37 = getelementptr inbounds double, double addrspace(1)* %2, i64 %36\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !7\l  %39 = fcmp contract une double %38, 0.000000e+00\l  br i1 %39, label %40, label %61\l|{<s0>T|<s1>F}}"];
	Node0x476b7a0:s0 -> Node0x476bb20;
	Node0x476b7a0:s1 -> Node0x476ae80;
	Node0x476bb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%40:\l40:                                               \l  %41 = add nsw i32 %32, %27\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds double, double addrspace(1)* %0, i64 %42\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !7\l  %45 = add nsw i32 %32, %28\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds double, double addrspace(1)* %0, i64 %46\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !7\l  %49 = fmul contract double %44, %48\l  %50 = fdiv contract double %49, %33\l  %51 = fdiv contract double %50, %38\l  %52 = load i64, i64 addrspace(1)* %29, align 8, !tbaa !11\l  br label %53\l}"];
	Node0x476bb20 -> Node0x476c360;
	Node0x476c360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi i64 [ %52, %40 ], [ %59, %53 ]\l  %55 = bitcast i64 %54 to double\l  %56 = fadd contract double %51, %55\l  %57 = bitcast double %56 to i64\l  %58 = cmpxchg i64 addrspace(1)* %29, i64 %54, i64 %57\l... syncscope(\"agent-one-as\") monotonic monotonic, align 8\l  %59 = extractvalue \{ i64, i1 \} %58, 0\l  %60 = icmp eq i64 %54, %59\l  br i1 %60, label %61, label %53, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x476c360:s0 -> Node0x476ae80;
	Node0x476c360:s1 -> Node0x476c360;
	Node0x476ae80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%61:\l61:                                               \l  %62 = add nuw nsw i32 %32, 1\l  %63 = icmp eq i32 %62, %4\l  br i1 %63, label %30, label %31, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x476ae80:s0 -> Node0x476a840;
	Node0x476ae80:s1 -> Node0x476ad40;
}
