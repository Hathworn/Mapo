digraph "CFG for '_Z7mov_upKPiii' function" {
	label="CFG for '_Z7mov_upKPiii' function";

	Node0x5616100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %6 = icmp sgt i32 %2, 1\l  br i1 %6, label %7, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5616100:s0 -> Node0x5617d80;
	Node0x5616100:s1 -> Node0x5617e10;
	Node0x5617d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%7:\l7:                                                \l  %8 = icmp eq i32 %4, 0\l  %9 = mul nsw i32 %4, %1\l  %10 = add nsw i32 %9, %5\l  %11 = sext i32 %10 to i64\l  %12 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %11\l  %13 = sub i32 %5, %1\l  %14 = add nsw i32 %13, %9\l  %15 = sext i32 %14 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %15\l  br label %17\l}"];
	Node0x5617d80 -> Node0x5616ea0;
	Node0x5616ea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = phi i32 [ %2, %7 ], [ %19, %27 ]\l  %19 = add nsw i32 %18, -1\l  br i1 %8, label %27, label %20\l|{<s0>T|<s1>F}}"];
	Node0x5616ea0:s0 -> Node0x5618640;
	Node0x5616ea0:s1 -> Node0x5618840;
	Node0x5618840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%20:\l20:                                               \l  %21 = load i32, i32 addrspace(1)* %12, align 4, !tbaa !5\l  %22 = icmp eq i32 %21, 0\l  br i1 %22, label %27, label %23\l|{<s0>T|<s1>F}}"];
	Node0x5618840:s0 -> Node0x5618640;
	Node0x5618840:s1 -> Node0x5618b40;
	Node0x5618b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%23:\l23:                                               \l  %24 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !5\l  %25 = icmp eq i32 %24, 0\l  br i1 %25, label %26, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5618b40:s0 -> Node0x5619390;
	Node0x5618b40:s1 -> Node0x5618640;
	Node0x5619390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%26:\l26:                                               \l  store i32 %21, i32 addrspace(1)* %16, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %12, align 4, !tbaa !5\l  br label %27\l}"];
	Node0x5619390 -> Node0x5618640;
	Node0x5618640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %28 = icmp ugt i32 %18, 2\l  br i1 %28, label %17, label %29, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5618640:s0 -> Node0x5616ea0;
	Node0x5618640:s1 -> Node0x5617e10;
	Node0x5617e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%29:\l29:                                               \l  %30 = icmp ne i32 %4, 0\l  %31 = icmp slt i32 %5, %1\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5617e10:s0 -> Node0x5618500;
	Node0x5617e10:s1 -> Node0x5618550;
	Node0x5618500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%33:\l33:                                               \l  %34 = mul nsw i32 %4, %1\l  %35 = add nsw i32 %34, %5\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !5\l  %39 = icmp eq i32 %38, 0\l  br i1 %39, label %72, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5618500:s0 -> Node0x5618550;
	Node0x5618500:s1 -> Node0x561a2f0;
	Node0x561a2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%40:\l40:                                               \l  %41 = add nsw i32 %4, -1\l  %42 = mul nsw i32 %41, %1\l  %43 = add nsw i32 %42, %5\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !5\l  %47 = icmp eq i32 %38, %46\l  br i1 %47, label %48, label %68\l|{<s0>T|<s1>F}}"];
	Node0x561a2f0:s0 -> Node0x561a7b0;
	Node0x561a2f0:s1 -> Node0x561a800;
	Node0x561a7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%48:\l48:                                               \l  %49 = add nuw nsw i32 %4, 1\l  br label %50\l}"];
	Node0x561a7b0 -> Node0x561a9d0;
	Node0x561a9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%50:\l50:                                               \l  %51 = phi i32 [ %60, %59 ], [ 1, %48 ]\l  %52 = sub nsw i32 %4, %51\l  %53 = mul nsw i32 %52, %1\l  %54 = add nsw i32 %53, %5\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %55\l  %57 = load i32, i32 addrspace(1)* %56, align 4, !tbaa !5\l  %58 = icmp eq i32 %38, %57\l  br i1 %58, label %59, label %62\l|{<s0>T|<s1>F}}"];
	Node0x561a9d0:s0 -> Node0x561aa90;
	Node0x561a9d0:s1 -> Node0x561afc0;
	Node0x561aa90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%59:\l59:                                               \l  %60 = add nuw nsw i32 %51, 1\l  %61 = icmp eq i32 %4, %51\l  br i1 %61, label %62, label %50, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x561aa90:s0 -> Node0x561afc0;
	Node0x561aa90:s1 -> Node0x561a9d0;
	Node0x561afc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%62:\l62:                                               \l  %63 = phi i32 [ %49, %59 ], [ %51, %50 ]\l  %64 = and i32 %63, 1\l  %65 = icmp eq i32 %64, 0\l  br i1 %65, label %66, label %72\l|{<s0>T|<s1>F}}"];
	Node0x561afc0:s0 -> Node0x5619d90;
	Node0x561afc0:s1 -> Node0x5618550;
	Node0x5619d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%66:\l66:                                               \l  %67 = shl nsw i32 %38, 1\l  br label %70\l}"];
	Node0x5619d90 -> Node0x5619e90;
	Node0x561a800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%68:\l68:                                               \l  %69 = icmp eq i32 %46, 0\l  br i1 %69, label %70, label %72\l|{<s0>T|<s1>F}}"];
	Node0x561a800:s0 -> Node0x5619e90;
	Node0x561a800:s1 -> Node0x5618550;
	Node0x5619e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%70:\l70:                                               \l  %71 = phi i32 [ %67, %66 ], [ %38, %68 ]\l  store i32 %71, i32 addrspace(1)* %45, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %37, align 4, !tbaa !5\l  br label %72\l}"];
	Node0x5619e90 -> Node0x5618550;
	Node0x5618550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%72:\l72:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %6, label %73, label %95\l|{<s0>T|<s1>F}}"];
	Node0x5618550:s0 -> Node0x561bed0;
	Node0x5618550:s1 -> Node0x561bf20;
	Node0x561bed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%73:\l73:                                               \l  %74 = icmp eq i32 %4, 0\l  %75 = mul nsw i32 %4, %1\l  %76 = add nsw i32 %75, %5\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %77\l  %79 = sub i32 %5, %1\l  %80 = add nsw i32 %79, %75\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %81\l  br label %83\l}"];
	Node0x561bed0 -> Node0x561c510;
	Node0x561c510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  %84 = phi i32 [ %2, %73 ], [ %85, %93 ]\l  %85 = add nsw i32 %84, -1\l  br i1 %74, label %93, label %86\l|{<s0>T|<s1>F}}"];
	Node0x561c510:s0 -> Node0x561c5d0;
	Node0x561c510:s1 -> Node0x561c7a0;
	Node0x561c7a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%86:\l86:                                               \l  %87 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !5\l  %88 = icmp eq i32 %87, 0\l  br i1 %88, label %93, label %89\l|{<s0>T|<s1>F}}"];
	Node0x561c7a0:s0 -> Node0x561c5d0;
	Node0x561c7a0:s1 -> Node0x561c9a0;
	Node0x561c9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%89:\l89:                                               \l  %90 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !5\l  %91 = icmp eq i32 %90, 0\l  br i1 %91, label %92, label %93\l|{<s0>T|<s1>F}}"];
	Node0x561c9a0:s0 -> Node0x561cba0;
	Node0x561c9a0:s1 -> Node0x561c5d0;
	Node0x561cba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%92:\l92:                                               \l  store i32 %87, i32 addrspace(1)* %82, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %78, align 4, !tbaa !5\l  br label %93\l}"];
	Node0x561cba0 -> Node0x561c5d0;
	Node0x561c5d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%93:\l93:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %94 = icmp ugt i32 %84, 2\l  br i1 %94, label %83, label %95, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x561c5d0:s0 -> Node0x561c510;
	Node0x561c5d0:s1 -> Node0x561bf20;
	Node0x561bf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%95:\l95:                                               \l  ret void\l}"];
}
