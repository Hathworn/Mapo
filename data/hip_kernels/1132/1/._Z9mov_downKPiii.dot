digraph "CFG for '_Z9mov_downKPiii' function" {
	label="CFG for '_Z9mov_downKPiii' function";

	Node0x52e9250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %6 = add nsw i32 %2, -1\l  %7 = icmp sgt i32 %2, 1\l  br i1 %7, label %8, label %31\l|{<s0>T|<s1>F}}"];
	Node0x52e9250:s0 -> Node0x52eaf50;
	Node0x52e9250:s1 -> Node0x52eafe0;
	Node0x52eaf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%8:\l8:                                                \l  %9 = icmp eq i32 %6, %4\l  %10 = mul nsw i32 %4, %1\l  %11 = add nsw i32 %10, %5\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %12\l  %14 = add nuw nsw i32 %4, 1\l  %15 = mul nsw i32 %14, %1\l  %16 = add nsw i32 %15, %5\l  %17 = sext i32 %16 to i64\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %17\l  br label %19\l}"];
	Node0x52eaf50 -> Node0x52e9fb0;
	Node0x52e9fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = phi i32 [ %6, %8 ], [ %29, %28 ]\l  br i1 %9, label %28, label %21\l|{<s0>T|<s1>F}}"];
	Node0x52e9fb0:s0 -> Node0x52eb870;
	Node0x52e9fb0:s1 -> Node0x52eb9b0;
	Node0x52eb9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%21:\l21:                                               \l  %22 = load i32, i32 addrspace(1)* %13, align 4, !tbaa !5\l  %23 = icmp eq i32 %22, 0\l  br i1 %23, label %28, label %24\l|{<s0>T|<s1>F}}"];
	Node0x52eb9b0:s0 -> Node0x52eb870;
	Node0x52eb9b0:s1 -> Node0x52ebd20;
	Node0x52ebd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%24:\l24:                                               \l  %25 = load i32, i32 addrspace(1)* %18, align 4, !tbaa !5\l  %26 = icmp eq i32 %25, 0\l  br i1 %26, label %27, label %28\l|{<s0>T|<s1>F}}"];
	Node0x52ebd20:s0 -> Node0x52ec570;
	Node0x52ebd20:s1 -> Node0x52eb870;
	Node0x52ec570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%27:\l27:                                               \l  store i32 %22, i32 addrspace(1)* %18, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %13, align 4, !tbaa !5\l  br label %28\l}"];
	Node0x52ec570 -> Node0x52eb870;
	Node0x52eb870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %29 = add nsw i32 %20, -1\l  %30 = icmp ugt i32 %20, 1\l  br i1 %30, label %19, label %31, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x52eb870:s0 -> Node0x52e9fb0;
	Node0x52eb870:s1 -> Node0x52eafe0;
	Node0x52eafe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%31:\l31:                                               \l  %32 = icmp ne i32 %6, %4\l  %33 = icmp slt i32 %5, %1\l  %34 = select i1 %32, i1 %33, i1 false\l  br i1 %34, label %35, label %75\l|{<s0>T|<s1>F}}"];
	Node0x52eafe0:s0 -> Node0x52eb6b0;
	Node0x52eafe0:s1 -> Node0x52ed0b0;
	Node0x52eb6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%35:\l35:                                               \l  %36 = mul nsw i32 %4, %1\l  %37 = add nsw i32 %36, %5\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %38\l  %40 = load i32, i32 addrspace(1)* %39, align 4, !tbaa !5\l  %41 = icmp eq i32 %40, 0\l  br i1 %41, label %75, label %42\l|{<s0>T|<s1>F}}"];
	Node0x52eb6b0:s0 -> Node0x52ed0b0;
	Node0x52eb6b0:s1 -> Node0x52ed520;
	Node0x52ed520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%42:\l42:                                               \l  %43 = add nuw nsw i32 %4, 1\l  %44 = mul nsw i32 %43, %1\l  %45 = add nsw i32 %44, %5\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !5\l  %49 = icmp eq i32 %40, %48\l  br i1 %49, label %50, label %71\l|{<s0>T|<s1>F}}"];
	Node0x52ed520:s0 -> Node0x52ed9e0;
	Node0x52ed520:s1 -> Node0x52eda30;
	Node0x52ed9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%50:\l50:                                               \l  %51 = icmp slt i32 %4, %2\l  br i1 %51, label %52, label %65\l|{<s0>T|<s1>F}}"];
	Node0x52ed9e0:s0 -> Node0x52edc00;
	Node0x52ed9e0:s1 -> Node0x52edc50;
	Node0x52edc00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%52:\l52:                                               \l  %53 = phi i32 [ %63, %61 ], [ %43, %50 ]\l  %54 = phi i32 [ %62, %61 ], [ 1, %50 ]\l  %55 = mul nsw i32 %53, %1\l  %56 = add nsw i32 %55, %5\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %57\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !5\l  %60 = icmp eq i32 %40, %59\l  br i1 %60, label %61, label %65\l|{<s0>T|<s1>F}}"];
	Node0x52edc00:s0 -> Node0x52edd90;
	Node0x52edc00:s1 -> Node0x52edc50;
	Node0x52edd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%61:\l61:                                               \l  %62 = add nuw nsw i32 %54, 1\l  %63 = add nuw nsw i32 %62, %4\l  %64 = icmp sgt i32 %63, %2\l  br i1 %64, label %65, label %52, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x52edd90:s0 -> Node0x52edc50;
	Node0x52edd90:s1 -> Node0x52edc00;
	Node0x52edc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%65:\l65:                                               \l  %66 = phi i32 [ 1, %50 ], [ %62, %61 ], [ %54, %52 ]\l  %67 = and i32 %66, 1\l  %68 = icmp eq i32 %67, 0\l  br i1 %68, label %69, label %75\l|{<s0>T|<s1>F}}"];
	Node0x52edc50:s0 -> Node0x52eeab0;
	Node0x52edc50:s1 -> Node0x52ed0b0;
	Node0x52eeab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%69:\l69:                                               \l  %70 = shl nsw i32 %40, 1\l  br label %73\l}"];
	Node0x52eeab0 -> Node0x52eec40;
	Node0x52eda30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%71:\l71:                                               \l  %72 = icmp eq i32 %48, 0\l  br i1 %72, label %73, label %75\l|{<s0>T|<s1>F}}"];
	Node0x52eda30:s0 -> Node0x52eec40;
	Node0x52eda30:s1 -> Node0x52ed0b0;
	Node0x52eec40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%73:\l73:                                               \l  %74 = phi i32 [ %70, %69 ], [ %40, %71 ]\l  store i32 %74, i32 addrspace(1)* %47, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %39, align 4, !tbaa !5\l  br label %75\l}"];
	Node0x52eec40 -> Node0x52ed0b0;
	Node0x52ed0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%75:\l75:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %7, label %76, label %99\l|{<s0>T|<s1>F}}"];
	Node0x52ed0b0:s0 -> Node0x52ef1f0;
	Node0x52ed0b0:s1 -> Node0x52ef240;
	Node0x52ef1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%76:\l76:                                               \l  %77 = icmp eq i32 %6, %4\l  %78 = mul nsw i32 %4, %1\l  %79 = add nsw i32 %78, %5\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %80\l  %82 = add nuw nsw i32 %4, 1\l  %83 = mul nsw i32 %82, %1\l  %84 = add nsw i32 %83, %5\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %85\l  br label %87\l}"];
	Node0x52ef1f0 -> Node0x52ef8c0;
	Node0x52ef8c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  %88 = phi i32 [ %6, %76 ], [ %97, %96 ]\l  br i1 %77, label %96, label %89\l|{<s0>T|<s1>F}}"];
	Node0x52ef8c0:s0 -> Node0x52ef980;
	Node0x52ef8c0:s1 -> Node0x52efac0;
	Node0x52efac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%89:\l89:                                               \l  %90 = load i32, i32 addrspace(1)* %81, align 4, !tbaa !5\l  %91 = icmp eq i32 %90, 0\l  br i1 %91, label %96, label %92\l|{<s0>T|<s1>F}}"];
	Node0x52efac0:s0 -> Node0x52ef980;
	Node0x52efac0:s1 -> Node0x52efd00;
	Node0x52efd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%92:\l92:                                               \l  %93 = load i32, i32 addrspace(1)* %86, align 4, !tbaa !5\l  %94 = icmp eq i32 %93, 0\l  br i1 %94, label %95, label %96\l|{<s0>T|<s1>F}}"];
	Node0x52efd00:s0 -> Node0x52eff00;
	Node0x52efd00:s1 -> Node0x52ef980;
	Node0x52eff00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%95:\l95:                                               \l  store i32 %90, i32 addrspace(1)* %86, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %81, align 4, !tbaa !5\l  br label %96\l}"];
	Node0x52eff00 -> Node0x52ef980;
	Node0x52ef980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%96:\l96:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %97 = add nsw i32 %88, -1\l  %98 = icmp ugt i32 %88, 1\l  br i1 %98, label %87, label %99, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x52ef980:s0 -> Node0x52ef8c0;
	Node0x52ef980:s1 -> Node0x52ef240;
	Node0x52ef240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%99:\l99:                                               \l  ret void\l}"];
}
