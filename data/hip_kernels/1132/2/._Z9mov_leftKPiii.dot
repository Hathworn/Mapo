digraph "CFG for '_Z9mov_leftKPiii' function" {
	label="CFG for '_Z9mov_leftKPiii' function";

	Node0x62680e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %6 = icmp sgt i32 %1, 1\l  br i1 %6, label %7, label %28\l|{<s0>T|<s1>F}}"];
	Node0x62680e0:s0 -> Node0x6269d20;
	Node0x62680e0:s1 -> Node0x6269db0;
	Node0x6269d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%7:\l7:                                                \l  %8 = icmp eq i32 %5, 0\l  %9 = mul nsw i32 %4, %1\l  %10 = add i32 %9, %5\l  %11 = sext i32 %10 to i64\l  %12 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %11\l  %13 = add nsw i32 %10, -1\l  %14 = sext i32 %13 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %14\l  br label %16\l}"];
	Node0x6269d20 -> Node0x6268e40;
	Node0x6268e40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  %17 = phi i32 [ %1, %7 ], [ %18, %26 ]\l  %18 = add nsw i32 %17, -1\l  br i1 %8, label %26, label %19\l|{<s0>T|<s1>F}}"];
	Node0x6268e40:s0 -> Node0x6269fe0;
	Node0x6268e40:s1 -> Node0x626a740;
	Node0x626a740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%19:\l19:                                               \l  %20 = load i32, i32 addrspace(1)* %12, align 4, !tbaa !5\l  %21 = icmp eq i32 %20, 0\l  br i1 %21, label %26, label %22\l|{<s0>T|<s1>F}}"];
	Node0x626a740:s0 -> Node0x6269fe0;
	Node0x626a740:s1 -> Node0x626aa40;
	Node0x626aa40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%22:\l22:                                               \l  %23 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !5\l  %24 = icmp eq i32 %23, 0\l  br i1 %24, label %25, label %26\l|{<s0>T|<s1>F}}"];
	Node0x626aa40:s0 -> Node0x626b290;
	Node0x626aa40:s1 -> Node0x6269fe0;
	Node0x626b290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%25:\l25:                                               \l  store i32 %20, i32 addrspace(1)* %15, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %12, align 4, !tbaa !5\l  br label %26\l}"];
	Node0x626b290 -> Node0x6269fe0;
	Node0x6269fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %27 = icmp ugt i32 %17, 2\l  br i1 %27, label %16, label %28, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x6269fe0:s0 -> Node0x6268e40;
	Node0x6269fe0:s1 -> Node0x6269db0;
	Node0x6269db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%28:\l28:                                               \l  %29 = icmp ne i32 %5, 0\l  %30 = icmp slt i32 %5, %1\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %67\l|{<s0>T|<s1>F}}"];
	Node0x6269db0:s0 -> Node0x626bc00;
	Node0x6269db0:s1 -> Node0x626bc50;
	Node0x626bc00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%32:\l32:                                               \l  %33 = mul nsw i32 %4, %1\l  %34 = add i32 %33, %5\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %35\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !5\l  %38 = icmp eq i32 %37, 0\l  br i1 %38, label %67, label %39\l|{<s0>T|<s1>F}}"];
	Node0x626bc00:s0 -> Node0x626bc50;
	Node0x626bc00:s1 -> Node0x626c200;
	Node0x626c200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%39:\l39:                                               \l  %40 = add nsw i32 %34, -1\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !5\l  %44 = icmp eq i32 %37, %43\l  br i1 %44, label %45, label %63\l|{<s0>T|<s1>F}}"];
	Node0x626c200:s0 -> Node0x626c5a0;
	Node0x626c200:s1 -> Node0x626c5f0;
	Node0x626c5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%45:\l45:                                               \l  %46 = add nuw nsw i32 %5, 1\l  br label %47\l}"];
	Node0x626c5a0 -> Node0x626c7c0;
	Node0x626c7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%47:\l47:                                               \l  %48 = phi i32 [ 1, %45 ], [ %55, %54 ]\l  %49 = sub i32 %34, %48\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !5\l  %53 = icmp eq i32 %37, %52\l  br i1 %53, label %54, label %57\l|{<s0>T|<s1>F}}"];
	Node0x626c7c0:s0 -> Node0x626c880;
	Node0x626c7c0:s1 -> Node0x626cc90;
	Node0x626c880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%54:\l54:                                               \l  %55 = add nuw nsw i32 %48, 1\l  %56 = icmp eq i32 %48, %5\l  br i1 %56, label %57, label %47, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x626c880:s0 -> Node0x626cc90;
	Node0x626c880:s1 -> Node0x626c7c0;
	Node0x626cc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%57:\l57:                                               \l  %58 = phi i32 [ %46, %54 ], [ %48, %47 ]\l  %59 = and i32 %58, 1\l  %60 = icmp eq i32 %59, 0\l  br i1 %60, label %61, label %67\l|{<s0>T|<s1>F}}"];
	Node0x626cc90:s0 -> Node0x626d230;
	Node0x626cc90:s1 -> Node0x626bc50;
	Node0x626d230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%61:\l61:                                               \l  %62 = shl nsw i32 %37, 1\l  br label %65\l}"];
	Node0x626d230 -> Node0x626d3c0;
	Node0x626c5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%63:\l63:                                               \l  %64 = icmp eq i32 %43, 0\l  br i1 %64, label %65, label %67\l|{<s0>T|<s1>F}}"];
	Node0x626c5f0:s0 -> Node0x626d3c0;
	Node0x626c5f0:s1 -> Node0x626bc50;
	Node0x626d3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%65:\l65:                                               \l  %66 = phi i32 [ %62, %61 ], [ %37, %63 ]\l  store i32 %66, i32 addrspace(1)* %42, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %36, align 4, !tbaa !5\l  br label %67\l}"];
	Node0x626d3c0 -> Node0x626bc50;
	Node0x626bc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%67:\l67:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %6, label %68, label %89\l|{<s0>T|<s1>F}}"];
	Node0x626bc50:s0 -> Node0x626db90;
	Node0x626bc50:s1 -> Node0x626dbe0;
	Node0x626db90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%68:\l68:                                               \l  %69 = icmp eq i32 %5, 0\l  %70 = mul nsw i32 %4, %1\l  %71 = add i32 %70, %5\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %72\l  %74 = add nsw i32 %71, -1\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %75\l  br label %77\l}"];
	Node0x626db90 -> Node0x626e140;
	Node0x626e140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi i32 [ %1, %68 ], [ %79, %87 ]\l  %79 = add nsw i32 %78, -1\l  br i1 %69, label %87, label %80\l|{<s0>T|<s1>F}}"];
	Node0x626e140:s0 -> Node0x626e200;
	Node0x626e140:s1 -> Node0x626e3d0;
	Node0x626e3d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%80:\l80:                                               \l  %81 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !5\l  %82 = icmp eq i32 %81, 0\l  br i1 %82, label %87, label %83\l|{<s0>T|<s1>F}}"];
	Node0x626e3d0:s0 -> Node0x626e200;
	Node0x626e3d0:s1 -> Node0x626e5d0;
	Node0x626e5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%83:\l83:                                               \l  %84 = load i32, i32 addrspace(1)* %76, align 4, !tbaa !5\l  %85 = icmp eq i32 %84, 0\l  br i1 %85, label %86, label %87\l|{<s0>T|<s1>F}}"];
	Node0x626e5d0:s0 -> Node0x626e7d0;
	Node0x626e5d0:s1 -> Node0x626e200;
	Node0x626e7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%86:\l86:                                               \l  store i32 %81, i32 addrspace(1)* %76, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %73, align 4, !tbaa !5\l  br label %87\l}"];
	Node0x626e7d0 -> Node0x626e200;
	Node0x626e200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %88 = icmp ugt i32 %78, 2\l  br i1 %88, label %77, label %89, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x626e200:s0 -> Node0x626e140;
	Node0x626e200:s1 -> Node0x626dbe0;
	Node0x626dbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%89:\l89:                                               \l  ret void\l}"];
}
