digraph "CFG for '_Z10mov_rightKPiii' function" {
	label="CFG for '_Z10mov_rightKPiii' function";

	Node0x5ecc170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %6 = add nsw i32 %1, -1\l  %7 = icmp sgt i32 %1, 1\l  br i1 %7, label %8, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5ecc170:s0 -> Node0x5ecde70;
	Node0x5ecc170:s1 -> Node0x5ecdf00;
	Node0x5ecde70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%8:\l8:                                                \l  %9 = icmp eq i32 %6, %5\l  %10 = mul nsw i32 %4, %1\l  %11 = add i32 %10, %5\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %12\l  %14 = add i32 %11, 1\l  %15 = sext i32 %14 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %15\l  br label %17\l}"];
	Node0x5ecde70 -> Node0x5ecced0;
	Node0x5ecced0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = phi i32 [ %6, %8 ], [ %27, %26 ]\l  br i1 %9, label %26, label %19\l|{<s0>T|<s1>F}}"];
	Node0x5ecced0:s0 -> Node0x5ece670;
	Node0x5ecced0:s1 -> Node0x5ece7b0;
	Node0x5ece7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%19:\l19:                                               \l  %20 = load i32, i32 addrspace(1)* %13, align 4, !tbaa !5\l  %21 = icmp eq i32 %20, 0\l  br i1 %21, label %26, label %22\l|{<s0>T|<s1>F}}"];
	Node0x5ece7b0:s0 -> Node0x5ece670;
	Node0x5ece7b0:s1 -> Node0x5eceb20;
	Node0x5eceb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%22:\l22:                                               \l  %23 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !5\l  %24 = icmp eq i32 %23, 0\l  br i1 %24, label %25, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5eceb20:s0 -> Node0x5ecf370;
	Node0x5eceb20:s1 -> Node0x5ece670;
	Node0x5ecf370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%25:\l25:                                               \l  store i32 %20, i32 addrspace(1)* %16, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %13, align 4, !tbaa !5\l  br label %26\l}"];
	Node0x5ecf370 -> Node0x5ece670;
	Node0x5ece670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %27 = add nsw i32 %18, -1\l  %28 = icmp ugt i32 %18, 1\l  br i1 %28, label %17, label %29, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5ece670:s0 -> Node0x5ecced0;
	Node0x5ece670:s1 -> Node0x5ecdf00;
	Node0x5ecdf00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%29:\l29:                                               \l  %30 = icmp ne i32 %6, %5\l  %31 = icmp slt i32 %5, %1\l  %32 = and i1 %31, %30\l  br i1 %32, label %33, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5ecdf00:s0 -> Node0x5ece530;
	Node0x5ecdf00:s1 -> Node0x5ece580;
	Node0x5ece530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%33:\l33:                                               \l  %34 = mul nsw i32 %4, %1\l  %35 = add i32 %34, %5\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !5\l  %39 = icmp eq i32 %38, 0\l  br i1 %39, label %71, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5ece530:s0 -> Node0x5ece580;
	Node0x5ece530:s1 -> Node0x5ed0300;
	Node0x5ed0300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%40:\l40:                                               \l  %41 = add i32 %35, 1\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %42\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !5\l  %45 = icmp eq i32 %38, %44\l  br i1 %45, label %46, label %67\l|{<s0>T|<s1>F}}"];
	Node0x5ed0300:s0 -> Node0x5ed06a0;
	Node0x5ed0300:s1 -> Node0x5ed06f0;
	Node0x5ed06a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%46:\l46:                                               \l  %47 = add nuw nsw i32 %5, 1\l  %48 = icmp slt i32 %47, %1\l  br i1 %48, label %49, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5ed06a0:s0 -> Node0x5ed0950;
	Node0x5ed06a0:s1 -> Node0x5ed09a0;
	Node0x5ed0950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%49:\l49:                                               \l  %50 = phi i32 [ %59, %57 ], [ %47, %46 ]\l  %51 = phi i32 [ %58, %57 ], [ 1, %46 ]\l  %52 = add nsw i32 %50, %34\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !5\l  %56 = icmp eq i32 %38, %55\l  br i1 %56, label %57, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5ed0950:s0 -> Node0x5ed0ae0;
	Node0x5ed0950:s1 -> Node0x5ed09a0;
	Node0x5ed0ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%57:\l57:                                               \l  %58 = add nuw nsw i32 %51, 1\l  %59 = add nuw nsw i32 %58, %5\l  %60 = icmp slt i32 %59, %1\l  br i1 %60, label %49, label %61, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5ed0ae0:s0 -> Node0x5ed0950;
	Node0x5ed0ae0:s1 -> Node0x5ed09a0;
	Node0x5ed09a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%61:\l61:                                               \l  %62 = phi i32 [ 1, %46 ], [ %58, %57 ], [ %51, %49 ]\l  %63 = and i32 %62, 1\l  %64 = icmp eq i32 %63, 0\l  br i1 %64, label %65, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5ed09a0:s0 -> Node0x5ece610;
	Node0x5ed09a0:s1 -> Node0x5ece580;
	Node0x5ece610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%65:\l65:                                               \l  %66 = shl nsw i32 %38, 1\l  br label %69\l}"];
	Node0x5ece610 -> Node0x5ecfe50;
	Node0x5ed06f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%67:\l67:                                               \l  %68 = icmp eq i32 %44, 0\l  br i1 %68, label %69, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5ed06f0:s0 -> Node0x5ecfe50;
	Node0x5ed06f0:s1 -> Node0x5ece580;
	Node0x5ecfe50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%69:\l69:                                               \l  %70 = phi i32 [ %66, %65 ], [ %38, %67 ]\l  store i32 %70, i32 addrspace(1)* %43, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %37, align 4, !tbaa !5\l  br label %71\l}"];
	Node0x5ecfe50 -> Node0x5ece580;
	Node0x5ece580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%71:\l71:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %7, label %72, label %93\l|{<s0>T|<s1>F}}"];
	Node0x5ece580:s0 -> Node0x5ed1e30;
	Node0x5ece580:s1 -> Node0x5ed1e80;
	Node0x5ed1e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%72:\l72:                                               \l  %73 = icmp eq i32 %6, %5\l  %74 = mul nsw i32 %4, %1\l  %75 = add i32 %74, %5\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %76\l  %78 = add i32 %75, 1\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %79\l  br label %81\l}"];
	Node0x5ed1e30 -> Node0x5ed23e0;
	Node0x5ed23e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = phi i32 [ %6, %72 ], [ %91, %90 ]\l  br i1 %73, label %90, label %83\l|{<s0>T|<s1>F}}"];
	Node0x5ed23e0:s0 -> Node0x5ed24a0;
	Node0x5ed23e0:s1 -> Node0x5ed25e0;
	Node0x5ed25e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%83:\l83:                                               \l  %84 = load i32, i32 addrspace(1)* %77, align 4, !tbaa !5\l  %85 = icmp eq i32 %84, 0\l  br i1 %85, label %90, label %86\l|{<s0>T|<s1>F}}"];
	Node0x5ed25e0:s0 -> Node0x5ed24a0;
	Node0x5ed25e0:s1 -> Node0x5ed2820;
	Node0x5ed2820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%86:\l86:                                               \l  %87 = load i32, i32 addrspace(1)* %80, align 4, !tbaa !5\l  %88 = icmp eq i32 %87, 0\l  br i1 %88, label %89, label %90\l|{<s0>T|<s1>F}}"];
	Node0x5ed2820:s0 -> Node0x5ed2a20;
	Node0x5ed2820:s1 -> Node0x5ed24a0;
	Node0x5ed2a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%89:\l89:                                               \l  store i32 %84, i32 addrspace(1)* %80, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %77, align 4, !tbaa !5\l  br label %90\l}"];
	Node0x5ed2a20 -> Node0x5ed24a0;
	Node0x5ed24a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %91 = add nsw i32 %82, -1\l  %92 = icmp ugt i32 %82, 1\l  br i1 %92, label %81, label %93, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5ed24a0:s0 -> Node0x5ed23e0;
	Node0x5ed24a0:s1 -> Node0x5ed1e80;
	Node0x5ed1e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%93:\l93:                                               \l  ret void\l}"];
}
