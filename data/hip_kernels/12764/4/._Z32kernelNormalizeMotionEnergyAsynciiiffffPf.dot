digraph "CFG for '_Z32kernelNormalizeMotionEnergyAsynciiiffffPf' function" {
	label="CFG for '_Z32kernelNormalizeMotionEnergyAsynciiiffffPf' function";

	Node0x6196890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = add i32 %16, %9\l  %18 = fmul contract float %6, 2.000000e+00\l  %19 = fmul contract float %18, %6\l  %20 = icmp slt i32 %17, %2\l  br i1 %20, label %21, label %228\l|{<s0>T|<s1>F}}"];
	Node0x6196890:s0 -> Node0x6199370;
	Node0x6196890:s1 -> Node0x6199400;
	Node0x6199370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%21:\l21:                                               \l  %22 = mul nsw i32 %1, %0\l  %23 = sdiv i32 %17, %22\l  %24 = freeze i32 %23\l  %25 = freeze i32 %0\l  %26 = sdiv i32 %24, %25\l  %27 = mul i32 %26, %25\l  %28 = sub i32 %24, %27\l  %29 = sext i32 %17 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %7, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %32 = fpext float %19 to double\l  %33 = fmul contract double %32, 0x400921FB54442D18\l  %34 = fdiv contract double 1.000000e+00, %33\l  %35 = add nsw i32 %28, -2\l  %36 = icmp slt i32 %28, 2\l  %37 = icmp sge i32 %35, %0\l  %38 = select i1 %36, i1 true, i1 %37\l  %39 = mul nsw i32 %35, %35\l  %40 = add nsw i32 %28, -1\l  %41 = icmp slt i32 %28, 1\l  %42 = icmp slt i32 %0, 0\l  %43 = or i1 %41, %42\l  %44 = mul nsw i32 %40, %40\l  %45 = or i32 %28, %0\l  %46 = icmp slt i32 %45, 0\l  %47 = mul nsw i32 %28, %28\l  %48 = add nsw i32 %28, 1\l  %49 = icmp slt i32 %28, -1\l  %50 = icmp sge i32 %48, %0\l  %51 = select i1 %49, i1 true, i1 %50\l  %52 = xor i32 %28, -1\l  %53 = mul i32 %48, %52\l  %54 = add nsw i32 %28, 2\l  %55 = icmp slt i32 %28, -2\l  %56 = icmp sge i32 %54, %0\l  %57 = select i1 %55, i1 true, i1 %56\l  %58 = mul nsw i32 %54, %54\l  br label %65\l}"];
	Node0x6199370 -> Node0x619b3e0;
	Node0x619b4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%59:\l59:                                               \l  %60 = fdiv contract float %225, %4\l  %61 = fmul contract float %31, %5\l  %62 = fadd contract float %31, %3\l  %63 = fadd contract float %62, %60\l  %64 = fdiv contract float %61, %63\l  store float %64, float addrspace(1)* %30, align 4, !tbaa !7\l  br label %228\l}"];
	Node0x619b4e0 -> Node0x6199400;
	Node0x619b3e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = phi float [ 0.000000e+00, %21 ], [ %225, %224 ]\l  %67 = phi i32 [ -2, %21 ], [ %226, %224 ]\l  %68 = add nsw i32 %67, %26\l  %69 = icmp sgt i32 %68, -1\l  %70 = icmp slt i32 %68, %1\l  %71 = select i1 %69, i1 %70, i1 false\l  br i1 %71, label %72, label %224\l|{<s0>T|<s1>F}}"];
	Node0x619b3e0:s0 -> Node0x619c670;
	Node0x619b3e0:s1 -> Node0x619a370;
	Node0x619c670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%72:\l72:                                               \l  %73 = icmp eq i32 %67, 0\l  %74 = mul nsw i32 %68, %68\l  %75 = mul nsw i32 %68, %0\l  br i1 %38, label %104, label %76\l|{<s0>T|<s1>F}}"];
	Node0x619c670:s0 -> Node0x619c960;
	Node0x619c670:s1 -> Node0x619c9b0;
	Node0x619c9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%76:\l76:                                               \l  %77 = add nuw nsw i32 %74, %39\l  %78 = sub nsw i32 0, %77\l  %79 = sitofp i32 %78 to float\l  %80 = fdiv contract float %79, %19\l  %81 = fmul float %80, 0x3FF7154760000000\l  %82 = tail call float @llvm.rint.f32(float %81)\l  %83 = fcmp ogt float %80, 0x40562E4300000000\l  %84 = fcmp olt float %80, 0xC059D1DA00000000\l  %85 = fneg float %81\l  %86 = tail call float @llvm.fma.f32(float %80, float 0x3FF7154760000000,\l... float %85)\l  %87 = tail call float @llvm.fma.f32(float %80, float 0x3E54AE0BE0000000,\l... float %86)\l  %88 = fsub float %81, %82\l  %89 = fadd float %87, %88\l  %90 = tail call float @llvm.exp2.f32(float %89)\l  %91 = fptosi float %82 to i32\l  %92 = tail call float @llvm.amdgcn.ldexp.f32(float %90, i32 %91)\l  %93 = select i1 %84, float 0.000000e+00, float %92\l  %94 = select i1 %83, float 0x7FF0000000000000, float %93\l  %95 = fpext float %94 to double\l  %96 = fmul contract double %34, %95\l  %97 = fptrunc double %96 to float\l  %98 = add nsw i32 %35, %75\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %7, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %102 = fmul contract float %101, %97\l  %103 = fadd contract float %66, %102\l  br label %104\l}"];
	Node0x619c9b0 -> Node0x619c960;
	Node0x619c960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%104:\l104:                                              \l  %105 = phi float [ %103, %76 ], [ %66, %72 ]\l  br i1 %43, label %134, label %106\l|{<s0>T|<s1>F}}"];
	Node0x619c960:s0 -> Node0x619e3c0;
	Node0x619c960:s1 -> Node0x619e410;
	Node0x619e410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%106:\l106:                                              \l  %107 = add nuw nsw i32 %74, %44\l  %108 = sub nsw i32 0, %107\l  %109 = sitofp i32 %108 to float\l  %110 = fdiv contract float %109, %19\l  %111 = fmul float %110, 0x3FF7154760000000\l  %112 = tail call float @llvm.rint.f32(float %111)\l  %113 = fcmp ogt float %110, 0x40562E4300000000\l  %114 = fcmp olt float %110, 0xC059D1DA00000000\l  %115 = fneg float %111\l  %116 = tail call float @llvm.fma.f32(float %110, float 0x3FF7154760000000,\l... float %115)\l  %117 = tail call float @llvm.fma.f32(float %110, float 0x3E54AE0BE0000000,\l... float %116)\l  %118 = fsub float %111, %112\l  %119 = fadd float %117, %118\l  %120 = tail call float @llvm.exp2.f32(float %119)\l  %121 = fptosi float %112 to i32\l  %122 = tail call float @llvm.amdgcn.ldexp.f32(float %120, i32 %121)\l  %123 = select i1 %114, float 0.000000e+00, float %122\l  %124 = select i1 %113, float 0x7FF0000000000000, float %123\l  %125 = fpext float %124 to double\l  %126 = fmul contract double %34, %125\l  %127 = fptrunc double %126 to float\l  %128 = add nsw i32 %40, %75\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %7, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %132 = fmul contract float %131, %127\l  %133 = fadd contract float %105, %132\l  br label %134\l}"];
	Node0x619e410 -> Node0x619e3c0;
	Node0x619e3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%134:\l134:                                              \l  %135 = phi float [ %133, %106 ], [ %105, %104 ]\l  %136 = select i1 %46, i1 true, i1 %73\l  br i1 %136, label %165, label %137\l|{<s0>T|<s1>F}}"];
	Node0x619e3c0:s0 -> Node0x619fc30;
	Node0x619e3c0:s1 -> Node0x619fc80;
	Node0x619fc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%137:\l137:                                              \l  %138 = add nuw nsw i32 %74, %47\l  %139 = sub nsw i32 0, %138\l  %140 = sitofp i32 %139 to float\l  %141 = fdiv contract float %140, %19\l  %142 = fmul float %141, 0x3FF7154760000000\l  %143 = tail call float @llvm.rint.f32(float %142)\l  %144 = fcmp ogt float %141, 0x40562E4300000000\l  %145 = fcmp olt float %141, 0xC059D1DA00000000\l  %146 = fneg float %142\l  %147 = tail call float @llvm.fma.f32(float %141, float 0x3FF7154760000000,\l... float %146)\l  %148 = tail call float @llvm.fma.f32(float %141, float 0x3E54AE0BE0000000,\l... float %147)\l  %149 = fsub float %142, %143\l  %150 = fadd float %148, %149\l  %151 = tail call float @llvm.exp2.f32(float %150)\l  %152 = fptosi float %143 to i32\l  %153 = tail call float @llvm.amdgcn.ldexp.f32(float %151, i32 %152)\l  %154 = select i1 %145, float 0.000000e+00, float %153\l  %155 = select i1 %144, float 0x7FF0000000000000, float %154\l  %156 = fpext float %155 to double\l  %157 = fmul contract double %34, %156\l  %158 = fptrunc double %157 to float\l  %159 = add nsw i32 %28, %75\l  %160 = sext i32 %159 to i64\l  %161 = getelementptr inbounds float, float addrspace(1)* %7, i64 %160\l  %162 = load float, float addrspace(1)* %161, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %163 = fmul contract float %162, %158\l  %164 = fadd contract float %135, %163\l  br label %165\l}"];
	Node0x619fc80 -> Node0x619fc30;
	Node0x619fc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%165:\l165:                                              \l  %166 = phi float [ %164, %137 ], [ %135, %134 ]\l  br i1 %51, label %194, label %167\l|{<s0>T|<s1>F}}"];
	Node0x619fc30:s0 -> Node0x61a1000;
	Node0x619fc30:s1 -> Node0x61a1050;
	Node0x61a1050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%167:\l167:                                              \l  %168 = sub i32 %53, %74\l  %169 = sitofp i32 %168 to float\l  %170 = fdiv contract float %169, %19\l  %171 = fmul float %170, 0x3FF7154760000000\l  %172 = tail call float @llvm.rint.f32(float %171)\l  %173 = fcmp ogt float %170, 0x40562E4300000000\l  %174 = fcmp olt float %170, 0xC059D1DA00000000\l  %175 = fneg float %171\l  %176 = tail call float @llvm.fma.f32(float %170, float 0x3FF7154760000000,\l... float %175)\l  %177 = tail call float @llvm.fma.f32(float %170, float 0x3E54AE0BE0000000,\l... float %176)\l  %178 = fsub float %171, %172\l  %179 = fadd float %177, %178\l  %180 = tail call float @llvm.exp2.f32(float %179)\l  %181 = fptosi float %172 to i32\l  %182 = tail call float @llvm.amdgcn.ldexp.f32(float %180, i32 %181)\l  %183 = select i1 %174, float 0.000000e+00, float %182\l  %184 = select i1 %173, float 0x7FF0000000000000, float %183\l  %185 = fpext float %184 to double\l  %186 = fmul contract double %34, %185\l  %187 = fptrunc double %186 to float\l  %188 = add nsw i32 %48, %75\l  %189 = sext i32 %188 to i64\l  %190 = getelementptr inbounds float, float addrspace(1)* %7, i64 %189\l  %191 = load float, float addrspace(1)* %190, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %192 = fmul contract float %191, %187\l  %193 = fadd contract float %166, %192\l  br label %194\l}"];
	Node0x61a1050 -> Node0x61a1000;
	Node0x61a1000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%194:\l194:                                              \l  %195 = phi float [ %193, %167 ], [ %166, %165 ]\l  br i1 %57, label %224, label %196\l|{<s0>T|<s1>F}}"];
	Node0x61a1000:s0 -> Node0x619a370;
	Node0x61a1000:s1 -> Node0x61a2340;
	Node0x61a2340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%196:\l196:                                              \l  %197 = add nuw nsw i32 %74, %58\l  %198 = sub nsw i32 0, %197\l  %199 = sitofp i32 %198 to float\l  %200 = fdiv contract float %199, %19\l  %201 = fmul float %200, 0x3FF7154760000000\l  %202 = tail call float @llvm.rint.f32(float %201)\l  %203 = fcmp ogt float %200, 0x40562E4300000000\l  %204 = fcmp olt float %200, 0xC059D1DA00000000\l  %205 = fneg float %201\l  %206 = tail call float @llvm.fma.f32(float %200, float 0x3FF7154760000000,\l... float %205)\l  %207 = tail call float @llvm.fma.f32(float %200, float 0x3E54AE0BE0000000,\l... float %206)\l  %208 = fsub float %201, %202\l  %209 = fadd float %207, %208\l  %210 = tail call float @llvm.exp2.f32(float %209)\l  %211 = fptosi float %202 to i32\l  %212 = tail call float @llvm.amdgcn.ldexp.f32(float %210, i32 %211)\l  %213 = select i1 %204, float 0.000000e+00, float %212\l  %214 = select i1 %203, float 0x7FF0000000000000, float %213\l  %215 = fpext float %214 to double\l  %216 = fmul contract double %34, %215\l  %217 = fptrunc double %216 to float\l  %218 = add nsw i32 %54, %75\l  %219 = sext i32 %218 to i64\l  %220 = getelementptr inbounds float, float addrspace(1)* %7, i64 %219\l  %221 = load float, float addrspace(1)* %220, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %222 = fmul contract float %221, %217\l  %223 = fadd contract float %195, %222\l  br label %224\l}"];
	Node0x61a2340 -> Node0x619a370;
	Node0x619a370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%224:\l224:                                              \l  %225 = phi float [ %66, %65 ], [ %223, %196 ], [ %195, %194 ]\l  %226 = add nsw i32 %67, 1\l  %227 = icmp eq i32 %226, 3\l  br i1 %227, label %59, label %65, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x619a370:s0 -> Node0x619b4e0;
	Node0x619a370:s1 -> Node0x619b3e0;
	Node0x6199400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%228:\l228:                                              \l  ret void\l}"];
}
