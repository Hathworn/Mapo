digraph "CFG for '_Z10kernel_divPcS_S_iiPiS_' function" {
	label="CFG for '_Z10kernel_divPcS_S_iiPiS_' function";

	Node0x5c4fa60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %10 = icmp eq i32 %9, 0\l  %11 = icmp eq i32 %8, 0\l  %12 = select i1 %10, i1 %11, i1 false\l  br i1 %12, label %13, label %22\l|{<s0>T|<s1>F}}"];
	Node0x5c4fa60:s0 -> Node0x5c517f0;
	Node0x5c4fa60:s1 -> Node0x5c51880;
	Node0x5c517f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%13:\l13:                                               \l  %14 = load i8, i8 addrspace(1)* %1, align 1, !tbaa !5, !amdgpu.noclobber !8\l  %15 = icmp eq i8 %14, 45\l  br i1 %15, label %20, label %16\l|{<s0>T|<s1>F}}"];
	Node0x5c517f0:s0 -> Node0x5c51db0;
	Node0x5c517f0:s1 -> Node0x5c51e40;
	Node0x5c51e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%16:\l16:                                               \l  %17 = load i8, i8 addrspace(1)* %2, align 1, !tbaa !5, !amdgpu.noclobber !8\l  %18 = icmp eq i8 %17, 45\l  %19 = select i1 %18, i8 45, i8 43\l  br label %20\l}"];
	Node0x5c51e40 -> Node0x5c51db0;
	Node0x5c51db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%20:\l20:                                               \l  %21 = phi i8 [ 45, %13 ], [ %19, %16 ]\l  store i8 %21, i8 addrspace(1)* %0, align 1, !tbaa !5\l  br label %65\l}"];
	Node0x5c51db0 -> Node0x5c53000;
	Node0x5c51880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%22:\l22:                                               \l  %23 = sub i32 %4, %3\l  %24 = add nsw i32 %9, -1\l  %25 = add i32 %23, %24\l  %26 = icmp sgt i32 %25, -1\l  br i1 %26, label %27, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5c51880:s0 -> Node0x5c53300;
	Node0x5c51880:s1 -> Node0x5c53350;
	Node0x5c53300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%27:\l27:                                               \l  %28 = zext i32 %25 to i64\l  %29 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %28\l  %30 = load i8, i8 addrspace(1)* %29, align 1, !tbaa !5, !amdgpu.noclobber !8\l  switch i8 %30, label %31 [\l    i8 43, label %38\l    i8 45, label %38\l  ]\l|{<s0>def|<s1>43|<s2>45}}"];
	Node0x5c53300:s0 -> Node0x5c53640;
	Node0x5c53300:s1 -> Node0x5c53350;
	Node0x5c53300:s2 -> Node0x5c53350;
	Node0x5c53640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%31:\l31:                                               \l  %32 = sext i8 %30 to i32\l  %33 = sext i32 %24 to i64\l  %34 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %33\l  %35 = load i8, i8 addrspace(1)* %34, align 1, !tbaa !5, !amdgpu.noclobber !8\l  %36 = sext i8 %35 to i32\l  %37 = sub nsw i32 %36, %32\l  br label %44\l}"];
	Node0x5c53640 -> Node0x5c53be0;
	Node0x5c53350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%38:\l38:                                               \l  %39 = sext i32 %24 to i64\l  %40 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %39\l  %41 = load i8, i8 addrspace(1)* %40, align 1, !tbaa !5, !amdgpu.noclobber !8\l  switch i8 %41, label %42 [\l    i8 43, label %44\l    i8 45, label %44\l  ]\l|{<s0>def|<s1>43|<s2>45}}"];
	Node0x5c53350:s0 -> Node0x5c53e60;
	Node0x5c53350:s1 -> Node0x5c53be0;
	Node0x5c53350:s2 -> Node0x5c53be0;
	Node0x5c53e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%42:\l42:                                               \l  %43 = sext i8 %41 to i32\l  br label %44\l}"];
	Node0x5c53e60 -> Node0x5c53be0;
	Node0x5c53be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%44:\l44:                                               \l  %45 = phi i32 [ %37, %31 ], [ %43, %42 ], [ 0, %38 ], [ 0, %38 ]\l  %46 = icmp slt i32 %45, 0\l  br i1 %46, label %47, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5c53be0:s0 -> Node0x5c54280;
	Node0x5c53be0:s1 -> Node0x5c542d0;
	Node0x5c54280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%47:\l47:                                               \l  %48 = mul nsw i32 %8, %3\l  %49 = add i32 %24, %48\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i8, i8 addrspace(1)* %6, i64 %50\l  %52 = load i8, i8 addrspace(1)* %51, align 1, !tbaa !5, !amdgpu.noclobber !8\l  %53 = add i8 %52, -1\l  store i8 %53, i8 addrspace(1)* %51, align 1, !tbaa !5\l  %54 = add nsw i32 %45, 10\l  br label %55\l}"];
	Node0x5c54280 -> Node0x5c542d0;
	Node0x5c542d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%55:\l55:                                               \l  %56 = phi i32 [ %54, %47 ], [ %45, %44 ]\l  br i1 %11, label %65, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5c542d0:s0 -> Node0x5c53000;
	Node0x5c542d0:s1 -> Node0x5c54970;
	Node0x5c54970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%57:\l57:                                               \l  %58 = mul nsw i32 %8, %3\l  %59 = add nsw i32 %58, %9\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i8, i8 addrspace(1)* %6, i64 %60\l  %62 = load i8, i8 addrspace(1)* %61, align 1, !tbaa !5\l  %63 = trunc i32 %56 to i8\l  %64 = add i8 %62, %63\l  store i8 %64, i8 addrspace(1)* %61, align 1, !tbaa !5\l  br label %65\l}"];
	Node0x5c54970 -> Node0x5c53000;
	Node0x5c53000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  ret void\l}"];
}
