digraph "CFG for '_Z8EFD_2dBMiiiiPfS_ff' function" {
	label="CFG for '_Z8EFD_2dBMiiiiPfS_ff' function";

	Node0x631bd40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = icmp slt i32 %9, %1\l  %12 = icmp slt i32 %10, %0\l  %13 = select i1 %11, i1 %12, i1 false\l  br i1 %13, label %14, label %93\l|{<s0>T|<s1>F}}"];
	Node0x631bd40:s0 -> Node0x631d4d0;
	Node0x631bd40:s1 -> Node0x631d560;
	Node0x631d4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%14:\l14:                                               \l  %15 = add nsw i32 %9, 1\l  %16 = sext i32 %15 to i64\l  %17 = sext i32 %2 to i64\l  %18 = lshr i64 %17, 2\l  %19 = mul i64 %18, %16\l  %20 = zext i32 %10 to i64\l  %21 = add i64 %19, %20\l  %22 = getelementptr inbounds float, float addrspace(1)* %4, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %24 = add nsw i32 %9, -1\l  %25 = sext i32 %24 to i64\l  %26 = mul i64 %18, %25\l  %27 = add i64 %26, %20\l  %28 = getelementptr inbounds float, float addrspace(1)* %4, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %30 = fadd contract float %23, %29\l  %31 = fmul contract float %30, %6\l  %32 = sext i32 %9 to i64\l  %33 = mul i64 %18, %32\l  %34 = add i64 %33, %20\l  %35 = add i64 %34, 1\l  %36 = getelementptr inbounds float, float addrspace(1)* %4, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %38 = add i64 %34, -1\l  %39 = getelementptr inbounds float, float addrspace(1)* %4, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %41 = fadd contract float %37, %40\l  %42 = fmul contract float %41, %7\l  %43 = fadd contract float %31, %42\l  %44 = fpext float %43 to double\l  %45 = fpext float %6 to double\l  %46 = fmul contract double %45, 2.000000e+00\l  %47 = fsub contract double 1.000000e+00, %46\l  %48 = fpext float %7 to double\l  %49 = fmul contract double %48, 2.000000e+00\l  %50 = fsub contract double %47, %49\l  %51 = getelementptr inbounds float, float addrspace(1)* %4, i64 %34\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %53 = fpext float %52 to double\l  %54 = fmul contract double %50, %53\l  %55 = fadd contract double %54, %44\l  %56 = fptrunc double %55 to float\l  %57 = sext i32 %3 to i64\l  %58 = lshr i64 %57, 2\l  %59 = mul i64 %58, %32\l  %60 = add i64 %59, %20\l  %61 = getelementptr inbounds float, float addrspace(1)* %5, i64 %60\l  store float %56, float addrspace(1)* %61, align 4, !tbaa !5\l  %62 = icmp eq i32 %9, 0\l  br i1 %62, label %63, label %68\l|{<s0>T|<s1>F}}"];
	Node0x631d4d0:s0 -> Node0x6320de0;
	Node0x631d4d0:s1 -> Node0x6320e70;
	Node0x6320de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%63:\l63:                                               \l  %64 = mul nuw nsw i64 %58, %16\l  %65 = add nuw nsw i64 %64, %20\l  %66 = getelementptr inbounds float, float addrspace(1)* %5, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !5\l  store float %67, float addrspace(1)* %61, align 4, !tbaa !5\l  br label %68\l}"];
	Node0x6320de0 -> Node0x6320e70;
	Node0x6320e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%68:\l68:                                               \l  %69 = add nsw i32 %1, -1\l  %70 = icmp eq i32 %9, %69\l  br i1 %70, label %71, label %76\l|{<s0>T|<s1>F}}"];
	Node0x6320e70:s0 -> Node0x6321670;
	Node0x6320e70:s1 -> Node0x63216c0;
	Node0x6321670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%71:\l71:                                               \l  %72 = mul i64 %58, %25\l  %73 = add i64 %72, %20\l  %74 = getelementptr inbounds float, float addrspace(1)* %5, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !5\l  store float %75, float addrspace(1)* %61, align 4, !tbaa !5\l  br label %76\l}"];
	Node0x6321670 -> Node0x63216c0;
	Node0x63216c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%76:\l76:                                               \l  %77 = icmp eq i32 %10, 0\l  br i1 %77, label %78, label %84\l|{<s0>T|<s1>F}}"];
	Node0x63216c0:s0 -> Node0x6321b80;
	Node0x63216c0:s1 -> Node0x6321bd0;
	Node0x6321b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%78:\l78:                                               \l  %79 = mul i64 %58, %25\l  %80 = add nuw nsw i64 %20, 1\l  %81 = add i64 %80, %79\l  %82 = getelementptr inbounds float, float addrspace(1)* %5, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !5\l  store float %83, float addrspace(1)* %61, align 4, !tbaa !5\l  br label %84\l}"];
	Node0x6321b80 -> Node0x6321bd0;
	Node0x6321bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%84:\l84:                                               \l  %85 = add nsw i32 %0, -1\l  %86 = icmp eq i32 %9, %85\l  br i1 %86, label %87, label %93\l|{<s0>T|<s1>F}}"];
	Node0x6321bd0:s0 -> Node0x63221b0;
	Node0x6321bd0:s1 -> Node0x631d560;
	Node0x63221b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%87:\l87:                                               \l  %88 = mul i64 %58, %25\l  %89 = add nsw i64 %20, -1\l  %90 = add i64 %89, %88\l  %91 = getelementptr inbounds float, float addrspace(1)* %5, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !5\l  store float %92, float addrspace(1)* %61, align 4, !tbaa !5\l  br label %93\l}"];
	Node0x63221b0 -> Node0x631d560;
	Node0x631d560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%93:\l93:                                               \l  ret void\l}"];
}
