digraph "CFG for '_Z23GeometricBrownianMotionPffffP12hiprandStatej' function" {
	label="CFG for '_Z23GeometricBrownianMotionPffffP12hiprandStatej' function";

	Node0x4951960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = mul i32 %13, %12\l  %15 = add i32 %14, %7\l  %16 = icmp ult i32 %15, %5\l  br i1 %16, label %17, label %135\l|{<s0>T|<s1>F}}"];
	Node0x4951960:s0 -> Node0x4952870;
	Node0x4951960:s1 -> Node0x4953890;
	Node0x4952870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%17:\l17:                                               \l  %18 = sext i32 %15 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %21 = fmul contract float %1, %3\l  %22 = fcmp olt float %3, 0x39F0000000000000\l  %23 = select i1 %22, float 0x41F0000000000000, float 1.000000e+00\l  %24 = fmul float %23, %3\l  %25 = tail call float @llvm.sqrt.f32(float %24)\l  %26 = bitcast float %25 to i32\l  %27 = add nsw i32 %26, -1\l  %28 = bitcast i32 %27 to float\l  %29 = add nsw i32 %26, 1\l  %30 = bitcast i32 %29 to float\l  %31 = tail call i1 @llvm.amdgcn.class.f32(float %24, i32 608)\l  %32 = select i1 %22, float 0x3EF0000000000000, float 1.000000e+00\l  %33 = fneg float %30\l  %34 = tail call float @llvm.fma.f32(float %33, float %25, float %24)\l  %35 = fcmp ogt float %34, 0.000000e+00\l  %36 = fneg float %28\l  %37 = tail call float @llvm.fma.f32(float %36, float %25, float %24)\l  %38 = fcmp ole float %37, 0.000000e+00\l  %39 = select i1 %38, float %28, float %25\l  %40 = select i1 %35, float %30, float %39\l  %41 = fmul float %32, %40\l  %42 = select i1 %31, float %24, float %41\l  %43 = fmul contract float %42, %2\l  %44 = getelementptr %struct.hiprandState, %struct.hiprandState addrspace(1)*\l... %4, i64 %18, i32 0, i32 0, i32 1\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !11\l  %46 = icmp eq i32 %45, 0\l  br i1 %46, label %50, label %47\l|{<s0>T|<s1>F}}"];
	Node0x4952870:s0 -> Node0x4956630;
	Node0x4952870:s1 -> Node0x49566c0;
	Node0x49566c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%47:\l47:                                               \l  store i32 0, i32 addrspace(1)* %44, align 4, !tbaa !11\l  %48 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %4, i64 %18, i32 0, i32 0, i32 3\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  br label %128\l}"];
	Node0x49566c0 -> Node0x4957150;
	Node0x4956630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%50:\l50:                                               \l  %51 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %4, i64 %18, i32 0, i32 0, i32 5, i64 0\l  %52 = load i32, i32 addrspace(1)* %51, align 8, !tbaa !17, !amdgpu.noclobber\l... !6\l  %53 = lshr i32 %52, 2\l  %54 = xor i32 %53, %52\l  %55 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %4, i64 %18, i32 0, i32 0, i32 5, i64 1\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !17, !amdgpu.noclobber\l... !6\l  %57 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %4, i64 %18, i32 0, i32 0, i32 5, i64 2\l  %58 = load i32, i32 addrspace(1)* %57, align 8, !tbaa !17, !amdgpu.noclobber\l... !6\l  %59 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %4, i64 %18, i32 0, i32 0, i32 5, i64 3\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !17, !amdgpu.noclobber\l... !6\l  %61 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %4, i64 %18, i32 0, i32 0, i32 5, i64 4\l  %62 = load i32, i32 addrspace(1)* %61, align 8, !tbaa !17, !amdgpu.noclobber\l... !6\l  %63 = shl i32 %62, 4\l  %64 = shl i32 %54, 1\l  %65 = xor i32 %64, %63\l  %66 = xor i32 %65, %54\l  %67 = xor i32 %66, %62\l  %68 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %4, i64 %18, i32 0, i32 0, i32 0\l  %69 = load i32, i32 addrspace(1)* %68, align 8, !tbaa !18, !amdgpu.noclobber\l... !6\l  %70 = add i32 %69, 362437\l  %71 = add i32 %70, %67\l  %72 = lshr i32 %56, 2\l  %73 = xor i32 %72, %56\l  store i32 %58, i32 addrspace(1)* %51, align 8, !tbaa !17\l  store i32 %60, i32 addrspace(1)* %55, align 4, !tbaa !17\l  store i32 %62, i32 addrspace(1)* %57, align 8, !tbaa !17\l  store i32 %67, i32 addrspace(1)* %59, align 4, !tbaa !17\l  %74 = shl i32 %67, 4\l  %75 = shl i32 %73, 1\l  %76 = xor i32 %75, %74\l  %77 = xor i32 %76, %73\l  %78 = xor i32 %77, %67\l  store i32 %78, i32 addrspace(1)* %61, align 8, !tbaa !17\l  %79 = add i32 %69, 724874\l  store i32 %79, i32 addrspace(1)* %68, align 8, !tbaa !18\l  %80 = add i32 %78, %79\l  %81 = uitofp i32 %71 to float\l  %82 = fmul contract float %81, 0x3DF0000000000000\l  %83 = fadd contract float %82, 0x3DF0000000000000\l  %84 = uitofp i32 %80 to float\l  %85 = fmul contract float %84, 0x3E1921FB60000000\l  %86 = fadd contract float %85, 0x3E1921FB60000000\l  %87 = tail call i1 @llvm.amdgcn.class.f32(float %83, i32 144)\l  %88 = select i1 %87, float 0x41F0000000000000, float 1.000000e+00\l  %89 = fmul float %83, %88\l  %90 = tail call float @llvm.log2.f32(float %89)\l  %91 = fmul float %90, 0x3FE62E42E0000000\l  %92 = tail call i1 @llvm.amdgcn.class.f32(float %90, i32 519)\l  %93 = fneg float %91\l  %94 = tail call float @llvm.fma.f32(float %90, float 0x3FE62E42E0000000,\l... float %93)\l  %95 = tail call float @llvm.fma.f32(float %90, float 0x3E6EFA39E0000000,\l... float %94)\l  %96 = fadd float %91, %95\l  %97 = select i1 %92, float %90, float %96\l  %98 = select i1 %87, float 0x40362E4300000000, float 0.000000e+00\l  %99 = fsub float %97, %98\l  %100 = fmul contract float %99, -2.000000e+00\l  %101 = fcmp olt float %100, 0x39F0000000000000\l  %102 = select i1 %101, float 0x41F0000000000000, float 1.000000e+00\l  %103 = fmul float %100, %102\l  %104 = tail call float @llvm.sqrt.f32(float %103)\l  %105 = bitcast float %104 to i32\l  %106 = add nsw i32 %105, -1\l  %107 = bitcast i32 %106 to float\l  %108 = add nsw i32 %105, 1\l  %109 = bitcast i32 %108 to float\l  %110 = tail call i1 @llvm.amdgcn.class.f32(float %103, i32 608)\l  %111 = select i1 %101, float 0x3EF0000000000000, float 1.000000e+00\l  %112 = fneg float %109\l  %113 = tail call float @llvm.fma.f32(float %112, float %104, float %103)\l  %114 = fcmp ogt float %113, 0.000000e+00\l  %115 = fneg float %107\l  %116 = tail call float @llvm.fma.f32(float %115, float %104, float %103)\l  %117 = fcmp ole float %116, 0.000000e+00\l  %118 = select i1 %117, float %107, float %104\l  %119 = select i1 %114, float %109, float %118\l  %120 = fmul float %111, %119\l  %121 = select i1 %110, float %103, float %120\l  %122 = tail call float @llvm.sin.f32(float %86)\l  %123 = tail call float @llvm.cos.f32(float %86)\l  %124 = fmul contract float %122, %121\l  %125 = fmul contract float %123, %121\l  store i32 1, i32 addrspace(1)* %44, align 4, !tbaa !11\l  %126 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %4, i64 %18, i32 0, i32 0, i32 3\l  store float %125, float addrspace(1)* %126, align 4, !tbaa !16\l  %127 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  br label %128\l}"];
	Node0x4956630 -> Node0x4957150;
	Node0x4957150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%128:\l128:                                              \l  %129 = phi float [ %20, %47 ], [ %127, %50 ]\l  %130 = phi float [ %49, %47 ], [ %124, %50 ]\l  %131 = fmul contract float %43, %130\l  %132 = fadd contract float %21, %131\l  %133 = fmul contract float %20, %132\l  %134 = fadd contract float %129, %133\l  store float %134, float addrspace(1)* %19, align 4, !tbaa !7\l  br label %135\l}"];
	Node0x4957150 -> Node0x4953890;
	Node0x4953890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%135:\l135:                                              \l  ret void\l}"];
}
