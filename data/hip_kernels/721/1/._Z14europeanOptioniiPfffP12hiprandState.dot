digraph "CFG for '_Z14europeanOptioniiPfffP12hiprandState' function" {
	label="CFG for '_Z14europeanOptioniiPfffP12hiprandState' function";

	Node0x46d7720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = mul i32 %13, %12\l  %15 = add i32 %14, %7\l  %16 = icmp slt i32 %15, %0\l  br i1 %16, label %17, label %122\l|{<s0>T|<s1>F}}"];
	Node0x46d7720:s0 -> Node0x46d8680;
	Node0x46d7720:s1 -> Node0x46d96a0;
	Node0x46d8680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%17:\l17:                                               \l  %18 = icmp sgt i32 %1, 0\l  %19 = sext i32 %15 to i64\l  br i1 %18, label %20, label %30\l|{<s0>T|<s1>F}}"];
	Node0x46d8680:s0 -> Node0x46d98e0;
	Node0x46d8680:s1 -> Node0x46d9930;
	Node0x46d98e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%20:\l20:                                               \l  %21 = getelementptr %struct.hiprandState, %struct.hiprandState addrspace(1)*\l... %5, i64 %19, i32 0, i32 0, i32 1\l  %22 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %5, i64 %19, i32 0, i32 0, i32 3\l  %23 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %5, i64 %19, i32 0, i32 0, i32 5, i64 0\l  %24 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %5, i64 %19, i32 0, i32 0, i32 5, i64 1\l  %25 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %5, i64 %19, i32 0, i32 0, i32 5, i64 2\l  %26 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %5, i64 %19, i32 0, i32 0, i32 5, i64 3\l  %27 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %5, i64 %19, i32 0, i32 0, i32 5, i64 4\l  %28 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %5, i64 %19, i32 0, i32 0, i32 0\l  %29 = load i32, i32 addrspace(1)* %21, align 4, !tbaa !7\l  br label %35\l}"];
	Node0x46d98e0 -> Node0x46da640;
	Node0x46d9930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%30:\l30:                                               \l  %31 = phi float [ %3, %17 ], [ %118, %112 ]\l  %32 = fsub contract float %31, %4\l  %33 = getelementptr inbounds float, float addrspace(1)* %2, i64 %19\l  store float %32, float addrspace(1)* %33, align 4, !tbaa !15\l  %34 = fcmp contract olt float %32, 0.000000e+00\l  br i1 %34, label %121, label %122\l|{<s0>T|<s1>F}}"];
	Node0x46d9930:s0 -> Node0x46db790;
	Node0x46d9930:s1 -> Node0x46d96a0;
	Node0x46da640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i32 [ %29, %20 ], [ %113, %112 ]\l  %37 = phi i32 [ 0, %20 ], [ %119, %112 ]\l  %38 = phi float [ %3, %20 ], [ %118, %112 ]\l  %39 = icmp eq i32 %36, 0\l  br i1 %39, label %42, label %40\l|{<s0>T|<s1>F}}"];
	Node0x46da640:s0 -> Node0x46dbbe0;
	Node0x46da640:s1 -> Node0x46dbc70;
	Node0x46dbc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%40:\l40:                                               \l  store i32 0, i32 addrspace(1)* %21, align 4, !tbaa !7\l  %41 = load float, float addrspace(1)* %22, align 4, !tbaa !16\l  br label %112\l}"];
	Node0x46dbc70 -> Node0x46da740;
	Node0x46dbbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%42:\l42:                                               \l  %43 = load i32, i32 addrspace(1)* %23, align 8, !tbaa !17\l  %44 = lshr i32 %43, 2\l  %45 = xor i32 %44, %43\l  %46 = load i32, i32 addrspace(1)* %24, align 4, !tbaa !17\l  %47 = load i32, i32 addrspace(1)* %25, align 8, !tbaa !17\l  %48 = load i32, i32 addrspace(1)* %26, align 4, !tbaa !17\l  %49 = load i32, i32 addrspace(1)* %27, align 8, !tbaa !17\l  %50 = shl i32 %49, 4\l  %51 = shl i32 %45, 1\l  %52 = xor i32 %51, %50\l  %53 = xor i32 %52, %45\l  %54 = xor i32 %53, %49\l  %55 = load i32, i32 addrspace(1)* %28, align 8, !tbaa !18\l  %56 = add i32 %55, 362437\l  %57 = add i32 %56, %54\l  %58 = lshr i32 %46, 2\l  %59 = xor i32 %58, %46\l  store i32 %47, i32 addrspace(1)* %23, align 8, !tbaa !17\l  store i32 %48, i32 addrspace(1)* %24, align 4, !tbaa !17\l  store i32 %49, i32 addrspace(1)* %25, align 8, !tbaa !17\l  store i32 %54, i32 addrspace(1)* %26, align 4, !tbaa !17\l  %60 = shl i32 %54, 4\l  %61 = shl i32 %59, 1\l  %62 = xor i32 %61, %60\l  %63 = xor i32 %62, %59\l  %64 = xor i32 %63, %54\l  store i32 %64, i32 addrspace(1)* %27, align 8, !tbaa !17\l  %65 = add i32 %55, 724874\l  store i32 %65, i32 addrspace(1)* %28, align 8, !tbaa !18\l  %66 = add i32 %64, %65\l  %67 = uitofp i32 %57 to float\l  %68 = fmul contract float %67, 0x3DF0000000000000\l  %69 = fadd contract float %68, 0x3DF0000000000000\l  %70 = uitofp i32 %66 to float\l  %71 = fmul contract float %70, 0x3E1921FB60000000\l  %72 = fadd contract float %71, 0x3E1921FB60000000\l  %73 = tail call i1 @llvm.amdgcn.class.f32(float %69, i32 144)\l  %74 = select i1 %73, float 0x41F0000000000000, float 1.000000e+00\l  %75 = fmul float %69, %74\l  %76 = tail call float @llvm.log2.f32(float %75)\l  %77 = fmul float %76, 0x3FE62E42E0000000\l  %78 = tail call i1 @llvm.amdgcn.class.f32(float %76, i32 519)\l  %79 = fneg float %77\l  %80 = tail call float @llvm.fma.f32(float %76, float 0x3FE62E42E0000000,\l... float %79)\l  %81 = tail call float @llvm.fma.f32(float %76, float 0x3E6EFA39E0000000,\l... float %80)\l  %82 = fadd float %77, %81\l  %83 = select i1 %78, float %76, float %82\l  %84 = select i1 %73, float 0x40362E4300000000, float 0.000000e+00\l  %85 = fsub float %83, %84\l  %86 = fmul contract float %85, -2.000000e+00\l  %87 = fcmp olt float %86, 0x39F0000000000000\l  %88 = select i1 %87, float 0x41F0000000000000, float 1.000000e+00\l  %89 = fmul float %86, %88\l  %90 = tail call float @llvm.sqrt.f32(float %89)\l  %91 = bitcast float %90 to i32\l  %92 = add nsw i32 %91, -1\l  %93 = bitcast i32 %92 to float\l  %94 = add nsw i32 %91, 1\l  %95 = bitcast i32 %94 to float\l  %96 = tail call i1 @llvm.amdgcn.class.f32(float %89, i32 608)\l  %97 = select i1 %87, float 0x3EF0000000000000, float 1.000000e+00\l  %98 = fneg float %95\l  %99 = tail call float @llvm.fma.f32(float %98, float %90, float %89)\l  %100 = fcmp ogt float %99, 0.000000e+00\l  %101 = fneg float %93\l  %102 = tail call float @llvm.fma.f32(float %101, float %90, float %89)\l  %103 = fcmp ole float %102, 0.000000e+00\l  %104 = select i1 %103, float %93, float %90\l  %105 = select i1 %100, float %95, float %104\l  %106 = fmul float %97, %105\l  %107 = select i1 %96, float %89, float %106\l  %108 = tail call float @llvm.sin.f32(float %72)\l  %109 = tail call float @llvm.cos.f32(float %72)\l  %110 = fmul contract float %108, %107\l  %111 = fmul contract float %109, %107\l  store i32 1, i32 addrspace(1)* %21, align 4, !tbaa !7\l  store float %111, float addrspace(1)* %22, align 4, !tbaa !16\l  br label %112\l}"];
	Node0x46dbbe0 -> Node0x46da740;
	Node0x46da740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%112:\l112:                                              \l  %113 = phi i32 [ 0, %40 ], [ 1, %42 ]\l  %114 = phi float [ %41, %40 ], [ %110, %42 ]\l  %115 = fmul contract float %114, 0x3FC99999A0000000\l  %116 = fdiv contract float %115, 0x402FBFBF80000000\l  %117 = fadd contract float %116, 0x3FF000D000000000\l  %118 = fmul contract float %38, %117\l  %119 = add nuw nsw i32 %37, 1\l  %120 = icmp eq i32 %119, %1\l  br i1 %120, label %30, label %35, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x46da740:s0 -> Node0x46d9930;
	Node0x46da740:s1 -> Node0x46da640;
	Node0x46db790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%121:\l121:                                              \l  store float 0.000000e+00, float addrspace(1)* %33, align 4, !tbaa !15\l  br label %122\l}"];
	Node0x46db790 -> Node0x46d96a0;
	Node0x46d96a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%122:\l122:                                              \l  ret void\l}"];
}
