digraph "CFG for '_Z4initjP12hiprandStatej' function" {
	label="CFG for '_Z4initjP12hiprandStatej' function";

	Node0x584ea80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%3:\l  %4 = alloca %\"class.rocrand_device::xorwow_engine\", align 8, addrspace(5)\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %5\l  %14 = icmp ult i32 %13, %2\l  br i1 %14, label %15, label %213\l|{<s0>T|<s1>F}}"];
	Node0x584ea80:s0 -> Node0x5853ce0;
	Node0x584ea80:s1 -> Node0x5853d70;
	Node0x5853ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 %16\l  %18 = bitcast %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4 to i8\l... addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 48, i8 addrspace(5)* %18) #4\l  %19 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 0\l  %20 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 1\l  %21 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 2\l  %22 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 3\l  %23 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 4\l  %24 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 0\l  %25 = xor i32 %0, 746559103\l  %26 = mul i32 %25, 1228688033\l  %27 = add i32 %26, 123456789\l  store i32 %27, i32 addrspace(5)* %19, align 8, !tbaa !7\l  %28 = xor i32 %26, 362436069\l  store i32 %28, i32 addrspace(5)* %20, align 4, !tbaa !7\l  store i32 -1452303100, i32 addrspace(5)* %21, align 8, !tbaa !7\l  store i32 -1894485380, i32 addrspace(5)* %22, align 4, !tbaa !7\l  %29 = add i32 %26, 5783321\l  store i32 %29, i32 addrspace(5)* %23, align 8, !tbaa !7\l  %30 = add i32 %26, -1966976488\l  store i32 %30, i32 addrspace(5)* %24, align 8, !tbaa !11\l  %31 = icmp eq i32 %13, 0\l  br i1 %31, label %209, label %32\l|{<s0>T|<s1>F}}"];
	Node0x5853ce0:s0 -> Node0x5855a40;
	Node0x5853ce0:s1 -> Node0x5855ad0;
	Node0x5855ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%32:\l32:                                               \l  %33 = phi i64 [ %42, %40 ], [ %16, %15 ]\l  %34 = phi i32 [ %41, %40 ], [ 0, %15 ]\l  %35 = trunc i64 %33 to i32\l  %36 = and i32 %35, 3\l  %37 = icmp eq i32 %36, 0\l  br i1 %37, label %40, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5855ad0:s0 -> Node0x5853f20;
	Node0x5855ad0:s1 -> Node0x5856100;
	Node0x5856100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%38:\l38:                                               \l  %39 = zext i32 %34 to i64\l  br label %44\l}"];
	Node0x5856100 -> Node0x58562b0;
	Node0x5853f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%40:\l40:                                               \l  %41 = add nuw nsw i32 %34, 1\l  %42 = lshr i64 %33, 2\l  %43 = icmp ult i64 %33, 4\l  br i1 %43, label %209, label %32, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5853f20:s0 -> Node0x5855a40;
	Node0x5853f20:s1 -> Node0x5855ad0;
	Node0x58562b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%44:\l44:                                               \l  %45 = phi i32 [ 0, %38 ], [ %207, %206 ]\l  br label %46\l}"];
	Node0x58562b0 -> Node0x5856790;
	Node0x5856790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i32 [ 0, %44 ], [ %179, %46 ]\l  %48 = phi i32 [ 0, %44 ], [ %185, %46 ]\l  %49 = phi i32 [ 0, %44 ], [ %191, %46 ]\l  %50 = phi i32 [ 0, %44 ], [ %197, %46 ]\l  %51 = phi i32 [ 0, %44 ], [ %203, %46 ]\l  %52 = phi i32 [ 0, %44 ], [ %204, %46 ]\l  %53 = lshr i32 %52, 5\l  %54 = and i32 %52, 28\l  %55 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %53\l  %56 = load i32, i32 addrspace(5)* %55, align 4, !tbaa !7\l  %57 = shl nuw i32 1, %54\l  %58 = and i32 %57, %56\l  %59 = icmp eq i32 %58, 0\l  %60 = mul nuw nsw i32 %52, 5\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %61\l  %63 = load i32, i32 addrspace(4)* %62, align 16, !tbaa !7\l  %64 = select i1 %59, i32 0, i32 %63\l  %65 = xor i32 %64, %47\l  %66 = or i32 %60, 1\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %67\l  %69 = load i32, i32 addrspace(4)* %68, align 4, !tbaa !7\l  %70 = select i1 %59, i32 0, i32 %69\l  %71 = xor i32 %70, %48\l  %72 = or i32 %60, 2\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %73\l  %75 = load i32, i32 addrspace(4)* %74, align 8, !tbaa !7\l  %76 = select i1 %59, i32 0, i32 %75\l  %77 = xor i32 %76, %49\l  %78 = or i32 %60, 3\l  %79 = zext i32 %78 to i64\l  %80 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %79\l  %81 = load i32, i32 addrspace(4)* %80, align 4, !tbaa !7\l  %82 = select i1 %59, i32 0, i32 %81\l  %83 = xor i32 %82, %50\l  %84 = add nuw nsw i32 %60, 4\l  %85 = zext i32 %84 to i64\l  %86 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %85\l  %87 = load i32, i32 addrspace(4)* %86, align 16, !tbaa !7\l  %88 = select i1 %59, i32 0, i32 %87\l  %89 = xor i32 %88, %51\l  %90 = or i32 %52, 1\l  %91 = lshr i32 %52, 5\l  %92 = and i32 %90, 29\l  %93 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %91\l  %94 = load i32, i32 addrspace(5)* %93, align 4, !tbaa !7\l  %95 = shl nuw i32 1, %92\l  %96 = and i32 %95, %94\l  %97 = icmp eq i32 %96, 0\l  %98 = mul nuw nsw i32 %90, 5\l  %99 = zext i32 %98 to i64\l  %100 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %99\l  %101 = load i32, i32 addrspace(4)* %100, align 4, !tbaa !7\l  %102 = select i1 %97, i32 0, i32 %101\l  %103 = xor i32 %102, %65\l  %104 = add nuw nsw i32 %98, 1\l  %105 = zext i32 %104 to i64\l  %106 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %105\l  %107 = load i32, i32 addrspace(4)* %106, align 8, !tbaa !7\l  %108 = select i1 %97, i32 0, i32 %107\l  %109 = xor i32 %108, %71\l  %110 = or i32 %98, 2\l  %111 = zext i32 %110 to i64\l  %112 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %111\l  %113 = load i32, i32 addrspace(4)* %112, align 4, !tbaa !7\l  %114 = select i1 %97, i32 0, i32 %113\l  %115 = xor i32 %114, %77\l  %116 = add nuw nsw i32 %98, 3\l  %117 = zext i32 %116 to i64\l  %118 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %117\l  %119 = load i32, i32 addrspace(4)* %118, align 16, !tbaa !7\l  %120 = select i1 %97, i32 0, i32 %119\l  %121 = xor i32 %120, %83\l  %122 = add nuw nsw i32 %98, 4\l  %123 = zext i32 %122 to i64\l  %124 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %123\l  %125 = load i32, i32 addrspace(4)* %124, align 4, !tbaa !7\l  %126 = select i1 %97, i32 0, i32 %125\l  %127 = xor i32 %126, %89\l  %128 = or i32 %52, 2\l  %129 = lshr i32 %52, 5\l  %130 = and i32 %128, 30\l  %131 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %129\l  %132 = load i32, i32 addrspace(5)* %131, align 4, !tbaa !7\l  %133 = shl nuw i32 1, %130\l  %134 = and i32 %133, %132\l  %135 = icmp eq i32 %134, 0\l  %136 = mul nuw nsw i32 %128, 5\l  %137 = zext i32 %136 to i64\l  %138 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %137\l  %139 = load i32, i32 addrspace(4)* %138, align 8, !tbaa !7\l  %140 = select i1 %135, i32 0, i32 %139\l  %141 = xor i32 %140, %103\l  %142 = or i32 %136, 1\l  %143 = zext i32 %142 to i64\l  %144 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %143\l  %145 = load i32, i32 addrspace(4)* %144, align 4, !tbaa !7\l  %146 = select i1 %135, i32 0, i32 %145\l  %147 = xor i32 %146, %109\l  %148 = add nuw nsw i32 %136, 2\l  %149 = zext i32 %148 to i64\l  %150 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %149\l  %151 = load i32, i32 addrspace(4)* %150, align 16, !tbaa !7\l  %152 = select i1 %135, i32 0, i32 %151\l  %153 = xor i32 %152, %115\l  %154 = add nuw nsw i32 %136, 3\l  %155 = zext i32 %154 to i64\l  %156 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %155\l  %157 = load i32, i32 addrspace(4)* %156, align 4, !tbaa !7\l  %158 = select i1 %135, i32 0, i32 %157\l  %159 = xor i32 %158, %121\l  %160 = add nuw nsw i32 %136, 4\l  %161 = zext i32 %160 to i64\l  %162 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %161\l  %163 = load i32, i32 addrspace(4)* %162, align 8, !tbaa !7\l  %164 = select i1 %135, i32 0, i32 %163\l  %165 = xor i32 %164, %127\l  %166 = or i32 %52, 3\l  %167 = lshr i32 %52, 5\l  %168 = and i32 %166, 31\l  %169 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %167\l  %170 = load i32, i32 addrspace(5)* %169, align 4, !tbaa !7\l  %171 = shl nuw i32 1, %168\l  %172 = and i32 %171, %170\l  %173 = icmp eq i32 %172, 0\l  %174 = mul nuw nsw i32 %166, 5\l  %175 = zext i32 %174 to i64\l  %176 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %175\l  %177 = load i32, i32 addrspace(4)* %176, align 4, !tbaa !7\l  %178 = select i1 %173, i32 0, i32 %177\l  %179 = xor i32 %178, %141\l  %180 = add nuw nsw i32 %174, 1\l  %181 = zext i32 %180 to i64\l  %182 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %181\l  %183 = load i32, i32 addrspace(4)* %182, align 16, !tbaa !7\l  %184 = select i1 %173, i32 0, i32 %183\l  %185 = xor i32 %184, %147\l  %186 = add nuw nsw i32 %174, 2\l  %187 = zext i32 %186 to i64\l  %188 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %187\l  %189 = load i32, i32 addrspace(4)* %188, align 4, !tbaa !7\l  %190 = select i1 %173, i32 0, i32 %189\l  %191 = xor i32 %190, %153\l  %192 = add nuw nsw i32 %174, 3\l  %193 = zext i32 %192 to i64\l  %194 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %193\l  %195 = load i32, i32 addrspace(4)* %194, align 8, !tbaa !7\l  %196 = select i1 %173, i32 0, i32 %195\l  %197 = xor i32 %196, %159\l  %198 = add nuw nsw i32 %174, 4\l  %199 = zext i32 %198 to i64\l  %200 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %39, i64 %199\l  %201 = load i32, i32 addrspace(4)* %200, align 4, !tbaa !7\l  %202 = select i1 %173, i32 0, i32 %201\l  %203 = xor i32 %202, %165\l  %204 = add nuw nsw i32 %52, 4\l  %205 = icmp eq i32 %204, 160\l  br i1 %205, label %206, label %46, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x5856790:s0 -> Node0x5856650;
	Node0x5856790:s1 -> Node0x5856790;
	Node0x5856650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%206:\l206:                                              \l  store i32 %179, i32 addrspace(5)* %19, align 8, !tbaa !7\l  store i32 %185, i32 addrspace(5)* %20, align 4, !tbaa !7\l  store i32 %191, i32 addrspace(5)* %21, align 8, !tbaa !7\l  store i32 %197, i32 addrspace(5)* %22, align 4, !tbaa !7\l  store i32 %203, i32 addrspace(5)* %23, align 8, !tbaa !7\l  %207 = add nuw nsw i32 %45, 1\l  %208 = icmp eq i32 %207, %36\l  br i1 %208, label %40, label %44, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5856650:s0 -> Node0x5853f20;
	Node0x5856650:s1 -> Node0x58562b0;
	Node0x5855a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%209:\l209:                                              \l  %210 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 1\l  store i32 0, i32 addrspace(5)* %210, align 4, !tbaa !20\l  %211 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 2\l  store i32 0, i32 addrspace(5)* %211, align 8, !tbaa !21\l  %212 = bitcast %struct.hiprandState addrspace(1)* %17 to i8 addrspace(1)*\l  call void @llvm.memcpy.p1i8.p5i8.i64(i8 addrspace(1)* noundef align 8\l... dereferenceable(48) %212, i8 addrspace(5)* noundef align 8\l... dereferenceable(48) %18, i64 48, i1 false), !tbaa.struct !22\l  call void @llvm.lifetime.end.p5i8(i64 48, i8 addrspace(5)* %18) #4\l  br label %213\l}"];
	Node0x5855a40 -> Node0x5853d70;
	Node0x5853d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%213:\l213:                                              \l  ret void\l}"];
}
