digraph "CFG for '_Z15find_boundariesiiPKiPi' function" {
	label="CFG for '_Z15find_boundariesiiPKiPi' function";

	Node0x475f9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = udiv i32 %14, %11\l  %17 = mul i32 %16, %11\l  %18 = icmp ugt i32 %14, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %15\l  %22 = add i32 %21, %6\l  %23 = mul i32 %22, %11\l  %24 = add i32 %23, %5\l  %25 = icmp slt i32 %24, %0\l  br i1 %25, label %26, label %56\l|{<s0>T|<s1>F}}"];
	Node0x475f9c0:s0 -> Node0x47621e0;
	Node0x475f9c0:s1 -> Node0x4762270;
	Node0x47621e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%26:\l26:                                               \l  %27 = icmp sgt i32 %24, 0\l  br i1 %27, label %28, label %33\l|{<s0>T|<s1>F}}"];
	Node0x47621e0:s0 -> Node0x4762440;
	Node0x47621e0:s1 -> Node0x4762490;
	Node0x4762440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%28:\l28:                                               \l  %29 = add nsw i32 %24, -1\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  br label %33\l}"];
	Node0x4762440 -> Node0x4762490;
	Node0x4762490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%33:\l33:                                               \l  %34 = phi i32 [ %32, %28 ], [ 0, %26 ]\l  %35 = sext i32 %24 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %35\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %38 = icmp slt i32 %34, %37\l  br i1 %38, label %39, label %45\l|{<s0>T|<s1>F}}"];
	Node0x4762490:s0 -> Node0x4761d30;
	Node0x4762490:s1 -> Node0x4763ad0;
	Node0x4761d30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i32 [ %43, %39 ], [ %34, %33 ]\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %41\l  store i32 %24, i32 addrspace(1)* %42, align 4, !tbaa !16\l  %43 = add nsw i32 %40, 1\l  %44 = icmp slt i32 %43, %37\l  br i1 %44, label %39, label %45, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4761d30:s0 -> Node0x4761d30;
	Node0x4761d30:s1 -> Node0x4763ad0;
	Node0x4763ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%45:\l45:                                               \l  %46 = add nsw i32 %0, -1\l  %47 = icmp eq i32 %24, %46\l  %48 = icmp slt i32 %37, %1\l  %49 = select i1 %47, i1 %48, i1 false\l  br i1 %49, label %50, label %56\l|{<s0>T|<s1>F}}"];
	Node0x4763ad0:s0 -> Node0x47643c0;
	Node0x4763ad0:s1 -> Node0x4762270;
	Node0x47643c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i32 [ %54, %50 ], [ %37, %45 ]\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %52\l  store i32 %0, i32 addrspace(1)* %53, align 4, !tbaa !16\l  %54 = add nsw i32 %51, 1\l  %55 = icmp slt i32 %54, %1\l  br i1 %55, label %50, label %56, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x47643c0:s0 -> Node0x47643c0;
	Node0x47643c0:s1 -> Node0x4762270;
	Node0x4762270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%56:\l56:                                               \l  ret void\l}"];
}
