digraph "CFG for '_Z14device_len_dotv' function" {
	label="CFG for '_Z14device_len_dotv' function";

	Node0x634c3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%0:\l  %1 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %2 = load i32, i32 addrspace(4)* @d_n_inputs_cols, align 4, !tbaa !5\l  %3 = load i32, i32 addrspace(4)* @d_nhid, align 4, !tbaa !5\l  %4 = mul nsw i32 %3, %2\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !9, !invariant.load !10\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !11\l  %14 = mul i32 %5, %10\l  %15 = add i32 %14, %1\l  %16 = icmp slt i32 %15, %4\l  br i1 %16, label %17, label %41\l|{<s0>T|<s1>F}}"];
	Node0x634c3e0:s0 -> Node0x634da10;
	Node0x634c3e0:s1 -> Node0x634dfc0;
	Node0x634da10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%17:\l17:                                               \l  %18 = load float*, float* addrspace(4)* @d_w_grad, align 8, !tbaa !20\l  %19 = load float*, float* addrspace(4)* @d_prev_grad, align 8, !tbaa !20\l  %20 = udiv i32 %13, %10\l  %21 = mul i32 %20, %10\l  %22 = icmp ugt i32 %13, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %10\l  br label %26\l}"];
	Node0x634da10 -> Node0x634f5e0;
	Node0x634f5e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi float [ 0.000000e+00, %17 ], [ %38, %26 ]\l  %28 = phi float [ 0.000000e+00, %17 ], [ %34, %26 ]\l  %29 = phi i32 [ %15, %17 ], [ %39, %26 ]\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float* %18, i64 %30\l  %32 = load float, float* %31, align 4, !tbaa !22\l  %33 = fmul contract float %32, %32\l  %34 = fadd contract float %28, %33\l  %35 = getelementptr inbounds float, float* %19, i64 %30\l  %36 = load float, float* %35, align 4, !tbaa !22\l  %37 = fmul contract float %32, %36\l  %38 = fadd contract float %27, %37\l  store float %32, float* %35, align 4, !tbaa !22\l  %39 = add i32 %25, %29\l  %40 = icmp slt i32 %39, %4\l  br i1 %40, label %26, label %41, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x634f5e0:s0 -> Node0x634f5e0;
	Node0x634f5e0:s1 -> Node0x634dfc0;
	Node0x634dfc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%41:\l41:                                               \l  %42 = phi float [ 0.000000e+00, %0 ], [ %34, %26 ]\l  %43 = phi float [ 0.000000e+00, %0 ], [ %38, %26 ]\l  %44 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ14device_len_dotvE11partial_len, i32 0, i32 %1\l  store float %42, float addrspace(3)* %44, align 4, !tbaa !22\l  %45 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ14device_len_dotvE11partial_dot, i32 0, i32 %1\l  store float %43, float addrspace(3)* %45, align 4, !tbaa !22\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %46 = icmp ult i16 %9, 2\l  br i1 %46, label %63, label %47\l|{<s0>T|<s1>F}}"];
	Node0x634dfc0:s0 -> Node0x6351b40;
	Node0x634dfc0:s1 -> Node0x6351bd0;
	Node0x6351bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi i32 [ %49, %61 ], [ %10, %41 ]\l  %49 = lshr i32 %48, 1\l  %50 = icmp ult i32 %1, %49\l  br i1 %50, label %51, label %61\l|{<s0>T|<s1>F}}"];
	Node0x6351bd0:s0 -> Node0x6351fa0;
	Node0x6351bd0:s1 -> Node0x6351d10;
	Node0x6351fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%51:\l51:                                               \l  %52 = add nuw nsw i32 %49, %1\l  %53 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ14device_len_dotvE11partial_len, i32 0, i32 %52\l  %54 = load float, float addrspace(3)* %53, align 4, !tbaa !22\l  %55 = load float, float addrspace(3)* %44, align 4, !tbaa !22\l  %56 = fadd contract float %54, %55\l  store float %56, float addrspace(3)* %44, align 4, !tbaa !22\l  %57 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ14device_len_dotvE11partial_dot, i32 0, i32 %52\l  %58 = load float, float addrspace(3)* %57, align 4, !tbaa !22\l  %59 = load float, float addrspace(3)* %45, align 4, !tbaa !22\l  %60 = fadd contract float %58, %59\l  store float %60, float addrspace(3)* %45, align 4, !tbaa !22\l  br label %61\l}"];
	Node0x6351fa0 -> Node0x6351d10;
	Node0x6351d10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %62 = icmp ult i32 %48, 4\l  br i1 %62, label %63, label %47, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x6351d10:s0 -> Node0x6351b40;
	Node0x6351d10:s1 -> Node0x6351bd0;
	Node0x6351b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%63:\l63:                                               \l  %64 = icmp eq i32 %1, 0\l  br i1 %64, label %65, label %73\l|{<s0>T|<s1>F}}"];
	Node0x6351b40:s0 -> Node0x6350710;
	Node0x6351b40:s1 -> Node0x6350760;
	Node0x6350710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%65:\l65:                                               \l  %66 = load float, float addrspace(3)* getelementptr inbounds ([256 x float],\l... [256 x float] addrspace(3)* @_ZZ14device_len_dotvE11partial_len, i32 0, i32\l... 0), align 16, !tbaa !22\l  %67 = load float*, float* addrspace(4)* @d_len_out, align 8, !tbaa !20\l  %68 = zext i32 %5 to i64\l  %69 = getelementptr inbounds float, float* %67, i64 %68\l  store float %66, float* %69, align 4, !tbaa !22\l  %70 = load float, float addrspace(3)* getelementptr inbounds ([256 x float],\l... [256 x float] addrspace(3)* @_ZZ14device_len_dotvE11partial_dot, i32 0, i32\l... 0), align 16, !tbaa !22\l  %71 = load float*, float* addrspace(4)* @d_dot_out, align 8, !tbaa !20\l  %72 = getelementptr inbounds float, float* %71, i64 %68\l  store float %70, float* %72, align 4, !tbaa !22\l  br label %73\l}"];
	Node0x6350710 -> Node0x6350760;
	Node0x6350760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%73:\l73:                                               \l  ret void\l}"];
}
