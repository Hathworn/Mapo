digraph "CFG for '_Z19setDiffVolumeKernelPfPhS0_jj' function" {
	label="CFG for '_Z19setDiffVolumeKernelPfPhS0_jj' function";

	Node0x57b1000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = trunc i32 %6 to i16\l  %8 = urem i16 %7, 10\l  %9 = zext i16 %8 to i32\l  %10 = freeze i16 %7\l  %11 = udiv i16 %10, 100\l  %12 = zext i16 %11 to i32\l  %13 = mul i16 %11, 100\l  %14 = sub i16 %10, %13\l  %15 = trunc i16 %14 to i8\l  %16 = udiv i8 %15, 10\l  %17 = zext i8 %16 to i32\l  %18 = freeze i32 %3\l  %19 = udiv i32 %18, 10\l  %20 = mul i32 %19, 10\l  %21 = sub i32 %18, %20\l  %22 = icmp ne i32 %21, 0\l  %23 = zext i1 %22 to i32\l  %24 = add nuw nsw i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %26 = urem i32 %25, %24\l  %27 = mul i32 %24, %24\l  %28 = freeze i32 %25\l  %29 = freeze i32 %27\l  %30 = udiv i32 %28, %29\l  %31 = mul i32 %30, %29\l  %32 = sub i32 %28, %31\l  %33 = udiv i32 %32, %24\l  %34 = mul i32 %33, 10\l  %35 = add i32 %34, %17\l  %36 = mul i32 %30, 10\l  %37 = add i32 %36, %12\l  %38 = mul nuw i32 %26, 10\l  %39 = add i32 %38, %9\l  %40 = icmp eq i16 %8, 0\l  %41 = icmp ult i32 %35, %3\l  %42 = select i1 %40, i1 %41, i1 false\l  %43 = icmp ult i32 %37, %4\l  %44 = select i1 %42, i1 %43, i1 false\l  br i1 %44, label %45, label %78\l|{<s0>T|<s1>F}}"];
	Node0x57b1000:s0 -> Node0x57b3c80;
	Node0x57b1000:s1 -> Node0x57b3d10;
	Node0x57b3c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%45:\l45:                                               \l  %46 = mul i32 %37, %3\l  %47 = add i32 %35, %46\l  %48 = shl i32 %47, 2\l  %49 = mul nuw nsw i32 %12, 10\l  %50 = add nuw nsw i32 %49, %17\l  %51 = shl nuw nsw i32 %50, 2\l  %52 = zext i32 %48 to i64\l  %53 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %52\l  %54 = load i8, i8 addrspace(1)* %53, align 1, !tbaa !5, !amdgpu.noclobber !8\l  %55 = uitofp i8 %54 to float\l  %56 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p1_section, i32 0, i32 %51\l  store float %55, float addrspace(3)* %56, align 16, !tbaa !9\l  %57 = add nuw nsw i32 %48, 1\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %58\l  %60 = load i8, i8 addrspace(1)* %59, align 1, !tbaa !5, !amdgpu.noclobber !8\l  %61 = uitofp i8 %60 to float\l  %62 = add nuw nsw i32 %51, 1\l  %63 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p1_section, i32 0, i32 %62\l  store float %61, float addrspace(3)* %63, align 4, !tbaa !9\l  %64 = add nuw nsw i32 %48, 2\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %65\l  %67 = load i8, i8 addrspace(1)* %66, align 1, !tbaa !5, !amdgpu.noclobber !8\l  %68 = uitofp i8 %67 to float\l  %69 = add nuw nsw i32 %51, 2\l  %70 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p1_section, i32 0, i32 %69\l  store float %68, float addrspace(3)* %70, align 8, !tbaa !9\l  %71 = add nuw nsw i32 %48, 3\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %72\l  %74 = load i8, i8 addrspace(1)* %73, align 1, !tbaa !5, !amdgpu.noclobber !8\l  %75 = uitofp i8 %74 to float\l  %76 = add nuw nsw i32 %51, 3\l  %77 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p1_section, i32 0, i32 %76\l  store float %75, float addrspace(3)* %77, align 4, !tbaa !9\l  br label %78\l}"];
	Node0x57b3c80 -> Node0x57b3d10;
	Node0x57b3d10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%78:\l78:                                               \l  %79 = icmp ult i16 %14, 10\l  %80 = icmp ult i32 %39, %3\l  %81 = select i1 %79, i1 %80, i1 false\l  %82 = select i1 %81, i1 %43, i1 false\l  br i1 %82, label %83, label %116\l|{<s0>T|<s1>F}}"];
	Node0x57b3d10:s0 -> Node0x57b5910;
	Node0x57b3d10:s1 -> Node0x57b6f70;
	Node0x57b5910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%83:\l83:                                               \l  %84 = mul i32 %37, %3\l  %85 = add i32 %84, %39\l  %86 = shl i32 %85, 2\l  %87 = mul nuw nsw i32 %12, 10\l  %88 = add nuw nsw i32 %87, %9\l  %89 = shl nuw nsw i32 %88, 2\l  %90 = zext i32 %86 to i64\l  %91 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %90\l  %92 = load i8, i8 addrspace(1)* %91, align 1, !tbaa !5, !amdgpu.noclobber !8\l  %93 = uitofp i8 %92 to float\l  %94 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p2_section, i32 0, i32 %89\l  store float %93, float addrspace(3)* %94, align 16, !tbaa !9\l  %95 = add nuw nsw i32 %86, 1\l  %96 = zext i32 %95 to i64\l  %97 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %96\l  %98 = load i8, i8 addrspace(1)* %97, align 1, !tbaa !5, !amdgpu.noclobber !8\l  %99 = uitofp i8 %98 to float\l  %100 = add nuw nsw i32 %89, 1\l  %101 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p2_section, i32 0, i32 %100\l  store float %99, float addrspace(3)* %101, align 4, !tbaa !9\l  %102 = add nuw nsw i32 %86, 2\l  %103 = zext i32 %102 to i64\l  %104 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %103\l  %105 = load i8, i8 addrspace(1)* %104, align 1, !tbaa !5, !amdgpu.noclobber\l... !8\l  %106 = uitofp i8 %105 to float\l  %107 = add nuw nsw i32 %89, 2\l  %108 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p2_section, i32 0, i32 %107\l  store float %106, float addrspace(3)* %108, align 8, !tbaa !9\l  %109 = add nuw nsw i32 %86, 3\l  %110 = zext i32 %109 to i64\l  %111 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %110\l  %112 = load i8, i8 addrspace(1)* %111, align 1, !tbaa !5, !amdgpu.noclobber\l... !8\l  %113 = uitofp i8 %112 to float\l  %114 = add nuw nsw i32 %89, 3\l  %115 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p2_section, i32 0, i32 %114\l  store float %113, float addrspace(3)* %115, align 4, !tbaa !9\l  br label %116\l}"];
	Node0x57b5910 -> Node0x57b6f70;
	Node0x57b6f70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%116:\l116:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %117 = select i1 %41, i1 %43, i1 false\l  %118 = select i1 %117, i1 %80, i1 false\l  br i1 %118, label %119, label %789\l|{<s0>T|<s1>F}}"];
	Node0x57b6f70:s0 -> Node0x57b8990;
	Node0x57b6f70:s1 -> Node0x57b8a20;
	Node0x57b8990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%119:\l119:                                              \l  %120 = mul nuw nsw i32 %12, 10\l  %121 = add nuw nsw i32 %120, %17\l  %122 = shl nuw nsw i32 %121, 2\l  %123 = add nuw nsw i32 %120, %9\l  %124 = shl nuw nsw i32 %123, 2\l  %125 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p1_section, i32 0, i32 %122\l  %126 = load float, float addrspace(3)* %125, align 16, !tbaa !9\l  %127 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p2_section, i32 0, i32 %124\l  %128 = load float, float addrspace(3)* %127, align 16, !tbaa !9\l  %129 = fsub contract float %126, %128\l  %130 = tail call float @llvm.fabs.f32(float %129)\l  %131 = tail call float @llvm.amdgcn.frexp.mant.f32(float %130)\l  %132 = fcmp olt float %131, 0x3FE5555560000000\l  %133 = zext i1 %132 to i32\l  %134 = tail call float @llvm.amdgcn.ldexp.f32(float %131, i32 %133)\l  %135 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %130)\l  %136 = sub nsw i32 %135, %133\l  %137 = fadd float %134, -1.000000e+00\l  %138 = fadd float %134, 1.000000e+00\l  %139 = fadd float %138, -1.000000e+00\l  %140 = fsub float %134, %139\l  %141 = tail call float @llvm.amdgcn.rcp.f32(float %138)\l  %142 = fmul float %137, %141\l  %143 = fmul float %138, %142\l  %144 = fneg float %143\l  %145 = tail call float @llvm.fma.f32(float %142, float %138, float %144)\l  %146 = tail call float @llvm.fma.f32(float %142, float %140, float %145)\l  %147 = fadd float %143, %146\l  %148 = fsub float %147, %143\l  %149 = fsub float %146, %148\l  %150 = fsub float %137, %147\l  %151 = fsub float %137, %150\l  %152 = fsub float %151, %147\l  %153 = fsub float %152, %149\l  %154 = fadd float %150, %153\l  %155 = fmul float %141, %154\l  %156 = fadd float %142, %155\l  %157 = fsub float %156, %142\l  %158 = fsub float %155, %157\l  %159 = fmul float %156, %156\l  %160 = fneg float %159\l  %161 = tail call float @llvm.fma.f32(float %156, float %156, float %160)\l  %162 = fmul float %158, 2.000000e+00\l  %163 = tail call float @llvm.fma.f32(float %156, float %162, float %161)\l  %164 = fadd float %159, %163\l  %165 = fsub float %164, %159\l  %166 = fsub float %163, %165\l  %167 = tail call float @llvm.fmuladd.f32(float %164, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %168 = tail call float @llvm.fmuladd.f32(float %164, float %167, float\l... 0x3FD999BDE0000000)\l  %169 = sitofp i32 %136 to float\l  %170 = fmul float %169, 0x3FE62E4300000000\l  %171 = fneg float %170\l  %172 = tail call float @llvm.fma.f32(float %169, float 0x3FE62E4300000000,\l... float %171)\l  %173 = tail call float @llvm.fma.f32(float %169, float 0xBE205C6100000000,\l... float %172)\l  %174 = fadd float %170, %173\l  %175 = fsub float %174, %170\l  %176 = fsub float %173, %175\l  %177 = tail call float @llvm.amdgcn.ldexp.f32(float %156, i32 1)\l  %178 = fmul float %156, %164\l  %179 = fneg float %178\l  %180 = tail call float @llvm.fma.f32(float %164, float %156, float %179)\l  %181 = tail call float @llvm.fma.f32(float %164, float %158, float %180)\l  %182 = tail call float @llvm.fma.f32(float %166, float %156, float %181)\l  %183 = fadd float %178, %182\l  %184 = fsub float %183, %178\l  %185 = fsub float %182, %184\l  %186 = fmul float %164, %168\l  %187 = fneg float %186\l  %188 = tail call float @llvm.fma.f32(float %164, float %168, float %187)\l  %189 = tail call float @llvm.fma.f32(float %166, float %168, float %188)\l  %190 = fadd float %186, %189\l  %191 = fsub float %190, %186\l  %192 = fsub float %189, %191\l  %193 = fadd float %190, 0x3FE5555540000000\l  %194 = fadd float %193, 0xBFE5555540000000\l  %195 = fsub float %190, %194\l  %196 = fadd float %192, 0x3E2E720200000000\l  %197 = fadd float %196, %195\l  %198 = fadd float %193, %197\l  %199 = fsub float %198, %193\l  %200 = fsub float %197, %199\l  %201 = fmul float %183, %198\l  %202 = fneg float %201\l  %203 = tail call float @llvm.fma.f32(float %183, float %198, float %202)\l  %204 = tail call float @llvm.fma.f32(float %183, float %200, float %203)\l  %205 = tail call float @llvm.fma.f32(float %185, float %198, float %204)\l  %206 = tail call float @llvm.amdgcn.ldexp.f32(float %158, i32 1)\l  %207 = fadd float %201, %205\l  %208 = fsub float %207, %201\l  %209 = fsub float %205, %208\l  %210 = fadd float %177, %207\l  %211 = fsub float %210, %177\l  %212 = fsub float %207, %211\l  %213 = fadd float %206, %209\l  %214 = fadd float %213, %212\l  %215 = fadd float %210, %214\l  %216 = fsub float %215, %210\l  %217 = fsub float %214, %216\l  %218 = fadd float %174, %215\l  %219 = fsub float %218, %174\l  %220 = fsub float %218, %219\l  %221 = fsub float %174, %220\l  %222 = fsub float %215, %219\l  %223 = fadd float %222, %221\l  %224 = fadd float %176, %217\l  %225 = fsub float %224, %176\l  %226 = fsub float %224, %225\l  %227 = fsub float %176, %226\l  %228 = fsub float %217, %225\l  %229 = fadd float %228, %227\l  %230 = fadd float %224, %223\l  %231 = fadd float %218, %230\l  %232 = fsub float %231, %218\l  %233 = fsub float %230, %232\l  %234 = fadd float %229, %233\l  %235 = fadd float %231, %234\l  %236 = fsub float %235, %231\l  %237 = fsub float %234, %236\l  %238 = fmul float %235, 2.000000e+00\l  %239 = fneg float %238\l  %240 = tail call float @llvm.fma.f32(float %235, float 2.000000e+00, float\l... %239)\l  %241 = tail call float @llvm.fma.f32(float %237, float 2.000000e+00, float\l... %240)\l  %242 = fadd float %238, %241\l  %243 = fsub float %242, %238\l  %244 = fsub float %241, %243\l  %245 = tail call float @llvm.fabs.f32(float %238) #4\l  %246 = fcmp oeq float %245, 0x7FF0000000000000\l  %247 = select i1 %246, float %238, float %242\l  %248 = tail call float @llvm.fabs.f32(float %247) #4\l  %249 = fcmp oeq float %248, 0x7FF0000000000000\l  %250 = select i1 %249, float 0.000000e+00, float %244\l  %251 = fcmp oeq float %247, 0x40562E4300000000\l  %252 = select i1 %251, float 0x3EE0000000000000, float 0.000000e+00\l  %253 = fsub float %247, %252\l  %254 = fadd float %252, %250\l  %255 = fmul float %253, 0x3FF7154760000000\l  %256 = tail call float @llvm.rint.f32(float %255)\l  %257 = fcmp ogt float %253, 0x40562E4300000000\l  %258 = fcmp olt float %253, 0xC059D1DA00000000\l  %259 = fneg float %255\l  %260 = tail call float @llvm.fma.f32(float %253, float 0x3FF7154760000000,\l... float %259)\l  %261 = tail call float @llvm.fma.f32(float %253, float 0x3E54AE0BE0000000,\l... float %260)\l  %262 = fsub float %255, %256\l  %263 = fadd float %261, %262\l  %264 = tail call float @llvm.exp2.f32(float %263)\l  %265 = fptosi float %256 to i32\l  %266 = tail call float @llvm.amdgcn.ldexp.f32(float %264, i32 %265)\l  %267 = select i1 %258, float 0.000000e+00, float %266\l  %268 = select i1 %257, float 0x7FF0000000000000, float %267\l  %269 = tail call float @llvm.fma.f32(float %268, float %254, float %268)\l  %270 = tail call float @llvm.fabs.f32(float %268) #4\l  %271 = fcmp oeq float %270, 0x7FF0000000000000\l  %272 = select i1 %271, float %268, float %269\l  %273 = tail call float @llvm.fabs.f32(float %272)\l  %274 = fcmp oeq float %130, 0x7FF0000000000000\l  %275 = fcmp oeq float %129, 0.000000e+00\l  %276 = select i1 %274, float 0x7FF0000000000000, float %273\l  %277 = select i1 %275, float 0.000000e+00, float %276\l  %278 = fcmp uno float %129, 0.000000e+00\l  %279 = select i1 %278, float 0x7FF8000000000000, float %277\l  %280 = fcmp oeq float %129, 1.000000e+00\l  %281 = select i1 %280, float 1.000000e+00, float %279\l  %282 = add nuw nsw i32 %122, 1\l  %283 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p1_section, i32 0, i32 %282\l  %284 = load float, float addrspace(3)* %283, align 4, !tbaa !9\l  %285 = add nuw nsw i32 %124, 1\l  %286 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p2_section, i32 0, i32 %285\l  %287 = load float, float addrspace(3)* %286, align 4, !tbaa !9\l  %288 = fsub contract float %284, %287\l  %289 = tail call float @llvm.fabs.f32(float %288)\l  %290 = tail call float @llvm.amdgcn.frexp.mant.f32(float %289)\l  %291 = fcmp olt float %290, 0x3FE5555560000000\l  %292 = zext i1 %291 to i32\l  %293 = tail call float @llvm.amdgcn.ldexp.f32(float %290, i32 %292)\l  %294 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %289)\l  %295 = sub nsw i32 %294, %292\l  %296 = fadd float %293, -1.000000e+00\l  %297 = fadd float %293, 1.000000e+00\l  %298 = fadd float %297, -1.000000e+00\l  %299 = fsub float %293, %298\l  %300 = tail call float @llvm.amdgcn.rcp.f32(float %297)\l  %301 = fmul float %296, %300\l  %302 = fmul float %297, %301\l  %303 = fneg float %302\l  %304 = tail call float @llvm.fma.f32(float %301, float %297, float %303)\l  %305 = tail call float @llvm.fma.f32(float %301, float %299, float %304)\l  %306 = fadd float %302, %305\l  %307 = fsub float %306, %302\l  %308 = fsub float %305, %307\l  %309 = fsub float %296, %306\l  %310 = fsub float %296, %309\l  %311 = fsub float %310, %306\l  %312 = fsub float %311, %308\l  %313 = fadd float %309, %312\l  %314 = fmul float %300, %313\l  %315 = fadd float %301, %314\l  %316 = fsub float %315, %301\l  %317 = fsub float %314, %316\l  %318 = fmul float %315, %315\l  %319 = fneg float %318\l  %320 = tail call float @llvm.fma.f32(float %315, float %315, float %319)\l  %321 = fmul float %317, 2.000000e+00\l  %322 = tail call float @llvm.fma.f32(float %315, float %321, float %320)\l  %323 = fadd float %318, %322\l  %324 = fsub float %323, %318\l  %325 = fsub float %322, %324\l  %326 = tail call float @llvm.fmuladd.f32(float %323, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %327 = tail call float @llvm.fmuladd.f32(float %323, float %326, float\l... 0x3FD999BDE0000000)\l  %328 = sitofp i32 %295 to float\l  %329 = fmul float %328, 0x3FE62E4300000000\l  %330 = fneg float %329\l  %331 = tail call float @llvm.fma.f32(float %328, float 0x3FE62E4300000000,\l... float %330)\l  %332 = tail call float @llvm.fma.f32(float %328, float 0xBE205C6100000000,\l... float %331)\l  %333 = fadd float %329, %332\l  %334 = fsub float %333, %329\l  %335 = fsub float %332, %334\l  %336 = tail call float @llvm.amdgcn.ldexp.f32(float %315, i32 1)\l  %337 = fmul float %315, %323\l  %338 = fneg float %337\l  %339 = tail call float @llvm.fma.f32(float %323, float %315, float %338)\l  %340 = tail call float @llvm.fma.f32(float %323, float %317, float %339)\l  %341 = tail call float @llvm.fma.f32(float %325, float %315, float %340)\l  %342 = fadd float %337, %341\l  %343 = fsub float %342, %337\l  %344 = fsub float %341, %343\l  %345 = fmul float %323, %327\l  %346 = fneg float %345\l  %347 = tail call float @llvm.fma.f32(float %323, float %327, float %346)\l  %348 = tail call float @llvm.fma.f32(float %325, float %327, float %347)\l  %349 = fadd float %345, %348\l  %350 = fsub float %349, %345\l  %351 = fsub float %348, %350\l  %352 = fadd float %349, 0x3FE5555540000000\l  %353 = fadd float %352, 0xBFE5555540000000\l  %354 = fsub float %349, %353\l  %355 = fadd float %351, 0x3E2E720200000000\l  %356 = fadd float %355, %354\l  %357 = fadd float %352, %356\l  %358 = fsub float %357, %352\l  %359 = fsub float %356, %358\l  %360 = fmul float %342, %357\l  %361 = fneg float %360\l  %362 = tail call float @llvm.fma.f32(float %342, float %357, float %361)\l  %363 = tail call float @llvm.fma.f32(float %342, float %359, float %362)\l  %364 = tail call float @llvm.fma.f32(float %344, float %357, float %363)\l  %365 = tail call float @llvm.amdgcn.ldexp.f32(float %317, i32 1)\l  %366 = fadd float %360, %364\l  %367 = fsub float %366, %360\l  %368 = fsub float %364, %367\l  %369 = fadd float %336, %366\l  %370 = fsub float %369, %336\l  %371 = fsub float %366, %370\l  %372 = fadd float %365, %368\l  %373 = fadd float %372, %371\l  %374 = fadd float %369, %373\l  %375 = fsub float %374, %369\l  %376 = fsub float %373, %375\l  %377 = fadd float %333, %374\l  %378 = fsub float %377, %333\l  %379 = fsub float %377, %378\l  %380 = fsub float %333, %379\l  %381 = fsub float %374, %378\l  %382 = fadd float %381, %380\l  %383 = fadd float %335, %376\l  %384 = fsub float %383, %335\l  %385 = fsub float %383, %384\l  %386 = fsub float %335, %385\l  %387 = fsub float %376, %384\l  %388 = fadd float %387, %386\l  %389 = fadd float %383, %382\l  %390 = fadd float %377, %389\l  %391 = fsub float %390, %377\l  %392 = fsub float %389, %391\l  %393 = fadd float %388, %392\l  %394 = fadd float %390, %393\l  %395 = fsub float %394, %390\l  %396 = fsub float %393, %395\l  %397 = fmul float %394, 2.000000e+00\l  %398 = fneg float %397\l  %399 = tail call float @llvm.fma.f32(float %394, float 2.000000e+00, float\l... %398)\l  %400 = tail call float @llvm.fma.f32(float %396, float 2.000000e+00, float\l... %399)\l  %401 = fadd float %397, %400\l  %402 = fsub float %401, %397\l  %403 = fsub float %400, %402\l  %404 = tail call float @llvm.fabs.f32(float %397) #4\l  %405 = fcmp oeq float %404, 0x7FF0000000000000\l  %406 = select i1 %405, float %397, float %401\l  %407 = tail call float @llvm.fabs.f32(float %406) #4\l  %408 = fcmp oeq float %407, 0x7FF0000000000000\l  %409 = select i1 %408, float 0.000000e+00, float %403\l  %410 = fcmp oeq float %406, 0x40562E4300000000\l  %411 = select i1 %410, float 0x3EE0000000000000, float 0.000000e+00\l  %412 = fsub float %406, %411\l  %413 = fadd float %411, %409\l  %414 = fmul float %412, 0x3FF7154760000000\l  %415 = tail call float @llvm.rint.f32(float %414)\l  %416 = fcmp ogt float %412, 0x40562E4300000000\l  %417 = fcmp olt float %412, 0xC059D1DA00000000\l  %418 = fneg float %414\l  %419 = tail call float @llvm.fma.f32(float %412, float 0x3FF7154760000000,\l... float %418)\l  %420 = tail call float @llvm.fma.f32(float %412, float 0x3E54AE0BE0000000,\l... float %419)\l  %421 = fsub float %414, %415\l  %422 = fadd float %420, %421\l  %423 = tail call float @llvm.exp2.f32(float %422)\l  %424 = fptosi float %415 to i32\l  %425 = tail call float @llvm.amdgcn.ldexp.f32(float %423, i32 %424)\l  %426 = select i1 %417, float 0.000000e+00, float %425\l  %427 = select i1 %416, float 0x7FF0000000000000, float %426\l  %428 = tail call float @llvm.fma.f32(float %427, float %413, float %427)\l  %429 = tail call float @llvm.fabs.f32(float %427) #4\l  %430 = fcmp oeq float %429, 0x7FF0000000000000\l  %431 = select i1 %430, float %427, float %428\l  %432 = tail call float @llvm.fabs.f32(float %431)\l  %433 = fcmp oeq float %289, 0x7FF0000000000000\l  %434 = fcmp oeq float %288, 0.000000e+00\l  %435 = select i1 %433, float 0x7FF0000000000000, float %432\l  %436 = select i1 %434, float 0.000000e+00, float %435\l  %437 = fcmp uno float %288, 0.000000e+00\l  %438 = select i1 %437, float 0x7FF8000000000000, float %436\l  %439 = fcmp oeq float %288, 1.000000e+00\l  %440 = select i1 %439, float 1.000000e+00, float %438\l  %441 = fadd contract float %281, %440\l  %442 = add nuw nsw i32 %122, 2\l  %443 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p1_section, i32 0, i32 %442\l  %444 = load float, float addrspace(3)* %443, align 8, !tbaa !9\l  %445 = add nuw nsw i32 %124, 2\l  %446 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p2_section, i32 0, i32 %445\l  %447 = load float, float addrspace(3)* %446, align 8, !tbaa !9\l  %448 = fsub contract float %444, %447\l  %449 = tail call float @llvm.fabs.f32(float %448)\l  %450 = tail call float @llvm.amdgcn.frexp.mant.f32(float %449)\l  %451 = fcmp olt float %450, 0x3FE5555560000000\l  %452 = zext i1 %451 to i32\l  %453 = tail call float @llvm.amdgcn.ldexp.f32(float %450, i32 %452)\l  %454 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %449)\l  %455 = sub nsw i32 %454, %452\l  %456 = fadd float %453, -1.000000e+00\l  %457 = fadd float %453, 1.000000e+00\l  %458 = fadd float %457, -1.000000e+00\l  %459 = fsub float %453, %458\l  %460 = tail call float @llvm.amdgcn.rcp.f32(float %457)\l  %461 = fmul float %456, %460\l  %462 = fmul float %457, %461\l  %463 = fneg float %462\l  %464 = tail call float @llvm.fma.f32(float %461, float %457, float %463)\l  %465 = tail call float @llvm.fma.f32(float %461, float %459, float %464)\l  %466 = fadd float %462, %465\l  %467 = fsub float %466, %462\l  %468 = fsub float %465, %467\l  %469 = fsub float %456, %466\l  %470 = fsub float %456, %469\l  %471 = fsub float %470, %466\l  %472 = fsub float %471, %468\l  %473 = fadd float %469, %472\l  %474 = fmul float %460, %473\l  %475 = fadd float %461, %474\l  %476 = fsub float %475, %461\l  %477 = fsub float %474, %476\l  %478 = fmul float %475, %475\l  %479 = fneg float %478\l  %480 = tail call float @llvm.fma.f32(float %475, float %475, float %479)\l  %481 = fmul float %477, 2.000000e+00\l  %482 = tail call float @llvm.fma.f32(float %475, float %481, float %480)\l  %483 = fadd float %478, %482\l  %484 = fsub float %483, %478\l  %485 = fsub float %482, %484\l  %486 = tail call float @llvm.fmuladd.f32(float %483, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %487 = tail call float @llvm.fmuladd.f32(float %483, float %486, float\l... 0x3FD999BDE0000000)\l  %488 = sitofp i32 %455 to float\l  %489 = fmul float %488, 0x3FE62E4300000000\l  %490 = fneg float %489\l  %491 = tail call float @llvm.fma.f32(float %488, float 0x3FE62E4300000000,\l... float %490)\l  %492 = tail call float @llvm.fma.f32(float %488, float 0xBE205C6100000000,\l... float %491)\l  %493 = fadd float %489, %492\l  %494 = fsub float %493, %489\l  %495 = fsub float %492, %494\l  %496 = tail call float @llvm.amdgcn.ldexp.f32(float %475, i32 1)\l  %497 = fmul float %475, %483\l  %498 = fneg float %497\l  %499 = tail call float @llvm.fma.f32(float %483, float %475, float %498)\l  %500 = tail call float @llvm.fma.f32(float %483, float %477, float %499)\l  %501 = tail call float @llvm.fma.f32(float %485, float %475, float %500)\l  %502 = fadd float %497, %501\l  %503 = fsub float %502, %497\l  %504 = fsub float %501, %503\l  %505 = fmul float %483, %487\l  %506 = fneg float %505\l  %507 = tail call float @llvm.fma.f32(float %483, float %487, float %506)\l  %508 = tail call float @llvm.fma.f32(float %485, float %487, float %507)\l  %509 = fadd float %505, %508\l  %510 = fsub float %509, %505\l  %511 = fsub float %508, %510\l  %512 = fadd float %509, 0x3FE5555540000000\l  %513 = fadd float %512, 0xBFE5555540000000\l  %514 = fsub float %509, %513\l  %515 = fadd float %511, 0x3E2E720200000000\l  %516 = fadd float %515, %514\l  %517 = fadd float %512, %516\l  %518 = fsub float %517, %512\l  %519 = fsub float %516, %518\l  %520 = fmul float %502, %517\l  %521 = fneg float %520\l  %522 = tail call float @llvm.fma.f32(float %502, float %517, float %521)\l  %523 = tail call float @llvm.fma.f32(float %502, float %519, float %522)\l  %524 = tail call float @llvm.fma.f32(float %504, float %517, float %523)\l  %525 = tail call float @llvm.amdgcn.ldexp.f32(float %477, i32 1)\l  %526 = fadd float %520, %524\l  %527 = fsub float %526, %520\l  %528 = fsub float %524, %527\l  %529 = fadd float %496, %526\l  %530 = fsub float %529, %496\l  %531 = fsub float %526, %530\l  %532 = fadd float %525, %528\l  %533 = fadd float %532, %531\l  %534 = fadd float %529, %533\l  %535 = fsub float %534, %529\l  %536 = fsub float %533, %535\l  %537 = fadd float %493, %534\l  %538 = fsub float %537, %493\l  %539 = fsub float %537, %538\l  %540 = fsub float %493, %539\l  %541 = fsub float %534, %538\l  %542 = fadd float %541, %540\l  %543 = fadd float %495, %536\l  %544 = fsub float %543, %495\l  %545 = fsub float %543, %544\l  %546 = fsub float %495, %545\l  %547 = fsub float %536, %544\l  %548 = fadd float %547, %546\l  %549 = fadd float %543, %542\l  %550 = fadd float %537, %549\l  %551 = fsub float %550, %537\l  %552 = fsub float %549, %551\l  %553 = fadd float %548, %552\l  %554 = fadd float %550, %553\l  %555 = fsub float %554, %550\l  %556 = fsub float %553, %555\l  %557 = fmul float %554, 2.000000e+00\l  %558 = fneg float %557\l  %559 = tail call float @llvm.fma.f32(float %554, float 2.000000e+00, float\l... %558)\l  %560 = tail call float @llvm.fma.f32(float %556, float 2.000000e+00, float\l... %559)\l  %561 = fadd float %557, %560\l  %562 = fsub float %561, %557\l  %563 = fsub float %560, %562\l  %564 = tail call float @llvm.fabs.f32(float %557) #4\l  %565 = fcmp oeq float %564, 0x7FF0000000000000\l  %566 = select i1 %565, float %557, float %561\l  %567 = tail call float @llvm.fabs.f32(float %566) #4\l  %568 = fcmp oeq float %567, 0x7FF0000000000000\l  %569 = select i1 %568, float 0.000000e+00, float %563\l  %570 = fcmp oeq float %566, 0x40562E4300000000\l  %571 = select i1 %570, float 0x3EE0000000000000, float 0.000000e+00\l  %572 = fsub float %566, %571\l  %573 = fadd float %571, %569\l  %574 = fmul float %572, 0x3FF7154760000000\l  %575 = tail call float @llvm.rint.f32(float %574)\l  %576 = fcmp ogt float %572, 0x40562E4300000000\l  %577 = fcmp olt float %572, 0xC059D1DA00000000\l  %578 = fneg float %574\l  %579 = tail call float @llvm.fma.f32(float %572, float 0x3FF7154760000000,\l... float %578)\l  %580 = tail call float @llvm.fma.f32(float %572, float 0x3E54AE0BE0000000,\l... float %579)\l  %581 = fsub float %574, %575\l  %582 = fadd float %580, %581\l  %583 = tail call float @llvm.exp2.f32(float %582)\l  %584 = fptosi float %575 to i32\l  %585 = tail call float @llvm.amdgcn.ldexp.f32(float %583, i32 %584)\l  %586 = select i1 %577, float 0.000000e+00, float %585\l  %587 = select i1 %576, float 0x7FF0000000000000, float %586\l  %588 = tail call float @llvm.fma.f32(float %587, float %573, float %587)\l  %589 = tail call float @llvm.fabs.f32(float %587) #4\l  %590 = fcmp oeq float %589, 0x7FF0000000000000\l  %591 = select i1 %590, float %587, float %588\l  %592 = tail call float @llvm.fabs.f32(float %591)\l  %593 = fcmp oeq float %449, 0x7FF0000000000000\l  %594 = fcmp oeq float %448, 0.000000e+00\l  %595 = select i1 %593, float 0x7FF0000000000000, float %592\l  %596 = select i1 %594, float 0.000000e+00, float %595\l  %597 = fcmp uno float %448, 0.000000e+00\l  %598 = select i1 %597, float 0x7FF8000000000000, float %596\l  %599 = fcmp oeq float %448, 1.000000e+00\l  %600 = select i1 %599, float 1.000000e+00, float %598\l  %601 = fadd contract float %441, %600\l  %602 = add nuw nsw i32 %122, 3\l  %603 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p1_section, i32 0, i32 %602\l  %604 = load float, float addrspace(3)* %603, align 4, !tbaa !9\l  %605 = add nuw nsw i32 %124, 3\l  %606 = getelementptr inbounds [400 x float], [400 x float] addrspace(3)*\l... @_ZZ19setDiffVolumeKernelPfPhS0_jjE10p2_section, i32 0, i32 %605\l  %607 = load float, float addrspace(3)* %606, align 4, !tbaa !9\l  %608 = fsub contract float %604, %607\l  %609 = tail call float @llvm.fabs.f32(float %608)\l  %610 = tail call float @llvm.amdgcn.frexp.mant.f32(float %609)\l  %611 = fcmp olt float %610, 0x3FE5555560000000\l  %612 = zext i1 %611 to i32\l  %613 = tail call float @llvm.amdgcn.ldexp.f32(float %610, i32 %612)\l  %614 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %609)\l  %615 = sub nsw i32 %614, %612\l  %616 = fadd float %613, -1.000000e+00\l  %617 = fadd float %613, 1.000000e+00\l  %618 = fadd float %617, -1.000000e+00\l  %619 = fsub float %613, %618\l  %620 = tail call float @llvm.amdgcn.rcp.f32(float %617)\l  %621 = fmul float %616, %620\l  %622 = fmul float %617, %621\l  %623 = fneg float %622\l  %624 = tail call float @llvm.fma.f32(float %621, float %617, float %623)\l  %625 = tail call float @llvm.fma.f32(float %621, float %619, float %624)\l  %626 = fadd float %622, %625\l  %627 = fsub float %626, %622\l  %628 = fsub float %625, %627\l  %629 = fsub float %616, %626\l  %630 = fsub float %616, %629\l  %631 = fsub float %630, %626\l  %632 = fsub float %631, %628\l  %633 = fadd float %629, %632\l  %634 = fmul float %620, %633\l  %635 = fadd float %621, %634\l  %636 = fsub float %635, %621\l  %637 = fsub float %634, %636\l  %638 = fmul float %635, %635\l  %639 = fneg float %638\l  %640 = tail call float @llvm.fma.f32(float %635, float %635, float %639)\l  %641 = fmul float %637, 2.000000e+00\l  %642 = tail call float @llvm.fma.f32(float %635, float %641, float %640)\l  %643 = fadd float %638, %642\l  %644 = fsub float %643, %638\l  %645 = fsub float %642, %644\l  %646 = tail call float @llvm.fmuladd.f32(float %643, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %647 = tail call float @llvm.fmuladd.f32(float %643, float %646, float\l... 0x3FD999BDE0000000)\l  %648 = sitofp i32 %615 to float\l  %649 = fmul float %648, 0x3FE62E4300000000\l  %650 = fneg float %649\l  %651 = tail call float @llvm.fma.f32(float %648, float 0x3FE62E4300000000,\l... float %650)\l  %652 = tail call float @llvm.fma.f32(float %648, float 0xBE205C6100000000,\l... float %651)\l  %653 = fadd float %649, %652\l  %654 = fsub float %653, %649\l  %655 = fsub float %652, %654\l  %656 = tail call float @llvm.amdgcn.ldexp.f32(float %635, i32 1)\l  %657 = fmul float %635, %643\l  %658 = fneg float %657\l  %659 = tail call float @llvm.fma.f32(float %643, float %635, float %658)\l  %660 = tail call float @llvm.fma.f32(float %643, float %637, float %659)\l  %661 = tail call float @llvm.fma.f32(float %645, float %635, float %660)\l  %662 = fadd float %657, %661\l  %663 = fsub float %662, %657\l  %664 = fsub float %661, %663\l  %665 = fmul float %643, %647\l  %666 = fneg float %665\l  %667 = tail call float @llvm.fma.f32(float %643, float %647, float %666)\l  %668 = tail call float @llvm.fma.f32(float %645, float %647, float %667)\l  %669 = fadd float %665, %668\l  %670 = fsub float %669, %665\l  %671 = fsub float %668, %670\l  %672 = fadd float %669, 0x3FE5555540000000\l  %673 = fadd float %672, 0xBFE5555540000000\l  %674 = fsub float %669, %673\l  %675 = fadd float %671, 0x3E2E720200000000\l  %676 = fadd float %675, %674\l  %677 = fadd float %672, %676\l  %678 = fsub float %677, %672\l  %679 = fsub float %676, %678\l  %680 = fmul float %662, %677\l  %681 = fneg float %680\l  %682 = tail call float @llvm.fma.f32(float %662, float %677, float %681)\l  %683 = tail call float @llvm.fma.f32(float %662, float %679, float %682)\l  %684 = tail call float @llvm.fma.f32(float %664, float %677, float %683)\l  %685 = tail call float @llvm.amdgcn.ldexp.f32(float %637, i32 1)\l  %686 = fadd float %680, %684\l  %687 = fsub float %686, %680\l  %688 = fsub float %684, %687\l  %689 = fadd float %656, %686\l  %690 = fsub float %689, %656\l  %691 = fsub float %686, %690\l  %692 = fadd float %685, %688\l  %693 = fadd float %692, %691\l  %694 = fadd float %689, %693\l  %695 = fsub float %694, %689\l  %696 = fsub float %693, %695\l  %697 = fadd float %653, %694\l  %698 = fsub float %697, %653\l  %699 = fsub float %697, %698\l  %700 = fsub float %653, %699\l  %701 = fsub float %694, %698\l  %702 = fadd float %701, %700\l  %703 = fadd float %655, %696\l  %704 = fsub float %703, %655\l  %705 = fsub float %703, %704\l  %706 = fsub float %655, %705\l  %707 = fsub float %696, %704\l  %708 = fadd float %707, %706\l  %709 = fadd float %703, %702\l  %710 = fadd float %697, %709\l  %711 = fsub float %710, %697\l  %712 = fsub float %709, %711\l  %713 = fadd float %708, %712\l  %714 = fadd float %710, %713\l  %715 = fsub float %714, %710\l  %716 = fsub float %713, %715\l  %717 = fmul float %714, 2.000000e+00\l  %718 = fneg float %717\l  %719 = tail call float @llvm.fma.f32(float %714, float 2.000000e+00, float\l... %718)\l  %720 = tail call float @llvm.fma.f32(float %716, float 2.000000e+00, float\l... %719)\l  %721 = fadd float %717, %720\l  %722 = fsub float %721, %717\l  %723 = fsub float %720, %722\l  %724 = tail call float @llvm.fabs.f32(float %717) #4\l  %725 = fcmp oeq float %724, 0x7FF0000000000000\l  %726 = select i1 %725, float %717, float %721\l  %727 = tail call float @llvm.fabs.f32(float %726) #4\l  %728 = fcmp oeq float %727, 0x7FF0000000000000\l  %729 = select i1 %728, float 0.000000e+00, float %723\l  %730 = fcmp oeq float %726, 0x40562E4300000000\l  %731 = select i1 %730, float 0x3EE0000000000000, float 0.000000e+00\l  %732 = fsub float %726, %731\l  %733 = fadd float %731, %729\l  %734 = fmul float %732, 0x3FF7154760000000\l  %735 = tail call float @llvm.rint.f32(float %734)\l  %736 = fcmp ogt float %732, 0x40562E4300000000\l  %737 = fcmp olt float %732, 0xC059D1DA00000000\l  %738 = fneg float %734\l  %739 = tail call float @llvm.fma.f32(float %732, float 0x3FF7154760000000,\l... float %738)\l  %740 = tail call float @llvm.fma.f32(float %732, float 0x3E54AE0BE0000000,\l... float %739)\l  %741 = fsub float %734, %735\l  %742 = fadd float %740, %741\l  %743 = tail call float @llvm.exp2.f32(float %742)\l  %744 = fptosi float %735 to i32\l  %745 = tail call float @llvm.amdgcn.ldexp.f32(float %743, i32 %744)\l  %746 = select i1 %737, float 0.000000e+00, float %745\l  %747 = select i1 %736, float 0x7FF0000000000000, float %746\l  %748 = tail call float @llvm.fma.f32(float %747, float %733, float %747)\l  %749 = tail call float @llvm.fabs.f32(float %747) #4\l  %750 = fcmp oeq float %749, 0x7FF0000000000000\l  %751 = select i1 %750, float %747, float %748\l  %752 = tail call float @llvm.fabs.f32(float %751)\l  %753 = fcmp oeq float %609, 0x7FF0000000000000\l  %754 = fcmp oeq float %608, 0.000000e+00\l  %755 = select i1 %753, float 0x7FF0000000000000, float %752\l  %756 = select i1 %754, float 0.000000e+00, float %755\l  %757 = fcmp uno float %608, 0.000000e+00\l  %758 = select i1 %757, float 0x7FF8000000000000, float %756\l  %759 = fcmp oeq float %608, 1.000000e+00\l  %760 = select i1 %759, float 1.000000e+00, float %758\l  %761 = fadd contract float %601, %760\l  %762 = fcmp olt float %761, 0x39F0000000000000\l  %763 = select i1 %762, float 0x41F0000000000000, float 1.000000e+00\l  %764 = fmul float %761, %763\l  %765 = tail call float @llvm.sqrt.f32(float %764)\l  %766 = bitcast float %765 to i32\l  %767 = add nsw i32 %766, -1\l  %768 = bitcast i32 %767 to float\l  %769 = add nsw i32 %766, 1\l  %770 = bitcast i32 %769 to float\l  %771 = tail call i1 @llvm.amdgcn.class.f32(float %764, i32 608)\l  %772 = select i1 %762, float 0x3EF0000000000000, float 1.000000e+00\l  %773 = fneg float %770\l  %774 = tail call float @llvm.fma.f32(float %773, float %765, float %764)\l  %775 = fcmp ogt float %774, 0.000000e+00\l  %776 = fneg float %768\l  %777 = tail call float @llvm.fma.f32(float %776, float %765, float %764)\l  %778 = fcmp ole float %777, 0.000000e+00\l  %779 = select i1 %778, float %768, float %765\l  %780 = select i1 %775, float %770, float %779\l  %781 = fmul float %772, %780\l  %782 = select i1 %771, float %764, float %781\l  %783 = mul i32 %37, %3\l  %784 = add i32 %35, %783\l  %785 = mul i32 %784, %3\l  %786 = add i32 %785, %39\l  %787 = zext i32 %786 to i64\l  %788 = getelementptr inbounds float, float addrspace(1)* %0, i64 %787\l  store float %782, float addrspace(1)* %788, align 4, !tbaa !9\l  br label %789\l}"];
	Node0x57b8990 -> Node0x57b8a20;
	Node0x57b8a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%789:\l789:                                              \l  ret void\l}"];
}
