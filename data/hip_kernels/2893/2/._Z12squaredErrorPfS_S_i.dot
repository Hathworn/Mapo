digraph "CFG for '_Z12squaredErrorPfS_S_i' function" {
	label="CFG for '_Z12squaredErrorPfS_S_i' function";

	Node0x58306e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp ult i32 %13, %3\l  br i1 %14, label %15, label %192\l|{<s0>T|<s1>F}}"];
	Node0x58306e0:s0 -> Node0x58325f0;
	Node0x58306e0:s1 -> Node0x5832680;
	Node0x58325f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = zext i32 %13 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %1, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %16\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %21 = fsub contract float %18, %20\l  %22 = tail call float @llvm.fabs.f32(float %21)\l  %23 = fpext float %22 to double\l  %24 = tail call double @llvm.amdgcn.frexp.mant.f64(double %23)\l  %25 = fcmp olt double %24, 0x3FE5555555555555\l  %26 = zext i1 %25 to i32\l  %27 = tail call double @llvm.amdgcn.ldexp.f64(double %24, i32 %26)\l  %28 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %23)\l  %29 = sub nsw i32 %28, %26\l  %30 = fadd double %27, -1.000000e+00\l  %31 = fadd double %27, 1.000000e+00\l  %32 = fadd double %31, -1.000000e+00\l  %33 = fsub double %27, %32\l  %34 = tail call double @llvm.amdgcn.rcp.f64(double %31)\l  %35 = fneg double %31\l  %36 = tail call double @llvm.fma.f64(double %35, double %34, double\l... 1.000000e+00)\l  %37 = tail call double @llvm.fma.f64(double %36, double %34, double %34)\l  %38 = tail call double @llvm.fma.f64(double %35, double %37, double\l... 1.000000e+00)\l  %39 = tail call double @llvm.fma.f64(double %38, double %37, double %37)\l  %40 = fmul double %30, %39\l  %41 = fmul double %31, %40\l  %42 = fneg double %41\l  %43 = tail call double @llvm.fma.f64(double %40, double %31, double %42)\l  %44 = tail call double @llvm.fma.f64(double %40, double %33, double %43)\l  %45 = fadd double %41, %44\l  %46 = fsub double %45, %41\l  %47 = fsub double %44, %46\l  %48 = fsub double %30, %45\l  %49 = fsub double %30, %48\l  %50 = fsub double %49, %45\l  %51 = fsub double %50, %47\l  %52 = fadd double %48, %51\l  %53 = fmul double %39, %52\l  %54 = fadd double %40, %53\l  %55 = fsub double %54, %40\l  %56 = fsub double %53, %55\l  %57 = fmul double %54, %54\l  %58 = fneg double %57\l  %59 = tail call double @llvm.fma.f64(double %54, double %54, double %58)\l  %60 = fmul double %56, 2.000000e+00\l  %61 = tail call double @llvm.fma.f64(double %54, double %60, double %59)\l  %62 = fadd double %57, %61\l  %63 = fsub double %62, %57\l  %64 = fsub double %61, %63\l  %65 = tail call double @llvm.fma.f64(double %62, double 0x3FBDEE674222DE17,\l... double 0x3FBA6564968915A9)\l  %66 = tail call double @llvm.fma.f64(double %62, double %65, double\l... 0x3FBE25E43ABE935A)\l  %67 = tail call double @llvm.fma.f64(double %62, double %66, double\l... 0x3FC110EF47E6C9C2)\l  %68 = tail call double @llvm.fma.f64(double %62, double %67, double\l... 0x3FC3B13BCFA74449)\l  %69 = tail call double @llvm.fma.f64(double %62, double %68, double\l... 0x3FC745D171BF3C30)\l  %70 = tail call double @llvm.fma.f64(double %62, double %69, double\l... 0x3FCC71C71C7792CE)\l  %71 = tail call double @llvm.fma.f64(double %62, double %70, double\l... 0x3FD24924924920DA)\l  %72 = tail call double @llvm.fma.f64(double %62, double %71, double\l... 0x3FD999999999999C)\l  %73 = sitofp i32 %29 to double\l  %74 = fmul double %73, 0x3FE62E42FEFA39EF\l  %75 = fneg double %74\l  %76 = tail call double @llvm.fma.f64(double %73, double 0x3FE62E42FEFA39EF,\l... double %75)\l  %77 = tail call double @llvm.fma.f64(double %73, double 0x3C7ABC9E3B39803F,\l... double %76)\l  %78 = fadd double %74, %77\l  %79 = fsub double %78, %74\l  %80 = fsub double %77, %79\l  %81 = tail call double @llvm.amdgcn.ldexp.f64(double %54, i32 1)\l  %82 = tail call double @llvm.amdgcn.ldexp.f64(double %56, i32 1)\l  %83 = fmul double %54, %62\l  %84 = fneg double %83\l  %85 = tail call double @llvm.fma.f64(double %62, double %54, double %84)\l  %86 = tail call double @llvm.fma.f64(double %62, double %56, double %85)\l  %87 = tail call double @llvm.fma.f64(double %64, double %54, double %86)\l  %88 = fadd double %83, %87\l  %89 = fsub double %88, %83\l  %90 = fsub double %87, %89\l  %91 = fmul double %62, %72\l  %92 = fneg double %91\l  %93 = tail call double @llvm.fma.f64(double %62, double %72, double %92)\l  %94 = tail call double @llvm.fma.f64(double %64, double %72, double %93)\l  %95 = fadd double %91, %94\l  %96 = fsub double %95, %91\l  %97 = fsub double %94, %96\l  %98 = fadd double %95, 0x3FE5555555555555\l  %99 = fadd double %98, 0xBFE5555555555555\l  %100 = fsub double %95, %99\l  %101 = fadd double %97, 0x3C8543B0D5DF274D\l  %102 = fadd double %101, %100\l  %103 = fadd double %98, %102\l  %104 = fsub double %103, %98\l  %105 = fsub double %102, %104\l  %106 = fmul double %88, %103\l  %107 = fneg double %106\l  %108 = tail call double @llvm.fma.f64(double %88, double %103, double %107)\l  %109 = tail call double @llvm.fma.f64(double %88, double %105, double %108)\l  %110 = tail call double @llvm.fma.f64(double %90, double %103, double %109)\l  %111 = fadd double %106, %110\l  %112 = fsub double %111, %106\l  %113 = fsub double %110, %112\l  %114 = fadd double %81, %111\l  %115 = fsub double %114, %81\l  %116 = fsub double %111, %115\l  %117 = fadd double %82, %113\l  %118 = fadd double %117, %116\l  %119 = fadd double %114, %118\l  %120 = fsub double %119, %114\l  %121 = fsub double %118, %120\l  %122 = fadd double %78, %119\l  %123 = fsub double %122, %78\l  %124 = fsub double %122, %123\l  %125 = fsub double %78, %124\l  %126 = fsub double %119, %123\l  %127 = fadd double %126, %125\l  %128 = fadd double %80, %121\l  %129 = fsub double %128, %80\l  %130 = fsub double %128, %129\l  %131 = fsub double %80, %130\l  %132 = fsub double %121, %129\l  %133 = fadd double %132, %131\l  %134 = fadd double %128, %127\l  %135 = fadd double %122, %134\l  %136 = fsub double %135, %122\l  %137 = fsub double %134, %136\l  %138 = fadd double %133, %137\l  %139 = fadd double %135, %138\l  %140 = fsub double %139, %135\l  %141 = fsub double %138, %140\l  %142 = fmul double %139, 2.000000e+00\l  %143 = fneg double %142\l  %144 = tail call double @llvm.fma.f64(double %139, double 2.000000e+00,\l... double %143)\l  %145 = tail call double @llvm.fma.f64(double %141, double 2.000000e+00,\l... double %144)\l  %146 = fadd double %142, %145\l  %147 = fsub double %146, %142\l  %148 = fsub double %145, %147\l  %149 = tail call double @llvm.fabs.f64(double %142) #3\l  %150 = fcmp oeq double %149, 0x7FF0000000000000\l  %151 = select i1 %150, double %142, double %146\l  %152 = tail call double @llvm.fabs.f64(double %151) #3\l  %153 = fcmp oeq double %152, 0x7FF0000000000000\l  %154 = select i1 %153, double 0.000000e+00, double %148\l  %155 = fmul double %151, 0x3FF71547652B82FE\l  %156 = tail call double @llvm.rint.f64(double %155)\l  %157 = fneg double %156\l  %158 = tail call double @llvm.fma.f64(double %157, double\l... 0x3FE62E42FEFA39EF, double %151)\l  %159 = tail call double @llvm.fma.f64(double %157, double\l... 0x3C7ABC9E3B39803F, double %158)\l  %160 = tail call double @llvm.fma.f64(double %159, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %161 = tail call double @llvm.fma.f64(double %159, double %160, double\l... 0x3EC71DEE623FDE64)\l  %162 = tail call double @llvm.fma.f64(double %159, double %161, double\l... 0x3EFA01997C89E6B0)\l  %163 = tail call double @llvm.fma.f64(double %159, double %162, double\l... 0x3F2A01A014761F6E)\l  %164 = tail call double @llvm.fma.f64(double %159, double %163, double\l... 0x3F56C16C1852B7B0)\l  %165 = tail call double @llvm.fma.f64(double %159, double %164, double\l... 0x3F81111111122322)\l  %166 = tail call double @llvm.fma.f64(double %159, double %165, double\l... 0x3FA55555555502A1)\l  %167 = tail call double @llvm.fma.f64(double %159, double %166, double\l... 0x3FC5555555555511)\l  %168 = tail call double @llvm.fma.f64(double %159, double %167, double\l... 0x3FE000000000000B)\l  %169 = tail call double @llvm.fma.f64(double %159, double %168, double\l... 1.000000e+00)\l  %170 = tail call double @llvm.fma.f64(double %159, double %169, double\l... 1.000000e+00)\l  %171 = fptosi double %156 to i32\l  %172 = tail call double @llvm.amdgcn.ldexp.f64(double %170, i32 %171)\l  %173 = fcmp ogt double %151, 1.024000e+03\l  %174 = select i1 %173, double 0x7FF0000000000000, double %172\l  %175 = fcmp olt double %151, -1.075000e+03\l  %176 = select i1 %175, double 0.000000e+00, double %174\l  %177 = tail call double @llvm.fma.f64(double %176, double %154, double %176)\l  %178 = tail call double @llvm.fabs.f64(double %176) #3\l  %179 = fcmp oeq double %178, 0x7FF0000000000000\l  %180 = select i1 %179, double %176, double %177\l  %181 = fcmp oeq float %22, 0x7FF0000000000000\l  %182 = fcmp oeq float %21, 0.000000e+00\l  %183 = fcmp uno float %21, 0.000000e+00\l  %184 = fcmp oeq float %21, 1.000000e+00\l  %185 = fptrunc double %180 to float\l  %186 = tail call float @llvm.fabs.f32(float %185)\l  %187 = select i1 %181, float 0x7FF0000000000000, float %186\l  %188 = select i1 %182, float 0.000000e+00, float %187\l  %189 = select i1 %183, float 0x7FF8000000000000, float %188\l  %190 = select i1 %184, float 1.000000e+00, float %189\l  %191 = getelementptr inbounds float, float addrspace(1)* %2, i64 %16\l  store float %190, float addrspace(1)* %191, align 4, !tbaa !7\l  br label %192\l}"];
	Node0x58325f0 -> Node0x5832680;
	Node0x5832680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%192:\l192:                                              \l  ret void\l}"];
}
