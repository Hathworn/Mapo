digraph "CFG for '_Z11jacobi_initiiiPKdS0_ddPdS1_S1_S1_i' function" {
	label="CFG for '_Z11jacobi_initiiiPKdS0_ddPdS1_S1_S1_i' function";

	Node0x49c32d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %14, %19\l  %21 = add i32 %20, %13\l  %22 = mul nsw i32 %1, %0\l  %23 = icmp slt i32 %21, %22\l  br i1 %23, label %24, label %88\l|{<s0>T|<s1>F}}"];
	Node0x49c32d0:s0 -> Node0x49c5e90;
	Node0x49c32d0:s1 -> Node0x49c5f20;
	Node0x49c5e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%24:\l24:                                               \l  %25 = shl nsw i32 %2, 1\l  %26 = add nsw i32 %25, %0\l  %27 = freeze i32 %21\l  %28 = freeze i32 %0\l  %29 = sdiv i32 %27, %28\l  %30 = mul i32 %29, %28\l  %31 = sub i32 %27, %30\l  %32 = add nsw i32 %26, 1\l  %33 = mul nsw i32 %32, %2\l  %34 = add nsw i32 %31, %33\l  %35 = mul nsw i32 %29, %26\l  %36 = add nsw i32 %34, %35\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds double, double addrspace(1)* %4, i64 %37\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %40 = getelementptr inbounds double, double addrspace(1)* %3, i64 %37\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %42 = fmul contract double %39, %41\l  %43 = getelementptr inbounds double, double addrspace(1)* %9, i64 %37\l  store double %42, double addrspace(1)* %43, align 8, !tbaa !7\l  %44 = getelementptr inbounds double, double addrspace(1)* %10, i64 %37\l  store double %42, double addrspace(1)* %44, align 8, !tbaa !7\l  %45 = icmp eq i32 %29, 0\l  %46 = icmp eq i32 %31, 0\l  %47 = or i1 %46, %45\l  br i1 %47, label %88, label %48\l|{<s0>T|<s1>F}}"];
	Node0x49c5e90:s0 -> Node0x49c5f20;
	Node0x49c5e90:s1 -> Node0x49c7d30;
	Node0x49c7d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%48:\l48:                                               \l  switch i32 %11, label %72 [\l    i32 1, label %49\l    i32 2, label %59\l  ]\l|{<s0>def|<s1>1|<s2>2}}"];
	Node0x49c7d30:s0 -> Node0x49c7e70;
	Node0x49c7d30:s1 -> Node0x49c7ec0;
	Node0x49c7d30:s2 -> Node0x49c7f80;
	Node0x49c7ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%49:\l49:                                               \l  %50 = load double, double addrspace(1)* %40, align 8, !tbaa !7\l  %51 = add nsw i32 %36, -1\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds double, double addrspace(1)* %3, i64 %52\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !7\l  %55 = sub nsw i32 %36, %26\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds double, double addrspace(1)* %3, i64 %56\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !7\l  br label %72\l}"];
	Node0x49c7ec0 -> Node0x49c7e70;
	Node0x49c7f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%59:\l59:                                               \l  %60 = load double, double addrspace(1)* %40, align 8, !tbaa !7\l  %61 = fdiv contract double 1.000000e+00, %60\l  %62 = add nsw i32 %36, -1\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds double, double addrspace(1)* %3, i64 %63\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !7\l  %66 = fdiv contract double 1.000000e+00, %65\l  %67 = sub nsw i32 %36, %26\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds double, double addrspace(1)* %3, i64 %68\l  %70 = load double, double addrspace(1)* %69, align 8, !tbaa !7\l  %71 = fdiv contract double 1.000000e+00, %70\l  br label %72\l}"];
	Node0x49c7f80 -> Node0x49c7e70;
	Node0x49c7e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%72:\l72:                                               \l  %73 = phi double [ %50, %49 ], [ %61, %59 ], [ undef, %48 ]\l  %74 = phi double [ %54, %49 ], [ %66, %59 ], [ undef, %48 ]\l  %75 = phi double [ %58, %49 ], [ %71, %59 ], [ undef, %48 ]\l  %76 = fadd contract double %73, %74\l  %77 = fmul contract double %76, %5\l  %78 = fmul contract double %74, 2.000000e+00\l  %79 = fmul contract double %73, %78\l  %80 = fdiv contract double %77, %79\l  %81 = getelementptr inbounds double, double addrspace(1)* %7, i64 %37\l  store double %80, double addrspace(1)* %81, align 8, !tbaa !7\l  %82 = fadd contract double %73, %75\l  %83 = fmul contract double %82, %6\l  %84 = fmul contract double %75, 2.000000e+00\l  %85 = fmul contract double %73, %84\l  %86 = fdiv contract double %83, %85\l  %87 = getelementptr inbounds double, double addrspace(1)* %8, i64 %37\l  store double %86, double addrspace(1)* %87, align 8, !tbaa !7\l  br label %88\l}"];
	Node0x49c7e70 -> Node0x49c5f20;
	Node0x49c5f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  ret void\l}"];
}
