digraph "CFG for '_Z9cg_init_kiiiPKdPdS1_dd' function" {
	label="CFG for '_Z9cg_init_kiiiPKdPdS1_dd' function";

	Node0x5a7e6d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = add i32 %16, %9\l  %18 = mul nsw i32 %1, %0\l  %19 = icmp slt i32 %17, %18\l  br i1 %19, label %20, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5a7e6d0:s0 -> Node0x5a80690;
	Node0x5a7e6d0:s1 -> Node0x5a80720;
	Node0x5a80690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%20:\l20:                                               \l  %21 = shl nsw i32 %2, 1\l  %22 = add nsw i32 %21, %0\l  %23 = add nsw i32 %22, -1\l  %24 = freeze i32 %17\l  %25 = freeze i32 %0\l  %26 = sdiv i32 %24, %25\l  %27 = mul i32 %26, %25\l  %28 = sub i32 %24, %27\l  %29 = mul nsw i32 %22, %2\l  %30 = add nsw i32 %28, %29\l  %31 = mul nsw i32 %26, %23\l  %32 = add nsw i32 %30, %31\l  %33 = add nsw i32 %32, -1\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %3, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %37 = sext i32 %32 to i64\l  %38 = getelementptr inbounds double, double addrspace(1)* %3, i64 %37\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %40 = fadd contract double %36, %39\l  %41 = fmul contract double %40, %6\l  %42 = fmul contract double %36, 2.000000e+00\l  %43 = fmul contract double %42, %39\l  %44 = fdiv contract double %41, %43\l  %45 = getelementptr inbounds double, double addrspace(1)* %4, i64 %37\l  store double %44, double addrspace(1)* %45, align 8, !tbaa !7\l  %46 = sub nsw i32 %32, %23\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds double, double addrspace(1)* %3, i64 %47\l  %49 = load double, double addrspace(1)* %48, align 8, !tbaa !7\l  %50 = load double, double addrspace(1)* %38, align 8, !tbaa !7\l  %51 = fadd contract double %49, %50\l  %52 = fmul contract double %51, %7\l  %53 = fmul contract double %49, 2.000000e+00\l  %54 = fmul contract double %53, %50\l  %55 = fdiv contract double %52, %54\l  %56 = getelementptr inbounds double, double addrspace(1)* %5, i64 %37\l  store double %55, double addrspace(1)* %56, align 8, !tbaa !7\l  br label %57\l}"];
	Node0x5a80690 -> Node0x5a80720;
	Node0x5a80720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  ret void\l}"];
}
