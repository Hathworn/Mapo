digraph "CFG for '_Z14Substep2KernelPdS_S_S_iiS_S_S_iS_dS_S_S_S_' function" {
	label="CFG for '_Z14Substep2KernelPdS_S_S_iiS_S_S_iS_dS_S_S_S_' function";

	Node0x47432c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = add i32 %24, %17\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %27 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %28 = getelementptr i8, i8 addrspace(4)* %18, i64 6\l  %29 = bitcast i8 addrspace(4)* %28 to i16 addrspace(4)*\l  %30 = load i16, i16 addrspace(4)* %29, align 2, !range !5, !invariant.load !6\l  %31 = zext i16 %30 to i32\l  %32 = mul i32 %27, %31\l  %33 = add i32 %32, %26\l  %34 = icmp slt i32 %33, %4\l  %35 = icmp slt i32 %25, %5\l  %36 = select i1 %34, i1 %35, i1 false\l  br i1 %36, label %37, label %79\l|{<s0>T|<s1>F}}"];
	Node0x47432c0:s0 -> Node0x47430c0;
	Node0x47432c0:s1 -> Node0x4747bf0;
	Node0x47430c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%37:\l37:                                               \l  %38 = add nsw i32 %33, 1\l  %39 = mul nsw i32 %38, %5\l  %40 = add nsw i32 %39, %25\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %1, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %44 = mul nsw i32 %33, %5\l  %45 = add nsw i32 %44, %25\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds double, double addrspace(1)* %1, i64 %46\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %49 = fsub contract double %43, %48\l  %50 = fcmp contract olt double %49, 0.000000e+00\l  br i1 %50, label %51, label %57\l|{<s0>T|<s1>F}}"];
	Node0x47430c0:s0 -> Node0x4749670;
	Node0x47430c0:s1 -> Node0x4749700;
	Node0x4749670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%51:\l51:                                               \l  %52 = getelementptr inbounds double, double addrspace(1)* %0, i64 %46\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %54 = fmul contract double %53, 0x3FFFCF41F212D772\l  %55 = fmul contract double %49, %54\l  %56 = fmul contract double %49, %55\l  br label %57\l}"];
	Node0x4749670 -> Node0x4749700;
	Node0x4749700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%57:\l57:                                               \l  %58 = phi double [ %56, %51 ], [ 0.000000e+00, %37 ]\l  %59 = getelementptr inbounds double, double addrspace(1)* %8, i64 %46\l  store double %58, double addrspace(1)* %59, align 8\l  %60 = add nsw i32 %25, 1\l  %61 = srem i32 %60, %5\l  %62 = add nsw i32 %61, %44\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds double, double addrspace(1)* %2, i64 %63\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !7\l  %66 = getelementptr inbounds double, double addrspace(1)* %2, i64 %46\l  %67 = load double, double addrspace(1)* %66, align 8, !tbaa !7\l  %68 = fsub contract double %65, %67\l  %69 = fcmp contract olt double %68, 0.000000e+00\l  br i1 %69, label %70, label %76\l|{<s0>T|<s1>F}}"];
	Node0x4749700:s0 -> Node0x474a4f0;
	Node0x4749700:s1 -> Node0x474a540;
	Node0x474a4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%70:\l70:                                               \l  %71 = getelementptr inbounds double, double addrspace(1)* %0, i64 %46\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !7\l  %73 = fmul contract double %72, 0x3FFFCF41F212D772\l  %74 = fmul contract double %68, %73\l  %75 = fmul contract double %68, %74\l  br label %76\l}"];
	Node0x474a4f0 -> Node0x474a540;
	Node0x474a540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%76:\l76:                                               \l  %77 = phi double [ %75, %70 ], [ 0.000000e+00, %57 ]\l  %78 = getelementptr inbounds double, double addrspace(1)* %3, i64 %46\l  store double %77, double addrspace(1)* %78, align 8, !tbaa !7\l  br label %79\l}"];
	Node0x474a540 -> Node0x4747bf0;
	Node0x4747bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  ret void\l}"];
}
