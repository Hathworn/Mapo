digraph "CFG for '_Z19VanLeerRadialKernelPdS_S_S_S_S_iidiS_S_' function" {
	label="CFG for '_Z19VanLeerRadialKernelPdS_S_S_S_S_iidiS_S_' function";

	Node0x5249390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %13\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %24 = getelementptr i8, i8 addrspace(4)* %14, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !5, !invariant.load !6\l  %27 = zext i16 %26 to i32\l  %28 = mul i32 %23, %27\l  %29 = add i32 %28, %22\l  %30 = icmp slt i32 %29, %7\l  %31 = icmp slt i32 %21, %6\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %82\l|{<s0>T|<s1>F}}"];
	Node0x5249390:s0 -> Node0x524b890;
	Node0x5249390:s1 -> Node0x524b920;
	Node0x524b890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%33:\l33:                                               \l  %34 = sitofp i32 %6 to double\l  %35 = fdiv contract double 0x401921FB54442D18, %34\l  %36 = fmul contract double %35, %8\l  %37 = sext i32 %29 to i64\l  %38 = getelementptr inbounds double, double addrspace(1)* %0, i64 %37\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %40 = fmul contract double %36, %39\l  %41 = mul nsw i32 %29, %6\l  %42 = add nsw i32 %41, %21\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds double, double addrspace(1)* %2, i64 %43\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %46 = fmul contract double %40, %45\l  %47 = getelementptr inbounds double, double addrspace(1)* %3, i64 %43\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %49 = fmul contract double %46, %48\l  %50 = getelementptr inbounds double, double addrspace(1)* %4, i64 %43\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %52 = fmul contract double %49, %51\l  %53 = getelementptr inbounds double, double addrspace(1)* %1, i64 %37\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %55 = fmul contract double %36, %54\l  %56 = add nsw i32 %29, 1\l  %57 = mul nsw i32 %56, %6\l  %58 = add nsw i32 %57, %21\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds double, double addrspace(1)* %2, i64 %59\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %62 = fmul contract double %55, %61\l  %63 = getelementptr inbounds double, double addrspace(1)* %3, i64 %59\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %65 = fmul contract double %62, %64\l  %66 = getelementptr inbounds double, double addrspace(1)* %4, i64 %59\l  %67 = load double, double addrspace(1)* %66, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %68 = fmul contract double %65, %67\l  %69 = fsub contract double %52, %68\l  %70 = getelementptr inbounds double, double addrspace(1)* %11, i64 %37\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %72 = fmul contract double %71, %69\l  %73 = getelementptr inbounds double, double addrspace(1)* %10, i64 %43\l  %74 = load double, double addrspace(1)* %73, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %75 = fadd contract double %74, %72\l  store double %75, double addrspace(1)* %73, align 8, !tbaa !7\l  %76 = icmp eq i32 %29, 0\l  %77 = icmp ne i32 %9, 0\l  %78 = select i1 %76, i1 %77, i1 false\l  br i1 %78, label %79, label %82\l|{<s0>T|<s1>F}}"];
	Node0x524b890:s0 -> Node0x5250cc0;
	Node0x524b890:s1 -> Node0x524b920;
	Node0x5250cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%79:\l79:                                               \l  %80 = sext i32 %21 to i64\l  %81 = getelementptr inbounds double, double addrspace(1)* %5, i64 %80\l  store double %69, double addrspace(1)* %81, align 8, !tbaa !7\l  br label %82\l}"];
	Node0x5250cc0 -> Node0x524b920;
	Node0x524b920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  ret void\l}"];
}
