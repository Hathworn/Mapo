digraph "CFG for '_Z29ComputeConstantResidualKernelPdS_PiS0_iidS_S_S_i' function" {
	label="CFG for '_Z29ComputeConstantResidualKernelPdS_PiS0_iidS_S_S_i' function";

	Node0x603d260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = add i32 %19, %12\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !5, !invariant.load !6\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = add i32 %27, %21\l  %29 = icmp slt i32 %28, %5\l  %30 = icmp slt i32 %20, %4\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %68\l|{<s0>T|<s1>F}}"];
	Node0x603d260:s0 -> Node0x60418f0;
	Node0x603d260:s1 -> Node0x6041980;
	Node0x60418f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%32:\l32:                                               \l  %33 = icmp eq i32 %10, 0\l  %34 = fdiv contract double 1.000000e+00, %6\l  %35 = sitofp i32 %4 to double\l  %36 = fdiv contract double 0x401921FB54442D18, %35\l  %37 = sext i32 %28 to i64\l  %38 = getelementptr inbounds double, double addrspace(1)* %0, i64 %37\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %40 = getelementptr inbounds double, double addrspace(1)* %1, i64 %37\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %42 = fmul contract double %39, %41\l  %43 = fmul contract double %42, %6\l  %44 = fmul contract double %43, %35\l  %45 = fmul contract double %44, 5.000000e-01\l  %46 = fdiv contract double %45, 0x400921FB54442D18\l  %47 = fadd contract double %46, 5.000000e-01\l  %48 = tail call double @llvm.floor.f64(double %47)\l  %49 = fptosi double %48 to i64\l  %50 = trunc i64 %49 to i32\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %37\l  store i32 %50, i32 addrspace(1)* %51, align 4, !tbaa !11\l  %52 = fsub contract double %46, %48\l  %53 = getelementptr inbounds double, double addrspace(1)* %9, i64 %37\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %55 = fmul contract double %54, %52\l  %56 = fmul contract double %34, %55\l  %57 = fmul contract double %36, %56\l  %58 = mul nsw i32 %28, %4\l  %59 = add nsw i32 %58, %20\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds double, double addrspace(1)* %7, i64 %60\l  store double %57, double addrspace(1)* %61, align 8, !tbaa !7\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %37\l  br i1 %33, label %63, label %67\l|{<s0>T|<s1>F}}"];
	Node0x60418f0:s0 -> Node0x60443c0;
	Node0x60418f0:s1 -> Node0x6044450;
	Node0x60443c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%63:\l63:                                               \l  store i32 1, i32 addrspace(1)* %62, align 4, !tbaa !11\l  %64 = getelementptr inbounds double, double addrspace(1)* %8, i64 %60\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !7\l  %66 = fadd contract double %57, %65\l  store double %66, double addrspace(1)* %64, align 8, !tbaa !7\l  store double 0.000000e+00, double addrspace(1)* %61, align 8, !tbaa !7\l  br label %68\l}"];
	Node0x60443c0 -> Node0x6041980;
	Node0x6044450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%67:\l67:                                               \l  store i32 0, i32 addrspace(1)* %62, align 4, !tbaa !11\l  br label %68\l}"];
	Node0x6044450 -> Node0x6041980;
	Node0x6041980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  ret void\l}"];
}
