digraph "CFG for '_Z26ComputePressureFieldKernelPdS_S_iiidS_' function" {
	label="CFG for '_Z26ComputePressureFieldKernelPdS_S_iiidS_' function";

	Node0x455c870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %11, %15\l  %17 = add i32 %16, %9\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = add i32 %24, %18\l  %26 = icmp slt i32 %25, %4\l  %27 = icmp slt i32 %17, %5\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %53\l|{<s0>T|<s1>F}}"];
	Node0x455c870:s0 -> Node0x4560310;
	Node0x455c870:s1 -> Node0x45603a0;
	Node0x4560310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%29:\l29:                                               \l  %30 = icmp eq i32 %3, 0\l  br i1 %30, label %31, label %41\l|{<s0>T|<s1>F}}"];
	Node0x4560310:s0 -> Node0x45605a0;
	Node0x4560310:s1 -> Node0x45605f0;
	Node0x45605a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %25, %5\l  %33 = add nsw i32 %32, %17\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %1, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %37 = getelementptr inbounds double, double addrspace(1)* %0, i64 %34\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %39 = fmul contract double %36, %38\l  %40 = fmul contract double %38, %39\l  br label %49\l}"];
	Node0x45605a0 -> Node0x4561510;
	Node0x45605f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%41:\l41:                                               \l  %42 = fadd contract double %6, -1.000000e+00\l  %43 = mul nsw i32 %25, %5\l  %44 = add nsw i32 %43, %17\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds double, double addrspace(1)* %7, i64 %45\l  %47 = load double, double addrspace(1)* %46, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %48 = fmul contract double %42, %47\l  br label %49\l}"];
	Node0x45605f0 -> Node0x4561510;
	Node0x4561510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%49:\l49:                                               \l  %50 = phi i64 [ %34, %31 ], [ %45, %41 ]\l  %51 = phi double [ %40, %31 ], [ %48, %41 ]\l  %52 = getelementptr inbounds double, double addrspace(1)* %2, i64 %50\l  store double %51, double addrspace(1)* %52, align 8, !tbaa !7\l  br label %53\l}"];
	Node0x4561510 -> Node0x45603a0;
	Node0x45603a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  ret void\l}"];
}
