digraph "CFG for '_Z25CircumPlanetaryMassKernelPdS_S_S_ddiidS_' function" {
	label="CFG for '_Z25CircumPlanetaryMassKernelPdS_S_S_ddiidS_' function";

	Node0x61223e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = add i32 %18, %11\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !5, !invariant.load !6\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %21, %25\l  %27 = add i32 %26, %20\l  %28 = icmp slt i32 %27, %6\l  %29 = icmp slt i32 %19, %7\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %77\l|{<s0>T|<s1>F}}"];
	Node0x61223e0:s0 -> Node0x6126a10;
	Node0x61223e0:s1 -> Node0x6126aa0;
	Node0x6126a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %27, %7\l  %33 = add nsw i32 %32, %19\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %2, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %37 = fsub contract double %36, %4\l  %38 = fmul contract double %37, %37\l  %39 = getelementptr inbounds double, double addrspace(1)* %3, i64 %34\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %41 = fsub contract double %40, %5\l  %42 = fmul contract double %41, %41\l  %43 = fadd contract double %38, %42\l  %44 = fcmp olt double %43, 0x1000000000000000\l  %45 = select i1 %44, double 0x4FF0000000000000, double 1.000000e+00\l  %46 = fmul double %43, %45\l  %47 = tail call double @llvm.amdgcn.rsq.f64(double %46)\l  %48 = fmul double %46, %47\l  %49 = fmul double %47, 5.000000e-01\l  %50 = fneg double %49\l  %51 = tail call double @llvm.fma.f64(double %50, double %48, double\l... 5.000000e-01)\l  %52 = tail call double @llvm.fma.f64(double %49, double %51, double %49)\l  %53 = tail call double @llvm.fma.f64(double %48, double %51, double %48)\l  %54 = fneg double %53\l  %55 = tail call double @llvm.fma.f64(double %54, double %53, double %46)\l  %56 = tail call double @llvm.fma.f64(double %55, double %52, double %53)\l  %57 = fneg double %56\l  %58 = tail call double @llvm.fma.f64(double %57, double %56, double %46)\l  %59 = tail call double @llvm.fma.f64(double %58, double %52, double %56)\l  %60 = select i1 %44, double 0x37F0000000000000, double 1.000000e+00\l  %61 = fmul double %60, %59\l  %62 = fcmp oeq double %46, 0.000000e+00\l  %63 = fcmp oeq double %46, 0x7FF0000000000000\l  %64 = or i1 %62, %63\l  %65 = select i1 %64, double %46, double %61\l  %66 = fcmp contract olt double %65, %8\l  br i1 %66, label %67, label %74\l|{<s0>T|<s1>F}}"];
	Node0x6126a10:s0 -> Node0x6126db0;
	Node0x6126a10:s1 -> Node0x6129e20;
	Node0x6126db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%67:\l67:                                               \l  %68 = sext i32 %27 to i64\l  %69 = getelementptr inbounds double, double addrspace(1)* %1, i64 %68\l  %70 = load double, double addrspace(1)* %69, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %71 = getelementptr inbounds double, double addrspace(1)* %0, i64 %34\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %73 = fmul contract double %70, %72\l  br label %74\l}"];
	Node0x6126db0 -> Node0x6129e20;
	Node0x6129e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%74:\l74:                                               \l  %75 = phi double [ %73, %67 ], [ 0.000000e+00, %31 ]\l  %76 = getelementptr inbounds double, double addrspace(1)* %9, i64 %34\l  store double %75, double addrspace(1)* %76, align 8, !tbaa !7\l  br label %77\l}"];
	Node0x6129e20 -> Node0x6126aa0;
	Node0x6126aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  ret void\l}"];
}
