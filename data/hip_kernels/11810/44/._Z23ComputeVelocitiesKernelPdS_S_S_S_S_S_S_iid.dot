digraph "CFG for '_Z23ComputeVelocitiesKernelPdS_S_S_S_S_S_S_iid' function" {
	label="CFG for '_Z23ComputeVelocitiesKernelPdS_S_S_S_S_S_S_iid' function";

	Node0x504e480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = add i32 %19, %12\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !5, !invariant.load !6\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = add i32 %27, %21\l  %29 = icmp slt i32 %28, %8\l  %30 = icmp slt i32 %20, %9\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %86\l|{<s0>T|<s1>F}}"];
	Node0x504e480:s0 -> Node0x5052aa0;
	Node0x504e480:s1 -> Node0x5052b30;
	Node0x5052aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%32:\l32:                                               \l  %33 = icmp eq i32 %28, 0\l  br i1 %33, label %34, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5052aa0:s0 -> Node0x5050a20;
	Node0x5052aa0:s1 -> Node0x5052e80;
	Node0x5050a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%34:\l34:                                               \l  %35 = sext i32 %20 to i64\l  %36 = getelementptr inbounds double, double addrspace(1)* %0, i64 %35\l  store double 0.000000e+00, double addrspace(1)* %36, align 8, !tbaa !7\l  %37 = sext i32 %20 to i64\l  br label %59\l}"];
	Node0x5050a20 -> Node0x5053d50;
	Node0x5052e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%38:\l38:                                               \l  %39 = add nsw i32 %28, -1\l  %40 = mul nsw i32 %39, %9\l  %41 = add nsw i32 %40, %20\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds double, double addrspace(1)* %6, i64 %42\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %45 = mul nsw i32 %28, %9\l  %46 = add nsw i32 %45, %20\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds double, double addrspace(1)* %7, i64 %47\l  %49 = load double, double addrspace(1)* %48, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %50 = fadd contract double %44, %49\l  %51 = getelementptr inbounds double, double addrspace(1)* %2, i64 %47\l  %52 = load double, double addrspace(1)* %51, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %53 = getelementptr inbounds double, double addrspace(1)* %2, i64 %42\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %55 = fadd contract double %52, %54\l  %56 = fadd contract double %55, 0x3BC79CA10C924223\l  %57 = fdiv contract double %50, %56\l  %58 = getelementptr inbounds double, double addrspace(1)* %0, i64 %47\l  store double %57, double addrspace(1)* %58, align 8, !tbaa !7\l  br label %59\l}"];
	Node0x5052e80 -> Node0x5053d50;
	Node0x5053d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%59:\l59:                                               \l  %60 = phi i64 [ %47, %38 ], [ %37, %34 ]\l  %61 = phi i32 [ %45, %38 ], [ 0, %34 ]\l  %62 = add nsw i32 %9, -1\l  %63 = add i32 %62, %20\l  %64 = srem i32 %63, %9\l  %65 = add nsw i32 %64, %61\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds double, double addrspace(1)* %4, i64 %66\l  %68 = load double, double addrspace(1)* %67, align 8, !tbaa !7\l  %69 = getelementptr inbounds double, double addrspace(1)* %5, i64 %60\l  %70 = load double, double addrspace(1)* %69, align 8, !tbaa !7\l  %71 = fadd contract double %68, %70\l  %72 = getelementptr inbounds double, double addrspace(1)* %2, i64 %60\l  %73 = load double, double addrspace(1)* %72, align 8, !tbaa !7\l  %74 = getelementptr inbounds double, double addrspace(1)* %2, i64 %66\l  %75 = load double, double addrspace(1)* %74, align 8, !tbaa !7\l  %76 = fadd contract double %73, %75\l  %77 = fadd contract double %76, 1.000000e-15\l  %78 = fdiv contract double %71, %77\l  %79 = sext i32 %28 to i64\l  %80 = getelementptr inbounds double, double addrspace(1)* %3, i64 %79\l  %81 = load double, double addrspace(1)* %80, align 8, !tbaa !7\l  %82 = fdiv contract double %78, %81\l  %83 = fmul contract double %81, %10\l  %84 = fsub contract double %82, %83\l  %85 = getelementptr inbounds double, double addrspace(1)* %1, i64 %60\l  store double %84, double addrspace(1)* %85, align 8, !tbaa !7\l  br label %86\l}"];
	Node0x5053d50 -> Node0x5052b30;
	Node0x5052b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  ret void\l}"];
}
