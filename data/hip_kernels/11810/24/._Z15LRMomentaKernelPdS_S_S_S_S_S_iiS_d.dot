digraph "CFG for '_Z15LRMomentaKernelPdS_S_S_S_S_S_iiS_d' function" {
	label="CFG for '_Z15LRMomentaKernelPdS_S_S_S_S_S_iiS_d' function";

	Node0x53001f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = add i32 %19, %12\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !5, !invariant.load !6\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = add i32 %27, %21\l  %29 = icmp slt i32 %28, %7\l  %30 = icmp slt i32 %20, %8\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %75\l|{<s0>T|<s1>F}}"];
	Node0x53001f0:s0 -> Node0x5304800;
	Node0x53001f0:s1 -> Node0x5304890;
	Node0x5304800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = mul nsw i32 %28, %8\l  %34 = add nsw i32 %33, %20\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds double, double addrspace(1)* %4, i64 %35\l  %37 = load double, double addrspace(1)* %36, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %38 = add nsw i32 %28, 1\l  %39 = mul nsw i32 %38, %8\l  %40 = add nsw i32 %39, %20\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %5, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %44 = fmul contract double %37, %43\l  %45 = getelementptr inbounds double, double addrspace(1)* %0, i64 %35\l  store double %44, double addrspace(1)* %45, align 8, !tbaa !7\l  %46 = load double, double addrspace(1)* %36, align 8, !tbaa !7\l  %47 = getelementptr inbounds double, double addrspace(1)* %5, i64 %35\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !7\l  %49 = fmul contract double %46, %48\l  %50 = getelementptr inbounds double, double addrspace(1)* %1, i64 %35\l  store double %49, double addrspace(1)* %50, align 8, !tbaa !7\l  %51 = load double, double addrspace(1)* %36, align 8, !tbaa !7\l  %52 = add nsw i32 %20, 1\l  %53 = srem i32 %52, %8\l  %54 = add nsw i32 %53, %33\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds double, double addrspace(1)* %6, i64 %55\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !7\l  %58 = sext i32 %28 to i64\l  %59 = getelementptr inbounds double, double addrspace(1)* %9, i64 %58\l  %60 = load double, double addrspace(1)* %59, align 8, !tbaa !7\l  %61 = fmul contract double %60, %10\l  %62 = fadd contract double %57, %61\l  %63 = fmul contract double %51, %62\l  %64 = fmul contract double %60, %63\l  %65 = getelementptr inbounds double, double addrspace(1)* %2, i64 %35\l  store double %64, double addrspace(1)* %65, align 8, !tbaa !7\l  %66 = load double, double addrspace(1)* %36, align 8, !tbaa !7\l  %67 = getelementptr inbounds double, double addrspace(1)* %6, i64 %35\l  %68 = load double, double addrspace(1)* %67, align 8, !tbaa !7\l  %69 = load double, double addrspace(1)* %59, align 8, !tbaa !7\l  %70 = fmul contract double %69, %10\l  %71 = fadd contract double %68, %70\l  %72 = fmul contract double %66, %71\l  %73 = fmul contract double %69, %72\l  %74 = getelementptr inbounds double, double addrspace(1)* %3, i64 %35\l  store double %73, double addrspace(1)* %74, align 8, !tbaa !7\l  br label %75\l}"];
	Node0x5304800 -> Node0x5304890;
	Node0x5304890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  ret void\l}"];
}
