digraph "CFG for '_Z22UpdateVelocitiesKernelPdS_S_S_S_S_S_S_S_S_S_S_S_dii' function" {
	label="CFG for '_Z22UpdateVelocitiesKernelPdS_S_S_S_S_S_S_S_S_S_S_S_dii' function";

	Node0x5b2c2a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = add i32 %24, %17\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %27 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %28 = getelementptr i8, i8 addrspace(4)* %18, i64 6\l  %29 = bitcast i8 addrspace(4)* %28 to i16 addrspace(4)*\l  %30 = load i16, i16 addrspace(4)* %29, align 2, !range !5, !invariant.load !6\l  %31 = zext i16 %30 to i32\l  %32 = mul i32 %27, %31\l  %33 = add i32 %32, %26\l  %34 = icmp sgt i32 %33, 0\l  %35 = add nsw i32 %14, -1\l  %36 = icmp slt i32 %33, %35\l  %37 = select i1 %34, i1 %36, i1 false\l  %38 = icmp slt i32 %25, %15\l  %39 = select i1 %37, i1 %38, i1 false\l  br i1 %39, label %40, label %95\l|{<s0>T|<s1>F}}"];
	Node0x5b2c2a0:s0 -> Node0x5b30cd0;
	Node0x5b2c2a0:s1 -> Node0x5b30d60;
	Node0x5b30cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%40:\l40:                                               \l  %41 = sitofp i32 %15 to double\l  %42 = fdiv contract double 0x401921FB54442D18, %41\l  %43 = fdiv contract double 1.000000e+00, %42\l  %44 = zext i32 %33 to i64\l  %45 = getelementptr inbounds double, double addrspace(1)* %2, i64 %44\l  %46 = load double, double addrspace(1)* %45, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %47 = fmul contract double %46, %13\l  %48 = getelementptr inbounds double, double addrspace(1)* %4, i64 %44\l  %49 = load double, double addrspace(1)* %48, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %50 = add nuw nsw i32 %33, 1\l  %51 = mul nsw i32 %50, %15\l  %52 = add nsw i32 %51, %25\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds double, double addrspace(1)* %11, i64 %53\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %56 = fmul contract double %49, %55\l  %57 = getelementptr inbounds double, double addrspace(1)* %5, i64 %44\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %59 = mul nsw i32 %33, %15\l  %60 = add nsw i32 %59, %25\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds double, double addrspace(1)* %11, i64 %61\l  %63 = load double, double addrspace(1)* %62, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %64 = fmul contract double %58, %63\l  %65 = fsub contract double %56, %64\l  %66 = getelementptr inbounds double, double addrspace(1)* %7, i64 %44\l  %67 = load double, double addrspace(1)* %66, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %68 = fmul contract double %67, %65\l  %69 = getelementptr inbounds double, double addrspace(1)* %12, i64 %61\l  %70 = load double, double addrspace(1)* %69, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %71 = add nsw i32 %15, -1\l  %72 = add i32 %71, %25\l  %73 = srem i32 %72, %15\l  %74 = add nsw i32 %73, %59\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds double, double addrspace(1)* %12, i64 %75\l  %77 = load double, double addrspace(1)* %76, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %78 = fsub contract double %70, %77\l  %79 = fmul contract double %43, %78\l  %80 = fadd contract double %68, %79\l  %81 = fadd contract double %55, %63\l  %82 = fmul contract double %81, 5.000000e-01\l  %83 = fadd contract double %82, %80\l  %84 = fmul contract double %47, %83\l  %85 = getelementptr inbounds double, double addrspace(1)* %8, i64 %61\l  %86 = load double, double addrspace(1)* %85, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %87 = getelementptr inbounds double, double addrspace(1)* %8, i64 %75\l  %88 = load double, double addrspace(1)* %87, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %89 = fadd contract double %86, %88\l  %90 = fmul contract double %89, 5.000000e-01\l  %91 = fdiv contract double %84, %90\l  %92 = getelementptr inbounds double, double addrspace(1)* %0, i64 %61\l  %93 = load double, double addrspace(1)* %92, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %94 = fadd contract double %93, %91\l  store double %94, double addrspace(1)* %92, align 8, !tbaa !7\l  br label %95\l}"];
	Node0x5b30cd0 -> Node0x5b30d60;
	Node0x5b30d60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%95:\l95:                                               \l  %96 = icmp slt i32 %33, %14\l  %97 = select i1 %34, i1 %96, i1 false\l  %98 = select i1 %97, i1 %38, i1 false\l  br i1 %98, label %99, label %158\l|{<s0>T|<s1>F}}"];
	Node0x5b30d60:s0 -> Node0x5b34610;
	Node0x5b30d60:s1 -> Node0x5b34660;
	Node0x5b34610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%99:\l99:                                               \l  %100 = sitofp i32 %15 to double\l  %101 = fdiv contract double 0x401921FB54442D18, %100\l  %102 = fdiv contract double 1.000000e+00, %101\l  %103 = zext i32 %33 to i64\l  %104 = getelementptr inbounds double, double addrspace(1)* %9, i64 %103\l  %105 = load double, double addrspace(1)* %104, align 8, !tbaa !7\l  %106 = fmul contract double %105, %13\l  %107 = getelementptr inbounds double, double addrspace(1)* %3, i64 %103\l  %108 = load double, double addrspace(1)* %107, align 8, !tbaa !7\l  %109 = mul nsw i32 %33, %15\l  %110 = add nsw i32 %109, %25\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds double, double addrspace(1)* %10, i64 %111\l  %113 = load double, double addrspace(1)* %112, align 8, !tbaa !7\l  %114 = fmul contract double %108, %113\l  %115 = add nsw i32 %33, -1\l  %116 = zext i32 %115 to i64\l  %117 = getelementptr inbounds double, double addrspace(1)* %3, i64 %116\l  %118 = load double, double addrspace(1)* %117, align 8, !tbaa !7\l  %119 = mul nsw i32 %115, %15\l  %120 = add nsw i32 %119, %25\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds double, double addrspace(1)* %10, i64 %121\l  %123 = load double, double addrspace(1)* %122, align 8, !tbaa !7\l  %124 = fmul contract double %118, %123\l  %125 = fsub contract double %114, %124\l  %126 = getelementptr inbounds double, double addrspace(1)* %6, i64 %103\l  %127 = load double, double addrspace(1)* %126, align 8, !tbaa !7\l  %128 = fmul contract double %127, %125\l  %129 = add nsw i32 %25, 1\l  %130 = srem i32 %129, %15\l  %131 = add nsw i32 %130, %109\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds double, double addrspace(1)* %11, i64 %132\l  %134 = load double, double addrspace(1)* %133, align 8, !tbaa !7\l  %135 = getelementptr inbounds double, double addrspace(1)* %11, i64 %111\l  %136 = load double, double addrspace(1)* %135, align 8, !tbaa !7\l  %137 = fsub contract double %134, %136\l  %138 = fmul contract double %102, %137\l  %139 = fadd contract double %128, %138\l  %140 = getelementptr inbounds double, double addrspace(1)* %12, i64 %111\l  %141 = load double, double addrspace(1)* %140, align 8, !tbaa !7\l  %142 = getelementptr inbounds double, double addrspace(1)* %12, i64 %121\l  %143 = load double, double addrspace(1)* %142, align 8, !tbaa !7\l  %144 = fadd contract double %141, %143\l  %145 = fmul contract double %144, 5.000000e-01\l  %146 = fsub contract double %139, %145\l  %147 = fmul contract double %106, %146\l  %148 = getelementptr inbounds double, double addrspace(1)* %8, i64 %111\l  %149 = load double, double addrspace(1)* %148, align 8, !tbaa !7\l  %150 = getelementptr inbounds double, double addrspace(1)* %8, i64 %121\l  %151 = load double, double addrspace(1)* %150, align 8, !tbaa !7\l  %152 = fadd contract double %149, %151\l  %153 = fmul contract double %152, 5.000000e-01\l  %154 = fdiv contract double %147, %153\l  %155 = getelementptr inbounds double, double addrspace(1)* %1, i64 %111\l  %156 = load double, double addrspace(1)* %155, align 8, !tbaa !7\l  %157 = fadd contract double %156, %154\l  store double %157, double addrspace(1)* %155, align 8, !tbaa !7\l  br label %158\l}"];
	Node0x5b34610 -> Node0x5b34660;
	Node0x5b34660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%158:\l158:                                              \l  ret void\l}"];
}
