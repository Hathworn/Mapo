digraph "CFG for '_Z20ConditionCFLKernel1DPdS_S_iiS_S_' function" {
	label="CFG for '_Z20ConditionCFLKernel1DPdS_S_iiS_S_' function";

	Node0x51952a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = mul i32 %14, %13\l  %16 = add i32 %15, %8\l  %17 = icmp slt i32 %16, %3\l  br i1 %17, label %18, label %103\l|{<s0>T|<s1>F}}"];
	Node0x51952a0:s0 -> Node0x51971e0;
	Node0x51952a0:s1 -> Node0x5197270;
	Node0x51971e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%18:\l18:                                               \l  %19 = sext i32 %16 to i64\l  %20 = getelementptr inbounds double, double addrspace(1)* %6, i64 %19\l  store double 0.000000e+00, double addrspace(1)* %20, align 8, !tbaa !7\l  %21 = icmp sgt i32 %4, 0\l  br i1 %21, label %22, label %99\l|{<s0>T|<s1>F}}"];
	Node0x51971e0:s0 -> Node0x5198160;
	Node0x51971e0:s1 -> Node0x51981f0;
	Node0x5198160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%22:\l22:                                               \l  %23 = mul nsw i32 %16, %4\l  %24 = and i32 %4, 7\l  %25 = icmp ult i32 %4, 8\l  br i1 %25, label %82, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5198160:s0 -> Node0x5198540;
	Node0x5198160:s1 -> Node0x5198590;
	Node0x5198590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%26:\l26:                                               \l  %27 = and i32 %4, -8\l  br label %28\l}"];
	Node0x5198590 -> Node0x5198790;
	Node0x5198790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%28:\l28:                                               \l  %29 = phi double [ 0.000000e+00, %26 ], [ %78, %28 ]\l  %30 = phi i32 [ 0, %26 ], [ %79, %28 ]\l  %31 = phi i32 [ 0, %26 ], [ %80, %28 ]\l  %32 = add nsw i32 %30, %23\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %5, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %36 = fadd contract double %35, %29\l  store double %36, double addrspace(1)* %20, align 8, !tbaa !7\l  %37 = or i32 %30, 1\l  %38 = add nsw i32 %37, %23\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds double, double addrspace(1)* %5, i64 %39\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !7\l  %42 = fadd contract double %41, %36\l  store double %42, double addrspace(1)* %20, align 8, !tbaa !7\l  %43 = or i32 %30, 2\l  %44 = add nsw i32 %43, %23\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds double, double addrspace(1)* %5, i64 %45\l  %47 = load double, double addrspace(1)* %46, align 8, !tbaa !7\l  %48 = fadd contract double %47, %42\l  store double %48, double addrspace(1)* %20, align 8, !tbaa !7\l  %49 = or i32 %30, 3\l  %50 = add nsw i32 %49, %23\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds double, double addrspace(1)* %5, i64 %51\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !7\l  %54 = fadd contract double %53, %48\l  store double %54, double addrspace(1)* %20, align 8, !tbaa !7\l  %55 = or i32 %30, 4\l  %56 = add nsw i32 %55, %23\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds double, double addrspace(1)* %5, i64 %57\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !7\l  %60 = fadd contract double %59, %54\l  store double %60, double addrspace(1)* %20, align 8, !tbaa !7\l  %61 = or i32 %30, 5\l  %62 = add nsw i32 %61, %23\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds double, double addrspace(1)* %5, i64 %63\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !7\l  %66 = fadd contract double %65, %60\l  store double %66, double addrspace(1)* %20, align 8, !tbaa !7\l  %67 = or i32 %30, 6\l  %68 = add nsw i32 %67, %23\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds double, double addrspace(1)* %5, i64 %69\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !7\l  %72 = fadd contract double %71, %66\l  store double %72, double addrspace(1)* %20, align 8, !tbaa !7\l  %73 = or i32 %30, 7\l  %74 = add nsw i32 %73, %23\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds double, double addrspace(1)* %5, i64 %75\l  %77 = load double, double addrspace(1)* %76, align 8, !tbaa !7\l  %78 = fadd contract double %77, %72\l  store double %78, double addrspace(1)* %20, align 8, !tbaa !7\l  %79 = add nuw nsw i32 %30, 8\l  %80 = add i32 %31, 8\l  %81 = icmp eq i32 %80, %27\l  br i1 %81, label %82, label %28, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5198790:s0 -> Node0x5198540;
	Node0x5198790:s1 -> Node0x5198790;
	Node0x5198540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%82:\l82:                                               \l  %83 = phi double [ undef, %22 ], [ %78, %28 ]\l  %84 = phi double [ 0.000000e+00, %22 ], [ %78, %28 ]\l  %85 = phi i32 [ 0, %22 ], [ %79, %28 ]\l  %86 = icmp eq i32 %24, 0\l  br i1 %86, label %99, label %87\l|{<s0>T|<s1>F}}"];
	Node0x5198540:s0 -> Node0x51981f0;
	Node0x5198540:s1 -> Node0x519bca0;
	Node0x519bca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  %88 = phi double [ %95, %87 ], [ %84, %82 ]\l  %89 = phi i32 [ %96, %87 ], [ %85, %82 ]\l  %90 = phi i32 [ %97, %87 ], [ 0, %82 ]\l  %91 = add nsw i32 %89, %23\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds double, double addrspace(1)* %5, i64 %92\l  %94 = load double, double addrspace(1)* %93, align 8, !tbaa !7\l  %95 = fadd contract double %94, %88\l  store double %95, double addrspace(1)* %20, align 8, !tbaa !7\l  %96 = add nuw nsw i32 %89, 1\l  %97 = add i32 %90, 1\l  %98 = icmp eq i32 %97, %24\l  br i1 %98, label %99, label %87, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x519bca0:s0 -> Node0x51981f0;
	Node0x519bca0:s1 -> Node0x519bca0;
	Node0x51981f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%99:\l99:                                               \l  %100 = phi double [ 0.000000e+00, %18 ], [ %83, %82 ], [ %95, %87 ]\l  %101 = sitofp i32 %4 to double\l  %102 = fdiv contract double %100, %101\l  store double %102, double addrspace(1)* %20, align 8, !tbaa !7\l  br label %103\l}"];
	Node0x51981f0 -> Node0x5197270;
	Node0x5197270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%103:\l103:                                              \l  ret void\l}"];
}
