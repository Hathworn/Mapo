digraph "CFG for '_Z28NonReflectingBoundaryKernel2PdS_iiS_S_didi' function" {
	label="CFG for '_Z28NonReflectingBoundaryKernel2PdS_iiS_S_didi' function";

	Node0x472dc20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = mul i32 %17, %16\l  %19 = add i32 %18, %11\l  %20 = add nsw i32 %19, %3\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds double, double addrspace(1)* %5, i64 %21\l  %23 = load double, double addrspace(1)* %22, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %24 = fneg contract double %23\l  %25 = getelementptr inbounds double, double addrspace(1)* %0, i64 %21\l  %26 = load double, double addrspace(1)* %25, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %27 = fsub contract double %26, %6\l  %28 = fmul contract double %27, %24\l  %29 = fdiv contract double %28, %6\l  %30 = fmul contract double %29, 2.000000e+00\l  %31 = shl nsw i32 %3, 1\l  %32 = add nsw i32 %19, %31\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %4, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %36 = fsub contract double %30, %35\l  %37 = getelementptr inbounds double, double addrspace(1)* %4, i64 %21\l  store double %36, double addrspace(1)* %37, align 8, !tbaa !7\l  %38 = add nsw i32 %7, -1\l  %39 = mul nsw i32 %38, %3\l  %40 = add nsw i32 %19, %39\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %5, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !7\l  %44 = add nsw i32 %7, -2\l  %45 = mul nsw i32 %44, %3\l  %46 = add nsw i32 %19, %45\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds double, double addrspace(1)* %0, i64 %47\l  %49 = load double, double addrspace(1)* %48, align 8, !tbaa !7\l  %50 = fsub contract double %49, %8\l  %51 = fmul contract double %43, %50\l  %52 = fdiv contract double %51, %8\l  %53 = fmul contract double %52, 2.000000e+00\l  %54 = getelementptr inbounds double, double addrspace(1)* %4, i64 %47\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !7\l  %56 = fsub contract double %53, %55\l  %57 = getelementptr inbounds double, double addrspace(1)* %4, i64 %41\l  store double %56, double addrspace(1)* %57, align 8, !tbaa !7\l  ret void\l}"];
}
