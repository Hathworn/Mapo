digraph "CFG for '_Z35ComputeAverageThetaVelocitiesKernelPdS_ii' function" {
	label="CFG for '_Z35ComputeAverageThetaVelocitiesKernelPdS_ii' function";

	Node0x5f34fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %5\l  %14 = icmp slt i32 %13, %3\l  br i1 %14, label %15, label %100\l|{<s0>T|<s1>F}}"];
	Node0x5f34fa0:s0 -> Node0x5f36eb0;
	Node0x5f34fa0:s1 -> Node0x5f36f40;
	Node0x5f36eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%15:\l15:                                               \l  %16 = icmp sgt i32 %2, 0\l  br i1 %16, label %17, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5f36eb0:s0 -> Node0x5f366e0;
	Node0x5f36eb0:s1 -> Node0x5f37220;
	Node0x5f366e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%17:\l17:                                               \l  %18 = mul nsw i32 %13, %2\l  %19 = and i32 %2, 7\l  %20 = icmp ult i32 %2, 8\l  br i1 %20, label %23, label %21\l|{<s0>T|<s1>F}}"];
	Node0x5f366e0:s0 -> Node0x5f37530;
	Node0x5f366e0:s1 -> Node0x5f37580;
	Node0x5f37580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%21:\l21:                                               \l  %22 = and i32 %2, -8\l  br label %46\l}"];
	Node0x5f37580 -> Node0x5f37780;
	Node0x5f37530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%23:\l23:                                               \l  %24 = phi double [ undef, %17 ], [ %96, %46 ]\l  %25 = phi i32 [ 0, %17 ], [ %97, %46 ]\l  %26 = phi double [ 0.000000e+00, %17 ], [ %96, %46 ]\l  %27 = icmp eq i32 %19, 0\l  br i1 %27, label %40, label %28\l|{<s0>T|<s1>F}}"];
	Node0x5f37530:s0 -> Node0x5f37220;
	Node0x5f37530:s1 -> Node0x5f389f0;
	Node0x5f389f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %37, %28 ], [ %25, %23 ]\l  %30 = phi double [ %36, %28 ], [ %26, %23 ]\l  %31 = phi i32 [ %38, %28 ], [ 0, %23 ]\l  %32 = add nsw i32 %29, %18\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %0, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %36 = fadd contract double %30, %35\l  %37 = add nuw nsw i32 %29, 1\l  %38 = add i32 %31, 1\l  %39 = icmp eq i32 %38, %19\l  br i1 %39, label %40, label %28, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5f389f0:s0 -> Node0x5f37220;
	Node0x5f389f0:s1 -> Node0x5f389f0;
	Node0x5f37220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%40:\l40:                                               \l  %41 = phi double [ 0.000000e+00, %15 ], [ %24, %23 ], [ %36, %28 ]\l  %42 = sitofp i32 %2 to double\l  %43 = fdiv contract double %41, %42\l  %44 = sext i32 %13 to i64\l  %45 = getelementptr inbounds double, double addrspace(1)* %1, i64 %44\l  store double %43, double addrspace(1)* %45, align 8, !tbaa !7\l  br label %100\l}"];
	Node0x5f37220 -> Node0x5f36f40;
	Node0x5f37780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%46:\l46:                                               \l  %47 = phi i32 [ 0, %21 ], [ %97, %46 ]\l  %48 = phi double [ 0.000000e+00, %21 ], [ %96, %46 ]\l  %49 = phi i32 [ 0, %21 ], [ %98, %46 ]\l  %50 = add nsw i32 %47, %18\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds double, double addrspace(1)* %0, i64 %51\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %54 = fadd contract double %48, %53\l  %55 = or i32 %47, 1\l  %56 = add nsw i32 %55, %18\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds double, double addrspace(1)* %0, i64 %57\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %60 = fadd contract double %54, %59\l  %61 = or i32 %47, 2\l  %62 = add nsw i32 %61, %18\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds double, double addrspace(1)* %0, i64 %63\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %66 = fadd contract double %60, %65\l  %67 = or i32 %47, 3\l  %68 = add nsw i32 %67, %18\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds double, double addrspace(1)* %0, i64 %69\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %72 = fadd contract double %66, %71\l  %73 = or i32 %47, 4\l  %74 = add nsw i32 %73, %18\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds double, double addrspace(1)* %0, i64 %75\l  %77 = load double, double addrspace(1)* %76, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %78 = fadd contract double %72, %77\l  %79 = or i32 %47, 5\l  %80 = add nsw i32 %79, %18\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds double, double addrspace(1)* %0, i64 %81\l  %83 = load double, double addrspace(1)* %82, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %84 = fadd contract double %78, %83\l  %85 = or i32 %47, 6\l  %86 = add nsw i32 %85, %18\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds double, double addrspace(1)* %0, i64 %87\l  %89 = load double, double addrspace(1)* %88, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %90 = fadd contract double %84, %89\l  %91 = or i32 %47, 7\l  %92 = add nsw i32 %91, %18\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds double, double addrspace(1)* %0, i64 %93\l  %95 = load double, double addrspace(1)* %94, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %96 = fadd contract double %90, %95\l  %97 = add nuw nsw i32 %47, 8\l  %98 = add i32 %49, 8\l  %99 = icmp eq i32 %98, %22\l  br i1 %99, label %23, label %46, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5f37780:s0 -> Node0x5f37530;
	Node0x5f37780:s1 -> Node0x5f37780;
	Node0x5f36f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%100:\l100:                                              \l  ret void\l}"];
}
