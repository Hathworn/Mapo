digraph "CFG for '_Z18VanLeerThetaKernelPdS_S_diiiPiS_S_S_S_' function" {
	label="CFG for '_Z18VanLeerThetaKernelPdS_S_diiiPiS_S_S_S_' function";

	Node0x517f3b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %13\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %24 = getelementptr i8, i8 addrspace(4)* %14, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !5, !invariant.load !6\l  %27 = zext i16 %26 to i32\l  %28 = mul i32 %23, %27\l  %29 = add i32 %28, %22\l  %30 = icmp slt i32 %29, %4\l  %31 = icmp slt i32 %21, %5\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %80\l|{<s0>T|<s1>F}}"];
	Node0x517f3b0:s0 -> Node0x5181860;
	Node0x517f3b0:s1 -> Node0x51818f0;
	Node0x5181860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%33:\l33:                                               \l  %34 = icmp eq i32 %6, 0\l  %35 = sext i32 %29 to i64\l  br i1 %34, label %40, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5181860:s0 -> Node0x5183e30;
	Node0x5181860:s1 -> Node0x5183e80;
	Node0x5183e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%36:\l36:                                               \l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %35\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %39 = icmp eq i32 %38, 0\l  br i1 %39, label %40, label %80\l|{<s0>T|<s1>F}}"];
	Node0x5183e80:s0 -> Node0x5183e30;
	Node0x5183e80:s1 -> Node0x51818f0;
	Node0x5183e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%40:\l40:                                               \l  %41 = getelementptr inbounds double, double addrspace(1)* %0, i64 %35\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !11,\l... !amdgpu.noclobber !6\l  %43 = getelementptr inbounds double, double addrspace(1)* %1, i64 %35\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !11,\l... !amdgpu.noclobber !6\l  %45 = fsub contract double %42, %44\l  %46 = fmul contract double %45, %3\l  %47 = getelementptr inbounds double, double addrspace(1)* %2, i64 %35\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !11,\l... !amdgpu.noclobber !6\l  %49 = fdiv contract double 1.000000e+00, %48\l  %50 = mul nsw i32 %29, %5\l  %51 = add nsw i32 %50, %21\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds double, double addrspace(1)* %8, i64 %52\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !11,\l... !amdgpu.noclobber !6\l  %55 = fmul contract double %46, %54\l  %56 = getelementptr inbounds double, double addrspace(1)* %9, i64 %52\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !11,\l... !amdgpu.noclobber !6\l  %58 = fmul contract double %55, %57\l  %59 = getelementptr inbounds double, double addrspace(1)* %10, i64 %52\l  %60 = load double, double addrspace(1)* %59, align 8, !tbaa !11,\l... !amdgpu.noclobber !6\l  %61 = fmul contract double %58, %60\l  %62 = add nsw i32 %21, 1\l  %63 = srem i32 %62, %5\l  %64 = add nsw i32 %63, %50\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds double, double addrspace(1)* %8, i64 %65\l  %67 = load double, double addrspace(1)* %66, align 8, !tbaa !11,\l... !amdgpu.noclobber !6\l  %68 = fmul contract double %46, %67\l  %69 = getelementptr inbounds double, double addrspace(1)* %9, i64 %65\l  %70 = load double, double addrspace(1)* %69, align 8, !tbaa !11,\l... !amdgpu.noclobber !6\l  %71 = fmul contract double %68, %70\l  %72 = getelementptr inbounds double, double addrspace(1)* %10, i64 %65\l  %73 = load double, double addrspace(1)* %72, align 8, !tbaa !11,\l... !amdgpu.noclobber !6\l  %74 = fmul contract double %71, %73\l  %75 = fsub contract double %61, %74\l  %76 = fmul contract double %49, %75\l  %77 = getelementptr inbounds double, double addrspace(1)* %11, i64 %52\l  %78 = load double, double addrspace(1)* %77, align 8, !tbaa !11,\l... !amdgpu.noclobber !6\l  %79 = fadd contract double %78, %76\l  store double %79, double addrspace(1)* %77, align 8, !tbaa !11\l  br label %80\l}"];
	Node0x5183e30 -> Node0x51818f0;
	Node0x51818f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  ret void\l}"];
}
