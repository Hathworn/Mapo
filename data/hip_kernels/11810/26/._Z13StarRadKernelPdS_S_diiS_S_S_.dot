digraph "CFG for '_Z13StarRadKernelPdS_S_diiS_S_S_' function" {
	label="CFG for '_Z13StarRadKernelPdS_S_diiS_S_S_' function";

	Node0x5e1b140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %12, %16\l  %18 = add i32 %17, %10\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !5, !invariant.load !6\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = add i32 %25, %19\l  %27 = icmp slt i32 %26, %4\l  %28 = icmp slt i32 %18, %5\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %76\l|{<s0>T|<s1>F}}"];
	Node0x5e1b140:s0 -> Node0x5e1f710;
	Node0x5e1b140:s1 -> Node0x5e1f7a0;
	Node0x5e1f710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%30:\l30:                                               \l  %31 = icmp eq i32 %26, 0\l  %32 = add nsw i32 %4, -1\l  %33 = icmp eq i32 %26, %32\l  %34 = select i1 %31, i1 true, i1 %33\l  br i1 %34, label %70, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5e1f710:s0 -> Node0x5e1da90;
	Node0x5e1f710:s1 -> Node0x5e1fd20;
	Node0x5e1fd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%35:\l35:                                               \l  %36 = mul nsw i32 %26, %5\l  %37 = add nsw i32 %36, %18\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds double, double addrspace(1)* %0, i64 %38\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %41 = add nsw i32 %26, -1\l  %42 = mul nsw i32 %41, %5\l  %43 = add nsw i32 %42, %18\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds double, double addrspace(1)* %0, i64 %44\l  %46 = load double, double addrspace(1)* %45, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %47 = fsub contract double %40, %46\l  %48 = sext i32 %26 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %6, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %51 = fmul contract double %47, %50\l  %52 = add nsw i32 %26, 1\l  %53 = mul nsw i32 %52, %5\l  %54 = add nsw i32 %53, %18\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds double, double addrspace(1)* %0, i64 %55\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %58 = fsub contract double %57, %40\l  %59 = sext i32 %52 to i64\l  %60 = getelementptr inbounds double, double addrspace(1)* %6, i64 %59\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %62 = fmul contract double %58, %61\l  %63 = fmul contract double %51, %62\l  %64 = fcmp contract ogt double %63, 0.000000e+00\l  br i1 %64, label %65, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5e1fd20:s0 -> Node0x5e1fa60;
	Node0x5e1fd20:s1 -> Node0x5e1da90;
	Node0x5e1fa60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%65:\l65:                                               \l  %66 = fmul contract double %62, 2.000000e+00\l  %67 = fmul contract double %51, %66\l  %68 = fadd contract double %51, %62\l  %69 = fdiv contract double %67, %68\l  br label %70\l}"];
	Node0x5e1fa60 -> Node0x5e1da90;
	Node0x5e1da90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%70:\l70:                                               \l  %71 = phi double [ %69, %65 ], [ 0.000000e+00, %30 ], [ 0.000000e+00, %35 ]\l  %72 = mul nsw i32 %18, %4\l  %73 = add nsw i32 %26, %72\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds double, double addrspace(1)* %8, i64 %74\l  store double %71, double addrspace(1)* %75, align 8, !tbaa !7\l  br label %76\l}"];
	Node0x5e1da90 -> Node0x5e1f7a0;
	Node0x5e1f7a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  ret void\l}"];
}
