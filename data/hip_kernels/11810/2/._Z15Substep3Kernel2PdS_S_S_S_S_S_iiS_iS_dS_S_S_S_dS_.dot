digraph "CFG for '_Z15Substep3Kernel2PdS_S_S_S_S_S_iiS_iS_dS_S_S_S_dS_' function" {
	label="CFG for '_Z15Substep3Kernel2PdS_S_S_S_S_S_iiS_iS_dS_S_S_S_dS_' function";

	Node0x487b9a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %21 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %23 = getelementptr i8, i8 addrspace(4)* %21, i64 4\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !5, !invariant.load !6\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = add i32 %27, %20\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %30 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %31 = getelementptr i8, i8 addrspace(4)* %21, i64 6\l  %32 = bitcast i8 addrspace(4)* %31 to i16 addrspace(4)*\l  %33 = load i16, i16 addrspace(4)* %32, align 2, !range !5, !invariant.load !6\l  %34 = zext i16 %33 to i32\l  %35 = mul i32 %30, %34\l  %36 = add i32 %35, %29\l  %37 = icmp eq i32 %36, 0\l  %38 = icmp slt i32 %28, %8\l  %39 = select i1 %37, i1 %38, i1 false\l  br i1 %39, label %40, label %346\l|{<s0>T|<s1>F}}"];
	Node0x487b9a0:s0 -> Node0x48802f0;
	Node0x487b9a0:s1 -> Node0x4880380;
	Node0x48802f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%40:\l40:                                               \l  %41 = add nsw i32 %7, -1\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds double, double addrspace(1)* %2, i64 %42\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %45 = fcmp contract une double %44, 0.000000e+00\l  br i1 %45, label %46, label %342\l|{<s0>T|<s1>F}}"];
	Node0x48802f0:s0 -> Node0x4881390;
	Node0x48802f0:s1 -> Node0x4881420;
	Node0x4881390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%46:\l46:                                               \l  %47 = add nsw i32 %28, %8\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %1, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %51 = shl nsw i32 %8, 1\l  %52 = add nsw i32 %28, %51\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds double, double addrspace(1)* %1, i64 %53\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %56 = fdiv contract double %50, %55\l  %57 = tail call double @llvm.amdgcn.frexp.mant.f64(double %56)\l  %58 = fcmp olt double %57, 0x3FE5555555555555\l  %59 = zext i1 %58 to i32\l  %60 = tail call double @llvm.amdgcn.ldexp.f64(double %57, i32 %59)\l  %61 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %56)\l  %62 = sub nsw i32 %61, %59\l  %63 = fadd double %60, -1.000000e+00\l  %64 = fadd double %60, 1.000000e+00\l  %65 = fadd double %64, -1.000000e+00\l  %66 = fsub double %60, %65\l  %67 = tail call double @llvm.amdgcn.rcp.f64(double %64)\l  %68 = fneg double %64\l  %69 = tail call double @llvm.fma.f64(double %68, double %67, double\l... 1.000000e+00)\l  %70 = tail call double @llvm.fma.f64(double %69, double %67, double %67)\l  %71 = tail call double @llvm.fma.f64(double %68, double %70, double\l... 1.000000e+00)\l  %72 = tail call double @llvm.fma.f64(double %71, double %70, double %70)\l  %73 = fmul double %63, %72\l  %74 = fmul double %64, %73\l  %75 = fneg double %74\l  %76 = tail call double @llvm.fma.f64(double %73, double %64, double %75)\l  %77 = tail call double @llvm.fma.f64(double %73, double %66, double %76)\l  %78 = fadd double %74, %77\l  %79 = fsub double %78, %74\l  %80 = fsub double %77, %79\l  %81 = fsub double %63, %78\l  %82 = fsub double %63, %81\l  %83 = fsub double %82, %78\l  %84 = fsub double %83, %80\l  %85 = fadd double %81, %84\l  %86 = fmul double %72, %85\l  %87 = fadd double %73, %86\l  %88 = fsub double %87, %73\l  %89 = fsub double %86, %88\l  %90 = fmul double %87, %87\l  %91 = tail call double @llvm.fma.f64(double %90, double 0x3FC3AB76BF559E2B,\l... double 0x3FC385386B47B09A)\l  %92 = tail call double @llvm.fma.f64(double %90, double %91, double\l... 0x3FC7474DD7F4DF2E)\l  %93 = tail call double @llvm.fma.f64(double %90, double %92, double\l... 0x3FCC71C016291751)\l  %94 = tail call double @llvm.fma.f64(double %90, double %93, double\l... 0x3FD249249B27ACF1)\l  %95 = tail call double @llvm.fma.f64(double %90, double %94, double\l... 0x3FD99999998EF7B6)\l  %96 = tail call double @llvm.fma.f64(double %90, double %95, double\l... 0x3FE5555555555780)\l  %97 = tail call double @llvm.amdgcn.ldexp.f64(double %87, i32 1)\l  %98 = tail call double @llvm.amdgcn.ldexp.f64(double %89, i32 1)\l  %99 = fmul double %87, %90\l  %100 = fmul double %99, %96\l  %101 = fadd double %97, %100\l  %102 = fsub double %101, %97\l  %103 = fsub double %100, %102\l  %104 = fadd double %98, %103\l  %105 = fadd double %101, %104\l  %106 = fsub double %105, %101\l  %107 = fsub double %104, %106\l  %108 = sitofp i32 %62 to double\l  %109 = fmul double %108, 0x3FE62E42FEFA39EF\l  %110 = fneg double %109\l  %111 = tail call double @llvm.fma.f64(double %108, double\l... 0x3FE62E42FEFA39EF, double %110)\l  %112 = tail call double @llvm.fma.f64(double %108, double\l... 0x3C7ABC9E3B39803F, double %111)\l  %113 = fadd double %109, %112\l  %114 = fsub double %113, %109\l  %115 = fsub double %112, %114\l  %116 = fadd double %113, %105\l  %117 = fsub double %116, %113\l  %118 = fsub double %116, %117\l  %119 = fsub double %113, %118\l  %120 = fsub double %105, %117\l  %121 = fadd double %120, %119\l  %122 = fadd double %115, %107\l  %123 = fsub double %122, %115\l  %124 = fsub double %122, %123\l  %125 = fsub double %115, %124\l  %126 = fsub double %107, %123\l  %127 = fadd double %126, %125\l  %128 = fadd double %122, %121\l  %129 = fadd double %116, %128\l  %130 = fsub double %129, %116\l  %131 = fsub double %128, %130\l  %132 = fadd double %127, %131\l  %133 = fadd double %129, %132\l  %134 = tail call double @llvm.fabs.f64(double %56) #3\l  %135 = fcmp oeq double %134, 0x7FF0000000000000\l  %136 = select i1 %135, double %56, double %133\l  %137 = fcmp olt double %56, 0.000000e+00\l  %138 = select i1 %137, double 0x7FF8000000000000, double %136\l  %139 = fcmp oeq double %56, 0.000000e+00\l  %140 = select i1 %139, double 0xFFF0000000000000, double %138\l  %141 = load double, double addrspace(1)* %9, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %142 = getelementptr inbounds double, double addrspace(1)* %9, i64 1\l  %143 = bitcast double addrspace(1)* %142 to \<2 x double\> addrspace(1)*\l  %144 = load \<2 x double\>, \<2 x double\> addrspace(1)* %143, align 8, !tbaa !7\l  %145 = extractelement \<2 x double\> %144, i64 0\l  %146 = fdiv contract double %141, %145\l  %147 = tail call double @llvm.amdgcn.frexp.mant.f64(double %146)\l  %148 = fcmp olt double %147, 0x3FE5555555555555\l  %149 = zext i1 %148 to i32\l  %150 = tail call double @llvm.amdgcn.ldexp.f64(double %147, i32 %149)\l  %151 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %146)\l  %152 = sub nsw i32 %151, %149\l  %153 = fadd double %150, -1.000000e+00\l  %154 = fadd double %150, 1.000000e+00\l  %155 = fadd double %154, -1.000000e+00\l  %156 = fsub double %150, %155\l  %157 = tail call double @llvm.amdgcn.rcp.f64(double %154)\l  %158 = fneg double %154\l  %159 = tail call double @llvm.fma.f64(double %158, double %157, double\l... 1.000000e+00)\l  %160 = tail call double @llvm.fma.f64(double %159, double %157, double %157)\l  %161 = tail call double @llvm.fma.f64(double %158, double %160, double\l... 1.000000e+00)\l  %162 = tail call double @llvm.fma.f64(double %161, double %160, double %160)\l  %163 = fmul double %153, %162\l  %164 = fmul double %154, %163\l  %165 = fneg double %164\l  %166 = tail call double @llvm.fma.f64(double %163, double %154, double %165)\l  %167 = tail call double @llvm.fma.f64(double %163, double %156, double %166)\l  %168 = fadd double %164, %167\l  %169 = fsub double %168, %164\l  %170 = fsub double %167, %169\l  %171 = fsub double %153, %168\l  %172 = fsub double %153, %171\l  %173 = fsub double %172, %168\l  %174 = fsub double %173, %170\l  %175 = fadd double %171, %174\l  %176 = fmul double %162, %175\l  %177 = fadd double %163, %176\l  %178 = fsub double %177, %163\l  %179 = fsub double %176, %178\l  %180 = fmul double %177, %177\l  %181 = tail call double @llvm.fma.f64(double %180, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %182 = tail call double @llvm.fma.f64(double %180, double %181, double\l... 0x3FC7474DD7F4DF2E)\l  %183 = tail call double @llvm.fma.f64(double %180, double %182, double\l... 0x3FCC71C016291751)\l  %184 = tail call double @llvm.fma.f64(double %180, double %183, double\l... 0x3FD249249B27ACF1)\l  %185 = tail call double @llvm.fma.f64(double %180, double %184, double\l... 0x3FD99999998EF7B6)\l  %186 = tail call double @llvm.fma.f64(double %180, double %185, double\l... 0x3FE5555555555780)\l  %187 = tail call double @llvm.amdgcn.ldexp.f64(double %177, i32 1)\l  %188 = tail call double @llvm.amdgcn.ldexp.f64(double %179, i32 1)\l  %189 = fmul double %177, %180\l  %190 = fmul double %189, %186\l  %191 = fadd double %187, %190\l  %192 = fsub double %191, %187\l  %193 = fsub double %190, %192\l  %194 = fadd double %188, %193\l  %195 = fadd double %191, %194\l  %196 = fsub double %195, %191\l  %197 = fsub double %194, %196\l  %198 = sitofp i32 %152 to double\l  %199 = fmul double %198, 0x3FE62E42FEFA39EF\l  %200 = fneg double %199\l  %201 = tail call double @llvm.fma.f64(double %198, double\l... 0x3FE62E42FEFA39EF, double %200)\l  %202 = tail call double @llvm.fma.f64(double %198, double\l... 0x3C7ABC9E3B39803F, double %201)\l  %203 = fadd double %199, %202\l  %204 = fsub double %203, %199\l  %205 = fsub double %202, %204\l  %206 = fadd double %203, %195\l  %207 = fsub double %206, %203\l  %208 = fsub double %206, %207\l  %209 = fsub double %203, %208\l  %210 = fsub double %195, %207\l  %211 = fadd double %210, %209\l  %212 = fadd double %205, %197\l  %213 = fsub double %212, %205\l  %214 = fsub double %212, %213\l  %215 = fsub double %205, %214\l  %216 = fsub double %197, %213\l  %217 = fadd double %216, %215\l  %218 = fadd double %212, %211\l  %219 = fadd double %206, %218\l  %220 = fsub double %219, %206\l  %221 = fsub double %218, %220\l  %222 = fadd double %217, %221\l  %223 = fadd double %219, %222\l  %224 = tail call double @llvm.fabs.f64(double %146) #3\l  %225 = fcmp oeq double %224, 0x7FF0000000000000\l  %226 = select i1 %225, double %146, double %223\l  %227 = fcmp olt double %146, 0.000000e+00\l  %228 = select i1 %227, double 0x7FF8000000000000, double %226\l  %229 = fcmp oeq double %146, 0.000000e+00\l  %230 = select i1 %229, double 0xFFF0000000000000, double %228\l  %231 = fmul contract double %140, %230\l  %232 = extractelement \<2 x double\> %144, i64 1\l  %233 = fdiv contract double %145, %232\l  %234 = tail call double @llvm.amdgcn.frexp.mant.f64(double %233)\l  %235 = fcmp olt double %234, 0x3FE5555555555555\l  %236 = zext i1 %235 to i32\l  %237 = tail call double @llvm.amdgcn.ldexp.f64(double %234, i32 %236)\l  %238 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %233)\l  %239 = sub nsw i32 %238, %236\l  %240 = fadd double %237, -1.000000e+00\l  %241 = fadd double %237, 1.000000e+00\l  %242 = fadd double %241, -1.000000e+00\l  %243 = fsub double %237, %242\l  %244 = tail call double @llvm.amdgcn.rcp.f64(double %241)\l  %245 = fneg double %241\l  %246 = tail call double @llvm.fma.f64(double %245, double %244, double\l... 1.000000e+00)\l  %247 = tail call double @llvm.fma.f64(double %246, double %244, double %244)\l  %248 = tail call double @llvm.fma.f64(double %245, double %247, double\l... 1.000000e+00)\l  %249 = tail call double @llvm.fma.f64(double %248, double %247, double %247)\l  %250 = fmul double %240, %249\l  %251 = fmul double %241, %250\l  %252 = fneg double %251\l  %253 = tail call double @llvm.fma.f64(double %250, double %241, double %252)\l  %254 = tail call double @llvm.fma.f64(double %250, double %243, double %253)\l  %255 = fadd double %251, %254\l  %256 = fsub double %255, %251\l  %257 = fsub double %254, %256\l  %258 = fsub double %240, %255\l  %259 = fsub double %240, %258\l  %260 = fsub double %259, %255\l  %261 = fsub double %260, %257\l  %262 = fadd double %258, %261\l  %263 = fmul double %249, %262\l  %264 = fadd double %250, %263\l  %265 = fsub double %264, %250\l  %266 = fsub double %263, %265\l  %267 = fmul double %264, %264\l  %268 = tail call double @llvm.fma.f64(double %267, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %269 = tail call double @llvm.fma.f64(double %267, double %268, double\l... 0x3FC7474DD7F4DF2E)\l  %270 = tail call double @llvm.fma.f64(double %267, double %269, double\l... 0x3FCC71C016291751)\l  %271 = tail call double @llvm.fma.f64(double %267, double %270, double\l... 0x3FD249249B27ACF1)\l  %272 = tail call double @llvm.fma.f64(double %267, double %271, double\l... 0x3FD99999998EF7B6)\l  %273 = tail call double @llvm.fma.f64(double %267, double %272, double\l... 0x3FE5555555555780)\l  %274 = tail call double @llvm.amdgcn.ldexp.f64(double %264, i32 1)\l  %275 = tail call double @llvm.amdgcn.ldexp.f64(double %266, i32 1)\l  %276 = fmul double %264, %267\l  %277 = fmul double %276, %273\l  %278 = fadd double %274, %277\l  %279 = fsub double %278, %274\l  %280 = fsub double %277, %279\l  %281 = fadd double %275, %280\l  %282 = fadd double %278, %281\l  %283 = fsub double %282, %278\l  %284 = fsub double %281, %283\l  %285 = sitofp i32 %239 to double\l  %286 = fmul double %285, 0x3FE62E42FEFA39EF\l  %287 = fneg double %286\l  %288 = tail call double @llvm.fma.f64(double %285, double\l... 0x3FE62E42FEFA39EF, double %287)\l  %289 = tail call double @llvm.fma.f64(double %285, double\l... 0x3C7ABC9E3B39803F, double %288)\l  %290 = fadd double %286, %289\l  %291 = fsub double %290, %286\l  %292 = fsub double %289, %291\l  %293 = fadd double %290, %282\l  %294 = fsub double %293, %290\l  %295 = fsub double %293, %294\l  %296 = fsub double %290, %295\l  %297 = fsub double %282, %294\l  %298 = fadd double %297, %296\l  %299 = fadd double %292, %284\l  %300 = fsub double %299, %292\l  %301 = fsub double %299, %300\l  %302 = fsub double %292, %301\l  %303 = fsub double %284, %300\l  %304 = fadd double %303, %302\l  %305 = fadd double %299, %298\l  %306 = fadd double %293, %305\l  %307 = fsub double %306, %293\l  %308 = fsub double %305, %307\l  %309 = fadd double %304, %308\l  %310 = fadd double %306, %309\l  %311 = tail call double @llvm.fabs.f64(double %233) #3\l  %312 = fcmp oeq double %311, 0x7FF0000000000000\l  %313 = select i1 %312, double %233, double %310\l  %314 = fcmp olt double %233, 0.000000e+00\l  %315 = select i1 %314, double 0x7FF8000000000000, double %313\l  %316 = fcmp oeq double %233, 0.000000e+00\l  %317 = select i1 %316, double 0xFFF0000000000000, double %315\l  %318 = fdiv contract double %231, %317\l  %319 = fmul double %318, 0x3FF71547652B82FE\l  %320 = tail call double @llvm.rint.f64(double %319)\l  %321 = fneg double %320\l  %322 = tail call double @llvm.fma.f64(double %321, double\l... 0x3FE62E42FEFA39EF, double %318)\l  %323 = tail call double @llvm.fma.f64(double %321, double\l... 0x3C7ABC9E3B39803F, double %322)\l  %324 = tail call double @llvm.fma.f64(double %323, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %325 = tail call double @llvm.fma.f64(double %323, double %324, double\l... 0x3EC71DEE623FDE64)\l  %326 = tail call double @llvm.fma.f64(double %323, double %325, double\l... 0x3EFA01997C89E6B0)\l  %327 = tail call double @llvm.fma.f64(double %323, double %326, double\l... 0x3F2A01A014761F6E)\l  %328 = tail call double @llvm.fma.f64(double %323, double %327, double\l... 0x3F56C16C1852B7B0)\l  %329 = tail call double @llvm.fma.f64(double %323, double %328, double\l... 0x3F81111111122322)\l  %330 = tail call double @llvm.fma.f64(double %323, double %329, double\l... 0x3FA55555555502A1)\l  %331 = tail call double @llvm.fma.f64(double %323, double %330, double\l... 0x3FC5555555555511)\l  %332 = tail call double @llvm.fma.f64(double %323, double %331, double\l... 0x3FE000000000000B)\l  %333 = tail call double @llvm.fma.f64(double %323, double %332, double\l... 1.000000e+00)\l  %334 = tail call double @llvm.fma.f64(double %323, double %333, double\l... 1.000000e+00)\l  %335 = fptosi double %320 to i32\l  %336 = tail call double @llvm.amdgcn.ldexp.f64(double %334, i32 %335)\l  %337 = fcmp ogt double %318, 1.024000e+03\l  %338 = select i1 %337, double 0x7FF0000000000000, double %336\l  %339 = fcmp olt double %318, -1.075000e+03\l  %340 = select i1 %339, double 0.000000e+00, double %338\l  %341 = fmul contract double %50, %340\l  br label %342\l}"];
	Node0x4881390 -> Node0x4881420;
	Node0x4881420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%342:\l342:                                              \l  %343 = phi double [ %341, %46 ], [ 0.000000e+00, %40 ]\l  %344 = sext i32 %28 to i64\l  %345 = getelementptr inbounds double, double addrspace(1)* %1, i64 %344\l  store double %343, double addrspace(1)* %345, align 8, !tbaa !7\l  br label %346\l}"];
	Node0x4881420 -> Node0x4880380;
	Node0x4880380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%346:\l346:                                              \l  %347 = icmp slt i32 %36, %7\l  %348 = select i1 %347, i1 %38, i1 false\l  br i1 %348, label %349, label %411\l|{<s0>T|<s1>F}}"];
	Node0x4880380:s0 -> Node0x4891680;
	Node0x4880380:s1 -> Node0x48916d0;
	Node0x4891680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%349:\l349:                                              \l  %350 = icmp eq i32 %10, 0\l  br i1 %350, label %351, label %366\l|{<s0>T|<s1>F}}"];
	Node0x4891680:s0 -> Node0x4891860;
	Node0x4891680:s1 -> Node0x48918b0;
	Node0x4891860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%351:\l351:                                              \l  %352 = mul nsw i32 %36, %8\l  %353 = add nsw i32 %352, %28\l  %354 = sext i32 %353 to i64\l  %355 = getelementptr inbounds double, double addrspace(1)* %1, i64 %354\l  %356 = load double, double addrspace(1)* %355, align 8, !tbaa !7\l  %357 = fmul contract double %356, %12\l  %358 = getelementptr inbounds double, double addrspace(1)* %16, i64 %354\l  %359 = load double, double addrspace(1)* %358, align 8, !tbaa !7\l  %360 = fadd contract double %357, %359\l  %361 = fadd contract double %17, -1.000000e+00\l  %362 = fmul contract double %361, %12\l  %363 = getelementptr inbounds double, double addrspace(1)* %6, i64 %354\l  %364 = load double, double addrspace(1)* %363, align 8, !tbaa !7\l  %365 = fmul contract double %362, %364\l  br label %403\l}"];
	Node0x4891860 -> Node0x4892180;
	Node0x48918b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%366:\l366:                                              \l  %367 = sext i32 %36 to i64\l  %368 = getelementptr inbounds double, double addrspace(1)* %13, i64 %367\l  %369 = load double, double addrspace(1)* %368, align 8, !tbaa !7\l  %370 = fmul contract double %369, %12\l  %371 = mul nsw i32 %36, %8\l  %372 = add nsw i32 %371, %28\l  %373 = sext i32 %372 to i64\l  %374 = getelementptr inbounds double, double addrspace(1)* %0, i64 %373\l  %375 = load double, double addrspace(1)* %374, align 8, !tbaa !7\l  %376 = fmul contract double %370, %375\l  %377 = getelementptr inbounds double, double addrspace(1)* %14, i64 %367\l  %378 = load double, double addrspace(1)* %377, align 8, !tbaa !7\l  %379 = fdiv contract double %376, %378\l  %380 = getelementptr inbounds double, double addrspace(1)* %15, i64 %367\l  %381 = load double, double addrspace(1)* %380, align 8, !tbaa !7\l  %382 = getelementptr inbounds double, double addrspace(1)* %16, i64 %373\l  %383 = load double, double addrspace(1)* %382, align 8, !tbaa !7\l  %384 = fmul contract double %381, %383\l  %385 = fadd contract double %379, %384\l  %386 = fmul contract double %381, %12\l  %387 = getelementptr inbounds double, double addrspace(1)* %1, i64 %373\l  %388 = load double, double addrspace(1)* %387, align 8, !tbaa !7\l  %389 = getelementptr inbounds double, double addrspace(1)* %18, i64 %367\l  %390 = load double, double addrspace(1)* %389, align 8, !tbaa !7\l  %391 = fmul contract double %375, %390\l  %392 = fdiv contract double %391, %378\l  %393 = fsub contract double %388, %392\l  %394 = fmul contract double %386, %393\l  %395 = fadd contract double %385, %394\l  %396 = fadd contract double %381, %12\l  %397 = fadd contract double %17, -1.000000e+00\l  %398 = fmul contract double %397, %12\l  %399 = fmul contract double %398, %381\l  %400 = getelementptr inbounds double, double addrspace(1)* %6, i64 %373\l  %401 = load double, double addrspace(1)* %400, align 8, !tbaa !7\l  %402 = fmul contract double %399, %401\l  br label %403\l}"];
	Node0x48918b0 -> Node0x4892180;
	Node0x4892180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%403:\l403:                                              \l  %404 = phi double [ 1.000000e+00, %351 ], [ %402, %366 ]\l  %405 = phi double [ %365, %351 ], [ %396, %366 ]\l  %406 = phi double [ %360, %351 ], [ %395, %366 ]\l  %407 = phi i64 [ %354, %351 ], [ %373, %366 ]\l  %408 = fadd contract double %405, %404\l  %409 = fdiv contract double %406, %408\l  %410 = getelementptr inbounds double, double addrspace(1)* %11, i64 %407\l  store double %409, double addrspace(1)* %410, align 8, !tbaa !7\l  br label %411\l}"];
	Node0x4892180 -> Node0x48916d0;
	Node0x48916d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%411:\l411:                                              \l  ret void\l}"];
}
