digraph "CFG for '_Z6kernelPdS_S_S_iiS_S_S_iS_dS_S_S_S_' function" {
	label="CFG for '_Z6kernelPdS_S_S_iiS_S_S_iS_dS_S_S_S_' function";

	Node0x5b1c1a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = add i32 %24, %17\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %27 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %28 = getelementptr i8, i8 addrspace(4)* %18, i64 6\l  %29 = bitcast i8 addrspace(4)* %28 to i16 addrspace(4)*\l  %30 = load i16, i16 addrspace(4)* %29, align 2, !range !5, !invariant.load !6\l  %31 = zext i16 %30 to i32\l  %32 = mul i32 %27, %31\l  %33 = add i32 %32, %26\l  %34 = icmp sgt i32 %33, 0\l  %35 = icmp slt i32 %33, %4\l  %36 = select i1 %34, i1 %35, i1 false\l  %37 = icmp slt i32 %25, %5\l  %38 = select i1 %36, i1 %37, i1 false\l  br i1 %38, label %39, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5b1c1a0:s0 -> Node0x5b1c060;
	Node0x5b1c1a0:s1 -> Node0x5b20b90;
	Node0x5b1c060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%39:\l39:                                               \l  %40 = mul nsw i32 %33, %5\l  %41 = add nsw i32 %40, %25\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds double, double addrspace(1)* %0, i64 %42\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %45 = add nsw i32 %33, -1\l  %46 = mul nsw i32 %45, %5\l  %47 = add nsw i32 %46, %25\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %0, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %51 = fadd contract double %44, %50\l  %52 = getelementptr inbounds double, double addrspace(1)* %8, i64 %42\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %54 = getelementptr inbounds double, double addrspace(1)* %8, i64 %48\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %56 = fsub contract double %53, %55\l  %57 = getelementptr inbounds double, double addrspace(1)* %1, i64 %42\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %59 = fmul contract double %11, 2.000000e+00\l  %60 = fdiv contract double %59, %51\l  %61 = fmul contract double %60, %56\l  %62 = zext i32 %33 to i64\l  %63 = getelementptr inbounds double, double addrspace(1)* %6, i64 %62\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %65 = fmul contract double %61, %64\l  %66 = fsub contract double %58, %65\l  %67 = getelementptr inbounds double, double addrspace(1)* %12, i64 %42\l  store double %66, double addrspace(1)* %67, align 8, !tbaa !7\l  br label %68\l}"];
	Node0x5b1c060 -> Node0x5b20b90;
	Node0x5b20b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = select i1 %35, i1 %37, i1 false\l  br i1 %69, label %70, label %104\l|{<s0>T|<s1>F}}"];
	Node0x5b20b90:s0 -> Node0x5b207f0;
	Node0x5b20b90:s1 -> Node0x5b23360;
	Node0x5b207f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%70:\l70:                                               \l  %71 = sitofp i32 %5 to double\l  %72 = fdiv contract double 0x401921FB54442D18, %71\l  %73 = sext i32 %33 to i64\l  %74 = getelementptr inbounds double, double addrspace(1)* %10, i64 %73\l  %75 = load double, double addrspace(1)* %74, align 8, !tbaa !7\l  %76 = fmul contract double %72, %75\l  %77 = fdiv contract double 1.000000e+00, %76\l  %78 = mul nsw i32 %33, %5\l  %79 = add nsw i32 %78, %25\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds double, double addrspace(1)* %0, i64 %80\l  %82 = load double, double addrspace(1)* %81, align 8, !tbaa !7\l  %83 = add nsw i32 %5, -1\l  %84 = add i32 %83, %25\l  %85 = srem i32 %84, %5\l  %86 = add nsw i32 %85, %78\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds double, double addrspace(1)* %0, i64 %87\l  %89 = load double, double addrspace(1)* %88, align 8, !tbaa !7\l  %90 = fadd contract double %82, %89\l  %91 = getelementptr inbounds double, double addrspace(1)* %3, i64 %80\l  %92 = load double, double addrspace(1)* %91, align 8, !tbaa !7\l  %93 = getelementptr inbounds double, double addrspace(1)* %3, i64 %87\l  %94 = load double, double addrspace(1)* %93, align 8, !tbaa !7\l  %95 = fsub contract double %92, %94\l  %96 = getelementptr inbounds double, double addrspace(1)* %2, i64 %80\l  %97 = load double, double addrspace(1)* %96, align 8, !tbaa !7\l  %98 = fmul contract double %11, 2.000000e+00\l  %99 = fdiv contract double %98, %90\l  %100 = fmul contract double %99, %95\l  %101 = fmul contract double %77, %100\l  %102 = fsub contract double %97, %101\l  %103 = getelementptr inbounds double, double addrspace(1)* %13, i64 %80\l  store double %102, double addrspace(1)* %103, align 8, !tbaa !7\l  br label %104\l}"];
	Node0x5b207f0 -> Node0x5b23360;
	Node0x5b23360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%104:\l104:                                              \l  %105 = icmp ne i32 %9, 0\l  %106 = select i1 %105, i1 %35, i1 false\l  %107 = select i1 %106, i1 %37, i1 false\l  br i1 %107, label %108, label %154\l|{<s0>T|<s1>F}}"];
	Node0x5b23360:s0 -> Node0x5b24990;
	Node0x5b23360:s1 -> Node0x5b249e0;
	Node0x5b24990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%108:\l108:                                              \l  %109 = sitofp i32 %5 to double\l  %110 = fdiv contract double 0x401921FB54442D18, %109\l  %111 = sext i32 %33 to i64\l  %112 = getelementptr inbounds double, double addrspace(1)* %10, i64 %111\l  %113 = load double, double addrspace(1)* %112, align 8, !tbaa !7\l  %114 = fmul contract double %110, %113\l  %115 = fdiv contract double 1.000000e+00, %114\l  %116 = mul nsw i32 %33, %5\l  %117 = add nsw i32 %116, %25\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds double, double addrspace(1)* %14, i64 %118\l  %120 = load double, double addrspace(1)* %119, align 8, !tbaa !7\l  %121 = getelementptr inbounds double, double addrspace(1)* %8, i64 %118\l  %122 = load double, double addrspace(1)* %121, align 8, !tbaa !7\l  %123 = fmul contract double %122, %11\l  %124 = add nsw i32 %33, 1\l  %125 = mul nsw i32 %124, %5\l  %126 = add nsw i32 %125, %25\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds double, double addrspace(1)* %1, i64 %127\l  %129 = load double, double addrspace(1)* %128, align 8, !tbaa !7\l  %130 = getelementptr inbounds double, double addrspace(1)* %1, i64 %118\l  %131 = load double, double addrspace(1)* %130, align 8, !tbaa !7\l  %132 = fsub contract double %129, %131\l  %133 = fmul contract double %123, %132\l  %134 = getelementptr inbounds double, double addrspace(1)* %7, i64 %111\l  %135 = load double, double addrspace(1)* %134, align 8, !tbaa !7\l  %136 = fmul contract double %135, %133\l  %137 = fsub contract double %120, %136\l  %138 = getelementptr inbounds double, double addrspace(1)* %3, i64 %118\l  %139 = load double, double addrspace(1)* %138, align 8, !tbaa !7\l  %140 = fmul contract double %139, %11\l  %141 = add nsw i32 %25, 1\l  %142 = srem i32 %141, %5\l  %143 = add nsw i32 %142, %116\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds double, double addrspace(1)* %2, i64 %144\l  %146 = load double, double addrspace(1)* %145, align 8, !tbaa !7\l  %147 = getelementptr inbounds double, double addrspace(1)* %2, i64 %118\l  %148 = load double, double addrspace(1)* %147, align 8, !tbaa !7\l  %149 = fsub contract double %146, %148\l  %150 = fmul contract double %140, %149\l  %151 = fmul contract double %115, %150\l  %152 = fsub contract double %137, %151\l  %153 = getelementptr inbounds double, double addrspace(1)* %15, i64 %118\l  store double %152, double addrspace(1)* %153, align 8, !tbaa !7\l  br label %154\l}"];
	Node0x5b24990 -> Node0x5b249e0;
	Node0x5b249e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%154:\l154:                                              \l  ret void\l}"];
}
