digraph "CFG for '_Z15StarThetaKernelPdS_iiS_d' function" {
	label="CFG for '_Z15StarThetaKernelPdS_iiS_d' function";

	Node0x623e9e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %9, %13\l  %15 = add i32 %14, %7\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = add i32 %22, %16\l  %24 = icmp slt i32 %23, %2\l  %25 = icmp slt i32 %15, %3\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %64\l|{<s0>T|<s1>F}}"];
	Node0x623e9e0:s0 -> Node0x6242450;
	Node0x623e9e0:s1 -> Node0x62424e0;
	Node0x6242450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %23, %3\l  %29 = add nsw i32 %28, %15\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds double, double addrspace(1)* %0, i64 %30\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %33 = add nsw i32 %3, -1\l  %34 = add i32 %33, %15\l  %35 = srem i32 %34, %3\l  %36 = add nsw i32 %35, %28\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds double, double addrspace(1)* %0, i64 %37\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %40 = fsub contract double %32, %39\l  %41 = add nsw i32 %15, 1\l  %42 = srem i32 %41, %3\l  %43 = add nsw i32 %42, %28\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds double, double addrspace(1)* %0, i64 %44\l  %46 = load double, double addrspace(1)* %45, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %47 = fsub contract double %46, %32\l  %48 = fmul contract double %40, %47\l  %49 = fcmp contract ogt double %48, 0.000000e+00\l  br i1 %49, label %50, label %61\l|{<s0>T|<s1>F}}"];
	Node0x6242450:s0 -> Node0x62445f0;
	Node0x6242450:s1 -> Node0x6244680;
	Node0x62445f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%50:\l50:                                               \l  %51 = sitofp i32 %3 to double\l  %52 = fdiv contract double 0x401921FB54442D18, %51\l  %53 = sext i32 %23 to i64\l  %54 = getelementptr inbounds double, double addrspace(1)* %1, i64 %53\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %56 = fmul contract double %52, %55\l  %57 = fdiv contract double 1.000000e+00, %56\l  %58 = fadd contract double %40, %47\l  %59 = fdiv contract double %48, %58\l  %60 = fmul contract double %59, %57\l  br label %61\l}"];
	Node0x62445f0 -> Node0x6244680;
	Node0x6244680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%61:\l61:                                               \l  %62 = phi double [ %60, %50 ], [ 0.000000e+00, %27 ]\l  %63 = getelementptr inbounds double, double addrspace(1)* %4, i64 %30\l  store double %62, double addrspace(1)* %63, align 8, !tbaa !7\l  br label %64\l}"];
	Node0x6244680 -> Node0x62424e0;
	Node0x62424e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  ret void\l}"];
}
