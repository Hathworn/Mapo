digraph "CFG for '_Z21ConditionCFLKernel2D2PdS_S_S_S_Piiid' function" {
	label="CFG for '_Z21ConditionCFLKernel2D2PdS_S_S_S_Piiid' function";

	Node0x5b365d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = mul i32 %16, %15\l  %18 = add i32 %17, %10\l  %19 = icmp sgt i32 %18, 0\l  %20 = icmp slt i32 %18, %7\l  %21 = select i1 %19, i1 %20, i1 false\l  br i1 %21, label %22, label %129\l|{<s0>T|<s1>F}}"];
	Node0x5b365d0:s0 -> Node0x5b39240;
	Node0x5b365d0:s1 -> Node0x5b392d0;
	Node0x5b39240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%22:\l22:                                               \l  %23 = zext i32 %18 to i64\l  %24 = getelementptr inbounds double, double addrspace(1)* %0, i64 %23\l  store double 1.000000e+30, double addrspace(1)* %24, align 8, !tbaa !7\l  %25 = icmp sgt i32 %6, 0\l  br i1 %25, label %26, label %129\l|{<s0>T|<s1>F}}"];
	Node0x5b39240:s0 -> Node0x5b3a1f0;
	Node0x5b39240:s1 -> Node0x5b392d0;
	Node0x5b3a1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%26:\l26:                                               \l  %27 = mul nsw i32 %18, %6\l  %28 = and i32 %6, 7\l  %29 = icmp ult i32 %6, 8\l  br i1 %29, label %110, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5b3a1f0:s0 -> Node0x5b3a510;
	Node0x5b3a1f0:s1 -> Node0x5b3a560;
	Node0x5b3a560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%30:\l30:                                               \l  %31 = and i32 %6, -8\l  br label %32\l}"];
	Node0x5b3a560 -> Node0x5b3a760;
	Node0x5b3a760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = phi double [ 1.000000e+30, %30 ], [ %106, %105 ]\l  %34 = phi i32 [ 0, %30 ], [ %107, %105 ]\l  %35 = phi i32 [ 0, %30 ], [ %108, %105 ]\l  %36 = add nsw i32 %34, %27\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds double, double addrspace(1)* %1, i64 %37\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !7\l  %40 = fcmp contract olt double %39, %33\l  br i1 %40, label %41, label %42\l|{<s0>T|<s1>F}}"];
	Node0x5b3a760:s0 -> Node0x5b3b580;
	Node0x5b3a760:s1 -> Node0x5b3b610;
	Node0x5b3b580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%41:\l41:                                               \l  store double %39, double addrspace(1)* %24, align 8, !tbaa !7\l  br label %42\l}"];
	Node0x5b3b580 -> Node0x5b3b610;
	Node0x5b3b610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%42:\l42:                                               \l  %43 = phi double [ %33, %32 ], [ %39, %41 ]\l  %44 = or i32 %34, 1\l  %45 = add nsw i32 %44, %27\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds double, double addrspace(1)* %1, i64 %46\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !7\l  %49 = fcmp contract olt double %48, %43\l  br i1 %49, label %50, label %51\l|{<s0>T|<s1>F}}"];
	Node0x5b3b610:s0 -> Node0x5b3bc90;
	Node0x5b3b610:s1 -> Node0x5b3bce0;
	Node0x5b3bc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%50:\l50:                                               \l  store double %48, double addrspace(1)* %24, align 8, !tbaa !7\l  br label %51\l}"];
	Node0x5b3bc90 -> Node0x5b3bce0;
	Node0x5b3bce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%51:\l51:                                               \l  %52 = phi double [ %43, %42 ], [ %48, %50 ]\l  %53 = or i32 %34, 2\l  %54 = add nsw i32 %53, %27\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds double, double addrspace(1)* %1, i64 %55\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !7\l  %58 = fcmp contract olt double %57, %52\l  br i1 %58, label %59, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5b3bce0:s0 -> Node0x5b3c2f0;
	Node0x5b3bce0:s1 -> Node0x5b3c340;
	Node0x5b3c2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%59:\l59:                                               \l  store double %57, double addrspace(1)* %24, align 8, !tbaa !7\l  br label %60\l}"];
	Node0x5b3c2f0 -> Node0x5b3c340;
	Node0x5b3c340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%60:\l60:                                               \l  %61 = phi double [ %52, %51 ], [ %57, %59 ]\l  %62 = or i32 %34, 3\l  %63 = add nsw i32 %62, %27\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds double, double addrspace(1)* %1, i64 %64\l  %66 = load double, double addrspace(1)* %65, align 8, !tbaa !7\l  %67 = fcmp contract olt double %66, %61\l  br i1 %67, label %68, label %69\l|{<s0>T|<s1>F}}"];
	Node0x5b3c340:s0 -> Node0x5b3cb90;
	Node0x5b3c340:s1 -> Node0x5b3cbe0;
	Node0x5b3cb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%68:\l68:                                               \l  store double %66, double addrspace(1)* %24, align 8, !tbaa !7\l  br label %69\l}"];
	Node0x5b3cb90 -> Node0x5b3cbe0;
	Node0x5b3cbe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%69:\l69:                                               \l  %70 = phi double [ %61, %60 ], [ %66, %68 ]\l  %71 = or i32 %34, 4\l  %72 = add nsw i32 %71, %27\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds double, double addrspace(1)* %1, i64 %73\l  %75 = load double, double addrspace(1)* %74, align 8, !tbaa !7\l  %76 = fcmp contract olt double %75, %70\l  br i1 %76, label %77, label %78\l|{<s0>T|<s1>F}}"];
	Node0x5b3cbe0:s0 -> Node0x5b3d1c0;
	Node0x5b3cbe0:s1 -> Node0x5b3d210;
	Node0x5b3d1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%77:\l77:                                               \l  store double %75, double addrspace(1)* %24, align 8, !tbaa !7\l  br label %78\l}"];
	Node0x5b3d1c0 -> Node0x5b3d210;
	Node0x5b3d210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%78:\l78:                                               \l  %79 = phi double [ %70, %69 ], [ %75, %77 ]\l  %80 = or i32 %34, 5\l  %81 = add nsw i32 %80, %27\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds double, double addrspace(1)* %1, i64 %82\l  %84 = load double, double addrspace(1)* %83, align 8, !tbaa !7\l  %85 = fcmp contract olt double %84, %79\l  br i1 %85, label %86, label %87\l|{<s0>T|<s1>F}}"];
	Node0x5b3d210:s0 -> Node0x5b3d850;
	Node0x5b3d210:s1 -> Node0x5b3d8a0;
	Node0x5b3d850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%86:\l86:                                               \l  store double %84, double addrspace(1)* %24, align 8, !tbaa !7\l  br label %87\l}"];
	Node0x5b3d850 -> Node0x5b3d8a0;
	Node0x5b3d8a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%87:\l87:                                               \l  %88 = phi double [ %79, %78 ], [ %84, %86 ]\l  %89 = or i32 %34, 6\l  %90 = add nsw i32 %89, %27\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds double, double addrspace(1)* %1, i64 %91\l  %93 = load double, double addrspace(1)* %92, align 8, !tbaa !7\l  %94 = fcmp contract olt double %93, %88\l  br i1 %94, label %95, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5b3d8a0:s0 -> Node0x5b3deb0;
	Node0x5b3d8a0:s1 -> Node0x5b3df00;
	Node0x5b3deb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%95:\l95:                                               \l  store double %93, double addrspace(1)* %24, align 8, !tbaa !7\l  br label %96\l}"];
	Node0x5b3deb0 -> Node0x5b3df00;
	Node0x5b3df00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%96:\l96:                                               \l  %97 = phi double [ %88, %87 ], [ %93, %95 ]\l  %98 = or i32 %34, 7\l  %99 = add nsw i32 %98, %27\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds double, double addrspace(1)* %1, i64 %100\l  %102 = load double, double addrspace(1)* %101, align 8, !tbaa !7\l  %103 = fcmp contract olt double %102, %97\l  br i1 %103, label %104, label %105\l|{<s0>T|<s1>F}}"];
	Node0x5b3df00:s0 -> Node0x5b3e4e0;
	Node0x5b3df00:s1 -> Node0x5b38ed0;
	Node0x5b3e4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%104:\l104:                                              \l  store double %102, double addrspace(1)* %24, align 8, !tbaa !7\l  br label %105\l}"];
	Node0x5b3e4e0 -> Node0x5b38ed0;
	Node0x5b38ed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%105:\l105:                                              \l  %106 = phi double [ %97, %96 ], [ %102, %104 ]\l  %107 = add nuw nsw i32 %34, 8\l  %108 = add i32 %35, 8\l  %109 = icmp eq i32 %108, %31\l  br i1 %109, label %110, label %32, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5b38ed0:s0 -> Node0x5b3a510;
	Node0x5b38ed0:s1 -> Node0x5b3a760;
	Node0x5b3a510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%110:\l110:                                              \l  %111 = phi double [ 1.000000e+30, %26 ], [ %106, %105 ]\l  %112 = phi i32 [ 0, %26 ], [ %107, %105 ]\l  %113 = icmp eq i32 %28, 0\l  br i1 %113, label %129, label %114\l|{<s0>T|<s1>F}}"];
	Node0x5b3a510:s0 -> Node0x5b392d0;
	Node0x5b3a510:s1 -> Node0x5b3ec60;
	Node0x5b3ec60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  %115 = phi double [ %125, %124 ], [ %111, %110 ]\l  %116 = phi i32 [ %126, %124 ], [ %112, %110 ]\l  %117 = phi i32 [ %127, %124 ], [ 0, %110 ]\l  %118 = add nsw i32 %116, %27\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds double, double addrspace(1)* %1, i64 %119\l  %121 = load double, double addrspace(1)* %120, align 8, !tbaa !7\l  %122 = fcmp contract olt double %121, %115\l  br i1 %122, label %123, label %124\l|{<s0>T|<s1>F}}"];
	Node0x5b3ec60:s0 -> Node0x5b3f260;
	Node0x5b3ec60:s1 -> Node0x5b3ed60;
	Node0x5b3f260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%123:\l123:                                              \l  store double %121, double addrspace(1)* %24, align 8, !tbaa !7\l  br label %124\l}"];
	Node0x5b3f260 -> Node0x5b3ed60;
	Node0x5b3ed60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%124:\l124:                                              \l  %125 = phi double [ %115, %114 ], [ %121, %123 ]\l  %126 = add nuw nsw i32 %116, 1\l  %127 = add i32 %117, 1\l  %128 = icmp eq i32 %127, %28\l  br i1 %128, label %129, label %114, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5b3ed60:s0 -> Node0x5b392d0;
	Node0x5b3ed60:s1 -> Node0x5b3ec60;
	Node0x5b392d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%129:\l129:                                              \l  %130 = add nsw i32 %7, -1\l  %131 = icmp slt i32 %18, %130\l  br i1 %131, label %132, label %152\l|{<s0>T|<s1>F}}"];
	Node0x5b392d0:s0 -> Node0x5b3c9d0;
	Node0x5b392d0:s1 -> Node0x5b3ca20;
	Node0x5b3c9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%132:\l132:                                              \l  %133 = sitofp i32 %6 to double\l  %134 = fdiv contract double 0x400921FB54442D18, %133\l  %135 = sext i32 %18 to i64\l  %136 = getelementptr inbounds double, double addrspace(1)* %3, i64 %135\l  %137 = load double, double addrspace(1)* %136, align 8, !tbaa !7\l  %138 = getelementptr inbounds double, double addrspace(1)* %4, i64 %135\l  %139 = load double, double addrspace(1)* %138, align 8, !tbaa !7\l  %140 = fmul contract double %137, %139\l  %141 = add nsw i32 %18, 1\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds double, double addrspace(1)* %3, i64 %142\l  %144 = load double, double addrspace(1)* %143, align 8, !tbaa !7\l  %145 = getelementptr inbounds double, double addrspace(1)* %4, i64 %142\l  %146 = load double, double addrspace(1)* %145, align 8, !tbaa !7\l  %147 = fmul contract double %144, %146\l  %148 = fsub contract double %140, %147\l  %149 = tail call double @llvm.fabs.f64(double %148)\l  %150 = fdiv contract double %134, %149\l  %151 = getelementptr inbounds double, double addrspace(1)* %2, i64 %135\l  store double %150, double addrspace(1)* %151, align 8, !tbaa !7\l  br label %152\l}"];
	Node0x5b3c9d0 -> Node0x5b3ca20;
	Node0x5b3ca20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%152:\l152:                                              \l  ret void\l}"];
}
