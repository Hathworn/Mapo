digraph "CFG for '_Z20value_count_kernel_1iPKmPj' function" {
	label="CFG for '_Z20value_count_kernel_1iPKmPj' function";

	Node0x64377d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %0\l  br i1 %16, label %17, label %24\l|{<s0>T|<s1>F}}"];
	Node0x64377d0:s0 -> Node0x6439120;
	Node0x64377d0:s1 -> Node0x6439ad0;
	Node0x6439120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%17:\l17:                                               \l  %18 = udiv i32 %12, %9\l  %19 = mul i32 %18, %9\l  %20 = icmp ugt i32 %12, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %9\l  br label %25\l}"];
	Node0x6439120 -> Node0x6439f50;
	Node0x6439ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x6439f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %15, %17 ], [ %43, %42 ]\l  %27 = sext i32 %26 to i64\l  %28 = icmp sgt i32 %26, 0\l  br i1 %28, label %29, label %40\l|{<s0>T|<s1>F}}"];
	Node0x6439f50:s0 -> Node0x643a290;
	Node0x6439f50:s1 -> Node0x643a320;
	Node0x643a290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%29:\l29:                                               \l  %30 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %27\l  %31 = load i64, i64 addrspace(1)* %30, align 8, !tbaa !16, !amdgpu.noclobber\l... !5\l  %32 = add nsw i32 %26, -1\l  %33 = zext i32 %32 to i64\l  %34 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %33\l  %35 = load i64, i64 addrspace(1)* %34, align 8, !tbaa !16, !amdgpu.noclobber\l... !5\l  %36 = icmp eq i64 %31, %35\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %27\l  br i1 %36, label %39, label %38\l|{<s0>T|<s1>F}}"];
	Node0x643a290:s0 -> Node0x643b7c0;
	Node0x643a290:s1 -> Node0x643b850;
	Node0x643b850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%38:\l38:                                               \l  store i32 1, i32 addrspace(1)* %37, align 4, !tbaa !20\l  br label %42\l}"];
	Node0x643b850 -> Node0x643a060;
	Node0x643b7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%39:\l39:                                               \l  store i32 0, i32 addrspace(1)* %37, align 4, !tbaa !20\l  br label %42\l}"];
	Node0x643b7c0 -> Node0x643a060;
	Node0x643a320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%40:\l40:                                               \l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %27\l  store i32 1, i32 addrspace(1)* %41, align 4, !tbaa !20\l  br label %42\l}"];
	Node0x643a320 -> Node0x643a060;
	Node0x643a060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = add i32 %23, %26\l  %44 = icmp slt i32 %43, %0\l  br i1 %44, label %25, label %24, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x643a060:s0 -> Node0x6439f50;
	Node0x643a060:s1 -> Node0x6439ad0;
}
