digraph "CFG for '_Z12kernel_2D_3Dv' function" {
	label="CFG for '_Z12kernel_2D_3Dv' function";

	Node0x48e10a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%0:\l  %1 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %2 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !4\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %6 = bitcast i8 addrspace(4)* %5 to i32 addrspace(4)*\l  %7 = load i32, i32 addrspace(4)* %6, align 4, !tbaa !5\l  %8 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !14, !invariant.load\l... !15\l  %11 = zext i16 %10 to i32\l  %12 = udiv i32 %7, %11\l  %13 = getelementptr i8, i8 addrspace(4)* %4, i64 6\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 2, !range !14, !invariant.load\l... !15\l  %16 = getelementptr i8, i8 addrspace(4)* %4, i64 8\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !14, !invariant.load\l... !15\l  %19 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %20 = getelementptr inbounds i8, i8 addrspace(4)* %19, i64 24\l  %21 = bitcast i8 addrspace(4)* %20 to i64 addrspace(4)*\l  %22 = load i64, i64 addrspace(4)* %21, align 8, !tbaa !16\l  %23 = inttoptr i64 %22 to i8 addrspace(1)*\l  %24 = addrspacecast i8 addrspace(1)* %23 to i8*\l  %25 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %26 = extractelement \<2 x i64\> %25, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([53 x i8], [53 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %27, label %31\l|{<s0>T|<s1>F}}"];
	Node0x48e10a0:s0 -> Node0x48e58b0;
	Node0x48e10a0:s1 -> Node0x48e62a0;
	Node0x48e58b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%27:\l27:                                               \l  %28 = and i64 %26, -225\l  %29 = or i64 %28, 32\l  %30 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef %29, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %472\l}"];
	Node0x48e58b0 -> Node0x48e6580;
	Node0x48e62a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%31:\l31:                                               \l  %32 = and i64 %26, 2\l  %33 = and i64 %26, -3\l  %34 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %33, i64 0\l  br label %35\l}"];
	Node0x48e62a0 -> Node0x48e7240;
	Node0x48e7240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%35:\l35:                                               \l  %36 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([53 x i8], [53 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([53 x i8], [53 x i8] addrspace(4)*\l... @.str, i64 0, i64 52) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([53 x i8]* addrspacecast ([53 x i8] addrspace(4)* @.str to [53 x i8]*) to\l... i64)), i64 1))), %31 ], [ %469, %461 ]\l  %37 = phi i8 addrspace(4)* [ getelementptr inbounds ([53 x i8], [53 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %31 ], [ %470, %461 ]\l  %38 = phi \<2 x i64\> [ %34, %31 ], [ %468, %461 ]\l  %39 = icmp ugt i64 %36, 56\l  %40 = extractelement \<2 x i64\> %38, i64 0\l  %41 = or i64 %40, %32\l  %42 = insertelement \<2 x i64\> poison, i64 %41, i64 0\l  %43 = select i1 %39, \<2 x i64\> %38, \<2 x i64\> %42\l  %44 = tail call i64 @llvm.umin.i64(i64 %36, i64 56)\l  %45 = trunc i64 %44 to i32\l  %46 = extractelement \<2 x i64\> %43, i64 0\l  %47 = icmp ugt i32 %45, 7\l  br i1 %47, label %50, label %48\l|{<s0>T|<s1>F}}"];
	Node0x48e7240:s0 -> Node0x48e8190;
	Node0x48e7240:s1 -> Node0x48e8220;
	Node0x48e8220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%48:\l48:                                               \l  %49 = icmp eq i32 %45, 0\l  br i1 %49, label %103, label %90\l|{<s0>T|<s1>F}}"];
	Node0x48e8220:s0 -> Node0x48e8420;
	Node0x48e8220:s1 -> Node0x48e8470;
	Node0x48e8190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%50:\l50:                                               \l  %51 = load i8, i8 addrspace(4)* %37, align 1, !tbaa !17\l  %52 = zext i8 %51 to i64\l  %53 = getelementptr inbounds i8, i8 addrspace(4)* %37, i64 1\l  %54 = load i8, i8 addrspace(4)* %53, align 1, !tbaa !17\l  %55 = zext i8 %54 to i64\l  %56 = shl nuw nsw i64 %55, 8\l  %57 = or i64 %56, %52\l  %58 = getelementptr inbounds i8, i8 addrspace(4)* %37, i64 2\l  %59 = load i8, i8 addrspace(4)* %58, align 1, !tbaa !17\l  %60 = zext i8 %59 to i64\l  %61 = shl nuw nsw i64 %60, 16\l  %62 = or i64 %57, %61\l  %63 = getelementptr inbounds i8, i8 addrspace(4)* %37, i64 3\l  %64 = load i8, i8 addrspace(4)* %63, align 1, !tbaa !17\l  %65 = zext i8 %64 to i64\l  %66 = shl nuw nsw i64 %65, 24\l  %67 = or i64 %62, %66\l  %68 = getelementptr inbounds i8, i8 addrspace(4)* %37, i64 4\l  %69 = load i8, i8 addrspace(4)* %68, align 1, !tbaa !17\l  %70 = zext i8 %69 to i64\l  %71 = shl nuw nsw i64 %70, 32\l  %72 = or i64 %67, %71\l  %73 = getelementptr inbounds i8, i8 addrspace(4)* %37, i64 5\l  %74 = load i8, i8 addrspace(4)* %73, align 1, !tbaa !17\l  %75 = zext i8 %74 to i64\l  %76 = shl nuw nsw i64 %75, 40\l  %77 = or i64 %72, %76\l  %78 = getelementptr inbounds i8, i8 addrspace(4)* %37, i64 6\l  %79 = load i8, i8 addrspace(4)* %78, align 1, !tbaa !17\l  %80 = zext i8 %79 to i64\l  %81 = shl nuw nsw i64 %80, 48\l  %82 = or i64 %77, %81\l  %83 = getelementptr inbounds i8, i8 addrspace(4)* %37, i64 7\l  %84 = load i8, i8 addrspace(4)* %83, align 1, !tbaa !17\l  %85 = zext i8 %84 to i64\l  %86 = shl nuw i64 %85, 56\l  %87 = or i64 %82, %86\l  %88 = add nsw i32 %45, -8\l  %89 = getelementptr inbounds i8, i8 addrspace(4)* %37, i64 8\l  br label %103\l}"];
	Node0x48e8190 -> Node0x48e8420;
	Node0x48e8470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = phi i32 [ %101, %90 ], [ 0, %48 ]\l  %92 = phi i64 [ %100, %90 ], [ 0, %48 ]\l  %93 = zext i32 %91 to i64\l  %94 = getelementptr inbounds i8, i8 addrspace(4)* %37, i64 %93\l  %95 = load i8, i8 addrspace(4)* %94, align 1, !tbaa !17\l  %96 = zext i8 %95 to i64\l  %97 = shl i32 %91, 3\l  %98 = zext i32 %97 to i64\l  %99 = shl nuw i64 %96, %98\l  %100 = or i64 %99, %92\l  %101 = add nuw nsw i32 %91, 1\l  %102 = icmp eq i32 %101, %45\l  br i1 %102, label %103, label %90, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x48e8470:s0 -> Node0x48e8420;
	Node0x48e8470:s1 -> Node0x48e8470;
	Node0x48e8420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%103:\l103:                                              \l  %104 = phi i8 addrspace(4)* [ %89, %50 ], [ %37, %48 ], [ %37, %90 ]\l  %105 = phi i32 [ %88, %50 ], [ 0, %48 ], [ 0, %90 ]\l  %106 = phi i64 [ %87, %50 ], [ 0, %48 ], [ %100, %90 ]\l  %107 = icmp ugt i32 %105, 7\l  br i1 %107, label %110, label %108\l|{<s0>T|<s1>F}}"];
	Node0x48e8420:s0 -> Node0x48eb0d0;
	Node0x48e8420:s1 -> Node0x48eb120;
	Node0x48eb120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%108:\l108:                                              \l  %109 = icmp eq i32 %105, 0\l  br i1 %109, label %163, label %150\l|{<s0>T|<s1>F}}"];
	Node0x48eb120:s0 -> Node0x48eb2f0;
	Node0x48eb120:s1 -> Node0x48eb340;
	Node0x48eb0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%110:\l110:                                              \l  %111 = load i8, i8 addrspace(4)* %104, align 1, !tbaa !17\l  %112 = zext i8 %111 to i64\l  %113 = getelementptr inbounds i8, i8 addrspace(4)* %104, i64 1\l  %114 = load i8, i8 addrspace(4)* %113, align 1, !tbaa !17\l  %115 = zext i8 %114 to i64\l  %116 = shl nuw nsw i64 %115, 8\l  %117 = or i64 %116, %112\l  %118 = getelementptr inbounds i8, i8 addrspace(4)* %104, i64 2\l  %119 = load i8, i8 addrspace(4)* %118, align 1, !tbaa !17\l  %120 = zext i8 %119 to i64\l  %121 = shl nuw nsw i64 %120, 16\l  %122 = or i64 %117, %121\l  %123 = getelementptr inbounds i8, i8 addrspace(4)* %104, i64 3\l  %124 = load i8, i8 addrspace(4)* %123, align 1, !tbaa !17\l  %125 = zext i8 %124 to i64\l  %126 = shl nuw nsw i64 %125, 24\l  %127 = or i64 %122, %126\l  %128 = getelementptr inbounds i8, i8 addrspace(4)* %104, i64 4\l  %129 = load i8, i8 addrspace(4)* %128, align 1, !tbaa !17\l  %130 = zext i8 %129 to i64\l  %131 = shl nuw nsw i64 %130, 32\l  %132 = or i64 %127, %131\l  %133 = getelementptr inbounds i8, i8 addrspace(4)* %104, i64 5\l  %134 = load i8, i8 addrspace(4)* %133, align 1, !tbaa !17\l  %135 = zext i8 %134 to i64\l  %136 = shl nuw nsw i64 %135, 40\l  %137 = or i64 %132, %136\l  %138 = getelementptr inbounds i8, i8 addrspace(4)* %104, i64 6\l  %139 = load i8, i8 addrspace(4)* %138, align 1, !tbaa !17\l  %140 = zext i8 %139 to i64\l  %141 = shl nuw nsw i64 %140, 48\l  %142 = or i64 %137, %141\l  %143 = getelementptr inbounds i8, i8 addrspace(4)* %104, i64 7\l  %144 = load i8, i8 addrspace(4)* %143, align 1, !tbaa !17\l  %145 = zext i8 %144 to i64\l  %146 = shl nuw i64 %145, 56\l  %147 = or i64 %142, %146\l  %148 = add nsw i32 %105, -8\l  %149 = getelementptr inbounds i8, i8 addrspace(4)* %104, i64 8\l  br label %163\l}"];
	Node0x48eb0d0 -> Node0x48eb2f0;
	Node0x48eb340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%150:\l150:                                              \l  %151 = phi i32 [ %161, %150 ], [ 0, %108 ]\l  %152 = phi i64 [ %160, %150 ], [ 0, %108 ]\l  %153 = zext i32 %151 to i64\l  %154 = getelementptr inbounds i8, i8 addrspace(4)* %104, i64 %153\l  %155 = load i8, i8 addrspace(4)* %154, align 1, !tbaa !17\l  %156 = zext i8 %155 to i64\l  %157 = shl i32 %151, 3\l  %158 = zext i32 %157 to i64\l  %159 = shl nuw i64 %156, %158\l  %160 = or i64 %159, %152\l  %161 = add nuw nsw i32 %151, 1\l  %162 = icmp eq i32 %161, %105\l  br i1 %162, label %163, label %150\l|{<s0>T|<s1>F}}"];
	Node0x48eb340:s0 -> Node0x48eb2f0;
	Node0x48eb340:s1 -> Node0x48eb340;
	Node0x48eb2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%163:\l163:                                              \l  %164 = phi i8 addrspace(4)* [ %149, %110 ], [ %104, %108 ], [ %104, %150 ]\l  %165 = phi i32 [ %148, %110 ], [ 0, %108 ], [ 0, %150 ]\l  %166 = phi i64 [ %147, %110 ], [ 0, %108 ], [ %160, %150 ]\l  %167 = icmp ugt i32 %165, 7\l  br i1 %167, label %170, label %168\l|{<s0>T|<s1>F}}"];
	Node0x48eb2f0:s0 -> Node0x48ed810;
	Node0x48eb2f0:s1 -> Node0x48ed860;
	Node0x48ed860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%168:\l168:                                              \l  %169 = icmp eq i32 %165, 0\l  br i1 %169, label %223, label %210\l|{<s0>T|<s1>F}}"];
	Node0x48ed860:s0 -> Node0x48ed9f0;
	Node0x48ed860:s1 -> Node0x48eda40;
	Node0x48ed810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%170:\l170:                                              \l  %171 = load i8, i8 addrspace(4)* %164, align 1, !tbaa !17\l  %172 = zext i8 %171 to i64\l  %173 = getelementptr inbounds i8, i8 addrspace(4)* %164, i64 1\l  %174 = load i8, i8 addrspace(4)* %173, align 1, !tbaa !17\l  %175 = zext i8 %174 to i64\l  %176 = shl nuw nsw i64 %175, 8\l  %177 = or i64 %176, %172\l  %178 = getelementptr inbounds i8, i8 addrspace(4)* %164, i64 2\l  %179 = load i8, i8 addrspace(4)* %178, align 1, !tbaa !17\l  %180 = zext i8 %179 to i64\l  %181 = shl nuw nsw i64 %180, 16\l  %182 = or i64 %177, %181\l  %183 = getelementptr inbounds i8, i8 addrspace(4)* %164, i64 3\l  %184 = load i8, i8 addrspace(4)* %183, align 1, !tbaa !17\l  %185 = zext i8 %184 to i64\l  %186 = shl nuw nsw i64 %185, 24\l  %187 = or i64 %182, %186\l  %188 = getelementptr inbounds i8, i8 addrspace(4)* %164, i64 4\l  %189 = load i8, i8 addrspace(4)* %188, align 1, !tbaa !17\l  %190 = zext i8 %189 to i64\l  %191 = shl nuw nsw i64 %190, 32\l  %192 = or i64 %187, %191\l  %193 = getelementptr inbounds i8, i8 addrspace(4)* %164, i64 5\l  %194 = load i8, i8 addrspace(4)* %193, align 1, !tbaa !17\l  %195 = zext i8 %194 to i64\l  %196 = shl nuw nsw i64 %195, 40\l  %197 = or i64 %192, %196\l  %198 = getelementptr inbounds i8, i8 addrspace(4)* %164, i64 6\l  %199 = load i8, i8 addrspace(4)* %198, align 1, !tbaa !17\l  %200 = zext i8 %199 to i64\l  %201 = shl nuw nsw i64 %200, 48\l  %202 = or i64 %197, %201\l  %203 = getelementptr inbounds i8, i8 addrspace(4)* %164, i64 7\l  %204 = load i8, i8 addrspace(4)* %203, align 1, !tbaa !17\l  %205 = zext i8 %204 to i64\l  %206 = shl nuw i64 %205, 56\l  %207 = or i64 %202, %206\l  %208 = add nsw i32 %165, -8\l  %209 = getelementptr inbounds i8, i8 addrspace(4)* %164, i64 8\l  br label %223\l}"];
	Node0x48ed810 -> Node0x48ed9f0;
	Node0x48eda40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%210:\l210:                                              \l  %211 = phi i32 [ %221, %210 ], [ 0, %168 ]\l  %212 = phi i64 [ %220, %210 ], [ 0, %168 ]\l  %213 = zext i32 %211 to i64\l  %214 = getelementptr inbounds i8, i8 addrspace(4)* %164, i64 %213\l  %215 = load i8, i8 addrspace(4)* %214, align 1, !tbaa !17\l  %216 = zext i8 %215 to i64\l  %217 = shl i32 %211, 3\l  %218 = zext i32 %217 to i64\l  %219 = shl nuw i64 %216, %218\l  %220 = or i64 %219, %212\l  %221 = add nuw nsw i32 %211, 1\l  %222 = icmp eq i32 %221, %165\l  br i1 %222, label %223, label %210\l|{<s0>T|<s1>F}}"];
	Node0x48eda40:s0 -> Node0x48ed9f0;
	Node0x48eda40:s1 -> Node0x48eda40;
	Node0x48ed9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%223:\l223:                                              \l  %224 = phi i8 addrspace(4)* [ %209, %170 ], [ %164, %168 ], [ %164, %210 ]\l  %225 = phi i32 [ %208, %170 ], [ 0, %168 ], [ 0, %210 ]\l  %226 = phi i64 [ %207, %170 ], [ 0, %168 ], [ %220, %210 ]\l  %227 = icmp ugt i32 %225, 7\l  br i1 %227, label %230, label %228\l|{<s0>T|<s1>F}}"];
	Node0x48ed9f0:s0 -> Node0x48efa90;
	Node0x48ed9f0:s1 -> Node0x48efae0;
	Node0x48efae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%228:\l228:                                              \l  %229 = icmp eq i32 %225, 0\l  br i1 %229, label %283, label %270\l|{<s0>T|<s1>F}}"];
	Node0x48efae0:s0 -> Node0x48efc70;
	Node0x48efae0:s1 -> Node0x48efcc0;
	Node0x48efa90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%230:\l230:                                              \l  %231 = load i8, i8 addrspace(4)* %224, align 1, !tbaa !17\l  %232 = zext i8 %231 to i64\l  %233 = getelementptr inbounds i8, i8 addrspace(4)* %224, i64 1\l  %234 = load i8, i8 addrspace(4)* %233, align 1, !tbaa !17\l  %235 = zext i8 %234 to i64\l  %236 = shl nuw nsw i64 %235, 8\l  %237 = or i64 %236, %232\l  %238 = getelementptr inbounds i8, i8 addrspace(4)* %224, i64 2\l  %239 = load i8, i8 addrspace(4)* %238, align 1, !tbaa !17\l  %240 = zext i8 %239 to i64\l  %241 = shl nuw nsw i64 %240, 16\l  %242 = or i64 %237, %241\l  %243 = getelementptr inbounds i8, i8 addrspace(4)* %224, i64 3\l  %244 = load i8, i8 addrspace(4)* %243, align 1, !tbaa !17\l  %245 = zext i8 %244 to i64\l  %246 = shl nuw nsw i64 %245, 24\l  %247 = or i64 %242, %246\l  %248 = getelementptr inbounds i8, i8 addrspace(4)* %224, i64 4\l  %249 = load i8, i8 addrspace(4)* %248, align 1, !tbaa !17\l  %250 = zext i8 %249 to i64\l  %251 = shl nuw nsw i64 %250, 32\l  %252 = or i64 %247, %251\l  %253 = getelementptr inbounds i8, i8 addrspace(4)* %224, i64 5\l  %254 = load i8, i8 addrspace(4)* %253, align 1, !tbaa !17\l  %255 = zext i8 %254 to i64\l  %256 = shl nuw nsw i64 %255, 40\l  %257 = or i64 %252, %256\l  %258 = getelementptr inbounds i8, i8 addrspace(4)* %224, i64 6\l  %259 = load i8, i8 addrspace(4)* %258, align 1, !tbaa !17\l  %260 = zext i8 %259 to i64\l  %261 = shl nuw nsw i64 %260, 48\l  %262 = or i64 %257, %261\l  %263 = getelementptr inbounds i8, i8 addrspace(4)* %224, i64 7\l  %264 = load i8, i8 addrspace(4)* %263, align 1, !tbaa !17\l  %265 = zext i8 %264 to i64\l  %266 = shl nuw i64 %265, 56\l  %267 = or i64 %262, %266\l  %268 = add nsw i32 %225, -8\l  %269 = getelementptr inbounds i8, i8 addrspace(4)* %224, i64 8\l  br label %283\l}"];
	Node0x48efa90 -> Node0x48efc70;
	Node0x48efcc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%270:\l270:                                              \l  %271 = phi i32 [ %281, %270 ], [ 0, %228 ]\l  %272 = phi i64 [ %280, %270 ], [ 0, %228 ]\l  %273 = zext i32 %271 to i64\l  %274 = getelementptr inbounds i8, i8 addrspace(4)* %224, i64 %273\l  %275 = load i8, i8 addrspace(4)* %274, align 1, !tbaa !17\l  %276 = zext i8 %275 to i64\l  %277 = shl i32 %271, 3\l  %278 = zext i32 %277 to i64\l  %279 = shl nuw i64 %276, %278\l  %280 = or i64 %279, %272\l  %281 = add nuw nsw i32 %271, 1\l  %282 = icmp eq i32 %281, %225\l  br i1 %282, label %283, label %270\l|{<s0>T|<s1>F}}"];
	Node0x48efcc0:s0 -> Node0x48efc70;
	Node0x48efcc0:s1 -> Node0x48efcc0;
	Node0x48efc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%283:\l283:                                              \l  %284 = phi i8 addrspace(4)* [ %269, %230 ], [ %224, %228 ], [ %224, %270 ]\l  %285 = phi i32 [ %268, %230 ], [ 0, %228 ], [ 0, %270 ]\l  %286 = phi i64 [ %267, %230 ], [ 0, %228 ], [ %280, %270 ]\l  %287 = icmp ugt i32 %285, 7\l  br i1 %287, label %290, label %288\l|{<s0>T|<s1>F}}"];
	Node0x48efc70:s0 -> Node0x48f24e0;
	Node0x48efc70:s1 -> Node0x48f2530;
	Node0x48f2530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%288:\l288:                                              \l  %289 = icmp eq i32 %285, 0\l  br i1 %289, label %343, label %330\l|{<s0>T|<s1>F}}"];
	Node0x48f2530:s0 -> Node0x48f26c0;
	Node0x48f2530:s1 -> Node0x48f2710;
	Node0x48f24e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%290:\l290:                                              \l  %291 = load i8, i8 addrspace(4)* %284, align 1, !tbaa !17\l  %292 = zext i8 %291 to i64\l  %293 = getelementptr inbounds i8, i8 addrspace(4)* %284, i64 1\l  %294 = load i8, i8 addrspace(4)* %293, align 1, !tbaa !17\l  %295 = zext i8 %294 to i64\l  %296 = shl nuw nsw i64 %295, 8\l  %297 = or i64 %296, %292\l  %298 = getelementptr inbounds i8, i8 addrspace(4)* %284, i64 2\l  %299 = load i8, i8 addrspace(4)* %298, align 1, !tbaa !17\l  %300 = zext i8 %299 to i64\l  %301 = shl nuw nsw i64 %300, 16\l  %302 = or i64 %297, %301\l  %303 = getelementptr inbounds i8, i8 addrspace(4)* %284, i64 3\l  %304 = load i8, i8 addrspace(4)* %303, align 1, !tbaa !17\l  %305 = zext i8 %304 to i64\l  %306 = shl nuw nsw i64 %305, 24\l  %307 = or i64 %302, %306\l  %308 = getelementptr inbounds i8, i8 addrspace(4)* %284, i64 4\l  %309 = load i8, i8 addrspace(4)* %308, align 1, !tbaa !17\l  %310 = zext i8 %309 to i64\l  %311 = shl nuw nsw i64 %310, 32\l  %312 = or i64 %307, %311\l  %313 = getelementptr inbounds i8, i8 addrspace(4)* %284, i64 5\l  %314 = load i8, i8 addrspace(4)* %313, align 1, !tbaa !17\l  %315 = zext i8 %314 to i64\l  %316 = shl nuw nsw i64 %315, 40\l  %317 = or i64 %312, %316\l  %318 = getelementptr inbounds i8, i8 addrspace(4)* %284, i64 6\l  %319 = load i8, i8 addrspace(4)* %318, align 1, !tbaa !17\l  %320 = zext i8 %319 to i64\l  %321 = shl nuw nsw i64 %320, 48\l  %322 = or i64 %317, %321\l  %323 = getelementptr inbounds i8, i8 addrspace(4)* %284, i64 7\l  %324 = load i8, i8 addrspace(4)* %323, align 1, !tbaa !17\l  %325 = zext i8 %324 to i64\l  %326 = shl nuw i64 %325, 56\l  %327 = or i64 %322, %326\l  %328 = add nsw i32 %285, -8\l  %329 = getelementptr inbounds i8, i8 addrspace(4)* %284, i64 8\l  br label %343\l}"];
	Node0x48f24e0 -> Node0x48f26c0;
	Node0x48f2710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%330:\l330:                                              \l  %331 = phi i32 [ %341, %330 ], [ 0, %288 ]\l  %332 = phi i64 [ %340, %330 ], [ 0, %288 ]\l  %333 = zext i32 %331 to i64\l  %334 = getelementptr inbounds i8, i8 addrspace(4)* %284, i64 %333\l  %335 = load i8, i8 addrspace(4)* %334, align 1, !tbaa !17\l  %336 = zext i8 %335 to i64\l  %337 = shl i32 %331, 3\l  %338 = zext i32 %337 to i64\l  %339 = shl nuw i64 %336, %338\l  %340 = or i64 %339, %332\l  %341 = add nuw nsw i32 %331, 1\l  %342 = icmp eq i32 %341, %285\l  br i1 %342, label %343, label %330\l|{<s0>T|<s1>F}}"];
	Node0x48f2710:s0 -> Node0x48f26c0;
	Node0x48f2710:s1 -> Node0x48f2710;
	Node0x48f26c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%343:\l343:                                              \l  %344 = phi i8 addrspace(4)* [ %329, %290 ], [ %284, %288 ], [ %284, %330 ]\l  %345 = phi i32 [ %328, %290 ], [ 0, %288 ], [ 0, %330 ]\l  %346 = phi i64 [ %327, %290 ], [ 0, %288 ], [ %340, %330 ]\l  %347 = icmp ugt i32 %345, 7\l  br i1 %347, label %350, label %348\l|{<s0>T|<s1>F}}"];
	Node0x48f26c0:s0 -> Node0x48f5150;
	Node0x48f26c0:s1 -> Node0x48f51a0;
	Node0x48f51a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%348:\l348:                                              \l  %349 = icmp eq i32 %345, 0\l  br i1 %349, label %403, label %390\l|{<s0>T|<s1>F}}"];
	Node0x48f51a0:s0 -> Node0x48f5330;
	Node0x48f51a0:s1 -> Node0x48f5380;
	Node0x48f5150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%350:\l350:                                              \l  %351 = load i8, i8 addrspace(4)* %344, align 1, !tbaa !17\l  %352 = zext i8 %351 to i64\l  %353 = getelementptr inbounds i8, i8 addrspace(4)* %344, i64 1\l  %354 = load i8, i8 addrspace(4)* %353, align 1, !tbaa !17\l  %355 = zext i8 %354 to i64\l  %356 = shl nuw nsw i64 %355, 8\l  %357 = or i64 %356, %352\l  %358 = getelementptr inbounds i8, i8 addrspace(4)* %344, i64 2\l  %359 = load i8, i8 addrspace(4)* %358, align 1, !tbaa !17\l  %360 = zext i8 %359 to i64\l  %361 = shl nuw nsw i64 %360, 16\l  %362 = or i64 %357, %361\l  %363 = getelementptr inbounds i8, i8 addrspace(4)* %344, i64 3\l  %364 = load i8, i8 addrspace(4)* %363, align 1, !tbaa !17\l  %365 = zext i8 %364 to i64\l  %366 = shl nuw nsw i64 %365, 24\l  %367 = or i64 %362, %366\l  %368 = getelementptr inbounds i8, i8 addrspace(4)* %344, i64 4\l  %369 = load i8, i8 addrspace(4)* %368, align 1, !tbaa !17\l  %370 = zext i8 %369 to i64\l  %371 = shl nuw nsw i64 %370, 32\l  %372 = or i64 %367, %371\l  %373 = getelementptr inbounds i8, i8 addrspace(4)* %344, i64 5\l  %374 = load i8, i8 addrspace(4)* %373, align 1, !tbaa !17\l  %375 = zext i8 %374 to i64\l  %376 = shl nuw nsw i64 %375, 40\l  %377 = or i64 %372, %376\l  %378 = getelementptr inbounds i8, i8 addrspace(4)* %344, i64 6\l  %379 = load i8, i8 addrspace(4)* %378, align 1, !tbaa !17\l  %380 = zext i8 %379 to i64\l  %381 = shl nuw nsw i64 %380, 48\l  %382 = or i64 %377, %381\l  %383 = getelementptr inbounds i8, i8 addrspace(4)* %344, i64 7\l  %384 = load i8, i8 addrspace(4)* %383, align 1, !tbaa !17\l  %385 = zext i8 %384 to i64\l  %386 = shl nuw i64 %385, 56\l  %387 = or i64 %382, %386\l  %388 = add nsw i32 %345, -8\l  %389 = getelementptr inbounds i8, i8 addrspace(4)* %344, i64 8\l  br label %403\l}"];
	Node0x48f5150 -> Node0x48f5330;
	Node0x48f5380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%390:\l390:                                              \l  %391 = phi i32 [ %401, %390 ], [ 0, %348 ]\l  %392 = phi i64 [ %400, %390 ], [ 0, %348 ]\l  %393 = zext i32 %391 to i64\l  %394 = getelementptr inbounds i8, i8 addrspace(4)* %344, i64 %393\l  %395 = load i8, i8 addrspace(4)* %394, align 1, !tbaa !17\l  %396 = zext i8 %395 to i64\l  %397 = shl i32 %391, 3\l  %398 = zext i32 %397 to i64\l  %399 = shl nuw i64 %396, %398\l  %400 = or i64 %399, %392\l  %401 = add nuw nsw i32 %391, 1\l  %402 = icmp eq i32 %401, %345\l  br i1 %402, label %403, label %390\l|{<s0>T|<s1>F}}"];
	Node0x48f5380:s0 -> Node0x48f5330;
	Node0x48f5380:s1 -> Node0x48f5380;
	Node0x48f5330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%403:\l403:                                              \l  %404 = phi i8 addrspace(4)* [ %389, %350 ], [ %344, %348 ], [ %344, %390 ]\l  %405 = phi i32 [ %388, %350 ], [ 0, %348 ], [ 0, %390 ]\l  %406 = phi i64 [ %387, %350 ], [ 0, %348 ], [ %400, %390 ]\l  %407 = icmp ugt i32 %405, 7\l  br i1 %407, label %410, label %408\l|{<s0>T|<s1>F}}"];
	Node0x48f5330:s0 -> Node0x48f79e0;
	Node0x48f5330:s1 -> Node0x48f7a30;
	Node0x48f7a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%408:\l408:                                              \l  %409 = icmp eq i32 %405, 0\l  br i1 %409, label %461, label %448\l|{<s0>T|<s1>F}}"];
	Node0x48f7a30:s0 -> Node0x48e76c0;
	Node0x48f7a30:s1 -> Node0x48f7bc0;
	Node0x48f79e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%410:\l410:                                              \l  %411 = load i8, i8 addrspace(4)* %404, align 1, !tbaa !17\l  %412 = zext i8 %411 to i64\l  %413 = getelementptr inbounds i8, i8 addrspace(4)* %404, i64 1\l  %414 = load i8, i8 addrspace(4)* %413, align 1, !tbaa !17\l  %415 = zext i8 %414 to i64\l  %416 = shl nuw nsw i64 %415, 8\l  %417 = or i64 %416, %412\l  %418 = getelementptr inbounds i8, i8 addrspace(4)* %404, i64 2\l  %419 = load i8, i8 addrspace(4)* %418, align 1, !tbaa !17\l  %420 = zext i8 %419 to i64\l  %421 = shl nuw nsw i64 %420, 16\l  %422 = or i64 %417, %421\l  %423 = getelementptr inbounds i8, i8 addrspace(4)* %404, i64 3\l  %424 = load i8, i8 addrspace(4)* %423, align 1, !tbaa !17\l  %425 = zext i8 %424 to i64\l  %426 = shl nuw nsw i64 %425, 24\l  %427 = or i64 %422, %426\l  %428 = getelementptr inbounds i8, i8 addrspace(4)* %404, i64 4\l  %429 = load i8, i8 addrspace(4)* %428, align 1, !tbaa !17\l  %430 = zext i8 %429 to i64\l  %431 = shl nuw nsw i64 %430, 32\l  %432 = or i64 %427, %431\l  %433 = getelementptr inbounds i8, i8 addrspace(4)* %404, i64 5\l  %434 = load i8, i8 addrspace(4)* %433, align 1, !tbaa !17\l  %435 = zext i8 %434 to i64\l  %436 = shl nuw nsw i64 %435, 40\l  %437 = or i64 %432, %436\l  %438 = getelementptr inbounds i8, i8 addrspace(4)* %404, i64 6\l  %439 = load i8, i8 addrspace(4)* %438, align 1, !tbaa !17\l  %440 = zext i8 %439 to i64\l  %441 = shl nuw nsw i64 %440, 48\l  %442 = or i64 %437, %441\l  %443 = getelementptr inbounds i8, i8 addrspace(4)* %404, i64 7\l  %444 = load i8, i8 addrspace(4)* %443, align 1, !tbaa !17\l  %445 = zext i8 %444 to i64\l  %446 = shl nuw i64 %445, 56\l  %447 = or i64 %442, %446\l  br label %461\l}"];
	Node0x48f79e0 -> Node0x48e76c0;
	Node0x48f7bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%448:\l448:                                              \l  %449 = phi i32 [ %459, %448 ], [ 0, %408 ]\l  %450 = phi i64 [ %458, %448 ], [ 0, %408 ]\l  %451 = zext i32 %449 to i64\l  %452 = getelementptr inbounds i8, i8 addrspace(4)* %404, i64 %451\l  %453 = load i8, i8 addrspace(4)* %452, align 1, !tbaa !17\l  %454 = zext i8 %453 to i64\l  %455 = shl i32 %449, 3\l  %456 = zext i32 %455 to i64\l  %457 = shl nuw i64 %454, %456\l  %458 = or i64 %457, %450\l  %459 = add nuw nsw i32 %449, 1\l  %460 = icmp eq i32 %459, %405\l  br i1 %460, label %461, label %448\l|{<s0>T|<s1>F}}"];
	Node0x48f7bc0:s0 -> Node0x48e76c0;
	Node0x48f7bc0:s1 -> Node0x48f7bc0;
	Node0x48e76c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%461:\l461:                                              \l  %462 = phi i64 [ %447, %410 ], [ 0, %408 ], [ %458, %448 ]\l  %463 = shl nuw nsw i64 %44, 2\l  %464 = add nuw nsw i64 %463, 28\l  %465 = and i64 %464, 480\l  %466 = and i64 %46, -225\l  %467 = or i64 %466, %465\l  %468 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef %467, i64 noundef %106, i64 noundef %166, i64 noundef %226, i64\l... noundef %286, i64 noundef %346, i64 noundef %406, i64 noundef %462) #10\l  %469 = sub i64 %36, %44\l  %470 = getelementptr inbounds i8, i8 addrspace(4)* %37, i64 %44\l  %471 = icmp eq i64 %469, 0\l  br i1 %471, label %472, label %35\l|{<s0>T|<s1>F}}"];
	Node0x48e76c0:s0 -> Node0x48e6580;
	Node0x48e76c0:s1 -> Node0x48e7240;
	Node0x48e6580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%472:\l472:                                              \l  %473 = phi \<2 x i64\> [ %30, %27 ], [ %468, %461 ]\l  %474 = mul i32 %12, %11\l  %475 = icmp ugt i32 %7, %474\l  %476 = zext i1 %475 to i32\l  %477 = add i32 %12, %476\l  %478 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %479 = mul i32 %477, %478\l  %480 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %481 = add i32 %479, %480\l  %482 = zext i16 %18 to i32\l  %483 = mul i32 %481, %482\l  %484 = add i32 %483, %3\l  %485 = zext i16 %15 to i32\l  %486 = mul i32 %484, %485\l  %487 = add i32 %486, %2\l  %488 = mul i32 %487, %11\l  %489 = add i32 %488, %1\l  %490 = extractelement \<2 x i64\> %473, i64 0\l  %491 = zext i32 %1 to i64\l  %492 = and i64 %490, -225\l  %493 = or i64 %492, 32\l  %494 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef %493, i64 noundef %491, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %495 = extractelement \<2 x i64\> %494, i64 0\l  %496 = zext i32 %2 to i64\l  %497 = and i64 %495, -225\l  %498 = or i64 %497, 32\l  %499 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef %498, i64 noundef %496, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %500 = extractelement \<2 x i64\> %499, i64 0\l  %501 = zext i32 %3 to i64\l  %502 = and i64 %500, -225\l  %503 = or i64 %502, 32\l  %504 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef %503, i64 noundef %501, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %505 = extractelement \<2 x i64\> %504, i64 0\l  %506 = zext i32 %489 to i64\l  %507 = and i64 %505, -227\l  %508 = or i64 %507, 34\l  %509 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef %508, i64 noundef %506, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  ret void\l}"];
}
