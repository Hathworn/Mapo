digraph "CFG for '_Z12kernel_3D_3Dv' function" {
	label="CFG for '_Z12kernel_3D_3Dv' function";

	Node0x5ad00a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%0:\l  %1 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %2 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !4\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %6 = bitcast i8 addrspace(4)* %5 to i32 addrspace(4)*\l  %7 = load i32, i32 addrspace(4)* %6, align 4, !tbaa !5\l  %8 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !14, !invariant.load\l... !15\l  %11 = zext i16 %10 to i32\l  %12 = udiv i32 %7, %11\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 16\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 8, !tbaa !16\l  %16 = getelementptr i8, i8 addrspace(4)* %4, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !14, !invariant.load\l... !15\l  %19 = zext i16 %18 to i32\l  %20 = udiv i32 %15, %19\l  %21 = getelementptr i8, i8 addrspace(4)* %4, i64 8\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 4, !range !14, !invariant.load\l... !15\l  %24 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %25 = getelementptr inbounds i8, i8 addrspace(4)* %24, i64 24\l  %26 = bitcast i8 addrspace(4)* %25 to i64 addrspace(4)*\l  %27 = load i64, i64 addrspace(4)* %26, align 8, !tbaa !17\l  %28 = inttoptr i64 %27 to i8 addrspace(1)*\l  %29 = addrspacecast i8 addrspace(1)* %28 to i8*\l  %30 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %29,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %31 = extractelement \<2 x i64\> %30, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([53 x i8], [53 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %32, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5ad00a0:s0 -> Node0x5ad4ca0;
	Node0x5ad00a0:s1 -> Node0x5ad5690;
	Node0x5ad4ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%32:\l32:                                               \l  %33 = and i64 %31, -225\l  %34 = or i64 %33, 32\l  %35 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %29,\l... i64 noundef %34, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %477\l}"];
	Node0x5ad4ca0 -> Node0x5ad5a70;
	Node0x5ad5690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%36:\l36:                                               \l  %37 = and i64 %31, 2\l  %38 = and i64 %31, -3\l  %39 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %38, i64 0\l  br label %40\l}"];
	Node0x5ad5690 -> Node0x5ad6610;
	Node0x5ad6610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%40:\l40:                                               \l  %41 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([53 x i8], [53 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([53 x i8], [53 x i8] addrspace(4)*\l... @.str, i64 0, i64 52) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([53 x i8]* addrspacecast ([53 x i8] addrspace(4)* @.str to [53 x i8]*) to\l... i64)), i64 1))), %36 ], [ %474, %466 ]\l  %42 = phi i8 addrspace(4)* [ getelementptr inbounds ([53 x i8], [53 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %36 ], [ %475, %466 ]\l  %43 = phi \<2 x i64\> [ %39, %36 ], [ %473, %466 ]\l  %44 = icmp ugt i64 %41, 56\l  %45 = extractelement \<2 x i64\> %43, i64 0\l  %46 = or i64 %45, %37\l  %47 = insertelement \<2 x i64\> poison, i64 %46, i64 0\l  %48 = select i1 %44, \<2 x i64\> %43, \<2 x i64\> %47\l  %49 = tail call i64 @llvm.umin.i64(i64 %41, i64 56)\l  %50 = trunc i64 %49 to i32\l  %51 = extractelement \<2 x i64\> %48, i64 0\l  %52 = icmp ugt i32 %50, 7\l  br i1 %52, label %55, label %53\l|{<s0>T|<s1>F}}"];
	Node0x5ad6610:s0 -> Node0x5ad7580;
	Node0x5ad6610:s1 -> Node0x5ad7610;
	Node0x5ad7610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%53:\l53:                                               \l  %54 = icmp eq i32 %50, 0\l  br i1 %54, label %108, label %95\l|{<s0>T|<s1>F}}"];
	Node0x5ad7610:s0 -> Node0x5ad7810;
	Node0x5ad7610:s1 -> Node0x5ad7860;
	Node0x5ad7580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%55:\l55:                                               \l  %56 = load i8, i8 addrspace(4)* %42, align 1, !tbaa !18\l  %57 = zext i8 %56 to i64\l  %58 = getelementptr inbounds i8, i8 addrspace(4)* %42, i64 1\l  %59 = load i8, i8 addrspace(4)* %58, align 1, !tbaa !18\l  %60 = zext i8 %59 to i64\l  %61 = shl nuw nsw i64 %60, 8\l  %62 = or i64 %61, %57\l  %63 = getelementptr inbounds i8, i8 addrspace(4)* %42, i64 2\l  %64 = load i8, i8 addrspace(4)* %63, align 1, !tbaa !18\l  %65 = zext i8 %64 to i64\l  %66 = shl nuw nsw i64 %65, 16\l  %67 = or i64 %62, %66\l  %68 = getelementptr inbounds i8, i8 addrspace(4)* %42, i64 3\l  %69 = load i8, i8 addrspace(4)* %68, align 1, !tbaa !18\l  %70 = zext i8 %69 to i64\l  %71 = shl nuw nsw i64 %70, 24\l  %72 = or i64 %67, %71\l  %73 = getelementptr inbounds i8, i8 addrspace(4)* %42, i64 4\l  %74 = load i8, i8 addrspace(4)* %73, align 1, !tbaa !18\l  %75 = zext i8 %74 to i64\l  %76 = shl nuw nsw i64 %75, 32\l  %77 = or i64 %72, %76\l  %78 = getelementptr inbounds i8, i8 addrspace(4)* %42, i64 5\l  %79 = load i8, i8 addrspace(4)* %78, align 1, !tbaa !18\l  %80 = zext i8 %79 to i64\l  %81 = shl nuw nsw i64 %80, 40\l  %82 = or i64 %77, %81\l  %83 = getelementptr inbounds i8, i8 addrspace(4)* %42, i64 6\l  %84 = load i8, i8 addrspace(4)* %83, align 1, !tbaa !18\l  %85 = zext i8 %84 to i64\l  %86 = shl nuw nsw i64 %85, 48\l  %87 = or i64 %82, %86\l  %88 = getelementptr inbounds i8, i8 addrspace(4)* %42, i64 7\l  %89 = load i8, i8 addrspace(4)* %88, align 1, !tbaa !18\l  %90 = zext i8 %89 to i64\l  %91 = shl nuw i64 %90, 56\l  %92 = or i64 %87, %91\l  %93 = add nsw i32 %50, -8\l  %94 = getelementptr inbounds i8, i8 addrspace(4)* %42, i64 8\l  br label %108\l}"];
	Node0x5ad7580 -> Node0x5ad7810;
	Node0x5ad7860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%95:\l95:                                               \l  %96 = phi i32 [ %106, %95 ], [ 0, %53 ]\l  %97 = phi i64 [ %105, %95 ], [ 0, %53 ]\l  %98 = zext i32 %96 to i64\l  %99 = getelementptr inbounds i8, i8 addrspace(4)* %42, i64 %98\l  %100 = load i8, i8 addrspace(4)* %99, align 1, !tbaa !18\l  %101 = zext i8 %100 to i64\l  %102 = shl i32 %96, 3\l  %103 = zext i32 %102 to i64\l  %104 = shl nuw i64 %101, %103\l  %105 = or i64 %104, %97\l  %106 = add nuw nsw i32 %96, 1\l  %107 = icmp eq i32 %106, %50\l  br i1 %107, label %108, label %95, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5ad7860:s0 -> Node0x5ad7810;
	Node0x5ad7860:s1 -> Node0x5ad7860;
	Node0x5ad7810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%108:\l108:                                              \l  %109 = phi i8 addrspace(4)* [ %94, %55 ], [ %42, %53 ], [ %42, %95 ]\l  %110 = phi i32 [ %93, %55 ], [ 0, %53 ], [ 0, %95 ]\l  %111 = phi i64 [ %92, %55 ], [ 0, %53 ], [ %105, %95 ]\l  %112 = icmp ugt i32 %110, 7\l  br i1 %112, label %115, label %113\l|{<s0>T|<s1>F}}"];
	Node0x5ad7810:s0 -> Node0x5ada480;
	Node0x5ad7810:s1 -> Node0x5ada4d0;
	Node0x5ada4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%113:\l113:                                              \l  %114 = icmp eq i32 %110, 0\l  br i1 %114, label %168, label %155\l|{<s0>T|<s1>F}}"];
	Node0x5ada4d0:s0 -> Node0x5ada6a0;
	Node0x5ada4d0:s1 -> Node0x5ada6f0;
	Node0x5ada480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%115:\l115:                                              \l  %116 = load i8, i8 addrspace(4)* %109, align 1, !tbaa !18\l  %117 = zext i8 %116 to i64\l  %118 = getelementptr inbounds i8, i8 addrspace(4)* %109, i64 1\l  %119 = load i8, i8 addrspace(4)* %118, align 1, !tbaa !18\l  %120 = zext i8 %119 to i64\l  %121 = shl nuw nsw i64 %120, 8\l  %122 = or i64 %121, %117\l  %123 = getelementptr inbounds i8, i8 addrspace(4)* %109, i64 2\l  %124 = load i8, i8 addrspace(4)* %123, align 1, !tbaa !18\l  %125 = zext i8 %124 to i64\l  %126 = shl nuw nsw i64 %125, 16\l  %127 = or i64 %122, %126\l  %128 = getelementptr inbounds i8, i8 addrspace(4)* %109, i64 3\l  %129 = load i8, i8 addrspace(4)* %128, align 1, !tbaa !18\l  %130 = zext i8 %129 to i64\l  %131 = shl nuw nsw i64 %130, 24\l  %132 = or i64 %127, %131\l  %133 = getelementptr inbounds i8, i8 addrspace(4)* %109, i64 4\l  %134 = load i8, i8 addrspace(4)* %133, align 1, !tbaa !18\l  %135 = zext i8 %134 to i64\l  %136 = shl nuw nsw i64 %135, 32\l  %137 = or i64 %132, %136\l  %138 = getelementptr inbounds i8, i8 addrspace(4)* %109, i64 5\l  %139 = load i8, i8 addrspace(4)* %138, align 1, !tbaa !18\l  %140 = zext i8 %139 to i64\l  %141 = shl nuw nsw i64 %140, 40\l  %142 = or i64 %137, %141\l  %143 = getelementptr inbounds i8, i8 addrspace(4)* %109, i64 6\l  %144 = load i8, i8 addrspace(4)* %143, align 1, !tbaa !18\l  %145 = zext i8 %144 to i64\l  %146 = shl nuw nsw i64 %145, 48\l  %147 = or i64 %142, %146\l  %148 = getelementptr inbounds i8, i8 addrspace(4)* %109, i64 7\l  %149 = load i8, i8 addrspace(4)* %148, align 1, !tbaa !18\l  %150 = zext i8 %149 to i64\l  %151 = shl nuw i64 %150, 56\l  %152 = or i64 %147, %151\l  %153 = add nsw i32 %110, -8\l  %154 = getelementptr inbounds i8, i8 addrspace(4)* %109, i64 8\l  br label %168\l}"];
	Node0x5ada480 -> Node0x5ada6a0;
	Node0x5ada6f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%155:\l155:                                              \l  %156 = phi i32 [ %166, %155 ], [ 0, %113 ]\l  %157 = phi i64 [ %165, %155 ], [ 0, %113 ]\l  %158 = zext i32 %156 to i64\l  %159 = getelementptr inbounds i8, i8 addrspace(4)* %109, i64 %158\l  %160 = load i8, i8 addrspace(4)* %159, align 1, !tbaa !18\l  %161 = zext i8 %160 to i64\l  %162 = shl i32 %156, 3\l  %163 = zext i32 %162 to i64\l  %164 = shl nuw i64 %161, %163\l  %165 = or i64 %164, %157\l  %166 = add nuw nsw i32 %156, 1\l  %167 = icmp eq i32 %166, %110\l  br i1 %167, label %168, label %155\l|{<s0>T|<s1>F}}"];
	Node0x5ada6f0:s0 -> Node0x5ada6a0;
	Node0x5ada6f0:s1 -> Node0x5ada6f0;
	Node0x5ada6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%168:\l168:                                              \l  %169 = phi i8 addrspace(4)* [ %154, %115 ], [ %109, %113 ], [ %109, %155 ]\l  %170 = phi i32 [ %153, %115 ], [ 0, %113 ], [ 0, %155 ]\l  %171 = phi i64 [ %152, %115 ], [ 0, %113 ], [ %165, %155 ]\l  %172 = icmp ugt i32 %170, 7\l  br i1 %172, label %175, label %173\l|{<s0>T|<s1>F}}"];
	Node0x5ada6a0:s0 -> Node0x5adcbc0;
	Node0x5ada6a0:s1 -> Node0x5adcc10;
	Node0x5adcc10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%173:\l173:                                              \l  %174 = icmp eq i32 %170, 0\l  br i1 %174, label %228, label %215\l|{<s0>T|<s1>F}}"];
	Node0x5adcc10:s0 -> Node0x5adcda0;
	Node0x5adcc10:s1 -> Node0x5adcdf0;
	Node0x5adcbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%175:\l175:                                              \l  %176 = load i8, i8 addrspace(4)* %169, align 1, !tbaa !18\l  %177 = zext i8 %176 to i64\l  %178 = getelementptr inbounds i8, i8 addrspace(4)* %169, i64 1\l  %179 = load i8, i8 addrspace(4)* %178, align 1, !tbaa !18\l  %180 = zext i8 %179 to i64\l  %181 = shl nuw nsw i64 %180, 8\l  %182 = or i64 %181, %177\l  %183 = getelementptr inbounds i8, i8 addrspace(4)* %169, i64 2\l  %184 = load i8, i8 addrspace(4)* %183, align 1, !tbaa !18\l  %185 = zext i8 %184 to i64\l  %186 = shl nuw nsw i64 %185, 16\l  %187 = or i64 %182, %186\l  %188 = getelementptr inbounds i8, i8 addrspace(4)* %169, i64 3\l  %189 = load i8, i8 addrspace(4)* %188, align 1, !tbaa !18\l  %190 = zext i8 %189 to i64\l  %191 = shl nuw nsw i64 %190, 24\l  %192 = or i64 %187, %191\l  %193 = getelementptr inbounds i8, i8 addrspace(4)* %169, i64 4\l  %194 = load i8, i8 addrspace(4)* %193, align 1, !tbaa !18\l  %195 = zext i8 %194 to i64\l  %196 = shl nuw nsw i64 %195, 32\l  %197 = or i64 %192, %196\l  %198 = getelementptr inbounds i8, i8 addrspace(4)* %169, i64 5\l  %199 = load i8, i8 addrspace(4)* %198, align 1, !tbaa !18\l  %200 = zext i8 %199 to i64\l  %201 = shl nuw nsw i64 %200, 40\l  %202 = or i64 %197, %201\l  %203 = getelementptr inbounds i8, i8 addrspace(4)* %169, i64 6\l  %204 = load i8, i8 addrspace(4)* %203, align 1, !tbaa !18\l  %205 = zext i8 %204 to i64\l  %206 = shl nuw nsw i64 %205, 48\l  %207 = or i64 %202, %206\l  %208 = getelementptr inbounds i8, i8 addrspace(4)* %169, i64 7\l  %209 = load i8, i8 addrspace(4)* %208, align 1, !tbaa !18\l  %210 = zext i8 %209 to i64\l  %211 = shl nuw i64 %210, 56\l  %212 = or i64 %207, %211\l  %213 = add nsw i32 %170, -8\l  %214 = getelementptr inbounds i8, i8 addrspace(4)* %169, i64 8\l  br label %228\l}"];
	Node0x5adcbc0 -> Node0x5adcda0;
	Node0x5adcdf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%215:\l215:                                              \l  %216 = phi i32 [ %226, %215 ], [ 0, %173 ]\l  %217 = phi i64 [ %225, %215 ], [ 0, %173 ]\l  %218 = zext i32 %216 to i64\l  %219 = getelementptr inbounds i8, i8 addrspace(4)* %169, i64 %218\l  %220 = load i8, i8 addrspace(4)* %219, align 1, !tbaa !18\l  %221 = zext i8 %220 to i64\l  %222 = shl i32 %216, 3\l  %223 = zext i32 %222 to i64\l  %224 = shl nuw i64 %221, %223\l  %225 = or i64 %224, %217\l  %226 = add nuw nsw i32 %216, 1\l  %227 = icmp eq i32 %226, %170\l  br i1 %227, label %228, label %215\l|{<s0>T|<s1>F}}"];
	Node0x5adcdf0:s0 -> Node0x5adcda0;
	Node0x5adcdf0:s1 -> Node0x5adcdf0;
	Node0x5adcda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%228:\l228:                                              \l  %229 = phi i8 addrspace(4)* [ %214, %175 ], [ %169, %173 ], [ %169, %215 ]\l  %230 = phi i32 [ %213, %175 ], [ 0, %173 ], [ 0, %215 ]\l  %231 = phi i64 [ %212, %175 ], [ 0, %173 ], [ %225, %215 ]\l  %232 = icmp ugt i32 %230, 7\l  br i1 %232, label %235, label %233\l|{<s0>T|<s1>F}}"];
	Node0x5adcda0:s0 -> Node0x5adee40;
	Node0x5adcda0:s1 -> Node0x5adee90;
	Node0x5adee90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%233:\l233:                                              \l  %234 = icmp eq i32 %230, 0\l  br i1 %234, label %288, label %275\l|{<s0>T|<s1>F}}"];
	Node0x5adee90:s0 -> Node0x5adf020;
	Node0x5adee90:s1 -> Node0x5adf070;
	Node0x5adee40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%235:\l235:                                              \l  %236 = load i8, i8 addrspace(4)* %229, align 1, !tbaa !18\l  %237 = zext i8 %236 to i64\l  %238 = getelementptr inbounds i8, i8 addrspace(4)* %229, i64 1\l  %239 = load i8, i8 addrspace(4)* %238, align 1, !tbaa !18\l  %240 = zext i8 %239 to i64\l  %241 = shl nuw nsw i64 %240, 8\l  %242 = or i64 %241, %237\l  %243 = getelementptr inbounds i8, i8 addrspace(4)* %229, i64 2\l  %244 = load i8, i8 addrspace(4)* %243, align 1, !tbaa !18\l  %245 = zext i8 %244 to i64\l  %246 = shl nuw nsw i64 %245, 16\l  %247 = or i64 %242, %246\l  %248 = getelementptr inbounds i8, i8 addrspace(4)* %229, i64 3\l  %249 = load i8, i8 addrspace(4)* %248, align 1, !tbaa !18\l  %250 = zext i8 %249 to i64\l  %251 = shl nuw nsw i64 %250, 24\l  %252 = or i64 %247, %251\l  %253 = getelementptr inbounds i8, i8 addrspace(4)* %229, i64 4\l  %254 = load i8, i8 addrspace(4)* %253, align 1, !tbaa !18\l  %255 = zext i8 %254 to i64\l  %256 = shl nuw nsw i64 %255, 32\l  %257 = or i64 %252, %256\l  %258 = getelementptr inbounds i8, i8 addrspace(4)* %229, i64 5\l  %259 = load i8, i8 addrspace(4)* %258, align 1, !tbaa !18\l  %260 = zext i8 %259 to i64\l  %261 = shl nuw nsw i64 %260, 40\l  %262 = or i64 %257, %261\l  %263 = getelementptr inbounds i8, i8 addrspace(4)* %229, i64 6\l  %264 = load i8, i8 addrspace(4)* %263, align 1, !tbaa !18\l  %265 = zext i8 %264 to i64\l  %266 = shl nuw nsw i64 %265, 48\l  %267 = or i64 %262, %266\l  %268 = getelementptr inbounds i8, i8 addrspace(4)* %229, i64 7\l  %269 = load i8, i8 addrspace(4)* %268, align 1, !tbaa !18\l  %270 = zext i8 %269 to i64\l  %271 = shl nuw i64 %270, 56\l  %272 = or i64 %267, %271\l  %273 = add nsw i32 %230, -8\l  %274 = getelementptr inbounds i8, i8 addrspace(4)* %229, i64 8\l  br label %288\l}"];
	Node0x5adee40 -> Node0x5adf020;
	Node0x5adf070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%275:\l275:                                              \l  %276 = phi i32 [ %286, %275 ], [ 0, %233 ]\l  %277 = phi i64 [ %285, %275 ], [ 0, %233 ]\l  %278 = zext i32 %276 to i64\l  %279 = getelementptr inbounds i8, i8 addrspace(4)* %229, i64 %278\l  %280 = load i8, i8 addrspace(4)* %279, align 1, !tbaa !18\l  %281 = zext i8 %280 to i64\l  %282 = shl i32 %276, 3\l  %283 = zext i32 %282 to i64\l  %284 = shl nuw i64 %281, %283\l  %285 = or i64 %284, %277\l  %286 = add nuw nsw i32 %276, 1\l  %287 = icmp eq i32 %286, %230\l  br i1 %287, label %288, label %275\l|{<s0>T|<s1>F}}"];
	Node0x5adf070:s0 -> Node0x5adf020;
	Node0x5adf070:s1 -> Node0x5adf070;
	Node0x5adf020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%288:\l288:                                              \l  %289 = phi i8 addrspace(4)* [ %274, %235 ], [ %229, %233 ], [ %229, %275 ]\l  %290 = phi i32 [ %273, %235 ], [ 0, %233 ], [ 0, %275 ]\l  %291 = phi i64 [ %272, %235 ], [ 0, %233 ], [ %285, %275 ]\l  %292 = icmp ugt i32 %290, 7\l  br i1 %292, label %295, label %293\l|{<s0>T|<s1>F}}"];
	Node0x5adf020:s0 -> Node0x5ae18c0;
	Node0x5adf020:s1 -> Node0x5ae1910;
	Node0x5ae1910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%293:\l293:                                              \l  %294 = icmp eq i32 %290, 0\l  br i1 %294, label %348, label %335\l|{<s0>T|<s1>F}}"];
	Node0x5ae1910:s0 -> Node0x5ae1aa0;
	Node0x5ae1910:s1 -> Node0x5ae1af0;
	Node0x5ae18c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%295:\l295:                                              \l  %296 = load i8, i8 addrspace(4)* %289, align 1, !tbaa !18\l  %297 = zext i8 %296 to i64\l  %298 = getelementptr inbounds i8, i8 addrspace(4)* %289, i64 1\l  %299 = load i8, i8 addrspace(4)* %298, align 1, !tbaa !18\l  %300 = zext i8 %299 to i64\l  %301 = shl nuw nsw i64 %300, 8\l  %302 = or i64 %301, %297\l  %303 = getelementptr inbounds i8, i8 addrspace(4)* %289, i64 2\l  %304 = load i8, i8 addrspace(4)* %303, align 1, !tbaa !18\l  %305 = zext i8 %304 to i64\l  %306 = shl nuw nsw i64 %305, 16\l  %307 = or i64 %302, %306\l  %308 = getelementptr inbounds i8, i8 addrspace(4)* %289, i64 3\l  %309 = load i8, i8 addrspace(4)* %308, align 1, !tbaa !18\l  %310 = zext i8 %309 to i64\l  %311 = shl nuw nsw i64 %310, 24\l  %312 = or i64 %307, %311\l  %313 = getelementptr inbounds i8, i8 addrspace(4)* %289, i64 4\l  %314 = load i8, i8 addrspace(4)* %313, align 1, !tbaa !18\l  %315 = zext i8 %314 to i64\l  %316 = shl nuw nsw i64 %315, 32\l  %317 = or i64 %312, %316\l  %318 = getelementptr inbounds i8, i8 addrspace(4)* %289, i64 5\l  %319 = load i8, i8 addrspace(4)* %318, align 1, !tbaa !18\l  %320 = zext i8 %319 to i64\l  %321 = shl nuw nsw i64 %320, 40\l  %322 = or i64 %317, %321\l  %323 = getelementptr inbounds i8, i8 addrspace(4)* %289, i64 6\l  %324 = load i8, i8 addrspace(4)* %323, align 1, !tbaa !18\l  %325 = zext i8 %324 to i64\l  %326 = shl nuw nsw i64 %325, 48\l  %327 = or i64 %322, %326\l  %328 = getelementptr inbounds i8, i8 addrspace(4)* %289, i64 7\l  %329 = load i8, i8 addrspace(4)* %328, align 1, !tbaa !18\l  %330 = zext i8 %329 to i64\l  %331 = shl nuw i64 %330, 56\l  %332 = or i64 %327, %331\l  %333 = add nsw i32 %290, -8\l  %334 = getelementptr inbounds i8, i8 addrspace(4)* %289, i64 8\l  br label %348\l}"];
	Node0x5ae18c0 -> Node0x5ae1aa0;
	Node0x5ae1af0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%335:\l335:                                              \l  %336 = phi i32 [ %346, %335 ], [ 0, %293 ]\l  %337 = phi i64 [ %345, %335 ], [ 0, %293 ]\l  %338 = zext i32 %336 to i64\l  %339 = getelementptr inbounds i8, i8 addrspace(4)* %289, i64 %338\l  %340 = load i8, i8 addrspace(4)* %339, align 1, !tbaa !18\l  %341 = zext i8 %340 to i64\l  %342 = shl i32 %336, 3\l  %343 = zext i32 %342 to i64\l  %344 = shl nuw i64 %341, %343\l  %345 = or i64 %344, %337\l  %346 = add nuw nsw i32 %336, 1\l  %347 = icmp eq i32 %346, %290\l  br i1 %347, label %348, label %335\l|{<s0>T|<s1>F}}"];
	Node0x5ae1af0:s0 -> Node0x5ae1aa0;
	Node0x5ae1af0:s1 -> Node0x5ae1af0;
	Node0x5ae1aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%348:\l348:                                              \l  %349 = phi i8 addrspace(4)* [ %334, %295 ], [ %289, %293 ], [ %289, %335 ]\l  %350 = phi i32 [ %333, %295 ], [ 0, %293 ], [ 0, %335 ]\l  %351 = phi i64 [ %332, %295 ], [ 0, %293 ], [ %345, %335 ]\l  %352 = icmp ugt i32 %350, 7\l  br i1 %352, label %355, label %353\l|{<s0>T|<s1>F}}"];
	Node0x5ae1aa0:s0 -> Node0x5ae4520;
	Node0x5ae1aa0:s1 -> Node0x5ae4570;
	Node0x5ae4570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%353:\l353:                                              \l  %354 = icmp eq i32 %350, 0\l  br i1 %354, label %408, label %395\l|{<s0>T|<s1>F}}"];
	Node0x5ae4570:s0 -> Node0x5ae4700;
	Node0x5ae4570:s1 -> Node0x5ae4750;
	Node0x5ae4520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%355:\l355:                                              \l  %356 = load i8, i8 addrspace(4)* %349, align 1, !tbaa !18\l  %357 = zext i8 %356 to i64\l  %358 = getelementptr inbounds i8, i8 addrspace(4)* %349, i64 1\l  %359 = load i8, i8 addrspace(4)* %358, align 1, !tbaa !18\l  %360 = zext i8 %359 to i64\l  %361 = shl nuw nsw i64 %360, 8\l  %362 = or i64 %361, %357\l  %363 = getelementptr inbounds i8, i8 addrspace(4)* %349, i64 2\l  %364 = load i8, i8 addrspace(4)* %363, align 1, !tbaa !18\l  %365 = zext i8 %364 to i64\l  %366 = shl nuw nsw i64 %365, 16\l  %367 = or i64 %362, %366\l  %368 = getelementptr inbounds i8, i8 addrspace(4)* %349, i64 3\l  %369 = load i8, i8 addrspace(4)* %368, align 1, !tbaa !18\l  %370 = zext i8 %369 to i64\l  %371 = shl nuw nsw i64 %370, 24\l  %372 = or i64 %367, %371\l  %373 = getelementptr inbounds i8, i8 addrspace(4)* %349, i64 4\l  %374 = load i8, i8 addrspace(4)* %373, align 1, !tbaa !18\l  %375 = zext i8 %374 to i64\l  %376 = shl nuw nsw i64 %375, 32\l  %377 = or i64 %372, %376\l  %378 = getelementptr inbounds i8, i8 addrspace(4)* %349, i64 5\l  %379 = load i8, i8 addrspace(4)* %378, align 1, !tbaa !18\l  %380 = zext i8 %379 to i64\l  %381 = shl nuw nsw i64 %380, 40\l  %382 = or i64 %377, %381\l  %383 = getelementptr inbounds i8, i8 addrspace(4)* %349, i64 6\l  %384 = load i8, i8 addrspace(4)* %383, align 1, !tbaa !18\l  %385 = zext i8 %384 to i64\l  %386 = shl nuw nsw i64 %385, 48\l  %387 = or i64 %382, %386\l  %388 = getelementptr inbounds i8, i8 addrspace(4)* %349, i64 7\l  %389 = load i8, i8 addrspace(4)* %388, align 1, !tbaa !18\l  %390 = zext i8 %389 to i64\l  %391 = shl nuw i64 %390, 56\l  %392 = or i64 %387, %391\l  %393 = add nsw i32 %350, -8\l  %394 = getelementptr inbounds i8, i8 addrspace(4)* %349, i64 8\l  br label %408\l}"];
	Node0x5ae4520 -> Node0x5ae4700;
	Node0x5ae4750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%395:\l395:                                              \l  %396 = phi i32 [ %406, %395 ], [ 0, %353 ]\l  %397 = phi i64 [ %405, %395 ], [ 0, %353 ]\l  %398 = zext i32 %396 to i64\l  %399 = getelementptr inbounds i8, i8 addrspace(4)* %349, i64 %398\l  %400 = load i8, i8 addrspace(4)* %399, align 1, !tbaa !18\l  %401 = zext i8 %400 to i64\l  %402 = shl i32 %396, 3\l  %403 = zext i32 %402 to i64\l  %404 = shl nuw i64 %401, %403\l  %405 = or i64 %404, %397\l  %406 = add nuw nsw i32 %396, 1\l  %407 = icmp eq i32 %406, %350\l  br i1 %407, label %408, label %395\l|{<s0>T|<s1>F}}"];
	Node0x5ae4750:s0 -> Node0x5ae4700;
	Node0x5ae4750:s1 -> Node0x5ae4750;
	Node0x5ae4700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%408:\l408:                                              \l  %409 = phi i8 addrspace(4)* [ %394, %355 ], [ %349, %353 ], [ %349, %395 ]\l  %410 = phi i32 [ %393, %355 ], [ 0, %353 ], [ 0, %395 ]\l  %411 = phi i64 [ %392, %355 ], [ 0, %353 ], [ %405, %395 ]\l  %412 = icmp ugt i32 %410, 7\l  br i1 %412, label %415, label %413\l|{<s0>T|<s1>F}}"];
	Node0x5ae4700:s0 -> Node0x5ae6d80;
	Node0x5ae4700:s1 -> Node0x5ae6dd0;
	Node0x5ae6dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%413:\l413:                                              \l  %414 = icmp eq i32 %410, 0\l  br i1 %414, label %466, label %453\l|{<s0>T|<s1>F}}"];
	Node0x5ae6dd0:s0 -> Node0x5ad6ab0;
	Node0x5ae6dd0:s1 -> Node0x5ae6f60;
	Node0x5ae6d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%415:\l415:                                              \l  %416 = load i8, i8 addrspace(4)* %409, align 1, !tbaa !18\l  %417 = zext i8 %416 to i64\l  %418 = getelementptr inbounds i8, i8 addrspace(4)* %409, i64 1\l  %419 = load i8, i8 addrspace(4)* %418, align 1, !tbaa !18\l  %420 = zext i8 %419 to i64\l  %421 = shl nuw nsw i64 %420, 8\l  %422 = or i64 %421, %417\l  %423 = getelementptr inbounds i8, i8 addrspace(4)* %409, i64 2\l  %424 = load i8, i8 addrspace(4)* %423, align 1, !tbaa !18\l  %425 = zext i8 %424 to i64\l  %426 = shl nuw nsw i64 %425, 16\l  %427 = or i64 %422, %426\l  %428 = getelementptr inbounds i8, i8 addrspace(4)* %409, i64 3\l  %429 = load i8, i8 addrspace(4)* %428, align 1, !tbaa !18\l  %430 = zext i8 %429 to i64\l  %431 = shl nuw nsw i64 %430, 24\l  %432 = or i64 %427, %431\l  %433 = getelementptr inbounds i8, i8 addrspace(4)* %409, i64 4\l  %434 = load i8, i8 addrspace(4)* %433, align 1, !tbaa !18\l  %435 = zext i8 %434 to i64\l  %436 = shl nuw nsw i64 %435, 32\l  %437 = or i64 %432, %436\l  %438 = getelementptr inbounds i8, i8 addrspace(4)* %409, i64 5\l  %439 = load i8, i8 addrspace(4)* %438, align 1, !tbaa !18\l  %440 = zext i8 %439 to i64\l  %441 = shl nuw nsw i64 %440, 40\l  %442 = or i64 %437, %441\l  %443 = getelementptr inbounds i8, i8 addrspace(4)* %409, i64 6\l  %444 = load i8, i8 addrspace(4)* %443, align 1, !tbaa !18\l  %445 = zext i8 %444 to i64\l  %446 = shl nuw nsw i64 %445, 48\l  %447 = or i64 %442, %446\l  %448 = getelementptr inbounds i8, i8 addrspace(4)* %409, i64 7\l  %449 = load i8, i8 addrspace(4)* %448, align 1, !tbaa !18\l  %450 = zext i8 %449 to i64\l  %451 = shl nuw i64 %450, 56\l  %452 = or i64 %447, %451\l  br label %466\l}"];
	Node0x5ae6d80 -> Node0x5ad6ab0;
	Node0x5ae6f60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%453:\l453:                                              \l  %454 = phi i32 [ %464, %453 ], [ 0, %413 ]\l  %455 = phi i64 [ %463, %453 ], [ 0, %413 ]\l  %456 = zext i32 %454 to i64\l  %457 = getelementptr inbounds i8, i8 addrspace(4)* %409, i64 %456\l  %458 = load i8, i8 addrspace(4)* %457, align 1, !tbaa !18\l  %459 = zext i8 %458 to i64\l  %460 = shl i32 %454, 3\l  %461 = zext i32 %460 to i64\l  %462 = shl nuw i64 %459, %461\l  %463 = or i64 %462, %455\l  %464 = add nuw nsw i32 %454, 1\l  %465 = icmp eq i32 %464, %410\l  br i1 %465, label %466, label %453\l|{<s0>T|<s1>F}}"];
	Node0x5ae6f60:s0 -> Node0x5ad6ab0;
	Node0x5ae6f60:s1 -> Node0x5ae6f60;
	Node0x5ad6ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%466:\l466:                                              \l  %467 = phi i64 [ %452, %415 ], [ 0, %413 ], [ %463, %453 ]\l  %468 = shl nuw nsw i64 %49, 2\l  %469 = add nuw nsw i64 %468, 28\l  %470 = and i64 %469, 480\l  %471 = and i64 %51, -225\l  %472 = or i64 %471, %470\l  %473 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %29,\l... i64 noundef %472, i64 noundef %111, i64 noundef %171, i64 noundef %231, i64\l... noundef %291, i64 noundef %351, i64 noundef %411, i64 noundef %467) #10\l  %474 = sub i64 %41, %49\l  %475 = getelementptr inbounds i8, i8 addrspace(4)* %42, i64 %49\l  %476 = icmp eq i64 %474, 0\l  br i1 %476, label %477, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5ad6ab0:s0 -> Node0x5ad5a70;
	Node0x5ad6ab0:s1 -> Node0x5ad6610;
	Node0x5ad5a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%477:\l477:                                              \l  %478 = phi \<2 x i64\> [ %35, %32 ], [ %473, %466 ]\l  %479 = mul i32 %20, %19\l  %480 = icmp ugt i32 %15, %479\l  %481 = zext i1 %480 to i32\l  %482 = add i32 %20, %481\l  %483 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %484 = mul i32 %482, %483\l  %485 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %486 = add i32 %484, %485\l  %487 = mul i32 %12, %11\l  %488 = icmp ugt i32 %7, %487\l  %489 = zext i1 %488 to i32\l  %490 = add i32 %12, %489\l  %491 = mul i32 %486, %490\l  %492 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %493 = add i32 %491, %492\l  %494 = zext i16 %23 to i32\l  %495 = mul i32 %493, %494\l  %496 = add i32 %495, %3\l  %497 = mul i32 %496, %19\l  %498 = add i32 %497, %2\l  %499 = mul i32 %498, %11\l  %500 = add i32 %499, %1\l  %501 = extractelement \<2 x i64\> %478, i64 0\l  %502 = zext i32 %1 to i64\l  %503 = and i64 %501, -225\l  %504 = or i64 %503, 32\l  %505 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %29,\l... i64 noundef %504, i64 noundef %502, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %506 = extractelement \<2 x i64\> %505, i64 0\l  %507 = zext i32 %2 to i64\l  %508 = and i64 %506, -225\l  %509 = or i64 %508, 32\l  %510 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %29,\l... i64 noundef %509, i64 noundef %507, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %511 = extractelement \<2 x i64\> %510, i64 0\l  %512 = zext i32 %3 to i64\l  %513 = and i64 %511, -225\l  %514 = or i64 %513, 32\l  %515 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %29,\l... i64 noundef %514, i64 noundef %512, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %516 = extractelement \<2 x i64\> %515, i64 0\l  %517 = zext i32 %500 to i64\l  %518 = and i64 %516, -227\l  %519 = or i64 %518, 34\l  %520 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %29,\l... i64 noundef %519, i64 noundef %517, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  ret void\l}"];
}
