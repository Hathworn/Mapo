digraph "CFG for '_Z9k_stencilPiS_i' function" {
	label="CFG for '_Z9k_stencilPiS_i' function";

	Node0x5f18e80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add nsw i32 %11, %4\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5f18e80:s0 -> Node0x5f19c10;
	Node0x5f18e80:s1 -> Node0x5f1ae10;
	Node0x5f19c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %15\l  %17 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %18 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %4\l  store i32 %17, i32 addrspace(3)* %18, align 4, !tbaa !7\l  %19 = icmp ult i32 %4, 3\l  br i1 %19, label %20, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5f19c10:s0 -> Node0x5f1c110;
	Node0x5f19c10:s1 -> Node0x5f1c1a0;
	Node0x5f1c110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%20:\l20:                                               \l  %21 = add i32 %12, %10\l  %22 = icmp ult i32 %21, %2\l  br i1 %22, label %23, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5f1c110:s0 -> Node0x5f1c400;
	Node0x5f1c110:s1 -> Node0x5f1c1a0;
	Node0x5f1c400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%23:\l23:                                               \l  %24 = zext i32 %21 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %27 = add nuw nsw i32 %4, %10\l  %28 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %27\l  store i32 %26, i32 addrspace(3)* %28, align 4, !tbaa !7\l  br label %29\l}"];
	Node0x5f1c400 -> Node0x5f1c1a0;
	Node0x5f1c1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%29:\l29:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %30 = add nsw i32 %2, -3\l  %31 = icmp slt i32 %12, %30\l  br i1 %31, label %32, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5f1c1a0:s0 -> Node0x5f1ccb0;
	Node0x5f1c1a0:s1 -> Node0x5f1ae10;
	Node0x5f1ccb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%32:\l32:                                               \l  %33 = load i32, i32 addrspace(3)* %18, align 4, !tbaa !7\l  %34 = add nuw nsw i32 %4, 1\l  %35 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %34\l  %36 = load i32, i32 addrspace(3)* %35, align 4, !tbaa !7\l  %37 = add nsw i32 %36, %33\l  %38 = add nuw nsw i32 %4, 2\l  %39 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %38\l  %40 = load i32, i32 addrspace(3)* %39, align 4, !tbaa !7\l  %41 = add nsw i32 %40, %37\l  %42 = add nuw nsw i32 %4, 3\l  %43 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s, i32 0,\l... i32 %42\l  %44 = load i32, i32 addrspace(3)* %43, align 4, !tbaa !7\l  %45 = add nsw i32 %44, %41\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %15\l  store i32 %45, i32 addrspace(1)* %46, align 4, !tbaa !7\l  br label %47\l}"];
	Node0x5f1ccb0 -> Node0x5f1ae10;
	Node0x5f1ae10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  ret void\l}"];
}
