digraph "CFG for '_Z15MatrixMulKernelPfS_S_i' function" {
	label="CFG for '_Z15MatrixMulKernelPfS_S_i' function";

	Node0x577db20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %9 = shl nsw i32 %6, 2\l  %10 = add nsw i32 %9, %8\l  %11 = shl nsw i32 %5, 2\l  %12 = add nsw i32 %11, %7\l  %13 = sdiv i32 %3, 4\l  %14 = icmp sgt i32 %3, 3\l  %15 = mul nsw i32 %10, %3\l  br i1 %14, label %16, label %30\l|{<s0>T|<s1>F}}"];
	Node0x577db20:s0 -> Node0x577ffd0;
	Node0x577db20:s1 -> Node0x5780060;
	Node0x577ffd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%16:\l16:                                               \l  %17 = add i32 %15, %7\l  %18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ15MatrixMulKernelPfS_S_iE4ds_M, i32 0, i32 %8, i32 %7\l  %19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ15MatrixMulKernelPfS_S_iE4ds_N, i32 0, i32 %8, i32 %7\l  %20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ15MatrixMulKernelPfS_S_iE4ds_M, i32 0, i32 %8, i32 0\l  %21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ15MatrixMulKernelPfS_S_iE4ds_N, i32 0, i32 0, i32 %7\l  %22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ15MatrixMulKernelPfS_S_iE4ds_M, i32 0, i32 %8, i32 1\l  %23 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ15MatrixMulKernelPfS_S_iE4ds_N, i32 0, i32 1, i32 %7\l  %24 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ15MatrixMulKernelPfS_S_iE4ds_M, i32 0, i32 %8, i32 2\l  %25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ15MatrixMulKernelPfS_S_iE4ds_N, i32 0, i32 2, i32 %7\l  %26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ15MatrixMulKernelPfS_S_iE4ds_M, i32 0, i32 %8, i32 3\l  %27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ15MatrixMulKernelPfS_S_iE4ds_N, i32 0, i32 3, i32 %7\l  br label %35\l}"];
	Node0x577ffd0 -> Node0x5780300;
	Node0x5780cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%28:\l28:                                               \l  %29 = fptrunc double %68 to float\l  br label %30\l}"];
	Node0x5780cb0 -> Node0x5780060;
	Node0x5780060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%30:\l30:                                               \l  %31 = phi float [ %29, %28 ], [ 0.000000e+00, %4 ]\l  %32 = add nsw i32 %15, %12\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  store float %31, float addrspace(1)* %34, align 4, !tbaa !5\l  ret void\l}"];
	Node0x5780300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i32 [ 0, %16 ], [ %69, %35 ]\l  %37 = phi double [ 0.000000e+00, %16 ], [ %68, %35 ]\l  %38 = shl nsw i32 %36, 2\l  %39 = add i32 %17, %38\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %42, float addrspace(3)* %18, align 4, !tbaa !5\l  %43 = add nuw nsw i32 %38, %8\l  %44 = mul nsw i32 %43, %3\l  %45 = add nsw i32 %44, %12\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %48, float addrspace(3)* %19, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %49 = load float, float addrspace(3)* %20, align 16, !tbaa !5\l  %50 = load float, float addrspace(3)* %21, align 4, !tbaa !5\l  %51 = fmul contract float %49, %50\l  %52 = fpext float %51 to double\l  %53 = fadd contract double %37, %52\l  %54 = load float, float addrspace(3)* %22, align 4, !tbaa !5\l  %55 = load float, float addrspace(3)* %23, align 4, !tbaa !5\l  %56 = fmul contract float %54, %55\l  %57 = fpext float %56 to double\l  %58 = fadd contract double %53, %57\l  %59 = load float, float addrspace(3)* %24, align 8, !tbaa !5\l  %60 = load float, float addrspace(3)* %25, align 4, !tbaa !5\l  %61 = fmul contract float %59, %60\l  %62 = fpext float %61 to double\l  %63 = fadd contract double %58, %62\l  %64 = load float, float addrspace(3)* %26, align 4, !tbaa !5\l  %65 = load float, float addrspace(3)* %27, align 4, !tbaa !5\l  %66 = fmul contract float %64, %65\l  %67 = fpext float %66 to double\l  %68 = fadd contract double %63, %67\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %69 = add nuw nsw i32 %36, 1\l  %70 = icmp eq i32 %69, %13\l  br i1 %70, label %28, label %35, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5780300:s0 -> Node0x5780cb0;
	Node0x5780300:s1 -> Node0x5780300;
}
