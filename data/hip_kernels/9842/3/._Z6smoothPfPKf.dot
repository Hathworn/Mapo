digraph "CFG for '_Z6smoothPfPKf' function" {
	label="CFG for '_Z6smoothPfPKf' function";

	Node0x5c91570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %6 = bitcast i8 addrspace(4)* %5 to i32 addrspace(4)*\l  %7 = load i32, i32 addrspace(4)* %6, align 4, !tbaa !5\l  %8 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !14, !invariant.load\l... !15\l  %11 = zext i16 %10 to i32\l  %12 = udiv i32 %7, %11\l  %13 = mul i32 %12, %11\l  %14 = icmp ugt i32 %7, %13\l  %15 = zext i1 %14 to i32\l  %16 = add i32 %12, %15\l  %17 = mul i32 %16, %3\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = add i32 %17, %18\l  %20 = mul i32 %16, %11\l  %21 = tail call i32 @llvm.usub.sat.i32(i32 %19, i32 1)\l  %22 = add nsw i32 %20, -1\l  %23 = icmp eq i32 %19, %22\l  %24 = add nsw i32 %19, 1\l  %25 = select i1 %23, i32 %22, i32 %24\l  %26 = sext i32 %19 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %1, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %29 = sext i32 %21 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %32 = sext i32 %25 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %35 = fmul contract float %31, 2.500000e-01\l  %36 = fmul contract float %28, 5.000000e-01\l  %37 = fadd contract float %36, %35\l  %38 = fmul contract float %34, 2.500000e-01\l  %39 = fadd contract float %37, %38\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  store float %39, float addrspace(1)* %40, align 4, !tbaa !16\l  ret void\l}"];
}
