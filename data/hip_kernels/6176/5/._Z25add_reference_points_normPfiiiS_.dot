digraph "CFG for '_Z25add_reference_points_normPfiiiS_' function" {
	label="CFG for '_Z25add_reference_points_normPfiiiS_' function";

	Node0x5474350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = add i32 %14, %6\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = add i32 %21, %7\l  %23 = icmp eq i32 %6, 0\l  %24 = icmp ult i32 %22, %3\l  %25 = select i1 %23, i1 %24, i1 false\l  br i1 %25, label %26, label %31\l|{<s0>T|<s1>F}}"];
	Node0x5474350:s0 -> Node0x5477e20;
	Node0x5474350:s1 -> Node0x5477eb0;
	Node0x5477e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%26:\l26:                                               \l  %27 = zext i32 %22 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %4, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %30 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ25add_reference_points_normPfiiiS_E10shared_vec, i32 0, i32 %7\l  store float %29, float addrspace(3)* %30, align 4, !tbaa !7\l  br label %31\l}"];
	Node0x5477e20 -> Node0x5477eb0;
	Node0x5477eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %32 = icmp ult i32 %15, %1\l  %33 = select i1 %32, i1 %24, i1 false\l  br i1 %33, label %34, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5477eb0:s0 -> Node0x5476c60;
	Node0x5477eb0:s1 -> Node0x54790a0;
	Node0x5476c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ25add_reference_points_normPfiiiS_E10shared_vec, i32 0, i32 %7\l  %36 = load float, float addrspace(3)* %35, align 4, !tbaa !7\l  %37 = mul i32 %22, %2\l  %38 = add i32 %37, %15\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %42 = fadd contract float %36, %41\l  store float %42, float addrspace(1)* %40, align 4, !tbaa !7\l  br label %43\l}"];
	Node0x5476c60 -> Node0x54790a0;
	Node0x54790a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  ret void\l}"];
}
