digraph "CFG for '_Z23modified_insertion_sortPfiPiiiii' function" {
	label="CFG for '_Z23modified_insertion_sortPfiPiiiii' function";

	Node0x55ebc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp ult i32 %16, %4\l  br i1 %17, label %18, label %72\l|{<s0>T|<s1>F}}"];
	Node0x55ebc80:s0 -> Node0x55edbc0;
	Node0x55ebc80:s1 -> Node0x55edc50;
	Node0x55edbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  %19 = zext i32 %16 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %0, i64 %19\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %19\l  store i32 0, i32 addrspace(1)* %21, align 4, !tbaa !7\l  %22 = icmp sgt i32 %5, 1\l  br i1 %22, label %23, label %72\l|{<s0>T|<s1>F}}"];
	Node0x55edbc0:s0 -> Node0x55ee190;
	Node0x55edbc0:s1 -> Node0x55edc50;
	Node0x55ee190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%23:\l23:                                               \l  %24 = add nsw i32 %6, -1\l  %25 = mul nsw i32 %24, %1\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %20, i64 %26\l  %28 = icmp sgt i32 %6, 1\l  br label %29\l}"];
	Node0x55ee190 -> Node0x55ee5c0;
	Node0x55ee5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%29:\l29:                                               \l  %30 = phi i32 [ 1, %23 ], [ %70, %69 ]\l  %31 = mul nsw i32 %30, %1\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %20, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !11\l  %35 = icmp slt i32 %30, %6\l  br i1 %35, label %39, label %36\l|{<s0>T|<s1>F}}"];
	Node0x55ee5c0:s0 -> Node0x55eed00;
	Node0x55ee5c0:s1 -> Node0x55eed90;
	Node0x55eed90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%36:\l36:                                               \l  %37 = load float, float addrspace(1)* %27, align 4, !tbaa !11\l  %38 = fcmp contract ult float %34, %37\l  br i1 %38, label %39, label %69\l|{<s0>T|<s1>F}}"];
	Node0x55eed90:s0 -> Node0x55eed00;
	Node0x55eed90:s1 -> Node0x55ee6b0;
	Node0x55eed00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%39:\l39:                                               \l  %40 = tail call i32 @llvm.smin.i32(i32 %30, i32 %24)\l  br i1 %28, label %41, label %61\l|{<s0>T|<s1>F}}"];
	Node0x55eed00:s0 -> Node0x55ef830;
	Node0x55eed00:s1 -> Node0x55ef8c0;
	Node0x55ef830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = phi i32 [ %43, %49 ], [ %40, %39 ]\l  %43 = add nsw i32 %42, -1\l  %44 = mul nsw i32 %43, %1\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %20, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !11\l  %48 = fcmp contract ogt float %47, %34\l  br i1 %48, label %49, label %61\l|{<s0>T|<s1>F}}"];
	Node0x55ef830:s0 -> Node0x55efa30;
	Node0x55ef830:s1 -> Node0x55ef8c0;
	Node0x55efa30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = mul nsw i32 %42, %1\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %20, i64 %51\l  store float %47, float addrspace(1)* %52, align 4, !tbaa !11\l  %53 = mul nsw i32 %43, %3\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %54\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !7\l  %57 = mul nsw i32 %42, %3\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %58\l  store i32 %56, i32 addrspace(1)* %59, align 4, !tbaa !7\l  %60 = icmp sgt i32 %42, 1\l  br i1 %60, label %41, label %61, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55efa30:s0 -> Node0x55ef830;
	Node0x55efa30:s1 -> Node0x55ef8c0;
	Node0x55ef8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%61:\l61:                                               \l  %62 = phi i32 [ %40, %39 ], [ %42, %41 ], [ %43, %49 ]\l  %63 = mul nsw i32 %62, %1\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %20, i64 %64\l  store float %34, float addrspace(1)* %65, align 4, !tbaa !11\l  %66 = mul nsw i32 %62, %3\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %67\l  store i32 %30, i32 addrspace(1)* %68, align 4, !tbaa !7\l  br label %69\l}"];
	Node0x55ef8c0 -> Node0x55ee6b0;
	Node0x55ee6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%69:\l69:                                               \l  %70 = add nuw nsw i32 %30, 1\l  %71 = icmp eq i32 %70, %5\l  br i1 %71, label %72, label %29, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x55ee6b0:s0 -> Node0x55edc50;
	Node0x55ee6b0:s1 -> Node0x55ee5c0;
	Node0x55edc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%72:\l72:                                               \l  ret void\l}"];
}
