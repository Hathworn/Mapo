digraph "CFG for '_Z8kRgb2XYZP15HIP_vector_typeIhLj4EEPS_IfLj4EEii' function" {
	label="CFG for '_Z8kRgb2XYZP15HIP_vector_typeIhLj4EEPS_IfLj4EEii' function";

	Node0x5e10560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 2, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %12, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %20 = add i32 %17, %19\l  %21 = mul i32 %20, %2\l  %22 = add i32 %11, %18\l  %23 = add i32 %22, %21\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %24, i32 0, i32 0, i32 0, i64 0\l  %26 = load i8, i8 addrspace(1)* %25, align 4, !amdgpu.noclobber !5\l  %27 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %24, i32 0, i32 0, i32 0, i64 1\l  %28 = load i8, i8 addrspace(1)* %27, align 1, !amdgpu.noclobber !5\l  %29 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %24, i32 0, i32 0, i32 0, i64 2\l  %30 = load i8, i8 addrspace(1)* %29, align 2, !amdgpu.noclobber !5\l  %31 = uitofp i8 %26 to double\l  %32 = fdiv contract double %31, 2.550000e+02\l  %33 = fptrunc double %32 to float\l  %34 = uitofp i8 %28 to double\l  %35 = fdiv contract double %34, 2.550000e+02\l  %36 = fptrunc double %35 to float\l  %37 = uitofp i8 %30 to double\l  %38 = fdiv contract double %37, 2.550000e+02\l  %39 = fptrunc double %38 to float\l  %40 = fpext float %39 to double\l  %41 = fmul contract double %40, 4.124530e-01\l  %42 = fpext float %36 to double\l  %43 = fmul contract double %42, 3.575800e-01\l  %44 = fadd contract double %43, %41\l  %45 = fpext float %33 to double\l  %46 = fmul contract double %45, 1.804230e-01\l  %47 = fadd contract double %46, %44\l  %48 = fptrunc double %47 to float\l  %49 = fmul contract double %40, 2.126710e-01\l  %50 = fmul contract double %42, 7.151600e-01\l  %51 = fadd contract double %50, %49\l  %52 = fmul contract double %45, 0x3FB279AAE6C8F755\l  %53 = fadd contract double %52, %51\l  %54 = fptrunc double %53 to float\l  %55 = fmul contract double %40, 1.933400e-02\l  %56 = fmul contract double %42, 1.191930e-01\l  %57 = fadd contract double %56, %55\l  %58 = fmul contract double %45, 9.502270e-01\l  %59 = fadd contract double %58, %57\l  %60 = fptrunc double %59 to float\l  %61 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %1, i64 %24, i32 0, i32 0, i32 0, i64\l... 0\l  store float %48, float addrspace(1)* %61, align 16\l  %62 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %1, i64 %24, i32 0, i32 0, i32 0, i64\l... 1\l  store float %54, float addrspace(1)* %62, align 4\l  %63 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %1, i64 %24, i32 0, i32 0, i32 0, i64\l... 2\l  store float %60, float addrspace(1)* %63, align 8\l  ret void\l}"];
}
