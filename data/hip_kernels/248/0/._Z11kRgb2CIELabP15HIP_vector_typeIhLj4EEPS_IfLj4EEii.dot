digraph "CFG for '_Z11kRgb2CIELabP15HIP_vector_typeIhLj4EEPS_IfLj4EEii' function" {
	label="CFG for '_Z11kRgb2CIELabP15HIP_vector_typeIhLj4EEPS_IfLj4EEii' function";

	Node0x619be90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 2, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %12, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %20 = add i32 %17, %19\l  %21 = mul i32 %20, %2\l  %22 = add i32 %11, %18\l  %23 = add i32 %22, %21\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %24, i32 0, i32 0, i32 0, i64 0\l  %26 = load i8, i8 addrspace(1)* %25, align 4, !amdgpu.noclobber !5\l  %27 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %24, i32 0, i32 0, i32 0, i64 1\l  %28 = load i8, i8 addrspace(1)* %27, align 1, !amdgpu.noclobber !5\l  %29 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %24, i32 0, i32 0, i32 0, i64 2\l  %30 = load i8, i8 addrspace(1)* %29, align 2, !amdgpu.noclobber !5\l  %31 = uitofp i8 %26 to double\l  %32 = fdiv contract double %31, 2.550000e+02\l  %33 = fptrunc double %32 to float\l  %34 = uitofp i8 %28 to double\l  %35 = fdiv contract double %34, 2.550000e+02\l  %36 = fptrunc double %35 to float\l  %37 = uitofp i8 %30 to double\l  %38 = fdiv contract double %37, 2.550000e+02\l  %39 = fptrunc double %38 to float\l  %40 = fpext float %39 to double\l  %41 = fmul contract double %40, 4.124530e-01\l  %42 = fpext float %36 to double\l  %43 = fmul contract double %42, 3.575800e-01\l  %44 = fadd contract double %43, %41\l  %45 = fpext float %33 to double\l  %46 = fmul contract double %45, 1.804230e-01\l  %47 = fadd contract double %46, %44\l  %48 = fptrunc double %47 to float\l  %49 = fmul contract double %40, 2.126710e-01\l  %50 = fmul contract double %42, 7.151600e-01\l  %51 = fadd contract double %50, %49\l  %52 = fmul contract double %45, 0x3FB279AAE6C8F755\l  %53 = fadd contract double %52, %51\l  %54 = fptrunc double %53 to float\l  %55 = fmul contract double %40, 1.933400e-02\l  %56 = fmul contract double %42, 1.191930e-01\l  %57 = fadd contract double %56, %55\l  %58 = fmul contract double %45, 9.502270e-01\l  %59 = fadd contract double %58, %57\l  %60 = fptrunc double %59 to float\l  %61 = fpext float %48 to double\l  %62 = fdiv contract double %61, 0x3FEE6A22B3892EE8\l  %63 = fptrunc double %62 to float\l  %64 = tail call i1 @llvm.amdgcn.class.f32(float %54, i32 144)\l  %65 = select i1 %64, float 0x41F0000000000000, float 1.000000e+00\l  %66 = fmul float %65, %54\l  %67 = tail call float @llvm.log2.f32(float %66)\l  %68 = fmul float %67, 0x3FE62E42E0000000\l  %69 = tail call i1 @llvm.amdgcn.class.f32(float %67, i32 519)\l  %70 = fneg float %68\l  %71 = tail call float @llvm.fma.f32(float %67, float 0x3FE62E42E0000000,\l... float %70)\l  %72 = tail call float @llvm.fma.f32(float %67, float 0x3E6EFA39E0000000,\l... float %71)\l  %73 = fadd float %68, %72\l  %74 = select i1 %69, float %67, float %73\l  %75 = select i1 %64, float 0x40362E4300000000, float 0.000000e+00\l  %76 = fsub float %74, %75\l  %77 = fpext float %76 to double\l  %78 = fdiv contract double %77, 3.000000e+00\l  %79 = fmul double %78, 0x3FF71547652B82FE\l  %80 = tail call double @llvm.rint.f64(double %79)\l  %81 = fneg double %80\l  %82 = tail call double @llvm.fma.f64(double %81, double 0x3FE62E42FEFA39EF,\l... double %78)\l  %83 = tail call double @llvm.fma.f64(double %81, double 0x3C7ABC9E3B39803F,\l... double %82)\l  %84 = tail call double @llvm.fma.f64(double %83, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %85 = tail call double @llvm.fma.f64(double %83, double %84, double\l... 0x3EC71DEE623FDE64)\l  %86 = tail call double @llvm.fma.f64(double %83, double %85, double\l... 0x3EFA01997C89E6B0)\l  %87 = tail call double @llvm.fma.f64(double %83, double %86, double\l... 0x3F2A01A014761F6E)\l  %88 = tail call double @llvm.fma.f64(double %83, double %87, double\l... 0x3F56C16C1852B7B0)\l  %89 = tail call double @llvm.fma.f64(double %83, double %88, double\l... 0x3F81111111122322)\l  %90 = tail call double @llvm.fma.f64(double %83, double %89, double\l... 0x3FA55555555502A1)\l  %91 = tail call double @llvm.fma.f64(double %83, double %90, double\l... 0x3FC5555555555511)\l  %92 = tail call double @llvm.fma.f64(double %83, double %91, double\l... 0x3FE000000000000B)\l  %93 = tail call double @llvm.fma.f64(double %83, double %92, double\l... 1.000000e+00)\l  %94 = tail call double @llvm.fma.f64(double %83, double %93, double\l... 1.000000e+00)\l  %95 = fptosi double %80 to i32\l  %96 = tail call double @llvm.amdgcn.ldexp.f64(double %94, i32 %95)\l  %97 = fcmp ogt double %78, 1.024000e+03\l  %98 = select i1 %97, double 0x7FF0000000000000, double %96\l  %99 = fcmp olt double %78, -1.075000e+03\l  %100 = select i1 %99, double 0.000000e+00, double %98\l  %101 = fptrunc double %100 to float\l  %102 = fpext float %60 to double\l  %103 = fdiv contract double %102, 0x3FF16B8950763A19\l  %104 = fptrunc double %103 to float\l  %105 = fpext float %63 to double\l  %106 = fcmp contract ogt double %105, 8.856000e-03\l  br i1 %106, label %107, label %145\l|{<s0>T|<s1>F}}"];
	Node0x619be90:s0 -> Node0x61a50c0;
	Node0x619be90:s1 -> Node0x61a5150;
	Node0x61a50c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%107:\l107:                                              \l  %108 = tail call i1 @llvm.amdgcn.class.f32(float %63, i32 144)\l  %109 = select i1 %108, float 0x41F0000000000000, float 1.000000e+00\l  %110 = fmul float %109, %63\l  %111 = tail call float @llvm.log2.f32(float %110)\l  %112 = fmul float %111, 0x3FE62E42E0000000\l  %113 = tail call i1 @llvm.amdgcn.class.f32(float %111, i32 519)\l  %114 = fneg float %112\l  %115 = tail call float @llvm.fma.f32(float %111, float 0x3FE62E42E0000000,\l... float %114)\l  %116 = tail call float @llvm.fma.f32(float %111, float 0x3E6EFA39E0000000,\l... float %115)\l  %117 = fadd float %112, %116\l  %118 = select i1 %113, float %111, float %117\l  %119 = select i1 %108, float 0x40362E4300000000, float 0.000000e+00\l  %120 = fsub float %118, %119\l  %121 = fpext float %120 to double\l  %122 = fdiv contract double %121, 3.000000e+00\l  %123 = fmul double %122, 0x3FF71547652B82FE\l  %124 = tail call double @llvm.rint.f64(double %123)\l  %125 = fneg double %124\l  %126 = tail call double @llvm.fma.f64(double %125, double\l... 0x3FE62E42FEFA39EF, double %122)\l  %127 = tail call double @llvm.fma.f64(double %125, double\l... 0x3C7ABC9E3B39803F, double %126)\l  %128 = tail call double @llvm.fma.f64(double %127, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %129 = tail call double @llvm.fma.f64(double %127, double %128, double\l... 0x3EC71DEE623FDE64)\l  %130 = tail call double @llvm.fma.f64(double %127, double %129, double\l... 0x3EFA01997C89E6B0)\l  %131 = tail call double @llvm.fma.f64(double %127, double %130, double\l... 0x3F2A01A014761F6E)\l  %132 = tail call double @llvm.fma.f64(double %127, double %131, double\l... 0x3F56C16C1852B7B0)\l  %133 = tail call double @llvm.fma.f64(double %127, double %132, double\l... 0x3F81111111122322)\l  %134 = tail call double @llvm.fma.f64(double %127, double %133, double\l... 0x3FA55555555502A1)\l  %135 = tail call double @llvm.fma.f64(double %127, double %134, double\l... 0x3FC5555555555511)\l  %136 = tail call double @llvm.fma.f64(double %127, double %135, double\l... 0x3FE000000000000B)\l  %137 = tail call double @llvm.fma.f64(double %127, double %136, double\l... 1.000000e+00)\l  %138 = tail call double @llvm.fma.f64(double %127, double %137, double\l... 1.000000e+00)\l  %139 = fptosi double %124 to i32\l  %140 = tail call double @llvm.amdgcn.ldexp.f64(double %138, i32 %139)\l  %141 = fcmp ogt double %122, 1.024000e+03\l  %142 = select i1 %141, double 0x7FF0000000000000, double %140\l  %143 = fcmp olt double %122, -1.075000e+03\l  %144 = select i1 %143, double 0.000000e+00, double %142\l  br label %148\l}"];
	Node0x61a50c0 -> Node0x61a7790;
	Node0x61a5150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%145:\l145:                                              \l  %146 = fmul contract double %105, 0x401F25E353F7CED9\l  %147 = fadd contract double %146, 1.379300e-01\l  br label %148\l}"];
	Node0x61a5150 -> Node0x61a7790;
	Node0x61a7790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%148:\l148:                                              \l  %149 = phi contract double [ %144, %107 ], [ %147, %145 ]\l  %150 = fpext float %54 to double\l  %151 = fcmp contract ogt double %150, 8.856000e-03\l  %152 = fmul contract double %150, 0x401F25E353F7CED9\l  %153 = fadd contract double %152, 1.379300e-01\l  %154 = fptrunc double %153 to float\l  %155 = select i1 %151, float %101, float %154\l  %156 = fpext float %104 to double\l  %157 = fcmp contract ogt double %156, 8.856000e-03\l  br i1 %157, label %158, label %197\l|{<s0>T|<s1>F}}"];
	Node0x61a7790:s0 -> Node0x61a7f10;
	Node0x61a7790:s1 -> Node0x61a7f60;
	Node0x61a7f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%158:\l158:                                              \l  %159 = tail call i1 @llvm.amdgcn.class.f32(float %104, i32 144)\l  %160 = select i1 %159, float 0x41F0000000000000, float 1.000000e+00\l  %161 = fmul float %160, %104\l  %162 = tail call float @llvm.log2.f32(float %161)\l  %163 = fmul float %162, 0x3FE62E42E0000000\l  %164 = tail call i1 @llvm.amdgcn.class.f32(float %162, i32 519)\l  %165 = fneg float %163\l  %166 = tail call float @llvm.fma.f32(float %162, float 0x3FE62E42E0000000,\l... float %165)\l  %167 = tail call float @llvm.fma.f32(float %162, float 0x3E6EFA39E0000000,\l... float %166)\l  %168 = fadd float %163, %167\l  %169 = select i1 %164, float %162, float %168\l  %170 = select i1 %159, float 0x40362E4300000000, float 0.000000e+00\l  %171 = fsub float %169, %170\l  %172 = fpext float %171 to double\l  %173 = fdiv contract double %172, 3.000000e+00\l  %174 = fmul double %173, 0x3FF71547652B82FE\l  %175 = tail call double @llvm.rint.f64(double %174)\l  %176 = fneg double %175\l  %177 = tail call double @llvm.fma.f64(double %176, double\l... 0x3FE62E42FEFA39EF, double %173)\l  %178 = tail call double @llvm.fma.f64(double %176, double\l... 0x3C7ABC9E3B39803F, double %177)\l  %179 = tail call double @llvm.fma.f64(double %178, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %180 = tail call double @llvm.fma.f64(double %178, double %179, double\l... 0x3EC71DEE623FDE64)\l  %181 = tail call double @llvm.fma.f64(double %178, double %180, double\l... 0x3EFA01997C89E6B0)\l  %182 = tail call double @llvm.fma.f64(double %178, double %181, double\l... 0x3F2A01A014761F6E)\l  %183 = tail call double @llvm.fma.f64(double %178, double %182, double\l... 0x3F56C16C1852B7B0)\l  %184 = tail call double @llvm.fma.f64(double %178, double %183, double\l... 0x3F81111111122322)\l  %185 = tail call double @llvm.fma.f64(double %178, double %184, double\l... 0x3FA55555555502A1)\l  %186 = tail call double @llvm.fma.f64(double %178, double %185, double\l... 0x3FC5555555555511)\l  %187 = tail call double @llvm.fma.f64(double %178, double %186, double\l... 0x3FE000000000000B)\l  %188 = tail call double @llvm.fma.f64(double %178, double %187, double\l... 1.000000e+00)\l  %189 = tail call double @llvm.fma.f64(double %178, double %188, double\l... 1.000000e+00)\l  %190 = fptosi double %175 to i32\l  %191 = tail call double @llvm.amdgcn.ldexp.f64(double %189, i32 %190)\l  %192 = fcmp ogt double %173, 1.024000e+03\l  %193 = select i1 %192, double 0x7FF0000000000000, double %191\l  %194 = fcmp olt double %173, -1.075000e+03\l  %195 = select i1 %194, double 0.000000e+00, double %193\l  %196 = fdiv contract double %156, %195\l  br label %200\l}"];
	Node0x61a7f10 -> Node0x61aa1c0;
	Node0x61a7f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%197:\l197:                                              \l  %198 = fmul contract double %156, 0x401F25E353F7CED9\l  %199 = fadd contract double %198, 1.379300e-01\l  br label %200\l}"];
	Node0x61a7f60 -> Node0x61aa1c0;
	Node0x61aa1c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%200:\l200:                                              \l  %201 = phi double [ %196, %158 ], [ %199, %197 ]\l  %202 = fpext float %155 to double\l  %203 = fcmp contract ogt double %202, 8.856000e-03\l  br i1 %203, label %204, label %208\l|{<s0>T|<s1>F}}"];
	Node0x61aa1c0:s0 -> Node0x61aa5c0;
	Node0x61aa1c0:s1 -> Node0x61aa610;
	Node0x61aa5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%204:\l204:                                              \l  %205 = fpext float %101 to double\l  %206 = fmul contract double %205, 1.160000e+02\l  %207 = fadd contract double %206, -1.600000e+01\l  br label %210\l}"];
	Node0x61aa5c0 -> Node0x61aa8e0;
	Node0x61aa610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%208:\l208:                                              \l  %209 = fmul contract double %202, 0x408C3A6666666666\l  br label %210\l}"];
	Node0x61aa610 -> Node0x61aa8e0;
	Node0x61aa8e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%210:\l210:                                              \l  %211 = phi contract double [ %207, %204 ], [ %209, %208 ]\l  %212 = fptrunc double %201 to float\l  %213 = fptrunc double %149 to float\l  %214 = fptrunc double %211 to float\l  %215 = fsub contract float %213, %155\l  %216 = fmul contract float %215, 5.000000e+02\l  %217 = fsub contract float %155, %212\l  %218 = fmul contract float %217, 2.000000e+02\l  %219 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %1, i64 %24, i32 0, i32 0, i32 0, i64\l... 0\l  store float %214, float addrspace(1)* %219, align 16\l  %220 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %1, i64 %24, i32 0, i32 0, i32 0, i64\l... 1\l  store float %216, float addrspace(1)* %220, align 4\l  %221 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %1, i64 %24, i32 0, i32 0, i32 0, i64\l... 2\l  store float %218, float addrspace(1)* %221, align 8\l  ret void\l}"];
}
