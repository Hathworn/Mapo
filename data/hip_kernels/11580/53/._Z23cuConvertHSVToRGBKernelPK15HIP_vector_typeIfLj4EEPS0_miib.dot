digraph "CFG for '_Z23cuConvertHSVToRGBKernelPK15HIP_vector_typeIfLj4EEPS0_miib' function" {
	label="CFG for '_Z23cuConvertHSVToRGBKernelPK15HIP_vector_typeIfLj4EEPS0_miib' function";

	Node0x56d7040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %3\l  %25 = icmp slt i32 %23, %4\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %102\l|{<s0>T|<s1>F}}"];
	Node0x56d7040:s0 -> Node0x56daab0;
	Node0x56d7040:s1 -> Node0x56dab40;
	Node0x56daab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%27:\l27:                                               \l  %28 = trunc i64 %2 to i32\l  %29 = mul i32 %23, %28\l  %30 = add i32 %29, %15\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 1\l  %33 = load float, float addrspace(1)* %32, align 4, !amdgpu.noclobber !5\l  %34 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 2\l  %35 = load float, float addrspace(1)* %34, align 8, !amdgpu.noclobber !5\l  %36 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 3\l  %37 = load float, float addrspace(1)* %36, align 4, !amdgpu.noclobber !5\l  %38 = fcmp contract une float %33, 0.000000e+00\l  br i1 %38, label %42, label %39\l|{<s0>T|<s1>F}}"];
	Node0x56daab0:s0 -> Node0x56dbfd0;
	Node0x56daab0:s1 -> Node0x56dc060;
	Node0x56dc060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%39:\l39:                                               \l  %40 = insertelement \<4 x float\> undef, float %35, i64 0\l  %41 = shufflevector \<4 x float\> %40, \<4 x float\> poison, \<4 x i32\> \<i32 0,\l... i32 0, i32 0, i32 undef\>\l  br label %98\l}"];
	Node0x56dc060 -> Node0x56dcdd0;
	Node0x56dbfd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%42:\l42:                                               \l  %43 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 0\l  %44 = load float, float addrspace(1)* %43, align 16, !amdgpu.noclobber !5\l  %45 = fdiv contract float %44, 6.000000e+01\l  %46 = tail call float @llvm.floor.f32(float %45)\l  %47 = fptosi float %46 to i32\l  %48 = sitofp i32 %47 to float\l  %49 = fsub contract float %45, %48\l  %50 = fsub contract float 1.000000e+00, %33\l  %51 = fmul contract float %35, %50\l  %52 = fmul contract float %33, %49\l  %53 = fsub contract float 1.000000e+00, %52\l  %54 = fmul contract float %35, %53\l  %55 = fsub contract float 1.000000e+00, %49\l  %56 = fmul contract float %33, %55\l  %57 = fsub contract float 1.000000e+00, %56\l  %58 = fmul contract float %35, %57\l  switch i32 %47, label %95 [\l    i32 0, label %59\l    i32 1, label %65\l    i32 2, label %71\l    i32 3, label %77\l    i32 4, label %83\l    i32 5, label %89\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2|<s4>3|<s5>4|<s6>5}}"];
	Node0x56dbfd0:s0 -> Node0x56dd9a0;
	Node0x56dbfd0:s1 -> Node0x56dda30;
	Node0x56dbfd0:s2 -> Node0x56ddaf0;
	Node0x56dbfd0:s3 -> Node0x56ddbb0;
	Node0x56dbfd0:s4 -> Node0x56ddc70;
	Node0x56dbfd0:s5 -> Node0x56ddd30;
	Node0x56dbfd0:s6 -> Node0x56dddf0;
	Node0x56dda30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%59:\l59:                                               \l  %60 = insertelement \<4 x float\> undef, float %35, i64 0\l  %61 = insertelement \<4 x float\> %60, float %58, i64 1\l  %62 = insertelement \<4 x float\> %61, float %51, i64 2\l  %63 = insertelement \<4 x float\> %62, float %37, i64 3\l  %64 = insertvalue %struct.HIP_vector_base poison, \<4 x float\> %63, 0, 0\l  br label %95\l}"];
	Node0x56dda30 -> Node0x56dd9a0;
	Node0x56ddaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%65:\l65:                                               \l  %66 = insertelement \<4 x float\> undef, float %54, i64 0\l  %67 = insertelement \<4 x float\> %66, float %35, i64 1\l  %68 = insertelement \<4 x float\> %67, float %51, i64 2\l  %69 = insertelement \<4 x float\> %68, float %37, i64 3\l  %70 = insertvalue %struct.HIP_vector_base poison, \<4 x float\> %69, 0, 0\l  br label %95\l}"];
	Node0x56ddaf0 -> Node0x56dd9a0;
	Node0x56ddbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%71:\l71:                                               \l  %72 = insertelement \<4 x float\> undef, float %51, i64 0\l  %73 = insertelement \<4 x float\> %72, float %35, i64 1\l  %74 = insertelement \<4 x float\> %73, float %58, i64 2\l  %75 = insertelement \<4 x float\> %74, float %37, i64 3\l  %76 = insertvalue %struct.HIP_vector_base poison, \<4 x float\> %75, 0, 0\l  br label %95\l}"];
	Node0x56ddbb0 -> Node0x56dd9a0;
	Node0x56ddc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%77:\l77:                                               \l  %78 = insertelement \<4 x float\> undef, float %51, i64 0\l  %79 = insertelement \<4 x float\> %78, float %54, i64 1\l  %80 = insertelement \<4 x float\> %79, float %35, i64 2\l  %81 = insertelement \<4 x float\> %80, float %37, i64 3\l  %82 = insertvalue %struct.HIP_vector_base poison, \<4 x float\> %81, 0, 0\l  br label %95\l}"];
	Node0x56ddc70 -> Node0x56dd9a0;
	Node0x56ddd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%83:\l83:                                               \l  %84 = insertelement \<4 x float\> undef, float %58, i64 0\l  %85 = insertelement \<4 x float\> %84, float %51, i64 1\l  %86 = insertelement \<4 x float\> %85, float %35, i64 2\l  %87 = insertelement \<4 x float\> %86, float %37, i64 3\l  %88 = insertvalue %struct.HIP_vector_base poison, \<4 x float\> %87, 0, 0\l  br label %95\l}"];
	Node0x56ddd30 -> Node0x56dd9a0;
	Node0x56dddf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%89:\l89:                                               \l  %90 = insertelement \<4 x float\> undef, float %35, i64 0\l  %91 = insertelement \<4 x float\> %90, float %51, i64 1\l  %92 = insertelement \<4 x float\> %91, float %54, i64 2\l  %93 = insertelement \<4 x float\> %92, float %37, i64 3\l  %94 = insertvalue %struct.HIP_vector_base poison, \<4 x float\> %93, 0, 0\l  br label %95\l}"];
	Node0x56dddf0 -> Node0x56dd9a0;
	Node0x56dd9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%95:\l95:                                               \l  %96 = phi %struct.HIP_vector_base [ %64, %59 ], [ %70, %65 ], [ %76, %71 ],\l... [ %82, %77 ], [ %88, %83 ], [ %94, %89 ], [ zeroinitializer, %42 ]\l  %97 = extractvalue %struct.HIP_vector_base %96, 0, 0\l  br label %98\l}"];
	Node0x56dd9a0 -> Node0x56dcdd0;
	Node0x56dcdd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%98:\l98:                                               \l  %99 = phi \<4 x float\> [ %41, %39 ], [ %97, %95 ]\l  %100 = insertelement \<4 x float\> %99, float %37, i64 3\l  %101 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %31, i32 0, i32 0, i32 0\l  store \<4 x float\> %100, \<4 x float\> addrspace(1)* %101, align 16\l  br label %102\l}"];
	Node0x56dcdd0 -> Node0x56dab40;
	Node0x56dab40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  ret void\l}"];
}
