digraph "CFG for '_Z27cuFilterGaussZKernel_32f_C1PfS_iiimmfi' function" {
	label="CFG for '_Z27cuFilterGaussZKernel_32f_C1PfS_iiimmfi' function";

	Node0x5fc3a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp sgt i32 %18, -1\l  %28 = icmp sgt i32 %26, -1\l  %29 = select i1 %27, i1 %28, i1 false\l  %30 = icmp slt i32 %18, %3\l  %31 = select i1 %29, i1 %30, i1 false\l  %32 = icmp slt i32 %26, %4\l  %33 = select i1 %31, i1 %32, i1 false\l  br i1 %33, label %34, label %111\l|{<s0>T|<s1>F}}"];
	Node0x5fc3a30:s0 -> Node0x5fc6090;
	Node0x5fc3a30:s1 -> Node0x5fc8440;
	Node0x5fc6090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%34:\l34:                                               \l  %35 = fmul contract float %7, 0x40040D9320000000\l  %36 = fdiv contract float 1.000000e+00, %35\l  %37 = fmul contract float %7, %7\l  %38 = fdiv contract float -5.000000e-01, %37\l  %39 = fmul float %38, 0x3FF7154760000000\l  %40 = tail call float @llvm.rint.f32(float %39)\l  %41 = fcmp ogt float %38, 0x40562E4300000000\l  %42 = fcmp olt float %38, 0xC059D1DA00000000\l  %43 = fneg float %39\l  %44 = tail call float @llvm.fma.f32(float %38, float 0x3FF7154760000000,\l... float %43)\l  %45 = tail call float @llvm.fma.f32(float %38, float 0x3E54AE0BE0000000,\l... float %44)\l  %46 = fsub float %39, %40\l  %47 = fadd float %45, %46\l  %48 = tail call float @llvm.exp2.f32(float %47)\l  %49 = fptosi float %40 to i32\l  %50 = tail call float @llvm.amdgcn.ldexp.f32(float %48, i32 %49)\l  %51 = select i1 %42, float 0.000000e+00, float %50\l  %52 = select i1 %41, float 0x7FF0000000000000, float %51\l  %53 = fmul contract float %52, %52\l  %54 = zext i32 %26 to i64\l  %55 = mul i64 %54, %6\l  %56 = sext i32 %2 to i64\l  %57 = mul i64 %56, %5\l  %58 = zext i32 %18 to i64\l  %59 = add i64 %57, %58\l  %60 = add i64 %59, %55\l  %61 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = fmul contract float %36, %62\l  %64 = icmp slt i32 %8, 3\l  br i1 %64, label %70, label %65\l|{<s0>T|<s1>F}}"];
	Node0x5fc6090:s0 -> Node0x5fc81f0;
	Node0x5fc6090:s1 -> Node0x5fc8280;
	Node0x5fc8280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%65:\l65:                                               \l  %66 = add nsw i32 %8, -1\l  %67 = lshr i32 %66, 1\l  %68 = add nsw i32 %4, -1\l  %69 = sitofp i32 %68 to float\l  br label %75\l}"];
	Node0x5fc8280 -> Node0x5fcb180;
	Node0x5fc81f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%70:\l70:                                               \l  %71 = phi float [ %36, %34 ], [ %108, %75 ]\l  %72 = phi float [ %63, %34 ], [ %106, %75 ]\l  %73 = fdiv contract float %72, %71\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  store float %73, float addrspace(1)* %74, align 4, !tbaa !7\l  br label %111\l}"];
	Node0x5fc81f0 -> Node0x5fc8440;
	Node0x5fcb180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  %76 = phi float [ %63, %65 ], [ %106, %75 ]\l  %77 = phi i32 [ 1, %65 ], [ %109, %75 ]\l  %78 = phi float [ %36, %65 ], [ %108, %75 ]\l  %79 = phi float [ %36, %65 ], [ %81, %75 ]\l  %80 = phi float [ %52, %65 ], [ %82, %75 ]\l  %81 = fmul contract float %80, %79\l  %82 = fmul contract float %53, %80\l  %83 = add nsw i32 %77, %26\l  %84 = sitofp i32 %83 to float\l  %85 = tail call float @llvm.minnum.f32(float %69, float %84)\l  %86 = tail call float @llvm.maxnum.f32(float %85, float 0.000000e+00)\l  %87 = fptosi float %86 to i32\l  %88 = sext i32 %87 to i64\l  %89 = mul i64 %88, %6\l  %90 = add i64 %59, %89\l  %91 = getelementptr inbounds float, float addrspace(1)* %1, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %93 = fmul contract float %81, %92\l  %94 = fadd contract float %76, %93\l  %95 = sub nsw i32 %26, %77\l  %96 = sitofp i32 %95 to float\l  %97 = tail call float @llvm.minnum.f32(float %69, float %96)\l  %98 = tail call float @llvm.maxnum.f32(float %97, float 0.000000e+00)\l  %99 = fptosi float %98 to i32\l  %100 = sext i32 %99 to i64\l  %101 = mul i64 %100, %6\l  %102 = add i64 %59, %101\l  %103 = getelementptr inbounds float, float addrspace(1)* %1, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %105 = fmul contract float %81, %104\l  %106 = fadd contract float %94, %105\l  %107 = fmul contract float %81, 2.000000e+00\l  %108 = fadd contract float %78, %107\l  %109 = add nuw nsw i32 %77, 1\l  %110 = icmp eq i32 %77, %67\l  br i1 %110, label %70, label %75, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5fcb180:s0 -> Node0x5fc81f0;
	Node0x5fcb180:s1 -> Node0x5fcb180;
	Node0x5fc8440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%111:\l111:                                              \l  ret void\l}"];
}
