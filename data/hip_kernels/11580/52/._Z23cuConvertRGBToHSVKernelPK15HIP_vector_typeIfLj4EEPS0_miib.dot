digraph "CFG for '_Z23cuConvertRGBToHSVKernelPK15HIP_vector_typeIfLj4EEPS0_miib' function" {
	label="CFG for '_Z23cuConvertRGBToHSVKernelPK15HIP_vector_typeIfLj4EEPS0_miib' function";

	Node0x4c04840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %3\l  %25 = icmp slt i32 %23, %4\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %127\l|{<s0>T|<s1>F}}"];
	Node0x4c04840:s0 -> Node0x4c082b0;
	Node0x4c04840:s1 -> Node0x4c08340;
	Node0x4c082b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%27:\l27:                                               \l  %28 = trunc i64 %2 to i32\l  %29 = mul i32 %23, %28\l  %30 = add i32 %29, %15\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 0\l  %33 = load float, float addrspace(1)* %32, align 16, !amdgpu.noclobber !5\l  %34 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 1\l  %35 = load float, float addrspace(1)* %34, align 4, !amdgpu.noclobber !5\l  %36 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 2\l  %37 = load float, float addrspace(1)* %36, align 8, !amdgpu.noclobber !5\l  %38 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 3\l  %39 = load float, float addrspace(1)* %38, align 4, !amdgpu.noclobber !5\l  %40 = tail call float @llvm.maxnum.f32(float %35, float %37)\l  %41 = tail call float @llvm.maxnum.f32(float %33, float %40)\l  %42 = tail call float @llvm.minnum.f32(float %35, float %37)\l  %43 = tail call float @llvm.minnum.f32(float %33, float %42)\l  %44 = fsub contract float %41, %43\l  %45 = fcmp contract une float %44, 0.000000e+00\l  br i1 %45, label %46, label %112\l|{<s0>T|<s1>F}}"];
	Node0x4c082b0:s0 -> Node0x4c0a0c0;
	Node0x4c082b0:s1 -> Node0x4c0a150;
	Node0x4c0a0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%46:\l46:                                               \l  %47 = fcmp contract oeq float %41, %33\l  br i1 %47, label %48, label %98\l|{<s0>T|<s1>F}}"];
	Node0x4c0a0c0:s0 -> Node0x4c0a320;
	Node0x4c0a0c0:s1 -> Node0x4c0a370;
	Node0x4c0a320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%48:\l48:                                               \l  %49 = fsub contract float %35, %37\l  %50 = fdiv contract float %49, %44\l  %51 = tail call float @llvm.fabs.f32(float %50)\l  %52 = fcmp ogt float %51, 6.000000e+00\l  br i1 %52, label %53, label %90\l|{<s0>T|<s1>F}}"];
	Node0x4c0a320:s0 -> Node0x4c0a850;
	Node0x4c0a320:s1 -> Node0x4c0a8e0;
	Node0x4c0a850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%53:\l53:                                               \l  %54 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %51)\l  %55 = tail call float @llvm.amdgcn.frexp.mant.f32(float %51)\l  %56 = tail call float @llvm.amdgcn.ldexp.f32(float %55, i32 12)\l  %57 = add i32 %54, -3\l  %58 = icmp sgt i32 %57, 12\l  br i1 %58, label %59, label %72\l|{<s0>T|<s1>F}}"];
	Node0x4c0a850:s0 -> Node0x4c0b210;
	Node0x4c0a850:s1 -> Node0x4c0b2a0;
	Node0x4c0b210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi float [ %69, %59 ], [ %56, %53 ]\l  %61 = phi i32 [ %70, %59 ], [ %57, %53 ]\l  %62 = fmul float %60, 0x3FE5555560000000\l  %63 = tail call float @llvm.rint.f32(float %62)\l  %64 = fneg float %63\l  %65 = tail call float @llvm.fma.f32(float %64, float 1.500000e+00, float %60)\l  %66 = fcmp olt float %65, 0.000000e+00\l  %67 = select i1 %66, float 1.500000e+00, float -0.000000e+00\l  %68 = fadd float %65, %67\l  %69 = tail call float @llvm.amdgcn.ldexp.f32(float %68, i32 12)\l  %70 = add nsw i32 %61, -12\l  %71 = icmp ugt i32 %61, 24\l  br i1 %71, label %59, label %72\l|{<s0>T|<s1>F}}"];
	Node0x4c0b210:s0 -> Node0x4c0b210;
	Node0x4c0b210:s1 -> Node0x4c0b2a0;
	Node0x4c0b2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%72:\l72:                                               \l  %73 = phi i32 [ %57, %53 ], [ %70, %59 ]\l  %74 = phi float [ %56, %53 ], [ %69, %59 ]\l  %75 = add nsw i32 %73, -11\l  %76 = tail call float @llvm.amdgcn.ldexp.f32(float %74, i32 %75)\l  %77 = fmul float %76, 0x3FE5555560000000\l  %78 = tail call float @llvm.rint.f32(float %77)\l  %79 = fneg float %78\l  %80 = tail call float @llvm.fma.f32(float %79, float 1.500000e+00, float %76)\l  %81 = fcmp olt float %80, 0.000000e+00\l  %82 = select i1 %81, float 1.500000e+00, float -0.000000e+00\l  %83 = fadd float %80, %82\l  %84 = tail call float @llvm.amdgcn.ldexp.f32(float %83, i32 2)\l  %85 = bitcast float %50 to i32\l  %86 = and i32 %85, -2147483648\l  %87 = bitcast float %84 to i32\l  %88 = xor i32 %86, %87\l  %89 = bitcast i32 %88 to float\l  br label %94\l}"];
	Node0x4c0b2a0 -> Node0x4c0cf60;
	Node0x4c0a8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%90:\l90:                                               \l  %91 = fcmp oeq float %51, 6.000000e+00\l  %92 = tail call float @llvm.copysign.f32(float 0.000000e+00, float %50)\l  %93 = select i1 %91, float %92, float %50\l  br label %94\l}"];
	Node0x4c0a8e0 -> Node0x4c0cf60;
	Node0x4c0cf60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%94:\l94:                                               \l  %95 = phi float [ %89, %72 ], [ %93, %90 ]\l  %96 = tail call i1 @llvm.amdgcn.class.f32(float %50, i32 504)\l  %97 = select i1 %96, float %95, float 0x7FF8000000000000\l  br label %98\l}"];
	Node0x4c0cf60 -> Node0x4c0a370;
	Node0x4c0a370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%98:\l98:                                               \l  %99 = phi float [ %97, %94 ], [ 0.000000e+00, %46 ]\l  %100 = fcmp contract oeq float %41, %35\l  br i1 %100, label %101, label %105\l|{<s0>T|<s1>F}}"];
	Node0x4c0a370:s0 -> Node0x4c0d8b0;
	Node0x4c0a370:s1 -> Node0x4c0d900;
	Node0x4c0d8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%101:\l101:                                              \l  %102 = fsub contract float %37, %33\l  %103 = fdiv contract float %102, %44\l  %104 = fadd contract float %103, 2.000000e+00\l  br label %105\l}"];
	Node0x4c0d8b0 -> Node0x4c0d900;
	Node0x4c0d900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%105:\l105:                                              \l  %106 = phi float [ %104, %101 ], [ %99, %98 ]\l  %107 = fcmp contract oeq float %41, %37\l  br i1 %107, label %108, label %112\l|{<s0>T|<s1>F}}"];
	Node0x4c0d900:s0 -> Node0x4c0dd60;
	Node0x4c0d900:s1 -> Node0x4c0a150;
	Node0x4c0dd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%108:\l108:                                              \l  %109 = fsub contract float %33, %35\l  %110 = fdiv contract float %109, %44\l  %111 = fadd contract float %110, 4.000000e+00\l  br label %112\l}"];
	Node0x4c0dd60 -> Node0x4c0a150;
	Node0x4c0a150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%112:\l112:                                              \l  %113 = phi float [ %111, %108 ], [ %106, %105 ], [ 0.000000e+00, %27 ]\l  %114 = fmul contract float %113, 6.000000e+01\l  %115 = fdiv contract float %44, %41\l  %116 = select i1 %45, float %115, float 0.000000e+00\l  %117 = fcmp contract olt float %114, 0.000000e+00\l  %118 = fadd contract float %114, 3.600000e+02\l  %119 = select i1 %117, float %118, float %114\l  %120 = fdiv contract float %119, 3.600000e+02\l  %121 = select i1 %5, float %120, float %119\l  %122 = insertelement \<4 x float\> undef, float %121, i64 0\l  %123 = insertelement \<4 x float\> %122, float %116, i64 1\l  %124 = insertelement \<4 x float\> %123, float %41, i64 2\l  %125 = insertelement \<4 x float\> %124, float %39, i64 3\l  %126 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %31, i32 0, i32 0, i32 0\l  store \<4 x float\> %125, \<4 x float\> addrspace(1)* %126, align 16\l  br label %127\l}"];
	Node0x4c0a150 -> Node0x4c08340;
	Node0x4c08340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%127:\l127:                                              \l  ret void\l}"];
}
