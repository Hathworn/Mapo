digraph "CFG for '_Z26cuConvert8uC3To32fC4KernelPKhmP15HIP_vector_typeIfLj4EEmffii' function" {
	label="CFG for '_Z26cuConvert8uC3To32fC4KernelPKhmP15HIP_vector_typeIfLj4EEmffii' function";

	Node0x51f6210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = mul nsw i32 %17, 3\l  %27 = trunc i64 %1 to i32\l  %28 = mul i32 %25, %27\l  %29 = add i32 %28, %26\l  %30 = icmp slt i32 %17, %6\l  %31 = icmp slt i32 %25, %7\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %59\l|{<s0>T|<s1>F}}"];
	Node0x51f6210:s0 -> Node0x51f7f80;
	Node0x51f6210:s1 -> Node0x51f8010;
	Node0x51f7f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%33:\l33:                                               \l  %34 = trunc i64 %3 to i32\l  %35 = mul i32 %25, %34\l  %36 = add i32 %35, %17\l  %37 = sext i32 %29 to i64\l  %38 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %37\l  %39 = load i8, i8 addrspace(1)* %38, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %40 = uitofp i8 %39 to float\l  %41 = fdiv contract float %40, 2.550000e+02\l  %42 = add nsw i32 %29, 1\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %43\l  %45 = load i8, i8 addrspace(1)* %44, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %46 = uitofp i8 %45 to float\l  %47 = fdiv contract float %46, 2.550000e+02\l  %48 = add nsw i32 %29, 2\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %49\l  %51 = load i8, i8 addrspace(1)* %50, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %52 = uitofp i8 %51 to float\l  %53 = fdiv contract float %52, 2.550000e+02\l  %54 = insertelement \<4 x float\> \<float poison, float poison, float poison,\l... float 1.000000e+00\>, float %41, i64 0\l  %55 = insertelement \<4 x float\> %54, float %47, i64 1\l  %56 = insertelement \<4 x float\> %55, float %53, i64 2\l  %57 = sext i32 %36 to i64\l  %58 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %57, i32 0, i32 0, i32 0\l  store \<4 x float\> %56, \<4 x float\> addrspace(1)* %58, align 16\l  br label %59\l}"];
	Node0x51f7f80 -> Node0x51f8010;
	Node0x51f8010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  ret void\l}"];
}
