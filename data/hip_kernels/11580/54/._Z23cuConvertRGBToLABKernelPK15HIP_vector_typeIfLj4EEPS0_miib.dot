digraph "CFG for '_Z23cuConvertRGBToLABKernelPK15HIP_vector_typeIfLj4EEPS0_miib' function" {
	label="CFG for '_Z23cuConvertRGBToLABKernelPK15HIP_vector_typeIfLj4EEPS0_miib' function";

	Node0x553ad50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %3\l  %25 = icmp slt i32 %23, %4\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %153\l|{<s0>T|<s1>F}}"];
	Node0x553ad50:s0 -> Node0x553e7c0;
	Node0x553ad50:s1 -> Node0x553e850;
	Node0x553e7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%27:\l27:                                               \l  %28 = trunc i64 %2 to i32\l  %29 = mul i32 %23, %28\l  %30 = add i32 %29, %15\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 0\l  %33 = load float, float addrspace(1)* %32, align 16, !amdgpu.noclobber !5\l  %34 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 1\l  %35 = load float, float addrspace(1)* %34, align 4, !amdgpu.noclobber !5\l  %36 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 2\l  %37 = load float, float addrspace(1)* %36, align 8, !amdgpu.noclobber !5\l  %38 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 3\l  %39 = load float, float addrspace(1)* %38, align 4, !amdgpu.noclobber !5\l  br i1 %5, label %45, label %40\l|{<s0>T|<s1>F}}"];
	Node0x553e7c0:s0 -> Node0x553f400;
	Node0x553e7c0:s1 -> Node0x553f450;
	Node0x553f450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%40:\l40:                                               \l  %41 = fdiv contract float %33, 2.550000e+02\l  %42 = fdiv contract float %35, 2.550000e+02\l  %43 = fdiv contract float %37, 2.550000e+02\l  %44 = fdiv contract float %39, 2.550000e+02\l  br label %45\l}"];
	Node0x553f450 -> Node0x553f400;
	Node0x553f400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%45:\l45:                                               \l  %46 = phi float [ %33, %27 ], [ %41, %40 ]\l  %47 = phi float [ %35, %27 ], [ %42, %40 ]\l  %48 = phi float [ %37, %27 ], [ %43, %40 ]\l  %49 = phi float [ %39, %27 ], [ %44, %40 ]\l  %50 = fmul contract float %46, 0x3FDA65AF80000000\l  %51 = fmul contract float %47, 0x3FD6E286E0000000\l  %52 = fadd contract float %50, %51\l  %53 = fmul contract float %48, 0x3FC7189380000000\l  %54 = fadd contract float %52, %53\l  %55 = fmul contract float %46, 0x3FCB38DDA0000000\l  %56 = fmul contract float %47, 0x3FE6E286E0000000\l  %57 = fadd contract float %55, %56\l  %58 = fmul contract float %48, 0x3FB27A0FA0000000\l  %59 = fadd contract float %57, %58\l  %60 = fmul contract float %46, 0x3F93CC4420000000\l  %61 = fmul contract float %47, 0x3FBE835DE0000000\l  %62 = fadd contract float %60, %61\l  %63 = fmul contract float %48, 0x3FEE68E420000000\l  %64 = fadd contract float %62, %63\l  %65 = fdiv contract float %54, 0x3FEE6A22C0000000\l  %66 = fdiv contract float %64, 0x3FF16B8960000000\l  %67 = fcmp contract ogt float %65, 0x3F822354E0000000\l  br i1 %67, label %68, label %86\l|{<s0>T|<s1>F}}"];
	Node0x553f400:s0 -> Node0x5541420;
	Node0x553f400:s1 -> Node0x55414b0;
	Node0x5541420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%68:\l68:                                               \l  %69 = tail call float @llvm.fabs.f32(float %65)\l  %70 = tail call i1 @llvm.amdgcn.class.f32(float %65, i32 144)\l  %71 = tail call float @llvm.amdgcn.ldexp.f32(float %69, i32 24)\l  %72 = select i1 %70, float %71, float %69\l  %73 = tail call float @llvm.log2.f32(float %72)\l  %74 = fmul float %73, 0x3FD5555560000000\l  %75 = tail call float @llvm.exp2.f32(float %74)\l  %76 = fmul float %75, %75\l  %77 = tail call float @llvm.amdgcn.rcp.f32(float %76)\l  %78 = fneg float %72\l  %79 = tail call float @llvm.fmuladd.f32(float %77, float %78, float %75)\l  %80 = tail call float @llvm.fmuladd.f32(float %79, float 0xBFD5555560000000,\l... float %75)\l  %81 = tail call float @llvm.amdgcn.ldexp.f32(float %80, i32 -8)\l  %82 = select i1 %70, float %81, float %80\l  %83 = tail call i1 @llvm.amdgcn.class.f32(float %65, i32 615)\l  %84 = select i1 %83, float %65, float %82\l  %85 = tail call float @llvm.copysign.f32(float %84, float %65)\l  br label %90\l}"];
	Node0x5541420 -> Node0x5542fc0;
	Node0x55414b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%86:\l86:                                               \l  %87 = fmul contract float %65, 0x408C3A5EE0000000\l  %88 = fadd contract float %87, 1.600000e+01\l  %89 = fdiv contract float %88, 1.160000e+02\l  br label %90\l}"];
	Node0x55414b0 -> Node0x5542fc0;
	Node0x5542fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%90:\l90:                                               \l  %91 = phi float [ %85, %68 ], [ %89, %86 ]\l  %92 = fcmp contract ogt float %59, 0x3F822354E0000000\l  br i1 %92, label %93, label %111\l|{<s0>T|<s1>F}}"];
	Node0x5542fc0:s0 -> Node0x5543460;
	Node0x5542fc0:s1 -> Node0x55434b0;
	Node0x5543460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%93:\l93:                                               \l  %94 = tail call float @llvm.fabs.f32(float %59)\l  %95 = tail call i1 @llvm.amdgcn.class.f32(float %59, i32 144)\l  %96 = tail call float @llvm.amdgcn.ldexp.f32(float %94, i32 24)\l  %97 = select i1 %95, float %96, float %94\l  %98 = tail call float @llvm.log2.f32(float %97)\l  %99 = fmul float %98, 0x3FD5555560000000\l  %100 = tail call float @llvm.exp2.f32(float %99)\l  %101 = fmul float %100, %100\l  %102 = tail call float @llvm.amdgcn.rcp.f32(float %101)\l  %103 = fneg float %97\l  %104 = tail call float @llvm.fmuladd.f32(float %102, float %103, float %100)\l  %105 = tail call float @llvm.fmuladd.f32(float %104, float\l... 0xBFD5555560000000, float %100)\l  %106 = tail call float @llvm.amdgcn.ldexp.f32(float %105, i32 -8)\l  %107 = select i1 %95, float %106, float %105\l  %108 = tail call i1 @llvm.amdgcn.class.f32(float %59, i32 615)\l  %109 = select i1 %108, float %59, float %107\l  %110 = tail call float @llvm.copysign.f32(float %109, float %59)\l  br label %115\l}"];
	Node0x5543460 -> Node0x55445a0;
	Node0x55434b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%111:\l111:                                              \l  %112 = fmul contract float %59, 0x408C3A5EE0000000\l  %113 = fadd contract float %112, 1.600000e+01\l  %114 = fdiv contract float %113, 1.160000e+02\l  br label %115\l}"];
	Node0x55434b0 -> Node0x55445a0;
	Node0x55445a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%115:\l115:                                              \l  %116 = phi float [ %110, %93 ], [ %114, %111 ]\l  %117 = fcmp contract ogt float %66, 0x3F822354E0000000\l  br i1 %117, label %118, label %136\l|{<s0>T|<s1>F}}"];
	Node0x55445a0:s0 -> Node0x55449c0;
	Node0x55445a0:s1 -> Node0x5544a10;
	Node0x55449c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%118:\l118:                                              \l  %119 = tail call float @llvm.fabs.f32(float %66)\l  %120 = tail call i1 @llvm.amdgcn.class.f32(float %66, i32 144)\l  %121 = tail call float @llvm.amdgcn.ldexp.f32(float %119, i32 24)\l  %122 = select i1 %120, float %121, float %119\l  %123 = tail call float @llvm.log2.f32(float %122)\l  %124 = fmul float %123, 0x3FD5555560000000\l  %125 = tail call float @llvm.exp2.f32(float %124)\l  %126 = fmul float %125, %125\l  %127 = tail call float @llvm.amdgcn.rcp.f32(float %126)\l  %128 = fneg float %122\l  %129 = tail call float @llvm.fmuladd.f32(float %127, float %128, float %125)\l  %130 = tail call float @llvm.fmuladd.f32(float %129, float\l... 0xBFD5555560000000, float %125)\l  %131 = tail call float @llvm.amdgcn.ldexp.f32(float %130, i32 -8)\l  %132 = select i1 %120, float %131, float %130\l  %133 = tail call i1 @llvm.amdgcn.class.f32(float %66, i32 615)\l  %134 = select i1 %133, float %66, float %132\l  %135 = tail call float @llvm.copysign.f32(float %134, float %66)\l  br label %140\l}"];
	Node0x55449c0 -> Node0x5545e20;
	Node0x5544a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%136:\l136:                                              \l  %137 = fmul contract float %66, 0x408C3A5EE0000000\l  %138 = fadd contract float %137, 1.600000e+01\l  %139 = fdiv contract float %138, 1.160000e+02\l  br label %140\l}"];
	Node0x5544a10 -> Node0x5545e20;
	Node0x5545e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%140:\l140:                                              \l  %141 = phi float [ %135, %118 ], [ %139, %136 ]\l  %142 = fmul contract float %116, 1.160000e+02\l  %143 = fadd contract float %142, -1.600000e+01\l  %144 = fsub contract float %91, %116\l  %145 = fmul contract float %144, 5.000000e+02\l  %146 = fsub contract float %116, %141\l  %147 = fmul contract float %146, 2.000000e+02\l  %148 = insertelement \<4 x float\> undef, float %143, i64 0\l  %149 = insertelement \<4 x float\> %148, float %145, i64 1\l  %150 = insertelement \<4 x float\> %149, float %147, i64 2\l  %151 = insertelement \<4 x float\> %150, float %49, i64 3\l  %152 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %31, i32 0, i32 0, i32 0\l  store \<4 x float\> %151, \<4 x float\> addrspace(1)* %152, align 16\l  br label %153\l}"];
	Node0x5545e20 -> Node0x553e850;
	Node0x553e850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%153:\l153:                                              \l  ret void\l}"];
}
