digraph "CFG for '_Z23cuConvertLABToRGBKernelPK15HIP_vector_typeIfLj4EEPS0_mii' function" {
	label="CFG for '_Z23cuConvertLABToRGBKernelPK15HIP_vector_typeIfLj4EEPS0_mii' function";

	Node0x5218ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = icmp slt i32 %14, %3\l  %24 = icmp slt i32 %22, %4\l  %25 = select i1 %23, i1 %24, i1 false\l  br i1 %25, label %26, label %94\l|{<s0>T|<s1>F}}"];
	Node0x5218ca0:s0 -> Node0x521c700;
	Node0x5218ca0:s1 -> Node0x521c790;
	Node0x521c700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%26:\l26:                                               \l  %27 = trunc i64 %2 to i32\l  %28 = mul i32 %22, %27\l  %29 = add i32 %28, %14\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %30, i32 0, i32 0, i32 0, i64 0\l  %32 = load float, float addrspace(1)* %31, align 16, !amdgpu.noclobber !5\l  %33 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %30, i32 0, i32 0, i32 0, i64 1\l  %34 = load float, float addrspace(1)* %33, align 4, !amdgpu.noclobber !5\l  %35 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %30, i32 0, i32 0, i32 0, i64 2\l  %36 = load float, float addrspace(1)* %35, align 8, !amdgpu.noclobber !5\l  %37 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %30, i32 0, i32 0, i32 0, i64 3\l  %38 = load float, float addrspace(1)* %37, align 4, !amdgpu.noclobber !5\l  %39 = fadd contract float %32, 1.600000e+01\l  %40 = fdiv contract float %39, 1.160000e+02\l  %41 = fcmp contract ogt float %32, 8.000000e+00\l  br i1 %41, label %42, label %45\l|{<s0>T|<s1>F}}"];
	Node0x521c700:s0 -> Node0x521df90;
	Node0x521c700:s1 -> Node0x521e020;
	Node0x521df90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%42:\l42:                                               \l  %43 = fmul contract float %40, %40\l  %44 = fmul contract float %40, %43\l  br label %47\l}"];
	Node0x521df90 -> Node0x521e280;
	Node0x521e020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%45:\l45:                                               \l  %46 = fdiv contract float %32, 0x408C3A5EE0000000\l  br label %47\l}"];
	Node0x521e020 -> Node0x521e280;
	Node0x521e280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%47:\l47:                                               \l  %48 = phi float [ %44, %42 ], [ %46, %45 ]\l  %49 = fdiv contract float %34, 5.000000e+02\l  %50 = fadd contract float %49, %40\l  %51 = fcmp contract ogt float %50, 0x3FCA7B9620000000\l  br i1 %51, label %52, label %55\l|{<s0>T|<s1>F}}"];
	Node0x521e280:s0 -> Node0x521e6e0;
	Node0x521e280:s1 -> Node0x521e770;
	Node0x521e6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%52:\l52:                                               \l  %53 = fmul contract float %50, %50\l  %54 = fmul contract float %50, %53\l  br label %59\l}"];
	Node0x521e6e0 -> Node0x521e9d0;
	Node0x521e770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%55:\l55:                                               \l  %56 = fmul contract float %50, 1.160000e+02\l  %57 = fadd contract float %56, -1.600000e+01\l  %58 = fdiv contract float %57, 0x408C3A5EE0000000\l  br label %59\l}"];
	Node0x521e770 -> Node0x521e9d0;
	Node0x521e9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%59:\l59:                                               \l  %60 = phi float [ %54, %52 ], [ %58, %55 ]\l  %61 = fdiv contract float %36, 2.000000e+02\l  %62 = fsub contract float %40, %61\l  %63 = fcmp contract ogt float %62, 0x3FCA7B9620000000\l  br i1 %63, label %64, label %67\l|{<s0>T|<s1>F}}"];
	Node0x521e9d0:s0 -> Node0x521ef10;
	Node0x521e9d0:s1 -> Node0x521efa0;
	Node0x521ef10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%64:\l64:                                               \l  %65 = fmul contract float %62, %62\l  %66 = fmul contract float %62, %65\l  br label %71\l}"];
	Node0x521ef10 -> Node0x521ce20;
	Node0x521efa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%67:\l67:                                               \l  %68 = fmul contract float %62, 1.160000e+02\l  %69 = fadd contract float %68, -1.600000e+01\l  %70 = fdiv contract float %69, 0x408C3A5EE0000000\l  br label %71\l}"];
	Node0x521efa0 -> Node0x521ce20;
	Node0x521ce20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%71:\l71:                                               \l  %72 = phi float [ %66, %64 ], [ %70, %67 ]\l  %73 = fmul contract float %60, 0x3FEE6A22C0000000\l  %74 = fmul contract float %72, 0x3FF16B8960000000\l  %75 = fmul contract float %73, 0x4009EC7340000000\l  %76 = fmul contract float %48, 0x3FF8981E80000000\l  %77 = fsub contract float %75, %76\l  %78 = fmul contract float %74, 0x3FDFE7F040000000\l  %79 = fsub contract float %77, %78\l  %80 = fmul contract float %73, 0x3FEF043A20000000\l  %81 = fmul contract float %48, 0x3FFE0423E0000000\l  %82 = fsub contract float %81, %80\l  %83 = fmul contract float %74, 0x3FA546D400000000\l  %84 = fadd contract float %82, %83\l  %85 = fmul contract float %73, 0x3FAC7D4AA0000000\l  %86 = fmul contract float %48, 0x3FCA1D8540000000\l  %87 = fsub contract float %85, %86\l  %88 = fmul contract float %74, 0x3FF0EA6500000000\l  %89 = fadd contract float %87, %88\l  %90 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %30, i32 0, i32 0, i32 0, i64 0\l  store float %79, float addrspace(1)* %90, align 16\l  %91 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %30, i32 0, i32 0, i32 0, i64 1\l  store float %84, float addrspace(1)* %91, align 4\l  %92 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %30, i32 0, i32 0, i32 0, i64 2\l  store float %89, float addrspace(1)* %92, align 8\l  %93 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %30, i32 0, i32 0, i32 0, i64 3\l  store float %38, float addrspace(1)* %93, align 4\l  br label %94\l}"];
	Node0x521ce20 -> Node0x521c790;
	Node0x521c790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  ret void\l}"];
}
