digraph "CFG for '_Z10initSquarePfS_fii' function" {
	label="CFG for '_Z10initSquarePfS_fii' function";

	Node0x5de66f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %11\l  %14 = add i32 %13, %6\l  %15 = icmp ult i32 %14, %3\l  br i1 %15, label %16, label %20\l|{<s0>T|<s1>F}}"];
	Node0x5de66f0:s0 -> Node0x5de8570;
	Node0x5de66f0:s1 -> Node0x5de8600;
	Node0x5de8570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%16:\l16:                                               \l  %17 = sdiv i32 %3, 3\l  %18 = shl nsw i32 %3, 1\l  %19 = sdiv i32 %18, 3\l  br label %29\l}"];
	Node0x5de8570 -> Node0x5de89a0;
	Node0x5de8600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%20:\l20:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %21 = icmp eq i32 %14, 0\l  %22 = icmp sgt i32 %4, 0\l  %23 = select i1 %21, i1 %22, i1 false\l  br i1 %23, label %24, label %126\l|{<s0>T|<s1>F}}"];
	Node0x5de8600:s0 -> Node0x5de8f60;
	Node0x5de8600:s1 -> Node0x5de8ff0;
	Node0x5de8f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%24:\l24:                                               \l  %25 = and i32 %4, 3\l  %26 = icmp ult i32 %4, 4\l  br i1 %26, label %104, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5de8f60:s0 -> Node0x5de9280;
	Node0x5de8f60:s1 -> Node0x5de92d0;
	Node0x5de92d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%27:\l27:                                               \l  %28 = and i32 %4, -4\l  br label %43\l}"];
	Node0x5de92d0 -> Node0x5de94d0;
	Node0x5de89a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %14, %16 ], [ %41, %29 ]\l  %31 = phi i32 [ 0, %16 ], [ %39, %29 ]\l  %32 = icmp sgt i32 %30, %17\l  %33 = icmp slt i32 %30, %19\l  %34 = select i1 %32, i1 %33, i1 false\l  %35 = add nsw i32 %30, %4\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = select i1 %34, float 1.500000e+00, float 5.000000e-01\l  store float %38, float addrspace(1)* %37, align 4, !tbaa !7\l  %39 = add nuw nsw i32 %31, 1\l  %40 = mul i32 %39, %11\l  %41 = add i32 %40, %14\l  %42 = icmp ult i32 %41, %3\l  br i1 %42, label %29, label %20, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5de89a0:s0 -> Node0x5de89a0;
	Node0x5de89a0:s1 -> Node0x5de8600;
	Node0x5de94d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%43:\l43:                                               \l  %44 = phi i32 [ 0, %27 ], [ %101, %43 ]\l  %45 = phi i32 [ 0, %27 ], [ %102, %43 ]\l  %46 = add nsw i32 %44, %3\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7\l  %50 = zext i32 %44 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  store float %49, float addrspace(1)* %51, align 4, !tbaa !7\l  %52 = add i32 %44, %4\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %56 = add i32 %52, %3\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  store float %55, float addrspace(1)* %58, align 4, !tbaa !7\l  %59 = or i32 %44, 1\l  %60 = add nsw i32 %59, %3\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7\l  %64 = zext i32 %59 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %0, i64 %64\l  store float %63, float addrspace(1)* %65, align 4, !tbaa !7\l  %66 = add i32 %59, %4\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7\l  %70 = add i32 %66, %3\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  store float %69, float addrspace(1)* %72, align 4, !tbaa !7\l  %73 = or i32 %44, 2\l  %74 = add nsw i32 %73, %3\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7\l  %78 = zext i32 %73 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  store float %77, float addrspace(1)* %79, align 4, !tbaa !7\l  %80 = add i32 %73, %4\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7\l  %84 = add i32 %80, %3\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  store float %83, float addrspace(1)* %86, align 4, !tbaa !7\l  %87 = or i32 %44, 3\l  %88 = add nsw i32 %87, %3\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %0, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !7\l  %92 = zext i32 %87 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %0, i64 %92\l  store float %91, float addrspace(1)* %93, align 4, !tbaa !7\l  %94 = add i32 %87, %4\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %0, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !7\l  %98 = add i32 %94, %3\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %0, i64 %99\l  store float %97, float addrspace(1)* %100, align 4, !tbaa !7\l  %101 = add nuw nsw i32 %44, 4\l  %102 = add i32 %45, 4\l  %103 = icmp eq i32 %102, %28\l  br i1 %103, label %104, label %43, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5de94d0:s0 -> Node0x5de9280;
	Node0x5de94d0:s1 -> Node0x5de94d0;
	Node0x5de9280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%104:\l104:                                              \l  %105 = phi i32 [ 0, %24 ], [ %101, %43 ]\l  %106 = icmp eq i32 %25, 0\l  br i1 %106, label %126, label %107\l|{<s0>T|<s1>F}}"];
	Node0x5de9280:s0 -> Node0x5de8ff0;
	Node0x5de9280:s1 -> Node0x5dedcd0;
	Node0x5dedcd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%107:\l107:                                              \l  %108 = phi i32 [ %123, %107 ], [ %105, %104 ]\l  %109 = phi i32 [ %124, %107 ], [ 0, %104 ]\l  %110 = add nsw i32 %108, %3\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %0, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7\l  %114 = zext i32 %108 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  store float %113, float addrspace(1)* %115, align 4, !tbaa !7\l  %116 = add i32 %108, %4\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %0, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !7\l  %120 = add i32 %116, %3\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %0, i64 %121\l  store float %119, float addrspace(1)* %122, align 4, !tbaa !7\l  %123 = add nuw nsw i32 %108, 1\l  %124 = add i32 %109, 1\l  %125 = icmp eq i32 %124, %25\l  br i1 %125, label %126, label %107, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5dedcd0:s0 -> Node0x5de8ff0;
	Node0x5dedcd0:s1 -> Node0x5dedcd0;
	Node0x5de8ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%126:\l126:                                              \l  ret void\l}"];
}
