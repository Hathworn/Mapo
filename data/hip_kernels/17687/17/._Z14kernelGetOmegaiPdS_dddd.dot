digraph "CFG for '_Z14kernelGetOmegaiPdS_dddd' function" {
	label="CFG for '_Z14kernelGetOmegaiPdS_dddd' function";

	Node0x52d9860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %52\l|{<s0>T|<s1>F}}"];
	Node0x52d9860:s0 -> Node0x52db790;
	Node0x52d9860:s1 -> Node0x52db820;
	Node0x52db790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = sext i32 %16 to i64\l  %20 = getelementptr inbounds double, double addrspace(1)* %2, i64 %19\l  %21 = load double, double addrspace(1)* %20, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %22 = fadd contract double %21, 1.000000e+00\l  %23 = fmul contract double %5, 3.000000e+00\l  %24 = fmul contract double %23, %3\l  %25 = fadd contract double %24, %22\l  %26 = fmul contract double %6, 1.500000e+01\l  %27 = fmul contract double %26, %4\l  %28 = fadd contract double %27, %25\l  %29 = fcmp olt double %28, 0x1000000000000000\l  %30 = select i1 %29, double 0x4FF0000000000000, double 1.000000e+00\l  %31 = fmul double %28, %30\l  %32 = tail call double @llvm.amdgcn.rsq.f64(double %31)\l  %33 = fmul double %31, %32\l  %34 = fmul double %32, 5.000000e-01\l  %35 = fneg double %34\l  %36 = tail call double @llvm.fma.f64(double %35, double %33, double\l... 5.000000e-01)\l  %37 = tail call double @llvm.fma.f64(double %34, double %36, double %34)\l  %38 = tail call double @llvm.fma.f64(double %33, double %36, double %33)\l  %39 = fneg double %38\l  %40 = tail call double @llvm.fma.f64(double %39, double %38, double %31)\l  %41 = tail call double @llvm.fma.f64(double %40, double %37, double %38)\l  %42 = fneg double %41\l  %43 = tail call double @llvm.fma.f64(double %42, double %41, double %31)\l  %44 = tail call double @llvm.fma.f64(double %43, double %37, double %41)\l  %45 = select i1 %29, double 0x37F0000000000000, double 1.000000e+00\l  %46 = fmul double %45, %44\l  %47 = fcmp oeq double %31, 0.000000e+00\l  %48 = fcmp oeq double %31, 0x7FF0000000000000\l  %49 = or i1 %47, %48\l  %50 = select i1 %49, double %31, double %46\l  %51 = getelementptr inbounds double, double addrspace(1)* %1, i64 %19\l  store double %50, double addrspace(1)* %51, align 8, !tbaa !7\l  br label %52\l}"];
	Node0x52db790 -> Node0x52db820;
	Node0x52db820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  ret void\l}"];
}
