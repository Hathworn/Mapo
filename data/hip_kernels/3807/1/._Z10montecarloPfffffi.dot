digraph "CFG for '_Z10montecarloPfffffi' function" {
	label="CFG for '_Z10montecarloPfffffi' function";

	Node0x4645c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp eq i32 %14, 0\l  br i1 %16, label %17, label %18\l|{<s0>T|<s1>F}}"];
	Node0x4645c40:s0 -> Node0x4646050;
	Node0x4645c40:s1 -> Node0x4647c20;
	Node0x4646050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%17:\l17:                                               \l  store float %1, float addrspace(3)* @_ZZ10montecarloPfffffiE4lowx, align 4,\l... !tbaa !7\l  store float %2, float addrspace(3)* @_ZZ10montecarloPfffffiE5highx, align 4,\l... !tbaa !7\l  store float %3, float addrspace(3)* @_ZZ10montecarloPfffffiE4lowy, align 4,\l... !tbaa !7\l  store float %4, float addrspace(3)* @_ZZ10montecarloPfffffiE5highy, align 4,\l... !tbaa !7\l  store i32 %5, i32 addrspace(3)* @_ZZ10montecarloPfffffiE5iters, align 4,\l... !tbaa !11\l  br label %18\l}"];
	Node0x4646050 -> Node0x4647c20;
	Node0x4647c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%18:\l18:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %19 = xor i32 %15, 746559103\l  %20 = icmp sgt i32 %15, -1\l  %21 = mul i32 %19, 1228688033\l  %22 = select i1 %20, i32 -1973591729, i32 -100066652\l  %23 = load i32, i32 addrspace(3)* @_ZZ10montecarloPfffffiE5iters, align 4,\l... !tbaa !11\l  %24 = icmp sgt i32 %23, 0\l  br i1 %24, label %25, label %97\l|{<s0>T|<s1>F}}"];
	Node0x4647c20:s0 -> Node0x4649690;
	Node0x4647c20:s1 -> Node0x46496e0;
	Node0x4649690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%25:\l25:                                               \l  %26 = add i32 %21, 6615241\l  %27 = add i32 %26, %22\l  %28 = add i32 %21, 5783321\l  %29 = xor i32 %22, 88675123\l  %30 = add nsw i32 %22, 521288629\l  %31 = xor i32 %21, 362436069\l  %32 = add i32 %21, 123456789\l  %33 = load float, float addrspace(3)* @_ZZ10montecarloPfffffiE4lowx, align\l... 4, !tbaa !7\l  %34 = load float, float addrspace(3)* @_ZZ10montecarloPfffffiE5highx, align\l... 4, !tbaa !7\l  %35 = fsub contract float %34, %33\l  %36 = load float, float addrspace(3)* @_ZZ10montecarloPfffffiE4lowy, align\l... 4, !tbaa !7\l  %37 = load float, float addrspace(3)* @_ZZ10montecarloPfffffiE5highy, align\l... 4, !tbaa !7\l  %38 = fsub contract float %37, %36\l  br label %39\l}"];
	Node0x4649690 -> Node0x464a110;
	Node0x464a110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi float [ 0.000000e+00, %25 ], [ %94, %39 ]\l  %41 = phi i32 [ 0, %25 ], [ %95, %39 ]\l  %42 = phi i32 [ %27, %25 ], [ %69, %39 ]\l  %43 = phi i32 [ %28, %25 ], [ %68, %39 ]\l  %44 = phi i32 [ %29, %25 ], [ %54, %39 ]\l  %45 = phi i32 [ %30, %25 ], [ %43, %39 ]\l  %46 = phi i32 [ %32, %25 ], [ %45, %39 ]\l  %47 = phi i32 [ %31, %25 ], [ %44, %39 ]\l  %48 = lshr i32 %46, 2\l  %49 = xor i32 %48, %46\l  %50 = shl i32 %43, 4\l  %51 = shl i32 %49, 1\l  %52 = xor i32 %51, %50\l  %53 = xor i32 %52, %49\l  %54 = xor i32 %53, %43\l  %55 = add i32 %42, 362437\l  %56 = add i32 %55, %54\l  %57 = uitofp i32 %56 to float\l  %58 = fmul contract float %57, 0x3DF0000000000000\l  %59 = fadd contract float %58, 0x3DF0000000000000\l  %60 = fmul contract float %59, %35\l  %61 = fadd contract float %33, %60\l  %62 = lshr i32 %47, 2\l  %63 = xor i32 %62, %47\l  %64 = shl i32 %54, 4\l  %65 = shl i32 %63, 1\l  %66 = xor i32 %65, %64\l  %67 = xor i32 %66, %63\l  %68 = xor i32 %67, %54\l  %69 = add i32 %42, 724874\l  %70 = add i32 %68, %69\l  %71 = uitofp i32 %70 to float\l  %72 = fmul contract float %71, 0x3DF0000000000000\l  %73 = fadd contract float %72, 0x3DF0000000000000\l  %74 = fmul contract float %73, %38\l  %75 = fadd contract float %36, %74\l  %76 = fneg contract float %61\l  %77 = fmul contract float %61, %76\l  %78 = fmul contract float %75, %75\l  %79 = fsub contract float %77, %78\l  %80 = fmul float %79, 0x3FF7154760000000\l  %81 = tail call float @llvm.rint.f32(float %80)\l  %82 = fcmp ogt float %79, 0x40562E4300000000\l  %83 = fcmp olt float %79, 0xC059D1DA00000000\l  %84 = fneg float %80\l  %85 = tail call float @llvm.fma.f32(float %79, float 0x3FF7154760000000,\l... float %84)\l  %86 = tail call float @llvm.fma.f32(float %79, float 0x3E54AE0BE0000000,\l... float %85)\l  %87 = fsub float %80, %81\l  %88 = fadd float %86, %87\l  %89 = tail call float @llvm.exp2.f32(float %88)\l  %90 = fptosi float %81 to i32\l  %91 = tail call float @llvm.amdgcn.ldexp.f32(float %89, i32 %90)\l  %92 = select i1 %83, float 0.000000e+00, float %91\l  %93 = select i1 %82, float 0x7FF0000000000000, float %92\l  %94 = fadd contract float %40, %93\l  %95 = add nuw nsw i32 %41, 1\l  %96 = icmp eq i32 %95, %23\l  br i1 %96, label %97, label %39, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x464a110:s0 -> Node0x46496e0;
	Node0x464a110:s1 -> Node0x464a110;
	Node0x46496e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%97:\l97:                                               \l  %98 = phi float [ 0.000000e+00, %18 ], [ %94, %39 ]\l  %99 = sext i32 %15 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %0, i64 %99\l  store float %98, float addrspace(1)* %100, align 4, !tbaa !7\l  ret void\l}"];
}
