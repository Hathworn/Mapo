digraph "CFG for '_Z21compute_potential_gpuPfS_S_S_S_ii' function" {
	label="CFG for '_Z21compute_potential_gpuPfS_S_S_S_ii' function";

	Node0x5e2af50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = add i32 %15, %8\l  %17 = icmp eq i32 %6, 0\l  %18 = select i1 %17, i32 %5, i32 %6\l  %19 = icmp slt i32 %16, %18\l  br i1 %19, label %20, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5e2af50:s0 -> Node0x5e2d000;
	Node0x5e2af50:s1 -> Node0x5e2d090;
	Node0x5e2d000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%20:\l20:                                               \l  %21 = sext i32 %16 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %24 = getelementptr inbounds float, float addrspace(1)* %2, i64 %21\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %26 = getelementptr inbounds float, float addrspace(1)* %3, i64 %21\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %28 = icmp slt i32 %6, %5\l  br i1 %28, label %29, label %78\l|{<s0>T|<s1>F}}"];
	Node0x5e2d000:s0 -> Node0x5e2e450;
	Node0x5e2d000:s1 -> Node0x5e2e4e0;
	Node0x5e2e450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi float [ %75, %74 ], [ undef, %20 ]\l  %31 = phi i32 [ %76, %74 ], [ %6, %20 ]\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %35 = fsub contract float %23, %34\l  %36 = getelementptr inbounds float, float addrspace(1)* %2, i64 %32\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %38 = fsub contract float %25, %37\l  %39 = getelementptr inbounds float, float addrspace(1)* %3, i64 %32\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %41 = fsub contract float %27, %40\l  %42 = icmp eq i32 %16, %31\l  br i1 %42, label %74, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5e2e450:s0 -> Node0x5e2e620;
	Node0x5e2e450:s1 -> Node0x5e2f460;
	Node0x5e2f460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%43:\l43:                                               \l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %46 = fmul contract float %35, %35\l  %47 = fmul contract float %38, %38\l  %48 = fadd contract float %46, %47\l  %49 = fmul contract float %41, %41\l  %50 = fadd contract float %48, %49\l  %51 = fcmp olt float %50, 0x39F0000000000000\l  %52 = select i1 %51, float 0x41F0000000000000, float 1.000000e+00\l  %53 = fmul float %50, %52\l  %54 = tail call float @llvm.sqrt.f32(float %53)\l  %55 = bitcast float %54 to i32\l  %56 = add nsw i32 %55, -1\l  %57 = bitcast i32 %56 to float\l  %58 = add nsw i32 %55, 1\l  %59 = bitcast i32 %58 to float\l  %60 = tail call i1 @llvm.amdgcn.class.f32(float %53, i32 608)\l  %61 = select i1 %51, float 0x3EF0000000000000, float 1.000000e+00\l  %62 = fneg float %59\l  %63 = tail call float @llvm.fma.f32(float %62, float %54, float %53)\l  %64 = fcmp ogt float %63, 0.000000e+00\l  %65 = fneg float %57\l  %66 = tail call float @llvm.fma.f32(float %65, float %54, float %53)\l  %67 = fcmp ole float %66, 0.000000e+00\l  %68 = select i1 %67, float %57, float %54\l  %69 = select i1 %64, float %59, float %68\l  %70 = fmul float %61, %69\l  %71 = select i1 %60, float %53, float %70\l  %72 = fdiv contract float %45, %71\l  %73 = fsub contract float %30, %72\l  br label %74\l}"];
	Node0x5e2f460 -> Node0x5e2e620;
	Node0x5e2e620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = phi float [ %73, %43 ], [ %30, %29 ]\l  %76 = add nsw i32 %31, 1\l  %77 = icmp slt i32 %76, %5\l  br i1 %77, label %29, label %78, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5e2e620:s0 -> Node0x5e2e450;
	Node0x5e2e620:s1 -> Node0x5e2e4e0;
	Node0x5e2e4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%78:\l78:                                               \l  %79 = phi float [ undef, %20 ], [ %75, %74 ]\l  %80 = getelementptr inbounds float, float addrspace(1)* %4, i64 %21\l  store float %79, float addrspace(1)* %80, align 4, !tbaa !7\l  br label %81\l}"];
	Node0x5e2e4e0 -> Node0x5e2d090;
	Node0x5e2d090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%81:\l81:                                               \l  ret void\l}"];
}
