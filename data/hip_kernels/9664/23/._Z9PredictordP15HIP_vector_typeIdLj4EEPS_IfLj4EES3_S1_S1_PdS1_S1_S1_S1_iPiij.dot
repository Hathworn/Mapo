digraph "CFG for '_Z9PredictordP15HIP_vector_typeIdLj4EEPS_IfLj4EES3_S1_S1_PdS1_S1_S1_S1_iPiij' function" {
	label="CFG for '_Z9PredictordP15HIP_vector_typeIdLj4EEPS_IfLj4EES3_S1_S1_PdS1_S1_S1_S1_iPiij' function";

	Node0x4eeda90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %18 = getelementptr i8, i8 addrspace(4)* %17, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %16, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %24 = add i32 %23, %11\l  %25 = add i32 %24, %22\l  %26 = add nsw i32 %13, %11\l  %27 = icmp slt i32 %25, %26\l  br i1 %27, label %37, label %28\l|{<s0>T|<s1>F}}"];
	Node0x4eeda90:s0 -> Node0x4ef0760;
	Node0x4eeda90:s1 -> Node0x4ef07f0;
	Node0x4ef07f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%28:\l28:                                               \l  %29 = sub nsw i32 %25, %26\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %12, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %33 = icmp slt i32 %32, %11\l  %34 = icmp slt i32 %32, %26\l  %35 = select i1 %34, i32 -1, i32 %32\l  %36 = select i1 %33, i32 %32, i32 %35\l  br label %37\l}"];
	Node0x4ef07f0 -> Node0x4ef0760;
	Node0x4ef0760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi i32 [ %25, %15 ], [ %36, %28 ]\l  %39 = icmp slt i32 %38, 0\l  br i1 %39, label %176, label %40\l|{<s0>T|<s1>F}}"];
	Node0x4ef0760:s0 -> Node0x4ef1840;
	Node0x4ef0760:s1 -> Node0x4ef1890;
	Node0x4ef1890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e97a5f70",label="{%40:\l40:                                               \l  %41 = zext i32 %38 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %6, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %44 = fsub contract double %0, %43\l  %45 = fmul contract double %44, %44\l  %46 = fmul contract double %44, %45\l  %47 = fmul contract double %45, %45\l  %48 = fmul contract double %44, %47\l  %49 = fmul contract double %45, 5.000000e-01\l  %50 = fmul contract double %46, 0x3FC5555555555555\l  %51 = fmul contract double %47, 0x3FA5555555555555\l  %52 = fmul contract double %48, 0x3F81111111111111\l  %53 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %41, i32 0, i32 0, i32 0, i64 0\l  %54 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %41, i32 0, i32 0, i32 0, i64 1\l  %55 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %41, i32 0, i32 0, i32 0, i64 2\l  %56 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %2, i64 %41, i32 0, i32 0, i32 0, i64\l... 0\l  %57 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %2, i64 %41, i32 0, i32 0, i32 0, i64\l... 1\l  %58 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %2, i64 %41, i32 0, i32 0, i32 0, i64\l... 2\l  %59 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %41, i32 0, i32 0, i32 0, i64 0\l  %60 = load double, double addrspace(1)* %59, align 32, !tbaa !13,\l... !amdgpu.noclobber !5\l  %61 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %41, i32 0, i32 0, i32 0, i64 1\l  %62 = load double, double addrspace(1)* %61, align 8, !tbaa !13,\l... !amdgpu.noclobber !5\l  %63 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %41, i32 0, i32 0, i32 0, i64 2\l  %64 = load double, double addrspace(1)* %63, align 16, !tbaa !13,\l... !amdgpu.noclobber !5\l  %65 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %5, i64 %41, i32 0, i32 0, i32 0, i64 0\l  %66 = load double, double addrspace(1)* %65, align 32, !tbaa !13,\l... !amdgpu.noclobber !5\l  %67 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %5, i64 %41, i32 0, i32 0, i32 0, i64 1\l  %68 = load double, double addrspace(1)* %67, align 8, !tbaa !13,\l... !amdgpu.noclobber !5\l  %69 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %5, i64 %41, i32 0, i32 0, i32 0, i64 2\l  %70 = load double, double addrspace(1)* %69, align 16, !tbaa !13,\l... !amdgpu.noclobber !5\l  %71 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %7, i64 %41, i32 0, i32 0, i32 0, i64 0\l  %72 = load double, double addrspace(1)* %71, align 32, !tbaa !13,\l... !amdgpu.noclobber !5\l  %73 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %7, i64 %41, i32 0, i32 0, i32 0, i64 1\l  %74 = load double, double addrspace(1)* %73, align 8, !tbaa !13,\l... !amdgpu.noclobber !5\l  %75 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %7, i64 %41, i32 0, i32 0, i32 0, i64 2\l  %76 = load double, double addrspace(1)* %75, align 16, !tbaa !13,\l... !amdgpu.noclobber !5\l  %77 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %8, i64 %41, i32 0, i32 0, i32 0, i64 0\l  %78 = load double, double addrspace(1)* %77, align 32, !tbaa !13,\l... !amdgpu.noclobber !5\l  %79 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %8, i64 %41, i32 0, i32 0, i32 0, i64 1\l  %80 = load double, double addrspace(1)* %79, align 8, !tbaa !13,\l... !amdgpu.noclobber !5\l  %81 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %8, i64 %41, i32 0, i32 0, i32 0, i64 2\l  %82 = load double, double addrspace(1)* %81, align 16, !tbaa !13,\l... !amdgpu.noclobber !5\l  %83 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %9, i64 %41, i32 0, i32 0, i32 0, i64 0\l  %84 = load double, double addrspace(1)* %83, align 32, !tbaa !13,\l... !amdgpu.noclobber !5\l  %85 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %9, i64 %41, i32 0, i32 0, i32 0, i64 1\l  %86 = load double, double addrspace(1)* %85, align 8, !tbaa !13,\l... !amdgpu.noclobber !5\l  %87 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %9, i64 %41, i32 0, i32 0, i32 0, i64 2\l  %88 = load double, double addrspace(1)* %87, align 16, !tbaa !13,\l... !amdgpu.noclobber !5\l  %89 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %41, i32 0, i32 0, i32 0, i64 0\l  %90 = load double, double addrspace(1)* %89, align 32, !tbaa !13,\l... !amdgpu.noclobber !5\l  %91 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %41, i32 0, i32 0, i32 0, i64 1\l  %92 = load double, double addrspace(1)* %91, align 8, !tbaa !13,\l... !amdgpu.noclobber !5\l  %93 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %41, i32 0, i32 0, i32 0, i64 2\l  %94 = load double, double addrspace(1)* %93, align 16, !tbaa !13,\l... !amdgpu.noclobber !5\l  %95 = fmul contract double %44, %66\l  %96 = fadd contract double %60, %95\l  %97 = fmul contract double %49, %72\l  %98 = fadd contract double %96, %97\l  %99 = fmul contract double %50, %78\l  %100 = fadd contract double %98, %99\l  %101 = fmul contract double %51, %84\l  %102 = fadd contract double %100, %101\l  %103 = fmul contract double %52, %90\l  %104 = fadd contract double %102, %103\l  %105 = fmul contract double %44, %68\l  %106 = fadd contract double %62, %105\l  %107 = fmul contract double %49, %74\l  %108 = fadd contract double %106, %107\l  %109 = fmul contract double %50, %80\l  %110 = fadd contract double %108, %109\l  %111 = fmul contract double %51, %86\l  %112 = fadd contract double %110, %111\l  %113 = fmul contract double %52, %92\l  %114 = fadd contract double %112, %113\l  %115 = fmul contract double %44, %70\l  %116 = fadd contract double %64, %115\l  %117 = fmul contract double %49, %76\l  %118 = fadd contract double %116, %117\l  %119 = fmul contract double %50, %82\l  %120 = fadd contract double %118, %119\l  %121 = fmul contract double %51, %88\l  %122 = fadd contract double %120, %121\l  %123 = fmul contract double %52, %94\l  %124 = fadd contract double %122, %123\l  store double %104, double addrspace(1)* %53, align 32, !tbaa !13\l  store double %114, double addrspace(1)* %54, align 8, !tbaa !13\l  store double %124, double addrspace(1)* %55, align 16, !tbaa !13\l  %125 = fmul contract double %44, %72\l  %126 = fadd contract double %66, %125\l  %127 = fmul contract double %49, %78\l  %128 = fadd contract double %126, %127\l  %129 = fmul contract double %50, %84\l  %130 = fadd contract double %128, %129\l  %131 = fmul contract double %51, %90\l  %132 = fadd contract double %130, %131\l  %133 = fptrunc double %132 to float\l  %134 = fmul contract double %44, %74\l  %135 = fadd contract double %68, %134\l  %136 = fmul contract double %49, %80\l  %137 = fadd contract double %135, %136\l  %138 = fmul contract double %50, %86\l  %139 = fadd contract double %137, %138\l  %140 = fmul contract double %51, %92\l  %141 = fadd contract double %139, %140\l  %142 = fptrunc double %141 to float\l  %143 = fmul contract double %44, %76\l  %144 = fadd contract double %70, %143\l  %145 = fmul contract double %49, %82\l  %146 = fadd contract double %144, %145\l  %147 = fmul contract double %50, %88\l  %148 = fadd contract double %146, %147\l  %149 = fmul contract double %51, %94\l  %150 = fadd contract double %148, %149\l  %151 = fptrunc double %150 to float\l  store float %133, float addrspace(1)* %56, align 16, !tbaa !13\l  store float %142, float addrspace(1)* %57, align 4, !tbaa !13\l  store float %151, float addrspace(1)* %58, align 8, !tbaa !13\l  %152 = fmul contract double %44, %78\l  %153 = fadd contract double %72, %152\l  %154 = fmul contract double %49, %84\l  %155 = fadd contract double %153, %154\l  %156 = fmul contract double %50, %90\l  %157 = fadd contract double %155, %156\l  %158 = fptrunc double %157 to float\l  %159 = fmul contract double %44, %80\l  %160 = fadd contract double %74, %159\l  %161 = fmul contract double %49, %86\l  %162 = fadd contract double %160, %161\l  %163 = fmul contract double %50, %92\l  %164 = fadd contract double %162, %163\l  %165 = fptrunc double %164 to float\l  %166 = fmul contract double %44, %82\l  %167 = fadd contract double %76, %166\l  %168 = fmul contract double %49, %88\l  %169 = fadd contract double %167, %168\l  %170 = fmul contract double %50, %94\l  %171 = fadd contract double %169, %170\l  %172 = fptrunc double %171 to float\l  %173 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %3, i64 %41, i32 0, i32 0, i32 0, i64\l... 0\l  store float %158, float addrspace(1)* %173, align 16, !tbaa !13\l  %174 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %3, i64 %41, i32 0, i32 0, i32 0, i64\l... 1\l  store float %165, float addrspace(1)* %174, align 4, !tbaa !13\l  %175 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %3, i64 %41, i32 0, i32 0, i32 0, i64\l... 2\l  store float %172, float addrspace(1)* %175, align 8, !tbaa !13\l  br label %176\l}"];
	Node0x4ef1890 -> Node0x4ef1840;
	Node0x4ef1840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%176:\l176:                                              \l  ret void\l}"];
}
