digraph "CFG for '_Z11sum_partialP15HIP_vector_typeIdLj4EES1_j' function" {
	label="CFG for '_Z11sum_partialP15HIP_vector_typeIdLj4EES1_j' function";

	Node0x4a51900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp ult i32 %12, %2\l  br i1 %13, label %14, label %35\l|{<s0>T|<s1>F}}"];
	Node0x4a51900:s0 -> Node0x4a537d0;
	Node0x4a51900:s1 -> Node0x4a53860;
	Node0x4a537d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%14:\l14:                                               \l  %15 = zext i32 %12 to i64\l  %16 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %15, i32 0, i32 0, i32 0, i64 0\l  %17 = load double, double addrspace(1)* %16, align 32, !amdgpu.noclobber !5\l  %18 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %15, i32 0, i32 0, i32 0, i64 1\l  %19 = load double, double addrspace(1)* %18, align 8, !amdgpu.noclobber !5\l  %20 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %15, i32 0, i32 0, i32 0, i64 2\l  %21 = load double, double addrspace(1)* %20, align 16, !amdgpu.noclobber !5\l  %22 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %15\l  %23 = getelementptr inbounds [0 x %struct.HIP_vector_type], [0 x\l... %struct.HIP_vector_type] addrspace(3)* @shaccelerations, i32 0, i32 %11\l  %24 = bitcast %struct.HIP_vector_type addrspace(3)* %23 to i8 addrspace(3)*\l  %25 = bitcast %struct.HIP_vector_type addrspace(1)* %22 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p3i8.p1i8.i64(i8 addrspace(3)* noundef align 32\l... dereferenceable(32) %24, i8 addrspace(1)* noundef align 32\l... dereferenceable(32) %25, i64 32, i1 false)\l  %26 = getelementptr inbounds [0 x %struct.HIP_vector_type], [0 x\l... %struct.HIP_vector_type] addrspace(3)* @shaccelerations, i32 0, i32 %11, i32\l... 0, i32 0, i32 0, i32 0\l  %27 = load double, double addrspace(3)* %26, align 32, !tbaa !7\l  %28 = fadd contract double %17, %27\l  %29 = getelementptr inbounds [0 x %struct.HIP_vector_type], [0 x\l... %struct.HIP_vector_type] addrspace(3)* @shaccelerations, i32 0, i32 %11, i32\l... 0, i32 0, i32 0, i32 1\l  %30 = load double, double addrspace(3)* %29, align 8, !tbaa !7\l  %31 = fadd contract double %19, %30\l  %32 = getelementptr inbounds [0 x %struct.HIP_vector_type], [0 x\l... %struct.HIP_vector_type] addrspace(3)* @shaccelerations, i32 0, i32 %11, i32\l... 0, i32 0, i32 0, i32 2\l  %33 = load double, double addrspace(3)* %32, align 16, !tbaa !7\l  %34 = fadd contract double %21, %33\l  store double %28, double addrspace(1)* %16, align 32\l  store double %31, double addrspace(1)* %18, align 8\l  store double %34, double addrspace(1)* %20, align 16\l  br label %35\l}"];
	Node0x4a537d0 -> Node0x4a53860;
	Node0x4a53860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  ret void\l}"];
}
