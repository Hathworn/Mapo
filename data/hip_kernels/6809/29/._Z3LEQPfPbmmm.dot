digraph "CFG for '_Z3LEQPfPbmmm' function" {
	label="CFG for '_Z3LEQPfPbmmm' function";

	Node0x51ed630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = sext i32 %17 to i64\l  %19 = icmp ult i64 %18, %4\l  br i1 %19, label %20, label %32\l|{<s0>T|<s1>F}}"];
	Node0x51ed630:s0 -> Node0x51ef910;
	Node0x51ed630:s1 -> Node0x51ef9a0;
	Node0x51ef910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%20:\l20:                                               \l  %21 = add i64 %2, -1\l  %22 = mul i64 %21, %4\l  %23 = add i64 %2, -2\l  %24 = mul i64 %23, %4\l  %25 = mul i64 %4, %3\l  %26 = udiv i32 %14, %11\l  %27 = mul i32 %26, %11\l  %28 = icmp ugt i32 %14, %27\l  %29 = zext i1 %28 to i32\l  %30 = add i32 %26, %29\l  %31 = mul i32 %30, %11\l  br label %33\l}"];
	Node0x51ef910 -> Node0x51f0120;
	Node0x51ef9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%32:\l32:                                               \l  ret void\l}"];
	Node0x51f0120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i64 [ %18, %20 ], [ %47, %33 ]\l  %35 = trunc i64 %34 to i32\l  %36 = add i64 %34, %22\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %39 = add i64 %34, %24\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %42 = fcmp contract ole float %38, %41\l  %43 = add i64 %34, %25\l  %44 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %43\l  %45 = zext i1 %42 to i8\l  store i8 %45, i8 addrspace(1)* %44, align 1, !tbaa !20\l  %46 = add i32 %31, %35\l  %47 = sext i32 %46 to i64\l  %48 = icmp ult i64 %47, %4\l  br i1 %48, label %33, label %32, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x51f0120:s0 -> Node0x51f0120;
	Node0x51f0120:s1 -> Node0x51ef9a0;
}
