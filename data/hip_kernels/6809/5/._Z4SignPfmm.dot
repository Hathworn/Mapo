digraph "CFG for '_Z4SignPfmm' function" {
	label="CFG for '_Z4SignPfmm' function";

	Node0x45ad430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = sext i32 %15 to i64\l  %17 = icmp ult i64 %16, %2\l  br i1 %17, label %18, label %27\l|{<s0>T|<s1>F}}"];
	Node0x45ad430:s0 -> Node0x45af720;
	Node0x45ad430:s1 -> Node0x45af7b0;
	Node0x45af720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  %19 = add i64 %1, -1\l  %20 = mul i64 %19, %2\l  %21 = udiv i32 %12, %9\l  %22 = mul i32 %21, %9\l  %23 = icmp ugt i32 %12, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %9\l  br label %28\l}"];
	Node0x45af720 -> Node0x45afd50;
	Node0x45af7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%27:\l27:                                               \l  ret void\l}"];
	Node0x45afd50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i64 [ %16, %18 ], [ %39, %28 ]\l  %30 = trunc i64 %29 to i32\l  %31 = add i64 %29, %20\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !16\l  %34 = fcmp contract ogt float %33, 0.000000e+00\l  %35 = fcmp contract oeq float %33, 0.000000e+00\l  %36 = select i1 %35, float 0.000000e+00, float -1.000000e+00\l  %37 = select i1 %34, float 1.000000e+00, float %36\l  store float %37, float addrspace(1)* %32, align 4, !tbaa !16\l  %38 = add i32 %26, %30\l  %39 = sext i32 %38 to i64\l  %40 = icmp ult i64 %39, %2\l  br i1 %40, label %28, label %27, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x45afd50:s0 -> Node0x45afd50;
	Node0x45afd50:s1 -> Node0x45af7b0;
}
