digraph "CFG for '_Z5FloatPfPbmmm' function" {
	label="CFG for '_Z5FloatPfPbmmm' function";

	Node0x5cd0560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = sext i32 %17 to i64\l  %19 = icmp ult i64 %18, %4\l  br i1 %19, label %20, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5cd0560:s0 -> Node0x5cd2840;
	Node0x5cd0560:s1 -> Node0x5cd28d0;
	Node0x5cd2840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%20:\l20:                                               \l  %21 = add i64 %3, -1\l  %22 = mul i64 %21, %4\l  %23 = mul i64 %4, %2\l  %24 = udiv i32 %14, %11\l  %25 = mul i32 %24, %11\l  %26 = icmp ugt i32 %14, %25\l  %27 = zext i1 %26 to i32\l  %28 = add i32 %24, %27\l  %29 = mul i32 %28, %11\l  br label %31\l}"];
	Node0x5cd2840 -> Node0x5cd2f00;
	Node0x5cd28d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%30:\l30:                                               \l  ret void\l}"];
	Node0x5cd2f00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = phi i64 [ %18, %20 ], [ %42, %31 ]\l  %33 = trunc i64 %32 to i32\l  %34 = add i64 %32, %22\l  %35 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %34\l  %36 = load i8, i8 addrspace(1)* %35, align 1, !tbaa !16, !range !20,\l... !amdgpu.noclobber !5\l  %37 = icmp ne i8 %36, 0\l  %38 = uitofp i1 %37 to float\l  %39 = add i64 %32, %23\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  store float %38, float addrspace(1)* %40, align 4, !tbaa !21\l  %41 = add i32 %29, %33\l  %42 = sext i32 %41 to i64\l  %43 = icmp ult i64 %42, %4\l  br i1 %43, label %31, label %30, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5cd2f00:s0 -> Node0x5cd2f00;
	Node0x5cd2f00:s1 -> Node0x5cd28d0;
}
