digraph "CFG for '_Z15matrixMultiply2PfS_i' function" {
	label="CFG for '_Z15matrixMultiply2PfS_i' function";

	Node0x453c900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = shl i32 %4, 5\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = add i32 %5, %6\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = shl i32 %8, 5\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %11 = add i32 %9, %10\l  %12 = icmp slt i32 %7, %2\l  %13 = icmp slt i32 %11, %2\l  %14 = select i1 %12, i1 %13, i1 false\l  br i1 %14, label %15, label %153\l|{<s0>T|<s1>F}}"];
	Node0x453c900:s0 -> Node0x453ed80;
	Node0x453c900:s1 -> Node0x453ee10;
	Node0x453ed80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%15:\l15:                                               \l  %16 = icmp sgt i32 %2, 0\l  br i1 %16, label %17, label %45\l|{<s0>T|<s1>F}}"];
	Node0x453ed80:s0 -> Node0x453e200;
	Node0x453ed80:s1 -> Node0x453f120;
	Node0x453e200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%17:\l17:                                               \l  %18 = and i32 %2, 7\l  %19 = icmp ult i32 %2, 8\l  br i1 %19, label %22, label %20\l|{<s0>T|<s1>F}}"];
	Node0x453e200:s0 -> Node0x453f3a0;
	Node0x453e200:s1 -> Node0x453f3f0;
	Node0x453f3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%20:\l20:                                               \l  %21 = and i32 %2, -8\l  br label %51\l}"];
	Node0x453f3f0 -> Node0x453f5f0;
	Node0x453f3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%22:\l22:                                               \l  %23 = phi float [ undef, %17 ], [ %149, %51 ]\l  %24 = phi i32 [ 0, %17 ], [ %150, %51 ]\l  %25 = phi float [ 0.000000e+00, %17 ], [ %149, %51 ]\l  %26 = icmp eq i32 %18, 0\l  br i1 %26, label %45, label %27\l|{<s0>T|<s1>F}}"];
	Node0x453f3a0:s0 -> Node0x453f120;
	Node0x453f3a0:s1 -> Node0x4540860;
	Node0x4540860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %42, %27 ], [ %24, %22 ]\l  %29 = phi float [ %41, %27 ], [ %25, %22 ]\l  %30 = phi i32 [ %43, %27 ], [ 0, %22 ]\l  %31 = mul nsw i32 %28, %2\l  %32 = add nsw i32 %31, %11\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %36 = add nsw i32 %31, %7\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %40 = fmul contract float %35, %39\l  %41 = fadd contract float %29, %40\l  %42 = add nuw nsw i32 %28, 1\l  %43 = add i32 %30, 1\l  %44 = icmp eq i32 %43, %18\l  br i1 %44, label %45, label %27, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4540860:s0 -> Node0x453f120;
	Node0x4540860:s1 -> Node0x4540860;
	Node0x453f120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%45:\l45:                                               \l  %46 = phi float [ 0.000000e+00, %15 ], [ %23, %22 ], [ %41, %27 ]\l  %47 = mul nsw i32 %11, %2\l  %48 = add nsw i32 %47, %7\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  store float %46, float addrspace(1)* %50, align 4, !tbaa !5\l  br label %153\l}"];
	Node0x453f120 -> Node0x453ee10;
	Node0x453f5f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%51:\l51:                                               \l  %52 = phi i32 [ 0, %20 ], [ %150, %51 ]\l  %53 = phi float [ 0.000000e+00, %20 ], [ %149, %51 ]\l  %54 = phi i32 [ 0, %20 ], [ %151, %51 ]\l  %55 = mul nsw i32 %52, %2\l  %56 = add nsw i32 %55, %11\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %60 = add nsw i32 %55, %7\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %64 = fmul contract float %59, %63\l  %65 = fadd contract float %53, %64\l  %66 = or i32 %52, 1\l  %67 = mul nsw i32 %66, %2\l  %68 = add nsw i32 %67, %11\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %0, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %72 = add nsw i32 %67, %7\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %76 = fmul contract float %71, %75\l  %77 = fadd contract float %65, %76\l  %78 = or i32 %52, 2\l  %79 = mul nsw i32 %78, %2\l  %80 = add nsw i32 %79, %11\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %84 = add nsw i32 %79, %7\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %88 = fmul contract float %83, %87\l  %89 = fadd contract float %77, %88\l  %90 = or i32 %52, 3\l  %91 = mul nsw i32 %90, %2\l  %92 = add nsw i32 %91, %11\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %0, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %96 = add nsw i32 %91, %7\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %100 = fmul contract float %95, %99\l  %101 = fadd contract float %89, %100\l  %102 = or i32 %52, 4\l  %103 = mul nsw i32 %102, %2\l  %104 = add nsw i32 %103, %11\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %0, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %108 = add nsw i32 %103, %7\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %0, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %112 = fmul contract float %107, %111\l  %113 = fadd contract float %101, %112\l  %114 = or i32 %52, 5\l  %115 = mul nsw i32 %114, %2\l  %116 = add nsw i32 %115, %11\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %0, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %120 = add nsw i32 %115, %7\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %0, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %124 = fmul contract float %119, %123\l  %125 = fadd contract float %113, %124\l  %126 = or i32 %52, 6\l  %127 = mul nsw i32 %126, %2\l  %128 = add nsw i32 %127, %11\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %0, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %132 = add nsw i32 %127, %7\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %0, i64 %133\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %136 = fmul contract float %131, %135\l  %137 = fadd contract float %125, %136\l  %138 = or i32 %52, 7\l  %139 = mul nsw i32 %138, %2\l  %140 = add nsw i32 %139, %11\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %0, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %144 = add nsw i32 %139, %7\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %0, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %148 = fmul contract float %143, %147\l  %149 = fadd contract float %137, %148\l  %150 = add nuw nsw i32 %52, 8\l  %151 = add i32 %54, 8\l  %152 = icmp eq i32 %151, %21\l  br i1 %152, label %22, label %51, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x453f5f0:s0 -> Node0x453f3a0;
	Node0x453f5f0:s1 -> Node0x453f5f0;
	Node0x453ee10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%153:\l153:                                              \l  ret void\l}"];
}
