digraph "CFG for '_Z15MatrixMulDevicePfS_S_Pi' function" {
	label="CFG for '_Z15MatrixMulDevicePfS_S_Pi' function";

	Node0x5d70ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%4:\l  %5 = load i32, i32 addrspace(1)* %3, align 4, !tbaa !4, !amdgpu.noclobber !8\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %8 = bitcast i8 addrspace(4)* %7 to i32 addrspace(4)*\l  %9 = load i32, i32 addrspace(4)* %8, align 4, !tbaa !9\l  %10 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !18, !invariant.load\l... !8\l  %13 = zext i16 %12 to i32\l  %14 = udiv i32 %9, %13\l  %15 = mul i32 %14, %13\l  %16 = icmp ugt i32 %9, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = udiv i32 %5, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = mul i32 %19, %20\l  %22 = add i32 %19, -1\l  %23 = add i32 %22, %21\l  %24 = icmp ult i32 %21, %23\l  br i1 %24, label %25, label %186\l|{<s0>T|<s1>F}}"];
	Node0x5d70ed0:s0 -> Node0x5d739e0;
	Node0x5d70ed0:s1 -> Node0x5d73a70;
	Node0x5d739e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%25:\l25:                                               \l  %26 = icmp sgt i32 %5, 0\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %28 = and i32 %5, 7\l  %29 = icmp ult i32 %5, 8\l  %30 = and i32 %5, -8\l  %31 = icmp eq i32 %28, 0\l  br label %32\l}"];
	Node0x5d739e0 -> Node0x5d74110;
	Node0x5d74110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%32:\l32:                                               \l  %33 = phi i32 [ %21, %25 ], [ %184, %178 ]\l  %34 = mul nsw i32 %33, %5\l  br i1 %26, label %35, label %178\l|{<s0>T|<s1>F}}"];
	Node0x5d74110:s0 -> Node0x5d74510;
	Node0x5d74110:s1 -> Node0x5d73410;
	Node0x5d74510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%35:\l35:                                               \l  br i1 %29, label %154, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5d74510:s0 -> Node0x5d74650;
	Node0x5d74510:s1 -> Node0x5d746a0;
	Node0x5d746a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%36:\l36:                                               \l  %37 = phi i32 [ %151, %36 ], [ 0, %35 ]\l  %38 = phi i32 [ %150, %36 ], [ 0, %35 ]\l  %39 = phi i32 [ %152, %36 ], [ 0, %35 ]\l  %40 = add nsw i32 %37, %34\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !19\l  %44 = mul nsw i32 %37, %5\l  %45 = add i32 %44, %27\l  %46 = zext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !19\l  %49 = fmul contract float %43, %48\l  %50 = sitofp i32 %38 to float\l  %51 = fadd contract float %49, %50\l  %52 = fptosi float %51 to i32\l  %53 = or i32 %37, 1\l  %54 = add nsw i32 %53, %34\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !19\l  %58 = mul nsw i32 %53, %5\l  %59 = add i32 %58, %27\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !19\l  %63 = fmul contract float %57, %62\l  %64 = sitofp i32 %52 to float\l  %65 = fadd contract float %63, %64\l  %66 = fptosi float %65 to i32\l  %67 = or i32 %37, 2\l  %68 = add nsw i32 %67, %34\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %0, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !19\l  %72 = mul nsw i32 %67, %5\l  %73 = add i32 %72, %27\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !19\l  %77 = fmul contract float %71, %76\l  %78 = sitofp i32 %66 to float\l  %79 = fadd contract float %77, %78\l  %80 = fptosi float %79 to i32\l  %81 = or i32 %37, 3\l  %82 = add nsw i32 %81, %34\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !19\l  %86 = mul nsw i32 %81, %5\l  %87 = add i32 %86, %27\l  %88 = zext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %1, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !19\l  %91 = fmul contract float %85, %90\l  %92 = sitofp i32 %80 to float\l  %93 = fadd contract float %91, %92\l  %94 = fptosi float %93 to i32\l  %95 = or i32 %37, 4\l  %96 = add nsw i32 %95, %34\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !19\l  %100 = mul nsw i32 %95, %5\l  %101 = add i32 %100, %27\l  %102 = zext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %1, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !19\l  %105 = fmul contract float %99, %104\l  %106 = sitofp i32 %94 to float\l  %107 = fadd contract float %105, %106\l  %108 = fptosi float %107 to i32\l  %109 = or i32 %37, 5\l  %110 = add nsw i32 %109, %34\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %0, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !19\l  %114 = mul nsw i32 %109, %5\l  %115 = add i32 %114, %27\l  %116 = zext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %1, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !19\l  %119 = fmul contract float %113, %118\l  %120 = sitofp i32 %108 to float\l  %121 = fadd contract float %119, %120\l  %122 = fptosi float %121 to i32\l  %123 = or i32 %37, 6\l  %124 = add nsw i32 %123, %34\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %0, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !19\l  %128 = mul nsw i32 %123, %5\l  %129 = add i32 %128, %27\l  %130 = zext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %1, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !19\l  %133 = fmul contract float %127, %132\l  %134 = sitofp i32 %122 to float\l  %135 = fadd contract float %133, %134\l  %136 = fptosi float %135 to i32\l  %137 = or i32 %37, 7\l  %138 = add nsw i32 %137, %34\l  %139 = sext i32 %138 to i64\l  %140 = getelementptr inbounds float, float addrspace(1)* %0, i64 %139\l  %141 = load float, float addrspace(1)* %140, align 4, !tbaa !19\l  %142 = mul nsw i32 %137, %5\l  %143 = add i32 %142, %27\l  %144 = zext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %1, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !19\l  %147 = fmul contract float %141, %146\l  %148 = sitofp i32 %136 to float\l  %149 = fadd contract float %147, %148\l  %150 = fptosi float %149 to i32\l  %151 = add nuw nsw i32 %37, 8\l  %152 = add i32 %39, 8\l  %153 = icmp eq i32 %152, %30\l  br i1 %153, label %154, label %36, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x5d746a0:s0 -> Node0x5d74650;
	Node0x5d746a0:s1 -> Node0x5d746a0;
	Node0x5d74650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%154:\l154:                                              \l  %155 = phi i32 [ undef, %35 ], [ %150, %36 ]\l  %156 = phi i32 [ 0, %35 ], [ %151, %36 ]\l  %157 = phi i32 [ 0, %35 ], [ %150, %36 ]\l  br i1 %31, label %178, label %158\l|{<s0>T|<s1>F}}"];
	Node0x5d74650:s0 -> Node0x5d73410;
	Node0x5d74650:s1 -> Node0x5d79c50;
	Node0x5d79c50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%158:\l158:                                              \l  %159 = phi i32 [ %175, %158 ], [ %156, %154 ]\l  %160 = phi i32 [ %174, %158 ], [ %157, %154 ]\l  %161 = phi i32 [ %176, %158 ], [ 0, %154 ]\l  %162 = add nsw i32 %159, %34\l  %163 = sext i32 %162 to i64\l  %164 = getelementptr inbounds float, float addrspace(1)* %0, i64 %163\l  %165 = load float, float addrspace(1)* %164, align 4, !tbaa !19\l  %166 = mul nsw i32 %159, %5\l  %167 = add i32 %166, %27\l  %168 = zext i32 %167 to i64\l  %169 = getelementptr inbounds float, float addrspace(1)* %1, i64 %168\l  %170 = load float, float addrspace(1)* %169, align 4, !tbaa !19\l  %171 = fmul contract float %165, %170\l  %172 = sitofp i32 %160 to float\l  %173 = fadd contract float %171, %172\l  %174 = fptosi float %173 to i32\l  %175 = add nuw nsw i32 %159, 1\l  %176 = add i32 %161, 1\l  %177 = icmp eq i32 %176, %28\l  br i1 %177, label %178, label %158, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5d79c50:s0 -> Node0x5d73410;
	Node0x5d79c50:s1 -> Node0x5d79c50;
	Node0x5d73410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%178:\l178:                                              \l  %179 = phi i32 [ 0, %32 ], [ %155, %154 ], [ %174, %158 ]\l  %180 = sitofp i32 %179 to float\l  %181 = add i32 %34, %27\l  %182 = zext i32 %181 to i64\l  %183 = getelementptr inbounds float, float addrspace(1)* %2, i64 %182\l  store float %180, float addrspace(1)* %183, align 4, !tbaa !19\l  %184 = add nuw nsw i32 %33, 1\l  %185 = icmp eq i32 %184, %23\l  br i1 %185, label %186, label %32, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x5d73410:s0 -> Node0x5d73a70;
	Node0x5d73410:s1 -> Node0x5d74110;
	Node0x5d73a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%186:\l186:                                              \l  ret void\l}"];
}
