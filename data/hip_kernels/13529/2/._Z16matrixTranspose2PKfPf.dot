digraph "CFG for '_Z16matrixTranspose2PKfPf' function" {
	label="CFG for '_Z16matrixTranspose2PKfPf' function";

	Node0x58f2660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = shl i32 %3, 4\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = add i32 %4, %5\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = shl i32 %7, 4\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !5\l  %14 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !14, !invariant.load\l... !15\l  %17 = zext i16 %16 to i32\l  %18 = udiv i32 %13, %17\l  %19 = mul i32 %18, %17\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = shl i32 %22, 4\l  %24 = add i32 %9, %8\l  %25 = mul nsw i32 %23, %24\l  %26 = add nsw i32 %6, %25\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %30 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ16matrixTranspose2PKfPfE4tile, i32 0, i32 %9, i32 %5\l  store float %29, float addrspace(3)* %30, align 4, !tbaa !16\l  %31 = add nuw nsw i32 %9, 8\l  %32 = add i32 %31, %8\l  %33 = mul nsw i32 %23, %32\l  %34 = add nsw i32 %6, %33\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ16matrixTranspose2PKfPfE4tile, i32 0, i32 %31, i32 %5\l  store float %37, float addrspace(3)* %38, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %39 = add i32 %8, %5\l  %40 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ16matrixTranspose2PKfPfE4tile, i32 0, i32 %5, i32 %9\l  %41 = load float, float addrspace(3)* %40, align 4, !tbaa !16\l  %42 = add i32 %9, %4\l  %43 = mul nsw i32 %23, %42\l  %44 = add nsw i32 %39, %43\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  store float %41, float addrspace(1)* %46, align 4, !tbaa !16\l  %47 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ16matrixTranspose2PKfPfE4tile, i32 0, i32 %5, i32 %31\l  %48 = load float, float addrspace(3)* %47, align 4, !tbaa !16\l  %49 = add i32 %31, %4\l  %50 = mul nsw i32 %23, %49\l  %51 = add nsw i32 %39, %50\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %1, i64 %52\l  store float %48, float addrspace(1)* %53, align 4, !tbaa !16\l  ret void\l}"];
}
