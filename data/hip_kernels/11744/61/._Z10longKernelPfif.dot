digraph "CFG for '_Z10longKernelPfif' function" {
	label="CFG for '_Z10longKernelPfif' function";

	Node0x5633800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%3:\l  %4 = icmp sgt i32 %1, 0\l  br i1 %4, label %5, label %23\l|{<s0>T|<s1>F}}"];
	Node0x5633800:s0 -> Node0x5633ef0;
	Node0x5633800:s1 -> Node0x5633f80;
	Node0x5633ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%5:\l5:                                                \l  %6 = and i32 %1, 7\l  %7 = icmp ult i32 %1, 8\l  br i1 %7, label %10, label %8\l|{<s0>T|<s1>F}}"];
	Node0x5633ef0:s0 -> Node0x5634210;
	Node0x5633ef0:s1 -> Node0x5634260;
	Node0x5634260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%8:\l8:                                                \l  %9 = and i32 %1, -8\l  br label %24\l}"];
	Node0x5634260 -> Node0x56344f0;
	Node0x5634210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%10:\l10:                                               \l  %11 = phi i32 [ 0, %5 ], [ %66, %24 ]\l  %12 = icmp eq i32 %6, 0\l  br i1 %12, label %23, label %13\l|{<s0>T|<s1>F}}"];
	Node0x5634210:s0 -> Node0x5633f80;
	Node0x5634210:s1 -> Node0x56346c0;
	Node0x56346c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%13:\l13:                                               \l  %14 = phi i32 [ %20, %13 ], [ %11, %10 ]\l  %15 = phi i32 [ %21, %13 ], [ 0, %10 ]\l  %16 = zext i32 %14 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %0, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !4\l  %19 = fadd contract float %18, %2\l  store float %19, float addrspace(1)* %17, align 4, !tbaa !4\l  %20 = add nuw nsw i32 %14, 1\l  %21 = add i32 %15, 1\l  %22 = icmp eq i32 %21, %6\l  br i1 %22, label %23, label %13, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x56346c0:s0 -> Node0x5633f80;
	Node0x56346c0:s1 -> Node0x56346c0;
	Node0x5633f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%23:\l23:                                               \l  ret void\l}"];
	Node0x56344f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%24:\l24:                                               \l  %25 = phi i32 [ 0, %8 ], [ %66, %24 ]\l  %26 = phi i32 [ 0, %8 ], [ %67, %24 ]\l  %27 = zext i32 %25 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !4\l  %30 = fadd contract float %29, %2\l  store float %30, float addrspace(1)* %28, align 4, !tbaa !4\l  %31 = or i32 %25, 1\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !4\l  %35 = fadd contract float %34, %2\l  store float %35, float addrspace(1)* %33, align 4, !tbaa !4\l  %36 = or i32 %25, 2\l  %37 = zext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !4\l  %40 = fadd contract float %39, %2\l  store float %40, float addrspace(1)* %38, align 4, !tbaa !4\l  %41 = or i32 %25, 3\l  %42 = zext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !4\l  %45 = fadd contract float %44, %2\l  store float %45, float addrspace(1)* %43, align 4, !tbaa !4\l  %46 = or i32 %25, 4\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !4\l  %50 = fadd contract float %49, %2\l  store float %50, float addrspace(1)* %48, align 4, !tbaa !4\l  %51 = or i32 %25, 5\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !4\l  %55 = fadd contract float %54, %2\l  store float %55, float addrspace(1)* %53, align 4, !tbaa !4\l  %56 = or i32 %25, 6\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !4\l  %60 = fadd contract float %59, %2\l  store float %60, float addrspace(1)* %58, align 4, !tbaa !4\l  %61 = or i32 %25, 7\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !4\l  %65 = fadd contract float %64, %2\l  store float %65, float addrspace(1)* %63, align 4, !tbaa !4\l  %66 = add nuw nsw i32 %25, 8\l  %67 = add i32 %26, 8\l  %68 = icmp eq i32 %67, %9\l  br i1 %68, label %10, label %24, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x56344f0:s0 -> Node0x5634210;
	Node0x56344f0:s1 -> Node0x56344f0;
}
