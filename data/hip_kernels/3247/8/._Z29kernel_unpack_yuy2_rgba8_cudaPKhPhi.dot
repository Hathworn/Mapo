digraph "CFG for '_Z29kernel_unpack_yuy2_rgba8_cudaPKhPhi' function" {
	label="CFG for '_Z29kernel_unpack_yuy2_rgba8_cudaPKhPhi' function";

	Node0x5161290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !6\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %8\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = udiv i32 %11, %8\l  %17 = mul i32 %16, %8\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %8\l  %22 = icmp slt i32 %15, %2\l  br i1 %22, label %23, label %112\l|{<s0>T|<s1>F}}"];
	Node0x5161290:s0 -> Node0x5163880;
	Node0x5161290:s1 -> Node0x5163910;
	Node0x5163880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i32 [ %110, %23 ], [ %15, %3 ]\l  %25 = shl nsw i32 %24, 2\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %26\l  %28 = load i8, i8 addrspace(1)* %27, align 1, !tbaa !16\l  %29 = add nuw nsw i32 %25, 1\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %30\l  %32 = load i8, i8 addrspace(1)* %31, align 1, !tbaa !16\l  %33 = add nuw nsw i32 %25, 2\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %34\l  %36 = load i8, i8 addrspace(1)* %35, align 1, !tbaa !16\l  %37 = add nuw nsw i32 %25, 3\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %38\l  %40 = load i8, i8 addrspace(1)* %39, align 1, !tbaa !16\l  %41 = zext i8 %28 to i32\l  %42 = zext i8 %32 to i32\l  %43 = add nsw i32 %42, -128\l  %44 = zext i8 %40 to i32\l  %45 = shl nsw i32 %24, 3\l  %46 = mul nuw nsw i32 %41, 298\l  %47 = mul nuw nsw i32 %44, 409\l  %48 = add nsw i32 %47, -52352\l  %49 = add nsw i32 %46, -4640\l  %50 = add nsw i32 %49, %48\l  %51 = ashr i32 %50, 8\l  %52 = tail call i32 @llvm.smax.i32(i32 %51, i32 0)\l  %53 = tail call i32 @llvm.smin.i32(i32 %52, i32 255)\l  %54 = trunc i32 %53 to i8\l  %55 = sext i32 %45 to i64\l  %56 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %55\l  store i8 %54, i8 addrspace(1)* %56, align 1, !tbaa !16\l  %57 = mul nsw i32 %43, -100\l  %58 = sub nsw i32 %57, %48\l  %59 = add nsw i32 %49, %58\l  %60 = ashr i32 %59, 8\l  %61 = tail call i32 @llvm.smax.i32(i32 %60, i32 0)\l  %62 = tail call i32 @llvm.smin.i32(i32 %61, i32 255)\l  %63 = trunc i32 %62 to i8\l  %64 = add nuw nsw i32 %45, 1\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %65\l  store i8 %63, i8 addrspace(1)* %66, align 1, !tbaa !16\l  %67 = mul nsw i32 %43, 516\l  %68 = add nsw i32 %49, %67\l  %69 = ashr i32 %68, 8\l  %70 = tail call i32 @llvm.smax.i32(i32 %69, i32 0)\l  %71 = tail call i32 @llvm.smin.i32(i32 %70, i32 255)\l  %72 = trunc i32 %71 to i8\l  %73 = add nuw nsw i32 %45, 2\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %74\l  store i8 %72, i8 addrspace(1)* %75, align 1, !tbaa !16\l  %76 = add nuw nsw i32 %45, 3\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %77\l  store i8 -1, i8 addrspace(1)* %78, align 1, !tbaa !16\l  %79 = zext i8 %36 to i32\l  %80 = mul nuw nsw i32 %79, 298\l  %81 = add nsw i32 %80, -4640\l  %82 = add nsw i32 %81, %48\l  %83 = ashr i32 %82, 8\l  %84 = tail call i32 @llvm.smax.i32(i32 %83, i32 0)\l  %85 = tail call i32 @llvm.smin.i32(i32 %84, i32 255)\l  %86 = trunc i32 %85 to i8\l  %87 = add nuw nsw i32 %45, 4\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %88\l  store i8 %86, i8 addrspace(1)* %89, align 1, !tbaa !16\l  %90 = add nsw i32 %81, %58\l  %91 = ashr i32 %90, 8\l  %92 = tail call i32 @llvm.smax.i32(i32 %91, i32 0)\l  %93 = tail call i32 @llvm.smin.i32(i32 %92, i32 255)\l  %94 = trunc i32 %93 to i8\l  %95 = add nuw nsw i32 %45, 5\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %96\l  store i8 %94, i8 addrspace(1)* %97, align 1, !tbaa !16\l  %98 = add nsw i32 %67, %80\l  %99 = add nsw i32 %98, -4640\l  %100 = ashr i32 %99, 8\l  %101 = tail call i32 @llvm.smax.i32(i32 %100, i32 0)\l  %102 = tail call i32 @llvm.smin.i32(i32 %101, i32 255)\l  %103 = trunc i32 %102 to i8\l  %104 = add nuw nsw i32 %45, 6\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %105\l  store i8 %103, i8 addrspace(1)* %106, align 1, !tbaa !16\l  %107 = add nuw nsw i32 %45, 7\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %108\l  store i8 -1, i8 addrspace(1)* %109, align 1, !tbaa !16\l  %110 = add nsw i32 %24, %21\l  %111 = icmp slt i32 %110, %2\l  br i1 %111, label %23, label %112, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5163880:s0 -> Node0x5163880;
	Node0x5163880:s1 -> Node0x5163910;
	Node0x5163910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%112:\l112:                                              \l  ret void\l}"];
}
