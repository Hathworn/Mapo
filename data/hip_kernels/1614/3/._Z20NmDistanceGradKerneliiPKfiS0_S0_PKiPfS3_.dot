digraph "CFG for '_Z20NmDistanceGradKerneliiPKfiS0_S0_PKiPfS3_' function" {
	label="CFG for '_Z20NmDistanceGradKerneliiPKfiS0_S0_PKiPfS3_' function";

	Node0x49ec080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = icmp slt i32 %10, %0\l  br i1 %11, label %12, label %36\l|{<s0>T|<s1>F}}"];
	Node0x49ec080:s0 -> Node0x49ece80;
	Node0x49ec080:s1 -> Node0x49ecf10;
	Node0x49ece80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%12:\l12:                                               \l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = getelementptr inbounds i8, i8 addrspace(4)* %15, i64 12\l  %21 = bitcast i8 addrspace(4)* %20 to i32 addrspace(4)*\l  %22 = load i32, i32 addrspace(4)* %21, align 4, !tbaa !7\l  %23 = mul i32 %14, %19\l  %24 = add i32 %23, %13\l  %25 = icmp slt i32 %24, %1\l  %26 = getelementptr inbounds i8, i8 addrspace(4)* %15, i64 16\l  %27 = bitcast i8 addrspace(4)* %26 to i32 addrspace(4)*\l  %28 = getelementptr i8, i8 addrspace(4)* %15, i64 6\l  %29 = bitcast i8 addrspace(4)* %28 to i16 addrspace(4)*\l  %30 = load i16, i16 addrspace(4)* %29, align 2\l  %31 = zext i16 %30 to i32\l  %32 = udiv i32 %22, %19\l  %33 = mul i32 %32, %19\l  %34 = icmp ugt i32 %22, %33\l  %35 = zext i1 %34 to i32\l  br label %37\l}"];
	Node0x49ece80 -> Node0x49ef890;
	Node0x49ecf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%36:\l36:                                               \l  ret void\l}"];
	Node0x49ef890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%37:\l37:                                               \l  %38 = phi i32 [ %10, %12 ], [ %51, %49 ]\l  br i1 %25, label %39, label %49\l|{<s0>T|<s1>F}}"];
	Node0x49ef890:s0 -> Node0x49efb10;
	Node0x49ef890:s1 -> Node0x49efa10;
	Node0x49efb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%39:\l39:                                               \l  %40 = mul nsw i32 %38, %1\l  %41 = mul nsw i32 %38, %3\l  %42 = load i32, i32 addrspace(4)* %27, align 8, !tbaa !16\l  %43 = udiv i32 %42, %31\l  %44 = mul i32 %43, %31\l  %45 = icmp ugt i32 %42, %44\l  %46 = zext i1 %45 to i32\l  %47 = add i32 %43, %46\l  %48 = mul i32 %47, %19\l  br label %53\l}"];
	Node0x49efb10 -> Node0x49f0250;
	Node0x49efa10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%49:\l49:                                               \l  %50 = add i32 %32, %38\l  %51 = add i32 %50, %35\l  %52 = icmp slt i32 %51, %0\l  br i1 %52, label %37, label %36, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x49efa10:s0 -> Node0x49ef890;
	Node0x49efa10:s1 -> Node0x49ecf10;
	Node0x49f0250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi i32 [ %24, %39 ], [ %138, %53 ]\l  %55 = add nsw i32 %54, %40\l  %56 = mul nsw i32 %55, 5\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %2, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !19\l  %60 = add nsw i32 %56, 1\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %2, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !19\l  %64 = add nsw i32 %56, 2\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %2, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !19\l  %68 = add nsw i32 %56, 3\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %2, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !19\l  %72 = add nsw i32 %56, 4\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %2, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !19\l  %76 = sext i32 %55 to i64\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %76\l  %78 = load i32, i32 addrspace(1)* %77, align 4, !tbaa !23\l  %79 = add nsw i32 %78, %41\l  %80 = mul nsw i32 %79, 5\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %4, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !19\l  %84 = add nsw i32 %80, 1\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %4, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !19\l  %88 = add nsw i32 %80, 2\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %4, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !19\l  %92 = add nsw i32 %80, 3\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %4, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !19\l  %96 = add nsw i32 %80, 4\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %4, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !19\l  %100 = getelementptr inbounds float, float addrspace(1)* %5, i64 %76\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !19\l  %102 = fmul contract float %101, 2.000000e+00\l  %103 = getelementptr inbounds float, float addrspace(1)* %7, i64 %57\l  %104 = fsub contract float %59, %83\l  %105 = fmul contract float %104, %102\l  %106 = atomicrmw fadd float addrspace(1)* %103, float %105\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %107 = getelementptr inbounds float, float addrspace(1)* %7, i64 %61\l  %108 = fsub contract float %63, %87\l  %109 = fmul contract float %108, %102\l  %110 = atomicrmw fadd float addrspace(1)* %107, float %109\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %111 = getelementptr inbounds float, float addrspace(1)* %7, i64 %65\l  %112 = fsub contract float %67, %91\l  %113 = fmul contract float %112, %102\l  %114 = atomicrmw fadd float addrspace(1)* %111, float %113\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %115 = getelementptr inbounds float, float addrspace(1)* %7, i64 %69\l  %116 = fsub contract float %71, %95\l  %117 = fmul contract float %116, %102\l  %118 = atomicrmw fadd float addrspace(1)* %115, float %117\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %119 = getelementptr inbounds float, float addrspace(1)* %7, i64 %73\l  %120 = fsub contract float %75, %99\l  %121 = fmul contract float %120, %102\l  %122 = atomicrmw fadd float addrspace(1)* %119, float %121\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %123 = getelementptr inbounds float, float addrspace(1)* %8, i64 %81\l  %124 = fneg contract float %105\l  %125 = atomicrmw fadd float addrspace(1)* %123, float %124\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %126 = getelementptr inbounds float, float addrspace(1)* %8, i64 %85\l  %127 = fneg contract float %109\l  %128 = atomicrmw fadd float addrspace(1)* %126, float %127\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %129 = getelementptr inbounds float, float addrspace(1)* %8, i64 %89\l  %130 = fneg contract float %113\l  %131 = atomicrmw fadd float addrspace(1)* %129, float %130\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %132 = getelementptr inbounds float, float addrspace(1)* %8, i64 %93\l  %133 = fneg contract float %117\l  %134 = atomicrmw fadd float addrspace(1)* %132, float %133\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %135 = getelementptr inbounds float, float addrspace(1)* %8, i64 %97\l  %136 = fneg contract float %121\l  %137 = atomicrmw fadd float addrspace(1)* %135, float %136\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %138 = add i32 %48, %54\l  %139 = icmp slt i32 %138, %1\l  br i1 %139, label %53, label %49, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x49f0250:s0 -> Node0x49f0250;
	Node0x49f0250:s1 -> Node0x49efa10;
}
