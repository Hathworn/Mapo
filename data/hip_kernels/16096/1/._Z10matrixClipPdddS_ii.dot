digraph "CFG for '_Z10matrixClipPdddS_ii' function" {
	label="CFG for '_Z10matrixClipPdddS_ii' function";

	Node0x45e9670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %5\l  %25 = icmp slt i32 %23, %4\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %41\l|{<s0>T|<s1>F}}"];
	Node0x45e9670:s0 -> Node0x45ed0f0;
	Node0x45e9670:s1 -> Node0x45ed180;
	Node0x45ed0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %23, %5\l  %29 = add nsw i32 %28, %15\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds double, double addrspace(1)* %0, i64 %30\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %33 = fcmp contract ogt double %32, %2\l  br i1 %33, label %34, label %36\l|{<s0>T|<s1>F}}"];
	Node0x45ed0f0:s0 -> Node0x45eb720;
	Node0x45ed0f0:s1 -> Node0x45ed960;
	Node0x45eb720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds double, double addrspace(1)* %3, i64 %30\l  store double %2, double addrspace(1)* %35, align 8, !tbaa !7\l  br label %41\l}"];
	Node0x45eb720 -> Node0x45ed180;
	Node0x45ed960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%36:\l36:                                               \l  %37 = fcmp contract olt double %32, %1\l  %38 = getelementptr inbounds double, double addrspace(1)* %3, i64 %30\l  br i1 %37, label %39, label %40\l|{<s0>T|<s1>F}}"];
	Node0x45ed960:s0 -> Node0x45ee380;
	Node0x45ed960:s1 -> Node0x45ee3d0;
	Node0x45ee380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%39:\l39:                                               \l  store double %1, double addrspace(1)* %38, align 8, !tbaa !7\l  br label %41\l}"];
	Node0x45ee380 -> Node0x45ed180;
	Node0x45ee3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%40:\l40:                                               \l  store double %32, double addrspace(1)* %38, align 8, !tbaa !7\l  br label %41\l}"];
	Node0x45ee3d0 -> Node0x45ed180;
	Node0x45ed180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  ret void\l}"];
}
