digraph "CFG for '_Z34computeIntensityDerivatives_KernelP15HIP_vector_typeIfLj2EEPKfjj' function" {
	label="CFG for '_Z34computeIntensityDerivatives_KernelP15HIP_vector_typeIfLj2EEPKfjj' function";

	Node0x4b7be70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp ult i32 %13, %2\l  %23 = icmp ult i32 %21, %3\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %114\l|{<s0>T|<s1>F}}"];
	Node0x4b7be70:s0 -> Node0x4b7f900;
	Node0x4b7be70:s1 -> Node0x4b7f990;
	Node0x4b7f900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%25:\l25:                                               \l  %26 = mul i32 %21, %2\l  %27 = add i32 %26, %13\l  %28 = zext i32 %27 to i64\l  %29 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %28\l  %30 = bitcast %struct.HIP_vector_type addrspace(1)* %29 to i32 addrspace(1)*\l  store i32 -8388608, i32 addrspace(1)* %30, align 8\l  %31 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %28, i32 0, i32 0, i32 0, i64 1\l  %32 = bitcast float addrspace(1)* %31 to i32 addrspace(1)*\l  store i32 -8388608, i32 addrspace(1)* %32, align 4\l  %33 = icmp eq i32 %13, 0\l  br i1 %33, label %114, label %34\l|{<s0>T|<s1>F}}"];
	Node0x4b7f900:s0 -> Node0x4b7f990;
	Node0x4b7f900:s1 -> Node0x4b7e060;
	Node0x4b7e060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%34:\l34:                                               \l  %35 = add i32 %2, -1\l  %36 = icmp ult i32 %13, %35\l  %37 = icmp ne i32 %21, 0\l  %38 = select i1 %36, i1 %37, i1 false\l  %39 = add i32 %3, -1\l  %40 = icmp ult i32 %21, %39\l  %41 = select i1 %38, i1 %40, i1 false\l  br i1 %41, label %42, label %114\l|{<s0>T|<s1>F}}"];
	Node0x4b7e060:s0 -> Node0x4b807b0;
	Node0x4b7e060:s1 -> Node0x4b7f990;
	Node0x4b807b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%42:\l42:                                               \l  %43 = add i32 %21, -1\l  %44 = mul i32 %43, %2\l  %45 = add i32 %13, -1\l  %46 = add i32 %44, %45\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7\l  %50 = fcmp contract oeq float %49, 0xFFF0000000000000\l  br i1 %50, label %114, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4b807b0:s0 -> Node0x4b7f990;
	Node0x4b807b0:s1 -> Node0x4b81880;
	Node0x4b81880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%51:\l51:                                               \l  %52 = add i32 %26, %45\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %56 = fcmp contract oeq float %55, 0xFFF0000000000000\l  br i1 %56, label %114, label %57\l|{<s0>T|<s1>F}}"];
	Node0x4b81880:s0 -> Node0x4b7f990;
	Node0x4b81880:s1 -> Node0x4b82270;
	Node0x4b82270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%57:\l57:                                               \l  %58 = add nuw i32 %21, 1\l  %59 = mul i32 %58, %2\l  %60 = add i32 %59, %45\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7\l  %64 = fcmp contract oeq float %63, 0xFFF0000000000000\l  br i1 %64, label %114, label %65\l|{<s0>T|<s1>F}}"];
	Node0x4b82270:s0 -> Node0x4b7f990;
	Node0x4b82270:s1 -> Node0x4b7fff0;
	Node0x4b7fff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%65:\l65:                                               \l  %66 = add i32 %44, %13\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7\l  %70 = fcmp contract oeq float %69, 0xFFF0000000000000\l  br i1 %70, label %114, label %71\l|{<s0>T|<s1>F}}"];
	Node0x4b7fff0:s0 -> Node0x4b7f990;
	Node0x4b7fff0:s1 -> Node0x4b82d10;
	Node0x4b82d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%71:\l71:                                               \l  %72 = add i32 %59, %13\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7\l  %76 = fcmp contract oeq float %75, 0xFFF0000000000000\l  br i1 %76, label %114, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4b82d10:s0 -> Node0x4b7f990;
	Node0x4b82d10:s1 -> Node0x4b830b0;
	Node0x4b830b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%77:\l77:                                               \l  %78 = add nuw i32 %13, 1\l  %79 = add i32 %44, %78\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  %83 = fcmp contract oeq float %82, 0xFFF0000000000000\l  br i1 %83, label %114, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4b830b0:s0 -> Node0x4b7f990;
	Node0x4b830b0:s1 -> Node0x4b834e0;
	Node0x4b834e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%84:\l84:                                               \l  %85 = add i32 %26, %78\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7\l  %89 = fcmp contract oeq float %88, 0xFFF0000000000000\l  br i1 %89, label %114, label %90\l|{<s0>T|<s1>F}}"];
	Node0x4b834e0:s0 -> Node0x4b7f990;
	Node0x4b834e0:s1 -> Node0x4b83880;
	Node0x4b83880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%90:\l90:                                               \l  %91 = add i32 %59, %78\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %1, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7\l  %95 = fcmp contract oeq float %94, 0xFFF0000000000000\l  br i1 %95, label %114, label %96\l|{<s0>T|<s1>F}}"];
	Node0x4b83880:s0 -> Node0x4b7f990;
	Node0x4b83880:s1 -> Node0x4b83c20;
	Node0x4b83c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%96:\l96:                                               \l  %97 = fsub contract float %82, %49\l  %98 = fmul contract float %55, 2.000000e+00\l  %99 = fsub contract float %97, %98\l  %100 = fmul contract float %88, 2.000000e+00\l  %101 = fadd contract float %99, %100\l  %102 = fsub contract float %101, %63\l  %103 = fadd contract float %102, %94\l  %104 = fmul contract float %103, 1.250000e-01\l  %105 = fmul contract float %69, -2.000000e+00\l  %106 = fsub contract float %105, %49\l  %107 = fsub contract float %106, %82\l  %108 = fadd contract float %63, %107\l  %109 = fmul contract float %75, 2.000000e+00\l  %110 = fadd contract float %109, %108\l  %111 = fadd contract float %110, %94\l  %112 = fmul contract float %111, 1.250000e-01\l  %113 = getelementptr %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(1)* %29, i64 0, i32 0, i32 0, i32 0, i64 0\l  store float %104, float addrspace(1)* %113, align 8\l  store float %112, float addrspace(1)* %31, align 4\l  br label %114\l}"];
	Node0x4b83c20 -> Node0x4b7f990;
	Node0x4b7f990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  ret void\l}"];
}
