digraph "CFG for '_Z11compute_gpuPfS_S_iiiiiiii' function" {
	label="CFG for '_Z11compute_gpuPfS_S_iiiiiiii' function";

	Node0x4980620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%11:\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 2, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %20 = add i32 %18, %19\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %22 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 4, !range !4, !invariant.load !5\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %21, %25\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %28 = add i32 %26, %27\l  %29 = icmp sgt i32 %7, 0\l  br i1 %29, label %30, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4980620:s0 -> Node0x4984ae0;
	Node0x4980620:s1 -> Node0x4984b70;
	Node0x4984ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%30:\l30:                                               \l  %31 = mul nsw i32 %10, %9\l  %32 = mul nsw i32 %6, %5\l  %33 = icmp slt i32 %28, %9\l  %34 = icmp slt i32 %20, %10\l  %35 = select i1 %33, i1 %34, i1 false\l  %36 = mul nsw i32 %28, %10\l  %37 = add i32 %36, %20\l  %38 = icmp sgt i32 %8, 0\l  %39 = and i32 %8, 7\l  %40 = icmp ult i32 %8, 8\l  %41 = and i32 %8, -8\l  %42 = icmp eq i32 %39, 0\l  br label %44\l}"];
	Node0x4984ae0 -> Node0x4985570;
	Node0x4984b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%43:\l43:                                               \l  ret void\l}"];
	Node0x4985570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%44:\l44:                                               \l  %45 = phi i32 [ 0, %30 ], [ %191, %190 ]\l  %46 = phi i32 [ 0, %30 ], [ %49, %190 ]\l  %47 = phi i32 [ 0, %30 ], [ %48, %190 ]\l  %48 = add nsw i32 %47, %31\l  %49 = add nsw i32 %46, %32\l  br i1 %35, label %50, label %190\l|{<s0>T|<s1>F}}"];
	Node0x4985570:s0 -> Node0x4985b10;
	Node0x4985570:s1 -> Node0x49856b0;
	Node0x4985b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%50:\l50:                                               \l  %51 = add i32 %37, %48\l  br i1 %38, label %52, label %190\l|{<s0>T|<s1>F}}"];
	Node0x4985b10:s0 -> Node0x4985ca0;
	Node0x4985b10:s1 -> Node0x49856b0;
	Node0x4985ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%52:\l52:                                               \l  %53 = mul nsw i32 %51, %8\l  %54 = add i32 %49, %20\l  %55 = sext i32 %51 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %2, i64 %55\l  br label %57\l}"];
	Node0x4985ca0 -> Node0x4985fd0;
	Node0x4985fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%57:\l57:                                               \l  %58 = phi i32 [ 0, %52 ], [ %86, %85 ]\l  %59 = add i32 %58, %53\l  %60 = mul i32 %59, %8\l  %61 = add i32 %58, %28\l  %62 = mul i32 %61, %6\l  %63 = load float, float addrspace(1)* %56, align 4, !tbaa !7\l  br i1 %40, label %64, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4985fd0:s0 -> Node0x4986580;
	Node0x4985fd0:s1 -> Node0x4986610;
	Node0x4986580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%64:\l64:                                               \l  %65 = phi float [ %63, %57 ], [ %186, %88 ]\l  %66 = phi i32 [ 0, %57 ], [ %187, %88 ]\l  br i1 %42, label %85, label %67\l|{<s0>T|<s1>F}}"];
	Node0x4986580:s0 -> Node0x4986090;
	Node0x4986580:s1 -> Node0x4986b60;
	Node0x4986b60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi float [ %81, %67 ], [ %65, %64 ]\l  %69 = phi i32 [ %82, %67 ], [ %66, %64 ]\l  %70 = phi i32 [ %83, %67 ], [ 0, %64 ]\l  %71 = add i32 %54, %69\l  %72 = add i32 %71, %62\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7\l  %76 = add nsw i32 %69, %60\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7\l  %80 = fmul contract float %75, %79\l  %81 = fadd contract float %68, %80\l  store float %81, float addrspace(1)* %56, align 4, !tbaa !7\l  %82 = add nuw nsw i32 %69, 1\l  %83 = add i32 %70, 1\l  %84 = icmp eq i32 %83, %39\l  br i1 %84, label %85, label %67, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4986b60:s0 -> Node0x4986090;
	Node0x4986b60:s1 -> Node0x4986b60;
	Node0x4986090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%85:\l85:                                               \l  %86 = add nuw nsw i32 %58, 1\l  %87 = icmp eq i32 %86, %8\l  br i1 %87, label %190, label %57, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4986090:s0 -> Node0x49856b0;
	Node0x4986090:s1 -> Node0x4985fd0;
	Node0x4986610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%88:\l88:                                               \l  %89 = phi float [ %186, %88 ], [ %63, %57 ]\l  %90 = phi i32 [ %187, %88 ], [ 0, %57 ]\l  %91 = phi i32 [ %188, %88 ], [ 0, %57 ]\l  %92 = add i32 %54, %90\l  %93 = add i32 %92, %62\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %0, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7\l  %97 = add nsw i32 %90, %60\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %1, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7\l  %101 = fmul contract float %96, %100\l  %102 = fadd contract float %89, %101\l  store float %102, float addrspace(1)* %56, align 4, !tbaa !7\l  %103 = or i32 %90, 1\l  %104 = add i32 %54, %103\l  %105 = add i32 %104, %62\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %0, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7\l  %109 = add nsw i32 %103, %60\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %1, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !7\l  %113 = fmul contract float %108, %112\l  %114 = fadd contract float %102, %113\l  store float %114, float addrspace(1)* %56, align 4, !tbaa !7\l  %115 = or i32 %90, 2\l  %116 = add i32 %54, %115\l  %117 = add i32 %116, %62\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %0, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !7\l  %121 = add nsw i32 %115, %60\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %1, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !7\l  %125 = fmul contract float %120, %124\l  %126 = fadd contract float %114, %125\l  store float %126, float addrspace(1)* %56, align 4, !tbaa !7\l  %127 = or i32 %90, 3\l  %128 = add i32 %54, %127\l  %129 = add i32 %128, %62\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %0, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !7\l  %133 = add nsw i32 %127, %60\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %1, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !7\l  %137 = fmul contract float %132, %136\l  %138 = fadd contract float %126, %137\l  store float %138, float addrspace(1)* %56, align 4, !tbaa !7\l  %139 = or i32 %90, 4\l  %140 = add i32 %54, %139\l  %141 = add i32 %140, %62\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %0, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !7\l  %145 = add nsw i32 %139, %60\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %1, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !7\l  %149 = fmul contract float %144, %148\l  %150 = fadd contract float %138, %149\l  store float %150, float addrspace(1)* %56, align 4, !tbaa !7\l  %151 = or i32 %90, 5\l  %152 = add i32 %54, %151\l  %153 = add i32 %152, %62\l  %154 = sext i32 %153 to i64\l  %155 = getelementptr inbounds float, float addrspace(1)* %0, i64 %154\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !7\l  %157 = add nsw i32 %151, %60\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %1, i64 %158\l  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !7\l  %161 = fmul contract float %156, %160\l  %162 = fadd contract float %150, %161\l  store float %162, float addrspace(1)* %56, align 4, !tbaa !7\l  %163 = or i32 %90, 6\l  %164 = add i32 %54, %163\l  %165 = add i32 %164, %62\l  %166 = sext i32 %165 to i64\l  %167 = getelementptr inbounds float, float addrspace(1)* %0, i64 %166\l  %168 = load float, float addrspace(1)* %167, align 4, !tbaa !7\l  %169 = add nsw i32 %163, %60\l  %170 = sext i32 %169 to i64\l  %171 = getelementptr inbounds float, float addrspace(1)* %1, i64 %170\l  %172 = load float, float addrspace(1)* %171, align 4, !tbaa !7\l  %173 = fmul contract float %168, %172\l  %174 = fadd contract float %162, %173\l  store float %174, float addrspace(1)* %56, align 4, !tbaa !7\l  %175 = or i32 %90, 7\l  %176 = add i32 %54, %175\l  %177 = add i32 %176, %62\l  %178 = sext i32 %177 to i64\l  %179 = getelementptr inbounds float, float addrspace(1)* %0, i64 %178\l  %180 = load float, float addrspace(1)* %179, align 4, !tbaa !7\l  %181 = add nsw i32 %175, %60\l  %182 = sext i32 %181 to i64\l  %183 = getelementptr inbounds float, float addrspace(1)* %1, i64 %182\l  %184 = load float, float addrspace(1)* %183, align 4, !tbaa !7\l  %185 = fmul contract float %180, %184\l  %186 = fadd contract float %174, %185\l  store float %186, float addrspace(1)* %56, align 4, !tbaa !7\l  %187 = add nuw nsw i32 %90, 8\l  %188 = add i32 %91, 8\l  %189 = icmp eq i32 %188, %41\l  br i1 %189, label %64, label %88, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4986610:s0 -> Node0x4986580;
	Node0x4986610:s1 -> Node0x4986610;
	Node0x49856b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%190:\l190:                                              \l  %191 = add nuw nsw i32 %45, 1\l  %192 = icmp eq i32 %191, %7\l  br i1 %192, label %43, label %44, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x49856b0:s0 -> Node0x4984b70;
	Node0x49856b0:s1 -> Node0x4985570;
}
