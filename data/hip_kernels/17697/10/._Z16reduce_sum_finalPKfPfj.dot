digraph "CFG for '_Z16reduce_sum_finalPKfPfj' function" {
	label="CFG for '_Z16reduce_sum_finalPKfPfj' function";

	Node0x52c3930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%3:\l  store float 0.000000e+00, float addrspace(1)* %1, align 4, !tbaa !4\l  %4 = icmp eq i32 %2, 0\l  br i1 %4, label %25, label %5\l|{<s0>T|<s1>F}}"];
	Node0x52c3930:s0 -> Node0x52c5690;
	Node0x52c3930:s1 -> Node0x52c5720;
	Node0x52c5720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%5:\l5:                                                \l  %6 = and i32 %2, 7\l  %7 = icmp ult i32 %2, 8\l  br i1 %7, label %10, label %8\l|{<s0>T|<s1>F}}"];
	Node0x52c5720:s0 -> Node0x52c59b0;
	Node0x52c5720:s1 -> Node0x52c5a00;
	Node0x52c5a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%8:\l8:                                                \l  %9 = and i32 %2, -8\l  br label %26\l}"];
	Node0x52c5a00 -> Node0x52c5640;
	Node0x52c59b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%10:\l10:                                               \l  %11 = phi float [ 0.000000e+00, %5 ], [ %68, %26 ]\l  %12 = phi i32 [ 0, %5 ], [ %69, %26 ]\l  %13 = icmp eq i32 %6, 0\l  br i1 %13, label %25, label %14\l|{<s0>T|<s1>F}}"];
	Node0x52c59b0:s0 -> Node0x52c5690;
	Node0x52c59b0:s1 -> Node0x52c5f90;
	Node0x52c5f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l14:                                               \l  %15 = phi float [ %21, %14 ], [ %11, %10 ]\l  %16 = phi i32 [ %22, %14 ], [ %12, %10 ]\l  %17 = phi i32 [ %23, %14 ], [ 0, %10 ]\l  %18 = zext i32 %16 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !4\l  %21 = fadd contract float %20, %15\l  store float %21, float addrspace(1)* %1, align 4, !tbaa !4\l  %22 = add nuw nsw i32 %16, 1\l  %23 = add i32 %17, 1\l  %24 = icmp eq i32 %23, %6\l  br i1 %24, label %25, label %14, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x52c5f90:s0 -> Node0x52c5690;
	Node0x52c5f90:s1 -> Node0x52c5f90;
	Node0x52c5690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%25:\l25:                                               \l  ret void\l}"];
	Node0x52c5640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%26:\l26:                                               \l  %27 = phi float [ 0.000000e+00, %8 ], [ %68, %26 ]\l  %28 = phi i32 [ 0, %8 ], [ %69, %26 ]\l  %29 = phi i32 [ 0, %8 ], [ %70, %26 ]\l  %30 = zext i32 %28 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !4\l  %33 = fadd contract float %32, %27\l  store float %33, float addrspace(1)* %1, align 4, !tbaa !4\l  %34 = or i32 %28, 1\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !4\l  %38 = fadd contract float %37, %33\l  store float %38, float addrspace(1)* %1, align 4, !tbaa !4\l  %39 = or i32 %28, 2\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !4\l  %43 = fadd contract float %42, %38\l  store float %43, float addrspace(1)* %1, align 4, !tbaa !4\l  %44 = or i32 %28, 3\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !4\l  %48 = fadd contract float %47, %43\l  store float %48, float addrspace(1)* %1, align 4, !tbaa !4\l  %49 = or i32 %28, 4\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !4\l  %53 = fadd contract float %52, %48\l  store float %53, float addrspace(1)* %1, align 4, !tbaa !4\l  %54 = or i32 %28, 5\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !4\l  %58 = fadd contract float %57, %53\l  store float %58, float addrspace(1)* %1, align 4, !tbaa !4\l  %59 = or i32 %28, 6\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !4\l  %63 = fadd contract float %62, %58\l  store float %63, float addrspace(1)* %1, align 4, !tbaa !4\l  %64 = or i32 %28, 7\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %0, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !4\l  %68 = fadd contract float %67, %63\l  store float %68, float addrspace(1)* %1, align 4, !tbaa !4\l  %69 = add nuw nsw i32 %28, 8\l  %70 = add i32 %29, 8\l  %71 = icmp eq i32 %70, %9\l  br i1 %71, label %10, label %26, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x52c5640:s0 -> Node0x52c59b0;
	Node0x52c5640:s1 -> Node0x52c5640;
}
