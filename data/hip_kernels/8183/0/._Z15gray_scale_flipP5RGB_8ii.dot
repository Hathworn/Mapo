digraph "CFG for '_Z15gray_scale_flipP5RGB_8ii' function" {
	label="CFG for '_Z15gray_scale_flipP5RGB_8ii' function";

	Node0x570f710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = getelementptr i8, i8 addrspace(4)* %4, i64 6\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 2, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %5, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %12 = add i32 %10, %11\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %20 = add i32 %18, %19\l  %21 = icmp slt i32 %12, %1\l  %22 = sdiv i32 %2, 2\l  %23 = icmp slt i32 %20, %22\l  %24 = select i1 %21, i1 %23, i1 false\l  br i1 %24, label %25, label %66\l|{<s0>T|<s1>F}}"];
	Node0x570f710:s0 -> Node0x5715a20;
	Node0x570f710:s1 -> Node0x5715ab0;
	Node0x5715a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%25:\l25:                                               \l  %26 = mul nsw i32 %12, %2\l  %27 = add nsw i32 %26, %20\l  %28 = add nsw i32 %12, 1\l  %29 = mul nsw i32 %28, %2\l  %30 = xor i32 %20, -1\l  %31 = add i32 %29, %30\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds %struct.RGB_8, %struct.RGB_8 addrspace(1)* %0,\l... i64 %32, i32 0\l  %34 = load i8, i8 addrspace(1)* %33, align 1, !tbaa.struct !7,\l... !amdgpu.noclobber !5\l  %35 = getelementptr inbounds %struct.RGB_8, %struct.RGB_8 addrspace(1)* %0,\l... i64 %32, i32 1\l  %36 = load i8, i8 addrspace(1)* %35, align 1, !tbaa.struct !7,\l... !amdgpu.noclobber !5\l  %37 = getelementptr inbounds %struct.RGB_8, %struct.RGB_8 addrspace(1)* %0,\l... i64 %32, i32 2\l  %38 = load i8, i8 addrspace(1)* %37, align 1, !tbaa.struct !7,\l... !amdgpu.noclobber !5\l  %39 = sext i32 %27 to i64\l  %40 = getelementptr inbounds %struct.RGB_8, %struct.RGB_8 addrspace(1)* %0,\l... i64 %39, i32 0\l  %41 = load i8, i8 addrspace(1)* %40, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %42 = uitofp i8 %41 to double\l  %43 = fmul contract double %42, 2.100000e-01\l  %44 = getelementptr inbounds %struct.RGB_8, %struct.RGB_8 addrspace(1)* %0,\l... i64 %39, i32 1\l  %45 = load i8, i8 addrspace(1)* %44, align 1, !tbaa !13, !amdgpu.noclobber !5\l  %46 = uitofp i8 %45 to double\l  %47 = fmul contract double %46, 0x3FE70A3D70A3D70A\l  %48 = fadd contract double %43, %47\l  %49 = getelementptr inbounds %struct.RGB_8, %struct.RGB_8 addrspace(1)* %0,\l... i64 %39, i32 2\l  %50 = load i8, i8 addrspace(1)* %49, align 1, !tbaa !14, !amdgpu.noclobber !5\l  %51 = uitofp i8 %50 to double\l  %52 = fmul contract double %51, 7.000000e-02\l  %53 = fadd contract double %48, %52\l  %54 = fptrunc double %53 to float\l  %55 = fptoui float %54 to i8\l  store i8 %55, i8 addrspace(1)* %40, align 1, !tbaa !11\l  store i8 %55, i8 addrspace(1)* %44, align 1, !tbaa !13\l  store i8 %55, i8 addrspace(1)* %49, align 1, !tbaa !14\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 1\l... dereferenceable(3) %33, i8 addrspace(1)* noundef align 1 dereferenceable(3)\l... %40, i64 3, i1 false), !tbaa.struct !7\l  %56 = uitofp i8 %34 to double\l  %57 = fmul contract double %56, 2.100000e-01\l  %58 = uitofp i8 %36 to double\l  %59 = fmul contract double %58, 0x3FE70A3D70A3D70A\l  %60 = fadd contract double %57, %59\l  %61 = uitofp i8 %38 to double\l  %62 = fmul contract double %61, 7.000000e-02\l  %63 = fadd contract double %60, %62\l  %64 = fptrunc double %63 to float\l  %65 = fptoui float %64 to i8\l  store i8 %65, i8 addrspace(1)* %40, align 1, !tbaa !11\l  store i8 %65, i8 addrspace(1)* %44, align 1, !tbaa !13\l  store i8 %65, i8 addrspace(1)* %49, align 1, !tbaa !14\l  br label %66\l}"];
	Node0x5715a20 -> Node0x5715ab0;
	Node0x5715ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  ret void\l}"];
}
