digraph "CFG for '_Z14fastForwardDstPKsPsi' function" {
	label="CFG for '_Z14fastForwardDstPKsPsi' function";

	Node0x49645d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = add nsw i32 %2, -1\l  %5 = shl nuw i32 1, %4\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = shl nuw nsw i32 %6, 2\l  %8 = zext i32 %7 to i64\l  %9 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %8\l  %10 = load i16, i16 addrspace(1)* %9, align 2, !tbaa !5, !amdgpu.noclobber !9\l  %11 = sext i16 %10 to i32\l  %12 = add nuw nsw i32 %7, 3\l  %13 = zext i32 %12 to i64\l  %14 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %13\l  %15 = load i16, i16 addrspace(1)* %14, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  %16 = sext i16 %15 to i32\l  %17 = add nsw i32 %16, %11\l  %18 = add nuw nsw i32 %7, 1\l  %19 = zext i32 %18 to i64\l  %20 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %19\l  %21 = load i16, i16 addrspace(1)* %20, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  %22 = sext i16 %21 to i32\l  %23 = add nsw i32 %22, %16\l  %24 = sub nsw i32 %11, %22\l  %25 = add nuw nsw i32 %7, 2\l  %26 = zext i32 %25 to i64\l  %27 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %26\l  %28 = load i16, i16 addrspace(1)* %27, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  %29 = sext i16 %28 to i32\l  %30 = mul nsw i32 %29, 74\l  %31 = mul nsw i32 %17, 29\l  %32 = mul nsw i32 %23, 55\l  %33 = add i32 %30, %5\l  %34 = add i32 %33, %31\l  %35 = add i32 %34, %32\l  %36 = ashr i32 %35, %2\l  %37 = trunc i32 %36 to i16\l  %38 = zext i32 %6 to i64\l  %39 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %38\l  store i16 %37, i16 addrspace(1)* %39, align 2, !tbaa !5\l  %40 = load i16, i16 addrspace(1)* %9, align 2, !tbaa !5\l  %41 = sext i16 %40 to i32\l  %42 = load i16, i16 addrspace(1)* %20, align 2, !tbaa !5\l  %43 = sext i16 %42 to i32\l  %44 = add nsw i32 %43, %41\l  %45 = load i16, i16 addrspace(1)* %14, align 2, !tbaa !5\l  %46 = sext i16 %45 to i32\l  %47 = sub nsw i32 %44, %46\l  %48 = mul nsw i32 %47, 74\l  %49 = add nsw i32 %48, %5\l  %50 = ashr i32 %49, %2\l  %51 = trunc i32 %50 to i16\l  %52 = add nuw nsw i32 %6, 4\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %53\l  store i16 %51, i16 addrspace(1)* %54, align 2, !tbaa !5\l  %55 = mul nsw i32 %24, 29\l  %56 = mul nsw i32 %17, 55\l  %57 = add i32 %56, %5\l  %58 = add i32 %57, %55\l  %59 = sub i32 %58, %30\l  %60 = ashr i32 %59, %2\l  %61 = trunc i32 %60 to i16\l  %62 = add nuw nsw i32 %6, 8\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %63\l  store i16 %61, i16 addrspace(1)* %64, align 2, !tbaa !5\l  %65 = mul nsw i32 %24, 55\l  %66 = mul nsw i32 %23, -29\l  %67 = add i32 %33, %65\l  %68 = add i32 %67, %66\l  %69 = ashr i32 %68, %2\l  %70 = trunc i32 %69 to i16\l  %71 = add nuw nsw i32 %6, 12\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %72\l  store i16 %70, i16 addrspace(1)* %73, align 2, !tbaa !5\l  ret void\l}"];
}
