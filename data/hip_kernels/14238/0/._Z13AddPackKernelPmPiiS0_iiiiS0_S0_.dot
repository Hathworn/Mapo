digraph "CFG for '_Z13AddPackKernelPmPiiS0_iiiiS0_S0_' function" {
	label="CFG for '_Z13AddPackKernelPmPiiS0_iiiiS0_S0_' function";

	Node0x5a7bcf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !6\l  %20 = mul i32 %11, %16\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %21\l  %23 = icmp slt i32 %22, %7\l  br i1 %23, label %24, label %231\l|{<s0>T|<s1>F}}"];
	Node0x5a7bcf0:s0 -> Node0x5a7ead0;
	Node0x5a7bcf0:s1 -> Node0x5a7eb60;
	Node0x5a7ead0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%24:\l24:                                               \l  %25 = icmp sgt i32 %2, 0\l  %26 = icmp sgt i32 %4, 0\l  %27 = udiv i32 %19, %16\l  %28 = mul i32 %27, %16\l  %29 = icmp ugt i32 %19, %28\l  %30 = zext i1 %29 to i32\l  %31 = add i32 %27, %30\l  %32 = mul i32 %31, %16\l  %33 = and i32 %2, 7\l  %34 = icmp ult i32 %2, 8\l  %35 = and i32 %2, -8\l  %36 = icmp eq i32 %33, 0\l  %37 = and i32 %4, 3\l  %38 = icmp ult i32 %4, 4\l  %39 = and i32 %4, -4\l  %40 = icmp eq i32 %37, 0\l  br label %41\l}"];
	Node0x5a7ead0 -> Node0x5a7f7c0;
	Node0x5a7f7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%41:\l41:                                               \l  %42 = phi i32 [ %22, %24 ], [ %184, %183 ]\l  br i1 %25, label %43, label %159\l|{<s0>T|<s1>F}}"];
	Node0x5a7f7c0:s0 -> Node0x5a7f9f0;
	Node0x5a7f7c0:s1 -> Node0x5a7fa80;
	Node0x5a7f9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%43:\l43:                                               \l  br i1 %34, label %138, label %44\l|{<s0>T|<s1>F}}"];
	Node0x5a7f9f0:s0 -> Node0x5a7fbc0;
	Node0x5a7f9f0:s1 -> Node0x5a7fc10;
	Node0x5a7fc10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%44:\l44:                                               \l  %45 = phi i32 [ %135, %44 ], [ 0, %43 ]\l  %46 = phi i32 [ %134, %44 ], [ 0, %43 ]\l  %47 = phi i32 [ %136, %44 ], [ 0, %43 ]\l  %48 = zext i32 %45 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %48\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !16\l  %51 = mul nsw i32 %45, %7\l  %52 = add nsw i32 %51, %42\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !16\l  %56 = mul i32 %55, %50\l  %57 = add i32 %56, %46\l  %58 = or i32 %45, 1\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !16\l  %62 = mul nsw i32 %58, %7\l  %63 = add nsw i32 %62, %42\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %64\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !16\l  %67 = mul i32 %66, %61\l  %68 = add i32 %67, %57\l  %69 = or i32 %45, 2\l  %70 = zext i32 %69 to i64\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %70\l  %72 = load i32, i32 addrspace(1)* %71, align 4, !tbaa !16\l  %73 = mul nsw i32 %69, %7\l  %74 = add nsw i32 %73, %42\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %75\l  %77 = load i32, i32 addrspace(1)* %76, align 4, !tbaa !16\l  %78 = mul i32 %77, %72\l  %79 = add i32 %78, %68\l  %80 = or i32 %45, 3\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !16\l  %84 = mul nsw i32 %80, %7\l  %85 = add nsw i32 %84, %42\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %86\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !16\l  %89 = mul i32 %88, %83\l  %90 = add i32 %89, %79\l  %91 = or i32 %45, 4\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %92\l  %94 = load i32, i32 addrspace(1)* %93, align 4, !tbaa !16\l  %95 = mul nsw i32 %91, %7\l  %96 = add nsw i32 %95, %42\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %97\l  %99 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !16\l  %100 = mul i32 %99, %94\l  %101 = add i32 %100, %90\l  %102 = or i32 %45, 5\l  %103 = zext i32 %102 to i64\l  %104 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %103\l  %105 = load i32, i32 addrspace(1)* %104, align 4, !tbaa !16\l  %106 = mul nsw i32 %102, %7\l  %107 = add nsw i32 %106, %42\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %108\l  %110 = load i32, i32 addrspace(1)* %109, align 4, !tbaa !16\l  %111 = mul i32 %110, %105\l  %112 = add i32 %111, %101\l  %113 = or i32 %45, 6\l  %114 = zext i32 %113 to i64\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %114\l  %116 = load i32, i32 addrspace(1)* %115, align 4, !tbaa !16\l  %117 = mul nsw i32 %113, %7\l  %118 = add nsw i32 %117, %42\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %119\l  %121 = load i32, i32 addrspace(1)* %120, align 4, !tbaa !16\l  %122 = mul i32 %121, %116\l  %123 = add i32 %122, %112\l  %124 = or i32 %45, 7\l  %125 = zext i32 %124 to i64\l  %126 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %125\l  %127 = load i32, i32 addrspace(1)* %126, align 4, !tbaa !16\l  %128 = mul nsw i32 %124, %7\l  %129 = add nsw i32 %128, %42\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %130\l  %132 = load i32, i32 addrspace(1)* %131, align 4, !tbaa !16\l  %133 = mul i32 %132, %127\l  %134 = add i32 %133, %123\l  %135 = add nuw nsw i32 %45, 8\l  %136 = add i32 %47, 8\l  %137 = icmp eq i32 %136, %35\l  br i1 %137, label %138, label %44, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5a7fc10:s0 -> Node0x5a7fbc0;
	Node0x5a7fc10:s1 -> Node0x5a7fc10;
	Node0x5a7fbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%138:\l138:                                              \l  %139 = phi i32 [ undef, %43 ], [ %134, %44 ]\l  %140 = phi i32 [ 0, %43 ], [ %135, %44 ]\l  %141 = phi i32 [ 0, %43 ], [ %134, %44 ]\l  br i1 %36, label %159, label %142\l|{<s0>T|<s1>F}}"];
	Node0x5a7fbc0:s0 -> Node0x5a7fa80;
	Node0x5a7fbc0:s1 -> Node0x5a845a0;
	Node0x5a845a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%142:\l142:                                              \l  %143 = phi i32 [ %156, %142 ], [ %140, %138 ]\l  %144 = phi i32 [ %155, %142 ], [ %141, %138 ]\l  %145 = phi i32 [ %157, %142 ], [ 0, %138 ]\l  %146 = zext i32 %143 to i64\l  %147 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %146\l  %148 = load i32, i32 addrspace(1)* %147, align 4, !tbaa !16\l  %149 = mul nsw i32 %143, %7\l  %150 = add nsw i32 %149, %42\l  %151 = sext i32 %150 to i64\l  %152 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %151\l  %153 = load i32, i32 addrspace(1)* %152, align 4, !tbaa !16\l  %154 = mul i32 %153, %148\l  %155 = add i32 %154, %144\l  %156 = add nuw nsw i32 %143, 1\l  %157 = add i32 %145, 1\l  %158 = icmp eq i32 %157, %33\l  br i1 %158, label %159, label %142, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5a845a0:s0 -> Node0x5a7fa80;
	Node0x5a845a0:s1 -> Node0x5a845a0;
	Node0x5a7fa80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%159:\l159:                                              \l  %160 = phi i32 [ 0, %41 ], [ %139, %138 ], [ %155, %142 ]\l  %161 = sext i32 %160 to i64\l  %162 = add i32 %42, %5\l  %163 = sext i32 %162 to i64\l  %164 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %163\l  store i64 %161, i64 addrspace(1)* %164, align 8, !tbaa !24\l  br i1 %26, label %165, label %183\l|{<s0>T|<s1>F}}"];
	Node0x5a7fa80:s0 -> Node0x5a855c0;
	Node0x5a7fa80:s1 -> Node0x5a7f8b0;
	Node0x5a855c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%165:\l165:                                              \l  br i1 %38, label %166, label %186\l|{<s0>T|<s1>F}}"];
	Node0x5a855c0:s0 -> Node0x5a85700;
	Node0x5a855c0:s1 -> Node0x5a85750;
	Node0x5a85700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%166:\l166:                                              \l  %167 = phi i32 [ 0, %165 ], [ %228, %186 ]\l  br i1 %40, label %183, label %168\l|{<s0>T|<s1>F}}"];
	Node0x5a85700:s0 -> Node0x5a7f8b0;
	Node0x5a85700:s1 -> Node0x5a85940;
	Node0x5a85940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%168:\l168:                                              \l  %169 = phi i32 [ %180, %168 ], [ %167, %166 ]\l  %170 = phi i32 [ %181, %168 ], [ 0, %166 ]\l  %171 = mul nsw i32 %169, %7\l  %172 = add nsw i32 %171, %42\l  %173 = sext i32 %172 to i64\l  %174 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %173\l  %175 = load i32, i32 addrspace(1)* %174, align 4, !tbaa !16\l  %176 = mul nsw i32 %169, %6\l  %177 = add i32 %162, %176\l  %178 = sext i32 %177 to i64\l  %179 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %178\l  store i32 %175, i32 addrspace(1)* %179, align 4, !tbaa !16\l  %180 = add nuw nsw i32 %169, 1\l  %181 = add i32 %170, 1\l  %182 = icmp eq i32 %181, %37\l  br i1 %182, label %183, label %168, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x5a85940:s0 -> Node0x5a7f8b0;
	Node0x5a85940:s1 -> Node0x5a85940;
	Node0x5a7f8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%183:\l183:                                              \l  %184 = add i32 %32, %42\l  %185 = icmp slt i32 %184, %7\l  br i1 %185, label %41, label %231, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x5a7f8b0:s0 -> Node0x5a7f7c0;
	Node0x5a7f8b0:s1 -> Node0x5a7eb60;
	Node0x5a85750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%186:\l186:                                              \l  %187 = phi i32 [ %228, %186 ], [ 0, %165 ]\l  %188 = phi i32 [ %229, %186 ], [ 0, %165 ]\l  %189 = mul nsw i32 %187, %7\l  %190 = add nsw i32 %189, %42\l  %191 = sext i32 %190 to i64\l  %192 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %191\l  %193 = load i32, i32 addrspace(1)* %192, align 4, !tbaa !16\l  %194 = mul nsw i32 %187, %6\l  %195 = add i32 %162, %194\l  %196 = sext i32 %195 to i64\l  %197 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %196\l  store i32 %193, i32 addrspace(1)* %197, align 4, !tbaa !16\l  %198 = or i32 %187, 1\l  %199 = mul nsw i32 %198, %7\l  %200 = add nsw i32 %199, %42\l  %201 = sext i32 %200 to i64\l  %202 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %201\l  %203 = load i32, i32 addrspace(1)* %202, align 4, !tbaa !16\l  %204 = mul nsw i32 %198, %6\l  %205 = add i32 %162, %204\l  %206 = sext i32 %205 to i64\l  %207 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %206\l  store i32 %203, i32 addrspace(1)* %207, align 4, !tbaa !16\l  %208 = or i32 %187, 2\l  %209 = mul nsw i32 %208, %7\l  %210 = add nsw i32 %209, %42\l  %211 = sext i32 %210 to i64\l  %212 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %211\l  %213 = load i32, i32 addrspace(1)* %212, align 4, !tbaa !16\l  %214 = mul nsw i32 %208, %6\l  %215 = add i32 %162, %214\l  %216 = sext i32 %215 to i64\l  %217 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %216\l  store i32 %213, i32 addrspace(1)* %217, align 4, !tbaa !16\l  %218 = or i32 %187, 3\l  %219 = mul nsw i32 %218, %7\l  %220 = add nsw i32 %219, %42\l  %221 = sext i32 %220 to i64\l  %222 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %221\l  %223 = load i32, i32 addrspace(1)* %222, align 4, !tbaa !16\l  %224 = mul nsw i32 %218, %6\l  %225 = add i32 %162, %224\l  %226 = sext i32 %225 to i64\l  %227 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %226\l  store i32 %223, i32 addrspace(1)* %227, align 4, !tbaa !16\l  %228 = add nuw nsw i32 %187, 4\l  %229 = add i32 %188, 4\l  %230 = icmp eq i32 %229, %39\l  br i1 %230, label %166, label %186, !llvm.loop !28\l|{<s0>T|<s1>F}}"];
	Node0x5a85750:s0 -> Node0x5a85700;
	Node0x5a85750:s1 -> Node0x5a85750;
	Node0x5a7eb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%231:\l231:                                              \l  ret void\l}"];
}
