digraph "CFG for '_Z26fast_variance_delta_kernelPfS_S_S_iiiS_' function" {
	label="CFG for '_Z26fast_variance_delta_kernelPfS_S_S_iiiS_' function";

	Node0x62db030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %9\l  store float 0.000000e+00, float addrspace(3)* %10, align 4, !tbaa !5\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = icmp sgt i32 %4, 0\l  br i1 %12, label %13, label %133\l|{<s0>T|<s1>F}}"];
	Node0x62db030:s0 -> Node0x62dd390;
	Node0x62db030:s1 -> Node0x62dd420;
	Node0x62dd390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%13:\l13:                                               \l  %14 = icmp sgt i32 %6, 0\l  %15 = sext i32 %11 to i64\l  %16 = getelementptr inbounds float, float addrspace(1)* %2, i64 %15\l  %17 = add i32 %6, -1\l  %18 = lshr i32 %17, 9\l  %19 = add nuw nsw i32 %18, 1\l  %20 = and i32 %19, 3\l  %21 = icmp ult i32 %6, 1537\l  %22 = and i32 %19, -4\l  %23 = icmp eq i32 %20, 0\l  br label %24\l}"];
	Node0x62dd390 -> Node0x62ddc90;
	Node0x62ddc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%24:\l24:                                               \l  %25 = phi float [ 0.000000e+00, %13 ], [ %130, %129 ]\l  %26 = phi i32 [ 0, %13 ], [ %131, %129 ]\l  br i1 %14, label %27, label %129\l|{<s0>T|<s1>F}}"];
	Node0x62ddc90:s0 -> Node0x62ddfe0;
	Node0x62ddc90:s1 -> Node0x62ddd80;
	Node0x62ddfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%27:\l27:                                               \l  %28 = mul i32 %26, %5\l  %29 = add i32 %28, %11\l  %30 = mul i32 %29, %6\l  br i1 %21, label %101, label %31\l|{<s0>T|<s1>F}}"];
	Node0x62ddfe0:s0 -> Node0x62de2d0;
	Node0x62ddfe0:s1 -> Node0x62de320;
	Node0x62de320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%31:\l31:                                               \l  %32 = phi float [ %97, %95 ], [ %25, %27 ]\l  %33 = phi i32 [ %98, %95 ], [ 0, %27 ]\l  %34 = phi i32 [ %99, %95 ], [ 0, %27 ]\l  %35 = or i32 %33, %9\l  %36 = icmp slt i32 %35, %6\l  br i1 %36, label %37, label %47\l|{<s0>T|<s1>F}}"];
	Node0x62de320:s0 -> Node0x62dea50;
	Node0x62de320:s1 -> Node0x62deae0;
	Node0x62dea50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%37:\l37:                                               \l  %38 = add i32 %35, %30\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %44 = load float, float addrspace(1)* %16, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %45 = fsub contract float %43, %44\l  %46 = fmul contract float %41, %45\l  br label %47\l}"];
	Node0x62dea50 -> Node0x62deae0;
	Node0x62deae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%47:\l47:                                               \l  %48 = phi contract float [ %46, %37 ], [ 0.000000e+00, %31 ]\l  %49 = fadd contract float %48, %32\l  %50 = or i32 %33, 512\l  %51 = add nuw nsw i32 %50, %9\l  %52 = icmp slt i32 %51, %6\l  br i1 %52, label %53, label %63\l|{<s0>T|<s1>F}}"];
	Node0x62deae0:s0 -> Node0x62e02b0;
	Node0x62deae0:s1 -> Node0x62e0300;
	Node0x62e02b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%53:\l53:                                               \l  %54 = add i32 %51, %30\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %60 = load float, float addrspace(1)* %16, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %61 = fsub contract float %59, %60\l  %62 = fmul contract float %57, %61\l  br label %63\l}"];
	Node0x62e02b0 -> Node0x62e0300;
	Node0x62e0300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%63:\l63:                                               \l  %64 = phi contract float [ %62, %53 ], [ 0.000000e+00, %47 ]\l  %65 = fadd contract float %64, %49\l  %66 = or i32 %33, %9\l  %67 = or i32 %66, 1024\l  %68 = icmp slt i32 %67, %6\l  br i1 %68, label %69, label %79\l|{<s0>T|<s1>F}}"];
	Node0x62e0300:s0 -> Node0x62de780;
	Node0x62e0300:s1 -> Node0x62e0f60;
	Node0x62de780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%69:\l69:                                               \l  %70 = add i32 %67, %30\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %76 = load float, float addrspace(1)* %16, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %77 = fsub contract float %75, %76\l  %78 = fmul contract float %73, %77\l  br label %79\l}"];
	Node0x62de780 -> Node0x62e0f60;
	Node0x62e0f60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%79:\l79:                                               \l  %80 = phi contract float [ %78, %69 ], [ 0.000000e+00, %63 ]\l  %81 = fadd contract float %80, %65\l  %82 = or i32 %33, 1536\l  %83 = add nuw nsw i32 %82, %9\l  %84 = icmp slt i32 %83, %6\l  br i1 %84, label %85, label %95\l|{<s0>T|<s1>F}}"];
	Node0x62e0f60:s0 -> Node0x62e1960;
	Node0x62e0f60:s1 -> Node0x62de490;
	Node0x62e1960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%85:\l85:                                               \l  %86 = add i32 %83, %30\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %90 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %92 = load float, float addrspace(1)* %16, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %93 = fsub contract float %91, %92\l  %94 = fmul contract float %89, %93\l  br label %95\l}"];
	Node0x62e1960 -> Node0x62de490;
	Node0x62de490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%95:\l95:                                               \l  %96 = phi contract float [ %94, %85 ], [ 0.000000e+00, %79 ]\l  %97 = fadd contract float %96, %81\l  %98 = add nuw nsw i32 %33, 2048\l  %99 = add i32 %34, 4\l  %100 = icmp eq i32 %99, %22\l  br i1 %100, label %101, label %31, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x62de490:s0 -> Node0x62de2d0;
	Node0x62de490:s1 -> Node0x62de320;
	Node0x62de2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%101:\l101:                                              \l  %102 = phi float [ undef, %27 ], [ %97, %95 ]\l  %103 = phi float [ %25, %27 ], [ %97, %95 ]\l  %104 = phi i32 [ 0, %27 ], [ %98, %95 ]\l  br i1 %23, label %127, label %105\l|{<s0>T|<s1>F}}"];
	Node0x62de2d0:s0 -> Node0x62e2660;
	Node0x62de2d0:s1 -> Node0x62e26b0;
	Node0x62e26b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  %106 = phi float [ %123, %121 ], [ %103, %101 ]\l  %107 = phi i32 [ %124, %121 ], [ %104, %101 ]\l  %108 = phi i32 [ %125, %121 ], [ 0, %101 ]\l  %109 = add nuw nsw i32 %107, %9\l  %110 = icmp slt i32 %109, %6\l  br i1 %110, label %111, label %121\l|{<s0>T|<s1>F}}"];
	Node0x62e26b0:s0 -> Node0x62e2c20;
	Node0x62e26b0:s1 -> Node0x62e27b0;
	Node0x62e2c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%111:\l111:                                              \l  %112 = add i32 %109, %30\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %1, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %116 = getelementptr inbounds float, float addrspace(1)* %0, i64 %113\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %118 = load float, float addrspace(1)* %16, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %119 = fsub contract float %117, %118\l  %120 = fmul contract float %115, %119\l  br label %121\l}"];
	Node0x62e2c20 -> Node0x62e27b0;
	Node0x62e27b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%121:\l121:                                              \l  %122 = phi contract float [ %120, %111 ], [ 0.000000e+00, %105 ]\l  %123 = fadd contract float %122, %106\l  %124 = add nuw nsw i32 %107, 512\l  %125 = add i32 %108, 1\l  %126 = icmp eq i32 %125, %20\l  br i1 %126, label %127, label %105, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x62e27b0:s0 -> Node0x62e2660;
	Node0x62e27b0:s1 -> Node0x62e26b0;
	Node0x62e2660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%127:\l127:                                              \l  %128 = phi float [ %102, %101 ], [ %123, %121 ]\l  store float %128, float addrspace(3)* %10, align 4, !tbaa !5\l  br label %129\l}"];
	Node0x62e2660 -> Node0x62ddd80;
	Node0x62ddd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%129:\l129:                                              \l  %130 = phi float [ %128, %127 ], [ %25, %24 ]\l  %131 = add nuw nsw i32 %26, 1\l  %132 = icmp eq i32 %131, %4\l  br i1 %132, label %133, label %24, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x62ddd80:s0 -> Node0x62dd420;
	Node0x62ddd80:s1 -> Node0x62ddc90;
	Node0x62dd420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%133:\l133:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %134 = icmp eq i32 %9, 0\l  br i1 %134, label %135, label %370\l|{<s0>T|<s1>F}}"];
	Node0x62dd420:s0 -> Node0x62e42a0;
	Node0x62dd420:s1 -> Node0x62e42f0;
	Node0x62e42a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%135:\l135:                                              \l  %136 = sext i32 %11 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %7, i64 %136\l  store float 0.000000e+00, float addrspace(1)* %137, align 4, !tbaa !5\l  br label %138\l}"];
	Node0x62e42a0 -> Node0x62e4590;
	Node0x62e4590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%138:\l138:                                              \l  %139 = phi i32 [ 0, %135 ], [ %204, %138 ]\l  %140 = phi float [ 0.000000e+00, %135 ], [ %203, %138 ]\l  %141 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %139\l  %142 = load float, float addrspace(3)* %141, align 16, !tbaa !5\l  %143 = fadd contract float %142, %140\l  %144 = or i32 %139, 1\l  %145 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %144\l  %146 = load float, float addrspace(3)* %145, align 4, !tbaa !5\l  %147 = fadd contract float %146, %143\l  %148 = or i32 %139, 2\l  %149 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %148\l  %150 = load float, float addrspace(3)* %149, align 8, !tbaa !5\l  %151 = fadd contract float %150, %147\l  %152 = or i32 %139, 3\l  %153 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %152\l  %154 = load float, float addrspace(3)* %153, align 4, !tbaa !5\l  %155 = fadd contract float %154, %151\l  %156 = or i32 %139, 4\l  %157 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %156\l  %158 = load float, float addrspace(3)* %157, align 16, !tbaa !5\l  %159 = fadd contract float %158, %155\l  %160 = or i32 %139, 5\l  %161 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %160\l  %162 = load float, float addrspace(3)* %161, align 4, !tbaa !5\l  %163 = fadd contract float %162, %159\l  %164 = or i32 %139, 6\l  %165 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %164\l  %166 = load float, float addrspace(3)* %165, align 8, !tbaa !5\l  %167 = fadd contract float %166, %163\l  %168 = or i32 %139, 7\l  %169 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %168\l  %170 = load float, float addrspace(3)* %169, align 4, !tbaa !5\l  %171 = fadd contract float %170, %167\l  %172 = or i32 %139, 8\l  %173 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %172\l  %174 = load float, float addrspace(3)* %173, align 16, !tbaa !5\l  %175 = fadd contract float %174, %171\l  %176 = or i32 %139, 9\l  %177 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %176\l  %178 = load float, float addrspace(3)* %177, align 4, !tbaa !5\l  %179 = fadd contract float %178, %175\l  %180 = or i32 %139, 10\l  %181 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %180\l  %182 = load float, float addrspace(3)* %181, align 8, !tbaa !5\l  %183 = fadd contract float %182, %179\l  %184 = or i32 %139, 11\l  %185 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %184\l  %186 = load float, float addrspace(3)* %185, align 4, !tbaa !5\l  %187 = fadd contract float %186, %183\l  %188 = or i32 %139, 12\l  %189 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %188\l  %190 = load float, float addrspace(3)* %189, align 16, !tbaa !5\l  %191 = fadd contract float %190, %187\l  %192 = or i32 %139, 13\l  %193 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %192\l  %194 = load float, float addrspace(3)* %193, align 4, !tbaa !5\l  %195 = fadd contract float %194, %191\l  %196 = or i32 %139, 14\l  %197 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %196\l  %198 = load float, float addrspace(3)* %197, align 8, !tbaa !5\l  %199 = fadd contract float %198, %195\l  %200 = or i32 %139, 15\l  %201 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ26fast_variance_delta_kernelPfS_S_S_iiiS_E5local, i32 0, i32 %200\l  %202 = load float, float addrspace(3)* %201, align 4, !tbaa !5\l  %203 = fadd contract float %202, %199\l  %204 = add nuw nsw i32 %139, 16\l  %205 = icmp eq i32 %204, 512\l  br i1 %205, label %206, label %138, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x62e4590:s0 -> Node0x62e7010;
	Node0x62e4590:s1 -> Node0x62e4590;
	Node0x62e7010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%206:\l206:                                              \l  store float %203, float addrspace(1)* %137, align 4, !tbaa !5\l  %207 = getelementptr inbounds float, float addrspace(1)* %3, i64 %136\l  %208 = load float, float addrspace(1)* %207, align 4, !tbaa !5\l  %209 = fadd contract float %208, 0x3EE4F8B580000000\l  %210 = tail call float @llvm.fabs.f32(float %209)\l  %211 = tail call float @llvm.amdgcn.frexp.mant.f32(float %210)\l  %212 = fcmp olt float %211, 0x3FE5555560000000\l  %213 = zext i1 %212 to i32\l  %214 = tail call float @llvm.amdgcn.ldexp.f32(float %211, i32 %213)\l  %215 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %210)\l  %216 = sub nsw i32 %215, %213\l  %217 = fadd float %214, -1.000000e+00\l  %218 = fadd float %214, 1.000000e+00\l  %219 = fadd float %218, -1.000000e+00\l  %220 = fsub float %214, %219\l  %221 = tail call float @llvm.amdgcn.rcp.f32(float %218)\l  %222 = fmul float %217, %221\l  %223 = fmul float %218, %222\l  %224 = fneg float %223\l  %225 = tail call float @llvm.fma.f32(float %222, float %218, float %224)\l  %226 = tail call float @llvm.fma.f32(float %222, float %220, float %225)\l  %227 = fadd float %223, %226\l  %228 = fsub float %227, %223\l  %229 = fsub float %226, %228\l  %230 = fsub float %217, %227\l  %231 = fsub float %217, %230\l  %232 = fsub float %231, %227\l  %233 = fsub float %232, %229\l  %234 = fadd float %230, %233\l  %235 = fmul float %221, %234\l  %236 = fadd float %222, %235\l  %237 = fsub float %236, %222\l  %238 = fsub float %235, %237\l  %239 = fmul float %236, %236\l  %240 = fneg float %239\l  %241 = tail call float @llvm.fma.f32(float %236, float %236, float %240)\l  %242 = fmul float %238, 2.000000e+00\l  %243 = tail call float @llvm.fma.f32(float %236, float %242, float %241)\l  %244 = fadd float %239, %243\l  %245 = fsub float %244, %239\l  %246 = fsub float %243, %245\l  %247 = tail call float @llvm.fmuladd.f32(float %244, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %248 = tail call float @llvm.fmuladd.f32(float %244, float %247, float\l... 0x3FD999BDE0000000)\l  %249 = sitofp i32 %216 to float\l  %250 = fmul float %249, 0x3FE62E4300000000\l  %251 = fneg float %250\l  %252 = tail call float @llvm.fma.f32(float %249, float 0x3FE62E4300000000,\l... float %251)\l  %253 = tail call float @llvm.fma.f32(float %249, float 0xBE205C6100000000,\l... float %252)\l  %254 = fadd float %250, %253\l  %255 = fsub float %254, %250\l  %256 = fsub float %253, %255\l  %257 = tail call float @llvm.amdgcn.ldexp.f32(float %236, i32 1)\l  %258 = fmul float %236, %244\l  %259 = fneg float %258\l  %260 = tail call float @llvm.fma.f32(float %244, float %236, float %259)\l  %261 = tail call float @llvm.fma.f32(float %244, float %238, float %260)\l  %262 = tail call float @llvm.fma.f32(float %246, float %236, float %261)\l  %263 = fadd float %258, %262\l  %264 = fsub float %263, %258\l  %265 = fsub float %262, %264\l  %266 = fmul float %244, %248\l  %267 = fneg float %266\l  %268 = tail call float @llvm.fma.f32(float %244, float %248, float %267)\l  %269 = tail call float @llvm.fma.f32(float %246, float %248, float %268)\l  %270 = fadd float %266, %269\l  %271 = fsub float %270, %266\l  %272 = fsub float %269, %271\l  %273 = fadd float %270, 0x3FE5555540000000\l  %274 = fadd float %273, 0xBFE5555540000000\l  %275 = fsub float %270, %274\l  %276 = fadd float %272, 0x3E2E720200000000\l  %277 = fadd float %276, %275\l  %278 = fadd float %273, %277\l  %279 = fsub float %278, %273\l  %280 = fsub float %277, %279\l  %281 = fmul float %263, %278\l  %282 = fneg float %281\l  %283 = tail call float @llvm.fma.f32(float %263, float %278, float %282)\l  %284 = tail call float @llvm.fma.f32(float %263, float %280, float %283)\l  %285 = tail call float @llvm.fma.f32(float %265, float %278, float %284)\l  %286 = tail call float @llvm.amdgcn.ldexp.f32(float %238, i32 1)\l  %287 = fadd float %281, %285\l  %288 = fsub float %287, %281\l  %289 = fsub float %285, %288\l  %290 = fadd float %257, %287\l  %291 = fsub float %290, %257\l  %292 = fsub float %287, %291\l  %293 = fadd float %286, %289\l  %294 = fadd float %293, %292\l  %295 = fadd float %290, %294\l  %296 = fsub float %295, %290\l  %297 = fsub float %294, %296\l  %298 = fadd float %254, %295\l  %299 = fsub float %298, %254\l  %300 = fsub float %298, %299\l  %301 = fsub float %254, %300\l  %302 = fsub float %295, %299\l  %303 = fadd float %302, %301\l  %304 = fadd float %256, %297\l  %305 = fsub float %304, %256\l  %306 = fsub float %304, %305\l  %307 = fsub float %256, %306\l  %308 = fsub float %297, %305\l  %309 = fadd float %308, %307\l  %310 = fadd float %304, %303\l  %311 = fadd float %298, %310\l  %312 = fsub float %311, %298\l  %313 = fsub float %310, %312\l  %314 = fadd float %309, %313\l  %315 = fadd float %311, %314\l  %316 = fsub float %315, %311\l  %317 = fsub float %314, %316\l  %318 = fmul float %315, -1.500000e+00\l  %319 = fneg float %318\l  %320 = tail call float @llvm.fma.f32(float %315, float -1.500000e+00, float\l... %319)\l  %321 = tail call float @llvm.fma.f32(float %317, float -1.500000e+00, float\l... %320)\l  %322 = fadd float %318, %321\l  %323 = fsub float %322, %318\l  %324 = fsub float %321, %323\l  %325 = tail call float @llvm.fabs.f32(float %318) #4\l  %326 = fcmp oeq float %325, 0x7FF0000000000000\l  %327 = select i1 %326, float %318, float %322\l  %328 = tail call float @llvm.fabs.f32(float %327) #4\l  %329 = fcmp oeq float %328, 0x7FF0000000000000\l  %330 = select i1 %329, float 0.000000e+00, float %324\l  %331 = fcmp oeq float %327, 0x40562E4300000000\l  %332 = select i1 %331, float 0x3EE0000000000000, float 0.000000e+00\l  %333 = fsub float %327, %332\l  %334 = fadd float %332, %330\l  %335 = fmul float %333, 0x3FF7154760000000\l  %336 = tail call float @llvm.rint.f32(float %335)\l  %337 = fcmp ogt float %333, 0x40562E4300000000\l  %338 = fcmp olt float %333, 0xC059D1DA00000000\l  %339 = fneg float %335\l  %340 = tail call float @llvm.fma.f32(float %333, float 0x3FF7154760000000,\l... float %339)\l  %341 = tail call float @llvm.fma.f32(float %333, float 0x3E54AE0BE0000000,\l... float %340)\l  %342 = fsub float %335, %336\l  %343 = fadd float %341, %342\l  %344 = tail call float @llvm.exp2.f32(float %343)\l  %345 = fptosi float %336 to i32\l  %346 = tail call float @llvm.amdgcn.ldexp.f32(float %344, i32 %345)\l  %347 = select i1 %338, float 0.000000e+00, float %346\l  %348 = select i1 %337, float 0x7FF0000000000000, float %347\l  %349 = tail call float @llvm.fma.f32(float %348, float %334, float %348)\l  %350 = tail call float @llvm.fabs.f32(float %348) #4\l  %351 = fcmp oeq float %350, 0x7FF0000000000000\l  %352 = select i1 %351, float %348, float %349\l  %353 = fcmp uge float %209, 0.000000e+00\l  %354 = tail call float @llvm.fabs.f32(float %352)\l  %355 = select i1 %353, float %354, float 0x7FF8000000000000\l  %356 = fcmp oeq float %210, 0x7FF0000000000000\l  %357 = fcmp oeq float %209, 0.000000e+00\l  %358 = select i1 %356, float 0.000000e+00, float %355\l  %359 = select i1 %357, float 0x7FF0000000000000, float %358\l  %360 = fcmp uno float %209, 0.000000e+00\l  %361 = select i1 %360, float 0x7FF8000000000000, float %359\l  %362 = fcmp oeq float %209, 1.000000e+00\l  %363 = select i1 %362, float 1.000000e+00, float %361\l  %364 = fpext float %363 to double\l  %365 = fmul contract double %364, -5.000000e-01\l  %366 = load float, float addrspace(1)* %137, align 4, !tbaa !5\l  %367 = fpext float %366 to double\l  %368 = fmul contract double %365, %367\l  %369 = fptrunc double %368 to float\l  store float %369, float addrspace(1)* %137, align 4, !tbaa !5\l  br label %370\l}"];
	Node0x62e7010 -> Node0x62e42f0;
	Node0x62e42f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%370:\l370:                                              \l  ret void\l}"];
}
