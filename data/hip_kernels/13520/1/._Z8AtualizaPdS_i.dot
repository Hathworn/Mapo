digraph "CFG for '_Z8AtualizaPdS_i' function" {
	label="CFG for '_Z8AtualizaPdS_i' function";

	Node0x59ba440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp eq i32 %12, 0\l  br i1 %13, label %14, label %17\l|{<s0>T|<s1>F}}"];
	Node0x59ba440:s0 -> Node0x59bc340;
	Node0x59ba440:s1 -> Node0x59bc3d0;
	Node0x59bc340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%14:\l14:                                               \l  %15 = sext i32 %2 to i64\l  %16 = getelementptr inbounds double, double addrspace(1)* %0, i64 %15\l  store double 0.000000e+00, double addrspace(1)* %16, align 8, !tbaa !7\l  store double 0.000000e+00, double addrspace(1)* %0, align 8, !tbaa !7\l  br label %37\l}"];
	Node0x59bc340 -> Node0x59bd950;
	Node0x59bc3d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e36c5570",label="{%17:\l17:                                               \l  %18 = icmp slt i32 %12, %2\l  br i1 %18, label %19, label %37\l|{<s0>T|<s1>F}}"];
	Node0x59bc3d0:s0 -> Node0x59bdae0;
	Node0x59bc3d0:s1 -> Node0x59bd950;
	Node0x59bdae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%19:\l19:                                               \l  %20 = sext i32 %12 to i64\l  %21 = getelementptr inbounds double, double addrspace(1)* %1, i64 %20\l  %22 = load double, double addrspace(1)* %21, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %23 = add nsw i32 %12, -1\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds double, double addrspace(1)* %1, i64 %24\l  %26 = load double, double addrspace(1)* %25, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = fmul contract double %22, 2.000000e+00\l  %28 = fsub contract double %26, %27\l  %29 = add nsw i32 %12, 1\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds double, double addrspace(1)* %1, i64 %30\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %33 = fadd contract double %28, %32\l  %34 = fmul contract double %33, 0x3FDCCCCCCCCCCCCB\l  %35 = fadd contract double %22, %34\l  %36 = getelementptr inbounds double, double addrspace(1)* %0, i64 %20\l  store double %35, double addrspace(1)* %36, align 8, !tbaa !7\l  br label %37\l}"];
	Node0x59bdae0 -> Node0x59bd950;
	Node0x59bd950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  ret void\l}"];
}
