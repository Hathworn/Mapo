digraph "CFG for '_Z6EvolvePiS_i' function" {
	label="CFG for '_Z6EvolvePiS_i' function";

	Node0x4b09c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 2, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %20 = add i32 %18, %19\l  %21 = icmp sgt i32 %12, 0\l  br i1 %21, label %22, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4b09c80:s0 -> Node0x4b0d600;
	Node0x4b09c80:s1 -> Node0x4b0d690;
	Node0x4b0d600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%22:\l22:                                               \l  %23 = add nsw i32 %2, -1\l  %24 = icmp slt i32 %12, %23\l  %25 = icmp sgt i32 %20, 0\l  %26 = select i1 %24, i1 %25, i1 false\l  %27 = icmp slt i32 %20, %23\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4b0d600:s0 -> Node0x4b0dbd0;
	Node0x4b0d600:s1 -> Node0x4b0d690;
	Node0x4b0dbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %12, %2\l  %31 = add nsw i32 %30, %20\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %35 = add nsw i32 %12, -1\l  %36 = mul nsw i32 %35, %2\l  %37 = add nsw i32 %36, %20\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %38\l  %40 = load i32, i32 addrspace(1)* %39, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %41 = add nsw i32 %37, 1\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %42\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %45 = add nsw i32 %31, 1\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %49 = add nuw nsw i32 %12, 1\l  %50 = mul nsw i32 %49, %2\l  %51 = add nsw i32 %50, %20\l  %52 = add nsw i32 %51, 1\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %56 = sext i32 %51 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %56\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %59 = add nsw i32 %51, -1\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %60\l  %62 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %63 = add nsw i32 %31, -1\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %64\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %67 = add nsw i32 %37, -1\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %71 = add nsw i32 %44, %40\l  %72 = add nsw i32 %71, %48\l  %73 = add nsw i32 %72, %55\l  %74 = add nsw i32 %73, %58\l  %75 = add nsw i32 %74, %62\l  %76 = add nsw i32 %75, %66\l  %77 = add nsw i32 %76, %70\l  %78 = icmp eq i32 %77, 3\l  br i1 %78, label %85, label %79\l|{<s0>T|<s1>F}}"];
	Node0x4b0dbd0:s0 -> Node0x4b103d0;
	Node0x4b0dbd0:s1 -> Node0x4b10460;
	Node0x4b10460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%79:\l79:                                               \l  %80 = icmp eq i32 %34, 1\l  %81 = and i32 %77, -2\l  %82 = icmp eq i32 %81, 2\l  %83 = zext i1 %82 to i32\l  %84 = select i1 %80, i32 %83, i32 %34\l  br label %85\l}"];
	Node0x4b10460 -> Node0x4b103d0;
	Node0x4b103d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%85:\l85:                                               \l  %86 = phi i32 [ 1, %29 ], [ %84, %79 ]\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %32\l  store i32 %86, i32 addrspace(1)* %87, align 4, !tbaa !7\l  br label %88\l}"];
	Node0x4b103d0 -> Node0x4b0d690;
	Node0x4b0d690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  ret void\l}"];
}
