digraph "CFG for '_Z13atomicScatteriiiPdS_S_S_S_S_S_' function" {
	label="CFG for '_Z13atomicScatteriiiPdS_S_S_S_S_S_' function";

	Node0x5df49e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = icmp slt i32 %19, %2\l  br i1 %20, label %21, label %380\l|{<s0>T|<s1>F}}"];
	Node0x5df49e0:s0 -> Node0x5df74c0;
	Node0x5df49e0:s1 -> Node0x5df7550;
	Node0x5df74c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%21:\l21:                                               \l  %22 = sext i32 %19 to i64\l  %23 = getelementptr inbounds double, double addrspace(1)* %5, i64 %22\l  %24 = load double, double addrspace(1)* %23, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %25 = fmul contract double %24, %24\l  %26 = fmul contract double %25, 0xBF79F02F6222C6A0\l  %27 = sext i32 %0 to i64\l  %28 = getelementptr inbounds double, double addrspace(1)* %3, i64 %27\l  %29 = load double, double addrspace(1)* %28, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %30 = sext i32 %1 to i64\l  %31 = getelementptr inbounds double, double addrspace(1)* %3, i64 %30\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %33 = fmul contract double %29, %32\l  %34 = getelementptr inbounds double, double addrspace(1)* %9, i64 %22\l  store double %33, double addrspace(1)* %34, align 8, !tbaa !7\l  %35 = getelementptr inbounds double, double addrspace(1)* %4, i64 %27\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !7\l  %37 = getelementptr inbounds double, double addrspace(1)* %4, i64 %30\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !7\l  %39 = fadd contract double %36, %38\l  %40 = fmul contract double %26, %39\l  %41 = fmul double %40, 0x3FF71547652B82FE\l  %42 = tail call double @llvm.rint.f64(double %41)\l  %43 = fneg double %42\l  %44 = tail call double @llvm.fma.f64(double %43, double 0x3FE62E42FEFA39EF,\l... double %40)\l  %45 = tail call double @llvm.fma.f64(double %43, double 0x3C7ABC9E3B39803F,\l... double %44)\l  %46 = tail call double @llvm.fma.f64(double %45, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %47 = tail call double @llvm.fma.f64(double %45, double %46, double\l... 0x3EC71DEE623FDE64)\l  %48 = tail call double @llvm.fma.f64(double %45, double %47, double\l... 0x3EFA01997C89E6B0)\l  %49 = tail call double @llvm.fma.f64(double %45, double %48, double\l... 0x3F2A01A014761F6E)\l  %50 = tail call double @llvm.fma.f64(double %45, double %49, double\l... 0x3F56C16C1852B7B0)\l  %51 = tail call double @llvm.fma.f64(double %45, double %50, double\l... 0x3F81111111122322)\l  %52 = tail call double @llvm.fma.f64(double %45, double %51, double\l... 0x3FA55555555502A1)\l  %53 = tail call double @llvm.fma.f64(double %45, double %52, double\l... 0x3FC5555555555511)\l  %54 = tail call double @llvm.fma.f64(double %45, double %53, double\l... 0x3FE000000000000B)\l  %55 = tail call double @llvm.fma.f64(double %45, double %54, double\l... 1.000000e+00)\l  %56 = tail call double @llvm.fma.f64(double %45, double %55, double\l... 1.000000e+00)\l  %57 = fptosi double %42 to i32\l  %58 = tail call double @llvm.amdgcn.ldexp.f64(double %56, i32 %57)\l  %59 = fcmp ogt double %40, 1.024000e+03\l  %60 = select i1 %59, double 0x7FF0000000000000, double %58\l  %61 = fcmp olt double %40, -1.075000e+03\l  %62 = select i1 %61, double 0.000000e+00, double %60\l  %63 = fmul contract double %33, %62\l  store double %63, double addrspace(1)* %34, align 8, !tbaa !7\l  %64 = getelementptr inbounds double, double addrspace(1)* %8, i64 %27\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !7\l  %66 = getelementptr inbounds double, double addrspace(1)* %8, i64 %30\l  %67 = load double, double addrspace(1)* %66, align 8, !tbaa !7\l  %68 = mul nsw i32 %0, 5\l  %69 = mul nsw i32 %1, 5\l  %70 = sext i32 %68 to i64\l  %71 = getelementptr inbounds double, double addrspace(1)* %6, i64 %70\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !7\l  %73 = getelementptr inbounds double, double addrspace(1)* %7, i64 %70\l  %74 = load double, double addrspace(1)* %73, align 8, !tbaa !7\l  %75 = fmul contract double %26, %74\l  %76 = fmul double %75, 0x3FF71547652B82FE\l  %77 = tail call double @llvm.rint.f64(double %76)\l  %78 = fneg double %77\l  %79 = tail call double @llvm.fma.f64(double %78, double 0x3FE62E42FEFA39EF,\l... double %75)\l  %80 = tail call double @llvm.fma.f64(double %78, double 0x3C7ABC9E3B39803F,\l... double %79)\l  %81 = tail call double @llvm.fma.f64(double %80, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %82 = tail call double @llvm.fma.f64(double %80, double %81, double\l... 0x3EC71DEE623FDE64)\l  %83 = tail call double @llvm.fma.f64(double %80, double %82, double\l... 0x3EFA01997C89E6B0)\l  %84 = tail call double @llvm.fma.f64(double %80, double %83, double\l... 0x3F2A01A014761F6E)\l  %85 = tail call double @llvm.fma.f64(double %80, double %84, double\l... 0x3F56C16C1852B7B0)\l  %86 = tail call double @llvm.fma.f64(double %80, double %85, double\l... 0x3F81111111122322)\l  %87 = tail call double @llvm.fma.f64(double %80, double %86, double\l... 0x3FA55555555502A1)\l  %88 = tail call double @llvm.fma.f64(double %80, double %87, double\l... 0x3FC5555555555511)\l  %89 = tail call double @llvm.fma.f64(double %80, double %88, double\l... 0x3FE000000000000B)\l  %90 = tail call double @llvm.fma.f64(double %80, double %89, double\l... 1.000000e+00)\l  %91 = tail call double @llvm.fma.f64(double %80, double %90, double\l... 1.000000e+00)\l  %92 = fptosi double %77 to i32\l  %93 = tail call double @llvm.amdgcn.ldexp.f64(double %91, i32 %92)\l  %94 = fcmp ogt double %75, 1.024000e+03\l  %95 = select i1 %94, double 0x7FF0000000000000, double %93\l  %96 = fcmp olt double %75, -1.075000e+03\l  %97 = select i1 %96, double 0.000000e+00, double %95\l  %98 = fmul contract double %72, %97\l  %99 = fadd contract double %65, %98\l  %100 = sext i32 %69 to i64\l  %101 = getelementptr inbounds double, double addrspace(1)* %6, i64 %100\l  %102 = load double, double addrspace(1)* %101, align 8, !tbaa !7\l  %103 = getelementptr inbounds double, double addrspace(1)* %7, i64 %100\l  %104 = load double, double addrspace(1)* %103, align 8, !tbaa !7\l  %105 = fmul contract double %26, %104\l  %106 = fmul double %105, 0x3FF71547652B82FE\l  %107 = tail call double @llvm.rint.f64(double %106)\l  %108 = fneg double %107\l  %109 = tail call double @llvm.fma.f64(double %108, double\l... 0x3FE62E42FEFA39EF, double %105)\l  %110 = tail call double @llvm.fma.f64(double %108, double\l... 0x3C7ABC9E3B39803F, double %109)\l  %111 = tail call double @llvm.fma.f64(double %110, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %112 = tail call double @llvm.fma.f64(double %110, double %111, double\l... 0x3EC71DEE623FDE64)\l  %113 = tail call double @llvm.fma.f64(double %110, double %112, double\l... 0x3EFA01997C89E6B0)\l  %114 = tail call double @llvm.fma.f64(double %110, double %113, double\l... 0x3F2A01A014761F6E)\l  %115 = tail call double @llvm.fma.f64(double %110, double %114, double\l... 0x3F56C16C1852B7B0)\l  %116 = tail call double @llvm.fma.f64(double %110, double %115, double\l... 0x3F81111111122322)\l  %117 = tail call double @llvm.fma.f64(double %110, double %116, double\l... 0x3FA55555555502A1)\l  %118 = tail call double @llvm.fma.f64(double %110, double %117, double\l... 0x3FC5555555555511)\l  %119 = tail call double @llvm.fma.f64(double %110, double %118, double\l... 0x3FE000000000000B)\l  %120 = tail call double @llvm.fma.f64(double %110, double %119, double\l... 1.000000e+00)\l  %121 = tail call double @llvm.fma.f64(double %110, double %120, double\l... 1.000000e+00)\l  %122 = fptosi double %107 to i32\l  %123 = tail call double @llvm.amdgcn.ldexp.f64(double %121, i32 %122)\l  %124 = fcmp ogt double %105, 1.024000e+03\l  %125 = select i1 %124, double 0x7FF0000000000000, double %123\l  %126 = fcmp olt double %105, -1.075000e+03\l  %127 = select i1 %126, double 0.000000e+00, double %125\l  %128 = fmul contract double %102, %127\l  %129 = fadd contract double %67, %128\l  %130 = add nsw i32 %68, 1\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds double, double addrspace(1)* %6, i64 %131\l  %133 = load double, double addrspace(1)* %132, align 8, !tbaa !7\l  %134 = getelementptr inbounds double, double addrspace(1)* %7, i64 %131\l  %135 = load double, double addrspace(1)* %134, align 8, !tbaa !7\l  %136 = fmul contract double %26, %135\l  %137 = fmul double %136, 0x3FF71547652B82FE\l  %138 = tail call double @llvm.rint.f64(double %137)\l  %139 = fneg double %138\l  %140 = tail call double @llvm.fma.f64(double %139, double\l... 0x3FE62E42FEFA39EF, double %136)\l  %141 = tail call double @llvm.fma.f64(double %139, double\l... 0x3C7ABC9E3B39803F, double %140)\l  %142 = tail call double @llvm.fma.f64(double %141, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %143 = tail call double @llvm.fma.f64(double %141, double %142, double\l... 0x3EC71DEE623FDE64)\l  %144 = tail call double @llvm.fma.f64(double %141, double %143, double\l... 0x3EFA01997C89E6B0)\l  %145 = tail call double @llvm.fma.f64(double %141, double %144, double\l... 0x3F2A01A014761F6E)\l  %146 = tail call double @llvm.fma.f64(double %141, double %145, double\l... 0x3F56C16C1852B7B0)\l  %147 = tail call double @llvm.fma.f64(double %141, double %146, double\l... 0x3F81111111122322)\l  %148 = tail call double @llvm.fma.f64(double %141, double %147, double\l... 0x3FA55555555502A1)\l  %149 = tail call double @llvm.fma.f64(double %141, double %148, double\l... 0x3FC5555555555511)\l  %150 = tail call double @llvm.fma.f64(double %141, double %149, double\l... 0x3FE000000000000B)\l  %151 = tail call double @llvm.fma.f64(double %141, double %150, double\l... 1.000000e+00)\l  %152 = tail call double @llvm.fma.f64(double %141, double %151, double\l... 1.000000e+00)\l  %153 = fptosi double %138 to i32\l  %154 = tail call double @llvm.amdgcn.ldexp.f64(double %152, i32 %153)\l  %155 = fcmp ogt double %136, 1.024000e+03\l  %156 = select i1 %155, double 0x7FF0000000000000, double %154\l  %157 = fcmp olt double %136, -1.075000e+03\l  %158 = select i1 %157, double 0.000000e+00, double %156\l  %159 = fmul contract double %133, %158\l  %160 = fadd contract double %99, %159\l  %161 = add nsw i32 %69, 1\l  %162 = sext i32 %161 to i64\l  %163 = getelementptr inbounds double, double addrspace(1)* %6, i64 %162\l  %164 = load double, double addrspace(1)* %163, align 8, !tbaa !7\l  %165 = getelementptr inbounds double, double addrspace(1)* %7, i64 %162\l  %166 = load double, double addrspace(1)* %165, align 8, !tbaa !7\l  %167 = fmul contract double %26, %166\l  %168 = fmul double %167, 0x3FF71547652B82FE\l  %169 = tail call double @llvm.rint.f64(double %168)\l  %170 = fneg double %169\l  %171 = tail call double @llvm.fma.f64(double %170, double\l... 0x3FE62E42FEFA39EF, double %167)\l  %172 = tail call double @llvm.fma.f64(double %170, double\l... 0x3C7ABC9E3B39803F, double %171)\l  %173 = tail call double @llvm.fma.f64(double %172, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %174 = tail call double @llvm.fma.f64(double %172, double %173, double\l... 0x3EC71DEE623FDE64)\l  %175 = tail call double @llvm.fma.f64(double %172, double %174, double\l... 0x3EFA01997C89E6B0)\l  %176 = tail call double @llvm.fma.f64(double %172, double %175, double\l... 0x3F2A01A014761F6E)\l  %177 = tail call double @llvm.fma.f64(double %172, double %176, double\l... 0x3F56C16C1852B7B0)\l  %178 = tail call double @llvm.fma.f64(double %172, double %177, double\l... 0x3F81111111122322)\l  %179 = tail call double @llvm.fma.f64(double %172, double %178, double\l... 0x3FA55555555502A1)\l  %180 = tail call double @llvm.fma.f64(double %172, double %179, double\l... 0x3FC5555555555511)\l  %181 = tail call double @llvm.fma.f64(double %172, double %180, double\l... 0x3FE000000000000B)\l  %182 = tail call double @llvm.fma.f64(double %172, double %181, double\l... 1.000000e+00)\l  %183 = tail call double @llvm.fma.f64(double %172, double %182, double\l... 1.000000e+00)\l  %184 = fptosi double %169 to i32\l  %185 = tail call double @llvm.amdgcn.ldexp.f64(double %183, i32 %184)\l  %186 = fcmp ogt double %167, 1.024000e+03\l  %187 = select i1 %186, double 0x7FF0000000000000, double %185\l  %188 = fcmp olt double %167, -1.075000e+03\l  %189 = select i1 %188, double 0.000000e+00, double %187\l  %190 = fmul contract double %164, %189\l  %191 = fadd contract double %129, %190\l  %192 = add nsw i32 %68, 2\l  %193 = sext i32 %192 to i64\l  %194 = getelementptr inbounds double, double addrspace(1)* %6, i64 %193\l  %195 = load double, double addrspace(1)* %194, align 8, !tbaa !7\l  %196 = getelementptr inbounds double, double addrspace(1)* %7, i64 %193\l  %197 = load double, double addrspace(1)* %196, align 8, !tbaa !7\l  %198 = fmul contract double %26, %197\l  %199 = fmul double %198, 0x3FF71547652B82FE\l  %200 = tail call double @llvm.rint.f64(double %199)\l  %201 = fneg double %200\l  %202 = tail call double @llvm.fma.f64(double %201, double\l... 0x3FE62E42FEFA39EF, double %198)\l  %203 = tail call double @llvm.fma.f64(double %201, double\l... 0x3C7ABC9E3B39803F, double %202)\l  %204 = tail call double @llvm.fma.f64(double %203, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %205 = tail call double @llvm.fma.f64(double %203, double %204, double\l... 0x3EC71DEE623FDE64)\l  %206 = tail call double @llvm.fma.f64(double %203, double %205, double\l... 0x3EFA01997C89E6B0)\l  %207 = tail call double @llvm.fma.f64(double %203, double %206, double\l... 0x3F2A01A014761F6E)\l  %208 = tail call double @llvm.fma.f64(double %203, double %207, double\l... 0x3F56C16C1852B7B0)\l  %209 = tail call double @llvm.fma.f64(double %203, double %208, double\l... 0x3F81111111122322)\l  %210 = tail call double @llvm.fma.f64(double %203, double %209, double\l... 0x3FA55555555502A1)\l  %211 = tail call double @llvm.fma.f64(double %203, double %210, double\l... 0x3FC5555555555511)\l  %212 = tail call double @llvm.fma.f64(double %203, double %211, double\l... 0x3FE000000000000B)\l  %213 = tail call double @llvm.fma.f64(double %203, double %212, double\l... 1.000000e+00)\l  %214 = tail call double @llvm.fma.f64(double %203, double %213, double\l... 1.000000e+00)\l  %215 = fptosi double %200 to i32\l  %216 = tail call double @llvm.amdgcn.ldexp.f64(double %214, i32 %215)\l  %217 = fcmp ogt double %198, 1.024000e+03\l  %218 = select i1 %217, double 0x7FF0000000000000, double %216\l  %219 = fcmp olt double %198, -1.075000e+03\l  %220 = select i1 %219, double 0.000000e+00, double %218\l  %221 = fmul contract double %195, %220\l  %222 = fadd contract double %160, %221\l  %223 = add nsw i32 %69, 2\l  %224 = sext i32 %223 to i64\l  %225 = getelementptr inbounds double, double addrspace(1)* %6, i64 %224\l  %226 = load double, double addrspace(1)* %225, align 8, !tbaa !7\l  %227 = getelementptr inbounds double, double addrspace(1)* %7, i64 %224\l  %228 = load double, double addrspace(1)* %227, align 8, !tbaa !7\l  %229 = fmul contract double %26, %228\l  %230 = fmul double %229, 0x3FF71547652B82FE\l  %231 = tail call double @llvm.rint.f64(double %230)\l  %232 = fneg double %231\l  %233 = tail call double @llvm.fma.f64(double %232, double\l... 0x3FE62E42FEFA39EF, double %229)\l  %234 = tail call double @llvm.fma.f64(double %232, double\l... 0x3C7ABC9E3B39803F, double %233)\l  %235 = tail call double @llvm.fma.f64(double %234, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %236 = tail call double @llvm.fma.f64(double %234, double %235, double\l... 0x3EC71DEE623FDE64)\l  %237 = tail call double @llvm.fma.f64(double %234, double %236, double\l... 0x3EFA01997C89E6B0)\l  %238 = tail call double @llvm.fma.f64(double %234, double %237, double\l... 0x3F2A01A014761F6E)\l  %239 = tail call double @llvm.fma.f64(double %234, double %238, double\l... 0x3F56C16C1852B7B0)\l  %240 = tail call double @llvm.fma.f64(double %234, double %239, double\l... 0x3F81111111122322)\l  %241 = tail call double @llvm.fma.f64(double %234, double %240, double\l... 0x3FA55555555502A1)\l  %242 = tail call double @llvm.fma.f64(double %234, double %241, double\l... 0x3FC5555555555511)\l  %243 = tail call double @llvm.fma.f64(double %234, double %242, double\l... 0x3FE000000000000B)\l  %244 = tail call double @llvm.fma.f64(double %234, double %243, double\l... 1.000000e+00)\l  %245 = tail call double @llvm.fma.f64(double %234, double %244, double\l... 1.000000e+00)\l  %246 = fptosi double %231 to i32\l  %247 = tail call double @llvm.amdgcn.ldexp.f64(double %245, i32 %246)\l  %248 = fcmp ogt double %229, 1.024000e+03\l  %249 = select i1 %248, double 0x7FF0000000000000, double %247\l  %250 = fcmp olt double %229, -1.075000e+03\l  %251 = select i1 %250, double 0.000000e+00, double %249\l  %252 = fmul contract double %226, %251\l  %253 = fadd contract double %191, %252\l  %254 = add nsw i32 %68, 3\l  %255 = sext i32 %254 to i64\l  %256 = getelementptr inbounds double, double addrspace(1)* %6, i64 %255\l  %257 = load double, double addrspace(1)* %256, align 8, !tbaa !7\l  %258 = getelementptr inbounds double, double addrspace(1)* %7, i64 %255\l  %259 = load double, double addrspace(1)* %258, align 8, !tbaa !7\l  %260 = fmul contract double %26, %259\l  %261 = fmul double %260, 0x3FF71547652B82FE\l  %262 = tail call double @llvm.rint.f64(double %261)\l  %263 = fneg double %262\l  %264 = tail call double @llvm.fma.f64(double %263, double\l... 0x3FE62E42FEFA39EF, double %260)\l  %265 = tail call double @llvm.fma.f64(double %263, double\l... 0x3C7ABC9E3B39803F, double %264)\l  %266 = tail call double @llvm.fma.f64(double %265, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %267 = tail call double @llvm.fma.f64(double %265, double %266, double\l... 0x3EC71DEE623FDE64)\l  %268 = tail call double @llvm.fma.f64(double %265, double %267, double\l... 0x3EFA01997C89E6B0)\l  %269 = tail call double @llvm.fma.f64(double %265, double %268, double\l... 0x3F2A01A014761F6E)\l  %270 = tail call double @llvm.fma.f64(double %265, double %269, double\l... 0x3F56C16C1852B7B0)\l  %271 = tail call double @llvm.fma.f64(double %265, double %270, double\l... 0x3F81111111122322)\l  %272 = tail call double @llvm.fma.f64(double %265, double %271, double\l... 0x3FA55555555502A1)\l  %273 = tail call double @llvm.fma.f64(double %265, double %272, double\l... 0x3FC5555555555511)\l  %274 = tail call double @llvm.fma.f64(double %265, double %273, double\l... 0x3FE000000000000B)\l  %275 = tail call double @llvm.fma.f64(double %265, double %274, double\l... 1.000000e+00)\l  %276 = tail call double @llvm.fma.f64(double %265, double %275, double\l... 1.000000e+00)\l  %277 = fptosi double %262 to i32\l  %278 = tail call double @llvm.amdgcn.ldexp.f64(double %276, i32 %277)\l  %279 = fcmp ogt double %260, 1.024000e+03\l  %280 = select i1 %279, double 0x7FF0000000000000, double %278\l  %281 = fcmp olt double %260, -1.075000e+03\l  %282 = select i1 %281, double 0.000000e+00, double %280\l  %283 = fmul contract double %257, %282\l  %284 = fadd contract double %222, %283\l  %285 = add nsw i32 %69, 3\l  %286 = sext i32 %285 to i64\l  %287 = getelementptr inbounds double, double addrspace(1)* %6, i64 %286\l  %288 = load double, double addrspace(1)* %287, align 8, !tbaa !7\l  %289 = getelementptr inbounds double, double addrspace(1)* %7, i64 %286\l  %290 = load double, double addrspace(1)* %289, align 8, !tbaa !7\l  %291 = fmul contract double %26, %290\l  %292 = fmul double %291, 0x3FF71547652B82FE\l  %293 = tail call double @llvm.rint.f64(double %292)\l  %294 = fneg double %293\l  %295 = tail call double @llvm.fma.f64(double %294, double\l... 0x3FE62E42FEFA39EF, double %291)\l  %296 = tail call double @llvm.fma.f64(double %294, double\l... 0x3C7ABC9E3B39803F, double %295)\l  %297 = tail call double @llvm.fma.f64(double %296, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %298 = tail call double @llvm.fma.f64(double %296, double %297, double\l... 0x3EC71DEE623FDE64)\l  %299 = tail call double @llvm.fma.f64(double %296, double %298, double\l... 0x3EFA01997C89E6B0)\l  %300 = tail call double @llvm.fma.f64(double %296, double %299, double\l... 0x3F2A01A014761F6E)\l  %301 = tail call double @llvm.fma.f64(double %296, double %300, double\l... 0x3F56C16C1852B7B0)\l  %302 = tail call double @llvm.fma.f64(double %296, double %301, double\l... 0x3F81111111122322)\l  %303 = tail call double @llvm.fma.f64(double %296, double %302, double\l... 0x3FA55555555502A1)\l  %304 = tail call double @llvm.fma.f64(double %296, double %303, double\l... 0x3FC5555555555511)\l  %305 = tail call double @llvm.fma.f64(double %296, double %304, double\l... 0x3FE000000000000B)\l  %306 = tail call double @llvm.fma.f64(double %296, double %305, double\l... 1.000000e+00)\l  %307 = tail call double @llvm.fma.f64(double %296, double %306, double\l... 1.000000e+00)\l  %308 = fptosi double %293 to i32\l  %309 = tail call double @llvm.amdgcn.ldexp.f64(double %307, i32 %308)\l  %310 = fcmp ogt double %291, 1.024000e+03\l  %311 = select i1 %310, double 0x7FF0000000000000, double %309\l  %312 = fcmp olt double %291, -1.075000e+03\l  %313 = select i1 %312, double 0.000000e+00, double %311\l  %314 = fmul contract double %288, %313\l  %315 = fadd contract double %253, %314\l  %316 = add nsw i32 %68, 4\l  %317 = sext i32 %316 to i64\l  %318 = getelementptr inbounds double, double addrspace(1)* %6, i64 %317\l  %319 = load double, double addrspace(1)* %318, align 8, !tbaa !7\l  %320 = getelementptr inbounds double, double addrspace(1)* %7, i64 %317\l  %321 = load double, double addrspace(1)* %320, align 8, !tbaa !7\l  %322 = fmul contract double %26, %321\l  %323 = fmul double %322, 0x3FF71547652B82FE\l  %324 = tail call double @llvm.rint.f64(double %323)\l  %325 = fneg double %324\l  %326 = tail call double @llvm.fma.f64(double %325, double\l... 0x3FE62E42FEFA39EF, double %322)\l  %327 = tail call double @llvm.fma.f64(double %325, double\l... 0x3C7ABC9E3B39803F, double %326)\l  %328 = tail call double @llvm.fma.f64(double %327, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %329 = tail call double @llvm.fma.f64(double %327, double %328, double\l... 0x3EC71DEE623FDE64)\l  %330 = tail call double @llvm.fma.f64(double %327, double %329, double\l... 0x3EFA01997C89E6B0)\l  %331 = tail call double @llvm.fma.f64(double %327, double %330, double\l... 0x3F2A01A014761F6E)\l  %332 = tail call double @llvm.fma.f64(double %327, double %331, double\l... 0x3F56C16C1852B7B0)\l  %333 = tail call double @llvm.fma.f64(double %327, double %332, double\l... 0x3F81111111122322)\l  %334 = tail call double @llvm.fma.f64(double %327, double %333, double\l... 0x3FA55555555502A1)\l  %335 = tail call double @llvm.fma.f64(double %327, double %334, double\l... 0x3FC5555555555511)\l  %336 = tail call double @llvm.fma.f64(double %327, double %335, double\l... 0x3FE000000000000B)\l  %337 = tail call double @llvm.fma.f64(double %327, double %336, double\l... 1.000000e+00)\l  %338 = tail call double @llvm.fma.f64(double %327, double %337, double\l... 1.000000e+00)\l  %339 = fptosi double %324 to i32\l  %340 = tail call double @llvm.amdgcn.ldexp.f64(double %338, i32 %339)\l  %341 = fcmp ogt double %322, 1.024000e+03\l  %342 = select i1 %341, double 0x7FF0000000000000, double %340\l  %343 = fcmp olt double %322, -1.075000e+03\l  %344 = select i1 %343, double 0.000000e+00, double %342\l  %345 = fmul contract double %319, %344\l  %346 = fadd contract double %284, %345\l  %347 = add nsw i32 %69, 4\l  %348 = sext i32 %347 to i64\l  %349 = getelementptr inbounds double, double addrspace(1)* %6, i64 %348\l  %350 = load double, double addrspace(1)* %349, align 8, !tbaa !7\l  %351 = getelementptr inbounds double, double addrspace(1)* %7, i64 %348\l  %352 = load double, double addrspace(1)* %351, align 8, !tbaa !7\l  %353 = fmul contract double %26, %352\l  %354 = fmul double %353, 0x3FF71547652B82FE\l  %355 = tail call double @llvm.rint.f64(double %354)\l  %356 = fneg double %355\l  %357 = tail call double @llvm.fma.f64(double %356, double\l... 0x3FE62E42FEFA39EF, double %353)\l  %358 = tail call double @llvm.fma.f64(double %356, double\l... 0x3C7ABC9E3B39803F, double %357)\l  %359 = tail call double @llvm.fma.f64(double %358, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %360 = tail call double @llvm.fma.f64(double %358, double %359, double\l... 0x3EC71DEE623FDE64)\l  %361 = tail call double @llvm.fma.f64(double %358, double %360, double\l... 0x3EFA01997C89E6B0)\l  %362 = tail call double @llvm.fma.f64(double %358, double %361, double\l... 0x3F2A01A014761F6E)\l  %363 = tail call double @llvm.fma.f64(double %358, double %362, double\l... 0x3F56C16C1852B7B0)\l  %364 = tail call double @llvm.fma.f64(double %358, double %363, double\l... 0x3F81111111122322)\l  %365 = tail call double @llvm.fma.f64(double %358, double %364, double\l... 0x3FA55555555502A1)\l  %366 = tail call double @llvm.fma.f64(double %358, double %365, double\l... 0x3FC5555555555511)\l  %367 = tail call double @llvm.fma.f64(double %358, double %366, double\l... 0x3FE000000000000B)\l  %368 = tail call double @llvm.fma.f64(double %358, double %367, double\l... 1.000000e+00)\l  %369 = tail call double @llvm.fma.f64(double %358, double %368, double\l... 1.000000e+00)\l  %370 = fptosi double %355 to i32\l  %371 = tail call double @llvm.amdgcn.ldexp.f64(double %369, i32 %370)\l  %372 = fcmp ogt double %353, 1.024000e+03\l  %373 = select i1 %372, double 0x7FF0000000000000, double %371\l  %374 = fcmp olt double %353, -1.075000e+03\l  %375 = select i1 %374, double 0.000000e+00, double %373\l  %376 = fmul contract double %350, %375\l  %377 = fadd contract double %315, %376\l  %378 = fmul contract double %63, %346\l  %379 = fmul contract double %378, %377\l  store double %379, double addrspace(1)* %34, align 8, !tbaa !7\l  br label %380\l}"];
	Node0x5df74c0 -> Node0x5df7550;
	Node0x5df7550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%380:\l380:                                              \l  ret void\l}"];
}
