digraph "CFG for '_Z21RadixHistogram_devicePiPKimii' function" {
	label="CFG for '_Z21RadixHistogram_devicePiPKimii' function";

	Node0x4f2d510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = sext i32 %17 to i64\l  %19 = icmp ult i64 %18, %2\l  br i1 %19, label %20, label %27\l|{<s0>T|<s1>F}}"];
	Node0x4f2d510:s0 -> Node0x4f2f7f0;
	Node0x4f2d510:s1 -> Node0x4f2f880;
	Node0x4f2f7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%20:\l20:                                               \l  %21 = udiv i32 %14, %11\l  %22 = mul i32 %21, %11\l  %23 = icmp ugt i32 %14, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %11\l  br label %28\l}"];
	Node0x4f2f7f0 -> Node0x4f2fd00;
	Node0x4f2f880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%27:\l27:                                               \l  ret void\l}"];
	Node0x4f2fd00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i64 [ %18, %20 ], [ %39, %28 ]\l  %30 = trunc i64 %29 to i32\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %29\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !16\l  %33 = and i32 %32, %4\l  %34 = ashr i32 %33, %3\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %35\l  %37 = atomicrmw add i32 addrspace(1)* %36, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %38 = add i32 %26, %30\l  %39 = sext i32 %38 to i64\l  %40 = icmp ult i64 %39, %2\l  br i1 %40, label %28, label %27, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4f2fd00:s0 -> Node0x4f2fd00;
	Node0x4f2fd00:s1 -> Node0x4f2f880;
}
