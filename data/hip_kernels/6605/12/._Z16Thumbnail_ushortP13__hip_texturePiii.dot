digraph "CFG for '_Z16Thumbnail_ushortP13__hip_texturePiii' function" {
	label="CFG for '_Z16Thumbnail_ushortP13__hip_texturePiii' function";

	Node0x61c27a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %21, %3\l  %23 = icmp slt i32 %13, %2\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %72\l|{<s0>T|<s1>F}}"];
	Node0x61c27a0:s0 -> Node0x61c8a50;
	Node0x61c27a0:s1 -> Node0x61c8ae0;
	Node0x61c8a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%25:\l25:                                               \l  %26 = sitofp i32 %13 to float\l  %27 = sitofp i32 %21 to float\l  %28 = bitcast %struct.__hip_texture addrspace(1)* %0 to i32 addrspace(1)*\l  %29 = addrspacecast i32 addrspace(1)* %28 to i32 addrspace(4)*\l  %30 = getelementptr inbounds i32, i32 addrspace(4)* %29, i64 12\l  %31 = getelementptr inbounds i32, i32 addrspace(4)* %29, i64 10\l  %32 = load i32, i32 addrspace(4)* %31, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %33 = uitofp i32 %32 to float\l  %34 = getelementptr inbounds i32, i32 addrspace(4)* %29, i64 2\l  %35 = load i32, i32 addrspace(4)* %34, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %36 = lshr i32 %35, 14\l  %37 = and i32 %36, 16383\l  %38 = add nuw nsw i32 %37, 1\l  %39 = uitofp i32 %38 to float\l  %40 = load i32, i32 addrspace(4)* %30, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %41 = and i32 %40, 32768\l  %42 = icmp eq i32 %41, 0\l  %43 = select i1 %42, float %33, float 1.000000e+00\l  %44 = select i1 %42, float %39, float 1.000000e+00\l  %45 = getelementptr inbounds i32, i32 addrspace(4)* %29, i64 14\l  %46 = load i32, i32 addrspace(4)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %47 = and i32 %46, 1048576\l  %48 = icmp eq i32 %47, 0\l  %49 = bitcast i32 addrspace(4)* %30 to \<4 x i32\> addrspace(4)*\l  %50 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %49, align 16, !tbaa !11,\l... !amdgpu.noclobber !5\l  %51 = bitcast %struct.__hip_texture addrspace(1)* %0 to \<8 x i32\>\l... addrspace(1)*\l  %52 = addrspacecast \<8 x i32\> addrspace(1)* %51 to \<8 x i32\> addrspace(4)*\l  %53 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %52, align 32, !tbaa !11,\l... !amdgpu.noclobber !5\l  %54 = tail call float @llvm.amdgcn.rcp.f32(float %44)\l  %55 = fmul float %44, %27\l  %56 = tail call float @llvm.floor.f32(float %55)\l  %57 = fmul float %54, %56\l  %58 = select i1 %48, float %57, float %27\l  %59 = tail call float @llvm.amdgcn.rcp.f32(float %43)\l  %60 = fmul float %43, %26\l  %61 = tail call float @llvm.floor.f32(float %60)\l  %62 = fmul float %59, %61\l  %63 = select i1 %48, float %62, float %26\l  %64 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %63, float %58, \<8 x i32\> %53, \<4 x i32\> %50, i1 false, i32 0, i32 0)\l  %65 = bitcast float %64 to i32\l  %66 = and i32 %65, 65408\l  %67 = add nuw nsw i32 %66, 128\l  %68 = lshr i32 %67, 8\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %69\l  %71 = atomicrmw add i32 addrspace(1)* %70, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  br label %72\l}"];
	Node0x61c8a50 -> Node0x61c8ae0;
	Node0x61c8ae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  ret void\l}"];
}
