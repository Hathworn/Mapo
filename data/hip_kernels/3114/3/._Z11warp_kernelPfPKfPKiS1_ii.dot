digraph "CFG for '_Z11warp_kernelPfPKfPKiS1_ii' function" {
	label="CFG for '_Z11warp_kernelPfPKfPKiS1_ii' function";

	Node0x4bf9e40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %23, %5\l  %25 = icmp slt i32 %15, %4\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %83\l|{<s0>T|<s1>F}}"];
	Node0x4bf9e40:s0 -> Node0x4bfd8c0;
	Node0x4bf9e40:s1 -> Node0x4bfd950;
	Node0x4bfd8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%27:\l27:                                               \l  %28 = shl nsw i32 %15, 2\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %32 = mul nsw i32 %31, %5\l  %33 = add nsw i32 %32, %23\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %37 = getelementptr inbounds float, float addrspace(1)* %3, i64 %29\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %39 = fmul contract float %36, %38\l  %40 = add nuw nsw i32 %28, 1\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %44 = mul nsw i32 %43, %5\l  %45 = add nsw i32 %44, %23\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %49 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %51 = fmul contract float %48, %50\l  %52 = fadd contract float %39, %51\l  %53 = add nuw nsw i32 %28, 2\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %54\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %57 = mul nsw i32 %56, %5\l  %58 = add nsw i32 %57, %23\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %62 = getelementptr inbounds float, float addrspace(1)* %3, i64 %54\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %64 = fmul contract float %61, %63\l  %65 = fadd contract float %52, %64\l  %66 = add nuw nsw i32 %28, 3\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %70 = mul nsw i32 %69, %5\l  %71 = add nsw i32 %70, %23\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %1, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %75 = getelementptr inbounds float, float addrspace(1)* %3, i64 %67\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %77 = fmul contract float %74, %76\l  %78 = fadd contract float %65, %77\l  %79 = mul nsw i32 %15, %5\l  %80 = add nsw i32 %79, %23\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %81\l  store float %78, float addrspace(1)* %82, align 4, !tbaa !11\l  br label %83\l}"];
	Node0x4bfd8c0 -> Node0x4bfd950;
	Node0x4bfd950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  ret void\l}"];
}
