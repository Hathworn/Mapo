digraph "CFG for '_Z11tile_kernelPKfPfiii' function" {
	label="CFG for '_Z11tile_kernelPKfPfiii' function";

	Node0x60cb270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = add i32 %13, %6\l  %15 = freeze i32 %14\l  %16 = freeze i32 %3\l  %17 = sdiv i32 %15, %16\l  %18 = icmp slt i32 %17, %2\l  %19 = icmp sgt i32 %4, 0\l  %20 = select i1 %18, i1 %19, i1 false\l  br i1 %20, label %21, label %117\l|{<s0>T|<s1>F}}"];
	Node0x60cb270:s0 -> Node0x60cd4a0;
	Node0x60cb270:s1 -> Node0x60cd530;
	Node0x60cd4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%21:\l21:                                               \l  %22 = mul i32 %17, %16\l  %23 = sub i32 %15, %22\l  %24 = mul nsw i32 %17, %4\l  %25 = mul i32 %17, %3\l  %26 = add i32 %23, %25\l  %27 = mul i32 %26, %4\l  %28 = and i32 %4, 7\l  %29 = icmp ult i32 %4, 8\l  br i1 %29, label %101, label %30\l|{<s0>T|<s1>F}}"];
	Node0x60cd4a0:s0 -> Node0x60cdb50;
	Node0x60cd4a0:s1 -> Node0x60cdba0;
	Node0x60cdba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%30:\l30:                                               \l  %31 = and i32 %4, -8\l  br label %32\l}"];
	Node0x60cdba0 -> Node0x60cdda0;
	Node0x60cdda0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = phi i32 [ 0, %30 ], [ %98, %32 ]\l  %34 = phi i32 [ 0, %30 ], [ %99, %32 ]\l  %35 = add nsw i32 %33, %24\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7\l  %39 = add i32 %33, %27\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  store float %38, float addrspace(1)* %41, align 4, !tbaa !7\l  %42 = or i32 %33, 1\l  %43 = add nsw i32 %42, %24\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %47 = add i32 %42, %27\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %1, i64 %48\l  store float %46, float addrspace(1)* %49, align 4, !tbaa !7\l  %50 = or i32 %33, 2\l  %51 = add nsw i32 %50, %24\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  %55 = add i32 %50, %27\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  store float %54, float addrspace(1)* %57, align 4, !tbaa !7\l  %58 = or i32 %33, 3\l  %59 = add nsw i32 %58, %24\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %63 = add i32 %58, %27\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  store float %62, float addrspace(1)* %65, align 4, !tbaa !7\l  %66 = or i32 %33, 4\l  %67 = add nsw i32 %66, %24\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7\l  %71 = add i32 %66, %27\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %1, i64 %72\l  store float %70, float addrspace(1)* %73, align 4, !tbaa !7\l  %74 = or i32 %33, 5\l  %75 = add nsw i32 %74, %24\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !7\l  %79 = add i32 %74, %27\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  store float %78, float addrspace(1)* %81, align 4, !tbaa !7\l  %82 = or i32 %33, 6\l  %83 = add nsw i32 %82, %24\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %0, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = add i32 %82, %27\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %1, i64 %88\l  store float %86, float addrspace(1)* %89, align 4, !tbaa !7\l  %90 = or i32 %33, 7\l  %91 = add nsw i32 %90, %24\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %0, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7\l  %95 = add i32 %90, %27\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %1, i64 %96\l  store float %94, float addrspace(1)* %97, align 4, !tbaa !7\l  %98 = add nuw nsw i32 %33, 8\l  %99 = add i32 %34, 8\l  %100 = icmp eq i32 %99, %31\l  br i1 %100, label %101, label %32, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x60cdda0:s0 -> Node0x60cdb50;
	Node0x60cdda0:s1 -> Node0x60cdda0;
	Node0x60cdb50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%101:\l101:                                              \l  %102 = phi i32 [ 0, %21 ], [ %98, %32 ]\l  %103 = icmp eq i32 %28, 0\l  br i1 %103, label %117, label %104\l|{<s0>T|<s1>F}}"];
	Node0x60cdb50:s0 -> Node0x60cd530;
	Node0x60cdb50:s1 -> Node0x60d1670;
	Node0x60d1670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%104:\l104:                                              \l  %105 = phi i32 [ %114, %104 ], [ %102, %101 ]\l  %106 = phi i32 [ %115, %104 ], [ 0, %101 ]\l  %107 = add nsw i32 %105, %24\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %0, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !7\l  %111 = add i32 %105, %27\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %1, i64 %112\l  store float %110, float addrspace(1)* %113, align 4, !tbaa !7\l  %114 = add nuw nsw i32 %105, 1\l  %115 = add i32 %106, 1\l  %116 = icmp eq i32 %115, %28\l  br i1 %116, label %117, label %104, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x60d1670:s0 -> Node0x60cd530;
	Node0x60d1670:s1 -> Node0x60d1670;
	Node0x60cd530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%117:\l117:                                              \l  ret void\l}"];
}
