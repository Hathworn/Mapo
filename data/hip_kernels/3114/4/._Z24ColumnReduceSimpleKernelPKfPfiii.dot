digraph "CFG for '_Z24ColumnReduceSimpleKernelPKfPfiii' function" {
	label="CFG for '_Z24ColumnReduceSimpleKernelPKfPfiii' function";

	Node0x5a28320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = add i32 %13, %6\l  %15 = freeze i32 %14\l  %16 = freeze i32 %4\l  %17 = sdiv i32 %15, %16\l  %18 = mul i32 %17, %16\l  %19 = sub i32 %15, %18\l  %20 = icmp slt i32 %17, %2\l  br i1 %20, label %21, label %126\l|{<s0>T|<s1>F}}"];
	Node0x5a28320:s0 -> Node0x5a2a540;
	Node0x5a28320:s1 -> Node0x5a2a5d0;
	Node0x5a2a540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%21:\l21:                                               \l  %22 = mul i32 %17, %4\l  %23 = mul i32 %22, %3\l  %24 = add i32 %19, %23\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %0, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %28 = add i32 %24, %4\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %0, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %32 = fadd contract float %27, %31\l  %33 = icmp sgt i32 %3, 2\l  br i1 %33, label %34, label %59\l|{<s0>T|<s1>F}}"];
	Node0x5a2a540:s0 -> Node0x5a2a310;
	Node0x5a2a540:s1 -> Node0x5a2bd10;
	Node0x5a2a310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%34:\l34:                                               \l  %35 = add i32 %3, -2\l  %36 = add i32 %3, -3\l  %37 = and i32 %35, 7\l  %38 = icmp ult i32 %36, 7\l  br i1 %38, label %41, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5a2a310:s0 -> Node0x5a2c0f0;
	Node0x5a2a310:s1 -> Node0x5a2c140;
	Node0x5a2c140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%39:\l39:                                               \l  %40 = and i32 %35, -8\l  br label %64\l}"];
	Node0x5a2c140 -> Node0x5a2c340;
	Node0x5a2c0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%41:\l41:                                               \l  %42 = phi float [ undef, %34 ], [ %122, %64 ]\l  %43 = phi i32 [ 2, %34 ], [ %123, %64 ]\l  %44 = phi float [ %32, %34 ], [ %122, %64 ]\l  %45 = icmp eq i32 %37, 0\l  br i1 %45, label %59, label %46\l|{<s0>T|<s1>F}}"];
	Node0x5a2c0f0:s0 -> Node0x5a2bd10;
	Node0x5a2c0f0:s1 -> Node0x5a2cb90;
	Node0x5a2cb90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i32 [ %56, %46 ], [ %43, %41 ]\l  %48 = phi float [ %55, %46 ], [ %44, %41 ]\l  %49 = phi i32 [ %57, %46 ], [ 0, %41 ]\l  %50 = mul nsw i32 %47, %4\l  %51 = add i32 %24, %50\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %55 = fadd contract float %48, %54\l  %56 = add nuw nsw i32 %47, 1\l  %57 = add i32 %49, 1\l  %58 = icmp eq i32 %57, %37\l  br i1 %58, label %59, label %46, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5a2cb90:s0 -> Node0x5a2bd10;
	Node0x5a2cb90:s1 -> Node0x5a2cb90;
	Node0x5a2bd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%59:\l59:                                               \l  %60 = phi float [ %32, %21 ], [ %42, %41 ], [ %55, %46 ]\l  %61 = add nsw i32 %22, %19\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %1, i64 %62\l  store float %60, float addrspace(1)* %63, align 4, !tbaa !7\l  br label %126\l}"];
	Node0x5a2bd10 -> Node0x5a2a5d0;
	Node0x5a2c340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%64:\l64:                                               \l  %65 = phi i32 [ 2, %39 ], [ %123, %64 ]\l  %66 = phi float [ %32, %39 ], [ %122, %64 ]\l  %67 = phi i32 [ 0, %39 ], [ %124, %64 ]\l  %68 = mul nsw i32 %65, %4\l  %69 = add i32 %24, %68\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %73 = fadd contract float %66, %72\l  %74 = or i32 %65, 1\l  %75 = mul nsw i32 %74, %4\l  %76 = add i32 %24, %75\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %80 = fadd contract float %73, %79\l  %81 = add nuw nsw i32 %65, 2\l  %82 = mul nsw i32 %81, %4\l  %83 = add i32 %24, %82\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %0, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %87 = fadd contract float %80, %86\l  %88 = add nuw nsw i32 %65, 3\l  %89 = mul nsw i32 %88, %4\l  %90 = add i32 %24, %89\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %94 = fadd contract float %87, %93\l  %95 = add nuw nsw i32 %65, 4\l  %96 = mul nsw i32 %95, %4\l  %97 = add i32 %24, %96\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %101 = fadd contract float %94, %100\l  %102 = add nuw nsw i32 %65, 5\l  %103 = mul nsw i32 %102, %4\l  %104 = add i32 %24, %103\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %0, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %108 = fadd contract float %101, %107\l  %109 = add nuw nsw i32 %65, 6\l  %110 = mul nsw i32 %109, %4\l  %111 = add i32 %24, %110\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %0, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %115 = fadd contract float %108, %114\l  %116 = add nuw nsw i32 %65, 7\l  %117 = mul nsw i32 %116, %4\l  %118 = add i32 %24, %117\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %0, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %122 = fadd contract float %115, %121\l  %123 = add nuw nsw i32 %65, 8\l  %124 = add i32 %67, 8\l  %125 = icmp eq i32 %124, %40\l  br i1 %125, label %41, label %64, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5a2c340:s0 -> Node0x5a2c0f0;
	Node0x5a2c340:s1 -> Node0x5a2c340;
	Node0x5a2a5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%126:\l126:                                              \l  ret void\l}"];
}
