digraph "CFG for '_Z6smoothPhS_ii' function" {
	label="CFG for '_Z6smoothPhS_ii' function";

	Node0x4d2a560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = mul nsw i32 %3, %2\l  %15 = icmp slt i32 %13, %14\l  br i1 %15, label %16, label %146\l|{<s0>T|<s1>F}}"];
	Node0x4d2a560:s0 -> Node0x4d2c510;
	Node0x4d2a560:s1 -> Node0x4d2c5a0;
	Node0x4d2c510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%16:\l16:                                               \l  %17 = sext i32 %13 to i64\l  %18 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %17\l  %19 = load i8, i8 addrspace(1)* %18, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %20 = add nsw i32 %3, 4\l  %21 = add nsw i32 %13, %20\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %22\l  %24 = load i8, i8 addrspace(1)* %23, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %25 = add i8 %24, %19\l  %26 = shl nsw i32 %20, 1\l  %27 = add nsw i32 %13, %26\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %28\l  %30 = load i8, i8 addrspace(1)* %29, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %31 = add i8 %25, %30\l  %32 = mul nsw i32 %20, 3\l  %33 = add nsw i32 %13, %32\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %34\l  %36 = load i8, i8 addrspace(1)* %35, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %37 = add i8 %31, %36\l  %38 = shl nsw i32 %20, 2\l  %39 = add nsw i32 %13, %38\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %40\l  %42 = load i8, i8 addrspace(1)* %41, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %43 = add i8 %37, %42\l  %44 = add nsw i32 %13, 1\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %45\l  %47 = load i8, i8 addrspace(1)* %46, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %48 = add i8 %43, %47\l  %49 = add nsw i32 %21, 1\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %50\l  %52 = load i8, i8 addrspace(1)* %51, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %53 = add i8 %48, %52\l  %54 = add nsw i32 %27, 1\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %55\l  %57 = load i8, i8 addrspace(1)* %56, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %58 = add i8 %53, %57\l  %59 = add nsw i32 %33, 1\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %60\l  %62 = load i8, i8 addrspace(1)* %61, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %63 = add i8 %58, %62\l  %64 = add nsw i32 %39, 1\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %65\l  %67 = load i8, i8 addrspace(1)* %66, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %68 = add i8 %63, %67\l  %69 = add nsw i32 %13, 2\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %70\l  %72 = load i8, i8 addrspace(1)* %71, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %73 = add i8 %68, %72\l  %74 = add nsw i32 %21, 2\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %75\l  %77 = load i8, i8 addrspace(1)* %76, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %78 = add i8 %73, %77\l  %79 = add nsw i32 %27, 2\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %80\l  %82 = load i8, i8 addrspace(1)* %81, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %83 = add i8 %78, %82\l  %84 = add nsw i32 %33, 2\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %85\l  %87 = load i8, i8 addrspace(1)* %86, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %88 = add i8 %83, %87\l  %89 = add nsw i32 %39, 2\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %90\l  %92 = load i8, i8 addrspace(1)* %91, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %93 = add i8 %88, %92\l  %94 = add nsw i32 %13, 3\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %95\l  %97 = load i8, i8 addrspace(1)* %96, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %98 = add i8 %93, %97\l  %99 = add nsw i32 %21, 3\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %100\l  %102 = load i8, i8 addrspace(1)* %101, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %103 = add i8 %98, %102\l  %104 = add nsw i32 %27, 3\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %105\l  %107 = load i8, i8 addrspace(1)* %106, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %108 = add i8 %103, %107\l  %109 = add nsw i32 %33, 3\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %110\l  %112 = load i8, i8 addrspace(1)* %111, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %113 = add i8 %108, %112\l  %114 = add nsw i32 %39, 3\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %115\l  %117 = load i8, i8 addrspace(1)* %116, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %118 = add i8 %113, %117\l  %119 = add nsw i32 %13, 4\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %120\l  %122 = load i8, i8 addrspace(1)* %121, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %123 = add i8 %118, %122\l  %124 = add nsw i32 %21, 4\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %125\l  %127 = load i8, i8 addrspace(1)* %126, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %128 = add i8 %123, %127\l  %129 = add nsw i32 %27, 4\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %130\l  %132 = load i8, i8 addrspace(1)* %131, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %133 = add i8 %128, %132\l  %134 = add nsw i32 %33, 4\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %135\l  %137 = load i8, i8 addrspace(1)* %136, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %138 = add i8 %133, %137\l  %139 = add nsw i32 %39, 4\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %140\l  %142 = load i8, i8 addrspace(1)* %141, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %143 = add i8 %138, %142\l  %144 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %17\l  %145 = udiv i8 %143, 25\l  store i8 %145, i8 addrspace(1)* %144, align 1, !tbaa !7\l  br label %146\l}"];
	Node0x4d2c510 -> Node0x4d2c5a0;
	Node0x4d2c5a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%146:\l146:                                              \l  ret void\l}"];
}
