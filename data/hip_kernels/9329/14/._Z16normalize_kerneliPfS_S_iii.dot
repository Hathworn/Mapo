digraph "CFG for '_Z16normalize_kerneliPfS_S_iii' function" {
	label="CFG for '_Z16normalize_kerneliPfS_S_iii' function";

	Node0x45e9ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !4\l  %14 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !13, !invariant.load\l... !14\l  %17 = zext i16 %16 to i32\l  %18 = udiv i32 %13, %17\l  %19 = mul i32 %18, %17\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %9\l  %24 = add i32 %23, %8\l  %25 = mul i32 %24, %17\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %27 = add i32 %25, %26\l  %28 = icmp slt i32 %27, %0\l  br i1 %28, label %29, label %64\l|{<s0>T|<s1>F}}"];
	Node0x45e9ca0:s0 -> Node0x45ec4d0;
	Node0x45e9ca0:s1 -> Node0x45ec560;
	Node0x45ec4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = sdiv i32 %27, %6\l  %31 = srem i32 %30, %5\l  %32 = sext i32 %27 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %35 = sext i32 %31 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %2, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %38 = fsub contract float %34, %37\l  %39 = getelementptr inbounds float, float addrspace(1)* %3, i64 %35\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %41 = fcmp olt float %40, 0x39F0000000000000\l  %42 = select i1 %41, float 0x41F0000000000000, float 1.000000e+00\l  %43 = fmul float %40, %42\l  %44 = tail call float @llvm.sqrt.f32(float %43)\l  %45 = bitcast float %44 to i32\l  %46 = add nsw i32 %45, -1\l  %47 = bitcast i32 %46 to float\l  %48 = add nsw i32 %45, 1\l  %49 = bitcast i32 %48 to float\l  %50 = tail call i1 @llvm.amdgcn.class.f32(float %43, i32 608)\l  %51 = select i1 %41, float 0x3EF0000000000000, float 1.000000e+00\l  %52 = fneg float %49\l  %53 = tail call float @llvm.fma.f32(float %52, float %44, float %43)\l  %54 = fcmp ogt float %53, 0.000000e+00\l  %55 = fneg float %47\l  %56 = tail call float @llvm.fma.f32(float %55, float %44, float %43)\l  %57 = fcmp ole float %56, 0.000000e+00\l  %58 = select i1 %57, float %47, float %44\l  %59 = select i1 %54, float %49, float %58\l  %60 = fmul float %51, %59\l  %61 = select i1 %50, float %43, float %60\l  %62 = fadd contract float %61, 0x3EB0C6F7A0000000\l  %63 = fdiv contract float %38, %62\l  store float %63, float addrspace(1)* %33, align 4, !tbaa !16\l  br label %64\l}"];
	Node0x45ec4d0 -> Node0x45ec560;
	Node0x45ec560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  ret void\l}"];
}
