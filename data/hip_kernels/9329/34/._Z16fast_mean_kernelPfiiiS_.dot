digraph "CFG for '_Z16fast_mean_kernelPfiiiS_' function" {
	label="CFG for '_Z16fast_mean_kernelPfiiiS_' function";

	Node0x4539af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %6\l  store float 0.000000e+00, float addrspace(3)* %7, align 4, !tbaa !5\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = icmp sgt i32 %1, 0\l  br i1 %9, label %10, label %147\l|{<s0>T|<s1>F}}"];
	Node0x4539af0:s0 -> Node0x4539220;
	Node0x4539af0:s1 -> Node0x453be90;
	Node0x4539220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%10:\l10:                                               \l  %11 = icmp sgt i32 %3, 0\l  %12 = add i32 %3, -1\l  %13 = lshr i32 %12, 9\l  %14 = add nuw nsw i32 %13, 1\l  %15 = and i32 %14, 7\l  %16 = icmp ult i32 %3, 3585\l  %17 = and i32 %14, -8\l  %18 = icmp eq i32 %15, 0\l  br label %19\l}"];
	Node0x4539220 -> Node0x453bd60;
	Node0x453bd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%19:\l19:                                               \l  %20 = phi float [ 0.000000e+00, %10 ], [ %144, %143 ]\l  %21 = phi i32 [ 0, %10 ], [ %145, %143 ]\l  br i1 %11, label %22, label %143\l|{<s0>T|<s1>F}}"];
	Node0x453bd60:s0 -> Node0x453c950;
	Node0x453bd60:s1 -> Node0x453c6f0;
	Node0x453c950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%22:\l22:                                               \l  %23 = mul i32 %21, %2\l  %24 = add i32 %23, %8\l  %25 = mul i32 %24, %3\l  br i1 %16, label %120, label %26\l|{<s0>T|<s1>F}}"];
	Node0x453c950:s0 -> Node0x453cc40;
	Node0x453c950:s1 -> Node0x453cc90;
	Node0x453cc90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%26:\l26:                                               \l  %27 = phi float [ %116, %114 ], [ %20, %22 ]\l  %28 = phi i32 [ %117, %114 ], [ 0, %22 ]\l  %29 = phi i32 [ %118, %114 ], [ 0, %22 ]\l  %30 = or i32 %28, %6\l  %31 = icmp slt i32 %30, %3\l  br i1 %31, label %32, label %37\l|{<s0>T|<s1>F}}"];
	Node0x453cc90:s0 -> Node0x453d2a0;
	Node0x453cc90:s1 -> Node0x453d330;
	Node0x453d2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%32:\l32:                                               \l  %33 = add i32 %30, %25\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %37\l}"];
	Node0x453d2a0 -> Node0x453d330;
	Node0x453d330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%37:\l37:                                               \l  %38 = phi contract float [ %36, %32 ], [ 0.000000e+00, %26 ]\l  %39 = fadd contract float %38, %27\l  %40 = or i32 %28, 512\l  %41 = add nuw nsw i32 %40, %6\l  %42 = icmp slt i32 %41, %3\l  br i1 %42, label %43, label %48\l|{<s0>T|<s1>F}}"];
	Node0x453d330:s0 -> Node0x453e2e0;
	Node0x453d330:s1 -> Node0x453e330;
	Node0x453e2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%43:\l43:                                               \l  %44 = add i32 %41, %25\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %48\l}"];
	Node0x453e2e0 -> Node0x453e330;
	Node0x453e330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%48:\l48:                                               \l  %49 = phi contract float [ %47, %43 ], [ 0.000000e+00, %37 ]\l  %50 = fadd contract float %49, %39\l  %51 = or i32 %28, %6\l  %52 = or i32 %51, 1024\l  %53 = icmp slt i32 %52, %3\l  br i1 %53, label %54, label %59\l|{<s0>T|<s1>F}}"];
	Node0x453e330:s0 -> Node0x453f020;
	Node0x453e330:s1 -> Node0x453f070;
	Node0x453f020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%54:\l54:                                               \l  %55 = add i32 %52, %25\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %59\l}"];
	Node0x453f020 -> Node0x453f070;
	Node0x453f070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%59:\l59:                                               \l  %60 = phi contract float [ %58, %54 ], [ 0.000000e+00, %48 ]\l  %61 = fadd contract float %60, %50\l  %62 = or i32 %28, 1536\l  %63 = add nuw nsw i32 %62, %6\l  %64 = icmp slt i32 %63, %3\l  br i1 %64, label %65, label %70\l|{<s0>T|<s1>F}}"];
	Node0x453f070:s0 -> Node0x453d470;
	Node0x453f070:s1 -> Node0x453d4c0;
	Node0x453d470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%65:\l65:                                               \l  %66 = add i32 %63, %25\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %70\l}"];
	Node0x453d470 -> Node0x453d4c0;
	Node0x453d4c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%70:\l70:                                               \l  %71 = phi contract float [ %69, %65 ], [ 0.000000e+00, %59 ]\l  %72 = fadd contract float %71, %61\l  %73 = or i32 %28, %6\l  %74 = or i32 %73, 2048\l  %75 = icmp slt i32 %74, %3\l  br i1 %75, label %76, label %81\l|{<s0>T|<s1>F}}"];
	Node0x453d4c0:s0 -> Node0x4540090;
	Node0x453d4c0:s1 -> Node0x45400e0;
	Node0x4540090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%76:\l76:                                               \l  %77 = add i32 %74, %25\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %81\l}"];
	Node0x4540090 -> Node0x45400e0;
	Node0x45400e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%81:\l81:                                               \l  %82 = phi contract float [ %80, %76 ], [ 0.000000e+00, %70 ]\l  %83 = fadd contract float %82, %72\l  %84 = or i32 %28, 2560\l  %85 = add nuw nsw i32 %84, %6\l  %86 = icmp slt i32 %85, %3\l  br i1 %86, label %87, label %92\l|{<s0>T|<s1>F}}"];
	Node0x45400e0:s0 -> Node0x45407c0;
	Node0x45400e0:s1 -> Node0x4540810;
	Node0x45407c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%87:\l87:                                               \l  %88 = add i32 %85, %25\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %0, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %92\l}"];
	Node0x45407c0 -> Node0x4540810;
	Node0x4540810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%92:\l92:                                               \l  %93 = phi contract float [ %91, %87 ], [ 0.000000e+00, %81 ]\l  %94 = fadd contract float %93, %83\l  %95 = or i32 %28, %6\l  %96 = or i32 %95, 3072\l  %97 = icmp slt i32 %96, %3\l  br i1 %97, label %98, label %103\l|{<s0>T|<s1>F}}"];
	Node0x4540810:s0 -> Node0x4540ef0;
	Node0x4540810:s1 -> Node0x4540f40;
	Node0x4540ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%98:\l98:                                               \l  %99 = add i32 %96, %25\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %0, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %103\l}"];
	Node0x4540ef0 -> Node0x4540f40;
	Node0x4540f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%103:\l103:                                              \l  %104 = phi contract float [ %102, %98 ], [ 0.000000e+00, %92 ]\l  %105 = fadd contract float %104, %94\l  %106 = or i32 %28, 3584\l  %107 = add nuw nsw i32 %106, %6\l  %108 = icmp slt i32 %107, %3\l  br i1 %108, label %109, label %114\l|{<s0>T|<s1>F}}"];
	Node0x4540f40:s0 -> Node0x4541620;
	Node0x4540f40:s1 -> Node0x453ce00;
	Node0x4541620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%109:\l109:                                              \l  %110 = add i32 %107, %25\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %0, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %114\l}"];
	Node0x4541620 -> Node0x453ce00;
	Node0x453ce00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%114:\l114:                                              \l  %115 = phi contract float [ %113, %109 ], [ 0.000000e+00, %103 ]\l  %116 = fadd contract float %115, %105\l  %117 = add nuw nsw i32 %28, 4096\l  %118 = add i32 %29, 8\l  %119 = icmp eq i32 %118, %17\l  br i1 %119, label %120, label %26, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x453ce00:s0 -> Node0x453cc40;
	Node0x453ce00:s1 -> Node0x453cc90;
	Node0x453cc40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%120:\l120:                                              \l  %121 = phi float [ undef, %22 ], [ %116, %114 ]\l  %122 = phi float [ %20, %22 ], [ %116, %114 ]\l  %123 = phi i32 [ 0, %22 ], [ %117, %114 ]\l  br i1 %18, label %141, label %124\l|{<s0>T|<s1>F}}"];
	Node0x453cc40:s0 -> Node0x4542000;
	Node0x453cc40:s1 -> Node0x4542050;
	Node0x4542050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%124:\l124:                                              \l  %125 = phi float [ %137, %135 ], [ %122, %120 ]\l  %126 = phi i32 [ %138, %135 ], [ %123, %120 ]\l  %127 = phi i32 [ %139, %135 ], [ 0, %120 ]\l  %128 = add nuw nsw i32 %126, %6\l  %129 = icmp slt i32 %128, %3\l  br i1 %129, label %130, label %135\l|{<s0>T|<s1>F}}"];
	Node0x4542050:s0 -> Node0x453f7e0;
	Node0x4542050:s1 -> Node0x4542150;
	Node0x453f7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%130:\l130:                                              \l  %131 = add i32 %128, %25\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %0, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %135\l}"];
	Node0x453f7e0 -> Node0x4542150;
	Node0x4542150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%135:\l135:                                              \l  %136 = phi contract float [ %134, %130 ], [ 0.000000e+00, %124 ]\l  %137 = fadd contract float %136, %125\l  %138 = add nuw nsw i32 %126, 512\l  %139 = add i32 %127, 1\l  %140 = icmp eq i32 %139, %15\l  br i1 %140, label %141, label %124, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4542150:s0 -> Node0x4542000;
	Node0x4542150:s1 -> Node0x4542050;
	Node0x4542000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%141:\l141:                                              \l  %142 = phi float [ %121, %120 ], [ %137, %135 ]\l  store float %142, float addrspace(3)* %7, align 4, !tbaa !5\l  br label %143\l}"];
	Node0x4542000 -> Node0x453c6f0;
	Node0x453c6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%143:\l143:                                              \l  %144 = phi float [ %142, %141 ], [ %20, %19 ]\l  %145 = add nuw nsw i32 %21, 1\l  %146 = icmp eq i32 %145, %1\l  br i1 %146, label %147, label %19, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x453c6f0:s0 -> Node0x453be90;
	Node0x453c6f0:s1 -> Node0x453bd60;
	Node0x453be90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%147:\l147:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %148 = icmp eq i32 %6, 0\l  br i1 %148, label %149, label %224\l|{<s0>T|<s1>F}}"];
	Node0x453be90:s0 -> Node0x4543960;
	Node0x453be90:s1 -> Node0x45439b0;
	Node0x4543960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%149:\l149:                                              \l  %150 = sext i32 %8 to i64\l  %151 = getelementptr inbounds float, float addrspace(1)* %4, i64 %150\l  store float 0.000000e+00, float addrspace(1)* %151, align 4, !tbaa !5\l  br label %152\l}"];
	Node0x4543960 -> Node0x4543c50;
	Node0x4543c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%152:\l152:                                              \l  %153 = phi i32 [ 0, %149 ], [ %218, %152 ]\l  %154 = phi float [ 0.000000e+00, %149 ], [ %217, %152 ]\l  %155 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %153\l  %156 = load float, float addrspace(3)* %155, align 16, !tbaa !5\l  %157 = fadd contract float %156, %154\l  %158 = or i32 %153, 1\l  %159 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %158\l  %160 = load float, float addrspace(3)* %159, align 4, !tbaa !5\l  %161 = fadd contract float %160, %157\l  %162 = or i32 %153, 2\l  %163 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %162\l  %164 = load float, float addrspace(3)* %163, align 8, !tbaa !5\l  %165 = fadd contract float %164, %161\l  %166 = or i32 %153, 3\l  %167 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %166\l  %168 = load float, float addrspace(3)* %167, align 4, !tbaa !5\l  %169 = fadd contract float %168, %165\l  %170 = or i32 %153, 4\l  %171 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %170\l  %172 = load float, float addrspace(3)* %171, align 16, !tbaa !5\l  %173 = fadd contract float %172, %169\l  %174 = or i32 %153, 5\l  %175 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %174\l  %176 = load float, float addrspace(3)* %175, align 4, !tbaa !5\l  %177 = fadd contract float %176, %173\l  %178 = or i32 %153, 6\l  %179 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %178\l  %180 = load float, float addrspace(3)* %179, align 8, !tbaa !5\l  %181 = fadd contract float %180, %177\l  %182 = or i32 %153, 7\l  %183 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %182\l  %184 = load float, float addrspace(3)* %183, align 4, !tbaa !5\l  %185 = fadd contract float %184, %181\l  %186 = or i32 %153, 8\l  %187 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %186\l  %188 = load float, float addrspace(3)* %187, align 16, !tbaa !5\l  %189 = fadd contract float %188, %185\l  %190 = or i32 %153, 9\l  %191 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %190\l  %192 = load float, float addrspace(3)* %191, align 4, !tbaa !5\l  %193 = fadd contract float %192, %189\l  %194 = or i32 %153, 10\l  %195 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %194\l  %196 = load float, float addrspace(3)* %195, align 8, !tbaa !5\l  %197 = fadd contract float %196, %193\l  %198 = or i32 %153, 11\l  %199 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %198\l  %200 = load float, float addrspace(3)* %199, align 4, !tbaa !5\l  %201 = fadd contract float %200, %197\l  %202 = or i32 %153, 12\l  %203 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %202\l  %204 = load float, float addrspace(3)* %203, align 16, !tbaa !5\l  %205 = fadd contract float %204, %201\l  %206 = or i32 %153, 13\l  %207 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %206\l  %208 = load float, float addrspace(3)* %207, align 4, !tbaa !5\l  %209 = fadd contract float %208, %205\l  %210 = or i32 %153, 14\l  %211 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %210\l  %212 = load float, float addrspace(3)* %211, align 8, !tbaa !5\l  %213 = fadd contract float %212, %209\l  %214 = or i32 %153, 15\l  %215 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ16fast_mean_kernelPfiiiS_E5local, i32 0, i32 %214\l  %216 = load float, float addrspace(3)* %215, align 4, !tbaa !5\l  %217 = fadd contract float %216, %213\l  %218 = add nuw nsw i32 %153, 16\l  %219 = icmp eq i32 %218, 512\l  br i1 %219, label %220, label %152, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4543c50:s0 -> Node0x4543ec0;
	Node0x4543c50:s1 -> Node0x4543c50;
	Node0x4543ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%220:\l220:                                              \l  %221 = mul nsw i32 %3, %1\l  %222 = sitofp i32 %221 to float\l  %223 = fdiv contract float %217, %222\l  store float %223, float addrspace(1)* %151, align 4, !tbaa !5\l  br label %224\l}"];
	Node0x4543ec0 -> Node0x45439b0;
	Node0x45439b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%224:\l224:                                              \l  ret void\l}"];
}
