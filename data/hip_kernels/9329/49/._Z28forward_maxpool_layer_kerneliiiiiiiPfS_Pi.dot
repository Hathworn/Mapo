digraph "CFG for '_Z28forward_maxpool_layer_kerneliiiiiiiPfS_Pi' function" {
	label="CFG for '_Z28forward_maxpool_layer_kerneliiiiiiiPfS_Pi' function";

	Node0x56d08e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%10:\l  %11 = shl nsw i32 %6, 1\l  %12 = add nsw i32 %11, %1\l  %13 = sdiv i32 %12, %4\l  %14 = add nsw i32 %11, %2\l  %15 = sdiv i32 %14, %4\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 12\l  %20 = bitcast i8 addrspace(4)* %19 to i32 addrspace(4)*\l  %21 = load i32, i32 addrspace(4)* %20, align 4, !tbaa !4\l  %22 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 4, !range !13, !invariant.load\l... !14\l  %25 = zext i16 %24 to i32\l  %26 = udiv i32 %21, %25\l  %27 = mul i32 %26, %25\l  %28 = icmp ugt i32 %21, %27\l  %29 = zext i1 %28 to i32\l  %30 = add i32 %26, %29\l  %31 = mul i32 %30, %17\l  %32 = add i32 %31, %16\l  %33 = mul i32 %32, %25\l  %34 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %35 = add i32 %33, %34\l  %36 = icmp slt i32 %35, %0\l  br i1 %36, label %37, label %188\l|{<s0>T|<s1>F}}"];
	Node0x56d08e0:s0 -> Node0x56d40b0;
	Node0x56d08e0:s1 -> Node0x56d4140;
	Node0x56d40b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%37:\l37:                                               \l  %38 = freeze i32 %35\l  %39 = freeze i32 %15\l  %40 = sdiv i32 %38, %39\l  %41 = mul i32 %40, %39\l  %42 = sub i32 %38, %41\l  %43 = freeze i32 %13\l  %44 = sdiv i32 %40, %43\l  %45 = mul i32 %44, %43\l  %46 = sub i32 %40, %45\l  %47 = freeze i32 %44\l  %48 = mul nsw i32 %47, %13\l  %49 = add nsw i32 %48, %46\l  %50 = mul nsw i32 %49, %15\l  %51 = add nsw i32 %50, %42\l  %52 = icmp sgt i32 %5, 0\l  br i1 %52, label %53, label %182\l|{<s0>T|<s1>F}}"];
	Node0x56d40b0:s0 -> Node0x56d4a70;
	Node0x56d40b0:s1 -> Node0x56d4ac0;
	Node0x56d4a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%53:\l53:                                               \l  %54 = mul nsw i32 %46, %4\l  %55 = sub i32 %54, %6\l  %56 = mul nsw i32 %42, %4\l  %57 = sub i32 %56, %6\l  %58 = mul nsw i32 %47, %1\l  %59 = and i32 %5, 3\l  %60 = icmp ult i32 %5, 4\l  %61 = and i32 %5, -4\l  %62 = icmp eq i32 %59, 0\l  br label %63\l}"];
	Node0x56d4a70 -> Node0x56d51a0;
	Node0x56d51a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%63:\l63:                                               \l  %64 = phi float [ 0xFFF0000000000000, %53 ], [ %179, %177 ]\l  %65 = phi i32 [ -1, %53 ], [ %178, %177 ]\l  %66 = phi i32 [ 0, %53 ], [ %180, %177 ]\l  %67 = add nsw i32 %66, %55\l  %68 = add nsw i32 %67, %58\l  %69 = mul nsw i32 %68, %2\l  %70 = icmp sgt i32 %67, -1\l  %71 = icmp slt i32 %67, %1\l  br i1 %60, label %147, label %72\l|{<s0>T|<s1>F}}"];
	Node0x56d51a0:s0 -> Node0x56d6560;
	Node0x56d51a0:s1 -> Node0x56d65f0;
	Node0x56d65f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%72:\l72:                                               \l  %73 = phi float [ %143, %139 ], [ %64, %63 ]\l  %74 = phi i32 [ %142, %139 ], [ %65, %63 ]\l  %75 = phi i32 [ %144, %139 ], [ 0, %63 ]\l  %76 = phi i32 [ %145, %139 ], [ 0, %63 ]\l  %77 = add nsw i32 %75, %57\l  %78 = add nsw i32 %77, %69\l  br i1 %70, label %79, label %88\l|{<s0>T|<s1>F}}"];
	Node0x56d65f0:s0 -> Node0x56d6d20;
	Node0x56d65f0:s1 -> Node0x56d6db0;
	Node0x56d6d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%79:\l79:                                               \l  %80 = icmp sgt i32 %77, -1\l  %81 = select i1 %71, i1 %80, i1 false\l  %82 = icmp slt i32 %77, %2\l  %83 = select i1 %81, i1 %82, i1 false\l  br i1 %83, label %84, label %88\l|{<s0>T|<s1>F}}"];
	Node0x56d6d20:s0 -> Node0x56d71a0;
	Node0x56d6d20:s1 -> Node0x56d6db0;
	Node0x56d71a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%84:\l84:                                               \l  %85 = sext i32 %78 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %7, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %88\l}"];
	Node0x56d71a0 -> Node0x56d6db0;
	Node0x56d6db0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%88:\l88:                                               \l  %89 = phi contract float [ %87, %84 ], [ 0xFFF0000000000000, %79 ], [\l... 0xFFF0000000000000, %72 ]\l  %90 = fcmp contract ogt float %89, %73\l  %91 = select i1 %90, i32 %78, i32 %74\l  %92 = select contract i1 %90, float %89, float %73\l  %93 = or i32 %75, 1\l  %94 = add nsw i32 %93, %57\l  %95 = add nsw i32 %94, %69\l  br i1 %70, label %96, label %105\l|{<s0>T|<s1>F}}"];
	Node0x56d6db0:s0 -> Node0x56d80c0;
	Node0x56d6db0:s1 -> Node0x56d8110;
	Node0x56d80c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%96:\l96:                                               \l  %97 = icmp sgt i32 %94, -1\l  %98 = select i1 %71, i1 %97, i1 false\l  %99 = icmp slt i32 %94, %2\l  %100 = select i1 %98, i1 %99, i1 false\l  br i1 %100, label %101, label %105\l|{<s0>T|<s1>F}}"];
	Node0x56d80c0:s0 -> Node0x56d84d0;
	Node0x56d80c0:s1 -> Node0x56d8110;
	Node0x56d84d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%101:\l101:                                              \l  %102 = sext i32 %95 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %7, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %105\l}"];
	Node0x56d84d0 -> Node0x56d8110;
	Node0x56d8110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%105:\l105:                                              \l  %106 = phi contract float [ %104, %101 ], [ 0xFFF0000000000000, %96 ], [\l... 0xFFF0000000000000, %88 ]\l  %107 = fcmp contract ogt float %106, %92\l  %108 = select i1 %107, i32 %95, i32 %91\l  %109 = select contract i1 %107, float %106, float %92\l  %110 = or i32 %75, 2\l  %111 = add nsw i32 %110, %57\l  %112 = add nsw i32 %111, %69\l  br i1 %70, label %113, label %122\l|{<s0>T|<s1>F}}"];
	Node0x56d8110:s0 -> Node0x56d9240;
	Node0x56d8110:s1 -> Node0x56d9290;
	Node0x56d9240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%113:\l113:                                              \l  %114 = icmp sgt i32 %111, -1\l  %115 = select i1 %71, i1 %114, i1 false\l  %116 = icmp slt i32 %111, %2\l  %117 = select i1 %115, i1 %116, i1 false\l  br i1 %117, label %118, label %122\l|{<s0>T|<s1>F}}"];
	Node0x56d9240:s0 -> Node0x56d9650;
	Node0x56d9240:s1 -> Node0x56d9290;
	Node0x56d9650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%118:\l118:                                              \l  %119 = sext i32 %112 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %7, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %122\l}"];
	Node0x56d9650 -> Node0x56d9290;
	Node0x56d9290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%122:\l122:                                              \l  %123 = phi contract float [ %121, %118 ], [ 0xFFF0000000000000, %113 ], [\l... 0xFFF0000000000000, %105 ]\l  %124 = fcmp contract ogt float %123, %109\l  %125 = select i1 %124, i32 %112, i32 %108\l  %126 = select contract i1 %124, float %123, float %109\l  %127 = or i32 %75, 3\l  %128 = add nsw i32 %127, %57\l  %129 = add nsw i32 %128, %69\l  br i1 %70, label %130, label %139\l|{<s0>T|<s1>F}}"];
	Node0x56d9290:s0 -> Node0x56d5eb0;
	Node0x56d9290:s1 -> Node0x56d6760;
	Node0x56d5eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%130:\l130:                                              \l  %131 = icmp sgt i32 %128, -1\l  %132 = select i1 %71, i1 %131, i1 false\l  %133 = icmp slt i32 %128, %2\l  %134 = select i1 %132, i1 %133, i1 false\l  br i1 %134, label %135, label %139\l|{<s0>T|<s1>F}}"];
	Node0x56d5eb0:s0 -> Node0x56da560;
	Node0x56d5eb0:s1 -> Node0x56d6760;
	Node0x56da560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%135:\l135:                                              \l  %136 = sext i32 %129 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %7, i64 %136\l  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %139\l}"];
	Node0x56da560 -> Node0x56d6760;
	Node0x56d6760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%139:\l139:                                              \l  %140 = phi contract float [ %138, %135 ], [ 0xFFF0000000000000, %130 ], [\l... 0xFFF0000000000000, %122 ]\l  %141 = fcmp contract ogt float %140, %126\l  %142 = select i1 %141, i32 %129, i32 %125\l  %143 = select contract i1 %141, float %140, float %126\l  %144 = add nuw nsw i32 %75, 4\l  %145 = add i32 %76, 4\l  %146 = icmp eq i32 %145, %61\l  br i1 %146, label %147, label %72, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x56d6760:s0 -> Node0x56d6560;
	Node0x56d6760:s1 -> Node0x56d65f0;
	Node0x56d6560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%147:\l147:                                              \l  %148 = phi i32 [ undef, %63 ], [ %142, %139 ]\l  %149 = phi float [ undef, %63 ], [ %143, %139 ]\l  %150 = phi float [ %64, %63 ], [ %143, %139 ]\l  %151 = phi i32 [ %65, %63 ], [ %142, %139 ]\l  %152 = phi i32 [ 0, %63 ], [ %144, %139 ]\l  br i1 %62, label %177, label %153\l|{<s0>T|<s1>F}}"];
	Node0x56d6560:s0 -> Node0x56d5ce0;
	Node0x56d6560:s1 -> Node0x56db520;
	Node0x56db520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%153:\l153:                                              \l  %154 = phi float [ %173, %169 ], [ %150, %147 ]\l  %155 = phi i32 [ %172, %169 ], [ %151, %147 ]\l  %156 = phi i32 [ %174, %169 ], [ %152, %147 ]\l  %157 = phi i32 [ %175, %169 ], [ 0, %147 ]\l  %158 = add nsw i32 %156, %57\l  %159 = add nsw i32 %158, %69\l  br i1 %70, label %160, label %169\l|{<s0>T|<s1>F}}"];
	Node0x56db520:s0 -> Node0x56dbb10;
	Node0x56db520:s1 -> Node0x56db620;
	Node0x56dbb10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%160:\l160:                                              \l  %161 = icmp sgt i32 %158, -1\l  %162 = select i1 %71, i1 %161, i1 false\l  %163 = icmp slt i32 %158, %2\l  %164 = select i1 %162, i1 %163, i1 false\l  br i1 %164, label %165, label %169\l|{<s0>T|<s1>F}}"];
	Node0x56dbb10:s0 -> Node0x56dbed0;
	Node0x56dbb10:s1 -> Node0x56db620;
	Node0x56dbed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%165:\l165:                                              \l  %166 = sext i32 %159 to i64\l  %167 = getelementptr inbounds float, float addrspace(1)* %7, i64 %166\l  %168 = load float, float addrspace(1)* %167, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %169\l}"];
	Node0x56dbed0 -> Node0x56db620;
	Node0x56db620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%169:\l169:                                              \l  %170 = phi contract float [ %168, %165 ], [ 0xFFF0000000000000, %160 ], [\l... 0xFFF0000000000000, %153 ]\l  %171 = fcmp contract ogt float %170, %154\l  %172 = select i1 %171, i32 %159, i32 %155\l  %173 = select contract i1 %171, float %170, float %154\l  %174 = add nuw nsw i32 %156, 1\l  %175 = add i32 %157, 1\l  %176 = icmp eq i32 %175, %59\l  br i1 %176, label %177, label %153, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x56db620:s0 -> Node0x56d5ce0;
	Node0x56db620:s1 -> Node0x56db520;
	Node0x56d5ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%177:\l177:                                              \l  %178 = phi i32 [ %148, %147 ], [ %172, %169 ]\l  %179 = phi float [ %149, %147 ], [ %173, %169 ]\l  %180 = add nuw nsw i32 %66, 1\l  %181 = icmp eq i32 %180, %5\l  br i1 %181, label %182, label %63, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x56d5ce0:s0 -> Node0x56d4ac0;
	Node0x56d5ce0:s1 -> Node0x56d51a0;
	Node0x56d4ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%182:\l182:                                              \l  %183 = phi i32 [ -1, %37 ], [ %178, %177 ]\l  %184 = phi float [ 0xFFF0000000000000, %37 ], [ %179, %177 ]\l  %185 = sext i32 %51 to i64\l  %186 = getelementptr inbounds float, float addrspace(1)* %8, i64 %185\l  store float %184, float addrspace(1)* %186, align 4, !tbaa !16\l  %187 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %185\l  store i32 %183, i32 addrspace(1)* %187, align 4, !tbaa !25\l  br label %188\l}"];
	Node0x56d4ac0 -> Node0x56d4140;
	Node0x56d4140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%188:\l188:                                              \l  ret void\l}"];
}
