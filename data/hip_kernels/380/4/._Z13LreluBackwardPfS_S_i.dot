digraph "CFG for '_Z13LreluBackwardPfS_S_i' function" {
	label="CFG for '_Z13LreluBackwardPfS_S_i' function";

	Node0x4d24700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = udiv i32 %14, %11\l  %18 = mul i32 %17, %11\l  %19 = icmp ugt i32 %14, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %11\l  %23 = icmp sgt i32 %3, 0\l  br i1 %23, label %25, label %24\l|{<s0>T|<s1>F}}"];
	Node0x4d24700:s0 -> Node0x4d24750;
	Node0x4d24700:s1 -> Node0x4d26d40;
	Node0x4d26d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x4d24750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %46, %45 ], [ 0, %4 ]\l  %27 = add nsw i32 %16, %26\l  %28 = icmp slt i32 %27, %3\l  br i1 %28, label %29, label %45\l|{<s0>T|<s1>F}}"];
	Node0x4d24750:s0 -> Node0x4d27120;
	Node0x4d24750:s1 -> Node0x4d26f00;
	Node0x4d27120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%29:\l29:                                               \l  %30 = sext i32 %27 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %33 = fpext float %32 to double\l  %34 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !16\l  %36 = fcmp contract ogt float %35, 0.000000e+00\l  %37 = uitofp i1 %36 to double\l  %38 = fcmp contract ole float %35, 0.000000e+00\l  %39 = uitofp i1 %38 to double\l  %40 = fmul contract double %39, 1.000000e-02\l  %41 = fadd contract double %40, %37\l  %42 = fmul contract double %41, %33\l  %43 = fptrunc double %42 to float\l  %44 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  store float %43, float addrspace(1)* %44, align 4, !tbaa !16\l  br label %45\l}"];
	Node0x4d27120 -> Node0x4d26f00;
	Node0x4d26f00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = add nsw i32 %26, %22\l  %47 = icmp slt i32 %46, %3\l  br i1 %47, label %25, label %24, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4d26f00:s0 -> Node0x4d24750;
	Node0x4d26f00:s1 -> Node0x4d26d40;
}
