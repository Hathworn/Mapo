digraph "CFG for '_Z57awkward_ByteMaskedArray_getitem_nextcarry_outindex_kernelPlS_S_Pal' function" {
	label="CFG for '_Z57awkward_ByteMaskedArray_getitem_nextcarry_outindex_kernelPlS_S_Pal' function";

	Node0x4cdcc10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !4\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !13, !invariant.load\l... !14\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 16\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 8, !tbaa !15\l  %24 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !13, !invariant.load\l... !14\l  %27 = zext i16 %26 to i32\l  %28 = udiv i32 %23, %27\l  %29 = mul i32 %28, %27\l  %30 = icmp ugt i32 %23, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %34 = mul i32 %32, %33\l  %35 = add i32 %34, %7\l  %36 = mul i32 %35, %20\l  %37 = add i32 %36, %6\l  %38 = zext i32 %37 to i64\l  %39 = zext i16 %14 to i64\l  %40 = mul nuw nsw i64 %38, %39\l  %41 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %42 = zext i32 %41 to i64\l  %43 = add nuw nsw i64 %40, %42\l  %44 = icmp slt i64 %43, %4\l  br i1 %44, label %45, label %59\l|{<s0>T|<s1>F}}"];
	Node0x4cdcc10:s0 -> Node0x4ce0db0;
	Node0x4cdcc10:s1 -> Node0x4ce0e40;
	Node0x4ce0db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%45:\l45:                                               \l  %46 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %43\l  %47 = load i8, i8 addrspace(1)* %46, align 1, !tbaa !17, !amdgpu.noclobber\l... !14\l  %48 = icmp eq i8 %47, 0\l  br i1 %48, label %56, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4ce0db0:s0 -> Node0x4ce12a0;
	Node0x4ce0db0:s1 -> Node0x4ce1330;
	Node0x4ce1330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%49:\l49:                                               \l  %50 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %43\l  %51 = load i64, i64 addrspace(1)* %50, align 8, !tbaa !20, !amdgpu.noclobber\l... !14\l  %52 = add nsw i64 %51, -1\l  %53 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %52\l  store i64 %43, i64 addrspace(1)* %53, align 8, !tbaa !20\l  %54 = load i64, i64 addrspace(1)* %50, align 8, !tbaa !20\l  %55 = add nsw i64 %54, -1\l  br label %56\l}"];
	Node0x4ce1330 -> Node0x4ce12a0;
	Node0x4ce12a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%56:\l56:                                               \l  %57 = phi i64 [ %55, %49 ], [ -1, %45 ]\l  %58 = getelementptr inbounds i64, i64 addrspace(1)* %2, i64 %43\l  store i64 %57, i64 addrspace(1)* %58, align 8, !tbaa !20\l  br label %59\l}"];
	Node0x4ce12a0 -> Node0x4ce0e40;
	Node0x4ce0e40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  ret void\l}"];
}
