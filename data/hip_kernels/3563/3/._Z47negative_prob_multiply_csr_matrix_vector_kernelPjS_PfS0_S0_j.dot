digraph "CFG for '_Z47negative_prob_multiply_csr_matrix_vector_kernelPjS_PfS0_S0_j' function" {
	label="CFG for '_Z47negative_prob_multiply_csr_matrix_vector_kernelPjS_PfS0_S0_j' function";

	Node0x4a07810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %11\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp ult i32 %15, %5\l  br i1 %16, label %17, label %48\l|{<s0>T|<s1>F}}"];
	Node0x4a07810:s0 -> Node0x4a08100;
	Node0x4a07810:s1 -> Node0x4a097c0;
	Node0x4a08100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%17:\l17:                                               \l  %18 = zext i32 %15 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %21 = add nuw i32 %15, 1\l  %22 = zext i32 %21 to i64\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %22\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %25 = icmp ult i32 %20, %24\l  br i1 %25, label %29, label %26\l|{<s0>T|<s1>F}}"];
	Node0x4a08100:s0 -> Node0x4a0ab00;
	Node0x4a08100:s1 -> Node0x4a0ab90;
	Node0x4a0ab90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%26:\l26:                                               \l  %27 = phi float [ 1.000000e+00, %17 ], [ %45, %29 ]\l  %28 = getelementptr inbounds float, float addrspace(1)* %4, i64 %18\l  store float %27, float addrspace(1)* %28, align 4, !tbaa !11\l  br label %48\l}"];
	Node0x4a0ab90 -> Node0x4a097c0;
	Node0x4a0ab00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %46, %29 ], [ %20, %17 ]\l  %31 = phi float [ %45, %29 ], [ 1.000000e+00, %17 ]\l  %32 = sext i32 %30 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %2, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %32\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %37 = zext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %3, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %40 = fmul contract float %34, %39\l  %41 = fpext float %40 to double\l  %42 = fsub contract double 1.000000e+00, %41\l  %43 = fpext float %31 to double\l  %44 = fmul contract double %42, %43\l  %45 = fptrunc double %44 to float\l  %46 = add nuw nsw i32 %30, 1\l  %47 = icmp ult i32 %46, %24\l  br i1 %47, label %29, label %26, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4a0ab00:s0 -> Node0x4a0ab00;
	Node0x4a0ab00:s1 -> Node0x4a0ab90;
	Node0x4a097c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%48:\l48:                                               \l  ret void\l}"];
}
