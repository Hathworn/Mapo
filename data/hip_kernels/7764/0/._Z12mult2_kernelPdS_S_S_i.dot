digraph "CFG for '_Z12mult2_kernelPdS_S_S_i' function" {
	label="CFG for '_Z12mult2_kernelPdS_S_S_i' function";

	Node0x53397a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = ashr i32 %4, 1\l  %16 = shl i32 %14, 1\l  %17 = icmp eq i32 %14, 0\l  br i1 %17, label %90, label %18\l|{<s0>T|<s1>F}}"];
	Node0x53397a0:s0 -> Node0x533a2c0;
	Node0x53397a0:s1 -> Node0x533b8d0;
	Node0x533b8d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%18:\l18:                                               \l  %19 = ashr i32 %4, 2\l  %20 = sub nsw i32 %4, %16\l  %21 = sub nsw i32 %19, %14\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds double, double addrspace(1)* %3, i64 %22\l  %24 = load double, double addrspace(1)* %23, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %25 = fsub contract double 5.000000e-01, %24\l  %26 = sext i32 %14 to i64\l  %27 = getelementptr inbounds double, double addrspace(1)* %3, i64 %26\l  %28 = load double, double addrspace(1)* %27, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %29 = sext i32 %16 to i64\l  %30 = getelementptr inbounds double, double addrspace(1)* %1, i64 %29\l  %31 = load double, double addrspace(1)* %30, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %32 = add nuw nsw i32 %16, 1\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = sext i32 %20 to i64\l  %37 = getelementptr inbounds double, double addrspace(1)* %1, i64 %36\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = add nsw i32 %20, 1\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds double, double addrspace(1)* %1, i64 %40\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = fsub contract double %31, %38\l  %44 = fadd contract double %35, %42\l  %45 = fmul contract double %25, %43\l  %46 = fmul contract double %28, %44\l  %47 = fsub contract double %45, %46\l  %48 = fmul contract double %25, %44\l  %49 = fmul contract double %28, %43\l  %50 = fadd contract double %49, %48\l  %51 = fsub contract double %31, %47\l  %52 = fsub contract double %35, %50\l  %53 = fadd contract double %38, %47\l  %54 = fsub contract double %42, %50\l  %55 = getelementptr inbounds double, double addrspace(1)* %2, i64 %29\l  %56 = load double, double addrspace(1)* %55, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %57 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %59 = getelementptr inbounds double, double addrspace(1)* %2, i64 %36\l  %60 = load double, double addrspace(1)* %59, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %61 = getelementptr inbounds double, double addrspace(1)* %2, i64 %40\l  %62 = load double, double addrspace(1)* %61, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = fmul contract double %58, %51\l  %64 = fmul contract double %56, %52\l  %65 = fadd contract double %63, %64\l  %66 = fmul contract double %56, %51\l  %67 = fmul contract double %58, %52\l  %68 = fsub contract double %66, %67\l  %69 = fmul contract double %53, %62\l  %70 = fmul contract double %60, %54\l  %71 = fadd contract double %69, %70\l  %72 = fmul contract double %60, %53\l  %73 = fmul contract double %54, %62\l  %74 = fsub contract double %72, %73\l  %75 = fsub contract double %68, %74\l  %76 = fadd contract double %65, %71\l  %77 = fmul contract double %25, %75\l  %78 = fmul contract double %28, %76\l  %79 = fadd contract double %77, %78\l  %80 = fmul contract double %25, %76\l  %81 = fmul contract double %28, %75\l  %82 = fsub contract double %80, %81\l  %83 = fsub contract double %68, %79\l  %84 = getelementptr inbounds double, double addrspace(1)* %0, i64 %29\l  store double %83, double addrspace(1)* %84, align 8, !tbaa !7\l  %85 = fsub contract double %82, %65\l  %86 = getelementptr inbounds double, double addrspace(1)* %0, i64 %33\l  store double %85, double addrspace(1)* %86, align 8, !tbaa !7\l  %87 = fadd contract double %74, %79\l  %88 = getelementptr inbounds double, double addrspace(1)* %0, i64 %36\l  store double %87, double addrspace(1)* %88, align 8, !tbaa !7\l  %89 = fsub contract double %82, %71\l  br label %124\l}"];
	Node0x533b8d0 -> Node0x533dbe0;
	Node0x533a2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%90:\l90:                                               \l  %91 = load double, double addrspace(1)* %1, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %92 = getelementptr inbounds double, double addrspace(1)* %1, i64 1\l  %93 = load double, double addrspace(1)* %92, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %94 = load double, double addrspace(1)* %2, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %95 = getelementptr inbounds double, double addrspace(1)* %2, i64 1\l  %96 = load double, double addrspace(1)* %95, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %97 = fmul contract double %91, %94\l  %98 = fmul contract double %93, %96\l  %99 = fadd contract double %97, %98\l  store double %99, double addrspace(1)* %0, align 8, !tbaa !7\l  %100 = fneg contract double %91\l  %101 = fmul contract double %96, %100\l  %102 = fmul contract double %93, %94\l  %103 = fsub contract double %101, %102\l  %104 = getelementptr inbounds double, double addrspace(1)* %0, i64 1\l  store double %103, double addrspace(1)* %104, align 8, !tbaa !7\l  %105 = sext i32 %15 to i64\l  %106 = getelementptr inbounds double, double addrspace(1)* %1, i64 %105\l  %107 = load double, double addrspace(1)* %106, align 8, !tbaa !7\l  %108 = add nsw i32 %15, 1\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds double, double addrspace(1)* %1, i64 %109\l  %111 = load double, double addrspace(1)* %110, align 8, !tbaa !7\l  %112 = getelementptr inbounds double, double addrspace(1)* %2, i64 %105\l  %113 = load double, double addrspace(1)* %112, align 8, !tbaa !7\l  %114 = getelementptr inbounds double, double addrspace(1)* %2, i64 %109\l  %115 = load double, double addrspace(1)* %114, align 8, !tbaa !7\l  %116 = fneg contract double %107\l  %117 = fmul contract double %115, %116\l  %118 = fmul contract double %111, %113\l  %119 = fsub contract double %117, %118\l  %120 = getelementptr inbounds double, double addrspace(1)* %0, i64 %109\l  store double %119, double addrspace(1)* %120, align 8, !tbaa !7\l  %121 = fmul contract double %107, %113\l  %122 = fmul contract double %111, %115\l  %123 = fsub contract double %121, %122\l  br label %124\l}"];
	Node0x533a2c0 -> Node0x533dbe0;
	Node0x533dbe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%124:\l124:                                              \l  %125 = phi i64 [ %105, %90 ], [ %40, %18 ]\l  %126 = phi double [ %123, %90 ], [ %89, %18 ]\l  %127 = getelementptr inbounds double, double addrspace(1)* %0, i64 %125\l  store double %126, double addrspace(1)* %127, align 8, !tbaa !7\l  ret void\l}"];
}
