digraph "CFG for '_Z12mult3_kernelPdS_S_S_i' function" {
	label="CFG for '_Z12mult3_kernelPdS_S_S_i' function";

	Node0x63cf980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = ashr i32 %4, 1\l  %16 = shl i32 %14, 1\l  %17 = icmp eq i32 %14, 0\l  br i1 %17, label %102, label %18\l|{<s0>T|<s1>F}}"];
	Node0x63cf980:s0 -> Node0x63d04a0;
	Node0x63cf980:s1 -> Node0x63d1ab0;
	Node0x63d1ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%18:\l18:                                               \l  %19 = ashr i32 %4, 2\l  %20 = sub nsw i32 %4, %16\l  %21 = sub nsw i32 %19, %14\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds double, double addrspace(1)* %3, i64 %22\l  %24 = load double, double addrspace(1)* %23, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %25 = fsub contract double 5.000000e-01, %24\l  %26 = sext i32 %14 to i64\l  %27 = getelementptr inbounds double, double addrspace(1)* %3, i64 %26\l  %28 = load double, double addrspace(1)* %27, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %29 = sext i32 %16 to i64\l  %30 = getelementptr inbounds double, double addrspace(1)* %1, i64 %29\l  %31 = load double, double addrspace(1)* %30, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %32 = add nuw nsw i32 %16, 1\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = sext i32 %20 to i64\l  %37 = getelementptr inbounds double, double addrspace(1)* %1, i64 %36\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = add nsw i32 %20, 1\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds double, double addrspace(1)* %1, i64 %40\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = fsub contract double %31, %38\l  %44 = fadd contract double %35, %42\l  %45 = fmul contract double %25, %43\l  %46 = fmul contract double %28, %44\l  %47 = fsub contract double %45, %46\l  %48 = fmul contract double %25, %44\l  %49 = fmul contract double %28, %43\l  %50 = fadd contract double %49, %48\l  %51 = fsub contract double %31, %47\l  %52 = fsub contract double %35, %50\l  %53 = fadd contract double %38, %47\l  %54 = fsub contract double %42, %50\l  %55 = getelementptr inbounds double, double addrspace(1)* %2, i64 %29\l  %56 = load double, double addrspace(1)* %55, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %57 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %59 = getelementptr inbounds double, double addrspace(1)* %2, i64 %36\l  %60 = load double, double addrspace(1)* %59, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %61 = getelementptr inbounds double, double addrspace(1)* %2, i64 %40\l  %62 = load double, double addrspace(1)* %61, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = fsub contract double %56, %60\l  %64 = fadd contract double %58, %62\l  %65 = fmul contract double %25, %63\l  %66 = fmul contract double %28, %64\l  %67 = fsub contract double %65, %66\l  %68 = fmul contract double %25, %64\l  %69 = fmul contract double %28, %63\l  %70 = fadd contract double %69, %68\l  %71 = fsub contract double %56, %67\l  %72 = fsub contract double %58, %70\l  %73 = fadd contract double %60, %67\l  %74 = fsub contract double %62, %70\l  %75 = fmul contract double %51, %72\l  %76 = fmul contract double %52, %71\l  %77 = fadd contract double %75, %76\l  %78 = fmul contract double %51, %71\l  %79 = fmul contract double %52, %72\l  %80 = fsub contract double %78, %79\l  %81 = fmul contract double %53, %74\l  %82 = fmul contract double %54, %73\l  %83 = fadd contract double %81, %82\l  %84 = fmul contract double %53, %73\l  %85 = fmul contract double %54, %74\l  %86 = fsub contract double %84, %85\l  %87 = fsub contract double %80, %86\l  %88 = fadd contract double %77, %83\l  %89 = fmul contract double %25, %87\l  %90 = fmul contract double %28, %88\l  %91 = fadd contract double %89, %90\l  %92 = fmul contract double %25, %88\l  %93 = fmul contract double %28, %87\l  %94 = fsub contract double %92, %93\l  %95 = fsub contract double %80, %91\l  %96 = getelementptr inbounds double, double addrspace(1)* %0, i64 %29\l  store double %95, double addrspace(1)* %96, align 8, !tbaa !7\l  %97 = fsub contract double %94, %77\l  %98 = getelementptr inbounds double, double addrspace(1)* %0, i64 %33\l  store double %97, double addrspace(1)* %98, align 8, !tbaa !7\l  %99 = fadd contract double %86, %91\l  %100 = getelementptr inbounds double, double addrspace(1)* %0, i64 %36\l  store double %99, double addrspace(1)* %100, align 8, !tbaa !7\l  %101 = fsub contract double %94, %83\l  br label %136\l}"];
	Node0x63d1ab0 -> Node0x63d3dc0;
	Node0x63d04a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%102:\l102:                                              \l  %103 = load double, double addrspace(1)* %1, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %104 = getelementptr inbounds double, double addrspace(1)* %1, i64 1\l  %105 = load double, double addrspace(1)* %104, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %106 = load double, double addrspace(1)* %2, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %107 = getelementptr inbounds double, double addrspace(1)* %2, i64 1\l  %108 = load double, double addrspace(1)* %107, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %109 = fmul contract double %103, %106\l  %110 = fmul contract double %105, %108\l  %111 = fadd contract double %109, %110\l  store double %111, double addrspace(1)* %0, align 8, !tbaa !7\l  %112 = fneg contract double %103\l  %113 = fmul contract double %108, %112\l  %114 = fmul contract double %105, %106\l  %115 = fsub contract double %113, %114\l  %116 = getelementptr inbounds double, double addrspace(1)* %0, i64 1\l  store double %115, double addrspace(1)* %116, align 8, !tbaa !7\l  %117 = sext i32 %15 to i64\l  %118 = getelementptr inbounds double, double addrspace(1)* %1, i64 %117\l  %119 = load double, double addrspace(1)* %118, align 8, !tbaa !7\l  %120 = add nsw i32 %15, 1\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds double, double addrspace(1)* %1, i64 %121\l  %123 = load double, double addrspace(1)* %122, align 8, !tbaa !7\l  %124 = getelementptr inbounds double, double addrspace(1)* %2, i64 %117\l  %125 = load double, double addrspace(1)* %124, align 8, !tbaa !7\l  %126 = getelementptr inbounds double, double addrspace(1)* %2, i64 %121\l  %127 = load double, double addrspace(1)* %126, align 8, !tbaa !7\l  %128 = fneg contract double %119\l  %129 = fmul contract double %127, %128\l  %130 = fmul contract double %123, %125\l  %131 = fsub contract double %129, %130\l  %132 = getelementptr inbounds double, double addrspace(1)* %0, i64 %121\l  store double %131, double addrspace(1)* %132, align 8, !tbaa !7\l  %133 = fmul contract double %119, %125\l  %134 = fmul contract double %123, %127\l  %135 = fsub contract double %133, %134\l  br label %136\l}"];
	Node0x63d04a0 -> Node0x63d3dc0;
	Node0x63d3dc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%136:\l136:                                              \l  %137 = phi i64 [ %117, %102 ], [ %40, %18 ]\l  %138 = phi double [ %135, %102 ], [ %101, %18 ]\l  %139 = getelementptr inbounds double, double addrspace(1)* %0, i64 %137\l  store double %138, double addrspace(1)* %139, align 8, !tbaa !7\l  ret void\l}"];
}
