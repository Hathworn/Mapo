digraph "CFG for '_Z14square1_kerneliPdS_S_' function" {
	label="CFG for '_Z14square1_kerneliPdS_S_' function";

	Node0x4ef5020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = ashr i32 %0, 1\l  %15 = shl i32 %13, 1\l  %16 = icmp eq i32 %13, 0\l  br i1 %16, label %68, label %17\l|{<s0>T|<s1>F}}"];
	Node0x4ef5020:s0 -> Node0x4ef5bd0;
	Node0x4ef5020:s1 -> Node0x4ef7190;
	Node0x4ef7190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%17:\l17:                                               \l  %18 = ashr i32 %0, 2\l  %19 = sub nsw i32 %0, %15\l  %20 = sub nsw i32 %18, %13\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds double, double addrspace(1)* %3, i64 %21\l  %23 = load double, double addrspace(1)* %22, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = fsub contract double 5.000000e-01, %23\l  %25 = sext i32 %13 to i64\l  %26 = getelementptr inbounds double, double addrspace(1)* %3, i64 %25\l  %27 = load double, double addrspace(1)* %26, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %28 = sext i32 %15 to i64\l  %29 = getelementptr inbounds double, double addrspace(1)* %2, i64 %28\l  %30 = add nuw nsw i32 %15, 1\l  %31 = sext i32 %30 to i64\l  %32 = bitcast double addrspace(1)* %29 to \<2 x double\> addrspace(1)*\l  %33 = load \<2 x double\>, \<2 x double\> addrspace(1)* %32, align 8, !tbaa !7\l  %34 = sext i32 %19 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %2, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = add nsw i32 %19, 1\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds double, double addrspace(1)* %2, i64 %38\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %41 = extractelement \<2 x double\> %33, i64 0\l  %42 = fmul contract double %41, 2.000000e+00\l  %43 = extractelement \<2 x double\> %33, i64 1\l  %44 = fmul contract double %42, %43\l  %45 = fsub contract double %41, %43\l  %46 = fadd contract double %41, %43\l  %47 = fmul contract double %45, %46\l  %48 = fmul contract double %36, 2.000000e+00\l  %49 = fmul contract double %48, %40\l  %50 = fsub contract double %36, %40\l  %51 = fadd contract double %36, %40\l  %52 = fmul contract double %50, %51\l  %53 = fsub contract double %47, %52\l  %54 = fadd contract double %44, %49\l  %55 = fmul contract double %24, %53\l  %56 = fmul contract double %27, %54\l  %57 = fadd contract double %56, %55\l  %58 = fmul contract double %24, %54\l  %59 = fmul contract double %27, %53\l  %60 = fsub contract double %58, %59\l  %61 = fsub contract double %47, %57\l  %62 = getelementptr inbounds double, double addrspace(1)* %1, i64 %28\l  store double %61, double addrspace(1)* %62, align 8, !tbaa !7\l  %63 = fsub contract double %60, %44\l  %64 = getelementptr inbounds double, double addrspace(1)* %1, i64 %31\l  store double %63, double addrspace(1)* %64, align 8, !tbaa !7\l  %65 = fadd contract double %52, %57\l  %66 = getelementptr inbounds double, double addrspace(1)* %1, i64 %34\l  store double %65, double addrspace(1)* %66, align 8, !tbaa !7\l  %67 = fsub contract double %60, %49\l  br label %95\l}"];
	Node0x4ef7190 -> Node0x4ef9af0;
	Node0x4ef5bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%68:\l68:                                               \l  %69 = load double, double addrspace(1)* %2, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %70 = getelementptr inbounds double, double addrspace(1)* %2, i64 1\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %72 = fmul contract double %69, %69\l  %73 = fmul contract double %71, %71\l  %74 = fadd contract double %72, %73\l  store double %74, double addrspace(1)* %1, align 8, !tbaa !7\l  %75 = fneg contract double %69\l  %76 = fmul contract double %71, %75\l  %77 = fmul contract double %69, %71\l  %78 = fsub contract double %76, %77\l  %79 = getelementptr inbounds double, double addrspace(1)* %1, i64 1\l  store double %78, double addrspace(1)* %79, align 8, !tbaa !7\l  %80 = sext i32 %14 to i64\l  %81 = getelementptr inbounds double, double addrspace(1)* %2, i64 %80\l  %82 = load double, double addrspace(1)* %81, align 8, !tbaa !7\l  %83 = add nsw i32 %14, 1\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds double, double addrspace(1)* %2, i64 %84\l  %86 = load double, double addrspace(1)* %85, align 8, !tbaa !7\l  %87 = fneg contract double %82\l  %88 = fmul contract double %86, %87\l  %89 = fmul contract double %82, %86\l  %90 = fsub contract double %88, %89\l  %91 = getelementptr inbounds double, double addrspace(1)* %1, i64 %84\l  store double %90, double addrspace(1)* %91, align 8, !tbaa !7\l  %92 = fmul contract double %82, %82\l  %93 = fmul contract double %86, %86\l  %94 = fsub contract double %92, %93\l  br label %95\l}"];
	Node0x4ef5bd0 -> Node0x4ef9af0;
	Node0x4ef9af0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%95:\l95:                                               \l  %96 = phi i64 [ %80, %68 ], [ %38, %17 ]\l  %97 = phi double [ %94, %68 ], [ %67, %17 ]\l  %98 = getelementptr inbounds double, double addrspace(1)* %1, i64 %96\l  store double %97, double addrspace(1)* %98, align 8, !tbaa !7\l  ret void\l}"];
}
