digraph "CFG for '_Z14pre_mul_kerneliPdS_' function" {
	label="CFG for '_Z14pre_mul_kerneliPdS_' function";

	Node0x61ce6a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = shl i32 %12, 1\l  %14 = icmp eq i32 %12, 0\l  br i1 %14, label %52, label %15\l|{<s0>T|<s1>F}}"];
	Node0x61ce6a0:s0 -> Node0x61d0660;
	Node0x61ce6a0:s1 -> Node0x61d06f0;
	Node0x61d06f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%15:\l15:                                               \l  %16 = ashr i32 %0, 2\l  %17 = sub nsw i32 %0, %13\l  %18 = sub nsw i32 %16, %12\l  %19 = sext i32 %18 to i64\l  %20 = getelementptr inbounds double, double addrspace(1)* %2, i64 %19\l  %21 = load double, double addrspace(1)* %20, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %22 = fsub contract double 5.000000e-01, %21\l  %23 = sext i32 %12 to i64\l  %24 = getelementptr inbounds double, double addrspace(1)* %2, i64 %23\l  %25 = load double, double addrspace(1)* %24, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %26 = sext i32 %13 to i64\l  %27 = getelementptr inbounds double, double addrspace(1)* %1, i64 %26\l  %28 = load double, double addrspace(1)* %27, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %29 = add nuw nsw i32 %13, 1\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds double, double addrspace(1)* %1, i64 %30\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %33 = sext i32 %17 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = add nsw i32 %17, 1\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds double, double addrspace(1)* %1, i64 %37\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = fsub contract double %28, %35\l  %41 = fadd contract double %32, %39\l  %42 = fmul contract double %22, %40\l  %43 = fmul contract double %25, %41\l  %44 = fsub contract double %42, %43\l  %45 = fmul contract double %22, %41\l  %46 = fmul contract double %25, %40\l  %47 = fadd contract double %46, %45\l  %48 = fsub contract double %28, %44\l  %49 = fsub contract double %32, %47\l  %50 = fadd contract double %35, %44\l  %51 = fsub contract double %39, %47\l  store double %48, double addrspace(1)* %27, align 8, !tbaa !7\l  store double %49, double addrspace(1)* %31, align 8, !tbaa !7\l  store double %50, double addrspace(1)* %34, align 8, !tbaa !7\l  store double %51, double addrspace(1)* %38, align 8, !tbaa !7\l  br label %52\l}"];
	Node0x61d06f0 -> Node0x61d0660;
	Node0x61d0660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  ret void\l}"];
}
