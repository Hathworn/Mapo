digraph "CFG for '_Z14sub_mul_kernelPdS_S_S_S_i' function" {
	label="CFG for '_Z14sub_mul_kernelPdS_S_S_S_i' function";

	Node0x484fdf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = ashr i32 %5, 1\l  %17 = shl i32 %15, 1\l  %18 = icmp eq i32 %15, 0\l  br i1 %18, label %103, label %19\l|{<s0>T|<s1>F}}"];
	Node0x484fdf0:s0 -> Node0x4851e90;
	Node0x484fdf0:s1 -> Node0x4851f20;
	Node0x4851f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%19:\l19:                                               \l  %20 = ashr i32 %5, 2\l  %21 = sub nsw i32 %5, %17\l  %22 = sub nsw i32 %20, %15\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds double, double addrspace(1)* %4, i64 %23\l  %25 = load double, double addrspace(1)* %24, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %26 = fsub contract double 5.000000e-01, %25\l  %27 = sext i32 %15 to i64\l  %28 = getelementptr inbounds double, double addrspace(1)* %4, i64 %27\l  %29 = load double, double addrspace(1)* %28, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %30 = sext i32 %17 to i64\l  %31 = getelementptr inbounds double, double addrspace(1)* %1, i64 %30\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %33 = add nuw nsw i32 %17, 1\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %1, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = sext i32 %21 to i64\l  %38 = getelementptr inbounds double, double addrspace(1)* %1, i64 %37\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = add nsw i32 %21, 1\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %1, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fsub contract double %32, %39\l  %45 = fadd contract double %36, %43\l  %46 = fmul contract double %26, %44\l  %47 = fmul contract double %29, %45\l  %48 = fsub contract double %46, %47\l  %49 = fmul contract double %26, %45\l  %50 = fmul contract double %29, %44\l  %51 = fadd contract double %50, %49\l  %52 = fsub contract double %32, %48\l  %53 = fsub contract double %36, %51\l  %54 = fadd contract double %39, %48\l  %55 = fsub contract double %43, %51\l  %56 = getelementptr inbounds double, double addrspace(1)* %2, i64 %30\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %58 = getelementptr inbounds double, double addrspace(1)* %3, i64 %30\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %60 = fsub contract double %57, %59\l  %61 = getelementptr inbounds double, double addrspace(1)* %2, i64 %34\l  %62 = load double, double addrspace(1)* %61, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = getelementptr inbounds double, double addrspace(1)* %3, i64 %34\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %65 = fsub contract double %62, %64\l  %66 = getelementptr inbounds double, double addrspace(1)* %2, i64 %37\l  %67 = load double, double addrspace(1)* %66, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %68 = getelementptr inbounds double, double addrspace(1)* %3, i64 %37\l  %69 = load double, double addrspace(1)* %68, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %70 = fsub contract double %67, %69\l  %71 = getelementptr inbounds double, double addrspace(1)* %2, i64 %41\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %73 = getelementptr inbounds double, double addrspace(1)* %3, i64 %41\l  %74 = load double, double addrspace(1)* %73, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %75 = fsub contract double %72, %74\l  %76 = fmul contract double %52, %65\l  %77 = fmul contract double %60, %53\l  %78 = fadd contract double %77, %76\l  %79 = fmul contract double %60, %52\l  %80 = fmul contract double %53, %65\l  %81 = fsub contract double %79, %80\l  %82 = fmul contract double %54, %75\l  %83 = fmul contract double %55, %70\l  %84 = fadd contract double %83, %82\l  %85 = fmul contract double %54, %70\l  %86 = fmul contract double %55, %75\l  %87 = fsub contract double %85, %86\l  %88 = fsub contract double %81, %87\l  %89 = fadd contract double %78, %84\l  %90 = fmul contract double %26, %88\l  %91 = fmul contract double %29, %89\l  %92 = fadd contract double %90, %91\l  %93 = fmul contract double %26, %89\l  %94 = fmul contract double %29, %88\l  %95 = fsub contract double %93, %94\l  %96 = fsub contract double %81, %92\l  %97 = getelementptr inbounds double, double addrspace(1)* %0, i64 %30\l  store double %96, double addrspace(1)* %97, align 8, !tbaa !7\l  %98 = fsub contract double %95, %78\l  %99 = getelementptr inbounds double, double addrspace(1)* %0, i64 %34\l  store double %98, double addrspace(1)* %99, align 8, !tbaa !7\l  %100 = fadd contract double %87, %92\l  %101 = getelementptr inbounds double, double addrspace(1)* %0, i64 %37\l  store double %100, double addrspace(1)* %101, align 8, !tbaa !7\l  %102 = fsub contract double %95, %84\l  br label %148\l}"];
	Node0x4851f20 -> Node0x4856e20;
	Node0x4851e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%103:\l103:                                              \l  %104 = load double, double addrspace(1)* %1, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %105 = getelementptr inbounds double, double addrspace(1)* %1, i64 1\l  %106 = load double, double addrspace(1)* %105, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %107 = load double, double addrspace(1)* %2, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %108 = load double, double addrspace(1)* %3, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %109 = fsub contract double %107, %108\l  %110 = getelementptr inbounds double, double addrspace(1)* %2, i64 1\l  %111 = load double, double addrspace(1)* %110, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %112 = getelementptr inbounds double, double addrspace(1)* %3, i64 1\l  %113 = load double, double addrspace(1)* %112, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %114 = fsub contract double %111, %113\l  %115 = fmul contract double %104, %109\l  %116 = fmul contract double %106, %114\l  %117 = fadd contract double %115, %116\l  store double %117, double addrspace(1)* %0, align 8, !tbaa !7\l  %118 = fneg contract double %104\l  %119 = fmul contract double %114, %118\l  %120 = fmul contract double %106, %109\l  %121 = fsub contract double %119, %120\l  %122 = getelementptr inbounds double, double addrspace(1)* %0, i64 1\l  store double %121, double addrspace(1)* %122, align 8, !tbaa !7\l  %123 = sext i32 %16 to i64\l  %124 = getelementptr inbounds double, double addrspace(1)* %1, i64 %123\l  %125 = load double, double addrspace(1)* %124, align 8, !tbaa !7\l  %126 = add nsw i32 %16, 1\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds double, double addrspace(1)* %1, i64 %127\l  %129 = load double, double addrspace(1)* %128, align 8, !tbaa !7\l  %130 = getelementptr inbounds double, double addrspace(1)* %2, i64 %123\l  %131 = load double, double addrspace(1)* %130, align 8, !tbaa !7\l  %132 = getelementptr inbounds double, double addrspace(1)* %3, i64 %123\l  %133 = load double, double addrspace(1)* %132, align 8, !tbaa !7\l  %134 = fsub contract double %131, %133\l  %135 = getelementptr inbounds double, double addrspace(1)* %2, i64 %127\l  %136 = load double, double addrspace(1)* %135, align 8, !tbaa !7\l  %137 = getelementptr inbounds double, double addrspace(1)* %3, i64 %127\l  %138 = load double, double addrspace(1)* %137, align 8, !tbaa !7\l  %139 = fsub contract double %136, %138\l  %140 = fneg contract double %125\l  %141 = fmul contract double %139, %140\l  %142 = fmul contract double %129, %134\l  %143 = fsub contract double %141, %142\l  %144 = getelementptr inbounds double, double addrspace(1)* %0, i64 %127\l  store double %143, double addrspace(1)* %144, align 8, !tbaa !7\l  %145 = fmul contract double %125, %134\l  %146 = fmul contract double %129, %139\l  %147 = fsub contract double %145, %146\l  br label %148\l}"];
	Node0x4851e90 -> Node0x4856e20;
	Node0x4856e20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%148:\l148:                                              \l  %149 = phi i64 [ %123, %103 ], [ %41, %19 ]\l  %150 = phi double [ %147, %103 ], [ %102, %19 ]\l  %151 = getelementptr inbounds double, double addrspace(1)* %0, i64 %149\l  store double %150, double addrspace(1)* %151, align 8, !tbaa !7\l  ret void\l}"];
}
