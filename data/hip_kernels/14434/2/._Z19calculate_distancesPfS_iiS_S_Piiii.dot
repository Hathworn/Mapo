digraph "CFG for '_Z19calculate_distancesPfS_iiS_S_Piiii' function" {
	label="CFG for '_Z19calculate_distancesPfS_iiS_S_Piiii' function";

	Node0x4c7a650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %12 = mul i32 %11, %3\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = add i32 %12, %13\l  %15 = icmp ult i32 %13, 2\l  br i1 %15, label %16, label %27\l|{<s0>T|<s1>F}}"];
	Node0x4c7a650:s0 -> Node0x4c7c4a0;
	Node0x4c7a650:s1 -> Node0x4c7c530;
	Node0x4c7c4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%16:\l16:                                               \l  %17 = add i32 %11, %13\l  %18 = zext i32 %17 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %21 = getelementptr inbounds [2 x float], [2 x float] addrspace(3)*\l... @_ZZ19calculate_distancesPfS_iiS_S_PiiiiE11sweeper_pos, i32 0, i32 %13\l  store float %20, float addrspace(3)* %21, align 4, !tbaa !5\l  %22 = shl i32 %11, 2\l  %23 = add nuw nsw i32 %13, 2\l  %24 = add nuw i32 %23, %22\l  %25 = zext i32 %24 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %5, i64 %25\l  store float %20, float addrspace(1)* %26, align 4, !tbaa !5\l  br label %27\l}"];
	Node0x4c7c4a0 -> Node0x4c7c530;
	Node0x4c7c530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %28 = shl nuw nsw i32 %13, 1\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !5\l  %32 = load float, float addrspace(3)* getelementptr inbounds ([2 x float],\l... [2 x float] addrspace(3)*\l... @_ZZ19calculate_distancesPfS_iiS_S_PiiiiE11sweeper_pos, i32 0, i32 0), align\l... 4, !tbaa !5\l  %33 = fsub contract float %31, %32\l  %34 = add nuw nsw i32 %28, 1\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !5\l  %38 = load float, float addrspace(3)* getelementptr inbounds ([2 x float],\l... [2 x float] addrspace(3)*\l... @_ZZ19calculate_distancesPfS_iiS_S_PiiiiE11sweeper_pos, i32 0, i32 1), align\l... 4, !tbaa !5\l  %39 = fsub contract float %37, %38\l  %40 = fmul contract float %33, %33\l  %41 = fmul contract float %39, %39\l  %42 = fadd contract float %40, %41\l  %43 = fcmp olt float %42, 0x39F0000000000000\l  %44 = select i1 %43, float 0x41F0000000000000, float 1.000000e+00\l  %45 = fmul float %42, %44\l  %46 = tail call float @llvm.sqrt.f32(float %45)\l  %47 = bitcast float %46 to i32\l  %48 = add nsw i32 %47, -1\l  %49 = bitcast i32 %48 to float\l  %50 = add nsw i32 %47, 1\l  %51 = bitcast i32 %50 to float\l  %52 = tail call i1 @llvm.amdgcn.class.f32(float %45, i32 608)\l  %53 = select i1 %43, float 0x3EF0000000000000, float 1.000000e+00\l  %54 = fneg float %51\l  %55 = tail call float @llvm.fma.f32(float %54, float %46, float %45)\l  %56 = fcmp ogt float %55, 0.000000e+00\l  %57 = fneg float %49\l  %58 = tail call float @llvm.fma.f32(float %57, float %46, float %45)\l  %59 = fcmp ole float %58, 0.000000e+00\l  %60 = select i1 %59, float %49, float %46\l  %61 = select i1 %56, float %51, float %60\l  %62 = fmul float %53, %61\l  %63 = select i1 %52, float %45, float %62\l  %64 = sext i32 %14 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %4, i64 %64\l  store float %63, float addrspace(1)* %65, align 4, !tbaa !5\l  %66 = sitofp i32 %9 to float\l  %67 = fcmp contract olt float %63, %66\l  br i1 %67, label %68, label %85\l|{<s0>T|<s1>F}}"];
	Node0x4c7c530:s0 -> Node0x4c7e1e0;
	Node0x4c7c530:s1 -> Node0x4c80910;
	Node0x4c7e1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%68:\l68:                                               \l  %69 = add nuw nsw i32 %13, 1\l  %70 = zext i32 %69 to i64\l  %71 = tail call i64 @llvm.amdgcn.s.memtime()\l  %72 = mul nsw i64 %71, %70\l  %73 = sext i32 %7 to i64\l  %74 = srem i64 %72, %73\l  %75 = sitofp i64 %74 to float\l  store float %75, float addrspace(1)* %30, align 4, !tbaa !5\l  %76 = tail call i64 @llvm.amdgcn.s.memtime()\l  %77 = mul nsw i64 %76, %70\l  %78 = sext i32 %8 to i64\l  %79 = srem i64 %77, %78\l  %80 = sitofp i64 %79 to float\l  store float %80, float addrspace(1)* %36, align 4, !tbaa !5\l  %81 = zext i32 %11 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !10\l  %84 = add nsw i32 %83, 1\l  store i32 %84, i32 addrspace(1)* %82, align 4, !tbaa !10\l  br label %85\l}"];
	Node0x4c7e1e0 -> Node0x4c80910;
	Node0x4c80910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  ret void\l}"];
}
