digraph "CFG for '_Z24matrix_mult_kernel_tiledPiS_S_iii' function" {
	label="CFG for '_Z24matrix_mult_kernel_tiledPiS_S_iii' function";

	Node0x63797b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = shl nsw i32 %10, 4\l  %12 = add nsw i32 %11, %8\l  %13 = shl nsw i32 %9, 4\l  %14 = add nsw i32 %13, %7\l  %15 = sitofp i32 %5 to float\l  %16 = fmul contract float %15, 6.250000e-02\l  %17 = tail call float @llvm.ceil.f32(float %16)\l  %18 = fcmp contract ogt float %17, 0.000000e+00\l  br i1 %18, label %19, label %57\l|{<s0>T|<s1>F}}"];
	Node0x63797b0:s0 -> Node0x637c8e0;
	Node0x63797b0:s1 -> Node0x637c970;
	Node0x637c8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%19:\l19:                                               \l  %20 = icmp slt i32 %12, %3\l  %21 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 %7\l  %22 = mul nsw i32 %12, %5\l  %23 = icmp slt i32 %14, %4\l  %24 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 %8,\l... i32 %7\l  %25 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 0\l  %26 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 0,\l... i32 %7\l  %27 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 1\l  %28 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 1,\l... i32 %7\l  %29 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 2\l  %30 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 2,\l... i32 %7\l  %31 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 3\l  %32 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 3,\l... i32 %7\l  %33 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 4\l  %34 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 4,\l... i32 %7\l  %35 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 5\l  %36 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 5,\l... i32 %7\l  %37 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 6\l  %38 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 6,\l... i32 %7\l  %39 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 7\l  %40 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 7,\l... i32 %7\l  %41 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 8\l  %42 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 8,\l... i32 %7\l  %43 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 9\l  %44 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 9,\l... i32 %7\l  %45 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 10\l  %46 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 10,\l... i32 %7\l  %47 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 11\l  %48 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 11,\l... i32 %7\l  %49 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 12\l  %50 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 12,\l... i32 %7\l  %51 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 13\l  %52 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 13,\l... i32 %7\l  %53 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 14\l  %54 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 14,\l... i32 %7\l  %55 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_m, i32 0, i32 %8,\l... i32 15\l  %56 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ24matrix_mult_kernel_tiledPiS_S_iiiE4ds_n, i32 0, i32 15,\l... i32 %7\l  br label %62\l}"];
	Node0x637c8e0 -> Node0x637cb90;
	Node0x637c970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%57:\l57:                                               \l  %58 = phi i32 [ 0, %6 ], [ %151, %86 ]\l  %59 = icmp slt i32 %12, %3\l  %60 = icmp slt i32 %14, %4\l  %61 = select i1 %59, i1 %60, i1 false\l  br i1 %61, label %155, label %160\l|{<s0>T|<s1>F}}"];
	Node0x637c970:s0 -> Node0x637f240;
	Node0x637c970:s1 -> Node0x637f2d0;
	Node0x637cb90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  %63 = phi i32 [ 0, %19 ], [ %152, %86 ]\l  %64 = phi i32 [ 0, %19 ], [ %151, %86 ]\l  br i1 %20, label %65, label %74\l|{<s0>T|<s1>F}}"];
	Node0x637cb90:s0 -> Node0x637d650;
	Node0x637cb90:s1 -> Node0x637d6e0;
	Node0x637d650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%65:\l65:                                               \l  %66 = shl nsw i32 %63, 4\l  %67 = add nuw i32 %66, %7\l  %68 = icmp slt i32 %67, %5\l  br i1 %68, label %69, label %74\l|{<s0>T|<s1>F}}"];
	Node0x637d650:s0 -> Node0x637fb60;
	Node0x637d650:s1 -> Node0x637d6e0;
	Node0x637fb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%69:\l69:                                               \l  %70 = add i32 %67, %22\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %71\l  %73 = load i32, i32 addrspace(1)* %72, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  br label %74\l}"];
	Node0x637fb60 -> Node0x637d6e0;
	Node0x637d6e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = phi i32 [ %73, %69 ], [ 0, %65 ], [ 0, %62 ]\l  store i32 %75, i32 addrspace(3)* %21, align 4, !tbaa !5\l  br i1 %23, label %76, label %86\l|{<s0>T|<s1>F}}"];
	Node0x637d6e0:s0 -> Node0x63808c0;
	Node0x637d6e0:s1 -> Node0x637ef00;
	Node0x63808c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%76:\l76:                                               \l  %77 = shl nsw i32 %63, 4\l  %78 = add nuw nsw i32 %77, %8\l  %79 = icmp slt i32 %78, %5\l  br i1 %79, label %80, label %86\l|{<s0>T|<s1>F}}"];
	Node0x63808c0:s0 -> Node0x6380b70;
	Node0x63808c0:s1 -> Node0x637ef00;
	Node0x6380b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%80:\l80:                                               \l  %81 = mul nsw i32 %78, %4\l  %82 = add nsw i32 %81, %14\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  br label %86\l}"];
	Node0x6380b70 -> Node0x637ef00;
	Node0x637ef00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  %87 = phi i32 [ %85, %80 ], [ 0, %76 ], [ 0, %74 ]\l  store i32 %87, i32 addrspace(3)* %24, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %88 = load i32, i32 addrspace(3)* %25, align 16, !tbaa !5\l  %89 = load i32, i32 addrspace(3)* %26, align 4, !tbaa !5\l  %90 = mul nsw i32 %89, %88\l  %91 = add nsw i32 %90, %64\l  %92 = load i32, i32 addrspace(3)* %27, align 4, !tbaa !5\l  %93 = load i32, i32 addrspace(3)* %28, align 4, !tbaa !5\l  %94 = mul nsw i32 %93, %92\l  %95 = add nsw i32 %94, %91\l  %96 = load i32, i32 addrspace(3)* %29, align 8, !tbaa !5\l  %97 = load i32, i32 addrspace(3)* %30, align 4, !tbaa !5\l  %98 = mul nsw i32 %97, %96\l  %99 = add nsw i32 %98, %95\l  %100 = load i32, i32 addrspace(3)* %31, align 4, !tbaa !5\l  %101 = load i32, i32 addrspace(3)* %32, align 4, !tbaa !5\l  %102 = mul nsw i32 %101, %100\l  %103 = add nsw i32 %102, %99\l  %104 = load i32, i32 addrspace(3)* %33, align 16, !tbaa !5\l  %105 = load i32, i32 addrspace(3)* %34, align 4, !tbaa !5\l  %106 = mul nsw i32 %105, %104\l  %107 = add nsw i32 %106, %103\l  %108 = load i32, i32 addrspace(3)* %35, align 4, !tbaa !5\l  %109 = load i32, i32 addrspace(3)* %36, align 4, !tbaa !5\l  %110 = mul nsw i32 %109, %108\l  %111 = add nsw i32 %110, %107\l  %112 = load i32, i32 addrspace(3)* %37, align 8, !tbaa !5\l  %113 = load i32, i32 addrspace(3)* %38, align 4, !tbaa !5\l  %114 = mul nsw i32 %113, %112\l  %115 = add nsw i32 %114, %111\l  %116 = load i32, i32 addrspace(3)* %39, align 4, !tbaa !5\l  %117 = load i32, i32 addrspace(3)* %40, align 4, !tbaa !5\l  %118 = mul nsw i32 %117, %116\l  %119 = add nsw i32 %118, %115\l  %120 = load i32, i32 addrspace(3)* %41, align 16, !tbaa !5\l  %121 = load i32, i32 addrspace(3)* %42, align 4, !tbaa !5\l  %122 = mul nsw i32 %121, %120\l  %123 = add nsw i32 %122, %119\l  %124 = load i32, i32 addrspace(3)* %43, align 4, !tbaa !5\l  %125 = load i32, i32 addrspace(3)* %44, align 4, !tbaa !5\l  %126 = mul nsw i32 %125, %124\l  %127 = add nsw i32 %126, %123\l  %128 = load i32, i32 addrspace(3)* %45, align 8, !tbaa !5\l  %129 = load i32, i32 addrspace(3)* %46, align 4, !tbaa !5\l  %130 = mul nsw i32 %129, %128\l  %131 = add nsw i32 %130, %127\l  %132 = load i32, i32 addrspace(3)* %47, align 4, !tbaa !5\l  %133 = load i32, i32 addrspace(3)* %48, align 4, !tbaa !5\l  %134 = mul nsw i32 %133, %132\l  %135 = add nsw i32 %134, %131\l  %136 = load i32, i32 addrspace(3)* %49, align 16, !tbaa !5\l  %137 = load i32, i32 addrspace(3)* %50, align 4, !tbaa !5\l  %138 = mul nsw i32 %137, %136\l  %139 = add nsw i32 %138, %135\l  %140 = load i32, i32 addrspace(3)* %51, align 4, !tbaa !5\l  %141 = load i32, i32 addrspace(3)* %52, align 4, !tbaa !5\l  %142 = mul nsw i32 %141, %140\l  %143 = add nsw i32 %142, %139\l  %144 = load i32, i32 addrspace(3)* %53, align 8, !tbaa !5\l  %145 = load i32, i32 addrspace(3)* %54, align 4, !tbaa !5\l  %146 = mul nsw i32 %145, %144\l  %147 = add nsw i32 %146, %143\l  %148 = load i32, i32 addrspace(3)* %55, align 4, !tbaa !5\l  %149 = load i32, i32 addrspace(3)* %56, align 4, !tbaa !5\l  %150 = mul nsw i32 %149, %148\l  %151 = add nsw i32 %150, %147\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %152 = add nuw nsw i32 %63, 1\l  %153 = sitofp i32 %152 to float\l  %154 = fcmp contract ogt float %17, %153\l  br i1 %154, label %62, label %57, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x637ef00:s0 -> Node0x637cb90;
	Node0x637ef00:s1 -> Node0x637c970;
	Node0x637f240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%155:\l155:                                              \l  %156 = mul nsw i32 %12, %4\l  %157 = add nsw i32 %156, %14\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %158\l  store i32 %58, i32 addrspace(1)* %159, align 4, !tbaa !5\l  br label %160\l}"];
	Node0x637f240 -> Node0x637f2d0;
	Node0x637f2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%160:\l160:                                              \l  ret void\l}"];
}
