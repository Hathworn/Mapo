digraph "CFG for '_Z3addPfS_' function" {
	label="CFG for '_Z3addPfS_' function";

	Node0x4d194e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = mul nuw nsw i32 %4, %9\l  %11 = add nuw nsw i32 %10, %3\l  %12 = add nsw i32 %4, -1\l  %13 = icmp ult i32 %12, 6\l  %14 = icmp ne i32 %3, 0\l  %15 = select i1 %13, i1 %14, i1 false\l  %16 = icmp ult i32 %3, 7\l  %17 = select i1 %15, i1 %16, i1 false\l  br i1 %17, label %18, label %42\l|{<s0>T|<s1>F}}"];
	Node0x4d194e0:s0 -> Node0x4d1aaa0;
	Node0x4d194e0:s1 -> Node0x4d1b810;
	Node0x4d1aaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = add nuw nsw i32 %4, 1\l  %20 = mul nuw nsw i32 %19, %9\l  %21 = add nuw nsw i32 %20, %3\l  %22 = mul nuw nsw i32 %12, %9\l  %23 = add nuw nsw i32 %22, %3\l  %24 = add nuw nsw i32 %11, 1\l  %25 = add nsw i32 %11, -1\l  %26 = zext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %29 = zext i32 %24 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %0, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %32 = fadd contract float %28, %31\l  %33 = zext i32 %23 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %36 = fadd contract float %32, %35\l  %37 = zext i32 %21 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %40 = fadd contract float %36, %39\l  %41 = zext i32 %11 to i64\l  br label %46\l}"];
	Node0x4d1aaa0 -> Node0x4d1dc20;
	Node0x4d1b810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%42:\l42:                                               \l  %43 = zext i32 %11 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  br label %46\l}"];
	Node0x4d1b810 -> Node0x4d1dc20;
	Node0x4d1dc20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i64 [ %43, %42 ], [ %41, %18 ]\l  %48 = phi float [ %45, %42 ], [ %40, %18 ]\l  %49 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  store float %48, float addrspace(1)* %49, align 4, !tbaa !7\l  ret void\l}"];
}
