digraph "CFG for '_Z25CorrelateDataBackward1_1diiiiiiiiiiiiiiiiiiiPKfPfS0_' function" {
	label="CFG for '_Z25CorrelateDataBackward1_1diiiiiiiiiiiiiiiiiiiPKfPfS0_' function";

	Node0x482e1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%22:\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %24 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %25 = getelementptr i8, i8 addrspace(4)* %24, i64 4\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 4, !range !4, !invariant.load !5\l  %28 = zext i16 %27 to i32\l  %29 = getelementptr inbounds i8, i8 addrspace(4)* %24, i64 12\l  %30 = bitcast i8 addrspace(4)* %29 to i32 addrspace(4)*\l  %31 = load i32, i32 addrspace(4)* %30, align 4, !tbaa !6\l  %32 = mul i32 %23, %28\l  %33 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %34 = add i32 %32, %33\l  %35 = icmp slt i32 %34, %0\l  br i1 %35, label %36, label %63\l|{<s0>T|<s1>F}}"];
	Node0x482e1a0:s0 -> Node0x4830e60;
	Node0x482e1a0:s1 -> Node0x4830ef0;
	Node0x4830e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%36:\l36:                                               \l  %37 = mul nsw i32 %10, 50000\l  %38 = add nsw i32 %8, %7\l  %39 = icmp sgt i32 %8, 0\l  %40 = mul i32 %9, -2\l  %41 = sub i32 %37, %6\l  %42 = add nsw i32 %41, -1\l  %43 = add i32 %42, %40\l  %44 = add nsw i32 %37, -1\l  %45 = add i32 %44, %40\l  %46 = add nsw i32 %3, -1\l  %47 = add nsw i32 %4, -1\l  %48 = mul nsw i32 %15, %2\l  %49 = mul nsw i32 %5, %2\l  %50 = sub i32 %49, %7\l  %51 = shl nsw i32 %9, 1\l  %52 = add nuw nsw i32 %51, 1\l  %53 = mul nsw i32 %52, %52\l  %54 = mul nsw i32 %53, %16\l  %55 = sitofp i32 %54 to float\l  %56 = mul nsw i32 %17, %2\l  %57 = udiv i32 %31, %28\l  %58 = mul i32 %57, %28\l  %59 = icmp ugt i32 %31, %58\l  %60 = zext i1 %59 to i32\l  %61 = add i32 %57, %60\l  %62 = mul i32 %61, %28\l  br label %64\l}"];
	Node0x4830e60 -> Node0x4831f50;
	Node0x4830ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%63:\l63:                                               \l  ret void\l}"];
	Node0x4831f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%64:\l64:                                               \l  %65 = phi i32 [ %34, %36 ], [ %104, %94 ]\l  %66 = freeze i32 %65\l  %67 = freeze i32 %16\l  %68 = sdiv i32 %66, %67\l  %69 = mul i32 %68, %67\l  %70 = sub i32 %66, %69\l  %71 = freeze i32 %12\l  %72 = sdiv i32 %68, %71\l  %73 = mul i32 %72, %71\l  %74 = sub i32 %68, %73\l  %75 = add nsw i32 %74, %18\l  %76 = srem i32 %72, %13\l  br i1 %39, label %77, label %94\l|{<s0>T|<s1>F}}"];
	Node0x4831f50:s0 -> Node0x4830aa0;
	Node0x4831f50:s1 -> Node0x48308f0;
	Node0x4830aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%77:\l77:                                               \l  %78 = add i32 %43, %75\l  %79 = add i32 %45, %76\l  %80 = sdiv i32 %79, %10\l  %81 = add nsw i32 %80, -49999\l  %82 = add nsw i32 %76, %37\l  %83 = sdiv i32 %82, %10\l  %84 = add nsw i32 %83, -50000\l  %85 = icmp sgt i32 %83, 49999\l  %86 = icmp slt i32 %81, %4\l  %87 = tail call i32 @llvm.smax.i32(i32 %81, i32 0)\l  %88 = tail call i32 @llvm.smin.i32(i32 %47, i32 %84)\l  %89 = add nsw i32 %76, %48\l  %90 = mul nsw i32 %89, %14\l  %91 = add i32 %90, %75\l  %92 = icmp sgt i32 %87, %88\l  %93 = add i32 %37, %75\l  br label %106\l}"];
	Node0x4830aa0 -> Node0x4833740;
	Node0x48308f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%94:\l94:                                               \l  %95 = phi float [ 0.000000e+00, %64 ], [ %157, %156 ]\l  %96 = mul nsw i32 %70, %13\l  %97 = add nsw i32 %76, %96\l  %98 = mul nsw i32 %97, %12\l  %99 = fdiv contract float %95, %55\l  %100 = add i32 %74, %56\l  %101 = add i32 %100, %98\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %20, i64 %102\l  store float %99, float addrspace(1)* %103, align 4, !tbaa !16\l  %104 = add i32 %62, %65\l  %105 = icmp slt i32 %104, %0\l  br i1 %105, label %64, label %63, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x48308f0:s0 -> Node0x4831f50;
	Node0x48308f0:s1 -> Node0x4830ef0;
	Node0x4833740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%106:\l106:                                              \l  %107 = phi float [ 0.000000e+00, %77 ], [ %157, %156 ]\l  %108 = phi i32 [ %7, %77 ], [ %158, %156 ]\l  %109 = mul i32 %108, %11\l  %110 = sub i32 %78, %109\l  %111 = sdiv i32 %110, %10\l  %112 = add nsw i32 %111, -49999\l  %113 = add i32 %109, %6\l  %114 = sub i32 %93, %113\l  %115 = sdiv i32 %114, %10\l  %116 = icmp sgt i32 %115, 49999\l  %117 = select i1 %116, i1 %85, i1 false\l  %118 = icmp slt i32 %112, %3\l  %119 = select i1 %117, i1 %118, i1 false\l  %120 = select i1 %119, i1 %86, i1 false\l  br i1 %120, label %121, label %156\l|{<s0>T|<s1>F}}"];
	Node0x4833740:s0 -> Node0x48355e0;
	Node0x4833740:s1 -> Node0x48342c0;
	Node0x48355e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%121:\l121:                                              \l  %122 = add nsw i32 %115, -50000\l  %123 = tail call i32 @llvm.smax.i32(i32 %112, i32 0)\l  %124 = tail call i32 @llvm.smin.i32(i32 %46, i32 %122)\l  %125 = sub i32 %91, %109\l  %126 = mul nsw i32 %125, %16\l  %127 = add nsw i32 %126, %70\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %19, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !16\l  br i1 %92, label %156, label %131\l|{<s0>T|<s1>F}}"];
	Node0x48355e0:s0 -> Node0x48342c0;
	Node0x48355e0:s1 -> Node0x4832170;
	Node0x4832170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%131:\l131:                                              \l  %132 = add i32 %50, %108\l  %133 = icmp sgt i32 %123, %124\l  %134 = mul nsw i32 %132, %4\l  br label %135\l}"];
	Node0x4832170 -> Node0x4836a10;
	Node0x4836a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%135:\l135:                                              \l  %136 = phi float [ %107, %131 ], [ %142, %141 ]\l  %137 = phi i32 [ %87, %131 ], [ %143, %141 ]\l  br i1 %133, label %141, label %138\l|{<s0>T|<s1>F}}"];
	Node0x4836a10:s0 -> Node0x4836ad0;
	Node0x4836a10:s1 -> Node0x4836d30;
	Node0x4836d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%138:\l138:                                              \l  %139 = add nsw i32 %137, %134\l  %140 = mul nsw i32 %139, %3\l  br label %145\l}"];
	Node0x4836d30 -> Node0x4836f90;
	Node0x4836ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%141:\l141:                                              \l  %142 = phi float [ %136, %135 ], [ %153, %145 ]\l  %143 = add nuw nsw i32 %137, 1\l  %144 = icmp slt i32 %137, %88\l  br i1 %144, label %135, label %156, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4836ad0:s0 -> Node0x4836a10;
	Node0x4836ad0:s1 -> Node0x48342c0;
	Node0x4836f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%145:\l145:                                              \l  %146 = phi float [ %136, %138 ], [ %153, %145 ]\l  %147 = phi i32 [ %123, %138 ], [ %154, %145 ]\l  %148 = add nsw i32 %147, %140\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %21, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !16\l  %152 = fmul contract float %130, %151\l  %153 = fadd contract float %146, %152\l  %154 = add nuw nsw i32 %147, 1\l  %155 = icmp slt i32 %147, %124\l  br i1 %155, label %145, label %141, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x4836f90:s0 -> Node0x4836f90;
	Node0x4836f90:s1 -> Node0x4836ad0;
	Node0x48342c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%156:\l156:                                              \l  %157 = phi float [ %107, %106 ], [ %107, %121 ], [ %142, %141 ]\l  %158 = add nsw i32 %108, 1\l  %159 = icmp slt i32 %158, %38\l  br i1 %159, label %106, label %94, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x48342c0:s0 -> Node0x4833740;
	Node0x48342c0:s1 -> Node0x48308f0;
}
