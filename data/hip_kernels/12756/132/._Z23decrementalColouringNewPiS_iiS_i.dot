digraph "CFG for '_Z23decrementalColouringNewPiS_iiS_i' function" {
	label="CFG for '_Z23decrementalColouringNewPiS_iiS_i' function";

	Node0x5746270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %11\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %5\l  br i1 %16, label %17, label %522\l|{<s0>T|<s1>F}}"];
	Node0x5746270:s0 -> Node0x5746b90;
	Node0x5746270:s1 -> Node0x5748280;
	Node0x5746b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%17:\l17:                                               \l  %18 = sext i32 %15 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %21 = and i32 %15, 1\l  %22 = icmp eq i32 %21, 0\l  %23 = select i1 %22, i32 1, i32 -1\l  %24 = add nsw i32 %23, %15\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %25\l  %27 = load i32, i32 addrspace(1)* %26, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %28 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %29 = getelementptr inbounds i8, i8 addrspace(4)* %28, i64 24\l  %30 = bitcast i8 addrspace(4)* %29 to i64 addrspace(4)*\l  %31 = load i64, i64 addrspace(4)* %30, align 8, !tbaa !11\l  %32 = inttoptr i64 %31 to i8 addrspace(1)*\l  %33 = addrspacecast i8 addrspace(1)* %32 to i8*\l  %34 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %33,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %35 = extractelement \<2 x i64\> %34, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([35 x i8], [35 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %36, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5746b90:s0 -> Node0x574a6e0;
	Node0x5746b90:s1 -> Node0x574b0d0;
	Node0x574a6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%36:\l36:                                               \l  %37 = and i64 %35, -225\l  %38 = or i64 %37, 32\l  %39 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %33,\l... i64 noundef %38, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %481\l}"];
	Node0x574a6e0 -> Node0x574b390;
	Node0x574b0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%40:\l40:                                               \l  %41 = and i64 %35, 2\l  %42 = and i64 %35, -3\l  %43 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %42, i64 0\l  br label %44\l}"];
	Node0x574b0d0 -> Node0x574bf30;
	Node0x574bf30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%44:\l44:                                               \l  %45 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([35 x i8], [35 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([35 x i8], [35 x i8] addrspace(4)*\l... @.str, i64 0, i64 34) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([35 x i8]* addrspacecast ([35 x i8] addrspace(4)* @.str to [35 x i8]*) to\l... i64)), i64 1))), %40 ], [ %478, %470 ]\l  %46 = phi i8 addrspace(4)* [ getelementptr inbounds ([35 x i8], [35 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %40 ], [ %479, %470 ]\l  %47 = phi \<2 x i64\> [ %43, %40 ], [ %477, %470 ]\l  %48 = icmp ugt i64 %45, 56\l  %49 = extractelement \<2 x i64\> %47, i64 0\l  %50 = or i64 %49, %41\l  %51 = insertelement \<2 x i64\> poison, i64 %50, i64 0\l  %52 = select i1 %48, \<2 x i64\> %47, \<2 x i64\> %51\l  %53 = tail call i64 @llvm.umin.i64(i64 %45, i64 56)\l  %54 = trunc i64 %53 to i32\l  %55 = extractelement \<2 x i64\> %52, i64 0\l  %56 = icmp ugt i32 %54, 7\l  br i1 %56, label %59, label %57\l|{<s0>T|<s1>F}}"];
	Node0x574bf30:s0 -> Node0x574cea0;
	Node0x574bf30:s1 -> Node0x574cf30;
	Node0x574cf30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%57:\l57:                                               \l  %58 = icmp eq i32 %54, 0\l  br i1 %58, label %112, label %99\l|{<s0>T|<s1>F}}"];
	Node0x574cf30:s0 -> Node0x574d100;
	Node0x574cf30:s1 -> Node0x574d150;
	Node0x574cea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%59:\l59:                                               \l  %60 = load i8, i8 addrspace(4)* %46, align 1, !tbaa !15\l  %61 = zext i8 %60 to i64\l  %62 = getelementptr inbounds i8, i8 addrspace(4)* %46, i64 1\l  %63 = load i8, i8 addrspace(4)* %62, align 1, !tbaa !15\l  %64 = zext i8 %63 to i64\l  %65 = shl nuw nsw i64 %64, 8\l  %66 = or i64 %65, %61\l  %67 = getelementptr inbounds i8, i8 addrspace(4)* %46, i64 2\l  %68 = load i8, i8 addrspace(4)* %67, align 1, !tbaa !15\l  %69 = zext i8 %68 to i64\l  %70 = shl nuw nsw i64 %69, 16\l  %71 = or i64 %66, %70\l  %72 = getelementptr inbounds i8, i8 addrspace(4)* %46, i64 3\l  %73 = load i8, i8 addrspace(4)* %72, align 1, !tbaa !15\l  %74 = zext i8 %73 to i64\l  %75 = shl nuw nsw i64 %74, 24\l  %76 = or i64 %71, %75\l  %77 = getelementptr inbounds i8, i8 addrspace(4)* %46, i64 4\l  %78 = load i8, i8 addrspace(4)* %77, align 1, !tbaa !15\l  %79 = zext i8 %78 to i64\l  %80 = shl nuw nsw i64 %79, 32\l  %81 = or i64 %76, %80\l  %82 = getelementptr inbounds i8, i8 addrspace(4)* %46, i64 5\l  %83 = load i8, i8 addrspace(4)* %82, align 1, !tbaa !15\l  %84 = zext i8 %83 to i64\l  %85 = shl nuw nsw i64 %84, 40\l  %86 = or i64 %81, %85\l  %87 = getelementptr inbounds i8, i8 addrspace(4)* %46, i64 6\l  %88 = load i8, i8 addrspace(4)* %87, align 1, !tbaa !15\l  %89 = zext i8 %88 to i64\l  %90 = shl nuw nsw i64 %89, 48\l  %91 = or i64 %86, %90\l  %92 = getelementptr inbounds i8, i8 addrspace(4)* %46, i64 7\l  %93 = load i8, i8 addrspace(4)* %92, align 1, !tbaa !15\l  %94 = zext i8 %93 to i64\l  %95 = shl nuw i64 %94, 56\l  %96 = or i64 %91, %95\l  %97 = add nsw i32 %54, -8\l  %98 = getelementptr inbounds i8, i8 addrspace(4)* %46, i64 8\l  br label %112\l}"];
	Node0x574cea0 -> Node0x574d100;
	Node0x574d150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%99:\l99:                                               \l  %100 = phi i32 [ %110, %99 ], [ 0, %57 ]\l  %101 = phi i64 [ %109, %99 ], [ 0, %57 ]\l  %102 = zext i32 %100 to i64\l  %103 = getelementptr inbounds i8, i8 addrspace(4)* %46, i64 %102\l  %104 = load i8, i8 addrspace(4)* %103, align 1, !tbaa !15\l  %105 = zext i8 %104 to i64\l  %106 = shl i32 %100, 3\l  %107 = zext i32 %106 to i64\l  %108 = shl nuw i64 %105, %107\l  %109 = or i64 %108, %101\l  %110 = add nuw nsw i32 %100, 1\l  %111 = icmp eq i32 %110, %54\l  br i1 %111, label %112, label %99, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x574d150:s0 -> Node0x574d100;
	Node0x574d150:s1 -> Node0x574d150;
	Node0x574d100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%112:\l112:                                              \l  %113 = phi i8 addrspace(4)* [ %98, %59 ], [ %46, %57 ], [ %46, %99 ]\l  %114 = phi i32 [ %97, %59 ], [ 0, %57 ], [ 0, %99 ]\l  %115 = phi i64 [ %96, %59 ], [ 0, %57 ], [ %109, %99 ]\l  %116 = icmp ugt i32 %114, 7\l  br i1 %116, label %119, label %117\l|{<s0>T|<s1>F}}"];
	Node0x574d100:s0 -> Node0x574fe10;
	Node0x574d100:s1 -> Node0x574fe60;
	Node0x574fe60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%117:\l117:                                              \l  %118 = icmp eq i32 %114, 0\l  br i1 %118, label %172, label %159\l|{<s0>T|<s1>F}}"];
	Node0x574fe60:s0 -> Node0x5750030;
	Node0x574fe60:s1 -> Node0x5750080;
	Node0x574fe10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%119:\l119:                                              \l  %120 = load i8, i8 addrspace(4)* %113, align 1, !tbaa !15\l  %121 = zext i8 %120 to i64\l  %122 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 1\l  %123 = load i8, i8 addrspace(4)* %122, align 1, !tbaa !15\l  %124 = zext i8 %123 to i64\l  %125 = shl nuw nsw i64 %124, 8\l  %126 = or i64 %125, %121\l  %127 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 2\l  %128 = load i8, i8 addrspace(4)* %127, align 1, !tbaa !15\l  %129 = zext i8 %128 to i64\l  %130 = shl nuw nsw i64 %129, 16\l  %131 = or i64 %126, %130\l  %132 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 3\l  %133 = load i8, i8 addrspace(4)* %132, align 1, !tbaa !15\l  %134 = zext i8 %133 to i64\l  %135 = shl nuw nsw i64 %134, 24\l  %136 = or i64 %131, %135\l  %137 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 4\l  %138 = load i8, i8 addrspace(4)* %137, align 1, !tbaa !15\l  %139 = zext i8 %138 to i64\l  %140 = shl nuw nsw i64 %139, 32\l  %141 = or i64 %136, %140\l  %142 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 5\l  %143 = load i8, i8 addrspace(4)* %142, align 1, !tbaa !15\l  %144 = zext i8 %143 to i64\l  %145 = shl nuw nsw i64 %144, 40\l  %146 = or i64 %141, %145\l  %147 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 6\l  %148 = load i8, i8 addrspace(4)* %147, align 1, !tbaa !15\l  %149 = zext i8 %148 to i64\l  %150 = shl nuw nsw i64 %149, 48\l  %151 = or i64 %146, %150\l  %152 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 7\l  %153 = load i8, i8 addrspace(4)* %152, align 1, !tbaa !15\l  %154 = zext i8 %153 to i64\l  %155 = shl nuw i64 %154, 56\l  %156 = or i64 %151, %155\l  %157 = add nsw i32 %114, -8\l  %158 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 8\l  br label %172\l}"];
	Node0x574fe10 -> Node0x5750030;
	Node0x5750080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%159:\l159:                                              \l  %160 = phi i32 [ %170, %159 ], [ 0, %117 ]\l  %161 = phi i64 [ %169, %159 ], [ 0, %117 ]\l  %162 = zext i32 %160 to i64\l  %163 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 %162\l  %164 = load i8, i8 addrspace(4)* %163, align 1, !tbaa !15\l  %165 = zext i8 %164 to i64\l  %166 = shl i32 %160, 3\l  %167 = zext i32 %166 to i64\l  %168 = shl nuw i64 %165, %167\l  %169 = or i64 %168, %161\l  %170 = add nuw nsw i32 %160, 1\l  %171 = icmp eq i32 %170, %114\l  br i1 %171, label %172, label %159\l|{<s0>T|<s1>F}}"];
	Node0x5750080:s0 -> Node0x5750030;
	Node0x5750080:s1 -> Node0x5750080;
	Node0x5750030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%172:\l172:                                              \l  %173 = phi i8 addrspace(4)* [ %158, %119 ], [ %113, %117 ], [ %113, %159 ]\l  %174 = phi i32 [ %157, %119 ], [ 0, %117 ], [ 0, %159 ]\l  %175 = phi i64 [ %156, %119 ], [ 0, %117 ], [ %169, %159 ]\l  %176 = icmp ugt i32 %174, 7\l  br i1 %176, label %179, label %177\l|{<s0>T|<s1>F}}"];
	Node0x5750030:s0 -> Node0x5752510;
	Node0x5750030:s1 -> Node0x5752560;
	Node0x5752560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%177:\l177:                                              \l  %178 = icmp eq i32 %174, 0\l  br i1 %178, label %232, label %219\l|{<s0>T|<s1>F}}"];
	Node0x5752560:s0 -> Node0x57526f0;
	Node0x5752560:s1 -> Node0x5752740;
	Node0x5752510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%179:\l179:                                              \l  %180 = load i8, i8 addrspace(4)* %173, align 1, !tbaa !15\l  %181 = zext i8 %180 to i64\l  %182 = getelementptr inbounds i8, i8 addrspace(4)* %173, i64 1\l  %183 = load i8, i8 addrspace(4)* %182, align 1, !tbaa !15\l  %184 = zext i8 %183 to i64\l  %185 = shl nuw nsw i64 %184, 8\l  %186 = or i64 %185, %181\l  %187 = getelementptr inbounds i8, i8 addrspace(4)* %173, i64 2\l  %188 = load i8, i8 addrspace(4)* %187, align 1, !tbaa !15\l  %189 = zext i8 %188 to i64\l  %190 = shl nuw nsw i64 %189, 16\l  %191 = or i64 %186, %190\l  %192 = getelementptr inbounds i8, i8 addrspace(4)* %173, i64 3\l  %193 = load i8, i8 addrspace(4)* %192, align 1, !tbaa !15\l  %194 = zext i8 %193 to i64\l  %195 = shl nuw nsw i64 %194, 24\l  %196 = or i64 %191, %195\l  %197 = getelementptr inbounds i8, i8 addrspace(4)* %173, i64 4\l  %198 = load i8, i8 addrspace(4)* %197, align 1, !tbaa !15\l  %199 = zext i8 %198 to i64\l  %200 = shl nuw nsw i64 %199, 32\l  %201 = or i64 %196, %200\l  %202 = getelementptr inbounds i8, i8 addrspace(4)* %173, i64 5\l  %203 = load i8, i8 addrspace(4)* %202, align 1, !tbaa !15\l  %204 = zext i8 %203 to i64\l  %205 = shl nuw nsw i64 %204, 40\l  %206 = or i64 %201, %205\l  %207 = getelementptr inbounds i8, i8 addrspace(4)* %173, i64 6\l  %208 = load i8, i8 addrspace(4)* %207, align 1, !tbaa !15\l  %209 = zext i8 %208 to i64\l  %210 = shl nuw nsw i64 %209, 48\l  %211 = or i64 %206, %210\l  %212 = getelementptr inbounds i8, i8 addrspace(4)* %173, i64 7\l  %213 = load i8, i8 addrspace(4)* %212, align 1, !tbaa !15\l  %214 = zext i8 %213 to i64\l  %215 = shl nuw i64 %214, 56\l  %216 = or i64 %211, %215\l  %217 = add nsw i32 %174, -8\l  %218 = getelementptr inbounds i8, i8 addrspace(4)* %173, i64 8\l  br label %232\l}"];
	Node0x5752510 -> Node0x57526f0;
	Node0x5752740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%219:\l219:                                              \l  %220 = phi i32 [ %230, %219 ], [ 0, %177 ]\l  %221 = phi i64 [ %229, %219 ], [ 0, %177 ]\l  %222 = zext i32 %220 to i64\l  %223 = getelementptr inbounds i8, i8 addrspace(4)* %173, i64 %222\l  %224 = load i8, i8 addrspace(4)* %223, align 1, !tbaa !15\l  %225 = zext i8 %224 to i64\l  %226 = shl i32 %220, 3\l  %227 = zext i32 %226 to i64\l  %228 = shl nuw i64 %225, %227\l  %229 = or i64 %228, %221\l  %230 = add nuw nsw i32 %220, 1\l  %231 = icmp eq i32 %230, %174\l  br i1 %231, label %232, label %219\l|{<s0>T|<s1>F}}"];
	Node0x5752740:s0 -> Node0x57526f0;
	Node0x5752740:s1 -> Node0x5752740;
	Node0x57526f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%232:\l232:                                              \l  %233 = phi i8 addrspace(4)* [ %218, %179 ], [ %173, %177 ], [ %173, %219 ]\l  %234 = phi i32 [ %217, %179 ], [ 0, %177 ], [ 0, %219 ]\l  %235 = phi i64 [ %216, %179 ], [ 0, %177 ], [ %229, %219 ]\l  %236 = icmp ugt i32 %234, 7\l  br i1 %236, label %239, label %237\l|{<s0>T|<s1>F}}"];
	Node0x57526f0:s0 -> Node0x5754760;
	Node0x57526f0:s1 -> Node0x57547b0;
	Node0x57547b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%237:\l237:                                              \l  %238 = icmp eq i32 %234, 0\l  br i1 %238, label %292, label %279\l|{<s0>T|<s1>F}}"];
	Node0x57547b0:s0 -> Node0x5754940;
	Node0x57547b0:s1 -> Node0x5754990;
	Node0x5754760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%239:\l239:                                              \l  %240 = load i8, i8 addrspace(4)* %233, align 1, !tbaa !15\l  %241 = zext i8 %240 to i64\l  %242 = getelementptr inbounds i8, i8 addrspace(4)* %233, i64 1\l  %243 = load i8, i8 addrspace(4)* %242, align 1, !tbaa !15\l  %244 = zext i8 %243 to i64\l  %245 = shl nuw nsw i64 %244, 8\l  %246 = or i64 %245, %241\l  %247 = getelementptr inbounds i8, i8 addrspace(4)* %233, i64 2\l  %248 = load i8, i8 addrspace(4)* %247, align 1, !tbaa !15\l  %249 = zext i8 %248 to i64\l  %250 = shl nuw nsw i64 %249, 16\l  %251 = or i64 %246, %250\l  %252 = getelementptr inbounds i8, i8 addrspace(4)* %233, i64 3\l  %253 = load i8, i8 addrspace(4)* %252, align 1, !tbaa !15\l  %254 = zext i8 %253 to i64\l  %255 = shl nuw nsw i64 %254, 24\l  %256 = or i64 %251, %255\l  %257 = getelementptr inbounds i8, i8 addrspace(4)* %233, i64 4\l  %258 = load i8, i8 addrspace(4)* %257, align 1, !tbaa !15\l  %259 = zext i8 %258 to i64\l  %260 = shl nuw nsw i64 %259, 32\l  %261 = or i64 %256, %260\l  %262 = getelementptr inbounds i8, i8 addrspace(4)* %233, i64 5\l  %263 = load i8, i8 addrspace(4)* %262, align 1, !tbaa !15\l  %264 = zext i8 %263 to i64\l  %265 = shl nuw nsw i64 %264, 40\l  %266 = or i64 %261, %265\l  %267 = getelementptr inbounds i8, i8 addrspace(4)* %233, i64 6\l  %268 = load i8, i8 addrspace(4)* %267, align 1, !tbaa !15\l  %269 = zext i8 %268 to i64\l  %270 = shl nuw nsw i64 %269, 48\l  %271 = or i64 %266, %270\l  %272 = getelementptr inbounds i8, i8 addrspace(4)* %233, i64 7\l  %273 = load i8, i8 addrspace(4)* %272, align 1, !tbaa !15\l  %274 = zext i8 %273 to i64\l  %275 = shl nuw i64 %274, 56\l  %276 = or i64 %271, %275\l  %277 = add nsw i32 %234, -8\l  %278 = getelementptr inbounds i8, i8 addrspace(4)* %233, i64 8\l  br label %292\l}"];
	Node0x5754760 -> Node0x5754940;
	Node0x5754990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%279:\l279:                                              \l  %280 = phi i32 [ %290, %279 ], [ 0, %237 ]\l  %281 = phi i64 [ %289, %279 ], [ 0, %237 ]\l  %282 = zext i32 %280 to i64\l  %283 = getelementptr inbounds i8, i8 addrspace(4)* %233, i64 %282\l  %284 = load i8, i8 addrspace(4)* %283, align 1, !tbaa !15\l  %285 = zext i8 %284 to i64\l  %286 = shl i32 %280, 3\l  %287 = zext i32 %286 to i64\l  %288 = shl nuw i64 %285, %287\l  %289 = or i64 %288, %281\l  %290 = add nuw nsw i32 %280, 1\l  %291 = icmp eq i32 %290, %234\l  br i1 %291, label %292, label %279\l|{<s0>T|<s1>F}}"];
	Node0x5754990:s0 -> Node0x5754940;
	Node0x5754990:s1 -> Node0x5754990;
	Node0x5754940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%292:\l292:                                              \l  %293 = phi i8 addrspace(4)* [ %278, %239 ], [ %233, %237 ], [ %233, %279 ]\l  %294 = phi i32 [ %277, %239 ], [ 0, %237 ], [ 0, %279 ]\l  %295 = phi i64 [ %276, %239 ], [ 0, %237 ], [ %289, %279 ]\l  %296 = icmp ugt i32 %294, 7\l  br i1 %296, label %299, label %297\l|{<s0>T|<s1>F}}"];
	Node0x5754940:s0 -> Node0x57571e0;
	Node0x5754940:s1 -> Node0x5757230;
	Node0x5757230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%297:\l297:                                              \l  %298 = icmp eq i32 %294, 0\l  br i1 %298, label %352, label %339\l|{<s0>T|<s1>F}}"];
	Node0x5757230:s0 -> Node0x57573c0;
	Node0x5757230:s1 -> Node0x5757410;
	Node0x57571e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%299:\l299:                                              \l  %300 = load i8, i8 addrspace(4)* %293, align 1, !tbaa !15\l  %301 = zext i8 %300 to i64\l  %302 = getelementptr inbounds i8, i8 addrspace(4)* %293, i64 1\l  %303 = load i8, i8 addrspace(4)* %302, align 1, !tbaa !15\l  %304 = zext i8 %303 to i64\l  %305 = shl nuw nsw i64 %304, 8\l  %306 = or i64 %305, %301\l  %307 = getelementptr inbounds i8, i8 addrspace(4)* %293, i64 2\l  %308 = load i8, i8 addrspace(4)* %307, align 1, !tbaa !15\l  %309 = zext i8 %308 to i64\l  %310 = shl nuw nsw i64 %309, 16\l  %311 = or i64 %306, %310\l  %312 = getelementptr inbounds i8, i8 addrspace(4)* %293, i64 3\l  %313 = load i8, i8 addrspace(4)* %312, align 1, !tbaa !15\l  %314 = zext i8 %313 to i64\l  %315 = shl nuw nsw i64 %314, 24\l  %316 = or i64 %311, %315\l  %317 = getelementptr inbounds i8, i8 addrspace(4)* %293, i64 4\l  %318 = load i8, i8 addrspace(4)* %317, align 1, !tbaa !15\l  %319 = zext i8 %318 to i64\l  %320 = shl nuw nsw i64 %319, 32\l  %321 = or i64 %316, %320\l  %322 = getelementptr inbounds i8, i8 addrspace(4)* %293, i64 5\l  %323 = load i8, i8 addrspace(4)* %322, align 1, !tbaa !15\l  %324 = zext i8 %323 to i64\l  %325 = shl nuw nsw i64 %324, 40\l  %326 = or i64 %321, %325\l  %327 = getelementptr inbounds i8, i8 addrspace(4)* %293, i64 6\l  %328 = load i8, i8 addrspace(4)* %327, align 1, !tbaa !15\l  %329 = zext i8 %328 to i64\l  %330 = shl nuw nsw i64 %329, 48\l  %331 = or i64 %326, %330\l  %332 = getelementptr inbounds i8, i8 addrspace(4)* %293, i64 7\l  %333 = load i8, i8 addrspace(4)* %332, align 1, !tbaa !15\l  %334 = zext i8 %333 to i64\l  %335 = shl nuw i64 %334, 56\l  %336 = or i64 %331, %335\l  %337 = add nsw i32 %294, -8\l  %338 = getelementptr inbounds i8, i8 addrspace(4)* %293, i64 8\l  br label %352\l}"];
	Node0x57571e0 -> Node0x57573c0;
	Node0x5757410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%339:\l339:                                              \l  %340 = phi i32 [ %350, %339 ], [ 0, %297 ]\l  %341 = phi i64 [ %349, %339 ], [ 0, %297 ]\l  %342 = zext i32 %340 to i64\l  %343 = getelementptr inbounds i8, i8 addrspace(4)* %293, i64 %342\l  %344 = load i8, i8 addrspace(4)* %343, align 1, !tbaa !15\l  %345 = zext i8 %344 to i64\l  %346 = shl i32 %340, 3\l  %347 = zext i32 %346 to i64\l  %348 = shl nuw i64 %345, %347\l  %349 = or i64 %348, %341\l  %350 = add nuw nsw i32 %340, 1\l  %351 = icmp eq i32 %350, %294\l  br i1 %351, label %352, label %339\l|{<s0>T|<s1>F}}"];
	Node0x5757410:s0 -> Node0x57573c0;
	Node0x5757410:s1 -> Node0x5757410;
	Node0x57573c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%352:\l352:                                              \l  %353 = phi i8 addrspace(4)* [ %338, %299 ], [ %293, %297 ], [ %293, %339 ]\l  %354 = phi i32 [ %337, %299 ], [ 0, %297 ], [ 0, %339 ]\l  %355 = phi i64 [ %336, %299 ], [ 0, %297 ], [ %349, %339 ]\l  %356 = icmp ugt i32 %354, 7\l  br i1 %356, label %359, label %357\l|{<s0>T|<s1>F}}"];
	Node0x57573c0:s0 -> Node0x5759e70;
	Node0x57573c0:s1 -> Node0x5759ec0;
	Node0x5759ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%357:\l357:                                              \l  %358 = icmp eq i32 %354, 0\l  br i1 %358, label %412, label %399\l|{<s0>T|<s1>F}}"];
	Node0x5759ec0:s0 -> Node0x575a050;
	Node0x5759ec0:s1 -> Node0x575a0a0;
	Node0x5759e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%359:\l359:                                              \l  %360 = load i8, i8 addrspace(4)* %353, align 1, !tbaa !15\l  %361 = zext i8 %360 to i64\l  %362 = getelementptr inbounds i8, i8 addrspace(4)* %353, i64 1\l  %363 = load i8, i8 addrspace(4)* %362, align 1, !tbaa !15\l  %364 = zext i8 %363 to i64\l  %365 = shl nuw nsw i64 %364, 8\l  %366 = or i64 %365, %361\l  %367 = getelementptr inbounds i8, i8 addrspace(4)* %353, i64 2\l  %368 = load i8, i8 addrspace(4)* %367, align 1, !tbaa !15\l  %369 = zext i8 %368 to i64\l  %370 = shl nuw nsw i64 %369, 16\l  %371 = or i64 %366, %370\l  %372 = getelementptr inbounds i8, i8 addrspace(4)* %353, i64 3\l  %373 = load i8, i8 addrspace(4)* %372, align 1, !tbaa !15\l  %374 = zext i8 %373 to i64\l  %375 = shl nuw nsw i64 %374, 24\l  %376 = or i64 %371, %375\l  %377 = getelementptr inbounds i8, i8 addrspace(4)* %353, i64 4\l  %378 = load i8, i8 addrspace(4)* %377, align 1, !tbaa !15\l  %379 = zext i8 %378 to i64\l  %380 = shl nuw nsw i64 %379, 32\l  %381 = or i64 %376, %380\l  %382 = getelementptr inbounds i8, i8 addrspace(4)* %353, i64 5\l  %383 = load i8, i8 addrspace(4)* %382, align 1, !tbaa !15\l  %384 = zext i8 %383 to i64\l  %385 = shl nuw nsw i64 %384, 40\l  %386 = or i64 %381, %385\l  %387 = getelementptr inbounds i8, i8 addrspace(4)* %353, i64 6\l  %388 = load i8, i8 addrspace(4)* %387, align 1, !tbaa !15\l  %389 = zext i8 %388 to i64\l  %390 = shl nuw nsw i64 %389, 48\l  %391 = or i64 %386, %390\l  %392 = getelementptr inbounds i8, i8 addrspace(4)* %353, i64 7\l  %393 = load i8, i8 addrspace(4)* %392, align 1, !tbaa !15\l  %394 = zext i8 %393 to i64\l  %395 = shl nuw i64 %394, 56\l  %396 = or i64 %391, %395\l  %397 = add nsw i32 %354, -8\l  %398 = getelementptr inbounds i8, i8 addrspace(4)* %353, i64 8\l  br label %412\l}"];
	Node0x5759e70 -> Node0x575a050;
	Node0x575a0a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%399:\l399:                                              \l  %400 = phi i32 [ %410, %399 ], [ 0, %357 ]\l  %401 = phi i64 [ %409, %399 ], [ 0, %357 ]\l  %402 = zext i32 %400 to i64\l  %403 = getelementptr inbounds i8, i8 addrspace(4)* %353, i64 %402\l  %404 = load i8, i8 addrspace(4)* %403, align 1, !tbaa !15\l  %405 = zext i8 %404 to i64\l  %406 = shl i32 %400, 3\l  %407 = zext i32 %406 to i64\l  %408 = shl nuw i64 %405, %407\l  %409 = or i64 %408, %401\l  %410 = add nuw nsw i32 %400, 1\l  %411 = icmp eq i32 %410, %354\l  br i1 %411, label %412, label %399\l|{<s0>T|<s1>F}}"];
	Node0x575a0a0:s0 -> Node0x575a050;
	Node0x575a0a0:s1 -> Node0x575a0a0;
	Node0x575a050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%412:\l412:                                              \l  %413 = phi i8 addrspace(4)* [ %398, %359 ], [ %353, %357 ], [ %353, %399 ]\l  %414 = phi i32 [ %397, %359 ], [ 0, %357 ], [ 0, %399 ]\l  %415 = phi i64 [ %396, %359 ], [ 0, %357 ], [ %409, %399 ]\l  %416 = icmp ugt i32 %414, 7\l  br i1 %416, label %419, label %417\l|{<s0>T|<s1>F}}"];
	Node0x575a050:s0 -> Node0x575c6d0;
	Node0x575a050:s1 -> Node0x575c720;
	Node0x575c720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%417:\l417:                                              \l  %418 = icmp eq i32 %414, 0\l  br i1 %418, label %470, label %457\l|{<s0>T|<s1>F}}"];
	Node0x575c720:s0 -> Node0x574c3d0;
	Node0x575c720:s1 -> Node0x575c8b0;
	Node0x575c6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%419:\l419:                                              \l  %420 = load i8, i8 addrspace(4)* %413, align 1, !tbaa !15\l  %421 = zext i8 %420 to i64\l  %422 = getelementptr inbounds i8, i8 addrspace(4)* %413, i64 1\l  %423 = load i8, i8 addrspace(4)* %422, align 1, !tbaa !15\l  %424 = zext i8 %423 to i64\l  %425 = shl nuw nsw i64 %424, 8\l  %426 = or i64 %425, %421\l  %427 = getelementptr inbounds i8, i8 addrspace(4)* %413, i64 2\l  %428 = load i8, i8 addrspace(4)* %427, align 1, !tbaa !15\l  %429 = zext i8 %428 to i64\l  %430 = shl nuw nsw i64 %429, 16\l  %431 = or i64 %426, %430\l  %432 = getelementptr inbounds i8, i8 addrspace(4)* %413, i64 3\l  %433 = load i8, i8 addrspace(4)* %432, align 1, !tbaa !15\l  %434 = zext i8 %433 to i64\l  %435 = shl nuw nsw i64 %434, 24\l  %436 = or i64 %431, %435\l  %437 = getelementptr inbounds i8, i8 addrspace(4)* %413, i64 4\l  %438 = load i8, i8 addrspace(4)* %437, align 1, !tbaa !15\l  %439 = zext i8 %438 to i64\l  %440 = shl nuw nsw i64 %439, 32\l  %441 = or i64 %436, %440\l  %442 = getelementptr inbounds i8, i8 addrspace(4)* %413, i64 5\l  %443 = load i8, i8 addrspace(4)* %442, align 1, !tbaa !15\l  %444 = zext i8 %443 to i64\l  %445 = shl nuw nsw i64 %444, 40\l  %446 = or i64 %441, %445\l  %447 = getelementptr inbounds i8, i8 addrspace(4)* %413, i64 6\l  %448 = load i8, i8 addrspace(4)* %447, align 1, !tbaa !15\l  %449 = zext i8 %448 to i64\l  %450 = shl nuw nsw i64 %449, 48\l  %451 = or i64 %446, %450\l  %452 = getelementptr inbounds i8, i8 addrspace(4)* %413, i64 7\l  %453 = load i8, i8 addrspace(4)* %452, align 1, !tbaa !15\l  %454 = zext i8 %453 to i64\l  %455 = shl nuw i64 %454, 56\l  %456 = or i64 %451, %455\l  br label %470\l}"];
	Node0x575c6d0 -> Node0x574c3d0;
	Node0x575c8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%457:\l457:                                              \l  %458 = phi i32 [ %468, %457 ], [ 0, %417 ]\l  %459 = phi i64 [ %467, %457 ], [ 0, %417 ]\l  %460 = zext i32 %458 to i64\l  %461 = getelementptr inbounds i8, i8 addrspace(4)* %413, i64 %460\l  %462 = load i8, i8 addrspace(4)* %461, align 1, !tbaa !15\l  %463 = zext i8 %462 to i64\l  %464 = shl i32 %458, 3\l  %465 = zext i32 %464 to i64\l  %466 = shl nuw i64 %463, %465\l  %467 = or i64 %466, %459\l  %468 = add nuw nsw i32 %458, 1\l  %469 = icmp eq i32 %468, %414\l  br i1 %469, label %470, label %457\l|{<s0>T|<s1>F}}"];
	Node0x575c8b0:s0 -> Node0x574c3d0;
	Node0x575c8b0:s1 -> Node0x575c8b0;
	Node0x574c3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%470:\l470:                                              \l  %471 = phi i64 [ %456, %419 ], [ 0, %417 ], [ %467, %457 ]\l  %472 = shl nuw nsw i64 %53, 2\l  %473 = add nuw nsw i64 %472, 28\l  %474 = and i64 %473, 480\l  %475 = and i64 %55, -225\l  %476 = or i64 %475, %474\l  %477 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %33,\l... i64 noundef %476, i64 noundef %115, i64 noundef %175, i64 noundef %235, i64\l... noundef %295, i64 noundef %355, i64 noundef %415, i64 noundef %471) #10\l  %478 = sub i64 %45, %53\l  %479 = getelementptr inbounds i8, i8 addrspace(4)* %46, i64 %53\l  %480 = icmp eq i64 %478, 0\l  br i1 %480, label %481, label %44\l|{<s0>T|<s1>F}}"];
	Node0x574c3d0:s0 -> Node0x574b390;
	Node0x574c3d0:s1 -> Node0x574bf30;
	Node0x574b390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%481:\l481:                                              \l  %482 = phi \<2 x i64\> [ %39, %36 ], [ %477, %470 ]\l  %483 = extractelement \<2 x i64\> %482, i64 0\l  %484 = zext i32 %15 to i64\l  %485 = and i64 %483, -225\l  %486 = or i64 %485, 32\l  %487 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %33,\l... i64 noundef %486, i64 noundef %484, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %488 = extractelement \<2 x i64\> %487, i64 0\l  %489 = zext i32 %20 to i64\l  %490 = and i64 %488, -225\l  %491 = or i64 %490, 32\l  %492 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %33,\l... i64 noundef %491, i64 noundef %489, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %493 = extractelement \<2 x i64\> %492, i64 0\l  %494 = zext i32 %27 to i64\l  %495 = and i64 %493, -227\l  %496 = or i64 %495, 34\l  %497 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %33,\l... i64 noundef %496, i64 noundef %494, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %498 = add nsw i32 %20, -1\l  %499 = sext i32 %498 to i64\l  %500 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %499\l  %501 = load i32, i32 addrspace(1)* %500, align 4, !tbaa !7\l  %502 = icmp eq i32 %20, %2\l  br i1 %502, label %503, label %505\l|{<s0>T|<s1>F}}"];
	Node0x574b390:s0 -> Node0x574c630;
	Node0x574b390:s1 -> Node0x5760020;
	Node0x574c630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%503:\l503:                                              \l  %504 = shl nsw i32 %3, 1\l  br label %509\l}"];
	Node0x574c630 -> Node0x57601b0;
	Node0x5760020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%505:\l505:                                              \l  %506 = sext i32 %20 to i64\l  %507 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %506\l  %508 = load i32, i32 addrspace(1)* %507, align 4, !tbaa !7\l  br label %509\l}"];
	Node0x5760020 -> Node0x57601b0;
	Node0x57601b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%509:\l509:                                              \l  %510 = phi i32 [ %504, %503 ], [ %508, %505 ]\l  %511 = icmp slt i32 %501, %510\l  br i1 %511, label %514, label %522\l|{<s0>T|<s1>F}}"];
	Node0x57601b0:s0 -> Node0x57605a0;
	Node0x57601b0:s1 -> Node0x5748280;
	Node0x57606a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%512:\l512:                                              \l  %513 = icmp slt i32 %520, %510\l  br i1 %513, label %514, label %522, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x57606a0:s0 -> Node0x57605a0;
	Node0x57606a0:s1 -> Node0x5748280;
	Node0x57605a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%514:\l514:                                              \l  %515 = phi i32 [ %520, %512 ], [ %501, %509 ]\l  %516 = sext i32 %515 to i64\l  %517 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %516\l  %518 = load i32, i32 addrspace(1)* %517, align 4, !tbaa !7\l  %519 = icmp eq i32 %518, %27\l  %520 = add nsw i32 %515, 1\l  br i1 %519, label %521, label %512\l|{<s0>T|<s1>F}}"];
	Node0x57605a0:s0 -> Node0x57558a0;
	Node0x57605a0:s1 -> Node0x57606a0;
	Node0x57558a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%521:\l521:                                              \l  store i32 0, i32 addrspace(1)* %517, align 4, !tbaa !7\l  br label %522\l}"];
	Node0x57558a0 -> Node0x5748280;
	Node0x5748280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%522:\l522:                                              \l  ret void\l}"];
}
