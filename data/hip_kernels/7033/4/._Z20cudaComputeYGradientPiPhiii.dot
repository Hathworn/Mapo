digraph "CFG for '_Z20cudaComputeYGradientPiPhiii' function" {
	label="CFG for '_Z20cudaComputeYGradientPiPhiii' function";

	Node0x4ebe970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = mul nsw i32 %14, %4\l  %16 = add nsw i32 %14, 1\l  %17 = mul nsw i32 %16, %4\l  %18 = add nsw i32 %17, -1\l  %19 = icmp slt i32 %15, %18\l  br i1 %19, label %20, label %24\l|{<s0>T|<s1>F}}"];
	Node0x4ebe970:s0 -> Node0x4ec0b20;
	Node0x4ebe970:s1 -> Node0x4ec0bb0;
	Node0x4ec0b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%20:\l20:                                               \l  %21 = shl nsw i32 %2, 1\l  %22 = mul nsw i32 %3, %2\l  %23 = icmp eq i32 %6, 0\l  br label %25\l}"];
	Node0x4ec0b20 -> Node0x4ec0ed0;
	Node0x4ec0bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x4ec0ed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %15, %20 ], [ %75, %74 ]\l  %27 = add nsw i32 %26, %21\l  %28 = add nsw i32 %27, 1\l  %29 = icmp sge i32 %28, %22\l  %30 = icmp eq i32 %26, 0\l  %31 = select i1 %30, i1 %23, i1 false\l  %32 = select i1 %29, i1 true, i1 %31\l  br i1 %32, label %33, label %35\l|{<s0>T|<s1>F}}"];
	Node0x4ec0ed0:s0 -> Node0x4ec08c0;
	Node0x4ec0ed0:s1 -> Node0x4ec0950;
	Node0x4ec08c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%33:\l33:                                               \l  %34 = add nsw i32 %26, 1\l  br label %74\l}"];
	Node0x4ec08c0 -> Node0x4ec1010;
	Node0x4ec0950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%35:\l35:                                               \l  %36 = add nsw i32 %26, -1\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %37\l  %39 = load i8, i8 addrspace(1)* %38, align 1, !tbaa !7\l  %40 = zext i8 %39 to i32\l  %41 = sext i32 %26 to i64\l  %42 = add nsw i32 %26, 1\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %43\l  %45 = load i8, i8 addrspace(1)* %44, align 1, !tbaa !7\l  %46 = zext i8 %45 to i32\l  %47 = add nsw i32 %26, %2\l  %48 = add nsw i32 %47, -1\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %49\l  %51 = load i8, i8 addrspace(1)* %50, align 1, !tbaa !7\l  %52 = zext i8 %51 to i32\l  %53 = add nsw i32 %47, 1\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %54\l  %56 = load i8, i8 addrspace(1)* %55, align 1, !tbaa !7\l  %57 = zext i8 %56 to i32\l  %58 = add nsw i32 %27, -1\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %59\l  %61 = load i8, i8 addrspace(1)* %60, align 1, !tbaa !7\l  %62 = zext i8 %61 to i32\l  %63 = sext i32 %28 to i64\l  %64 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %63\l  %65 = load i8, i8 addrspace(1)* %64, align 1, !tbaa !7\l  %66 = zext i8 %65 to i32\l  %67 = sub nsw i32 %52, %57\l  %68 = shl nsw i32 %67, 1\l  %69 = add nuw nsw i32 %40, %62\l  %70 = add nuw nsw i32 %46, %66\l  %71 = sub nsw i32 %69, %70\l  %72 = add nsw i32 %71, %68\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %41\l  store i32 %72, i32 addrspace(1)* %73, align 4, !tbaa !10\l  br label %74\l}"];
	Node0x4ec0950 -> Node0x4ec1010;
	Node0x4ec1010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = phi i32 [ %34, %33 ], [ %42, %35 ]\l  %76 = icmp eq i32 %75, %18\l  br i1 %76, label %24, label %25, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4ec1010:s0 -> Node0x4ec0bb0;
	Node0x4ec1010:s1 -> Node0x4ec0ed0;
}
