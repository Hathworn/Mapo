digraph "CFG for '_Z17transposeDiagonalPfS_ii' function" {
	label="CFG for '_Z17transposeDiagonalPfS_ii' function";

	Node0x4a09a80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = icmp eq i32 %2, %3\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  br i1 %5, label %7, label %24\l|{<s0>T|<s1>F}}"];
	Node0x4a09a80:s0 -> Node0x4a09d10;
	Node0x4a09a80:s1 -> Node0x4a09da0;
	Node0x4a09d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%7:\l7:                                                \l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = add i32 %6, %8\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !4\l  %14 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !13, !invariant.load\l... !14\l  %17 = zext i16 %16 to i32\l  %18 = udiv i32 %13, %17\l  %19 = mul i32 %18, %17\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = urem i32 %9, %22\l  br label %60\l}"];
	Node0x4a09d10 -> Node0x4a0c050;
	Node0x4a09da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%24:\l24:                                               \l  %25 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %26 = getelementptr inbounds i8, i8 addrspace(4)* %25, i64 12\l  %27 = bitcast i8 addrspace(4)* %26 to i32 addrspace(4)*\l  %28 = load i32, i32 addrspace(4)* %27, align 4, !tbaa !4\l  %29 = getelementptr i8, i8 addrspace(4)* %25, i64 4\l  %30 = bitcast i8 addrspace(4)* %29 to i16 addrspace(4)*\l  %31 = load i16, i16 addrspace(4)* %30, align 4, !range !13, !invariant.load\l... !14\l  %32 = zext i16 %31 to i32\l  %33 = udiv i32 %28, %32\l  %34 = mul i32 %33, %32\l  %35 = icmp ugt i32 %28, %34\l  %36 = zext i1 %35 to i32\l  %37 = add i32 %33, %36\l  %38 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %39 = mul i32 %37, %38\l  %40 = add i32 %39, %6\l  %41 = getelementptr inbounds i8, i8 addrspace(4)* %25, i64 16\l  %42 = bitcast i8 addrspace(4)* %41 to i32 addrspace(4)*\l  %43 = load i32, i32 addrspace(4)* %42, align 8, !tbaa !15\l  %44 = getelementptr i8, i8 addrspace(4)* %25, i64 6\l  %45 = bitcast i8 addrspace(4)* %44 to i16 addrspace(4)*\l  %46 = load i16, i16 addrspace(4)* %45, align 2, !range !13, !invariant.load\l... !14\l  %47 = zext i16 %46 to i32\l  %48 = udiv i32 %43, %47\l  %49 = mul i32 %48, %47\l  %50 = icmp ugt i32 %43, %49\l  %51 = zext i1 %50 to i32\l  %52 = add i32 %48, %51\l  %53 = freeze i32 %40\l  %54 = freeze i32 %52\l  %55 = udiv i32 %53, %54\l  %56 = mul i32 %55, %54\l  %57 = sub i32 %53, %56\l  %58 = add i32 %55, %57\l  %59 = urem i32 %58, %37\l  br label %60\l}"];
	Node0x4a09da0 -> Node0x4a0c050;
	Node0x4a0c050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  %61 = phi i32 [ %6, %7 ], [ %57, %24 ]\l  %62 = phi i32 [ %23, %7 ], [ %59, %24 ]\l  %63 = shl nsw i32 %62, 4\l  %64 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %65 = shl nsw i32 %61, 4\l  %66 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !16\l  %67 = add i32 %65, %66\l  %68 = add i32 %63, %66\l  %69 = add i32 %63, %64\l  %70 = mul i32 %67, %2\l  %71 = add i32 %69, %70\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %1, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !17,\l... !amdgpu.noclobber !14\l  %75 = getelementptr inbounds [16 x [17 x float]], [16 x [17 x float]]\l... addrspace(3)* @_ZZ17transposeDiagonalPfS_iiE4tile, i32 0, i32 %66, i32 %64\l  store float %74, float addrspace(3)* %75, align 4, !tbaa !17\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %76 = add i32 %65, %64\l  %77 = getelementptr inbounds [16 x [17 x float]], [16 x [17 x float]]\l... addrspace(3)* @_ZZ17transposeDiagonalPfS_iiE4tile, i32 0, i32 %64, i32 %66\l  %78 = load float, float addrspace(3)* %77, align 4, !tbaa !17\l  %79 = mul i32 %68, %3\l  %80 = add i32 %76, %79\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %81\l  store float %78, float addrspace(1)* %82, align 4, !tbaa !17\l  ret void\l}"];
}
