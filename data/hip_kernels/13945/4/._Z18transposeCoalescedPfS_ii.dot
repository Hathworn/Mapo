digraph "CFG for '_Z18transposeCoalescedPfS_ii' function" {
	label="CFG for '_Z18transposeCoalescedPfS_ii' function";

	Node0x63c5e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 4\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = shl i32 %8, 4\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %11 = add i32 %9, %10\l  %12 = add i32 %6, %10\l  %13 = add i32 %6, %7\l  %14 = mul i32 %11, %2\l  %15 = add i32 %13, %14\l  %16 = sext i32 %15 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %1, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %19 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ18transposeCoalescedPfS_iiE4tile, i32 0, i32 %10, i32 %7\l  store float %18, float addrspace(3)* %19, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %20 = add i32 %9, %7\l  %21 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ18transposeCoalescedPfS_iiE4tile, i32 0, i32 %7, i32 %10\l  %22 = load float, float addrspace(3)* %21, align 4, !tbaa !5\l  %23 = mul i32 %12, %3\l  %24 = add i32 %20, %23\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %0, i64 %25\l  store float %22, float addrspace(1)* %26, align 4, !tbaa !5\l  ret void\l}"];
}
