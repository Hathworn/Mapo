digraph "CFG for '_Z10cuda_sgemmPfS_S_mmm' function" {
	label="CFG for '_Z10cuda_sgemmPfS_S_mmm' function";

	Node0x4bd07f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %8, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = sext i32 %15 to i64\l  %17 = icmp ult i64 %16, %5\l  br i1 %17, label %18, label %53\l|{<s0>T|<s1>F}}"];
	Node0x4bd07f0:s0 -> Node0x4bd27b0;
	Node0x4bd07f0:s1 -> Node0x4bd2840;
	Node0x4bd27b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%18:\l18:                                               \l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = add i32 %25, %19\l  %27 = sext i32 %26 to i64\l  %28 = icmp ult i64 %27, %3\l  br i1 %28, label %29, label %53\l|{<s0>T|<s1>F}}"];
	Node0x4bd27b0:s0 -> Node0x4bd4410;
	Node0x4bd27b0:s1 -> Node0x4bd2840;
	Node0x4bd4410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%29:\l29:                                               \l  %30 = icmp eq i64 %4, 0\l  br i1 %30, label %33, label %31\l|{<s0>T|<s1>F}}"];
	Node0x4bd4410:s0 -> Node0x4bd45e0;
	Node0x4bd4410:s1 -> Node0x4bd4630;
	Node0x4bd4630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%31:\l31:                                               \l  %32 = mul i64 %27, %4\l  br label %38\l}"];
	Node0x4bd4630 -> Node0x4bd26a0;
	Node0x4bd45e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%33:\l33:                                               \l  %34 = phi float [ 0.000000e+00, %29 ], [ %49, %38 ]\l  %35 = mul i64 %27, %5\l  %36 = add i64 %35, %16\l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 %36\l  store float %34, float addrspace(1)* %37, align 4, !tbaa !7\l  br label %53\l}"];
	Node0x4bd45e0 -> Node0x4bd2840;
	Node0x4bd26a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i64 [ 0, %31 ], [ %51, %38 ]\l  %40 = phi float [ 0.000000e+00, %31 ], [ %49, %38 ]\l  %41 = add i64 %39, %32\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = mul i64 %39, %5\l  %45 = add i64 %44, %16\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fmul contract float %43, %47\l  %49 = fadd contract float %40, %48\l  %50 = add nuw nsw i64 %39, 1\l  %51 = and i64 %50, 4294967295\l  %52 = icmp ult i64 %51, %4\l  br i1 %52, label %38, label %33, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4bd26a0:s0 -> Node0x4bd26a0;
	Node0x4bd26a0:s1 -> Node0x4bd45e0;
	Node0x4bd2840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%53:\l53:                                               \l  ret void\l}"];
}
