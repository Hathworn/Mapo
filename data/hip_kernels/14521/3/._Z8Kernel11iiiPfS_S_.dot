digraph "CFG for '_Z8Kernel11iiiPfS_S_' function" {
	label="CFG for '_Z8Kernel11iiiPfS_S_' function";

	Node0x4bf7000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %11 = shl nsw i32 %8, 4\l  %12 = add nsw i32 %11, %10\l  %13 = shl nsw i32 %7, 4\l  %14 = add nsw i32 %13, %9\l  %15 = srem i32 %2, 16\l  %16 = icmp eq i32 %15, 0\l  br i1 %16, label %56, label %17\l|{<s0>T|<s1>F}}"];
	Node0x4bf7000:s0 -> Node0x4bf73e0;
	Node0x4bf7000:s1 -> Node0x4bf94e0;
	Node0x4bf94e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%17:\l17:                                               \l  %18 = sub nsw i32 %2, %15\l  %19 = icmp sgt i32 %18, 0\l  br i1 %19, label %20, label %254\l|{<s0>T|<s1>F}}"];
	Node0x4bf94e0:s0 -> Node0x4bf9740;
	Node0x4bf94e0:s1 -> Node0x4bf9790;
	Node0x4bf9740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%20:\l20:                                               \l  %21 = mul nsw i32 %12, %2\l  %22 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %9\l  %23 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %10, i32 %9\l  %24 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 0\l  %25 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 0, i32 %9\l  %26 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 1\l  %27 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 1, i32 %9\l  %28 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 2\l  %29 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 2, i32 %9\l  %30 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 3\l  %31 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 3, i32 %9\l  %32 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 4\l  %33 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 4, i32 %9\l  %34 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 5\l  %35 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 5, i32 %9\l  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 6\l  %37 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 6, i32 %9\l  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 7\l  %39 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 7, i32 %9\l  %40 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 8\l  %41 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 8, i32 %9\l  %42 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 9\l  %43 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 9, i32 %9\l  %44 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 10\l  %45 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 10, i32 %9\l  %46 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 11\l  %47 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 11, i32 %9\l  %48 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 12\l  %49 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 12, i32 %9\l  %50 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 13\l  %51 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 13, i32 %9\l  %52 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 14\l  %53 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 14, i32 %9\l  %54 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 15\l  %55 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 15, i32 %9\l  br label %174\l}"];
	Node0x4bf9740 -> Node0x4bfbad0;
	Node0x4bf73e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%56:\l56:                                               \l  %57 = icmp sgt i32 %2, 0\l  br i1 %57, label %58, label %369\l|{<s0>T|<s1>F}}"];
	Node0x4bf73e0:s0 -> Node0x4bfbc20;
	Node0x4bf73e0:s1 -> Node0x4bfbc70;
	Node0x4bfbc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%58:\l58:                                               \l  %59 = mul nsw i32 %12, %2\l  %60 = add i32 %59, %9\l  %61 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %9\l  %62 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %10, i32 %9\l  %63 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 0\l  %64 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 0, i32 %9\l  %65 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 1\l  %66 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 1, i32 %9\l  %67 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 2\l  %68 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 2, i32 %9\l  %69 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 3\l  %70 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 3, i32 %9\l  %71 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 4\l  %72 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 4, i32 %9\l  %73 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 5\l  %74 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 5, i32 %9\l  %75 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 6\l  %76 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 6, i32 %9\l  %77 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 7\l  %78 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 7, i32 %9\l  %79 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 8\l  %80 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 8, i32 %9\l  %81 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 9\l  %82 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 9, i32 %9\l  %83 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 10\l  %84 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 10, i32 %9\l  %85 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 11\l  %86 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 11, i32 %9\l  %87 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 12\l  %88 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 12, i32 %9\l  %89 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 13\l  %90 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 13, i32 %9\l  %91 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 14\l  %92 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 14, i32 %9\l  %93 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 15\l  %94 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 15, i32 %9\l  br label %95\l}"];
	Node0x4bfbc20 -> Node0x4bfa560;
	Node0x4bfa560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%95:\l95:                                               \l  %96 = phi float [ 0.000000e+00, %58 ], [ %171, %95 ]\l  %97 = phi i32 [ 0, %58 ], [ %172, %95 ]\l  %98 = add i32 %60, %97\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %3, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %101, float addrspace(3)* %61, align 4, !tbaa !5\l  %102 = add nuw nsw i32 %97, %10\l  %103 = mul nsw i32 %102, %1\l  %104 = add nsw i32 %103, %14\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %4, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %107, float addrspace(3)* %62, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %108 = load float, float addrspace(3)* %63, align 16, !tbaa !5\l  %109 = load float, float addrspace(3)* %64, align 4, !tbaa !5\l  %110 = fmul contract float %108, %109\l  %111 = fadd contract float %96, %110\l  %112 = load float, float addrspace(3)* %65, align 4, !tbaa !5\l  %113 = load float, float addrspace(3)* %66, align 4, !tbaa !5\l  %114 = fmul contract float %112, %113\l  %115 = fadd contract float %111, %114\l  %116 = load float, float addrspace(3)* %67, align 8, !tbaa !5\l  %117 = load float, float addrspace(3)* %68, align 4, !tbaa !5\l  %118 = fmul contract float %116, %117\l  %119 = fadd contract float %115, %118\l  %120 = load float, float addrspace(3)* %69, align 4, !tbaa !5\l  %121 = load float, float addrspace(3)* %70, align 4, !tbaa !5\l  %122 = fmul contract float %120, %121\l  %123 = fadd contract float %119, %122\l  %124 = load float, float addrspace(3)* %71, align 16, !tbaa !5\l  %125 = load float, float addrspace(3)* %72, align 4, !tbaa !5\l  %126 = fmul contract float %124, %125\l  %127 = fadd contract float %123, %126\l  %128 = load float, float addrspace(3)* %73, align 4, !tbaa !5\l  %129 = load float, float addrspace(3)* %74, align 4, !tbaa !5\l  %130 = fmul contract float %128, %129\l  %131 = fadd contract float %127, %130\l  %132 = load float, float addrspace(3)* %75, align 8, !tbaa !5\l  %133 = load float, float addrspace(3)* %76, align 4, !tbaa !5\l  %134 = fmul contract float %132, %133\l  %135 = fadd contract float %131, %134\l  %136 = load float, float addrspace(3)* %77, align 4, !tbaa !5\l  %137 = load float, float addrspace(3)* %78, align 4, !tbaa !5\l  %138 = fmul contract float %136, %137\l  %139 = fadd contract float %135, %138\l  %140 = load float, float addrspace(3)* %79, align 16, !tbaa !5\l  %141 = load float, float addrspace(3)* %80, align 4, !tbaa !5\l  %142 = fmul contract float %140, %141\l  %143 = fadd contract float %139, %142\l  %144 = load float, float addrspace(3)* %81, align 4, !tbaa !5\l  %145 = load float, float addrspace(3)* %82, align 4, !tbaa !5\l  %146 = fmul contract float %144, %145\l  %147 = fadd contract float %143, %146\l  %148 = load float, float addrspace(3)* %83, align 8, !tbaa !5\l  %149 = load float, float addrspace(3)* %84, align 4, !tbaa !5\l  %150 = fmul contract float %148, %149\l  %151 = fadd contract float %147, %150\l  %152 = load float, float addrspace(3)* %85, align 4, !tbaa !5\l  %153 = load float, float addrspace(3)* %86, align 4, !tbaa !5\l  %154 = fmul contract float %152, %153\l  %155 = fadd contract float %151, %154\l  %156 = load float, float addrspace(3)* %87, align 16, !tbaa !5\l  %157 = load float, float addrspace(3)* %88, align 4, !tbaa !5\l  %158 = fmul contract float %156, %157\l  %159 = fadd contract float %155, %158\l  %160 = load float, float addrspace(3)* %89, align 4, !tbaa !5\l  %161 = load float, float addrspace(3)* %90, align 4, !tbaa !5\l  %162 = fmul contract float %160, %161\l  %163 = fadd contract float %159, %162\l  %164 = load float, float addrspace(3)* %91, align 8, !tbaa !5\l  %165 = load float, float addrspace(3)* %92, align 4, !tbaa !5\l  %166 = fmul contract float %164, %165\l  %167 = fadd contract float %163, %166\l  %168 = load float, float addrspace(3)* %93, align 4, !tbaa !5\l  %169 = load float, float addrspace(3)* %94, align 4, !tbaa !5\l  %170 = fmul contract float %168, %169\l  %171 = fadd contract float %167, %170\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %172 = add nuw nsw i32 %97, 16\l  %173 = icmp slt i32 %172, %2\l  br i1 %173, label %95, label %369, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4bfa560:s0 -> Node0x4bfa560;
	Node0x4bfa560:s1 -> Node0x4bfbc70;
	Node0x4bfbad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%174:\l174:                                              \l  %175 = phi float [ 0.000000e+00, %20 ], [ %251, %174 ]\l  %176 = phi i32 [ 0, %20 ], [ %252, %174 ]\l  %177 = add nuw i32 %176, %9\l  %178 = add i32 %177, %21\l  %179 = sext i32 %178 to i64\l  %180 = getelementptr inbounds float, float addrspace(1)* %3, i64 %179\l  %181 = load float, float addrspace(1)* %180, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %181, float addrspace(3)* %22, align 4, !tbaa !5\l  %182 = add nuw nsw i32 %176, %10\l  %183 = mul nsw i32 %182, %1\l  %184 = add nsw i32 %183, %14\l  %185 = sext i32 %184 to i64\l  %186 = getelementptr inbounds float, float addrspace(1)* %4, i64 %185\l  %187 = load float, float addrspace(1)* %186, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %187, float addrspace(3)* %23, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %188 = load float, float addrspace(3)* %24, align 16, !tbaa !5\l  %189 = load float, float addrspace(3)* %25, align 4, !tbaa !5\l  %190 = fmul contract float %188, %189\l  %191 = fadd contract float %175, %190\l  %192 = load float, float addrspace(3)* %26, align 4, !tbaa !5\l  %193 = load float, float addrspace(3)* %27, align 4, !tbaa !5\l  %194 = fmul contract float %192, %193\l  %195 = fadd contract float %191, %194\l  %196 = load float, float addrspace(3)* %28, align 8, !tbaa !5\l  %197 = load float, float addrspace(3)* %29, align 4, !tbaa !5\l  %198 = fmul contract float %196, %197\l  %199 = fadd contract float %195, %198\l  %200 = load float, float addrspace(3)* %30, align 4, !tbaa !5\l  %201 = load float, float addrspace(3)* %31, align 4, !tbaa !5\l  %202 = fmul contract float %200, %201\l  %203 = fadd contract float %199, %202\l  %204 = load float, float addrspace(3)* %32, align 16, !tbaa !5\l  %205 = load float, float addrspace(3)* %33, align 4, !tbaa !5\l  %206 = fmul contract float %204, %205\l  %207 = fadd contract float %203, %206\l  %208 = load float, float addrspace(3)* %34, align 4, !tbaa !5\l  %209 = load float, float addrspace(3)* %35, align 4, !tbaa !5\l  %210 = fmul contract float %208, %209\l  %211 = fadd contract float %207, %210\l  %212 = load float, float addrspace(3)* %36, align 8, !tbaa !5\l  %213 = load float, float addrspace(3)* %37, align 4, !tbaa !5\l  %214 = fmul contract float %212, %213\l  %215 = fadd contract float %211, %214\l  %216 = load float, float addrspace(3)* %38, align 4, !tbaa !5\l  %217 = load float, float addrspace(3)* %39, align 4, !tbaa !5\l  %218 = fmul contract float %216, %217\l  %219 = fadd contract float %215, %218\l  %220 = load float, float addrspace(3)* %40, align 16, !tbaa !5\l  %221 = load float, float addrspace(3)* %41, align 4, !tbaa !5\l  %222 = fmul contract float %220, %221\l  %223 = fadd contract float %219, %222\l  %224 = load float, float addrspace(3)* %42, align 4, !tbaa !5\l  %225 = load float, float addrspace(3)* %43, align 4, !tbaa !5\l  %226 = fmul contract float %224, %225\l  %227 = fadd contract float %223, %226\l  %228 = load float, float addrspace(3)* %44, align 8, !tbaa !5\l  %229 = load float, float addrspace(3)* %45, align 4, !tbaa !5\l  %230 = fmul contract float %228, %229\l  %231 = fadd contract float %227, %230\l  %232 = load float, float addrspace(3)* %46, align 4, !tbaa !5\l  %233 = load float, float addrspace(3)* %47, align 4, !tbaa !5\l  %234 = fmul contract float %232, %233\l  %235 = fadd contract float %231, %234\l  %236 = load float, float addrspace(3)* %48, align 16, !tbaa !5\l  %237 = load float, float addrspace(3)* %49, align 4, !tbaa !5\l  %238 = fmul contract float %236, %237\l  %239 = fadd contract float %235, %238\l  %240 = load float, float addrspace(3)* %50, align 4, !tbaa !5\l  %241 = load float, float addrspace(3)* %51, align 4, !tbaa !5\l  %242 = fmul contract float %240, %241\l  %243 = fadd contract float %239, %242\l  %244 = load float, float addrspace(3)* %52, align 8, !tbaa !5\l  %245 = load float, float addrspace(3)* %53, align 4, !tbaa !5\l  %246 = fmul contract float %244, %245\l  %247 = fadd contract float %243, %246\l  %248 = load float, float addrspace(3)* %54, align 4, !tbaa !5\l  %249 = load float, float addrspace(3)* %55, align 4, !tbaa !5\l  %250 = fmul contract float %248, %249\l  %251 = fadd contract float %247, %250\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %252 = add nuw nsw i32 %176, 16\l  %253 = icmp slt i32 %252, %18\l  br i1 %253, label %174, label %254, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4bfbad0:s0 -> Node0x4bfbad0;
	Node0x4bfbad0:s1 -> Node0x4bf9790;
	Node0x4bf9790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%254:\l254:                                              \l  %255 = phi i32 [ 0, %17 ], [ %252, %174 ]\l  %256 = phi float [ 0.000000e+00, %17 ], [ %251, %174 ]\l  %257 = icmp slt i32 %14, %2\l  %258 = icmp slt i32 %12, %0\l  %259 = select i1 %257, i1 %258, i1 false\l  br i1 %259, label %260, label %267\l|{<s0>T|<s1>F}}"];
	Node0x4bf9790:s0 -> Node0x4c01090;
	Node0x4bf9790:s1 -> Node0x4c010e0;
	Node0x4c01090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%260:\l260:                                              \l  %261 = mul nsw i32 %12, %2\l  %262 = add i32 %255, %9\l  %263 = add i32 %262, %261\l  %264 = sext i32 %263 to i64\l  %265 = getelementptr inbounds float, float addrspace(1)* %3, i64 %264\l  %266 = load float, float addrspace(1)* %265, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %267\l}"];
	Node0x4c01090 -> Node0x4c010e0;
	Node0x4c010e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%267:\l267:                                              \l  %268 = phi float [ %266, %260 ], [ 0.000000e+00, %254 ]\l  %269 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %9\l  store float %268, float addrspace(3)* %269, align 4\l  %270 = icmp slt i32 %12, %2\l  %271 = icmp slt i32 %14, %1\l  %272 = select i1 %270, i1 %271, i1 false\l  br i1 %272, label %273, label %280\l|{<s0>T|<s1>F}}"];
	Node0x4c010e0:s0 -> Node0x4c01660;
	Node0x4c010e0:s1 -> Node0x4c08400;
	Node0x4c01660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%273:\l273:                                              \l  %274 = add nuw nsw i32 %255, %10\l  %275 = mul nsw i32 %274, %1\l  %276 = add nsw i32 %275, %14\l  %277 = sext i32 %276 to i64\l  %278 = getelementptr inbounds float, float addrspace(1)* %4, i64 %277\l  %279 = load float, float addrspace(1)* %278, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %280\l}"];
	Node0x4c01660 -> Node0x4c08400;
	Node0x4c08400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%280:\l280:                                              \l  %281 = phi float [ %279, %273 ], [ 0.000000e+00, %267 ]\l  %282 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %10, i32 %9\l  store float %281, float addrspace(3)* %282, align 4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %283 = icmp sgt i32 %15, 0\l  br i1 %283, label %284, label %369\l|{<s0>T|<s1>F}}"];
	Node0x4c08400:s0 -> Node0x4c08cc0;
	Node0x4c08400:s1 -> Node0x4bfbc70;
	Node0x4c08cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%284:\l284:                                              \l  %285 = and i32 %15, 7\l  %286 = icmp ult i32 %15, 8\l  br i1 %286, label %351, label %287\l|{<s0>T|<s1>F}}"];
	Node0x4c08cc0:s0 -> Node0x4c08ee0;
	Node0x4c08cc0:s1 -> Node0x4c08f30;
	Node0x4c08f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%287:\l287:                                              \l  %288 = and i32 %15, -8\l  br label %289\l}"];
	Node0x4c08f30 -> Node0x4c09100;
	Node0x4c09100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%289:\l289:                                              \l  %290 = phi float [ %256, %287 ], [ %347, %289 ]\l  %291 = phi i32 [ 0, %287 ], [ %348, %289 ]\l  %292 = phi i32 [ 0, %287 ], [ %349, %289 ]\l  %293 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %291\l  %294 = load float, float addrspace(3)* %293, align 16, !tbaa !5\l  %295 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %291, i32 %9\l  %296 = load float, float addrspace(3)* %295, align 4, !tbaa !5\l  %297 = fmul contract float %294, %296\l  %298 = fadd contract float %290, %297\l  %299 = or i32 %291, 1\l  %300 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %299\l  %301 = load float, float addrspace(3)* %300, align 4, !tbaa !5\l  %302 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %299, i32 %9\l  %303 = load float, float addrspace(3)* %302, align 4, !tbaa !5\l  %304 = fmul contract float %301, %303\l  %305 = fadd contract float %298, %304\l  %306 = or i32 %291, 2\l  %307 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %306\l  %308 = load float, float addrspace(3)* %307, align 8, !tbaa !5\l  %309 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %306, i32 %9\l  %310 = load float, float addrspace(3)* %309, align 4, !tbaa !5\l  %311 = fmul contract float %308, %310\l  %312 = fadd contract float %305, %311\l  %313 = or i32 %291, 3\l  %314 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %313\l  %315 = load float, float addrspace(3)* %314, align 4, !tbaa !5\l  %316 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %313, i32 %9\l  %317 = load float, float addrspace(3)* %316, align 4, !tbaa !5\l  %318 = fmul contract float %315, %317\l  %319 = fadd contract float %312, %318\l  %320 = or i32 %291, 4\l  %321 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %320\l  %322 = load float, float addrspace(3)* %321, align 16, !tbaa !5\l  %323 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %320, i32 %9\l  %324 = load float, float addrspace(3)* %323, align 4, !tbaa !5\l  %325 = fmul contract float %322, %324\l  %326 = fadd contract float %319, %325\l  %327 = or i32 %291, 5\l  %328 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %327\l  %329 = load float, float addrspace(3)* %328, align 4, !tbaa !5\l  %330 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %327, i32 %9\l  %331 = load float, float addrspace(3)* %330, align 4, !tbaa !5\l  %332 = fmul contract float %329, %331\l  %333 = fadd contract float %326, %332\l  %334 = or i32 %291, 6\l  %335 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %334\l  %336 = load float, float addrspace(3)* %335, align 8, !tbaa !5\l  %337 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %334, i32 %9\l  %338 = load float, float addrspace(3)* %337, align 4, !tbaa !5\l  %339 = fmul contract float %336, %338\l  %340 = fadd contract float %333, %339\l  %341 = or i32 %291, 7\l  %342 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %341\l  %343 = load float, float addrspace(3)* %342, align 4, !tbaa !5\l  %344 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %341, i32 %9\l  %345 = load float, float addrspace(3)* %344, align 4, !tbaa !5\l  %346 = fmul contract float %343, %345\l  %347 = fadd contract float %340, %346\l  %348 = add nuw nsw i32 %291, 8\l  %349 = add i32 %292, 8\l  %350 = icmp eq i32 %349, %288\l  br i1 %350, label %351, label %289, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4c09100:s0 -> Node0x4c08ee0;
	Node0x4c09100:s1 -> Node0x4c09100;
	Node0x4c08ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%351:\l351:                                              \l  %352 = phi float [ undef, %284 ], [ %347, %289 ]\l  %353 = phi float [ %256, %284 ], [ %347, %289 ]\l  %354 = phi i32 [ 0, %284 ], [ %348, %289 ]\l  %355 = icmp eq i32 %285, 0\l  br i1 %355, label %369, label %356\l|{<s0>T|<s1>F}}"];
	Node0x4c08ee0:s0 -> Node0x4bfbc70;
	Node0x4c08ee0:s1 -> Node0x4c0bcc0;
	Node0x4c0bcc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%356:\l356:                                              \l  %357 = phi float [ %365, %356 ], [ %353, %351 ]\l  %358 = phi i32 [ %366, %356 ], [ %354, %351 ]\l  %359 = phi i32 [ %367, %356 ], [ 0, %351 ]\l  %360 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %358\l  %361 = load float, float addrspace(3)* %360, align 4, !tbaa !5\l  %362 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %358, i32 %9\l  %363 = load float, float addrspace(3)* %362, align 4, !tbaa !5\l  %364 = fmul contract float %361, %363\l  %365 = fadd contract float %357, %364\l  %366 = add nuw nsw i32 %358, 1\l  %367 = add i32 %359, 1\l  %368 = icmp eq i32 %367, %285\l  br i1 %368, label %369, label %356, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4c0bcc0:s0 -> Node0x4bfbc70;
	Node0x4c0bcc0:s1 -> Node0x4c0bcc0;
	Node0x4bfbc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%369:\l369:                                              \l  %370 = phi float [ 0.000000e+00, %56 ], [ %256, %280 ], [ %171, %95 ], [\l... %352, %351 ], [ %365, %356 ]\l  %371 = icmp slt i32 %12, %0\l  %372 = icmp slt i32 %14, %1\l  %373 = select i1 %371, i1 %372, i1 false\l  br i1 %373, label %374, label %379\l|{<s0>T|<s1>F}}"];
	Node0x4bfbc70:s0 -> Node0x4c04410;
	Node0x4bfbc70:s1 -> Node0x4c04460;
	Node0x4c04410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%374:\l374:                                              \l  %375 = mul nsw i32 %12, %1\l  %376 = add nsw i32 %375, %14\l  %377 = sext i32 %376 to i64\l  %378 = getelementptr inbounds float, float addrspace(1)* %5, i64 %377\l  store float %370, float addrspace(1)* %378, align 4, !tbaa !5\l  br label %379\l}"];
	Node0x4c04410 -> Node0x4c04460;
	Node0x4c04460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%379:\l379:                                              \l  ret void\l}"];
}
