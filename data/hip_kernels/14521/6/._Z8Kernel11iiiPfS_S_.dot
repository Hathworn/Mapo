digraph "CFG for '_Z8Kernel11iiiPfS_S_' function" {
	label="CFG for '_Z8Kernel11iiiPfS_S_' function";

	Node0x61bc000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %11 = shl nsw i32 %8, 4\l  %12 = add nsw i32 %11, %10\l  %13 = shl nsw i32 %7, 4\l  %14 = add nsw i32 %13, %9\l  %15 = srem i32 %2, 16\l  %16 = sub nsw i32 %2, %15\l  %17 = icmp sgt i32 %16, 0\l  br i1 %17, label %18, label %134\l|{<s0>T|<s1>F}}"];
	Node0x61bc000:s0 -> Node0x61bc410;
	Node0x61bc000:s1 -> Node0x61be580;
	Node0x61bc410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %12, %2\l  %20 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %9\l  %21 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %10, i32 %9\l  %22 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 0\l  %23 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 0, i32 %9\l  %24 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 1\l  %25 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 1, i32 %9\l  %26 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 2\l  %27 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 2, i32 %9\l  %28 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 3\l  %29 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 3, i32 %9\l  %30 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 4\l  %31 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 4, i32 %9\l  %32 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 5\l  %33 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 5, i32 %9\l  %34 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 6\l  %35 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 6, i32 %9\l  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 7\l  %37 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 7, i32 %9\l  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 8\l  %39 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 8, i32 %9\l  %40 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 9\l  %41 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 9, i32 %9\l  %42 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 10\l  %43 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 10, i32 %9\l  %44 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 11\l  %45 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 11, i32 %9\l  %46 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 12\l  %47 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 12, i32 %9\l  %48 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 13\l  %49 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 13, i32 %9\l  %50 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 14\l  %51 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 14, i32 %9\l  %52 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 15\l  %53 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 15, i32 %9\l  br label %54\l}"];
	Node0x61bc410 -> Node0x61c08c0;
	Node0x61c08c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = phi float [ 0.000000e+00, %18 ], [ %131, %54 ]\l  %56 = phi i32 [ 0, %18 ], [ %132, %54 ]\l  %57 = add nuw i32 %56, %9\l  %58 = add i32 %57, %19\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %3, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %61, float addrspace(3)* %20, align 4, !tbaa !5\l  %62 = add nuw nsw i32 %56, %10\l  %63 = mul nsw i32 %62, %1\l  %64 = add nsw i32 %63, %14\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %4, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %67, float addrspace(3)* %21, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %68 = load float, float addrspace(3)* %22, align 16, !tbaa !5\l  %69 = load float, float addrspace(3)* %23, align 4, !tbaa !5\l  %70 = fmul contract float %68, %69\l  %71 = fadd contract float %55, %70\l  %72 = load float, float addrspace(3)* %24, align 4, !tbaa !5\l  %73 = load float, float addrspace(3)* %25, align 4, !tbaa !5\l  %74 = fmul contract float %72, %73\l  %75 = fadd contract float %71, %74\l  %76 = load float, float addrspace(3)* %26, align 8, !tbaa !5\l  %77 = load float, float addrspace(3)* %27, align 4, !tbaa !5\l  %78 = fmul contract float %76, %77\l  %79 = fadd contract float %75, %78\l  %80 = load float, float addrspace(3)* %28, align 4, !tbaa !5\l  %81 = load float, float addrspace(3)* %29, align 4, !tbaa !5\l  %82 = fmul contract float %80, %81\l  %83 = fadd contract float %79, %82\l  %84 = load float, float addrspace(3)* %30, align 16, !tbaa !5\l  %85 = load float, float addrspace(3)* %31, align 4, !tbaa !5\l  %86 = fmul contract float %84, %85\l  %87 = fadd contract float %83, %86\l  %88 = load float, float addrspace(3)* %32, align 4, !tbaa !5\l  %89 = load float, float addrspace(3)* %33, align 4, !tbaa !5\l  %90 = fmul contract float %88, %89\l  %91 = fadd contract float %87, %90\l  %92 = load float, float addrspace(3)* %34, align 8, !tbaa !5\l  %93 = load float, float addrspace(3)* %35, align 4, !tbaa !5\l  %94 = fmul contract float %92, %93\l  %95 = fadd contract float %91, %94\l  %96 = load float, float addrspace(3)* %36, align 4, !tbaa !5\l  %97 = load float, float addrspace(3)* %37, align 4, !tbaa !5\l  %98 = fmul contract float %96, %97\l  %99 = fadd contract float %95, %98\l  %100 = load float, float addrspace(3)* %38, align 16, !tbaa !5\l  %101 = load float, float addrspace(3)* %39, align 4, !tbaa !5\l  %102 = fmul contract float %100, %101\l  %103 = fadd contract float %99, %102\l  %104 = load float, float addrspace(3)* %40, align 4, !tbaa !5\l  %105 = load float, float addrspace(3)* %41, align 4, !tbaa !5\l  %106 = fmul contract float %104, %105\l  %107 = fadd contract float %103, %106\l  %108 = load float, float addrspace(3)* %42, align 8, !tbaa !5\l  %109 = load float, float addrspace(3)* %43, align 4, !tbaa !5\l  %110 = fmul contract float %108, %109\l  %111 = fadd contract float %107, %110\l  %112 = load float, float addrspace(3)* %44, align 4, !tbaa !5\l  %113 = load float, float addrspace(3)* %45, align 4, !tbaa !5\l  %114 = fmul contract float %112, %113\l  %115 = fadd contract float %111, %114\l  %116 = load float, float addrspace(3)* %46, align 16, !tbaa !5\l  %117 = load float, float addrspace(3)* %47, align 4, !tbaa !5\l  %118 = fmul contract float %116, %117\l  %119 = fadd contract float %115, %118\l  %120 = load float, float addrspace(3)* %48, align 4, !tbaa !5\l  %121 = load float, float addrspace(3)* %49, align 4, !tbaa !5\l  %122 = fmul contract float %120, %121\l  %123 = fadd contract float %119, %122\l  %124 = load float, float addrspace(3)* %50, align 8, !tbaa !5\l  %125 = load float, float addrspace(3)* %51, align 4, !tbaa !5\l  %126 = fmul contract float %124, %125\l  %127 = fadd contract float %123, %126\l  %128 = load float, float addrspace(3)* %52, align 4, !tbaa !5\l  %129 = load float, float addrspace(3)* %53, align 4, !tbaa !5\l  %130 = fmul contract float %128, %129\l  %131 = fadd contract float %127, %130\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %132 = add nuw nsw i32 %56, 16\l  %133 = icmp slt i32 %132, %16\l  br i1 %133, label %54, label %134, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x61c08c0:s0 -> Node0x61c08c0;
	Node0x61c08c0:s1 -> Node0x61be580;
	Node0x61be580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%134:\l134:                                              \l  %135 = phi i32 [ 0, %6 ], [ %132, %54 ]\l  %136 = phi float [ 0.000000e+00, %6 ], [ %131, %54 ]\l  %137 = icmp sgt i32 %15, 0\l  br i1 %137, label %138, label %251\l|{<s0>T|<s1>F}}"];
	Node0x61be580:s0 -> Node0x61c5b60;
	Node0x61be580:s1 -> Node0x61c5bb0;
	Node0x61c5b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%138:\l138:                                              \l  %139 = icmp slt i32 %14, %2\l  %140 = icmp slt i32 %12, %0\l  %141 = select i1 %139, i1 %140, i1 false\l  br i1 %141, label %142, label %149\l|{<s0>T|<s1>F}}"];
	Node0x61c5b60:s0 -> Node0x61c5ec0;
	Node0x61c5b60:s1 -> Node0x61c5f10;
	Node0x61c5ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%142:\l142:                                              \l  %143 = mul nsw i32 %12, %2\l  %144 = add i32 %135, %9\l  %145 = add i32 %144, %143\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %3, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %149\l}"];
	Node0x61c5ec0 -> Node0x61c5f10;
	Node0x61c5f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%149:\l149:                                              \l  %150 = phi float [ %148, %142 ], [ 0.000000e+00, %138 ]\l  %151 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %9\l  store float %150, float addrspace(3)* %151, align 4\l  %152 = icmp slt i32 %12, %2\l  %153 = icmp slt i32 %14, %1\l  %154 = select i1 %152, i1 %153, i1 false\l  br i1 %154, label %155, label %162\l|{<s0>T|<s1>F}}"];
	Node0x61c5f10:s0 -> Node0x61c6830;
	Node0x61c5f10:s1 -> Node0x61c6880;
	Node0x61c6830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%155:\l155:                                              \l  %156 = add nuw nsw i32 %135, %10\l  %157 = mul nsw i32 %156, %1\l  %158 = add nsw i32 %157, %14\l  %159 = sext i32 %158 to i64\l  %160 = getelementptr inbounds float, float addrspace(1)* %4, i64 %159\l  %161 = load float, float addrspace(1)* %160, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %162\l}"];
	Node0x61c6830 -> Node0x61c6880;
	Node0x61c6880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%162:\l162:                                              \l  %163 = phi float [ %161, %155 ], [ 0.000000e+00, %149 ]\l  %164 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %10, i32 %9\l  store float %163, float addrspace(3)* %164, align 4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %165 = and i32 %15, 7\l  %166 = icmp ult i32 %15, 8\l  br i1 %166, label %231, label %167\l|{<s0>T|<s1>F}}"];
	Node0x61c6880:s0 -> Node0x61c71d0;
	Node0x61c6880:s1 -> Node0x61c7220;
	Node0x61c7220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%167:\l167:                                              \l  %168 = and i32 %15, -8\l  br label %169\l}"];
	Node0x61c7220 -> Node0x61c73f0;
	Node0x61c73f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%169:\l169:                                              \l  %170 = phi float [ %136, %167 ], [ %227, %169 ]\l  %171 = phi i32 [ 0, %167 ], [ %228, %169 ]\l  %172 = phi i32 [ 0, %167 ], [ %229, %169 ]\l  %173 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %171\l  %174 = load float, float addrspace(3)* %173, align 16, !tbaa !5\l  %175 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %171, i32 %9\l  %176 = load float, float addrspace(3)* %175, align 4, !tbaa !5\l  %177 = fmul contract float %174, %176\l  %178 = fadd contract float %170, %177\l  %179 = or i32 %171, 1\l  %180 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %179\l  %181 = load float, float addrspace(3)* %180, align 4, !tbaa !5\l  %182 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %179, i32 %9\l  %183 = load float, float addrspace(3)* %182, align 4, !tbaa !5\l  %184 = fmul contract float %181, %183\l  %185 = fadd contract float %178, %184\l  %186 = or i32 %171, 2\l  %187 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %186\l  %188 = load float, float addrspace(3)* %187, align 8, !tbaa !5\l  %189 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %186, i32 %9\l  %190 = load float, float addrspace(3)* %189, align 4, !tbaa !5\l  %191 = fmul contract float %188, %190\l  %192 = fadd contract float %185, %191\l  %193 = or i32 %171, 3\l  %194 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %193\l  %195 = load float, float addrspace(3)* %194, align 4, !tbaa !5\l  %196 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %193, i32 %9\l  %197 = load float, float addrspace(3)* %196, align 4, !tbaa !5\l  %198 = fmul contract float %195, %197\l  %199 = fadd contract float %192, %198\l  %200 = or i32 %171, 4\l  %201 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %200\l  %202 = load float, float addrspace(3)* %201, align 16, !tbaa !5\l  %203 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %200, i32 %9\l  %204 = load float, float addrspace(3)* %203, align 4, !tbaa !5\l  %205 = fmul contract float %202, %204\l  %206 = fadd contract float %199, %205\l  %207 = or i32 %171, 5\l  %208 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %207\l  %209 = load float, float addrspace(3)* %208, align 4, !tbaa !5\l  %210 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %207, i32 %9\l  %211 = load float, float addrspace(3)* %210, align 4, !tbaa !5\l  %212 = fmul contract float %209, %211\l  %213 = fadd contract float %206, %212\l  %214 = or i32 %171, 6\l  %215 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %214\l  %216 = load float, float addrspace(3)* %215, align 8, !tbaa !5\l  %217 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %214, i32 %9\l  %218 = load float, float addrspace(3)* %217, align 4, !tbaa !5\l  %219 = fmul contract float %216, %218\l  %220 = fadd contract float %213, %219\l  %221 = or i32 %171, 7\l  %222 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %221\l  %223 = load float, float addrspace(3)* %222, align 4, !tbaa !5\l  %224 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %221, i32 %9\l  %225 = load float, float addrspace(3)* %224, align 4, !tbaa !5\l  %226 = fmul contract float %223, %225\l  %227 = fadd contract float %220, %226\l  %228 = add nuw nsw i32 %171, 8\l  %229 = add i32 %172, 8\l  %230 = icmp eq i32 %229, %168\l  br i1 %230, label %231, label %169, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x61c73f0:s0 -> Node0x61c71d0;
	Node0x61c73f0:s1 -> Node0x61c73f0;
	Node0x61c71d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%231:\l231:                                              \l  %232 = phi float [ undef, %162 ], [ %227, %169 ]\l  %233 = phi float [ %136, %162 ], [ %227, %169 ]\l  %234 = phi i32 [ 0, %162 ], [ %228, %169 ]\l  %235 = icmp eq i32 %165, 0\l  br i1 %235, label %249, label %236\l|{<s0>T|<s1>F}}"];
	Node0x61c71d0:s0 -> Node0x61caf80;
	Node0x61c71d0:s1 -> Node0x61cafd0;
	Node0x61cafd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%236:\l236:                                              \l  %237 = phi float [ %245, %236 ], [ %233, %231 ]\l  %238 = phi i32 [ %246, %236 ], [ %234, %231 ]\l  %239 = phi i32 [ %247, %236 ], [ 0, %231 ]\l  %240 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sA, i32 0, i32 %10, i32 %238\l  %241 = load float, float addrspace(3)* %240, align 4, !tbaa !5\l  %242 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8Kernel11iiiPfS_S_E2sB, i32 0, i32 %238, i32 %9\l  %243 = load float, float addrspace(3)* %242, align 4, !tbaa !5\l  %244 = fmul contract float %241, %243\l  %245 = fadd contract float %237, %244\l  %246 = add nuw nsw i32 %238, 1\l  %247 = add i32 %239, 1\l  %248 = icmp eq i32 %247, %165\l  br i1 %248, label %249, label %236, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x61cafd0:s0 -> Node0x61caf80;
	Node0x61cafd0:s1 -> Node0x61cafd0;
	Node0x61caf80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%249:\l249:                                              \l  %250 = phi float [ %232, %231 ], [ %245, %236 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %251\l}"];
	Node0x61caf80 -> Node0x61c5bb0;
	Node0x61c5bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%251:\l251:                                              \l  %252 = phi float [ %250, %249 ], [ %136, %134 ]\l  %253 = icmp slt i32 %12, %0\l  %254 = icmp slt i32 %14, %1\l  %255 = select i1 %253, i1 %254, i1 false\l  br i1 %255, label %256, label %261\l|{<s0>T|<s1>F}}"];
	Node0x61c5bb0:s0 -> Node0x61cbf50;
	Node0x61c5bb0:s1 -> Node0x61cbfa0;
	Node0x61cbf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%256:\l256:                                              \l  %257 = mul nsw i32 %12, %1\l  %258 = add nsw i32 %257, %14\l  %259 = sext i32 %258 to i64\l  %260 = getelementptr inbounds float, float addrspace(1)* %5, i64 %259\l  store float %252, float addrspace(1)* %260, align 4, !tbaa !5\l  br label %261\l}"];
	Node0x61cbf50 -> Node0x61cbfa0;
	Node0x61cbfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%261:\l261:                                              \l  ret void\l}"];
}
