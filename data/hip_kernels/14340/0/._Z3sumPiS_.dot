digraph "CFG for '_Z3sumPiS_' function" {
	label="CFG for '_Z3sumPiS_' function";

	Node0x4c5a980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = add nsw i32 %10, %3\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %12\l  %14 = load i32, i32 addrspace(1)* %13, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %15 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %3\l  store i32 %14, i32 addrspace(3)* %15, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %16 = lshr i16 %8, 1\l  %17 = zext i16 %16 to i32\l  %18 = icmp ult i32 %3, %17\l  br i1 %18, label %19, label %25\l|{<s0>T|<s1>F}}"];
	Node0x4c5a980:s0 -> Node0x4c5de20;
	Node0x4c5a980:s1 -> Node0x4c5deb0;
	Node0x4c5de20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%19:\l19:                                               \l  %20 = add nuw nsw i32 %3, %17\l  %21 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %20\l  %22 = load i32, i32 addrspace(3)* %21, align 4, !tbaa !7\l  %23 = load i32, i32 addrspace(3)* %15, align 4, !tbaa !7\l  %24 = add nsw i32 %23, %22\l  store i32 %24, i32 addrspace(3)* %15, align 4, !tbaa !7\l  br label %25\l}"];
	Node0x4c5de20 -> Node0x4c5deb0;
	Node0x4c5deb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%25:\l25:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %26 = icmp eq i32 %3, 0\l  br i1 %26, label %27, label %99\l|{<s0>T|<s1>F}}"];
	Node0x4c5deb0:s0 -> Node0x4c5e5e0;
	Node0x4c5deb0:s1 -> Node0x4c5e630;
	Node0x4c5e5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%27:\l27:                                               \l  %28 = and i32 %9, 1\l  %29 = add nuw nsw i32 %28, %17\l  %30 = icmp eq i32 %29, 1\l  %31 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @shared, i32 0, i32 0), align 4, !tbaa !7\l  br i1 %30, label %95, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4c5e5e0:s0 -> Node0x4c5ec30;
	Node0x4c5e5e0:s1 -> Node0x4c5ec80;
	Node0x4c5ec80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%32:\l32:                                               \l  %33 = add nuw nsw i32 %28, %17\l  %34 = add nsw i32 %33, -1\l  %35 = add nsw i32 %33, -2\l  %36 = and i32 %34, 7\l  %37 = icmp ult i32 %35, 7\l  br i1 %37, label %78, label %38\l|{<s0>T|<s1>F}}"];
	Node0x4c5ec80:s0 -> Node0x4c5f210;
	Node0x4c5ec80:s1 -> Node0x4c5f260;
	Node0x4c5f260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%38:\l38:                                               \l  %39 = and i32 %34, -8\l  br label %40\l}"];
	Node0x4c5f260 -> Node0x4c5f460;
	Node0x4c5f460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%40:\l40:                                               \l  %41 = phi i32 [ %31, %38 ], [ %74, %40 ]\l  %42 = phi i32 [ 1, %38 ], [ %75, %40 ]\l  %43 = phi i32 [ 0, %38 ], [ %76, %40 ]\l  %44 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %42\l  %45 = load i32, i32 addrspace(3)* %44, align 4, !tbaa !7\l  %46 = add nsw i32 %41, %45\l  %47 = add nuw nsw i32 %42, 1\l  %48 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %47\l  %49 = load i32, i32 addrspace(3)* %48, align 4, !tbaa !7\l  %50 = add nsw i32 %46, %49\l  %51 = add nuw nsw i32 %42, 2\l  %52 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %51\l  %53 = load i32, i32 addrspace(3)* %52, align 4, !tbaa !7\l  %54 = add nsw i32 %50, %53\l  %55 = add nuw nsw i32 %42, 3\l  %56 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %55\l  %57 = load i32, i32 addrspace(3)* %56, align 4, !tbaa !7\l  %58 = add nsw i32 %54, %57\l  %59 = add nuw nsw i32 %42, 4\l  %60 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %59\l  %61 = load i32, i32 addrspace(3)* %60, align 4, !tbaa !7\l  %62 = add nsw i32 %58, %61\l  %63 = add nuw nsw i32 %42, 5\l  %64 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %63\l  %65 = load i32, i32 addrspace(3)* %64, align 4, !tbaa !7\l  %66 = add nsw i32 %62, %65\l  %67 = add nuw nsw i32 %42, 6\l  %68 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %67\l  %69 = load i32, i32 addrspace(3)* %68, align 4, !tbaa !7\l  %70 = add nsw i32 %66, %69\l  %71 = add nuw nsw i32 %42, 7\l  %72 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %71\l  %73 = load i32, i32 addrspace(3)* %72, align 4, !tbaa !7\l  %74 = add nsw i32 %70, %73\l  %75 = add nuw nsw i32 %42, 8\l  %76 = add i32 %43, 8\l  %77 = icmp eq i32 %76, %39\l  br i1 %77, label %78, label %40, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4c5f460:s0 -> Node0x4c5f210;
	Node0x4c5f460:s1 -> Node0x4c5f460;
	Node0x4c5f210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%78:\l78:                                               \l  %79 = phi i32 [ undef, %32 ], [ %74, %40 ]\l  %80 = phi i32 [ %31, %32 ], [ %74, %40 ]\l  %81 = phi i32 [ 1, %32 ], [ %75, %40 ]\l  %82 = icmp eq i32 %36, 0\l  br i1 %82, label %93, label %83\l|{<s0>T|<s1>F}}"];
	Node0x4c5f210:s0 -> Node0x4c616e0;
	Node0x4c5f210:s1 -> Node0x4c61730;
	Node0x4c61730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  %84 = phi i32 [ %89, %83 ], [ %80, %78 ]\l  %85 = phi i32 [ %90, %83 ], [ %81, %78 ]\l  %86 = phi i32 [ %91, %83 ], [ 0, %78 ]\l  %87 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %85\l  %88 = load i32, i32 addrspace(3)* %87, align 4, !tbaa !7\l  %89 = add nsw i32 %84, %88\l  %90 = add nuw nsw i32 %85, 1\l  %91 = add i32 %86, 1\l  %92 = icmp eq i32 %91, %36\l  br i1 %92, label %93, label %83, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4c61730:s0 -> Node0x4c616e0;
	Node0x4c61730:s1 -> Node0x4c61730;
	Node0x4c616e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%93:\l93:                                               \l  %94 = phi i32 [ %79, %78 ], [ %89, %83 ]\l  store i32 %94, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @shared, i32 0, i32 0), align 4, !tbaa !7\l  br label %95\l}"];
	Node0x4c616e0 -> Node0x4c5ec30;
	Node0x4c5ec30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%95:\l95:                                               \l  %96 = phi i32 [ %94, %93 ], [ %31, %27 ]\l  %97 = sext i32 %4 to i64\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %97\l  store i32 %96, i32 addrspace(1)* %98, align 4, !tbaa !7\l  br label %99\l}"];
	Node0x4c5ec30 -> Node0x4c5e630;
	Node0x4c5e630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%99:\l99:                                               \l  ret void\l}"];
}
