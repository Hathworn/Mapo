digraph "CFG for '_Z10local_solsPfS_S_S_Pii' function" {
	label="CFG for '_Z10local_solsPfS_S_S_Pii' function";

	Node0x5de7a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %5\l  %25 = icmp ult i32 %23, %20\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %93\l|{<s0>T|<s1>F}}"];
	Node0x5de7a30:s0 -> Node0x5deb4b0;
	Node0x5de7a30:s1 -> Node0x5deb540;
	Node0x5deb4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%27:\l27:                                               \l  %28 = mul nuw nsw i32 %14, 15\l  %29 = mul nsw i32 %15, 3\l  %30 = add nsw i32 %29, %23\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = add nuw nsw i32 %28, 9\l  %35 = add nsw i32 %34, %23\l  %36 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @temp1,\l... i32 0, i32 %35\l  store float %33, float addrspace(3)* %36, align 4, !tbaa !7\l  %37 = mul nsw i32 %15, 9\l  %38 = mul nsw i32 %23, 3\l  %39 = add i32 %38, %37\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = add i32 %38, %28\l  %44 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @temp1,\l... i32 0, i32 %43\l  store float %42, float addrspace(3)* %44, align 4, !tbaa !7\l  %45 = add i32 %38, 1\l  %46 = add i32 %45, %37\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %50 = add i32 %45, %28\l  %51 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @temp1,\l... i32 0, i32 %50\l  store float %49, float addrspace(3)* %51, align 4, !tbaa !7\l  %52 = add i32 %38, 2\l  %53 = add i32 %52, %37\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %57 = add i32 %52, %28\l  %58 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @temp1,\l... i32 0, i32 %57\l  store float %56, float addrspace(3)* %58, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %31\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %61 = load float, float addrspace(3)* %36, align 4, !tbaa !7\l  %62 = sext i32 %60 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %3, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %65 = add nuw nsw i32 %28, 12\l  %66 = add nsw i32 %23, %65\l  %67 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @temp1,\l... i32 0, i32 %66\l  store float %64, float addrspace(3)* %67, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %68 = add nuw nsw i32 %23, 1\l  %69 = srem i32 %68, 3\l  %70 = add nsw i32 %43, %69\l  %71 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @temp1,\l... i32 0, i32 %70\l  %72 = load float, float addrspace(3)* %71, align 4, !tbaa !7\l  %73 = add nsw i32 %69, %65\l  %74 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @temp1,\l... i32 0, i32 %73\l  %75 = load float, float addrspace(3)* %74, align 4, !tbaa !7\l  %76 = fmul contract float %72, %75\l  %77 = fsub contract float %61, %76\l  %78 = add nsw i32 %23, 2\l  %79 = srem i32 %78, 3\l  %80 = add nsw i32 %43, %79\l  %81 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @temp1,\l... i32 0, i32 %80\l  %82 = load float, float addrspace(3)* %81, align 4, !tbaa !7\l  %83 = add nsw i32 %79, %65\l  %84 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @temp1,\l... i32 0, i32 %83\l  %85 = load float, float addrspace(3)* %84, align 4, !tbaa !7\l  %86 = fmul contract float %82, %85\l  %87 = fsub contract float %77, %86\l  %88 = add nsw i32 %43, %23\l  %89 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @temp1,\l... i32 0, i32 %88\l  %90 = load float, float addrspace(3)* %89, align 4, !tbaa !7\l  %91 = fdiv contract float %87, %90\l  %92 = getelementptr inbounds float, float addrspace(1)* %2, i64 %31\l  store float %91, float addrspace(1)* %92, align 4, !tbaa !7\l  br label %93\l}"];
	Node0x5deb4b0 -> Node0x5deb540;
	Node0x5deb540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%93:\l93:                                               \l  ret void\l}"];
}
