digraph "CFG for '_Z29weighted_interpolate_backwardiiiiiPKiS0_PKfS2_Pf' function" {
	label="CFG for '_Z29weighted_interpolate_backwardiiiiiPKiS0_PKfS2_Pf' function";

	Node0x5a3ae10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = icmp slt i32 %11, %0\l  br i1 %12, label %13, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5a3ae10:s0 -> Node0x5a3bf10;
	Node0x5a3ae10:s1 -> Node0x5a3bfa0;
	Node0x5a3bf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%13:\l13:                                               \l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %15 = mul nsw i32 %3, %1\l  %16 = icmp slt i32 %14, %15\l  %17 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %18 = getelementptr i8, i8 addrspace(4)* %17, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = getelementptr inbounds i8, i8 addrspace(4)* %17, i64 12\l  %21 = bitcast i8 addrspace(4)* %20 to i32 addrspace(4)*\l  %22 = load i32, i32 addrspace(4)* %21, align 4, !tbaa !5\l  %23 = load i16, i16 addrspace(4)* %19, align 4, !range !14, !invariant.load\l... !15\l  %24 = zext i16 %23 to i32\l  %25 = udiv i32 %22, %24\l  %26 = mul i32 %25, %24\l  %27 = icmp ugt i32 %22, %26\l  %28 = zext i1 %27 to i32\l  br label %30\l}"];
	Node0x5a3bf10 -> Node0x5a3e250;
	Node0x5a3bfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%29:\l29:                                               \l  ret void\l}"];
	Node0x5a3e250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%30:\l30:                                               \l  %31 = phi i32 [ %11, %13 ], [ %38, %36 ]\l  br i1 %16, label %32, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5a3e250:s0 -> Node0x5a3e4a0;
	Node0x5a3e250:s1 -> Node0x5a3e3a0;
	Node0x5a3e4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%32:\l32:                                               \l  %33 = mul nsw i32 %31, %1\l  %34 = mul nsw i32 %31, %2\l  %35 = mul nsw i32 %33, %3\l  br label %40\l}"];
	Node0x5a3e4a0 -> Node0x5a3d010;
	Node0x5a3e3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%36:\l36:                                               \l  %37 = add i32 %25, %31\l  %38 = add i32 %37, %28\l  %39 = icmp slt i32 %38, %0\l  br i1 %39, label %30, label %29, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5a3e3a0:s0 -> Node0x5a3e250;
	Node0x5a3e3a0:s1 -> Node0x5a3bfa0;
	Node0x5a3d010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%40:\l40:                                               \l  %41 = phi i32 [ %14, %32 ], [ %85, %84 ]\l  %42 = freeze i32 %41\l  %43 = freeze i32 %3\l  %44 = sdiv i32 %42, %43\l  %45 = mul i32 %44, %43\l  %46 = sub i32 %42, %45\l  %47 = add nsw i32 %44, %33\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %48\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !18\l  %51 = icmp sgt i32 %50, 0\l  br i1 %51, label %52, label %84\l|{<s0>T|<s1>F}}"];
	Node0x5a3d010:s0 -> Node0x5a3f450;
	Node0x5a3d010:s1 -> Node0x5a3eca0;
	Node0x5a3f450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%52:\l52:                                               \l  %53 = mul i32 %47, %4\l  %54 = add nsw i32 %41, %35\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %7, i64 %55\l  %57 = and i32 %50, 3\l  %58 = icmp ult i32 %50, 4\l  br i1 %58, label %61, label %59\l|{<s0>T|<s1>F}}"];
	Node0x5a3f450:s0 -> Node0x5a3f910;
	Node0x5a3f450:s1 -> Node0x5a3f960;
	Node0x5a3f960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%59:\l59:                                               \l  %60 = and i32 %50, -4\l  br label %87\l}"];
	Node0x5a3f960 -> Node0x5a3fb60;
	Node0x5a3f910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%61:\l61:                                               \l  %62 = phi i32 [ 0, %52 ], [ %149, %87 ]\l  %63 = icmp eq i32 %57, 0\l  br i1 %63, label %84, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5a3f910:s0 -> Node0x5a3eca0;
	Node0x5a3f910:s1 -> Node0x5a3fd90;
	Node0x5a3fd90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = phi i32 [ %81, %64 ], [ %62, %61 ]\l  %66 = phi i32 [ %82, %64 ], [ 0, %61 ]\l  %67 = add nsw i32 %65, %53\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !18\l  %71 = getelementptr inbounds float, float addrspace(1)* %8, i64 %68\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !22\l  %73 = add i32 %70, %34\l  %74 = mul i32 %73, %3\l  %75 = add nsw i32 %74, %46\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %9, i64 %76\l  %78 = load float, float addrspace(1)* %56, align 4, !tbaa !22\l  %79 = fmul contract float %72, %78\l  %80 = atomicrmw fadd float addrspace(1)* %77, float %79\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %81 = add nuw nsw i32 %65, 1\l  %82 = add i32 %66, 1\l  %83 = icmp eq i32 %82, %57\l  br i1 %83, label %84, label %64, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5a3fd90:s0 -> Node0x5a3eca0;
	Node0x5a3fd90:s1 -> Node0x5a3fd90;
	Node0x5a3eca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%84:\l84:                                               \l  %85 = add i32 %41, %24\l  %86 = icmp slt i32 %85, %15\l  br i1 %86, label %40, label %36, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x5a3eca0:s0 -> Node0x5a3d010;
	Node0x5a3eca0:s1 -> Node0x5a3e3a0;
	Node0x5a3fb60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%87:\l87:                                               \l  %88 = phi i32 [ 0, %59 ], [ %149, %87 ]\l  %89 = phi i32 [ 0, %59 ], [ %150, %87 ]\l  %90 = add nsw i32 %88, %53\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %91\l  %93 = load i32, i32 addrspace(1)* %92, align 4, !tbaa !18\l  %94 = getelementptr inbounds float, float addrspace(1)* %8, i64 %91\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !22\l  %96 = add i32 %93, %34\l  %97 = mul i32 %96, %3\l  %98 = add nsw i32 %97, %46\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %9, i64 %99\l  %101 = load float, float addrspace(1)* %56, align 4, !tbaa !22\l  %102 = fmul contract float %95, %101\l  %103 = atomicrmw fadd float addrspace(1)* %100, float %102\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %104 = or i32 %88, 1\l  %105 = add nsw i32 %104, %53\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %106\l  %108 = load i32, i32 addrspace(1)* %107, align 4, !tbaa !18\l  %109 = getelementptr inbounds float, float addrspace(1)* %8, i64 %106\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !22\l  %111 = add i32 %108, %34\l  %112 = mul i32 %111, %3\l  %113 = add nsw i32 %112, %46\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %9, i64 %114\l  %116 = load float, float addrspace(1)* %56, align 4, !tbaa !22\l  %117 = fmul contract float %110, %116\l  %118 = atomicrmw fadd float addrspace(1)* %115, float %117\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %119 = or i32 %88, 2\l  %120 = add nsw i32 %119, %53\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %121\l  %123 = load i32, i32 addrspace(1)* %122, align 4, !tbaa !18\l  %124 = getelementptr inbounds float, float addrspace(1)* %8, i64 %121\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !22\l  %126 = add i32 %123, %34\l  %127 = mul i32 %126, %3\l  %128 = add nsw i32 %127, %46\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %9, i64 %129\l  %131 = load float, float addrspace(1)* %56, align 4, !tbaa !22\l  %132 = fmul contract float %125, %131\l  %133 = atomicrmw fadd float addrspace(1)* %130, float %132\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %134 = or i32 %88, 3\l  %135 = add nsw i32 %134, %53\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %136\l  %138 = load i32, i32 addrspace(1)* %137, align 4, !tbaa !18\l  %139 = getelementptr inbounds float, float addrspace(1)* %8, i64 %136\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !22\l  %141 = add i32 %138, %34\l  %142 = mul i32 %141, %3\l  %143 = add nsw i32 %142, %46\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %9, i64 %144\l  %146 = load float, float addrspace(1)* %56, align 4, !tbaa !22\l  %147 = fmul contract float %140, %146\l  %148 = atomicrmw fadd float addrspace(1)* %145, float %147\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %149 = add nuw nsw i32 %88, 4\l  %150 = add i32 %89, 4\l  %151 = icmp eq i32 %150, %60\l  br i1 %151, label %61, label %87, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x5a3fb60:s0 -> Node0x5a3f910;
	Node0x5a3fb60:s1 -> Node0x5a3fb60;
}
