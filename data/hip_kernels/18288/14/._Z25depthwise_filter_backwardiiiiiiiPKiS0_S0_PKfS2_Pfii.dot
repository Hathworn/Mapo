digraph "CFG for '_Z25depthwise_filter_backwardiiiiiiiPKiS0_S0_PKfS2_Pfii' function" {
	label="CFG for '_Z25depthwise_filter_backwardiiiiiiiPKiS0_S0_PKfS2_Pfii' function";

	Node0x4d36e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%15:\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %17 = icmp slt i32 %16, %13\l  br i1 %17, label %18, label %24\l|{<s0>T|<s1>F}}"];
	Node0x4d36e70:s0 -> Node0x4d36bc0;
	Node0x4d36e70:s1 -> Node0x4d38580;
	Node0x4d36bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%18:\l18:                                               \l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  br label %53\l}"];
	Node0x4d36bc0 -> Node0x4d393d0;
	Node0x4d38580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%24:\l24:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %25 = add nsw i32 %14, %13\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %27 = icmp slt i32 %26, %0\l  br i1 %27, label %28, label %58\l|{<s0>T|<s1>F}}"];
	Node0x4d38580:s0 -> Node0x4d39a70;
	Node0x4d38580:s1 -> Node0x4d39b00;
	Node0x4d39a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%28:\l28:                                               \l  %29 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %30 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %31 = getelementptr i8, i8 addrspace(4)* %30, i64 4\l  %32 = bitcast i8 addrspace(4)* %31 to i16 addrspace(4)*\l  %33 = load i16, i16 addrspace(4)* %32, align 4, !range !5, !invariant.load !6\l  %34 = zext i16 %33 to i32\l  %35 = getelementptr inbounds i8, i8 addrspace(4)* %30, i64 12\l  %36 = bitcast i8 addrspace(4)* %35 to i32 addrspace(4)*\l  %37 = load i32, i32 addrspace(4)* %36, align 4, !tbaa !7\l  %38 = mul i32 %29, %34\l  %39 = add i32 %38, %16\l  %40 = mul i32 %5, %4\l  %41 = mul nsw i32 %40, %2\l  %42 = icmp slt i32 %39, %41\l  %43 = getelementptr inbounds i8, i8 addrspace(4)* %30, i64 16\l  %44 = bitcast i8 addrspace(4)* %43 to i32 addrspace(4)*\l  %45 = getelementptr i8, i8 addrspace(4)* %30, i64 6\l  %46 = bitcast i8 addrspace(4)* %45 to i16 addrspace(4)*\l  %47 = load i16, i16 addrspace(4)* %46, align 2\l  %48 = zext i16 %47 to i32\l  %49 = udiv i32 %37, %34\l  %50 = mul i32 %49, %34\l  %51 = icmp ugt i32 %37, %50\l  %52 = zext i1 %51 to i32\l  br label %65\l}"];
	Node0x4d39a70 -> Node0x4d3b980;
	Node0x4d393d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%53:\l53:                                               \l  %54 = phi i32 [ %16, %18 ], [ %56, %53 ]\l  %55 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @gradPerBlock, i32 0, i32 %54\l  store float 0.000000e+00, float addrspace(3)* %55, align 4, !tbaa !16\l  %56 = add i32 %54, %23\l  %57 = icmp slt i32 %56, %13\l  br i1 %57, label %53, label %24, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4d393d0:s0 -> Node0x4d393d0;
	Node0x4d393d0:s1 -> Node0x4d38580;
	Node0x4d39b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%58:\l58:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %17, label %59, label %133\l|{<s0>T|<s1>F}}"];
	Node0x4d39b00:s0 -> Node0x4d3cce0;
	Node0x4d39b00:s1 -> Node0x4d3cd30;
	Node0x4d3cce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%59:\l59:                                               \l  %60 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %61 = getelementptr i8, i8 addrspace(4)* %60, i64 4\l  %62 = bitcast i8 addrspace(4)* %61 to i16 addrspace(4)*\l  %63 = load i16, i16 addrspace(4)* %62, align 4, !range !5, !invariant.load !6\l  %64 = zext i16 %63 to i32\l  br label %134\l}"];
	Node0x4d3cce0 -> Node0x4d3a040;
	Node0x4d3b980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%65:\l65:                                               \l  %66 = phi i32 [ %26, %28 ], [ %80, %78 ]\l  br i1 %42, label %67, label %78\l|{<s0>T|<s1>F}}"];
	Node0x4d3b980:s0 -> Node0x4d3d5a0;
	Node0x4d3b980:s1 -> Node0x4d3a140;
	Node0x4d3d5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%67:\l67:                                               \l  %68 = mul nsw i32 %66, %2\l  %69 = mul i32 %40, %68\l  %70 = mul nsw i32 %66, %1\l  %71 = load i32, i32 addrspace(4)* %44, align 8, !tbaa !22\l  %72 = udiv i32 %71, %48\l  %73 = mul i32 %72, %48\l  %74 = icmp ugt i32 %71, %73\l  %75 = zext i1 %74 to i32\l  %76 = add i32 %72, %75\l  %77 = mul i32 %76, %34\l  br label %82\l}"];
	Node0x4d3d5a0 -> Node0x4d3dd40;
	Node0x4d3a140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%78:\l78:                                               \l  %79 = add i32 %49, %66\l  %80 = add i32 %79, %52\l  %81 = icmp slt i32 %80, %0\l  br i1 %81, label %65, label %58, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x4d3a140:s0 -> Node0x4d3b980;
	Node0x4d3a140:s1 -> Node0x4d39b00;
	Node0x4d3dd40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%82:\l82:                                               \l  %83 = phi i32 [ %39, %67 ], [ %102, %101 ]\l  %84 = freeze i32 %83\l  %85 = freeze i32 %40\l  %86 = sdiv i32 %84, %85\l  %87 = mul i32 %86, %85\l  %88 = sub i32 %84, %87\l  %89 = sdiv i32 %88, %5\l  %90 = add nsw i32 %86, %68\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %91\l  %93 = load i32, i32 addrspace(1)* %92, align 4, !tbaa !24, !amdgpu.noclobber\l... !6\l  %94 = icmp sgt i32 %93, 0\l  br i1 %94, label %95, label %101\l|{<s0>T|<s1>F}}"];
	Node0x4d3dd40:s0 -> Node0x4d3e9e0;
	Node0x4d3dd40:s1 -> Node0x4d3e160;
	Node0x4d3e9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%95:\l95:                                               \l  %96 = mul i32 %90, %6\l  %97 = add nsw i32 %83, %69\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %11, i64 %98\l  %100 = sitofp i32 %93 to float\l  br label %104\l}"];
	Node0x4d3e9e0 -> Node0x4d3edc0;
	Node0x4d3e160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%101:\l101:                                              \l  %102 = add i32 %77, %83\l  %103 = icmp slt i32 %102, %41\l  br i1 %103, label %82, label %78, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x4d3e160:s0 -> Node0x4d3dd40;
	Node0x4d3e160:s1 -> Node0x4d3a140;
	Node0x4d3edc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%104:\l104:                                              \l  %105 = phi i32 [ 0, %95 ], [ %131, %130 ]\l  %106 = add nsw i32 %105, %96\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %107\l  %109 = load i32, i32 addrspace(1)* %108, align 4, !tbaa !24,\l... !amdgpu.noclobber !6\l  %110 = mul i32 %40, %109\l  %111 = add nsw i32 %110, %88\l  %112 = icmp sge i32 %111, %14\l  %113 = icmp slt i32 %111, %25\l  %114 = select i1 %112, i1 %113, i1 false\l  br i1 %114, label %115, label %130\l|{<s0>T|<s1>F}}"];
	Node0x4d3edc0:s0 -> Node0x4d3fda0;
	Node0x4d3edc0:s1 -> Node0x4d3f110;
	Node0x4d3fda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%115:\l115:                                              \l  %116 = load float, float addrspace(1)* %99, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %117 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %107\l  %118 = load i32, i32 addrspace(1)* %117, align 4, !tbaa !24,\l... !amdgpu.noclobber !6\l  %119 = add i32 %118, %70\l  %120 = mul i32 %119, %4\l  %121 = add nsw i32 %120, %89\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %10, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %125 = fmul contract float %116, %124\l  %126 = fdiv contract float %125, %100\l  %127 = sub nsw i32 %111, %14\l  %128 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @gradPerBlock, i32 0, i32 %127\l  %129 = atomicrmw fadd float addrspace(3)* %128, float %126\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %130\l}"];
	Node0x4d3fda0 -> Node0x4d3f110;
	Node0x4d3f110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%130:\l130:                                              \l  %131 = add nuw nsw i32 %105, 1\l  %132 = icmp eq i32 %131, %93\l  br i1 %132, label %101, label %104, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x4d3f110:s0 -> Node0x4d3e160;
	Node0x4d3f110:s1 -> Node0x4d3edc0;
	Node0x4d3cd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%133:\l133:                                              \l  ret void\l}"];
	Node0x4d3a040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%134:\l134:                                              \l  %135 = phi i32 [ %16, %59 ], [ %142, %134 ]\l  %136 = add nsw i32 %135, %14\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %12, i64 %137\l  %139 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @gradPerBlock, i32 0, i32 %135\l  %140 = load float, float addrspace(3)* %139, align 4, !tbaa !16\l  %141 = atomicrmw fadd float addrspace(1)* %138, float %140\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %142 = add i32 %135, %64\l  %143 = icmp slt i32 %142, %13\l  br i1 %143, label %134, label %133, !llvm.loop !28\l|{<s0>T|<s1>F}}"];
	Node0x4d3a040:s0 -> Node0x4d3a040;
	Node0x4d3a040:s1 -> Node0x4d3cd30;
}
