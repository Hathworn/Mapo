digraph "CFG for '_Z24depthwise_input_backwardiiiiiiiPKiS0_S0_PKfS2_S2_Pf' function" {
	label="CFG for '_Z24depthwise_input_backwardiiiiiiiPKiS0_S0_PKfS2_S2_Pf' function";

	Node0x4fc10a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%14:\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = icmp slt i32 %15, %0\l  br i1 %16, label %17, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4fc10a0:s0 -> Node0x4fc10f0;
	Node0x4fc10a0:s1 -> Node0x4fc2160;
	Node0x4fc10f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%17:\l17:                                               \l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = getelementptr inbounds i8, i8 addrspace(4)* %19, i64 12\l  %25 = bitcast i8 addrspace(4)* %24 to i32 addrspace(4)*\l  %26 = load i32, i32 addrspace(4)* %25, align 4, !tbaa !6\l  %27 = mul i32 %18, %23\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %29 = add i32 %27, %28\l  %30 = mul i32 %5, %4\l  %31 = mul nsw i32 %30, %2\l  %32 = icmp slt i32 %29, %31\l  %33 = getelementptr inbounds i8, i8 addrspace(4)* %19, i64 16\l  %34 = bitcast i8 addrspace(4)* %33 to i32 addrspace(4)*\l  %35 = getelementptr i8, i8 addrspace(4)* %19, i64 6\l  %36 = bitcast i8 addrspace(4)* %35 to i16 addrspace(4)*\l  %37 = load i16, i16 addrspace(4)* %36, align 2\l  %38 = zext i16 %37 to i32\l  %39 = udiv i32 %26, %23\l  %40 = mul i32 %39, %23\l  %41 = icmp ugt i32 %26, %40\l  %42 = zext i1 %41 to i32\l  br label %44\l}"];
	Node0x4fc10f0 -> Node0x4fc4af0;
	Node0x4fc2160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%43:\l43:                                               \l  ret void\l}"];
	Node0x4fc4af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%44:\l44:                                               \l  %45 = phi i32 [ %15, %17 ], [ %59, %57 ]\l  br i1 %32, label %46, label %57\l|{<s0>T|<s1>F}}"];
	Node0x4fc4af0:s0 -> Node0x4fc4d70;
	Node0x4fc4af0:s1 -> Node0x4fc4c70;
	Node0x4fc4d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%46:\l46:                                               \l  %47 = mul nsw i32 %45, %2\l  %48 = mul i32 %30, %47\l  %49 = mul nsw i32 %45, %1\l  %50 = load i32, i32 addrspace(4)* %34, align 8, !tbaa !16\l  %51 = udiv i32 %50, %38\l  %52 = mul i32 %51, %38\l  %53 = icmp ugt i32 %50, %52\l  %54 = zext i1 %53 to i32\l  %55 = add i32 %51, %54\l  %56 = mul i32 %55, %23\l  br label %61\l}"];
	Node0x4fc4d70 -> Node0x4fc5540;
	Node0x4fc4c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%57:\l57:                                               \l  %58 = add i32 %39, %45\l  %59 = add i32 %58, %42\l  %60 = icmp slt i32 %59, %0\l  br i1 %60, label %44, label %43, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x4fc4c70:s0 -> Node0x4fc4af0;
	Node0x4fc4c70:s1 -> Node0x4fc2160;
	Node0x4fc5540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%61:\l61:                                               \l  %62 = phi i32 [ %29, %46 ], [ %109, %108 ]\l  %63 = freeze i32 %62\l  %64 = freeze i32 %30\l  %65 = sdiv i32 %63, %64\l  %66 = mul i32 %65, %64\l  %67 = sub i32 %63, %66\l  %68 = sdiv i32 %67, %5\l  %69 = add nsw i32 %65, %47\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %70\l  %72 = load i32, i32 addrspace(1)* %71, align 4, !tbaa !19\l  %73 = icmp sgt i32 %72, 0\l  br i1 %73, label %74, label %108\l|{<s0>T|<s1>F}}"];
	Node0x4fc5540:s0 -> Node0x4fc63c0;
	Node0x4fc5540:s1 -> Node0x4fc5960;
	Node0x4fc63c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%74:\l74:                                               \l  %75 = mul i32 %69, %6\l  %76 = add nsw i32 %62, %48\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %12, i64 %77\l  %79 = sitofp i32 %72 to float\l  %80 = and i32 %72, 1\l  %81 = icmp eq i32 %72, 1\l  br i1 %81, label %84, label %82\l|{<s0>T|<s1>F}}"];
	Node0x4fc63c0:s0 -> Node0x4fc68f0;
	Node0x4fc63c0:s1 -> Node0x4fc6940;
	Node0x4fc6940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%82:\l82:                                               \l  %83 = and i32 %72, -2\l  br label %111\l}"];
	Node0x4fc6940 -> Node0x4fc6b40;
	Node0x4fc68f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%84:\l84:                                               \l  %85 = phi i32 [ 0, %74 ], [ %155, %111 ]\l  %86 = icmp eq i32 %80, 0\l  br i1 %86, label %108, label %87\l|{<s0>T|<s1>F}}"];
	Node0x4fc68f0:s0 -> Node0x4fc5960;
	Node0x4fc68f0:s1 -> Node0x4fc6d70;
	Node0x4fc6d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%87:\l87:                                               \l  %88 = add nsw i32 %85, %75\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %89\l  %91 = load i32, i32 addrspace(1)* %90, align 4, !tbaa !19\l  %92 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %89\l  %93 = load i32, i32 addrspace(1)* %92, align 4, !tbaa !19\l  %94 = load float, float addrspace(1)* %78, align 4, !tbaa !23\l  %95 = mul i32 %30, %93\l  %96 = add nsw i32 %95, %67\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %11, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !23\l  %100 = fmul contract float %94, %99\l  %101 = fdiv contract float %100, %79\l  %102 = add i32 %91, %49\l  %103 = mul i32 %102, %4\l  %104 = add nsw i32 %103, %68\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %13, i64 %105\l  %107 = atomicrmw fadd float addrspace(1)* %106, float %101\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %108\l}"];
	Node0x4fc6d70 -> Node0x4fc5960;
	Node0x4fc5960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%108:\l108:                                              \l  %109 = add i32 %56, %62\l  %110 = icmp slt i32 %109, %31\l  br i1 %110, label %61, label %57, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x4fc5960:s0 -> Node0x4fc5540;
	Node0x4fc5960:s1 -> Node0x4fc4c70;
	Node0x4fc6b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  %112 = phi i32 [ 0, %82 ], [ %155, %111 ]\l  %113 = phi i32 [ 0, %82 ], [ %156, %111 ]\l  %114 = add nsw i32 %112, %75\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %115\l  %117 = load i32, i32 addrspace(1)* %116, align 4, !tbaa !19\l  %118 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %115\l  %119 = load i32, i32 addrspace(1)* %118, align 4, !tbaa !19\l  %120 = load float, float addrspace(1)* %78, align 4, !tbaa !23\l  %121 = mul i32 %30, %119\l  %122 = add nsw i32 %121, %67\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %11, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !23\l  %126 = fmul contract float %120, %125\l  %127 = fdiv contract float %126, %79\l  %128 = add i32 %117, %49\l  %129 = mul i32 %128, %4\l  %130 = add nsw i32 %129, %68\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %13, i64 %131\l  %133 = atomicrmw fadd float addrspace(1)* %132, float %127\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %134 = or i32 %112, 1\l  %135 = add nsw i32 %134, %75\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %136\l  %138 = load i32, i32 addrspace(1)* %137, align 4, !tbaa !19\l  %139 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %136\l  %140 = load i32, i32 addrspace(1)* %139, align 4, !tbaa !19\l  %141 = load float, float addrspace(1)* %78, align 4, !tbaa !23\l  %142 = mul i32 %30, %140\l  %143 = add nsw i32 %142, %67\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %11, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !23\l  %147 = fmul contract float %141, %146\l  %148 = fdiv contract float %147, %79\l  %149 = add i32 %138, %49\l  %150 = mul i32 %149, %4\l  %151 = add nsw i32 %150, %68\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds float, float addrspace(1)* %13, i64 %152\l  %154 = atomicrmw fadd float addrspace(1)* %153, float %148\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %155 = add nuw nsw i32 %112, 2\l  %156 = add i32 %113, 2\l  %157 = icmp eq i32 %156, %83\l  br i1 %157, label %84, label %111, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x4fc6b40:s0 -> Node0x4fc68f0;
	Node0x4fc6b40:s1 -> Node0x4fc6b40;
}
