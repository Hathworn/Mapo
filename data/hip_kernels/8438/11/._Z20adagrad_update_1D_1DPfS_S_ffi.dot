digraph "CFG for '_Z20adagrad_update_1D_1DPfS_S_ffi' function" {
	label="CFG for '_Z20adagrad_update_1D_1DPfS_S_ffi' function";

	Node0x488ef60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = mul i32 %7, %12\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %18 = add i32 %16, %17\l  %19 = udiv i32 %15, %12\l  %20 = mul i32 %19, %12\l  %21 = icmp ugt i32 %15, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %12\l  %25 = icmp slt i32 %18, %5\l  br i1 %25, label %26, label %79\l|{<s0>T|<s1>F}}"];
	Node0x488ef60:s0 -> Node0x4891500;
	Node0x488ef60:s1 -> Node0x4891590;
	Node0x4891500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%26:\l26:                                               \l  %27 = fneg contract float %3\l  br label %28\l}"];
	Node0x4891500 -> Node0x4891740;
	Node0x4891740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %18, %26 ], [ %77, %39 ]\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %33 = fcmp contract ogt float %32, %3\l  %34 = select i1 %33, float %3, float %32\l  %35 = fcmp contract olt float %34, %27\l  %36 = select i1 %35, float %27, float %34\l  %37 = or i1 %33, %35\l  br i1 %37, label %38, label %39\l|{<s0>T|<s1>F}}"];
	Node0x4891740:s0 -> Node0x4890d50;
	Node0x4891740:s1 -> Node0x4891800;
	Node0x4890d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%38:\l38:                                               \l  store float %36, float addrspace(1)* %31, align 4, !tbaa !16\l  br label %39\l}"];
	Node0x4890d50 -> Node0x4891800;
	Node0x4891800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = fmul contract float %36, %36\l  %41 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !16\l  %43 = fadd contract float %42, %40\l  store float %43, float addrspace(1)* %41, align 4, !tbaa !16\l  %44 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %45 = fmul contract float %44, %4\l  %46 = fpext float %45 to double\l  %47 = fpext float %43 to double\l  %48 = fadd contract double %47, 1.000000e-08\l  %49 = fcmp olt double %48, 0x1000000000000000\l  %50 = select i1 %49, double 0x4FF0000000000000, double 1.000000e+00\l  %51 = fmul double %48, %50\l  %52 = tail call double @llvm.amdgcn.rsq.f64(double %51)\l  %53 = fmul double %51, %52\l  %54 = fmul double %52, 5.000000e-01\l  %55 = fneg double %54\l  %56 = tail call double @llvm.fma.f64(double %55, double %53, double\l... 5.000000e-01)\l  %57 = tail call double @llvm.fma.f64(double %54, double %56, double %54)\l  %58 = tail call double @llvm.fma.f64(double %53, double %56, double %53)\l  %59 = fneg double %58\l  %60 = tail call double @llvm.fma.f64(double %59, double %58, double %51)\l  %61 = tail call double @llvm.fma.f64(double %60, double %57, double %58)\l  %62 = fneg double %61\l  %63 = tail call double @llvm.fma.f64(double %62, double %61, double %51)\l  %64 = tail call double @llvm.fma.f64(double %63, double %57, double %61)\l  %65 = select i1 %49, double 0x37F0000000000000, double 1.000000e+00\l  %66 = fmul double %65, %64\l  %67 = fcmp oeq double %51, 0.000000e+00\l  %68 = fcmp oeq double %51, 0x7FF0000000000000\l  %69 = or i1 %67, %68\l  %70 = select i1 %69, double %51, double %66\l  %71 = fdiv contract double %46, %70\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !16\l  %74 = fpext float %73 to double\l  %75 = fsub contract double %74, %71\l  %76 = fptrunc double %75 to float\l  store float %76, float addrspace(1)* %72, align 4, !tbaa !16\l  store float 0.000000e+00, float addrspace(1)* %31, align 4, !tbaa !16\l  %77 = add nsw i32 %29, %24\l  %78 = icmp slt i32 %77, %5\l  br i1 %78, label %28, label %79, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4891800:s0 -> Node0x4891740;
	Node0x4891800:s1 -> Node0x4891590;
	Node0x4891590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%79:\l79:                                               \l  ret void\l}"];
}
