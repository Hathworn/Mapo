digraph "CFG for '_Z4DMSVPfS_S_Pii' function" {
	label="CFG for '_Z4DMSVPfS_S_Pii' function";

	Node0x561efc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = icmp slt i32 %7, %4\l  br i1 %8, label %9, label %185\l|{<s0>T|<s1>F}}"];
	Node0x561efc0:s0 -> Node0x561e6f0;
	Node0x561efc0:s1 -> Node0x5620090;
	Node0x561e6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%9:\l9:                                                \l  %10 = addrspacecast float addrspace(1)* %1 to float*\l  %11 = zext i32 %7 to i64\l  %12 = getelementptr inbounds float, float addrspace(1)* %1, i64 %11\l  %13 = load float, float addrspace(1)* %12, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %14 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %7\l  store float %13, float addrspace(3)* %14, align 4, !tbaa !5\l  %15 = add nuw nsw i32 %7, %4\l  %16 = zext i32 %15 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %1, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %19 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %15\l  store float %18, float addrspace(3)* %19, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %20 = load i32, i32 addrspace(1)* %3, align 4, !tbaa !10, !amdgpu.noclobber\l... !9\l  %21 = ptrtoint float* %10 to i64\l  %22 = trunc i64 %21 to i32\l  %23 = sub i32 %20, %22\l  %24 = icmp slt i32 %23, -3\l  br i1 %24, label %25, label %28\l|{<s0>T|<s1>F}}"];
	Node0x561e6f0:s0 -> Node0x5622580;
	Node0x561e6f0:s1 -> Node0x5622610;
	Node0x5622580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%25:\l25:                                               \l  %26 = shl nsw i32 %6, 5\l  %27 = add nsw i32 %26, %7\l  br label %62\l}"];
	Node0x5622580 -> Node0x5622870;
	Node0x5622610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%28:\l28:                                               \l  %29 = sdiv i32 %23, 4\l  %30 = shl nsw i32 %6, 5\l  %31 = add i32 %30, %7\l  %32 = add nsw i32 %29, 1\l  %33 = and i32 %32, 7\l  %34 = icmp ult i32 %29, 7\l  br i1 %34, label %37, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5622610:s0 -> Node0x5621600;
	Node0x5622610:s1 -> Node0x5622e70;
	Node0x5622e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%35:\l35:                                               \l  %36 = and i32 %32, -8\l  br label %67\l}"];
	Node0x5622e70 -> Node0x5623070;
	Node0x5621600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%37:\l37:                                               \l  %38 = phi float [ undef, %28 ], [ %181, %67 ]\l  %39 = phi i32 [ 0, %28 ], [ %182, %67 ]\l  %40 = phi float [ 0.000000e+00, %28 ], [ %181, %67 ]\l  %41 = icmp eq i32 %33, 0\l  br i1 %41, label %62, label %42\l|{<s0>T|<s1>F}}"];
	Node0x5621600:s0 -> Node0x5622870;
	Node0x5621600:s1 -> Node0x5623ec0;
	Node0x5623ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = phi i32 [ %59, %42 ], [ %39, %37 ]\l  %44 = phi float [ %58, %42 ], [ %40, %37 ]\l  %45 = phi i32 [ %60, %42 ], [ 0, %37 ]\l  %46 = add nsw i32 %43, %4\l  %47 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %46\l  %48 = load float, float addrspace(3)* %47, align 4, !tbaa !5\l  %49 = fptosi float %48 to i32\l  %50 = mul nsw i32 %49, %4\l  %51 = add i32 %31, %50\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %55 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %43\l  %56 = load float, float addrspace(3)* %55, align 4, !tbaa !5\l  %57 = fmul contract float %54, %56\l  %58 = fadd contract float %44, %57\l  %59 = add nuw nsw i32 %43, 1\l  %60 = add i32 %45, 1\l  %61 = icmp eq i32 %60, %33\l  br i1 %61, label %62, label %42, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5623ec0:s0 -> Node0x5622870;
	Node0x5623ec0:s1 -> Node0x5623ec0;
	Node0x5622870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%62:\l62:                                               \l  %63 = phi i32 [ %27, %25 ], [ %31, %42 ], [ %31, %37 ]\l  %64 = phi float [ 0.000000e+00, %25 ], [ %38, %37 ], [ %58, %42 ]\l  %65 = sext i32 %63 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %2, i64 %65\l  store float %64, float addrspace(1)* %66, align 4, !tbaa !5\l  br label %185\l}"];
	Node0x5622870 -> Node0x5620090;
	Node0x5623070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%67:\l67:                                               \l  %68 = phi i32 [ 0, %35 ], [ %182, %67 ]\l  %69 = phi float [ 0.000000e+00, %35 ], [ %181, %67 ]\l  %70 = phi i32 [ 0, %35 ], [ %183, %67 ]\l  %71 = add nsw i32 %68, %4\l  %72 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %71\l  %73 = load float, float addrspace(3)* %72, align 4, !tbaa !5\l  %74 = fptosi float %73 to i32\l  %75 = mul nsw i32 %74, %4\l  %76 = add i32 %31, %75\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %80 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %68\l  %81 = load float, float addrspace(3)* %80, align 16, !tbaa !5\l  %82 = fmul contract float %79, %81\l  %83 = fadd contract float %69, %82\l  %84 = or i32 %68, 1\l  %85 = add nsw i32 %84, %4\l  %86 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %85\l  %87 = load float, float addrspace(3)* %86, align 4, !tbaa !5\l  %88 = fptosi float %87 to i32\l  %89 = mul nsw i32 %88, %4\l  %90 = add i32 %31, %89\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %94 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %84\l  %95 = load float, float addrspace(3)* %94, align 4, !tbaa !5\l  %96 = fmul contract float %93, %95\l  %97 = fadd contract float %83, %96\l  %98 = or i32 %68, 2\l  %99 = add nsw i32 %98, %4\l  %100 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %99\l  %101 = load float, float addrspace(3)* %100, align 4, !tbaa !5\l  %102 = fptosi float %101 to i32\l  %103 = mul nsw i32 %102, %4\l  %104 = add i32 %31, %103\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %0, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %108 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %98\l  %109 = load float, float addrspace(3)* %108, align 8, !tbaa !5\l  %110 = fmul contract float %107, %109\l  %111 = fadd contract float %97, %110\l  %112 = or i32 %68, 3\l  %113 = add nsw i32 %112, %4\l  %114 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %113\l  %115 = load float, float addrspace(3)* %114, align 4, !tbaa !5\l  %116 = fptosi float %115 to i32\l  %117 = mul nsw i32 %116, %4\l  %118 = add i32 %31, %117\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %0, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %122 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %112\l  %123 = load float, float addrspace(3)* %122, align 4, !tbaa !5\l  %124 = fmul contract float %121, %123\l  %125 = fadd contract float %111, %124\l  %126 = or i32 %68, 4\l  %127 = add nsw i32 %126, %4\l  %128 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %127\l  %129 = load float, float addrspace(3)* %128, align 4, !tbaa !5\l  %130 = fptosi float %129 to i32\l  %131 = mul nsw i32 %130, %4\l  %132 = add i32 %31, %131\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %0, i64 %133\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %136 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %126\l  %137 = load float, float addrspace(3)* %136, align 16, !tbaa !5\l  %138 = fmul contract float %135, %137\l  %139 = fadd contract float %125, %138\l  %140 = or i32 %68, 5\l  %141 = add nsw i32 %140, %4\l  %142 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %141\l  %143 = load float, float addrspace(3)* %142, align 4, !tbaa !5\l  %144 = fptosi float %143 to i32\l  %145 = mul nsw i32 %144, %4\l  %146 = add i32 %31, %145\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds float, float addrspace(1)* %0, i64 %147\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %150 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %140\l  %151 = load float, float addrspace(3)* %150, align 4, !tbaa !5\l  %152 = fmul contract float %149, %151\l  %153 = fadd contract float %139, %152\l  %154 = or i32 %68, 6\l  %155 = add nsw i32 %154, %4\l  %156 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %155\l  %157 = load float, float addrspace(3)* %156, align 4, !tbaa !5\l  %158 = fptosi float %157 to i32\l  %159 = mul nsw i32 %158, %4\l  %160 = add i32 %31, %159\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds float, float addrspace(1)* %0, i64 %161\l  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %164 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %154\l  %165 = load float, float addrspace(3)* %164, align 8, !tbaa !5\l  %166 = fmul contract float %163, %165\l  %167 = fadd contract float %153, %166\l  %168 = or i32 %68, 7\l  %169 = add nsw i32 %168, %4\l  %170 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %169\l  %171 = load float, float addrspace(3)* %170, align 4, !tbaa !5\l  %172 = fptosi float %171 to i32\l  %173 = mul nsw i32 %172, %4\l  %174 = add i32 %31, %173\l  %175 = sext i32 %174 to i64\l  %176 = getelementptr inbounds float, float addrspace(1)* %0, i64 %175\l  %177 = load float, float addrspace(1)* %176, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %178 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ4DMSVPfS_S_PiiE2Vs, i32 0, i32 %168\l  %179 = load float, float addrspace(3)* %178, align 4, !tbaa !5\l  %180 = fmul contract float %177, %179\l  %181 = fadd contract float %167, %180\l  %182 = add nuw nsw i32 %68, 8\l  %183 = add i32 %70, 8\l  %184 = icmp eq i32 %183, %36\l  br i1 %184, label %37, label %67, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5623070:s0 -> Node0x5621600;
	Node0x5623070:s1 -> Node0x5623070;
	Node0x5620090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%185:\l185:                                              \l  ret void\l}"];
}
