digraph "CFG for '_Z16sim_kernel_naivePdS_mmddd' function" {
	label="CFG for '_Z16sim_kernel_naivePdS_mmddd' function";

	Node0x5401b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = add i32 %16, 1\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = sext i32 %17 to i64\l  %27 = add i64 %2, -1\l  %28 = icmp ugt i64 %27, %26\l  br i1 %28, label %29, label %75\l|{<s0>T|<s1>F}}"];
	Node0x5401b00:s0 -> Node0x5405590;
	Node0x5401b00:s1 -> Node0x5405620;
	Node0x5405590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%29:\l29:                                               \l  %30 = add i32 %25, 1\l  %31 = sext i32 %30 to i64\l  %32 = add i64 %3, -1\l  %33 = icmp ugt i64 %32, %31\l  br i1 %33, label %34, label %75\l|{<s0>T|<s1>F}}"];
	Node0x5405590:s0 -> Node0x5403980;
	Node0x5405590:s1 -> Node0x5405620;
	Node0x5403980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%34:\l34:                                               \l  %35 = mul i64 %31, %2\l  %36 = add i64 %35, %26\l  %37 = getelementptr inbounds double, double addrspace(1)* %0, i64 %36\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = sext i32 %16 to i64\l  %40 = add i64 %35, %39\l  %41 = getelementptr inbounds double, double addrspace(1)* %0, i64 %40\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = add i32 %16, 2\l  %44 = sext i32 %43 to i64\l  %45 = add i64 %35, %44\l  %46 = getelementptr inbounds double, double addrspace(1)* %0, i64 %45\l  %47 = load double, double addrspace(1)* %46, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fadd contract double %42, %47\l  %49 = fmul contract double %38, 2.000000e+00\l  %50 = fsub contract double %48, %49\l  %51 = fmul contract double %50, %4\l  %52 = sext i32 %25 to i64\l  %53 = mul i64 %52, %2\l  %54 = add i64 %53, %26\l  %55 = getelementptr inbounds double, double addrspace(1)* %0, i64 %54\l  %56 = load double, double addrspace(1)* %55, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %57 = add i32 %25, 2\l  %58 = sext i32 %57 to i64\l  %59 = mul i64 %58, %2\l  %60 = add i64 %59, %26\l  %61 = getelementptr inbounds double, double addrspace(1)* %0, i64 %60\l  %62 = load double, double addrspace(1)* %61, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = fadd contract double %56, %62\l  %64 = fsub contract double %63, %49\l  %65 = fmul contract double %64, %5\l  %66 = getelementptr inbounds double, double addrspace(1)* %1, i64 %36\l  %67 = load double, double addrspace(1)* %66, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %68 = fadd contract double %51, %65\l  %69 = fmul contract double %68, %6\l  %70 = fmul contract double %69, 5.000000e-01\l  %71 = fadd contract double %67, %70\l  store double %71, double addrspace(1)* %66, align 8, !tbaa !7\l  %72 = fmul contract double %71, %6\l  %73 = load double, double addrspace(1)* %37, align 8, !tbaa !7\l  %74 = fadd contract double %73, %72\l  store double %74, double addrspace(1)* %37, align 8, !tbaa !7\l  br label %75\l}"];
	Node0x5403980 -> Node0x5405620;
	Node0x5405620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  ret void\l}"];
}
