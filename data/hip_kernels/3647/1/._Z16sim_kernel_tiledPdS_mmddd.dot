digraph "CFG for '_Z16sim_kernel_tiledPdS_mmddd' function" {
	label="CFG for '_Z16sim_kernel_tiledPdS_mmddd' function";

	Node0x603da30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = freeze i16 %12\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = freeze i16 %19\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %16, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %24 = add nuw nsw i32 %23, 1\l  %25 = add i32 %24, %15\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %27 = add nuw nsw i32 %26, 1\l  %28 = add i32 %27, %22\l  %29 = sext i32 %28 to i64\l  %30 = mul i64 %29, %2\l  %31 = sext i32 %25 to i64\l  %32 = add i64 %30, %31\l  %33 = getelementptr inbounds double, double addrspace(1)* %0, i64 %32\l  %34 = load double, double addrspace(1)* %33, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %35 = mul nuw nsw i32 %26, %14\l  %36 = add nuw nsw i32 %35, %23\l  %37 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @z_tile, i32 0, i32 %36\l  store double %34, double addrspace(3)* %37, align 8, !tbaa !7\l  %38 = add i64 %2, -1\l  %39 = icmp ugt i64 %38, %31\l  %40 = add i64 %3, -1\l  %41 = icmp ugt i64 %40, %29\l  %42 = select i1 %39, i1 %41, i1 false\l  br i1 %42, label %43, label %109\l|{<s0>T|<s1>F}}"];
	Node0x603da30:s0 -> Node0x6042690;
	Node0x603da30:s1 -> Node0x6042720;
	Node0x6042690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%43:\l43:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %44 = add nsw i32 %14, -2\l  %45 = add nsw i32 %23, -1\l  %46 = icmp ult i32 %45, %44\l  br i1 %46, label %47, label %51\l|{<s0>T|<s1>F}}"];
	Node0x6042690:s0 -> Node0x6042d50;
	Node0x6042690:s1 -> Node0x6042da0;
	Node0x6042d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%47:\l47:                                               \l  %48 = add nsw i32 %36, -1\l  %49 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @z_tile, i32 0, i32 %48\l  %50 = load double, double addrspace(3)* %49, align 8, !tbaa !7\l  br label %60\l}"];
	Node0x6042d50 -> Node0x60430d0;
	Node0x6042da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%51:\l51:                                               \l  %52 = icmp eq i32 %23, 0\l  %53 = select i1 %52, i32 1, i32 -1\l  %54 = select i1 %52, i32 -1, i32 1\l  %55 = add nsw i32 %25, %54\l  %56 = sext i32 %55 to i64\l  %57 = add i64 %30, %56\l  %58 = getelementptr inbounds double, double addrspace(1)* %0, i64 %57\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  br label %60\l}"];
	Node0x6042da0 -> Node0x60430d0;
	Node0x60430d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%60:\l60:                                               \l  %61 = phi i32 [ %53, %51 ], [ 1, %47 ]\l  %62 = phi double [ %59, %51 ], [ %50, %47 ]\l  %63 = add nsw i32 %36, %61\l  %64 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @z_tile, i32 0, i32 %63\l  %65 = load double, double addrspace(3)* %64, align 8, !tbaa !7\l  %66 = fadd contract double %62, %65\l  %67 = fmul contract double %34, 2.000000e+00\l  %68 = fsub contract double %66, %67\l  %69 = fmul contract double %68, %4\l  %70 = add nsw i32 %21, -2\l  %71 = add nsw i32 %26, -1\l  %72 = icmp ult i32 %71, %70\l  br i1 %72, label %73, label %78\l|{<s0>T|<s1>F}}"];
	Node0x60430d0:s0 -> Node0x6041850;
	Node0x60430d0:s1 -> Node0x6044ab0;
	Node0x6041850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%73:\l73:                                               \l  %74 = mul nuw nsw i32 %71, %14\l  %75 = add nuw nsw i32 %74, %23\l  %76 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @z_tile, i32 0, i32 %75\l  %77 = load double, double addrspace(3)* %76, align 8, !tbaa !7\l  br label %88\l}"];
	Node0x6041850 -> Node0x6044e40;
	Node0x6044ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%78:\l78:                                               \l  %79 = icmp eq i32 %26, 0\l  %80 = select i1 %79, i32 -1, i32 1\l  %81 = add nsw i32 %28, %80\l  %82 = sext i32 %81 to i64\l  %83 = mul i64 %82, %2\l  %84 = add i64 %83, %31\l  %85 = getelementptr inbounds double, double addrspace(1)* %0, i64 %84\l  %86 = load double, double addrspace(1)* %85, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %87 = sub nsw i32 %26, %80\l  br label %88\l}"];
	Node0x6044ab0 -> Node0x6044e40;
	Node0x6044e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%88:\l88:                                               \l  %89 = phi i32 [ %87, %78 ], [ %27, %73 ]\l  %90 = phi double [ %86, %78 ], [ %77, %73 ]\l  %91 = phi double [ %4, %78 ], [ %5, %73 ]\l  %92 = mul nsw i32 %89, %14\l  %93 = add nsw i32 %92, %23\l  %94 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @z_tile, i32 0, i32 %93\l  %95 = load double, double addrspace(3)* %94, align 8, !tbaa !7\l  %96 = fadd contract double %90, %95\l  %97 = fmul contract double %34, 2.000000e+00\l  %98 = fsub contract double %96, %97\l  %99 = fmul contract double %98, %91\l  %100 = fadd contract double %69, %99\l  %101 = fmul contract double %100, 5.000000e-01\l  %102 = fmul contract double %101, %6\l  %103 = getelementptr inbounds double, double addrspace(1)* %1, i64 %32\l  %104 = load double, double addrspace(1)* %103, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %105 = fadd contract double %104, %102\l  store double %105, double addrspace(1)* %103, align 8, !tbaa !7\l  %106 = fmul contract double %105, %6\l  %107 = load double, double addrspace(1)* %33, align 8, !tbaa !7\l  %108 = fadd contract double %107, %106\l  store double %108, double addrspace(1)* %33, align 8, !tbaa !7\l  br label %109\l}"];
	Node0x6044e40 -> Node0x6042720;
	Node0x6042720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%109:\l109:                                              \l  ret void\l}"];
}
