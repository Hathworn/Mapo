digraph "CFG for '_Z26block_normalization_kernelPfS_iiiiiiiii' function" {
	label="CFG for '_Z26block_normalization_kernelPfS_iiiiiiiii' function";

	Node0x54282a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = shl i32 %12, 3\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !4\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %3\l  br i1 %16, label %17, label %133\l|{<s0>T|<s1>F}}"];
	Node0x54282a0:s0 -> Node0x5427f40;
	Node0x54282a0:s1 -> Node0x542a230;
	Node0x5427f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%17:\l17:                                               \l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = icmp slt i32 %18, %4\l  br i1 %19, label %20, label %133\l|{<s0>T|<s1>F}}"];
	Node0x5427f40:s0 -> Node0x542a5a0;
	Node0x5427f40:s1 -> Node0x542a230;
	Node0x542a5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%20:\l20:                                               \l  %21 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %22 = getelementptr i8, i8 addrspace(4)* %21, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !5, !invariant.load !6\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %18, %25\l  %27 = add i32 %26, %15\l  %28 = mul nsw i32 %15, %9\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %30 = and i32 %29, 1\l  %31 = add i32 %28, %30\l  %32 = mul nsw i32 %18, %10\l  %33 = lshr i32 %29, 1\l  %34 = add i32 %32, %33\l  %35 = mul nsw i32 %34, %2\l  %36 = mul nsw i32 %31, %7\l  %37 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %38 = add i32 %36, %37\l  %39 = add i32 %38, %35\l  %40 = mul nuw nsw i32 %29, 9\l  %41 = add nuw nsw i32 %40, %37\l  %42 = sext i32 %39 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %45 = getelementptr inbounds [288 x float], [288 x float] addrspace(3)*\l... @_ZZ26block_normalization_kernelPfS_iiiiiiiiiE8s_blocks, i32 0, i32 %41\l  store float %44, float addrspace(3)* %45, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %46 = mul nuw nsw i32 %14, 36\l  %47 = add nuw nsw i32 %41, %46\l  %48 = mul nsw i32 %6, %5\l  %49 = mul i32 %48, %7\l  %50 = icmp ult i32 %47, 8\l  br i1 %50, label %51, label %124\l|{<s0>T|<s1>F}}"];
	Node0x542a5a0:s0 -> Node0x542d850;
	Node0x542a5a0:s1 -> Node0x542d8e0;
	Node0x542d850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%51:\l51:                                               \l  %52 = getelementptr inbounds [8 x float], [8 x float] addrspace(3)*\l... @_ZZ26block_normalization_kernelPfS_iiiiiiiiiE7L1_norm, i32 0, i32 %47\l  store float 0.000000e+00, float addrspace(3)* %52, align 4, !tbaa !7\l  %53 = icmp sgt i32 %49, 0\l  br i1 %53, label %54, label %124\l|{<s0>T|<s1>F}}"];
	Node0x542d850:s0 -> Node0x542da80;
	Node0x542d850:s1 -> Node0x542d8e0;
	Node0x542da80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%54:\l54:                                               \l  %55 = mul nsw i32 %49, %47\l  %56 = and i32 %49, 7\l  %57 = icmp ult i32 %49, 8\l  br i1 %57, label %106, label %58\l|{<s0>T|<s1>F}}"];
	Node0x542da80:s0 -> Node0x542e970;
	Node0x542da80:s1 -> Node0x542e9c0;
	Node0x542e9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%58:\l58:                                               \l  %59 = and i32 %49, -8\l  br label %60\l}"];
	Node0x542e9c0 -> Node0x542ebc0;
	Node0x542ebc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%60:\l60:                                               \l  %61 = phi float [ 0.000000e+00, %58 ], [ %102, %60 ]\l  %62 = phi i32 [ 0, %58 ], [ %103, %60 ]\l  %63 = phi i32 [ 0, %58 ], [ %104, %60 ]\l  %64 = add nsw i32 %62, %55\l  %65 = getelementptr inbounds [288 x float], [288 x float] addrspace(3)*\l... @_ZZ26block_normalization_kernelPfS_iiiiiiiiiE8s_blocks, i32 0, i32 %64\l  %66 = load float, float addrspace(3)* %65, align 4, !tbaa !7\l  %67 = fadd contract float %66, %61\l  %68 = or i32 %62, 1\l  %69 = add nsw i32 %68, %55\l  %70 = getelementptr inbounds [288 x float], [288 x float] addrspace(3)*\l... @_ZZ26block_normalization_kernelPfS_iiiiiiiiiE8s_blocks, i32 0, i32 %69\l  %71 = load float, float addrspace(3)* %70, align 4, !tbaa !7\l  %72 = fadd contract float %71, %67\l  %73 = or i32 %62, 2\l  %74 = add nsw i32 %73, %55\l  %75 = getelementptr inbounds [288 x float], [288 x float] addrspace(3)*\l... @_ZZ26block_normalization_kernelPfS_iiiiiiiiiE8s_blocks, i32 0, i32 %74\l  %76 = load float, float addrspace(3)* %75, align 4, !tbaa !7\l  %77 = fadd contract float %76, %72\l  %78 = or i32 %62, 3\l  %79 = add nsw i32 %78, %55\l  %80 = getelementptr inbounds [288 x float], [288 x float] addrspace(3)*\l... @_ZZ26block_normalization_kernelPfS_iiiiiiiiiE8s_blocks, i32 0, i32 %79\l  %81 = load float, float addrspace(3)* %80, align 4, !tbaa !7\l  %82 = fadd contract float %81, %77\l  %83 = or i32 %62, 4\l  %84 = add nsw i32 %83, %55\l  %85 = getelementptr inbounds [288 x float], [288 x float] addrspace(3)*\l... @_ZZ26block_normalization_kernelPfS_iiiiiiiiiE8s_blocks, i32 0, i32 %84\l  %86 = load float, float addrspace(3)* %85, align 4, !tbaa !7\l  %87 = fadd contract float %86, %82\l  %88 = or i32 %62, 5\l  %89 = add nsw i32 %88, %55\l  %90 = getelementptr inbounds [288 x float], [288 x float] addrspace(3)*\l... @_ZZ26block_normalization_kernelPfS_iiiiiiiiiE8s_blocks, i32 0, i32 %89\l  %91 = load float, float addrspace(3)* %90, align 4, !tbaa !7\l  %92 = fadd contract float %91, %87\l  %93 = or i32 %62, 6\l  %94 = add nsw i32 %93, %55\l  %95 = getelementptr inbounds [288 x float], [288 x float] addrspace(3)*\l... @_ZZ26block_normalization_kernelPfS_iiiiiiiiiE8s_blocks, i32 0, i32 %94\l  %96 = load float, float addrspace(3)* %95, align 4, !tbaa !7\l  %97 = fadd contract float %96, %92\l  %98 = or i32 %62, 7\l  %99 = add nsw i32 %98, %55\l  %100 = getelementptr inbounds [288 x float], [288 x float] addrspace(3)*\l... @_ZZ26block_normalization_kernelPfS_iiiiiiiiiE8s_blocks, i32 0, i32 %99\l  %101 = load float, float addrspace(3)* %100, align 4, !tbaa !7\l  %102 = fadd contract float %101, %97\l  %103 = add nuw nsw i32 %62, 8\l  %104 = add i32 %63, 8\l  %105 = icmp eq i32 %104, %59\l  br i1 %105, label %106, label %60, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x542ebc0:s0 -> Node0x542e970;
	Node0x542ebc0:s1 -> Node0x542ebc0;
	Node0x542e970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%106:\l106:                                              \l  %107 = phi float [ undef, %54 ], [ %102, %60 ]\l  %108 = phi float [ 0.000000e+00, %54 ], [ %102, %60 ]\l  %109 = phi i32 [ 0, %54 ], [ %103, %60 ]\l  %110 = icmp eq i32 %56, 0\l  br i1 %110, label %122, label %111\l|{<s0>T|<s1>F}}"];
	Node0x542e970:s0 -> Node0x5430ed0;
	Node0x542e970:s1 -> Node0x5430f20;
	Node0x5430f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  %112 = phi float [ %118, %111 ], [ %108, %106 ]\l  %113 = phi i32 [ %119, %111 ], [ %109, %106 ]\l  %114 = phi i32 [ %120, %111 ], [ 0, %106 ]\l  %115 = add nsw i32 %113, %55\l  %116 = getelementptr inbounds [288 x float], [288 x float] addrspace(3)*\l... @_ZZ26block_normalization_kernelPfS_iiiiiiiiiE8s_blocks, i32 0, i32 %115\l  %117 = load float, float addrspace(3)* %116, align 4, !tbaa !7\l  %118 = fadd contract float %117, %112\l  %119 = add nuw nsw i32 %113, 1\l  %120 = add i32 %114, 1\l  %121 = icmp eq i32 %120, %56\l  br i1 %121, label %122, label %111, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5430f20:s0 -> Node0x5430ed0;
	Node0x5430f20:s1 -> Node0x5430f20;
	Node0x5430ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%122:\l122:                                              \l  %123 = phi float [ %107, %106 ], [ %118, %111 ]\l  store float %123, float addrspace(3)* %52, align 4, !tbaa !7\l  br label %124\l}"];
	Node0x5430ed0 -> Node0x542d8e0;
	Node0x542d8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%124:\l124:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %125 = load float, float addrspace(3)* %45, align 4, !tbaa !7\l  %126 = getelementptr inbounds [8 x float], [8 x float] addrspace(3)*\l... @_ZZ26block_normalization_kernelPfS_iiiiiiiiiE7L1_norm, i32 0, i32 %14\l  %127 = load float, float addrspace(3)* %126, align 4, !tbaa !7\l  %128 = fdiv contract float %125, %127\l  %129 = mul nsw i32 %27, %49\l  %130 = add nsw i32 %129, %41\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %1, i64 %131\l  store float %128, float addrspace(1)* %132, align 4, !tbaa !7\l  br label %133\l}"];
	Node0x542d8e0 -> Node0x542a230;
	Node0x542a230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%133:\l133:                                              \l  ret void\l}"];
}
