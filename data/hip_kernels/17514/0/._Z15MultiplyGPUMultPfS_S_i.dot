digraph "CFG for '_Z15MultiplyGPUMultPfS_S_i' function" {
	label="CFG for '_Z15MultiplyGPUMultPfS_S_i' function";

	Node0x4af7190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = mul i32 %5, %3\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = sdiv i32 %3, 16\l  %11 = icmp sgt i32 %3, 15\l  %12 = mul nsw i32 %8, %3\l  %13 = add nsw i32 %12, %9\l  %14 = sext i32 %13 to i64\l  br i1 %11, label %15, label %52\l|{<s0>T|<s1>F}}"];
	Node0x4af7190:s0 -> Node0x4af9540;
	Node0x4af7190:s1 -> Node0x4af95d0;
	Node0x4af9540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%15:\l15:                                               \l  %16 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 %9\l  %17 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 %8, i32 %9\l  %18 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 0\l  %19 = getelementptr float, float addrspace(1)* %0, i64 %14\l  %20 = getelementptr float, float addrspace(1)* %1, i64 %14\l  %21 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 0, i32 %9\l  %22 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 1\l  %23 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 1, i32 %9\l  %24 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 2\l  %25 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 2, i32 %9\l  %26 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 3\l  %27 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 3, i32 %9\l  %28 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 4\l  %29 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 4, i32 %9\l  %30 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 5\l  %31 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 5, i32 %9\l  %32 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 6\l  %33 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 6, i32 %9\l  %34 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 7\l  %35 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 7, i32 %9\l  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 8\l  %37 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 8, i32 %9\l  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 9\l  %39 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 9, i32 %9\l  %40 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 10\l  %41 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 10, i32 %9\l  %42 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 11\l  %43 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 11, i32 %9\l  %44 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 12\l  %45 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 12, i32 %9\l  %46 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 13\l  %47 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 13, i32 %9\l  %48 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 14\l  %49 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 14, i32 %9\l  %50 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2As, i32 0, i32 %8, i32 15\l  %51 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15MultiplyGPUMultPfS_S_iE2Bs, i32 0, i32 15, i32 %9\l  br label %59\l}"];
	Node0x4af9540 -> Node0x4af9710;
	Node0x4af95d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%52:\l52:                                               \l  %53 = phi float [ 0.000000e+00, %4 ], [ %136, %59 ]\l  %54 = add i32 %7, %6\l  %55 = shl i32 %54, 4\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %2, i64 %56\l  %58 = getelementptr inbounds float, float addrspace(1)* %57, i64 %14\l  store float %53, float addrspace(1)* %58, align 4, !tbaa !5\l  ret void\l}"];
	Node0x4af9710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi float [ 0.000000e+00, %15 ], [ %136, %59 ]\l  %61 = phi i32 [ 0, %15 ], [ %137, %59 ]\l  %62 = add i32 %61, %7\l  %63 = shl i32 %62, 4\l  %64 = sext i32 %63 to i64\l  %65 = mul i32 %61, %3\l  %66 = add i32 %65, %6\l  %67 = shl i32 %66, 4\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr float, float addrspace(1)* %19, i64 %64\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %70, float addrspace(3)* %16, align 4, !tbaa !5\l  %71 = getelementptr float, float addrspace(1)* %20, i64 %68\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %72, float addrspace(3)* %17, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %73 = load float, float addrspace(3)* %18, align 16, !tbaa !5\l  %74 = load float, float addrspace(3)* %21, align 4, !tbaa !5\l  %75 = fmul contract float %73, %74\l  %76 = fadd contract float %60, %75\l  %77 = load float, float addrspace(3)* %22, align 4, !tbaa !5\l  %78 = load float, float addrspace(3)* %23, align 4, !tbaa !5\l  %79 = fmul contract float %77, %78\l  %80 = fadd contract float %76, %79\l  %81 = load float, float addrspace(3)* %24, align 8, !tbaa !5\l  %82 = load float, float addrspace(3)* %25, align 4, !tbaa !5\l  %83 = fmul contract float %81, %82\l  %84 = fadd contract float %80, %83\l  %85 = load float, float addrspace(3)* %26, align 4, !tbaa !5\l  %86 = load float, float addrspace(3)* %27, align 4, !tbaa !5\l  %87 = fmul contract float %85, %86\l  %88 = fadd contract float %84, %87\l  %89 = load float, float addrspace(3)* %28, align 16, !tbaa !5\l  %90 = load float, float addrspace(3)* %29, align 4, !tbaa !5\l  %91 = fmul contract float %89, %90\l  %92 = fadd contract float %88, %91\l  %93 = load float, float addrspace(3)* %30, align 4, !tbaa !5\l  %94 = load float, float addrspace(3)* %31, align 4, !tbaa !5\l  %95 = fmul contract float %93, %94\l  %96 = fadd contract float %92, %95\l  %97 = load float, float addrspace(3)* %32, align 8, !tbaa !5\l  %98 = load float, float addrspace(3)* %33, align 4, !tbaa !5\l  %99 = fmul contract float %97, %98\l  %100 = fadd contract float %96, %99\l  %101 = load float, float addrspace(3)* %34, align 4, !tbaa !5\l  %102 = load float, float addrspace(3)* %35, align 4, !tbaa !5\l  %103 = fmul contract float %101, %102\l  %104 = fadd contract float %100, %103\l  %105 = load float, float addrspace(3)* %36, align 16, !tbaa !5\l  %106 = load float, float addrspace(3)* %37, align 4, !tbaa !5\l  %107 = fmul contract float %105, %106\l  %108 = fadd contract float %104, %107\l  %109 = load float, float addrspace(3)* %38, align 4, !tbaa !5\l  %110 = load float, float addrspace(3)* %39, align 4, !tbaa !5\l  %111 = fmul contract float %109, %110\l  %112 = fadd contract float %108, %111\l  %113 = load float, float addrspace(3)* %40, align 8, !tbaa !5\l  %114 = load float, float addrspace(3)* %41, align 4, !tbaa !5\l  %115 = fmul contract float %113, %114\l  %116 = fadd contract float %112, %115\l  %117 = load float, float addrspace(3)* %42, align 4, !tbaa !5\l  %118 = load float, float addrspace(3)* %43, align 4, !tbaa !5\l  %119 = fmul contract float %117, %118\l  %120 = fadd contract float %116, %119\l  %121 = load float, float addrspace(3)* %44, align 16, !tbaa !5\l  %122 = load float, float addrspace(3)* %45, align 4, !tbaa !5\l  %123 = fmul contract float %121, %122\l  %124 = fadd contract float %120, %123\l  %125 = load float, float addrspace(3)* %46, align 4, !tbaa !5\l  %126 = load float, float addrspace(3)* %47, align 4, !tbaa !5\l  %127 = fmul contract float %125, %126\l  %128 = fadd contract float %124, %127\l  %129 = load float, float addrspace(3)* %48, align 8, !tbaa !5\l  %130 = load float, float addrspace(3)* %49, align 4, !tbaa !5\l  %131 = fmul contract float %129, %130\l  %132 = fadd contract float %128, %131\l  %133 = load float, float addrspace(3)* %50, align 4, !tbaa !5\l  %134 = load float, float addrspace(3)* %51, align 4, !tbaa !5\l  %135 = fmul contract float %133, %134\l  %136 = fadd contract float %132, %135\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %137 = add nuw nsw i32 %61, 1\l  %138 = icmp eq i32 %137, %10\l  br i1 %138, label %52, label %59, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4af9710:s0 -> Node0x4af95d0;
	Node0x4af9710:s1 -> Node0x4af9710;
}
