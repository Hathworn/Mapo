digraph "CFG for '_Z7kernel0ifPfS_' function" {
	label="CFG for '_Z7kernel0ifPfS_' function";

	Node0x4614030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp sgt i32 %0, 0\l  br i1 %14, label %15, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4614030:s0 -> Node0x4615f40;
	Node0x4614030:s1 -> Node0x4615fd0;
	Node0x4615f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%15:\l15:                                               \l  %16 = and i32 %0, 7\l  %17 = icmp ult i32 %0, 8\l  br i1 %17, label %20, label %18\l|{<s0>T|<s1>F}}"];
	Node0x4615f40:s0 -> Node0x4614c10;
	Node0x4615f40:s1 -> Node0x4616370;
	Node0x4616370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%18:\l18:                                               \l  %19 = and i32 %0, -8\l  br label %34\l}"];
	Node0x4616370 -> Node0x4616570;
	Node0x4614c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%20:\l20:                                               \l  %21 = phi i32 [ 0, %15 ], [ %68, %34 ]\l  %22 = icmp eq i32 %16, 0\l  br i1 %22, label %32, label %23\l|{<s0>T|<s1>F}}"];
	Node0x4614c10:s0 -> Node0x4615fd0;
	Node0x4614c10:s1 -> Node0x46167a0;
	Node0x46167a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i32 [ %29, %23 ], [ %21, %20 ]\l  %25 = phi i32 [ %30, %23 ], [ 0, %20 ]\l  %26 = zext i32 %24 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %2, i64 %26\l  store float 1.000000e+00, float addrspace(1)* %27, align 4, !tbaa !7\l  %28 = getelementptr inbounds float, float addrspace(1)* %3, i64 %26\l  store float 2.000000e+00, float addrspace(1)* %28, align 4, !tbaa !7\l  %29 = add nuw nsw i32 %24, 1\l  %30 = add i32 %25, 1\l  %31 = icmp eq i32 %30, %16\l  br i1 %31, label %32, label %23, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x46167a0:s0 -> Node0x4615fd0;
	Node0x46167a0:s1 -> Node0x46167a0;
	Node0x4615fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%32:\l32:                                               \l  %33 = icmp slt i32 %13, %0\l  br i1 %33, label %71, label %79\l|{<s0>T|<s1>F}}"];
	Node0x4615fd0:s0 -> Node0x4616260;
	Node0x4615fd0:s1 -> Node0x46184f0;
	Node0x4616570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%34:\l34:                                               \l  %35 = phi i32 [ 0, %18 ], [ %68, %34 ]\l  %36 = phi i32 [ 0, %18 ], [ %69, %34 ]\l  %37 = zext i32 %35 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %2, i64 %37\l  store float 1.000000e+00, float addrspace(1)* %38, align 4, !tbaa !7\l  %39 = getelementptr inbounds float, float addrspace(1)* %3, i64 %37\l  store float 2.000000e+00, float addrspace(1)* %39, align 4, !tbaa !7\l  %40 = or i32 %35, 1\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %2, i64 %41\l  store float 1.000000e+00, float addrspace(1)* %42, align 4, !tbaa !7\l  %43 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  store float 2.000000e+00, float addrspace(1)* %43, align 4, !tbaa !7\l  %44 = or i32 %35, 2\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %2, i64 %45\l  store float 1.000000e+00, float addrspace(1)* %46, align 4, !tbaa !7\l  %47 = getelementptr inbounds float, float addrspace(1)* %3, i64 %45\l  store float 2.000000e+00, float addrspace(1)* %47, align 4, !tbaa !7\l  %48 = or i32 %35, 3\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %2, i64 %49\l  store float 1.000000e+00, float addrspace(1)* %50, align 4, !tbaa !7\l  %51 = getelementptr inbounds float, float addrspace(1)* %3, i64 %49\l  store float 2.000000e+00, float addrspace(1)* %51, align 4, !tbaa !7\l  %52 = or i32 %35, 4\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %2, i64 %53\l  store float 1.000000e+00, float addrspace(1)* %54, align 4, !tbaa !7\l  %55 = getelementptr inbounds float, float addrspace(1)* %3, i64 %53\l  store float 2.000000e+00, float addrspace(1)* %55, align 4, !tbaa !7\l  %56 = or i32 %35, 5\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %2, i64 %57\l  store float 1.000000e+00, float addrspace(1)* %58, align 4, !tbaa !7\l  %59 = getelementptr inbounds float, float addrspace(1)* %3, i64 %57\l  store float 2.000000e+00, float addrspace(1)* %59, align 4, !tbaa !7\l  %60 = or i32 %35, 6\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %2, i64 %61\l  store float 1.000000e+00, float addrspace(1)* %62, align 4, !tbaa !7\l  %63 = getelementptr inbounds float, float addrspace(1)* %3, i64 %61\l  store float 2.000000e+00, float addrspace(1)* %63, align 4, !tbaa !7\l  %64 = or i32 %35, 7\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %2, i64 %65\l  store float 1.000000e+00, float addrspace(1)* %66, align 4, !tbaa !7\l  %67 = getelementptr inbounds float, float addrspace(1)* %3, i64 %65\l  store float 2.000000e+00, float addrspace(1)* %67, align 4, !tbaa !7\l  %68 = add nuw nsw i32 %35, 8\l  %69 = add i32 %36, 8\l  %70 = icmp eq i32 %69, %19\l  br i1 %70, label %20, label %34, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4616570:s0 -> Node0x4614c10;
	Node0x4616570:s1 -> Node0x4616570;
	Node0x4616260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%71:\l71:                                               \l  %72 = sext i32 %13 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %2, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7\l  %75 = fmul contract float %74, %1\l  %76 = getelementptr inbounds float, float addrspace(1)* %3, i64 %72\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7\l  %78 = fadd contract float %75, %77\l  store float %78, float addrspace(1)* %76, align 4, !tbaa !7\l  br label %79\l}"];
	Node0x4616260 -> Node0x46184f0;
	Node0x46184f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%79:\l79:                                               \l  ret void\l}"];
}
