digraph "CFG for '_Z20check_results_kernelidPd' function" {
	label="CFG for '_Z20check_results_kernelidPd' function";

	Node0x528b1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %0\l  br i1 %13, label %14, label %490\l|{<s0>T|<s1>F}}"];
	Node0x528b1f0:s0 -> Node0x528d0f0;
	Node0x528b1f0:s1 -> Node0x528d180;
	Node0x528d0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds double, double addrspace(1)* %2, i64 %15\l  %17 = load double, double addrspace(1)* %16, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %18 = fcmp contract une double %17, %1\l  br i1 %18, label %19, label %490\l|{<s0>T|<s1>F}}"];
	Node0x528d0f0:s0 -> Node0x528dd00;
	Node0x528d0f0:s1 -> Node0x528d180;
	Node0x528dd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%19:\l19:                                               \l  %20 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 24\l  %22 = bitcast i8 addrspace(4)* %21 to i64 addrspace(4)*\l  %23 = load i64, i64 addrspace(4)* %22, align 8, !tbaa !11\l  %24 = inttoptr i64 %23 to i8 addrspace(1)*\l  %25 = addrspacecast i8 addrspace(1)* %24 to i8*\l  %26 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %25,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %27 = extractelement \<2 x i64\> %26, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([48 x i8], [48 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %28, label %32\l|{<s0>T|<s1>F}}"];
	Node0x528dd00:s0 -> Node0x528ec30;
	Node0x528dd00:s1 -> Node0x528f620;
	Node0x528ec30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%28:\l28:                                               \l  %29 = and i64 %27, -225\l  %30 = or i64 %29, 32\l  %31 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %25,\l... i64 noundef %30, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %473\l}"];
	Node0x528ec30 -> Node0x528f8e0;
	Node0x528f620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%32:\l32:                                               \l  %33 = and i64 %27, 2\l  %34 = and i64 %27, -3\l  %35 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %34, i64 0\l  br label %36\l}"];
	Node0x528f620 -> Node0x52905a0;
	Node0x52905a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%36:\l36:                                               \l  %37 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([48 x i8], [48 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([48 x i8], [48 x i8] addrspace(4)*\l... @.str, i64 0, i64 47) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([48 x i8]* addrspacecast ([48 x i8] addrspace(4)* @.str to [48 x i8]*) to\l... i64)), i64 1))), %32 ], [ %470, %462 ]\l  %38 = phi i8 addrspace(4)* [ getelementptr inbounds ([48 x i8], [48 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %32 ], [ %471, %462 ]\l  %39 = phi \<2 x i64\> [ %35, %32 ], [ %469, %462 ]\l  %40 = icmp ugt i64 %37, 56\l  %41 = extractelement \<2 x i64\> %39, i64 0\l  %42 = or i64 %41, %33\l  %43 = insertelement \<2 x i64\> poison, i64 %42, i64 0\l  %44 = select i1 %40, \<2 x i64\> %39, \<2 x i64\> %43\l  %45 = tail call i64 @llvm.umin.i64(i64 %37, i64 56)\l  %46 = trunc i64 %45 to i32\l  %47 = extractelement \<2 x i64\> %44, i64 0\l  %48 = icmp ugt i32 %46, 7\l  br i1 %48, label %51, label %49\l|{<s0>T|<s1>F}}"];
	Node0x52905a0:s0 -> Node0x52914f0;
	Node0x52905a0:s1 -> Node0x5291580;
	Node0x5291580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%49:\l49:                                               \l  %50 = icmp eq i32 %46, 0\l  br i1 %50, label %104, label %91\l|{<s0>T|<s1>F}}"];
	Node0x5291580:s0 -> Node0x5291780;
	Node0x5291580:s1 -> Node0x52917d0;
	Node0x52914f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%51:\l51:                                               \l  %52 = load i8, i8 addrspace(4)* %38, align 1, !tbaa !15\l  %53 = zext i8 %52 to i64\l  %54 = getelementptr inbounds i8, i8 addrspace(4)* %38, i64 1\l  %55 = load i8, i8 addrspace(4)* %54, align 1, !tbaa !15\l  %56 = zext i8 %55 to i64\l  %57 = shl nuw nsw i64 %56, 8\l  %58 = or i64 %57, %53\l  %59 = getelementptr inbounds i8, i8 addrspace(4)* %38, i64 2\l  %60 = load i8, i8 addrspace(4)* %59, align 1, !tbaa !15\l  %61 = zext i8 %60 to i64\l  %62 = shl nuw nsw i64 %61, 16\l  %63 = or i64 %58, %62\l  %64 = getelementptr inbounds i8, i8 addrspace(4)* %38, i64 3\l  %65 = load i8, i8 addrspace(4)* %64, align 1, !tbaa !15\l  %66 = zext i8 %65 to i64\l  %67 = shl nuw nsw i64 %66, 24\l  %68 = or i64 %63, %67\l  %69 = getelementptr inbounds i8, i8 addrspace(4)* %38, i64 4\l  %70 = load i8, i8 addrspace(4)* %69, align 1, !tbaa !15\l  %71 = zext i8 %70 to i64\l  %72 = shl nuw nsw i64 %71, 32\l  %73 = or i64 %68, %72\l  %74 = getelementptr inbounds i8, i8 addrspace(4)* %38, i64 5\l  %75 = load i8, i8 addrspace(4)* %74, align 1, !tbaa !15\l  %76 = zext i8 %75 to i64\l  %77 = shl nuw nsw i64 %76, 40\l  %78 = or i64 %73, %77\l  %79 = getelementptr inbounds i8, i8 addrspace(4)* %38, i64 6\l  %80 = load i8, i8 addrspace(4)* %79, align 1, !tbaa !15\l  %81 = zext i8 %80 to i64\l  %82 = shl nuw nsw i64 %81, 48\l  %83 = or i64 %78, %82\l  %84 = getelementptr inbounds i8, i8 addrspace(4)* %38, i64 7\l  %85 = load i8, i8 addrspace(4)* %84, align 1, !tbaa !15\l  %86 = zext i8 %85 to i64\l  %87 = shl nuw i64 %86, 56\l  %88 = or i64 %83, %87\l  %89 = add nsw i32 %46, -8\l  %90 = getelementptr inbounds i8, i8 addrspace(4)* %38, i64 8\l  br label %104\l}"];
	Node0x52914f0 -> Node0x5291780;
	Node0x52917d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%91:\l91:                                               \l  %92 = phi i32 [ %102, %91 ], [ 0, %49 ]\l  %93 = phi i64 [ %101, %91 ], [ 0, %49 ]\l  %94 = zext i32 %92 to i64\l  %95 = getelementptr inbounds i8, i8 addrspace(4)* %38, i64 %94\l  %96 = load i8, i8 addrspace(4)* %95, align 1, !tbaa !15\l  %97 = zext i8 %96 to i64\l  %98 = shl i32 %92, 3\l  %99 = zext i32 %98 to i64\l  %100 = shl nuw i64 %97, %99\l  %101 = or i64 %100, %93\l  %102 = add nuw nsw i32 %92, 1\l  %103 = icmp eq i32 %102, %46\l  br i1 %103, label %104, label %91, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x52917d0:s0 -> Node0x5291780;
	Node0x52917d0:s1 -> Node0x52917d0;
	Node0x5291780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%104:\l104:                                              \l  %105 = phi i8 addrspace(4)* [ %90, %51 ], [ %38, %49 ], [ %38, %91 ]\l  %106 = phi i32 [ %89, %51 ], [ 0, %49 ], [ 0, %91 ]\l  %107 = phi i64 [ %88, %51 ], [ 0, %49 ], [ %101, %91 ]\l  %108 = icmp ugt i32 %106, 7\l  br i1 %108, label %111, label %109\l|{<s0>T|<s1>F}}"];
	Node0x5291780:s0 -> Node0x5294470;
	Node0x5291780:s1 -> Node0x52944c0;
	Node0x52944c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%109:\l109:                                              \l  %110 = icmp eq i32 %106, 0\l  br i1 %110, label %164, label %151\l|{<s0>T|<s1>F}}"];
	Node0x52944c0:s0 -> Node0x5294690;
	Node0x52944c0:s1 -> Node0x52946e0;
	Node0x5294470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%111:\l111:                                              \l  %112 = load i8, i8 addrspace(4)* %105, align 1, !tbaa !15\l  %113 = zext i8 %112 to i64\l  %114 = getelementptr inbounds i8, i8 addrspace(4)* %105, i64 1\l  %115 = load i8, i8 addrspace(4)* %114, align 1, !tbaa !15\l  %116 = zext i8 %115 to i64\l  %117 = shl nuw nsw i64 %116, 8\l  %118 = or i64 %117, %113\l  %119 = getelementptr inbounds i8, i8 addrspace(4)* %105, i64 2\l  %120 = load i8, i8 addrspace(4)* %119, align 1, !tbaa !15\l  %121 = zext i8 %120 to i64\l  %122 = shl nuw nsw i64 %121, 16\l  %123 = or i64 %118, %122\l  %124 = getelementptr inbounds i8, i8 addrspace(4)* %105, i64 3\l  %125 = load i8, i8 addrspace(4)* %124, align 1, !tbaa !15\l  %126 = zext i8 %125 to i64\l  %127 = shl nuw nsw i64 %126, 24\l  %128 = or i64 %123, %127\l  %129 = getelementptr inbounds i8, i8 addrspace(4)* %105, i64 4\l  %130 = load i8, i8 addrspace(4)* %129, align 1, !tbaa !15\l  %131 = zext i8 %130 to i64\l  %132 = shl nuw nsw i64 %131, 32\l  %133 = or i64 %128, %132\l  %134 = getelementptr inbounds i8, i8 addrspace(4)* %105, i64 5\l  %135 = load i8, i8 addrspace(4)* %134, align 1, !tbaa !15\l  %136 = zext i8 %135 to i64\l  %137 = shl nuw nsw i64 %136, 40\l  %138 = or i64 %133, %137\l  %139 = getelementptr inbounds i8, i8 addrspace(4)* %105, i64 6\l  %140 = load i8, i8 addrspace(4)* %139, align 1, !tbaa !15\l  %141 = zext i8 %140 to i64\l  %142 = shl nuw nsw i64 %141, 48\l  %143 = or i64 %138, %142\l  %144 = getelementptr inbounds i8, i8 addrspace(4)* %105, i64 7\l  %145 = load i8, i8 addrspace(4)* %144, align 1, !tbaa !15\l  %146 = zext i8 %145 to i64\l  %147 = shl nuw i64 %146, 56\l  %148 = or i64 %143, %147\l  %149 = add nsw i32 %106, -8\l  %150 = getelementptr inbounds i8, i8 addrspace(4)* %105, i64 8\l  br label %164\l}"];
	Node0x5294470 -> Node0x5294690;
	Node0x52946e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%151:\l151:                                              \l  %152 = phi i32 [ %162, %151 ], [ 0, %109 ]\l  %153 = phi i64 [ %161, %151 ], [ 0, %109 ]\l  %154 = zext i32 %152 to i64\l  %155 = getelementptr inbounds i8, i8 addrspace(4)* %105, i64 %154\l  %156 = load i8, i8 addrspace(4)* %155, align 1, !tbaa !15\l  %157 = zext i8 %156 to i64\l  %158 = shl i32 %152, 3\l  %159 = zext i32 %158 to i64\l  %160 = shl nuw i64 %157, %159\l  %161 = or i64 %160, %153\l  %162 = add nuw nsw i32 %152, 1\l  %163 = icmp eq i32 %162, %106\l  br i1 %163, label %164, label %151\l|{<s0>T|<s1>F}}"];
	Node0x52946e0:s0 -> Node0x5294690;
	Node0x52946e0:s1 -> Node0x52946e0;
	Node0x5294690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%164:\l164:                                              \l  %165 = phi i8 addrspace(4)* [ %150, %111 ], [ %105, %109 ], [ %105, %151 ]\l  %166 = phi i32 [ %149, %111 ], [ 0, %109 ], [ 0, %151 ]\l  %167 = phi i64 [ %148, %111 ], [ 0, %109 ], [ %161, %151 ]\l  %168 = icmp ugt i32 %166, 7\l  br i1 %168, label %171, label %169\l|{<s0>T|<s1>F}}"];
	Node0x5294690:s0 -> Node0x5296bc0;
	Node0x5294690:s1 -> Node0x5296c10;
	Node0x5296c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%169:\l169:                                              \l  %170 = icmp eq i32 %166, 0\l  br i1 %170, label %224, label %211\l|{<s0>T|<s1>F}}"];
	Node0x5296c10:s0 -> Node0x5296da0;
	Node0x5296c10:s1 -> Node0x5296df0;
	Node0x5296bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%171:\l171:                                              \l  %172 = load i8, i8 addrspace(4)* %165, align 1, !tbaa !15\l  %173 = zext i8 %172 to i64\l  %174 = getelementptr inbounds i8, i8 addrspace(4)* %165, i64 1\l  %175 = load i8, i8 addrspace(4)* %174, align 1, !tbaa !15\l  %176 = zext i8 %175 to i64\l  %177 = shl nuw nsw i64 %176, 8\l  %178 = or i64 %177, %173\l  %179 = getelementptr inbounds i8, i8 addrspace(4)* %165, i64 2\l  %180 = load i8, i8 addrspace(4)* %179, align 1, !tbaa !15\l  %181 = zext i8 %180 to i64\l  %182 = shl nuw nsw i64 %181, 16\l  %183 = or i64 %178, %182\l  %184 = getelementptr inbounds i8, i8 addrspace(4)* %165, i64 3\l  %185 = load i8, i8 addrspace(4)* %184, align 1, !tbaa !15\l  %186 = zext i8 %185 to i64\l  %187 = shl nuw nsw i64 %186, 24\l  %188 = or i64 %183, %187\l  %189 = getelementptr inbounds i8, i8 addrspace(4)* %165, i64 4\l  %190 = load i8, i8 addrspace(4)* %189, align 1, !tbaa !15\l  %191 = zext i8 %190 to i64\l  %192 = shl nuw nsw i64 %191, 32\l  %193 = or i64 %188, %192\l  %194 = getelementptr inbounds i8, i8 addrspace(4)* %165, i64 5\l  %195 = load i8, i8 addrspace(4)* %194, align 1, !tbaa !15\l  %196 = zext i8 %195 to i64\l  %197 = shl nuw nsw i64 %196, 40\l  %198 = or i64 %193, %197\l  %199 = getelementptr inbounds i8, i8 addrspace(4)* %165, i64 6\l  %200 = load i8, i8 addrspace(4)* %199, align 1, !tbaa !15\l  %201 = zext i8 %200 to i64\l  %202 = shl nuw nsw i64 %201, 48\l  %203 = or i64 %198, %202\l  %204 = getelementptr inbounds i8, i8 addrspace(4)* %165, i64 7\l  %205 = load i8, i8 addrspace(4)* %204, align 1, !tbaa !15\l  %206 = zext i8 %205 to i64\l  %207 = shl nuw i64 %206, 56\l  %208 = or i64 %203, %207\l  %209 = add nsw i32 %166, -8\l  %210 = getelementptr inbounds i8, i8 addrspace(4)* %165, i64 8\l  br label %224\l}"];
	Node0x5296bc0 -> Node0x5296da0;
	Node0x5296df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%211:\l211:                                              \l  %212 = phi i32 [ %222, %211 ], [ 0, %169 ]\l  %213 = phi i64 [ %221, %211 ], [ 0, %169 ]\l  %214 = zext i32 %212 to i64\l  %215 = getelementptr inbounds i8, i8 addrspace(4)* %165, i64 %214\l  %216 = load i8, i8 addrspace(4)* %215, align 1, !tbaa !15\l  %217 = zext i8 %216 to i64\l  %218 = shl i32 %212, 3\l  %219 = zext i32 %218 to i64\l  %220 = shl nuw i64 %217, %219\l  %221 = or i64 %220, %213\l  %222 = add nuw nsw i32 %212, 1\l  %223 = icmp eq i32 %222, %166\l  br i1 %223, label %224, label %211\l|{<s0>T|<s1>F}}"];
	Node0x5296df0:s0 -> Node0x5296da0;
	Node0x5296df0:s1 -> Node0x5296df0;
	Node0x5296da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%224:\l224:                                              \l  %225 = phi i8 addrspace(4)* [ %210, %171 ], [ %165, %169 ], [ %165, %211 ]\l  %226 = phi i32 [ %209, %171 ], [ 0, %169 ], [ 0, %211 ]\l  %227 = phi i64 [ %208, %171 ], [ 0, %169 ], [ %221, %211 ]\l  %228 = icmp ugt i32 %226, 7\l  br i1 %228, label %231, label %229\l|{<s0>T|<s1>F}}"];
	Node0x5296da0:s0 -> Node0x5298e40;
	Node0x5296da0:s1 -> Node0x5298e90;
	Node0x5298e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%229:\l229:                                              \l  %230 = icmp eq i32 %226, 0\l  br i1 %230, label %284, label %271\l|{<s0>T|<s1>F}}"];
	Node0x5298e90:s0 -> Node0x5299020;
	Node0x5298e90:s1 -> Node0x5299070;
	Node0x5298e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%231:\l231:                                              \l  %232 = load i8, i8 addrspace(4)* %225, align 1, !tbaa !15\l  %233 = zext i8 %232 to i64\l  %234 = getelementptr inbounds i8, i8 addrspace(4)* %225, i64 1\l  %235 = load i8, i8 addrspace(4)* %234, align 1, !tbaa !15\l  %236 = zext i8 %235 to i64\l  %237 = shl nuw nsw i64 %236, 8\l  %238 = or i64 %237, %233\l  %239 = getelementptr inbounds i8, i8 addrspace(4)* %225, i64 2\l  %240 = load i8, i8 addrspace(4)* %239, align 1, !tbaa !15\l  %241 = zext i8 %240 to i64\l  %242 = shl nuw nsw i64 %241, 16\l  %243 = or i64 %238, %242\l  %244 = getelementptr inbounds i8, i8 addrspace(4)* %225, i64 3\l  %245 = load i8, i8 addrspace(4)* %244, align 1, !tbaa !15\l  %246 = zext i8 %245 to i64\l  %247 = shl nuw nsw i64 %246, 24\l  %248 = or i64 %243, %247\l  %249 = getelementptr inbounds i8, i8 addrspace(4)* %225, i64 4\l  %250 = load i8, i8 addrspace(4)* %249, align 1, !tbaa !15\l  %251 = zext i8 %250 to i64\l  %252 = shl nuw nsw i64 %251, 32\l  %253 = or i64 %248, %252\l  %254 = getelementptr inbounds i8, i8 addrspace(4)* %225, i64 5\l  %255 = load i8, i8 addrspace(4)* %254, align 1, !tbaa !15\l  %256 = zext i8 %255 to i64\l  %257 = shl nuw nsw i64 %256, 40\l  %258 = or i64 %253, %257\l  %259 = getelementptr inbounds i8, i8 addrspace(4)* %225, i64 6\l  %260 = load i8, i8 addrspace(4)* %259, align 1, !tbaa !15\l  %261 = zext i8 %260 to i64\l  %262 = shl nuw nsw i64 %261, 48\l  %263 = or i64 %258, %262\l  %264 = getelementptr inbounds i8, i8 addrspace(4)* %225, i64 7\l  %265 = load i8, i8 addrspace(4)* %264, align 1, !tbaa !15\l  %266 = zext i8 %265 to i64\l  %267 = shl nuw i64 %266, 56\l  %268 = or i64 %263, %267\l  %269 = add nsw i32 %226, -8\l  %270 = getelementptr inbounds i8, i8 addrspace(4)* %225, i64 8\l  br label %284\l}"];
	Node0x5298e40 -> Node0x5299020;
	Node0x5299070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%271:\l271:                                              \l  %272 = phi i32 [ %282, %271 ], [ 0, %229 ]\l  %273 = phi i64 [ %281, %271 ], [ 0, %229 ]\l  %274 = zext i32 %272 to i64\l  %275 = getelementptr inbounds i8, i8 addrspace(4)* %225, i64 %274\l  %276 = load i8, i8 addrspace(4)* %275, align 1, !tbaa !15\l  %277 = zext i8 %276 to i64\l  %278 = shl i32 %272, 3\l  %279 = zext i32 %278 to i64\l  %280 = shl nuw i64 %277, %279\l  %281 = or i64 %280, %273\l  %282 = add nuw nsw i32 %272, 1\l  %283 = icmp eq i32 %282, %226\l  br i1 %283, label %284, label %271\l|{<s0>T|<s1>F}}"];
	Node0x5299070:s0 -> Node0x5299020;
	Node0x5299070:s1 -> Node0x5299070;
	Node0x5299020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%284:\l284:                                              \l  %285 = phi i8 addrspace(4)* [ %270, %231 ], [ %225, %229 ], [ %225, %271 ]\l  %286 = phi i32 [ %269, %231 ], [ 0, %229 ], [ 0, %271 ]\l  %287 = phi i64 [ %268, %231 ], [ 0, %229 ], [ %281, %271 ]\l  %288 = icmp ugt i32 %286, 7\l  br i1 %288, label %291, label %289\l|{<s0>T|<s1>F}}"];
	Node0x5299020:s0 -> Node0x529b8a0;
	Node0x5299020:s1 -> Node0x529b8f0;
	Node0x529b8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%289:\l289:                                              \l  %290 = icmp eq i32 %286, 0\l  br i1 %290, label %344, label %331\l|{<s0>T|<s1>F}}"];
	Node0x529b8f0:s0 -> Node0x529ba80;
	Node0x529b8f0:s1 -> Node0x529bad0;
	Node0x529b8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%291:\l291:                                              \l  %292 = load i8, i8 addrspace(4)* %285, align 1, !tbaa !15\l  %293 = zext i8 %292 to i64\l  %294 = getelementptr inbounds i8, i8 addrspace(4)* %285, i64 1\l  %295 = load i8, i8 addrspace(4)* %294, align 1, !tbaa !15\l  %296 = zext i8 %295 to i64\l  %297 = shl nuw nsw i64 %296, 8\l  %298 = or i64 %297, %293\l  %299 = getelementptr inbounds i8, i8 addrspace(4)* %285, i64 2\l  %300 = load i8, i8 addrspace(4)* %299, align 1, !tbaa !15\l  %301 = zext i8 %300 to i64\l  %302 = shl nuw nsw i64 %301, 16\l  %303 = or i64 %298, %302\l  %304 = getelementptr inbounds i8, i8 addrspace(4)* %285, i64 3\l  %305 = load i8, i8 addrspace(4)* %304, align 1, !tbaa !15\l  %306 = zext i8 %305 to i64\l  %307 = shl nuw nsw i64 %306, 24\l  %308 = or i64 %303, %307\l  %309 = getelementptr inbounds i8, i8 addrspace(4)* %285, i64 4\l  %310 = load i8, i8 addrspace(4)* %309, align 1, !tbaa !15\l  %311 = zext i8 %310 to i64\l  %312 = shl nuw nsw i64 %311, 32\l  %313 = or i64 %308, %312\l  %314 = getelementptr inbounds i8, i8 addrspace(4)* %285, i64 5\l  %315 = load i8, i8 addrspace(4)* %314, align 1, !tbaa !15\l  %316 = zext i8 %315 to i64\l  %317 = shl nuw nsw i64 %316, 40\l  %318 = or i64 %313, %317\l  %319 = getelementptr inbounds i8, i8 addrspace(4)* %285, i64 6\l  %320 = load i8, i8 addrspace(4)* %319, align 1, !tbaa !15\l  %321 = zext i8 %320 to i64\l  %322 = shl nuw nsw i64 %321, 48\l  %323 = or i64 %318, %322\l  %324 = getelementptr inbounds i8, i8 addrspace(4)* %285, i64 7\l  %325 = load i8, i8 addrspace(4)* %324, align 1, !tbaa !15\l  %326 = zext i8 %325 to i64\l  %327 = shl nuw i64 %326, 56\l  %328 = or i64 %323, %327\l  %329 = add nsw i32 %286, -8\l  %330 = getelementptr inbounds i8, i8 addrspace(4)* %285, i64 8\l  br label %344\l}"];
	Node0x529b8a0 -> Node0x529ba80;
	Node0x529bad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%331:\l331:                                              \l  %332 = phi i32 [ %342, %331 ], [ 0, %289 ]\l  %333 = phi i64 [ %341, %331 ], [ 0, %289 ]\l  %334 = zext i32 %332 to i64\l  %335 = getelementptr inbounds i8, i8 addrspace(4)* %285, i64 %334\l  %336 = load i8, i8 addrspace(4)* %335, align 1, !tbaa !15\l  %337 = zext i8 %336 to i64\l  %338 = shl i32 %332, 3\l  %339 = zext i32 %338 to i64\l  %340 = shl nuw i64 %337, %339\l  %341 = or i64 %340, %333\l  %342 = add nuw nsw i32 %332, 1\l  %343 = icmp eq i32 %342, %286\l  br i1 %343, label %344, label %331\l|{<s0>T|<s1>F}}"];
	Node0x529bad0:s0 -> Node0x529ba80;
	Node0x529bad0:s1 -> Node0x529bad0;
	Node0x529ba80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%344:\l344:                                              \l  %345 = phi i8 addrspace(4)* [ %330, %291 ], [ %285, %289 ], [ %285, %331 ]\l  %346 = phi i32 [ %329, %291 ], [ 0, %289 ], [ 0, %331 ]\l  %347 = phi i64 [ %328, %291 ], [ 0, %289 ], [ %341, %331 ]\l  %348 = icmp ugt i32 %346, 7\l  br i1 %348, label %351, label %349\l|{<s0>T|<s1>F}}"];
	Node0x529ba80:s0 -> Node0x529e500;
	Node0x529ba80:s1 -> Node0x529e550;
	Node0x529e550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%349:\l349:                                              \l  %350 = icmp eq i32 %346, 0\l  br i1 %350, label %404, label %391\l|{<s0>T|<s1>F}}"];
	Node0x529e550:s0 -> Node0x529e6e0;
	Node0x529e550:s1 -> Node0x529e730;
	Node0x529e500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%351:\l351:                                              \l  %352 = load i8, i8 addrspace(4)* %345, align 1, !tbaa !15\l  %353 = zext i8 %352 to i64\l  %354 = getelementptr inbounds i8, i8 addrspace(4)* %345, i64 1\l  %355 = load i8, i8 addrspace(4)* %354, align 1, !tbaa !15\l  %356 = zext i8 %355 to i64\l  %357 = shl nuw nsw i64 %356, 8\l  %358 = or i64 %357, %353\l  %359 = getelementptr inbounds i8, i8 addrspace(4)* %345, i64 2\l  %360 = load i8, i8 addrspace(4)* %359, align 1, !tbaa !15\l  %361 = zext i8 %360 to i64\l  %362 = shl nuw nsw i64 %361, 16\l  %363 = or i64 %358, %362\l  %364 = getelementptr inbounds i8, i8 addrspace(4)* %345, i64 3\l  %365 = load i8, i8 addrspace(4)* %364, align 1, !tbaa !15\l  %366 = zext i8 %365 to i64\l  %367 = shl nuw nsw i64 %366, 24\l  %368 = or i64 %363, %367\l  %369 = getelementptr inbounds i8, i8 addrspace(4)* %345, i64 4\l  %370 = load i8, i8 addrspace(4)* %369, align 1, !tbaa !15\l  %371 = zext i8 %370 to i64\l  %372 = shl nuw nsw i64 %371, 32\l  %373 = or i64 %368, %372\l  %374 = getelementptr inbounds i8, i8 addrspace(4)* %345, i64 5\l  %375 = load i8, i8 addrspace(4)* %374, align 1, !tbaa !15\l  %376 = zext i8 %375 to i64\l  %377 = shl nuw nsw i64 %376, 40\l  %378 = or i64 %373, %377\l  %379 = getelementptr inbounds i8, i8 addrspace(4)* %345, i64 6\l  %380 = load i8, i8 addrspace(4)* %379, align 1, !tbaa !15\l  %381 = zext i8 %380 to i64\l  %382 = shl nuw nsw i64 %381, 48\l  %383 = or i64 %378, %382\l  %384 = getelementptr inbounds i8, i8 addrspace(4)* %345, i64 7\l  %385 = load i8, i8 addrspace(4)* %384, align 1, !tbaa !15\l  %386 = zext i8 %385 to i64\l  %387 = shl nuw i64 %386, 56\l  %388 = or i64 %383, %387\l  %389 = add nsw i32 %346, -8\l  %390 = getelementptr inbounds i8, i8 addrspace(4)* %345, i64 8\l  br label %404\l}"];
	Node0x529e500 -> Node0x529e6e0;
	Node0x529e730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%391:\l391:                                              \l  %392 = phi i32 [ %402, %391 ], [ 0, %349 ]\l  %393 = phi i64 [ %401, %391 ], [ 0, %349 ]\l  %394 = zext i32 %392 to i64\l  %395 = getelementptr inbounds i8, i8 addrspace(4)* %345, i64 %394\l  %396 = load i8, i8 addrspace(4)* %395, align 1, !tbaa !15\l  %397 = zext i8 %396 to i64\l  %398 = shl i32 %392, 3\l  %399 = zext i32 %398 to i64\l  %400 = shl nuw i64 %397, %399\l  %401 = or i64 %400, %393\l  %402 = add nuw nsw i32 %392, 1\l  %403 = icmp eq i32 %402, %346\l  br i1 %403, label %404, label %391\l|{<s0>T|<s1>F}}"];
	Node0x529e730:s0 -> Node0x529e6e0;
	Node0x529e730:s1 -> Node0x529e730;
	Node0x529e6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%404:\l404:                                              \l  %405 = phi i8 addrspace(4)* [ %390, %351 ], [ %345, %349 ], [ %345, %391 ]\l  %406 = phi i32 [ %389, %351 ], [ 0, %349 ], [ 0, %391 ]\l  %407 = phi i64 [ %388, %351 ], [ 0, %349 ], [ %401, %391 ]\l  %408 = icmp ugt i32 %406, 7\l  br i1 %408, label %411, label %409\l|{<s0>T|<s1>F}}"];
	Node0x529e6e0:s0 -> Node0x52a0d60;
	Node0x529e6e0:s1 -> Node0x52a0db0;
	Node0x52a0db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%409:\l409:                                              \l  %410 = icmp eq i32 %406, 0\l  br i1 %410, label %462, label %449\l|{<s0>T|<s1>F}}"];
	Node0x52a0db0:s0 -> Node0x5290a20;
	Node0x52a0db0:s1 -> Node0x52a0f40;
	Node0x52a0d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%411:\l411:                                              \l  %412 = load i8, i8 addrspace(4)* %405, align 1, !tbaa !15\l  %413 = zext i8 %412 to i64\l  %414 = getelementptr inbounds i8, i8 addrspace(4)* %405, i64 1\l  %415 = load i8, i8 addrspace(4)* %414, align 1, !tbaa !15\l  %416 = zext i8 %415 to i64\l  %417 = shl nuw nsw i64 %416, 8\l  %418 = or i64 %417, %413\l  %419 = getelementptr inbounds i8, i8 addrspace(4)* %405, i64 2\l  %420 = load i8, i8 addrspace(4)* %419, align 1, !tbaa !15\l  %421 = zext i8 %420 to i64\l  %422 = shl nuw nsw i64 %421, 16\l  %423 = or i64 %418, %422\l  %424 = getelementptr inbounds i8, i8 addrspace(4)* %405, i64 3\l  %425 = load i8, i8 addrspace(4)* %424, align 1, !tbaa !15\l  %426 = zext i8 %425 to i64\l  %427 = shl nuw nsw i64 %426, 24\l  %428 = or i64 %423, %427\l  %429 = getelementptr inbounds i8, i8 addrspace(4)* %405, i64 4\l  %430 = load i8, i8 addrspace(4)* %429, align 1, !tbaa !15\l  %431 = zext i8 %430 to i64\l  %432 = shl nuw nsw i64 %431, 32\l  %433 = or i64 %428, %432\l  %434 = getelementptr inbounds i8, i8 addrspace(4)* %405, i64 5\l  %435 = load i8, i8 addrspace(4)* %434, align 1, !tbaa !15\l  %436 = zext i8 %435 to i64\l  %437 = shl nuw nsw i64 %436, 40\l  %438 = or i64 %433, %437\l  %439 = getelementptr inbounds i8, i8 addrspace(4)* %405, i64 6\l  %440 = load i8, i8 addrspace(4)* %439, align 1, !tbaa !15\l  %441 = zext i8 %440 to i64\l  %442 = shl nuw nsw i64 %441, 48\l  %443 = or i64 %438, %442\l  %444 = getelementptr inbounds i8, i8 addrspace(4)* %405, i64 7\l  %445 = load i8, i8 addrspace(4)* %444, align 1, !tbaa !15\l  %446 = zext i8 %445 to i64\l  %447 = shl nuw i64 %446, 56\l  %448 = or i64 %443, %447\l  br label %462\l}"];
	Node0x52a0d60 -> Node0x5290a20;
	Node0x52a0f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%449:\l449:                                              \l  %450 = phi i32 [ %460, %449 ], [ 0, %409 ]\l  %451 = phi i64 [ %459, %449 ], [ 0, %409 ]\l  %452 = zext i32 %450 to i64\l  %453 = getelementptr inbounds i8, i8 addrspace(4)* %405, i64 %452\l  %454 = load i8, i8 addrspace(4)* %453, align 1, !tbaa !15\l  %455 = zext i8 %454 to i64\l  %456 = shl i32 %450, 3\l  %457 = zext i32 %456 to i64\l  %458 = shl nuw i64 %455, %457\l  %459 = or i64 %458, %451\l  %460 = add nuw nsw i32 %450, 1\l  %461 = icmp eq i32 %460, %406\l  br i1 %461, label %462, label %449\l|{<s0>T|<s1>F}}"];
	Node0x52a0f40:s0 -> Node0x5290a20;
	Node0x52a0f40:s1 -> Node0x52a0f40;
	Node0x5290a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%462:\l462:                                              \l  %463 = phi i64 [ %448, %411 ], [ 0, %409 ], [ %459, %449 ]\l  %464 = shl nuw nsw i64 %45, 2\l  %465 = add nuw nsw i64 %464, 28\l  %466 = and i64 %465, 480\l  %467 = and i64 %47, -225\l  %468 = or i64 %467, %466\l  %469 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %25,\l... i64 noundef %468, i64 noundef %107, i64 noundef %167, i64 noundef %227, i64\l... noundef %287, i64 noundef %347, i64 noundef %407, i64 noundef %463) #10\l  %470 = sub i64 %37, %45\l  %471 = getelementptr inbounds i8, i8 addrspace(4)* %38, i64 %45\l  %472 = icmp eq i64 %470, 0\l  br i1 %472, label %473, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5290a20:s0 -> Node0x528f8e0;
	Node0x5290a20:s1 -> Node0x52905a0;
	Node0x528f8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%473:\l473:                                              \l  %474 = phi \<2 x i64\> [ %31, %28 ], [ %469, %462 ]\l  %475 = extractelement \<2 x i64\> %474, i64 0\l  %476 = zext i32 %12 to i64\l  %477 = and i64 %475, -225\l  %478 = or i64 %477, 32\l  %479 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %25,\l... i64 noundef %478, i64 noundef %476, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %480 = extractelement \<2 x i64\> %479, i64 0\l  %481 = bitcast double %1 to i64\l  %482 = and i64 %480, -225\l  %483 = or i64 %482, 32\l  %484 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %25,\l... i64 noundef %483, i64 noundef %481, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %485 = extractelement \<2 x i64\> %484, i64 0\l  %486 = bitcast double %17 to i64\l  %487 = and i64 %485, -227\l  %488 = or i64 %487, 34\l  %489 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %25,\l... i64 noundef %488, i64 noundef %486, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %490\l}"];
	Node0x528f8e0 -> Node0x528d180;
	Node0x528d180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%490:\l490:                                              \l  ret void\l}"];
}
