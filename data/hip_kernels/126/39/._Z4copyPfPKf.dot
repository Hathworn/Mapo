digraph "CFG for '_Z4copyPfPKf' function" {
	label="CFG for '_Z4copyPfPKf' function";

	Node0x641d810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = shl i32 %5, 5\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %8 = add i32 %6, %7\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !5\l  %13 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !14, !invariant.load\l... !15\l  %16 = zext i16 %15 to i32\l  %17 = udiv i32 %12, %16\l  %18 = mul i32 %17, %16\l  %19 = icmp ugt i32 %12, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %8, %21\l  %23 = add i32 %22, %3\l  %24 = shl i32 %23, 5\l  %25 = add i32 %24, %4\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %1, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !16\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  store float %28, float addrspace(1)* %29, align 4, !tbaa !16\l  %30 = add nsw i32 %8, 8\l  %31 = mul i32 %30, %21\l  %32 = add i32 %31, %3\l  %33 = shl i32 %32, 5\l  %34 = add i32 %33, %4\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  store float %37, float addrspace(1)* %38, align 4, !tbaa !16\l  %39 = add nsw i32 %8, 16\l  %40 = mul i32 %39, %21\l  %41 = add i32 %40, %3\l  %42 = shl i32 %41, 5\l  %43 = add i32 %42, %4\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !16\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  store float %46, float addrspace(1)* %47, align 4, !tbaa !16\l  %48 = add nsw i32 %8, 24\l  %49 = mul i32 %48, %21\l  %50 = add i32 %49, %3\l  %51 = shl i32 %50, 5\l  %52 = add i32 %51, %4\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  store float %55, float addrspace(1)* %56, align 4, !tbaa !16\l  ret void\l}"];
}
