digraph "CFG for '_Z12testKernel2DPfS_S_m' function" {
	label="CFG for '_Z12testKernel2DPfS_S_m' function";

	Node0x5ba8640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = icmp slt i32 %21, 567\l  %23 = icmp slt i32 %13, 567\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %44\l|{<s0>T|<s1>F}}"];
	Node0x5ba8640:s0 -> Node0x5bac120;
	Node0x5ba8640:s1 -> Node0x5bac1b0;
	Node0x5bac120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%25:\l25:                                               \l  %26 = bitcast float addrspace(1)* %0 to i8 addrspace(1)*\l  %27 = sext i32 %21 to i64\l  %28 = mul i64 %27, %3\l  %29 = getelementptr inbounds i8, i8 addrspace(1)* %26, i64 %28\l  %30 = bitcast i8 addrspace(1)* %29 to float addrspace(1)*\l  %31 = bitcast float addrspace(1)* %1 to i8 addrspace(1)*\l  %32 = getelementptr inbounds i8, i8 addrspace(1)* %31, i64 %28\l  %33 = bitcast i8 addrspace(1)* %32 to float addrspace(1)*\l  %34 = bitcast float addrspace(1)* %2 to i8 addrspace(1)*\l  %35 = getelementptr inbounds i8, i8 addrspace(1)* %34, i64 %28\l  %36 = bitcast i8 addrspace(1)* %35 to float addrspace(1)*\l  %37 = sext i32 %13 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %30, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %40 = getelementptr inbounds float, float addrspace(1)* %33, i64 %37\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %42 = fadd contract float %39, %41\l  %43 = getelementptr inbounds float, float addrspace(1)* %36, i64 %37\l  store float %42, float addrspace(1)* %43, align 4, !tbaa !7\l  br label %44\l}"];
	Node0x5bac120 -> Node0x5bac1b0;
	Node0x5bac1b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  ret void\l}"];
}
