; ModuleID = '../data/hip_kernels/14271/5/main.cu'
source_filename = "../data/hip_kernels/14271/5/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: mustprogress nofree norecurse nounwind
define protected amdgpu_kernel void @_Z18updateTrailsAtomicPfPiS_(float addrspace(1)* nocapture %0, i32 addrspace(1)* nocapture readonly %1, float addrspace(1)* nocapture readonly %2) local_unnamed_addr #0 {
  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %5 = mul nsw i32 %4, 30
  %6 = sext i32 %4 to i64
  %7 = getelementptr inbounds float, float addrspace(1)* %2, i64 %6
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %8
  %10 = load i32, i32 addrspace(1)* %9, align 4, !tbaa !4
  %11 = or i32 %5, 1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %12
  %14 = load i32, i32 addrspace(1)* %13, align 4, !tbaa !4
  %15 = tail call i32 @llvm.smin.i32(i32 %10, i32 %14)
  %16 = tail call i32 @llvm.smax.i32(i32 %10, i32 %14)
  %17 = mul nsw i32 %16, 30
  %18 = add nsw i32 %17, %15
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds float, float addrspace(1)* %0, i64 %19
  %21 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %22 = fdiv contract float 1.000000e+02, %21
  %23 = atomicrmw fadd float addrspace(1)* %20, float %22 syncscope("agent-one-as") monotonic, align 4
  %24 = load i32, i32 addrspace(1)* %13, align 4, !tbaa !4
  %25 = add nsw i32 %5, 2
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %26
  %28 = load i32, i32 addrspace(1)* %27, align 4, !tbaa !4
  %29 = tail call i32 @llvm.smin.i32(i32 %24, i32 %28)
  %30 = tail call i32 @llvm.smax.i32(i32 %24, i32 %28)
  %31 = mul nsw i32 %30, 30
  %32 = add nsw i32 %31, %29
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33
  %35 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %36 = fdiv contract float 1.000000e+02, %35
  %37 = atomicrmw fadd float addrspace(1)* %34, float %36 syncscope("agent-one-as") monotonic, align 4
  %38 = load i32, i32 addrspace(1)* %27, align 4, !tbaa !4
  %39 = add nsw i32 %5, 3
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %40
  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !4
  %43 = tail call i32 @llvm.smin.i32(i32 %38, i32 %42)
  %44 = tail call i32 @llvm.smax.i32(i32 %38, i32 %42)
  %45 = mul nsw i32 %44, 30
  %46 = add nsw i32 %45, %43
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47
  %49 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %50 = fdiv contract float 1.000000e+02, %49
  %51 = atomicrmw fadd float addrspace(1)* %48, float %50 syncscope("agent-one-as") monotonic, align 4
  %52 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !4
  %53 = add nsw i32 %5, 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %54
  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !4
  %57 = tail call i32 @llvm.smin.i32(i32 %52, i32 %56)
  %58 = tail call i32 @llvm.smax.i32(i32 %52, i32 %56)
  %59 = mul nsw i32 %58, 30
  %60 = add nsw i32 %59, %57
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61
  %63 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %64 = fdiv contract float 1.000000e+02, %63
  %65 = atomicrmw fadd float addrspace(1)* %62, float %64 syncscope("agent-one-as") monotonic, align 4
  %66 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !4
  %67 = add nsw i32 %5, 5
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %68
  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !4
  %71 = tail call i32 @llvm.smin.i32(i32 %66, i32 %70)
  %72 = tail call i32 @llvm.smax.i32(i32 %66, i32 %70)
  %73 = mul nsw i32 %72, 30
  %74 = add nsw i32 %73, %71
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %75
  %77 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %78 = fdiv contract float 1.000000e+02, %77
  %79 = atomicrmw fadd float addrspace(1)* %76, float %78 syncscope("agent-one-as") monotonic, align 4
  %80 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !4
  %81 = add nsw i32 %5, 6
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %82
  %84 = load i32, i32 addrspace(1)* %83, align 4, !tbaa !4
  %85 = tail call i32 @llvm.smin.i32(i32 %80, i32 %84)
  %86 = tail call i32 @llvm.smax.i32(i32 %80, i32 %84)
  %87 = mul nsw i32 %86, 30
  %88 = add nsw i32 %87, %85
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds float, float addrspace(1)* %0, i64 %89
  %91 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %92 = fdiv contract float 1.000000e+02, %91
  %93 = atomicrmw fadd float addrspace(1)* %90, float %92 syncscope("agent-one-as") monotonic, align 4
  %94 = load i32, i32 addrspace(1)* %83, align 4, !tbaa !4
  %95 = add nsw i32 %5, 7
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %96
  %98 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !4
  %99 = tail call i32 @llvm.smin.i32(i32 %94, i32 %98)
  %100 = tail call i32 @llvm.smax.i32(i32 %94, i32 %98)
  %101 = mul nsw i32 %100, 30
  %102 = add nsw i32 %101, %99
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds float, float addrspace(1)* %0, i64 %103
  %105 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %106 = fdiv contract float 1.000000e+02, %105
  %107 = atomicrmw fadd float addrspace(1)* %104, float %106 syncscope("agent-one-as") monotonic, align 4
  %108 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !4
  %109 = add nsw i32 %5, 8
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %110
  %112 = load i32, i32 addrspace(1)* %111, align 4, !tbaa !4
  %113 = tail call i32 @llvm.smin.i32(i32 %108, i32 %112)
  %114 = tail call i32 @llvm.smax.i32(i32 %108, i32 %112)
  %115 = mul nsw i32 %114, 30
  %116 = add nsw i32 %115, %113
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds float, float addrspace(1)* %0, i64 %117
  %119 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %120 = fdiv contract float 1.000000e+02, %119
  %121 = atomicrmw fadd float addrspace(1)* %118, float %120 syncscope("agent-one-as") monotonic, align 4
  %122 = load i32, i32 addrspace(1)* %111, align 4, !tbaa !4
  %123 = add nsw i32 %5, 9
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %124
  %126 = load i32, i32 addrspace(1)* %125, align 4, !tbaa !4
  %127 = tail call i32 @llvm.smin.i32(i32 %122, i32 %126)
  %128 = tail call i32 @llvm.smax.i32(i32 %122, i32 %126)
  %129 = mul nsw i32 %128, 30
  %130 = add nsw i32 %129, %127
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds float, float addrspace(1)* %0, i64 %131
  %133 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %134 = fdiv contract float 1.000000e+02, %133
  %135 = atomicrmw fadd float addrspace(1)* %132, float %134 syncscope("agent-one-as") monotonic, align 4
  %136 = load i32, i32 addrspace(1)* %125, align 4, !tbaa !4
  %137 = add nsw i32 %5, 10
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %138
  %140 = load i32, i32 addrspace(1)* %139, align 4, !tbaa !4
  %141 = tail call i32 @llvm.smin.i32(i32 %136, i32 %140)
  %142 = tail call i32 @llvm.smax.i32(i32 %136, i32 %140)
  %143 = mul nsw i32 %142, 30
  %144 = add nsw i32 %143, %141
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds float, float addrspace(1)* %0, i64 %145
  %147 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %148 = fdiv contract float 1.000000e+02, %147
  %149 = atomicrmw fadd float addrspace(1)* %146, float %148 syncscope("agent-one-as") monotonic, align 4
  %150 = load i32, i32 addrspace(1)* %139, align 4, !tbaa !4
  %151 = add nsw i32 %5, 11
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %152
  %154 = load i32, i32 addrspace(1)* %153, align 4, !tbaa !4
  %155 = tail call i32 @llvm.smin.i32(i32 %150, i32 %154)
  %156 = tail call i32 @llvm.smax.i32(i32 %150, i32 %154)
  %157 = mul nsw i32 %156, 30
  %158 = add nsw i32 %157, %155
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds float, float addrspace(1)* %0, i64 %159
  %161 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %162 = fdiv contract float 1.000000e+02, %161
  %163 = atomicrmw fadd float addrspace(1)* %160, float %162 syncscope("agent-one-as") monotonic, align 4
  %164 = load i32, i32 addrspace(1)* %153, align 4, !tbaa !4
  %165 = add nsw i32 %5, 12
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %166
  %168 = load i32, i32 addrspace(1)* %167, align 4, !tbaa !4
  %169 = tail call i32 @llvm.smin.i32(i32 %164, i32 %168)
  %170 = tail call i32 @llvm.smax.i32(i32 %164, i32 %168)
  %171 = mul nsw i32 %170, 30
  %172 = add nsw i32 %171, %169
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds float, float addrspace(1)* %0, i64 %173
  %175 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %176 = fdiv contract float 1.000000e+02, %175
  %177 = atomicrmw fadd float addrspace(1)* %174, float %176 syncscope("agent-one-as") monotonic, align 4
  %178 = load i32, i32 addrspace(1)* %167, align 4, !tbaa !4
  %179 = add nsw i32 %5, 13
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %180
  %182 = load i32, i32 addrspace(1)* %181, align 4, !tbaa !4
  %183 = tail call i32 @llvm.smin.i32(i32 %178, i32 %182)
  %184 = tail call i32 @llvm.smax.i32(i32 %178, i32 %182)
  %185 = mul nsw i32 %184, 30
  %186 = add nsw i32 %185, %183
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds float, float addrspace(1)* %0, i64 %187
  %189 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %190 = fdiv contract float 1.000000e+02, %189
  %191 = atomicrmw fadd float addrspace(1)* %188, float %190 syncscope("agent-one-as") monotonic, align 4
  %192 = load i32, i32 addrspace(1)* %181, align 4, !tbaa !4
  %193 = add nsw i32 %5, 14
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %194
  %196 = load i32, i32 addrspace(1)* %195, align 4, !tbaa !4
  %197 = tail call i32 @llvm.smin.i32(i32 %192, i32 %196)
  %198 = tail call i32 @llvm.smax.i32(i32 %192, i32 %196)
  %199 = mul nsw i32 %198, 30
  %200 = add nsw i32 %199, %197
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds float, float addrspace(1)* %0, i64 %201
  %203 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %204 = fdiv contract float 1.000000e+02, %203
  %205 = atomicrmw fadd float addrspace(1)* %202, float %204 syncscope("agent-one-as") monotonic, align 4
  %206 = load i32, i32 addrspace(1)* %195, align 4, !tbaa !4
  %207 = add nsw i32 %5, 15
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %208
  %210 = load i32, i32 addrspace(1)* %209, align 4, !tbaa !4
  %211 = tail call i32 @llvm.smin.i32(i32 %206, i32 %210)
  %212 = tail call i32 @llvm.smax.i32(i32 %206, i32 %210)
  %213 = mul nsw i32 %212, 30
  %214 = add nsw i32 %213, %211
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds float, float addrspace(1)* %0, i64 %215
  %217 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %218 = fdiv contract float 1.000000e+02, %217
  %219 = atomicrmw fadd float addrspace(1)* %216, float %218 syncscope("agent-one-as") monotonic, align 4
  %220 = load i32, i32 addrspace(1)* %209, align 4, !tbaa !4
  %221 = add nsw i32 %5, 16
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %222
  %224 = load i32, i32 addrspace(1)* %223, align 4, !tbaa !4
  %225 = tail call i32 @llvm.smin.i32(i32 %220, i32 %224)
  %226 = tail call i32 @llvm.smax.i32(i32 %220, i32 %224)
  %227 = mul nsw i32 %226, 30
  %228 = add nsw i32 %227, %225
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds float, float addrspace(1)* %0, i64 %229
  %231 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %232 = fdiv contract float 1.000000e+02, %231
  %233 = atomicrmw fadd float addrspace(1)* %230, float %232 syncscope("agent-one-as") monotonic, align 4
  %234 = load i32, i32 addrspace(1)* %223, align 4, !tbaa !4
  %235 = add nsw i32 %5, 17
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %236
  %238 = load i32, i32 addrspace(1)* %237, align 4, !tbaa !4
  %239 = tail call i32 @llvm.smin.i32(i32 %234, i32 %238)
  %240 = tail call i32 @llvm.smax.i32(i32 %234, i32 %238)
  %241 = mul nsw i32 %240, 30
  %242 = add nsw i32 %241, %239
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds float, float addrspace(1)* %0, i64 %243
  %245 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %246 = fdiv contract float 1.000000e+02, %245
  %247 = atomicrmw fadd float addrspace(1)* %244, float %246 syncscope("agent-one-as") monotonic, align 4
  %248 = load i32, i32 addrspace(1)* %237, align 4, !tbaa !4
  %249 = add nsw i32 %5, 18
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %250
  %252 = load i32, i32 addrspace(1)* %251, align 4, !tbaa !4
  %253 = tail call i32 @llvm.smin.i32(i32 %248, i32 %252)
  %254 = tail call i32 @llvm.smax.i32(i32 %248, i32 %252)
  %255 = mul nsw i32 %254, 30
  %256 = add nsw i32 %255, %253
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds float, float addrspace(1)* %0, i64 %257
  %259 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %260 = fdiv contract float 1.000000e+02, %259
  %261 = atomicrmw fadd float addrspace(1)* %258, float %260 syncscope("agent-one-as") monotonic, align 4
  %262 = load i32, i32 addrspace(1)* %251, align 4, !tbaa !4
  %263 = add nsw i32 %5, 19
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %264
  %266 = load i32, i32 addrspace(1)* %265, align 4, !tbaa !4
  %267 = tail call i32 @llvm.smin.i32(i32 %262, i32 %266)
  %268 = tail call i32 @llvm.smax.i32(i32 %262, i32 %266)
  %269 = mul nsw i32 %268, 30
  %270 = add nsw i32 %269, %267
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds float, float addrspace(1)* %0, i64 %271
  %273 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %274 = fdiv contract float 1.000000e+02, %273
  %275 = atomicrmw fadd float addrspace(1)* %272, float %274 syncscope("agent-one-as") monotonic, align 4
  %276 = load i32, i32 addrspace(1)* %265, align 4, !tbaa !4
  %277 = add nsw i32 %5, 20
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %278
  %280 = load i32, i32 addrspace(1)* %279, align 4, !tbaa !4
  %281 = tail call i32 @llvm.smin.i32(i32 %276, i32 %280)
  %282 = tail call i32 @llvm.smax.i32(i32 %276, i32 %280)
  %283 = mul nsw i32 %282, 30
  %284 = add nsw i32 %283, %281
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds float, float addrspace(1)* %0, i64 %285
  %287 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %288 = fdiv contract float 1.000000e+02, %287
  %289 = atomicrmw fadd float addrspace(1)* %286, float %288 syncscope("agent-one-as") monotonic, align 4
  %290 = load i32, i32 addrspace(1)* %279, align 4, !tbaa !4
  %291 = add nsw i32 %5, 21
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %292
  %294 = load i32, i32 addrspace(1)* %293, align 4, !tbaa !4
  %295 = tail call i32 @llvm.smin.i32(i32 %290, i32 %294)
  %296 = tail call i32 @llvm.smax.i32(i32 %290, i32 %294)
  %297 = mul nsw i32 %296, 30
  %298 = add nsw i32 %297, %295
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds float, float addrspace(1)* %0, i64 %299
  %301 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %302 = fdiv contract float 1.000000e+02, %301
  %303 = atomicrmw fadd float addrspace(1)* %300, float %302 syncscope("agent-one-as") monotonic, align 4
  %304 = load i32, i32 addrspace(1)* %293, align 4, !tbaa !4
  %305 = add nsw i32 %5, 22
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %306
  %308 = load i32, i32 addrspace(1)* %307, align 4, !tbaa !4
  %309 = tail call i32 @llvm.smin.i32(i32 %304, i32 %308)
  %310 = tail call i32 @llvm.smax.i32(i32 %304, i32 %308)
  %311 = mul nsw i32 %310, 30
  %312 = add nsw i32 %311, %309
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds float, float addrspace(1)* %0, i64 %313
  %315 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %316 = fdiv contract float 1.000000e+02, %315
  %317 = atomicrmw fadd float addrspace(1)* %314, float %316 syncscope("agent-one-as") monotonic, align 4
  %318 = load i32, i32 addrspace(1)* %307, align 4, !tbaa !4
  %319 = add nsw i32 %5, 23
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %320
  %322 = load i32, i32 addrspace(1)* %321, align 4, !tbaa !4
  %323 = tail call i32 @llvm.smin.i32(i32 %318, i32 %322)
  %324 = tail call i32 @llvm.smax.i32(i32 %318, i32 %322)
  %325 = mul nsw i32 %324, 30
  %326 = add nsw i32 %325, %323
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds float, float addrspace(1)* %0, i64 %327
  %329 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %330 = fdiv contract float 1.000000e+02, %329
  %331 = atomicrmw fadd float addrspace(1)* %328, float %330 syncscope("agent-one-as") monotonic, align 4
  %332 = load i32, i32 addrspace(1)* %321, align 4, !tbaa !4
  %333 = add nsw i32 %5, 24
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %334
  %336 = load i32, i32 addrspace(1)* %335, align 4, !tbaa !4
  %337 = tail call i32 @llvm.smin.i32(i32 %332, i32 %336)
  %338 = tail call i32 @llvm.smax.i32(i32 %332, i32 %336)
  %339 = mul nsw i32 %338, 30
  %340 = add nsw i32 %339, %337
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds float, float addrspace(1)* %0, i64 %341
  %343 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %344 = fdiv contract float 1.000000e+02, %343
  %345 = atomicrmw fadd float addrspace(1)* %342, float %344 syncscope("agent-one-as") monotonic, align 4
  %346 = load i32, i32 addrspace(1)* %335, align 4, !tbaa !4
  %347 = add nsw i32 %5, 25
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %348
  %350 = load i32, i32 addrspace(1)* %349, align 4, !tbaa !4
  %351 = tail call i32 @llvm.smin.i32(i32 %346, i32 %350)
  %352 = tail call i32 @llvm.smax.i32(i32 %346, i32 %350)
  %353 = mul nsw i32 %352, 30
  %354 = add nsw i32 %353, %351
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds float, float addrspace(1)* %0, i64 %355
  %357 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %358 = fdiv contract float 1.000000e+02, %357
  %359 = atomicrmw fadd float addrspace(1)* %356, float %358 syncscope("agent-one-as") monotonic, align 4
  %360 = load i32, i32 addrspace(1)* %349, align 4, !tbaa !4
  %361 = add nsw i32 %5, 26
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %362
  %364 = load i32, i32 addrspace(1)* %363, align 4, !tbaa !4
  %365 = tail call i32 @llvm.smin.i32(i32 %360, i32 %364)
  %366 = tail call i32 @llvm.smax.i32(i32 %360, i32 %364)
  %367 = mul nsw i32 %366, 30
  %368 = add nsw i32 %367, %365
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds float, float addrspace(1)* %0, i64 %369
  %371 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %372 = fdiv contract float 1.000000e+02, %371
  %373 = atomicrmw fadd float addrspace(1)* %370, float %372 syncscope("agent-one-as") monotonic, align 4
  %374 = load i32, i32 addrspace(1)* %363, align 4, !tbaa !4
  %375 = add nsw i32 %5, 27
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %376
  %378 = load i32, i32 addrspace(1)* %377, align 4, !tbaa !4
  %379 = tail call i32 @llvm.smin.i32(i32 %374, i32 %378)
  %380 = tail call i32 @llvm.smax.i32(i32 %374, i32 %378)
  %381 = mul nsw i32 %380, 30
  %382 = add nsw i32 %381, %379
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds float, float addrspace(1)* %0, i64 %383
  %385 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %386 = fdiv contract float 1.000000e+02, %385
  %387 = atomicrmw fadd float addrspace(1)* %384, float %386 syncscope("agent-one-as") monotonic, align 4
  %388 = load i32, i32 addrspace(1)* %377, align 4, !tbaa !4
  %389 = add nsw i32 %5, 28
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %390
  %392 = load i32, i32 addrspace(1)* %391, align 4, !tbaa !4
  %393 = tail call i32 @llvm.smin.i32(i32 %388, i32 %392)
  %394 = tail call i32 @llvm.smax.i32(i32 %388, i32 %392)
  %395 = mul nsw i32 %394, 30
  %396 = add nsw i32 %395, %393
  %397 = sext i32 %396 to i64
  %398 = getelementptr inbounds float, float addrspace(1)* %0, i64 %397
  %399 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %400 = fdiv contract float 1.000000e+02, %399
  %401 = atomicrmw fadd float addrspace(1)* %398, float %400 syncscope("agent-one-as") monotonic, align 4
  %402 = load i32, i32 addrspace(1)* %391, align 4, !tbaa !4
  %403 = add nsw i32 %5, 29
  %404 = sext i32 %403 to i64
  %405 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %404
  %406 = load i32, i32 addrspace(1)* %405, align 4, !tbaa !4
  %407 = tail call i32 @llvm.smin.i32(i32 %402, i32 %406)
  %408 = tail call i32 @llvm.smax.i32(i32 %402, i32 %406)
  %409 = mul nsw i32 %408, 30
  %410 = add nsw i32 %409, %407
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds float, float addrspace(1)* %0, i64 %411
  %413 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %414 = fdiv contract float 1.000000e+02, %413
  %415 = atomicrmw fadd float addrspace(1)* %412, float %414 syncscope("agent-one-as") monotonic, align 4
  %416 = load i32, i32 addrspace(1)* %405, align 4, !tbaa !4
  %417 = load i32, i32 addrspace(1)* %9, align 4, !tbaa !4
  %418 = tail call i32 @llvm.smin.i32(i32 %416, i32 %417)
  %419 = tail call i32 @llvm.smax.i32(i32 %416, i32 %417)
  %420 = mul nsw i32 %419, 30
  %421 = add nsw i32 %420, %418
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds float, float addrspace(1)* %0, i64 %422
  %424 = load float, float addrspace(1)* %7, align 4, !tbaa !8
  %425 = fdiv contract float 1.000000e+02, %424
  %426 = atomicrmw fadd float addrspace(1)* %423, float %425 syncscope("agent-one-as") monotonic, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #2

attributes #0 = { mustprogress nofree norecurse nounwind "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{!5, !5, i64 0}
!5 = !{!"int", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !9, i64 0}
!9 = !{!"float", !6, i64 0}
