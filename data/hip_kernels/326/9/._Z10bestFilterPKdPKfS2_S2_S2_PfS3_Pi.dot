digraph "CFG for '_Z10bestFilterPKdPKfS2_S2_S2_PfS3_Pi' function" {
	label="CFG for '_Z10bestFilterPKdPKfS2_S2_S2_PfS3_Pi' function";

	Node0x4ecfee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = load double, double addrspace(1)* %0, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %12 = fptosi double %11 to i32\l  %13 = getelementptr inbounds double, double addrspace(1)* %0, i64 1\l  %14 = load double, double addrspace(1)* %13, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %15 = fptosi double %14 to i32\l  %16 = getelementptr inbounds double, double addrspace(1)* %0, i64 2\l  %17 = load double, double addrspace(1)* %16, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %18 = fptrunc double %17 to float\l  %19 = getelementptr inbounds double, double addrspace(1)* %0, i64 8\l  %20 = load double, double addrspace(1)* %19, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %21 = fptrunc double %20 to float\l  %22 = shl nsw i32 %10, 10\l  %23 = or i32 %22, %9\l  %24 = add nsw i32 %12, -1\l  %25 = icmp slt i32 %23, %24\l  %26 = icmp sgt i32 %23, 0\l  %27 = and i1 %26, %25\l  br i1 %27, label %28, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4ecfee0:s0 -> Node0x4ed2f10;
	Node0x4ecfee0:s1 -> Node0x4ed2fa0;
	Node0x4ed2f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%28:\l28:                                               \l  %29 = icmp sgt i32 %15, 0\l  br i1 %29, label %30, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4ed2f10:s0 -> Node0x4ed3170;
	Node0x4ed2f10:s1 -> Node0x4ed31c0;
	Node0x4ed3170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%30:\l30:                                               \l  %31 = add nuw nsw i32 %23, 1\l  %32 = add nsw i32 %23, -1\l  br label %33\l}"];
	Node0x4ed3170 -> Node0x4ed2770;
	Node0x4ed2770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ 0, %30 ], [ %75, %33 ]\l  %35 = phi i32 [ 0, %30 ], [ %74, %33 ]\l  %36 = phi float [ 0.000000e+00, %30 ], [ %73, %33 ]\l  %37 = phi float [ undef, %30 ], [ %72, %33 ]\l  %38 = mul nsw i32 %34, %12\l  %39 = add nsw i32 %38, %23\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %43 = zext i32 %34 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %2, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %46 = getelementptr inbounds float, float addrspace(1)* %3, i64 %43\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %48 = fmul contract float %45, %47\l  %49 = fadd contract float %42, %48\l  %50 = fmul contract float %49, %49\l  %51 = fadd contract float %47, 1.000000e+00\l  %52 = fdiv contract float %50, %51\l  %53 = fmul contract float %45, %48\l  %54 = fsub contract float %52, %53\l  %55 = add nsw i32 %31, %38\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %59 = add nsw i32 %32, %38\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %63 = fsub contract float %58, %62\l  %64 = fmul contract float %63, %63\l  %65 = getelementptr inbounds float, float addrspace(1)* %4, i64 %43\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %67 = fadd contract float %66, %21\l  %68 = fdiv contract float %64, %67\l  %69 = fadd contract float %54, %68\l  %70 = fcmp contract ogt float %69, %36\l  %71 = fsub contract float %49, %48\l  %72 = select i1 %70, float %71, float %37\l  %73 = select i1 %70, float %69, float %36\l  %74 = select i1 %70, i32 %34, i32 %35\l  %75 = add nuw nsw i32 %34, 1\l  %76 = icmp eq i32 %75, %15\l  br i1 %76, label %77, label %33, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4ed2770:s0 -> Node0x4ed31c0;
	Node0x4ed2770:s1 -> Node0x4ed2770;
	Node0x4ed31c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%77:\l77:                                               \l  %78 = phi float [ undef, %28 ], [ %72, %33 ]\l  %79 = phi float [ 0.000000e+00, %28 ], [ %73, %33 ]\l  %80 = phi i32 [ 0, %28 ], [ %74, %33 ]\l  %81 = fmul contract float %18, %18\l  %82 = fcmp contract ogt float %79, %81\l  br i1 %82, label %83, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4ed31c0:s0 -> Node0x4ed6e10;
	Node0x4ed31c0:s1 -> Node0x4ed2fa0;
	Node0x4ed6e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%83:\l83:                                               \l  %84 = sext i32 %23 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %6, i64 %84\l  store float %79, float addrspace(1)* %85, align 4, !tbaa !10\l  %86 = getelementptr inbounds float, float addrspace(1)* %5, i64 %84\l  store float %78, float addrspace(1)* %86, align 4, !tbaa !10\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %84\l  store i32 %80, i32 addrspace(1)* %87, align 4, !tbaa !14\l  br label %88\l}"];
	Node0x4ed6e10 -> Node0x4ed2fa0;
	Node0x4ed2fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%88:\l88:                                               \l  ret void\l}"];
}
