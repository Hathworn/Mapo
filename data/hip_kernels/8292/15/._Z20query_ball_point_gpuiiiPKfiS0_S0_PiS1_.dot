digraph "CFG for '_Z20query_ball_point_gpuiiiPKfiS0_S0_PiS1_' function" {
	label="CFG for '_Z20query_ball_point_gpuiiiPKfiS0_S0_PiS1_' function";

	Node0x5f8e720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, 3\l  %12 = mul i32 %11, %1\l  %13 = sext i32 %12 to i64\l  %14 = getelementptr inbounds float, float addrspace(1)* %5, i64 %13\l  %15 = mul i32 %10, %2\l  %16 = mul i32 %15, 3\l  %17 = sext i32 %16 to i64\l  %18 = getelementptr inbounds float, float addrspace(1)* %6, i64 %17\l  %19 = mul i32 %15, %4\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %20\l  %22 = sext i32 %15 to i64\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %25 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %26 = getelementptr i8, i8 addrspace(4)* %25, i64 4\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 4, !range !5, !invariant.load !6\l  %29 = zext i16 %28 to i32\l  %30 = icmp slt i32 %24, %2\l  br i1 %30, label %31, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5f8e720:s0 -> Node0x5f917e0;
	Node0x5f8e720:s1 -> Node0x5f91870;
	Node0x5f917e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%31:\l31:                                               \l  %32 = icmp slt i32 %1, 1\l  %33 = icmp eq i32 %4, 0\l  %34 = select i1 %32, i1 true, i1 %33\l  %35 = icmp slt i32 %4, 1\l  %36 = add i32 %4, -1\l  %37 = and i32 %4, 7\l  %38 = icmp ult i32 %36, 7\l  %39 = and i32 %4, -8\l  %40 = icmp eq i32 %37, 0\l  br label %41\l}"];
	Node0x5f917e0 -> Node0x5f920f0;
	Node0x5f920f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%41:\l41:                                               \l  %42 = phi i32 [ %24, %31 ], [ %172, %168 ]\l  br i1 %34, label %168, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5f920f0:s0 -> Node0x5f921e0;
	Node0x5f920f0:s1 -> Node0x5f92320;
	Node0x5f92320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%43:\l43:                                               \l  %44 = mul nsw i32 %42, 3\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %18, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %48 = add nuw nsw i32 %44, 1\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %18, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %52 = add nuw nsw i32 %44, 2\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %18, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %56 = load float, float addrspace(1)* %3, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %57 = mul nsw i32 %42, %4\l  br label %59\l}"];
	Node0x5f92320 -> Node0x5f93a50;
	Node0x5f91870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%58:\l58:                                               \l  ret void\l}"];
	Node0x5f93a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%59:\l59:                                               \l  %60 = phi i32 [ 0, %43 ], [ %163, %162 ]\l  %61 = phi i32 [ 0, %43 ], [ %164, %162 ]\l  %62 = mul nuw nsw i32 %61, 3\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %14, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %66 = add nuw nsw i32 %62, 1\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %14, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %70 = add nuw nsw i32 %62, 2\l  %71 = zext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %14, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %74 = fsub contract float %47, %65\l  %75 = fmul contract float %74, %74\l  %76 = fsub contract float %51, %69\l  %77 = fmul contract float %76, %76\l  %78 = fadd contract float %75, %77\l  %79 = fsub contract float %55, %73\l  %80 = fmul contract float %79, %79\l  %81 = fadd contract float %78, %80\l  %82 = fcmp olt float %81, 0x39F0000000000000\l  %83 = select i1 %82, float 0x41F0000000000000, float 1.000000e+00\l  %84 = fmul float %81, %83\l  %85 = tail call float @llvm.sqrt.f32(float %84)\l  %86 = bitcast float %85 to i32\l  %87 = add nsw i32 %86, -1\l  %88 = bitcast i32 %87 to float\l  %89 = add nsw i32 %86, 1\l  %90 = bitcast i32 %89 to float\l  %91 = tail call i1 @llvm.amdgcn.class.f32(float %84, i32 608)\l  %92 = select i1 %82, float 0x3EF0000000000000, float 1.000000e+00\l  %93 = fneg float %90\l  %94 = tail call float @llvm.fma.f32(float %93, float %85, float %84)\l  %95 = fcmp ogt float %94, 0.000000e+00\l  %96 = fneg float %88\l  %97 = tail call float @llvm.fma.f32(float %96, float %85, float %84)\l  %98 = fcmp ole float %97, 0.000000e+00\l  %99 = select i1 %98, float %88, float %85\l  %100 = select i1 %95, float %90, float %99\l  %101 = fmul float %92, %100\l  %102 = select i1 %91, float %84, float %101\l  %103 = tail call float @llvm.maxnum.f32(float %102, float 0x3BC79CA100000000)\l  %104 = fcmp contract olt float %103, %56\l  br i1 %104, label %105, label %162\l|{<s0>T|<s1>F}}"];
	Node0x5f93a50:s0 -> Node0x5f96b60;
	Node0x5f93a50:s1 -> Node0x5f93ba0;
	Node0x5f96b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%105:\l105:                                              \l  %106 = icmp ne i32 %60, 0\l  %107 = select i1 %106, i1 true, i1 %35\l  br i1 %107, label %157, label %108\l|{<s0>T|<s1>F}}"];
	Node0x5f96b60:s0 -> Node0x5f96de0;
	Node0x5f96b60:s1 -> Node0x5f96e30;
	Node0x5f96e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%108:\l108:                                              \l  br i1 %38, label %146, label %109\l|{<s0>T|<s1>F}}"];
	Node0x5f96e30:s0 -> Node0x5f96f70;
	Node0x5f96e30:s1 -> Node0x5f96fc0;
	Node0x5f96fc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%109:\l109:                                              \l  %110 = phi i32 [ %143, %109 ], [ 0, %108 ]\l  %111 = phi i32 [ %144, %109 ], [ 0, %108 ]\l  %112 = add nsw i32 %110, %57\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %113\l  store i32 %61, i32 addrspace(1)* %114, align 4, !tbaa !11\l  %115 = or i32 %110, 1\l  %116 = add nsw i32 %115, %57\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %117\l  store i32 %61, i32 addrspace(1)* %118, align 4, !tbaa !11\l  %119 = or i32 %110, 2\l  %120 = add nsw i32 %119, %57\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %121\l  store i32 %61, i32 addrspace(1)* %122, align 4, !tbaa !11\l  %123 = or i32 %110, 3\l  %124 = add nsw i32 %123, %57\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %125\l  store i32 %61, i32 addrspace(1)* %126, align 4, !tbaa !11\l  %127 = or i32 %110, 4\l  %128 = add nsw i32 %127, %57\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %129\l  store i32 %61, i32 addrspace(1)* %130, align 4, !tbaa !11\l  %131 = or i32 %110, 5\l  %132 = add nsw i32 %131, %57\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %133\l  store i32 %61, i32 addrspace(1)* %134, align 4, !tbaa !11\l  %135 = or i32 %110, 6\l  %136 = add nsw i32 %135, %57\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %137\l  store i32 %61, i32 addrspace(1)* %138, align 4, !tbaa !11\l  %139 = or i32 %110, 7\l  %140 = add nsw i32 %139, %57\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %141\l  store i32 %61, i32 addrspace(1)* %142, align 4, !tbaa !11\l  %143 = add nuw nsw i32 %110, 8\l  %144 = add i32 %111, 8\l  %145 = icmp eq i32 %144, %39\l  br i1 %145, label %146, label %109, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5f96fc0:s0 -> Node0x5f96f70;
	Node0x5f96fc0:s1 -> Node0x5f96fc0;
	Node0x5f96f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%146:\l146:                                              \l  %147 = phi i32 [ 0, %108 ], [ %143, %109 ]\l  br i1 %40, label %157, label %148\l|{<s0>T|<s1>F}}"];
	Node0x5f96f70:s0 -> Node0x5f96de0;
	Node0x5f96f70:s1 -> Node0x5f99860;
	Node0x5f99860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%148:\l148:                                              \l  %149 = phi i32 [ %154, %148 ], [ %147, %146 ]\l  %150 = phi i32 [ %155, %148 ], [ 0, %146 ]\l  %151 = add nsw i32 %149, %57\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %152\l  store i32 %61, i32 addrspace(1)* %153, align 4, !tbaa !11\l  %154 = add nuw nsw i32 %149, 1\l  %155 = add i32 %150, 1\l  %156 = icmp eq i32 %155, %37\l  br i1 %156, label %157, label %148, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5f99860:s0 -> Node0x5f96de0;
	Node0x5f99860:s1 -> Node0x5f99860;
	Node0x5f96de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%157:\l157:                                              \l  %158 = add nsw i32 %60, %57\l  %159 = sext i32 %158 to i64\l  %160 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %159\l  store i32 %61, i32 addrspace(1)* %160, align 4, !tbaa !11\l  %161 = add nsw i32 %60, 1\l  br label %162\l}"];
	Node0x5f96de0 -> Node0x5f93ba0;
	Node0x5f93ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%162:\l162:                                              \l  %163 = phi i32 [ %161, %157 ], [ %60, %59 ]\l  %164 = add nuw nsw i32 %61, 1\l  %165 = icmp sge i32 %164, %1\l  %166 = icmp eq i32 %163, %4\l  %167 = select i1 %165, i1 true, i1 %166\l  br i1 %167, label %168, label %59, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5f93ba0:s0 -> Node0x5f921e0;
	Node0x5f93ba0:s1 -> Node0x5f93a50;
	Node0x5f921e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%168:\l168:                                              \l  %169 = phi i32 [ 0, %41 ], [ %163, %162 ]\l  %170 = zext i32 %42 to i64\l  %171 = getelementptr inbounds i32, i32 addrspace(1)* %23, i64 %170\l  store i32 %169, i32 addrspace(1)* %171, align 4, !tbaa !11\l  %172 = add nuw nsw i32 %42, %29\l  %173 = icmp slt i32 %172, %2\l  br i1 %173, label %41, label %58, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x5f921e0:s0 -> Node0x5f920f0;
	Node0x5f921e0:s1 -> Node0x5f91870;
}
