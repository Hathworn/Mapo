digraph "CFG for '_Z15group_point_gpuiiiiiPKfPKiPf' function" {
	label="CFG for '_Z15group_point_gpuiiiiiPKfPKiPf' function";

	Node0x49e05c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = mul i32 %9, %2\l  %11 = mul i32 %10, %1\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds float, float addrspace(1)* %5, i64 %12\l  %14 = mul nsw i32 %4, %3\l  %15 = mul nsw i32 %14, %9\l  %16 = sext i32 %15 to i64\l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %16\l  %18 = mul i32 %10, %14\l  %19 = sext i32 %18 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %7, i64 %19\l  %21 = icmp sgt i32 %3, 0\l  br i1 %21, label %22, label %33\l|{<s0>T|<s1>F}}"];
	Node0x49e05c0:s0 -> Node0x49e20c0;
	Node0x49e05c0:s1 -> Node0x49e2150;
	Node0x49e20c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%22:\l22:                                               \l  %23 = icmp sgt i32 %4, 0\l  %24 = icmp sgt i32 %2, 0\l  %25 = and i32 %2, 7\l  %26 = icmp ult i32 %2, 8\l  %27 = and i32 %2, -8\l  %28 = icmp eq i32 %25, 0\l  br label %29\l}"];
	Node0x49e20c0 -> Node0x49e2680;
	Node0x49e2680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%29:\l29:                                               \l  %30 = phi i32 [ 0, %22 ], [ %35, %34 ]\l  br i1 %23, label %31, label %34\l|{<s0>T|<s1>F}}"];
	Node0x49e2680:s0 -> Node0x49e28b0;
	Node0x49e2680:s1 -> Node0x49e2770;
	Node0x49e28b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %30, %4\l  br label %37\l}"];
	Node0x49e28b0 -> Node0x49e1760;
	Node0x49e2150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%33:\l33:                                               \l  ret void\l}"];
	Node0x49e2770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%34:\l34:                                               \l  %35 = add nuw nsw i32 %30, 1\l  %36 = icmp eq i32 %35, %3\l  br i1 %36, label %33, label %29, !llvm.loop !5\l|{<s0>T|<s1>F}}"];
	Node0x49e2770:s0 -> Node0x49e2150;
	Node0x49e2770:s1 -> Node0x49e2680;
	Node0x49e1760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%37:\l37:                                               \l  %38 = phi i32 [ 0, %31 ], [ %62, %61 ]\l  %39 = add nsw i32 %38, %32\l  br i1 %24, label %40, label %61\l|{<s0>T|<s1>F}}"];
	Node0x49e1760:s0 -> Node0x49e30e0;
	Node0x49e1760:s1 -> Node0x49e2f10;
	Node0x49e30e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%40:\l40:                                               \l  %41 = sext i32 %39 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !7, !amdgpu.noclobber\l... !11\l  %44 = mul nsw i32 %43, %2\l  %45 = mul i32 %39, %2\l  br i1 %26, label %46, label %64\l|{<s0>T|<s1>F}}"];
	Node0x49e30e0:s0 -> Node0x49e37b0;
	Node0x49e30e0:s1 -> Node0x49e3840;
	Node0x49e37b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%46:\l46:                                               \l  %47 = phi i32 [ 0, %40 ], [ %130, %64 ]\l  br i1 %28, label %61, label %48\l|{<s0>T|<s1>F}}"];
	Node0x49e37b0:s0 -> Node0x49e2f10;
	Node0x49e37b0:s1 -> Node0x49e3a30;
	Node0x49e3a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i32 [ %58, %48 ], [ %47, %46 ]\l  %50 = phi i32 [ %59, %48 ], [ 0, %46 ]\l  %51 = add nsw i32 %49, %44\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %13, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !12\l  %55 = add nsw i32 %49, %45\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %20, i64 %56\l  store float %54, float addrspace(1)* %57, align 4, !tbaa !12\l  %58 = add nuw nsw i32 %49, 1\l  %59 = add i32 %50, 1\l  %60 = icmp eq i32 %59, %25\l  br i1 %60, label %61, label %48, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x49e3a30:s0 -> Node0x49e2f10;
	Node0x49e3a30:s1 -> Node0x49e3a30;
	Node0x49e2f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%61:\l61:                                               \l  %62 = add nuw nsw i32 %38, 1\l  %63 = icmp eq i32 %62, %4\l  br i1 %63, label %34, label %37, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x49e2f10:s0 -> Node0x49e2770;
	Node0x49e2f10:s1 -> Node0x49e1760;
	Node0x49e3840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%64:\l64:                                               \l  %65 = phi i32 [ %130, %64 ], [ 0, %40 ]\l  %66 = phi i32 [ %131, %64 ], [ 0, %40 ]\l  %67 = add nsw i32 %65, %44\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %13, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !12\l  %71 = add nsw i32 %65, %45\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %20, i64 %72\l  store float %70, float addrspace(1)* %73, align 4, !tbaa !12\l  %74 = or i32 %65, 1\l  %75 = add nsw i32 %74, %44\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %13, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !12\l  %79 = add nsw i32 %74, %45\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %20, i64 %80\l  store float %78, float addrspace(1)* %81, align 4, !tbaa !12\l  %82 = or i32 %65, 2\l  %83 = add nsw i32 %82, %44\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %13, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !12\l  %87 = add nsw i32 %82, %45\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %20, i64 %88\l  store float %86, float addrspace(1)* %89, align 4, !tbaa !12\l  %90 = or i32 %65, 3\l  %91 = add nsw i32 %90, %44\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %13, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !12\l  %95 = add nsw i32 %90, %45\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %20, i64 %96\l  store float %94, float addrspace(1)* %97, align 4, !tbaa !12\l  %98 = or i32 %65, 4\l  %99 = add nsw i32 %98, %44\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %13, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !12\l  %103 = add nsw i32 %98, %45\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %20, i64 %104\l  store float %102, float addrspace(1)* %105, align 4, !tbaa !12\l  %106 = or i32 %65, 5\l  %107 = add nsw i32 %106, %44\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %13, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !12\l  %111 = add nsw i32 %106, %45\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %20, i64 %112\l  store float %110, float addrspace(1)* %113, align 4, !tbaa !12\l  %114 = or i32 %65, 6\l  %115 = add nsw i32 %114, %44\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %13, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !12\l  %119 = add nsw i32 %114, %45\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %20, i64 %120\l  store float %118, float addrspace(1)* %121, align 4, !tbaa !12\l  %122 = or i32 %65, 7\l  %123 = add nsw i32 %122, %44\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %13, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !12\l  %127 = add nsw i32 %122, %45\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %20, i64 %128\l  store float %126, float addrspace(1)* %129, align 4, !tbaa !12\l  %130 = add nuw nsw i32 %65, 8\l  %131 = add i32 %66, 8\l  %132 = icmp eq i32 %131, %27\l  br i1 %132, label %46, label %64, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x49e3840:s0 -> Node0x49e37b0;
	Node0x49e3840:s1 -> Node0x49e3840;
}
