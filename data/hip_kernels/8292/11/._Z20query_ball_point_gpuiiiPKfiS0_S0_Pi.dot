digraph "CFG for '_Z20query_ball_point_gpuiiiPKfiS0_S0_Pi' function" {
	label="CFG for '_Z20query_ball_point_gpuiiiPKfiS0_S0_Pi' function";

	Node0x5ec70e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, 3\l  %11 = mul i32 %10, %1\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds float, float addrspace(1)* %5, i64 %12\l  %14 = mul i32 %10, %2\l  %15 = sext i32 %14 to i64\l  %16 = getelementptr inbounds float, float addrspace(1)* %6, i64 %15\l  %17 = mul i32 %9, %2\l  %18 = mul i32 %17, %4\l  %19 = sext i32 %18 to i64\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %22 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %23 = getelementptr i8, i8 addrspace(4)* %22, i64 4\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !5, !invariant.load !6\l  %26 = zext i16 %25 to i32\l  %27 = icmp slt i32 %21, %2\l  br i1 %27, label %28, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5ec70e0:s0 -> Node0x5ec9560;
	Node0x5ec70e0:s1 -> Node0x5ec95f0;
	Node0x5ec9560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%28:\l28:                                               \l  %29 = icmp slt i32 %1, 1\l  %30 = icmp eq i32 %4, 0\l  %31 = select i1 %29, i1 true, i1 %30\l  %32 = icmp slt i32 %4, 1\l  %33 = add i32 %4, -1\l  %34 = and i32 %4, 7\l  %35 = icmp ult i32 %33, 7\l  %36 = and i32 %4, -8\l  %37 = icmp eq i32 %34, 0\l  br label %38\l}"];
	Node0x5ec9560 -> Node0x5ec9e70;
	Node0x5ec9e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%38:\l38:                                               \l  %39 = phi i32 [ %21, %28 ], [ %166, %165 ]\l  br i1 %31, label %165, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5ec9e70:s0 -> Node0x5ec9f60;
	Node0x5ec9e70:s1 -> Node0x5eca0a0;
	Node0x5eca0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%40:\l40:                                               \l  %41 = mul nsw i32 %39, 3\l  %42 = zext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %16, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %45 = add nuw nsw i32 %41, 1\l  %46 = zext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %16, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %49 = add nuw nsw i32 %41, 2\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %16, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %53 = load float, float addrspace(1)* %3, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %54 = mul nsw i32 %39, %4\l  br label %56\l}"];
	Node0x5eca0a0 -> Node0x5ecb7d0;
	Node0x5ec95f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%55:\l55:                                               \l  ret void\l}"];
	Node0x5ecb7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%56:\l56:                                               \l  %57 = phi i32 [ 0, %40 ], [ %160, %159 ]\l  %58 = phi i32 [ 0, %40 ], [ %161, %159 ]\l  %59 = mul nuw nsw i32 %58, 3\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %13, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %63 = add nuw nsw i32 %59, 1\l  %64 = zext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %13, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %67 = add nuw nsw i32 %59, 2\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %13, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %71 = fsub contract float %44, %62\l  %72 = fmul contract float %71, %71\l  %73 = fsub contract float %48, %66\l  %74 = fmul contract float %73, %73\l  %75 = fadd contract float %72, %74\l  %76 = fsub contract float %52, %70\l  %77 = fmul contract float %76, %76\l  %78 = fadd contract float %75, %77\l  %79 = fcmp olt float %78, 0x39F0000000000000\l  %80 = select i1 %79, float 0x41F0000000000000, float 1.000000e+00\l  %81 = fmul float %78, %80\l  %82 = tail call float @llvm.sqrt.f32(float %81)\l  %83 = bitcast float %82 to i32\l  %84 = add nsw i32 %83, -1\l  %85 = bitcast i32 %84 to float\l  %86 = add nsw i32 %83, 1\l  %87 = bitcast i32 %86 to float\l  %88 = tail call i1 @llvm.amdgcn.class.f32(float %81, i32 608)\l  %89 = select i1 %79, float 0x3EF0000000000000, float 1.000000e+00\l  %90 = fneg float %87\l  %91 = tail call float @llvm.fma.f32(float %90, float %82, float %81)\l  %92 = fcmp ogt float %91, 0.000000e+00\l  %93 = fneg float %85\l  %94 = tail call float @llvm.fma.f32(float %93, float %82, float %81)\l  %95 = fcmp ole float %94, 0.000000e+00\l  %96 = select i1 %95, float %85, float %82\l  %97 = select i1 %92, float %87, float %96\l  %98 = fmul float %89, %97\l  %99 = select i1 %88, float %81, float %98\l  %100 = tail call float @llvm.maxnum.f32(float %99, float 0x3BC79CA100000000)\l  %101 = fcmp contract olt float %100, %53\l  br i1 %101, label %102, label %159\l|{<s0>T|<s1>F}}"];
	Node0x5ecb7d0:s0 -> Node0x5ece8e0;
	Node0x5ecb7d0:s1 -> Node0x5ecb920;
	Node0x5ece8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%102:\l102:                                              \l  %103 = icmp ne i32 %57, 0\l  %104 = select i1 %103, i1 true, i1 %32\l  br i1 %104, label %154, label %105\l|{<s0>T|<s1>F}}"];
	Node0x5ece8e0:s0 -> Node0x5eceb60;
	Node0x5ece8e0:s1 -> Node0x5ecebb0;
	Node0x5ecebb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%105:\l105:                                              \l  br i1 %35, label %143, label %106\l|{<s0>T|<s1>F}}"];
	Node0x5ecebb0:s0 -> Node0x5ececf0;
	Node0x5ecebb0:s1 -> Node0x5eced40;
	Node0x5eced40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%106:\l106:                                              \l  %107 = phi i32 [ %140, %106 ], [ 0, %105 ]\l  %108 = phi i32 [ %141, %106 ], [ 0, %105 ]\l  %109 = add nsw i32 %107, %54\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %20, i64 %110\l  store i32 %58, i32 addrspace(1)* %111, align 4, !tbaa !11\l  %112 = or i32 %107, 1\l  %113 = add nsw i32 %112, %54\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %20, i64 %114\l  store i32 %58, i32 addrspace(1)* %115, align 4, !tbaa !11\l  %116 = or i32 %107, 2\l  %117 = add nsw i32 %116, %54\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds i32, i32 addrspace(1)* %20, i64 %118\l  store i32 %58, i32 addrspace(1)* %119, align 4, !tbaa !11\l  %120 = or i32 %107, 3\l  %121 = add nsw i32 %120, %54\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds i32, i32 addrspace(1)* %20, i64 %122\l  store i32 %58, i32 addrspace(1)* %123, align 4, !tbaa !11\l  %124 = or i32 %107, 4\l  %125 = add nsw i32 %124, %54\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds i32, i32 addrspace(1)* %20, i64 %126\l  store i32 %58, i32 addrspace(1)* %127, align 4, !tbaa !11\l  %128 = or i32 %107, 5\l  %129 = add nsw i32 %128, %54\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds i32, i32 addrspace(1)* %20, i64 %130\l  store i32 %58, i32 addrspace(1)* %131, align 4, !tbaa !11\l  %132 = or i32 %107, 6\l  %133 = add nsw i32 %132, %54\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds i32, i32 addrspace(1)* %20, i64 %134\l  store i32 %58, i32 addrspace(1)* %135, align 4, !tbaa !11\l  %136 = or i32 %107, 7\l  %137 = add nsw i32 %136, %54\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds i32, i32 addrspace(1)* %20, i64 %138\l  store i32 %58, i32 addrspace(1)* %139, align 4, !tbaa !11\l  %140 = add nuw nsw i32 %107, 8\l  %141 = add i32 %108, 8\l  %142 = icmp eq i32 %141, %36\l  br i1 %142, label %143, label %106, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5eced40:s0 -> Node0x5ececf0;
	Node0x5eced40:s1 -> Node0x5eced40;
	Node0x5ececf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%143:\l143:                                              \l  %144 = phi i32 [ 0, %105 ], [ %140, %106 ]\l  br i1 %37, label %154, label %145\l|{<s0>T|<s1>F}}"];
	Node0x5ececf0:s0 -> Node0x5eceb60;
	Node0x5ececf0:s1 -> Node0x5ed15f0;
	Node0x5ed15f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%145:\l145:                                              \l  %146 = phi i32 [ %151, %145 ], [ %144, %143 ]\l  %147 = phi i32 [ %152, %145 ], [ 0, %143 ]\l  %148 = add nsw i32 %146, %54\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds i32, i32 addrspace(1)* %20, i64 %149\l  store i32 %58, i32 addrspace(1)* %150, align 4, !tbaa !11\l  %151 = add nuw nsw i32 %146, 1\l  %152 = add i32 %147, 1\l  %153 = icmp eq i32 %152, %34\l  br i1 %153, label %154, label %145, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5ed15f0:s0 -> Node0x5eceb60;
	Node0x5ed15f0:s1 -> Node0x5ed15f0;
	Node0x5eceb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%154:\l154:                                              \l  %155 = add nsw i32 %57, %54\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds i32, i32 addrspace(1)* %20, i64 %156\l  store i32 %58, i32 addrspace(1)* %157, align 4, !tbaa !11\l  %158 = add nsw i32 %57, 1\l  br label %159\l}"];
	Node0x5eceb60 -> Node0x5ecb920;
	Node0x5ecb920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%159:\l159:                                              \l  %160 = phi i32 [ %158, %154 ], [ %57, %56 ]\l  %161 = add nuw nsw i32 %58, 1\l  %162 = icmp sge i32 %161, %1\l  %163 = icmp eq i32 %160, %4\l  %164 = select i1 %162, i1 true, i1 %163\l  br i1 %164, label %165, label %56, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5ecb920:s0 -> Node0x5ec9f60;
	Node0x5ecb920:s1 -> Node0x5ecb7d0;
	Node0x5ec9f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%165:\l165:                                              \l  %166 = add nuw nsw i32 %39, %26\l  %167 = icmp slt i32 %166, %2\l  br i1 %167, label %38, label %55, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x5ec9f60:s0 -> Node0x5ec9e70;
	Node0x5ec9f60:s1 -> Node0x5ec95f0;
}
