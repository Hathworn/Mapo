digraph "CFG for '_Z12output_indexPiS_S_S_iii' function" {
	label="CFG for '_Z12output_indexPiS_S_S_iii' function";

	Node0x582edb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = shl i32 %8, 2\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = icmp slt i32 %17, %4\l  br i1 %18, label %19, label %162\l|{<s0>T|<s1>F}}"];
	Node0x582edb0:s0 -> Node0x5830dc0;
	Node0x582edb0:s1 -> Node0x5830e50;
	Node0x5830dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%19:\l19:                                               \l  %20 = shl i32 %6, 2\l  %21 = add nsw i32 %17, 512\l  %22 = add nsw i32 %17, 1024\l  %23 = add nsw i32 %17, 1536\l  %24 = add nuw nsw i32 %16, 512\l  %25 = or i32 %16, 1024\l  %26 = add nuw nsw i32 %16, 1536\l  %27 = sext i32 %17 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %30 = sext i32 %21 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %33 = sext i32 %22 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %36 = sext i32 %23 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %39 = icmp ult i32 %16, 32\l  br i1 %39, label %40, label %109\l|{<s0>T|<s1>F}}"];
	Node0x5830dc0:s0 -> Node0x5832a00;
	Node0x5830dc0:s1 -> Node0x5832a90;
	Node0x5832a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%40:\l40:                                               \l  %41 = icmp ult i32 %16, 4\l  br i1 %41, label %42, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5832a00:s0 -> Node0x5832c90;
	Node0x5832a00:s1 -> Node0x5832ce0;
	Node0x5832c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%42:\l42:                                               \l  %43 = shl nuw nsw i32 %16, 2\l  %44 = mul nsw i32 %43, %5\l  %45 = add i32 %44, %8\l  %46 = zext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %49 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ12output_indexPiS_S_S_iiiE4temp, i32 0, i32 %43\l  store i32 %48, i32 addrspace(3)* %49, align 16, !tbaa !7\l  %50 = add nuw nsw i32 %43, 1\l  %51 = mul nsw i32 %50, %5\l  %52 = add i32 %51, %8\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %56 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ12output_indexPiS_S_S_iiiE4temp, i32 0, i32 %50\l  store i32 %55, i32 addrspace(3)* %56, align 4, !tbaa !7\l  %57 = add nuw nsw i32 %43, 2\l  %58 = mul nsw i32 %57, %5\l  %59 = add i32 %58, %8\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %60\l  %62 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %63 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ12output_indexPiS_S_S_iiiE4temp, i32 0, i32 %57\l  store i32 %62, i32 addrspace(3)* %63, align 8, !tbaa !7\l  %64 = add nuw nsw i32 %43, 3\l  %65 = mul nsw i32 %64, %5\l  %66 = add i32 %65, %8\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %70 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ12output_indexPiS_S_S_iiiE4temp, i32 0, i32 %64\l  store i32 %69, i32 addrspace(3)* %70, align 4, !tbaa !7\l  br label %71\l}"];
	Node0x5832c90 -> Node0x5832ce0;
	Node0x5832ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%71:\l71:                                               \l  %72 = icmp ult i32 %16, 16\l  br i1 %72, label %73, label %109\l|{<s0>T|<s1>F}}"];
	Node0x5832ce0:s0 -> Node0x5834290;
	Node0x5832ce0:s1 -> Node0x5832a90;
	Node0x5834290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%73:\l73:                                               \l  %74 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ12output_indexPiS_S_S_iiiE4temp, i32 0, i32 %16\l  %75 = load i32, i32 addrspace(3)* %74, align 4, !tbaa !7\l  %76 = icmp eq i32 %16, 0\l  br i1 %76, label %82, label %77\l|{<s0>T|<s1>F}}"];
	Node0x5834290:s0 -> Node0x58345e0;
	Node0x5834290:s1 -> Node0x5834820;
	Node0x5834820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%77:\l77:                                               \l  %78 = add nsw i32 %16, -1\l  %79 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ12output_indexPiS_S_S_iiiE4temp, i32 0, i32 %78\l  %80 = load i32, i32 addrspace(3)* %79, align 4, !tbaa !7\l  %81 = add nsw i32 %80, %75\l  store i32 %81, i32 addrspace(3)* %74, align 4, !tbaa !7\l  br label %82\l}"];
	Node0x5834820 -> Node0x58345e0;
	Node0x58345e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%82:\l82:                                               \l  %83 = phi i32 [ %81, %77 ], [ %75, %73 ]\l  %84 = icmp ugt i32 %16, 1\l  br i1 %84, label %85, label %90\l|{<s0>T|<s1>F}}"];
	Node0x58345e0:s0 -> Node0x5834e20;
	Node0x58345e0:s1 -> Node0x5834e70;
	Node0x5834e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%85:\l85:                                               \l  %86 = add nsw i32 %16, -2\l  %87 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ12output_indexPiS_S_S_iiiE4temp, i32 0, i32 %86\l  %88 = load i32, i32 addrspace(3)* %87, align 4, !tbaa !7\l  %89 = add nsw i32 %88, %83\l  store i32 %89, i32 addrspace(3)* %74, align 4, !tbaa !7\l  br label %90\l}"];
	Node0x5834e20 -> Node0x5834e70;
	Node0x5834e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%90:\l90:                                               \l  %91 = phi i32 [ %89, %85 ], [ %83, %82 ]\l  %92 = icmp ugt i32 %16, 3\l  br i1 %92, label %93, label %98\l|{<s0>T|<s1>F}}"];
	Node0x5834e70:s0 -> Node0x5835430;
	Node0x5834e70:s1 -> Node0x5835480;
	Node0x5835430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%93:\l93:                                               \l  %94 = add nsw i32 %16, -4\l  %95 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ12output_indexPiS_S_S_iiiE4temp, i32 0, i32 %94\l  %96 = load i32, i32 addrspace(3)* %95, align 4, !tbaa !7\l  %97 = add nsw i32 %96, %91\l  store i32 %97, i32 addrspace(3)* %74, align 4, !tbaa !7\l  br label %98\l}"];
	Node0x5835430 -> Node0x5835480;
	Node0x5835480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%98:\l98:                                               \l  %99 = phi i32 [ %97, %93 ], [ %91, %90 ]\l  %100 = icmp ugt i32 %16, 7\l  br i1 %100, label %101, label %106\l|{<s0>T|<s1>F}}"];
	Node0x5835480:s0 -> Node0x5835a40;
	Node0x5835480:s1 -> Node0x5835a90;
	Node0x5835a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%101:\l101:                                              \l  %102 = add nsw i32 %16, -8\l  %103 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ12output_indexPiS_S_S_iiiE4temp, i32 0, i32 %102\l  %104 = load i32, i32 addrspace(3)* %103, align 4, !tbaa !7\l  %105 = add nsw i32 %104, %99\l  store i32 %105, i32 addrspace(3)* %74, align 4, !tbaa !7\l  br label %106\l}"];
	Node0x5835a40 -> Node0x5835a90;
	Node0x5835a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%106:\l106:                                              \l  %107 = phi i32 [ %105, %101 ], [ %99, %98 ]\l  %108 = sub nsw i32 %107, %75\l  store i32 %108, i32 addrspace(3)* %74, align 4, !tbaa !7\l  br label %109\l}"];
	Node0x5835a90 -> Node0x5832a90;
	Node0x5832a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%109:\l109:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %110 = ashr i32 %29, %20\l  %111 = and i32 %110, 15\l  %112 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ12output_indexPiS_S_S_iiiE4temp, i32 0, i32 %111\l  %113 = load i32, i32 addrspace(3)* %112, align 4, !tbaa !7\l  %114 = ashr i32 %32, %20\l  %115 = and i32 %114, 15\l  %116 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ12output_indexPiS_S_S_iiiE4temp, i32 0, i32 %115\l  %117 = load i32, i32 addrspace(3)* %116, align 4, !tbaa !7\l  %118 = ashr i32 %35, %20\l  %119 = and i32 %118, 15\l  %120 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ12output_indexPiS_S_S_iiiE4temp, i32 0, i32 %119\l  %121 = load i32, i32 addrspace(3)* %120, align 4, !tbaa !7\l  %122 = ashr i32 %38, %20\l  %123 = and i32 %122, 15\l  %124 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ12output_indexPiS_S_S_iiiE4temp, i32 0, i32 %123\l  %125 = load i32, i32 addrspace(3)* %124, align 4, !tbaa !7\l  %126 = mul nsw i32 %111, %5\l  %127 = add i32 %126, %8\l  %128 = zext i32 %127 to i64\l  %129 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %128\l  %130 = load i32, i32 addrspace(1)* %129, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %131 = mul nsw i32 %115, %5\l  %132 = add i32 %131, %8\l  %133 = zext i32 %132 to i64\l  %134 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %133\l  %135 = load i32, i32 addrspace(1)* %134, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %136 = mul nsw i32 %119, %5\l  %137 = add i32 %136, %8\l  %138 = zext i32 %137 to i64\l  %139 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %138\l  %140 = load i32, i32 addrspace(1)* %139, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %141 = mul nsw i32 %123, %5\l  %142 = add i32 %141, %8\l  %143 = zext i32 %142 to i64\l  %144 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %143\l  %145 = load i32, i32 addrspace(1)* %144, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %146 = sub i32 %16, %113\l  %147 = add i32 %146, %130\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %148\l  store i32 %29, i32 addrspace(1)* %149, align 4, !tbaa !7\l  %150 = sub i32 %24, %117\l  %151 = add i32 %150, %135\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %152\l  store i32 %32, i32 addrspace(1)* %153, align 4, !tbaa !7\l  %154 = sub i32 %25, %121\l  %155 = add i32 %154, %140\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %156\l  store i32 %35, i32 addrspace(1)* %157, align 4, !tbaa !7\l  %158 = sub i32 %26, %125\l  %159 = add i32 %158, %145\l  %160 = sext i32 %159 to i64\l  %161 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %160\l  store i32 %38, i32 addrspace(1)* %161, align 4, !tbaa !7\l  br label %162\l}"];
	Node0x5832a90 -> Node0x5830e50;
	Node0x5830e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%162:\l162:                                              \l  ret void\l}"];
}
