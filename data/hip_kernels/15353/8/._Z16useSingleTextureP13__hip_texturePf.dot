digraph "CFG for '_Z16useSingleTextureP13__hip_texturePf' function" {
	label="CFG for '_Z16useSingleTextureP13__hip_texturePf' function";

	Node0x4d2e3b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = mul i32 %3, %8\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = add i32 %9, %10\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = getelementptr i8, i8 addrspace(4)* %4, i64 6\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 2, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %12, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %19 = add i32 %17, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %21 = getelementptr i8, i8 addrspace(4)* %4, i64 8\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 4, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !6\l  %27 = add i32 %25, %26\l  %28 = uitofp i32 %11 to double\l  %29 = fadd contract double %28, 5.000000e-01\l  %30 = fptrunc double %29 to float\l  %31 = uitofp i32 %19 to double\l  %32 = fadd contract double %31, 5.000000e-01\l  %33 = fptrunc double %32 to float\l  %34 = uitofp i32 %27 to double\l  %35 = fadd contract double %34, 5.000000e-01\l  %36 = fptrunc double %35 to float\l  %37 = bitcast %struct.__hip_texture addrspace(1)* %0 to i32 addrspace(1)*\l  %38 = addrspacecast i32 addrspace(1)* %37 to i32 addrspace(4)*\l  %39 = getelementptr inbounds i32, i32 addrspace(4)* %38, i64 12\l  %40 = getelementptr inbounds i32, i32 addrspace(4)* %38, i64 10\l  %41 = load i32, i32 addrspace(4)* %40, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %42 = uitofp i32 %41 to float\l  %43 = getelementptr inbounds i32, i32 addrspace(4)* %38, i64 2\l  %44 = load i32, i32 addrspace(4)* %43, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %45 = lshr i32 %44, 14\l  %46 = and i32 %45, 16383\l  %47 = add nuw nsw i32 %46, 1\l  %48 = uitofp i32 %47 to float\l  %49 = getelementptr inbounds i32, i32 addrspace(4)* %38, i64 4\l  %50 = load i32, i32 addrspace(4)* %49, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %51 = and i32 %50, 8191\l  %52 = add nuw nsw i32 %51, 1\l  %53 = uitofp i32 %52 to float\l  %54 = load i32, i32 addrspace(4)* %39, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %55 = and i32 %54, 32768\l  %56 = icmp eq i32 %55, 0\l  %57 = select i1 %56, float %42, float 1.000000e+00\l  %58 = select i1 %56, float %48, float 1.000000e+00\l  %59 = select i1 %56, float %53, float 1.000000e+00\l  %60 = getelementptr inbounds i32, i32 addrspace(4)* %38, i64 14\l  %61 = load i32, i32 addrspace(4)* %60, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %62 = and i32 %61, 1048576\l  %63 = icmp eq i32 %62, 0\l  %64 = bitcast i32 addrspace(4)* %39 to \<4 x i32\> addrspace(4)*\l  %65 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %64, align 16, !tbaa !11,\l... !amdgpu.noclobber !5\l  %66 = bitcast %struct.__hip_texture addrspace(1)* %0 to \<8 x i32\>\l... addrspace(1)*\l  %67 = addrspacecast \<8 x i32\> addrspace(1)* %66 to \<8 x i32\> addrspace(4)*\l  %68 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %67, align 32, !tbaa !11,\l... !amdgpu.noclobber !5\l  %69 = tail call float @llvm.amdgcn.rcp.f32(float %59)\l  %70 = fmul float %59, %36\l  %71 = tail call float @llvm.floor.f32(float %70)\l  %72 = fmul float %69, %71\l  %73 = select i1 %63, float %72, float %36\l  %74 = tail call float @llvm.amdgcn.rcp.f32(float %58)\l  %75 = fmul float %58, %33\l  %76 = tail call float @llvm.floor.f32(float %75)\l  %77 = fmul float %74, %76\l  %78 = select i1 %63, float %77, float %33\l  %79 = tail call float @llvm.amdgcn.rcp.f32(float %57)\l  %80 = fmul float %57, %30\l  %81 = tail call float @llvm.floor.f32(float %80)\l  %82 = fmul float %79, %81\l  %83 = select i1 %63, float %82, float %30\l  %84 = tail call \<3 x float\> @llvm.amdgcn.image.sample.lz.3d.v3f32.f32(i32 7,\l... float %83, float %78, float %73, \<8 x i32\> %68, \<4 x i32\> %65, i1 false, i32\l... 0, i32 0)\l  %85 = extractelement \<3 x float\> %84, i64 0\l  %86 = tail call float @llvm.fabs.f32(float %85)\l  %87 = tail call float @llvm.amdgcn.frexp.mant.f32(float %86)\l  %88 = fcmp olt float %87, 0x3FE5555560000000\l  %89 = zext i1 %88 to i32\l  %90 = tail call float @llvm.amdgcn.ldexp.f32(float %87, i32 %89)\l  %91 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %86)\l  %92 = sub nsw i32 %91, %89\l  %93 = fadd float %90, -1.000000e+00\l  %94 = fadd float %90, 1.000000e+00\l  %95 = fadd float %94, -1.000000e+00\l  %96 = fsub float %90, %95\l  %97 = tail call float @llvm.amdgcn.rcp.f32(float %94)\l  %98 = fmul float %93, %97\l  %99 = fmul float %94, %98\l  %100 = fneg float %99\l  %101 = tail call float @llvm.fma.f32(float %98, float %94, float %100)\l  %102 = tail call float @llvm.fma.f32(float %98, float %96, float %101)\l  %103 = fadd float %99, %102\l  %104 = fsub float %103, %99\l  %105 = fsub float %102, %104\l  %106 = fsub float %93, %103\l  %107 = fsub float %93, %106\l  %108 = fsub float %107, %103\l  %109 = fsub float %108, %105\l  %110 = fadd float %106, %109\l  %111 = fmul float %97, %110\l  %112 = fadd float %98, %111\l  %113 = fsub float %112, %98\l  %114 = fsub float %111, %113\l  %115 = fmul float %112, %112\l  %116 = fneg float %115\l  %117 = tail call float @llvm.fma.f32(float %112, float %112, float %116)\l  %118 = fmul float %114, 2.000000e+00\l  %119 = tail call float @llvm.fma.f32(float %112, float %118, float %117)\l  %120 = fadd float %115, %119\l  %121 = fsub float %120, %115\l  %122 = fsub float %119, %121\l  %123 = tail call float @llvm.fmuladd.f32(float %120, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %124 = tail call float @llvm.fmuladd.f32(float %120, float %123, float\l... 0x3FD999BDE0000000)\l  %125 = sitofp i32 %92 to float\l  %126 = fmul float %125, 0x3FE62E4300000000\l  %127 = fneg float %126\l  %128 = tail call float @llvm.fma.f32(float %125, float 0x3FE62E4300000000,\l... float %127)\l  %129 = tail call float @llvm.fma.f32(float %125, float 0xBE205C6100000000,\l... float %128)\l  %130 = fadd float %126, %129\l  %131 = fsub float %130, %126\l  %132 = fsub float %129, %131\l  %133 = tail call float @llvm.amdgcn.ldexp.f32(float %112, i32 1)\l  %134 = fmul float %112, %120\l  %135 = fneg float %134\l  %136 = tail call float @llvm.fma.f32(float %120, float %112, float %135)\l  %137 = tail call float @llvm.fma.f32(float %120, float %114, float %136)\l  %138 = tail call float @llvm.fma.f32(float %122, float %112, float %137)\l  %139 = fadd float %134, %138\l  %140 = fsub float %139, %134\l  %141 = fsub float %138, %140\l  %142 = fmul float %120, %124\l  %143 = fneg float %142\l  %144 = tail call float @llvm.fma.f32(float %120, float %124, float %143)\l  %145 = tail call float @llvm.fma.f32(float %122, float %124, float %144)\l  %146 = fadd float %142, %145\l  %147 = fsub float %146, %142\l  %148 = fsub float %145, %147\l  %149 = fadd float %146, 0x3FE5555540000000\l  %150 = fadd float %149, 0xBFE5555540000000\l  %151 = fsub float %146, %150\l  %152 = fadd float %148, 0x3E2E720200000000\l  %153 = fadd float %152, %151\l  %154 = fadd float %149, %153\l  %155 = fsub float %154, %149\l  %156 = fsub float %153, %155\l  %157 = fmul float %139, %154\l  %158 = fneg float %157\l  %159 = tail call float @llvm.fma.f32(float %139, float %154, float %158)\l  %160 = tail call float @llvm.fma.f32(float %139, float %156, float %159)\l  %161 = tail call float @llvm.fma.f32(float %141, float %154, float %160)\l  %162 = tail call float @llvm.amdgcn.ldexp.f32(float %114, i32 1)\l  %163 = fadd float %157, %161\l  %164 = fsub float %163, %157\l  %165 = fsub float %161, %164\l  %166 = fadd float %133, %163\l  %167 = fsub float %166, %133\l  %168 = fsub float %163, %167\l  %169 = fadd float %162, %165\l  %170 = fadd float %169, %168\l  %171 = fadd float %166, %170\l  %172 = fsub float %171, %166\l  %173 = fsub float %170, %172\l  %174 = fadd float %130, %171\l  %175 = fsub float %174, %130\l  %176 = fsub float %174, %175\l  %177 = fsub float %130, %176\l  %178 = fsub float %171, %175\l  %179 = fadd float %178, %177\l  %180 = fadd float %132, %173\l  %181 = fsub float %180, %132\l  %182 = fsub float %180, %181\l  %183 = fsub float %132, %182\l  %184 = fsub float %173, %181\l  %185 = fadd float %184, %183\l  %186 = fadd float %180, %179\l  %187 = fadd float %174, %186\l  %188 = fsub float %187, %174\l  %189 = fsub float %186, %188\l  %190 = fadd float %185, %189\l  %191 = fadd float %187, %190\l  %192 = fsub float %191, %187\l  %193 = fsub float %190, %192\l  %194 = fmul float %191, 2.000000e+00\l  %195 = fneg float %194\l  %196 = tail call float @llvm.fma.f32(float %191, float 2.000000e+00, float\l... %195)\l  %197 = tail call float @llvm.fma.f32(float %193, float 2.000000e+00, float\l... %196)\l  %198 = fadd float %194, %197\l  %199 = fsub float %198, %194\l  %200 = fsub float %197, %199\l  %201 = tail call float @llvm.fabs.f32(float %194) #4\l  %202 = fcmp oeq float %201, 0x7FF0000000000000\l  %203 = select i1 %202, float %194, float %198\l  %204 = tail call float @llvm.fabs.f32(float %203) #4\l  %205 = fcmp oeq float %204, 0x7FF0000000000000\l  %206 = select i1 %205, float 0.000000e+00, float %200\l  %207 = fcmp oeq float %203, 0x40562E4300000000\l  %208 = select i1 %207, float 0x3EE0000000000000, float 0.000000e+00\l  %209 = fsub float %203, %208\l  %210 = fadd float %208, %206\l  %211 = fmul float %209, 0x3FF7154760000000\l  %212 = tail call float @llvm.rint.f32(float %211)\l  %213 = fcmp ogt float %209, 0x40562E4300000000\l  %214 = fcmp olt float %209, 0xC059D1DA00000000\l  %215 = fneg float %211\l  %216 = tail call float @llvm.fma.f32(float %209, float 0x3FF7154760000000,\l... float %215)\l  %217 = tail call float @llvm.fma.f32(float %209, float 0x3E54AE0BE0000000,\l... float %216)\l  %218 = fsub float %211, %212\l  %219 = fadd float %217, %218\l  %220 = tail call float @llvm.exp2.f32(float %219)\l  %221 = fptosi float %212 to i32\l  %222 = tail call float @llvm.amdgcn.ldexp.f32(float %220, i32 %221)\l  %223 = select i1 %214, float 0.000000e+00, float %222\l  %224 = select i1 %213, float 0x7FF0000000000000, float %223\l  %225 = tail call float @llvm.fma.f32(float %224, float %210, float %224)\l  %226 = tail call float @llvm.fabs.f32(float %224) #4\l  %227 = fcmp oeq float %226, 0x7FF0000000000000\l  %228 = select i1 %227, float %224, float %225\l  %229 = tail call float @llvm.fabs.f32(float %228)\l  %230 = fcmp oeq float %86, 0x7FF0000000000000\l  %231 = fcmp oeq float %85, 0.000000e+00\l  %232 = select i1 %230, float 0x7FF0000000000000, float %229\l  %233 = select i1 %231, float 0.000000e+00, float %232\l  %234 = fcmp uno float %85, 0.000000e+00\l  %235 = select i1 %234, float 0x7FF8000000000000, float %233\l  %236 = fcmp oeq float %85, 1.000000e+00\l  %237 = select i1 %236, float 1.000000e+00, float %235\l  %238 = extractelement \<3 x float\> %84, i64 1\l  %239 = tail call float @llvm.fabs.f32(float %238)\l  %240 = tail call float @llvm.amdgcn.frexp.mant.f32(float %239)\l  %241 = fcmp olt float %240, 0x3FE5555560000000\l  %242 = zext i1 %241 to i32\l  %243 = tail call float @llvm.amdgcn.ldexp.f32(float %240, i32 %242)\l  %244 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %239)\l  %245 = sub nsw i32 %244, %242\l  %246 = fadd float %243, -1.000000e+00\l  %247 = fadd float %243, 1.000000e+00\l  %248 = fadd float %247, -1.000000e+00\l  %249 = fsub float %243, %248\l  %250 = tail call float @llvm.amdgcn.rcp.f32(float %247)\l  %251 = fmul float %246, %250\l  %252 = fmul float %247, %251\l  %253 = fneg float %252\l  %254 = tail call float @llvm.fma.f32(float %251, float %247, float %253)\l  %255 = tail call float @llvm.fma.f32(float %251, float %249, float %254)\l  %256 = fadd float %252, %255\l  %257 = fsub float %256, %252\l  %258 = fsub float %255, %257\l  %259 = fsub float %246, %256\l  %260 = fsub float %246, %259\l  %261 = fsub float %260, %256\l  %262 = fsub float %261, %258\l  %263 = fadd float %259, %262\l  %264 = fmul float %250, %263\l  %265 = fadd float %251, %264\l  %266 = fsub float %265, %251\l  %267 = fsub float %264, %266\l  %268 = fmul float %265, %265\l  %269 = fneg float %268\l  %270 = tail call float @llvm.fma.f32(float %265, float %265, float %269)\l  %271 = fmul float %267, 2.000000e+00\l  %272 = tail call float @llvm.fma.f32(float %265, float %271, float %270)\l  %273 = fadd float %268, %272\l  %274 = fsub float %273, %268\l  %275 = fsub float %272, %274\l  %276 = tail call float @llvm.fmuladd.f32(float %273, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %277 = tail call float @llvm.fmuladd.f32(float %273, float %276, float\l... 0x3FD999BDE0000000)\l  %278 = sitofp i32 %245 to float\l  %279 = fmul float %278, 0x3FE62E4300000000\l  %280 = fneg float %279\l  %281 = tail call float @llvm.fma.f32(float %278, float 0x3FE62E4300000000,\l... float %280)\l  %282 = tail call float @llvm.fma.f32(float %278, float 0xBE205C6100000000,\l... float %281)\l  %283 = fadd float %279, %282\l  %284 = fsub float %283, %279\l  %285 = fsub float %282, %284\l  %286 = tail call float @llvm.amdgcn.ldexp.f32(float %265, i32 1)\l  %287 = fmul float %265, %273\l  %288 = fneg float %287\l  %289 = tail call float @llvm.fma.f32(float %273, float %265, float %288)\l  %290 = tail call float @llvm.fma.f32(float %273, float %267, float %289)\l  %291 = tail call float @llvm.fma.f32(float %275, float %265, float %290)\l  %292 = fadd float %287, %291\l  %293 = fsub float %292, %287\l  %294 = fsub float %291, %293\l  %295 = fmul float %273, %277\l  %296 = fneg float %295\l  %297 = tail call float @llvm.fma.f32(float %273, float %277, float %296)\l  %298 = tail call float @llvm.fma.f32(float %275, float %277, float %297)\l  %299 = fadd float %295, %298\l  %300 = fsub float %299, %295\l  %301 = fsub float %298, %300\l  %302 = fadd float %299, 0x3FE5555540000000\l  %303 = fadd float %302, 0xBFE5555540000000\l  %304 = fsub float %299, %303\l  %305 = fadd float %301, 0x3E2E720200000000\l  %306 = fadd float %305, %304\l  %307 = fadd float %302, %306\l  %308 = fsub float %307, %302\l  %309 = fsub float %306, %308\l  %310 = fmul float %292, %307\l  %311 = fneg float %310\l  %312 = tail call float @llvm.fma.f32(float %292, float %307, float %311)\l  %313 = tail call float @llvm.fma.f32(float %292, float %309, float %312)\l  %314 = tail call float @llvm.fma.f32(float %294, float %307, float %313)\l  %315 = tail call float @llvm.amdgcn.ldexp.f32(float %267, i32 1)\l  %316 = fadd float %310, %314\l  %317 = fsub float %316, %310\l  %318 = fsub float %314, %317\l  %319 = fadd float %286, %316\l  %320 = fsub float %319, %286\l  %321 = fsub float %316, %320\l  %322 = fadd float %315, %318\l  %323 = fadd float %322, %321\l  %324 = fadd float %319, %323\l  %325 = fsub float %324, %319\l  %326 = fsub float %323, %325\l  %327 = fadd float %283, %324\l  %328 = fsub float %327, %283\l  %329 = fsub float %327, %328\l  %330 = fsub float %283, %329\l  %331 = fsub float %324, %328\l  %332 = fadd float %331, %330\l  %333 = fadd float %285, %326\l  %334 = fsub float %333, %285\l  %335 = fsub float %333, %334\l  %336 = fsub float %285, %335\l  %337 = fsub float %326, %334\l  %338 = fadd float %337, %336\l  %339 = fadd float %333, %332\l  %340 = fadd float %327, %339\l  %341 = fsub float %340, %327\l  %342 = fsub float %339, %341\l  %343 = fadd float %338, %342\l  %344 = fadd float %340, %343\l  %345 = fsub float %344, %340\l  %346 = fsub float %343, %345\l  %347 = fmul float %344, 2.000000e+00\l  %348 = fneg float %347\l  %349 = tail call float @llvm.fma.f32(float %344, float 2.000000e+00, float\l... %348)\l  %350 = tail call float @llvm.fma.f32(float %346, float 2.000000e+00, float\l... %349)\l  %351 = fadd float %347, %350\l  %352 = fsub float %351, %347\l  %353 = fsub float %350, %352\l  %354 = tail call float @llvm.fabs.f32(float %347) #4\l  %355 = fcmp oeq float %354, 0x7FF0000000000000\l  %356 = select i1 %355, float %347, float %351\l  %357 = tail call float @llvm.fabs.f32(float %356) #4\l  %358 = fcmp oeq float %357, 0x7FF0000000000000\l  %359 = select i1 %358, float 0.000000e+00, float %353\l  %360 = fcmp oeq float %356, 0x40562E4300000000\l  %361 = select i1 %360, float 0x3EE0000000000000, float 0.000000e+00\l  %362 = fsub float %356, %361\l  %363 = fadd float %361, %359\l  %364 = fmul float %362, 0x3FF7154760000000\l  %365 = tail call float @llvm.rint.f32(float %364)\l  %366 = fcmp ogt float %362, 0x40562E4300000000\l  %367 = fcmp olt float %362, 0xC059D1DA00000000\l  %368 = fneg float %364\l  %369 = tail call float @llvm.fma.f32(float %362, float 0x3FF7154760000000,\l... float %368)\l  %370 = tail call float @llvm.fma.f32(float %362, float 0x3E54AE0BE0000000,\l... float %369)\l  %371 = fsub float %364, %365\l  %372 = fadd float %370, %371\l  %373 = tail call float @llvm.exp2.f32(float %372)\l  %374 = fptosi float %365 to i32\l  %375 = tail call float @llvm.amdgcn.ldexp.f32(float %373, i32 %374)\l  %376 = select i1 %367, float 0.000000e+00, float %375\l  %377 = select i1 %366, float 0x7FF0000000000000, float %376\l  %378 = tail call float @llvm.fma.f32(float %377, float %363, float %377)\l  %379 = tail call float @llvm.fabs.f32(float %377) #4\l  %380 = fcmp oeq float %379, 0x7FF0000000000000\l  %381 = select i1 %380, float %377, float %378\l  %382 = tail call float @llvm.fabs.f32(float %381)\l  %383 = fcmp oeq float %239, 0x7FF0000000000000\l  %384 = fcmp oeq float %238, 0.000000e+00\l  %385 = select i1 %383, float 0x7FF0000000000000, float %382\l  %386 = select i1 %384, float 0.000000e+00, float %385\l  %387 = fcmp uno float %238, 0.000000e+00\l  %388 = select i1 %387, float 0x7FF8000000000000, float %386\l  %389 = fcmp oeq float %238, 1.000000e+00\l  %390 = select i1 %389, float 1.000000e+00, float %388\l  %391 = fadd contract float %237, %390\l  %392 = extractelement \<3 x float\> %84, i64 2\l  %393 = tail call float @llvm.fabs.f32(float %392)\l  %394 = tail call float @llvm.amdgcn.frexp.mant.f32(float %393)\l  %395 = fcmp olt float %394, 0x3FE5555560000000\l  %396 = zext i1 %395 to i32\l  %397 = tail call float @llvm.amdgcn.ldexp.f32(float %394, i32 %396)\l  %398 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %393)\l  %399 = sub nsw i32 %398, %396\l  %400 = fadd float %397, -1.000000e+00\l  %401 = fadd float %397, 1.000000e+00\l  %402 = fadd float %401, -1.000000e+00\l  %403 = fsub float %397, %402\l  %404 = tail call float @llvm.amdgcn.rcp.f32(float %401)\l  %405 = fmul float %400, %404\l  %406 = fmul float %401, %405\l  %407 = fneg float %406\l  %408 = tail call float @llvm.fma.f32(float %405, float %401, float %407)\l  %409 = tail call float @llvm.fma.f32(float %405, float %403, float %408)\l  %410 = fadd float %406, %409\l  %411 = fsub float %410, %406\l  %412 = fsub float %409, %411\l  %413 = fsub float %400, %410\l  %414 = fsub float %400, %413\l  %415 = fsub float %414, %410\l  %416 = fsub float %415, %412\l  %417 = fadd float %413, %416\l  %418 = fmul float %404, %417\l  %419 = fadd float %405, %418\l  %420 = fsub float %419, %405\l  %421 = fsub float %418, %420\l  %422 = fmul float %419, %419\l  %423 = fneg float %422\l  %424 = tail call float @llvm.fma.f32(float %419, float %419, float %423)\l  %425 = fmul float %421, 2.000000e+00\l  %426 = tail call float @llvm.fma.f32(float %419, float %425, float %424)\l  %427 = fadd float %422, %426\l  %428 = fsub float %427, %422\l  %429 = fsub float %426, %428\l  %430 = tail call float @llvm.fmuladd.f32(float %427, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %431 = tail call float @llvm.fmuladd.f32(float %427, float %430, float\l... 0x3FD999BDE0000000)\l  %432 = sitofp i32 %399 to float\l  %433 = fmul float %432, 0x3FE62E4300000000\l  %434 = fneg float %433\l  %435 = tail call float @llvm.fma.f32(float %432, float 0x3FE62E4300000000,\l... float %434)\l  %436 = tail call float @llvm.fma.f32(float %432, float 0xBE205C6100000000,\l... float %435)\l  %437 = fadd float %433, %436\l  %438 = fsub float %437, %433\l  %439 = fsub float %436, %438\l  %440 = tail call float @llvm.amdgcn.ldexp.f32(float %419, i32 1)\l  %441 = fmul float %419, %427\l  %442 = fneg float %441\l  %443 = tail call float @llvm.fma.f32(float %427, float %419, float %442)\l  %444 = tail call float @llvm.fma.f32(float %427, float %421, float %443)\l  %445 = tail call float @llvm.fma.f32(float %429, float %419, float %444)\l  %446 = fadd float %441, %445\l  %447 = fsub float %446, %441\l  %448 = fsub float %445, %447\l  %449 = fmul float %427, %431\l  %450 = fneg float %449\l  %451 = tail call float @llvm.fma.f32(float %427, float %431, float %450)\l  %452 = tail call float @llvm.fma.f32(float %429, float %431, float %451)\l  %453 = fadd float %449, %452\l  %454 = fsub float %453, %449\l  %455 = fsub float %452, %454\l  %456 = fadd float %453, 0x3FE5555540000000\l  %457 = fadd float %456, 0xBFE5555540000000\l  %458 = fsub float %453, %457\l  %459 = fadd float %455, 0x3E2E720200000000\l  %460 = fadd float %459, %458\l  %461 = fadd float %456, %460\l  %462 = fsub float %461, %456\l  %463 = fsub float %460, %462\l  %464 = fmul float %446, %461\l  %465 = fneg float %464\l  %466 = tail call float @llvm.fma.f32(float %446, float %461, float %465)\l  %467 = tail call float @llvm.fma.f32(float %446, float %463, float %466)\l  %468 = tail call float @llvm.fma.f32(float %448, float %461, float %467)\l  %469 = tail call float @llvm.amdgcn.ldexp.f32(float %421, i32 1)\l  %470 = fadd float %464, %468\l  %471 = fsub float %470, %464\l  %472 = fsub float %468, %471\l  %473 = fadd float %440, %470\l  %474 = fsub float %473, %440\l  %475 = fsub float %470, %474\l  %476 = fadd float %469, %472\l  %477 = fadd float %476, %475\l  %478 = fadd float %473, %477\l  %479 = fsub float %478, %473\l  %480 = fsub float %477, %479\l  %481 = fadd float %437, %478\l  %482 = fsub float %481, %437\l  %483 = fsub float %481, %482\l  %484 = fsub float %437, %483\l  %485 = fsub float %478, %482\l  %486 = fadd float %485, %484\l  %487 = fadd float %439, %480\l  %488 = fsub float %487, %439\l  %489 = fsub float %487, %488\l  %490 = fsub float %439, %489\l  %491 = fsub float %480, %488\l  %492 = fadd float %491, %490\l  %493 = fadd float %487, %486\l  %494 = fadd float %481, %493\l  %495 = fsub float %494, %481\l  %496 = fsub float %493, %495\l  %497 = fadd float %492, %496\l  %498 = fadd float %494, %497\l  %499 = fsub float %498, %494\l  %500 = fsub float %497, %499\l  %501 = fmul float %498, 2.000000e+00\l  %502 = fneg float %501\l  %503 = tail call float @llvm.fma.f32(float %498, float 2.000000e+00, float\l... %502)\l  %504 = tail call float @llvm.fma.f32(float %500, float 2.000000e+00, float\l... %503)\l  %505 = fadd float %501, %504\l  %506 = fsub float %505, %501\l  %507 = fsub float %504, %506\l  %508 = tail call float @llvm.fabs.f32(float %501) #4\l  %509 = fcmp oeq float %508, 0x7FF0000000000000\l  %510 = select i1 %509, float %501, float %505\l  %511 = tail call float @llvm.fabs.f32(float %510) #4\l  %512 = fcmp oeq float %511, 0x7FF0000000000000\l  %513 = select i1 %512, float 0.000000e+00, float %507\l  %514 = fcmp oeq float %510, 0x40562E4300000000\l  %515 = select i1 %514, float 0x3EE0000000000000, float 0.000000e+00\l  %516 = fsub float %510, %515\l  %517 = fadd float %515, %513\l  %518 = fmul float %516, 0x3FF7154760000000\l  %519 = tail call float @llvm.rint.f32(float %518)\l  %520 = fcmp ogt float %516, 0x40562E4300000000\l  %521 = fcmp olt float %516, 0xC059D1DA00000000\l  %522 = fneg float %518\l  %523 = tail call float @llvm.fma.f32(float %516, float 0x3FF7154760000000,\l... float %522)\l  %524 = tail call float @llvm.fma.f32(float %516, float 0x3E54AE0BE0000000,\l... float %523)\l  %525 = fsub float %518, %519\l  %526 = fadd float %524, %525\l  %527 = tail call float @llvm.exp2.f32(float %526)\l  %528 = fptosi float %519 to i32\l  %529 = tail call float @llvm.amdgcn.ldexp.f32(float %527, i32 %528)\l  %530 = select i1 %521, float 0.000000e+00, float %529\l  %531 = select i1 %520, float 0x7FF0000000000000, float %530\l  %532 = tail call float @llvm.fma.f32(float %531, float %517, float %531)\l  %533 = tail call float @llvm.fabs.f32(float %531) #4\l  %534 = fcmp oeq float %533, 0x7FF0000000000000\l  %535 = select i1 %534, float %531, float %532\l  %536 = tail call float @llvm.fabs.f32(float %535)\l  %537 = fcmp oeq float %393, 0x7FF0000000000000\l  %538 = fcmp oeq float %392, 0.000000e+00\l  %539 = select i1 %537, float 0x7FF0000000000000, float %536\l  %540 = select i1 %538, float 0.000000e+00, float %539\l  %541 = fcmp uno float %392, 0.000000e+00\l  %542 = select i1 %541, float 0x7FF8000000000000, float %540\l  %543 = fcmp oeq float %392, 1.000000e+00\l  %544 = select i1 %543, float 1.000000e+00, float %542\l  %545 = fadd contract float %544, %391\l  %546 = fcmp olt float %545, 0x39F0000000000000\l  %547 = select i1 %546, float 0x41F0000000000000, float 1.000000e+00\l  %548 = fmul float %545, %547\l  %549 = tail call float @llvm.sqrt.f32(float %548)\l  %550 = bitcast float %549 to i32\l  %551 = add nsw i32 %550, -1\l  %552 = bitcast i32 %551 to float\l  %553 = add nsw i32 %550, 1\l  %554 = bitcast i32 %553 to float\l  %555 = tail call i1 @llvm.amdgcn.class.f32(float %548, i32 608)\l  %556 = select i1 %546, float 0x3EF0000000000000, float 1.000000e+00\l  %557 = fneg float %554\l  %558 = tail call float @llvm.fma.f32(float %557, float %549, float %548)\l  %559 = fcmp ogt float %558, 0.000000e+00\l  %560 = fneg float %552\l  %561 = tail call float @llvm.fma.f32(float %560, float %549, float %548)\l  %562 = fcmp ole float %561, 0.000000e+00\l  %563 = select i1 %562, float %552, float %549\l  %564 = select i1 %559, float %554, float %563\l  %565 = fmul float %556, %564\l  %566 = select i1 %555, float %548, float %565\l  %567 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_size, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i64 0), align 4, !tbaa !12\l  %568 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_size, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i64 1), align 4, !tbaa !12\l  %569 = mul i32 %568, %27\l  %570 = add i32 %569, %19\l  %571 = mul i32 %570, %567\l  %572 = add i32 %571, %11\l  %573 = zext i32 %572 to i64\l  %574 = getelementptr inbounds float, float addrspace(1)* %1, i64 %573\l  store float %566, float addrspace(1)* %574, align 4, !tbaa !15\l  ret void\l}"];
}
