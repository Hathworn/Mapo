digraph "CFG for '_Z11writeKernelPfi' function" {
	label="CFG for '_Z11writeKernelPfi' function";

	Node0x4547900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = mul i32 %3, %8\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = add i32 %9, %10\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = getelementptr i8, i8 addrspace(4)* %4, i64 6\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 2, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %12, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %19 = add i32 %17, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %21 = getelementptr i8, i8 addrspace(4)* %4, i64 8\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 4, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !6\l  %27 = add i32 %25, %26\l  %28 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_size, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i64 0), align 4, !tbaa !7\l  %29 = icmp ult i32 %11, %28\l  %30 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_size, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i64 1), align 4\l  %31 = icmp ult i32 %19, %30\l  %32 = select i1 %29, i1 %31, i1 false\l  %33 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_size, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i64 2), align 4\l  %34 = icmp ult i32 %27, %33\l  %35 = select i1 %32, i1 %34, i1 false\l  %36 = icmp sgt i32 %1, 0\l  %37 = select i1 %35, i1 %36, i1 false\l  br i1 %37, label %38, label %106\l|{<s0>T|<s1>F}}"];
	Node0x4547900:s0 -> Node0x454a2c0;
	Node0x4547900:s1 -> Node0x454bfe0;
	Node0x454a2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%38:\l38:                                               \l  %39 = mul i32 %27, %30\l  %40 = add i32 %39, %19\l  %41 = mul i32 %40, %28\l  %42 = add i32 %41, %11\l  %43 = mul i32 %42, %1\l  %44 = and i32 %1, 7\l  %45 = icmp ult i32 %1, 8\l  br i1 %45, label %93, label %46\l|{<s0>T|<s1>F}}"];
	Node0x454a2c0:s0 -> Node0x454c570;
	Node0x454a2c0:s1 -> Node0x454c5c0;
	Node0x454c5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%46:\l46:                                               \l  %47 = and i32 %1, -8\l  br label %48\l}"];
	Node0x454c5c0 -> Node0x454c7c0;
	Node0x454c7c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%48:\l48:                                               \l  %49 = phi i32 [ 0, %46 ], [ %90, %48 ]\l  %50 = phi i32 [ 0, %46 ], [ %91, %48 ]\l  %51 = add i32 %49, %43\l  %52 = zext i32 %51 to i64\l  %53 = uitofp i32 %51 to float\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  store float %53, float addrspace(1)* %54, align 4, !tbaa !10\l  %55 = or i32 %49, 1\l  %56 = add i32 %55, %43\l  %57 = zext i32 %56 to i64\l  %58 = uitofp i32 %56 to float\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  store float %58, float addrspace(1)* %59, align 4, !tbaa !10\l  %60 = or i32 %49, 2\l  %61 = add i32 %60, %43\l  %62 = zext i32 %61 to i64\l  %63 = uitofp i32 %61 to float\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  store float %63, float addrspace(1)* %64, align 4, !tbaa !10\l  %65 = or i32 %49, 3\l  %66 = add i32 %65, %43\l  %67 = zext i32 %66 to i64\l  %68 = uitofp i32 %66 to float\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  store float %68, float addrspace(1)* %69, align 4, !tbaa !10\l  %70 = or i32 %49, 4\l  %71 = add i32 %70, %43\l  %72 = zext i32 %71 to i64\l  %73 = uitofp i32 %71 to float\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %72\l  store float %73, float addrspace(1)* %74, align 4, !tbaa !10\l  %75 = or i32 %49, 5\l  %76 = add i32 %75, %43\l  %77 = zext i32 %76 to i64\l  %78 = uitofp i32 %76 to float\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  store float %78, float addrspace(1)* %79, align 4, !tbaa !10\l  %80 = or i32 %49, 6\l  %81 = add i32 %80, %43\l  %82 = zext i32 %81 to i64\l  %83 = uitofp i32 %81 to float\l  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %82\l  store float %83, float addrspace(1)* %84, align 4, !tbaa !10\l  %85 = or i32 %49, 7\l  %86 = add i32 %85, %43\l  %87 = zext i32 %86 to i64\l  %88 = uitofp i32 %86 to float\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  store float %88, float addrspace(1)* %89, align 4, !tbaa !10\l  %90 = add nuw nsw i32 %49, 8\l  %91 = add i32 %50, 8\l  %92 = icmp eq i32 %91, %47\l  br i1 %92, label %93, label %48, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x454c7c0:s0 -> Node0x454c570;
	Node0x454c7c0:s1 -> Node0x454c7c0;
	Node0x454c570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%93:\l93:                                               \l  %94 = phi i32 [ 0, %38 ], [ %90, %48 ]\l  %95 = icmp eq i32 %44, 0\l  br i1 %95, label %106, label %96\l|{<s0>T|<s1>F}}"];
	Node0x454c570:s0 -> Node0x454bfe0;
	Node0x454c570:s1 -> Node0x454f270;
	Node0x454f270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%96:\l96:                                               \l  %97 = phi i32 [ %103, %96 ], [ %94, %93 ]\l  %98 = phi i32 [ %104, %96 ], [ 0, %93 ]\l  %99 = add i32 %97, %43\l  %100 = zext i32 %99 to i64\l  %101 = uitofp i32 %99 to float\l  %102 = getelementptr inbounds float, float addrspace(1)* %0, i64 %100\l  store float %101, float addrspace(1)* %102, align 4, !tbaa !10\l  %103 = add nuw nsw i32 %97, 1\l  %104 = add i32 %98, 1\l  %105 = icmp eq i32 %104, %44\l  br i1 %105, label %106, label %96, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x454f270:s0 -> Node0x454bfe0;
	Node0x454f270:s1 -> Node0x454f270;
	Node0x454bfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%106:\l106:                                              \l  ret void\l}"];
}
