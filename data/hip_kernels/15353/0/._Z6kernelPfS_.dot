digraph "CFG for '_Z6kernelPfS_' function" {
	label="CFG for '_Z6kernelPfS_' function";

	Node0x4de0d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = mul i32 %3, %8\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = add i32 %9, %10\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = getelementptr i8, i8 addrspace(4)* %4, i64 6\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 2, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %12, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %19 = add i32 %17, %18\l  %20 = load i32, i32 addrspace(4)* getelementptr inbounds ([4 x i32], [4 x\l... i32] addrspace(4)* @Size, i64 0, i64 0), align 16, !tbaa !7\l  %21 = icmp ult i32 %11, %20\l  br i1 %21, label %22, label %514\l|{<s0>T|<s1>F}}"];
	Node0x4de0d20:s0 -> Node0x4de4310;
	Node0x4de0d20:s1 -> Node0x4de43a0;
	Node0x4de4310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%22:\l22:                                               \l  %23 = load i32, i32 addrspace(4)* getelementptr inbounds ([4 x i32], [4 x\l... i32] addrspace(4)* @Size, i64 0, i64 1), align 4, !tbaa !7\l  %24 = icmp ult i32 %19, %23\l  br i1 %24, label %25, label %514\l|{<s0>T|<s1>F}}"];
	Node0x4de4310:s0 -> Node0x4de4c80;
	Node0x4de4310:s1 -> Node0x4de43a0;
	Node0x4de4c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%25:\l25:                                               \l  %26 = mul i32 %23, %11\l  %27 = add i32 %26, %19\l  %28 = zext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %31 = uitofp i32 %20 to float\l  %32 = load float, float addrspace(4)* getelementptr inbounds ([4 x float],\l... [4 x float] addrspace(4)* @Spacing, i64 0, i64 1), align 4, !tbaa !11\l  %33 = fadd contract float %32, %31\l  %34 = fmul contract float %30, %33\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %28\l  store float %34, float addrspace(1)* %35, align 4, !tbaa !11\l  %36 = load float, float addrspace(1)* %29, align 4, !tbaa !11\l  %37 = fpext float %36 to double\l  %38 = fpext float %34 to double\l  %39 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %40 = getelementptr inbounds i8, i8 addrspace(4)* %39, i64 24\l  %41 = bitcast i8 addrspace(4)* %40 to i64 addrspace(4)*\l  %42 = load i64, i64 addrspace(4)* %41, align 8, !tbaa !13\l  %43 = inttoptr i64 %42 to i8 addrspace(1)*\l  %44 = addrspacecast i8 addrspace(1)* %43 to i8*\l  %45 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %44,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %46 = extractelement \<2 x i64\> %45, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([25 x i8], [25 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %47, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4de4c80:s0 -> Node0x4de6c00;
	Node0x4de4c80:s1 -> Node0x4de73e0;
	Node0x4de6c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%47:\l47:                                               \l  %48 = and i64 %46, -225\l  %49 = or i64 %48, 32\l  %50 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %44,\l... i64 noundef %49, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %492\l}"];
	Node0x4de6c00 -> Node0x4de76c0;
	Node0x4de73e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%51:\l51:                                               \l  %52 = and i64 %46, 2\l  %53 = and i64 %46, -3\l  %54 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %53, i64 0\l  br label %55\l}"];
	Node0x4de73e0 -> Node0x4de8260;
	Node0x4de8260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%55:\l55:                                               \l  %56 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([25 x i8], [25 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([25 x i8], [25 x i8] addrspace(4)*\l... @.str, i64 0, i64 24) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([25 x i8]* addrspacecast ([25 x i8] addrspace(4)* @.str to [25 x i8]*) to\l... i64)), i64 1))), %51 ], [ %489, %481 ]\l  %57 = phi i8 addrspace(4)* [ getelementptr inbounds ([25 x i8], [25 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %51 ], [ %490, %481 ]\l  %58 = phi \<2 x i64\> [ %54, %51 ], [ %488, %481 ]\l  %59 = icmp ugt i64 %56, 56\l  %60 = extractelement \<2 x i64\> %58, i64 0\l  %61 = or i64 %60, %52\l  %62 = insertelement \<2 x i64\> poison, i64 %61, i64 0\l  %63 = select i1 %59, \<2 x i64\> %58, \<2 x i64\> %62\l  %64 = tail call i64 @llvm.umin.i64(i64 %56, i64 56)\l  %65 = trunc i64 %64 to i32\l  %66 = extractelement \<2 x i64\> %63, i64 0\l  %67 = icmp ugt i32 %65, 7\l  br i1 %67, label %70, label %68\l|{<s0>T|<s1>F}}"];
	Node0x4de8260:s0 -> Node0x4de5b10;
	Node0x4de8260:s1 -> Node0x4de93c0;
	Node0x4de93c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%68:\l68:                                               \l  %69 = icmp eq i32 %65, 0\l  br i1 %69, label %123, label %110\l|{<s0>T|<s1>F}}"];
	Node0x4de93c0:s0 -> Node0x4de9590;
	Node0x4de93c0:s1 -> Node0x4de95e0;
	Node0x4de5b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%70:\l70:                                               \l  %71 = load i8, i8 addrspace(4)* %57, align 1, !tbaa !17\l  %72 = zext i8 %71 to i64\l  %73 = getelementptr inbounds i8, i8 addrspace(4)* %57, i64 1\l  %74 = load i8, i8 addrspace(4)* %73, align 1, !tbaa !17\l  %75 = zext i8 %74 to i64\l  %76 = shl nuw nsw i64 %75, 8\l  %77 = or i64 %76, %72\l  %78 = getelementptr inbounds i8, i8 addrspace(4)* %57, i64 2\l  %79 = load i8, i8 addrspace(4)* %78, align 1, !tbaa !17\l  %80 = zext i8 %79 to i64\l  %81 = shl nuw nsw i64 %80, 16\l  %82 = or i64 %77, %81\l  %83 = getelementptr inbounds i8, i8 addrspace(4)* %57, i64 3\l  %84 = load i8, i8 addrspace(4)* %83, align 1, !tbaa !17\l  %85 = zext i8 %84 to i64\l  %86 = shl nuw nsw i64 %85, 24\l  %87 = or i64 %82, %86\l  %88 = getelementptr inbounds i8, i8 addrspace(4)* %57, i64 4\l  %89 = load i8, i8 addrspace(4)* %88, align 1, !tbaa !17\l  %90 = zext i8 %89 to i64\l  %91 = shl nuw nsw i64 %90, 32\l  %92 = or i64 %87, %91\l  %93 = getelementptr inbounds i8, i8 addrspace(4)* %57, i64 5\l  %94 = load i8, i8 addrspace(4)* %93, align 1, !tbaa !17\l  %95 = zext i8 %94 to i64\l  %96 = shl nuw nsw i64 %95, 40\l  %97 = or i64 %92, %96\l  %98 = getelementptr inbounds i8, i8 addrspace(4)* %57, i64 6\l  %99 = load i8, i8 addrspace(4)* %98, align 1, !tbaa !17\l  %100 = zext i8 %99 to i64\l  %101 = shl nuw nsw i64 %100, 48\l  %102 = or i64 %97, %101\l  %103 = getelementptr inbounds i8, i8 addrspace(4)* %57, i64 7\l  %104 = load i8, i8 addrspace(4)* %103, align 1, !tbaa !17\l  %105 = zext i8 %104 to i64\l  %106 = shl nuw i64 %105, 56\l  %107 = or i64 %102, %106\l  %108 = add nsw i32 %65, -8\l  %109 = getelementptr inbounds i8, i8 addrspace(4)* %57, i64 8\l  br label %123\l}"];
	Node0x4de5b10 -> Node0x4de9590;
	Node0x4de95e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%110:\l110:                                              \l  %111 = phi i32 [ %121, %110 ], [ 0, %68 ]\l  %112 = phi i64 [ %120, %110 ], [ 0, %68 ]\l  %113 = zext i32 %111 to i64\l  %114 = getelementptr inbounds i8, i8 addrspace(4)* %57, i64 %113\l  %115 = load i8, i8 addrspace(4)* %114, align 1, !tbaa !17\l  %116 = zext i8 %115 to i64\l  %117 = shl i32 %111, 3\l  %118 = zext i32 %117 to i64\l  %119 = shl nuw i64 %116, %118\l  %120 = or i64 %119, %112\l  %121 = add nuw nsw i32 %111, 1\l  %122 = icmp eq i32 %121, %65\l  br i1 %122, label %123, label %110, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x4de95e0:s0 -> Node0x4de9590;
	Node0x4de95e0:s1 -> Node0x4de95e0;
	Node0x4de9590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%123:\l123:                                              \l  %124 = phi i8 addrspace(4)* [ %109, %70 ], [ %57, %68 ], [ %57, %110 ]\l  %125 = phi i32 [ %108, %70 ], [ 0, %68 ], [ 0, %110 ]\l  %126 = phi i64 [ %107, %70 ], [ 0, %68 ], [ %120, %110 ]\l  %127 = icmp ugt i32 %125, 7\l  br i1 %127, label %130, label %128\l|{<s0>T|<s1>F}}"];
	Node0x4de9590:s0 -> Node0x4dec090;
	Node0x4de9590:s1 -> Node0x4dec0e0;
	Node0x4dec0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%128:\l128:                                              \l  %129 = icmp eq i32 %125, 0\l  br i1 %129, label %183, label %170\l|{<s0>T|<s1>F}}"];
	Node0x4dec0e0:s0 -> Node0x4de9040;
	Node0x4dec0e0:s1 -> Node0x4de9090;
	Node0x4dec090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%130:\l130:                                              \l  %131 = load i8, i8 addrspace(4)* %124, align 1, !tbaa !17\l  %132 = zext i8 %131 to i64\l  %133 = getelementptr inbounds i8, i8 addrspace(4)* %124, i64 1\l  %134 = load i8, i8 addrspace(4)* %133, align 1, !tbaa !17\l  %135 = zext i8 %134 to i64\l  %136 = shl nuw nsw i64 %135, 8\l  %137 = or i64 %136, %132\l  %138 = getelementptr inbounds i8, i8 addrspace(4)* %124, i64 2\l  %139 = load i8, i8 addrspace(4)* %138, align 1, !tbaa !17\l  %140 = zext i8 %139 to i64\l  %141 = shl nuw nsw i64 %140, 16\l  %142 = or i64 %137, %141\l  %143 = getelementptr inbounds i8, i8 addrspace(4)* %124, i64 3\l  %144 = load i8, i8 addrspace(4)* %143, align 1, !tbaa !17\l  %145 = zext i8 %144 to i64\l  %146 = shl nuw nsw i64 %145, 24\l  %147 = or i64 %142, %146\l  %148 = getelementptr inbounds i8, i8 addrspace(4)* %124, i64 4\l  %149 = load i8, i8 addrspace(4)* %148, align 1, !tbaa !17\l  %150 = zext i8 %149 to i64\l  %151 = shl nuw nsw i64 %150, 32\l  %152 = or i64 %147, %151\l  %153 = getelementptr inbounds i8, i8 addrspace(4)* %124, i64 5\l  %154 = load i8, i8 addrspace(4)* %153, align 1, !tbaa !17\l  %155 = zext i8 %154 to i64\l  %156 = shl nuw nsw i64 %155, 40\l  %157 = or i64 %152, %156\l  %158 = getelementptr inbounds i8, i8 addrspace(4)* %124, i64 6\l  %159 = load i8, i8 addrspace(4)* %158, align 1, !tbaa !17\l  %160 = zext i8 %159 to i64\l  %161 = shl nuw nsw i64 %160, 48\l  %162 = or i64 %157, %161\l  %163 = getelementptr inbounds i8, i8 addrspace(4)* %124, i64 7\l  %164 = load i8, i8 addrspace(4)* %163, align 1, !tbaa !17\l  %165 = zext i8 %164 to i64\l  %166 = shl nuw i64 %165, 56\l  %167 = or i64 %162, %166\l  %168 = add nsw i32 %125, -8\l  %169 = getelementptr inbounds i8, i8 addrspace(4)* %124, i64 8\l  br label %183\l}"];
	Node0x4dec090 -> Node0x4de9040;
	Node0x4de9090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%170:\l170:                                              \l  %171 = phi i32 [ %181, %170 ], [ 0, %128 ]\l  %172 = phi i64 [ %180, %170 ], [ 0, %128 ]\l  %173 = zext i32 %171 to i64\l  %174 = getelementptr inbounds i8, i8 addrspace(4)* %124, i64 %173\l  %175 = load i8, i8 addrspace(4)* %174, align 1, !tbaa !17\l  %176 = zext i8 %175 to i64\l  %177 = shl i32 %171, 3\l  %178 = zext i32 %177 to i64\l  %179 = shl nuw i64 %176, %178\l  %180 = or i64 %179, %172\l  %181 = add nuw nsw i32 %171, 1\l  %182 = icmp eq i32 %181, %125\l  br i1 %182, label %183, label %170\l|{<s0>T|<s1>F}}"];
	Node0x4de9090:s0 -> Node0x4de9040;
	Node0x4de9090:s1 -> Node0x4de9090;
	Node0x4de9040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%183:\l183:                                              \l  %184 = phi i8 addrspace(4)* [ %169, %130 ], [ %124, %128 ], [ %124, %170 ]\l  %185 = phi i32 [ %168, %130 ], [ 0, %128 ], [ 0, %170 ]\l  %186 = phi i64 [ %167, %130 ], [ 0, %128 ], [ %180, %170 ]\l  %187 = icmp ugt i32 %185, 7\l  br i1 %187, label %190, label %188\l|{<s0>T|<s1>F}}"];
	Node0x4de9040:s0 -> Node0x4dee7c0;
	Node0x4de9040:s1 -> Node0x4dee810;
	Node0x4dee810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%188:\l188:                                              \l  %189 = icmp eq i32 %185, 0\l  br i1 %189, label %243, label %230\l|{<s0>T|<s1>F}}"];
	Node0x4dee810:s0 -> Node0x4dee9a0;
	Node0x4dee810:s1 -> Node0x4dee9f0;
	Node0x4dee7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%190:\l190:                                              \l  %191 = load i8, i8 addrspace(4)* %184, align 1, !tbaa !17\l  %192 = zext i8 %191 to i64\l  %193 = getelementptr inbounds i8, i8 addrspace(4)* %184, i64 1\l  %194 = load i8, i8 addrspace(4)* %193, align 1, !tbaa !17\l  %195 = zext i8 %194 to i64\l  %196 = shl nuw nsw i64 %195, 8\l  %197 = or i64 %196, %192\l  %198 = getelementptr inbounds i8, i8 addrspace(4)* %184, i64 2\l  %199 = load i8, i8 addrspace(4)* %198, align 1, !tbaa !17\l  %200 = zext i8 %199 to i64\l  %201 = shl nuw nsw i64 %200, 16\l  %202 = or i64 %197, %201\l  %203 = getelementptr inbounds i8, i8 addrspace(4)* %184, i64 3\l  %204 = load i8, i8 addrspace(4)* %203, align 1, !tbaa !17\l  %205 = zext i8 %204 to i64\l  %206 = shl nuw nsw i64 %205, 24\l  %207 = or i64 %202, %206\l  %208 = getelementptr inbounds i8, i8 addrspace(4)* %184, i64 4\l  %209 = load i8, i8 addrspace(4)* %208, align 1, !tbaa !17\l  %210 = zext i8 %209 to i64\l  %211 = shl nuw nsw i64 %210, 32\l  %212 = or i64 %207, %211\l  %213 = getelementptr inbounds i8, i8 addrspace(4)* %184, i64 5\l  %214 = load i8, i8 addrspace(4)* %213, align 1, !tbaa !17\l  %215 = zext i8 %214 to i64\l  %216 = shl nuw nsw i64 %215, 40\l  %217 = or i64 %212, %216\l  %218 = getelementptr inbounds i8, i8 addrspace(4)* %184, i64 6\l  %219 = load i8, i8 addrspace(4)* %218, align 1, !tbaa !17\l  %220 = zext i8 %219 to i64\l  %221 = shl nuw nsw i64 %220, 48\l  %222 = or i64 %217, %221\l  %223 = getelementptr inbounds i8, i8 addrspace(4)* %184, i64 7\l  %224 = load i8, i8 addrspace(4)* %223, align 1, !tbaa !17\l  %225 = zext i8 %224 to i64\l  %226 = shl nuw i64 %225, 56\l  %227 = or i64 %222, %226\l  %228 = add nsw i32 %185, -8\l  %229 = getelementptr inbounds i8, i8 addrspace(4)* %184, i64 8\l  br label %243\l}"];
	Node0x4dee7c0 -> Node0x4dee9a0;
	Node0x4dee9f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%230:\l230:                                              \l  %231 = phi i32 [ %241, %230 ], [ 0, %188 ]\l  %232 = phi i64 [ %240, %230 ], [ 0, %188 ]\l  %233 = zext i32 %231 to i64\l  %234 = getelementptr inbounds i8, i8 addrspace(4)* %184, i64 %233\l  %235 = load i8, i8 addrspace(4)* %234, align 1, !tbaa !17\l  %236 = zext i8 %235 to i64\l  %237 = shl i32 %231, 3\l  %238 = zext i32 %237 to i64\l  %239 = shl nuw i64 %236, %238\l  %240 = or i64 %239, %232\l  %241 = add nuw nsw i32 %231, 1\l  %242 = icmp eq i32 %241, %185\l  br i1 %242, label %243, label %230\l|{<s0>T|<s1>F}}"];
	Node0x4dee9f0:s0 -> Node0x4dee9a0;
	Node0x4dee9f0:s1 -> Node0x4dee9f0;
	Node0x4dee9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%243:\l243:                                              \l  %244 = phi i8 addrspace(4)* [ %229, %190 ], [ %184, %188 ], [ %184, %230 ]\l  %245 = phi i32 [ %228, %190 ], [ 0, %188 ], [ 0, %230 ]\l  %246 = phi i64 [ %227, %190 ], [ 0, %188 ], [ %240, %230 ]\l  %247 = icmp ugt i32 %245, 7\l  br i1 %247, label %250, label %248\l|{<s0>T|<s1>F}}"];
	Node0x4dee9a0:s0 -> Node0x4df0a10;
	Node0x4dee9a0:s1 -> Node0x4df0a60;
	Node0x4df0a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%248:\l248:                                              \l  %249 = icmp eq i32 %245, 0\l  br i1 %249, label %303, label %290\l|{<s0>T|<s1>F}}"];
	Node0x4df0a60:s0 -> Node0x4df0bf0;
	Node0x4df0a60:s1 -> Node0x4df0c40;
	Node0x4df0a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%250:\l250:                                              \l  %251 = load i8, i8 addrspace(4)* %244, align 1, !tbaa !17\l  %252 = zext i8 %251 to i64\l  %253 = getelementptr inbounds i8, i8 addrspace(4)* %244, i64 1\l  %254 = load i8, i8 addrspace(4)* %253, align 1, !tbaa !17\l  %255 = zext i8 %254 to i64\l  %256 = shl nuw nsw i64 %255, 8\l  %257 = or i64 %256, %252\l  %258 = getelementptr inbounds i8, i8 addrspace(4)* %244, i64 2\l  %259 = load i8, i8 addrspace(4)* %258, align 1, !tbaa !17\l  %260 = zext i8 %259 to i64\l  %261 = shl nuw nsw i64 %260, 16\l  %262 = or i64 %257, %261\l  %263 = getelementptr inbounds i8, i8 addrspace(4)* %244, i64 3\l  %264 = load i8, i8 addrspace(4)* %263, align 1, !tbaa !17\l  %265 = zext i8 %264 to i64\l  %266 = shl nuw nsw i64 %265, 24\l  %267 = or i64 %262, %266\l  %268 = getelementptr inbounds i8, i8 addrspace(4)* %244, i64 4\l  %269 = load i8, i8 addrspace(4)* %268, align 1, !tbaa !17\l  %270 = zext i8 %269 to i64\l  %271 = shl nuw nsw i64 %270, 32\l  %272 = or i64 %267, %271\l  %273 = getelementptr inbounds i8, i8 addrspace(4)* %244, i64 5\l  %274 = load i8, i8 addrspace(4)* %273, align 1, !tbaa !17\l  %275 = zext i8 %274 to i64\l  %276 = shl nuw nsw i64 %275, 40\l  %277 = or i64 %272, %276\l  %278 = getelementptr inbounds i8, i8 addrspace(4)* %244, i64 6\l  %279 = load i8, i8 addrspace(4)* %278, align 1, !tbaa !17\l  %280 = zext i8 %279 to i64\l  %281 = shl nuw nsw i64 %280, 48\l  %282 = or i64 %277, %281\l  %283 = getelementptr inbounds i8, i8 addrspace(4)* %244, i64 7\l  %284 = load i8, i8 addrspace(4)* %283, align 1, !tbaa !17\l  %285 = zext i8 %284 to i64\l  %286 = shl nuw i64 %285, 56\l  %287 = or i64 %282, %286\l  %288 = add nsw i32 %245, -8\l  %289 = getelementptr inbounds i8, i8 addrspace(4)* %244, i64 8\l  br label %303\l}"];
	Node0x4df0a10 -> Node0x4df0bf0;
	Node0x4df0c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%290:\l290:                                              \l  %291 = phi i32 [ %301, %290 ], [ 0, %248 ]\l  %292 = phi i64 [ %300, %290 ], [ 0, %248 ]\l  %293 = zext i32 %291 to i64\l  %294 = getelementptr inbounds i8, i8 addrspace(4)* %244, i64 %293\l  %295 = load i8, i8 addrspace(4)* %294, align 1, !tbaa !17\l  %296 = zext i8 %295 to i64\l  %297 = shl i32 %291, 3\l  %298 = zext i32 %297 to i64\l  %299 = shl nuw i64 %296, %298\l  %300 = or i64 %299, %292\l  %301 = add nuw nsw i32 %291, 1\l  %302 = icmp eq i32 %301, %245\l  br i1 %302, label %303, label %290\l|{<s0>T|<s1>F}}"];
	Node0x4df0c40:s0 -> Node0x4df0bf0;
	Node0x4df0c40:s1 -> Node0x4df0c40;
	Node0x4df0bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%303:\l303:                                              \l  %304 = phi i8 addrspace(4)* [ %289, %250 ], [ %244, %248 ], [ %244, %290 ]\l  %305 = phi i32 [ %288, %250 ], [ 0, %248 ], [ 0, %290 ]\l  %306 = phi i64 [ %287, %250 ], [ 0, %248 ], [ %300, %290 ]\l  %307 = icmp ugt i32 %305, 7\l  br i1 %307, label %310, label %308\l|{<s0>T|<s1>F}}"];
	Node0x4df0bf0:s0 -> Node0x4de1670;
	Node0x4df0bf0:s1 -> Node0x4de16c0;
	Node0x4de16c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%308:\l308:                                              \l  %309 = icmp eq i32 %305, 0\l  br i1 %309, label %363, label %350\l|{<s0>T|<s1>F}}"];
	Node0x4de16c0:s0 -> Node0x4de1850;
	Node0x4de16c0:s1 -> Node0x4de18a0;
	Node0x4de1670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%310:\l310:                                              \l  %311 = load i8, i8 addrspace(4)* %304, align 1, !tbaa !17\l  %312 = zext i8 %311 to i64\l  %313 = getelementptr inbounds i8, i8 addrspace(4)* %304, i64 1\l  %314 = load i8, i8 addrspace(4)* %313, align 1, !tbaa !17\l  %315 = zext i8 %314 to i64\l  %316 = shl nuw nsw i64 %315, 8\l  %317 = or i64 %316, %312\l  %318 = getelementptr inbounds i8, i8 addrspace(4)* %304, i64 2\l  %319 = load i8, i8 addrspace(4)* %318, align 1, !tbaa !17\l  %320 = zext i8 %319 to i64\l  %321 = shl nuw nsw i64 %320, 16\l  %322 = or i64 %317, %321\l  %323 = getelementptr inbounds i8, i8 addrspace(4)* %304, i64 3\l  %324 = load i8, i8 addrspace(4)* %323, align 1, !tbaa !17\l  %325 = zext i8 %324 to i64\l  %326 = shl nuw nsw i64 %325, 24\l  %327 = or i64 %322, %326\l  %328 = getelementptr inbounds i8, i8 addrspace(4)* %304, i64 4\l  %329 = load i8, i8 addrspace(4)* %328, align 1, !tbaa !17\l  %330 = zext i8 %329 to i64\l  %331 = shl nuw nsw i64 %330, 32\l  %332 = or i64 %327, %331\l  %333 = getelementptr inbounds i8, i8 addrspace(4)* %304, i64 5\l  %334 = load i8, i8 addrspace(4)* %333, align 1, !tbaa !17\l  %335 = zext i8 %334 to i64\l  %336 = shl nuw nsw i64 %335, 40\l  %337 = or i64 %332, %336\l  %338 = getelementptr inbounds i8, i8 addrspace(4)* %304, i64 6\l  %339 = load i8, i8 addrspace(4)* %338, align 1, !tbaa !17\l  %340 = zext i8 %339 to i64\l  %341 = shl nuw nsw i64 %340, 48\l  %342 = or i64 %337, %341\l  %343 = getelementptr inbounds i8, i8 addrspace(4)* %304, i64 7\l  %344 = load i8, i8 addrspace(4)* %343, align 1, !tbaa !17\l  %345 = zext i8 %344 to i64\l  %346 = shl nuw i64 %345, 56\l  %347 = or i64 %342, %346\l  %348 = add nsw i32 %305, -8\l  %349 = getelementptr inbounds i8, i8 addrspace(4)* %304, i64 8\l  br label %363\l}"];
	Node0x4de1670 -> Node0x4de1850;
	Node0x4de18a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%350:\l350:                                              \l  %351 = phi i32 [ %361, %350 ], [ 0, %308 ]\l  %352 = phi i64 [ %360, %350 ], [ 0, %308 ]\l  %353 = zext i32 %351 to i64\l  %354 = getelementptr inbounds i8, i8 addrspace(4)* %304, i64 %353\l  %355 = load i8, i8 addrspace(4)* %354, align 1, !tbaa !17\l  %356 = zext i8 %355 to i64\l  %357 = shl i32 %351, 3\l  %358 = zext i32 %357 to i64\l  %359 = shl nuw i64 %356, %358\l  %360 = or i64 %359, %352\l  %361 = add nuw nsw i32 %351, 1\l  %362 = icmp eq i32 %361, %305\l  br i1 %362, label %363, label %350\l|{<s0>T|<s1>F}}"];
	Node0x4de18a0:s0 -> Node0x4de1850;
	Node0x4de18a0:s1 -> Node0x4de18a0;
	Node0x4de1850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%363:\l363:                                              \l  %364 = phi i8 addrspace(4)* [ %349, %310 ], [ %304, %308 ], [ %304, %350 ]\l  %365 = phi i32 [ %348, %310 ], [ 0, %308 ], [ 0, %350 ]\l  %366 = phi i64 [ %347, %310 ], [ 0, %308 ], [ %360, %350 ]\l  %367 = icmp ugt i32 %365, 7\l  br i1 %367, label %370, label %368\l|{<s0>T|<s1>F}}"];
	Node0x4de1850:s0 -> Node0x4df6100;
	Node0x4de1850:s1 -> Node0x4df6150;
	Node0x4df6150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%368:\l368:                                              \l  %369 = icmp eq i32 %365, 0\l  br i1 %369, label %423, label %410\l|{<s0>T|<s1>F}}"];
	Node0x4df6150:s0 -> Node0x4df62e0;
	Node0x4df6150:s1 -> Node0x4df6330;
	Node0x4df6100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%370:\l370:                                              \l  %371 = load i8, i8 addrspace(4)* %364, align 1, !tbaa !17\l  %372 = zext i8 %371 to i64\l  %373 = getelementptr inbounds i8, i8 addrspace(4)* %364, i64 1\l  %374 = load i8, i8 addrspace(4)* %373, align 1, !tbaa !17\l  %375 = zext i8 %374 to i64\l  %376 = shl nuw nsw i64 %375, 8\l  %377 = or i64 %376, %372\l  %378 = getelementptr inbounds i8, i8 addrspace(4)* %364, i64 2\l  %379 = load i8, i8 addrspace(4)* %378, align 1, !tbaa !17\l  %380 = zext i8 %379 to i64\l  %381 = shl nuw nsw i64 %380, 16\l  %382 = or i64 %377, %381\l  %383 = getelementptr inbounds i8, i8 addrspace(4)* %364, i64 3\l  %384 = load i8, i8 addrspace(4)* %383, align 1, !tbaa !17\l  %385 = zext i8 %384 to i64\l  %386 = shl nuw nsw i64 %385, 24\l  %387 = or i64 %382, %386\l  %388 = getelementptr inbounds i8, i8 addrspace(4)* %364, i64 4\l  %389 = load i8, i8 addrspace(4)* %388, align 1, !tbaa !17\l  %390 = zext i8 %389 to i64\l  %391 = shl nuw nsw i64 %390, 32\l  %392 = or i64 %387, %391\l  %393 = getelementptr inbounds i8, i8 addrspace(4)* %364, i64 5\l  %394 = load i8, i8 addrspace(4)* %393, align 1, !tbaa !17\l  %395 = zext i8 %394 to i64\l  %396 = shl nuw nsw i64 %395, 40\l  %397 = or i64 %392, %396\l  %398 = getelementptr inbounds i8, i8 addrspace(4)* %364, i64 6\l  %399 = load i8, i8 addrspace(4)* %398, align 1, !tbaa !17\l  %400 = zext i8 %399 to i64\l  %401 = shl nuw nsw i64 %400, 48\l  %402 = or i64 %397, %401\l  %403 = getelementptr inbounds i8, i8 addrspace(4)* %364, i64 7\l  %404 = load i8, i8 addrspace(4)* %403, align 1, !tbaa !17\l  %405 = zext i8 %404 to i64\l  %406 = shl nuw i64 %405, 56\l  %407 = or i64 %402, %406\l  %408 = add nsw i32 %365, -8\l  %409 = getelementptr inbounds i8, i8 addrspace(4)* %364, i64 8\l  br label %423\l}"];
	Node0x4df6100 -> Node0x4df62e0;
	Node0x4df6330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%410:\l410:                                              \l  %411 = phi i32 [ %421, %410 ], [ 0, %368 ]\l  %412 = phi i64 [ %420, %410 ], [ 0, %368 ]\l  %413 = zext i32 %411 to i64\l  %414 = getelementptr inbounds i8, i8 addrspace(4)* %364, i64 %413\l  %415 = load i8, i8 addrspace(4)* %414, align 1, !tbaa !17\l  %416 = zext i8 %415 to i64\l  %417 = shl i32 %411, 3\l  %418 = zext i32 %417 to i64\l  %419 = shl nuw i64 %416, %418\l  %420 = or i64 %419, %412\l  %421 = add nuw nsw i32 %411, 1\l  %422 = icmp eq i32 %421, %365\l  br i1 %422, label %423, label %410\l|{<s0>T|<s1>F}}"];
	Node0x4df6330:s0 -> Node0x4df62e0;
	Node0x4df6330:s1 -> Node0x4df6330;
	Node0x4df62e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%423:\l423:                                              \l  %424 = phi i8 addrspace(4)* [ %409, %370 ], [ %364, %368 ], [ %364, %410 ]\l  %425 = phi i32 [ %408, %370 ], [ 0, %368 ], [ 0, %410 ]\l  %426 = phi i64 [ %407, %370 ], [ 0, %368 ], [ %420, %410 ]\l  %427 = icmp ugt i32 %425, 7\l  br i1 %427, label %430, label %428\l|{<s0>T|<s1>F}}"];
	Node0x4df62e0:s0 -> Node0x4df8960;
	Node0x4df62e0:s1 -> Node0x4df89b0;
	Node0x4df89b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%428:\l428:                                              \l  %429 = icmp eq i32 %425, 0\l  br i1 %429, label %481, label %468\l|{<s0>T|<s1>F}}"];
	Node0x4df89b0:s0 -> Node0x4de86a0;
	Node0x4df89b0:s1 -> Node0x4df8b40;
	Node0x4df8960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%430:\l430:                                              \l  %431 = load i8, i8 addrspace(4)* %424, align 1, !tbaa !17\l  %432 = zext i8 %431 to i64\l  %433 = getelementptr inbounds i8, i8 addrspace(4)* %424, i64 1\l  %434 = load i8, i8 addrspace(4)* %433, align 1, !tbaa !17\l  %435 = zext i8 %434 to i64\l  %436 = shl nuw nsw i64 %435, 8\l  %437 = or i64 %436, %432\l  %438 = getelementptr inbounds i8, i8 addrspace(4)* %424, i64 2\l  %439 = load i8, i8 addrspace(4)* %438, align 1, !tbaa !17\l  %440 = zext i8 %439 to i64\l  %441 = shl nuw nsw i64 %440, 16\l  %442 = or i64 %437, %441\l  %443 = getelementptr inbounds i8, i8 addrspace(4)* %424, i64 3\l  %444 = load i8, i8 addrspace(4)* %443, align 1, !tbaa !17\l  %445 = zext i8 %444 to i64\l  %446 = shl nuw nsw i64 %445, 24\l  %447 = or i64 %442, %446\l  %448 = getelementptr inbounds i8, i8 addrspace(4)* %424, i64 4\l  %449 = load i8, i8 addrspace(4)* %448, align 1, !tbaa !17\l  %450 = zext i8 %449 to i64\l  %451 = shl nuw nsw i64 %450, 32\l  %452 = or i64 %447, %451\l  %453 = getelementptr inbounds i8, i8 addrspace(4)* %424, i64 5\l  %454 = load i8, i8 addrspace(4)* %453, align 1, !tbaa !17\l  %455 = zext i8 %454 to i64\l  %456 = shl nuw nsw i64 %455, 40\l  %457 = or i64 %452, %456\l  %458 = getelementptr inbounds i8, i8 addrspace(4)* %424, i64 6\l  %459 = load i8, i8 addrspace(4)* %458, align 1, !tbaa !17\l  %460 = zext i8 %459 to i64\l  %461 = shl nuw nsw i64 %460, 48\l  %462 = or i64 %457, %461\l  %463 = getelementptr inbounds i8, i8 addrspace(4)* %424, i64 7\l  %464 = load i8, i8 addrspace(4)* %463, align 1, !tbaa !17\l  %465 = zext i8 %464 to i64\l  %466 = shl nuw i64 %465, 56\l  %467 = or i64 %462, %466\l  br label %481\l}"];
	Node0x4df8960 -> Node0x4de86a0;
	Node0x4df8b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%468:\l468:                                              \l  %469 = phi i32 [ %479, %468 ], [ 0, %428 ]\l  %470 = phi i64 [ %478, %468 ], [ 0, %428 ]\l  %471 = zext i32 %469 to i64\l  %472 = getelementptr inbounds i8, i8 addrspace(4)* %424, i64 %471\l  %473 = load i8, i8 addrspace(4)* %472, align 1, !tbaa !17\l  %474 = zext i8 %473 to i64\l  %475 = shl i32 %469, 3\l  %476 = zext i32 %475 to i64\l  %477 = shl nuw i64 %474, %476\l  %478 = or i64 %477, %470\l  %479 = add nuw nsw i32 %469, 1\l  %480 = icmp eq i32 %479, %425\l  br i1 %480, label %481, label %468\l|{<s0>T|<s1>F}}"];
	Node0x4df8b40:s0 -> Node0x4de86a0;
	Node0x4df8b40:s1 -> Node0x4df8b40;
	Node0x4de86a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%481:\l481:                                              \l  %482 = phi i64 [ %467, %430 ], [ 0, %428 ], [ %478, %468 ]\l  %483 = shl nuw nsw i64 %64, 2\l  %484 = add nuw nsw i64 %483, 28\l  %485 = and i64 %484, 480\l  %486 = and i64 %66, -225\l  %487 = or i64 %486, %485\l  %488 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %44,\l... i64 noundef %487, i64 noundef %126, i64 noundef %186, i64 noundef %246, i64\l... noundef %306, i64 noundef %366, i64 noundef %426, i64 noundef %482) #10\l  %489 = sub i64 %56, %64\l  %490 = getelementptr inbounds i8, i8 addrspace(4)* %57, i64 %64\l  %491 = icmp eq i64 %489, 0\l  br i1 %491, label %492, label %55\l|{<s0>T|<s1>F}}"];
	Node0x4de86a0:s0 -> Node0x4de76c0;
	Node0x4de86a0:s1 -> Node0x4de8260;
	Node0x4de76c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%492:\l492:                                              \l  %493 = phi \<2 x i64\> [ %50, %47 ], [ %488, %481 ]\l  %494 = extractelement \<2 x i64\> %493, i64 0\l  %495 = zext i32 %11 to i64\l  %496 = and i64 %494, -225\l  %497 = or i64 %496, 32\l  %498 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %44,\l... i64 noundef %497, i64 noundef %495, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %499 = extractelement \<2 x i64\> %498, i64 0\l  %500 = zext i32 %19 to i64\l  %501 = and i64 %499, -225\l  %502 = or i64 %501, 32\l  %503 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %44,\l... i64 noundef %502, i64 noundef %500, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %504 = extractelement \<2 x i64\> %503, i64 0\l  %505 = bitcast double %37 to i64\l  %506 = and i64 %504, -225\l  %507 = or i64 %506, 32\l  %508 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %44,\l... i64 noundef %507, i64 noundef %505, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %509 = extractelement \<2 x i64\> %508, i64 0\l  %510 = bitcast double %38 to i64\l  %511 = and i64 %509, -227\l  %512 = or i64 %511, 34\l  %513 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %44,\l... i64 noundef %512, i64 noundef %510, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %514\l}"];
	Node0x4de76c0 -> Node0x4de43a0;
	Node0x4de43a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%514:\l514:                                              \l  ret void\l}"];
}
