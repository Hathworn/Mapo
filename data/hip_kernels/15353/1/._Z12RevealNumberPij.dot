digraph "CFG for '_Z12RevealNumberPij' function" {
	label="CFG for '_Z12RevealNumberPij' function";

	Node0x603f250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%2:\l  %3 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %4 = getelementptr inbounds i8, i8 addrspace(4)* %3, i64 24\l  %5 = bitcast i8 addrspace(4)* %4 to i64 addrspace(4)*\l  %6 = load i64, i64 addrspace(4)* %5, align 8, !tbaa !4\l  %7 = inttoptr i64 %6 to i8 addrspace(1)*\l  %8 = addrspacecast i8 addrspace(1)* %7 to i8*\l  %9 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %8,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %10 = extractelement \<2 x i64\> %9, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([30 x i8], [30 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %11, label %15\l|{<s0>T|<s1>F}}"];
	Node0x603f250:s0 -> Node0x6041170;
	Node0x603f250:s1 -> Node0x6041b60;
	Node0x6041170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%11:\l11:                                               \l  %12 = and i64 %10, -227\l  %13 = or i64 %12, 34\l  %14 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %8,\l... i64 noundef %13, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %455\l}"];
	Node0x6041170 -> Node0x6041e40;
	Node0x6041b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%15:\l15:                                               \l  %16 = and i64 %10, -3\l  %17 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %16, i64 0\l  br label %18\l}"];
	Node0x6041b60 -> Node0x6042a00;
	Node0x6042a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%18:\l18:                                               \l  %19 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([30 x i8], [30 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([30 x i8], [30 x i8] addrspace(4)*\l... @.str, i64 0, i64 29) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([30 x i8]* addrspacecast ([30 x i8] addrspace(4)* @.str to [30 x i8]*) to\l... i64)), i64 1))), %15 ], [ %452, %444 ]\l  %20 = phi i8 addrspace(4)* [ getelementptr inbounds ([30 x i8], [30 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %15 ], [ %453, %444 ]\l  %21 = phi \<2 x i64\> [ %17, %15 ], [ %451, %444 ]\l  %22 = icmp ugt i64 %19, 56\l  %23 = extractelement \<2 x i64\> %21, i64 0\l  %24 = or i64 %23, 2\l  %25 = insertelement \<2 x i64\> poison, i64 %24, i64 0\l  %26 = select i1 %22, \<2 x i64\> %21, \<2 x i64\> %25\l  %27 = tail call i64 @llvm.umin.i64(i64 %19, i64 56)\l  %28 = trunc i64 %27 to i32\l  %29 = extractelement \<2 x i64\> %26, i64 0\l  %30 = icmp ugt i32 %28, 7\l  br i1 %30, label %33, label %31\l|{<s0>T|<s1>F}}"];
	Node0x6042a00:s0 -> Node0x6043940;
	Node0x6042a00:s1 -> Node0x60439d0;
	Node0x60439d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%31:\l31:                                               \l  %32 = icmp eq i32 %28, 0\l  br i1 %32, label %86, label %73\l|{<s0>T|<s1>F}}"];
	Node0x60439d0:s0 -> Node0x6042220;
	Node0x60439d0:s1 -> Node0x6042270;
	Node0x6043940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%33:\l33:                                               \l  %34 = load i8, i8 addrspace(4)* %20, align 1, !tbaa !8\l  %35 = zext i8 %34 to i64\l  %36 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 1\l  %37 = load i8, i8 addrspace(4)* %36, align 1, !tbaa !8\l  %38 = zext i8 %37 to i64\l  %39 = shl nuw nsw i64 %38, 8\l  %40 = or i64 %39, %35\l  %41 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 2\l  %42 = load i8, i8 addrspace(4)* %41, align 1, !tbaa !8\l  %43 = zext i8 %42 to i64\l  %44 = shl nuw nsw i64 %43, 16\l  %45 = or i64 %40, %44\l  %46 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 3\l  %47 = load i8, i8 addrspace(4)* %46, align 1, !tbaa !8\l  %48 = zext i8 %47 to i64\l  %49 = shl nuw nsw i64 %48, 24\l  %50 = or i64 %45, %49\l  %51 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 4\l  %52 = load i8, i8 addrspace(4)* %51, align 1, !tbaa !8\l  %53 = zext i8 %52 to i64\l  %54 = shl nuw nsw i64 %53, 32\l  %55 = or i64 %50, %54\l  %56 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 5\l  %57 = load i8, i8 addrspace(4)* %56, align 1, !tbaa !8\l  %58 = zext i8 %57 to i64\l  %59 = shl nuw nsw i64 %58, 40\l  %60 = or i64 %55, %59\l  %61 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 6\l  %62 = load i8, i8 addrspace(4)* %61, align 1, !tbaa !8\l  %63 = zext i8 %62 to i64\l  %64 = shl nuw nsw i64 %63, 48\l  %65 = or i64 %60, %64\l  %66 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 7\l  %67 = load i8, i8 addrspace(4)* %66, align 1, !tbaa !8\l  %68 = zext i8 %67 to i64\l  %69 = shl nuw i64 %68, 56\l  %70 = or i64 %65, %69\l  %71 = add nsw i32 %28, -8\l  %72 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 8\l  br label %86\l}"];
	Node0x6043940 -> Node0x6042220;
	Node0x6042270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  %74 = phi i32 [ %84, %73 ], [ 0, %31 ]\l  %75 = phi i64 [ %83, %73 ], [ 0, %31 ]\l  %76 = zext i32 %74 to i64\l  %77 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 %76\l  %78 = load i8, i8 addrspace(4)* %77, align 1, !tbaa !8\l  %79 = zext i8 %78 to i64\l  %80 = shl i32 %74, 3\l  %81 = zext i32 %80 to i64\l  %82 = shl nuw i64 %79, %81\l  %83 = or i64 %82, %75\l  %84 = add nuw nsw i32 %74, 1\l  %85 = icmp eq i32 %84, %28\l  br i1 %85, label %86, label %73, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x6042270:s0 -> Node0x6042220;
	Node0x6042270:s1 -> Node0x6042270;
	Node0x6042220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%86:\l86:                                               \l  %87 = phi i8 addrspace(4)* [ %72, %33 ], [ %20, %31 ], [ %20, %73 ]\l  %88 = phi i32 [ %71, %33 ], [ 0, %31 ], [ 0, %73 ]\l  %89 = phi i64 [ %70, %33 ], [ 0, %31 ], [ %83, %73 ]\l  %90 = icmp ugt i32 %88, 7\l  br i1 %90, label %93, label %91\l|{<s0>T|<s1>F}}"];
	Node0x6042220:s0 -> Node0x6046a30;
	Node0x6042220:s1 -> Node0x6046a80;
	Node0x6046a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%91:\l91:                                               \l  %92 = icmp eq i32 %88, 0\l  br i1 %92, label %146, label %133\l|{<s0>T|<s1>F}}"];
	Node0x6046a80:s0 -> Node0x6046c50;
	Node0x6046a80:s1 -> Node0x6046ca0;
	Node0x6046a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%93:\l93:                                               \l  %94 = load i8, i8 addrspace(4)* %87, align 1, !tbaa !8\l  %95 = zext i8 %94 to i64\l  %96 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 1\l  %97 = load i8, i8 addrspace(4)* %96, align 1, !tbaa !8\l  %98 = zext i8 %97 to i64\l  %99 = shl nuw nsw i64 %98, 8\l  %100 = or i64 %99, %95\l  %101 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 2\l  %102 = load i8, i8 addrspace(4)* %101, align 1, !tbaa !8\l  %103 = zext i8 %102 to i64\l  %104 = shl nuw nsw i64 %103, 16\l  %105 = or i64 %100, %104\l  %106 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 3\l  %107 = load i8, i8 addrspace(4)* %106, align 1, !tbaa !8\l  %108 = zext i8 %107 to i64\l  %109 = shl nuw nsw i64 %108, 24\l  %110 = or i64 %105, %109\l  %111 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 4\l  %112 = load i8, i8 addrspace(4)* %111, align 1, !tbaa !8\l  %113 = zext i8 %112 to i64\l  %114 = shl nuw nsw i64 %113, 32\l  %115 = or i64 %110, %114\l  %116 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 5\l  %117 = load i8, i8 addrspace(4)* %116, align 1, !tbaa !8\l  %118 = zext i8 %117 to i64\l  %119 = shl nuw nsw i64 %118, 40\l  %120 = or i64 %115, %119\l  %121 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 6\l  %122 = load i8, i8 addrspace(4)* %121, align 1, !tbaa !8\l  %123 = zext i8 %122 to i64\l  %124 = shl nuw nsw i64 %123, 48\l  %125 = or i64 %120, %124\l  %126 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 7\l  %127 = load i8, i8 addrspace(4)* %126, align 1, !tbaa !8\l  %128 = zext i8 %127 to i64\l  %129 = shl nuw i64 %128, 56\l  %130 = or i64 %125, %129\l  %131 = add nsw i32 %88, -8\l  %132 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 8\l  br label %146\l}"];
	Node0x6046a30 -> Node0x6046c50;
	Node0x6046ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%133:\l133:                                              \l  %134 = phi i32 [ %144, %133 ], [ 0, %91 ]\l  %135 = phi i64 [ %143, %133 ], [ 0, %91 ]\l  %136 = zext i32 %134 to i64\l  %137 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 %136\l  %138 = load i8, i8 addrspace(4)* %137, align 1, !tbaa !8\l  %139 = zext i8 %138 to i64\l  %140 = shl i32 %134, 3\l  %141 = zext i32 %140 to i64\l  %142 = shl nuw i64 %139, %141\l  %143 = or i64 %142, %135\l  %144 = add nuw nsw i32 %134, 1\l  %145 = icmp eq i32 %144, %88\l  br i1 %145, label %146, label %133\l|{<s0>T|<s1>F}}"];
	Node0x6046ca0:s0 -> Node0x6046c50;
	Node0x6046ca0:s1 -> Node0x6046ca0;
	Node0x6046c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%146:\l146:                                              \l  %147 = phi i8 addrspace(4)* [ %132, %93 ], [ %87, %91 ], [ %87, %133 ]\l  %148 = phi i32 [ %131, %93 ], [ 0, %91 ], [ 0, %133 ]\l  %149 = phi i64 [ %130, %93 ], [ 0, %91 ], [ %143, %133 ]\l  %150 = icmp ugt i32 %148, 7\l  br i1 %150, label %153, label %151\l|{<s0>T|<s1>F}}"];
	Node0x6046c50:s0 -> Node0x6049180;
	Node0x6046c50:s1 -> Node0x60491d0;
	Node0x60491d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%151:\l151:                                              \l  %152 = icmp eq i32 %148, 0\l  br i1 %152, label %206, label %193\l|{<s0>T|<s1>F}}"];
	Node0x60491d0:s0 -> Node0x6049360;
	Node0x60491d0:s1 -> Node0x60493b0;
	Node0x6049180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%153:\l153:                                              \l  %154 = load i8, i8 addrspace(4)* %147, align 1, !tbaa !8\l  %155 = zext i8 %154 to i64\l  %156 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 1\l  %157 = load i8, i8 addrspace(4)* %156, align 1, !tbaa !8\l  %158 = zext i8 %157 to i64\l  %159 = shl nuw nsw i64 %158, 8\l  %160 = or i64 %159, %155\l  %161 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 2\l  %162 = load i8, i8 addrspace(4)* %161, align 1, !tbaa !8\l  %163 = zext i8 %162 to i64\l  %164 = shl nuw nsw i64 %163, 16\l  %165 = or i64 %160, %164\l  %166 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 3\l  %167 = load i8, i8 addrspace(4)* %166, align 1, !tbaa !8\l  %168 = zext i8 %167 to i64\l  %169 = shl nuw nsw i64 %168, 24\l  %170 = or i64 %165, %169\l  %171 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 4\l  %172 = load i8, i8 addrspace(4)* %171, align 1, !tbaa !8\l  %173 = zext i8 %172 to i64\l  %174 = shl nuw nsw i64 %173, 32\l  %175 = or i64 %170, %174\l  %176 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 5\l  %177 = load i8, i8 addrspace(4)* %176, align 1, !tbaa !8\l  %178 = zext i8 %177 to i64\l  %179 = shl nuw nsw i64 %178, 40\l  %180 = or i64 %175, %179\l  %181 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 6\l  %182 = load i8, i8 addrspace(4)* %181, align 1, !tbaa !8\l  %183 = zext i8 %182 to i64\l  %184 = shl nuw nsw i64 %183, 48\l  %185 = or i64 %180, %184\l  %186 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 7\l  %187 = load i8, i8 addrspace(4)* %186, align 1, !tbaa !8\l  %188 = zext i8 %187 to i64\l  %189 = shl nuw i64 %188, 56\l  %190 = or i64 %185, %189\l  %191 = add nsw i32 %148, -8\l  %192 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 8\l  br label %206\l}"];
	Node0x6049180 -> Node0x6049360;
	Node0x60493b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%193:\l193:                                              \l  %194 = phi i32 [ %204, %193 ], [ 0, %151 ]\l  %195 = phi i64 [ %203, %193 ], [ 0, %151 ]\l  %196 = zext i32 %194 to i64\l  %197 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 %196\l  %198 = load i8, i8 addrspace(4)* %197, align 1, !tbaa !8\l  %199 = zext i8 %198 to i64\l  %200 = shl i32 %194, 3\l  %201 = zext i32 %200 to i64\l  %202 = shl nuw i64 %199, %201\l  %203 = or i64 %202, %195\l  %204 = add nuw nsw i32 %194, 1\l  %205 = icmp eq i32 %204, %148\l  br i1 %205, label %206, label %193\l|{<s0>T|<s1>F}}"];
	Node0x60493b0:s0 -> Node0x6049360;
	Node0x60493b0:s1 -> Node0x60493b0;
	Node0x6049360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%206:\l206:                                              \l  %207 = phi i8 addrspace(4)* [ %192, %153 ], [ %147, %151 ], [ %147, %193 ]\l  %208 = phi i32 [ %191, %153 ], [ 0, %151 ], [ 0, %193 ]\l  %209 = phi i64 [ %190, %153 ], [ 0, %151 ], [ %203, %193 ]\l  %210 = icmp ugt i32 %208, 7\l  br i1 %210, label %213, label %211\l|{<s0>T|<s1>F}}"];
	Node0x6049360:s0 -> Node0x604b3d0;
	Node0x6049360:s1 -> Node0x604b420;
	Node0x604b420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%211:\l211:                                              \l  %212 = icmp eq i32 %208, 0\l  br i1 %212, label %266, label %253\l|{<s0>T|<s1>F}}"];
	Node0x604b420:s0 -> Node0x604b5b0;
	Node0x604b420:s1 -> Node0x604b600;
	Node0x604b3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%213:\l213:                                              \l  %214 = load i8, i8 addrspace(4)* %207, align 1, !tbaa !8\l  %215 = zext i8 %214 to i64\l  %216 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 1\l  %217 = load i8, i8 addrspace(4)* %216, align 1, !tbaa !8\l  %218 = zext i8 %217 to i64\l  %219 = shl nuw nsw i64 %218, 8\l  %220 = or i64 %219, %215\l  %221 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 2\l  %222 = load i8, i8 addrspace(4)* %221, align 1, !tbaa !8\l  %223 = zext i8 %222 to i64\l  %224 = shl nuw nsw i64 %223, 16\l  %225 = or i64 %220, %224\l  %226 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 3\l  %227 = load i8, i8 addrspace(4)* %226, align 1, !tbaa !8\l  %228 = zext i8 %227 to i64\l  %229 = shl nuw nsw i64 %228, 24\l  %230 = or i64 %225, %229\l  %231 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 4\l  %232 = load i8, i8 addrspace(4)* %231, align 1, !tbaa !8\l  %233 = zext i8 %232 to i64\l  %234 = shl nuw nsw i64 %233, 32\l  %235 = or i64 %230, %234\l  %236 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 5\l  %237 = load i8, i8 addrspace(4)* %236, align 1, !tbaa !8\l  %238 = zext i8 %237 to i64\l  %239 = shl nuw nsw i64 %238, 40\l  %240 = or i64 %235, %239\l  %241 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 6\l  %242 = load i8, i8 addrspace(4)* %241, align 1, !tbaa !8\l  %243 = zext i8 %242 to i64\l  %244 = shl nuw nsw i64 %243, 48\l  %245 = or i64 %240, %244\l  %246 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 7\l  %247 = load i8, i8 addrspace(4)* %246, align 1, !tbaa !8\l  %248 = zext i8 %247 to i64\l  %249 = shl nuw i64 %248, 56\l  %250 = or i64 %245, %249\l  %251 = add nsw i32 %208, -8\l  %252 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 8\l  br label %266\l}"];
	Node0x604b3d0 -> Node0x604b5b0;
	Node0x604b600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%253:\l253:                                              \l  %254 = phi i32 [ %264, %253 ], [ 0, %211 ]\l  %255 = phi i64 [ %263, %253 ], [ 0, %211 ]\l  %256 = zext i32 %254 to i64\l  %257 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 %256\l  %258 = load i8, i8 addrspace(4)* %257, align 1, !tbaa !8\l  %259 = zext i8 %258 to i64\l  %260 = shl i32 %254, 3\l  %261 = zext i32 %260 to i64\l  %262 = shl nuw i64 %259, %261\l  %263 = or i64 %262, %255\l  %264 = add nuw nsw i32 %254, 1\l  %265 = icmp eq i32 %264, %208\l  br i1 %265, label %266, label %253\l|{<s0>T|<s1>F}}"];
	Node0x604b600:s0 -> Node0x604b5b0;
	Node0x604b600:s1 -> Node0x604b600;
	Node0x604b5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%266:\l266:                                              \l  %267 = phi i8 addrspace(4)* [ %252, %213 ], [ %207, %211 ], [ %207, %253 ]\l  %268 = phi i32 [ %251, %213 ], [ 0, %211 ], [ 0, %253 ]\l  %269 = phi i64 [ %250, %213 ], [ 0, %211 ], [ %263, %253 ]\l  %270 = icmp ugt i32 %268, 7\l  br i1 %270, label %273, label %271\l|{<s0>T|<s1>F}}"];
	Node0x604b5b0:s0 -> Node0x604de50;
	Node0x604b5b0:s1 -> Node0x604dea0;
	Node0x604dea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%271:\l271:                                              \l  %272 = icmp eq i32 %268, 0\l  br i1 %272, label %326, label %313\l|{<s0>T|<s1>F}}"];
	Node0x604dea0:s0 -> Node0x604e030;
	Node0x604dea0:s1 -> Node0x604e080;
	Node0x604de50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%273:\l273:                                              \l  %274 = load i8, i8 addrspace(4)* %267, align 1, !tbaa !8\l  %275 = zext i8 %274 to i64\l  %276 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 1\l  %277 = load i8, i8 addrspace(4)* %276, align 1, !tbaa !8\l  %278 = zext i8 %277 to i64\l  %279 = shl nuw nsw i64 %278, 8\l  %280 = or i64 %279, %275\l  %281 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 2\l  %282 = load i8, i8 addrspace(4)* %281, align 1, !tbaa !8\l  %283 = zext i8 %282 to i64\l  %284 = shl nuw nsw i64 %283, 16\l  %285 = or i64 %280, %284\l  %286 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 3\l  %287 = load i8, i8 addrspace(4)* %286, align 1, !tbaa !8\l  %288 = zext i8 %287 to i64\l  %289 = shl nuw nsw i64 %288, 24\l  %290 = or i64 %285, %289\l  %291 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 4\l  %292 = load i8, i8 addrspace(4)* %291, align 1, !tbaa !8\l  %293 = zext i8 %292 to i64\l  %294 = shl nuw nsw i64 %293, 32\l  %295 = or i64 %290, %294\l  %296 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 5\l  %297 = load i8, i8 addrspace(4)* %296, align 1, !tbaa !8\l  %298 = zext i8 %297 to i64\l  %299 = shl nuw nsw i64 %298, 40\l  %300 = or i64 %295, %299\l  %301 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 6\l  %302 = load i8, i8 addrspace(4)* %301, align 1, !tbaa !8\l  %303 = zext i8 %302 to i64\l  %304 = shl nuw nsw i64 %303, 48\l  %305 = or i64 %300, %304\l  %306 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 7\l  %307 = load i8, i8 addrspace(4)* %306, align 1, !tbaa !8\l  %308 = zext i8 %307 to i64\l  %309 = shl nuw i64 %308, 56\l  %310 = or i64 %305, %309\l  %311 = add nsw i32 %268, -8\l  %312 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 8\l  br label %326\l}"];
	Node0x604de50 -> Node0x604e030;
	Node0x604e080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%313:\l313:                                              \l  %314 = phi i32 [ %324, %313 ], [ 0, %271 ]\l  %315 = phi i64 [ %323, %313 ], [ 0, %271 ]\l  %316 = zext i32 %314 to i64\l  %317 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 %316\l  %318 = load i8, i8 addrspace(4)* %317, align 1, !tbaa !8\l  %319 = zext i8 %318 to i64\l  %320 = shl i32 %314, 3\l  %321 = zext i32 %320 to i64\l  %322 = shl nuw i64 %319, %321\l  %323 = or i64 %322, %315\l  %324 = add nuw nsw i32 %314, 1\l  %325 = icmp eq i32 %324, %268\l  br i1 %325, label %326, label %313\l|{<s0>T|<s1>F}}"];
	Node0x604e080:s0 -> Node0x604e030;
	Node0x604e080:s1 -> Node0x604e080;
	Node0x604e030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%326:\l326:                                              \l  %327 = phi i8 addrspace(4)* [ %312, %273 ], [ %267, %271 ], [ %267, %313 ]\l  %328 = phi i32 [ %311, %273 ], [ 0, %271 ], [ 0, %313 ]\l  %329 = phi i64 [ %310, %273 ], [ 0, %271 ], [ %323, %313 ]\l  %330 = icmp ugt i32 %328, 7\l  br i1 %330, label %333, label %331\l|{<s0>T|<s1>F}}"];
	Node0x604e030:s0 -> Node0x60500a0;
	Node0x604e030:s1 -> Node0x60500f0;
	Node0x60500f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%331:\l331:                                              \l  %332 = icmp eq i32 %328, 0\l  br i1 %332, label %386, label %373\l|{<s0>T|<s1>F}}"];
	Node0x60500f0:s0 -> Node0x6050280;
	Node0x60500f0:s1 -> Node0x60502d0;
	Node0x60500a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%333:\l333:                                              \l  %334 = load i8, i8 addrspace(4)* %327, align 1, !tbaa !8\l  %335 = zext i8 %334 to i64\l  %336 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 1\l  %337 = load i8, i8 addrspace(4)* %336, align 1, !tbaa !8\l  %338 = zext i8 %337 to i64\l  %339 = shl nuw nsw i64 %338, 8\l  %340 = or i64 %339, %335\l  %341 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 2\l  %342 = load i8, i8 addrspace(4)* %341, align 1, !tbaa !8\l  %343 = zext i8 %342 to i64\l  %344 = shl nuw nsw i64 %343, 16\l  %345 = or i64 %340, %344\l  %346 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 3\l  %347 = load i8, i8 addrspace(4)* %346, align 1, !tbaa !8\l  %348 = zext i8 %347 to i64\l  %349 = shl nuw nsw i64 %348, 24\l  %350 = or i64 %345, %349\l  %351 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 4\l  %352 = load i8, i8 addrspace(4)* %351, align 1, !tbaa !8\l  %353 = zext i8 %352 to i64\l  %354 = shl nuw nsw i64 %353, 32\l  %355 = or i64 %350, %354\l  %356 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 5\l  %357 = load i8, i8 addrspace(4)* %356, align 1, !tbaa !8\l  %358 = zext i8 %357 to i64\l  %359 = shl nuw nsw i64 %358, 40\l  %360 = or i64 %355, %359\l  %361 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 6\l  %362 = load i8, i8 addrspace(4)* %361, align 1, !tbaa !8\l  %363 = zext i8 %362 to i64\l  %364 = shl nuw nsw i64 %363, 48\l  %365 = or i64 %360, %364\l  %366 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 7\l  %367 = load i8, i8 addrspace(4)* %366, align 1, !tbaa !8\l  %368 = zext i8 %367 to i64\l  %369 = shl nuw i64 %368, 56\l  %370 = or i64 %365, %369\l  %371 = add nsw i32 %328, -8\l  %372 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 8\l  br label %386\l}"];
	Node0x60500a0 -> Node0x6050280;
	Node0x60502d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%373:\l373:                                              \l  %374 = phi i32 [ %384, %373 ], [ 0, %331 ]\l  %375 = phi i64 [ %383, %373 ], [ 0, %331 ]\l  %376 = zext i32 %374 to i64\l  %377 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 %376\l  %378 = load i8, i8 addrspace(4)* %377, align 1, !tbaa !8\l  %379 = zext i8 %378 to i64\l  %380 = shl i32 %374, 3\l  %381 = zext i32 %380 to i64\l  %382 = shl nuw i64 %379, %381\l  %383 = or i64 %382, %375\l  %384 = add nuw nsw i32 %374, 1\l  %385 = icmp eq i32 %384, %328\l  br i1 %385, label %386, label %373\l|{<s0>T|<s1>F}}"];
	Node0x60502d0:s0 -> Node0x6050280;
	Node0x60502d0:s1 -> Node0x60502d0;
	Node0x6050280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%386:\l386:                                              \l  %387 = phi i8 addrspace(4)* [ %372, %333 ], [ %327, %331 ], [ %327, %373 ]\l  %388 = phi i32 [ %371, %333 ], [ 0, %331 ], [ 0, %373 ]\l  %389 = phi i64 [ %370, %333 ], [ 0, %331 ], [ %383, %373 ]\l  %390 = icmp ugt i32 %388, 7\l  br i1 %390, label %393, label %391\l|{<s0>T|<s1>F}}"];
	Node0x6050280:s0 -> Node0x6053350;
	Node0x6050280:s1 -> Node0x60533a0;
	Node0x60533a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%391:\l391:                                              \l  %392 = icmp eq i32 %388, 0\l  br i1 %392, label %444, label %431\l|{<s0>T|<s1>F}}"];
	Node0x60533a0:s0 -> Node0x6042e40;
	Node0x60533a0:s1 -> Node0x6053530;
	Node0x6053350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%393:\l393:                                              \l  %394 = load i8, i8 addrspace(4)* %387, align 1, !tbaa !8\l  %395 = zext i8 %394 to i64\l  %396 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 1\l  %397 = load i8, i8 addrspace(4)* %396, align 1, !tbaa !8\l  %398 = zext i8 %397 to i64\l  %399 = shl nuw nsw i64 %398, 8\l  %400 = or i64 %399, %395\l  %401 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 2\l  %402 = load i8, i8 addrspace(4)* %401, align 1, !tbaa !8\l  %403 = zext i8 %402 to i64\l  %404 = shl nuw nsw i64 %403, 16\l  %405 = or i64 %400, %404\l  %406 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 3\l  %407 = load i8, i8 addrspace(4)* %406, align 1, !tbaa !8\l  %408 = zext i8 %407 to i64\l  %409 = shl nuw nsw i64 %408, 24\l  %410 = or i64 %405, %409\l  %411 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 4\l  %412 = load i8, i8 addrspace(4)* %411, align 1, !tbaa !8\l  %413 = zext i8 %412 to i64\l  %414 = shl nuw nsw i64 %413, 32\l  %415 = or i64 %410, %414\l  %416 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 5\l  %417 = load i8, i8 addrspace(4)* %416, align 1, !tbaa !8\l  %418 = zext i8 %417 to i64\l  %419 = shl nuw nsw i64 %418, 40\l  %420 = or i64 %415, %419\l  %421 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 6\l  %422 = load i8, i8 addrspace(4)* %421, align 1, !tbaa !8\l  %423 = zext i8 %422 to i64\l  %424 = shl nuw nsw i64 %423, 48\l  %425 = or i64 %420, %424\l  %426 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 7\l  %427 = load i8, i8 addrspace(4)* %426, align 1, !tbaa !8\l  %428 = zext i8 %427 to i64\l  %429 = shl nuw i64 %428, 56\l  %430 = or i64 %425, %429\l  br label %444\l}"];
	Node0x6053350 -> Node0x6042e40;
	Node0x6053530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%431:\l431:                                              \l  %432 = phi i32 [ %442, %431 ], [ 0, %391 ]\l  %433 = phi i64 [ %441, %431 ], [ 0, %391 ]\l  %434 = zext i32 %432 to i64\l  %435 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 %434\l  %436 = load i8, i8 addrspace(4)* %435, align 1, !tbaa !8\l  %437 = zext i8 %436 to i64\l  %438 = shl i32 %432, 3\l  %439 = zext i32 %438 to i64\l  %440 = shl nuw i64 %437, %439\l  %441 = or i64 %440, %433\l  %442 = add nuw nsw i32 %432, 1\l  %443 = icmp eq i32 %442, %388\l  br i1 %443, label %444, label %431\l|{<s0>T|<s1>F}}"];
	Node0x6053530:s0 -> Node0x6042e40;
	Node0x6053530:s1 -> Node0x6053530;
	Node0x6042e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%444:\l444:                                              \l  %445 = phi i64 [ %430, %393 ], [ 0, %391 ], [ %441, %431 ]\l  %446 = shl nuw nsw i64 %27, 2\l  %447 = add nuw nsw i64 %446, 28\l  %448 = and i64 %447, 480\l  %449 = and i64 %29, -225\l  %450 = or i64 %449, %448\l  %451 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %8,\l... i64 noundef %450, i64 noundef %89, i64 noundef %149, i64 noundef %209, i64\l... noundef %269, i64 noundef %329, i64 noundef %389, i64 noundef %445) #10\l  %452 = sub i64 %19, %27\l  %453 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 %27\l  %454 = icmp eq i64 %452, 0\l  br i1 %454, label %455, label %18\l|{<s0>T|<s1>F}}"];
	Node0x6042e40:s0 -> Node0x6041e40;
	Node0x6042e40:s1 -> Node0x6042a00;
	Node0x6041e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%455:\l455:                                              \l  %456 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %457 = getelementptr i8, i8 addrspace(4)* %456, i64 4\l  %458 = bitcast i8 addrspace(4)* %457 to i16 addrspace(4)*\l  %459 = load i16, i16 addrspace(4)* %458, align 4, !range !11,\l... !invariant.load !12\l  %460 = zext i16 %459 to i32\l  %461 = getelementptr inbounds i8, i8 addrspace(4)* %456, i64 12\l  %462 = bitcast i8 addrspace(4)* %461 to i32 addrspace(4)*\l  %463 = load i32, i32 addrspace(4)* %462, align 4, !tbaa !13\l  %464 = udiv i32 %463, %460\l  %465 = mul i32 %464, %460\l  %466 = icmp ugt i32 %463, %465\l  %467 = zext i1 %466 to i32\l  %468 = add i32 %464, %467\l  %469 = mul i32 %468, %460\l  %470 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !19\l  %471 = add i32 %469, %470\l  %472 = icmp ult i32 %471, %1\l  br i1 %472, label %473, label %931\l|{<s0>T|<s1>F}}"];
	Node0x6041e40:s0 -> Node0x6056c50;
	Node0x6041e40:s1 -> Node0x6056ce0;
	Node0x6056c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%473:\l473:                                              \l  %474 = zext i32 %471 to i64\l  %475 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %474\l  %476 = load i32, i32 addrspace(1)* %475, align 4, !tbaa !20\l  %477 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %8,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %478 = extractelement \<2 x i64\> %477, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([15 x i8], [15 x i8] addrspace(4)* @.str.1, i64 0, i64 0) to i8*), i8*\l... null), label %479, label %483\l|{<s0>T|<s1>F}}"];
	Node0x6056c50:s0 -> Node0x60574c0;
	Node0x6056c50:s1 -> Node0x6057550;
	Node0x60574c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%479:\l479:                                              \l  %480 = and i64 %478, -225\l  %481 = or i64 %480, 32\l  %482 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %8,\l... i64 noundef %481, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %924\l}"];
	Node0x60574c0 -> Node0x6057840;
	Node0x6057550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%483:\l483:                                              \l  %484 = and i64 %478, 2\l  %485 = and i64 %478, -3\l  %486 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %485, i64 0\l  br label %487\l}"];
	Node0x6057550 -> Node0x6057900;
	Node0x6057900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%487:\l487:                                              \l  %488 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([15 x i8], [15 x i8] addrspace(4)* @.str.1, i64 0,\l... i64 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast\l... (i8 addrspace(4)* getelementptr inbounds ([15 x i8], [15 x i8] addrspace(4)*\l... @.str.1, i64 0, i64 14) to i8*) to i64), i64 add (i64 sub (i64 0, i64\l... ptrtoint ([15 x i8]* addrspacecast ([15 x i8] addrspace(4)* @.str.1 to [15 x\l... i8]*) to i64)), i64 1))), %483 ], [ %921, %913 ]\l  %489 = phi i8 addrspace(4)* [ getelementptr inbounds ([15 x i8], [15 x i8]\l... addrspace(4)* @.str.1, i64 0, i64 0), %483 ], [ %922, %913 ]\l  %490 = phi \<2 x i64\> [ %486, %483 ], [ %920, %913 ]\l  %491 = icmp ugt i64 %488, 56\l  %492 = extractelement \<2 x i64\> %490, i64 0\l  %493 = or i64 %492, %484\l  %494 = insertelement \<2 x i64\> poison, i64 %493, i64 0\l  %495 = select i1 %491, \<2 x i64\> %490, \<2 x i64\> %494\l  %496 = tail call i64 @llvm.umin.i64(i64 %488, i64 56)\l  %497 = trunc i64 %496 to i32\l  %498 = extractelement \<2 x i64\> %495, i64 0\l  %499 = icmp ugt i32 %497, 7\l  br i1 %499, label %502, label %500\l|{<s0>T|<s1>F}}"];
	Node0x6057900:s0 -> Node0x60589a0;
	Node0x6057900:s1 -> Node0x6058a30;
	Node0x6058a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%500:\l500:                                              \l  %501 = icmp eq i32 %497, 0\l  br i1 %501, label %555, label %542\l|{<s0>T|<s1>F}}"];
	Node0x6058a30:s0 -> Node0x6058c00;
	Node0x6058a30:s1 -> Node0x6058c50;
	Node0x60589a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%502:\l502:                                              \l  %503 = load i8, i8 addrspace(4)* %489, align 1, !tbaa !8\l  %504 = zext i8 %503 to i64\l  %505 = getelementptr inbounds i8, i8 addrspace(4)* %489, i64 1\l  %506 = load i8, i8 addrspace(4)* %505, align 1, !tbaa !8\l  %507 = zext i8 %506 to i64\l  %508 = shl nuw nsw i64 %507, 8\l  %509 = or i64 %508, %504\l  %510 = getelementptr inbounds i8, i8 addrspace(4)* %489, i64 2\l  %511 = load i8, i8 addrspace(4)* %510, align 1, !tbaa !8\l  %512 = zext i8 %511 to i64\l  %513 = shl nuw nsw i64 %512, 16\l  %514 = or i64 %509, %513\l  %515 = getelementptr inbounds i8, i8 addrspace(4)* %489, i64 3\l  %516 = load i8, i8 addrspace(4)* %515, align 1, !tbaa !8\l  %517 = zext i8 %516 to i64\l  %518 = shl nuw nsw i64 %517, 24\l  %519 = or i64 %514, %518\l  %520 = getelementptr inbounds i8, i8 addrspace(4)* %489, i64 4\l  %521 = load i8, i8 addrspace(4)* %520, align 1, !tbaa !8\l  %522 = zext i8 %521 to i64\l  %523 = shl nuw nsw i64 %522, 32\l  %524 = or i64 %519, %523\l  %525 = getelementptr inbounds i8, i8 addrspace(4)* %489, i64 5\l  %526 = load i8, i8 addrspace(4)* %525, align 1, !tbaa !8\l  %527 = zext i8 %526 to i64\l  %528 = shl nuw nsw i64 %527, 40\l  %529 = or i64 %524, %528\l  %530 = getelementptr inbounds i8, i8 addrspace(4)* %489, i64 6\l  %531 = load i8, i8 addrspace(4)* %530, align 1, !tbaa !8\l  %532 = zext i8 %531 to i64\l  %533 = shl nuw nsw i64 %532, 48\l  %534 = or i64 %529, %533\l  %535 = getelementptr inbounds i8, i8 addrspace(4)* %489, i64 7\l  %536 = load i8, i8 addrspace(4)* %535, align 1, !tbaa !8\l  %537 = zext i8 %536 to i64\l  %538 = shl nuw i64 %537, 56\l  %539 = or i64 %534, %538\l  %540 = add nsw i32 %497, -8\l  %541 = getelementptr inbounds i8, i8 addrspace(4)* %489, i64 8\l  br label %555\l}"];
	Node0x60589a0 -> Node0x6058c00;
	Node0x6058c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%542:\l542:                                              \l  %543 = phi i32 [ %553, %542 ], [ 0, %500 ]\l  %544 = phi i64 [ %552, %542 ], [ 0, %500 ]\l  %545 = zext i32 %543 to i64\l  %546 = getelementptr inbounds i8, i8 addrspace(4)* %489, i64 %545\l  %547 = load i8, i8 addrspace(4)* %546, align 1, !tbaa !8\l  %548 = zext i8 %547 to i64\l  %549 = shl i32 %543, 3\l  %550 = zext i32 %549 to i64\l  %551 = shl nuw i64 %548, %550\l  %552 = or i64 %551, %544\l  %553 = add nuw nsw i32 %543, 1\l  %554 = icmp eq i32 %553, %497\l  br i1 %554, label %555, label %542, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x6058c50:s0 -> Node0x6058c00;
	Node0x6058c50:s1 -> Node0x6058c50;
	Node0x6058c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%555:\l555:                                              \l  %556 = phi i8 addrspace(4)* [ %541, %502 ], [ %489, %500 ], [ %489, %542 ]\l  %557 = phi i32 [ %540, %502 ], [ 0, %500 ], [ 0, %542 ]\l  %558 = phi i64 [ %539, %502 ], [ 0, %500 ], [ %552, %542 ]\l  %559 = icmp ugt i32 %557, 7\l  br i1 %559, label %562, label %560\l|{<s0>T|<s1>F}}"];
	Node0x6058c00:s0 -> Node0x605c320;
	Node0x6058c00:s1 -> Node0x605c370;
	Node0x605c370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%560:\l560:                                              \l  %561 = icmp eq i32 %557, 0\l  br i1 %561, label %615, label %602\l|{<s0>T|<s1>F}}"];
	Node0x605c370:s0 -> Node0x605c500;
	Node0x605c370:s1 -> Node0x605c550;
	Node0x605c320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%562:\l562:                                              \l  %563 = load i8, i8 addrspace(4)* %556, align 1, !tbaa !8\l  %564 = zext i8 %563 to i64\l  %565 = getelementptr inbounds i8, i8 addrspace(4)* %556, i64 1\l  %566 = load i8, i8 addrspace(4)* %565, align 1, !tbaa !8\l  %567 = zext i8 %566 to i64\l  %568 = shl nuw nsw i64 %567, 8\l  %569 = or i64 %568, %564\l  %570 = getelementptr inbounds i8, i8 addrspace(4)* %556, i64 2\l  %571 = load i8, i8 addrspace(4)* %570, align 1, !tbaa !8\l  %572 = zext i8 %571 to i64\l  %573 = shl nuw nsw i64 %572, 16\l  %574 = or i64 %569, %573\l  %575 = getelementptr inbounds i8, i8 addrspace(4)* %556, i64 3\l  %576 = load i8, i8 addrspace(4)* %575, align 1, !tbaa !8\l  %577 = zext i8 %576 to i64\l  %578 = shl nuw nsw i64 %577, 24\l  %579 = or i64 %574, %578\l  %580 = getelementptr inbounds i8, i8 addrspace(4)* %556, i64 4\l  %581 = load i8, i8 addrspace(4)* %580, align 1, !tbaa !8\l  %582 = zext i8 %581 to i64\l  %583 = shl nuw nsw i64 %582, 32\l  %584 = or i64 %579, %583\l  %585 = getelementptr inbounds i8, i8 addrspace(4)* %556, i64 5\l  %586 = load i8, i8 addrspace(4)* %585, align 1, !tbaa !8\l  %587 = zext i8 %586 to i64\l  %588 = shl nuw nsw i64 %587, 40\l  %589 = or i64 %584, %588\l  %590 = getelementptr inbounds i8, i8 addrspace(4)* %556, i64 6\l  %591 = load i8, i8 addrspace(4)* %590, align 1, !tbaa !8\l  %592 = zext i8 %591 to i64\l  %593 = shl nuw nsw i64 %592, 48\l  %594 = or i64 %589, %593\l  %595 = getelementptr inbounds i8, i8 addrspace(4)* %556, i64 7\l  %596 = load i8, i8 addrspace(4)* %595, align 1, !tbaa !8\l  %597 = zext i8 %596 to i64\l  %598 = shl nuw i64 %597, 56\l  %599 = or i64 %594, %598\l  %600 = add nsw i32 %557, -8\l  %601 = getelementptr inbounds i8, i8 addrspace(4)* %556, i64 8\l  br label %615\l}"];
	Node0x605c320 -> Node0x605c500;
	Node0x605c550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%602:\l602:                                              \l  %603 = phi i32 [ %613, %602 ], [ 0, %560 ]\l  %604 = phi i64 [ %612, %602 ], [ 0, %560 ]\l  %605 = zext i32 %603 to i64\l  %606 = getelementptr inbounds i8, i8 addrspace(4)* %556, i64 %605\l  %607 = load i8, i8 addrspace(4)* %606, align 1, !tbaa !8\l  %608 = zext i8 %607 to i64\l  %609 = shl i32 %603, 3\l  %610 = zext i32 %609 to i64\l  %611 = shl nuw i64 %608, %610\l  %612 = or i64 %611, %604\l  %613 = add nuw nsw i32 %603, 1\l  %614 = icmp eq i32 %613, %557\l  br i1 %614, label %615, label %602\l|{<s0>T|<s1>F}}"];
	Node0x605c550:s0 -> Node0x605c500;
	Node0x605c550:s1 -> Node0x605c550;
	Node0x605c500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%615:\l615:                                              \l  %616 = phi i8 addrspace(4)* [ %601, %562 ], [ %556, %560 ], [ %556, %602 ]\l  %617 = phi i32 [ %600, %562 ], [ 0, %560 ], [ 0, %602 ]\l  %618 = phi i64 [ %599, %562 ], [ 0, %560 ], [ %612, %602 ]\l  %619 = icmp ugt i32 %617, 7\l  br i1 %619, label %622, label %620\l|{<s0>T|<s1>F}}"];
	Node0x605c500:s0 -> Node0x605e570;
	Node0x605c500:s1 -> Node0x605e5c0;
	Node0x605e5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%620:\l620:                                              \l  %621 = icmp eq i32 %617, 0\l  br i1 %621, label %675, label %662\l|{<s0>T|<s1>F}}"];
	Node0x605e5c0:s0 -> Node0x605e750;
	Node0x605e5c0:s1 -> Node0x605e7a0;
	Node0x605e570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%622:\l622:                                              \l  %623 = load i8, i8 addrspace(4)* %616, align 1, !tbaa !8\l  %624 = zext i8 %623 to i64\l  %625 = getelementptr inbounds i8, i8 addrspace(4)* %616, i64 1\l  %626 = load i8, i8 addrspace(4)* %625, align 1, !tbaa !8\l  %627 = zext i8 %626 to i64\l  %628 = shl nuw nsw i64 %627, 8\l  %629 = or i64 %628, %624\l  %630 = getelementptr inbounds i8, i8 addrspace(4)* %616, i64 2\l  %631 = load i8, i8 addrspace(4)* %630, align 1, !tbaa !8\l  %632 = zext i8 %631 to i64\l  %633 = shl nuw nsw i64 %632, 16\l  %634 = or i64 %629, %633\l  %635 = getelementptr inbounds i8, i8 addrspace(4)* %616, i64 3\l  %636 = load i8, i8 addrspace(4)* %635, align 1, !tbaa !8\l  %637 = zext i8 %636 to i64\l  %638 = shl nuw nsw i64 %637, 24\l  %639 = or i64 %634, %638\l  %640 = getelementptr inbounds i8, i8 addrspace(4)* %616, i64 4\l  %641 = load i8, i8 addrspace(4)* %640, align 1, !tbaa !8\l  %642 = zext i8 %641 to i64\l  %643 = shl nuw nsw i64 %642, 32\l  %644 = or i64 %639, %643\l  %645 = getelementptr inbounds i8, i8 addrspace(4)* %616, i64 5\l  %646 = load i8, i8 addrspace(4)* %645, align 1, !tbaa !8\l  %647 = zext i8 %646 to i64\l  %648 = shl nuw nsw i64 %647, 40\l  %649 = or i64 %644, %648\l  %650 = getelementptr inbounds i8, i8 addrspace(4)* %616, i64 6\l  %651 = load i8, i8 addrspace(4)* %650, align 1, !tbaa !8\l  %652 = zext i8 %651 to i64\l  %653 = shl nuw nsw i64 %652, 48\l  %654 = or i64 %649, %653\l  %655 = getelementptr inbounds i8, i8 addrspace(4)* %616, i64 7\l  %656 = load i8, i8 addrspace(4)* %655, align 1, !tbaa !8\l  %657 = zext i8 %656 to i64\l  %658 = shl nuw i64 %657, 56\l  %659 = or i64 %654, %658\l  %660 = add nsw i32 %617, -8\l  %661 = getelementptr inbounds i8, i8 addrspace(4)* %616, i64 8\l  br label %675\l}"];
	Node0x605e570 -> Node0x605e750;
	Node0x605e7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%662:\l662:                                              \l  %663 = phi i32 [ %673, %662 ], [ 0, %620 ]\l  %664 = phi i64 [ %672, %662 ], [ 0, %620 ]\l  %665 = zext i32 %663 to i64\l  %666 = getelementptr inbounds i8, i8 addrspace(4)* %616, i64 %665\l  %667 = load i8, i8 addrspace(4)* %666, align 1, !tbaa !8\l  %668 = zext i8 %667 to i64\l  %669 = shl i32 %663, 3\l  %670 = zext i32 %669 to i64\l  %671 = shl nuw i64 %668, %670\l  %672 = or i64 %671, %664\l  %673 = add nuw nsw i32 %663, 1\l  %674 = icmp eq i32 %673, %617\l  br i1 %674, label %675, label %662\l|{<s0>T|<s1>F}}"];
	Node0x605e7a0:s0 -> Node0x605e750;
	Node0x605e7a0:s1 -> Node0x605e7a0;
	Node0x605e750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%675:\l675:                                              \l  %676 = phi i8 addrspace(4)* [ %661, %622 ], [ %616, %620 ], [ %616, %662 ]\l  %677 = phi i32 [ %660, %622 ], [ 0, %620 ], [ 0, %662 ]\l  %678 = phi i64 [ %659, %622 ], [ 0, %620 ], [ %672, %662 ]\l  %679 = icmp ugt i32 %677, 7\l  br i1 %679, label %682, label %680\l|{<s0>T|<s1>F}}"];
	Node0x605e750:s0 -> Node0x60511b0;
	Node0x605e750:s1 -> Node0x6051200;
	Node0x6051200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%680:\l680:                                              \l  %681 = icmp eq i32 %677, 0\l  br i1 %681, label %735, label %722\l|{<s0>T|<s1>F}}"];
	Node0x6051200:s0 -> Node0x6051390;
	Node0x6051200:s1 -> Node0x60513e0;
	Node0x60511b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%682:\l682:                                              \l  %683 = load i8, i8 addrspace(4)* %676, align 1, !tbaa !8\l  %684 = zext i8 %683 to i64\l  %685 = getelementptr inbounds i8, i8 addrspace(4)* %676, i64 1\l  %686 = load i8, i8 addrspace(4)* %685, align 1, !tbaa !8\l  %687 = zext i8 %686 to i64\l  %688 = shl nuw nsw i64 %687, 8\l  %689 = or i64 %688, %684\l  %690 = getelementptr inbounds i8, i8 addrspace(4)* %676, i64 2\l  %691 = load i8, i8 addrspace(4)* %690, align 1, !tbaa !8\l  %692 = zext i8 %691 to i64\l  %693 = shl nuw nsw i64 %692, 16\l  %694 = or i64 %689, %693\l  %695 = getelementptr inbounds i8, i8 addrspace(4)* %676, i64 3\l  %696 = load i8, i8 addrspace(4)* %695, align 1, !tbaa !8\l  %697 = zext i8 %696 to i64\l  %698 = shl nuw nsw i64 %697, 24\l  %699 = or i64 %694, %698\l  %700 = getelementptr inbounds i8, i8 addrspace(4)* %676, i64 4\l  %701 = load i8, i8 addrspace(4)* %700, align 1, !tbaa !8\l  %702 = zext i8 %701 to i64\l  %703 = shl nuw nsw i64 %702, 32\l  %704 = or i64 %699, %703\l  %705 = getelementptr inbounds i8, i8 addrspace(4)* %676, i64 5\l  %706 = load i8, i8 addrspace(4)* %705, align 1, !tbaa !8\l  %707 = zext i8 %706 to i64\l  %708 = shl nuw nsw i64 %707, 40\l  %709 = or i64 %704, %708\l  %710 = getelementptr inbounds i8, i8 addrspace(4)* %676, i64 6\l  %711 = load i8, i8 addrspace(4)* %710, align 1, !tbaa !8\l  %712 = zext i8 %711 to i64\l  %713 = shl nuw nsw i64 %712, 48\l  %714 = or i64 %709, %713\l  %715 = getelementptr inbounds i8, i8 addrspace(4)* %676, i64 7\l  %716 = load i8, i8 addrspace(4)* %715, align 1, !tbaa !8\l  %717 = zext i8 %716 to i64\l  %718 = shl nuw i64 %717, 56\l  %719 = or i64 %714, %718\l  %720 = add nsw i32 %677, -8\l  %721 = getelementptr inbounds i8, i8 addrspace(4)* %676, i64 8\l  br label %735\l}"];
	Node0x60511b0 -> Node0x6051390;
	Node0x60513e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%722:\l722:                                              \l  %723 = phi i32 [ %733, %722 ], [ 0, %680 ]\l  %724 = phi i64 [ %732, %722 ], [ 0, %680 ]\l  %725 = zext i32 %723 to i64\l  %726 = getelementptr inbounds i8, i8 addrspace(4)* %676, i64 %725\l  %727 = load i8, i8 addrspace(4)* %726, align 1, !tbaa !8\l  %728 = zext i8 %727 to i64\l  %729 = shl i32 %723, 3\l  %730 = zext i32 %729 to i64\l  %731 = shl nuw i64 %728, %730\l  %732 = or i64 %731, %724\l  %733 = add nuw nsw i32 %723, 1\l  %734 = icmp eq i32 %733, %677\l  br i1 %734, label %735, label %722\l|{<s0>T|<s1>F}}"];
	Node0x60513e0:s0 -> Node0x6051390;
	Node0x60513e0:s1 -> Node0x60513e0;
	Node0x6051390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%735:\l735:                                              \l  %736 = phi i8 addrspace(4)* [ %721, %682 ], [ %676, %680 ], [ %676, %722 ]\l  %737 = phi i32 [ %720, %682 ], [ 0, %680 ], [ 0, %722 ]\l  %738 = phi i64 [ %719, %682 ], [ 0, %680 ], [ %732, %722 ]\l  %739 = icmp ugt i32 %737, 7\l  br i1 %739, label %742, label %740\l|{<s0>T|<s1>F}}"];
	Node0x6051390:s0 -> Node0x6064a20;
	Node0x6051390:s1 -> Node0x6064a70;
	Node0x6064a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%740:\l740:                                              \l  %741 = icmp eq i32 %737, 0\l  br i1 %741, label %795, label %782\l|{<s0>T|<s1>F}}"];
	Node0x6064a70:s0 -> Node0x6064c00;
	Node0x6064a70:s1 -> Node0x6064c50;
	Node0x6064a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%742:\l742:                                              \l  %743 = load i8, i8 addrspace(4)* %736, align 1, !tbaa !8\l  %744 = zext i8 %743 to i64\l  %745 = getelementptr inbounds i8, i8 addrspace(4)* %736, i64 1\l  %746 = load i8, i8 addrspace(4)* %745, align 1, !tbaa !8\l  %747 = zext i8 %746 to i64\l  %748 = shl nuw nsw i64 %747, 8\l  %749 = or i64 %748, %744\l  %750 = getelementptr inbounds i8, i8 addrspace(4)* %736, i64 2\l  %751 = load i8, i8 addrspace(4)* %750, align 1, !tbaa !8\l  %752 = zext i8 %751 to i64\l  %753 = shl nuw nsw i64 %752, 16\l  %754 = or i64 %749, %753\l  %755 = getelementptr inbounds i8, i8 addrspace(4)* %736, i64 3\l  %756 = load i8, i8 addrspace(4)* %755, align 1, !tbaa !8\l  %757 = zext i8 %756 to i64\l  %758 = shl nuw nsw i64 %757, 24\l  %759 = or i64 %754, %758\l  %760 = getelementptr inbounds i8, i8 addrspace(4)* %736, i64 4\l  %761 = load i8, i8 addrspace(4)* %760, align 1, !tbaa !8\l  %762 = zext i8 %761 to i64\l  %763 = shl nuw nsw i64 %762, 32\l  %764 = or i64 %759, %763\l  %765 = getelementptr inbounds i8, i8 addrspace(4)* %736, i64 5\l  %766 = load i8, i8 addrspace(4)* %765, align 1, !tbaa !8\l  %767 = zext i8 %766 to i64\l  %768 = shl nuw nsw i64 %767, 40\l  %769 = or i64 %764, %768\l  %770 = getelementptr inbounds i8, i8 addrspace(4)* %736, i64 6\l  %771 = load i8, i8 addrspace(4)* %770, align 1, !tbaa !8\l  %772 = zext i8 %771 to i64\l  %773 = shl nuw nsw i64 %772, 48\l  %774 = or i64 %769, %773\l  %775 = getelementptr inbounds i8, i8 addrspace(4)* %736, i64 7\l  %776 = load i8, i8 addrspace(4)* %775, align 1, !tbaa !8\l  %777 = zext i8 %776 to i64\l  %778 = shl nuw i64 %777, 56\l  %779 = or i64 %774, %778\l  %780 = add nsw i32 %737, -8\l  %781 = getelementptr inbounds i8, i8 addrspace(4)* %736, i64 8\l  br label %795\l}"];
	Node0x6064a20 -> Node0x6064c00;
	Node0x6064c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%782:\l782:                                              \l  %783 = phi i32 [ %793, %782 ], [ 0, %740 ]\l  %784 = phi i64 [ %792, %782 ], [ 0, %740 ]\l  %785 = zext i32 %783 to i64\l  %786 = getelementptr inbounds i8, i8 addrspace(4)* %736, i64 %785\l  %787 = load i8, i8 addrspace(4)* %786, align 1, !tbaa !8\l  %788 = zext i8 %787 to i64\l  %789 = shl i32 %783, 3\l  %790 = zext i32 %789 to i64\l  %791 = shl nuw i64 %788, %790\l  %792 = or i64 %791, %784\l  %793 = add nuw nsw i32 %783, 1\l  %794 = icmp eq i32 %793, %737\l  br i1 %794, label %795, label %782\l|{<s0>T|<s1>F}}"];
	Node0x6064c50:s0 -> Node0x6064c00;
	Node0x6064c50:s1 -> Node0x6064c50;
	Node0x6064c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%795:\l795:                                              \l  %796 = phi i8 addrspace(4)* [ %781, %742 ], [ %736, %740 ], [ %736, %782 ]\l  %797 = phi i32 [ %780, %742 ], [ 0, %740 ], [ 0, %782 ]\l  %798 = phi i64 [ %779, %742 ], [ 0, %740 ], [ %792, %782 ]\l  %799 = icmp ugt i32 %797, 7\l  br i1 %799, label %802, label %800\l|{<s0>T|<s1>F}}"];
	Node0x6064c00:s0 -> Node0x6066c70;
	Node0x6064c00:s1 -> Node0x6066cc0;
	Node0x6066cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%800:\l800:                                              \l  %801 = icmp eq i32 %797, 0\l  br i1 %801, label %855, label %842\l|{<s0>T|<s1>F}}"];
	Node0x6066cc0:s0 -> Node0x6066e50;
	Node0x6066cc0:s1 -> Node0x6066ea0;
	Node0x6066c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%802:\l802:                                              \l  %803 = load i8, i8 addrspace(4)* %796, align 1, !tbaa !8\l  %804 = zext i8 %803 to i64\l  %805 = getelementptr inbounds i8, i8 addrspace(4)* %796, i64 1\l  %806 = load i8, i8 addrspace(4)* %805, align 1, !tbaa !8\l  %807 = zext i8 %806 to i64\l  %808 = shl nuw nsw i64 %807, 8\l  %809 = or i64 %808, %804\l  %810 = getelementptr inbounds i8, i8 addrspace(4)* %796, i64 2\l  %811 = load i8, i8 addrspace(4)* %810, align 1, !tbaa !8\l  %812 = zext i8 %811 to i64\l  %813 = shl nuw nsw i64 %812, 16\l  %814 = or i64 %809, %813\l  %815 = getelementptr inbounds i8, i8 addrspace(4)* %796, i64 3\l  %816 = load i8, i8 addrspace(4)* %815, align 1, !tbaa !8\l  %817 = zext i8 %816 to i64\l  %818 = shl nuw nsw i64 %817, 24\l  %819 = or i64 %814, %818\l  %820 = getelementptr inbounds i8, i8 addrspace(4)* %796, i64 4\l  %821 = load i8, i8 addrspace(4)* %820, align 1, !tbaa !8\l  %822 = zext i8 %821 to i64\l  %823 = shl nuw nsw i64 %822, 32\l  %824 = or i64 %819, %823\l  %825 = getelementptr inbounds i8, i8 addrspace(4)* %796, i64 5\l  %826 = load i8, i8 addrspace(4)* %825, align 1, !tbaa !8\l  %827 = zext i8 %826 to i64\l  %828 = shl nuw nsw i64 %827, 40\l  %829 = or i64 %824, %828\l  %830 = getelementptr inbounds i8, i8 addrspace(4)* %796, i64 6\l  %831 = load i8, i8 addrspace(4)* %830, align 1, !tbaa !8\l  %832 = zext i8 %831 to i64\l  %833 = shl nuw nsw i64 %832, 48\l  %834 = or i64 %829, %833\l  %835 = getelementptr inbounds i8, i8 addrspace(4)* %796, i64 7\l  %836 = load i8, i8 addrspace(4)* %835, align 1, !tbaa !8\l  %837 = zext i8 %836 to i64\l  %838 = shl nuw i64 %837, 56\l  %839 = or i64 %834, %838\l  %840 = add nsw i32 %797, -8\l  %841 = getelementptr inbounds i8, i8 addrspace(4)* %796, i64 8\l  br label %855\l}"];
	Node0x6066c70 -> Node0x6066e50;
	Node0x6066ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%842:\l842:                                              \l  %843 = phi i32 [ %853, %842 ], [ 0, %800 ]\l  %844 = phi i64 [ %852, %842 ], [ 0, %800 ]\l  %845 = zext i32 %843 to i64\l  %846 = getelementptr inbounds i8, i8 addrspace(4)* %796, i64 %845\l  %847 = load i8, i8 addrspace(4)* %846, align 1, !tbaa !8\l  %848 = zext i8 %847 to i64\l  %849 = shl i32 %843, 3\l  %850 = zext i32 %849 to i64\l  %851 = shl nuw i64 %848, %850\l  %852 = or i64 %851, %844\l  %853 = add nuw nsw i32 %843, 1\l  %854 = icmp eq i32 %853, %797\l  br i1 %854, label %855, label %842\l|{<s0>T|<s1>F}}"];
	Node0x6066ea0:s0 -> Node0x6066e50;
	Node0x6066ea0:s1 -> Node0x6066ea0;
	Node0x6066e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%855:\l855:                                              \l  %856 = phi i8 addrspace(4)* [ %841, %802 ], [ %796, %800 ], [ %796, %842 ]\l  %857 = phi i32 [ %840, %802 ], [ 0, %800 ], [ 0, %842 ]\l  %858 = phi i64 [ %839, %802 ], [ 0, %800 ], [ %852, %842 ]\l  %859 = icmp ugt i32 %857, 7\l  br i1 %859, label %862, label %860\l|{<s0>T|<s1>F}}"];
	Node0x6066e50:s0 -> Node0x6068ec0;
	Node0x6066e50:s1 -> Node0x6068f10;
	Node0x6068f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%860:\l860:                                              \l  %861 = icmp eq i32 %857, 0\l  br i1 %861, label %913, label %900\l|{<s0>T|<s1>F}}"];
	Node0x6068f10:s0 -> Node0x6058070;
	Node0x6068f10:s1 -> Node0x60690a0;
	Node0x6068ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%862:\l862:                                              \l  %863 = load i8, i8 addrspace(4)* %856, align 1, !tbaa !8\l  %864 = zext i8 %863 to i64\l  %865 = getelementptr inbounds i8, i8 addrspace(4)* %856, i64 1\l  %866 = load i8, i8 addrspace(4)* %865, align 1, !tbaa !8\l  %867 = zext i8 %866 to i64\l  %868 = shl nuw nsw i64 %867, 8\l  %869 = or i64 %868, %864\l  %870 = getelementptr inbounds i8, i8 addrspace(4)* %856, i64 2\l  %871 = load i8, i8 addrspace(4)* %870, align 1, !tbaa !8\l  %872 = zext i8 %871 to i64\l  %873 = shl nuw nsw i64 %872, 16\l  %874 = or i64 %869, %873\l  %875 = getelementptr inbounds i8, i8 addrspace(4)* %856, i64 3\l  %876 = load i8, i8 addrspace(4)* %875, align 1, !tbaa !8\l  %877 = zext i8 %876 to i64\l  %878 = shl nuw nsw i64 %877, 24\l  %879 = or i64 %874, %878\l  %880 = getelementptr inbounds i8, i8 addrspace(4)* %856, i64 4\l  %881 = load i8, i8 addrspace(4)* %880, align 1, !tbaa !8\l  %882 = zext i8 %881 to i64\l  %883 = shl nuw nsw i64 %882, 32\l  %884 = or i64 %879, %883\l  %885 = getelementptr inbounds i8, i8 addrspace(4)* %856, i64 5\l  %886 = load i8, i8 addrspace(4)* %885, align 1, !tbaa !8\l  %887 = zext i8 %886 to i64\l  %888 = shl nuw nsw i64 %887, 40\l  %889 = or i64 %884, %888\l  %890 = getelementptr inbounds i8, i8 addrspace(4)* %856, i64 6\l  %891 = load i8, i8 addrspace(4)* %890, align 1, !tbaa !8\l  %892 = zext i8 %891 to i64\l  %893 = shl nuw nsw i64 %892, 48\l  %894 = or i64 %889, %893\l  %895 = getelementptr inbounds i8, i8 addrspace(4)* %856, i64 7\l  %896 = load i8, i8 addrspace(4)* %895, align 1, !tbaa !8\l  %897 = zext i8 %896 to i64\l  %898 = shl nuw i64 %897, 56\l  %899 = or i64 %894, %898\l  br label %913\l}"];
	Node0x6068ec0 -> Node0x6058070;
	Node0x60690a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%900:\l900:                                              \l  %901 = phi i32 [ %911, %900 ], [ 0, %860 ]\l  %902 = phi i64 [ %910, %900 ], [ 0, %860 ]\l  %903 = zext i32 %901 to i64\l  %904 = getelementptr inbounds i8, i8 addrspace(4)* %856, i64 %903\l  %905 = load i8, i8 addrspace(4)* %904, align 1, !tbaa !8\l  %906 = zext i8 %905 to i64\l  %907 = shl i32 %901, 3\l  %908 = zext i32 %907 to i64\l  %909 = shl nuw i64 %906, %908\l  %910 = or i64 %909, %902\l  %911 = add nuw nsw i32 %901, 1\l  %912 = icmp eq i32 %911, %857\l  br i1 %912, label %913, label %900\l|{<s0>T|<s1>F}}"];
	Node0x60690a0:s0 -> Node0x6058070;
	Node0x60690a0:s1 -> Node0x60690a0;
	Node0x6058070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%913:\l913:                                              \l  %914 = phi i64 [ %899, %862 ], [ 0, %860 ], [ %910, %900 ]\l  %915 = shl nuw nsw i64 %496, 2\l  %916 = add nuw nsw i64 %915, 28\l  %917 = and i64 %916, 480\l  %918 = and i64 %498, -225\l  %919 = or i64 %918, %917\l  %920 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %8,\l... i64 noundef %919, i64 noundef %558, i64 noundef %618, i64 noundef %678, i64\l... noundef %738, i64 noundef %798, i64 noundef %858, i64 noundef %914) #10\l  %921 = sub i64 %488, %496\l  %922 = getelementptr inbounds i8, i8 addrspace(4)* %489, i64 %496\l  %923 = icmp eq i64 %921, 0\l  br i1 %923, label %924, label %487\l|{<s0>T|<s1>F}}"];
	Node0x6058070:s0 -> Node0x6057840;
	Node0x6058070:s1 -> Node0x6057900;
	Node0x6057840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%924:\l924:                                              \l  %925 = phi \<2 x i64\> [ %482, %479 ], [ %920, %913 ]\l  %926 = extractelement \<2 x i64\> %925, i64 0\l  %927 = zext i32 %476 to i64\l  %928 = and i64 %926, -227\l  %929 = or i64 %928, 34\l  %930 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %8,\l... i64 noundef %929, i64 noundef %927, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %931\l}"];
	Node0x6057840 -> Node0x6056ce0;
	Node0x6056ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%931:\l931:                                              \l  ret void\l}"];
}
