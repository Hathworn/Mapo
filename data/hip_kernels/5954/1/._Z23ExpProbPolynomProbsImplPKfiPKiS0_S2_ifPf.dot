digraph "CFG for '_Z23ExpProbPolynomProbsImplPKfiPKiS0_S2_ifPf' function" {
	label="CFG for '_Z23ExpProbPolynomProbsImplPKfiPKiS0_S2_ifPf' function";

	Node0x49960d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = icmp ult i32 %9, %1\l  br i1 %10, label %11, label %224\l|{<s0>T|<s1>F}}"];
	Node0x49960d0:s0 -> Node0x4996f40;
	Node0x49960d0:s1 -> Node0x4996fd0;
	Node0x4996f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%11:\l11:                                               \l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = zext i32 %9 to i64\l  %14 = getelementptr inbounds float, float addrspace(1)* %0, i64 %13\l  %15 = getelementptr inbounds float, float addrspace(1)* %7, i64 %13\l  %16 = icmp slt i32 %12, %5\l  br i1 %16, label %17, label %224\l|{<s0>T|<s1>F}}"];
	Node0x4996f40:s0 -> Node0x4996160;
	Node0x4996f40:s1 -> Node0x4996fd0;
	Node0x4996160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%17:\l17:                                               \l  %18 = fneg contract float %6\l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr inbounds i8, i8 addrspace(4)* %19, i64 12\l  %21 = bitcast i8 addrspace(4)* %20 to i32 addrspace(4)*\l  %22 = load i32, i32 addrspace(4)* %21, align 4, !tbaa !5\l  %23 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !14, !invariant.load\l... !15\l  %26 = zext i16 %25 to i32\l  %27 = udiv i32 %22, %26\l  %28 = mul i32 %27, %26\l  %29 = icmp ugt i32 %22, %28\l  %30 = zext i1 %29 to i32\l  br label %31\l}"];
	Node0x4996160 -> Node0x49989b0;
	Node0x49989b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%31:\l31:                                               \l  %32 = phi i32 [ %12, %17 ], [ %222, %216 ]\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %36 = add nsw i32 %32, 1\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %37\l  %39 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %40 = sub nsw i32 %39, %35\l  %41 = icmp sgt i32 %40, 0\l  br i1 %41, label %42, label %101\l|{<s0>T|<s1>F}}"];
	Node0x49989b0:s0 -> Node0x4999fe0;
	Node0x49989b0:s1 -> Node0x499a070;
	Node0x4999fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%42:\l42:                                               \l  %43 = sext i32 %35 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %43\l  %45 = add i32 %35, 1\l  %46 = and i32 %40, 1\l  %47 = icmp eq i32 %39, %45\l  br i1 %47, label %50, label %48\l|{<s0>T|<s1>F}}"];
	Node0x4999fe0:s0 -> Node0x499a470;
	Node0x4999fe0:s1 -> Node0x499a4c0;
	Node0x499a4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%48:\l48:                                               \l  %49 = and i32 %40, -2\l  br label %104\l}"];
	Node0x499a4c0 -> Node0x499a6c0;
	Node0x499a470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%50:\l50:                                               \l  %51 = phi i1 [ undef, %42 ], [ %196, %195 ]\l  %52 = phi float [ undef, %42 ], [ %197, %195 ]\l  %53 = phi float [ 0.000000e+00, %42 ], [ %197, %195 ]\l  %54 = phi i1 [ false, %42 ], [ %196, %195 ]\l  %55 = phi i32 [ 0, %42 ], [ %198, %195 ]\l  %56 = icmp eq i32 %46, 0\l  %57 = select i1 %56, i1 true, i1 %54\l  %58 = select i1 %56, i1 %51, i1 true\l  %59 = select i1 %56, float %52, float %53\l  br i1 %57, label %101, label %60\l|{<s0>T|<s1>F}}"];
	Node0x499a470:s0 -> Node0x499a070;
	Node0x499a470:s1 -> Node0x499be00;
	Node0x499be00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%60:\l60:                                               \l  %61 = zext i32 %55 to i64\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %44, i64 %61\l  %63 = load i32, i32 addrspace(1)* %62, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %64 = mul nsw i32 %63, %1\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %14, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !20\l  %68 = fmul contract float %67, %18\l  %69 = fmul float %68, 0x3FF7154760000000\l  %70 = tail call float @llvm.rint.f32(float %69)\l  %71 = fcmp ogt float %68, 0x40562E4300000000\l  %72 = fcmp olt float %68, 0xC059D1DA00000000\l  %73 = fneg float %69\l  %74 = tail call float @llvm.fma.f32(float %68, float 0x3FF7154760000000,\l... float %73)\l  %75 = tail call float @llvm.fma.f32(float %68, float 0x3E54AE0BE0000000,\l... float %74)\l  %76 = fsub float %69, %70\l  %77 = fadd float %75, %76\l  %78 = tail call float @llvm.exp2.f32(float %77)\l  %79 = fptosi float %70 to i32\l  %80 = tail call float @llvm.amdgcn.ldexp.f32(float %78, i32 %79)\l  %81 = fsub contract float 1.000000e+00, %80\l  %82 = select i1 %72, float 1.000000e+00, float %81\l  %83 = select i1 %71, float 0xFFF0000000000000, float %82\l  %84 = tail call i1 @llvm.amdgcn.class.f32(float %83, i32 144)\l  %85 = select i1 %84, float 0x41F0000000000000, float 1.000000e+00\l  %86 = fmul float %83, %85\l  %87 = tail call float @llvm.log2.f32(float %86)\l  %88 = fmul float %87, 0x3FE62E42E0000000\l  %89 = tail call i1 @llvm.amdgcn.class.f32(float %87, i32 519)\l  %90 = fneg float %88\l  %91 = tail call float @llvm.fma.f32(float %87, float 0x3FE62E42E0000000,\l... float %90)\l  %92 = tail call float @llvm.fma.f32(float %87, float 0x3E6EFA39E0000000,\l... float %91)\l  %93 = fadd float %88, %92\l  %94 = select i1 %89, float %87, float %93\l  %95 = select i1 %84, float 0x40362E4300000000, float 0.000000e+00\l  %96 = fsub float %94, %95\l  %97 = tail call i1 @llvm.amdgcn.class.f32(float %96, i32 504)\l  %98 = xor i1 %97, true\l  %99 = select i1 %97, float %96, float -0.000000e+00\l  %100 = fadd contract float %53, %99\l  br label %101\l}"];
	Node0x499be00 -> Node0x499a070;
	Node0x499a070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%101:\l101:                                              \l  %102 = phi i1 [ false, %31 ], [ %58, %50 ], [ %98, %60 ]\l  %103 = phi float [ 0.000000e+00, %31 ], [ %59, %50 ], [ %100, %60 ]\l  br i1 %102, label %216, label %201\l|{<s0>T|<s1>F}}"];
	Node0x499a070:s0 -> Node0x4998ab0;
	Node0x499a070:s1 -> Node0x499ebb0;
	Node0x499a6c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%104:\l104:                                              \l  %105 = phi float [ 0.000000e+00, %48 ], [ %197, %195 ]\l  %106 = phi i1 [ false, %48 ], [ %196, %195 ]\l  %107 = phi i32 [ 0, %48 ], [ %198, %195 ]\l  %108 = phi i32 [ 0, %48 ], [ %199, %195 ]\l  br i1 %106, label %150, label %109\l|{<s0>T|<s1>F}}"];
	Node0x499a6c0:s0 -> Node0x499efa0;
	Node0x499a6c0:s1 -> Node0x499f030;
	Node0x499f030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%109:\l109:                                              \l  %110 = zext i32 %107 to i64\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %44, i64 %110\l  %112 = load i32, i32 addrspace(1)* %111, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %113 = mul nsw i32 %112, %1\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %14, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !20\l  %117 = fmul contract float %116, %18\l  %118 = fmul float %117, 0x3FF7154760000000\l  %119 = tail call float @llvm.rint.f32(float %118)\l  %120 = fcmp ogt float %117, 0x40562E4300000000\l  %121 = fcmp olt float %117, 0xC059D1DA00000000\l  %122 = fneg float %118\l  %123 = tail call float @llvm.fma.f32(float %117, float 0x3FF7154760000000,\l... float %122)\l  %124 = tail call float @llvm.fma.f32(float %117, float 0x3E54AE0BE0000000,\l... float %123)\l  %125 = fsub float %118, %119\l  %126 = fadd float %124, %125\l  %127 = tail call float @llvm.exp2.f32(float %126)\l  %128 = fptosi float %119 to i32\l  %129 = tail call float @llvm.amdgcn.ldexp.f32(float %127, i32 %128)\l  %130 = fsub contract float 1.000000e+00, %129\l  %131 = select i1 %121, float 1.000000e+00, float %130\l  %132 = select i1 %120, float 0xFFF0000000000000, float %131\l  %133 = tail call i1 @llvm.amdgcn.class.f32(float %132, i32 144)\l  %134 = select i1 %133, float 0x41F0000000000000, float 1.000000e+00\l  %135 = fmul float %132, %134\l  %136 = tail call float @llvm.log2.f32(float %135)\l  %137 = fmul float %136, 0x3FE62E42E0000000\l  %138 = tail call i1 @llvm.amdgcn.class.f32(float %136, i32 519)\l  %139 = fneg float %137\l  %140 = tail call float @llvm.fma.f32(float %136, float 0x3FE62E42E0000000,\l... float %139)\l  %141 = tail call float @llvm.fma.f32(float %136, float 0x3E6EFA39E0000000,\l... float %140)\l  %142 = fadd float %137, %141\l  %143 = select i1 %138, float %136, float %142\l  %144 = select i1 %133, float 0x40362E4300000000, float 0.000000e+00\l  %145 = fsub float %143, %144\l  %146 = tail call i1 @llvm.amdgcn.class.f32(float %145, i32 504)\l  %147 = xor i1 %146, true\l  %148 = select i1 %146, float %145, float -0.000000e+00\l  %149 = fadd contract float %105, %148\l  br label %150\l}"];
	Node0x499f030 -> Node0x499efa0;
	Node0x499efa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%150:\l150:                                              \l  %151 = phi i1 [ true, %104 ], [ %147, %109 ]\l  %152 = phi float [ %105, %104 ], [ %149, %109 ]\l  br i1 %151, label %195, label %153\l|{<s0>T|<s1>F}}"];
	Node0x499efa0:s0 -> Node0x499abd0;
	Node0x499efa0:s1 -> Node0x49a19f0;
	Node0x49a19f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%153:\l153:                                              \l  %154 = or i32 %107, 1\l  %155 = zext i32 %154 to i64\l  %156 = getelementptr inbounds i32, i32 addrspace(1)* %44, i64 %155\l  %157 = load i32, i32 addrspace(1)* %156, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %158 = mul nsw i32 %157, %1\l  %159 = sext i32 %158 to i64\l  %160 = getelementptr inbounds float, float addrspace(1)* %14, i64 %159\l  %161 = load float, float addrspace(1)* %160, align 4, !tbaa !20\l  %162 = fmul contract float %161, %18\l  %163 = fmul float %162, 0x3FF7154760000000\l  %164 = tail call float @llvm.rint.f32(float %163)\l  %165 = fcmp ogt float %162, 0x40562E4300000000\l  %166 = fcmp olt float %162, 0xC059D1DA00000000\l  %167 = fneg float %163\l  %168 = tail call float @llvm.fma.f32(float %162, float 0x3FF7154760000000,\l... float %167)\l  %169 = tail call float @llvm.fma.f32(float %162, float 0x3E54AE0BE0000000,\l... float %168)\l  %170 = fsub float %163, %164\l  %171 = fadd float %169, %170\l  %172 = tail call float @llvm.exp2.f32(float %171)\l  %173 = fptosi float %164 to i32\l  %174 = tail call float @llvm.amdgcn.ldexp.f32(float %172, i32 %173)\l  %175 = fsub contract float 1.000000e+00, %174\l  %176 = select i1 %166, float 1.000000e+00, float %175\l  %177 = select i1 %165, float 0xFFF0000000000000, float %176\l  %178 = tail call i1 @llvm.amdgcn.class.f32(float %177, i32 144)\l  %179 = select i1 %178, float 0x41F0000000000000, float 1.000000e+00\l  %180 = fmul float %177, %179\l  %181 = tail call float @llvm.log2.f32(float %180)\l  %182 = fmul float %181, 0x3FE62E42E0000000\l  %183 = tail call i1 @llvm.amdgcn.class.f32(float %181, i32 519)\l  %184 = fneg float %182\l  %185 = tail call float @llvm.fma.f32(float %181, float 0x3FE62E42E0000000,\l... float %184)\l  %186 = tail call float @llvm.fma.f32(float %181, float 0x3E6EFA39E0000000,\l... float %185)\l  %187 = fadd float %182, %186\l  %188 = select i1 %183, float %181, float %187\l  %189 = select i1 %178, float 0x40362E4300000000, float 0.000000e+00\l  %190 = fsub float %188, %189\l  %191 = tail call i1 @llvm.amdgcn.class.f32(float %190, i32 504)\l  %192 = xor i1 %191, true\l  %193 = select i1 %191, float %190, float -0.000000e+00\l  %194 = fadd contract float %152, %193\l  br label %195\l}"];
	Node0x49a19f0 -> Node0x499abd0;
	Node0x499abd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%195:\l195:                                              \l  %196 = phi i1 [ true, %150 ], [ %192, %153 ]\l  %197 = phi float [ %152, %150 ], [ %194, %153 ]\l  %198 = add nuw nsw i32 %107, 2\l  %199 = add i32 %108, 2\l  %200 = icmp eq i32 %199, %49\l  br i1 %200, label %50, label %104, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x499abd0:s0 -> Node0x499a470;
	Node0x499abd0:s1 -> Node0x499a6c0;
	Node0x499ebb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%201:\l201:                                              \l  %202 = fmul float %103, 0x3FF7154760000000\l  %203 = tail call float @llvm.rint.f32(float %202)\l  %204 = fcmp ogt float %103, 0x40562E4300000000\l  %205 = fcmp olt float %103, 0xC059D1DA00000000\l  %206 = fneg float %202\l  %207 = tail call float @llvm.fma.f32(float %103, float 0x3FF7154760000000,\l... float %206)\l  %208 = tail call float @llvm.fma.f32(float %103, float 0x3E54AE0BE0000000,\l... float %207)\l  %209 = fsub float %202, %203\l  %210 = fadd float %208, %209\l  %211 = tail call float @llvm.exp2.f32(float %210)\l  %212 = fptosi float %203 to i32\l  %213 = tail call float @llvm.amdgcn.ldexp.f32(float %211, i32 %212)\l  %214 = select i1 %205, float 0.000000e+00, float %213\l  %215 = select i1 %204, float 0x7FF0000000000000, float %214\l  br label %216\l}"];
	Node0x499ebb0 -> Node0x4998ab0;
	Node0x4998ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%216:\l216:                                              \l  %217 = phi float [ 0.000000e+00, %101 ], [ %215, %201 ]\l  %218 = mul nsw i32 %32, %1\l  %219 = sext i32 %218 to i64\l  %220 = getelementptr inbounds float, float addrspace(1)* %15, i64 %219\l  store float %217, float addrspace(1)* %220, align 4, !tbaa !20\l  %221 = add i32 %27, %32\l  %222 = add i32 %221, %30\l  %223 = icmp slt i32 %222, %5\l  br i1 %223, label %31, label %224, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4998ab0:s0 -> Node0x49989b0;
	Node0x4998ab0:s1 -> Node0x4996fd0;
	Node0x4996fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%224:\l224:                                              \l  ret void\l}"];
}
