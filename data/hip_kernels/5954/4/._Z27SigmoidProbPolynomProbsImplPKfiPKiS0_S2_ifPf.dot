digraph "CFG for '_Z27SigmoidProbPolynomProbsImplPKfiPKiS0_S2_ifPf' function" {
	label="CFG for '_Z27SigmoidProbPolynomProbsImplPKfiPKiS0_S2_ifPf' function";

	Node0x548e130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = icmp ult i32 %9, %1\l  br i1 %10, label %11, label %219\l|{<s0>T|<s1>F}}"];
	Node0x548e130:s0 -> Node0x548e0d0;
	Node0x548e130:s1 -> Node0x548efe0;
	Node0x548e0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%11:\l11:                                               \l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = zext i32 %9 to i64\l  %14 = getelementptr inbounds float, float addrspace(1)* %0, i64 %13\l  %15 = getelementptr inbounds float, float addrspace(1)* %7, i64 %13\l  %16 = icmp slt i32 %12, %5\l  br i1 %16, label %17, label %219\l|{<s0>T|<s1>F}}"];
	Node0x548e0d0:s0 -> Node0x548e1c0;
	Node0x548e0d0:s1 -> Node0x548efe0;
	Node0x548e1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%17:\l17:                                               \l  %18 = fneg contract float %6\l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr inbounds i8, i8 addrspace(4)* %19, i64 12\l  %21 = bitcast i8 addrspace(4)* %20 to i32 addrspace(4)*\l  %22 = load i32, i32 addrspace(4)* %21, align 4, !tbaa !5\l  %23 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !14, !invariant.load\l... !15\l  %26 = zext i16 %25 to i32\l  %27 = udiv i32 %22, %26\l  %28 = mul i32 %27, %26\l  %29 = icmp ugt i32 %22, %28\l  %30 = zext i1 %29 to i32\l  br label %31\l}"];
	Node0x548e1c0 -> Node0x54909c0;
	Node0x54909c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%31:\l31:                                               \l  %32 = phi i32 [ %12, %17 ], [ %121, %101 ]\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %36 = add nsw i32 %32, 1\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %37\l  %39 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %40 = sub nsw i32 %39, %35\l  %41 = icmp sgt i32 %40, 0\l  br i1 %41, label %42, label %101\l|{<s0>T|<s1>F}}"];
	Node0x54909c0:s0 -> Node0x5491ff0;
	Node0x54909c0:s1 -> Node0x5490ac0;
	Node0x5491ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%42:\l42:                                               \l  %43 = sext i32 %35 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %43\l  %45 = getelementptr inbounds float, float addrspace(1)* %3, i64 %43\l  %46 = add i32 %35, 1\l  %47 = and i32 %40, 1\l  %48 = icmp eq i32 %39, %46\l  br i1 %48, label %51, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5491ff0:s0 -> Node0x5492490;
	Node0x5491ff0:s1 -> Node0x54924e0;
	Node0x54924e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%49:\l49:                                               \l  %50 = and i32 %40, -2\l  br label %123\l}"];
	Node0x54924e0 -> Node0x54926e0;
	Node0x5492490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%51:\l51:                                               \l  %52 = phi float [ undef, %42 ], [ %215, %213 ]\l  %53 = phi float [ 0.000000e+00, %42 ], [ %215, %213 ]\l  %54 = phi i32 [ 0, %42 ], [ %216, %213 ]\l  %55 = icmp eq i32 %47, 0\l  br i1 %55, label %101, label %56\l|{<s0>T|<s1>F}}"];
	Node0x5492490:s0 -> Node0x5490ac0;
	Node0x5492490:s1 -> Node0x54939e0;
	Node0x54939e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%56:\l56:                                               \l  %57 = zext i32 %54 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %44, i64 %57\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %60 = getelementptr inbounds float, float addrspace(1)* %45, i64 %57\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !20\l  %62 = mul nsw i32 %59, %1\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %14, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !20\l  %66 = fsub contract float %65, %61\l  %67 = fmul contract float %66, %18\l  %68 = fmul float %67, 0x3FF7154760000000\l  %69 = tail call float @llvm.rint.f32(float %68)\l  %70 = fcmp ogt float %67, 0x40562E4300000000\l  %71 = fcmp olt float %67, 0xC059D1DA00000000\l  %72 = fneg float %68\l  %73 = tail call float @llvm.fma.f32(float %67, float 0x3FF7154760000000,\l... float %72)\l  %74 = tail call float @llvm.fma.f32(float %67, float 0x3E54AE0BE0000000,\l... float %73)\l  %75 = fsub float %68, %69\l  %76 = fadd float %74, %75\l  %77 = tail call float @llvm.exp2.f32(float %76)\l  %78 = fptosi float %69 to i32\l  %79 = tail call float @llvm.amdgcn.ldexp.f32(float %77, i32 %78)\l  %80 = fadd contract float %79, 1.000000e+00\l  %81 = select i1 %71, float 1.000000e+00, float %80\l  %82 = select i1 %70, float 0x7FF0000000000000, float %81\l  %83 = tail call i1 @llvm.amdgcn.class.f32(float %82, i32 504)\l  br i1 %83, label %84, label %98\l|{<s0>T|<s1>F}}"];
	Node0x54939e0:s0 -> Node0x5495df0;
	Node0x54939e0:s1 -> Node0x5495e80;
	Node0x5495df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%84:\l84:                                               \l  %85 = tail call i1 @llvm.amdgcn.class.f32(float %82, i32 144)\l  %86 = select i1 %85, float 0x41F0000000000000, float 1.000000e+00\l  %87 = fmul float %82, %86\l  %88 = tail call float @llvm.log2.f32(float %87)\l  %89 = fmul float %88, 0x3FE62E42E0000000\l  %90 = tail call i1 @llvm.amdgcn.class.f32(float %88, i32 519)\l  %91 = fneg float %89\l  %92 = tail call float @llvm.fma.f32(float %88, float 0x3FE62E42E0000000,\l... float %91)\l  %93 = tail call float @llvm.fma.f32(float %88, float 0x3E6EFA39E0000000,\l... float %92)\l  %94 = fadd float %89, %93\l  %95 = select i1 %90, float %88, float %94\l  %96 = select i1 %85, float 0x40362E4300000000, float 0.000000e+00\l  %97 = fsub float %95, %96\l  br label %98\l}"];
	Node0x5495df0 -> Node0x5495e80;
	Node0x5495e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%98:\l98:                                               \l  %99 = phi contract float [ %97, %84 ], [ %67, %56 ]\l  %100 = fsub contract float %53, %99\l  br label %101\l}"];
	Node0x5495e80 -> Node0x5490ac0;
	Node0x5490ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%101:\l101:                                              \l  %102 = phi float [ 0.000000e+00, %31 ], [ %52, %51 ], [ %100, %98 ]\l  %103 = fmul float %102, 0x3FF7154760000000\l  %104 = tail call float @llvm.rint.f32(float %103)\l  %105 = fcmp ogt float %102, 0x40562E4300000000\l  %106 = fcmp olt float %102, 0xC059D1DA00000000\l  %107 = fneg float %103\l  %108 = tail call float @llvm.fma.f32(float %102, float 0x3FF7154760000000,\l... float %107)\l  %109 = tail call float @llvm.fma.f32(float %102, float 0x3E54AE0BE0000000,\l... float %108)\l  %110 = fsub float %103, %104\l  %111 = fadd float %109, %110\l  %112 = tail call float @llvm.exp2.f32(float %111)\l  %113 = fptosi float %104 to i32\l  %114 = tail call float @llvm.amdgcn.ldexp.f32(float %112, i32 %113)\l  %115 = select i1 %106, float 0.000000e+00, float %114\l  %116 = select i1 %105, float 0x7FF0000000000000, float %115\l  %117 = mul nsw i32 %32, %1\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %15, i64 %118\l  store float %116, float addrspace(1)* %119, align 4, !tbaa !20\l  %120 = add i32 %27, %32\l  %121 = add i32 %120, %30\l  %122 = icmp slt i32 %121, %5\l  br i1 %122, label %31, label %219, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5490ac0:s0 -> Node0x54909c0;
	Node0x5490ac0:s1 -> Node0x548efe0;
	Node0x54926e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%123:\l123:                                              \l  %124 = phi float [ 0.000000e+00, %49 ], [ %215, %213 ]\l  %125 = phi i32 [ 0, %49 ], [ %216, %213 ]\l  %126 = phi i32 [ 0, %49 ], [ %217, %213 ]\l  %127 = zext i32 %125 to i64\l  %128 = getelementptr inbounds i32, i32 addrspace(1)* %44, i64 %127\l  %129 = load i32, i32 addrspace(1)* %128, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %130 = getelementptr inbounds float, float addrspace(1)* %45, i64 %127\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !20\l  %132 = mul nsw i32 %129, %1\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %14, i64 %133\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !20\l  %136 = fsub contract float %135, %131\l  %137 = fmul contract float %136, %18\l  %138 = fmul float %137, 0x3FF7154760000000\l  %139 = tail call float @llvm.rint.f32(float %138)\l  %140 = fcmp ogt float %137, 0x40562E4300000000\l  %141 = fcmp olt float %137, 0xC059D1DA00000000\l  %142 = fneg float %138\l  %143 = tail call float @llvm.fma.f32(float %137, float 0x3FF7154760000000,\l... float %142)\l  %144 = tail call float @llvm.fma.f32(float %137, float 0x3E54AE0BE0000000,\l... float %143)\l  %145 = fsub float %138, %139\l  %146 = fadd float %144, %145\l  %147 = tail call float @llvm.exp2.f32(float %146)\l  %148 = fptosi float %139 to i32\l  %149 = tail call float @llvm.amdgcn.ldexp.f32(float %147, i32 %148)\l  %150 = fadd contract float %149, 1.000000e+00\l  %151 = select i1 %141, float 1.000000e+00, float %150\l  %152 = select i1 %140, float 0x7FF0000000000000, float %151\l  %153 = tail call i1 @llvm.amdgcn.class.f32(float %152, i32 504)\l  br i1 %153, label %154, label %168\l|{<s0>T|<s1>F}}"];
	Node0x54926e0:s0 -> Node0x5499770;
	Node0x54926e0:s1 -> Node0x54997c0;
	Node0x5499770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%154:\l154:                                              \l  %155 = tail call i1 @llvm.amdgcn.class.f32(float %152, i32 144)\l  %156 = select i1 %155, float 0x41F0000000000000, float 1.000000e+00\l  %157 = fmul float %152, %156\l  %158 = tail call float @llvm.log2.f32(float %157)\l  %159 = fmul float %158, 0x3FE62E42E0000000\l  %160 = tail call i1 @llvm.amdgcn.class.f32(float %158, i32 519)\l  %161 = fneg float %159\l  %162 = tail call float @llvm.fma.f32(float %158, float 0x3FE62E42E0000000,\l... float %161)\l  %163 = tail call float @llvm.fma.f32(float %158, float 0x3E6EFA39E0000000,\l... float %162)\l  %164 = fadd float %159, %163\l  %165 = select i1 %160, float %158, float %164\l  %166 = select i1 %155, float 0x40362E4300000000, float 0.000000e+00\l  %167 = fsub float %165, %166\l  br label %168\l}"];
	Node0x5499770 -> Node0x54997c0;
	Node0x54997c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%168:\l168:                                              \l  %169 = phi contract float [ %167, %154 ], [ %137, %123 ]\l  %170 = fsub contract float %124, %169\l  %171 = or i32 %125, 1\l  %172 = zext i32 %171 to i64\l  %173 = getelementptr inbounds i32, i32 addrspace(1)* %44, i64 %172\l  %174 = load i32, i32 addrspace(1)* %173, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %175 = getelementptr inbounds float, float addrspace(1)* %45, i64 %172\l  %176 = load float, float addrspace(1)* %175, align 4, !tbaa !20\l  %177 = mul nsw i32 %174, %1\l  %178 = sext i32 %177 to i64\l  %179 = getelementptr inbounds float, float addrspace(1)* %14, i64 %178\l  %180 = load float, float addrspace(1)* %179, align 4, !tbaa !20\l  %181 = fsub contract float %180, %176\l  %182 = fmul contract float %181, %18\l  %183 = fmul float %182, 0x3FF7154760000000\l  %184 = tail call float @llvm.rint.f32(float %183)\l  %185 = fcmp ogt float %182, 0x40562E4300000000\l  %186 = fcmp olt float %182, 0xC059D1DA00000000\l  %187 = fneg float %183\l  %188 = tail call float @llvm.fma.f32(float %182, float 0x3FF7154760000000,\l... float %187)\l  %189 = tail call float @llvm.fma.f32(float %182, float 0x3E54AE0BE0000000,\l... float %188)\l  %190 = fsub float %183, %184\l  %191 = fadd float %189, %190\l  %192 = tail call float @llvm.exp2.f32(float %191)\l  %193 = fptosi float %184 to i32\l  %194 = tail call float @llvm.amdgcn.ldexp.f32(float %192, i32 %193)\l  %195 = fadd contract float %194, 1.000000e+00\l  %196 = select i1 %186, float 1.000000e+00, float %195\l  %197 = select i1 %185, float 0x7FF0000000000000, float %196\l  %198 = tail call i1 @llvm.amdgcn.class.f32(float %197, i32 504)\l  br i1 %198, label %199, label %213\l|{<s0>T|<s1>F}}"];
	Node0x54997c0:s0 -> Node0x549b730;
	Node0x54997c0:s1 -> Node0x5492bf0;
	Node0x549b730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%199:\l199:                                              \l  %200 = tail call i1 @llvm.amdgcn.class.f32(float %197, i32 144)\l  %201 = select i1 %200, float 0x41F0000000000000, float 1.000000e+00\l  %202 = fmul float %197, %201\l  %203 = tail call float @llvm.log2.f32(float %202)\l  %204 = fmul float %203, 0x3FE62E42E0000000\l  %205 = tail call i1 @llvm.amdgcn.class.f32(float %203, i32 519)\l  %206 = fneg float %204\l  %207 = tail call float @llvm.fma.f32(float %203, float 0x3FE62E42E0000000,\l... float %206)\l  %208 = tail call float @llvm.fma.f32(float %203, float 0x3E6EFA39E0000000,\l... float %207)\l  %209 = fadd float %204, %208\l  %210 = select i1 %205, float %203, float %209\l  %211 = select i1 %200, float 0x40362E4300000000, float 0.000000e+00\l  %212 = fsub float %210, %211\l  br label %213\l}"];
	Node0x549b730 -> Node0x5492bf0;
	Node0x5492bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%213:\l213:                                              \l  %214 = phi contract float [ %212, %199 ], [ %182, %168 ]\l  %215 = fsub contract float %170, %214\l  %216 = add nuw nsw i32 %125, 2\l  %217 = add i32 %126, 2\l  %218 = icmp eq i32 %217, %50\l  br i1 %218, label %51, label %123, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5492bf0:s0 -> Node0x5492490;
	Node0x5492bf0:s1 -> Node0x54926e0;
	Node0x548efe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%219:\l219:                                              \l  ret void\l}"];
}
