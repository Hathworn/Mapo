digraph "CFG for '_Z11MatrVectMulPiS_S_' function" {
	label="CFG for '_Z11MatrVectMulPiS_S_' function";

	Node0x5d264e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, 15000\l  br i1 %13, label %14, label %131\l|{<s0>T|<s1>F}}"];
	Node0x5d264e0:s0 -> Node0x5d283e0;
	Node0x5d264e0:s1 -> Node0x5d28470;
	Node0x5d283e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %15\l  store i32 0, i32 addrspace(1)* %16, align 4, !tbaa !7\l  br label %17\l}"];
	Node0x5d283e0 -> Node0x5d28960;
	Node0x5d28960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = phi i32 [ 0, %14 ], [ %128, %17 ]\l  %19 = phi i32 [ 0, %14 ], [ %129, %17 ]\l  %20 = mul nuw nsw i32 %19, 15000\l  %21 = add nsw i32 %20, %12\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %22\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !7\l  %25 = zext i32 %19 to i64\l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %25\l  %27 = load i32, i32 addrspace(1)* %26, align 4, !tbaa !7\l  %28 = mul nsw i32 %27, %24\l  %29 = add nsw i32 %18, %28\l  store i32 %29, i32 addrspace(1)* %16, align 4, !tbaa !7\l  %30 = or i32 %19, 1\l  %31 = mul nuw nsw i32 %30, 15000\l  %32 = add nsw i32 %31, %12\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7\l  %36 = zext i32 %30 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !7\l  %39 = mul nsw i32 %38, %35\l  %40 = add nsw i32 %29, %39\l  store i32 %40, i32 addrspace(1)* %16, align 4, !tbaa !7\l  %41 = add nuw nsw i32 %19, 2\l  %42 = mul nuw nsw i32 %41, 15000\l  %43 = add nsw i32 %42, %12\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7\l  %47 = zext i32 %41 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !7\l  %50 = mul nsw i32 %49, %46\l  %51 = add nsw i32 %40, %50\l  store i32 %51, i32 addrspace(1)* %16, align 4, !tbaa !7\l  %52 = add nuw nsw i32 %19, 3\l  %53 = mul nuw nsw i32 %52, 15000\l  %54 = add nsw i32 %53, %12\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %55\l  %57 = load i32, i32 addrspace(1)* %56, align 4, !tbaa !7\l  %58 = zext i32 %52 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %58\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !7\l  %61 = mul nsw i32 %60, %57\l  %62 = add nsw i32 %51, %61\l  store i32 %62, i32 addrspace(1)* %16, align 4, !tbaa !7\l  %63 = add nuw nsw i32 %19, 4\l  %64 = mul nuw nsw i32 %63, 15000\l  %65 = add nsw i32 %64, %12\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %66\l  %68 = load i32, i32 addrspace(1)* %67, align 4, !tbaa !7\l  %69 = zext i32 %63 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %69\l  %71 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !7\l  %72 = mul nsw i32 %71, %68\l  %73 = add nsw i32 %62, %72\l  store i32 %73, i32 addrspace(1)* %16, align 4, !tbaa !7\l  %74 = add nuw nsw i32 %19, 5\l  %75 = mul nuw nsw i32 %74, 15000\l  %76 = add nsw i32 %75, %12\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %77\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !7\l  %80 = zext i32 %74 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %80\l  %82 = load i32, i32 addrspace(1)* %81, align 4, !tbaa !7\l  %83 = mul nsw i32 %82, %79\l  %84 = add nsw i32 %73, %83\l  store i32 %84, i32 addrspace(1)* %16, align 4, !tbaa !7\l  %85 = add nuw nsw i32 %19, 6\l  %86 = mul nuw nsw i32 %85, 15000\l  %87 = add nsw i32 %86, %12\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %88\l  %90 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !7\l  %91 = zext i32 %85 to i64\l  %92 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %91\l  %93 = load i32, i32 addrspace(1)* %92, align 4, !tbaa !7\l  %94 = mul nsw i32 %93, %90\l  %95 = add nsw i32 %84, %94\l  store i32 %95, i32 addrspace(1)* %16, align 4, !tbaa !7\l  %96 = add nuw nsw i32 %19, 7\l  %97 = mul nuw nsw i32 %96, 15000\l  %98 = add nsw i32 %97, %12\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %99\l  %101 = load i32, i32 addrspace(1)* %100, align 4, !tbaa !7\l  %102 = zext i32 %96 to i64\l  %103 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %102\l  %104 = load i32, i32 addrspace(1)* %103, align 4, !tbaa !7\l  %105 = mul nsw i32 %104, %101\l  %106 = add nsw i32 %95, %105\l  store i32 %106, i32 addrspace(1)* %16, align 4, !tbaa !7\l  %107 = add nuw nsw i32 %19, 8\l  %108 = mul nuw nsw i32 %107, 15000\l  %109 = add nsw i32 %108, %12\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %110\l  %112 = load i32, i32 addrspace(1)* %111, align 4, !tbaa !7\l  %113 = zext i32 %107 to i64\l  %114 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %113\l  %115 = load i32, i32 addrspace(1)* %114, align 4, !tbaa !7\l  %116 = mul nsw i32 %115, %112\l  %117 = add nsw i32 %106, %116\l  store i32 %117, i32 addrspace(1)* %16, align 4, !tbaa !7\l  %118 = add nuw nsw i32 %19, 9\l  %119 = mul nuw nsw i32 %118, 15000\l  %120 = add nsw i32 %119, %12\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %121\l  %123 = load i32, i32 addrspace(1)* %122, align 4, !tbaa !7\l  %124 = zext i32 %118 to i64\l  %125 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %124\l  %126 = load i32, i32 addrspace(1)* %125, align 4, !tbaa !7\l  %127 = mul nsw i32 %126, %123\l  %128 = add nsw i32 %117, %127\l  store i32 %128, i32 addrspace(1)* %16, align 4, !tbaa !7\l  %129 = add nuw nsw i32 %19, 10\l  %130 = icmp eq i32 %129, 15000\l  br i1 %130, label %131, label %17, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5d28960:s0 -> Node0x5d28470;
	Node0x5d28960:s1 -> Node0x5d28960;
	Node0x5d28470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%131:\l131:                                              \l  ret void\l}"];
}
