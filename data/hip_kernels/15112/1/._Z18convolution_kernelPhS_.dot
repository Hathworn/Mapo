digraph "CFG for '_Z18convolution_kernelPhS_' function" {
	label="CFG for '_Z18convolution_kernelPhS_' function";

	Node0x4c66b10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = mul i32 %3, %8\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %12 = getelementptr i8, i8 addrspace(4)* %4, i64 6\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 2, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %11, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %18 = shl i32 %3, 1\l  %19 = xor i32 %18, -1\l  %20 = add i32 %10, %19\l  %21 = add i32 %20, %9\l  %22 = shl i32 %11, 1\l  %23 = xor i32 %22, -1\l  %24 = add i32 %17, %23\l  %25 = add i32 %24, %16\l  %26 = icmp slt i32 %21, 0\l  %27 = icmp eq i32 %21, 1920\l  %28 = select i1 %27, i32 1919, i32 %21\l  %29 = select i1 %26, i32 0, i32 %28\l  %30 = icmp slt i32 %25, 0\l  %31 = icmp eq i32 %25, 2520\l  %32 = mul nsw i32 %25, 1920\l  %33 = select i1 %31, i32 4836480, i32 %32\l  %34 = select i1 %30, i32 0, i32 %33\l  %35 = add nsw i32 %34, %29\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %36\l  %38 = load i8, i8 addrspace(1)* %37, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %39 = getelementptr inbounds [32 x [32 x i8]], [32 x [32 x i8]]\l... addrspace(3)* @_ZZ18convolution_kernelPhS_E2As, i32 0, i32 %10, i32 %17\l  store i8 %38, i8 addrspace(3)* %39, align 1, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  switch i32 %10, label %40 [\l    i32 0, label %85\l    i32 31, label %85\l  ]\l|{<s0>def|<s1>0|<s2>31}}"];
	Node0x4c66b10:s0 -> Node0x4c6bd90;
	Node0x4c66b10:s1 -> Node0x4c6be20;
	Node0x4c66b10:s2 -> Node0x4c6be20;
	Node0x4c6bd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%40:\l40:                                               \l  switch i32 %17, label %41 [\l    i32 0, label %85\l    i32 31, label %85\l  ]\l|{<s0>def|<s1>0|<s2>31}}"];
	Node0x4c6bd90:s0 -> Node0x4c6bfd0;
	Node0x4c6bd90:s1 -> Node0x4c6be20;
	Node0x4c6bd90:s2 -> Node0x4c6be20;
	Node0x4c6bfd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%41:\l41:                                               \l  %42 = add nsw i32 %10, -1\l  %43 = add nsw i32 %17, -1\l  %44 = getelementptr inbounds [32 x [32 x i8]], [32 x [32 x i8]]\l... addrspace(3)* @_ZZ18convolution_kernelPhS_E2As, i32 0, i32 %42, i32 %43\l  %45 = load i8, i8 addrspace(3)* %44, align 1, !tbaa !7\l  %46 = zext i8 %45 to i16\l  %47 = getelementptr inbounds [32 x [32 x i8]], [32 x [32 x i8]]\l... addrspace(3)* @_ZZ18convolution_kernelPhS_E2As, i32 0, i32 %10, i32 %43\l  %48 = load i8, i8 addrspace(3)* %47, align 1, !tbaa !7\l  %49 = zext i8 %48 to i16\l  %50 = add nuw nsw i32 %10, 1\l  %51 = getelementptr inbounds [32 x [32 x i8]], [32 x [32 x i8]]\l... addrspace(3)* @_ZZ18convolution_kernelPhS_E2As, i32 0, i32 %50, i32 %43\l  %52 = load i8, i8 addrspace(3)* %51, align 1, !tbaa !7\l  %53 = zext i8 %52 to i16\l  %54 = getelementptr inbounds [32 x [32 x i8]], [32 x [32 x i8]]\l... addrspace(3)* @_ZZ18convolution_kernelPhS_E2As, i32 0, i32 %42, i32 %17\l  %55 = load i8, i8 addrspace(3)* %54, align 1, !tbaa !7\l  %56 = zext i8 %55 to i16\l  %57 = load i8, i8 addrspace(3)* %39, align 1, !tbaa !7\l  %58 = zext i8 %57 to i16\l  %59 = shl nuw nsw i16 %58, 2\l  %60 = getelementptr inbounds [32 x [32 x i8]], [32 x [32 x i8]]\l... addrspace(3)* @_ZZ18convolution_kernelPhS_E2As, i32 0, i32 %50, i32 %17\l  %61 = load i8, i8 addrspace(3)* %60, align 1, !tbaa !7\l  %62 = zext i8 %61 to i16\l  %63 = add nuw nsw i32 %17, 1\l  %64 = getelementptr inbounds [32 x [32 x i8]], [32 x [32 x i8]]\l... addrspace(3)* @_ZZ18convolution_kernelPhS_E2As, i32 0, i32 %42, i32 %63\l  %65 = load i8, i8 addrspace(3)* %64, align 1, !tbaa !7\l  %66 = zext i8 %65 to i16\l  %67 = getelementptr inbounds [32 x [32 x i8]], [32 x [32 x i8]]\l... addrspace(3)* @_ZZ18convolution_kernelPhS_E2As, i32 0, i32 %10, i32 %63\l  %68 = load i8, i8 addrspace(3)* %67, align 1, !tbaa !7\l  %69 = zext i8 %68 to i16\l  %70 = getelementptr inbounds [32 x [32 x i8]], [32 x [32 x i8]]\l... addrspace(3)* @_ZZ18convolution_kernelPhS_E2As, i32 0, i32 %50, i32 %63\l  %71 = load i8, i8 addrspace(3)* %70, align 1, !tbaa !7\l  %72 = zext i8 %71 to i16\l  %73 = add nuw nsw i16 %56, %49\l  %74 = add nuw nsw i16 %73, %62\l  %75 = add nuw nsw i16 %74, %69\l  %76 = shl nuw nsw i16 %75, 1\l  %77 = add nuw nsw i16 %53, %46\l  %78 = add nuw nsw i16 %77, %59\l  %79 = add nuw nsw i16 %78, %66\l  %80 = add nuw nsw i16 %79, %72\l  %81 = add nuw nsw i16 %80, %76\l  %82 = lshr i16 %81, 4\l  %83 = trunc i16 %82 to i8\l  %84 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %36\l  store i8 %83, i8 addrspace(1)* %84, align 1, !tbaa !7\l  br label %85\l}"];
	Node0x4c6bfd0 -> Node0x4c6be20;
	Node0x4c6be20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  ret void\l}"];
}
