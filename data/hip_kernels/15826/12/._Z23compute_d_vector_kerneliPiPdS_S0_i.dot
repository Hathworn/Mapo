digraph "CFG for '_Z23compute_d_vector_kerneliPiPdS_S0_i' function" {
	label="CFG for '_Z23compute_d_vector_kerneliPiPdS_S0_i' function";

	Node0x4e35330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = add i32 %14, %7\l  %16 = icmp slt i32 %15, %0\l  br i1 %16, label %17, label %31\l|{<s0>T|<s1>F}}"];
	Node0x4e35330:s0 -> Node0x4e362b0;
	Node0x4e35330:s1 -> Node0x4e37330;
	Node0x4e362b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%17:\l17:                                               \l  %18 = sext i32 %15 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %21\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %24 = mul nsw i32 %23, %5\l  %25 = add nsw i32 %24, %23\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds double, double addrspace(1)* %4, i64 %26\l  %28 = load double, double addrspace(1)* %27, align 8, !tbaa !11,\l... !amdgpu.noclobber !6\l  %29 = fdiv contract double 1.000000e+00, %28\l  %30 = getelementptr inbounds double, double addrspace(1)* %2, i64 %21\l  store double %29, double addrspace(1)* %30, align 8, !tbaa !11\l  br label %31\l}"];
	Node0x4e362b0 -> Node0x4e37330;
	Node0x4e37330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  ret void\l}"];
}
