digraph "CFG for '_Z20compute_Gamma_kernelPdiiS_iiiS_iiiPiS_S_' function" {
	label="CFG for '_Z20compute_Gamma_kernelPdiiS_iiiS_iiiPiS_S_' function";

	Node0x5d24330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %17 = getelementptr i8, i8 addrspace(4)* %16, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %15, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %25 = getelementptr i8, i8 addrspace(4)* %16, i64 6\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 2, !range !4, !invariant.load !5\l  %28 = zext i16 %27 to i32\l  %29 = mul i32 %24, %28\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %31 = add i32 %29, %30\l  %32 = sub nsw i32 %5, %9\l  %33 = icmp slt i32 %23, %1\l  %34 = icmp slt i32 %31, %1\l  %35 = select i1 %33, i1 %34, i1 false\l  br i1 %35, label %36, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5d24330:s0 -> Node0x5d254b0;
	Node0x5d24330:s1 -> Node0x5d28bf0;
	Node0x5d254b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%36:\l36:                                               \l  %37 = sext i32 %23 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %37\l  %39 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %40 = sext i32 %31 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %40\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %43 = icmp slt i32 %42, %32\l  br i1 %43, label %44, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5d254b0:s0 -> Node0x5d298c0;
	Node0x5d254b0:s1 -> Node0x5d29950;
	Node0x5d298c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%44:\l44:                                               \l  %45 = icmp eq i32 %39, %42\l  %46 = select i1 %45, double 1.000000e+00, double 0.000000e+00\l  %47 = mul nsw i32 %42, %6\l  %48 = add nsw i32 %47, %39\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds double, double addrspace(1)* %3, i64 %49\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %52 = getelementptr inbounds double, double addrspace(1)* %12, i64 %40\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %54 = fmul contract double %51, %53\l  %55 = fsub contract double %54, %46\l  %56 = fadd contract double %53, -1.000000e+00\l  %57 = fdiv contract double %55, %56\l  br label %65\l}"];
	Node0x5d298c0 -> Node0x5d2b420;
	Node0x5d29950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%58:\l58:                                               \l  %59 = sub nsw i32 %42, %32\l  %60 = mul nsw i32 %59, %10\l  %61 = add nsw i32 %60, %39\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds double, double addrspace(1)* %7, i64 %62\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %65\l}"];
	Node0x5d29950 -> Node0x5d2b420;
	Node0x5d2b420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%65:\l65:                                               \l  %66 = phi double [ %57, %44 ], [ %64, %58 ]\l  %67 = mul nsw i32 %31, %2\l  %68 = add nsw i32 %67, %23\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds double, double addrspace(1)* %0, i64 %69\l  store double %66, double addrspace(1)* %70, align 8, !tbaa !11\l  br label %71\l}"];
	Node0x5d2b420 -> Node0x5d28bf0;
	Node0x5d28bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = icmp eq i32 %23, %31\l  %73 = select i1 %35, i1 %72, i1 false\l  br i1 %73, label %74, label %86\l|{<s0>T|<s1>F}}"];
	Node0x5d28bf0:s0 -> Node0x5d28a10;
	Node0x5d28bf0:s1 -> Node0x5d2c040;
	Node0x5d28a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%74:\l74:                                               \l  %75 = sext i32 %23 to i64\l  %76 = getelementptr inbounds double, double addrspace(1)* %13, i64 %75\l  %77 = load double, double addrspace(1)* %76, align 8, !tbaa !11\l  %78 = fadd contract double %77, -1.000000e+00\l  %79 = fdiv contract double %77, %78\l  %80 = mul nsw i32 %23, %2\l  %81 = add nsw i32 %80, %23\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds double, double addrspace(1)* %0, i64 %82\l  %84 = load double, double addrspace(1)* %83, align 8, !tbaa !11\l  %85 = fsub contract double %84, %79\l  store double %85, double addrspace(1)* %83, align 8, !tbaa !11\l  br label %86\l}"];
	Node0x5d28a10 -> Node0x5d2c040;
	Node0x5d2c040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  ret void\l}"];
}
