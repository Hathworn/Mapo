digraph "CFG for '_Z13kDotProduct_rPfS_S_j' function" {
	label="CFG for '_Z13kDotProduct_rPfS_S_j' function";

	Node0x60725a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 9\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = add i32 %6, %7\l  %9 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ13kDotProduct_rPfS_S_jE5shmem, i32 0, i32 %7\l  store float 0.000000e+00, float addrspace(3)* %9, align 4, !tbaa !5\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !9\l  %14 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !18, !invariant.load\l... !19\l  %17 = zext i16 %16 to i32\l  %18 = udiv i32 %13, %17\l  %19 = mul i32 %18, %17\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = shl i32 %22, 9\l  %24 = icmp ult i32 %8, %23\l  %25 = icmp ult i32 %8, %3\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %40\l|{<s0>T|<s1>F}}"];
	Node0x60725a0:s0 -> Node0x6075a50;
	Node0x60725a0:s1 -> Node0x6075ae0;
	Node0x6075a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi float [ %36, %27 ], [ 0.000000e+00, %4 ]\l  %29 = phi i32 [ %37, %27 ], [ %8, %4 ]\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !5,\l... !amdgpu.noclobber !19\l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !5,\l... !amdgpu.noclobber !19\l  %35 = fmul contract float %32, %34\l  %36 = fadd contract float %28, %35\l  %37 = add i32 %29, %23\l  %38 = icmp ult i32 %37, %3\l  br i1 %38, label %27, label %39, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x6075a50:s0 -> Node0x6075a50;
	Node0x6075a50:s1 -> Node0x60770c0;
	Node0x60770c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%39:\l39:                                               \l  store float %36, float addrspace(3)* %9, align 4, !tbaa !5\l  br label %40\l}"];
	Node0x60770c0 -> Node0x6075ae0;
	Node0x6075ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%40:\l40:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %41 = icmp ult i32 %7, 256\l  br i1 %41, label %42, label %48\l|{<s0>T|<s1>F}}"];
	Node0x6075ae0:s0 -> Node0x60776d0;
	Node0x6075ae0:s1 -> Node0x6077720;
	Node0x60776d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%42:\l42:                                               \l  %43 = add nuw nsw i32 %7, 256\l  %44 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ13kDotProduct_rPfS_S_jE5shmem, i32 0, i32 %43\l  %45 = load float, float addrspace(3)* %44, align 4, !tbaa !5\l  %46 = load float, float addrspace(3)* %9, align 4, !tbaa !5\l  %47 = fadd contract float %45, %46\l  store float %47, float addrspace(3)* %9, align 4, !tbaa !5\l  br label %48\l}"];
	Node0x60776d0 -> Node0x6077720;
	Node0x6077720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%48:\l48:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %49 = icmp ult i32 %7, 128\l  br i1 %49, label %50, label %56\l|{<s0>T|<s1>F}}"];
	Node0x6077720:s0 -> Node0x6077e30;
	Node0x6077720:s1 -> Node0x6077e80;
	Node0x6077e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%50:\l50:                                               \l  %51 = add nuw nsw i32 %7, 128\l  %52 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ13kDotProduct_rPfS_S_jE5shmem, i32 0, i32 %51\l  %53 = load float, float addrspace(3)* %52, align 4, !tbaa !5\l  %54 = load float, float addrspace(3)* %9, align 4, !tbaa !5\l  %55 = fadd contract float %53, %54\l  store float %55, float addrspace(3)* %9, align 4, !tbaa !5\l  br label %56\l}"];
	Node0x6077e30 -> Node0x6077e80;
	Node0x6077e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%56:\l56:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %57 = icmp ult i32 %7, 64\l  br i1 %57, label %58, label %64\l|{<s0>T|<s1>F}}"];
	Node0x6077e80:s0 -> Node0x6078570;
	Node0x6077e80:s1 -> Node0x60785c0;
	Node0x6078570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%58:\l58:                                               \l  %59 = add nuw nsw i32 %7, 64\l  %60 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ13kDotProduct_rPfS_S_jE5shmem, i32 0, i32 %59\l  %61 = load float, float addrspace(3)* %60, align 4, !tbaa !5\l  %62 = load float, float addrspace(3)* %9, align 4, !tbaa !5\l  %63 = fadd contract float %61, %62\l  store float %63, float addrspace(3)* %9, align 4, !tbaa !5\l  br label %64\l}"];
	Node0x6078570 -> Node0x60785c0;
	Node0x60785c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%64:\l64:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %65 = icmp ult i32 %7, 32\l  br i1 %65, label %66, label %103\l|{<s0>T|<s1>F}}"];
	Node0x60785c0:s0 -> Node0x6076db0;
	Node0x60785c0:s1 -> Node0x6078f10;
	Node0x6076db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%66:\l66:                                               \l  %67 = addrspacecast float addrspace(3)* %9 to float*\l  %68 = getelementptr inbounds float, float addrspace(3)* %9, i32 32\l  %69 = addrspacecast float addrspace(3)* %68 to float*\l  %70 = load volatile float, float* %69, align 4, !tbaa !5\l  %71 = load volatile float, float* %67, align 4, !tbaa !5\l  %72 = fadd contract float %70, %71\l  store volatile float %72, float* %67, align 4, !tbaa !5\l  %73 = getelementptr inbounds float, float addrspace(3)* %9, i32 16\l  %74 = addrspacecast float addrspace(3)* %73 to float*\l  %75 = load volatile float, float* %74, align 4, !tbaa !5\l  %76 = load volatile float, float* %67, align 4, !tbaa !5\l  %77 = fadd contract float %75, %76\l  store volatile float %77, float* %67, align 4, !tbaa !5\l  %78 = getelementptr inbounds float, float addrspace(3)* %9, i32 8\l  %79 = addrspacecast float addrspace(3)* %78 to float*\l  %80 = load volatile float, float* %79, align 4, !tbaa !5\l  %81 = load volatile float, float* %67, align 4, !tbaa !5\l  %82 = fadd contract float %80, %81\l  store volatile float %82, float* %67, align 4, !tbaa !5\l  %83 = getelementptr inbounds float, float addrspace(3)* %9, i32 4\l  %84 = addrspacecast float addrspace(3)* %83 to float*\l  %85 = load volatile float, float* %84, align 4, !tbaa !5\l  %86 = load volatile float, float* %67, align 4, !tbaa !5\l  %87 = fadd contract float %85, %86\l  store volatile float %87, float* %67, align 4, !tbaa !5\l  %88 = getelementptr inbounds float, float addrspace(3)* %9, i32 2\l  %89 = addrspacecast float addrspace(3)* %88 to float*\l  %90 = load volatile float, float* %89, align 4, !tbaa !5\l  %91 = load volatile float, float* %67, align 4, !tbaa !5\l  %92 = fadd contract float %90, %91\l  store volatile float %92, float* %67, align 4, !tbaa !5\l  %93 = getelementptr inbounds float, float addrspace(3)* %9, i32 1\l  %94 = addrspacecast float addrspace(3)* %93 to float*\l  %95 = load volatile float, float* %94, align 4, !tbaa !5\l  %96 = load volatile float, float* %67, align 4, !tbaa !5\l  %97 = fadd contract float %95, %96\l  store volatile float %97, float* %67, align 4, !tbaa !5\l  %98 = icmp eq i32 %7, 0\l  br i1 %98, label %99, label %103\l|{<s0>T|<s1>F}}"];
	Node0x6076db0:s0 -> Node0x607a490;
	Node0x6076db0:s1 -> Node0x6078f10;
	Node0x607a490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%99:\l99:                                               \l  %100 = load volatile float, float* %67, align 4, !tbaa !5\l  %101 = zext i32 %5 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %2, i64 %101\l  store float %100, float addrspace(1)* %102, align 4, !tbaa !5\l  br label %103\l}"];
	Node0x607a490 -> Node0x6078f10;
	Node0x6078f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%103:\l103:                                              \l  ret void\l}"];
}
