digraph "CFG for '_Z10FindMinMaxPfS_ii' function" {
	label="CFG for '_Z10FindMinMaxPfS_ii' function";

	Node0x6426f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = shl i32 %6, 8\l  %8 = ashr exact i32 %7, 1\l  %9 = add nsw i32 %8, %5\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = shl i32 %10, 8\l  %12 = ashr exact i32 %11, 8\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %19 = bitcast i8 addrspace(4)* %18 to i32 addrspace(4)*\l  %20 = load i32, i32 addrspace(4)* %19, align 4, !tbaa !7\l  %21 = shl i32 %10, 12\l  %22 = ashr exact i32 %21, 8\l  %23 = shl i32 %2, 8\l  %24 = ashr exact i32 %23, 8\l  %25 = mul nsw i32 %24, %22\l  %26 = add nsw i32 %25, %9\l  %27 = icmp slt i32 %9, %2\l  %28 = select i1 %27, i32 %26, i32 %25\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !16\l  %32 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ10FindMinMaxPfS_iiE7minvals, i32 0, i32 %5\l  store float %31, float addrspace(3)* %32, align 4\l  %33 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ10FindMinMaxPfS_iiE7maxvals, i32 0, i32 %5\l  store float %31, float addrspace(3)* %33, align 4\l  %34 = icmp slt i32 %5, %2\l  %35 = add nsw i32 %26, %2\l  br i1 %34, label %36, label %46\l|{<s0>T|<s1>F}}"];
	Node0x6426f60:s0 -> Node0x6429210;
	Node0x6426f60:s1 -> Node0x642a2d0;
	Node0x6429210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%36:\l36:                                               \l  %37 = sext i32 %35 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %40 = fcmp contract olt float %39, %31\l  br i1 %40, label %41, label %42\l|{<s0>T|<s1>F}}"];
	Node0x6429210:s0 -> Node0x642b240;
	Node0x6429210:s1 -> Node0x642b2d0;
	Node0x642b240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%41:\l41:                                               \l  store float %39, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %42\l}"];
	Node0x642b240 -> Node0x642b2d0;
	Node0x642b2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%42:\l42:                                               \l  %43 = phi float [ %39, %41 ], [ %31, %36 ]\l  %44 = fcmp contract ogt float %39, %31\l  br i1 %44, label %45, label %46\l|{<s0>T|<s1>F}}"];
	Node0x642b2d0:s0 -> Node0x642b650;
	Node0x642b2d0:s1 -> Node0x642a2d0;
	Node0x642b650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%45:\l45:                                               \l  store float %39, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %46\l}"];
	Node0x642b650 -> Node0x642a2d0;
	Node0x642a2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%46:\l46:                                               \l  %47 = phi float [ %31, %42 ], [ %39, %45 ], [ %31, %4 ]\l  %48 = phi float [ %43, %42 ], [ %43, %45 ], [ %31, %4 ]\l  %49 = add nsw i32 %35, %2\l  br i1 %34, label %50, label %60\l|{<s0>T|<s1>F}}"];
	Node0x642a2d0:s0 -> Node0x642ba80;
	Node0x642a2d0:s1 -> Node0x642bad0;
	Node0x642ba80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%50:\l50:                                               \l  %51 = sext i32 %49 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %54 = fcmp contract olt float %53, %48\l  br i1 %54, label %55, label %56\l|{<s0>T|<s1>F}}"];
	Node0x642ba80:s0 -> Node0x642bde0;
	Node0x642ba80:s1 -> Node0x642be30;
	Node0x642bde0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%55:\l55:                                               \l  store float %53, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %56\l}"];
	Node0x642bde0 -> Node0x642be30;
	Node0x642be30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%56:\l56:                                               \l  %57 = phi float [ %53, %55 ], [ %48, %50 ]\l  %58 = fcmp contract ogt float %53, %47\l  br i1 %58, label %59, label %60\l|{<s0>T|<s1>F}}"];
	Node0x642be30:s0 -> Node0x642c1b0;
	Node0x642be30:s1 -> Node0x642bad0;
	Node0x642c1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%59:\l59:                                               \l  store float %53, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %60\l}"];
	Node0x642c1b0 -> Node0x642bad0;
	Node0x642bad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%60:\l60:                                               \l  %61 = phi float [ %53, %59 ], [ %47, %56 ], [ %47, %46 ]\l  %62 = phi float [ %57, %59 ], [ %57, %56 ], [ %48, %46 ]\l  %63 = add nsw i32 %49, %2\l  br i1 %34, label %64, label %74\l|{<s0>T|<s1>F}}"];
	Node0x642bad0:s0 -> Node0x642c5e0;
	Node0x642bad0:s1 -> Node0x642c630;
	Node0x642c5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%64:\l64:                                               \l  %65 = sext i32 %63 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %68 = fcmp contract olt float %67, %62\l  br i1 %68, label %69, label %70\l|{<s0>T|<s1>F}}"];
	Node0x642c5e0:s0 -> Node0x642cb40;
	Node0x642c5e0:s1 -> Node0x642cb90;
	Node0x642cb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%69:\l69:                                               \l  store float %67, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %70\l}"];
	Node0x642cb40 -> Node0x642cb90;
	Node0x642cb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%70:\l70:                                               \l  %71 = phi float [ %67, %69 ], [ %62, %64 ]\l  %72 = fcmp contract ogt float %67, %61\l  br i1 %72, label %73, label %74\l|{<s0>T|<s1>F}}"];
	Node0x642cb90:s0 -> Node0x642cf10;
	Node0x642cb90:s1 -> Node0x642c630;
	Node0x642cf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%73:\l73:                                               \l  store float %67, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %74\l}"];
	Node0x642cf10 -> Node0x642c630;
	Node0x642c630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%74:\l74:                                               \l  %75 = phi float [ %67, %73 ], [ %61, %70 ], [ %61, %60 ]\l  %76 = phi float [ %71, %73 ], [ %71, %70 ], [ %62, %60 ]\l  %77 = add nsw i32 %63, %2\l  br i1 %34, label %78, label %88\l|{<s0>T|<s1>F}}"];
	Node0x642c630:s0 -> Node0x642d340;
	Node0x642c630:s1 -> Node0x642d390;
	Node0x642d340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%78:\l78:                                               \l  %79 = sext i32 %77 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %1, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %82 = fcmp contract olt float %81, %76\l  br i1 %82, label %83, label %84\l|{<s0>T|<s1>F}}"];
	Node0x642d340:s0 -> Node0x642d6a0;
	Node0x642d340:s1 -> Node0x642d6f0;
	Node0x642d6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%83:\l83:                                               \l  store float %81, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %84\l}"];
	Node0x642d6a0 -> Node0x642d6f0;
	Node0x642d6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%84:\l84:                                               \l  %85 = phi float [ %81, %83 ], [ %76, %78 ]\l  %86 = fcmp contract ogt float %81, %75\l  br i1 %86, label %87, label %88\l|{<s0>T|<s1>F}}"];
	Node0x642d6f0:s0 -> Node0x642da70;
	Node0x642d6f0:s1 -> Node0x642d390;
	Node0x642da70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%87:\l87:                                               \l  store float %81, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %88\l}"];
	Node0x642da70 -> Node0x642d390;
	Node0x642d390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%88:\l88:                                               \l  %89 = phi float [ %81, %87 ], [ %75, %84 ], [ %75, %74 ]\l  %90 = phi float [ %85, %87 ], [ %85, %84 ], [ %76, %74 ]\l  %91 = add nsw i32 %77, %2\l  br i1 %34, label %92, label %102\l|{<s0>T|<s1>F}}"];
	Node0x642d390:s0 -> Node0x642dea0;
	Node0x642d390:s1 -> Node0x642def0;
	Node0x642dea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%92:\l92:                                               \l  %93 = sext i32 %91 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %1, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %96 = fcmp contract olt float %95, %90\l  br i1 %96, label %97, label %98\l|{<s0>T|<s1>F}}"];
	Node0x642dea0:s0 -> Node0x642e200;
	Node0x642dea0:s1 -> Node0x642e250;
	Node0x642e200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%97:\l97:                                               \l  store float %95, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %98\l}"];
	Node0x642e200 -> Node0x642e250;
	Node0x642e250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%98:\l98:                                               \l  %99 = phi float [ %95, %97 ], [ %90, %92 ]\l  %100 = fcmp contract ogt float %95, %89\l  br i1 %100, label %101, label %102\l|{<s0>T|<s1>F}}"];
	Node0x642e250:s0 -> Node0x642e5d0;
	Node0x642e250:s1 -> Node0x642def0;
	Node0x642e5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%101:\l101:                                              \l  store float %95, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %102\l}"];
	Node0x642e5d0 -> Node0x642def0;
	Node0x642def0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%102:\l102:                                              \l  %103 = phi float [ %95, %101 ], [ %89, %98 ], [ %89, %88 ]\l  %104 = phi float [ %99, %101 ], [ %99, %98 ], [ %90, %88 ]\l  %105 = add nsw i32 %91, %2\l  br i1 %34, label %106, label %116\l|{<s0>T|<s1>F}}"];
	Node0x642def0:s0 -> Node0x642ea00;
	Node0x642def0:s1 -> Node0x642ea50;
	Node0x642ea00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%106:\l106:                                              \l  %107 = sext i32 %105 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %1, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %110 = fcmp contract olt float %109, %104\l  br i1 %110, label %111, label %112\l|{<s0>T|<s1>F}}"];
	Node0x642ea00:s0 -> Node0x642ed60;
	Node0x642ea00:s1 -> Node0x642edb0;
	Node0x642ed60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%111:\l111:                                              \l  store float %109, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %112\l}"];
	Node0x642ed60 -> Node0x642edb0;
	Node0x642edb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%112:\l112:                                              \l  %113 = phi float [ %109, %111 ], [ %104, %106 ]\l  %114 = fcmp contract ogt float %109, %103\l  br i1 %114, label %115, label %116\l|{<s0>T|<s1>F}}"];
	Node0x642edb0:s0 -> Node0x642f130;
	Node0x642edb0:s1 -> Node0x642ea50;
	Node0x642f130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%115:\l115:                                              \l  store float %109, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %116\l}"];
	Node0x642f130 -> Node0x642ea50;
	Node0x642ea50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%116:\l116:                                              \l  %117 = phi float [ %109, %115 ], [ %103, %112 ], [ %103, %102 ]\l  %118 = phi float [ %113, %115 ], [ %113, %112 ], [ %104, %102 ]\l  %119 = add nsw i32 %105, %2\l  br i1 %34, label %120, label %130\l|{<s0>T|<s1>F}}"];
	Node0x642ea50:s0 -> Node0x642f560;
	Node0x642ea50:s1 -> Node0x642f5b0;
	Node0x642f560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%120:\l120:                                              \l  %121 = sext i32 %119 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %1, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %124 = fcmp contract olt float %123, %118\l  br i1 %124, label %125, label %126\l|{<s0>T|<s1>F}}"];
	Node0x642f560:s0 -> Node0x642f8c0;
	Node0x642f560:s1 -> Node0x642f910;
	Node0x642f8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%125:\l125:                                              \l  store float %123, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %126\l}"];
	Node0x642f8c0 -> Node0x642f910;
	Node0x642f910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%126:\l126:                                              \l  %127 = phi float [ %123, %125 ], [ %118, %120 ]\l  %128 = fcmp contract ogt float %123, %117\l  br i1 %128, label %129, label %130\l|{<s0>T|<s1>F}}"];
	Node0x642f910:s0 -> Node0x642c730;
	Node0x642f910:s1 -> Node0x642f5b0;
	Node0x642c730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%129:\l129:                                              \l  store float %123, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %130\l}"];
	Node0x642c730 -> Node0x642f5b0;
	Node0x642f5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%130:\l130:                                              \l  %131 = phi float [ %123, %129 ], [ %117, %126 ], [ %117, %116 ]\l  %132 = phi float [ %127, %129 ], [ %127, %126 ], [ %118, %116 ]\l  %133 = add nsw i32 %119, %2\l  br i1 %34, label %134, label %144\l|{<s0>T|<s1>F}}"];
	Node0x642f5b0:s0 -> Node0x642cad0;
	Node0x642f5b0:s1 -> Node0x6430530;
	Node0x642cad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%134:\l134:                                              \l  %135 = sext i32 %133 to i64\l  %136 = getelementptr inbounds float, float addrspace(1)* %1, i64 %135\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %138 = fcmp contract olt float %137, %132\l  br i1 %138, label %139, label %140\l|{<s0>T|<s1>F}}"];
	Node0x642cad0:s0 -> Node0x6430840;
	Node0x642cad0:s1 -> Node0x6430890;
	Node0x6430840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%139:\l139:                                              \l  store float %137, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %140\l}"];
	Node0x6430840 -> Node0x6430890;
	Node0x6430890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%140:\l140:                                              \l  %141 = phi float [ %137, %139 ], [ %132, %134 ]\l  %142 = fcmp contract ogt float %137, %131\l  br i1 %142, label %143, label %144\l|{<s0>T|<s1>F}}"];
	Node0x6430890:s0 -> Node0x6430c10;
	Node0x6430890:s1 -> Node0x6430530;
	Node0x6430c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%143:\l143:                                              \l  store float %137, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %144\l}"];
	Node0x6430c10 -> Node0x6430530;
	Node0x6430530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%144:\l144:                                              \l  %145 = phi float [ %137, %143 ], [ %131, %140 ], [ %131, %130 ]\l  %146 = phi float [ %141, %143 ], [ %141, %140 ], [ %132, %130 ]\l  %147 = add nsw i32 %133, %2\l  br i1 %34, label %148, label %158\l|{<s0>T|<s1>F}}"];
	Node0x6430530:s0 -> Node0x6431040;
	Node0x6430530:s1 -> Node0x6431090;
	Node0x6431040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%148:\l148:                                              \l  %149 = sext i32 %147 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %1, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %152 = fcmp contract olt float %151, %146\l  br i1 %152, label %153, label %154\l|{<s0>T|<s1>F}}"];
	Node0x6431040:s0 -> Node0x64313a0;
	Node0x6431040:s1 -> Node0x64313f0;
	Node0x64313a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%153:\l153:                                              \l  store float %151, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %154\l}"];
	Node0x64313a0 -> Node0x64313f0;
	Node0x64313f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%154:\l154:                                              \l  %155 = phi float [ %151, %153 ], [ %146, %148 ]\l  %156 = fcmp contract ogt float %151, %145\l  br i1 %156, label %157, label %158\l|{<s0>T|<s1>F}}"];
	Node0x64313f0:s0 -> Node0x6431770;
	Node0x64313f0:s1 -> Node0x6431090;
	Node0x6431770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%157:\l157:                                              \l  store float %151, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %158\l}"];
	Node0x6431770 -> Node0x6431090;
	Node0x6431090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%158:\l158:                                              \l  %159 = phi float [ %151, %157 ], [ %145, %154 ], [ %145, %144 ]\l  %160 = phi float [ %155, %157 ], [ %155, %154 ], [ %146, %144 ]\l  %161 = add nsw i32 %147, %2\l  br i1 %34, label %162, label %172\l|{<s0>T|<s1>F}}"];
	Node0x6431090:s0 -> Node0x6431ba0;
	Node0x6431090:s1 -> Node0x6431bf0;
	Node0x6431ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%162:\l162:                                              \l  %163 = sext i32 %161 to i64\l  %164 = getelementptr inbounds float, float addrspace(1)* %1, i64 %163\l  %165 = load float, float addrspace(1)* %164, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %166 = fcmp contract olt float %165, %160\l  br i1 %166, label %167, label %168\l|{<s0>T|<s1>F}}"];
	Node0x6431ba0:s0 -> Node0x6431f00;
	Node0x6431ba0:s1 -> Node0x6431f50;
	Node0x6431f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%167:\l167:                                              \l  store float %165, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %168\l}"];
	Node0x6431f00 -> Node0x6431f50;
	Node0x6431f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%168:\l168:                                              \l  %169 = phi float [ %165, %167 ], [ %160, %162 ]\l  %170 = fcmp contract ogt float %165, %159\l  br i1 %170, label %171, label %172\l|{<s0>T|<s1>F}}"];
	Node0x6431f50:s0 -> Node0x64322d0;
	Node0x6431f50:s1 -> Node0x6431bf0;
	Node0x64322d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%171:\l171:                                              \l  store float %165, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %172\l}"];
	Node0x64322d0 -> Node0x6431bf0;
	Node0x6431bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%172:\l172:                                              \l  %173 = phi float [ %165, %171 ], [ %159, %168 ], [ %159, %158 ]\l  %174 = phi float [ %169, %171 ], [ %169, %168 ], [ %160, %158 ]\l  %175 = add nsw i32 %161, %2\l  br i1 %34, label %176, label %186\l|{<s0>T|<s1>F}}"];
	Node0x6431bf0:s0 -> Node0x6432700;
	Node0x6431bf0:s1 -> Node0x6432750;
	Node0x6432700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%176:\l176:                                              \l  %177 = sext i32 %175 to i64\l  %178 = getelementptr inbounds float, float addrspace(1)* %1, i64 %177\l  %179 = load float, float addrspace(1)* %178, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %180 = fcmp contract olt float %179, %174\l  br i1 %180, label %181, label %182\l|{<s0>T|<s1>F}}"];
	Node0x6432700:s0 -> Node0x6432a60;
	Node0x6432700:s1 -> Node0x6432ab0;
	Node0x6432a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%181:\l181:                                              \l  store float %179, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %182\l}"];
	Node0x6432a60 -> Node0x6432ab0;
	Node0x6432ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%182:\l182:                                              \l  %183 = phi float [ %179, %181 ], [ %174, %176 ]\l  %184 = fcmp contract ogt float %179, %173\l  br i1 %184, label %185, label %186\l|{<s0>T|<s1>F}}"];
	Node0x6432ab0:s0 -> Node0x6432e30;
	Node0x6432ab0:s1 -> Node0x6432750;
	Node0x6432e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%185:\l185:                                              \l  store float %179, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %186\l}"];
	Node0x6432e30 -> Node0x6432750;
	Node0x6432750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%186:\l186:                                              \l  %187 = phi float [ %179, %185 ], [ %173, %182 ], [ %173, %172 ]\l  %188 = phi float [ %183, %185 ], [ %183, %182 ], [ %174, %172 ]\l  %189 = add nsw i32 %175, %2\l  br i1 %34, label %190, label %200\l|{<s0>T|<s1>F}}"];
	Node0x6432750:s0 -> Node0x6433260;
	Node0x6432750:s1 -> Node0x64332b0;
	Node0x6433260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%190:\l190:                                              \l  %191 = sext i32 %189 to i64\l  %192 = getelementptr inbounds float, float addrspace(1)* %1, i64 %191\l  %193 = load float, float addrspace(1)* %192, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %194 = fcmp contract olt float %193, %188\l  br i1 %194, label %195, label %196\l|{<s0>T|<s1>F}}"];
	Node0x6433260:s0 -> Node0x64335c0;
	Node0x6433260:s1 -> Node0x6433610;
	Node0x64335c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%195:\l195:                                              \l  store float %193, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %196\l}"];
	Node0x64335c0 -> Node0x6433610;
	Node0x6433610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%196:\l196:                                              \l  %197 = phi float [ %193, %195 ], [ %188, %190 ]\l  %198 = fcmp contract ogt float %193, %187\l  br i1 %198, label %199, label %200\l|{<s0>T|<s1>F}}"];
	Node0x6433610:s0 -> Node0x6433990;
	Node0x6433610:s1 -> Node0x64332b0;
	Node0x6433990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%199:\l199:                                              \l  store float %193, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %200\l}"];
	Node0x6433990 -> Node0x64332b0;
	Node0x64332b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%200:\l200:                                              \l  %201 = phi float [ %193, %199 ], [ %187, %196 ], [ %187, %186 ]\l  %202 = phi float [ %197, %199 ], [ %197, %196 ], [ %188, %186 ]\l  %203 = add nsw i32 %189, %2\l  br i1 %34, label %204, label %214\l|{<s0>T|<s1>F}}"];
	Node0x64332b0:s0 -> Node0x6433dc0;
	Node0x64332b0:s1 -> Node0x6433e10;
	Node0x6433dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%204:\l204:                                              \l  %205 = sext i32 %203 to i64\l  %206 = getelementptr inbounds float, float addrspace(1)* %1, i64 %205\l  %207 = load float, float addrspace(1)* %206, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %208 = fcmp contract olt float %207, %202\l  br i1 %208, label %209, label %210\l|{<s0>T|<s1>F}}"];
	Node0x6433dc0:s0 -> Node0x6434120;
	Node0x6433dc0:s1 -> Node0x6434170;
	Node0x6434120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%209:\l209:                                              \l  store float %207, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %210\l}"];
	Node0x6434120 -> Node0x6434170;
	Node0x6434170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%210:\l210:                                              \l  %211 = phi float [ %207, %209 ], [ %202, %204 ]\l  %212 = fcmp contract ogt float %207, %201\l  br i1 %212, label %213, label %214\l|{<s0>T|<s1>F}}"];
	Node0x6434170:s0 -> Node0x64344f0;
	Node0x6434170:s1 -> Node0x6433e10;
	Node0x64344f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%213:\l213:                                              \l  store float %207, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %214\l}"];
	Node0x64344f0 -> Node0x6433e10;
	Node0x6433e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%214:\l214:                                              \l  %215 = phi float [ %207, %213 ], [ %201, %210 ], [ %201, %200 ]\l  %216 = phi float [ %211, %213 ], [ %211, %210 ], [ %202, %200 ]\l  %217 = add nsw i32 %203, %2\l  br i1 %34, label %218, label %228\l|{<s0>T|<s1>F}}"];
	Node0x6433e10:s0 -> Node0x6434920;
	Node0x6433e10:s1 -> Node0x6434970;
	Node0x6434920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%218:\l218:                                              \l  %219 = sext i32 %217 to i64\l  %220 = getelementptr inbounds float, float addrspace(1)* %1, i64 %219\l  %221 = load float, float addrspace(1)* %220, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %222 = fcmp contract olt float %221, %216\l  br i1 %222, label %223, label %224\l|{<s0>T|<s1>F}}"];
	Node0x6434920:s0 -> Node0x6434c80;
	Node0x6434920:s1 -> Node0x6434cd0;
	Node0x6434c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%223:\l223:                                              \l  store float %221, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %224\l}"];
	Node0x6434c80 -> Node0x6434cd0;
	Node0x6434cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%224:\l224:                                              \l  %225 = phi float [ %221, %223 ], [ %216, %218 ]\l  %226 = fcmp contract ogt float %221, %215\l  br i1 %226, label %227, label %228\l|{<s0>T|<s1>F}}"];
	Node0x6434cd0:s0 -> Node0x6435050;
	Node0x6434cd0:s1 -> Node0x6434970;
	Node0x6435050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%227:\l227:                                              \l  store float %221, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %228\l}"];
	Node0x6435050 -> Node0x6434970;
	Node0x6434970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%228:\l228:                                              \l  %229 = phi float [ %221, %227 ], [ %215, %224 ], [ %215, %214 ]\l  %230 = phi float [ %225, %227 ], [ %225, %224 ], [ %216, %214 ]\l  br i1 %34, label %231, label %241\l|{<s0>T|<s1>F}}"];
	Node0x6434970:s0 -> Node0x64353f0;
	Node0x6434970:s1 -> Node0x6435440;
	Node0x64353f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%231:\l231:                                              \l  %232 = add nsw i32 %217, %2\l  %233 = sext i32 %232 to i64\l  %234 = getelementptr inbounds float, float addrspace(1)* %1, i64 %233\l  %235 = load float, float addrspace(1)* %234, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %236 = fcmp contract olt float %235, %230\l  br i1 %236, label %237, label %238\l|{<s0>T|<s1>F}}"];
	Node0x64353f0:s0 -> Node0x64357e0;
	Node0x64353f0:s1 -> Node0x6435830;
	Node0x64357e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%237:\l237:                                              \l  store float %235, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %238\l}"];
	Node0x64357e0 -> Node0x6435830;
	Node0x6435830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%238:\l238:                                              \l  %239 = fcmp contract ogt float %235, %229\l  br i1 %239, label %240, label %241\l|{<s0>T|<s1>F}}"];
	Node0x6435830:s0 -> Node0x6427400;
	Node0x6435830:s1 -> Node0x6435440;
	Node0x6427400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%240:\l240:                                              \l  store float %235, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %241\l}"];
	Node0x6427400 -> Node0x6435440;
	Node0x6435440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%241:\l241:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %242 = icmp ugt i16 %16, 1\l  br i1 %242, label %245, label %243\l|{<s0>T|<s1>F}}"];
	Node0x6435440:s0 -> Node0x6427920;
	Node0x6435440:s1 -> Node0x6427970;
	Node0x6427970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%243:\l243:                                              \l  %244 = icmp eq i32 %5, 0\l  br i1 %244, label %268, label %286\l|{<s0>T|<s1>F}}"];
	Node0x6427970:s0 -> Node0x6427b00;
	Node0x6427970:s1 -> Node0x6427b50;
	Node0x6427920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%245:\l245:                                              \l  %246 = phi i32 [ %266, %263 ], [ 1, %241 ]\l  %247 = phi i32 [ %265, %263 ], [ 1, %241 ]\l  %248 = and i32 %247, %5\l  %249 = icmp eq i32 %248, 0\l  br i1 %249, label %250, label %263\l|{<s0>T|<s1>F}}"];
	Node0x6427920:s0 -> Node0x6437140;
	Node0x6427920:s1 -> Node0x6427cc0;
	Node0x6437140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%250:\l250:                                              \l  %251 = add nsw i32 %246, %5\l  %252 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ10FindMinMaxPfS_iiE7minvals, i32 0, i32 %251\l  %253 = load float, float addrspace(3)* %252, align 4, !tbaa !16\l  %254 = load float, float addrspace(3)* %32, align 4, !tbaa !16\l  %255 = fcmp contract olt float %253, %254\l  br i1 %255, label %256, label %257\l|{<s0>T|<s1>F}}"];
	Node0x6437140:s0 -> Node0x642a690;
	Node0x6437140:s1 -> Node0x642a6e0;
	Node0x642a690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%256:\l256:                                              \l  store float %253, float addrspace(3)* %32, align 4, !tbaa !16\l  br label %257\l}"];
	Node0x642a690 -> Node0x642a6e0;
	Node0x642a6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%257:\l257:                                              \l  %258 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ10FindMinMaxPfS_iiE7maxvals, i32 0, i32 %251\l  %259 = load float, float addrspace(3)* %258, align 4, !tbaa !16\l  %260 = load float, float addrspace(3)* %33, align 4, !tbaa !16\l  %261 = fcmp contract ogt float %259, %260\l  br i1 %261, label %262, label %263\l|{<s0>T|<s1>F}}"];
	Node0x642a6e0:s0 -> Node0x642ab50;
	Node0x642a6e0:s1 -> Node0x6427cc0;
	Node0x642ab50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%262:\l262:                                              \l  store float %259, float addrspace(3)* %33, align 4, !tbaa !16\l  br label %263\l}"];
	Node0x642ab50 -> Node0x6427cc0;
	Node0x6427cc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%263:\l263:                                              \l  %264 = shl nsw i32 %247, 1\l  %265 = add nuw nsw i32 %264, 1\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %266 = shl i32 %246, 1\l  %267 = icmp slt i32 %266, %17\l  br i1 %267, label %245, label %243, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x6427cc0:s0 -> Node0x6427920;
	Node0x6427cc0:s1 -> Node0x6427970;
	Node0x6427b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%268:\l268:                                              \l  %269 = udiv i32 %20, %17\l  %270 = mul i32 %269, %17\l  %271 = icmp ugt i32 %20, %270\l  %272 = zext i1 %271 to i32\l  %273 = add i32 %269, %272\l  %274 = shl i32 %273, 8\l  %275 = ashr exact i32 %274, 8\l  %276 = mul nsw i32 %275, %12\l  %277 = add i32 %276, %6\l  %278 = shl i32 %277, 1\l  %279 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)* @_ZZ10FindMinMaxPfS_iiE7minvals, i32 0,\l... i32 0), align 16, !tbaa !16\l  %280 = sext i32 %278 to i64\l  %281 = getelementptr inbounds float, float addrspace(1)* %0, i64 %280\l  store float %279, float addrspace(1)* %281, align 4, !tbaa !16\l  %282 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)* @_ZZ10FindMinMaxPfS_iiE7maxvals, i32 0,\l... i32 0), align 16, !tbaa !16\l  %283 = add nuw nsw i32 %278, 1\l  %284 = sext i32 %283 to i64\l  %285 = getelementptr inbounds float, float addrspace(1)* %0, i64 %284\l  store float %282, float addrspace(1)* %285, align 4, !tbaa !16\l  br label %286\l}"];
	Node0x6427b00 -> Node0x6427b50;
	Node0x6427b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%286:\l286:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
