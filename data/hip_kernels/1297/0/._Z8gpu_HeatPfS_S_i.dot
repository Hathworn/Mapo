digraph "CFG for '_Z8gpu_HeatPfS_S_i' function" {
	label="CFG for '_Z8gpu_HeatPfS_S_i' function";

	Node0x61df930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = add nsw i32 %3, -1\l  %23 = icmp slt i32 %21, %22\l  br i1 %23, label %24, label %64\l|{<s0>T|<s1>F}}"];
	Node0x61df930:s0 -> Node0x61e3320;
	Node0x61df930:s1 -> Node0x61e33b0;
	Node0x61e3320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%24:\l24:                                               \l  %25 = icmp slt i32 %13, %22\l  %26 = icmp sgt i32 %21, 0\l  %27 = select i1 %25, i1 %26, i1 false\l  %28 = icmp sgt i32 %13, 0\l  %29 = and i1 %28, %27\l  br i1 %29, label %30, label %64\l|{<s0>T|<s1>F}}"];
	Node0x61e3320:s0 -> Node0x61e3840;
	Node0x61e3320:s1 -> Node0x61e33b0;
	Node0x61e3840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%30:\l30:                                               \l  %31 = mul nsw i32 %21, %3\l  %32 = add i32 %31, %13\l  %33 = add nsw i32 %32, -1\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = add i32 %32, 1\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %41 = fadd contract float %36, %40\l  %42 = add nsw i32 %21, -1\l  %43 = mul nsw i32 %42, %3\l  %44 = add nsw i32 %43, %13\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fadd contract float %41, %47\l  %49 = add nuw nsw i32 %21, 1\l  %50 = mul nsw i32 %49, %3\l  %51 = add nsw i32 %50, %13\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %55 = fadd contract float %48, %54\l  %56 = fmul contract float %55, 2.500000e-01\l  %57 = sext i32 %32 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  store float %56, float addrspace(1)* %58, align 4, !tbaa !7\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7\l  %61 = fsub contract float %56, %60\l  %62 = fmul contract float %61, %61\l  %63 = getelementptr inbounds float, float addrspace(1)* %2, i64 %57\l  store float %62, float addrspace(1)* %63, align 4, !tbaa !7\l  br label %64\l}"];
	Node0x61e3840 -> Node0x61e33b0;
	Node0x61e33b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  ret void\l}"];
}
