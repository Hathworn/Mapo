digraph "CFG for '_Z20query_ball_point_gpuiiifiPKfS0_PiS1_' function" {
	label="CFG for '_Z20query_ball_point_gpuiiifiPKfS0_PiS1_' function";

	Node0x606b6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, 3\l  %12 = mul i32 %11, %1\l  %13 = sext i32 %12 to i64\l  %14 = getelementptr inbounds float, float addrspace(1)* %5, i64 %13\l  %15 = mul i32 %10, %2\l  %16 = mul i32 %15, 3\l  %17 = sext i32 %16 to i64\l  %18 = getelementptr inbounds float, float addrspace(1)* %6, i64 %17\l  %19 = mul i32 %15, %4\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %20\l  %22 = sext i32 %15 to i64\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %25 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %26 = getelementptr i8, i8 addrspace(4)* %25, i64 4\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 4, !range !5, !invariant.load !6\l  %29 = zext i16 %28 to i32\l  %30 = icmp slt i32 %24, %2\l  br i1 %30, label %31, label %57\l|{<s0>T|<s1>F}}"];
	Node0x606b6a0:s0 -> Node0x606e760;
	Node0x606b6a0:s1 -> Node0x606e7f0;
	Node0x606e760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%31:\l31:                                               \l  %32 = icmp slt i32 %1, 1\l  %33 = icmp eq i32 %4, 0\l  %34 = select i1 %32, i1 true, i1 %33\l  %35 = icmp slt i32 %4, 1\l  %36 = add i32 %4, -1\l  %37 = and i32 %4, 7\l  %38 = icmp ult i32 %36, 7\l  %39 = and i32 %4, -8\l  %40 = icmp eq i32 %37, 0\l  br label %41\l}"];
	Node0x606e760 -> Node0x606f070;
	Node0x606f070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%41:\l41:                                               \l  %42 = phi i32 [ %24, %31 ], [ %171, %167 ]\l  br i1 %34, label %167, label %43\l|{<s0>T|<s1>F}}"];
	Node0x606f070:s0 -> Node0x606f160;
	Node0x606f070:s1 -> Node0x606f2a0;
	Node0x606f2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%43:\l43:                                               \l  %44 = mul nsw i32 %42, 3\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %18, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %48 = add nuw nsw i32 %44, 1\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %18, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %52 = add nuw nsw i32 %44, 2\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %18, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %56 = mul nsw i32 %42, %4\l  br label %58\l}"];
	Node0x606f2a0 -> Node0x6070920;
	Node0x606e7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%57:\l57:                                               \l  ret void\l}"];
	Node0x6070920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%58:\l58:                                               \l  %59 = phi i32 [ 0, %43 ], [ %162, %161 ]\l  %60 = phi i32 [ 0, %43 ], [ %163, %161 ]\l  %61 = mul nuw nsw i32 %60, 3\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %14, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %65 = add nuw nsw i32 %61, 1\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %14, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %69 = add nuw nsw i32 %61, 2\l  %70 = zext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %14, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %73 = fsub contract float %47, %64\l  %74 = fmul contract float %73, %73\l  %75 = fsub contract float %51, %68\l  %76 = fmul contract float %75, %75\l  %77 = fadd contract float %74, %76\l  %78 = fsub contract float %55, %72\l  %79 = fmul contract float %78, %78\l  %80 = fadd contract float %77, %79\l  %81 = fcmp olt float %80, 0x39F0000000000000\l  %82 = select i1 %81, float 0x41F0000000000000, float 1.000000e+00\l  %83 = fmul float %80, %82\l  %84 = tail call float @llvm.sqrt.f32(float %83)\l  %85 = bitcast float %84 to i32\l  %86 = add nsw i32 %85, -1\l  %87 = bitcast i32 %86 to float\l  %88 = add nsw i32 %85, 1\l  %89 = bitcast i32 %88 to float\l  %90 = tail call i1 @llvm.amdgcn.class.f32(float %83, i32 608)\l  %91 = select i1 %81, float 0x3EF0000000000000, float 1.000000e+00\l  %92 = fneg float %89\l  %93 = tail call float @llvm.fma.f32(float %92, float %84, float %83)\l  %94 = fcmp ogt float %93, 0.000000e+00\l  %95 = fneg float %87\l  %96 = tail call float @llvm.fma.f32(float %95, float %84, float %83)\l  %97 = fcmp ole float %96, 0.000000e+00\l  %98 = select i1 %97, float %87, float %84\l  %99 = select i1 %94, float %89, float %98\l  %100 = fmul float %91, %99\l  %101 = select i1 %90, float %83, float %100\l  %102 = tail call float @llvm.maxnum.f32(float %101, float 0x3BC79CA100000000)\l  %103 = fcmp contract olt float %102, %3\l  br i1 %103, label %104, label %161\l|{<s0>T|<s1>F}}"];
	Node0x6070920:s0 -> Node0x6073a30;
	Node0x6070920:s1 -> Node0x6070a70;
	Node0x6073a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%104:\l104:                                              \l  %105 = icmp ne i32 %59, 0\l  %106 = select i1 %105, i1 true, i1 %35\l  br i1 %106, label %156, label %107\l|{<s0>T|<s1>F}}"];
	Node0x6073a30:s0 -> Node0x6073cb0;
	Node0x6073a30:s1 -> Node0x6073d00;
	Node0x6073d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%107:\l107:                                              \l  br i1 %38, label %145, label %108\l|{<s0>T|<s1>F}}"];
	Node0x6073d00:s0 -> Node0x6073e40;
	Node0x6073d00:s1 -> Node0x6073e90;
	Node0x6073e90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%108:\l108:                                              \l  %109 = phi i32 [ %142, %108 ], [ 0, %107 ]\l  %110 = phi i32 [ %143, %108 ], [ 0, %107 ]\l  %111 = add nsw i32 %109, %56\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %112\l  store i32 %60, i32 addrspace(1)* %113, align 4, !tbaa !11\l  %114 = or i32 %109, 1\l  %115 = add nsw i32 %114, %56\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %116\l  store i32 %60, i32 addrspace(1)* %117, align 4, !tbaa !11\l  %118 = or i32 %109, 2\l  %119 = add nsw i32 %118, %56\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %120\l  store i32 %60, i32 addrspace(1)* %121, align 4, !tbaa !11\l  %122 = or i32 %109, 3\l  %123 = add nsw i32 %122, %56\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %124\l  store i32 %60, i32 addrspace(1)* %125, align 4, !tbaa !11\l  %126 = or i32 %109, 4\l  %127 = add nsw i32 %126, %56\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %128\l  store i32 %60, i32 addrspace(1)* %129, align 4, !tbaa !11\l  %130 = or i32 %109, 5\l  %131 = add nsw i32 %130, %56\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %132\l  store i32 %60, i32 addrspace(1)* %133, align 4, !tbaa !11\l  %134 = or i32 %109, 6\l  %135 = add nsw i32 %134, %56\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %136\l  store i32 %60, i32 addrspace(1)* %137, align 4, !tbaa !11\l  %138 = or i32 %109, 7\l  %139 = add nsw i32 %138, %56\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %140\l  store i32 %60, i32 addrspace(1)* %141, align 4, !tbaa !11\l  %142 = add nuw nsw i32 %109, 8\l  %143 = add i32 %110, 8\l  %144 = icmp eq i32 %143, %39\l  br i1 %144, label %145, label %108, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x6073e90:s0 -> Node0x6073e40;
	Node0x6073e90:s1 -> Node0x6073e90;
	Node0x6073e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%145:\l145:                                              \l  %146 = phi i32 [ 0, %107 ], [ %142, %108 ]\l  br i1 %40, label %156, label %147\l|{<s0>T|<s1>F}}"];
	Node0x6073e40:s0 -> Node0x6073cb0;
	Node0x6073e40:s1 -> Node0x6076740;
	Node0x6076740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%147:\l147:                                              \l  %148 = phi i32 [ %153, %147 ], [ %146, %145 ]\l  %149 = phi i32 [ %154, %147 ], [ 0, %145 ]\l  %150 = add nsw i32 %148, %56\l  %151 = sext i32 %150 to i64\l  %152 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %151\l  store i32 %60, i32 addrspace(1)* %152, align 4, !tbaa !11\l  %153 = add nuw nsw i32 %148, 1\l  %154 = add i32 %149, 1\l  %155 = icmp eq i32 %154, %37\l  br i1 %155, label %156, label %147, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x6076740:s0 -> Node0x6073cb0;
	Node0x6076740:s1 -> Node0x6076740;
	Node0x6073cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%156:\l156:                                              \l  %157 = add nsw i32 %59, %56\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %158\l  store i32 %60, i32 addrspace(1)* %159, align 4, !tbaa !11\l  %160 = add nsw i32 %59, 1\l  br label %161\l}"];
	Node0x6073cb0 -> Node0x6070a70;
	Node0x6070a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%161:\l161:                                              \l  %162 = phi i32 [ %160, %156 ], [ %59, %58 ]\l  %163 = add nuw nsw i32 %60, 1\l  %164 = icmp sge i32 %163, %1\l  %165 = icmp eq i32 %162, %4\l  %166 = select i1 %164, i1 true, i1 %165\l  br i1 %166, label %167, label %58, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x6070a70:s0 -> Node0x606f160;
	Node0x6070a70:s1 -> Node0x6070920;
	Node0x606f160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%167:\l167:                                              \l  %168 = phi i32 [ 0, %41 ], [ %162, %161 ]\l  %169 = zext i32 %42 to i64\l  %170 = getelementptr inbounds i32, i32 addrspace(1)* %23, i64 %169\l  store i32 %168, i32 addrspace(1)* %170, align 4, !tbaa !11\l  %171 = add nuw nsw i32 %42, %29\l  %172 = icmp slt i32 %171, %2\l  br i1 %172, label %41, label %57, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x606f160:s0 -> Node0x606f070;
	Node0x606f160:s1 -> Node0x606e7f0;
}
