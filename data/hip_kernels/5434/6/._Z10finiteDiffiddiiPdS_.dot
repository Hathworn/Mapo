digraph "CFG for '_Z10finiteDiffiddiiPdS_' function" {
	label="CFG for '_Z10finiteDiffiddiiPdS_' function";

	Node0x554cab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !6\l  %17 = mul i32 %8, %13\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %19 = add i32 %17, %18\l  %20 = udiv i32 %16, %13\l  %21 = mul i32 %20, %13\l  %22 = icmp ugt i32 %16, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %13\l  %26 = icmp sgt i32 %3, 0\l  br i1 %26, label %27, label %36\l|{<s0>T|<s1>F}}"];
	Node0x554cab0:s0 -> Node0x554efe0;
	Node0x554cab0:s1 -> Node0x554f070;
	Node0x554efe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%27:\l27:                                               \l  %28 = icmp slt i32 %19, %4\l  %29 = add nsw i32 %19, 1\l  %30 = icmp slt i32 %29, %4\l  %31 = sitofp i32 %0 to double\l  %32 = fmul contract double %31, %1\l  %33 = fdiv contract double %32, %2\l  br label %34\l}"];
	Node0x554efe0 -> Node0x554e7b0;
	Node0x554e7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%34:\l34:                                               \l  %35 = phi i32 [ 0, %27 ], [ %47, %46 ]\l  br i1 %28, label %38, label %37\l|{<s0>T|<s1>F}}"];
	Node0x554e7b0:s0 -> Node0x554f850;
	Node0x554e7b0:s1 -> Node0x554f8e0;
	Node0x554f070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%36:\l36:                                               \l  ret void\l}"];
	Node0x554f8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%37:\l37:                                               \l  br i1 %30, label %49, label %46\l|{<s0>T|<s1>F}}"];
	Node0x554f8e0:s0 -> Node0x554fa70;
	Node0x554f8e0:s1 -> Node0x554f710;
	Node0x554f850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i32 [ %44, %38 ], [ %19, %34 ]\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds double, double addrspace(1)* %5, i64 %40\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !16\l  %43 = getelementptr inbounds double, double addrspace(1)* %6, i64 %40\l  store double %42, double addrspace(1)* %43, align 8, !tbaa !16\l  %44 = add nsw i32 %39, %25\l  %45 = icmp slt i32 %44, %4\l  br i1 %45, label %38, label %37, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x554f850:s0 -> Node0x554f850;
	Node0x554f850:s1 -> Node0x554f8e0;
	Node0x554f710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%46:\l46:                                               \l  %47 = add nuw nsw i32 %35, 1\l  %48 = icmp eq i32 %47, %3\l  br i1 %48, label %36, label %34, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x554f710:s0 -> Node0x554f070;
	Node0x554f710:s1 -> Node0x554e7b0;
	Node0x554fa70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = phi i32 [ %62, %49 ], [ %29, %37 ]\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds double, double addrspace(1)* %6, i64 %51\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !16\l  %54 = add nsw i32 %50, -1\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds double, double addrspace(1)* %6, i64 %55\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !16\l  %58 = fsub contract double %53, %57\l  %59 = fmul contract double %33, %58\l  %60 = fsub contract double %53, %59\l  %61 = getelementptr inbounds double, double addrspace(1)* %5, i64 %51\l  store double %60, double addrspace(1)* %61, align 8, !tbaa !16\l  %62 = add nsw i32 %50, %25\l  %63 = icmp slt i32 %62, %4\l  br i1 %63, label %49, label %46, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x554fa70:s0 -> Node0x554fa70;
	Node0x554fa70:s1 -> Node0x554f710;
}
