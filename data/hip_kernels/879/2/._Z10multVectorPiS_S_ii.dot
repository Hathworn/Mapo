digraph "CFG for '_Z10multVectorPiS_S_ii' function" {
	label="CFG for '_Z10multVectorPiS_S_ii' function";

	Node0x503be90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %11, %10\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = icmp slt i32 %14, %4\l  br i1 %15, label %16, label %96\l|{<s0>T|<s1>F}}"];
	Node0x503be90:s0 -> Node0x503dd50;
	Node0x503be90:s1 -> Node0x503dde0;
	Node0x503dd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%16:\l16:                                               \l  %17 = sext i32 %14 to i64\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %17\l  store i32 0, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %19 = icmp sgt i32 %3, 0\l  br i1 %19, label %20, label %96\l|{<s0>T|<s1>F}}"];
	Node0x503dd50:s0 -> Node0x503e320;
	Node0x503dd50:s1 -> Node0x503dde0;
	Node0x503e320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%20:\l20:                                               \l  %21 = and i32 %3, 3\l  %22 = icmp ult i32 %3, 4\l  br i1 %22, label %75, label %23\l|{<s0>T|<s1>F}}"];
	Node0x503e320:s0 -> Node0x503e5b0;
	Node0x503e320:s1 -> Node0x503e600;
	Node0x503e600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%23:\l23:                                               \l  %24 = and i32 %3, -4\l  br label %25\l}"];
	Node0x503e600 -> Node0x503e800;
	Node0x503e800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%25:\l25:                                               \l  %26 = phi i32 [ 0, %23 ], [ %71, %25 ]\l  %27 = phi i32 [ 0, %23 ], [ %72, %25 ]\l  %28 = phi i32 [ 0, %23 ], [ %73, %25 ]\l  %29 = zext i32 %27 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7\l  %32 = mul nsw i32 %27, %4\l  %33 = add nsw i32 %32, %14\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %34\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !7\l  %37 = mul nsw i32 %36, %31\l  %38 = add nsw i32 %26, %37\l  store i32 %38, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %39 = or i32 %27, 1\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %40\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !7\l  %43 = mul nsw i32 %39, %4\l  %44 = add nsw i32 %43, %14\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %45\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !7\l  %48 = mul nsw i32 %47, %42\l  %49 = add nsw i32 %38, %48\l  store i32 %49, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %50 = or i32 %27, 2\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !7\l  %54 = mul nsw i32 %50, %4\l  %55 = add nsw i32 %54, %14\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %56\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !7\l  %59 = mul nsw i32 %58, %53\l  %60 = add nsw i32 %49, %59\l  store i32 %60, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %61 = or i32 %27, 3\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %62\l  %64 = load i32, i32 addrspace(1)* %63, align 4, !tbaa !7\l  %65 = mul nsw i32 %61, %4\l  %66 = add nsw i32 %65, %14\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !7\l  %70 = mul nsw i32 %69, %64\l  %71 = add nsw i32 %60, %70\l  store i32 %71, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %72 = add nuw nsw i32 %27, 4\l  %73 = add i32 %28, 4\l  %74 = icmp eq i32 %73, %24\l  br i1 %74, label %75, label %25, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x503e800:s0 -> Node0x503e5b0;
	Node0x503e800:s1 -> Node0x503e800;
	Node0x503e5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%75:\l75:                                               \l  %76 = phi i32 [ 0, %20 ], [ %71, %25 ]\l  %77 = phi i32 [ 0, %20 ], [ %72, %25 ]\l  %78 = icmp eq i32 %21, 0\l  br i1 %78, label %96, label %79\l|{<s0>T|<s1>F}}"];
	Node0x503e5b0:s0 -> Node0x503dde0;
	Node0x503e5b0:s1 -> Node0x5041360;
	Node0x5041360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  %80 = phi i32 [ %92, %79 ], [ %76, %75 ]\l  %81 = phi i32 [ %93, %79 ], [ %77, %75 ]\l  %82 = phi i32 [ %94, %79 ], [ 0, %75 ]\l  %83 = zext i32 %81 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !7\l  %86 = mul nsw i32 %81, %4\l  %87 = add nsw i32 %86, %14\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %88\l  %90 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !7\l  %91 = mul nsw i32 %90, %85\l  %92 = add nsw i32 %80, %91\l  store i32 %92, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %93 = add nuw nsw i32 %81, 1\l  %94 = add i32 %82, 1\l  %95 = icmp eq i32 %94, %21\l  br i1 %95, label %96, label %79, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5041360:s0 -> Node0x503dde0;
	Node0x5041360:s1 -> Node0x5041360;
	Node0x503dde0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%96:\l96:                                               \l  ret void\l}"];
}
