digraph "CFG for '_Z9calculatePiS_ii' function" {
	label="CFG for '_Z9calculatePiS_ii' function";

	Node0x5b5d580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %5\l  %14 = icmp slt i32 %13, %2\l  br i1 %14, label %15, label %19\l|{<s0>T|<s1>F}}"];
	Node0x5b5d580:s0 -> Node0x5b5f450;
	Node0x5b5d580:s1 -> Node0x5b5f4e0;
	Node0x5b5f450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %16\l  %18 = load i32, i32 addrspace(1)* %17, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  br label %22\l}"];
	Node0x5b5f450 -> Node0x5b60000;
	Node0x5b5f4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%19:\l19:                                               \l  switch i32 %3, label %21 [\l    i32 3, label %22\l    i32 0, label %22\l    i32 1, label %20\l  ]\l|{<s0>def|<s1>3|<s2>0|<s3>1}}"];
	Node0x5b5f4e0:s0 -> Node0x5b60100;
	Node0x5b5f4e0:s1 -> Node0x5b60000;
	Node0x5b5f4e0:s2 -> Node0x5b60000;
	Node0x5b5f4e0:s3 -> Node0x5b601b0;
	Node0x5b601b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%20:\l20:                                               \l  br label %22\l}"];
	Node0x5b601b0 -> Node0x5b60000;
	Node0x5b60100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%21:\l21:                                               \l  br label %22\l}"];
	Node0x5b60100 -> Node0x5b60000;
	Node0x5b60000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%22:\l22:                                               \l  %23 = phi i32 [ 2147483647, %21 ], [ -2147483647, %20 ], [ %18, %15 ], [ 0,\l... %19 ], [ 0, %19 ]\l  %24 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared_mem,\l... i32 0, i32 %5\l  store i32 %23, i32 addrspace(3)* %24, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %25 = icmp ugt i16 %9, 1\l  br i1 %25, label %26, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5b60000:s0 -> Node0x5b610a0;
	Node0x5b60000:s1 -> Node0x5b610f0;
	Node0x5b610a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%26:\l26:                                               \l  %27 = lshr i32 %10, 1\l  %28 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared_mem,\l... i32 0, i32 %5\l  br label %33\l}"];
	Node0x5b610a0 -> Node0x5b613b0;
	Node0x5b610f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%29:\l29:                                               \l  %30 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @shared_mem, i32 0, i32 0), align 4, !tbaa !7\l  %31 = zext i32 %11 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %31\l  store i32 %30, i32 addrspace(1)* %32, align 4, !tbaa !7\l  ret void\l}"];
	Node0x5b613b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ %27, %26 ], [ %58, %57 ]\l  %35 = icmp slt i32 %5, %34\l  br i1 %35, label %36, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5b613b0:s0 -> Node0x5b61c30;
	Node0x5b613b0:s1 -> Node0x5b61aa0;
	Node0x5b61c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%36:\l36:                                               \l  switch i32 %3, label %49 [\l    i32 3, label %37\l    i32 0, label %37\l    i32 1, label %43\l  ]\l|{<s0>def|<s1>3|<s2>0|<s3>1}}"];
	Node0x5b61c30:s0 -> Node0x5b61d70;
	Node0x5b61c30:s1 -> Node0x5b61dc0;
	Node0x5b61c30:s2 -> Node0x5b61dc0;
	Node0x5b61c30:s3 -> Node0x5b61e50;
	Node0x5b61dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%37:\l37:                                               \l  %38 = add nsw i32 %34, %5\l  %39 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared_mem,\l... i32 0, i32 %38\l  %40 = load i32, i32 addrspace(3)* %39, align 4, !tbaa !7\l  %41 = load i32, i32 addrspace(3)* %28, align 4, !tbaa !7\l  %42 = add nsw i32 %41, %40\l  br label %55\l}"];
	Node0x5b61dc0 -> Node0x5b62300;
	Node0x5b61e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%43:\l43:                                               \l  %44 = load i32, i32 addrspace(3)* %28, align 4, !tbaa !7\l  %45 = add nsw i32 %34, %5\l  %46 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared_mem,\l... i32 0, i32 %45\l  %47 = load i32, i32 addrspace(3)* %46, align 4, !tbaa !7\l  %48 = tail call i32 @llvm.smax.i32(i32 %44, i32 %47)\l  br label %55\l}"];
	Node0x5b61e50 -> Node0x5b62300;
	Node0x5b61d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%49:\l49:                                               \l  %50 = load i32, i32 addrspace(3)* %28, align 4, !tbaa !7\l  %51 = add nsw i32 %34, %5\l  %52 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared_mem,\l... i32 0, i32 %51\l  %53 = load i32, i32 addrspace(3)* %52, align 4, !tbaa !7\l  %54 = tail call i32 @llvm.smin.i32(i32 %50, i32 %53)\l  br label %55\l}"];
	Node0x5b61d70 -> Node0x5b62300;
	Node0x5b62300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%55:\l55:                                               \l  %56 = phi i32 [ %42, %37 ], [ %54, %49 ], [ %48, %43 ]\l  store i32 %56, i32 addrspace(3)* %28, align 4, !tbaa !7\l  br label %57\l}"];
	Node0x5b62300 -> Node0x5b61aa0;
	Node0x5b61aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %58 = sdiv i32 %34, 2\l  %59 = icmp sgt i32 %34, 1\l  br i1 %59, label %33, label %29, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5b61aa0:s0 -> Node0x5b613b0;
	Node0x5b61aa0:s1 -> Node0x5b610f0;
}
