digraph "CFG for '_Z10multMatrixPiS_S_iii' function" {
	label="CFG for '_Z10multMatrixPiS_S_iii' function";

	Node0x5df6da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %9 = mul nsw i32 %8, %5\l  %10 = add nsw i32 %9, %7\l  %11 = mul nsw i32 %5, %3\l  %12 = icmp slt i32 %10, %11\l  br i1 %12, label %13, label %99\l|{<s0>T|<s1>F}}"];
	Node0x5df6da0:s0 -> Node0x5df6000;
	Node0x5df6da0:s1 -> Node0x5df8600;
	Node0x5df6000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%13:\l13:                                               \l  %14 = sext i32 %10 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %14\l  store i32 0, i32 addrspace(1)* %15, align 4, !tbaa !5\l  %16 = icmp sgt i32 %4, 0\l  br i1 %16, label %17, label %99\l|{<s0>T|<s1>F}}"];
	Node0x5df6000:s0 -> Node0x5df82f0;
	Node0x5df6000:s1 -> Node0x5df8600;
	Node0x5df82f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%17:\l17:                                               \l  %18 = mul nsw i32 %8, %4\l  %19 = and i32 %4, 3\l  %20 = icmp ult i32 %4, 4\l  br i1 %20, label %77, label %21\l|{<s0>T|<s1>F}}"];
	Node0x5df82f0:s0 -> Node0x5df9490;
	Node0x5df82f0:s1 -> Node0x5df94e0;
	Node0x5df94e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%21:\l21:                                               \l  %22 = and i32 %4, -4\l  br label %23\l}"];
	Node0x5df94e0 -> Node0x5df96e0;
	Node0x5df96e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%23:\l23:                                               \l  %24 = phi i32 [ 0, %21 ], [ %73, %23 ]\l  %25 = phi i32 [ 0, %21 ], [ %74, %23 ]\l  %26 = phi i32 [ 0, %21 ], [ %75, %23 ]\l  %27 = add nsw i32 %25, %18\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %28\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !5\l  %31 = mul nsw i32 %25, %5\l  %32 = add nsw i32 %31, %7\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !5\l  %36 = mul nsw i32 %35, %30\l  %37 = add nsw i32 %24, %36\l  store i32 %37, i32 addrspace(1)* %15, align 4, !tbaa !5\l  %38 = or i32 %25, 1\l  %39 = add nsw i32 %38, %18\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %40\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !5\l  %43 = mul nsw i32 %38, %5\l  %44 = add nsw i32 %43, %7\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %45\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !5\l  %48 = mul nsw i32 %47, %42\l  %49 = add nsw i32 %37, %48\l  store i32 %49, i32 addrspace(1)* %15, align 4, !tbaa !5\l  %50 = or i32 %25, 2\l  %51 = add nsw i32 %50, %18\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %52\l  %54 = load i32, i32 addrspace(1)* %53, align 4, !tbaa !5\l  %55 = mul nsw i32 %50, %5\l  %56 = add nsw i32 %55, %7\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %57\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !5\l  %60 = mul nsw i32 %59, %54\l  %61 = add nsw i32 %49, %60\l  store i32 %61, i32 addrspace(1)* %15, align 4, !tbaa !5\l  %62 = or i32 %25, 3\l  %63 = add nsw i32 %62, %18\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %64\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !5\l  %67 = mul nsw i32 %62, %5\l  %68 = add nsw i32 %67, %7\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %69\l  %71 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !5\l  %72 = mul nsw i32 %71, %66\l  %73 = add nsw i32 %61, %72\l  store i32 %73, i32 addrspace(1)* %15, align 4, !tbaa !5\l  %74 = add nuw nsw i32 %25, 4\l  %75 = add i32 %26, 4\l  %76 = icmp eq i32 %75, %22\l  br i1 %76, label %77, label %23, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5df96e0:s0 -> Node0x5df9490;
	Node0x5df96e0:s1 -> Node0x5df96e0;
	Node0x5df9490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%77:\l77:                                               \l  %78 = phi i32 [ 0, %17 ], [ %73, %23 ]\l  %79 = phi i32 [ 0, %17 ], [ %74, %23 ]\l  %80 = icmp eq i32 %19, 0\l  br i1 %80, label %99, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5df9490:s0 -> Node0x5df8600;
	Node0x5df9490:s1 -> Node0x5dfc460;
	Node0x5dfc460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = phi i32 [ %95, %81 ], [ %78, %77 ]\l  %83 = phi i32 [ %96, %81 ], [ %79, %77 ]\l  %84 = phi i32 [ %97, %81 ], [ 0, %77 ]\l  %85 = add nsw i32 %83, %18\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %86\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !5\l  %89 = mul nsw i32 %83, %5\l  %90 = add nsw i32 %89, %7\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %91\l  %93 = load i32, i32 addrspace(1)* %92, align 4, !tbaa !5\l  %94 = mul nsw i32 %93, %88\l  %95 = add nsw i32 %82, %94\l  store i32 %95, i32 addrspace(1)* %15, align 4, !tbaa !5\l  %96 = add nuw nsw i32 %83, 1\l  %97 = add i32 %84, 1\l  %98 = icmp eq i32 %97, %19\l  br i1 %98, label %99, label %81, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5dfc460:s0 -> Node0x5df8600;
	Node0x5dfc460:s1 -> Node0x5dfc460;
	Node0x5df8600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%99:\l99:                                               \l  ret void\l}"];
}
