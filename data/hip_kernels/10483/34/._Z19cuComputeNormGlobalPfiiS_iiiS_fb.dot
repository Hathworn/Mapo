digraph "CFG for '_Z19cuComputeNormGlobalPfiiS_iiiS_fb' function" {
	label="CFG for '_Z19cuComputeNormGlobalPfiiS_iiiS_fb' function";

	Node0x4528ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %13 = fcmp olt float %8, 0.000000e+00\l  %14 = select i1 %9, i1 %13, i1 false\l  %15 = select i1 %14, float 1.000000e+02, float 0.000000e+00\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = shl i32 %16, 4\l  store i32 %17, i32 addrspace(3)*\l... @_ZZ19cuComputeNormGlobalPfiiS_iiiS_fbE7begin_A, align 4, !tbaa !5\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = shl i32 %18, 4\l  store i32 %19, i32 addrspace(3)*\l... @_ZZ19cuComputeNormGlobalPfiiS_iiiS_fbE7begin_B, align 4, !tbaa !5\l  %20 = shl nsw i32 %2, 4\l  store i32 %20, i32 addrspace(3)*\l... @_ZZ19cuComputeNormGlobalPfiiS_iiiS_fbE6step_A, align 4, !tbaa !5\l  %21 = shl nsw i32 %5, 4\l  store i32 %21, i32 addrspace(3)*\l... @_ZZ19cuComputeNormGlobalPfiiS_iiiS_fbE6step_B, align 4, !tbaa !5\l  %22 = add nsw i32 %6, -1\l  %23 = mul nsw i32 %22, %2\l  %24 = add nsw i32 %23, %17\l  store i32 %24, i32 addrspace(3)*\l... @_ZZ19cuComputeNormGlobalPfiiS_iiiS_fbE5end_A, align 4, !tbaa !5\l  %25 = add nsw i32 %17, %11\l  %26 = icmp slt i32 %25, %1\l  %27 = add nsw i32 %19, %11\l  %28 = icmp slt i32 %27, %4\l  %29 = add nsw i32 %17, %12\l  %30 = icmp slt i32 %29, %1\l  %31 = icmp slt i32 %23, 0\l  br i1 %31, label %32, label %34\l|{<s0>T|<s1>F}}"];
	Node0x4528ec0:s0 -> Node0x452c560;
	Node0x4528ec0:s1 -> Node0x452d560;
	Node0x452c560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%32:\l32:                                               \l  %33 = select i1 %30, i1 %28, i1 false\l  br label %66\l}"];
	Node0x452c560 -> Node0x452bff0;
	Node0x452d560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19cuComputeNormGlobalPfiiS_iiiS_fbE8shared_A, i32 0, i32\l... %12, i32 %11\l  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19cuComputeNormGlobalPfiiS_iiiS_fbE8shared_B, i32 0, i32\l... %12, i32 %11\l  %37 = mul nsw i32 %12, %2\l  %38 = add i32 %37, %11\l  %39 = mul nsw i32 %12, %5\l  %40 = add i32 %39, %11\l  %41 = select i1 %30, i1 %28, i1 false\l  %42 = tail call float @llvm.fabs.f32(float %8)\l  %43 = fcmp oeq float %42, 0x7FF0000000000000\l  %44 = bitcast float %8 to i32\l  %45 = fcmp oeq float %8, 0.000000e+00\l  %46 = fcmp contract ogt float %8, 0.000000e+00\l  %47 = fdiv contract float 1.000000e+00, %8\l  %48 = tail call float @llvm.fabs.f32(float %47)\l  %49 = tail call float @llvm.trunc.f32(float %48)\l  %50 = fcmp oeq float %48, %49\l  %51 = zext i1 %50 to i32\l  %52 = fmul float %49, 5.000000e-01\l  %53 = tail call float @llvm.amdgcn.fract.f32(float %52)\l  %54 = tail call i1 @llvm.amdgcn.class.f32(float %52, i32 516)\l  %55 = select i1 %54, float 0.000000e+00, float %53\l  %56 = fcmp oeq float %55, 0.000000e+00\l  %57 = and i1 %50, %56\l  %58 = zext i1 %57 to i32\l  %59 = add nuw nsw i32 %58, %51\l  %60 = icmp eq i32 %59, 1\l  %61 = icmp ne i32 %59, 0\l  %62 = fcmp oeq float %48, 0x7FF0000000000000\l  %63 = bitcast float %47 to i32\l  %64 = fcmp olt float %47, 0.000000e+00\l  %65 = fcmp oeq float %47, 0.000000e+00\l  br label %69\l}"];
	Node0x452d560 -> Node0x452d730;
	Node0x452bff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%66:\l66:                                               \l  %67 = phi i1 [ %33, %32 ], [ %41, %451 ]\l  %68 = phi float [ %15, %32 ], [ %452, %451 ]\l  br i1 %67, label %459, label %468\l|{<s0>T|<s1>F}}"];
	Node0x452bff0:s0 -> Node0x452f810;
	Node0x452bff0:s1 -> Node0x452f8a0;
	Node0x452d730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%69:\l69:                                               \l  %70 = phi i32 [ %19, %34 ], [ %456, %451 ]\l  %71 = phi i32 [ %17, %34 ], [ %454, %451 ]\l  %72 = phi float [ %15, %34 ], [ %452, %451 ]\l  %73 = sdiv i32 %71, %2\l  %74 = add nsw i32 %73, %12\l  %75 = icmp slt i32 %74, %6\l  br i1 %75, label %76, label %89\l|{<s0>T|<s1>F}}"];
	Node0x452d730:s0 -> Node0x452fe40;
	Node0x452d730:s1 -> Node0x452fed0;
	Node0x452fe40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%76:\l76:                                               \l  br i1 %26, label %77, label %82\l|{<s0>T|<s1>F}}"];
	Node0x452fe40:s0 -> Node0x4530010;
	Node0x452fe40:s1 -> Node0x4530060;
	Node0x4530010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%77:\l77:                                               \l  %78 = add i32 %38, %71\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !9\l  br label %82\l}"];
	Node0x4530010 -> Node0x4530060;
	Node0x4530060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%82:\l82:                                               \l  %83 = phi contract float [ %81, %77 ], [ 0.000000e+00, %76 ]\l  store float %83, float addrspace(3)* %35, align 4, !tbaa !9\l  br i1 %28, label %84, label %90\l|{<s0>T|<s1>F}}"];
	Node0x4530060:s0 -> Node0x4530cd0;
	Node0x4530060:s1 -> Node0x4530d20;
	Node0x4530cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%84:\l84:                                               \l  %85 = add i32 %40, %70\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %3, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !9\l  br label %90\l}"];
	Node0x4530cd0 -> Node0x4530d20;
	Node0x452fed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%89:\l89:                                               \l  store float 0.000000e+00, float addrspace(3)* %35, align 4, !tbaa !9\l  br label %90\l}"];
	Node0x452fed0 -> Node0x4530d20;
	Node0x4530d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%90:\l90:                                               \l  %91 = phi float [ 0.000000e+00, %89 ], [ %88, %84 ], [ 0.000000e+00, %82 ]\l  store float %91, float addrspace(3)* %36, align 4, !tbaa !9\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %41, label %93, label %451\l|{<s0>T|<s1>F}}"];
	Node0x4530d20:s0 -> Node0x45315a0;
	Node0x4530d20:s1 -> Node0x452d830;
	Node0x45316a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%92:\l92:                                               \l  br i1 %9, label %451, label %277\l|{<s0>T|<s1>F}}"];
	Node0x45316a0:s0 -> Node0x452d830;
	Node0x45316a0:s1 -> Node0x4531730;
	Node0x45315a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%93:\l93:                                               \l  %94 = phi i32 [ %275, %273 ], [ 0, %90 ]\l  %95 = phi float [ %274, %273 ], [ %72, %90 ]\l  %96 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19cuComputeNormGlobalPfiiS_iiiS_fbE8shared_A, i32 0, i32\l... %94, i32 %12\l  %97 = load float, float addrspace(3)* %96, align 4, !tbaa !9\l  %98 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19cuComputeNormGlobalPfiiS_iiiS_fbE8shared_B, i32 0, i32\l... %94, i32 %11\l  %99 = load float, float addrspace(3)* %98, align 4, !tbaa !9\l  %100 = fsub contract float %97, %99\l  %101 = tail call float @llvm.fabs.f32(float %100)\l  br i1 %9, label %102, label %107\l|{<s0>T|<s1>F}}"];
	Node0x45315a0:s0 -> Node0x4531f60;
	Node0x45315a0:s1 -> Node0x4531ff0;
	Node0x4531f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%102:\l102:                                              \l  br i1 %46, label %103, label %105\l|{<s0>T|<s1>F}}"];
	Node0x4531f60:s0 -> Node0x4532130;
	Node0x4531f60:s1 -> Node0x4532180;
	Node0x4532130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%103:\l103:                                              \l  %104 = tail call float @llvm.maxnum.f32(float %95, float %101)\l  br label %273\l}"];
	Node0x4532130 -> Node0x4531830;
	Node0x4532180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%105:\l105:                                              \l  %106 = tail call float @llvm.minnum.f32(float %95, float %101)\l  br label %273\l}"];
	Node0x4532180 -> Node0x4531830;
	Node0x4531ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%107:\l107:                                              \l  %108 = tail call float @llvm.amdgcn.frexp.mant.f32(float %101)\l  %109 = fcmp olt float %108, 0x3FE5555560000000\l  %110 = zext i1 %109 to i32\l  %111 = tail call float @llvm.amdgcn.ldexp.f32(float %108, i32 %110)\l  %112 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %101)\l  %113 = sub nsw i32 %112, %110\l  %114 = fadd float %111, -1.000000e+00\l  %115 = fadd float %111, 1.000000e+00\l  %116 = fadd float %115, -1.000000e+00\l  %117 = fsub float %111, %116\l  %118 = tail call float @llvm.amdgcn.rcp.f32(float %115)\l  %119 = fmul float %114, %118\l  %120 = fmul float %115, %119\l  %121 = fneg float %120\l  %122 = tail call float @llvm.fma.f32(float %119, float %115, float %121)\l  %123 = tail call float @llvm.fma.f32(float %119, float %117, float %122)\l  %124 = fadd float %120, %123\l  %125 = fsub float %124, %120\l  %126 = fsub float %123, %125\l  %127 = fsub float %114, %124\l  %128 = fsub float %114, %127\l  %129 = fsub float %128, %124\l  %130 = fsub float %129, %126\l  %131 = fadd float %127, %130\l  %132 = fmul float %118, %131\l  %133 = fadd float %119, %132\l  %134 = fsub float %133, %119\l  %135 = fsub float %132, %134\l  %136 = fmul float %133, %133\l  %137 = fneg float %136\l  %138 = tail call float @llvm.fma.f32(float %133, float %133, float %137)\l  %139 = fmul float %135, 2.000000e+00\l  %140 = tail call float @llvm.fma.f32(float %133, float %139, float %138)\l  %141 = fadd float %136, %140\l  %142 = fsub float %141, %136\l  %143 = fsub float %140, %142\l  %144 = tail call float @llvm.fmuladd.f32(float %141, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %145 = tail call float @llvm.fmuladd.f32(float %141, float %144, float\l... 0x3FD999BDE0000000)\l  %146 = sitofp i32 %113 to float\l  %147 = fmul float %146, 0x3FE62E4300000000\l  %148 = fneg float %147\l  %149 = tail call float @llvm.fma.f32(float %146, float 0x3FE62E4300000000,\l... float %148)\l  %150 = tail call float @llvm.fma.f32(float %146, float 0xBE205C6100000000,\l... float %149)\l  %151 = fadd float %147, %150\l  %152 = fsub float %151, %147\l  %153 = fsub float %150, %152\l  %154 = tail call float @llvm.amdgcn.ldexp.f32(float %133, i32 1)\l  %155 = fmul float %133, %141\l  %156 = fneg float %155\l  %157 = tail call float @llvm.fma.f32(float %141, float %133, float %156)\l  %158 = tail call float @llvm.fma.f32(float %141, float %135, float %157)\l  %159 = tail call float @llvm.fma.f32(float %143, float %133, float %158)\l  %160 = fadd float %155, %159\l  %161 = fsub float %160, %155\l  %162 = fsub float %159, %161\l  %163 = fmul float %141, %145\l  %164 = fneg float %163\l  %165 = tail call float @llvm.fma.f32(float %141, float %145, float %164)\l  %166 = tail call float @llvm.fma.f32(float %143, float %145, float %165)\l  %167 = fadd float %163, %166\l  %168 = fsub float %167, %163\l  %169 = fsub float %166, %168\l  %170 = fadd float %167, 0x3FE5555540000000\l  %171 = fadd float %170, 0xBFE5555540000000\l  %172 = fsub float %167, %171\l  %173 = fadd float %169, 0x3E2E720200000000\l  %174 = fadd float %173, %172\l  %175 = fadd float %170, %174\l  %176 = fsub float %175, %170\l  %177 = fsub float %174, %176\l  %178 = fmul float %160, %175\l  %179 = fneg float %178\l  %180 = tail call float @llvm.fma.f32(float %160, float %175, float %179)\l  %181 = tail call float @llvm.fma.f32(float %160, float %177, float %180)\l  %182 = tail call float @llvm.fma.f32(float %162, float %175, float %181)\l  %183 = tail call float @llvm.amdgcn.ldexp.f32(float %135, i32 1)\l  %184 = fadd float %178, %182\l  %185 = fsub float %184, %178\l  %186 = fsub float %182, %185\l  %187 = fadd float %154, %184\l  %188 = fsub float %187, %154\l  %189 = fsub float %184, %188\l  %190 = fadd float %183, %186\l  %191 = fadd float %190, %189\l  %192 = fadd float %187, %191\l  %193 = fsub float %192, %187\l  %194 = fsub float %191, %193\l  %195 = fadd float %151, %192\l  %196 = fsub float %195, %151\l  %197 = fsub float %195, %196\l  %198 = fsub float %151, %197\l  %199 = fsub float %192, %196\l  %200 = fadd float %199, %198\l  %201 = fadd float %153, %194\l  %202 = fsub float %201, %153\l  %203 = fsub float %201, %202\l  %204 = fsub float %153, %203\l  %205 = fsub float %194, %202\l  %206 = fadd float %205, %204\l  %207 = fadd float %201, %200\l  %208 = fadd float %195, %207\l  %209 = fsub float %208, %195\l  %210 = fsub float %207, %209\l  %211 = fadd float %206, %210\l  %212 = fadd float %208, %211\l  %213 = fsub float %212, %208\l  %214 = fsub float %211, %213\l  %215 = fmul float %212, %8\l  %216 = fneg float %215\l  %217 = tail call float @llvm.fma.f32(float %8, float %212, float %216)\l  %218 = tail call float @llvm.fma.f32(float %8, float %214, float %217)\l  %219 = fadd float %215, %218\l  %220 = fsub float %219, %215\l  %221 = fsub float %218, %220\l  %222 = tail call float @llvm.fabs.f32(float %215) #4\l  %223 = fcmp oeq float %222, 0x7FF0000000000000\l  %224 = select i1 %223, float %215, float %219\l  %225 = tail call float @llvm.fabs.f32(float %224) #4\l  %226 = fcmp oeq float %225, 0x7FF0000000000000\l  %227 = select i1 %226, float 0.000000e+00, float %221\l  %228 = fcmp oeq float %224, 0x40562E4300000000\l  %229 = select i1 %228, float 0x3EE0000000000000, float 0.000000e+00\l  %230 = fsub float %224, %229\l  %231 = fadd float %229, %227\l  %232 = fmul float %230, 0x3FF7154760000000\l  %233 = tail call float @llvm.rint.f32(float %232)\l  %234 = fcmp ogt float %230, 0x40562E4300000000\l  %235 = fcmp olt float %230, 0xC059D1DA00000000\l  %236 = fneg float %232\l  %237 = tail call float @llvm.fma.f32(float %230, float 0x3FF7154760000000,\l... float %236)\l  %238 = tail call float @llvm.fma.f32(float %230, float 0x3E54AE0BE0000000,\l... float %237)\l  %239 = fsub float %232, %233\l  %240 = fadd float %238, %239\l  %241 = tail call float @llvm.exp2.f32(float %240)\l  %242 = fptosi float %233 to i32\l  %243 = tail call float @llvm.amdgcn.ldexp.f32(float %241, i32 %242)\l  %244 = select i1 %235, float 0.000000e+00, float %243\l  %245 = select i1 %234, float 0x7FF0000000000000, float %244\l  %246 = tail call float @llvm.fma.f32(float %245, float %231, float %245)\l  %247 = tail call float @llvm.fabs.f32(float %245) #4\l  %248 = fcmp oeq float %247, 0x7FF0000000000000\l  %249 = select i1 %248, float %245, float %246\l  %250 = tail call float @llvm.fabs.f32(float %249)\l  br i1 %43, label %251, label %259\l|{<s0>T|<s1>F}}"];
	Node0x4531ff0:s0 -> Node0x4539c00;
	Node0x4531ff0:s1 -> Node0x4539c50;
	Node0x4539c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%251:\l251:                                              \l  %252 = fcmp oeq float %101, 1.000000e+00\l  %253 = fadd float %101, -1.000000e+00\l  %254 = bitcast float %253 to i32\l  %255 = xor i32 %254, %44\l  %256 = icmp sgt i32 %255, -1\l  %257 = select i1 %256, float 0x7FF0000000000000, float 0.000000e+00\l  %258 = select i1 %252, float %101, float %257\l  br label %259\l}"];
	Node0x4539c00 -> Node0x4539c50;
	Node0x4539c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%259:\l259:                                              \l  %260 = phi float [ %250, %107 ], [ %258, %251 ]\l  %261 = fcmp oeq float %101, 0x7FF0000000000000\l  %262 = fcmp oeq float %100, 0.000000e+00\l  %263 = or i1 %262, %261\l  %264 = xor i1 %13, %262\l  %265 = select i1 %264, float 0.000000e+00, float 0x7FF0000000000000\l  %266 = select i1 %263, float %265, float %260\l  %267 = fcmp uno float %101, %8\l  %268 = select i1 %267, float 0x7FF8000000000000, float %266\l  %269 = fcmp oeq float %101, 1.000000e+00\l  %270 = or i1 %45, %269\l  %271 = select i1 %270, float 1.000000e+00, float %268\l  %272 = fadd contract float %95, %271\l  br label %273\l}"];
	Node0x4539c50 -> Node0x4531830;
	Node0x4531830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%273:\l273:                                              \l  %274 = phi float [ %104, %103 ], [ %106, %105 ], [ %272, %259 ]\l  %275 = add nuw nsw i32 %94, 1\l  %276 = icmp eq i32 %275, 16\l  br i1 %276, label %92, label %93, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4531830:s0 -> Node0x45316a0;
	Node0x4531830:s1 -> Node0x45315a0;
	Node0x4531730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%277:\l277:                                              \l  %278 = tail call float @llvm.fabs.f32(float %274)\l  %279 = tail call float @llvm.amdgcn.frexp.mant.f32(float %278)\l  %280 = fcmp olt float %279, 0x3FE5555560000000\l  %281 = zext i1 %280 to i32\l  %282 = tail call float @llvm.amdgcn.ldexp.f32(float %279, i32 %281)\l  %283 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %278)\l  %284 = sub nsw i32 %283, %281\l  %285 = fadd float %282, -1.000000e+00\l  %286 = fadd float %282, 1.000000e+00\l  %287 = fadd float %286, -1.000000e+00\l  %288 = fsub float %282, %287\l  %289 = tail call float @llvm.amdgcn.rcp.f32(float %286)\l  %290 = fmul float %285, %289\l  %291 = fmul float %286, %290\l  %292 = fneg float %291\l  %293 = tail call float @llvm.fma.f32(float %290, float %286, float %292)\l  %294 = tail call float @llvm.fma.f32(float %290, float %288, float %293)\l  %295 = fadd float %291, %294\l  %296 = fsub float %295, %291\l  %297 = fsub float %294, %296\l  %298 = fsub float %285, %295\l  %299 = fsub float %285, %298\l  %300 = fsub float %299, %295\l  %301 = fsub float %300, %297\l  %302 = fadd float %298, %301\l  %303 = fmul float %289, %302\l  %304 = fadd float %290, %303\l  %305 = fsub float %304, %290\l  %306 = fsub float %303, %305\l  %307 = fmul float %304, %304\l  %308 = fneg float %307\l  %309 = tail call float @llvm.fma.f32(float %304, float %304, float %308)\l  %310 = fmul float %306, 2.000000e+00\l  %311 = tail call float @llvm.fma.f32(float %304, float %310, float %309)\l  %312 = fadd float %307, %311\l  %313 = fsub float %312, %307\l  %314 = fsub float %311, %313\l  %315 = tail call float @llvm.fmuladd.f32(float %312, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %316 = tail call float @llvm.fmuladd.f32(float %312, float %315, float\l... 0x3FD999BDE0000000)\l  %317 = sitofp i32 %284 to float\l  %318 = fmul float %317, 0x3FE62E4300000000\l  %319 = fneg float %318\l  %320 = tail call float @llvm.fma.f32(float %317, float 0x3FE62E4300000000,\l... float %319)\l  %321 = tail call float @llvm.fma.f32(float %317, float 0xBE205C6100000000,\l... float %320)\l  %322 = fadd float %318, %321\l  %323 = fsub float %322, %318\l  %324 = fsub float %321, %323\l  %325 = tail call float @llvm.amdgcn.ldexp.f32(float %304, i32 1)\l  %326 = fmul float %304, %312\l  %327 = fneg float %326\l  %328 = tail call float @llvm.fma.f32(float %312, float %304, float %327)\l  %329 = tail call float @llvm.fma.f32(float %312, float %306, float %328)\l  %330 = tail call float @llvm.fma.f32(float %314, float %304, float %329)\l  %331 = fadd float %326, %330\l  %332 = fsub float %331, %326\l  %333 = fsub float %330, %332\l  %334 = fmul float %312, %316\l  %335 = fneg float %334\l  %336 = tail call float @llvm.fma.f32(float %312, float %316, float %335)\l  %337 = tail call float @llvm.fma.f32(float %314, float %316, float %336)\l  %338 = fadd float %334, %337\l  %339 = fsub float %338, %334\l  %340 = fsub float %337, %339\l  %341 = fadd float %338, 0x3FE5555540000000\l  %342 = fadd float %341, 0xBFE5555540000000\l  %343 = fsub float %338, %342\l  %344 = fadd float %340, 0x3E2E720200000000\l  %345 = fadd float %344, %343\l  %346 = fadd float %341, %345\l  %347 = fsub float %346, %341\l  %348 = fsub float %345, %347\l  %349 = fmul float %331, %346\l  %350 = fneg float %349\l  %351 = tail call float @llvm.fma.f32(float %331, float %346, float %350)\l  %352 = tail call float @llvm.fma.f32(float %331, float %348, float %351)\l  %353 = tail call float @llvm.fma.f32(float %333, float %346, float %352)\l  %354 = tail call float @llvm.amdgcn.ldexp.f32(float %306, i32 1)\l  %355 = fadd float %349, %353\l  %356 = fsub float %355, %349\l  %357 = fsub float %353, %356\l  %358 = fadd float %325, %355\l  %359 = fsub float %358, %325\l  %360 = fsub float %355, %359\l  %361 = fadd float %354, %357\l  %362 = fadd float %361, %360\l  %363 = fadd float %358, %362\l  %364 = fsub float %363, %358\l  %365 = fsub float %362, %364\l  %366 = fadd float %322, %363\l  %367 = fsub float %366, %322\l  %368 = fsub float %366, %367\l  %369 = fsub float %322, %368\l  %370 = fsub float %363, %367\l  %371 = fadd float %370, %369\l  %372 = fadd float %324, %365\l  %373 = fsub float %372, %324\l  %374 = fsub float %372, %373\l  %375 = fsub float %324, %374\l  %376 = fsub float %365, %373\l  %377 = fadd float %376, %375\l  %378 = fadd float %372, %371\l  %379 = fadd float %366, %378\l  %380 = fsub float %379, %366\l  %381 = fsub float %378, %380\l  %382 = fadd float %377, %381\l  %383 = fadd float %379, %382\l  %384 = fsub float %383, %379\l  %385 = fsub float %382, %384\l  %386 = fmul float %47, %383\l  %387 = fneg float %386\l  %388 = tail call float @llvm.fma.f32(float %47, float %383, float %387)\l  %389 = tail call float @llvm.fma.f32(float %47, float %385, float %388)\l  %390 = fadd float %386, %389\l  %391 = fsub float %390, %386\l  %392 = fsub float %389, %391\l  %393 = tail call float @llvm.fabs.f32(float %386) #4\l  %394 = fcmp oeq float %393, 0x7FF0000000000000\l  %395 = select i1 %394, float %386, float %390\l  %396 = tail call float @llvm.fabs.f32(float %395) #4\l  %397 = fcmp oeq float %396, 0x7FF0000000000000\l  %398 = select i1 %397, float 0.000000e+00, float %392\l  %399 = fcmp oeq float %395, 0x40562E4300000000\l  %400 = select i1 %399, float 0x3EE0000000000000, float 0.000000e+00\l  %401 = fsub float %395, %400\l  %402 = fadd float %400, %398\l  %403 = fmul float %401, 0x3FF7154760000000\l  %404 = tail call float @llvm.rint.f32(float %403)\l  %405 = fcmp ogt float %401, 0x40562E4300000000\l  %406 = fcmp olt float %401, 0xC059D1DA00000000\l  %407 = fneg float %403\l  %408 = tail call float @llvm.fma.f32(float %401, float 0x3FF7154760000000,\l... float %407)\l  %409 = tail call float @llvm.fma.f32(float %401, float 0x3E54AE0BE0000000,\l... float %408)\l  %410 = fsub float %403, %404\l  %411 = fadd float %409, %410\l  %412 = tail call float @llvm.exp2.f32(float %411)\l  %413 = fptosi float %404 to i32\l  %414 = tail call float @llvm.amdgcn.ldexp.f32(float %412, i32 %413)\l  %415 = select i1 %406, float 0.000000e+00, float %414\l  %416 = select i1 %405, float 0x7FF0000000000000, float %415\l  %417 = tail call float @llvm.fma.f32(float %416, float %402, float %416)\l  %418 = tail call float @llvm.fabs.f32(float %416) #4\l  %419 = fcmp oeq float %418, 0x7FF0000000000000\l  %420 = select i1 %419, float %416, float %417\l  %421 = fcmp olt float %274, 0.000000e+00\l  %422 = and i1 %60, %421\l  %423 = select i1 %422, float -0.000000e+00, float 0.000000e+00\l  %424 = tail call float @llvm.copysign.f32(float %420, float %423)\l  %425 = fcmp uge float %274, 0.000000e+00\l  %426 = select i1 %425, i1 true, i1 %61\l  %427 = select i1 %426, float %424, float 0x7FF8000000000000\l  br i1 %62, label %428, label %436\l|{<s0>T|<s1>F}}"];
	Node0x4531730:s0 -> Node0x4541dd0;
	Node0x4531730:s1 -> Node0x4541e60;
	Node0x4541dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%428:\l428:                                              \l  %429 = fcmp oeq float %278, 1.000000e+00\l  %430 = fadd float %278, -1.000000e+00\l  %431 = bitcast float %430 to i32\l  %432 = xor i32 %431, %63\l  %433 = icmp sgt i32 %432, -1\l  %434 = select i1 %433, float 0x7FF0000000000000, float 0.000000e+00\l  %435 = select i1 %429, float %278, float %434\l  br label %436\l}"];
	Node0x4541dd0 -> Node0x4541e60;
	Node0x4541e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%436:\l436:                                              \l  %437 = phi float [ %427, %277 ], [ %435, %428 ]\l  %438 = fcmp oeq float %278, 0x7FF0000000000000\l  %439 = fcmp oeq float %274, 0.000000e+00\l  %440 = or i1 %439, %438\l  %441 = xor i1 %64, %439\l  %442 = select i1 %441, float 0.000000e+00, float 0x7FF0000000000000\l  %443 = select i1 %60, float %274, float 0.000000e+00\l  %444 = tail call float @llvm.copysign.f32(float %442, float %443)\l  %445 = select i1 %440, float %444, float %437\l  %446 = fcmp uno float %274, %47\l  %447 = select i1 %446, float 0x7FF8000000000000, float %445\l  %448 = fcmp oeq float %274, 1.000000e+00\l  %449 = or i1 %65, %448\l  %450 = select i1 %449, float 1.000000e+00, float %447\l  br label %451\l}"];
	Node0x4541e60 -> Node0x452d830;
	Node0x452d830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%451:\l451:                                              \l  %452 = phi float [ %274, %92 ], [ %450, %436 ], [ %72, %90 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %453 = load i32, i32 addrspace(3)*\l... @_ZZ19cuComputeNormGlobalPfiiS_iiiS_fbE6step_A, align 4, !tbaa !5\l  %454 = add nsw i32 %453, %71\l  %455 = load i32, i32 addrspace(3)*\l... @_ZZ19cuComputeNormGlobalPfiiS_iiiS_fbE6step_B, align 4, !tbaa !5\l  %456 = add nsw i32 %455, %70\l  %457 = load i32, i32 addrspace(3)*\l... @_ZZ19cuComputeNormGlobalPfiiS_iiiS_fbE5end_A, align 4, !tbaa !5\l  %458 = icmp sgt i32 %454, %457\l  br i1 %458, label %66, label %69, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x452d830:s0 -> Node0x452bff0;
	Node0x452d830:s1 -> Node0x452d730;
	Node0x452f810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%459:\l459:                                              \l  %460 = load i32, i32 addrspace(3)*\l... @_ZZ19cuComputeNormGlobalPfiiS_iiiS_fbE7begin_A, align 4, !tbaa !5\l  %461 = add nsw i32 %460, %12\l  %462 = mul nsw i32 %461, %5\l  %463 = load i32, i32 addrspace(3)*\l... @_ZZ19cuComputeNormGlobalPfiiS_iiiS_fbE7begin_B, align 4, !tbaa !5\l  %464 = add i32 %463, %11\l  %465 = add i32 %464, %462\l  %466 = sext i32 %465 to i64\l  %467 = getelementptr inbounds float, float addrspace(1)* %7, i64 %466\l  store float %68, float addrspace(1)* %467, align 4, !tbaa !9\l  br label %468\l}"];
	Node0x452f810 -> Node0x452f8a0;
	Node0x452f8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%468:\l468:                                              \l  ret void\l}"];
}
