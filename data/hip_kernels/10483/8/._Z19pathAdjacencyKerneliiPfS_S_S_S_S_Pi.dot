digraph "CFG for '_Z19pathAdjacencyKerneliiPfS_S_S_S_S_Pi' function" {
	label="CFG for '_Z19pathAdjacencyKerneliiPfS_S_S_S_S_Pi' function";

	Node0x5304380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !4\l  %15 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !13, !invariant.load\l... !14\l  %18 = zext i16 %17 to i32\l  %19 = udiv i32 %14, %18\l  %20 = mul i32 %19, %18\l  %21 = icmp ugt i32 %14, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %10\l  %25 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %26 = add i32 %24, %25\l  %27 = mul i32 %26, %18\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %29 = add i32 %27, %28\l  %30 = mul nsw i32 %1, %0\l  %31 = icmp slt i32 %29, %30\l  br i1 %31, label %32, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5304380:s0 -> Node0x53077b0;
	Node0x5304380:s1 -> Node0x5307840;
	Node0x53077b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = sdiv i32 %29, %1\l  %34 = mul nsw i32 %33, %1\l  %35 = sub nsw i32 %29, %34\l  %36 = add nsw i32 %33, %0\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %2, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %40 = add nsw i32 %35, %1\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %44 = fsub contract float %39, %43\l  %45 = sext i32 %33 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %2, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %48 = sext i32 %35 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %3, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %51 = fsub contract float %47, %50\l  %52 = getelementptr inbounds float, float addrspace(1)* %4, i64 %48\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %54 = fmul contract float %44, %53\l  %55 = getelementptr inbounds float, float addrspace(1)* %5, i64 %48\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %57 = fmul contract float %51, %56\l  %58 = fsub contract float %54, %57\l  %59 = getelementptr inbounds float, float addrspace(1)* %6, i64 %45\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %61 = fmul contract float %44, %60\l  %62 = getelementptr inbounds float, float addrspace(1)* %7, i64 %45\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %64 = fmul contract float %51, %63\l  %65 = fsub contract float %61, %64\l  %66 = fmul contract float %56, %60\l  %67 = fmul contract float %53, %63\l  %68 = fsub contract float %66, %67\l  %69 = fdiv contract float %58, %68\l  %70 = fdiv contract float %65, %68\l  %71 = fcmp contract oge float %69, 0.000000e+00\l  %72 = fcmp contract ole float %69, 1.000000e+00\l  %73 = and i1 %71, %72\l  %74 = fcmp contract oge float %70, 0.000000e+00\l  %75 = select i1 %73, i1 %74, i1 false\l  %76 = fcmp contract ole float %70, 1.000000e+00\l  %77 = select i1 %75, i1 %76, i1 false\l  %78 = zext i1 %77 to i32\l  %79 = sext i32 %29 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %79\l  store i32 %78, i32 addrspace(1)* %80, align 4, !tbaa !20\l  br label %81\l}"];
	Node0x53077b0 -> Node0x5307840;
	Node0x5307840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  ret void\l}"];
}
