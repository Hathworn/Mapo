digraph "CFG for '_Z13rovCorrectioniiiiiiiPf' function" {
	label="CFG for '_Z13rovCorrectioniiiiiiiPf' function";

	Node0x5426f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = icmp slt i32 %17, %0\l  br i1 %18, label %19, label %240\l|{<s0>T|<s1>F}}"];
	Node0x5426f50:s0 -> Node0x5428e50;
	Node0x5426f50:s1 -> Node0x5428ee0;
	Node0x5428e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%19:\l19:                                               \l  %20 = mul nsw i32 %5, %4\l  %21 = mul nsw i32 %2, %1\l  %22 = sitofp i32 %2 to double\l  %23 = sitofp i32 %1 to double\l  %24 = tail call double @llvm.fabs.f64(double %22)\l  %25 = tail call double @llvm.amdgcn.frexp.mant.f64(double %24)\l  %26 = fcmp olt double %25, 0x3FE5555555555555\l  %27 = zext i1 %26 to i32\l  %28 = tail call double @llvm.amdgcn.ldexp.f64(double %25, i32 %27)\l  %29 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %24)\l  %30 = sub nsw i32 %29, %27\l  %31 = fadd double %28, -1.000000e+00\l  %32 = fadd double %28, 1.000000e+00\l  %33 = fadd double %32, -1.000000e+00\l  %34 = fsub double %28, %33\l  %35 = tail call double @llvm.amdgcn.rcp.f64(double %32)\l  %36 = fneg double %32\l  %37 = tail call double @llvm.fma.f64(double %36, double %35, double\l... 1.000000e+00)\l  %38 = tail call double @llvm.fma.f64(double %37, double %35, double %35)\l  %39 = tail call double @llvm.fma.f64(double %36, double %38, double\l... 1.000000e+00)\l  %40 = tail call double @llvm.fma.f64(double %39, double %38, double %38)\l  %41 = fmul double %31, %40\l  %42 = fmul double %32, %41\l  %43 = fneg double %42\l  %44 = tail call double @llvm.fma.f64(double %41, double %32, double %43)\l  %45 = tail call double @llvm.fma.f64(double %41, double %34, double %44)\l  %46 = fadd double %42, %45\l  %47 = fsub double %46, %42\l  %48 = fsub double %45, %47\l  %49 = fsub double %31, %46\l  %50 = fsub double %31, %49\l  %51 = fsub double %50, %46\l  %52 = fsub double %51, %48\l  %53 = fadd double %49, %52\l  %54 = fmul double %40, %53\l  %55 = fadd double %41, %54\l  %56 = fsub double %55, %41\l  %57 = fsub double %54, %56\l  %58 = fmul double %55, %55\l  %59 = fneg double %58\l  %60 = tail call double @llvm.fma.f64(double %55, double %55, double %59)\l  %61 = fmul double %57, 2.000000e+00\l  %62 = tail call double @llvm.fma.f64(double %55, double %61, double %60)\l  %63 = fadd double %58, %62\l  %64 = fsub double %63, %58\l  %65 = fsub double %62, %64\l  %66 = tail call double @llvm.fma.f64(double %63, double 0x3FBDEE674222DE17,\l... double 0x3FBA6564968915A9)\l  %67 = tail call double @llvm.fma.f64(double %63, double %66, double\l... 0x3FBE25E43ABE935A)\l  %68 = tail call double @llvm.fma.f64(double %63, double %67, double\l... 0x3FC110EF47E6C9C2)\l  %69 = tail call double @llvm.fma.f64(double %63, double %68, double\l... 0x3FC3B13BCFA74449)\l  %70 = tail call double @llvm.fma.f64(double %63, double %69, double\l... 0x3FC745D171BF3C30)\l  %71 = tail call double @llvm.fma.f64(double %63, double %70, double\l... 0x3FCC71C71C7792CE)\l  %72 = tail call double @llvm.fma.f64(double %63, double %71, double\l... 0x3FD24924924920DA)\l  %73 = tail call double @llvm.fma.f64(double %63, double %72, double\l... 0x3FD999999999999C)\l  %74 = sitofp i32 %30 to double\l  %75 = fmul double %74, 0x3FE62E42FEFA39EF\l  %76 = fneg double %75\l  %77 = tail call double @llvm.fma.f64(double %74, double 0x3FE62E42FEFA39EF,\l... double %76)\l  %78 = tail call double @llvm.fma.f64(double %74, double 0x3C7ABC9E3B39803F,\l... double %77)\l  %79 = fadd double %75, %78\l  %80 = fsub double %79, %75\l  %81 = fsub double %78, %80\l  %82 = tail call double @llvm.amdgcn.ldexp.f64(double %55, i32 1)\l  %83 = tail call double @llvm.amdgcn.ldexp.f64(double %57, i32 1)\l  %84 = fmul double %55, %63\l  %85 = fneg double %84\l  %86 = tail call double @llvm.fma.f64(double %63, double %55, double %85)\l  %87 = tail call double @llvm.fma.f64(double %63, double %57, double %86)\l  %88 = tail call double @llvm.fma.f64(double %65, double %55, double %87)\l  %89 = fadd double %84, %88\l  %90 = fsub double %89, %84\l  %91 = fsub double %88, %90\l  %92 = fmul double %63, %73\l  %93 = fneg double %92\l  %94 = tail call double @llvm.fma.f64(double %63, double %73, double %93)\l  %95 = tail call double @llvm.fma.f64(double %65, double %73, double %94)\l  %96 = fadd double %92, %95\l  %97 = fsub double %96, %92\l  %98 = fsub double %95, %97\l  %99 = fadd double %96, 0x3FE5555555555555\l  %100 = fadd double %99, 0xBFE5555555555555\l  %101 = fsub double %96, %100\l  %102 = fadd double %98, 0x3C8543B0D5DF274D\l  %103 = fadd double %102, %101\l  %104 = fadd double %99, %103\l  %105 = fsub double %104, %99\l  %106 = fsub double %103, %105\l  %107 = fmul double %89, %104\l  %108 = fneg double %107\l  %109 = tail call double @llvm.fma.f64(double %89, double %104, double %108)\l  %110 = tail call double @llvm.fma.f64(double %89, double %106, double %109)\l  %111 = tail call double @llvm.fma.f64(double %91, double %104, double %110)\l  %112 = fadd double %107, %111\l  %113 = fsub double %112, %107\l  %114 = fsub double %111, %113\l  %115 = fadd double %82, %112\l  %116 = fsub double %115, %82\l  %117 = fsub double %112, %116\l  %118 = fadd double %83, %114\l  %119 = fadd double %118, %117\l  %120 = fadd double %115, %119\l  %121 = fsub double %120, %115\l  %122 = fsub double %119, %121\l  %123 = fadd double %79, %120\l  %124 = fsub double %123, %79\l  %125 = fsub double %123, %124\l  %126 = fsub double %79, %125\l  %127 = fsub double %120, %124\l  %128 = fadd double %127, %126\l  %129 = fadd double %81, %122\l  %130 = fsub double %129, %81\l  %131 = fsub double %129, %130\l  %132 = fsub double %81, %131\l  %133 = fsub double %122, %130\l  %134 = fadd double %133, %132\l  %135 = fadd double %129, %128\l  %136 = fadd double %123, %135\l  %137 = fsub double %136, %123\l  %138 = fsub double %135, %137\l  %139 = fadd double %134, %138\l  %140 = fadd double %136, %139\l  %141 = fsub double %140, %136\l  %142 = fsub double %139, %141\l  %143 = fmul double %140, %23\l  %144 = fneg double %143\l  %145 = tail call double @llvm.fma.f64(double %23, double %140, double %144)\l  %146 = tail call double @llvm.fma.f64(double %23, double %142, double %145)\l  %147 = fadd double %143, %146\l  %148 = fsub double %147, %143\l  %149 = fsub double %146, %148\l  %150 = tail call double @llvm.fabs.f64(double %143) #3\l  %151 = fcmp oeq double %150, 0x7FF0000000000000\l  %152 = select i1 %151, double %143, double %147\l  %153 = tail call double @llvm.fabs.f64(double %152) #3\l  %154 = fcmp oeq double %153, 0x7FF0000000000000\l  %155 = select i1 %154, double 0.000000e+00, double %149\l  %156 = fmul double %152, 0x3FF71547652B82FE\l  %157 = tail call double @llvm.rint.f64(double %156)\l  %158 = fneg double %157\l  %159 = tail call double @llvm.fma.f64(double %158, double\l... 0x3FE62E42FEFA39EF, double %152)\l  %160 = tail call double @llvm.fma.f64(double %158, double\l... 0x3C7ABC9E3B39803F, double %159)\l  %161 = tail call double @llvm.fma.f64(double %160, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %162 = tail call double @llvm.fma.f64(double %160, double %161, double\l... 0x3EC71DEE623FDE64)\l  %163 = tail call double @llvm.fma.f64(double %160, double %162, double\l... 0x3EFA01997C89E6B0)\l  %164 = tail call double @llvm.fma.f64(double %160, double %163, double\l... 0x3F2A01A014761F6E)\l  %165 = tail call double @llvm.fma.f64(double %160, double %164, double\l... 0x3F56C16C1852B7B0)\l  %166 = tail call double @llvm.fma.f64(double %160, double %165, double\l... 0x3F81111111122322)\l  %167 = tail call double @llvm.fma.f64(double %160, double %166, double\l... 0x3FA55555555502A1)\l  %168 = tail call double @llvm.fma.f64(double %160, double %167, double\l... 0x3FC5555555555511)\l  %169 = tail call double @llvm.fma.f64(double %160, double %168, double\l... 0x3FE000000000000B)\l  %170 = tail call double @llvm.fma.f64(double %160, double %169, double\l... 1.000000e+00)\l  %171 = tail call double @llvm.fma.f64(double %160, double %170, double\l... 1.000000e+00)\l  %172 = fptosi double %157 to i32\l  %173 = tail call double @llvm.amdgcn.ldexp.f64(double %171, i32 %172)\l  %174 = fcmp ogt double %152, 1.024000e+03\l  %175 = select i1 %174, double 0x7FF0000000000000, double %173\l  %176 = fcmp olt double %152, -1.075000e+03\l  %177 = select i1 %176, double 0.000000e+00, double %175\l  %178 = tail call double @llvm.fma.f64(double %177, double %155, double %177)\l  %179 = tail call double @llvm.fabs.f64(double %177) #3\l  %180 = fcmp oeq double %179, 0x7FF0000000000000\l  %181 = select i1 %180, double %177, double %178\l  %182 = tail call double @llvm.fabs.f64(double %23)\l  %183 = tail call double @llvm.trunc.f64(double %182)\l  %184 = fcmp oeq double %182, %183\l  %185 = zext i1 %184 to i32\l  %186 = fmul double %183, 5.000000e-01\l  %187 = tail call double @llvm.amdgcn.fract.f64(double %186)\l  %188 = tail call i1 @llvm.amdgcn.class.f64(double %186, i32 516)\l  %189 = select i1 %188, double 0.000000e+00, double %187\l  %190 = fcmp oeq double %189, 0.000000e+00\l  %191 = and i1 %184, %190\l  %192 = zext i1 %191 to i32\l  %193 = add nuw nsw i32 %192, %185\l  %194 = icmp eq i32 %193, 1\l  %195 = icmp slt i32 %2, 0\l  %196 = and i1 %195, %194\l  %197 = select i1 %196, double -0.000000e+00, double 0.000000e+00\l  %198 = tail call double @llvm.copysign.f64(double %181, double %197)\l  %199 = icmp sgt i32 %2, -1\l  %200 = icmp ne i32 %193, 0\l  %201 = select i1 %199, i1 true, i1 %200\l  %202 = select i1 %201, double %198, double 0x7FF8000000000000\l  %203 = fcmp oeq double %182, 0x7FF0000000000000\l  %204 = fcmp oeq double %24, 1.000000e+00\l  %205 = fadd double %24, -1.000000e+00\l  %206 = bitcast double %23 to \<2 x i32\>\l  %207 = extractelement \<2 x i32\> %206, i64 1\l  %208 = bitcast double %205 to \<2 x i32\>\l  %209 = extractelement \<2 x i32\> %208, i64 1\l  %210 = xor i32 %209, %207\l  %211 = icmp sgt i32 %210, -1\l  %212 = select i1 %211, double 0x7FF0000000000000, double 0.000000e+00\l  %213 = select i1 %204, double %24, double %212\l  %214 = select i1 %203, double %213, double %202\l  %215 = fcmp oeq double %24, 0x7FF0000000000000\l  %216 = icmp eq i32 %2, 0\l  %217 = or i1 %216, %215\l  %218 = icmp slt i32 %1, 0\l  %219 = xor i1 %218, %216\l  %220 = select i1 %219, double 0.000000e+00, double 0x7FF0000000000000\l  %221 = select i1 %194, double %22, double 0.000000e+00\l  %222 = tail call double @llvm.copysign.f64(double %220, double %221)\l  %223 = select i1 %217, double %222, double %214\l  %224 = icmp eq i32 %2, 1\l  %225 = icmp eq i32 %1, 0\l  %226 = or i1 %225, %224\l  %227 = fptosi double %223 to i32\l  %228 = shl nsw i32 %227, 1\l  %229 = select i1 %226, i32 2, i32 %228\l  %230 = add nsw i32 %229, %21\l  %231 = add i32 %20, %6\l  %232 = mul i32 %230, %231\l  %233 = add nsw i32 %232, %21\l  %234 = add nsw i32 %233, %17\l  %235 = sext i32 %234 to i64\l  %236 = getelementptr inbounds float, float addrspace(1)* %7, i64 %235\l  %237 = load float, float addrspace(1)* %236, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %238 = fcmp contract ogt float %237, 0.000000e+00\l  br i1 %238, label %239, label %240\l|{<s0>T|<s1>F}}"];
	Node0x5428e50:s0 -> Node0x54363d0;
	Node0x5428e50:s1 -> Node0x5428ee0;
	Node0x54363d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%239:\l239:                                              \l  store float 0.000000e+00, float addrspace(1)* %236, align 4, !tbaa !7\l  br label %240\l}"];
	Node0x54363d0 -> Node0x5428ee0;
	Node0x5428ee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%240:\l240:                                              \l  ret void\l}"];
}
