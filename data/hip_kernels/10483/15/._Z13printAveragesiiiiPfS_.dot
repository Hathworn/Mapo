digraph "CFG for '_Z13printAveragesiiiiPfS_' function" {
	label="CFG for '_Z13printAveragesiiiiPfS_' function";

	Node0x615fcd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %0\l  br i1 %16, label %17, label %785\l|{<s0>T|<s1>F}}"];
	Node0x615fcd0:s0 -> Node0x61600e0;
	Node0x615fcd0:s1 -> Node0x6161690;
	Node0x61600e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%17:\l17:                                               \l  %18 = sext i32 %1 to i64\l  %19 = shl nsw i64 %18, 2\l  %20 = tail call fastcc i8 addrspace(1)* @__ockl_dm_alloc(i64 %19) #12\l  %21 = ptrtoint i8 addrspace(1)* %20 to i64\l  %22 = bitcast i8 addrspace(1)* %20 to float addrspace(1)*\l  %23 = mul i32 %2, %1\l  %24 = sext i32 %23 to i64\l  %25 = shl nsw i64 %24, 2\l  %26 = tail call fastcc i8 addrspace(1)* @__ockl_dm_alloc(i64 %25) #12\l  %27 = ptrtoint i8 addrspace(1)* %26 to i64\l  %28 = bitcast i8 addrspace(1)* %26 to float addrspace(1)*\l  %29 = icmp sgt i32 %1, 0\l  br i1 %29, label %30, label %36\l|{<s0>T|<s1>F}}"];
	Node0x61600e0:s0 -> Node0x6161fe0;
	Node0x61600e0:s1 -> Node0x6162030;
	Node0x6161fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%30:\l30:                                               \l  %31 = icmp sgt i32 %2, 0\l  %32 = and i32 %2, 7\l  %33 = icmp ult i32 %2, 8\l  %34 = and i32 %2, -8\l  %35 = icmp eq i32 %32, 0\l  br label %46\l}"];
	Node0x6161fe0 -> Node0x6161640;
	Node0x6162030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%36:\l36:                                               \l  %37 = icmp sgt i32 %3, 0\l  br i1 %37, label %38, label %111\l|{<s0>T|<s1>F}}"];
	Node0x6162030:s0 -> Node0x61626f0;
	Node0x6162030:s1 -> Node0x6162740;
	Node0x61626f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%38:\l38:                                               \l  %39 = add nsw i32 %0, 1\l  %40 = add nsw i32 %15, 1\l  %41 = icmp sgt i32 %2, 0\l  %42 = and i32 %2, 7\l  %43 = icmp ult i32 %2, 8\l  %44 = and i32 %2, -8\l  %45 = icmp eq i32 %42, 0\l  br label %103\l}"];
	Node0x61626f0 -> Node0x6162c70;
	Node0x6161640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%46:\l46:                                               \l  %47 = phi i32 [ 0, %30 ], [ %64, %63 ]\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %22, i64 %48\l  store float 0.000000e+00, float addrspace(1)* %49, align 4, !tbaa !7\l  br i1 %31, label %50, label %63\l|{<s0>T|<s1>F}}"];
	Node0x6161640:s0 -> Node0x6163c00;
	Node0x6161640:s1 -> Node0x6162d60;
	Node0x6163c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%50:\l50:                                               \l  %51 = mul nsw i32 %47, %2\l  br i1 %33, label %52, label %66\l|{<s0>T|<s1>F}}"];
	Node0x6163c00:s0 -> Node0x6163dd0;
	Node0x6163c00:s1 -> Node0x6163e20;
	Node0x6163dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%52:\l52:                                               \l  %53 = phi i32 [ 0, %50 ], [ %100, %66 ]\l  br i1 %35, label %63, label %54\l|{<s0>T|<s1>F}}"];
	Node0x6163dd0:s0 -> Node0x6162d60;
	Node0x6163dd0:s1 -> Node0x6164010;
	Node0x6164010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%54:\l54:                                               \l  %55 = phi i32 [ %60, %54 ], [ %53, %52 ]\l  %56 = phi i32 [ %61, %54 ], [ 0, %52 ]\l  %57 = add nsw i32 %55, %51\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %28, i64 %58\l  store float 0.000000e+00, float addrspace(1)* %59, align 4, !tbaa !7\l  %60 = add nuw nsw i32 %55, 1\l  %61 = add i32 %56, 1\l  %62 = icmp eq i32 %61, %32\l  br i1 %62, label %63, label %54, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x6164010:s0 -> Node0x6162d60;
	Node0x6164010:s1 -> Node0x6164010;
	Node0x6162d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%63:\l63:                                               \l  %64 = add nuw nsw i32 %47, 1\l  %65 = icmp eq i32 %64, %1\l  br i1 %65, label %36, label %46, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x6162d60:s0 -> Node0x6162030;
	Node0x6162d60:s1 -> Node0x6161640;
	Node0x6163e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%66:\l66:                                               \l  %67 = phi i32 [ %100, %66 ], [ 0, %50 ]\l  %68 = phi i32 [ %101, %66 ], [ 0, %50 ]\l  %69 = add nsw i32 %67, %51\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %28, i64 %70\l  store float 0.000000e+00, float addrspace(1)* %71, align 4, !tbaa !7\l  %72 = or i32 %67, 1\l  %73 = add nsw i32 %72, %51\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %28, i64 %74\l  store float 0.000000e+00, float addrspace(1)* %75, align 4, !tbaa !7\l  %76 = or i32 %67, 2\l  %77 = add nsw i32 %76, %51\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %28, i64 %78\l  store float 0.000000e+00, float addrspace(1)* %79, align 4, !tbaa !7\l  %80 = or i32 %67, 3\l  %81 = add nsw i32 %80, %51\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %28, i64 %82\l  store float 0.000000e+00, float addrspace(1)* %83, align 4, !tbaa !7\l  %84 = or i32 %67, 4\l  %85 = add nsw i32 %84, %51\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %28, i64 %86\l  store float 0.000000e+00, float addrspace(1)* %87, align 4, !tbaa !7\l  %88 = or i32 %67, 5\l  %89 = add nsw i32 %88, %51\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %28, i64 %90\l  store float 0.000000e+00, float addrspace(1)* %91, align 4, !tbaa !7\l  %92 = or i32 %67, 6\l  %93 = add nsw i32 %92, %51\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %28, i64 %94\l  store float 0.000000e+00, float addrspace(1)* %95, align 4, !tbaa !7\l  %96 = or i32 %67, 7\l  %97 = add nsw i32 %96, %51\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %28, i64 %98\l  store float 0.000000e+00, float addrspace(1)* %99, align 4, !tbaa !7\l  %100 = add nuw nsw i32 %67, 8\l  %101 = add i32 %68, 8\l  %102 = icmp eq i32 %101, %34\l  br i1 %102, label %52, label %66, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x6163e20:s0 -> Node0x6163dd0;
	Node0x6163e20:s1 -> Node0x6163e20;
	Node0x6162c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%103:\l103:                                              \l  %104 = phi i32 [ 0, %38 ], [ %120, %119 ]\l  br i1 %29, label %105, label %119\l|{<s0>T|<s1>F}}"];
	Node0x6162c70:s0 -> Node0x6166e80;
	Node0x6162c70:s1 -> Node0x6166d40;
	Node0x6166e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%105:\l105:                                              \l  %106 = mul i32 %104, %39\l  %107 = add i32 %40, %106\l  %108 = mul i32 %107, %1\l  %109 = add i32 %106, %15\l  %110 = mul i32 %23, %109\l  br label %122\l}"];
	Node0x6166e80 -> Node0x6167290;
	Node0x6162740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%111:\l111:                                              \l  br i1 %29, label %112, label %239\l|{<s0>T|<s1>F}}"];
	Node0x6162740:s0 -> Node0x6167350;
	Node0x6162740:s1 -> Node0x61673a0;
	Node0x6167350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%112:\l112:                                              \l  %113 = sitofp i32 %3 to float\l  %114 = icmp sgt i32 %2, 0\l  %115 = and i32 %2, 3\l  %116 = icmp ult i32 %2, 4\l  %117 = and i32 %2, -4\l  %118 = icmp eq i32 %115, 0\l  br label %260\l}"];
	Node0x6167350 -> Node0x6167820;
	Node0x6166d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%119:\l119:                                              \l  %120 = add nuw nsw i32 %104, 1\l  %121 = icmp eq i32 %120, %3\l  br i1 %121, label %111, label %103, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x6166d40:s0 -> Node0x6162740;
	Node0x6166d40:s1 -> Node0x6162c70;
	Node0x6167290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%122:\l122:                                              \l  %123 = phi i32 [ 0, %105 ], [ %152, %151 ]\l  %124 = add i32 %123, %108\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %4, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !7\l  %128 = zext i32 %123 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %22, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !7\l  %131 = fadd contract float %127, %130\l  store float %131, float addrspace(1)* %129, align 4, !tbaa !7\l  br i1 %41, label %132, label %151\l|{<s0>T|<s1>F}}"];
	Node0x6167290:s0 -> Node0x6165170;
	Node0x6167290:s1 -> Node0x6167b70;
	Node0x6165170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%132:\l132:                                              \l  %133 = mul nsw i32 %123, %2\l  br i1 %43, label %134, label %154\l|{<s0>T|<s1>F}}"];
	Node0x6165170:s0 -> Node0x6168740;
	Node0x6165170:s1 -> Node0x6168790;
	Node0x6168740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%134:\l134:                                              \l  %135 = phi i32 [ 0, %132 ], [ %236, %154 ]\l  br i1 %45, label %151, label %136\l|{<s0>T|<s1>F}}"];
	Node0x6168740:s0 -> Node0x6167b70;
	Node0x6168740:s1 -> Node0x6168980;
	Node0x6168980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%136:\l136:                                              \l  %137 = phi i32 [ %148, %136 ], [ %135, %134 ]\l  %138 = phi i32 [ %149, %136 ], [ 0, %134 ]\l  %139 = add i32 %137, %133\l  %140 = add i32 %139, %110\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %5, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !7\l  %144 = sext i32 %139 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %28, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !7\l  %147 = fadd contract float %143, %146\l  store float %147, float addrspace(1)* %145, align 4, !tbaa !7\l  %148 = add nuw nsw i32 %137, 1\l  %149 = add i32 %138, 1\l  %150 = icmp eq i32 %149, %42\l  br i1 %150, label %151, label %136, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x6168980:s0 -> Node0x6167b70;
	Node0x6168980:s1 -> Node0x6168980;
	Node0x6167b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%151:\l151:                                              \l  %152 = add nuw nsw i32 %123, 1\l  %153 = icmp eq i32 %152, %1\l  br i1 %153, label %119, label %122, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x6167b70:s0 -> Node0x6166d40;
	Node0x6167b70:s1 -> Node0x6167290;
	Node0x6168790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%154:\l154:                                              \l  %155 = phi i32 [ %236, %154 ], [ 0, %132 ]\l  %156 = phi i32 [ %237, %154 ], [ 0, %132 ]\l  %157 = add i32 %155, %133\l  %158 = add i32 %157, %110\l  %159 = sext i32 %158 to i64\l  %160 = getelementptr inbounds float, float addrspace(1)* %5, i64 %159\l  %161 = load float, float addrspace(1)* %160, align 4, !tbaa !7\l  %162 = sext i32 %157 to i64\l  %163 = getelementptr inbounds float, float addrspace(1)* %28, i64 %162\l  %164 = load float, float addrspace(1)* %163, align 4, !tbaa !7\l  %165 = fadd contract float %161, %164\l  store float %165, float addrspace(1)* %163, align 4, !tbaa !7\l  %166 = or i32 %155, 1\l  %167 = add i32 %166, %133\l  %168 = add i32 %167, %110\l  %169 = sext i32 %168 to i64\l  %170 = getelementptr inbounds float, float addrspace(1)* %5, i64 %169\l  %171 = load float, float addrspace(1)* %170, align 4, !tbaa !7\l  %172 = sext i32 %167 to i64\l  %173 = getelementptr inbounds float, float addrspace(1)* %28, i64 %172\l  %174 = load float, float addrspace(1)* %173, align 4, !tbaa !7\l  %175 = fadd contract float %171, %174\l  store float %175, float addrspace(1)* %173, align 4, !tbaa !7\l  %176 = or i32 %155, 2\l  %177 = add i32 %176, %133\l  %178 = add i32 %177, %110\l  %179 = sext i32 %178 to i64\l  %180 = getelementptr inbounds float, float addrspace(1)* %5, i64 %179\l  %181 = load float, float addrspace(1)* %180, align 4, !tbaa !7\l  %182 = sext i32 %177 to i64\l  %183 = getelementptr inbounds float, float addrspace(1)* %28, i64 %182\l  %184 = load float, float addrspace(1)* %183, align 4, !tbaa !7\l  %185 = fadd contract float %181, %184\l  store float %185, float addrspace(1)* %183, align 4, !tbaa !7\l  %186 = or i32 %155, 3\l  %187 = add i32 %186, %133\l  %188 = add i32 %187, %110\l  %189 = sext i32 %188 to i64\l  %190 = getelementptr inbounds float, float addrspace(1)* %5, i64 %189\l  %191 = load float, float addrspace(1)* %190, align 4, !tbaa !7\l  %192 = sext i32 %187 to i64\l  %193 = getelementptr inbounds float, float addrspace(1)* %28, i64 %192\l  %194 = load float, float addrspace(1)* %193, align 4, !tbaa !7\l  %195 = fadd contract float %191, %194\l  store float %195, float addrspace(1)* %193, align 4, !tbaa !7\l  %196 = or i32 %155, 4\l  %197 = add i32 %196, %133\l  %198 = add i32 %197, %110\l  %199 = sext i32 %198 to i64\l  %200 = getelementptr inbounds float, float addrspace(1)* %5, i64 %199\l  %201 = load float, float addrspace(1)* %200, align 4, !tbaa !7\l  %202 = sext i32 %197 to i64\l  %203 = getelementptr inbounds float, float addrspace(1)* %28, i64 %202\l  %204 = load float, float addrspace(1)* %203, align 4, !tbaa !7\l  %205 = fadd contract float %201, %204\l  store float %205, float addrspace(1)* %203, align 4, !tbaa !7\l  %206 = or i32 %155, 5\l  %207 = add i32 %206, %133\l  %208 = add i32 %207, %110\l  %209 = sext i32 %208 to i64\l  %210 = getelementptr inbounds float, float addrspace(1)* %5, i64 %209\l  %211 = load float, float addrspace(1)* %210, align 4, !tbaa !7\l  %212 = sext i32 %207 to i64\l  %213 = getelementptr inbounds float, float addrspace(1)* %28, i64 %212\l  %214 = load float, float addrspace(1)* %213, align 4, !tbaa !7\l  %215 = fadd contract float %211, %214\l  store float %215, float addrspace(1)* %213, align 4, !tbaa !7\l  %216 = or i32 %155, 6\l  %217 = add i32 %216, %133\l  %218 = add i32 %217, %110\l  %219 = sext i32 %218 to i64\l  %220 = getelementptr inbounds float, float addrspace(1)* %5, i64 %219\l  %221 = load float, float addrspace(1)* %220, align 4, !tbaa !7\l  %222 = sext i32 %217 to i64\l  %223 = getelementptr inbounds float, float addrspace(1)* %28, i64 %222\l  %224 = load float, float addrspace(1)* %223, align 4, !tbaa !7\l  %225 = fadd contract float %221, %224\l  store float %225, float addrspace(1)* %223, align 4, !tbaa !7\l  %226 = or i32 %155, 7\l  %227 = add i32 %226, %133\l  %228 = add i32 %227, %110\l  %229 = sext i32 %228 to i64\l  %230 = getelementptr inbounds float, float addrspace(1)* %5, i64 %229\l  %231 = load float, float addrspace(1)* %230, align 4, !tbaa !7\l  %232 = sext i32 %227 to i64\l  %233 = getelementptr inbounds float, float addrspace(1)* %28, i64 %232\l  %234 = load float, float addrspace(1)* %233, align 4, !tbaa !7\l  %235 = fadd contract float %231, %234\l  store float %235, float addrspace(1)* %233, align 4, !tbaa !7\l  %236 = add nuw nsw i32 %155, 8\l  %237 = add i32 %156, 8\l  %238 = icmp eq i32 %237, %44\l  br i1 %238, label %134, label %154, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x6168790:s0 -> Node0x6168740;
	Node0x6168790:s1 -> Node0x6168790;
	Node0x61673a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%239:\l239:                                              \l  %240 = load float, float addrspace(1)* %22, align 4, !tbaa !7\l  %241 = fpext float %240 to double\l  %242 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %243 = fpext float %242 to double\l  %244 = getelementptr inbounds i8, i8 addrspace(1)* %26, i64 4\l  %245 = bitcast i8 addrspace(1)* %244 to float addrspace(1)*\l  %246 = load float, float addrspace(1)* %245, align 4, !tbaa !7\l  %247 = fpext float %246 to double\l  %248 = getelementptr inbounds i8, i8 addrspace(1)* %26, i64 8\l  %249 = bitcast i8 addrspace(1)* %248 to float addrspace(1)*\l  %250 = load float, float addrspace(1)* %249, align 4, !tbaa !7\l  %251 = fpext float %250 to double\l  %252 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %253 = getelementptr inbounds i8, i8 addrspace(4)* %252, i64 24\l  %254 = bitcast i8 addrspace(4)* %253 to i64 addrspace(4)*\l  %255 = load i64, i64 addrspace(4)* %254, align 8, !tbaa !20\l  %256 = inttoptr i64 %255 to i8 addrspace(1)*\l  %257 = addrspacecast i8 addrspace(1)* %256 to i8*\l  %258 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %257, i32 noundef 2, i64 noundef 33, i64 noundef 0, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #12\l  %259 = extractelement \<2 x i64\> %258, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([41 x i8], [41 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %313, label %317\l|{<s0>T|<s1>F}}"];
	Node0x61673a0:s0 -> Node0x616efd0;
	Node0x61673a0:s1 -> Node0x616f990;
	Node0x6167820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%260:\l260:                                              \l  %261 = phi i32 [ 0, %112 ], [ %282, %281 ]\l  %262 = zext i32 %261 to i64\l  %263 = getelementptr inbounds float, float addrspace(1)* %22, i64 %262\l  %264 = load float, float addrspace(1)* %263, align 4, !tbaa !7\l  %265 = fdiv contract float %264, %113\l  store float %265, float addrspace(1)* %263, align 4, !tbaa !7\l  br i1 %114, label %266, label %281\l|{<s0>T|<s1>F}}"];
	Node0x6167820:s0 -> Node0x616ff10;
	Node0x6167820:s1 -> Node0x616fb00;
	Node0x616ff10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%266:\l266:                                              \l  %267 = mul nsw i32 %261, %2\l  br i1 %116, label %268, label %284\l|{<s0>T|<s1>F}}"];
	Node0x616ff10:s0 -> Node0x61700e0;
	Node0x616ff10:s1 -> Node0x6170130;
	Node0x61700e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%268:\l268:                                              \l  %269 = phi i32 [ 0, %266 ], [ %310, %284 ]\l  br i1 %118, label %281, label %270\l|{<s0>T|<s1>F}}"];
	Node0x61700e0:s0 -> Node0x616fb00;
	Node0x61700e0:s1 -> Node0x6170320;
	Node0x6170320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%270:\l270:                                              \l  %271 = phi i32 [ %278, %270 ], [ %269, %268 ]\l  %272 = phi i32 [ %279, %270 ], [ 0, %268 ]\l  %273 = add nsw i32 %271, %267\l  %274 = sext i32 %273 to i64\l  %275 = getelementptr inbounds float, float addrspace(1)* %28, i64 %274\l  %276 = load float, float addrspace(1)* %275, align 4, !tbaa !7\l  %277 = fdiv contract float %276, %113\l  store float %277, float addrspace(1)* %275, align 4, !tbaa !7\l  %278 = add nuw nsw i32 %271, 1\l  %279 = add i32 %272, 1\l  %280 = icmp eq i32 %279, %115\l  br i1 %280, label %281, label %270, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x6170320:s0 -> Node0x616fb00;
	Node0x6170320:s1 -> Node0x6170320;
	Node0x616fb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%281:\l281:                                              \l  %282 = add nuw nsw i32 %261, 1\l  %283 = icmp eq i32 %282, %1\l  br i1 %283, label %239, label %260, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x616fb00:s0 -> Node0x61673a0;
	Node0x616fb00:s1 -> Node0x6167820;
	Node0x6170130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%284:\l284:                                              \l  %285 = phi i32 [ %310, %284 ], [ 0, %266 ]\l  %286 = phi i32 [ %311, %284 ], [ 0, %266 ]\l  %287 = add nsw i32 %285, %267\l  %288 = sext i32 %287 to i64\l  %289 = getelementptr inbounds float, float addrspace(1)* %28, i64 %288\l  %290 = load float, float addrspace(1)* %289, align 4, !tbaa !7\l  %291 = fdiv contract float %290, %113\l  store float %291, float addrspace(1)* %289, align 4, !tbaa !7\l  %292 = or i32 %285, 1\l  %293 = add nsw i32 %292, %267\l  %294 = sext i32 %293 to i64\l  %295 = getelementptr inbounds float, float addrspace(1)* %28, i64 %294\l  %296 = load float, float addrspace(1)* %295, align 4, !tbaa !7\l  %297 = fdiv contract float %296, %113\l  store float %297, float addrspace(1)* %295, align 4, !tbaa !7\l  %298 = or i32 %285, 2\l  %299 = add nsw i32 %298, %267\l  %300 = sext i32 %299 to i64\l  %301 = getelementptr inbounds float, float addrspace(1)* %28, i64 %300\l  %302 = load float, float addrspace(1)* %301, align 4, !tbaa !7\l  %303 = fdiv contract float %302, %113\l  store float %303, float addrspace(1)* %301, align 4, !tbaa !7\l  %304 = or i32 %285, 3\l  %305 = add nsw i32 %304, %267\l  %306 = sext i32 %305 to i64\l  %307 = getelementptr inbounds float, float addrspace(1)* %28, i64 %306\l  %308 = load float, float addrspace(1)* %307, align 4, !tbaa !7\l  %309 = fdiv contract float %308, %113\l  store float %309, float addrspace(1)* %307, align 4, !tbaa !7\l  %310 = add nuw nsw i32 %285, 4\l  %311 = add i32 %286, 4\l  %312 = icmp eq i32 %311, %117\l  br i1 %312, label %268, label %284, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x6170130:s0 -> Node0x61700e0;
	Node0x6170130:s1 -> Node0x6170130;
	Node0x616efd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%313:\l313:                                              \l  %314 = and i64 %259, -225\l  %315 = or i64 %314, 32\l  %316 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %257, i32 noundef 2, i64 noundef %315, i64 noundef 0, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #12\l  br label %758\l}"];
	Node0x616efd0 -> Node0x6172a50;
	Node0x616f990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%317:\l317:                                              \l  %318 = and i64 %259, 2\l  %319 = and i64 %259, -3\l  %320 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %319, i64 0\l  br label %321\l}"];
	Node0x616f990 -> Node0x6173520;
	Node0x6173520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%321:\l321:                                              \l  %322 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([41 x i8], [41 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([41 x i8], [41 x i8] addrspace(4)*\l... @.str, i64 0, i64 40) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([41 x i8]* addrspacecast ([41 x i8] addrspace(4)* @.str to [41 x i8]*) to\l... i64)), i64 1))), %317 ], [ %755, %747 ]\l  %323 = phi i8 addrspace(4)* [ getelementptr inbounds ([41 x i8], [41 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %317 ], [ %756, %747 ]\l  %324 = phi \<2 x i64\> [ %320, %317 ], [ %754, %747 ]\l  %325 = icmp ugt i64 %322, 56\l  %326 = extractelement \<2 x i64\> %324, i64 0\l  %327 = or i64 %326, %318\l  %328 = insertelement \<2 x i64\> poison, i64 %327, i64 0\l  %329 = select i1 %325, \<2 x i64\> %324, \<2 x i64\> %328\l  %330 = tail call i64 @llvm.umin.i64(i64 %322, i64 56)\l  %331 = trunc i64 %330 to i32\l  %332 = extractelement \<2 x i64\> %329, i64 0\l  %333 = icmp ugt i32 %331, 7\l  br i1 %333, label %336, label %334\l|{<s0>T|<s1>F}}"];
	Node0x6173520:s0 -> Node0x61743b0;
	Node0x6173520:s1 -> Node0x6174440;
	Node0x6174440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%334:\l334:                                              \l  %335 = icmp eq i32 %331, 0\l  br i1 %335, label %389, label %376\l|{<s0>T|<s1>F}}"];
	Node0x6174440:s0 -> Node0x6174610;
	Node0x6174440:s1 -> Node0x6174660;
	Node0x61743b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%336:\l336:                                              \l  %337 = load i8, i8 addrspace(4)* %323, align 1, !tbaa !27\l  %338 = zext i8 %337 to i64\l  %339 = getelementptr inbounds i8, i8 addrspace(4)* %323, i64 1\l  %340 = load i8, i8 addrspace(4)* %339, align 1, !tbaa !27\l  %341 = zext i8 %340 to i64\l  %342 = shl nuw nsw i64 %341, 8\l  %343 = or i64 %342, %338\l  %344 = getelementptr inbounds i8, i8 addrspace(4)* %323, i64 2\l  %345 = load i8, i8 addrspace(4)* %344, align 1, !tbaa !27\l  %346 = zext i8 %345 to i64\l  %347 = shl nuw nsw i64 %346, 16\l  %348 = or i64 %343, %347\l  %349 = getelementptr inbounds i8, i8 addrspace(4)* %323, i64 3\l  %350 = load i8, i8 addrspace(4)* %349, align 1, !tbaa !27\l  %351 = zext i8 %350 to i64\l  %352 = shl nuw nsw i64 %351, 24\l  %353 = or i64 %348, %352\l  %354 = getelementptr inbounds i8, i8 addrspace(4)* %323, i64 4\l  %355 = load i8, i8 addrspace(4)* %354, align 1, !tbaa !27\l  %356 = zext i8 %355 to i64\l  %357 = shl nuw nsw i64 %356, 32\l  %358 = or i64 %353, %357\l  %359 = getelementptr inbounds i8, i8 addrspace(4)* %323, i64 5\l  %360 = load i8, i8 addrspace(4)* %359, align 1, !tbaa !27\l  %361 = zext i8 %360 to i64\l  %362 = shl nuw nsw i64 %361, 40\l  %363 = or i64 %358, %362\l  %364 = getelementptr inbounds i8, i8 addrspace(4)* %323, i64 6\l  %365 = load i8, i8 addrspace(4)* %364, align 1, !tbaa !27\l  %366 = zext i8 %365 to i64\l  %367 = shl nuw nsw i64 %366, 48\l  %368 = or i64 %363, %367\l  %369 = getelementptr inbounds i8, i8 addrspace(4)* %323, i64 7\l  %370 = load i8, i8 addrspace(4)* %369, align 1, !tbaa !27\l  %371 = zext i8 %370 to i64\l  %372 = shl nuw i64 %371, 56\l  %373 = or i64 %368, %372\l  %374 = add nsw i32 %331, -8\l  %375 = getelementptr inbounds i8, i8 addrspace(4)* %323, i64 8\l  br label %389\l}"];
	Node0x61743b0 -> Node0x6174610;
	Node0x6174660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%376:\l376:                                              \l  %377 = phi i32 [ %387, %376 ], [ 0, %334 ]\l  %378 = phi i64 [ %386, %376 ], [ 0, %334 ]\l  %379 = zext i32 %377 to i64\l  %380 = getelementptr inbounds i8, i8 addrspace(4)* %323, i64 %379\l  %381 = load i8, i8 addrspace(4)* %380, align 1, !tbaa !27\l  %382 = zext i8 %381 to i64\l  %383 = shl i32 %377, 3\l  %384 = zext i32 %383 to i64\l  %385 = shl nuw i64 %382, %384\l  %386 = or i64 %385, %378\l  %387 = add nuw nsw i32 %377, 1\l  %388 = icmp eq i32 %387, %331\l  br i1 %388, label %389, label %376, !llvm.loop !28\l|{<s0>T|<s1>F}}"];
	Node0x6174660:s0 -> Node0x6174610;
	Node0x6174660:s1 -> Node0x6174660;
	Node0x6174610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%389:\l389:                                              \l  %390 = phi i8 addrspace(4)* [ %375, %336 ], [ %323, %334 ], [ %323, %376 ]\l  %391 = phi i32 [ %374, %336 ], [ 0, %334 ], [ 0, %376 ]\l  %392 = phi i64 [ %373, %336 ], [ 0, %334 ], [ %386, %376 ]\l  %393 = icmp ugt i32 %391, 7\l  br i1 %393, label %396, label %394\l|{<s0>T|<s1>F}}"];
	Node0x6174610:s0 -> Node0x6177490;
	Node0x6174610:s1 -> Node0x61774e0;
	Node0x61774e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%394:\l394:                                              \l  %395 = icmp eq i32 %391, 0\l  br i1 %395, label %449, label %436\l|{<s0>T|<s1>F}}"];
	Node0x61774e0:s0 -> Node0x61776b0;
	Node0x61774e0:s1 -> Node0x6177700;
	Node0x6177490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%396:\l396:                                              \l  %397 = load i8, i8 addrspace(4)* %390, align 1, !tbaa !27\l  %398 = zext i8 %397 to i64\l  %399 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 1\l  %400 = load i8, i8 addrspace(4)* %399, align 1, !tbaa !27\l  %401 = zext i8 %400 to i64\l  %402 = shl nuw nsw i64 %401, 8\l  %403 = or i64 %402, %398\l  %404 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 2\l  %405 = load i8, i8 addrspace(4)* %404, align 1, !tbaa !27\l  %406 = zext i8 %405 to i64\l  %407 = shl nuw nsw i64 %406, 16\l  %408 = or i64 %403, %407\l  %409 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 3\l  %410 = load i8, i8 addrspace(4)* %409, align 1, !tbaa !27\l  %411 = zext i8 %410 to i64\l  %412 = shl nuw nsw i64 %411, 24\l  %413 = or i64 %408, %412\l  %414 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 4\l  %415 = load i8, i8 addrspace(4)* %414, align 1, !tbaa !27\l  %416 = zext i8 %415 to i64\l  %417 = shl nuw nsw i64 %416, 32\l  %418 = or i64 %413, %417\l  %419 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 5\l  %420 = load i8, i8 addrspace(4)* %419, align 1, !tbaa !27\l  %421 = zext i8 %420 to i64\l  %422 = shl nuw nsw i64 %421, 40\l  %423 = or i64 %418, %422\l  %424 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 6\l  %425 = load i8, i8 addrspace(4)* %424, align 1, !tbaa !27\l  %426 = zext i8 %425 to i64\l  %427 = shl nuw nsw i64 %426, 48\l  %428 = or i64 %423, %427\l  %429 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 7\l  %430 = load i8, i8 addrspace(4)* %429, align 1, !tbaa !27\l  %431 = zext i8 %430 to i64\l  %432 = shl nuw i64 %431, 56\l  %433 = or i64 %428, %432\l  %434 = add nsw i32 %391, -8\l  %435 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 8\l  br label %449\l}"];
	Node0x6177490 -> Node0x61776b0;
	Node0x6177700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%436:\l436:                                              \l  %437 = phi i32 [ %447, %436 ], [ 0, %394 ]\l  %438 = phi i64 [ %446, %436 ], [ 0, %394 ]\l  %439 = zext i32 %437 to i64\l  %440 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 %439\l  %441 = load i8, i8 addrspace(4)* %440, align 1, !tbaa !27\l  %442 = zext i8 %441 to i64\l  %443 = shl i32 %437, 3\l  %444 = zext i32 %443 to i64\l  %445 = shl nuw i64 %442, %444\l  %446 = or i64 %445, %438\l  %447 = add nuw nsw i32 %437, 1\l  %448 = icmp eq i32 %447, %391\l  br i1 %448, label %449, label %436\l|{<s0>T|<s1>F}}"];
	Node0x6177700:s0 -> Node0x61776b0;
	Node0x6177700:s1 -> Node0x6177700;
	Node0x61776b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%449:\l449:                                              \l  %450 = phi i8 addrspace(4)* [ %435, %396 ], [ %390, %394 ], [ %390, %436 ]\l  %451 = phi i32 [ %434, %396 ], [ 0, %394 ], [ 0, %436 ]\l  %452 = phi i64 [ %433, %396 ], [ 0, %394 ], [ %446, %436 ]\l  %453 = icmp ugt i32 %451, 7\l  br i1 %453, label %456, label %454\l|{<s0>T|<s1>F}}"];
	Node0x61776b0:s0 -> Node0x6179760;
	Node0x61776b0:s1 -> Node0x61797b0;
	Node0x61797b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%454:\l454:                                              \l  %455 = icmp eq i32 %451, 0\l  br i1 %455, label %509, label %496\l|{<s0>T|<s1>F}}"];
	Node0x61797b0:s0 -> Node0x6179940;
	Node0x61797b0:s1 -> Node0x6179990;
	Node0x6179760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%456:\l456:                                              \l  %457 = load i8, i8 addrspace(4)* %450, align 1, !tbaa !27\l  %458 = zext i8 %457 to i64\l  %459 = getelementptr inbounds i8, i8 addrspace(4)* %450, i64 1\l  %460 = load i8, i8 addrspace(4)* %459, align 1, !tbaa !27\l  %461 = zext i8 %460 to i64\l  %462 = shl nuw nsw i64 %461, 8\l  %463 = or i64 %462, %458\l  %464 = getelementptr inbounds i8, i8 addrspace(4)* %450, i64 2\l  %465 = load i8, i8 addrspace(4)* %464, align 1, !tbaa !27\l  %466 = zext i8 %465 to i64\l  %467 = shl nuw nsw i64 %466, 16\l  %468 = or i64 %463, %467\l  %469 = getelementptr inbounds i8, i8 addrspace(4)* %450, i64 3\l  %470 = load i8, i8 addrspace(4)* %469, align 1, !tbaa !27\l  %471 = zext i8 %470 to i64\l  %472 = shl nuw nsw i64 %471, 24\l  %473 = or i64 %468, %472\l  %474 = getelementptr inbounds i8, i8 addrspace(4)* %450, i64 4\l  %475 = load i8, i8 addrspace(4)* %474, align 1, !tbaa !27\l  %476 = zext i8 %475 to i64\l  %477 = shl nuw nsw i64 %476, 32\l  %478 = or i64 %473, %477\l  %479 = getelementptr inbounds i8, i8 addrspace(4)* %450, i64 5\l  %480 = load i8, i8 addrspace(4)* %479, align 1, !tbaa !27\l  %481 = zext i8 %480 to i64\l  %482 = shl nuw nsw i64 %481, 40\l  %483 = or i64 %478, %482\l  %484 = getelementptr inbounds i8, i8 addrspace(4)* %450, i64 6\l  %485 = load i8, i8 addrspace(4)* %484, align 1, !tbaa !27\l  %486 = zext i8 %485 to i64\l  %487 = shl nuw nsw i64 %486, 48\l  %488 = or i64 %483, %487\l  %489 = getelementptr inbounds i8, i8 addrspace(4)* %450, i64 7\l  %490 = load i8, i8 addrspace(4)* %489, align 1, !tbaa !27\l  %491 = zext i8 %490 to i64\l  %492 = shl nuw i64 %491, 56\l  %493 = or i64 %488, %492\l  %494 = add nsw i32 %451, -8\l  %495 = getelementptr inbounds i8, i8 addrspace(4)* %450, i64 8\l  br label %509\l}"];
	Node0x6179760 -> Node0x6179940;
	Node0x6179990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%496:\l496:                                              \l  %497 = phi i32 [ %507, %496 ], [ 0, %454 ]\l  %498 = phi i64 [ %506, %496 ], [ 0, %454 ]\l  %499 = zext i32 %497 to i64\l  %500 = getelementptr inbounds i8, i8 addrspace(4)* %450, i64 %499\l  %501 = load i8, i8 addrspace(4)* %500, align 1, !tbaa !27\l  %502 = zext i8 %501 to i64\l  %503 = shl i32 %497, 3\l  %504 = zext i32 %503 to i64\l  %505 = shl nuw i64 %502, %504\l  %506 = or i64 %505, %498\l  %507 = add nuw nsw i32 %497, 1\l  %508 = icmp eq i32 %507, %451\l  br i1 %508, label %509, label %496\l|{<s0>T|<s1>F}}"];
	Node0x6179990:s0 -> Node0x6179940;
	Node0x6179990:s1 -> Node0x6179990;
	Node0x6179940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%509:\l509:                                              \l  %510 = phi i8 addrspace(4)* [ %495, %456 ], [ %450, %454 ], [ %450, %496 ]\l  %511 = phi i32 [ %494, %456 ], [ 0, %454 ], [ 0, %496 ]\l  %512 = phi i64 [ %493, %456 ], [ 0, %454 ], [ %506, %496 ]\l  %513 = icmp ugt i32 %511, 7\l  br i1 %513, label %516, label %514\l|{<s0>T|<s1>F}}"];
	Node0x6179940:s0 -> Node0x616d470;
	Node0x6179940:s1 -> Node0x616d4c0;
	Node0x616d4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%514:\l514:                                              \l  %515 = icmp eq i32 %511, 0\l  br i1 %515, label %569, label %556\l|{<s0>T|<s1>F}}"];
	Node0x616d4c0:s0 -> Node0x616d650;
	Node0x616d4c0:s1 -> Node0x616d6a0;
	Node0x616d470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%516:\l516:                                              \l  %517 = load i8, i8 addrspace(4)* %510, align 1, !tbaa !27\l  %518 = zext i8 %517 to i64\l  %519 = getelementptr inbounds i8, i8 addrspace(4)* %510, i64 1\l  %520 = load i8, i8 addrspace(4)* %519, align 1, !tbaa !27\l  %521 = zext i8 %520 to i64\l  %522 = shl nuw nsw i64 %521, 8\l  %523 = or i64 %522, %518\l  %524 = getelementptr inbounds i8, i8 addrspace(4)* %510, i64 2\l  %525 = load i8, i8 addrspace(4)* %524, align 1, !tbaa !27\l  %526 = zext i8 %525 to i64\l  %527 = shl nuw nsw i64 %526, 16\l  %528 = or i64 %523, %527\l  %529 = getelementptr inbounds i8, i8 addrspace(4)* %510, i64 3\l  %530 = load i8, i8 addrspace(4)* %529, align 1, !tbaa !27\l  %531 = zext i8 %530 to i64\l  %532 = shl nuw nsw i64 %531, 24\l  %533 = or i64 %528, %532\l  %534 = getelementptr inbounds i8, i8 addrspace(4)* %510, i64 4\l  %535 = load i8, i8 addrspace(4)* %534, align 1, !tbaa !27\l  %536 = zext i8 %535 to i64\l  %537 = shl nuw nsw i64 %536, 32\l  %538 = or i64 %533, %537\l  %539 = getelementptr inbounds i8, i8 addrspace(4)* %510, i64 5\l  %540 = load i8, i8 addrspace(4)* %539, align 1, !tbaa !27\l  %541 = zext i8 %540 to i64\l  %542 = shl nuw nsw i64 %541, 40\l  %543 = or i64 %538, %542\l  %544 = getelementptr inbounds i8, i8 addrspace(4)* %510, i64 6\l  %545 = load i8, i8 addrspace(4)* %544, align 1, !tbaa !27\l  %546 = zext i8 %545 to i64\l  %547 = shl nuw nsw i64 %546, 48\l  %548 = or i64 %543, %547\l  %549 = getelementptr inbounds i8, i8 addrspace(4)* %510, i64 7\l  %550 = load i8, i8 addrspace(4)* %549, align 1, !tbaa !27\l  %551 = zext i8 %550 to i64\l  %552 = shl nuw i64 %551, 56\l  %553 = or i64 %548, %552\l  %554 = add nsw i32 %511, -8\l  %555 = getelementptr inbounds i8, i8 addrspace(4)* %510, i64 8\l  br label %569\l}"];
	Node0x616d470 -> Node0x616d650;
	Node0x616d6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%556:\l556:                                              \l  %557 = phi i32 [ %567, %556 ], [ 0, %514 ]\l  %558 = phi i64 [ %566, %556 ], [ 0, %514 ]\l  %559 = zext i32 %557 to i64\l  %560 = getelementptr inbounds i8, i8 addrspace(4)* %510, i64 %559\l  %561 = load i8, i8 addrspace(4)* %560, align 1, !tbaa !27\l  %562 = zext i8 %561 to i64\l  %563 = shl i32 %557, 3\l  %564 = zext i32 %563 to i64\l  %565 = shl nuw i64 %562, %564\l  %566 = or i64 %565, %558\l  %567 = add nuw nsw i32 %557, 1\l  %568 = icmp eq i32 %567, %511\l  br i1 %568, label %569, label %556\l|{<s0>T|<s1>F}}"];
	Node0x616d6a0:s0 -> Node0x616d650;
	Node0x616d6a0:s1 -> Node0x616d6a0;
	Node0x616d650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%569:\l569:                                              \l  %570 = phi i8 addrspace(4)* [ %555, %516 ], [ %510, %514 ], [ %510, %556 ]\l  %571 = phi i32 [ %554, %516 ], [ 0, %514 ], [ 0, %556 ]\l  %572 = phi i64 [ %553, %516 ], [ 0, %514 ], [ %566, %556 ]\l  %573 = icmp ugt i32 %571, 7\l  br i1 %573, label %576, label %574\l|{<s0>T|<s1>F}}"];
	Node0x616d650:s0 -> Node0x6180010;
	Node0x616d650:s1 -> Node0x6180060;
	Node0x6180060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%574:\l574:                                              \l  %575 = icmp eq i32 %571, 0\l  br i1 %575, label %629, label %616\l|{<s0>T|<s1>F}}"];
	Node0x6180060:s0 -> Node0x61801f0;
	Node0x6180060:s1 -> Node0x6180240;
	Node0x6180010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%576:\l576:                                              \l  %577 = load i8, i8 addrspace(4)* %570, align 1, !tbaa !27\l  %578 = zext i8 %577 to i64\l  %579 = getelementptr inbounds i8, i8 addrspace(4)* %570, i64 1\l  %580 = load i8, i8 addrspace(4)* %579, align 1, !tbaa !27\l  %581 = zext i8 %580 to i64\l  %582 = shl nuw nsw i64 %581, 8\l  %583 = or i64 %582, %578\l  %584 = getelementptr inbounds i8, i8 addrspace(4)* %570, i64 2\l  %585 = load i8, i8 addrspace(4)* %584, align 1, !tbaa !27\l  %586 = zext i8 %585 to i64\l  %587 = shl nuw nsw i64 %586, 16\l  %588 = or i64 %583, %587\l  %589 = getelementptr inbounds i8, i8 addrspace(4)* %570, i64 3\l  %590 = load i8, i8 addrspace(4)* %589, align 1, !tbaa !27\l  %591 = zext i8 %590 to i64\l  %592 = shl nuw nsw i64 %591, 24\l  %593 = or i64 %588, %592\l  %594 = getelementptr inbounds i8, i8 addrspace(4)* %570, i64 4\l  %595 = load i8, i8 addrspace(4)* %594, align 1, !tbaa !27\l  %596 = zext i8 %595 to i64\l  %597 = shl nuw nsw i64 %596, 32\l  %598 = or i64 %593, %597\l  %599 = getelementptr inbounds i8, i8 addrspace(4)* %570, i64 5\l  %600 = load i8, i8 addrspace(4)* %599, align 1, !tbaa !27\l  %601 = zext i8 %600 to i64\l  %602 = shl nuw nsw i64 %601, 40\l  %603 = or i64 %598, %602\l  %604 = getelementptr inbounds i8, i8 addrspace(4)* %570, i64 6\l  %605 = load i8, i8 addrspace(4)* %604, align 1, !tbaa !27\l  %606 = zext i8 %605 to i64\l  %607 = shl nuw nsw i64 %606, 48\l  %608 = or i64 %603, %607\l  %609 = getelementptr inbounds i8, i8 addrspace(4)* %570, i64 7\l  %610 = load i8, i8 addrspace(4)* %609, align 1, !tbaa !27\l  %611 = zext i8 %610 to i64\l  %612 = shl nuw i64 %611, 56\l  %613 = or i64 %608, %612\l  %614 = add nsw i32 %571, -8\l  %615 = getelementptr inbounds i8, i8 addrspace(4)* %570, i64 8\l  br label %629\l}"];
	Node0x6180010 -> Node0x61801f0;
	Node0x6180240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%616:\l616:                                              \l  %617 = phi i32 [ %627, %616 ], [ 0, %574 ]\l  %618 = phi i64 [ %626, %616 ], [ 0, %574 ]\l  %619 = zext i32 %617 to i64\l  %620 = getelementptr inbounds i8, i8 addrspace(4)* %570, i64 %619\l  %621 = load i8, i8 addrspace(4)* %620, align 1, !tbaa !27\l  %622 = zext i8 %621 to i64\l  %623 = shl i32 %617, 3\l  %624 = zext i32 %623 to i64\l  %625 = shl nuw i64 %622, %624\l  %626 = or i64 %625, %618\l  %627 = add nuw nsw i32 %617, 1\l  %628 = icmp eq i32 %627, %571\l  br i1 %628, label %629, label %616\l|{<s0>T|<s1>F}}"];
	Node0x6180240:s0 -> Node0x61801f0;
	Node0x6180240:s1 -> Node0x6180240;
	Node0x61801f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%629:\l629:                                              \l  %630 = phi i8 addrspace(4)* [ %615, %576 ], [ %570, %574 ], [ %570, %616 ]\l  %631 = phi i32 [ %614, %576 ], [ 0, %574 ], [ 0, %616 ]\l  %632 = phi i64 [ %613, %576 ], [ 0, %574 ], [ %626, %616 ]\l  %633 = icmp ugt i32 %631, 7\l  br i1 %633, label %636, label %634\l|{<s0>T|<s1>F}}"];
	Node0x61801f0:s0 -> Node0x6182260;
	Node0x61801f0:s1 -> Node0x61822b0;
	Node0x61822b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%634:\l634:                                              \l  %635 = icmp eq i32 %631, 0\l  br i1 %635, label %689, label %676\l|{<s0>T|<s1>F}}"];
	Node0x61822b0:s0 -> Node0x6182440;
	Node0x61822b0:s1 -> Node0x6182490;
	Node0x6182260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%636:\l636:                                              \l  %637 = load i8, i8 addrspace(4)* %630, align 1, !tbaa !27\l  %638 = zext i8 %637 to i64\l  %639 = getelementptr inbounds i8, i8 addrspace(4)* %630, i64 1\l  %640 = load i8, i8 addrspace(4)* %639, align 1, !tbaa !27\l  %641 = zext i8 %640 to i64\l  %642 = shl nuw nsw i64 %641, 8\l  %643 = or i64 %642, %638\l  %644 = getelementptr inbounds i8, i8 addrspace(4)* %630, i64 2\l  %645 = load i8, i8 addrspace(4)* %644, align 1, !tbaa !27\l  %646 = zext i8 %645 to i64\l  %647 = shl nuw nsw i64 %646, 16\l  %648 = or i64 %643, %647\l  %649 = getelementptr inbounds i8, i8 addrspace(4)* %630, i64 3\l  %650 = load i8, i8 addrspace(4)* %649, align 1, !tbaa !27\l  %651 = zext i8 %650 to i64\l  %652 = shl nuw nsw i64 %651, 24\l  %653 = or i64 %648, %652\l  %654 = getelementptr inbounds i8, i8 addrspace(4)* %630, i64 4\l  %655 = load i8, i8 addrspace(4)* %654, align 1, !tbaa !27\l  %656 = zext i8 %655 to i64\l  %657 = shl nuw nsw i64 %656, 32\l  %658 = or i64 %653, %657\l  %659 = getelementptr inbounds i8, i8 addrspace(4)* %630, i64 5\l  %660 = load i8, i8 addrspace(4)* %659, align 1, !tbaa !27\l  %661 = zext i8 %660 to i64\l  %662 = shl nuw nsw i64 %661, 40\l  %663 = or i64 %658, %662\l  %664 = getelementptr inbounds i8, i8 addrspace(4)* %630, i64 6\l  %665 = load i8, i8 addrspace(4)* %664, align 1, !tbaa !27\l  %666 = zext i8 %665 to i64\l  %667 = shl nuw nsw i64 %666, 48\l  %668 = or i64 %663, %667\l  %669 = getelementptr inbounds i8, i8 addrspace(4)* %630, i64 7\l  %670 = load i8, i8 addrspace(4)* %669, align 1, !tbaa !27\l  %671 = zext i8 %670 to i64\l  %672 = shl nuw i64 %671, 56\l  %673 = or i64 %668, %672\l  %674 = add nsw i32 %631, -8\l  %675 = getelementptr inbounds i8, i8 addrspace(4)* %630, i64 8\l  br label %689\l}"];
	Node0x6182260 -> Node0x6182440;
	Node0x6182490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%676:\l676:                                              \l  %677 = phi i32 [ %687, %676 ], [ 0, %634 ]\l  %678 = phi i64 [ %686, %676 ], [ 0, %634 ]\l  %679 = zext i32 %677 to i64\l  %680 = getelementptr inbounds i8, i8 addrspace(4)* %630, i64 %679\l  %681 = load i8, i8 addrspace(4)* %680, align 1, !tbaa !27\l  %682 = zext i8 %681 to i64\l  %683 = shl i32 %677, 3\l  %684 = zext i32 %683 to i64\l  %685 = shl nuw i64 %682, %684\l  %686 = or i64 %685, %678\l  %687 = add nuw nsw i32 %677, 1\l  %688 = icmp eq i32 %687, %631\l  br i1 %688, label %689, label %676\l|{<s0>T|<s1>F}}"];
	Node0x6182490:s0 -> Node0x6182440;
	Node0x6182490:s1 -> Node0x6182490;
	Node0x6182440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%689:\l689:                                              \l  %690 = phi i8 addrspace(4)* [ %675, %636 ], [ %630, %634 ], [ %630, %676 ]\l  %691 = phi i32 [ %674, %636 ], [ 0, %634 ], [ 0, %676 ]\l  %692 = phi i64 [ %673, %636 ], [ 0, %634 ], [ %686, %676 ]\l  %693 = icmp ugt i32 %691, 7\l  br i1 %693, label %696, label %694\l|{<s0>T|<s1>F}}"];
	Node0x6182440:s0 -> Node0x6184ac0;
	Node0x6182440:s1 -> Node0x6184b10;
	Node0x6184b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%694:\l694:                                              \l  %695 = icmp eq i32 %691, 0\l  br i1 %695, label %747, label %734\l|{<s0>T|<s1>F}}"];
	Node0x6184b10:s0 -> Node0x6173910;
	Node0x6184b10:s1 -> Node0x6184ca0;
	Node0x6184ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%696:\l696:                                              \l  %697 = load i8, i8 addrspace(4)* %690, align 1, !tbaa !27\l  %698 = zext i8 %697 to i64\l  %699 = getelementptr inbounds i8, i8 addrspace(4)* %690, i64 1\l  %700 = load i8, i8 addrspace(4)* %699, align 1, !tbaa !27\l  %701 = zext i8 %700 to i64\l  %702 = shl nuw nsw i64 %701, 8\l  %703 = or i64 %702, %698\l  %704 = getelementptr inbounds i8, i8 addrspace(4)* %690, i64 2\l  %705 = load i8, i8 addrspace(4)* %704, align 1, !tbaa !27\l  %706 = zext i8 %705 to i64\l  %707 = shl nuw nsw i64 %706, 16\l  %708 = or i64 %703, %707\l  %709 = getelementptr inbounds i8, i8 addrspace(4)* %690, i64 3\l  %710 = load i8, i8 addrspace(4)* %709, align 1, !tbaa !27\l  %711 = zext i8 %710 to i64\l  %712 = shl nuw nsw i64 %711, 24\l  %713 = or i64 %708, %712\l  %714 = getelementptr inbounds i8, i8 addrspace(4)* %690, i64 4\l  %715 = load i8, i8 addrspace(4)* %714, align 1, !tbaa !27\l  %716 = zext i8 %715 to i64\l  %717 = shl nuw nsw i64 %716, 32\l  %718 = or i64 %713, %717\l  %719 = getelementptr inbounds i8, i8 addrspace(4)* %690, i64 5\l  %720 = load i8, i8 addrspace(4)* %719, align 1, !tbaa !27\l  %721 = zext i8 %720 to i64\l  %722 = shl nuw nsw i64 %721, 40\l  %723 = or i64 %718, %722\l  %724 = getelementptr inbounds i8, i8 addrspace(4)* %690, i64 6\l  %725 = load i8, i8 addrspace(4)* %724, align 1, !tbaa !27\l  %726 = zext i8 %725 to i64\l  %727 = shl nuw nsw i64 %726, 48\l  %728 = or i64 %723, %727\l  %729 = getelementptr inbounds i8, i8 addrspace(4)* %690, i64 7\l  %730 = load i8, i8 addrspace(4)* %729, align 1, !tbaa !27\l  %731 = zext i8 %730 to i64\l  %732 = shl nuw i64 %731, 56\l  %733 = or i64 %728, %732\l  br label %747\l}"];
	Node0x6184ac0 -> Node0x6173910;
	Node0x6184ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%734:\l734:                                              \l  %735 = phi i32 [ %745, %734 ], [ 0, %694 ]\l  %736 = phi i64 [ %744, %734 ], [ 0, %694 ]\l  %737 = zext i32 %735 to i64\l  %738 = getelementptr inbounds i8, i8 addrspace(4)* %690, i64 %737\l  %739 = load i8, i8 addrspace(4)* %738, align 1, !tbaa !27\l  %740 = zext i8 %739 to i64\l  %741 = shl i32 %735, 3\l  %742 = zext i32 %741 to i64\l  %743 = shl nuw i64 %740, %742\l  %744 = or i64 %743, %736\l  %745 = add nuw nsw i32 %735, 1\l  %746 = icmp eq i32 %745, %691\l  br i1 %746, label %747, label %734\l|{<s0>T|<s1>F}}"];
	Node0x6184ca0:s0 -> Node0x6173910;
	Node0x6184ca0:s1 -> Node0x6184ca0;
	Node0x6173910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%747:\l747:                                              \l  %748 = phi i64 [ %733, %696 ], [ 0, %694 ], [ %744, %734 ]\l  %749 = shl nuw nsw i64 %330, 2\l  %750 = add nuw nsw i64 %749, 28\l  %751 = and i64 %750, 480\l  %752 = and i64 %332, -225\l  %753 = or i64 %752, %751\l  %754 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %257, i32 noundef 2, i64 noundef %753, i64 noundef %392, i64 noundef %452,\l... i64 noundef %512, i64 noundef %572, i64 noundef %632, i64 noundef %692, i64\l... noundef %748) #12\l  %755 = sub i64 %322, %330\l  %756 = getelementptr inbounds i8, i8 addrspace(4)* %323, i64 %330\l  %757 = icmp eq i64 %755, 0\l  br i1 %757, label %758, label %321\l|{<s0>T|<s1>F}}"];
	Node0x6173910:s0 -> Node0x6172a50;
	Node0x6173910:s1 -> Node0x6173520;
	Node0x6172a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%758:\l758:                                              \l  %759 = phi \<2 x i64\> [ %316, %313 ], [ %754, %747 ]\l  %760 = extractelement \<2 x i64\> %759, i64 0\l  %761 = zext i32 %15 to i64\l  %762 = and i64 %760, -225\l  %763 = or i64 %762, 32\l  %764 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %257, i32 noundef 2, i64 noundef %763, i64 noundef %761, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #12\l  %765 = extractelement \<2 x i64\> %764, i64 0\l  %766 = bitcast double %241 to i64\l  %767 = and i64 %765, -225\l  %768 = or i64 %767, 32\l  %769 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %257, i32 noundef 2, i64 noundef %768, i64 noundef %766, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #12\l  %770 = extractelement \<2 x i64\> %769, i64 0\l  %771 = bitcast double %243 to i64\l  %772 = and i64 %770, -225\l  %773 = or i64 %772, 32\l  %774 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %257, i32 noundef 2, i64 noundef %773, i64 noundef %771, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #12\l  %775 = extractelement \<2 x i64\> %774, i64 0\l  %776 = bitcast double %247 to i64\l  %777 = and i64 %775, -225\l  %778 = or i64 %777, 32\l  %779 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %257, i32 noundef 2, i64 noundef %778, i64 noundef %776, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #12\l  %780 = extractelement \<2 x i64\> %779, i64 0\l  %781 = bitcast double %251 to i64\l  %782 = and i64 %780, -227\l  %783 = or i64 %782, 34\l  %784 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %257, i32 noundef 2, i64 noundef %783, i64 noundef %781, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #12\l  tail call fastcc void @__ockl_dm_dealloc(i64 %21) #12\l  tail call fastcc void @__ockl_dm_dealloc(i64 %27) #12\l  br label %785\l}"];
	Node0x6172a50 -> Node0x6161690;
	Node0x6161690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%785:\l785:                                              \l  ret void\l}"];
}
