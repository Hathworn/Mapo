digraph "CFG for '_Z19convolve_gpu_kernelPfS_S_iiiiii' function" {
	label="CFG for '_Z19convolve_gpu_kernelPfS_S_iiiiii' function";

	Node0x5becad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = freeze i32 %18\l  %20 = freeze i32 %3\l  %21 = sdiv i32 %19, %20\l  %22 = mul i32 %21, %20\l  %23 = sub i32 %19, %22\l  %24 = freeze i32 %4\l  %25 = sdiv i32 %21, %24\l  %26 = mul i32 %25, %24\l  %27 = sub i32 %21, %26\l  %28 = icmp slt i32 %25, %6\l  br i1 %28, label %29, label %140\l|{<s0>T|<s1>F}}"];
	Node0x5becad0:s0 -> Node0x5befa30;
	Node0x5becad0:s1 -> Node0x5befac0;
	Node0x5befa30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%29:\l29:                                               \l  %30 = mul i32 %25, %4\l  %31 = add i32 %30, %27\l  %32 = mul i32 %31, %3\l  %33 = add i32 %32, %23\l  %34 = icmp sgt i32 %5, 0\l  br i1 %34, label %35, label %136\l|{<s0>T|<s1>F}}"];
	Node0x5befa30:s0 -> Node0x5bef110;
	Node0x5befa30:s1 -> Node0x5bf0050;
	Node0x5bef110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%35:\l35:                                               \l  %36 = mul nsw i32 %25, %5\l  %37 = icmp sgt i32 %7, 0\l  %38 = sub i32 %27, %8\l  %39 = sub i32 %23, %8\l  %40 = and i32 %7, 1\l  %41 = icmp eq i32 %7, 1\l  %42 = and i32 %7, -2\l  %43 = icmp eq i32 %40, 0\l  br label %44\l}"];
	Node0x5bef110 -> Node0x5bf0640;
	Node0x5bf0640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%44:\l44:                                               \l  %45 = phi i32 [ 0, %35 ], [ %134, %132 ]\l  %46 = phi float [ 0.000000e+00, %35 ], [ %133, %132 ]\l  %47 = add i32 %45, %36\l  %48 = mul i32 %47, %7\l  %49 = mul i32 %45, %4\l  br i1 %37, label %50, label %132\l|{<s0>T|<s1>F}}"];
	Node0x5bf0640:s0 -> Node0x5bf1590;
	Node0x5bf0640:s1 -> Node0x5bf0730;
	Node0x5bf1590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%50:\l50:                                               \l  %51 = phi i32 [ %130, %128 ], [ 0, %44 ]\l  %52 = phi float [ %129, %128 ], [ %46, %44 ]\l  %53 = add i32 %38, %51\l  %54 = icmp sgt i32 %53, -1\l  %55 = icmp slt i32 %53, %4\l  %56 = add i32 %53, %49\l  %57 = mul i32 %56, %3\l  %58 = add i32 %51, %48\l  %59 = mul i32 %58, %7\l  br i1 %41, label %106, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5bf1590:s0 -> Node0x5bf1d80;
	Node0x5bf1590:s1 -> Node0x5bf1e10;
	Node0x5bf1e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  %61 = phi i32 [ %103, %101 ], [ 0, %50 ]\l  %62 = phi float [ %102, %101 ], [ %52, %50 ]\l  %63 = phi i32 [ %104, %101 ], [ 0, %50 ]\l  %64 = add i32 %39, %61\l  %65 = icmp sgt i32 %64, -1\l  %66 = select i1 %54, i1 %65, i1 false\l  %67 = select i1 %66, i1 %55, i1 false\l  %68 = icmp slt i32 %64, %3\l  %69 = select i1 %67, i1 %68, i1 false\l  br i1 %69, label %70, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5bf1e10:s0 -> Node0x5bf2900;
	Node0x5bf1e10:s1 -> Node0x5bf2990;
	Node0x5bf2900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%70:\l70:                                               \l  %71 = add i32 %64, %57\l  %72 = add nsw i32 %61, %59\l  %73 = sext i32 %71 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %76 = sext i32 %72 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %1, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %79 = fmul contract float %75, %78\l  %80 = fadd contract float %62, %79\l  br label %81\l}"];
	Node0x5bf2900 -> Node0x5bf2990;
	Node0x5bf2990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = phi float [ %80, %70 ], [ %62, %60 ]\l  %83 = or i32 %61, 1\l  %84 = add i32 %39, %83\l  %85 = icmp sgt i32 %84, -1\l  %86 = select i1 %54, i1 %85, i1 false\l  %87 = select i1 %86, i1 %55, i1 false\l  %88 = icmp slt i32 %84, %3\l  %89 = select i1 %87, i1 %88, i1 false\l  br i1 %89, label %90, label %101\l|{<s0>T|<s1>F}}"];
	Node0x5bf2990:s0 -> Node0x5bf4390;
	Node0x5bf2990:s1 -> Node0x5bf1f80;
	Node0x5bf4390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%90:\l90:                                               \l  %91 = add i32 %84, %57\l  %92 = add nsw i32 %83, %59\l  %93 = sext i32 %91 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %0, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %96 = sext i32 %92 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %1, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %99 = fmul contract float %95, %98\l  %100 = fadd contract float %82, %99\l  br label %101\l}"];
	Node0x5bf4390 -> Node0x5bf1f80;
	Node0x5bf1f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%101:\l101:                                              \l  %102 = phi float [ %100, %90 ], [ %82, %81 ]\l  %103 = add nuw nsw i32 %61, 2\l  %104 = add i32 %63, 2\l  %105 = icmp eq i32 %104, %42\l  br i1 %105, label %106, label %60, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5bf1f80:s0 -> Node0x5bf1d80;
	Node0x5bf1f80:s1 -> Node0x5bf1e10;
	Node0x5bf1d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%106:\l106:                                              \l  %107 = phi float [ undef, %50 ], [ %102, %101 ]\l  %108 = phi i32 [ 0, %50 ], [ %103, %101 ]\l  %109 = phi float [ %52, %50 ], [ %102, %101 ]\l  br i1 %43, label %128, label %110\l|{<s0>T|<s1>F}}"];
	Node0x5bf1d80:s0 -> Node0x5bf1700;
	Node0x5bf1d80:s1 -> Node0x5bf5430;
	Node0x5bf5430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%110:\l110:                                              \l  %111 = add i32 %39, %108\l  %112 = icmp sgt i32 %111, -1\l  %113 = select i1 %54, i1 %112, i1 false\l  %114 = select i1 %113, i1 %55, i1 false\l  %115 = icmp slt i32 %111, %3\l  %116 = select i1 %114, i1 %115, i1 false\l  br i1 %116, label %117, label %128\l|{<s0>T|<s1>F}}"];
	Node0x5bf5430:s0 -> Node0x5bf58f0;
	Node0x5bf5430:s1 -> Node0x5bf1700;
	Node0x5bf58f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%117:\l117:                                              \l  %118 = add i32 %111, %57\l  %119 = add nsw i32 %108, %59\l  %120 = sext i32 %118 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %0, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %123 = sext i32 %119 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %1, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %126 = fmul contract float %122, %125\l  %127 = fadd contract float %109, %126\l  br label %128\l}"];
	Node0x5bf58f0 -> Node0x5bf1700;
	Node0x5bf1700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%128:\l128:                                              \l  %129 = phi float [ %107, %106 ], [ %127, %117 ], [ %109, %110 ]\l  %130 = add nuw nsw i32 %51, 1\l  %131 = icmp eq i32 %130, %7\l  br i1 %131, label %132, label %50, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5bf1700:s0 -> Node0x5bf0730;
	Node0x5bf1700:s1 -> Node0x5bf1590;
	Node0x5bf0730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%132:\l132:                                              \l  %133 = phi float [ %46, %44 ], [ %129, %128 ]\l  %134 = add nuw nsw i32 %45, 1\l  %135 = icmp eq i32 %134, %5\l  br i1 %135, label %136, label %44, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5bf0730:s0 -> Node0x5bf0050;
	Node0x5bf0730:s1 -> Node0x5bf0640;
	Node0x5bf0050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%136:\l136:                                              \l  %137 = phi float [ 0.000000e+00, %29 ], [ %133, %132 ]\l  %138 = sext i32 %33 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %2, i64 %138\l  store float %137, float addrspace(1)* %139, align 4, !tbaa !7\l  br label %140\l}"];
	Node0x5bf0050 -> Node0x5befac0;
	Node0x5befac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%140:\l140:                                              \l  ret void\l}"];
}
