digraph "CFG for '_Z2DPPcS_Pi' function" {
	label="CFG for '_Z2DPPcS_Pi' function";

	Node0x5290440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = zext i32 %4 to i64\l  %6 = getelementptr inbounds [1024 x i8], [1024 x i8] addrspace(4)* @gcP_seq,\l... i64 0, i64 %5\l  %7 = load i8, i8 addrspace(4)* %6, align 1, !tbaa !5\l  %8 = getelementptr inbounds [1024 x i32], [1024 x i32] addrspace(3)*\l... @_ZZ2DPPcS_PiE4Hp_1, i32 0, i32 %4\l  store i32 0, i32 addrspace(3)* %8, align 4, !tbaa !8\l  %9 = getelementptr inbounds [1024 x i32], [1024 x i32] addrspace(3)*\l... @_ZZ2DPPcS_PiE4Ep_1, i32 0, i32 %4\l  store i32 0, i32 addrspace(3)* %9, align 4, !tbaa !8\l  %10 = load i32, i32 addrspace(4)* @gcT_size, align 4, !tbaa !8\l  %11 = sub nsw i32 0, %4\l  %12 = icmp sgt i32 %10, %11\l  br i1 %12, label %13, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5290440:s0 -> Node0x52911f0;
	Node0x5290440:s1 -> Node0x52921b0;
	Node0x52911f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%13:\l13:                                               \l  %14 = mul nsw i32 %10, %4\l  %15 = sub nsw i32 %14, %4\l  %16 = load i32, i32 addrspace(4)* @gcMiss, align 4\l  %17 = load i32, i32 addrspace(4)* @gcMatch, align 4\l  %18 = load i32, i32 addrspace(4)* @gcBegin, align 4, !tbaa !8\l  %19 = load i32, i32 addrspace(4)* @gcExtend, align 4, !tbaa !8\l  %20 = add nuw nsw i32 %4, 1\l  %21 = getelementptr inbounds [1024 x i32], [1024 x i32] addrspace(3)*\l... @_ZZ2DPPcS_PiE4Hp_1, i32 0, i32 %20\l  %22 = getelementptr inbounds [1024 x i32], [1024 x i32] addrspace(3)*\l... @_ZZ2DPPcS_PiE4Ep_1, i32 0, i32 %20\l  %23 = load i32, i32 addrspace(4)* @gcThre, align 4, !tbaa !8\l  %24 = shl nuw nsw i32 %4, 16\l  br label %26\l}"];
	Node0x52911f0 -> Node0x5292980;
	Node0x52921b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%25:\l25:                                               \l  ret void\l}"];
	Node0x5292980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i32 [ %11, %13 ], [ %82, %80 ]\l  %28 = phi i32 [ %15, %13 ], [ %81, %80 ]\l  %29 = phi i32 [ 0, %13 ], [ %41, %80 ]\l  %30 = phi i32 [ 0, %13 ], [ %45, %80 ]\l  %31 = phi i32 [ 0, %13 ], [ %67, %80 ]\l  %32 = phi i32 [ 0, %13 ], [ %66, %80 ]\l  %33 = icmp slt i32 %27, 0\l  br i1 %33, label %40, label %34\l|{<s0>T|<s1>F}}"];
	Node0x5292980:s0 -> Node0x5292510;
	Node0x5292980:s1 -> Node0x52933b0;
	Node0x52933b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%34:\l34:                                               \l  %35 = zext i32 %27 to i64\l  %36 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %35\l  %37 = load i8, i8 addrspace(1)* %36, align 1, !tbaa !5\l  %38 = icmp eq i8 %37, %7\l  %39 = select i1 %38, i32 %17, i32 %16\l  br label %40\l}"];
	Node0x52933b0 -> Node0x5292510;
	Node0x5292510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ %29, %26 ], [ %39, %34 ]\l  %42 = add nsw i32 %41, %30\l  %43 = add nsw i32 %18, %32\l  %44 = add nsw i32 %19, %31\l  %45 = load i32, i32 addrspace(3)* %8, align 4, !tbaa !8\l  %46 = add nsw i32 %45, %18\l  %47 = load i32, i32 addrspace(3)* %9, align 4, !tbaa !8\l  %48 = add nsw i32 %47, %19\l  %49 = tail call i32 @llvm.smax.i32(i32 %43, i32 %44)\l  %50 = icmp sgt i32 %46, %49\l  %51 = select i1 %50, i32 %46, i32 %48\l  %52 = icmp sgt i32 %42, %51\l  %53 = sext i32 %28 to i64\l  %54 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %53\l  %55 = tail call i32 @llvm.smax.i32(i32 %42, i32 %51)\l  %56 = select i1 %52, i8 1, i8 2\l  %57 = icmp sgt i32 %55, %49\l  %58 = select i1 %57, i8 %56, i8 3\l  %59 = tail call i32 @llvm.smax.i32(i32 %55, i32 %49)\l  store i8 %58, i8 addrspace(1)* %54, align 1, !tbaa !5\l  %60 = icmp slt i32 %59, 1\l  br i1 %60, label %61, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5292510:s0 -> Node0x5294ca0;
	Node0x5292510:s1 -> Node0x5294cf0;
	Node0x5294ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%61:\l61:                                               \l  %62 = sext i32 %28 to i64\l  %63 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %62\l  store i8 0, i8 addrspace(1)* %63, align 1, !tbaa !5\l  br label %64\l}"];
	Node0x5294ca0 -> Node0x5294cf0;
	Node0x5294cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = phi i32 [ 0, %61 ], [ %51, %40 ]\l  %66 = phi i32 [ 0, %61 ], [ %59, %40 ]\l  %67 = phi i32 [ 0, %61 ], [ %49, %40 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %68 = icmp sgt i32 %27, -1\l  br i1 %68, label %69, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5294cf0:s0 -> Node0x52956d0;
	Node0x5294cf0:s1 -> Node0x5295720;
	Node0x52956d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%69:\l69:                                               \l  store i32 %66, i32 addrspace(3)* %21, align 4, !tbaa !8\l  store i32 %65, i32 addrspace(3)* %22, align 4, !tbaa !8\l  br label %70\l}"];
	Node0x52956d0 -> Node0x5295720;
	Node0x5295720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = icmp slt i32 %66, %23\l  br i1 %71, label %80, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5295720:s0 -> Node0x5292ac0;
	Node0x5295720:s1 -> Node0x5295a70;
	Node0x5295a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%72:\l72:                                               \l  %73 = sext i32 %27 to i64\l  %74 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %73\l  %75 = load i32, i32 addrspace(1)* %74, align 4, !tbaa !8\l  %76 = and i32 %75, 65535\l  %77 = icmp ult i32 %66, %76\l  br i1 %77, label %80, label %78\l|{<s0>T|<s1>F}}"];
	Node0x5295a70:s0 -> Node0x5292ac0;
	Node0x5295a70:s1 -> Node0x5295e10;
	Node0x5295e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%78:\l78:                                               \l  %79 = add nsw i32 %66, %24\l  store i32 %79, i32 addrspace(1)* %74, align 4, !tbaa !8\l  br label %80\l}"];
	Node0x5295e10 -> Node0x5292ac0;
	Node0x5292ac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = add nsw i32 %28, 1\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %82 = add nsw i32 %27, 1\l  %83 = icmp eq i32 %82, %10\l  br i1 %83, label %25, label %26, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5292ac0:s0 -> Node0x52921b0;
	Node0x5292ac0:s1 -> Node0x5292980;
}
