digraph "CFG for '_Z23_weightInnerkernel_cudaiifPfS_S_S_' function" {
	label="CFG for '_Z23_weightInnerkernel_cudaiifPfS_S_S_' function";

	Node0x4b6f340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add nuw nsw i32 %15, 1\l  %17 = add i32 %16, %14\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add nuw nsw i32 %24, 1\l  %26 = add i32 %25, %23\l  %27 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %28 = icmp uge i32 %27, %0\l  %29 = icmp eq i32 %26, 0\l  %30 = select i1 %28, i1 true, i1 %29\l  br i1 %30, label %175, label %31\l|{<s0>T|<s1>F}}"];
	Node0x4b6f340:s0 -> Node0x4b73120;
	Node0x4b6f340:s1 -> Node0x4b731b0;
	Node0x4b731b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%31:\l31:                                               \l  %32 = add nsw i32 %1, -1\l  %33 = icmp ult i32 %26, %32\l  %34 = icmp ne i32 %17, 0\l  %35 = select i1 %33, i1 %34, i1 false\l  %36 = icmp ult i32 %17, %32\l  %37 = select i1 %35, i1 %36, i1 false\l  br i1 %37, label %38, label %175\l|{<s0>T|<s1>F}}"];
	Node0x4b731b0:s0 -> Node0x4b71260;
	Node0x4b731b0:s1 -> Node0x4b73120;
	Node0x4b71260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%38:\l38:                                               \l  %39 = mul i32 %27, %1\l  %40 = add i32 %26, %39\l  %41 = mul i32 %40, %1\l  %42 = add i32 %41, %17\l  %43 = add nsw i32 %42, 1\l  %44 = add nsw i32 %42, -1\l  %45 = add nsw i32 %42, %1\l  %46 = sub nsw i32 %42, %1\l  %47 = add nsw i32 %45, 1\l  %48 = add nsw i32 %45, -1\l  %49 = add nsw i32 %46, 1\l  %50 = add nsw i32 %46, -1\l  %51 = fmul contract float %2, 2.000000e+00\l  %52 = sext i32 %42 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %3, i64 %52\l  %54 = getelementptr inbounds float, float addrspace(1)* %6, i64 %52\l  %55 = getelementptr inbounds float, float addrspace(1)* %4, i64 %52\l  %56 = load float, float addrspace(1)* %5, align 4, !tbaa !7\l  %57 = fmul contract float %51, %56\l  %58 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  %59 = fadd contract float %58, %57\l  store float %59, float addrspace(1)* %53, align 4, !tbaa !7\l  %60 = load float, float addrspace(1)* %5, align 4, !tbaa !7\l  %61 = fmul contract float %51, %60\l  %62 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %63 = sext i32 %43 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %6, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7\l  %66 = fadd contract float %62, %65\l  %67 = fmul contract float %61, %66\l  %68 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  %69 = fsub contract float %68, %67\l  store float %69, float addrspace(1)* %55, align 4, !tbaa !7\l  %70 = getelementptr inbounds float, float addrspace(1)* %5, i64 1\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7\l  %72 = fmul contract float %51, %71\l  %73 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  %74 = fadd contract float %73, %72\l  store float %74, float addrspace(1)* %53, align 4, !tbaa !7\l  %75 = load float, float addrspace(1)* %70, align 4, !tbaa !7\l  %76 = fmul contract float %51, %75\l  %77 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %78 = sext i32 %44 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %6, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7\l  %81 = fadd contract float %77, %80\l  %82 = fmul contract float %76, %81\l  %83 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  %84 = fsub contract float %83, %82\l  store float %84, float addrspace(1)* %55, align 4, !tbaa !7\l  %85 = getelementptr inbounds float, float addrspace(1)* %5, i64 2\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = fmul contract float %51, %86\l  %88 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  %89 = fadd contract float %88, %87\l  store float %89, float addrspace(1)* %53, align 4, !tbaa !7\l  %90 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %91 = fmul contract float %51, %90\l  %92 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %93 = sext i32 %45 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %6, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7\l  %96 = fadd contract float %92, %95\l  %97 = fmul contract float %91, %96\l  %98 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  %99 = fsub contract float %98, %97\l  store float %99, float addrspace(1)* %55, align 4, !tbaa !7\l  %100 = getelementptr inbounds float, float addrspace(1)* %5, i64 3\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7\l  %102 = fmul contract float %51, %101\l  %103 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  %104 = fadd contract float %103, %102\l  store float %104, float addrspace(1)* %53, align 4, !tbaa !7\l  %105 = load float, float addrspace(1)* %100, align 4, !tbaa !7\l  %106 = fmul contract float %51, %105\l  %107 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %108 = sext i32 %46 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %6, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !7\l  %111 = fadd contract float %107, %110\l  %112 = fmul contract float %106, %111\l  %113 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  %114 = fsub contract float %113, %112\l  store float %114, float addrspace(1)* %55, align 4, !tbaa !7\l  %115 = getelementptr inbounds float, float addrspace(1)* %5, i64 4\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7\l  %117 = fmul contract float %51, %116\l  %118 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  %119 = fadd contract float %118, %117\l  store float %119, float addrspace(1)* %53, align 4, !tbaa !7\l  %120 = load float, float addrspace(1)* %115, align 4, !tbaa !7\l  %121 = fmul contract float %51, %120\l  %122 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %123 = sext i32 %47 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %6, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !7\l  %126 = fadd contract float %122, %125\l  %127 = fmul contract float %121, %126\l  %128 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  %129 = fsub contract float %128, %127\l  store float %129, float addrspace(1)* %55, align 4, !tbaa !7\l  %130 = getelementptr inbounds float, float addrspace(1)* %5, i64 5\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !7\l  %132 = fmul contract float %51, %131\l  %133 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  %134 = fadd contract float %133, %132\l  store float %134, float addrspace(1)* %53, align 4, !tbaa !7\l  %135 = load float, float addrspace(1)* %130, align 4, !tbaa !7\l  %136 = fmul contract float %51, %135\l  %137 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %138 = sext i32 %48 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %6, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !7\l  %141 = fadd contract float %137, %140\l  %142 = fmul contract float %136, %141\l  %143 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  %144 = fsub contract float %143, %142\l  store float %144, float addrspace(1)* %55, align 4, !tbaa !7\l  %145 = getelementptr inbounds float, float addrspace(1)* %5, i64 6\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !7\l  %147 = fmul contract float %51, %146\l  %148 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  %149 = fadd contract float %148, %147\l  store float %149, float addrspace(1)* %53, align 4, !tbaa !7\l  %150 = load float, float addrspace(1)* %145, align 4, !tbaa !7\l  %151 = fmul contract float %51, %150\l  %152 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %153 = sext i32 %49 to i64\l  %154 = getelementptr inbounds float, float addrspace(1)* %6, i64 %153\l  %155 = load float, float addrspace(1)* %154, align 4, !tbaa !7\l  %156 = fadd contract float %152, %155\l  %157 = fmul contract float %151, %156\l  %158 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  %159 = fsub contract float %158, %157\l  store float %159, float addrspace(1)* %55, align 4, !tbaa !7\l  %160 = getelementptr inbounds float, float addrspace(1)* %5, i64 7\l  %161 = load float, float addrspace(1)* %160, align 4, !tbaa !7\l  %162 = fmul contract float %51, %161\l  %163 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  %164 = fadd contract float %163, %162\l  store float %164, float addrspace(1)* %53, align 4, !tbaa !7\l  %165 = load float, float addrspace(1)* %160, align 4, !tbaa !7\l  %166 = fmul contract float %51, %165\l  %167 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %168 = sext i32 %50 to i64\l  %169 = getelementptr inbounds float, float addrspace(1)* %6, i64 %168\l  %170 = load float, float addrspace(1)* %169, align 4, !tbaa !7\l  %171 = fadd contract float %167, %170\l  %172 = fmul contract float %166, %171\l  %173 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  %174 = fsub contract float %173, %172\l  store float %174, float addrspace(1)* %55, align 4, !tbaa !7\l  br label %175\l}"];
	Node0x4b71260 -> Node0x4b73120;
	Node0x4b73120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%175:\l175:                                              \l  ret void\l}"];
}
