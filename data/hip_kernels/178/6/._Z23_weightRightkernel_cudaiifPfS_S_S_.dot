digraph "CFG for '_Z23_weightRightkernel_cudaiifPfS_S_S_' function" {
	label="CFG for '_Z23_weightRightkernel_cudaiifPfS_S_S_' function";

	Node0x4a966b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add nuw nsw i32 %23, 1\l  %25 = add i32 %24, %22\l  %26 = icmp uge i32 %16, %0\l  %27 = icmp eq i32 %25, 0\l  %28 = select i1 %26, i1 true, i1 %27\l  br i1 %28, label %121, label %29\l|{<s0>T|<s1>F}}"];
	Node0x4a966b0:s0 -> Node0x4a9a230;
	Node0x4a966b0:s1 -> Node0x4a9a2c0;
	Node0x4a9a2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%29:\l29:                                               \l  %30 = add nsw i32 %1, -1\l  %31 = icmp ult i32 %25, %30\l  br i1 %31, label %32, label %121\l|{<s0>T|<s1>F}}"];
	Node0x4a9a2c0:s0 -> Node0x4a9a550;
	Node0x4a9a2c0:s1 -> Node0x4a9a230;
	Node0x4a9a550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%32:\l32:                                               \l  %33 = mul i32 %16, %1\l  %34 = add i32 %33, %25\l  %35 = mul i32 %34, %1\l  %36 = add i32 %35, %30\l  %37 = add nsw i32 %36, -1\l  %38 = add nsw i32 %36, %1\l  %39 = sub nsw i32 %36, %1\l  %40 = add nsw i32 %38, -1\l  %41 = add nsw i32 %39, -1\l  %42 = fmul contract float %2, 2.000000e+00\l  %43 = sext i32 %36 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %3, i64 %43\l  %45 = getelementptr inbounds float, float addrspace(1)* %6, i64 %43\l  %46 = getelementptr inbounds float, float addrspace(1)* %4, i64 %43\l  %47 = load float, float addrspace(1)* %5, align 4, !tbaa !7\l  %48 = fmul contract float %42, %47\l  %49 = load float, float addrspace(1)* %44, align 4, !tbaa !7\l  %50 = fadd contract float %49, %48\l  store float %50, float addrspace(1)* %44, align 4, !tbaa !7\l  %51 = load float, float addrspace(1)* %5, align 4, !tbaa !7\l  %52 = fmul contract float %42, %51\l  %53 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %54 = sext i32 %37 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %6, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  %57 = fadd contract float %53, %56\l  %58 = fmul contract float %52, %57\l  %59 = load float, float addrspace(1)* %46, align 4, !tbaa !7\l  %60 = fsub contract float %59, %58\l  store float %60, float addrspace(1)* %46, align 4, !tbaa !7\l  %61 = getelementptr inbounds float, float addrspace(1)* %5, i64 1\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %63 = fmul contract float %42, %62\l  %64 = load float, float addrspace(1)* %44, align 4, !tbaa !7\l  %65 = fadd contract float %64, %63\l  store float %65, float addrspace(1)* %44, align 4, !tbaa !7\l  %66 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %67 = fmul contract float %42, %66\l  %68 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %69 = sext i32 %38 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %6, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7\l  %72 = fadd contract float %68, %71\l  %73 = fmul contract float %67, %72\l  %74 = load float, float addrspace(1)* %46, align 4, !tbaa !7\l  %75 = fsub contract float %74, %73\l  store float %75, float addrspace(1)* %46, align 4, !tbaa !7\l  %76 = getelementptr inbounds float, float addrspace(1)* %5, i64 2\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7\l  %78 = fmul contract float %42, %77\l  %79 = load float, float addrspace(1)* %44, align 4, !tbaa !7\l  %80 = fadd contract float %79, %78\l  store float %80, float addrspace(1)* %44, align 4, !tbaa !7\l  %81 = load float, float addrspace(1)* %76, align 4, !tbaa !7\l  %82 = fmul contract float %42, %81\l  %83 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %84 = sext i32 %39 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %6, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = fadd contract float %83, %86\l  %88 = fmul contract float %82, %87\l  %89 = load float, float addrspace(1)* %46, align 4, !tbaa !7\l  %90 = fsub contract float %89, %88\l  store float %90, float addrspace(1)* %46, align 4, !tbaa !7\l  %91 = getelementptr inbounds float, float addrspace(1)* %5, i64 3\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7\l  %93 = fmul contract float %42, %92\l  %94 = load float, float addrspace(1)* %44, align 4, !tbaa !7\l  %95 = fadd contract float %94, %93\l  store float %95, float addrspace(1)* %44, align 4, !tbaa !7\l  %96 = load float, float addrspace(1)* %91, align 4, !tbaa !7\l  %97 = fmul contract float %42, %96\l  %98 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %99 = sext i32 %40 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %6, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7\l  %102 = fadd contract float %98, %101\l  %103 = fmul contract float %97, %102\l  %104 = load float, float addrspace(1)* %46, align 4, !tbaa !7\l  %105 = fsub contract float %104, %103\l  store float %105, float addrspace(1)* %46, align 4, !tbaa !7\l  %106 = getelementptr inbounds float, float addrspace(1)* %5, i64 4\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7\l  %108 = fmul contract float %42, %107\l  %109 = load float, float addrspace(1)* %44, align 4, !tbaa !7\l  %110 = fadd contract float %109, %108\l  store float %110, float addrspace(1)* %44, align 4, !tbaa !7\l  %111 = load float, float addrspace(1)* %106, align 4, !tbaa !7\l  %112 = fmul contract float %42, %111\l  %113 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %114 = sext i32 %41 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %6, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7\l  %117 = fadd contract float %113, %116\l  %118 = fmul contract float %112, %117\l  %119 = load float, float addrspace(1)* %46, align 4, !tbaa !7\l  %120 = fsub contract float %119, %118\l  store float %120, float addrspace(1)* %46, align 4, !tbaa !7\l  br label %121\l}"];
	Node0x4a9a550 -> Node0x4a9a230;
	Node0x4a9a230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%121:\l121:                                              \l  ret void\l}"];
}
