digraph "CFG for '_Z23_weightTLeftkernel_cudaiifPfS_S_S_' function" {
	label="CFG for '_Z23_weightTLeftkernel_cudaiifPfS_S_S_' function";

	Node0x5a5cba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %73\l|{<s0>T|<s1>F}}"];
	Node0x5a5cba0:s0 -> Node0x5a5eb10;
	Node0x5a5cba0:s1 -> Node0x5a5eba0;
	Node0x5a5eb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = mul i32 %1, %1\l  %20 = mul i32 %19, %16\l  %21 = add nsw i32 %20, 1\l  %22 = add nsw i32 %20, %1\l  %23 = add nsw i32 %22, 1\l  %24 = fmul contract float %2, 2.000000e+00\l  %25 = sext i32 %20 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %3, i64 %25\l  %27 = getelementptr inbounds float, float addrspace(1)* %6, i64 %25\l  %28 = getelementptr inbounds float, float addrspace(1)* %4, i64 %25\l  %29 = load float, float addrspace(1)* %5, align 4, !tbaa !7\l  %30 = fmul contract float %24, %29\l  %31 = load float, float addrspace(1)* %26, align 4, !tbaa !7\l  %32 = fadd contract float %31, %30\l  store float %32, float addrspace(1)* %26, align 4, !tbaa !7\l  %33 = load float, float addrspace(1)* %5, align 4, !tbaa !7\l  %34 = fmul contract float %24, %33\l  %35 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %36 = sext i32 %21 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %6, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7\l  %39 = fadd contract float %35, %38\l  %40 = fmul contract float %34, %39\l  %41 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %42 = fsub contract float %41, %40\l  store float %42, float addrspace(1)* %28, align 4, !tbaa !7\l  %43 = getelementptr inbounds float, float addrspace(1)* %5, i64 1\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7\l  %45 = fmul contract float %24, %44\l  %46 = load float, float addrspace(1)* %26, align 4, !tbaa !7\l  %47 = fadd contract float %46, %45\l  store float %47, float addrspace(1)* %26, align 4, !tbaa !7\l  %48 = load float, float addrspace(1)* %43, align 4, !tbaa !7\l  %49 = fmul contract float %24, %48\l  %50 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %51 = sext i32 %22 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %6, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7\l  %54 = fadd contract float %50, %53\l  %55 = fmul contract float %49, %54\l  %56 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %57 = fsub contract float %56, %55\l  store float %57, float addrspace(1)* %28, align 4, !tbaa !7\l  %58 = getelementptr inbounds float, float addrspace(1)* %5, i64 2\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = fmul contract float %24, %59\l  %61 = load float, float addrspace(1)* %26, align 4, !tbaa !7\l  %62 = fadd contract float %61, %60\l  store float %62, float addrspace(1)* %26, align 4, !tbaa !7\l  %63 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %64 = fmul contract float %24, %63\l  %65 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %66 = sext i32 %23 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %6, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7\l  %69 = fadd contract float %65, %68\l  %70 = fmul contract float %64, %69\l  %71 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %72 = fsub contract float %71, %70\l  store float %72, float addrspace(1)* %28, align 4, !tbaa !7\l  br label %73\l}"];
	Node0x5a5eb10 -> Node0x5a5eba0;
	Node0x5a5eba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  ret void\l}"];
}
