digraph "CFG for '_Z16_GEFrkernel_cudaiiPfS_S_S_' function" {
	label="CFG for '_Z16_GEFrkernel_cudaiiPfS_S_S_' function";

	Node0x5888e20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %25 = icmp ult i32 %15, %1\l  %26 = icmp ult i32 %23, %1\l  %27 = select i1 %25, i1 %26, i1 false\l  %28 = icmp ult i32 %24, %0\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %77\l|{<s0>T|<s1>F}}"];
	Node0x5888e20:s0 -> Node0x588cbc0;
	Node0x5888e20:s1 -> Node0x588cc50;
	Node0x588cbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%30:\l30:                                               \l  %31 = mul i32 %24, %1\l  %32 = add i32 %23, %31\l  %33 = mul i32 %32, %1\l  %34 = add i32 %33, %15\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %3, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = fmul contract float %37, %37\l  %39 = fpext float %38 to double\l  %40 = getelementptr inbounds float, float addrspace(1)* %4, i64 %35\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = fpext float %41 to double\l  %43 = fmul contract double %42, 8.000000e+00\l  %44 = getelementptr inbounds float, float addrspace(1)* %5, i64 %35\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %46 = fpext float %45 to double\l  %47 = fmul contract double %43, %46\l  %48 = fsub contract double %39, %47\l  %49 = fptrunc double %48 to float\l  %50 = fcmp olt float %49, 0x39F0000000000000\l  %51 = select i1 %50, float 0x41F0000000000000, float 1.000000e+00\l  %52 = fmul float %51, %49\l  %53 = tail call float @llvm.sqrt.f32(float %52)\l  %54 = bitcast float %53 to i32\l  %55 = add nsw i32 %54, -1\l  %56 = bitcast i32 %55 to float\l  %57 = add nsw i32 %54, 1\l  %58 = bitcast i32 %57 to float\l  %59 = tail call i1 @llvm.amdgcn.class.f32(float %52, i32 608)\l  %60 = select i1 %50, float 0x3EF0000000000000, float 1.000000e+00\l  %61 = fneg float %58\l  %62 = tail call float @llvm.fma.f32(float %61, float %53, float %52)\l  %63 = fcmp ogt float %62, 0.000000e+00\l  %64 = fneg float %56\l  %65 = tail call float @llvm.fma.f32(float %64, float %53, float %52)\l  %66 = fcmp ole float %65, 0.000000e+00\l  %67 = select i1 %66, float %56, float %53\l  %68 = select i1 %63, float %58, float %67\l  %69 = fmul float %60, %68\l  %70 = select i1 %59, float %52, float %69\l  %71 = fsub contract float %70, %37\l  %72 = fpext float %71 to double\l  %73 = fmul contract double %46, 4.000000e+00\l  %74 = fdiv contract double %72, %73\l  %75 = fptrunc double %74 to float\l  %76 = getelementptr inbounds float, float addrspace(1)* %2, i64 %35\l  store float %75, float addrspace(1)* %76, align 4, !tbaa !7\l  br label %77\l}"];
	Node0x588cbc0 -> Node0x588cc50;
	Node0x588cc50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  ret void\l}"];
}
