digraph "CFG for '_Z17final_mark_startsPhPjS0_jj' function" {
	label="CFG for '_Z17final_mark_startsPhPjS0_jj' function";

	Node0x57d1dc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %11, %10\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = icmp ult i32 %14, %4\l  br i1 %15, label %16, label %94\l|{<s0>T|<s1>F}}"];
	Node0x57d1dc0:s0 -> Node0x57d3c80;
	Node0x57d1dc0:s1 -> Node0x57d3d10;
	Node0x57d3c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%16:\l16:                                               \l  %17 = add i32 %14, -1\l  %18 = urem i32 %17, %4\l  %19 = zext i32 %14 to i64\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %19\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %22 = zext i32 %18 to i64\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %22\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %25 = mul i32 %21, 30\l  %26 = zext i32 %25 to i64\l  %27 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %26\l  %28 = mul i32 %3, 3\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds i8, i8 addrspace(1)* %27, i64 %29\l  %31 = mul i32 %24, 30\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %32\l  %34 = getelementptr inbounds i8, i8 addrspace(1)* %33, i64 %29\l  %35 = load i8, i8 addrspace(1)* %30, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %36 = zext i8 %35 to i64\l  %37 = shl nuw nsw i64 %36, 40\l  %38 = getelementptr inbounds i8, i8 addrspace(1)* %30, i64 1\l  %39 = load i8, i8 addrspace(1)* %38, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %40 = zext i8 %39 to i64\l  %41 = shl nuw nsw i64 %40, 32\l  %42 = getelementptr inbounds i8, i8 addrspace(1)* %30, i64 2\l  %43 = load i8, i8 addrspace(1)* %42, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %44 = zext i8 %43 to i32\l  %45 = shl nuw i32 %44, 24\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds i8, i8 addrspace(1)* %30, i64 3\l  %48 = load i8, i8 addrspace(1)* %47, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %49 = zext i8 %48 to i64\l  %50 = shl nuw nsw i64 %49, 16\l  %51 = getelementptr inbounds i8, i8 addrspace(1)* %30, i64 4\l  %52 = load i8, i8 addrspace(1)* %51, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %53 = zext i8 %52 to i64\l  %54 = shl nuw nsw i64 %53, 8\l  %55 = getelementptr inbounds i8, i8 addrspace(1)* %30, i64 5\l  %56 = load i8, i8 addrspace(1)* %55, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %57 = zext i8 %56 to i64\l  %58 = or i64 %41, %37\l  %59 = or i64 %58, %46\l  %60 = or i64 %54, %50\l  %61 = or i64 %60, %57\l  %62 = or i64 %61, %59\l  %63 = load i8, i8 addrspace(1)* %34, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %64 = zext i8 %63 to i64\l  %65 = shl nuw nsw i64 %64, 40\l  %66 = getelementptr inbounds i8, i8 addrspace(1)* %34, i64 1\l  %67 = load i8, i8 addrspace(1)* %66, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %68 = zext i8 %67 to i64\l  %69 = shl nuw nsw i64 %68, 32\l  %70 = getelementptr inbounds i8, i8 addrspace(1)* %34, i64 2\l  %71 = load i8, i8 addrspace(1)* %70, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %72 = zext i8 %71 to i32\l  %73 = shl nuw i32 %72, 24\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i8, i8 addrspace(1)* %34, i64 3\l  %76 = load i8, i8 addrspace(1)* %75, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %77 = zext i8 %76 to i64\l  %78 = shl nuw nsw i64 %77, 16\l  %79 = getelementptr inbounds i8, i8 addrspace(1)* %34, i64 4\l  %80 = load i8, i8 addrspace(1)* %79, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %81 = zext i8 %80 to i64\l  %82 = shl nuw nsw i64 %81, 8\l  %83 = getelementptr inbounds i8, i8 addrspace(1)* %34, i64 5\l  %84 = load i8, i8 addrspace(1)* %83, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %85 = zext i8 %84 to i64\l  %86 = or i64 %69, %65\l  %87 = or i64 %86, %74\l  %88 = or i64 %82, %78\l  %89 = or i64 %88, %85\l  %90 = or i64 %89, %87\l  %91 = icmp eq i64 %62, %90\l  br i1 %91, label %94, label %92\l|{<s0>T|<s1>F}}"];
	Node0x57d3c80:s0 -> Node0x57d3d10;
	Node0x57d3c80:s1 -> Node0x57d8380;
	Node0x57d8380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%92:\l92:                                               \l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %19\l  store i32 1, i32 addrspace(1)* %93, align 4, !tbaa !7\l  br label %94\l}"];
	Node0x57d8380 -> Node0x57d3d10;
	Node0x57d3d10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  ret void\l}"];
}
