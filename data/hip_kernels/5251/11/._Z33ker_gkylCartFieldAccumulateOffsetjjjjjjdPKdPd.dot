digraph "CFG for '_Z33ker_gkylCartFieldAccumulateOffsetjjjjjjdPKdPd' function" {
	label="CFG for '_Z33ker_gkylCartFieldAccumulateOffsetjjjjjjdPKdPd' function";

	Node0x50b57c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%9:\l  %10 = icmp ult i32 %4, %5\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !6\l  %20 = mul i32 %11, %16\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %21\l  %23 = icmp ult i32 %22, %2\l  br i1 %10, label %24, label %159\l|{<s0>T|<s1>F}}"];
	Node0x50b57c0:s0 -> Node0x50b8870;
	Node0x50b57c0:s1 -> Node0x50b8900;
	Node0x50b8870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%24:\l24:                                               \l  br i1 %23, label %25, label %294\l|{<s0>T|<s1>F}}"];
	Node0x50b8870:s0 -> Node0x50b8a40;
	Node0x50b8870:s1 -> Node0x50b8a90;
	Node0x50b8a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%25:\l25:                                               \l  %26 = icmp eq i32 %4, 0\l  %27 = add i32 %3, %1\l  %28 = udiv i32 %19, %16\l  %29 = mul i32 %28, %16\l  %30 = icmp ugt i32 %19, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = mul i32 %32, %16\l  %34 = and i32 %4, 7\l  %35 = icmp ult i32 %4, 8\l  %36 = and i32 %4, -8\l  %37 = icmp eq i32 %34, 0\l  br label %38\l}"];
	Node0x50b8a40 -> Node0x50b9420;
	Node0x50b9420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%38:\l38:                                               \l  %39 = phi i32 [ %22, %25 ], [ %64, %63 ]\l  br i1 %26, label %63, label %40\l|{<s0>T|<s1>F}}"];
	Node0x50b9420:s0 -> Node0x50b9510;
	Node0x50b9420:s1 -> Node0x50b9650;
	Node0x50b9650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%40:\l40:                                               \l  %41 = mul i32 %39, %4\l  %42 = add i32 %41, %0\l  %43 = mul i32 %39, %5\l  %44 = add i32 %27, %43\l  br i1 %35, label %45, label %66\l|{<s0>T|<s1>F}}"];
	Node0x50b9650:s0 -> Node0x50b99d0;
	Node0x50b9650:s1 -> Node0x50b9a20;
	Node0x50b99d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%45:\l45:                                               \l  %46 = phi i32 [ 0, %40 ], [ %156, %66 ]\l  br i1 %37, label %63, label %47\l|{<s0>T|<s1>F}}"];
	Node0x50b99d0:s0 -> Node0x50b9510;
	Node0x50b99d0:s1 -> Node0x50b9c40;
	Node0x50b9c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi i32 [ %60, %47 ], [ %46, %45 ]\l  %49 = phi i32 [ %61, %47 ], [ 0, %45 ]\l  %50 = add i32 %42, %48\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds double, double addrspace(1)* %7, i64 %51\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !16\l  %54 = fmul contract double %53, %6\l  %55 = add i32 %44, %48\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds double, double addrspace(1)* %8, i64 %56\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !16\l  %59 = fadd contract double %58, %54\l  store double %59, double addrspace(1)* %57, align 8, !tbaa !16\l  %60 = add nuw i32 %48, 1\l  %61 = add i32 %49, 1\l  %62 = icmp eq i32 %61, %34\l  br i1 %62, label %63, label %47, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x50b9c40:s0 -> Node0x50b9510;
	Node0x50b9c40:s1 -> Node0x50b9c40;
	Node0x50b9510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%63:\l63:                                               \l  %64 = add i32 %33, %39\l  %65 = icmp ult i32 %64, %2\l  br i1 %65, label %38, label %294, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x50b9510:s0 -> Node0x50b9420;
	Node0x50b9510:s1 -> Node0x50b8a90;
	Node0x50b9a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%66:\l66:                                               \l  %67 = phi i32 [ %156, %66 ], [ 0, %40 ]\l  %68 = phi i32 [ %157, %66 ], [ 0, %40 ]\l  %69 = add i32 %42, %67\l  %70 = zext i32 %69 to i64\l  %71 = getelementptr inbounds double, double addrspace(1)* %7, i64 %70\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !16\l  %73 = fmul contract double %72, %6\l  %74 = add i32 %44, %67\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds double, double addrspace(1)* %8, i64 %75\l  %77 = load double, double addrspace(1)* %76, align 8, !tbaa !16\l  %78 = fadd contract double %77, %73\l  store double %78, double addrspace(1)* %76, align 8, !tbaa !16\l  %79 = or i32 %67, 1\l  %80 = add i32 %42, %79\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds double, double addrspace(1)* %7, i64 %81\l  %83 = load double, double addrspace(1)* %82, align 8, !tbaa !16\l  %84 = fmul contract double %83, %6\l  %85 = add i32 %44, %79\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds double, double addrspace(1)* %8, i64 %86\l  %88 = load double, double addrspace(1)* %87, align 8, !tbaa !16\l  %89 = fadd contract double %88, %84\l  store double %89, double addrspace(1)* %87, align 8, !tbaa !16\l  %90 = or i32 %67, 2\l  %91 = add i32 %42, %90\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds double, double addrspace(1)* %7, i64 %92\l  %94 = load double, double addrspace(1)* %93, align 8, !tbaa !16\l  %95 = fmul contract double %94, %6\l  %96 = add i32 %44, %90\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds double, double addrspace(1)* %8, i64 %97\l  %99 = load double, double addrspace(1)* %98, align 8, !tbaa !16\l  %100 = fadd contract double %99, %95\l  store double %100, double addrspace(1)* %98, align 8, !tbaa !16\l  %101 = or i32 %67, 3\l  %102 = add i32 %42, %101\l  %103 = zext i32 %102 to i64\l  %104 = getelementptr inbounds double, double addrspace(1)* %7, i64 %103\l  %105 = load double, double addrspace(1)* %104, align 8, !tbaa !16\l  %106 = fmul contract double %105, %6\l  %107 = add i32 %44, %101\l  %108 = zext i32 %107 to i64\l  %109 = getelementptr inbounds double, double addrspace(1)* %8, i64 %108\l  %110 = load double, double addrspace(1)* %109, align 8, !tbaa !16\l  %111 = fadd contract double %110, %106\l  store double %111, double addrspace(1)* %109, align 8, !tbaa !16\l  %112 = or i32 %67, 4\l  %113 = add i32 %42, %112\l  %114 = zext i32 %113 to i64\l  %115 = getelementptr inbounds double, double addrspace(1)* %7, i64 %114\l  %116 = load double, double addrspace(1)* %115, align 8, !tbaa !16\l  %117 = fmul contract double %116, %6\l  %118 = add i32 %44, %112\l  %119 = zext i32 %118 to i64\l  %120 = getelementptr inbounds double, double addrspace(1)* %8, i64 %119\l  %121 = load double, double addrspace(1)* %120, align 8, !tbaa !16\l  %122 = fadd contract double %121, %117\l  store double %122, double addrspace(1)* %120, align 8, !tbaa !16\l  %123 = or i32 %67, 5\l  %124 = add i32 %42, %123\l  %125 = zext i32 %124 to i64\l  %126 = getelementptr inbounds double, double addrspace(1)* %7, i64 %125\l  %127 = load double, double addrspace(1)* %126, align 8, !tbaa !16\l  %128 = fmul contract double %127, %6\l  %129 = add i32 %44, %123\l  %130 = zext i32 %129 to i64\l  %131 = getelementptr inbounds double, double addrspace(1)* %8, i64 %130\l  %132 = load double, double addrspace(1)* %131, align 8, !tbaa !16\l  %133 = fadd contract double %132, %128\l  store double %133, double addrspace(1)* %131, align 8, !tbaa !16\l  %134 = or i32 %67, 6\l  %135 = add i32 %42, %134\l  %136 = zext i32 %135 to i64\l  %137 = getelementptr inbounds double, double addrspace(1)* %7, i64 %136\l  %138 = load double, double addrspace(1)* %137, align 8, !tbaa !16\l  %139 = fmul contract double %138, %6\l  %140 = add i32 %44, %134\l  %141 = zext i32 %140 to i64\l  %142 = getelementptr inbounds double, double addrspace(1)* %8, i64 %141\l  %143 = load double, double addrspace(1)* %142, align 8, !tbaa !16\l  %144 = fadd contract double %143, %139\l  store double %144, double addrspace(1)* %142, align 8, !tbaa !16\l  %145 = or i32 %67, 7\l  %146 = add i32 %42, %145\l  %147 = zext i32 %146 to i64\l  %148 = getelementptr inbounds double, double addrspace(1)* %7, i64 %147\l  %149 = load double, double addrspace(1)* %148, align 8, !tbaa !16\l  %150 = fmul contract double %149, %6\l  %151 = add i32 %44, %145\l  %152 = zext i32 %151 to i64\l  %153 = getelementptr inbounds double, double addrspace(1)* %8, i64 %152\l  %154 = load double, double addrspace(1)* %153, align 8, !tbaa !16\l  %155 = fadd contract double %154, %150\l  store double %155, double addrspace(1)* %153, align 8, !tbaa !16\l  %156 = add nuw i32 %67, 8\l  %157 = add i32 %68, 8\l  %158 = icmp eq i32 %157, %36\l  br i1 %158, label %45, label %66, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x50b9a20:s0 -> Node0x50b99d0;
	Node0x50b9a20:s1 -> Node0x50b9a20;
	Node0x50b8900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%159:\l159:                                              \l  br i1 %23, label %160, label %294\l|{<s0>T|<s1>F}}"];
	Node0x50b8900:s0 -> Node0x50bf060;
	Node0x50b8900:s1 -> Node0x50b8a90;
	Node0x50bf060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%160:\l160:                                              \l  %161 = icmp eq i32 %5, 0\l  %162 = add i32 %3, %0\l  %163 = udiv i32 %19, %16\l  %164 = mul i32 %163, %16\l  %165 = icmp ugt i32 %19, %164\l  %166 = zext i1 %165 to i32\l  %167 = add i32 %163, %166\l  %168 = mul i32 %167, %16\l  %169 = and i32 %5, 7\l  %170 = icmp ult i32 %5, 8\l  %171 = and i32 %5, -8\l  %172 = icmp eq i32 %169, 0\l  br label %173\l}"];
	Node0x50bf060 -> Node0x50bf800;
	Node0x50bf800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%173:\l173:                                              \l  %174 = phi i32 [ %22, %160 ], [ %199, %198 ]\l  br i1 %161, label %198, label %175\l|{<s0>T|<s1>F}}"];
	Node0x50bf800:s0 -> Node0x50bf8c0;
	Node0x50bf800:s1 -> Node0x50bfa00;
	Node0x50bfa00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%175:\l175:                                              \l  %176 = mul i32 %174, %4\l  %177 = add i32 %162, %176\l  %178 = mul i32 %174, %5\l  %179 = add i32 %178, %1\l  br i1 %170, label %180, label %201\l|{<s0>T|<s1>F}}"];
	Node0x50bfa00:s0 -> Node0x50bfd80;
	Node0x50bfa00:s1 -> Node0x50bfdd0;
	Node0x50bfd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%180:\l180:                                              \l  %181 = phi i32 [ 0, %175 ], [ %291, %201 ]\l  br i1 %172, label %198, label %182\l|{<s0>T|<s1>F}}"];
	Node0x50bfd80:s0 -> Node0x50bf8c0;
	Node0x50bfd80:s1 -> Node0x50bffc0;
	Node0x50bffc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%182:\l182:                                              \l  %183 = phi i32 [ %195, %182 ], [ %181, %180 ]\l  %184 = phi i32 [ %196, %182 ], [ 0, %180 ]\l  %185 = add i32 %177, %183\l  %186 = zext i32 %185 to i64\l  %187 = getelementptr inbounds double, double addrspace(1)* %7, i64 %186\l  %188 = load double, double addrspace(1)* %187, align 8, !tbaa !16\l  %189 = fmul contract double %188, %6\l  %190 = add i32 %179, %183\l  %191 = zext i32 %190 to i64\l  %192 = getelementptr inbounds double, double addrspace(1)* %8, i64 %191\l  %193 = load double, double addrspace(1)* %192, align 8, !tbaa !16\l  %194 = fadd contract double %193, %189\l  store double %194, double addrspace(1)* %192, align 8, !tbaa !16\l  %195 = add nuw i32 %183, 1\l  %196 = add i32 %184, 1\l  %197 = icmp eq i32 %196, %169\l  br i1 %197, label %198, label %182, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x50bffc0:s0 -> Node0x50bf8c0;
	Node0x50bffc0:s1 -> Node0x50bffc0;
	Node0x50bf8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%198:\l198:                                              \l  %199 = add i32 %168, %174\l  %200 = icmp ult i32 %199, %2\l  br i1 %200, label %173, label %294, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x50bf8c0:s0 -> Node0x50bf800;
	Node0x50bf8c0:s1 -> Node0x50b8a90;
	Node0x50bfdd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%201:\l201:                                              \l  %202 = phi i32 [ %291, %201 ], [ 0, %175 ]\l  %203 = phi i32 [ %292, %201 ], [ 0, %175 ]\l  %204 = add i32 %177, %202\l  %205 = zext i32 %204 to i64\l  %206 = getelementptr inbounds double, double addrspace(1)* %7, i64 %205\l  %207 = load double, double addrspace(1)* %206, align 8, !tbaa !16\l  %208 = fmul contract double %207, %6\l  %209 = add i32 %179, %202\l  %210 = zext i32 %209 to i64\l  %211 = getelementptr inbounds double, double addrspace(1)* %8, i64 %210\l  %212 = load double, double addrspace(1)* %211, align 8, !tbaa !16\l  %213 = fadd contract double %212, %208\l  store double %213, double addrspace(1)* %211, align 8, !tbaa !16\l  %214 = or i32 %202, 1\l  %215 = add i32 %177, %214\l  %216 = zext i32 %215 to i64\l  %217 = getelementptr inbounds double, double addrspace(1)* %7, i64 %216\l  %218 = load double, double addrspace(1)* %217, align 8, !tbaa !16\l  %219 = fmul contract double %218, %6\l  %220 = add i32 %179, %214\l  %221 = zext i32 %220 to i64\l  %222 = getelementptr inbounds double, double addrspace(1)* %8, i64 %221\l  %223 = load double, double addrspace(1)* %222, align 8, !tbaa !16\l  %224 = fadd contract double %223, %219\l  store double %224, double addrspace(1)* %222, align 8, !tbaa !16\l  %225 = or i32 %202, 2\l  %226 = add i32 %177, %225\l  %227 = zext i32 %226 to i64\l  %228 = getelementptr inbounds double, double addrspace(1)* %7, i64 %227\l  %229 = load double, double addrspace(1)* %228, align 8, !tbaa !16\l  %230 = fmul contract double %229, %6\l  %231 = add i32 %179, %225\l  %232 = zext i32 %231 to i64\l  %233 = getelementptr inbounds double, double addrspace(1)* %8, i64 %232\l  %234 = load double, double addrspace(1)* %233, align 8, !tbaa !16\l  %235 = fadd contract double %234, %230\l  store double %235, double addrspace(1)* %233, align 8, !tbaa !16\l  %236 = or i32 %202, 3\l  %237 = add i32 %177, %236\l  %238 = zext i32 %237 to i64\l  %239 = getelementptr inbounds double, double addrspace(1)* %7, i64 %238\l  %240 = load double, double addrspace(1)* %239, align 8, !tbaa !16\l  %241 = fmul contract double %240, %6\l  %242 = add i32 %179, %236\l  %243 = zext i32 %242 to i64\l  %244 = getelementptr inbounds double, double addrspace(1)* %8, i64 %243\l  %245 = load double, double addrspace(1)* %244, align 8, !tbaa !16\l  %246 = fadd contract double %245, %241\l  store double %246, double addrspace(1)* %244, align 8, !tbaa !16\l  %247 = or i32 %202, 4\l  %248 = add i32 %177, %247\l  %249 = zext i32 %248 to i64\l  %250 = getelementptr inbounds double, double addrspace(1)* %7, i64 %249\l  %251 = load double, double addrspace(1)* %250, align 8, !tbaa !16\l  %252 = fmul contract double %251, %6\l  %253 = add i32 %179, %247\l  %254 = zext i32 %253 to i64\l  %255 = getelementptr inbounds double, double addrspace(1)* %8, i64 %254\l  %256 = load double, double addrspace(1)* %255, align 8, !tbaa !16\l  %257 = fadd contract double %256, %252\l  store double %257, double addrspace(1)* %255, align 8, !tbaa !16\l  %258 = or i32 %202, 5\l  %259 = add i32 %177, %258\l  %260 = zext i32 %259 to i64\l  %261 = getelementptr inbounds double, double addrspace(1)* %7, i64 %260\l  %262 = load double, double addrspace(1)* %261, align 8, !tbaa !16\l  %263 = fmul contract double %262, %6\l  %264 = add i32 %179, %258\l  %265 = zext i32 %264 to i64\l  %266 = getelementptr inbounds double, double addrspace(1)* %8, i64 %265\l  %267 = load double, double addrspace(1)* %266, align 8, !tbaa !16\l  %268 = fadd contract double %267, %263\l  store double %268, double addrspace(1)* %266, align 8, !tbaa !16\l  %269 = or i32 %202, 6\l  %270 = add i32 %177, %269\l  %271 = zext i32 %270 to i64\l  %272 = getelementptr inbounds double, double addrspace(1)* %7, i64 %271\l  %273 = load double, double addrspace(1)* %272, align 8, !tbaa !16\l  %274 = fmul contract double %273, %6\l  %275 = add i32 %179, %269\l  %276 = zext i32 %275 to i64\l  %277 = getelementptr inbounds double, double addrspace(1)* %8, i64 %276\l  %278 = load double, double addrspace(1)* %277, align 8, !tbaa !16\l  %279 = fadd contract double %278, %274\l  store double %279, double addrspace(1)* %277, align 8, !tbaa !16\l  %280 = or i32 %202, 7\l  %281 = add i32 %177, %280\l  %282 = zext i32 %281 to i64\l  %283 = getelementptr inbounds double, double addrspace(1)* %7, i64 %282\l  %284 = load double, double addrspace(1)* %283, align 8, !tbaa !16\l  %285 = fmul contract double %284, %6\l  %286 = add i32 %179, %280\l  %287 = zext i32 %286 to i64\l  %288 = getelementptr inbounds double, double addrspace(1)* %8, i64 %287\l  %289 = load double, double addrspace(1)* %288, align 8, !tbaa !16\l  %290 = fadd contract double %289, %285\l  store double %290, double addrspace(1)* %288, align 8, !tbaa !16\l  %291 = add nuw i32 %202, 8\l  %292 = add i32 %203, 8\l  %293 = icmp eq i32 %292, %171\l  br i1 %293, label %180, label %201, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x50bfdd0:s0 -> Node0x50bfd80;
	Node0x50bfdd0:s1 -> Node0x50bfdd0;
	Node0x50b8a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%294:\l294:                                              \l  ret void\l}"];
}
