digraph "CFG for '_Z23ker_gkylCartFieldAssignjjdPKdPd' function" {
	label="CFG for '_Z23ker_gkylCartFieldAssignjjdPKdPd' function";

	Node0x4efe520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %16, %0\l  %18 = add i32 %17, %15\l  %19 = add i32 %1, %0\l  %20 = icmp ult i32 %18, %19\l  br i1 %20, label %21, label %28\l|{<s0>T|<s1>F}}"];
	Node0x4efe520:s0 -> Node0x4f008b0;
	Node0x4efe520:s1 -> Node0x4f00940;
	Node0x4f008b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%21:\l21:                                               \l  %22 = udiv i32 %14, %11\l  %23 = mul i32 %22, %11\l  %24 = icmp ugt i32 %14, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %11\l  br label %29\l}"];
	Node0x4f008b0 -> Node0x4f00dc0;
	Node0x4f00940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%28:\l28:                                               \l  ret void\l}"];
	Node0x4f00dc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %18, %21 ], [ %36, %29 ]\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds double, double addrspace(1)* %3, i64 %31\l  %33 = load double, double addrspace(1)* %32, align 8, !tbaa !16\l  %34 = fmul contract double %33, %2\l  %35 = getelementptr inbounds double, double addrspace(1)* %4, i64 %31\l  store double %34, double addrspace(1)* %35, align 8, !tbaa !16\l  %36 = add i32 %27, %30\l  %37 = icmp ult i32 %36, %19\l  br i1 %37, label %29, label %28, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4f00dc0:s0 -> Node0x4f00dc0;
	Node0x4f00dc0:s1 -> Node0x4f00940;
}
