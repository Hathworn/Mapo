digraph "CFG for '_Z19allocateNodesKerneliPiS_S_S_S_' function" {
	label="CFG for '_Z19allocateNodesKerneliPiS_S_S_S_' function";

	Node0x4a7e710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %0\l  br i1 %16, label %17, label %123\l|{<s0>T|<s1>F}}"];
	Node0x4a7e710:s0 -> Node0x4a7eb60;
	Node0x4a7e710:s1 -> Node0x4a80730;
	Node0x4a7eb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%17:\l17:                                               \l  %18 = sext i32 %15 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %21 = icmp eq i32 %20, 0\l  br i1 %21, label %22, label %123\l|{<s0>T|<s1>F}}"];
	Node0x4a7eb60:s0 -> Node0x4a81210;
	Node0x4a7eb60:s1 -> Node0x4a80730;
	Node0x4a81210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%22:\l22:                                               \l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %18\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %25 = add nsw i32 %15, 1\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %26\l  %28 = load i32, i32 addrspace(1)* %27, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %29 = icmp slt i32 %24, %28\l  br i1 %29, label %81, label %30\l|{<s0>T|<s1>F}}"];
	Node0x4a81210:s0 -> Node0x4a81db0;
	Node0x4a81210:s1 -> Node0x4a81e40;
	Node0x4a81e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%30:\l30:                                               \l  %31 = phi \<10 x i32\> [ \<i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32\l... -1, i32 -1, i32 -1, i32 -1\>, %22 ], [ %118, %117 ]\l  %32 = phi \<10 x i32\> [ zeroinitializer, %22 ], [ %119, %117 ]\l  %33 = extractelement \<10 x i32\> %31, i64 0\l  %34 = extractelement \<10 x i32\> %32, i64 0\l  %35 = extractelement \<10 x i32\> %32, i64 1\l  %36 = icmp sgt i32 %35, %34\l  %37 = extractelement \<10 x i32\> %31, i64 1\l  %38 = select i1 %36, i32 %37, i32 %33\l  %39 = tail call i32 @llvm.smax.i32(i32 %35, i32 %34)\l  %40 = extractelement \<10 x i32\> %32, i64 2\l  %41 = icmp sgt i32 %40, %39\l  %42 = extractelement \<10 x i32\> %31, i64 2\l  %43 = select i1 %41, i32 %42, i32 %38\l  %44 = tail call i32 @llvm.smax.i32(i32 %40, i32 %39)\l  %45 = extractelement \<10 x i32\> %32, i64 3\l  %46 = icmp sgt i32 %45, %44\l  %47 = extractelement \<10 x i32\> %31, i64 3\l  %48 = select i1 %46, i32 %47, i32 %43\l  %49 = tail call i32 @llvm.smax.i32(i32 %45, i32 %44)\l  %50 = extractelement \<10 x i32\> %32, i64 4\l  %51 = icmp sgt i32 %50, %49\l  %52 = extractelement \<10 x i32\> %31, i64 4\l  %53 = select i1 %51, i32 %52, i32 %48\l  %54 = tail call i32 @llvm.smax.i32(i32 %50, i32 %49)\l  %55 = extractelement \<10 x i32\> %32, i64 5\l  %56 = icmp sgt i32 %55, %54\l  %57 = extractelement \<10 x i32\> %31, i64 5\l  %58 = select i1 %56, i32 %57, i32 %53\l  %59 = tail call i32 @llvm.smax.i32(i32 %55, i32 %54)\l  %60 = extractelement \<10 x i32\> %32, i64 6\l  %61 = icmp sgt i32 %60, %59\l  %62 = extractelement \<10 x i32\> %31, i64 6\l  %63 = select i1 %61, i32 %62, i32 %58\l  %64 = tail call i32 @llvm.smax.i32(i32 %60, i32 %59)\l  %65 = extractelement \<10 x i32\> %32, i64 7\l  %66 = icmp sgt i32 %65, %64\l  %67 = extractelement \<10 x i32\> %31, i64 7\l  %68 = select i1 %66, i32 %67, i32 %63\l  %69 = tail call i32 @llvm.smax.i32(i32 %65, i32 %64)\l  %70 = extractelement \<10 x i32\> %32, i64 8\l  %71 = icmp sgt i32 %70, %69\l  %72 = extractelement \<10 x i32\> %31, i64 8\l  %73 = select i1 %71, i32 %72, i32 %68\l  %74 = tail call i32 @llvm.smax.i32(i32 %70, i32 %69)\l  %75 = extractelement \<10 x i32\> %32, i64 9\l  %76 = icmp sgt i32 %75, %74\l  %77 = extractelement \<10 x i32\> %31, i64 9\l  %78 = select i1 %76, i32 %77, i32 %73\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %18\l  store i32 %78, i32 addrspace(1)* %79, align 4, !tbaa !7\l  %80 = icmp eq i32 %78, -1\l  br i1 %80, label %123, label %122\l|{<s0>T|<s1>F}}"];
	Node0x4a81e40:s0 -> Node0x4a80730;
	Node0x4a81e40:s1 -> Node0x4a85490;
	Node0x4a81db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%81:\l81:                                               \l  %82 = phi i32 [ %120, %117 ], [ %24, %22 ]\l  %83 = phi \<10 x i32\> [ %119, %117 ], [ zeroinitializer, %22 ]\l  %84 = phi \<10 x i32\> [ %118, %117 ], [ \<i32 -1, i32 -1, i32 -1, i32 -1, i32\l... -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1\>, %22 ]\l  %85 = sext i32 %82 to i64\l  %86 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %85\l  %87 = load i32, i32 addrspace(1)* %86, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %88\l  %90 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %91 = icmp eq i32 %90, -1\l  br i1 %91, label %117, label %92\l|{<s0>T|<s1>F}}"];
	Node0x4a81db0:s0 -> Node0x4a82730;
	Node0x4a81db0:s1 -> Node0x4a85c60;
	Node0x4a85c60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%92:\l92:                                               \l  %93 = phi i32 [ %113, %109 ], [ 0, %81 ]\l  %94 = phi i32 [ %112, %109 ], [ %90, %81 ]\l  %95 = phi \<10 x i32\> [ %111, %109 ], [ %83, %81 ]\l  %96 = phi \<10 x i32\> [ %110, %109 ], [ %84, %81 ]\l  %97 = extractelement \<10 x i32\> %96, i32 %93\l  %98 = icmp eq i32 %97, -1\l  br i1 %98, label %99, label %102\l|{<s0>T|<s1>F}}"];
	Node0x4a85c60:s0 -> Node0x4a86330;
	Node0x4a85c60:s1 -> Node0x4a863c0;
	Node0x4a86330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%99:\l99:                                               \l  %100 = insertelement \<10 x i32\> %96, i32 %94, i32 %93\l  %101 = insertelement \<10 x i32\> %95, i32 1, i32 %93\l  br label %109\l}"];
	Node0x4a86330 -> Node0x4a85da0;
	Node0x4a863c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%102:\l102:                                              \l  %103 = icmp eq i32 %97, %94\l  %104 = extractelement \<10 x i32\> %95, i32 %93\l  %105 = add nsw i32 %104, 1\l  %106 = insertelement \<10 x i32\> %95, i32 %105, i32 %93\l  %107 = select i1 %103, \<10 x i32\> %106, \<10 x i32\> %95\l  %108 = select i1 %103, i32 -1, i32 %94\l  br label %109\l}"];
	Node0x4a863c0 -> Node0x4a85da0;
	Node0x4a85da0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%109:\l109:                                              \l  %110 = phi \<10 x i32\> [ %100, %99 ], [ %96, %102 ]\l  %111 = phi \<10 x i32\> [ %101, %99 ], [ %107, %102 ]\l  %112 = phi i32 [ %94, %99 ], [ %108, %102 ]\l  %113 = add nuw nsw i32 %93, 1\l  %114 = icmp ult i32 %93, 9\l  %115 = icmp ne i32 %112, -1\l  %116 = select i1 %114, i1 %115, i1 false\l  br i1 %116, label %92, label %117, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4a85da0:s0 -> Node0x4a85c60;
	Node0x4a85da0:s1 -> Node0x4a82730;
	Node0x4a82730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%117:\l117:                                              \l  %118 = phi \<10 x i32\> [ %84, %81 ], [ %110, %109 ]\l  %119 = phi \<10 x i32\> [ %83, %81 ], [ %111, %109 ]\l  %120 = add nsw i32 %82, 1\l  %121 = icmp slt i32 %120, %28\l  br i1 %121, label %81, label %30, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4a82730:s0 -> Node0x4a81db0;
	Node0x4a82730:s1 -> Node0x4a81e40;
	Node0x4a85490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%122:\l122:                                              \l  store i32 1, i32 addrspace(1)* %19, align 4, !tbaa !7\l  br label %123\l}"];
	Node0x4a85490 -> Node0x4a80730;
	Node0x4a80730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%123:\l123:                                              \l  ret void\l}"];
}
