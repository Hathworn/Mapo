digraph "CFG for '_Z20Final_Iterate_KerneliPiS_S_S_S_S_S_S_' function" {
	label="CFG for '_Z20Final_Iterate_KerneliPiS_S_S_S_S_S_S_' function";

	Node0x5bcc1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = icmp slt i32 %18, %0\l  br i1 %19, label %20, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5bcc1e0:s0 -> Node0x5bcecf0;
	Node0x5bcc1e0:s1 -> Node0x5bced80;
	Node0x5bcecf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%20:\l20:                                               \l  %21 = sext i32 %18 to i64\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %21\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %21\l  %25 = load i32, i32 addrspace(1)* %24, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %26 = icmp slt i32 %23, 1000001\l  br i1 %26, label %27, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5bcecf0:s0 -> Node0x5bcffc0;
	Node0x5bcecf0:s1 -> Node0x5bd0050;
	Node0x5bcffc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%27:\l27:                                               \l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %21\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %30 = add nsw i32 %18, 1\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %34 = icmp slt i32 %29, %33\l  br i1 %34, label %35, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5bcffc0:s0 -> Node0x5bd0710;
	Node0x5bcffc0:s1 -> Node0x5bd0050;
	Node0x5bd0710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i32 [ %55, %35 ], [ %23, %27 ]\l  %37 = phi i32 [ %54, %35 ], [ %25, %27 ]\l  %38 = phi i32 [ %56, %35 ], [ %29, %27 ]\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %42\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %42\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %47 = icmp ne i32 %44, 0\l  %48 = icmp eq i32 %44, %36\l  %49 = select i1 %47, i1 %48, i1 false\l  %50 = icmp sgt i32 %46, %37\l  %51 = select i1 %49, i1 %50, i1 false\l  %52 = icmp ugt i32 %44, %36\l  %53 = select i1 %52, i1 true, i1 %51\l  %54 = select i1 %53, i32 %46, i32 %37\l  %55 = tail call i32 @llvm.umax.i32(i32 %44, i32 %36)\l  %56 = add nsw i32 %38, 1\l  %57 = icmp slt i32 %56, %33\l  br i1 %57, label %35, label %58, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5bd0710:s0 -> Node0x5bd0710;
	Node0x5bd0710:s1 -> Node0x5bd0050;
	Node0x5bd0050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%58:\l58:                                               \l  %59 = phi i32 [ %25, %20 ], [ %25, %27 ], [ %54, %35 ]\l  %60 = phi i32 [ %23, %20 ], [ %23, %27 ], [ %55, %35 ]\l  %61 = icmp eq i32 %59, %18\l  br i1 %61, label %66, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5bd0050:s0 -> Node0x5bd1bd0;
	Node0x5bd0050:s1 -> Node0x5bd1c20;
	Node0x5bd1c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%62:\l62:                                               \l  %63 = icmp ne i32 %60, 1000001\l  %64 = sext i1 %63 to i32\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %21\l  store i32 %64, i32 addrspace(1)* %65, align 4, !tbaa !7\l  br i1 %63, label %68, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5bd1c20:s0 -> Node0x5bd05a0;
	Node0x5bd1c20:s1 -> Node0x5bced80;
	Node0x5bd1bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%66:\l66:                                               \l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %21\l  br label %68\l}"];
	Node0x5bd1bd0 -> Node0x5bd05a0;
	Node0x5bd05a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%68:\l68:                                               \l  %69 = phi i32 addrspace(1)* [ %67, %66 ], [ %8, %62 ]\l  store i32 1, i32 addrspace(1)* %69, align 4, !tbaa !7\l  br label %70\l}"];
	Node0x5bd05a0 -> Node0x5bced80;
	Node0x5bced80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%70:\l70:                                               \l  ret void\l}"];
}
