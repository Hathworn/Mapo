digraph "CFG for '_Z19FindDesirableMergesiiibPiS_S_S_S_' function" {
	label="CFG for '_Z19FindDesirableMergesiiibPiS_S_S_S_' function";

	Node0x452f330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = icmp slt i32 %18, %0\l  br i1 %19, label %20, label %567\l|{<s0>T|<s1>F}}"];
	Node0x452f330:s0 -> Node0x4531310;
	Node0x452f330:s1 -> Node0x45313a0;
	Node0x4531310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%20:\l20:                                               \l  %21 = sext i32 %18 to i64\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %21\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %24 = icmp eq i32 %23, 1\l  br i1 %24, label %567, label %25\l|{<s0>T|<s1>F}}"];
	Node0x4531310:s0 -> Node0x45313a0;
	Node0x4531310:s1 -> Node0x4531e80;
	Node0x4531e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%25:\l25:                                               \l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %21\l  %27 = load i32, i32 addrspace(1)* %26, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %21\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %30 = add nsw i32 %18, 1\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %34 = icmp sgt i32 %33, %29\l  br i1 %34, label %35, label %40\l|{<s0>T|<s1>F}}"];
	Node0x4531e80:s0 -> Node0x4530ec0;
	Node0x4531e80:s1 -> Node0x4532ce0;
	Node0x4530ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%35:\l35:                                               \l  %36 = icmp slt i32 %27, %1\l  %37 = sub nsw i32 %1, %27\l  %38 = select i1 %36, i32 %37, i32 0\l  %39 = sitofp i32 %38 to float\l  br label %44\l}"];
	Node0x4530ec0 -> Node0x4533060;
	Node0x4532ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%40:\l40:                                               \l  %41 = phi i32 [ -1, %25 ], [ %83, %82 ]\l  %42 = phi i32 [ 0, %25 ], [ %85, %82 ]\l  %43 = icmp eq i32 %41, -1\l  br i1 %43, label %88, label %89\l|{<s0>T|<s1>F}}"];
	Node0x4532ce0:s0 -> Node0x4533470;
	Node0x4532ce0:s1 -> Node0x4533500;
	Node0x4533060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%44:\l44:                                               \l  %45 = phi i32 [ 0, %35 ], [ %85, %82 ]\l  %46 = phi float [ 0.000000e+00, %35 ], [ %84, %82 ]\l  %47 = phi i32 [ -1, %35 ], [ %83, %82 ]\l  %48 = phi i32 [ %29, %35 ], [ %86, %82 ]\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %49\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %52\l  %54 = load i32, i32 addrspace(1)* %53, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %55 = icmp eq i32 %54, 1\l  br i1 %55, label %82, label %56\l|{<s0>T|<s1>F}}"];
	Node0x4533060:s0 -> Node0x4533180;
	Node0x4533060:s1 -> Node0x4534830;
	Node0x4534830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%56:\l56:                                               \l  %57 = add nsw i32 %45, 1\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %52\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %60 = icmp slt i32 %59, %1\l  %61 = sub nsw i32 %1, %59\l  %62 = select i1 %60, i32 %61, i32 0\l  %63 = sitofp i32 %62 to float\l  %64 = fadd contract float %39, %63\l  %65 = add nsw i32 %59, %27\l  %66 = icmp sgt i32 %65, %2\l  br i1 %66, label %67, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4534830:s0 -> Node0x4532b20;
	Node0x4534830:s1 -> Node0x4532bb0;
	Node0x4532b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%67:\l67:                                               \l  br i1 %3, label %68, label %72\l|{<s0>T|<s1>F}}"];
	Node0x4532b20:s0 -> Node0x45352e0;
	Node0x4532b20:s1 -> Node0x4535330;
	Node0x45352e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%68:\l68:                                               \l  %69 = sub nsw i32 %65, %2\l  %70 = sitofp i32 %69 to double\l  %71 = fdiv contract double 1.000000e+00, %70\l  br label %72\l}"];
	Node0x45352e0 -> Node0x4535330;
	Node0x4535330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%72:\l72:                                               \l  %73 = phi contract double [ %71, %68 ], [ 0.000000e+00, %67 ]\l  %74 = fpext float %64 to double\l  %75 = fmul contract double %73, %74\l  %76 = fptrunc double %75 to float\l  br label %77\l}"];
	Node0x4535330 -> Node0x4532bb0;
	Node0x4532bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%77:\l77:                                               \l  %78 = phi float [ %76, %72 ], [ %64, %56 ]\l  %79 = fcmp contract ogt float %78, %46\l  %80 = select i1 %79, i32 %51, i32 %47\l  %81 = select i1 %79, float %78, float %46\l  br label %82\l}"];
	Node0x4532bb0 -> Node0x4533180;
	Node0x4533180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%82:\l82:                                               \l  %83 = phi i32 [ %80, %77 ], [ %47, %44 ]\l  %84 = phi float [ %81, %77 ], [ %46, %44 ]\l  %85 = phi i32 [ %57, %77 ], [ %45, %44 ]\l  %86 = add nsw i32 %48, 1\l  %87 = icmp slt i32 %86, %33\l  br i1 %87, label %44, label %40, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4533180:s0 -> Node0x4533060;
	Node0x4533180:s1 -> Node0x4532ce0;
	Node0x4533470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%88:\l88:                                               \l  store i32 1, i32 addrspace(1)* %22, align 4, !tbaa !7\l  br label %89\l}"];
	Node0x4533470 -> Node0x4533500;
	Node0x4533500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%89:\l89:                                               \l  %90 = icmp slt i32 %27, %1\l  %91 = select i1 %90, i1 %3, i1 false\l  %92 = select i1 %91, i1 %43, i1 false\l  br i1 %92, label %93, label %565\l|{<s0>T|<s1>F}}"];
	Node0x4533500:s0 -> Node0x4536360;
	Node0x4533500:s1 -> Node0x45363b0;
	Node0x4536360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%93:\l93:                                               \l  %94 = sub nsw i32 %33, %29\l  %95 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %96 = getelementptr inbounds i8, i8 addrspace(4)* %95, i64 24\l  %97 = bitcast i8 addrspace(4)* %96 to i64 addrspace(4)*\l  %98 = load i64, i64 addrspace(4)* %97, align 8, !tbaa !13\l  %99 = inttoptr i64 %98 to i8 addrspace(1)*\l  %100 = addrspacecast i8 addrspace(1)* %99 to i8*\l  %101 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %100, i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %102 = extractelement \<2 x i64\> %101, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([75 x i8], [75 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %103, label %107\l|{<s0>T|<s1>F}}"];
	Node0x4536360:s0 -> Node0x45371e0;
	Node0x4536360:s1 -> Node0x4537bd0;
	Node0x45371e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%103:\l103:                                              \l  %104 = and i64 %102, -225\l  %105 = or i64 %104, 32\l  %106 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %100, i64 noundef %105, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %548\l}"];
	Node0x45371e0 -> Node0x4537eb0;
	Node0x4537bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%107:\l107:                                              \l  %108 = and i64 %102, 2\l  %109 = and i64 %102, -3\l  %110 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %109, i64 0\l  br label %111\l}"];
	Node0x4537bd0 -> Node0x4538a50;
	Node0x4538a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%111:\l111:                                              \l  %112 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([75 x i8], [75 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([75 x i8], [75 x i8] addrspace(4)*\l... @.str, i64 0, i64 74) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([75 x i8]* addrspacecast ([75 x i8] addrspace(4)* @.str to [75 x i8]*) to\l... i64)), i64 1))), %107 ], [ %545, %537 ]\l  %113 = phi i8 addrspace(4)* [ getelementptr inbounds ([75 x i8], [75 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %107 ], [ %546, %537 ]\l  %114 = phi \<2 x i64\> [ %110, %107 ], [ %544, %537 ]\l  %115 = icmp ugt i64 %112, 56\l  %116 = extractelement \<2 x i64\> %114, i64 0\l  %117 = or i64 %116, %108\l  %118 = insertelement \<2 x i64\> poison, i64 %117, i64 0\l  %119 = select i1 %115, \<2 x i64\> %114, \<2 x i64\> %118\l  %120 = tail call i64 @llvm.umin.i64(i64 %112, i64 56)\l  %121 = trunc i64 %120 to i32\l  %122 = extractelement \<2 x i64\> %119, i64 0\l  %123 = icmp ugt i32 %121, 7\l  br i1 %123, label %126, label %124\l|{<s0>T|<s1>F}}"];
	Node0x4538a50:s0 -> Node0x45399c0;
	Node0x4538a50:s1 -> Node0x4539a50;
	Node0x4539a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%124:\l124:                                              \l  %125 = icmp eq i32 %121, 0\l  br i1 %125, label %179, label %166\l|{<s0>T|<s1>F}}"];
	Node0x4539a50:s0 -> Node0x4539c20;
	Node0x4539a50:s1 -> Node0x4539c70;
	Node0x45399c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%126:\l126:                                              \l  %127 = load i8, i8 addrspace(4)* %113, align 1, !tbaa !17\l  %128 = zext i8 %127 to i64\l  %129 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 1\l  %130 = load i8, i8 addrspace(4)* %129, align 1, !tbaa !17\l  %131 = zext i8 %130 to i64\l  %132 = shl nuw nsw i64 %131, 8\l  %133 = or i64 %132, %128\l  %134 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 2\l  %135 = load i8, i8 addrspace(4)* %134, align 1, !tbaa !17\l  %136 = zext i8 %135 to i64\l  %137 = shl nuw nsw i64 %136, 16\l  %138 = or i64 %133, %137\l  %139 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 3\l  %140 = load i8, i8 addrspace(4)* %139, align 1, !tbaa !17\l  %141 = zext i8 %140 to i64\l  %142 = shl nuw nsw i64 %141, 24\l  %143 = or i64 %138, %142\l  %144 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 4\l  %145 = load i8, i8 addrspace(4)* %144, align 1, !tbaa !17\l  %146 = zext i8 %145 to i64\l  %147 = shl nuw nsw i64 %146, 32\l  %148 = or i64 %143, %147\l  %149 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 5\l  %150 = load i8, i8 addrspace(4)* %149, align 1, !tbaa !17\l  %151 = zext i8 %150 to i64\l  %152 = shl nuw nsw i64 %151, 40\l  %153 = or i64 %148, %152\l  %154 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 6\l  %155 = load i8, i8 addrspace(4)* %154, align 1, !tbaa !17\l  %156 = zext i8 %155 to i64\l  %157 = shl nuw nsw i64 %156, 48\l  %158 = or i64 %153, %157\l  %159 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 7\l  %160 = load i8, i8 addrspace(4)* %159, align 1, !tbaa !17\l  %161 = zext i8 %160 to i64\l  %162 = shl nuw i64 %161, 56\l  %163 = or i64 %158, %162\l  %164 = add nsw i32 %121, -8\l  %165 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 8\l  br label %179\l}"];
	Node0x45399c0 -> Node0x4539c20;
	Node0x4539c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%166:\l166:                                              \l  %167 = phi i32 [ %177, %166 ], [ 0, %124 ]\l  %168 = phi i64 [ %176, %166 ], [ 0, %124 ]\l  %169 = zext i32 %167 to i64\l  %170 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 %169\l  %171 = load i8, i8 addrspace(4)* %170, align 1, !tbaa !17\l  %172 = zext i8 %171 to i64\l  %173 = shl i32 %167, 3\l  %174 = zext i32 %173 to i64\l  %175 = shl nuw i64 %172, %174\l  %176 = or i64 %175, %168\l  %177 = add nuw nsw i32 %167, 1\l  %178 = icmp eq i32 %177, %121\l  br i1 %178, label %179, label %166, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x4539c70:s0 -> Node0x4539c20;
	Node0x4539c70:s1 -> Node0x4539c70;
	Node0x4539c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%179:\l179:                                              \l  %180 = phi i8 addrspace(4)* [ %165, %126 ], [ %113, %124 ], [ %113, %166 ]\l  %181 = phi i32 [ %164, %126 ], [ 0, %124 ], [ 0, %166 ]\l  %182 = phi i64 [ %163, %126 ], [ 0, %124 ], [ %176, %166 ]\l  %183 = icmp ugt i32 %181, 7\l  br i1 %183, label %186, label %184\l|{<s0>T|<s1>F}}"];
	Node0x4539c20:s0 -> Node0x453cb10;
	Node0x4539c20:s1 -> Node0x453cb60;
	Node0x453cb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%184:\l184:                                              \l  %185 = icmp eq i32 %181, 0\l  br i1 %185, label %239, label %226\l|{<s0>T|<s1>F}}"];
	Node0x453cb60:s0 -> Node0x453cd30;
	Node0x453cb60:s1 -> Node0x453cd80;
	Node0x453cb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%186:\l186:                                              \l  %187 = load i8, i8 addrspace(4)* %180, align 1, !tbaa !17\l  %188 = zext i8 %187 to i64\l  %189 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 1\l  %190 = load i8, i8 addrspace(4)* %189, align 1, !tbaa !17\l  %191 = zext i8 %190 to i64\l  %192 = shl nuw nsw i64 %191, 8\l  %193 = or i64 %192, %188\l  %194 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 2\l  %195 = load i8, i8 addrspace(4)* %194, align 1, !tbaa !17\l  %196 = zext i8 %195 to i64\l  %197 = shl nuw nsw i64 %196, 16\l  %198 = or i64 %193, %197\l  %199 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 3\l  %200 = load i8, i8 addrspace(4)* %199, align 1, !tbaa !17\l  %201 = zext i8 %200 to i64\l  %202 = shl nuw nsw i64 %201, 24\l  %203 = or i64 %198, %202\l  %204 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 4\l  %205 = load i8, i8 addrspace(4)* %204, align 1, !tbaa !17\l  %206 = zext i8 %205 to i64\l  %207 = shl nuw nsw i64 %206, 32\l  %208 = or i64 %203, %207\l  %209 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 5\l  %210 = load i8, i8 addrspace(4)* %209, align 1, !tbaa !17\l  %211 = zext i8 %210 to i64\l  %212 = shl nuw nsw i64 %211, 40\l  %213 = or i64 %208, %212\l  %214 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 6\l  %215 = load i8, i8 addrspace(4)* %214, align 1, !tbaa !17\l  %216 = zext i8 %215 to i64\l  %217 = shl nuw nsw i64 %216, 48\l  %218 = or i64 %213, %217\l  %219 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 7\l  %220 = load i8, i8 addrspace(4)* %219, align 1, !tbaa !17\l  %221 = zext i8 %220 to i64\l  %222 = shl nuw i64 %221, 56\l  %223 = or i64 %218, %222\l  %224 = add nsw i32 %181, -8\l  %225 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 8\l  br label %239\l}"];
	Node0x453cb10 -> Node0x453cd30;
	Node0x453cd80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%226:\l226:                                              \l  %227 = phi i32 [ %237, %226 ], [ 0, %184 ]\l  %228 = phi i64 [ %236, %226 ], [ 0, %184 ]\l  %229 = zext i32 %227 to i64\l  %230 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 %229\l  %231 = load i8, i8 addrspace(4)* %230, align 1, !tbaa !17\l  %232 = zext i8 %231 to i64\l  %233 = shl i32 %227, 3\l  %234 = zext i32 %233 to i64\l  %235 = shl nuw i64 %232, %234\l  %236 = or i64 %235, %228\l  %237 = add nuw nsw i32 %227, 1\l  %238 = icmp eq i32 %237, %181\l  br i1 %238, label %239, label %226\l|{<s0>T|<s1>F}}"];
	Node0x453cd80:s0 -> Node0x453cd30;
	Node0x453cd80:s1 -> Node0x453cd80;
	Node0x453cd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%239:\l239:                                              \l  %240 = phi i8 addrspace(4)* [ %225, %186 ], [ %180, %184 ], [ %180, %226 ]\l  %241 = phi i32 [ %224, %186 ], [ 0, %184 ], [ 0, %226 ]\l  %242 = phi i64 [ %223, %186 ], [ 0, %184 ], [ %236, %226 ]\l  %243 = icmp ugt i32 %241, 7\l  br i1 %243, label %246, label %244\l|{<s0>T|<s1>F}}"];
	Node0x453cd30:s0 -> Node0x453ee10;
	Node0x453cd30:s1 -> Node0x453ee60;
	Node0x453ee60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%244:\l244:                                              \l  %245 = icmp eq i32 %241, 0\l  br i1 %245, label %299, label %286\l|{<s0>T|<s1>F}}"];
	Node0x453ee60:s0 -> Node0x453eff0;
	Node0x453ee60:s1 -> Node0x453f040;
	Node0x453ee10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%246:\l246:                                              \l  %247 = load i8, i8 addrspace(4)* %240, align 1, !tbaa !17\l  %248 = zext i8 %247 to i64\l  %249 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 1\l  %250 = load i8, i8 addrspace(4)* %249, align 1, !tbaa !17\l  %251 = zext i8 %250 to i64\l  %252 = shl nuw nsw i64 %251, 8\l  %253 = or i64 %252, %248\l  %254 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 2\l  %255 = load i8, i8 addrspace(4)* %254, align 1, !tbaa !17\l  %256 = zext i8 %255 to i64\l  %257 = shl nuw nsw i64 %256, 16\l  %258 = or i64 %253, %257\l  %259 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 3\l  %260 = load i8, i8 addrspace(4)* %259, align 1, !tbaa !17\l  %261 = zext i8 %260 to i64\l  %262 = shl nuw nsw i64 %261, 24\l  %263 = or i64 %258, %262\l  %264 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 4\l  %265 = load i8, i8 addrspace(4)* %264, align 1, !tbaa !17\l  %266 = zext i8 %265 to i64\l  %267 = shl nuw nsw i64 %266, 32\l  %268 = or i64 %263, %267\l  %269 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 5\l  %270 = load i8, i8 addrspace(4)* %269, align 1, !tbaa !17\l  %271 = zext i8 %270 to i64\l  %272 = shl nuw nsw i64 %271, 40\l  %273 = or i64 %268, %272\l  %274 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 6\l  %275 = load i8, i8 addrspace(4)* %274, align 1, !tbaa !17\l  %276 = zext i8 %275 to i64\l  %277 = shl nuw nsw i64 %276, 48\l  %278 = or i64 %273, %277\l  %279 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 7\l  %280 = load i8, i8 addrspace(4)* %279, align 1, !tbaa !17\l  %281 = zext i8 %280 to i64\l  %282 = shl nuw i64 %281, 56\l  %283 = or i64 %278, %282\l  %284 = add nsw i32 %241, -8\l  %285 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 8\l  br label %299\l}"];
	Node0x453ee10 -> Node0x453eff0;
	Node0x453f040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%286:\l286:                                              \l  %287 = phi i32 [ %297, %286 ], [ 0, %244 ]\l  %288 = phi i64 [ %296, %286 ], [ 0, %244 ]\l  %289 = zext i32 %287 to i64\l  %290 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 %289\l  %291 = load i8, i8 addrspace(4)* %290, align 1, !tbaa !17\l  %292 = zext i8 %291 to i64\l  %293 = shl i32 %287, 3\l  %294 = zext i32 %293 to i64\l  %295 = shl nuw i64 %292, %294\l  %296 = or i64 %295, %288\l  %297 = add nuw nsw i32 %287, 1\l  %298 = icmp eq i32 %297, %241\l  br i1 %298, label %299, label %286\l|{<s0>T|<s1>F}}"];
	Node0x453f040:s0 -> Node0x453eff0;
	Node0x453f040:s1 -> Node0x453f040;
	Node0x453eff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%299:\l299:                                              \l  %300 = phi i8 addrspace(4)* [ %285, %246 ], [ %240, %244 ], [ %240, %286 ]\l  %301 = phi i32 [ %284, %246 ], [ 0, %244 ], [ 0, %286 ]\l  %302 = phi i64 [ %283, %246 ], [ 0, %244 ], [ %296, %286 ]\l  %303 = icmp ugt i32 %301, 7\l  br i1 %303, label %306, label %304\l|{<s0>T|<s1>F}}"];
	Node0x453eff0:s0 -> Node0x4541890;
	Node0x453eff0:s1 -> Node0x45418e0;
	Node0x45418e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%304:\l304:                                              \l  %305 = icmp eq i32 %301, 0\l  br i1 %305, label %359, label %346\l|{<s0>T|<s1>F}}"];
	Node0x45418e0:s0 -> Node0x4541a70;
	Node0x45418e0:s1 -> Node0x4541ac0;
	Node0x4541890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%306:\l306:                                              \l  %307 = load i8, i8 addrspace(4)* %300, align 1, !tbaa !17\l  %308 = zext i8 %307 to i64\l  %309 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 1\l  %310 = load i8, i8 addrspace(4)* %309, align 1, !tbaa !17\l  %311 = zext i8 %310 to i64\l  %312 = shl nuw nsw i64 %311, 8\l  %313 = or i64 %312, %308\l  %314 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 2\l  %315 = load i8, i8 addrspace(4)* %314, align 1, !tbaa !17\l  %316 = zext i8 %315 to i64\l  %317 = shl nuw nsw i64 %316, 16\l  %318 = or i64 %313, %317\l  %319 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 3\l  %320 = load i8, i8 addrspace(4)* %319, align 1, !tbaa !17\l  %321 = zext i8 %320 to i64\l  %322 = shl nuw nsw i64 %321, 24\l  %323 = or i64 %318, %322\l  %324 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 4\l  %325 = load i8, i8 addrspace(4)* %324, align 1, !tbaa !17\l  %326 = zext i8 %325 to i64\l  %327 = shl nuw nsw i64 %326, 32\l  %328 = or i64 %323, %327\l  %329 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 5\l  %330 = load i8, i8 addrspace(4)* %329, align 1, !tbaa !17\l  %331 = zext i8 %330 to i64\l  %332 = shl nuw nsw i64 %331, 40\l  %333 = or i64 %328, %332\l  %334 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 6\l  %335 = load i8, i8 addrspace(4)* %334, align 1, !tbaa !17\l  %336 = zext i8 %335 to i64\l  %337 = shl nuw nsw i64 %336, 48\l  %338 = or i64 %333, %337\l  %339 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 7\l  %340 = load i8, i8 addrspace(4)* %339, align 1, !tbaa !17\l  %341 = zext i8 %340 to i64\l  %342 = shl nuw i64 %341, 56\l  %343 = or i64 %338, %342\l  %344 = add nsw i32 %301, -8\l  %345 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 8\l  br label %359\l}"];
	Node0x4541890 -> Node0x4541a70;
	Node0x4541ac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%346:\l346:                                              \l  %347 = phi i32 [ %357, %346 ], [ 0, %304 ]\l  %348 = phi i64 [ %356, %346 ], [ 0, %304 ]\l  %349 = zext i32 %347 to i64\l  %350 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 %349\l  %351 = load i8, i8 addrspace(4)* %350, align 1, !tbaa !17\l  %352 = zext i8 %351 to i64\l  %353 = shl i32 %347, 3\l  %354 = zext i32 %353 to i64\l  %355 = shl nuw i64 %352, %354\l  %356 = or i64 %355, %348\l  %357 = add nuw nsw i32 %347, 1\l  %358 = icmp eq i32 %357, %301\l  br i1 %358, label %359, label %346\l|{<s0>T|<s1>F}}"];
	Node0x4541ac0:s0 -> Node0x4541a70;
	Node0x4541ac0:s1 -> Node0x4541ac0;
	Node0x4541a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%359:\l359:                                              \l  %360 = phi i8 addrspace(4)* [ %345, %306 ], [ %300, %304 ], [ %300, %346 ]\l  %361 = phi i32 [ %344, %306 ], [ 0, %304 ], [ 0, %346 ]\l  %362 = phi i64 [ %343, %306 ], [ 0, %304 ], [ %356, %346 ]\l  %363 = icmp ugt i32 %361, 7\l  br i1 %363, label %366, label %364\l|{<s0>T|<s1>F}}"];
	Node0x4541a70:s0 -> Node0x45444e0;
	Node0x4541a70:s1 -> Node0x4544530;
	Node0x4544530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%364:\l364:                                              \l  %365 = icmp eq i32 %361, 0\l  br i1 %365, label %419, label %406\l|{<s0>T|<s1>F}}"];
	Node0x4544530:s0 -> Node0x45446c0;
	Node0x4544530:s1 -> Node0x4544710;
	Node0x45444e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%366:\l366:                                              \l  %367 = load i8, i8 addrspace(4)* %360, align 1, !tbaa !17\l  %368 = zext i8 %367 to i64\l  %369 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 1\l  %370 = load i8, i8 addrspace(4)* %369, align 1, !tbaa !17\l  %371 = zext i8 %370 to i64\l  %372 = shl nuw nsw i64 %371, 8\l  %373 = or i64 %372, %368\l  %374 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 2\l  %375 = load i8, i8 addrspace(4)* %374, align 1, !tbaa !17\l  %376 = zext i8 %375 to i64\l  %377 = shl nuw nsw i64 %376, 16\l  %378 = or i64 %373, %377\l  %379 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 3\l  %380 = load i8, i8 addrspace(4)* %379, align 1, !tbaa !17\l  %381 = zext i8 %380 to i64\l  %382 = shl nuw nsw i64 %381, 24\l  %383 = or i64 %378, %382\l  %384 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 4\l  %385 = load i8, i8 addrspace(4)* %384, align 1, !tbaa !17\l  %386 = zext i8 %385 to i64\l  %387 = shl nuw nsw i64 %386, 32\l  %388 = or i64 %383, %387\l  %389 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 5\l  %390 = load i8, i8 addrspace(4)* %389, align 1, !tbaa !17\l  %391 = zext i8 %390 to i64\l  %392 = shl nuw nsw i64 %391, 40\l  %393 = or i64 %388, %392\l  %394 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 6\l  %395 = load i8, i8 addrspace(4)* %394, align 1, !tbaa !17\l  %396 = zext i8 %395 to i64\l  %397 = shl nuw nsw i64 %396, 48\l  %398 = or i64 %393, %397\l  %399 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 7\l  %400 = load i8, i8 addrspace(4)* %399, align 1, !tbaa !17\l  %401 = zext i8 %400 to i64\l  %402 = shl nuw i64 %401, 56\l  %403 = or i64 %398, %402\l  %404 = add nsw i32 %361, -8\l  %405 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 8\l  br label %419\l}"];
	Node0x45444e0 -> Node0x45446c0;
	Node0x4544710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%406:\l406:                                              \l  %407 = phi i32 [ %417, %406 ], [ 0, %364 ]\l  %408 = phi i64 [ %416, %406 ], [ 0, %364 ]\l  %409 = zext i32 %407 to i64\l  %410 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 %409\l  %411 = load i8, i8 addrspace(4)* %410, align 1, !tbaa !17\l  %412 = zext i8 %411 to i64\l  %413 = shl i32 %407, 3\l  %414 = zext i32 %413 to i64\l  %415 = shl nuw i64 %412, %414\l  %416 = or i64 %415, %408\l  %417 = add nuw nsw i32 %407, 1\l  %418 = icmp eq i32 %417, %361\l  br i1 %418, label %419, label %406\l|{<s0>T|<s1>F}}"];
	Node0x4544710:s0 -> Node0x45446c0;
	Node0x4544710:s1 -> Node0x4544710;
	Node0x45446c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%419:\l419:                                              \l  %420 = phi i8 addrspace(4)* [ %405, %366 ], [ %360, %364 ], [ %360, %406 ]\l  %421 = phi i32 [ %404, %366 ], [ 0, %364 ], [ 0, %406 ]\l  %422 = phi i64 [ %403, %366 ], [ 0, %364 ], [ %416, %406 ]\l  %423 = icmp ugt i32 %421, 7\l  br i1 %423, label %426, label %424\l|{<s0>T|<s1>F}}"];
	Node0x45446c0:s0 -> Node0x4546720;
	Node0x45446c0:s1 -> Node0x4546770;
	Node0x4546770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%424:\l424:                                              \l  %425 = icmp eq i32 %421, 0\l  br i1 %425, label %479, label %466\l|{<s0>T|<s1>F}}"];
	Node0x4546770:s0 -> Node0x4546900;
	Node0x4546770:s1 -> Node0x4546950;
	Node0x4546720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%426:\l426:                                              \l  %427 = load i8, i8 addrspace(4)* %420, align 1, !tbaa !17\l  %428 = zext i8 %427 to i64\l  %429 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 1\l  %430 = load i8, i8 addrspace(4)* %429, align 1, !tbaa !17\l  %431 = zext i8 %430 to i64\l  %432 = shl nuw nsw i64 %431, 8\l  %433 = or i64 %432, %428\l  %434 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 2\l  %435 = load i8, i8 addrspace(4)* %434, align 1, !tbaa !17\l  %436 = zext i8 %435 to i64\l  %437 = shl nuw nsw i64 %436, 16\l  %438 = or i64 %433, %437\l  %439 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 3\l  %440 = load i8, i8 addrspace(4)* %439, align 1, !tbaa !17\l  %441 = zext i8 %440 to i64\l  %442 = shl nuw nsw i64 %441, 24\l  %443 = or i64 %438, %442\l  %444 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 4\l  %445 = load i8, i8 addrspace(4)* %444, align 1, !tbaa !17\l  %446 = zext i8 %445 to i64\l  %447 = shl nuw nsw i64 %446, 32\l  %448 = or i64 %443, %447\l  %449 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 5\l  %450 = load i8, i8 addrspace(4)* %449, align 1, !tbaa !17\l  %451 = zext i8 %450 to i64\l  %452 = shl nuw nsw i64 %451, 40\l  %453 = or i64 %448, %452\l  %454 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 6\l  %455 = load i8, i8 addrspace(4)* %454, align 1, !tbaa !17\l  %456 = zext i8 %455 to i64\l  %457 = shl nuw nsw i64 %456, 48\l  %458 = or i64 %453, %457\l  %459 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 7\l  %460 = load i8, i8 addrspace(4)* %459, align 1, !tbaa !17\l  %461 = zext i8 %460 to i64\l  %462 = shl nuw i64 %461, 56\l  %463 = or i64 %458, %462\l  %464 = add nsw i32 %421, -8\l  %465 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 8\l  br label %479\l}"];
	Node0x4546720 -> Node0x4546900;
	Node0x4546950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%466:\l466:                                              \l  %467 = phi i32 [ %477, %466 ], [ 0, %424 ]\l  %468 = phi i64 [ %476, %466 ], [ 0, %424 ]\l  %469 = zext i32 %467 to i64\l  %470 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 %469\l  %471 = load i8, i8 addrspace(4)* %470, align 1, !tbaa !17\l  %472 = zext i8 %471 to i64\l  %473 = shl i32 %467, 3\l  %474 = zext i32 %473 to i64\l  %475 = shl nuw i64 %472, %474\l  %476 = or i64 %475, %468\l  %477 = add nuw nsw i32 %467, 1\l  %478 = icmp eq i32 %477, %421\l  br i1 %478, label %479, label %466\l|{<s0>T|<s1>F}}"];
	Node0x4546950:s0 -> Node0x4546900;
	Node0x4546950:s1 -> Node0x4546950;
	Node0x4546900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%479:\l479:                                              \l  %480 = phi i8 addrspace(4)* [ %465, %426 ], [ %420, %424 ], [ %420, %466 ]\l  %481 = phi i32 [ %464, %426 ], [ 0, %424 ], [ 0, %466 ]\l  %482 = phi i64 [ %463, %426 ], [ 0, %424 ], [ %476, %466 ]\l  %483 = icmp ugt i32 %481, 7\l  br i1 %483, label %486, label %484\l|{<s0>T|<s1>F}}"];
	Node0x4546900:s0 -> Node0x4548f80;
	Node0x4546900:s1 -> Node0x4548fd0;
	Node0x4548fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%484:\l484:                                              \l  %485 = icmp eq i32 %481, 0\l  br i1 %485, label %537, label %524\l|{<s0>T|<s1>F}}"];
	Node0x4548fd0:s0 -> Node0x4538ef0;
	Node0x4548fd0:s1 -> Node0x4549160;
	Node0x4548f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%486:\l486:                                              \l  %487 = load i8, i8 addrspace(4)* %480, align 1, !tbaa !17\l  %488 = zext i8 %487 to i64\l  %489 = getelementptr inbounds i8, i8 addrspace(4)* %480, i64 1\l  %490 = load i8, i8 addrspace(4)* %489, align 1, !tbaa !17\l  %491 = zext i8 %490 to i64\l  %492 = shl nuw nsw i64 %491, 8\l  %493 = or i64 %492, %488\l  %494 = getelementptr inbounds i8, i8 addrspace(4)* %480, i64 2\l  %495 = load i8, i8 addrspace(4)* %494, align 1, !tbaa !17\l  %496 = zext i8 %495 to i64\l  %497 = shl nuw nsw i64 %496, 16\l  %498 = or i64 %493, %497\l  %499 = getelementptr inbounds i8, i8 addrspace(4)* %480, i64 3\l  %500 = load i8, i8 addrspace(4)* %499, align 1, !tbaa !17\l  %501 = zext i8 %500 to i64\l  %502 = shl nuw nsw i64 %501, 24\l  %503 = or i64 %498, %502\l  %504 = getelementptr inbounds i8, i8 addrspace(4)* %480, i64 4\l  %505 = load i8, i8 addrspace(4)* %504, align 1, !tbaa !17\l  %506 = zext i8 %505 to i64\l  %507 = shl nuw nsw i64 %506, 32\l  %508 = or i64 %503, %507\l  %509 = getelementptr inbounds i8, i8 addrspace(4)* %480, i64 5\l  %510 = load i8, i8 addrspace(4)* %509, align 1, !tbaa !17\l  %511 = zext i8 %510 to i64\l  %512 = shl nuw nsw i64 %511, 40\l  %513 = or i64 %508, %512\l  %514 = getelementptr inbounds i8, i8 addrspace(4)* %480, i64 6\l  %515 = load i8, i8 addrspace(4)* %514, align 1, !tbaa !17\l  %516 = zext i8 %515 to i64\l  %517 = shl nuw nsw i64 %516, 48\l  %518 = or i64 %513, %517\l  %519 = getelementptr inbounds i8, i8 addrspace(4)* %480, i64 7\l  %520 = load i8, i8 addrspace(4)* %519, align 1, !tbaa !17\l  %521 = zext i8 %520 to i64\l  %522 = shl nuw i64 %521, 56\l  %523 = or i64 %518, %522\l  br label %537\l}"];
	Node0x4548f80 -> Node0x4538ef0;
	Node0x4549160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%524:\l524:                                              \l  %525 = phi i32 [ %535, %524 ], [ 0, %484 ]\l  %526 = phi i64 [ %534, %524 ], [ 0, %484 ]\l  %527 = zext i32 %525 to i64\l  %528 = getelementptr inbounds i8, i8 addrspace(4)* %480, i64 %527\l  %529 = load i8, i8 addrspace(4)* %528, align 1, !tbaa !17\l  %530 = zext i8 %529 to i64\l  %531 = shl i32 %525, 3\l  %532 = zext i32 %531 to i64\l  %533 = shl nuw i64 %530, %532\l  %534 = or i64 %533, %526\l  %535 = add nuw nsw i32 %525, 1\l  %536 = icmp eq i32 %535, %481\l  br i1 %536, label %537, label %524\l|{<s0>T|<s1>F}}"];
	Node0x4549160:s0 -> Node0x4538ef0;
	Node0x4549160:s1 -> Node0x4549160;
	Node0x4538ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%537:\l537:                                              \l  %538 = phi i64 [ %523, %486 ], [ 0, %484 ], [ %534, %524 ]\l  %539 = shl nuw nsw i64 %120, 2\l  %540 = add nuw nsw i64 %539, 28\l  %541 = and i64 %540, 480\l  %542 = and i64 %122, -225\l  %543 = or i64 %542, %541\l  %544 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %100, i64 noundef %543, i64 noundef %182, i64 noundef %242, i64 noundef %302,\l... i64 noundef %362, i64 noundef %422, i64 noundef %482, i64 noundef %538) #10\l  %545 = sub i64 %112, %120\l  %546 = getelementptr inbounds i8, i8 addrspace(4)* %113, i64 %120\l  %547 = icmp eq i64 %545, 0\l  br i1 %547, label %548, label %111\l|{<s0>T|<s1>F}}"];
	Node0x4538ef0:s0 -> Node0x4537eb0;
	Node0x4538ef0:s1 -> Node0x4538a50;
	Node0x4537eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%548:\l548:                                              \l  %549 = phi \<2 x i64\> [ %106, %103 ], [ %544, %537 ]\l  %550 = extractelement \<2 x i64\> %549, i64 0\l  %551 = zext i32 %18 to i64\l  %552 = and i64 %550, -225\l  %553 = or i64 %552, 32\l  %554 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %100, i64 noundef %553, i64 noundef %551, i64 noundef 0, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %555 = extractelement \<2 x i64\> %554, i64 0\l  %556 = zext i32 %42 to i64\l  %557 = and i64 %555, -225\l  %558 = or i64 %557, 32\l  %559 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %100, i64 noundef %558, i64 noundef %556, i64 noundef 0, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %560 = extractelement \<2 x i64\> %559, i64 0\l  %561 = zext i32 %94 to i64\l  %562 = and i64 %560, -227\l  %563 = or i64 %562, 34\l  %564 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %100, i64 noundef %563, i64 noundef %561, i64 noundef 0, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %565\l}"];
	Node0x4537eb0 -> Node0x45363b0;
	Node0x45363b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%565:\l565:                                              \l  %566 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %21\l  store i32 %41, i32 addrspace(1)* %566, align 4, !tbaa !7\l  br label %567\l}"];
	Node0x45363b0 -> Node0x45313a0;
	Node0x45313a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%567:\l567:                                              \l  ret void\l}"];
}
