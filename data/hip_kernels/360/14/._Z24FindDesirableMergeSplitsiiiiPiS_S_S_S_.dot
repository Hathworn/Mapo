digraph "CFG for '_Z24FindDesirableMergeSplitsiiiiPiS_S_S_S_' function" {
	label="CFG for '_Z24FindDesirableMergeSplitsiiiiPiS_S_S_S_' function";

	Node0x6383460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = icmp slt i32 %18, %0\l  br i1 %19, label %20, label %86\l|{<s0>T|<s1>F}}"];
	Node0x6383460:s0 -> Node0x6385f90;
	Node0x6383460:s1 -> Node0x6386020;
	Node0x6385f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%20:\l20:                                               \l  %21 = sext i32 %18 to i64\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %21\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %24 = icmp eq i32 %23, 1\l  br i1 %24, label %86, label %25\l|{<s0>T|<s1>F}}"];
	Node0x6385f90:s0 -> Node0x6386020;
	Node0x6385f90:s1 -> Node0x6386b00;
	Node0x6386b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%25:\l25:                                               \l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %21\l  %27 = load i32, i32 addrspace(1)* %26, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %28 = icmp slt i32 %27, %1\l  %29 = icmp sgt i32 %27, %2\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %21\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %32 = add nsw i32 %18, 1\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %36 = icmp slt i32 %31, %35\l  br i1 %36, label %37, label %40\l|{<s0>T|<s1>F}}"];
	Node0x6386b00:s0 -> Node0x63879e0;
	Node0x6386b00:s1 -> Node0x6387a70;
	Node0x63879e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%37:\l37:                                               \l  %38 = shl nsw i32 %1, 1\l  %39 = shl nsw i32 %2, 1\l  br label %43\l}"];
	Node0x63879e0 -> Node0x6387cd0;
	Node0x6387a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%40:\l40:                                               \l  %41 = phi i32 [ -1, %25 ], [ %79, %78 ]\l  %42 = icmp eq i32 %41, -1\l  br i1 %42, label %83, label %84\l|{<s0>T|<s1>F}}"];
	Node0x6387a70:s0 -> Node0x6387f90;
	Node0x6387a70:s1 -> Node0x6388020;
	Node0x6387cd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi float [ 0.000000e+00, %37 ], [ %80, %78 ]\l  %45 = phi i32 [ -1, %37 ], [ %79, %78 ]\l  %46 = phi i32 [ %31, %37 ], [ %81, %78 ]\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %53 = icmp eq i32 %52, 1\l  br i1 %53, label %78, label %54\l|{<s0>T|<s1>F}}"];
	Node0x6387cd0:s0 -> Node0x6387dc0;
	Node0x6387cd0:s1 -> Node0x63892a0;
	Node0x63892a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%54:\l54:                                               \l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %50\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %57 = icmp slt i32 %56, %1\l  %58 = icmp sgt i32 %56, %2\l  %59 = select i1 %57, i1 true, i1 %58\l  %60 = add nsw i32 %56, %27\l  %61 = select i1 %59, i1 true, i1 %28\l  %62 = select i1 %61, i1 true, i1 %29\l  %63 = icmp sgt i32 %60, %38\l  %64 = select i1 %62, i1 %63, i1 false\l  %65 = icmp slt i32 %60, %39\l  %66 = select i1 %64, i1 %65, i1 false\l  br i1 %66, label %67, label %72\l|{<s0>T|<s1>F}}"];
	Node0x63892a0:s0 -> Node0x63877d0;
	Node0x63892a0:s1 -> Node0x6389e30;
	Node0x63877d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%67:\l67:                                               \l  %68 = sub nsw i32 %3, %60\l  %69 = tail call i32 @llvm.abs.i32(i32 %68, i1 true)\l  %70 = sitofp i32 %69 to double\l  %71 = fdiv contract double 1.000000e+00, %70\l  br label %72\l}"];
	Node0x63877d0 -> Node0x6389e30;
	Node0x6389e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%72:\l72:                                               \l  %73 = phi contract double [ %71, %67 ], [ 0.000000e+00, %54 ]\l  %74 = fptrunc double %73 to float\l  %75 = fcmp contract olt float %44, %74\l  %76 = select i1 %75, i32 %49, i32 %45\l  %77 = select i1 %75, float %74, float %44\l  br label %78\l}"];
	Node0x6389e30 -> Node0x6387dc0;
	Node0x6387dc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%78:\l78:                                               \l  %79 = phi i32 [ %76, %72 ], [ %45, %43 ]\l  %80 = phi float [ %77, %72 ], [ %44, %43 ]\l  %81 = add nsw i32 %46, 1\l  %82 = icmp slt i32 %81, %35\l  br i1 %82, label %43, label %40, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x6387dc0:s0 -> Node0x6387cd0;
	Node0x6387dc0:s1 -> Node0x6387a70;
	Node0x6387f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%83:\l83:                                               \l  store i32 1, i32 addrspace(1)* %22, align 4, !tbaa !7\l  br label %84\l}"];
	Node0x6387f90 -> Node0x6388020;
	Node0x6388020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%84:\l84:                                               \l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %21\l  store i32 %41, i32 addrspace(1)* %85, align 4, !tbaa !7\l  br label %86\l}"];
	Node0x6388020 -> Node0x6386020;
	Node0x6386020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%86:\l86:                                               \l  ret void\l}"];
}
