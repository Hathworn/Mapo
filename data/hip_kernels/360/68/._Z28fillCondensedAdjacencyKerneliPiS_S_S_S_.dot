digraph "CFG for '_Z28fillCondensedAdjacencyKerneliPiS_S_S_S_' function" {
	label="CFG for '_Z28fillCondensedAdjacencyKerneliPiS_S_S_S_' function";

	Node0x4afb550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %0\l  br i1 %16, label %17, label %124\l|{<s0>T|<s1>F}}"];
	Node0x4afb550:s0 -> Node0x4afb9a0;
	Node0x4afb550:s1 -> Node0x4afd570;
	Node0x4afb9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%17:\l17:                                               \l  %18 = sext i32 %15 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %21\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %18\l  %25 = load i32, i32 addrspace(1)* %24, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %26 = add nsw i32 %15, 1\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %30 = sub nsw i32 %29, %25\l  %31 = icmp sgt i32 %30, 0\l  br i1 %31, label %32, label %124\l|{<s0>T|<s1>F}}"];
	Node0x4afb9a0:s0 -> Node0x4afec80;
	Node0x4afb9a0:s1 -> Node0x4afd570;
	Node0x4afec80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%32:\l32:                                               \l  %33 = xor i32 %25, -1\l  %34 = add i32 %29, %33\l  %35 = and i32 %30, 7\l  %36 = icmp ult i32 %34, 7\l  br i1 %36, label %108, label %37\l|{<s0>T|<s1>F}}"];
	Node0x4afec80:s0 -> Node0x4aff180;
	Node0x4afec80:s1 -> Node0x4aff1d0;
	Node0x4aff1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%37:\l37:                                               \l  %38 = and i32 %30, -8\l  br label %39\l}"];
	Node0x4aff1d0 -> Node0x4aff3d0;
	Node0x4aff3d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%39:\l39:                                               \l  %40 = phi i32 [ 0, %37 ], [ %105, %39 ]\l  %41 = phi i32 [ 0, %37 ], [ %106, %39 ]\l  %42 = add nsw i32 %40, %23\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %43\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !7\l  %46 = add nsw i32 %40, %25\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %47\l  store i32 %45, i32 addrspace(1)* %48, align 4, !tbaa !7\l  %49 = or i32 %40, 1\l  %50 = add nsw i32 %49, %23\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !7\l  %54 = add nsw i32 %49, %25\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %55\l  store i32 %53, i32 addrspace(1)* %56, align 4, !tbaa !7\l  %57 = or i32 %40, 2\l  %58 = add nsw i32 %57, %23\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !7\l  %62 = add nsw i32 %57, %25\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %63\l  store i32 %61, i32 addrspace(1)* %64, align 4, !tbaa !7\l  %65 = or i32 %40, 3\l  %66 = add nsw i32 %65, %23\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !7\l  %70 = add nsw i32 %65, %25\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %71\l  store i32 %69, i32 addrspace(1)* %72, align 4, !tbaa !7\l  %73 = or i32 %40, 4\l  %74 = add nsw i32 %73, %23\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %75\l  %77 = load i32, i32 addrspace(1)* %76, align 4, !tbaa !7\l  %78 = add nsw i32 %73, %25\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %79\l  store i32 %77, i32 addrspace(1)* %80, align 4, !tbaa !7\l  %81 = or i32 %40, 5\l  %82 = add nsw i32 %81, %23\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !7\l  %86 = add nsw i32 %81, %25\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %87\l  store i32 %85, i32 addrspace(1)* %88, align 4, !tbaa !7\l  %89 = or i32 %40, 6\l  %90 = add nsw i32 %89, %23\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %91\l  %93 = load i32, i32 addrspace(1)* %92, align 4, !tbaa !7\l  %94 = add nsw i32 %89, %25\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %95\l  store i32 %93, i32 addrspace(1)* %96, align 4, !tbaa !7\l  %97 = or i32 %40, 7\l  %98 = add nsw i32 %97, %23\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %99\l  %101 = load i32, i32 addrspace(1)* %100, align 4, !tbaa !7\l  %102 = add nsw i32 %97, %25\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %103\l  store i32 %101, i32 addrspace(1)* %104, align 4, !tbaa !7\l  %105 = add nuw nsw i32 %40, 8\l  %106 = add i32 %41, 8\l  %107 = icmp eq i32 %106, %38\l  br i1 %107, label %108, label %39, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4aff3d0:s0 -> Node0x4aff180;
	Node0x4aff3d0:s1 -> Node0x4aff3d0;
	Node0x4aff180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%108:\l108:                                              \l  %109 = phi i32 [ 0, %32 ], [ %105, %39 ]\l  %110 = icmp eq i32 %35, 0\l  br i1 %110, label %124, label %111\l|{<s0>T|<s1>F}}"];
	Node0x4aff180:s0 -> Node0x4afd570;
	Node0x4aff180:s1 -> Node0x4b02400;
	Node0x4b02400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  %112 = phi i32 [ %121, %111 ], [ %109, %108 ]\l  %113 = phi i32 [ %122, %111 ], [ 0, %108 ]\l  %114 = add nsw i32 %112, %23\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %115\l  %117 = load i32, i32 addrspace(1)* %116, align 4, !tbaa !7\l  %118 = add nsw i32 %112, %25\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %119\l  store i32 %117, i32 addrspace(1)* %120, align 4, !tbaa !7\l  %121 = add nuw nsw i32 %112, 1\l  %122 = add i32 %113, 1\l  %123 = icmp eq i32 %122, %35\l  br i1 %123, label %124, label %111, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4b02400:s0 -> Node0x4afd570;
	Node0x4b02400:s1 -> Node0x4b02400;
	Node0x4afd570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%124:\l124:                                              \l  ret void\l}"];
}
