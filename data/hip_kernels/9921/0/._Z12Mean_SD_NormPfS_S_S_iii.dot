digraph "CFG for '_Z12Mean_SD_NormPfS_S_S_iii' function" {
	label="CFG for '_Z12Mean_SD_NormPfS_S_S_iii' function";

	Node0x5592100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = mul nsw i32 %24, %4\l  %26 = add nsw i32 %16, %25\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %27 = zext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %30 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @mean,\l... i32 0, i32 %23\l  store float %29, float addrspace(3)* %30, align 4, !tbaa !7\l  %31 = icmp sgt i32 %4, 0\l  br i1 %31, label %32, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5592100:s0 -> Node0x55968b0;
	Node0x5592100:s1 -> Node0x5596940;
	Node0x55968b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%32:\l32:                                               \l  %33 = add i32 %23, %5\l  %34 = mul nsw i32 %4, %4\l  br label %47\l}"];
	Node0x55968b0 -> Node0x5593fb0;
	Node0x5596940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%35:\l35:                                               \l  %36 = icmp eq i32 %23, 0\l  br i1 %36, label %39, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5596940:s0 -> Node0x5596e20;
	Node0x5596940:s1 -> Node0x5596e70;
	Node0x5596e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%37:\l37:                                               \l  %38 = zext i32 %8 to i64\l  br label %124\l}"];
	Node0x5596e70 -> Node0x5597020;
	Node0x5596e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%39:\l39:                                               \l  %40 = load float, float addrspace(3)*\l... @_ZZ12Mean_SD_NormPfS_S_S_iiiE7meansum, align 4, !tbaa !7\l  %41 = icmp sgt i32 %5, 0\l  br i1 %41, label %42, label %80\l|{<s0>T|<s1>F}}"];
	Node0x5596e20:s0 -> Node0x5597130;
	Node0x5596e20:s1 -> Node0x5597280;
	Node0x5597130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%42:\l42:                                               \l  %43 = and i32 %5, 7\l  %44 = icmp ult i32 %5, 8\l  br i1 %44, label %63, label %45\l|{<s0>T|<s1>F}}"];
	Node0x5597130:s0 -> Node0x55974d0;
	Node0x5597130:s1 -> Node0x5597520;
	Node0x5597520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%45:\l45:                                               \l  %46 = and i32 %5, -8\l  br label %86\l}"];
	Node0x5597520 -> Node0x5597720;
	Node0x5593fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi float [ %29, %32 ], [ %60, %59 ]\l  %49 = phi i32 [ 0, %32 ], [ %61, %59 ]\l  %50 = add i32 %33, %49\l  %51 = mul i32 %50, %4\l  %52 = add i32 %51, %8\l  %53 = icmp slt i32 %52, %34\l  br i1 %53, label %54, label %59\l|{<s0>T|<s1>F}}"];
	Node0x5593fb0:s0 -> Node0x5597cb0;
	Node0x5593fb0:s1 -> Node0x5597810;
	Node0x5597cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%54:\l54:                                               \l  %55 = sext i32 %51 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %58 = fadd contract float %57, %48\l  store float %58, float addrspace(3)* %30, align 4, !tbaa !7\l  br label %59\l}"];
	Node0x5597cb0 -> Node0x5597810;
	Node0x5597810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi float [ %48, %47 ], [ %58, %54 ]\l  %61 = add nsw i32 %49, %5\l  %62 = icmp slt i32 %61, %4\l  br i1 %62, label %47, label %35, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5597810:s0 -> Node0x5593fb0;
	Node0x5597810:s1 -> Node0x5596940;
	Node0x55974d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%63:\l63:                                               \l  %64 = phi float [ undef, %42 ], [ %120, %86 ]\l  %65 = phi i32 [ 0, %42 ], [ %121, %86 ]\l  %66 = phi float [ %40, %42 ], [ %120, %86 ]\l  %67 = icmp eq i32 %43, 0\l  br i1 %67, label %78, label %68\l|{<s0>T|<s1>F}}"];
	Node0x55974d0:s0 -> Node0x5596c20;
	Node0x55974d0:s1 -> Node0x55989c0;
	Node0x55989c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%68:\l68:                                               \l  %69 = phi i32 [ %75, %68 ], [ %65, %63 ]\l  %70 = phi float [ %74, %68 ], [ %66, %63 ]\l  %71 = phi i32 [ %76, %68 ], [ 0, %63 ]\l  %72 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @mean,\l... i32 0, i32 %69\l  %73 = load float, float addrspace(3)* %72, align 4, !tbaa !7\l  %74 = fadd contract float %73, %70\l  %75 = add nuw nsw i32 %69, 1\l  %76 = add i32 %71, 1\l  %77 = icmp eq i32 %76, %43\l  br i1 %77, label %78, label %68, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55989c0:s0 -> Node0x5596c20;
	Node0x55989c0:s1 -> Node0x55989c0;
	Node0x5596c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%78:\l78:                                               \l  %79 = phi float [ %64, %63 ], [ %74, %68 ]\l  store float %79, float addrspace(3)* @_ZZ12Mean_SD_NormPfS_S_S_iiiE7meansum,\l... align 4, !tbaa !7\l  br label %80\l}"];
	Node0x5596c20 -> Node0x5597280;
	Node0x5597280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%80:\l80:                                               \l  %81 = phi float [ %79, %78 ], [ %40, %39 ]\l  %82 = sitofp i32 %4 to float\l  %83 = fdiv contract float %81, %82\l  %84 = zext i32 %8 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %2, i64 %84\l  store float %83, float addrspace(1)* %85, align 4, !tbaa !7\l  br label %124\l}"];
	Node0x5597280 -> Node0x5597020;
	Node0x5597720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%86:\l86:                                               \l  %87 = phi i32 [ 0, %45 ], [ %121, %86 ]\l  %88 = phi float [ %40, %45 ], [ %120, %86 ]\l  %89 = phi i32 [ 0, %45 ], [ %122, %86 ]\l  %90 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @mean,\l... i32 0, i32 %87\l  %91 = load float, float addrspace(3)* %90, align 4, !tbaa !7\l  %92 = fadd contract float %91, %88\l  %93 = or i32 %87, 1\l  %94 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @mean,\l... i32 0, i32 %93\l  %95 = load float, float addrspace(3)* %94, align 4, !tbaa !7\l  %96 = fadd contract float %95, %92\l  %97 = or i32 %87, 2\l  %98 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @mean,\l... i32 0, i32 %97\l  %99 = load float, float addrspace(3)* %98, align 4, !tbaa !7\l  %100 = fadd contract float %99, %96\l  %101 = or i32 %87, 3\l  %102 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @mean,\l... i32 0, i32 %101\l  %103 = load float, float addrspace(3)* %102, align 4, !tbaa !7\l  %104 = fadd contract float %103, %100\l  %105 = or i32 %87, 4\l  %106 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @mean,\l... i32 0, i32 %105\l  %107 = load float, float addrspace(3)* %106, align 4, !tbaa !7\l  %108 = fadd contract float %107, %104\l  %109 = or i32 %87, 5\l  %110 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @mean,\l... i32 0, i32 %109\l  %111 = load float, float addrspace(3)* %110, align 4, !tbaa !7\l  %112 = fadd contract float %111, %108\l  %113 = or i32 %87, 6\l  %114 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @mean,\l... i32 0, i32 %113\l  %115 = load float, float addrspace(3)* %114, align 4, !tbaa !7\l  %116 = fadd contract float %115, %112\l  %117 = or i32 %87, 7\l  %118 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @mean,\l... i32 0, i32 %117\l  %119 = load float, float addrspace(3)* %118, align 4, !tbaa !7\l  %120 = fadd contract float %119, %116\l  %121 = add nuw nsw i32 %87, 8\l  %122 = add i32 %89, 8\l  %123 = icmp eq i32 %122, %46\l  br i1 %123, label %63, label %86, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5597720:s0 -> Node0x55974d0;
	Node0x5597720:s1 -> Node0x5597720;
	Node0x5597020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%124:\l124:                                              \l  %125 = phi i64 [ %38, %37 ], [ %84, %80 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %126 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %127 = getelementptr inbounds float, float addrspace(1)* %2, i64 %125\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !7\l  %129 = fsub contract float %126, %128\l  %130 = tail call float @llvm.fabs.f32(float %129)\l  %131 = tail call float @llvm.amdgcn.frexp.mant.f32(float %130)\l  %132 = fcmp olt float %131, 0x3FE5555560000000\l  %133 = zext i1 %132 to i32\l  %134 = tail call float @llvm.amdgcn.ldexp.f32(float %131, i32 %133)\l  %135 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %130)\l  %136 = sub nsw i32 %135, %133\l  %137 = fadd float %134, -1.000000e+00\l  %138 = fadd float %134, 1.000000e+00\l  %139 = fadd float %138, -1.000000e+00\l  %140 = fsub float %134, %139\l  %141 = tail call float @llvm.amdgcn.rcp.f32(float %138)\l  %142 = fmul float %137, %141\l  %143 = fmul float %138, %142\l  %144 = fneg float %143\l  %145 = tail call float @llvm.fma.f32(float %142, float %138, float %144)\l  %146 = tail call float @llvm.fma.f32(float %142, float %140, float %145)\l  %147 = fadd float %143, %146\l  %148 = fsub float %147, %143\l  %149 = fsub float %146, %148\l  %150 = fsub float %137, %147\l  %151 = fsub float %137, %150\l  %152 = fsub float %151, %147\l  %153 = fsub float %152, %149\l  %154 = fadd float %150, %153\l  %155 = fmul float %141, %154\l  %156 = fadd float %142, %155\l  %157 = fsub float %156, %142\l  %158 = fsub float %155, %157\l  %159 = fmul float %156, %156\l  %160 = fneg float %159\l  %161 = tail call float @llvm.fma.f32(float %156, float %156, float %160)\l  %162 = fmul float %158, 2.000000e+00\l  %163 = tail call float @llvm.fma.f32(float %156, float %162, float %161)\l  %164 = fadd float %159, %163\l  %165 = fsub float %164, %159\l  %166 = fsub float %163, %165\l  %167 = tail call float @llvm.fmuladd.f32(float %164, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %168 = tail call float @llvm.fmuladd.f32(float %164, float %167, float\l... 0x3FD999BDE0000000)\l  %169 = sitofp i32 %136 to float\l  %170 = fmul float %169, 0x3FE62E4300000000\l  %171 = fneg float %170\l  %172 = tail call float @llvm.fma.f32(float %169, float 0x3FE62E4300000000,\l... float %171)\l  %173 = tail call float @llvm.fma.f32(float %169, float 0xBE205C6100000000,\l... float %172)\l  %174 = fadd float %170, %173\l  %175 = fsub float %174, %170\l  %176 = fsub float %173, %175\l  %177 = tail call float @llvm.amdgcn.ldexp.f32(float %156, i32 1)\l  %178 = fmul float %156, %164\l  %179 = fneg float %178\l  %180 = tail call float @llvm.fma.f32(float %164, float %156, float %179)\l  %181 = tail call float @llvm.fma.f32(float %164, float %158, float %180)\l  %182 = tail call float @llvm.fma.f32(float %166, float %156, float %181)\l  %183 = fadd float %178, %182\l  %184 = fsub float %183, %178\l  %185 = fsub float %182, %184\l  %186 = fmul float %164, %168\l  %187 = fneg float %186\l  %188 = tail call float @llvm.fma.f32(float %164, float %168, float %187)\l  %189 = tail call float @llvm.fma.f32(float %166, float %168, float %188)\l  %190 = fadd float %186, %189\l  %191 = fsub float %190, %186\l  %192 = fsub float %189, %191\l  %193 = fadd float %190, 0x3FE5555540000000\l  %194 = fadd float %193, 0xBFE5555540000000\l  %195 = fsub float %190, %194\l  %196 = fadd float %192, 0x3E2E720200000000\l  %197 = fadd float %196, %195\l  %198 = fadd float %193, %197\l  %199 = fsub float %198, %193\l  %200 = fsub float %197, %199\l  %201 = fmul float %183, %198\l  %202 = fneg float %201\l  %203 = tail call float @llvm.fma.f32(float %183, float %198, float %202)\l  %204 = tail call float @llvm.fma.f32(float %183, float %200, float %203)\l  %205 = tail call float @llvm.fma.f32(float %185, float %198, float %204)\l  %206 = tail call float @llvm.amdgcn.ldexp.f32(float %158, i32 1)\l  %207 = fadd float %201, %205\l  %208 = fsub float %207, %201\l  %209 = fsub float %205, %208\l  %210 = fadd float %177, %207\l  %211 = fsub float %210, %177\l  %212 = fsub float %207, %211\l  %213 = fadd float %206, %209\l  %214 = fadd float %213, %212\l  %215 = fadd float %210, %214\l  %216 = fsub float %215, %210\l  %217 = fsub float %214, %216\l  %218 = fadd float %174, %215\l  %219 = fsub float %218, %174\l  %220 = fsub float %218, %219\l  %221 = fsub float %174, %220\l  %222 = fsub float %215, %219\l  %223 = fadd float %222, %221\l  %224 = fadd float %176, %217\l  %225 = fsub float %224, %176\l  %226 = fsub float %224, %225\l  %227 = fsub float %176, %226\l  %228 = fsub float %217, %225\l  %229 = fadd float %228, %227\l  %230 = fadd float %224, %223\l  %231 = fadd float %218, %230\l  %232 = fsub float %231, %218\l  %233 = fsub float %230, %232\l  %234 = fadd float %229, %233\l  %235 = fadd float %231, %234\l  %236 = fsub float %235, %231\l  %237 = fsub float %234, %236\l  %238 = fmul float %235, 2.000000e+00\l  %239 = fneg float %238\l  %240 = tail call float @llvm.fma.f32(float %235, float 2.000000e+00, float\l... %239)\l  %241 = tail call float @llvm.fma.f32(float %237, float 2.000000e+00, float\l... %240)\l  %242 = fadd float %238, %241\l  %243 = fsub float %242, %238\l  %244 = fsub float %241, %243\l  %245 = tail call float @llvm.fabs.f32(float %238) #4\l  %246 = fcmp oeq float %245, 0x7FF0000000000000\l  %247 = select i1 %246, float %238, float %242\l  %248 = tail call float @llvm.fabs.f32(float %247) #4\l  %249 = fcmp oeq float %248, 0x7FF0000000000000\l  %250 = select i1 %249, float 0.000000e+00, float %244\l  %251 = fcmp oeq float %247, 0x40562E4300000000\l  %252 = select i1 %251, float 0x3EE0000000000000, float 0.000000e+00\l  %253 = fsub float %247, %252\l  %254 = fadd float %252, %250\l  %255 = fmul float %253, 0x3FF7154760000000\l  %256 = tail call float @llvm.rint.f32(float %255)\l  %257 = fcmp ogt float %253, 0x40562E4300000000\l  %258 = fcmp olt float %253, 0xC059D1DA00000000\l  %259 = fneg float %255\l  %260 = tail call float @llvm.fma.f32(float %253, float 0x3FF7154760000000,\l... float %259)\l  %261 = tail call float @llvm.fma.f32(float %253, float 0x3E54AE0BE0000000,\l... float %260)\l  %262 = fsub float %255, %256\l  %263 = fadd float %261, %262\l  %264 = tail call float @llvm.exp2.f32(float %263)\l  %265 = fptosi float %256 to i32\l  %266 = tail call float @llvm.amdgcn.ldexp.f32(float %264, i32 %265)\l  %267 = select i1 %258, float 0.000000e+00, float %266\l  %268 = select i1 %257, float 0x7FF0000000000000, float %267\l  %269 = tail call float @llvm.fma.f32(float %268, float %254, float %268)\l  %270 = tail call float @llvm.fabs.f32(float %268) #4\l  %271 = fcmp oeq float %270, 0x7FF0000000000000\l  %272 = select i1 %271, float %268, float %269\l  %273 = tail call float @llvm.fabs.f32(float %272)\l  %274 = fcmp oeq float %130, 0x7FF0000000000000\l  %275 = fcmp oeq float %129, 0.000000e+00\l  %276 = select i1 %274, float 0x7FF0000000000000, float %273\l  %277 = select i1 %275, float 0.000000e+00, float %276\l  %278 = fcmp uno float %129, 0.000000e+00\l  %279 = select i1 %278, float 0x7FF8000000000000, float %277\l  %280 = fcmp oeq float %129, 1.000000e+00\l  %281 = select i1 %280, float 1.000000e+00, float %279\l  %282 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sd,\l... i32 0, i32 %23\l  store float %281, float addrspace(3)* %282, align 4, !tbaa !7\l  br i1 %31, label %283, label %286\l|{<s0>T|<s1>F}}"];
	Node0x5597020:s0 -> Node0x55a42c0;
	Node0x5597020:s1 -> Node0x55a4350;
	Node0x55a42c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%283:\l283:                                              \l  %284 = add i32 %23, %5\l  %285 = mul nsw i32 %4, %4\l  br label %287\l}"];
	Node0x55a42c0 -> Node0x55a45b0;
	Node0x55a4350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%286:\l286:                                              \l  br i1 %36, label %455, label %520\l|{<s0>T|<s1>F}}"];
	Node0x55a4350:s0 -> Node0x55a4670;
	Node0x55a4350:s1 -> Node0x55a46c0;
	Node0x55a45b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%287:\l287:                                              \l  %288 = phi i32 [ 0, %283 ], [ %453, %452 ]\l  %289 = add i32 %284, %288\l  %290 = mul i32 %289, %4\l  %291 = add i32 %290, %8\l  %292 = icmp slt i32 %291, %285\l  br i1 %292, label %293, label %452\l|{<s0>T|<s1>F}}"];
	Node0x55a45b0:s0 -> Node0x55a4b80;
	Node0x55a45b0:s1 -> Node0x55a4800;
	Node0x55a4b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%293:\l293:                                              \l  %294 = sext i32 %290 to i64\l  %295 = getelementptr inbounds float, float addrspace(1)* %0, i64 %294\l  %296 = load float, float addrspace(1)* %295, align 4, !tbaa !7\l  %297 = fsub contract float %296, %128\l  %298 = tail call float @llvm.fabs.f32(float %297)\l  %299 = tail call float @llvm.amdgcn.frexp.mant.f32(float %298)\l  %300 = fcmp olt float %299, 0x3FE5555560000000\l  %301 = zext i1 %300 to i32\l  %302 = tail call float @llvm.amdgcn.ldexp.f32(float %299, i32 %301)\l  %303 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %298)\l  %304 = sub nsw i32 %303, %301\l  %305 = fadd float %302, -1.000000e+00\l  %306 = fadd float %302, 1.000000e+00\l  %307 = fadd float %306, -1.000000e+00\l  %308 = fsub float %302, %307\l  %309 = tail call float @llvm.amdgcn.rcp.f32(float %306)\l  %310 = fmul float %305, %309\l  %311 = fmul float %306, %310\l  %312 = fneg float %311\l  %313 = tail call float @llvm.fma.f32(float %310, float %306, float %312)\l  %314 = tail call float @llvm.fma.f32(float %310, float %308, float %313)\l  %315 = fadd float %311, %314\l  %316 = fsub float %315, %311\l  %317 = fsub float %314, %316\l  %318 = fsub float %305, %315\l  %319 = fsub float %305, %318\l  %320 = fsub float %319, %315\l  %321 = fsub float %320, %317\l  %322 = fadd float %318, %321\l  %323 = fmul float %309, %322\l  %324 = fadd float %310, %323\l  %325 = fsub float %324, %310\l  %326 = fsub float %323, %325\l  %327 = fmul float %324, %324\l  %328 = fneg float %327\l  %329 = tail call float @llvm.fma.f32(float %324, float %324, float %328)\l  %330 = fmul float %326, 2.000000e+00\l  %331 = tail call float @llvm.fma.f32(float %324, float %330, float %329)\l  %332 = fadd float %327, %331\l  %333 = fsub float %332, %327\l  %334 = fsub float %331, %333\l  %335 = tail call float @llvm.fmuladd.f32(float %332, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %336 = tail call float @llvm.fmuladd.f32(float %332, float %335, float\l... 0x3FD999BDE0000000)\l  %337 = sitofp i32 %304 to float\l  %338 = fmul float %337, 0x3FE62E4300000000\l  %339 = fneg float %338\l  %340 = tail call float @llvm.fma.f32(float %337, float 0x3FE62E4300000000,\l... float %339)\l  %341 = tail call float @llvm.fma.f32(float %337, float 0xBE205C6100000000,\l... float %340)\l  %342 = fadd float %338, %341\l  %343 = fsub float %342, %338\l  %344 = fsub float %341, %343\l  %345 = tail call float @llvm.amdgcn.ldexp.f32(float %324, i32 1)\l  %346 = fmul float %324, %332\l  %347 = fneg float %346\l  %348 = tail call float @llvm.fma.f32(float %332, float %324, float %347)\l  %349 = tail call float @llvm.fma.f32(float %332, float %326, float %348)\l  %350 = tail call float @llvm.fma.f32(float %334, float %324, float %349)\l  %351 = fadd float %346, %350\l  %352 = fsub float %351, %346\l  %353 = fsub float %350, %352\l  %354 = fmul float %332, %336\l  %355 = fneg float %354\l  %356 = tail call float @llvm.fma.f32(float %332, float %336, float %355)\l  %357 = tail call float @llvm.fma.f32(float %334, float %336, float %356)\l  %358 = fadd float %354, %357\l  %359 = fsub float %358, %354\l  %360 = fsub float %357, %359\l  %361 = fadd float %358, 0x3FE5555540000000\l  %362 = fadd float %361, 0xBFE5555540000000\l  %363 = fsub float %358, %362\l  %364 = fadd float %360, 0x3E2E720200000000\l  %365 = fadd float %364, %363\l  %366 = fadd float %361, %365\l  %367 = fsub float %366, %361\l  %368 = fsub float %365, %367\l  %369 = fmul float %351, %366\l  %370 = fneg float %369\l  %371 = tail call float @llvm.fma.f32(float %351, float %366, float %370)\l  %372 = tail call float @llvm.fma.f32(float %351, float %368, float %371)\l  %373 = tail call float @llvm.fma.f32(float %353, float %366, float %372)\l  %374 = tail call float @llvm.amdgcn.ldexp.f32(float %326, i32 1)\l  %375 = fadd float %369, %373\l  %376 = fsub float %375, %369\l  %377 = fsub float %373, %376\l  %378 = fadd float %345, %375\l  %379 = fsub float %378, %345\l  %380 = fsub float %375, %379\l  %381 = fadd float %374, %377\l  %382 = fadd float %381, %380\l  %383 = fadd float %378, %382\l  %384 = fsub float %383, %378\l  %385 = fsub float %382, %384\l  %386 = fadd float %342, %383\l  %387 = fsub float %386, %342\l  %388 = fsub float %386, %387\l  %389 = fsub float %342, %388\l  %390 = fsub float %383, %387\l  %391 = fadd float %390, %389\l  %392 = fadd float %344, %385\l  %393 = fsub float %392, %344\l  %394 = fsub float %392, %393\l  %395 = fsub float %344, %394\l  %396 = fsub float %385, %393\l  %397 = fadd float %396, %395\l  %398 = fadd float %392, %391\l  %399 = fadd float %386, %398\l  %400 = fsub float %399, %386\l  %401 = fsub float %398, %400\l  %402 = fadd float %397, %401\l  %403 = fadd float %399, %402\l  %404 = fsub float %403, %399\l  %405 = fsub float %402, %404\l  %406 = fmul float %403, 2.000000e+00\l  %407 = fneg float %406\l  %408 = tail call float @llvm.fma.f32(float %403, float 2.000000e+00, float\l... %407)\l  %409 = tail call float @llvm.fma.f32(float %405, float 2.000000e+00, float\l... %408)\l  %410 = fadd float %406, %409\l  %411 = fsub float %410, %406\l  %412 = fsub float %409, %411\l  %413 = tail call float @llvm.fabs.f32(float %406) #4\l  %414 = fcmp oeq float %413, 0x7FF0000000000000\l  %415 = select i1 %414, float %406, float %410\l  %416 = tail call float @llvm.fabs.f32(float %415) #4\l  %417 = fcmp oeq float %416, 0x7FF0000000000000\l  %418 = select i1 %417, float 0.000000e+00, float %412\l  %419 = fcmp oeq float %415, 0x40562E4300000000\l  %420 = select i1 %419, float 0x3EE0000000000000, float 0.000000e+00\l  %421 = fsub float %415, %420\l  %422 = fadd float %420, %418\l  %423 = fmul float %421, 0x3FF7154760000000\l  %424 = tail call float @llvm.rint.f32(float %423)\l  %425 = fcmp ogt float %421, 0x40562E4300000000\l  %426 = fcmp olt float %421, 0xC059D1DA00000000\l  %427 = fneg float %423\l  %428 = tail call float @llvm.fma.f32(float %421, float 0x3FF7154760000000,\l... float %427)\l  %429 = tail call float @llvm.fma.f32(float %421, float 0x3E54AE0BE0000000,\l... float %428)\l  %430 = fsub float %423, %424\l  %431 = fadd float %429, %430\l  %432 = tail call float @llvm.exp2.f32(float %431)\l  %433 = fptosi float %424 to i32\l  %434 = tail call float @llvm.amdgcn.ldexp.f32(float %432, i32 %433)\l  %435 = select i1 %426, float 0.000000e+00, float %434\l  %436 = select i1 %425, float 0x7FF0000000000000, float %435\l  %437 = tail call float @llvm.fma.f32(float %436, float %422, float %436)\l  %438 = tail call float @llvm.fabs.f32(float %436) #4\l  %439 = fcmp oeq float %438, 0x7FF0000000000000\l  %440 = select i1 %439, float %436, float %437\l  %441 = tail call float @llvm.fabs.f32(float %440)\l  %442 = fcmp oeq float %298, 0x7FF0000000000000\l  %443 = fcmp oeq float %297, 0.000000e+00\l  %444 = select i1 %442, float 0x7FF0000000000000, float %441\l  %445 = select i1 %443, float 0.000000e+00, float %444\l  %446 = fcmp uno float %297, 0.000000e+00\l  %447 = select i1 %446, float 0x7FF8000000000000, float %445\l  %448 = fcmp oeq float %297, 1.000000e+00\l  %449 = select i1 %448, float 1.000000e+00, float %447\l  %450 = load float, float addrspace(3)* %282, align 4, !tbaa !7\l  %451 = fadd contract float %450, %449\l  store float %451, float addrspace(3)* %282, align 4, !tbaa !7\l  br label %452\l}"];
	Node0x55a4b80 -> Node0x55a4800;
	Node0x55a4800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%452:\l452:                                              \l  %453 = add nsw i32 %288, %5\l  %454 = icmp slt i32 %453, %4\l  br i1 %454, label %287, label %286, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x55a4800:s0 -> Node0x55a45b0;
	Node0x55a4800:s1 -> Node0x55a4350;
	Node0x55a4670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%455:\l455:                                              \l  %456 = icmp sgt i32 %5, 0\l  br i1 %456, label %457, label %477\l|{<s0>T|<s1>F}}"];
	Node0x55a4670:s0 -> Node0x55abcd0;
	Node0x55a4670:s1 -> Node0x55abd20;
	Node0x55abcd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%457:\l457:                                              \l  %458 = and i32 %5, 7\l  %459 = icmp ult i32 %5, 8\l  br i1 %459, label %462, label %460\l|{<s0>T|<s1>F}}"];
	Node0x55abcd0:s0 -> Node0x55abf40;
	Node0x55abcd0:s1 -> Node0x55abf90;
	Node0x55abf90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%460:\l460:                                              \l  %461 = and i32 %5, -8\l  br label %482\l}"];
	Node0x55abf90 -> Node0x55ac160;
	Node0x55abf40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%462:\l462:                                              \l  %463 = phi float [ undef, %457 ], [ %516, %482 ]\l  %464 = phi i32 [ 0, %457 ], [ %517, %482 ]\l  %465 = phi float [ 0.000000e+00, %457 ], [ %516, %482 ]\l  %466 = icmp eq i32 %458, 0\l  br i1 %466, label %477, label %467\l|{<s0>T|<s1>F}}"];
	Node0x55abf40:s0 -> Node0x55abd20;
	Node0x55abf40:s1 -> Node0x55ac500;
	Node0x55ac500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%467:\l467:                                              \l  %468 = phi i32 [ %474, %467 ], [ %464, %462 ]\l  %469 = phi float [ %473, %467 ], [ %465, %462 ]\l  %470 = phi i32 [ %475, %467 ], [ 0, %462 ]\l  %471 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sd,\l... i32 0, i32 %468\l  %472 = load float, float addrspace(3)* %471, align 4, !tbaa !7\l  %473 = fadd contract float %472, %469\l  %474 = add nuw nsw i32 %468, 1\l  %475 = add i32 %470, 1\l  %476 = icmp eq i32 %475, %458\l  br i1 %476, label %477, label %467, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x55ac500:s0 -> Node0x55abd20;
	Node0x55ac500:s1 -> Node0x55ac500;
	Node0x55abd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%477:\l477:                                              \l  %478 = phi float [ 0.000000e+00, %455 ], [ %463, %462 ], [ %473, %467 ]\l  %479 = sitofp i32 %4 to float\l  %480 = fdiv contract float %478, %479\l  %481 = getelementptr inbounds float, float addrspace(1)* %3, i64 %125\l  store float %480, float addrspace(1)* %481, align 4, !tbaa !7\l  br label %520\l}"];
	Node0x55abd20 -> Node0x55a46c0;
	Node0x55ac160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%482:\l482:                                              \l  %483 = phi i32 [ 0, %460 ], [ %517, %482 ]\l  %484 = phi float [ 0.000000e+00, %460 ], [ %516, %482 ]\l  %485 = phi i32 [ 0, %460 ], [ %518, %482 ]\l  %486 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sd,\l... i32 0, i32 %483\l  %487 = load float, float addrspace(3)* %486, align 4, !tbaa !7\l  %488 = fadd contract float %487, %484\l  %489 = or i32 %483, 1\l  %490 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sd,\l... i32 0, i32 %489\l  %491 = load float, float addrspace(3)* %490, align 4, !tbaa !7\l  %492 = fadd contract float %491, %488\l  %493 = or i32 %483, 2\l  %494 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sd,\l... i32 0, i32 %493\l  %495 = load float, float addrspace(3)* %494, align 4, !tbaa !7\l  %496 = fadd contract float %495, %492\l  %497 = or i32 %483, 3\l  %498 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sd,\l... i32 0, i32 %497\l  %499 = load float, float addrspace(3)* %498, align 4, !tbaa !7\l  %500 = fadd contract float %499, %496\l  %501 = or i32 %483, 4\l  %502 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sd,\l... i32 0, i32 %501\l  %503 = load float, float addrspace(3)* %502, align 4, !tbaa !7\l  %504 = fadd contract float %503, %500\l  %505 = or i32 %483, 5\l  %506 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sd,\l... i32 0, i32 %505\l  %507 = load float, float addrspace(3)* %506, align 4, !tbaa !7\l  %508 = fadd contract float %507, %504\l  %509 = or i32 %483, 6\l  %510 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sd,\l... i32 0, i32 %509\l  %511 = load float, float addrspace(3)* %510, align 4, !tbaa !7\l  %512 = fadd contract float %511, %508\l  %513 = or i32 %483, 7\l  %514 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sd,\l... i32 0, i32 %513\l  %515 = load float, float addrspace(3)* %514, align 4, !tbaa !7\l  %516 = fadd contract float %515, %512\l  %517 = add nuw nsw i32 %483, 8\l  %518 = add i32 %485, 8\l  %519 = icmp eq i32 %518, %461\l  br i1 %519, label %462, label %482, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x55ac160:s0 -> Node0x55abf40;
	Node0x55ac160:s1 -> Node0x55ac160;
	Node0x55a46c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%520:\l520:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %521 = mul i32 %8, %4\l  %522 = add i32 %521, %23\l  %523 = zext i32 %522 to i64\l  %524 = getelementptr inbounds float, float addrspace(1)* %0, i64 %523\l  %525 = load float, float addrspace(1)* %524, align 4, !tbaa !7\l  %526 = load float, float addrspace(1)* %127, align 4, !tbaa !7\l  %527 = fsub contract float %525, %526\l  %528 = getelementptr inbounds float, float addrspace(1)* %3, i64 %125\l  %529 = load float, float addrspace(1)* %528, align 4, !tbaa !7\l  %530 = fdiv contract float %527, %529\l  %531 = getelementptr inbounds float, float addrspace(1)* %1, i64 %523\l  store float %530, float addrspace(1)* %531, align 4, !tbaa !7\l  %532 = icmp sgt i32 %6, 0\l  br i1 %532, label %533, label %568\l|{<s0>T|<s1>F}}"];
	Node0x55a46c0:s0 -> Node0x55a3250;
	Node0x55a46c0:s1 -> Node0x55a32a0;
	Node0x55a3250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%533:\l533:                                              \l  %534 = add i32 %23, %5\l  %535 = add i32 %534, %521\l  %536 = mul nsw i32 %4, %4\l  %537 = icmp ult i32 %535, %536\l  %538 = zext i32 %535 to i64\l  %539 = getelementptr inbounds float, float addrspace(1)* %0, i64 %538\l  %540 = getelementptr inbounds float, float addrspace(1)* %1, i64 %538\l  br i1 %537, label %546, label %541\l|{<s0>T|<s1>F}}"];
	Node0x55a3250:s0 -> Node0x55b0630;
	Node0x55a3250:s1 -> Node0x55b0680;
	Node0x55b0680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%541:\l541:                                              \l  %542 = and i32 %6, 7\l  %543 = icmp ult i32 %6, 8\l  br i1 %543, label %562, label %544\l|{<s0>T|<s1>F}}"];
	Node0x55b0680:s0 -> Node0x55b08e0;
	Node0x55b0680:s1 -> Node0x55b0930;
	Node0x55b0930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%544:\l544:                                              \l  %545 = and i32 %6, -8\l  br label %569\l}"];
	Node0x55b0930 -> Node0x55b0b00;
	Node0x55b0630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%546:\l546:                                              \l  %547 = and i32 %6, 3\l  %548 = icmp ult i32 %6, 4\l  br i1 %548, label %551, label %549\l|{<s0>T|<s1>F}}"];
	Node0x55b0630:s0 -> Node0x55b0ce0;
	Node0x55b0630:s1 -> Node0x55b0d30;
	Node0x55b0d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%549:\l549:                                              \l  %550 = and i32 %6, -4\l  br label %573\l}"];
	Node0x55b0d30 -> Node0x55b0f00;
	Node0x55b0ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%551:\l551:                                              \l  %552 = icmp eq i32 %547, 0\l  br i1 %552, label %568, label %553\l|{<s0>T|<s1>F}}"];
	Node0x55b0ce0:s0 -> Node0x55a32a0;
	Node0x55b0ce0:s1 -> Node0x55b1050;
	Node0x55b1050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%553:\l553:                                              \l  %554 = phi i32 [ %560, %553 ], [ 0, %551 ]\l  %555 = load float, float addrspace(1)* %539, align 4, !tbaa !7\l  %556 = load float, float addrspace(1)* %127, align 4, !tbaa !7\l  %557 = fsub contract float %555, %556\l  %558 = load float, float addrspace(1)* %528, align 4, !tbaa !7\l  %559 = fdiv contract float %557, %558\l  store float %559, float addrspace(1)* %540, align 4, !tbaa !7\l  %560 = add i32 %554, 1\l  %561 = icmp eq i32 %560, %547\l  br i1 %561, label %568, label %553, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x55b1050:s0 -> Node0x55a32a0;
	Node0x55b1050:s1 -> Node0x55b1050;
	Node0x55b08e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%562:\l562:                                              \l  %563 = icmp eq i32 %542, 0\l  br i1 %563, label %568, label %564\l|{<s0>T|<s1>F}}"];
	Node0x55b08e0:s0 -> Node0x55a32a0;
	Node0x55b08e0:s1 -> Node0x5596790;
	Node0x5596790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%564:\l564:                                              \l  %565 = phi i32 [ %566, %564 ], [ 0, %562 ]\l  %566 = add i32 %565, 1\l  %567 = icmp eq i32 %566, %542\l  br i1 %567, label %568, label %564, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5596790:s0 -> Node0x55a32a0;
	Node0x5596790:s1 -> Node0x5596790;
	Node0x55a32a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%568:\l568:                                              \l  ret void\l}"];
	Node0x55b0b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%569:\l569:                                              \l  %570 = phi i32 [ 0, %544 ], [ %571, %569 ]\l  %571 = add i32 %570, 8\l  %572 = icmp eq i32 %571, %545\l  br i1 %572, label %562, label %569, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x55b0b00:s0 -> Node0x55b08e0;
	Node0x55b0b00:s1 -> Node0x55b0b00;
	Node0x55b0f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%573:\l573:                                              \l  %574 = phi i32 [ 0, %549 ], [ %595, %573 ]\l  %575 = load float, float addrspace(1)* %539, align 4, !tbaa !7\l  %576 = load float, float addrspace(1)* %127, align 4, !tbaa !7\l  %577 = fsub contract float %575, %576\l  %578 = load float, float addrspace(1)* %528, align 4, !tbaa !7\l  %579 = fdiv contract float %577, %578\l  store float %579, float addrspace(1)* %540, align 4, !tbaa !7\l  %580 = load float, float addrspace(1)* %539, align 4, !tbaa !7\l  %581 = load float, float addrspace(1)* %127, align 4, !tbaa !7\l  %582 = fsub contract float %580, %581\l  %583 = load float, float addrspace(1)* %528, align 4, !tbaa !7\l  %584 = fdiv contract float %582, %583\l  store float %584, float addrspace(1)* %540, align 4, !tbaa !7\l  %585 = load float, float addrspace(1)* %539, align 4, !tbaa !7\l  %586 = load float, float addrspace(1)* %127, align 4, !tbaa !7\l  %587 = fsub contract float %585, %586\l  %588 = load float, float addrspace(1)* %528, align 4, !tbaa !7\l  %589 = fdiv contract float %587, %588\l  store float %589, float addrspace(1)* %540, align 4, !tbaa !7\l  %590 = load float, float addrspace(1)* %539, align 4, !tbaa !7\l  %591 = load float, float addrspace(1)* %127, align 4, !tbaa !7\l  %592 = fsub contract float %590, %591\l  %593 = load float, float addrspace(1)* %528, align 4, !tbaa !7\l  %594 = fdiv contract float %592, %593\l  store float %594, float addrspace(1)* %540, align 4, !tbaa !7\l  %595 = add i32 %574, 4\l  %596 = icmp eq i32 %595, %550\l  br i1 %596, label %551, label %573, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x55b0f00:s0 -> Node0x55b0ce0;
	Node0x55b0f00:s1 -> Node0x55b0f00;
}
