digraph "CFG for '_Z4initPiii' function" {
	label="CFG for '_Z4initPiii' function";

	Node0x5a82b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%3:\l  %4 = icmp slt i32 %1, 2\l  br i1 %4, label %81, label %5\l|{<s0>T|<s1>F}}"];
	Node0x5a82b70:s0 -> Node0x5a832b0;
	Node0x5a82b70:s1 -> Node0x5a83340;
	Node0x5a83340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%5:\l5:                                                \l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = add i32 %1, -1\l  %12 = and i32 %11, 1\l  %13 = icmp eq i32 %1, 2\l  br i1 %13, label %59, label %14\l|{<s0>T|<s1>F}}"];
	Node0x5a83340:s0 -> Node0x5a83260;
	Node0x5a83340:s1 -> Node0x5a83e60;
	Node0x5a83e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%14:\l14:                                               \l  %15 = and i32 %11, -2\l  br label %16\l}"];
	Node0x5a83e60 -> Node0x5a84060;
	Node0x5a84060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  %17 = phi i32 [ 2, %14 ], [ %42, %56 ]\l  %18 = phi i32 [ 0, %14 ], [ %57, %56 ]\l  %19 = zext i32 %17 to i64\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %19\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !4\l  %22 = icmp eq i32 %21, 0\l  %23 = or i32 %17, 1\l  br i1 %22, label %24, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5a84060:s0 -> Node0x5a852c0;
	Node0x5a84060:s1 -> Node0x5a85350;
	Node0x5a852c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%24:\l24:                                               \l  %25 = add nuw i32 %23, %6\l  %26 = load i16, i16 addrspace(4)* %10, align 4, !range !8, !invariant.load !9\l  %27 = zext i16 %26 to i32\l  %28 = mul i32 %7, %27\l  %29 = add i32 %25, %28\l  %30 = icmp slt i32 %29, %2\l  br i1 %30, label %31, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5a852c0:s0 -> Node0x5a85a70;
	Node0x5a852c0:s1 -> Node0x5a85350;
	Node0x5a85a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%31:\l31:                                               \l  %32 = srem i32 %29, %17\l  %33 = icmp eq i32 %32, 0\l  br i1 %33, label %34, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5a85a70:s0 -> Node0x5a841b0;
	Node0x5a85a70:s1 -> Node0x5a85350;
	Node0x5a841b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%34:\l34:                                               \l  %35 = sext i32 %29 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %35\l  store i32 1, i32 addrspace(1)* %36, align 4, !tbaa !4\l  br label %37\l}"];
	Node0x5a841b0 -> Node0x5a85350;
	Node0x5a85350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = zext i32 %23 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %38\l  %40 = load i32, i32 addrspace(1)* %39, align 4, !tbaa !4\l  %41 = icmp eq i32 %40, 0\l  %42 = add nuw i32 %17, 2\l  br i1 %41, label %43, label %56\l|{<s0>T|<s1>F}}"];
	Node0x5a85350:s0 -> Node0x5a869c0;
	Node0x5a85350:s1 -> Node0x5a83a70;
	Node0x5a869c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%43:\l43:                                               \l  %44 = add nuw i32 %42, %6\l  %45 = load i16, i16 addrspace(4)* %10, align 4, !range !8, !invariant.load !9\l  %46 = zext i16 %45 to i32\l  %47 = mul i32 %7, %46\l  %48 = add i32 %44, %47\l  %49 = icmp slt i32 %48, %2\l  br i1 %49, label %50, label %56\l|{<s0>T|<s1>F}}"];
	Node0x5a869c0:s0 -> Node0x5a87a00;
	Node0x5a869c0:s1 -> Node0x5a83a70;
	Node0x5a87a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%50:\l50:                                               \l  %51 = srem i32 %48, %23\l  %52 = icmp eq i32 %51, 0\l  br i1 %52, label %53, label %56\l|{<s0>T|<s1>F}}"];
	Node0x5a87a00:s0 -> Node0x5a87c20;
	Node0x5a87a00:s1 -> Node0x5a83a70;
	Node0x5a87c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%53:\l53:                                               \l  %54 = sext i32 %48 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %54\l  store i32 1, i32 addrspace(1)* %55, align 4, !tbaa !4\l  br label %56\l}"];
	Node0x5a87c20 -> Node0x5a83a70;
	Node0x5a83a70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  %57 = add i32 %18, 2\l  %58 = icmp eq i32 %57, %15\l  br i1 %58, label %59, label %16, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5a83a70:s0 -> Node0x5a83260;
	Node0x5a83a70:s1 -> Node0x5a84060;
	Node0x5a83260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%59:\l59:                                               \l  %60 = phi i32 [ 2, %5 ], [ %42, %56 ]\l  %61 = icmp eq i32 %12, 0\l  br i1 %61, label %81, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5a83260:s0 -> Node0x5a832b0;
	Node0x5a83260:s1 -> Node0x5a882c0;
	Node0x5a882c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%62:\l62:                                               \l  %63 = zext i32 %60 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !4\l  %66 = icmp eq i32 %65, 0\l  br i1 %66, label %67, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5a882c0:s0 -> Node0x5a85d40;
	Node0x5a882c0:s1 -> Node0x5a832b0;
	Node0x5a85d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%67:\l67:                                               \l  %68 = add nuw i32 %60, 1\l  %69 = add nuw i32 %68, %6\l  %70 = load i16, i16 addrspace(4)* %10, align 4, !range !8, !invariant.load !9\l  %71 = zext i16 %70 to i32\l  %72 = mul i32 %7, %71\l  %73 = add i32 %69, %72\l  %74 = icmp slt i32 %73, %2\l  br i1 %74, label %75, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5a85d40:s0 -> Node0x5a88c90;
	Node0x5a85d40:s1 -> Node0x5a832b0;
	Node0x5a88c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%75:\l75:                                               \l  %76 = srem i32 %73, %60\l  %77 = icmp eq i32 %76, 0\l  br i1 %77, label %78, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5a88c90:s0 -> Node0x5a88eb0;
	Node0x5a88c90:s1 -> Node0x5a832b0;
	Node0x5a88eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%78:\l78:                                               \l  %79 = sext i32 %73 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %79\l  store i32 1, i32 addrspace(1)* %80, align 4, !tbaa !4\l  br label %81\l}"];
	Node0x5a88eb0 -> Node0x5a832b0;
	Node0x5a832b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%81:\l81:                                               \l  ret void\l}"];
}
