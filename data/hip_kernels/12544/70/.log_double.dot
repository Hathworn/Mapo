digraph "CFG for 'log_double' function" {
	label="CFG for 'log_double' function";

	Node0x4f3c840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = icmp slt i32 %17, %0\l  br i1 %18, label %19, label %26\l|{<s0>T|<s1>F}}"];
	Node0x4f3c840:s0 -> Node0x4f3eab0;
	Node0x4f3c840:s1 -> Node0x4f3eb40;
	Node0x4f3eab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%19:\l19:                                               \l  %20 = udiv i32 %14, %11\l  %21 = mul i32 %20, %11\l  %22 = icmp ugt i32 %14, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %11\l  br label %27\l}"];
	Node0x4f3eab0 -> Node0x4f3efc0;
	Node0x4f3eb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%26:\l26:                                               \l  ret void\l}"];
	Node0x4f3efc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %17, %19 ], [ %123, %122 ]\l  %29 = icmp slt i32 %28, %1\l  br i1 %29, label %122, label %30\l|{<s0>T|<s1>F}}"];
	Node0x4f3efc0:s0 -> Node0x4f3f0d0;
	Node0x4f3efc0:s1 -> Node0x4f3f260;
	Node0x4f3f260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%30:\l30:                                               \l  %31 = srem i32 %28, %3\l  %32 = icmp eq i32 %31, 0\l  br i1 %32, label %33, label %122\l|{<s0>T|<s1>F}}"];
	Node0x4f3f260:s0 -> Node0x4f3e910;
	Node0x4f3f260:s1 -> Node0x4f3f0d0;
	Node0x4f3e910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%33:\l33:                                               \l  %34 = sext i32 %28 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %2, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !16\l  %37 = tail call double @llvm.amdgcn.frexp.mant.f64(double %36)\l  %38 = fcmp olt double %37, 0x3FE5555555555555\l  %39 = zext i1 %38 to i32\l  %40 = tail call double @llvm.amdgcn.ldexp.f64(double %37, i32 %39)\l  %41 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %36)\l  %42 = sub nsw i32 %41, %39\l  %43 = fadd double %40, -1.000000e+00\l  %44 = fadd double %40, 1.000000e+00\l  %45 = fadd double %44, -1.000000e+00\l  %46 = fsub double %40, %45\l  %47 = tail call double @llvm.amdgcn.rcp.f64(double %44)\l  %48 = fneg double %44\l  %49 = tail call double @llvm.fma.f64(double %48, double %47, double\l... 1.000000e+00)\l  %50 = tail call double @llvm.fma.f64(double %49, double %47, double %47)\l  %51 = tail call double @llvm.fma.f64(double %48, double %50, double\l... 1.000000e+00)\l  %52 = tail call double @llvm.fma.f64(double %51, double %50, double %50)\l  %53 = fmul double %43, %52\l  %54 = fmul double %44, %53\l  %55 = fneg double %54\l  %56 = tail call double @llvm.fma.f64(double %53, double %44, double %55)\l  %57 = tail call double @llvm.fma.f64(double %53, double %46, double %56)\l  %58 = fadd double %54, %57\l  %59 = fsub double %58, %54\l  %60 = fsub double %57, %59\l  %61 = fsub double %43, %58\l  %62 = fsub double %43, %61\l  %63 = fsub double %62, %58\l  %64 = fsub double %63, %60\l  %65 = fadd double %61, %64\l  %66 = fmul double %52, %65\l  %67 = fadd double %53, %66\l  %68 = fsub double %67, %53\l  %69 = fsub double %66, %68\l  %70 = fmul double %67, %67\l  %71 = tail call double @llvm.fma.f64(double %70, double 0x3FC3AB76BF559E2B,\l... double 0x3FC385386B47B09A)\l  %72 = tail call double @llvm.fma.f64(double %70, double %71, double\l... 0x3FC7474DD7F4DF2E)\l  %73 = tail call double @llvm.fma.f64(double %70, double %72, double\l... 0x3FCC71C016291751)\l  %74 = tail call double @llvm.fma.f64(double %70, double %73, double\l... 0x3FD249249B27ACF1)\l  %75 = tail call double @llvm.fma.f64(double %70, double %74, double\l... 0x3FD99999998EF7B6)\l  %76 = tail call double @llvm.fma.f64(double %70, double %75, double\l... 0x3FE5555555555780)\l  %77 = tail call double @llvm.amdgcn.ldexp.f64(double %67, i32 1)\l  %78 = tail call double @llvm.amdgcn.ldexp.f64(double %69, i32 1)\l  %79 = fmul double %67, %70\l  %80 = fmul double %79, %76\l  %81 = fadd double %77, %80\l  %82 = fsub double %81, %77\l  %83 = fsub double %80, %82\l  %84 = fadd double %78, %83\l  %85 = fadd double %81, %84\l  %86 = fsub double %85, %81\l  %87 = fsub double %84, %86\l  %88 = sitofp i32 %42 to double\l  %89 = fmul double %88, 0x3FE62E42FEFA39EF\l  %90 = fneg double %89\l  %91 = tail call double @llvm.fma.f64(double %88, double 0x3FE62E42FEFA39EF,\l... double %90)\l  %92 = tail call double @llvm.fma.f64(double %88, double 0x3C7ABC9E3B39803F,\l... double %91)\l  %93 = fadd double %89, %92\l  %94 = fsub double %93, %89\l  %95 = fsub double %92, %94\l  %96 = fadd double %93, %85\l  %97 = fsub double %96, %93\l  %98 = fsub double %96, %97\l  %99 = fsub double %93, %98\l  %100 = fsub double %85, %97\l  %101 = fadd double %100, %99\l  %102 = fadd double %95, %87\l  %103 = fsub double %102, %95\l  %104 = fsub double %102, %103\l  %105 = fsub double %95, %104\l  %106 = fsub double %87, %103\l  %107 = fadd double %106, %105\l  %108 = fadd double %102, %101\l  %109 = fadd double %96, %108\l  %110 = fsub double %109, %96\l  %111 = fsub double %108, %110\l  %112 = fadd double %107, %111\l  %113 = fadd double %109, %112\l  %114 = tail call double @llvm.fabs.f64(double %36) #3\l  %115 = fcmp oeq double %114, 0x7FF0000000000000\l  %116 = select i1 %115, double %36, double %113\l  %117 = fcmp olt double %36, 0.000000e+00\l  %118 = select i1 %117, double 0x7FF8000000000000, double %116\l  %119 = fcmp oeq double %36, 0.000000e+00\l  %120 = select i1 %119, double 0xFFF0000000000000, double %118\l  %121 = getelementptr inbounds double, double addrspace(1)* %4, i64 %34\l  store double %120, double addrspace(1)* %121, align 8, !tbaa !16\l  br label %122\l}"];
	Node0x4f3e910 -> Node0x4f3f0d0;
	Node0x4f3f0d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%122:\l122:                                              \l  %123 = add i32 %25, %28\l  %124 = icmp slt i32 %123, %0\l  br i1 %124, label %27, label %26, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4f3f0d0:s0 -> Node0x4f3efc0;
	Node0x4f3f0d0:s1 -> Node0x4f3eb40;
}
