digraph "CFG for 'rdiv_scalar_double' function" {
	label="CFG for 'rdiv_scalar_double' function";

	Node0x506f700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = mul i32 %7, %12\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %18 = add i32 %16, %17\l  %19 = icmp slt i32 %18, %0\l  br i1 %19, label %20, label %27\l|{<s0>T|<s1>F}}"];
	Node0x506f700:s0 -> Node0x5071950;
	Node0x506f700:s1 -> Node0x50719e0;
	Node0x5071950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%20:\l20:                                               \l  %21 = udiv i32 %15, %12\l  %22 = mul i32 %21, %12\l  %23 = icmp ugt i32 %15, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %12\l  br label %28\l}"];
	Node0x5071950 -> Node0x5071e60;
	Node0x50719e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%27:\l27:                                               \l  ret void\l}"];
	Node0x5071e60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %18, %20 ], [ %42, %41 ]\l  %30 = icmp slt i32 %29, %1\l  br i1 %30, label %41, label %31\l|{<s0>T|<s1>F}}"];
	Node0x5071e60:s0 -> Node0x5071f70;
	Node0x5071e60:s1 -> Node0x5072100;
	Node0x5072100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%31:\l31:                                               \l  %32 = srem i32 %29, %4\l  %33 = icmp eq i32 %32, 0\l  br i1 %33, label %34, label %41\l|{<s0>T|<s1>F}}"];
	Node0x5072100:s0 -> Node0x5071510;
	Node0x5072100:s1 -> Node0x5071f70;
	Node0x5071510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%34:\l34:                                               \l  %35 = sext i32 %29 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %3, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %38 = fdiv contract float %2, %37\l  %39 = fpext float %38 to double\l  %40 = getelementptr inbounds double, double addrspace(1)* %5, i64 %35\l  store double %39, double addrspace(1)* %40, align 8, !tbaa !20\l  br label %41\l}"];
	Node0x5071510 -> Node0x5071f70;
	Node0x5071f70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = add i32 %26, %29\l  %43 = icmp slt i32 %42, %0\l  br i1 %43, label %28, label %27, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5071f70:s0 -> Node0x5071e60;
	Node0x5071f70:s1 -> Node0x50719e0;
}
