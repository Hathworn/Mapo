digraph "CFG for 'sign_double' function" {
	label="CFG for 'sign_double' function";

	Node0x5c296c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = icmp slt i32 %17, %0\l  br i1 %18, label %19, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5c296c0:s0 -> Node0x5c2b930;
	Node0x5c296c0:s1 -> Node0x5c2b9c0;
	Node0x5c2b930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%19:\l19:                                               \l  %20 = udiv i32 %14, %11\l  %21 = mul i32 %20, %11\l  %22 = icmp ugt i32 %14, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %11\l  br label %27\l}"];
	Node0x5c2b930 -> Node0x5c2be40;
	Node0x5c2b9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%26:\l26:                                               \l  ret void\l}"];
	Node0x5c2be40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %17, %19 ], [ %45, %44 ]\l  %29 = icmp slt i32 %28, %1\l  br i1 %29, label %44, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5c2be40:s0 -> Node0x5c2bf50;
	Node0x5c2be40:s1 -> Node0x5c2c0e0;
	Node0x5c2c0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%30:\l30:                                               \l  %31 = srem i32 %28, %3\l  %32 = icmp eq i32 %31, 0\l  br i1 %32, label %33, label %44\l|{<s0>T|<s1>F}}"];
	Node0x5c2c0e0:s0 -> Node0x5c2b790;
	Node0x5c2c0e0:s1 -> Node0x5c2bf50;
	Node0x5c2b790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%33:\l33:                                               \l  %34 = sext i32 %28 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %2, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !16\l  %37 = fcmp contract ogt double %36, 0.000000e+00\l  %38 = zext i1 %37 to i32\l  %39 = fcmp contract olt double %36, 0.000000e+00\l  %40 = sext i1 %39 to i32\l  %41 = add nsw i32 %40, %38\l  %42 = sitofp i32 %41 to double\l  %43 = getelementptr inbounds double, double addrspace(1)* %4, i64 %34\l  store double %42, double addrspace(1)* %43, align 8, !tbaa !16\l  br label %44\l}"];
	Node0x5c2b790 -> Node0x5c2bf50;
	Node0x5c2bf50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = add i32 %25, %28\l  %46 = icmp slt i32 %45, %0\l  br i1 %46, label %27, label %26, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5c2bf50:s0 -> Node0x5c2be40;
	Node0x5c2bf50:s1 -> Node0x5c2b9c0;
}
