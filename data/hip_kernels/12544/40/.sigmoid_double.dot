digraph "CFG for 'sigmoid_double' function" {
	label="CFG for 'sigmoid_double' function";

	Node0x4f4dec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = icmp slt i32 %17, %0\l  br i1 %18, label %19, label %26\l|{<s0>T|<s1>F}}"];
	Node0x4f4dec0:s0 -> Node0x4f50130;
	Node0x4f4dec0:s1 -> Node0x4f501c0;
	Node0x4f50130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%19:\l19:                                               \l  %20 = udiv i32 %14, %11\l  %21 = mul i32 %20, %11\l  %22 = icmp ugt i32 %14, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %11\l  br label %27\l}"];
	Node0x4f50130 -> Node0x4f50640;
	Node0x4f501c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%26:\l26:                                               \l  ret void\l}"];
	Node0x4f50640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %17, %19 ], [ %64, %63 ]\l  %29 = icmp slt i32 %28, %1\l  br i1 %29, label %63, label %30\l|{<s0>T|<s1>F}}"];
	Node0x4f50640:s0 -> Node0x4f50750;
	Node0x4f50640:s1 -> Node0x4f508e0;
	Node0x4f508e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%30:\l30:                                               \l  %31 = srem i32 %28, %3\l  %32 = icmp eq i32 %31, 0\l  br i1 %32, label %33, label %63\l|{<s0>T|<s1>F}}"];
	Node0x4f508e0:s0 -> Node0x4f4ff90;
	Node0x4f508e0:s1 -> Node0x4f50750;
	Node0x4f4ff90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%33:\l33:                                               \l  %34 = sext i32 %28 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %2, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !16\l  %37 = fneg contract double %36\l  %38 = fmul double %36, 0xBFF71547652B82FE\l  %39 = tail call double @llvm.rint.f64(double %38)\l  %40 = fneg double %39\l  %41 = tail call double @llvm.fma.f64(double %40, double 0x3FE62E42FEFA39EF,\l... double %37)\l  %42 = tail call double @llvm.fma.f64(double %40, double 0x3C7ABC9E3B39803F,\l... double %41)\l  %43 = tail call double @llvm.fma.f64(double %42, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %44 = tail call double @llvm.fma.f64(double %42, double %43, double\l... 0x3EC71DEE623FDE64)\l  %45 = tail call double @llvm.fma.f64(double %42, double %44, double\l... 0x3EFA01997C89E6B0)\l  %46 = tail call double @llvm.fma.f64(double %42, double %45, double\l... 0x3F2A01A014761F6E)\l  %47 = tail call double @llvm.fma.f64(double %42, double %46, double\l... 0x3F56C16C1852B7B0)\l  %48 = tail call double @llvm.fma.f64(double %42, double %47, double\l... 0x3F81111111122322)\l  %49 = tail call double @llvm.fma.f64(double %42, double %48, double\l... 0x3FA55555555502A1)\l  %50 = tail call double @llvm.fma.f64(double %42, double %49, double\l... 0x3FC5555555555511)\l  %51 = tail call double @llvm.fma.f64(double %42, double %50, double\l... 0x3FE000000000000B)\l  %52 = tail call double @llvm.fma.f64(double %42, double %51, double\l... 1.000000e+00)\l  %53 = tail call double @llvm.fma.f64(double %42, double %52, double\l... 1.000000e+00)\l  %54 = fptosi double %39 to i32\l  %55 = tail call double @llvm.amdgcn.ldexp.f64(double %53, i32 %54)\l  %56 = fcmp olt double %36, -1.024000e+03\l  %57 = fcmp ogt double %36, 1.075000e+03\l  %58 = fadd contract double %55, 1.000000e+00\l  %59 = fdiv contract double 1.000000e+00, %58\l  %60 = select i1 %56, double 0.000000e+00, double %59\l  %61 = select i1 %57, double 1.000000e+00, double %60\l  %62 = getelementptr inbounds double, double addrspace(1)* %4, i64 %34\l  store double %61, double addrspace(1)* %62, align 8, !tbaa !16\l  br label %63\l}"];
	Node0x4f4ff90 -> Node0x4f50750;
	Node0x4f50750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = add i32 %25, %28\l  %65 = icmp slt i32 %64, %0\l  br i1 %65, label %27, label %26, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4f50750:s0 -> Node0x4f50640;
	Node0x4f50750:s1 -> Node0x4f501c0;
}
