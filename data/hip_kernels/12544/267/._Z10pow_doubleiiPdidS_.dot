digraph "CFG for '_Z10pow_doubleiiPdidS_' function" {
	label="CFG for '_Z10pow_doubleiiPdidS_' function";

	Node0x5eb1440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = mul i32 %7, %12\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %18 = add i32 %16, %17\l  %19 = icmp slt i32 %18, %0\l  br i1 %19, label %20, label %46\l|{<s0>T|<s1>F}}"];
	Node0x5eb1440:s0 -> Node0x5eb3690;
	Node0x5eb1440:s1 -> Node0x5eb3720;
	Node0x5eb3690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%20:\l20:                                               \l  %21 = tail call double @llvm.fabs.f64(double %4)\l  %22 = tail call double @llvm.trunc.f64(double %21)\l  %23 = fcmp oeq double %21, %22\l  %24 = zext i1 %23 to i32\l  %25 = fmul double %22, 5.000000e-01\l  %26 = tail call double @llvm.amdgcn.fract.f64(double %25)\l  %27 = tail call i1 @llvm.amdgcn.class.f64(double %25, i32 516)\l  %28 = select i1 %27, double 0.000000e+00, double %26\l  %29 = fcmp oeq double %28, 0.000000e+00\l  %30 = and i1 %23, %29\l  %31 = zext i1 %30 to i32\l  %32 = add nuw nsw i32 %31, %24\l  %33 = icmp eq i32 %32, 1\l  %34 = icmp ne i32 %32, 0\l  %35 = fcmp oeq double %21, 0x7FF0000000000000\l  %36 = bitcast double %4 to \<2 x i32\>\l  %37 = extractelement \<2 x i32\> %36, i64 1\l  %38 = fcmp olt double %4, 0.000000e+00\l  %39 = fcmp oeq double %4, 0.000000e+00\l  %40 = udiv i32 %15, %12\l  %41 = mul i32 %40, %12\l  %42 = icmp ugt i32 %15, %41\l  %43 = zext i1 %42 to i32\l  %44 = add i32 %40, %43\l  %45 = mul i32 %44, %12\l  br label %47\l}"];
	Node0x5eb3690 -> Node0x5eb5ec0;
	Node0x5eb3720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%46:\l46:                                               \l  ret void\l}"];
	Node0x5eb5ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi i32 [ %18, %20 ], [ %246, %245 ]\l  %49 = icmp slt i32 %48, %1\l  br i1 %49, label %245, label %50\l|{<s0>T|<s1>F}}"];
	Node0x5eb5ec0:s0 -> Node0x5eb6040;
	Node0x5eb5ec0:s1 -> Node0x5eb61d0;
	Node0x5eb61d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%50:\l50:                                               \l  %51 = srem i32 %48, %3\l  %52 = icmp eq i32 %51, 0\l  br i1 %52, label %53, label %245\l|{<s0>T|<s1>F}}"];
	Node0x5eb61d0:s0 -> Node0x5eb6430;
	Node0x5eb61d0:s1 -> Node0x5eb6040;
	Node0x5eb6430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%53:\l53:                                               \l  %54 = sext i32 %48 to i64\l  %55 = getelementptr inbounds double, double addrspace(1)* %2, i64 %54\l  %56 = load double, double addrspace(1)* %55, align 8, !tbaa !16\l  %57 = tail call double @llvm.fabs.f64(double %56)\l  %58 = tail call double @llvm.amdgcn.frexp.mant.f64(double %57)\l  %59 = fcmp olt double %58, 0x3FE5555555555555\l  %60 = zext i1 %59 to i32\l  %61 = tail call double @llvm.amdgcn.ldexp.f64(double %58, i32 %60)\l  %62 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %57)\l  %63 = sub nsw i32 %62, %60\l  %64 = fadd double %61, -1.000000e+00\l  %65 = fadd double %61, 1.000000e+00\l  %66 = fadd double %65, -1.000000e+00\l  %67 = fsub double %61, %66\l  %68 = tail call double @llvm.amdgcn.rcp.f64(double %65)\l  %69 = fneg double %65\l  %70 = tail call double @llvm.fma.f64(double %69, double %68, double\l... 1.000000e+00)\l  %71 = tail call double @llvm.fma.f64(double %70, double %68, double %68)\l  %72 = tail call double @llvm.fma.f64(double %69, double %71, double\l... 1.000000e+00)\l  %73 = tail call double @llvm.fma.f64(double %72, double %71, double %71)\l  %74 = fmul double %64, %73\l  %75 = fmul double %65, %74\l  %76 = fneg double %75\l  %77 = tail call double @llvm.fma.f64(double %74, double %65, double %76)\l  %78 = tail call double @llvm.fma.f64(double %74, double %67, double %77)\l  %79 = fadd double %75, %78\l  %80 = fsub double %79, %75\l  %81 = fsub double %78, %80\l  %82 = fsub double %64, %79\l  %83 = fsub double %64, %82\l  %84 = fsub double %83, %79\l  %85 = fsub double %84, %81\l  %86 = fadd double %82, %85\l  %87 = fmul double %73, %86\l  %88 = fadd double %74, %87\l  %89 = fsub double %88, %74\l  %90 = fsub double %87, %89\l  %91 = fmul double %88, %88\l  %92 = fneg double %91\l  %93 = tail call double @llvm.fma.f64(double %88, double %88, double %92)\l  %94 = fmul double %90, 2.000000e+00\l  %95 = tail call double @llvm.fma.f64(double %88, double %94, double %93)\l  %96 = fadd double %91, %95\l  %97 = fsub double %96, %91\l  %98 = fsub double %95, %97\l  %99 = tail call double @llvm.fma.f64(double %96, double 0x3FBDEE674222DE17,\l... double 0x3FBA6564968915A9)\l  %100 = tail call double @llvm.fma.f64(double %96, double %99, double\l... 0x3FBE25E43ABE935A)\l  %101 = tail call double @llvm.fma.f64(double %96, double %100, double\l... 0x3FC110EF47E6C9C2)\l  %102 = tail call double @llvm.fma.f64(double %96, double %101, double\l... 0x3FC3B13BCFA74449)\l  %103 = tail call double @llvm.fma.f64(double %96, double %102, double\l... 0x3FC745D171BF3C30)\l  %104 = tail call double @llvm.fma.f64(double %96, double %103, double\l... 0x3FCC71C71C7792CE)\l  %105 = tail call double @llvm.fma.f64(double %96, double %104, double\l... 0x3FD24924924920DA)\l  %106 = tail call double @llvm.fma.f64(double %96, double %105, double\l... 0x3FD999999999999C)\l  %107 = sitofp i32 %63 to double\l  %108 = fmul double %107, 0x3FE62E42FEFA39EF\l  %109 = fneg double %108\l  %110 = tail call double @llvm.fma.f64(double %107, double\l... 0x3FE62E42FEFA39EF, double %109)\l  %111 = tail call double @llvm.fma.f64(double %107, double\l... 0x3C7ABC9E3B39803F, double %110)\l  %112 = fadd double %108, %111\l  %113 = fsub double %112, %108\l  %114 = fsub double %111, %113\l  %115 = tail call double @llvm.amdgcn.ldexp.f64(double %88, i32 1)\l  %116 = tail call double @llvm.amdgcn.ldexp.f64(double %90, i32 1)\l  %117 = fmul double %88, %96\l  %118 = fneg double %117\l  %119 = tail call double @llvm.fma.f64(double %96, double %88, double %118)\l  %120 = tail call double @llvm.fma.f64(double %96, double %90, double %119)\l  %121 = tail call double @llvm.fma.f64(double %98, double %88, double %120)\l  %122 = fadd double %117, %121\l  %123 = fsub double %122, %117\l  %124 = fsub double %121, %123\l  %125 = fmul double %96, %106\l  %126 = fneg double %125\l  %127 = tail call double @llvm.fma.f64(double %96, double %106, double %126)\l  %128 = tail call double @llvm.fma.f64(double %98, double %106, double %127)\l  %129 = fadd double %125, %128\l  %130 = fsub double %129, %125\l  %131 = fsub double %128, %130\l  %132 = fadd double %129, 0x3FE5555555555555\l  %133 = fadd double %132, 0xBFE5555555555555\l  %134 = fsub double %129, %133\l  %135 = fadd double %131, 0x3C8543B0D5DF274D\l  %136 = fadd double %135, %134\l  %137 = fadd double %132, %136\l  %138 = fsub double %137, %132\l  %139 = fsub double %136, %138\l  %140 = fmul double %122, %137\l  %141 = fneg double %140\l  %142 = tail call double @llvm.fma.f64(double %122, double %137, double %141)\l  %143 = tail call double @llvm.fma.f64(double %122, double %139, double %142)\l  %144 = tail call double @llvm.fma.f64(double %124, double %137, double %143)\l  %145 = fadd double %140, %144\l  %146 = fsub double %145, %140\l  %147 = fsub double %144, %146\l  %148 = fadd double %115, %145\l  %149 = fsub double %148, %115\l  %150 = fsub double %145, %149\l  %151 = fadd double %116, %147\l  %152 = fadd double %151, %150\l  %153 = fadd double %148, %152\l  %154 = fsub double %153, %148\l  %155 = fsub double %152, %154\l  %156 = fadd double %112, %153\l  %157 = fsub double %156, %112\l  %158 = fsub double %156, %157\l  %159 = fsub double %112, %158\l  %160 = fsub double %153, %157\l  %161 = fadd double %160, %159\l  %162 = fadd double %114, %155\l  %163 = fsub double %162, %114\l  %164 = fsub double %162, %163\l  %165 = fsub double %114, %164\l  %166 = fsub double %155, %163\l  %167 = fadd double %166, %165\l  %168 = fadd double %162, %161\l  %169 = fadd double %156, %168\l  %170 = fsub double %169, %156\l  %171 = fsub double %168, %170\l  %172 = fadd double %167, %171\l  %173 = fadd double %169, %172\l  %174 = fsub double %173, %169\l  %175 = fsub double %172, %174\l  %176 = fmul double %173, %4\l  %177 = fneg double %176\l  %178 = tail call double @llvm.fma.f64(double %4, double %173, double %177)\l  %179 = tail call double @llvm.fma.f64(double %4, double %175, double %178)\l  %180 = fadd double %176, %179\l  %181 = fsub double %180, %176\l  %182 = fsub double %179, %181\l  %183 = tail call double @llvm.fabs.f64(double %176) #3\l  %184 = fcmp oeq double %183, 0x7FF0000000000000\l  %185 = select i1 %184, double %176, double %180\l  %186 = tail call double @llvm.fabs.f64(double %185) #3\l  %187 = fcmp oeq double %186, 0x7FF0000000000000\l  %188 = select i1 %187, double 0.000000e+00, double %182\l  %189 = fmul double %185, 0x3FF71547652B82FE\l  %190 = tail call double @llvm.rint.f64(double %189)\l  %191 = fneg double %190\l  %192 = tail call double @llvm.fma.f64(double %191, double\l... 0x3FE62E42FEFA39EF, double %185)\l  %193 = tail call double @llvm.fma.f64(double %191, double\l... 0x3C7ABC9E3B39803F, double %192)\l  %194 = tail call double @llvm.fma.f64(double %193, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %195 = tail call double @llvm.fma.f64(double %193, double %194, double\l... 0x3EC71DEE623FDE64)\l  %196 = tail call double @llvm.fma.f64(double %193, double %195, double\l... 0x3EFA01997C89E6B0)\l  %197 = tail call double @llvm.fma.f64(double %193, double %196, double\l... 0x3F2A01A014761F6E)\l  %198 = tail call double @llvm.fma.f64(double %193, double %197, double\l... 0x3F56C16C1852B7B0)\l  %199 = tail call double @llvm.fma.f64(double %193, double %198, double\l... 0x3F81111111122322)\l  %200 = tail call double @llvm.fma.f64(double %193, double %199, double\l... 0x3FA55555555502A1)\l  %201 = tail call double @llvm.fma.f64(double %193, double %200, double\l... 0x3FC5555555555511)\l  %202 = tail call double @llvm.fma.f64(double %193, double %201, double\l... 0x3FE000000000000B)\l  %203 = tail call double @llvm.fma.f64(double %193, double %202, double\l... 1.000000e+00)\l  %204 = tail call double @llvm.fma.f64(double %193, double %203, double\l... 1.000000e+00)\l  %205 = fptosi double %190 to i32\l  %206 = tail call double @llvm.amdgcn.ldexp.f64(double %204, i32 %205)\l  %207 = fcmp ogt double %185, 1.024000e+03\l  %208 = select i1 %207, double 0x7FF0000000000000, double %206\l  %209 = fcmp olt double %185, -1.075000e+03\l  %210 = select i1 %209, double 0.000000e+00, double %208\l  %211 = tail call double @llvm.fma.f64(double %210, double %188, double %210)\l  %212 = tail call double @llvm.fabs.f64(double %210) #3\l  %213 = fcmp oeq double %212, 0x7FF0000000000000\l  %214 = select i1 %213, double %210, double %211\l  %215 = fcmp olt double %56, 0.000000e+00\l  %216 = and i1 %33, %215\l  %217 = select i1 %216, double -0.000000e+00, double 0.000000e+00\l  %218 = tail call double @llvm.copysign.f64(double %214, double %217)\l  %219 = fcmp uge double %56, 0.000000e+00\l  %220 = select i1 %219, i1 true, i1 %34\l  %221 = select i1 %220, double %218, double 0x7FF8000000000000\l  %222 = fcmp oeq double %57, 1.000000e+00\l  %223 = fadd double %57, -1.000000e+00\l  %224 = bitcast double %223 to \<2 x i32\>\l  %225 = extractelement \<2 x i32\> %224, i64 1\l  %226 = xor i32 %225, %37\l  %227 = icmp sgt i32 %226, -1\l  %228 = select i1 %227, double 0x7FF0000000000000, double 0.000000e+00\l  %229 = select i1 %222, double %57, double %228\l  %230 = select i1 %35, double %229, double %221\l  %231 = fcmp oeq double %57, 0x7FF0000000000000\l  %232 = fcmp oeq double %56, 0.000000e+00\l  %233 = or i1 %232, %231\l  %234 = xor i1 %38, %232\l  %235 = select i1 %234, double 0.000000e+00, double 0x7FF0000000000000\l  %236 = select i1 %33, double %56, double 0.000000e+00\l  %237 = tail call double @llvm.copysign.f64(double %235, double %236)\l  %238 = select i1 %233, double %237, double %230\l  %239 = fcmp uno double %56, %4\l  %240 = select i1 %239, double 0x7FF8000000000000, double %238\l  %241 = fcmp oeq double %56, 1.000000e+00\l  %242 = or i1 %39, %241\l  %243 = select i1 %242, double 1.000000e+00, double %240\l  %244 = getelementptr inbounds double, double addrspace(1)* %5, i64 %54\l  store double %243, double addrspace(1)* %244, align 8, !tbaa !16\l  br label %245\l}"];
	Node0x5eb6430 -> Node0x5eb6040;
	Node0x5eb6040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%245:\l245:                                              \l  %246 = add i32 %45, %48\l  %247 = icmp slt i32 %246, %0\l  br i1 %247, label %47, label %46, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5eb6040:s0 -> Node0x5eb5ec0;
	Node0x5eb6040:s1 -> Node0x5eb3720;
}
