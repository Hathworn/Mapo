digraph "CFG for '_Z18mul_strided_doubleiiiPdS_iiS_' function" {
	label="CFG for '_Z18mul_strided_doubleiiiPdS_iiS_' function";

	Node0x5652880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !6\l  %18 = mul i32 %9, %14\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %20 = add i32 %18, %19\l  %21 = icmp slt i32 %20, %0\l  br i1 %21, label %22, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5652880:s0 -> Node0x5654b00;
	Node0x5652880:s1 -> Node0x5654b90;
	Node0x5654b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%22:\l22:                                               \l  %23 = udiv i32 %17, %14\l  %24 = mul i32 %23, %14\l  %25 = icmp ugt i32 %17, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %14\l  br label %30\l}"];
	Node0x5654b00 -> Node0x5655010;
	Node0x5654b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%29:\l29:                                               \l  ret void\l}"];
	Node0x5655010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ %20, %22 ], [ %50, %49 ]\l  %32 = icmp slt i32 %31, %1\l  %33 = icmp slt i32 %31, %2\l  %34 = select i1 %32, i1 true, i1 %33\l  br i1 %34, label %49, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5655010:s0 -> Node0x5655120;
	Node0x5655010:s1 -> Node0x5654440;
	Node0x5654440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%35:\l35:                                               \l  %36 = srem i32 %31, %5\l  %37 = icmp eq i32 %36, 0\l  br i1 %37, label %38, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5654440:s0 -> Node0x56557b0;
	Node0x5654440:s1 -> Node0x5655120;
	Node0x56557b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%38:\l38:                                               \l  %39 = srem i32 %31, %6\l  %40 = icmp eq i32 %39, 0\l  br i1 %40, label %41, label %49\l|{<s0>T|<s1>F}}"];
	Node0x56557b0:s0 -> Node0x56559d0;
	Node0x56557b0:s1 -> Node0x5655120;
	Node0x56559d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%41:\l41:                                               \l  %42 = sext i32 %31 to i64\l  %43 = getelementptr inbounds double, double addrspace(1)* %4, i64 %42\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !16\l  %45 = getelementptr inbounds double, double addrspace(1)* %3, i64 %42\l  %46 = load double, double addrspace(1)* %45, align 8, !tbaa !16\l  %47 = fmul contract double %44, %46\l  %48 = getelementptr inbounds double, double addrspace(1)* %7, i64 %42\l  store double %47, double addrspace(1)* %48, align 8, !tbaa !16\l  br label %49\l}"];
	Node0x56559d0 -> Node0x5655120;
	Node0x5655120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = add i32 %28, %31\l  %51 = icmp slt i32 %50, %0\l  br i1 %51, label %30, label %29, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5655120:s0 -> Node0x5655010;
	Node0x5655120:s1 -> Node0x5654b90;
}
