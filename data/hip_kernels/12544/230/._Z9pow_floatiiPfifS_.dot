digraph "CFG for '_Z9pow_floatiiPfifS_' function" {
	label="CFG for '_Z9pow_floatiiPfifS_' function";

	Node0x5ecee40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = mul i32 %7, %12\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %18 = add i32 %16, %17\l  %19 = icmp slt i32 %18, %0\l  br i1 %19, label %20, label %45\l|{<s0>T|<s1>F}}"];
	Node0x5ecee40:s0 -> Node0x5ed1090;
	Node0x5ecee40:s1 -> Node0x5ed1120;
	Node0x5ed1090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%20:\l20:                                               \l  %21 = tail call float @llvm.fabs.f32(float %4)\l  %22 = tail call float @llvm.trunc.f32(float %21)\l  %23 = fcmp oeq float %21, %22\l  %24 = zext i1 %23 to i32\l  %25 = fmul float %22, 5.000000e-01\l  %26 = tail call float @llvm.amdgcn.fract.f32(float %25)\l  %27 = tail call i1 @llvm.amdgcn.class.f32(float %25, i32 516)\l  %28 = select i1 %27, float 0.000000e+00, float %26\l  %29 = fcmp oeq float %28, 0.000000e+00\l  %30 = and i1 %23, %29\l  %31 = zext i1 %30 to i32\l  %32 = add nuw nsw i32 %31, %24\l  %33 = icmp eq i32 %32, 1\l  %34 = icmp ne i32 %32, 0\l  %35 = fcmp oeq float %21, 0x7FF0000000000000\l  %36 = bitcast float %4 to i32\l  %37 = fcmp olt float %4, 0.000000e+00\l  %38 = fcmp oeq float %4, 0.000000e+00\l  %39 = udiv i32 %15, %12\l  %40 = mul i32 %39, %12\l  %41 = icmp ugt i32 %15, %40\l  %42 = zext i1 %41 to i32\l  %43 = add i32 %39, %42\l  %44 = mul i32 %43, %12\l  br label %46\l}"];
	Node0x5ed1090 -> Node0x5ed31f0;
	Node0x5ed1120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%45:\l45:                                               \l  ret void\l}"];
	Node0x5ed31f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i32 [ %18, %20 ], [ %231, %230 ]\l  %48 = icmp slt i32 %47, %1\l  br i1 %48, label %230, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5ed31f0:s0 -> Node0x5ed3370;
	Node0x5ed31f0:s1 -> Node0x5ed3500;
	Node0x5ed3500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%49:\l49:                                               \l  %50 = srem i32 %47, %3\l  %51 = icmp eq i32 %50, 0\l  br i1 %51, label %52, label %230\l|{<s0>T|<s1>F}}"];
	Node0x5ed3500:s0 -> Node0x5ed3760;
	Node0x5ed3500:s1 -> Node0x5ed3370;
	Node0x5ed3760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%52:\l52:                                               \l  %53 = sext i32 %47 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %2, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %56 = tail call float @llvm.fabs.f32(float %55)\l  %57 = tail call float @llvm.amdgcn.frexp.mant.f32(float %56)\l  %58 = fcmp olt float %57, 0x3FE5555560000000\l  %59 = zext i1 %58 to i32\l  %60 = tail call float @llvm.amdgcn.ldexp.f32(float %57, i32 %59)\l  %61 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %56)\l  %62 = sub nsw i32 %61, %59\l  %63 = fadd float %60, -1.000000e+00\l  %64 = fadd float %60, 1.000000e+00\l  %65 = fadd float %64, -1.000000e+00\l  %66 = fsub float %60, %65\l  %67 = tail call float @llvm.amdgcn.rcp.f32(float %64)\l  %68 = fmul float %63, %67\l  %69 = fmul float %64, %68\l  %70 = fneg float %69\l  %71 = tail call float @llvm.fma.f32(float %68, float %64, float %70)\l  %72 = tail call float @llvm.fma.f32(float %68, float %66, float %71)\l  %73 = fadd float %69, %72\l  %74 = fsub float %73, %69\l  %75 = fsub float %72, %74\l  %76 = fsub float %63, %73\l  %77 = fsub float %63, %76\l  %78 = fsub float %77, %73\l  %79 = fsub float %78, %75\l  %80 = fadd float %76, %79\l  %81 = fmul float %67, %80\l  %82 = fadd float %68, %81\l  %83 = fsub float %82, %68\l  %84 = fsub float %81, %83\l  %85 = fmul float %82, %82\l  %86 = fneg float %85\l  %87 = tail call float @llvm.fma.f32(float %82, float %82, float %86)\l  %88 = fmul float %84, 2.000000e+00\l  %89 = tail call float @llvm.fma.f32(float %82, float %88, float %87)\l  %90 = fadd float %85, %89\l  %91 = fsub float %90, %85\l  %92 = fsub float %89, %91\l  %93 = tail call float @llvm.fmuladd.f32(float %90, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %94 = tail call float @llvm.fmuladd.f32(float %90, float %93, float\l... 0x3FD999BDE0000000)\l  %95 = sitofp i32 %62 to float\l  %96 = fmul float %95, 0x3FE62E4300000000\l  %97 = fneg float %96\l  %98 = tail call float @llvm.fma.f32(float %95, float 0x3FE62E4300000000,\l... float %97)\l  %99 = tail call float @llvm.fma.f32(float %95, float 0xBE205C6100000000,\l... float %98)\l  %100 = fadd float %96, %99\l  %101 = fsub float %100, %96\l  %102 = fsub float %99, %101\l  %103 = tail call float @llvm.amdgcn.ldexp.f32(float %82, i32 1)\l  %104 = fmul float %82, %90\l  %105 = fneg float %104\l  %106 = tail call float @llvm.fma.f32(float %90, float %82, float %105)\l  %107 = tail call float @llvm.fma.f32(float %90, float %84, float %106)\l  %108 = tail call float @llvm.fma.f32(float %92, float %82, float %107)\l  %109 = fadd float %104, %108\l  %110 = fsub float %109, %104\l  %111 = fsub float %108, %110\l  %112 = fmul float %90, %94\l  %113 = fneg float %112\l  %114 = tail call float @llvm.fma.f32(float %90, float %94, float %113)\l  %115 = tail call float @llvm.fma.f32(float %92, float %94, float %114)\l  %116 = fadd float %112, %115\l  %117 = fsub float %116, %112\l  %118 = fsub float %115, %117\l  %119 = fadd float %116, 0x3FE5555540000000\l  %120 = fadd float %119, 0xBFE5555540000000\l  %121 = fsub float %116, %120\l  %122 = fadd float %118, 0x3E2E720200000000\l  %123 = fadd float %122, %121\l  %124 = fadd float %119, %123\l  %125 = fsub float %124, %119\l  %126 = fsub float %123, %125\l  %127 = fmul float %109, %124\l  %128 = fneg float %127\l  %129 = tail call float @llvm.fma.f32(float %109, float %124, float %128)\l  %130 = tail call float @llvm.fma.f32(float %109, float %126, float %129)\l  %131 = tail call float @llvm.fma.f32(float %111, float %124, float %130)\l  %132 = tail call float @llvm.amdgcn.ldexp.f32(float %84, i32 1)\l  %133 = fadd float %127, %131\l  %134 = fsub float %133, %127\l  %135 = fsub float %131, %134\l  %136 = fadd float %103, %133\l  %137 = fsub float %136, %103\l  %138 = fsub float %133, %137\l  %139 = fadd float %132, %135\l  %140 = fadd float %139, %138\l  %141 = fadd float %136, %140\l  %142 = fsub float %141, %136\l  %143 = fsub float %140, %142\l  %144 = fadd float %100, %141\l  %145 = fsub float %144, %100\l  %146 = fsub float %144, %145\l  %147 = fsub float %100, %146\l  %148 = fsub float %141, %145\l  %149 = fadd float %148, %147\l  %150 = fadd float %102, %143\l  %151 = fsub float %150, %102\l  %152 = fsub float %150, %151\l  %153 = fsub float %102, %152\l  %154 = fsub float %143, %151\l  %155 = fadd float %154, %153\l  %156 = fadd float %150, %149\l  %157 = fadd float %144, %156\l  %158 = fsub float %157, %144\l  %159 = fsub float %156, %158\l  %160 = fadd float %155, %159\l  %161 = fadd float %157, %160\l  %162 = fsub float %161, %157\l  %163 = fsub float %160, %162\l  %164 = fmul float %161, %4\l  %165 = fneg float %164\l  %166 = tail call float @llvm.fma.f32(float %4, float %161, float %165)\l  %167 = tail call float @llvm.fma.f32(float %4, float %163, float %166)\l  %168 = fadd float %164, %167\l  %169 = fsub float %168, %164\l  %170 = fsub float %167, %169\l  %171 = tail call float @llvm.fabs.f32(float %164) #3\l  %172 = fcmp oeq float %171, 0x7FF0000000000000\l  %173 = select i1 %172, float %164, float %168\l  %174 = tail call float @llvm.fabs.f32(float %173) #3\l  %175 = fcmp oeq float %174, 0x7FF0000000000000\l  %176 = select i1 %175, float 0.000000e+00, float %170\l  %177 = fcmp oeq float %173, 0x40562E4300000000\l  %178 = select i1 %177, float 0x3EE0000000000000, float 0.000000e+00\l  %179 = fsub float %173, %178\l  %180 = fadd float %178, %176\l  %181 = fmul float %179, 0x3FF7154760000000\l  %182 = tail call float @llvm.rint.f32(float %181)\l  %183 = fcmp ogt float %179, 0x40562E4300000000\l  %184 = fcmp olt float %179, 0xC059D1DA00000000\l  %185 = fneg float %181\l  %186 = tail call float @llvm.fma.f32(float %179, float 0x3FF7154760000000,\l... float %185)\l  %187 = tail call float @llvm.fma.f32(float %179, float 0x3E54AE0BE0000000,\l... float %186)\l  %188 = fsub float %181, %182\l  %189 = fadd float %187, %188\l  %190 = tail call float @llvm.exp2.f32(float %189)\l  %191 = fptosi float %182 to i32\l  %192 = tail call float @llvm.amdgcn.ldexp.f32(float %190, i32 %191)\l  %193 = select i1 %184, float 0.000000e+00, float %192\l  %194 = select i1 %183, float 0x7FF0000000000000, float %193\l  %195 = tail call float @llvm.fma.f32(float %194, float %180, float %194)\l  %196 = tail call float @llvm.fabs.f32(float %194) #3\l  %197 = fcmp oeq float %196, 0x7FF0000000000000\l  %198 = select i1 %197, float %194, float %195\l  %199 = fcmp olt float %55, 0.000000e+00\l  %200 = and i1 %33, %199\l  %201 = select i1 %200, float -0.000000e+00, float 0.000000e+00\l  %202 = tail call float @llvm.copysign.f32(float %198, float %201)\l  %203 = fcmp uge float %55, 0.000000e+00\l  %204 = select i1 %203, i1 true, i1 %34\l  %205 = select i1 %204, float %202, float 0x7FF8000000000000\l  br i1 %35, label %206, label %214\l|{<s0>T|<s1>F}}"];
	Node0x5ed3760:s0 -> Node0x5edb860;
	Node0x5ed3760:s1 -> Node0x5edb8f0;
	Node0x5edb860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%206:\l206:                                              \l  %207 = fcmp oeq float %56, 1.000000e+00\l  %208 = fadd float %56, -1.000000e+00\l  %209 = bitcast float %208 to i32\l  %210 = xor i32 %209, %36\l  %211 = icmp sgt i32 %210, -1\l  %212 = select i1 %211, float 0x7FF0000000000000, float 0.000000e+00\l  %213 = select i1 %207, float %56, float %212\l  br label %214\l}"];
	Node0x5edb860 -> Node0x5edb8f0;
	Node0x5edb8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%214:\l214:                                              \l  %215 = phi float [ %205, %52 ], [ %213, %206 ]\l  %216 = fcmp oeq float %56, 0x7FF0000000000000\l  %217 = fcmp oeq float %55, 0.000000e+00\l  %218 = or i1 %217, %216\l  %219 = xor i1 %37, %217\l  %220 = select i1 %219, float 0.000000e+00, float 0x7FF0000000000000\l  %221 = select i1 %33, float %55, float 0.000000e+00\l  %222 = tail call float @llvm.copysign.f32(float %220, float %221)\l  %223 = select i1 %218, float %222, float %215\l  %224 = fcmp uno float %55, %4\l  %225 = select i1 %224, float 0x7FF8000000000000, float %223\l  %226 = fcmp oeq float %55, 1.000000e+00\l  %227 = or i1 %38, %226\l  %228 = select i1 %227, float 1.000000e+00, float %225\l  %229 = getelementptr inbounds float, float addrspace(1)* %5, i64 %53\l  store float %228, float addrspace(1)* %229, align 4, !tbaa !16\l  br label %230\l}"];
	Node0x5edb8f0 -> Node0x5ed3370;
	Node0x5ed3370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%230:\l230:                                              \l  %231 = add i32 %44, %47\l  %232 = icmp slt i32 %231, %0\l  br i1 %232, label %46, label %45, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5ed3370:s0 -> Node0x5ed31f0;
	Node0x5ed3370:s1 -> Node0x5ed1120;
}
