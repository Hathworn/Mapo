digraph "CFG for '_Z11tanh_doubleiiPdiS_' function" {
	label="CFG for '_Z11tanh_doubleiiPdiS_' function";

	Node0x57ae350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = icmp slt i32 %17, %0\l  br i1 %18, label %19, label %26\l|{<s0>T|<s1>F}}"];
	Node0x57ae350:s0 -> Node0x57b0580;
	Node0x57ae350:s1 -> Node0x57b0610;
	Node0x57b0580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%19:\l19:                                               \l  %20 = udiv i32 %14, %11\l  %21 = mul i32 %20, %11\l  %22 = icmp ugt i32 %14, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %11\l  br label %27\l}"];
	Node0x57b0580 -> Node0x57b0a90;
	Node0x57b0610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%26:\l26:                                               \l  ret void\l}"];
	Node0x57b0a90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %17, %19 ], [ %189, %188 ]\l  %29 = icmp slt i32 %28, %1\l  br i1 %29, label %188, label %30\l|{<s0>T|<s1>F}}"];
	Node0x57b0a90:s0 -> Node0x57b0ba0;
	Node0x57b0a90:s1 -> Node0x57b0d30;
	Node0x57b0d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%30:\l30:                                               \l  %31 = srem i32 %28, %3\l  %32 = icmp eq i32 %31, 0\l  br i1 %32, label %33, label %188\l|{<s0>T|<s1>F}}"];
	Node0x57b0d30:s0 -> Node0x57b03e0;
	Node0x57b0d30:s1 -> Node0x57b0ba0;
	Node0x57b03e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%33:\l33:                                               \l  %34 = sext i32 %28 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %2, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !16\l  %37 = tail call double @llvm.fabs.f64(double %36)\l  %38 = fmul double %37, 0x3FF71547652B82FE\l  %39 = tail call double @llvm.rint.f64(double %38)\l  %40 = tail call double @llvm.fma.f64(double %39, double 0xBFE62E42FEFA3000,\l... double %37)\l  %41 = fadd double %40, 0.000000e+00\l  %42 = fsub double %40, %41\l  %43 = fadd double %42, 0.000000e+00\l  %44 = fmul double %39, 0x3D53DE6AF278E000\l  %45 = fsub double %41, %44\l  %46 = fsub double %41, %45\l  %47 = fsub double %46, %44\l  %48 = fadd double %43, %47\l  %49 = fadd double %45, %48\l  %50 = fsub double %49, %45\l  %51 = fsub double %48, %50\l  %52 = fmul double %39, 0x3AC9CC01F97B57A0\l  %53 = fsub double %49, %52\l  %54 = fsub double %49, %53\l  %55 = fsub double %54, %52\l  %56 = fadd double %51, %55\l  %57 = fadd double %53, %56\l  %58 = fsub double %57, %53\l  %59 = fsub double %56, %58\l  %60 = tail call double @llvm.fma.f64(double %57, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %61 = tail call double @llvm.fma.f64(double %57, double %60, double\l... 0x3EC71DEE623FDE64)\l  %62 = tail call double @llvm.fma.f64(double %57, double %61, double\l... 0x3EFA01997C89E6B0)\l  %63 = tail call double @llvm.fma.f64(double %57, double %62, double\l... 0x3F2A01A014761F6E)\l  %64 = tail call double @llvm.fma.f64(double %57, double %63, double\l... 0x3F56C16C1852B7B0)\l  %65 = tail call double @llvm.fma.f64(double %57, double %64, double\l... 0x3F81111111122322)\l  %66 = tail call double @llvm.fma.f64(double %57, double %65, double\l... 0x3FA55555555502A1)\l  %67 = tail call double @llvm.fma.f64(double %57, double %66, double\l... 0x3FC5555555555511)\l  %68 = tail call double @llvm.fma.f64(double %57, double %67, double\l... 0x3FE000000000000B)\l  %69 = fmul double %57, %57\l  %70 = fneg double %69\l  %71 = tail call double @llvm.fma.f64(double %57, double %57, double %70)\l  %72 = fmul double %59, 2.000000e+00\l  %73 = tail call double @llvm.fma.f64(double %57, double %72, double %71)\l  %74 = fadd double %69, %73\l  %75 = fsub double %74, %69\l  %76 = fsub double %73, %75\l  %77 = fmul double %74, %68\l  %78 = fneg double %77\l  %79 = tail call double @llvm.fma.f64(double %74, double %68, double %78)\l  %80 = tail call double @llvm.fma.f64(double %76, double %68, double %79)\l  %81 = fadd double %77, %80\l  %82 = fsub double %81, %77\l  %83 = fsub double %80, %82\l  %84 = fadd double %57, %81\l  %85 = fsub double %84, %57\l  %86 = fsub double %81, %85\l  %87 = fadd double %59, %83\l  %88 = fadd double %87, %86\l  %89 = fadd double %84, %88\l  %90 = fsub double %89, %84\l  %91 = fsub double %88, %90\l  %92 = fadd double %89, 1.000000e+00\l  %93 = fadd double %92, -1.000000e+00\l  %94 = fsub double %89, %93\l  %95 = fadd double %91, %94\l  %96 = fadd double %92, %95\l  %97 = fsub double %96, %92\l  %98 = fsub double %95, %97\l  %99 = fptosi double %39 to i32\l  %100 = tail call double @llvm.amdgcn.ldexp.f64(double %96, i32 %99)\l  %101 = tail call double @llvm.amdgcn.ldexp.f64(double %98, i32 %99)\l  %102 = tail call double @llvm.amdgcn.rcp.f64(double %100)\l  %103 = fneg double %100\l  %104 = tail call double @llvm.fma.f64(double %103, double %102, double\l... 1.000000e+00)\l  %105 = tail call double @llvm.fma.f64(double %104, double %102, double %102)\l  %106 = tail call double @llvm.fma.f64(double %103, double %105, double\l... 1.000000e+00)\l  %107 = tail call double @llvm.fma.f64(double %106, double %105, double %105)\l  %108 = fmul double %100, %107\l  %109 = fneg double %108\l  %110 = tail call double @llvm.fma.f64(double %107, double %100, double %109)\l  %111 = tail call double @llvm.fma.f64(double %107, double %101, double %110)\l  %112 = fadd double %108, %111\l  %113 = fsub double %112, %108\l  %114 = fsub double %111, %113\l  %115 = fsub double 1.000000e+00, %112\l  %116 = fsub double 1.000000e+00, %115\l  %117 = fsub double %116, %112\l  %118 = fsub double %117, %114\l  %119 = fadd double %115, %118\l  %120 = fsub double %119, %115\l  %121 = fsub double %118, %120\l  %122 = fmul double %107, %119\l  %123 = fmul double %100, %122\l  %124 = fneg double %123\l  %125 = tail call double @llvm.fma.f64(double %122, double %100, double %124)\l  %126 = tail call double @llvm.fma.f64(double %122, double %101, double %125)\l  %127 = fadd double %123, %126\l  %128 = fsub double %127, %123\l  %129 = fsub double %126, %128\l  %130 = fsub double %119, %127\l  %131 = fsub double %119, %130\l  %132 = fsub double %131, %127\l  %133 = fadd double %121, %132\l  %134 = fsub double %133, %129\l  %135 = fadd double %130, %134\l  %136 = fmul double %107, %135\l  %137 = fadd double %107, %122\l  %138 = fsub double %137, %107\l  %139 = fsub double %122, %138\l  %140 = fadd double %139, %136\l  %141 = fadd double %137, %140\l  %142 = fsub double %141, %137\l  %143 = fsub double %140, %142\l  %144 = fsub double %100, %141\l  %145 = fsub double %100, %144\l  %146 = fsub double %145, %141\l  %147 = fadd double %101, %146\l  %148 = fsub double %147, %143\l  %149 = fadd double %144, %148\l  %150 = fsub double %149, %144\l  %151 = fsub double %148, %150\l  %152 = fadd double %100, %141\l  %153 = fsub double %152, %100\l  %154 = fsub double %141, %153\l  %155 = fadd double %101, %143\l  %156 = fadd double %155, %154\l  %157 = fadd double %152, %156\l  %158 = fsub double %157, %152\l  %159 = fsub double %156, %158\l  %160 = tail call double @llvm.amdgcn.rcp.f64(double %157)\l  %161 = fneg double %157\l  %162 = tail call double @llvm.fma.f64(double %161, double %160, double\l... 1.000000e+00)\l  %163 = tail call double @llvm.fma.f64(double %162, double %160, double %160)\l  %164 = tail call double @llvm.fma.f64(double %161, double %163, double\l... 1.000000e+00)\l  %165 = tail call double @llvm.fma.f64(double %164, double %163, double %163)\l  %166 = fmul double %149, %165\l  %167 = fmul double %157, %166\l  %168 = fneg double %167\l  %169 = tail call double @llvm.fma.f64(double %166, double %157, double %168)\l  %170 = tail call double @llvm.fma.f64(double %166, double %159, double %169)\l  %171 = fadd double %167, %170\l  %172 = fsub double %171, %167\l  %173 = fsub double %170, %172\l  %174 = fsub double %149, %171\l  %175 = fsub double %149, %174\l  %176 = fsub double %175, %171\l  %177 = fsub double %176, %173\l  %178 = fadd double %151, %177\l  %179 = fadd double %174, %178\l  %180 = fmul double %165, %179\l  %181 = fadd double %166, %180\l  %182 = fcmp ogt double %37, 1.906250e+01\l  %183 = select i1 %182, double 1.000000e+00, double %181\l  %184 = fcmp olt double %37, 0x3E40000000000000\l  %185 = select i1 %184, double %37, double %183\l  %186 = tail call double @llvm.copysign.f64(double %185, double %36)\l  %187 = getelementptr inbounds double, double addrspace(1)* %4, i64 %34\l  store double %186, double addrspace(1)* %187, align 8, !tbaa !16\l  br label %188\l}"];
	Node0x57b03e0 -> Node0x57b0ba0;
	Node0x57b0ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%188:\l188:                                              \l  %189 = add i32 %25, %28\l  %190 = icmp slt i32 %189, %0\l  br i1 %190, label %27, label %26, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x57b0ba0:s0 -> Node0x57b0a90;
	Node0x57b0ba0:s1 -> Node0x57b0610;
}
