digraph "CFG for '_Z20computeHessianListS1PfS_S_PiS0_S0_iPdS1_S1_ddS1_S1_S1_S1_S1_i' function" {
	label="CFG for '_Z20computeHessianListS1PfS_S_PiS0_S0_iPdS1_S1_ddS1_S1_S1_S1_S1_i' function";

	Node0x576b2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%18:\l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = getelementptr inbounds i8, i8 addrspace(4)* %19, i64 12\l  %25 = bitcast i8 addrspace(4)* %24 to i32 addrspace(4)*\l  %26 = load i32, i32 addrspace(4)* %25, align 4, !tbaa !6\l  %27 = udiv i32 %26, %23\l  %28 = mul i32 %27, %23\l  %29 = icmp ugt i32 %26, %28\l  %30 = zext i1 %29 to i32\l  %31 = add i32 %27, %30\l  %32 = mul i32 %31, %23\l  %33 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %34 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %35 = icmp slt i32 %33, 6\l  %36 = icmp slt i32 %34, 6\l  %37 = select i1 %35, i1 %36, i1 false\l  br i1 %37, label %38, label %154\l|{<s0>T|<s1>F}}"];
	Node0x576b2f0:s0 -> Node0x576e6e0;
	Node0x576b2f0:s1 -> Node0x576e770;
	Node0x576e6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%38:\l38:                                               \l  %39 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %40 = mul i32 %39, %23\l  %41 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %42 = add i32 %40, %41\l  %43 = mul nsw i32 %33, %17\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds double, double addrspace(1)* %15, i64 %44\l  %46 = mul nsw i32 %17, 6\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds double, double addrspace(1)* %45, i64 %47\l  %49 = getelementptr inbounds double, double addrspace(1)* %48, i64 %47\l  %50 = mul nsw i32 %34, %17\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds double, double addrspace(1)* %14, i64 %51\l  %53 = mul nsw i32 %33, 6\l  %54 = add nsw i32 %53, %34\l  %55 = mul nsw i32 %54, %6\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds double, double addrspace(1)* %12, i64 %56\l  %58 = mul nsw i32 %34, %6\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds double, double addrspace(1)* %16, i64 %59\l  %61 = mul nsw i32 %6, 6\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds double, double addrspace(1)* %60, i64 %62\l  %64 = getelementptr inbounds double, double addrspace(1)* %63, i64 %62\l  %65 = icmp slt i32 %42, %6\l  br i1 %65, label %66, label %154\l|{<s0>T|<s1>F}}"];
	Node0x576e6e0:s0 -> Node0x576e080;
	Node0x576e6e0:s1 -> Node0x576e770;
	Node0x576e080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%66:\l66:                                               \l  %67 = fneg contract double %11\l  br label %68\l}"];
	Node0x576e080 -> Node0x576fff0;
	Node0x576fff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%68:\l68:                                               \l  %69 = phi i32 [ %42, %66 ], [ %99, %96 ]\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %70\l  %72 = load i32, i32 addrspace(1)* %71, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %76 = fpext float %75 to double\l  %77 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %79 = fpext float %78 to double\l  %80 = getelementptr inbounds float, float addrspace(1)* %2, i64 %73\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %82 = fpext float %81 to double\l  %83 = getelementptr inbounds double, double addrspace(1)* %60, i64 %70\l  %84 = load double, double addrspace(1)* %83, align 8, !tbaa !22\l  %85 = getelementptr inbounds double, double addrspace(1)* %63, i64 %70\l  %86 = load double, double addrspace(1)* %85, align 8, !tbaa !22\l  %87 = getelementptr inbounds double, double addrspace(1)* %64, i64 %70\l  %88 = load double, double addrspace(1)* %87, align 8, !tbaa !22\l  %89 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %70\l  %90 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %91 = add nsw i32 %69, 1\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %92\l  %94 = load i32, i32 addrspace(1)* %93, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %95 = icmp slt i32 %90, %94\l  br i1 %95, label %101, label %96\l|{<s0>T|<s1>F}}"];
	Node0x576fff0:s0 -> Node0x5772d20;
	Node0x576fff0:s1 -> Node0x57700b0;
	Node0x57700b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%96:\l96:                                               \l  %97 = phi double [ 0.000000e+00, %68 ], [ %151, %150 ]\l  %98 = getelementptr inbounds double, double addrspace(1)* %57, i64 %70\l  store double %97, double addrspace(1)* %98, align 8, !tbaa !22\l  %99 = add nsw i32 %69, %32\l  %100 = icmp slt i32 %99, %6\l  br i1 %100, label %68, label %154, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x57700b0:s0 -> Node0x576fff0;
	Node0x57700b0:s1 -> Node0x576e770;
	Node0x5772d20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%101:\l101:                                              \l  %102 = phi double [ %151, %150 ], [ 0.000000e+00, %68 ]\l  %103 = phi i32 [ %152, %150 ], [ %90, %68 ]\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds double, double addrspace(1)* %13, i64 %104\l  %106 = load double, double addrspace(1)* %105, align 8, !tbaa !22\l  %107 = fcmp contract ogt double %106, 1.000000e+00\l  %108 = fcmp contract olt double %106, 0.000000e+00\l  %109 = or i1 %107, %108\l  %110 = fcmp contract uno double %106, 0.000000e+00\l  %111 = or i1 %110, %109\l  br i1 %111, label %150, label %112\l|{<s0>T|<s1>F}}"];
	Node0x5772d20:s0 -> Node0x57738b0;
	Node0x5772d20:s1 -> Node0x5774410;
	Node0x5774410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%112:\l112:                                              \l  %113 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %104\l  %114 = load i32, i32 addrspace(1)* %113, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %115 = getelementptr inbounds double, double addrspace(1)* %45, i64 %104\l  %116 = load double, double addrspace(1)* %115, align 8, !tbaa !22\l  %117 = getelementptr inbounds double, double addrspace(1)* %48, i64 %104\l  %118 = load double, double addrspace(1)* %117, align 8, !tbaa !22\l  %119 = getelementptr inbounds double, double addrspace(1)* %49, i64 %104\l  %120 = load double, double addrspace(1)* %119, align 8, !tbaa !22\l  %121 = fmul contract double %106, %10\l  %122 = sext i32 %114 to i64\l  %123 = getelementptr inbounds double, double addrspace(1)* %7, i64 %122\l  %124 = load double, double addrspace(1)* %123, align 8, !tbaa !22\l  %125 = fsub contract double %76, %124\l  %126 = fmul contract double %116, %125\l  %127 = getelementptr inbounds double, double addrspace(1)* %8, i64 %122\l  %128 = load double, double addrspace(1)* %127, align 8, !tbaa !22\l  %129 = fsub contract double %79, %128\l  %130 = fmul contract double %118, %129\l  %131 = fadd contract double %126, %130\l  %132 = getelementptr inbounds double, double addrspace(1)* %9, i64 %122\l  %133 = load double, double addrspace(1)* %132, align 8, !tbaa !22\l  %134 = fsub contract double %82, %133\l  %135 = fmul contract double %120, %134\l  %136 = fadd contract double %131, %135\l  %137 = fmul contract double %136, %67\l  %138 = getelementptr inbounds double, double addrspace(1)* %52, i64 %104\l  %139 = load double, double addrspace(1)* %138, align 8, !tbaa !22\l  %140 = fmul contract double %139, %137\l  %141 = fmul contract double %121, %140\l  %142 = fadd contract double %102, %141\l  %143 = fmul contract double %84, %116\l  %144 = fmul contract double %86, %118\l  %145 = fadd contract double %143, %144\l  %146 = fmul contract double %88, %120\l  %147 = fadd contract double %145, %146\l  %148 = fmul contract double %121, %147\l  %149 = fadd contract double %148, %142\l  br label %150\l}"];
	Node0x5774410 -> Node0x57738b0;
	Node0x57738b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%150:\l150:                                              \l  %151 = phi double [ %102, %101 ], [ %149, %112 ]\l  %152 = add nsw i32 %103, 1\l  %153 = icmp slt i32 %152, %94\l  br i1 %153, label %101, label %96, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x57738b0:s0 -> Node0x5772d20;
	Node0x57738b0:s1 -> Node0x57700b0;
	Node0x576e770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%154:\l154:                                              \l  ret void\l}"];
}
