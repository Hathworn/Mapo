digraph "CFG for '_Z15shortcut_kerneliiiiiiiiiiPfiiiffS_' function" {
	label="CFG for '_Z15shortcut_kerneliiiiiiiiiiPfiiiffS_' function";

	Node0x4cf1f00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 12\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 4, !tbaa !4\l  %24 = getelementptr i8, i8 addrspace(4)* %20, i64 4\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 4, !range !13, !invariant.load\l... !14\l  %27 = zext i16 %26 to i32\l  %28 = udiv i32 %23, %27\l  %29 = mul i32 %28, %27\l  %30 = icmp ugt i32 %23, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = mul i32 %32, %19\l  %34 = add i32 %33, %18\l  %35 = mul i32 %34, %27\l  %36 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %37 = add i32 %35, %36\l  %38 = icmp slt i32 %37, %0\l  br i1 %38, label %39, label %79\l|{<s0>T|<s1>F}}"];
	Node0x4cf1f00:s0 -> Node0x4cf5440;
	Node0x4cf1f00:s1 -> Node0x4cf54d0;
	Node0x4cf5440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%39:\l39:                                               \l  %40 = freeze i32 %37\l  %41 = freeze i32 %1\l  %42 = sdiv i32 %40, %41\l  %43 = mul i32 %42, %41\l  %44 = sub i32 %40, %43\l  %45 = freeze i32 %2\l  %46 = sdiv i32 %42, %45\l  %47 = mul i32 %46, %45\l  %48 = sub i32 %42, %47\l  %49 = freeze i32 %3\l  %50 = sdiv i32 %46, %49\l  %51 = mul i32 %50, %49\l  %52 = sub i32 %46, %51\l  %53 = srem i32 %50, %6\l  %54 = mul nsw i32 %44, %5\l  %55 = mul nsw i32 %48, %5\l  %56 = mul nsw i32 %53, %13\l  %57 = add nsw i32 %56, %52\l  %58 = mul nsw i32 %57, %12\l  %59 = add nsw i32 %58, %55\l  %60 = mul nsw i32 %59, %11\l  %61 = add nsw i32 %60, %54\l  %62 = mul nsw i32 %44, %4\l  %63 = mul nsw i32 %48, %4\l  %64 = mul nsw i32 %53, %9\l  %65 = add nsw i32 %64, %52\l  %66 = mul nsw i32 %65, %8\l  %67 = add nsw i32 %66, %63\l  %68 = mul nsw i32 %67, %7\l  %69 = add nsw i32 %68, %62\l  %70 = sext i32 %61 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %16, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %73 = fmul contract float %72, %14\l  %74 = sext i32 %69 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %10, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %77 = fmul contract float %76, %15\l  %78 = fadd contract float %73, %77\l  store float %78, float addrspace(1)* %71, align 4, !tbaa !16\l  br label %79\l}"];
	Node0x4cf5440 -> Node0x4cf54d0;
	Node0x4cf54d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  ret void\l}"];
}
