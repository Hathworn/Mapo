digraph "CFG for '_ZL11matMultCUDAPKfmS0_mPfmi' function" {
	label="CFG for '_ZL11matMultCUDAPKfmS0_mPfmi' function";

	Node0x49a9c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = shl i32 %10, 4\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = shl i32 %12, 4\l  %14 = icmp sgt i32 %6, 0\l  %15 = add nsw i32 %13, %9\l  %16 = sext i32 %15 to i64\l  br i1 %14, label %21, label %17\l|{<s0>T|<s1>F}}"];
	Node0x49a9c80:s0 -> Node0x49aa9e0;
	Node0x49a9c80:s1 -> Node0x49ac030;
	Node0x49ac030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%17:\l17:                                               \l  %18 = zext i32 %8 to i64\l  %19 = sext i32 %11 to i64\l  %20 = add nsw i64 %19, %18\l  br label %189\l}"];
	Node0x49ac030 -> Node0x49ac2e0;
	Node0x49aa9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%21:\l21:                                               \l  %22 = mul i64 %16, %1\l  %23 = zext i32 %8 to i64\l  %24 = add i64 %22, %23\l  %25 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 %8\l  %26 = sext i32 %11 to i64\l  %27 = add nsw i64 %26, %23\l  %28 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 %9, i32 %8\l  %29 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 0\l  %30 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 0, i32 %8\l  %31 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 1\l  %32 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 1, i32 %8\l  %33 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 2\l  %34 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 2, i32 %8\l  %35 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 3\l  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 3, i32 %8\l  %37 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 4\l  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 4, i32 %8\l  %39 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 5\l  %40 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 5, i32 %8\l  %41 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 6\l  %42 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 6, i32 %8\l  %43 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 7\l  %44 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 7, i32 %8\l  %45 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 8\l  %46 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 8, i32 %8\l  %47 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 9\l  %48 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 9, i32 %8\l  %49 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 10\l  %50 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 10, i32 %8\l  %51 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 11\l  %52 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 11, i32 %8\l  %53 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 12\l  %54 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 12, i32 %8\l  %55 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 13\l  %56 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 13, i32 %8\l  %57 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 14\l  %58 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 14, i32 %8\l  %59 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matA, i32 0, i32 %9, i32 15\l  %60 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZL11matMultCUDAPKfmS0_mPfmiE4matB, i32 0, i32 15, i32 %8\l  br label %61\l}"];
	Node0x49aa9e0 -> Node0x49ac590;
	Node0x49ac590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = phi float [ 0.000000e+00, %21 ], [ %186, %61 ]\l  %63 = phi float [ 0.000000e+00, %21 ], [ %184, %61 ]\l  %64 = phi i32 [ 0, %21 ], [ %187, %61 ]\l  %65 = zext i32 %64 to i64\l  %66 = add i64 %24, %65\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %68, float addrspace(3)* %25, align 4, !tbaa !5\l  %69 = add nuw nsw i32 %64, %9\l  %70 = zext i32 %69 to i64\l  %71 = mul i64 %70, %3\l  %72 = add i64 %27, %71\l  %73 = getelementptr inbounds float, float addrspace(1)* %2, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %74, float addrspace(3)* %28, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %75 = load float, float addrspace(3)* %29, align 16, !tbaa !5\l  %76 = load float, float addrspace(3)* %30, align 4, !tbaa !5\l  %77 = fmul contract float %75, %76\l  %78 = fsub contract float %62, %77\l  %79 = fsub contract float %63, %78\l  %80 = fsub contract float %79, %63\l  %81 = fadd contract float %78, %80\l  %82 = load float, float addrspace(3)* %31, align 4, !tbaa !5\l  %83 = load float, float addrspace(3)* %32, align 4, !tbaa !5\l  %84 = fmul contract float %82, %83\l  %85 = fsub contract float %81, %84\l  %86 = fsub contract float %79, %85\l  %87 = fsub contract float %86, %79\l  %88 = fadd contract float %85, %87\l  %89 = load float, float addrspace(3)* %33, align 8, !tbaa !5\l  %90 = load float, float addrspace(3)* %34, align 4, !tbaa !5\l  %91 = fmul contract float %89, %90\l  %92 = fsub contract float %88, %91\l  %93 = fsub contract float %86, %92\l  %94 = fsub contract float %93, %86\l  %95 = fadd contract float %92, %94\l  %96 = load float, float addrspace(3)* %35, align 4, !tbaa !5\l  %97 = load float, float addrspace(3)* %36, align 4, !tbaa !5\l  %98 = fmul contract float %96, %97\l  %99 = fsub contract float %95, %98\l  %100 = fsub contract float %93, %99\l  %101 = fsub contract float %100, %93\l  %102 = fadd contract float %99, %101\l  %103 = load float, float addrspace(3)* %37, align 16, !tbaa !5\l  %104 = load float, float addrspace(3)* %38, align 4, !tbaa !5\l  %105 = fmul contract float %103, %104\l  %106 = fsub contract float %102, %105\l  %107 = fsub contract float %100, %106\l  %108 = fsub contract float %107, %100\l  %109 = fadd contract float %106, %108\l  %110 = load float, float addrspace(3)* %39, align 4, !tbaa !5\l  %111 = load float, float addrspace(3)* %40, align 4, !tbaa !5\l  %112 = fmul contract float %110, %111\l  %113 = fsub contract float %109, %112\l  %114 = fsub contract float %107, %113\l  %115 = fsub contract float %114, %107\l  %116 = fadd contract float %113, %115\l  %117 = load float, float addrspace(3)* %41, align 8, !tbaa !5\l  %118 = load float, float addrspace(3)* %42, align 4, !tbaa !5\l  %119 = fmul contract float %117, %118\l  %120 = fsub contract float %116, %119\l  %121 = fsub contract float %114, %120\l  %122 = fsub contract float %121, %114\l  %123 = fadd contract float %120, %122\l  %124 = load float, float addrspace(3)* %43, align 4, !tbaa !5\l  %125 = load float, float addrspace(3)* %44, align 4, !tbaa !5\l  %126 = fmul contract float %124, %125\l  %127 = fsub contract float %123, %126\l  %128 = fsub contract float %121, %127\l  %129 = fsub contract float %128, %121\l  %130 = fadd contract float %127, %129\l  %131 = load float, float addrspace(3)* %45, align 16, !tbaa !5\l  %132 = load float, float addrspace(3)* %46, align 4, !tbaa !5\l  %133 = fmul contract float %131, %132\l  %134 = fsub contract float %130, %133\l  %135 = fsub contract float %128, %134\l  %136 = fsub contract float %135, %128\l  %137 = fadd contract float %134, %136\l  %138 = load float, float addrspace(3)* %47, align 4, !tbaa !5\l  %139 = load float, float addrspace(3)* %48, align 4, !tbaa !5\l  %140 = fmul contract float %138, %139\l  %141 = fsub contract float %137, %140\l  %142 = fsub contract float %135, %141\l  %143 = fsub contract float %142, %135\l  %144 = fadd contract float %141, %143\l  %145 = load float, float addrspace(3)* %49, align 8, !tbaa !5\l  %146 = load float, float addrspace(3)* %50, align 4, !tbaa !5\l  %147 = fmul contract float %145, %146\l  %148 = fsub contract float %144, %147\l  %149 = fsub contract float %142, %148\l  %150 = fsub contract float %149, %142\l  %151 = fadd contract float %148, %150\l  %152 = load float, float addrspace(3)* %51, align 4, !tbaa !5\l  %153 = load float, float addrspace(3)* %52, align 4, !tbaa !5\l  %154 = fmul contract float %152, %153\l  %155 = fsub contract float %151, %154\l  %156 = fsub contract float %149, %155\l  %157 = fsub contract float %156, %149\l  %158 = fadd contract float %155, %157\l  %159 = load float, float addrspace(3)* %53, align 16, !tbaa !5\l  %160 = load float, float addrspace(3)* %54, align 4, !tbaa !5\l  %161 = fmul contract float %159, %160\l  %162 = fsub contract float %158, %161\l  %163 = fsub contract float %156, %162\l  %164 = fsub contract float %163, %156\l  %165 = fadd contract float %162, %164\l  %166 = load float, float addrspace(3)* %55, align 4, !tbaa !5\l  %167 = load float, float addrspace(3)* %56, align 4, !tbaa !5\l  %168 = fmul contract float %166, %167\l  %169 = fsub contract float %165, %168\l  %170 = fsub contract float %163, %169\l  %171 = fsub contract float %170, %163\l  %172 = fadd contract float %169, %171\l  %173 = load float, float addrspace(3)* %57, align 8, !tbaa !5\l  %174 = load float, float addrspace(3)* %58, align 4, !tbaa !5\l  %175 = fmul contract float %173, %174\l  %176 = fsub contract float %172, %175\l  %177 = fsub contract float %170, %176\l  %178 = fsub contract float %177, %170\l  %179 = fadd contract float %176, %178\l  %180 = load float, float addrspace(3)* %59, align 4, !tbaa !5\l  %181 = load float, float addrspace(3)* %60, align 4, !tbaa !5\l  %182 = fmul contract float %180, %181\l  %183 = fsub contract float %179, %182\l  %184 = fsub contract float %177, %183\l  %185 = fsub contract float %184, %177\l  %186 = fadd contract float %183, %185\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %187 = add nuw nsw i32 %64, 16\l  %188 = icmp slt i32 %187, %6\l  br i1 %188, label %61, label %189, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x49ac590:s0 -> Node0x49ac590;
	Node0x49ac590:s1 -> Node0x49ac2e0;
	Node0x49ac2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%189:\l189:                                              \l  %190 = phi i64 [ %20, %17 ], [ %27, %61 ]\l  %191 = phi float [ 0.000000e+00, %17 ], [ %184, %61 ]\l  %192 = mul i64 %16, %5\l  %193 = add i64 %190, %192\l  %194 = getelementptr inbounds float, float addrspace(1)* %4, i64 %193\l  store float %191, float addrspace(1)* %194, align 4, !tbaa !5\l  ret void\l}"];
}
