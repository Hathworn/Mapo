digraph "CFG for '_Z7ProductPfS_S_' function" {
	label="CFG for '_Z7ProductPfS_S_' function";

	Node0x616faa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 2, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %12 = add i32 %10, %11\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %20 = add i32 %18, %19\l  %21 = icmp sgt i32 %12, 1000\l  %22 = icmp sgt i32 %20, 1000\l  %23 = select i1 %21, i1 true, i1 %22\l  br i1 %23, label %156, label %24\l|{<s0>T|<s1>F}}"];
	Node0x616faa0:s0 -> Node0x6173580;
	Node0x616faa0:s1 -> Node0x6173610;
	Node0x6173610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%24:\l24:                                               \l  %25 = mul nsw i32 %12, 1000\l  br label %32\l}"];
	Node0x6173610 -> Node0x61737e0;
	Node0x61738a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%26:\l26:                                               \l  %27 = add nsw i32 %25, %20\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %2, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = fadd contract float %153, %30\l  store float %31, float addrspace(1)* %29, align 4, !tbaa !7\l  br label %156\l}"];
	Node0x61738a0 -> Node0x6173580;
	Node0x61737e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = phi i32 [ 0, %24 ], [ %154, %32 ]\l  %34 = phi float [ 0.000000e+00, %24 ], [ %153, %32 ]\l  %35 = add nsw i32 %33, %25\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = mul nuw nsw i32 %33, 1000\l  %40 = add nsw i32 %39, %20\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fmul contract float %38, %43\l  %45 = fadd contract float %34, %44\l  %46 = or i32 %33, 1\l  %47 = add nsw i32 %46, %25\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %51 = mul nuw nsw i32 %46, 1000\l  %52 = add nsw i32 %51, %20\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %56 = fmul contract float %50, %55\l  %57 = fadd contract float %45, %56\l  %58 = add nuw nsw i32 %33, 2\l  %59 = add nsw i32 %58, %25\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = mul nuw nsw i32 %58, 1000\l  %64 = add nsw i32 %63, %20\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %68 = fmul contract float %62, %67\l  %69 = fadd contract float %57, %68\l  %70 = add nuw nsw i32 %33, 3\l  %71 = add nsw i32 %70, %25\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %75 = mul nuw nsw i32 %70, 1000\l  %76 = add nsw i32 %75, %20\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %80 = fmul contract float %74, %79\l  %81 = fadd contract float %69, %80\l  %82 = add nuw nsw i32 %33, 4\l  %83 = add nsw i32 %82, %25\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %0, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %87 = mul nuw nsw i32 %82, 1000\l  %88 = add nsw i32 %87, %20\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %1, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %92 = fmul contract float %86, %91\l  %93 = fadd contract float %81, %92\l  %94 = add nuw nsw i32 %33, 5\l  %95 = add nsw i32 %94, %25\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %0, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %99 = mul nuw nsw i32 %94, 1000\l  %100 = add nsw i32 %99, %20\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %1, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %104 = fmul contract float %98, %103\l  %105 = fadd contract float %93, %104\l  %106 = add nuw nsw i32 %33, 6\l  %107 = add nsw i32 %106, %25\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %0, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %111 = mul nuw nsw i32 %106, 1000\l  %112 = add nsw i32 %111, %20\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %1, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %116 = fmul contract float %110, %115\l  %117 = fadd contract float %105, %116\l  %118 = add nuw nsw i32 %33, 7\l  %119 = add nsw i32 %118, %25\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %0, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %123 = mul nuw nsw i32 %118, 1000\l  %124 = add nsw i32 %123, %20\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %1, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %128 = fmul contract float %122, %127\l  %129 = fadd contract float %117, %128\l  %130 = add nuw nsw i32 %33, 8\l  %131 = add nsw i32 %130, %25\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %0, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %135 = mul nuw nsw i32 %130, 1000\l  %136 = add nsw i32 %135, %20\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %1, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %140 = fmul contract float %134, %139\l  %141 = fadd contract float %129, %140\l  %142 = add nuw nsw i32 %33, 9\l  %143 = add nsw i32 %142, %25\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %0, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %147 = mul nuw nsw i32 %142, 1000\l  %148 = add nsw i32 %147, %20\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %1, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %152 = fmul contract float %146, %151\l  %153 = fadd contract float %141, %152\l  %154 = add nuw nsw i32 %33, 10\l  %155 = icmp eq i32 %154, 1000\l  br i1 %155, label %26, label %32, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x61737e0:s0 -> Node0x61738a0;
	Node0x61737e0:s1 -> Node0x61737e0;
	Node0x6173580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%156:\l156:                                              \l  ret void\l}"];
}
