digraph "CFG for '_Z14Matrix_ProductPdS_S_' function" {
	label="CFG for '_Z14Matrix_ProductPdS_S_' function";

	Node0x625c5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 2, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp sgt i32 %12, 1000\l  br i1 %13, label %125, label %14\l|{<s0>T|<s1>F}}"];
	Node0x625c5a0:s0 -> Node0x625e4a0;
	Node0x625c5a0:s1 -> Node0x625e530;
	Node0x625e530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%14:\l14:                                               \l  %15 = mul nsw i32 %12, 1000\l  br label %21\l}"];
	Node0x625e530 -> Node0x625e700;
	Node0x625e7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%16:\l16:                                               \l  %17 = sext i32 %12 to i64\l  %18 = getelementptr inbounds double, double addrspace(1)* %2, i64 %17\l  %19 = load double, double addrspace(1)* %18, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %20 = fadd contract double %122, %19\l  store double %20, double addrspace(1)* %18, align 8, !tbaa !7\l  br label %125\l}"];
	Node0x625e7c0 -> Node0x625e4a0;
	Node0x625e700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = phi i32 [ 0, %14 ], [ %123, %21 ]\l  %23 = phi double [ 0.000000e+00, %14 ], [ %122, %21 ]\l  %24 = add nsw i32 %22, %15\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds double, double addrspace(1)* %0, i64 %25\l  %27 = load double, double addrspace(1)* %26, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %28 = zext i32 %22 to i64\l  %29 = getelementptr inbounds double, double addrspace(1)* %1, i64 %28\l  %30 = load double, double addrspace(1)* %29, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = fmul contract double %27, %30\l  %32 = fadd contract double %23, %31\l  %33 = or i32 %22, 1\l  %34 = add nsw i32 %33, %15\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds double, double addrspace(1)* %0, i64 %35\l  %37 = load double, double addrspace(1)* %36, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = zext i32 %33 to i64\l  %39 = getelementptr inbounds double, double addrspace(1)* %1, i64 %38\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %41 = fmul contract double %37, %40\l  %42 = fadd contract double %32, %41\l  %43 = add nuw nsw i32 %22, 2\l  %44 = add nsw i32 %43, %15\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds double, double addrspace(1)* %0, i64 %45\l  %47 = load double, double addrspace(1)* %46, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = zext i32 %43 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %1, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %51 = fmul contract double %47, %50\l  %52 = fadd contract double %42, %51\l  %53 = add nuw nsw i32 %22, 3\l  %54 = add nsw i32 %53, %15\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds double, double addrspace(1)* %0, i64 %55\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %58 = zext i32 %53 to i64\l  %59 = getelementptr inbounds double, double addrspace(1)* %1, i64 %58\l  %60 = load double, double addrspace(1)* %59, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %61 = fmul contract double %57, %60\l  %62 = fadd contract double %52, %61\l  %63 = add nuw nsw i32 %22, 4\l  %64 = add nsw i32 %63, %15\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds double, double addrspace(1)* %0, i64 %65\l  %67 = load double, double addrspace(1)* %66, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %68 = zext i32 %63 to i64\l  %69 = getelementptr inbounds double, double addrspace(1)* %1, i64 %68\l  %70 = load double, double addrspace(1)* %69, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %71 = fmul contract double %67, %70\l  %72 = fadd contract double %62, %71\l  %73 = add nuw nsw i32 %22, 5\l  %74 = add nsw i32 %73, %15\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds double, double addrspace(1)* %0, i64 %75\l  %77 = load double, double addrspace(1)* %76, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %78 = zext i32 %73 to i64\l  %79 = getelementptr inbounds double, double addrspace(1)* %1, i64 %78\l  %80 = load double, double addrspace(1)* %79, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %81 = fmul contract double %77, %80\l  %82 = fadd contract double %72, %81\l  %83 = add nuw nsw i32 %22, 6\l  %84 = add nsw i32 %83, %15\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds double, double addrspace(1)* %0, i64 %85\l  %87 = load double, double addrspace(1)* %86, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %88 = zext i32 %83 to i64\l  %89 = getelementptr inbounds double, double addrspace(1)* %1, i64 %88\l  %90 = load double, double addrspace(1)* %89, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %91 = fmul contract double %87, %90\l  %92 = fadd contract double %82, %91\l  %93 = add nuw nsw i32 %22, 7\l  %94 = add nsw i32 %93, %15\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds double, double addrspace(1)* %0, i64 %95\l  %97 = load double, double addrspace(1)* %96, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %98 = zext i32 %93 to i64\l  %99 = getelementptr inbounds double, double addrspace(1)* %1, i64 %98\l  %100 = load double, double addrspace(1)* %99, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %101 = fmul contract double %97, %100\l  %102 = fadd contract double %92, %101\l  %103 = add nuw nsw i32 %22, 8\l  %104 = add nsw i32 %103, %15\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds double, double addrspace(1)* %0, i64 %105\l  %107 = load double, double addrspace(1)* %106, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %108 = zext i32 %103 to i64\l  %109 = getelementptr inbounds double, double addrspace(1)* %1, i64 %108\l  %110 = load double, double addrspace(1)* %109, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %111 = fmul contract double %107, %110\l  %112 = fadd contract double %102, %111\l  %113 = add nuw nsw i32 %22, 9\l  %114 = add nsw i32 %113, %15\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds double, double addrspace(1)* %0, i64 %115\l  %117 = load double, double addrspace(1)* %116, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %118 = zext i32 %113 to i64\l  %119 = getelementptr inbounds double, double addrspace(1)* %1, i64 %118\l  %120 = load double, double addrspace(1)* %119, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %121 = fmul contract double %117, %120\l  %122 = fadd contract double %112, %121\l  %123 = add nuw nsw i32 %22, 10\l  %124 = icmp eq i32 %123, 1000\l  br i1 %124, label %16, label %21, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x625e700:s0 -> Node0x625e7c0;
	Node0x625e700:s1 -> Node0x625e700;
	Node0x625e4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%125:\l125:                                              \l  ret void\l}"];
}
