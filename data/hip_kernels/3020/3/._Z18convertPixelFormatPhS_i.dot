digraph "CFG for '_Z18convertPixelFormatPhS_i' function" {
	label="CFG for '_Z18convertPixelFormatPhS_i' function";

	Node0x4794a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %6 = bitcast i8 addrspace(4)* %5 to i32 addrspace(4)*\l  %7 = load i32, i32 addrspace(4)* %6, align 4, !tbaa !4\l  %8 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !13, !invariant.load\l... !14\l  %11 = zext i16 %10 to i32\l  %12 = udiv i32 %7, %11\l  %13 = mul i32 %12, %11\l  %14 = icmp ugt i32 %7, %13\l  %15 = zext i1 %14 to i32\l  %16 = add i32 %12, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = mul i32 %17, %11\l  %19 = mul i32 %16, %11\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %21 = add i32 %18, %20\l  %22 = icmp sgt i32 %21, %2\l  br i1 %22, label %74, label %23\l|{<s0>T|<s1>F}}"];
	Node0x4794a20:s0 -> Node0x4796fe0;
	Node0x4794a20:s1 -> Node0x4797070;
	Node0x4797070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i32 [ %72, %71 ], [ %21, %3 ]\l  %25 = icmp slt i32 %24, %2\l  br i1 %25, label %26, label %71\l|{<s0>T|<s1>F}}"];
	Node0x4797070:s0 -> Node0x4797380;
	Node0x4797070:s1 -> Node0x47971b0;
	Node0x4797380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%26:\l26:                                               \l  %27 = shl nsw i32 %24, 2\l  %28 = add nuw nsw i32 %27, 2\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %29\l  %31 = load i8, i8 addrspace(1)* %30, align 1, !tbaa !16\l  %32 = zext i8 %31 to i32\l  %33 = mul nuw nsw i32 %32, 66\l  %34 = add nuw nsw i32 %27, 1\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %35\l  %37 = load i8, i8 addrspace(1)* %36, align 1, !tbaa !16\l  %38 = zext i8 %37 to i32\l  %39 = mul nuw nsw i32 %38, 129\l  %40 = add nuw nsw i32 %39, %33\l  %41 = sext i32 %27 to i64\l  %42 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %41\l  %43 = load i8, i8 addrspace(1)* %42, align 1, !tbaa !16\l  %44 = zext i8 %43 to i32\l  %45 = mul nuw nsw i32 %44, 25\l  %46 = add nuw nsw i32 %40, %45\l  %47 = mul nuw nsw i32 %32, 65498\l  %48 = mul nuw nsw i32 %38, 65462\l  %49 = add nuw nsw i32 %48, %47\l  %50 = mul nuw nsw i32 %44, 112\l  %51 = add nuw nsw i32 %49, %50\l  %52 = mul nuw nsw i32 %32, 112\l  %53 = mul nuw nsw i32 %38, 65442\l  %54 = add nuw nsw i32 %53, %52\l  %55 = mul nuw nsw i32 %44, 65518\l  %56 = add nuw nsw i32 %54, %55\l  %57 = lshr i32 %46, 8\l  %58 = trunc i32 %57 to i8\l  %59 = add nuw i8 %58, 16\l  %60 = lshr i32 %51, 8\l  %61 = trunc i32 %60 to i8\l  %62 = xor i8 %61, -128\l  %63 = lshr i32 %56, 8\l  %64 = trunc i32 %63 to i8\l  %65 = xor i8 %64, -128\l  %66 = mul nsw i32 %24, 3\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %67\l  store i8 %59, i8 addrspace(1)* %68, align 1\l  %69 = getelementptr inbounds i8, i8 addrspace(1)* %68, i64 1\l  store i8 %62, i8 addrspace(1)* %69, align 1\l  %70 = getelementptr inbounds i8, i8 addrspace(1)* %68, i64 2\l  store i8 %65, i8 addrspace(1)* %70, align 1\l  br label %71\l}"];
	Node0x4797380 -> Node0x47971b0;
	Node0x47971b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = add nsw i32 %24, %19\l  %73 = icmp sgt i32 %72, %2\l  br i1 %73, label %74, label %23, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x47971b0:s0 -> Node0x4796fe0;
	Node0x47971b0:s1 -> Node0x4797070;
	Node0x4796fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%74:\l74:                                               \l  ret void\l}"];
}
