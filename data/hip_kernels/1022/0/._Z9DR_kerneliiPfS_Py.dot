digraph "CFG for '_Z9DR_kerneliiPfS_Py' function" {
	label="CFG for '_Z9DR_kerneliiPfS_Py' function";

	Node0x5183fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = shl i32 %15, 8\l  %17 = icmp slt i32 %14, %0\l  br i1 %17, label %18, label %885\l|{<s0>T|<s1>F}}"];
	Node0x5183fc0:s0 -> Node0x5186170;
	Node0x5183fc0:s1 -> Node0x5186200;
	Node0x5186170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%18:\l18:                                               \l  %19 = icmp eq i32 %13, 0\l  br i1 %19, label %20, label %95\l|{<s0>T|<s1>F}}"];
	Node0x5186170:s0 -> Node0x5186400;
	Node0x5186170:s1 -> Node0x5186450;
	Node0x5186400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%20:\l20:                                               \l  %21 = phi i32 [ %93, %20 ], [ 0, %18 ]\l  %22 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %21\l  store i32 0, i32 addrspace(3)* %22, align 16, !tbaa !7\l  %23 = or i32 %21, 1\l  %24 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %23\l  store i32 0, i32 addrspace(3)* %24, align 4, !tbaa !7\l  %25 = or i32 %21, 2\l  %26 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %25\l  store i32 0, i32 addrspace(3)* %26, align 8, !tbaa !7\l  %27 = or i32 %21, 3\l  %28 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %27\l  store i32 0, i32 addrspace(3)* %28, align 4, !tbaa !7\l  %29 = add nuw nsw i32 %21, 4\l  %30 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %29\l  store i32 0, i32 addrspace(3)* %30, align 16, !tbaa !7\l  %31 = add nuw nsw i32 %21, 5\l  %32 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %31\l  store i32 0, i32 addrspace(3)* %32, align 4, !tbaa !7\l  %33 = add nuw nsw i32 %21, 6\l  %34 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %33\l  store i32 0, i32 addrspace(3)* %34, align 8, !tbaa !7\l  %35 = add nuw nsw i32 %21, 7\l  %36 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %35\l  store i32 0, i32 addrspace(3)* %36, align 4, !tbaa !7\l  %37 = add nuw nsw i32 %21, 8\l  %38 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %37\l  store i32 0, i32 addrspace(3)* %38, align 16, !tbaa !7\l  %39 = add nuw nsw i32 %21, 9\l  %40 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %39\l  store i32 0, i32 addrspace(3)* %40, align 4, !tbaa !7\l  %41 = add nuw nsw i32 %21, 10\l  %42 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %41\l  store i32 0, i32 addrspace(3)* %42, align 8, !tbaa !7\l  %43 = add nuw nsw i32 %21, 11\l  %44 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %43\l  store i32 0, i32 addrspace(3)* %44, align 4, !tbaa !7\l  %45 = add nuw nsw i32 %21, 12\l  %46 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %45\l  store i32 0, i32 addrspace(3)* %46, align 16, !tbaa !7\l  %47 = add nuw nsw i32 %21, 13\l  %48 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %47\l  store i32 0, i32 addrspace(3)* %48, align 4, !tbaa !7\l  %49 = add nuw nsw i32 %21, 14\l  %50 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %49\l  store i32 0, i32 addrspace(3)* %50, align 8, !tbaa !7\l  %51 = add nuw nsw i32 %21, 15\l  %52 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %51\l  store i32 0, i32 addrspace(3)* %52, align 4, !tbaa !7\l  %53 = add nuw nsw i32 %21, 16\l  %54 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %53\l  store i32 0, i32 addrspace(3)* %54, align 16, !tbaa !7\l  %55 = add nuw nsw i32 %21, 17\l  %56 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %55\l  store i32 0, i32 addrspace(3)* %56, align 4, !tbaa !7\l  %57 = add nuw nsw i32 %21, 18\l  %58 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %57\l  store i32 0, i32 addrspace(3)* %58, align 8, !tbaa !7\l  %59 = add nuw nsw i32 %21, 19\l  %60 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %59\l  store i32 0, i32 addrspace(3)* %60, align 4, !tbaa !7\l  %61 = add nuw nsw i32 %21, 20\l  %62 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %61\l  store i32 0, i32 addrspace(3)* %62, align 16, !tbaa !7\l  %63 = add nuw nsw i32 %21, 21\l  %64 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %63\l  store i32 0, i32 addrspace(3)* %64, align 4, !tbaa !7\l  %65 = add nuw nsw i32 %21, 22\l  %66 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %65\l  store i32 0, i32 addrspace(3)* %66, align 8, !tbaa !7\l  %67 = add nuw nsw i32 %21, 23\l  %68 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %67\l  store i32 0, i32 addrspace(3)* %68, align 4, !tbaa !7\l  %69 = add nuw nsw i32 %21, 24\l  %70 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %69\l  store i32 0, i32 addrspace(3)* %70, align 16, !tbaa !7\l  %71 = add nuw nsw i32 %21, 25\l  %72 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %71\l  store i32 0, i32 addrspace(3)* %72, align 4, !tbaa !7\l  %73 = add nuw nsw i32 %21, 26\l  %74 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %73\l  store i32 0, i32 addrspace(3)* %74, align 8, !tbaa !7\l  %75 = add nuw nsw i32 %21, 27\l  %76 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %75\l  store i32 0, i32 addrspace(3)* %76, align 4, !tbaa !7\l  %77 = add nuw nsw i32 %21, 28\l  %78 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %77\l  store i32 0, i32 addrspace(3)* %78, align 16, !tbaa !7\l  %79 = add nuw nsw i32 %21, 29\l  %80 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %79\l  store i32 0, i32 addrspace(3)* %80, align 4, !tbaa !7\l  %81 = add nuw nsw i32 %21, 30\l  %82 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %81\l  store i32 0, i32 addrspace(3)* %82, align 8, !tbaa !7\l  %83 = add nuw nsw i32 %21, 31\l  %84 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %83\l  store i32 0, i32 addrspace(3)* %84, align 4, !tbaa !7\l  %85 = add nuw nsw i32 %21, 32\l  %86 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %85\l  store i32 0, i32 addrspace(3)* %86, align 16, !tbaa !7\l  %87 = add nuw nsw i32 %21, 33\l  %88 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %87\l  store i32 0, i32 addrspace(3)* %88, align 4, !tbaa !7\l  %89 = add nuw nsw i32 %21, 34\l  %90 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %89\l  store i32 0, i32 addrspace(3)* %90, align 8, !tbaa !7\l  %91 = add nuw nsw i32 %21, 35\l  %92 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %91\l  store i32 0, i32 addrspace(3)* %92, align 4, !tbaa !7\l  %93 = add nuw nsw i32 %21, 36\l  %94 = icmp eq i32 %93, 720\l  br i1 %94, label %95, label %20, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5186400:s0 -> Node0x5186450;
	Node0x5186400:s1 -> Node0x5186400;
	Node0x5186450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%95:\l95:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %96 = shl nsw i32 %14, 1\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %2, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !13,\l... !amdgpu.noclobber !5\l  %100 = add nuw nsw i32 %96, 1\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %2, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !13,\l... !amdgpu.noclobber !5\l  %104 = sub nsw i32 %1, %16\l  %105 = icmp sgt i32 %104, 0\l  br i1 %105, label %106, label %251\l|{<s0>T|<s1>F}}"];
	Node0x5186450:s0 -> Node0x518d3c0;
	Node0x5186450:s1 -> Node0x518d450;
	Node0x518d3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%106:\l106:                                              \l  %107 = tail call i32 @llvm.smin.i32(i32 %104, i32 256)\l  %108 = tail call float @llvm.fabs.f32(float %103)\l  %109 = fcmp olt float %108, 1.310720e+05\l  %110 = bitcast float %108 to i32\l  %111 = lshr i32 %110, 23\l  %112 = and i32 %110, 8388607\l  %113 = or i32 %112, 8388608\l  %114 = zext i32 %113 to i64\l  %115 = mul nuw nsw i64 %114, 4266746795\l  %116 = trunc i64 %115 to i32\l  %117 = lshr i64 %115, 32\l  %118 = mul nuw nsw i64 %114, 1011060801\l  %119 = add nuw nsw i64 %117, %118\l  %120 = trunc i64 %119 to i32\l  %121 = lshr i64 %119, 32\l  %122 = mul nuw nsw i64 %114, 3680671129\l  %123 = add nuw nsw i64 %121, %122\l  %124 = trunc i64 %123 to i32\l  %125 = lshr i64 %123, 32\l  %126 = mul nuw nsw i64 %114, 4113882560\l  %127 = add nuw nsw i64 %125, %126\l  %128 = trunc i64 %127 to i32\l  %129 = lshr i64 %127, 32\l  %130 = mul nuw nsw i64 %114, 4230436817\l  %131 = add nuw nsw i64 %129, %130\l  %132 = trunc i64 %131 to i32\l  %133 = lshr i64 %131, 32\l  %134 = mul nuw nsw i64 %114, 1313084713\l  %135 = add nuw nsw i64 %133, %134\l  %136 = trunc i64 %135 to i32\l  %137 = lshr i64 %135, 32\l  %138 = mul nuw nsw i64 %114, 2734261102\l  %139 = add nuw nsw i64 %137, %138\l  %140 = trunc i64 %139 to i32\l  %141 = lshr i64 %139, 32\l  %142 = trunc i64 %141 to i32\l  %143 = add nsw i32 %111, -120\l  %144 = icmp ugt i32 %143, 63\l  %145 = select i1 %144, i32 %136, i32 %142\l  %146 = select i1 %144, i32 %132, i32 %140\l  %147 = select i1 %144, i32 %128, i32 %136\l  %148 = select i1 %144, i32 %124, i32 %132\l  %149 = select i1 %144, i32 %120, i32 %128\l  %150 = select i1 %144, i32 %116, i32 %124\l  %151 = select i1 %144, i32 -64, i32 0\l  %152 = add nsw i32 %151, %143\l  %153 = icmp ugt i32 %152, 31\l  %154 = select i1 %153, i32 %146, i32 %145\l  %155 = select i1 %153, i32 %147, i32 %146\l  %156 = select i1 %153, i32 %148, i32 %147\l  %157 = select i1 %153, i32 %149, i32 %148\l  %158 = select i1 %153, i32 %150, i32 %149\l  %159 = select i1 %153, i32 -32, i32 0\l  %160 = add nsw i32 %159, %152\l  %161 = icmp ugt i32 %160, 31\l  %162 = select i1 %161, i32 %155, i32 %154\l  %163 = select i1 %161, i32 %156, i32 %155\l  %164 = select i1 %161, i32 %157, i32 %156\l  %165 = select i1 %161, i32 %158, i32 %157\l  %166 = select i1 %161, i32 -32, i32 0\l  %167 = add nsw i32 %166, %160\l  %168 = icmp eq i32 %167, 0\l  %169 = sub nsw i32 32, %167\l  %170 = tail call i32 @llvm.fshr.i32(i32 %162, i32 %163, i32 %169)\l  %171 = tail call i32 @llvm.fshr.i32(i32 %163, i32 %164, i32 %169)\l  %172 = tail call i32 @llvm.fshr.i32(i32 %164, i32 %165, i32 %169)\l  %173 = select i1 %168, i32 %162, i32 %170\l  %174 = select i1 %168, i32 %163, i32 %171\l  %175 = select i1 %168, i32 %164, i32 %172\l  %176 = lshr i32 %173, 29\l  %177 = tail call i32 @llvm.fshl.i32(i32 %173, i32 %174, i32 2)\l  %178 = tail call i32 @llvm.fshl.i32(i32 %174, i32 %175, i32 2)\l  %179 = tail call i32 @llvm.fshl.i32(i32 %175, i32 %165, i32 2)\l  %180 = and i32 %176, 1\l  %181 = sub nsw i32 0, %180\l  %182 = shl i32 %176, 31\l  %183 = xor i32 %177, %181\l  %184 = xor i32 %178, %181\l  %185 = xor i32 %179, %181\l  %186 = tail call i32 @llvm.ctlz.i32(i32 %183, i1 false), !range !15\l  %187 = sub nsw i32 31, %186\l  %188 = tail call i32 @llvm.fshr.i32(i32 %183, i32 %184, i32 %187)\l  %189 = tail call i32 @llvm.fshr.i32(i32 %184, i32 %185, i32 %187)\l  %190 = shl nuw nsw i32 %186, 23\l  %191 = sub nuw nsw i32 1056964608, %190\l  %192 = lshr i32 %188, 9\l  %193 = or i32 %192, %191\l  %194 = or i32 %193, %182\l  %195 = bitcast i32 %194 to float\l  %196 = tail call i32 @llvm.fshl.i32(i32 %188, i32 %189, i32 23)\l  %197 = tail call i32 @llvm.ctlz.i32(i32 %196, i1 false), !range !15\l  %198 = fmul float %195, 0x3FF921FB40000000\l  %199 = add nuw nsw i32 %197, %186\l  %200 = shl nuw nsw i32 %199, 23\l  %201 = sub nuw nsw i32 855638016, %200\l  %202 = sub nsw i32 31, %197\l  %203 = tail call i32 @llvm.fshr.i32(i32 %196, i32 %189, i32 %202)\l  %204 = lshr i32 %203, 9\l  %205 = or i32 %201, %204\l  %206 = or i32 %205, %182\l  %207 = bitcast i32 %206 to float\l  %208 = fneg float %198\l  %209 = tail call float @llvm.fma.f32(float %195, float 0x3FF921FB40000000,\l... float %208)\l  %210 = tail call float @llvm.fma.f32(float %195, float 0x3E74442D00000000,\l... float %209)\l  %211 = tail call float @llvm.fma.f32(float %207, float 0x3FF921FB40000000,\l... float %210)\l  %212 = fadd float %198, %211\l  %213 = lshr i32 %173, 30\l  %214 = add nuw nsw i32 %180, %213\l  %215 = fmul float %108, 0x3FE45F3060000000\l  %216 = tail call float @llvm.rint.f32(float %215)\l  %217 = tail call float @llvm.fma.f32(float %216, float 0xBFF921FB40000000,\l... float %108)\l  %218 = tail call float @llvm.fma.f32(float %216, float 0xBE74442D00000000,\l... float %217)\l  %219 = tail call float @llvm.fma.f32(float %216, float 0xBCF8469880000000,\l... float %218)\l  %220 = fptosi float %216 to i32\l  %221 = bitcast float %103 to i32\l  %222 = tail call i1 @llvm.amdgcn.class.f32(float %108, i32 504)\l  %223 = select i1 %109, float %219, float %212\l  %224 = select i1 %109, i32 %220, i32 %214\l  %225 = fmul float %223, %223\l  %226 = tail call float @llvm.fmuladd.f32(float %225, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %227 = tail call float @llvm.fmuladd.f32(float %225, float %226, float\l... 0xBFC55553A0000000)\l  %228 = fmul float %225, %227\l  %229 = tail call float @llvm.fmuladd.f32(float %223, float %228, float %223)\l  %230 = tail call float @llvm.fmuladd.f32(float %225, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %231 = tail call float @llvm.fmuladd.f32(float %225, float %230, float\l... 0x3FA5557EE0000000)\l  %232 = tail call float @llvm.fmuladd.f32(float %225, float %231, float\l... 0xBFE0000080000000)\l  %233 = tail call float @llvm.fmuladd.f32(float %225, float %232, float\l... 1.000000e+00)\l  %234 = and i32 %224, 1\l  %235 = icmp eq i32 %234, 0\l  %236 = select i1 %235, float %229, float %233\l  %237 = bitcast float %236 to i32\l  %238 = shl i32 %224, 30\l  %239 = and i32 %238, -2147483648\l  %240 = xor i32 %221, %237\l  %241 = xor i32 %240, %110\l  %242 = xor i32 %241, %239\l  %243 = bitcast i32 %242 to float\l  %244 = select i1 %222, float %243, float 0x7FF8000000000000\l  %245 = fneg float %229\l  %246 = select i1 %235, float %233, float %245\l  %247 = bitcast float %246 to i32\l  %248 = xor i32 %239, %247\l  %249 = bitcast i32 %248 to float\l  %250 = select i1 %222, float %249, float 0x7FF8000000000000\l  br label %252\l}"];
	Node0x518d3c0 -> Node0x5196630;
	Node0x518d450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%251:\l251:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %19, label %714, label %885\l|{<s0>T|<s1>F}}"];
	Node0x518d450:s0 -> Node0x5196920;
	Node0x518d450:s1 -> Node0x5186200;
	Node0x5196630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%252:\l252:                                              \l  %253 = phi i32 [ 0, %106 ], [ %712, %658 ]\l  %254 = shl nuw nsw i32 %253, 1\l  %255 = add nsw i32 %254, %16\l  %256 = sext i32 %255 to i64\l  %257 = getelementptr inbounds float, float addrspace(1)* %3, i64 %256\l  %258 = load float, float addrspace(1)* %257, align 4, !tbaa !13,\l... !amdgpu.noclobber !5\l  %259 = or i32 %255, 1\l  %260 = sext i32 %259 to i64\l  %261 = getelementptr inbounds float, float addrspace(1)* %3, i64 %260\l  %262 = load float, float addrspace(1)* %261, align 4, !tbaa !13,\l... !amdgpu.noclobber !5\l  %263 = tail call float @llvm.fabs.f32(float %262)\l  %264 = fcmp olt float %263, 1.310720e+05\l  br i1 %264, label %265, label %273\l|{<s0>T|<s1>F}}"];
	Node0x5196630:s0 -> Node0x518f4f0;
	Node0x5196630:s1 -> Node0x518f580;
	Node0x518f4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%265:\l265:                                              \l  %266 = fmul float %263, 0x3FE45F3060000000\l  %267 = tail call float @llvm.rint.f32(float %266)\l  %268 = tail call float @llvm.fma.f32(float %267, float 0xBFF921FB40000000,\l... float %263)\l  %269 = tail call float @llvm.fma.f32(float %267, float 0xBE74442D00000000,\l... float %268)\l  %270 = tail call float @llvm.fma.f32(float %267, float 0xBCF8469880000000,\l... float %269)\l  %271 = fptosi float %267 to i32\l  %272 = bitcast float %263 to i32\l  br label %379\l}"];
	Node0x518f4f0 -> Node0x51981d0;
	Node0x518f580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%273:\l273:                                              \l  %274 = bitcast float %263 to i32\l  %275 = lshr i32 %274, 23\l  %276 = and i32 %274, 8388607\l  %277 = or i32 %276, 8388608\l  %278 = zext i32 %277 to i64\l  %279 = mul nuw nsw i64 %278, 4266746795\l  %280 = trunc i64 %279 to i32\l  %281 = lshr i64 %279, 32\l  %282 = mul nuw nsw i64 %278, 1011060801\l  %283 = add nuw nsw i64 %281, %282\l  %284 = trunc i64 %283 to i32\l  %285 = lshr i64 %283, 32\l  %286 = mul nuw nsw i64 %278, 3680671129\l  %287 = add nuw nsw i64 %285, %286\l  %288 = trunc i64 %287 to i32\l  %289 = lshr i64 %287, 32\l  %290 = mul nuw nsw i64 %278, 4113882560\l  %291 = add nuw nsw i64 %289, %290\l  %292 = trunc i64 %291 to i32\l  %293 = lshr i64 %291, 32\l  %294 = mul nuw nsw i64 %278, 4230436817\l  %295 = add nuw nsw i64 %293, %294\l  %296 = trunc i64 %295 to i32\l  %297 = lshr i64 %295, 32\l  %298 = mul nuw nsw i64 %278, 1313084713\l  %299 = add nuw nsw i64 %297, %298\l  %300 = trunc i64 %299 to i32\l  %301 = lshr i64 %299, 32\l  %302 = mul nuw nsw i64 %278, 2734261102\l  %303 = add nuw nsw i64 %301, %302\l  %304 = trunc i64 %303 to i32\l  %305 = lshr i64 %303, 32\l  %306 = trunc i64 %305 to i32\l  %307 = add nsw i32 %275, -120\l  %308 = icmp ugt i32 %307, 63\l  %309 = select i1 %308, i32 %300, i32 %306\l  %310 = select i1 %308, i32 %296, i32 %304\l  %311 = select i1 %308, i32 %292, i32 %300\l  %312 = select i1 %308, i32 %288, i32 %296\l  %313 = select i1 %308, i32 %284, i32 %292\l  %314 = select i1 %308, i32 %280, i32 %288\l  %315 = select i1 %308, i32 -64, i32 0\l  %316 = add nsw i32 %315, %307\l  %317 = icmp ugt i32 %316, 31\l  %318 = select i1 %317, i32 %310, i32 %309\l  %319 = select i1 %317, i32 %311, i32 %310\l  %320 = select i1 %317, i32 %312, i32 %311\l  %321 = select i1 %317, i32 %313, i32 %312\l  %322 = select i1 %317, i32 %314, i32 %313\l  %323 = select i1 %317, i32 -32, i32 0\l  %324 = add nsw i32 %323, %316\l  %325 = icmp ugt i32 %324, 31\l  %326 = select i1 %325, i32 %319, i32 %318\l  %327 = select i1 %325, i32 %320, i32 %319\l  %328 = select i1 %325, i32 %321, i32 %320\l  %329 = select i1 %325, i32 %322, i32 %321\l  %330 = select i1 %325, i32 -32, i32 0\l  %331 = add nsw i32 %330, %324\l  %332 = icmp eq i32 %331, 0\l  %333 = sub nsw i32 32, %331\l  %334 = tail call i32 @llvm.fshr.i32(i32 %326, i32 %327, i32 %333)\l  %335 = tail call i32 @llvm.fshr.i32(i32 %327, i32 %328, i32 %333)\l  %336 = tail call i32 @llvm.fshr.i32(i32 %328, i32 %329, i32 %333)\l  %337 = select i1 %332, i32 %326, i32 %334\l  %338 = select i1 %332, i32 %327, i32 %335\l  %339 = select i1 %332, i32 %328, i32 %336\l  %340 = lshr i32 %337, 29\l  %341 = tail call i32 @llvm.fshl.i32(i32 %337, i32 %338, i32 2)\l  %342 = tail call i32 @llvm.fshl.i32(i32 %338, i32 %339, i32 2)\l  %343 = tail call i32 @llvm.fshl.i32(i32 %339, i32 %329, i32 2)\l  %344 = and i32 %340, 1\l  %345 = sub nsw i32 0, %344\l  %346 = shl i32 %340, 31\l  %347 = xor i32 %341, %345\l  %348 = xor i32 %342, %345\l  %349 = xor i32 %343, %345\l  %350 = tail call i32 @llvm.ctlz.i32(i32 %347, i1 false), !range !15\l  %351 = sub nsw i32 31, %350\l  %352 = tail call i32 @llvm.fshr.i32(i32 %347, i32 %348, i32 %351)\l  %353 = tail call i32 @llvm.fshr.i32(i32 %348, i32 %349, i32 %351)\l  %354 = shl nuw nsw i32 %350, 23\l  %355 = sub nuw nsw i32 1056964608, %354\l  %356 = lshr i32 %352, 9\l  %357 = or i32 %356, %355\l  %358 = or i32 %357, %346\l  %359 = bitcast i32 %358 to float\l  %360 = tail call i32 @llvm.fshl.i32(i32 %352, i32 %353, i32 23)\l  %361 = tail call i32 @llvm.ctlz.i32(i32 %360, i1 false), !range !15\l  %362 = fmul float %359, 0x3FF921FB40000000\l  %363 = add nuw nsw i32 %361, %350\l  %364 = shl nuw nsw i32 %363, 23\l  %365 = sub nuw nsw i32 855638016, %364\l  %366 = sub nsw i32 31, %361\l  %367 = tail call i32 @llvm.fshr.i32(i32 %360, i32 %353, i32 %366)\l  %368 = lshr i32 %367, 9\l  %369 = or i32 %365, %368\l  %370 = or i32 %369, %346\l  %371 = bitcast i32 %370 to float\l  %372 = fneg float %362\l  %373 = tail call float @llvm.fma.f32(float %359, float 0x3FF921FB40000000,\l... float %372)\l  %374 = tail call float @llvm.fma.f32(float %359, float 0x3E74442D00000000,\l... float %373)\l  %375 = tail call float @llvm.fma.f32(float %371, float 0x3FF921FB40000000,\l... float %374)\l  %376 = fadd float %362, %375\l  %377 = lshr i32 %337, 30\l  %378 = add nuw nsw i32 %344, %377\l  br label %379\l}"];
	Node0x518f580 -> Node0x51981d0;
	Node0x51981d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%379:\l379:                                              \l  %380 = phi i32 [ %272, %265 ], [ %274, %273 ]\l  %381 = phi float [ %270, %265 ], [ %376, %273 ]\l  %382 = phi i32 [ %271, %265 ], [ %378, %273 ]\l  %383 = fmul float %381, %381\l  %384 = tail call float @llvm.fmuladd.f32(float %383, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %385 = tail call float @llvm.fmuladd.f32(float %383, float %384, float\l... 0xBFC55553A0000000)\l  %386 = fmul float %383, %385\l  %387 = tail call float @llvm.fmuladd.f32(float %381, float %386, float %381)\l  %388 = tail call float @llvm.fmuladd.f32(float %383, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %389 = tail call float @llvm.fmuladd.f32(float %383, float %388, float\l... 0x3FA5557EE0000000)\l  %390 = tail call float @llvm.fmuladd.f32(float %383, float %389, float\l... 0xBFE0000080000000)\l  %391 = tail call float @llvm.fmuladd.f32(float %383, float %390, float\l... 1.000000e+00)\l  %392 = and i32 %382, 1\l  %393 = icmp eq i32 %392, 0\l  %394 = select i1 %393, float %387, float %391\l  %395 = bitcast float %394 to i32\l  %396 = shl i32 %382, 30\l  %397 = and i32 %396, -2147483648\l  %398 = bitcast float %262 to i32\l  %399 = xor i32 %380, %398\l  %400 = xor i32 %399, %397\l  %401 = xor i32 %400, %395\l  %402 = bitcast i32 %401 to float\l  %403 = tail call i1 @llvm.amdgcn.class.f32(float %263, i32 504)\l  %404 = select i1 %403, float %402, float 0x7FF8000000000000\l  %405 = fmul contract float %244, %404\l  br i1 %264, label %406, label %413\l|{<s0>T|<s1>F}}"];
	Node0x51981d0:s0 -> Node0x519dbf0;
	Node0x51981d0:s1 -> Node0x519dc40;
	Node0x519dbf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%406:\l406:                                              \l  %407 = fmul float %263, 0x3FE45F3060000000\l  %408 = tail call float @llvm.rint.f32(float %407)\l  %409 = tail call float @llvm.fma.f32(float %408, float 0xBFF921FB40000000,\l... float %263)\l  %410 = tail call float @llvm.fma.f32(float %408, float 0xBE74442D00000000,\l... float %409)\l  %411 = tail call float @llvm.fma.f32(float %408, float 0xBCF8469880000000,\l... float %410)\l  %412 = fptosi float %408 to i32\l  br label %519\l}"];
	Node0x519dbf0 -> Node0x519e2c0;
	Node0x519dc40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%413:\l413:                                              \l  %414 = bitcast float %263 to i32\l  %415 = lshr i32 %414, 23\l  %416 = and i32 %414, 8388607\l  %417 = or i32 %416, 8388608\l  %418 = zext i32 %417 to i64\l  %419 = mul nuw nsw i64 %418, 4266746795\l  %420 = trunc i64 %419 to i32\l  %421 = lshr i64 %419, 32\l  %422 = mul nuw nsw i64 %418, 1011060801\l  %423 = add nuw nsw i64 %421, %422\l  %424 = trunc i64 %423 to i32\l  %425 = lshr i64 %423, 32\l  %426 = mul nuw nsw i64 %418, 3680671129\l  %427 = add nuw nsw i64 %425, %426\l  %428 = trunc i64 %427 to i32\l  %429 = lshr i64 %427, 32\l  %430 = mul nuw nsw i64 %418, 4113882560\l  %431 = add nuw nsw i64 %429, %430\l  %432 = trunc i64 %431 to i32\l  %433 = lshr i64 %431, 32\l  %434 = mul nuw nsw i64 %418, 4230436817\l  %435 = add nuw nsw i64 %433, %434\l  %436 = trunc i64 %435 to i32\l  %437 = lshr i64 %435, 32\l  %438 = mul nuw nsw i64 %418, 1313084713\l  %439 = add nuw nsw i64 %437, %438\l  %440 = trunc i64 %439 to i32\l  %441 = lshr i64 %439, 32\l  %442 = mul nuw nsw i64 %418, 2734261102\l  %443 = add nuw nsw i64 %441, %442\l  %444 = trunc i64 %443 to i32\l  %445 = lshr i64 %443, 32\l  %446 = trunc i64 %445 to i32\l  %447 = add nsw i32 %415, -120\l  %448 = icmp ugt i32 %447, 63\l  %449 = select i1 %448, i32 %440, i32 %446\l  %450 = select i1 %448, i32 %436, i32 %444\l  %451 = select i1 %448, i32 %432, i32 %440\l  %452 = select i1 %448, i32 %428, i32 %436\l  %453 = select i1 %448, i32 %424, i32 %432\l  %454 = select i1 %448, i32 %420, i32 %428\l  %455 = select i1 %448, i32 -64, i32 0\l  %456 = add nsw i32 %455, %447\l  %457 = icmp ugt i32 %456, 31\l  %458 = select i1 %457, i32 %450, i32 %449\l  %459 = select i1 %457, i32 %451, i32 %450\l  %460 = select i1 %457, i32 %452, i32 %451\l  %461 = select i1 %457, i32 %453, i32 %452\l  %462 = select i1 %457, i32 %454, i32 %453\l  %463 = select i1 %457, i32 -32, i32 0\l  %464 = add nsw i32 %463, %456\l  %465 = icmp ugt i32 %464, 31\l  %466 = select i1 %465, i32 %459, i32 %458\l  %467 = select i1 %465, i32 %460, i32 %459\l  %468 = select i1 %465, i32 %461, i32 %460\l  %469 = select i1 %465, i32 %462, i32 %461\l  %470 = select i1 %465, i32 -32, i32 0\l  %471 = add nsw i32 %470, %464\l  %472 = icmp eq i32 %471, 0\l  %473 = sub nsw i32 32, %471\l  %474 = tail call i32 @llvm.fshr.i32(i32 %466, i32 %467, i32 %473)\l  %475 = tail call i32 @llvm.fshr.i32(i32 %467, i32 %468, i32 %473)\l  %476 = tail call i32 @llvm.fshr.i32(i32 %468, i32 %469, i32 %473)\l  %477 = select i1 %472, i32 %466, i32 %474\l  %478 = select i1 %472, i32 %467, i32 %475\l  %479 = select i1 %472, i32 %468, i32 %476\l  %480 = lshr i32 %477, 29\l  %481 = tail call i32 @llvm.fshl.i32(i32 %477, i32 %478, i32 2)\l  %482 = tail call i32 @llvm.fshl.i32(i32 %478, i32 %479, i32 2)\l  %483 = tail call i32 @llvm.fshl.i32(i32 %479, i32 %469, i32 2)\l  %484 = and i32 %480, 1\l  %485 = sub nsw i32 0, %484\l  %486 = shl i32 %480, 31\l  %487 = xor i32 %481, %485\l  %488 = xor i32 %482, %485\l  %489 = xor i32 %483, %485\l  %490 = tail call i32 @llvm.ctlz.i32(i32 %487, i1 false), !range !15\l  %491 = sub nsw i32 31, %490\l  %492 = tail call i32 @llvm.fshr.i32(i32 %487, i32 %488, i32 %491)\l  %493 = tail call i32 @llvm.fshr.i32(i32 %488, i32 %489, i32 %491)\l  %494 = shl nuw nsw i32 %490, 23\l  %495 = sub nuw nsw i32 1056964608, %494\l  %496 = lshr i32 %492, 9\l  %497 = or i32 %496, %495\l  %498 = or i32 %497, %486\l  %499 = bitcast i32 %498 to float\l  %500 = tail call i32 @llvm.fshl.i32(i32 %492, i32 %493, i32 23)\l  %501 = tail call i32 @llvm.ctlz.i32(i32 %500, i1 false), !range !15\l  %502 = fmul float %499, 0x3FF921FB40000000\l  %503 = add nuw nsw i32 %501, %490\l  %504 = shl nuw nsw i32 %503, 23\l  %505 = sub nuw nsw i32 855638016, %504\l  %506 = sub nsw i32 31, %501\l  %507 = tail call i32 @llvm.fshr.i32(i32 %500, i32 %493, i32 %506)\l  %508 = lshr i32 %507, 9\l  %509 = or i32 %505, %508\l  %510 = or i32 %509, %486\l  %511 = bitcast i32 %510 to float\l  %512 = fneg float %502\l  %513 = tail call float @llvm.fma.f32(float %499, float 0x3FF921FB40000000,\l... float %512)\l  %514 = tail call float @llvm.fma.f32(float %499, float 0x3E74442D00000000,\l... float %513)\l  %515 = tail call float @llvm.fma.f32(float %511, float 0x3FF921FB40000000,\l... float %514)\l  %516 = fadd float %502, %515\l  %517 = lshr i32 %477, 30\l  %518 = add nuw nsw i32 %484, %517\l  br label %519\l}"];
	Node0x519dc40 -> Node0x519e2c0;
	Node0x519e2c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%519:\l519:                                              \l  %520 = phi float [ %411, %406 ], [ %516, %413 ]\l  %521 = phi i32 [ %412, %406 ], [ %518, %413 ]\l  %522 = fmul float %520, %520\l  %523 = tail call float @llvm.fmuladd.f32(float %522, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %524 = tail call float @llvm.fmuladd.f32(float %522, float %523, float\l... 0xBFC55553A0000000)\l  %525 = fmul float %522, %524\l  %526 = tail call float @llvm.fmuladd.f32(float %520, float %525, float %520)\l  %527 = tail call float @llvm.fmuladd.f32(float %522, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %528 = tail call float @llvm.fmuladd.f32(float %522, float %527, float\l... 0x3FA5557EE0000000)\l  %529 = tail call float @llvm.fmuladd.f32(float %522, float %528, float\l... 0xBFE0000080000000)\l  %530 = tail call float @llvm.fmuladd.f32(float %522, float %529, float\l... 1.000000e+00)\l  %531 = fneg float %526\l  %532 = and i32 %521, 1\l  %533 = icmp eq i32 %532, 0\l  %534 = select i1 %533, float %530, float %531\l  %535 = bitcast float %534 to i32\l  %536 = shl i32 %521, 30\l  %537 = and i32 %536, -2147483648\l  %538 = xor i32 %537, %535\l  %539 = bitcast i32 %538 to float\l  %540 = select i1 %403, float %539, float 0x7FF8000000000000\l  %541 = fmul contract float %250, %540\l  %542 = fsub contract float %99, %258\l  %543 = tail call float @llvm.fabs.f32(float %542)\l  %544 = fcmp olt float %543, 1.310720e+05\l  br i1 %544, label %545, label %552\l|{<s0>T|<s1>F}}"];
	Node0x519e2c0:s0 -> Node0x51a5650;
	Node0x519e2c0:s1 -> Node0x51a56a0;
	Node0x51a5650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%545:\l545:                                              \l  %546 = fmul float %543, 0x3FE45F3060000000\l  %547 = tail call float @llvm.rint.f32(float %546)\l  %548 = tail call float @llvm.fma.f32(float %547, float 0xBFF921FB40000000,\l... float %543)\l  %549 = tail call float @llvm.fma.f32(float %547, float 0xBE74442D00000000,\l... float %548)\l  %550 = tail call float @llvm.fma.f32(float %547, float 0xBCF8469880000000,\l... float %549)\l  %551 = fptosi float %547 to i32\l  br label %658\l}"];
	Node0x51a5650 -> Node0x5196a20;
	Node0x51a56a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%552:\l552:                                              \l  %553 = bitcast float %543 to i32\l  %554 = lshr i32 %553, 23\l  %555 = and i32 %553, 8388607\l  %556 = or i32 %555, 8388608\l  %557 = zext i32 %556 to i64\l  %558 = mul nuw nsw i64 %557, 4266746795\l  %559 = trunc i64 %558 to i32\l  %560 = lshr i64 %558, 32\l  %561 = mul nuw nsw i64 %557, 1011060801\l  %562 = add nuw nsw i64 %560, %561\l  %563 = trunc i64 %562 to i32\l  %564 = lshr i64 %562, 32\l  %565 = mul nuw nsw i64 %557, 3680671129\l  %566 = add nuw nsw i64 %564, %565\l  %567 = trunc i64 %566 to i32\l  %568 = lshr i64 %566, 32\l  %569 = mul nuw nsw i64 %557, 4113882560\l  %570 = add nuw nsw i64 %568, %569\l  %571 = trunc i64 %570 to i32\l  %572 = lshr i64 %570, 32\l  %573 = mul nuw nsw i64 %557, 4230436817\l  %574 = add nuw nsw i64 %572, %573\l  %575 = trunc i64 %574 to i32\l  %576 = lshr i64 %574, 32\l  %577 = mul nuw nsw i64 %557, 1313084713\l  %578 = add nuw nsw i64 %576, %577\l  %579 = trunc i64 %578 to i32\l  %580 = lshr i64 %578, 32\l  %581 = mul nuw nsw i64 %557, 2734261102\l  %582 = add nuw nsw i64 %580, %581\l  %583 = trunc i64 %582 to i32\l  %584 = lshr i64 %582, 32\l  %585 = trunc i64 %584 to i32\l  %586 = add nsw i32 %554, -120\l  %587 = icmp ugt i32 %586, 63\l  %588 = select i1 %587, i32 %579, i32 %585\l  %589 = select i1 %587, i32 %575, i32 %583\l  %590 = select i1 %587, i32 %571, i32 %579\l  %591 = select i1 %587, i32 %567, i32 %575\l  %592 = select i1 %587, i32 %563, i32 %571\l  %593 = select i1 %587, i32 %559, i32 %567\l  %594 = select i1 %587, i32 -64, i32 0\l  %595 = add nsw i32 %594, %586\l  %596 = icmp ugt i32 %595, 31\l  %597 = select i1 %596, i32 %589, i32 %588\l  %598 = select i1 %596, i32 %590, i32 %589\l  %599 = select i1 %596, i32 %591, i32 %590\l  %600 = select i1 %596, i32 %592, i32 %591\l  %601 = select i1 %596, i32 %593, i32 %592\l  %602 = select i1 %596, i32 -32, i32 0\l  %603 = add nsw i32 %602, %595\l  %604 = icmp ugt i32 %603, 31\l  %605 = select i1 %604, i32 %598, i32 %597\l  %606 = select i1 %604, i32 %599, i32 %598\l  %607 = select i1 %604, i32 %600, i32 %599\l  %608 = select i1 %604, i32 %601, i32 %600\l  %609 = select i1 %604, i32 -32, i32 0\l  %610 = add nsw i32 %609, %603\l  %611 = icmp eq i32 %610, 0\l  %612 = sub nsw i32 32, %610\l  %613 = tail call i32 @llvm.fshr.i32(i32 %605, i32 %606, i32 %612)\l  %614 = tail call i32 @llvm.fshr.i32(i32 %606, i32 %607, i32 %612)\l  %615 = tail call i32 @llvm.fshr.i32(i32 %607, i32 %608, i32 %612)\l  %616 = select i1 %611, i32 %605, i32 %613\l  %617 = select i1 %611, i32 %606, i32 %614\l  %618 = select i1 %611, i32 %607, i32 %615\l  %619 = lshr i32 %616, 29\l  %620 = tail call i32 @llvm.fshl.i32(i32 %616, i32 %617, i32 2)\l  %621 = tail call i32 @llvm.fshl.i32(i32 %617, i32 %618, i32 2)\l  %622 = tail call i32 @llvm.fshl.i32(i32 %618, i32 %608, i32 2)\l  %623 = and i32 %619, 1\l  %624 = sub nsw i32 0, %623\l  %625 = shl i32 %619, 31\l  %626 = xor i32 %620, %624\l  %627 = xor i32 %621, %624\l  %628 = xor i32 %622, %624\l  %629 = tail call i32 @llvm.ctlz.i32(i32 %626, i1 false), !range !15\l  %630 = sub nsw i32 31, %629\l  %631 = tail call i32 @llvm.fshr.i32(i32 %626, i32 %627, i32 %630)\l  %632 = tail call i32 @llvm.fshr.i32(i32 %627, i32 %628, i32 %630)\l  %633 = shl nuw nsw i32 %629, 23\l  %634 = sub nuw nsw i32 1056964608, %633\l  %635 = lshr i32 %631, 9\l  %636 = or i32 %635, %634\l  %637 = or i32 %636, %625\l  %638 = bitcast i32 %637 to float\l  %639 = tail call i32 @llvm.fshl.i32(i32 %631, i32 %632, i32 23)\l  %640 = tail call i32 @llvm.ctlz.i32(i32 %639, i1 false), !range !15\l  %641 = fmul float %638, 0x3FF921FB40000000\l  %642 = add nuw nsw i32 %640, %629\l  %643 = shl nuw nsw i32 %642, 23\l  %644 = sub nuw nsw i32 855638016, %643\l  %645 = sub nsw i32 31, %640\l  %646 = tail call i32 @llvm.fshr.i32(i32 %639, i32 %632, i32 %645)\l  %647 = lshr i32 %646, 9\l  %648 = or i32 %644, %647\l  %649 = or i32 %648, %625\l  %650 = bitcast i32 %649 to float\l  %651 = fneg float %641\l  %652 = tail call float @llvm.fma.f32(float %638, float 0x3FF921FB40000000,\l... float %651)\l  %653 = tail call float @llvm.fma.f32(float %638, float 0x3E74442D00000000,\l... float %652)\l  %654 = tail call float @llvm.fma.f32(float %650, float 0x3FF921FB40000000,\l... float %653)\l  %655 = fadd float %641, %654\l  %656 = lshr i32 %616, 30\l  %657 = add nuw nsw i32 %623, %656\l  br label %658\l}"];
	Node0x51a56a0 -> Node0x5196a20;
	Node0x5196a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%658:\l658:                                              \l  %659 = phi float [ %550, %545 ], [ %655, %552 ]\l  %660 = phi i32 [ %551, %545 ], [ %657, %552 ]\l  %661 = fmul float %659, %659\l  %662 = tail call float @llvm.fmuladd.f32(float %661, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %663 = tail call float @llvm.fmuladd.f32(float %661, float %662, float\l... 0xBFC55553A0000000)\l  %664 = fmul float %661, %663\l  %665 = tail call float @llvm.fmuladd.f32(float %659, float %664, float %659)\l  %666 = tail call float @llvm.fmuladd.f32(float %661, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %667 = tail call float @llvm.fmuladd.f32(float %661, float %666, float\l... 0x3FA5557EE0000000)\l  %668 = tail call float @llvm.fmuladd.f32(float %661, float %667, float\l... 0xBFE0000080000000)\l  %669 = tail call float @llvm.fmuladd.f32(float %661, float %668, float\l... 1.000000e+00)\l  %670 = fneg float %665\l  %671 = and i32 %660, 1\l  %672 = icmp eq i32 %671, 0\l  %673 = select i1 %672, float %669, float %670\l  %674 = bitcast float %673 to i32\l  %675 = shl i32 %660, 30\l  %676 = and i32 %675, -2147483648\l  %677 = xor i32 %676, %674\l  %678 = bitcast i32 %677 to float\l  %679 = tail call i1 @llvm.amdgcn.class.f32(float %543, i32 504)\l  %680 = select i1 %679, float %678, float 0x7FF8000000000000\l  %681 = fmul contract float %541, %680\l  %682 = fadd contract float %405, %681\l  %683 = tail call float @llvm.minnum.f32(float %682, float 1.000000e+00)\l  %684 = tail call float @llvm.maxnum.f32(float %683, float -1.000000e+00)\l  %685 = tail call float @llvm.fabs.f32(float %684)\l  %686 = tail call float @llvm.fmuladd.f32(float %685, float -5.000000e-01,\l... float 5.000000e-01)\l  %687 = fmul float %684, %684\l  %688 = fcmp ogt float %685, 5.000000e-01\l  %689 = select i1 %688, float %686, float %687\l  %690 = tail call float @llvm.fmuladd.f32(float %689, float\l... 0x3FA38434E0000000, float 0x3F8BF8BB40000000)\l  %691 = tail call float @llvm.fmuladd.f32(float %689, float %690, float\l... 0x3FA0698780000000)\l  %692 = tail call float @llvm.fmuladd.f32(float %689, float %691, float\l... 0x3FA6C83620000000)\l  %693 = tail call float @llvm.fmuladd.f32(float %689, float %692, float\l... 0x3FB3337900000000)\l  %694 = tail call float @llvm.fmuladd.f32(float %689, float %693, float\l... 0x3FC5555580000000)\l  %695 = fmul float %689, %694\l  %696 = tail call float @llvm.sqrt.f32(float %689)\l  %697 = tail call float @llvm.fmuladd.f32(float %696, float %695, float %696)\l  %698 = fmul float %697, 2.000000e+00\l  %699 = fsub float 0x400921FB60000000, %698\l  %700 = fcmp olt float %684, 0.000000e+00\l  %701 = select i1 %700, float %699, float %698\l  %702 = tail call float @llvm.fmuladd.f32(float %684, float %695, float %684)\l  %703 = fsub float 0x3FF921FB60000000, %702\l  %704 = select i1 %688, float %701, float %703\l  %705 = fmul contract float %704, 1.800000e+02\l  %706 = fdiv contract float %705, 0x400921FA00000000\l  %707 = fmul contract float %706, 4.000000e+00\l  %708 = tail call float @llvm.floor.f32(float %707)\l  %709 = fptosi float %708 to i32\l  %710 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %709\l  %711 = atomicrmw add i32 addrspace(3)* %710, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %712 = add nuw nsw i32 %253, 1\l  %713 = icmp eq i32 %712, %107\l  br i1 %713, label %251, label %252, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5196a20:s0 -> Node0x518d450;
	Node0x5196a20:s1 -> Node0x5196630;
	Node0x5196920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%714:\l714:                                              \l  %715 = phi i32 [ %883, %714 ], [ 0, %251 ]\l  %716 = zext i32 %715 to i64\l  %717 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %716\l  %718 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %715\l  %719 = load i32, i32 addrspace(3)* %718, align 16, !tbaa !7\l  %720 = zext i32 %719 to i64\l  %721 = atomicrmw add i64 addrspace(1)* %717, i64 %720\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %722 = or i32 %715, 1\l  %723 = zext i32 %722 to i64\l  %724 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %723\l  %725 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %722\l  %726 = load i32, i32 addrspace(3)* %725, align 4, !tbaa !7\l  %727 = zext i32 %726 to i64\l  %728 = atomicrmw add i64 addrspace(1)* %724, i64 %727\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %729 = or i32 %715, 2\l  %730 = zext i32 %729 to i64\l  %731 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %730\l  %732 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %729\l  %733 = load i32, i32 addrspace(3)* %732, align 8, !tbaa !7\l  %734 = zext i32 %733 to i64\l  %735 = atomicrmw add i64 addrspace(1)* %731, i64 %734\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %736 = or i32 %715, 3\l  %737 = zext i32 %736 to i64\l  %738 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %737\l  %739 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %736\l  %740 = load i32, i32 addrspace(3)* %739, align 4, !tbaa !7\l  %741 = zext i32 %740 to i64\l  %742 = atomicrmw add i64 addrspace(1)* %738, i64 %741\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %743 = or i32 %715, 4\l  %744 = zext i32 %743 to i64\l  %745 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %744\l  %746 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %743\l  %747 = load i32, i32 addrspace(3)* %746, align 16, !tbaa !7\l  %748 = zext i32 %747 to i64\l  %749 = atomicrmw add i64 addrspace(1)* %745, i64 %748\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %750 = or i32 %715, 5\l  %751 = zext i32 %750 to i64\l  %752 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %751\l  %753 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %750\l  %754 = load i32, i32 addrspace(3)* %753, align 4, !tbaa !7\l  %755 = zext i32 %754 to i64\l  %756 = atomicrmw add i64 addrspace(1)* %752, i64 %755\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %757 = or i32 %715, 6\l  %758 = zext i32 %757 to i64\l  %759 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %758\l  %760 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %757\l  %761 = load i32, i32 addrspace(3)* %760, align 8, !tbaa !7\l  %762 = zext i32 %761 to i64\l  %763 = atomicrmw add i64 addrspace(1)* %759, i64 %762\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %764 = or i32 %715, 7\l  %765 = zext i32 %764 to i64\l  %766 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %765\l  %767 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %764\l  %768 = load i32, i32 addrspace(3)* %767, align 4, !tbaa !7\l  %769 = zext i32 %768 to i64\l  %770 = atomicrmw add i64 addrspace(1)* %766, i64 %769\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %771 = add nuw nsw i32 %715, 8\l  %772 = zext i32 %771 to i64\l  %773 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %772\l  %774 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %771\l  %775 = load i32, i32 addrspace(3)* %774, align 16, !tbaa !7\l  %776 = zext i32 %775 to i64\l  %777 = atomicrmw add i64 addrspace(1)* %773, i64 %776\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %778 = add nuw nsw i32 %715, 9\l  %779 = zext i32 %778 to i64\l  %780 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %779\l  %781 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %778\l  %782 = load i32, i32 addrspace(3)* %781, align 4, !tbaa !7\l  %783 = zext i32 %782 to i64\l  %784 = atomicrmw add i64 addrspace(1)* %780, i64 %783\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %785 = add nuw nsw i32 %715, 10\l  %786 = zext i32 %785 to i64\l  %787 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %786\l  %788 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %785\l  %789 = load i32, i32 addrspace(3)* %788, align 8, !tbaa !7\l  %790 = zext i32 %789 to i64\l  %791 = atomicrmw add i64 addrspace(1)* %787, i64 %790\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %792 = add nuw nsw i32 %715, 11\l  %793 = zext i32 %792 to i64\l  %794 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %793\l  %795 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %792\l  %796 = load i32, i32 addrspace(3)* %795, align 4, !tbaa !7\l  %797 = zext i32 %796 to i64\l  %798 = atomicrmw add i64 addrspace(1)* %794, i64 %797\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %799 = add nuw nsw i32 %715, 12\l  %800 = zext i32 %799 to i64\l  %801 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %800\l  %802 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %799\l  %803 = load i32, i32 addrspace(3)* %802, align 16, !tbaa !7\l  %804 = zext i32 %803 to i64\l  %805 = atomicrmw add i64 addrspace(1)* %801, i64 %804\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %806 = add nuw nsw i32 %715, 13\l  %807 = zext i32 %806 to i64\l  %808 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %807\l  %809 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %806\l  %810 = load i32, i32 addrspace(3)* %809, align 4, !tbaa !7\l  %811 = zext i32 %810 to i64\l  %812 = atomicrmw add i64 addrspace(1)* %808, i64 %811\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %813 = add nuw nsw i32 %715, 14\l  %814 = zext i32 %813 to i64\l  %815 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %814\l  %816 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %813\l  %817 = load i32, i32 addrspace(3)* %816, align 8, !tbaa !7\l  %818 = zext i32 %817 to i64\l  %819 = atomicrmw add i64 addrspace(1)* %815, i64 %818\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %820 = add nuw nsw i32 %715, 15\l  %821 = zext i32 %820 to i64\l  %822 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %821\l  %823 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %820\l  %824 = load i32, i32 addrspace(3)* %823, align 4, !tbaa !7\l  %825 = zext i32 %824 to i64\l  %826 = atomicrmw add i64 addrspace(1)* %822, i64 %825\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %827 = add nuw nsw i32 %715, 16\l  %828 = zext i32 %827 to i64\l  %829 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %828\l  %830 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %827\l  %831 = load i32, i32 addrspace(3)* %830, align 16, !tbaa !7\l  %832 = zext i32 %831 to i64\l  %833 = atomicrmw add i64 addrspace(1)* %829, i64 %832\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %834 = add nuw nsw i32 %715, 17\l  %835 = zext i32 %834 to i64\l  %836 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %835\l  %837 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %834\l  %838 = load i32, i32 addrspace(3)* %837, align 4, !tbaa !7\l  %839 = zext i32 %838 to i64\l  %840 = atomicrmw add i64 addrspace(1)* %836, i64 %839\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %841 = add nuw nsw i32 %715, 18\l  %842 = zext i32 %841 to i64\l  %843 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %842\l  %844 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %841\l  %845 = load i32, i32 addrspace(3)* %844, align 8, !tbaa !7\l  %846 = zext i32 %845 to i64\l  %847 = atomicrmw add i64 addrspace(1)* %843, i64 %846\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %848 = add nuw nsw i32 %715, 19\l  %849 = zext i32 %848 to i64\l  %850 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %849\l  %851 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %848\l  %852 = load i32, i32 addrspace(3)* %851, align 4, !tbaa !7\l  %853 = zext i32 %852 to i64\l  %854 = atomicrmw add i64 addrspace(1)* %850, i64 %853\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %855 = add nuw nsw i32 %715, 20\l  %856 = zext i32 %855 to i64\l  %857 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %856\l  %858 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %855\l  %859 = load i32, i32 addrspace(3)* %858, align 16, !tbaa !7\l  %860 = zext i32 %859 to i64\l  %861 = atomicrmw add i64 addrspace(1)* %857, i64 %860\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %862 = add nuw nsw i32 %715, 21\l  %863 = zext i32 %862 to i64\l  %864 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %863\l  %865 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %862\l  %866 = load i32, i32 addrspace(3)* %865, align 4, !tbaa !7\l  %867 = zext i32 %866 to i64\l  %868 = atomicrmw add i64 addrspace(1)* %864, i64 %867\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %869 = add nuw nsw i32 %715, 22\l  %870 = zext i32 %869 to i64\l  %871 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %870\l  %872 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %869\l  %873 = load i32, i32 addrspace(3)* %872, align 8, !tbaa !7\l  %874 = zext i32 %873 to i64\l  %875 = atomicrmw add i64 addrspace(1)* %871, i64 %874\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %876 = add nuw nsw i32 %715, 23\l  %877 = zext i32 %876 to i64\l  %878 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %877\l  %879 = getelementptr inbounds [720 x i32], [720 x i32] addrspace(3)*\l... @_ZZ9DR_kerneliiPfS_PyE5sHist, i32 0, i32 %876\l  %880 = load i32, i32 addrspace(3)* %879, align 4, !tbaa !7\l  %881 = zext i32 %880 to i64\l  %882 = atomicrmw add i64 addrspace(1)* %878, i64 %881\l... syncscope(\"agent-one-as\") monotonic, align 8\l  %883 = add nuw nsw i32 %715, 24\l  %884 = icmp eq i32 %883, 720\l  br i1 %884, label %885, label %714, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5196920:s0 -> Node0x5186200;
	Node0x5196920:s1 -> Node0x5196920;
	Node0x5186200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%885:\l885:                                              \l  ret void\l}"];
}
