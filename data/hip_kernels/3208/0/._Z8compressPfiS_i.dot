digraph "CFG for '_Z8compressPfiS_i' function" {
	label="CFG for '_Z8compressPfiS_i' function";

	Node0x58dd420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 2, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = icmp slt i32 %13, %3\l  %23 = icmp slt i32 %21, %3\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %116\l|{<s0>T|<s1>F}}"];
	Node0x58dd420:s0 -> Node0x58e0ed0;
	Node0x58dd420:s1 -> Node0x58e0f60;
	Node0x58e0ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%25:\l25:                                               \l  %26 = mul nsw i32 %13, %3\l  %27 = add nsw i32 %21, %26\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %2, i64 %28\l  store float 0.000000e+00, float addrspace(1)* %29, align 4, !tbaa !7\l  %30 = icmp sgt i32 %3, 0\l  br i1 %30, label %31, label %116\l|{<s0>T|<s1>F}}"];
	Node0x58e0ed0:s0 -> Node0x58e1f70;
	Node0x58e0ed0:s1 -> Node0x58e0f60;
	Node0x58e1f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%31:\l31:                                               \l  %32 = and i32 %3, 7\l  %33 = icmp ult i32 %3, 8\l  %34 = and i32 %3, -8\l  %35 = icmp eq i32 %32, 0\l  br label %36\l}"];
	Node0x58e1f70 -> Node0x58e24a0;
	Node0x58e24a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%36:\l36:                                               \l  %37 = phi float [ %59, %58 ], [ 0.000000e+00, %31 ]\l  %38 = phi i32 [ %60, %58 ], [ 0, %31 ]\l  %39 = add nsw i32 %38, %13\l  %40 = mul nsw i32 %39, %1\l  %41 = add i32 %40, %21\l  br i1 %33, label %42, label %62\l|{<s0>T|<s1>F}}"];
	Node0x58e24a0:s0 -> Node0x58e29a0;
	Node0x58e24a0:s1 -> Node0x58e2a30;
	Node0x58e29a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%42:\l42:                                               \l  %43 = phi float [ undef, %36 ], [ %112, %62 ]\l  %44 = phi float [ %37, %36 ], [ %112, %62 ]\l  %45 = phi i32 [ 0, %36 ], [ %113, %62 ]\l  br i1 %35, label %58, label %46\l|{<s0>T|<s1>F}}"];
	Node0x58e29a0:s0 -> Node0x58e2590;
	Node0x58e29a0:s1 -> Node0x58e3240;
	Node0x58e3240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi float [ %54, %46 ], [ %44, %42 ]\l  %48 = phi i32 [ %55, %46 ], [ %45, %42 ]\l  %49 = phi i32 [ %56, %46 ], [ 0, %42 ]\l  %50 = add i32 %41, %48\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7\l  %54 = fadd contract float %53, %47\l  store float %54, float addrspace(1)* %29, align 4, !tbaa !7\l  %55 = add nuw nsw i32 %48, 1\l  %56 = add i32 %49, 1\l  %57 = icmp eq i32 %56, %32\l  br i1 %57, label %58, label %46, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x58e3240:s0 -> Node0x58e2590;
	Node0x58e3240:s1 -> Node0x58e3240;
	Node0x58e2590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%58:\l58:                                               \l  %59 = phi float [ %43, %42 ], [ %54, %46 ]\l  %60 = add nuw nsw i32 %38, 1\l  %61 = icmp eq i32 %60, %3\l  br i1 %61, label %116, label %36, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x58e2590:s0 -> Node0x58e0f60;
	Node0x58e2590:s1 -> Node0x58e24a0;
	Node0x58e2a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%62:\l62:                                               \l  %63 = phi float [ %112, %62 ], [ %37, %36 ]\l  %64 = phi i32 [ %113, %62 ], [ 0, %36 ]\l  %65 = phi i32 [ %114, %62 ], [ 0, %36 ]\l  %66 = add i32 %41, %64\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7\l  %70 = fadd contract float %69, %63\l  store float %70, float addrspace(1)* %29, align 4, !tbaa !7\l  %71 = or i32 %64, 1\l  %72 = add i32 %41, %71\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7\l  %76 = fadd contract float %75, %70\l  store float %76, float addrspace(1)* %29, align 4, !tbaa !7\l  %77 = or i32 %64, 2\l  %78 = add i32 %41, %77\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !7\l  %82 = fadd contract float %81, %76\l  store float %82, float addrspace(1)* %29, align 4, !tbaa !7\l  %83 = or i32 %64, 3\l  %84 = add i32 %41, %83\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7\l  %88 = fadd contract float %87, %82\l  store float %88, float addrspace(1)* %29, align 4, !tbaa !7\l  %89 = or i32 %64, 4\l  %90 = add i32 %41, %89\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7\l  %94 = fadd contract float %93, %88\l  store float %94, float addrspace(1)* %29, align 4, !tbaa !7\l  %95 = or i32 %64, 5\l  %96 = add i32 %41, %95\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !7\l  %100 = fadd contract float %99, %94\l  store float %100, float addrspace(1)* %29, align 4, !tbaa !7\l  %101 = or i32 %64, 6\l  %102 = add i32 %41, %101\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %0, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !7\l  %106 = fadd contract float %105, %100\l  store float %106, float addrspace(1)* %29, align 4, !tbaa !7\l  %107 = or i32 %64, 7\l  %108 = add i32 %41, %107\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %0, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !7\l  %112 = fadd contract float %111, %106\l  store float %112, float addrspace(1)* %29, align 4, !tbaa !7\l  %113 = add nuw nsw i32 %64, 8\l  %114 = add i32 %65, 8\l  %115 = icmp eq i32 %114, %34\l  br i1 %115, label %42, label %62, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x58e2a30:s0 -> Node0x58e29a0;
	Node0x58e2a30:s1 -> Node0x58e2a30;
	Node0x58e0f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%116:\l116:                                              \l  ret void\l}"];
}
