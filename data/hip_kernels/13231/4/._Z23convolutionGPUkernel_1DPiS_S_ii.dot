digraph "CFG for '_Z23convolutionGPUkernel_1DPiS_S_ii' function" {
	label="CFG for '_Z23convolutionGPUkernel_1DPiS_S_ii' function";

	Node0x55a35a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = icmp slt i32 %14, %3\l  br i1 %15, label %16, label %129\l|{<s0>T|<s1>F}}"];
	Node0x55a35a0:s0 -> Node0x55a54a0;
	Node0x55a35a0:s1 -> Node0x55a5530;
	Node0x55a54a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%16:\l16:                                               \l  %17 = icmp sgt i32 %4, 0\l  br i1 %17, label %18, label %54\l|{<s0>T|<s1>F}}"];
	Node0x55a54a0:s0 -> Node0x55a5780;
	Node0x55a54a0:s1 -> Node0x55a57d0;
	Node0x55a5780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%18:\l18:                                               \l  %19 = lshr i32 %4, 1\l  %20 = sub i32 %14, %19\l  %21 = and i32 %4, 3\l  %22 = icmp ult i32 %4, 4\l  br i1 %22, label %25, label %23\l|{<s0>T|<s1>F}}"];
	Node0x55a5780:s0 -> Node0x55a5be0;
	Node0x55a5780:s1 -> Node0x55a5c30;
	Node0x55a5c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%23:\l23:                                               \l  %24 = and i32 %4, -4\l  br label %58\l}"];
	Node0x55a5c30 -> Node0x55a5e30;
	Node0x55a5be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%25:\l25:                                               \l  %26 = phi i32 [ undef, %18 ], [ %124, %123 ]\l  %27 = phi i32 [ 0, %18 ], [ %126, %123 ]\l  %28 = phi i32 [ %20, %18 ], [ %125, %123 ]\l  %29 = phi i32 [ 0, %18 ], [ %124, %123 ]\l  %30 = icmp eq i32 %21, 0\l  br i1 %30, label %54, label %31\l|{<s0>T|<s1>F}}"];
	Node0x55a5be0:s0 -> Node0x55a57d0;
	Node0x55a5be0:s1 -> Node0x55a6800;
	Node0x55a6800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = phi i32 [ %51, %48 ], [ %27, %25 ]\l  %33 = phi i32 [ %50, %48 ], [ %28, %25 ]\l  %34 = phi i32 [ %49, %48 ], [ %29, %25 ]\l  %35 = phi i32 [ %52, %48 ], [ 0, %25 ]\l  %36 = icmp slt i32 %33, %3\l  %37 = icmp sgt i32 %33, -1\l  %38 = and i1 %36, %37\l  br i1 %38, label %39, label %48\l|{<s0>T|<s1>F}}"];
	Node0x55a6800:s0 -> Node0x55a7110;
	Node0x55a6800:s1 -> Node0x55a6970;
	Node0x55a7110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%39:\l39:                                               \l  %40 = zext i32 %33 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %40\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %43 = zext i32 %32 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %43\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %46 = mul nsw i32 %45, %42\l  %47 = add nsw i32 %46, %34\l  br label %48\l}"];
	Node0x55a7110 -> Node0x55a6970;
	Node0x55a6970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i32 [ %47, %39 ], [ %34, %31 ]\l  %50 = add nsw i32 %33, 1\l  %51 = add nuw nsw i32 %32, 1\l  %52 = add i32 %35, 1\l  %53 = icmp eq i32 %52, %21\l  br i1 %53, label %54, label %31, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x55a6970:s0 -> Node0x55a57d0;
	Node0x55a6970:s1 -> Node0x55a6800;
	Node0x55a57d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%54:\l54:                                               \l  %55 = phi i32 [ 0, %16 ], [ %26, %25 ], [ %49, %48 ]\l  %56 = sext i32 %14 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %56\l  store i32 %55, i32 addrspace(1)* %57, align 4, !tbaa !7\l  br label %129\l}"];
	Node0x55a57d0 -> Node0x55a5530;
	Node0x55a5e30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%58:\l58:                                               \l  %59 = phi i32 [ 0, %23 ], [ %126, %123 ]\l  %60 = phi i32 [ %20, %23 ], [ %125, %123 ]\l  %61 = phi i32 [ 0, %23 ], [ %124, %123 ]\l  %62 = phi i32 [ 0, %23 ], [ %127, %123 ]\l  %63 = icmp slt i32 %60, %3\l  %64 = icmp sgt i32 %60, -1\l  %65 = and i1 %63, %64\l  br i1 %65, label %66, label %75\l|{<s0>T|<s1>F}}"];
	Node0x55a5e30:s0 -> Node0x55a5730;
	Node0x55a5e30:s1 -> Node0x55a6b40;
	Node0x55a5730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%66:\l66:                                               \l  %67 = zext i32 %60 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %70 = zext i32 %59 to i64\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %70\l  %72 = load i32, i32 addrspace(1)* %71, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %73 = mul nsw i32 %72, %69\l  %74 = add nsw i32 %73, %61\l  br label %75\l}"];
	Node0x55a5730 -> Node0x55a6b40;
	Node0x55a6b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%75:\l75:                                               \l  %76 = phi i32 [ %74, %66 ], [ %61, %58 ]\l  %77 = add nsw i32 %60, 1\l  %78 = icmp slt i32 %77, %3\l  %79 = icmp sgt i32 %60, -2\l  %80 = and i1 %78, %79\l  br i1 %80, label %81, label %91\l|{<s0>T|<s1>F}}"];
	Node0x55a6b40:s0 -> Node0x55a9af0;
	Node0x55a6b40:s1 -> Node0x55a9b40;
	Node0x55a9af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%81:\l81:                                               \l  %82 = or i32 %59, 1\l  %83 = zext i32 %77 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %86 = zext i32 %82 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %86\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %89 = mul nsw i32 %88, %85\l  %90 = add nsw i32 %89, %76\l  br label %91\l}"];
	Node0x55a9af0 -> Node0x55a9b40;
	Node0x55a9b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%91:\l91:                                               \l  %92 = phi i32 [ %90, %81 ], [ %76, %75 ]\l  %93 = add nsw i32 %60, 2\l  %94 = icmp slt i32 %93, %3\l  %95 = icmp sgt i32 %60, -3\l  %96 = and i1 %94, %95\l  br i1 %96, label %97, label %107\l|{<s0>T|<s1>F}}"];
	Node0x55a9b40:s0 -> Node0x55aa4d0;
	Node0x55a9b40:s1 -> Node0x55aa520;
	Node0x55aa4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%97:\l97:                                               \l  %98 = or i32 %59, 2\l  %99 = zext i32 %93 to i64\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %99\l  %101 = load i32, i32 addrspace(1)* %100, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %102 = zext i32 %98 to i64\l  %103 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %102\l  %104 = load i32, i32 addrspace(1)* %103, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %105 = mul nsw i32 %104, %101\l  %106 = add nsw i32 %105, %92\l  br label %107\l}"];
	Node0x55aa4d0 -> Node0x55aa520;
	Node0x55aa520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%107:\l107:                                              \l  %108 = phi i32 [ %106, %97 ], [ %92, %91 ]\l  %109 = add nsw i32 %60, 3\l  %110 = icmp slt i32 %109, %3\l  %111 = icmp sgt i32 %60, -4\l  %112 = and i1 %110, %111\l  br i1 %112, label %113, label %123\l|{<s0>T|<s1>F}}"];
	Node0x55aa520:s0 -> Node0x55aaee0;
	Node0x55aa520:s1 -> Node0x55a6340;
	Node0x55aaee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%113:\l113:                                              \l  %114 = or i32 %59, 3\l  %115 = zext i32 %109 to i64\l  %116 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %115\l  %117 = load i32, i32 addrspace(1)* %116, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %118 = zext i32 %114 to i64\l  %119 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %118\l  %120 = load i32, i32 addrspace(1)* %119, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %121 = mul nsw i32 %120, %117\l  %122 = add nsw i32 %121, %108\l  br label %123\l}"];
	Node0x55aaee0 -> Node0x55a6340;
	Node0x55a6340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%123:\l123:                                              \l  %124 = phi i32 [ %122, %113 ], [ %108, %107 ]\l  %125 = add nsw i32 %60, 4\l  %126 = add nuw nsw i32 %59, 4\l  %127 = add i32 %62, 4\l  %128 = icmp eq i32 %127, %24\l  br i1 %128, label %25, label %58, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55a6340:s0 -> Node0x55a5be0;
	Node0x55a6340:s1 -> Node0x55a5e30;
	Node0x55a5530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%129:\l129:                                              \l  ret void\l}"];
}
