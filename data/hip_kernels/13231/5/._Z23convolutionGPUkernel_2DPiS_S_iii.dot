digraph "CFG for '_Z23convolutionGPUkernel_2DPiS_S_iii' function" {
	label="CFG for '_Z23convolutionGPUkernel_2DPiS_S_iii' function";

	Node0x49eaf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %4\l  %25 = icmp slt i32 %23, %3\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %171\l|{<s0>T|<s1>F}}"];
	Node0x49eaf50:s0 -> Node0x49eea10;
	Node0x49eaf50:s1 -> Node0x49eeaa0;
	Node0x49eea10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%27:\l27:                                               \l  %28 = sdiv i32 %5, 2\l  %29 = sub nsw i32 %15, %28\l  %30 = sub nsw i32 %23, %28\l  %31 = icmp sgt i32 %5, 0\l  br i1 %31, label %32, label %45\l|{<s0>T|<s1>F}}"];
	Node0x49eea10:s0 -> Node0x49eee80;
	Node0x49eea10:s1 -> Node0x49eeed0;
	Node0x49eee80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%32:\l32:                                               \l  %33 = and i32 %5, 3\l  %34 = icmp ult i32 %5, 4\l  %35 = and i32 %5, -4\l  %36 = icmp eq i32 %33, 0\l  br label %37\l}"];
	Node0x49eee80 -> Node0x49ef400;
	Node0x49ef400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%37:\l37:                                               \l  %38 = phi i32 [ %82, %81 ], [ 0, %32 ]\l  %39 = phi i32 [ %83, %81 ], [ 0, %32 ]\l  %40 = add nsw i32 %39, %30\l  %41 = icmp sgt i32 %40, -1\l  %42 = icmp slt i32 %40, %3\l  %43 = mul nsw i32 %40, %3\l  %44 = mul nsw i32 %39, %5\l  br i1 %34, label %51, label %85\l|{<s0>T|<s1>F}}"];
	Node0x49ef400:s0 -> Node0x49efa50;
	Node0x49ef400:s1 -> Node0x49efae0;
	Node0x49eeed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%45:\l45:                                               \l  %46 = phi i32 [ 0, %27 ], [ %82, %81 ]\l  %47 = mul nsw i32 %23, %4\l  %48 = add nsw i32 %47, %15\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %49\l  store i32 %46, i32 addrspace(1)* %50, align 4, !tbaa !7\l  br label %171\l}"];
	Node0x49eeed0 -> Node0x49eeaa0;
	Node0x49efa50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%51:\l51:                                               \l  %52 = phi i32 [ undef, %37 ], [ %167, %166 ]\l  %53 = phi i32 [ %38, %37 ], [ %167, %166 ]\l  %54 = phi i32 [ 0, %37 ], [ %168, %166 ]\l  br i1 %36, label %81, label %55\l|{<s0>T|<s1>F}}"];
	Node0x49efa50:s0 -> Node0x49ef4f0;
	Node0x49efa50:s1 -> Node0x49f0850;
	Node0x49f0850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  %56 = phi i32 [ %77, %76 ], [ %53, %51 ]\l  %57 = phi i32 [ %78, %76 ], [ %54, %51 ]\l  %58 = phi i32 [ %79, %76 ], [ 0, %51 ]\l  %59 = add nsw i32 %57, %29\l  br i1 %41, label %60, label %76\l|{<s0>T|<s1>F}}"];
	Node0x49f0850:s0 -> Node0x49f0dd0;
	Node0x49f0850:s1 -> Node0x49f09c0;
	Node0x49f0dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%60:\l60:                                               \l  %61 = icmp sgt i32 %59, -1\l  %62 = select i1 %42, i1 %61, i1 false\l  %63 = icmp slt i32 %59, %4\l  %64 = select i1 %62, i1 %63, i1 false\l  br i1 %64, label %65, label %76\l|{<s0>T|<s1>F}}"];
	Node0x49f0dd0:s0 -> Node0x49ef010;
	Node0x49f0dd0:s1 -> Node0x49f09c0;
	Node0x49ef010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%65:\l65:                                               \l  %66 = add nsw i32 %59, %43\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %70 = add nsw i32 %57, %44\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %71\l  %73 = load i32, i32 addrspace(1)* %72, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %74 = mul nsw i32 %73, %69\l  %75 = add nsw i32 %74, %56\l  br label %76\l}"];
	Node0x49ef010 -> Node0x49f09c0;
	Node0x49f09c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  %77 = phi i32 [ %75, %65 ], [ %56, %60 ], [ %56, %55 ]\l  %78 = add nuw nsw i32 %57, 1\l  %79 = add i32 %58, 1\l  %80 = icmp eq i32 %79, %33\l  br i1 %80, label %81, label %55, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x49f09c0:s0 -> Node0x49ef4f0;
	Node0x49f09c0:s1 -> Node0x49f0850;
	Node0x49ef4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%81:\l81:                                               \l  %82 = phi i32 [ %52, %51 ], [ %77, %76 ]\l  %83 = add nuw nsw i32 %39, 1\l  %84 = icmp eq i32 %83, %5\l  br i1 %84, label %45, label %37, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x49ef4f0:s0 -> Node0x49eeed0;
	Node0x49ef4f0:s1 -> Node0x49ef400;
	Node0x49efae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%85:\l85:                                               \l  %86 = phi i32 [ %167, %166 ], [ %38, %37 ]\l  %87 = phi i32 [ %168, %166 ], [ 0, %37 ]\l  %88 = phi i32 [ %169, %166 ], [ 0, %37 ]\l  %89 = add nsw i32 %87, %29\l  br i1 %41, label %90, label %106\l|{<s0>T|<s1>F}}"];
	Node0x49efae0:s0 -> Node0x49f2a60;
	Node0x49efae0:s1 -> Node0x49f2ab0;
	Node0x49f2a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%90:\l90:                                               \l  %91 = icmp sgt i32 %89, -1\l  %92 = select i1 %42, i1 %91, i1 false\l  %93 = icmp slt i32 %89, %4\l  %94 = select i1 %92, i1 %93, i1 false\l  br i1 %94, label %95, label %106\l|{<s0>T|<s1>F}}"];
	Node0x49f2a60:s0 -> Node0x49f2e70;
	Node0x49f2a60:s1 -> Node0x49f2ab0;
	Node0x49f2e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%95:\l95:                                               \l  %96 = add nsw i32 %89, %43\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %97\l  %99 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %100 = add nsw i32 %87, %44\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %101\l  %103 = load i32, i32 addrspace(1)* %102, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %104 = mul nsw i32 %103, %99\l  %105 = add nsw i32 %104, %86\l  br label %106\l}"];
	Node0x49f2e70 -> Node0x49f2ab0;
	Node0x49f2ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%106:\l106:                                              \l  %107 = phi i32 [ %105, %95 ], [ %86, %90 ], [ %86, %85 ]\l  %108 = or i32 %87, 1\l  %109 = add nsw i32 %108, %29\l  br i1 %41, label %110, label %126\l|{<s0>T|<s1>F}}"];
	Node0x49f2ab0:s0 -> Node0x49f3750;
	Node0x49f2ab0:s1 -> Node0x49f37a0;
	Node0x49f3750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%110:\l110:                                              \l  %111 = icmp sgt i32 %109, -1\l  %112 = select i1 %42, i1 %111, i1 false\l  %113 = icmp slt i32 %109, %4\l  %114 = select i1 %112, i1 %113, i1 false\l  br i1 %114, label %115, label %126\l|{<s0>T|<s1>F}}"];
	Node0x49f3750:s0 -> Node0x49f3b60;
	Node0x49f3750:s1 -> Node0x49f37a0;
	Node0x49f3b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%115:\l115:                                              \l  %116 = add nsw i32 %109, %43\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %117\l  %119 = load i32, i32 addrspace(1)* %118, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %120 = add nsw i32 %108, %44\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %121\l  %123 = load i32, i32 addrspace(1)* %122, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %124 = mul nsw i32 %123, %119\l  %125 = add nsw i32 %124, %107\l  br label %126\l}"];
	Node0x49f3b60 -> Node0x49f37a0;
	Node0x49f37a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%126:\l126:                                              \l  %127 = phi i32 [ %125, %115 ], [ %107, %110 ], [ %107, %106 ]\l  %128 = or i32 %87, 2\l  %129 = add nsw i32 %128, %29\l  br i1 %41, label %130, label %146\l|{<s0>T|<s1>F}}"];
	Node0x49f37a0:s0 -> Node0x49f1220;
	Node0x49f37a0:s1 -> Node0x49f1270;
	Node0x49f1220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%130:\l130:                                              \l  %131 = icmp sgt i32 %129, -1\l  %132 = select i1 %42, i1 %131, i1 false\l  %133 = icmp slt i32 %129, %4\l  %134 = select i1 %132, i1 %133, i1 false\l  br i1 %134, label %135, label %146\l|{<s0>T|<s1>F}}"];
	Node0x49f1220:s0 -> Node0x49f4c70;
	Node0x49f1220:s1 -> Node0x49f1270;
	Node0x49f4c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%135:\l135:                                              \l  %136 = add nsw i32 %129, %43\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %137\l  %139 = load i32, i32 addrspace(1)* %138, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %140 = add nsw i32 %128, %44\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %141\l  %143 = load i32, i32 addrspace(1)* %142, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %144 = mul nsw i32 %143, %139\l  %145 = add nsw i32 %144, %127\l  br label %146\l}"];
	Node0x49f4c70 -> Node0x49f1270;
	Node0x49f1270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%146:\l146:                                              \l  %147 = phi i32 [ %145, %135 ], [ %127, %130 ], [ %127, %126 ]\l  %148 = or i32 %87, 3\l  %149 = add nsw i32 %148, %29\l  br i1 %41, label %150, label %166\l|{<s0>T|<s1>F}}"];
	Node0x49f1270:s0 -> Node0x49f5550;
	Node0x49f1270:s1 -> Node0x49f0540;
	Node0x49f5550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%150:\l150:                                              \l  %151 = icmp sgt i32 %149, -1\l  %152 = select i1 %42, i1 %151, i1 false\l  %153 = icmp slt i32 %149, %4\l  %154 = select i1 %152, i1 %153, i1 false\l  br i1 %154, label %155, label %166\l|{<s0>T|<s1>F}}"];
	Node0x49f5550:s0 -> Node0x49f58d0;
	Node0x49f5550:s1 -> Node0x49f0540;
	Node0x49f58d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%155:\l155:                                              \l  %156 = add nsw i32 %149, %43\l  %157 = sext i32 %156 to i64\l  %158 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %157\l  %159 = load i32, i32 addrspace(1)* %158, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %160 = add nsw i32 %148, %44\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %161\l  %163 = load i32, i32 addrspace(1)* %162, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %164 = mul nsw i32 %163, %159\l  %165 = add nsw i32 %164, %147\l  br label %166\l}"];
	Node0x49f58d0 -> Node0x49f0540;
	Node0x49f0540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%166:\l166:                                              \l  %167 = phi i32 [ %165, %155 ], [ %147, %150 ], [ %147, %146 ]\l  %168 = add nuw nsw i32 %87, 4\l  %169 = add i32 %88, 4\l  %170 = icmp eq i32 %169, %35\l  br i1 %170, label %51, label %85, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x49f0540:s0 -> Node0x49efa50;
	Node0x49f0540:s1 -> Node0x49efae0;
	Node0x49eeaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%171:\l171:                                              \l  ret void\l}"];
}
