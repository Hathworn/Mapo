digraph "CFG for '_Z11column_sumsPKfPfm' function" {
	label="CFG for '_Z11column_sumsPKfPfm' function";

	Node0x5631990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = add i32 %11, %4\l  %13 = sext i32 %12 to i64\l  %14 = icmp ult i64 %13, %2\l  br i1 %14, label %15, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5631990:s0 -> Node0x56338d0;
	Node0x5631990:s1 -> Node0x5633960;
	Node0x56338d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%15:\l15:                                               \l  %16 = and i64 %2, 3\l  %17 = icmp ult i64 %2, 4\l  br i1 %17, label %20, label %18\l|{<s0>T|<s1>F}}"];
	Node0x56338d0:s0 -> Node0x5633c40;
	Node0x56338d0:s1 -> Node0x5633c90;
	Node0x5633c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%18:\l18:                                               \l  %19 = and i64 %2, -4\l  br label %40\l}"];
	Node0x5633c90 -> Node0x5633e90;
	Node0x5633c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%20:\l20:                                               \l  %21 = phi float [ undef, %15 ], [ %66, %40 ]\l  %22 = phi i64 [ 0, %15 ], [ %67, %40 ]\l  %23 = phi float [ 0.000000e+00, %15 ], [ %66, %40 ]\l  %24 = icmp eq i64 %16, 0\l  br i1 %24, label %37, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5633c40:s0 -> Node0x5635130;
	Node0x5633c40:s1 -> Node0x56351c0;
	Node0x56351c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i64 [ %34, %25 ], [ %22, %20 ]\l  %27 = phi float [ %33, %25 ], [ %23, %20 ]\l  %28 = phi i64 [ %35, %25 ], [ 0, %20 ]\l  %29 = mul i64 %26, %2\l  %30 = add i64 %29, %13\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %33 = fadd contract float %27, %32\l  %34 = add nuw i64 %26, 1\l  %35 = add i64 %28, 1\l  %36 = icmp eq i64 %35, %16\l  br i1 %36, label %37, label %25, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x56351c0:s0 -> Node0x5635130;
	Node0x56351c0:s1 -> Node0x56351c0;
	Node0x5635130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%37:\l37:                                               \l  %38 = phi float [ %21, %20 ], [ %33, %25 ]\l  %39 = getelementptr inbounds float, float addrspace(1)* %1, i64 %13\l  store float %38, float addrspace(1)* %39, align 4, !tbaa !7\l  br label %70\l}"];
	Node0x5635130 -> Node0x5633960;
	Node0x5633e90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%40:\l40:                                               \l  %41 = phi i64 [ 0, %18 ], [ %67, %40 ]\l  %42 = phi float [ 0.000000e+00, %18 ], [ %66, %40 ]\l  %43 = phi i64 [ 0, %18 ], [ %68, %40 ]\l  %44 = mul i64 %41, %2\l  %45 = add i64 %44, %13\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %48 = fadd contract float %42, %47\l  %49 = or i64 %41, 1\l  %50 = mul i64 %49, %2\l  %51 = add i64 %50, %13\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %54 = fadd contract float %48, %53\l  %55 = or i64 %41, 2\l  %56 = mul i64 %55, %2\l  %57 = add i64 %56, %13\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %60 = fadd contract float %54, %59\l  %61 = or i64 %41, 3\l  %62 = mul i64 %61, %2\l  %63 = add i64 %62, %13\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %66 = fadd contract float %60, %65\l  %67 = add nuw i64 %41, 4\l  %68 = add i64 %43, 4\l  %69 = icmp eq i64 %68, %19\l  br i1 %69, label %20, label %40, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5633e90:s0 -> Node0x5633c40;
	Node0x5633e90:s1 -> Node0x5633e90;
	Node0x5633960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%70:\l70:                                               \l  ret void\l}"];
}
