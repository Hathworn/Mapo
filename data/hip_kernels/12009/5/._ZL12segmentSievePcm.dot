digraph "CFG for '_ZL12segmentSievePcm' function" {
	label="CFG for '_ZL12segmentSievePcm' function";

	Node0x54e0590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = mul i32 %3, %8\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = add i32 %9, %10\l  %12 = icmp sgt i32 %11, 0\l  br i1 %12, label %13, label %176\l|{<s0>T|<s1>F}}"];
	Node0x54e0590:s0 -> Node0x54e2490;
	Node0x54e0590:s1 -> Node0x54e2520;
	Node0x54e2490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%13:\l13:                                               \l  %14 = uitofp i64 %1 to double\l  %15 = icmp eq i64 %1, 0\l  %16 = select i1 %15, double 0x4FF0000000000000, double 1.000000e+00\l  %17 = fmul double %16, %14\l  %18 = tail call double @llvm.amdgcn.rsq.f64(double %17)\l  %19 = fmul double %17, %18\l  %20 = fmul double %18, 5.000000e-01\l  %21 = fneg double %20\l  %22 = tail call double @llvm.fma.f64(double %21, double %19, double\l... 5.000000e-01)\l  %23 = tail call double @llvm.fma.f64(double %20, double %22, double %20)\l  %24 = tail call double @llvm.fma.f64(double %19, double %22, double %19)\l  %25 = fneg double %24\l  %26 = tail call double @llvm.fma.f64(double %25, double %24, double %17)\l  %27 = tail call double @llvm.fma.f64(double %26, double %23, double %24)\l  %28 = fneg double %27\l  %29 = tail call double @llvm.fma.f64(double %28, double %27, double %17)\l  %30 = tail call double @llvm.fma.f64(double %29, double %23, double %27)\l  %31 = select i1 %15, double 0x37F0000000000000, double 1.000000e+00\l  %32 = fmul double %31, %30\l  %33 = fcmp oeq double %17, 0.000000e+00\l  %34 = fcmp oeq double %17, 0x7FF0000000000000\l  %35 = or i1 %33, %34\l  %36 = select i1 %35, double %17, double %32\l  %37 = fptoui double %36 to i64\l  %38 = trunc i64 %37 to i32\l  %39 = mul i32 %11, %38\l  %40 = freeze i32 %39\l  %41 = add i32 %40, %38\l  %42 = sext i32 %41 to i64\l  %43 = icmp ugt i64 %42, %1\l  %44 = trunc i64 %1 to i32\l  %45 = select i1 %43, i32 %44, i32 %41\l  %46 = icmp ugt i64 %37, 2\l  br i1 %46, label %47, label %176\l|{<s0>T|<s1>F}}"];
	Node0x54e2490:s0 -> Node0x54e4cb0;
	Node0x54e2490:s1 -> Node0x54e2520;
	Node0x54e4cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%47:\l47:                                               \l  %48 = phi i64 [ %174, %172 ], [ 2, %13 ]\l  %49 = trunc i64 %48 to i32\l  %50 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %48\l  %51 = load i8, i8 addrspace(1)* %50, align 1, !tbaa !7\l  %52 = icmp eq i8 %51, 0\l  br i1 %52, label %53, label %172\l|{<s0>T|<s1>F}}"];
	Node0x54e4cb0:s0 -> Node0x54e52e0;
	Node0x54e4cb0:s1 -> Node0x54e4e20;
	Node0x54e52e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%53:\l53:                                               \l  %54 = srem i32 %40, %49\l  %55 = sub nsw i32 %40, %54\l  %56 = icmp sgt i32 %54, 0\l  %57 = select i1 %56, i32 %49, i32 0\l  %58 = add nsw i32 %55, %57\l  %59 = icmp slt i32 %58, %45\l  br i1 %59, label %60, label %172\l|{<s0>T|<s1>F}}"];
	Node0x54e52e0:s0 -> Node0x54e57a0;
	Node0x54e52e0:s1 -> Node0x54e4e20;
	Node0x54e57a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%60:\l60:                                               \l  %61 = add i32 %40, %57\l  %62 = add i32 %61, %49\l  %63 = sub i32 %62, %54\l  %64 = tail call i32 @llvm.smax.i32(i32 %45, i32 %63)\l  %65 = add i32 %54, %64\l  %66 = add i32 %40, %57\l  %67 = add i32 %66, %49\l  %68 = icmp ne i32 %65, %67\l  %69 = sext i1 %68 to i32\l  %70 = select i1 %68, i32 2, i32 1\l  %71 = add i32 %54, %64\l  %72 = add i32 %40, %57\l  %73 = add i32 %71, %69\l  %74 = add i32 %72, %49\l  %75 = sub i32 %73, %74\l  %76 = udiv i32 %75, %49\l  %77 = add i32 %70, %76\l  %78 = icmp ult i32 %77, 4\l  br i1 %78, label %164, label %79\l|{<s0>T|<s1>F}}"];
	Node0x54e57a0:s0 -> Node0x54e66a0;
	Node0x54e57a0:s1 -> Node0x54e6730;
	Node0x54e6730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%79:\l79:                                               \l  %80 = and i32 %77, -4\l  %81 = mul i32 %80, %49\l  %82 = add i32 %58, %81\l  %83 = insertelement \<4 x i32\> poison, i32 %58, i64 0\l  %84 = shufflevector \<4 x i32\> %83, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %85 = insertelement \<4 x i32\> poison, i32 %49, i64 0\l  %86 = shufflevector \<4 x i32\> %85, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %87 = mul \<4 x i32\> %86, \<i32 0, i32 1, i32 2, i32 3\>\l  %88 = add \<4 x i32\> %84, %87\l  %89 = shl i32 %49, 2\l  %90 = insertelement \<4 x i32\> poison, i32 %89, i64 0\l  %91 = shufflevector \<4 x i32\> %90, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %92 = add i32 %77, -4\l  %93 = lshr i32 %92, 2\l  %94 = add nuw nsw i32 %93, 1\l  %95 = and i32 %94, 3\l  %96 = icmp ult i32 %92, 12\l  br i1 %96, label %144, label %97\l|{<s0>T|<s1>F}}"];
	Node0x54e6730:s0 -> Node0x54e82a0;
	Node0x54e6730:s1 -> Node0x54e8330;
	Node0x54e8330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%97:\l97:                                               \l  %98 = and i32 %94, -4\l  br label %99\l}"];
	Node0x54e8330 -> Node0x54e8500;
	Node0x54e8500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%99:\l99:                                               \l  %100 = phi \<4 x i32\> [ %88, %97 ], [ %141, %99 ]\l  %101 = phi i32 [ 0, %97 ], [ %142, %99 ]\l  %102 = sext \<4 x i32\> %100 to \<4 x i64\>\l  %103 = extractelement \<4 x i64\> %102, i64 0\l  %104 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %103\l  %105 = extractelement \<4 x i64\> %102, i64 1\l  %106 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %105\l  %107 = extractelement \<4 x i64\> %102, i64 2\l  %108 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %107\l  %109 = extractelement \<4 x i64\> %102, i64 3\l  %110 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %109\l  store i8 1, i8 addrspace(1)* %104, align 1, !tbaa !7\l  store i8 1, i8 addrspace(1)* %106, align 1, !tbaa !7\l  store i8 1, i8 addrspace(1)* %108, align 1, !tbaa !7\l  store i8 1, i8 addrspace(1)* %110, align 1, !tbaa !7\l  %111 = add \<4 x i32\> %100, %91\l  %112 = sext \<4 x i32\> %111 to \<4 x i64\>\l  %113 = extractelement \<4 x i64\> %112, i64 0\l  %114 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %113\l  %115 = extractelement \<4 x i64\> %112, i64 1\l  %116 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %115\l  %117 = extractelement \<4 x i64\> %112, i64 2\l  %118 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %117\l  %119 = extractelement \<4 x i64\> %112, i64 3\l  %120 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %119\l  store i8 1, i8 addrspace(1)* %114, align 1, !tbaa !7\l  store i8 1, i8 addrspace(1)* %116, align 1, !tbaa !7\l  store i8 1, i8 addrspace(1)* %118, align 1, !tbaa !7\l  store i8 1, i8 addrspace(1)* %120, align 1, !tbaa !7\l  %121 = add \<4 x i32\> %111, %91\l  %122 = sext \<4 x i32\> %121 to \<4 x i64\>\l  %123 = extractelement \<4 x i64\> %122, i64 0\l  %124 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %123\l  %125 = extractelement \<4 x i64\> %122, i64 1\l  %126 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %125\l  %127 = extractelement \<4 x i64\> %122, i64 2\l  %128 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %127\l  %129 = extractelement \<4 x i64\> %122, i64 3\l  %130 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %129\l  store i8 1, i8 addrspace(1)* %124, align 1, !tbaa !7\l  store i8 1, i8 addrspace(1)* %126, align 1, !tbaa !7\l  store i8 1, i8 addrspace(1)* %128, align 1, !tbaa !7\l  store i8 1, i8 addrspace(1)* %130, align 1, !tbaa !7\l  %131 = add \<4 x i32\> %121, %91\l  %132 = sext \<4 x i32\> %131 to \<4 x i64\>\l  %133 = extractelement \<4 x i64\> %132, i64 0\l  %134 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %133\l  %135 = extractelement \<4 x i64\> %132, i64 1\l  %136 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %135\l  %137 = extractelement \<4 x i64\> %132, i64 2\l  %138 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %137\l  %139 = extractelement \<4 x i64\> %132, i64 3\l  %140 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %139\l  store i8 1, i8 addrspace(1)* %134, align 1, !tbaa !7\l  store i8 1, i8 addrspace(1)* %136, align 1, !tbaa !7\l  store i8 1, i8 addrspace(1)* %138, align 1, !tbaa !7\l  store i8 1, i8 addrspace(1)* %140, align 1, !tbaa !7\l  %141 = add \<4 x i32\> %131, %91\l  %142 = add nuw i32 %101, 4\l  %143 = icmp eq i32 %142, %98\l  br i1 %143, label %144, label %99, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x54e8500:s0 -> Node0x54e82a0;
	Node0x54e8500:s1 -> Node0x54e8500;
	Node0x54e82a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%144:\l144:                                              \l  %145 = phi \<4 x i32\> [ %88, %79 ], [ %141, %99 ]\l  %146 = icmp eq i32 %95, 0\l  br i1 %146, label %162, label %147\l|{<s0>T|<s1>F}}"];
	Node0x54e82a0:s0 -> Node0x54eb6a0;
	Node0x54e82a0:s1 -> Node0x54eb6f0;
	Node0x54eb6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%147:\l147:                                              \l  %148 = phi \<4 x i32\> [ %159, %147 ], [ %145, %144 ]\l  %149 = phi i32 [ %160, %147 ], [ 0, %144 ]\l  %150 = sext \<4 x i32\> %148 to \<4 x i64\>\l  %151 = extractelement \<4 x i64\> %150, i64 0\l  %152 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %151\l  %153 = extractelement \<4 x i64\> %150, i64 1\l  %154 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %153\l  %155 = extractelement \<4 x i64\> %150, i64 2\l  %156 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %155\l  %157 = extractelement \<4 x i64\> %150, i64 3\l  %158 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %157\l  store i8 1, i8 addrspace(1)* %152, align 1, !tbaa !7\l  store i8 1, i8 addrspace(1)* %154, align 1, !tbaa !7\l  store i8 1, i8 addrspace(1)* %156, align 1, !tbaa !7\l  store i8 1, i8 addrspace(1)* %158, align 1, !tbaa !7\l  %159 = add \<4 x i32\> %148, %91\l  %160 = add i32 %149, 1\l  %161 = icmp eq i32 %160, %95\l  br i1 %161, label %162, label %147, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x54eb6f0:s0 -> Node0x54eb6a0;
	Node0x54eb6f0:s1 -> Node0x54eb6f0;
	Node0x54eb6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%162:\l162:                                              \l  %163 = icmp eq i32 %77, %80\l  br i1 %163, label %172, label %164\l|{<s0>T|<s1>F}}"];
	Node0x54eb6a0:s0 -> Node0x54e4e20;
	Node0x54eb6a0:s1 -> Node0x54e66a0;
	Node0x54e66a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%164:\l164:                                              \l  %165 = phi i32 [ %58, %60 ], [ %82, %162 ]\l  br label %166\l}"];
	Node0x54e66a0 -> Node0x54ec650;
	Node0x54ec650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%166:\l166:                                              \l  %167 = phi i32 [ %170, %166 ], [ %165, %164 ]\l  %168 = sext i32 %167 to i64\l  %169 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %168\l  store i8 1, i8 addrspace(1)* %169, align 1, !tbaa !7\l  %170 = add nsw i32 %167, %49\l  %171 = icmp slt i32 %170, %45\l  br i1 %171, label %166, label %172, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x54ec650:s0 -> Node0x54ec650;
	Node0x54ec650:s1 -> Node0x54e4e20;
	Node0x54e4e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%172:\l172:                                              \l  %173 = add nuw nsw i64 %48, 1\l  %174 = and i64 %173, 4294967295\l  %175 = icmp ult i64 %174, %37\l  br i1 %175, label %47, label %176, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x54e4e20:s0 -> Node0x54e4cb0;
	Node0x54e4e20:s1 -> Node0x54e2520;
	Node0x54e2520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%176:\l176:                                              \l  ret void\l}"];
}
