digraph "CFG for '_ZL19sieveOfEratosthenesPcm' function" {
	label="CFG for '_ZL19sieveOfEratosthenesPcm' function";

	Node0x582d990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%2:\l  store i8 1, i8 addrspace(1)* %0, align 1, !tbaa !4\l  %3 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 1\l  store i8 1, i8 addrspace(1)* %3, align 1, !tbaa !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !7, !invariant.load !8\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %12 = add i32 %10, %11\l  %13 = uitofp i64 %1 to double\l  %14 = icmp eq i64 %1, 0\l  %15 = select i1 %14, double 0x4FF0000000000000, double 1.000000e+00\l  %16 = fmul double %15, %13\l  %17 = tail call double @llvm.amdgcn.rsq.f64(double %16)\l  %18 = fmul double %16, %17\l  %19 = fmul double %17, 5.000000e-01\l  %20 = fneg double %19\l  %21 = tail call double @llvm.fma.f64(double %20, double %18, double\l... 5.000000e-01)\l  %22 = tail call double @llvm.fma.f64(double %19, double %21, double %19)\l  %23 = tail call double @llvm.fma.f64(double %18, double %21, double %18)\l  %24 = fneg double %23\l  %25 = tail call double @llvm.fma.f64(double %24, double %23, double %16)\l  %26 = tail call double @llvm.fma.f64(double %25, double %22, double %23)\l  %27 = fneg double %26\l  %28 = tail call double @llvm.fma.f64(double %27, double %26, double %16)\l  %29 = tail call double @llvm.fma.f64(double %28, double %22, double %26)\l  %30 = select i1 %14, double 0x37F0000000000000, double 1.000000e+00\l  %31 = fmul double %30, %29\l  %32 = fcmp oeq double %16, 0.000000e+00\l  %33 = fcmp oeq double %16, 0x7FF0000000000000\l  %34 = or i1 %32, %33\l  %35 = select i1 %34, double %16, double %31\l  %36 = fptoui double %35 to i64\l  %37 = sext i32 %12 to i64\l  %38 = icmp ugt i64 %37, %36\l  br i1 %38, label %56, label %39\l|{<s0>T|<s1>F}}"];
	Node0x582d990:s0 -> Node0x5832470;
	Node0x582d990:s1 -> Node0x58324c0;
	Node0x58324c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%39:\l39:                                               \l  %40 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %37\l  %41 = load i8, i8 addrspace(1)* %40, align 1, !tbaa !4\l  %42 = icmp eq i8 %41, 0\l  %43 = icmp sgt i32 %12, 1\l  %44 = select i1 %42, i1 %43, i1 false\l  %45 = mul nsw i32 %12, %12\l  %46 = zext i32 %45 to i64\l  %47 = icmp ult i64 %46, %1\l  %48 = select i1 %44, i1 %47, i1 false\l  br i1 %48, label %49, label %56\l|{<s0>T|<s1>F}}"];
	Node0x58324c0:s0 -> Node0x5832b80;
	Node0x58324c0:s1 -> Node0x5832470;
	Node0x5832b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = phi i64 [ %54, %49 ], [ %46, %39 ]\l  %51 = phi i32 [ %53, %49 ], [ %45, %39 ]\l  %52 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %50\l  store i8 1, i8 addrspace(1)* %52, align 1, !tbaa !4\l  %53 = add nsw i32 %51, %12\l  %54 = sext i32 %53 to i64\l  %55 = icmp ult i64 %54, %1\l  br i1 %55, label %49, label %56, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5832b80:s0 -> Node0x5832b80;
	Node0x5832b80:s1 -> Node0x5832470;
	Node0x5832470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%56:\l56:                                               \l  ret void\l}"];
}
