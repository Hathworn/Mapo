digraph "CFG for '_Z23multiClassTestingKerneliiiiPfS_Pi' function" {
	label="CFG for '_Z23multiClassTestingKerneliiiiPfS_Pi' function";

	Node0x456d4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = mul nsw i32 %8, %3\l  %10 = icmp sgt i32 %2, 0\l  br i1 %10, label %11, label %44\l|{<s0>T|<s1>F}}"];
	Node0x456d4e0:s0 -> Node0x456de90;
	Node0x456d4e0:s1 -> Node0x456df20;
	Node0x456de90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%11:\l11:                                               \l  %12 = icmp sgt i32 %1, 0\l  br label %15\l}"];
	Node0x456de90 -> Node0x456e0f0;
	Node0x456e1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%13:\l13:                                               \l  %14 = icmp eq i32 %24, %2\l  br i1 %14, label %44, label %15, !llvm.loop !4\l|{<s0>T|<s1>F}}"];
	Node0x456e1b0:s0 -> Node0x456df20;
	Node0x456e1b0:s1 -> Node0x456e0f0;
	Node0x456e0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%15:\l15:                                               \l  %16 = phi i32 [ %24, %13 ], [ 0, %11 ]\l  %17 = mul nsw i32 %16, %1\l  %18 = add nsw i32 %17, %9\l  %19 = add nsw i32 %18, %1\l  br i1 %12, label %25, label %20\l|{<s0>T|<s1>F}}"];
	Node0x456e0f0:s0 -> Node0x456f240;
	Node0x456e0f0:s1 -> Node0x456f290;
	Node0x456f290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%20:\l20:                                               \l  %21 = phi i32 [ -1, %15 ], [ %38, %25 ]\l  %22 = phi i32 [ -1, %15 ], [ %41, %25 ]\l  %23 = icmp eq i32 %21, %22\l  %24 = add nuw nsw i32 %16, 1\l  br i1 %23, label %13, label %44\l|{<s0>T|<s1>F}}"];
	Node0x456f290:s0 -> Node0x456e1b0;
	Node0x456f290:s1 -> Node0x456df20;
	Node0x456f240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %42, %25 ], [ %18, %15 ]\l  %27 = phi i32 [ %41, %25 ], [ -1, %15 ]\l  %28 = phi float [ %40, %25 ], [ 0.000000e+00, %15 ]\l  %29 = phi i32 [ %38, %25 ], [ -1, %15 ]\l  %30 = phi float [ %37, %25 ], [ 0.000000e+00, %15 ]\l  %31 = sext i32 %26 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %4, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !6,\l... !amdgpu.noclobber !10\l  %34 = getelementptr inbounds float, float addrspace(1)* %5, i64 %31\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !6,\l... !amdgpu.noclobber !10\l  %36 = fcmp contract ogt float %33, %30\l  %37 = select i1 %36, float %33, float %30\l  %38 = select i1 %36, i32 %26, i32 %29\l  %39 = fcmp contract ogt float %35, %28\l  %40 = select i1 %39, float %35, float %28\l  %41 = select i1 %39, i32 %26, i32 %27\l  %42 = add nsw i32 %26, 1\l  %43 = icmp slt i32 %42, %19\l  br i1 %43, label %25, label %20, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x456f240:s0 -> Node0x456f240;
	Node0x456f240:s1 -> Node0x456f290;
	Node0x456df20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%44:\l44:                                               \l  %45 = phi i32 [ 1, %7 ], [ 0, %20 ], [ 1, %13 ]\l  %46 = add nsw i32 %8, %0\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %47\l  store i32 %45, i32 addrspace(1)* %48, align 4, !tbaa !12\l  ret void\l}"];
}
