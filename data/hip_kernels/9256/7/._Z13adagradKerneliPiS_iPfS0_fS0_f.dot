digraph "CFG for '_Z13adagradKerneliPiS_iPfS0_fS0_f' function" {
	label="CFG for '_Z13adagradKerneliPiS_iPfS0_fS0_f' function";

	Node0x61fe4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = sext i32 %10 to i64\l  %12 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %11\l  %13 = load i32, i32 addrspace(1)* %12, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %14 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %11\l  %15 = load i32, i32 addrspace(1)* %14, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %16 = icmp ne i32 %13, -1\l  %17 = icmp sgt i32 %15, 0\l  %18 = select i1 %16, i1 %17, i1 false\l  br i1 %18, label %19, label %85\l|{<s0>T|<s1>F}}"];
	Node0x61fe4c0:s0 -> Node0x6201760;
	Node0x61fe4c0:s1 -> Node0x62017f0;
	Node0x6201760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%19:\l19:                                               \l  %20 = sitofp i32 %15 to float\l  %21 = fdiv contract float 1.000000e+00, %20\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %24 = getelementptr i8, i8 addrspace(4)* %23, i64 4\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 4, !range !9, !invariant.load !8\l  %27 = zext i16 %26 to i32\l  %28 = mul i32 %22, %27\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !10\l  %30 = add i32 %28, %29\l  %31 = mul i32 %30, %0\l  %32 = mul nsw i32 %13, %3\l  %33 = add nsw i32 %31, %32\l  %34 = add nsw i32 %33, %0\l  %35 = add nsw i32 %32, %3\l  %36 = tail call i32 @llvm.smin.i32(i32 %34, i32 %35)\l  %37 = icmp slt i32 %33, %36\l  br i1 %37, label %38, label %85\l|{<s0>T|<s1>F}}"];
	Node0x6201760:s0 -> Node0x6203740;
	Node0x6201760:s1 -> Node0x62017f0;
	Node0x6203740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%38:\l38:                                               \l  %39 = mul nsw i32 %10, %3\l  %40 = add nsw i32 %31, %39\l  br label %41\l}"];
	Node0x6203740 -> Node0x62039a0;
	Node0x62039a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = phi i32 [ %82, %41 ], [ %33, %38 ]\l  %43 = phi i32 [ %83, %41 ], [ %40, %38 ]\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %5, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !11\l  %47 = fmul contract float %21, %46\l  %48 = sext i32 %42 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %7, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !11\l  %51 = fmul contract float %47, %47\l  %52 = fadd contract float %50, %51\l  store float %52, float addrspace(1)* %49, align 4, !tbaa !11\l  %53 = fcmp olt float %52, 0x39F0000000000000\l  %54 = select i1 %53, float 0x41F0000000000000, float 1.000000e+00\l  %55 = fmul float %52, %54\l  %56 = tail call float @llvm.sqrt.f32(float %55)\l  %57 = bitcast float %56 to i32\l  %58 = add nsw i32 %57, -1\l  %59 = bitcast i32 %58 to float\l  %60 = add nsw i32 %57, 1\l  %61 = bitcast i32 %60 to float\l  %62 = tail call i1 @llvm.amdgcn.class.f32(float %55, i32 608)\l  %63 = select i1 %53, float 0x3EF0000000000000, float 1.000000e+00\l  %64 = fneg float %61\l  %65 = tail call float @llvm.fma.f32(float %64, float %56, float %55)\l  %66 = fcmp ogt float %65, 0.000000e+00\l  %67 = fneg float %59\l  %68 = tail call float @llvm.fma.f32(float %67, float %56, float %55)\l  %69 = fcmp ole float %68, 0.000000e+00\l  %70 = select i1 %69, float %59, float %56\l  %71 = select i1 %66, float %61, float %70\l  %72 = fmul float %63, %71\l  %73 = select i1 %62, float %55, float %72\l  %74 = fadd contract float %73, %8\l  %75 = fdiv contract float %6, %74\l  %76 = fmul contract float %21, %75\l  %77 = load float, float addrspace(1)* %45, align 4, !tbaa !11\l  %78 = fmul contract float %77, %76\l  %79 = getelementptr inbounds float, float addrspace(1)* %4, i64 %48\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !11\l  %81 = fsub contract float %80, %78\l  store float %81, float addrspace(1)* %79, align 4, !tbaa !11\l  %82 = add nsw i32 %42, 1\l  %83 = add nsw i32 %43, 1\l  %84 = icmp slt i32 %82, %36\l  br i1 %84, label %41, label %85, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x62039a0:s0 -> Node0x62039a0;
	Node0x62039a0:s1 -> Node0x62017f0;
	Node0x62017f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%85:\l85:                                               \l  ret void\l}"];
}
