digraph "CFG for '_Z15setupRandStatesP12hiprandStatej' function" {
	label="CFG for '_Z15setupRandStatesP12hiprandStatej' function";

	Node0x50a8a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%2:\l  %3 = alloca %\"class.rocrand_device::xorwow_engine\", align 8, addrspace(5)\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %7 = bitcast i8 addrspace(4)* %6 to i32 addrspace(4)*\l  %8 = load i32, i32 addrspace(4)* %7, align 4, !tbaa !4\l  %9 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !13, !invariant.load\l... !14\l  %12 = zext i16 %11 to i32\l  %13 = udiv i32 %8, %12\l  %14 = mul i32 %13, %12\l  %15 = icmp ugt i32 %8, %14\l  %16 = zext i1 %15 to i32\l  %17 = add i32 %13, %16\l  %18 = mul i32 %17, %4\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = add i32 %18, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = mul i32 %20, %12\l  %23 = add i32 %22, %21\l  %24 = sext i32 %23 to i64\l  %25 = bitcast %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3 to i8\l... addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 48, i8 addrspace(5)* %25) #4\l  %26 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 0\l  %27 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 1\l  %28 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 2\l  %29 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 3\l  %30 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 4\l  %31 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 0\l  %32 = xor i32 %1, 746559103\l  %33 = mul i32 %32, 1228688033\l  %34 = add i32 %33, 123456789\l  store i32 %34, i32 addrspace(5)* %26, align 8, !tbaa !16\l  %35 = xor i32 %33, 362436069\l  store i32 %35, i32 addrspace(5)* %27, align 4, !tbaa !16\l  store i32 -1452303100, i32 addrspace(5)* %28, align 8, !tbaa !16\l  store i32 -1894485380, i32 addrspace(5)* %29, align 4, !tbaa !16\l  %36 = add i32 %33, 5783321\l  store i32 %36, i32 addrspace(5)* %30, align 8, !tbaa !16\l  %37 = add i32 %33, -1966976488\l  store i32 %37, i32 addrspace(5)* %31, align 8, !tbaa !20\l  %38 = icmp eq i32 %23, 0\l  br i1 %38, label %216, label %39\l|{<s0>T|<s1>F}}"];
	Node0x50a8a10:s0 -> Node0x50b0160;
	Node0x50a8a10:s1 -> Node0x50b01f0;
	Node0x50b01f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%39:\l39:                                               \l  %40 = phi i64 [ %49, %47 ], [ %24, %2 ]\l  %41 = phi i32 [ %48, %47 ], [ 0, %2 ]\l  %42 = trunc i64 %40 to i32\l  %43 = and i32 %42, 3\l  %44 = icmp eq i32 %43, 0\l  br i1 %44, label %47, label %45\l|{<s0>T|<s1>F}}"];
	Node0x50b01f0:s0 -> Node0x50b0330;
	Node0x50b01f0:s1 -> Node0x50b0720;
	Node0x50b0720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%45:\l45:                                               \l  %46 = zext i32 %41 to i64\l  br label %51\l}"];
	Node0x50b0720 -> Node0x50b08d0;
	Node0x50b0330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%47:\l47:                                               \l  %48 = add nuw nsw i32 %41, 1\l  %49 = lshr i64 %40, 2\l  %50 = icmp ult i64 %40, 4\l  br i1 %50, label %216, label %39, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x50b0330:s0 -> Node0x50b0160;
	Node0x50b0330:s1 -> Node0x50b01f0;
	Node0x50b08d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%51:\l51:                                               \l  %52 = phi i32 [ 0, %45 ], [ %214, %213 ]\l  br label %53\l}"];
	Node0x50b08d0 -> Node0x50b0db0;
	Node0x50b0db0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi i32 [ 0, %51 ], [ %186, %53 ]\l  %55 = phi i32 [ 0, %51 ], [ %192, %53 ]\l  %56 = phi i32 [ 0, %51 ], [ %198, %53 ]\l  %57 = phi i32 [ 0, %51 ], [ %204, %53 ]\l  %58 = phi i32 [ 0, %51 ], [ %210, %53 ]\l  %59 = phi i32 [ 0, %51 ], [ %211, %53 ]\l  %60 = lshr i32 %59, 5\l  %61 = and i32 %59, 28\l  %62 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 %60\l  %63 = load i32, i32 addrspace(5)* %62, align 4, !tbaa !16\l  %64 = shl nuw i32 1, %61\l  %65 = and i32 %64, %63\l  %66 = icmp eq i32 %65, 0\l  %67 = mul nuw nsw i32 %59, 5\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %68\l  %70 = load i32, i32 addrspace(4)* %69, align 16, !tbaa !16\l  %71 = select i1 %66, i32 0, i32 %70\l  %72 = xor i32 %71, %54\l  %73 = or i32 %67, 1\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %74\l  %76 = load i32, i32 addrspace(4)* %75, align 4, !tbaa !16\l  %77 = select i1 %66, i32 0, i32 %76\l  %78 = xor i32 %77, %55\l  %79 = or i32 %67, 2\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %80\l  %82 = load i32, i32 addrspace(4)* %81, align 8, !tbaa !16\l  %83 = select i1 %66, i32 0, i32 %82\l  %84 = xor i32 %83, %56\l  %85 = or i32 %67, 3\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %86\l  %88 = load i32, i32 addrspace(4)* %87, align 4, !tbaa !16\l  %89 = select i1 %66, i32 0, i32 %88\l  %90 = xor i32 %89, %57\l  %91 = add nuw nsw i32 %67, 4\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %92\l  %94 = load i32, i32 addrspace(4)* %93, align 16, !tbaa !16\l  %95 = select i1 %66, i32 0, i32 %94\l  %96 = xor i32 %95, %58\l  %97 = or i32 %59, 1\l  %98 = lshr i32 %59, 5\l  %99 = and i32 %97, 29\l  %100 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 %98\l  %101 = load i32, i32 addrspace(5)* %100, align 4, !tbaa !16\l  %102 = shl nuw i32 1, %99\l  %103 = and i32 %102, %101\l  %104 = icmp eq i32 %103, 0\l  %105 = mul nuw nsw i32 %97, 5\l  %106 = zext i32 %105 to i64\l  %107 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %106\l  %108 = load i32, i32 addrspace(4)* %107, align 4, !tbaa !16\l  %109 = select i1 %104, i32 0, i32 %108\l  %110 = xor i32 %109, %72\l  %111 = add nuw nsw i32 %105, 1\l  %112 = zext i32 %111 to i64\l  %113 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %112\l  %114 = load i32, i32 addrspace(4)* %113, align 8, !tbaa !16\l  %115 = select i1 %104, i32 0, i32 %114\l  %116 = xor i32 %115, %78\l  %117 = or i32 %105, 2\l  %118 = zext i32 %117 to i64\l  %119 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %118\l  %120 = load i32, i32 addrspace(4)* %119, align 4, !tbaa !16\l  %121 = select i1 %104, i32 0, i32 %120\l  %122 = xor i32 %121, %84\l  %123 = add nuw nsw i32 %105, 3\l  %124 = zext i32 %123 to i64\l  %125 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %124\l  %126 = load i32, i32 addrspace(4)* %125, align 16, !tbaa !16\l  %127 = select i1 %104, i32 0, i32 %126\l  %128 = xor i32 %127, %90\l  %129 = add nuw nsw i32 %105, 4\l  %130 = zext i32 %129 to i64\l  %131 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %130\l  %132 = load i32, i32 addrspace(4)* %131, align 4, !tbaa !16\l  %133 = select i1 %104, i32 0, i32 %132\l  %134 = xor i32 %133, %96\l  %135 = or i32 %59, 2\l  %136 = lshr i32 %59, 5\l  %137 = and i32 %135, 30\l  %138 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 %136\l  %139 = load i32, i32 addrspace(5)* %138, align 4, !tbaa !16\l  %140 = shl nuw i32 1, %137\l  %141 = and i32 %140, %139\l  %142 = icmp eq i32 %141, 0\l  %143 = mul nuw nsw i32 %135, 5\l  %144 = zext i32 %143 to i64\l  %145 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %144\l  %146 = load i32, i32 addrspace(4)* %145, align 8, !tbaa !16\l  %147 = select i1 %142, i32 0, i32 %146\l  %148 = xor i32 %147, %110\l  %149 = or i32 %143, 1\l  %150 = zext i32 %149 to i64\l  %151 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %150\l  %152 = load i32, i32 addrspace(4)* %151, align 4, !tbaa !16\l  %153 = select i1 %142, i32 0, i32 %152\l  %154 = xor i32 %153, %116\l  %155 = add nuw nsw i32 %143, 2\l  %156 = zext i32 %155 to i64\l  %157 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %156\l  %158 = load i32, i32 addrspace(4)* %157, align 16, !tbaa !16\l  %159 = select i1 %142, i32 0, i32 %158\l  %160 = xor i32 %159, %122\l  %161 = add nuw nsw i32 %143, 3\l  %162 = zext i32 %161 to i64\l  %163 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %162\l  %164 = load i32, i32 addrspace(4)* %163, align 4, !tbaa !16\l  %165 = select i1 %142, i32 0, i32 %164\l  %166 = xor i32 %165, %128\l  %167 = add nuw nsw i32 %143, 4\l  %168 = zext i32 %167 to i64\l  %169 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %168\l  %170 = load i32, i32 addrspace(4)* %169, align 8, !tbaa !16\l  %171 = select i1 %142, i32 0, i32 %170\l  %172 = xor i32 %171, %134\l  %173 = or i32 %59, 3\l  %174 = lshr i32 %59, 5\l  %175 = and i32 %173, 31\l  %176 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 %174\l  %177 = load i32, i32 addrspace(5)* %176, align 4, !tbaa !16\l  %178 = shl nuw i32 1, %175\l  %179 = and i32 %178, %177\l  %180 = icmp eq i32 %179, 0\l  %181 = mul nuw nsw i32 %173, 5\l  %182 = zext i32 %181 to i64\l  %183 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %182\l  %184 = load i32, i32 addrspace(4)* %183, align 4, !tbaa !16\l  %185 = select i1 %180, i32 0, i32 %184\l  %186 = xor i32 %185, %148\l  %187 = add nuw nsw i32 %181, 1\l  %188 = zext i32 %187 to i64\l  %189 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %188\l  %190 = load i32, i32 addrspace(4)* %189, align 16, !tbaa !16\l  %191 = select i1 %180, i32 0, i32 %190\l  %192 = xor i32 %191, %154\l  %193 = add nuw nsw i32 %181, 2\l  %194 = zext i32 %193 to i64\l  %195 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %194\l  %196 = load i32, i32 addrspace(4)* %195, align 4, !tbaa !16\l  %197 = select i1 %180, i32 0, i32 %196\l  %198 = xor i32 %197, %160\l  %199 = add nuw nsw i32 %181, 3\l  %200 = zext i32 %199 to i64\l  %201 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %200\l  %202 = load i32, i32 addrspace(4)* %201, align 8, !tbaa !16\l  %203 = select i1 %180, i32 0, i32 %202\l  %204 = xor i32 %203, %166\l  %205 = add nuw nsw i32 %181, 4\l  %206 = zext i32 %205 to i64\l  %207 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %46, i64 %206\l  %208 = load i32, i32 addrspace(4)* %207, align 4, !tbaa !16\l  %209 = select i1 %180, i32 0, i32 %208\l  %210 = xor i32 %209, %172\l  %211 = add nuw nsw i32 %59, 4\l  %212 = icmp eq i32 %211, 160\l  br i1 %212, label %213, label %53, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x50b0db0:s0 -> Node0x50b0c70;
	Node0x50b0db0:s1 -> Node0x50b0db0;
	Node0x50b0c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%213:\l213:                                              \l  store i32 %186, i32 addrspace(5)* %26, align 8, !tbaa !16\l  store i32 %192, i32 addrspace(5)* %27, align 4, !tbaa !16\l  store i32 %198, i32 addrspace(5)* %28, align 8, !tbaa !16\l  store i32 %204, i32 addrspace(5)* %29, align 4, !tbaa !16\l  store i32 %210, i32 addrspace(5)* %30, align 8, !tbaa !16\l  %214 = add nuw nsw i32 %52, 1\l  %215 = icmp eq i32 %214, %43\l  br i1 %215, label %47, label %51, !llvm.loop !28\l|{<s0>T|<s1>F}}"];
	Node0x50b0c70:s0 -> Node0x50b0330;
	Node0x50b0c70:s1 -> Node0x50b08d0;
	Node0x50b0160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%216:\l216:                                              \l  %217 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %24\l  %218 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 1\l  store i32 0, i32 addrspace(5)* %218, align 4, !tbaa !29\l  %219 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 2\l  store i32 0, i32 addrspace(5)* %219, align 8, !tbaa !30\l  %220 = bitcast %struct.hiprandState addrspace(1)* %217 to i8 addrspace(1)*\l  call void @llvm.memcpy.p1i8.p5i8.i64(i8 addrspace(1)* noundef align 8\l... dereferenceable(48) %220, i8 addrspace(5)* noundef align 8\l... dereferenceable(48) %25, i64 48, i1 false), !tbaa.struct !31\l  call void @llvm.lifetime.end.p5i8(i64 48, i8 addrspace(5)* %25) #4\l  ret void\l}"];
}
