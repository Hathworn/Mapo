digraph "CFG for '_Z20devFillAffectedIndexiiPi' function" {
	label="CFG for '_Z20devFillAffectedIndexiiPi' function";

	Node0x481f500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %0\l  br i1 %16, label %17, label %112\l|{<s0>T|<s1>F}}"];
	Node0x481f500:s0 -> Node0x4820e20;
	Node0x481f500:s1 -> Node0x48217d0;
	Node0x4820e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%17:\l17:                                               \l  %18 = icmp sgt i32 %1, 0\l  %19 = mul nsw i32 %1, %0\l  %20 = udiv i32 %12, %9\l  %21 = mul i32 %20, %9\l  %22 = icmp ugt i32 %12, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %9\l  %26 = and i32 %1, 7\l  %27 = icmp ult i32 %1, 8\l  %28 = and i32 %1, -8\l  %29 = icmp eq i32 %26, 0\l  br label %30\l}"];
	Node0x4820e20 -> Node0x4822040;
	Node0x4822040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%30:\l30:                                               \l  %31 = phi i32 [ %15, %17 ], [ %49, %48 ]\l  br i1 %18, label %32, label %48\l|{<s0>T|<s1>F}}"];
	Node0x4822040:s0 -> Node0x4822270;
	Node0x4822040:s1 -> Node0x4822130;
	Node0x4822270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%32:\l32:                                               \l  %33 = mul nsw i32 %31, %1\l  br i1 %27, label %34, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4822270:s0 -> Node0x4821750;
	Node0x4822270:s1 -> Node0x48225c0;
	Node0x4821750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%34:\l34:                                               \l  %35 = phi i32 [ 0, %32 ], [ %109, %51 ]\l  br i1 %29, label %48, label %36\l|{<s0>T|<s1>F}}"];
	Node0x4821750:s0 -> Node0x4822130;
	Node0x4821750:s1 -> Node0x48227b0;
	Node0x48227b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = phi i32 [ %45, %36 ], [ %35, %34 ]\l  %38 = phi i32 [ %46, %36 ], [ 0, %34 ]\l  %39 = add nsw i32 %37, %33\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %40\l  store i32 %31, i32 addrspace(1)* %41, align 4, !tbaa !16\l  %42 = add nsw i32 %39, %19\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %43\l  store i32 %31, i32 addrspace(1)* %44, align 4, !tbaa !16\l  %45 = add nuw nsw i32 %37, 1\l  %46 = add i32 %38, 1\l  %47 = icmp eq i32 %46, %26\l  br i1 %47, label %48, label %36, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x48227b0:s0 -> Node0x4822130;
	Node0x48227b0:s1 -> Node0x48227b0;
	Node0x4822130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%48:\l48:                                               \l  %49 = add i32 %25, %31\l  %50 = icmp slt i32 %49, %0\l  br i1 %50, label %30, label %112, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4822130:s0 -> Node0x4822040;
	Node0x4822130:s1 -> Node0x48217d0;
	Node0x48225c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%51:\l51:                                               \l  %52 = phi i32 [ %109, %51 ], [ 0, %32 ]\l  %53 = phi i32 [ %110, %51 ], [ 0, %32 ]\l  %54 = add nsw i32 %52, %33\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %55\l  store i32 %31, i32 addrspace(1)* %56, align 4, !tbaa !16\l  %57 = add nsw i32 %54, %19\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %58\l  store i32 %31, i32 addrspace(1)* %59, align 4, !tbaa !16\l  %60 = or i32 %52, 1\l  %61 = add nsw i32 %60, %33\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %62\l  store i32 %31, i32 addrspace(1)* %63, align 4, !tbaa !16\l  %64 = add nsw i32 %61, %19\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %65\l  store i32 %31, i32 addrspace(1)* %66, align 4, !tbaa !16\l  %67 = or i32 %52, 2\l  %68 = add nsw i32 %67, %33\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %69\l  store i32 %31, i32 addrspace(1)* %70, align 4, !tbaa !16\l  %71 = add nsw i32 %68, %19\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %72\l  store i32 %31, i32 addrspace(1)* %73, align 4, !tbaa !16\l  %74 = or i32 %52, 3\l  %75 = add nsw i32 %74, %33\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %76\l  store i32 %31, i32 addrspace(1)* %77, align 4, !tbaa !16\l  %78 = add nsw i32 %75, %19\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %79\l  store i32 %31, i32 addrspace(1)* %80, align 4, !tbaa !16\l  %81 = or i32 %52, 4\l  %82 = add nsw i32 %81, %33\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %83\l  store i32 %31, i32 addrspace(1)* %84, align 4, !tbaa !16\l  %85 = add nsw i32 %82, %19\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %86\l  store i32 %31, i32 addrspace(1)* %87, align 4, !tbaa !16\l  %88 = or i32 %52, 5\l  %89 = add nsw i32 %88, %33\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %90\l  store i32 %31, i32 addrspace(1)* %91, align 4, !tbaa !16\l  %92 = add nsw i32 %89, %19\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %93\l  store i32 %31, i32 addrspace(1)* %94, align 4, !tbaa !16\l  %95 = or i32 %52, 6\l  %96 = add nsw i32 %95, %33\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %97\l  store i32 %31, i32 addrspace(1)* %98, align 4, !tbaa !16\l  %99 = add nsw i32 %96, %19\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %100\l  store i32 %31, i32 addrspace(1)* %101, align 4, !tbaa !16\l  %102 = or i32 %52, 7\l  %103 = add nsw i32 %102, %33\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %104\l  store i32 %31, i32 addrspace(1)* %105, align 4, !tbaa !16\l  %106 = add nsw i32 %103, %19\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %107\l  store i32 %31, i32 addrspace(1)* %108, align 4, !tbaa !16\l  %109 = add nuw nsw i32 %52, 8\l  %110 = add i32 %53, 8\l  %111 = icmp eq i32 %110, %28\l  br i1 %111, label %34, label %51, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x48225c0:s0 -> Node0x4821750;
	Node0x48225c0:s1 -> Node0x48225c0;
	Node0x48217d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%112:\l112:                                              \l  ret void\l}"];
}
