digraph "CFG for '_Z17devInverseReindexiPiS_Pjiiib' function" {
	label="CFG for '_Z17devInverseReindexiPiS_Pjiiib' function";

	Node0x482fd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%8:\l  %9 = icmp eq i32 %5, 0\l  br i1 %9, label %24, label %10\l|{<s0>T|<s1>F}}"];
	Node0x482fd50:s0 -> Node0x482fd00;
	Node0x482fd50:s1 -> Node0x4830510;
	Node0x4830510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%10:\l10:                                               \l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !6\l  %20 = mul i32 %11, %16\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %21\l  %23 = icmp slt i32 %22, %0\l  br label %25\l}"];
	Node0x4830510 -> Node0x4832220;
	Node0x482fd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x4832220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%25:\l25:                                               \l  %26 = phi i32 [ 0, %10 ], [ %74, %73 ]\l  br i1 %23, label %27, label %73\l|{<s0>T|<s1>F}}"];
	Node0x4832220:s0 -> Node0x4832460;
	Node0x4832220:s1 -> Node0x4832320;
	Node0x4832460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%27:\l27:                                               \l  %28 = mul i32 %26, %4\l  %29 = udiv i32 %19, %16\l  %30 = mul i32 %29, %16\l  %31 = icmp ugt i32 %19, %30\l  %32 = zext i1 %31 to i32\l  %33 = add i32 %29, %32\l  %34 = mul i32 %33, %16\l  br label %35\l}"];
	Node0x4832460 -> Node0x4831a20;
	Node0x4831a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%35:\l35:                                               \l  %36 = phi i32 [ %22, %27 ], [ %71, %68 ]\l  %37 = add i32 %36, %28\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %38\l  %40 = load i32, i32 addrspace(1)* %39, align 4, !tbaa !16\l  %41 = icmp eq i32 %40, -1\l  %42 = select i1 %41, i1 %7, i1 false\l  br i1 %42, label %68, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4831a20:s0 -> Node0x4832b60;
	Node0x4831a20:s1 -> Node0x4833190;
	Node0x4833190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%43:\l43:                                               \l  %44 = icmp slt i32 %40, %6\l  br i1 %44, label %45, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4833190:s0 -> Node0x4833360;
	Node0x4833190:s1 -> Node0x48333b0;
	Node0x4833360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%45:\l45:                                               \l  %46 = phi i32 [ %40, %43 ], [ %52, %49 ]\l  %47 = phi i32 [ 0, %43 ], [ %53, %49 ]\l  %48 = icmp slt i32 %46, 0\l  br i1 %48, label %55, label %61\l|{<s0>T|<s1>F}}"];
	Node0x4833360:s0 -> Node0x4833780;
	Node0x4833360:s1 -> Node0x4833810;
	Node0x48333b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = phi i32 [ %53, %49 ], [ 0, %43 ]\l  %51 = phi i32 [ %52, %49 ], [ %40, %43 ]\l  %52 = sub nsw i32 %51, %6\l  %53 = add nsw i32 %50, %6\l  %54 = icmp slt i32 %52, %6\l  br i1 %54, label %45, label %49, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x48333b0:s0 -> Node0x4833360;
	Node0x48333b0:s1 -> Node0x48333b0;
	Node0x4833780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%55:\l55:                                               \l  %56 = phi i32 [ %59, %55 ], [ %47, %45 ]\l  %57 = phi i32 [ %58, %55 ], [ %46, %45 ]\l  %58 = add nsw i32 %57, %6\l  %59 = sub nsw i32 %56, %6\l  %60 = icmp slt i32 %58, 0\l  br i1 %60, label %55, label %61, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4833780:s0 -> Node0x4833780;
	Node0x4833780:s1 -> Node0x4833810;
	Node0x4833810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%61:\l61:                                               \l  %62 = phi i32 [ %46, %45 ], [ %58, %55 ]\l  %63 = phi i32 [ %47, %45 ], [ %59, %55 ]\l  %64 = zext i32 %62 to i64\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %64\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !16\l  %67 = add nsw i32 %66, %63\l  br label %68\l}"];
	Node0x4833810 -> Node0x4832b60;
	Node0x4832b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%68:\l68:                                               \l  %69 = phi i32 [ %67, %61 ], [ -1, %35 ]\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %38\l  store i32 %69, i32 addrspace(1)* %70, align 4, !tbaa !16\l  %71 = add i32 %34, %36\l  %72 = icmp slt i32 %71, %0\l  br i1 %72, label %35, label %73, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x4832b60:s0 -> Node0x4831a20;
	Node0x4832b60:s1 -> Node0x4832320;
	Node0x4832320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%73:\l73:                                               \l  %74 = add nuw i32 %26, 1\l  %75 = icmp eq i32 %74, %5\l  br i1 %75, label %24, label %25, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4832320:s0 -> Node0x482fd00;
	Node0x4832320:s1 -> Node0x4832220;
}
