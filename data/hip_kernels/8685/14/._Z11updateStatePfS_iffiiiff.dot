digraph "CFG for '_Z11updateStatePfS_iffiiiff' function" {
	label="CFG for '_Z11updateStatePfS_iffiiiff' function";

	Node0x48a8160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %18, %5\l  %20 = add i32 %19, %17\l  %21 = icmp sge i32 %20, %5\l  %22 = add nsw i32 %5, %2\l  %23 = icmp slt i32 %20, %22\l  %24 = select i1 %21, i1 %23, i1 false\l  br i1 %24, label %25, label %164\l|{<s0>T|<s1>F}}"];
	Node0x48a8160:s0 -> Node0x48aae90;
	Node0x48a8160:s1 -> Node0x48aaf20;
	Node0x48aae90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%25:\l25:                                               \l  %26 = srem i32 %20, %2\l  %27 = sext i32 %20 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %30 = mul nsw i32 %26, %6\l  %31 = add nsw i32 %30, %7\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %35 = fadd contract float %29, %34\l  %36 = sub nsw i32 %20, %2\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = fneg contract float %8\l  %41 = fsub contract float %35, %9\l  %42 = fmul contract float %41, %40\l  %43 = fmul float %42, 0x3FF7154760000000\l  %44 = tail call float @llvm.rint.f32(float %43)\l  %45 = fcmp ogt float %42, 0x40562E4300000000\l  %46 = fcmp olt float %42, 0xC059D1DA00000000\l  %47 = fneg float %43\l  %48 = tail call float @llvm.fma.f32(float %42, float 0x3FF7154760000000,\l... float %47)\l  %49 = tail call float @llvm.fma.f32(float %42, float 0x3E54AE0BE0000000,\l... float %48)\l  %50 = fsub float %43, %44\l  %51 = fadd float %49, %50\l  %52 = tail call float @llvm.exp2.f32(float %51)\l  %53 = fptosi float %44 to i32\l  %54 = tail call float @llvm.amdgcn.ldexp.f32(float %52, i32 %53)\l  %55 = fadd contract float %54, 1.000000e+00\l  %56 = fdiv contract float 1.000000e+00, %55\l  %57 = select i1 %46, float 1.000000e+00, float %56\l  %58 = select i1 %45, float 0.000000e+00, float %57\l  %59 = fsub contract float %58, %39\l  %60 = mul i32 %11, 1000\l  %61 = add i32 %60, %18\l  %62 = zext i32 %61 to i64\l  %63 = tail call i64 @llvm.amdgcn.s.memtime()\l  %64 = add nsw i64 %63, %62\l  %65 = trunc i64 %64 to i32\l  %66 = xor i32 %65, 746559103\l  %67 = lshr i64 %64, 32\l  %68 = trunc i64 %67 to i32\l  %69 = xor i32 %68, -1607034933\l  %70 = mul i32 %66, 1228688033\l  %71 = mul i32 %69, 2073658381\l  %72 = add i32 %70, 123456789\l  %73 = xor i32 %70, 362436069\l  %74 = add i32 %70, 5783321\l  %75 = add i32 %70, 6615241\l  %76 = add i32 %75, %71\l  %77 = lshr i32 %72, 2\l  %78 = xor i32 %77, %72\l  %79 = shl i32 %74, 4\l  %80 = shl i32 %78, 1\l  %81 = xor i32 %79, %80\l  %82 = xor i32 %81, %74\l  %83 = xor i32 %82, %78\l  %84 = add i32 %76, 362437\l  %85 = add i32 %84, %83\l  %86 = lshr i32 %73, 2\l  %87 = xor i32 %86, %73\l  %88 = shl i32 %83, 4\l  %89 = shl i32 %87, 1\l  %90 = xor i32 %89, %88\l  %91 = xor i32 %90, %87\l  %92 = xor i32 %91, %83\l  %93 = add i32 %76, 724874\l  %94 = add i32 %93, %92\l  %95 = uitofp i32 %85 to float\l  %96 = fmul contract float %95, 0x3DF0000000000000\l  %97 = fadd contract float %96, 0x3DF0000000000000\l  %98 = uitofp i32 %94 to float\l  %99 = fmul contract float %98, 0x3E1921FB60000000\l  %100 = fadd contract float %99, 0x3E1921FB60000000\l  %101 = tail call i1 @llvm.amdgcn.class.f32(float %97, i32 144)\l  %102 = select i1 %101, float 0x41F0000000000000, float 1.000000e+00\l  %103 = fmul float %97, %102\l  %104 = tail call float @llvm.log2.f32(float %103)\l  %105 = fmul float %104, 0x3FE62E42E0000000\l  %106 = tail call i1 @llvm.amdgcn.class.f32(float %104, i32 519)\l  %107 = fneg float %105\l  %108 = tail call float @llvm.fma.f32(float %104, float 0x3FE62E42E0000000,\l... float %107)\l  %109 = tail call float @llvm.fma.f32(float %104, float 0x3E6EFA39E0000000,\l... float %108)\l  %110 = fadd float %105, %109\l  %111 = select i1 %106, float %104, float %110\l  %112 = select i1 %101, float 0x40362E4300000000, float 0.000000e+00\l  %113 = fsub float %111, %112\l  %114 = fmul contract float %113, -2.000000e+00\l  %115 = fcmp olt float %114, 0x39F0000000000000\l  %116 = select i1 %115, float 0x41F0000000000000, float 1.000000e+00\l  %117 = fmul float %114, %116\l  %118 = tail call float @llvm.sqrt.f32(float %117)\l  %119 = bitcast float %118 to i32\l  %120 = add nsw i32 %119, -1\l  %121 = bitcast i32 %120 to float\l  %122 = add nsw i32 %119, 1\l  %123 = bitcast i32 %122 to float\l  %124 = tail call i1 @llvm.amdgcn.class.f32(float %117, i32 608)\l  %125 = select i1 %115, float 0x3EF0000000000000, float 1.000000e+00\l  %126 = fneg float %123\l  %127 = tail call float @llvm.fma.f32(float %126, float %118, float %117)\l  %128 = fcmp ogt float %127, 0.000000e+00\l  %129 = fneg float %121\l  %130 = tail call float @llvm.fma.f32(float %129, float %118, float %117)\l  %131 = fcmp ole float %130, 0.000000e+00\l  %132 = select i1 %131, float %121, float %118\l  %133 = select i1 %128, float %123, float %132\l  %134 = fmul float %125, %133\l  %135 = select i1 %124, float %117, float %134\l  %136 = tail call float @llvm.sin.f32(float %100)\l  %137 = fmul contract float %136, %135\l  %138 = fmul contract float %137, %4\l  %139 = fcmp olt float %3, 0x39F0000000000000\l  %140 = select i1 %139, float 0x41F0000000000000, float 1.000000e+00\l  %141 = fmul float %140, %3\l  %142 = tail call float @llvm.sqrt.f32(float %141)\l  %143 = bitcast float %142 to i32\l  %144 = add nsw i32 %143, -1\l  %145 = bitcast i32 %144 to float\l  %146 = add nsw i32 %143, 1\l  %147 = bitcast i32 %146 to float\l  %148 = tail call i1 @llvm.amdgcn.class.f32(float %141, i32 608)\l  %149 = select i1 %139, float 0x3EF0000000000000, float 1.000000e+00\l  %150 = fneg float %147\l  %151 = tail call float @llvm.fma.f32(float %150, float %142, float %141)\l  %152 = fcmp ogt float %151, 0.000000e+00\l  %153 = fneg float %145\l  %154 = tail call float @llvm.fma.f32(float %153, float %142, float %141)\l  %155 = fcmp ole float %154, 0.000000e+00\l  %156 = select i1 %155, float %145, float %142\l  %157 = select i1 %152, float %147, float %156\l  %158 = fmul float %149, %157\l  %159 = select i1 %148, float %141, float %158\l  %160 = fmul contract float %159, %138\l  %161 = fmul contract float %59, %3\l  %162 = fadd contract float %39, %161\l  %163 = fadd contract float %162, %160\l  store float %163, float addrspace(1)* %28, align 4, !tbaa !7\l  br label %164\l}"];
	Node0x48aae90 -> Node0x48aaf20;
	Node0x48aaf20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%164:\l164:                                              \l  ret void\l}"];
}
