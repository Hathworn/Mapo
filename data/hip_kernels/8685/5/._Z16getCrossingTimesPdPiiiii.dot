digraph "CFG for '_Z16getCrossingTimesPdPiiiii' function" {
	label="CFG for '_Z16getCrossingTimesPdPiiiii' function";

	Node0x501b820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = mul i32 %8, %13\l  %18 = add i32 %17, %7\l  %19 = mul nsw i32 %3, %2\l  %20 = icmp slt i32 %18, %19\l  br i1 %20, label %21, label %52\l|{<s0>T|<s1>F}}"];
	Node0x501b820:s0 -> Node0x501dad0;
	Node0x501b820:s1 -> Node0x501db60;
	Node0x501dad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%21:\l21:                                               \l  %22 = sitofp i32 %4 to double\l  %23 = sitofp i32 %5 to double\l  %24 = udiv i32 %16, %13\l  %25 = mul i32 %24, %13\l  %26 = icmp ugt i32 %16, %25\l  %27 = zext i1 %26 to i32\l  br label %28\l}"];
	Node0x501dad0 -> Node0x501dfa0;
	Node0x501dfa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %18, %21 ], [ %50, %47 ]\l  %30 = freeze i32 %29\l  %31 = freeze i32 %2\l  %32 = sdiv i32 %30, %31\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !16\l  %36 = icmp eq i32 %35, 0\l  br i1 %36, label %37, label %47\l|{<s0>T|<s1>F}}"];
	Node0x501dfa0:s0 -> Node0x501e790;
	Node0x501dfa0:s1 -> Node0x501e060;
	Node0x501e790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%37:\l37:                                               \l  %38 = sext i32 %29 to i64\l  %39 = getelementptr inbounds double, double addrspace(1)* %0, i64 %38\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !20,\l... !amdgpu.noclobber !6\l  %41 = fcmp contract ugt double %40, %22\l  %42 = fcmp contract ult double %40, %23\l  %43 = select i1 %41, i1 %42, i1 false\l  br i1 %43, label %47, label %44\l|{<s0>T|<s1>F}}"];
	Node0x501e790:s0 -> Node0x501e060;
	Node0x501e790:s1 -> Node0x501f3e0;
	Node0x501f3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%44:\l44:                                               \l  %45 = mul i32 %32, %31\l  %46 = sub i32 %30, %45\l  store i32 %46, i32 addrspace(1)* %34, align 4, !tbaa !16\l  br label %47\l}"];
	Node0x501f3e0 -> Node0x501e060;
	Node0x501e060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = add i32 %29, %13\l  %49 = add i32 %48, %24\l  %50 = add i32 %49, %27\l  %51 = icmp slt i32 %50, %19\l  br i1 %51, label %28, label %52, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x501e060:s0 -> Node0x501dfa0;
	Node0x501e060:s1 -> Node0x501db60;
	Node0x501db60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%52:\l52:                                               \l  ret void\l}"];
}
