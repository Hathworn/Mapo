digraph "CFG for '_Z7RoeStepiPdS_S_PKdS_S_S_S1_S1_S1_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_PiS2_S2_S_S_S_S_S_S_S_S_S_' function" {
	label="CFG for '_Z7RoeStepiPdS_S_PKdS_S_S_S1_S1_S1_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_PiS2_S2_S_S_S_S_S_S_S_S_S_' function";

	Node0x559da70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%52:\l  %53 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %54 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %55 = getelementptr i8, i8 addrspace(4)* %54, i64 4\l  %56 = bitcast i8 addrspace(4)* %55 to i16 addrspace(4)*\l  %57 = load i16, i16 addrspace(4)* %56, align 4, !range !4, !invariant.load !5\l  %58 = zext i16 %57 to i32\l  %59 = mul i32 %53, %58\l  %60 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %61 = add i32 %59, %60\l  %62 = icmp slt i32 %61, %0\l  br i1 %62, label %63, label %89\l|{<s0>T|<s1>F}}"];
	Node0x559da70:s0 -> Node0x55a0c60;
	Node0x559da70:s1 -> Node0x55a0cf0;
	Node0x55a0c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%63:\l63:                                               \l  %64 = getelementptr inbounds double, double addrspace(1)* %46, i64 1\l  %65 = getelementptr inbounds double, double addrspace(1)* %49, i64 1\l  %66 = add nsw i32 %0, -1\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds double, double addrspace(1)* %46, i64 %67\l  %69 = getelementptr inbounds double, double addrspace(1)* %49, i64 %67\l  %70 = getelementptr inbounds double, double addrspace(1)* %47, i64 1\l  %71 = getelementptr inbounds double, double addrspace(1)* %50, i64 1\l  %72 = getelementptr inbounds double, double addrspace(1)* %47, i64 %67\l  %73 = getelementptr inbounds double, double addrspace(1)* %50, i64 %67\l  %74 = getelementptr inbounds double, double addrspace(1)* %48, i64 1\l  %75 = getelementptr inbounds double, double addrspace(1)* %51, i64 1\l  %76 = getelementptr inbounds double, double addrspace(1)* %48, i64 %67\l  %77 = getelementptr inbounds double, double addrspace(1)* %51, i64 %67\l  %78 = getelementptr inbounds double, double addrspace(1)* %1, i64 1\l  %79 = getelementptr inbounds double, double addrspace(1)* %2, i64 1\l  %80 = getelementptr inbounds double, double addrspace(1)* %3, i64 1\l  %81 = add nsw i32 %0, -2\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds double, double addrspace(1)* %1, i64 %82\l  %84 = getelementptr inbounds double, double addrspace(1)* %1, i64 %67\l  %85 = getelementptr inbounds double, double addrspace(1)* %2, i64 %82\l  %86 = getelementptr inbounds double, double addrspace(1)* %2, i64 %67\l  %87 = getelementptr inbounds double, double addrspace(1)* %3, i64 %82\l  %88 = getelementptr inbounds double, double addrspace(1)* %3, i64 %67\l  br label %90\l}"];
	Node0x55a0c60 -> Node0x55a1fc0;
	Node0x55a0cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%89:\l89:                                               \l  ret void\l}"];
	Node0x55a1fc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = phi i32 [ %61, %63 ], [ %613, %604 ]\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds double, double addrspace(1)* %4, i64 %92\l  %94 = load double, double addrspace(1)* %93, align 8, !tbaa !7\l  %95 = getelementptr inbounds double, double addrspace(1)* %1, i64 %92\l  %96 = load double, double addrspace(1)* %95, align 8, !tbaa !7\l  %97 = fmul contract double %94, %96\l  %98 = fcmp olt double %97, 0x1000000000000000\l  %99 = select i1 %98, double 0x4FF0000000000000, double 1.000000e+00\l  %100 = fmul double %97, %99\l  %101 = tail call double @llvm.amdgcn.rsq.f64(double %100)\l  %102 = fmul double %100, %101\l  %103 = fmul double %101, 5.000000e-01\l  %104 = fneg double %103\l  %105 = tail call double @llvm.fma.f64(double %104, double %102, double\l... 5.000000e-01)\l  %106 = tail call double @llvm.fma.f64(double %103, double %105, double %103)\l  %107 = tail call double @llvm.fma.f64(double %102, double %105, double %102)\l  %108 = fneg double %107\l  %109 = tail call double @llvm.fma.f64(double %108, double %107, double %100)\l  %110 = tail call double @llvm.fma.f64(double %109, double %106, double %107)\l  %111 = fneg double %110\l  %112 = tail call double @llvm.fma.f64(double %111, double %110, double %100)\l  %113 = tail call double @llvm.fma.f64(double %112, double %106, double %110)\l  %114 = select i1 %98, double 0x37F0000000000000, double 1.000000e+00\l  %115 = fmul double %114, %113\l  %116 = fcmp oeq double %100, 0.000000e+00\l  %117 = fcmp oeq double %100, 0x7FF0000000000000\l  %118 = or i1 %116, %117\l  %119 = select i1 %118, double %100, double %115\l  %120 = getelementptr inbounds double, double addrspace(1)* %11, i64 %92\l  store double %119, double addrspace(1)* %120, align 8, !tbaa !7\l  %121 = getelementptr inbounds double, double addrspace(1)* %2, i64 %92\l  %122 = load double, double addrspace(1)* %121, align 8, !tbaa !7\l  %123 = fmul contract double %122, %119\l  %124 = load double, double addrspace(1)* %95, align 8, !tbaa !7\l  %125 = fdiv contract double %123, %124\l  %126 = getelementptr inbounds double, double addrspace(1)* %12, i64 %92\l  store double %125, double addrspace(1)* %126, align 8, !tbaa !7\l  %127 = load double, double addrspace(1)* %10, align 8, !tbaa !7\l  %128 = fadd contract double %127, -1.000000e+00\l  %129 = getelementptr inbounds double, double addrspace(1)* %3, i64 %92\l  %130 = load double, double addrspace(1)* %129, align 8, !tbaa !7\l  %131 = load double, double addrspace(1)* %121, align 8, !tbaa !7\l  %132 = fmul contract double %131, 5.000000e-01\l  %133 = fmul contract double %131, %132\l  %134 = load double, double addrspace(1)* %95, align 8, !tbaa !7\l  %135 = fdiv contract double %133, %134\l  %136 = fsub contract double %130, %135\l  %137 = fmul contract double %128, %136\l  %138 = getelementptr inbounds double, double addrspace(1)* %14, i64 %92\l  store double %137, double addrspace(1)* %138, align 8, !tbaa !7\l  %139 = load double, double addrspace(1)* %120, align 8, !tbaa !7\l  %140 = load double, double addrspace(1)* %129, align 8, !tbaa !7\l  %141 = fadd contract double %140, %137\l  %142 = fmul contract double %139, %141\l  %143 = load double, double addrspace(1)* %95, align 8, !tbaa !7\l  %144 = fdiv contract double %142, %143\l  %145 = getelementptr inbounds double, double addrspace(1)* %13, i64 %92\l  store double %144, double addrspace(1)* %145, align 8, !tbaa !7\l  %146 = load double, double addrspace(1)* %120, align 8, !tbaa !7\l  %147 = load double, double addrspace(1)* %126, align 8, !tbaa !7\l  %148 = fmul contract double %146, %147\l  %149 = getelementptr inbounds double, double addrspace(1)* %15, i64 %92\l  store double %148, double addrspace(1)* %149, align 8, !tbaa !7\l  %150 = load double, double addrspace(1)* %126, align 8, !tbaa !7\l  %151 = fmul contract double %150, %150\l  %152 = load double, double addrspace(1)* %93, align 8, !tbaa !7\l  %153 = load double, double addrspace(1)* %138, align 8, !tbaa !7\l  %154 = fmul contract double %152, %153\l  %155 = fadd contract double %151, %154\l  %156 = getelementptr inbounds double, double addrspace(1)* %16, i64 %92\l  store double %155, double addrspace(1)* %156, align 8, !tbaa !7\l  %157 = load double, double addrspace(1)* %126, align 8, !tbaa !7\l  %158 = load double, double addrspace(1)* %145, align 8, !tbaa !7\l  %159 = fmul contract double %157, %158\l  %160 = getelementptr inbounds double, double addrspace(1)* %17, i64 %92\l  store double %159, double addrspace(1)* %160, align 8, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %161 = icmp sgt i32 %91, 0\l  br i1 %161, label %162, label %192\l|{<s0>T|<s1>F}}"];
	Node0x55a1fc0:s0 -> Node0x55a6d40;
	Node0x55a1fc0:s1 -> Node0x55a6dd0;
	Node0x55a6d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%162:\l162:                                              \l  %163 = add nsw i32 %91, -1\l  %164 = zext i32 %163 to i64\l  %165 = getelementptr inbounds double, double addrspace(1)* %15, i64 %164\l  %166 = load double, double addrspace(1)* %165, align 8, !tbaa !7\l  %167 = getelementptr inbounds double, double addrspace(1)* %21, i64 %92\l  store double %166, double addrspace(1)* %167, align 8, !tbaa !7\l  %168 = load double, double addrspace(1)* %149, align 8, !tbaa !7\l  %169 = getelementptr inbounds double, double addrspace(1)* %18, i64 %92\l  store double %168, double addrspace(1)* %169, align 8, !tbaa !7\l  %170 = getelementptr inbounds double, double addrspace(1)* %16, i64 %164\l  %171 = load double, double addrspace(1)* %170, align 8, !tbaa !7\l  %172 = getelementptr inbounds double, double addrspace(1)* %22, i64 %92\l  store double %171, double addrspace(1)* %172, align 8, !tbaa !7\l  %173 = load double, double addrspace(1)* %156, align 8, !tbaa !7\l  %174 = getelementptr inbounds double, double addrspace(1)* %19, i64 %92\l  store double %173, double addrspace(1)* %174, align 8, !tbaa !7\l  %175 = getelementptr inbounds double, double addrspace(1)* %17, i64 %164\l  %176 = load double, double addrspace(1)* %175, align 8, !tbaa !7\l  %177 = getelementptr inbounds double, double addrspace(1)* %23, i64 %92\l  store double %176, double addrspace(1)* %177, align 8, !tbaa !7\l  %178 = load double, double addrspace(1)* %160, align 8, !tbaa !7\l  %179 = getelementptr inbounds double, double addrspace(1)* %20, i64 %92\l  store double %178, double addrspace(1)* %179, align 8, !tbaa !7\l  %180 = load double, double addrspace(1)* %169, align 8, !tbaa !7\l  %181 = load double, double addrspace(1)* %167, align 8, !tbaa !7\l  %182 = fsub contract double %180, %181\l  %183 = getelementptr inbounds double, double addrspace(1)* %24, i64 %92\l  store double %182, double addrspace(1)* %183, align 8, !tbaa !7\l  %184 = load double, double addrspace(1)* %174, align 8, !tbaa !7\l  %185 = load double, double addrspace(1)* %172, align 8, !tbaa !7\l  %186 = fsub contract double %184, %185\l  %187 = getelementptr inbounds double, double addrspace(1)* %25, i64 %92\l  store double %186, double addrspace(1)* %187, align 8, !tbaa !7\l  %188 = load double, double addrspace(1)* %179, align 8, !tbaa !7\l  %189 = load double, double addrspace(1)* %177, align 8, !tbaa !7\l  %190 = fsub contract double %188, %189\l  %191 = getelementptr inbounds double, double addrspace(1)* %26, i64 %92\l  store double %190, double addrspace(1)* %191, align 8, !tbaa !7\l  br label %192\l}"];
	Node0x55a6d40 -> Node0x55a6dd0;
	Node0x55a6dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%192:\l192:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %161, label %193, label %392\l|{<s0>T|<s1>F}}"];
	Node0x55a6dd0:s0 -> Node0x55a27e0;
	Node0x55a6dd0:s1 -> Node0x55a2830;
	Node0x55a27e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%193:\l193:                                              \l  %194 = add nsw i32 %91, -1\l  %195 = zext i32 %194 to i64\l  %196 = getelementptr inbounds double, double addrspace(1)* %11, i64 %195\l  %197 = load double, double addrspace(1)* %196, align 8, !tbaa !7\l  %198 = load double, double addrspace(1)* %120, align 8, !tbaa !7\l  %199 = fadd contract double %197, %198\l  %200 = fdiv contract double 1.000000e+00, %199\l  %201 = getelementptr inbounds double, double addrspace(1)* %27, i64 %92\l  store double %200, double addrspace(1)* %201, align 8, !tbaa !7\l  %202 = getelementptr inbounds double, double addrspace(1)* %12, i64 %195\l  %203 = load double, double addrspace(1)* %202, align 8, !tbaa !7\l  %204 = load double, double addrspace(1)* %126, align 8, !tbaa !7\l  %205 = fadd contract double %203, %204\l  %206 = fmul contract double %200, %205\l  %207 = getelementptr inbounds double, double addrspace(1)* %28, i64 %92\l  store double %206, double addrspace(1)* %207, align 8, !tbaa !7\l  %208 = getelementptr inbounds double, double addrspace(1)* %13, i64 %195\l  %209 = load double, double addrspace(1)* %208, align 8, !tbaa !7\l  %210 = load double, double addrspace(1)* %145, align 8, !tbaa !7\l  %211 = fadd contract double %209, %210\l  %212 = load double, double addrspace(1)* %201, align 8, !tbaa !7\l  %213 = fmul contract double %211, %212\l  %214 = getelementptr inbounds double, double addrspace(1)* %29, i64 %92\l  store double %213, double addrspace(1)* %214, align 8, !tbaa !7\l  %215 = load double, double addrspace(1)* %207, align 8, !tbaa !7\l  %216 = fmul contract double %215, 5.000000e-01\l  %217 = fmul contract double %215, %216\l  %218 = getelementptr inbounds double, double addrspace(1)* %31, i64 %92\l  store double %217, double addrspace(1)* %218, align 8, !tbaa !7\l  %219 = load double, double addrspace(1)* %207, align 8, !tbaa !7\l  %220 = getelementptr inbounds double, double addrspace(1)* %25, i64 %92\l  %221 = load double, double addrspace(1)* %220, align 8, !tbaa !7\l  %222 = fmul contract double %219, %221\l  %223 = getelementptr inbounds double, double addrspace(1)* %30, i64 %92\l  store double %222, double addrspace(1)* %223, align 8, !tbaa !7\l  %224 = load double, double addrspace(1)* %10, align 8, !tbaa !7\l  %225 = fadd contract double %224, -1.000000e+00\l  %226 = load double, double addrspace(1)* %214, align 8, !tbaa !7\l  %227 = load double, double addrspace(1)* %218, align 8, !tbaa !7\l  %228 = fsub contract double %226, %227\l  %229 = fmul contract double %225, %228\l  %230 = getelementptr inbounds double, double addrspace(1)* %32, i64 %92\l  store double %229, double addrspace(1)* %230, align 8, !tbaa !7\l  %231 = fcmp contract ogt double %229, 0.000000e+00\l  br i1 %231, label %232, label %249\l|{<s0>T|<s1>F}}"];
	Node0x55a27e0:s0 -> Node0x55ab310;
	Node0x55a27e0:s1 -> Node0x55ab360;
	Node0x55ab310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%232:\l232:                                              \l  %233 = fcmp olt double %229, 0x1000000000000000\l  %234 = select i1 %233, double 0x4FF0000000000000, double 1.000000e+00\l  %235 = fmul double %229, %234\l  %236 = tail call double @llvm.amdgcn.rsq.f64(double %235)\l  %237 = fmul double %235, %236\l  %238 = fmul double %236, 5.000000e-01\l  %239 = fneg double %238\l  %240 = tail call double @llvm.fma.f64(double %239, double %237, double\l... 5.000000e-01)\l  %241 = tail call double @llvm.fma.f64(double %238, double %240, double %238)\l  %242 = tail call double @llvm.fma.f64(double %237, double %240, double %237)\l  %243 = fneg double %242\l  %244 = tail call double @llvm.fma.f64(double %243, double %242, double %235)\l  %245 = tail call double @llvm.fma.f64(double %244, double %241, double %242)\l  %246 = fneg double %245\l  %247 = tail call double @llvm.fma.f64(double %246, double %245, double %235)\l  %248 = tail call double @llvm.fma.f64(double %247, double %241, double %245)\l  br label %267\l}"];
	Node0x55ab310 -> Node0x55ac220;
	Node0x55ab360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%249:\l249:                                              \l  %250 = tail call double @llvm.fabs.f64(double %229)\l  %251 = fcmp olt double %250, 0x1000000000000000\l  %252 = select i1 %251, double 0x4FF0000000000000, double 1.000000e+00\l  %253 = fmul double %250, %252\l  %254 = tail call double @llvm.amdgcn.rsq.f64(double %253)\l  %255 = fmul double %253, %254\l  %256 = fmul double %254, 5.000000e-01\l  %257 = fneg double %256\l  %258 = tail call double @llvm.fma.f64(double %257, double %255, double\l... 5.000000e-01)\l  %259 = tail call double @llvm.fma.f64(double %256, double %258, double %256)\l  %260 = tail call double @llvm.fma.f64(double %255, double %258, double %255)\l  %261 = fneg double %260\l  %262 = tail call double @llvm.fma.f64(double %261, double %260, double %253)\l  %263 = tail call double @llvm.fma.f64(double %262, double %259, double %260)\l  %264 = fneg double %263\l  %265 = tail call double @llvm.fma.f64(double %264, double %263, double %253)\l  %266 = tail call double @llvm.fma.f64(double %265, double %259, double %263)\l  br label %267\l}"];
	Node0x55ab360 -> Node0x55ac220;
	Node0x55ac220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%267:\l267:                                              \l  %268 = phi i1 [ %251, %249 ], [ %233, %232 ]\l  %269 = phi double [ %266, %249 ], [ %248, %232 ]\l  %270 = phi double [ %253, %249 ], [ %235, %232 ]\l  %271 = select i1 %268, double 0x37F0000000000000, double 1.000000e+00\l  %272 = fmul double %271, %269\l  %273 = fcmp oeq double %270, 0.000000e+00\l  %274 = fcmp oeq double %270, 0x7FF0000000000000\l  %275 = or i1 %273, %274\l  %276 = select i1 %275, double %270, double %272\l  %277 = getelementptr inbounds double, double addrspace(1)* %33, i64 %92\l  store double %276, double addrspace(1)* %277, align 8\l  %278 = load double, double addrspace(1)* %207, align 8, !tbaa !7\l  %279 = fsub contract double %278, %276\l  %280 = getelementptr inbounds double, double addrspace(1)* %34, i64 %92\l  store double %279, double addrspace(1)* %280, align 8, !tbaa !7\l  %281 = load double, double addrspace(1)* %207, align 8, !tbaa !7\l  %282 = getelementptr inbounds double, double addrspace(1)* %35, i64 %92\l  store double %281, double addrspace(1)* %282, align 8, !tbaa !7\l  %283 = load double, double addrspace(1)* %207, align 8, !tbaa !7\l  %284 = load double, double addrspace(1)* %277, align 8, !tbaa !7\l  %285 = fadd contract double %283, %284\l  %286 = getelementptr inbounds double, double addrspace(1)* %36, i64 %92\l  store double %285, double addrspace(1)* %286, align 8, !tbaa !7\l  %287 = load double, double addrspace(1)* %280, align 8, !tbaa !7\l  %288 = fcmp contract olt double %287, 0.000000e+00\l  %289 = select i1 %288, double -1.000000e+00, double 1.000000e+00\l  %290 = getelementptr inbounds double, double addrspace(1)* %37, i64 %92\l  store double %289, double addrspace(1)* %290, align 8, !tbaa !7\l  %291 = load double, double addrspace(1)* %282, align 8, !tbaa !7\l  %292 = fcmp contract olt double %291, 0.000000e+00\l  %293 = select i1 %292, double -1.000000e+00, double 1.000000e+00\l  %294 = getelementptr inbounds double, double addrspace(1)* %38, i64 %92\l  store double %293, double addrspace(1)* %294, align 8, !tbaa !7\l  %295 = load double, double addrspace(1)* %286, align 8, !tbaa !7\l  %296 = fcmp contract olt double %295, 0.000000e+00\l  %297 = select i1 %296, double -1.000000e+00, double 1.000000e+00\l  %298 = getelementptr inbounds double, double addrspace(1)* %39, i64 %92\l  store double %297, double addrspace(1)* %298, align 8, !tbaa !7\l  %299 = load double, double addrspace(1)* %10, align 8, !tbaa !7\l  %300 = fadd contract double %299, -1.000000e+00\l  %301 = load double, double addrspace(1)* %218, align 8, !tbaa !7\l  %302 = getelementptr inbounds double, double addrspace(1)* %24, i64 %92\l  %303 = load double, double addrspace(1)* %302, align 8, !tbaa !7\l  %304 = fmul contract double %301, %303\l  %305 = getelementptr inbounds double, double addrspace(1)* %26, i64 %92\l  %306 = load double, double addrspace(1)* %305, align 8, !tbaa !7\l  %307 = fadd contract double %304, %306\l  %308 = load double, double addrspace(1)* %223, align 8, !tbaa !7\l  %309 = fsub contract double %307, %308\l  %310 = fmul contract double %300, %309\l  %311 = load double, double addrspace(1)* %277, align 8, !tbaa !7\l  %312 = load double, double addrspace(1)* %220, align 8, !tbaa !7\l  %313 = load double, double addrspace(1)* %207, align 8, !tbaa !7\l  %314 = fmul contract double %303, %313\l  %315 = fsub contract double %312, %314\l  %316 = fmul contract double %311, %315\l  %317 = fsub contract double %310, %316\l  %318 = fmul contract double %317, 5.000000e-01\l  %319 = load double, double addrspace(1)* %230, align 8, !tbaa !7\l  %320 = fdiv contract double %318, %319\l  %321 = getelementptr inbounds double, double addrspace(1)* %43, i64 %92\l  store double %320, double addrspace(1)* %321, align 8, !tbaa !7\l  %322 = load double, double addrspace(1)* %10, align 8, !tbaa !7\l  %323 = fadd contract double %322, -1.000000e+00\l  %324 = load double, double addrspace(1)* %214, align 8, !tbaa !7\l  %325 = load double, double addrspace(1)* %218, align 8, !tbaa !7\l  %326 = fmul contract double %325, 2.000000e+00\l  %327 = fsub contract double %324, %326\l  %328 = load double, double addrspace(1)* %302, align 8, !tbaa !7\l  %329 = fmul contract double %328, %327\l  %330 = load double, double addrspace(1)* %223, align 8, !tbaa !7\l  %331 = fadd contract double %330, %329\l  %332 = load double, double addrspace(1)* %305, align 8, !tbaa !7\l  %333 = fsub contract double %331, %332\l  %334 = fmul contract double %323, %333\l  %335 = load double, double addrspace(1)* %230, align 8, !tbaa !7\l  %336 = fdiv contract double %334, %335\l  %337 = getelementptr inbounds double, double addrspace(1)* %44, i64 %92\l  store double %336, double addrspace(1)* %337, align 8, !tbaa !7\l  %338 = load double, double addrspace(1)* %10, align 8, !tbaa !7\l  %339 = fadd contract double %338, -1.000000e+00\l  %340 = load double, double addrspace(1)* %218, align 8, !tbaa !7\l  %341 = load double, double addrspace(1)* %302, align 8, !tbaa !7\l  %342 = fmul contract double %340, %341\l  %343 = load double, double addrspace(1)* %305, align 8, !tbaa !7\l  %344 = fadd contract double %342, %343\l  %345 = load double, double addrspace(1)* %223, align 8, !tbaa !7\l  %346 = fsub contract double %344, %345\l  %347 = fmul contract double %339, %346\l  %348 = load double, double addrspace(1)* %277, align 8, !tbaa !7\l  %349 = load double, double addrspace(1)* %220, align 8, !tbaa !7\l  %350 = load double, double addrspace(1)* %207, align 8, !tbaa !7\l  %351 = fmul contract double %341, %350\l  %352 = fsub contract double %349, %351\l  %353 = fmul contract double %348, %352\l  %354 = fadd contract double %347, %353\l  %355 = fmul contract double %354, 5.000000e-01\l  %356 = load double, double addrspace(1)* %230, align 8, !tbaa !7\l  %357 = fdiv contract double %355, %356\l  %358 = getelementptr inbounds double, double addrspace(1)* %45, i64 %92\l  store double %357, double addrspace(1)* %358, align 8, !tbaa !7\l  %359 = load double, double addrspace(1)* %280, align 8, !tbaa !7\l  %360 = fadd contract double %359, 1.000000e-30\l  %361 = load double, double addrspace(1)* %321, align 8, !tbaa !7\l  %362 = fdiv contract double %361, %360\l  store double %362, double addrspace(1)* %321, align 8, !tbaa !7\l  %363 = load double, double addrspace(1)* %282, align 8, !tbaa !7\l  %364 = fadd contract double %363, 1.000000e-30\l  %365 = load double, double addrspace(1)* %337, align 8, !tbaa !7\l  %366 = fdiv contract double %365, %364\l  store double %366, double addrspace(1)* %337, align 8, !tbaa !7\l  %367 = load double, double addrspace(1)* %286, align 8, !tbaa !7\l  %368 = fadd contract double %367, 1.000000e-30\l  %369 = load double, double addrspace(1)* %358, align 8, !tbaa !7\l  %370 = fdiv contract double %369, %368\l  store double %370, double addrspace(1)* %358, align 8, !tbaa !7\l  %371 = load double, double addrspace(1)* %290, align 8, !tbaa !7\l  %372 = fneg contract double %371\l  %373 = load double, double addrspace(1)* %321, align 8, !tbaa !7\l  %374 = fmul contract double %373, %372\l  %375 = load double, double addrspace(1)* %280, align 8, !tbaa !7\l  %376 = fmul contract double %374, %375\l  %377 = getelementptr inbounds double, double addrspace(1)* %46, i64 %92\l  store double %376, double addrspace(1)* %377, align 8, !tbaa !7\l  %378 = load double, double addrspace(1)* %294, align 8, !tbaa !7\l  %379 = fneg contract double %378\l  %380 = load double, double addrspace(1)* %337, align 8, !tbaa !7\l  %381 = fmul contract double %380, %379\l  %382 = load double, double addrspace(1)* %282, align 8, !tbaa !7\l  %383 = fmul contract double %381, %382\l  %384 = getelementptr inbounds double, double addrspace(1)* %47, i64 %92\l  store double %383, double addrspace(1)* %384, align 8, !tbaa !7\l  %385 = load double, double addrspace(1)* %298, align 8, !tbaa !7\l  %386 = fneg contract double %385\l  %387 = load double, double addrspace(1)* %358, align 8, !tbaa !7\l  %388 = fmul contract double %387, %386\l  %389 = load double, double addrspace(1)* %286, align 8, !tbaa !7\l  %390 = fmul contract double %388, %389\l  %391 = getelementptr inbounds double, double addrspace(1)* %48, i64 %92\l  store double %390, double addrspace(1)* %391, align 8, !tbaa !7\l  br label %392\l}"];
	Node0x55ac220 -> Node0x55a2830;
	Node0x55a2830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%392:\l392:                                              \l  %393 = load double, double addrspace(1)* %64, align 8, !tbaa !7\l  store double %393, double addrspace(1)* %65, align 8, !tbaa !7\l  %394 = load double, double addrspace(1)* %68, align 8, !tbaa !7\l  store double %394, double addrspace(1)* %69, align 8, !tbaa !7\l  %395 = load double, double addrspace(1)* %70, align 8, !tbaa !7\l  store double %395, double addrspace(1)* %71, align 8, !tbaa !7\l  %396 = load double, double addrspace(1)* %72, align 8, !tbaa !7\l  store double %396, double addrspace(1)* %73, align 8, !tbaa !7\l  %397 = load double, double addrspace(1)* %74, align 8, !tbaa !7\l  store double %397, double addrspace(1)* %75, align 8, !tbaa !7\l  %398 = load double, double addrspace(1)* %76, align 8, !tbaa !7\l  store double %398, double addrspace(1)* %77, align 8, !tbaa !7\l  %399 = load double, double addrspace(1)* %8, align 8, !tbaa !7\l  %400 = load double, double addrspace(1)* %9, align 8, !tbaa !7\l  %401 = fdiv contract double %399, %400\l  %402 = icmp sgt i32 %91, 1\l  %403 = icmp slt i32 %91, %66\l  %404 = select i1 %402, i1 %403, i1 false\l  br i1 %404, label %405, label %499\l|{<s0>T|<s1>F}}"];
	Node0x55a2830:s0 -> Node0x55b53a0;
	Node0x55a2830:s1 -> Node0x55b53f0;
	Node0x55b53a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%405:\l405:                                              \l  %406 = getelementptr inbounds double, double addrspace(1)* %37, i64 %92\l  %407 = load double, double addrspace(1)* %406, align 8, !tbaa !7\l  %408 = fptosi double %407 to i32\l  %409 = sub nsw i32 %91, %408\l  %410 = getelementptr inbounds i32, i32 addrspace(1)* %40, i64 %92\l  store i32 %409, i32 addrspace(1)* %410, align 4, !tbaa !11\l  %411 = getelementptr inbounds double, double addrspace(1)* %46, i64 %92\l  %412 = load double, double addrspace(1)* %411, align 8, !tbaa !7\l  %413 = getelementptr inbounds double, double addrspace(1)* %34, i64 %92\l  %414 = load double, double addrspace(1)* %413, align 8, !tbaa !7\l  %415 = sext i32 %409 to i64\l  %416 = getelementptr inbounds double, double addrspace(1)* %43, i64 %415\l  %417 = load double, double addrspace(1)* %416, align 8, !tbaa !7\l  %418 = fmul contract double %417, 2.000000e+00\l  %419 = getelementptr inbounds double, double addrspace(1)* %43, i64 %92\l  %420 = load double, double addrspace(1)* %419, align 8, !tbaa !7\l  %421 = fmul contract double %420, 2.000000e+00\l  %422 = tail call double @llvm.minnum.f64(double %417, double %421)\l  %423 = tail call double @llvm.maxnum.f64(double %420, double %422)\l  %424 = tail call double @llvm.minnum.f64(double %418, double %423)\l  %425 = tail call double @llvm.maxnum.f64(double %424, double 0.000000e+00)\l  %426 = tail call double @llvm.maxnum.f64(double %417, double %421)\l  %427 = tail call double @llvm.minnum.f64(double %420, double %426)\l  %428 = tail call double @llvm.maxnum.f64(double %418, double %427)\l  %429 = tail call double @llvm.minnum.f64(double %428, double 0.000000e+00)\l  %430 = fadd contract double %425, %429\l  %431 = fmul contract double %401, %414\l  %432 = fsub contract double %407, %431\l  %433 = fmul contract double %432, %430\l  %434 = fmul contract double %414, %433\l  %435 = fadd contract double %412, %434\l  %436 = getelementptr inbounds double, double addrspace(1)* %49, i64 %92\l  store double %435, double addrspace(1)* %436, align 8, !tbaa !7\l  %437 = getelementptr inbounds double, double addrspace(1)* %38, i64 %92\l  %438 = load double, double addrspace(1)* %437, align 8, !tbaa !7\l  %439 = fptosi double %438 to i32\l  %440 = sub nsw i32 %91, %439\l  %441 = getelementptr inbounds i32, i32 addrspace(1)* %41, i64 %92\l  store i32 %440, i32 addrspace(1)* %441, align 4, !tbaa !11\l  %442 = getelementptr inbounds double, double addrspace(1)* %47, i64 %92\l  %443 = load double, double addrspace(1)* %442, align 8, !tbaa !7\l  %444 = getelementptr inbounds double, double addrspace(1)* %35, i64 %92\l  %445 = load double, double addrspace(1)* %444, align 8, !tbaa !7\l  %446 = sext i32 %440 to i64\l  %447 = getelementptr inbounds double, double addrspace(1)* %44, i64 %446\l  %448 = load double, double addrspace(1)* %447, align 8, !tbaa !7\l  %449 = fmul contract double %448, 2.000000e+00\l  %450 = getelementptr inbounds double, double addrspace(1)* %44, i64 %92\l  %451 = load double, double addrspace(1)* %450, align 8, !tbaa !7\l  %452 = fmul contract double %451, 2.000000e+00\l  %453 = tail call double @llvm.minnum.f64(double %448, double %452)\l  %454 = tail call double @llvm.maxnum.f64(double %451, double %453)\l  %455 = tail call double @llvm.minnum.f64(double %449, double %454)\l  %456 = tail call double @llvm.maxnum.f64(double %455, double 0.000000e+00)\l  %457 = tail call double @llvm.maxnum.f64(double %448, double %452)\l  %458 = tail call double @llvm.minnum.f64(double %451, double %457)\l  %459 = tail call double @llvm.maxnum.f64(double %449, double %458)\l  %460 = tail call double @llvm.minnum.f64(double %459, double 0.000000e+00)\l  %461 = fadd contract double %456, %460\l  %462 = fmul contract double %401, %445\l  %463 = fsub contract double %438, %462\l  %464 = fmul contract double %463, %461\l  %465 = fmul contract double %445, %464\l  %466 = fadd contract double %443, %465\l  %467 = getelementptr inbounds double, double addrspace(1)* %50, i64 %92\l  store double %466, double addrspace(1)* %467, align 8, !tbaa !7\l  %468 = getelementptr inbounds double, double addrspace(1)* %39, i64 %92\l  %469 = load double, double addrspace(1)* %468, align 8, !tbaa !7\l  %470 = fptosi double %469 to i32\l  %471 = sub nsw i32 %91, %470\l  %472 = getelementptr inbounds i32, i32 addrspace(1)* %42, i64 %92\l  store i32 %471, i32 addrspace(1)* %472, align 4, !tbaa !11\l  %473 = getelementptr inbounds double, double addrspace(1)* %48, i64 %92\l  %474 = load double, double addrspace(1)* %473, align 8, !tbaa !7\l  %475 = getelementptr inbounds double, double addrspace(1)* %36, i64 %92\l  %476 = load double, double addrspace(1)* %475, align 8, !tbaa !7\l  %477 = sext i32 %471 to i64\l  %478 = getelementptr inbounds double, double addrspace(1)* %45, i64 %477\l  %479 = load double, double addrspace(1)* %478, align 8, !tbaa !7\l  %480 = fmul contract double %479, 2.000000e+00\l  %481 = getelementptr inbounds double, double addrspace(1)* %45, i64 %92\l  %482 = load double, double addrspace(1)* %481, align 8, !tbaa !7\l  %483 = fmul contract double %482, 2.000000e+00\l  %484 = tail call double @llvm.minnum.f64(double %479, double %483)\l  %485 = tail call double @llvm.maxnum.f64(double %482, double %484)\l  %486 = tail call double @llvm.minnum.f64(double %480, double %485)\l  %487 = tail call double @llvm.maxnum.f64(double %486, double 0.000000e+00)\l  %488 = tail call double @llvm.maxnum.f64(double %479, double %483)\l  %489 = tail call double @llvm.minnum.f64(double %482, double %488)\l  %490 = tail call double @llvm.maxnum.f64(double %480, double %489)\l  %491 = tail call double @llvm.minnum.f64(double %490, double 0.000000e+00)\l  %492 = fadd contract double %487, %491\l  %493 = fmul contract double %401, %476\l  %494 = fsub contract double %469, %493\l  %495 = fmul contract double %494, %492\l  %496 = fmul contract double %476, %495\l  %497 = fadd contract double %474, %496\l  %498 = getelementptr inbounds double, double addrspace(1)* %51, i64 %92\l  store double %497, double addrspace(1)* %498, align 8, !tbaa !7\l  br label %499\l}"];
	Node0x55b53a0 -> Node0x55b53f0;
	Node0x55b53f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%499:\l499:                                              \l  br i1 %161, label %500, label %566\l|{<s0>T|<s1>F}}"];
	Node0x55b53f0:s0 -> Node0x55ba180;
	Node0x55b53f0:s1 -> Node0x55ba1d0;
	Node0x55ba180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%500:\l500:                                              \l  %501 = getelementptr inbounds double, double addrspace(1)* %21, i64 %92\l  %502 = load double, double addrspace(1)* %501, align 8, !tbaa !7\l  %503 = getelementptr inbounds double, double addrspace(1)* %18, i64 %92\l  %504 = load double, double addrspace(1)* %503, align 8, !tbaa !7\l  %505 = fadd contract double %502, %504\l  %506 = getelementptr inbounds double, double addrspace(1)* %49, i64 %92\l  %507 = load double, double addrspace(1)* %506, align 8, !tbaa !7\l  %508 = fadd contract double %505, %507\l  %509 = getelementptr inbounds double, double addrspace(1)* %50, i64 %92\l  %510 = load double, double addrspace(1)* %509, align 8, !tbaa !7\l  %511 = fadd contract double %508, %510\l  %512 = getelementptr inbounds double, double addrspace(1)* %51, i64 %92\l  %513 = load double, double addrspace(1)* %512, align 8, !tbaa !7\l  %514 = fadd contract double %511, %513\l  %515 = fmul contract double %514, 5.000000e-01\l  %516 = getelementptr inbounds double, double addrspace(1)* %5, i64 %92\l  store double %515, double addrspace(1)* %516, align 8, !tbaa !7\l  %517 = getelementptr inbounds double, double addrspace(1)* %22, i64 %92\l  %518 = load double, double addrspace(1)* %517, align 8, !tbaa !7\l  %519 = getelementptr inbounds double, double addrspace(1)* %19, i64 %92\l  %520 = load double, double addrspace(1)* %519, align 8, !tbaa !7\l  %521 = fadd contract double %518, %520\l  %522 = getelementptr inbounds double, double addrspace(1)* %34, i64 %92\l  %523 = load double, double addrspace(1)* %522, align 8, !tbaa !7\l  %524 = load double, double addrspace(1)* %506, align 8, !tbaa !7\l  %525 = fmul contract double %523, %524\l  %526 = fadd contract double %521, %525\l  %527 = getelementptr inbounds double, double addrspace(1)* %35, i64 %92\l  %528 = load double, double addrspace(1)* %527, align 8, !tbaa !7\l  %529 = load double, double addrspace(1)* %509, align 8, !tbaa !7\l  %530 = fmul contract double %528, %529\l  %531 = fadd contract double %526, %530\l  %532 = getelementptr inbounds double, double addrspace(1)* %36, i64 %92\l  %533 = load double, double addrspace(1)* %532, align 8, !tbaa !7\l  %534 = load double, double addrspace(1)* %512, align 8, !tbaa !7\l  %535 = fmul contract double %533, %534\l  %536 = fadd contract double %531, %535\l  %537 = fmul contract double %536, 5.000000e-01\l  %538 = getelementptr inbounds double, double addrspace(1)* %6, i64 %92\l  store double %537, double addrspace(1)* %538, align 8, !tbaa !7\l  %539 = getelementptr inbounds double, double addrspace(1)* %23, i64 %92\l  %540 = load double, double addrspace(1)* %539, align 8, !tbaa !7\l  %541 = getelementptr inbounds double, double addrspace(1)* %20, i64 %92\l  %542 = load double, double addrspace(1)* %541, align 8, !tbaa !7\l  %543 = fadd contract double %540, %542\l  %544 = getelementptr inbounds double, double addrspace(1)* %29, i64 %92\l  %545 = load double, double addrspace(1)* %544, align 8, !tbaa !7\l  %546 = getelementptr inbounds double, double addrspace(1)* %28, i64 %92\l  %547 = load double, double addrspace(1)* %546, align 8, !tbaa !7\l  %548 = getelementptr inbounds double, double addrspace(1)* %33, i64 %92\l  %549 = load double, double addrspace(1)* %548, align 8, !tbaa !7\l  %550 = fmul contract double %547, %549\l  %551 = fsub contract double %545, %550\l  %552 = load double, double addrspace(1)* %506, align 8, !tbaa !7\l  %553 = fmul contract double %552, %551\l  %554 = fadd contract double %543, %553\l  %555 = getelementptr inbounds double, double addrspace(1)* %31, i64 %92\l  %556 = load double, double addrspace(1)* %555, align 8, !tbaa !7\l  %557 = load double, double addrspace(1)* %509, align 8, !tbaa !7\l  %558 = fmul contract double %556, %557\l  %559 = fadd contract double %554, %558\l  %560 = fadd contract double %545, %550\l  %561 = load double, double addrspace(1)* %512, align 8, !tbaa !7\l  %562 = fmul contract double %560, %561\l  %563 = fadd contract double %559, %562\l  %564 = fmul contract double %563, 5.000000e-01\l  %565 = getelementptr inbounds double, double addrspace(1)* %7, i64 %92\l  store double %564, double addrspace(1)* %565, align 8, !tbaa !7\l  br label %566\l}"];
	Node0x55ba180 -> Node0x55ba1d0;
	Node0x55ba1d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%566:\l566:                                              \l  %567 = phi i1 [ %403, %500 ], [ false, %499 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %567, label %568, label %604\l|{<s0>T|<s1>F}}"];
	Node0x55ba1d0:s0 -> Node0x55bda20;
	Node0x55ba1d0:s1 -> Node0x55a2100;
	Node0x55bda20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%568:\l568:                                              \l  %569 = load double, double addrspace(1)* %8, align 8, !tbaa !7\l  %570 = load double, double addrspace(1)* %9, align 8, !tbaa !7\l  %571 = fdiv contract double %569, %570\l  %572 = add nuw nsw i32 %91, 1\l  %573 = zext i32 %572 to i64\l  %574 = getelementptr inbounds double, double addrspace(1)* %5, i64 %573\l  %575 = load double, double addrspace(1)* %574, align 8, !tbaa !7\l  %576 = getelementptr inbounds double, double addrspace(1)* %5, i64 %92\l  %577 = load double, double addrspace(1)* %576, align 8, !tbaa !7\l  %578 = fsub contract double %575, %577\l  %579 = fmul contract double %571, %578\l  %580 = load double, double addrspace(1)* %95, align 8, !tbaa !7\l  %581 = fsub contract double %580, %579\l  store double %581, double addrspace(1)* %95, align 8, !tbaa !7\l  %582 = load double, double addrspace(1)* %8, align 8, !tbaa !7\l  %583 = load double, double addrspace(1)* %9, align 8, !tbaa !7\l  %584 = fdiv contract double %582, %583\l  %585 = getelementptr inbounds double, double addrspace(1)* %6, i64 %573\l  %586 = load double, double addrspace(1)* %585, align 8, !tbaa !7\l  %587 = getelementptr inbounds double, double addrspace(1)* %6, i64 %92\l  %588 = load double, double addrspace(1)* %587, align 8, !tbaa !7\l  %589 = fsub contract double %586, %588\l  %590 = fmul contract double %584, %589\l  %591 = load double, double addrspace(1)* %121, align 8, !tbaa !7\l  %592 = fsub contract double %591, %590\l  store double %592, double addrspace(1)* %121, align 8, !tbaa !7\l  %593 = load double, double addrspace(1)* %8, align 8, !tbaa !7\l  %594 = load double, double addrspace(1)* %9, align 8, !tbaa !7\l  %595 = fdiv contract double %593, %594\l  %596 = getelementptr inbounds double, double addrspace(1)* %7, i64 %573\l  %597 = load double, double addrspace(1)* %596, align 8, !tbaa !7\l  %598 = getelementptr inbounds double, double addrspace(1)* %7, i64 %92\l  %599 = load double, double addrspace(1)* %598, align 8, !tbaa !7\l  %600 = fsub contract double %597, %599\l  %601 = fmul contract double %595, %600\l  %602 = load double, double addrspace(1)* %129, align 8, !tbaa !7\l  %603 = fsub contract double %602, %601\l  store double %603, double addrspace(1)* %129, align 8, !tbaa !7\l  br label %604\l}"];
	Node0x55bda20 -> Node0x55a2100;
	Node0x55a2100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%604:\l604:                                              \l  %605 = load double, double addrspace(1)* %78, align 8, !tbaa !7\l  store double %605, double addrspace(1)* %1, align 8, !tbaa !7\l  %606 = load double, double addrspace(1)* %79, align 8, !tbaa !7\l  %607 = fneg contract double %606\l  store double %607, double addrspace(1)* %2, align 8, !tbaa !7\l  %608 = load double, double addrspace(1)* %80, align 8, !tbaa !7\l  store double %608, double addrspace(1)* %3, align 8, !tbaa !7\l  %609 = load double, double addrspace(1)* %83, align 8, !tbaa !7\l  store double %609, double addrspace(1)* %84, align 8, !tbaa !7\l  %610 = load double, double addrspace(1)* %85, align 8, !tbaa !7\l  %611 = fneg contract double %610\l  store double %611, double addrspace(1)* %86, align 8, !tbaa !7\l  %612 = load double, double addrspace(1)* %87, align 8, !tbaa !7\l  store double %612, double addrspace(1)* %88, align 8, !tbaa !7\l  %613 = add nsw i32 %91, %58\l  %614 = icmp slt i32 %613, %0\l  br i1 %614, label %90, label %89, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55a2100:s0 -> Node0x55a1fc0;
	Node0x55a2100:s1 -> Node0x55a0cf0;
}
