digraph "CFG for '_Z15laxWendroffStepiPdS_S_S_S_S_S_S_S_PKdS1_S1_' function" {
	label="CFG for '_Z15laxWendroffStepiPdS_S_S_S_S_S_S_S_PKdS1_S1_' function";

	Node0x62609e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%13:\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %14, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %22 = add i32 %20, %21\l  %23 = icmp slt i32 %22, %0\l  br i1 %23, label %24, label %117\l|{<s0>T|<s1>F}}"];
	Node0x62609e0:s0 -> Node0x6263550;
	Node0x62609e0:s1 -> Node0x62635e0;
	Node0x6263550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %47, %24 ], [ %22, %13 ]\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds double, double addrspace(1)* %1, i64 %26\l  %28 = load double, double addrspace(1)* %27, align 8, !tbaa !7\l  %29 = getelementptr inbounds double, double addrspace(1)* %2, i64 %26\l  %30 = load double, double addrspace(1)* %29, align 8, !tbaa !7\l  %31 = getelementptr inbounds double, double addrspace(1)* %3, i64 %26\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !7\l  %33 = load double, double addrspace(1)* %12, align 8, !tbaa !7\l  %34 = fadd contract double %33, -1.000000e+00\l  %35 = fmul contract double %30, %30\l  %36 = fdiv contract double %35, %28\l  %37 = fmul contract double %36, 5.000000e-01\l  %38 = fsub contract double %32, %37\l  %39 = fmul contract double %34, %38\l  %40 = getelementptr inbounds double, double addrspace(1)* %7, i64 %26\l  store double %30, double addrspace(1)* %40, align 8, !tbaa !7\l  %41 = fadd contract double %36, %39\l  %42 = getelementptr inbounds double, double addrspace(1)* %8, i64 %26\l  store double %41, double addrspace(1)* %42, align 8, !tbaa !7\l  %43 = fdiv contract double %30, %28\l  %44 = fadd contract double %32, %39\l  %45 = fmul contract double %43, %44\l  %46 = getelementptr inbounds double, double addrspace(1)* %9, i64 %26\l  store double %45, double addrspace(1)* %46, align 8, !tbaa !7\l  %47 = add nsw i32 %25, %19\l  %48 = icmp slt i32 %47, %0\l  br i1 %48, label %24, label %49, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x6263550:s0 -> Node0x6263550;
	Node0x6263550:s1 -> Node0x6265960;
	Node0x6265960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%49:\l49:                                               \l  %50 = add nsw i32 %0, -1\l  br label %51\l}"];
	Node0x6265960 -> Node0x6265c30;
	Node0x6265c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32 [ %22, %49 ], [ %115, %114 ]\l  %53 = icmp sgt i32 %52, 0\l  %54 = icmp slt i32 %52, %50\l  %55 = select i1 %53, i1 %54, i1 false\l  br i1 %55, label %56, label %114\l|{<s0>T|<s1>F}}"];
	Node0x6265c30:s0 -> Node0x6266060;
	Node0x6265c30:s1 -> Node0x6265cf0;
	Node0x6266060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%56:\l56:                                               \l  %57 = add nuw nsw i32 %52, 1\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds double, double addrspace(1)* %1, i64 %58\l  %60 = load double, double addrspace(1)* %59, align 8, !tbaa !7\l  %61 = zext i32 %52 to i64\l  %62 = getelementptr inbounds double, double addrspace(1)* %1, i64 %61\l  %63 = load double, double addrspace(1)* %62, align 8, !tbaa !7\l  %64 = fadd contract double %60, %63\l  %65 = fmul contract double %64, 5.000000e-01\l  %66 = load double, double addrspace(1)* %10, align 8, !tbaa !7\l  %67 = fmul contract double %66, 5.000000e-01\l  %68 = load double, double addrspace(1)* %11, align 8, !tbaa !7\l  %69 = fdiv contract double %67, %68\l  %70 = getelementptr inbounds double, double addrspace(1)* %7, i64 %58\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !7\l  %72 = getelementptr inbounds double, double addrspace(1)* %7, i64 %61\l  %73 = load double, double addrspace(1)* %72, align 8, !tbaa !7\l  %74 = fsub contract double %71, %73\l  %75 = fmul contract double %69, %74\l  %76 = fsub contract double %65, %75\l  %77 = getelementptr inbounds double, double addrspace(1)* %4, i64 %61\l  store double %76, double addrspace(1)* %77, align 8, !tbaa !7\l  %78 = getelementptr inbounds double, double addrspace(1)* %2, i64 %58\l  %79 = load double, double addrspace(1)* %78, align 8, !tbaa !7\l  %80 = getelementptr inbounds double, double addrspace(1)* %2, i64 %61\l  %81 = load double, double addrspace(1)* %80, align 8, !tbaa !7\l  %82 = fadd contract double %79, %81\l  %83 = fmul contract double %82, 5.000000e-01\l  %84 = load double, double addrspace(1)* %10, align 8, !tbaa !7\l  %85 = fmul contract double %84, 5.000000e-01\l  %86 = load double, double addrspace(1)* %11, align 8, !tbaa !7\l  %87 = fdiv contract double %85, %86\l  %88 = getelementptr inbounds double, double addrspace(1)* %8, i64 %58\l  %89 = load double, double addrspace(1)* %88, align 8, !tbaa !7\l  %90 = getelementptr inbounds double, double addrspace(1)* %8, i64 %61\l  %91 = load double, double addrspace(1)* %90, align 8, !tbaa !7\l  %92 = fsub contract double %89, %91\l  %93 = fmul contract double %87, %92\l  %94 = fsub contract double %83, %93\l  %95 = getelementptr inbounds double, double addrspace(1)* %5, i64 %61\l  store double %94, double addrspace(1)* %95, align 8, !tbaa !7\l  %96 = getelementptr inbounds double, double addrspace(1)* %3, i64 %58\l  %97 = load double, double addrspace(1)* %96, align 8, !tbaa !7\l  %98 = getelementptr inbounds double, double addrspace(1)* %3, i64 %61\l  %99 = load double, double addrspace(1)* %98, align 8, !tbaa !7\l  %100 = fadd contract double %97, %99\l  %101 = fmul contract double %100, 5.000000e-01\l  %102 = load double, double addrspace(1)* %10, align 8, !tbaa !7\l  %103 = fmul contract double %102, 5.000000e-01\l  %104 = load double, double addrspace(1)* %11, align 8, !tbaa !7\l  %105 = fdiv contract double %103, %104\l  %106 = getelementptr inbounds double, double addrspace(1)* %9, i64 %58\l  %107 = load double, double addrspace(1)* %106, align 8, !tbaa !7\l  %108 = getelementptr inbounds double, double addrspace(1)* %9, i64 %61\l  %109 = load double, double addrspace(1)* %108, align 8, !tbaa !7\l  %110 = fsub contract double %107, %109\l  %111 = fmul contract double %105, %110\l  %112 = fsub contract double %101, %111\l  %113 = getelementptr inbounds double, double addrspace(1)* %6, i64 %61\l  store double %112, double addrspace(1)* %113, align 8, !tbaa !7\l  br label %114\l}"];
	Node0x6266060 -> Node0x6265cf0;
	Node0x6265cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  %115 = add nsw i32 %52, %19\l  %116 = icmp slt i32 %115, %0\l  br i1 %116, label %51, label %117, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x6265cf0:s0 -> Node0x6265c30;
	Node0x6265cf0:s1 -> Node0x62635e0;
	Node0x62635e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%117:\l117:                                              \l  %118 = getelementptr inbounds double, double addrspace(1)* %4, i64 1\l  %119 = load double, double addrspace(1)* %118, align 8, !tbaa !7\l  store double %119, double addrspace(1)* %4, align 8, !tbaa !7\l  %120 = getelementptr inbounds double, double addrspace(1)* %5, i64 1\l  %121 = load double, double addrspace(1)* %120, align 8, !tbaa !7\l  %122 = fneg contract double %121\l  store double %122, double addrspace(1)* %5, align 8, !tbaa !7\l  %123 = getelementptr inbounds double, double addrspace(1)* %6, i64 1\l  %124 = load double, double addrspace(1)* %123, align 8, !tbaa !7\l  store double %124, double addrspace(1)* %6, align 8, !tbaa !7\l  %125 = add nsw i32 %0, -2\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds double, double addrspace(1)* %4, i64 %126\l  %128 = load double, double addrspace(1)* %127, align 8, !tbaa !7\l  %129 = add nsw i32 %0, -1\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds double, double addrspace(1)* %4, i64 %130\l  store double %128, double addrspace(1)* %131, align 8, !tbaa !7\l  %132 = getelementptr inbounds double, double addrspace(1)* %5, i64 %126\l  %133 = load double, double addrspace(1)* %132, align 8, !tbaa !7\l  %134 = fneg contract double %133\l  %135 = getelementptr inbounds double, double addrspace(1)* %5, i64 %130\l  store double %134, double addrspace(1)* %135, align 8, !tbaa !7\l  %136 = getelementptr inbounds double, double addrspace(1)* %6, i64 %126\l  %137 = load double, double addrspace(1)* %136, align 8, !tbaa !7\l  %138 = getelementptr inbounds double, double addrspace(1)* %6, i64 %130\l  store double %137, double addrspace(1)* %138, align 8, !tbaa !7\l  br i1 %23, label %139, label %234\l|{<s0>T|<s1>F}}"];
	Node0x62635e0:s0 -> Node0x62699e0;
	Node0x62635e0:s1 -> Node0x6269a30;
	Node0x62699e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%139:\l139:                                              \l  %140 = phi i32 [ %162, %139 ], [ %22, %117 ]\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds double, double addrspace(1)* %4, i64 %141\l  %143 = load double, double addrspace(1)* %142, align 8, !tbaa !7\l  %144 = getelementptr inbounds double, double addrspace(1)* %5, i64 %141\l  %145 = load double, double addrspace(1)* %144, align 8, !tbaa !7\l  %146 = getelementptr inbounds double, double addrspace(1)* %6, i64 %141\l  %147 = load double, double addrspace(1)* %146, align 8, !tbaa !7\l  %148 = load double, double addrspace(1)* %12, align 8, !tbaa !7\l  %149 = fadd contract double %148, -1.000000e+00\l  %150 = fmul contract double %145, %145\l  %151 = fdiv contract double %150, %143\l  %152 = fmul contract double %151, 5.000000e-01\l  %153 = fsub contract double %147, %152\l  %154 = fmul contract double %149, %153\l  %155 = getelementptr inbounds double, double addrspace(1)* %7, i64 %141\l  store double %145, double addrspace(1)* %155, align 8, !tbaa !7\l  %156 = fadd contract double %151, %154\l  %157 = getelementptr inbounds double, double addrspace(1)* %8, i64 %141\l  store double %156, double addrspace(1)* %157, align 8, !tbaa !7\l  %158 = fdiv contract double %145, %143\l  %159 = fadd contract double %147, %154\l  %160 = fmul contract double %158, %159\l  %161 = getelementptr inbounds double, double addrspace(1)* %9, i64 %141\l  store double %160, double addrspace(1)* %161, align 8, !tbaa !7\l  %162 = add nsw i32 %140, %19\l  %163 = icmp slt i32 %162, %0\l  br i1 %163, label %139, label %164, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x62699e0:s0 -> Node0x62699e0;
	Node0x62699e0:s1 -> Node0x6262e10;
	Node0x6262e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%164:\l164:                                              \l  %165 = phi i32 [ %213, %212 ], [ %22, %139 ]\l  %166 = icmp sgt i32 %165, 0\l  %167 = icmp slt i32 %165, %129\l  %168 = select i1 %166, i1 %167, i1 false\l  br i1 %168, label %169, label %212\l|{<s0>T|<s1>F}}"];
	Node0x6262e10:s0 -> Node0x6264020;
	Node0x6262e10:s1 -> Node0x6263d10;
	Node0x6264020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%169:\l169:                                              \l  %170 = zext i32 %165 to i64\l  %171 = getelementptr inbounds double, double addrspace(1)* %1, i64 %170\l  %172 = load double, double addrspace(1)* %171, align 8, !tbaa !7\l  %173 = load double, double addrspace(1)* %10, align 8, !tbaa !7\l  %174 = load double, double addrspace(1)* %11, align 8, !tbaa !7\l  %175 = fdiv contract double %173, %174\l  %176 = getelementptr inbounds double, double addrspace(1)* %7, i64 %170\l  %177 = load double, double addrspace(1)* %176, align 8, !tbaa !7\l  %178 = add nsw i32 %165, -1\l  %179 = zext i32 %178 to i64\l  %180 = getelementptr inbounds double, double addrspace(1)* %7, i64 %179\l  %181 = load double, double addrspace(1)* %180, align 8, !tbaa !7\l  %182 = fsub contract double %177, %181\l  %183 = fmul contract double %175, %182\l  %184 = fsub contract double %172, %183\l  %185 = getelementptr inbounds double, double addrspace(1)* %4, i64 %170\l  store double %184, double addrspace(1)* %185, align 8, !tbaa !7\l  %186 = getelementptr inbounds double, double addrspace(1)* %2, i64 %170\l  %187 = load double, double addrspace(1)* %186, align 8, !tbaa !7\l  %188 = load double, double addrspace(1)* %10, align 8, !tbaa !7\l  %189 = load double, double addrspace(1)* %11, align 8, !tbaa !7\l  %190 = fdiv contract double %188, %189\l  %191 = getelementptr inbounds double, double addrspace(1)* %8, i64 %170\l  %192 = load double, double addrspace(1)* %191, align 8, !tbaa !7\l  %193 = getelementptr inbounds double, double addrspace(1)* %8, i64 %179\l  %194 = load double, double addrspace(1)* %193, align 8, !tbaa !7\l  %195 = fsub contract double %192, %194\l  %196 = fmul contract double %190, %195\l  %197 = fsub contract double %187, %196\l  %198 = getelementptr inbounds double, double addrspace(1)* %5, i64 %170\l  store double %197, double addrspace(1)* %198, align 8, !tbaa !7\l  %199 = getelementptr inbounds double, double addrspace(1)* %3, i64 %170\l  %200 = load double, double addrspace(1)* %199, align 8, !tbaa !7\l  %201 = load double, double addrspace(1)* %10, align 8, !tbaa !7\l  %202 = load double, double addrspace(1)* %11, align 8, !tbaa !7\l  %203 = fdiv contract double %201, %202\l  %204 = getelementptr inbounds double, double addrspace(1)* %9, i64 %170\l  %205 = load double, double addrspace(1)* %204, align 8, !tbaa !7\l  %206 = getelementptr inbounds double, double addrspace(1)* %9, i64 %179\l  %207 = load double, double addrspace(1)* %206, align 8, !tbaa !7\l  %208 = fsub contract double %205, %207\l  %209 = fmul contract double %203, %208\l  %210 = fsub contract double %200, %209\l  %211 = getelementptr inbounds double, double addrspace(1)* %6, i64 %170\l  store double %210, double addrspace(1)* %211, align 8, !tbaa !7\l  br label %212\l}"];
	Node0x6264020 -> Node0x6263d10;
	Node0x6263d10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%212:\l212:                                              \l  %213 = add nsw i32 %165, %19\l  %214 = icmp slt i32 %213, %0\l  br i1 %214, label %164, label %215, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x6263d10:s0 -> Node0x6262e10;
	Node0x6263d10:s1 -> Node0x626e380;
	Node0x626e380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%215:\l215:                                              \l  %216 = phi i32 [ %232, %231 ], [ %22, %212 ]\l  %217 = icmp sgt i32 %216, 0\l  %218 = icmp slt i32 %216, %129\l  %219 = select i1 %217, i1 %218, i1 false\l  br i1 %219, label %220, label %231\l|{<s0>T|<s1>F}}"];
	Node0x626e380:s0 -> Node0x626e850;
	Node0x626e380:s1 -> Node0x626e540;
	Node0x626e850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%220:\l220:                                              \l  %221 = zext i32 %216 to i64\l  %222 = getelementptr inbounds double, double addrspace(1)* %4, i64 %221\l  %223 = load double, double addrspace(1)* %222, align 8, !tbaa !7\l  %224 = getelementptr inbounds double, double addrspace(1)* %1, i64 %221\l  store double %223, double addrspace(1)* %224, align 8, !tbaa !7\l  %225 = getelementptr inbounds double, double addrspace(1)* %5, i64 %221\l  %226 = load double, double addrspace(1)* %225, align 8, !tbaa !7\l  %227 = getelementptr inbounds double, double addrspace(1)* %2, i64 %221\l  store double %226, double addrspace(1)* %227, align 8, !tbaa !7\l  %228 = getelementptr inbounds double, double addrspace(1)* %6, i64 %221\l  %229 = load double, double addrspace(1)* %228, align 8, !tbaa !7\l  %230 = getelementptr inbounds double, double addrspace(1)* %3, i64 %221\l  store double %229, double addrspace(1)* %230, align 8, !tbaa !7\l  br label %231\l}"];
	Node0x626e850 -> Node0x626e540;
	Node0x626e540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%231:\l231:                                              \l  %232 = add nsw i32 %216, %19\l  %233 = icmp slt i32 %232, %0\l  br i1 %233, label %215, label %234, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x626e540:s0 -> Node0x626e380;
	Node0x626e540:s1 -> Node0x6269a30;
	Node0x6269a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%234:\l234:                                              \l  %235 = getelementptr inbounds double, double addrspace(1)* %1, i64 1\l  %236 = load double, double addrspace(1)* %235, align 8, !tbaa !7\l  store double %236, double addrspace(1)* %1, align 8, !tbaa !7\l  %237 = getelementptr inbounds double, double addrspace(1)* %2, i64 1\l  %238 = load double, double addrspace(1)* %237, align 8, !tbaa !7\l  %239 = fneg contract double %238\l  store double %239, double addrspace(1)* %2, align 8, !tbaa !7\l  %240 = getelementptr inbounds double, double addrspace(1)* %3, i64 1\l  %241 = load double, double addrspace(1)* %240, align 8, !tbaa !7\l  store double %241, double addrspace(1)* %3, align 8, !tbaa !7\l  %242 = getelementptr inbounds double, double addrspace(1)* %1, i64 %126\l  %243 = load double, double addrspace(1)* %242, align 8, !tbaa !7\l  %244 = getelementptr inbounds double, double addrspace(1)* %1, i64 %130\l  store double %243, double addrspace(1)* %244, align 8, !tbaa !7\l  %245 = getelementptr inbounds double, double addrspace(1)* %2, i64 %126\l  %246 = load double, double addrspace(1)* %245, align 8, !tbaa !7\l  %247 = fneg contract double %246\l  %248 = getelementptr inbounds double, double addrspace(1)* %2, i64 %130\l  store double %247, double addrspace(1)* %248, align 8, !tbaa !7\l  %249 = getelementptr inbounds double, double addrspace(1)* %3, i64 %126\l  %250 = load double, double addrspace(1)* %249, align 8, !tbaa !7\l  %251 = getelementptr inbounds double, double addrspace(1)* %3, i64 %130\l  store double %250, double addrspace(1)* %251, align 8, !tbaa !7\l  ret void\l}"];
}
