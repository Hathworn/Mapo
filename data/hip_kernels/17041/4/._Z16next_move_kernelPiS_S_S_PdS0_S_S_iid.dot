digraph "CFG for '_Z16next_move_kernelPiS_S_S_PdS0_S_S_iid' function" {
	label="CFG for '_Z16next_move_kernelPiS_S_S_PdS0_S_S_iid' function";

	Node0x5d56680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %12, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %20 = add i32 %18, %19\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !4, !invariant.load !5\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %21, %25\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %28 = add i32 %26, %27\l  %29 = mul nsw i32 %28, %8\l  %30 = add nsw i32 %29, %20\l  %31 = icmp slt i32 %20, %8\l  %32 = icmp slt i32 %28, %9\l  %33 = select i1 %31, i1 %32, i1 false\l  br i1 %33, label %34, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5d56680:s0 -> Node0x5d5aef0;
	Node0x5d56680:s1 -> Node0x5d5af80;
	Node0x5d5aef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%34:\l34:                                               \l  %35 = sext i32 %30 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %35\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %38 = add nsw i32 %30, 1\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7\l  %42 = icmp slt i32 %37, %41\l  br i1 %42, label %43, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5d5aef0:s0 -> Node0x5d5bc70;
	Node0x5d5aef0:s1 -> Node0x5d5af80;
	Node0x5d5bc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%43:\l43:                                               \l  %44 = getelementptr inbounds double, double addrspace(1)* %5, i64 %35\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %35\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %35\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %35\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %35\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !7\l  br label %50\l}"];
	Node0x5d5bc70 -> Node0x5d5c170;
	Node0x5d5c170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i32 [ %49, %43 ], [ %92, %50 ]\l  %52 = phi i32 [ %37, %43 ], [ %93, %50 ]\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !7\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds double, double addrspace(1)* %4, i64 %56\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !11\l  %59 = fmul contract double %58, %10\l  %60 = load double, double addrspace(1)* %44, align 8, !tbaa !11\l  %61 = fdiv contract double %59, %60\l  %62 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7\l  %63 = sitofp i32 %62 to double\l  %64 = fmul contract double %61, %63\l  %65 = fptosi double %64 to i32\l  %66 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !7\l  %67 = sitofp i32 %66 to double\l  %68 = fmul contract double %61, %67\l  %69 = fptosi double %68 to i32\l  %70 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7\l  %71 = sitofp i32 %70 to double\l  %72 = fmul contract double %61, %71\l  %73 = fptosi double %72 to i32\l  %74 = sitofp i32 %51 to double\l  %75 = fmul contract double %61, %74\l  %76 = fptosi double %75 to i32\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %56\l  %78 = atomicrmw add i32 addrspace(1)* %77, i32 %65 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %56\l  %80 = atomicrmw add i32 addrspace(1)* %79, i32 %69 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %56\l  %82 = atomicrmw add i32 addrspace(1)* %81, i32 %73 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %56\l  %84 = atomicrmw add i32 addrspace(1)* %83, i32 %76 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %85 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7\l  %86 = sub nsw i32 %85, %65\l  store i32 %86, i32 addrspace(1)* %45, align 4, !tbaa !7\l  %87 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !7\l  %88 = sub nsw i32 %87, %69\l  store i32 %88, i32 addrspace(1)* %46, align 4, !tbaa !7\l  %89 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7\l  %90 = sub nsw i32 %89, %73\l  store i32 %90, i32 addrspace(1)* %47, align 4, !tbaa !7\l  %91 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !7\l  %92 = sub nsw i32 %91, %76\l  store i32 %92, i32 addrspace(1)* %48, align 4, !tbaa !7\l  %93 = add nsw i32 %52, 1\l  %94 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7\l  %95 = icmp slt i32 %93, %94\l  br i1 %95, label %50, label %96, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5d5c170:s0 -> Node0x5d5c170;
	Node0x5d5c170:s1 -> Node0x5d5af80;
	Node0x5d5af80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%96:\l96:                                               \l  ret void\l}"];
}
