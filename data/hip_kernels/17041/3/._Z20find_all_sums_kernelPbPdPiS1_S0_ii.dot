digraph "CFG for '_Z20find_all_sums_kernelPbPdPiS1_S0_ii' function" {
	label="CFG for '_Z20find_all_sums_kernelPbPdPiS1_S0_ii' function";

	Node0x579cb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = mul nsw i32 %24, %5\l  %26 = add nsw i32 %25, %16\l  %27 = icmp slt i32 %16, %5\l  %28 = icmp slt i32 %24, %6\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %60\l|{<s0>T|<s1>F}}"];
	Node0x579cb70:s0 -> Node0x57a0720;
	Node0x579cb70:s1 -> Node0x57a07b0;
	Node0x57a0720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%30:\l30:                                               \l  %31 = sext i32 %26 to i64\l  %32 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %31\l  %33 = load i8, i8 addrspace(1)* %32, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !5\l  %34 = icmp eq i8 %33, 0\l  br i1 %34, label %60, label %35\l|{<s0>T|<s1>F}}"];
	Node0x57a0720:s0 -> Node0x57a07b0;
	Node0x57a0720:s1 -> Node0x57a0f60;
	Node0x57a0f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%35:\l35:                                               \l  %36 = add nsw i32 %26, 1\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %37\l  %39 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !12, !amdgpu.noclobber\l... !5\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %31\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !12, !amdgpu.noclobber\l... !5\l  %42 = add nsw i32 %41, 11\l  %43 = tail call i32 @llvm.smin.i32(i32 %39, i32 %42)\l  %44 = icmp slt i32 %41, %43\l  br i1 %44, label %48, label %45\l|{<s0>T|<s1>F}}"];
	Node0x57a0f60:s0 -> Node0x57a1e70;
	Node0x57a0f60:s1 -> Node0x57a1f00;
	Node0x57a1f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%45:\l45:                                               \l  %46 = phi double [ 0.000000e+00, %35 ], [ %57, %48 ]\l  %47 = getelementptr inbounds double, double addrspace(1)* %4, i64 %31\l  store double %46, double addrspace(1)* %47, align 8, !tbaa !14\l  br label %60\l}"];
	Node0x57a1f00 -> Node0x57a07b0;
	Node0x57a1e70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i32 [ %58, %48 ], [ %41, %35 ]\l  %50 = phi double [ %57, %48 ], [ 0.000000e+00, %35 ]\l  %51 = sext i32 %49 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !12, !amdgpu.noclobber\l... !5\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds double, double addrspace(1)* %1, i64 %54\l  %56 = load double, double addrspace(1)* %55, align 8, !tbaa !14,\l... !amdgpu.noclobber !5\l  %57 = fadd contract double %50, %56\l  %58 = add nsw i32 %49, 1\l  %59 = icmp slt i32 %58, %43\l  br i1 %59, label %48, label %45, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x57a1e70:s0 -> Node0x57a1e70;
	Node0x57a1e70:s1 -> Node0x57a1f00;
	Node0x57a07b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%60:\l60:                                               \l  ret void\l}"];
}
