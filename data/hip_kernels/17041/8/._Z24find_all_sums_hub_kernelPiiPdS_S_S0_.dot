digraph "CFG for '_Z24find_all_sums_hub_kernelPiiPdS_S_S0_' function" {
	label="CFG for '_Z24find_all_sums_hub_kernelPiiPdS_S_S0_' function";

	Node0x5599660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %1\l  br i1 %16, label %17, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5599660:s0 -> Node0x5599ab0;
	Node0x5599660:s1 -> Node0x559b680;
	Node0x5599ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%17:\l17:                                               \l  %18 = sext i32 %15 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %21\l  %23 = bitcast i32 addrspace(1)* %22 to \<2 x i32\> addrspace(1)*\l  %24 = load \<2 x i32\>, \<2 x i32\> addrspace(1)* %23, align 4, !tbaa !7\l  %25 = extractelement \<2 x i32\> %24, i64 0\l  %26 = extractelement \<2 x i32\> %24, i64 1\l  %27 = icmp slt i32 %25, %26\l  br i1 %27, label %31, label %28\l|{<s0>T|<s1>F}}"];
	Node0x5599ab0:s0 -> Node0x559d0c0;
	Node0x5599ab0:s1 -> Node0x559d150;
	Node0x559d150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%28:\l28:                                               \l  %29 = phi double [ 0.000000e+00, %17 ], [ %40, %31 ]\l  %30 = getelementptr inbounds double, double addrspace(1)* %5, i64 %21\l  store double %29, double addrspace(1)* %30, align 8, !tbaa !11\l  br label %43\l}"];
	Node0x559d150 -> Node0x559b680;
	Node0x559d0c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = phi i32 [ %41, %31 ], [ %25, %17 ]\l  %33 = phi double [ %40, %31 ], [ 0.000000e+00, %17 ]\l  %34 = sext i32 %32 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %34\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds double, double addrspace(1)* %2, i64 %37\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %40 = fadd contract double %33, %39\l  %41 = add nsw i32 %32, 1\l  %42 = icmp slt i32 %41, %26\l  br i1 %42, label %31, label %28, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x559d0c0:s0 -> Node0x559d0c0;
	Node0x559d0c0:s1 -> Node0x559d150;
	Node0x559b680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%43:\l43:                                               \l  ret void\l}"];
}
