digraph "CFG for '_Z20find_all_sums_kernelPbPfPiS1_S0_S0_ii' function" {
	label="CFG for '_Z20find_all_sums_kernelPbPfPiS1_S0_S0_ii' function";

	Node0x4591c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = mul nsw i32 %25, %6\l  %27 = add nsw i32 %26, %17\l  %28 = icmp slt i32 %17, %6\l  %29 = icmp slt i32 %25, %7\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %62\l|{<s0>T|<s1>F}}"];
	Node0x4591c40:s0 -> Node0x45957e0;
	Node0x4591c40:s1 -> Node0x4595870;
	Node0x45957e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%31:\l31:                                               \l  %32 = sext i32 %27 to i64\l  %33 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %32\l  %34 = load i8, i8 addrspace(1)* %33, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !5\l  %35 = icmp eq i8 %34, 0\l  br i1 %35, label %62, label %36\l|{<s0>T|<s1>F}}"];
	Node0x45957e0:s0 -> Node0x4595870;
	Node0x45957e0:s1 -> Node0x4595ff0;
	Node0x4595ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%36:\l36:                                               \l  %37 = add nsw i32 %27, 1\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %38\l  %40 = load i32, i32 addrspace(1)* %39, align 4, !tbaa !12, !amdgpu.noclobber\l... !5\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %32\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !12, !amdgpu.noclobber\l... !5\l  %43 = add nsw i32 %42, 11\l  %44 = tail call i32 @llvm.smin.i32(i32 %40, i32 %43)\l  %45 = icmp slt i32 %42, %44\l  br i1 %45, label %49, label %46\l|{<s0>T|<s1>F}}"];
	Node0x4595ff0:s0 -> Node0x4596f30;
	Node0x4595ff0:s1 -> Node0x4596fc0;
	Node0x4596fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%46:\l46:                                               \l  %47 = phi float [ 0.000000e+00, %36 ], [ %58, %49 ]\l  %48 = getelementptr inbounds float, float addrspace(1)* %5, i64 %32\l  store float %47, float addrspace(1)* %48, align 4, !tbaa !14\l  br label %62\l}"];
	Node0x4596fc0 -> Node0x4595870;
	Node0x4596f30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = phi i32 [ %60, %49 ], [ %42, %36 ]\l  %51 = phi float [ %58, %49 ], [ 0.000000e+00, %36 ]\l  %52 = sext i32 %50 to i64\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %52\l  %54 = load i32, i32 addrspace(1)* %53, align 4, !tbaa !12, !amdgpu.noclobber\l... !5\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !14\l  %58 = fadd contract float %51, %57\l  %59 = getelementptr inbounds float, float addrspace(1)* %4, i64 %52\l  store float %58, float addrspace(1)* %59, align 4, !tbaa !14\l  %60 = add nsw i32 %50, 1\l  %61 = icmp slt i32 %60, %44\l  br i1 %61, label %49, label %46, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4596f30:s0 -> Node0x4596f30;
	Node0x4596f30:s1 -> Node0x4596fc0;
	Node0x4595870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%62:\l62:                                               \l  ret void\l}"];
}
