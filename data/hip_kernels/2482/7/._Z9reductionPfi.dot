digraph "CFG for '_Z9reductionPfi' function" {
	label="CFG for '_Z9reductionPfi' function";

	Node0x54b00b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = add i32 %10, %3\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds float, float addrspace(1)* %0, i64 %12\l  %14 = load float, float addrspace(1)* %13, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %15 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ9reductionPfiE6s_data, i32 0, i32 %3\l  store float %14, float addrspace(3)* %15, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %16 = icmp ult i16 %8, 2\l  br i1 %16, label %17, label %19\l|{<s0>T|<s1>F}}"];
	Node0x54b00b0:s0 -> Node0x54b1d90;
	Node0x54b00b0:s1 -> Node0x54b34c0;
	Node0x54b1d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%17:\l17:                                               \l  %18 = icmp eq i32 %3, 0\l  br i1 %18, label %31, label %35\l|{<s0>T|<s1>F}}"];
	Node0x54b1d90:s0 -> Node0x54b3690;
	Node0x54b1d90:s1 -> Node0x54b36e0;
	Node0x54b34c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = phi i32 [ %21, %29 ], [ %9, %2 ]\l  %21 = lshr i32 %20, 1\l  %22 = icmp ult i32 %3, %21\l  br i1 %22, label %23, label %29\l|{<s0>T|<s1>F}}"];
	Node0x54b34c0:s0 -> Node0x54b3ae0;
	Node0x54b34c0:s1 -> Node0x54b3850;
	Node0x54b3ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%23:\l23:                                               \l  %24 = add nuw nsw i32 %21, %3\l  %25 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ9reductionPfiE6s_data, i32 0, i32 %24\l  %26 = load float, float addrspace(3)* %25, align 4, !tbaa !7\l  %27 = load float, float addrspace(3)* %15, align 4, !tbaa !7\l  %28 = fadd contract float %26, %27\l  store float %28, float addrspace(3)* %15, align 4, !tbaa !7\l  br label %29\l}"];
	Node0x54b3ae0 -> Node0x54b3850;
	Node0x54b3850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %30 = icmp ult i32 %20, 4\l  br i1 %30, label %17, label %19, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x54b3850:s0 -> Node0x54b1d90;
	Node0x54b3850:s1 -> Node0x54b34c0;
	Node0x54b3690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%31:\l31:                                               \l  %32 = load float, float addrspace(3)* %15, align 4, !tbaa !7\l  %33 = zext i32 %4 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  store float %32, float addrspace(1)* %34, align 4, !tbaa !7\l  br label %35\l}"];
	Node0x54b3690 -> Node0x54b36e0;
	Node0x54b36e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%35:\l35:                                               \l  ret void\l}"];
}
