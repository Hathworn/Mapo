digraph "CFG for '_Z16back_prop_kernelPfS_S_S_S_iiif' function" {
	label="CFG for '_Z16back_prop_kernelPfS_S_S_S_iiif' function";

	Node0x643eae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = icmp eq i32 %10, 0\l  %13 = icmp sgt i32 %7, 0\l  %14 = select i1 %12, i1 %13, i1 false\l  br i1 %14, label %15, label %131\l|{<s0>T|<s1>F}}"];
	Node0x643eae0:s0 -> Node0x64408f0;
	Node0x643eae0:s1 -> Node0x6440980;
	Node0x64408f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%15:\l15:                                               \l  %16 = load float, float addrspace(3)*\l... @_ZZ16back_prop_kernelPfS_S_S_S_iiifE11weightedSum.0, align 4, !tbaa !5\l  %17 = mul nsw i32 %11, %7\l  %18 = and i32 %7, 7\l  %19 = icmp ult i32 %7, 8\l  br i1 %19, label %108, label %20\l|{<s0>T|<s1>F}}"];
	Node0x64408f0:s0 -> Node0x6440f80;
	Node0x64408f0:s1 -> Node0x6441010;
	Node0x6441010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%20:\l20:                                               \l  %21 = and i32 %7, -8\l  br label %22\l}"];
	Node0x6441010 -> Node0x6441210;
	Node0x6441210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%22:\l22:                                               \l  %23 = phi i32 [ 0, %20 ], [ %105, %22 ]\l  %24 = phi float [ %16, %20 ], [ %104, %22 ]\l  %25 = phi i32 [ 0, %20 ], [ %106, %22 ]\l  %26 = add nsw i32 %23, %17\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %3, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %30 = zext i32 %23 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %4, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %33 = fmul contract float %29, %32\l  %34 = fadd contract float %24, %33\l  %35 = or i32 %23, 1\l  %36 = add nsw i32 %35, %17\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %3, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %40 = zext i32 %35 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %4, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %43 = fmul contract float %39, %42\l  %44 = fadd contract float %34, %43\l  %45 = or i32 %23, 2\l  %46 = add nsw i32 %45, %17\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %3, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %50 = zext i32 %45 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %4, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %53 = fmul contract float %49, %52\l  %54 = fadd contract float %44, %53\l  %55 = or i32 %23, 3\l  %56 = add nsw i32 %55, %17\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %3, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %60 = zext i32 %55 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %4, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %63 = fmul contract float %59, %62\l  %64 = fadd contract float %54, %63\l  %65 = or i32 %23, 4\l  %66 = add nsw i32 %65, %17\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %3, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %70 = zext i32 %65 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %4, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %73 = fmul contract float %69, %72\l  %74 = fadd contract float %64, %73\l  %75 = or i32 %23, 5\l  %76 = add nsw i32 %75, %17\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %3, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %80 = zext i32 %75 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %4, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %83 = fmul contract float %79, %82\l  %84 = fadd contract float %74, %83\l  %85 = or i32 %23, 6\l  %86 = add nsw i32 %85, %17\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %3, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %90 = zext i32 %85 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %4, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %93 = fmul contract float %89, %92\l  %94 = fadd contract float %84, %93\l  %95 = or i32 %23, 7\l  %96 = add nsw i32 %95, %17\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %3, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %100 = zext i32 %95 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %4, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %103 = fmul contract float %99, %102\l  %104 = fadd contract float %94, %103\l  %105 = add nuw nsw i32 %23, 8\l  %106 = add i32 %25, 8\l  %107 = icmp eq i32 %106, %21\l  br i1 %107, label %108, label %22, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x6441210:s0 -> Node0x6440f80;
	Node0x6441210:s1 -> Node0x6441210;
	Node0x6440f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%108:\l108:                                              \l  %109 = phi float [ undef, %15 ], [ %104, %22 ]\l  %110 = phi i32 [ 0, %15 ], [ %105, %22 ]\l  %111 = phi float [ %16, %15 ], [ %104, %22 ]\l  %112 = icmp eq i32 %18, 0\l  br i1 %112, label %129, label %113\l|{<s0>T|<s1>F}}"];
	Node0x6440f80:s0 -> Node0x6445a90;
	Node0x6440f80:s1 -> Node0x6445ae0;
	Node0x6445ae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%113:\l113:                                              \l  %114 = phi i32 [ %126, %113 ], [ %110, %108 ]\l  %115 = phi float [ %125, %113 ], [ %111, %108 ]\l  %116 = phi i32 [ %127, %113 ], [ 0, %108 ]\l  %117 = add nsw i32 %114, %17\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %3, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %121 = zext i32 %114 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %4, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %124 = fmul contract float %120, %123\l  %125 = fadd contract float %115, %124\l  %126 = add nuw nsw i32 %114, 1\l  %127 = add i32 %116, 1\l  %128 = icmp eq i32 %127, %18\l  br i1 %128, label %129, label %113, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x6445ae0:s0 -> Node0x6445a90;
	Node0x6445ae0:s1 -> Node0x6445ae0;
	Node0x6445a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%129:\l129:                                              \l  %130 = phi float [ %109, %108 ], [ %125, %113 ]\l  store float %130, float addrspace(3)*\l... @_ZZ16back_prop_kernelPfS_S_S_S_iiifE11weightedSum.0, align 4, !tbaa !5\l  br label %131\l}"];
	Node0x6445a90 -> Node0x6440980;
	Node0x6440980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%131:\l131:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %132 = icmp slt i32 %10, %5\l  br i1 %132, label %133, label %150\l|{<s0>T|<s1>F}}"];
	Node0x6440980:s0 -> Node0x6446f60;
	Node0x6440980:s1 -> Node0x6446fb0;
	Node0x6446f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%133:\l133:                                              \l  %134 = zext i32 %10 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %1, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %137 = fmul contract float %136, %8\l  %138 = sext i32 %11 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %2, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %141 = fmul contract float %137, %140\l  %142 = fsub contract float 1.000000e+00, %140\l  %143 = fmul contract float %141, %142\l  %144 = load float, float addrspace(3)*\l... @_ZZ16back_prop_kernelPfS_S_S_S_iiifE11weightedSum.0, align 4, !tbaa !5\l  %145 = fmul contract float %144, %143\l  %146 = mul nsw i32 %10, %6\l  %147 = add nsw i32 %146, %11\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds float, float addrspace(1)* %0, i64 %148\l  store float %145, float addrspace(1)* %149, align 4, !tbaa !5\l  br label %150\l}"];
	Node0x6446f60 -> Node0x6446fb0;
	Node0x6446fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%150:\l150:                                              \l  ret void\l}"];
}
