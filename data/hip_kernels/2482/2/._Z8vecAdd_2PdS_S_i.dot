digraph "CFG for '_Z8vecAdd_2PdS_S_i' function" {
	label="CFG for '_Z8vecAdd_2PdS_S_i' function";

	Node0x62282b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = icmp sgt i32 %3, 0\l  br i1 %5, label %6, label %30\l|{<s0>T|<s1>F}}"];
	Node0x62282b0:s0 -> Node0x6228250;
	Node0x62282b0:s1 -> Node0x6228a30;
	Node0x6228250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%6:\l6:                                                \l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = mul nsw i32 %7, %3\l  %9 = and i32 %3, 7\l  %10 = icmp ult i32 %3, 8\l  br i1 %10, label %13, label %11\l|{<s0>T|<s1>F}}"];
	Node0x6228250:s0 -> Node0x6228300;
	Node0x6228250:s1 -> Node0x6229b60;
	Node0x6229b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%11:\l11:                                               \l  %12 = and i32 %3, -8\l  br label %31\l}"];
	Node0x6229b60 -> Node0x6229d60;
	Node0x6228300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%13:\l13:                                               \l  %14 = phi i32 [ 0, %6 ], [ %105, %31 ]\l  %15 = icmp eq i32 %9, 0\l  br i1 %15, label %30, label %16\l|{<s0>T|<s1>F}}"];
	Node0x6228300:s0 -> Node0x6228a30;
	Node0x6228300:s1 -> Node0x6229f90;
	Node0x6229f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  %17 = phi i32 [ %27, %16 ], [ %14, %13 ]\l  %18 = phi i32 [ %28, %16 ], [ 0, %13 ]\l  %19 = add nsw i32 %17, %8\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds double, double addrspace(1)* %0, i64 %20\l  %22 = load double, double addrspace(1)* %21, align 8, !tbaa !5\l  %23 = getelementptr inbounds double, double addrspace(1)* %1, i64 %20\l  %24 = load double, double addrspace(1)* %23, align 8, !tbaa !5\l  %25 = fadd contract double %22, %24\l  %26 = getelementptr inbounds double, double addrspace(1)* %2, i64 %20\l  store double %25, double addrspace(1)* %26, align 8, !tbaa !5\l  %27 = add nuw nsw i32 %17, 1\l  %28 = add i32 %18, 1\l  %29 = icmp eq i32 %28, %9\l  br i1 %29, label %30, label %16, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x6229f90:s0 -> Node0x6228a30;
	Node0x6229f90:s1 -> Node0x6229f90;
	Node0x6228a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%30:\l30:                                               \l  ret void\l}"];
	Node0x6229d60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%31:\l31:                                               \l  %32 = phi i32 [ 0, %11 ], [ %105, %31 ]\l  %33 = phi i32 [ 0, %11 ], [ %106, %31 ]\l  %34 = add nsw i32 %32, %8\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds double, double addrspace(1)* %0, i64 %35\l  %37 = load double, double addrspace(1)* %36, align 8, !tbaa !5\l  %38 = getelementptr inbounds double, double addrspace(1)* %1, i64 %35\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !5\l  %40 = fadd contract double %37, %39\l  %41 = getelementptr inbounds double, double addrspace(1)* %2, i64 %35\l  store double %40, double addrspace(1)* %41, align 8, !tbaa !5\l  %42 = or i32 %32, 1\l  %43 = add nsw i32 %42, %8\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds double, double addrspace(1)* %0, i64 %44\l  %46 = load double, double addrspace(1)* %45, align 8, !tbaa !5\l  %47 = getelementptr inbounds double, double addrspace(1)* %1, i64 %44\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !5\l  %49 = fadd contract double %46, %48\l  %50 = getelementptr inbounds double, double addrspace(1)* %2, i64 %44\l  store double %49, double addrspace(1)* %50, align 8, !tbaa !5\l  %51 = or i32 %32, 2\l  %52 = add nsw i32 %51, %8\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds double, double addrspace(1)* %0, i64 %53\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !5\l  %56 = getelementptr inbounds double, double addrspace(1)* %1, i64 %53\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !5\l  %58 = fadd contract double %55, %57\l  %59 = getelementptr inbounds double, double addrspace(1)* %2, i64 %53\l  store double %58, double addrspace(1)* %59, align 8, !tbaa !5\l  %60 = or i32 %32, 3\l  %61 = add nsw i32 %60, %8\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds double, double addrspace(1)* %0, i64 %62\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !5\l  %65 = getelementptr inbounds double, double addrspace(1)* %1, i64 %62\l  %66 = load double, double addrspace(1)* %65, align 8, !tbaa !5\l  %67 = fadd contract double %64, %66\l  %68 = getelementptr inbounds double, double addrspace(1)* %2, i64 %62\l  store double %67, double addrspace(1)* %68, align 8, !tbaa !5\l  %69 = or i32 %32, 4\l  %70 = add nsw i32 %69, %8\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds double, double addrspace(1)* %0, i64 %71\l  %73 = load double, double addrspace(1)* %72, align 8, !tbaa !5\l  %74 = getelementptr inbounds double, double addrspace(1)* %1, i64 %71\l  %75 = load double, double addrspace(1)* %74, align 8, !tbaa !5\l  %76 = fadd contract double %73, %75\l  %77 = getelementptr inbounds double, double addrspace(1)* %2, i64 %71\l  store double %76, double addrspace(1)* %77, align 8, !tbaa !5\l  %78 = or i32 %32, 5\l  %79 = add nsw i32 %78, %8\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds double, double addrspace(1)* %0, i64 %80\l  %82 = load double, double addrspace(1)* %81, align 8, !tbaa !5\l  %83 = getelementptr inbounds double, double addrspace(1)* %1, i64 %80\l  %84 = load double, double addrspace(1)* %83, align 8, !tbaa !5\l  %85 = fadd contract double %82, %84\l  %86 = getelementptr inbounds double, double addrspace(1)* %2, i64 %80\l  store double %85, double addrspace(1)* %86, align 8, !tbaa !5\l  %87 = or i32 %32, 6\l  %88 = add nsw i32 %87, %8\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds double, double addrspace(1)* %0, i64 %89\l  %91 = load double, double addrspace(1)* %90, align 8, !tbaa !5\l  %92 = getelementptr inbounds double, double addrspace(1)* %1, i64 %89\l  %93 = load double, double addrspace(1)* %92, align 8, !tbaa !5\l  %94 = fadd contract double %91, %93\l  %95 = getelementptr inbounds double, double addrspace(1)* %2, i64 %89\l  store double %94, double addrspace(1)* %95, align 8, !tbaa !5\l  %96 = or i32 %32, 7\l  %97 = add nsw i32 %96, %8\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds double, double addrspace(1)* %0, i64 %98\l  %100 = load double, double addrspace(1)* %99, align 8, !tbaa !5\l  %101 = getelementptr inbounds double, double addrspace(1)* %1, i64 %98\l  %102 = load double, double addrspace(1)* %101, align 8, !tbaa !5\l  %103 = fadd contract double %100, %102\l  %104 = getelementptr inbounds double, double addrspace(1)* %2, i64 %98\l  store double %103, double addrspace(1)* %104, align 8, !tbaa !5\l  %105 = add nuw nsw i32 %32, 8\l  %106 = add i32 %33, 8\l  %107 = icmp eq i32 %106, %12\l  br i1 %107, label %13, label %31, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x6229d60:s0 -> Node0x6228300;
	Node0x6229d60:s1 -> Node0x6229d60;
}
