digraph "CFG for '_Z13pnpoly_cnGPU2PKfS0_S0_S0_Pcii' function" {
	label="CFG for '_Z13pnpoly_cnGPU2PKfS0_S0_S0_Pcii' function";

	Node0x4db3850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %5\l  br i1 %17, label %18, label %129\l|{<s0>T|<s1>F}}"];
	Node0x4db3850:s0 -> Node0x4db57c0;
	Node0x4db3850:s1 -> Node0x4db5850;
	Node0x4db57c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%18:\l18:                                               \l  %19 = sext i32 %16 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %0, i64 %19\l  %21 = load float, float addrspace(1)* %20, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %19\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = icmp sgt i32 %6, 0\l  br i1 %24, label %25, label %124\l|{<s0>T|<s1>F}}"];
	Node0x4db57c0:s0 -> Node0x4db6a90;
	Node0x4db57c0:s1 -> Node0x4db6b20;
	Node0x4db6a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%25:\l25:                                               \l  %26 = add i32 %6, -1\l  %27 = and i32 %6, 1\l  %28 = icmp eq i32 %26, 0\l  br i1 %28, label %94, label %29\l|{<s0>T|<s1>F}}"];
	Node0x4db6a90:s0 -> Node0x4db6e70;
	Node0x4db6a90:s1 -> Node0x4db6ec0;
	Node0x4db6ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%29:\l29:                                               \l  %30 = and i32 %6, -2\l  br label %31\l}"];
	Node0x4db6ec0 -> Node0x4db70c0;
	Node0x4db70c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = phi i32 [ 0, %29 ], [ %88, %87 ]\l  %33 = phi i32 [ %26, %29 ], [ %62, %87 ]\l  %34 = phi i32 [ 0, %29 ], [ %89, %87 ]\l  %35 = phi i32 [ 0, %29 ], [ %90, %87 ]\l  %36 = zext i32 %34 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %3, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = fcmp contract ule float %38, %23\l  %40 = sext i32 %33 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %3, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = fcmp contract ogt float %42, %23\l  %44 = xor i1 %39, %43\l  br i1 %44, label %60, label %45\l|{<s0>T|<s1>F}}"];
	Node0x4db70c0:s0 -> Node0x4db7cd0;
	Node0x4db70c0:s1 -> Node0x4db7d60;
	Node0x4db7d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%45:\l45:                                               \l  %46 = getelementptr inbounds float, float addrspace(1)* %2, i64 %40\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %36\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %50 = fsub contract float %47, %49\l  %51 = fsub contract float %23, %38\l  %52 = fmul contract float %51, %50\l  %53 = fsub contract float %42, %38\l  %54 = fdiv contract float %52, %53\l  %55 = fadd contract float %49, %54\l  %56 = fcmp contract olt float %21, %55\l  %57 = icmp eq i32 %32, 0\l  %58 = zext i1 %57 to i32\l  %59 = select i1 %56, i32 %58, i32 %32\l  br label %60\l}"];
	Node0x4db7d60 -> Node0x4db7cd0;
	Node0x4db7cd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  %61 = phi i32 [ %32, %31 ], [ %59, %45 ]\l  %62 = or i32 %34, 1\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %3, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %66 = fcmp contract ule float %65, %23\l  %67 = zext i32 %34 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %3, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %70 = fcmp contract ogt float %69, %23\l  %71 = xor i1 %66, %70\l  br i1 %71, label %87, label %72\l|{<s0>T|<s1>F}}"];
	Node0x4db7cd0:s0 -> Node0x4db71b0;
	Node0x4db7cd0:s1 -> Node0x4db8ed0;
	Node0x4db8ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%72:\l72:                                               \l  %73 = getelementptr inbounds float, float addrspace(1)* %2, i64 %67\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %75 = getelementptr inbounds float, float addrspace(1)* %2, i64 %63\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %77 = fsub contract float %74, %76\l  %78 = fsub contract float %23, %65\l  %79 = fmul contract float %78, %77\l  %80 = fsub contract float %69, %65\l  %81 = fdiv contract float %79, %80\l  %82 = fadd contract float %76, %81\l  %83 = fcmp contract olt float %21, %82\l  %84 = icmp eq i32 %61, 0\l  %85 = zext i1 %84 to i32\l  %86 = select i1 %83, i32 %85, i32 %61\l  br label %87\l}"];
	Node0x4db8ed0 -> Node0x4db71b0;
	Node0x4db71b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  %88 = phi i32 [ %61, %60 ], [ %86, %72 ]\l  %89 = add nuw nsw i32 %34, 2\l  %90 = add i32 %35, 2\l  %91 = icmp eq i32 %90, %30\l  br i1 %91, label %92, label %31, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4db71b0:s0 -> Node0x4db9ae0;
	Node0x4db71b0:s1 -> Node0x4db70c0;
	Node0x4db9ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%92:\l92:                                               \l  %93 = zext i32 %89 to i64\l  br label %94\l}"];
	Node0x4db9ae0 -> Node0x4db6e70;
	Node0x4db6e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%94:\l94:                                               \l  %95 = phi i32 [ undef, %25 ], [ %88, %92 ]\l  %96 = phi i32 [ 0, %25 ], [ %88, %92 ]\l  %97 = phi i32 [ %26, %25 ], [ %62, %92 ]\l  %98 = phi i64 [ 0, %25 ], [ %93, %92 ]\l  %99 = icmp eq i32 %27, 0\l  br i1 %99, label %124, label %100\l|{<s0>T|<s1>F}}"];
	Node0x4db6e70:s0 -> Node0x4db6b20;
	Node0x4db6e70:s1 -> Node0x4dba3f0;
	Node0x4dba3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%100:\l100:                                              \l  %101 = getelementptr inbounds float, float addrspace(1)* %3, i64 %98\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %103 = fcmp contract ule float %102, %23\l  %104 = sext i32 %97 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %3, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %107 = fcmp contract ogt float %106, %23\l  %108 = xor i1 %103, %107\l  br i1 %108, label %124, label %109\l|{<s0>T|<s1>F}}"];
	Node0x4dba3f0:s0 -> Node0x4db6b20;
	Node0x4dba3f0:s1 -> Node0x4dba9a0;
	Node0x4dba9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%109:\l109:                                              \l  %110 = getelementptr inbounds float, float addrspace(1)* %2, i64 %104\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %112 = getelementptr inbounds float, float addrspace(1)* %2, i64 %98\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %114 = fsub contract float %111, %113\l  %115 = fsub contract float %23, %102\l  %116 = fmul contract float %115, %114\l  %117 = fsub contract float %106, %102\l  %118 = fdiv contract float %116, %117\l  %119 = fadd contract float %113, %118\l  %120 = fcmp contract olt float %21, %119\l  %121 = icmp eq i32 %96, 0\l  %122 = zext i1 %121 to i32\l  %123 = select i1 %120, i32 %122, i32 %96\l  br label %124\l}"];
	Node0x4dba9a0 -> Node0x4db6b20;
	Node0x4db6b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%124:\l124:                                              \l  %125 = phi i32 [ 0, %18 ], [ %95, %94 ], [ %96, %100 ], [ %123, %109 ]\l  %126 = trunc i32 %125 to i8\l  %127 = and i8 %126, 1\l  %128 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %19\l  store i8 %127, i8 addrspace(1)* %128, align 1, !tbaa !13\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %129\l}"];
	Node0x4db6b20 -> Node0x4db5850;
	Node0x4db5850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%129:\l129:                                              \l  ret void\l}"];
}
