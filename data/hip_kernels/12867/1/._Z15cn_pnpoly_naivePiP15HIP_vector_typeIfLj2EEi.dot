digraph "CFG for '_Z15cn_pnpoly_naivePiP15HIP_vector_typeIfLj2EEi' function" {
	label="CFG for '_Z15cn_pnpoly_naivePiP15HIP_vector_typeIfLj2EEi' function";

	Node0x5e8e150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %104\l|{<s0>T|<s1>F}}"];
	Node0x5e8e150:s0 -> Node0x5e8f9e0;
	Node0x5e8e150:s1 -> Node0x5e8fa70;
	Node0x5e8f9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %15, i32 0, i32 0, i32 0, i64 0\l  %17 = load float, float addrspace(1)* %16, align 8, !amdgpu.noclobber !5\l  %18 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %15, i32 0, i32 0, i32 0, i64 1\l  %19 = load float, float addrspace(1)* %18, align 4, !amdgpu.noclobber !5\l  %20 = load float, float addrspace(4)* getelementptr inbounds ([600 x\l... %struct.HIP_vector_type], [600 x %struct.HIP_vector_type] addrspace(4)*\l... @d_vertices, i64 0, i64 599, i32 0, i32 0, i32 0, i64 1), align 4\l  br label %23\l}"];
	Node0x5e8f9e0 -> Node0x5e90810;
	Node0x5e908d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%21:\l21:                                               \l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %15\l  store i32 %101, i32 addrspace(1)* %22, align 4, !tbaa !7\l  br label %104\l}"];
	Node0x5e908d0 -> Node0x5e8fa70;
	Node0x5e90810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi float [ %20, %14 ], [ %82, %100 ]\l  %25 = phi i32 [ 0, %14 ], [ %101, %100 ]\l  %26 = phi i32 [ 599, %14 ], [ %77, %100 ]\l  %27 = phi i32 [ 0, %14 ], [ %102, %100 ]\l  %28 = zext i32 %27 to i64\l  %29 = getelementptr inbounds [600 x %struct.HIP_vector_type], [600 x\l... %struct.HIP_vector_type] addrspace(4)* @d_vertices, i64 0, i64 %28, i32 0,\l... i32 0, i32 0, i64 0\l  %30 = load float, float addrspace(4)* %29, align 8\l  %31 = getelementptr inbounds [600 x %struct.HIP_vector_type], [600 x\l... %struct.HIP_vector_type] addrspace(4)* @d_vertices, i64 0, i64 %28, i32 0,\l... i32 0, i32 0, i64 1\l  %32 = load float, float addrspace(4)* %31, align 4\l  %33 = fcmp contract ule float %32, %19\l  %34 = fcmp contract ogt float %24, %19\l  %35 = xor i1 %33, %34\l  br i1 %35, label %50, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5e90810:s0 -> Node0x5e8fdd0;
	Node0x5e90810:s1 -> Node0x5e91870;
	Node0x5e91870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%36:\l36:                                               \l  %37 = zext i32 %26 to i64\l  %38 = getelementptr inbounds [600 x %struct.HIP_vector_type], [600 x\l... %struct.HIP_vector_type] addrspace(4)* @d_vertices, i64 0, i64 %37, i32 0,\l... i32 0, i32 0, i64 0\l  %39 = load float, float addrspace(4)* %38, align 8\l  %40 = fsub contract float %39, %30\l  %41 = fsub contract float %24, %32\l  %42 = fdiv contract float %40, %41\l  %43 = fsub contract float %19, %32\l  %44 = fmul contract float %43, %42\l  %45 = fadd contract float %30, %44\l  %46 = fcmp contract olt float %17, %45\l  %47 = icmp eq i32 %25, 0\l  %48 = zext i1 %47 to i32\l  %49 = select i1 %46, i32 %48, i32 %25\l  br label %50\l}"];
	Node0x5e91870 -> Node0x5e8fdd0;
	Node0x5e8fdd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i32 [ %25, %23 ], [ %49, %36 ]\l  %52 = add nuw nsw i32 %27, 1\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds [600 x %struct.HIP_vector_type], [600 x\l... %struct.HIP_vector_type] addrspace(4)* @d_vertices, i64 0, i64 %53, i32 0,\l... i32 0, i32 0, i64 0\l  %55 = load float, float addrspace(4)* %54, align 8\l  %56 = getelementptr inbounds [600 x %struct.HIP_vector_type], [600 x\l... %struct.HIP_vector_type] addrspace(4)* @d_vertices, i64 0, i64 %53, i32 0,\l... i32 0, i32 0, i64 1\l  %57 = load float, float addrspace(4)* %56, align 4\l  %58 = fcmp contract ule float %57, %19\l  %59 = fcmp contract ogt float %32, %19\l  %60 = xor i1 %58, %59\l  br i1 %60, label %75, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5e8fdd0:s0 -> Node0x5e928a0;
	Node0x5e8fdd0:s1 -> Node0x5e928f0;
	Node0x5e928f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%61:\l61:                                               \l  %62 = zext i32 %27 to i64\l  %63 = getelementptr inbounds [600 x %struct.HIP_vector_type], [600 x\l... %struct.HIP_vector_type] addrspace(4)* @d_vertices, i64 0, i64 %62, i32 0,\l... i32 0, i32 0, i64 0\l  %64 = load float, float addrspace(4)* %63, align 8\l  %65 = fsub contract float %64, %55\l  %66 = fsub contract float %32, %57\l  %67 = fdiv contract float %65, %66\l  %68 = fsub contract float %19, %57\l  %69 = fmul contract float %68, %67\l  %70 = fadd contract float %55, %69\l  %71 = fcmp contract olt float %17, %70\l  %72 = icmp eq i32 %51, 0\l  %73 = zext i1 %72 to i32\l  %74 = select i1 %71, i32 %73, i32 %51\l  br label %75\l}"];
	Node0x5e928f0 -> Node0x5e928a0;
	Node0x5e928a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  %76 = phi i32 [ %51, %50 ], [ %74, %61 ]\l  %77 = add nuw nsw i32 %27, 2\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds [600 x %struct.HIP_vector_type], [600 x\l... %struct.HIP_vector_type] addrspace(4)* @d_vertices, i64 0, i64 %78, i32 0,\l... i32 0, i32 0, i64 0\l  %80 = load float, float addrspace(4)* %79, align 8\l  %81 = getelementptr inbounds [600 x %struct.HIP_vector_type], [600 x\l... %struct.HIP_vector_type] addrspace(4)* @d_vertices, i64 0, i64 %78, i32 0,\l... i32 0, i32 0, i64 1\l  %82 = load float, float addrspace(4)* %81, align 4\l  %83 = fcmp contract ule float %82, %19\l  %84 = fcmp contract ogt float %57, %19\l  %85 = xor i1 %83, %84\l  br i1 %85, label %100, label %86\l|{<s0>T|<s1>F}}"];
	Node0x5e928a0:s0 -> Node0x5e90ca0;
	Node0x5e928a0:s1 -> Node0x5e93af0;
	Node0x5e93af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%86:\l86:                                               \l  %87 = zext i32 %52 to i64\l  %88 = getelementptr inbounds [600 x %struct.HIP_vector_type], [600 x\l... %struct.HIP_vector_type] addrspace(4)* @d_vertices, i64 0, i64 %87, i32 0,\l... i32 0, i32 0, i64 0\l  %89 = load float, float addrspace(4)* %88, align 8\l  %90 = fsub contract float %89, %80\l  %91 = fsub contract float %57, %82\l  %92 = fdiv contract float %90, %91\l  %93 = fsub contract float %19, %82\l  %94 = fmul contract float %93, %92\l  %95 = fadd contract float %80, %94\l  %96 = fcmp contract olt float %17, %95\l  %97 = icmp eq i32 %76, 0\l  %98 = zext i1 %97 to i32\l  %99 = select i1 %96, i32 %98, i32 %76\l  br label %100\l}"];
	Node0x5e93af0 -> Node0x5e90ca0;
	Node0x5e90ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%100:\l100:                                              \l  %101 = phi i32 [ %76, %75 ], [ %99, %86 ]\l  %102 = add nuw nsw i32 %27, 3\l  %103 = icmp eq i32 %102, 600\l  br i1 %103, label %21, label %23, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5e90ca0:s0 -> Node0x5e908d0;
	Node0x5e90ca0:s1 -> Node0x5e90810;
	Node0x5e8fa70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%104:\l104:                                              \l  ret void\l}"];
}
