digraph "CFG for '_Z13pnpoly_cnGPU1PKfS0_S0_S0_Pcii' function" {
	label="CFG for '_Z13pnpoly_cnGPU1PKfS0_S0_S0_Pcii' function";

	Node0x5ccc8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %5\l  br i1 %17, label %18, label %134\l|{<s0>T|<s1>F}}"];
	Node0x5ccc8b0:s0 -> Node0x5cce820;
	Node0x5ccc8b0:s1 -> Node0x5cce8b0;
	Node0x5cce820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%18:\l18:                                               \l  %19 = icmp sgt i32 %6, 0\l  br i1 %19, label %22, label %20\l|{<s0>T|<s1>F}}"];
	Node0x5cce820:s0 -> Node0x5ccea80;
	Node0x5cce820:s1 -> Node0x5ccead0;
	Node0x5ccead0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%20:\l20:                                               \l  %21 = sext i32 %16 to i64\l  br label %128\l}"];
	Node0x5ccead0 -> Node0x5ccec80;
	Node0x5ccea80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%22:\l22:                                               \l  %23 = add i32 %6, -1\l  %24 = sext i32 %16 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %1, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %24\l  %28 = and i32 %6, 1\l  %29 = icmp eq i32 %23, 0\l  br i1 %29, label %97, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5ccea80:s0 -> Node0x5ccf900;
	Node0x5ccea80:s1 -> Node0x5ccf990;
	Node0x5ccf990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%30:\l30:                                               \l  %31 = and i32 %6, -2\l  br label %32\l}"];
	Node0x5ccf990 -> Node0x5ccfb90;
	Node0x5ccfb90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = phi i32 [ 0, %30 ], [ %91, %90 ]\l  %34 = phi i32 [ %23, %30 ], [ %64, %90 ]\l  %35 = phi i32 [ 0, %30 ], [ %92, %90 ]\l  %36 = phi i32 [ 0, %30 ], [ %93, %90 ]\l  %37 = zext i32 %35 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %3, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = fcmp contract ule float %39, %26\l  %41 = sext i32 %34 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fcmp contract ogt float %43, %26\l  %45 = xor i1 %40, %44\l  br i1 %45, label %62, label %46\l|{<s0>T|<s1>F}}"];
	Node0x5ccfb90:s0 -> Node0x5cd0d90;
	Node0x5ccfb90:s1 -> Node0x5cd0e20;
	Node0x5cd0e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%46:\l46:                                               \l  %47 = load float, float addrspace(1)* %27, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %41\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %50 = getelementptr inbounds float, float addrspace(1)* %2, i64 %37\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %52 = fsub contract float %49, %51\l  %53 = fsub contract float %26, %39\l  %54 = fmul contract float %53, %52\l  %55 = fsub contract float %43, %39\l  %56 = fdiv contract float %54, %55\l  %57 = fadd contract float %51, %56\l  %58 = fcmp contract olt float %47, %57\l  %59 = icmp eq i32 %33, 0\l  %60 = zext i1 %59 to i32\l  %61 = select i1 %58, i32 %60, i32 %33\l  br label %62\l}"];
	Node0x5cd0e20 -> Node0x5cd0d90;
	Node0x5cd0d90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  %63 = phi i32 [ %33, %32 ], [ %61, %46 ]\l  %64 = or i32 %35, 1\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %3, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %68 = fcmp contract ule float %67, %26\l  %69 = zext i32 %35 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %3, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %72 = fcmp contract ogt float %71, %26\l  %73 = xor i1 %68, %72\l  br i1 %73, label %90, label %74\l|{<s0>T|<s1>F}}"];
	Node0x5cd0d90:s0 -> Node0x5cce740;
	Node0x5cd0d90:s1 -> Node0x5cd2040;
	Node0x5cd2040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%74:\l74:                                               \l  %75 = load float, float addrspace(1)* %27, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %76 = getelementptr inbounds float, float addrspace(1)* %2, i64 %69\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %78 = getelementptr inbounds float, float addrspace(1)* %2, i64 %65\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %80 = fsub contract float %77, %79\l  %81 = fsub contract float %26, %67\l  %82 = fmul contract float %81, %80\l  %83 = fsub contract float %71, %67\l  %84 = fdiv contract float %82, %83\l  %85 = fadd contract float %79, %84\l  %86 = fcmp contract olt float %75, %85\l  %87 = icmp eq i32 %63, 0\l  %88 = zext i1 %87 to i32\l  %89 = select i1 %86, i32 %88, i32 %63\l  br label %90\l}"];
	Node0x5cd2040 -> Node0x5cce740;
	Node0x5cce740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = phi i32 [ %63, %62 ], [ %89, %74 ]\l  %92 = add nuw nsw i32 %35, 2\l  %93 = add i32 %36, 2\l  %94 = icmp eq i32 %93, %31\l  br i1 %94, label %95, label %32, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5cce740:s0 -> Node0x5cd2d00;
	Node0x5cce740:s1 -> Node0x5ccfb90;
	Node0x5cd2d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%95:\l95:                                               \l  %96 = zext i32 %92 to i64\l  br label %97\l}"];
	Node0x5cd2d00 -> Node0x5ccf900;
	Node0x5ccf900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%97:\l97:                                               \l  %98 = phi i32 [ undef, %22 ], [ %91, %95 ]\l  %99 = phi i32 [ 0, %22 ], [ %91, %95 ]\l  %100 = phi i32 [ %23, %22 ], [ %64, %95 ]\l  %101 = phi i64 [ 0, %22 ], [ %96, %95 ]\l  %102 = icmp eq i32 %28, 0\l  br i1 %102, label %128, label %103\l|{<s0>T|<s1>F}}"];
	Node0x5ccf900:s0 -> Node0x5ccec80;
	Node0x5ccf900:s1 -> Node0x5cd3670;
	Node0x5cd3670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%103:\l103:                                              \l  %104 = getelementptr inbounds float, float addrspace(1)* %3, i64 %101\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %106 = fcmp contract ule float %105, %26\l  %107 = sext i32 %100 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %3, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %110 = fcmp contract ogt float %109, %26\l  %111 = xor i1 %106, %110\l  br i1 %111, label %128, label %112\l|{<s0>T|<s1>F}}"];
	Node0x5cd3670:s0 -> Node0x5ccec80;
	Node0x5cd3670:s1 -> Node0x5cd3bf0;
	Node0x5cd3bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%112:\l112:                                              \l  %113 = load float, float addrspace(1)* %27, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %114 = getelementptr inbounds float, float addrspace(1)* %2, i64 %107\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %116 = getelementptr inbounds float, float addrspace(1)* %2, i64 %101\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %118 = fsub contract float %115, %117\l  %119 = fsub contract float %26, %105\l  %120 = fmul contract float %119, %118\l  %121 = fsub contract float %109, %105\l  %122 = fdiv contract float %120, %121\l  %123 = fadd contract float %117, %122\l  %124 = fcmp contract olt float %113, %123\l  %125 = icmp eq i32 %99, 0\l  %126 = zext i1 %125 to i32\l  %127 = select i1 %124, i32 %126, i32 %99\l  br label %128\l}"];
	Node0x5cd3bf0 -> Node0x5ccec80;
	Node0x5ccec80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%128:\l128:                                              \l  %129 = phi i64 [ %21, %20 ], [ %24, %103 ], [ %24, %112 ], [ %24, %97 ]\l  %130 = phi i32 [ 0, %20 ], [ %98, %97 ], [ %99, %103 ], [ %127, %112 ]\l  %131 = trunc i32 %130 to i8\l  %132 = and i8 %131, 1\l  %133 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %129\l  store i8 %132, i8 addrspace(1)* %133, align 1, !tbaa !13\l  br label %134\l}"];
	Node0x5ccec80 -> Node0x5cce8b0;
	Node0x5cce8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%134:\l134:                                              \l  ret void\l}"];
}
