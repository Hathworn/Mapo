digraph "CFG for '_Z23mergeHistogram256KernelPfS_j' function" {
	label="CFG for '_Z23mergeHistogram256KernelPfS_j' function";

	Node0x5a2a370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = icmp ult i32 %4, %2\l  br i1 %5, label %6, label %8\l|{<s0>T|<s1>F}}"];
	Node0x5a2a370:s0 -> Node0x5a2b220;
	Node0x5a2a370:s1 -> Node0x5a2b2b0;
	Node0x5a2b220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%6:\l6:                                                \l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  br label %12\l}"];
	Node0x5a2b220 -> Node0x5a2b590;
	Node0x5a2b2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%8:\l8:                                                \l  %9 = phi i32 [ 0, %3 ], [ %22, %12 ]\l  %10 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ23mergeHistogram256KernelPfS_jE4data, i32 0, i32 %4\l  store i32 %9, i32 addrspace(3)* %10, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %11 = icmp ult i32 %4, 128\l  br i1 %11, label %25, label %31\l|{<s0>T|<s1>F}}"];
	Node0x5a2b2b0:s0 -> Node0x5a2c410;
	Node0x5a2b2b0:s1 -> Node0x5a2c4a0;
	Node0x5a2b590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l12:                                               \l  %13 = phi i32 [ %4, %6 ], [ %23, %12 ]\l  %14 = phi i32 [ 0, %6 ], [ %22, %12 ]\l  %15 = shl i32 %13, 8\l  %16 = add i32 %15, %7\l  %17 = zext i32 %16 to i64\l  %18 = getelementptr inbounds float, float addrspace(1)* %1, i64 %17\l  %19 = load float, float addrspace(1)* %18, align 4, !tbaa !9,\l... !amdgpu.noclobber !11\l  %20 = uitofp i32 %14 to float\l  %21 = fadd contract float %19, %20\l  %22 = fptoui float %21 to i32\l  %23 = add i32 %13, 256\l  %24 = icmp ult i32 %23, %2\l  br i1 %24, label %12, label %8, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5a2b590:s0 -> Node0x5a2b590;
	Node0x5a2b590:s1 -> Node0x5a2b2b0;
	Node0x5a2c410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%25:\l25:                                               \l  %26 = add nuw nsw i32 %4, 128\l  %27 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ23mergeHistogram256KernelPfS_jE4data, i32 0, i32 %26\l  %28 = load i32, i32 addrspace(3)* %27, align 4, !tbaa !5\l  %29 = load i32, i32 addrspace(3)* %10, align 4, !tbaa !5\l  %30 = add i32 %29, %28\l  store i32 %30, i32 addrspace(3)* %10, align 4, !tbaa !5\l  br label %31\l}"];
	Node0x5a2c410 -> Node0x5a2c4a0;
	Node0x5a2c4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%31:\l31:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %32 = icmp ult i32 %4, 64\l  br i1 %32, label %33, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5a2c4a0:s0 -> Node0x5a2c8c0;
	Node0x5a2c4a0:s1 -> Node0x5a2c910;
	Node0x5a2c8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%33:\l33:                                               \l  %34 = add nuw nsw i32 %4, 64\l  %35 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ23mergeHistogram256KernelPfS_jE4data, i32 0, i32 %34\l  %36 = load i32, i32 addrspace(3)* %35, align 4, !tbaa !5\l  %37 = load i32, i32 addrspace(3)* %10, align 4, !tbaa !5\l  %38 = add i32 %37, %36\l  store i32 %38, i32 addrspace(3)* %10, align 4, !tbaa !5\l  br label %39\l}"];
	Node0x5a2c8c0 -> Node0x5a2c910;
	Node0x5a2c910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%39:\l39:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %40 = icmp ult i32 %4, 32\l  br i1 %40, label %41, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5a2c910:s0 -> Node0x5a2e660;
	Node0x5a2c910:s1 -> Node0x5a2e6b0;
	Node0x5a2e660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%41:\l41:                                               \l  %42 = add nuw nsw i32 %4, 32\l  %43 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ23mergeHistogram256KernelPfS_jE4data, i32 0, i32 %42\l  %44 = load i32, i32 addrspace(3)* %43, align 4, !tbaa !5\l  %45 = load i32, i32 addrspace(3)* %10, align 4, !tbaa !5\l  %46 = add i32 %45, %44\l  store i32 %46, i32 addrspace(3)* %10, align 4, !tbaa !5\l  br label %47\l}"];
	Node0x5a2e660 -> Node0x5a2e6b0;
	Node0x5a2e6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%47:\l47:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %48 = icmp ult i32 %4, 16\l  br i1 %48, label %49, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5a2e6b0:s0 -> Node0x5a2eda0;
	Node0x5a2e6b0:s1 -> Node0x5a2edf0;
	Node0x5a2eda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%49:\l49:                                               \l  %50 = add nuw nsw i32 %4, 16\l  %51 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ23mergeHistogram256KernelPfS_jE4data, i32 0, i32 %50\l  %52 = load i32, i32 addrspace(3)* %51, align 4, !tbaa !5\l  %53 = load i32, i32 addrspace(3)* %10, align 4, !tbaa !5\l  %54 = add i32 %53, %52\l  store i32 %54, i32 addrspace(3)* %10, align 4, !tbaa !5\l  br label %55\l}"];
	Node0x5a2eda0 -> Node0x5a2edf0;
	Node0x5a2edf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%55:\l55:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %56 = icmp ult i32 %4, 8\l  br i1 %56, label %57, label %63\l|{<s0>T|<s1>F}}"];
	Node0x5a2edf0:s0 -> Node0x5a2f4e0;
	Node0x5a2edf0:s1 -> Node0x5a2f530;
	Node0x5a2f4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%57:\l57:                                               \l  %58 = add nuw nsw i32 %4, 8\l  %59 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ23mergeHistogram256KernelPfS_jE4data, i32 0, i32 %58\l  %60 = load i32, i32 addrspace(3)* %59, align 4, !tbaa !5\l  %61 = load i32, i32 addrspace(3)* %10, align 4, !tbaa !5\l  %62 = add i32 %61, %60\l  store i32 %62, i32 addrspace(3)* %10, align 4, !tbaa !5\l  br label %63\l}"];
	Node0x5a2f4e0 -> Node0x5a2f530;
	Node0x5a2f530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%63:\l63:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %64 = icmp ult i32 %4, 4\l  br i1 %64, label %65, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5a2f530:s0 -> Node0x5a2de30;
	Node0x5a2f530:s1 -> Node0x5a2de80;
	Node0x5a2de30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%65:\l65:                                               \l  %66 = add nuw nsw i32 %4, 4\l  %67 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ23mergeHistogram256KernelPfS_jE4data, i32 0, i32 %66\l  %68 = load i32, i32 addrspace(3)* %67, align 4, !tbaa !5\l  %69 = load i32, i32 addrspace(3)* %10, align 4, !tbaa !5\l  %70 = add i32 %69, %68\l  store i32 %70, i32 addrspace(3)* %10, align 4, !tbaa !5\l  br label %71\l}"];
	Node0x5a2de30 -> Node0x5a2de80;
	Node0x5a2de80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%71:\l71:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %72 = icmp ult i32 %4, 2\l  br i1 %72, label %73, label %79\l|{<s0>T|<s1>F}}"];
	Node0x5a2de80:s0 -> Node0x5a30530;
	Node0x5a2de80:s1 -> Node0x5a30580;
	Node0x5a30530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%73:\l73:                                               \l  %74 = add nuw nsw i32 %4, 2\l  %75 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ23mergeHistogram256KernelPfS_jE4data, i32 0, i32 %74\l  %76 = load i32, i32 addrspace(3)* %75, align 4, !tbaa !5\l  %77 = load i32, i32 addrspace(3)* %10, align 4, !tbaa !5\l  %78 = add i32 %77, %76\l  store i32 %78, i32 addrspace(3)* %10, align 4, !tbaa !5\l  br label %79\l}"];
	Node0x5a30530 -> Node0x5a30580;
	Node0x5a30580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%79:\l79:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %80 = icmp eq i32 %4, 0\l  br i1 %80, label %81, label %92\l|{<s0>T|<s1>F}}"];
	Node0x5a30580:s0 -> Node0x5a30c70;
	Node0x5a30580:s1 -> Node0x5a30cc0;
	Node0x5a30c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%81:\l81:                                               \l  %82 = add nuw nsw i32 %4, 1\l  %83 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ23mergeHistogram256KernelPfS_jE4data, i32 0, i32 %82\l  %84 = load i32, i32 addrspace(3)* %83, align 4, !tbaa !5\l  %85 = load i32, i32 addrspace(3)* %10, align 4, !tbaa !5\l  %86 = add i32 %85, %84\l  store i32 %86, i32 addrspace(3)* %10, align 4, !tbaa !5\l  %87 = load i32, i32 addrspace(3)* getelementptr inbounds ([256 x i32], [256\l... x i32] addrspace(3)* @_ZZ23mergeHistogram256KernelPfS_jE4data, i32 0, i32 0),\l... align 16, !tbaa !5\l  %88 = uitofp i32 %87 to float\l  %89 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %90 = zext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  store float %88, float addrspace(1)* %91, align 4, !tbaa !9\l  br label %92\l}"];
	Node0x5a30c70 -> Node0x5a30cc0;
	Node0x5a30cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%92:\l92:                                               \l  ret void\l}"];
}
