digraph "CFG for '_Z10gpu_efieldPdS_S_S_' function" {
	label="CFG for '_Z10gpu_efieldPdS_S_S_' function";

	Node0x474e640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = add i32 %15, 1\l  %17 = urem i32 %16, 200\l  %18 = add i32 %5, 1\l  %19 = and i32 %18, 7\l  %20 = add i32 %6, 1\l  %21 = urem i32 %20, 101\l  %22 = add i32 %15, 199\l  %23 = urem i32 %22, 200\l  %24 = add i32 %5, 7\l  %25 = and i32 %24, 7\l  %26 = add i32 %6, 100\l  %27 = urem i32 %26, 101\l  %28 = shl i32 %6, 3\l  %29 = add i32 %28, %5\l  %30 = mul i32 %29, 200\l  %31 = add i32 %23, %30\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds double, double addrspace(1)* %0, i64 %32\l  %34 = load double, double addrspace(1)* %33, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %35 = add i32 %17, %30\l  %36 = zext i32 %35 to i64\l  %37 = getelementptr inbounds double, double addrspace(1)* %0, i64 %36\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = fsub contract double %34, %38\l  %40 = fmul contract double %39, 5.000000e-01\l  %41 = load double, double addrspace(4)* @dx, align 8, !tbaa !7\l  %42 = fdiv contract double %40, %41\l  %43 = add i32 %15, %30\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds double, double addrspace(1)* %1, i64 %44\l  store double %42, double addrspace(1)* %45, align 8, !tbaa !7\l  %46 = or i32 %25, %28\l  %47 = mul i32 %46, 200\l  %48 = add i32 %15, %47\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds double, double addrspace(1)* %0, i64 %49\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !7\l  %52 = or i32 %19, %28\l  %53 = mul i32 %52, 200\l  %54 = add i32 %15, %53\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds double, double addrspace(1)* %0, i64 %55\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !7\l  %58 = fsub contract double %51, %57\l  %59 = fmul contract double %58, 5.000000e-01\l  %60 = load double, double addrspace(4)* @dy, align 8, !tbaa !7\l  %61 = fdiv contract double %59, %60\l  %62 = getelementptr inbounds double, double addrspace(1)* %2, i64 %44\l  store double %61, double addrspace(1)* %62, align 8, !tbaa !7\l  %63 = shl nuw nsw i32 %27, 3\l  %64 = add i32 %63, %5\l  %65 = mul i32 %64, 200\l  %66 = add i32 %15, %65\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds double, double addrspace(1)* %0, i64 %67\l  %69 = load double, double addrspace(1)* %68, align 8, !tbaa !7\l  %70 = shl nuw nsw i32 %21, 3\l  %71 = add i32 %70, %5\l  %72 = mul i32 %71, 200\l  %73 = add i32 %15, %72\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds double, double addrspace(1)* %0, i64 %74\l  %76 = load double, double addrspace(1)* %75, align 8, !tbaa !7\l  %77 = fsub contract double %69, %76\l  %78 = fmul contract double %77, 5.000000e-01\l  %79 = load double, double addrspace(4)* @dz, align 8, !tbaa !7\l  %80 = fdiv contract double %78, %79\l  %81 = getelementptr inbounds double, double addrspace(1)* %3, i64 %44\l  store double %80, double addrspace(1)* %81, align 8, !tbaa !7\l  ret void\l}"];
}
