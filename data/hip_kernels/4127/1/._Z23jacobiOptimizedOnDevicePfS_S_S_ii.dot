digraph "CFG for '_Z23jacobiOptimizedOnDevicePfS_S_S_ii' function" {
	label="CFG for '_Z23jacobiOptimizedOnDevicePfS_S_S_ii' function";

	Node0x5a2b320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %4\l  br i1 %16, label %17, label %180\l|{<s0>T|<s1>F}}"];
	Node0x5a2b320:s0 -> Node0x5a2b770;
	Node0x5a2b320:s1 -> Node0x5a2d340;
	Node0x5a2b770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%17:\l17:                                               \l  %18 = mul nsw i32 %15, %5\l  %19 = icmp sgt i32 %5, 0\l  br i1 %19, label %20, label %50\l|{<s0>T|<s1>F}}"];
	Node0x5a2b770:s0 -> Node0x5a2d5a0;
	Node0x5a2b770:s1 -> Node0x5a2d5f0;
	Node0x5a2d5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%20:\l20:                                               \l  %21 = and i32 %5, 7\l  %22 = icmp ult i32 %5, 8\l  br i1 %22, label %25, label %23\l|{<s0>T|<s1>F}}"];
	Node0x5a2d5a0:s0 -> Node0x5a2d8b0;
	Node0x5a2d5a0:s1 -> Node0x5a2d900;
	Node0x5a2d900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%23:\l23:                                               \l  %24 = and i32 %5, -8\l  br label %62\l}"];
	Node0x5a2d900 -> Node0x5a2db00;
	Node0x5a2d8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%25:\l25:                                               \l  %26 = phi float [ undef, %20 ], [ %176, %175 ]\l  %27 = phi i32 [ 0, %20 ], [ %177, %175 ]\l  %28 = phi float [ 0.000000e+00, %20 ], [ %176, %175 ]\l  %29 = icmp eq i32 %21, 0\l  br i1 %29, label %50, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5a2d8b0:s0 -> Node0x5a2d5f0;
	Node0x5a2d8b0:s1 -> Node0x5a2ee00;
	Node0x5a2ee00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ %47, %45 ], [ %27, %25 ]\l  %32 = phi float [ %46, %45 ], [ %28, %25 ]\l  %33 = phi i32 [ %48, %45 ], [ 0, %25 ]\l  %34 = icmp eq i32 %15, %31\l  br i1 %34, label %45, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5a2ee00:s0 -> Node0x5a2ef70;
	Node0x5a2ee00:s1 -> Node0x5a2d2f0;
	Node0x5a2d2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%35:\l35:                                               \l  %36 = add nsw i32 %31, %18\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = zext i32 %31 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %2, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = fmul contract float %39, %42\l  %44 = fadd contract float %32, %43\l  br label %45\l}"];
	Node0x5a2d2f0 -> Node0x5a2ef70;
	Node0x5a2ef70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = phi float [ %44, %35 ], [ %32, %30 ]\l  %47 = add nuw nsw i32 %31, 1\l  %48 = add i32 %33, 1\l  %49 = icmp eq i32 %48, %21\l  br i1 %49, label %50, label %30, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5a2ef70:s0 -> Node0x5a2d5f0;
	Node0x5a2ef70:s1 -> Node0x5a2ee00;
	Node0x5a2d5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%50:\l50:                                               \l  %51 = phi float [ 0.000000e+00, %17 ], [ %26, %25 ], [ %46, %45 ]\l  %52 = sext i32 %15 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %3, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %55 = fsub contract float %54, %51\l  %56 = add nsw i32 %18, %15\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %60 = fdiv contract float %55, %59\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  store float %60, float addrspace(1)* %61, align 4, !tbaa !7\l  br label %180\l}"];
	Node0x5a2d5f0 -> Node0x5a2d340;
	Node0x5a2db00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%62:\l62:                                               \l  %63 = phi i32 [ 0, %23 ], [ %177, %175 ]\l  %64 = phi float [ 0.000000e+00, %23 ], [ %176, %175 ]\l  %65 = phi i32 [ 0, %23 ], [ %178, %175 ]\l  %66 = icmp eq i32 %15, %63\l  br i1 %66, label %77, label %67\l|{<s0>T|<s1>F}}"];
	Node0x5a2db00:s0 -> Node0x5a2f310;
	Node0x5a2db00:s1 -> Node0x5a31910;
	Node0x5a31910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%67:\l67:                                               \l  %68 = add nsw i32 %63, %18\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %1, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %72 = zext i32 %63 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %2, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %75 = fmul contract float %71, %74\l  %76 = fadd contract float %64, %75\l  br label %77\l}"];
	Node0x5a31910 -> Node0x5a2f310;
	Node0x5a2f310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%77:\l77:                                               \l  %78 = phi float [ %76, %67 ], [ %64, %62 ]\l  %79 = or i32 %63, 1\l  %80 = icmp eq i32 %15, %79\l  br i1 %80, label %91, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5a2f310:s0 -> Node0x5a32140;
	Node0x5a2f310:s1 -> Node0x5a32190;
	Node0x5a32190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%81:\l81:                                               \l  %82 = add nsw i32 %79, %18\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %1, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %86 = zext i32 %79 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %2, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %89 = fmul contract float %85, %88\l  %90 = fadd contract float %78, %89\l  br label %91\l}"];
	Node0x5a32190 -> Node0x5a32140;
	Node0x5a32140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%91:\l91:                                               \l  %92 = phi float [ %90, %81 ], [ %78, %77 ]\l  %93 = or i32 %63, 2\l  %94 = icmp eq i32 %15, %93\l  br i1 %94, label %105, label %95\l|{<s0>T|<s1>F}}"];
	Node0x5a32140:s0 -> Node0x5a32a00;
	Node0x5a32140:s1 -> Node0x5a32a50;
	Node0x5a32a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%95:\l95:                                               \l  %96 = add nsw i32 %93, %18\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %1, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %100 = zext i32 %93 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %2, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %103 = fmul contract float %99, %102\l  %104 = fadd contract float %92, %103\l  br label %105\l}"];
	Node0x5a32a50 -> Node0x5a32a00;
	Node0x5a32a00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%105:\l105:                                              \l  %106 = phi float [ %104, %95 ], [ %92, %91 ]\l  %107 = or i32 %63, 3\l  %108 = icmp eq i32 %15, %107\l  br i1 %108, label %119, label %109\l|{<s0>T|<s1>F}}"];
	Node0x5a32a00:s0 -> Node0x5a332c0;
	Node0x5a32a00:s1 -> Node0x5a33310;
	Node0x5a33310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%109:\l109:                                              \l  %110 = add nsw i32 %107, %18\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %1, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %114 = zext i32 %107 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %2, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %117 = fmul contract float %113, %116\l  %118 = fadd contract float %106, %117\l  br label %119\l}"];
	Node0x5a33310 -> Node0x5a332c0;
	Node0x5a332c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%119:\l119:                                              \l  %120 = phi float [ %118, %109 ], [ %106, %105 ]\l  %121 = or i32 %63, 4\l  %122 = icmp eq i32 %15, %121\l  br i1 %122, label %133, label %123\l|{<s0>T|<s1>F}}"];
	Node0x5a332c0:s0 -> Node0x5a33bb0;
	Node0x5a332c0:s1 -> Node0x5a33c00;
	Node0x5a33c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%123:\l123:                                              \l  %124 = add nsw i32 %121, %18\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %1, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %128 = zext i32 %121 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %2, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %131 = fmul contract float %127, %130\l  %132 = fadd contract float %120, %131\l  br label %133\l}"];
	Node0x5a33c00 -> Node0x5a33bb0;
	Node0x5a33bb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%133:\l133:                                              \l  %134 = phi float [ %132, %123 ], [ %120, %119 ]\l  %135 = or i32 %63, 5\l  %136 = icmp eq i32 %15, %135\l  br i1 %136, label %147, label %137\l|{<s0>T|<s1>F}}"];
	Node0x5a33bb0:s0 -> Node0x5a31890;
	Node0x5a33bb0:s1 -> Node0x5a34920;
	Node0x5a34920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%137:\l137:                                              \l  %138 = add nsw i32 %135, %18\l  %139 = sext i32 %138 to i64\l  %140 = getelementptr inbounds float, float addrspace(1)* %1, i64 %139\l  %141 = load float, float addrspace(1)* %140, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %142 = zext i32 %135 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %2, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %145 = fmul contract float %141, %144\l  %146 = fadd contract float %134, %145\l  br label %147\l}"];
	Node0x5a34920 -> Node0x5a31890;
	Node0x5a31890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%147:\l147:                                              \l  %148 = phi float [ %146, %137 ], [ %134, %133 ]\l  %149 = or i32 %63, 6\l  %150 = icmp eq i32 %15, %149\l  br i1 %150, label %161, label %151\l|{<s0>T|<s1>F}}"];
	Node0x5a31890:s0 -> Node0x5a35190;
	Node0x5a31890:s1 -> Node0x5a351e0;
	Node0x5a351e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%151:\l151:                                              \l  %152 = add nsw i32 %149, %18\l  %153 = sext i32 %152 to i64\l  %154 = getelementptr inbounds float, float addrspace(1)* %1, i64 %153\l  %155 = load float, float addrspace(1)* %154, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %156 = zext i32 %149 to i64\l  %157 = getelementptr inbounds float, float addrspace(1)* %2, i64 %156\l  %158 = load float, float addrspace(1)* %157, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %159 = fmul contract float %155, %158\l  %160 = fadd contract float %148, %159\l  br label %161\l}"];
	Node0x5a351e0 -> Node0x5a35190;
	Node0x5a35190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%161:\l161:                                              \l  %162 = phi float [ %160, %151 ], [ %148, %147 ]\l  %163 = or i32 %63, 7\l  %164 = icmp eq i32 %15, %163\l  br i1 %164, label %175, label %165\l|{<s0>T|<s1>F}}"];
	Node0x5a35190:s0 -> Node0x5a2e010;
	Node0x5a35190:s1 -> Node0x5a35a80;
	Node0x5a35a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%165:\l165:                                              \l  %166 = add nsw i32 %163, %18\l  %167 = sext i32 %166 to i64\l  %168 = getelementptr inbounds float, float addrspace(1)* %1, i64 %167\l  %169 = load float, float addrspace(1)* %168, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %170 = zext i32 %163 to i64\l  %171 = getelementptr inbounds float, float addrspace(1)* %2, i64 %170\l  %172 = load float, float addrspace(1)* %171, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %173 = fmul contract float %169, %172\l  %174 = fadd contract float %162, %173\l  br label %175\l}"];
	Node0x5a35a80 -> Node0x5a2e010;
	Node0x5a2e010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%175:\l175:                                              \l  %176 = phi float [ %174, %165 ], [ %162, %161 ]\l  %177 = add nuw nsw i32 %63, 8\l  %178 = add i32 %65, 8\l  %179 = icmp eq i32 %178, %24\l  br i1 %179, label %25, label %62, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5a2e010:s0 -> Node0x5a2d8b0;
	Node0x5a2e010:s1 -> Node0x5a2db00;
	Node0x5a2d340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%180:\l180:                                              \l  ret void\l}"];
}
