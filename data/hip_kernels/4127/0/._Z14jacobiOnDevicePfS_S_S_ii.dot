digraph "CFG for '_Z14jacobiOnDevicePfS_S_S_ii' function" {
	label="CFG for '_Z14jacobiOnDevicePfS_S_S_ii' function";

	Node0x5d7ef70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = icmp sgt i32 %5, 0\l  %9 = mul nsw i32 %7, %5\l  br i1 %8, label %10, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5d7ef70:s0 -> Node0x5d7e1a0;
	Node0x5d7ef70:s1 -> Node0x5d804d0;
	Node0x5d7e1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%10:\l10:                                               \l  %11 = and i32 %5, 7\l  %12 = icmp ult i32 %5, 8\l  br i1 %12, label %15, label %13\l|{<s0>T|<s1>F}}"];
	Node0x5d7e1a0:s0 -> Node0x5d80790;
	Node0x5d7e1a0:s1 -> Node0x5d807e0;
	Node0x5d807e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%13:\l13:                                               \l  %14 = and i32 %5, -8\l  br label %52\l}"];
	Node0x5d807e0 -> Node0x5d809e0;
	Node0x5d80790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%15:\l15:                                               \l  %16 = phi float [ undef, %10 ], [ %166, %165 ]\l  %17 = phi i32 [ 0, %10 ], [ %167, %165 ]\l  %18 = phi float [ 0.000000e+00, %10 ], [ %166, %165 ]\l  %19 = icmp eq i32 %11, 0\l  br i1 %19, label %40, label %20\l|{<s0>T|<s1>F}}"];
	Node0x5d80790:s0 -> Node0x5d804d0;
	Node0x5d80790:s1 -> Node0x5d81d80;
	Node0x5d81d80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = phi i32 [ %37, %35 ], [ %17, %15 ]\l  %22 = phi float [ %36, %35 ], [ %18, %15 ]\l  %23 = phi i32 [ %38, %35 ], [ 0, %15 ]\l  %24 = icmp eq i32 %7, %21\l  br i1 %24, label %35, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5d81d80:s0 -> Node0x5d81ef0;
	Node0x5d81d80:s1 -> Node0x5d82300;
	Node0x5d82300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%25:\l25:                                               \l  %26 = add nsw i32 %21, %9\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %30 = zext i32 %21 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %33 = fmul contract float %29, %32\l  %34 = fadd contract float %22, %33\l  br label %35\l}"];
	Node0x5d82300 -> Node0x5d81ef0;
	Node0x5d81ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi float [ %34, %25 ], [ %22, %20 ]\l  %37 = add nuw nsw i32 %21, 1\l  %38 = add i32 %23, 1\l  %39 = icmp eq i32 %38, %11\l  br i1 %39, label %40, label %20, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5d81ef0:s0 -> Node0x5d804d0;
	Node0x5d81ef0:s1 -> Node0x5d81d80;
	Node0x5d804d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%40:\l40:                                               \l  %41 = phi float [ 0.000000e+00, %6 ], [ %16, %15 ], [ %36, %35 ]\l  %42 = zext i32 %7 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %3, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %45 = fsub contract float %44, %41\l  %46 = add nsw i32 %9, %7\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %50 = fdiv contract float %45, %49\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  store float %50, float addrspace(1)* %51, align 4, !tbaa !5\l  ret void\l}"];
	Node0x5d809e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%52:\l52:                                               \l  %53 = phi i32 [ 0, %13 ], [ %167, %165 ]\l  %54 = phi float [ 0.000000e+00, %13 ], [ %166, %165 ]\l  %55 = phi i32 [ 0, %13 ], [ %168, %165 ]\l  %56 = icmp eq i32 %7, %53\l  br i1 %56, label %67, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5d809e0:s0 -> Node0x5d846f0;
	Node0x5d809e0:s1 -> Node0x5d84780;
	Node0x5d84780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%57:\l57:                                               \l  %58 = add nsw i32 %53, %9\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %62 = zext i32 %53 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %2, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %65 = fmul contract float %61, %64\l  %66 = fadd contract float %54, %65\l  br label %67\l}"];
	Node0x5d84780 -> Node0x5d846f0;
	Node0x5d846f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%67:\l67:                                               \l  %68 = phi float [ %66, %57 ], [ %54, %52 ]\l  %69 = or i32 %53, 1\l  %70 = icmp eq i32 %7, %69\l  br i1 %70, label %81, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5d846f0:s0 -> Node0x5d85220;
	Node0x5d846f0:s1 -> Node0x5d85270;
	Node0x5d85270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%71:\l71:                                               \l  %72 = add nsw i32 %69, %9\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %76 = zext i32 %69 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %2, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %79 = fmul contract float %75, %78\l  %80 = fadd contract float %68, %79\l  br label %81\l}"];
	Node0x5d85270 -> Node0x5d85220;
	Node0x5d85220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%81:\l81:                                               \l  %82 = phi float [ %80, %71 ], [ %68, %67 ]\l  %83 = or i32 %53, 2\l  %84 = icmp eq i32 %7, %83\l  br i1 %84, label %95, label %85\l|{<s0>T|<s1>F}}"];
	Node0x5d85220:s0 -> Node0x5d85ae0;
	Node0x5d85220:s1 -> Node0x5d85b30;
	Node0x5d85b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%85:\l85:                                               \l  %86 = add nsw i32 %83, %9\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %90 = zext i32 %83 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %2, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %93 = fmul contract float %89, %92\l  %94 = fadd contract float %82, %93\l  br label %95\l}"];
	Node0x5d85b30 -> Node0x5d85ae0;
	Node0x5d85ae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%95:\l95:                                               \l  %96 = phi float [ %94, %85 ], [ %82, %81 ]\l  %97 = or i32 %53, 3\l  %98 = icmp eq i32 %7, %97\l  br i1 %98, label %109, label %99\l|{<s0>T|<s1>F}}"];
	Node0x5d85ae0:s0 -> Node0x5d863a0;
	Node0x5d85ae0:s1 -> Node0x5d863f0;
	Node0x5d863f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%99:\l99:                                               \l  %100 = add nsw i32 %97, %9\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %1, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %104 = zext i32 %97 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %2, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %107 = fmul contract float %103, %106\l  %108 = fadd contract float %96, %107\l  br label %109\l}"];
	Node0x5d863f0 -> Node0x5d863a0;
	Node0x5d863a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%109:\l109:                                              \l  %110 = phi float [ %108, %99 ], [ %96, %95 ]\l  %111 = or i32 %53, 4\l  %112 = icmp eq i32 %7, %111\l  br i1 %112, label %123, label %113\l|{<s0>T|<s1>F}}"];
	Node0x5d863a0:s0 -> Node0x5d86c60;
	Node0x5d863a0:s1 -> Node0x5d86cb0;
	Node0x5d86cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%113:\l113:                                              \l  %114 = add nsw i32 %111, %9\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %1, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %118 = zext i32 %111 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %2, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %121 = fmul contract float %117, %120\l  %122 = fadd contract float %110, %121\l  br label %123\l}"];
	Node0x5d86cb0 -> Node0x5d86c60;
	Node0x5d86c60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%123:\l123:                                              \l  %124 = phi float [ %122, %113 ], [ %110, %109 ]\l  %125 = or i32 %53, 5\l  %126 = icmp eq i32 %7, %125\l  br i1 %126, label %137, label %127\l|{<s0>T|<s1>F}}"];
	Node0x5d86c60:s0 -> Node0x5d87550;
	Node0x5d86c60:s1 -> Node0x5d875a0;
	Node0x5d875a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%127:\l127:                                              \l  %128 = add nsw i32 %125, %9\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %1, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %132 = zext i32 %125 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %2, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %135 = fmul contract float %131, %134\l  %136 = fadd contract float %124, %135\l  br label %137\l}"];
	Node0x5d875a0 -> Node0x5d87550;
	Node0x5d87550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%137:\l137:                                              \l  %138 = phi float [ %136, %127 ], [ %124, %123 ]\l  %139 = or i32 %53, 6\l  %140 = icmp eq i32 %7, %139\l  br i1 %140, label %151, label %141\l|{<s0>T|<s1>F}}"];
	Node0x5d87550:s0 -> Node0x5d88250;
	Node0x5d87550:s1 -> Node0x5d882a0;
	Node0x5d882a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%141:\l141:                                              \l  %142 = add nsw i32 %139, %9\l  %143 = sext i32 %142 to i64\l  %144 = getelementptr inbounds float, float addrspace(1)* %1, i64 %143\l  %145 = load float, float addrspace(1)* %144, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %146 = zext i32 %139 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %2, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %149 = fmul contract float %145, %148\l  %150 = fadd contract float %138, %149\l  br label %151\l}"];
	Node0x5d882a0 -> Node0x5d88250;
	Node0x5d88250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%151:\l151:                                              \l  %152 = phi float [ %150, %141 ], [ %138, %137 ]\l  %153 = or i32 %53, 7\l  %154 = icmp eq i32 %7, %153\l  br i1 %154, label %165, label %155\l|{<s0>T|<s1>F}}"];
	Node0x5d88250:s0 -> Node0x5d80ef0;
	Node0x5d88250:s1 -> Node0x5d88b40;
	Node0x5d88b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%155:\l155:                                              \l  %156 = add nsw i32 %153, %9\l  %157 = sext i32 %156 to i64\l  %158 = getelementptr inbounds float, float addrspace(1)* %1, i64 %157\l  %159 = load float, float addrspace(1)* %158, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %160 = zext i32 %153 to i64\l  %161 = getelementptr inbounds float, float addrspace(1)* %2, i64 %160\l  %162 = load float, float addrspace(1)* %161, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %163 = fmul contract float %159, %162\l  %164 = fadd contract float %152, %163\l  br label %165\l}"];
	Node0x5d88b40 -> Node0x5d80ef0;
	Node0x5d80ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%165:\l165:                                              \l  %166 = phi float [ %164, %155 ], [ %152, %151 ]\l  %167 = add nuw nsw i32 %53, 8\l  %168 = add i32 %55, 8\l  %169 = icmp eq i32 %168, %14\l  br i1 %169, label %15, label %52, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5d80ef0:s0 -> Node0x5d80790;
	Node0x5d80ef0:s1 -> Node0x5d809e0;
}
