digraph "CFG for '_Z19calculateAsteroidsKP8asteroidiP9blackHoleif' function" {
	label="CFG for '_Z19calculateAsteroidsKP8asteroidiP9blackHoleif' function";

	Node0x516e1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = udiv i32 %14, %11\l  %19 = mul i32 %18, %11\l  %20 = icmp ugt i32 %14, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %11\l  %24 = icmp slt i32 %17, %1\l  br i1 %24, label %25, label %34\l|{<s0>T|<s1>F}}"];
	Node0x516e1f0:s0 -> Node0x51714b0;
	Node0x516e1f0:s1 -> Node0x5171540;
	Node0x51714b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%25:\l25:                                               \l  %26 = icmp sgt i32 %3, 0\l  br label %27\l}"];
	Node0x51714b0 -> Node0x5171710;
	Node0x5171710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%27:\l27:                                               \l  %28 = phi i32 [ %17, %25 ], [ %137, %86 ]\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds %struct.asteroid, %struct.asteroid\l... addrspace(1)* %0, i64 %29, i32 0\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !16\l  %32 = getelementptr inbounds %struct.asteroid, %struct.asteroid\l... addrspace(1)* %0, i64 %29, i32 1\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !21\l  br i1 %26, label %35, label %86\l|{<s0>T|<s1>F}}"];
	Node0x5171710:s0 -> Node0x5172020;
	Node0x5171710:s1 -> Node0x5171800;
	Node0x5171540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%34:\l34:                                               \l  ret void\l}"];
	Node0x5172020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi float [ %82, %80 ], [ 0.000000e+00, %27 ]\l  %37 = phi float [ %81, %80 ], [ 0.000000e+00, %27 ]\l  %38 = phi i32 [ %83, %80 ], [ 0, %27 ]\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds %struct.blackHole, %struct.blackHole\l... addrspace(1)* %2, i64 %39, i32 0\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !22,\l... !amdgpu.noclobber !5\l  %42 = fsub contract float %31, %41\l  %43 = getelementptr inbounds %struct.blackHole, %struct.blackHole\l... addrspace(1)* %2, i64 %39, i32 1\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !24,\l... !amdgpu.noclobber !5\l  %45 = fsub contract float %33, %44\l  %46 = fcmp contract une float %42, 0.000000e+00\l  %47 = fcmp contract une float %45, 0.000000e+00\l  %48 = select i1 %46, i1 %47, i1 false\l  br i1 %48, label %49, label %80\l|{<s0>T|<s1>F}}"];
	Node0x5172020:s0 -> Node0x5173e50;
	Node0x5172020:s1 -> Node0x51721b0;
	Node0x5173e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%49:\l49:                                               \l  %50 = fmul contract float %42, %42\l  %51 = fmul contract float %45, %45\l  %52 = fadd contract float %50, %51\l  %53 = fmul contract float %52, %52\l  %54 = fcmp olt float %53, 0x39F0000000000000\l  %55 = select i1 %54, float 0x41F0000000000000, float 1.000000e+00\l  %56 = fmul float %53, %55\l  %57 = tail call float @llvm.sqrt.f32(float %56)\l  %58 = bitcast float %57 to i32\l  %59 = add nsw i32 %58, -1\l  %60 = bitcast i32 %59 to float\l  %61 = add nsw i32 %58, 1\l  %62 = bitcast i32 %61 to float\l  %63 = tail call i1 @llvm.amdgcn.class.f32(float %56, i32 608)\l  %64 = select i1 %54, float 0x3EF0000000000000, float 1.000000e+00\l  %65 = fneg float %62\l  %66 = tail call float @llvm.fma.f32(float %65, float %57, float %56)\l  %67 = fcmp ogt float %66, 0.000000e+00\l  %68 = fneg float %60\l  %69 = tail call float @llvm.fma.f32(float %68, float %57, float %56)\l  %70 = fcmp ole float %69, 0.000000e+00\l  %71 = select i1 %70, float %60, float %57\l  %72 = select i1 %67, float %62, float %71\l  %73 = fmul float %64, %72\l  %74 = select i1 %63, float %56, float %73\l  %75 = fdiv contract float 1.000000e+00, %74\l  %76 = fmul contract float %42, %75\l  %77 = fadd contract float %36, %76\l  %78 = fmul contract float %45, %75\l  %79 = fadd contract float %37, %78\l  br label %80\l}"];
	Node0x5173e50 -> Node0x51721b0;
	Node0x51721b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = phi float [ %79, %49 ], [ %37, %35 ]\l  %82 = phi float [ %77, %49 ], [ %36, %35 ]\l  %83 = add nuw nsw i32 %38, 1\l  %84 = icmp slt i32 %83, %3\l  %85 = select i1 %48, i1 %84, i1 false\l  br i1 %85, label %35, label %86, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x51721b0:s0 -> Node0x5172020;
	Node0x51721b0:s1 -> Node0x5171800;
	Node0x5171800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%86:\l86:                                               \l  %87 = phi float [ 0.000000e+00, %27 ], [ %81, %80 ]\l  %88 = phi float [ 0.000000e+00, %27 ], [ %82, %80 ]\l  %89 = fmul contract float %88, %88\l  %90 = fmul contract float %87, %87\l  %91 = fadd contract float %90, %89\l  %92 = fcmp olt float %91, 0x39F0000000000000\l  %93 = select i1 %92, float 0x41F0000000000000, float 1.000000e+00\l  %94 = fmul float %91, %93\l  %95 = tail call float @llvm.sqrt.f32(float %94)\l  %96 = bitcast float %95 to i32\l  %97 = add nsw i32 %96, -1\l  %98 = bitcast i32 %97 to float\l  %99 = add nsw i32 %96, 1\l  %100 = bitcast i32 %99 to float\l  %101 = tail call i1 @llvm.amdgcn.class.f32(float %94, i32 608)\l  %102 = select i1 %92, float 0x3EF0000000000000, float 1.000000e+00\l  %103 = fneg float %100\l  %104 = tail call float @llvm.fma.f32(float %103, float %95, float %94)\l  %105 = fcmp ogt float %104, 0.000000e+00\l  %106 = fneg float %98\l  %107 = tail call float @llvm.fma.f32(float %106, float %95, float %94)\l  %108 = fcmp ole float %107, 0.000000e+00\l  %109 = select i1 %108, float %98, float %95\l  %110 = select i1 %105, float %100, float %109\l  %111 = fmul float %102, %110\l  %112 = select i1 %101, float %94, float %111\l  %113 = fneg contract float %88\l  %114 = fdiv contract float %113, %112\l  %115 = fmul contract float %114, %4\l  %116 = getelementptr inbounds %struct.asteroid, %struct.asteroid\l... addrspace(1)* %0, i64 %29, i32 2\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !27\l  %118 = fadd contract float %117, %115\l  store float %118, float addrspace(1)* %116, align 4, !tbaa !27\l  %119 = fneg contract float %87\l  %120 = fdiv contract float %119, %112\l  %121 = fmul contract float %120, %4\l  %122 = getelementptr inbounds %struct.asteroid, %struct.asteroid\l... addrspace(1)* %0, i64 %29, i32 3\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !28\l  %124 = fadd contract float %123, %121\l  store float %124, float addrspace(1)* %122, align 4, !tbaa !28\l  %125 = fpext float %118 to double\l  %126 = fmul contract double %125, 1.000000e-02\l  %127 = getelementptr inbounds %struct.asteroid, %struct.asteroid\l... addrspace(1)* %0, i64 %29, i32 0\l  %128 = fpext float %31 to double\l  %129 = fadd contract double %126, %128\l  %130 = fptrunc double %129 to float\l  store float %130, float addrspace(1)* %127, align 4, !tbaa !16\l  %131 = fpext float %124 to double\l  %132 = fmul contract double %131, 1.000000e-02\l  %133 = getelementptr inbounds %struct.asteroid, %struct.asteroid\l... addrspace(1)* %0, i64 %29, i32 1\l  %134 = fpext float %33 to double\l  %135 = fadd contract double %132, %134\l  %136 = fptrunc double %135 to float\l  store float %136, float addrspace(1)* %133, align 4, !tbaa !21\l  %137 = add nsw i32 %28, %23\l  %138 = icmp slt i32 %137, %1\l  br i1 %138, label %27, label %34, !llvm.loop !29\l|{<s0>T|<s1>F}}"];
	Node0x5171800:s0 -> Node0x5171710;
	Node0x5171800:s1 -> Node0x5171540;
}
