digraph "CFG for '_Z19calculateSpaceTimeKP10spacePointiiffffP9blackHolei' function" {
	label="CFG for '_Z19calculateSpaceTimeKP10spacePointiiffffP9blackHolei' function";

	Node0x4af5970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = add i32 %17, %10\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !5, !invariant.load !6\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = add i32 %25, %19\l  %27 = icmp slt i32 %18, %1\l  %28 = icmp slt i32 %26, %2\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %247\l|{<s0>T|<s1>F}}"];
	Node0x4af5970:s0 -> Node0x4af9f10;
	Node0x4af5970:s1 -> Node0x4af9fa0;
	Node0x4af9f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%30:\l30:                                               \l  %31 = sitofp i32 %18 to float\l  %32 = sitofp i32 %1 to float\l  %33 = fdiv contract float %31, %32\l  %34 = fsub contract float %4, %3\l  %35 = fmul contract float %34, %33\l  %36 = fadd contract float %35, %3\l  %37 = sitofp i32 %26 to float\l  %38 = sitofp i32 %2 to float\l  %39 = fdiv contract float %37, %38\l  %40 = fsub contract float %5, %6\l  %41 = fmul contract float %40, %39\l  %42 = fadd contract float %41, %6\l  %43 = mul nsw i32 %18, %1\l  %44 = add nsw i32 %43, %26\l  %45 = icmp sgt i32 %8, 0\l  br i1 %45, label %52, label %46\l|{<s0>T|<s1>F}}"];
	Node0x4af9f10:s0 -> Node0x4afaa10;
	Node0x4af9f10:s1 -> Node0x4afaa60;
	Node0x4afaa60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%46:\l46:                                               \l  %47 = phi float [ 0.000000e+00, %30 ], [ %244, %52 ]\l  %48 = sext i32 %44 to i64\l  %49 = getelementptr inbounds %struct.spacePoint, %struct.spacePoint\l... addrspace(1)* %0, i64 %48, i32 0\l  store float %36, float addrspace(1)* %49, align 4, !tbaa !7\l  %50 = getelementptr inbounds %struct.spacePoint, %struct.spacePoint\l... addrspace(1)* %0, i64 %48, i32 1\l  store float %42, float addrspace(1)* %50, align 4, !tbaa !12\l  %51 = getelementptr inbounds %struct.spacePoint, %struct.spacePoint\l... addrspace(1)* %0, i64 %48, i32 2\l  store float %47, float addrspace(1)* %51, align 4, !tbaa !13\l  br label %247\l}"];
	Node0x4afaa60 -> Node0x4af9fa0;
	Node0x4afaa10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi float [ %244, %52 ], [ 0.000000e+00, %30 ]\l  %54 = phi i32 [ %245, %52 ], [ 0, %30 ]\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds %struct.blackHole, %struct.blackHole\l... addrspace(1)* %7, i64 %55, i32 0\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !14,\l... !amdgpu.noclobber !6\l  %58 = fsub contract float %36, %57\l  %59 = getelementptr inbounds %struct.blackHole, %struct.blackHole\l... addrspace(1)* %7, i64 %55, i32 1\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %61 = fsub contract float %42, %60\l  %62 = fmul contract float %58, %58\l  %63 = fmul contract float %61, %61\l  %64 = fadd contract float %62, %63\l  %65 = fcmp olt float %64, 0x39F0000000000000\l  %66 = select i1 %65, float 0x41F0000000000000, float 1.000000e+00\l  %67 = fmul float %64, %66\l  %68 = tail call float @llvm.sqrt.f32(float %67)\l  %69 = bitcast float %68 to i32\l  %70 = add nsw i32 %69, -1\l  %71 = bitcast i32 %70 to float\l  %72 = add nsw i32 %69, 1\l  %73 = bitcast i32 %72 to float\l  %74 = tail call i1 @llvm.amdgcn.class.f32(float %67, i32 608)\l  %75 = select i1 %65, float 0x3EF0000000000000, float 1.000000e+00\l  %76 = fneg float %73\l  %77 = tail call float @llvm.fma.f32(float %76, float %68, float %67)\l  %78 = fcmp ogt float %77, 0.000000e+00\l  %79 = fneg float %71\l  %80 = tail call float @llvm.fma.f32(float %79, float %68, float %67)\l  %81 = fcmp ole float %80, 0.000000e+00\l  %82 = select i1 %81, float %71, float %68\l  %83 = select i1 %78, float %73, float %82\l  %84 = fmul float %75, %83\l  %85 = select i1 %74, float %67, float %84\l  %86 = fcmp contract oeq float %85, 0.000000e+00\l  %87 = select i1 %86, float 0x3E112E0BE0000000, float %85\l  %88 = tail call float @llvm.fabs.f32(float %87)\l  %89 = tail call float @llvm.amdgcn.frexp.mant.f32(float %88)\l  %90 = fcmp olt float %89, 0x3FE5555560000000\l  %91 = zext i1 %90 to i32\l  %92 = tail call float @llvm.amdgcn.ldexp.f32(float %89, i32 %91)\l  %93 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %88)\l  %94 = sub nsw i32 %93, %91\l  %95 = fadd float %92, -1.000000e+00\l  %96 = fadd float %92, 1.000000e+00\l  %97 = fadd float %96, -1.000000e+00\l  %98 = fsub float %92, %97\l  %99 = tail call float @llvm.amdgcn.rcp.f32(float %96)\l  %100 = fmul float %95, %99\l  %101 = fmul float %96, %100\l  %102 = fneg float %101\l  %103 = tail call float @llvm.fma.f32(float %100, float %96, float %102)\l  %104 = tail call float @llvm.fma.f32(float %100, float %98, float %103)\l  %105 = fadd float %101, %104\l  %106 = fsub float %105, %101\l  %107 = fsub float %104, %106\l  %108 = fsub float %95, %105\l  %109 = fsub float %95, %108\l  %110 = fsub float %109, %105\l  %111 = fsub float %110, %107\l  %112 = fadd float %108, %111\l  %113 = fmul float %99, %112\l  %114 = fadd float %100, %113\l  %115 = fsub float %114, %100\l  %116 = fsub float %113, %115\l  %117 = fmul float %114, %114\l  %118 = fneg float %117\l  %119 = tail call float @llvm.fma.f32(float %114, float %114, float %118)\l  %120 = fmul float %116, 2.000000e+00\l  %121 = tail call float @llvm.fma.f32(float %114, float %120, float %119)\l  %122 = fadd float %117, %121\l  %123 = fsub float %122, %117\l  %124 = fsub float %121, %123\l  %125 = tail call float @llvm.fmuladd.f32(float %122, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %126 = tail call float @llvm.fmuladd.f32(float %122, float %125, float\l... 0x3FD999BDE0000000)\l  %127 = sitofp i32 %94 to float\l  %128 = fmul float %127, 0x3FE62E4300000000\l  %129 = fneg float %128\l  %130 = tail call float @llvm.fma.f32(float %127, float 0x3FE62E4300000000,\l... float %129)\l  %131 = tail call float @llvm.fma.f32(float %127, float 0xBE205C6100000000,\l... float %130)\l  %132 = fadd float %128, %131\l  %133 = fsub float %132, %128\l  %134 = fsub float %131, %133\l  %135 = tail call float @llvm.amdgcn.ldexp.f32(float %114, i32 1)\l  %136 = fmul float %114, %122\l  %137 = fneg float %136\l  %138 = tail call float @llvm.fma.f32(float %122, float %114, float %137)\l  %139 = tail call float @llvm.fma.f32(float %122, float %116, float %138)\l  %140 = tail call float @llvm.fma.f32(float %124, float %114, float %139)\l  %141 = fadd float %136, %140\l  %142 = fsub float %141, %136\l  %143 = fsub float %140, %142\l  %144 = fmul float %122, %126\l  %145 = fneg float %144\l  %146 = tail call float @llvm.fma.f32(float %122, float %126, float %145)\l  %147 = tail call float @llvm.fma.f32(float %124, float %126, float %146)\l  %148 = fadd float %144, %147\l  %149 = fsub float %148, %144\l  %150 = fsub float %147, %149\l  %151 = fadd float %148, 0x3FE5555540000000\l  %152 = fadd float %151, 0xBFE5555540000000\l  %153 = fsub float %148, %152\l  %154 = fadd float %150, 0x3E2E720200000000\l  %155 = fadd float %154, %153\l  %156 = fadd float %151, %155\l  %157 = fsub float %156, %151\l  %158 = fsub float %155, %157\l  %159 = fmul float %141, %156\l  %160 = fneg float %159\l  %161 = tail call float @llvm.fma.f32(float %141, float %156, float %160)\l  %162 = tail call float @llvm.fma.f32(float %141, float %158, float %161)\l  %163 = tail call float @llvm.fma.f32(float %143, float %156, float %162)\l  %164 = tail call float @llvm.amdgcn.ldexp.f32(float %116, i32 1)\l  %165 = fadd float %159, %163\l  %166 = fsub float %165, %159\l  %167 = fsub float %163, %166\l  %168 = fadd float %135, %165\l  %169 = fsub float %168, %135\l  %170 = fsub float %165, %169\l  %171 = fadd float %164, %167\l  %172 = fadd float %171, %170\l  %173 = fadd float %168, %172\l  %174 = fsub float %173, %168\l  %175 = fsub float %172, %174\l  %176 = fadd float %132, %173\l  %177 = fsub float %176, %132\l  %178 = fsub float %176, %177\l  %179 = fsub float %132, %178\l  %180 = fsub float %173, %177\l  %181 = fadd float %180, %179\l  %182 = fadd float %134, %175\l  %183 = fsub float %182, %134\l  %184 = fsub float %182, %183\l  %185 = fsub float %134, %184\l  %186 = fsub float %175, %183\l  %187 = fadd float %186, %185\l  %188 = fadd float %182, %181\l  %189 = fadd float %176, %188\l  %190 = fsub float %189, %176\l  %191 = fsub float %188, %190\l  %192 = fadd float %187, %191\l  %193 = fadd float %189, %192\l  %194 = fsub float %193, %189\l  %195 = fsub float %192, %194\l  %196 = fmul float %193, 0x3FA99999A0000000\l  %197 = fneg float %196\l  %198 = tail call float @llvm.fma.f32(float %193, float 0x3FA99999A0000000,\l... float %197)\l  %199 = tail call float @llvm.fma.f32(float %195, float 0x3FA99999A0000000,\l... float %198)\l  %200 = fadd float %196, %199\l  %201 = fsub float %200, %196\l  %202 = fsub float %199, %201\l  %203 = tail call float @llvm.fabs.f32(float %196) #3\l  %204 = fcmp oeq float %203, 0x7FF0000000000000\l  %205 = select i1 %204, float %196, float %200\l  %206 = tail call float @llvm.fabs.f32(float %205) #3\l  %207 = fcmp oeq float %206, 0x7FF0000000000000\l  %208 = select i1 %207, float 0.000000e+00, float %202\l  %209 = fcmp oeq float %205, 0x40562E4300000000\l  %210 = select i1 %209, float 0x3EE0000000000000, float 0.000000e+00\l  %211 = fsub float %205, %210\l  %212 = fadd float %210, %208\l  %213 = fmul float %211, 0x3FF7154760000000\l  %214 = tail call float @llvm.rint.f32(float %213)\l  %215 = fcmp ogt float %211, 0x40562E4300000000\l  %216 = fcmp olt float %211, 0xC059D1DA00000000\l  %217 = fneg float %213\l  %218 = tail call float @llvm.fma.f32(float %211, float 0x3FF7154760000000,\l... float %217)\l  %219 = tail call float @llvm.fma.f32(float %211, float 0x3E54AE0BE0000000,\l... float %218)\l  %220 = fsub float %213, %214\l  %221 = fadd float %219, %220\l  %222 = tail call float @llvm.exp2.f32(float %221)\l  %223 = fptosi float %214 to i32\l  %224 = tail call float @llvm.amdgcn.ldexp.f32(float %222, i32 %223)\l  %225 = select i1 %216, float 0.000000e+00, float %224\l  %226 = select i1 %215, float 0x7FF0000000000000, float %225\l  %227 = tail call float @llvm.fma.f32(float %226, float %212, float %226)\l  %228 = tail call float @llvm.fabs.f32(float %226) #3\l  %229 = fcmp oeq float %228, 0x7FF0000000000000\l  %230 = select i1 %229, float %226, float %227\l  %231 = fcmp uge float %87, 0.000000e+00\l  %232 = tail call float @llvm.fabs.f32(float %230)\l  %233 = fcmp oeq float %88, 0x7FF0000000000000\l  %234 = fcmp uno float %87, 0.000000e+00\l  %235 = fcmp oeq float %87, 1.000000e+00\l  %236 = fdiv contract float 1.000000e+00, %232\l  %237 = select i1 %231, float %236, float 0x7FF8000000000000\l  %238 = select i1 %233, float 0.000000e+00, float %237\l  %239 = select i1 %234, float 0x7FF8000000000000, float %238\l  %240 = select i1 %235, float 1.000000e+00, float %239\l  %241 = getelementptr inbounds %struct.blackHole, %struct.blackHole\l... addrspace(1)* %7, i64 %55, i32 2\l  %242 = load float, float addrspace(1)* %241, align 4, !tbaa !17,\l... !amdgpu.noclobber !6\l  %243 = fmul contract float %242, %240\l  %244 = fadd contract float %53, %243\l  %245 = add nuw nsw i32 %54, 1\l  %246 = icmp eq i32 %245, %8\l  br i1 %246, label %46, label %52, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x4afaa10:s0 -> Node0x4afaa60;
	Node0x4afaa10:s1 -> Node0x4afaa10;
	Node0x4af9fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%247:\l247:                                              \l  ret void\l}"];
}
