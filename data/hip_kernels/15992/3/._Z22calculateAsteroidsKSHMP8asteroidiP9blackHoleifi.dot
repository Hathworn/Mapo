digraph "CFG for '_Z22calculateAsteroidsKSHMP8asteroidiP9blackHoleifi' function" {
	label="CFG for '_Z22calculateAsteroidsKSHMP8asteroidiP9blackHoleifi' function";

	Node0x5d87430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = mul i32 %7, %12\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %18 = add i32 %16, %17\l  %19 = udiv i32 %15, %12\l  %20 = mul i32 %19, %12\l  %21 = icmp ugt i32 %15, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %12\l  %25 = icmp eq i32 %18, 0\l  br i1 %25, label %26, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5d87430:s0 -> Node0x5d89960;
	Node0x5d87430:s1 -> Node0x5d899f0;
	Node0x5d89960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%26:\l26:                                               \l  %27 = bitcast %struct.blackHole addrspace(1)* %2 to i8 addrspace(1)*\l  %28 = sext i32 %5 to i64\l  %29 = icmp ugt i32 %5, 3\l  br i1 %29, label %30, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5d89960:s0 -> Node0x5d89ca0;
	Node0x5d89960:s1 -> Node0x5d89d30;
	Node0x5d89ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%30:\l30:                                               \l  %31 = phi i8 addrspace(1)* [ %45, %30 ], [ %27, %26 ]\l  %32 = phi i8 addrspace(3)* [ %46, %30 ], [ bitcast ([0 x float]\l... addrspace(3)* @s to i8 addrspace(3)*), %26 ]\l  %33 = phi i64 [ %44, %30 ], [ %28, %26 ]\l  %34 = load i8, i8 addrspace(1)* %31, align 1, !tbaa !16\l  store i8 %34, i8 addrspace(3)* %32, align 1, !tbaa !16\l  %35 = getelementptr inbounds i8, i8 addrspace(1)* %31, i64 1\l  %36 = load i8, i8 addrspace(1)* %35, align 1, !tbaa !16\l  %37 = getelementptr inbounds i8, i8 addrspace(3)* %32, i32 1\l  store i8 %36, i8 addrspace(3)* %37, align 1, !tbaa !16\l  %38 = getelementptr inbounds i8, i8 addrspace(1)* %31, i64 2\l  %39 = load i8, i8 addrspace(1)* %38, align 1, !tbaa !16\l  %40 = getelementptr inbounds i8, i8 addrspace(3)* %32, i32 2\l  store i8 %39, i8 addrspace(3)* %40, align 1, !tbaa !16\l  %41 = getelementptr inbounds i8, i8 addrspace(1)* %31, i64 3\l  %42 = load i8, i8 addrspace(1)* %41, align 1, !tbaa !16\l  %43 = getelementptr inbounds i8, i8 addrspace(3)* %32, i32 3\l  store i8 %42, i8 addrspace(3)* %43, align 1, !tbaa !16\l  %44 = add i64 %33, -4\l  %45 = getelementptr inbounds i8, i8 addrspace(1)* %31, i64 4\l  %46 = getelementptr inbounds i8, i8 addrspace(3)* %32, i32 4\l  %47 = icmp ugt i64 %44, 3\l  br i1 %47, label %30, label %48, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5d89ca0:s0 -> Node0x5d89ca0;
	Node0x5d89ca0:s1 -> Node0x5d89d30;
	Node0x5d89d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%48:\l48:                                               \l  %49 = phi i64 [ %28, %26 ], [ %44, %30 ]\l  %50 = phi i8 addrspace(3)* [ bitcast ([0 x float] addrspace(3)* @s to i8\l... addrspace(3)*), %26 ], [ %46, %30 ]\l  %51 = phi i8 addrspace(1)* [ %27, %26 ], [ %45, %30 ]\l  switch i64 %49, label %62 [\l    i64 3, label %52\l    i64 2, label %56\l    i64 1, label %60\l  ]\l|{<s0>def|<s1>3|<s2>2|<s3>1}}"];
	Node0x5d89d30:s0 -> Node0x5d899f0;
	Node0x5d89d30:s1 -> Node0x5d8bad0;
	Node0x5d89d30:s2 -> Node0x5d8bb20;
	Node0x5d89d30:s3 -> Node0x5d8bbb0;
	Node0x5d8bad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%52:\l52:                                               \l  %53 = getelementptr inbounds i8, i8 addrspace(1)* %51, i64 2\l  %54 = load i8, i8 addrspace(1)* %53, align 1, !tbaa !16\l  %55 = getelementptr inbounds i8, i8 addrspace(3)* %50, i32 2\l  store i8 %54, i8 addrspace(3)* %55, align 1, !tbaa !16\l  br label %56\l}"];
	Node0x5d8bad0 -> Node0x5d8bb20;
	Node0x5d8bb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%56:\l56:                                               \l  %57 = getelementptr inbounds i8, i8 addrspace(1)* %51, i64 1\l  %58 = load i8, i8 addrspace(1)* %57, align 1, !tbaa !16\l  %59 = getelementptr inbounds i8, i8 addrspace(3)* %50, i32 1\l  store i8 %58, i8 addrspace(3)* %59, align 1, !tbaa !16\l  br label %60\l}"];
	Node0x5d8bb20 -> Node0x5d8bbb0;
	Node0x5d8bbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%60:\l60:                                               \l  %61 = load i8, i8 addrspace(1)* %51, align 1, !tbaa !16\l  store i8 %61, i8 addrspace(3)* %50, align 1, !tbaa !16\l  br label %62\l}"];
	Node0x5d8bbb0 -> Node0x5d899f0;
	Node0x5d899f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%62:\l62:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %63 = icmp slt i32 %18, %1\l  br i1 %63, label %64, label %73\l|{<s0>T|<s1>F}}"];
	Node0x5d899f0:s0 -> Node0x5d8c7b0;
	Node0x5d899f0:s1 -> Node0x5d8c800;
	Node0x5d8c7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%64:\l64:                                               \l  %65 = icmp sgt i32 %3, 0\l  br label %66\l}"];
	Node0x5d8c7b0 -> Node0x5d8a380;
	Node0x5d8a380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%66:\l66:                                               \l  %67 = phi i32 [ %18, %64 ], [ %175, %124 ]\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds %struct.asteroid, %struct.asteroid\l... addrspace(1)* %0, i64 %68, i32 0\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !21\l  %71 = getelementptr inbounds %struct.asteroid, %struct.asteroid\l... addrspace(1)* %0, i64 %68, i32 1\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !24\l  br i1 %65, label %74, label %124\l|{<s0>T|<s1>F}}"];
	Node0x5d8a380:s0 -> Node0x5d8d2c0;
	Node0x5d8a380:s1 -> Node0x5d8a440;
	Node0x5d8c800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%73:\l73:                                               \l  ret void\l}"];
	Node0x5d8d2c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = phi float [ %120, %118 ], [ 0.000000e+00, %66 ]\l  %76 = phi float [ %119, %118 ], [ 0.000000e+00, %66 ]\l  %77 = phi i32 [ %121, %118 ], [ 0, %66 ]\l  %78 = getelementptr inbounds %struct.blackHole, %struct.blackHole\l... addrspace(3)* bitcast ([0 x float] addrspace(3)* @s to %struct.blackHole\l... addrspace(3)*), i32 %77, i32 0\l  %79 = load float, float addrspace(3)* %78, align 4, !tbaa !25\l  %80 = fsub contract float %70, %79\l  %81 = getelementptr inbounds %struct.blackHole, %struct.blackHole\l... addrspace(3)* bitcast ([0 x float] addrspace(3)* @s to %struct.blackHole\l... addrspace(3)*), i32 %77, i32 1\l  %82 = load float, float addrspace(3)* %81, align 4, !tbaa !27\l  %83 = fsub contract float %72, %82\l  %84 = fcmp contract une float %80, 0.000000e+00\l  %85 = fcmp contract une float %83, 0.000000e+00\l  %86 = select i1 %84, i1 %85, i1 false\l  br i1 %86, label %87, label %118\l|{<s0>T|<s1>F}}"];
	Node0x5d8d2c0:s0 -> Node0x5d8ea20;
	Node0x5d8d2c0:s1 -> Node0x5d8d450;
	Node0x5d8ea20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%87:\l87:                                               \l  %88 = fmul contract float %80, %80\l  %89 = fmul contract float %83, %83\l  %90 = fadd contract float %88, %89\l  %91 = fmul contract float %90, %90\l  %92 = fcmp olt float %91, 0x39F0000000000000\l  %93 = select i1 %92, float 0x41F0000000000000, float 1.000000e+00\l  %94 = fmul float %91, %93\l  %95 = tail call float @llvm.sqrt.f32(float %94)\l  %96 = bitcast float %95 to i32\l  %97 = add nsw i32 %96, -1\l  %98 = bitcast i32 %97 to float\l  %99 = add nsw i32 %96, 1\l  %100 = bitcast i32 %99 to float\l  %101 = tail call i1 @llvm.amdgcn.class.f32(float %94, i32 608)\l  %102 = select i1 %92, float 0x3EF0000000000000, float 1.000000e+00\l  %103 = fneg float %100\l  %104 = tail call float @llvm.fma.f32(float %103, float %95, float %94)\l  %105 = fcmp ogt float %104, 0.000000e+00\l  %106 = fneg float %98\l  %107 = tail call float @llvm.fma.f32(float %106, float %95, float %94)\l  %108 = fcmp ole float %107, 0.000000e+00\l  %109 = select i1 %108, float %98, float %95\l  %110 = select i1 %105, float %100, float %109\l  %111 = fmul float %102, %110\l  %112 = select i1 %101, float %94, float %111\l  %113 = fdiv contract float 1.000000e+00, %112\l  %114 = fmul contract float %80, %113\l  %115 = fadd contract float %75, %114\l  %116 = fmul contract float %83, %113\l  %117 = fadd contract float %76, %116\l  br label %118\l}"];
	Node0x5d8ea20 -> Node0x5d8d450;
	Node0x5d8d450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%118:\l118:                                              \l  %119 = phi float [ %117, %87 ], [ %76, %74 ]\l  %120 = phi float [ %115, %87 ], [ %75, %74 ]\l  %121 = add nuw nsw i32 %77, 1\l  %122 = icmp slt i32 %121, %3\l  %123 = select i1 %86, i1 %122, i1 false\l  br i1 %123, label %74, label %124, !llvm.loop !28\l|{<s0>T|<s1>F}}"];
	Node0x5d8d450:s0 -> Node0x5d8d2c0;
	Node0x5d8d450:s1 -> Node0x5d8a440;
	Node0x5d8a440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%124:\l124:                                              \l  %125 = phi float [ 0.000000e+00, %66 ], [ %119, %118 ]\l  %126 = phi float [ 0.000000e+00, %66 ], [ %120, %118 ]\l  %127 = fmul contract float %126, %126\l  %128 = fmul contract float %125, %125\l  %129 = fadd contract float %128, %127\l  %130 = fcmp olt float %129, 0x39F0000000000000\l  %131 = select i1 %130, float 0x41F0000000000000, float 1.000000e+00\l  %132 = fmul float %129, %131\l  %133 = tail call float @llvm.sqrt.f32(float %132)\l  %134 = bitcast float %133 to i32\l  %135 = add nsw i32 %134, -1\l  %136 = bitcast i32 %135 to float\l  %137 = add nsw i32 %134, 1\l  %138 = bitcast i32 %137 to float\l  %139 = tail call i1 @llvm.amdgcn.class.f32(float %132, i32 608)\l  %140 = select i1 %130, float 0x3EF0000000000000, float 1.000000e+00\l  %141 = fneg float %138\l  %142 = tail call float @llvm.fma.f32(float %141, float %133, float %132)\l  %143 = fcmp ogt float %142, 0.000000e+00\l  %144 = fneg float %136\l  %145 = tail call float @llvm.fma.f32(float %144, float %133, float %132)\l  %146 = fcmp ole float %145, 0.000000e+00\l  %147 = select i1 %146, float %136, float %133\l  %148 = select i1 %143, float %138, float %147\l  %149 = fmul float %140, %148\l  %150 = select i1 %139, float %132, float %149\l  %151 = fneg contract float %126\l  %152 = fdiv contract float %151, %150\l  %153 = fmul contract float %152, %4\l  %154 = getelementptr inbounds %struct.asteroid, %struct.asteroid\l... addrspace(1)* %0, i64 %68, i32 2\l  %155 = load float, float addrspace(1)* %154, align 4, !tbaa !29\l  %156 = fadd contract float %155, %153\l  store float %156, float addrspace(1)* %154, align 4, !tbaa !29\l  %157 = fneg contract float %125\l  %158 = fdiv contract float %157, %150\l  %159 = fmul contract float %158, %4\l  %160 = getelementptr inbounds %struct.asteroid, %struct.asteroid\l... addrspace(1)* %0, i64 %68, i32 3\l  %161 = load float, float addrspace(1)* %160, align 4, !tbaa !30\l  %162 = fadd contract float %161, %159\l  store float %162, float addrspace(1)* %160, align 4, !tbaa !30\l  %163 = fpext float %156 to double\l  %164 = fmul contract double %163, 1.000000e-02\l  %165 = getelementptr inbounds %struct.asteroid, %struct.asteroid\l... addrspace(1)* %0, i64 %68, i32 0\l  %166 = fpext float %70 to double\l  %167 = fadd contract double %164, %166\l  %168 = fptrunc double %167 to float\l  store float %168, float addrspace(1)* %165, align 4, !tbaa !21\l  %169 = fpext float %162 to double\l  %170 = fmul contract double %169, 1.000000e-02\l  %171 = getelementptr inbounds %struct.asteroid, %struct.asteroid\l... addrspace(1)* %0, i64 %68, i32 1\l  %172 = fpext float %72 to double\l  %173 = fadd contract double %170, %172\l  %174 = fptrunc double %173 to float\l  store float %174, float addrspace(1)* %171, align 4, !tbaa !24\l  %175 = add nsw i32 %67, %24\l  %176 = icmp slt i32 %175, %1\l  br i1 %176, label %66, label %73, !llvm.loop !31\l|{<s0>T|<s1>F}}"];
	Node0x5d8a440:s0 -> Node0x5d8a380;
	Node0x5d8a440:s1 -> Node0x5d8c800;
}
