digraph "CFG for '_Z9mat_scalefPfS_iii' function" {
	label="CFG for '_Z9mat_scalefPfS_iii' function";

	Node0x4978450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %8, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %3\l  %25 = icmp slt i32 %23, %4\l  %26 = select i1 %24, i1 %25, i1 false\l  %27 = icmp sgt i32 %5, 0\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %113\l|{<s0>T|<s1>F}}"];
	Node0x4978450:s0 -> Node0x497c040;
	Node0x4978450:s1 -> Node0x497c0d0;
	Node0x497c040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %15, %4\l  %31 = add nsw i32 %30, %23\l  %32 = mul nsw i32 %31, %5\l  %33 = and i32 %5, 7\l  %34 = icmp ult i32 %5, 8\l  br i1 %34, label %98, label %35\l|{<s0>T|<s1>F}}"];
	Node0x497c040:s0 -> Node0x497c660;
	Node0x497c040:s1 -> Node0x497c6b0;
	Node0x497c6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%35:\l35:                                               \l  %36 = and i32 %5, -8\l  br label %37\l}"];
	Node0x497c6b0 -> Node0x497c8b0;
	Node0x497c8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%37:\l37:                                               \l  %38 = phi i32 [ 0, %35 ], [ %95, %37 ]\l  %39 = phi i32 [ 0, %35 ], [ %96, %37 ]\l  %40 = add nsw i32 %38, %32\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7\l  %44 = fmul contract float %43, %0\l  %45 = getelementptr inbounds float, float addrspace(1)* %2, i64 %41\l  store float %44, float addrspace(1)* %45, align 4, !tbaa !7\l  %46 = or i32 %38, 1\l  %47 = add nsw i32 %46, %32\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %1, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7\l  %51 = fmul contract float %50, %0\l  %52 = getelementptr inbounds float, float addrspace(1)* %2, i64 %48\l  store float %51, float addrspace(1)* %52, align 4, !tbaa !7\l  %53 = or i32 %38, 2\l  %54 = add nsw i32 %53, %32\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7\l  %58 = fmul contract float %57, %0\l  %59 = getelementptr inbounds float, float addrspace(1)* %2, i64 %55\l  store float %58, float addrspace(1)* %59, align 4, !tbaa !7\l  %60 = or i32 %38, 3\l  %61 = add nsw i32 %60, %32\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %1, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7\l  %65 = fmul contract float %64, %0\l  %66 = getelementptr inbounds float, float addrspace(1)* %2, i64 %62\l  store float %65, float addrspace(1)* %66, align 4, !tbaa !7\l  %67 = or i32 %38, 4\l  %68 = add nsw i32 %67, %32\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %1, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7\l  %72 = fmul contract float %71, %0\l  %73 = getelementptr inbounds float, float addrspace(1)* %2, i64 %69\l  store float %72, float addrspace(1)* %73, align 4, !tbaa !7\l  %74 = or i32 %38, 5\l  %75 = add nsw i32 %74, %32\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %1, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !7\l  %79 = fmul contract float %78, %0\l  %80 = getelementptr inbounds float, float addrspace(1)* %2, i64 %76\l  store float %79, float addrspace(1)* %80, align 4, !tbaa !7\l  %81 = or i32 %38, 6\l  %82 = add nsw i32 %81, %32\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %1, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !7\l  %86 = fmul contract float %85, %0\l  %87 = getelementptr inbounds float, float addrspace(1)* %2, i64 %83\l  store float %86, float addrspace(1)* %87, align 4, !tbaa !7\l  %88 = or i32 %38, 7\l  %89 = add nsw i32 %88, %32\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %1, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7\l  %93 = fmul contract float %92, %0\l  %94 = getelementptr inbounds float, float addrspace(1)* %2, i64 %90\l  store float %93, float addrspace(1)* %94, align 4, !tbaa !7\l  %95 = add nuw nsw i32 %38, 8\l  %96 = add i32 %39, 8\l  %97 = icmp eq i32 %96, %36\l  br i1 %97, label %98, label %37, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x497c8b0:s0 -> Node0x497c660;
	Node0x497c8b0:s1 -> Node0x497c8b0;
	Node0x497c660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%98:\l98:                                               \l  %99 = phi i32 [ 0, %29 ], [ %95, %37 ]\l  %100 = icmp eq i32 %33, 0\l  br i1 %100, label %113, label %101\l|{<s0>T|<s1>F}}"];
	Node0x497c660:s0 -> Node0x497c0d0;
	Node0x497c660:s1 -> Node0x497fd00;
	Node0x497fd00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%101:\l101:                                              \l  %102 = phi i32 [ %110, %101 ], [ %99, %98 ]\l  %103 = phi i32 [ %111, %101 ], [ 0, %98 ]\l  %104 = add nsw i32 %102, %32\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %1, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7\l  %108 = fmul contract float %107, %0\l  %109 = getelementptr inbounds float, float addrspace(1)* %2, i64 %105\l  store float %108, float addrspace(1)* %109, align 4, !tbaa !7\l  %110 = add nuw nsw i32 %102, 1\l  %111 = add i32 %103, 1\l  %112 = icmp eq i32 %111, %33\l  br i1 %112, label %113, label %101, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x497fd00:s0 -> Node0x497c0d0;
	Node0x497fd00:s1 -> Node0x497fd00;
	Node0x497c0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%113:\l113:                                              \l  ret void\l}"];
}
