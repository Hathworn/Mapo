digraph "CFG for '_Z4convPfS_S_iiiiii' function" {
	label="CFG for '_Z4convPfS_S_iiiiii' function";

	Node0x6458700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%9:\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %12 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 2, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %11, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %26 = add i32 %24, %25\l  %27 = sdiv i32 %6, -2\l  %28 = add i32 %18, %27\l  %29 = sdiv i32 %7, -2\l  %30 = add i32 %26, %29\l  %31 = icmp slt i32 %18, %3\l  %32 = icmp slt i32 %26, %4\l  %33 = select i1 %31, i1 %32, i1 false\l  %34 = icmp sgt i32 %8, 0\l  %35 = select i1 %33, i1 %34, i1 false\l  br i1 %35, label %36, label %195\l|{<s0>T|<s1>F}}"];
	Node0x6458700:s0 -> Node0x645d190;
	Node0x6458700:s1 -> Node0x645d220;
	Node0x645d190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%36:\l36:                                               \l  %37 = icmp sgt i32 %6, 0\l  %38 = icmp sgt i32 %7, 0\l  %39 = icmp sgt i32 %5, 0\l  %40 = mul nsw i32 %18, %4\l  %41 = add nsw i32 %40, %26\l  %42 = mul nsw i32 %41, %8\l  %43 = and i32 %5, 7\l  %44 = icmp ult i32 %5, 8\l  %45 = and i32 %5, -8\l  %46 = icmp eq i32 %43, 0\l  %47 = and i32 %5, 7\l  %48 = icmp ult i32 %5, 8\l  %49 = and i32 %5, -8\l  %50 = icmp eq i32 %47, 0\l  br label %51\l}"];
	Node0x645d190 -> Node0x645dbd0;
	Node0x645dbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%51:\l51:                                               \l  %52 = phi i32 [ 0, %36 ], [ %68, %63 ]\l  br i1 %37, label %53, label %63\l|{<s0>T|<s1>F}}"];
	Node0x645dbd0:s0 -> Node0x645de00;
	Node0x645dbd0:s1 -> Node0x645dcc0;
	Node0x645de00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%53:\l53:                                               \l  %54 = phi i32 [ %99, %97 ], [ 0, %51 ]\l  %55 = phi float [ %98, %97 ], [ 0.000000e+00, %51 ]\l  br i1 %38, label %56, label %97\l|{<s0>T|<s1>F}}"];
	Node0x645de00:s0 -> Node0x645ec20;
	Node0x645de00:s1 -> Node0x645df70;
	Node0x645ec20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%56:\l56:                                               \l  %57 = add nsw i32 %28, %54\l  %58 = icmp slt i32 %57, 0\l  %59 = icmp sge i32 %57, %3\l  %60 = select i1 %58, i1 true, i1 %59\l  %61 = mul nsw i32 %57, %4\l  %62 = mul nsw i32 %54, %7\l  br label %70\l}"];
	Node0x645ec20 -> Node0x645f110;
	Node0x645dcc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%63:\l63:                                               \l  %64 = phi float [ 0.000000e+00, %51 ], [ %98, %97 ]\l  %65 = add nsw i32 %52, %42\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %2, i64 %66\l  store float %64, float addrspace(1)* %67, align 4, !tbaa !7\l  %68 = add nuw nsw i32 %52, 1\l  %69 = icmp eq i32 %68, %8\l  br i1 %69, label %195, label %51, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x645dcc0:s0 -> Node0x645d220;
	Node0x645dcc0:s1 -> Node0x645dbd0;
	Node0x645f110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%70:\l70:                                               \l  %71 = phi i32 [ 0, %56 ], [ %127, %125 ]\l  %72 = phi float [ %55, %56 ], [ %126, %125 ]\l  br i1 %39, label %73, label %125\l|{<s0>T|<s1>F}}"];
	Node0x645f110:s0 -> Node0x645fd10;
	Node0x645f110:s1 -> Node0x645fab0;
	Node0x645fd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%73:\l73:                                               \l  %74 = add nsw i32 %30, %71\l  %75 = icmp slt i32 %74, 0\l  %76 = icmp sge i32 %74, %4\l  %77 = add nsw i32 %74, %61\l  %78 = mul nsw i32 %77, %5\l  %79 = add nsw i32 %71, %62\l  %80 = mul nsw i32 %79, %8\l  %81 = add nsw i32 %80, %52\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %1, i64 %82\l  %84 = select i1 %60, i1 true, i1 %75\l  %85 = select i1 %84, i1 true, i1 %76\l  br i1 %85, label %96, label %86\l|{<s0>T|<s1>F}}"];
	Node0x645fd10:s0 -> Node0x6460540;
	Node0x645fd10:s1 -> Node0x6460590;
	Node0x6460590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%86:\l86:                                               \l  br i1 %44, label %106, label %87\l|{<s0>T|<s1>F}}"];
	Node0x6460590:s0 -> Node0x64606d0;
	Node0x6460590:s1 -> Node0x6460720;
	Node0x6460720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%87:\l87:                                               \l  %88 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  %89 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  %90 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  %91 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  %92 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  %93 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  %94 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  %95 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  br label %133\l}"];
	Node0x6460720 -> Node0x6461220;
	Node0x6460540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%96:\l96:                                               \l  br i1 %48, label %101, label %129\l|{<s0>T|<s1>F}}"];
	Node0x6460540:s0 -> Node0x64612e0;
	Node0x6460540:s1 -> Node0x6461330;
	Node0x645df70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%97:\l97:                                               \l  %98 = phi float [ %55, %53 ], [ %126, %125 ]\l  %99 = add nuw nsw i32 %54, 1\l  %100 = icmp eq i32 %99, %6\l  br i1 %100, label %63, label %53, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x645df70:s0 -> Node0x645dcc0;
	Node0x645df70:s1 -> Node0x645de00;
	Node0x64612e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%101:\l101:                                              \l  br i1 %50, label %125, label %102\l|{<s0>T|<s1>F}}"];
	Node0x64612e0:s0 -> Node0x645fab0;
	Node0x64612e0:s1 -> Node0x6461770;
	Node0x6461770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  %103 = phi i32 [ %104, %102 ], [ 0, %101 ]\l  %104 = add i32 %103, 1\l  %105 = icmp eq i32 %104, %47\l  br i1 %105, label %125, label %102, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x6461770:s0 -> Node0x645fab0;
	Node0x6461770:s1 -> Node0x6461770;
	Node0x64606d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%106:\l106:                                              \l  %107 = phi float [ undef, %86 ], [ %191, %133 ]\l  %108 = phi i32 [ 0, %86 ], [ %192, %133 ]\l  %109 = phi float [ %72, %86 ], [ %191, %133 ]\l  br i1 %46, label %125, label %110\l|{<s0>T|<s1>F}}"];
	Node0x64606d0:s0 -> Node0x645fab0;
	Node0x64606d0:s1 -> Node0x6462250;
	Node0x6462250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%110:\l110:                                              \l  %111 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  br label %112\l}"];
	Node0x6462250 -> Node0x6462400;
	Node0x6462400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%112:\l112:                                              \l  %113 = phi i32 [ %122, %112 ], [ %108, %110 ]\l  %114 = phi float [ %121, %112 ], [ %109, %110 ]\l  %115 = phi i32 [ %123, %112 ], [ 0, %110 ]\l  %116 = add nsw i32 %113, %78\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %0, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !7\l  %120 = fmul contract float %119, %111\l  %121 = fadd contract float %114, %120\l  %122 = add nuw nsw i32 %113, 1\l  %123 = add i32 %115, 1\l  %124 = icmp eq i32 %123, %43\l  br i1 %124, label %125, label %112, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x6462400:s0 -> Node0x645fab0;
	Node0x6462400:s1 -> Node0x6462400;
	Node0x645fab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%125:\l125:                                              \l  %126 = phi float [ %72, %70 ], [ %72, %102 ], [ %72, %101 ], [ %107, %106 ],\l... [ %121, %112 ]\l  %127 = add nuw nsw i32 %71, 1\l  %128 = icmp eq i32 %127, %7\l  br i1 %128, label %97, label %70, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x645fab0:s0 -> Node0x645df70;
	Node0x645fab0:s1 -> Node0x645f110;
	Node0x6461330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%129:\l129:                                              \l  %130 = phi i32 [ %131, %129 ], [ 0, %96 ]\l  %131 = add i32 %130, 8\l  %132 = icmp eq i32 %131, %49\l  br i1 %132, label %101, label %129, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x6461330:s0 -> Node0x64612e0;
	Node0x6461330:s1 -> Node0x6461330;
	Node0x6461220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%133:\l133:                                              \l  %134 = phi i32 [ 0, %87 ], [ %192, %133 ]\l  %135 = phi float [ %72, %87 ], [ %191, %133 ]\l  %136 = phi i32 [ 0, %87 ], [ %193, %133 ]\l  %137 = add nsw i32 %134, %78\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %0, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !7\l  %141 = fmul contract float %140, %88\l  %142 = fadd contract float %135, %141\l  %143 = or i32 %134, 1\l  %144 = add nsw i32 %143, %78\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %0, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !7\l  %148 = fmul contract float %147, %89\l  %149 = fadd contract float %142, %148\l  %150 = or i32 %134, 2\l  %151 = add nsw i32 %150, %78\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds float, float addrspace(1)* %0, i64 %152\l  %154 = load float, float addrspace(1)* %153, align 4, !tbaa !7\l  %155 = fmul contract float %154, %90\l  %156 = fadd contract float %149, %155\l  %157 = or i32 %134, 3\l  %158 = add nsw i32 %157, %78\l  %159 = sext i32 %158 to i64\l  %160 = getelementptr inbounds float, float addrspace(1)* %0, i64 %159\l  %161 = load float, float addrspace(1)* %160, align 4, !tbaa !7\l  %162 = fmul contract float %161, %91\l  %163 = fadd contract float %156, %162\l  %164 = or i32 %134, 4\l  %165 = add nsw i32 %164, %78\l  %166 = sext i32 %165 to i64\l  %167 = getelementptr inbounds float, float addrspace(1)* %0, i64 %166\l  %168 = load float, float addrspace(1)* %167, align 4, !tbaa !7\l  %169 = fmul contract float %168, %92\l  %170 = fadd contract float %163, %169\l  %171 = or i32 %134, 5\l  %172 = add nsw i32 %171, %78\l  %173 = sext i32 %172 to i64\l  %174 = getelementptr inbounds float, float addrspace(1)* %0, i64 %173\l  %175 = load float, float addrspace(1)* %174, align 4, !tbaa !7\l  %176 = fmul contract float %175, %93\l  %177 = fadd contract float %170, %176\l  %178 = or i32 %134, 6\l  %179 = add nsw i32 %178, %78\l  %180 = sext i32 %179 to i64\l  %181 = getelementptr inbounds float, float addrspace(1)* %0, i64 %180\l  %182 = load float, float addrspace(1)* %181, align 4, !tbaa !7\l  %183 = fmul contract float %182, %94\l  %184 = fadd contract float %177, %183\l  %185 = or i32 %134, 7\l  %186 = add nsw i32 %185, %78\l  %187 = sext i32 %186 to i64\l  %188 = getelementptr inbounds float, float addrspace(1)* %0, i64 %187\l  %189 = load float, float addrspace(1)* %188, align 4, !tbaa !7\l  %190 = fmul contract float %189, %95\l  %191 = fadd contract float %184, %190\l  %192 = add nuw nsw i32 %134, 8\l  %193 = add i32 %136, 8\l  %194 = icmp eq i32 %193, %45\l  br i1 %194, label %106, label %133, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x6461220:s0 -> Node0x64606d0;
	Node0x6461220:s1 -> Node0x6461220;
	Node0x645d220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%195:\l195:                                              \l  ret void\l}"];
}
