digraph "CFG for '_Z8add_biasPfS_S_iii' function" {
	label="CFG for '_Z8add_biasPfS_S_iii' function";

	Node0x5febaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %8, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %3\l  %25 = icmp slt i32 %23, %4\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %140\l|{<s0>T|<s1>F}}"];
	Node0x5febaa0:s0 -> Node0x5fef520;
	Node0x5febaa0:s1 -> Node0x5fef5b0;
	Node0x5fef520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %15, %4\l  %29 = add nsw i32 %28, %23\l  %30 = mul nsw i32 %29, %5\l  %31 = icmp sgt i32 %5, 0\l  br i1 %31, label %32, label %140\l|{<s0>T|<s1>F}}"];
	Node0x5fef520:s0 -> Node0x5fef960;
	Node0x5fef520:s1 -> Node0x5fef5b0;
	Node0x5fef960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%32:\l32:                                               \l  %33 = and i32 %5, 7\l  %34 = icmp ult i32 %5, 8\l  br i1 %34, label %122, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5fef960:s0 -> Node0x5fefd00;
	Node0x5fef960:s1 -> Node0x5fefd50;
	Node0x5fefd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%35:\l35:                                               \l  %36 = and i32 %5, -8\l  br label %37\l}"];
	Node0x5fefd50 -> Node0x5feff50;
	Node0x5feff50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%37:\l37:                                               \l  %38 = phi i32 [ 0, %35 ], [ %119, %37 ]\l  %39 = phi i32 [ 0, %35 ], [ %120, %37 ]\l  %40 = add nsw i32 %38, %30\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7\l  %44 = zext i32 %38 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %47 = fadd contract float %43, %46\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %41\l  store float %47, float addrspace(1)* %48, align 4, !tbaa !7\l  %49 = or i32 %38, 1\l  %50 = add nsw i32 %49, %30\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7\l  %54 = zext i32 %49 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  %57 = fadd contract float %53, %56\l  %58 = getelementptr inbounds float, float addrspace(1)* %2, i64 %51\l  store float %57, float addrspace(1)* %58, align 4, !tbaa !7\l  %59 = or i32 %38, 2\l  %60 = add nsw i32 %59, %30\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7\l  %64 = zext i32 %59 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7\l  %67 = fadd contract float %63, %66\l  %68 = getelementptr inbounds float, float addrspace(1)* %2, i64 %61\l  store float %67, float addrspace(1)* %68, align 4, !tbaa !7\l  %69 = or i32 %38, 3\l  %70 = add nsw i32 %69, %30\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7\l  %74 = zext i32 %69 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7\l  %77 = fadd contract float %73, %76\l  %78 = getelementptr inbounds float, float addrspace(1)* %2, i64 %71\l  store float %77, float addrspace(1)* %78, align 4, !tbaa !7\l  %79 = or i32 %38, 4\l  %80 = add nsw i32 %79, %30\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7\l  %84 = zext i32 %79 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = fadd contract float %83, %86\l  %88 = getelementptr inbounds float, float addrspace(1)* %2, i64 %81\l  store float %87, float addrspace(1)* %88, align 4, !tbaa !7\l  %89 = or i32 %38, 5\l  %90 = add nsw i32 %89, %30\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7\l  %94 = zext i32 %89 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7\l  %97 = fadd contract float %93, %96\l  %98 = getelementptr inbounds float, float addrspace(1)* %2, i64 %91\l  store float %97, float addrspace(1)* %98, align 4, !tbaa !7\l  %99 = or i32 %38, 6\l  %100 = add nsw i32 %99, %30\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %0, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !7\l  %104 = zext i32 %99 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %1, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7\l  %107 = fadd contract float %103, %106\l  %108 = getelementptr inbounds float, float addrspace(1)* %2, i64 %101\l  store float %107, float addrspace(1)* %108, align 4, !tbaa !7\l  %109 = or i32 %38, 7\l  %110 = add nsw i32 %109, %30\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %0, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7\l  %114 = zext i32 %109 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %1, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7\l  %117 = fadd contract float %113, %116\l  %118 = getelementptr inbounds float, float addrspace(1)* %2, i64 %111\l  store float %117, float addrspace(1)* %118, align 4, !tbaa !7\l  %119 = add nuw nsw i32 %38, 8\l  %120 = add i32 %39, 8\l  %121 = icmp eq i32 %120, %36\l  br i1 %121, label %122, label %37, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5feff50:s0 -> Node0x5fefd00;
	Node0x5feff50:s1 -> Node0x5feff50;
	Node0x5fefd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%122:\l122:                                              \l  %123 = phi i32 [ 0, %32 ], [ %119, %37 ]\l  %124 = icmp eq i32 %33, 0\l  br i1 %124, label %140, label %125\l|{<s0>T|<s1>F}}"];
	Node0x5fefd00:s0 -> Node0x5fef5b0;
	Node0x5fefd00:s1 -> Node0x5ff3f80;
	Node0x5ff3f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%125:\l125:                                              \l  %126 = phi i32 [ %137, %125 ], [ %123, %122 ]\l  %127 = phi i32 [ %138, %125 ], [ 0, %122 ]\l  %128 = add nsw i32 %126, %30\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %0, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !7\l  %132 = zext i32 %126 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %1, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !7\l  %135 = fadd contract float %131, %134\l  %136 = getelementptr inbounds float, float addrspace(1)* %2, i64 %129\l  store float %135, float addrspace(1)* %136, align 4, !tbaa !7\l  %137 = add nuw nsw i32 %126, 1\l  %138 = add i32 %127, 1\l  %139 = icmp eq i32 %138, %33\l  br i1 %139, label %140, label %125, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5ff3f80:s0 -> Node0x5fef5b0;
	Node0x5ff3f80:s1 -> Node0x5ff3f80;
	Node0x5fef5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%140:\l140:                                              \l  ret void\l}"];
}
