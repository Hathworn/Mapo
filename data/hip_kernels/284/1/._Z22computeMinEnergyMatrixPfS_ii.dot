digraph "CFG for '_Z22computeMinEnergyMatrixPfS_ii' function" {
	label="CFG for '_Z22computeMinEnergyMatrixPfS_ii' function";

	Node0x58cf990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %5, %11\l  %13 = add i32 %12, %6\l  %14 = icmp slt i32 %13, %3\l  br i1 %14, label %15, label %84\l|{<s0>T|<s1>F}}"];
	Node0x58cf990:s0 -> Node0x58cfa20;
	Node0x58cf990:s1 -> Node0x58d1960;
	Node0x58cfa20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%15:\l15:                                               \l  %16 = icmp slt i32 %6, %3\l  br i1 %16, label %21, label %17\l|{<s0>T|<s1>F}}"];
	Node0x58cfa20:s0 -> Node0x58d1270;
	Node0x58cfa20:s1 -> Node0x58d1c40;
	Node0x58d1c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%17:\l17:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %18 = icmp sgt i32 %2, 1\l  br i1 %18, label %19, label %84\l|{<s0>T|<s1>F}}"];
	Node0x58d1c40:s0 -> Node0x58d2070;
	Node0x58d1c40:s1 -> Node0x58d1960;
	Node0x58d2070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%19:\l19:                                               \l  %20 = add nsw i32 %3, -1\l  br label %30\l}"];
	Node0x58d2070 -> Node0x58d2270;
	Node0x58d1270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%21:\l21:                                               \l  %22 = phi i32 [ %28, %21 ], [ %6, %15 ]\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds float, float addrspace(1)* %0, i64 %23\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !7\l  %26 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_row_energy, i32 0, i32 %22\l  store float %25, float addrspace(3)* %26, align 4, !tbaa !7\l  %27 = getelementptr inbounds float, float addrspace(1)* %1, i64 %23\l  store float %25, float addrspace(1)* %27, align 4, !tbaa !7\l  %28 = add i32 %22, %11\l  %29 = icmp slt i32 %28, %3\l  br i1 %29, label %21, label %17, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x58d1270:s0 -> Node0x58d1270;
	Node0x58d1270:s1 -> Node0x58d1c40;
	Node0x58d2270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%30:\l30:                                               \l  %31 = phi i32 [ 1, %19 ], [ %71, %70 ]\l  %32 = phi \<4 x float\> [ undef, %19 ], [ %36, %70 ]\l  br i1 %16, label %33, label %35\l|{<s0>T|<s1>F}}"];
	Node0x58d2270:s0 -> Node0x58d1b30;
	Node0x58d2270:s1 -> Node0x58d1bc0;
	Node0x58d1b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%33:\l33:                                               \l  %34 = mul nsw i32 %31, %3\l  br label %39\l}"];
	Node0x58d1b30 -> Node0x58d4280;
	Node0x58d1bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%35:\l35:                                               \l  %36 = phi \<4 x float\> [ %32, %30 ], [ %67, %57 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %16, label %37, label %70\l|{<s0>T|<s1>F}}"];
	Node0x58d1bc0:s0 -> Node0x58d4640;
	Node0x58d1bc0:s1 -> Node0x58d32a0;
	Node0x58d4640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%37:\l37:                                               \l  %38 = mul nsw i32 %31, %3\l  br label %73\l}"];
	Node0x58d4640 -> Node0x58d47d0;
	Node0x58d4280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i32 [ 0, %33 ], [ %66, %57 ]\l  %41 = phi i32 [ %6, %33 ], [ %68, %57 ]\l  %42 = phi \<4 x float\> [ %32, %33 ], [ %67, %57 ]\l  %43 = icmp eq i32 %41, 0\l  br i1 %43, label %48, label %44\l|{<s0>T|<s1>F}}"];
	Node0x58d4280:s0 -> Node0x58d4b60;
	Node0x58d4280:s1 -> Node0x58d4bf0;
	Node0x58d4bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%44:\l44:                                               \l  %45 = add nsw i32 %41, -1\l  %46 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_row_energy, i32 0, i32 %45\l  %47 = load float, float addrspace(3)* %46, align 4, !tbaa !7\l  br label %48\l}"];
	Node0x58d4bf0 -> Node0x58d4b60;
	Node0x58d4b60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi contract float [ %47, %44 ], [ 1.000000e+09, %39 ]\l  %50 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_row_energy, i32 0, i32 %41\l  %51 = load float, float addrspace(3)* %50, align 4, !tbaa !7\l  %52 = icmp eq i32 %41, %20\l  br i1 %52, label %57, label %53\l|{<s0>T|<s1>F}}"];
	Node0x58d4b60:s0 -> Node0x58d4340;
	Node0x58d4b60:s1 -> Node0x58d5c10;
	Node0x58d5c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%53:\l53:                                               \l  %54 = add nsw i32 %41, 1\l  %55 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_row_energy, i32 0, i32 %54\l  %56 = load float, float addrspace(3)* %55, align 4, !tbaa !7\l  br label %57\l}"];
	Node0x58d5c10 -> Node0x58d4340;
	Node0x58d4340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  %58 = phi contract float [ %56, %53 ], [ 1.000000e+09, %48 ]\l  %59 = add nsw i32 %41, %34\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %63 = tail call float @llvm.minnum.f32(float %51, float %58)\l  %64 = tail call float @llvm.minnum.f32(float %49, float %63)\l  %65 = fadd contract float %62, %64\l  %66 = add nuw nsw i32 %40, 1\l  %67 = insertelement \<4 x float\> %42, float %65, i32 %40\l  %68 = add i32 %41, %11\l  %69 = icmp slt i32 %68, %3\l  br i1 %69, label %39, label %35, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x58d4340:s0 -> Node0x58d4280;
	Node0x58d4340:s1 -> Node0x58d1bc0;
	Node0x58d32a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%70:\l70:                                               \l  %71 = add nuw nsw i32 %31, 1\l  %72 = icmp eq i32 %71, %2\l  br i1 %72, label %84, label %30, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x58d32a0:s0 -> Node0x58d1960;
	Node0x58d32a0:s1 -> Node0x58d2270;
	Node0x58d47d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  %74 = phi i32 [ %6, %37 ], [ %82, %73 ]\l  %75 = phi i32 [ 0, %37 ], [ %78, %73 ]\l  %76 = extractelement \<4 x float\> %36, i32 %75\l  %77 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_row_energy, i32 0, i32 %74\l  store float %76, float addrspace(3)* %77, align 4, !tbaa !7\l  %78 = add nuw nsw i32 %75, 1\l  %79 = add nsw i32 %74, %38\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  store float %76, float addrspace(1)* %81, align 4, !tbaa !7\l  %82 = add i32 %74, %11\l  %83 = icmp slt i32 %82, %3\l  br i1 %83, label %73, label %70, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x58d47d0:s0 -> Node0x58d47d0;
	Node0x58d47d0:s1 -> Node0x58d32a0;
	Node0x58d1960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%84:\l84:                                               \l  ret void\l}"];
}
