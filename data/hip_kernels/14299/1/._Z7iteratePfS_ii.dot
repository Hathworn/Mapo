digraph "CFG for '_Z7iteratePfS_ii' function" {
	label="CFG for '_Z7iteratePfS_ii' function";

	Node0x605fee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !5\l  %13 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !14, !invariant.load\l... !15\l  %16 = zext i16 %15 to i32\l  %17 = udiv i32 %12, %16\l  %18 = mul i32 %17, %16\l  %19 = icmp ugt i32 %12, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %8\l  %23 = add i32 %22, %7\l  %24 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !14, !invariant.load\l... !15\l  %27 = zext i16 %26 to i32\l  %28 = mul i32 %23, %27\l  %29 = add i32 %28, %6\l  %30 = mul i32 %29, %16\l  %31 = add i32 %5, %3\l  %32 = add i32 %31, %30\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %36 = shl nuw nsw i32 %6, 5\l  %37 = add nuw nsw i32 %36, %5\l  %38 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ7iteratePfS_iiE16originalMatrixDS, i32 0, i32 %37\l  store float %35, float addrspace(3)* %38, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %39 = srem i32 %32, %2\l  %40 = icmp eq i32 %39, 0\l  %41 = add nsw i32 %2, -1\l  %42 = icmp eq i32 %39, %41\l  %43 = select i1 %40, i1 true, i1 %42\l  %44 = icmp slt i32 %32, %2\l  %45 = select i1 %43, i1 true, i1 %44\l  br i1 %45, label %50, label %46\l|{<s0>T|<s1>F}}"];
	Node0x605fee0:s0 -> Node0x6065370;
	Node0x605fee0:s1 -> Node0x6065400;
	Node0x6065400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%46:\l46:                                               \l  %47 = mul nsw i32 %2, %2\l  %48 = sub nsw i32 %47, %2\l  %49 = icmp slt i32 %32, %48\l  br i1 %49, label %52, label %50\l|{<s0>T|<s1>F}}"];
	Node0x6065400:s0 -> Node0x60656f0;
	Node0x6065400:s1 -> Node0x6065370;
	Node0x6065370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%50:\l50:                                               \l  %51 = load float, float addrspace(3)* %38, align 4, !tbaa !16\l  br label %95\l}"];
	Node0x6065370 -> Node0x6065890;
	Node0x60656f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%52:\l52:                                               \l  %53 = sub nsw i32 %32, %2\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %57 = add nsw i32 %32, %2\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %61 = icmp eq i32 %5, 0\l  %62 = icmp eq i32 %6, 0\l  %63 = select i1 %61, i1 %62, i1 false\l  br i1 %63, label %64, label %69\l|{<s0>T|<s1>F}}"];
	Node0x60656f0:s0 -> Node0x6065fc0;
	Node0x60656f0:s1 -> Node0x6066050;
	Node0x6065fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%64:\l64:                                               \l  %65 = add nsw i32 %32, -1\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  %68 = addrspacecast float addrspace(1)* %67 to float*\l  br label %73\l}"];
	Node0x6065fc0 -> Node0x60665a0;
	Node0x6066050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%69:\l69:                                               \l  %70 = add nsw i32 %37, -1\l  %71 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ7iteratePfS_iiE16originalMatrixDS, i32 0, i32 %70\l  %72 = addrspacecast float addrspace(3)* %71 to float*\l  br label %73\l}"];
	Node0x6066050 -> Node0x60665a0;
	Node0x60665a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%73:\l73:                                               \l  %74 = phi float* [ %68, %64 ], [ %72, %69 ]\l  %75 = load float, float* %74, align 4, !tbaa !16\l  %76 = icmp eq i32 %6, 31\l  %77 = icmp eq i32 %5, 31\l  %78 = select i1 %76, i1 %77, i1 false\l  br i1 %78, label %79, label %84\l|{<s0>T|<s1>F}}"];
	Node0x60665a0:s0 -> Node0x6066bd0;
	Node0x60665a0:s1 -> Node0x6066c20;
	Node0x6066bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%79:\l79:                                               \l  %80 = add nsw i32 %32, 1\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %81\l  %83 = addrspacecast float addrspace(1)* %82 to float*\l  br label %88\l}"];
	Node0x6066bd0 -> Node0x6066f60;
	Node0x6066c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%84:\l84:                                               \l  %85 = add nuw nsw i32 %37, 1\l  %86 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ7iteratePfS_iiE16originalMatrixDS, i32 0, i32 %85\l  %87 = addrspacecast float addrspace(3)* %86 to float*\l  br label %88\l}"];
	Node0x6066c20 -> Node0x6066f60;
	Node0x6066f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%88:\l88:                                               \l  %89 = phi float* [ %83, %79 ], [ %87, %84 ]\l  %90 = load float, float* %89, align 4, !tbaa !16\l  %91 = fadd contract float %75, %90\l  %92 = fadd contract float %56, %91\l  %93 = fadd contract float %60, %92\l  %94 = fmul contract float %93, 2.500000e-01\l  br label %95\l}"];
	Node0x6066f60 -> Node0x6065890;
	Node0x6065890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%95:\l95:                                               \l  %96 = phi float [ %51, %50 ], [ %94, %88 ]\l  %97 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  store float %96, float addrspace(1)* %97, align 4, !tbaa !16\l  ret void\l}"];
}
