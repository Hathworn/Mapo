digraph "CFG for '_Z21GetScaleFactorsKernelPfS_S_S_ii' function" {
	label="CFG for '_Z21GetScaleFactorsKernelPfS_S_S_ii' function";

	Node0x4c94c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = zext i32 %7 to i64\l  %9 = getelementptr inbounds float, float addrspace(1)* %2, i64 %8\l  %10 = load float, float addrspace(1)* %9, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %11 = fmul contract float %10, %10\l  %12 = sitofp i32 %5 to float\l  %13 = fadd contract float %12, -1.000000e+00\l  %14 = fmul contract float %13, %11\l  %15 = getelementptr inbounds float, float addrspace(1)* %1, i64 %8\l  %16 = load float, float addrspace(1)* %15, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %43\l}"];
	Node0x4c94c40 -> Node0x4c95a50;
	Node0x4c97a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%17:\l17:                                               \l  store float %171, float addrspace(1)* %15, align 4, !tbaa !5\l  %18 = add nsw i32 %5, 512\l  %19 = sitofp i32 %18 to float\l  %20 = fadd contract float %19, -1.000000e+00\l  %21 = fdiv contract float %174, %20\l  %22 = fcmp olt float %21, 0x39F0000000000000\l  %23 = select i1 %22, float 0x41F0000000000000, float 1.000000e+00\l  %24 = fmul float %21, %23\l  %25 = tail call float @llvm.sqrt.f32(float %24)\l  %26 = bitcast float %25 to i32\l  %27 = add nsw i32 %26, -1\l  %28 = bitcast i32 %27 to float\l  %29 = add nsw i32 %26, 1\l  %30 = bitcast i32 %29 to float\l  %31 = tail call i1 @llvm.amdgcn.class.f32(float %24, i32 608)\l  %32 = select i1 %22, float 0x3EF0000000000000, float 1.000000e+00\l  %33 = fneg float %30\l  %34 = tail call float @llvm.fma.f32(float %33, float %25, float %24)\l  %35 = fcmp ogt float %34, 0.000000e+00\l  %36 = fneg float %28\l  %37 = tail call float @llvm.fma.f32(float %36, float %25, float %24)\l  %38 = fcmp ole float %37, 0.000000e+00\l  %39 = select i1 %38, float %28, float %25\l  %40 = select i1 %35, float %30, float %39\l  %41 = fmul float %32, %40\l  %42 = select i1 %31, float %24, float %41\l  store float %42, float addrspace(1)* %9, align 4, !tbaa !5\l  ret void\l}"];
	Node0x4c95a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi i32 [ 0, %6 ], [ %165, %43 ]\l  %45 = phi float [ %16, %6 ], [ %171, %43 ]\l  %46 = phi float [ %14, %6 ], [ %174, %43 ]\l  %47 = mul nsw i32 %44, %4\l  %48 = add i32 %47, %7\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %52 = fsub contract float %51, %45\l  %53 = or i32 %44, 1\l  %54 = add i32 %53, %5\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %3, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %58 = fmul contract float %52, %57\l  %59 = fadd contract float %45, %58\l  %60 = fsub contract float %51, %59\l  %61 = fmul contract float %52, %60\l  %62 = fadd contract float %46, %61\l  %63 = mul nsw i32 %53, %4\l  %64 = add i32 %63, %7\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %0, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %68 = fsub contract float %67, %59\l  %69 = or i32 %44, 2\l  %70 = add i32 %69, %5\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %3, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %74 = fmul contract float %68, %73\l  %75 = fadd contract float %59, %74\l  %76 = fsub contract float %67, %75\l  %77 = fmul contract float %68, %76\l  %78 = fadd contract float %62, %77\l  %79 = mul nsw i32 %69, %4\l  %80 = add i32 %79, %7\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %84 = fsub contract float %83, %75\l  %85 = or i32 %44, 3\l  %86 = add i32 %85, %5\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %3, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %90 = fmul contract float %84, %89\l  %91 = fadd contract float %75, %90\l  %92 = fsub contract float %83, %91\l  %93 = fmul contract float %84, %92\l  %94 = fadd contract float %78, %93\l  %95 = mul nsw i32 %85, %4\l  %96 = add i32 %95, %7\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %100 = fsub contract float %99, %91\l  %101 = or i32 %44, 4\l  %102 = add i32 %101, %5\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %3, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %106 = fmul contract float %100, %105\l  %107 = fadd contract float %91, %106\l  %108 = fsub contract float %99, %107\l  %109 = fmul contract float %100, %108\l  %110 = fadd contract float %94, %109\l  %111 = mul nsw i32 %101, %4\l  %112 = add i32 %111, %7\l  %113 = zext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %0, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %116 = fsub contract float %115, %107\l  %117 = or i32 %44, 5\l  %118 = add i32 %117, %5\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %3, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %122 = fmul contract float %116, %121\l  %123 = fadd contract float %107, %122\l  %124 = fsub contract float %115, %123\l  %125 = fmul contract float %116, %124\l  %126 = fadd contract float %110, %125\l  %127 = mul nsw i32 %117, %4\l  %128 = add i32 %127, %7\l  %129 = zext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %0, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %132 = fsub contract float %131, %123\l  %133 = or i32 %44, 6\l  %134 = add i32 %133, %5\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds float, float addrspace(1)* %3, i64 %135\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %138 = fmul contract float %132, %137\l  %139 = fadd contract float %123, %138\l  %140 = fsub contract float %131, %139\l  %141 = fmul contract float %132, %140\l  %142 = fadd contract float %126, %141\l  %143 = mul nsw i32 %133, %4\l  %144 = add i32 %143, %7\l  %145 = zext i32 %144 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %0, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %148 = fsub contract float %147, %139\l  %149 = or i32 %44, 7\l  %150 = add i32 %149, %5\l  %151 = sext i32 %150 to i64\l  %152 = getelementptr inbounds float, float addrspace(1)* %3, i64 %151\l  %153 = load float, float addrspace(1)* %152, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %154 = fmul contract float %148, %153\l  %155 = fadd contract float %139, %154\l  %156 = fsub contract float %147, %155\l  %157 = fmul contract float %148, %156\l  %158 = fadd contract float %142, %157\l  %159 = mul nsw i32 %149, %4\l  %160 = add i32 %159, %7\l  %161 = zext i32 %160 to i64\l  %162 = getelementptr inbounds float, float addrspace(1)* %0, i64 %161\l  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %164 = fsub contract float %163, %155\l  %165 = add nuw nsw i32 %44, 8\l  %166 = add i32 %165, %5\l  %167 = sext i32 %166 to i64\l  %168 = getelementptr inbounds float, float addrspace(1)* %3, i64 %167\l  %169 = load float, float addrspace(1)* %168, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %170 = fmul contract float %164, %169\l  %171 = fadd contract float %155, %170\l  %172 = fsub contract float %163, %171\l  %173 = fmul contract float %164, %172\l  %174 = fadd contract float %158, %173\l  %175 = icmp eq i32 %165, 512\l  br i1 %175, label %17, label %43, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4c95a50:s0 -> Node0x4c97a10;
	Node0x4c95a50:s1 -> Node0x4c95a50;
}
