digraph "CFG for '_Z23kernelGenerateTrianglesPiP15HIP_vector_typeIsLj2EEPS0_IiLj3EES_iii' function" {
	label="CFG for '_Z23kernelGenerateTrianglesPiP15HIP_vector_typeIsLj2EEPS0_IiLj3EES_iii' function";

	Node0x64a16f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp sge i32 %16, %5\l  %18 = icmp slt i32 %16, %6\l  %19 = select i1 %17, i1 %18, i1 false\l  br i1 %19, label %20, label %85\l|{<s0>T|<s1>F}}"];
	Node0x64a16f0:s0 -> Node0x64a36a0;
	Node0x64a16f0:s1 -> Node0x64a3730;
	Node0x64a36a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%20:\l20:                                               \l  %21 = mul nsw i32 %16, %4\l  %22 = add nsw i32 %21, %5\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %23, i32 0, i32 0, i32 0, i64 1\l  %25 = load i16, i16 addrspace(1)* %24, align 2\l  %26 = sext i16 %25 to i32\l  %27 = icmp sgt i16 %25, 0\l  %28 = icmp slt i32 %26, %6\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %85\l|{<s0>T|<s1>F}}"];
	Node0x64a36a0:s0 -> Node0x64a3e30;
	Node0x64a36a0:s1 -> Node0x64a3730;
	Node0x64a3e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%30:\l30:                                               \l  %31 = add nsw i32 %16, -1\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %2, i64 %35\l  br label %37\l}"];
	Node0x64a3e30 -> Node0x64a4b90;
	Node0x64a4b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi i32 [ %81, %76 ], [ %26, %30 ]\l  %39 = phi i64 [ %48, %76 ], [ %23, %30 ]\l  %40 = phi %struct.HIP_vector_type.0 addrspace(1)* [ %78, %76 ], [ %36, %30 ]\l  %41 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %39, i32 0, i32 0, i32 0, i64 0\l  %42 = load i16, i16 addrspace(1)* %41, align 4\l  %43 = add nsw i32 %38, %21\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7\l  %47 = add nsw i32 %43, 1\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %48\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !7\l  %51 = add i32 %43, %4\l  %52 = add nsw i32 %51, 1\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !7\l  %56 = sext i32 %51 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %56\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !7\l  switch i16 %42, label %76 [\l    i16 0, label %67\l    i16 1, label %59\l    i16 2, label %60\l    i16 3, label %61\l    i16 4, label %62\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2|<s4>3|<s5>4}}"];
	Node0x64a4b90:s0 -> Node0x64a4c80;
	Node0x64a4b90:s1 -> Node0x64a6040;
	Node0x64a4b90:s2 -> Node0x64a6090;
	Node0x64a4b90:s3 -> Node0x64a6150;
	Node0x64a4b90:s4 -> Node0x64a6210;
	Node0x64a4b90:s5 -> Node0x64a62d0;
	Node0x64a6090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%59:\l59:                                               \l  br label %67\l}"];
	Node0x64a6090 -> Node0x64a6040;
	Node0x64a6150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%60:\l60:                                               \l  br label %67\l}"];
	Node0x64a6150 -> Node0x64a6040;
	Node0x64a6210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%61:\l61:                                               \l  br label %67\l}"];
	Node0x64a6210 -> Node0x64a6040;
	Node0x64a62d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%62:\l62:                                               \l  %63 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %40, i64 0, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  store i32 %55, i32 addrspace(1)* %63, align 4\l  %64 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %40, i64 0, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store i32 %46, i32 addrspace(1)* %64, align 4\l  %65 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %40, i64 0, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  store i32 %50, i32 addrspace(1)* %65, align 4\l  %66 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %40, i64 1\l  br label %67\l}"];
	Node0x64a62d0 -> Node0x64a6040;
	Node0x64a6040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%67:\l67:                                               \l  %68 = phi %struct.HIP_vector_type.0 addrspace(1)* [ %40, %61 ], [ %40, %60\l... ], [ %40, %59 ], [ %66, %62 ], [ %40, %37 ]\l  %69 = phi i32 [ %55, %61 ], [ %50, %60 ], [ %46, %59 ], [ %58, %62 ], [ %58,\l... %37 ]\l  %70 = phi i64 [ 0, %61 ], [ 0, %60 ], [ 0, %59 ], [ 1, %62 ], [ 0, %37 ]\l  %71 = phi i32 [ %46, %61 ], [ %58, %60 ], [ %55, %59 ], [ %46, %62 ], [ %50,\l... %37 ]\l  %72 = phi i32 [ %50, %61 ], [ %46, %60 ], [ %58, %59 ], [ %55, %62 ], [ %55,\l... %37 ]\l  %73 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %68, i64 0, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  store i32 %69, i32 addrspace(1)* %73, align 4\l  %74 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %40, i64 %70, i32 0, i32 0, i32 0,\l... i32 0, i64 1\l  store i32 %71, i32 addrspace(1)* %74, align 4\l  %75 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %40, i64 %70, i32 0, i32 0, i32 0,\l... i32 0, i64 2\l  store i32 %72, i32 addrspace(1)* %75, align 4\l  br label %76\l}"];
	Node0x64a6040 -> Node0x64a4c80;
	Node0x64a4c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  %77 = phi %struct.HIP_vector_type.0 addrspace(1)* [ %40, %37 ], [ %68, %67 ]\l  %78 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %77, i64 1\l  %79 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %48, i32 0, i32 0, i32 0, i64 1\l  %80 = load i16, i16 addrspace(1)* %79, align 2\l  %81 = sext i16 %80 to i32\l  %82 = icmp sgt i16 %80, 0\l  %83 = icmp slt i32 %81, %6\l  %84 = select i1 %82, i1 %83, i1 false\l  br i1 %84, label %37, label %85, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x64a4c80:s0 -> Node0x64a4b90;
	Node0x64a4c80:s1 -> Node0x64a3730;
	Node0x64a3730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%85:\l85:                                               \l  ret void\l}"];
}
