digraph "CFG for '_Z22kernel_pow_grad_devicePiiS_S_bj' function" {
	label="CFG for '_Z22kernel_pow_grad_devicePiiS_S_bj' function";

	Node0x55351d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = mul i32 %7, %12\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %18 = add i32 %16, %17\l  %19 = udiv i32 %15, %12\l  %20 = mul i32 %19, %12\l  %21 = icmp ugt i32 %15, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %12\l  %25 = icmp ult i32 %18, %5\l  br i1 %25, label %26, label %47\l|{<s0>T|<s1>F}}"];
	Node0x55351d0:s0 -> Node0x55377a0;
	Node0x55351d0:s1 -> Node0x5537830;
	Node0x55377a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%26:\l26:                                               \l  %27 = add nsw i32 %1, -1\l  %28 = sitofp i32 %27 to float\l  %29 = tail call float @llvm.fabs.f32(float %28)\l  %30 = tail call float @llvm.trunc.f32(float %29)\l  %31 = fcmp oeq float %29, %30\l  %32 = zext i1 %31 to i32\l  %33 = fmul float %30, 5.000000e-01\l  %34 = tail call float @llvm.amdgcn.fract.f32(float %33)\l  %35 = tail call i1 @llvm.amdgcn.class.f32(float %33, i32 516)\l  %36 = select i1 %35, float 0.000000e+00, float %34\l  %37 = fcmp oeq float %36, 0.000000e+00\l  %38 = and i1 %31, %37\l  %39 = zext i1 %38 to i32\l  %40 = add nuw nsw i32 %39, %32\l  %41 = icmp eq i32 %40, 1\l  %42 = icmp ne i32 %40, 0\l  %43 = fcmp oeq float %29, 0x7FF0000000000000\l  %44 = bitcast float %28 to i32\l  %45 = icmp slt i32 %1, 1\l  %46 = icmp eq i32 %27, 0\l  br i1 %43, label %224, label %48\l|{<s0>T|<s1>F}}"];
	Node0x55377a0:s0 -> Node0x55396d0;
	Node0x55377a0:s1 -> Node0x5539760;
	Node0x5537830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%47:\l47:                                               \l  ret void\l}"];
	Node0x5539760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d8564670",label="{%48:\l48:                                               \l  %49 = phi i32 [ %222, %48 ], [ %18, %26 ]\l  %50 = zext i32 %49 to i64\l  %51 = select i1 %4, i64 0, i64 %50\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !16\l  %54 = mul nsw i32 %53, %1\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %50\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !16\l  %57 = sitofp i32 %56 to float\l  %58 = tail call float @llvm.fabs.f32(float %57)\l  %59 = tail call float @llvm.amdgcn.frexp.mant.f32(float %58)\l  %60 = fcmp olt float %59, 0x3FE5555560000000\l  %61 = zext i1 %60 to i32\l  %62 = tail call float @llvm.amdgcn.ldexp.f32(float %59, i32 %61)\l  %63 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %58)\l  %64 = sub nsw i32 %63, %61\l  %65 = fadd float %62, -1.000000e+00\l  %66 = fadd float %62, 1.000000e+00\l  %67 = fadd float %66, -1.000000e+00\l  %68 = fsub float %62, %67\l  %69 = tail call float @llvm.amdgcn.rcp.f32(float %66)\l  %70 = fmul float %65, %69\l  %71 = fmul float %66, %70\l  %72 = fneg float %71\l  %73 = tail call float @llvm.fma.f32(float %70, float %66, float %72)\l  %74 = tail call float @llvm.fma.f32(float %70, float %68, float %73)\l  %75 = fadd float %71, %74\l  %76 = fsub float %75, %71\l  %77 = fsub float %74, %76\l  %78 = fsub float %65, %75\l  %79 = fsub float %65, %78\l  %80 = fsub float %79, %75\l  %81 = fsub float %80, %77\l  %82 = fadd float %78, %81\l  %83 = fmul float %69, %82\l  %84 = fadd float %70, %83\l  %85 = fsub float %84, %70\l  %86 = fsub float %83, %85\l  %87 = fmul float %84, %84\l  %88 = fneg float %87\l  %89 = tail call float @llvm.fma.f32(float %84, float %84, float %88)\l  %90 = fmul float %86, 2.000000e+00\l  %91 = tail call float @llvm.fma.f32(float %84, float %90, float %89)\l  %92 = fadd float %87, %91\l  %93 = fsub float %92, %87\l  %94 = fsub float %91, %93\l  %95 = tail call float @llvm.fmuladd.f32(float %92, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %96 = tail call float @llvm.fmuladd.f32(float %92, float %95, float\l... 0x3FD999BDE0000000)\l  %97 = sitofp i32 %64 to float\l  %98 = fmul float %97, 0x3FE62E4300000000\l  %99 = fneg float %98\l  %100 = tail call float @llvm.fma.f32(float %97, float 0x3FE62E4300000000,\l... float %99)\l  %101 = tail call float @llvm.fma.f32(float %97, float 0xBE205C6100000000,\l... float %100)\l  %102 = fadd float %98, %101\l  %103 = fsub float %102, %98\l  %104 = fsub float %101, %103\l  %105 = tail call float @llvm.amdgcn.ldexp.f32(float %84, i32 1)\l  %106 = fmul float %84, %92\l  %107 = fneg float %106\l  %108 = tail call float @llvm.fma.f32(float %92, float %84, float %107)\l  %109 = tail call float @llvm.fma.f32(float %92, float %86, float %108)\l  %110 = tail call float @llvm.fma.f32(float %94, float %84, float %109)\l  %111 = fadd float %106, %110\l  %112 = fsub float %111, %106\l  %113 = fsub float %110, %112\l  %114 = fmul float %92, %96\l  %115 = fneg float %114\l  %116 = tail call float @llvm.fma.f32(float %92, float %96, float %115)\l  %117 = tail call float @llvm.fma.f32(float %94, float %96, float %116)\l  %118 = fadd float %114, %117\l  %119 = fsub float %118, %114\l  %120 = fsub float %117, %119\l  %121 = fadd float %118, 0x3FE5555540000000\l  %122 = fadd float %121, 0xBFE5555540000000\l  %123 = fsub float %118, %122\l  %124 = fadd float %120, 0x3E2E720200000000\l  %125 = fadd float %124, %123\l  %126 = fadd float %121, %125\l  %127 = fsub float %126, %121\l  %128 = fsub float %125, %127\l  %129 = fmul float %111, %126\l  %130 = fneg float %129\l  %131 = tail call float @llvm.fma.f32(float %111, float %126, float %130)\l  %132 = tail call float @llvm.fma.f32(float %111, float %128, float %131)\l  %133 = tail call float @llvm.fma.f32(float %113, float %126, float %132)\l  %134 = tail call float @llvm.amdgcn.ldexp.f32(float %86, i32 1)\l  %135 = fadd float %129, %133\l  %136 = fsub float %135, %129\l  %137 = fsub float %133, %136\l  %138 = fadd float %105, %135\l  %139 = fsub float %138, %105\l  %140 = fsub float %135, %139\l  %141 = fadd float %134, %137\l  %142 = fadd float %141, %140\l  %143 = fadd float %138, %142\l  %144 = fsub float %143, %138\l  %145 = fsub float %142, %144\l  %146 = fadd float %102, %143\l  %147 = fsub float %146, %102\l  %148 = fsub float %146, %147\l  %149 = fsub float %102, %148\l  %150 = fsub float %143, %147\l  %151 = fadd float %150, %149\l  %152 = fadd float %104, %145\l  %153 = fsub float %152, %104\l  %154 = fsub float %152, %153\l  %155 = fsub float %104, %154\l  %156 = fsub float %145, %153\l  %157 = fadd float %156, %155\l  %158 = fadd float %152, %151\l  %159 = fadd float %146, %158\l  %160 = fsub float %159, %146\l  %161 = fsub float %158, %160\l  %162 = fadd float %157, %161\l  %163 = fadd float %159, %162\l  %164 = fsub float %163, %159\l  %165 = fsub float %162, %164\l  %166 = fmul float %163, %28\l  %167 = fneg float %166\l  %168 = tail call float @llvm.fma.f32(float %28, float %163, float %167)\l  %169 = tail call float @llvm.fma.f32(float %28, float %165, float %168)\l  %170 = fadd float %166, %169\l  %171 = fsub float %170, %166\l  %172 = fsub float %169, %171\l  %173 = tail call float @llvm.fabs.f32(float %166) #3\l  %174 = fcmp oeq float %173, 0x7FF0000000000000\l  %175 = select i1 %174, float %166, float %170\l  %176 = tail call float @llvm.fabs.f32(float %175) #3\l  %177 = fcmp oeq float %176, 0x7FF0000000000000\l  %178 = select i1 %177, float 0.000000e+00, float %172\l  %179 = fcmp oeq float %175, 0x40562E4300000000\l  %180 = select i1 %179, float 0x3EE0000000000000, float 0.000000e+00\l  %181 = fsub float %175, %180\l  %182 = fadd float %180, %178\l  %183 = fmul float %181, 0x3FF7154760000000\l  %184 = tail call float @llvm.rint.f32(float %183)\l  %185 = fcmp ogt float %181, 0x40562E4300000000\l  %186 = fcmp olt float %181, 0xC059D1DA00000000\l  %187 = fneg float %183\l  %188 = tail call float @llvm.fma.f32(float %181, float 0x3FF7154760000000,\l... float %187)\l  %189 = tail call float @llvm.fma.f32(float %181, float 0x3E54AE0BE0000000,\l... float %188)\l  %190 = fsub float %183, %184\l  %191 = fadd float %189, %190\l  %192 = tail call float @llvm.exp2.f32(float %191)\l  %193 = fptosi float %184 to i32\l  %194 = tail call float @llvm.amdgcn.ldexp.f32(float %192, i32 %193)\l  %195 = select i1 %186, float 0.000000e+00, float %194\l  %196 = select i1 %185, float 0x7FF0000000000000, float %195\l  %197 = tail call float @llvm.fma.f32(float %196, float %182, float %196)\l  %198 = tail call float @llvm.fabs.f32(float %196) #3\l  %199 = fcmp oeq float %198, 0x7FF0000000000000\l  %200 = select i1 %199, float %196, float %197\l  %201 = icmp slt i32 %56, 0\l  %202 = and i1 %41, %201\l  %203 = select i1 %202, float -0.000000e+00, float 0.000000e+00\l  %204 = tail call float @llvm.copysign.f32(float %200, float %203)\l  %205 = icmp sgt i32 %56, -1\l  %206 = select i1 %205, i1 true, i1 %42\l  %207 = select i1 %206, float %204, float 0x7FF8000000000000\l  %208 = fcmp oeq float %58, 0x7FF0000000000000\l  %209 = icmp eq i32 %56, 0\l  %210 = or i1 %209, %208\l  %211 = xor i1 %45, %209\l  %212 = select i1 %211, float 0.000000e+00, float 0x7FF0000000000000\l  %213 = select i1 %41, float %57, float 0.000000e+00\l  %214 = tail call float @llvm.copysign.f32(float %212, float %213)\l  %215 = select i1 %210, float %214, float %207\l  %216 = icmp eq i32 %56, 1\l  %217 = or i1 %46, %216\l  %218 = fptosi float %215 to i32\l  %219 = select i1 %217, i32 1, i32 %218\l  %220 = mul nsw i32 %54, %219\l  %221 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %50\l  store i32 %220, i32 addrspace(1)* %221, align 4, !tbaa !16\l  %222 = add i32 %49, %24\l  %223 = icmp ult i32 %222, %5\l  br i1 %223, label %48, label %47, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5539760:s0 -> Node0x5539760;
	Node0x5539760:s1 -> Node0x5537830;
	Node0x55396d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%224:\l224:                                              \l  %225 = phi i32 [ %256, %224 ], [ %18, %26 ]\l  %226 = zext i32 %225 to i64\l  %227 = select i1 %4, i64 0, i64 %226\l  %228 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %227\l  %229 = load i32, i32 addrspace(1)* %228, align 4, !tbaa !16\l  %230 = mul nsw i32 %229, %1\l  %231 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %226\l  %232 = load i32, i32 addrspace(1)* %231, align 4, !tbaa !16\l  %233 = sitofp i32 %232 to float\l  %234 = tail call float @llvm.fabs.f32(float %233)\l  %235 = fcmp oeq float %234, 1.000000e+00\l  %236 = fadd float %234, -1.000000e+00\l  %237 = bitcast float %236 to i32\l  %238 = xor i32 %237, %44\l  %239 = icmp sgt i32 %238, -1\l  %240 = select i1 %239, float 0x7FF0000000000000, float 0.000000e+00\l  %241 = select i1 %235, float %234, float %240\l  %242 = fcmp oeq float %234, 0x7FF0000000000000\l  %243 = icmp eq i32 %232, 0\l  %244 = or i1 %243, %242\l  %245 = xor i1 %45, %243\l  %246 = select i1 %245, float 0.000000e+00, float 0x7FF0000000000000\l  %247 = select i1 %41, float %233, float 0.000000e+00\l  %248 = tail call float @llvm.copysign.f32(float %246, float %247)\l  %249 = select i1 %244, float %248, float %241\l  %250 = icmp eq i32 %232, 1\l  %251 = or i1 %46, %250\l  %252 = fptosi float %249 to i32\l  %253 = select i1 %251, i32 1, i32 %252\l  %254 = mul nsw i32 %230, %253\l  %255 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %226\l  store i32 %254, i32 addrspace(1)* %255, align 4, !tbaa !16\l  %256 = add i32 %225, %24\l  %257 = icmp ult i32 %256, %5\l  br i1 %257, label %224, label %47, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x55396d0:s0 -> Node0x55396d0;
	Node0x55396d0:s1 -> Node0x5537830;
}
