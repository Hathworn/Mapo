digraph "CFG for '_Z16tensor_3d_equalsiiiPKfiiiiS0_iiiiPi' function" {
	label="CFG for '_Z16tensor_3d_equalsiiiPKfiiiiS0_iiiiPi' function";

	Node0x5f88f00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %17 = getelementptr i8, i8 addrspace(4)* %16, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %15, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %25 = getelementptr i8, i8 addrspace(4)* %16, i64 6\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 2, !range !4, !invariant.load !5\l  %28 = zext i16 %27 to i32\l  %29 = mul i32 %24, %28\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %31 = add i32 %29, %30\l  %32 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %33 = getelementptr i8, i8 addrspace(4)* %16, i64 8\l  %34 = bitcast i8 addrspace(4)* %33 to i16 addrspace(4)*\l  %35 = load i16, i16 addrspace(4)* %34, align 4, !range !4, !invariant.load !5\l  %36 = zext i16 %35 to i32\l  %37 = mul i32 %32, %36\l  %38 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !6\l  %39 = add i32 %37, %38\l  %40 = icmp slt i32 %23, %0\l  %41 = icmp slt i32 %31, %1\l  %42 = select i1 %40, i1 %41, i1 false\l  %43 = icmp slt i32 %39, %2\l  %44 = select i1 %42, i1 %43, i1 false\l  br i1 %44, label %45, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5f88f00:s0 -> Node0x5f8df70;
	Node0x5f88f00:s1 -> Node0x5f8e000;
	Node0x5f8df70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%45:\l45:                                               \l  %46 = mul nsw i32 %23, %5\l  %47 = add nsw i32 %46, %4\l  %48 = mul nsw i32 %31, %6\l  %49 = add nsw i32 %47, %48\l  %50 = mul nsw i32 %39, %7\l  %51 = add nsw i32 %49, %50\l  %52 = mul nsw i32 %23, %10\l  %53 = add nsw i32 %52, %9\l  %54 = mul nsw i32 %31, %11\l  %55 = add nsw i32 %53, %54\l  %56 = mul nsw i32 %39, %12\l  %57 = add nsw i32 %55, %56\l  %58 = sext i32 %51 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %3, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %61 = sext i32 %57 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %8, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %64 = fcmp contract une float %60, %63\l  br i1 %64, label %65, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5f8df70:s0 -> Node0x5f8d570;
	Node0x5f8df70:s1 -> Node0x5f8e000;
	Node0x5f8d570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%65:\l65:                                               \l  %66 = load i32, i32 addrspace(1)* %13, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %67 = add nsw i32 %66, 1\l  store i32 %67, i32 addrspace(1)* %13, align 4, !tbaa !11\l  br label %68\l}"];
	Node0x5f8d570 -> Node0x5f8e000;
	Node0x5f8e000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  ret void\l}"];
}
