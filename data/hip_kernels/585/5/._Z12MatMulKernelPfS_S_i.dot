digraph "CFG for '_Z12MatMulKernelPfS_S_i' function" {
	label="CFG for '_Z12MatMulKernelPfS_S_i' function";

	Node0x5604a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 2, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp sgt i32 %3, 0\l  %23 = mul nsw i32 %13, %3\l  %24 = sext i32 %23 to i64\l  br i1 %22, label %27, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5604a20:s0 -> Node0x5608480;
	Node0x5604a20:s1 -> Node0x5608510;
	Node0x5608510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%25:\l25:                                               \l  %26 = sext i32 %21 to i64\l  br label %56\l}"];
	Node0x5608510 -> Node0x56086c0;
	Node0x5608480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%27:\l27:                                               \l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %24\l  %29 = sext i32 %21 to i64\l  %30 = getelementptr float, float addrspace(1)* %1, i64 %29\l  %31 = and i32 %3, 7\l  %32 = icmp ult i32 %3, 8\l  br i1 %32, label %35, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5608480:s0 -> Node0x5606b90;
	Node0x5608480:s1 -> Node0x5606be0;
	Node0x5606be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%33:\l33:                                               \l  %34 = and i32 %3, -8\l  br label %61\l}"];
	Node0x5606be0 -> Node0x5608e00;
	Node0x5606b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%35:\l35:                                               \l  %36 = phi float [ undef, %27 ], [ %143, %61 ]\l  %37 = phi float [ 0.000000e+00, %27 ], [ %143, %61 ]\l  %38 = phi i32 [ 0, %27 ], [ %144, %61 ]\l  %39 = icmp eq i32 %31, 0\l  br i1 %39, label %56, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5606b90:s0 -> Node0x56086c0;
	Node0x5606b90:s1 -> Node0x560a070;
	Node0x560a070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi float [ %52, %40 ], [ %37, %35 ]\l  %42 = phi i32 [ %53, %40 ], [ %38, %35 ]\l  %43 = phi i32 [ %54, %40 ], [ 0, %35 ]\l  %44 = zext i32 %42 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %28, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = mul nsw i32 %42, %3\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr float, float addrspace(1)* %30, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %51 = fmul contract float %46, %50\l  %52 = fadd contract float %41, %51\l  %53 = add nuw nsw i32 %42, 1\l  %54 = add i32 %43, 1\l  %55 = icmp eq i32 %54, %31\l  br i1 %55, label %56, label %40, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x560a070:s0 -> Node0x56086c0;
	Node0x560a070:s1 -> Node0x560a070;
	Node0x56086c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%56:\l56:                                               \l  %57 = phi i64 [ %26, %25 ], [ %29, %40 ], [ %29, %35 ]\l  %58 = phi float [ 0.000000e+00, %25 ], [ %36, %35 ], [ %52, %40 ]\l  %59 = getelementptr inbounds float, float addrspace(1)* %2, i64 %24\l  %60 = getelementptr inbounds float, float addrspace(1)* %59, i64 %57\l  store float %58, float addrspace(1)* %60, align 4, !tbaa !7\l  ret void\l}"];
	Node0x5608e00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%61:\l61:                                               \l  %62 = phi float [ 0.000000e+00, %33 ], [ %143, %61 ]\l  %63 = phi i32 [ 0, %33 ], [ %144, %61 ]\l  %64 = phi i32 [ 0, %33 ], [ %145, %61 ]\l  %65 = zext i32 %63 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %28, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %68 = mul nsw i32 %63, %3\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr float, float addrspace(1)* %30, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %72 = fmul contract float %67, %71\l  %73 = fadd contract float %62, %72\l  %74 = or i32 %63, 1\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %28, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %78 = mul nsw i32 %74, %3\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr float, float addrspace(1)* %30, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %82 = fmul contract float %77, %81\l  %83 = fadd contract float %73, %82\l  %84 = or i32 %63, 2\l  %85 = zext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %28, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %88 = mul nsw i32 %84, %3\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr float, float addrspace(1)* %30, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %92 = fmul contract float %87, %91\l  %93 = fadd contract float %83, %92\l  %94 = or i32 %63, 3\l  %95 = zext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %28, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %98 = mul nsw i32 %94, %3\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr float, float addrspace(1)* %30, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %102 = fmul contract float %97, %101\l  %103 = fadd contract float %93, %102\l  %104 = or i32 %63, 4\l  %105 = zext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %28, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %108 = mul nsw i32 %104, %3\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr float, float addrspace(1)* %30, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %112 = fmul contract float %107, %111\l  %113 = fadd contract float %103, %112\l  %114 = or i32 %63, 5\l  %115 = zext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %28, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %118 = mul nsw i32 %114, %3\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr float, float addrspace(1)* %30, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %122 = fmul contract float %117, %121\l  %123 = fadd contract float %113, %122\l  %124 = or i32 %63, 6\l  %125 = zext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %28, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %128 = mul nsw i32 %124, %3\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr float, float addrspace(1)* %30, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %132 = fmul contract float %127, %131\l  %133 = fadd contract float %123, %132\l  %134 = or i32 %63, 7\l  %135 = zext i32 %134 to i64\l  %136 = getelementptr inbounds float, float addrspace(1)* %28, i64 %135\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %138 = mul nsw i32 %134, %3\l  %139 = sext i32 %138 to i64\l  %140 = getelementptr float, float addrspace(1)* %30, i64 %139\l  %141 = load float, float addrspace(1)* %140, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %142 = fmul contract float %137, %141\l  %143 = fadd contract float %133, %142\l  %144 = add nuw nsw i32 %63, 8\l  %145 = add i32 %64, 8\l  %146 = icmp eq i32 %145, %34\l  br i1 %146, label %35, label %61, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5608e00:s0 -> Node0x5606b90;
	Node0x5608e00:s1 -> Node0x5608e00;
}
