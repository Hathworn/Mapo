digraph "CFG for '_Z12MatMulKernelPfS_S_i' function" {
	label="CFG for '_Z12MatMulKernelPfS_S_i' function";

	Node0x554c560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = icmp sgt i32 %3, 0\l  %8 = mul nsw i32 %5, %3\l  %9 = sext i32 %8 to i64\l  br i1 %7, label %12, label %10\l|{<s0>T|<s1>F}}"];
	Node0x554c560:s0 -> Node0x554c5b0;
	Node0x554c560:s1 -> Node0x554e3a0;
	Node0x554e3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%10:\l10:                                               \l  %11 = zext i32 %6 to i64\l  br label %41\l}"];
	Node0x554e3a0 -> Node0x554e550;
	Node0x554c5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%12:\l12:                                               \l  %13 = getelementptr inbounds float, float addrspace(1)* %0, i64 %9\l  %14 = zext i32 %6 to i64\l  %15 = getelementptr float, float addrspace(1)* %1, i64 %14\l  %16 = and i32 %3, 7\l  %17 = icmp ult i32 %3, 8\l  br i1 %17, label %20, label %18\l|{<s0>T|<s1>F}}"];
	Node0x554c5b0:s0 -> Node0x554e290;
	Node0x554c5b0:s1 -> Node0x554ea20;
	Node0x554ea20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%18:\l18:                                               \l  %19 = and i32 %3, -8\l  br label %46\l}"];
	Node0x554ea20 -> Node0x554ec20;
	Node0x554e290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%20:\l20:                                               \l  %21 = phi float [ undef, %12 ], [ %128, %46 ]\l  %22 = phi float [ 0.000000e+00, %12 ], [ %128, %46 ]\l  %23 = phi i32 [ 0, %12 ], [ %129, %46 ]\l  %24 = icmp eq i32 %16, 0\l  br i1 %24, label %41, label %25\l|{<s0>T|<s1>F}}"];
	Node0x554e290:s0 -> Node0x554e550;
	Node0x554e290:s1 -> Node0x554fe90;
	Node0x554fe90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi float [ %37, %25 ], [ %22, %20 ]\l  %27 = phi i32 [ %38, %25 ], [ %23, %20 ]\l  %28 = phi i32 [ %39, %25 ], [ 0, %20 ]\l  %29 = zext i32 %27 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %13, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %32 = mul nsw i32 %27, %3\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr float, float addrspace(1)* %15, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %36 = fmul contract float %31, %35\l  %37 = fadd contract float %26, %36\l  %38 = add nuw nsw i32 %27, 1\l  %39 = add i32 %28, 1\l  %40 = icmp eq i32 %39, %16\l  br i1 %40, label %41, label %25, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x554fe90:s0 -> Node0x554e550;
	Node0x554fe90:s1 -> Node0x554fe90;
	Node0x554e550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%41:\l41:                                               \l  %42 = phi i64 [ %11, %10 ], [ %14, %25 ], [ %14, %20 ]\l  %43 = phi float [ 0.000000e+00, %10 ], [ %21, %20 ], [ %37, %25 ]\l  %44 = getelementptr inbounds float, float addrspace(1)* %2, i64 %9\l  %45 = getelementptr inbounds float, float addrspace(1)* %44, i64 %42\l  store float %43, float addrspace(1)* %45, align 4, !tbaa !5\l  ret void\l}"];
	Node0x554ec20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%46:\l46:                                               \l  %47 = phi float [ 0.000000e+00, %18 ], [ %128, %46 ]\l  %48 = phi i32 [ 0, %18 ], [ %129, %46 ]\l  %49 = phi i32 [ 0, %18 ], [ %130, %46 ]\l  %50 = zext i32 %48 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %13, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %53 = mul nsw i32 %48, %3\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr float, float addrspace(1)* %15, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %57 = fmul contract float %52, %56\l  %58 = fadd contract float %47, %57\l  %59 = or i32 %48, 1\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %13, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %63 = mul nsw i32 %59, %3\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr float, float addrspace(1)* %15, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %67 = fmul contract float %62, %66\l  %68 = fadd contract float %58, %67\l  %69 = or i32 %48, 2\l  %70 = zext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %13, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %73 = mul nsw i32 %69, %3\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr float, float addrspace(1)* %15, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %77 = fmul contract float %72, %76\l  %78 = fadd contract float %68, %77\l  %79 = or i32 %48, 3\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %13, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %83 = mul nsw i32 %79, %3\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr float, float addrspace(1)* %15, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %87 = fmul contract float %82, %86\l  %88 = fadd contract float %78, %87\l  %89 = or i32 %48, 4\l  %90 = zext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %13, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %93 = mul nsw i32 %89, %3\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr float, float addrspace(1)* %15, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %97 = fmul contract float %92, %96\l  %98 = fadd contract float %88, %97\l  %99 = or i32 %48, 5\l  %100 = zext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %13, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %103 = mul nsw i32 %99, %3\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr float, float addrspace(1)* %15, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %107 = fmul contract float %102, %106\l  %108 = fadd contract float %98, %107\l  %109 = or i32 %48, 6\l  %110 = zext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %13, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %113 = mul nsw i32 %109, %3\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr float, float addrspace(1)* %15, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %117 = fmul contract float %112, %116\l  %118 = fadd contract float %108, %117\l  %119 = or i32 %48, 7\l  %120 = zext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %13, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %123 = mul nsw i32 %119, %3\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr float, float addrspace(1)* %15, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %127 = fmul contract float %122, %126\l  %128 = fadd contract float %118, %127\l  %129 = add nuw nsw i32 %48, 8\l  %130 = add i32 %49, 8\l  %131 = icmp eq i32 %130, %19\l  br i1 %131, label %20, label %46, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x554ec20:s0 -> Node0x554e290;
	Node0x554ec20:s1 -> Node0x554ec20;
}
