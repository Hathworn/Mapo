digraph "CFG for '_ZL34kernelCalcSum_EffectiveShareAccessPKiiPi' function" {
	label="CFG for '_ZL34kernelCalcSum_EffectiveShareAccessPKiiPi' function";

	Node0x64eef30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = add i32 %11, %4\l  %13 = icmp slt i32 %12, %1\l  br i1 %13, label %14, label %18\l|{<s0>T|<s1>F}}"];
	Node0x64eef30:s0 -> Node0x64f0dd0;
	Node0x64eef30:s1 -> Node0x64f0e60;
	Node0x64f0dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %15\l  %17 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  br label %18\l}"];
	Node0x64f0dd0 -> Node0x64f0e60;
	Node0x64f0e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%18:\l18:                                               \l  %19 = phi i32 [ %17, %14 ], [ 0, %3 ]\l  %20 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @cache, i32\l... 0, i32 %4\l  store i32 %19, i32 addrspace(3)* %20, align 4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %21 = icmp ugt i16 %8, 1\l  br i1 %21, label %24, label %22\l|{<s0>T|<s1>F}}"];
	Node0x64f0e60:s0 -> Node0x64f1f90;
	Node0x64f0e60:s1 -> Node0x64f1fe0;
	Node0x64f1fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%22:\l22:                                               \l  %23 = icmp eq i32 %4, 0\l  br i1 %23, label %36, label %39\l|{<s0>T|<s1>F}}"];
	Node0x64f1fe0:s0 -> Node0x64f21b0;
	Node0x64f1fe0:s1 -> Node0x64f2200;
	Node0x64f1f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %26, %34 ], [ %9, %18 ]\l  %26 = lshr i32 %25, 1\l  %27 = icmp ult i32 %4, %26\l  br i1 %27, label %28, label %34\l|{<s0>T|<s1>F}}"];
	Node0x64f1f90:s0 -> Node0x64f2600;
	Node0x64f1f90:s1 -> Node0x64f2370;
	Node0x64f2600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%28:\l28:                                               \l  %29 = xor i32 %26, %4\l  %30 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @cache, i32\l... 0, i32 %29\l  %31 = load i32, i32 addrspace(3)* %30, align 4, !tbaa !7\l  %32 = load i32, i32 addrspace(3)* %20, align 4, !tbaa !7\l  %33 = add nsw i32 %32, %31\l  store i32 %33, i32 addrspace(3)* %20, align 4, !tbaa !7\l  br label %34\l}"];
	Node0x64f2600 -> Node0x64f2370;
	Node0x64f2370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %35 = icmp ugt i32 %25, 3\l  br i1 %35, label %24, label %22, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x64f2370:s0 -> Node0x64f1f90;
	Node0x64f2370:s1 -> Node0x64f1fe0;
	Node0x64f21b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%36:\l36:                                               \l  %37 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @cache, i32 0, i32 0), align 4, !tbaa !7\l  %38 = atomicrmw add i32 addrspace(1)* %2, i32 %37 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  br label %39\l}"];
	Node0x64f21b0 -> Node0x64f2200;
	Node0x64f2200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%39:\l39:                                               \l  ret void\l}"];
}
