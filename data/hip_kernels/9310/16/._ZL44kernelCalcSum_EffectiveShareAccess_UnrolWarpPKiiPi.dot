digraph "CFG for '_ZL44kernelCalcSum_EffectiveShareAccess_UnrolWarpPKiiPi' function" {
	label="CFG for '_ZL44kernelCalcSum_EffectiveShareAccess_UnrolWarpPKiiPi' function";

	Node0x56fec60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !7\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = mul i32 %13, %9\l  %15 = add i32 %14, %4\l  %16 = udiv i32 %12, %9\l  %17 = mul i32 %16, %9\l  %18 = icmp ugt i32 %12, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %9\l  %22 = add i32 %21, %15\l  %23 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @cache, i32\l... 0, i32 %4\l  store i32 0, i32 addrspace(3)* %23, align 4, !tbaa !16\l  %24 = icmp slt i32 %15, %1\l  br i1 %24, label %25, label %29\l|{<s0>T|<s1>F}}"];
	Node0x56fec60:s0 -> Node0x5701520;
	Node0x56fec60:s1 -> Node0x57015b0;
	Node0x5701520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%25:\l25:                                               \l  %26 = sext i32 %15 to i64\l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %26\l  %28 = load i32, i32 addrspace(1)* %27, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  store i32 %28, i32 addrspace(3)* %23, align 4, !tbaa !16\l  br label %29\l}"];
	Node0x5701520 -> Node0x57015b0;
	Node0x57015b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%29:\l29:                                               \l  %30 = phi i32 [ %28, %25 ], [ 0, %3 ]\l  %31 = icmp slt i32 %22, %1\l  br i1 %31, label %32, label %37\l|{<s0>T|<s1>F}}"];
	Node0x57015b0:s0 -> Node0x5702710;
	Node0x57015b0:s1 -> Node0x5702760;
	Node0x5702710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%32:\l32:                                               \l  %33 = sext i32 %22 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %36 = add nsw i32 %30, %35\l  store i32 %36, i32 addrspace(3)* %23, align 4, !tbaa !16\l  br label %37\l}"];
	Node0x5702710 -> Node0x5702760;
	Node0x5702760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%37:\l37:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %38 = icmp ugt i16 %8, 65\l  br i1 %38, label %41, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5702760:s0 -> Node0x5703020;
	Node0x5702760:s1 -> Node0x5703070;
	Node0x5703070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%39:\l39:                                               \l  %40 = icmp ult i32 %4, 32\l  br i1 %40, label %53, label %79\l|{<s0>T|<s1>F}}"];
	Node0x5703070:s0 -> Node0x5703270;
	Node0x5703070:s1 -> Node0x57032c0;
	Node0x5703020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = phi i32 [ %43, %51 ], [ %9, %37 ]\l  %43 = lshr i32 %42, 1\l  %44 = icmp ult i32 %4, %43\l  br i1 %44, label %45, label %51\l|{<s0>T|<s1>F}}"];
	Node0x5703020:s0 -> Node0x57036c0;
	Node0x5703020:s1 -> Node0x5703430;
	Node0x57036c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%45:\l45:                                               \l  %46 = xor i32 %43, %4\l  %47 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @cache, i32\l... 0, i32 %46\l  %48 = load i32, i32 addrspace(3)* %47, align 4, !tbaa !16\l  %49 = load i32, i32 addrspace(3)* %23, align 4, !tbaa !16\l  %50 = add nsw i32 %49, %48\l  store i32 %50, i32 addrspace(3)* %23, align 4, !tbaa !16\l  br label %51\l}"];
	Node0x57036c0 -> Node0x5703430;
	Node0x5703430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %52 = icmp ugt i32 %42, 131\l  br i1 %52, label %41, label %39, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5703430:s0 -> Node0x5703020;
	Node0x5703430:s1 -> Node0x5703070;
	Node0x5703270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%53:\l53:                                               \l  %54 = xor i32 %4, 32\l  %55 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @cache, i32\l... 0, i32 %54\l  %56 = load i32, i32 addrspace(3)* %55, align 4, !tbaa !16\l  %57 = load i32, i32 addrspace(3)* %23, align 4, !tbaa !16\l  %58 = add nsw i32 %57, %56\l  store i32 %58, i32 addrspace(3)* %23, align 4, !tbaa !16\l  %59 = xor i32 %4, 16\l  %60 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @cache, i32\l... 0, i32 %59\l  %61 = load i32, i32 addrspace(3)* %60, align 4, !tbaa !16\l  %62 = add nsw i32 %61, %58\l  store i32 %62, i32 addrspace(3)* %23, align 4, !tbaa !16\l  %63 = xor i32 %4, 8\l  %64 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @cache, i32\l... 0, i32 %63\l  %65 = load i32, i32 addrspace(3)* %64, align 4, !tbaa !16\l  %66 = add nsw i32 %65, %62\l  store i32 %66, i32 addrspace(3)* %23, align 4, !tbaa !16\l  %67 = xor i32 %4, 4\l  %68 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @cache, i32\l... 0, i32 %67\l  %69 = load i32, i32 addrspace(3)* %68, align 4, !tbaa !16\l  %70 = add nsw i32 %69, %66\l  store i32 %70, i32 addrspace(3)* %23, align 4, !tbaa !16\l  %71 = xor i32 %4, 2\l  %72 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @cache, i32\l... 0, i32 %71\l  %73 = load i32, i32 addrspace(3)* %72, align 4, !tbaa !16\l  %74 = add nsw i32 %73, %70\l  store i32 %74, i32 addrspace(3)* %23, align 4, !tbaa !16\l  %75 = xor i32 %4, 1\l  %76 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @cache, i32\l... 0, i32 %75\l  %77 = load i32, i32 addrspace(3)* %76, align 4, !tbaa !16\l  %78 = add nsw i32 %77, %74\l  store i32 %78, i32 addrspace(3)* %23, align 4, !tbaa !16\l  br label %79\l}"];
	Node0x5703270 -> Node0x57032c0;
	Node0x57032c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%79:\l79:                                               \l  %80 = icmp eq i32 %4, 0\l  br i1 %80, label %81, label %84\l|{<s0>T|<s1>F}}"];
	Node0x57032c0:s0 -> Node0x57054b0;
	Node0x57032c0:s1 -> Node0x5705500;
	Node0x57054b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%81:\l81:                                               \l  %82 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @cache, i32 0, i32 0), align 4, !tbaa !16\l  %83 = atomicrmw add i32 addrspace(1)* %2, i32 %82 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  br label %84\l}"];
	Node0x57054b0 -> Node0x5705500;
	Node0x5705500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%84:\l84:                                               \l  ret void\l}"];
}
