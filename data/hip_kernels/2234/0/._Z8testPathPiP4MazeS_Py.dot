digraph "CFG for '_Z8testPathPiP4MazeS_Py' function" {
	label="CFG for '_Z8testPathPiP4MazeS_Py' function";

	Node0x4e4ca20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = zext i32 %16 to i64\l  %18 = udiv i32 %14, %11\l  %19 = mul i32 %18, %11\l  %20 = icmp ugt i32 %14, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %11\l  %24 = zext i32 %23 to i64\l  %25 = sub nsw i64 0, %24\l  %26 = load i32, i32 addrspace(1)* %0, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %27 = shl i32 %26, 1\l  %28 = sub i32 64, %27\l  %29 = zext i32 %28 to i64\l  %30 = lshr i64 %25, %29\l  %31 = icmp ult i64 %30, %17\l  br i1 %31, label %80, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4e4ca20:s0 -> Node0x4e52a90;
	Node0x4e4ca20:s1 -> Node0x4e52b20;
	Node0x4e52b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%32:\l32:                                               \l  %33 = getelementptr inbounds %struct.Maze, %struct.Maze addrspace(1)* %1,\l... i64 0, i32 3\l  %34 = getelementptr inbounds %struct.Maze, %struct.Maze addrspace(1)* %1,\l... i64 0, i32 4\l  %35 = load i32, i32 addrspace(1)* %2, align 4, !tbaa !16\l  br label %36\l}"];
	Node0x4e52b20 -> Node0x4e535e0;
	Node0x4e535e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%36:\l36:                                               \l  %37 = phi i32 [ %35, %32 ], [ %72, %77 ]\l  %38 = phi i64 [ %17, %32 ], [ %78, %77 ]\l  %39 = icmp eq i32 %37, 0\l  br i1 %39, label %40, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4e535e0:s0 -> Node0x4e539f0;
	Node0x4e535e0:s1 -> Node0x4e52a90;
	Node0x4e539f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%40:\l40:                                               \l  %41 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !20\l  %42 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !22\l  %43 = load i32, i32 addrspace(1)* %0, align 4, !tbaa !16\l  br label %44\l}"];
	Node0x4e539f0 -> Node0x4e53ef0;
	Node0x4e53ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi i32 [ 0, %40 ], [ %72, %71 ]\l  %46 = phi i32 [ %41, %40 ], [ %63, %71 ]\l  %47 = phi i32 [ %42, %40 ], [ %64, %71 ]\l  %48 = phi i64 [ %38, %40 ], [ %52, %71 ]\l  %49 = phi i32 [ %43, %40 ], [ %74, %71 ]\l  %50 = trunc i64 %48 to i32\l  %51 = and i32 %50, 3\l  %52 = lshr i64 %48, 2\l  switch i32 %51, label %61 [\l    i32 0, label %53\l    i32 1, label %55\l    i32 2, label %57\l    i32 3, label %59\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2|<s4>3}}"];
	Node0x4e53ef0:s0 -> Node0x4e54700;
	Node0x4e53ef0:s1 -> Node0x4e54750;
	Node0x4e53ef0:s2 -> Node0x4e547e0;
	Node0x4e53ef0:s3 -> Node0x4e54870;
	Node0x4e53ef0:s4 -> Node0x4e54900;
	Node0x4e54750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%53:\l53:                                               \l  %54 = add nsw i32 %46, 1\l  br label %62\l}"];
	Node0x4e54750 -> Node0x4e54bc0;
	Node0x4e547e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%55:\l55:                                               \l  %56 = add nsw i32 %47, -1\l  br label %62\l}"];
	Node0x4e547e0 -> Node0x4e54bc0;
	Node0x4e54870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%57:\l57:                                               \l  %58 = add nsw i32 %46, -1\l  br label %62\l}"];
	Node0x4e54870 -> Node0x4e54bc0;
	Node0x4e54900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%59:\l59:                                               \l  %60 = add nsw i32 %47, 1\l  br label %62\l}"];
	Node0x4e54900 -> Node0x4e54bc0;
	Node0x4e54700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%61:\l61:                                               \l  unreachable\l}"];
	Node0x4e54bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  %63 = phi i32 [ %46, %59 ], [ %58, %57 ], [ %46, %55 ], [ %54, %53 ]\l  %64 = phi i32 [ %60, %59 ], [ %47, %57 ], [ %56, %55 ], [ %47, %53 ]\l  %65 = sext i32 %64 to i64\l  %66 = sext i32 %63 to i64\l  %67 = getelementptr inbounds %struct.Maze, %struct.Maze addrspace(1)* %1,\l... i64 0, i32 0, i64 %65, i64 %66\l  %68 = load i8, i8 addrspace(1)* %67, align 1, !tbaa !23\l  switch i8 %68, label %71 [\l    i8 36, label %69\l    i8 46, label %70\l  ]\l|{<s0>def|<s1>36|<s2>46}}"];
	Node0x4e54bc0:s0 -> Node0x4e53ff0;
	Node0x4e54bc0:s1 -> Node0x4e55690;
	Node0x4e54bc0:s2 -> Node0x4e556e0;
	Node0x4e55690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%69:\l69:                                               \l  store i32 1, i32 addrspace(1)* %2, align 4, !tbaa !16\l  store i64 %38, i64 addrspace(1)* %3, align 8, !tbaa !24\l  br label %71\l}"];
	Node0x4e55690 -> Node0x4e53ff0;
	Node0x4e556e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%70:\l70:                                               \l  br label %71\l}"];
	Node0x4e556e0 -> Node0x4e53ff0;
	Node0x4e53ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = phi i32 [ %45, %62 ], [ %45, %70 ], [ 1, %69 ]\l  %73 = phi i1 [ true, %62 ], [ false, %70 ], [ true, %69 ]\l  %74 = add nsw i32 %49, -1\l  %75 = icmp eq i32 %49, 0\l  %76 = select i1 %73, i1 true, i1 %75\l  br i1 %76, label %77, label %44, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x4e53ff0:s0 -> Node0x4e536d0;
	Node0x4e53ff0:s1 -> Node0x4e53ef0;
	Node0x4e536d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%77:\l77:                                               \l  %78 = add i64 %38, %24\l  %79 = icmp ugt i64 %78, %30\l  br i1 %79, label %80, label %36, !llvm.loop !28\l|{<s0>T|<s1>F}}"];
	Node0x4e536d0:s0 -> Node0x4e52a90;
	Node0x4e536d0:s1 -> Node0x4e535e0;
	Node0x4e52a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%80:\l80:                                               \l  ret void\l}"];
}
