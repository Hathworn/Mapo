digraph "CFG for '_Z11CopyOutBackP15HIP_vector_typeIfLj4EEPfPiS3_S3_S3_iiii' function" {
	label="CFG for '_Z11CopyOutBackP15HIP_vector_typeIfLj4EEPfPiS3_S3_S3_iiii' function";

	Node0x4cc2810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !4\l  %16 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !13, !invariant.load\l... !14\l  %19 = zext i16 %18 to i32\l  %20 = udiv i32 %15, %19\l  %21 = mul i32 %20, %19\l  %22 = icmp ugt i32 %15, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %11\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %27 = add i32 %25, %26\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %28\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !15, !amdgpu.noclobber\l... !14\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !15, !amdgpu.noclobber\l... !14\l  %34 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !19\l  %35 = icmp slt i32 %34, %33\l  br i1 %35, label %36, label %109\l|{<s0>T|<s1>F}}"];
	Node0x4cc2810:s0 -> Node0x4cc6d30;
	Node0x4cc2810:s1 -> Node0x4cc6dc0;
	Node0x4cc6d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%36:\l36:                                               \l  %37 = mul i32 %30, %6\l  %38 = add i32 %37, %34\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !20,\l... !amdgpu.noclobber !14\l  %42 = mul i32 %38, %8\l  %43 = shl i32 %7, 2\l  %44 = mul i32 %43, %30\l  %45 = sext i32 %42 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %45\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !15\l  %48 = icmp slt i32 %8, 1\l  %49 = icmp slt i32 %47, %44\l  %50 = select i1 %48, i1 true, i1 %49\l  br i1 %50, label %51, label %55\l|{<s0>T|<s1>F}}"];
	Node0x4cc6d30:s0 -> Node0x4cc7850;
	Node0x4cc6d30:s1 -> Node0x4cc78e0;
	Node0x4cc7850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%51:\l51:                                               \l  %52 = icmp sgt i32 %9, 0\l  br i1 %52, label %53, label %109\l|{<s0>T|<s1>F}}"];
	Node0x4cc7850:s0 -> Node0x4cc7ae0;
	Node0x4cc7850:s1 -> Node0x4cc6dc0;
	Node0x4cc7ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%53:\l53:                                               \l  %54 = mul i32 %38, %9\l  br label %83\l}"];
	Node0x4cc7ae0 -> Node0x4cc7c70;
	Node0x4cc78e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  %56 = phi i32 [ %79, %74 ], [ %47, %36 ]\l  %57 = phi i32 [ %75, %74 ], [ 0, %36 ]\l  %58 = freeze i32 %56\l  %59 = sdiv i32 %58, 4\l  %60 = mul i32 %59, 4\l  %61 = sub i32 %58, %60\l  switch i32 %61, label %74 [\l    i32 0, label %62\l    i32 1, label %65\l    i32 2, label %68\l    i32 3, label %71\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2|<s4>3}}"];
	Node0x4cc78e0:s0 -> Node0x4cc7d60;
	Node0x4cc78e0:s1 -> Node0x4cc8210;
	Node0x4cc78e0:s2 -> Node0x4cc82a0;
	Node0x4cc78e0:s3 -> Node0x4cc8330;
	Node0x4cc78e0:s4 -> Node0x4cc83f0;
	Node0x4cc8210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%62:\l62:                                               \l  %63 = sext i32 %59 to i64\l  %64 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %0, i64 %63, i32 0, i32 0, i32 0, i64\l... 0\l  store float %41, float addrspace(1)* %64, align 16, !tbaa !22\l  br label %74\l}"];
	Node0x4cc8210 -> Node0x4cc7d60;
	Node0x4cc82a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%65:\l65:                                               \l  %66 = sext i32 %59 to i64\l  %67 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %0, i64 %66, i32 0, i32 0, i32 0, i64\l... 1\l  store float %41, float addrspace(1)* %67, align 4, !tbaa !22\l  br label %74\l}"];
	Node0x4cc82a0 -> Node0x4cc7d60;
	Node0x4cc8330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%68:\l68:                                               \l  %69 = sext i32 %59 to i64\l  %70 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %0, i64 %69, i32 0, i32 0, i32 0, i64\l... 2\l  store float %41, float addrspace(1)* %70, align 8, !tbaa !22\l  br label %74\l}"];
	Node0x4cc8330 -> Node0x4cc7d60;
	Node0x4cc83f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%71:\l71:                                               \l  %72 = sext i32 %59 to i64\l  %73 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %0, i64 %72, i32 0, i32 0, i32 0, i64\l... 3\l  store float %41, float addrspace(1)* %73, align 4, !tbaa !22\l  br label %74\l}"];
	Node0x4cc83f0 -> Node0x4cc7d60;
	Node0x4cc7d60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = add nuw nsw i32 %57, 1\l  %76 = add nsw i32 %75, %42\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %77\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !15\l  %80 = icmp sge i32 %75, %8\l  %81 = icmp slt i32 %79, %44\l  %82 = select i1 %80, i1 true, i1 %81\l  br i1 %82, label %51, label %55, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x4cc7d60:s0 -> Node0x4cc7850;
	Node0x4cc7d60:s1 -> Node0x4cc78e0;
	Node0x4cc7c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%83:\l83:                                               \l  %84 = phi i32 [ 0, %53 ], [ %107, %106 ]\l  %85 = add i32 %84, %54\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %86\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !15\l  %89 = icmp sgt i32 %88, -1\l  br i1 %89, label %90, label %109\l|{<s0>T|<s1>F}}"];
	Node0x4cc7c70:s0 -> Node0x4cca3a0;
	Node0x4cc7c70:s1 -> Node0x4cc6dc0;
	Node0x4cca3a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%90:\l90:                                               \l  %91 = lshr i32 %88, 2\l  %92 = and i32 %88, 3\l  switch i32 %92, label %105 [\l    i32 0, label %93\l    i32 1, label %96\l    i32 2, label %99\l    i32 3, label %102\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2|<s4>3}}"];
	Node0x4cca3a0:s0 -> Node0x4cca5c0;
	Node0x4cca3a0:s1 -> Node0x4cca610;
	Node0x4cca3a0:s2 -> Node0x4cca6a0;
	Node0x4cca3a0:s3 -> Node0x4cca730;
	Node0x4cca3a0:s4 -> Node0x4cca7c0;
	Node0x4cca610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%93:\l93:                                               \l  %94 = zext i32 %91 to i64\l  %95 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %0, i64 %94, i32 0, i32 0, i32 0, i64\l... 0\l  store float %41, float addrspace(1)* %95, align 16, !tbaa !22\l  br label %106\l}"];
	Node0x4cca610 -> Node0x4cca000;
	Node0x4cca6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%96:\l96:                                               \l  %97 = zext i32 %91 to i64\l  %98 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %0, i64 %97, i32 0, i32 0, i32 0, i64\l... 1\l  store float %41, float addrspace(1)* %98, align 4, !tbaa !22\l  br label %106\l}"];
	Node0x4cca6a0 -> Node0x4cca000;
	Node0x4cca730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%99:\l99:                                               \l  %100 = zext i32 %91 to i64\l  %101 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %0, i64 %100, i32 0, i32 0, i32 0,\l... i64 2\l  store float %41, float addrspace(1)* %101, align 8, !tbaa !22\l  br label %106\l}"];
	Node0x4cca730 -> Node0x4cca000;
	Node0x4cca7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%102:\l102:                                              \l  %103 = zext i32 %91 to i64\l  %104 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %0, i64 %103, i32 0, i32 0, i32 0,\l... i64 3\l  store float %41, float addrspace(1)* %104, align 4, !tbaa !22\l  br label %106\l}"];
	Node0x4cca7c0 -> Node0x4cca000;
	Node0x4cca5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%105:\l105:                                              \l  unreachable\l}"];
	Node0x4cca000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%106:\l106:                                              \l  %107 = add nuw nsw i32 %84, 1\l  %108 = icmp eq i32 %107, %9\l  br i1 %108, label %109, label %83, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x4cca000:s0 -> Node0x4cc6dc0;
	Node0x4cca000:s1 -> Node0x4cc7c70;
	Node0x4cc6dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%109:\l109:                                              \l  ret void\l}"];
}
