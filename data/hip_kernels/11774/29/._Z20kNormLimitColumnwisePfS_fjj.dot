digraph "CFG for '_Z20kNormLimitColumnwisePfS_fjj' function" {
	label="CFG for '_Z20kNormLimitColumnwisePfS_fjj' function";

	Node0x51916e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = icmp ult i32 %6, %4\l  br i1 %7, label %8, label %11\l|{<s0>T|<s1>F}}"];
	Node0x51916e0:s0 -> Node0x51924d0;
	Node0x51916e0:s1 -> Node0x5192560;
	Node0x51924d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%8:\l8:                                                \l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %4\l  br label %83\l}"];
	Node0x51924d0 -> Node0x5192910;
	Node0x5192560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%11:\l11:                                               \l  %12 = phi float [ 0.000000e+00, %5 ], [ %91, %83 ]\l  %13 = getelementptr inbounds [33 x float], [33 x float] addrspace(3)*\l... @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32 0, i32 %6\l  store float %12, float addrspace(3)* %13, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %14 = icmp eq i32 %6, 0\l  br i1 %14, label %17, label %15\l|{<s0>T|<s1>F}}"];
	Node0x5192560:s0 -> Node0x51941d0;
	Node0x5192560:s1 -> Node0x5194260;
	Node0x5194260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%15:\l15:                                               \l  %16 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 32), align 16, !tbaa !5\l  br label %119\l}"];
	Node0x5194260 -> Node0x51943f0;
	Node0x51941d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%17:\l17:                                               \l  %18 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 0), align 16, !tbaa !5\l  %19 = fadd contract float %18, 0.000000e+00\l  %20 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 1), align 4, !tbaa !5\l  %21 = fadd contract float %19, %20\l  %22 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 2), align 8, !tbaa !5\l  %23 = fadd contract float %21, %22\l  %24 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 3), align 4, !tbaa !5\l  %25 = fadd contract float %23, %24\l  %26 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 4), align 16, !tbaa !5\l  %27 = fadd contract float %25, %26\l  %28 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 5), align 4, !tbaa !5\l  %29 = fadd contract float %27, %28\l  %30 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 6), align 8, !tbaa !5\l  %31 = fadd contract float %29, %30\l  %32 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 7), align 4, !tbaa !5\l  %33 = fadd contract float %31, %32\l  %34 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 8), align 16, !tbaa !5\l  %35 = fadd contract float %33, %34\l  %36 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 9), align 4, !tbaa !5\l  %37 = fadd contract float %35, %36\l  %38 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 10), align 8, !tbaa !5\l  %39 = fadd contract float %37, %38\l  %40 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 11), align 4, !tbaa !5\l  %41 = fadd contract float %39, %40\l  %42 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 12), align 16, !tbaa !5\l  %43 = fadd contract float %41, %42\l  %44 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 13), align 4, !tbaa !5\l  %45 = fadd contract float %43, %44\l  %46 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 14), align 8, !tbaa !5\l  %47 = fadd contract float %45, %46\l  %48 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 15), align 4, !tbaa !5\l  %49 = fadd contract float %47, %48\l  %50 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 16), align 16, !tbaa !5\l  %51 = fadd contract float %49, %50\l  %52 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 17), align 4, !tbaa !5\l  %53 = fadd contract float %51, %52\l  %54 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 18), align 8, !tbaa !5\l  %55 = fadd contract float %53, %54\l  %56 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 19), align 4, !tbaa !5\l  %57 = fadd contract float %55, %56\l  %58 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 20), align 16, !tbaa !5\l  %59 = fadd contract float %57, %58\l  %60 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 21), align 4, !tbaa !5\l  %61 = fadd contract float %59, %60\l  %62 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 22), align 8, !tbaa !5\l  %63 = fadd contract float %61, %62\l  %64 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 23), align 4, !tbaa !5\l  %65 = fadd contract float %63, %64\l  %66 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 24), align 16, !tbaa !5\l  %67 = fadd contract float %65, %66\l  %68 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 25), align 4, !tbaa !5\l  %69 = fadd contract float %67, %68\l  %70 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 26), align 8, !tbaa !5\l  %71 = fadd contract float %69, %70\l  %72 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 27), align 4, !tbaa !5\l  %73 = fadd contract float %71, %72\l  %74 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 28), align 16, !tbaa !5\l  %75 = fadd contract float %73, %74\l  %76 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 29), align 4, !tbaa !5\l  %77 = fadd contract float %75, %76\l  %78 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 30), align 8, !tbaa !5\l  %79 = fadd contract float %77, %78\l  %80 = load float, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 31), align 4, !tbaa !5\l  %81 = fadd contract float %79, %80\l  %82 = fcmp contract olt float %81, %2\l  br i1 %82, label %117, label %94\l|{<s0>T|<s1>F}}"];
	Node0x51941d0:s0 -> Node0x5194e70;
	Node0x51941d0:s1 -> Node0x5198a50;
	Node0x5192910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  %84 = phi float [ 0.000000e+00, %8 ], [ %91, %83 ]\l  %85 = phi i32 [ %6, %8 ], [ %92, %83 ]\l  %86 = add i32 %85, %10\l  %87 = zext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %90 = fmul contract float %89, %89\l  %91 = fadd contract float %84, %90\l  %92 = add i32 %85, 32\l  %93 = icmp ult i32 %92, %4\l  br i1 %93, label %83, label %11, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5192910:s0 -> Node0x5192910;
	Node0x5192910:s1 -> Node0x5192560;
	Node0x5198a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%94:\l94:                                               \l  %95 = fcmp olt float %81, 0x39F0000000000000\l  %96 = select i1 %95, float 0x41F0000000000000, float 1.000000e+00\l  %97 = fmul float %81, %96\l  %98 = tail call float @llvm.sqrt.f32(float %97)\l  %99 = bitcast float %98 to i32\l  %100 = add nsw i32 %99, -1\l  %101 = bitcast i32 %100 to float\l  %102 = add nsw i32 %99, 1\l  %103 = bitcast i32 %102 to float\l  %104 = tail call i1 @llvm.amdgcn.class.f32(float %97, i32 608)\l  %105 = select i1 %95, float 0x3EF0000000000000, float 1.000000e+00\l  %106 = fneg float %103\l  %107 = tail call float @llvm.fma.f32(float %106, float %98, float %97)\l  %108 = fcmp ogt float %107, 0.000000e+00\l  %109 = fneg float %101\l  %110 = tail call float @llvm.fma.f32(float %109, float %98, float %97)\l  %111 = fcmp ole float %110, 0.000000e+00\l  %112 = select i1 %111, float %101, float %98\l  %113 = select i1 %108, float %103, float %112\l  %114 = fmul float %105, %113\l  %115 = select i1 %104, float %97, float %114\l  %116 = fdiv contract float %2, %115\l  br label %117\l}"];
	Node0x5198a50 -> Node0x5194e70;
	Node0x5194e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%117:\l117:                                              \l  %118 = phi contract float [ %116, %94 ], [ 1.000000e+00, %17 ]\l  store float %118, float addrspace(3)* getelementptr inbounds ([33 x float],\l... [33 x float] addrspace(3)* @_ZZ20kNormLimitColumnwisePfS_fjjE8sum_vals, i32\l... 0, i32 32), align 16, !tbaa !5\l  br label %119\l}"];
	Node0x5194e70 -> Node0x51943f0;
	Node0x51943f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%119:\l119:                                              \l  %120 = phi float [ %16, %15 ], [ %118, %117 ]\l  br i1 %7, label %121, label %124\l|{<s0>T|<s1>F}}"];
	Node0x51943f0:s0 -> Node0x519aa90;
	Node0x51943f0:s1 -> Node0x519aae0;
	Node0x519aa90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%121:\l121:                                              \l  %122 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %123 = mul i32 %122, %4\l  br label %125\l}"];
	Node0x519aa90 -> Node0x519ad40;
	Node0x519aae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%124:\l124:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
	Node0x519ad40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%125:\l125:                                              \l  %126 = phi i32 [ %6, %121 ], [ %133, %125 ]\l  %127 = add i32 %126, %123\l  %128 = zext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %0, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !5\l  %131 = fmul contract float %120, %130\l  %132 = getelementptr inbounds float, float addrspace(1)* %1, i64 %128\l  store float %131, float addrspace(1)* %132, align 4, !tbaa !5\l  %133 = add i32 %126, 32\l  %134 = icmp ult i32 %133, %4\l  br i1 %134, label %125, label %124, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x519ad40:s0 -> Node0x519ad40;
	Node0x519ad40:s1 -> Node0x519aae0;
}
