digraph "CFG for '_Z30kGenerateTranslationsBigVarOffPfS_S_S_iii' function" {
	label="CFG for '_Z30kGenerateTranslationsBigVarOffPfS_S_S_iii' function";

	Node0x54576e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = sub nsw i32 %4, %5\l  %16 = sdiv i32 %15, 2\l  %17 = mul nsw i32 %5, %5\l  %18 = zext i32 %14 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %3, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %21 = fptosi float %20 to i32\l  %22 = mul i32 %17, %14\l  %23 = add nsw i32 %16, %21\l  %24 = icmp ult i32 %8, %17\l  br i1 %24, label %25, label %37\l|{<s0>T|<s1>F}}"];
	Node0x54576e0:s0 -> Node0x545a1f0;
	Node0x54576e0:s1 -> Node0x545a280;
	Node0x545a1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%25:\l25:                                               \l  %26 = mul i32 %14, %4\l  %27 = getelementptr inbounds float, float addrspace(1)* %2, i64 %18\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %29 = fptosi float %28 to i32\l  %30 = icmp eq i32 %6, 0\l  %31 = add i32 %16, %26\l  %32 = add i32 %31, %29\l  %33 = and i32 %6, 7\l  %34 = icmp ult i32 %6, 8\l  %35 = and i32 %6, -8\l  %36 = icmp eq i32 %33, 0\l  br label %38\l}"];
	Node0x545a1f0 -> Node0x545b180;
	Node0x545a280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%37:\l37:                                               \l  ret void\l}"];
	Node0x545b180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%38:\l38:                                               \l  %39 = phi i32 [ %8, %25 ], [ %67, %66 ]\l  %40 = udiv i32 %39, %5\l  br i1 %30, label %66, label %41\l|{<s0>T|<s1>F}}"];
	Node0x545b180:s0 -> Node0x545b300;
	Node0x545b180:s1 -> Node0x545b490;
	Node0x545b490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%41:\l41:                                               \l  %42 = mul nsw i32 %40, %5\l  %43 = add i32 %32, %40\l  %44 = mul i32 %43, %4\l  %45 = add i32 %23, %39\l  %46 = sub i32 %45, %42\l  %47 = add i32 %46, %44\l  %48 = mul nsw i32 %47, %6\l  %49 = add i32 %39, %22\l  %50 = mul nsw i32 %49, %6\l  br i1 %34, label %51, label %69\l|{<s0>T|<s1>F}}"];
	Node0x545b490:s0 -> Node0x545bae0;
	Node0x545b490:s1 -> Node0x545bb30;
	Node0x545bae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%51:\l51:                                               \l  %52 = phi i32 [ 0, %41 ], [ %135, %69 ]\l  br i1 %36, label %66, label %53\l|{<s0>T|<s1>F}}"];
	Node0x545bae0:s0 -> Node0x545b300;
	Node0x545bae0:s1 -> Node0x545bd50;
	Node0x545bd50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi i32 [ %63, %53 ], [ %52, %51 ]\l  %55 = phi i32 [ %64, %53 ], [ 0, %51 ]\l  %56 = add i32 %54, %48\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = add i32 %54, %50\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  store float %59, float addrspace(1)* %62, align 4, !tbaa !7\l  %63 = add nuw i32 %54, 1\l  %64 = add i32 %55, 1\l  %65 = icmp eq i32 %64, %33\l  br i1 %65, label %66, label %53, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x545bd50:s0 -> Node0x545b300;
	Node0x545bd50:s1 -> Node0x545bd50;
	Node0x545b300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%66:\l66:                                               \l  %67 = add i32 %39, %13\l  %68 = icmp ult i32 %67, %17\l  br i1 %68, label %38, label %37, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x545b300:s0 -> Node0x545b180;
	Node0x545b300:s1 -> Node0x545a280;
	Node0x545bb30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%69:\l69:                                               \l  %70 = phi i32 [ %135, %69 ], [ 0, %41 ]\l  %71 = phi i32 [ %136, %69 ], [ 0, %41 ]\l  %72 = add i32 %70, %48\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7\l  %76 = add i32 %70, %50\l  %77 = zext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %77\l  store float %75, float addrspace(1)* %78, align 4, !tbaa !7\l  %79 = or i32 %70, 1\l  %80 = add i32 %79, %48\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7\l  %84 = add i32 %79, %50\l  %85 = zext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %1, i64 %85\l  store float %83, float addrspace(1)* %86, align 4, !tbaa !7\l  %87 = or i32 %70, 2\l  %88 = add i32 %87, %48\l  %89 = zext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %0, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !7\l  %92 = add i32 %87, %50\l  %93 = zext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %1, i64 %93\l  store float %91, float addrspace(1)* %94, align 4, !tbaa !7\l  %95 = or i32 %70, 3\l  %96 = add i32 %95, %48\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !7\l  %100 = add i32 %95, %50\l  %101 = zext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %1, i64 %101\l  store float %99, float addrspace(1)* %102, align 4, !tbaa !7\l  %103 = or i32 %70, 4\l  %104 = add i32 %103, %48\l  %105 = zext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %0, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7\l  %108 = add i32 %103, %50\l  %109 = zext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %1, i64 %109\l  store float %107, float addrspace(1)* %110, align 4, !tbaa !7\l  %111 = or i32 %70, 5\l  %112 = add i32 %111, %48\l  %113 = zext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %0, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7\l  %116 = add i32 %111, %50\l  %117 = zext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %1, i64 %117\l  store float %115, float addrspace(1)* %118, align 4, !tbaa !7\l  %119 = or i32 %70, 6\l  %120 = add i32 %119, %48\l  %121 = zext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %0, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !7\l  %124 = add i32 %119, %50\l  %125 = zext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %1, i64 %125\l  store float %123, float addrspace(1)* %126, align 4, !tbaa !7\l  %127 = or i32 %70, 7\l  %128 = add i32 %127, %48\l  %129 = zext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %0, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !7\l  %132 = add i32 %127, %50\l  %133 = zext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %1, i64 %133\l  store float %131, float addrspace(1)* %134, align 4, !tbaa !7\l  %135 = add nuw i32 %70, 8\l  %136 = add i32 %71, 8\l  %137 = icmp eq i32 %136, %35\l  br i1 %137, label %51, label %69, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x545bb30:s0 -> Node0x545bae0;
	Node0x545bb30:s1 -> Node0x545bb30;
}
