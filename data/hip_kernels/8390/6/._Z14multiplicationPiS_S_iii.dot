digraph "CFG for '_Z14multiplicationPiS_S_iii' function" {
	label="CFG for '_Z14multiplicationPiS_S_iii' function";

	Node0x471bba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %3\l  %25 = icmp slt i32 %23, %5\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %165\l|{<s0>T|<s1>F}}"];
	Node0x471bba0:s0 -> Node0x471f620;
	Node0x471bba0:s1 -> Node0x471f6b0;
	Node0x471f620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%27:\l27:                                               \l  %28 = icmp sgt i32 %4, 0\l  %29 = mul nsw i32 %15, %3\l  br i1 %28, label %30, label %58\l|{<s0>T|<s1>F}}"];
	Node0x471f620:s0 -> Node0x471f940;
	Node0x471f620:s1 -> Node0x471f990;
	Node0x471f940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%30:\l30:                                               \l  %31 = and i32 %4, 7\l  %32 = icmp ult i32 %4, 8\l  br i1 %32, label %35, label %33\l|{<s0>T|<s1>F}}"];
	Node0x471f940:s0 -> Node0x471dbc0;
	Node0x471f940:s1 -> Node0x471dc10;
	Node0x471dc10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%33:\l33:                                               \l  %34 = and i32 %4, -8\l  br label %63\l}"];
	Node0x471dc10 -> Node0x471ffa0;
	Node0x471dbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%35:\l35:                                               \l  %36 = phi i32 [ undef, %30 ], [ %161, %63 ]\l  %37 = phi i32 [ 0, %30 ], [ %162, %63 ]\l  %38 = phi i32 [ 0, %30 ], [ %161, %63 ]\l  %39 = icmp eq i32 %31, 0\l  br i1 %39, label %58, label %40\l|{<s0>T|<s1>F}}"];
	Node0x471dbc0:s0 -> Node0x471f990;
	Node0x471dbc0:s1 -> Node0x47207c0;
	Node0x47207c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ %55, %40 ], [ %37, %35 ]\l  %42 = phi i32 [ %54, %40 ], [ %38, %35 ]\l  %43 = phi i32 [ %56, %40 ], [ 0, %35 ]\l  %44 = add nsw i32 %41, %29\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %45\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %48 = mul nsw i32 %41, %4\l  %49 = add nsw i32 %48, %23\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %53 = mul nsw i32 %52, %47\l  %54 = add nsw i32 %53, %42\l  %55 = add nuw nsw i32 %41, 1\l  %56 = add i32 %43, 1\l  %57 = icmp eq i32 %56, %31\l  br i1 %57, label %58, label %40, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x47207c0:s0 -> Node0x471f990;
	Node0x47207c0:s1 -> Node0x47207c0;
	Node0x471f990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%58:\l58:                                               \l  %59 = phi i32 [ 0, %27 ], [ %36, %35 ], [ %54, %40 ]\l  %60 = add nsw i32 %29, %23\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %61\l  store i32 %59, i32 addrspace(1)* %62, align 4, !tbaa !7\l  br label %165\l}"];
	Node0x471f990 -> Node0x471f6b0;
	Node0x471ffa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%63:\l63:                                               \l  %64 = phi i32 [ 0, %33 ], [ %162, %63 ]\l  %65 = phi i32 [ 0, %33 ], [ %161, %63 ]\l  %66 = phi i32 [ 0, %33 ], [ %163, %63 ]\l  %67 = add nsw i32 %64, %29\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %71 = mul nsw i32 %64, %4\l  %72 = add nsw i32 %71, %23\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %73\l  %75 = load i32, i32 addrspace(1)* %74, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %76 = mul nsw i32 %75, %70\l  %77 = add nsw i32 %76, %65\l  %78 = or i32 %64, 1\l  %79 = add nsw i32 %78, %29\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %80\l  %82 = load i32, i32 addrspace(1)* %81, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %83 = mul nsw i32 %78, %4\l  %84 = add nsw i32 %83, %23\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %85\l  %87 = load i32, i32 addrspace(1)* %86, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %88 = mul nsw i32 %87, %82\l  %89 = add nsw i32 %88, %77\l  %90 = or i32 %64, 2\l  %91 = add nsw i32 %90, %29\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %92\l  %94 = load i32, i32 addrspace(1)* %93, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %95 = mul nsw i32 %90, %4\l  %96 = add nsw i32 %95, %23\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %97\l  %99 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %100 = mul nsw i32 %99, %94\l  %101 = add nsw i32 %100, %89\l  %102 = or i32 %64, 3\l  %103 = add nsw i32 %102, %29\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %104\l  %106 = load i32, i32 addrspace(1)* %105, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %107 = mul nsw i32 %102, %4\l  %108 = add nsw i32 %107, %23\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %109\l  %111 = load i32, i32 addrspace(1)* %110, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %112 = mul nsw i32 %111, %106\l  %113 = add nsw i32 %112, %101\l  %114 = or i32 %64, 4\l  %115 = add nsw i32 %114, %29\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %116\l  %118 = load i32, i32 addrspace(1)* %117, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %119 = mul nsw i32 %114, %4\l  %120 = add nsw i32 %119, %23\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %121\l  %123 = load i32, i32 addrspace(1)* %122, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %124 = mul nsw i32 %123, %118\l  %125 = add nsw i32 %124, %113\l  %126 = or i32 %64, 5\l  %127 = add nsw i32 %126, %29\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %128\l  %130 = load i32, i32 addrspace(1)* %129, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %131 = mul nsw i32 %126, %4\l  %132 = add nsw i32 %131, %23\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %133\l  %135 = load i32, i32 addrspace(1)* %134, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %136 = mul nsw i32 %135, %130\l  %137 = add nsw i32 %136, %125\l  %138 = or i32 %64, 6\l  %139 = add nsw i32 %138, %29\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %140\l  %142 = load i32, i32 addrspace(1)* %141, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %143 = mul nsw i32 %138, %4\l  %144 = add nsw i32 %143, %23\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %145\l  %147 = load i32, i32 addrspace(1)* %146, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %148 = mul nsw i32 %147, %142\l  %149 = add nsw i32 %148, %137\l  %150 = or i32 %64, 7\l  %151 = add nsw i32 %150, %29\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %152\l  %154 = load i32, i32 addrspace(1)* %153, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %155 = mul nsw i32 %150, %4\l  %156 = add nsw i32 %155, %23\l  %157 = sext i32 %156 to i64\l  %158 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %157\l  %159 = load i32, i32 addrspace(1)* %158, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %160 = mul nsw i32 %159, %154\l  %161 = add nsw i32 %160, %149\l  %162 = add nuw nsw i32 %64, 8\l  %163 = add i32 %66, 8\l  %164 = icmp eq i32 %163, %34\l  br i1 %164, label %35, label %63, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x471ffa0:s0 -> Node0x471dbc0;
	Node0x471ffa0:s1 -> Node0x471ffa0;
	Node0x471f6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%165:\l165:                                              \l  ret void\l}"];
}
