digraph "CFG for '_Z7cvlUnitPKcS0_S0_S0_PcS1_S1_iii' function" {
	label="CFG for '_Z7cvlUnitPKcS0_S0_S0_PcS1_S1_iii' function";

	Node0x5e2b690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %27 = add i32 %25, %26\l  %28 = mul nsw i32 %27, %7\l  %29 = add nsw i32 %28, %19\l  %30 = icmp slt i32 %19, %7\l  %31 = icmp slt i32 %27, %8\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %192\l|{<s0>T|<s1>F}}"];
	Node0x5e2b690:s0 -> Node0x5e2dbe0;
	Node0x5e2b690:s1 -> Node0x5e2dc70;
	Node0x5e2dbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%33:\l33:                                               \l  %34 = sdiv i32 %9, 2\l  %35 = sub nsw i32 %19, %34\l  %36 = icmp sgt i32 %35, -1\l  %37 = add nsw i32 %19, %34\l  %38 = icmp slt i32 %37, %7\l  %39 = select i1 %36, i1 %38, i1 false\l  br i1 %39, label %40, label %53\l|{<s0>T|<s1>F}}"];
	Node0x5e2dbe0:s0 -> Node0x5e30440;
	Node0x5e2dbe0:s1 -> Node0x5e30490;
	Node0x5e30440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%40:\l40:                                               \l  %41 = sub nsw i32 %27, %34\l  %42 = icmp sgt i32 %41, -1\l  %43 = add nsw i32 %27, %34\l  %44 = icmp slt i32 %43, %8\l  %45 = select i1 %42, i1 %44, i1 false\l  br i1 %45, label %46, label %53\l|{<s0>T|<s1>F}}"];
	Node0x5e30440:s0 -> Node0x5e308c0;
	Node0x5e30440:s1 -> Node0x5e30490;
	Node0x5e308c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%46:\l46:                                               \l  %47 = icmp sgt i32 %9, 0\l  br i1 %47, label %48, label %173\l|{<s0>T|<s1>F}}"];
	Node0x5e308c0:s0 -> Node0x5e30a80;
	Node0x5e308c0:s1 -> Node0x5e30ad0;
	Node0x5e30a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%48:\l48:                                               \l  %49 = and i32 %9, 1\l  %50 = icmp eq i32 %9, 1\l  %51 = and i32 %9, -2\l  %52 = icmp eq i32 %49, 0\l  br label %63\l}"];
	Node0x5e30a80 -> Node0x5e30eb0;
	Node0x5e30490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%53:\l53:                                               \l  %54 = sext i32 %29 to i64\l  %55 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %54\l  %56 = load i8, i8 addrspace(1)* %55, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %57 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %54\l  store i8 %56, i8 addrspace(1)* %57, align 1, !tbaa !7\l  %58 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %54\l  %59 = load i8, i8 addrspace(1)* %58, align 1, !tbaa !7\l  %60 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %54\l  store i8 %59, i8 addrspace(1)* %60, align 1, !tbaa !7\l  %61 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %54\l  %62 = load i8, i8 addrspace(1)* %61, align 1, !tbaa !7\l  br label %188\l}"];
	Node0x5e30490 -> Node0x5e31d30;
	Node0x5e30eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%63:\l63:                                               \l  %64 = phi i32 [ %166, %163 ], [ 0, %48 ]\l  %65 = phi i32 [ %165, %163 ], [ 0, %48 ]\l  %66 = phi i32 [ %164, %163 ], [ 0, %48 ]\l  %67 = phi i32 [ %167, %163 ], [ 0, %48 ]\l  %68 = add nsw i32 %67, %35\l  br i1 %50, label %129, label %69\l|{<s0>T|<s1>F}}"];
	Node0x5e30eb0:s0 -> Node0x5e32560;
	Node0x5e30eb0:s1 -> Node0x5e325f0;
	Node0x5e325f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  %70 = phi i32 [ %125, %69 ], [ %64, %63 ]\l  %71 = phi i32 [ %120, %69 ], [ %65, %63 ]\l  %72 = phi i32 [ %115, %69 ], [ %66, %63 ]\l  %73 = phi i32 [ %126, %69 ], [ 0, %63 ]\l  %74 = phi i32 [ %127, %69 ], [ 0, %63 ]\l  %75 = add nsw i32 %73, %41\l  %76 = mul nsw i32 %75, %7\l  %77 = add nsw i32 %68, %76\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %78\l  %80 = load i8, i8 addrspace(1)* %79, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %81 = sext i8 %80 to i32\l  %82 = mul nsw i32 %73, %9\l  %83 = add nsw i32 %82, %67\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %84\l  %86 = load i8, i8 addrspace(1)* %85, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %87 = sext i8 %86 to i32\l  %88 = mul nsw i32 %87, %81\l  %89 = add nsw i32 %88, %72\l  %90 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %78\l  %91 = load i8, i8 addrspace(1)* %90, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %92 = sext i8 %91 to i32\l  %93 = mul nsw i32 %92, %87\l  %94 = add nsw i32 %93, %71\l  %95 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %78\l  %96 = load i8, i8 addrspace(1)* %95, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %97 = sext i8 %96 to i32\l  %98 = mul nsw i32 %97, %87\l  %99 = add nsw i32 %98, %70\l  %100 = or i32 %73, 1\l  %101 = add nsw i32 %100, %41\l  %102 = mul nsw i32 %101, %7\l  %103 = add nsw i32 %68, %102\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %104\l  %106 = load i8, i8 addrspace(1)* %105, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %107 = sext i8 %106 to i32\l  %108 = mul nsw i32 %100, %9\l  %109 = add nsw i32 %108, %67\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %110\l  %112 = load i8, i8 addrspace(1)* %111, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %113 = sext i8 %112 to i32\l  %114 = mul nsw i32 %113, %107\l  %115 = add nsw i32 %114, %89\l  %116 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %104\l  %117 = load i8, i8 addrspace(1)* %116, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %118 = sext i8 %117 to i32\l  %119 = mul nsw i32 %118, %113\l  %120 = add nsw i32 %119, %94\l  %121 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %104\l  %122 = load i8, i8 addrspace(1)* %121, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %123 = sext i8 %122 to i32\l  %124 = mul nsw i32 %123, %113\l  %125 = add nsw i32 %124, %99\l  %126 = add nuw nsw i32 %73, 2\l  %127 = add i32 %74, 2\l  %128 = icmp eq i32 %127, %51\l  br i1 %128, label %129, label %69, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5e325f0:s0 -> Node0x5e32560;
	Node0x5e325f0:s1 -> Node0x5e325f0;
	Node0x5e32560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%129:\l129:                                              \l  %130 = phi i32 [ undef, %63 ], [ %115, %69 ]\l  %131 = phi i32 [ undef, %63 ], [ %120, %69 ]\l  %132 = phi i32 [ undef, %63 ], [ %125, %69 ]\l  %133 = phi i32 [ %64, %63 ], [ %125, %69 ]\l  %134 = phi i32 [ %65, %63 ], [ %120, %69 ]\l  %135 = phi i32 [ %66, %63 ], [ %115, %69 ]\l  %136 = phi i32 [ 0, %63 ], [ %126, %69 ]\l  br i1 %52, label %163, label %137\l|{<s0>T|<s1>F}}"];
	Node0x5e32560:s0 -> Node0x5e31e30;
	Node0x5e32560:s1 -> Node0x5e35880;
	Node0x5e35880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%137:\l137:                                              \l  %138 = add nsw i32 %136, %41\l  %139 = mul nsw i32 %138, %7\l  %140 = add nsw i32 %68, %139\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %141\l  %143 = load i8, i8 addrspace(1)* %142, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %144 = sext i8 %143 to i32\l  %145 = mul nsw i32 %136, %9\l  %146 = add nsw i32 %145, %67\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %147\l  %149 = load i8, i8 addrspace(1)* %148, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %150 = sext i8 %149 to i32\l  %151 = mul nsw i32 %150, %144\l  %152 = add nsw i32 %151, %135\l  %153 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %141\l  %154 = load i8, i8 addrspace(1)* %153, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %155 = sext i8 %154 to i32\l  %156 = mul nsw i32 %155, %150\l  %157 = add nsw i32 %156, %134\l  %158 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %141\l  %159 = load i8, i8 addrspace(1)* %158, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %160 = sext i8 %159 to i32\l  %161 = mul nsw i32 %160, %150\l  %162 = add nsw i32 %161, %133\l  br label %163\l}"];
	Node0x5e35880 -> Node0x5e31e30;
	Node0x5e31e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%163:\l163:                                              \l  %164 = phi i32 [ %130, %129 ], [ %152, %137 ]\l  %165 = phi i32 [ %131, %129 ], [ %157, %137 ]\l  %166 = phi i32 [ %132, %129 ], [ %162, %137 ]\l  %167 = add nuw nsw i32 %67, 1\l  %168 = icmp eq i32 %167, %9\l  br i1 %168, label %169, label %63, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5e31e30:s0 -> Node0x5e36af0;
	Node0x5e31e30:s1 -> Node0x5e30eb0;
	Node0x5e36af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%169:\l169:                                              \l  %170 = sitofp i32 %164 to double\l  %171 = sitofp i32 %165 to double\l  %172 = sitofp i32 %166 to double\l  br label %173\l}"];
	Node0x5e36af0 -> Node0x5e30ad0;
	Node0x5e30ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%173:\l173:                                              \l  %174 = phi double [ 0.000000e+00, %46 ], [ %170, %169 ]\l  %175 = phi double [ 0.000000e+00, %46 ], [ %171, %169 ]\l  %176 = phi double [ 0.000000e+00, %46 ], [ %172, %169 ]\l  %177 = mul nsw i32 %9, %9\l  %178 = sitofp i32 %177 to double\l  %179 = fdiv contract double %174, %178\l  %180 = fptosi double %179 to i8\l  %181 = sext i32 %29 to i64\l  %182 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %181\l  store i8 %180, i8 addrspace(1)* %182, align 1, !tbaa !7\l  %183 = fdiv contract double %175, %178\l  %184 = fptosi double %183 to i8\l  %185 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %181\l  store i8 %184, i8 addrspace(1)* %185, align 1, !tbaa !7\l  %186 = fdiv contract double %176, %178\l  %187 = fptosi double %186 to i8\l  br label %188\l}"];
	Node0x5e30ad0 -> Node0x5e31d30;
	Node0x5e31d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%188:\l188:                                              \l  %189 = phi i64 [ %181, %173 ], [ %54, %53 ]\l  %190 = phi i8 [ %187, %173 ], [ %62, %53 ]\l  %191 = getelementptr inbounds i8, i8 addrspace(1)* %6, i64 %189\l  store i8 %190, i8 addrspace(1)* %191, align 1, !tbaa !7\l  br label %192\l}"];
	Node0x5e31d30 -> Node0x5e2dc70;
	Node0x5e2dc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%192:\l192:                                              \l  ret void\l}"];
}
