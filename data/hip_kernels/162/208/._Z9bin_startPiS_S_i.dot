digraph "CFG for '_Z9bin_startPiS_S_i' function" {
	label="CFG for '_Z9bin_startPiS_S_i' function";

	Node0x5b09180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = icmp slt i32 %13, %3\l  br i1 %14, label %15, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5b09180:s0 -> Node0x5b091d0;
	Node0x5b09180:s1 -> Node0x5b0b110;
	Node0x5b091d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %16\l  %18 = load i32, i32 addrspace(1)* %17, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %19 = add nuw nsw i32 %5, 1\l  %20 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sharedBin,\l... i32 0, i32 %19\l  store i32 %18, i32 addrspace(3)* %20, align 4, !tbaa !7\l  %21 = icmp sgt i32 %13, 0\l  %22 = icmp eq i32 %5, 0\l  %23 = and i1 %22, %21\l  br i1 %23, label %24, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5b091d0:s0 -> Node0x5b0c5d0;
	Node0x5b091d0:s1 -> Node0x5b0b110;
	Node0x5b0c5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%24:\l24:                                               \l  %25 = add nsw i32 %13, -1\l  %26 = zext i32 %25 to i64\l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %26\l  %28 = load i32, i32 addrspace(1)* %27, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  store i32 %28, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @sharedBin, i32 0, i32 0), align 4, !tbaa !7\l  br label %29\l}"];
	Node0x5b0c5d0 -> Node0x5b0b110;
	Node0x5b0b110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %14, label %30, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5b0b110:s0 -> Node0x5b0cfb0;
	Node0x5b0b110:s1 -> Node0x5b0d040;
	Node0x5b0cfb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = sext i32 %13 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !7\l  %34 = icmp eq i32 %13, 0\l  br i1 %34, label %39, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5b0cfb0:s0 -> Node0x5b0d4a0;
	Node0x5b0cfb0:s1 -> Node0x5b0d4f0;
	Node0x5b0d4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%35:\l35:                                               \l  %36 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sharedBin,\l... i32 0, i32 %5\l  %37 = load i32, i32 addrspace(3)* %36, align 4, !tbaa !7\l  %38 = icmp eq i32 %33, %37\l  br i1 %38, label %48, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5b0d4f0:s0 -> Node0x5b0d7f0;
	Node0x5b0d4f0:s1 -> Node0x5b0d4a0;
	Node0x5b0d4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%39:\l39:                                               \l  %40 = sext i32 %33 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %40\l  store i32 %13, i32 addrspace(1)* %41, align 4, !tbaa !7\l  %42 = icmp sgt i32 %13, 0\l  br i1 %42, label %43, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5b0d4a0:s0 -> Node0x5b0db20;
	Node0x5b0d4a0:s1 -> Node0x5b0d7f0;
	Node0x5b0db20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%43:\l43:                                               \l  %44 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sharedBin,\l... i32 0, i32 %5\l  %45 = load i32, i32 addrspace(3)* %44, align 4, !tbaa !7\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %46\l  store i32 %13, i32 addrspace(1)* %47, align 4, !tbaa !7\l  br label %48\l}"];
	Node0x5b0db20 -> Node0x5b0d7f0;
	Node0x5b0d7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%48:\l48:                                               \l  %49 = add nsw i32 %3, -1\l  %50 = icmp eq i32 %13, %49\l  br i1 %50, label %51, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5b0d7f0:s0 -> Node0x5b0e080;
	Node0x5b0d7f0:s1 -> Node0x5b0d040;
	Node0x5b0e080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%51:\l51:                                               \l  %52 = add nsw i32 %13, 1\l  %53 = sext i32 %33 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %53\l  store i32 %52, i32 addrspace(1)* %54, align 4, !tbaa !7\l  br label %55\l}"];
	Node0x5b0e080 -> Node0x5b0d040;
	Node0x5b0d040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  ret void\l}"];
}
