digraph "CFG for '_Z20matchValidity_kernelPfS_ii' function" {
	label="CFG for '_Z20matchValidity_kernelPfS_ii' function";

	Node0x4c126b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp ult i32 %13, %2\l  %23 = icmp ult i32 %21, %3\l  %24 = and i1 %22, %23\l  br i1 %24, label %25, label %42\l|{<s0>T|<s1>F}}"];
	Node0x4c126b0:s0 -> Node0x4c16100;
	Node0x4c126b0:s1 -> Node0x4c16190;
	Node0x4c16100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%25:\l25:                                               \l  %26 = mul i32 %21, %2\l  %27 = add i32 %26, %13\l  %28 = zext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = tail call i1 @llvm.amdgcn.class.f32(float %30, i32 504)\l  br i1 %31, label %32, label %36\l|{<s0>T|<s1>F}}"];
	Node0x4c16100:s0 -> Node0x4c16910;
	Node0x4c16100:s1 -> Node0x4c169a0;
	Node0x4c16910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%32:\l32:                                               \l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %28\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %35 = tail call i1 @llvm.amdgcn.class.f32(float %34, i32 504)\l  br i1 %35, label %42, label %36\l|{<s0>T|<s1>F}}"];
	Node0x4c16910:s0 -> Node0x4c16190;
	Node0x4c16910:s1 -> Node0x4c169a0;
	Node0x4c169a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%36:\l36:                                               \l  store float 0x7FF8000000000000, float addrspace(1)* %29, align 4, !tbaa !7\l  %37 = mul nsw i32 %3, %2\l  %38 = add i32 %27, %37\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  store float 0x7FF8000000000000, float addrspace(1)* %40, align 4, !tbaa !7\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %28\l  store float 0x7FF8000000000000, float addrspace(1)* %41, align 4, !tbaa !7\l  br label %42\l}"];
	Node0x4c169a0 -> Node0x4c16190;
	Node0x4c16190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  ret void\l}"];
}
