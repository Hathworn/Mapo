digraph "CFG for '_Z20colorInvalids_kernelP15HIP_vector_typeIhLj4EEPKfii' function" {
	label="CFG for '_Z20colorInvalids_kernelP15HIP_vector_typeIhLj4EEPKfii' function";

	Node0x5422120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = shl i32 %5, 8\l  %12 = ashr exact i32 %11, 8\l  %13 = mul nsw i32 %12, %10\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = shl i32 %16, 8\l  %22 = ashr exact i32 %21, 8\l  %23 = mul nsw i32 %22, %20\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %15, %2\l  %27 = icmp slt i32 %25, %3\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5422120:s0 -> Node0x5425dd0;
	Node0x5422120:s1 -> Node0x5425e60;
	Node0x5425dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = shl i32 %25, 8\l  %31 = ashr exact i32 %30, 8\l  %32 = shl i32 %2, 8\l  %33 = ashr exact i32 %32, 8\l  %34 = mul nsw i32 %31, %33\l  %35 = add nsw i32 %34, %15\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %36, i32 0, i32 0, i32 0, i64 0\l  %38 = load i8, i8 addrspace(1)* %37, align 4, !amdgpu.noclobber !5\l  %39 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %36, i32 0, i32 0, i32 0, i64 1\l  %40 = load i8, i8 addrspace(1)* %39, align 1, !amdgpu.noclobber !5\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %36\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = tail call i1 @llvm.amdgcn.class.f32(float %42, i32 504)\l  %44 = uitofp i8 %38 to float\l  %45 = fmul contract float %44, 5.000000e-01\l  %46 = fptoui float %45 to i8\l  %47 = uitofp i8 %40 to float\l  %48 = fmul contract float %47, 5.000000e-01\l  %49 = fptoui float %48 to i8\l  %50 = select i1 %43, i8 %38, i8 %46\l  %51 = select i1 %43, i8 %40, i8 %49\l  store i8 %50, i8 addrspace(1)* %37, align 4\l  store i8 %51, i8 addrspace(1)* %39, align 1\l  br label %52\l}"];
	Node0x5425dd0 -> Node0x5425e60;
	Node0x5425e60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  ret void\l}"];
}
