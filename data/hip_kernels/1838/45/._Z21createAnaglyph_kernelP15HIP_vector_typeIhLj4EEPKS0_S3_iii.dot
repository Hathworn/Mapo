digraph "CFG for '_Z21createAnaglyph_kernelP15HIP_vector_typeIhLj4EEPKS0_S3_iii' function" {
	label="CFG for '_Z21createAnaglyph_kernelP15HIP_vector_typeIhLj4EEPKS0_S3_iii' function";

	Node0x469a670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = sub nsw i32 %15, %5\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = icmp slt i32 %15, %3\l  %26 = icmp slt i32 %24, %4\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %78\l|{<s0>T|<s1>F}}"];
	Node0x469a670:s0 -> Node0x469e120;
	Node0x469a670:s1 -> Node0x469e1b0;
	Node0x469e120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%28:\l28:                                               \l  %29 = mul nsw i32 %24, %3\l  %30 = add nsw i32 %29, %15\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %31\l  %33 = bitcast %struct.HIP_vector_type addrspace(1)* %32 to i32 addrspace(1)*\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !amdgpu.noclobber !5\l  %35 = trunc i32 %34 to i8\l  %36 = lshr i32 %34, 8\l  %37 = trunc i32 %36 to i8\l  %38 = lshr i32 %34, 16\l  %39 = trunc i32 %38 to i8\l  %40 = uitofp i8 %35 to float\l  %41 = fmul contract float %40, 0x3FD322D0E0000000\l  %42 = uitofp i8 %37 to float\l  %43 = fmul contract float %42, 0x3FE2C8B440000000\l  %44 = fadd contract float %41, %43\l  %45 = uitofp i8 %39 to float\l  %46 = fmul contract float %45, 0x3FBD2F1AA0000000\l  %47 = fadd contract float %46, %44\l  %48 = fptoui float %47 to i8\l  %49 = icmp sgt i32 %16, 0\l  %50 = icmp slt i32 %16, %3\l  %51 = select i1 %49, i1 %50, i1 false\l  br i1 %51, label %52, label %72\l|{<s0>T|<s1>F}}"];
	Node0x469e120:s0 -> Node0x469fb30;
	Node0x469e120:s1 -> Node0x469fbc0;
	Node0x469fb30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%52:\l52:                                               \l  %53 = add nsw i32 %29, %16\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %54\l  %56 = bitcast %struct.HIP_vector_type addrspace(1)* %55 to i32 addrspace(1)*\l  %57 = load i32, i32 addrspace(1)* %56, align 4, !amdgpu.noclobber !5\l  %58 = trunc i32 %57 to i8\l  %59 = lshr i32 %57, 8\l  %60 = trunc i32 %59 to i8\l  %61 = lshr i32 %57, 16\l  %62 = trunc i32 %61 to i8\l  %63 = uitofp i8 %58 to float\l  %64 = fmul contract float %63, 0x3FD322D0E0000000\l  %65 = uitofp i8 %60 to float\l  %66 = fmul contract float %65, 0x3FE2C8B440000000\l  %67 = fadd contract float %64, %66\l  %68 = uitofp i8 %62 to float\l  %69 = fmul contract float %68, 0x3FBD2F1AA0000000\l  %70 = fadd contract float %69, %67\l  %71 = fptoui float %70 to i8\l  br label %72\l}"];
	Node0x469fb30 -> Node0x469fbc0;
	Node0x469fbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%72:\l72:                                               \l  %73 = phi i8 [ %71, %52 ], [ 0, %28 ]\l  %74 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 0\l  store i8 %48, i8 addrspace(1)* %74, align 4\l  %75 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 1\l  store i8 %73, i8 addrspace(1)* %75, align 1\l  %76 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 2\l  store i8 %73, i8 addrspace(1)* %76, align 2\l  %77 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31, i32 0, i32 0, i32 0, i64 3\l  store i8 -1, i8 addrspace(1)* %77, align 1\l  br label %78\l}"];
	Node0x469fbc0 -> Node0x469e1b0;
	Node0x469e1b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%78:\l78:                                               \l  ret void\l}"];
}
