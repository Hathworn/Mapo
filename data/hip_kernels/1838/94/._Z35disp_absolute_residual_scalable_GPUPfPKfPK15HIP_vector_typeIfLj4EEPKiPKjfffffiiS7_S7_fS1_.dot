digraph "CFG for '_Z35disp_absolute_residual_scalable_GPUPfPKfPK15HIP_vector_typeIfLj4EEPKiPKjfffffiiS7_S7_fS1_' function" {
	label="CFG for '_Z35disp_absolute_residual_scalable_GPUPfPKfPK15HIP_vector_typeIfLj4EEPKiPKjfffffiiS7_S7_fS1_' function";

	Node0x5fa3640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l  %17 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %18 = getelementptr i8, i8 addrspace(4)* %17, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %23 = mul i32 %22, %21\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %25, %11\l  br i1 %26, label %27, label %134\l|{<s0>T|<s1>F}}"];
	Node0x5fa3640:s0 -> Node0x5fa6210;
	Node0x5fa3640:s1 -> Node0x5fa62a0;
	Node0x5fa6210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%27:\l27:                                               \l  %28 = sext i32 %25 to i64\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %28\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %31 = zext i32 %30 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %34 = getelementptr inbounds float, float addrspace(1)* %1, i64 %28\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %36 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64 0\l  %37 = load float, float addrspace(1)* %36, align 16, !amdgpu.noclobber !5\l  %38 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64 1\l  %39 = load float, float addrspace(1)* %38, align 4, !amdgpu.noclobber !5\l  %40 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64 2\l  %41 = load float, float addrspace(1)* %40, align 8, !amdgpu.noclobber !5\l  %42 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64 3\l  %43 = load float, float addrspace(1)* %42, align 4, !amdgpu.noclobber !5\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %28\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %46 = sitofp i32 %45 to float\l  %47 = sitofp i32 %10 to float\l  %48 = fdiv contract float %46, %47\l  %49 = tail call float @llvm.floor.f32(float %48)\l  %50 = fmul contract float %49, %47\l  %51 = fsub contract float %46, %50\l  %52 = fsub contract float %51, %7\l  %53 = fdiv contract float %52, %5\l  %54 = fsub contract float %49, %8\l  %55 = fdiv contract float %54, %6\l  %56 = fneg contract float %5\l  %57 = fmul contract float %56, %9\l  %58 = fdiv contract float %57, %35\l  %59 = fmul contract float %58, %53\l  %60 = fmul contract float %58, %55\l  %61 = fmul contract float %37, %53\l  %62 = fmul contract float %37, %55\l  %63 = sext i32 %33 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %12, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %66 = add nsw i32 %65, %25\l  %67 = mul nsw i32 %33, 6\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %15, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %71 = or i32 %67, 1\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %15, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %75 = add nsw i32 %67, 2\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %15, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %79 = add nsw i32 %67, 3\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %15, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %83 = add nsw i32 %67, 4\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %15, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %87 = add nsw i32 %67, 5\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %15, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %91 = fmul contract float %39, %61\l  %92 = fmul contract float %39, %59\l  %93 = fsub contract float %91, %92\l  %94 = fmul contract float %41, %60\l  %95 = fsub contract float %93, %94\l  %96 = fmul contract float %41, %62\l  %97 = fadd contract float %96, %95\l  %98 = fmul contract float %58, %43\l  %99 = fsub contract float %97, %98\l  %100 = fmul contract float %37, %43\l  %101 = fadd contract float %100, %99\l  %102 = fmul contract float %39, %70\l  %103 = fadd contract float %102, %101\l  %104 = fmul contract float %41, %74\l  %105 = fadd contract float %104, %103\l  %106 = fmul contract float %43, %78\l  %107 = fadd contract float %106, %105\l  %108 = fmul contract float %41, %61\l  %109 = fmul contract float %90, %108\l  %110 = fadd contract float %109, %107\l  %111 = fmul contract float %43, %61\l  %112 = fmul contract float %86, %111\l  %113 = fsub contract float %110, %112\l  %114 = fmul contract float %39, %62\l  %115 = fmul contract float %114, %90\l  %116 = fsub contract float %113, %115\l  %117 = fmul contract float %43, %62\l  %118 = fmul contract float %82, %117\l  %119 = fadd contract float %118, %116\l  %120 = fmul contract float %37, %39\l  %121 = fmul contract float %120, %86\l  %122 = fadd contract float %121, %119\l  %123 = fmul contract float %37, %41\l  %124 = fmul contract float %123, %82\l  %125 = fsub contract float %122, %124\l  %126 = fmul contract float %5, %9\l  %127 = fmul contract float %37, %37\l  %128 = fdiv contract float %126, %127\l  %129 = fmul contract float %128, %125\l  %130 = tail call float @llvm.fabs.f32(float %129)\l  %131 = fmul contract float %130, %14\l  %132 = sext i32 %66 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %0, i64 %132\l  store float %131, float addrspace(1)* %133, align 4, !tbaa !11\l  br label %134\l}"];
	Node0x5fa6210 -> Node0x5fa62a0;
	Node0x5fa62a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%134:\l134:                                              \l  ret void\l}"];
}
