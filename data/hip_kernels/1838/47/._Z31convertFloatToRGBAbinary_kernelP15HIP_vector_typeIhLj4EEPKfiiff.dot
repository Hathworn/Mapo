digraph "CFG for '_Z31convertFloatToRGBAbinary_kernelP15HIP_vector_typeIhLj4EEPKfiiff' function" {
	label="CFG for '_Z31convertFloatToRGBAbinary_kernelP15HIP_vector_typeIhLj4EEPKfiiff' function";

	Node0x541a270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = shl i32 %7, 8\l  %14 = ashr exact i32 %13, 8\l  %15 = mul nsw i32 %14, %12\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = shl i32 %18, 8\l  %24 = ashr exact i32 %23, 8\l  %25 = mul nsw i32 %24, %22\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %27 = add i32 %25, %26\l  %28 = icmp slt i32 %17, %2\l  %29 = icmp slt i32 %27, %3\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %52\l|{<s0>T|<s1>F}}"];
	Node0x541a270:s0 -> Node0x541df20;
	Node0x541a270:s1 -> Node0x541dfb0;
	Node0x541df20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%31:\l31:                                               \l  %32 = shl i32 %27, 8\l  %33 = ashr exact i32 %32, 8\l  %34 = shl i32 %2, 8\l  %35 = ashr exact i32 %34, 8\l  %36 = mul nsw i32 %33, %35\l  %37 = add nsw i32 %36, %17\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %1, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %41 = tail call i1 @llvm.amdgcn.class.f32(float %40, i32 504)\l  %42 = xor i1 %41, true\l  %43 = fcmp contract olt float %40, %4\l  %44 = select i1 %42, i1 true, i1 %43\l  %45 = fcmp contract ogt float %40, %5\l  %46 = select i1 %44, i1 true, i1 %45\l  %47 = sext i1 %46 to i8\l  %48 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %38, i32 0, i32 0, i32 0, i64 0\l  store i8 %47, i8 addrspace(1)* %48, align 4\l  %49 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %38, i32 0, i32 0, i32 0, i64 1\l  store i8 %47, i8 addrspace(1)* %49, align 1\l  %50 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %38, i32 0, i32 0, i32 0, i64 2\l  store i8 %47, i8 addrspace(1)* %50, align 2\l  %51 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %38, i32 0, i32 0, i32 0, i64 3\l  store i8 %47, i8 addrspace(1)* %51, align 1\l  br label %52\l}"];
	Node0x541df20 -> Node0x541dfb0;
	Node0x541dfb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  ret void\l}"];
}
