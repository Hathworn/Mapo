digraph "CFG for '_Z38blendFloatImageFloatLabelToRGBA_kernelP15HIP_vector_typeIhLj4EEPKfS3_iiff' function" {
	label="CFG for '_Z38blendFloatImageFloatLabelToRGBA_kernelP15HIP_vector_typeIhLj4EEPKfS3_iiff' function";

	Node0x551e470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = shl i32 %8, 8\l  %15 = ashr exact i32 %14, 8\l  %16 = mul nsw i32 %15, %13\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = shl i32 %19, 8\l  %25 = ashr exact i32 %24, 8\l  %26 = mul nsw i32 %25, %23\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %28 = add i32 %26, %27\l  %29 = icmp slt i32 %18, %3\l  %30 = icmp slt i32 %28, %4\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %61\l|{<s0>T|<s1>F}}"];
	Node0x551e470:s0 -> Node0x5522110;
	Node0x551e470:s1 -> Node0x55221a0;
	Node0x5522110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = shl i32 %28, 8\l  %34 = ashr exact i32 %33, 8\l  %35 = shl i32 %3, 8\l  %36 = ashr exact i32 %35, 8\l  %37 = mul nsw i32 %34, %36\l  %38 = add nsw i32 %37, %18\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = fmul contract float %41, 5.000000e-01\l  %43 = fadd contract float %42, 1.280000e+02\l  %44 = fptoui float %43 to i8\l  %45 = getelementptr inbounds float, float addrspace(1)* %2, i64 %39\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = tail call i1 @llvm.amdgcn.class.f32(float %46, i32 504)\l  %48 = xor i1 %47, true\l  %49 = fcmp contract olt float %46, %5\l  %50 = select i1 %48, i1 true, i1 %49\l  %51 = fcmp contract ogt float %46, %6\l  %52 = select i1 %50, i1 true, i1 %51\l  %53 = uitofp i8 %44 to float\l  %54 = fmul contract float %53, 0x3FE3333340000000\l  %55 = fptoui float %54 to i8\l  %56 = select i1 %52, i8 %44, i8 %55\l  %57 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %39, i32 0, i32 0, i32 0, i64 0\l  store i8 %56, i8 addrspace(1)* %57, align 4\l  %58 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %39, i32 0, i32 0, i32 0, i64 1\l  store i8 %56, i8 addrspace(1)* %58, align 1\l  %59 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %39, i32 0, i32 0, i32 0, i64 2\l  store i8 %44, i8 addrspace(1)* %59, align 2\l  %60 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %39, i32 0, i32 0, i32 0, i64 3\l  store i8 -1, i8 addrspace(1)* %60, align 1\l  br label %61\l}"];
	Node0x5522110 -> Node0x55221a0;
	Node0x55221a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  ret void\l}"];
}
