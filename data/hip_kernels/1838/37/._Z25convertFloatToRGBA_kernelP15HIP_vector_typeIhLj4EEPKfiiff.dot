digraph "CFG for '_Z25convertFloatToRGBA_kernelP15HIP_vector_typeIhLj4EEPKfiiff' function" {
	label="CFG for '_Z25convertFloatToRGBA_kernelP15HIP_vector_typeIhLj4EEPKfiiff' function";

	Node0x4c189f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = shl i32 %7, 8\l  %14 = ashr exact i32 %13, 8\l  %15 = mul nsw i32 %14, %12\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = shl i32 %18, 8\l  %24 = ashr exact i32 %23, 8\l  %25 = mul nsw i32 %24, %22\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %27 = add i32 %25, %26\l  %28 = icmp slt i32 %17, %2\l  %29 = icmp slt i32 %27, %3\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %85\l|{<s0>T|<s1>F}}"];
	Node0x4c189f0:s0 -> Node0x4c1c6b0;
	Node0x4c189f0:s1 -> Node0x4c1c740;
	Node0x4c1c6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%31:\l31:                                               \l  %32 = shl i32 %27, 8\l  %33 = ashr exact i32 %32, 8\l  %34 = shl i32 %2, 8\l  %35 = ashr exact i32 %34, 8\l  %36 = mul nsw i32 %33, %35\l  %37 = add nsw i32 %36, %17\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %1, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %41 = tail call i1 @llvm.amdgcn.class.f32(float %40, i32 504)\l  br i1 %41, label %42, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4c1c6b0:s0 -> Node0x4c1d240;
	Node0x4c1c6b0:s1 -> Node0x4c1d2d0;
	Node0x4c1d240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%42:\l42:                                               \l  %43 = fsub contract float %40, %4\l  %44 = fsub contract float %5, %4\l  %45 = fdiv contract float %43, %44\l  %46 = fcmp contract olt float %45, 2.500000e-01\l  br i1 %46, label %47, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4c1d240:s0 -> Node0x4c1e060;
	Node0x4c1d240:s1 -> Node0x4c1e0f0;
	Node0x4c1e060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%47:\l47:                                               \l  %48 = fmul contract float %45, 4.000000e+00\l  br label %70\l}"];
	Node0x4c1e060 -> Node0x4c1e2c0;
	Node0x4c1e0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%49:\l49:                                               \l  %50 = fcmp contract olt float %45, 5.000000e-01\l  br i1 %50, label %51, label %58\l|{<s0>T|<s1>F}}"];
	Node0x4c1e0f0:s0 -> Node0x4c1e450;
	Node0x4c1e0f0:s1 -> Node0x4c1e4e0;
	Node0x4c1e450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%51:\l51:                                               \l  %52 = fsub contract float 2.500000e-01, %45\l  %53 = fmul contract float %52, 4.000000e+00\l  %54 = fadd contract float %53, 1.000000e+00\l  %55 = fpext float %54 to double\l  %56 = fmul contract double %55, 2.550000e+02\l  %57 = fptoui double %56 to i8\l  br label %70\l}"];
	Node0x4c1e450 -> Node0x4c1e2c0;
	Node0x4c1e4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%58:\l58:                                               \l  %59 = fcmp contract olt float %45, 7.500000e-01\l  br i1 %59, label %60, label %66\l|{<s0>T|<s1>F}}"];
	Node0x4c1e4e0:s0 -> Node0x4c1ea80;
	Node0x4c1e4e0:s1 -> Node0x4c1eb10;
	Node0x4c1ea80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%60:\l60:                                               \l  %61 = fadd contract float %45, -5.000000e-01\l  %62 = fmul contract float %61, 4.000000e+00\l  %63 = fpext float %62 to double\l  %64 = fmul contract double %63, 2.550000e+02\l  %65 = fptoui double %64 to i8\l  br label %70\l}"];
	Node0x4c1ea80 -> Node0x4c1e2c0;
	Node0x4c1eb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%66:\l66:                                               \l  %67 = fsub contract float 7.500000e-01, %45\l  %68 = fmul contract float %67, 4.000000e+00\l  %69 = fadd contract float %68, 1.000000e+00\l  br label %70\l}"];
	Node0x4c1eb10 -> Node0x4c1e2c0;
	Node0x4c1e2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%70:\l70:                                               \l  %71 = phi i8 [ 0, %47 ], [ 0, %51 ], [ %65, %60 ], [ -1, %66 ]\l  %72 = phi float [ %48, %47 ], [ 1.000000e+00, %51 ], [ 1.000000e+00, %60 ],\l... [ %69, %66 ]\l  %73 = phi i8 [ -1, %47 ], [ %57, %51 ], [ 0, %60 ], [ 0, %66 ]\l  %74 = fpext float %72 to double\l  %75 = fmul contract double %74, 2.550000e+02\l  %76 = fptoui double %75 to i8\l  br label %77\l}"];
	Node0x4c1e2c0 -> Node0x4c1d2d0;
	Node0x4c1d2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%77:\l77:                                               \l  %78 = phi i8 [ %73, %70 ], [ -1, %31 ]\l  %79 = phi i8 [ %76, %70 ], [ -1, %31 ]\l  %80 = phi i8 [ %71, %70 ], [ -1, %31 ]\l  %81 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %38, i32 0, i32 0, i32 0, i64 0\l  store i8 %80, i8 addrspace(1)* %81, align 4\l  %82 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %38, i32 0, i32 0, i32 0, i64 1\l  store i8 %79, i8 addrspace(1)* %82, align 1\l  %83 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %38, i32 0, i32 0, i32 0, i64 2\l  store i8 %78, i8 addrspace(1)* %83, align 2\l  %84 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %38, i32 0, i32 0, i32 0, i64 3\l  store i8 -1, i8 addrspace(1)* %84, align 1\l  br label %85\l}"];
	Node0x4c1d2d0 -> Node0x4c1c740;
	Node0x4c1c740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  ret void\l}"];
}
