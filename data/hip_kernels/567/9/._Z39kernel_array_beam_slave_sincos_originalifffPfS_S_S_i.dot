digraph "CFG for '_Z39kernel_array_beam_slave_sincos_originalifffPfS_S_S_i' function" {
	label="CFG for '_Z39kernel_array_beam_slave_sincos_originalifffPfS_S_S_i' function";

	Node0x52d7460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = icmp ult i32 %10, %0\l  br i1 %11, label %12, label %177\l|{<s0>T|<s1>F}}"];
	Node0x52d7460:s0 -> Node0x52d71b0;
	Node0x52d7460:s1 -> Node0x52d8a10;
	Node0x52d71b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%12:\l12:                                               \l  %13 = zext i32 %10 to i64\l  %14 = getelementptr inbounds float, float addrspace(1)* %4, i64 %13\l  %15 = load float, float addrspace(1)* %14, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %16 = fmul contract float %15, %1\l  %17 = getelementptr inbounds float, float addrspace(1)* %5, i64 %13\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %19 = fmul contract float %18, %2\l  %20 = fadd contract float %16, %19\l  %21 = getelementptr inbounds float, float addrspace(1)* %6, i64 %13\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %23 = fmul contract float %22, %3\l  %24 = fadd contract float %20, %23\l  %25 = tail call float @llvm.fabs.f32(float %24)\l  %26 = fcmp olt float %25, 1.310720e+05\l  br i1 %26, label %27, label %35\l|{<s0>T|<s1>F}}"];
	Node0x52d71b0:s0 -> Node0x52dae60;
	Node0x52d71b0:s1 -> Node0x52daef0;
	Node0x52dae60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%27:\l27:                                               \l  %28 = fmul float %25, 0x3FE45F3060000000\l  %29 = tail call float @llvm.rint.f32(float %28)\l  %30 = tail call float @llvm.fma.f32(float %29, float 0xBFF921FB40000000,\l... float %25)\l  %31 = tail call float @llvm.fma.f32(float %29, float 0xBE74442D00000000,\l... float %30)\l  %32 = tail call float @llvm.fma.f32(float %29, float 0xBCF8469880000000,\l... float %31)\l  %33 = fptosi float %29 to i32\l  %34 = bitcast float %25 to i32\l  br label %141\l}"];
	Node0x52dae60 -> Node0x52dbad0;
	Node0x52daef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%35:\l35:                                               \l  %36 = bitcast float %25 to i32\l  %37 = lshr i32 %36, 23\l  %38 = and i32 %36, 8388607\l  %39 = or i32 %38, 8388608\l  %40 = zext i32 %39 to i64\l  %41 = mul nuw nsw i64 %40, 4266746795\l  %42 = trunc i64 %41 to i32\l  %43 = lshr i64 %41, 32\l  %44 = mul nuw nsw i64 %40, 1011060801\l  %45 = add nuw nsw i64 %43, %44\l  %46 = trunc i64 %45 to i32\l  %47 = lshr i64 %45, 32\l  %48 = mul nuw nsw i64 %40, 3680671129\l  %49 = add nuw nsw i64 %47, %48\l  %50 = trunc i64 %49 to i32\l  %51 = lshr i64 %49, 32\l  %52 = mul nuw nsw i64 %40, 4113882560\l  %53 = add nuw nsw i64 %51, %52\l  %54 = trunc i64 %53 to i32\l  %55 = lshr i64 %53, 32\l  %56 = mul nuw nsw i64 %40, 4230436817\l  %57 = add nuw nsw i64 %55, %56\l  %58 = trunc i64 %57 to i32\l  %59 = lshr i64 %57, 32\l  %60 = mul nuw nsw i64 %40, 1313084713\l  %61 = add nuw nsw i64 %59, %60\l  %62 = trunc i64 %61 to i32\l  %63 = lshr i64 %61, 32\l  %64 = mul nuw nsw i64 %40, 2734261102\l  %65 = add nuw nsw i64 %63, %64\l  %66 = trunc i64 %65 to i32\l  %67 = lshr i64 %65, 32\l  %68 = trunc i64 %67 to i32\l  %69 = add nsw i32 %37, -120\l  %70 = icmp ugt i32 %69, 63\l  %71 = select i1 %70, i32 %62, i32 %68\l  %72 = select i1 %70, i32 %58, i32 %66\l  %73 = select i1 %70, i32 %54, i32 %62\l  %74 = select i1 %70, i32 %50, i32 %58\l  %75 = select i1 %70, i32 %46, i32 %54\l  %76 = select i1 %70, i32 %42, i32 %50\l  %77 = select i1 %70, i32 -64, i32 0\l  %78 = add nsw i32 %77, %69\l  %79 = icmp ugt i32 %78, 31\l  %80 = select i1 %79, i32 %72, i32 %71\l  %81 = select i1 %79, i32 %73, i32 %72\l  %82 = select i1 %79, i32 %74, i32 %73\l  %83 = select i1 %79, i32 %75, i32 %74\l  %84 = select i1 %79, i32 %76, i32 %75\l  %85 = select i1 %79, i32 -32, i32 0\l  %86 = add nsw i32 %85, %78\l  %87 = icmp ugt i32 %86, 31\l  %88 = select i1 %87, i32 %81, i32 %80\l  %89 = select i1 %87, i32 %82, i32 %81\l  %90 = select i1 %87, i32 %83, i32 %82\l  %91 = select i1 %87, i32 %84, i32 %83\l  %92 = select i1 %87, i32 -32, i32 0\l  %93 = add nsw i32 %92, %86\l  %94 = icmp eq i32 %93, 0\l  %95 = sub nsw i32 32, %93\l  %96 = tail call i32 @llvm.fshr.i32(i32 %88, i32 %89, i32 %95)\l  %97 = tail call i32 @llvm.fshr.i32(i32 %89, i32 %90, i32 %95)\l  %98 = tail call i32 @llvm.fshr.i32(i32 %90, i32 %91, i32 %95)\l  %99 = select i1 %94, i32 %88, i32 %96\l  %100 = select i1 %94, i32 %89, i32 %97\l  %101 = select i1 %94, i32 %90, i32 %98\l  %102 = lshr i32 %99, 29\l  %103 = tail call i32 @llvm.fshl.i32(i32 %99, i32 %100, i32 2)\l  %104 = tail call i32 @llvm.fshl.i32(i32 %100, i32 %101, i32 2)\l  %105 = tail call i32 @llvm.fshl.i32(i32 %101, i32 %91, i32 2)\l  %106 = and i32 %102, 1\l  %107 = sub nsw i32 0, %106\l  %108 = shl i32 %102, 31\l  %109 = xor i32 %103, %107\l  %110 = xor i32 %104, %107\l  %111 = xor i32 %105, %107\l  %112 = tail call i32 @llvm.ctlz.i32(i32 %109, i1 false), !range !10\l  %113 = sub nsw i32 31, %112\l  %114 = tail call i32 @llvm.fshr.i32(i32 %109, i32 %110, i32 %113)\l  %115 = tail call i32 @llvm.fshr.i32(i32 %110, i32 %111, i32 %113)\l  %116 = shl nuw nsw i32 %112, 23\l  %117 = sub nuw nsw i32 1056964608, %116\l  %118 = lshr i32 %114, 9\l  %119 = or i32 %118, %117\l  %120 = or i32 %119, %108\l  %121 = bitcast i32 %120 to float\l  %122 = tail call i32 @llvm.fshl.i32(i32 %114, i32 %115, i32 23)\l  %123 = tail call i32 @llvm.ctlz.i32(i32 %122, i1 false), !range !10\l  %124 = fmul float %121, 0x3FF921FB40000000\l  %125 = add nuw nsw i32 %123, %112\l  %126 = shl nuw nsw i32 %125, 23\l  %127 = sub nuw nsw i32 855638016, %126\l  %128 = sub nsw i32 31, %123\l  %129 = tail call i32 @llvm.fshr.i32(i32 %122, i32 %115, i32 %128)\l  %130 = lshr i32 %129, 9\l  %131 = or i32 %127, %130\l  %132 = or i32 %131, %108\l  %133 = bitcast i32 %132 to float\l  %134 = fneg float %124\l  %135 = tail call float @llvm.fma.f32(float %121, float 0x3FF921FB40000000,\l... float %134)\l  %136 = tail call float @llvm.fma.f32(float %121, float 0x3E74442D00000000,\l... float %135)\l  %137 = tail call float @llvm.fma.f32(float %133, float 0x3FF921FB40000000,\l... float %136)\l  %138 = fadd float %124, %137\l  %139 = lshr i32 %99, 30\l  %140 = add nuw nsw i32 %106, %139\l  br label %141\l}"];
	Node0x52daef0 -> Node0x52dbad0;
	Node0x52dbad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%141:\l141:                                              \l  %142 = phi i32 [ %34, %27 ], [ %36, %35 ]\l  %143 = phi float [ %32, %27 ], [ %138, %35 ]\l  %144 = phi i32 [ %33, %27 ], [ %140, %35 ]\l  %145 = fmul float %143, %143\l  %146 = tail call float @llvm.fmuladd.f32(float %145, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %147 = tail call float @llvm.fmuladd.f32(float %145, float %146, float\l... 0xBFC55553A0000000)\l  %148 = fmul float %145, %147\l  %149 = tail call float @llvm.fmuladd.f32(float %143, float %148, float %143)\l  %150 = tail call float @llvm.fmuladd.f32(float %145, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %151 = tail call float @llvm.fmuladd.f32(float %145, float %150, float\l... 0x3FA5557EE0000000)\l  %152 = tail call float @llvm.fmuladd.f32(float %145, float %151, float\l... 0xBFE0000080000000)\l  %153 = tail call float @llvm.fmuladd.f32(float %145, float %152, float\l... 1.000000e+00)\l  %154 = shl i32 %144, 30\l  %155 = and i32 %154, -2147483648\l  %156 = and i32 %144, 1\l  %157 = icmp eq i32 %156, 0\l  %158 = select i1 %157, float %149, float %153\l  %159 = bitcast float %158 to i32\l  %160 = bitcast float %24 to i32\l  %161 = xor i32 %142, %160\l  %162 = xor i32 %161, %159\l  %163 = xor i32 %162, %155\l  %164 = bitcast i32 %163 to float\l  %165 = fneg float %149\l  %166 = select i1 %157, float %153, float %165\l  %167 = bitcast float %166 to i32\l  %168 = xor i32 %155, %167\l  %169 = bitcast i32 %168 to float\l  %170 = tail call i1 @llvm.amdgcn.class.f32(float %25, i32 504)\l  %171 = select i1 %170, float %169, float 0x7FF8000000000000\l  %172 = select i1 %170, float %164, float 0x7FF8000000000000\l  %173 = shl nuw nsw i32 %10, 1\l  %174 = getelementptr inbounds [1000 x float], [1000 x float] addrspace(3)*\l... @_ZZ39kernel_array_beam_slave_sincos_originalifffPfS_S_S_iE6tmpsum, i32 0,\l... i32 %173\l  store float %172, float addrspace(3)* %174, align 8, !tbaa !5\l  %175 = add nuw nsw i32 %173, 1\l  %176 = getelementptr inbounds [1000 x float], [1000 x float] addrspace(3)*\l... @_ZZ39kernel_array_beam_slave_sincos_originalifffPfS_S_S_iE6tmpsum, i32 0,\l... i32 %175\l  store float %171, float addrspace(3)* %176, align 4, !tbaa !5\l  br label %177\l}"];
	Node0x52dbad0 -> Node0x52d8a10;
	Node0x52d8a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%177:\l177:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %178 = icmp sgt i32 %8, 1\l  br i1 %178, label %179, label %209\l|{<s0>T|<s1>F}}"];
	Node0x52d8a10:s0 -> Node0x52e4090;
	Node0x52d8a10:s1 -> Node0x52e4120;
	Node0x52e4090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%179:\l179:                                              \l  %180 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %181 = getelementptr i8, i8 addrspace(4)* %180, i64 4\l  %182 = bitcast i8 addrspace(4)* %181 to i16 addrspace(4)*\l  %183 = shl nuw nsw i32 %10, 1\l  %184 = getelementptr inbounds [1000 x float], [1000 x float] addrspace(3)*\l... @_ZZ39kernel_array_beam_slave_sincos_originalifffPfS_S_S_iE6tmpsum, i32 0,\l... i32 %183\l  %185 = add nuw nsw i32 %183, 1\l  %186 = getelementptr inbounds [1000 x float], [1000 x float] addrspace(3)*\l... @_ZZ39kernel_array_beam_slave_sincos_originalifffPfS_S_S_iE6tmpsum, i32 0,\l... i32 %185\l  br label %187\l}"];
	Node0x52e4090 -> Node0x52e48d0;
	Node0x52e48d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%187:\l187:                                              \l  %188 = phi i32 [ %8, %179 ], [ %189, %207 ]\l  %189 = lshr i32 %188, 1\l  %190 = icmp ult i32 %10, %189\l  br i1 %190, label %191, label %207\l|{<s0>T|<s1>F}}"];
	Node0x52e48d0:s0 -> Node0x52e4bf0;
	Node0x52e48d0:s1 -> Node0x52e4990;
	Node0x52e4bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%191:\l191:                                              \l  %192 = add nuw i32 %189, %10\l  %193 = load i16, i16 addrspace(4)* %182, align 4, !range !11,\l... !invariant.load !9\l  %194 = zext i16 %193 to i32\l  %195 = icmp ult i32 %192, %194\l  br i1 %195, label %196, label %207\l|{<s0>T|<s1>F}}"];
	Node0x52e4bf0:s0 -> Node0x52e5030;
	Node0x52e4bf0:s1 -> Node0x52e4990;
	Node0x52e5030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%196:\l196:                                              \l  %197 = load float, float addrspace(3)* %184, align 8, !tbaa !5\l  %198 = shl nsw i32 %192, 1\l  %199 = getelementptr inbounds [1000 x float], [1000 x float] addrspace(3)*\l... @_ZZ39kernel_array_beam_slave_sincos_originalifffPfS_S_S_iE6tmpsum, i32 0,\l... i32 %198\l  %200 = load float, float addrspace(3)* %199, align 8, !tbaa !5\l  %201 = fadd contract float %197, %200\l  store float %201, float addrspace(3)* %184, align 8, !tbaa !5\l  %202 = load float, float addrspace(3)* %186, align 4, !tbaa !5\l  %203 = add nuw nsw i32 %198, 1\l  %204 = getelementptr inbounds [1000 x float], [1000 x float] addrspace(3)*\l... @_ZZ39kernel_array_beam_slave_sincos_originalifffPfS_S_S_iE6tmpsum, i32 0,\l... i32 %203\l  %205 = load float, float addrspace(3)* %204, align 4, !tbaa !5\l  %206 = fadd contract float %202, %205\l  store float %206, float addrspace(3)* %186, align 4, !tbaa !5\l  br label %207\l}"];
	Node0x52e5030 -> Node0x52e4990;
	Node0x52e4990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%207:\l207:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %208 = icmp ugt i32 %188, 3\l  br i1 %208, label %187, label %209, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x52e4990:s0 -> Node0x52e48d0;
	Node0x52e4990:s1 -> Node0x52e4120;
	Node0x52e4120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%209:\l209:                                              \l  %210 = icmp eq i32 %10, 0\l  br i1 %210, label %211, label %215\l|{<s0>T|<s1>F}}"];
	Node0x52e4120:s0 -> Node0x52e5cb0;
	Node0x52e4120:s1 -> Node0x52e5d00;
	Node0x52e5cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%211:\l211:                                              \l  %212 = load float, float addrspace(3)* getelementptr inbounds ([1000 x\l... float], [1000 x float] addrspace(3)*\l... @_ZZ39kernel_array_beam_slave_sincos_originalifffPfS_S_S_iE6tmpsum, i32 0,\l... i32 0), align 16, !tbaa !5\l  store float %212, float addrspace(1)* %7, align 4, !tbaa !5\l  %213 = load float, float addrspace(3)* getelementptr inbounds ([1000 x\l... float], [1000 x float] addrspace(3)*\l... @_ZZ39kernel_array_beam_slave_sincos_originalifffPfS_S_S_iE6tmpsum, i32 0,\l... i32 1), align 4, !tbaa !5\l  %214 = getelementptr inbounds float, float addrspace(1)* %7, i64 1\l  store float %213, float addrspace(1)* %214, align 4, !tbaa !5\l  br label %215\l}"];
	Node0x52e5cb0 -> Node0x52e5d00;
	Node0x52e5d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%215:\l215:                                              \l  ret void\l}"];
}
