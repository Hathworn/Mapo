digraph "CFG for '_Z10scan_naivePfS_i' function" {
	label="CFG for '_Z10scan_naivePfS_i' function";

	Node0x57fcd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = icmp eq i32 %4, 0\l  br i1 %5, label %11, label %6\l|{<s0>T|<s1>F}}"];
	Node0x57fcd20:s0 -> Node0x57fe1a0;
	Node0x57fcd20:s1 -> Node0x57fe230;
	Node0x57fe230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%6:\l6:                                                \l  %7 = add nsw i32 %4, -1\l  %8 = zext i32 %7 to i64\l  %9 = getelementptr inbounds float, float addrspace(1)* %1, i64 %8\l  %10 = load float, float addrspace(1)* %9, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %11\l}"];
	Node0x57fe230 -> Node0x57fe1a0;
	Node0x57fe1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%11:\l11:                                               \l  %12 = phi contract float [ %10, %6 ], [ 0.000000e+00, %3 ]\l  %13 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @temp,\l... i32 0, i32 %4\l  store float %12, float addrspace(3)* %13, align 4, !tbaa !5\l  %14 = icmp sgt i32 %2, 1\l  br i1 %14, label %23, label %15\l|{<s0>T|<s1>F}}"];
	Node0x57fe1a0:s0 -> Node0x57ffbd0;
	Node0x57fe1a0:s1 -> Node0x57ffc60;
	Node0x57ffc60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%15:\l15:                                               \l  %16 = phi i32 [ 0, %11 ], [ %26, %40 ]\l  %17 = zext i32 %4 to i64\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %18 = mul nsw i32 %16, %2\l  %19 = add nsw i32 %18, %4\l  %20 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @temp,\l... i32 0, i32 %19\l  %21 = load float, float addrspace(3)* %20, align 4, !tbaa !5\l  %22 = getelementptr inbounds float, float addrspace(1)* %0, i64 %17\l  store float %21, float addrspace(1)* %22, align 4, !tbaa !5\l  ret void\l}"];
	Node0x57ffbd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i32 [ %41, %40 ], [ 1, %11 ]\l  %25 = phi i32 [ %26, %40 ], [ 0, %11 ]\l  %26 = sub nsw i32 1, %25\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %27 = mul nsw i32 %25, %2\l  %28 = add nsw i32 %27, %4\l  %29 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @temp,\l... i32 0, i32 %28\l  %30 = load float, float addrspace(3)* %29, align 4, !tbaa !5\l  %31 = mul nsw i32 %26, %2\l  %32 = add nsw i32 %31, %4\l  %33 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @temp,\l... i32 0, i32 %32\l  store float %30, float addrspace(3)* %33, align 4, !tbaa !5\l  %34 = icmp slt i32 %4, %24\l  br i1 %34, label %40, label %35\l|{<s0>T|<s1>F}}"];
	Node0x57ffbd0:s0 -> Node0x57ffdd0;
	Node0x57ffbd0:s1 -> Node0x57fffd0;
	Node0x57fffd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%35:\l35:                                               \l  %36 = sub nsw i32 %28, %24\l  %37 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @temp,\l... i32 0, i32 %36\l  %38 = load float, float addrspace(3)* %37, align 4, !tbaa !5\l  %39 = fadd contract float %30, %38\l  store float %39, float addrspace(3)* %33, align 4, !tbaa !5\l  br label %40\l}"];
	Node0x57fffd0 -> Node0x57ffdd0;
	Node0x57ffdd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = shl nsw i32 %24, 1\l  %42 = icmp slt i32 %41, %2\l  br i1 %42, label %23, label %15, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x57ffdd0:s0 -> Node0x57ffbd0;
	Node0x57ffdd0:s1 -> Node0x57ffc60;
}
