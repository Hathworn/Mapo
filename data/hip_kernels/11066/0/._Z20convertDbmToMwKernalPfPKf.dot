digraph "CFG for '_Z20convertDbmToMwKernalPfPKf' function" {
	label="CFG for '_Z20convertDbmToMwKernalPfPKf' function";

	Node0x62e8b20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = mul i32 %3, %8\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = add i32 %9, %10\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds float, float addrspace(1)* %1, i64 %12\l  %14 = load float, float addrspace(1)* %13, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %15 = fdiv contract float %14, 1.000000e+01\l  %16 = fmul float %15, 0x40026BB1C0000000\l  %17 = fneg float %16\l  %18 = tail call float @llvm.fma.f32(float %15, float 0x40026BB1C0000000,\l... float %17)\l  %19 = tail call float @llvm.fma.f32(float %15, float 0xBE6129FAE0000000,\l... float %18)\l  %20 = fadd float %16, %19\l  %21 = fsub float %20, %16\l  %22 = fsub float %19, %21\l  %23 = tail call float @llvm.fabs.f32(float %16) #3\l  %24 = fcmp oeq float %23, 0x7FF0000000000000\l  %25 = select i1 %24, float %16, float %20\l  %26 = tail call float @llvm.fabs.f32(float %25) #3\l  %27 = fcmp oeq float %26, 0x7FF0000000000000\l  %28 = select i1 %27, float 0.000000e+00, float %22\l  %29 = fcmp oeq float %25, 0x40562E4300000000\l  %30 = select i1 %29, float 0x3EE0000000000000, float 0.000000e+00\l  %31 = fsub float %25, %30\l  %32 = fadd float %30, %28\l  %33 = fmul float %31, 0x3FF7154760000000\l  %34 = tail call float @llvm.rint.f32(float %33)\l  %35 = fcmp ogt float %31, 0x40562E4300000000\l  %36 = fcmp olt float %31, 0xC059D1DA00000000\l  %37 = fneg float %33\l  %38 = tail call float @llvm.fma.f32(float %31, float 0x3FF7154760000000,\l... float %37)\l  %39 = tail call float @llvm.fma.f32(float %31, float 0x3E54AE0BE0000000,\l... float %38)\l  %40 = fsub float %33, %34\l  %41 = fadd float %39, %40\l  %42 = tail call float @llvm.exp2.f32(float %41)\l  %43 = fptosi float %34 to i32\l  %44 = tail call float @llvm.amdgcn.ldexp.f32(float %42, i32 %43)\l  %45 = select i1 %36, float 0.000000e+00, float %44\l  %46 = select i1 %35, float 0x7FF0000000000000, float %45\l  %47 = tail call float @llvm.fma.f32(float %46, float %32, float %46)\l  %48 = tail call float @llvm.fabs.f32(float %46) #3\l  %49 = fcmp oeq float %48, 0x7FF0000000000000\l  %50 = select i1 %49, float %46, float %47\l  %51 = tail call float @llvm.fabs.f32(float %15)\l  %52 = tail call float @llvm.fabs.f32(float %50)\l  %53 = fcmp oeq float %51, 0x7FF0000000000000\l  %54 = bitcast float %15 to i32\l  %55 = icmp sgt i32 %54, -1\l  %56 = select i1 %55, float 0x7FF0000000000000, float 0.000000e+00\l  %57 = select i1 %53, float %56, float %52\l  %58 = fcmp uno float %15, 0.000000e+00\l  %59 = select i1 %58, float 0x7FF8000000000000, float %57\l  %60 = fcmp oeq float %15, 0.000000e+00\l  %61 = select i1 %60, float 1.000000e+00, float %59\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %12\l  store float %61, float addrspace(1)* %62, align 4, !tbaa !7\l  ret void\l}"];
}
