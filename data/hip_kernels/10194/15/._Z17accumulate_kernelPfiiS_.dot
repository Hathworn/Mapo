digraph "CFG for '_Z17accumulate_kernelPfiiS_' function" {
	label="CFG for '_Z17accumulate_kernelPfiiS_' function";

	Node0x51604c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %9 = bitcast i8 addrspace(4)* %8 to i32 addrspace(4)*\l  %10 = load i32, i32 addrspace(4)* %9, align 4, !tbaa !4\l  %11 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !13, !invariant.load\l... !14\l  %14 = zext i16 %13 to i32\l  %15 = udiv i32 %10, %14\l  %16 = mul i32 %15, %14\l  %17 = icmp ugt i32 %10, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %6\l  %21 = add i32 %20, %5\l  %22 = mul i32 %21, %14\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %24 = add i32 %22, %23\l  %25 = icmp slt i32 %24, %2\l  br i1 %25, label %26, label %114\l|{<s0>T|<s1>F}}"];
	Node0x51604c0:s0 -> Node0x5162d40;
	Node0x51604c0:s1 -> Node0x5162dd0;
	Node0x5162d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%26:\l26:                                               \l  %27 = sext i32 %24 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %3, i64 %27\l  store float 0.000000e+00, float addrspace(1)* %28, align 4, !tbaa !16\l  %29 = icmp sgt i32 %1, 0\l  br i1 %29, label %30, label %114\l|{<s0>T|<s1>F}}"];
	Node0x5162d40:s0 -> Node0x5163c90;
	Node0x5162d40:s1 -> Node0x5162dd0;
	Node0x5163c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%30:\l30:                                               \l  %31 = and i32 %1, 7\l  %32 = icmp ult i32 %1, 8\l  br i1 %32, label %97, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5163c90:s0 -> Node0x5162540;
	Node0x5163c90:s1 -> Node0x5162590;
	Node0x5162590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%33:\l33:                                               \l  %34 = and i32 %1, -8\l  br label %35\l}"];
	Node0x5162590 -> Node0x51642a0;
	Node0x51642a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%35:\l35:                                               \l  %36 = phi float [ 0.000000e+00, %33 ], [ %93, %35 ]\l  %37 = phi i32 [ 0, %33 ], [ %94, %35 ]\l  %38 = phi i32 [ 0, %33 ], [ %95, %35 ]\l  %39 = mul nsw i32 %37, %2\l  %40 = add nsw i32 %39, %24\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !16\l  %44 = fadd contract float %43, %36\l  store float %44, float addrspace(1)* %28, align 4, !tbaa !16\l  %45 = or i32 %37, 1\l  %46 = mul nsw i32 %45, %2\l  %47 = add nsw i32 %46, %24\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !16\l  %51 = fadd contract float %50, %44\l  store float %51, float addrspace(1)* %28, align 4, !tbaa !16\l  %52 = or i32 %37, 2\l  %53 = mul nsw i32 %52, %2\l  %54 = add nsw i32 %53, %24\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !16\l  %58 = fadd contract float %57, %51\l  store float %58, float addrspace(1)* %28, align 4, !tbaa !16\l  %59 = or i32 %37, 3\l  %60 = mul nsw i32 %59, %2\l  %61 = add nsw i32 %60, %24\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !16\l  %65 = fadd contract float %64, %58\l  store float %65, float addrspace(1)* %28, align 4, !tbaa !16\l  %66 = or i32 %37, 4\l  %67 = mul nsw i32 %66, %2\l  %68 = add nsw i32 %67, %24\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %0, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !16\l  %72 = fadd contract float %71, %65\l  store float %72, float addrspace(1)* %28, align 4, !tbaa !16\l  %73 = or i32 %37, 5\l  %74 = mul nsw i32 %73, %2\l  %75 = add nsw i32 %74, %24\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !16\l  %79 = fadd contract float %78, %72\l  store float %79, float addrspace(1)* %28, align 4, !tbaa !16\l  %80 = or i32 %37, 6\l  %81 = mul nsw i32 %80, %2\l  %82 = add nsw i32 %81, %24\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !16\l  %86 = fadd contract float %85, %79\l  store float %86, float addrspace(1)* %28, align 4, !tbaa !16\l  %87 = or i32 %37, 7\l  %88 = mul nsw i32 %87, %2\l  %89 = add nsw i32 %88, %24\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !16\l  %93 = fadd contract float %92, %86\l  store float %93, float addrspace(1)* %28, align 4, !tbaa !16\l  %94 = add nuw nsw i32 %37, 8\l  %95 = add i32 %38, 8\l  %96 = icmp eq i32 %95, %34\l  br i1 %96, label %97, label %35, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x51642a0:s0 -> Node0x5162540;
	Node0x51642a0:s1 -> Node0x51642a0;
	Node0x5162540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%97:\l97:                                               \l  %98 = phi float [ 0.000000e+00, %30 ], [ %93, %35 ]\l  %99 = phi i32 [ 0, %30 ], [ %94, %35 ]\l  %100 = icmp eq i32 %31, 0\l  br i1 %100, label %114, label %101\l|{<s0>T|<s1>F}}"];
	Node0x5162540:s0 -> Node0x5162dd0;
	Node0x5162540:s1 -> Node0x51676a0;
	Node0x51676a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%101:\l101:                                              \l  %102 = phi float [ %110, %101 ], [ %98, %97 ]\l  %103 = phi i32 [ %111, %101 ], [ %99, %97 ]\l  %104 = phi i32 [ %112, %101 ], [ 0, %97 ]\l  %105 = mul nsw i32 %103, %2\l  %106 = add nsw i32 %105, %24\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %0, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !16\l  %110 = fadd contract float %109, %102\l  store float %110, float addrspace(1)* %28, align 4, !tbaa !16\l  %111 = add nuw nsw i32 %103, 1\l  %112 = add i32 %104, 1\l  %113 = icmp eq i32 %112, %31\l  br i1 %113, label %114, label %101, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x51676a0:s0 -> Node0x5162dd0;
	Node0x51676a0:s1 -> Node0x51676a0;
	Node0x5162dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%114:\l114:                                              \l  ret void\l}"];
}
