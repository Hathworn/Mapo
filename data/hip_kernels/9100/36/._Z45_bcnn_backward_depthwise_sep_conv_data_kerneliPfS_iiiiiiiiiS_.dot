digraph "CFG for '_Z45_bcnn_backward_depthwise_sep_conv_data_kerneliPfS_iiiiiiiiiS_' function" {
	label="CFG for '_Z45_bcnn_backward_depthwise_sep_conv_data_kerneliPfS_iiiiiiiiiS_' function";

	Node0x64a43d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%13:\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = getelementptr inbounds i8, i8 addrspace(4)* %15, i64 12\l  %21 = bitcast i8 addrspace(4)* %20 to i32 addrspace(4)*\l  %22 = load i32, i32 addrspace(4)* %21, align 4, !tbaa !6\l  %23 = mul i32 %14, %19\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %25, %0\l  br i1 %26, label %27, label %192\l|{<s0>T|<s1>F}}"];
	Node0x64a43d0:s0 -> Node0x64a74a0;
	Node0x64a43d0:s1 -> Node0x64a7530;
	Node0x64a74a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%27:\l27:                                               \l  %28 = mul i32 %9, %9\l  %29 = icmp sgt i32 %9, 0\l  %30 = udiv i32 %22, %19\l  %31 = mul i32 %30, %19\l  %32 = icmp ugt i32 %22, %31\l  %33 = zext i1 %32 to i32\l  %34 = add i32 %30, %33\l  %35 = mul i32 %34, %19\l  %36 = and i32 %9, 1\l  %37 = icmp eq i32 %9, 1\l  %38 = and i32 %9, -2\l  %39 = icmp eq i32 %36, 0\l  br label %40\l}"];
	Node0x64a74a0 -> Node0x64a7e80;
	Node0x64a7e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%40:\l40:                                               \l  %41 = phi i32 [ %25, %27 ], [ %190, %184 ]\l  %42 = sdiv i32 %41, %7\l  %43 = sdiv i32 %42, %8\l  %44 = srem i32 %43, %4\l  br i1 %29, label %45, label %184\l|{<s0>T|<s1>F}}"];
	Node0x64a7e80:s0 -> Node0x64a8260;
	Node0x64a7e80:s1 -> Node0x64a7f70;
	Node0x64a8260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%45:\l45:                                               \l  %46 = mul i32 %28, %44\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %47\l  %49 = freeze i32 %41\l  %50 = freeze i32 %8\l  %51 = sdiv i32 %49, %50\l  %52 = mul i32 %51, %50\l  %53 = sub i32 %49, %52\l  %54 = srem i32 %51, %7\l  %55 = sdiv i32 %41, %4\l  %56 = sdiv i32 %55, %7\l  %57 = sdiv i32 %56, %8\l  %58 = add nsw i32 %54, %11\l  %59 = add nsw i32 %53, %11\l  %60 = mul nsw i32 %57, %4\l  %61 = add nsw i32 %44, %60\l  %62 = mul nsw i32 %61, %5\l  br label %63\l}"];
	Node0x64a8260 -> Node0x64a8ce0;
	Node0x64a8ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%63:\l63:                                               \l  %64 = phi float addrspace(1)* [ %48, %45 ], [ %181, %179 ]\l  %65 = phi float [ 0.000000e+00, %45 ], [ %180, %179 ]\l  %66 = phi i32 [ 0, %45 ], [ %182, %179 ]\l  %67 = sub i32 %58, %66\l  %68 = freeze i32 %67\l  %69 = freeze i32 %10\l  %70 = sdiv i32 %68, %69\l  %71 = mul i32 %70, %69\l  %72 = sub i32 %68, %71\l  %73 = icmp eq i32 %72, 0\l  br i1 %37, label %143, label %74\l|{<s0>T|<s1>F}}"];
	Node0x64a8ce0:s0 -> Node0x64aa190;
	Node0x64a8ce0:s1 -> Node0x64aa1e0;
	Node0x64aa1e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = phi float addrspace(1)* [ %139, %137 ], [ %64, %63 ]\l  %76 = phi float [ %138, %137 ], [ %65, %63 ]\l  %77 = phi i32 [ %140, %137 ], [ 0, %63 ]\l  %78 = phi i32 [ %141, %137 ], [ 0, %63 ]\l  %79 = sub i32 %59, %77\l  br i1 %73, label %80, label %106\l|{<s0>T|<s1>F}}"];
	Node0x64aa1e0:s0 -> Node0x64aa880;
	Node0x64aa1e0:s1 -> Node0x64aa910;
	Node0x64aa880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%80:\l80:                                               \l  %81 = freeze i32 %79\l  %82 = freeze i32 %10\l  %83 = sdiv i32 %81, %82\l  %84 = mul i32 %83, %82\l  %85 = sub i32 %81, %84\l  %86 = icmp eq i32 %85, 0\l  br i1 %86, label %87, label %106\l|{<s0>T|<s1>F}}"];
	Node0x64aa880:s0 -> Node0x64aad70;
	Node0x64aa880:s1 -> Node0x64aa910;
	Node0x64aad70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%87:\l87:                                               \l  %88 = sdiv i32 %67, %10\l  %89 = icmp sgt i32 %88, -1\l  br i1 %89, label %90, label %106\l|{<s0>T|<s1>F}}"];
	Node0x64aad70:s0 -> Node0x64aafc0;
	Node0x64aad70:s1 -> Node0x64aa910;
	Node0x64aafc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%90:\l90:                                               \l  %91 = icmp slt i32 %88, %5\l  %92 = icmp sgt i32 %83, -1\l  %93 = select i1 %91, i1 %92, i1 false\l  %94 = icmp slt i32 %83, %6\l  %95 = select i1 %93, i1 %94, i1 false\l  br i1 %95, label %96, label %106\l|{<s0>T|<s1>F}}"];
	Node0x64aafc0:s0 -> Node0x64ab400;
	Node0x64aafc0:s1 -> Node0x64aa910;
	Node0x64ab400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%96:\l96:                                               \l  %97 = add nsw i32 %88, %62\l  %98 = mul nsw i32 %97, %6\l  %99 = add nsw i32 %98, %83\l  %100 = load float, float addrspace(1)* %75, align 4, !tbaa !16\l  %101 = sext i32 %99 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %1, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !16\l  %104 = fmul contract float %100, %103\l  %105 = fadd contract float %76, %104\l  br label %106\l}"];
	Node0x64ab400 -> Node0x64aa910;
	Node0x64aa910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  %107 = phi float [ %105, %96 ], [ %76, %90 ], [ %76, %87 ], [ %76, %80 ], [\l... %76, %74 ]\l  %108 = getelementptr inbounds float, float addrspace(1)* %75, i64 1\l  %109 = xor i32 %77, -1\l  %110 = add i32 %59, %109\l  br i1 %73, label %111, label %137\l|{<s0>T|<s1>F}}"];
	Node0x64aa910:s0 -> Node0x64ac450;
	Node0x64aa910:s1 -> Node0x64aa350;
	Node0x64ac450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%111:\l111:                                              \l  %112 = freeze i32 %110\l  %113 = freeze i32 %10\l  %114 = sdiv i32 %112, %113\l  %115 = mul i32 %114, %113\l  %116 = sub i32 %112, %115\l  %117 = icmp eq i32 %116, 0\l  br i1 %117, label %118, label %137\l|{<s0>T|<s1>F}}"];
	Node0x64ac450:s0 -> Node0x64ac870;
	Node0x64ac450:s1 -> Node0x64aa350;
	Node0x64ac870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%118:\l118:                                              \l  %119 = sdiv i32 %67, %10\l  %120 = icmp sgt i32 %119, -1\l  br i1 %120, label %121, label %137\l|{<s0>T|<s1>F}}"];
	Node0x64ac870:s0 -> Node0x64aca90;
	Node0x64ac870:s1 -> Node0x64aa350;
	Node0x64aca90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%121:\l121:                                              \l  %122 = icmp slt i32 %119, %5\l  %123 = icmp sgt i32 %114, -1\l  %124 = select i1 %122, i1 %123, i1 false\l  %125 = icmp slt i32 %114, %6\l  %126 = select i1 %124, i1 %125, i1 false\l  br i1 %126, label %127, label %137\l|{<s0>T|<s1>F}}"];
	Node0x64aca90:s0 -> Node0x64acea0;
	Node0x64aca90:s1 -> Node0x64aa350;
	Node0x64acea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%127:\l127:                                              \l  %128 = add nsw i32 %119, %62\l  %129 = mul nsw i32 %128, %6\l  %130 = add nsw i32 %129, %114\l  %131 = load float, float addrspace(1)* %108, align 4, !tbaa !16\l  %132 = sext i32 %130 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %1, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !16\l  %135 = fmul contract float %131, %134\l  %136 = fadd contract float %107, %135\l  br label %137\l}"];
	Node0x64acea0 -> Node0x64aa350;
	Node0x64aa350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%137:\l137:                                              \l  %138 = phi float [ %136, %127 ], [ %107, %121 ], [ %107, %118 ], [ %107,\l... %111 ], [ %107, %106 ]\l  %139 = getelementptr inbounds float, float addrspace(1)* %75, i64 2\l  %140 = add nuw nsw i32 %77, 2\l  %141 = add i32 %78, 2\l  %142 = icmp eq i32 %141, %38\l  br i1 %142, label %143, label %74, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x64aa350:s0 -> Node0x64aa190;
	Node0x64aa350:s1 -> Node0x64aa1e0;
	Node0x64aa190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%143:\l143:                                              \l  %144 = phi float [ undef, %63 ], [ %138, %137 ]\l  %145 = phi float addrspace(1)* [ undef, %63 ], [ %139, %137 ]\l  %146 = phi float addrspace(1)* [ %64, %63 ], [ %139, %137 ]\l  %147 = phi float [ %65, %63 ], [ %138, %137 ]\l  %148 = phi i32 [ 0, %63 ], [ %140, %137 ]\l  br i1 %39, label %179, label %149\l|{<s0>T|<s1>F}}"];
	Node0x64aa190:s0 -> Node0x64a8dd0;
	Node0x64aa190:s1 -> Node0x64ae560;
	Node0x64ae560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%149:\l149:                                              \l  %150 = sub i32 %59, %148\l  br i1 %73, label %151, label %176\l|{<s0>T|<s1>F}}"];
	Node0x64ae560:s0 -> Node0x64ae6f0;
	Node0x64ae560:s1 -> Node0x64ae740;
	Node0x64ae6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%151:\l151:                                              \l  %152 = freeze i32 %150\l  %153 = freeze i32 %10\l  %154 = sdiv i32 %152, %153\l  %155 = mul i32 %154, %153\l  %156 = sub i32 %152, %155\l  %157 = icmp eq i32 %156, 0\l  %158 = icmp sgt i32 %70, -1\l  %159 = and i1 %157, %158\l  br i1 %159, label %160, label %176\l|{<s0>T|<s1>F}}"];
	Node0x64ae6f0:s0 -> Node0x64aec80;
	Node0x64ae6f0:s1 -> Node0x64ae740;
	Node0x64aec80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%160:\l160:                                              \l  %161 = icmp slt i32 %70, %5\l  %162 = icmp sgt i32 %154, -1\l  %163 = select i1 %161, i1 %162, i1 false\l  %164 = icmp slt i32 %154, %6\l  %165 = select i1 %163, i1 %164, i1 false\l  br i1 %165, label %166, label %176\l|{<s0>T|<s1>F}}"];
	Node0x64aec80:s0 -> Node0x64af090;
	Node0x64aec80:s1 -> Node0x64ae740;
	Node0x64af090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%166:\l166:                                              \l  %167 = add nsw i32 %70, %62\l  %168 = mul nsw i32 %167, %6\l  %169 = add nsw i32 %168, %154\l  %170 = load float, float addrspace(1)* %146, align 4, !tbaa !16\l  %171 = sext i32 %169 to i64\l  %172 = getelementptr inbounds float, float addrspace(1)* %1, i64 %171\l  %173 = load float, float addrspace(1)* %172, align 4, !tbaa !16\l  %174 = fmul contract float %170, %173\l  %175 = fadd contract float %147, %174\l  br label %176\l}"];
	Node0x64af090 -> Node0x64ae740;
	Node0x64ae740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%176:\l176:                                              \l  %177 = phi float [ %175, %166 ], [ %147, %160 ], [ %147, %151 ], [ %147,\l... %149 ]\l  %178 = getelementptr inbounds float, float addrspace(1)* %146, i64 1\l  br label %179\l}"];
	Node0x64ae740 -> Node0x64a8dd0;
	Node0x64a8dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%179:\l179:                                              \l  %180 = phi float [ %144, %143 ], [ %177, %176 ]\l  %181 = phi float addrspace(1)* [ %145, %143 ], [ %178, %176 ]\l  %182 = add nuw nsw i32 %66, 1\l  %183 = icmp eq i32 %182, %9\l  br i1 %183, label %184, label %63, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x64a8dd0:s0 -> Node0x64a7f70;
	Node0x64a8dd0:s1 -> Node0x64a8ce0;
	Node0x64a7f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%184:\l184:                                              \l  %185 = phi float [ 0.000000e+00, %40 ], [ %180, %179 ]\l  %186 = sext i32 %41 to i64\l  %187 = getelementptr inbounds float, float addrspace(1)* %12, i64 %186\l  %188 = load float, float addrspace(1)* %187, align 4, !tbaa !16\l  %189 = fadd contract float %185, %188\l  store float %189, float addrspace(1)* %187, align 4, !tbaa !16\l  %190 = add i32 %35, %41\l  %191 = icmp slt i32 %190, %0\l  br i1 %191, label %40, label %192, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x64a7f70:s0 -> Node0x64a7e80;
	Node0x64a7f70:s1 -> Node0x64a7530;
	Node0x64a7530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%192:\l192:                                              \l  ret void\l}"];
}
