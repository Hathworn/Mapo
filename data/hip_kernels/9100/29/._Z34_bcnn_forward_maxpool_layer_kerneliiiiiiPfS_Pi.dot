digraph "CFG for '_Z34_bcnn_forward_maxpool_layer_kerneliiiiiiPfS_Pi' function" {
	label="CFG for '_Z34_bcnn_forward_maxpool_layer_kerneliiiiiiPfS_Pi' function";

	Node0x48848d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%9:\l  %10 = add nsw i32 %1, -1\l  %11 = sdiv i32 %10, %4\l  %12 = add nsw i32 %11, 1\l  %13 = add nsw i32 %2, -1\l  %14 = sdiv i32 %13, %4\l  %15 = add nsw i32 %14, 1\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 12\l  %20 = bitcast i8 addrspace(4)* %19 to i32 addrspace(4)*\l  %21 = load i32, i32 addrspace(4)* %20, align 4, !tbaa !4\l  %22 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 4, !range !13, !invariant.load\l... !14\l  %25 = zext i16 %24 to i32\l  %26 = udiv i32 %21, %25\l  %27 = mul i32 %26, %25\l  %28 = icmp ugt i32 %21, %27\l  %29 = zext i1 %28 to i32\l  %30 = add i32 %26, %29\l  %31 = mul i32 %30, %17\l  %32 = add i32 %31, %16\l  %33 = mul i32 %32, %25\l  %34 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %35 = add i32 %33, %34\l  %36 = icmp slt i32 %35, %0\l  br i1 %36, label %37, label %186\l|{<s0>T|<s1>F}}"];
	Node0x48848d0:s0 -> Node0x4888120;
	Node0x48848d0:s1 -> Node0x48881b0;
	Node0x4888120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%37:\l37:                                               \l  %38 = freeze i32 %35\l  %39 = freeze i32 %15\l  %40 = sdiv i32 %38, %39\l  %41 = mul i32 %40, %39\l  %42 = sub i32 %38, %41\l  %43 = freeze i32 %12\l  %44 = sdiv i32 %40, %43\l  %45 = mul i32 %44, %43\l  %46 = sub i32 %40, %45\l  %47 = freeze i32 %44\l  %48 = mul nsw i32 %47, %12\l  %49 = add nsw i32 %48, %46\l  %50 = mul nsw i32 %49, %15\l  %51 = add nsw i32 %50, %42\l  %52 = icmp sgt i32 %5, 0\l  br i1 %52, label %53, label %180\l|{<s0>T|<s1>F}}"];
	Node0x4888120:s0 -> Node0x4888ae0;
	Node0x4888120:s1 -> Node0x4888b30;
	Node0x4888ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%53:\l53:                                               \l  %54 = mul nsw i32 %46, %4\l  %55 = mul nsw i32 %42, %4\l  %56 = mul nsw i32 %47, %1\l  %57 = and i32 %5, 3\l  %58 = icmp ult i32 %5, 4\l  %59 = and i32 %5, -4\l  %60 = icmp eq i32 %57, 0\l  br label %61\l}"];
	Node0x4888ae0 -> Node0x48890f0;
	Node0x48890f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%61:\l61:                                               \l  %62 = phi float [ 0xFFF0000000000000, %53 ], [ %177, %175 ]\l  %63 = phi i32 [ -1, %53 ], [ %176, %175 ]\l  %64 = phi i32 [ 0, %53 ], [ %178, %175 ]\l  %65 = add nsw i32 %64, %54\l  %66 = add nsw i32 %65, %56\l  %67 = mul nsw i32 %66, %2\l  %68 = icmp sgt i32 %65, -1\l  %69 = icmp slt i32 %65, %1\l  br i1 %58, label %145, label %70\l|{<s0>T|<s1>F}}"];
	Node0x48890f0:s0 -> Node0x4887d00;
	Node0x48890f0:s1 -> Node0x488a520;
	Node0x488a520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%70:\l70:                                               \l  %71 = phi float [ %141, %137 ], [ %62, %61 ]\l  %72 = phi i32 [ %140, %137 ], [ %63, %61 ]\l  %73 = phi i32 [ %142, %137 ], [ 0, %61 ]\l  %74 = phi i32 [ %143, %137 ], [ 0, %61 ]\l  %75 = add nsw i32 %73, %55\l  %76 = add nsw i32 %75, %67\l  br i1 %68, label %77, label %86\l|{<s0>T|<s1>F}}"];
	Node0x488a520:s0 -> Node0x488ac50;
	Node0x488a520:s1 -> Node0x488ace0;
	Node0x488ac50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%77:\l77:                                               \l  %78 = icmp sgt i32 %75, -1\l  %79 = select i1 %69, i1 %78, i1 false\l  %80 = icmp slt i32 %75, %2\l  %81 = select i1 %79, i1 %80, i1 false\l  br i1 %81, label %82, label %86\l|{<s0>T|<s1>F}}"];
	Node0x488ac50:s0 -> Node0x488b0d0;
	Node0x488ac50:s1 -> Node0x488ace0;
	Node0x488b0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%82:\l82:                                               \l  %83 = sext i32 %76 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %6, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %86\l}"];
	Node0x488b0d0 -> Node0x488ace0;
	Node0x488ace0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%86:\l86:                                               \l  %87 = phi contract float [ %85, %82 ], [ 0xFFF0000000000000, %77 ], [\l... 0xFFF0000000000000, %70 ]\l  %88 = fcmp contract ogt float %87, %71\l  %89 = select i1 %88, i32 %76, i32 %72\l  %90 = select contract i1 %88, float %87, float %71\l  %91 = or i32 %73, 1\l  %92 = add nsw i32 %91, %55\l  %93 = add nsw i32 %92, %67\l  br i1 %68, label %94, label %103\l|{<s0>T|<s1>F}}"];
	Node0x488ace0:s0 -> Node0x488bff0;
	Node0x488ace0:s1 -> Node0x488c040;
	Node0x488bff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%94:\l94:                                               \l  %95 = icmp sgt i32 %92, -1\l  %96 = select i1 %69, i1 %95, i1 false\l  %97 = icmp slt i32 %92, %2\l  %98 = select i1 %96, i1 %97, i1 false\l  br i1 %98, label %99, label %103\l|{<s0>T|<s1>F}}"];
	Node0x488bff0:s0 -> Node0x488c400;
	Node0x488bff0:s1 -> Node0x488c040;
	Node0x488c400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%99:\l99:                                               \l  %100 = sext i32 %93 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %6, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %103\l}"];
	Node0x488c400 -> Node0x488c040;
	Node0x488c040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%103:\l103:                                              \l  %104 = phi contract float [ %102, %99 ], [ 0xFFF0000000000000, %94 ], [\l... 0xFFF0000000000000, %86 ]\l  %105 = fcmp contract ogt float %104, %90\l  %106 = select i1 %105, i32 %93, i32 %89\l  %107 = select contract i1 %105, float %104, float %90\l  %108 = or i32 %73, 2\l  %109 = add nsw i32 %108, %55\l  %110 = add nsw i32 %109, %67\l  br i1 %68, label %111, label %120\l|{<s0>T|<s1>F}}"];
	Node0x488c040:s0 -> Node0x488d170;
	Node0x488c040:s1 -> Node0x488d1c0;
	Node0x488d170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%111:\l111:                                              \l  %112 = icmp sgt i32 %109, -1\l  %113 = select i1 %69, i1 %112, i1 false\l  %114 = icmp slt i32 %109, %2\l  %115 = select i1 %113, i1 %114, i1 false\l  br i1 %115, label %116, label %120\l|{<s0>T|<s1>F}}"];
	Node0x488d170:s0 -> Node0x488d580;
	Node0x488d170:s1 -> Node0x488d1c0;
	Node0x488d580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%116:\l116:                                              \l  %117 = sext i32 %110 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %6, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %120\l}"];
	Node0x488d580 -> Node0x488d1c0;
	Node0x488d1c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%120:\l120:                                              \l  %121 = phi contract float [ %119, %116 ], [ 0xFFF0000000000000, %111 ], [\l... 0xFFF0000000000000, %103 ]\l  %122 = fcmp contract ogt float %121, %107\l  %123 = select i1 %122, i32 %110, i32 %106\l  %124 = select contract i1 %122, float %121, float %107\l  %125 = or i32 %73, 3\l  %126 = add nsw i32 %125, %55\l  %127 = add nsw i32 %126, %67\l  br i1 %68, label %128, label %137\l|{<s0>T|<s1>F}}"];
	Node0x488d1c0:s0 -> Node0x488dd10;
	Node0x488d1c0:s1 -> Node0x488a690;
	Node0x488dd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%128:\l128:                                              \l  %129 = icmp sgt i32 %126, -1\l  %130 = select i1 %69, i1 %129, i1 false\l  %131 = icmp slt i32 %126, %2\l  %132 = select i1 %130, i1 %131, i1 false\l  br i1 %132, label %133, label %137\l|{<s0>T|<s1>F}}"];
	Node0x488dd10:s0 -> Node0x488a230;
	Node0x488dd10:s1 -> Node0x488a690;
	Node0x488a230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%133:\l133:                                              \l  %134 = sext i32 %127 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %6, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %137\l}"];
	Node0x488a230 -> Node0x488a690;
	Node0x488a690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%137:\l137:                                              \l  %138 = phi contract float [ %136, %133 ], [ 0xFFF0000000000000, %128 ], [\l... 0xFFF0000000000000, %120 ]\l  %139 = fcmp contract ogt float %138, %124\l  %140 = select i1 %139, i32 %127, i32 %123\l  %141 = select contract i1 %139, float %138, float %124\l  %142 = add nuw nsw i32 %73, 4\l  %143 = add i32 %74, 4\l  %144 = icmp eq i32 %143, %59\l  br i1 %144, label %145, label %70, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x488a690:s0 -> Node0x4887d00;
	Node0x488a690:s1 -> Node0x488a520;
	Node0x4887d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%145:\l145:                                              \l  %146 = phi i32 [ undef, %61 ], [ %140, %137 ]\l  %147 = phi float [ undef, %61 ], [ %141, %137 ]\l  %148 = phi float [ %62, %61 ], [ %141, %137 ]\l  %149 = phi i32 [ %63, %61 ], [ %140, %137 ]\l  %150 = phi i32 [ 0, %61 ], [ %142, %137 ]\l  br i1 %60, label %175, label %151\l|{<s0>T|<s1>F}}"];
	Node0x4887d00:s0 -> Node0x4889c30;
	Node0x4887d00:s1 -> Node0x488f470;
	Node0x488f470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%151:\l151:                                              \l  %152 = phi float [ %171, %167 ], [ %148, %145 ]\l  %153 = phi i32 [ %170, %167 ], [ %149, %145 ]\l  %154 = phi i32 [ %172, %167 ], [ %150, %145 ]\l  %155 = phi i32 [ %173, %167 ], [ 0, %145 ]\l  %156 = add nsw i32 %154, %55\l  %157 = add nsw i32 %156, %67\l  br i1 %68, label %158, label %167\l|{<s0>T|<s1>F}}"];
	Node0x488f470:s0 -> Node0x488fa60;
	Node0x488f470:s1 -> Node0x488f570;
	Node0x488fa60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%158:\l158:                                              \l  %159 = icmp sgt i32 %156, -1\l  %160 = select i1 %69, i1 %159, i1 false\l  %161 = icmp slt i32 %156, %2\l  %162 = select i1 %160, i1 %161, i1 false\l  br i1 %162, label %163, label %167\l|{<s0>T|<s1>F}}"];
	Node0x488fa60:s0 -> Node0x488fe20;
	Node0x488fa60:s1 -> Node0x488f570;
	Node0x488fe20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%163:\l163:                                              \l  %164 = sext i32 %157 to i64\l  %165 = getelementptr inbounds float, float addrspace(1)* %6, i64 %164\l  %166 = load float, float addrspace(1)* %165, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %167\l}"];
	Node0x488fe20 -> Node0x488f570;
	Node0x488f570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%167:\l167:                                              \l  %168 = phi contract float [ %166, %163 ], [ 0xFFF0000000000000, %158 ], [\l... 0xFFF0000000000000, %151 ]\l  %169 = fcmp contract ogt float %168, %152\l  %170 = select i1 %169, i32 %157, i32 %153\l  %171 = select contract i1 %169, float %168, float %152\l  %172 = add nuw nsw i32 %154, 1\l  %173 = add i32 %155, 1\l  %174 = icmp eq i32 %173, %57\l  br i1 %174, label %175, label %151, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x488f570:s0 -> Node0x4889c30;
	Node0x488f570:s1 -> Node0x488f470;
	Node0x4889c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%175:\l175:                                              \l  %176 = phi i32 [ %146, %145 ], [ %170, %167 ]\l  %177 = phi float [ %147, %145 ], [ %171, %167 ]\l  %178 = add nuw nsw i32 %64, 1\l  %179 = icmp eq i32 %178, %5\l  br i1 %179, label %180, label %61, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4889c30:s0 -> Node0x4888b30;
	Node0x4889c30:s1 -> Node0x48890f0;
	Node0x4888b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%180:\l180:                                              \l  %181 = phi i32 [ -1, %37 ], [ %176, %175 ]\l  %182 = phi float [ 0xFFF0000000000000, %37 ], [ %177, %175 ]\l  %183 = sext i32 %51 to i64\l  %184 = getelementptr inbounds float, float addrspace(1)* %7, i64 %183\l  store float %182, float addrspace(1)* %184, align 4, !tbaa !16\l  %185 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %183\l  store i32 %181, i32 addrspace(1)* %185, align 4, !tbaa !25\l  br label %186\l}"];
	Node0x4888b30 -> Node0x48881b0;
	Node0x48881b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%186:\l186:                                              \l  ret void\l}"];
}
