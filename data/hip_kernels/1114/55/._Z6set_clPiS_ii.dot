digraph "CFG for '_Z6set_clPiS_ii' function" {
	label="CFG for '_Z6set_clPiS_ii' function";

	Node0x5082f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = sdiv i32 %3, %2\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = icmp slt i32 %14, %5\l  br i1 %15, label %16, label %99\l|{<s0>T|<s1>F}}"];
	Node0x5082f90:s0 -> Node0x5084f40;
	Node0x5082f90:s1 -> Node0x5084fd0;
	Node0x5084f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%16:\l16:                                               \l  %17 = mul nsw i32 %14, %2\l  %18 = icmp sgt i32 %2, 0\l  br i1 %18, label %19, label %95\l|{<s0>T|<s1>F}}"];
	Node0x5084f40:s0 -> Node0x50852b0;
	Node0x5084f40:s1 -> Node0x5085300;
	Node0x50852b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = and i32 %2, 7\l  %21 = icmp ult i32 %2, 8\l  br i1 %21, label %78, label %22\l|{<s0>T|<s1>F}}"];
	Node0x50852b0:s0 -> Node0x50855c0;
	Node0x50852b0:s1 -> Node0x5085610;
	Node0x5085610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%22:\l22:                                               \l  %23 = and i32 %2, -8\l  br label %24\l}"];
	Node0x5085610 -> Node0x5085810;
	Node0x5085810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%24:\l24:                                               \l  %25 = phi i32 [ 0, %22 ], [ %75, %24 ]\l  %26 = phi i32 [ 0, %22 ], [ %74, %24 ]\l  %27 = phi i32 [ 0, %22 ], [ %76, %24 ]\l  %28 = add nsw i32 %25, %17\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %32 = tail call i32 @llvm.smax.i32(i32 %31, i32 %26)\l  %33 = or i32 %25, 1\l  %34 = add nsw i32 %33, %17\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %35\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %38 = tail call i32 @llvm.smax.i32(i32 %37, i32 %32)\l  %39 = or i32 %25, 2\l  %40 = add nsw i32 %39, %17\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %44 = tail call i32 @llvm.smax.i32(i32 %43, i32 %38)\l  %45 = or i32 %25, 3\l  %46 = add nsw i32 %45, %17\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %50 = tail call i32 @llvm.smax.i32(i32 %49, i32 %44)\l  %51 = or i32 %25, 4\l  %52 = add nsw i32 %51, %17\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %56 = tail call i32 @llvm.smax.i32(i32 %55, i32 %50)\l  %57 = or i32 %25, 5\l  %58 = add nsw i32 %57, %17\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %62 = tail call i32 @llvm.smax.i32(i32 %61, i32 %56)\l  %63 = or i32 %25, 6\l  %64 = add nsw i32 %63, %17\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %65\l  %67 = load i32, i32 addrspace(1)* %66, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %68 = tail call i32 @llvm.smax.i32(i32 %67, i32 %62)\l  %69 = or i32 %25, 7\l  %70 = add nsw i32 %69, %17\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %71\l  %73 = load i32, i32 addrspace(1)* %72, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %74 = tail call i32 @llvm.smax.i32(i32 %73, i32 %68)\l  %75 = add nuw nsw i32 %25, 8\l  %76 = add i32 %27, 8\l  %77 = icmp eq i32 %76, %23\l  br i1 %77, label %78, label %24, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5085810:s0 -> Node0x50855c0;
	Node0x5085810:s1 -> Node0x5085810;
	Node0x50855c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%78:\l78:                                               \l  %79 = phi i32 [ undef, %19 ], [ %74, %24 ]\l  %80 = phi i32 [ 0, %19 ], [ %75, %24 ]\l  %81 = phi i32 [ 0, %19 ], [ %74, %24 ]\l  %82 = icmp eq i32 %20, 0\l  br i1 %82, label %95, label %83\l|{<s0>T|<s1>F}}"];
	Node0x50855c0:s0 -> Node0x5085300;
	Node0x50855c0:s1 -> Node0x50897e0;
	Node0x50897e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  %84 = phi i32 [ %92, %83 ], [ %80, %78 ]\l  %85 = phi i32 [ %91, %83 ], [ %81, %78 ]\l  %86 = phi i32 [ %93, %83 ], [ 0, %78 ]\l  %87 = add nsw i32 %84, %17\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %88\l  %90 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %91 = tail call i32 @llvm.smax.i32(i32 %90, i32 %85)\l  %92 = add nuw nsw i32 %84, 1\l  %93 = add i32 %86, 1\l  %94 = icmp eq i32 %93, %20\l  br i1 %94, label %95, label %83, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x50897e0:s0 -> Node0x5085300;
	Node0x50897e0:s1 -> Node0x50897e0;
	Node0x5085300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%95:\l95:                                               \l  %96 = phi i32 [ 0, %16 ], [ %79, %78 ], [ %91, %83 ]\l  %97 = sext i32 %14 to i64\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %97\l  store i32 %96, i32 addrspace(1)* %98, align 4, !tbaa !7\l  br label %99\l}"];
	Node0x5085300 -> Node0x5084fd0;
	Node0x5084fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%99:\l99:                                               \l  ret void\l}"];
}
