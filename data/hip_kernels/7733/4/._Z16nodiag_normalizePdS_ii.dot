digraph "CFG for '_Z16nodiag_normalizePdS_ii' function" {
	label="CFG for '_Z16nodiag_normalizePdS_ii' function";

	Node0x51c7580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp sge i32 %13, %2\l  %23 = icmp sge i32 %21, %2\l  %24 = select i1 %22, i1 true, i1 %23\l  %25 = icmp ne i32 %13, %3\l  %26 = select i1 %24, i1 true, i1 %25\l  %27 = icmp eq i32 %13, %21\l  %28 = select i1 %26, i1 true, i1 %27\l  br i1 %28, label %44, label %29\l|{<s0>T|<s1>F}}"];
	Node0x51c7580:s0 -> Node0x51cb270;
	Node0x51c7580:s1 -> Node0x51cb300;
	Node0x51cb300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %3, %2\l  %31 = add nsw i32 %30, %3\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds double, double addrspace(1)* %0, i64 %32\l  %34 = load double, double addrspace(1)* %33, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %35 = add nsw i32 %30, %21\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds double, double addrspace(1)* %1, i64 %36\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = fdiv contract double %38, %34\l  store double %39, double addrspace(1)* %37, align 8, !tbaa !7\l  %40 = load double, double addrspace(1)* %33, align 8, !tbaa !7\l  %41 = getelementptr inbounds double, double addrspace(1)* %0, i64 %36\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !7\l  %43 = fdiv contract double %42, %40\l  store double %43, double addrspace(1)* %41, align 8, !tbaa !7\l  br label %44\l}"];
	Node0x51cb300 -> Node0x51cb270;
	Node0x51cb270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  ret void\l}"];
}
