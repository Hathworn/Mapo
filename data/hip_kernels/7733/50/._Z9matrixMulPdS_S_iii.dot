digraph "CFG for '_Z9matrixMulPdS_S_iii' function" {
	label="CFG for '_Z9matrixMulPdS_S_iii' function";

	Node0x4c52370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %4\l  %25 = icmp slt i32 %23, %3\l  %26 = select i1 %24, i1 %25, i1 false\l  %27 = icmp sgt i32 %5, 0\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %116\l|{<s0>T|<s1>F}}"];
	Node0x4c52370:s0 -> Node0x4c55f60;
	Node0x4c52370:s1 -> Node0x4c55ff0;
	Node0x4c55f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %15, %5\l  %31 = mul nsw i32 %15, %3\l  %32 = add nsw i32 %31, %23\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %36 = and i32 %5, 3\l  %37 = icmp ult i32 %5, 4\l  br i1 %37, label %94, label %38\l|{<s0>T|<s1>F}}"];
	Node0x4c55f60:s0 -> Node0x4c567e0;
	Node0x4c55f60:s1 -> Node0x4c56870;
	Node0x4c56870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%38:\l38:                                               \l  %39 = and i32 %5, -4\l  br label %40\l}"];
	Node0x4c56870 -> Node0x4c56a70;
	Node0x4c56a70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%40:\l40:                                               \l  %41 = phi double [ %35, %38 ], [ %90, %40 ]\l  %42 = phi i32 [ 0, %38 ], [ %91, %40 ]\l  %43 = phi i32 [ 0, %38 ], [ %92, %40 ]\l  %44 = mul nsw i32 %42, %3\l  %45 = add nsw i32 %44, %23\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds double, double addrspace(1)* %1, i64 %46\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !7\l  %49 = add nsw i32 %42, %30\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds double, double addrspace(1)* %0, i64 %50\l  %52 = load double, double addrspace(1)* %51, align 8, !tbaa !7\l  %53 = fmul contract double %48, %52\l  %54 = fadd contract double %41, %53\l  store double %54, double addrspace(1)* %34, align 8, !tbaa !7\l  %55 = or i32 %42, 1\l  %56 = mul nsw i32 %55, %3\l  %57 = add nsw i32 %56, %23\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds double, double addrspace(1)* %1, i64 %58\l  %60 = load double, double addrspace(1)* %59, align 8, !tbaa !7\l  %61 = add nsw i32 %55, %30\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds double, double addrspace(1)* %0, i64 %62\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !7\l  %65 = fmul contract double %60, %64\l  %66 = fadd contract double %54, %65\l  store double %66, double addrspace(1)* %34, align 8, !tbaa !7\l  %67 = or i32 %42, 2\l  %68 = mul nsw i32 %67, %3\l  %69 = add nsw i32 %68, %23\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds double, double addrspace(1)* %1, i64 %70\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !7\l  %73 = add nsw i32 %67, %30\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds double, double addrspace(1)* %0, i64 %74\l  %76 = load double, double addrspace(1)* %75, align 8, !tbaa !7\l  %77 = fmul contract double %72, %76\l  %78 = fadd contract double %66, %77\l  store double %78, double addrspace(1)* %34, align 8, !tbaa !7\l  %79 = or i32 %42, 3\l  %80 = mul nsw i32 %79, %3\l  %81 = add nsw i32 %80, %23\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds double, double addrspace(1)* %1, i64 %82\l  %84 = load double, double addrspace(1)* %83, align 8, !tbaa !7\l  %85 = add nsw i32 %79, %30\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds double, double addrspace(1)* %0, i64 %86\l  %88 = load double, double addrspace(1)* %87, align 8, !tbaa !7\l  %89 = fmul contract double %84, %88\l  %90 = fadd contract double %78, %89\l  store double %90, double addrspace(1)* %34, align 8, !tbaa !7\l  %91 = add nuw nsw i32 %42, 4\l  %92 = add i32 %43, 4\l  %93 = icmp eq i32 %92, %39\l  br i1 %93, label %94, label %40, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4c56a70:s0 -> Node0x4c567e0;
	Node0x4c56a70:s1 -> Node0x4c56a70;
	Node0x4c567e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%94:\l94:                                               \l  %95 = phi double [ %35, %29 ], [ %90, %40 ]\l  %96 = phi i32 [ 0, %29 ], [ %91, %40 ]\l  %97 = icmp eq i32 %36, 0\l  br i1 %97, label %116, label %98\l|{<s0>T|<s1>F}}"];
	Node0x4c567e0:s0 -> Node0x4c55ff0;
	Node0x4c567e0:s1 -> Node0x4c59720;
	Node0x4c59720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%98:\l98:                                               \l  %99 = phi double [ %112, %98 ], [ %95, %94 ]\l  %100 = phi i32 [ %113, %98 ], [ %96, %94 ]\l  %101 = phi i32 [ %114, %98 ], [ 0, %94 ]\l  %102 = mul nsw i32 %100, %3\l  %103 = add nsw i32 %102, %23\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds double, double addrspace(1)* %1, i64 %104\l  %106 = load double, double addrspace(1)* %105, align 8, !tbaa !7\l  %107 = add nsw i32 %100, %30\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds double, double addrspace(1)* %0, i64 %108\l  %110 = load double, double addrspace(1)* %109, align 8, !tbaa !7\l  %111 = fmul contract double %106, %110\l  %112 = fadd contract double %99, %111\l  store double %112, double addrspace(1)* %34, align 8, !tbaa !7\l  %113 = add nuw nsw i32 %100, 1\l  %114 = add i32 %101, 1\l  %115 = icmp eq i32 %114, %36\l  br i1 %115, label %116, label %98, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4c59720:s0 -> Node0x4c55ff0;
	Node0x4c59720:s1 -> Node0x4c59720;
	Node0x4c55ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%116:\l116:                                              \l  ret void\l}"];
}
