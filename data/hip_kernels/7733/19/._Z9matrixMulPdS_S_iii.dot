digraph "CFG for '_Z9matrixMulPdS_S_iii' function" {
	label="CFG for '_Z9matrixMulPdS_S_iii' function";

	Node0x5a0e3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %4\l  %25 = icmp slt i32 %23, %3\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %115\l|{<s0>T|<s1>F}}"];
	Node0x5a0e3d0:s0 -> Node0x5a11e50;
	Node0x5a0e3d0:s1 -> Node0x5a11ee0;
	Node0x5a11e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %15, %3\l  %29 = add nsw i32 %28, %23\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds double, double addrspace(1)* %2, i64 %30\l  store double 0.000000e+00, double addrspace(1)* %31, align 8, !tbaa !7\l  %32 = icmp sgt i32 %5, 0\l  br i1 %32, label %33, label %115\l|{<s0>T|<s1>F}}"];
	Node0x5a11e50:s0 -> Node0x5a103f0;
	Node0x5a11e50:s1 -> Node0x5a11ee0;
	Node0x5a103f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%33:\l33:                                               \l  %34 = mul nsw i32 %15, %5\l  %35 = and i32 %5, 3\l  %36 = icmp ult i32 %5, 4\l  br i1 %36, label %93, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5a103f0:s0 -> Node0x5a13360;
	Node0x5a103f0:s1 -> Node0x5a133b0;
	Node0x5a133b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%37:\l37:                                               \l  %38 = and i32 %5, -4\l  br label %39\l}"];
	Node0x5a133b0 -> Node0x5a135b0;
	Node0x5a135b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%39:\l39:                                               \l  %40 = phi double [ 0.000000e+00, %37 ], [ %89, %39 ]\l  %41 = phi i32 [ 0, %37 ], [ %90, %39 ]\l  %42 = phi i32 [ 0, %37 ], [ %91, %39 ]\l  %43 = mul nsw i32 %41, %3\l  %44 = add nsw i32 %43, %23\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds double, double addrspace(1)* %1, i64 %45\l  %47 = load double, double addrspace(1)* %46, align 8, !tbaa !7\l  %48 = add nsw i32 %41, %34\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds double, double addrspace(1)* %0, i64 %49\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !7\l  %52 = fmul contract double %47, %51\l  %53 = fadd contract double %40, %52\l  store double %53, double addrspace(1)* %31, align 8, !tbaa !7\l  %54 = or i32 %41, 1\l  %55 = mul nsw i32 %54, %3\l  %56 = add nsw i32 %55, %23\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds double, double addrspace(1)* %1, i64 %57\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !7\l  %60 = add nsw i32 %54, %34\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds double, double addrspace(1)* %0, i64 %61\l  %63 = load double, double addrspace(1)* %62, align 8, !tbaa !7\l  %64 = fmul contract double %59, %63\l  %65 = fadd contract double %53, %64\l  store double %65, double addrspace(1)* %31, align 8, !tbaa !7\l  %66 = or i32 %41, 2\l  %67 = mul nsw i32 %66, %3\l  %68 = add nsw i32 %67, %23\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds double, double addrspace(1)* %1, i64 %69\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !7\l  %72 = add nsw i32 %66, %34\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds double, double addrspace(1)* %0, i64 %73\l  %75 = load double, double addrspace(1)* %74, align 8, !tbaa !7\l  %76 = fmul contract double %71, %75\l  %77 = fadd contract double %65, %76\l  store double %77, double addrspace(1)* %31, align 8, !tbaa !7\l  %78 = or i32 %41, 3\l  %79 = mul nsw i32 %78, %3\l  %80 = add nsw i32 %79, %23\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds double, double addrspace(1)* %1, i64 %81\l  %83 = load double, double addrspace(1)* %82, align 8, !tbaa !7\l  %84 = add nsw i32 %78, %34\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds double, double addrspace(1)* %0, i64 %85\l  %87 = load double, double addrspace(1)* %86, align 8, !tbaa !7\l  %88 = fmul contract double %83, %87\l  %89 = fadd contract double %77, %88\l  store double %89, double addrspace(1)* %31, align 8, !tbaa !7\l  %90 = add nuw nsw i32 %41, 4\l  %91 = add i32 %42, 4\l  %92 = icmp eq i32 %91, %38\l  br i1 %92, label %93, label %39, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5a135b0:s0 -> Node0x5a13360;
	Node0x5a135b0:s1 -> Node0x5a135b0;
	Node0x5a13360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%93:\l93:                                               \l  %94 = phi double [ 0.000000e+00, %33 ], [ %89, %39 ]\l  %95 = phi i32 [ 0, %33 ], [ %90, %39 ]\l  %96 = icmp eq i32 %35, 0\l  br i1 %96, label %115, label %97\l|{<s0>T|<s1>F}}"];
	Node0x5a13360:s0 -> Node0x5a11ee0;
	Node0x5a13360:s1 -> Node0x5a16260;
	Node0x5a16260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  %98 = phi double [ %111, %97 ], [ %94, %93 ]\l  %99 = phi i32 [ %112, %97 ], [ %95, %93 ]\l  %100 = phi i32 [ %113, %97 ], [ 0, %93 ]\l  %101 = mul nsw i32 %99, %3\l  %102 = add nsw i32 %101, %23\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds double, double addrspace(1)* %1, i64 %103\l  %105 = load double, double addrspace(1)* %104, align 8, !tbaa !7\l  %106 = add nsw i32 %99, %34\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds double, double addrspace(1)* %0, i64 %107\l  %109 = load double, double addrspace(1)* %108, align 8, !tbaa !7\l  %110 = fmul contract double %105, %109\l  %111 = fadd contract double %98, %110\l  store double %111, double addrspace(1)* %31, align 8, !tbaa !7\l  %112 = add nuw nsw i32 %99, 1\l  %113 = add i32 %100, 1\l  %114 = icmp eq i32 %113, %35\l  br i1 %114, label %115, label %97, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5a16260:s0 -> Node0x5a11ee0;
	Node0x5a16260:s1 -> Node0x5a16260;
	Node0x5a11ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%115:\l115:                                              \l  ret void\l}"];
}
