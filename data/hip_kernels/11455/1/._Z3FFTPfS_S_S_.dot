digraph "CFG for '_Z3FFTPfS_S_S_' function" {
	label="CFG for '_Z3FFTPfS_S_S_' function";

	Node0x56da3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = sitofp i32 %13 to double\l  %15 = fmul contract double %14, 6.280000e+00\l  br label %20\l}"];
	Node0x56da3e0 -> Node0x56dcdc0;
	Node0x56dcec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%16:\l16:                                               \l  %17 = sext i32 %13 to i64\l  %18 = getelementptr inbounds float, float addrspace(1)* %2, i64 %17\l  store float %900, float addrspace(1)* %18, align 4, !tbaa !7\l  %19 = getelementptr inbounds float, float addrspace(1)* %3, i64 %17\l  store float %1182, float addrspace(1)* %19, align 4, !tbaa !7\l  ret void\l}"];
	Node0x56dcdc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = phi i32 [ 0, %4 ], [ %1183, %1135 ]\l  %22 = phi float [ 0.000000e+00, %4 ], [ %1182, %1135 ]\l  %23 = phi float [ 0.000000e+00, %4 ], [ %900, %1135 ]\l  %24 = zext i32 %21 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %0, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %27 = fpext float %26 to double\l  %28 = shl nuw nsw i32 %21, 1\l  %29 = sitofp i32 %28 to double\l  %30 = fmul contract double %29, 6.280000e+00\l  %31 = fmul contract double %30, 0x3F10000000000000\l  %32 = tail call double @llvm.fabs.f64(double %31)\l  %33 = fcmp olt double %32, 0x41D0000000000000\l  br i1 %33, label %34, label %53\l|{<s0>T|<s1>F}}"];
	Node0x56dcdc0:s0 -> Node0x56ded20;
	Node0x56dcdc0:s1 -> Node0x56ded70;
	Node0x56ded20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%34:\l34:                                               \l  %35 = fmul double %32, 0x3FE45F306DC9C883\l  %36 = tail call double @llvm.rint.f64(double %35)\l  %37 = tail call double @llvm.fma.f64(double %36, double 0xBFF921FB54442D18,\l... double %32)\l  %38 = tail call double @llvm.fma.f64(double %36, double 0xBC91A62633145C00,\l... double %37)\l  %39 = fmul double %36, 0x3C91A62633145C00\l  %40 = fneg double %39\l  %41 = tail call double @llvm.fma.f64(double %36, double 0x3C91A62633145C00,\l... double %40)\l  %42 = fsub double %37, %39\l  %43 = fsub double %37, %42\l  %44 = fsub double %43, %39\l  %45 = fsub double %42, %38\l  %46 = fadd double %45, %44\l  %47 = fsub double %46, %41\l  %48 = tail call double @llvm.fma.f64(double %36, double 0xB97B839A252049C0,\l... double %47)\l  %49 = fadd double %38, %48\l  %50 = fsub double %49, %38\l  %51 = fsub double %48, %50\l  %52 = fptosi double %36 to i32\l  br label %129\l}"];
	Node0x56ded20 -> Node0x56dff30;
	Node0x56ded70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%53:\l53:                                               \l  %54 = tail call double @llvm.amdgcn.trig.preop.f64(double %32, i32 0)\l  %55 = tail call double @llvm.amdgcn.trig.preop.f64(double %32, i32 1)\l  %56 = tail call double @llvm.amdgcn.trig.preop.f64(double %32, i32 2)\l  %57 = fcmp oge double %32, 0x7B00000000000000\l  %58 = tail call double @llvm.amdgcn.ldexp.f64(double %32, i32 -128)\l  %59 = select i1 %57, double %58, double %32\l  %60 = fmul double %56, %59\l  %61 = fneg double %60\l  %62 = tail call double @llvm.fma.f64(double %56, double %59, double %61)\l  %63 = fmul double %55, %59\l  %64 = fneg double %63\l  %65 = tail call double @llvm.fma.f64(double %55, double %59, double %64)\l  %66 = fmul double %54, %59\l  %67 = fneg double %66\l  %68 = tail call double @llvm.fma.f64(double %54, double %59, double %67)\l  %69 = fadd double %63, %68\l  %70 = fsub double %69, %63\l  %71 = fsub double %69, %70\l  %72 = fsub double %68, %70\l  %73 = fsub double %63, %71\l  %74 = fadd double %72, %73\l  %75 = fadd double %60, %65\l  %76 = fsub double %75, %60\l  %77 = fsub double %75, %76\l  %78 = fsub double %65, %76\l  %79 = fsub double %60, %77\l  %80 = fadd double %78, %79\l  %81 = fadd double %75, %74\l  %82 = fsub double %81, %75\l  %83 = fsub double %81, %82\l  %84 = fsub double %74, %82\l  %85 = fsub double %75, %83\l  %86 = fadd double %84, %85\l  %87 = fadd double %80, %86\l  %88 = fadd double %62, %87\l  %89 = fadd double %66, %69\l  %90 = fsub double %89, %66\l  %91 = fsub double %69, %90\l  %92 = fadd double %91, %81\l  %93 = fsub double %92, %91\l  %94 = fsub double %81, %93\l  %95 = fadd double %94, %88\l  %96 = tail call double @llvm.amdgcn.ldexp.f64(double %89, i32 -2)\l  %97 = tail call double @llvm.amdgcn.fract.f64(double %96)\l  %98 = tail call i1 @llvm.amdgcn.class.f64(double %96, i32 516)\l  %99 = select i1 %98, double 0.000000e+00, double %97\l  %100 = tail call double @llvm.amdgcn.ldexp.f64(double %99, i32 2)\l  %101 = fadd double %100, %92\l  %102 = fcmp olt double %101, 0.000000e+00\l  %103 = select i1 %102, double 4.000000e+00, double 0.000000e+00\l  %104 = fadd double %100, %103\l  %105 = fadd double %92, %104\l  %106 = fptosi double %105 to i32\l  %107 = sitofp i32 %106 to double\l  %108 = fsub double %104, %107\l  %109 = fadd double %92, %108\l  %110 = fsub double %109, %108\l  %111 = fsub double %92, %110\l  %112 = fadd double %95, %111\l  %113 = fcmp oge double %109, 5.000000e-01\l  %114 = zext i1 %113 to i32\l  %115 = add nsw i32 %114, %106\l  %116 = select i1 %113, double 1.000000e+00, double 0.000000e+00\l  %117 = fsub double %109, %116\l  %118 = fadd double %117, %112\l  %119 = fsub double %118, %117\l  %120 = fsub double %112, %119\l  %121 = fmul double %118, 0x3FF921FB54442D18\l  %122 = fneg double %121\l  %123 = tail call double @llvm.fma.f64(double %118, double\l... 0x3FF921FB54442D18, double %122)\l  %124 = tail call double @llvm.fma.f64(double %118, double\l... 0x3C91A62633145C07, double %123)\l  %125 = tail call double @llvm.fma.f64(double %120, double\l... 0x3FF921FB54442D18, double %124)\l  %126 = fadd double %121, %125\l  %127 = fsub double %126, %121\l  %128 = fsub double %125, %127\l  br label %129\l}"];
	Node0x56ded70 -> Node0x56dff30;
	Node0x56dff30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%129:\l129:                                              \l  %130 = phi double [ %51, %34 ], [ %128, %53 ]\l  %131 = phi double [ %49, %34 ], [ %126, %53 ]\l  %132 = phi i32 [ %52, %34 ], [ %115, %53 ]\l  %133 = fmul double %131, %131\l  %134 = fmul double %133, 5.000000e-01\l  %135 = fsub double 1.000000e+00, %134\l  %136 = fsub double 1.000000e+00, %135\l  %137 = fsub double %136, %134\l  %138 = fmul double %133, %133\l  %139 = tail call double @llvm.fma.f64(double %133, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %140 = tail call double @llvm.fma.f64(double %133, double %139, double\l... 0xBE927E4FA17F65F6)\l  %141 = tail call double @llvm.fma.f64(double %133, double %140, double\l... 0x3EFA01A019F4EC90)\l  %142 = tail call double @llvm.fma.f64(double %133, double %141, double\l... 0xBF56C16C16C16967)\l  %143 = tail call double @llvm.fma.f64(double %133, double %142, double\l... 0x3FA5555555555555)\l  %144 = fneg double %130\l  %145 = tail call double @llvm.fma.f64(double %131, double %144, double %137)\l  %146 = tail call double @llvm.fma.f64(double %138, double %143, double %145)\l  %147 = fadd double %135, %146\l  %148 = tail call double @llvm.fma.f64(double %133, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %149 = tail call double @llvm.fma.f64(double %133, double %148, double\l... 0x3EC71DE3796CDE01)\l  %150 = tail call double @llvm.fma.f64(double %133, double %149, double\l... 0xBF2A01A019E83E5C)\l  %151 = tail call double @llvm.fma.f64(double %133, double %150, double\l... 0x3F81111111110BB3)\l  %152 = fneg double %133\l  %153 = fmul double %131, %152\l  %154 = fmul double %130, 5.000000e-01\l  %155 = tail call double @llvm.fma.f64(double %153, double %151, double %154)\l  %156 = tail call double @llvm.fma.f64(double %133, double %155, double %144)\l  %157 = tail call double @llvm.fma.f64(double %153, double\l... 0xBFC5555555555555, double %156)\l  %158 = fsub double %131, %157\l  %159 = fneg double %158\l  %160 = and i32 %132, 1\l  %161 = icmp eq i32 %160, 0\l  %162 = select i1 %161, double %147, double %159\l  %163 = bitcast double %162 to \<2 x i32\>\l  %164 = shl i32 %132, 30\l  %165 = and i32 %164, -2147483648\l  %166 = extractelement \<2 x i32\> %163, i64 1\l  %167 = xor i32 %166, %165\l  %168 = insertelement \<2 x i32\> %163, i32 %167, i64 1\l  %169 = tail call i1 @llvm.amdgcn.class.f64(double %32, i32 504)\l  %170 = select i1 %169, \<2 x i32\> %168, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %171 = bitcast \<2 x i32\> %170 to double\l  %172 = fmul contract double %27, %171\l  %173 = getelementptr inbounds float, float addrspace(1)* %1, i64 %24\l  %174 = load float, float addrspace(1)* %173, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %175 = fpext float %174 to double\l  %176 = fmul contract double %15, %29\l  %177 = fmul contract double %176, 0x3F10000000000000\l  %178 = tail call double @llvm.fabs.f64(double %177)\l  %179 = fcmp olt double %178, 0x41D0000000000000\l  br i1 %179, label %180, label %199\l|{<s0>T|<s1>F}}"];
	Node0x56dff30:s0 -> Node0x56e7060;
	Node0x56dff30:s1 -> Node0x56e70f0;
	Node0x56e7060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%180:\l180:                                              \l  %181 = fmul double %178, 0x3FE45F306DC9C883\l  %182 = tail call double @llvm.rint.f64(double %181)\l  %183 = tail call double @llvm.fma.f64(double %182, double\l... 0xBFF921FB54442D18, double %178)\l  %184 = tail call double @llvm.fma.f64(double %182, double\l... 0xBC91A62633145C00, double %183)\l  %185 = fmul double %182, 0x3C91A62633145C00\l  %186 = fneg double %185\l  %187 = tail call double @llvm.fma.f64(double %182, double\l... 0x3C91A62633145C00, double %186)\l  %188 = fsub double %183, %185\l  %189 = fsub double %183, %188\l  %190 = fsub double %189, %185\l  %191 = fsub double %188, %184\l  %192 = fadd double %191, %190\l  %193 = fsub double %192, %187\l  %194 = tail call double @llvm.fma.f64(double %182, double\l... 0xB97B839A252049C0, double %193)\l  %195 = fadd double %184, %194\l  %196 = fsub double %195, %184\l  %197 = fsub double %194, %196\l  %198 = fptosi double %182 to i32\l  br label %275\l}"];
	Node0x56e7060 -> Node0x56e7ef0;
	Node0x56e70f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%199:\l199:                                              \l  %200 = tail call double @llvm.amdgcn.trig.preop.f64(double %178, i32 0)\l  %201 = tail call double @llvm.amdgcn.trig.preop.f64(double %178, i32 1)\l  %202 = tail call double @llvm.amdgcn.trig.preop.f64(double %178, i32 2)\l  %203 = fcmp oge double %178, 0x7B00000000000000\l  %204 = tail call double @llvm.amdgcn.ldexp.f64(double %178, i32 -128)\l  %205 = select i1 %203, double %204, double %178\l  %206 = fmul double %202, %205\l  %207 = fneg double %206\l  %208 = tail call double @llvm.fma.f64(double %202, double %205, double %207)\l  %209 = fmul double %201, %205\l  %210 = fneg double %209\l  %211 = tail call double @llvm.fma.f64(double %201, double %205, double %210)\l  %212 = fmul double %200, %205\l  %213 = fneg double %212\l  %214 = tail call double @llvm.fma.f64(double %200, double %205, double %213)\l  %215 = fadd double %209, %214\l  %216 = fsub double %215, %209\l  %217 = fsub double %215, %216\l  %218 = fsub double %214, %216\l  %219 = fsub double %209, %217\l  %220 = fadd double %218, %219\l  %221 = fadd double %206, %211\l  %222 = fsub double %221, %206\l  %223 = fsub double %221, %222\l  %224 = fsub double %211, %222\l  %225 = fsub double %206, %223\l  %226 = fadd double %224, %225\l  %227 = fadd double %221, %220\l  %228 = fsub double %227, %221\l  %229 = fsub double %227, %228\l  %230 = fsub double %220, %228\l  %231 = fsub double %221, %229\l  %232 = fadd double %230, %231\l  %233 = fadd double %226, %232\l  %234 = fadd double %208, %233\l  %235 = fadd double %212, %215\l  %236 = fsub double %235, %212\l  %237 = fsub double %215, %236\l  %238 = fadd double %237, %227\l  %239 = fsub double %238, %237\l  %240 = fsub double %227, %239\l  %241 = fadd double %240, %234\l  %242 = tail call double @llvm.amdgcn.ldexp.f64(double %235, i32 -2)\l  %243 = tail call double @llvm.amdgcn.fract.f64(double %242)\l  %244 = tail call i1 @llvm.amdgcn.class.f64(double %242, i32 516)\l  %245 = select i1 %244, double 0.000000e+00, double %243\l  %246 = tail call double @llvm.amdgcn.ldexp.f64(double %245, i32 2)\l  %247 = fadd double %246, %238\l  %248 = fcmp olt double %247, 0.000000e+00\l  %249 = select i1 %248, double 4.000000e+00, double 0.000000e+00\l  %250 = fadd double %246, %249\l  %251 = fadd double %238, %250\l  %252 = fptosi double %251 to i32\l  %253 = sitofp i32 %252 to double\l  %254 = fsub double %250, %253\l  %255 = fadd double %238, %254\l  %256 = fsub double %255, %254\l  %257 = fsub double %238, %256\l  %258 = fadd double %241, %257\l  %259 = fcmp oge double %255, 5.000000e-01\l  %260 = zext i1 %259 to i32\l  %261 = add nsw i32 %260, %252\l  %262 = select i1 %259, double 1.000000e+00, double 0.000000e+00\l  %263 = fsub double %255, %262\l  %264 = fadd double %263, %258\l  %265 = fsub double %264, %263\l  %266 = fsub double %258, %265\l  %267 = fmul double %264, 0x3FF921FB54442D18\l  %268 = fneg double %267\l  %269 = tail call double @llvm.fma.f64(double %264, double\l... 0x3FF921FB54442D18, double %268)\l  %270 = tail call double @llvm.fma.f64(double %264, double\l... 0x3C91A62633145C07, double %269)\l  %271 = tail call double @llvm.fma.f64(double %266, double\l... 0x3FF921FB54442D18, double %270)\l  %272 = fadd double %267, %271\l  %273 = fsub double %272, %267\l  %274 = fsub double %271, %273\l  br label %275\l}"];
	Node0x56e70f0 -> Node0x56e7ef0;
	Node0x56e7ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%275:\l275:                                              \l  %276 = phi double [ %197, %180 ], [ %274, %199 ]\l  %277 = phi double [ %195, %180 ], [ %272, %199 ]\l  %278 = phi i32 [ %198, %180 ], [ %261, %199 ]\l  %279 = fmul double %277, %277\l  %280 = fmul double %279, 5.000000e-01\l  %281 = fsub double 1.000000e+00, %280\l  %282 = fsub double 1.000000e+00, %281\l  %283 = fsub double %282, %280\l  %284 = fmul double %279, %279\l  %285 = tail call double @llvm.fma.f64(double %279, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %286 = tail call double @llvm.fma.f64(double %279, double %285, double\l... 0xBE927E4FA17F65F6)\l  %287 = tail call double @llvm.fma.f64(double %279, double %286, double\l... 0x3EFA01A019F4EC90)\l  %288 = tail call double @llvm.fma.f64(double %279, double %287, double\l... 0xBF56C16C16C16967)\l  %289 = tail call double @llvm.fma.f64(double %279, double %288, double\l... 0x3FA5555555555555)\l  %290 = fneg double %276\l  %291 = tail call double @llvm.fma.f64(double %277, double %290, double %283)\l  %292 = tail call double @llvm.fma.f64(double %284, double %289, double %291)\l  %293 = fadd double %281, %292\l  %294 = tail call double @llvm.fma.f64(double %279, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %295 = tail call double @llvm.fma.f64(double %279, double %294, double\l... 0x3EC71DE3796CDE01)\l  %296 = tail call double @llvm.fma.f64(double %279, double %295, double\l... 0xBF2A01A019E83E5C)\l  %297 = tail call double @llvm.fma.f64(double %279, double %296, double\l... 0x3F81111111110BB3)\l  %298 = fneg double %279\l  %299 = fmul double %277, %298\l  %300 = fmul double %276, 5.000000e-01\l  %301 = tail call double @llvm.fma.f64(double %299, double %297, double %300)\l  %302 = tail call double @llvm.fma.f64(double %279, double %301, double %290)\l  %303 = tail call double @llvm.fma.f64(double %299, double\l... 0xBFC5555555555555, double %302)\l  %304 = fsub double %277, %303\l  %305 = and i32 %278, 1\l  %306 = icmp eq i32 %305, 0\l  %307 = select i1 %306, double %304, double %293\l  %308 = bitcast double %307 to \<2 x i32\>\l  %309 = shl i32 %278, 30\l  %310 = bitcast double %177 to \<2 x i32\>\l  %311 = extractelement \<2 x i32\> %310, i64 1\l  %312 = xor i32 %309, %311\l  %313 = and i32 %312, -2147483648\l  %314 = extractelement \<2 x i32\> %308, i64 1\l  %315 = xor i32 %314, %313\l  %316 = insertelement \<2 x i32\> %308, i32 %315, i64 1\l  %317 = tail call i1 @llvm.amdgcn.class.f64(double %178, i32 504)\l  %318 = select i1 %317, \<2 x i32\> %316, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %319 = bitcast \<2 x i32\> %318 to double\l  %320 = fmul contract double %175, %319\l  %321 = fsub contract double %172, %320\l  %322 = fpext float %23 to double\l  %323 = fadd contract double %321, %322\l  %324 = fptrunc double %323 to float\l  br i1 %33, label %325, label %344\l|{<s0>T|<s1>F}}"];
	Node0x56e7ef0:s0 -> Node0x56eded0;
	Node0x56e7ef0:s1 -> Node0x56edf20;
	Node0x56eded0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%325:\l325:                                              \l  %326 = fmul double %32, 0x3FE45F306DC9C883\l  %327 = tail call double @llvm.rint.f64(double %326)\l  %328 = tail call double @llvm.fma.f64(double %327, double\l... 0xBFF921FB54442D18, double %32)\l  %329 = tail call double @llvm.fma.f64(double %327, double\l... 0xBC91A62633145C00, double %328)\l  %330 = fmul double %327, 0x3C91A62633145C00\l  %331 = fneg double %330\l  %332 = tail call double @llvm.fma.f64(double %327, double\l... 0x3C91A62633145C00, double %331)\l  %333 = fsub double %328, %330\l  %334 = fsub double %328, %333\l  %335 = fsub double %334, %330\l  %336 = fsub double %333, %329\l  %337 = fadd double %336, %335\l  %338 = fsub double %337, %332\l  %339 = tail call double @llvm.fma.f64(double %327, double\l... 0xB97B839A252049C0, double %338)\l  %340 = fadd double %329, %339\l  %341 = fsub double %340, %329\l  %342 = fsub double %339, %341\l  %343 = fptosi double %327 to i32\l  br label %420\l}"];
	Node0x56eded0 -> Node0x56eece0;
	Node0x56edf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%344:\l344:                                              \l  %345 = tail call double @llvm.amdgcn.trig.preop.f64(double %32, i32 0)\l  %346 = tail call double @llvm.amdgcn.trig.preop.f64(double %32, i32 1)\l  %347 = tail call double @llvm.amdgcn.trig.preop.f64(double %32, i32 2)\l  %348 = fcmp oge double %32, 0x7B00000000000000\l  %349 = tail call double @llvm.amdgcn.ldexp.f64(double %32, i32 -128)\l  %350 = select i1 %348, double %349, double %32\l  %351 = fmul double %347, %350\l  %352 = fneg double %351\l  %353 = tail call double @llvm.fma.f64(double %347, double %350, double %352)\l  %354 = fmul double %346, %350\l  %355 = fneg double %354\l  %356 = tail call double @llvm.fma.f64(double %346, double %350, double %355)\l  %357 = fmul double %345, %350\l  %358 = fneg double %357\l  %359 = tail call double @llvm.fma.f64(double %345, double %350, double %358)\l  %360 = fadd double %354, %359\l  %361 = fsub double %360, %354\l  %362 = fsub double %360, %361\l  %363 = fsub double %359, %361\l  %364 = fsub double %354, %362\l  %365 = fadd double %363, %364\l  %366 = fadd double %351, %356\l  %367 = fsub double %366, %351\l  %368 = fsub double %366, %367\l  %369 = fsub double %356, %367\l  %370 = fsub double %351, %368\l  %371 = fadd double %369, %370\l  %372 = fadd double %366, %365\l  %373 = fsub double %372, %366\l  %374 = fsub double %372, %373\l  %375 = fsub double %365, %373\l  %376 = fsub double %366, %374\l  %377 = fadd double %375, %376\l  %378 = fadd double %371, %377\l  %379 = fadd double %353, %378\l  %380 = fadd double %357, %360\l  %381 = fsub double %380, %357\l  %382 = fsub double %360, %381\l  %383 = fadd double %382, %372\l  %384 = fsub double %383, %382\l  %385 = fsub double %372, %384\l  %386 = fadd double %385, %379\l  %387 = tail call double @llvm.amdgcn.ldexp.f64(double %380, i32 -2)\l  %388 = tail call double @llvm.amdgcn.fract.f64(double %387)\l  %389 = tail call i1 @llvm.amdgcn.class.f64(double %387, i32 516)\l  %390 = select i1 %389, double 0.000000e+00, double %388\l  %391 = tail call double @llvm.amdgcn.ldexp.f64(double %390, i32 2)\l  %392 = fadd double %391, %383\l  %393 = fcmp olt double %392, 0.000000e+00\l  %394 = select i1 %393, double 4.000000e+00, double 0.000000e+00\l  %395 = fadd double %391, %394\l  %396 = fadd double %383, %395\l  %397 = fptosi double %396 to i32\l  %398 = sitofp i32 %397 to double\l  %399 = fsub double %395, %398\l  %400 = fadd double %383, %399\l  %401 = fsub double %400, %399\l  %402 = fsub double %383, %401\l  %403 = fadd double %386, %402\l  %404 = fcmp oge double %400, 5.000000e-01\l  %405 = zext i1 %404 to i32\l  %406 = add nsw i32 %405, %397\l  %407 = select i1 %404, double 1.000000e+00, double 0.000000e+00\l  %408 = fsub double %400, %407\l  %409 = fadd double %408, %403\l  %410 = fsub double %409, %408\l  %411 = fsub double %403, %410\l  %412 = fmul double %409, 0x3FF921FB54442D18\l  %413 = fneg double %412\l  %414 = tail call double @llvm.fma.f64(double %409, double\l... 0x3FF921FB54442D18, double %413)\l  %415 = tail call double @llvm.fma.f64(double %409, double\l... 0x3C91A62633145C07, double %414)\l  %416 = tail call double @llvm.fma.f64(double %411, double\l... 0x3FF921FB54442D18, double %415)\l  %417 = fadd double %412, %416\l  %418 = fsub double %417, %412\l  %419 = fsub double %416, %418\l  br label %420\l}"];
	Node0x56edf20 -> Node0x56eece0;
	Node0x56eece0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%420:\l420:                                              \l  %421 = phi double [ %342, %325 ], [ %419, %344 ]\l  %422 = phi double [ %340, %325 ], [ %417, %344 ]\l  %423 = phi i32 [ %343, %325 ], [ %406, %344 ]\l  %424 = fmul double %422, %422\l  %425 = fmul double %424, 5.000000e-01\l  %426 = fsub double 1.000000e+00, %425\l  %427 = fsub double 1.000000e+00, %426\l  %428 = fsub double %427, %425\l  %429 = fmul double %424, %424\l  %430 = tail call double @llvm.fma.f64(double %424, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %431 = tail call double @llvm.fma.f64(double %424, double %430, double\l... 0xBE927E4FA17F65F6)\l  %432 = tail call double @llvm.fma.f64(double %424, double %431, double\l... 0x3EFA01A019F4EC90)\l  %433 = tail call double @llvm.fma.f64(double %424, double %432, double\l... 0xBF56C16C16C16967)\l  %434 = tail call double @llvm.fma.f64(double %424, double %433, double\l... 0x3FA5555555555555)\l  %435 = fneg double %421\l  %436 = tail call double @llvm.fma.f64(double %422, double %435, double %428)\l  %437 = tail call double @llvm.fma.f64(double %429, double %434, double %436)\l  %438 = fadd double %426, %437\l  %439 = tail call double @llvm.fma.f64(double %424, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %440 = tail call double @llvm.fma.f64(double %424, double %439, double\l... 0x3EC71DE3796CDE01)\l  %441 = tail call double @llvm.fma.f64(double %424, double %440, double\l... 0xBF2A01A019E83E5C)\l  %442 = tail call double @llvm.fma.f64(double %424, double %441, double\l... 0x3F81111111110BB3)\l  %443 = fneg double %424\l  %444 = fmul double %422, %443\l  %445 = fmul double %421, 5.000000e-01\l  %446 = tail call double @llvm.fma.f64(double %444, double %442, double %445)\l  %447 = tail call double @llvm.fma.f64(double %424, double %446, double %435)\l  %448 = tail call double @llvm.fma.f64(double %444, double\l... 0xBFC5555555555555, double %447)\l  %449 = fsub double %422, %448\l  %450 = and i32 %423, 1\l  %451 = icmp eq i32 %450, 0\l  %452 = select i1 %451, double %449, double %438\l  %453 = bitcast double %452 to \<2 x i32\>\l  %454 = shl i32 %423, 30\l  %455 = bitcast double %31 to \<2 x i32\>\l  %456 = extractelement \<2 x i32\> %455, i64 1\l  %457 = xor i32 %454, %456\l  %458 = and i32 %457, -2147483648\l  %459 = extractelement \<2 x i32\> %453, i64 1\l  %460 = xor i32 %459, %458\l  %461 = insertelement \<2 x i32\> %453, i32 %460, i64 1\l  %462 = select i1 %169, \<2 x i32\> %461, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %463 = bitcast \<2 x i32\> %462 to double\l  br i1 %179, label %464, label %483\l|{<s0>T|<s1>F}}"];
	Node0x56eece0:s0 -> Node0x56f4090;
	Node0x56eece0:s1 -> Node0x56f40e0;
	Node0x56f4090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%464:\l464:                                              \l  %465 = fmul double %178, 0x3FE45F306DC9C883\l  %466 = tail call double @llvm.rint.f64(double %465)\l  %467 = tail call double @llvm.fma.f64(double %466, double\l... 0xBFF921FB54442D18, double %178)\l  %468 = tail call double @llvm.fma.f64(double %466, double\l... 0xBC91A62633145C00, double %467)\l  %469 = fmul double %466, 0x3C91A62633145C00\l  %470 = fneg double %469\l  %471 = tail call double @llvm.fma.f64(double %466, double\l... 0x3C91A62633145C00, double %470)\l  %472 = fsub double %467, %469\l  %473 = fsub double %467, %472\l  %474 = fsub double %473, %469\l  %475 = fsub double %472, %468\l  %476 = fadd double %475, %474\l  %477 = fsub double %476, %471\l  %478 = tail call double @llvm.fma.f64(double %466, double\l... 0xB97B839A252049C0, double %477)\l  %479 = fadd double %468, %478\l  %480 = fsub double %479, %468\l  %481 = fsub double %478, %480\l  %482 = fptosi double %466 to i32\l  br label %559\l}"];
	Node0x56f4090 -> Node0x56f4ea0;
	Node0x56f40e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%483:\l483:                                              \l  %484 = tail call double @llvm.amdgcn.trig.preop.f64(double %178, i32 0)\l  %485 = tail call double @llvm.amdgcn.trig.preop.f64(double %178, i32 1)\l  %486 = tail call double @llvm.amdgcn.trig.preop.f64(double %178, i32 2)\l  %487 = fcmp oge double %178, 0x7B00000000000000\l  %488 = tail call double @llvm.amdgcn.ldexp.f64(double %178, i32 -128)\l  %489 = select i1 %487, double %488, double %178\l  %490 = fmul double %486, %489\l  %491 = fneg double %490\l  %492 = tail call double @llvm.fma.f64(double %486, double %489, double %491)\l  %493 = fmul double %485, %489\l  %494 = fneg double %493\l  %495 = tail call double @llvm.fma.f64(double %485, double %489, double %494)\l  %496 = fmul double %484, %489\l  %497 = fneg double %496\l  %498 = tail call double @llvm.fma.f64(double %484, double %489, double %497)\l  %499 = fadd double %493, %498\l  %500 = fsub double %499, %493\l  %501 = fsub double %499, %500\l  %502 = fsub double %498, %500\l  %503 = fsub double %493, %501\l  %504 = fadd double %502, %503\l  %505 = fadd double %490, %495\l  %506 = fsub double %505, %490\l  %507 = fsub double %505, %506\l  %508 = fsub double %495, %506\l  %509 = fsub double %490, %507\l  %510 = fadd double %508, %509\l  %511 = fadd double %505, %504\l  %512 = fsub double %511, %505\l  %513 = fsub double %511, %512\l  %514 = fsub double %504, %512\l  %515 = fsub double %505, %513\l  %516 = fadd double %514, %515\l  %517 = fadd double %510, %516\l  %518 = fadd double %492, %517\l  %519 = fadd double %496, %499\l  %520 = fsub double %519, %496\l  %521 = fsub double %499, %520\l  %522 = fadd double %521, %511\l  %523 = fsub double %522, %521\l  %524 = fsub double %511, %523\l  %525 = fadd double %524, %518\l  %526 = tail call double @llvm.amdgcn.ldexp.f64(double %519, i32 -2)\l  %527 = tail call double @llvm.amdgcn.fract.f64(double %526)\l  %528 = tail call i1 @llvm.amdgcn.class.f64(double %526, i32 516)\l  %529 = select i1 %528, double 0.000000e+00, double %527\l  %530 = tail call double @llvm.amdgcn.ldexp.f64(double %529, i32 2)\l  %531 = fadd double %530, %522\l  %532 = fcmp olt double %531, 0.000000e+00\l  %533 = select i1 %532, double 4.000000e+00, double 0.000000e+00\l  %534 = fadd double %530, %533\l  %535 = fadd double %522, %534\l  %536 = fptosi double %535 to i32\l  %537 = sitofp i32 %536 to double\l  %538 = fsub double %534, %537\l  %539 = fadd double %522, %538\l  %540 = fsub double %539, %538\l  %541 = fsub double %522, %540\l  %542 = fadd double %525, %541\l  %543 = fcmp oge double %539, 5.000000e-01\l  %544 = zext i1 %543 to i32\l  %545 = add nsw i32 %544, %536\l  %546 = select i1 %543, double 1.000000e+00, double 0.000000e+00\l  %547 = fsub double %539, %546\l  %548 = fadd double %547, %542\l  %549 = fsub double %548, %547\l  %550 = fsub double %542, %549\l  %551 = fmul double %548, 0x3FF921FB54442D18\l  %552 = fneg double %551\l  %553 = tail call double @llvm.fma.f64(double %548, double\l... 0x3FF921FB54442D18, double %552)\l  %554 = tail call double @llvm.fma.f64(double %548, double\l... 0x3C91A62633145C07, double %553)\l  %555 = tail call double @llvm.fma.f64(double %550, double\l... 0x3FF921FB54442D18, double %554)\l  %556 = fadd double %551, %555\l  %557 = fsub double %556, %551\l  %558 = fsub double %555, %557\l  br label %559\l}"];
	Node0x56f40e0 -> Node0x56f4ea0;
	Node0x56f4ea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%559:\l559:                                              \l  %560 = phi double [ %481, %464 ], [ %558, %483 ]\l  %561 = phi double [ %479, %464 ], [ %556, %483 ]\l  %562 = phi i32 [ %482, %464 ], [ %545, %483 ]\l  %563 = fmul double %561, %561\l  %564 = fmul double %563, 5.000000e-01\l  %565 = fsub double 1.000000e+00, %564\l  %566 = fsub double 1.000000e+00, %565\l  %567 = fsub double %566, %564\l  %568 = fmul double %563, %563\l  %569 = tail call double @llvm.fma.f64(double %563, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %570 = tail call double @llvm.fma.f64(double %563, double %569, double\l... 0xBE927E4FA17F65F6)\l  %571 = tail call double @llvm.fma.f64(double %563, double %570, double\l... 0x3EFA01A019F4EC90)\l  %572 = tail call double @llvm.fma.f64(double %563, double %571, double\l... 0xBF56C16C16C16967)\l  %573 = tail call double @llvm.fma.f64(double %563, double %572, double\l... 0x3FA5555555555555)\l  %574 = fneg double %560\l  %575 = tail call double @llvm.fma.f64(double %561, double %574, double %567)\l  %576 = tail call double @llvm.fma.f64(double %568, double %573, double %575)\l  %577 = fadd double %565, %576\l  %578 = tail call double @llvm.fma.f64(double %563, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %579 = tail call double @llvm.fma.f64(double %563, double %578, double\l... 0x3EC71DE3796CDE01)\l  %580 = tail call double @llvm.fma.f64(double %563, double %579, double\l... 0xBF2A01A019E83E5C)\l  %581 = tail call double @llvm.fma.f64(double %563, double %580, double\l... 0x3F81111111110BB3)\l  %582 = fneg double %563\l  %583 = fmul double %561, %582\l  %584 = fmul double %560, 5.000000e-01\l  %585 = tail call double @llvm.fma.f64(double %583, double %581, double %584)\l  %586 = tail call double @llvm.fma.f64(double %563, double %585, double %574)\l  %587 = tail call double @llvm.fma.f64(double %583, double\l... 0xBFC5555555555555, double %586)\l  %588 = fsub double %561, %587\l  %589 = fneg double %588\l  %590 = and i32 %562, 1\l  %591 = icmp eq i32 %590, 0\l  %592 = select i1 %591, double %577, double %589\l  %593 = bitcast double %592 to \<2 x i32\>\l  %594 = shl i32 %562, 30\l  %595 = and i32 %594, -2147483648\l  %596 = extractelement \<2 x i32\> %593, i64 1\l  %597 = xor i32 %596, %595\l  %598 = insertelement \<2 x i32\> %593, i32 %597, i64 1\l  %599 = select i1 %317, \<2 x i32\> %598, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %600 = bitcast \<2 x i32\> %599 to double\l  %601 = fmul contract double %175, %600\l  %602 = fmul contract double %27, %463\l  %603 = fsub contract double %601, %602\l  %604 = fpext float %22 to double\l  %605 = fadd contract double %603, %604\l  %606 = fptrunc double %605 to float\l  %607 = add nuw nsw i32 %28, 1\l  %608 = sitofp i32 %607 to double\l  %609 = fmul contract double %608, 6.280000e+00\l  %610 = fmul contract double %609, 0x3F10000000000000\l  %611 = tail call double @llvm.fabs.f64(double %610)\l  %612 = fcmp olt double %611, 0x41D0000000000000\l  br i1 %612, label %613, label %632\l|{<s0>T|<s1>F}}"];
	Node0x56f4ea0:s0 -> Node0x56fb810;
	Node0x56f4ea0:s1 -> Node0x56fb860;
	Node0x56fb810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%613:\l613:                                              \l  %614 = fmul double %611, 0x3FE45F306DC9C883\l  %615 = tail call double @llvm.rint.f64(double %614)\l  %616 = tail call double @llvm.fma.f64(double %615, double\l... 0xBFF921FB54442D18, double %611)\l  %617 = tail call double @llvm.fma.f64(double %615, double\l... 0xBC91A62633145C00, double %616)\l  %618 = fmul double %615, 0x3C91A62633145C00\l  %619 = fneg double %618\l  %620 = tail call double @llvm.fma.f64(double %615, double\l... 0x3C91A62633145C00, double %619)\l  %621 = fsub double %616, %618\l  %622 = fsub double %616, %621\l  %623 = fsub double %622, %618\l  %624 = fsub double %621, %617\l  %625 = fadd double %624, %623\l  %626 = fsub double %625, %620\l  %627 = tail call double @llvm.fma.f64(double %615, double\l... 0xB97B839A252049C0, double %626)\l  %628 = fadd double %617, %627\l  %629 = fsub double %628, %617\l  %630 = fsub double %627, %629\l  %631 = fptosi double %615 to i32\l  br label %708\l}"];
	Node0x56fb810 -> Node0x56fc620;
	Node0x56fb860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%632:\l632:                                              \l  %633 = tail call double @llvm.amdgcn.trig.preop.f64(double %611, i32 0)\l  %634 = tail call double @llvm.amdgcn.trig.preop.f64(double %611, i32 1)\l  %635 = tail call double @llvm.amdgcn.trig.preop.f64(double %611, i32 2)\l  %636 = fcmp oge double %611, 0x7B00000000000000\l  %637 = tail call double @llvm.amdgcn.ldexp.f64(double %611, i32 -128)\l  %638 = select i1 %636, double %637, double %611\l  %639 = fmul double %635, %638\l  %640 = fneg double %639\l  %641 = tail call double @llvm.fma.f64(double %635, double %638, double %640)\l  %642 = fmul double %634, %638\l  %643 = fneg double %642\l  %644 = tail call double @llvm.fma.f64(double %634, double %638, double %643)\l  %645 = fmul double %633, %638\l  %646 = fneg double %645\l  %647 = tail call double @llvm.fma.f64(double %633, double %638, double %646)\l  %648 = fadd double %642, %647\l  %649 = fsub double %648, %642\l  %650 = fsub double %648, %649\l  %651 = fsub double %647, %649\l  %652 = fsub double %642, %650\l  %653 = fadd double %651, %652\l  %654 = fadd double %639, %644\l  %655 = fsub double %654, %639\l  %656 = fsub double %654, %655\l  %657 = fsub double %644, %655\l  %658 = fsub double %639, %656\l  %659 = fadd double %657, %658\l  %660 = fadd double %654, %653\l  %661 = fsub double %660, %654\l  %662 = fsub double %660, %661\l  %663 = fsub double %653, %661\l  %664 = fsub double %654, %662\l  %665 = fadd double %663, %664\l  %666 = fadd double %659, %665\l  %667 = fadd double %641, %666\l  %668 = fadd double %645, %648\l  %669 = fsub double %668, %645\l  %670 = fsub double %648, %669\l  %671 = fadd double %670, %660\l  %672 = fsub double %671, %670\l  %673 = fsub double %660, %672\l  %674 = fadd double %673, %667\l  %675 = tail call double @llvm.amdgcn.ldexp.f64(double %668, i32 -2)\l  %676 = tail call double @llvm.amdgcn.fract.f64(double %675)\l  %677 = tail call i1 @llvm.amdgcn.class.f64(double %675, i32 516)\l  %678 = select i1 %677, double 0.000000e+00, double %676\l  %679 = tail call double @llvm.amdgcn.ldexp.f64(double %678, i32 2)\l  %680 = fadd double %679, %671\l  %681 = fcmp olt double %680, 0.000000e+00\l  %682 = select i1 %681, double 4.000000e+00, double 0.000000e+00\l  %683 = fadd double %679, %682\l  %684 = fadd double %671, %683\l  %685 = fptosi double %684 to i32\l  %686 = sitofp i32 %685 to double\l  %687 = fsub double %683, %686\l  %688 = fadd double %671, %687\l  %689 = fsub double %688, %687\l  %690 = fsub double %671, %689\l  %691 = fadd double %674, %690\l  %692 = fcmp oge double %688, 5.000000e-01\l  %693 = zext i1 %692 to i32\l  %694 = add nsw i32 %693, %685\l  %695 = select i1 %692, double 1.000000e+00, double 0.000000e+00\l  %696 = fsub double %688, %695\l  %697 = fadd double %696, %691\l  %698 = fsub double %697, %696\l  %699 = fsub double %691, %698\l  %700 = fmul double %697, 0x3FF921FB54442D18\l  %701 = fneg double %700\l  %702 = tail call double @llvm.fma.f64(double %697, double\l... 0x3FF921FB54442D18, double %701)\l  %703 = tail call double @llvm.fma.f64(double %697, double\l... 0x3C91A62633145C07, double %702)\l  %704 = tail call double @llvm.fma.f64(double %699, double\l... 0x3FF921FB54442D18, double %703)\l  %705 = fadd double %700, %704\l  %706 = fsub double %705, %700\l  %707 = fsub double %704, %706\l  br label %708\l}"];
	Node0x56fb860 -> Node0x56fc620;
	Node0x56fc620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%708:\l708:                                              \l  %709 = phi double [ %630, %613 ], [ %707, %632 ]\l  %710 = phi double [ %628, %613 ], [ %705, %632 ]\l  %711 = phi i32 [ %631, %613 ], [ %694, %632 ]\l  %712 = fmul double %710, %710\l  %713 = fmul double %712, 5.000000e-01\l  %714 = fsub double 1.000000e+00, %713\l  %715 = fsub double 1.000000e+00, %714\l  %716 = fsub double %715, %713\l  %717 = fmul double %712, %712\l  %718 = tail call double @llvm.fma.f64(double %712, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %719 = tail call double @llvm.fma.f64(double %712, double %718, double\l... 0xBE927E4FA17F65F6)\l  %720 = tail call double @llvm.fma.f64(double %712, double %719, double\l... 0x3EFA01A019F4EC90)\l  %721 = tail call double @llvm.fma.f64(double %712, double %720, double\l... 0xBF56C16C16C16967)\l  %722 = tail call double @llvm.fma.f64(double %712, double %721, double\l... 0x3FA5555555555555)\l  %723 = fneg double %709\l  %724 = tail call double @llvm.fma.f64(double %710, double %723, double %716)\l  %725 = tail call double @llvm.fma.f64(double %717, double %722, double %724)\l  %726 = fadd double %714, %725\l  %727 = tail call double @llvm.fma.f64(double %712, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %728 = tail call double @llvm.fma.f64(double %712, double %727, double\l... 0x3EC71DE3796CDE01)\l  %729 = tail call double @llvm.fma.f64(double %712, double %728, double\l... 0xBF2A01A019E83E5C)\l  %730 = tail call double @llvm.fma.f64(double %712, double %729, double\l... 0x3F81111111110BB3)\l  %731 = fneg double %712\l  %732 = fmul double %710, %731\l  %733 = fmul double %709, 5.000000e-01\l  %734 = tail call double @llvm.fma.f64(double %732, double %730, double %733)\l  %735 = tail call double @llvm.fma.f64(double %712, double %734, double %723)\l  %736 = tail call double @llvm.fma.f64(double %732, double\l... 0xBFC5555555555555, double %735)\l  %737 = fsub double %710, %736\l  %738 = fneg double %737\l  %739 = and i32 %711, 1\l  %740 = icmp eq i32 %739, 0\l  %741 = select i1 %740, double %726, double %738\l  %742 = bitcast double %741 to \<2 x i32\>\l  %743 = shl i32 %711, 30\l  %744 = and i32 %743, -2147483648\l  %745 = extractelement \<2 x i32\> %742, i64 1\l  %746 = xor i32 %745, %744\l  %747 = insertelement \<2 x i32\> %742, i32 %746, i64 1\l  %748 = tail call i1 @llvm.amdgcn.class.f64(double %611, i32 504)\l  %749 = select i1 %748, \<2 x i32\> %747, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %750 = bitcast \<2 x i32\> %749 to double\l  %751 = fmul contract double %27, %750\l  %752 = fmul contract double %15, %608\l  %753 = fmul contract double %752, 0x3F10000000000000\l  %754 = tail call double @llvm.fabs.f64(double %753)\l  %755 = fcmp olt double %754, 0x41D0000000000000\l  br i1 %755, label %756, label %775\l|{<s0>T|<s1>F}}"];
	Node0x56fc620:s0 -> Node0x5701cf0;
	Node0x56fc620:s1 -> Node0x5701d40;
	Node0x5701cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%756:\l756:                                              \l  %757 = fmul double %754, 0x3FE45F306DC9C883\l  %758 = tail call double @llvm.rint.f64(double %757)\l  %759 = tail call double @llvm.fma.f64(double %758, double\l... 0xBFF921FB54442D18, double %754)\l  %760 = tail call double @llvm.fma.f64(double %758, double\l... 0xBC91A62633145C00, double %759)\l  %761 = fmul double %758, 0x3C91A62633145C00\l  %762 = fneg double %761\l  %763 = tail call double @llvm.fma.f64(double %758, double\l... 0x3C91A62633145C00, double %762)\l  %764 = fsub double %759, %761\l  %765 = fsub double %759, %764\l  %766 = fsub double %765, %761\l  %767 = fsub double %764, %760\l  %768 = fadd double %767, %766\l  %769 = fsub double %768, %763\l  %770 = tail call double @llvm.fma.f64(double %758, double\l... 0xB97B839A252049C0, double %769)\l  %771 = fadd double %760, %770\l  %772 = fsub double %771, %760\l  %773 = fsub double %770, %772\l  %774 = fptosi double %758 to i32\l  br label %851\l}"];
	Node0x5701cf0 -> Node0x5702b00;
	Node0x5701d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%775:\l775:                                              \l  %776 = tail call double @llvm.amdgcn.trig.preop.f64(double %754, i32 0)\l  %777 = tail call double @llvm.amdgcn.trig.preop.f64(double %754, i32 1)\l  %778 = tail call double @llvm.amdgcn.trig.preop.f64(double %754, i32 2)\l  %779 = fcmp oge double %754, 0x7B00000000000000\l  %780 = tail call double @llvm.amdgcn.ldexp.f64(double %754, i32 -128)\l  %781 = select i1 %779, double %780, double %754\l  %782 = fmul double %778, %781\l  %783 = fneg double %782\l  %784 = tail call double @llvm.fma.f64(double %778, double %781, double %783)\l  %785 = fmul double %777, %781\l  %786 = fneg double %785\l  %787 = tail call double @llvm.fma.f64(double %777, double %781, double %786)\l  %788 = fmul double %776, %781\l  %789 = fneg double %788\l  %790 = tail call double @llvm.fma.f64(double %776, double %781, double %789)\l  %791 = fadd double %785, %790\l  %792 = fsub double %791, %785\l  %793 = fsub double %791, %792\l  %794 = fsub double %790, %792\l  %795 = fsub double %785, %793\l  %796 = fadd double %794, %795\l  %797 = fadd double %782, %787\l  %798 = fsub double %797, %782\l  %799 = fsub double %797, %798\l  %800 = fsub double %787, %798\l  %801 = fsub double %782, %799\l  %802 = fadd double %800, %801\l  %803 = fadd double %797, %796\l  %804 = fsub double %803, %797\l  %805 = fsub double %803, %804\l  %806 = fsub double %796, %804\l  %807 = fsub double %797, %805\l  %808 = fadd double %806, %807\l  %809 = fadd double %802, %808\l  %810 = fadd double %784, %809\l  %811 = fadd double %788, %791\l  %812 = fsub double %811, %788\l  %813 = fsub double %791, %812\l  %814 = fadd double %813, %803\l  %815 = fsub double %814, %813\l  %816 = fsub double %803, %815\l  %817 = fadd double %816, %810\l  %818 = tail call double @llvm.amdgcn.ldexp.f64(double %811, i32 -2)\l  %819 = tail call double @llvm.amdgcn.fract.f64(double %818)\l  %820 = tail call i1 @llvm.amdgcn.class.f64(double %818, i32 516)\l  %821 = select i1 %820, double 0.000000e+00, double %819\l  %822 = tail call double @llvm.amdgcn.ldexp.f64(double %821, i32 2)\l  %823 = fadd double %822, %814\l  %824 = fcmp olt double %823, 0.000000e+00\l  %825 = select i1 %824, double 4.000000e+00, double 0.000000e+00\l  %826 = fadd double %822, %825\l  %827 = fadd double %814, %826\l  %828 = fptosi double %827 to i32\l  %829 = sitofp i32 %828 to double\l  %830 = fsub double %826, %829\l  %831 = fadd double %814, %830\l  %832 = fsub double %831, %830\l  %833 = fsub double %814, %832\l  %834 = fadd double %817, %833\l  %835 = fcmp oge double %831, 5.000000e-01\l  %836 = zext i1 %835 to i32\l  %837 = add nsw i32 %836, %828\l  %838 = select i1 %835, double 1.000000e+00, double 0.000000e+00\l  %839 = fsub double %831, %838\l  %840 = fadd double %839, %834\l  %841 = fsub double %840, %839\l  %842 = fsub double %834, %841\l  %843 = fmul double %840, 0x3FF921FB54442D18\l  %844 = fneg double %843\l  %845 = tail call double @llvm.fma.f64(double %840, double\l... 0x3FF921FB54442D18, double %844)\l  %846 = tail call double @llvm.fma.f64(double %840, double\l... 0x3C91A62633145C07, double %845)\l  %847 = tail call double @llvm.fma.f64(double %842, double\l... 0x3FF921FB54442D18, double %846)\l  %848 = fadd double %843, %847\l  %849 = fsub double %848, %843\l  %850 = fsub double %847, %849\l  br label %851\l}"];
	Node0x5701d40 -> Node0x5702b00;
	Node0x5702b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%851:\l851:                                              \l  %852 = phi double [ %773, %756 ], [ %850, %775 ]\l  %853 = phi double [ %771, %756 ], [ %848, %775 ]\l  %854 = phi i32 [ %774, %756 ], [ %837, %775 ]\l  %855 = fmul double %853, %853\l  %856 = fmul double %855, 5.000000e-01\l  %857 = fsub double 1.000000e+00, %856\l  %858 = fsub double 1.000000e+00, %857\l  %859 = fsub double %858, %856\l  %860 = fmul double %855, %855\l  %861 = tail call double @llvm.fma.f64(double %855, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %862 = tail call double @llvm.fma.f64(double %855, double %861, double\l... 0xBE927E4FA17F65F6)\l  %863 = tail call double @llvm.fma.f64(double %855, double %862, double\l... 0x3EFA01A019F4EC90)\l  %864 = tail call double @llvm.fma.f64(double %855, double %863, double\l... 0xBF56C16C16C16967)\l  %865 = tail call double @llvm.fma.f64(double %855, double %864, double\l... 0x3FA5555555555555)\l  %866 = fneg double %852\l  %867 = tail call double @llvm.fma.f64(double %853, double %866, double %859)\l  %868 = tail call double @llvm.fma.f64(double %860, double %865, double %867)\l  %869 = fadd double %857, %868\l  %870 = tail call double @llvm.fma.f64(double %855, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %871 = tail call double @llvm.fma.f64(double %855, double %870, double\l... 0x3EC71DE3796CDE01)\l  %872 = tail call double @llvm.fma.f64(double %855, double %871, double\l... 0xBF2A01A019E83E5C)\l  %873 = tail call double @llvm.fma.f64(double %855, double %872, double\l... 0x3F81111111110BB3)\l  %874 = fneg double %855\l  %875 = fmul double %853, %874\l  %876 = fmul double %852, 5.000000e-01\l  %877 = tail call double @llvm.fma.f64(double %875, double %873, double %876)\l  %878 = tail call double @llvm.fma.f64(double %855, double %877, double %866)\l  %879 = tail call double @llvm.fma.f64(double %875, double\l... 0xBFC5555555555555, double %878)\l  %880 = fsub double %853, %879\l  %881 = and i32 %854, 1\l  %882 = icmp eq i32 %881, 0\l  %883 = select i1 %882, double %880, double %869\l  %884 = bitcast double %883 to \<2 x i32\>\l  %885 = shl i32 %854, 30\l  %886 = bitcast double %753 to \<2 x i32\>\l  %887 = extractelement \<2 x i32\> %886, i64 1\l  %888 = xor i32 %885, %887\l  %889 = and i32 %888, -2147483648\l  %890 = extractelement \<2 x i32\> %884, i64 1\l  %891 = xor i32 %890, %889\l  %892 = insertelement \<2 x i32\> %884, i32 %891, i64 1\l  %893 = tail call i1 @llvm.amdgcn.class.f64(double %754, i32 504)\l  %894 = select i1 %893, \<2 x i32\> %892, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %895 = bitcast \<2 x i32\> %894 to double\l  %896 = fmul contract double %175, %895\l  %897 = fsub contract double %751, %896\l  %898 = fpext float %324 to double\l  %899 = fadd contract double %897, %898\l  %900 = fptrunc double %899 to float\l  br i1 %612, label %901, label %920\l|{<s0>T|<s1>F}}"];
	Node0x5702b00:s0 -> Node0x5708250;
	Node0x5702b00:s1 -> Node0x57082a0;
	Node0x5708250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%901:\l901:                                              \l  %902 = fmul double %611, 0x3FE45F306DC9C883\l  %903 = tail call double @llvm.rint.f64(double %902)\l  %904 = tail call double @llvm.fma.f64(double %903, double\l... 0xBFF921FB54442D18, double %611)\l  %905 = tail call double @llvm.fma.f64(double %903, double\l... 0xBC91A62633145C00, double %904)\l  %906 = fmul double %903, 0x3C91A62633145C00\l  %907 = fneg double %906\l  %908 = tail call double @llvm.fma.f64(double %903, double\l... 0x3C91A62633145C00, double %907)\l  %909 = fsub double %904, %906\l  %910 = fsub double %904, %909\l  %911 = fsub double %910, %906\l  %912 = fsub double %909, %905\l  %913 = fadd double %912, %911\l  %914 = fsub double %913, %908\l  %915 = tail call double @llvm.fma.f64(double %903, double\l... 0xB97B839A252049C0, double %914)\l  %916 = fadd double %905, %915\l  %917 = fsub double %916, %905\l  %918 = fsub double %915, %917\l  %919 = fptosi double %903 to i32\l  br label %996\l}"];
	Node0x5708250 -> Node0x5709060;
	Node0x57082a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%920:\l920:                                              \l  %921 = tail call double @llvm.amdgcn.trig.preop.f64(double %611, i32 0)\l  %922 = tail call double @llvm.amdgcn.trig.preop.f64(double %611, i32 1)\l  %923 = tail call double @llvm.amdgcn.trig.preop.f64(double %611, i32 2)\l  %924 = fcmp oge double %611, 0x7B00000000000000\l  %925 = tail call double @llvm.amdgcn.ldexp.f64(double %611, i32 -128)\l  %926 = select i1 %924, double %925, double %611\l  %927 = fmul double %923, %926\l  %928 = fneg double %927\l  %929 = tail call double @llvm.fma.f64(double %923, double %926, double %928)\l  %930 = fmul double %922, %926\l  %931 = fneg double %930\l  %932 = tail call double @llvm.fma.f64(double %922, double %926, double %931)\l  %933 = fmul double %921, %926\l  %934 = fneg double %933\l  %935 = tail call double @llvm.fma.f64(double %921, double %926, double %934)\l  %936 = fadd double %930, %935\l  %937 = fsub double %936, %930\l  %938 = fsub double %936, %937\l  %939 = fsub double %935, %937\l  %940 = fsub double %930, %938\l  %941 = fadd double %939, %940\l  %942 = fadd double %927, %932\l  %943 = fsub double %942, %927\l  %944 = fsub double %942, %943\l  %945 = fsub double %932, %943\l  %946 = fsub double %927, %944\l  %947 = fadd double %945, %946\l  %948 = fadd double %942, %941\l  %949 = fsub double %948, %942\l  %950 = fsub double %948, %949\l  %951 = fsub double %941, %949\l  %952 = fsub double %942, %950\l  %953 = fadd double %951, %952\l  %954 = fadd double %947, %953\l  %955 = fadd double %929, %954\l  %956 = fadd double %933, %936\l  %957 = fsub double %956, %933\l  %958 = fsub double %936, %957\l  %959 = fadd double %958, %948\l  %960 = fsub double %959, %958\l  %961 = fsub double %948, %960\l  %962 = fadd double %961, %955\l  %963 = tail call double @llvm.amdgcn.ldexp.f64(double %956, i32 -2)\l  %964 = tail call double @llvm.amdgcn.fract.f64(double %963)\l  %965 = tail call i1 @llvm.amdgcn.class.f64(double %963, i32 516)\l  %966 = select i1 %965, double 0.000000e+00, double %964\l  %967 = tail call double @llvm.amdgcn.ldexp.f64(double %966, i32 2)\l  %968 = fadd double %967, %959\l  %969 = fcmp olt double %968, 0.000000e+00\l  %970 = select i1 %969, double 4.000000e+00, double 0.000000e+00\l  %971 = fadd double %967, %970\l  %972 = fadd double %959, %971\l  %973 = fptosi double %972 to i32\l  %974 = sitofp i32 %973 to double\l  %975 = fsub double %971, %974\l  %976 = fadd double %959, %975\l  %977 = fsub double %976, %975\l  %978 = fsub double %959, %977\l  %979 = fadd double %962, %978\l  %980 = fcmp oge double %976, 5.000000e-01\l  %981 = zext i1 %980 to i32\l  %982 = add nsw i32 %981, %973\l  %983 = select i1 %980, double 1.000000e+00, double 0.000000e+00\l  %984 = fsub double %976, %983\l  %985 = fadd double %984, %979\l  %986 = fsub double %985, %984\l  %987 = fsub double %979, %986\l  %988 = fmul double %985, 0x3FF921FB54442D18\l  %989 = fneg double %988\l  %990 = tail call double @llvm.fma.f64(double %985, double\l... 0x3FF921FB54442D18, double %989)\l  %991 = tail call double @llvm.fma.f64(double %985, double\l... 0x3C91A62633145C07, double %990)\l  %992 = tail call double @llvm.fma.f64(double %987, double\l... 0x3FF921FB54442D18, double %991)\l  %993 = fadd double %988, %992\l  %994 = fsub double %993, %988\l  %995 = fsub double %992, %994\l  br label %996\l}"];
	Node0x57082a0 -> Node0x5709060;
	Node0x5709060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%996:\l996:                                              \l  %997 = phi double [ %918, %901 ], [ %995, %920 ]\l  %998 = phi double [ %916, %901 ], [ %993, %920 ]\l  %999 = phi i32 [ %919, %901 ], [ %982, %920 ]\l  %1000 = fmul double %998, %998\l  %1001 = fmul double %1000, 5.000000e-01\l  %1002 = fsub double 1.000000e+00, %1001\l  %1003 = fsub double 1.000000e+00, %1002\l  %1004 = fsub double %1003, %1001\l  %1005 = fmul double %1000, %1000\l  %1006 = tail call double @llvm.fma.f64(double %1000, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %1007 = tail call double @llvm.fma.f64(double %1000, double %1006, double\l... 0xBE927E4FA17F65F6)\l  %1008 = tail call double @llvm.fma.f64(double %1000, double %1007, double\l... 0x3EFA01A019F4EC90)\l  %1009 = tail call double @llvm.fma.f64(double %1000, double %1008, double\l... 0xBF56C16C16C16967)\l  %1010 = tail call double @llvm.fma.f64(double %1000, double %1009, double\l... 0x3FA5555555555555)\l  %1011 = fneg double %997\l  %1012 = tail call double @llvm.fma.f64(double %998, double %1011, double\l... %1004)\l  %1013 = tail call double @llvm.fma.f64(double %1005, double %1010, double\l... %1012)\l  %1014 = fadd double %1002, %1013\l  %1015 = tail call double @llvm.fma.f64(double %1000, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %1016 = tail call double @llvm.fma.f64(double %1000, double %1015, double\l... 0x3EC71DE3796CDE01)\l  %1017 = tail call double @llvm.fma.f64(double %1000, double %1016, double\l... 0xBF2A01A019E83E5C)\l  %1018 = tail call double @llvm.fma.f64(double %1000, double %1017, double\l... 0x3F81111111110BB3)\l  %1019 = fneg double %1000\l  %1020 = fmul double %998, %1019\l  %1021 = fmul double %997, 5.000000e-01\l  %1022 = tail call double @llvm.fma.f64(double %1020, double %1018, double\l... %1021)\l  %1023 = tail call double @llvm.fma.f64(double %1000, double %1022, double\l... %1011)\l  %1024 = tail call double @llvm.fma.f64(double %1020, double\l... 0xBFC5555555555555, double %1023)\l  %1025 = fsub double %998, %1024\l  %1026 = and i32 %999, 1\l  %1027 = icmp eq i32 %1026, 0\l  %1028 = select i1 %1027, double %1025, double %1014\l  %1029 = bitcast double %1028 to \<2 x i32\>\l  %1030 = shl i32 %999, 30\l  %1031 = bitcast double %610 to \<2 x i32\>\l  %1032 = extractelement \<2 x i32\> %1031, i64 1\l  %1033 = xor i32 %1030, %1032\l  %1034 = and i32 %1033, -2147483648\l  %1035 = extractelement \<2 x i32\> %1029, i64 1\l  %1036 = xor i32 %1035, %1034\l  %1037 = insertelement \<2 x i32\> %1029, i32 %1036, i64 1\l  %1038 = select i1 %748, \<2 x i32\> %1037, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %1039 = bitcast \<2 x i32\> %1038 to double\l  br i1 %755, label %1040, label %1059\l|{<s0>T|<s1>F}}"];
	Node0x5709060:s0 -> Node0x56f6bc0;
	Node0x5709060:s1 -> Node0x56f6c10;
	Node0x56f6bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%1040:\l1040:                                             \l  %1041 = fmul double %754, 0x3FE45F306DC9C883\l  %1042 = tail call double @llvm.rint.f64(double %1041)\l  %1043 = tail call double @llvm.fma.f64(double %1042, double\l... 0xBFF921FB54442D18, double %754)\l  %1044 = tail call double @llvm.fma.f64(double %1042, double\l... 0xBC91A62633145C00, double %1043)\l  %1045 = fmul double %1042, 0x3C91A62633145C00\l  %1046 = fneg double %1045\l  %1047 = tail call double @llvm.fma.f64(double %1042, double\l... 0x3C91A62633145C00, double %1046)\l  %1048 = fsub double %1043, %1045\l  %1049 = fsub double %1043, %1048\l  %1050 = fsub double %1049, %1045\l  %1051 = fsub double %1048, %1044\l  %1052 = fadd double %1051, %1050\l  %1053 = fsub double %1052, %1047\l  %1054 = tail call double @llvm.fma.f64(double %1042, double\l... 0xB97B839A252049C0, double %1053)\l  %1055 = fadd double %1044, %1054\l  %1056 = fsub double %1055, %1044\l  %1057 = fsub double %1054, %1056\l  %1058 = fptosi double %1042 to i32\l  br label %1135\l}"];
	Node0x56f6bc0 -> Node0x56ddb30;
	Node0x56f6c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%1059:\l1059:                                             \l  %1060 = tail call double @llvm.amdgcn.trig.preop.f64(double %754, i32 0)\l  %1061 = tail call double @llvm.amdgcn.trig.preop.f64(double %754, i32 1)\l  %1062 = tail call double @llvm.amdgcn.trig.preop.f64(double %754, i32 2)\l  %1063 = fcmp oge double %754, 0x7B00000000000000\l  %1064 = tail call double @llvm.amdgcn.ldexp.f64(double %754, i32 -128)\l  %1065 = select i1 %1063, double %1064, double %754\l  %1066 = fmul double %1062, %1065\l  %1067 = fneg double %1066\l  %1068 = tail call double @llvm.fma.f64(double %1062, double %1065, double\l... %1067)\l  %1069 = fmul double %1061, %1065\l  %1070 = fneg double %1069\l  %1071 = tail call double @llvm.fma.f64(double %1061, double %1065, double\l... %1070)\l  %1072 = fmul double %1060, %1065\l  %1073 = fneg double %1072\l  %1074 = tail call double @llvm.fma.f64(double %1060, double %1065, double\l... %1073)\l  %1075 = fadd double %1069, %1074\l  %1076 = fsub double %1075, %1069\l  %1077 = fsub double %1075, %1076\l  %1078 = fsub double %1074, %1076\l  %1079 = fsub double %1069, %1077\l  %1080 = fadd double %1078, %1079\l  %1081 = fadd double %1066, %1071\l  %1082 = fsub double %1081, %1066\l  %1083 = fsub double %1081, %1082\l  %1084 = fsub double %1071, %1082\l  %1085 = fsub double %1066, %1083\l  %1086 = fadd double %1084, %1085\l  %1087 = fadd double %1081, %1080\l  %1088 = fsub double %1087, %1081\l  %1089 = fsub double %1087, %1088\l  %1090 = fsub double %1080, %1088\l  %1091 = fsub double %1081, %1089\l  %1092 = fadd double %1090, %1091\l  %1093 = fadd double %1086, %1092\l  %1094 = fadd double %1068, %1093\l  %1095 = fadd double %1072, %1075\l  %1096 = fsub double %1095, %1072\l  %1097 = fsub double %1075, %1096\l  %1098 = fadd double %1097, %1087\l  %1099 = fsub double %1098, %1097\l  %1100 = fsub double %1087, %1099\l  %1101 = fadd double %1100, %1094\l  %1102 = tail call double @llvm.amdgcn.ldexp.f64(double %1095, i32 -2)\l  %1103 = tail call double @llvm.amdgcn.fract.f64(double %1102)\l  %1104 = tail call i1 @llvm.amdgcn.class.f64(double %1102, i32 516)\l  %1105 = select i1 %1104, double 0.000000e+00, double %1103\l  %1106 = tail call double @llvm.amdgcn.ldexp.f64(double %1105, i32 2)\l  %1107 = fadd double %1106, %1098\l  %1108 = fcmp olt double %1107, 0.000000e+00\l  %1109 = select i1 %1108, double 4.000000e+00, double 0.000000e+00\l  %1110 = fadd double %1106, %1109\l  %1111 = fadd double %1098, %1110\l  %1112 = fptosi double %1111 to i32\l  %1113 = sitofp i32 %1112 to double\l  %1114 = fsub double %1110, %1113\l  %1115 = fadd double %1098, %1114\l  %1116 = fsub double %1115, %1114\l  %1117 = fsub double %1098, %1116\l  %1118 = fadd double %1101, %1117\l  %1119 = fcmp oge double %1115, 5.000000e-01\l  %1120 = zext i1 %1119 to i32\l  %1121 = add nsw i32 %1120, %1112\l  %1122 = select i1 %1119, double 1.000000e+00, double 0.000000e+00\l  %1123 = fsub double %1115, %1122\l  %1124 = fadd double %1123, %1118\l  %1125 = fsub double %1124, %1123\l  %1126 = fsub double %1118, %1125\l  %1127 = fmul double %1124, 0x3FF921FB54442D18\l  %1128 = fneg double %1127\l  %1129 = tail call double @llvm.fma.f64(double %1124, double\l... 0x3FF921FB54442D18, double %1128)\l  %1130 = tail call double @llvm.fma.f64(double %1124, double\l... 0x3C91A62633145C07, double %1129)\l  %1131 = tail call double @llvm.fma.f64(double %1126, double\l... 0x3FF921FB54442D18, double %1130)\l  %1132 = fadd double %1127, %1131\l  %1133 = fsub double %1132, %1127\l  %1134 = fsub double %1131, %1133\l  br label %1135\l}"];
	Node0x56f6c10 -> Node0x56ddb30;
	Node0x56ddb30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1135:\l1135:                                             \l  %1136 = phi double [ %1057, %1040 ], [ %1134, %1059 ]\l  %1137 = phi double [ %1055, %1040 ], [ %1132, %1059 ]\l  %1138 = phi i32 [ %1058, %1040 ], [ %1121, %1059 ]\l  %1139 = fmul double %1137, %1137\l  %1140 = fmul double %1139, 5.000000e-01\l  %1141 = fsub double 1.000000e+00, %1140\l  %1142 = fsub double 1.000000e+00, %1141\l  %1143 = fsub double %1142, %1140\l  %1144 = fmul double %1139, %1139\l  %1145 = tail call double @llvm.fma.f64(double %1139, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %1146 = tail call double @llvm.fma.f64(double %1139, double %1145, double\l... 0xBE927E4FA17F65F6)\l  %1147 = tail call double @llvm.fma.f64(double %1139, double %1146, double\l... 0x3EFA01A019F4EC90)\l  %1148 = tail call double @llvm.fma.f64(double %1139, double %1147, double\l... 0xBF56C16C16C16967)\l  %1149 = tail call double @llvm.fma.f64(double %1139, double %1148, double\l... 0x3FA5555555555555)\l  %1150 = fneg double %1136\l  %1151 = tail call double @llvm.fma.f64(double %1137, double %1150, double\l... %1143)\l  %1152 = tail call double @llvm.fma.f64(double %1144, double %1149, double\l... %1151)\l  %1153 = fadd double %1141, %1152\l  %1154 = tail call double @llvm.fma.f64(double %1139, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %1155 = tail call double @llvm.fma.f64(double %1139, double %1154, double\l... 0x3EC71DE3796CDE01)\l  %1156 = tail call double @llvm.fma.f64(double %1139, double %1155, double\l... 0xBF2A01A019E83E5C)\l  %1157 = tail call double @llvm.fma.f64(double %1139, double %1156, double\l... 0x3F81111111110BB3)\l  %1158 = fneg double %1139\l  %1159 = fmul double %1137, %1158\l  %1160 = fmul double %1136, 5.000000e-01\l  %1161 = tail call double @llvm.fma.f64(double %1159, double %1157, double\l... %1160)\l  %1162 = tail call double @llvm.fma.f64(double %1139, double %1161, double\l... %1150)\l  %1163 = tail call double @llvm.fma.f64(double %1159, double\l... 0xBFC5555555555555, double %1162)\l  %1164 = fsub double %1137, %1163\l  %1165 = fneg double %1164\l  %1166 = and i32 %1138, 1\l  %1167 = icmp eq i32 %1166, 0\l  %1168 = select i1 %1167, double %1153, double %1165\l  %1169 = bitcast double %1168 to \<2 x i32\>\l  %1170 = shl i32 %1138, 30\l  %1171 = and i32 %1170, -2147483648\l  %1172 = extractelement \<2 x i32\> %1169, i64 1\l  %1173 = xor i32 %1172, %1171\l  %1174 = insertelement \<2 x i32\> %1169, i32 %1173, i64 1\l  %1175 = select i1 %893, \<2 x i32\> %1174, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %1176 = bitcast \<2 x i32\> %1175 to double\l  %1177 = fmul contract double %175, %1176\l  %1178 = fmul contract double %27, %1039\l  %1179 = fsub contract double %1177, %1178\l  %1180 = fpext float %606 to double\l  %1181 = fadd contract double %1179, %1180\l  %1182 = fptrunc double %1181 to float\l  %1183 = add nuw nsw i32 %21, 1\l  %1184 = icmp eq i32 %1183, 8192\l  br i1 %1184, label %16, label %20, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x56ddb30:s0 -> Node0x56dcec0;
	Node0x56ddb30:s1 -> Node0x56dcdc0;
}
