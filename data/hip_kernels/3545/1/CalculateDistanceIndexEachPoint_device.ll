; ModuleID = '../data/hip_kernels/3545/1/main.cu'
source_filename = "../data/hip_kernels/3545/1/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind willreturn
define protected amdgpu_kernel void @_Z31CalculateDistanceIndexEachPointdddPdS_S_PiS_i(double %0, double %1, double %2, double addrspace(1)* nocapture readonly %3, double addrspace(1)* nocapture readonly %4, double addrspace(1)* nocapture readonly %5, i32 addrspace(1)* nocapture writeonly %6, double addrspace(1)* nocapture writeonly %7, i32 %8) local_unnamed_addr #0 {
  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()
  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4
  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*
  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5
  %14 = zext i16 %13 to i32
  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %16 = mul i32 %15, %14
  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6
  %18 = add i32 %16, %17
  %19 = icmp slt i32 %18, %8
  br i1 %19, label %20, label %552

20:                                               ; preds = %9
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds double, double addrspace(1)* %3, i64 %21
  %23 = load double, double addrspace(1)* %22, align 8, !tbaa !7, !amdgpu.noclobber !5
  %24 = fsub contract double %23, %0
  %25 = tail call double @llvm.fabs.f64(double %24)
  %26 = tail call double @llvm.amdgcn.frexp.mant.f64(double %25)
  %27 = fcmp olt double %26, 0x3FE5555555555555
  %28 = zext i1 %27 to i32
  %29 = tail call double @llvm.amdgcn.ldexp.f64(double %26, i32 %28)
  %30 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %25)
  %31 = sub nsw i32 %30, %28
  %32 = fadd double %29, -1.000000e+00
  %33 = fadd double %29, 1.000000e+00
  %34 = fadd double %33, -1.000000e+00
  %35 = fsub double %29, %34
  %36 = tail call double @llvm.amdgcn.rcp.f64(double %33)
  %37 = fneg double %33
  %38 = tail call double @llvm.fma.f64(double %37, double %36, double 1.000000e+00)
  %39 = tail call double @llvm.fma.f64(double %38, double %36, double %36)
  %40 = tail call double @llvm.fma.f64(double %37, double %39, double 1.000000e+00)
  %41 = tail call double @llvm.fma.f64(double %40, double %39, double %39)
  %42 = fmul double %32, %41
  %43 = fmul double %33, %42
  %44 = fneg double %43
  %45 = tail call double @llvm.fma.f64(double %42, double %33, double %44)
  %46 = tail call double @llvm.fma.f64(double %42, double %35, double %45)
  %47 = fadd double %43, %46
  %48 = fsub double %47, %43
  %49 = fsub double %46, %48
  %50 = fsub double %32, %47
  %51 = fsub double %32, %50
  %52 = fsub double %51, %47
  %53 = fsub double %52, %49
  %54 = fadd double %50, %53
  %55 = fmul double %41, %54
  %56 = fadd double %42, %55
  %57 = fsub double %56, %42
  %58 = fsub double %55, %57
  %59 = fmul double %56, %56
  %60 = fneg double %59
  %61 = tail call double @llvm.fma.f64(double %56, double %56, double %60)
  %62 = fmul double %58, 2.000000e+00
  %63 = tail call double @llvm.fma.f64(double %56, double %62, double %61)
  %64 = fadd double %59, %63
  %65 = fsub double %64, %59
  %66 = fsub double %63, %65
  %67 = tail call double @llvm.fma.f64(double %64, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %68 = tail call double @llvm.fma.f64(double %64, double %67, double 0x3FBE25E43ABE935A)
  %69 = tail call double @llvm.fma.f64(double %64, double %68, double 0x3FC110EF47E6C9C2)
  %70 = tail call double @llvm.fma.f64(double %64, double %69, double 0x3FC3B13BCFA74449)
  %71 = tail call double @llvm.fma.f64(double %64, double %70, double 0x3FC745D171BF3C30)
  %72 = tail call double @llvm.fma.f64(double %64, double %71, double 0x3FCC71C71C7792CE)
  %73 = tail call double @llvm.fma.f64(double %64, double %72, double 0x3FD24924924920DA)
  %74 = tail call double @llvm.fma.f64(double %64, double %73, double 0x3FD999999999999C)
  %75 = sitofp i32 %31 to double
  %76 = fmul double %75, 0x3FE62E42FEFA39EF
  %77 = fneg double %76
  %78 = tail call double @llvm.fma.f64(double %75, double 0x3FE62E42FEFA39EF, double %77)
  %79 = tail call double @llvm.fma.f64(double %75, double 0x3C7ABC9E3B39803F, double %78)
  %80 = fadd double %76, %79
  %81 = fsub double %80, %76
  %82 = fsub double %79, %81
  %83 = tail call double @llvm.amdgcn.ldexp.f64(double %56, i32 1)
  %84 = tail call double @llvm.amdgcn.ldexp.f64(double %58, i32 1)
  %85 = fmul double %56, %64
  %86 = fneg double %85
  %87 = tail call double @llvm.fma.f64(double %64, double %56, double %86)
  %88 = tail call double @llvm.fma.f64(double %64, double %58, double %87)
  %89 = tail call double @llvm.fma.f64(double %66, double %56, double %88)
  %90 = fadd double %85, %89
  %91 = fsub double %90, %85
  %92 = fsub double %89, %91
  %93 = fmul double %64, %74
  %94 = fneg double %93
  %95 = tail call double @llvm.fma.f64(double %64, double %74, double %94)
  %96 = tail call double @llvm.fma.f64(double %66, double %74, double %95)
  %97 = fadd double %93, %96
  %98 = fsub double %97, %93
  %99 = fsub double %96, %98
  %100 = fadd double %97, 0x3FE5555555555555
  %101 = fadd double %100, 0xBFE5555555555555
  %102 = fsub double %97, %101
  %103 = fadd double %99, 0x3C8543B0D5DF274D
  %104 = fadd double %103, %102
  %105 = fadd double %100, %104
  %106 = fsub double %105, %100
  %107 = fsub double %104, %106
  %108 = fmul double %90, %105
  %109 = fneg double %108
  %110 = tail call double @llvm.fma.f64(double %90, double %105, double %109)
  %111 = tail call double @llvm.fma.f64(double %90, double %107, double %110)
  %112 = tail call double @llvm.fma.f64(double %92, double %105, double %111)
  %113 = fadd double %108, %112
  %114 = fsub double %113, %108
  %115 = fsub double %112, %114
  %116 = fadd double %83, %113
  %117 = fsub double %116, %83
  %118 = fsub double %113, %117
  %119 = fadd double %84, %115
  %120 = fadd double %119, %118
  %121 = fadd double %116, %120
  %122 = fsub double %121, %116
  %123 = fsub double %120, %122
  %124 = fadd double %80, %121
  %125 = fsub double %124, %80
  %126 = fsub double %124, %125
  %127 = fsub double %80, %126
  %128 = fsub double %121, %125
  %129 = fadd double %128, %127
  %130 = fadd double %82, %123
  %131 = fsub double %130, %82
  %132 = fsub double %130, %131
  %133 = fsub double %82, %132
  %134 = fsub double %123, %131
  %135 = fadd double %134, %133
  %136 = fadd double %130, %129
  %137 = fadd double %124, %136
  %138 = fsub double %137, %124
  %139 = fsub double %136, %138
  %140 = fadd double %135, %139
  %141 = fadd double %137, %140
  %142 = fsub double %141, %137
  %143 = fsub double %140, %142
  %144 = fmul double %141, 2.000000e+00
  %145 = fneg double %144
  %146 = tail call double @llvm.fma.f64(double %141, double 2.000000e+00, double %145)
  %147 = tail call double @llvm.fma.f64(double %143, double 2.000000e+00, double %146)
  %148 = fadd double %144, %147
  %149 = fsub double %148, %144
  %150 = fsub double %147, %149
  %151 = tail call double @llvm.fabs.f64(double %144) #3
  %152 = fcmp oeq double %151, 0x7FF0000000000000
  %153 = select i1 %152, double %144, double %148
  %154 = tail call double @llvm.fabs.f64(double %153) #3
  %155 = fcmp oeq double %154, 0x7FF0000000000000
  %156 = select i1 %155, double 0.000000e+00, double %150
  %157 = fmul double %153, 0x3FF71547652B82FE
  %158 = tail call double @llvm.rint.f64(double %157)
  %159 = fneg double %158
  %160 = tail call double @llvm.fma.f64(double %159, double 0x3FE62E42FEFA39EF, double %153)
  %161 = tail call double @llvm.fma.f64(double %159, double 0x3C7ABC9E3B39803F, double %160)
  %162 = tail call double @llvm.fma.f64(double %161, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %163 = tail call double @llvm.fma.f64(double %161, double %162, double 0x3EC71DEE623FDE64)
  %164 = tail call double @llvm.fma.f64(double %161, double %163, double 0x3EFA01997C89E6B0)
  %165 = tail call double @llvm.fma.f64(double %161, double %164, double 0x3F2A01A014761F6E)
  %166 = tail call double @llvm.fma.f64(double %161, double %165, double 0x3F56C16C1852B7B0)
  %167 = tail call double @llvm.fma.f64(double %161, double %166, double 0x3F81111111122322)
  %168 = tail call double @llvm.fma.f64(double %161, double %167, double 0x3FA55555555502A1)
  %169 = tail call double @llvm.fma.f64(double %161, double %168, double 0x3FC5555555555511)
  %170 = tail call double @llvm.fma.f64(double %161, double %169, double 0x3FE000000000000B)
  %171 = tail call double @llvm.fma.f64(double %161, double %170, double 1.000000e+00)
  %172 = tail call double @llvm.fma.f64(double %161, double %171, double 1.000000e+00)
  %173 = fptosi double %158 to i32
  %174 = tail call double @llvm.amdgcn.ldexp.f64(double %172, i32 %173)
  %175 = fcmp ogt double %153, 1.024000e+03
  %176 = select i1 %175, double 0x7FF0000000000000, double %174
  %177 = fcmp olt double %153, -1.075000e+03
  %178 = select i1 %177, double 0.000000e+00, double %176
  %179 = tail call double @llvm.fma.f64(double %178, double %156, double %178)
  %180 = tail call double @llvm.fabs.f64(double %178) #3
  %181 = fcmp oeq double %180, 0x7FF0000000000000
  %182 = select i1 %181, double %178, double %179
  %183 = tail call double @llvm.fabs.f64(double %182)
  %184 = fcmp oeq double %25, 0x7FF0000000000000
  %185 = fcmp oeq double %24, 0.000000e+00
  %186 = select i1 %184, double 0x7FF0000000000000, double %183
  %187 = select i1 %185, double 0.000000e+00, double %186
  %188 = fcmp uno double %24, 0.000000e+00
  %189 = select i1 %188, double 0x7FF8000000000000, double %187
  %190 = getelementptr inbounds double, double addrspace(1)* %4, i64 %21
  %191 = load double, double addrspace(1)* %190, align 8, !tbaa !7, !amdgpu.noclobber !5
  %192 = fsub contract double %191, %1
  %193 = tail call double @llvm.fabs.f64(double %192)
  %194 = tail call double @llvm.amdgcn.frexp.mant.f64(double %193)
  %195 = fcmp olt double %194, 0x3FE5555555555555
  %196 = zext i1 %195 to i32
  %197 = tail call double @llvm.amdgcn.ldexp.f64(double %194, i32 %196)
  %198 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %193)
  %199 = sub nsw i32 %198, %196
  %200 = fadd double %197, -1.000000e+00
  %201 = fadd double %197, 1.000000e+00
  %202 = fadd double %201, -1.000000e+00
  %203 = fsub double %197, %202
  %204 = tail call double @llvm.amdgcn.rcp.f64(double %201)
  %205 = fneg double %201
  %206 = tail call double @llvm.fma.f64(double %205, double %204, double 1.000000e+00)
  %207 = tail call double @llvm.fma.f64(double %206, double %204, double %204)
  %208 = tail call double @llvm.fma.f64(double %205, double %207, double 1.000000e+00)
  %209 = tail call double @llvm.fma.f64(double %208, double %207, double %207)
  %210 = fmul double %200, %209
  %211 = fmul double %201, %210
  %212 = fneg double %211
  %213 = tail call double @llvm.fma.f64(double %210, double %201, double %212)
  %214 = tail call double @llvm.fma.f64(double %210, double %203, double %213)
  %215 = fadd double %211, %214
  %216 = fsub double %215, %211
  %217 = fsub double %214, %216
  %218 = fsub double %200, %215
  %219 = fsub double %200, %218
  %220 = fsub double %219, %215
  %221 = fsub double %220, %217
  %222 = fadd double %218, %221
  %223 = fmul double %209, %222
  %224 = fadd double %210, %223
  %225 = fsub double %224, %210
  %226 = fsub double %223, %225
  %227 = fmul double %224, %224
  %228 = fneg double %227
  %229 = tail call double @llvm.fma.f64(double %224, double %224, double %228)
  %230 = fmul double %226, 2.000000e+00
  %231 = tail call double @llvm.fma.f64(double %224, double %230, double %229)
  %232 = fadd double %227, %231
  %233 = fsub double %232, %227
  %234 = fsub double %231, %233
  %235 = tail call double @llvm.fma.f64(double %232, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %236 = tail call double @llvm.fma.f64(double %232, double %235, double 0x3FBE25E43ABE935A)
  %237 = tail call double @llvm.fma.f64(double %232, double %236, double 0x3FC110EF47E6C9C2)
  %238 = tail call double @llvm.fma.f64(double %232, double %237, double 0x3FC3B13BCFA74449)
  %239 = tail call double @llvm.fma.f64(double %232, double %238, double 0x3FC745D171BF3C30)
  %240 = tail call double @llvm.fma.f64(double %232, double %239, double 0x3FCC71C71C7792CE)
  %241 = tail call double @llvm.fma.f64(double %232, double %240, double 0x3FD24924924920DA)
  %242 = tail call double @llvm.fma.f64(double %232, double %241, double 0x3FD999999999999C)
  %243 = sitofp i32 %199 to double
  %244 = fmul double %243, 0x3FE62E42FEFA39EF
  %245 = fneg double %244
  %246 = tail call double @llvm.fma.f64(double %243, double 0x3FE62E42FEFA39EF, double %245)
  %247 = tail call double @llvm.fma.f64(double %243, double 0x3C7ABC9E3B39803F, double %246)
  %248 = fadd double %244, %247
  %249 = fsub double %248, %244
  %250 = fsub double %247, %249
  %251 = tail call double @llvm.amdgcn.ldexp.f64(double %224, i32 1)
  %252 = tail call double @llvm.amdgcn.ldexp.f64(double %226, i32 1)
  %253 = fmul double %224, %232
  %254 = fneg double %253
  %255 = tail call double @llvm.fma.f64(double %232, double %224, double %254)
  %256 = tail call double @llvm.fma.f64(double %232, double %226, double %255)
  %257 = tail call double @llvm.fma.f64(double %234, double %224, double %256)
  %258 = fadd double %253, %257
  %259 = fsub double %258, %253
  %260 = fsub double %257, %259
  %261 = fmul double %232, %242
  %262 = fneg double %261
  %263 = tail call double @llvm.fma.f64(double %232, double %242, double %262)
  %264 = tail call double @llvm.fma.f64(double %234, double %242, double %263)
  %265 = fadd double %261, %264
  %266 = fsub double %265, %261
  %267 = fsub double %264, %266
  %268 = fadd double %265, 0x3FE5555555555555
  %269 = fadd double %268, 0xBFE5555555555555
  %270 = fsub double %265, %269
  %271 = fadd double %267, 0x3C8543B0D5DF274D
  %272 = fadd double %271, %270
  %273 = fadd double %268, %272
  %274 = fsub double %273, %268
  %275 = fsub double %272, %274
  %276 = fmul double %258, %273
  %277 = fneg double %276
  %278 = tail call double @llvm.fma.f64(double %258, double %273, double %277)
  %279 = tail call double @llvm.fma.f64(double %258, double %275, double %278)
  %280 = tail call double @llvm.fma.f64(double %260, double %273, double %279)
  %281 = fadd double %276, %280
  %282 = fsub double %281, %276
  %283 = fsub double %280, %282
  %284 = fadd double %251, %281
  %285 = fsub double %284, %251
  %286 = fsub double %281, %285
  %287 = fadd double %252, %283
  %288 = fadd double %287, %286
  %289 = fadd double %284, %288
  %290 = fsub double %289, %284
  %291 = fsub double %288, %290
  %292 = fadd double %248, %289
  %293 = fsub double %292, %248
  %294 = fsub double %292, %293
  %295 = fsub double %248, %294
  %296 = fsub double %289, %293
  %297 = fadd double %296, %295
  %298 = fadd double %250, %291
  %299 = fsub double %298, %250
  %300 = fsub double %298, %299
  %301 = fsub double %250, %300
  %302 = fsub double %291, %299
  %303 = fadd double %302, %301
  %304 = fadd double %298, %297
  %305 = fadd double %292, %304
  %306 = fsub double %305, %292
  %307 = fsub double %304, %306
  %308 = fadd double %303, %307
  %309 = fadd double %305, %308
  %310 = fsub double %309, %305
  %311 = fsub double %308, %310
  %312 = fmul double %309, 2.000000e+00
  %313 = fneg double %312
  %314 = tail call double @llvm.fma.f64(double %309, double 2.000000e+00, double %313)
  %315 = tail call double @llvm.fma.f64(double %311, double 2.000000e+00, double %314)
  %316 = fadd double %312, %315
  %317 = fsub double %316, %312
  %318 = fsub double %315, %317
  %319 = tail call double @llvm.fabs.f64(double %312) #3
  %320 = fcmp oeq double %319, 0x7FF0000000000000
  %321 = select i1 %320, double %312, double %316
  %322 = tail call double @llvm.fabs.f64(double %321) #3
  %323 = fcmp oeq double %322, 0x7FF0000000000000
  %324 = select i1 %323, double 0.000000e+00, double %318
  %325 = fmul double %321, 0x3FF71547652B82FE
  %326 = tail call double @llvm.rint.f64(double %325)
  %327 = fneg double %326
  %328 = tail call double @llvm.fma.f64(double %327, double 0x3FE62E42FEFA39EF, double %321)
  %329 = tail call double @llvm.fma.f64(double %327, double 0x3C7ABC9E3B39803F, double %328)
  %330 = tail call double @llvm.fma.f64(double %329, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %331 = tail call double @llvm.fma.f64(double %329, double %330, double 0x3EC71DEE623FDE64)
  %332 = tail call double @llvm.fma.f64(double %329, double %331, double 0x3EFA01997C89E6B0)
  %333 = tail call double @llvm.fma.f64(double %329, double %332, double 0x3F2A01A014761F6E)
  %334 = tail call double @llvm.fma.f64(double %329, double %333, double 0x3F56C16C1852B7B0)
  %335 = tail call double @llvm.fma.f64(double %329, double %334, double 0x3F81111111122322)
  %336 = tail call double @llvm.fma.f64(double %329, double %335, double 0x3FA55555555502A1)
  %337 = tail call double @llvm.fma.f64(double %329, double %336, double 0x3FC5555555555511)
  %338 = tail call double @llvm.fma.f64(double %329, double %337, double 0x3FE000000000000B)
  %339 = tail call double @llvm.fma.f64(double %329, double %338, double 1.000000e+00)
  %340 = tail call double @llvm.fma.f64(double %329, double %339, double 1.000000e+00)
  %341 = fptosi double %326 to i32
  %342 = tail call double @llvm.amdgcn.ldexp.f64(double %340, i32 %341)
  %343 = fcmp ogt double %321, 1.024000e+03
  %344 = select i1 %343, double 0x7FF0000000000000, double %342
  %345 = fcmp olt double %321, -1.075000e+03
  %346 = select i1 %345, double 0.000000e+00, double %344
  %347 = tail call double @llvm.fma.f64(double %346, double %324, double %346)
  %348 = tail call double @llvm.fabs.f64(double %346) #3
  %349 = fcmp oeq double %348, 0x7FF0000000000000
  %350 = select i1 %349, double %346, double %347
  %351 = tail call double @llvm.fabs.f64(double %350)
  %352 = fcmp oeq double %193, 0x7FF0000000000000
  %353 = fcmp oeq double %192, 0.000000e+00
  %354 = select i1 %352, double 0x7FF0000000000000, double %351
  %355 = select i1 %353, double 0.000000e+00, double %354
  %356 = fcmp uno double %192, 0.000000e+00
  %357 = select i1 %356, double 0x7FF8000000000000, double %355
  %358 = fadd contract double %189, %357
  %359 = getelementptr inbounds double, double addrspace(1)* %5, i64 %21
  %360 = load double, double addrspace(1)* %359, align 8, !tbaa !7, !amdgpu.noclobber !5
  %361 = fsub contract double %360, %2
  %362 = tail call double @llvm.fabs.f64(double %361)
  %363 = tail call double @llvm.amdgcn.frexp.mant.f64(double %362)
  %364 = fcmp olt double %363, 0x3FE5555555555555
  %365 = zext i1 %364 to i32
  %366 = tail call double @llvm.amdgcn.ldexp.f64(double %363, i32 %365)
  %367 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %362)
  %368 = sub nsw i32 %367, %365
  %369 = fadd double %366, -1.000000e+00
  %370 = fadd double %366, 1.000000e+00
  %371 = fadd double %370, -1.000000e+00
  %372 = fsub double %366, %371
  %373 = tail call double @llvm.amdgcn.rcp.f64(double %370)
  %374 = fneg double %370
  %375 = tail call double @llvm.fma.f64(double %374, double %373, double 1.000000e+00)
  %376 = tail call double @llvm.fma.f64(double %375, double %373, double %373)
  %377 = tail call double @llvm.fma.f64(double %374, double %376, double 1.000000e+00)
  %378 = tail call double @llvm.fma.f64(double %377, double %376, double %376)
  %379 = fmul double %369, %378
  %380 = fmul double %370, %379
  %381 = fneg double %380
  %382 = tail call double @llvm.fma.f64(double %379, double %370, double %381)
  %383 = tail call double @llvm.fma.f64(double %379, double %372, double %382)
  %384 = fadd double %380, %383
  %385 = fsub double %384, %380
  %386 = fsub double %383, %385
  %387 = fsub double %369, %384
  %388 = fsub double %369, %387
  %389 = fsub double %388, %384
  %390 = fsub double %389, %386
  %391 = fadd double %387, %390
  %392 = fmul double %378, %391
  %393 = fadd double %379, %392
  %394 = fsub double %393, %379
  %395 = fsub double %392, %394
  %396 = fmul double %393, %393
  %397 = fneg double %396
  %398 = tail call double @llvm.fma.f64(double %393, double %393, double %397)
  %399 = fmul double %395, 2.000000e+00
  %400 = tail call double @llvm.fma.f64(double %393, double %399, double %398)
  %401 = fadd double %396, %400
  %402 = fsub double %401, %396
  %403 = fsub double %400, %402
  %404 = tail call double @llvm.fma.f64(double %401, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %405 = tail call double @llvm.fma.f64(double %401, double %404, double 0x3FBE25E43ABE935A)
  %406 = tail call double @llvm.fma.f64(double %401, double %405, double 0x3FC110EF47E6C9C2)
  %407 = tail call double @llvm.fma.f64(double %401, double %406, double 0x3FC3B13BCFA74449)
  %408 = tail call double @llvm.fma.f64(double %401, double %407, double 0x3FC745D171BF3C30)
  %409 = tail call double @llvm.fma.f64(double %401, double %408, double 0x3FCC71C71C7792CE)
  %410 = tail call double @llvm.fma.f64(double %401, double %409, double 0x3FD24924924920DA)
  %411 = tail call double @llvm.fma.f64(double %401, double %410, double 0x3FD999999999999C)
  %412 = sitofp i32 %368 to double
  %413 = fmul double %412, 0x3FE62E42FEFA39EF
  %414 = fneg double %413
  %415 = tail call double @llvm.fma.f64(double %412, double 0x3FE62E42FEFA39EF, double %414)
  %416 = tail call double @llvm.fma.f64(double %412, double 0x3C7ABC9E3B39803F, double %415)
  %417 = fadd double %413, %416
  %418 = fsub double %417, %413
  %419 = fsub double %416, %418
  %420 = tail call double @llvm.amdgcn.ldexp.f64(double %393, i32 1)
  %421 = tail call double @llvm.amdgcn.ldexp.f64(double %395, i32 1)
  %422 = fmul double %393, %401
  %423 = fneg double %422
  %424 = tail call double @llvm.fma.f64(double %401, double %393, double %423)
  %425 = tail call double @llvm.fma.f64(double %401, double %395, double %424)
  %426 = tail call double @llvm.fma.f64(double %403, double %393, double %425)
  %427 = fadd double %422, %426
  %428 = fsub double %427, %422
  %429 = fsub double %426, %428
  %430 = fmul double %401, %411
  %431 = fneg double %430
  %432 = tail call double @llvm.fma.f64(double %401, double %411, double %431)
  %433 = tail call double @llvm.fma.f64(double %403, double %411, double %432)
  %434 = fadd double %430, %433
  %435 = fsub double %434, %430
  %436 = fsub double %433, %435
  %437 = fadd double %434, 0x3FE5555555555555
  %438 = fadd double %437, 0xBFE5555555555555
  %439 = fsub double %434, %438
  %440 = fadd double %436, 0x3C8543B0D5DF274D
  %441 = fadd double %440, %439
  %442 = fadd double %437, %441
  %443 = fsub double %442, %437
  %444 = fsub double %441, %443
  %445 = fmul double %427, %442
  %446 = fneg double %445
  %447 = tail call double @llvm.fma.f64(double %427, double %442, double %446)
  %448 = tail call double @llvm.fma.f64(double %427, double %444, double %447)
  %449 = tail call double @llvm.fma.f64(double %429, double %442, double %448)
  %450 = fadd double %445, %449
  %451 = fsub double %450, %445
  %452 = fsub double %449, %451
  %453 = fadd double %420, %450
  %454 = fsub double %453, %420
  %455 = fsub double %450, %454
  %456 = fadd double %421, %452
  %457 = fadd double %456, %455
  %458 = fadd double %453, %457
  %459 = fsub double %458, %453
  %460 = fsub double %457, %459
  %461 = fadd double %417, %458
  %462 = fsub double %461, %417
  %463 = fsub double %461, %462
  %464 = fsub double %417, %463
  %465 = fsub double %458, %462
  %466 = fadd double %465, %464
  %467 = fadd double %419, %460
  %468 = fsub double %467, %419
  %469 = fsub double %467, %468
  %470 = fsub double %419, %469
  %471 = fsub double %460, %468
  %472 = fadd double %471, %470
  %473 = fadd double %467, %466
  %474 = fadd double %461, %473
  %475 = fsub double %474, %461
  %476 = fsub double %473, %475
  %477 = fadd double %472, %476
  %478 = fadd double %474, %477
  %479 = fsub double %478, %474
  %480 = fsub double %477, %479
  %481 = fmul double %478, 2.000000e+00
  %482 = fneg double %481
  %483 = tail call double @llvm.fma.f64(double %478, double 2.000000e+00, double %482)
  %484 = tail call double @llvm.fma.f64(double %480, double 2.000000e+00, double %483)
  %485 = fadd double %481, %484
  %486 = fsub double %485, %481
  %487 = fsub double %484, %486
  %488 = tail call double @llvm.fabs.f64(double %481) #3
  %489 = fcmp oeq double %488, 0x7FF0000000000000
  %490 = select i1 %489, double %481, double %485
  %491 = tail call double @llvm.fabs.f64(double %490) #3
  %492 = fcmp oeq double %491, 0x7FF0000000000000
  %493 = select i1 %492, double 0.000000e+00, double %487
  %494 = fmul double %490, 0x3FF71547652B82FE
  %495 = tail call double @llvm.rint.f64(double %494)
  %496 = fneg double %495
  %497 = tail call double @llvm.fma.f64(double %496, double 0x3FE62E42FEFA39EF, double %490)
  %498 = tail call double @llvm.fma.f64(double %496, double 0x3C7ABC9E3B39803F, double %497)
  %499 = tail call double @llvm.fma.f64(double %498, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %500 = tail call double @llvm.fma.f64(double %498, double %499, double 0x3EC71DEE623FDE64)
  %501 = tail call double @llvm.fma.f64(double %498, double %500, double 0x3EFA01997C89E6B0)
  %502 = tail call double @llvm.fma.f64(double %498, double %501, double 0x3F2A01A014761F6E)
  %503 = tail call double @llvm.fma.f64(double %498, double %502, double 0x3F56C16C1852B7B0)
  %504 = tail call double @llvm.fma.f64(double %498, double %503, double 0x3F81111111122322)
  %505 = tail call double @llvm.fma.f64(double %498, double %504, double 0x3FA55555555502A1)
  %506 = tail call double @llvm.fma.f64(double %498, double %505, double 0x3FC5555555555511)
  %507 = tail call double @llvm.fma.f64(double %498, double %506, double 0x3FE000000000000B)
  %508 = tail call double @llvm.fma.f64(double %498, double %507, double 1.000000e+00)
  %509 = tail call double @llvm.fma.f64(double %498, double %508, double 1.000000e+00)
  %510 = fptosi double %495 to i32
  %511 = tail call double @llvm.amdgcn.ldexp.f64(double %509, i32 %510)
  %512 = fcmp ogt double %490, 1.024000e+03
  %513 = select i1 %512, double 0x7FF0000000000000, double %511
  %514 = fcmp olt double %490, -1.075000e+03
  %515 = select i1 %514, double 0.000000e+00, double %513
  %516 = tail call double @llvm.fma.f64(double %515, double %493, double %515)
  %517 = tail call double @llvm.fabs.f64(double %515) #3
  %518 = fcmp oeq double %517, 0x7FF0000000000000
  %519 = select i1 %518, double %515, double %516
  %520 = tail call double @llvm.fabs.f64(double %519)
  %521 = fcmp oeq double %362, 0x7FF0000000000000
  %522 = fcmp oeq double %361, 0.000000e+00
  %523 = select i1 %521, double 0x7FF0000000000000, double %520
  %524 = select i1 %522, double 0.000000e+00, double %523
  %525 = fcmp uno double %361, 0.000000e+00
  %526 = select i1 %525, double 0x7FF8000000000000, double %524
  %527 = fadd contract double %358, %526
  %528 = fcmp olt double %527, 0x1000000000000000
  %529 = select i1 %528, double 0x4FF0000000000000, double 1.000000e+00
  %530 = fmul double %527, %529
  %531 = tail call double @llvm.amdgcn.rsq.f64(double %530)
  %532 = fmul double %530, %531
  %533 = fmul double %531, 5.000000e-01
  %534 = fneg double %533
  %535 = tail call double @llvm.fma.f64(double %534, double %532, double 5.000000e-01)
  %536 = tail call double @llvm.fma.f64(double %533, double %535, double %533)
  %537 = tail call double @llvm.fma.f64(double %532, double %535, double %532)
  %538 = fneg double %537
  %539 = tail call double @llvm.fma.f64(double %538, double %537, double %530)
  %540 = tail call double @llvm.fma.f64(double %539, double %536, double %537)
  %541 = fneg double %540
  %542 = tail call double @llvm.fma.f64(double %541, double %540, double %530)
  %543 = tail call double @llvm.fma.f64(double %542, double %536, double %540)
  %544 = select i1 %528, double 0x37F0000000000000, double 1.000000e+00
  %545 = fmul double %544, %543
  %546 = fcmp oeq double %530, 0.000000e+00
  %547 = fcmp oeq double %530, 0x7FF0000000000000
  %548 = or i1 %546, %547
  %549 = select i1 %548, double %530, double %545
  %550 = getelementptr inbounds double, double addrspace(1)* %7, i64 %21
  store double %549, double addrspace(1)* %550, align 8, !tbaa !7
  %551 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %21
  store i32 %18, i32 addrspace(1)* %551, align 4, !tbaa !11
  br label %552

552:                                              ; preds = %20, %9
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fma.f64(double, double, double) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.rint.f64(double) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.ldexp.f64(double, i32) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.frexp.mant.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.frexp.exp.i32.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.rcp.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.rsq.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #2

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind willreturn "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="128" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{i16 1, i16 1025}
!5 = !{}
!6 = !{i32 0, i32 1024}
!7 = !{!8, !8, i64 0}
!8 = !{!"double", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C++ TBAA"}
!11 = !{!12, !12, i64 0}
!12 = !{!"int", !9, i64 0}
