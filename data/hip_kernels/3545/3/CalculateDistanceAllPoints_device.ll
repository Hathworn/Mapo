; ModuleID = '../data/hip_kernels/3545/3/main.cu'
source_filename = "../data/hip_kernels/3545/3/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind willreturn
define protected amdgpu_kernel void @_Z26CalculateDistanceAllPointsPdS_S_S_S_S_PiS_i(double addrspace(1)* nocapture readonly %0, double addrspace(1)* nocapture readonly %1, double addrspace(1)* nocapture readonly %2, double addrspace(1)* nocapture readonly %3, double addrspace(1)* nocapture readonly %4, double addrspace(1)* nocapture readonly %5, i32 addrspace(1)* nocapture readonly %6, double addrspace(1)* nocapture writeonly %7, i32 %8) local_unnamed_addr #0 {
  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()
  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4
  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*
  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5
  %15 = zext i16 %14 to i32
  %16 = mul i32 %10, %15
  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6
  %18 = add i32 %16, %17
  %19 = icmp slt i32 %18, %8
  br i1 %19, label %20, label %560

20:                                               ; preds = %9
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %21
  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !7, !amdgpu.noclobber !5
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds double, double addrspace(1)* %0, i64 %24
  %26 = load double, double addrspace(1)* %25, align 8, !tbaa !11, !amdgpu.noclobber !5
  %27 = getelementptr inbounds double, double addrspace(1)* %3, i64 %21
  %28 = load double, double addrspace(1)* %27, align 8, !tbaa !11, !amdgpu.noclobber !5
  %29 = fsub contract double %26, %28
  %30 = tail call double @llvm.fabs.f64(double %29)
  %31 = tail call double @llvm.amdgcn.frexp.mant.f64(double %30)
  %32 = fcmp olt double %31, 0x3FE5555555555555
  %33 = zext i1 %32 to i32
  %34 = tail call double @llvm.amdgcn.ldexp.f64(double %31, i32 %33)
  %35 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %30)
  %36 = sub nsw i32 %35, %33
  %37 = fadd double %34, -1.000000e+00
  %38 = fadd double %34, 1.000000e+00
  %39 = fadd double %38, -1.000000e+00
  %40 = fsub double %34, %39
  %41 = tail call double @llvm.amdgcn.rcp.f64(double %38)
  %42 = fneg double %38
  %43 = tail call double @llvm.fma.f64(double %42, double %41, double 1.000000e+00)
  %44 = tail call double @llvm.fma.f64(double %43, double %41, double %41)
  %45 = tail call double @llvm.fma.f64(double %42, double %44, double 1.000000e+00)
  %46 = tail call double @llvm.fma.f64(double %45, double %44, double %44)
  %47 = fmul double %37, %46
  %48 = fmul double %38, %47
  %49 = fneg double %48
  %50 = tail call double @llvm.fma.f64(double %47, double %38, double %49)
  %51 = tail call double @llvm.fma.f64(double %47, double %40, double %50)
  %52 = fadd double %48, %51
  %53 = fsub double %52, %48
  %54 = fsub double %51, %53
  %55 = fsub double %37, %52
  %56 = fsub double %37, %55
  %57 = fsub double %56, %52
  %58 = fsub double %57, %54
  %59 = fadd double %55, %58
  %60 = fmul double %46, %59
  %61 = fadd double %47, %60
  %62 = fsub double %61, %47
  %63 = fsub double %60, %62
  %64 = fmul double %61, %61
  %65 = fneg double %64
  %66 = tail call double @llvm.fma.f64(double %61, double %61, double %65)
  %67 = fmul double %63, 2.000000e+00
  %68 = tail call double @llvm.fma.f64(double %61, double %67, double %66)
  %69 = fadd double %64, %68
  %70 = fsub double %69, %64
  %71 = fsub double %68, %70
  %72 = tail call double @llvm.fma.f64(double %69, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %73 = tail call double @llvm.fma.f64(double %69, double %72, double 0x3FBE25E43ABE935A)
  %74 = tail call double @llvm.fma.f64(double %69, double %73, double 0x3FC110EF47E6C9C2)
  %75 = tail call double @llvm.fma.f64(double %69, double %74, double 0x3FC3B13BCFA74449)
  %76 = tail call double @llvm.fma.f64(double %69, double %75, double 0x3FC745D171BF3C30)
  %77 = tail call double @llvm.fma.f64(double %69, double %76, double 0x3FCC71C71C7792CE)
  %78 = tail call double @llvm.fma.f64(double %69, double %77, double 0x3FD24924924920DA)
  %79 = tail call double @llvm.fma.f64(double %69, double %78, double 0x3FD999999999999C)
  %80 = sitofp i32 %36 to double
  %81 = fmul double %80, 0x3FE62E42FEFA39EF
  %82 = fneg double %81
  %83 = tail call double @llvm.fma.f64(double %80, double 0x3FE62E42FEFA39EF, double %82)
  %84 = tail call double @llvm.fma.f64(double %80, double 0x3C7ABC9E3B39803F, double %83)
  %85 = fadd double %81, %84
  %86 = fsub double %85, %81
  %87 = fsub double %84, %86
  %88 = tail call double @llvm.amdgcn.ldexp.f64(double %61, i32 1)
  %89 = tail call double @llvm.amdgcn.ldexp.f64(double %63, i32 1)
  %90 = fmul double %61, %69
  %91 = fneg double %90
  %92 = tail call double @llvm.fma.f64(double %69, double %61, double %91)
  %93 = tail call double @llvm.fma.f64(double %69, double %63, double %92)
  %94 = tail call double @llvm.fma.f64(double %71, double %61, double %93)
  %95 = fadd double %90, %94
  %96 = fsub double %95, %90
  %97 = fsub double %94, %96
  %98 = fmul double %69, %79
  %99 = fneg double %98
  %100 = tail call double @llvm.fma.f64(double %69, double %79, double %99)
  %101 = tail call double @llvm.fma.f64(double %71, double %79, double %100)
  %102 = fadd double %98, %101
  %103 = fsub double %102, %98
  %104 = fsub double %101, %103
  %105 = fadd double %102, 0x3FE5555555555555
  %106 = fadd double %105, 0xBFE5555555555555
  %107 = fsub double %102, %106
  %108 = fadd double %104, 0x3C8543B0D5DF274D
  %109 = fadd double %108, %107
  %110 = fadd double %105, %109
  %111 = fsub double %110, %105
  %112 = fsub double %109, %111
  %113 = fmul double %95, %110
  %114 = fneg double %113
  %115 = tail call double @llvm.fma.f64(double %95, double %110, double %114)
  %116 = tail call double @llvm.fma.f64(double %95, double %112, double %115)
  %117 = tail call double @llvm.fma.f64(double %97, double %110, double %116)
  %118 = fadd double %113, %117
  %119 = fsub double %118, %113
  %120 = fsub double %117, %119
  %121 = fadd double %88, %118
  %122 = fsub double %121, %88
  %123 = fsub double %118, %122
  %124 = fadd double %89, %120
  %125 = fadd double %124, %123
  %126 = fadd double %121, %125
  %127 = fsub double %126, %121
  %128 = fsub double %125, %127
  %129 = fadd double %85, %126
  %130 = fsub double %129, %85
  %131 = fsub double %129, %130
  %132 = fsub double %85, %131
  %133 = fsub double %126, %130
  %134 = fadd double %133, %132
  %135 = fadd double %87, %128
  %136 = fsub double %135, %87
  %137 = fsub double %135, %136
  %138 = fsub double %87, %137
  %139 = fsub double %128, %136
  %140 = fadd double %139, %138
  %141 = fadd double %135, %134
  %142 = fadd double %129, %141
  %143 = fsub double %142, %129
  %144 = fsub double %141, %143
  %145 = fadd double %140, %144
  %146 = fadd double %142, %145
  %147 = fsub double %146, %142
  %148 = fsub double %145, %147
  %149 = fmul double %146, 2.000000e+00
  %150 = fneg double %149
  %151 = tail call double @llvm.fma.f64(double %146, double 2.000000e+00, double %150)
  %152 = tail call double @llvm.fma.f64(double %148, double 2.000000e+00, double %151)
  %153 = fadd double %149, %152
  %154 = fsub double %153, %149
  %155 = fsub double %152, %154
  %156 = tail call double @llvm.fabs.f64(double %149) #3
  %157 = fcmp oeq double %156, 0x7FF0000000000000
  %158 = select i1 %157, double %149, double %153
  %159 = tail call double @llvm.fabs.f64(double %158) #3
  %160 = fcmp oeq double %159, 0x7FF0000000000000
  %161 = select i1 %160, double 0.000000e+00, double %155
  %162 = fmul double %158, 0x3FF71547652B82FE
  %163 = tail call double @llvm.rint.f64(double %162)
  %164 = fneg double %163
  %165 = tail call double @llvm.fma.f64(double %164, double 0x3FE62E42FEFA39EF, double %158)
  %166 = tail call double @llvm.fma.f64(double %164, double 0x3C7ABC9E3B39803F, double %165)
  %167 = tail call double @llvm.fma.f64(double %166, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %168 = tail call double @llvm.fma.f64(double %166, double %167, double 0x3EC71DEE623FDE64)
  %169 = tail call double @llvm.fma.f64(double %166, double %168, double 0x3EFA01997C89E6B0)
  %170 = tail call double @llvm.fma.f64(double %166, double %169, double 0x3F2A01A014761F6E)
  %171 = tail call double @llvm.fma.f64(double %166, double %170, double 0x3F56C16C1852B7B0)
  %172 = tail call double @llvm.fma.f64(double %166, double %171, double 0x3F81111111122322)
  %173 = tail call double @llvm.fma.f64(double %166, double %172, double 0x3FA55555555502A1)
  %174 = tail call double @llvm.fma.f64(double %166, double %173, double 0x3FC5555555555511)
  %175 = tail call double @llvm.fma.f64(double %166, double %174, double 0x3FE000000000000B)
  %176 = tail call double @llvm.fma.f64(double %166, double %175, double 1.000000e+00)
  %177 = tail call double @llvm.fma.f64(double %166, double %176, double 1.000000e+00)
  %178 = fptosi double %163 to i32
  %179 = tail call double @llvm.amdgcn.ldexp.f64(double %177, i32 %178)
  %180 = fcmp ogt double %158, 1.024000e+03
  %181 = select i1 %180, double 0x7FF0000000000000, double %179
  %182 = fcmp olt double %158, -1.075000e+03
  %183 = select i1 %182, double 0.000000e+00, double %181
  %184 = tail call double @llvm.fma.f64(double %183, double %161, double %183)
  %185 = tail call double @llvm.fabs.f64(double %183) #3
  %186 = fcmp oeq double %185, 0x7FF0000000000000
  %187 = select i1 %186, double %183, double %184
  %188 = tail call double @llvm.fabs.f64(double %187)
  %189 = fcmp oeq double %30, 0x7FF0000000000000
  %190 = fcmp oeq double %29, 0.000000e+00
  %191 = select i1 %189, double 0x7FF0000000000000, double %188
  %192 = select i1 %190, double 0.000000e+00, double %191
  %193 = fcmp uno double %29, 0.000000e+00
  %194 = select i1 %193, double 0x7FF8000000000000, double %192
  %195 = getelementptr inbounds double, double addrspace(1)* %1, i64 %24
  %196 = load double, double addrspace(1)* %195, align 8, !tbaa !11, !amdgpu.noclobber !5
  %197 = getelementptr inbounds double, double addrspace(1)* %4, i64 %21
  %198 = load double, double addrspace(1)* %197, align 8, !tbaa !11, !amdgpu.noclobber !5
  %199 = fsub contract double %196, %198
  %200 = tail call double @llvm.fabs.f64(double %199)
  %201 = tail call double @llvm.amdgcn.frexp.mant.f64(double %200)
  %202 = fcmp olt double %201, 0x3FE5555555555555
  %203 = zext i1 %202 to i32
  %204 = tail call double @llvm.amdgcn.ldexp.f64(double %201, i32 %203)
  %205 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %200)
  %206 = sub nsw i32 %205, %203
  %207 = fadd double %204, -1.000000e+00
  %208 = fadd double %204, 1.000000e+00
  %209 = fadd double %208, -1.000000e+00
  %210 = fsub double %204, %209
  %211 = tail call double @llvm.amdgcn.rcp.f64(double %208)
  %212 = fneg double %208
  %213 = tail call double @llvm.fma.f64(double %212, double %211, double 1.000000e+00)
  %214 = tail call double @llvm.fma.f64(double %213, double %211, double %211)
  %215 = tail call double @llvm.fma.f64(double %212, double %214, double 1.000000e+00)
  %216 = tail call double @llvm.fma.f64(double %215, double %214, double %214)
  %217 = fmul double %207, %216
  %218 = fmul double %208, %217
  %219 = fneg double %218
  %220 = tail call double @llvm.fma.f64(double %217, double %208, double %219)
  %221 = tail call double @llvm.fma.f64(double %217, double %210, double %220)
  %222 = fadd double %218, %221
  %223 = fsub double %222, %218
  %224 = fsub double %221, %223
  %225 = fsub double %207, %222
  %226 = fsub double %207, %225
  %227 = fsub double %226, %222
  %228 = fsub double %227, %224
  %229 = fadd double %225, %228
  %230 = fmul double %216, %229
  %231 = fadd double %217, %230
  %232 = fsub double %231, %217
  %233 = fsub double %230, %232
  %234 = fmul double %231, %231
  %235 = fneg double %234
  %236 = tail call double @llvm.fma.f64(double %231, double %231, double %235)
  %237 = fmul double %233, 2.000000e+00
  %238 = tail call double @llvm.fma.f64(double %231, double %237, double %236)
  %239 = fadd double %234, %238
  %240 = fsub double %239, %234
  %241 = fsub double %238, %240
  %242 = tail call double @llvm.fma.f64(double %239, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %243 = tail call double @llvm.fma.f64(double %239, double %242, double 0x3FBE25E43ABE935A)
  %244 = tail call double @llvm.fma.f64(double %239, double %243, double 0x3FC110EF47E6C9C2)
  %245 = tail call double @llvm.fma.f64(double %239, double %244, double 0x3FC3B13BCFA74449)
  %246 = tail call double @llvm.fma.f64(double %239, double %245, double 0x3FC745D171BF3C30)
  %247 = tail call double @llvm.fma.f64(double %239, double %246, double 0x3FCC71C71C7792CE)
  %248 = tail call double @llvm.fma.f64(double %239, double %247, double 0x3FD24924924920DA)
  %249 = tail call double @llvm.fma.f64(double %239, double %248, double 0x3FD999999999999C)
  %250 = sitofp i32 %206 to double
  %251 = fmul double %250, 0x3FE62E42FEFA39EF
  %252 = fneg double %251
  %253 = tail call double @llvm.fma.f64(double %250, double 0x3FE62E42FEFA39EF, double %252)
  %254 = tail call double @llvm.fma.f64(double %250, double 0x3C7ABC9E3B39803F, double %253)
  %255 = fadd double %251, %254
  %256 = fsub double %255, %251
  %257 = fsub double %254, %256
  %258 = tail call double @llvm.amdgcn.ldexp.f64(double %231, i32 1)
  %259 = tail call double @llvm.amdgcn.ldexp.f64(double %233, i32 1)
  %260 = fmul double %231, %239
  %261 = fneg double %260
  %262 = tail call double @llvm.fma.f64(double %239, double %231, double %261)
  %263 = tail call double @llvm.fma.f64(double %239, double %233, double %262)
  %264 = tail call double @llvm.fma.f64(double %241, double %231, double %263)
  %265 = fadd double %260, %264
  %266 = fsub double %265, %260
  %267 = fsub double %264, %266
  %268 = fmul double %239, %249
  %269 = fneg double %268
  %270 = tail call double @llvm.fma.f64(double %239, double %249, double %269)
  %271 = tail call double @llvm.fma.f64(double %241, double %249, double %270)
  %272 = fadd double %268, %271
  %273 = fsub double %272, %268
  %274 = fsub double %271, %273
  %275 = fadd double %272, 0x3FE5555555555555
  %276 = fadd double %275, 0xBFE5555555555555
  %277 = fsub double %272, %276
  %278 = fadd double %274, 0x3C8543B0D5DF274D
  %279 = fadd double %278, %277
  %280 = fadd double %275, %279
  %281 = fsub double %280, %275
  %282 = fsub double %279, %281
  %283 = fmul double %265, %280
  %284 = fneg double %283
  %285 = tail call double @llvm.fma.f64(double %265, double %280, double %284)
  %286 = tail call double @llvm.fma.f64(double %265, double %282, double %285)
  %287 = tail call double @llvm.fma.f64(double %267, double %280, double %286)
  %288 = fadd double %283, %287
  %289 = fsub double %288, %283
  %290 = fsub double %287, %289
  %291 = fadd double %258, %288
  %292 = fsub double %291, %258
  %293 = fsub double %288, %292
  %294 = fadd double %259, %290
  %295 = fadd double %294, %293
  %296 = fadd double %291, %295
  %297 = fsub double %296, %291
  %298 = fsub double %295, %297
  %299 = fadd double %255, %296
  %300 = fsub double %299, %255
  %301 = fsub double %299, %300
  %302 = fsub double %255, %301
  %303 = fsub double %296, %300
  %304 = fadd double %303, %302
  %305 = fadd double %257, %298
  %306 = fsub double %305, %257
  %307 = fsub double %305, %306
  %308 = fsub double %257, %307
  %309 = fsub double %298, %306
  %310 = fadd double %309, %308
  %311 = fadd double %305, %304
  %312 = fadd double %299, %311
  %313 = fsub double %312, %299
  %314 = fsub double %311, %313
  %315 = fadd double %310, %314
  %316 = fadd double %312, %315
  %317 = fsub double %316, %312
  %318 = fsub double %315, %317
  %319 = fmul double %316, 2.000000e+00
  %320 = fneg double %319
  %321 = tail call double @llvm.fma.f64(double %316, double 2.000000e+00, double %320)
  %322 = tail call double @llvm.fma.f64(double %318, double 2.000000e+00, double %321)
  %323 = fadd double %319, %322
  %324 = fsub double %323, %319
  %325 = fsub double %322, %324
  %326 = tail call double @llvm.fabs.f64(double %319) #3
  %327 = fcmp oeq double %326, 0x7FF0000000000000
  %328 = select i1 %327, double %319, double %323
  %329 = tail call double @llvm.fabs.f64(double %328) #3
  %330 = fcmp oeq double %329, 0x7FF0000000000000
  %331 = select i1 %330, double 0.000000e+00, double %325
  %332 = fmul double %328, 0x3FF71547652B82FE
  %333 = tail call double @llvm.rint.f64(double %332)
  %334 = fneg double %333
  %335 = tail call double @llvm.fma.f64(double %334, double 0x3FE62E42FEFA39EF, double %328)
  %336 = tail call double @llvm.fma.f64(double %334, double 0x3C7ABC9E3B39803F, double %335)
  %337 = tail call double @llvm.fma.f64(double %336, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %338 = tail call double @llvm.fma.f64(double %336, double %337, double 0x3EC71DEE623FDE64)
  %339 = tail call double @llvm.fma.f64(double %336, double %338, double 0x3EFA01997C89E6B0)
  %340 = tail call double @llvm.fma.f64(double %336, double %339, double 0x3F2A01A014761F6E)
  %341 = tail call double @llvm.fma.f64(double %336, double %340, double 0x3F56C16C1852B7B0)
  %342 = tail call double @llvm.fma.f64(double %336, double %341, double 0x3F81111111122322)
  %343 = tail call double @llvm.fma.f64(double %336, double %342, double 0x3FA55555555502A1)
  %344 = tail call double @llvm.fma.f64(double %336, double %343, double 0x3FC5555555555511)
  %345 = tail call double @llvm.fma.f64(double %336, double %344, double 0x3FE000000000000B)
  %346 = tail call double @llvm.fma.f64(double %336, double %345, double 1.000000e+00)
  %347 = tail call double @llvm.fma.f64(double %336, double %346, double 1.000000e+00)
  %348 = fptosi double %333 to i32
  %349 = tail call double @llvm.amdgcn.ldexp.f64(double %347, i32 %348)
  %350 = fcmp ogt double %328, 1.024000e+03
  %351 = select i1 %350, double 0x7FF0000000000000, double %349
  %352 = fcmp olt double %328, -1.075000e+03
  %353 = select i1 %352, double 0.000000e+00, double %351
  %354 = tail call double @llvm.fma.f64(double %353, double %331, double %353)
  %355 = tail call double @llvm.fabs.f64(double %353) #3
  %356 = fcmp oeq double %355, 0x7FF0000000000000
  %357 = select i1 %356, double %353, double %354
  %358 = tail call double @llvm.fabs.f64(double %357)
  %359 = fcmp oeq double %200, 0x7FF0000000000000
  %360 = fcmp oeq double %199, 0.000000e+00
  %361 = select i1 %359, double 0x7FF0000000000000, double %358
  %362 = select i1 %360, double 0.000000e+00, double %361
  %363 = fcmp uno double %199, 0.000000e+00
  %364 = select i1 %363, double 0x7FF8000000000000, double %362
  %365 = fadd contract double %194, %364
  %366 = getelementptr inbounds double, double addrspace(1)* %2, i64 %24
  %367 = load double, double addrspace(1)* %366, align 8, !tbaa !11, !amdgpu.noclobber !5
  %368 = getelementptr inbounds double, double addrspace(1)* %5, i64 %21
  %369 = load double, double addrspace(1)* %368, align 8, !tbaa !11, !amdgpu.noclobber !5
  %370 = fsub contract double %367, %369
  %371 = tail call double @llvm.fabs.f64(double %370)
  %372 = tail call double @llvm.amdgcn.frexp.mant.f64(double %371)
  %373 = fcmp olt double %372, 0x3FE5555555555555
  %374 = zext i1 %373 to i32
  %375 = tail call double @llvm.amdgcn.ldexp.f64(double %372, i32 %374)
  %376 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %371)
  %377 = sub nsw i32 %376, %374
  %378 = fadd double %375, -1.000000e+00
  %379 = fadd double %375, 1.000000e+00
  %380 = fadd double %379, -1.000000e+00
  %381 = fsub double %375, %380
  %382 = tail call double @llvm.amdgcn.rcp.f64(double %379)
  %383 = fneg double %379
  %384 = tail call double @llvm.fma.f64(double %383, double %382, double 1.000000e+00)
  %385 = tail call double @llvm.fma.f64(double %384, double %382, double %382)
  %386 = tail call double @llvm.fma.f64(double %383, double %385, double 1.000000e+00)
  %387 = tail call double @llvm.fma.f64(double %386, double %385, double %385)
  %388 = fmul double %378, %387
  %389 = fmul double %379, %388
  %390 = fneg double %389
  %391 = tail call double @llvm.fma.f64(double %388, double %379, double %390)
  %392 = tail call double @llvm.fma.f64(double %388, double %381, double %391)
  %393 = fadd double %389, %392
  %394 = fsub double %393, %389
  %395 = fsub double %392, %394
  %396 = fsub double %378, %393
  %397 = fsub double %378, %396
  %398 = fsub double %397, %393
  %399 = fsub double %398, %395
  %400 = fadd double %396, %399
  %401 = fmul double %387, %400
  %402 = fadd double %388, %401
  %403 = fsub double %402, %388
  %404 = fsub double %401, %403
  %405 = fmul double %402, %402
  %406 = fneg double %405
  %407 = tail call double @llvm.fma.f64(double %402, double %402, double %406)
  %408 = fmul double %404, 2.000000e+00
  %409 = tail call double @llvm.fma.f64(double %402, double %408, double %407)
  %410 = fadd double %405, %409
  %411 = fsub double %410, %405
  %412 = fsub double %409, %411
  %413 = tail call double @llvm.fma.f64(double %410, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %414 = tail call double @llvm.fma.f64(double %410, double %413, double 0x3FBE25E43ABE935A)
  %415 = tail call double @llvm.fma.f64(double %410, double %414, double 0x3FC110EF47E6C9C2)
  %416 = tail call double @llvm.fma.f64(double %410, double %415, double 0x3FC3B13BCFA74449)
  %417 = tail call double @llvm.fma.f64(double %410, double %416, double 0x3FC745D171BF3C30)
  %418 = tail call double @llvm.fma.f64(double %410, double %417, double 0x3FCC71C71C7792CE)
  %419 = tail call double @llvm.fma.f64(double %410, double %418, double 0x3FD24924924920DA)
  %420 = tail call double @llvm.fma.f64(double %410, double %419, double 0x3FD999999999999C)
  %421 = sitofp i32 %377 to double
  %422 = fmul double %421, 0x3FE62E42FEFA39EF
  %423 = fneg double %422
  %424 = tail call double @llvm.fma.f64(double %421, double 0x3FE62E42FEFA39EF, double %423)
  %425 = tail call double @llvm.fma.f64(double %421, double 0x3C7ABC9E3B39803F, double %424)
  %426 = fadd double %422, %425
  %427 = fsub double %426, %422
  %428 = fsub double %425, %427
  %429 = tail call double @llvm.amdgcn.ldexp.f64(double %402, i32 1)
  %430 = tail call double @llvm.amdgcn.ldexp.f64(double %404, i32 1)
  %431 = fmul double %402, %410
  %432 = fneg double %431
  %433 = tail call double @llvm.fma.f64(double %410, double %402, double %432)
  %434 = tail call double @llvm.fma.f64(double %410, double %404, double %433)
  %435 = tail call double @llvm.fma.f64(double %412, double %402, double %434)
  %436 = fadd double %431, %435
  %437 = fsub double %436, %431
  %438 = fsub double %435, %437
  %439 = fmul double %410, %420
  %440 = fneg double %439
  %441 = tail call double @llvm.fma.f64(double %410, double %420, double %440)
  %442 = tail call double @llvm.fma.f64(double %412, double %420, double %441)
  %443 = fadd double %439, %442
  %444 = fsub double %443, %439
  %445 = fsub double %442, %444
  %446 = fadd double %443, 0x3FE5555555555555
  %447 = fadd double %446, 0xBFE5555555555555
  %448 = fsub double %443, %447
  %449 = fadd double %445, 0x3C8543B0D5DF274D
  %450 = fadd double %449, %448
  %451 = fadd double %446, %450
  %452 = fsub double %451, %446
  %453 = fsub double %450, %452
  %454 = fmul double %436, %451
  %455 = fneg double %454
  %456 = tail call double @llvm.fma.f64(double %436, double %451, double %455)
  %457 = tail call double @llvm.fma.f64(double %436, double %453, double %456)
  %458 = tail call double @llvm.fma.f64(double %438, double %451, double %457)
  %459 = fadd double %454, %458
  %460 = fsub double %459, %454
  %461 = fsub double %458, %460
  %462 = fadd double %429, %459
  %463 = fsub double %462, %429
  %464 = fsub double %459, %463
  %465 = fadd double %430, %461
  %466 = fadd double %465, %464
  %467 = fadd double %462, %466
  %468 = fsub double %467, %462
  %469 = fsub double %466, %468
  %470 = fadd double %426, %467
  %471 = fsub double %470, %426
  %472 = fsub double %470, %471
  %473 = fsub double %426, %472
  %474 = fsub double %467, %471
  %475 = fadd double %474, %473
  %476 = fadd double %428, %469
  %477 = fsub double %476, %428
  %478 = fsub double %476, %477
  %479 = fsub double %428, %478
  %480 = fsub double %469, %477
  %481 = fadd double %480, %479
  %482 = fadd double %476, %475
  %483 = fadd double %470, %482
  %484 = fsub double %483, %470
  %485 = fsub double %482, %484
  %486 = fadd double %481, %485
  %487 = fadd double %483, %486
  %488 = fsub double %487, %483
  %489 = fsub double %486, %488
  %490 = fmul double %487, 2.000000e+00
  %491 = fneg double %490
  %492 = tail call double @llvm.fma.f64(double %487, double 2.000000e+00, double %491)
  %493 = tail call double @llvm.fma.f64(double %489, double 2.000000e+00, double %492)
  %494 = fadd double %490, %493
  %495 = fsub double %494, %490
  %496 = fsub double %493, %495
  %497 = tail call double @llvm.fabs.f64(double %490) #3
  %498 = fcmp oeq double %497, 0x7FF0000000000000
  %499 = select i1 %498, double %490, double %494
  %500 = tail call double @llvm.fabs.f64(double %499) #3
  %501 = fcmp oeq double %500, 0x7FF0000000000000
  %502 = select i1 %501, double 0.000000e+00, double %496
  %503 = fmul double %499, 0x3FF71547652B82FE
  %504 = tail call double @llvm.rint.f64(double %503)
  %505 = fneg double %504
  %506 = tail call double @llvm.fma.f64(double %505, double 0x3FE62E42FEFA39EF, double %499)
  %507 = tail call double @llvm.fma.f64(double %505, double 0x3C7ABC9E3B39803F, double %506)
  %508 = tail call double @llvm.fma.f64(double %507, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %509 = tail call double @llvm.fma.f64(double %507, double %508, double 0x3EC71DEE623FDE64)
  %510 = tail call double @llvm.fma.f64(double %507, double %509, double 0x3EFA01997C89E6B0)
  %511 = tail call double @llvm.fma.f64(double %507, double %510, double 0x3F2A01A014761F6E)
  %512 = tail call double @llvm.fma.f64(double %507, double %511, double 0x3F56C16C1852B7B0)
  %513 = tail call double @llvm.fma.f64(double %507, double %512, double 0x3F81111111122322)
  %514 = tail call double @llvm.fma.f64(double %507, double %513, double 0x3FA55555555502A1)
  %515 = tail call double @llvm.fma.f64(double %507, double %514, double 0x3FC5555555555511)
  %516 = tail call double @llvm.fma.f64(double %507, double %515, double 0x3FE000000000000B)
  %517 = tail call double @llvm.fma.f64(double %507, double %516, double 1.000000e+00)
  %518 = tail call double @llvm.fma.f64(double %507, double %517, double 1.000000e+00)
  %519 = fptosi double %504 to i32
  %520 = tail call double @llvm.amdgcn.ldexp.f64(double %518, i32 %519)
  %521 = fcmp ogt double %499, 1.024000e+03
  %522 = select i1 %521, double 0x7FF0000000000000, double %520
  %523 = fcmp olt double %499, -1.075000e+03
  %524 = select i1 %523, double 0.000000e+00, double %522
  %525 = tail call double @llvm.fma.f64(double %524, double %502, double %524)
  %526 = tail call double @llvm.fabs.f64(double %524) #3
  %527 = fcmp oeq double %526, 0x7FF0000000000000
  %528 = select i1 %527, double %524, double %525
  %529 = tail call double @llvm.fabs.f64(double %528)
  %530 = fcmp oeq double %371, 0x7FF0000000000000
  %531 = fcmp oeq double %370, 0.000000e+00
  %532 = select i1 %530, double 0x7FF0000000000000, double %529
  %533 = select i1 %531, double 0.000000e+00, double %532
  %534 = fcmp uno double %370, 0.000000e+00
  %535 = select i1 %534, double 0x7FF8000000000000, double %533
  %536 = fadd contract double %365, %535
  %537 = fcmp olt double %536, 0x1000000000000000
  %538 = select i1 %537, double 0x4FF0000000000000, double 1.000000e+00
  %539 = fmul double %536, %538
  %540 = tail call double @llvm.amdgcn.rsq.f64(double %539)
  %541 = fmul double %539, %540
  %542 = fmul double %540, 5.000000e-01
  %543 = fneg double %542
  %544 = tail call double @llvm.fma.f64(double %543, double %541, double 5.000000e-01)
  %545 = tail call double @llvm.fma.f64(double %542, double %544, double %542)
  %546 = tail call double @llvm.fma.f64(double %541, double %544, double %541)
  %547 = fneg double %546
  %548 = tail call double @llvm.fma.f64(double %547, double %546, double %539)
  %549 = tail call double @llvm.fma.f64(double %548, double %545, double %546)
  %550 = fneg double %549
  %551 = tail call double @llvm.fma.f64(double %550, double %549, double %539)
  %552 = tail call double @llvm.fma.f64(double %551, double %545, double %549)
  %553 = select i1 %537, double 0x37F0000000000000, double 1.000000e+00
  %554 = fmul double %553, %552
  %555 = fcmp oeq double %539, 0.000000e+00
  %556 = fcmp oeq double %539, 0x7FF0000000000000
  %557 = or i1 %555, %556
  %558 = select i1 %557, double %539, double %554
  %559 = getelementptr inbounds double, double addrspace(1)* %7, i64 %21
  store double %558, double addrspace(1)* %559, align 8, !tbaa !11
  br label %560

560:                                              ; preds = %20, %9
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fma.f64(double, double, double) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.rint.f64(double) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.ldexp.f64(double, i32) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.frexp.mant.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.frexp.exp.i32.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.rcp.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.rsq.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #2

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind willreturn "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="128" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{i16 1, i16 1025}
!5 = !{}
!6 = !{i32 0, i32 1024}
!7 = !{!8, !8, i64 0}
!8 = !{!"int", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C++ TBAA"}
!11 = !{!12, !12, i64 0}
!12 = !{!"double", !9, i64 0}
