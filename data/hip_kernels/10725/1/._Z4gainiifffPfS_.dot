digraph "CFG for '_Z4gainiifffPfS_' function" {
	label="CFG for '_Z4gainiifffPfS_' function";

	Node0x54a2800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = icmp slt i32 %16, %0\l  %26 = icmp slt i32 %24, %1\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %54\l|{<s0>T|<s1>F}}"];
	Node0x54a2800:s0 -> Node0x54a6250;
	Node0x54a2800:s1 -> Node0x54a62e0;
	Node0x54a6250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%28:\l28:                                               \l  %29 = mul nsw i32 %24, %0\l  %30 = add nsw i32 %29, %16\l  %31 = shl nsw i32 %30, 2\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %5, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %35 = fmul contract float %34, %2\l  %36 = getelementptr inbounds float, float addrspace(1)* %6, i64 %32\l  store float %35, float addrspace(1)* %36, align 4, !tbaa !7\l  %37 = add nuw nsw i32 %31, 1\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %5, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7\l  %41 = fmul contract float %40, %3\l  %42 = getelementptr inbounds float, float addrspace(1)* %6, i64 %38\l  store float %41, float addrspace(1)* %42, align 4, !tbaa !7\l  %43 = add nuw nsw i32 %31, 2\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %5, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %47 = fmul contract float %46, %4\l  %48 = getelementptr inbounds float, float addrspace(1)* %6, i64 %44\l  store float %47, float addrspace(1)* %48, align 4, !tbaa !7\l  %49 = add nuw nsw i32 %31, 3\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %5, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  %53 = getelementptr inbounds float, float addrspace(1)* %6, i64 %50\l  store float %52, float addrspace(1)* %53, align 4, !tbaa !7\l  br label %54\l}"];
	Node0x54a6250 -> Node0x54a62e0;
	Node0x54a62e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  ret void\l}"];
}
