digraph "CFG for '_Z11print_floatPfi' function" {
	label="CFG for '_Z11print_floatPfi' function";

	Node0x55d1120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = mul i32 %3, %8\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = add i32 %9, %10\l  %12 = icmp slt i32 %11, %1\l  br i1 %12, label %13, label %478\l|{<s0>T|<s1>F}}"];
	Node0x55d1120:s0 -> Node0x55d3070;
	Node0x55d1120:s1 -> Node0x55d3100;
	Node0x55d3070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%13:\l13:                                               \l  %14 = sext i32 %11 to i64\l  %15 = getelementptr inbounds float, float addrspace(1)* %0, i64 %14\l  %16 = load float, float addrspace(1)* %15, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %17 = fpext float %16 to double\l  %18 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %19 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 24\l  %20 = bitcast i8 addrspace(4)* %19 to i64 addrspace(4)*\l  %21 = load i64, i64 addrspace(4)* %20, align 8, !tbaa !11\l  %22 = inttoptr i64 %21 to i8 addrspace(1)*\l  %23 = addrspacecast i8 addrspace(1)* %22 to i8*\l  %24 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %23,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %25 = extractelement \<2 x i64\> %24, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([4 x i8], [4 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %26, label %30\l|{<s0>T|<s1>F}}"];
	Node0x55d3070:s0 -> Node0x55d4a90;
	Node0x55d3070:s1 -> Node0x55d5480;
	Node0x55d4a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%26:\l26:                                               \l  %27 = and i64 %25, -225\l  %28 = or i64 %27, 32\l  %29 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %23,\l... i64 noundef %28, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %471\l}"];
	Node0x55d4a90 -> Node0x55d5740;
	Node0x55d5480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%30:\l30:                                               \l  %31 = and i64 %25, 2\l  %32 = and i64 %25, -3\l  %33 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %32, i64 0\l  br label %34\l}"];
	Node0x55d5480 -> Node0x55d63e0;
	Node0x55d63e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%34:\l34:                                               \l  %35 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([4 x i8], [4 x i8] addrspace(4)* @.str, i64 0, i64 0)\l... to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([4 x i8], [4 x i8] addrspace(4)* @.str,\l... i64 0, i64 3) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint ([4 x\l... i8]* addrspacecast ([4 x i8] addrspace(4)* @.str to [4 x i8]*) to i64)), i64\l... 1))), %30 ], [ %468, %460 ]\l  %36 = phi i8 addrspace(4)* [ getelementptr inbounds ([4 x i8], [4 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %30 ], [ %469, %460 ]\l  %37 = phi \<2 x i64\> [ %33, %30 ], [ %467, %460 ]\l  %38 = icmp ugt i64 %35, 56\l  %39 = extractelement \<2 x i64\> %37, i64 0\l  %40 = or i64 %39, %31\l  %41 = insertelement \<2 x i64\> poison, i64 %40, i64 0\l  %42 = select i1 %38, \<2 x i64\> %37, \<2 x i64\> %41\l  %43 = tail call i64 @llvm.umin.i64(i64 %35, i64 56)\l  %44 = trunc i64 %43 to i32\l  %45 = extractelement \<2 x i64\> %42, i64 0\l  %46 = icmp ugt i32 %44, 7\l  br i1 %46, label %49, label %47\l|{<s0>T|<s1>F}}"];
	Node0x55d63e0:s0 -> Node0x55d7350;
	Node0x55d63e0:s1 -> Node0x55d73e0;
	Node0x55d73e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%47:\l47:                                               \l  %48 = icmp eq i32 %44, 0\l  br i1 %48, label %102, label %89\l|{<s0>T|<s1>F}}"];
	Node0x55d73e0:s0 -> Node0x55d75e0;
	Node0x55d73e0:s1 -> Node0x55d7630;
	Node0x55d7350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%49:\l49:                                               \l  %50 = load i8, i8 addrspace(4)* %36, align 1, !tbaa !15\l  %51 = zext i8 %50 to i64\l  %52 = getelementptr inbounds i8, i8 addrspace(4)* %36, i64 1\l  %53 = load i8, i8 addrspace(4)* %52, align 1, !tbaa !15\l  %54 = zext i8 %53 to i64\l  %55 = shl nuw nsw i64 %54, 8\l  %56 = or i64 %55, %51\l  %57 = getelementptr inbounds i8, i8 addrspace(4)* %36, i64 2\l  %58 = load i8, i8 addrspace(4)* %57, align 1, !tbaa !15\l  %59 = zext i8 %58 to i64\l  %60 = shl nuw nsw i64 %59, 16\l  %61 = or i64 %56, %60\l  %62 = getelementptr inbounds i8, i8 addrspace(4)* %36, i64 3\l  %63 = load i8, i8 addrspace(4)* %62, align 1, !tbaa !15\l  %64 = zext i8 %63 to i64\l  %65 = shl nuw nsw i64 %64, 24\l  %66 = or i64 %61, %65\l  %67 = getelementptr inbounds i8, i8 addrspace(4)* %36, i64 4\l  %68 = load i8, i8 addrspace(4)* %67, align 1, !tbaa !15\l  %69 = zext i8 %68 to i64\l  %70 = shl nuw nsw i64 %69, 32\l  %71 = or i64 %66, %70\l  %72 = getelementptr inbounds i8, i8 addrspace(4)* %36, i64 5\l  %73 = load i8, i8 addrspace(4)* %72, align 1, !tbaa !15\l  %74 = zext i8 %73 to i64\l  %75 = shl nuw nsw i64 %74, 40\l  %76 = or i64 %71, %75\l  %77 = getelementptr inbounds i8, i8 addrspace(4)* %36, i64 6\l  %78 = load i8, i8 addrspace(4)* %77, align 1, !tbaa !15\l  %79 = zext i8 %78 to i64\l  %80 = shl nuw nsw i64 %79, 48\l  %81 = or i64 %76, %80\l  %82 = getelementptr inbounds i8, i8 addrspace(4)* %36, i64 7\l  %83 = load i8, i8 addrspace(4)* %82, align 1, !tbaa !15\l  %84 = zext i8 %83 to i64\l  %85 = shl nuw i64 %84, 56\l  %86 = or i64 %81, %85\l  %87 = add nsw i32 %44, -8\l  %88 = getelementptr inbounds i8, i8 addrspace(4)* %36, i64 8\l  br label %102\l}"];
	Node0x55d7350 -> Node0x55d75e0;
	Node0x55d7630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%89:\l89:                                               \l  %90 = phi i32 [ %100, %89 ], [ 0, %47 ]\l  %91 = phi i64 [ %99, %89 ], [ 0, %47 ]\l  %92 = zext i32 %90 to i64\l  %93 = getelementptr inbounds i8, i8 addrspace(4)* %36, i64 %92\l  %94 = load i8, i8 addrspace(4)* %93, align 1, !tbaa !15\l  %95 = zext i8 %94 to i64\l  %96 = shl i32 %90, 3\l  %97 = zext i32 %96 to i64\l  %98 = shl nuw i64 %95, %97\l  %99 = or i64 %98, %91\l  %100 = add nuw nsw i32 %90, 1\l  %101 = icmp eq i32 %100, %44\l  br i1 %101, label %102, label %89, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x55d7630:s0 -> Node0x55d75e0;
	Node0x55d7630:s1 -> Node0x55d7630;
	Node0x55d75e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%102:\l102:                                              \l  %103 = phi i8 addrspace(4)* [ %88, %49 ], [ %36, %47 ], [ %36, %89 ]\l  %104 = phi i32 [ %87, %49 ], [ 0, %47 ], [ 0, %89 ]\l  %105 = phi i64 [ %86, %49 ], [ 0, %47 ], [ %99, %89 ]\l  %106 = icmp ugt i32 %104, 7\l  br i1 %106, label %109, label %107\l|{<s0>T|<s1>F}}"];
	Node0x55d75e0:s0 -> Node0x55da2c0;
	Node0x55d75e0:s1 -> Node0x55da310;
	Node0x55da310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%107:\l107:                                              \l  %108 = icmp eq i32 %104, 0\l  br i1 %108, label %162, label %149\l|{<s0>T|<s1>F}}"];
	Node0x55da310:s0 -> Node0x55da4e0;
	Node0x55da310:s1 -> Node0x55da530;
	Node0x55da2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%109:\l109:                                              \l  %110 = load i8, i8 addrspace(4)* %103, align 1, !tbaa !15\l  %111 = zext i8 %110 to i64\l  %112 = getelementptr inbounds i8, i8 addrspace(4)* %103, i64 1\l  %113 = load i8, i8 addrspace(4)* %112, align 1, !tbaa !15\l  %114 = zext i8 %113 to i64\l  %115 = shl nuw nsw i64 %114, 8\l  %116 = or i64 %115, %111\l  %117 = getelementptr inbounds i8, i8 addrspace(4)* %103, i64 2\l  %118 = load i8, i8 addrspace(4)* %117, align 1, !tbaa !15\l  %119 = zext i8 %118 to i64\l  %120 = shl nuw nsw i64 %119, 16\l  %121 = or i64 %116, %120\l  %122 = getelementptr inbounds i8, i8 addrspace(4)* %103, i64 3\l  %123 = load i8, i8 addrspace(4)* %122, align 1, !tbaa !15\l  %124 = zext i8 %123 to i64\l  %125 = shl nuw nsw i64 %124, 24\l  %126 = or i64 %121, %125\l  %127 = getelementptr inbounds i8, i8 addrspace(4)* %103, i64 4\l  %128 = load i8, i8 addrspace(4)* %127, align 1, !tbaa !15\l  %129 = zext i8 %128 to i64\l  %130 = shl nuw nsw i64 %129, 32\l  %131 = or i64 %126, %130\l  %132 = getelementptr inbounds i8, i8 addrspace(4)* %103, i64 5\l  %133 = load i8, i8 addrspace(4)* %132, align 1, !tbaa !15\l  %134 = zext i8 %133 to i64\l  %135 = shl nuw nsw i64 %134, 40\l  %136 = or i64 %131, %135\l  %137 = getelementptr inbounds i8, i8 addrspace(4)* %103, i64 6\l  %138 = load i8, i8 addrspace(4)* %137, align 1, !tbaa !15\l  %139 = zext i8 %138 to i64\l  %140 = shl nuw nsw i64 %139, 48\l  %141 = or i64 %136, %140\l  %142 = getelementptr inbounds i8, i8 addrspace(4)* %103, i64 7\l  %143 = load i8, i8 addrspace(4)* %142, align 1, !tbaa !15\l  %144 = zext i8 %143 to i64\l  %145 = shl nuw i64 %144, 56\l  %146 = or i64 %141, %145\l  %147 = add nsw i32 %104, -8\l  %148 = getelementptr inbounds i8, i8 addrspace(4)* %103, i64 8\l  br label %162\l}"];
	Node0x55da2c0 -> Node0x55da4e0;
	Node0x55da530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%149:\l149:                                              \l  %150 = phi i32 [ %160, %149 ], [ 0, %107 ]\l  %151 = phi i64 [ %159, %149 ], [ 0, %107 ]\l  %152 = zext i32 %150 to i64\l  %153 = getelementptr inbounds i8, i8 addrspace(4)* %103, i64 %152\l  %154 = load i8, i8 addrspace(4)* %153, align 1, !tbaa !15\l  %155 = zext i8 %154 to i64\l  %156 = shl i32 %150, 3\l  %157 = zext i32 %156 to i64\l  %158 = shl nuw i64 %155, %157\l  %159 = or i64 %158, %151\l  %160 = add nuw nsw i32 %150, 1\l  %161 = icmp eq i32 %160, %104\l  br i1 %161, label %162, label %149\l|{<s0>T|<s1>F}}"];
	Node0x55da530:s0 -> Node0x55da4e0;
	Node0x55da530:s1 -> Node0x55da530;
	Node0x55da4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%162:\l162:                                              \l  %163 = phi i8 addrspace(4)* [ %148, %109 ], [ %103, %107 ], [ %103, %149 ]\l  %164 = phi i32 [ %147, %109 ], [ 0, %107 ], [ 0, %149 ]\l  %165 = phi i64 [ %146, %109 ], [ 0, %107 ], [ %159, %149 ]\l  %166 = icmp ugt i32 %164, 7\l  br i1 %166, label %169, label %167\l|{<s0>T|<s1>F}}"];
	Node0x55da4e0:s0 -> Node0x55dca00;
	Node0x55da4e0:s1 -> Node0x55dca50;
	Node0x55dca50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%167:\l167:                                              \l  %168 = icmp eq i32 %164, 0\l  br i1 %168, label %222, label %209\l|{<s0>T|<s1>F}}"];
	Node0x55dca50:s0 -> Node0x55dcbe0;
	Node0x55dca50:s1 -> Node0x55dcc30;
	Node0x55dca00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%169:\l169:                                              \l  %170 = load i8, i8 addrspace(4)* %163, align 1, !tbaa !15\l  %171 = zext i8 %170 to i64\l  %172 = getelementptr inbounds i8, i8 addrspace(4)* %163, i64 1\l  %173 = load i8, i8 addrspace(4)* %172, align 1, !tbaa !15\l  %174 = zext i8 %173 to i64\l  %175 = shl nuw nsw i64 %174, 8\l  %176 = or i64 %175, %171\l  %177 = getelementptr inbounds i8, i8 addrspace(4)* %163, i64 2\l  %178 = load i8, i8 addrspace(4)* %177, align 1, !tbaa !15\l  %179 = zext i8 %178 to i64\l  %180 = shl nuw nsw i64 %179, 16\l  %181 = or i64 %176, %180\l  %182 = getelementptr inbounds i8, i8 addrspace(4)* %163, i64 3\l  %183 = load i8, i8 addrspace(4)* %182, align 1, !tbaa !15\l  %184 = zext i8 %183 to i64\l  %185 = shl nuw nsw i64 %184, 24\l  %186 = or i64 %181, %185\l  %187 = getelementptr inbounds i8, i8 addrspace(4)* %163, i64 4\l  %188 = load i8, i8 addrspace(4)* %187, align 1, !tbaa !15\l  %189 = zext i8 %188 to i64\l  %190 = shl nuw nsw i64 %189, 32\l  %191 = or i64 %186, %190\l  %192 = getelementptr inbounds i8, i8 addrspace(4)* %163, i64 5\l  %193 = load i8, i8 addrspace(4)* %192, align 1, !tbaa !15\l  %194 = zext i8 %193 to i64\l  %195 = shl nuw nsw i64 %194, 40\l  %196 = or i64 %191, %195\l  %197 = getelementptr inbounds i8, i8 addrspace(4)* %163, i64 6\l  %198 = load i8, i8 addrspace(4)* %197, align 1, !tbaa !15\l  %199 = zext i8 %198 to i64\l  %200 = shl nuw nsw i64 %199, 48\l  %201 = or i64 %196, %200\l  %202 = getelementptr inbounds i8, i8 addrspace(4)* %163, i64 7\l  %203 = load i8, i8 addrspace(4)* %202, align 1, !tbaa !15\l  %204 = zext i8 %203 to i64\l  %205 = shl nuw i64 %204, 56\l  %206 = or i64 %201, %205\l  %207 = add nsw i32 %164, -8\l  %208 = getelementptr inbounds i8, i8 addrspace(4)* %163, i64 8\l  br label %222\l}"];
	Node0x55dca00 -> Node0x55dcbe0;
	Node0x55dcc30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%209:\l209:                                              \l  %210 = phi i32 [ %220, %209 ], [ 0, %167 ]\l  %211 = phi i64 [ %219, %209 ], [ 0, %167 ]\l  %212 = zext i32 %210 to i64\l  %213 = getelementptr inbounds i8, i8 addrspace(4)* %163, i64 %212\l  %214 = load i8, i8 addrspace(4)* %213, align 1, !tbaa !15\l  %215 = zext i8 %214 to i64\l  %216 = shl i32 %210, 3\l  %217 = zext i32 %216 to i64\l  %218 = shl nuw i64 %215, %217\l  %219 = or i64 %218, %211\l  %220 = add nuw nsw i32 %210, 1\l  %221 = icmp eq i32 %220, %164\l  br i1 %221, label %222, label %209\l|{<s0>T|<s1>F}}"];
	Node0x55dcc30:s0 -> Node0x55dcbe0;
	Node0x55dcc30:s1 -> Node0x55dcc30;
	Node0x55dcbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%222:\l222:                                              \l  %223 = phi i8 addrspace(4)* [ %208, %169 ], [ %163, %167 ], [ %163, %209 ]\l  %224 = phi i32 [ %207, %169 ], [ 0, %167 ], [ 0, %209 ]\l  %225 = phi i64 [ %206, %169 ], [ 0, %167 ], [ %219, %209 ]\l  %226 = icmp ugt i32 %224, 7\l  br i1 %226, label %229, label %227\l|{<s0>T|<s1>F}}"];
	Node0x55dcbe0:s0 -> Node0x55dec80;
	Node0x55dcbe0:s1 -> Node0x55decd0;
	Node0x55decd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%227:\l227:                                              \l  %228 = icmp eq i32 %224, 0\l  br i1 %228, label %282, label %269\l|{<s0>T|<s1>F}}"];
	Node0x55decd0:s0 -> Node0x55dee60;
	Node0x55decd0:s1 -> Node0x55deeb0;
	Node0x55dec80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%229:\l229:                                              \l  %230 = load i8, i8 addrspace(4)* %223, align 1, !tbaa !15\l  %231 = zext i8 %230 to i64\l  %232 = getelementptr inbounds i8, i8 addrspace(4)* %223, i64 1\l  %233 = load i8, i8 addrspace(4)* %232, align 1, !tbaa !15\l  %234 = zext i8 %233 to i64\l  %235 = shl nuw nsw i64 %234, 8\l  %236 = or i64 %235, %231\l  %237 = getelementptr inbounds i8, i8 addrspace(4)* %223, i64 2\l  %238 = load i8, i8 addrspace(4)* %237, align 1, !tbaa !15\l  %239 = zext i8 %238 to i64\l  %240 = shl nuw nsw i64 %239, 16\l  %241 = or i64 %236, %240\l  %242 = getelementptr inbounds i8, i8 addrspace(4)* %223, i64 3\l  %243 = load i8, i8 addrspace(4)* %242, align 1, !tbaa !15\l  %244 = zext i8 %243 to i64\l  %245 = shl nuw nsw i64 %244, 24\l  %246 = or i64 %241, %245\l  %247 = getelementptr inbounds i8, i8 addrspace(4)* %223, i64 4\l  %248 = load i8, i8 addrspace(4)* %247, align 1, !tbaa !15\l  %249 = zext i8 %248 to i64\l  %250 = shl nuw nsw i64 %249, 32\l  %251 = or i64 %246, %250\l  %252 = getelementptr inbounds i8, i8 addrspace(4)* %223, i64 5\l  %253 = load i8, i8 addrspace(4)* %252, align 1, !tbaa !15\l  %254 = zext i8 %253 to i64\l  %255 = shl nuw nsw i64 %254, 40\l  %256 = or i64 %251, %255\l  %257 = getelementptr inbounds i8, i8 addrspace(4)* %223, i64 6\l  %258 = load i8, i8 addrspace(4)* %257, align 1, !tbaa !15\l  %259 = zext i8 %258 to i64\l  %260 = shl nuw nsw i64 %259, 48\l  %261 = or i64 %256, %260\l  %262 = getelementptr inbounds i8, i8 addrspace(4)* %223, i64 7\l  %263 = load i8, i8 addrspace(4)* %262, align 1, !tbaa !15\l  %264 = zext i8 %263 to i64\l  %265 = shl nuw i64 %264, 56\l  %266 = or i64 %261, %265\l  %267 = add nsw i32 %224, -8\l  %268 = getelementptr inbounds i8, i8 addrspace(4)* %223, i64 8\l  br label %282\l}"];
	Node0x55dec80 -> Node0x55dee60;
	Node0x55deeb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%269:\l269:                                              \l  %270 = phi i32 [ %280, %269 ], [ 0, %227 ]\l  %271 = phi i64 [ %279, %269 ], [ 0, %227 ]\l  %272 = zext i32 %270 to i64\l  %273 = getelementptr inbounds i8, i8 addrspace(4)* %223, i64 %272\l  %274 = load i8, i8 addrspace(4)* %273, align 1, !tbaa !15\l  %275 = zext i8 %274 to i64\l  %276 = shl i32 %270, 3\l  %277 = zext i32 %276 to i64\l  %278 = shl nuw i64 %275, %277\l  %279 = or i64 %278, %271\l  %280 = add nuw nsw i32 %270, 1\l  %281 = icmp eq i32 %280, %224\l  br i1 %281, label %282, label %269\l|{<s0>T|<s1>F}}"];
	Node0x55deeb0:s0 -> Node0x55dee60;
	Node0x55deeb0:s1 -> Node0x55deeb0;
	Node0x55dee60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%282:\l282:                                              \l  %283 = phi i8 addrspace(4)* [ %268, %229 ], [ %223, %227 ], [ %223, %269 ]\l  %284 = phi i32 [ %267, %229 ], [ 0, %227 ], [ 0, %269 ]\l  %285 = phi i64 [ %266, %229 ], [ 0, %227 ], [ %279, %269 ]\l  %286 = icmp ugt i32 %284, 7\l  br i1 %286, label %289, label %287\l|{<s0>T|<s1>F}}"];
	Node0x55dee60:s0 -> Node0x55e1700;
	Node0x55dee60:s1 -> Node0x55e1750;
	Node0x55e1750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%287:\l287:                                              \l  %288 = icmp eq i32 %284, 0\l  br i1 %288, label %342, label %329\l|{<s0>T|<s1>F}}"];
	Node0x55e1750:s0 -> Node0x55e18e0;
	Node0x55e1750:s1 -> Node0x55e1930;
	Node0x55e1700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%289:\l289:                                              \l  %290 = load i8, i8 addrspace(4)* %283, align 1, !tbaa !15\l  %291 = zext i8 %290 to i64\l  %292 = getelementptr inbounds i8, i8 addrspace(4)* %283, i64 1\l  %293 = load i8, i8 addrspace(4)* %292, align 1, !tbaa !15\l  %294 = zext i8 %293 to i64\l  %295 = shl nuw nsw i64 %294, 8\l  %296 = or i64 %295, %291\l  %297 = getelementptr inbounds i8, i8 addrspace(4)* %283, i64 2\l  %298 = load i8, i8 addrspace(4)* %297, align 1, !tbaa !15\l  %299 = zext i8 %298 to i64\l  %300 = shl nuw nsw i64 %299, 16\l  %301 = or i64 %296, %300\l  %302 = getelementptr inbounds i8, i8 addrspace(4)* %283, i64 3\l  %303 = load i8, i8 addrspace(4)* %302, align 1, !tbaa !15\l  %304 = zext i8 %303 to i64\l  %305 = shl nuw nsw i64 %304, 24\l  %306 = or i64 %301, %305\l  %307 = getelementptr inbounds i8, i8 addrspace(4)* %283, i64 4\l  %308 = load i8, i8 addrspace(4)* %307, align 1, !tbaa !15\l  %309 = zext i8 %308 to i64\l  %310 = shl nuw nsw i64 %309, 32\l  %311 = or i64 %306, %310\l  %312 = getelementptr inbounds i8, i8 addrspace(4)* %283, i64 5\l  %313 = load i8, i8 addrspace(4)* %312, align 1, !tbaa !15\l  %314 = zext i8 %313 to i64\l  %315 = shl nuw nsw i64 %314, 40\l  %316 = or i64 %311, %315\l  %317 = getelementptr inbounds i8, i8 addrspace(4)* %283, i64 6\l  %318 = load i8, i8 addrspace(4)* %317, align 1, !tbaa !15\l  %319 = zext i8 %318 to i64\l  %320 = shl nuw nsw i64 %319, 48\l  %321 = or i64 %316, %320\l  %322 = getelementptr inbounds i8, i8 addrspace(4)* %283, i64 7\l  %323 = load i8, i8 addrspace(4)* %322, align 1, !tbaa !15\l  %324 = zext i8 %323 to i64\l  %325 = shl nuw i64 %324, 56\l  %326 = or i64 %321, %325\l  %327 = add nsw i32 %284, -8\l  %328 = getelementptr inbounds i8, i8 addrspace(4)* %283, i64 8\l  br label %342\l}"];
	Node0x55e1700 -> Node0x55e18e0;
	Node0x55e1930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%329:\l329:                                              \l  %330 = phi i32 [ %340, %329 ], [ 0, %287 ]\l  %331 = phi i64 [ %339, %329 ], [ 0, %287 ]\l  %332 = zext i32 %330 to i64\l  %333 = getelementptr inbounds i8, i8 addrspace(4)* %283, i64 %332\l  %334 = load i8, i8 addrspace(4)* %333, align 1, !tbaa !15\l  %335 = zext i8 %334 to i64\l  %336 = shl i32 %330, 3\l  %337 = zext i32 %336 to i64\l  %338 = shl nuw i64 %335, %337\l  %339 = or i64 %338, %331\l  %340 = add nuw nsw i32 %330, 1\l  %341 = icmp eq i32 %340, %284\l  br i1 %341, label %342, label %329\l|{<s0>T|<s1>F}}"];
	Node0x55e1930:s0 -> Node0x55e18e0;
	Node0x55e1930:s1 -> Node0x55e1930;
	Node0x55e18e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%342:\l342:                                              \l  %343 = phi i8 addrspace(4)* [ %328, %289 ], [ %283, %287 ], [ %283, %329 ]\l  %344 = phi i32 [ %327, %289 ], [ 0, %287 ], [ 0, %329 ]\l  %345 = phi i64 [ %326, %289 ], [ 0, %287 ], [ %339, %329 ]\l  %346 = icmp ugt i32 %344, 7\l  br i1 %346, label %349, label %347\l|{<s0>T|<s1>F}}"];
	Node0x55e18e0:s0 -> Node0x55e4360;
	Node0x55e18e0:s1 -> Node0x55e43b0;
	Node0x55e43b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%347:\l347:                                              \l  %348 = icmp eq i32 %344, 0\l  br i1 %348, label %402, label %389\l|{<s0>T|<s1>F}}"];
	Node0x55e43b0:s0 -> Node0x55e4540;
	Node0x55e43b0:s1 -> Node0x55e4590;
	Node0x55e4360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%349:\l349:                                              \l  %350 = load i8, i8 addrspace(4)* %343, align 1, !tbaa !15\l  %351 = zext i8 %350 to i64\l  %352 = getelementptr inbounds i8, i8 addrspace(4)* %343, i64 1\l  %353 = load i8, i8 addrspace(4)* %352, align 1, !tbaa !15\l  %354 = zext i8 %353 to i64\l  %355 = shl nuw nsw i64 %354, 8\l  %356 = or i64 %355, %351\l  %357 = getelementptr inbounds i8, i8 addrspace(4)* %343, i64 2\l  %358 = load i8, i8 addrspace(4)* %357, align 1, !tbaa !15\l  %359 = zext i8 %358 to i64\l  %360 = shl nuw nsw i64 %359, 16\l  %361 = or i64 %356, %360\l  %362 = getelementptr inbounds i8, i8 addrspace(4)* %343, i64 3\l  %363 = load i8, i8 addrspace(4)* %362, align 1, !tbaa !15\l  %364 = zext i8 %363 to i64\l  %365 = shl nuw nsw i64 %364, 24\l  %366 = or i64 %361, %365\l  %367 = getelementptr inbounds i8, i8 addrspace(4)* %343, i64 4\l  %368 = load i8, i8 addrspace(4)* %367, align 1, !tbaa !15\l  %369 = zext i8 %368 to i64\l  %370 = shl nuw nsw i64 %369, 32\l  %371 = or i64 %366, %370\l  %372 = getelementptr inbounds i8, i8 addrspace(4)* %343, i64 5\l  %373 = load i8, i8 addrspace(4)* %372, align 1, !tbaa !15\l  %374 = zext i8 %373 to i64\l  %375 = shl nuw nsw i64 %374, 40\l  %376 = or i64 %371, %375\l  %377 = getelementptr inbounds i8, i8 addrspace(4)* %343, i64 6\l  %378 = load i8, i8 addrspace(4)* %377, align 1, !tbaa !15\l  %379 = zext i8 %378 to i64\l  %380 = shl nuw nsw i64 %379, 48\l  %381 = or i64 %376, %380\l  %382 = getelementptr inbounds i8, i8 addrspace(4)* %343, i64 7\l  %383 = load i8, i8 addrspace(4)* %382, align 1, !tbaa !15\l  %384 = zext i8 %383 to i64\l  %385 = shl nuw i64 %384, 56\l  %386 = or i64 %381, %385\l  %387 = add nsw i32 %344, -8\l  %388 = getelementptr inbounds i8, i8 addrspace(4)* %343, i64 8\l  br label %402\l}"];
	Node0x55e4360 -> Node0x55e4540;
	Node0x55e4590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%389:\l389:                                              \l  %390 = phi i32 [ %400, %389 ], [ 0, %347 ]\l  %391 = phi i64 [ %399, %389 ], [ 0, %347 ]\l  %392 = zext i32 %390 to i64\l  %393 = getelementptr inbounds i8, i8 addrspace(4)* %343, i64 %392\l  %394 = load i8, i8 addrspace(4)* %393, align 1, !tbaa !15\l  %395 = zext i8 %394 to i64\l  %396 = shl i32 %390, 3\l  %397 = zext i32 %396 to i64\l  %398 = shl nuw i64 %395, %397\l  %399 = or i64 %398, %391\l  %400 = add nuw nsw i32 %390, 1\l  %401 = icmp eq i32 %400, %344\l  br i1 %401, label %402, label %389\l|{<s0>T|<s1>F}}"];
	Node0x55e4590:s0 -> Node0x55e4540;
	Node0x55e4590:s1 -> Node0x55e4590;
	Node0x55e4540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%402:\l402:                                              \l  %403 = phi i8 addrspace(4)* [ %388, %349 ], [ %343, %347 ], [ %343, %389 ]\l  %404 = phi i32 [ %387, %349 ], [ 0, %347 ], [ 0, %389 ]\l  %405 = phi i64 [ %386, %349 ], [ 0, %347 ], [ %399, %389 ]\l  %406 = icmp ugt i32 %404, 7\l  br i1 %406, label %409, label %407\l|{<s0>T|<s1>F}}"];
	Node0x55e4540:s0 -> Node0x55e6bc0;
	Node0x55e4540:s1 -> Node0x55e6c10;
	Node0x55e6c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%407:\l407:                                              \l  %408 = icmp eq i32 %404, 0\l  br i1 %408, label %460, label %447\l|{<s0>T|<s1>F}}"];
	Node0x55e6c10:s0 -> Node0x55d6880;
	Node0x55e6c10:s1 -> Node0x55e6da0;
	Node0x55e6bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%409:\l409:                                              \l  %410 = load i8, i8 addrspace(4)* %403, align 1, !tbaa !15\l  %411 = zext i8 %410 to i64\l  %412 = getelementptr inbounds i8, i8 addrspace(4)* %403, i64 1\l  %413 = load i8, i8 addrspace(4)* %412, align 1, !tbaa !15\l  %414 = zext i8 %413 to i64\l  %415 = shl nuw nsw i64 %414, 8\l  %416 = or i64 %415, %411\l  %417 = getelementptr inbounds i8, i8 addrspace(4)* %403, i64 2\l  %418 = load i8, i8 addrspace(4)* %417, align 1, !tbaa !15\l  %419 = zext i8 %418 to i64\l  %420 = shl nuw nsw i64 %419, 16\l  %421 = or i64 %416, %420\l  %422 = getelementptr inbounds i8, i8 addrspace(4)* %403, i64 3\l  %423 = load i8, i8 addrspace(4)* %422, align 1, !tbaa !15\l  %424 = zext i8 %423 to i64\l  %425 = shl nuw nsw i64 %424, 24\l  %426 = or i64 %421, %425\l  %427 = getelementptr inbounds i8, i8 addrspace(4)* %403, i64 4\l  %428 = load i8, i8 addrspace(4)* %427, align 1, !tbaa !15\l  %429 = zext i8 %428 to i64\l  %430 = shl nuw nsw i64 %429, 32\l  %431 = or i64 %426, %430\l  %432 = getelementptr inbounds i8, i8 addrspace(4)* %403, i64 5\l  %433 = load i8, i8 addrspace(4)* %432, align 1, !tbaa !15\l  %434 = zext i8 %433 to i64\l  %435 = shl nuw nsw i64 %434, 40\l  %436 = or i64 %431, %435\l  %437 = getelementptr inbounds i8, i8 addrspace(4)* %403, i64 6\l  %438 = load i8, i8 addrspace(4)* %437, align 1, !tbaa !15\l  %439 = zext i8 %438 to i64\l  %440 = shl nuw nsw i64 %439, 48\l  %441 = or i64 %436, %440\l  %442 = getelementptr inbounds i8, i8 addrspace(4)* %403, i64 7\l  %443 = load i8, i8 addrspace(4)* %442, align 1, !tbaa !15\l  %444 = zext i8 %443 to i64\l  %445 = shl nuw i64 %444, 56\l  %446 = or i64 %441, %445\l  br label %460\l}"];
	Node0x55e6bc0 -> Node0x55d6880;
	Node0x55e6da0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%447:\l447:                                              \l  %448 = phi i32 [ %458, %447 ], [ 0, %407 ]\l  %449 = phi i64 [ %457, %447 ], [ 0, %407 ]\l  %450 = zext i32 %448 to i64\l  %451 = getelementptr inbounds i8, i8 addrspace(4)* %403, i64 %450\l  %452 = load i8, i8 addrspace(4)* %451, align 1, !tbaa !15\l  %453 = zext i8 %452 to i64\l  %454 = shl i32 %448, 3\l  %455 = zext i32 %454 to i64\l  %456 = shl nuw i64 %453, %455\l  %457 = or i64 %456, %449\l  %458 = add nuw nsw i32 %448, 1\l  %459 = icmp eq i32 %458, %404\l  br i1 %459, label %460, label %447\l|{<s0>T|<s1>F}}"];
	Node0x55e6da0:s0 -> Node0x55d6880;
	Node0x55e6da0:s1 -> Node0x55e6da0;
	Node0x55d6880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%460:\l460:                                              \l  %461 = phi i64 [ %446, %409 ], [ 0, %407 ], [ %457, %447 ]\l  %462 = shl nuw nsw i64 %43, 2\l  %463 = add nuw nsw i64 %462, 28\l  %464 = and i64 %463, 480\l  %465 = and i64 %45, -225\l  %466 = or i64 %465, %464\l  %467 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %23,\l... i64 noundef %466, i64 noundef %105, i64 noundef %165, i64 noundef %225, i64\l... noundef %285, i64 noundef %345, i64 noundef %405, i64 noundef %461) #10\l  %468 = sub i64 %35, %43\l  %469 = getelementptr inbounds i8, i8 addrspace(4)* %36, i64 %43\l  %470 = icmp eq i64 %468, 0\l  br i1 %470, label %471, label %34\l|{<s0>T|<s1>F}}"];
	Node0x55d6880:s0 -> Node0x55d5740;
	Node0x55d6880:s1 -> Node0x55d63e0;
	Node0x55d5740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%471:\l471:                                              \l  %472 = phi \<2 x i64\> [ %29, %26 ], [ %467, %460 ]\l  %473 = extractelement \<2 x i64\> %472, i64 0\l  %474 = bitcast double %17 to i64\l  %475 = and i64 %473, -227\l  %476 = or i64 %475, 34\l  %477 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %23,\l... i64 noundef %476, i64 noundef %474, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %478\l}"];
	Node0x55d5740 -> Node0x55d3100;
	Node0x55d3100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%478:\l478:                                              \l  ret void\l}"];
}
