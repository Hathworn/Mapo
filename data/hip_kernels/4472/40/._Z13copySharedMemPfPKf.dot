digraph "CFG for '_Z13copySharedMemPfPKf' function" {
	label="CFG for '_Z13copySharedMemPfPKf' function";

	Node0x5d80a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = shl i32 %3, 5\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = add i32 %4, %5\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = shl i32 %7, 5\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %10 = add i32 %8, %9\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !5\l  %15 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !14, !invariant.load\l... !15\l  %18 = zext i16 %17 to i32\l  %19 = udiv i32 %14, %18\l  %20 = mul i32 %19, %18\l  %21 = icmp ugt i32 %14, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = shl i32 %23, 5\l  %25 = mul nsw i32 %10, %24\l  %26 = add nsw i32 %25, %6\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %30 = shl nuw nsw i32 %9, 5\l  %31 = add nuw nsw i32 %30, %5\l  %32 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13copySharedMemPfPKfE4tile, i32 0, i32 %31\l  store float %29, float addrspace(3)* %32, align 4, !tbaa !16\l  %33 = add nsw i32 %10, 8\l  %34 = mul nsw i32 %33, %24\l  %35 = add nsw i32 %34, %6\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %39 = shl nuw nsw i32 %9, 5\l  %40 = add nuw nsw i32 %39, 256\l  %41 = add nuw nsw i32 %40, %5\l  %42 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13copySharedMemPfPKfE4tile, i32 0, i32 %41\l  store float %38, float addrspace(3)* %42, align 4, !tbaa !16\l  %43 = add nsw i32 %10, 16\l  %44 = mul nsw i32 %43, %24\l  %45 = add nsw i32 %44, %6\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %49 = shl nuw nsw i32 %9, 5\l  %50 = add nuw nsw i32 %49, 512\l  %51 = add nuw nsw i32 %50, %5\l  %52 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13copySharedMemPfPKfE4tile, i32 0, i32 %51\l  store float %48, float addrspace(3)* %52, align 4, !tbaa !16\l  %53 = add nsw i32 %10, 24\l  %54 = mul nsw i32 %53, %24\l  %55 = add nsw i32 %54, %6\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %59 = shl nuw nsw i32 %9, 5\l  %60 = add nuw nsw i32 %59, 768\l  %61 = add nuw nsw i32 %60, %5\l  %62 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13copySharedMemPfPKfE4tile, i32 0, i32 %61\l  store float %58, float addrspace(3)* %62, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %63 = load float, float addrspace(3)* %32, align 4, !tbaa !16\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  store float %63, float addrspace(1)* %64, align 4, !tbaa !16\l  %65 = load float, float addrspace(3)* %42, align 4, !tbaa !16\l  %66 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  store float %65, float addrspace(1)* %66, align 4, !tbaa !16\l  %67 = load float, float addrspace(3)* %52, align 4, !tbaa !16\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  store float %67, float addrspace(1)* %68, align 4, !tbaa !16\l  %69 = load float, float addrspace(3)* %62, align 4, !tbaa !16\l  %70 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  store float %69, float addrspace(1)* %70, align 4, !tbaa !16\l  ret void\l}"];
}
