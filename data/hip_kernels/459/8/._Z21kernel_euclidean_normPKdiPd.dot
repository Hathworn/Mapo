digraph "CFG for '_Z21kernel_euclidean_normPKdiPd' function" {
	label="CFG for '_Z21kernel_euclidean_normPKdiPd' function";

	Node0x4b26950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = zext i32 %4 to i64\l  %6 = getelementptr inbounds double, double addrspace(1)* %0, i64 %5\l  %7 = load double, double addrspace(1)* %6, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %8 = fmul contract double %7, %7\l  %9 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @square, i32 0, i32 %4\l  store double %8, double addrspace(3)* %9, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %10 = icmp eq i32 %4, 0\l  br i1 %10, label %11, label %95\l|{<s0>T|<s1>F}}"];
	Node0x4b26950:s0 -> Node0x4b28d80;
	Node0x4b26950:s1 -> Node0x4b28e10;
	Node0x4b28d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%11:\l11:                                               \l  %12 = icmp sgt i32 %1, 0\l  br i1 %12, label %13, label %33\l|{<s0>T|<s1>F}}"];
	Node0x4b28d80:s0 -> Node0x4b28fe0;
	Node0x4b28d80:s1 -> Node0x4b29030;
	Node0x4b28fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%13:\l13:                                               \l  %14 = and i32 %1, 7\l  %15 = icmp ult i32 %1, 8\l  br i1 %15, label %18, label %16\l|{<s0>T|<s1>F}}"];
	Node0x4b28fe0:s0 -> Node0x4b292c0;
	Node0x4b28fe0:s1 -> Node0x4b29310;
	Node0x4b29310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%16:\l16:                                               \l  %17 = and i32 %1, -8\l  br label %57\l}"];
	Node0x4b29310 -> Node0x4b27c70;
	Node0x4b292c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%18:\l18:                                               \l  %19 = phi double [ undef, %13 ], [ %91, %57 ]\l  %20 = phi i32 [ 0, %13 ], [ %92, %57 ]\l  %21 = phi double [ 0.000000e+00, %13 ], [ %91, %57 ]\l  %22 = icmp eq i32 %14, 0\l  br i1 %22, label %33, label %23\l|{<s0>T|<s1>F}}"];
	Node0x4b292c0:s0 -> Node0x4b29030;
	Node0x4b292c0:s1 -> Node0x4b2a810;
	Node0x4b2a810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i32 [ %30, %23 ], [ %20, %18 ]\l  %25 = phi double [ %29, %23 ], [ %21, %18 ]\l  %26 = phi i32 [ %31, %23 ], [ 0, %18 ]\l  %27 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @square, i32 0, i32 %24\l  %28 = load double, double addrspace(3)* %27, align 8, !tbaa !5\l  %29 = fadd contract double %25, %28\l  %30 = add nuw nsw i32 %24, 1\l  %31 = add i32 %26, 1\l  %32 = icmp eq i32 %31, %14\l  br i1 %32, label %33, label %23, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4b2a810:s0 -> Node0x4b29030;
	Node0x4b2a810:s1 -> Node0x4b2a810;
	Node0x4b29030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%33:\l33:                                               \l  %34 = phi double [ 0.000000e+00, %11 ], [ %19, %18 ], [ %29, %23 ]\l  %35 = fcmp olt double %34, 0x1000000000000000\l  %36 = select i1 %35, double 0x4FF0000000000000, double 1.000000e+00\l  %37 = fmul double %34, %36\l  %38 = tail call double @llvm.amdgcn.rsq.f64(double %37)\l  %39 = fmul double %37, %38\l  %40 = fmul double %38, 5.000000e-01\l  %41 = fneg double %40\l  %42 = tail call double @llvm.fma.f64(double %41, double %39, double\l... 5.000000e-01)\l  %43 = tail call double @llvm.fma.f64(double %40, double %42, double %40)\l  %44 = tail call double @llvm.fma.f64(double %39, double %42, double %39)\l  %45 = fneg double %44\l  %46 = tail call double @llvm.fma.f64(double %45, double %44, double %37)\l  %47 = tail call double @llvm.fma.f64(double %46, double %43, double %44)\l  %48 = fneg double %47\l  %49 = tail call double @llvm.fma.f64(double %48, double %47, double %37)\l  %50 = tail call double @llvm.fma.f64(double %49, double %43, double %47)\l  %51 = select i1 %35, double 0x37F0000000000000, double 1.000000e+00\l  %52 = fmul double %51, %50\l  %53 = fcmp oeq double %37, 0.000000e+00\l  %54 = fcmp oeq double %37, 0x7FF0000000000000\l  %55 = or i1 %53, %54\l  %56 = select i1 %55, double %37, double %52\l  store double %56, double addrspace(1)* %2, align 8, !tbaa !5\l  br label %95\l}"];
	Node0x4b29030 -> Node0x4b28e10;
	Node0x4b27c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%57:\l57:                                               \l  %58 = phi i32 [ 0, %16 ], [ %92, %57 ]\l  %59 = phi double [ 0.000000e+00, %16 ], [ %91, %57 ]\l  %60 = phi i32 [ 0, %16 ], [ %93, %57 ]\l  %61 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @square, i32 0, i32 %58\l  %62 = load double, double addrspace(3)* %61, align 8, !tbaa !5\l  %63 = fadd contract double %59, %62\l  %64 = or i32 %58, 1\l  %65 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @square, i32 0, i32 %64\l  %66 = load double, double addrspace(3)* %65, align 8, !tbaa !5\l  %67 = fadd contract double %63, %66\l  %68 = or i32 %58, 2\l  %69 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @square, i32 0, i32 %68\l  %70 = load double, double addrspace(3)* %69, align 8, !tbaa !5\l  %71 = fadd contract double %67, %70\l  %72 = or i32 %58, 3\l  %73 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @square, i32 0, i32 %72\l  %74 = load double, double addrspace(3)* %73, align 8, !tbaa !5\l  %75 = fadd contract double %71, %74\l  %76 = or i32 %58, 4\l  %77 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @square, i32 0, i32 %76\l  %78 = load double, double addrspace(3)* %77, align 8, !tbaa !5\l  %79 = fadd contract double %75, %78\l  %80 = or i32 %58, 5\l  %81 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @square, i32 0, i32 %80\l  %82 = load double, double addrspace(3)* %81, align 8, !tbaa !5\l  %83 = fadd contract double %79, %82\l  %84 = or i32 %58, 6\l  %85 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @square, i32 0, i32 %84\l  %86 = load double, double addrspace(3)* %85, align 8, !tbaa !5\l  %87 = fadd contract double %83, %86\l  %88 = or i32 %58, 7\l  %89 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @square, i32 0, i32 %88\l  %90 = load double, double addrspace(3)* %89, align 8, !tbaa !5\l  %91 = fadd contract double %87, %90\l  %92 = add nuw nsw i32 %58, 8\l  %93 = add nuw i32 %60, 8\l  %94 = icmp eq i32 %93, %17\l  br i1 %94, label %18, label %57, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4b27c70:s0 -> Node0x4b292c0;
	Node0x4b27c70:s1 -> Node0x4b27c70;
	Node0x4b28e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%95:\l95:                                               \l  ret void\l}"];
}
