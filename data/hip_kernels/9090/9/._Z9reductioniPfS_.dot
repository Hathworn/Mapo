digraph "CFG for '_Z9reductioniPfS_' function" {
	label="CFG for '_Z9reductioniPfS_' function";

	Node0x63afee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = udiv i32 %13, %10\l  %15 = mul i32 %14, %10\l  %16 = icmp ugt i32 %13, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = mul i32 %5, %10\l  %20 = add i32 %19, %4\l  %21 = icmp slt i32 %20, %0\l  br i1 %21, label %22, label %27\l|{<s0>T|<s1>F}}"];
	Node0x63afee0:s0 -> Node0x63b0c70;
	Node0x63afee0:s1 -> Node0x63b24b0;
	Node0x63b0c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%22:\l22:                                               \l  %23 = sext i32 %20 to i64\l  %24 = getelementptr inbounds float, float addrspace(1)* %1, i64 %23\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %26 = fadd contract float %25, 0.000000e+00\l  br label %27\l}"];
	Node0x63b0c70 -> Node0x63b24b0;
	Node0x63b24b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi float [ %26, %22 ], [ 0.000000e+00, %3 ]\l  %29 = add i32 %18, %5\l  %30 = mul i32 %29, %10\l  %31 = add i32 %30, %4\l  %32 = icmp slt i32 %31, %0\l  br i1 %32, label %33, label %38\l|{<s0>T|<s1>F}}"];
	Node0x63b24b0:s0 -> Node0x63b2120;
	Node0x63b24b0:s1 -> Node0x63b2170;
	Node0x63b2120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%33:\l33:                                               \l  %34 = sext i32 %31 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %37 = fadd contract float %28, %36\l  br label %38\l}"];
	Node0x63b2120 -> Node0x63b2170;
	Node0x63b2170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi float [ %37, %33 ], [ %28, %27 ]\l  %40 = shl i32 %18, 1\l  %41 = add i32 %40, %5\l  %42 = mul i32 %41, %10\l  %43 = add i32 %42, %4\l  %44 = icmp slt i32 %43, %0\l  br i1 %44, label %45, label %50\l|{<s0>T|<s1>F}}"];
	Node0x63b2170:s0 -> Node0x63b4c10;
	Node0x63b2170:s1 -> Node0x63b4c60;
	Node0x63b4c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%45:\l45:                                               \l  %46 = sext i32 %43 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %49 = fadd contract float %39, %48\l  br label %50\l}"];
	Node0x63b4c10 -> Node0x63b4c60;
	Node0x63b4c60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi float [ %49, %45 ], [ %39, %38 ]\l  %52 = mul i32 %18, 3\l  %53 = add i32 %52, %5\l  %54 = mul i32 %53, %10\l  %55 = add i32 %54, %4\l  %56 = icmp slt i32 %55, %0\l  br i1 %56, label %57, label %62\l|{<s0>T|<s1>F}}"];
	Node0x63b4c60:s0 -> Node0x63b53a0;
	Node0x63b4c60:s1 -> Node0x63b53f0;
	Node0x63b53a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%57:\l57:                                               \l  %58 = sext i32 %55 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %1, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %61 = fadd contract float %51, %60\l  br label %62\l}"];
	Node0x63b53a0 -> Node0x63b53f0;
	Node0x63b53f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  %63 = phi float [ %61, %57 ], [ %51, %50 ]\l  %64 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ9reductioniPfS_E5s_sum, i32 0, i32 %4\l  %65 = addrspacecast float addrspace(3)* %64 to float*\l  store volatile float %63, float* %65, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %66 = icmp ult i32 %4, 128\l  br i1 %66, label %67, label %74\l|{<s0>T|<s1>F}}"];
	Node0x63b53f0:s0 -> Node0x63b5fb0;
	Node0x63b53f0:s1 -> Node0x63b6040;
	Node0x63b5fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%67:\l67:                                               \l  %68 = add nuw nsw i32 %4, 128\l  %69 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ9reductioniPfS_E5s_sum, i32 0, i32 %68\l  %70 = addrspacecast float addrspace(3)* %69 to float*\l  %71 = load volatile float, float* %70, align 4, !tbaa !16\l  %72 = load volatile float, float* %65, align 4, !tbaa !16\l  %73 = fadd contract float %71, %72\l  store volatile float %73, float* %65, align 4, !tbaa !16\l  br label %74\l}"];
	Node0x63b5fb0 -> Node0x63b6040;
	Node0x63b6040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %75 = icmp ult i32 %4, 64\l  br i1 %75, label %76, label %83\l|{<s0>T|<s1>F}}"];
	Node0x63b6040:s0 -> Node0x63b67f0;
	Node0x63b6040:s1 -> Node0x63b6840;
	Node0x63b67f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%76:\l76:                                               \l  %77 = add nuw nsw i32 %4, 64\l  %78 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ9reductioniPfS_E5s_sum, i32 0, i32 %77\l  %79 = addrspacecast float addrspace(3)* %78 to float*\l  %80 = load volatile float, float* %79, align 4, !tbaa !16\l  %81 = load volatile float, float* %65, align 4, !tbaa !16\l  %82 = fadd contract float %80, %81\l  store volatile float %82, float* %65, align 4, !tbaa !16\l  br label %83\l}"];
	Node0x63b67f0 -> Node0x63b6840;
	Node0x63b6840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %84 = icmp ult i32 %4, 32\l  br i1 %84, label %85, label %92\l|{<s0>T|<s1>F}}"];
	Node0x63b6840:s0 -> Node0x63b6fa0;
	Node0x63b6840:s1 -> Node0x63b6ff0;
	Node0x63b6fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%85:\l85:                                               \l  %86 = add nuw nsw i32 %4, 32\l  %87 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ9reductioniPfS_E5s_sum, i32 0, i32 %86\l  %88 = addrspacecast float addrspace(3)* %87 to float*\l  %89 = load volatile float, float* %88, align 4, !tbaa !16\l  %90 = load volatile float, float* %65, align 4, !tbaa !16\l  %91 = fadd contract float %89, %90\l  store volatile float %91, float* %65, align 4, !tbaa !16\l  br label %92\l}"];
	Node0x63b6fa0 -> Node0x63b6ff0;
	Node0x63b6ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%92:\l92:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %93 = icmp ult i32 %4, 16\l  br i1 %93, label %94, label %101\l|{<s0>T|<s1>F}}"];
	Node0x63b6ff0:s0 -> Node0x63b7750;
	Node0x63b6ff0:s1 -> Node0x63b77a0;
	Node0x63b7750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%94:\l94:                                               \l  %95 = add nuw nsw i32 %4, 16\l  %96 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ9reductioniPfS_E5s_sum, i32 0, i32 %95\l  %97 = addrspacecast float addrspace(3)* %96 to float*\l  %98 = load volatile float, float* %97, align 4, !tbaa !16\l  %99 = load volatile float, float* %65, align 4, !tbaa !16\l  %100 = fadd contract float %98, %99\l  store volatile float %100, float* %65, align 4, !tbaa !16\l  br label %101\l}"];
	Node0x63b7750 -> Node0x63b77a0;
	Node0x63b77a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%101:\l101:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %102 = icmp ult i32 %4, 8\l  br i1 %102, label %103, label %110\l|{<s0>T|<s1>F}}"];
	Node0x63b77a0:s0 -> Node0x63b7f00;
	Node0x63b77a0:s1 -> Node0x63b7f50;
	Node0x63b7f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%103:\l103:                                              \l  %104 = add nuw nsw i32 %4, 8\l  %105 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ9reductioniPfS_E5s_sum, i32 0, i32 %104\l  %106 = addrspacecast float addrspace(3)* %105 to float*\l  %107 = load volatile float, float* %106, align 4, !tbaa !16\l  %108 = load volatile float, float* %65, align 4, !tbaa !16\l  %109 = fadd contract float %107, %108\l  store volatile float %109, float* %65, align 4, !tbaa !16\l  br label %110\l}"];
	Node0x63b7f00 -> Node0x63b7f50;
	Node0x63b7f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%110:\l110:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %111 = icmp ult i32 %4, 4\l  br i1 %111, label %112, label %119\l|{<s0>T|<s1>F}}"];
	Node0x63b7f50:s0 -> Node0x63b86b0;
	Node0x63b7f50:s1 -> Node0x63b8700;
	Node0x63b86b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%112:\l112:                                              \l  %113 = add nuw nsw i32 %4, 4\l  %114 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ9reductioniPfS_E5s_sum, i32 0, i32 %113\l  %115 = addrspacecast float addrspace(3)* %114 to float*\l  %116 = load volatile float, float* %115, align 4, !tbaa !16\l  %117 = load volatile float, float* %65, align 4, !tbaa !16\l  %118 = fadd contract float %116, %117\l  store volatile float %118, float* %65, align 4, !tbaa !16\l  br label %119\l}"];
	Node0x63b86b0 -> Node0x63b8700;
	Node0x63b8700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%119:\l119:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %120 = icmp ult i32 %4, 2\l  br i1 %120, label %121, label %128\l|{<s0>T|<s1>F}}"];
	Node0x63b8700:s0 -> Node0x63b8e60;
	Node0x63b8700:s1 -> Node0x63b8eb0;
	Node0x63b8e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%121:\l121:                                              \l  %122 = add nuw nsw i32 %4, 2\l  %123 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ9reductioniPfS_E5s_sum, i32 0, i32 %122\l  %124 = addrspacecast float addrspace(3)* %123 to float*\l  %125 = load volatile float, float* %124, align 4, !tbaa !16\l  %126 = load volatile float, float* %65, align 4, !tbaa !16\l  %127 = fadd contract float %125, %126\l  store volatile float %127, float* %65, align 4, !tbaa !16\l  br label %128\l}"];
	Node0x63b8e60 -> Node0x63b8eb0;
	Node0x63b8eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%128:\l128:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %129 = icmp eq i32 %4, 0\l  br i1 %129, label %130, label %137\l|{<s0>T|<s1>F}}"];
	Node0x63b8eb0:s0 -> Node0x63b5b50;
	Node0x63b8eb0:s1 -> Node0x63b5ba0;
	Node0x63b5b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%130:\l130:                                              \l  %131 = load volatile float, float* addrspacecast (float addrspace(3)*\l... getelementptr inbounds ([256 x float], [256 x float] addrspace(3)*\l... @_ZZ9reductioniPfS_E5s_sum, i32 0, i32 1) to float*), align 4, !tbaa !16\l  %132 = load volatile float, float* %65, align 4, !tbaa !16\l  %133 = fadd contract float %131, %132\l  store volatile float %133, float* %65, align 4, !tbaa !16\l  %134 = load volatile float, float* %65, align 4, !tbaa !16\l  %135 = sext i32 %5 to i64\l  %136 = getelementptr inbounds float, float addrspace(1)* %2, i64 %135\l  store float %134, float addrspace(1)* %136, align 4, !tbaa !16\l  br label %137\l}"];
	Node0x63b5b50 -> Node0x63b5ba0;
	Node0x63b5ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%137:\l137:                                              \l  ret void\l}"];
}
