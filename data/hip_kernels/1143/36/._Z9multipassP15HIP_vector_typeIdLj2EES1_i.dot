digraph "CFG for '_Z9multipassP15HIP_vector_typeIdLj2EES1_i' function" {
	label="CFG for '_Z9multipassP15HIP_vector_typeIdLj2EES1_i' function";

	Node0x625bef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !4\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 16\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 8, !tbaa !16\l  %24 = mul nuw nsw i32 %15, %20\l  %25 = add nuw nsw i32 %24, %5\l  %26 = mul nuw nsw i32 %25, %11\l  %27 = add nuw nsw i32 %26, %4\l  %28 = udiv i32 %14, %11\l  %29 = mul i32 %28, %11\l  %30 = icmp ugt i32 %14, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = udiv i32 %23, %20\l  %34 = mul i32 %33, %20\l  %35 = icmp ugt i32 %23, %34\l  %36 = zext i1 %35 to i32\l  %37 = add i32 %33, %36\l  %38 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %39 = mul i32 %37, %38\l  %40 = add i32 %39, %16\l  %41 = mul i32 %40, %32\l  %42 = add i32 %41, %7\l  %43 = getelementptr i8, i8 addrspace(4)* %6, i64 8\l  %44 = bitcast i8 addrspace(4)* %43 to i16 addrspace(4)*\l  %45 = load i16, i16 addrspace(4)* %44, align 4, !range !5, !invariant.load !6\l  %46 = zext i16 %45 to i32\l  %47 = mul i32 %42, %46\l  %48 = add i32 %47, %15\l  %49 = mul i32 %48, %20\l  %50 = add i32 %49, %5\l  %51 = mul i32 %50, %11\l  %52 = add i32 %51, %4\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %53\l  %55 = getelementptr inbounds [0 x %struct.HIP_vector_type], [0 x\l... %struct.HIP_vector_type] addrspace(3)* @sdata, i32 0, i32 %27\l  %56 = bitcast %struct.HIP_vector_type addrspace(3)* %55 to i8 addrspace(3)*\l  %57 = bitcast %struct.HIP_vector_type addrspace(1)* %54 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p3i8.p1i8.i64(i8 addrspace(3)* noundef align 16\l... dereferenceable(16) %56, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %57, i64 16, i1 false)\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %58 = icmp ult i16 %10, 2\l  br i1 %58, label %62, label %59\l|{<s0>T|<s1>F}}"];
	Node0x625bef0:s0 -> Node0x62622c0;
	Node0x625bef0:s1 -> Node0x6262350;
	Node0x6262350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%59:\l59:                                               \l  %60 = getelementptr %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(3)* %55, i32 0, i32 0, i32 0, i32 0, i32 0\l  %61 = getelementptr inbounds [0 x %struct.HIP_vector_type], [0 x\l... %struct.HIP_vector_type] addrspace(3)* @sdata, i32 0, i32 %27, i32 0, i32 0,\l... i32 0, i32 1\l  br label %64\l}"];
	Node0x6262350 -> Node0x62626f0;
	Node0x62622c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%62:\l62:                                               \l  %63 = icmp eq i32 %27, 0\l  br i1 %63, label %80, label %84\l|{<s0>T|<s1>F}}"];
	Node0x62622c0:s0 -> Node0x6262880;
	Node0x62622c0:s1 -> Node0x62628d0;
	Node0x62626f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = phi i32 [ %11, %59 ], [ %66, %78 ]\l  %66 = lshr i32 %65, 1\l  %67 = icmp ult i32 %27, %66\l  br i1 %67, label %68, label %78\l|{<s0>T|<s1>F}}"];
	Node0x62626f0:s0 -> Node0x6262eb0;
	Node0x62626f0:s1 -> Node0x6260bb0;
	Node0x6262eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%68:\l68:                                               \l  %69 = add nuw i32 %66, %27\l  %70 = getelementptr inbounds [0 x %struct.HIP_vector_type], [0 x\l... %struct.HIP_vector_type] addrspace(3)* @sdata, i32 0, i32 %69, i32 0, i32 0,\l... i32 0, i32 0\l  %71 = load double, double addrspace(3)* %70, align 16, !tbaa !17\l  %72 = load double, double addrspace(3)* %60, align 16, !tbaa !17\l  %73 = fadd contract double %71, %72\l  store double %73, double addrspace(3)* %60, align 16, !tbaa !17\l  %74 = getelementptr inbounds [0 x %struct.HIP_vector_type], [0 x\l... %struct.HIP_vector_type] addrspace(3)* @sdata, i32 0, i32 %69, i32 0, i32 0,\l... i32 0, i32 1\l  %75 = load double, double addrspace(3)* %74, align 8, !tbaa !17\l  %76 = load double, double addrspace(3)* %61, align 8, !tbaa !17\l  %77 = fadd contract double %75, %76\l  store double %77, double addrspace(3)* %61, align 8, !tbaa !17\l  br label %78\l}"];
	Node0x6262eb0 -> Node0x6260bb0;
	Node0x6260bb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%78:\l78:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %79 = icmp ult i32 %65, 4\l  br i1 %79, label %62, label %64, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x6260bb0:s0 -> Node0x62622c0;
	Node0x6260bb0:s1 -> Node0x62626f0;
	Node0x6262880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%80:\l80:                                               \l  %81 = zext i32 %42 to i64\l  %82 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %81\l  %83 = bitcast %struct.HIP_vector_type addrspace(1)* %82 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p3i8.i64(i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %83, i8 addrspace(3)* noundef align 16\l... dereferenceable(16) bitcast ([0 x %struct.HIP_vector_type] addrspace(3)*\l... @sdata to i8 addrspace(3)*), i64 16, i1 false)\l  br label %84\l}"];
	Node0x6262880 -> Node0x62628d0;
	Node0x62628d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%84:\l84:                                               \l  ret void\l}"];
}
