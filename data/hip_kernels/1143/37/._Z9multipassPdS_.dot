digraph "CFG for '_Z9multipassPdS_' function" {
	label="CFG for '_Z9multipassPdS_' function";

	Node0x61737a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 16\l  %21 = bitcast i8 addrspace(4)* %20 to i32 addrspace(4)*\l  %22 = load i32, i32 addrspace(4)* %21, align 8, !tbaa !16\l  %23 = mul nuw nsw i32 %14, %19\l  %24 = add nuw nsw i32 %23, %4\l  %25 = mul nuw nsw i32 %24, %10\l  %26 = add nuw nsw i32 %25, %3\l  %27 = udiv i32 %13, %10\l  %28 = mul i32 %27, %10\l  %29 = icmp ugt i32 %13, %28\l  %30 = zext i1 %29 to i32\l  %31 = add i32 %27, %30\l  %32 = udiv i32 %22, %19\l  %33 = mul i32 %32, %19\l  %34 = icmp ugt i32 %22, %33\l  %35 = zext i1 %34 to i32\l  %36 = add i32 %32, %35\l  %37 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %38 = mul i32 %36, %37\l  %39 = add i32 %38, %15\l  %40 = mul i32 %39, %31\l  %41 = add i32 %40, %6\l  %42 = getelementptr i8, i8 addrspace(4)* %5, i64 8\l  %43 = bitcast i8 addrspace(4)* %42 to i16 addrspace(4)*\l  %44 = load i16, i16 addrspace(4)* %43, align 4, !range !5, !invariant.load !6\l  %45 = zext i16 %44 to i32\l  %46 = mul i32 %41, %45\l  %47 = add i32 %46, %14\l  %48 = mul i32 %47, %19\l  %49 = add i32 %48, %4\l  %50 = mul i32 %49, %10\l  %51 = add i32 %50, %3\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds double, double addrspace(1)* %0, i64 %52\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !17,\l... !amdgpu.noclobber !6\l  %55 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdatad, i32 0, i32 %26\l  store double %54, double addrspace(3)* %55, align 8, !tbaa !17\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %56 = icmp ult i16 %9, 2\l  br i1 %56, label %57, label %59\l|{<s0>T|<s1>F}}"];
	Node0x61737a0:s0 -> Node0x6179770;
	Node0x61737a0:s1 -> Node0x6179800;
	Node0x6179770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%57:\l57:                                               \l  %58 = icmp eq i32 %26, 0\l  br i1 %58, label %71, label %75\l|{<s0>T|<s1>F}}"];
	Node0x6179770:s0 -> Node0x61799d0;
	Node0x6179770:s1 -> Node0x6179a20;
	Node0x6179800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi i32 [ %61, %69 ], [ %10, %2 ]\l  %61 = lshr i32 %60, 1\l  %62 = icmp ult i32 %26, %61\l  br i1 %62, label %63, label %69\l|{<s0>T|<s1>F}}"];
	Node0x6179800:s0 -> Node0x6179e20;
	Node0x6179800:s1 -> Node0x6179b90;
	Node0x6179e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%63:\l63:                                               \l  %64 = add nuw i32 %61, %26\l  %65 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdatad, i32 0, i32 %64\l  %66 = load double, double addrspace(3)* %65, align 8, !tbaa !17\l  %67 = load double, double addrspace(3)* %55, align 8, !tbaa !17\l  %68 = fadd contract double %66, %67\l  store double %68, double addrspace(3)* %55, align 8, !tbaa !17\l  br label %69\l}"];
	Node0x6179e20 -> Node0x6179b90;
	Node0x6179b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %70 = icmp ult i32 %60, 4\l  br i1 %70, label %57, label %59, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x6179b90:s0 -> Node0x6179770;
	Node0x6179b90:s1 -> Node0x6179800;
	Node0x61799d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%71:\l71:                                               \l  %72 = load double, double addrspace(3)* getelementptr inbounds ([0 x\l... double], [0 x double] addrspace(3)* @sdatad, i32 0, i32 0), align 8, !tbaa !17\l  %73 = zext i32 %41 to i64\l  %74 = getelementptr inbounds double, double addrspace(1)* %1, i64 %73\l  store double %72, double addrspace(1)* %74, align 8, !tbaa !17\l  br label %75\l}"];
	Node0x61799d0 -> Node0x6179a20;
	Node0x6179a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%75:\l75:                                               \l  ret void\l}"];
}
