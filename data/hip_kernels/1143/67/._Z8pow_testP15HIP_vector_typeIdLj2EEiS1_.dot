digraph "CFG for '_Z8pow_testP15HIP_vector_typeIdLj2EEiS1_' function" {
	label="CFG for '_Z8pow_testP15HIP_vector_typeIdLj2EEiS1_' function";

	Node0x4d08dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = getelementptr inbounds %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(1)* %0, i64 0, i32 0, i32 0, i32 0\l  %5 = load \<2 x double\>, \<2 x double\> addrspace(1)* %4, align 16,\l... !amdgpu.noclobber !4\l  %6 = extractelement \<2 x double\> %5, i64 0\l  %7 = fmul contract double %6, %6\l  %8 = extractelement \<2 x double\> %5, i64 1\l  %9 = fmul contract double %8, %8\l  %10 = fadd contract double %7, %9\l  %11 = fcmp olt double %10, 0x1000000000000000\l  %12 = select i1 %11, double 0x4FF0000000000000, double 1.000000e+00\l  %13 = fmul double %10, %12\l  %14 = tail call double @llvm.amdgcn.rsq.f64(double %13)\l  %15 = fmul double %13, %14\l  %16 = fmul double %14, 5.000000e-01\l  %17 = fneg double %16\l  %18 = tail call double @llvm.fma.f64(double %17, double %15, double\l... 5.000000e-01)\l  %19 = tail call double @llvm.fma.f64(double %16, double %18, double %16)\l  %20 = tail call double @llvm.fma.f64(double %15, double %18, double %15)\l  %21 = fneg double %20\l  %22 = tail call double @llvm.fma.f64(double %21, double %20, double %13)\l  %23 = tail call double @llvm.fma.f64(double %22, double %19, double %20)\l  %24 = fneg double %23\l  %25 = tail call double @llvm.fma.f64(double %24, double %23, double %13)\l  %26 = tail call double @llvm.fma.f64(double %25, double %19, double %23)\l  %27 = select i1 %11, double 0x37F0000000000000, double 1.000000e+00\l  %28 = fmul double %27, %26\l  %29 = fcmp oeq double %13, 0.000000e+00\l  %30 = fcmp oeq double %13, 0x7FF0000000000000\l  %31 = or i1 %29, %30\l  %32 = select i1 %31, double %13, double %28\l  %33 = fdiv contract double %8, %6\l  %34 = tail call double @llvm.fabs.f64(double %33)\l  %35 = fcmp ogt double %34, 1.000000e+00\l  %36 = fdiv double 1.000000e+00, %34\l  %37 = select i1 %35, double %36, double %34\l  %38 = fmul double %37, %37\l  %39 = tail call double @llvm.fma.f64(double %38, double 0x3EEBA404B5E68A13,\l... double 0xBF23E260BD3237F4)\l  %40 = tail call double @llvm.fma.f64(double %38, double %39, double\l... 0x3F4B2BB069EFB384)\l  %41 = tail call double @llvm.fma.f64(double %38, double %40, double\l... 0xBF67952DAF56DE9B)\l  %42 = tail call double @llvm.fma.f64(double %38, double %41, double\l... 0x3F7D6D43A595C56F)\l  %43 = tail call double @llvm.fma.f64(double %38, double %42, double\l... 0xBF8C6EA4A57D9582)\l  %44 = tail call double @llvm.fma.f64(double %38, double %43, double\l... 0x3F967E295F08B19F)\l  %45 = tail call double @llvm.fma.f64(double %38, double %44, double\l... 0xBF9E9AE6FC27006A)\l  %46 = tail call double @llvm.fma.f64(double %38, double %45, double\l... 0x3FA2C15B5711927A)\l  %47 = tail call double @llvm.fma.f64(double %38, double %46, double\l... 0xBFA59976E82D3FF0)\l  %48 = tail call double @llvm.fma.f64(double %38, double %47, double\l... 0x3FA82D5D6EF28734)\l  %49 = tail call double @llvm.fma.f64(double %38, double %48, double\l... 0xBFAAE5CE6A214619)\l  %50 = tail call double @llvm.fma.f64(double %38, double %49, double\l... 0x3FAE1BB48427B883)\l  %51 = tail call double @llvm.fma.f64(double %38, double %50, double\l... 0xBFB110E48B207F05)\l  %52 = tail call double @llvm.fma.f64(double %38, double %51, double\l... 0x3FB3B13657B87036)\l  %53 = tail call double @llvm.fma.f64(double %38, double %52, double\l... 0xBFB745D119378E4F)\l  %54 = tail call double @llvm.fma.f64(double %38, double %53, double\l... 0x3FBC71C717E1913C)\l  %55 = tail call double @llvm.fma.f64(double %38, double %54, double\l... 0xBFC2492492376B7D)\l  %56 = tail call double @llvm.fma.f64(double %38, double %55, double\l... 0x3FC99999999952CC)\l  %57 = tail call double @llvm.fma.f64(double %38, double %56, double\l... 0xBFD5555555555523)\l  %58 = fmul double %38, %57\l  %59 = tail call double @llvm.fma.f64(double %37, double %58, double %37)\l  %60 = fneg double %59\l  %61 = tail call double @llvm.fma.f64(double 0x3FEDD9AD336A0500, double\l... 0x3FFAF154EEB562D6, double %60)\l  %62 = select i1 %35, double %61, double %59\l  %63 = tail call double @llvm.copysign.f64(double %62, double %33)\l  %64 = sitofp i32 %1 to double\l  %65 = tail call double @llvm.fabs.f64(double %32)\l  %66 = tail call double @llvm.amdgcn.frexp.mant.f64(double %65)\l  %67 = fcmp olt double %66, 0x3FE5555555555555\l  %68 = zext i1 %67 to i32\l  %69 = tail call double @llvm.amdgcn.ldexp.f64(double %66, i32 %68)\l  %70 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %65)\l  %71 = sub nsw i32 %70, %68\l  %72 = fadd double %69, -1.000000e+00\l  %73 = fadd double %69, 1.000000e+00\l  %74 = fadd double %73, -1.000000e+00\l  %75 = fsub double %69, %74\l  %76 = tail call double @llvm.amdgcn.rcp.f64(double %73)\l  %77 = fneg double %73\l  %78 = tail call double @llvm.fma.f64(double %77, double %76, double\l... 1.000000e+00)\l  %79 = tail call double @llvm.fma.f64(double %78, double %76, double %76)\l  %80 = tail call double @llvm.fma.f64(double %77, double %79, double\l... 1.000000e+00)\l  %81 = tail call double @llvm.fma.f64(double %80, double %79, double %79)\l  %82 = fmul double %72, %81\l  %83 = fmul double %73, %82\l  %84 = fneg double %83\l  %85 = tail call double @llvm.fma.f64(double %82, double %73, double %84)\l  %86 = tail call double @llvm.fma.f64(double %82, double %75, double %85)\l  %87 = fadd double %83, %86\l  %88 = fsub double %87, %83\l  %89 = fsub double %86, %88\l  %90 = fsub double %72, %87\l  %91 = fsub double %72, %90\l  %92 = fsub double %91, %87\l  %93 = fsub double %92, %89\l  %94 = fadd double %90, %93\l  %95 = fmul double %81, %94\l  %96 = fadd double %82, %95\l  %97 = fsub double %96, %82\l  %98 = fsub double %95, %97\l  %99 = fmul double %96, %96\l  %100 = fneg double %99\l  %101 = tail call double @llvm.fma.f64(double %96, double %96, double %100)\l  %102 = fmul double %98, 2.000000e+00\l  %103 = tail call double @llvm.fma.f64(double %96, double %102, double %101)\l  %104 = fadd double %99, %103\l  %105 = fsub double %104, %99\l  %106 = fsub double %103, %105\l  %107 = tail call double @llvm.fma.f64(double %104, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %108 = tail call double @llvm.fma.f64(double %104, double %107, double\l... 0x3FBE25E43ABE935A)\l  %109 = tail call double @llvm.fma.f64(double %104, double %108, double\l... 0x3FC110EF47E6C9C2)\l  %110 = tail call double @llvm.fma.f64(double %104, double %109, double\l... 0x3FC3B13BCFA74449)\l  %111 = tail call double @llvm.fma.f64(double %104, double %110, double\l... 0x3FC745D171BF3C30)\l  %112 = tail call double @llvm.fma.f64(double %104, double %111, double\l... 0x3FCC71C71C7792CE)\l  %113 = tail call double @llvm.fma.f64(double %104, double %112, double\l... 0x3FD24924924920DA)\l  %114 = tail call double @llvm.fma.f64(double %104, double %113, double\l... 0x3FD999999999999C)\l  %115 = sitofp i32 %71 to double\l  %116 = fmul double %115, 0x3FE62E42FEFA39EF\l  %117 = fneg double %116\l  %118 = tail call double @llvm.fma.f64(double %115, double\l... 0x3FE62E42FEFA39EF, double %117)\l  %119 = tail call double @llvm.fma.f64(double %115, double\l... 0x3C7ABC9E3B39803F, double %118)\l  %120 = fadd double %116, %119\l  %121 = fsub double %120, %116\l  %122 = fsub double %119, %121\l  %123 = tail call double @llvm.amdgcn.ldexp.f64(double %96, i32 1)\l  %124 = tail call double @llvm.amdgcn.ldexp.f64(double %98, i32 1)\l  %125 = fmul double %96, %104\l  %126 = fneg double %125\l  %127 = tail call double @llvm.fma.f64(double %104, double %96, double %126)\l  %128 = tail call double @llvm.fma.f64(double %104, double %98, double %127)\l  %129 = tail call double @llvm.fma.f64(double %106, double %96, double %128)\l  %130 = fadd double %125, %129\l  %131 = fsub double %130, %125\l  %132 = fsub double %129, %131\l  %133 = fmul double %104, %114\l  %134 = fneg double %133\l  %135 = tail call double @llvm.fma.f64(double %104, double %114, double %134)\l  %136 = tail call double @llvm.fma.f64(double %106, double %114, double %135)\l  %137 = fadd double %133, %136\l  %138 = fsub double %137, %133\l  %139 = fsub double %136, %138\l  %140 = fadd double %137, 0x3FE5555555555555\l  %141 = fadd double %140, 0xBFE5555555555555\l  %142 = fsub double %137, %141\l  %143 = fadd double %139, 0x3C8543B0D5DF274D\l  %144 = fadd double %143, %142\l  %145 = fadd double %140, %144\l  %146 = fsub double %145, %140\l  %147 = fsub double %144, %146\l  %148 = fmul double %130, %145\l  %149 = fneg double %148\l  %150 = tail call double @llvm.fma.f64(double %130, double %145, double %149)\l  %151 = tail call double @llvm.fma.f64(double %130, double %147, double %150)\l  %152 = tail call double @llvm.fma.f64(double %132, double %145, double %151)\l  %153 = fadd double %148, %152\l  %154 = fsub double %153, %148\l  %155 = fsub double %152, %154\l  %156 = fadd double %123, %153\l  %157 = fsub double %156, %123\l  %158 = fsub double %153, %157\l  %159 = fadd double %124, %155\l  %160 = fadd double %159, %158\l  %161 = fadd double %156, %160\l  %162 = fsub double %161, %156\l  %163 = fsub double %160, %162\l  %164 = fadd double %120, %161\l  %165 = fsub double %164, %120\l  %166 = fsub double %164, %165\l  %167 = fsub double %120, %166\l  %168 = fsub double %161, %165\l  %169 = fadd double %168, %167\l  %170 = fadd double %122, %163\l  %171 = fsub double %170, %122\l  %172 = fsub double %170, %171\l  %173 = fsub double %122, %172\l  %174 = fsub double %163, %171\l  %175 = fadd double %174, %173\l  %176 = fadd double %170, %169\l  %177 = fadd double %164, %176\l  %178 = fsub double %177, %164\l  %179 = fsub double %176, %178\l  %180 = fadd double %175, %179\l  %181 = fadd double %177, %180\l  %182 = fsub double %181, %177\l  %183 = fsub double %180, %182\l  %184 = fmul double %181, %64\l  %185 = fneg double %184\l  %186 = tail call double @llvm.fma.f64(double %64, double %181, double %185)\l  %187 = tail call double @llvm.fma.f64(double %64, double %183, double %186)\l  %188 = fadd double %184, %187\l  %189 = fsub double %188, %184\l  %190 = fsub double %187, %189\l  %191 = tail call double @llvm.fabs.f64(double %184) #3\l  %192 = fcmp oeq double %191, 0x7FF0000000000000\l  %193 = select i1 %192, double %184, double %188\l  %194 = tail call double @llvm.fabs.f64(double %193) #3\l  %195 = fcmp oeq double %194, 0x7FF0000000000000\l  %196 = select i1 %195, double 0.000000e+00, double %190\l  %197 = fmul double %193, 0x3FF71547652B82FE\l  %198 = tail call double @llvm.rint.f64(double %197)\l  %199 = fneg double %198\l  %200 = tail call double @llvm.fma.f64(double %199, double\l... 0x3FE62E42FEFA39EF, double %193)\l  %201 = tail call double @llvm.fma.f64(double %199, double\l... 0x3C7ABC9E3B39803F, double %200)\l  %202 = tail call double @llvm.fma.f64(double %201, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %203 = tail call double @llvm.fma.f64(double %201, double %202, double\l... 0x3EC71DEE623FDE64)\l  %204 = tail call double @llvm.fma.f64(double %201, double %203, double\l... 0x3EFA01997C89E6B0)\l  %205 = tail call double @llvm.fma.f64(double %201, double %204, double\l... 0x3F2A01A014761F6E)\l  %206 = tail call double @llvm.fma.f64(double %201, double %205, double\l... 0x3F56C16C1852B7B0)\l  %207 = tail call double @llvm.fma.f64(double %201, double %206, double\l... 0x3F81111111122322)\l  %208 = tail call double @llvm.fma.f64(double %201, double %207, double\l... 0x3FA55555555502A1)\l  %209 = tail call double @llvm.fma.f64(double %201, double %208, double\l... 0x3FC5555555555511)\l  %210 = tail call double @llvm.fma.f64(double %201, double %209, double\l... 0x3FE000000000000B)\l  %211 = tail call double @llvm.fma.f64(double %201, double %210, double\l... 1.000000e+00)\l  %212 = tail call double @llvm.fma.f64(double %201, double %211, double\l... 1.000000e+00)\l  %213 = fptosi double %198 to i32\l  %214 = tail call double @llvm.amdgcn.ldexp.f64(double %212, i32 %213)\l  %215 = fcmp ogt double %193, 1.024000e+03\l  %216 = select i1 %215, double 0x7FF0000000000000, double %214\l  %217 = fcmp olt double %193, -1.075000e+03\l  %218 = select i1 %217, double 0.000000e+00, double %216\l  %219 = tail call double @llvm.fma.f64(double %218, double %196, double %218)\l  %220 = tail call double @llvm.fabs.f64(double %218) #3\l  %221 = fcmp oeq double %220, 0x7FF0000000000000\l  %222 = select i1 %221, double %218, double %219\l  %223 = fcmp uge double %32, 0.000000e+00\l  %224 = and i32 %1, 1\l  %225 = icmp eq i32 %224, 0\l  %226 = or i1 %225, %223\l  %227 = select i1 %226, double 0.000000e+00, double -0.000000e+00\l  %228 = tail call double @llvm.copysign.f64(double %222, double %227)\l  %229 = fcmp oeq double %65, 0x7FF0000000000000\l  %230 = fcmp oeq double %32, 0.000000e+00\l  %231 = or i1 %230, %229\l  %232 = zext i1 %230 to i32\l  %233 = lshr i32 %1, 31\l  %234 = icmp eq i32 %233, %232\l  %235 = select i1 %234, double 0x7FF0000000000000, double 0.000000e+00\l  %236 = select i1 %225, double 0.000000e+00, double %32\l  %237 = tail call double @llvm.copysign.f64(double %235, double %236)\l  %238 = select i1 %231, double %237, double %228\l  %239 = fcmp uno double %32, 0.000000e+00\l  %240 = select i1 %239, double 0x7FF8000000000000, double %238\l  %241 = icmp eq i32 %1, 0\l  %242 = select i1 %241, double 1.000000e+00, double %240\l  %243 = fmul contract double %63, %64\l  %244 = tail call double @llvm.fabs.f64(double %243)\l  %245 = fcmp olt double %244, 0x41D0000000000000\l  br i1 %245, label %246, label %303\l|{<s0>T|<s1>F}}"];
	Node0x4d08dd0:s0 -> Node0x4d1c1f0;
	Node0x4d08dd0:s1 -> Node0x4d1c280;
	Node0x4d1c1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%246:\l246:                                              \l  %247 = fmul double %244, 0x3FE45F306DC9C883\l  %248 = tail call double @llvm.rint.f64(double %247)\l  %249 = tail call double @llvm.fma.f64(double %248, double\l... 0xBFF921FB54442D18, double %244)\l  %250 = tail call double @llvm.fma.f64(double %248, double\l... 0xBC91A62633145C00, double %249)\l  %251 = fmul double %248, 0x3C91A62633145C00\l  %252 = fneg double %251\l  %253 = tail call double @llvm.fma.f64(double %248, double\l... 0x3C91A62633145C00, double %252)\l  %254 = fsub double %249, %251\l  %255 = fsub double %249, %254\l  %256 = fsub double %255, %251\l  %257 = fsub double %254, %250\l  %258 = fadd double %257, %256\l  %259 = fsub double %258, %253\l  %260 = tail call double @llvm.fma.f64(double %248, double\l... 0xB97B839A252049C0, double %259)\l  %261 = fadd double %250, %260\l  %262 = fsub double %261, %250\l  %263 = fsub double %260, %262\l  %264 = fptosi double %248 to i32\l  %265 = fmul double %261, %261\l  %266 = fmul double %265, 5.000000e-01\l  %267 = fsub double 1.000000e+00, %266\l  %268 = fsub double 1.000000e+00, %267\l  %269 = fsub double %268, %266\l  %270 = fmul double %265, %265\l  %271 = tail call double @llvm.fma.f64(double %265, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %272 = tail call double @llvm.fma.f64(double %265, double %271, double\l... 0xBE927E4FA17F65F6)\l  %273 = tail call double @llvm.fma.f64(double %265, double %272, double\l... 0x3EFA01A019F4EC90)\l  %274 = tail call double @llvm.fma.f64(double %265, double %273, double\l... 0xBF56C16C16C16967)\l  %275 = tail call double @llvm.fma.f64(double %265, double %274, double\l... 0x3FA5555555555555)\l  %276 = fneg double %263\l  %277 = tail call double @llvm.fma.f64(double %261, double %276, double %269)\l  %278 = tail call double @llvm.fma.f64(double %270, double %275, double %277)\l  %279 = fadd double %267, %278\l  %280 = tail call double @llvm.fma.f64(double %265, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %281 = tail call double @llvm.fma.f64(double %265, double %280, double\l... 0x3EC71DE3796CDE01)\l  %282 = tail call double @llvm.fma.f64(double %265, double %281, double\l... 0xBF2A01A019E83E5C)\l  %283 = tail call double @llvm.fma.f64(double %265, double %282, double\l... 0x3F81111111110BB3)\l  %284 = fneg double %265\l  %285 = fmul double %261, %284\l  %286 = fmul double %263, 5.000000e-01\l  %287 = tail call double @llvm.fma.f64(double %285, double %283, double %286)\l  %288 = tail call double @llvm.fma.f64(double %265, double %287, double %276)\l  %289 = tail call double @llvm.fma.f64(double %285, double\l... 0xBFC5555555555555, double %288)\l  %290 = fsub double %261, %289\l  %291 = fneg double %290\l  %292 = and i32 %264, 1\l  %293 = icmp eq i32 %292, 0\l  %294 = select i1 %293, double %279, double %291\l  %295 = bitcast double %294 to \<2 x i32\>\l  %296 = shl i32 %264, 30\l  %297 = and i32 %296, -2147483648\l  %298 = extractelement \<2 x i32\> %295, i64 1\l  %299 = xor i32 %298, %297\l  %300 = insertelement \<2 x i32\> %295, i32 %299, i64 1\l  %301 = tail call i1 @llvm.amdgcn.class.f64(double %244, i32 504)\l  %302 = select i1 %301, \<2 x i32\> %300, \<2 x i32\> \<i32 0, i32 2146959360\>\l  br label %417\l}"];
	Node0x4d1c1f0 -> Node0x4d1fde0;
	Node0x4d1c280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%303:\l303:                                              \l  %304 = tail call double @llvm.amdgcn.trig.preop.f64(double %244, i32 0)\l  %305 = tail call double @llvm.amdgcn.trig.preop.f64(double %244, i32 1)\l  %306 = tail call double @llvm.amdgcn.trig.preop.f64(double %244, i32 2)\l  %307 = fcmp oge double %244, 0x7B00000000000000\l  %308 = tail call double @llvm.amdgcn.ldexp.f64(double %244, i32 -128)\l  %309 = select i1 %307, double %308, double %244\l  %310 = fmul double %306, %309\l  %311 = fneg double %310\l  %312 = tail call double @llvm.fma.f64(double %306, double %309, double %311)\l  %313 = fmul double %305, %309\l  %314 = fneg double %313\l  %315 = tail call double @llvm.fma.f64(double %305, double %309, double %314)\l  %316 = fmul double %304, %309\l  %317 = fneg double %316\l  %318 = tail call double @llvm.fma.f64(double %304, double %309, double %317)\l  %319 = fadd double %313, %318\l  %320 = fsub double %319, %313\l  %321 = fsub double %319, %320\l  %322 = fsub double %318, %320\l  %323 = fsub double %313, %321\l  %324 = fadd double %322, %323\l  %325 = fadd double %310, %315\l  %326 = fsub double %325, %310\l  %327 = fsub double %325, %326\l  %328 = fsub double %315, %326\l  %329 = fsub double %310, %327\l  %330 = fadd double %328, %329\l  %331 = fadd double %325, %324\l  %332 = fsub double %331, %325\l  %333 = fsub double %331, %332\l  %334 = fsub double %324, %332\l  %335 = fsub double %325, %333\l  %336 = fadd double %334, %335\l  %337 = fadd double %330, %336\l  %338 = fadd double %312, %337\l  %339 = fadd double %316, %319\l  %340 = fsub double %339, %316\l  %341 = fsub double %319, %340\l  %342 = fadd double %341, %331\l  %343 = fsub double %342, %341\l  %344 = fsub double %331, %343\l  %345 = fadd double %344, %338\l  %346 = tail call double @llvm.amdgcn.ldexp.f64(double %339, i32 -2)\l  %347 = tail call double @llvm.amdgcn.fract.f64(double %346)\l  %348 = tail call i1 @llvm.amdgcn.class.f64(double %346, i32 516)\l  %349 = select i1 %348, double 0.000000e+00, double %347\l  %350 = tail call double @llvm.amdgcn.ldexp.f64(double %349, i32 2)\l  %351 = fadd double %350, %342\l  %352 = fcmp olt double %351, 0.000000e+00\l  %353 = select i1 %352, double 4.000000e+00, double 0.000000e+00\l  %354 = fadd double %350, %353\l  %355 = fadd double %342, %354\l  %356 = fptosi double %355 to i32\l  %357 = sitofp i32 %356 to double\l  %358 = fsub double %354, %357\l  %359 = fadd double %342, %358\l  %360 = fsub double %359, %358\l  %361 = fsub double %342, %360\l  %362 = fadd double %345, %361\l  %363 = fcmp oge double %359, 5.000000e-01\l  %364 = zext i1 %363 to i32\l  %365 = add nsw i32 %364, %356\l  %366 = select i1 %363, double 1.000000e+00, double 0.000000e+00\l  %367 = fsub double %359, %366\l  %368 = fadd double %367, %362\l  %369 = fsub double %368, %367\l  %370 = fsub double %362, %369\l  %371 = fmul double %368, 0x3FF921FB54442D18\l  %372 = fneg double %371\l  %373 = tail call double @llvm.fma.f64(double %368, double\l... 0x3FF921FB54442D18, double %372)\l  %374 = tail call double @llvm.fma.f64(double %368, double\l... 0x3C91A62633145C07, double %373)\l  %375 = tail call double @llvm.fma.f64(double %370, double\l... 0x3FF921FB54442D18, double %374)\l  %376 = fadd double %371, %375\l  %377 = fsub double %376, %371\l  %378 = fsub double %375, %377\l  %379 = fmul double %376, %376\l  %380 = fmul double %379, 5.000000e-01\l  %381 = fsub double 1.000000e+00, %380\l  %382 = fsub double 1.000000e+00, %381\l  %383 = fsub double %382, %380\l  %384 = fmul double %379, %379\l  %385 = tail call double @llvm.fma.f64(double %379, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %386 = tail call double @llvm.fma.f64(double %379, double %385, double\l... 0xBE927E4FA17F65F6)\l  %387 = tail call double @llvm.fma.f64(double %379, double %386, double\l... 0x3EFA01A019F4EC90)\l  %388 = tail call double @llvm.fma.f64(double %379, double %387, double\l... 0xBF56C16C16C16967)\l  %389 = tail call double @llvm.fma.f64(double %379, double %388, double\l... 0x3FA5555555555555)\l  %390 = fneg double %378\l  %391 = tail call double @llvm.fma.f64(double %376, double %390, double %383)\l  %392 = tail call double @llvm.fma.f64(double %384, double %389, double %391)\l  %393 = fadd double %381, %392\l  %394 = tail call double @llvm.fma.f64(double %379, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %395 = tail call double @llvm.fma.f64(double %379, double %394, double\l... 0x3EC71DE3796CDE01)\l  %396 = tail call double @llvm.fma.f64(double %379, double %395, double\l... 0xBF2A01A019E83E5C)\l  %397 = tail call double @llvm.fma.f64(double %379, double %396, double\l... 0x3F81111111110BB3)\l  %398 = fneg double %379\l  %399 = fmul double %376, %398\l  %400 = fmul double %378, 5.000000e-01\l  %401 = tail call double @llvm.fma.f64(double %399, double %397, double %400)\l  %402 = tail call double @llvm.fma.f64(double %379, double %401, double %390)\l  %403 = tail call double @llvm.fma.f64(double %399, double\l... 0xBFC5555555555555, double %402)\l  %404 = fsub double %376, %403\l  %405 = fneg double %404\l  %406 = and i32 %365, 1\l  %407 = icmp eq i32 %406, 0\l  %408 = select i1 %407, double %393, double %405\l  %409 = bitcast double %408 to \<2 x i32\>\l  %410 = shl i32 %365, 30\l  %411 = and i32 %410, -2147483648\l  %412 = extractelement \<2 x i32\> %409, i64 1\l  %413 = xor i32 %412, %411\l  %414 = insertelement \<2 x i32\> %409, i32 %413, i64 1\l  %415 = tail call i1 @llvm.amdgcn.class.f64(double %244, i32 504)\l  %416 = select i1 %415, \<2 x i32\> %414, \<2 x i32\> \<i32 0, i32 2146959360\>\l  br label %417\l}"];
	Node0x4d1c280 -> Node0x4d1fde0;
	Node0x4d1fde0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%417:\l417:                                              \l  %418 = phi i32 [ %296, %246 ], [ %410, %303 ]\l  %419 = phi i32 [ %292, %246 ], [ %406, %303 ]\l  %420 = phi double [ %290, %246 ], [ %404, %303 ]\l  %421 = phi double [ %279, %246 ], [ %393, %303 ]\l  %422 = phi \<2 x i32\> [ %302, %246 ], [ %416, %303 ]\l  %423 = phi i1 [ %301, %246 ], [ %415, %303 ]\l  %424 = bitcast \<2 x i32\> %422 to double\l  %425 = fmul contract double %242, %424\l  %426 = icmp eq i32 %419, 0\l  %427 = select i1 %426, double %420, double %421\l  %428 = bitcast double %427 to \<2 x i32\>\l  %429 = bitcast double %243 to \<2 x i32\>\l  %430 = extractelement \<2 x i32\> %429, i64 1\l  %431 = xor i32 %418, %430\l  %432 = and i32 %431, -2147483648\l  %433 = extractelement \<2 x i32\> %428, i64 1\l  %434 = xor i32 %433, %432\l  %435 = insertelement \<2 x i32\> %428, i32 %434, i64 1\l  %436 = select i1 %423, \<2 x i32\> %435, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %437 = bitcast \<2 x i32\> %436 to double\l  %438 = fmul contract double %242, %437\l  %439 = insertelement \<2 x double\> undef, double %425, i64 0\l  %440 = insertelement \<2 x double\> %439, double %438, i64 1\l  %441 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 0, i32 0, i32 0, i32 0\l  store \<2 x double\> %440, \<2 x double\> addrspace(1)* %441, align 16\l  ret void\l}"];
}
