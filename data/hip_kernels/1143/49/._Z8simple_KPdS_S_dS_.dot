digraph "CFG for '_Z8simple_KPdS_S_dS_' function" {
	label="CFG for '_Z8simple_KPdS_S_dS_' function";

	Node0x528fd70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !4\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !13, !invariant.load\l... !14\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 16\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 8, !tbaa !15\l  %24 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !13, !invariant.load\l... !14\l  %27 = zext i16 %26 to i32\l  %28 = udiv i32 %23, %27\l  %29 = mul i32 %28, %27\l  %30 = icmp ugt i32 %23, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %34 = mul i32 %32, %33\l  %35 = add i32 %34, %7\l  %36 = mul i32 %35, %20\l  %37 = add i32 %36, %6\l  %38 = mul i32 %6, %15\l  %39 = mul i32 %7, %27\l  %40 = getelementptr i8, i8 addrspace(4)* %8, i64 8\l  %41 = bitcast i8 addrspace(4)* %40 to i16 addrspace(4)*\l  %42 = load i16, i16 addrspace(4)* %41, align 4, !range !13, !invariant.load\l... !14\l  %43 = zext i16 %42 to i32\l  %44 = mul i32 %33, %43\l  %45 = mul i32 %37, %43\l  %46 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !16\l  %47 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !16\l  %48 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %49 = add i32 %45, %47\l  %50 = mul i32 %49, %27\l  %51 = add i32 %50, %46\l  %52 = mul i32 %51, %15\l  %53 = add i32 %52, %48\l  %54 = add i32 %38, %48\l  %55 = add i32 %39, %46\l  %56 = add i32 %44, %47\l  %57 = fmul contract double %3, 2.000000e+00\l  %58 = fdiv contract double 0x31D3305E8D0C4422, %57\l  %59 = zext i32 %54 to i64\l  %60 = getelementptr inbounds double, double addrspace(1)* %0, i64 %59\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %62 = fmul contract double %61, %61\l  %63 = zext i32 %55 to i64\l  %64 = getelementptr inbounds double, double addrspace(1)* %1, i64 %63\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %66 = fmul contract double %65, %65\l  %67 = fadd contract double %62, %66\l  %68 = zext i32 %56 to i64\l  %69 = getelementptr inbounds double, double addrspace(1)* %2, i64 %68\l  %70 = load double, double addrspace(1)* %69, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %71 = fmul contract double %70, %70\l  %72 = fadd contract double %67, %71\l  %73 = fmul contract double %58, %72\l  %74 = zext i32 %53 to i64\l  %75 = getelementptr inbounds double, double addrspace(1)* %4, i64 %74\l  store double %73, double addrspace(1)* %75, align 8, !tbaa !17\l  ret void\l}"];
}
