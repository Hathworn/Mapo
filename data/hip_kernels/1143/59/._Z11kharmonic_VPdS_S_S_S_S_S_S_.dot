digraph "CFG for '_Z11kharmonic_VPdS_S_S_S_S_S_S_' function" {
	label="CFG for '_Z11kharmonic_VPdS_S_S_S_S_S_S_' function";

	Node0x5277840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !4\l  %15 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !13, !invariant.load\l... !14\l  %18 = zext i16 %17 to i32\l  %19 = udiv i32 %14, %18\l  %20 = mul i32 %19, %18\l  %21 = icmp ugt i32 %14, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 16\l  %25 = bitcast i8 addrspace(4)* %24 to i32 addrspace(4)*\l  %26 = load i32, i32 addrspace(4)* %25, align 8, !tbaa !15\l  %27 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*\l  %29 = load i16, i16 addrspace(4)* %28, align 2, !range !13, !invariant.load\l... !14\l  %30 = zext i16 %29 to i32\l  %31 = udiv i32 %26, %30\l  %32 = mul i32 %31, %30\l  %33 = icmp ugt i32 %26, %32\l  %34 = zext i1 %33 to i32\l  %35 = add i32 %31, %34\l  %36 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %37 = mul i32 %35, %36\l  %38 = add i32 %37, %10\l  %39 = mul i32 %38, %23\l  %40 = add i32 %39, %9\l  %41 = mul i32 %9, %18\l  %42 = mul i32 %10, %30\l  %43 = getelementptr i8, i8 addrspace(4)* %11, i64 8\l  %44 = bitcast i8 addrspace(4)* %43 to i16 addrspace(4)*\l  %45 = load i16, i16 addrspace(4)* %44, align 4, !range !13, !invariant.load\l... !14\l  %46 = zext i16 %45 to i32\l  %47 = mul i32 %36, %46\l  %48 = mul i32 %40, %46\l  %49 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !16\l  %50 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !16\l  %51 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %52 = add i32 %48, %50\l  %53 = mul i32 %52, %30\l  %54 = add i32 %53, %49\l  %55 = mul i32 %54, %18\l  %56 = add i32 %55, %51\l  %57 = add i32 %41, %51\l  %58 = add i32 %42, %49\l  %59 = add i32 %47, %50\l  %60 = getelementptr inbounds double, double addrspace(1)* %3, i64 3\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %62 = sext i32 %57 to i64\l  %63 = getelementptr inbounds double, double addrspace(1)* %0, i64 %62\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %65 = getelementptr inbounds double, double addrspace(1)* %3, i64 6\l  %66 = load double, double addrspace(1)* %65, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %67 = fadd contract double %64, %66\l  %68 = fmul contract double %61, %67\l  %69 = getelementptr inbounds double, double addrspace(1)* %3, i64 10\l  %70 = load double, double addrspace(1)* %69, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %71 = getelementptr inbounds double, double addrspace(1)* %3, i64 4\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %73 = fmul contract double %70, %72\l  %74 = sext i32 %58 to i64\l  %75 = getelementptr inbounds double, double addrspace(1)* %1, i64 %74\l  %76 = load double, double addrspace(1)* %75, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %77 = getelementptr inbounds double, double addrspace(1)* %3, i64 7\l  %78 = load double, double addrspace(1)* %77, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %79 = fadd contract double %76, %78\l  %80 = fmul contract double %73, %79\l  %81 = getelementptr inbounds double, double addrspace(1)* %3, i64 11\l  %82 = load double, double addrspace(1)* %81, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %83 = getelementptr inbounds double, double addrspace(1)* %3, i64 5\l  %84 = load double, double addrspace(1)* %83, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %85 = fmul contract double %82, %84\l  %86 = sext i32 %59 to i64\l  %87 = getelementptr inbounds double, double addrspace(1)* %2, i64 %86\l  %88 = load double, double addrspace(1)* %87, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %89 = getelementptr inbounds double, double addrspace(1)* %3, i64 8\l  %90 = load double, double addrspace(1)* %89, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %91 = fadd contract double %88, %90\l  %92 = fmul contract double %85, %91\l  %93 = getelementptr inbounds double, double addrspace(1)* %3, i64 9\l  %94 = load double, double addrspace(1)* %93, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %95 = fmul contract double %94, 5.000000e-01\l  %96 = fmul contract double %68, %68\l  %97 = fmul contract double %80, %80\l  %98 = fadd contract double %96, %97\l  %99 = fmul contract double %92, %92\l  %100 = fadd contract double %98, %99\l  %101 = sext i32 %56 to i64\l  %102 = getelementptr inbounds double, double addrspace(1)* %4, i64 %101\l  %103 = load double, double addrspace(1)* %102, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %104 = fmul contract double %103, %103\l  %105 = getelementptr inbounds double, double addrspace(1)* %5, i64 %101\l  %106 = load double, double addrspace(1)* %105, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %107 = fmul contract double %106, %106\l  %108 = fadd contract double %104, %107\l  %109 = getelementptr inbounds double, double addrspace(1)* %6, i64 %101\l  %110 = load double, double addrspace(1)* %109, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %111 = fmul contract double %110, %110\l  %112 = fadd contract double %108, %111\l  %113 = fadd contract double %100, %112\l  %114 = fmul contract double %95, %113\l  %115 = getelementptr inbounds double, double addrspace(1)* %7, i64 %101\l  store double %114, double addrspace(1)* %115, align 8, !tbaa !17\l  ret void\l}"];
}
