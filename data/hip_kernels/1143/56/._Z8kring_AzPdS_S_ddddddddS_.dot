digraph "CFG for '_Z8kring_AzPdS_S_ddddddddS_' function" {
	label="CFG for '_Z8kring_AzPdS_S_ddddddddS_' function";

	Node0x5e62ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %15, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !4\l  %19 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !13, !invariant.load\l... !14\l  %22 = zext i16 %21 to i32\l  %23 = udiv i32 %18, %22\l  %24 = mul i32 %23, %22\l  %25 = icmp ugt i32 %18, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = getelementptr inbounds i8, i8 addrspace(4)* %15, i64 16\l  %29 = bitcast i8 addrspace(4)* %28 to i32 addrspace(4)*\l  %30 = load i32, i32 addrspace(4)* %29, align 8, !tbaa !15\l  %31 = getelementptr i8, i8 addrspace(4)* %15, i64 6\l  %32 = bitcast i8 addrspace(4)* %31 to i16 addrspace(4)*\l  %33 = load i16, i16 addrspace(4)* %32, align 2, !range !13, !invariant.load\l... !14\l  %34 = zext i16 %33 to i32\l  %35 = udiv i32 %30, %34\l  %36 = mul i32 %35, %34\l  %37 = icmp ugt i32 %30, %36\l  %38 = zext i1 %37 to i32\l  %39 = add i32 %35, %38\l  %40 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %41 = mul i32 %39, %40\l  %42 = add i32 %41, %14\l  %43 = mul i32 %42, %27\l  %44 = add i32 %43, %13\l  %45 = mul i32 %13, %22\l  %46 = mul i32 %14, %34\l  %47 = getelementptr i8, i8 addrspace(4)* %15, i64 8\l  %48 = bitcast i8 addrspace(4)* %47 to i16 addrspace(4)*\l  %49 = load i16, i16 addrspace(4)* %48, align 4, !range !13, !invariant.load\l... !14\l  %50 = zext i16 %49 to i32\l  %51 = mul i32 %44, %50\l  %52 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !16\l  %53 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !16\l  %54 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %55 = add i32 %51, %53\l  %56 = mul i32 %55, %34\l  %57 = add i32 %56, %52\l  %58 = mul i32 %57, %22\l  %59 = add i32 %58, %54\l  %60 = add i32 %45, %54\l  %61 = add i32 %46, %52\l  %62 = sext i32 %60 to i64\l  %63 = getelementptr inbounds double, double addrspace(1)* %0, i64 %62\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %65 = fmul contract double %64, %64\l  %66 = sext i32 %61 to i64\l  %67 = getelementptr inbounds double, double addrspace(1)* %1, i64 %66\l  %68 = load double, double addrspace(1)* %67, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %69 = fmul contract double %68, %68\l  %70 = fadd contract double %65, %69\l  %71 = fcmp olt double %70, 0x1000000000000000\l  %72 = select i1 %71, double 0x4FF0000000000000, double 1.000000e+00\l  %73 = fmul double %70, %72\l  %74 = tail call double @llvm.amdgcn.rsq.f64(double %73)\l  %75 = fmul double %73, %74\l  %76 = fmul double %74, 5.000000e-01\l  %77 = fneg double %76\l  %78 = tail call double @llvm.fma.f64(double %77, double %75, double\l... 5.000000e-01)\l  %79 = tail call double @llvm.fma.f64(double %76, double %78, double %76)\l  %80 = tail call double @llvm.fma.f64(double %75, double %78, double %75)\l  %81 = fneg double %80\l  %82 = tail call double @llvm.fma.f64(double %81, double %80, double %73)\l  %83 = tail call double @llvm.fma.f64(double %82, double %79, double %80)\l  %84 = fneg double %83\l  %85 = tail call double @llvm.fma.f64(double %84, double %83, double %73)\l  %86 = tail call double @llvm.fma.f64(double %85, double %79, double %83)\l  %87 = select i1 %71, double 0x37F0000000000000, double 1.000000e+00\l  %88 = fmul double %87, %86\l  %89 = fcmp oeq double %73, 0.000000e+00\l  %90 = fcmp oeq double %73, 0x7FF0000000000000\l  %91 = or i1 %89, %90\l  %92 = select i1 %91, double %73, double %88\l  %93 = fneg contract double %92\l  %94 = fmul contract double %92, %93\l  %95 = fmul contract double %3, 1.000000e-04\l  %96 = fdiv contract double %94, %95\l  %97 = fmul double %96, 0x3FF71547652B82FE\l  %98 = tail call double @llvm.rint.f64(double %97)\l  %99 = fneg double %98\l  %100 = tail call double @llvm.fma.f64(double %99, double 0x3FE62E42FEFA39EF,\l... double %96)\l  %101 = tail call double @llvm.fma.f64(double %99, double 0x3C7ABC9E3B39803F,\l... double %100)\l  %102 = tail call double @llvm.fma.f64(double %101, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %103 = tail call double @llvm.fma.f64(double %101, double %102, double\l... 0x3EC71DEE623FDE64)\l  %104 = tail call double @llvm.fma.f64(double %101, double %103, double\l... 0x3EFA01997C89E6B0)\l  %105 = tail call double @llvm.fma.f64(double %101, double %104, double\l... 0x3F2A01A014761F6E)\l  %106 = tail call double @llvm.fma.f64(double %101, double %105, double\l... 0x3F56C16C1852B7B0)\l  %107 = tail call double @llvm.fma.f64(double %101, double %106, double\l... 0x3F81111111122322)\l  %108 = tail call double @llvm.fma.f64(double %101, double %107, double\l... 0x3FA55555555502A1)\l  %109 = tail call double @llvm.fma.f64(double %101, double %108, double\l... 0x3FC5555555555511)\l  %110 = tail call double @llvm.fma.f64(double %101, double %109, double\l... 0x3FE000000000000B)\l  %111 = tail call double @llvm.fma.f64(double %101, double %110, double\l... 1.000000e+00)\l  %112 = tail call double @llvm.fma.f64(double %101, double %111, double\l... 1.000000e+00)\l  %113 = fptosi double %98 to i32\l  %114 = tail call double @llvm.amdgcn.ldexp.f64(double %112, i32 %113)\l  %115 = fcmp ogt double %96, 1.024000e+03\l  %116 = select i1 %115, double 0x7FF0000000000000, double %114\l  %117 = fcmp olt double %96, -1.075000e+03\l  %118 = select i1 %117, double 0.000000e+00, double %116\l  %119 = fmul contract double %118, %9\l  %120 = fmul contract double %119, 1.000000e-02\l  %121 = sext i32 %59 to i64\l  %122 = getelementptr inbounds double, double addrspace(1)* %11, i64 %121\l  store double %120, double addrspace(1)* %122, align 8, !tbaa !17\l  ret void\l}"];
}
