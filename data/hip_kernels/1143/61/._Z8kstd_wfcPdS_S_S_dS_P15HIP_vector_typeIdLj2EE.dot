digraph "CFG for '_Z8kstd_wfcPdS_S_S_dS_P15HIP_vector_typeIdLj2EE' function" {
	label="CFG for '_Z8kstd_wfcPdS_S_S_dS_P15HIP_vector_typeIdLj2EE' function";

	Node0x4628ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !4\l  %14 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !13, !invariant.load\l... !14\l  %17 = zext i16 %16 to i32\l  %18 = udiv i32 %13, %17\l  %19 = mul i32 %18, %17\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 16\l  %24 = bitcast i8 addrspace(4)* %23 to i32 addrspace(4)*\l  %25 = load i32, i32 addrspace(4)* %24, align 8, !tbaa !15\l  %26 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 2, !range !13, !invariant.load\l... !14\l  %29 = zext i16 %28 to i32\l  %30 = udiv i32 %25, %29\l  %31 = mul i32 %30, %29\l  %32 = icmp ugt i32 %25, %31\l  %33 = zext i1 %32 to i32\l  %34 = add i32 %30, %33\l  %35 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %36 = mul i32 %34, %35\l  %37 = add i32 %36, %9\l  %38 = mul i32 %37, %22\l  %39 = add i32 %38, %8\l  %40 = mul i32 %8, %17\l  %41 = mul i32 %9, %29\l  %42 = getelementptr i8, i8 addrspace(4)* %10, i64 8\l  %43 = bitcast i8 addrspace(4)* %42 to i16 addrspace(4)*\l  %44 = load i16, i16 addrspace(4)* %43, align 4, !range !13, !invariant.load\l... !14\l  %45 = zext i16 %44 to i32\l  %46 = mul i32 %35, %45\l  %47 = mul i32 %39, %45\l  %48 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !16\l  %49 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !16\l  %50 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %51 = add i32 %47, %49\l  %52 = mul i32 %51, %29\l  %53 = add i32 %52, %48\l  %54 = mul i32 %53, %17\l  %55 = add i32 %54, %50\l  %56 = add i32 %40, %50\l  %57 = add i32 %41, %48\l  %58 = add i32 %46, %49\l  %59 = sext i32 %57 to i64\l  %60 = getelementptr inbounds double, double addrspace(1)* %1, i64 %59\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %62 = sext i32 %56 to i64\l  %63 = getelementptr inbounds double, double addrspace(1)* %0, i64 %62\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %65 = tail call double @llvm.fabs.f64(double %61)\l  %66 = tail call double @llvm.fabs.f64(double %64)\l  %67 = tail call double @llvm.maxnum.f64(double %66, double %65)\l  %68 = tail call double @llvm.minnum.f64(double %66, double %65)\l  %69 = fdiv double %68, %67\l  %70 = fmul double %69, %69\l  %71 = tail call double @llvm.fma.f64(double %70, double 0x3EEBA404B5E68A13,\l... double 0xBF23E260BD3237F4)\l  %72 = tail call double @llvm.fma.f64(double %70, double %71, double\l... 0x3F4B2BB069EFB384)\l  %73 = tail call double @llvm.fma.f64(double %70, double %72, double\l... 0xBF67952DAF56DE9B)\l  %74 = tail call double @llvm.fma.f64(double %70, double %73, double\l... 0x3F7D6D43A595C56F)\l  %75 = tail call double @llvm.fma.f64(double %70, double %74, double\l... 0xBF8C6EA4A57D9582)\l  %76 = tail call double @llvm.fma.f64(double %70, double %75, double\l... 0x3F967E295F08B19F)\l  %77 = tail call double @llvm.fma.f64(double %70, double %76, double\l... 0xBF9E9AE6FC27006A)\l  %78 = tail call double @llvm.fma.f64(double %70, double %77, double\l... 0x3FA2C15B5711927A)\l  %79 = tail call double @llvm.fma.f64(double %70, double %78, double\l... 0xBFA59976E82D3FF0)\l  %80 = tail call double @llvm.fma.f64(double %70, double %79, double\l... 0x3FA82D5D6EF28734)\l  %81 = tail call double @llvm.fma.f64(double %70, double %80, double\l... 0xBFAAE5CE6A214619)\l  %82 = tail call double @llvm.fma.f64(double %70, double %81, double\l... 0x3FAE1BB48427B883)\l  %83 = tail call double @llvm.fma.f64(double %70, double %82, double\l... 0xBFB110E48B207F05)\l  %84 = tail call double @llvm.fma.f64(double %70, double %83, double\l... 0x3FB3B13657B87036)\l  %85 = tail call double @llvm.fma.f64(double %70, double %84, double\l... 0xBFB745D119378E4F)\l  %86 = tail call double @llvm.fma.f64(double %70, double %85, double\l... 0x3FBC71C717E1913C)\l  %87 = tail call double @llvm.fma.f64(double %70, double %86, double\l... 0xBFC2492492376B7D)\l  %88 = tail call double @llvm.fma.f64(double %70, double %87, double\l... 0x3FC99999999952CC)\l  %89 = tail call double @llvm.fma.f64(double %70, double %88, double\l... 0xBFD5555555555523)\l  %90 = fmul double %70, %89\l  %91 = tail call double @llvm.fma.f64(double %69, double %90, double %69)\l  %92 = bitcast double %64 to \<2 x i32\>\l  %93 = extractelement \<2 x i32\> %92, i64 1\l  %94 = icmp slt i32 %93, 0\l  %95 = fsub double 0x3FF921FB54442D18, %91\l  %96 = fcmp olt double %66, %65\l  %97 = select i1 %96, double %95, double %91\l  %98 = fcmp uno double %64, %61\l  %99 = fcmp oeq double %65, 0x7FF0000000000000\l  %100 = fcmp oeq double %66, 0x7FF0000000000000\l  %101 = and i1 %99, %100\l  %102 = select i1 %94, double 0x4002D97C7F3321D2, double 0x3FE921FB54442D18\l  %103 = tail call double @llvm.copysign.f64(double %102, double %61)\l  %104 = fcmp oeq double %61, 0.000000e+00\l  %105 = select i1 %94, double 0x400921FB54442D18, double 0.000000e+00\l  %106 = fsub double 0x400921FB54442D18, %97\l  %107 = select i1 %94, double %106, double %97\l  %108 = select i1 %104, double %105, double %107\l  %109 = select i1 %101, double %103, double %108\l  %110 = select i1 %98, double 0x7FF8000000000000, double %109\l  %111 = tail call double @llvm.copysign.f64(double %110, double %61)\l  %112 = fmul contract double %111, %4\l  %113 = tail call double @llvm.fabs.f64(double %112)\l  %114 = fcmp ogt double %113, 0x401921FB54442D18\l  br i1 %114, label %115, label %152\l|{<s0>T|<s1>F}}"];
	Node0x4628ff0:s0 -> Node0x4634100;
	Node0x4628ff0:s1 -> Node0x4634190;
	Node0x4634100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%115:\l115:                                              \l  %116 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %113)\l  %117 = tail call double @llvm.amdgcn.frexp.mant.f64(double %113)\l  %118 = tail call double @llvm.amdgcn.ldexp.f64(double %117, i32 26)\l  %119 = add i32 %116, -3\l  %120 = icmp sgt i32 %119, 26\l  br i1 %120, label %121, label %134\l|{<s0>T|<s1>F}}"];
	Node0x4634100:s0 -> Node0x4634a60;
	Node0x4634100:s1 -> Node0x4634af0;
	Node0x4634a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%121:\l121:                                              \l  %122 = phi double [ %131, %121 ], [ %118, %115 ]\l  %123 = phi i32 [ %132, %121 ], [ %119, %115 ]\l  %124 = fmul double %122, 0x3FE45F306DC9C883\l  %125 = tail call double @llvm.rint.f64(double %124)\l  %126 = fneg double %125\l  %127 = tail call double @llvm.fma.f64(double %126, double\l... 0x3FF921FB54442D18, double %122)\l  %128 = fcmp olt double %127, 0.000000e+00\l  %129 = select i1 %128, double 0x3FF921FB54442D18, double -0.000000e+00\l  %130 = fadd double %127, %129\l  %131 = tail call double @llvm.amdgcn.ldexp.f64(double %130, i32 26)\l  %132 = add nsw i32 %123, -26\l  %133 = icmp ugt i32 %123, 52\l  br i1 %133, label %121, label %134\l|{<s0>T|<s1>F}}"];
	Node0x4634a60:s0 -> Node0x4634a60;
	Node0x4634a60:s1 -> Node0x4634af0;
	Node0x4634af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%134:\l134:                                              \l  %135 = phi i32 [ %119, %115 ], [ %132, %121 ]\l  %136 = phi double [ %118, %115 ], [ %131, %121 ]\l  %137 = add nsw i32 %135, -25\l  %138 = tail call double @llvm.amdgcn.ldexp.f64(double %136, i32 %137)\l  %139 = fmul double %138, 0x3FE45F306DC9C883\l  %140 = tail call double @llvm.rint.f64(double %139)\l  %141 = fneg double %140\l  %142 = tail call double @llvm.fma.f64(double %141, double\l... 0x3FF921FB54442D18, double %138)\l  %143 = fcmp olt double %142, 0.000000e+00\l  %144 = select i1 %143, double 0x3FF921FB54442D18, double -0.000000e+00\l  %145 = fadd double %142, %144\l  %146 = tail call double @llvm.amdgcn.ldexp.f64(double %145, i32 2)\l  %147 = bitcast double %112 to i64\l  %148 = and i64 %147, -9223372036854775808\l  %149 = bitcast double %146 to i64\l  %150 = xor i64 %148, %149\l  %151 = bitcast i64 %150 to double\l  br label %156\l}"];
	Node0x4634af0 -> Node0x4636850;
	Node0x4634190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%152:\l152:                                              \l  %153 = fcmp oeq double %113, 0x401921FB54442D18\l  %154 = tail call double @llvm.copysign.f64(double 0.000000e+00, double %112)\l  %155 = select i1 %153, double %154, double %112\l  br label %156\l}"];
	Node0x4634190 -> Node0x4636850;
	Node0x4636850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%156:\l156:                                              \l  %157 = phi double [ %151, %134 ], [ %155, %152 ]\l  %158 = tail call i1 @llvm.amdgcn.class.f64(double %112, i32 504)\l  %159 = select i1 %158, double %157, double 0x7FF8000000000000\l  %160 = fneg contract double %159\l  %161 = sext i32 %55 to i64\l  %162 = getelementptr inbounds double, double addrspace(1)* %5, i64 %161\l  store double %160, double addrspace(1)* %162, align 8, !tbaa !17\l  %163 = load double, double addrspace(1)* %63, align 8, !tbaa !17\l  %164 = fmul contract double %163, %163\l  %165 = getelementptr inbounds double, double addrspace(1)* %3, i64 14\l  %166 = load double, double addrspace(1)* %165, align 8, !tbaa !17\l  %167 = fmul contract double %166, %166\l  %168 = getelementptr inbounds double, double addrspace(1)* %3, i64 15\l  %169 = load double, double addrspace(1)* %168, align 8, !tbaa !17\l  %170 = fmul contract double %167, %169\l  %171 = fmul contract double %169, %170\l  %172 = fdiv contract double %164, %171\l  %173 = load double, double addrspace(1)* %60, align 8, !tbaa !17\l  %174 = fmul contract double %173, %173\l  %175 = getelementptr inbounds double, double addrspace(1)* %3, i64 16\l  %176 = load double, double addrspace(1)* %175, align 8, !tbaa !17\l  %177 = fmul contract double %167, %176\l  %178 = fmul contract double %176, %177\l  %179 = fdiv contract double %174, %178\l  %180 = fadd contract double %172, %179\l  %181 = sext i32 %58 to i64\l  %182 = getelementptr inbounds double, double addrspace(1)* %2, i64 %181\l  %183 = load double, double addrspace(1)* %182, align 8, !tbaa !17\l  %184 = fmul contract double %183, %183\l  %185 = getelementptr inbounds double, double addrspace(1)* %3, i64 17\l  %186 = load double, double addrspace(1)* %185, align 8, !tbaa !17\l  %187 = fmul contract double %167, %186\l  %188 = fmul contract double %186, %187\l  %189 = fdiv contract double %184, %188\l  %190 = fadd contract double %180, %189\l  %191 = fneg contract double %190\l  %192 = fmul double %190, 0xBFF71547652B82FE\l  %193 = tail call double @llvm.rint.f64(double %192)\l  %194 = fneg double %193\l  %195 = tail call double @llvm.fma.f64(double %194, double\l... 0x3FE62E42FEFA39EF, double %191)\l  %196 = tail call double @llvm.fma.f64(double %194, double\l... 0x3C7ABC9E3B39803F, double %195)\l  %197 = tail call double @llvm.fma.f64(double %196, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %198 = tail call double @llvm.fma.f64(double %196, double %197, double\l... 0x3EC71DEE623FDE64)\l  %199 = tail call double @llvm.fma.f64(double %196, double %198, double\l... 0x3EFA01997C89E6B0)\l  %200 = tail call double @llvm.fma.f64(double %196, double %199, double\l... 0x3F2A01A014761F6E)\l  %201 = tail call double @llvm.fma.f64(double %196, double %200, double\l... 0x3F56C16C1852B7B0)\l  %202 = tail call double @llvm.fma.f64(double %196, double %201, double\l... 0x3F81111111122322)\l  %203 = tail call double @llvm.fma.f64(double %196, double %202, double\l... 0x3FA55555555502A1)\l  %204 = tail call double @llvm.fma.f64(double %196, double %203, double\l... 0x3FC5555555555511)\l  %205 = tail call double @llvm.fma.f64(double %196, double %204, double\l... 0x3FE000000000000B)\l  %206 = tail call double @llvm.fma.f64(double %196, double %205, double\l... 1.000000e+00)\l  %207 = tail call double @llvm.fma.f64(double %196, double %206, double\l... 1.000000e+00)\l  %208 = fptosi double %193 to i32\l  %209 = tail call double @llvm.amdgcn.ldexp.f64(double %207, i32 %208)\l  %210 = fcmp olt double %190, -1.024000e+03\l  %211 = select i1 %210, double 0x7FF0000000000000, double %209\l  %212 = fcmp ogt double %190, 1.075000e+03\l  %213 = select i1 %212, double 0.000000e+00, double %211\l  %214 = tail call double @llvm.fabs.f64(double %160)\l  %215 = fcmp olt double %214, 0x41D0000000000000\l  br i1 %215, label %216, label %235\l|{<s0>T|<s1>F}}"];
	Node0x4636850:s0 -> Node0x4639c10;
	Node0x4636850:s1 -> Node0x4639ca0;
	Node0x4639c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%216:\l216:                                              \l  %217 = fmul double %214, 0x3FE45F306DC9C883\l  %218 = tail call double @llvm.rint.f64(double %217)\l  %219 = tail call double @llvm.fma.f64(double %218, double\l... 0xBFF921FB54442D18, double %214)\l  %220 = tail call double @llvm.fma.f64(double %218, double\l... 0xBC91A62633145C00, double %219)\l  %221 = fmul double %218, 0x3C91A62633145C00\l  %222 = fneg double %221\l  %223 = tail call double @llvm.fma.f64(double %218, double\l... 0x3C91A62633145C00, double %222)\l  %224 = fsub double %219, %221\l  %225 = fsub double %219, %224\l  %226 = fsub double %225, %221\l  %227 = fsub double %224, %220\l  %228 = fadd double %227, %226\l  %229 = fsub double %228, %223\l  %230 = tail call double @llvm.fma.f64(double %218, double\l... 0xB97B839A252049C0, double %229)\l  %231 = fadd double %220, %230\l  %232 = fsub double %231, %220\l  %233 = fsub double %230, %232\l  %234 = fptosi double %218 to i32\l  br label %311\l}"];
	Node0x4639c10 -> Node0x463b590;
	Node0x4639ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%235:\l235:                                              \l  %236 = tail call double @llvm.amdgcn.trig.preop.f64(double %214, i32 0)\l  %237 = tail call double @llvm.amdgcn.trig.preop.f64(double %214, i32 1)\l  %238 = tail call double @llvm.amdgcn.trig.preop.f64(double %214, i32 2)\l  %239 = fcmp oge double %214, 0x7B00000000000000\l  %240 = tail call double @llvm.amdgcn.ldexp.f64(double %214, i32 -128)\l  %241 = select i1 %239, double %240, double %214\l  %242 = fmul double %238, %241\l  %243 = fneg double %242\l  %244 = tail call double @llvm.fma.f64(double %238, double %241, double %243)\l  %245 = fmul double %237, %241\l  %246 = fneg double %245\l  %247 = tail call double @llvm.fma.f64(double %237, double %241, double %246)\l  %248 = fmul double %236, %241\l  %249 = fneg double %248\l  %250 = tail call double @llvm.fma.f64(double %236, double %241, double %249)\l  %251 = fadd double %245, %250\l  %252 = fsub double %251, %245\l  %253 = fsub double %251, %252\l  %254 = fsub double %250, %252\l  %255 = fsub double %245, %253\l  %256 = fadd double %254, %255\l  %257 = fadd double %242, %247\l  %258 = fsub double %257, %242\l  %259 = fsub double %257, %258\l  %260 = fsub double %247, %258\l  %261 = fsub double %242, %259\l  %262 = fadd double %260, %261\l  %263 = fadd double %257, %256\l  %264 = fsub double %263, %257\l  %265 = fsub double %263, %264\l  %266 = fsub double %256, %264\l  %267 = fsub double %257, %265\l  %268 = fadd double %266, %267\l  %269 = fadd double %262, %268\l  %270 = fadd double %244, %269\l  %271 = fadd double %248, %251\l  %272 = fsub double %271, %248\l  %273 = fsub double %251, %272\l  %274 = fadd double %273, %263\l  %275 = fsub double %274, %273\l  %276 = fsub double %263, %275\l  %277 = fadd double %276, %270\l  %278 = tail call double @llvm.amdgcn.ldexp.f64(double %271, i32 -2)\l  %279 = tail call double @llvm.amdgcn.fract.f64(double %278)\l  %280 = tail call i1 @llvm.amdgcn.class.f64(double %278, i32 516)\l  %281 = select i1 %280, double 0.000000e+00, double %279\l  %282 = tail call double @llvm.amdgcn.ldexp.f64(double %281, i32 2)\l  %283 = fadd double %282, %274\l  %284 = fcmp olt double %283, 0.000000e+00\l  %285 = select i1 %284, double 4.000000e+00, double 0.000000e+00\l  %286 = fadd double %282, %285\l  %287 = fadd double %274, %286\l  %288 = fptosi double %287 to i32\l  %289 = sitofp i32 %288 to double\l  %290 = fsub double %286, %289\l  %291 = fadd double %274, %290\l  %292 = fsub double %291, %290\l  %293 = fsub double %274, %292\l  %294 = fadd double %277, %293\l  %295 = fcmp oge double %291, 5.000000e-01\l  %296 = zext i1 %295 to i32\l  %297 = add nsw i32 %296, %288\l  %298 = select i1 %295, double 1.000000e+00, double 0.000000e+00\l  %299 = fsub double %291, %298\l  %300 = fadd double %299, %294\l  %301 = fsub double %300, %299\l  %302 = fsub double %294, %301\l  %303 = fmul double %300, 0x3FF921FB54442D18\l  %304 = fneg double %303\l  %305 = tail call double @llvm.fma.f64(double %300, double\l... 0x3FF921FB54442D18, double %304)\l  %306 = tail call double @llvm.fma.f64(double %300, double\l... 0x3C91A62633145C07, double %305)\l  %307 = tail call double @llvm.fma.f64(double %302, double\l... 0x3FF921FB54442D18, double %306)\l  %308 = fadd double %303, %307\l  %309 = fsub double %308, %303\l  %310 = fsub double %307, %309\l  br label %311\l}"];
	Node0x4639ca0 -> Node0x463b590;
	Node0x463b590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%311:\l311:                                              \l  %312 = phi double [ %233, %216 ], [ %310, %235 ]\l  %313 = phi double [ %231, %216 ], [ %308, %235 ]\l  %314 = phi i32 [ %234, %216 ], [ %297, %235 ]\l  %315 = fmul double %313, %313\l  %316 = fmul double %315, 5.000000e-01\l  %317 = fsub double 1.000000e+00, %316\l  %318 = fsub double 1.000000e+00, %317\l  %319 = fsub double %318, %316\l  %320 = fmul double %315, %315\l  %321 = tail call double @llvm.fma.f64(double %315, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %322 = tail call double @llvm.fma.f64(double %315, double %321, double\l... 0xBE927E4FA17F65F6)\l  %323 = tail call double @llvm.fma.f64(double %315, double %322, double\l... 0x3EFA01A019F4EC90)\l  %324 = tail call double @llvm.fma.f64(double %315, double %323, double\l... 0xBF56C16C16C16967)\l  %325 = tail call double @llvm.fma.f64(double %315, double %324, double\l... 0x3FA5555555555555)\l  %326 = fneg double %312\l  %327 = tail call double @llvm.fma.f64(double %313, double %326, double %319)\l  %328 = tail call double @llvm.fma.f64(double %320, double %325, double %327)\l  %329 = fadd double %317, %328\l  %330 = tail call double @llvm.fma.f64(double %315, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %331 = tail call double @llvm.fma.f64(double %315, double %330, double\l... 0x3EC71DE3796CDE01)\l  %332 = tail call double @llvm.fma.f64(double %315, double %331, double\l... 0xBF2A01A019E83E5C)\l  %333 = tail call double @llvm.fma.f64(double %315, double %332, double\l... 0x3F81111111110BB3)\l  %334 = fneg double %315\l  %335 = fmul double %313, %334\l  %336 = fmul double %312, 5.000000e-01\l  %337 = tail call double @llvm.fma.f64(double %335, double %333, double %336)\l  %338 = tail call double @llvm.fma.f64(double %315, double %337, double %326)\l  %339 = tail call double @llvm.fma.f64(double %335, double\l... 0xBFC5555555555555, double %338)\l  %340 = fsub double %313, %339\l  %341 = fneg double %340\l  %342 = and i32 %314, 1\l  %343 = icmp eq i32 %342, 0\l  %344 = select i1 %343, double %329, double %341\l  %345 = bitcast double %344 to \<2 x i32\>\l  %346 = shl i32 %314, 30\l  %347 = and i32 %346, -2147483648\l  %348 = extractelement \<2 x i32\> %345, i64 1\l  %349 = xor i32 %348, %347\l  %350 = insertelement \<2 x i32\> %345, i32 %349, i64 1\l  %351 = tail call i1 @llvm.amdgcn.class.f64(double %214, i32 504)\l  %352 = select i1 %351, \<2 x i32\> %350, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %353 = bitcast \<2 x i32\> %352 to double\l  %354 = fmul contract double %213, %353\l  %355 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %161, i32 0, i32 0, i32 0, i64 0\l  store double %354, double addrspace(1)* %355, align 16, !tbaa !21\l  %356 = load double, double addrspace(1)* %63, align 8, !tbaa !17\l  %357 = fmul contract double %356, %356\l  %358 = load double, double addrspace(1)* %165, align 8, !tbaa !17\l  %359 = fmul contract double %358, %358\l  %360 = load double, double addrspace(1)* %168, align 8, !tbaa !17\l  %361 = fmul contract double %359, %360\l  %362 = fmul contract double %360, %361\l  %363 = fdiv contract double %357, %362\l  %364 = load double, double addrspace(1)* %60, align 8, !tbaa !17\l  %365 = fmul contract double %364, %364\l  %366 = load double, double addrspace(1)* %175, align 8, !tbaa !17\l  %367 = fmul contract double %359, %366\l  %368 = fmul contract double %366, %367\l  %369 = fdiv contract double %365, %368\l  %370 = fadd contract double %363, %369\l  %371 = load double, double addrspace(1)* %182, align 8, !tbaa !17\l  %372 = fmul contract double %371, %371\l  %373 = load double, double addrspace(1)* %185, align 8, !tbaa !17\l  %374 = fmul contract double %359, %373\l  %375 = fmul contract double %373, %374\l  %376 = fdiv contract double %372, %375\l  %377 = fadd contract double %370, %376\l  %378 = fneg contract double %377\l  %379 = fmul double %377, 0xBFF71547652B82FE\l  %380 = tail call double @llvm.rint.f64(double %379)\l  %381 = fneg double %380\l  %382 = tail call double @llvm.fma.f64(double %381, double\l... 0x3FE62E42FEFA39EF, double %378)\l  %383 = tail call double @llvm.fma.f64(double %381, double\l... 0x3C7ABC9E3B39803F, double %382)\l  %384 = load double, double addrspace(1)* %162, align 8, !tbaa !17\l  %385 = tail call double @llvm.fabs.f64(double %384)\l  %386 = fcmp olt double %385, 0x41D0000000000000\l  br i1 %386, label %387, label %406\l|{<s0>T|<s1>F}}"];
	Node0x463b590:s0 -> Node0x4642fa0;
	Node0x463b590:s1 -> Node0x4643030;
	Node0x4642fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%387:\l387:                                              \l  %388 = fmul double %385, 0x3FE45F306DC9C883\l  %389 = tail call double @llvm.rint.f64(double %388)\l  %390 = tail call double @llvm.fma.f64(double %389, double\l... 0xBFF921FB54442D18, double %385)\l  %391 = tail call double @llvm.fma.f64(double %389, double\l... 0xBC91A62633145C00, double %390)\l  %392 = fmul double %389, 0x3C91A62633145C00\l  %393 = fneg double %392\l  %394 = tail call double @llvm.fma.f64(double %389, double\l... 0x3C91A62633145C00, double %393)\l  %395 = fsub double %390, %392\l  %396 = fsub double %390, %395\l  %397 = fsub double %396, %392\l  %398 = fsub double %395, %391\l  %399 = fadd double %398, %397\l  %400 = fsub double %399, %394\l  %401 = tail call double @llvm.fma.f64(double %389, double\l... 0xB97B839A252049C0, double %400)\l  %402 = fadd double %391, %401\l  %403 = fsub double %402, %391\l  %404 = fsub double %401, %403\l  %405 = fptosi double %389 to i32\l  br label %482\l}"];
	Node0x4642fa0 -> Node0x4643e30;
	Node0x4643030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%406:\l406:                                              \l  %407 = tail call double @llvm.amdgcn.trig.preop.f64(double %385, i32 0)\l  %408 = tail call double @llvm.amdgcn.trig.preop.f64(double %385, i32 1)\l  %409 = tail call double @llvm.amdgcn.trig.preop.f64(double %385, i32 2)\l  %410 = fcmp oge double %385, 0x7B00000000000000\l  %411 = tail call double @llvm.amdgcn.ldexp.f64(double %385, i32 -128)\l  %412 = select i1 %410, double %411, double %385\l  %413 = fmul double %409, %412\l  %414 = fneg double %413\l  %415 = tail call double @llvm.fma.f64(double %409, double %412, double %414)\l  %416 = fmul double %408, %412\l  %417 = fneg double %416\l  %418 = tail call double @llvm.fma.f64(double %408, double %412, double %417)\l  %419 = fmul double %407, %412\l  %420 = fneg double %419\l  %421 = tail call double @llvm.fma.f64(double %407, double %412, double %420)\l  %422 = fadd double %416, %421\l  %423 = fsub double %422, %416\l  %424 = fsub double %422, %423\l  %425 = fsub double %421, %423\l  %426 = fsub double %416, %424\l  %427 = fadd double %425, %426\l  %428 = fadd double %413, %418\l  %429 = fsub double %428, %413\l  %430 = fsub double %428, %429\l  %431 = fsub double %418, %429\l  %432 = fsub double %413, %430\l  %433 = fadd double %431, %432\l  %434 = fadd double %428, %427\l  %435 = fsub double %434, %428\l  %436 = fsub double %434, %435\l  %437 = fsub double %427, %435\l  %438 = fsub double %428, %436\l  %439 = fadd double %437, %438\l  %440 = fadd double %433, %439\l  %441 = fadd double %415, %440\l  %442 = fadd double %419, %422\l  %443 = fsub double %442, %419\l  %444 = fsub double %422, %443\l  %445 = fadd double %444, %434\l  %446 = fsub double %445, %444\l  %447 = fsub double %434, %446\l  %448 = fadd double %447, %441\l  %449 = tail call double @llvm.amdgcn.ldexp.f64(double %442, i32 -2)\l  %450 = tail call double @llvm.amdgcn.fract.f64(double %449)\l  %451 = tail call i1 @llvm.amdgcn.class.f64(double %449, i32 516)\l  %452 = select i1 %451, double 0.000000e+00, double %450\l  %453 = tail call double @llvm.amdgcn.ldexp.f64(double %452, i32 2)\l  %454 = fadd double %453, %445\l  %455 = fcmp olt double %454, 0.000000e+00\l  %456 = select i1 %455, double 4.000000e+00, double 0.000000e+00\l  %457 = fadd double %453, %456\l  %458 = fadd double %445, %457\l  %459 = fptosi double %458 to i32\l  %460 = sitofp i32 %459 to double\l  %461 = fsub double %457, %460\l  %462 = fadd double %445, %461\l  %463 = fsub double %462, %461\l  %464 = fsub double %445, %463\l  %465 = fadd double %448, %464\l  %466 = fcmp oge double %462, 5.000000e-01\l  %467 = zext i1 %466 to i32\l  %468 = add nsw i32 %467, %459\l  %469 = select i1 %466, double 1.000000e+00, double 0.000000e+00\l  %470 = fsub double %462, %469\l  %471 = fadd double %470, %465\l  %472 = fsub double %471, %470\l  %473 = fsub double %465, %472\l  %474 = fmul double %471, 0x3FF921FB54442D18\l  %475 = fneg double %474\l  %476 = tail call double @llvm.fma.f64(double %471, double\l... 0x3FF921FB54442D18, double %475)\l  %477 = tail call double @llvm.fma.f64(double %471, double\l... 0x3C91A62633145C07, double %476)\l  %478 = tail call double @llvm.fma.f64(double %473, double\l... 0x3FF921FB54442D18, double %477)\l  %479 = fadd double %474, %478\l  %480 = fsub double %479, %474\l  %481 = fsub double %478, %480\l  br label %482\l}"];
	Node0x4643030 -> Node0x4643e30;
	Node0x4643e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%482:\l482:                                              \l  %483 = phi double [ %404, %387 ], [ %481, %406 ]\l  %484 = phi double [ %402, %387 ], [ %479, %406 ]\l  %485 = phi i32 [ %405, %387 ], [ %468, %406 ]\l  %486 = fcmp ogt double %377, 1.075000e+03\l  %487 = fcmp olt double %377, -1.024000e+03\l  %488 = tail call double @llvm.fma.f64(double %383, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %489 = tail call double @llvm.fma.f64(double %383, double %488, double\l... 0x3EC71DEE623FDE64)\l  %490 = tail call double @llvm.fma.f64(double %383, double %489, double\l... 0x3EFA01997C89E6B0)\l  %491 = tail call double @llvm.fma.f64(double %383, double %490, double\l... 0x3F2A01A014761F6E)\l  %492 = tail call double @llvm.fma.f64(double %383, double %491, double\l... 0x3F56C16C1852B7B0)\l  %493 = tail call double @llvm.fma.f64(double %383, double %492, double\l... 0x3F81111111122322)\l  %494 = tail call double @llvm.fma.f64(double %383, double %493, double\l... 0x3FA55555555502A1)\l  %495 = tail call double @llvm.fma.f64(double %383, double %494, double\l... 0x3FC5555555555511)\l  %496 = tail call double @llvm.fma.f64(double %383, double %495, double\l... 0x3FE000000000000B)\l  %497 = tail call double @llvm.fma.f64(double %383, double %496, double\l... 1.000000e+00)\l  %498 = tail call double @llvm.fma.f64(double %383, double %497, double\l... 1.000000e+00)\l  %499 = fptosi double %380 to i32\l  %500 = tail call double @llvm.amdgcn.ldexp.f64(double %498, i32 %499)\l  %501 = select i1 %487, double 0x7FF0000000000000, double %500\l  %502 = select i1 %486, double 0.000000e+00, double %501\l  %503 = fneg contract double %502\l  %504 = fmul double %484, %484\l  %505 = fmul double %504, 5.000000e-01\l  %506 = fsub double 1.000000e+00, %505\l  %507 = fsub double 1.000000e+00, %506\l  %508 = fsub double %507, %505\l  %509 = fmul double %504, %504\l  %510 = tail call double @llvm.fma.f64(double %504, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %511 = tail call double @llvm.fma.f64(double %504, double %510, double\l... 0xBE927E4FA17F65F6)\l  %512 = tail call double @llvm.fma.f64(double %504, double %511, double\l... 0x3EFA01A019F4EC90)\l  %513 = tail call double @llvm.fma.f64(double %504, double %512, double\l... 0xBF56C16C16C16967)\l  %514 = tail call double @llvm.fma.f64(double %504, double %513, double\l... 0x3FA5555555555555)\l  %515 = fneg double %483\l  %516 = tail call double @llvm.fma.f64(double %484, double %515, double %508)\l  %517 = tail call double @llvm.fma.f64(double %509, double %514, double %516)\l  %518 = fadd double %506, %517\l  %519 = tail call double @llvm.fma.f64(double %504, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %520 = tail call double @llvm.fma.f64(double %504, double %519, double\l... 0x3EC71DE3796CDE01)\l  %521 = tail call double @llvm.fma.f64(double %504, double %520, double\l... 0xBF2A01A019E83E5C)\l  %522 = tail call double @llvm.fma.f64(double %504, double %521, double\l... 0x3F81111111110BB3)\l  %523 = fneg double %504\l  %524 = fmul double %484, %523\l  %525 = fmul double %483, 5.000000e-01\l  %526 = tail call double @llvm.fma.f64(double %524, double %522, double %525)\l  %527 = tail call double @llvm.fma.f64(double %504, double %526, double %515)\l  %528 = tail call double @llvm.fma.f64(double %524, double\l... 0xBFC5555555555555, double %527)\l  %529 = fsub double %484, %528\l  %530 = and i32 %485, 1\l  %531 = icmp eq i32 %530, 0\l  %532 = select i1 %531, double %529, double %518\l  %533 = bitcast double %532 to \<2 x i32\>\l  %534 = shl i32 %485, 30\l  %535 = bitcast double %384 to \<2 x i32\>\l  %536 = extractelement \<2 x i32\> %535, i64 1\l  %537 = xor i32 %534, %536\l  %538 = and i32 %537, -2147483648\l  %539 = extractelement \<2 x i32\> %533, i64 1\l  %540 = xor i32 %539, %538\l  %541 = insertelement \<2 x i32\> %533, i32 %540, i64 1\l  %542 = tail call i1 @llvm.amdgcn.class.f64(double %385, i32 504)\l  %543 = select i1 %542, \<2 x i32\> %541, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %544 = bitcast \<2 x i32\> %543 to double\l  %545 = fmul contract double %503, %544\l  %546 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %161, i32 0, i32 0, i32 0, i64 1\l  store double %545, double addrspace(1)* %546, align 8, !tbaa !21\l  ret void\l}"];
}
