digraph "CFG for '_Z8cMultPhiP15HIP_vector_typeIdLj2EEPdS1_' function" {
	label="CFG for '_Z8cMultPhiP15HIP_vector_typeIdLj2EEPdS1_' function";

	Node0x5144dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %8 = bitcast i8 addrspace(4)* %7 to i32 addrspace(4)*\l  %9 = load i32, i32 addrspace(4)* %8, align 4, !tbaa !4\l  %10 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !13, !invariant.load\l... !14\l  %13 = zext i16 %12 to i32\l  %14 = udiv i32 %9, %13\l  %15 = mul i32 %14, %13\l  %16 = icmp ugt i32 %9, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 16\l  %20 = bitcast i8 addrspace(4)* %19 to i32 addrspace(4)*\l  %21 = load i32, i32 addrspace(4)* %20, align 8, !tbaa !15\l  %22 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !13, !invariant.load\l... !14\l  %25 = zext i16 %24 to i32\l  %26 = udiv i32 %21, %25\l  %27 = mul i32 %26, %25\l  %28 = icmp ugt i32 %21, %27\l  %29 = zext i1 %28 to i32\l  %30 = add i32 %26, %29\l  %31 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %32 = mul i32 %30, %31\l  %33 = add i32 %32, %5\l  %34 = mul i32 %33, %18\l  %35 = add i32 %34, %4\l  %36 = getelementptr i8, i8 addrspace(4)* %6, i64 8\l  %37 = bitcast i8 addrspace(4)* %36 to i16 addrspace(4)*\l  %38 = load i16, i16 addrspace(4)* %37, align 4, !range !13, !invariant.load\l... !14\l  %39 = zext i16 %38 to i32\l  %40 = mul i32 %35, %39\l  %41 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !16\l  %42 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !16\l  %43 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %44 = add i32 %40, %42\l  %45 = mul i32 %44, %25\l  %46 = add i32 %45, %41\l  %47 = mul i32 %46, %13\l  %48 = add i32 %47, %43\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds double, double addrspace(1)* %1, i64 %49\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %52 = tail call double @llvm.fabs.f64(double %51)\l  %53 = fcmp olt double %52, 0x41D0000000000000\l  br i1 %53, label %54, label %73\l|{<s0>T|<s1>F}}"];
	Node0x5144dd0:s0 -> Node0x514dba0;
	Node0x5144dd0:s1 -> Node0x514dc30;
	Node0x514dba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%54:\l54:                                               \l  %55 = fmul double %52, 0x3FE45F306DC9C883\l  %56 = tail call double @llvm.rint.f64(double %55)\l  %57 = tail call double @llvm.fma.f64(double %56, double 0xBFF921FB54442D18,\l... double %52)\l  %58 = tail call double @llvm.fma.f64(double %56, double 0xBC91A62633145C00,\l... double %57)\l  %59 = fmul double %56, 0x3C91A62633145C00\l  %60 = fneg double %59\l  %61 = tail call double @llvm.fma.f64(double %56, double 0x3C91A62633145C00,\l... double %60)\l  %62 = fsub double %57, %59\l  %63 = fsub double %57, %62\l  %64 = fsub double %63, %59\l  %65 = fsub double %62, %58\l  %66 = fadd double %65, %64\l  %67 = fsub double %66, %61\l  %68 = tail call double @llvm.fma.f64(double %56, double 0xB97B839A252049C0,\l... double %67)\l  %69 = fadd double %58, %68\l  %70 = fsub double %69, %58\l  %71 = fsub double %68, %70\l  %72 = fptosi double %56 to i32\l  br label %149\l}"];
	Node0x514dba0 -> Node0x514f010;
	Node0x514dc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%73:\l73:                                               \l  %74 = tail call double @llvm.amdgcn.trig.preop.f64(double %52, i32 0)\l  %75 = tail call double @llvm.amdgcn.trig.preop.f64(double %52, i32 1)\l  %76 = tail call double @llvm.amdgcn.trig.preop.f64(double %52, i32 2)\l  %77 = fcmp oge double %52, 0x7B00000000000000\l  %78 = tail call double @llvm.amdgcn.ldexp.f64(double %52, i32 -128)\l  %79 = select i1 %77, double %78, double %52\l  %80 = fmul double %76, %79\l  %81 = fneg double %80\l  %82 = tail call double @llvm.fma.f64(double %76, double %79, double %81)\l  %83 = fmul double %75, %79\l  %84 = fneg double %83\l  %85 = tail call double @llvm.fma.f64(double %75, double %79, double %84)\l  %86 = fmul double %74, %79\l  %87 = fneg double %86\l  %88 = tail call double @llvm.fma.f64(double %74, double %79, double %87)\l  %89 = fadd double %83, %88\l  %90 = fsub double %89, %83\l  %91 = fsub double %89, %90\l  %92 = fsub double %88, %90\l  %93 = fsub double %83, %91\l  %94 = fadd double %92, %93\l  %95 = fadd double %80, %85\l  %96 = fsub double %95, %80\l  %97 = fsub double %95, %96\l  %98 = fsub double %85, %96\l  %99 = fsub double %80, %97\l  %100 = fadd double %98, %99\l  %101 = fadd double %95, %94\l  %102 = fsub double %101, %95\l  %103 = fsub double %101, %102\l  %104 = fsub double %94, %102\l  %105 = fsub double %95, %103\l  %106 = fadd double %104, %105\l  %107 = fadd double %100, %106\l  %108 = fadd double %82, %107\l  %109 = fadd double %86, %89\l  %110 = fsub double %109, %86\l  %111 = fsub double %89, %110\l  %112 = fadd double %111, %101\l  %113 = fsub double %112, %111\l  %114 = fsub double %101, %113\l  %115 = fadd double %114, %108\l  %116 = tail call double @llvm.amdgcn.ldexp.f64(double %109, i32 -2)\l  %117 = tail call double @llvm.amdgcn.fract.f64(double %116)\l  %118 = tail call i1 @llvm.amdgcn.class.f64(double %116, i32 516)\l  %119 = select i1 %118, double 0.000000e+00, double %117\l  %120 = tail call double @llvm.amdgcn.ldexp.f64(double %119, i32 2)\l  %121 = fadd double %120, %112\l  %122 = fcmp olt double %121, 0.000000e+00\l  %123 = select i1 %122, double 4.000000e+00, double 0.000000e+00\l  %124 = fadd double %120, %123\l  %125 = fadd double %112, %124\l  %126 = fptosi double %125 to i32\l  %127 = sitofp i32 %126 to double\l  %128 = fsub double %124, %127\l  %129 = fadd double %112, %128\l  %130 = fsub double %129, %128\l  %131 = fsub double %112, %130\l  %132 = fadd double %115, %131\l  %133 = fcmp oge double %129, 5.000000e-01\l  %134 = zext i1 %133 to i32\l  %135 = add nsw i32 %134, %126\l  %136 = select i1 %133, double 1.000000e+00, double 0.000000e+00\l  %137 = fsub double %129, %136\l  %138 = fadd double %137, %132\l  %139 = fsub double %138, %137\l  %140 = fsub double %132, %139\l  %141 = fmul double %138, 0x3FF921FB54442D18\l  %142 = fneg double %141\l  %143 = tail call double @llvm.fma.f64(double %138, double\l... 0x3FF921FB54442D18, double %142)\l  %144 = tail call double @llvm.fma.f64(double %138, double\l... 0x3C91A62633145C07, double %143)\l  %145 = tail call double @llvm.fma.f64(double %140, double\l... 0x3FF921FB54442D18, double %144)\l  %146 = fadd double %141, %145\l  %147 = fsub double %146, %141\l  %148 = fsub double %145, %147\l  br label %149\l}"];
	Node0x514dc30 -> Node0x514f010;
	Node0x514f010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%149:\l149:                                              \l  %150 = phi double [ %71, %54 ], [ %148, %73 ]\l  %151 = phi double [ %69, %54 ], [ %146, %73 ]\l  %152 = phi i32 [ %72, %54 ], [ %135, %73 ]\l  %153 = fmul double %151, %151\l  %154 = fmul double %153, 5.000000e-01\l  %155 = fsub double 1.000000e+00, %154\l  %156 = fsub double 1.000000e+00, %155\l  %157 = fsub double %156, %154\l  %158 = fmul double %153, %153\l  %159 = tail call double @llvm.fma.f64(double %153, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %160 = tail call double @llvm.fma.f64(double %153, double %159, double\l... 0xBE927E4FA17F65F6)\l  %161 = tail call double @llvm.fma.f64(double %153, double %160, double\l... 0x3EFA01A019F4EC90)\l  %162 = tail call double @llvm.fma.f64(double %153, double %161, double\l... 0xBF56C16C16C16967)\l  %163 = tail call double @llvm.fma.f64(double %153, double %162, double\l... 0x3FA5555555555555)\l  %164 = fneg double %150\l  %165 = tail call double @llvm.fma.f64(double %151, double %164, double %157)\l  %166 = tail call double @llvm.fma.f64(double %158, double %163, double %165)\l  %167 = fadd double %155, %166\l  %168 = tail call double @llvm.fma.f64(double %153, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %169 = tail call double @llvm.fma.f64(double %153, double %168, double\l... 0x3EC71DE3796CDE01)\l  %170 = tail call double @llvm.fma.f64(double %153, double %169, double\l... 0xBF2A01A019E83E5C)\l  %171 = tail call double @llvm.fma.f64(double %153, double %170, double\l... 0x3F81111111110BB3)\l  %172 = fneg double %153\l  %173 = fmul double %151, %172\l  %174 = fmul double %150, 5.000000e-01\l  %175 = tail call double @llvm.fma.f64(double %173, double %171, double %174)\l  %176 = tail call double @llvm.fma.f64(double %153, double %175, double %164)\l  %177 = tail call double @llvm.fma.f64(double %173, double\l... 0xBFC5555555555555, double %176)\l  %178 = fsub double %151, %177\l  %179 = fneg double %178\l  %180 = and i32 %152, 1\l  %181 = icmp eq i32 %180, 0\l  %182 = select i1 %181, double %167, double %179\l  %183 = bitcast double %182 to \<2 x i32\>\l  %184 = tail call i1 @llvm.amdgcn.class.f64(double %52, i32 504)\l  %185 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %49, i32 0, i32 0, i32 0, i64 0\l  %186 = load double, double addrspace(1)* %185, align 16, !tbaa !21,\l... !amdgpu.noclobber !14\l  %187 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %49, i32 0, i32 0, i32 0, i64 1\l  %188 = load double, double addrspace(1)* %187, align 8, !tbaa !21,\l... !amdgpu.noclobber !14\l  br i1 %53, label %189, label %286\l|{<s0>T|<s1>F}}"];
	Node0x514f010:s0 -> Node0x51559b0;
	Node0x514f010:s1 -> Node0x5155a40;
	Node0x51559b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%189:\l189:                                              \l  %190 = fmul double %52, 0x3FE45F306DC9C883\l  %191 = tail call double @llvm.rint.f64(double %190)\l  %192 = tail call double @llvm.fma.f64(double %191, double\l... 0xBFF921FB54442D18, double %52)\l  %193 = tail call double @llvm.fma.f64(double %191, double\l... 0xBC91A62633145C00, double %192)\l  %194 = fmul double %191, 0x3C91A62633145C00\l  %195 = fneg double %194\l  %196 = tail call double @llvm.fma.f64(double %191, double\l... 0x3C91A62633145C00, double %195)\l  %197 = fsub double %192, %194\l  %198 = fsub double %192, %197\l  %199 = fsub double %198, %194\l  %200 = fsub double %197, %193\l  %201 = fadd double %200, %199\l  %202 = fsub double %201, %196\l  %203 = tail call double @llvm.fma.f64(double %191, double\l... 0xB97B839A252049C0, double %202)\l  %204 = fadd double %193, %203\l  %205 = fsub double %204, %193\l  %206 = fsub double %203, %205\l  %207 = fptosi double %191 to i32\l  %208 = fmul double %204, %204\l  %209 = fmul double %208, 5.000000e-01\l  %210 = fsub double 1.000000e+00, %209\l  %211 = fsub double 1.000000e+00, %210\l  %212 = fsub double %211, %209\l  %213 = fmul double %208, %208\l  %214 = tail call double @llvm.fma.f64(double %208, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %215 = tail call double @llvm.fma.f64(double %208, double %214, double\l... 0xBE927E4FA17F65F6)\l  %216 = tail call double @llvm.fma.f64(double %208, double %215, double\l... 0x3EFA01A019F4EC90)\l  %217 = tail call double @llvm.fma.f64(double %208, double %216, double\l... 0xBF56C16C16C16967)\l  %218 = tail call double @llvm.fma.f64(double %208, double %217, double\l... 0x3FA5555555555555)\l  %219 = fneg double %206\l  %220 = tail call double @llvm.fma.f64(double %204, double %219, double %212)\l  %221 = tail call double @llvm.fma.f64(double %213, double %218, double %220)\l  %222 = fadd double %210, %221\l  %223 = tail call double @llvm.fma.f64(double %208, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %224 = tail call double @llvm.fma.f64(double %208, double %223, double\l... 0x3EC71DE3796CDE01)\l  %225 = tail call double @llvm.fma.f64(double %208, double %224, double\l... 0xBF2A01A019E83E5C)\l  %226 = tail call double @llvm.fma.f64(double %208, double %225, double\l... 0x3F81111111110BB3)\l  %227 = fneg double %208\l  %228 = fmul double %204, %227\l  %229 = fmul double %206, 5.000000e-01\l  %230 = tail call double @llvm.fma.f64(double %228, double %226, double %229)\l  %231 = tail call double @llvm.fma.f64(double %208, double %230, double %219)\l  %232 = tail call double @llvm.fma.f64(double %228, double\l... 0xBFC5555555555555, double %231)\l  %233 = fsub double %204, %232\l  %234 = and i32 %207, 1\l  %235 = icmp eq i32 %234, 0\l  %236 = select i1 %235, double %233, double %222\l  %237 = bitcast double %51 to \<2 x i32\>\l  %238 = extractelement \<2 x i32\> %237, i64 1\l  %239 = fmul double %52, 0x3FE45F306DC9C883\l  %240 = tail call double @llvm.rint.f64(double %239)\l  %241 = tail call double @llvm.fma.f64(double %240, double\l... 0xBFF921FB54442D18, double %52)\l  %242 = tail call double @llvm.fma.f64(double %240, double\l... 0xBC91A62633145C00, double %241)\l  %243 = fmul double %240, 0x3C91A62633145C00\l  %244 = fneg double %243\l  %245 = tail call double @llvm.fma.f64(double %240, double\l... 0x3C91A62633145C00, double %244)\l  %246 = fsub double %241, %243\l  %247 = fsub double %241, %246\l  %248 = fsub double %247, %243\l  %249 = fsub double %246, %242\l  %250 = fadd double %249, %248\l  %251 = fsub double %250, %245\l  %252 = tail call double @llvm.fma.f64(double %240, double\l... 0xB97B839A252049C0, double %251)\l  %253 = fadd double %242, %252\l  %254 = fsub double %253, %242\l  %255 = fsub double %252, %254\l  %256 = fptosi double %240 to i32\l  %257 = fmul double %253, %253\l  %258 = fmul double %257, 5.000000e-01\l  %259 = fsub double 1.000000e+00, %258\l  %260 = fsub double 1.000000e+00, %259\l  %261 = fsub double %260, %258\l  %262 = fmul double %257, %257\l  %263 = tail call double @llvm.fma.f64(double %257, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %264 = tail call double @llvm.fma.f64(double %257, double %263, double\l... 0xBE927E4FA17F65F6)\l  %265 = tail call double @llvm.fma.f64(double %257, double %264, double\l... 0x3EFA01A019F4EC90)\l  %266 = tail call double @llvm.fma.f64(double %257, double %265, double\l... 0xBF56C16C16C16967)\l  %267 = tail call double @llvm.fma.f64(double %257, double %266, double\l... 0x3FA5555555555555)\l  %268 = fneg double %255\l  %269 = tail call double @llvm.fma.f64(double %253, double %268, double %261)\l  %270 = tail call double @llvm.fma.f64(double %262, double %267, double %269)\l  %271 = fadd double %259, %270\l  %272 = tail call double @llvm.fma.f64(double %257, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %273 = tail call double @llvm.fma.f64(double %257, double %272, double\l... 0x3EC71DE3796CDE01)\l  %274 = tail call double @llvm.fma.f64(double %257, double %273, double\l... 0xBF2A01A019E83E5C)\l  %275 = tail call double @llvm.fma.f64(double %257, double %274, double\l... 0x3F81111111110BB3)\l  %276 = fneg double %257\l  %277 = fmul double %253, %276\l  %278 = fmul double %255, 5.000000e-01\l  %279 = tail call double @llvm.fma.f64(double %277, double %275, double %278)\l  %280 = tail call double @llvm.fma.f64(double %257, double %279, double %268)\l  %281 = tail call double @llvm.fma.f64(double %277, double\l... 0xBFC5555555555555, double %280)\l  %282 = fsub double %253, %281\l  %283 = and i32 %256, 1\l  %284 = icmp eq i32 %283, 0\l  %285 = select i1 %284, double %282, double %271\l  br label %497\l}"];
	Node0x51559b0 -> Node0x515b050;
	Node0x5155a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%286:\l286:                                              \l  %287 = tail call double @llvm.amdgcn.trig.preop.f64(double %52, i32 0)\l  %288 = tail call double @llvm.amdgcn.trig.preop.f64(double %52, i32 1)\l  %289 = tail call double @llvm.amdgcn.trig.preop.f64(double %52, i32 2)\l  %290 = fcmp oge double %52, 0x7B00000000000000\l  %291 = tail call double @llvm.amdgcn.ldexp.f64(double %52, i32 -128)\l  %292 = select i1 %290, double %291, double %52\l  %293 = fmul double %289, %292\l  %294 = fneg double %293\l  %295 = tail call double @llvm.fma.f64(double %289, double %292, double %294)\l  %296 = fmul double %288, %292\l  %297 = fneg double %296\l  %298 = tail call double @llvm.fma.f64(double %288, double %292, double %297)\l  %299 = fmul double %287, %292\l  %300 = fneg double %299\l  %301 = tail call double @llvm.fma.f64(double %287, double %292, double %300)\l  %302 = fadd double %296, %301\l  %303 = fsub double %302, %296\l  %304 = fsub double %302, %303\l  %305 = fsub double %301, %303\l  %306 = fsub double %296, %304\l  %307 = fadd double %305, %306\l  %308 = fadd double %293, %298\l  %309 = fsub double %308, %293\l  %310 = fsub double %308, %309\l  %311 = fsub double %298, %309\l  %312 = fsub double %293, %310\l  %313 = fadd double %311, %312\l  %314 = fadd double %308, %307\l  %315 = fsub double %314, %308\l  %316 = fsub double %314, %315\l  %317 = fsub double %307, %315\l  %318 = fsub double %308, %316\l  %319 = fadd double %317, %318\l  %320 = fadd double %313, %319\l  %321 = fadd double %295, %320\l  %322 = fadd double %299, %302\l  %323 = fsub double %322, %299\l  %324 = fsub double %302, %323\l  %325 = fadd double %324, %314\l  %326 = fsub double %325, %324\l  %327 = fsub double %314, %326\l  %328 = fadd double %327, %321\l  %329 = tail call double @llvm.amdgcn.ldexp.f64(double %322, i32 -2)\l  %330 = tail call double @llvm.amdgcn.fract.f64(double %329)\l  %331 = tail call i1 @llvm.amdgcn.class.f64(double %329, i32 516)\l  %332 = select i1 %331, double 0.000000e+00, double %330\l  %333 = tail call double @llvm.amdgcn.ldexp.f64(double %332, i32 2)\l  %334 = fadd double %333, %325\l  %335 = fcmp olt double %334, 0.000000e+00\l  %336 = select i1 %335, double 4.000000e+00, double 0.000000e+00\l  %337 = fadd double %333, %336\l  %338 = fadd double %325, %337\l  %339 = fptosi double %338 to i32\l  %340 = sitofp i32 %339 to double\l  %341 = fsub double %337, %340\l  %342 = fadd double %325, %341\l  %343 = fsub double %342, %341\l  %344 = fsub double %325, %343\l  %345 = fadd double %328, %344\l  %346 = fcmp oge double %342, 5.000000e-01\l  %347 = zext i1 %346 to i32\l  %348 = add nsw i32 %347, %339\l  %349 = select i1 %346, double 1.000000e+00, double 0.000000e+00\l  %350 = fsub double %342, %349\l  %351 = fadd double %350, %345\l  %352 = fsub double %351, %350\l  %353 = fsub double %345, %352\l  %354 = fmul double %351, 0x3FF921FB54442D18\l  %355 = fneg double %354\l  %356 = tail call double @llvm.fma.f64(double %351, double\l... 0x3FF921FB54442D18, double %355)\l  %357 = tail call double @llvm.fma.f64(double %351, double\l... 0x3C91A62633145C07, double %356)\l  %358 = tail call double @llvm.fma.f64(double %353, double\l... 0x3FF921FB54442D18, double %357)\l  %359 = fadd double %354, %358\l  %360 = fsub double %359, %354\l  %361 = fsub double %358, %360\l  %362 = fmul double %359, %359\l  %363 = fmul double %362, 5.000000e-01\l  %364 = fsub double 1.000000e+00, %363\l  %365 = fsub double 1.000000e+00, %364\l  %366 = fsub double %365, %363\l  %367 = fmul double %362, %362\l  %368 = tail call double @llvm.fma.f64(double %362, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %369 = tail call double @llvm.fma.f64(double %362, double %368, double\l... 0xBE927E4FA17F65F6)\l  %370 = tail call double @llvm.fma.f64(double %362, double %369, double\l... 0x3EFA01A019F4EC90)\l  %371 = tail call double @llvm.fma.f64(double %362, double %370, double\l... 0xBF56C16C16C16967)\l  %372 = tail call double @llvm.fma.f64(double %362, double %371, double\l... 0x3FA5555555555555)\l  %373 = fneg double %361\l  %374 = tail call double @llvm.fma.f64(double %359, double %373, double %366)\l  %375 = tail call double @llvm.fma.f64(double %367, double %372, double %374)\l  %376 = fadd double %364, %375\l  %377 = tail call double @llvm.fma.f64(double %362, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %378 = tail call double @llvm.fma.f64(double %362, double %377, double\l... 0x3EC71DE3796CDE01)\l  %379 = tail call double @llvm.fma.f64(double %362, double %378, double\l... 0xBF2A01A019E83E5C)\l  %380 = tail call double @llvm.fma.f64(double %362, double %379, double\l... 0x3F81111111110BB3)\l  %381 = fneg double %362\l  %382 = fmul double %359, %381\l  %383 = fmul double %361, 5.000000e-01\l  %384 = tail call double @llvm.fma.f64(double %382, double %380, double %383)\l  %385 = tail call double @llvm.fma.f64(double %362, double %384, double %373)\l  %386 = tail call double @llvm.fma.f64(double %382, double\l... 0xBFC5555555555555, double %385)\l  %387 = fsub double %359, %386\l  %388 = and i32 %348, 1\l  %389 = icmp eq i32 %388, 0\l  %390 = select i1 %389, double %387, double %376\l  %391 = bitcast double %51 to \<2 x i32\>\l  %392 = extractelement \<2 x i32\> %391, i64 1\l  %393 = tail call double @llvm.amdgcn.trig.preop.f64(double %52, i32 0)\l  %394 = tail call double @llvm.amdgcn.trig.preop.f64(double %52, i32 1)\l  %395 = tail call double @llvm.amdgcn.trig.preop.f64(double %52, i32 2)\l  %396 = fcmp oge double %52, 0x7B00000000000000\l  %397 = tail call double @llvm.amdgcn.ldexp.f64(double %52, i32 -128)\l  %398 = select i1 %396, double %397, double %52\l  %399 = fmul double %395, %398\l  %400 = fneg double %399\l  %401 = tail call double @llvm.fma.f64(double %395, double %398, double %400)\l  %402 = fmul double %394, %398\l  %403 = fneg double %402\l  %404 = tail call double @llvm.fma.f64(double %394, double %398, double %403)\l  %405 = fmul double %393, %398\l  %406 = fneg double %405\l  %407 = tail call double @llvm.fma.f64(double %393, double %398, double %406)\l  %408 = fadd double %402, %407\l  %409 = fsub double %408, %402\l  %410 = fsub double %408, %409\l  %411 = fsub double %407, %409\l  %412 = fsub double %402, %410\l  %413 = fadd double %411, %412\l  %414 = fadd double %399, %404\l  %415 = fsub double %414, %399\l  %416 = fsub double %414, %415\l  %417 = fsub double %404, %415\l  %418 = fsub double %399, %416\l  %419 = fadd double %417, %418\l  %420 = fadd double %414, %413\l  %421 = fsub double %420, %414\l  %422 = fsub double %420, %421\l  %423 = fsub double %413, %421\l  %424 = fsub double %414, %422\l  %425 = fadd double %423, %424\l  %426 = fadd double %419, %425\l  %427 = fadd double %401, %426\l  %428 = fadd double %405, %408\l  %429 = fsub double %428, %405\l  %430 = fsub double %408, %429\l  %431 = fadd double %430, %420\l  %432 = fsub double %431, %430\l  %433 = fsub double %420, %432\l  %434 = fadd double %433, %427\l  %435 = tail call double @llvm.amdgcn.ldexp.f64(double %428, i32 -2)\l  %436 = tail call double @llvm.amdgcn.fract.f64(double %435)\l  %437 = tail call i1 @llvm.amdgcn.class.f64(double %435, i32 516)\l  %438 = select i1 %437, double 0.000000e+00, double %436\l  %439 = tail call double @llvm.amdgcn.ldexp.f64(double %438, i32 2)\l  %440 = fadd double %439, %431\l  %441 = fcmp olt double %440, 0.000000e+00\l  %442 = select i1 %441, double 4.000000e+00, double 0.000000e+00\l  %443 = fadd double %439, %442\l  %444 = fadd double %431, %443\l  %445 = fptosi double %444 to i32\l  %446 = sitofp i32 %445 to double\l  %447 = fsub double %443, %446\l  %448 = fadd double %431, %447\l  %449 = fsub double %448, %447\l  %450 = fsub double %431, %449\l  %451 = fadd double %434, %450\l  %452 = fcmp oge double %448, 5.000000e-01\l  %453 = zext i1 %452 to i32\l  %454 = add nsw i32 %453, %445\l  %455 = select i1 %452, double 1.000000e+00, double 0.000000e+00\l  %456 = fsub double %448, %455\l  %457 = fadd double %456, %451\l  %458 = fsub double %457, %456\l  %459 = fsub double %451, %458\l  %460 = fmul double %457, 0x3FF921FB54442D18\l  %461 = fneg double %460\l  %462 = tail call double @llvm.fma.f64(double %457, double\l... 0x3FF921FB54442D18, double %461)\l  %463 = tail call double @llvm.fma.f64(double %457, double\l... 0x3C91A62633145C07, double %462)\l  %464 = tail call double @llvm.fma.f64(double %459, double\l... 0x3FF921FB54442D18, double %463)\l  %465 = fadd double %460, %464\l  %466 = fsub double %465, %460\l  %467 = fsub double %464, %466\l  %468 = fmul double %465, %465\l  %469 = fmul double %468, 5.000000e-01\l  %470 = fsub double 1.000000e+00, %469\l  %471 = fsub double 1.000000e+00, %470\l  %472 = fsub double %471, %469\l  %473 = fmul double %468, %468\l  %474 = tail call double @llvm.fma.f64(double %468, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %475 = tail call double @llvm.fma.f64(double %468, double %474, double\l... 0xBE927E4FA17F65F6)\l  %476 = tail call double @llvm.fma.f64(double %468, double %475, double\l... 0x3EFA01A019F4EC90)\l  %477 = tail call double @llvm.fma.f64(double %468, double %476, double\l... 0xBF56C16C16C16967)\l  %478 = tail call double @llvm.fma.f64(double %468, double %477, double\l... 0x3FA5555555555555)\l  %479 = fneg double %467\l  %480 = tail call double @llvm.fma.f64(double %465, double %479, double %472)\l  %481 = tail call double @llvm.fma.f64(double %473, double %478, double %480)\l  %482 = fadd double %470, %481\l  %483 = tail call double @llvm.fma.f64(double %468, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %484 = tail call double @llvm.fma.f64(double %468, double %483, double\l... 0x3EC71DE3796CDE01)\l  %485 = tail call double @llvm.fma.f64(double %468, double %484, double\l... 0xBF2A01A019E83E5C)\l  %486 = tail call double @llvm.fma.f64(double %468, double %485, double\l... 0x3F81111111110BB3)\l  %487 = fneg double %468\l  %488 = fmul double %465, %487\l  %489 = fmul double %467, 5.000000e-01\l  %490 = tail call double @llvm.fma.f64(double %488, double %486, double %489)\l  %491 = tail call double @llvm.fma.f64(double %468, double %490, double %479)\l  %492 = tail call double @llvm.fma.f64(double %488, double\l... 0xBFC5555555555555, double %491)\l  %493 = fsub double %465, %492\l  %494 = and i32 %454, 1\l  %495 = icmp eq i32 %494, 0\l  %496 = select i1 %495, double %493, double %482\l  br label %497\l}"];
	Node0x5155a40 -> Node0x515b050;
	Node0x515b050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%497:\l497:                                              \l  %498 = phi i32 [ %238, %189 ], [ %392, %286 ]\l  %499 = phi double [ %236, %189 ], [ %390, %286 ]\l  %500 = phi i32 [ %207, %189 ], [ %348, %286 ]\l  %501 = phi double [ %285, %189 ], [ %496, %286 ]\l  %502 = phi i32 [ %256, %189 ], [ %454, %286 ]\l  %503 = phi i32 [ %283, %189 ], [ %494, %286 ]\l  %504 = phi double [ %282, %189 ], [ %493, %286 ]\l  %505 = phi double [ %271, %189 ], [ %482, %286 ]\l  %506 = bitcast double %499 to \<2 x i32\>\l  %507 = bitcast double %501 to \<2 x i32\>\l  %508 = shl i32 %502, 30\l  %509 = xor i32 %508, %498\l  %510 = and i32 %509, -2147483648\l  %511 = extractelement \<2 x i32\> %507, i64 1\l  %512 = xor i32 %511, %510\l  %513 = insertelement \<2 x i32\> %507, i32 %512, i64 1\l  %514 = select i1 %184, \<2 x i32\> %513, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %515 = bitcast \<2 x i32\> %514 to double\l  %516 = fmul contract double %186, %515\l  %517 = extractelement \<2 x i32\> %183, i64 1\l  %518 = shl i32 %152, 30\l  %519 = and i32 %518, -2147483648\l  %520 = xor i32 %517, %519\l  %521 = insertelement \<2 x i32\> %183, i32 %520, i64 1\l  %522 = select i1 %184, \<2 x i32\> %521, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %523 = bitcast \<2 x i32\> %522 to double\l  %524 = fmul contract double %186, %523\l  %525 = extractelement \<2 x i32\> %506, i64 1\l  %526 = shl i32 %500, 30\l  %527 = xor i32 %526, %498\l  %528 = and i32 %527, -2147483648\l  %529 = xor i32 %525, %528\l  %530 = insertelement \<2 x i32\> %506, i32 %529, i64 1\l  %531 = select i1 %184, \<2 x i32\> %530, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %532 = bitcast \<2 x i32\> %531 to double\l  %533 = fmul contract double %188, %532\l  %534 = fsub contract double %524, %533\l  %535 = fneg double %504\l  %536 = icmp eq i32 %503, 0\l  %537 = select i1 %536, double %505, double %535\l  %538 = bitcast double %537 to \<2 x i32\>\l  %539 = and i32 %508, -2147483648\l  %540 = extractelement \<2 x i32\> %538, i64 1\l  %541 = xor i32 %540, %539\l  %542 = insertelement \<2 x i32\> %538, i32 %541, i64 1\l  %543 = select i1 %184, \<2 x i32\> %542, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %544 = bitcast \<2 x i32\> %543 to double\l  %545 = fmul contract double %188, %544\l  %546 = fadd contract double %516, %545\l  %547 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %49, i32 0, i32 0, i32 0, i64 0\l  store double %534, double addrspace(1)* %547, align 16\l  %548 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %49, i32 0, i32 0, i32 0, i64 1\l  store double %546, double addrspace(1)* %548, align 8\l  ret void\l}"];
}
