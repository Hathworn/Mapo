digraph "CFG for '_Z9addKernelPfS_S_i' function" {
	label="CFG for '_Z9addKernelPfS_S_i' function";

	Node0x647c710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 2, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %5, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %21 = mul nuw nsw i32 %20, %19\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %10\l  %24 = icmp slt i32 %23, %3\l  br i1 %24, label %25, label %44\l|{<s0>T|<s1>F}}"];
	Node0x647c710:s0 -> Node0x6480140;
	Node0x647c710:s1 -> Node0x64801d0;
	Node0x6480140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%25:\l25:                                               \l  %26 = udiv i32 %13, %10\l  %27 = mul i32 %26, %10\l  %28 = icmp ugt i32 %13, %27\l  %29 = zext i1 %28 to i32\l  %30 = add i32 %26, %29\l  %31 = mul nuw nsw i32 %17, %10\l  %32 = mul i32 %31, %30\l  br label %33\l}"];
	Node0x6480140 -> Node0x647f1f0;
	Node0x647f1f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ %23, %25 ], [ %42, %33 ]\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16\l  %38 = getelementptr inbounds float, float addrspace(1)* %2, i64 %35\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  %40 = fadd contract float %37, %39\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  store float %40, float addrspace(1)* %41, align 4, !tbaa !16\l  %42 = add i32 %32, %34\l  %43 = icmp slt i32 %42, %3\l  br i1 %43, label %33, label %44, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x647f1f0:s0 -> Node0x647f1f0;
	Node0x647f1f0:s1 -> Node0x64801d0;
	Node0x64801d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%44:\l44:                                               \l  ret void\l}"];
}
