digraph "CFG for '_Z5sobelPhS_iiii' function" {
	label="CFG for '_Z5sobelPhS_iiii' function";

	Node0x5d00260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = mul nsw i32 %7, %4\l  %10 = mul nsw i32 %8, %5\l  %11 = add i32 %9, 3\l  %12 = add i32 %11, %10\l  %13 = add i32 %12, -1\l  %14 = sext i32 %13 to i64\l  %15 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %14\l  %16 = load i8, i8 addrspace(1)* %15, align 1, !tbaa !5, !amdgpu.noclobber !8\l  %17 = sext i8 %16 to i32\l  %18 = shl nsw i32 %17, 2\l  %19 = add i32 %12, 1\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %20\l  %22 = load i8, i8 addrspace(1)* %21, align 1, !tbaa !5, !amdgpu.noclobber !8\l  %23 = sext i8 %22 to i32\l  %24 = mul nsw i32 %23, -3\l  %25 = add nsw i32 %24, %18\l  %26 = sub nsw i32 %25, %23\l  %27 = mul nsw i32 %26, %26\l  %28 = sitofp i32 %27 to float\l  %29 = icmp eq i32 %25, %23\l  %30 = select i1 %29, float 0x41F0000000000000, float 1.000000e+00\l  %31 = fmul float %30, %28\l  %32 = tail call float @llvm.sqrt.f32(float %31)\l  %33 = bitcast float %32 to i32\l  %34 = add nsw i32 %33, -1\l  %35 = bitcast i32 %34 to float\l  %36 = add nsw i32 %33, 1\l  %37 = bitcast i32 %36 to float\l  %38 = tail call i1 @llvm.amdgcn.class.f32(float %31, i32 608)\l  %39 = select i1 %29, float 0x3EF0000000000000, float 1.000000e+00\l  %40 = fneg float %37\l  %41 = tail call float @llvm.fma.f32(float %40, float %32, float %31)\l  %42 = fcmp ogt float %41, 0.000000e+00\l  %43 = fneg float %35\l  %44 = tail call float @llvm.fma.f32(float %43, float %32, float %31)\l  %45 = fcmp ole float %44, 0.000000e+00\l  %46 = select i1 %45, float %35, float %32\l  %47 = select i1 %42, float %37, float %46\l  %48 = fmul float %39, %47\l  %49 = select i1 %38, float %31, float %48\l  %50 = fptoui float %49 to i8\l  %51 = add nsw i32 %10, %9\l  %52 = add i32 %51, 2\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %53\l  store i8 %50, i8 addrspace(1)* %54, align 1, !tbaa !5\l  %55 = add i32 %51, 1\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %56\l  %58 = load i8, i8 addrspace(1)* %57, align 1, !tbaa !5\l  %59 = sext i8 %58 to i32\l  %60 = shl nsw i32 %59, 2\l  %61 = add i32 %51, 3\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %62\l  %64 = load i8, i8 addrspace(1)* %63, align 1, !tbaa !5\l  %65 = sext i8 %64 to i32\l  %66 = mul nsw i32 %65, -3\l  %67 = add nsw i32 %66, %60\l  %68 = sub nsw i32 %67, %65\l  %69 = mul nsw i32 %68, %68\l  %70 = sitofp i32 %69 to float\l  %71 = icmp eq i32 %67, %65\l  %72 = select i1 %71, float 0x41F0000000000000, float 1.000000e+00\l  %73 = fmul float %72, %70\l  %74 = tail call float @llvm.sqrt.f32(float %73)\l  %75 = bitcast float %74 to i32\l  %76 = add nsw i32 %75, -1\l  %77 = bitcast i32 %76 to float\l  %78 = add nsw i32 %75, 1\l  %79 = bitcast i32 %78 to float\l  %80 = tail call i1 @llvm.amdgcn.class.f32(float %73, i32 608)\l  %81 = select i1 %71, float 0x3EF0000000000000, float 1.000000e+00\l  %82 = fneg float %79\l  %83 = tail call float @llvm.fma.f32(float %82, float %74, float %73)\l  %84 = fcmp ogt float %83, 0.000000e+00\l  %85 = fneg float %77\l  %86 = tail call float @llvm.fma.f32(float %85, float %74, float %73)\l  %87 = fcmp ole float %86, 0.000000e+00\l  %88 = select i1 %87, float %77, float %74\l  %89 = select i1 %84, float %79, float %88\l  %90 = fmul float %81, %89\l  %91 = select i1 %80, float %73, float %90\l  %92 = fptoui float %91 to i8\l  %93 = add i32 %51, 1\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %94\l  store i8 %92, i8 addrspace(1)* %95, align 1, !tbaa !5\l  %96 = sext i32 %51 to i64\l  %97 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %96\l  %98 = load i8, i8 addrspace(1)* %97, align 1, !tbaa !5\l  %99 = sext i8 %98 to i32\l  %100 = shl nsw i32 %99, 2\l  %101 = add i32 %51, 2\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %102\l  %104 = load i8, i8 addrspace(1)* %103, align 1, !tbaa !5\l  %105 = sext i8 %104 to i32\l  %106 = mul nsw i32 %105, -3\l  %107 = add nsw i32 %106, %100\l  %108 = sub nsw i32 %107, %105\l  %109 = mul nsw i32 %108, %108\l  %110 = sitofp i32 %109 to float\l  %111 = icmp eq i32 %107, %105\l  %112 = select i1 %111, float 0x41F0000000000000, float 1.000000e+00\l  %113 = fmul float %112, %110\l  %114 = tail call float @llvm.sqrt.f32(float %113)\l  %115 = bitcast float %114 to i32\l  %116 = add nsw i32 %115, -1\l  %117 = bitcast i32 %116 to float\l  %118 = add nsw i32 %115, 1\l  %119 = bitcast i32 %118 to float\l  %120 = tail call i1 @llvm.amdgcn.class.f32(float %113, i32 608)\l  %121 = select i1 %111, float 0x3EF0000000000000, float 1.000000e+00\l  %122 = fneg float %119\l  %123 = tail call float @llvm.fma.f32(float %122, float %114, float %113)\l  %124 = fcmp ogt float %123, 0.000000e+00\l  %125 = fneg float %117\l  %126 = tail call float @llvm.fma.f32(float %125, float %114, float %113)\l  %127 = fcmp ole float %126, 0.000000e+00\l  %128 = select i1 %127, float %117, float %114\l  %129 = select i1 %124, float %119, float %128\l  %130 = fmul float %121, %129\l  %131 = select i1 %120, float %113, float %130\l  %132 = fptoui float %131 to i8\l  %133 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %96\l  store i8 %132, i8 addrspace(1)* %133, align 1, !tbaa !5\l  ret void\l}"];
}
