; ModuleID = '../data/hip_kernels/1697/0/main.cu'
source_filename = "../data/hip_kernels/1697/0/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind
define protected amdgpu_kernel void @_Z9cudaisingPiPdS_(i32 addrspace(1)* nocapture readonly %0, double addrspace(1)* nocapture readonly %1, i32 addrspace(1)* nocapture writeonly %2) local_unnamed_addr #0 {
  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4
  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()
  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4
  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*
  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6
  %10 = zext i16 %9 to i32
  %11 = mul i32 %5, %10
  %12 = add nuw nsw i32 %4, %10
  %13 = add i32 %5, %10
  %14 = add i32 %13, -2
  %15 = urem i32 %14, %10
  %16 = mul nuw nsw i32 %15, %10
  %17 = load double, double addrspace(1)* %1, align 8, !tbaa !7, !amdgpu.noclobber !6
  %18 = add nsw i32 %12, -2
  %19 = urem i32 %18, %10
  %20 = add nuw nsw i32 %16, %19
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %21
  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !11, !amdgpu.noclobber !6
  %24 = sitofp i32 %23 to double
  %25 = fmul contract double %17, %24
  %26 = fadd contract double %25, 0.000000e+00
  %27 = getelementptr inbounds double, double addrspace(1)* %1, i64 1
  %28 = load double, double addrspace(1)* %27, align 8, !tbaa !7, !amdgpu.noclobber !6
  %29 = trunc i32 %12 to i16
  %30 = add nsw i16 %29, -1
  %31 = urem i16 %30, %9
  %32 = zext i16 %31 to i32
  %33 = add nuw nsw i32 %16, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %34
  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !11, !amdgpu.noclobber !6
  %37 = sitofp i32 %36 to double
  %38 = fmul contract double %28, %37
  %39 = fadd contract double %26, %38
  %40 = getelementptr inbounds double, double addrspace(1)* %1, i64 2
  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !7, !amdgpu.noclobber !6
  %42 = trunc i32 %12 to i16
  %43 = urem i16 %42, %9
  %44 = zext i16 %43 to i32
  %45 = add nuw nsw i32 %16, %44
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %46
  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !11, !amdgpu.noclobber !6
  %49 = sitofp i32 %48 to double
  %50 = fmul contract double %41, %49
  %51 = fadd contract double %39, %50
  %52 = getelementptr inbounds double, double addrspace(1)* %1, i64 3
  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !7, !amdgpu.noclobber !6
  %54 = trunc i32 %12 to i16
  %55 = add nuw nsw i16 %54, 1
  %56 = urem i16 %55, %9
  %57 = zext i16 %56 to i32
  %58 = add nuw nsw i32 %16, %57
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %59
  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !11, !amdgpu.noclobber !6
  %62 = sitofp i32 %61 to double
  %63 = fmul contract double %53, %62
  %64 = fadd contract double %51, %63
  %65 = getelementptr inbounds double, double addrspace(1)* %1, i64 4
  %66 = load double, double addrspace(1)* %65, align 8, !tbaa !7, !amdgpu.noclobber !6
  %67 = trunc i32 %12 to i16
  %68 = add nuw nsw i16 %67, 2
  %69 = urem i16 %68, %9
  %70 = zext i16 %69 to i32
  %71 = add nuw nsw i32 %16, %70
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %72
  %74 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !11, !amdgpu.noclobber !6
  %75 = sitofp i32 %74 to double
  %76 = fmul contract double %66, %75
  %77 = fadd contract double %64, %76
  %78 = add i32 %13, -1
  %79 = urem i32 %78, %10
  %80 = mul nuw nsw i32 %79, %10
  %81 = getelementptr inbounds double, double addrspace(1)* %1, i64 5
  %82 = load double, double addrspace(1)* %81, align 8, !tbaa !7, !amdgpu.noclobber !6
  %83 = add nuw nsw i32 %80, %19
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %84
  %86 = load i32, i32 addrspace(1)* %85, align 4, !tbaa !11, !amdgpu.noclobber !6
  %87 = sitofp i32 %86 to double
  %88 = fmul contract double %82, %87
  %89 = fadd contract double %77, %88
  %90 = getelementptr inbounds double, double addrspace(1)* %1, i64 6
  %91 = load double, double addrspace(1)* %90, align 8, !tbaa !7, !amdgpu.noclobber !6
  %92 = add nuw nsw i32 %80, %32
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %93
  %95 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !11, !amdgpu.noclobber !6
  %96 = sitofp i32 %95 to double
  %97 = fmul contract double %91, %96
  %98 = fadd contract double %89, %97
  %99 = getelementptr inbounds double, double addrspace(1)* %1, i64 7
  %100 = load double, double addrspace(1)* %99, align 8, !tbaa !7, !amdgpu.noclobber !6
  %101 = add nuw nsw i32 %80, %44
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %102
  %104 = load i32, i32 addrspace(1)* %103, align 4, !tbaa !11, !amdgpu.noclobber !6
  %105 = sitofp i32 %104 to double
  %106 = fmul contract double %100, %105
  %107 = fadd contract double %98, %106
  %108 = getelementptr inbounds double, double addrspace(1)* %1, i64 8
  %109 = load double, double addrspace(1)* %108, align 8, !tbaa !7, !amdgpu.noclobber !6
  %110 = add nuw nsw i32 %80, %57
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %111
  %113 = load i32, i32 addrspace(1)* %112, align 4, !tbaa !11, !amdgpu.noclobber !6
  %114 = sitofp i32 %113 to double
  %115 = fmul contract double %109, %114
  %116 = fadd contract double %107, %115
  %117 = getelementptr inbounds double, double addrspace(1)* %1, i64 9
  %118 = load double, double addrspace(1)* %117, align 8, !tbaa !7, !amdgpu.noclobber !6
  %119 = add nuw nsw i32 %80, %70
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %120
  %122 = load i32, i32 addrspace(1)* %121, align 4, !tbaa !11, !amdgpu.noclobber !6
  %123 = sitofp i32 %122 to double
  %124 = fmul contract double %118, %123
  %125 = fadd contract double %116, %124
  %126 = urem i32 %13, %10
  %127 = mul nuw nsw i32 %126, %10
  %128 = getelementptr inbounds double, double addrspace(1)* %1, i64 10
  %129 = load double, double addrspace(1)* %128, align 8, !tbaa !7, !amdgpu.noclobber !6
  %130 = add nuw nsw i32 %127, %19
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %131
  %133 = load i32, i32 addrspace(1)* %132, align 4, !tbaa !11, !amdgpu.noclobber !6
  %134 = sitofp i32 %133 to double
  %135 = fmul contract double %129, %134
  %136 = fadd contract double %125, %135
  %137 = getelementptr inbounds double, double addrspace(1)* %1, i64 11
  %138 = load double, double addrspace(1)* %137, align 8, !tbaa !7, !amdgpu.noclobber !6
  %139 = add nuw nsw i32 %127, %32
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %140
  %142 = load i32, i32 addrspace(1)* %141, align 4, !tbaa !11, !amdgpu.noclobber !6
  %143 = sitofp i32 %142 to double
  %144 = fmul contract double %138, %143
  %145 = fadd contract double %136, %144
  %146 = getelementptr inbounds double, double addrspace(1)* %1, i64 12
  %147 = load double, double addrspace(1)* %146, align 8, !tbaa !7, !amdgpu.noclobber !6
  %148 = add nuw nsw i32 %127, %44
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %149
  %151 = load i32, i32 addrspace(1)* %150, align 4, !tbaa !11, !amdgpu.noclobber !6
  %152 = sitofp i32 %151 to double
  %153 = fmul contract double %147, %152
  %154 = fadd contract double %145, %153
  %155 = getelementptr inbounds double, double addrspace(1)* %1, i64 13
  %156 = load double, double addrspace(1)* %155, align 8, !tbaa !7, !amdgpu.noclobber !6
  %157 = add nuw nsw i32 %127, %57
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %158
  %160 = load i32, i32 addrspace(1)* %159, align 4, !tbaa !11, !amdgpu.noclobber !6
  %161 = sitofp i32 %160 to double
  %162 = fmul contract double %156, %161
  %163 = fadd contract double %154, %162
  %164 = getelementptr inbounds double, double addrspace(1)* %1, i64 14
  %165 = load double, double addrspace(1)* %164, align 8, !tbaa !7, !amdgpu.noclobber !6
  %166 = add nuw nsw i32 %127, %70
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %167
  %169 = load i32, i32 addrspace(1)* %168, align 4, !tbaa !11, !amdgpu.noclobber !6
  %170 = sitofp i32 %169 to double
  %171 = fmul contract double %165, %170
  %172 = fadd contract double %163, %171
  %173 = add i32 %13, 1
  %174 = urem i32 %173, %10
  %175 = mul nuw nsw i32 %174, %10
  %176 = getelementptr inbounds double, double addrspace(1)* %1, i64 15
  %177 = load double, double addrspace(1)* %176, align 8, !tbaa !7, !amdgpu.noclobber !6
  %178 = add nuw nsw i32 %175, %19
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %179
  %181 = load i32, i32 addrspace(1)* %180, align 4, !tbaa !11, !amdgpu.noclobber !6
  %182 = sitofp i32 %181 to double
  %183 = fmul contract double %177, %182
  %184 = fadd contract double %172, %183
  %185 = getelementptr inbounds double, double addrspace(1)* %1, i64 16
  %186 = load double, double addrspace(1)* %185, align 8, !tbaa !7, !amdgpu.noclobber !6
  %187 = add nuw nsw i32 %175, %32
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %188
  %190 = load i32, i32 addrspace(1)* %189, align 4, !tbaa !11, !amdgpu.noclobber !6
  %191 = sitofp i32 %190 to double
  %192 = fmul contract double %186, %191
  %193 = fadd contract double %184, %192
  %194 = getelementptr inbounds double, double addrspace(1)* %1, i64 17
  %195 = load double, double addrspace(1)* %194, align 8, !tbaa !7, !amdgpu.noclobber !6
  %196 = add nuw nsw i32 %175, %44
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %197
  %199 = load i32, i32 addrspace(1)* %198, align 4, !tbaa !11, !amdgpu.noclobber !6
  %200 = sitofp i32 %199 to double
  %201 = fmul contract double %195, %200
  %202 = fadd contract double %193, %201
  %203 = getelementptr inbounds double, double addrspace(1)* %1, i64 18
  %204 = load double, double addrspace(1)* %203, align 8, !tbaa !7, !amdgpu.noclobber !6
  %205 = add nuw nsw i32 %175, %57
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %206
  %208 = load i32, i32 addrspace(1)* %207, align 4, !tbaa !11, !amdgpu.noclobber !6
  %209 = sitofp i32 %208 to double
  %210 = fmul contract double %204, %209
  %211 = fadd contract double %202, %210
  %212 = getelementptr inbounds double, double addrspace(1)* %1, i64 19
  %213 = load double, double addrspace(1)* %212, align 8, !tbaa !7, !amdgpu.noclobber !6
  %214 = add nuw nsw i32 %175, %70
  %215 = zext i32 %214 to i64
  %216 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %215
  %217 = load i32, i32 addrspace(1)* %216, align 4, !tbaa !11, !amdgpu.noclobber !6
  %218 = sitofp i32 %217 to double
  %219 = fmul contract double %213, %218
  %220 = fadd contract double %211, %219
  %221 = add i32 %13, 2
  %222 = urem i32 %221, %10
  %223 = mul nuw nsw i32 %222, %10
  %224 = getelementptr inbounds double, double addrspace(1)* %1, i64 20
  %225 = load double, double addrspace(1)* %224, align 8, !tbaa !7, !amdgpu.noclobber !6
  %226 = add nuw nsw i32 %223, %19
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %227
  %229 = load i32, i32 addrspace(1)* %228, align 4, !tbaa !11, !amdgpu.noclobber !6
  %230 = sitofp i32 %229 to double
  %231 = fmul contract double %225, %230
  %232 = fadd contract double %220, %231
  %233 = getelementptr inbounds double, double addrspace(1)* %1, i64 21
  %234 = load double, double addrspace(1)* %233, align 8, !tbaa !7, !amdgpu.noclobber !6
  %235 = add nuw nsw i32 %223, %32
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %236
  %238 = load i32, i32 addrspace(1)* %237, align 4, !tbaa !11, !amdgpu.noclobber !6
  %239 = sitofp i32 %238 to double
  %240 = fmul contract double %234, %239
  %241 = fadd contract double %232, %240
  %242 = getelementptr inbounds double, double addrspace(1)* %1, i64 22
  %243 = load double, double addrspace(1)* %242, align 8, !tbaa !7, !amdgpu.noclobber !6
  %244 = add nuw nsw i32 %223, %44
  %245 = zext i32 %244 to i64
  %246 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %245
  %247 = load i32, i32 addrspace(1)* %246, align 4, !tbaa !11, !amdgpu.noclobber !6
  %248 = sitofp i32 %247 to double
  %249 = fmul contract double %243, %248
  %250 = fadd contract double %241, %249
  %251 = getelementptr inbounds double, double addrspace(1)* %1, i64 23
  %252 = load double, double addrspace(1)* %251, align 8, !tbaa !7, !amdgpu.noclobber !6
  %253 = add nuw nsw i32 %223, %57
  %254 = zext i32 %253 to i64
  %255 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %254
  %256 = load i32, i32 addrspace(1)* %255, align 4, !tbaa !11, !amdgpu.noclobber !6
  %257 = sitofp i32 %256 to double
  %258 = fmul contract double %252, %257
  %259 = fadd contract double %250, %258
  %260 = getelementptr inbounds double, double addrspace(1)* %1, i64 24
  %261 = load double, double addrspace(1)* %260, align 8, !tbaa !7, !amdgpu.noclobber !6
  %262 = add nuw nsw i32 %223, %70
  %263 = zext i32 %262 to i64
  %264 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %263
  %265 = load i32, i32 addrspace(1)* %264, align 4, !tbaa !11, !amdgpu.noclobber !6
  %266 = sitofp i32 %265 to double
  %267 = fmul contract double %261, %266
  %268 = fadd contract double %259, %267
  %269 = add i32 %11, %4
  %270 = fcmp contract ogt double %268, 0x3EB0C6F7A0B5ED8D
  br i1 %270, label %271, label %273

271:                                              ; preds = %3
  %272 = sext i32 %269 to i64
  br label %279

273:                                              ; preds = %3
  %274 = fcmp contract olt double %268, 0xBEB0C6F7A0B5ED8D
  %275 = sext i32 %269 to i64
  br i1 %274, label %279, label %276

276:                                              ; preds = %273
  %277 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %275
  %278 = load i32, i32 addrspace(1)* %277, align 4, !tbaa !11, !amdgpu.noclobber !6
  br label %279

279:                                              ; preds = %273, %276, %271
  %280 = phi i64 [ %275, %276 ], [ %272, %271 ], [ %275, %273 ]
  %281 = phi i32 [ %278, %276 ], [ 1, %271 ], [ -1, %273 ]
  %282 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %280
  store i32 %281, i32 addrspace(1)* %282, align 4, !tbaa !11
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr() #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #1

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{i32 0, i32 1024}
!5 = !{i16 1, i16 1025}
!6 = !{}
!7 = !{!8, !8, i64 0}
!8 = !{!"double", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C++ TBAA"}
!11 = !{!12, !12, i64 0}
!12 = !{!"int", !9, i64 0}
