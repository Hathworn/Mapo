digraph "CFG for '_Z19map_index_to_prefixPhPjS0_S0_S0_jj' function" {
	label="CFG for '_Z19map_index_to_prefixPhPjS0_S0_S0_jj' function";

	Node0x476bf80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%7:\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = mul i32 %13, %12\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp ult i32 %16, %6\l  br i1 %17, label %18, label %89\l|{<s0>T|<s1>F}}"];
	Node0x476bf80:s0 -> Node0x476df10;
	Node0x476bf80:s1 -> Node0x476dfa0;
	Node0x476df10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%18:\l18:                                               \l  %19 = zext i32 %16 to i64\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %19\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %22 = mul i32 %21, 30\l  %23 = zext i32 %22 to i64\l  %24 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %23\l  %25 = mul i32 %5, 3\l  %26 = zext i32 %25 to i64\l  %27 = getelementptr inbounds i8, i8 addrspace(1)* %24, i64 %26\l  %28 = load i8, i8 addrspace(1)* %27, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %29 = zext i8 %28 to i32\l  %30 = shl nuw nsw i32 %29, 16\l  %31 = getelementptr inbounds i8, i8 addrspace(1)* %27, i64 1\l  %32 = load i8, i8 addrspace(1)* %31, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %33 = zext i8 %32 to i32\l  %34 = shl nuw nsw i32 %33, 8\l  %35 = or i32 %34, %30\l  %36 = getelementptr inbounds i8, i8 addrspace(1)* %27, i64 2\l  %37 = load i8, i8 addrspace(1)* %36, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %38 = zext i8 %37 to i32\l  %39 = or i32 %35, %38\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %40\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %40\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %45 = sub i32 %44, %42\l  %46 = icmp ult i32 %45, %44\l  br i1 %46, label %47, label %89\l|{<s0>T|<s1>F}}"];
	Node0x476df10:s0 -> Node0x47707c0;
	Node0x476df10:s1 -> Node0x476dfa0;
	Node0x47707c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%47:\l47:                                               \l  %48 = add i32 %42, -1\l  %49 = and i32 %42, 7\l  %50 = icmp eq i32 %49, 0\l  br i1 %50, label %59, label %51\l|{<s0>T|<s1>F}}"];
	Node0x47707c0:s0 -> Node0x4770b10;
	Node0x47707c0:s1 -> Node0x4770b60;
	Node0x4770b60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32 [ %56, %51 ], [ %45, %47 ]\l  %53 = phi i32 [ %57, %51 ], [ 0, %47 ]\l  %54 = sext i32 %52 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %54\l  store i32 %39, i32 addrspace(1)* %55, align 4, !tbaa !7\l  %56 = add nuw nsw i32 %52, 1\l  %57 = add i32 %53, 1\l  %58 = icmp eq i32 %57, %49\l  br i1 %58, label %59, label %51, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4770b60:s0 -> Node0x4770b10;
	Node0x4770b60:s1 -> Node0x4770b60;
	Node0x4770b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%59:\l59:                                               \l  %60 = phi i32 [ %45, %47 ], [ %56, %51 ]\l  %61 = icmp ult i32 %48, 7\l  br i1 %61, label %89, label %62\l|{<s0>T|<s1>F}}"];
	Node0x4770b10:s0 -> Node0x476dfa0;
	Node0x4770b10:s1 -> Node0x47714d0;
	Node0x47714d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%62:\l62:                                               \l  %63 = phi i32 [ %87, %62 ], [ %60, %59 ]\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %64\l  store i32 %39, i32 addrspace(1)* %65, align 4, !tbaa !7\l  %66 = add nuw nsw i32 %63, 1\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %67\l  store i32 %39, i32 addrspace(1)* %68, align 4, !tbaa !7\l  %69 = add nuw nsw i32 %63, 2\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %70\l  store i32 %39, i32 addrspace(1)* %71, align 4, !tbaa !7\l  %72 = add nuw nsw i32 %63, 3\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %73\l  store i32 %39, i32 addrspace(1)* %74, align 4, !tbaa !7\l  %75 = add nuw nsw i32 %63, 4\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %76\l  store i32 %39, i32 addrspace(1)* %77, align 4, !tbaa !7\l  %78 = add nuw nsw i32 %63, 5\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %79\l  store i32 %39, i32 addrspace(1)* %80, align 4, !tbaa !7\l  %81 = add nuw nsw i32 %63, 6\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %82\l  store i32 %39, i32 addrspace(1)* %83, align 4, !tbaa !7\l  %84 = add nuw nsw i32 %63, 7\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %85\l  store i32 %39, i32 addrspace(1)* %86, align 4, !tbaa !7\l  %87 = add nuw nsw i32 %63, 8\l  %88 = icmp eq i32 %87, %44\l  br i1 %88, label %89, label %62, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x47714d0:s0 -> Node0x476dfa0;
	Node0x47714d0:s1 -> Node0x47714d0;
	Node0x476dfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%89:\l89:                                               \l  ret void\l}"];
}
