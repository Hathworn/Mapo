digraph "CFG for '_Z8vis2intsdP15HIP_vector_typeIdLj2EEPS_IiLj2EEi' function" {
	label="CFG for '_Z8vis2intsdP15HIP_vector_typeIdLj2EEPS_IiLj2EEi' function";

	Node0x5e185e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = icmp slt i32 %16, %3\l  br i1 %17, label %18, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5e185e0:s0 -> Node0x5e18670;
	Node0x5e185e0:s1 -> Node0x5e1a8b0;
	Node0x5e18670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  %19 = udiv i32 %14, %11\l  %20 = mul i32 %19, %11\l  %21 = icmp ugt i32 %14, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %11\l  br label %26\l}"];
	Node0x5e18670 -> Node0x5e1ad30;
	Node0x5e1a8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%25:\l25:                                               \l  ret void\l}"];
	Node0x5e1ad30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i32 [ %16, %18 ], [ %55, %26 ]\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %28, i32 0, i32 0, i32 0, i64 0\l  %30 = load double, double addrspace(1)* %29, align 16\l  %31 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %28, i32 0, i32 0, i32 0, i64 1\l  %32 = load double, double addrspace(1)* %31, align 8\l  %33 = fmul contract double %30, %0\l  %34 = fmul contract double %32, %0\l  %35 = tail call double @llvm.floor.f64(double %34)\l  %36 = fptosi double %35 to i32\l  %37 = sitofp i32 %36 to double\l  %38 = fsub contract double %34, %37\l  %39 = fmul contract double %38, 8.000000e+00\l  %40 = tail call double @llvm.floor.f64(double %39)\l  %41 = fptosi double %40 to i32\l  %42 = tail call double @llvm.floor.f64(double %33)\l  %43 = fptosi double %42 to i32\l  %44 = sitofp i32 %43 to double\l  %45 = fsub contract double %33, %44\l  %46 = fmul contract double %45, 8.000000e+00\l  %47 = tail call double @llvm.floor.f64(double %46)\l  %48 = fptosi double %47 to i32\l  %49 = shl nsw i32 %43, 3\l  %50 = add nsw i32 %49, %48\l  %51 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64\l... 0\l  store i32 %50, i32 addrspace(1)* %51, align 8, !tbaa !16\l  %52 = shl nsw i32 %36, 3\l  %53 = add nsw i32 %52, %41\l  %54 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64\l... 1\l  store i32 %53, i32 addrspace(1)* %54, align 4, !tbaa !16\l  %55 = add i32 %24, %27\l  %56 = icmp slt i32 %55, %3\l  br i1 %56, label %26, label %25, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5e1ad30:s0 -> Node0x5e1ad30;
	Node0x5e1ad30:s1 -> Node0x5e1a8b0;
}
