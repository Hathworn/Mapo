digraph "CFG for '_Z11kAddColMultPfS_S_fjj' function" {
	label="CFG for '_Z11kAddColMultPfS_S_fjj' function";

	Node0x4871600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = mul i32 %7, %12\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %18 = add i32 %16, %17\l  %19 = udiv i32 %15, %12\l  %20 = mul i32 %19, %12\l  %21 = icmp ugt i32 %15, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %12\l  %25 = mul i32 %5, %4\l  %26 = icmp ult i32 %18, %25\l  br i1 %26, label %28, label %27\l|{<s0>T|<s1>F}}"];
	Node0x4871600:s0 -> Node0x4873c20;
	Node0x4871600:s1 -> Node0x4873cb0;
	Node0x4873cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%27:\l27:                                               \l  ret void\l}"];
	Node0x4873c20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %40, %28 ], [ %18, %6 ]\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %33 = urem i32 %29, %5\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %37 = fmul contract float %36, %3\l  %38 = fadd contract float %32, %37\l  %39 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  store float %38, float addrspace(1)* %39, align 4, !tbaa !16\l  %40 = add i32 %29, %24\l  %41 = icmp ult i32 %40, %25\l  br i1 %41, label %28, label %27, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4873c20:s0 -> Node0x4873c20;
	Node0x4873c20:s1 -> Node0x4873cb0;
}
