digraph "CFG for '_Z10kCorrelatePfS_S_iiii' function" {
	label="CFG for '_Z10kCorrelatePfS_S_iiii' function";

	Node0x5b66e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !6\l  %17 = mul i32 %8, %13\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %19 = add i32 %17, %18\l  %20 = udiv i32 %16, %13\l  %21 = mul i32 %20, %13\l  %22 = icmp ugt i32 %16, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %13\l  %26 = mul nsw i32 %4, %3\l  %27 = icmp ult i32 %19, %26\l  br i1 %27, label %28, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5b66e90:s0 -> Node0x5b69480;
	Node0x5b66e90:s1 -> Node0x5b69510;
	Node0x5b69480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%28:\l28:                                               \l  %29 = sdiv i32 %5, -2\l  %30 = sdiv i32 %5, 2\l  %31 = icmp sgt i32 %29, %30\l  %32 = sdiv i32 %6, -2\l  %33 = sdiv i32 %6, 2\l  %34 = icmp sgt i32 %32, %33\l  %35 = mul nsw i32 %6, %5\l  %36 = sdiv i32 %35, 2\l  br label %38\l}"];
	Node0x5b69480 -> Node0x5b68bc0;
	Node0x5b69510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%37:\l37:                                               \l  ret void\l}"];
	Node0x5b68bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%38:\l38:                                               \l  %39 = phi i32 [ %19, %28 ], [ %44, %40 ]\l  br i1 %31, label %40, label %46\l|{<s0>T|<s1>F}}"];
	Node0x5b68bc0:s0 -> Node0x5b69d40;
	Node0x5b68bc0:s1 -> Node0x5b69e40;
	Node0x5b69d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%40:\l40:                                               \l  %41 = phi float [ 0.000000e+00, %38 ], [ %63, %62 ]\l  %42 = zext i32 %39 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %2, i64 %42\l  store float %41, float addrspace(1)* %43, align 4, !tbaa !16\l  %44 = add i32 %39, %25\l  %45 = icmp ult i32 %44, %26\l  br i1 %45, label %38, label %37, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5b69d40:s0 -> Node0x5b68bc0;
	Node0x5b69d40:s1 -> Node0x5b69510;
	Node0x5b69e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%46:\l46:                                               \l  %47 = phi float [ %63, %62 ], [ 0.000000e+00, %38 ]\l  %48 = phi i32 [ %64, %62 ], [ %29, %38 ]\l  br i1 %34, label %62, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5b69e40:s0 -> Node0x5b6aa00;
	Node0x5b69e40:s1 -> Node0x5b6b280;
	Node0x5b6b280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%49:\l49:                                               \l  %50 = freeze i32 %39\l  %51 = freeze i32 %4\l  %52 = udiv i32 %50, %51\l  %53 = add i32 %52, %48\l  %54 = mul i32 %52, %51\l  %55 = sub i32 %50, %54\l  %56 = mul nsw i32 %48, %4\l  %57 = add i32 %56, %39\l  %58 = icmp sgt i32 %53, -1\l  %59 = icmp slt i32 %53, %3\l  %60 = mul nsw i32 %48, %6\l  %61 = add nsw i32 %60, %36\l  br label %66\l}"];
	Node0x5b6b280 -> Node0x5b6ba40;
	Node0x5b6aa00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%62:\l62:                                               \l  %63 = phi float [ %47, %46 ], [ %87, %86 ]\l  %64 = add nsw i32 %48, 1\l  %65 = icmp slt i32 %48, %30\l  br i1 %65, label %46, label %40, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5b6aa00:s0 -> Node0x5b69e40;
	Node0x5b6aa00:s1 -> Node0x5b69d40;
	Node0x5b6ba40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi float [ %47, %49 ], [ %87, %86 ]\l  %68 = phi i32 [ %32, %49 ], [ %88, %86 ]\l  %69 = add i32 %55, %68\l  %70 = add i32 %57, %68\l  br i1 %58, label %71, label %86\l|{<s0>T|<s1>F}}"];
	Node0x5b6ba40:s0 -> Node0x5b6c390;
	Node0x5b6ba40:s1 -> Node0x5b6bb30;
	Node0x5b6c390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%71:\l71:                                               \l  %72 = icmp sgt i32 %69, -1\l  %73 = select i1 %59, i1 %72, i1 false\l  %74 = icmp slt i32 %69, %4\l  %75 = select i1 %73, i1 %74, i1 false\l  br i1 %75, label %76, label %86\l|{<s0>T|<s1>F}}"];
	Node0x5b6c390:s0 -> Node0x5b6c780;
	Node0x5b6c390:s1 -> Node0x5b6bb30;
	Node0x5b6c780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%76:\l76:                                               \l  %77 = sext i32 %70 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !16\l  %80 = add nsw i32 %61, %68\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %1, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !16\l  %84 = fmul contract float %79, %83\l  %85 = fadd contract float %67, %84\l  br label %86\l}"];
	Node0x5b6c780 -> Node0x5b6bb30;
	Node0x5b6bb30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  %87 = phi float [ %85, %76 ], [ %67, %71 ], [ %67, %66 ]\l  %88 = add nsw i32 %68, 1\l  %89 = icmp slt i32 %68, %33\l  br i1 %89, label %66, label %62, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5b6bb30:s0 -> Node0x5b6ba40;
	Node0x5b6bb30:s1 -> Node0x5b6aa00;
}
