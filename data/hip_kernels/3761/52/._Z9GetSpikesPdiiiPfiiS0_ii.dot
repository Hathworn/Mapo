digraph "CFG for '_Z9GetSpikesPdiiiPfiiS0_ii' function" {
	label="CFG for '_Z9GetSpikesPdiiiPfiiS0_ii' function";

	Node0x63b0bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %27 = add i32 %25, %26\l  %28 = icmp slt i32 %19, %1\l  %29 = icmp slt i32 %27, %2\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %54\l|{<s0>T|<s1>F}}"];
	Node0x63b0bf0:s0 -> Node0x63b51d0;
	Node0x63b0bf0:s1 -> Node0x63b5260;
	Node0x63b51d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %27, %1\l  %33 = add nsw i32 %32, %19\l  %34 = mul nsw i32 %19, %8\l  %35 = mul nsw i32 %27, %9\l  %36 = add nsw i32 %35, %34\l  %37 = mul nsw i32 %19, %5\l  %38 = mul nsw i32 %27, %6\l  %39 = add nsw i32 %38, %37\l  %40 = sext i32 %36 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %7, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = fpext float %42 to double\l  %44 = sext i32 %33 to i64\l  %45 = getelementptr inbounds double, double addrspace(1)* %0, i64 %44\l  %46 = load double, double addrspace(1)* %45, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %47 = sext i32 %39 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %4, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %50 = fpext float %49 to double\l  %51 = fmul contract double %46, %50\l  %52 = fadd contract double %51, %43\l  %53 = fptrunc double %52 to float\l  store float %53, float addrspace(1)* %41, align 4, !tbaa !7\l  br label %54\l}"];
	Node0x63b51d0 -> Node0x63b5260;
	Node0x63b5260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  ret void\l}"];
}
