digraph "CFG for '_Z13gpu_mix24_1_1PhjPiS0_iPtijiii' function" {
	label="CFG for '_Z13gpu_mix24_1_1PhjPiS0_iPtijiii' function";

	Node0x4e45f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = add i32 %19, %12\l  %21 = icmp slt i32 %20, %4\l  br i1 %21, label %22, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4e45f40:s0 -> Node0x4e48a50;
	Node0x4e45f40:s1 -> Node0x4e48ae0;
	Node0x4e48a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%22:\l22:                                               \l  %23 = shl nsw i32 %20, 1\l  %24 = mul nsw i32 %20, 3\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %25\l  %27 = mul i32 %1, 3\l  %28 = add i32 %27, -3\l  %29 = mul i32 %20, %28\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds i8, i8 addrspace(1)* %26, i64 %30\l  %32 = load i8, i8 addrspace(1)* %31, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %33 = zext i8 %32 to i32\l  %34 = shl nuw nsw i32 %33, 16\l  %35 = getelementptr inbounds i8, i8 addrspace(1)* %31, i64 1\l  %36 = load i8, i8 addrspace(1)* %35, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %37 = zext i8 %36 to i32\l  %38 = shl nuw nsw i32 %37, 8\l  %39 = or i32 %38, %34\l  %40 = getelementptr inbounds i8, i8 addrspace(1)* %31, i64 2\l  %41 = load i8, i8 addrspace(1)* %40, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %42 = zext i8 %41 to i32\l  %43 = or i32 %39, %42\l  %44 = shl nuw i32 %43, 8\l  %45 = ashr exact i32 %44, 8\l  %46 = getelementptr inbounds i8, i8 addrspace(1)* %31, i64 3\l  %47 = load i8, i8 addrspace(1)* %46, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %48 = zext i8 %47 to i32\l  %49 = shl nuw nsw i32 %48, 16\l  %50 = getelementptr inbounds i8, i8 addrspace(1)* %46, i64 1\l  %51 = load i8, i8 addrspace(1)* %50, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %52 = zext i8 %51 to i32\l  %53 = shl nuw nsw i32 %52, 8\l  %54 = or i32 %53, %49\l  %55 = getelementptr inbounds i8, i8 addrspace(1)* %46, i64 2\l  %56 = load i8, i8 addrspace(1)* %55, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %57 = zext i8 %56 to i32\l  %58 = or i32 %54, %57\l  %59 = shl nuw i32 %58, 8\l  %60 = ashr exact i32 %59, 8\l  %61 = and i32 %43, %7\l  %62 = trunc i32 %61 to i16\l  %63 = sext i32 %23 to i64\l  %64 = getelementptr inbounds i16, i16 addrspace(1)* %5, i64 %63\l  store i16 %62, i16 addrspace(1)* %64, align 2, !tbaa !10\l  %65 = and i32 %58, %7\l  %66 = trunc i32 %65 to i16\l  %67 = add nuw nsw i32 %23, 1\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i16, i16 addrspace(1)* %5, i64 %68\l  store i16 %66, i16 addrspace(1)* %69, align 2, !tbaa !10\l  %70 = ashr i32 %45, %10\l  %71 = ashr i32 %60, %10\l  %72 = mul nsw i32 %70, %6\l  %73 = mul nsw i32 %71, %8\l  %74 = add nsw i32 %73, %72\l  %75 = ashr i32 %74, %9\l  %76 = sext i32 %20 to i64\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %76\l  store i32 %75, i32 addrspace(1)* %77, align 4, !tbaa !12\l  %78 = sub nsw i32 %70, %71\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %76\l  store i32 %78, i32 addrspace(1)* %79, align 4, !tbaa !12\l  br label %80\l}"];
	Node0x4e48a50 -> Node0x4e48ae0;
	Node0x4e48ae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  ret void\l}"];
}
