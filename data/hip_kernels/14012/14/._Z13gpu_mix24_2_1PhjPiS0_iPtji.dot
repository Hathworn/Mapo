digraph "CFG for '_Z13gpu_mix24_2_1PhjPiS0_iPtji' function" {
	label="CFG for '_Z13gpu_mix24_2_1PhjPiS0_iPtji' function";

	Node0x63949f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = add i32 %16, %9\l  %18 = icmp slt i32 %17, %4\l  br i1 %18, label %19, label %72\l|{<s0>T|<s1>F}}"];
	Node0x63949f0:s0 -> Node0x6396920;
	Node0x63949f0:s1 -> Node0x63969b0;
	Node0x6396920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%19:\l19:                                               \l  %20 = shl nsw i32 %17, 1\l  %21 = mul nsw i32 %17, 3\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %22\l  %24 = mul i32 %1, 3\l  %25 = add i32 %24, -3\l  %26 = mul i32 %17, %25\l  %27 = zext i32 %26 to i64\l  %28 = getelementptr inbounds i8, i8 addrspace(1)* %23, i64 %27\l  %29 = load i8, i8 addrspace(1)* %28, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %30 = zext i8 %29 to i32\l  %31 = shl nuw nsw i32 %30, 16\l  %32 = getelementptr inbounds i8, i8 addrspace(1)* %28, i64 1\l  %33 = load i8, i8 addrspace(1)* %32, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %34 = zext i8 %33 to i32\l  %35 = shl nuw nsw i32 %34, 8\l  %36 = or i32 %35, %31\l  %37 = getelementptr inbounds i8, i8 addrspace(1)* %28, i64 2\l  %38 = load i8, i8 addrspace(1)* %37, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %39 = zext i8 %38 to i32\l  %40 = or i32 %36, %39\l  %41 = shl nuw i32 %40, 8\l  %42 = ashr exact i32 %41, 8\l  %43 = getelementptr inbounds i8, i8 addrspace(1)* %28, i64 3\l  %44 = load i8, i8 addrspace(1)* %43, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %45 = zext i8 %44 to i32\l  %46 = shl nuw nsw i32 %45, 16\l  %47 = getelementptr inbounds i8, i8 addrspace(1)* %43, i64 1\l  %48 = load i8, i8 addrspace(1)* %47, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %49 = zext i8 %48 to i32\l  %50 = shl nuw nsw i32 %49, 8\l  %51 = or i32 %50, %46\l  %52 = getelementptr inbounds i8, i8 addrspace(1)* %43, i64 2\l  %53 = load i8, i8 addrspace(1)* %52, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %54 = zext i8 %53 to i32\l  %55 = or i32 %51, %54\l  %56 = shl nuw i32 %55, 8\l  %57 = ashr exact i32 %56, 8\l  %58 = and i32 %40, %6\l  %59 = trunc i32 %58 to i16\l  %60 = sext i32 %20 to i64\l  %61 = getelementptr inbounds i16, i16 addrspace(1)* %5, i64 %60\l  store i16 %59, i16 addrspace(1)* %61, align 2, !tbaa !10\l  %62 = and i32 %55, %6\l  %63 = trunc i32 %62 to i16\l  %64 = add nuw nsw i32 %20, 1\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i16, i16 addrspace(1)* %5, i64 %65\l  store i16 %63, i16 addrspace(1)* %66, align 2, !tbaa !10\l  %67 = ashr i32 %42, %7\l  %68 = ashr i32 %57, %7\l  %69 = sext i32 %17 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %69\l  store i32 %67, i32 addrspace(1)* %70, align 4, !tbaa !12\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %69\l  store i32 %68, i32 addrspace(1)* %71, align 4, !tbaa !12\l  br label %72\l}"];
	Node0x6396920 -> Node0x63969b0;
	Node0x63969b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  ret void\l}"];
}
