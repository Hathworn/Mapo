digraph "CFG for '_Z26gpu_copyPredictorTo24ShiftPiPtPhjPjiij' function" {
	label="CFG for '_Z26gpu_copyPredictorTo24ShiftPiPtPhjPjiij' function";

	Node0x62cf6f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = and i32 %9, 7\l  %11 = lshr i32 %9, 3\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = mul nuw nsw i32 %10, %17\l  %19 = add nuw nsw i32 %18, %12\l  %20 = zext i32 %11 to i64\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %20\l  %22 = load i32, i32 addrspace(1)* %21, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %23 = icmp ult i32 %19, %22\l  br i1 %23, label %24, label %54\l|{<s0>T|<s1>F}}"];
	Node0x62cf6f0:s0 -> Node0x62d2150;
	Node0x62cf6f0:s1 -> Node0x62d21e0;
	Node0x62d2150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%24:\l24:                                               \l  %25 = mul nsw i32 %11, %6\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %26\l  %28 = shl nsw i32 %5, 3\l  %29 = mul i32 %11, %7\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %30\l  %32 = zext i32 %19 to i64\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %31, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %35 = shl i32 %34, %28\l  %36 = shl i32 %29, 1\l  %37 = zext i32 %36 to i64\l  %38 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %37\l  %39 = getelementptr inbounds i16, i16 addrspace(1)* %38, i64 %32\l  %40 = load i16, i16 addrspace(1)* %39, align 2, !tbaa !11, !amdgpu.noclobber\l... !6\l  %41 = zext i16 %40 to i32\l  %42 = or i32 %35, %41\l  %43 = mul i32 %3, 3\l  %44 = mul i32 %43, %19\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds i8, i8 addrspace(1)* %27, i64 %45\l  %47 = lshr i32 %35, 16\l  %48 = trunc i32 %47 to i8\l  store i8 %48, i8 addrspace(1)* %46, align 1, !tbaa !13\l  %49 = lshr i32 %42, 8\l  %50 = trunc i32 %49 to i8\l  %51 = getelementptr inbounds i8, i8 addrspace(1)* %46, i64 1\l  store i8 %50, i8 addrspace(1)* %51, align 1, !tbaa !13\l  %52 = trunc i32 %42 to i8\l  %53 = getelementptr inbounds i8, i8 addrspace(1)* %46, i64 2\l  store i8 %52, i8 addrspace(1)* %53, align 1, !tbaa !13\l  br label %54\l}"];
	Node0x62d2150 -> Node0x62d21e0;
	Node0x62d21e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  ret void\l}"];
}
