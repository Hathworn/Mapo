digraph "CFG for '_Z11gpu_unmix20PiS_PhjPjS_S_ij' function" {
	label="CFG for '_Z11gpu_unmix20PiS_PhjPjS_S_ij' function";

	Node0x4e13470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = and i32 %10, 7\l  %12 = lshr i32 %10, 3\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  %19 = mul nuw nsw i32 %11, %18\l  %20 = add nuw nsw i32 %19, %13\l  %21 = zext i32 %12 to i64\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %21\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %24 = icmp ult i32 %20, %23\l  br i1 %24, label %25, label %97\l|{<s0>T|<s1>F}}"];
	Node0x4e13470:s0 -> Node0x4e169f0;
	Node0x4e13470:s1 -> Node0x4e16a80;
	Node0x4e169f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%25:\l25:                                               \l  %26 = mul nsw i32 %12, %7\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %27\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %21\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %31 = icmp eq i32 %30, 0\l  %32 = mul i32 %12, %8\l  %33 = zext i32 %32 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %33\l  %35 = zext i32 %20 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %34, i64 %35\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !7\l  br i1 %31, label %65, label %38\l|{<s0>T|<s1>F}}"];
	Node0x4e169f0:s0 -> Node0x4e17930;
	Node0x4e169f0:s1 -> Node0x4e179c0;
	Node0x4e179c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%38:\l38:                                               \l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %33\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %39, i64 %35\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %42 = add nsw i32 %41, %37\l  %43 = mul nsw i32 %41, %30\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %21\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %46 = ashr i32 %43, %45\l  %47 = sub i32 %42, %46\l  %48 = sub nsw i32 %47, %41\l  %49 = shl i32 %47, 4\l  %50 = mul nuw nsw i32 %20, 3\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds i8, i8 addrspace(1)* %28, i64 %51\l  %53 = mul i32 %3, 3\l  %54 = add i32 %53, -3\l  %55 = mul i32 %20, %54\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds i8, i8 addrspace(1)* %52, i64 %56\l  %58 = lshr i32 %49, 16\l  %59 = trunc i32 %58 to i8\l  store i8 %59, i8 addrspace(1)* %57, align 1, !tbaa !11\l  %60 = lshr i32 %49, 8\l  %61 = trunc i32 %60 to i8\l  %62 = getelementptr inbounds i8, i8 addrspace(1)* %57, i64 1\l  store i8 %61, i8 addrspace(1)* %62, align 1, !tbaa !11\l  %63 = trunc i32 %49 to i8\l  %64 = getelementptr inbounds i8, i8 addrspace(1)* %57, i64 2\l  store i8 %63, i8 addrspace(1)* %64, align 1, !tbaa !11\l  br label %85\l}"];
	Node0x4e179c0 -> Node0x4e17660;
	Node0x4e17930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%65:\l65:                                               \l  %66 = shl i32 %37, 4\l  %67 = mul nuw nsw i32 %20, 3\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds i8, i8 addrspace(1)* %28, i64 %68\l  %70 = mul i32 %3, 3\l  %71 = add i32 %70, -3\l  %72 = mul i32 %20, %71\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds i8, i8 addrspace(1)* %69, i64 %73\l  %75 = lshr i32 %66, 16\l  %76 = trunc i32 %75 to i8\l  store i8 %76, i8 addrspace(1)* %74, align 1, !tbaa !11\l  %77 = lshr i32 %66, 8\l  %78 = trunc i32 %77 to i8\l  %79 = getelementptr inbounds i8, i8 addrspace(1)* %74, i64 1\l  store i8 %78, i8 addrspace(1)* %79, align 1, !tbaa !11\l  %80 = trunc i32 %66 to i8\l  %81 = getelementptr inbounds i8, i8 addrspace(1)* %74, i64 2\l  store i8 %80, i8 addrspace(1)* %81, align 1, !tbaa !11\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %33\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %82, i64 %35\l  %84 = load i32, i32 addrspace(1)* %83, align 4, !tbaa !7\l  br label %85\l}"];
	Node0x4e17930 -> Node0x4e17660;
	Node0x4e17660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%85:\l85:                                               \l  %86 = phi i32 [ %48, %38 ], [ %84, %65 ]\l  %87 = phi i8 addrspace(1)* [ %57, %38 ], [ %74, %65 ]\l  %88 = getelementptr inbounds i8, i8 addrspace(1)* %87, i64 3\l  %89 = shl i32 %86, 4\l  %90 = lshr i32 %89, 16\l  %91 = trunc i32 %90 to i8\l  store i8 %91, i8 addrspace(1)* %88, align 1, !tbaa !11\l  %92 = lshr i32 %89, 8\l  %93 = trunc i32 %92 to i8\l  %94 = getelementptr inbounds i8, i8 addrspace(1)* %87, i64 4\l  store i8 %93, i8 addrspace(1)* %94, align 1, !tbaa !11\l  %95 = trunc i32 %89 to i8\l  %96 = getelementptr inbounds i8, i8 addrspace(1)* %87, i64 5\l  store i8 %95, i8 addrspace(1)* %96, align 1, !tbaa !11\l  br label %97\l}"];
	Node0x4e17660 -> Node0x4e16a80;
	Node0x4e16a80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  ret void\l}"];
}
