digraph "CFG for '_Z16call_kALACSearchPsS_i' function" {
	label="CFG for '_Z16call_kALACSearchPsS_i' function";

	Node0x6434f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = shl nsw i32 %4, 8\l  %7 = shl nuw nsw i32 %5, 4\l  %8 = add nsw i32 %6, %7\l  %9 = sext i32 %8 to i64\l  %10 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %9\l  %11 = bitcast i16 addrspace(1)* %10 to \<2 x i16\> addrspace(1)*\l  store \<2 x i16\> \<i16 1216, i16 -928\>, \<2 x i16\> addrspace(1)* %11, align 2,\l... !tbaa !5\l  %12 = or i32 %8, 2\l  %13 = sext i32 %12 to i64\l  %14 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %13\l  store i16 -64, i16 addrspace(1)* %14, align 2, !tbaa !5\l  %15 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %9\l  %16 = bitcast i16 addrspace(1)* %15 to \<2 x i16\> addrspace(1)*\l  store \<2 x i16\> \<i16 1216, i16 -928\>, \<2 x i16\> addrspace(1)* %16, align 2,\l... !tbaa !5\l  %17 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %13\l  store i16 -64, i16 addrspace(1)* %17, align 2, !tbaa !5\l  %18 = icmp sgt i32 %2, 3\l  br i1 %18, label %19, label %84\l|{<s0>T|<s1>F}}"];
	Node0x6434f70:s0 -> Node0x6437ee0;
	Node0x6434f70:s1 -> Node0x6437f70;
	Node0x6437ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = add i32 %2, -3\l  %21 = add i32 %2, -4\l  %22 = and i32 %20, 7\l  %23 = icmp ult i32 %21, 7\l  br i1 %23, label %71, label %24\l|{<s0>T|<s1>F}}"];
	Node0x6437ee0:s0 -> Node0x6438380;
	Node0x6437ee0:s1 -> Node0x64383d0;
	Node0x64383d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%24:\l24:                                               \l  %25 = and i32 %20, -8\l  br label %26\l}"];
	Node0x64383d0 -> Node0x64385d0;
	Node0x64385d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%26:\l26:                                               \l  %27 = phi i32 [ 3, %24 ], [ %68, %26 ]\l  %28 = phi i32 [ 0, %24 ], [ %69, %26 ]\l  %29 = add nsw i32 %27, %8\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %30\l  store i16 0, i16 addrspace(1)* %31, align 2, !tbaa !5\l  %32 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %30\l  store i16 0, i16 addrspace(1)* %32, align 2, !tbaa !5\l  %33 = add nuw nsw i32 %27, 1\l  %34 = add nsw i32 %33, %8\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %35\l  store i16 0, i16 addrspace(1)* %36, align 2, !tbaa !5\l  %37 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %35\l  store i16 0, i16 addrspace(1)* %37, align 2, !tbaa !5\l  %38 = add nuw nsw i32 %27, 2\l  %39 = add nsw i32 %38, %8\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %40\l  store i16 0, i16 addrspace(1)* %41, align 2, !tbaa !5\l  %42 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %40\l  store i16 0, i16 addrspace(1)* %42, align 2, !tbaa !5\l  %43 = add nuw nsw i32 %27, 3\l  %44 = add nsw i32 %43, %8\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %45\l  store i16 0, i16 addrspace(1)* %46, align 2, !tbaa !5\l  %47 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %45\l  store i16 0, i16 addrspace(1)* %47, align 2, !tbaa !5\l  %48 = add nuw nsw i32 %27, 4\l  %49 = add nsw i32 %48, %8\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %50\l  store i16 0, i16 addrspace(1)* %51, align 2, !tbaa !5\l  %52 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %50\l  store i16 0, i16 addrspace(1)* %52, align 2, !tbaa !5\l  %53 = add nuw nsw i32 %27, 5\l  %54 = add nsw i32 %53, %8\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %55\l  store i16 0, i16 addrspace(1)* %56, align 2, !tbaa !5\l  %57 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %55\l  store i16 0, i16 addrspace(1)* %57, align 2, !tbaa !5\l  %58 = add nuw nsw i32 %27, 6\l  %59 = add nsw i32 %58, %8\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %60\l  store i16 0, i16 addrspace(1)* %61, align 2, !tbaa !5\l  %62 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %60\l  store i16 0, i16 addrspace(1)* %62, align 2, !tbaa !5\l  %63 = add nuw nsw i32 %27, 7\l  %64 = add nsw i32 %63, %8\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %65\l  store i16 0, i16 addrspace(1)* %66, align 2, !tbaa !5\l  %67 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %65\l  store i16 0, i16 addrspace(1)* %67, align 2, !tbaa !5\l  %68 = add nuw nsw i32 %27, 8\l  %69 = add i32 %28, 8\l  %70 = icmp eq i32 %69, %25\l  br i1 %70, label %71, label %26, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x64385d0:s0 -> Node0x6438380;
	Node0x64385d0:s1 -> Node0x64385d0;
	Node0x6438380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%71:\l71:                                               \l  %72 = phi i32 [ 3, %19 ], [ %68, %26 ]\l  %73 = icmp eq i32 %22, 0\l  br i1 %73, label %84, label %74\l|{<s0>T|<s1>F}}"];
	Node0x6438380:s0 -> Node0x6437f70;
	Node0x6438380:s1 -> Node0x643b040;
	Node0x643b040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = phi i32 [ %81, %74 ], [ %72, %71 ]\l  %76 = phi i32 [ %82, %74 ], [ 0, %71 ]\l  %77 = add nsw i32 %75, %8\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %78\l  store i16 0, i16 addrspace(1)* %79, align 2, !tbaa !5\l  %80 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %78\l  store i16 0, i16 addrspace(1)* %80, align 2, !tbaa !5\l  %81 = add nuw nsw i32 %75, 1\l  %82 = add i32 %76, 1\l  %83 = icmp eq i32 %82, %22\l  br i1 %83, label %84, label %74, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x643b040:s0 -> Node0x6437f70;
	Node0x643b040:s1 -> Node0x643b040;
	Node0x6437f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%84:\l84:                                               \l  ret void\l}"];
}
