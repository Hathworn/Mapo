digraph "CFG for '_Z11gpu_unmix24PiS_PhjPjS_S_Ptiij' function" {
	label="CFG for '_Z11gpu_unmix24PiS_PhjPjS_S_Ptiij' function";

	Node0x54ce320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = and i32 %12, 7\l  %14 = lshr i32 %12, 3\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %16 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %17 = getelementptr i8, i8 addrspace(4)* %16, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul nuw nsw i32 %13, %20\l  %22 = add nuw nsw i32 %21, %15\l  %23 = zext i32 %14 to i64\l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %23\l  %25 = load i32, i32 addrspace(1)* %24, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %26 = icmp ult i32 %22, %25\l  br i1 %26, label %27, label %96\l|{<s0>T|<s1>F}}"];
	Node0x54ce320:s0 -> Node0x54d18e0;
	Node0x54ce320:s1 -> Node0x54d1970;
	Node0x54d18e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%27:\l27:                                               \l  %28 = shl nsw i32 %8, 3\l  %29 = shl nuw nsw i32 %22, 1\l  %30 = mul nsw i32 %14, %9\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %31\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %23\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %35 = icmp eq i32 %34, 0\l  %36 = mul i32 %14, %10\l  %37 = zext i32 %36 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %37\l  %39 = zext i32 %22 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %38, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %37\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %42, i64 %39\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !7\l  br i1 %35, label %53, label %45\l|{<s0>T|<s1>F}}"];
	Node0x54d18e0:s0 -> Node0x54d2b50;
	Node0x54d18e0:s1 -> Node0x54d2be0;
	Node0x54d2be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%45:\l45:                                               \l  %46 = add nsw i32 %44, %41\l  %47 = mul nsw i32 %44, %34\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %23\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %50 = ashr i32 %47, %49\l  %51 = sub i32 %46, %50\l  %52 = sub nsw i32 %51, %44\l  br label %53\l}"];
	Node0x54d2be0 -> Node0x54d2b50;
	Node0x54d2b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%53:\l53:                                               \l  %54 = phi i32 [ %51, %45 ], [ %41, %27 ]\l  %55 = phi i32 [ %52, %45 ], [ %44, %27 ]\l  %56 = shl i32 %54, %28\l  %57 = shl i32 %36, 1\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds i16, i16 addrspace(1)* %7, i64 %58\l  %60 = zext i32 %29 to i64\l  %61 = getelementptr inbounds i16, i16 addrspace(1)* %59, i64 %60\l  %62 = load i16, i16 addrspace(1)* %61, align 2, !tbaa !11\l  %63 = zext i16 %62 to i32\l  %64 = shl i32 %55, %28\l  %65 = getelementptr inbounds i16, i16 addrspace(1)* %7, i64 %58\l  %66 = add nuw nsw i32 %29, 1\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds i16, i16 addrspace(1)* %65, i64 %67\l  %69 = load i16, i16 addrspace(1)* %68, align 2, !tbaa !11\l  %70 = zext i16 %69 to i32\l  %71 = or i32 %64, %70\l  %72 = mul nuw nsw i32 %22, 3\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds i8, i8 addrspace(1)* %32, i64 %73\l  %75 = mul i32 %3, 3\l  %76 = add i32 %75, -3\l  %77 = mul i32 %22, %76\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds i8, i8 addrspace(1)* %74, i64 %78\l  %80 = getelementptr inbounds i8, i8 addrspace(1)* %79, i64 3\l  %81 = or i32 %56, %63\l  %82 = lshr i32 %56, 16\l  %83 = lshr i32 %81, 8\l  %84 = lshr i32 %64, 16\l  %85 = insertelement \<4 x i32\> poison, i32 %82, i64 0\l  %86 = insertelement \<4 x i32\> %85, i32 %83, i64 1\l  %87 = insertelement \<4 x i32\> %86, i32 %81, i64 2\l  %88 = insertelement \<4 x i32\> %87, i32 %84, i64 3\l  %89 = trunc \<4 x i32\> %88 to \<4 x i8\>\l  %90 = bitcast i8 addrspace(1)* %79 to \<4 x i8\> addrspace(1)*\l  store \<4 x i8\> %89, \<4 x i8\> addrspace(1)* %90, align 1, !tbaa !13\l  %91 = lshr i32 %71, 8\l  %92 = trunc i32 %91 to i8\l  %93 = getelementptr inbounds i8, i8 addrspace(1)* %80, i64 1\l  store i8 %92, i8 addrspace(1)* %93, align 1, !tbaa !13\l  %94 = trunc i32 %71 to i8\l  %95 = getelementptr inbounds i8, i8 addrspace(1)* %80, i64 2\l  store i8 %94, i8 addrspace(1)* %95, align 1, !tbaa !13\l  br label %96\l}"];
	Node0x54d2b50 -> Node0x54d1970;
	Node0x54d1970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%96:\l96:                                               \l  ret void\l}"];
}
