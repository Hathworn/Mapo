digraph "CFG for '_ZL8solveEndPdddddddddii' function" {
	label="CFG for '_ZL8solveEndPdddddddddii' function";

	Node0x5cd9e20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = mul i32 %17, %16\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %20 = add i32 %18, %19\l  %21 = add nsw i32 %9, -2\l  %22 = mul nsw i32 %21, %10\l  %23 = add nsw i32 %20, %22\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds double, double addrspace(1)* %0, i64 %24\l  %26 = load double, double addrspace(1)* %25, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = sext i32 %20 to i64\l  %28 = getelementptr inbounds double, double addrspace(1)* %0, i64 %27\l  %29 = load double, double addrspace(1)* %28, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %30 = fmul contract double %29, %4\l  %31 = add nsw i32 %9, -4\l  %32 = mul nsw i32 %31, %10\l  %33 = add nsw i32 %20, %32\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %0, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = fmul contract double %36, %1\l  %38 = fadd contract double %30, %37\l  %39 = add nsw i32 %9, -3\l  %40 = mul nsw i32 %39, %10\l  %41 = add nsw i32 %20, %40\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds double, double addrspace(1)* %0, i64 %42\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = fmul contract double %44, %2\l  %46 = fadd contract double %38, %45\l  %47 = fsub contract double %26, %46\l  %48 = add nsw i32 %9, -1\l  %49 = mul nsw i32 %48, %10\l  %50 = add nsw i32 %20, %49\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds double, double addrspace(1)* %0, i64 %51\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %54 = fmul contract double %29, %3\l  %55 = add nsw i32 %20, %10\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds double, double addrspace(1)* %0, i64 %56\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %59 = fmul contract double %58, %4\l  %60 = fadd contract double %54, %59\l  %61 = fmul contract double %44, %1\l  %62 = fadd contract double %61, %60\l  %63 = fsub contract double %53, %62\l  %64 = fmul contract double %47, %5\l  %65 = fmul contract double %63, %6\l  %66 = fadd contract double %64, %65\l  store double %66, double addrspace(1)* %25, align 8, !tbaa !7\l  %67 = fmul contract double %47, %7\l  %68 = fmul contract double %63, %8\l  %69 = fadd contract double %67, %68\l  store double %69, double addrspace(1)* %52, align 8, !tbaa !7\l  ret void\l}"];
}
