digraph "CFG for '_ZL9solveFullPdS_S_ii' function" {
	label="CFG for '_ZL9solveFullPdS_S_ii' function";

	Node0x61d4890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %7, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = add nsw i32 %3, -2\l  %24 = icmp slt i32 %22, %23\l  br i1 %24, label %25, label %50\l|{<s0>T|<s1>F}}"];
	Node0x61d4890:s0 -> Node0x61d8220;
	Node0x61d4890:s1 -> Node0x61d82b0;
	Node0x61d8220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%25:\l25:                                               \l  %26 = mul nsw i32 %22, %4\l  %27 = add nsw i32 %26, %14\l  %28 = add nsw i32 %3, -1\l  %29 = mul nsw i32 %28, %4\l  %30 = add nsw i32 %14, %29\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds double, double addrspace(1)* %0, i64 %31\l  %33 = load double, double addrspace(1)* %32, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = mul nsw i32 %23, %4\l  %35 = add nsw i32 %14, %34\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds double, double addrspace(1)* %0, i64 %36\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = sext i32 %27 to i64\l  %40 = getelementptr inbounds double, double addrspace(1)* %0, i64 %39\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = getelementptr inbounds double, double addrspace(1)* %1, i64 %39\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fmul contract double %38, %43\l  %45 = getelementptr inbounds double, double addrspace(1)* %2, i64 %39\l  %46 = load double, double addrspace(1)* %45, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = fmul contract double %33, %46\l  %48 = fadd contract double %44, %47\l  %49 = fsub contract double %41, %48\l  store double %49, double addrspace(1)* %40, align 8, !tbaa !7\l  br label %50\l}"];
	Node0x61d8220 -> Node0x61d82b0;
	Node0x61d82b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  ret void\l}"];
}
