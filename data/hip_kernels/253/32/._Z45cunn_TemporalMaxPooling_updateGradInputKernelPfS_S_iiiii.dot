digraph "CFG for '_Z45cunn_TemporalMaxPooling_updateGradInputKernelPfS_S_iiiii' function" {
	label="CFG for '_Z45cunn_TemporalMaxPooling_updateGradInputKernelPfS_S_iiiii' function";

	Node0x4fed3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %4\l  %11 = mul i32 %10, %3\l  %12 = zext i32 %11 to i64\l  %13 = getelementptr inbounds float, float addrspace(1)* %0, i64 %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = shl i32 %15, 10\l  %17 = or i32 %16, %14\l  %18 = mul i32 %17, %4\l  %19 = mul i32 %18, %7\l  %20 = zext i32 %19 to i64\l  %21 = getelementptr inbounds float, float addrspace(1)* %13, i64 %20\l  %22 = mul i32 %10, %5\l  %23 = zext i32 %22 to i64\l  %24 = getelementptr inbounds float, float addrspace(1)* %1, i64 %23\l  %25 = zext i32 %18 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %24, i64 %25\l  %27 = getelementptr inbounds float, float addrspace(1)* %2, i64 %23\l  %28 = getelementptr inbounds float, float addrspace(1)* %27, i64 %25\l  %29 = icmp ult i32 %17, %5\l  %30 = icmp sgt i32 %4, 0\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %115\l|{<s0>T|<s1>F}}"];
	Node0x4fed3a0:s0 -> Node0x4fef760;
	Node0x4fed3a0:s1 -> Node0x4fef7f0;
	Node0x4fef760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%32:\l32:                                               \l  %33 = and i32 %4, 3\l  %34 = icmp ult i32 %4, 4\l  br i1 %34, label %94, label %35\l|{<s0>T|<s1>F}}"];
	Node0x4fef760:s0 -> Node0x4fefbd0;
	Node0x4fef760:s1 -> Node0x4fefc20;
	Node0x4fefc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%35:\l35:                                               \l  %36 = and i32 %4, -4\l  br label %37\l}"];
	Node0x4fefc20 -> Node0x4fefe20;
	Node0x4fefe20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%37:\l37:                                               \l  %38 = phi i32 [ 0, %35 ], [ %91, %37 ]\l  %39 = phi i32 [ 0, %35 ], [ %92, %37 ]\l  %40 = zext i32 %38 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %26, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !5\l  %43 = getelementptr inbounds float, float addrspace(1)* %28, i64 %40\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !5\l  %45 = fptosi float %44 to i32\l  %46 = mul nsw i32 %45, %4\l  %47 = add nsw i32 %46, %38\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %21, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !5\l  %51 = fadd contract float %42, %50\l  store float %51, float addrspace(1)* %49, align 4, !tbaa !5\l  %52 = or i32 %38, 1\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %26, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !5\l  %56 = getelementptr inbounds float, float addrspace(1)* %28, i64 %53\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !5\l  %58 = fptosi float %57 to i32\l  %59 = mul nsw i32 %58, %4\l  %60 = add nsw i32 %59, %52\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %21, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !5\l  %64 = fadd contract float %55, %63\l  store float %64, float addrspace(1)* %62, align 4, !tbaa !5\l  %65 = or i32 %38, 2\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %26, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !5\l  %69 = getelementptr inbounds float, float addrspace(1)* %28, i64 %66\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !5\l  %71 = fptosi float %70 to i32\l  %72 = mul nsw i32 %71, %4\l  %73 = add nsw i32 %72, %65\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %21, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !5\l  %77 = fadd contract float %68, %76\l  store float %77, float addrspace(1)* %75, align 4, !tbaa !5\l  %78 = or i32 %38, 3\l  %79 = zext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %26, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !5\l  %82 = getelementptr inbounds float, float addrspace(1)* %28, i64 %79\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !5\l  %84 = fptosi float %83 to i32\l  %85 = mul nsw i32 %84, %4\l  %86 = add nsw i32 %85, %78\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %21, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !5\l  %90 = fadd contract float %81, %89\l  store float %90, float addrspace(1)* %88, align 4, !tbaa !5\l  %91 = add nuw nsw i32 %38, 4\l  %92 = add i32 %39, 4\l  %93 = icmp eq i32 %92, %36\l  br i1 %93, label %94, label %37, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x4fefe20:s0 -> Node0x4fefbd0;
	Node0x4fefe20:s1 -> Node0x4fefe20;
	Node0x4fefbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%94:\l94:                                               \l  %95 = phi i32 [ 0, %32 ], [ %91, %37 ]\l  %96 = icmp eq i32 %33, 0\l  br i1 %96, label %115, label %97\l|{<s0>T|<s1>F}}"];
	Node0x4fefbd0:s0 -> Node0x4fef7f0;
	Node0x4fefbd0:s1 -> Node0x4ff2c10;
	Node0x4ff2c10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  %98 = phi i32 [ %112, %97 ], [ %95, %94 ]\l  %99 = phi i32 [ %113, %97 ], [ 0, %94 ]\l  %100 = zext i32 %98 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %26, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !5\l  %103 = getelementptr inbounds float, float addrspace(1)* %28, i64 %100\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !5\l  %105 = fptosi float %104 to i32\l  %106 = mul nsw i32 %105, %4\l  %107 = add nsw i32 %106, %98\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %21, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !5\l  %111 = fadd contract float %102, %110\l  store float %111, float addrspace(1)* %109, align 4, !tbaa !5\l  %112 = add nuw nsw i32 %98, 1\l  %113 = add i32 %99, 1\l  %114 = icmp eq i32 %113, %33\l  br i1 %114, label %115, label %97, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4ff2c10:s0 -> Node0x4fef7f0;
	Node0x4ff2c10:s1 -> Node0x4ff2c10;
	Node0x4fef7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%115:\l115:                                              \l  ret void\l}"];
}
