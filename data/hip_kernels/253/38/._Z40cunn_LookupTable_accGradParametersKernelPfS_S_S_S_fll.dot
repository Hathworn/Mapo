digraph "CFG for '_Z40cunn_LookupTable_accGradParametersKernelPfS_S_S_S_fll' function" {
	label="CFG for '_Z40cunn_LookupTable_accGradParametersKernelPfS_S_S_S_fll' function";

	Node0x61f33b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = shl i32 %9, 2\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %12 = add i32 %10, %11\l  %13 = sext i32 %12 to i64\l  %14 = icmp slt i64 %13, %6\l  br i1 %14, label %15, label %173\l|{<s0>T|<s1>F}}"];
	Node0x61f33b0:s0 -> Node0x61f4ba0;
	Node0x61f33b0:s1 -> Node0x61f4c30;
	Node0x61f4ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%15:\l15:                                               \l  %16 = icmp eq i32 %12, 0\l  %17 = getelementptr inbounds float, float addrspace(1)* %0, i64 %13\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !5\l  br i1 %16, label %25, label %19\l|{<s0>T|<s1>F}}"];
	Node0x61f4ba0:s0 -> Node0x61f50e0;
	Node0x61f4ba0:s1 -> Node0x61f5170;
	Node0x61f5170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%19:\l19:                                               \l  %20 = add nsw i32 %12, -1\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %0, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %24 = fcmp contract une float %18, %23\l  br i1 %24, label %25, label %173\l|{<s0>T|<s1>F}}"];
	Node0x61f5170:s0 -> Node0x61f50e0;
	Node0x61f5170:s1 -> Node0x61f4c30;
	Node0x61f50e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%25:\l25:                                               \l  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %27 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %28 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %29 = getelementptr i8, i8 addrspace(4)* %28, i64 4\l  %30 = bitcast i8 addrspace(4)* %29 to i16 addrspace(4)*\l  %31 = load i16, i16 addrspace(4)* %30, align 4, !range !10, !invariant.load\l... !9\l  %32 = zext i16 %31 to i32\l  %33 = mul i32 %27, %32\l  %34 = add i32 %33, %26\l  %35 = trunc i64 %7 to i32\l  %36 = icmp eq float addrspace(1)* %4, addrspacecast (float* null to float\l... addrspace(1)*)\l  %37 = sext i32 %34 to i64\l  %38 = icmp slt i64 %37, %7\l  %39 = add nsw i32 %34, 32\l  %40 = sext i32 %39 to i64\l  %41 = icmp slt i64 %40, %7\l  %42 = add nsw i32 %34, 64\l  %43 = sext i32 %42 to i64\l  %44 = icmp slt i64 %43, %7\l  %45 = add nsw i32 %34, 96\l  %46 = sext i32 %45 to i64\l  %47 = icmp slt i64 %46, %7\l  br label %48\l}"];
	Node0x61f50e0 -> Node0x61f8360;
	Node0x61f8360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi float [ %18, %25 ], [ %170, %168 ]\l  %50 = phi \<4 x float\> [ undef, %25 ], [ %123, %168 ]\l  %51 = phi \<4 x float\> [ undef, %25 ], [ %144, %168 ]\l  %52 = phi i32 [ %12, %25 ], [ %165, %168 ]\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  %55 = fptosi float %49 to i32\l  %56 = add nsw i32 %55, -1\l  %57 = mul i32 %56, %35\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !5\l  %60 = fptosi float %59 to i32\l  %61 = add nsw i32 %60, -1\l  %62 = mul i32 %61, %35\l  br i1 %36, label %67, label %63\l|{<s0>T|<s1>F}}"];
	Node0x61f8360:s0 -> Node0x61f98c0;
	Node0x61f8360:s1 -> Node0x61f9950;
	Node0x61f9950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%63:\l63:                                               \l  %64 = getelementptr inbounds float, float addrspace(1)* %4, i64 %53\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !5\l  %66 = fdiv contract float %5, %65\l  br label %67\l}"];
	Node0x61f9950 -> Node0x61f98c0;
	Node0x61f98c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi contract float [ %66, %63 ], [ %5, %48 ]\l  br i1 %38, label %69, label %80\l|{<s0>T|<s1>F}}"];
	Node0x61f98c0:s0 -> Node0x61f7580;
	Node0x61f98c0:s1 -> Node0x61f9fa0;
	Node0x61f7580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%69:\l69:                                               \l  %70 = add nsw i32 %34, %62\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %2, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !5\l  %74 = insertelement \<4 x float\> %50, float %73, i64 0\l  %75 = add nsw i32 %34, %57\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %3, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !5\l  %79 = insertelement \<4 x float\> %51, float %78, i64 0\l  br label %80\l}"];
	Node0x61f7580 -> Node0x61f9fa0;
	Node0x61f9fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = phi \<4 x float\> [ %74, %69 ], [ %50, %67 ]\l  %82 = phi \<4 x float\> [ %79, %69 ], [ %51, %67 ]\l  br i1 %41, label %83, label %94\l|{<s0>T|<s1>F}}"];
	Node0x61f9fa0:s0 -> Node0x61fa820;
	Node0x61f9fa0:s1 -> Node0x61fa870;
	Node0x61fa820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%83:\l83:                                               \l  %84 = add nsw i32 %39, %62\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %2, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !5\l  %88 = insertelement \<4 x float\> %81, float %87, i64 1\l  %89 = add nsw i32 %39, %57\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %3, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !5\l  %93 = insertelement \<4 x float\> %82, float %92, i64 1\l  br label %94\l}"];
	Node0x61fa820 -> Node0x61fa870;
	Node0x61fa870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  %95 = phi \<4 x float\> [ %88, %83 ], [ %81, %80 ]\l  %96 = phi \<4 x float\> [ %93, %83 ], [ %82, %80 ]\l  br i1 %44, label %97, label %108\l|{<s0>T|<s1>F}}"];
	Node0x61fa870:s0 -> Node0x61fb0f0;
	Node0x61fa870:s1 -> Node0x61fb140;
	Node0x61fb0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%97:\l97:                                               \l  %98 = add nsw i32 %42, %62\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %2, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !5\l  %102 = insertelement \<4 x float\> %95, float %101, i64 2\l  %103 = add nsw i32 %42, %57\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %3, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !5\l  %107 = insertelement \<4 x float\> %96, float %106, i64 2\l  br label %108\l}"];
	Node0x61fb0f0 -> Node0x61fb140;
	Node0x61fb140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%108:\l108:                                              \l  %109 = phi \<4 x float\> [ %102, %97 ], [ %95, %94 ]\l  %110 = phi \<4 x float\> [ %107, %97 ], [ %96, %94 ]\l  br i1 %47, label %111, label %122\l|{<s0>T|<s1>F}}"];
	Node0x61fb140:s0 -> Node0x61fb9c0;
	Node0x61fb140:s1 -> Node0x61fba10;
	Node0x61fb9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%111:\l111:                                              \l  %112 = add nsw i32 %45, %62\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %2, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !5\l  %116 = insertelement \<4 x float\> %109, float %115, i64 3\l  %117 = add nsw i32 %45, %57\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %3, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !5\l  %121 = insertelement \<4 x float\> %110, float %120, i64 3\l  br label %122\l}"];
	Node0x61fb9c0 -> Node0x61fba10;
	Node0x61fba10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%122:\l122:                                              \l  %123 = phi \<4 x float\> [ %116, %111 ], [ %109, %108 ]\l  %124 = phi \<4 x float\> [ %121, %111 ], [ %110, %108 ]\l  %125 = extractelement \<4 x float\> %123, i64 0\l  %126 = fmul contract float %68, %125\l  %127 = extractelement \<4 x float\> %124, i64 0\l  %128 = fadd contract float %127, %126\l  %129 = insertelement \<4 x float\> poison, float %128, i64 0\l  %130 = extractelement \<4 x float\> %123, i64 1\l  %131 = fmul contract float %68, %130\l  %132 = extractelement \<4 x float\> %124, i64 1\l  %133 = fadd contract float %132, %131\l  %134 = insertelement \<4 x float\> %129, float %133, i64 1\l  %135 = extractelement \<4 x float\> %123, i64 2\l  %136 = fmul contract float %68, %135\l  %137 = extractelement \<4 x float\> %124, i64 2\l  %138 = fadd contract float %137, %136\l  %139 = insertelement \<4 x float\> %134, float %138, i64 2\l  %140 = extractelement \<4 x float\> %123, i64 3\l  %141 = fmul contract float %68, %140\l  %142 = extractelement \<4 x float\> %124, i64 3\l  %143 = fadd contract float %142, %141\l  %144 = insertelement \<4 x float\> %139, float %143, i64 3\l  br i1 %38, label %145, label %149\l|{<s0>T|<s1>F}}"];
	Node0x61fba10:s0 -> Node0x61f8ff0;
	Node0x61fba10:s1 -> Node0x61fd660;
	Node0x61f8ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%145:\l145:                                              \l  %146 = add nsw i32 %34, %57\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds float, float addrspace(1)* %3, i64 %147\l  store float %128, float addrspace(1)* %148, align 4, !tbaa !5\l  br label %149\l}"];
	Node0x61f8ff0 -> Node0x61fd660;
	Node0x61fd660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%149:\l149:                                              \l  br i1 %41, label %150, label %154\l|{<s0>T|<s1>F}}"];
	Node0x61fd660:s0 -> Node0x61fda00;
	Node0x61fd660:s1 -> Node0x61fda50;
	Node0x61fda00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%150:\l150:                                              \l  %151 = add nsw i32 %39, %57\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds float, float addrspace(1)* %3, i64 %152\l  store float %133, float addrspace(1)* %153, align 4, !tbaa !5\l  br label %154\l}"];
	Node0x61fda00 -> Node0x61fda50;
	Node0x61fda50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%154:\l154:                                              \l  br i1 %44, label %155, label %159\l|{<s0>T|<s1>F}}"];
	Node0x61fda50:s0 -> Node0x61fddf0;
	Node0x61fda50:s1 -> Node0x61fde40;
	Node0x61fddf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%155:\l155:                                              \l  %156 = add nsw i32 %42, %57\l  %157 = sext i32 %156 to i64\l  %158 = getelementptr inbounds float, float addrspace(1)* %3, i64 %157\l  store float %138, float addrspace(1)* %158, align 4, !tbaa !5\l  br label %159\l}"];
	Node0x61fddf0 -> Node0x61fde40;
	Node0x61fde40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%159:\l159:                                              \l  br i1 %47, label %160, label %164\l|{<s0>T|<s1>F}}"];
	Node0x61fde40:s0 -> Node0x61fe1e0;
	Node0x61fde40:s1 -> Node0x61fe230;
	Node0x61fe1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%160:\l160:                                              \l  %161 = add nsw i32 %45, %57\l  %162 = sext i32 %161 to i64\l  %163 = getelementptr inbounds float, float addrspace(1)* %3, i64 %162\l  store float %143, float addrspace(1)* %163, align 4, !tbaa !5\l  br label %164\l}"];
	Node0x61fe1e0 -> Node0x61fe230;
	Node0x61fe230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%164:\l164:                                              \l  %165 = add nsw i32 %52, 1\l  %166 = sext i32 %165 to i64\l  %167 = icmp slt i64 %166, %6\l  br i1 %167, label %168, label %173\l|{<s0>T|<s1>F}}"];
	Node0x61fe230:s0 -> Node0x61f8490;
	Node0x61fe230:s1 -> Node0x61f4c30;
	Node0x61f8490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%168:\l168:                                              \l  %169 = getelementptr inbounds float, float addrspace(1)* %0, i64 %166\l  %170 = load float, float addrspace(1)* %169, align 4, !tbaa !5\l  %171 = load float, float addrspace(1)* %54, align 4, !tbaa !5\l  %172 = fcmp contract oeq float %170, %171\l  br i1 %172, label %48, label %173, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x61f8490:s0 -> Node0x61f8360;
	Node0x61f8490:s1 -> Node0x61f4c30;
	Node0x61f4c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%173:\l173:                                              \l  ret void\l}"];
}
