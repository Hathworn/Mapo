digraph "CFG for '_Z15gpu_matrix_multPfS_S_iii' function" {
	label="CFG for '_Z15gpu_matrix_multPfS_S_iii' function";

	Node0x606e000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %23, %5\l  %25 = icmp slt i32 %15, %3\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %187\l|{<s0>T|<s1>F}}"];
	Node0x606e000:s0 -> Node0x6071a80;
	Node0x606e000:s1 -> Node0x6071b10;
	Node0x6071a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%27:\l27:                                               \l  %28 = icmp sgt i32 %4, 0\l  br i1 %28, label %29, label %63\l|{<s0>T|<s1>F}}"];
	Node0x6071a80:s0 -> Node0x6071d10;
	Node0x6071a80:s1 -> Node0x6071d60;
	Node0x6071d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %15, %4\l  %31 = and i32 %4, 7\l  %32 = icmp ult i32 %4, 8\l  br i1 %32, label %35, label %33\l|{<s0>T|<s1>F}}"];
	Node0x6071d10:s0 -> Node0x6070020;
	Node0x6071d10:s1 -> Node0x6070070;
	Node0x6070070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%33:\l33:                                               \l  %34 = and i32 %4, -8\l  br label %69\l}"];
	Node0x6070070 -> Node0x6072400;
	Node0x6070020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%35:\l35:                                               \l  %36 = phi i32 [ undef, %29 ], [ %183, %69 ]\l  %37 = phi i32 [ 0, %29 ], [ %184, %69 ]\l  %38 = phi i32 [ 0, %29 ], [ %183, %69 ]\l  %39 = icmp eq i32 %31, 0\l  br i1 %39, label %60, label %40\l|{<s0>T|<s1>F}}"];
	Node0x6070020:s0 -> Node0x6072c20;
	Node0x6070020:s1 -> Node0x6072cb0;
	Node0x6072cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ %57, %40 ], [ %37, %35 ]\l  %42 = phi i32 [ %56, %40 ], [ %38, %35 ]\l  %43 = phi i32 [ %58, %40 ], [ 0, %35 ]\l  %44 = add nsw i32 %41, %30\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = mul nsw i32 %41, %5\l  %49 = add nsw i32 %48, %23\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %1, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %53 = fmul contract float %47, %52\l  %54 = sitofp i32 %42 to float\l  %55 = fadd contract float %53, %54\l  %56 = fptosi float %55 to i32\l  %57 = add nuw nsw i32 %41, 1\l  %58 = add i32 %43, 1\l  %59 = icmp eq i32 %58, %31\l  br i1 %59, label %60, label %40, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x6072cb0:s0 -> Node0x6072c20;
	Node0x6072cb0:s1 -> Node0x6072cb0;
	Node0x6072c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%60:\l60:                                               \l  %61 = phi i32 [ %36, %35 ], [ %56, %40 ]\l  %62 = sitofp i32 %61 to float\l  br label %63\l}"];
	Node0x6072c20 -> Node0x6071d60;
	Node0x6071d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%63:\l63:                                               \l  %64 = phi float [ 0.000000e+00, %27 ], [ %62, %60 ]\l  %65 = mul nsw i32 %15, %5\l  %66 = add nsw i32 %65, %23\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %2, i64 %67\l  store float %64, float addrspace(1)* %68, align 4, !tbaa !7\l  br label %187\l}"];
	Node0x6071d60 -> Node0x6071b10;
	Node0x6072400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%69:\l69:                                               \l  %70 = phi i32 [ 0, %33 ], [ %184, %69 ]\l  %71 = phi i32 [ 0, %33 ], [ %183, %69 ]\l  %72 = phi i32 [ 0, %33 ], [ %185, %69 ]\l  %73 = add nsw i32 %70, %30\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %77 = mul nsw i32 %70, %5\l  %78 = add nsw i32 %77, %23\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %1, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %82 = fmul contract float %76, %81\l  %83 = sitofp i32 %71 to float\l  %84 = fadd contract float %82, %83\l  %85 = fptosi float %84 to i32\l  %86 = or i32 %70, 1\l  %87 = add nsw i32 %86, %30\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %91 = mul nsw i32 %86, %5\l  %92 = add nsw i32 %91, %23\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %1, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %96 = fmul contract float %90, %95\l  %97 = sitofp i32 %85 to float\l  %98 = fadd contract float %96, %97\l  %99 = fptosi float %98 to i32\l  %100 = or i32 %70, 2\l  %101 = add nsw i32 %100, %30\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %0, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %105 = mul nsw i32 %100, %5\l  %106 = add nsw i32 %105, %23\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %1, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %110 = fmul contract float %104, %109\l  %111 = sitofp i32 %99 to float\l  %112 = fadd contract float %110, %111\l  %113 = fptosi float %112 to i32\l  %114 = or i32 %70, 3\l  %115 = add nsw i32 %114, %30\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %0, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %119 = mul nsw i32 %114, %5\l  %120 = add nsw i32 %119, %23\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %1, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %124 = fmul contract float %118, %123\l  %125 = sitofp i32 %113 to float\l  %126 = fadd contract float %124, %125\l  %127 = fptosi float %126 to i32\l  %128 = or i32 %70, 4\l  %129 = add nsw i32 %128, %30\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %0, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %133 = mul nsw i32 %128, %5\l  %134 = add nsw i32 %133, %23\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds float, float addrspace(1)* %1, i64 %135\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %138 = fmul contract float %132, %137\l  %139 = sitofp i32 %127 to float\l  %140 = fadd contract float %138, %139\l  %141 = fptosi float %140 to i32\l  %142 = or i32 %70, 5\l  %143 = add nsw i32 %142, %30\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %0, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %147 = mul nsw i32 %142, %5\l  %148 = add nsw i32 %147, %23\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %1, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %152 = fmul contract float %146, %151\l  %153 = sitofp i32 %141 to float\l  %154 = fadd contract float %152, %153\l  %155 = fptosi float %154 to i32\l  %156 = or i32 %70, 6\l  %157 = add nsw i32 %156, %30\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %0, i64 %158\l  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %161 = mul nsw i32 %156, %5\l  %162 = add nsw i32 %161, %23\l  %163 = sext i32 %162 to i64\l  %164 = getelementptr inbounds float, float addrspace(1)* %1, i64 %163\l  %165 = load float, float addrspace(1)* %164, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %166 = fmul contract float %160, %165\l  %167 = sitofp i32 %155 to float\l  %168 = fadd contract float %166, %167\l  %169 = fptosi float %168 to i32\l  %170 = or i32 %70, 7\l  %171 = add nsw i32 %170, %30\l  %172 = sext i32 %171 to i64\l  %173 = getelementptr inbounds float, float addrspace(1)* %0, i64 %172\l  %174 = load float, float addrspace(1)* %173, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %175 = mul nsw i32 %170, %5\l  %176 = add nsw i32 %175, %23\l  %177 = sext i32 %176 to i64\l  %178 = getelementptr inbounds float, float addrspace(1)* %1, i64 %177\l  %179 = load float, float addrspace(1)* %178, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %180 = fmul contract float %174, %179\l  %181 = sitofp i32 %169 to float\l  %182 = fadd contract float %180, %181\l  %183 = fptosi float %182 to i32\l  %184 = add nuw nsw i32 %70, 8\l  %185 = add i32 %72, 8\l  %186 = icmp eq i32 %185, %34\l  br i1 %186, label %35, label %69, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x6072400:s0 -> Node0x6070020;
	Node0x6072400:s1 -> Node0x6072400;
	Node0x6071b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%187:\l187:                                              \l  ret void\l}"];
}
