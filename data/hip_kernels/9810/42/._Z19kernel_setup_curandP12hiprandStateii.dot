digraph "CFG for '_Z19kernel_setup_curandP12hiprandStateii' function" {
	label="CFG for '_Z19kernel_setup_curandP12hiprandStateii' function";

	Node0x61ffa70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%3:\l  %4 = alloca %\"class.rocrand_device::xorwow_engine\", align 8, addrspace(5)\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = icmp slt i32 %13, %2\l  br i1 %14, label %15, label %218\l|{<s0>T|<s1>F}}"];
	Node0x61ffa70:s0 -> Node0x61ffb80;
	Node0x61ffa70:s1 -> Node0x6204db0;
	Node0x61ffb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %16\l  %18 = bitcast %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4 to i8\l... addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 48, i8 addrspace(5)* %18) #4\l  %19 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 0\l  %20 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 1\l  %21 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 2\l  %22 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 3\l  %23 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 4\l  %24 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 0\l  %25 = xor i32 %1, 746559103\l  %26 = icmp sgt i32 %1, -1\l  %27 = mul i32 %25, 1228688033\l  %28 = select i1 %26, i32 -1973591729, i32 -100066652\l  %29 = add i32 %27, 123456789\l  store i32 %29, i32 addrspace(5)* %19, align 8, !tbaa !7\l  %30 = xor i32 %27, 362436069\l  store i32 %30, i32 addrspace(5)* %20, align 4, !tbaa !7\l  %31 = add nsw i32 %28, 521288629\l  store i32 %31, i32 addrspace(5)* %21, align 8, !tbaa !7\l  %32 = xor i32 %28, 88675123\l  store i32 %32, i32 addrspace(5)* %22, align 4, !tbaa !7\l  %33 = add i32 %27, 5783321\l  store i32 %33, i32 addrspace(5)* %23, align 8, !tbaa !7\l  %34 = add i32 %27, 6615241\l  %35 = add i32 %34, %28\l  store i32 %35, i32 addrspace(5)* %24, align 8, !tbaa !11\l  %36 = icmp eq i32 %13, 0\l  br i1 %36, label %214, label %37\l|{<s0>T|<s1>F}}"];
	Node0x61ffb80:s0 -> Node0x6206ef0;
	Node0x61ffb80:s1 -> Node0x6206f80;
	Node0x6206f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%37:\l37:                                               \l  %38 = phi i64 [ %47, %45 ], [ %16, %15 ]\l  %39 = phi i32 [ %46, %45 ], [ 0, %15 ]\l  %40 = trunc i64 %38 to i32\l  %41 = and i32 %40, 3\l  %42 = icmp eq i32 %41, 0\l  br i1 %42, label %45, label %43\l|{<s0>T|<s1>F}}"];
	Node0x6206f80:s0 -> Node0x62070c0;
	Node0x6206f80:s1 -> Node0x62074b0;
	Node0x62074b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%43:\l43:                                               \l  %44 = zext i32 %39 to i64\l  br label %49\l}"];
	Node0x62074b0 -> Node0x6207660;
	Node0x62070c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%45:\l45:                                               \l  %46 = add nuw nsw i32 %39, 1\l  %47 = lshr i64 %38, 2\l  %48 = icmp ult i64 %38, 4\l  br i1 %48, label %214, label %37, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x62070c0:s0 -> Node0x6206ef0;
	Node0x62070c0:s1 -> Node0x6206f80;
	Node0x6207660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%49:\l49:                                               \l  %50 = phi i32 [ 0, %43 ], [ %212, %211 ]\l  br label %51\l}"];
	Node0x6207660 -> Node0x6207b40;
	Node0x6207b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32 [ 0, %49 ], [ %184, %51 ]\l  %53 = phi i32 [ 0, %49 ], [ %190, %51 ]\l  %54 = phi i32 [ 0, %49 ], [ %196, %51 ]\l  %55 = phi i32 [ 0, %49 ], [ %202, %51 ]\l  %56 = phi i32 [ 0, %49 ], [ %208, %51 ]\l  %57 = phi i32 [ 0, %49 ], [ %209, %51 ]\l  %58 = lshr i32 %57, 5\l  %59 = and i32 %57, 28\l  %60 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %58\l  %61 = load i32, i32 addrspace(5)* %60, align 4, !tbaa !7\l  %62 = shl nuw i32 1, %59\l  %63 = and i32 %62, %61\l  %64 = icmp eq i32 %63, 0\l  %65 = mul nuw nsw i32 %57, 5\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %66\l  %68 = load i32, i32 addrspace(4)* %67, align 16, !tbaa !7\l  %69 = select i1 %64, i32 0, i32 %68\l  %70 = xor i32 %69, %52\l  %71 = or i32 %65, 1\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %72\l  %74 = load i32, i32 addrspace(4)* %73, align 4, !tbaa !7\l  %75 = select i1 %64, i32 0, i32 %74\l  %76 = xor i32 %75, %53\l  %77 = or i32 %65, 2\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %78\l  %80 = load i32, i32 addrspace(4)* %79, align 8, !tbaa !7\l  %81 = select i1 %64, i32 0, i32 %80\l  %82 = xor i32 %81, %54\l  %83 = or i32 %65, 3\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %84\l  %86 = load i32, i32 addrspace(4)* %85, align 4, !tbaa !7\l  %87 = select i1 %64, i32 0, i32 %86\l  %88 = xor i32 %87, %55\l  %89 = add nuw nsw i32 %65, 4\l  %90 = zext i32 %89 to i64\l  %91 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %90\l  %92 = load i32, i32 addrspace(4)* %91, align 16, !tbaa !7\l  %93 = select i1 %64, i32 0, i32 %92\l  %94 = xor i32 %93, %56\l  %95 = or i32 %57, 1\l  %96 = lshr i32 %57, 5\l  %97 = and i32 %95, 29\l  %98 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %96\l  %99 = load i32, i32 addrspace(5)* %98, align 4, !tbaa !7\l  %100 = shl nuw i32 1, %97\l  %101 = and i32 %100, %99\l  %102 = icmp eq i32 %101, 0\l  %103 = mul nuw nsw i32 %95, 5\l  %104 = zext i32 %103 to i64\l  %105 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %104\l  %106 = load i32, i32 addrspace(4)* %105, align 4, !tbaa !7\l  %107 = select i1 %102, i32 0, i32 %106\l  %108 = xor i32 %107, %70\l  %109 = add nuw nsw i32 %103, 1\l  %110 = zext i32 %109 to i64\l  %111 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %110\l  %112 = load i32, i32 addrspace(4)* %111, align 8, !tbaa !7\l  %113 = select i1 %102, i32 0, i32 %112\l  %114 = xor i32 %113, %76\l  %115 = or i32 %103, 2\l  %116 = zext i32 %115 to i64\l  %117 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %116\l  %118 = load i32, i32 addrspace(4)* %117, align 4, !tbaa !7\l  %119 = select i1 %102, i32 0, i32 %118\l  %120 = xor i32 %119, %82\l  %121 = add nuw nsw i32 %103, 3\l  %122 = zext i32 %121 to i64\l  %123 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %122\l  %124 = load i32, i32 addrspace(4)* %123, align 16, !tbaa !7\l  %125 = select i1 %102, i32 0, i32 %124\l  %126 = xor i32 %125, %88\l  %127 = add nuw nsw i32 %103, 4\l  %128 = zext i32 %127 to i64\l  %129 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %128\l  %130 = load i32, i32 addrspace(4)* %129, align 4, !tbaa !7\l  %131 = select i1 %102, i32 0, i32 %130\l  %132 = xor i32 %131, %94\l  %133 = or i32 %57, 2\l  %134 = lshr i32 %57, 5\l  %135 = and i32 %133, 30\l  %136 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %134\l  %137 = load i32, i32 addrspace(5)* %136, align 4, !tbaa !7\l  %138 = shl nuw i32 1, %135\l  %139 = and i32 %138, %137\l  %140 = icmp eq i32 %139, 0\l  %141 = mul nuw nsw i32 %133, 5\l  %142 = zext i32 %141 to i64\l  %143 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %142\l  %144 = load i32, i32 addrspace(4)* %143, align 8, !tbaa !7\l  %145 = select i1 %140, i32 0, i32 %144\l  %146 = xor i32 %145, %108\l  %147 = or i32 %141, 1\l  %148 = zext i32 %147 to i64\l  %149 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %148\l  %150 = load i32, i32 addrspace(4)* %149, align 4, !tbaa !7\l  %151 = select i1 %140, i32 0, i32 %150\l  %152 = xor i32 %151, %114\l  %153 = add nuw nsw i32 %141, 2\l  %154 = zext i32 %153 to i64\l  %155 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %154\l  %156 = load i32, i32 addrspace(4)* %155, align 16, !tbaa !7\l  %157 = select i1 %140, i32 0, i32 %156\l  %158 = xor i32 %157, %120\l  %159 = add nuw nsw i32 %141, 3\l  %160 = zext i32 %159 to i64\l  %161 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %160\l  %162 = load i32, i32 addrspace(4)* %161, align 4, !tbaa !7\l  %163 = select i1 %140, i32 0, i32 %162\l  %164 = xor i32 %163, %126\l  %165 = add nuw nsw i32 %141, 4\l  %166 = zext i32 %165 to i64\l  %167 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %166\l  %168 = load i32, i32 addrspace(4)* %167, align 8, !tbaa !7\l  %169 = select i1 %140, i32 0, i32 %168\l  %170 = xor i32 %169, %132\l  %171 = or i32 %57, 3\l  %172 = lshr i32 %57, 5\l  %173 = and i32 %171, 31\l  %174 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %172\l  %175 = load i32, i32 addrspace(5)* %174, align 4, !tbaa !7\l  %176 = shl nuw i32 1, %173\l  %177 = and i32 %176, %175\l  %178 = icmp eq i32 %177, 0\l  %179 = mul nuw nsw i32 %171, 5\l  %180 = zext i32 %179 to i64\l  %181 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %180\l  %182 = load i32, i32 addrspace(4)* %181, align 4, !tbaa !7\l  %183 = select i1 %178, i32 0, i32 %182\l  %184 = xor i32 %183, %146\l  %185 = add nuw nsw i32 %179, 1\l  %186 = zext i32 %185 to i64\l  %187 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %186\l  %188 = load i32, i32 addrspace(4)* %187, align 16, !tbaa !7\l  %189 = select i1 %178, i32 0, i32 %188\l  %190 = xor i32 %189, %152\l  %191 = add nuw nsw i32 %179, 2\l  %192 = zext i32 %191 to i64\l  %193 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %192\l  %194 = load i32, i32 addrspace(4)* %193, align 4, !tbaa !7\l  %195 = select i1 %178, i32 0, i32 %194\l  %196 = xor i32 %195, %158\l  %197 = add nuw nsw i32 %179, 3\l  %198 = zext i32 %197 to i64\l  %199 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %198\l  %200 = load i32, i32 addrspace(4)* %199, align 8, !tbaa !7\l  %201 = select i1 %178, i32 0, i32 %200\l  %202 = xor i32 %201, %164\l  %203 = add nuw nsw i32 %179, 4\l  %204 = zext i32 %203 to i64\l  %205 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %44, i64 %204\l  %206 = load i32, i32 addrspace(4)* %205, align 4, !tbaa !7\l  %207 = select i1 %178, i32 0, i32 %206\l  %208 = xor i32 %207, %170\l  %209 = add nuw nsw i32 %57, 4\l  %210 = icmp eq i32 %209, 160\l  br i1 %210, label %211, label %51, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x6207b40:s0 -> Node0x6207a00;
	Node0x6207b40:s1 -> Node0x6207b40;
	Node0x6207a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%211:\l211:                                              \l  store i32 %184, i32 addrspace(5)* %19, align 8, !tbaa !7\l  store i32 %190, i32 addrspace(5)* %20, align 4, !tbaa !7\l  store i32 %196, i32 addrspace(5)* %21, align 8, !tbaa !7\l  store i32 %202, i32 addrspace(5)* %22, align 4, !tbaa !7\l  store i32 %208, i32 addrspace(5)* %23, align 8, !tbaa !7\l  %212 = add nuw nsw i32 %50, 1\l  %213 = icmp eq i32 %212, %41\l  br i1 %213, label %45, label %49, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x6207a00:s0 -> Node0x62070c0;
	Node0x6207a00:s1 -> Node0x6207660;
	Node0x6206ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%214:\l214:                                              \l  %215 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 1\l  store i32 0, i32 addrspace(5)* %215, align 4, !tbaa !20\l  %216 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 2\l  store i32 0, i32 addrspace(5)* %216, align 8, !tbaa !21\l  %217 = bitcast %struct.hiprandState addrspace(1)* %17 to i8 addrspace(1)*\l  call void @llvm.memcpy.p1i8.p5i8.i64(i8 addrspace(1)* noundef align 8\l... dereferenceable(48) %217, i8 addrspace(5)* noundef align 8\l... dereferenceable(48) %18, i64 48, i1 false), !tbaa.struct !22\l  call void @llvm.lifetime.end.p5i8(i64 48, i8 addrspace(5)* %18) #4\l  br label %218\l}"];
	Node0x6206ef0 -> Node0x6204db0;
	Node0x6204db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%218:\l218:                                              \l  ret void\l}"];
}
