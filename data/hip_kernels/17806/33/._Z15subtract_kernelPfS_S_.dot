digraph "CFG for '_Z15subtract_kernelPfS_S_' function" {
	label="CFG for '_Z15subtract_kernelPfS_S_' function";

	Node0x45fdfa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 2, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %20 = add i32 %18, %19\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %22 = getelementptr i8, i8 addrspace(4)* %5, i64 8\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 4, !range !4, !invariant.load !5\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %21, %25\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !6\l  %28 = add i32 %26, %27\l  %29 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_Size, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i64 0), align 4, !tbaa !7\l  %30 = icmp ult i32 %12, %29\l  br i1 %30, label %31, label %49\l|{<s0>T|<s1>F}}"];
	Node0x45fdfa0:s0 -> Node0x4601d60;
	Node0x45fdfa0:s1 -> Node0x4601df0;
	Node0x4601d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%31:\l31:                                               \l  %32 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_Size, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i64 1), align 4, !tbaa !7\l  %33 = icmp ult i32 %20, %32\l  %34 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_Size, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i64 2), align 4\l  %35 = icmp ult i32 %28, %34\l  %36 = select i1 %33, i1 %35, i1 false\l  br i1 %36, label %37, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4601d60:s0 -> Node0x4602b90;
	Node0x4601d60:s1 -> Node0x4601df0;
	Node0x4602b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%37:\l37:                                               \l  %38 = mul i32 %32, %28\l  %39 = add i32 %38, %20\l  %40 = mul i32 %39, %29\l  %41 = add i32 %40, %12\l  %42 = zext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %47 = fsub contract float %44, %46\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %42\l  store float %47, float addrspace(1)* %48, align 4, !tbaa !10\l  br label %49\l}"];
	Node0x4602b90 -> Node0x4601df0;
	Node0x4601df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  ret void\l}"];
}
