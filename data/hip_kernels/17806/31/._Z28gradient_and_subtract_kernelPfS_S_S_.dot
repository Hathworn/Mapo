digraph "CFG for '_Z28gradient_and_subtract_kernelPfS_S_S_' function" {
	label="CFG for '_Z28gradient_and_subtract_kernelPfS_S_S_' function";

	Node0x5ae6070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %23 = getelementptr i8, i8 addrspace(4)* %6, i64 8\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !4, !invariant.load !5\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !6\l  %29 = add i32 %27, %28\l  %30 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_Size, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i64 0), align 4, !tbaa !7\l  %31 = icmp ult i32 %13, %30\l  br i1 %31, label %32, label %97\l|{<s0>T|<s1>F}}"];
	Node0x5ae6070:s0 -> Node0x5ae9e60;
	Node0x5ae6070:s1 -> Node0x5ae9ef0;
	Node0x5ae9e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%32:\l32:                                               \l  %33 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_Size, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i64 1), align 4, !tbaa !7\l  %34 = icmp ult i32 %21, %33\l  %35 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_Size, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i64 2), align 4\l  %36 = icmp ult i32 %29, %35\l  %37 = select i1 %34, i1 %36, i1 false\l  br i1 %37, label %38, label %97\l|{<s0>T|<s1>F}}"];
	Node0x5ae9e60:s0 -> Node0x5aeac70;
	Node0x5ae9e60:s1 -> Node0x5ae9ef0;
	Node0x5aeac70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%38:\l38:                                               \l  %39 = mul i32 %33, %29\l  %40 = add i32 %39, %21\l  %41 = mul i32 %40, %30\l  %42 = add i32 %41, %13\l  %43 = zext i32 %42 to i64\l  %44 = add i32 %40, 1\l  %45 = mul i32 %44, %30\l  %46 = add i32 %45, %13\l  %47 = zext i32 %46 to i64\l  %48 = add nuw i32 %29, 1\l  %49 = mul i32 %33, %48\l  %50 = add i32 %49, %21\l  %51 = mul i32 %50, %30\l  %52 = add i32 %51, %13\l  %53 = zext i32 %52 to i64\l  %54 = add nsw i32 %30, -1\l  %55 = icmp eq i32 %13, %54\l  br i1 %55, label %69, label %56\l|{<s0>T|<s1>F}}"];
	Node0x5aeac70:s0 -> Node0x5aeb700;
	Node0x5aeac70:s1 -> Node0x5aeb750;
	Node0x5aeb750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%56:\l56:                                               \l  %57 = add i32 %42, 1\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %63 = fsub contract float %60, %62\l  %64 = load float, float addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type.0, %struct.HIP_vector_type.0 addrspace(4)*\l... @c_Spacing, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0), align 4, !tbaa !7\l  %65 = fdiv contract float %63, %64\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %68 = fsub contract float %67, %65\l  store float %68, float addrspace(1)* %66, align 4, !tbaa !10\l  br label %69\l}"];
	Node0x5aeb750 -> Node0x5aeb700;
	Node0x5aeb700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%69:\l69:                                               \l  %70 = add nsw i32 %33, -1\l  %71 = icmp eq i32 %21, %70\l  br i1 %71, label %83, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5aeb700:s0 -> Node0x5aecc50;
	Node0x5aeb700:s1 -> Node0x5aecca0;
	Node0x5aecca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%72:\l72:                                               \l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !10\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !10\l  %77 = fsub contract float %74, %76\l  %78 = load float, float addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type.0, %struct.HIP_vector_type.0 addrspace(4)*\l... @c_Spacing, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1), align 4, !tbaa !7\l  %79 = fdiv contract float %77, %78\l  %80 = getelementptr inbounds float, float addrspace(1)* %2, i64 %43\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !10\l  %82 = fsub contract float %81, %79\l  store float %82, float addrspace(1)* %80, align 4, !tbaa !10\l  br label %83\l}"];
	Node0x5aecca0 -> Node0x5aecc50;
	Node0x5aecc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%83:\l83:                                               \l  %84 = add nsw i32 %35, -1\l  %85 = icmp eq i32 %29, %84\l  br i1 %85, label %97, label %86\l|{<s0>T|<s1>F}}"];
	Node0x5aecc50:s0 -> Node0x5ae9ef0;
	Node0x5aecc50:s1 -> Node0x5aed660;
	Node0x5aed660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%86:\l86:                                               \l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !10\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !10\l  %91 = fsub contract float %88, %90\l  %92 = load float, float addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type.0, %struct.HIP_vector_type.0 addrspace(4)*\l... @c_Spacing, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2), align 4, !tbaa !7\l  %93 = fdiv contract float %91, %92\l  %94 = getelementptr inbounds float, float addrspace(1)* %3, i64 %43\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !10\l  %96 = fsub contract float %95, %93\l  store float %96, float addrspace(1)* %94, align 4, !tbaa !10\l  br label %97\l}"];
	Node0x5aed660 -> Node0x5ae9ef0;
	Node0x5ae9ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  ret void\l}"];
}
