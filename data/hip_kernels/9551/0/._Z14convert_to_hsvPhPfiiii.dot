digraph "CFG for '_Z14convert_to_hsvPhPfiiii' function" {
	label="CFG for '_Z14convert_to_hsvPhPfiiii' function";

	Node0x544fcf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = mul nsw i32 %7, %4\l  %10 = mul nsw i32 %8, %5\l  %11 = add nsw i32 %10, %9\l  %12 = add nsw i32 %11, 2\l  %13 = sext i32 %12 to i64\l  %14 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %13\l  %15 = load i8, i8 addrspace(1)* %14, align 1, !tbaa !5, !amdgpu.noclobber !8\l  %16 = uitofp i8 %15 to float\l  %17 = fdiv contract float %16, 2.550000e+02\l  %18 = add nsw i32 %11, 1\l  %19 = sext i32 %18 to i64\l  %20 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %19\l  %21 = load i8, i8 addrspace(1)* %20, align 1, !tbaa !5, !amdgpu.noclobber !8\l  %22 = uitofp i8 %21 to float\l  %23 = fdiv contract float %22, 2.550000e+02\l  %24 = sext i32 %11 to i64\l  %25 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %24\l  %26 = load i8, i8 addrspace(1)* %25, align 1, !tbaa !5, !amdgpu.noclobber !8\l  %27 = uitofp i8 %26 to float\l  %28 = fdiv contract float %27, 2.550000e+02\l  %29 = tail call float @llvm.maxnum.f32(float %23, float %28)\l  %30 = tail call float @llvm.maxnum.f32(float %17, float %29)\l  %31 = tail call float @llvm.minnum.f32(float %23, float %28)\l  %32 = tail call float @llvm.minnum.f32(float %17, float %31)\l  %33 = fsub contract float %30, %32\l  %34 = fcmp contract oeq float %30, 0.000000e+00\l  br i1 %34, label %59, label %35\l|{<s0>T|<s1>F}}"];
	Node0x544fcf0:s0 -> Node0x5451ac0;
	Node0x544fcf0:s1 -> Node0x5454170;
	Node0x5454170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%35:\l35:                                               \l  %36 = fdiv contract float %33, %30\l  %37 = fcmp contract olt float %33, 0x3F50624DE0000000\l  br i1 %37, label %59, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5454170:s0 -> Node0x5451ac0;
	Node0x5454170:s1 -> Node0x54543d0;
	Node0x54543d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%38:\l38:                                               \l  %39 = fcmp contract oeq float %30, %17\l  br i1 %39, label %40, label %47\l|{<s0>T|<s1>F}}"];
	Node0x54543d0:s0 -> Node0x54545a0;
	Node0x54543d0:s1 -> Node0x54545f0;
	Node0x54545a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%40:\l40:                                               \l  %41 = fsub contract float %23, %28\l  %42 = fmul contract float %41, 6.000000e+01\l  %43 = fdiv contract float %42, %33\l  %44 = fcmp contract olt float %43, 0.000000e+00\l  %45 = fadd contract float %43, 3.600000e+02\l  %46 = select i1 %44, float %45, float %43\l  br label %59\l}"];
	Node0x54545a0 -> Node0x5451ac0;
	Node0x54545f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%47:\l47:                                               \l  %48 = fcmp contract oeq float %30, %23\l  br i1 %48, label %49, label %54\l|{<s0>T|<s1>F}}"];
	Node0x54545f0:s0 -> Node0x5454bf0;
	Node0x54545f0:s1 -> Node0x5454c40;
	Node0x5454bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%49:\l49:                                               \l  %50 = fsub contract float %28, %17\l  %51 = fdiv contract float %50, %33\l  %52 = fadd contract float %51, 2.000000e+00\l  %53 = fmul contract float %52, 6.000000e+01\l  br label %59\l}"];
	Node0x5454bf0 -> Node0x5451ac0;
	Node0x5454c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%54:\l54:                                               \l  %55 = fsub contract float %17, %23\l  %56 = fdiv contract float %55, %33\l  %57 = fadd contract float %56, 4.000000e+00\l  %58 = fmul contract float %57, 6.000000e+01\l  br label %59\l}"];
	Node0x5454c40 -> Node0x5451ac0;
	Node0x5451ac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi float [ %36, %49 ], [ %36, %54 ], [ 0.000000e+00, %6 ], [ %36, %35\l... ], [ %36, %40 ]\l  %61 = phi float [ %53, %49 ], [ %58, %54 ], [ 0.000000e+00, %6 ], [\l... 0.000000e+00, %35 ], [ %46, %40 ]\l  %62 = fcmp contract ogt float %61, 4.000000e+01\l  %63 = fcmp contract olt float %61, 2.000000e+02\l  %64 = and i1 %62, %63\l  %65 = fcmp contract ogt float %60, 0.000000e+00\l  %66 = select i1 %64, i1 %65, i1 false\l  %67 = fcmp contract olt float %60, 1.000000e+02\l  %68 = select i1 %66, i1 %67, i1 false\l  %69 = fcmp contract ogt float %30, 0.000000e+00\l  %70 = select i1 %68, i1 %69, i1 false\l  %71 = fcmp contract olt float %30, 1.000000e+02\l  %72 = select i1 %70, i1 %71, i1 false\l  %73 = fadd contract float %61, 1.400000e+02\l  %74 = select i1 %72, float %73, float %61\l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %13\l  store float %74, float addrspace(1)* %75, align 4\l  %76 = getelementptr inbounds float, float addrspace(1)* %1, i64 %19\l  store float %60, float addrspace(1)* %76, align 4\l  %77 = getelementptr inbounds float, float addrspace(1)* %1, i64 %24\l  store float %30, float addrspace(1)* %77, align 4\l  ret void\l}"];
}
