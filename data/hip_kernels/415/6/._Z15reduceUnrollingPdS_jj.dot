digraph "CFG for '_Z15reduceUnrollingPdS_jj' function" {
	label="CFG for '_Z15reduceUnrollingPdS_jj' function";

	Node0x5dc7920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %3\l  %13 = mul i32 %12, %11\l  %14 = add i32 %13, %5\l  %15 = add i32 %3, -1\l  %16 = mul i32 %15, %11\l  %17 = add i32 %14, %16\l  %18 = icmp ult i32 %17, %2\l  %19 = icmp ugt i32 %3, 1\l  %20 = select i1 %18, i1 %19, i1 false\l  br i1 %20, label %21, label %109\l|{<s0>T|<s1>F}}"];
	Node0x5dc7920:s0 -> Node0x5dc7970;
	Node0x5dc7920:s1 -> Node0x5dc9d10;
	Node0x5dc7970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%21:\l21:                                               \l  %22 = zext i32 %14 to i64\l  %23 = getelementptr inbounds double, double addrspace(1)* %0, i64 %22\l  %24 = load double, double addrspace(1)* %23, align 8, !tbaa !7\l  %25 = add i32 %3, -2\l  %26 = and i32 %15, 7\l  %27 = icmp ult i32 %25, 7\l  br i1 %27, label %92, label %28\l|{<s0>T|<s1>F}}"];
	Node0x5dc7970:s0 -> Node0x5dca2e0;
	Node0x5dc7970:s1 -> Node0x5dca370;
	Node0x5dca370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%28:\l28:                                               \l  %29 = and i32 %15, -8\l  br label %30\l}"];
	Node0x5dca370 -> Node0x5dca570;
	Node0x5dca570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%30:\l30:                                               \l  %31 = phi double [ %24, %28 ], [ %88, %30 ]\l  %32 = phi i32 [ 1, %28 ], [ %89, %30 ]\l  %33 = phi i32 [ 0, %28 ], [ %90, %30 ]\l  %34 = mul i32 %32, %11\l  %35 = add i32 %34, %14\l  %36 = zext i32 %35 to i64\l  %37 = getelementptr inbounds double, double addrspace(1)* %0, i64 %36\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !7\l  %39 = fadd contract double %38, %31\l  store double %39, double addrspace(1)* %23, align 8, !tbaa !7\l  %40 = add nuw nsw i32 %32, 1\l  %41 = mul i32 %40, %11\l  %42 = add i32 %41, %14\l  %43 = zext i32 %42 to i64\l  %44 = getelementptr inbounds double, double addrspace(1)* %0, i64 %43\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !7\l  %46 = fadd contract double %45, %39\l  store double %46, double addrspace(1)* %23, align 8, !tbaa !7\l  %47 = add nuw nsw i32 %32, 2\l  %48 = mul i32 %47, %11\l  %49 = add i32 %48, %14\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds double, double addrspace(1)* %0, i64 %50\l  %52 = load double, double addrspace(1)* %51, align 8, !tbaa !7\l  %53 = fadd contract double %52, %46\l  store double %53, double addrspace(1)* %23, align 8, !tbaa !7\l  %54 = add nuw nsw i32 %32, 3\l  %55 = mul i32 %54, %11\l  %56 = add i32 %55, %14\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds double, double addrspace(1)* %0, i64 %57\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !7\l  %60 = fadd contract double %59, %53\l  store double %60, double addrspace(1)* %23, align 8, !tbaa !7\l  %61 = add nuw nsw i32 %32, 4\l  %62 = mul i32 %61, %11\l  %63 = add i32 %62, %14\l  %64 = zext i32 %63 to i64\l  %65 = getelementptr inbounds double, double addrspace(1)* %0, i64 %64\l  %66 = load double, double addrspace(1)* %65, align 8, !tbaa !7\l  %67 = fadd contract double %66, %60\l  store double %67, double addrspace(1)* %23, align 8, !tbaa !7\l  %68 = add nuw nsw i32 %32, 5\l  %69 = mul i32 %68, %11\l  %70 = add i32 %69, %14\l  %71 = zext i32 %70 to i64\l  %72 = getelementptr inbounds double, double addrspace(1)* %0, i64 %71\l  %73 = load double, double addrspace(1)* %72, align 8, !tbaa !7\l  %74 = fadd contract double %73, %67\l  store double %74, double addrspace(1)* %23, align 8, !tbaa !7\l  %75 = add nuw nsw i32 %32, 6\l  %76 = mul i32 %75, %11\l  %77 = add i32 %76, %14\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds double, double addrspace(1)* %0, i64 %78\l  %80 = load double, double addrspace(1)* %79, align 8, !tbaa !7\l  %81 = fadd contract double %80, %74\l  store double %81, double addrspace(1)* %23, align 8, !tbaa !7\l  %82 = add nuw nsw i32 %32, 7\l  %83 = mul i32 %82, %11\l  %84 = add i32 %83, %14\l  %85 = zext i32 %84 to i64\l  %86 = getelementptr inbounds double, double addrspace(1)* %0, i64 %85\l  %87 = load double, double addrspace(1)* %86, align 8, !tbaa !7\l  %88 = fadd contract double %87, %81\l  store double %88, double addrspace(1)* %23, align 8, !tbaa !7\l  %89 = add nuw nsw i32 %32, 8\l  %90 = add i32 %33, 8\l  %91 = icmp eq i32 %90, %29\l  br i1 %91, label %92, label %30, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5dca570:s0 -> Node0x5dca2e0;
	Node0x5dca570:s1 -> Node0x5dca570;
	Node0x5dca2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%92:\l92:                                               \l  %93 = phi double [ %24, %21 ], [ %88, %30 ]\l  %94 = phi i32 [ 1, %21 ], [ %89, %30 ]\l  %95 = icmp eq i32 %26, 0\l  br i1 %95, label %109, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5dca2e0:s0 -> Node0x5dc9d10;
	Node0x5dca2e0:s1 -> Node0x5dcdad0;
	Node0x5dcdad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%96:\l96:                                               \l  %97 = phi double [ %105, %96 ], [ %93, %92 ]\l  %98 = phi i32 [ %106, %96 ], [ %94, %92 ]\l  %99 = phi i32 [ %107, %96 ], [ 0, %92 ]\l  %100 = mul i32 %98, %11\l  %101 = add i32 %100, %14\l  %102 = zext i32 %101 to i64\l  %103 = getelementptr inbounds double, double addrspace(1)* %0, i64 %102\l  %104 = load double, double addrspace(1)* %103, align 8, !tbaa !7\l  %105 = fadd contract double %104, %97\l  store double %105, double addrspace(1)* %23, align 8, !tbaa !7\l  %106 = add nuw nsw i32 %98, 1\l  %107 = add i32 %99, 1\l  %108 = icmp eq i32 %107, %26\l  br i1 %108, label %109, label %96, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5dcdad0:s0 -> Node0x5dc9d10;
	Node0x5dcdad0:s1 -> Node0x5dcdad0;
	Node0x5dc9d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%109:\l109:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %110 = icmp ult i16 %10, 2\l  br i1 %110, label %114, label %111\l|{<s0>T|<s1>F}}"];
	Node0x5dc9d10:s0 -> Node0x5dce7c0;
	Node0x5dc9d10:s1 -> Node0x5dce850;
	Node0x5dce850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%111:\l111:                                              \l  %112 = zext i32 %14 to i64\l  %113 = getelementptr inbounds double, double addrspace(1)* %0, i64 %112\l  br label %116\l}"];
	Node0x5dce850 -> Node0x5dceaa0;
	Node0x5dce7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%114:\l114:                                              \l  %115 = icmp eq i32 %5, 0\l  br i1 %115, label %129, label %135\l|{<s0>T|<s1>F}}"];
	Node0x5dce7c0:s0 -> Node0x5dcebf0;
	Node0x5dce7c0:s1 -> Node0x5dcec40;
	Node0x5dceaa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%116:\l116:                                              \l  %117 = phi i32 [ %11, %111 ], [ %118, %127 ]\l  %118 = lshr i32 %117, 1\l  %119 = icmp ult i32 %5, %118\l  br i1 %119, label %120, label %127\l|{<s0>T|<s1>F}}"];
	Node0x5dceaa0:s0 -> Node0x5dcefe0;
	Node0x5dceaa0:s1 -> Node0x5dced80;
	Node0x5dcefe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%120:\l120:                                              \l  %121 = add i32 %118, %14\l  %122 = zext i32 %121 to i64\l  %123 = getelementptr inbounds double, double addrspace(1)* %0, i64 %122\l  %124 = load double, double addrspace(1)* %123, align 8, !tbaa !7\l  %125 = load double, double addrspace(1)* %113, align 8, !tbaa !7\l  %126 = fadd contract double %124, %125\l  store double %126, double addrspace(1)* %113, align 8, !tbaa !7\l  br label %127\l}"];
	Node0x5dcefe0 -> Node0x5dced80;
	Node0x5dced80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%127:\l127:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %128 = icmp ult i32 %117, 4\l  br i1 %128, label %114, label %116, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5dced80:s0 -> Node0x5dce7c0;
	Node0x5dced80:s1 -> Node0x5dceaa0;
	Node0x5dcebf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%129:\l129:                                              \l  %130 = zext i32 %14 to i64\l  %131 = getelementptr inbounds double, double addrspace(1)* %0, i64 %130\l  %132 = load double, double addrspace(1)* %131, align 8, !tbaa !7\l  %133 = zext i32 %6 to i64\l  %134 = getelementptr inbounds double, double addrspace(1)* %1, i64 %133\l  store double %132, double addrspace(1)* %134, align 8, !tbaa !7\l  br label %135\l}"];
	Node0x5dcebf0 -> Node0x5dcec40;
	Node0x5dcec40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%135:\l135:                                              \l  ret void\l}"];
}
