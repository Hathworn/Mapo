digraph "CFG for '_Z43cunn_CriterionFilter_updateGradInput_kernelPfS_S_iiii' function" {
	label="CFG for '_Z43cunn_CriterionFilter_updateGradInput_kernelPfS_S_iiii' function";

	Node0x619b160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = freeze i32 %8\l  %10 = freeze i32 %6\l  %11 = udiv i32 %9, %10\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %16, %6\l  %18 = mul nsw i32 %11, %5\l  %19 = mul nsw i32 %18, %4\l  %20 = load float, float addrspace(1)* %2, align 4, !tbaa !6,\l... !amdgpu.noclobber !5\l  %21 = fptosi float %20 to i32\l  %22 = mul i32 %11, %10\l  %23 = sub i32 %9, %22\l  %24 = mul i32 %23, %16\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !10\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %26, %5\l  br i1 %27, label %28, label %106\l|{<s0>T|<s1>F}}"];
	Node0x619b160:s0 -> Node0x619dd50;
	Node0x619b160:s1 -> Node0x619dde0;
	Node0x619dd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%28:\l28:                                               \l  %29 = icmp slt i32 %4, 1\l  %30 = add i32 %4, -1\l  %31 = and i32 %4, 7\l  %32 = icmp ult i32 %30, 7\l  %33 = and i32 %4, -8\l  %34 = icmp eq i32 %31, 0\l  br label %35\l}"];
	Node0x619dd50 -> Node0x619e460;
	Node0x619e460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%35:\l35:                                               \l  %36 = phi i32 [ %26, %28 ], [ %104, %103 ]\l  %37 = add nsw i32 %36, %18\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %1, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !6\l  %41 = fptosi float %40 to i32\l  %42 = icmp ne i32 %41, %21\l  %43 = select i1 %42, i1 true, i1 %29\l  br i1 %43, label %103, label %44\l|{<s0>T|<s1>F}}"];
	Node0x619e460:s0 -> Node0x619e550;
	Node0x619e460:s1 -> Node0x619f090;
	Node0x619f090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%44:\l44:                                               \l  %45 = add i32 %36, %19\l  br i1 %32, label %91, label %46\l|{<s0>T|<s1>F}}"];
	Node0x619f090:s0 -> Node0x619f260;
	Node0x619f090:s1 -> Node0x619f2b0;
	Node0x619f2b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%46:\l46:                                               \l  %47 = phi i32 [ %88, %46 ], [ 0, %44 ]\l  %48 = phi i32 [ %89, %46 ], [ 0, %44 ]\l  %49 = mul nsw i32 %47, %5\l  %50 = add i32 %45, %49\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  store float 0.000000e+00, float addrspace(1)* %52, align 4, !tbaa !6\l  %53 = or i32 %47, 1\l  %54 = mul nsw i32 %53, %5\l  %55 = add i32 %45, %54\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  store float 0.000000e+00, float addrspace(1)* %57, align 4, !tbaa !6\l  %58 = or i32 %47, 2\l  %59 = mul nsw i32 %58, %5\l  %60 = add i32 %45, %59\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  store float 0.000000e+00, float addrspace(1)* %62, align 4, !tbaa !6\l  %63 = or i32 %47, 3\l  %64 = mul nsw i32 %63, %5\l  %65 = add i32 %45, %64\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  store float 0.000000e+00, float addrspace(1)* %67, align 4, !tbaa !6\l  %68 = or i32 %47, 4\l  %69 = mul nsw i32 %68, %5\l  %70 = add i32 %45, %69\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  store float 0.000000e+00, float addrspace(1)* %72, align 4, !tbaa !6\l  %73 = or i32 %47, 5\l  %74 = mul nsw i32 %73, %5\l  %75 = add i32 %45, %74\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  store float 0.000000e+00, float addrspace(1)* %77, align 4, !tbaa !6\l  %78 = or i32 %47, 6\l  %79 = mul nsw i32 %78, %5\l  %80 = add i32 %45, %79\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %81\l  store float 0.000000e+00, float addrspace(1)* %82, align 4, !tbaa !6\l  %83 = or i32 %47, 7\l  %84 = mul nsw i32 %83, %5\l  %85 = add i32 %45, %84\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  store float 0.000000e+00, float addrspace(1)* %87, align 4, !tbaa !6\l  %88 = add nuw nsw i32 %47, 8\l  %89 = add i32 %48, 8\l  %90 = icmp eq i32 %89, %33\l  br i1 %90, label %91, label %46, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x619f2b0:s0 -> Node0x619f260;
	Node0x619f2b0:s1 -> Node0x619f2b0;
	Node0x619f260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%91:\l91:                                               \l  %92 = phi i32 [ 0, %44 ], [ %88, %46 ]\l  br i1 %34, label %103, label %93\l|{<s0>T|<s1>F}}"];
	Node0x619f260:s0 -> Node0x619e550;
	Node0x619f260:s1 -> Node0x61a2120;
	Node0x61a2120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%93:\l93:                                               \l  %94 = phi i32 [ %100, %93 ], [ %92, %91 ]\l  %95 = phi i32 [ %101, %93 ], [ 0, %91 ]\l  %96 = mul nsw i32 %94, %5\l  %97 = add i32 %45, %96\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  store float 0.000000e+00, float addrspace(1)* %99, align 4, !tbaa !6\l  %100 = add nuw nsw i32 %94, 1\l  %101 = add i32 %95, 1\l  %102 = icmp eq i32 %101, %31\l  br i1 %102, label %103, label %93, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x61a2120:s0 -> Node0x619e550;
	Node0x61a2120:s1 -> Node0x61a2120;
	Node0x619e550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%103:\l103:                                              \l  %104 = add nsw i32 %36, %17\l  %105 = icmp slt i32 %104, %5\l  br i1 %105, label %35, label %106, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x619e550:s0 -> Node0x619e460;
	Node0x619e550:s1 -> Node0x619dde0;
	Node0x619dde0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%106:\l106:                                              \l  ret void\l}"];
}
