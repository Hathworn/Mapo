digraph "CFG for '_Z20matrixVectMultKernelPfS_S_i' function" {
	label="CFG for '_Z20matrixVectMultKernelPfS_S_i' function";

	Node0x4c783e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = mul nsw i32 %13, %3\l  %15 = add nsw i32 %14, %3\l  %16 = mul nsw i32 %3, %3\l  %17 = icmp slt i32 %14, %16\l  br i1 %17, label %18, label %39\l|{<s0>T|<s1>F}}"];
	Node0x4c783e0:s0 -> Node0x4c7a510;
	Node0x4c783e0:s1 -> Node0x4c7a5a0;
	Node0x4c7a510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%18:\l18:                                               \l  %19 = sext i32 %13 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %2, i64 %19\l  store float 1.000000e+00, float addrspace(1)* %20, align 4, !tbaa !7\l  %21 = icmp sgt i32 %3, 0\l  br i1 %21, label %22, label %39\l|{<s0>T|<s1>F}}"];
	Node0x4c7a510:s0 -> Node0x4c7b460;
	Node0x4c7a510:s1 -> Node0x4c7a5a0;
	Node0x4c7b460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = phi float [ %33, %22 ], [ 1.000000e+00, %18 ]\l  %24 = phi i32 [ %35, %22 ], [ 0, %18 ]\l  %25 = phi i32 [ %34, %22 ], [ %14, %18 ]\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %29 = zext i32 %24 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7\l  %32 = fadd contract float %28, %31\l  %33 = fmul contract float %23, %32\l  store float %33, float addrspace(1)* %20, align 4, !tbaa !7\l  %34 = add nsw i32 %25, 1\l  %35 = add nuw nsw i32 %24, 1\l  %36 = icmp slt i32 %34, %15\l  %37 = icmp slt i32 %35, %3\l  %38 = select i1 %36, i1 %37, i1 false\l  br i1 %38, label %22, label %39, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4c7b460:s0 -> Node0x4c7b460;
	Node0x4c7b460:s1 -> Node0x4c7a5a0;
	Node0x4c7a5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%39:\l39:                                               \l  ret void\l}"];
}
