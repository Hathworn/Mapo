; ModuleID = '../data/hip_kernels/17576/4/main.cu'
source_filename = "../data/hip_kernels/17576/4/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

@_ZZ7FF_calcPfS_S_iiffS_fE4q_WK = internal unnamed_addr addrspace(3) global float undef, align 4
@_ZZ7FF_calcPfS_S_iiffS_fE4WK_s = internal unnamed_addr addrspace(3) global [66 x float] undef, align 16
@_ZZ7FF_calcPfS_S_iiffS_fE12C1_PI_43_rho = internal unnamed_addr addrspace(3) global float undef, align 4

; Function Attrs: convergent mustprogress norecurse nounwind
define protected amdgpu_kernel void @_Z7FF_calcPfS_S_iiffS_f(float addrspace(1)* nocapture readonly %0, float addrspace(1)* nocapture readonly %1, float addrspace(1)* nocapture readonly %2, i32 %3, i32 %4, float %5, float %6, float addrspace(1)* nocapture writeonly %7, float %8) local_unnamed_addr #0 {
  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %11 = icmp ult i32 %10, %3
  %12 = icmp slt i32 %10, %3
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %997

14:                                               ; preds = %9
  %15 = fmul contract float %5, %5
  %16 = fpext float %15 to double
  %17 = fadd contract double %16, -1.000000e+00
  %18 = tail call float @llvm.fabs.f32(float %5)
  %19 = tail call float @llvm.amdgcn.frexp.mant.f32(float %18)
  %20 = fcmp olt float %19, 0x3FE5555560000000
  %21 = zext i1 %20 to i32
  %22 = tail call float @llvm.amdgcn.ldexp.f32(float %19, i32 %21)
  %23 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %18)
  %24 = sub nsw i32 %23, %21
  %25 = fadd float %22, -1.000000e+00
  %26 = fadd float %22, 1.000000e+00
  %27 = fadd float %26, -1.000000e+00
  %28 = fsub float %22, %27
  %29 = tail call float @llvm.amdgcn.rcp.f32(float %26)
  %30 = fmul float %25, %29
  %31 = fmul float %26, %30
  %32 = fneg float %31
  %33 = tail call float @llvm.fma.f32(float %30, float %26, float %32)
  %34 = tail call float @llvm.fma.f32(float %30, float %28, float %33)
  %35 = fadd float %31, %34
  %36 = fsub float %35, %31
  %37 = fsub float %34, %36
  %38 = fsub float %25, %35
  %39 = fsub float %25, %38
  %40 = fsub float %39, %35
  %41 = fsub float %40, %37
  %42 = fadd float %38, %41
  %43 = fmul float %29, %42
  %44 = fadd float %30, %43
  %45 = fsub float %44, %30
  %46 = fsub float %43, %45
  %47 = fmul float %44, %44
  %48 = fneg float %47
  %49 = tail call float @llvm.fma.f32(float %44, float %44, float %48)
  %50 = fmul float %46, 2.000000e+00
  %51 = tail call float @llvm.fma.f32(float %44, float %50, float %49)
  %52 = fadd float %47, %51
  %53 = fsub float %52, %47
  %54 = fsub float %51, %53
  %55 = tail call float @llvm.fmuladd.f32(float %52, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %56 = tail call float @llvm.fmuladd.f32(float %52, float %55, float 0x3FD999BDE0000000)
  %57 = sitofp i32 %24 to float
  %58 = fmul float %57, 0x3FE62E4300000000
  %59 = fneg float %58
  %60 = tail call float @llvm.fma.f32(float %57, float 0x3FE62E4300000000, float %59)
  %61 = tail call float @llvm.fma.f32(float %57, float 0xBE205C6100000000, float %60)
  %62 = fadd float %58, %61
  %63 = fsub float %62, %58
  %64 = fsub float %61, %63
  %65 = tail call float @llvm.amdgcn.ldexp.f32(float %44, i32 1)
  %66 = fmul float %44, %52
  %67 = fneg float %66
  %68 = tail call float @llvm.fma.f32(float %52, float %44, float %67)
  %69 = tail call float @llvm.fma.f32(float %52, float %46, float %68)
  %70 = tail call float @llvm.fma.f32(float %54, float %44, float %69)
  %71 = fadd float %66, %70
  %72 = fsub float %71, %66
  %73 = fsub float %70, %72
  %74 = fmul float %52, %56
  %75 = fneg float %74
  %76 = tail call float @llvm.fma.f32(float %52, float %56, float %75)
  %77 = tail call float @llvm.fma.f32(float %54, float %56, float %76)
  %78 = fadd float %74, %77
  %79 = fsub float %78, %74
  %80 = fsub float %77, %79
  %81 = fadd float %78, 0x3FE5555540000000
  %82 = fadd float %81, 0xBFE5555540000000
  %83 = fsub float %78, %82
  %84 = fadd float %80, 0x3E2E720200000000
  %85 = fadd float %84, %83
  %86 = fadd float %81, %85
  %87 = fsub float %86, %81
  %88 = fsub float %85, %87
  %89 = fmul float %71, %86
  %90 = fneg float %89
  %91 = tail call float @llvm.fma.f32(float %71, float %86, float %90)
  %92 = tail call float @llvm.fma.f32(float %71, float %88, float %91)
  %93 = tail call float @llvm.fma.f32(float %73, float %86, float %92)
  %94 = tail call float @llvm.amdgcn.ldexp.f32(float %46, i32 1)
  %95 = fadd float %89, %93
  %96 = fsub float %95, %89
  %97 = fsub float %93, %96
  %98 = fadd float %65, %95
  %99 = fsub float %98, %65
  %100 = fsub float %95, %99
  %101 = fadd float %94, %97
  %102 = fadd float %101, %100
  %103 = fadd float %98, %102
  %104 = fsub float %103, %98
  %105 = fsub float %102, %104
  %106 = fadd float %62, %103
  %107 = fsub float %106, %62
  %108 = fsub float %106, %107
  %109 = fsub float %62, %108
  %110 = fsub float %103, %107
  %111 = fadd float %110, %109
  %112 = fadd float %64, %105
  %113 = fsub float %112, %64
  %114 = fsub float %112, %113
  %115 = fsub float %64, %114
  %116 = fsub float %105, %113
  %117 = fadd float %116, %115
  %118 = fadd float %112, %111
  %119 = fadd float %106, %118
  %120 = fsub float %119, %106
  %121 = fsub float %118, %120
  %122 = fadd float %117, %121
  %123 = fadd float %119, %122
  %124 = fsub float %123, %119
  %125 = fsub float %122, %124
  %126 = fmul float %123, 3.000000e+00
  %127 = fneg float %126
  %128 = tail call float @llvm.fma.f32(float %123, float 3.000000e+00, float %127)
  %129 = tail call float @llvm.fma.f32(float %125, float 3.000000e+00, float %128)
  %130 = fadd float %126, %129
  %131 = fsub float %130, %126
  %132 = fsub float %129, %131
  %133 = tail call float @llvm.fabs.f32(float %126) #4
  %134 = fcmp oeq float %133, 0x7FF0000000000000
  %135 = select i1 %134, float %126, float %130
  %136 = tail call float @llvm.fabs.f32(float %135) #4
  %137 = fcmp oeq float %136, 0x7FF0000000000000
  %138 = select i1 %137, float 0.000000e+00, float %132
  %139 = fcmp oeq float %135, 0x40562E4300000000
  %140 = select i1 %139, float 0x3EE0000000000000, float 0.000000e+00
  %141 = fsub float %135, %140
  %142 = fadd float %140, %138
  %143 = fmul float %141, 0x3FF7154760000000
  %144 = tail call float @llvm.rint.f32(float %143)
  %145 = fcmp ogt float %141, 0x40562E4300000000
  %146 = fcmp olt float %141, 0xC059D1DA00000000
  %147 = fneg float %143
  %148 = tail call float @llvm.fma.f32(float %141, float 0x3FF7154760000000, float %147)
  %149 = tail call float @llvm.fma.f32(float %141, float 0x3E54AE0BE0000000, float %148)
  %150 = fsub float %143, %144
  %151 = fadd float %149, %150
  %152 = tail call float @llvm.exp2.f32(float %151)
  %153 = fptosi float %144 to i32
  %154 = tail call float @llvm.amdgcn.ldexp.f32(float %152, i32 %153)
  %155 = select i1 %146, float 0.000000e+00, float %154
  %156 = select i1 %145, float 0x7FF0000000000000, float %155
  %157 = tail call float @llvm.fma.f32(float %156, float %142, float %156)
  %158 = tail call float @llvm.fabs.f32(float %156) #4
  %159 = fcmp oeq float %158, 0x7FF0000000000000
  %160 = select i1 %159, float %156, float %157
  %161 = fcmp olt float %5, 0.000000e+00
  %162 = select i1 %161, float -0.000000e+00, float 0.000000e+00
  %163 = tail call float @llvm.copysign.f32(float %160, float %162)
  %164 = fcmp oeq float %18, 0x7FF0000000000000
  %165 = fcmp oeq float %5, 0.000000e+00
  %166 = or i1 %165, %164
  %167 = select i1 %165, float 0.000000e+00, float 0x7FF0000000000000
  %168 = tail call float @llvm.copysign.f32(float %167, float %5)
  %169 = select i1 %166, float %168, float %163
  %170 = fcmp uno float %5, 0.000000e+00
  %171 = select i1 %170, float 0x7FF8000000000000, float %169
  %172 = fcmp oeq float %5, 1.000000e+00
  %173 = select i1 %172, float 1.000000e+00, float %171
  %174 = fpext float %8 to double
  %175 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4
  %176 = mul nsw i32 %4, 11
  %177 = icmp slt i32 %175, %176
  %178 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()
  %179 = getelementptr i8, i8 addrspace(4)* %178, i64 4
  %180 = bitcast i8 addrspace(4)* %179 to i16 addrspace(4)*
  %181 = add nsw i32 %4, 1
  %182 = icmp sgt i32 %175, %4
  %183 = getelementptr inbounds i8, i8 addrspace(4)* %178, i64 12
  %184 = bitcast i8 addrspace(4)* %183 to i32 addrspace(4)*
  %185 = load i32, i32 addrspace(4)* %184, align 4, !tbaa !5
  %186 = load i16, i16 addrspace(4)* %180, align 4, !range !14, !invariant.load !15
  %187 = zext i16 %186 to i32
  %188 = udiv i32 %185, %187
  %189 = mul i32 %188, %187
  %190 = icmp ugt i32 %185, %189
  %191 = zext i1 %190 to i32
  br label %192

192:                                              ; preds = %14, %458
  %193 = phi i32 [ %10, %14 ], [ %460, %458 ]
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds float, float addrspace(1)* %0, i64 %194
  %196 = load float, float addrspace(1)* %195, align 4, !tbaa !16
  %197 = fpext float %196 to double
  %198 = fmul contract double %197, 2.500000e-01
  %199 = fdiv contract double %198, 0x400921FB54442EEA
  %200 = fptrunc double %199 to float
  store float %200, float addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4q_WK, align 4, !tbaa !16
  %201 = fmul contract float %200, 0xC021256080000000
  %202 = fmul contract float %201, %200
  %203 = fmul contract float %202, %6
  %204 = fmul contract float %203, %6
  %205 = fpext float %204 to double
  %206 = fmul contract double %17, %205
  %207 = fmul contract double %206, 2.500000e-01
  %208 = fdiv contract double %207, 0x400921FB54442EEA
  %209 = fptrunc double %208 to float
  %210 = fmul float %209, 0x3FF7154760000000
  %211 = tail call float @llvm.rint.f32(float %210)
  %212 = fcmp ogt float %209, 0x40562E4300000000
  %213 = fcmp olt float %209, 0xC059D1DA00000000
  %214 = fneg float %210
  %215 = tail call float @llvm.fma.f32(float %209, float 0x3FF7154760000000, float %214)
  %216 = tail call float @llvm.fma.f32(float %209, float 0x3E54AE0BE0000000, float %215)
  %217 = fsub float %210, %211
  %218 = fadd float %216, %217
  %219 = tail call float @llvm.exp2.f32(float %218)
  %220 = fptosi float %211 to i32
  %221 = tail call float @llvm.amdgcn.ldexp.f32(float %219, i32 %220)
  %222 = select i1 %213, float 0.000000e+00, float %221
  %223 = select i1 %212, float 0x7FF0000000000000, float %222
  %224 = fmul contract float %173, %223
  %225 = fpext float %224 to double
  %226 = fmul contract double %225, 0x400921FB54442EEA
  %227 = fmul contract double %226, 4.000000e+00
  %228 = fdiv contract double %227, 3.000000e+00
  %229 = fmul contract double %228, %174
  %230 = fptrunc double %229 to float
  store float %230, float addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE12C1_PI_43_rho, align 4, !tbaa !16
  br i1 %177, label %231, label %234

231:                                              ; preds = %192
  %232 = load i16, i16 addrspace(4)* %180, align 4, !range !14, !invariant.load !15
  %233 = zext i16 %232 to i32
  br label %450

234:                                              ; preds = %450, %192
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  br i1 %182, label %458, label %235

235:                                              ; preds = %234
  %236 = load float, float addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE12C1_PI_43_rho, align 4
  %237 = load float, float addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4q_WK, align 4
  %238 = fpext float %237 to double
  %239 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 38), align 8
  %240 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 5), align 4
  %241 = fpext float %240 to double
  %242 = fmul contract double %241, 2.000000e+00
  %243 = fpext float %239 to double
  %244 = fadd contract double %242, %243
  %245 = fptrunc double %244 to float
  %246 = fpext float %245 to double
  %247 = mul nsw i32 %193, %181
  %248 = load i16, i16 addrspace(4)* %180, align 4, !range !14, !invariant.load !15
  %249 = zext i16 %248 to i32
  %250 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 33), align 4
  %251 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 39), align 4
  %252 = fneg contract float %251
  %253 = fmul contract float %237, %252
  %254 = fmul contract float %237, %253
  %255 = fmul float %254, 0x3FF7154760000000
  %256 = tail call float @llvm.rint.f32(float %255)
  %257 = fcmp ogt float %254, 0x40562E4300000000
  %258 = fcmp olt float %254, 0xC059D1DA00000000
  %259 = fneg float %255
  %260 = tail call float @llvm.fma.f32(float %254, float 0x3FF7154760000000, float %259)
  %261 = tail call float @llvm.fma.f32(float %254, float 0x3E54AE0BE0000000, float %260)
  %262 = fsub float %255, %256
  %263 = fadd float %261, %262
  %264 = tail call float @llvm.exp2.f32(float %263)
  %265 = fptosi float %256 to i32
  %266 = tail call float @llvm.amdgcn.ldexp.f32(float %264, i32 %265)
  %267 = select i1 %258, float 0.000000e+00, float %266
  %268 = select i1 %257, float 0x7FF0000000000000, float %267
  %269 = fmul contract float %250, %268
  %270 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 0), align 16
  %271 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 6), align 8
  %272 = fneg contract float %271
  %273 = fmul contract float %237, %272
  %274 = fmul contract float %237, %273
  %275 = fmul float %274, 0x3FF7154760000000
  %276 = tail call float @llvm.rint.f32(float %275)
  %277 = fcmp ogt float %274, 0x40562E4300000000
  %278 = fcmp olt float %274, 0xC059D1DA00000000
  %279 = fneg float %275
  %280 = tail call float @llvm.fma.f32(float %274, float 0x3FF7154760000000, float %279)
  %281 = tail call float @llvm.fma.f32(float %274, float 0x3E54AE0BE0000000, float %280)
  %282 = fsub float %275, %276
  %283 = fadd float %281, %282
  %284 = tail call float @llvm.exp2.f32(float %283)
  %285 = fptosi float %276 to i32
  %286 = tail call float @llvm.amdgcn.ldexp.f32(float %284, i32 %285)
  %287 = select i1 %278, float 0.000000e+00, float %286
  %288 = select i1 %277, float 0x7FF0000000000000, float %287
  %289 = fmul contract float %270, %288
  %290 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 34), align 8
  %291 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 40), align 16
  %292 = fneg contract float %291
  %293 = fmul contract float %237, %292
  %294 = fmul contract float %237, %293
  %295 = fmul float %294, 0x3FF7154760000000
  %296 = tail call float @llvm.rint.f32(float %295)
  %297 = fcmp ogt float %294, 0x40562E4300000000
  %298 = fcmp olt float %294, 0xC059D1DA00000000
  %299 = fneg float %295
  %300 = tail call float @llvm.fma.f32(float %294, float 0x3FF7154760000000, float %299)
  %301 = tail call float @llvm.fma.f32(float %294, float 0x3E54AE0BE0000000, float %300)
  %302 = fsub float %295, %296
  %303 = fadd float %301, %302
  %304 = tail call float @llvm.exp2.f32(float %303)
  %305 = fptosi float %296 to i32
  %306 = tail call float @llvm.amdgcn.ldexp.f32(float %304, i32 %305)
  %307 = select i1 %298, float 0.000000e+00, float %306
  %308 = select i1 %297, float 0x7FF0000000000000, float %307
  %309 = fmul contract float %290, %308
  %310 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 1), align 4
  %311 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 7), align 4
  %312 = fneg contract float %311
  %313 = fmul contract float %237, %312
  %314 = fmul contract float %237, %313
  %315 = fmul float %314, 0x3FF7154760000000
  %316 = tail call float @llvm.rint.f32(float %315)
  %317 = fcmp ogt float %314, 0x40562E4300000000
  %318 = fcmp olt float %314, 0xC059D1DA00000000
  %319 = fneg float %315
  %320 = tail call float @llvm.fma.f32(float %314, float 0x3FF7154760000000, float %319)
  %321 = tail call float @llvm.fma.f32(float %314, float 0x3E54AE0BE0000000, float %320)
  %322 = fsub float %315, %316
  %323 = fadd float %321, %322
  %324 = tail call float @llvm.exp2.f32(float %323)
  %325 = fptosi float %316 to i32
  %326 = tail call float @llvm.amdgcn.ldexp.f32(float %324, i32 %325)
  %327 = select i1 %318, float 0.000000e+00, float %326
  %328 = select i1 %317, float 0x7FF0000000000000, float %327
  %329 = fmul contract float %310, %328
  %330 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 35), align 4
  %331 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 41), align 4
  %332 = fneg contract float %331
  %333 = fmul contract float %237, %332
  %334 = fmul contract float %237, %333
  %335 = fmul float %334, 0x3FF7154760000000
  %336 = tail call float @llvm.rint.f32(float %335)
  %337 = fcmp ogt float %334, 0x40562E4300000000
  %338 = fcmp olt float %334, 0xC059D1DA00000000
  %339 = fneg float %335
  %340 = tail call float @llvm.fma.f32(float %334, float 0x3FF7154760000000, float %339)
  %341 = tail call float @llvm.fma.f32(float %334, float 0x3E54AE0BE0000000, float %340)
  %342 = fsub float %335, %336
  %343 = fadd float %341, %342
  %344 = tail call float @llvm.exp2.f32(float %343)
  %345 = fptosi float %336 to i32
  %346 = tail call float @llvm.amdgcn.ldexp.f32(float %344, i32 %345)
  %347 = select i1 %338, float 0.000000e+00, float %346
  %348 = select i1 %337, float 0x7FF0000000000000, float %347
  %349 = fmul contract float %330, %348
  %350 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 2), align 8
  %351 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 8), align 16
  %352 = fneg contract float %351
  %353 = fmul contract float %237, %352
  %354 = fmul contract float %237, %353
  %355 = fmul float %354, 0x3FF7154760000000
  %356 = tail call float @llvm.rint.f32(float %355)
  %357 = fcmp ogt float %354, 0x40562E4300000000
  %358 = fcmp olt float %354, 0xC059D1DA00000000
  %359 = fneg float %355
  %360 = tail call float @llvm.fma.f32(float %354, float 0x3FF7154760000000, float %359)
  %361 = tail call float @llvm.fma.f32(float %354, float 0x3E54AE0BE0000000, float %360)
  %362 = fsub float %355, %356
  %363 = fadd float %361, %362
  %364 = tail call float @llvm.exp2.f32(float %363)
  %365 = fptosi float %356 to i32
  %366 = tail call float @llvm.amdgcn.ldexp.f32(float %364, i32 %365)
  %367 = select i1 %358, float 0.000000e+00, float %366
  %368 = select i1 %357, float 0x7FF0000000000000, float %367
  %369 = fmul contract float %350, %368
  %370 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 36), align 16
  %371 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 42), align 8
  %372 = fneg contract float %371
  %373 = fmul contract float %237, %372
  %374 = fmul contract float %237, %373
  %375 = fmul float %374, 0x3FF7154760000000
  %376 = tail call float @llvm.rint.f32(float %375)
  %377 = fcmp ogt float %374, 0x40562E4300000000
  %378 = fcmp olt float %374, 0xC059D1DA00000000
  %379 = fneg float %375
  %380 = tail call float @llvm.fma.f32(float %374, float 0x3FF7154760000000, float %379)
  %381 = tail call float @llvm.fma.f32(float %374, float 0x3E54AE0BE0000000, float %380)
  %382 = fsub float %375, %376
  %383 = fadd float %381, %382
  %384 = tail call float @llvm.exp2.f32(float %383)
  %385 = fptosi float %376 to i32
  %386 = tail call float @llvm.amdgcn.ldexp.f32(float %384, i32 %385)
  %387 = select i1 %378, float 0.000000e+00, float %386
  %388 = select i1 %377, float 0x7FF0000000000000, float %387
  %389 = fmul contract float %370, %388
  %390 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 3), align 4
  %391 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 9), align 4
  %392 = fneg contract float %391
  %393 = fmul contract float %237, %392
  %394 = fmul contract float %237, %393
  %395 = fmul float %394, 0x3FF7154760000000
  %396 = tail call float @llvm.rint.f32(float %395)
  %397 = fcmp ogt float %394, 0x40562E4300000000
  %398 = fcmp olt float %394, 0xC059D1DA00000000
  %399 = fneg float %395
  %400 = tail call float @llvm.fma.f32(float %394, float 0x3FF7154760000000, float %399)
  %401 = tail call float @llvm.fma.f32(float %394, float 0x3E54AE0BE0000000, float %400)
  %402 = fsub float %395, %396
  %403 = fadd float %401, %402
  %404 = tail call float @llvm.exp2.f32(float %403)
  %405 = fptosi float %396 to i32
  %406 = tail call float @llvm.amdgcn.ldexp.f32(float %404, i32 %405)
  %407 = select i1 %398, float 0.000000e+00, float %406
  %408 = select i1 %397, float 0x7FF0000000000000, float %407
  %409 = fmul contract float %390, %408
  %410 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 37), align 4
  %411 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 43), align 4
  %412 = fneg contract float %411
  %413 = fmul contract float %237, %412
  %414 = fmul contract float %237, %413
  %415 = fmul float %414, 0x3FF7154760000000
  %416 = tail call float @llvm.rint.f32(float %415)
  %417 = fcmp ogt float %414, 0x40562E4300000000
  %418 = fcmp olt float %414, 0xC059D1DA00000000
  %419 = fneg float %415
  %420 = tail call float @llvm.fma.f32(float %414, float 0x3FF7154760000000, float %419)
  %421 = tail call float @llvm.fma.f32(float %414, float 0x3E54AE0BE0000000, float %420)
  %422 = fsub float %415, %416
  %423 = fadd float %421, %422
  %424 = tail call float @llvm.exp2.f32(float %423)
  %425 = fptosi float %416 to i32
  %426 = tail call float @llvm.amdgcn.ldexp.f32(float %424, i32 %425)
  %427 = select i1 %418, float 0.000000e+00, float %426
  %428 = select i1 %417, float 0x7FF0000000000000, float %427
  %429 = fmul contract float %410, %428
  %430 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 4), align 16
  %431 = load float, float addrspace(3)* getelementptr inbounds ([66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 10), align 8
  %432 = fneg contract float %431
  %433 = fmul contract float %237, %432
  %434 = fmul contract float %237, %433
  %435 = fmul float %434, 0x3FF7154760000000
  %436 = tail call float @llvm.rint.f32(float %435)
  %437 = fcmp ogt float %434, 0x40562E4300000000
  %438 = fcmp olt float %434, 0xC059D1DA00000000
  %439 = fneg float %435
  %440 = tail call float @llvm.fma.f32(float %434, float 0x3FF7154760000000, float %439)
  %441 = tail call float @llvm.fma.f32(float %434, float 0x3E54AE0BE0000000, float %440)
  %442 = fsub float %435, %436
  %443 = fadd float %441, %442
  %444 = tail call float @llvm.exp2.f32(float %443)
  %445 = fptosi float %436 to i32
  %446 = tail call float @llvm.amdgcn.ldexp.f32(float %444, i32 %445)
  %447 = select i1 %438, float 0.000000e+00, float %446
  %448 = select i1 %437, float 0x7FF0000000000000, float %447
  %449 = fmul contract float %430, %448
  br label %462

450:                                              ; preds = %231, %450
  %451 = phi i32 [ %175, %231 ], [ %456, %450 ]
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds float, float addrspace(1)* %1, i64 %452
  %454 = load float, float addrspace(1)* %453, align 4, !tbaa !16
  %455 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %451
  store float %454, float addrspace(3)* %455, align 4, !tbaa !16
  %456 = add i32 %451, %233
  %457 = icmp slt i32 %456, %176
  br i1 %457, label %450, label %234, !llvm.loop !20

458:                                              ; preds = %990, %234
  %459 = add i32 %188, %193
  %460 = add i32 %459, %191
  %461 = icmp slt i32 %460, %3
  br i1 %461, label %192, label %997, !llvm.loop !22

462:                                              ; preds = %235, %990
  %463 = phi i32 [ %175, %235 ], [ %995, %990 ]
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds float, float addrspace(1)* %2, i64 %464
  %466 = load float, float addrspace(1)* %465, align 4, !tbaa !16
  %467 = icmp eq i32 %463, %4
  br i1 %467, label %468, label %672

468:                                              ; preds = %462
  %469 = tail call float @llvm.fabs.f32(float %466)
  %470 = tail call float @llvm.amdgcn.frexp.mant.f32(float %469)
  %471 = fcmp olt float %470, 0x3FE5555560000000
  %472 = zext i1 %471 to i32
  %473 = tail call float @llvm.amdgcn.ldexp.f32(float %470, i32 %472)
  %474 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %469)
  %475 = sub nsw i32 %474, %472
  %476 = fadd float %473, -1.000000e+00
  %477 = fadd float %473, 1.000000e+00
  %478 = fadd float %477, -1.000000e+00
  %479 = fsub float %473, %478
  %480 = tail call float @llvm.amdgcn.rcp.f32(float %477)
  %481 = fmul float %476, %480
  %482 = fmul float %477, %481
  %483 = fneg float %482
  %484 = tail call float @llvm.fma.f32(float %481, float %477, float %483)
  %485 = tail call float @llvm.fma.f32(float %481, float %479, float %484)
  %486 = fadd float %482, %485
  %487 = fsub float %486, %482
  %488 = fsub float %485, %487
  %489 = fsub float %476, %486
  %490 = fsub float %476, %489
  %491 = fsub float %490, %486
  %492 = fsub float %491, %488
  %493 = fadd float %489, %492
  %494 = fmul float %480, %493
  %495 = fadd float %481, %494
  %496 = fsub float %495, %481
  %497 = fsub float %494, %496
  %498 = fmul float %495, %495
  %499 = fneg float %498
  %500 = tail call float @llvm.fma.f32(float %495, float %495, float %499)
  %501 = fmul float %497, 2.000000e+00
  %502 = tail call float @llvm.fma.f32(float %495, float %501, float %500)
  %503 = fadd float %498, %502
  %504 = fsub float %503, %498
  %505 = fsub float %502, %504
  %506 = tail call float @llvm.fmuladd.f32(float %503, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %507 = tail call float @llvm.fmuladd.f32(float %503, float %506, float 0x3FD999BDE0000000)
  %508 = sitofp i32 %475 to float
  %509 = fmul float %508, 0x3FE62E4300000000
  %510 = fneg float %509
  %511 = tail call float @llvm.fma.f32(float %508, float 0x3FE62E4300000000, float %510)
  %512 = tail call float @llvm.fma.f32(float %508, float 0xBE205C6100000000, float %511)
  %513 = fadd float %509, %512
  %514 = fsub float %513, %509
  %515 = fsub float %512, %514
  %516 = tail call float @llvm.amdgcn.ldexp.f32(float %495, i32 1)
  %517 = fmul float %495, %503
  %518 = fneg float %517
  %519 = tail call float @llvm.fma.f32(float %503, float %495, float %518)
  %520 = tail call float @llvm.fma.f32(float %503, float %497, float %519)
  %521 = tail call float @llvm.fma.f32(float %505, float %495, float %520)
  %522 = fadd float %517, %521
  %523 = fsub float %522, %517
  %524 = fsub float %521, %523
  %525 = fmul float %503, %507
  %526 = fneg float %525
  %527 = tail call float @llvm.fma.f32(float %503, float %507, float %526)
  %528 = tail call float @llvm.fma.f32(float %505, float %507, float %527)
  %529 = fadd float %525, %528
  %530 = fsub float %529, %525
  %531 = fsub float %528, %530
  %532 = fadd float %529, 0x3FE5555540000000
  %533 = fadd float %532, 0xBFE5555540000000
  %534 = fsub float %529, %533
  %535 = fadd float %531, 0x3E2E720200000000
  %536 = fadd float %535, %534
  %537 = fadd float %532, %536
  %538 = fsub float %537, %532
  %539 = fsub float %536, %538
  %540 = fmul float %522, %537
  %541 = fneg float %540
  %542 = tail call float @llvm.fma.f32(float %522, float %537, float %541)
  %543 = tail call float @llvm.fma.f32(float %522, float %539, float %542)
  %544 = tail call float @llvm.fma.f32(float %524, float %537, float %543)
  %545 = tail call float @llvm.amdgcn.ldexp.f32(float %497, i32 1)
  %546 = fadd float %540, %544
  %547 = fsub float %546, %540
  %548 = fsub float %544, %547
  %549 = fadd float %516, %546
  %550 = fsub float %549, %516
  %551 = fsub float %546, %550
  %552 = fadd float %545, %548
  %553 = fadd float %552, %551
  %554 = fadd float %549, %553
  %555 = fsub float %554, %549
  %556 = fsub float %553, %555
  %557 = fadd float %513, %554
  %558 = fsub float %557, %513
  %559 = fsub float %557, %558
  %560 = fsub float %513, %559
  %561 = fsub float %554, %558
  %562 = fadd float %561, %560
  %563 = fadd float %515, %556
  %564 = fsub float %563, %515
  %565 = fsub float %563, %564
  %566 = fsub float %515, %565
  %567 = fsub float %556, %564
  %568 = fadd float %567, %566
  %569 = fadd float %563, %562
  %570 = fadd float %557, %569
  %571 = fsub float %570, %557
  %572 = fsub float %569, %571
  %573 = fadd float %568, %572
  %574 = fadd float %570, %573
  %575 = fsub float %574, %570
  %576 = fsub float %573, %575
  %577 = fmul float %574, 3.000000e+00
  %578 = fneg float %577
  %579 = tail call float @llvm.fma.f32(float %574, float 3.000000e+00, float %578)
  %580 = tail call float @llvm.fma.f32(float %576, float 3.000000e+00, float %579)
  %581 = fadd float %577, %580
  %582 = fsub float %581, %577
  %583 = fsub float %580, %582
  %584 = tail call float @llvm.fabs.f32(float %577) #4
  %585 = fcmp oeq float %584, 0x7FF0000000000000
  %586 = select i1 %585, float %577, float %581
  %587 = tail call float @llvm.fabs.f32(float %586) #4
  %588 = fcmp oeq float %587, 0x7FF0000000000000
  %589 = select i1 %588, float 0.000000e+00, float %583
  %590 = fcmp oeq float %586, 0x40562E4300000000
  %591 = select i1 %590, float 0x3EE0000000000000, float 0.000000e+00
  %592 = fsub float %586, %591
  %593 = fadd float %591, %589
  %594 = fmul float %592, 0x3FF7154760000000
  %595 = tail call float @llvm.rint.f32(float %594)
  %596 = fcmp ogt float %592, 0x40562E4300000000
  %597 = fcmp olt float %592, 0xC059D1DA00000000
  %598 = fneg float %594
  %599 = tail call float @llvm.fma.f32(float %592, float 0x3FF7154760000000, float %598)
  %600 = tail call float @llvm.fma.f32(float %592, float 0x3E54AE0BE0000000, float %599)
  %601 = fsub float %594, %595
  %602 = fadd float %600, %601
  %603 = tail call float @llvm.exp2.f32(float %602)
  %604 = fptosi float %595 to i32
  %605 = tail call float @llvm.amdgcn.ldexp.f32(float %603, i32 %604)
  %606 = select i1 %597, float 0.000000e+00, float %605
  %607 = select i1 %596, float 0x7FF0000000000000, float %606
  %608 = tail call float @llvm.fma.f32(float %607, float %593, float %607)
  %609 = tail call float @llvm.fabs.f32(float %607) #4
  %610 = fcmp oeq float %609, 0x7FF0000000000000
  %611 = select i1 %610, float %607, float %608
  %612 = fcmp olt float %466, 0.000000e+00
  %613 = select i1 %612, float -0.000000e+00, float 0.000000e+00
  %614 = tail call float @llvm.copysign.f32(float %611, float %613)
  %615 = fcmp oeq float %469, 0x7FF0000000000000
  %616 = fcmp oeq float %466, 0.000000e+00
  %617 = or i1 %616, %615
  %618 = select i1 %616, float 0.000000e+00, float 0x7FF0000000000000
  %619 = tail call float @llvm.copysign.f32(float %618, float %466)
  %620 = select i1 %617, float %619, float %614
  %621 = fcmp uno float %466, 0.000000e+00
  %622 = select i1 %621, float 0x7FF8000000000000, float %620
  %623 = fcmp oeq float %466, 1.000000e+00
  %624 = select i1 %623, float 1.000000e+00, float %622
  %625 = fmul contract float %624, %236
  %626 = fpext float %625 to double
  %627 = fpext float %466 to double
  %628 = fmul contract double %627, 0xC00921FB54442EEA
  %629 = fmul contract double %628, %627
  %630 = fmul contract double %629, %238
  %631 = fmul contract double %630, %238
  %632 = fmul double %631, 0x3FF71547652B82FE
  %633 = tail call double @llvm.rint.f64(double %632)
  %634 = fneg double %633
  %635 = tail call double @llvm.fma.f64(double %634, double 0x3FE62E42FEFA39EF, double %631)
  %636 = tail call double @llvm.fma.f64(double %634, double 0x3C7ABC9E3B39803F, double %635)
  %637 = tail call double @llvm.fma.f64(double %636, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %638 = tail call double @llvm.fma.f64(double %636, double %637, double 0x3EC71DEE623FDE64)
  %639 = tail call double @llvm.fma.f64(double %636, double %638, double 0x3EFA01997C89E6B0)
  %640 = tail call double @llvm.fma.f64(double %636, double %639, double 0x3F2A01A014761F6E)
  %641 = tail call double @llvm.fma.f64(double %636, double %640, double 0x3F56C16C1852B7B0)
  %642 = tail call double @llvm.fma.f64(double %636, double %641, double 0x3F81111111122322)
  %643 = tail call double @llvm.fma.f64(double %636, double %642, double 0x3FA55555555502A1)
  %644 = tail call double @llvm.fma.f64(double %636, double %643, double 0x3FC5555555555511)
  %645 = tail call double @llvm.fma.f64(double %636, double %644, double 0x3FE000000000000B)
  %646 = tail call double @llvm.fma.f64(double %636, double %645, double 1.000000e+00)
  %647 = tail call double @llvm.fma.f64(double %636, double %646, double 1.000000e+00)
  %648 = fptosi double %633 to i32
  %649 = tail call double @llvm.amdgcn.ldexp.f64(double %647, i32 %648)
  %650 = fcmp ogt double %631, 1.024000e+03
  %651 = select i1 %650, double 0x7FF0000000000000, double %649
  %652 = fcmp olt double %631, -1.075000e+03
  %653 = select i1 %652, double 0.000000e+00, double %651
  %654 = fmul contract double %653, %626
  %655 = fsub contract double %246, %654
  %656 = fptrunc double %655 to float
  %657 = fadd contract float %269, %656
  %658 = fadd contract float %657, %289
  %659 = fadd contract float %289, %658
  %660 = fadd contract float %659, %309
  %661 = fadd contract float %660, %329
  %662 = fadd contract float %329, %661
  %663 = fadd contract float %662, %349
  %664 = fadd contract float %663, %369
  %665 = fadd contract float %369, %664
  %666 = fadd contract float %665, %389
  %667 = fadd contract float %666, %409
  %668 = fadd contract float %409, %667
  %669 = fadd contract float %668, %429
  %670 = fadd contract float %669, %449
  %671 = fadd contract float %449, %670
  br label %990

672:                                              ; preds = %462
  %673 = mul nsw i32 %463, 11
  %674 = add nsw i32 %673, 5
  %675 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %674
  %676 = load float, float addrspace(3)* %675, align 4, !tbaa !16
  %677 = tail call float @llvm.fabs.f32(float %466)
  %678 = tail call float @llvm.amdgcn.frexp.mant.f32(float %677)
  %679 = fcmp olt float %678, 0x3FE5555560000000
  %680 = zext i1 %679 to i32
  %681 = tail call float @llvm.amdgcn.ldexp.f32(float %678, i32 %680)
  %682 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %677)
  %683 = sub nsw i32 %682, %680
  %684 = fadd float %681, -1.000000e+00
  %685 = fadd float %681, 1.000000e+00
  %686 = fadd float %685, -1.000000e+00
  %687 = fsub float %681, %686
  %688 = tail call float @llvm.amdgcn.rcp.f32(float %685)
  %689 = fmul float %684, %688
  %690 = fmul float %685, %689
  %691 = fneg float %690
  %692 = tail call float @llvm.fma.f32(float %689, float %685, float %691)
  %693 = tail call float @llvm.fma.f32(float %689, float %687, float %692)
  %694 = fadd float %690, %693
  %695 = fsub float %694, %690
  %696 = fsub float %693, %695
  %697 = fsub float %684, %694
  %698 = fsub float %684, %697
  %699 = fsub float %698, %694
  %700 = fsub float %699, %696
  %701 = fadd float %697, %700
  %702 = fmul float %688, %701
  %703 = fadd float %689, %702
  %704 = fsub float %703, %689
  %705 = fsub float %702, %704
  %706 = fmul float %703, %703
  %707 = fneg float %706
  %708 = tail call float @llvm.fma.f32(float %703, float %703, float %707)
  %709 = fmul float %705, 2.000000e+00
  %710 = tail call float @llvm.fma.f32(float %703, float %709, float %708)
  %711 = fadd float %706, %710
  %712 = fsub float %711, %706
  %713 = fsub float %710, %712
  %714 = tail call float @llvm.fmuladd.f32(float %711, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %715 = tail call float @llvm.fmuladd.f32(float %711, float %714, float 0x3FD999BDE0000000)
  %716 = sitofp i32 %683 to float
  %717 = fmul float %716, 0x3FE62E4300000000
  %718 = fneg float %717
  %719 = tail call float @llvm.fma.f32(float %716, float 0x3FE62E4300000000, float %718)
  %720 = tail call float @llvm.fma.f32(float %716, float 0xBE205C6100000000, float %719)
  %721 = fadd float %717, %720
  %722 = fsub float %721, %717
  %723 = fsub float %720, %722
  %724 = tail call float @llvm.amdgcn.ldexp.f32(float %703, i32 1)
  %725 = fmul float %703, %711
  %726 = fneg float %725
  %727 = tail call float @llvm.fma.f32(float %711, float %703, float %726)
  %728 = tail call float @llvm.fma.f32(float %711, float %705, float %727)
  %729 = tail call float @llvm.fma.f32(float %713, float %703, float %728)
  %730 = fadd float %725, %729
  %731 = fsub float %730, %725
  %732 = fsub float %729, %731
  %733 = fmul float %711, %715
  %734 = fneg float %733
  %735 = tail call float @llvm.fma.f32(float %711, float %715, float %734)
  %736 = tail call float @llvm.fma.f32(float %713, float %715, float %735)
  %737 = fadd float %733, %736
  %738 = fsub float %737, %733
  %739 = fsub float %736, %738
  %740 = fadd float %737, 0x3FE5555540000000
  %741 = fadd float %740, 0xBFE5555540000000
  %742 = fsub float %737, %741
  %743 = fadd float %739, 0x3E2E720200000000
  %744 = fadd float %743, %742
  %745 = fadd float %740, %744
  %746 = fsub float %745, %740
  %747 = fsub float %744, %746
  %748 = fmul float %730, %745
  %749 = fneg float %748
  %750 = tail call float @llvm.fma.f32(float %730, float %745, float %749)
  %751 = tail call float @llvm.fma.f32(float %730, float %747, float %750)
  %752 = tail call float @llvm.fma.f32(float %732, float %745, float %751)
  %753 = tail call float @llvm.amdgcn.ldexp.f32(float %705, i32 1)
  %754 = fadd float %748, %752
  %755 = fsub float %754, %748
  %756 = fsub float %752, %755
  %757 = fadd float %724, %754
  %758 = fsub float %757, %724
  %759 = fsub float %754, %758
  %760 = fadd float %753, %756
  %761 = fadd float %760, %759
  %762 = fadd float %757, %761
  %763 = fsub float %762, %757
  %764 = fsub float %761, %763
  %765 = fadd float %721, %762
  %766 = fsub float %765, %721
  %767 = fsub float %765, %766
  %768 = fsub float %721, %767
  %769 = fsub float %762, %766
  %770 = fadd float %769, %768
  %771 = fadd float %723, %764
  %772 = fsub float %771, %723
  %773 = fsub float %771, %772
  %774 = fsub float %723, %773
  %775 = fsub float %764, %772
  %776 = fadd float %775, %774
  %777 = fadd float %771, %770
  %778 = fadd float %765, %777
  %779 = fsub float %778, %765
  %780 = fsub float %777, %779
  %781 = fadd float %776, %780
  %782 = fadd float %778, %781
  %783 = fsub float %782, %778
  %784 = fsub float %781, %783
  %785 = fmul float %782, 3.000000e+00
  %786 = fneg float %785
  %787 = tail call float @llvm.fma.f32(float %782, float 3.000000e+00, float %786)
  %788 = tail call float @llvm.fma.f32(float %784, float 3.000000e+00, float %787)
  %789 = fadd float %785, %788
  %790 = fsub float %789, %785
  %791 = fsub float %788, %790
  %792 = tail call float @llvm.fabs.f32(float %785) #4
  %793 = fcmp oeq float %792, 0x7FF0000000000000
  %794 = select i1 %793, float %785, float %789
  %795 = tail call float @llvm.fabs.f32(float %794) #4
  %796 = fcmp oeq float %795, 0x7FF0000000000000
  %797 = select i1 %796, float 0.000000e+00, float %791
  %798 = fcmp oeq float %794, 0x40562E4300000000
  %799 = select i1 %798, float 0x3EE0000000000000, float 0.000000e+00
  %800 = fsub float %794, %799
  %801 = fadd float %799, %797
  %802 = fmul float %800, 0x3FF7154760000000
  %803 = tail call float @llvm.rint.f32(float %802)
  %804 = fcmp ogt float %800, 0x40562E4300000000
  %805 = fcmp olt float %800, 0xC059D1DA00000000
  %806 = fneg float %802
  %807 = tail call float @llvm.fma.f32(float %800, float 0x3FF7154760000000, float %806)
  %808 = tail call float @llvm.fma.f32(float %800, float 0x3E54AE0BE0000000, float %807)
  %809 = fsub float %802, %803
  %810 = fadd float %808, %809
  %811 = tail call float @llvm.exp2.f32(float %810)
  %812 = fptosi float %803 to i32
  %813 = tail call float @llvm.amdgcn.ldexp.f32(float %811, i32 %812)
  %814 = select i1 %805, float 0.000000e+00, float %813
  %815 = select i1 %804, float 0x7FF0000000000000, float %814
  %816 = tail call float @llvm.fma.f32(float %815, float %801, float %815)
  %817 = tail call float @llvm.fabs.f32(float %815) #4
  %818 = fcmp oeq float %817, 0x7FF0000000000000
  %819 = select i1 %818, float %815, float %816
  %820 = fcmp olt float %466, 0.000000e+00
  %821 = select i1 %820, float -0.000000e+00, float 0.000000e+00
  %822 = tail call float @llvm.copysign.f32(float %819, float %821)
  %823 = fcmp oeq float %677, 0x7FF0000000000000
  %824 = fcmp oeq float %466, 0.000000e+00
  %825 = or i1 %824, %823
  %826 = select i1 %824, float 0.000000e+00, float 0x7FF0000000000000
  %827 = tail call float @llvm.copysign.f32(float %826, float %466)
  %828 = select i1 %825, float %827, float %822
  %829 = fcmp uno float %466, 0.000000e+00
  %830 = select i1 %829, float 0x7FF8000000000000, float %828
  %831 = fcmp oeq float %466, 1.000000e+00
  %832 = select i1 %831, float 1.000000e+00, float %830
  %833 = fmul contract float %832, %236
  %834 = fpext float %833 to double
  %835 = fpext float %466 to double
  %836 = fmul contract double %835, 0xC00921FB54442EEA
  %837 = fmul contract double %836, %835
  %838 = fmul contract double %837, %238
  %839 = fmul contract double %838, %238
  %840 = fmul double %839, 0x3FF71547652B82FE
  %841 = tail call double @llvm.rint.f64(double %840)
  %842 = fneg double %841
  %843 = tail call double @llvm.fma.f64(double %842, double 0x3FE62E42FEFA39EF, double %839)
  %844 = tail call double @llvm.fma.f64(double %842, double 0x3C7ABC9E3B39803F, double %843)
  %845 = tail call double @llvm.fma.f64(double %844, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %846 = tail call double @llvm.fma.f64(double %844, double %845, double 0x3EC71DEE623FDE64)
  %847 = tail call double @llvm.fma.f64(double %844, double %846, double 0x3EFA01997C89E6B0)
  %848 = tail call double @llvm.fma.f64(double %844, double %847, double 0x3F2A01A014761F6E)
  %849 = tail call double @llvm.fma.f64(double %844, double %848, double 0x3F56C16C1852B7B0)
  %850 = tail call double @llvm.fma.f64(double %844, double %849, double 0x3F81111111122322)
  %851 = tail call double @llvm.fma.f64(double %844, double %850, double 0x3FA55555555502A1)
  %852 = tail call double @llvm.fma.f64(double %844, double %851, double 0x3FC5555555555511)
  %853 = tail call double @llvm.fma.f64(double %844, double %852, double 0x3FE000000000000B)
  %854 = tail call double @llvm.fma.f64(double %844, double %853, double 1.000000e+00)
  %855 = tail call double @llvm.fma.f64(double %844, double %854, double 1.000000e+00)
  %856 = fptosi double %841 to i32
  %857 = tail call double @llvm.amdgcn.ldexp.f64(double %855, i32 %856)
  %858 = fcmp ogt double %839, 1.024000e+03
  %859 = select i1 %858, double 0x7FF0000000000000, double %857
  %860 = fcmp olt double %839, -1.075000e+03
  %861 = select i1 %860, double 0.000000e+00, double %859
  %862 = fmul contract double %861, %834
  %863 = fpext float %676 to double
  %864 = fsub contract double %863, %862
  %865 = fptrunc double %864 to float
  %866 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %673
  %867 = load float, float addrspace(3)* %866, align 4, !tbaa !16
  %868 = add nsw i32 %673, 6
  %869 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %868
  %870 = load float, float addrspace(3)* %869, align 4, !tbaa !16
  %871 = fneg contract float %870
  %872 = fmul contract float %237, %871
  %873 = fmul contract float %237, %872
  %874 = fmul float %873, 0x3FF7154760000000
  %875 = tail call float @llvm.rint.f32(float %874)
  %876 = fcmp ogt float %873, 0x40562E4300000000
  %877 = fcmp olt float %873, 0xC059D1DA00000000
  %878 = fneg float %874
  %879 = tail call float @llvm.fma.f32(float %873, float 0x3FF7154760000000, float %878)
  %880 = tail call float @llvm.fma.f32(float %873, float 0x3E54AE0BE0000000, float %879)
  %881 = fsub float %874, %875
  %882 = fadd float %880, %881
  %883 = tail call float @llvm.exp2.f32(float %882)
  %884 = fptosi float %875 to i32
  %885 = tail call float @llvm.amdgcn.ldexp.f32(float %883, i32 %884)
  %886 = select i1 %877, float 0.000000e+00, float %885
  %887 = select i1 %876, float 0x7FF0000000000000, float %886
  %888 = fmul contract float %867, %887
  %889 = fadd contract float %888, %865
  %890 = add nsw i32 %673, 1
  %891 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %890
  %892 = load float, float addrspace(3)* %891, align 4, !tbaa !16
  %893 = add nsw i32 %673, 7
  %894 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %893
  %895 = load float, float addrspace(3)* %894, align 4, !tbaa !16
  %896 = fneg contract float %895
  %897 = fmul contract float %237, %896
  %898 = fmul contract float %237, %897
  %899 = fmul float %898, 0x3FF7154760000000
  %900 = tail call float @llvm.rint.f32(float %899)
  %901 = fcmp ogt float %898, 0x40562E4300000000
  %902 = fcmp olt float %898, 0xC059D1DA00000000
  %903 = fneg float %899
  %904 = tail call float @llvm.fma.f32(float %898, float 0x3FF7154760000000, float %903)
  %905 = tail call float @llvm.fma.f32(float %898, float 0x3E54AE0BE0000000, float %904)
  %906 = fsub float %899, %900
  %907 = fadd float %905, %906
  %908 = tail call float @llvm.exp2.f32(float %907)
  %909 = fptosi float %900 to i32
  %910 = tail call float @llvm.amdgcn.ldexp.f32(float %908, i32 %909)
  %911 = select i1 %902, float 0.000000e+00, float %910
  %912 = select i1 %901, float 0x7FF0000000000000, float %911
  %913 = fmul contract float %892, %912
  %914 = fadd contract float %889, %913
  %915 = add nsw i32 %673, 2
  %916 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %915
  %917 = load float, float addrspace(3)* %916, align 4, !tbaa !16
  %918 = add nsw i32 %673, 8
  %919 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %918
  %920 = load float, float addrspace(3)* %919, align 4, !tbaa !16
  %921 = fneg contract float %920
  %922 = fmul contract float %237, %921
  %923 = fmul contract float %237, %922
  %924 = fmul float %923, 0x3FF7154760000000
  %925 = tail call float @llvm.rint.f32(float %924)
  %926 = fcmp ogt float %923, 0x40562E4300000000
  %927 = fcmp olt float %923, 0xC059D1DA00000000
  %928 = fneg float %924
  %929 = tail call float @llvm.fma.f32(float %923, float 0x3FF7154760000000, float %928)
  %930 = tail call float @llvm.fma.f32(float %923, float 0x3E54AE0BE0000000, float %929)
  %931 = fsub float %924, %925
  %932 = fadd float %930, %931
  %933 = tail call float @llvm.exp2.f32(float %932)
  %934 = fptosi float %925 to i32
  %935 = tail call float @llvm.amdgcn.ldexp.f32(float %933, i32 %934)
  %936 = select i1 %927, float 0.000000e+00, float %935
  %937 = select i1 %926, float 0x7FF0000000000000, float %936
  %938 = fmul contract float %917, %937
  %939 = fadd contract float %914, %938
  %940 = add nsw i32 %673, 3
  %941 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %940
  %942 = load float, float addrspace(3)* %941, align 4, !tbaa !16
  %943 = add nsw i32 %673, 9
  %944 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %943
  %945 = load float, float addrspace(3)* %944, align 4, !tbaa !16
  %946 = fneg contract float %945
  %947 = fmul contract float %237, %946
  %948 = fmul contract float %237, %947
  %949 = fmul float %948, 0x3FF7154760000000
  %950 = tail call float @llvm.rint.f32(float %949)
  %951 = fcmp ogt float %948, 0x40562E4300000000
  %952 = fcmp olt float %948, 0xC059D1DA00000000
  %953 = fneg float %949
  %954 = tail call float @llvm.fma.f32(float %948, float 0x3FF7154760000000, float %953)
  %955 = tail call float @llvm.fma.f32(float %948, float 0x3E54AE0BE0000000, float %954)
  %956 = fsub float %949, %950
  %957 = fadd float %955, %956
  %958 = tail call float @llvm.exp2.f32(float %957)
  %959 = fptosi float %950 to i32
  %960 = tail call float @llvm.amdgcn.ldexp.f32(float %958, i32 %959)
  %961 = select i1 %952, float 0.000000e+00, float %960
  %962 = select i1 %951, float 0x7FF0000000000000, float %961
  %963 = fmul contract float %942, %962
  %964 = fadd contract float %939, %963
  %965 = add nsw i32 %673, 4
  %966 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %965
  %967 = load float, float addrspace(3)* %966, align 4, !tbaa !16
  %968 = add nsw i32 %673, 10
  %969 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %968
  %970 = load float, float addrspace(3)* %969, align 4, !tbaa !16
  %971 = fneg contract float %970
  %972 = fmul contract float %237, %971
  %973 = fmul contract float %237, %972
  %974 = fmul float %973, 0x3FF7154760000000
  %975 = tail call float @llvm.rint.f32(float %974)
  %976 = fcmp ogt float %973, 0x40562E4300000000
  %977 = fcmp olt float %973, 0xC059D1DA00000000
  %978 = fneg float %974
  %979 = tail call float @llvm.fma.f32(float %973, float 0x3FF7154760000000, float %978)
  %980 = tail call float @llvm.fma.f32(float %973, float 0x3E54AE0BE0000000, float %979)
  %981 = fsub float %974, %975
  %982 = fadd float %980, %981
  %983 = tail call float @llvm.exp2.f32(float %982)
  %984 = fptosi float %975 to i32
  %985 = tail call float @llvm.amdgcn.ldexp.f32(float %983, i32 %984)
  %986 = select i1 %977, float 0.000000e+00, float %985
  %987 = select i1 %976, float 0x7FF0000000000000, float %986
  %988 = fmul contract float %967, %987
  %989 = fadd contract float %964, %988
  br label %990

990:                                              ; preds = %672, %468
  %991 = phi float [ %989, %672 ], [ %671, %468 ]
  %992 = add nsw i32 %463, %247
  %993 = sext i32 %992 to i64
  %994 = getelementptr inbounds float, float addrspace(1)* %7, i64 %993
  store float %991, float addrspace(1)* %994, align 4, !tbaa !16
  %995 = add i32 %463, %249
  %996 = icmp sgt i32 %995, %4
  br i1 %996, label %458, label %462, !llvm.loop !23

997:                                              ; preds = %458, %9
  ret void
}

; Function Attrs: convergent mustprogress nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.rint.f64(double) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fma.f64(double, double, double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.ldexp.f64(double, i32) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.exp2.f32(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fma.f32(float, float, float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.rint.f32(float) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.amdgcn.ldexp.f32(float, i32) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fmuladd.f32(float, float, float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.copysign.f32(float, float) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.amdgcn.frexp.mant.f32(float) #3

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.frexp.exp.i32.f32(float) #3

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.amdgcn.rcp.f32(float) #3

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr() #3

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #3

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #3

attributes #0 = { convergent mustprogress norecurse nounwind "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{i32 0, i32 1024}
!5 = !{!6, !10, i64 12}
!6 = !{!"hsa_kernel_dispatch_packet_s", !7, i64 0, !7, i64 2, !7, i64 4, !7, i64 6, !7, i64 8, !7, i64 10, !10, i64 12, !10, i64 16, !10, i64 20, !10, i64 24, !10, i64 28, !11, i64 32, !12, i64 40, !11, i64 48, !13, i64 56}
!7 = !{!"short", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!"int", !8, i64 0}
!11 = !{!"long", !8, i64 0}
!12 = !{!"any pointer", !8, i64 0}
!13 = !{!"hsa_signal_s", !11, i64 0}
!14 = !{i16 1, i16 1025}
!15 = !{}
!16 = !{!17, !17, i64 0}
!17 = !{!"float", !18, i64 0}
!18 = !{!"omnipotent char", !19, i64 0}
!19 = !{!"Simple C++ TBAA"}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.mustprogress"}
!22 = distinct !{!22, !21}
!23 = distinct !{!23, !21}
