digraph "CFG for '_Z7FF_calcPfS_S_iiffS_f' function" {
	label="CFG for '_Z7FF_calcPfS_S_iiffS_f' function";

	Node0x5471ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = icmp ult i32 %10, %3\l  %12 = icmp slt i32 %10, %3\l  %13 = and i1 %11, %12\l  br i1 %13, label %14, label %997\l|{<s0>T|<s1>F}}"];
	Node0x5471ae0:s0 -> Node0x5471950;
	Node0x5471ae0:s1 -> Node0x54725d0;
	Node0x5471950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%14:\l14:                                               \l  %15 = fmul contract float %5, %5\l  %16 = fpext float %15 to double\l  %17 = fadd contract double %16, -1.000000e+00\l  %18 = tail call float @llvm.fabs.f32(float %5)\l  %19 = tail call float @llvm.amdgcn.frexp.mant.f32(float %18)\l  %20 = fcmp olt float %19, 0x3FE5555560000000\l  %21 = zext i1 %20 to i32\l  %22 = tail call float @llvm.amdgcn.ldexp.f32(float %19, i32 %21)\l  %23 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %18)\l  %24 = sub nsw i32 %23, %21\l  %25 = fadd float %22, -1.000000e+00\l  %26 = fadd float %22, 1.000000e+00\l  %27 = fadd float %26, -1.000000e+00\l  %28 = fsub float %22, %27\l  %29 = tail call float @llvm.amdgcn.rcp.f32(float %26)\l  %30 = fmul float %25, %29\l  %31 = fmul float %26, %30\l  %32 = fneg float %31\l  %33 = tail call float @llvm.fma.f32(float %30, float %26, float %32)\l  %34 = tail call float @llvm.fma.f32(float %30, float %28, float %33)\l  %35 = fadd float %31, %34\l  %36 = fsub float %35, %31\l  %37 = fsub float %34, %36\l  %38 = fsub float %25, %35\l  %39 = fsub float %25, %38\l  %40 = fsub float %39, %35\l  %41 = fsub float %40, %37\l  %42 = fadd float %38, %41\l  %43 = fmul float %29, %42\l  %44 = fadd float %30, %43\l  %45 = fsub float %44, %30\l  %46 = fsub float %43, %45\l  %47 = fmul float %44, %44\l  %48 = fneg float %47\l  %49 = tail call float @llvm.fma.f32(float %44, float %44, float %48)\l  %50 = fmul float %46, 2.000000e+00\l  %51 = tail call float @llvm.fma.f32(float %44, float %50, float %49)\l  %52 = fadd float %47, %51\l  %53 = fsub float %52, %47\l  %54 = fsub float %51, %53\l  %55 = tail call float @llvm.fmuladd.f32(float %52, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %56 = tail call float @llvm.fmuladd.f32(float %52, float %55, float\l... 0x3FD999BDE0000000)\l  %57 = sitofp i32 %24 to float\l  %58 = fmul float %57, 0x3FE62E4300000000\l  %59 = fneg float %58\l  %60 = tail call float @llvm.fma.f32(float %57, float 0x3FE62E4300000000,\l... float %59)\l  %61 = tail call float @llvm.fma.f32(float %57, float 0xBE205C6100000000,\l... float %60)\l  %62 = fadd float %58, %61\l  %63 = fsub float %62, %58\l  %64 = fsub float %61, %63\l  %65 = tail call float @llvm.amdgcn.ldexp.f32(float %44, i32 1)\l  %66 = fmul float %44, %52\l  %67 = fneg float %66\l  %68 = tail call float @llvm.fma.f32(float %52, float %44, float %67)\l  %69 = tail call float @llvm.fma.f32(float %52, float %46, float %68)\l  %70 = tail call float @llvm.fma.f32(float %54, float %44, float %69)\l  %71 = fadd float %66, %70\l  %72 = fsub float %71, %66\l  %73 = fsub float %70, %72\l  %74 = fmul float %52, %56\l  %75 = fneg float %74\l  %76 = tail call float @llvm.fma.f32(float %52, float %56, float %75)\l  %77 = tail call float @llvm.fma.f32(float %54, float %56, float %76)\l  %78 = fadd float %74, %77\l  %79 = fsub float %78, %74\l  %80 = fsub float %77, %79\l  %81 = fadd float %78, 0x3FE5555540000000\l  %82 = fadd float %81, 0xBFE5555540000000\l  %83 = fsub float %78, %82\l  %84 = fadd float %80, 0x3E2E720200000000\l  %85 = fadd float %84, %83\l  %86 = fadd float %81, %85\l  %87 = fsub float %86, %81\l  %88 = fsub float %85, %87\l  %89 = fmul float %71, %86\l  %90 = fneg float %89\l  %91 = tail call float @llvm.fma.f32(float %71, float %86, float %90)\l  %92 = tail call float @llvm.fma.f32(float %71, float %88, float %91)\l  %93 = tail call float @llvm.fma.f32(float %73, float %86, float %92)\l  %94 = tail call float @llvm.amdgcn.ldexp.f32(float %46, i32 1)\l  %95 = fadd float %89, %93\l  %96 = fsub float %95, %89\l  %97 = fsub float %93, %96\l  %98 = fadd float %65, %95\l  %99 = fsub float %98, %65\l  %100 = fsub float %95, %99\l  %101 = fadd float %94, %97\l  %102 = fadd float %101, %100\l  %103 = fadd float %98, %102\l  %104 = fsub float %103, %98\l  %105 = fsub float %102, %104\l  %106 = fadd float %62, %103\l  %107 = fsub float %106, %62\l  %108 = fsub float %106, %107\l  %109 = fsub float %62, %108\l  %110 = fsub float %103, %107\l  %111 = fadd float %110, %109\l  %112 = fadd float %64, %105\l  %113 = fsub float %112, %64\l  %114 = fsub float %112, %113\l  %115 = fsub float %64, %114\l  %116 = fsub float %105, %113\l  %117 = fadd float %116, %115\l  %118 = fadd float %112, %111\l  %119 = fadd float %106, %118\l  %120 = fsub float %119, %106\l  %121 = fsub float %118, %120\l  %122 = fadd float %117, %121\l  %123 = fadd float %119, %122\l  %124 = fsub float %123, %119\l  %125 = fsub float %122, %124\l  %126 = fmul float %123, 3.000000e+00\l  %127 = fneg float %126\l  %128 = tail call float @llvm.fma.f32(float %123, float 3.000000e+00, float\l... %127)\l  %129 = tail call float @llvm.fma.f32(float %125, float 3.000000e+00, float\l... %128)\l  %130 = fadd float %126, %129\l  %131 = fsub float %130, %126\l  %132 = fsub float %129, %131\l  %133 = tail call float @llvm.fabs.f32(float %126) #4\l  %134 = fcmp oeq float %133, 0x7FF0000000000000\l  %135 = select i1 %134, float %126, float %130\l  %136 = tail call float @llvm.fabs.f32(float %135) #4\l  %137 = fcmp oeq float %136, 0x7FF0000000000000\l  %138 = select i1 %137, float 0.000000e+00, float %132\l  %139 = fcmp oeq float %135, 0x40562E4300000000\l  %140 = select i1 %139, float 0x3EE0000000000000, float 0.000000e+00\l  %141 = fsub float %135, %140\l  %142 = fadd float %140, %138\l  %143 = fmul float %141, 0x3FF7154760000000\l  %144 = tail call float @llvm.rint.f32(float %143)\l  %145 = fcmp ogt float %141, 0x40562E4300000000\l  %146 = fcmp olt float %141, 0xC059D1DA00000000\l  %147 = fneg float %143\l  %148 = tail call float @llvm.fma.f32(float %141, float 0x3FF7154760000000,\l... float %147)\l  %149 = tail call float @llvm.fma.f32(float %141, float 0x3E54AE0BE0000000,\l... float %148)\l  %150 = fsub float %143, %144\l  %151 = fadd float %149, %150\l  %152 = tail call float @llvm.exp2.f32(float %151)\l  %153 = fptosi float %144 to i32\l  %154 = tail call float @llvm.amdgcn.ldexp.f32(float %152, i32 %153)\l  %155 = select i1 %146, float 0.000000e+00, float %154\l  %156 = select i1 %145, float 0x7FF0000000000000, float %155\l  %157 = tail call float @llvm.fma.f32(float %156, float %142, float %156)\l  %158 = tail call float @llvm.fabs.f32(float %156) #4\l  %159 = fcmp oeq float %158, 0x7FF0000000000000\l  %160 = select i1 %159, float %156, float %157\l  %161 = fcmp olt float %5, 0.000000e+00\l  %162 = select i1 %161, float -0.000000e+00, float 0.000000e+00\l  %163 = tail call float @llvm.copysign.f32(float %160, float %162)\l  %164 = fcmp oeq float %18, 0x7FF0000000000000\l  %165 = fcmp oeq float %5, 0.000000e+00\l  %166 = or i1 %165, %164\l  %167 = select i1 %165, float 0.000000e+00, float 0x7FF0000000000000\l  %168 = tail call float @llvm.copysign.f32(float %167, float %5)\l  %169 = select i1 %166, float %168, float %163\l  %170 = fcmp uno float %5, 0.000000e+00\l  %171 = select i1 %170, float 0x7FF8000000000000, float %169\l  %172 = fcmp oeq float %5, 1.000000e+00\l  %173 = select i1 %172, float 1.000000e+00, float %171\l  %174 = fpext float %8 to double\l  %175 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %176 = mul nsw i32 %4, 11\l  %177 = icmp slt i32 %175, %176\l  %178 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %179 = getelementptr i8, i8 addrspace(4)* %178, i64 4\l  %180 = bitcast i8 addrspace(4)* %179 to i16 addrspace(4)*\l  %181 = add nsw i32 %4, 1\l  %182 = icmp sgt i32 %175, %4\l  %183 = getelementptr inbounds i8, i8 addrspace(4)* %178, i64 12\l  %184 = bitcast i8 addrspace(4)* %183 to i32 addrspace(4)*\l  %185 = load i32, i32 addrspace(4)* %184, align 4, !tbaa !5\l  %186 = load i16, i16 addrspace(4)* %180, align 4, !range !14,\l... !invariant.load !15\l  %187 = zext i16 %186 to i32\l  %188 = udiv i32 %185, %187\l  %189 = mul i32 %188, %187\l  %190 = icmp ugt i32 %185, %189\l  %191 = zext i1 %190 to i32\l  br label %192\l}"];
	Node0x5471950 -> Node0x547db10;
	Node0x547db10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%192:\l192:                                              \l  %193 = phi i32 [ %10, %14 ], [ %460, %458 ]\l  %194 = sext i32 %193 to i64\l  %195 = getelementptr inbounds float, float addrspace(1)* %0, i64 %194\l  %196 = load float, float addrspace(1)* %195, align 4, !tbaa !16\l  %197 = fpext float %196 to double\l  %198 = fmul contract double %197, 2.500000e-01\l  %199 = fdiv contract double %198, 0x400921FB54442EEA\l  %200 = fptrunc double %199 to float\l  store float %200, float addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4q_WK, align\l... 4, !tbaa !16\l  %201 = fmul contract float %200, 0xC021256080000000\l  %202 = fmul contract float %201, %200\l  %203 = fmul contract float %202, %6\l  %204 = fmul contract float %203, %6\l  %205 = fpext float %204 to double\l  %206 = fmul contract double %17, %205\l  %207 = fmul contract double %206, 2.500000e-01\l  %208 = fdiv contract double %207, 0x400921FB54442EEA\l  %209 = fptrunc double %208 to float\l  %210 = fmul float %209, 0x3FF7154760000000\l  %211 = tail call float @llvm.rint.f32(float %210)\l  %212 = fcmp ogt float %209, 0x40562E4300000000\l  %213 = fcmp olt float %209, 0xC059D1DA00000000\l  %214 = fneg float %210\l  %215 = tail call float @llvm.fma.f32(float %209, float 0x3FF7154760000000,\l... float %214)\l  %216 = tail call float @llvm.fma.f32(float %209, float 0x3E54AE0BE0000000,\l... float %215)\l  %217 = fsub float %210, %211\l  %218 = fadd float %216, %217\l  %219 = tail call float @llvm.exp2.f32(float %218)\l  %220 = fptosi float %211 to i32\l  %221 = tail call float @llvm.amdgcn.ldexp.f32(float %219, i32 %220)\l  %222 = select i1 %213, float 0.000000e+00, float %221\l  %223 = select i1 %212, float 0x7FF0000000000000, float %222\l  %224 = fmul contract float %173, %223\l  %225 = fpext float %224 to double\l  %226 = fmul contract double %225, 0x400921FB54442EEA\l  %227 = fmul contract double %226, 4.000000e+00\l  %228 = fdiv contract double %227, 3.000000e+00\l  %229 = fmul contract double %228, %174\l  %230 = fptrunc double %229 to float\l  store float %230, float addrspace(3)*\l... @_ZZ7FF_calcPfS_S_iiffS_fE12C1_PI_43_rho, align 4, !tbaa !16\l  br i1 %177, label %231, label %234\l|{<s0>T|<s1>F}}"];
	Node0x547db10:s0 -> Node0x547e290;
	Node0x547db10:s1 -> Node0x547fe20;
	Node0x547e290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%231:\l231:                                              \l  %232 = load i16, i16 addrspace(4)* %180, align 4, !range !14,\l... !invariant.load !15\l  %233 = zext i16 %232 to i32\l  br label %450\l}"];
	Node0x547e290 -> Node0x5480c60;
	Node0x547fe20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%234:\l234:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %182, label %458, label %235\l|{<s0>T|<s1>F}}"];
	Node0x547fe20:s0 -> Node0x547dc10;
	Node0x547fe20:s1 -> Node0x5480ff0;
	Node0x5480ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%235:\l235:                                              \l  %236 = load float, float addrspace(3)*\l... @_ZZ7FF_calcPfS_S_iiffS_fE12C1_PI_43_rho, align 4\l  %237 = load float, float addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4q_WK,\l... align 4\l  %238 = fpext float %237 to double\l  %239 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 38),\l... align 8\l  %240 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 5),\l... align 4\l  %241 = fpext float %240 to double\l  %242 = fmul contract double %241, 2.000000e+00\l  %243 = fpext float %239 to double\l  %244 = fadd contract double %242, %243\l  %245 = fptrunc double %244 to float\l  %246 = fpext float %245 to double\l  %247 = mul nsw i32 %193, %181\l  %248 = load i16, i16 addrspace(4)* %180, align 4, !range !14,\l... !invariant.load !15\l  %249 = zext i16 %248 to i32\l  %250 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 33),\l... align 4\l  %251 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 39),\l... align 4\l  %252 = fneg contract float %251\l  %253 = fmul contract float %237, %252\l  %254 = fmul contract float %237, %253\l  %255 = fmul float %254, 0x3FF7154760000000\l  %256 = tail call float @llvm.rint.f32(float %255)\l  %257 = fcmp ogt float %254, 0x40562E4300000000\l  %258 = fcmp olt float %254, 0xC059D1DA00000000\l  %259 = fneg float %255\l  %260 = tail call float @llvm.fma.f32(float %254, float 0x3FF7154760000000,\l... float %259)\l  %261 = tail call float @llvm.fma.f32(float %254, float 0x3E54AE0BE0000000,\l... float %260)\l  %262 = fsub float %255, %256\l  %263 = fadd float %261, %262\l  %264 = tail call float @llvm.exp2.f32(float %263)\l  %265 = fptosi float %256 to i32\l  %266 = tail call float @llvm.amdgcn.ldexp.f32(float %264, i32 %265)\l  %267 = select i1 %258, float 0.000000e+00, float %266\l  %268 = select i1 %257, float 0x7FF0000000000000, float %267\l  %269 = fmul contract float %250, %268\l  %270 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 0),\l... align 16\l  %271 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 6),\l... align 8\l  %272 = fneg contract float %271\l  %273 = fmul contract float %237, %272\l  %274 = fmul contract float %237, %273\l  %275 = fmul float %274, 0x3FF7154760000000\l  %276 = tail call float @llvm.rint.f32(float %275)\l  %277 = fcmp ogt float %274, 0x40562E4300000000\l  %278 = fcmp olt float %274, 0xC059D1DA00000000\l  %279 = fneg float %275\l  %280 = tail call float @llvm.fma.f32(float %274, float 0x3FF7154760000000,\l... float %279)\l  %281 = tail call float @llvm.fma.f32(float %274, float 0x3E54AE0BE0000000,\l... float %280)\l  %282 = fsub float %275, %276\l  %283 = fadd float %281, %282\l  %284 = tail call float @llvm.exp2.f32(float %283)\l  %285 = fptosi float %276 to i32\l  %286 = tail call float @llvm.amdgcn.ldexp.f32(float %284, i32 %285)\l  %287 = select i1 %278, float 0.000000e+00, float %286\l  %288 = select i1 %277, float 0x7FF0000000000000, float %287\l  %289 = fmul contract float %270, %288\l  %290 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 34),\l... align 8\l  %291 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 40),\l... align 16\l  %292 = fneg contract float %291\l  %293 = fmul contract float %237, %292\l  %294 = fmul contract float %237, %293\l  %295 = fmul float %294, 0x3FF7154760000000\l  %296 = tail call float @llvm.rint.f32(float %295)\l  %297 = fcmp ogt float %294, 0x40562E4300000000\l  %298 = fcmp olt float %294, 0xC059D1DA00000000\l  %299 = fneg float %295\l  %300 = tail call float @llvm.fma.f32(float %294, float 0x3FF7154760000000,\l... float %299)\l  %301 = tail call float @llvm.fma.f32(float %294, float 0x3E54AE0BE0000000,\l... float %300)\l  %302 = fsub float %295, %296\l  %303 = fadd float %301, %302\l  %304 = tail call float @llvm.exp2.f32(float %303)\l  %305 = fptosi float %296 to i32\l  %306 = tail call float @llvm.amdgcn.ldexp.f32(float %304, i32 %305)\l  %307 = select i1 %298, float 0.000000e+00, float %306\l  %308 = select i1 %297, float 0x7FF0000000000000, float %307\l  %309 = fmul contract float %290, %308\l  %310 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 1),\l... align 4\l  %311 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 7),\l... align 4\l  %312 = fneg contract float %311\l  %313 = fmul contract float %237, %312\l  %314 = fmul contract float %237, %313\l  %315 = fmul float %314, 0x3FF7154760000000\l  %316 = tail call float @llvm.rint.f32(float %315)\l  %317 = fcmp ogt float %314, 0x40562E4300000000\l  %318 = fcmp olt float %314, 0xC059D1DA00000000\l  %319 = fneg float %315\l  %320 = tail call float @llvm.fma.f32(float %314, float 0x3FF7154760000000,\l... float %319)\l  %321 = tail call float @llvm.fma.f32(float %314, float 0x3E54AE0BE0000000,\l... float %320)\l  %322 = fsub float %315, %316\l  %323 = fadd float %321, %322\l  %324 = tail call float @llvm.exp2.f32(float %323)\l  %325 = fptosi float %316 to i32\l  %326 = tail call float @llvm.amdgcn.ldexp.f32(float %324, i32 %325)\l  %327 = select i1 %318, float 0.000000e+00, float %326\l  %328 = select i1 %317, float 0x7FF0000000000000, float %327\l  %329 = fmul contract float %310, %328\l  %330 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 35),\l... align 4\l  %331 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 41),\l... align 4\l  %332 = fneg contract float %331\l  %333 = fmul contract float %237, %332\l  %334 = fmul contract float %237, %333\l  %335 = fmul float %334, 0x3FF7154760000000\l  %336 = tail call float @llvm.rint.f32(float %335)\l  %337 = fcmp ogt float %334, 0x40562E4300000000\l  %338 = fcmp olt float %334, 0xC059D1DA00000000\l  %339 = fneg float %335\l  %340 = tail call float @llvm.fma.f32(float %334, float 0x3FF7154760000000,\l... float %339)\l  %341 = tail call float @llvm.fma.f32(float %334, float 0x3E54AE0BE0000000,\l... float %340)\l  %342 = fsub float %335, %336\l  %343 = fadd float %341, %342\l  %344 = tail call float @llvm.exp2.f32(float %343)\l  %345 = fptosi float %336 to i32\l  %346 = tail call float @llvm.amdgcn.ldexp.f32(float %344, i32 %345)\l  %347 = select i1 %338, float 0.000000e+00, float %346\l  %348 = select i1 %337, float 0x7FF0000000000000, float %347\l  %349 = fmul contract float %330, %348\l  %350 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 2),\l... align 8\l  %351 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 8),\l... align 16\l  %352 = fneg contract float %351\l  %353 = fmul contract float %237, %352\l  %354 = fmul contract float %237, %353\l  %355 = fmul float %354, 0x3FF7154760000000\l  %356 = tail call float @llvm.rint.f32(float %355)\l  %357 = fcmp ogt float %354, 0x40562E4300000000\l  %358 = fcmp olt float %354, 0xC059D1DA00000000\l  %359 = fneg float %355\l  %360 = tail call float @llvm.fma.f32(float %354, float 0x3FF7154760000000,\l... float %359)\l  %361 = tail call float @llvm.fma.f32(float %354, float 0x3E54AE0BE0000000,\l... float %360)\l  %362 = fsub float %355, %356\l  %363 = fadd float %361, %362\l  %364 = tail call float @llvm.exp2.f32(float %363)\l  %365 = fptosi float %356 to i32\l  %366 = tail call float @llvm.amdgcn.ldexp.f32(float %364, i32 %365)\l  %367 = select i1 %358, float 0.000000e+00, float %366\l  %368 = select i1 %357, float 0x7FF0000000000000, float %367\l  %369 = fmul contract float %350, %368\l  %370 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 36),\l... align 16\l  %371 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 42),\l... align 8\l  %372 = fneg contract float %371\l  %373 = fmul contract float %237, %372\l  %374 = fmul contract float %237, %373\l  %375 = fmul float %374, 0x3FF7154760000000\l  %376 = tail call float @llvm.rint.f32(float %375)\l  %377 = fcmp ogt float %374, 0x40562E4300000000\l  %378 = fcmp olt float %374, 0xC059D1DA00000000\l  %379 = fneg float %375\l  %380 = tail call float @llvm.fma.f32(float %374, float 0x3FF7154760000000,\l... float %379)\l  %381 = tail call float @llvm.fma.f32(float %374, float 0x3E54AE0BE0000000,\l... float %380)\l  %382 = fsub float %375, %376\l  %383 = fadd float %381, %382\l  %384 = tail call float @llvm.exp2.f32(float %383)\l  %385 = fptosi float %376 to i32\l  %386 = tail call float @llvm.amdgcn.ldexp.f32(float %384, i32 %385)\l  %387 = select i1 %378, float 0.000000e+00, float %386\l  %388 = select i1 %377, float 0x7FF0000000000000, float %387\l  %389 = fmul contract float %370, %388\l  %390 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 3),\l... align 4\l  %391 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 9),\l... align 4\l  %392 = fneg contract float %391\l  %393 = fmul contract float %237, %392\l  %394 = fmul contract float %237, %393\l  %395 = fmul float %394, 0x3FF7154760000000\l  %396 = tail call float @llvm.rint.f32(float %395)\l  %397 = fcmp ogt float %394, 0x40562E4300000000\l  %398 = fcmp olt float %394, 0xC059D1DA00000000\l  %399 = fneg float %395\l  %400 = tail call float @llvm.fma.f32(float %394, float 0x3FF7154760000000,\l... float %399)\l  %401 = tail call float @llvm.fma.f32(float %394, float 0x3E54AE0BE0000000,\l... float %400)\l  %402 = fsub float %395, %396\l  %403 = fadd float %401, %402\l  %404 = tail call float @llvm.exp2.f32(float %403)\l  %405 = fptosi float %396 to i32\l  %406 = tail call float @llvm.amdgcn.ldexp.f32(float %404, i32 %405)\l  %407 = select i1 %398, float 0.000000e+00, float %406\l  %408 = select i1 %397, float 0x7FF0000000000000, float %407\l  %409 = fmul contract float %390, %408\l  %410 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 37),\l... align 4\l  %411 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 43),\l... align 4\l  %412 = fneg contract float %411\l  %413 = fmul contract float %237, %412\l  %414 = fmul contract float %237, %413\l  %415 = fmul float %414, 0x3FF7154760000000\l  %416 = tail call float @llvm.rint.f32(float %415)\l  %417 = fcmp ogt float %414, 0x40562E4300000000\l  %418 = fcmp olt float %414, 0xC059D1DA00000000\l  %419 = fneg float %415\l  %420 = tail call float @llvm.fma.f32(float %414, float 0x3FF7154760000000,\l... float %419)\l  %421 = tail call float @llvm.fma.f32(float %414, float 0x3E54AE0BE0000000,\l... float %420)\l  %422 = fsub float %415, %416\l  %423 = fadd float %421, %422\l  %424 = tail call float @llvm.exp2.f32(float %423)\l  %425 = fptosi float %416 to i32\l  %426 = tail call float @llvm.amdgcn.ldexp.f32(float %424, i32 %425)\l  %427 = select i1 %418, float 0.000000e+00, float %426\l  %428 = select i1 %417, float 0x7FF0000000000000, float %427\l  %429 = fmul contract float %410, %428\l  %430 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 4),\l... align 16\l  %431 = load float, float addrspace(3)* getelementptr inbounds ([66 x float],\l... [66 x float] addrspace(3)* @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 10),\l... align 8\l  %432 = fneg contract float %431\l  %433 = fmul contract float %237, %432\l  %434 = fmul contract float %237, %433\l  %435 = fmul float %434, 0x3FF7154760000000\l  %436 = tail call float @llvm.rint.f32(float %435)\l  %437 = fcmp ogt float %434, 0x40562E4300000000\l  %438 = fcmp olt float %434, 0xC059D1DA00000000\l  %439 = fneg float %435\l  %440 = tail call float @llvm.fma.f32(float %434, float 0x3FF7154760000000,\l... float %439)\l  %441 = tail call float @llvm.fma.f32(float %434, float 0x3E54AE0BE0000000,\l... float %440)\l  %442 = fsub float %435, %436\l  %443 = fadd float %441, %442\l  %444 = tail call float @llvm.exp2.f32(float %443)\l  %445 = fptosi float %436 to i32\l  %446 = tail call float @llvm.amdgcn.ldexp.f32(float %444, i32 %445)\l  %447 = select i1 %438, float 0.000000e+00, float %446\l  %448 = select i1 %437, float 0x7FF0000000000000, float %447\l  %449 = fmul contract float %430, %448\l  br label %462\l}"];
	Node0x5480ff0 -> Node0x548b870;
	Node0x5480c60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%450:\l450:                                              \l  %451 = phi i32 [ %175, %231 ], [ %456, %450 ]\l  %452 = sext i32 %451 to i64\l  %453 = getelementptr inbounds float, float addrspace(1)* %1, i64 %452\l  %454 = load float, float addrspace(1)* %453, align 4, !tbaa !16\l  %455 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)*\l... @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %451\l  store float %454, float addrspace(3)* %455, align 4, !tbaa !16\l  %456 = add i32 %451, %233\l  %457 = icmp slt i32 %456, %176\l  br i1 %457, label %450, label %234, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5480c60:s0 -> Node0x5480c60;
	Node0x5480c60:s1 -> Node0x547fe20;
	Node0x547dc10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%458:\l458:                                              \l  %459 = add i32 %188, %193\l  %460 = add i32 %459, %191\l  %461 = icmp slt i32 %460, %3\l  br i1 %461, label %192, label %997, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x547dc10:s0 -> Node0x547db10;
	Node0x547dc10:s1 -> Node0x54725d0;
	Node0x548b870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%462:\l462:                                              \l  %463 = phi i32 [ %175, %235 ], [ %995, %990 ]\l  %464 = sext i32 %463 to i64\l  %465 = getelementptr inbounds float, float addrspace(1)* %2, i64 %464\l  %466 = load float, float addrspace(1)* %465, align 4, !tbaa !16\l  %467 = icmp eq i32 %463, %4\l  br i1 %467, label %468, label %672\l|{<s0>T|<s1>F}}"];
	Node0x548b870:s0 -> Node0x548c620;
	Node0x548b870:s1 -> Node0x548c6b0;
	Node0x548c620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%468:\l468:                                              \l  %469 = tail call float @llvm.fabs.f32(float %466)\l  %470 = tail call float @llvm.amdgcn.frexp.mant.f32(float %469)\l  %471 = fcmp olt float %470, 0x3FE5555560000000\l  %472 = zext i1 %471 to i32\l  %473 = tail call float @llvm.amdgcn.ldexp.f32(float %470, i32 %472)\l  %474 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %469)\l  %475 = sub nsw i32 %474, %472\l  %476 = fadd float %473, -1.000000e+00\l  %477 = fadd float %473, 1.000000e+00\l  %478 = fadd float %477, -1.000000e+00\l  %479 = fsub float %473, %478\l  %480 = tail call float @llvm.amdgcn.rcp.f32(float %477)\l  %481 = fmul float %476, %480\l  %482 = fmul float %477, %481\l  %483 = fneg float %482\l  %484 = tail call float @llvm.fma.f32(float %481, float %477, float %483)\l  %485 = tail call float @llvm.fma.f32(float %481, float %479, float %484)\l  %486 = fadd float %482, %485\l  %487 = fsub float %486, %482\l  %488 = fsub float %485, %487\l  %489 = fsub float %476, %486\l  %490 = fsub float %476, %489\l  %491 = fsub float %490, %486\l  %492 = fsub float %491, %488\l  %493 = fadd float %489, %492\l  %494 = fmul float %480, %493\l  %495 = fadd float %481, %494\l  %496 = fsub float %495, %481\l  %497 = fsub float %494, %496\l  %498 = fmul float %495, %495\l  %499 = fneg float %498\l  %500 = tail call float @llvm.fma.f32(float %495, float %495, float %499)\l  %501 = fmul float %497, 2.000000e+00\l  %502 = tail call float @llvm.fma.f32(float %495, float %501, float %500)\l  %503 = fadd float %498, %502\l  %504 = fsub float %503, %498\l  %505 = fsub float %502, %504\l  %506 = tail call float @llvm.fmuladd.f32(float %503, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %507 = tail call float @llvm.fmuladd.f32(float %503, float %506, float\l... 0x3FD999BDE0000000)\l  %508 = sitofp i32 %475 to float\l  %509 = fmul float %508, 0x3FE62E4300000000\l  %510 = fneg float %509\l  %511 = tail call float @llvm.fma.f32(float %508, float 0x3FE62E4300000000,\l... float %510)\l  %512 = tail call float @llvm.fma.f32(float %508, float 0xBE205C6100000000,\l... float %511)\l  %513 = fadd float %509, %512\l  %514 = fsub float %513, %509\l  %515 = fsub float %512, %514\l  %516 = tail call float @llvm.amdgcn.ldexp.f32(float %495, i32 1)\l  %517 = fmul float %495, %503\l  %518 = fneg float %517\l  %519 = tail call float @llvm.fma.f32(float %503, float %495, float %518)\l  %520 = tail call float @llvm.fma.f32(float %503, float %497, float %519)\l  %521 = tail call float @llvm.fma.f32(float %505, float %495, float %520)\l  %522 = fadd float %517, %521\l  %523 = fsub float %522, %517\l  %524 = fsub float %521, %523\l  %525 = fmul float %503, %507\l  %526 = fneg float %525\l  %527 = tail call float @llvm.fma.f32(float %503, float %507, float %526)\l  %528 = tail call float @llvm.fma.f32(float %505, float %507, float %527)\l  %529 = fadd float %525, %528\l  %530 = fsub float %529, %525\l  %531 = fsub float %528, %530\l  %532 = fadd float %529, 0x3FE5555540000000\l  %533 = fadd float %532, 0xBFE5555540000000\l  %534 = fsub float %529, %533\l  %535 = fadd float %531, 0x3E2E720200000000\l  %536 = fadd float %535, %534\l  %537 = fadd float %532, %536\l  %538 = fsub float %537, %532\l  %539 = fsub float %536, %538\l  %540 = fmul float %522, %537\l  %541 = fneg float %540\l  %542 = tail call float @llvm.fma.f32(float %522, float %537, float %541)\l  %543 = tail call float @llvm.fma.f32(float %522, float %539, float %542)\l  %544 = tail call float @llvm.fma.f32(float %524, float %537, float %543)\l  %545 = tail call float @llvm.amdgcn.ldexp.f32(float %497, i32 1)\l  %546 = fadd float %540, %544\l  %547 = fsub float %546, %540\l  %548 = fsub float %544, %547\l  %549 = fadd float %516, %546\l  %550 = fsub float %549, %516\l  %551 = fsub float %546, %550\l  %552 = fadd float %545, %548\l  %553 = fadd float %552, %551\l  %554 = fadd float %549, %553\l  %555 = fsub float %554, %549\l  %556 = fsub float %553, %555\l  %557 = fadd float %513, %554\l  %558 = fsub float %557, %513\l  %559 = fsub float %557, %558\l  %560 = fsub float %513, %559\l  %561 = fsub float %554, %558\l  %562 = fadd float %561, %560\l  %563 = fadd float %515, %556\l  %564 = fsub float %563, %515\l  %565 = fsub float %563, %564\l  %566 = fsub float %515, %565\l  %567 = fsub float %556, %564\l  %568 = fadd float %567, %566\l  %569 = fadd float %563, %562\l  %570 = fadd float %557, %569\l  %571 = fsub float %570, %557\l  %572 = fsub float %569, %571\l  %573 = fadd float %568, %572\l  %574 = fadd float %570, %573\l  %575 = fsub float %574, %570\l  %576 = fsub float %573, %575\l  %577 = fmul float %574, 3.000000e+00\l  %578 = fneg float %577\l  %579 = tail call float @llvm.fma.f32(float %574, float 3.000000e+00, float\l... %578)\l  %580 = tail call float @llvm.fma.f32(float %576, float 3.000000e+00, float\l... %579)\l  %581 = fadd float %577, %580\l  %582 = fsub float %581, %577\l  %583 = fsub float %580, %582\l  %584 = tail call float @llvm.fabs.f32(float %577) #4\l  %585 = fcmp oeq float %584, 0x7FF0000000000000\l  %586 = select i1 %585, float %577, float %581\l  %587 = tail call float @llvm.fabs.f32(float %586) #4\l  %588 = fcmp oeq float %587, 0x7FF0000000000000\l  %589 = select i1 %588, float 0.000000e+00, float %583\l  %590 = fcmp oeq float %586, 0x40562E4300000000\l  %591 = select i1 %590, float 0x3EE0000000000000, float 0.000000e+00\l  %592 = fsub float %586, %591\l  %593 = fadd float %591, %589\l  %594 = fmul float %592, 0x3FF7154760000000\l  %595 = tail call float @llvm.rint.f32(float %594)\l  %596 = fcmp ogt float %592, 0x40562E4300000000\l  %597 = fcmp olt float %592, 0xC059D1DA00000000\l  %598 = fneg float %594\l  %599 = tail call float @llvm.fma.f32(float %592, float 0x3FF7154760000000,\l... float %598)\l  %600 = tail call float @llvm.fma.f32(float %592, float 0x3E54AE0BE0000000,\l... float %599)\l  %601 = fsub float %594, %595\l  %602 = fadd float %600, %601\l  %603 = tail call float @llvm.exp2.f32(float %602)\l  %604 = fptosi float %595 to i32\l  %605 = tail call float @llvm.amdgcn.ldexp.f32(float %603, i32 %604)\l  %606 = select i1 %597, float 0.000000e+00, float %605\l  %607 = select i1 %596, float 0x7FF0000000000000, float %606\l  %608 = tail call float @llvm.fma.f32(float %607, float %593, float %607)\l  %609 = tail call float @llvm.fabs.f32(float %607) #4\l  %610 = fcmp oeq float %609, 0x7FF0000000000000\l  %611 = select i1 %610, float %607, float %608\l  %612 = fcmp olt float %466, 0.000000e+00\l  %613 = select i1 %612, float -0.000000e+00, float 0.000000e+00\l  %614 = tail call float @llvm.copysign.f32(float %611, float %613)\l  %615 = fcmp oeq float %469, 0x7FF0000000000000\l  %616 = fcmp oeq float %466, 0.000000e+00\l  %617 = or i1 %616, %615\l  %618 = select i1 %616, float 0.000000e+00, float 0x7FF0000000000000\l  %619 = tail call float @llvm.copysign.f32(float %618, float %466)\l  %620 = select i1 %617, float %619, float %614\l  %621 = fcmp uno float %466, 0.000000e+00\l  %622 = select i1 %621, float 0x7FF8000000000000, float %620\l  %623 = fcmp oeq float %466, 1.000000e+00\l  %624 = select i1 %623, float 1.000000e+00, float %622\l  %625 = fmul contract float %624, %236\l  %626 = fpext float %625 to double\l  %627 = fpext float %466 to double\l  %628 = fmul contract double %627, 0xC00921FB54442EEA\l  %629 = fmul contract double %628, %627\l  %630 = fmul contract double %629, %238\l  %631 = fmul contract double %630, %238\l  %632 = fmul double %631, 0x3FF71547652B82FE\l  %633 = tail call double @llvm.rint.f64(double %632)\l  %634 = fneg double %633\l  %635 = tail call double @llvm.fma.f64(double %634, double\l... 0x3FE62E42FEFA39EF, double %631)\l  %636 = tail call double @llvm.fma.f64(double %634, double\l... 0x3C7ABC9E3B39803F, double %635)\l  %637 = tail call double @llvm.fma.f64(double %636, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %638 = tail call double @llvm.fma.f64(double %636, double %637, double\l... 0x3EC71DEE623FDE64)\l  %639 = tail call double @llvm.fma.f64(double %636, double %638, double\l... 0x3EFA01997C89E6B0)\l  %640 = tail call double @llvm.fma.f64(double %636, double %639, double\l... 0x3F2A01A014761F6E)\l  %641 = tail call double @llvm.fma.f64(double %636, double %640, double\l... 0x3F56C16C1852B7B0)\l  %642 = tail call double @llvm.fma.f64(double %636, double %641, double\l... 0x3F81111111122322)\l  %643 = tail call double @llvm.fma.f64(double %636, double %642, double\l... 0x3FA55555555502A1)\l  %644 = tail call double @llvm.fma.f64(double %636, double %643, double\l... 0x3FC5555555555511)\l  %645 = tail call double @llvm.fma.f64(double %636, double %644, double\l... 0x3FE000000000000B)\l  %646 = tail call double @llvm.fma.f64(double %636, double %645, double\l... 1.000000e+00)\l  %647 = tail call double @llvm.fma.f64(double %636, double %646, double\l... 1.000000e+00)\l  %648 = fptosi double %633 to i32\l  %649 = tail call double @llvm.amdgcn.ldexp.f64(double %647, i32 %648)\l  %650 = fcmp ogt double %631, 1.024000e+03\l  %651 = select i1 %650, double 0x7FF0000000000000, double %649\l  %652 = fcmp olt double %631, -1.075000e+03\l  %653 = select i1 %652, double 0.000000e+00, double %651\l  %654 = fmul contract double %653, %626\l  %655 = fsub contract double %246, %654\l  %656 = fptrunc double %655 to float\l  %657 = fadd contract float %269, %656\l  %658 = fadd contract float %657, %289\l  %659 = fadd contract float %289, %658\l  %660 = fadd contract float %659, %309\l  %661 = fadd contract float %660, %329\l  %662 = fadd contract float %329, %661\l  %663 = fadd contract float %662, %349\l  %664 = fadd contract float %663, %369\l  %665 = fadd contract float %369, %664\l  %666 = fadd contract float %665, %389\l  %667 = fadd contract float %666, %409\l  %668 = fadd contract float %409, %667\l  %669 = fadd contract float %668, %429\l  %670 = fadd contract float %669, %449\l  %671 = fadd contract float %449, %670\l  br label %990\l}"];
	Node0x548c620 -> Node0x548c2d0;
	Node0x548c6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%672:\l672:                                              \l  %673 = mul nsw i32 %463, 11\l  %674 = add nsw i32 %673, 5\l  %675 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)*\l... @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %674\l  %676 = load float, float addrspace(3)* %675, align 4, !tbaa !16\l  %677 = tail call float @llvm.fabs.f32(float %466)\l  %678 = tail call float @llvm.amdgcn.frexp.mant.f32(float %677)\l  %679 = fcmp olt float %678, 0x3FE5555560000000\l  %680 = zext i1 %679 to i32\l  %681 = tail call float @llvm.amdgcn.ldexp.f32(float %678, i32 %680)\l  %682 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %677)\l  %683 = sub nsw i32 %682, %680\l  %684 = fadd float %681, -1.000000e+00\l  %685 = fadd float %681, 1.000000e+00\l  %686 = fadd float %685, -1.000000e+00\l  %687 = fsub float %681, %686\l  %688 = tail call float @llvm.amdgcn.rcp.f32(float %685)\l  %689 = fmul float %684, %688\l  %690 = fmul float %685, %689\l  %691 = fneg float %690\l  %692 = tail call float @llvm.fma.f32(float %689, float %685, float %691)\l  %693 = tail call float @llvm.fma.f32(float %689, float %687, float %692)\l  %694 = fadd float %690, %693\l  %695 = fsub float %694, %690\l  %696 = fsub float %693, %695\l  %697 = fsub float %684, %694\l  %698 = fsub float %684, %697\l  %699 = fsub float %698, %694\l  %700 = fsub float %699, %696\l  %701 = fadd float %697, %700\l  %702 = fmul float %688, %701\l  %703 = fadd float %689, %702\l  %704 = fsub float %703, %689\l  %705 = fsub float %702, %704\l  %706 = fmul float %703, %703\l  %707 = fneg float %706\l  %708 = tail call float @llvm.fma.f32(float %703, float %703, float %707)\l  %709 = fmul float %705, 2.000000e+00\l  %710 = tail call float @llvm.fma.f32(float %703, float %709, float %708)\l  %711 = fadd float %706, %710\l  %712 = fsub float %711, %706\l  %713 = fsub float %710, %712\l  %714 = tail call float @llvm.fmuladd.f32(float %711, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %715 = tail call float @llvm.fmuladd.f32(float %711, float %714, float\l... 0x3FD999BDE0000000)\l  %716 = sitofp i32 %683 to float\l  %717 = fmul float %716, 0x3FE62E4300000000\l  %718 = fneg float %717\l  %719 = tail call float @llvm.fma.f32(float %716, float 0x3FE62E4300000000,\l... float %718)\l  %720 = tail call float @llvm.fma.f32(float %716, float 0xBE205C6100000000,\l... float %719)\l  %721 = fadd float %717, %720\l  %722 = fsub float %721, %717\l  %723 = fsub float %720, %722\l  %724 = tail call float @llvm.amdgcn.ldexp.f32(float %703, i32 1)\l  %725 = fmul float %703, %711\l  %726 = fneg float %725\l  %727 = tail call float @llvm.fma.f32(float %711, float %703, float %726)\l  %728 = tail call float @llvm.fma.f32(float %711, float %705, float %727)\l  %729 = tail call float @llvm.fma.f32(float %713, float %703, float %728)\l  %730 = fadd float %725, %729\l  %731 = fsub float %730, %725\l  %732 = fsub float %729, %731\l  %733 = fmul float %711, %715\l  %734 = fneg float %733\l  %735 = tail call float @llvm.fma.f32(float %711, float %715, float %734)\l  %736 = tail call float @llvm.fma.f32(float %713, float %715, float %735)\l  %737 = fadd float %733, %736\l  %738 = fsub float %737, %733\l  %739 = fsub float %736, %738\l  %740 = fadd float %737, 0x3FE5555540000000\l  %741 = fadd float %740, 0xBFE5555540000000\l  %742 = fsub float %737, %741\l  %743 = fadd float %739, 0x3E2E720200000000\l  %744 = fadd float %743, %742\l  %745 = fadd float %740, %744\l  %746 = fsub float %745, %740\l  %747 = fsub float %744, %746\l  %748 = fmul float %730, %745\l  %749 = fneg float %748\l  %750 = tail call float @llvm.fma.f32(float %730, float %745, float %749)\l  %751 = tail call float @llvm.fma.f32(float %730, float %747, float %750)\l  %752 = tail call float @llvm.fma.f32(float %732, float %745, float %751)\l  %753 = tail call float @llvm.amdgcn.ldexp.f32(float %705, i32 1)\l  %754 = fadd float %748, %752\l  %755 = fsub float %754, %748\l  %756 = fsub float %752, %755\l  %757 = fadd float %724, %754\l  %758 = fsub float %757, %724\l  %759 = fsub float %754, %758\l  %760 = fadd float %753, %756\l  %761 = fadd float %760, %759\l  %762 = fadd float %757, %761\l  %763 = fsub float %762, %757\l  %764 = fsub float %761, %763\l  %765 = fadd float %721, %762\l  %766 = fsub float %765, %721\l  %767 = fsub float %765, %766\l  %768 = fsub float %721, %767\l  %769 = fsub float %762, %766\l  %770 = fadd float %769, %768\l  %771 = fadd float %723, %764\l  %772 = fsub float %771, %723\l  %773 = fsub float %771, %772\l  %774 = fsub float %723, %773\l  %775 = fsub float %764, %772\l  %776 = fadd float %775, %774\l  %777 = fadd float %771, %770\l  %778 = fadd float %765, %777\l  %779 = fsub float %778, %765\l  %780 = fsub float %777, %779\l  %781 = fadd float %776, %780\l  %782 = fadd float %778, %781\l  %783 = fsub float %782, %778\l  %784 = fsub float %781, %783\l  %785 = fmul float %782, 3.000000e+00\l  %786 = fneg float %785\l  %787 = tail call float @llvm.fma.f32(float %782, float 3.000000e+00, float\l... %786)\l  %788 = tail call float @llvm.fma.f32(float %784, float 3.000000e+00, float\l... %787)\l  %789 = fadd float %785, %788\l  %790 = fsub float %789, %785\l  %791 = fsub float %788, %790\l  %792 = tail call float @llvm.fabs.f32(float %785) #4\l  %793 = fcmp oeq float %792, 0x7FF0000000000000\l  %794 = select i1 %793, float %785, float %789\l  %795 = tail call float @llvm.fabs.f32(float %794) #4\l  %796 = fcmp oeq float %795, 0x7FF0000000000000\l  %797 = select i1 %796, float 0.000000e+00, float %791\l  %798 = fcmp oeq float %794, 0x40562E4300000000\l  %799 = select i1 %798, float 0x3EE0000000000000, float 0.000000e+00\l  %800 = fsub float %794, %799\l  %801 = fadd float %799, %797\l  %802 = fmul float %800, 0x3FF7154760000000\l  %803 = tail call float @llvm.rint.f32(float %802)\l  %804 = fcmp ogt float %800, 0x40562E4300000000\l  %805 = fcmp olt float %800, 0xC059D1DA00000000\l  %806 = fneg float %802\l  %807 = tail call float @llvm.fma.f32(float %800, float 0x3FF7154760000000,\l... float %806)\l  %808 = tail call float @llvm.fma.f32(float %800, float 0x3E54AE0BE0000000,\l... float %807)\l  %809 = fsub float %802, %803\l  %810 = fadd float %808, %809\l  %811 = tail call float @llvm.exp2.f32(float %810)\l  %812 = fptosi float %803 to i32\l  %813 = tail call float @llvm.amdgcn.ldexp.f32(float %811, i32 %812)\l  %814 = select i1 %805, float 0.000000e+00, float %813\l  %815 = select i1 %804, float 0x7FF0000000000000, float %814\l  %816 = tail call float @llvm.fma.f32(float %815, float %801, float %815)\l  %817 = tail call float @llvm.fabs.f32(float %815) #4\l  %818 = fcmp oeq float %817, 0x7FF0000000000000\l  %819 = select i1 %818, float %815, float %816\l  %820 = fcmp olt float %466, 0.000000e+00\l  %821 = select i1 %820, float -0.000000e+00, float 0.000000e+00\l  %822 = tail call float @llvm.copysign.f32(float %819, float %821)\l  %823 = fcmp oeq float %677, 0x7FF0000000000000\l  %824 = fcmp oeq float %466, 0.000000e+00\l  %825 = or i1 %824, %823\l  %826 = select i1 %824, float 0.000000e+00, float 0x7FF0000000000000\l  %827 = tail call float @llvm.copysign.f32(float %826, float %466)\l  %828 = select i1 %825, float %827, float %822\l  %829 = fcmp uno float %466, 0.000000e+00\l  %830 = select i1 %829, float 0x7FF8000000000000, float %828\l  %831 = fcmp oeq float %466, 1.000000e+00\l  %832 = select i1 %831, float 1.000000e+00, float %830\l  %833 = fmul contract float %832, %236\l  %834 = fpext float %833 to double\l  %835 = fpext float %466 to double\l  %836 = fmul contract double %835, 0xC00921FB54442EEA\l  %837 = fmul contract double %836, %835\l  %838 = fmul contract double %837, %238\l  %839 = fmul contract double %838, %238\l  %840 = fmul double %839, 0x3FF71547652B82FE\l  %841 = tail call double @llvm.rint.f64(double %840)\l  %842 = fneg double %841\l  %843 = tail call double @llvm.fma.f64(double %842, double\l... 0x3FE62E42FEFA39EF, double %839)\l  %844 = tail call double @llvm.fma.f64(double %842, double\l... 0x3C7ABC9E3B39803F, double %843)\l  %845 = tail call double @llvm.fma.f64(double %844, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %846 = tail call double @llvm.fma.f64(double %844, double %845, double\l... 0x3EC71DEE623FDE64)\l  %847 = tail call double @llvm.fma.f64(double %844, double %846, double\l... 0x3EFA01997C89E6B0)\l  %848 = tail call double @llvm.fma.f64(double %844, double %847, double\l... 0x3F2A01A014761F6E)\l  %849 = tail call double @llvm.fma.f64(double %844, double %848, double\l... 0x3F56C16C1852B7B0)\l  %850 = tail call double @llvm.fma.f64(double %844, double %849, double\l... 0x3F81111111122322)\l  %851 = tail call double @llvm.fma.f64(double %844, double %850, double\l... 0x3FA55555555502A1)\l  %852 = tail call double @llvm.fma.f64(double %844, double %851, double\l... 0x3FC5555555555511)\l  %853 = tail call double @llvm.fma.f64(double %844, double %852, double\l... 0x3FE000000000000B)\l  %854 = tail call double @llvm.fma.f64(double %844, double %853, double\l... 1.000000e+00)\l  %855 = tail call double @llvm.fma.f64(double %844, double %854, double\l... 1.000000e+00)\l  %856 = fptosi double %841 to i32\l  %857 = tail call double @llvm.amdgcn.ldexp.f64(double %855, i32 %856)\l  %858 = fcmp ogt double %839, 1.024000e+03\l  %859 = select i1 %858, double 0x7FF0000000000000, double %857\l  %860 = fcmp olt double %839, -1.075000e+03\l  %861 = select i1 %860, double 0.000000e+00, double %859\l  %862 = fmul contract double %861, %834\l  %863 = fpext float %676 to double\l  %864 = fsub contract double %863, %862\l  %865 = fptrunc double %864 to float\l  %866 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)*\l... @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %673\l  %867 = load float, float addrspace(3)* %866, align 4, !tbaa !16\l  %868 = add nsw i32 %673, 6\l  %869 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)*\l... @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %868\l  %870 = load float, float addrspace(3)* %869, align 4, !tbaa !16\l  %871 = fneg contract float %870\l  %872 = fmul contract float %237, %871\l  %873 = fmul contract float %237, %872\l  %874 = fmul float %873, 0x3FF7154760000000\l  %875 = tail call float @llvm.rint.f32(float %874)\l  %876 = fcmp ogt float %873, 0x40562E4300000000\l  %877 = fcmp olt float %873, 0xC059D1DA00000000\l  %878 = fneg float %874\l  %879 = tail call float @llvm.fma.f32(float %873, float 0x3FF7154760000000,\l... float %878)\l  %880 = tail call float @llvm.fma.f32(float %873, float 0x3E54AE0BE0000000,\l... float %879)\l  %881 = fsub float %874, %875\l  %882 = fadd float %880, %881\l  %883 = tail call float @llvm.exp2.f32(float %882)\l  %884 = fptosi float %875 to i32\l  %885 = tail call float @llvm.amdgcn.ldexp.f32(float %883, i32 %884)\l  %886 = select i1 %877, float 0.000000e+00, float %885\l  %887 = select i1 %876, float 0x7FF0000000000000, float %886\l  %888 = fmul contract float %867, %887\l  %889 = fadd contract float %888, %865\l  %890 = add nsw i32 %673, 1\l  %891 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)*\l... @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %890\l  %892 = load float, float addrspace(3)* %891, align 4, !tbaa !16\l  %893 = add nsw i32 %673, 7\l  %894 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)*\l... @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %893\l  %895 = load float, float addrspace(3)* %894, align 4, !tbaa !16\l  %896 = fneg contract float %895\l  %897 = fmul contract float %237, %896\l  %898 = fmul contract float %237, %897\l  %899 = fmul float %898, 0x3FF7154760000000\l  %900 = tail call float @llvm.rint.f32(float %899)\l  %901 = fcmp ogt float %898, 0x40562E4300000000\l  %902 = fcmp olt float %898, 0xC059D1DA00000000\l  %903 = fneg float %899\l  %904 = tail call float @llvm.fma.f32(float %898, float 0x3FF7154760000000,\l... float %903)\l  %905 = tail call float @llvm.fma.f32(float %898, float 0x3E54AE0BE0000000,\l... float %904)\l  %906 = fsub float %899, %900\l  %907 = fadd float %905, %906\l  %908 = tail call float @llvm.exp2.f32(float %907)\l  %909 = fptosi float %900 to i32\l  %910 = tail call float @llvm.amdgcn.ldexp.f32(float %908, i32 %909)\l  %911 = select i1 %902, float 0.000000e+00, float %910\l  %912 = select i1 %901, float 0x7FF0000000000000, float %911\l  %913 = fmul contract float %892, %912\l  %914 = fadd contract float %889, %913\l  %915 = add nsw i32 %673, 2\l  %916 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)*\l... @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %915\l  %917 = load float, float addrspace(3)* %916, align 4, !tbaa !16\l  %918 = add nsw i32 %673, 8\l  %919 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)*\l... @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %918\l  %920 = load float, float addrspace(3)* %919, align 4, !tbaa !16\l  %921 = fneg contract float %920\l  %922 = fmul contract float %237, %921\l  %923 = fmul contract float %237, %922\l  %924 = fmul float %923, 0x3FF7154760000000\l  %925 = tail call float @llvm.rint.f32(float %924)\l  %926 = fcmp ogt float %923, 0x40562E4300000000\l  %927 = fcmp olt float %923, 0xC059D1DA00000000\l  %928 = fneg float %924\l  %929 = tail call float @llvm.fma.f32(float %923, float 0x3FF7154760000000,\l... float %928)\l  %930 = tail call float @llvm.fma.f32(float %923, float 0x3E54AE0BE0000000,\l... float %929)\l  %931 = fsub float %924, %925\l  %932 = fadd float %930, %931\l  %933 = tail call float @llvm.exp2.f32(float %932)\l  %934 = fptosi float %925 to i32\l  %935 = tail call float @llvm.amdgcn.ldexp.f32(float %933, i32 %934)\l  %936 = select i1 %927, float 0.000000e+00, float %935\l  %937 = select i1 %926, float 0x7FF0000000000000, float %936\l  %938 = fmul contract float %917, %937\l  %939 = fadd contract float %914, %938\l  %940 = add nsw i32 %673, 3\l  %941 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)*\l... @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %940\l  %942 = load float, float addrspace(3)* %941, align 4, !tbaa !16\l  %943 = add nsw i32 %673, 9\l  %944 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)*\l... @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %943\l  %945 = load float, float addrspace(3)* %944, align 4, !tbaa !16\l  %946 = fneg contract float %945\l  %947 = fmul contract float %237, %946\l  %948 = fmul contract float %237, %947\l  %949 = fmul float %948, 0x3FF7154760000000\l  %950 = tail call float @llvm.rint.f32(float %949)\l  %951 = fcmp ogt float %948, 0x40562E4300000000\l  %952 = fcmp olt float %948, 0xC059D1DA00000000\l  %953 = fneg float %949\l  %954 = tail call float @llvm.fma.f32(float %948, float 0x3FF7154760000000,\l... float %953)\l  %955 = tail call float @llvm.fma.f32(float %948, float 0x3E54AE0BE0000000,\l... float %954)\l  %956 = fsub float %949, %950\l  %957 = fadd float %955, %956\l  %958 = tail call float @llvm.exp2.f32(float %957)\l  %959 = fptosi float %950 to i32\l  %960 = tail call float @llvm.amdgcn.ldexp.f32(float %958, i32 %959)\l  %961 = select i1 %952, float 0.000000e+00, float %960\l  %962 = select i1 %951, float 0x7FF0000000000000, float %961\l  %963 = fmul contract float %942, %962\l  %964 = fadd contract float %939, %963\l  %965 = add nsw i32 %673, 4\l  %966 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)*\l... @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %965\l  %967 = load float, float addrspace(3)* %966, align 4, !tbaa !16\l  %968 = add nsw i32 %673, 10\l  %969 = getelementptr inbounds [66 x float], [66 x float] addrspace(3)*\l... @_ZZ7FF_calcPfS_S_iiffS_fE4WK_s, i32 0, i32 %968\l  %970 = load float, float addrspace(3)* %969, align 4, !tbaa !16\l  %971 = fneg contract float %970\l  %972 = fmul contract float %237, %971\l  %973 = fmul contract float %237, %972\l  %974 = fmul float %973, 0x3FF7154760000000\l  %975 = tail call float @llvm.rint.f32(float %974)\l  %976 = fcmp ogt float %973, 0x40562E4300000000\l  %977 = fcmp olt float %973, 0xC059D1DA00000000\l  %978 = fneg float %974\l  %979 = tail call float @llvm.fma.f32(float %973, float 0x3FF7154760000000,\l... float %978)\l  %980 = tail call float @llvm.fma.f32(float %973, float 0x3E54AE0BE0000000,\l... float %979)\l  %981 = fsub float %974, %975\l  %982 = fadd float %980, %981\l  %983 = tail call float @llvm.exp2.f32(float %982)\l  %984 = fptosi float %975 to i32\l  %985 = tail call float @llvm.amdgcn.ldexp.f32(float %983, i32 %984)\l  %986 = select i1 %977, float 0.000000e+00, float %985\l  %987 = select i1 %976, float 0x7FF0000000000000, float %986\l  %988 = fmul contract float %967, %987\l  %989 = fadd contract float %964, %988\l  br label %990\l}"];
	Node0x548c6b0 -> Node0x548c2d0;
	Node0x548c2d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%990:\l990:                                              \l  %991 = phi float [ %989, %672 ], [ %671, %468 ]\l  %992 = add nsw i32 %463, %247\l  %993 = sext i32 %992 to i64\l  %994 = getelementptr inbounds float, float addrspace(1)* %7, i64 %993\l  store float %991, float addrspace(1)* %994, align 4, !tbaa !16\l  %995 = add i32 %463, %249\l  %996 = icmp sgt i32 %995, %4\l  br i1 %996, label %458, label %462, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x548c2d0:s0 -> Node0x547dc10;
	Node0x548c2d0:s1 -> Node0x548b870;
	Node0x54725d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%997:\l997:                                              \l  ret void\l}"];
}
