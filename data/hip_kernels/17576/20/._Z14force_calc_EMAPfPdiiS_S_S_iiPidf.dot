digraph "CFG for '_Z14force_calc_EMAPfPdiiS_S_S_iiPidf' function" {
	label="CFG for '_Z14force_calc_EMAPfPdiiS_S_S_iiPidf' function";

	Node0x46fdf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = icmp ult i32 %13, %2\l  %15 = icmp slt i32 %13, %2\l  %16 = and i1 %14, %15\l  br i1 %16, label %17, label %119\l|{<s0>T|<s1>F}}"];
	Node0x46fdf20:s0 -> Node0x46fde00;
	Node0x46fdf20:s1 -> Node0x46fdc90;
	Node0x46fde00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%17:\l17:                                               \l  %18 = sdiv i32 %8, 2\l  %19 = icmp sgt i32 %8, 1\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %21 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %22 = getelementptr i8, i8 addrspace(4)* %21, i64 4\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = icmp eq i32 %20, 0\l  %25 = fadd contract double %10, -1.000000e+00\l  %26 = getelementptr inbounds i8, i8 addrspace(4)* %21, i64 12\l  %27 = bitcast i8 addrspace(4)* %26 to i32 addrspace(4)*\l  %28 = load i32, i32 addrspace(4)* %27, align 4, !tbaa !4\l  %29 = load i16, i16 addrspace(4)* %23, align 4, !range !13, !invariant.load\l... !14\l  %30 = zext i16 %29 to i32\l  %31 = udiv i32 %28, %30\l  %32 = mul i32 %31, %30\l  %33 = icmp ugt i32 %28, %32\l  %34 = zext i1 %33 to i32\l  br label %35\l}"];
	Node0x46fde00 -> Node0x4701e60;
	Node0x4701e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%35:\l35:                                               \l  %36 = phi i32 [ %13, %17 ], [ %117, %115 ]\l  br i1 %19, label %38, label %37\l|{<s0>T|<s1>F}}"];
	Node0x4701e60:s0 -> Node0x47020a0;
	Node0x4701e60:s1 -> Node0x4702130;
	Node0x4702130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%37:\l37:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %24, label %70, label %115\l|{<s0>T|<s1>F}}"];
	Node0x4702130:s0 -> Node0x4702550;
	Node0x4702130:s1 -> Node0x4701f60;
	Node0x47020a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%38:\l38:                                               \l  %39 = phi i32 [ %44, %43 ], [ %18, %35 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %40 = icmp slt i32 %20, %39\l  br i1 %40, label %41, label %43\l|{<s0>T|<s1>F}}"];
	Node0x47020a0:s0 -> Node0x4702a40;
	Node0x47020a0:s1 -> Node0x4702650;
	Node0x4702a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%41:\l41:                                               \l  %42 = mul nsw i32 %39, %7\l  br label %46\l}"];
	Node0x4702a40 -> Node0x4702bd0;
	Node0x4702650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%43:\l43:                                               \l  %44 = ashr i32 %39, 1\l  %45 = icmp sgt i32 %39, 1\l  br i1 %45, label %38, label %37, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4702650:s0 -> Node0x47020a0;
	Node0x4702650:s1 -> Node0x4702130;
	Node0x4702bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i32 [ %20, %41 ], [ %68, %46 ]\l  %48 = mul nsw i32 %47, %7\l  %49 = add nsw i32 %48, %36\l  %50 = add nsw i32 %49, %42\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %4, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !17\l  %54 = sext i32 %49 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %4, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !17\l  %57 = fadd contract float %53, %56\l  store float %57, float addrspace(1)* %55, align 4, !tbaa !17\l  %58 = getelementptr inbounds float, float addrspace(1)* %5, i64 %51\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !17\l  %60 = getelementptr inbounds float, float addrspace(1)* %5, i64 %54\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !17\l  %62 = fadd contract float %59, %61\l  store float %62, float addrspace(1)* %60, align 4, !tbaa !17\l  %63 = getelementptr inbounds float, float addrspace(1)* %6, i64 %51\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !17\l  %65 = getelementptr inbounds float, float addrspace(1)* %6, i64 %54\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !17\l  %67 = fadd contract float %64, %66\l  store float %67, float addrspace(1)* %65, align 4, !tbaa !17\l  %68 = add nsw i32 %47, %30\l  %69 = icmp slt i32 %68, %39\l  br i1 %69, label %46, label %43, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x4702bd0:s0 -> Node0x4702bd0;
	Node0x4702bd0:s1 -> Node0x4702650;
	Node0x4702550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%70:\l70:                                               \l  %71 = sext i32 %36 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %71\l  %73 = load i32, i32 addrspace(1)* %72, align 4, !tbaa !22\l  %74 = icmp eq i32 %73, 0\l  br i1 %74, label %115, label %75\l|{<s0>T|<s1>F}}"];
	Node0x4702550:s0 -> Node0x4701f60;
	Node0x4702550:s1 -> Node0x4704b80;
	Node0x4704b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%75:\l75:                                               \l  %76 = mul nsw i32 %36, 3\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds double, double addrspace(1)* %1, i64 %77\l  %79 = load double, double addrspace(1)* %78, align 8, !tbaa !24\l  %80 = fmul contract double %25, %79\l  %81 = getelementptr inbounds float, float addrspace(1)* %4, i64 %71\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !17\l  %83 = fpext float %82 to double\l  %84 = fsub contract double %80, %83\l  %85 = fdiv contract double %84, %10\l  store double %85, double addrspace(1)* %78, align 8, !tbaa !24\l  %86 = add nsw i32 %76, 1\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds double, double addrspace(1)* %1, i64 %87\l  %89 = load double, double addrspace(1)* %88, align 8, !tbaa !24\l  %90 = fmul contract double %25, %89\l  %91 = getelementptr inbounds float, float addrspace(1)* %5, i64 %71\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !17\l  %93 = fpext float %92 to double\l  %94 = fsub contract double %90, %93\l  %95 = fdiv contract double %94, %10\l  store double %95, double addrspace(1)* %88, align 8, !tbaa !24\l  %96 = add nsw i32 %76, 2\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds double, double addrspace(1)* %1, i64 %97\l  %99 = load double, double addrspace(1)* %98, align 8, !tbaa !24\l  %100 = fmul contract double %25, %99\l  %101 = getelementptr inbounds float, float addrspace(1)* %6, i64 %71\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !17\l  %103 = fpext float %102 to double\l  %104 = fsub contract double %100, %103\l  %105 = fdiv contract double %104, %10\l  store double %105, double addrspace(1)* %98, align 8, !tbaa !24\l  %106 = fptrunc double %85 to float\l  %107 = fmul contract float %106, %11\l  %108 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  store float %107, float addrspace(1)* %108, align 4, !tbaa !17\l  %109 = fptrunc double %95 to float\l  %110 = fmul contract float %109, %11\l  %111 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  store float %110, float addrspace(1)* %111, align 4, !tbaa !17\l  %112 = fptrunc double %105 to float\l  %113 = fmul contract float %112, %11\l  %114 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  store float %113, float addrspace(1)* %114, align 4, !tbaa !17\l  br label %115\l}"];
	Node0x4704b80 -> Node0x4701f60;
	Node0x4701f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%115:\l115:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %116 = add i32 %31, %36\l  %117 = add i32 %116, %34\l  %118 = icmp slt i32 %117, %2\l  br i1 %118, label %35, label %119, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x4701f60:s0 -> Node0x4701e60;
	Node0x4701f60:s1 -> Node0x46fdc90;
	Node0x46fdc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%119:\l119:                                              \l  ret void\l}"];
}
