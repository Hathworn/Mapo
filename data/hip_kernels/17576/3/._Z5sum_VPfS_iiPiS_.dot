digraph "CFG for '_Z5sum_VPfS_iiPiS_' function" {
	label="CFG for '_Z5sum_VPfS_iiPiS_' function";

	Node0x4d56230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = icmp slt i32 %7, %3\l  br i1 %8, label %9, label %15\l|{<s0>T|<s1>F}}"];
	Node0x4d56230:s0 -> Node0x4d55f60;
	Node0x4d56230:s1 -> Node0x4d570f0;
	Node0x4d55f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%9:\l9:                                                \l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  br label %21\l}"];
	Node0x4d55f60 -> Node0x4d57f40;
	Node0x4d570f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%15:\l15:                                               \l  %16 = icmp sgt i32 %3, 1\l  br i1 %16, label %17, label %47\l|{<s0>T|<s1>F}}"];
	Node0x4d570f0:s0 -> Node0x4d57020;
	Node0x4d570f0:s1 -> Node0x4d581e0;
	Node0x4d57020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%17:\l17:                                               \l  %18 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  br label %49\l}"];
	Node0x4d57020 -> Node0x4d58500;
	Node0x4d57f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%21:\l21:                                               \l  %22 = phi i32 [ %7, %9 ], [ %45, %42 ]\l  %23 = icmp slt i32 %22, %2\l  %24 = sext i32 %22 to i64\l  br i1 %23, label %25, label %42\l|{<s0>T|<s1>F}}"];
	Node0x4d57f40:s0 -> Node0x4d58840;
	Node0x4d57f40:s1 -> Node0x4d58600;
	Node0x4d58840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%25:\l25:                                               \l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %24\l  %27 = load i32, i32 addrspace(1)* %26, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %28 = icmp sgt i32 %27, 5\l  %29 = select i1 %28, i32 0, i32 %27\l  %30 = getelementptr inbounds float, float addrspace(1)* %0, i64 %24\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !11\l  %32 = fpext float %31 to double\l  %33 = fmul contract double %32, 4.000000e+00\l  %34 = fmul contract double %33, 0x400921FB54442EEA\l  %35 = sext i32 %29 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %5, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !11\l  %38 = fpext float %37 to double\l  %39 = fmul contract double %34, %38\l  %40 = fmul contract double %39, %38\l  %41 = fptrunc double %40 to float\l  br label %42\l}"];
	Node0x4d58840 -> Node0x4d58600;
	Node0x4d58600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%42:\l42:                                               \l  %43 = phi float [ %41, %25 ], [ 0.000000e+00, %21 ]\l  %44 = getelementptr inbounds float, float addrspace(1)* %1, i64 %24\l  store float %43, float addrspace(1)* %44, align 4, !tbaa !11\l  %45 = add i32 %22, %14\l  %46 = icmp slt i32 %45, %3\l  br i1 %46, label %21, label %15, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4d58600:s0 -> Node0x4d57f40;
	Node0x4d58600:s1 -> Node0x4d570f0;
	Node0x4d581e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%47:\l47:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %48 = icmp eq i32 %7, 0\l  br i1 %48, label %70, label %533\l|{<s0>T|<s1>F}}"];
	Node0x4d581e0:s0 -> Node0x4d5b4f0;
	Node0x4d581e0:s1 -> Node0x4d5b580;
	Node0x4d58500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%49:\l49:                                               \l  %50 = phi i32 [ %3, %17 ], [ %51, %56 ]\l  %51 = lshr i32 %50, 1\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %52 = icmp ult i32 %7, %51\l  br i1 %52, label %53, label %56\l|{<s0>T|<s1>F}}"];
	Node0x4d58500:s0 -> Node0x4d5bad0;
	Node0x4d58500:s1 -> Node0x4d5b6c0;
	Node0x4d5bad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%53:\l53:                                               \l  %54 = load i16, i16 addrspace(4)* %20, align 4, !range !5, !invariant.load !6\l  %55 = zext i16 %54 to i32\l  br label %58\l}"];
	Node0x4d5bad0 -> Node0x4d5b3b0;
	Node0x4d5b6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%56:\l56:                                               \l  %57 = icmp ugt i32 %50, 3\l  br i1 %57, label %49, label %47, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4d5b6c0:s0 -> Node0x4d58500;
	Node0x4d5b6c0:s1 -> Node0x4d581e0;
	Node0x4d5b3b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi i32 [ %7, %53 ], [ %68, %58 ]\l  %60 = add nuw nsw i32 %59, %51\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !11\l  %64 = zext i32 %59 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !11\l  %67 = fadd contract float %63, %66\l  store float %67, float addrspace(1)* %65, align 4, !tbaa !11\l  %68 = add nuw nsw i32 %59, %55\l  %69 = icmp ult i32 %68, %51\l  br i1 %69, label %58, label %56, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4d5b3b0:s0 -> Node0x4d5b3b0;
	Node0x4d5b3b0:s1 -> Node0x4d5b6c0;
	Node0x4d5b4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%70:\l70:                                               \l  %71 = load float, float addrspace(1)* %1, align 4, !tbaa !11\l  %72 = fpext float %71 to double\l  %73 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %74 = getelementptr inbounds i8, i8 addrspace(4)* %73, i64 24\l  %75 = bitcast i8 addrspace(4)* %74 to i64 addrspace(4)*\l  %76 = load i64, i64 addrspace(4)* %75, align 8, !tbaa !17\l  %77 = inttoptr i64 %76 to i8 addrspace(1)*\l  %78 = addrspacecast i8 addrspace(1)* %77 to i8*\l  %79 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %78,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %80 = extractelement \<2 x i64\> %79, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([33 x i8], [33 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %81, label %85\l|{<s0>T|<s1>F}}"];
	Node0x4d5b4f0:s0 -> Node0x4d5df10;
	Node0x4d5b4f0:s1 -> Node0x4d5e900;
	Node0x4d5df10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%81:\l81:                                               \l  %82 = and i64 %80, -225\l  %83 = or i64 %82, 32\l  %84 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %78,\l... i64 noundef %83, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %526\l}"];
	Node0x4d5df10 -> Node0x4d5ebe0;
	Node0x4d5e900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%85:\l85:                                               \l  %86 = and i64 %80, 2\l  %87 = and i64 %80, -3\l  %88 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %87, i64 0\l  br label %89\l}"];
	Node0x4d5e900 -> Node0x4d5f780;
	Node0x4d5f780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%89:\l89:                                               \l  %90 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([33 x i8], [33 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([33 x i8], [33 x i8] addrspace(4)*\l... @.str, i64 0, i64 32) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([33 x i8]* addrspacecast ([33 x i8] addrspace(4)* @.str to [33 x i8]*) to\l... i64)), i64 1))), %85 ], [ %523, %515 ]\l  %91 = phi i8 addrspace(4)* [ getelementptr inbounds ([33 x i8], [33 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %85 ], [ %524, %515 ]\l  %92 = phi \<2 x i64\> [ %88, %85 ], [ %522, %515 ]\l  %93 = icmp ugt i64 %90, 56\l  %94 = extractelement \<2 x i64\> %92, i64 0\l  %95 = or i64 %94, %86\l  %96 = insertelement \<2 x i64\> poison, i64 %95, i64 0\l  %97 = select i1 %93, \<2 x i64\> %92, \<2 x i64\> %96\l  %98 = tail call i64 @llvm.umin.i64(i64 %90, i64 56)\l  %99 = trunc i64 %98 to i32\l  %100 = extractelement \<2 x i64\> %97, i64 0\l  %101 = icmp ugt i32 %99, 7\l  br i1 %101, label %104, label %102\l|{<s0>T|<s1>F}}"];
	Node0x4d5f780:s0 -> Node0x4d606c0;
	Node0x4d5f780:s1 -> Node0x4d60750;
	Node0x4d60750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%102:\l102:                                              \l  %103 = icmp eq i32 %99, 0\l  br i1 %103, label %157, label %144\l|{<s0>T|<s1>F}}"];
	Node0x4d60750:s0 -> Node0x4d60920;
	Node0x4d60750:s1 -> Node0x4d60970;
	Node0x4d606c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%104:\l104:                                              \l  %105 = load i8, i8 addrspace(4)* %91, align 1, !tbaa !21\l  %106 = zext i8 %105 to i64\l  %107 = getelementptr inbounds i8, i8 addrspace(4)* %91, i64 1\l  %108 = load i8, i8 addrspace(4)* %107, align 1, !tbaa !21\l  %109 = zext i8 %108 to i64\l  %110 = shl nuw nsw i64 %109, 8\l  %111 = or i64 %110, %106\l  %112 = getelementptr inbounds i8, i8 addrspace(4)* %91, i64 2\l  %113 = load i8, i8 addrspace(4)* %112, align 1, !tbaa !21\l  %114 = zext i8 %113 to i64\l  %115 = shl nuw nsw i64 %114, 16\l  %116 = or i64 %111, %115\l  %117 = getelementptr inbounds i8, i8 addrspace(4)* %91, i64 3\l  %118 = load i8, i8 addrspace(4)* %117, align 1, !tbaa !21\l  %119 = zext i8 %118 to i64\l  %120 = shl nuw nsw i64 %119, 24\l  %121 = or i64 %116, %120\l  %122 = getelementptr inbounds i8, i8 addrspace(4)* %91, i64 4\l  %123 = load i8, i8 addrspace(4)* %122, align 1, !tbaa !21\l  %124 = zext i8 %123 to i64\l  %125 = shl nuw nsw i64 %124, 32\l  %126 = or i64 %121, %125\l  %127 = getelementptr inbounds i8, i8 addrspace(4)* %91, i64 5\l  %128 = load i8, i8 addrspace(4)* %127, align 1, !tbaa !21\l  %129 = zext i8 %128 to i64\l  %130 = shl nuw nsw i64 %129, 40\l  %131 = or i64 %126, %130\l  %132 = getelementptr inbounds i8, i8 addrspace(4)* %91, i64 6\l  %133 = load i8, i8 addrspace(4)* %132, align 1, !tbaa !21\l  %134 = zext i8 %133 to i64\l  %135 = shl nuw nsw i64 %134, 48\l  %136 = or i64 %131, %135\l  %137 = getelementptr inbounds i8, i8 addrspace(4)* %91, i64 7\l  %138 = load i8, i8 addrspace(4)* %137, align 1, !tbaa !21\l  %139 = zext i8 %138 to i64\l  %140 = shl nuw i64 %139, 56\l  %141 = or i64 %136, %140\l  %142 = add nsw i32 %99, -8\l  %143 = getelementptr inbounds i8, i8 addrspace(4)* %91, i64 8\l  br label %157\l}"];
	Node0x4d606c0 -> Node0x4d60920;
	Node0x4d60970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%144:\l144:                                              \l  %145 = phi i32 [ %155, %144 ], [ 0, %102 ]\l  %146 = phi i64 [ %154, %144 ], [ 0, %102 ]\l  %147 = zext i32 %145 to i64\l  %148 = getelementptr inbounds i8, i8 addrspace(4)* %91, i64 %147\l  %149 = load i8, i8 addrspace(4)* %148, align 1, !tbaa !21\l  %150 = zext i8 %149 to i64\l  %151 = shl i32 %145, 3\l  %152 = zext i32 %151 to i64\l  %153 = shl nuw i64 %150, %152\l  %154 = or i64 %153, %146\l  %155 = add nuw nsw i32 %145, 1\l  %156 = icmp eq i32 %155, %99\l  br i1 %156, label %157, label %144, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4d60970:s0 -> Node0x4d60920;
	Node0x4d60970:s1 -> Node0x4d60970;
	Node0x4d60920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%157:\l157:                                              \l  %158 = phi i8 addrspace(4)* [ %143, %104 ], [ %91, %102 ], [ %91, %144 ]\l  %159 = phi i32 [ %142, %104 ], [ 0, %102 ], [ 0, %144 ]\l  %160 = phi i64 [ %141, %104 ], [ 0, %102 ], [ %154, %144 ]\l  %161 = icmp ugt i32 %159, 7\l  br i1 %161, label %164, label %162\l|{<s0>T|<s1>F}}"];
	Node0x4d60920:s0 -> Node0x4d63820;
	Node0x4d60920:s1 -> Node0x4d63870;
	Node0x4d63870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%162:\l162:                                              \l  %163 = icmp eq i32 %159, 0\l  br i1 %163, label %217, label %204\l|{<s0>T|<s1>F}}"];
	Node0x4d63870:s0 -> Node0x4d63a40;
	Node0x4d63870:s1 -> Node0x4d63a90;
	Node0x4d63820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%164:\l164:                                              \l  %165 = load i8, i8 addrspace(4)* %158, align 1, !tbaa !21\l  %166 = zext i8 %165 to i64\l  %167 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 1\l  %168 = load i8, i8 addrspace(4)* %167, align 1, !tbaa !21\l  %169 = zext i8 %168 to i64\l  %170 = shl nuw nsw i64 %169, 8\l  %171 = or i64 %170, %166\l  %172 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 2\l  %173 = load i8, i8 addrspace(4)* %172, align 1, !tbaa !21\l  %174 = zext i8 %173 to i64\l  %175 = shl nuw nsw i64 %174, 16\l  %176 = or i64 %171, %175\l  %177 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 3\l  %178 = load i8, i8 addrspace(4)* %177, align 1, !tbaa !21\l  %179 = zext i8 %178 to i64\l  %180 = shl nuw nsw i64 %179, 24\l  %181 = or i64 %176, %180\l  %182 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 4\l  %183 = load i8, i8 addrspace(4)* %182, align 1, !tbaa !21\l  %184 = zext i8 %183 to i64\l  %185 = shl nuw nsw i64 %184, 32\l  %186 = or i64 %181, %185\l  %187 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 5\l  %188 = load i8, i8 addrspace(4)* %187, align 1, !tbaa !21\l  %189 = zext i8 %188 to i64\l  %190 = shl nuw nsw i64 %189, 40\l  %191 = or i64 %186, %190\l  %192 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 6\l  %193 = load i8, i8 addrspace(4)* %192, align 1, !tbaa !21\l  %194 = zext i8 %193 to i64\l  %195 = shl nuw nsw i64 %194, 48\l  %196 = or i64 %191, %195\l  %197 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 7\l  %198 = load i8, i8 addrspace(4)* %197, align 1, !tbaa !21\l  %199 = zext i8 %198 to i64\l  %200 = shl nuw i64 %199, 56\l  %201 = or i64 %196, %200\l  %202 = add nsw i32 %159, -8\l  %203 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 8\l  br label %217\l}"];
	Node0x4d63820 -> Node0x4d63a40;
	Node0x4d63a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%204:\l204:                                              \l  %205 = phi i32 [ %215, %204 ], [ 0, %162 ]\l  %206 = phi i64 [ %214, %204 ], [ 0, %162 ]\l  %207 = zext i32 %205 to i64\l  %208 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 %207\l  %209 = load i8, i8 addrspace(4)* %208, align 1, !tbaa !21\l  %210 = zext i8 %209 to i64\l  %211 = shl i32 %205, 3\l  %212 = zext i32 %211 to i64\l  %213 = shl nuw i64 %210, %212\l  %214 = or i64 %213, %206\l  %215 = add nuw nsw i32 %205, 1\l  %216 = icmp eq i32 %215, %159\l  br i1 %216, label %217, label %204\l|{<s0>T|<s1>F}}"];
	Node0x4d63a90:s0 -> Node0x4d63a40;
	Node0x4d63a90:s1 -> Node0x4d63a90;
	Node0x4d63a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%217:\l217:                                              \l  %218 = phi i8 addrspace(4)* [ %203, %164 ], [ %158, %162 ], [ %158, %204 ]\l  %219 = phi i32 [ %202, %164 ], [ 0, %162 ], [ 0, %204 ]\l  %220 = phi i64 [ %201, %164 ], [ 0, %162 ], [ %214, %204 ]\l  %221 = icmp ugt i32 %219, 7\l  br i1 %221, label %224, label %222\l|{<s0>T|<s1>F}}"];
	Node0x4d63a40:s0 -> Node0x4d65af0;
	Node0x4d63a40:s1 -> Node0x4d65b40;
	Node0x4d65b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%222:\l222:                                              \l  %223 = icmp eq i32 %219, 0\l  br i1 %223, label %277, label %264\l|{<s0>T|<s1>F}}"];
	Node0x4d65b40:s0 -> Node0x4d65cd0;
	Node0x4d65b40:s1 -> Node0x4d65d20;
	Node0x4d65af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%224:\l224:                                              \l  %225 = load i8, i8 addrspace(4)* %218, align 1, !tbaa !21\l  %226 = zext i8 %225 to i64\l  %227 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 1\l  %228 = load i8, i8 addrspace(4)* %227, align 1, !tbaa !21\l  %229 = zext i8 %228 to i64\l  %230 = shl nuw nsw i64 %229, 8\l  %231 = or i64 %230, %226\l  %232 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 2\l  %233 = load i8, i8 addrspace(4)* %232, align 1, !tbaa !21\l  %234 = zext i8 %233 to i64\l  %235 = shl nuw nsw i64 %234, 16\l  %236 = or i64 %231, %235\l  %237 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 3\l  %238 = load i8, i8 addrspace(4)* %237, align 1, !tbaa !21\l  %239 = zext i8 %238 to i64\l  %240 = shl nuw nsw i64 %239, 24\l  %241 = or i64 %236, %240\l  %242 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 4\l  %243 = load i8, i8 addrspace(4)* %242, align 1, !tbaa !21\l  %244 = zext i8 %243 to i64\l  %245 = shl nuw nsw i64 %244, 32\l  %246 = or i64 %241, %245\l  %247 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 5\l  %248 = load i8, i8 addrspace(4)* %247, align 1, !tbaa !21\l  %249 = zext i8 %248 to i64\l  %250 = shl nuw nsw i64 %249, 40\l  %251 = or i64 %246, %250\l  %252 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 6\l  %253 = load i8, i8 addrspace(4)* %252, align 1, !tbaa !21\l  %254 = zext i8 %253 to i64\l  %255 = shl nuw nsw i64 %254, 48\l  %256 = or i64 %251, %255\l  %257 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 7\l  %258 = load i8, i8 addrspace(4)* %257, align 1, !tbaa !21\l  %259 = zext i8 %258 to i64\l  %260 = shl nuw i64 %259, 56\l  %261 = or i64 %256, %260\l  %262 = add nsw i32 %219, -8\l  %263 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 8\l  br label %277\l}"];
	Node0x4d65af0 -> Node0x4d65cd0;
	Node0x4d65d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%264:\l264:                                              \l  %265 = phi i32 [ %275, %264 ], [ 0, %222 ]\l  %266 = phi i64 [ %274, %264 ], [ 0, %222 ]\l  %267 = zext i32 %265 to i64\l  %268 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 %267\l  %269 = load i8, i8 addrspace(4)* %268, align 1, !tbaa !21\l  %270 = zext i8 %269 to i64\l  %271 = shl i32 %265, 3\l  %272 = zext i32 %271 to i64\l  %273 = shl nuw i64 %270, %272\l  %274 = or i64 %273, %266\l  %275 = add nuw nsw i32 %265, 1\l  %276 = icmp eq i32 %275, %219\l  br i1 %276, label %277, label %264\l|{<s0>T|<s1>F}}"];
	Node0x4d65d20:s0 -> Node0x4d65cd0;
	Node0x4d65d20:s1 -> Node0x4d65d20;
	Node0x4d65cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%277:\l277:                                              \l  %278 = phi i8 addrspace(4)* [ %263, %224 ], [ %218, %222 ], [ %218, %264 ]\l  %279 = phi i32 [ %262, %224 ], [ 0, %222 ], [ 0, %264 ]\l  %280 = phi i64 [ %261, %224 ], [ 0, %222 ], [ %274, %264 ]\l  %281 = icmp ugt i32 %279, 7\l  br i1 %281, label %284, label %282\l|{<s0>T|<s1>F}}"];
	Node0x4d65cd0:s0 -> Node0x4d68550;
	Node0x4d65cd0:s1 -> Node0x4d685a0;
	Node0x4d685a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%282:\l282:                                              \l  %283 = icmp eq i32 %279, 0\l  br i1 %283, label %337, label %324\l|{<s0>T|<s1>F}}"];
	Node0x4d685a0:s0 -> Node0x4d68730;
	Node0x4d685a0:s1 -> Node0x4d68780;
	Node0x4d68550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%284:\l284:                                              \l  %285 = load i8, i8 addrspace(4)* %278, align 1, !tbaa !21\l  %286 = zext i8 %285 to i64\l  %287 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 1\l  %288 = load i8, i8 addrspace(4)* %287, align 1, !tbaa !21\l  %289 = zext i8 %288 to i64\l  %290 = shl nuw nsw i64 %289, 8\l  %291 = or i64 %290, %286\l  %292 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 2\l  %293 = load i8, i8 addrspace(4)* %292, align 1, !tbaa !21\l  %294 = zext i8 %293 to i64\l  %295 = shl nuw nsw i64 %294, 16\l  %296 = or i64 %291, %295\l  %297 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 3\l  %298 = load i8, i8 addrspace(4)* %297, align 1, !tbaa !21\l  %299 = zext i8 %298 to i64\l  %300 = shl nuw nsw i64 %299, 24\l  %301 = or i64 %296, %300\l  %302 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 4\l  %303 = load i8, i8 addrspace(4)* %302, align 1, !tbaa !21\l  %304 = zext i8 %303 to i64\l  %305 = shl nuw nsw i64 %304, 32\l  %306 = or i64 %301, %305\l  %307 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 5\l  %308 = load i8, i8 addrspace(4)* %307, align 1, !tbaa !21\l  %309 = zext i8 %308 to i64\l  %310 = shl nuw nsw i64 %309, 40\l  %311 = or i64 %306, %310\l  %312 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 6\l  %313 = load i8, i8 addrspace(4)* %312, align 1, !tbaa !21\l  %314 = zext i8 %313 to i64\l  %315 = shl nuw nsw i64 %314, 48\l  %316 = or i64 %311, %315\l  %317 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 7\l  %318 = load i8, i8 addrspace(4)* %317, align 1, !tbaa !21\l  %319 = zext i8 %318 to i64\l  %320 = shl nuw i64 %319, 56\l  %321 = or i64 %316, %320\l  %322 = add nsw i32 %279, -8\l  %323 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 8\l  br label %337\l}"];
	Node0x4d68550 -> Node0x4d68730;
	Node0x4d68780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%324:\l324:                                              \l  %325 = phi i32 [ %335, %324 ], [ 0, %282 ]\l  %326 = phi i64 [ %334, %324 ], [ 0, %282 ]\l  %327 = zext i32 %325 to i64\l  %328 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 %327\l  %329 = load i8, i8 addrspace(4)* %328, align 1, !tbaa !21\l  %330 = zext i8 %329 to i64\l  %331 = shl i32 %325, 3\l  %332 = zext i32 %331 to i64\l  %333 = shl nuw i64 %330, %332\l  %334 = or i64 %333, %326\l  %335 = add nuw nsw i32 %325, 1\l  %336 = icmp eq i32 %335, %279\l  br i1 %336, label %337, label %324\l|{<s0>T|<s1>F}}"];
	Node0x4d68780:s0 -> Node0x4d68730;
	Node0x4d68780:s1 -> Node0x4d68780;
	Node0x4d68730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%337:\l337:                                              \l  %338 = phi i8 addrspace(4)* [ %323, %284 ], [ %278, %282 ], [ %278, %324 ]\l  %339 = phi i32 [ %322, %284 ], [ 0, %282 ], [ 0, %324 ]\l  %340 = phi i64 [ %321, %284 ], [ 0, %282 ], [ %334, %324 ]\l  %341 = icmp ugt i32 %339, 7\l  br i1 %341, label %344, label %342\l|{<s0>T|<s1>F}}"];
	Node0x4d68730:s0 -> Node0x4d6b1f0;
	Node0x4d68730:s1 -> Node0x4d6b240;
	Node0x4d6b240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%342:\l342:                                              \l  %343 = icmp eq i32 %339, 0\l  br i1 %343, label %397, label %384\l|{<s0>T|<s1>F}}"];
	Node0x4d6b240:s0 -> Node0x4d6b3d0;
	Node0x4d6b240:s1 -> Node0x4d6b420;
	Node0x4d6b1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%344:\l344:                                              \l  %345 = load i8, i8 addrspace(4)* %338, align 1, !tbaa !21\l  %346 = zext i8 %345 to i64\l  %347 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 1\l  %348 = load i8, i8 addrspace(4)* %347, align 1, !tbaa !21\l  %349 = zext i8 %348 to i64\l  %350 = shl nuw nsw i64 %349, 8\l  %351 = or i64 %350, %346\l  %352 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 2\l  %353 = load i8, i8 addrspace(4)* %352, align 1, !tbaa !21\l  %354 = zext i8 %353 to i64\l  %355 = shl nuw nsw i64 %354, 16\l  %356 = or i64 %351, %355\l  %357 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 3\l  %358 = load i8, i8 addrspace(4)* %357, align 1, !tbaa !21\l  %359 = zext i8 %358 to i64\l  %360 = shl nuw nsw i64 %359, 24\l  %361 = or i64 %356, %360\l  %362 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 4\l  %363 = load i8, i8 addrspace(4)* %362, align 1, !tbaa !21\l  %364 = zext i8 %363 to i64\l  %365 = shl nuw nsw i64 %364, 32\l  %366 = or i64 %361, %365\l  %367 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 5\l  %368 = load i8, i8 addrspace(4)* %367, align 1, !tbaa !21\l  %369 = zext i8 %368 to i64\l  %370 = shl nuw nsw i64 %369, 40\l  %371 = or i64 %366, %370\l  %372 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 6\l  %373 = load i8, i8 addrspace(4)* %372, align 1, !tbaa !21\l  %374 = zext i8 %373 to i64\l  %375 = shl nuw nsw i64 %374, 48\l  %376 = or i64 %371, %375\l  %377 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 7\l  %378 = load i8, i8 addrspace(4)* %377, align 1, !tbaa !21\l  %379 = zext i8 %378 to i64\l  %380 = shl nuw i64 %379, 56\l  %381 = or i64 %376, %380\l  %382 = add nsw i32 %339, -8\l  %383 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 8\l  br label %397\l}"];
	Node0x4d6b1f0 -> Node0x4d6b3d0;
	Node0x4d6b420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%384:\l384:                                              \l  %385 = phi i32 [ %395, %384 ], [ 0, %342 ]\l  %386 = phi i64 [ %394, %384 ], [ 0, %342 ]\l  %387 = zext i32 %385 to i64\l  %388 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 %387\l  %389 = load i8, i8 addrspace(4)* %388, align 1, !tbaa !21\l  %390 = zext i8 %389 to i64\l  %391 = shl i32 %385, 3\l  %392 = zext i32 %391 to i64\l  %393 = shl nuw i64 %390, %392\l  %394 = or i64 %393, %386\l  %395 = add nuw nsw i32 %385, 1\l  %396 = icmp eq i32 %395, %339\l  br i1 %396, label %397, label %384\l|{<s0>T|<s1>F}}"];
	Node0x4d6b420:s0 -> Node0x4d6b3d0;
	Node0x4d6b420:s1 -> Node0x4d6b420;
	Node0x4d6b3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%397:\l397:                                              \l  %398 = phi i8 addrspace(4)* [ %383, %344 ], [ %338, %342 ], [ %338, %384 ]\l  %399 = phi i32 [ %382, %344 ], [ 0, %342 ], [ 0, %384 ]\l  %400 = phi i64 [ %381, %344 ], [ 0, %342 ], [ %394, %384 ]\l  %401 = icmp ugt i32 %399, 7\l  br i1 %401, label %404, label %402\l|{<s0>T|<s1>F}}"];
	Node0x4d6b3d0:s0 -> Node0x4d6d440;
	Node0x4d6b3d0:s1 -> Node0x4d6d490;
	Node0x4d6d490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%402:\l402:                                              \l  %403 = icmp eq i32 %399, 0\l  br i1 %403, label %457, label %444\l|{<s0>T|<s1>F}}"];
	Node0x4d6d490:s0 -> Node0x4d6d620;
	Node0x4d6d490:s1 -> Node0x4d6d670;
	Node0x4d6d440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%404:\l404:                                              \l  %405 = load i8, i8 addrspace(4)* %398, align 1, !tbaa !21\l  %406 = zext i8 %405 to i64\l  %407 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 1\l  %408 = load i8, i8 addrspace(4)* %407, align 1, !tbaa !21\l  %409 = zext i8 %408 to i64\l  %410 = shl nuw nsw i64 %409, 8\l  %411 = or i64 %410, %406\l  %412 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 2\l  %413 = load i8, i8 addrspace(4)* %412, align 1, !tbaa !21\l  %414 = zext i8 %413 to i64\l  %415 = shl nuw nsw i64 %414, 16\l  %416 = or i64 %411, %415\l  %417 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 3\l  %418 = load i8, i8 addrspace(4)* %417, align 1, !tbaa !21\l  %419 = zext i8 %418 to i64\l  %420 = shl nuw nsw i64 %419, 24\l  %421 = or i64 %416, %420\l  %422 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 4\l  %423 = load i8, i8 addrspace(4)* %422, align 1, !tbaa !21\l  %424 = zext i8 %423 to i64\l  %425 = shl nuw nsw i64 %424, 32\l  %426 = or i64 %421, %425\l  %427 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 5\l  %428 = load i8, i8 addrspace(4)* %427, align 1, !tbaa !21\l  %429 = zext i8 %428 to i64\l  %430 = shl nuw nsw i64 %429, 40\l  %431 = or i64 %426, %430\l  %432 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 6\l  %433 = load i8, i8 addrspace(4)* %432, align 1, !tbaa !21\l  %434 = zext i8 %433 to i64\l  %435 = shl nuw nsw i64 %434, 48\l  %436 = or i64 %431, %435\l  %437 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 7\l  %438 = load i8, i8 addrspace(4)* %437, align 1, !tbaa !21\l  %439 = zext i8 %438 to i64\l  %440 = shl nuw i64 %439, 56\l  %441 = or i64 %436, %440\l  %442 = add nsw i32 %399, -8\l  %443 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 8\l  br label %457\l}"];
	Node0x4d6d440 -> Node0x4d6d620;
	Node0x4d6d670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%444:\l444:                                              \l  %445 = phi i32 [ %455, %444 ], [ 0, %402 ]\l  %446 = phi i64 [ %454, %444 ], [ 0, %402 ]\l  %447 = zext i32 %445 to i64\l  %448 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 %447\l  %449 = load i8, i8 addrspace(4)* %448, align 1, !tbaa !21\l  %450 = zext i8 %449 to i64\l  %451 = shl i32 %445, 3\l  %452 = zext i32 %451 to i64\l  %453 = shl nuw i64 %450, %452\l  %454 = or i64 %453, %446\l  %455 = add nuw nsw i32 %445, 1\l  %456 = icmp eq i32 %455, %399\l  br i1 %456, label %457, label %444\l|{<s0>T|<s1>F}}"];
	Node0x4d6d670:s0 -> Node0x4d6d620;
	Node0x4d6d670:s1 -> Node0x4d6d670;
	Node0x4d6d620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%457:\l457:                                              \l  %458 = phi i8 addrspace(4)* [ %443, %404 ], [ %398, %402 ], [ %398, %444 ]\l  %459 = phi i32 [ %442, %404 ], [ 0, %402 ], [ 0, %444 ]\l  %460 = phi i64 [ %441, %404 ], [ 0, %402 ], [ %454, %444 ]\l  %461 = icmp ugt i32 %459, 7\l  br i1 %461, label %464, label %462\l|{<s0>T|<s1>F}}"];
	Node0x4d6d620:s0 -> Node0x4d6fca0;
	Node0x4d6d620:s1 -> Node0x4d6fcf0;
	Node0x4d6fcf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%462:\l462:                                              \l  %463 = icmp eq i32 %459, 0\l  br i1 %463, label %515, label %502\l|{<s0>T|<s1>F}}"];
	Node0x4d6fcf0:s0 -> Node0x4d5fbf0;
	Node0x4d6fcf0:s1 -> Node0x4d6fe80;
	Node0x4d6fca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%464:\l464:                                              \l  %465 = load i8, i8 addrspace(4)* %458, align 1, !tbaa !21\l  %466 = zext i8 %465 to i64\l  %467 = getelementptr inbounds i8, i8 addrspace(4)* %458, i64 1\l  %468 = load i8, i8 addrspace(4)* %467, align 1, !tbaa !21\l  %469 = zext i8 %468 to i64\l  %470 = shl nuw nsw i64 %469, 8\l  %471 = or i64 %470, %466\l  %472 = getelementptr inbounds i8, i8 addrspace(4)* %458, i64 2\l  %473 = load i8, i8 addrspace(4)* %472, align 1, !tbaa !21\l  %474 = zext i8 %473 to i64\l  %475 = shl nuw nsw i64 %474, 16\l  %476 = or i64 %471, %475\l  %477 = getelementptr inbounds i8, i8 addrspace(4)* %458, i64 3\l  %478 = load i8, i8 addrspace(4)* %477, align 1, !tbaa !21\l  %479 = zext i8 %478 to i64\l  %480 = shl nuw nsw i64 %479, 24\l  %481 = or i64 %476, %480\l  %482 = getelementptr inbounds i8, i8 addrspace(4)* %458, i64 4\l  %483 = load i8, i8 addrspace(4)* %482, align 1, !tbaa !21\l  %484 = zext i8 %483 to i64\l  %485 = shl nuw nsw i64 %484, 32\l  %486 = or i64 %481, %485\l  %487 = getelementptr inbounds i8, i8 addrspace(4)* %458, i64 5\l  %488 = load i8, i8 addrspace(4)* %487, align 1, !tbaa !21\l  %489 = zext i8 %488 to i64\l  %490 = shl nuw nsw i64 %489, 40\l  %491 = or i64 %486, %490\l  %492 = getelementptr inbounds i8, i8 addrspace(4)* %458, i64 6\l  %493 = load i8, i8 addrspace(4)* %492, align 1, !tbaa !21\l  %494 = zext i8 %493 to i64\l  %495 = shl nuw nsw i64 %494, 48\l  %496 = or i64 %491, %495\l  %497 = getelementptr inbounds i8, i8 addrspace(4)* %458, i64 7\l  %498 = load i8, i8 addrspace(4)* %497, align 1, !tbaa !21\l  %499 = zext i8 %498 to i64\l  %500 = shl nuw i64 %499, 56\l  %501 = or i64 %496, %500\l  br label %515\l}"];
	Node0x4d6fca0 -> Node0x4d5fbf0;
	Node0x4d6fe80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%502:\l502:                                              \l  %503 = phi i32 [ %513, %502 ], [ 0, %462 ]\l  %504 = phi i64 [ %512, %502 ], [ 0, %462 ]\l  %505 = zext i32 %503 to i64\l  %506 = getelementptr inbounds i8, i8 addrspace(4)* %458, i64 %505\l  %507 = load i8, i8 addrspace(4)* %506, align 1, !tbaa !21\l  %508 = zext i8 %507 to i64\l  %509 = shl i32 %503, 3\l  %510 = zext i32 %509 to i64\l  %511 = shl nuw i64 %508, %510\l  %512 = or i64 %511, %504\l  %513 = add nuw nsw i32 %503, 1\l  %514 = icmp eq i32 %513, %459\l  br i1 %514, label %515, label %502\l|{<s0>T|<s1>F}}"];
	Node0x4d6fe80:s0 -> Node0x4d5fbf0;
	Node0x4d6fe80:s1 -> Node0x4d6fe80;
	Node0x4d5fbf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%515:\l515:                                              \l  %516 = phi i64 [ %501, %464 ], [ 0, %462 ], [ %512, %502 ]\l  %517 = shl nuw nsw i64 %98, 2\l  %518 = add nuw nsw i64 %517, 28\l  %519 = and i64 %518, 480\l  %520 = and i64 %100, -225\l  %521 = or i64 %520, %519\l  %522 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %78,\l... i64 noundef %521, i64 noundef %160, i64 noundef %220, i64 noundef %280, i64\l... noundef %340, i64 noundef %400, i64 noundef %460, i64 noundef %516) #11\l  %523 = sub i64 %90, %98\l  %524 = getelementptr inbounds i8, i8 addrspace(4)* %91, i64 %98\l  %525 = icmp eq i64 %523, 0\l  br i1 %525, label %526, label %89\l|{<s0>T|<s1>F}}"];
	Node0x4d5fbf0:s0 -> Node0x4d5ebe0;
	Node0x4d5fbf0:s1 -> Node0x4d5f780;
	Node0x4d5ebe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%526:\l526:                                              \l  %527 = phi \<2 x i64\> [ %84, %81 ], [ %522, %515 ]\l  %528 = extractelement \<2 x i64\> %527, i64 0\l  %529 = bitcast double %72 to i64\l  %530 = and i64 %528, -227\l  %531 = or i64 %530, 34\l  %532 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %78,\l... i64 noundef %531, i64 noundef %529, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %533\l}"];
	Node0x4d5ebe0 -> Node0x4d5b580;
	Node0x4d5b580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%533:\l533:                                              \l  ret void\l}"];
}
