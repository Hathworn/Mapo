digraph "CFG for '_Z10sum_S_calcPfS_S_S_S_S_S_iiiffS_' function" {
	label="CFG for '_Z10sum_S_calcPfS_S_S_S_S_S_iiiffS_' function";

	Node0x4b88d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%13:\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = icmp slt i32 %14, %7\l  br i1 %15, label %16, label %37\l|{<s0>T|<s1>F}}"];
	Node0x4b88d90:s0 -> Node0x4b89c30;
	Node0x4b88d90:s1 -> Node0x4b89cc0;
	Node0x4b89c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%16:\l16:                                               \l  %17 = sdiv i32 %9, 2\l  %18 = icmp sgt i32 %9, 1\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %20 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %21 = getelementptr i8, i8 addrspace(4)* %20, i64 4\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = icmp eq i32 %19, 0\l  %24 = fneg contract float %10\l  %25 = shl nsw i32 %7, 1\l  %26 = icmp slt i32 %19, %8\l  %27 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 12\l  %28 = bitcast i8 addrspace(4)* %27 to i32 addrspace(4)*\l  %29 = load i32, i32 addrspace(4)* %28, align 4, !tbaa !4\l  %30 = load i16, i16 addrspace(4)* %22, align 4, !range !13, !invariant.load\l... !14\l  %31 = zext i16 %30 to i32\l  %32 = udiv i32 %29, %31\l  %33 = mul i32 %32, %31\l  %34 = icmp ugt i32 %29, %33\l  %35 = zext i1 %34 to i32\l  %36 = zext i16 %30 to i32\l  br label %38\l}"];
	Node0x4b89c30 -> Node0x4b8c280;
	Node0x4b89cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%37:\l37:                                               \l  ret void\l}"];
	Node0x4b8c280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%38:\l38:                                               \l  %39 = phi i32 [ %14, %16 ], [ %90, %88 ]\l  %40 = mul nsw i32 %39, %9\l  br i1 %18, label %47, label %41\l|{<s0>T|<s1>F}}"];
	Node0x4b8c280:s0 -> Node0x4b8c560;
	Node0x4b8c280:s1 -> Node0x4b8c5f0;
	Node0x4b8c5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%41:\l41:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %42 = sext i32 %40 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !15\l  %45 = sext i32 %39 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %4, i64 %45\l  store float %44, float addrspace(1)* %46, align 4, !tbaa !15\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %23, label %66, label %85\l|{<s0>T|<s1>F}}"];
	Node0x4b8c5f0:s0 -> Node0x4b8d630;
	Node0x4b8c5f0:s1 -> Node0x4b8d680;
	Node0x4b8c560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%47:\l47:                                               \l  %48 = phi i32 [ %51, %50 ], [ %17, %38 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %49 = icmp slt i32 %19, %48\l  br i1 %49, label %53, label %50\l|{<s0>T|<s1>F}}"];
	Node0x4b8c560:s0 -> Node0x4b8db40;
	Node0x4b8c560:s1 -> Node0x4b8d7c0;
	Node0x4b8d7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%50:\l50:                                               \l  %51 = ashr i32 %48, 1\l  %52 = icmp sgt i32 %48, 1\l  br i1 %52, label %47, label %41, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x4b8d7c0:s0 -> Node0x4b8c560;
	Node0x4b8d7c0:s1 -> Node0x4b8c5f0;
	Node0x4b8db40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi i32 [ %64, %53 ], [ %19, %47 ]\l  %55 = add i32 %54, %40\l  %56 = add i32 %55, %48\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !15\l  %60 = sext i32 %55 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !15\l  %63 = fadd contract float %59, %62\l  store float %63, float addrspace(1)* %61, align 4, !tbaa !15\l  %64 = add nsw i32 %54, %36\l  %65 = icmp slt i32 %64, %48\l  br i1 %65, label %53, label %50, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x4b8db40:s0 -> Node0x4b8db40;
	Node0x4b8db40:s1 -> Node0x4b8d7c0;
	Node0x4b8d630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%66:\l66:                                               \l  %67 = load float, float addrspace(1)* %46, align 4, !tbaa !15\l  %68 = add nsw i32 %39, %7\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %6, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !15\l  %72 = fsub contract float %67, %71\l  %73 = getelementptr inbounds float, float addrspace(1)* %5, i64 %45\l  %74 = fmul contract float %72, %24\l  store float %74, float addrspace(1)* %73, align 4, !tbaa !15\l  %75 = add nsw i32 %39, %25\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %6, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !15\l  %79 = fadd contract float %74, %78\l  store float %79, float addrspace(1)* %73, align 4, !tbaa !15\l  %80 = getelementptr inbounds float, float addrspace(1)* %12, i64 %45\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !15\l  %82 = fdiv contract float %11, %81\l  %83 = fmul contract float %79, %82\l  %84 = fadd contract float %83, %83\l  store float %84, float addrspace(1)* %73, align 4, !tbaa !15\l  br label %85\l}"];
	Node0x4b8d630 -> Node0x4b8d680;
	Node0x4b8d680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%85:\l85:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %26, label %86, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4b8d680:s0 -> Node0x4b8f6c0;
	Node0x4b8d680:s1 -> Node0x4b8c3d0;
	Node0x4b8f6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%86:\l86:                                               \l  %87 = getelementptr inbounds float, float addrspace(1)* %5, i64 %45\l  br label %92\l}"];
	Node0x4b8f6c0 -> Node0x4b8f860;
	Node0x4b8c3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%88:\l88:                                               \l  %89 = add i32 %32, %39\l  %90 = add i32 %89, %35\l  %91 = icmp slt i32 %90, %7\l  br i1 %91, label %38, label %37, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4b8c3d0:s0 -> Node0x4b8c280;
	Node0x4b8c3d0:s1 -> Node0x4b89cc0;
	Node0x4b8f860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%92:\l92:                                               \l  %93 = phi i32 [ %19, %86 ], [ %111, %92 ]\l  %94 = load float, float addrspace(1)* %87, align 4, !tbaa !15\l  %95 = fmul contract float %94, %10\l  %96 = add nsw i32 %93, %40\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %1, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !15\l  %100 = fmul contract float %99, %95\l  store float %100, float addrspace(1)* %98, align 4, !tbaa !15\l  %101 = load float, float addrspace(1)* %87, align 4, !tbaa !15\l  %102 = fmul contract float %101, %10\l  %103 = getelementptr inbounds float, float addrspace(1)* %2, i64 %97\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !15\l  %105 = fmul contract float %104, %102\l  store float %105, float addrspace(1)* %103, align 4, !tbaa !15\l  %106 = load float, float addrspace(1)* %87, align 4, !tbaa !15\l  %107 = fmul contract float %106, %10\l  %108 = getelementptr inbounds float, float addrspace(1)* %3, i64 %97\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !15\l  %110 = fmul contract float %109, %107\l  store float %110, float addrspace(1)* %108, align 4, !tbaa !15\l  %111 = add i32 %93, %31\l  %112 = icmp slt i32 %111, %8\l  br i1 %112, label %92, label %88, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x4b8f860:s0 -> Node0x4b8f860;
	Node0x4b8f860:s1 -> Node0x4b8c3d0;
}
