digraph "CFG for '_Z9dist_calcPfPiS0_S0_ii' function" {
	label="CFG for '_Z9dist_calcPfPiS0_S0_ii' function";

	Node0x5a43000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = icmp slt i32 %7, %4\l  br i1 %8, label %9, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5a43000:s0 -> Node0x5a42700;
	Node0x5a43000:s1 -> Node0x5a43310;
	Node0x5a42700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%9:\l9:                                                \l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = icmp eq i32 %10, 0\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !5\l  %16 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !14, !invariant.load\l... !15\l  %19 = zext i16 %18 to i32\l  %20 = udiv i32 %15, %19\l  %21 = mul i32 %20, %19\l  %22 = icmp ugt i32 %15, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = icmp slt i32 %10, %4\l  %26 = icmp slt i32 %10, %5\l  %27 = shl nuw nsw i32 %19, 1\l  %28 = add nsw i32 %27, -1\l  %29 = getelementptr inbounds [2048 x i32], [2048 x i32] addrspace(3)*\l... @_ZZ9dist_calcPfPiS0_S0_iiE4temp, i32 0, i32 %28\l  br label %31\l}"];
	Node0x5a42700 -> Node0x5a458f0;
	Node0x5a43310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%30:\l30:                                               \l  ret void\l}"];
	Node0x5a458f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%31:\l31:                                               \l  %32 = phi i32 [ %7, %9 ], [ %95, %94 ]\l  br i1 %11, label %33, label %46\l|{<s0>T|<s1>F}}"];
	Node0x5a458f0:s0 -> Node0x5a44e90;
	Node0x5a458f0:s1 -> Node0x5a44f20;
	Node0x5a44e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%33:\l33:                                               \l  %34 = mul nsw i32 %32, 3\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16\l  store float %37, float addrspace(3)* @_ZZ9dist_calcPfPiS0_S0_iiE5x_ref,\l... align 4, !tbaa !16\l  %38 = add nsw i32 %34, 1\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16\l  store float %41, float addrspace(3)* @_ZZ9dist_calcPfPiS0_S0_iiE5y_ref,\l... align 4, !tbaa !16\l  %42 = add nsw i32 %34, 2\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !16\l  store float %45, float addrspace(3)* @_ZZ9dist_calcPfPiS0_S0_iiE5z_ref,\l... align 4, !tbaa !16\l  br label %46\l}"];
	Node0x5a44e90 -> Node0x5a44f20;
	Node0x5a44f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%46:\l46:                                               \l  %47 = urem i32 %32, %24\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %25, label %48, label %56\l|{<s0>T|<s1>F}}"];
	Node0x5a44f20:s0 -> Node0x5a471d0;
	Node0x5a44f20:s1 -> Node0x5a47260;
	Node0x5a471d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%48:\l48:                                               \l  %49 = load float, float addrspace(3)* @_ZZ9dist_calcPfPiS0_S0_iiE5x_ref,\l... align 4, !tbaa !16\l  %50 = load float, float addrspace(3)* @_ZZ9dist_calcPfPiS0_S0_iiE5y_ref,\l... align 4, !tbaa !16\l  %51 = load float, float addrspace(3)* @_ZZ9dist_calcPfPiS0_S0_iiE5z_ref,\l... align 4, !tbaa !16\l  %52 = mul nsw i32 %47, %5\l  %53 = add nsw i32 %32, %52\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %54\l  br label %62\l}"];
	Node0x5a471d0 -> Node0x5a473f0;
	Node0x5a47260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%56:\l56:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  store i32 0, i32 addrspace(3)* @_ZZ9dist_calcPfPiS0_S0_iiE3idz, align 4,\l... !tbaa !20\l  br i1 %26, label %57, label %94\l|{<s0>T|<s1>F}}"];
	Node0x5a47260:s0 -> Node0x5a47b30;
	Node0x5a47260:s1 -> Node0x5a45af0;
	Node0x5a47b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%57:\l57:                                               \l  %58 = mul nsw i32 %47, %5\l  %59 = sext i32 %32 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %59\l  %61 = shl nsw i32 %32, 10\l  br label %97\l}"];
	Node0x5a47b30 -> Node0x5a47ea0;
	Node0x5a473f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%62:\l62:                                               \l  %63 = phi i32 [ %10, %48 ], [ %92, %91 ]\l  %64 = mul nsw i32 %63, 3\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %0, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !16\l  %68 = fsub contract float %67, %49\l  %69 = fmul contract float %68, %68\l  %70 = add nsw i32 %64, 1\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !16\l  %74 = fsub contract float %73, %50\l  %75 = fmul contract float %74, %74\l  %76 = fadd contract float %69, %75\l  %77 = add nsw i32 %64, 2\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !16\l  %81 = fsub contract float %80, %51\l  %82 = fmul contract float %81, %81\l  %83 = fadd contract float %76, %82\l  %84 = fcmp contract olt float %83, 3.400000e+01\l  %85 = add nsw i32 %63, %52\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %86\l  %88 = zext i1 %84 to i32\l  store i32 %88, i32 addrspace(1)* %87, align 4, !tbaa !20\l  %89 = icmp eq i32 %32, %63\l  br i1 %89, label %90, label %91\l|{<s0>T|<s1>F}}"];
	Node0x5a473f0:s0 -> Node0x5a45db0;
	Node0x5a473f0:s1 -> Node0x5a47f60;
	Node0x5a45db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%90:\l90:                                               \l  store i32 0, i32 addrspace(1)* %55, align 4, !tbaa !20\l  br label %91\l}"];
	Node0x5a45db0 -> Node0x5a47f60;
	Node0x5a47f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%91:\l91:                                               \l  %92 = add i32 %63, %19\l  %93 = icmp slt i32 %92, %4\l  br i1 %93, label %62, label %56, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5a47f60:s0 -> Node0x5a473f0;
	Node0x5a47f60:s1 -> Node0x5a47260;
	Node0x5a45af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%94:\l94:                                               \l  %95 = add i32 %24, %32\l  %96 = icmp slt i32 %95, %4\l  br i1 %96, label %31, label %30, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5a45af0:s0 -> Node0x5a458f0;
	Node0x5a45af0:s1 -> Node0x5a43310;
	Node0x5a47ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%97:\l97:                                               \l  %98 = phi i32 [ %10, %57 ], [ %191, %189 ]\l  %99 = urem i32 %98, %19\l  %100 = load i32, i32 addrspace(3)* @_ZZ9dist_calcPfPiS0_S0_iiE3idz, align 4,\l... !tbaa !20\l  %101 = mul i32 %100, %27\l  %102 = shl nuw nsw i32 %99, 1\l  %103 = add i32 %102, %58\l  %104 = add i32 %103, %101\l  %105 = zext i32 %104 to i64\l  %106 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %105\l  %107 = load i32, i32 addrspace(1)* %106, align 4, !tbaa !20\l  %108 = getelementptr inbounds [2048 x i32], [2048 x i32] addrspace(3)*\l... @_ZZ9dist_calcPfPiS0_S0_iiE4temp, i32 0, i32 %102\l  store i32 %107, i32 addrspace(3)* %108, align 8, !tbaa !20\l  %109 = add i32 %104, 1\l  %110 = zext i32 %109 to i64\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %110\l  %112 = load i32, i32 addrspace(1)* %111, align 4, !tbaa !20\l  %113 = add nuw nsw i32 %102, 1\l  %114 = getelementptr inbounds [2048 x i32], [2048 x i32] addrspace(3)*\l... @_ZZ9dist_calcPfPiS0_S0_iiE4temp, i32 0, i32 %113\l  store i32 %112, i32 addrspace(3)* %114, align 4, !tbaa !20\l  %115 = add nuw nsw i32 %102, 2\l  br label %119\l}"];
	Node0x5a47ea0 -> Node0x5a4af00;
	Node0x5a4b590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%116:\l116:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %117 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !20\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %118 = icmp eq i32 %99, 0\l  br i1 %118, label %137, label %141\l|{<s0>T|<s1>F}}"];
	Node0x5a4b590:s0 -> Node0x5a4ba00;
	Node0x5a4b590:s1 -> Node0x5a4ba50;
	Node0x5a4af00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%119:\l119:                                              \l  %120 = phi i32 [ %19, %97 ], [ %135, %133 ]\l  %121 = phi i32 [ 1, %97 ], [ %134, %133 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %122 = icmp ult i32 %99, %120\l  br i1 %122, label %123, label %133\l|{<s0>T|<s1>F}}"];
	Node0x5a4af00:s0 -> Node0x5a4c030;
	Node0x5a4af00:s1 -> Node0x5a4bb90;
	Node0x5a4c030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%123:\l123:                                              \l  %124 = mul nsw i32 %121, %113\l  %125 = add nsw i32 %124, -1\l  %126 = mul nsw i32 %121, %115\l  %127 = add nsw i32 %126, -1\l  %128 = getelementptr inbounds [2048 x i32], [2048 x i32] addrspace(3)*\l... @_ZZ9dist_calcPfPiS0_S0_iiE4temp, i32 0, i32 %125\l  %129 = load i32, i32 addrspace(3)* %128, align 4, !tbaa !20\l  %130 = getelementptr inbounds [2048 x i32], [2048 x i32] addrspace(3)*\l... @_ZZ9dist_calcPfPiS0_S0_iiE4temp, i32 0, i32 %127\l  %131 = load i32, i32 addrspace(3)* %130, align 4, !tbaa !20\l  %132 = add nsw i32 %131, %129\l  store i32 %132, i32 addrspace(3)* %130, align 4, !tbaa !20\l  br label %133\l}"];
	Node0x5a4c030 -> Node0x5a4bb90;
	Node0x5a4bb90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%133:\l133:                                              \l  %134 = shl nsw i32 %121, 1\l  %135 = lshr i32 %120, 1\l  %136 = icmp ult i32 %120, 2\l  br i1 %136, label %116, label %119, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x5a4bb90:s0 -> Node0x5a4b590;
	Node0x5a4bb90:s1 -> Node0x5a4af00;
	Node0x5a4ba00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%137:\l137:                                              \l  %138 = load i32, i32 addrspace(3)* %29, align 4, !tbaa !20\l  %139 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !20\l  %140 = add nsw i32 %139, %138\l  store i32 %140, i32 addrspace(1)* %60, align 4, !tbaa !20\l  store i32 0, i32 addrspace(3)* %29, align 4, !tbaa !20\l  br label %141\l}"];
	Node0x5a4ba00 -> Node0x5a4ba50;
	Node0x5a4ba50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%141:\l141:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %150\l}"];
	Node0x5a4ba50 -> Node0x5a4d2b0;
	Node0x5a4d370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%142:\l142:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %143 = load i32, i32 addrspace(3)* @_ZZ9dist_calcPfPiS0_S0_iiE3idz, align 4,\l... !tbaa !20\l  %144 = mul i32 %143, %27\l  %145 = add i32 %103, %144\l  %146 = zext i32 %145 to i64\l  %147 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %146\l  %148 = load i32, i32 addrspace(1)* %147, align 4, !tbaa !20\l  %149 = icmp eq i32 %148, 1\l  br i1 %149, label %169, label %176\l|{<s0>T|<s1>F}}"];
	Node0x5a4d370:s0 -> Node0x5a4d8d0;
	Node0x5a4d370:s1 -> Node0x5a4d920;
	Node0x5a4d2b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%150:\l150:                                              \l  %151 = phi i32 [ 1, %141 ], [ %167, %166 ]\l  %152 = phi i32 [ %134, %141 ], [ %153, %166 ]\l  %153 = lshr i32 %152, 1\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %154 = icmp slt i32 %99, %151\l  br i1 %154, label %155, label %166\l|{<s0>T|<s1>F}}"];
	Node0x5a4d2b0:s0 -> Node0x5a4dee0;
	Node0x5a4d2b0:s1 -> Node0x5a4da20;
	Node0x5a4dee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%155:\l155:                                              \l  %156 = mul nsw i32 %153, %113\l  %157 = add nsw i32 %156, -1\l  %158 = mul nsw i32 %153, %115\l  %159 = add nsw i32 %158, -1\l  %160 = getelementptr inbounds [2048 x i32], [2048 x i32] addrspace(3)*\l... @_ZZ9dist_calcPfPiS0_S0_iiE4temp, i32 0, i32 %157\l  %161 = load i32, i32 addrspace(3)* %160, align 4, !tbaa !20\l  %162 = getelementptr inbounds [2048 x i32], [2048 x i32] addrspace(3)*\l... @_ZZ9dist_calcPfPiS0_S0_iiE4temp, i32 0, i32 %159\l  %163 = load i32, i32 addrspace(3)* %162, align 4, !tbaa !20\l  store i32 %163, i32 addrspace(3)* %160, align 4, !tbaa !20\l  %164 = load i32, i32 addrspace(3)* %162, align 4, !tbaa !20\l  %165 = add nsw i32 %164, %161\l  store i32 %165, i32 addrspace(3)* %162, align 4, !tbaa !20\l  br label %166\l}"];
	Node0x5a4dee0 -> Node0x5a4da20;
	Node0x5a4da20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%166:\l166:                                              \l  %167 = shl nsw i32 %151, 1\l  %168 = icmp ult i32 %167, %27\l  br i1 %168, label %150, label %142, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x5a4da20:s0 -> Node0x5a4d2b0;
	Node0x5a4da20:s1 -> Node0x5a4d370;
	Node0x5a4d8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%169:\l169:                                              \l  %170 = add i32 %144, %102\l  %171 = load i32, i32 addrspace(3)* %108, align 8, !tbaa !20\l  %172 = add i32 %117, %61\l  %173 = add i32 %172, %171\l  %174 = sext i32 %173 to i64\l  %175 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %174\l  store i32 %170, i32 addrspace(1)* %175, align 4, !tbaa !20\l  br label %176\l}"];
	Node0x5a4d8d0 -> Node0x5a4d920;
	Node0x5a4d920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%176:\l176:                                              \l  %177 = add i32 %145, 1\l  %178 = zext i32 %177 to i64\l  %179 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %178\l  %180 = load i32, i32 addrspace(1)* %179, align 4, !tbaa !20\l  %181 = icmp eq i32 %180, 1\l  br i1 %181, label %182, label %189\l|{<s0>T|<s1>F}}"];
	Node0x5a4d920:s0 -> Node0x5a4e220;
	Node0x5a4d920:s1 -> Node0x5a4a8c0;
	Node0x5a4e220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%182:\l182:                                              \l  %183 = add i32 %144, %113\l  %184 = load i32, i32 addrspace(3)* %114, align 4, !tbaa !20\l  %185 = add i32 %117, %61\l  %186 = add i32 %185, %184\l  %187 = sext i32 %186 to i64\l  %188 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %187\l  store i32 %183, i32 addrspace(1)* %188, align 4, !tbaa !20\l  br label %189\l}"];
	Node0x5a4e220 -> Node0x5a4a8c0;
	Node0x5a4a8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%189:\l189:                                              \l  %190 = add nsw i32 %143, 1\l  store i32 %190, i32 addrspace(3)* @_ZZ9dist_calcPfPiS0_S0_iiE3idz, align 4,\l... !tbaa !20\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %191 = add i32 %98, %27\l  %192 = icmp slt i32 %191, %5\l  br i1 %192, label %97, label %94, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x5a4a8c0:s0 -> Node0x5a47ea0;
	Node0x5a4a8c0:s1 -> Node0x5a45af0;
}
