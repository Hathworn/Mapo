digraph "CFG for '_Z26cn_pnpoly_reference_kernelPiP15HIP_vector_typeIfLj2EES2_i' function" {
	label="CFG for '_Z26cn_pnpoly_reference_kernelPiP15HIP_vector_typeIfLj2EES2_i' function";

	Node0x502fe00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %3\l  br i1 %14, label %15, label %106\l|{<s0>T|<s1>F}}"];
	Node0x502fe00:s0 -> Node0x5031d00;
	Node0x502fe00:s1 -> Node0x5031d90;
	Node0x5031d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %16, i32 0, i32 0, i32 0, i64 0\l  %18 = load float, float addrspace(1)* %17, align 8, !amdgpu.noclobber !5\l  %19 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %16, i32 0, i32 0, i32 0, i64 1\l  %20 = load float, float addrspace(1)* %19, align 4, !amdgpu.noclobber !5\l  %21 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 599, i32 0, i32 0, i32 0, i64 1\l  %22 = load float, float addrspace(1)* %21, align 4\l  br label %25\l}"];
	Node0x5031d00 -> Node0x5032b80;
	Node0x5032c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%23:\l23:                                               \l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %16\l  store i32 %103, i32 addrspace(1)* %24, align 4, !tbaa !7\l  br label %106\l}"];
	Node0x5032c40 -> Node0x5031d90;
	Node0x5032b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi float [ %22, %15 ], [ %84, %102 ]\l  %27 = phi i32 [ 0, %15 ], [ %103, %102 ]\l  %28 = phi i32 [ 599, %15 ], [ %79, %102 ]\l  %29 = phi i32 [ 0, %15 ], [ %104, %102 ]\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %30, i32 0, i32 0, i32 0, i64 0\l  %32 = load float, float addrspace(1)* %31, align 8, !amdgpu.noclobber !5\l  %33 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %30, i32 0, i32 0, i32 0, i64 1\l  %34 = load float, float addrspace(1)* %33, align 4, !amdgpu.noclobber !5\l  %35 = fcmp contract ule float %34, %20\l  %36 = fcmp contract ogt float %26, %20\l  %37 = xor i1 %35, %36\l  br i1 %37, label %52, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5032b80:s0 -> Node0x5033b00;
	Node0x5032b80:s1 -> Node0x5033b50;
	Node0x5033b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%38:\l38:                                               \l  %39 = zext i32 %28 to i64\l  %40 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %39, i32 0, i32 0, i32 0, i64 0\l  %41 = load float, float addrspace(1)* %40, align 8, !amdgpu.noclobber !5\l  %42 = fsub contract float %41, %32\l  %43 = fsub contract float %26, %34\l  %44 = fdiv contract float %42, %43\l  %45 = fsub contract float %20, %34\l  %46 = fmul contract float %45, %44\l  %47 = fadd contract float %32, %46\l  %48 = fcmp contract olt float %18, %47\l  %49 = icmp eq i32 %27, 0\l  %50 = zext i1 %49 to i32\l  %51 = select i1 %48, i32 %50, i32 %27\l  br label %52\l}"];
	Node0x5033b50 -> Node0x5033b00;
	Node0x5033b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi i32 [ %27, %25 ], [ %51, %38 ]\l  %54 = add nuw nsw i32 %29, 1\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %55, i32 0, i32 0, i32 0, i64 0\l  %57 = load float, float addrspace(1)* %56, align 8, !amdgpu.noclobber !5\l  %58 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %55, i32 0, i32 0, i32 0, i64 1\l  %59 = load float, float addrspace(1)* %58, align 4, !amdgpu.noclobber !5\l  %60 = fcmp contract ule float %59, %20\l  %61 = fcmp contract ogt float %34, %20\l  %62 = xor i1 %60, %61\l  br i1 %62, label %77, label %63\l|{<s0>T|<s1>F}}"];
	Node0x5033b00:s0 -> Node0x5034b50;
	Node0x5033b00:s1 -> Node0x5034ba0;
	Node0x5034ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%63:\l63:                                               \l  %64 = zext i32 %29 to i64\l  %65 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %64, i32 0, i32 0, i32 0, i64 0\l  %66 = load float, float addrspace(1)* %65, align 8, !amdgpu.noclobber !5\l  %67 = fsub contract float %66, %57\l  %68 = fsub contract float %34, %59\l  %69 = fdiv contract float %67, %68\l  %70 = fsub contract float %20, %59\l  %71 = fmul contract float %70, %69\l  %72 = fadd contract float %57, %71\l  %73 = fcmp contract olt float %18, %72\l  %74 = icmp eq i32 %53, 0\l  %75 = zext i1 %74 to i32\l  %76 = select i1 %73, i32 %75, i32 %53\l  br label %77\l}"];
	Node0x5034ba0 -> Node0x5034b50;
	Node0x5034b50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi i32 [ %53, %52 ], [ %76, %63 ]\l  %79 = add nuw nsw i32 %29, 2\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %80, i32 0, i32 0, i32 0, i64 0\l  %82 = load float, float addrspace(1)* %81, align 8, !amdgpu.noclobber !5\l  %83 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %80, i32 0, i32 0, i32 0, i64 1\l  %84 = load float, float addrspace(1)* %83, align 4, !amdgpu.noclobber !5\l  %85 = fcmp contract ule float %84, %20\l  %86 = fcmp contract ogt float %59, %20\l  %87 = xor i1 %85, %86\l  br i1 %87, label %102, label %88\l|{<s0>T|<s1>F}}"];
	Node0x5034b50:s0 -> Node0x5033010;
	Node0x5034b50:s1 -> Node0x5035d70;
	Node0x5035d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%88:\l88:                                               \l  %89 = zext i32 %54 to i64\l  %90 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %89, i32 0, i32 0, i32 0, i64 0\l  %91 = load float, float addrspace(1)* %90, align 8, !amdgpu.noclobber !5\l  %92 = fsub contract float %91, %82\l  %93 = fsub contract float %59, %84\l  %94 = fdiv contract float %92, %93\l  %95 = fsub contract float %20, %84\l  %96 = fmul contract float %95, %94\l  %97 = fadd contract float %82, %96\l  %98 = fcmp contract olt float %18, %97\l  %99 = icmp eq i32 %78, 0\l  %100 = zext i1 %99 to i32\l  %101 = select i1 %98, i32 %100, i32 %78\l  br label %102\l}"];
	Node0x5035d70 -> Node0x5033010;
	Node0x5033010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  %103 = phi i32 [ %78, %77 ], [ %101, %88 ]\l  %104 = add nuw nsw i32 %29, 3\l  %105 = icmp eq i32 %104, 600\l  br i1 %105, label %23, label %25, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5033010:s0 -> Node0x5032c40;
	Node0x5033010:s1 -> Node0x5032b80;
	Node0x5031d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%106:\l106:                                              \l  ret void\l}"];
}
