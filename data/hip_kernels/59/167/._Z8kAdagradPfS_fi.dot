digraph "CFG for '_Z8kAdagradPfS_fi' function" {
	label="CFG for '_Z8kAdagradPfS_fi' function";

	Node0x6256a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = mul i32 %5, %10\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %16 = add i32 %14, %15\l  %17 = udiv i32 %13, %10\l  %18 = mul i32 %17, %10\l  %19 = icmp ugt i32 %13, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %10\l  %23 = icmp ult i32 %16, %3\l  br i1 %23, label %25, label %24\l|{<s0>T|<s1>F}}"];
	Node0x6256a80:s0 -> Node0x6259040;
	Node0x6256a80:s1 -> Node0x62590d0;
	Node0x62590d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x6259040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %58, %25 ], [ %16, %4 ]\l  %27 = zext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16\l  %30 = fsub contract float %29, %2\l  %31 = fmul contract float %30, %30\l  %32 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !16\l  %34 = fmul contract float %33, %33\l  %35 = fadd contract float %31, %34\l  %36 = fcmp olt float %35, 0x39F0000000000000\l  %37 = select i1 %36, float 0x41F0000000000000, float 1.000000e+00\l  %38 = fmul float %35, %37\l  %39 = tail call float @llvm.sqrt.f32(float %38)\l  %40 = bitcast float %39 to i32\l  %41 = add nsw i32 %40, -1\l  %42 = bitcast i32 %41 to float\l  %43 = add nsw i32 %40, 1\l  %44 = bitcast i32 %43 to float\l  %45 = tail call i1 @llvm.amdgcn.class.f32(float %38, i32 608)\l  %46 = select i1 %36, float 0x3EF0000000000000, float 1.000000e+00\l  %47 = fneg float %44\l  %48 = tail call float @llvm.fma.f32(float %47, float %39, float %38)\l  %49 = fcmp ogt float %48, 0.000000e+00\l  %50 = fneg float %42\l  %51 = tail call float @llvm.fma.f32(float %50, float %39, float %38)\l  %52 = fcmp ole float %51, 0.000000e+00\l  %53 = select i1 %52, float %42, float %39\l  %54 = select i1 %49, float %44, float %53\l  %55 = fmul float %46, %54\l  %56 = select i1 %45, float %38, float %55\l  %57 = fadd contract float %56, %2\l  store float %57, float addrspace(1)* %28, align 4, !tbaa !16\l  %58 = add i32 %26, %22\l  %59 = icmp ult i32 %58, %3\l  br i1 %59, label %25, label %24, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x6259040:s0 -> Node0x6259040;
	Node0x6259040:s1 -> Node0x62590d0;
}
