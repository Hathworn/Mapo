digraph "CFG for '_Z18kAccumulateColumnsPfS_S_iiifi' function" {
	label="CFG for '_Z18kAccumulateColumnsPfS_S_iiifi' function";

	Node0x5803d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%8:\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !4\l  %13 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !13, !invariant.load\l... !14\l  %16 = zext i16 %15 to i32\l  %17 = udiv i32 %12, %16\l  %18 = mul i32 %17, %16\l  %19 = icmp ugt i32 %12, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = mul i32 %21, %22\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %25 = add i32 %23, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %27 = icmp slt i32 %25, %5\l  %28 = icmp slt i32 %26, %4\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %157\l|{<s0>T|<s1>F}}"];
	Node0x5803d80:s0 -> Node0x58065f0;
	Node0x5803d80:s1 -> Node0x5806680;
	Node0x58065f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%30:\l30:                                               \l  %31 = icmp eq i32 %3, 0\l  br i1 %31, label %68, label %32\l|{<s0>T|<s1>F}}"];
	Node0x58065f0:s0 -> Node0x5806880;
	Node0x58065f0:s1 -> Node0x58068d0;
	Node0x58068d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%32:\l32:                                               \l  %33 = and i32 %3, 3\l  %34 = icmp ult i32 %3, 4\l  br i1 %34, label %37, label %35\l|{<s0>T|<s1>F}}"];
	Node0x58068d0:s0 -> Node0x5806cb0;
	Node0x58068d0:s1 -> Node0x5806d00;
	Node0x5806d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%35:\l35:                                               \l  %36 = and i32 %3, -4\l  br label %82\l}"];
	Node0x5806d00 -> Node0x5806f00;
	Node0x5806cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%37:\l37:                                               \l  %38 = phi float [ undef, %32 ], [ %153, %151 ]\l  %39 = phi i32 [ undef, %32 ], [ %144, %151 ]\l  %40 = phi i32 [ 0, %32 ], [ %154, %151 ]\l  %41 = phi i32 [ 0, %32 ], [ %144, %151 ]\l  %42 = phi float [ 0.000000e+00, %32 ], [ %153, %151 ]\l  %43 = icmp eq i32 %33, 0\l  br i1 %43, label %68, label %44\l|{<s0>T|<s1>F}}"];
	Node0x5806cb0:s0 -> Node0x5806880;
	Node0x5806cb0:s1 -> Node0x58083d0;
	Node0x58083d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi i32 [ %65, %62 ], [ %40, %37 ]\l  %46 = phi i32 [ %55, %62 ], [ %41, %37 ]\l  %47 = phi float [ %64, %62 ], [ %42, %37 ]\l  %48 = phi i32 [ %66, %62 ], [ 0, %37 ]\l  %49 = zext i32 %45 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %52 = fptosi float %51 to i32\l  %53 = icmp eq i32 %26, %52\l  %54 = zext i1 %53 to i32\l  %55 = add i32 %46, %54\l  br i1 %53, label %56, label %62\l|{<s0>T|<s1>F}}"];
	Node0x58083d0:s0 -> Node0x5809560;
	Node0x58083d0:s1 -> Node0x5808540;
	Node0x5809560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%56:\l56:                                               \l  %57 = mul i32 %45, %5\l  %58 = add i32 %57, %25\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %62\l}"];
	Node0x5809560 -> Node0x5808540;
	Node0x5808540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  %63 = phi contract float [ %61, %56 ], [ 0.000000e+00, %44 ]\l  %64 = fadd contract float %47, %63\l  %65 = add nuw i32 %45, 1\l  %66 = add i32 %48, 1\l  %67 = icmp eq i32 %66, %33\l  br i1 %67, label %68, label %44, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5808540:s0 -> Node0x5806880;
	Node0x5808540:s1 -> Node0x58083d0;
	Node0x5806880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%68:\l68:                                               \l  %69 = phi float [ 0.000000e+00, %30 ], [ %38, %37 ], [ %64, %62 ]\l  %70 = phi i32 [ 0, %30 ], [ %39, %37 ], [ %55, %62 ]\l  %71 = fmul contract float %69, %6\l  %72 = icmp eq i32 %7, 1\l  %73 = icmp ne i32 %70, 0\l  %74 = select i1 %72, i1 %73, i1 false\l  %75 = uitofp i32 %70 to float\l  %76 = select i1 %74, float %75, float 1.000000e+00\l  %77 = fdiv contract float %71, %76\l  %78 = mul nsw i32 %26, %5\l  %79 = add nsw i32 %25, %78\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %2, i64 %80\l  store float %77, float addrspace(1)* %81, align 4, !tbaa !16\l  br label %157\l}"];
	Node0x5806880 -> Node0x5806680;
	Node0x5806f00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%82:\l82:                                               \l  %83 = phi i32 [ 0, %35 ], [ %154, %151 ]\l  %84 = phi i32 [ 0, %35 ], [ %144, %151 ]\l  %85 = phi float [ 0.000000e+00, %35 ], [ %153, %151 ]\l  %86 = phi i32 [ 0, %35 ], [ %155, %151 ]\l  %87 = zext i32 %83 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %90 = fptosi float %89 to i32\l  %91 = icmp eq i32 %26, %90\l  %92 = zext i1 %91 to i32\l  %93 = add i32 %84, %92\l  br i1 %91, label %94, label %100\l|{<s0>T|<s1>F}}"];
	Node0x5806f00:s0 -> Node0x580b4c0;
	Node0x5806f00:s1 -> Node0x580b550;
	Node0x580b4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%94:\l94:                                               \l  %95 = mul i32 %83, %5\l  %96 = add i32 %95, %25\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %100\l}"];
	Node0x580b4c0 -> Node0x580b550;
	Node0x580b550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%100:\l100:                                              \l  %101 = phi contract float [ %99, %94 ], [ 0.000000e+00, %82 ]\l  %102 = fadd contract float %85, %101\l  %103 = or i32 %83, 1\l  %104 = zext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %1, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %107 = fptosi float %106 to i32\l  %108 = icmp eq i32 %26, %107\l  %109 = zext i1 %108 to i32\l  %110 = add i32 %93, %109\l  br i1 %108, label %111, label %117\l|{<s0>T|<s1>F}}"];
	Node0x580b550:s0 -> Node0x580bef0;
	Node0x580b550:s1 -> Node0x580bf80;
	Node0x580bef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%111:\l111:                                              \l  %112 = mul i32 %103, %5\l  %113 = add i32 %112, %25\l  %114 = zext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %117\l}"];
	Node0x580bef0 -> Node0x580bf80;
	Node0x580bf80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%117:\l117:                                              \l  %118 = phi contract float [ %116, %111 ], [ 0.000000e+00, %100 ]\l  %119 = fadd contract float %102, %118\l  %120 = or i32 %83, 2\l  %121 = zext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %1, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %124 = fptosi float %123 to i32\l  %125 = icmp eq i32 %26, %124\l  %126 = zext i1 %125 to i32\l  %127 = add i32 %110, %126\l  br i1 %125, label %128, label %134\l|{<s0>T|<s1>F}}"];
	Node0x580bf80:s0 -> Node0x580c920;
	Node0x580bf80:s1 -> Node0x580c9b0;
	Node0x580c920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%128:\l128:                                              \l  %129 = mul i32 %120, %5\l  %130 = add i32 %129, %25\l  %131 = zext i32 %130 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %0, i64 %131\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %134\l}"];
	Node0x580c920 -> Node0x580c9b0;
	Node0x580c9b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%134:\l134:                                              \l  %135 = phi contract float [ %133, %128 ], [ 0.000000e+00, %117 ]\l  %136 = fadd contract float %119, %135\l  %137 = or i32 %83, 3\l  %138 = zext i32 %137 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %1, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %141 = fptosi float %140 to i32\l  %142 = icmp eq i32 %26, %141\l  %143 = zext i1 %142 to i32\l  %144 = add i32 %127, %143\l  br i1 %142, label %145, label %151\l|{<s0>T|<s1>F}}"];
	Node0x580c9b0:s0 -> Node0x580a480;
	Node0x580c9b0:s1 -> Node0x5807410;
	Node0x580a480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%145:\l145:                                              \l  %146 = mul i32 %137, %5\l  %147 = add i32 %146, %25\l  %148 = zext i32 %147 to i64\l  %149 = getelementptr inbounds float, float addrspace(1)* %0, i64 %148\l  %150 = load float, float addrspace(1)* %149, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %151\l}"];
	Node0x580a480 -> Node0x5807410;
	Node0x5807410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%151:\l151:                                              \l  %152 = phi contract float [ %150, %145 ], [ 0.000000e+00, %134 ]\l  %153 = fadd contract float %136, %152\l  %154 = add nuw i32 %83, 4\l  %155 = add i32 %86, 4\l  %156 = icmp eq i32 %155, %36\l  br i1 %156, label %37, label %82, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5807410:s0 -> Node0x5806cb0;
	Node0x5807410:s1 -> Node0x5806f00;
	Node0x5806680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%157:\l157:                                              \l  ret void\l}"];
}
