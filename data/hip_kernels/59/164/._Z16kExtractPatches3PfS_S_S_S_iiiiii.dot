digraph "CFG for '_Z16kExtractPatches3PfS_S_S_S_iiiiii' function" {
	label="CFG for '_Z16kExtractPatches3PfS_S_S_S_iiiiii' function";

	Node0x4805510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %12, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %20 = add i32 %18, %19\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !4, !invariant.load !5\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %21, %25\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %28 = add i32 %26, %27\l  %29 = icmp slt i32 %20, %8\l  %30 = icmp slt i32 %28, %9\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4805510:s0 -> Node0x4809b30;
	Node0x4805510:s1 -> Node0x4809bc0;
	Node0x4809b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%32:\l32:                                               \l  %33 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %34 = mul nsw i32 %10, %5\l  %35 = icmp ult i32 %33, %34\l  br i1 %35, label %36, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4809b30:s0 -> Node0x480a100;
	Node0x4809b30:s1 -> Node0x4809bc0;
	Node0x480a100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%36:\l36:                                               \l  %37 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 20\l  %38 = bitcast i8 addrspace(4)* %37 to i32 addrspace(4)*\l  %39 = load i32, i32 addrspace(4)* %38, align 4, !tbaa !7\l  %40 = getelementptr i8, i8 addrspace(4)* %13, i64 8\l  %41 = bitcast i8 addrspace(4)* %40 to i16 addrspace(4)*\l  %42 = load i16, i16 addrspace(4)* %41, align 4, !range !4, !invariant.load !5\l  %43 = zext i16 %42 to i32\l  %44 = udiv i32 %39, %43\l  %45 = mul i32 %44, %43\l  %46 = icmp ugt i32 %39, %45\l  %47 = zext i1 %46 to i32\l  br label %48\l}"];
	Node0x480a100 -> Node0x480a9d0;
	Node0x480a9d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i32 [ %33, %36 ], [ %86, %48 ]\l  %50 = freeze i32 %49\l  %51 = freeze i32 %10\l  %52 = udiv i32 %50, %51\l  %53 = mul i32 %52, %51\l  %54 = sub i32 %50, %53\l  %55 = sext i32 %52 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %3, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !16\l  %58 = fptosi float %57 to i32\l  %59 = add nsw i32 %28, %58\l  %60 = getelementptr inbounds float, float addrspace(1)* %2, i64 %55\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !16\l  %62 = fptosi float %61 to i32\l  %63 = add nsw i32 %20, %62\l  %64 = getelementptr inbounds float, float addrspace(1)* %4, i64 %55\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !16\l  %66 = fcmp contract ogt float %65, 5.000000e-01\l  %67 = xor i32 %63, -1\l  %68 = add i32 %67, %6\l  %69 = select i1 %66, i32 %68, i32 %63\l  %70 = mul nsw i32 %52, %10\l  %71 = add nsw i32 %70, %54\l  %72 = mul nsw i32 %71, %7\l  %73 = add nsw i32 %59, %72\l  %74 = mul nsw i32 %73, %6\l  %75 = add nsw i32 %69, %74\l  %76 = sext i32 %75 to i64\l  %77 = mul nsw i32 %71, %9\l  %78 = add nsw i32 %77, %28\l  %79 = mul nsw i32 %78, %8\l  %80 = add nsw i32 %79, %20\l  %81 = sext i32 %80 to i64\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !16\l  %84 = getelementptr inbounds float, float addrspace(1)* %1, i64 %81\l  store float %83, float addrspace(1)* %84, align 4, !tbaa !16\l  %85 = add i32 %44, %49\l  %86 = add i32 %85, %47\l  %87 = icmp ult i32 %86, %34\l  br i1 %87, label %48, label %88, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x480a9d0:s0 -> Node0x480a9d0;
	Node0x480a9d0:s1 -> Node0x4809bc0;
	Node0x4809bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%88:\l88:                                               \l  ret void\l}"];
}
