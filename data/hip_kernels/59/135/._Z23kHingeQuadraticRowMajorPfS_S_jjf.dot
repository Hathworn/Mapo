digraph "CFG for '_Z23kHingeQuadraticRowMajorPfS_S_jjf' function" {
	label="CFG for '_Z23kHingeQuadraticRowMajorPfS_S_jjf' function";

	Node0x4e77fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp ult i32 %15, %4\l  br i1 %16, label %17, label %172\l|{<s0>T|<s1>F}}"];
	Node0x4e77fe0:s0 -> Node0x4e78430;
	Node0x4e77fe0:s1 -> Node0x4e7a000;
	Node0x4e78430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%17:\l17:                                               \l  %18 = sext i32 %15 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %20 = getelementptr inbounds float, float addrspace(1)* %2, i64 %18\l  %21 = getelementptr inbounds float, float addrspace(1)* %1, i64 %18\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %23 = fptosi float %22 to i32\l  %24 = mul i32 %23, %4\l  %25 = zext i32 %24 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %19, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %28 = icmp eq i32 %3, 0\l  br i1 %28, label %58, label %29\l|{<s0>T|<s1>F}}"];
	Node0x4e78430:s0 -> Node0x4e7b4f0;
	Node0x4e78430:s1 -> Node0x4e7b580;
	Node0x4e7b580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%29:\l29:                                               \l  %30 = and i32 %3, 7\l  %31 = icmp ult i32 %3, 8\l  br i1 %31, label %34, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4e7b580:s0 -> Node0x4e7b840;
	Node0x4e7b580:s1 -> Node0x4e7b890;
	Node0x4e7b890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%32:\l32:                                               \l  %33 = and i32 %3, -8\l  br label %62\l}"];
	Node0x4e7b890 -> Node0x4e79fb0;
	Node0x4e7b840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%34:\l34:                                               \l  %35 = phi float [ undef, %29 ], [ %168, %62 ]\l  %36 = phi i32 [ 0, %29 ], [ %169, %62 ]\l  %37 = phi float [ 0.000000e+00, %29 ], [ %168, %62 ]\l  %38 = icmp eq i32 %30, 0\l  br i1 %38, label %58, label %39\l|{<s0>T|<s1>F}}"];
	Node0x4e7b840:s0 -> Node0x4e7b4f0;
	Node0x4e7b840:s1 -> Node0x4e7ce00;
	Node0x4e7ce00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i32 [ %55, %39 ], [ %36, %34 ]\l  %41 = phi float [ %54, %39 ], [ %37, %34 ]\l  %42 = phi i32 [ %56, %39 ], [ 0, %34 ]\l  %43 = mul i32 %40, %4\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %19, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %47 = fadd contract float %46, %5\l  %48 = fsub contract float %47, %27\l  %49 = fcmp contract ogt float %48, 0.000000e+00\l  %50 = select contract i1 %49, float %48, float 0.000000e+00\l  %51 = icmp eq i32 %40, %23\l  %52 = select contract i1 %51, float 0.000000e+00, float %50\l  %53 = getelementptr inbounds float, float addrspace(1)* %20, i64 %44\l  store float %52, float addrspace(1)* %53, align 4, !tbaa !7\l  %54 = fadd contract float %41, %52\l  %55 = add nuw i32 %40, 1\l  %56 = add i32 %42, 1\l  %57 = icmp eq i32 %56, %30\l  br i1 %57, label %58, label %39, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4e7ce00:s0 -> Node0x4e7b4f0;
	Node0x4e7ce00:s1 -> Node0x4e7ce00;
	Node0x4e7b4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%58:\l58:                                               \l  %59 = phi float [ 0.000000e+00, %17 ], [ %35, %34 ], [ %54, %39 ]\l  %60 = fneg contract float %59\l  %61 = getelementptr inbounds float, float addrspace(1)* %20, i64 %25\l  store float %60, float addrspace(1)* %61, align 4, !tbaa !7\l  br label %172\l}"];
	Node0x4e7b4f0 -> Node0x4e7a000;
	Node0x4e79fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%62:\l62:                                               \l  %63 = phi i32 [ 0, %32 ], [ %169, %62 ]\l  %64 = phi float [ 0.000000e+00, %32 ], [ %168, %62 ]\l  %65 = phi i32 [ 0, %32 ], [ %170, %62 ]\l  %66 = mul i32 %63, %4\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %19, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7\l  %70 = fadd contract float %69, %5\l  %71 = fsub contract float %70, %27\l  %72 = fcmp contract ogt float %71, 0.000000e+00\l  %73 = select contract i1 %72, float %71, float 0.000000e+00\l  %74 = icmp eq i32 %63, %23\l  %75 = select contract i1 %74, float 0.000000e+00, float %73\l  %76 = getelementptr inbounds float, float addrspace(1)* %20, i64 %67\l  store float %75, float addrspace(1)* %76, align 4, !tbaa !7\l  %77 = fadd contract float %64, %75\l  %78 = or i32 %63, 1\l  %79 = mul i32 %78, %4\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %19, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  %83 = fadd contract float %82, %5\l  %84 = fsub contract float %83, %27\l  %85 = fcmp contract ogt float %84, 0.000000e+00\l  %86 = select contract i1 %85, float %84, float 0.000000e+00\l  %87 = icmp eq i32 %78, %23\l  %88 = select contract i1 %87, float 0.000000e+00, float %86\l  %89 = getelementptr inbounds float, float addrspace(1)* %20, i64 %80\l  store float %88, float addrspace(1)* %89, align 4, !tbaa !7\l  %90 = fadd contract float %77, %88\l  %91 = or i32 %63, 2\l  %92 = mul i32 %91, %4\l  %93 = zext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %19, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7\l  %96 = fadd contract float %95, %5\l  %97 = fsub contract float %96, %27\l  %98 = fcmp contract ogt float %97, 0.000000e+00\l  %99 = select contract i1 %98, float %97, float 0.000000e+00\l  %100 = icmp eq i32 %91, %23\l  %101 = select contract i1 %100, float 0.000000e+00, float %99\l  %102 = getelementptr inbounds float, float addrspace(1)* %20, i64 %93\l  store float %101, float addrspace(1)* %102, align 4, !tbaa !7\l  %103 = fadd contract float %90, %101\l  %104 = or i32 %63, 3\l  %105 = mul i32 %104, %4\l  %106 = zext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %19, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7\l  %109 = fadd contract float %108, %5\l  %110 = fsub contract float %109, %27\l  %111 = fcmp contract ogt float %110, 0.000000e+00\l  %112 = select contract i1 %111, float %110, float 0.000000e+00\l  %113 = icmp eq i32 %104, %23\l  %114 = select contract i1 %113, float 0.000000e+00, float %112\l  %115 = getelementptr inbounds float, float addrspace(1)* %20, i64 %106\l  store float %114, float addrspace(1)* %115, align 4, !tbaa !7\l  %116 = fadd contract float %103, %114\l  %117 = or i32 %63, 4\l  %118 = mul i32 %117, %4\l  %119 = zext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %19, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7\l  %122 = fadd contract float %121, %5\l  %123 = fsub contract float %122, %27\l  %124 = fcmp contract ogt float %123, 0.000000e+00\l  %125 = select contract i1 %124, float %123, float 0.000000e+00\l  %126 = icmp eq i32 %117, %23\l  %127 = select contract i1 %126, float 0.000000e+00, float %125\l  %128 = getelementptr inbounds float, float addrspace(1)* %20, i64 %119\l  store float %127, float addrspace(1)* %128, align 4, !tbaa !7\l  %129 = fadd contract float %116, %127\l  %130 = or i32 %63, 5\l  %131 = mul i32 %130, %4\l  %132 = zext i32 %131 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %19, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !7\l  %135 = fadd contract float %134, %5\l  %136 = fsub contract float %135, %27\l  %137 = fcmp contract ogt float %136, 0.000000e+00\l  %138 = select contract i1 %137, float %136, float 0.000000e+00\l  %139 = icmp eq i32 %130, %23\l  %140 = select contract i1 %139, float 0.000000e+00, float %138\l  %141 = getelementptr inbounds float, float addrspace(1)* %20, i64 %132\l  store float %140, float addrspace(1)* %141, align 4, !tbaa !7\l  %142 = fadd contract float %129, %140\l  %143 = or i32 %63, 6\l  %144 = mul i32 %143, %4\l  %145 = zext i32 %144 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %19, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !7\l  %148 = fadd contract float %147, %5\l  %149 = fsub contract float %148, %27\l  %150 = fcmp contract ogt float %149, 0.000000e+00\l  %151 = select contract i1 %150, float %149, float 0.000000e+00\l  %152 = icmp eq i32 %143, %23\l  %153 = select contract i1 %152, float 0.000000e+00, float %151\l  %154 = getelementptr inbounds float, float addrspace(1)* %20, i64 %145\l  store float %153, float addrspace(1)* %154, align 4, !tbaa !7\l  %155 = fadd contract float %142, %153\l  %156 = or i32 %63, 7\l  %157 = mul i32 %156, %4\l  %158 = zext i32 %157 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %19, i64 %158\l  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !7\l  %161 = fadd contract float %160, %5\l  %162 = fsub contract float %161, %27\l  %163 = fcmp contract ogt float %162, 0.000000e+00\l  %164 = select contract i1 %163, float %162, float 0.000000e+00\l  %165 = icmp eq i32 %156, %23\l  %166 = select contract i1 %165, float 0.000000e+00, float %164\l  %167 = getelementptr inbounds float, float addrspace(1)* %20, i64 %158\l  store float %166, float addrspace(1)* %167, align 4, !tbaa !7\l  %168 = fadd contract float %155, %166\l  %169 = add nuw i32 %63, 8\l  %170 = add i32 %65, 8\l  %171 = icmp eq i32 %170, %33\l  br i1 %171, label %34, label %62, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4e79fb0:s0 -> Node0x4e7b840;
	Node0x4e79fb0:s1 -> Node0x4e79fb0;
	Node0x4e7a000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%172:\l172:                                              \l  ret void\l}"];
}
