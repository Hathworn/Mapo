digraph "CFG for '_Z10kWriteRowsPfS_iiiif' function" {
	label="CFG for '_Z10kWriteRowsPfS_iiiif' function";

	Node0x4b9e410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul nsw i32 %8, %4\l  %11 = add nsw i32 %10, %9\l  %12 = mul nsw i32 %11, %2\l  %13 = sext i32 %12 to i64\l  %14 = getelementptr inbounds float, float addrspace(1)* %0, i64 %13\l  %15 = mul nsw i32 %8, %3\l  %16 = add i32 %15, %9\l  %17 = add i32 %16, %5\l  %18 = mul nsw i32 %17, %2\l  %19 = sext i32 %18 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %1, i64 %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %22 = icmp slt i32 %21, %2\l  br i1 %22, label %23, label %29\l|{<s0>T|<s1>F}}"];
	Node0x4b9e410:s0 -> Node0x4b9fcf0;
	Node0x4b9e410:s1 -> Node0x4b9fd80;
	Node0x4b9fcf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%23:\l23:                                               \l  %24 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %25 = getelementptr i8, i8 addrspace(4)* %24, i64 4\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 4, !range !5, !invariant.load !6\l  %28 = zext i16 %27 to i32\l  br label %30\l}"];
	Node0x4b9fcf0 -> Node0x4ba0bd0;
	Node0x4b9fd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%29:\l29:                                               \l  ret void\l}"];
	Node0x4ba0bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ %21, %23 ], [ %37, %30 ]\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %14, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7\l  %35 = fmul contract float %34, %6\l  %36 = getelementptr inbounds float, float addrspace(1)* %20, i64 %32\l  store float %35, float addrspace(1)* %36, align 4, !tbaa !7\l  %37 = add i32 %31, %28\l  %38 = icmp slt i32 %37, %2\l  br i1 %38, label %30, label %29, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4ba0bd0:s0 -> Node0x4ba0bd0;
	Node0x4ba0bd0:s1 -> Node0x4b9fd80;
}
