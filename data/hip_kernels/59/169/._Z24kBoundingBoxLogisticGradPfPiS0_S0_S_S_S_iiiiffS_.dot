digraph "CFG for '_Z24kBoundingBoxLogisticGradPfPiS0_S0_S_S_S_iiiiffS_' function" {
	label="CFG for '_Z24kBoundingBoxLogisticGradPfPiS0_S0_S_S_S_iiiiffS_' function";

	Node0x61daca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%14:\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = icmp slt i32 %17, %8\l  %20 = icmp slt i32 %18, %9\l  %21 = select i1 %19, i1 %20, i1 false\l  %22 = icmp slt i32 %16, %7\l  %23 = select i1 %21, i1 %22, i1 false\l  %24 = icmp slt i32 %15, %10\l  %25 = select i1 %23, i1 %24, i1 false\l  br i1 %25, label %26, label %104\l|{<s0>T|<s1>F}}"];
	Node0x61daca0:s0 -> Node0x61dd7a0;
	Node0x61daca0:s1 -> Node0x61dd830;
	Node0x61dd7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%26:\l26:                                               \l  %27 = zext i32 %16 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %4, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %30 = fptosi float %29 to i32\l  %31 = sitofp i32 %17 to float\l  %32 = fmul contract float %31, %11\l  %33 = fptosi float %32 to i32\l  %34 = sitofp i32 %18 to float\l  %35 = fmul contract float %34, %12\l  %36 = fptosi float %35 to i32\l  %37 = sext i32 %30 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %37\l  %39 = bitcast i32 addrspace(1)* %38 to \<2 x i32\> addrspace(1)*\l  %40 = load \<2 x i32\>, \<2 x i32\> addrspace(1)* %39, align 4, !tbaa !10\l  %41 = extractelement \<2 x i32\> %40, i64 0\l  %42 = extractelement \<2 x i32\> %40, i64 1\l  %43 = icmp slt i32 %41, %42\l  br i1 %43, label %44, label %104\l|{<s0>T|<s1>F}}"];
	Node0x61dd7a0:s0 -> Node0x61ded80;
	Node0x61dd7a0:s1 -> Node0x61dd830;
	Node0x61ded80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%44:\l44:                                               \l  %45 = getelementptr inbounds float, float addrspace(1)* %5, i64 %27\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %47 = getelementptr inbounds float, float addrspace(1)* %6, i64 %27\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %49\l}"];
	Node0x61ded80 -> Node0x61dfd70;
	Node0x61dfd70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = phi i32 [ 0, %44 ], [ %95, %92 ]\l  %51 = phi i32 [ %41, %44 ], [ %102, %92 ]\l  %52 = phi i32 [ 0, %44 ], [ %98, %92 ]\l  %53 = phi i32 [ 0, %44 ], [ %101, %92 ]\l  %54 = sext i32 %51 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %54\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !10, !amdgpu.noclobber\l... !9\l  %57 = shl i32 %51, 2\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %58\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !10, !amdgpu.noclobber\l... !9\l  %61 = sitofp i32 %60 to float\l  %62 = fsub contract float %61, %46\l  %63 = fptosi float %62 to i32\l  %64 = icmp slt i32 %33, %63\l  br i1 %64, label %92, label %65\l|{<s0>T|<s1>F}}"];
	Node0x61dfd70:s0 -> Node0x61dfea0;
	Node0x61dfd70:s1 -> Node0x61ddf80;
	Node0x61ddf80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%65:\l65:                                               \l  %66 = add nuw nsw i32 %57, 3\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !10, !amdgpu.noclobber\l... !9\l  %70 = sitofp i32 %69 to float\l  %71 = fsub contract float %70, %48\l  %72 = fptosi float %71 to i32\l  %73 = add nuw nsw i32 %57, 1\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %74\l  %76 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !10, !amdgpu.noclobber\l... !9\l  %77 = sitofp i32 %76 to float\l  %78 = fsub contract float %77, %48\l  %79 = fptosi float %78 to i32\l  %80 = add nuw nsw i32 %57, 2\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !10, !amdgpu.noclobber\l... !9\l  %84 = sitofp i32 %83 to float\l  %85 = fsub contract float %84, %46\l  %86 = fptosi float %85 to i32\l  %87 = icmp sle i32 %33, %86\l  %88 = icmp sge i32 %36, %79\l  %89 = select i1 %87, i1 %88, i1 false\l  %90 = icmp sle i32 %36, %72\l  %91 = select i1 %89, i1 %90, i1 false\l  br label %92\l}"];
	Node0x61ddf80 -> Node0x61dfea0;
	Node0x61dfea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%92:\l92:                                               \l  %93 = phi i1 [ false, %49 ], [ %91, %65 ]\l  %94 = zext i1 %93 to i32\l  %95 = add nuw nsw i32 %50, %94\l  %96 = icmp eq i32 %56, %15\l  %97 = zext i1 %96 to i32\l  %98 = add nuw nsw i32 %52, %97\l  %99 = select i1 %93, i1 %96, i1 false\l  %100 = zext i1 %99 to i32\l  %101 = add nuw nsw i32 %53, %100\l  %102 = add nsw i32 %51, 1\l  %103 = icmp slt i32 %102, %42\l  br i1 %103, label %49, label %104, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x61dfea0:s0 -> Node0x61dfd70;
	Node0x61dfea0:s1 -> Node0x61dd830;
	Node0x61dd830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%104:\l104:                                              \l  %105 = phi i32 [ 0, %14 ], [ 0, %26 ], [ %101, %92 ]\l  %106 = phi i32 [ 0, %14 ], [ 0, %26 ], [ %98, %92 ]\l  %107 = phi i32 [ 0, %14 ], [ 0, %26 ], [ %95, %92 ]\l  %108 = mul nsw i32 %15, %9\l  %109 = add nsw i32 %108, %18\l  %110 = mul nsw i32 %109, %8\l  %111 = add nsw i32 %110, %17\l  %112 = mul nsw i32 %111, %7\l  %113 = add nsw i32 %112, %16\l  %114 = sext i32 %113 to i64\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %25, label %115, label %131\l|{<s0>T|<s1>F}}"];
	Node0x61dd830:s0 -> Node0x61e31b0;
	Node0x61dd830:s1 -> Node0x61e3200;
	Node0x61e31b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%115:\l115:                                              \l  %116 = icmp sgt i32 %107, 0\l  br i1 %116, label %117, label %123\l|{<s0>T|<s1>F}}"];
	Node0x61e31b0:s0 -> Node0x61e3390;
	Node0x61e31b0:s1 -> Node0x61e33e0;
	Node0x61e3390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%117:\l117:                                              \l  %118 = icmp sgt i32 %105, 0\l  br i1 %118, label %119, label %128\l|{<s0>T|<s1>F}}"];
	Node0x61e3390:s0 -> Node0x61e3570;
	Node0x61e3390:s1 -> Node0x61e35c0;
	Node0x61e3570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%119:\l119:                                              \l  %120 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %122 = fadd contract float %121, -1.000000e+00\l  br label %128\l}"];
	Node0x61e3570 -> Node0x61e35c0;
	Node0x61e33e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%123:\l123:                                              \l  %124 = icmp sgt i32 %106, 0\l  br i1 %124, label %125, label %128\l|{<s0>T|<s1>F}}"];
	Node0x61e33e0:s0 -> Node0x61e4430;
	Node0x61e33e0:s1 -> Node0x61e35c0;
	Node0x61e4430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%125:\l125:                                              \l  %126 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %128\l}"];
	Node0x61e4430 -> Node0x61e35c0;
	Node0x61e35c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%128:\l128:                                              \l  %129 = phi float [ %122, %119 ], [ 0.000000e+00, %117 ], [ %127, %125 ], [\l... 0.000000e+00, %123 ]\l  %130 = getelementptr inbounds float, float addrspace(1)* %13, i64 %114\l  store float %129, float addrspace(1)* %130, align 4, !tbaa !5\l  br label %131\l}"];
	Node0x61e35c0 -> Node0x61e3200;
	Node0x61e3200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%131:\l131:                                              \l  ret void\l}"];
}
