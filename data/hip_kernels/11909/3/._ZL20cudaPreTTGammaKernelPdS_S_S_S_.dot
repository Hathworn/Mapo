digraph "CFG for '_ZL20cudaPreTTGammaKernelPdS_S_S_S_' function" {
	label="CFG for '_ZL20cudaPreTTGammaKernelPdS_S_S_S_' function";

	Node0x5a40b10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %7 = shl nuw nsw i32 %6, 2\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = add nuw nsw i32 %7, %8\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = icmp eq i32 %10, 0\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = shl i32 %12, 2\l  %14 = add i32 %13, %8\l  %15 = zext i32 %14 to i64\l  %16 = getelementptr inbounds double, double addrspace(1)* %0, i64 %15\l  %17 = load double, double addrspace(1)* %16, align 8, !tbaa !5\l  %18 = zext i32 %9 to i64\l  %19 = getelementptr inbounds [64 x double], [64 x double] addrspace(3)*\l... @_ZZL20cudaPreTTGammaKernelPdS_S_S_S_E3ump, i32 0, i32 %9\l  %20 = addrspacecast double addrspace(3)* %19 to double*\l  br i1 %11, label %21, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5a40b10:s0 -> Node0x5a432a0;
	Node0x5a40b10:s1 -> Node0x5a43460;
	Node0x5a432a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%21:\l21:                                               \l  %22 = getelementptr inbounds double, double addrspace(1)* %1, i64 %18\l  %23 = load double, double addrspace(1)* %22, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %24 = fmul contract double %17, %23\l  store volatile double %24, double* %20, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %25 = icmp ult i32 %8, 2\l  br i1 %25, label %26, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5a432a0:s0 -> Node0x5a44270;
	Node0x5a432a0:s1 -> Node0x5a44300;
	Node0x5a44270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%26:\l26:                                               \l  %27 = add nuw nsw i32 %9, 2\l  %28 = getelementptr inbounds [64 x double], [64 x double] addrspace(3)*\l... @_ZZL20cudaPreTTGammaKernelPdS_S_S_S_E3ump, i32 0, i32 %27\l  %29 = addrspacecast double addrspace(3)* %28 to double*\l  %30 = load volatile double, double* %29, align 8, !tbaa !5\l  %31 = load volatile double, double* %20, align 8, !tbaa !5\l  %32 = fadd contract double %30, %31\l  store volatile double %32, double* %20, align 8, !tbaa !5\l  br label %33\l}"];
	Node0x5a44270 -> Node0x5a44300;
	Node0x5a44300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%33:\l33:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %34 = icmp eq i32 %8, 0\l  br i1 %34, label %49, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5a44300:s0 -> Node0x5a44bd0;
	Node0x5a44300:s1 -> Node0x5a44c20;
	Node0x5a43460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e1675170",label="{%35:\l35:                                               \l  %36 = getelementptr inbounds double, double addrspace(1)* %2, i64 %18\l  %37 = load double, double addrspace(1)* %36, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %38 = fmul contract double %17, %37\l  store volatile double %38, double* %20, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %39 = icmp ult i32 %8, 2\l  br i1 %39, label %40, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5a43460:s0 -> Node0x5a457a0;
	Node0x5a43460:s1 -> Node0x5a457f0;
	Node0x5a457a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%40:\l40:                                               \l  %41 = add nuw nsw i32 %9, 2\l  %42 = getelementptr inbounds [64 x double], [64 x double] addrspace(3)*\l... @_ZZL20cudaPreTTGammaKernelPdS_S_S_S_E3ump, i32 0, i32 %41\l  %43 = addrspacecast double addrspace(3)* %42 to double*\l  %44 = load volatile double, double* %43, align 8, !tbaa !5\l  %45 = load volatile double, double* %20, align 8, !tbaa !5\l  %46 = fadd contract double %44, %45\l  store volatile double %46, double* %20, align 8, !tbaa !5\l  br label %47\l}"];
	Node0x5a457a0 -> Node0x5a457f0;
	Node0x5a457f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e1675170",label="{%47:\l47:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %48 = icmp eq i32 %8, 0\l  br i1 %48, label %49, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5a457f0:s0 -> Node0x5a44bd0;
	Node0x5a457f0:s1 -> Node0x5a44c20;
	Node0x5a44bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%49:\l49:                                               \l  %50 = phi double addrspace(1)* [ %3, %33 ], [ %4, %47 ]\l  %51 = add nuw nsw i32 %9, 1\l  %52 = getelementptr inbounds [64 x double], [64 x double] addrspace(3)*\l... @_ZZL20cudaPreTTGammaKernelPdS_S_S_S_E3ump, i32 0, i32 %51\l  %53 = addrspacecast double addrspace(3)* %52 to double*\l  %54 = load volatile double, double* %53, align 8, !tbaa !5\l  %55 = load volatile double, double* %20, align 8, !tbaa !5\l  %56 = fadd contract double %54, %55\l  store volatile double %56, double* %20, align 8, !tbaa !5\l  %57 = load volatile double, double* %20, align 8, !tbaa !5\l  %58 = shl i32 %12, 4\l  %59 = add i32 %58, %6\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds double, double addrspace(1)* %50, i64 %60\l  store double %57, double addrspace(1)* %61, align 8, !tbaa !5\l  br label %62\l}"];
	Node0x5a44bd0 -> Node0x5a44c20;
	Node0x5a44c20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  ret void\l}"];
}
