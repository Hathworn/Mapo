digraph "CFG for '_ZL20cudaSumIIGammaKernelPdS_S_i' function" {
	label="CFG for '_ZL20cudaSumIIGammaKernelPdS_S_i' function";

	Node0x5440860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %3\l  br i1 %14, label %15, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5440860:s0 -> Node0x5442750;
	Node0x5440860:s1 -> Node0x54427e0;
	Node0x5442750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = freeze i32 %13\l  %17 = sdiv i32 %16, 4\l  %18 = mul i32 %17, 4\l  %19 = sub i32 %16, %18\l  %20 = shl nsw i32 %17, 4\l  %21 = shl nsw i32 %19, 2\l  %22 = add nsw i32 %20, %21\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds double, double addrspace(1)* %0, i64 %23\l  %25 = getelementptr inbounds double, double addrspace(1)* %1, i64 %23\l  %26 = getelementptr inbounds double, double addrspace(1)* %2, i64 %23\l  %27 = load double, double addrspace(1)* %24, align 8, !tbaa !7\l  %28 = load double, double addrspace(1)* %25, align 8, !tbaa !7\l  %29 = fmul contract double %27, %28\l  store double %29, double addrspace(1)* %26, align 8, !tbaa !7\l  %30 = getelementptr inbounds double, double addrspace(1)* %24, i64 1\l  %31 = load double, double addrspace(1)* %30, align 8, !tbaa !7\l  %32 = getelementptr inbounds double, double addrspace(1)* %25, i64 1\l  %33 = load double, double addrspace(1)* %32, align 8, !tbaa !7\l  %34 = fmul contract double %31, %33\l  %35 = getelementptr inbounds double, double addrspace(1)* %26, i64 1\l  store double %34, double addrspace(1)* %35, align 8, !tbaa !7\l  %36 = getelementptr inbounds double, double addrspace(1)* %24, i64 2\l  %37 = load double, double addrspace(1)* %36, align 8, !tbaa !7\l  %38 = getelementptr inbounds double, double addrspace(1)* %25, i64 2\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !7\l  %40 = fmul contract double %37, %39\l  %41 = getelementptr inbounds double, double addrspace(1)* %26, i64 2\l  store double %40, double addrspace(1)* %41, align 8, !tbaa !7\l  %42 = getelementptr inbounds double, double addrspace(1)* %24, i64 3\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !7\l  %44 = getelementptr inbounds double, double addrspace(1)* %25, i64 3\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !7\l  %46 = fmul contract double %43, %45\l  %47 = getelementptr inbounds double, double addrspace(1)* %26, i64 3\l  store double %46, double addrspace(1)* %47, align 8, !tbaa !7\l  br label %48\l}"];
	Node0x5442750 -> Node0x54427e0;
	Node0x54427e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  ret void\l}"];
}
