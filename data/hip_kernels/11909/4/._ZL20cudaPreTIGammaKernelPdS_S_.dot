digraph "CFG for '_ZL20cudaPreTIGammaKernelPdS_S_' function" {
	label="CFG for '_ZL20cudaPreTIGammaKernelPdS_S_' function";

	Node0x59363c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %5 = shl nuw nsw i32 %4, 2\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = add nuw nsw i32 %5, %6\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = shl i32 %8, 2\l  %10 = add i32 %9, %6\l  %11 = zext i32 %10 to i64\l  %12 = getelementptr inbounds double, double addrspace(1)* %0, i64 %11\l  %13 = load double, double addrspace(1)* %12, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %14 = zext i32 %7 to i64\l  %15 = getelementptr inbounds double, double addrspace(1)* %1, i64 %14\l  %16 = load double, double addrspace(1)* %15, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %17 = fmul contract double %13, %16\l  %18 = getelementptr inbounds [64 x double], [64 x double] addrspace(3)*\l... @_ZZL20cudaPreTIGammaKernelPdS_S_E4sump, i32 0, i32 %7\l  %19 = addrspacecast double addrspace(3)* %18 to double*\l  store volatile double %17, double* %19, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %20 = icmp ult i32 %6, 2\l  br i1 %20, label %21, label %28\l|{<s0>T|<s1>F}}"];
	Node0x59363c0:s0 -> Node0x5939d40;
	Node0x59363c0:s1 -> Node0x5939dd0;
	Node0x5939d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%21:\l21:                                               \l  %22 = add nuw nsw i32 %7, 2\l  %23 = getelementptr inbounds [64 x double], [64 x double] addrspace(3)*\l... @_ZZL20cudaPreTIGammaKernelPdS_S_E4sump, i32 0, i32 %22\l  %24 = addrspacecast double addrspace(3)* %23 to double*\l  %25 = load volatile double, double* %24, align 8, !tbaa !5\l  %26 = load volatile double, double* %19, align 8, !tbaa !5\l  %27 = fadd contract double %25, %26\l  store volatile double %27, double* %19, align 8, !tbaa !5\l  br label %28\l}"];
	Node0x5939d40 -> Node0x5939dd0;
	Node0x5939dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %29 = icmp eq i32 %6, 0\l  br i1 %29, label %30, label %42\l|{<s0>T|<s1>F}}"];
	Node0x5939dd0:s0 -> Node0x593a590;
	Node0x5939dd0:s1 -> Node0x593a5e0;
	Node0x593a590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%30:\l30:                                               \l  %31 = add nuw nsw i32 %7, 1\l  %32 = getelementptr inbounds [64 x double], [64 x double] addrspace(3)*\l... @_ZZL20cudaPreTIGammaKernelPdS_S_E4sump, i32 0, i32 %31\l  %33 = addrspacecast double addrspace(3)* %32 to double*\l  %34 = load volatile double, double* %33, align 8, !tbaa !5\l  %35 = load volatile double, double* %19, align 8, !tbaa !5\l  %36 = fadd contract double %34, %35\l  store volatile double %36, double* %19, align 8, !tbaa !5\l  %37 = load volatile double, double* %19, align 8, !tbaa !5\l  %38 = shl i32 %8, 4\l  %39 = add i32 %38, %4\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds double, double addrspace(1)* %2, i64 %40\l  store double %37, double addrspace(1)* %41, align 8, !tbaa !5\l  br label %42\l}"];
	Node0x593a590 -> Node0x593a5e0;
	Node0x593a5e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  ret void\l}"];
}
