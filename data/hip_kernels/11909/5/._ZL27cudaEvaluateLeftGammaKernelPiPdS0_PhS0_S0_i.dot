digraph "CFG for '_ZL27cudaEvaluateLeftGammaKernelPiPdS0_PhS0_S0_i' function" {
	label="CFG for '_ZL27cudaEvaluateLeftGammaKernelPiPdS0_PhS0_S0_i' function";

	Node0x46c42e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %6\l  %18 = sext i32 %16 to i64\l  br i1 %17, label %19, label %232\l|{<s0>T|<s1>F}}"];
	Node0x46c42e0:s0 -> Node0x46c6260;
	Node0x46c42e0:s1 -> Node0x46c62f0;
	Node0x46c6260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%19:\l19:                                               \l  %20 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %18\l  %21 = load i8, i8 addrspace(1)* %20, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %22 = zext i8 %21 to i64\l  %23 = shl nuw nsw i64 %22, 2\l  %24 = getelementptr inbounds double, double addrspace(1)* %2, i64 %23\l  %25 = shl nsw i32 %16, 4\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds double, double addrspace(1)* %1, i64 %26\l  %28 = load double, double addrspace(1)* %24, align 8, !tbaa !10,\l... !amdgpu.noclobber !5\l  %29 = getelementptr inbounds double, double addrspace(1)* %24, i64 1\l  %30 = load double, double addrspace(1)* %29, align 8, !tbaa !10,\l... !amdgpu.noclobber !5\l  %31 = getelementptr inbounds double, double addrspace(1)* %24, i64 2\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !10,\l... !amdgpu.noclobber !5\l  %33 = getelementptr inbounds double, double addrspace(1)* %24, i64 3\l  %34 = load double, double addrspace(1)* %33, align 8, !tbaa !10,\l... !amdgpu.noclobber !5\l  %35 = load double, double addrspace(1)* %27, align 8, !tbaa !10\l  %36 = fmul contract double %28, %35\l  %37 = load double, double addrspace(1)* %4, align 8, !tbaa !10\l  %38 = fmul contract double %36, %37\l  %39 = fadd contract double %38, 0.000000e+00\l  %40 = getelementptr inbounds double, double addrspace(1)* %27, i64 1\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !10\l  %42 = fmul contract double %30, %41\l  %43 = getelementptr inbounds double, double addrspace(1)* %4, i64 1\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !10\l  %45 = fmul contract double %42, %44\l  %46 = fadd contract double %39, %45\l  %47 = getelementptr inbounds double, double addrspace(1)* %27, i64 2\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !10\l  %49 = fmul contract double %32, %48\l  %50 = getelementptr inbounds double, double addrspace(1)* %4, i64 2\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !10\l  %52 = fmul contract double %49, %51\l  %53 = fadd contract double %46, %52\l  %54 = getelementptr inbounds double, double addrspace(1)* %27, i64 3\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !10\l  %56 = fmul contract double %34, %55\l  %57 = getelementptr inbounds double, double addrspace(1)* %4, i64 3\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !10\l  %59 = fmul contract double %56, %58\l  %60 = fadd contract double %53, %59\l  %61 = getelementptr inbounds double, double addrspace(1)* %27, i64 4\l  %62 = getelementptr inbounds double, double addrspace(1)* %4, i64 4\l  %63 = load double, double addrspace(1)* %61, align 8, !tbaa !10\l  %64 = fmul contract double %28, %63\l  %65 = load double, double addrspace(1)* %62, align 8, !tbaa !10\l  %66 = fmul contract double %64, %65\l  %67 = fadd contract double %60, %66\l  %68 = getelementptr inbounds double, double addrspace(1)* %61, i64 1\l  %69 = load double, double addrspace(1)* %68, align 8, !tbaa !10\l  %70 = fmul contract double %30, %69\l  %71 = getelementptr inbounds double, double addrspace(1)* %4, i64 5\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !10\l  %73 = fmul contract double %70, %72\l  %74 = fadd contract double %67, %73\l  %75 = getelementptr inbounds double, double addrspace(1)* %61, i64 2\l  %76 = load double, double addrspace(1)* %75, align 8, !tbaa !10\l  %77 = fmul contract double %32, %76\l  %78 = getelementptr inbounds double, double addrspace(1)* %4, i64 6\l  %79 = load double, double addrspace(1)* %78, align 8, !tbaa !10\l  %80 = fmul contract double %77, %79\l  %81 = fadd contract double %74, %80\l  %82 = getelementptr inbounds double, double addrspace(1)* %61, i64 3\l  %83 = load double, double addrspace(1)* %82, align 8, !tbaa !10\l  %84 = fmul contract double %34, %83\l  %85 = getelementptr inbounds double, double addrspace(1)* %4, i64 7\l  %86 = load double, double addrspace(1)* %85, align 8, !tbaa !10\l  %87 = fmul contract double %84, %86\l  %88 = fadd contract double %81, %87\l  %89 = getelementptr inbounds double, double addrspace(1)* %61, i64 4\l  %90 = getelementptr inbounds double, double addrspace(1)* %4, i64 8\l  %91 = load double, double addrspace(1)* %89, align 8, !tbaa !10\l  %92 = fmul contract double %28, %91\l  %93 = load double, double addrspace(1)* %90, align 8, !tbaa !10\l  %94 = fmul contract double %92, %93\l  %95 = fadd contract double %88, %94\l  %96 = getelementptr inbounds double, double addrspace(1)* %89, i64 1\l  %97 = load double, double addrspace(1)* %96, align 8, !tbaa !10\l  %98 = fmul contract double %30, %97\l  %99 = getelementptr inbounds double, double addrspace(1)* %4, i64 9\l  %100 = load double, double addrspace(1)* %99, align 8, !tbaa !10\l  %101 = fmul contract double %98, %100\l  %102 = fadd contract double %95, %101\l  %103 = getelementptr inbounds double, double addrspace(1)* %89, i64 2\l  %104 = load double, double addrspace(1)* %103, align 8, !tbaa !10\l  %105 = fmul contract double %32, %104\l  %106 = getelementptr inbounds double, double addrspace(1)* %4, i64 10\l  %107 = load double, double addrspace(1)* %106, align 8, !tbaa !10\l  %108 = fmul contract double %105, %107\l  %109 = fadd contract double %102, %108\l  %110 = getelementptr inbounds double, double addrspace(1)* %89, i64 3\l  %111 = load double, double addrspace(1)* %110, align 8, !tbaa !10\l  %112 = fmul contract double %34, %111\l  %113 = getelementptr inbounds double, double addrspace(1)* %4, i64 11\l  %114 = load double, double addrspace(1)* %113, align 8, !tbaa !10\l  %115 = fmul contract double %112, %114\l  %116 = fadd contract double %109, %115\l  %117 = getelementptr inbounds double, double addrspace(1)* %89, i64 4\l  %118 = getelementptr inbounds double, double addrspace(1)* %4, i64 12\l  %119 = load double, double addrspace(1)* %117, align 8, !tbaa !10\l  %120 = fmul contract double %28, %119\l  %121 = load double, double addrspace(1)* %118, align 8, !tbaa !10\l  %122 = fmul contract double %120, %121\l  %123 = fadd contract double %116, %122\l  %124 = getelementptr inbounds double, double addrspace(1)* %117, i64 1\l  %125 = load double, double addrspace(1)* %124, align 8, !tbaa !10\l  %126 = fmul contract double %30, %125\l  %127 = getelementptr inbounds double, double addrspace(1)* %4, i64 13\l  %128 = load double, double addrspace(1)* %127, align 8, !tbaa !10\l  %129 = fmul contract double %126, %128\l  %130 = fadd contract double %123, %129\l  %131 = getelementptr inbounds double, double addrspace(1)* %117, i64 2\l  %132 = load double, double addrspace(1)* %131, align 8, !tbaa !10\l  %133 = fmul contract double %32, %132\l  %134 = getelementptr inbounds double, double addrspace(1)* %4, i64 14\l  %135 = load double, double addrspace(1)* %134, align 8, !tbaa !10\l  %136 = fmul contract double %133, %135\l  %137 = fadd contract double %130, %136\l  %138 = getelementptr inbounds double, double addrspace(1)* %117, i64 3\l  %139 = load double, double addrspace(1)* %138, align 8, !tbaa !10\l  %140 = fmul contract double %34, %139\l  %141 = getelementptr inbounds double, double addrspace(1)* %4, i64 15\l  %142 = load double, double addrspace(1)* %141, align 8, !tbaa !10\l  %143 = fmul contract double %140, %142\l  %144 = fadd contract double %137, %143\l  %145 = tail call double @llvm.fabs.f64(double %144)\l  %146 = fmul contract double %145, 2.500000e-01\l  %147 = tail call double @llvm.amdgcn.frexp.mant.f64(double %146)\l  %148 = fcmp olt double %147, 0x3FE5555555555555\l  %149 = zext i1 %148 to i32\l  %150 = tail call double @llvm.amdgcn.ldexp.f64(double %147, i32 %149)\l  %151 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %146)\l  %152 = sub nsw i32 %151, %149\l  %153 = fadd double %150, -1.000000e+00\l  %154 = fadd double %150, 1.000000e+00\l  %155 = fadd double %154, -1.000000e+00\l  %156 = fsub double %150, %155\l  %157 = tail call double @llvm.amdgcn.rcp.f64(double %154)\l  %158 = fneg double %154\l  %159 = tail call double @llvm.fma.f64(double %158, double %157, double\l... 1.000000e+00)\l  %160 = tail call double @llvm.fma.f64(double %159, double %157, double %157)\l  %161 = tail call double @llvm.fma.f64(double %158, double %160, double\l... 1.000000e+00)\l  %162 = tail call double @llvm.fma.f64(double %161, double %160, double %160)\l  %163 = fmul double %153, %162\l  %164 = fmul double %154, %163\l  %165 = fneg double %164\l  %166 = tail call double @llvm.fma.f64(double %163, double %154, double %165)\l  %167 = tail call double @llvm.fma.f64(double %163, double %156, double %166)\l  %168 = fadd double %164, %167\l  %169 = fsub double %168, %164\l  %170 = fsub double %167, %169\l  %171 = fsub double %153, %168\l  %172 = fsub double %153, %171\l  %173 = fsub double %172, %168\l  %174 = fsub double %173, %170\l  %175 = fadd double %171, %174\l  %176 = fmul double %162, %175\l  %177 = fadd double %163, %176\l  %178 = fsub double %177, %163\l  %179 = fsub double %176, %178\l  %180 = fmul double %177, %177\l  %181 = tail call double @llvm.fma.f64(double %180, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %182 = tail call double @llvm.fma.f64(double %180, double %181, double\l... 0x3FC7474DD7F4DF2E)\l  %183 = tail call double @llvm.fma.f64(double %180, double %182, double\l... 0x3FCC71C016291751)\l  %184 = tail call double @llvm.fma.f64(double %180, double %183, double\l... 0x3FD249249B27ACF1)\l  %185 = tail call double @llvm.fma.f64(double %180, double %184, double\l... 0x3FD99999998EF7B6)\l  %186 = tail call double @llvm.fma.f64(double %180, double %185, double\l... 0x3FE5555555555780)\l  %187 = tail call double @llvm.amdgcn.ldexp.f64(double %177, i32 1)\l  %188 = tail call double @llvm.amdgcn.ldexp.f64(double %179, i32 1)\l  %189 = fmul double %177, %180\l  %190 = fmul double %189, %186\l  %191 = fadd double %187, %190\l  %192 = fsub double %191, %187\l  %193 = fsub double %190, %192\l  %194 = fadd double %188, %193\l  %195 = fadd double %191, %194\l  %196 = fsub double %195, %191\l  %197 = fsub double %194, %196\l  %198 = sitofp i32 %152 to double\l  %199 = fmul double %198, 0x3FE62E42FEFA39EF\l  %200 = fneg double %199\l  %201 = tail call double @llvm.fma.f64(double %198, double\l... 0x3FE62E42FEFA39EF, double %200)\l  %202 = tail call double @llvm.fma.f64(double %198, double\l... 0x3C7ABC9E3B39803F, double %201)\l  %203 = fadd double %199, %202\l  %204 = fsub double %203, %199\l  %205 = fsub double %202, %204\l  %206 = fadd double %203, %195\l  %207 = fsub double %206, %203\l  %208 = fsub double %206, %207\l  %209 = fsub double %203, %208\l  %210 = fsub double %195, %207\l  %211 = fadd double %210, %209\l  %212 = fadd double %205, %197\l  %213 = fsub double %212, %205\l  %214 = fsub double %212, %213\l  %215 = fsub double %205, %214\l  %216 = fsub double %197, %213\l  %217 = fadd double %216, %215\l  %218 = fadd double %212, %211\l  %219 = fadd double %206, %218\l  %220 = fsub double %219, %206\l  %221 = fsub double %218, %220\l  %222 = fadd double %217, %221\l  %223 = fadd double %219, %222\l  %224 = fcmp oeq double %146, 0x7FF0000000000000\l  %225 = select i1 %224, double %146, double %223\l  %226 = fcmp oeq double %146, 0.000000e+00\l  %227 = select i1 %226, double 0xFFF0000000000000, double %225\l  %228 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %18\l  %229 = load i32, i32 addrspace(1)* %228, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %230 = sitofp i32 %229 to double\l  %231 = fmul contract double %227, %230\l  br label %232\l}"];
	Node0x46c6260 -> Node0x46c62f0;
	Node0x46c62f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%232:\l232:                                              \l  %233 = phi double [ %231, %19 ], [ 0.000000e+00, %7 ]\l  %234 = getelementptr inbounds double, double addrspace(1)* %5, i64 %18\l  store double %233, double addrspace(1)* %234, align 8, !tbaa !10\l  ret void\l}"];
}
