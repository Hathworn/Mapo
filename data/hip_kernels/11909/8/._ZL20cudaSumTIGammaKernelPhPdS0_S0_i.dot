digraph "CFG for '_ZL20cudaSumTIGammaKernelPhPdS0_S0_i' function" {
	label="CFG for '_ZL20cudaSumTIGammaKernelPhPdS0_S0_i' function";

	Node0x573e9d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = icmp slt i32 %14, %4\l  br i1 %15, label %16, label %54\l|{<s0>T|<s1>F}}"];
	Node0x573e9d0:s0 -> Node0x57408a0;
	Node0x573e9d0:s1 -> Node0x5740930;
	Node0x57408a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%16:\l16:                                               \l  %17 = freeze i32 %14\l  %18 = sdiv i32 %17, 4\l  %19 = mul i32 %18, 4\l  %20 = sub i32 %17, %19\l  %21 = sext i32 %18 to i64\l  %22 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %21\l  %23 = load i8, i8 addrspace(1)* %22, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %24 = zext i8 %23 to i64\l  %25 = shl nuw nsw i64 %24, 2\l  %26 = getelementptr inbounds double, double addrspace(1)* %2, i64 %25\l  %27 = shl nsw i32 %18, 4\l  %28 = shl nsw i32 %20, 2\l  %29 = add nsw i32 %27, %28\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds double, double addrspace(1)* %1, i64 %30\l  %32 = getelementptr inbounds double, double addrspace(1)* %3, i64 %30\l  %33 = load double, double addrspace(1)* %26, align 8, !tbaa !10\l  %34 = load double, double addrspace(1)* %31, align 8, !tbaa !10\l  %35 = fmul contract double %33, %34\l  store double %35, double addrspace(1)* %32, align 8, !tbaa !10\l  %36 = getelementptr inbounds double, double addrspace(1)* %26, i64 1\l  %37 = load double, double addrspace(1)* %36, align 8, !tbaa !10\l  %38 = getelementptr inbounds double, double addrspace(1)* %31, i64 1\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !10\l  %40 = fmul contract double %37, %39\l  %41 = getelementptr inbounds double, double addrspace(1)* %32, i64 1\l  store double %40, double addrspace(1)* %41, align 8, !tbaa !10\l  %42 = getelementptr inbounds double, double addrspace(1)* %26, i64 2\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !10\l  %44 = getelementptr inbounds double, double addrspace(1)* %31, i64 2\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !10\l  %46 = fmul contract double %43, %45\l  %47 = getelementptr inbounds double, double addrspace(1)* %32, i64 2\l  store double %46, double addrspace(1)* %47, align 8, !tbaa !10\l  %48 = getelementptr inbounds double, double addrspace(1)* %26, i64 3\l  %49 = load double, double addrspace(1)* %48, align 8, !tbaa !10\l  %50 = getelementptr inbounds double, double addrspace(1)* %31, i64 3\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !10\l  %52 = fmul contract double %49, %51\l  %53 = getelementptr inbounds double, double addrspace(1)* %32, i64 3\l  store double %52, double addrspace(1)* %53, align 8, !tbaa !10\l  br label %54\l}"];
	Node0x57408a0 -> Node0x5740930;
	Node0x5740930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  ret void\l}"];
}
