digraph "CFG for '_Z21spatial_output_kerneljjjfPfPj' function" {
	label="CFG for '_Z21spatial_output_kerneljjjfPfPj' function";

	Node0x59a9cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%6:\l  %7 = mul i32 %2, %1\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %9 = mul i32 %7, %8\l  %10 = mul i32 %9, %0\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !6\l  %20 = mul i32 %11, %16\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %21\l  %23 = udiv i32 %19, %16\l  %24 = mul i32 %23, %16\l  %25 = icmp ugt i32 %19, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %16\l  %29 = icmp ult i32 %22, %7\l  br i1 %29, label %30, label %39\l|{<s0>T|<s1>F}}"];
	Node0x59a9cd0:s0 -> Node0x59ac650;
	Node0x59a9cd0:s1 -> Node0x59ac6e0;
	Node0x59ac650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%30:\l30:                                               \l  %31 = icmp ugt i32 %0, 1\l  %32 = icmp eq i32 %0, 1\l  %33 = add i32 %0, -1\l  %34 = add i32 %0, -2\l  %35 = and i32 %33, 7\l  %36 = icmp ult i32 %34, 7\l  %37 = and i32 %33, -8\l  %38 = icmp eq i32 %35, 0\l  br label %40\l}"];
	Node0x59ac650 -> Node0x59aceb0;
	Node0x59ac6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%39:\l39:                                               \l  ret void\l}"];
	Node0x59aceb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%40:\l40:                                               \l  %41 = phi i32 [ %22, %30 ], [ %161, %160 ]\l  br i1 %31, label %42, label %126\l|{<s0>T|<s1>F}}"];
	Node0x59aceb0:s0 -> Node0x59ad0f0;
	Node0x59aceb0:s1 -> Node0x59ad180;
	Node0x59ad0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%42:\l42:                                               \l  %43 = add i32 %41, %10\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %4, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  br i1 %36, label %134, label %47\l|{<s0>T|<s1>F}}"];
	Node0x59ad0f0:s0 -> Node0x59adc90;
	Node0x59ad0f0:s1 -> Node0x59add20;
	Node0x59add20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%47:\l47:                                               \l  %48 = phi i32 [ %123, %47 ], [ 1, %42 ]\l  %49 = phi float [ %122, %47 ], [ %46, %42 ]\l  %50 = phi i32 [ %121, %47 ], [ 0, %42 ]\l  %51 = phi i32 [ %124, %47 ], [ 0, %42 ]\l  %52 = mul i32 %7, %48\l  %53 = add i32 %43, %52\l  %54 = zext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %4, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %57 = fcmp contract ogt float %56, %49\l  %58 = select i1 %57, i32 %48, i32 %50\l  %59 = select i1 %57, float %56, float %49\l  %60 = add nuw nsw i32 %48, 1\l  %61 = mul i32 %7, %60\l  %62 = add i32 %43, %61\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %4, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %66 = fcmp contract ogt float %65, %59\l  %67 = select i1 %66, i32 %60, i32 %58\l  %68 = select i1 %66, float %65, float %59\l  %69 = add nuw nsw i32 %48, 2\l  %70 = mul i32 %7, %69\l  %71 = add i32 %43, %70\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %4, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %75 = fcmp contract ogt float %74, %68\l  %76 = select i1 %75, i32 %69, i32 %67\l  %77 = select i1 %75, float %74, float %68\l  %78 = add nuw nsw i32 %48, 3\l  %79 = mul i32 %7, %78\l  %80 = add i32 %43, %79\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %4, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %84 = fcmp contract ogt float %83, %77\l  %85 = select i1 %84, i32 %78, i32 %76\l  %86 = select i1 %84, float %83, float %77\l  %87 = add nuw nsw i32 %48, 4\l  %88 = mul i32 %7, %87\l  %89 = add i32 %43, %88\l  %90 = zext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %4, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %93 = fcmp contract ogt float %92, %86\l  %94 = select i1 %93, i32 %87, i32 %85\l  %95 = select i1 %93, float %92, float %86\l  %96 = add nuw nsw i32 %48, 5\l  %97 = mul i32 %7, %96\l  %98 = add i32 %43, %97\l  %99 = zext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %4, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %102 = fcmp contract ogt float %101, %95\l  %103 = select i1 %102, i32 %96, i32 %94\l  %104 = select i1 %102, float %101, float %95\l  %105 = add nuw nsw i32 %48, 6\l  %106 = mul i32 %7, %105\l  %107 = add i32 %43, %106\l  %108 = zext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %4, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %111 = fcmp contract ogt float %110, %104\l  %112 = select i1 %111, i32 %105, i32 %103\l  %113 = select i1 %111, float %110, float %104\l  %114 = add nuw i32 %48, 7\l  %115 = mul i32 %7, %114\l  %116 = add i32 %43, %115\l  %117 = zext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %4, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %120 = fcmp contract ogt float %119, %113\l  %121 = select i1 %120, i32 %114, i32 %112\l  %122 = select i1 %120, float %119, float %113\l  %123 = add nuw i32 %48, 8\l  %124 = add i32 %51, 8\l  %125 = icmp eq i32 %124, %37\l  br i1 %125, label %134, label %47, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x59add20:s0 -> Node0x59adc90;
	Node0x59add20:s1 -> Node0x59add20;
	Node0x59ad180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%126:\l126:                                              \l  br i1 %32, label %127, label %160\l|{<s0>T|<s1>F}}"];
	Node0x59ad180:s0 -> Node0x59b1900;
	Node0x59ad180:s1 -> Node0x59acff0;
	Node0x59b1900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%127:\l127:                                              \l  %128 = add i32 %41, %10\l  %129 = zext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %4, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %132 = fcmp contract ogt float %131, %3\l  %133 = zext i1 %132 to i32\l  br label %155\l}"];
	Node0x59b1900 -> Node0x59af220;
	Node0x59adc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%134:\l134:                                              \l  %135 = phi i32 [ undef, %42 ], [ %121, %47 ]\l  %136 = phi i32 [ 1, %42 ], [ %123, %47 ]\l  %137 = phi float [ %46, %42 ], [ %122, %47 ]\l  %138 = phi i32 [ 0, %42 ], [ %121, %47 ]\l  br i1 %38, label %155, label %139\l|{<s0>T|<s1>F}}"];
	Node0x59adc90:s0 -> Node0x59af220;
	Node0x59adc90:s1 -> Node0x59b2870;
	Node0x59b2870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%139:\l139:                                              \l  %140 = phi i32 [ %152, %139 ], [ %136, %134 ]\l  %141 = phi float [ %151, %139 ], [ %137, %134 ]\l  %142 = phi i32 [ %150, %139 ], [ %138, %134 ]\l  %143 = phi i32 [ %153, %139 ], [ 0, %134 ]\l  %144 = mul i32 %7, %140\l  %145 = add i32 %43, %144\l  %146 = zext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %4, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %149 = fcmp contract ogt float %148, %141\l  %150 = select i1 %149, i32 %140, i32 %142\l  %151 = select i1 %149, float %148, float %141\l  %152 = add nuw i32 %140, 1\l  %153 = add i32 %143, 1\l  %154 = icmp eq i32 %153, %35\l  br i1 %154, label %155, label %139, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x59b2870:s0 -> Node0x59af220;
	Node0x59b2870:s1 -> Node0x59b2870;
	Node0x59af220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%155:\l155:                                              \l  %156 = phi i32 [ %133, %127 ], [ %135, %134 ], [ %150, %139 ]\l  %157 = add i32 %41, %9\l  %158 = zext i32 %157 to i64\l  %159 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %158\l  store i32 %156, i32 addrspace(1)* %159, align 4, !tbaa !24\l  br label %160\l}"];
	Node0x59af220 -> Node0x59acff0;
	Node0x59acff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%160:\l160:                                              \l  %161 = add i32 %41, %28\l  %162 = icmp ult i32 %161, %7\l  br i1 %162, label %40, label %39, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x59acff0:s0 -> Node0x59aceb0;
	Node0x59acff0:s1 -> Node0x59ac6e0;
}
