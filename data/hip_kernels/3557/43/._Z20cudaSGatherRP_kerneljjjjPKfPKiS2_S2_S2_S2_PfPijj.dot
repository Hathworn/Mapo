digraph "CFG for '_Z20cudaSGatherRP_kerneljjjjPKfPKiS2_S2_S2_S2_PfPijj' function" {
	label="CFG for '_Z20cudaSGatherRP_kerneljjjjPKfPKiS2_S2_S2_S2_PfPijj' function";

	Node0x48d6780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %16 = mul i32 %15, %12\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %18 = and i32 %17, 31\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %21 = getelementptr i8, i8 addrspace(4)* %20, i64 4\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 4, !range !5, !invariant.load !6\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %19, %24\l  %26 = add i32 %25, %18\l  %27 = icmp ult i32 %26, %13\l  br i1 %27, label %28, label %110\l|{<s0>T|<s1>F}}"];
	Node0x48d6780:s0 -> Node0x48d9670;
	Node0x48d6780:s1 -> Node0x48d9700;
	Node0x48d9670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%28:\l28:                                               \l  %29 = mul i32 %15, %13\l  %30 = add i32 %26, %29\l  %31 = add nsw i32 %26, %16\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %35 = add nsw i32 %34, %16\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %36\l  %40 = load i32, i32 addrspace(1)* %39, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %41 = mul i32 %40, %0\l  %42 = add i32 %41, %38\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %36\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %45 = add i32 %44, %2\l  %46 = mul i32 %1, %0\l  %47 = mul i32 %46, %45\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %36\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %50 = mul i32 %46, 6\l  %51 = mul i32 %50, %2\l  %52 = mul i32 %51, %49\l  %53 = add i32 %52, %42\l  %54 = add i32 %53, %47\l  %55 = shl i32 %2, 1\l  %56 = add i32 %44, %55\l  %57 = mul i32 %46, %56\l  %58 = add i32 %53, %57\l  %59 = mul i32 %2, 3\l  %60 = add i32 %44, %59\l  %61 = mul i32 %46, %60\l  %62 = add i32 %53, %61\l  %63 = shl i32 %2, 2\l  %64 = add i32 %44, %63\l  %65 = mul i32 %46, %64\l  %66 = add i32 %53, %65\l  %67 = sext i32 %34 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %70 = shl nsw i32 %30, 2\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %71\l  store i32 %69, i32 addrspace(1)* %72, align 4, !tbaa !7\l  %73 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !7\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %74\l  %76 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !7\l  %77 = add nuw nsw i32 %70, 1\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %78\l  store i32 %76, i32 addrspace(1)* %79, align 4, !tbaa !7\l  %80 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !7\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !7\l  %84 = add nuw nsw i32 %70, 2\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %85\l  store i32 %83, i32 addrspace(1)* %86, align 4, !tbaa !7\l  %87 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !7\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %88\l  %90 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !7\l  %91 = add nuw nsw i32 %70, 3\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %92\l  store i32 %90, i32 addrspace(1)* %93, align 4, !tbaa !7\l  %94 = zext i32 %54 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %4, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %97 = getelementptr inbounds float, float addrspace(1)* %10, i64 %71\l  store float %96, float addrspace(1)* %97, align 4, !tbaa !11\l  %98 = zext i32 %58 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %4, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !11\l  %101 = getelementptr inbounds float, float addrspace(1)* %10, i64 %78\l  store float %100, float addrspace(1)* %101, align 4, !tbaa !11\l  %102 = zext i32 %62 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %4, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !11\l  %105 = getelementptr inbounds float, float addrspace(1)* %10, i64 %85\l  store float %104, float addrspace(1)* %105, align 4, !tbaa !11\l  %106 = zext i32 %66 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %4, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !11\l  %109 = getelementptr inbounds float, float addrspace(1)* %10, i64 %92\l  store float %108, float addrspace(1)* %109, align 4, !tbaa !11\l  br label %110\l}"];
	Node0x48d9670 -> Node0x48d9700;
	Node0x48d9700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%110:\l110:                                              \l  ret void\l}"];
}
