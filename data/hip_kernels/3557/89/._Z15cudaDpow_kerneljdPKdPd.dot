digraph "CFG for '_Z15cudaDpow_kerneljdPKdPd' function" {
	label="CFG for '_Z15cudaDpow_kerneljdPKdPd' function";

	Node0x4c1e0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = mul i32 %5, %10\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %16 = add i32 %14, %15\l  %17 = udiv i32 %13, %10\l  %18 = mul i32 %17, %10\l  %19 = icmp ugt i32 %13, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %10\l  %23 = icmp ult i32 %16, %0\l  br i1 %23, label %24, label %44\l|{<s0>T|<s1>F}}"];
	Node0x4c1e0c0:s0 -> Node0x4c20680;
	Node0x4c1e0c0:s1 -> Node0x4c20710;
	Node0x4c20680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%24:\l24:                                               \l  %25 = fptrunc double %1 to float\l  %26 = tail call float @llvm.fabs.f32(float %25)\l  %27 = tail call float @llvm.trunc.f32(float %26)\l  %28 = fcmp oeq float %26, %27\l  %29 = zext i1 %28 to i32\l  %30 = fmul float %27, 5.000000e-01\l  %31 = tail call float @llvm.amdgcn.fract.f32(float %30)\l  %32 = tail call i1 @llvm.amdgcn.class.f32(float %30, i32 516)\l  %33 = select i1 %32, float 0.000000e+00, float %31\l  %34 = fcmp oeq float %33, 0.000000e+00\l  %35 = and i1 %28, %34\l  %36 = zext i1 %35 to i32\l  %37 = add nuw nsw i32 %36, %29\l  %38 = icmp eq i32 %37, 1\l  %39 = icmp ne i32 %37, 0\l  %40 = fcmp oeq float %26, 0x7FF0000000000000\l  %41 = bitcast float %25 to i32\l  %42 = fcmp olt float %25, 0.000000e+00\l  %43 = fcmp oeq float %25, 0.000000e+00\l  br i1 %40, label %218, label %45\l|{<s0>T|<s1>F}}"];
	Node0x4c20680:s0 -> Node0x4c22510;
	Node0x4c20680:s1 -> Node0x4c225a0;
	Node0x4c20710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%44:\l44:                                               \l  ret void\l}"];
	Node0x4c225a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d8564670",label="{%45:\l45:                                               \l  %46 = phi i32 [ %216, %45 ], [ %16, %24 ]\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds double, double addrspace(1)* %2, i64 %47\l  %49 = load double, double addrspace(1)* %48, align 8, !tbaa !16\l  %50 = fptrunc double %49 to float\l  %51 = tail call float @llvm.fabs.f32(float %50)\l  %52 = tail call float @llvm.amdgcn.frexp.mant.f32(float %51)\l  %53 = fcmp olt float %52, 0x3FE5555560000000\l  %54 = zext i1 %53 to i32\l  %55 = tail call float @llvm.amdgcn.ldexp.f32(float %52, i32 %54)\l  %56 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %51)\l  %57 = sub nsw i32 %56, %54\l  %58 = fadd float %55, -1.000000e+00\l  %59 = fadd float %55, 1.000000e+00\l  %60 = fadd float %59, -1.000000e+00\l  %61 = fsub float %55, %60\l  %62 = tail call float @llvm.amdgcn.rcp.f32(float %59)\l  %63 = fmul float %58, %62\l  %64 = fmul float %59, %63\l  %65 = fneg float %64\l  %66 = tail call float @llvm.fma.f32(float %63, float %59, float %65)\l  %67 = tail call float @llvm.fma.f32(float %63, float %61, float %66)\l  %68 = fadd float %64, %67\l  %69 = fsub float %68, %64\l  %70 = fsub float %67, %69\l  %71 = fsub float %58, %68\l  %72 = fsub float %58, %71\l  %73 = fsub float %72, %68\l  %74 = fsub float %73, %70\l  %75 = fadd float %71, %74\l  %76 = fmul float %62, %75\l  %77 = fadd float %63, %76\l  %78 = fsub float %77, %63\l  %79 = fsub float %76, %78\l  %80 = fmul float %77, %77\l  %81 = fneg float %80\l  %82 = tail call float @llvm.fma.f32(float %77, float %77, float %81)\l  %83 = fmul float %79, 2.000000e+00\l  %84 = tail call float @llvm.fma.f32(float %77, float %83, float %82)\l  %85 = fadd float %80, %84\l  %86 = fsub float %85, %80\l  %87 = fsub float %84, %86\l  %88 = tail call float @llvm.fmuladd.f32(float %85, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %89 = tail call float @llvm.fmuladd.f32(float %85, float %88, float\l... 0x3FD999BDE0000000)\l  %90 = sitofp i32 %57 to float\l  %91 = fmul float %90, 0x3FE62E4300000000\l  %92 = fneg float %91\l  %93 = tail call float @llvm.fma.f32(float %90, float 0x3FE62E4300000000,\l... float %92)\l  %94 = tail call float @llvm.fma.f32(float %90, float 0xBE205C6100000000,\l... float %93)\l  %95 = fadd float %91, %94\l  %96 = fsub float %95, %91\l  %97 = fsub float %94, %96\l  %98 = tail call float @llvm.amdgcn.ldexp.f32(float %77, i32 1)\l  %99 = fmul float %77, %85\l  %100 = fneg float %99\l  %101 = tail call float @llvm.fma.f32(float %85, float %77, float %100)\l  %102 = tail call float @llvm.fma.f32(float %85, float %79, float %101)\l  %103 = tail call float @llvm.fma.f32(float %87, float %77, float %102)\l  %104 = fadd float %99, %103\l  %105 = fsub float %104, %99\l  %106 = fsub float %103, %105\l  %107 = fmul float %85, %89\l  %108 = fneg float %107\l  %109 = tail call float @llvm.fma.f32(float %85, float %89, float %108)\l  %110 = tail call float @llvm.fma.f32(float %87, float %89, float %109)\l  %111 = fadd float %107, %110\l  %112 = fsub float %111, %107\l  %113 = fsub float %110, %112\l  %114 = fadd float %111, 0x3FE5555540000000\l  %115 = fadd float %114, 0xBFE5555540000000\l  %116 = fsub float %111, %115\l  %117 = fadd float %113, 0x3E2E720200000000\l  %118 = fadd float %117, %116\l  %119 = fadd float %114, %118\l  %120 = fsub float %119, %114\l  %121 = fsub float %118, %120\l  %122 = fmul float %104, %119\l  %123 = fneg float %122\l  %124 = tail call float @llvm.fma.f32(float %104, float %119, float %123)\l  %125 = tail call float @llvm.fma.f32(float %104, float %121, float %124)\l  %126 = tail call float @llvm.fma.f32(float %106, float %119, float %125)\l  %127 = tail call float @llvm.amdgcn.ldexp.f32(float %79, i32 1)\l  %128 = fadd float %122, %126\l  %129 = fsub float %128, %122\l  %130 = fsub float %126, %129\l  %131 = fadd float %98, %128\l  %132 = fsub float %131, %98\l  %133 = fsub float %128, %132\l  %134 = fadd float %127, %130\l  %135 = fadd float %134, %133\l  %136 = fadd float %131, %135\l  %137 = fsub float %136, %131\l  %138 = fsub float %135, %137\l  %139 = fadd float %95, %136\l  %140 = fsub float %139, %95\l  %141 = fsub float %139, %140\l  %142 = fsub float %95, %141\l  %143 = fsub float %136, %140\l  %144 = fadd float %143, %142\l  %145 = fadd float %97, %138\l  %146 = fsub float %145, %97\l  %147 = fsub float %145, %146\l  %148 = fsub float %97, %147\l  %149 = fsub float %138, %146\l  %150 = fadd float %149, %148\l  %151 = fadd float %145, %144\l  %152 = fadd float %139, %151\l  %153 = fsub float %152, %139\l  %154 = fsub float %151, %153\l  %155 = fadd float %150, %154\l  %156 = fadd float %152, %155\l  %157 = fsub float %156, %152\l  %158 = fsub float %155, %157\l  %159 = fmul float %156, %25\l  %160 = fneg float %159\l  %161 = tail call float @llvm.fma.f32(float %25, float %156, float %160)\l  %162 = tail call float @llvm.fma.f32(float %25, float %158, float %161)\l  %163 = fadd float %159, %162\l  %164 = fsub float %163, %159\l  %165 = fsub float %162, %164\l  %166 = tail call float @llvm.fabs.f32(float %159) #3\l  %167 = fcmp oeq float %166, 0x7FF0000000000000\l  %168 = select i1 %167, float %159, float %163\l  %169 = tail call float @llvm.fabs.f32(float %168) #3\l  %170 = fcmp oeq float %169, 0x7FF0000000000000\l  %171 = select i1 %170, float 0.000000e+00, float %165\l  %172 = fcmp oeq float %168, 0x40562E4300000000\l  %173 = select i1 %172, float 0x3EE0000000000000, float 0.000000e+00\l  %174 = fsub float %168, %173\l  %175 = fadd float %173, %171\l  %176 = fmul float %174, 0x3FF7154760000000\l  %177 = tail call float @llvm.rint.f32(float %176)\l  %178 = fcmp ogt float %174, 0x40562E4300000000\l  %179 = fcmp olt float %174, 0xC059D1DA00000000\l  %180 = fneg float %176\l  %181 = tail call float @llvm.fma.f32(float %174, float 0x3FF7154760000000,\l... float %180)\l  %182 = tail call float @llvm.fma.f32(float %174, float 0x3E54AE0BE0000000,\l... float %181)\l  %183 = fsub float %176, %177\l  %184 = fadd float %182, %183\l  %185 = tail call float @llvm.exp2.f32(float %184)\l  %186 = fptosi float %177 to i32\l  %187 = tail call float @llvm.amdgcn.ldexp.f32(float %185, i32 %186)\l  %188 = select i1 %179, float 0.000000e+00, float %187\l  %189 = select i1 %178, float 0x7FF0000000000000, float %188\l  %190 = tail call float @llvm.fma.f32(float %189, float %175, float %189)\l  %191 = tail call float @llvm.fabs.f32(float %189) #3\l  %192 = fcmp oeq float %191, 0x7FF0000000000000\l  %193 = select i1 %192, float %189, float %190\l  %194 = fcmp olt float %50, 0.000000e+00\l  %195 = and i1 %38, %194\l  %196 = select i1 %195, float -0.000000e+00, float 0.000000e+00\l  %197 = tail call float @llvm.copysign.f32(float %193, float %196)\l  %198 = fcmp uge float %50, 0.000000e+00\l  %199 = select i1 %198, i1 true, i1 %39\l  %200 = select i1 %199, float %197, float 0x7FF8000000000000\l  %201 = fcmp oeq float %51, 0x7FF0000000000000\l  %202 = fcmp oeq float %50, 0.000000e+00\l  %203 = or i1 %202, %201\l  %204 = xor i1 %42, %202\l  %205 = select i1 %204, float 0.000000e+00, float 0x7FF0000000000000\l  %206 = select i1 %38, float %50, float 0.000000e+00\l  %207 = tail call float @llvm.copysign.f32(float %205, float %206)\l  %208 = select i1 %203, float %207, float %200\l  %209 = fcmp uno float %50, %25\l  %210 = select i1 %209, float 0x7FF8000000000000, float %208\l  %211 = fcmp oeq float %50, 1.000000e+00\l  %212 = or i1 %43, %211\l  %213 = fpext float %210 to double\l  %214 = select i1 %212, double 1.000000e+00, double %213\l  %215 = getelementptr inbounds double, double addrspace(1)* %3, i64 %47\l  store double %214, double addrspace(1)* %215, align 8, !tbaa !16\l  %216 = add i32 %46, %22\l  %217 = icmp ult i32 %216, %0\l  br i1 %217, label %45, label %44, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4c225a0:s0 -> Node0x4c225a0;
	Node0x4c225a0:s1 -> Node0x4c20710;
	Node0x4c22510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%218:\l218:                                              \l  %219 = phi i32 [ %247, %218 ], [ %16, %24 ]\l  %220 = zext i32 %219 to i64\l  %221 = getelementptr inbounds double, double addrspace(1)* %2, i64 %220\l  %222 = load double, double addrspace(1)* %221, align 8, !tbaa !16\l  %223 = fptrunc double %222 to float\l  %224 = tail call float @llvm.fabs.f32(float %223)\l  %225 = fcmp oeq float %224, 1.000000e+00\l  %226 = fadd float %224, -1.000000e+00\l  %227 = bitcast float %226 to i32\l  %228 = xor i32 %227, %41\l  %229 = icmp sgt i32 %228, -1\l  %230 = select i1 %229, float 0x7FF0000000000000, float 0.000000e+00\l  %231 = select i1 %225, float %224, float %230\l  %232 = fcmp oeq float %224, 0x7FF0000000000000\l  %233 = fcmp oeq float %223, 0.000000e+00\l  %234 = or i1 %233, %232\l  %235 = xor i1 %42, %233\l  %236 = select i1 %235, float 0.000000e+00, float 0x7FF0000000000000\l  %237 = select i1 %38, float %223, float 0.000000e+00\l  %238 = tail call float @llvm.copysign.f32(float %236, float %237)\l  %239 = select i1 %234, float %238, float %231\l  %240 = fcmp uno float %223, %25\l  %241 = select i1 %240, float 0x7FF8000000000000, float %239\l  %242 = fcmp oeq float %223, 1.000000e+00\l  %243 = or i1 %43, %242\l  %244 = fpext float %241 to double\l  %245 = select i1 %243, double 1.000000e+00, double %244\l  %246 = getelementptr inbounds double, double addrspace(1)* %3, i64 %220\l  store double %245, double addrspace(1)* %246, align 8, !tbaa !16\l  %247 = add i32 %219, %22\l  %248 = icmp ult i32 %247, %0\l  br i1 %248, label %218, label %44, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4c22510:s0 -> Node0x4c22510;
	Node0x4c22510:s1 -> Node0x4c20710;
}
