digraph "CFG for '_Z30cudaSSoftplus_propagate_kernelPfS_j' function" {
	label="CFG for '_Z30cudaSSoftplus_propagate_kernelPfS_j' function";

	Node0x5f99d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = udiv i32 %12, %9\l  %17 = mul i32 %16, %9\l  %18 = icmp ugt i32 %12, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %9\l  %22 = icmp ult i32 %15, %2\l  br i1 %22, label %24, label %23\l|{<s0>T|<s1>F}}"];
	Node0x5f99d10:s0 -> Node0x5f9c300;
	Node0x5f99d10:s1 -> Node0x5f9c390;
	Node0x5f9c390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%23:\l23:                                               \l  ret void\l}"];
	Node0x5f9c300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %58, %24 ], [ %15, %3 ]\l  %26 = zext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !16\l  %29 = fmul float %28, 0x3FF7154760000000\l  %30 = tail call float @llvm.rint.f32(float %29)\l  %31 = fcmp ogt float %28, 0x40562E4300000000\l  %32 = fcmp olt float %28, 0xC059D1DA00000000\l  %33 = fneg float %29\l  %34 = tail call float @llvm.fma.f32(float %28, float 0x3FF7154760000000,\l... float %33)\l  %35 = tail call float @llvm.fma.f32(float %28, float 0x3E54AE0BE0000000,\l... float %34)\l  %36 = fsub float %29, %30\l  %37 = fadd float %35, %36\l  %38 = tail call float @llvm.exp2.f32(float %37)\l  %39 = fptosi float %30 to i32\l  %40 = tail call float @llvm.amdgcn.ldexp.f32(float %38, i32 %39)\l  %41 = fadd contract float %40, 1.000000e+00\l  %42 = select i1 %32, float 1.000000e+00, float %41\l  %43 = select i1 %31, float 0x7FF0000000000000, float %42\l  %44 = tail call i1 @llvm.amdgcn.class.f32(float %43, i32 144)\l  %45 = select i1 %44, float 0x41F0000000000000, float 1.000000e+00\l  %46 = fmul float %43, %45\l  %47 = tail call float @llvm.log2.f32(float %46)\l  %48 = fmul float %47, 0x3FE62E42E0000000\l  %49 = tail call i1 @llvm.amdgcn.class.f32(float %47, i32 519)\l  %50 = fneg float %48\l  %51 = tail call float @llvm.fma.f32(float %47, float 0x3FE62E42E0000000,\l... float %50)\l  %52 = tail call float @llvm.fma.f32(float %47, float 0x3E6EFA39E0000000,\l... float %51)\l  %53 = fadd float %48, %52\l  %54 = select i1 %49, float %47, float %53\l  %55 = select i1 %44, float 0x40362E4300000000, float 0.000000e+00\l  %56 = fsub float %54, %55\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %26\l  store float %56, float addrspace(1)* %57, align 4, !tbaa !16\l  %58 = add i32 %25, %21\l  %59 = icmp ult i32 %58, %2\l  br i1 %59, label %24, label %23, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5f9c300:s0 -> Node0x5f9c300;
	Node0x5f9c300:s1 -> Node0x5f9c390;
}
