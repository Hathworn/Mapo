digraph "CFG for '_Z31cudaSRectifier_propagate_kernelPfS_jff' function" {
	label="CFG for '_Z31cudaSRectifier_propagate_kernelPfS_jff' function";

	Node0x614a870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = udiv i32 %14, %11\l  %19 = mul i32 %18, %11\l  %20 = icmp ugt i32 %14, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %11\l  %24 = icmp ult i32 %17, %2\l  br i1 %24, label %25, label %27\l|{<s0>T|<s1>F}}"];
	Node0x614a870:s0 -> Node0x614ce20;
	Node0x614a870:s1 -> Node0x614ceb0;
	Node0x614ce20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%25:\l25:                                               \l  %26 = fcmp contract ogt float %4, 0.000000e+00\l  br label %28\l}"];
	Node0x614ce20 -> Node0x614da90;
	Node0x614ceb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%27:\l27:                                               \l  ret void\l}"];
	Node0x614da90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %17, %25 ], [ %44, %41 ]\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %33 = fcmp contract ogt float %32, 0.000000e+00\l  br i1 %26, label %34, label %38\l|{<s0>T|<s1>F}}"];
	Node0x614da90:s0 -> Node0x614c9d0;
	Node0x614da90:s1 -> Node0x614e220;
	Node0x614c9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%34:\l34:                                               \l  %35 = tail call float @llvm.minnum.f32(float %32, float %4)\l  %36 = fmul contract float %32, %3\l  %37 = select contract i1 %33, float %35, float %36\l  br label %41\l}"];
	Node0x614c9d0 -> Node0x614dbe0;
	Node0x614e220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%38:\l38:                                               \l  %39 = select contract i1 %33, float 1.000000e+00, float %3\l  %40 = fmul contract float %32, %39\l  br label %41\l}"];
	Node0x614e220 -> Node0x614dbe0;
	Node0x614dbe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = phi float [ %37, %34 ], [ %40, %38 ]\l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  store float %42, float addrspace(1)* %43, align 4\l  %44 = add i32 %29, %23\l  %45 = icmp ult i32 %44, %2\l  br i1 %45, label %28, label %27, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x614dbe0:s0 -> Node0x614da90;
	Node0x614dbe0:s1 -> Node0x614ceb0;
}
