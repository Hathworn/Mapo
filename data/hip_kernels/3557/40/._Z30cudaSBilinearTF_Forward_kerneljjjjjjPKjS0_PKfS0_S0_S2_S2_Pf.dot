digraph "CFG for '_Z30cudaSBilinearTF_Forward_kerneljjjjjjPKjS0_PKfS0_S0_S2_S2_Pf' function" {
	label="CFG for '_Z30cudaSBilinearTF_Forward_kerneljjjjjjPKjS0_PKfS0_S0_S2_S2_Pf' function";

	Node0x5138bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%14:\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %16 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %17 = getelementptr i8, i8 addrspace(4)* %16, i64 8\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %15, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !6\l  %23 = add i32 %21, %22\l  %24 = mul i32 %23, %2\l  %25 = mul i32 %5, %4\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %27 = icmp ult i32 %26, %2\l  br i1 %27, label %28, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5138bb0:s0 -> Node0x513ba80;
	Node0x5138bb0:s1 -> Node0x513bb10;
	Node0x513ba80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%28:\l28:                                               \l  %29 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %30 = icmp ult i32 %29, %1\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %32 = icmp ult i32 %31, %0\l  %33 = getelementptr i8, i8 addrspace(4)* %16, i64 4\l  %34 = bitcast i8 addrspace(4)* %33 to i16 addrspace(4)*\l  %35 = load i16, i16 addrspace(4)* %34, align 4\l  %36 = zext i16 %35 to i32\l  %37 = getelementptr i8, i8 addrspace(4)* %16, i64 6\l  %38 = bitcast i8 addrspace(4)* %37 to i16 addrspace(4)*\l  %39 = load i16, i16 addrspace(4)* %38, align 2\l  %40 = zext i16 %39 to i32\l  %41 = getelementptr inbounds i8, i8 addrspace(4)* %16, i64 12\l  %42 = bitcast i8 addrspace(4)* %41 to i32 addrspace(4)*\l  %43 = load i32, i32 addrspace(4)* %42, align 4, !tbaa !7\l  %44 = udiv i32 %43, %36\l  %45 = mul i32 %44, %36\l  %46 = icmp ugt i32 %43, %45\l  %47 = zext i1 %46 to i32\l  br label %49\l}"];
	Node0x513ba80 -> Node0x513d1f0;
	Node0x513bb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%48:\l48:                                               \l  ret void\l}"];
	Node0x513d1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%49:\l49:                                               \l  %50 = phi i32 [ %26, %28 ], [ %58, %56 ]\l  br i1 %30, label %51, label %56\l|{<s0>T|<s1>F}}"];
	Node0x513d1f0:s0 -> Node0x513d440;
	Node0x513d1f0:s1 -> Node0x513d340;
	Node0x513d440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%51:\l51:                                               \l  %52 = add i32 %50, %24\l  %53 = mul i32 %25, %52\l  %54 = add i32 %50, %24\l  %55 = mul i32 %54, %1\l  br label %60\l}"];
	Node0x513d440 -> Node0x513d7c0;
	Node0x513d340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%56:\l56:                                               \l  %57 = add i32 %44, %50\l  %58 = add i32 %57, %47\l  %59 = icmp ult i32 %58, %2\l  br i1 %59, label %49, label %48, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x513d340:s0 -> Node0x513d1f0;
	Node0x513d340:s1 -> Node0x513bb10;
	Node0x513d7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%60:\l60:                                               \l  %61 = phi i32 [ %29, %51 ], [ %75, %74 ]\l  br i1 %32, label %62, label %74\l|{<s0>T|<s1>F}}"];
	Node0x513d7c0:s0 -> Node0x513dce0;
	Node0x513d7c0:s1 -> Node0x513dba0;
	Node0x513dce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%62:\l62:                                               \l  %63 = zext i32 %61 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !18, !amdgpu.noclobber\l... !5\l  %66 = mul i32 %65, %4\l  %67 = add i32 %53, %66\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %63\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !18, !amdgpu.noclobber\l... !5\l  %70 = mul i32 %69, %4\l  %71 = getelementptr inbounds float, float addrspace(1)* %8, i64 %63\l  %72 = add i32 %55, %61\l  %73 = mul i32 %72, %0\l  br label %77\l}"];
	Node0x513dce0 -> Node0x513f460;
	Node0x513dba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%74:\l74:                                               \l  %75 = add i32 %61, %40\l  %76 = icmp ult i32 %75, %1\l  br i1 %76, label %60, label %56, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x513dba0:s0 -> Node0x513d7c0;
	Node0x513dba0:s1 -> Node0x513d340;
	Node0x513f460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi i32 [ %31, %62 ], [ %117, %77 ]\l  %79 = zext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %79\l  %81 = load i32, i32 addrspace(1)* %80, align 4, !tbaa !18, !amdgpu.noclobber\l... !5\l  %82 = add i32 %53, %81\l  %83 = add i32 %82, %66\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %10, i64 %79\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !18, !amdgpu.noclobber\l... !5\l  %86 = add i32 %67, %85\l  %87 = add i32 %82, %70\l  %88 = add i32 %53, %85\l  %89 = add i32 %88, %70\l  %90 = zext i32 %83 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %12, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !23\l  %93 = zext i32 %86 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %12, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !23\l  %96 = zext i32 %87 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %12, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !23\l  %99 = zext i32 %89 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %12, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !23\l  %102 = fsub contract float %95, %92\l  %103 = getelementptr inbounds float, float addrspace(1)* %11, i64 %79\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !23\l  %105 = fmul contract float %102, %104\l  %106 = fadd contract float %92, %105\l  %107 = fsub contract float %101, %98\l  %108 = fmul contract float %107, %104\l  %109 = fadd contract float %98, %108\l  %110 = fsub contract float %109, %106\l  %111 = load float, float addrspace(1)* %71, align 4, !tbaa !23\l  %112 = fmul contract float %111, %110\l  %113 = fadd contract float %106, %112\l  %114 = add i32 %78, %73\l  %115 = zext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %13, i64 %115\l  store float %113, float addrspace(1)* %116, align 4, !tbaa !23\l  %117 = add i32 %78, %36\l  %118 = icmp ult i32 %117, %0\l  br i1 %118, label %77, label %74, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x513f460:s0 -> Node0x513f460;
	Node0x513f460:s1 -> Node0x513dba0;
}
