digraph "CFG for '_Z20cudaSGatherRP_kerneljjjjPKfS0_S0_S0_S0_PKiPfjj' function" {
	label="CFG for '_Z20cudaSGatherRP_kerneljjjjPKfS0_S0_S0_S0_PKiPfjj' function";

	Node0x5cd0590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%13:\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %15 = mul i32 %14, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %17 = and i32 %16, 31\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %18, %23\l  %25 = add i32 %24, %17\l  %26 = icmp ult i32 %25, %12\l  br i1 %26, label %27, label %107\l|{<s0>T|<s1>F}}"];
	Node0x5cd0590:s0 -> Node0x5cd3470;
	Node0x5cd0590:s1 -> Node0x5cd3500;
	Node0x5cd3470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%27:\l27:                                               \l  %28 = mul i32 %14, %12\l  %29 = add i32 %25, %28\l  %30 = add nsw i32 %25, %15\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %34 = add nsw i32 %33, %15\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %5, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %38 = getelementptr inbounds float, float addrspace(1)* %6, i64 %35\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %40 = uitofp i32 %0 to float\l  %41 = fmul contract float %39, %40\l  %42 = fadd contract float %37, %41\l  %43 = getelementptr inbounds float, float addrspace(1)* %7, i64 %35\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %45 = uitofp i32 %2 to float\l  %46 = fadd contract float %44, %45\l  %47 = fmul contract float %46, %40\l  %48 = uitofp i32 %1 to float\l  %49 = fmul contract float %47, %48\l  %50 = fadd contract float %42, %49\l  %51 = getelementptr inbounds float, float addrspace(1)* %8, i64 %35\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %53 = fmul contract float %52, %45\l  %54 = fmul contract float %53, %40\l  %55 = fmul contract float %54, %48\l  %56 = fmul contract float %55, 6.000000e+00\l  %57 = fadd contract float %50, %56\l  %58 = fptoui float %57 to i32\l  %59 = shl i32 %2, 1\l  %60 = uitofp i32 %59 to float\l  %61 = fadd contract float %44, %60\l  %62 = fmul contract float %61, %40\l  %63 = fmul contract float %62, %48\l  %64 = fadd contract float %42, %63\l  %65 = fadd contract float %64, %56\l  %66 = fptoui float %65 to i32\l  %67 = mul i32 %2, 3\l  %68 = uitofp i32 %67 to float\l  %69 = fadd contract float %44, %68\l  %70 = fmul contract float %69, %40\l  %71 = fmul contract float %70, %48\l  %72 = fadd contract float %42, %71\l  %73 = fadd contract float %72, %56\l  %74 = fptoui float %73 to i32\l  %75 = shl i32 %2, 2\l  %76 = uitofp i32 %75 to float\l  %77 = fadd contract float %44, %76\l  %78 = fmul contract float %77, %40\l  %79 = fmul contract float %78, %48\l  %80 = fadd contract float %42, %79\l  %81 = fadd contract float %80, %56\l  %82 = fptoui float %81 to i32\l  %83 = zext i32 %58 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %4, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %86 = shl nsw i32 %29, 2\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %10, i64 %87\l  store float %85, float addrspace(1)* %88, align 4, !tbaa !11\l  %89 = zext i32 %66 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %4, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !11\l  %92 = add nuw nsw i32 %86, 1\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %10, i64 %93\l  store float %91, float addrspace(1)* %94, align 4, !tbaa !11\l  %95 = zext i32 %74 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %4, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !11\l  %98 = add nuw nsw i32 %86, 2\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %10, i64 %99\l  store float %97, float addrspace(1)* %100, align 4, !tbaa !11\l  %101 = zext i32 %82 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %4, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !11\l  %104 = add nuw nsw i32 %86, 3\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %10, i64 %105\l  store float %103, float addrspace(1)* %106, align 4, !tbaa !11\l  br label %107\l}"];
	Node0x5cd3470 -> Node0x5cd3500;
	Node0x5cd3500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  ret void\l}"];
}
