digraph "CFG for '_Z16cudaSMult_kerneljPfS_fS_' function" {
	label="CFG for '_Z16cudaSMult_kerneljPfS_fS_' function";

	Node0x5ecb990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = udiv i32 %14, %11\l  %19 = mul i32 %18, %11\l  %20 = icmp ugt i32 %14, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %11\l  %24 = fcmp contract une float %3, 0.000000e+00\l  %25 = icmp ult i32 %17, %0\l  br i1 %24, label %27, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5ecb990:s0 -> Node0x5ece9e0;
	Node0x5ecb990:s1 -> Node0x5ecea70;
	Node0x5ecea70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%26:\l26:                                               \l  br i1 %25, label %42, label %53\l|{<s0>T|<s1>F}}"];
	Node0x5ecea70:s0 -> Node0x5ecebb0;
	Node0x5ecea70:s1 -> Node0x5ecec00;
	Node0x5ece9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%27:\l27:                                               \l  br i1 %25, label %28, label %53\l|{<s0>T|<s1>F}}"];
	Node0x5ece9e0:s0 -> Node0x5eced40;
	Node0x5ece9e0:s1 -> Node0x5ecec00;
	Node0x5eced40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %40, %28 ], [ %17, %27 ]\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %33 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16\l  %35 = fmul contract float %32, %34\l  %36 = getelementptr inbounds float, float addrspace(1)* %4, i64 %30\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16\l  %38 = fmul contract float %37, %3\l  %39 = fadd contract float %35, %38\l  store float %39, float addrspace(1)* %36, align 4, !tbaa !16\l  %40 = add i32 %29, %23\l  %41 = icmp ult i32 %40, %0\l  br i1 %41, label %28, label %53, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5eced40:s0 -> Node0x5eced40;
	Node0x5eced40:s1 -> Node0x5ecec00;
	Node0x5ecebb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d8564670",label="{%42:\l42:                                               \l  %43 = phi i32 [ %51, %42 ], [ %17, %26 ]\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !16\l  %47 = getelementptr inbounds float, float addrspace(1)* %2, i64 %44\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !16\l  %49 = fmul contract float %46, %48\l  %50 = getelementptr inbounds float, float addrspace(1)* %4, i64 %44\l  store float %49, float addrspace(1)* %50, align 4, !tbaa !16\l  %51 = add i32 %43, %23\l  %52 = icmp ult i32 %51, %0\l  br i1 %52, label %42, label %53, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5ecebb0:s0 -> Node0x5ecebb0;
	Node0x5ecebb0:s1 -> Node0x5ecec00;
	Node0x5ecec00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%53:\l53:                                               \l  ret void\l}"];
}
