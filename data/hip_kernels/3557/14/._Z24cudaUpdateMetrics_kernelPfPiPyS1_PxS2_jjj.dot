digraph "CFG for '_Z24cudaUpdateMetrics_kernelPfPiPyS1_PxS2_jjj' function" {
	label="CFG for '_Z24cudaUpdateMetrics_kernelPfPiPyS1_PxS2_jjj' function";

	Node0x52fc650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %11 = mul i32 %10, %8\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = icmp ult i32 %12, %8\l  br i1 %13, label %14, label %33\l|{<s0>T|<s1>F}}"];
	Node0x52fc650:s0 -> Node0x52fd740;
	Node0x52fc650:s1 -> Node0x52fd7d0;
	Node0x52fd740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%14:\l14:                                               \l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %16 = icmp ult i32 %15, %7\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %18 = icmp ult i32 %17, %6\l  %19 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = getelementptr i8, i8 addrspace(4)* %19, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = getelementptr inbounds i8, i8 addrspace(4)* %19, i64 12\l  %25 = bitcast i8 addrspace(4)* %24 to i32 addrspace(4)*\l  %26 = load i32, i32 addrspace(4)* %25, align 4, !tbaa !5\l  %27 = load i16, i16 addrspace(4)* %21, align 4, !range !14, !invariant.load\l... !15\l  %28 = zext i16 %27 to i32\l  %29 = udiv i32 %26, %28\l  %30 = mul i32 %29, %28\l  %31 = icmp ugt i32 %26, %30\l  %32 = zext i1 %31 to i32\l  br label %34\l}"];
	Node0x52fd740 -> Node0x52fe720;
	Node0x52fd7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%33:\l33:                                               \l  ret void\l}"];
	Node0x52fe720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%34:\l34:                                               \l  %35 = phi i32 [ %12, %14 ], [ %43, %41 ]\l  br i1 %16, label %36, label %41\l|{<s0>T|<s1>F}}"];
	Node0x52fe720:s0 -> Node0x5300180;
	Node0x52fe720:s1 -> Node0x5300080;
	Node0x5300180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%36:\l36:                                               \l  %37 = add i32 %35, %11\l  %38 = mul i32 %37, %7\l  %39 = load i16, i16 addrspace(4)* %23, align 2, !range !14, !invariant.load\l... !15\l  %40 = zext i16 %39 to i32\l  br label %45\l}"];
	Node0x5300180 -> Node0x53010e0;
	Node0x5300080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%41:\l41:                                               \l  %42 = add i32 %29, %35\l  %43 = add i32 %42, %32\l  %44 = icmp ult i32 %43, %8\l  br i1 %44, label %34, label %33, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5300080:s0 -> Node0x52fe720;
	Node0x5300080:s1 -> Node0x52fd7d0;
	Node0x53010e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%45:\l45:                                               \l  %46 = phi i32 [ %15, %36 ], [ %51, %50 ]\l  br i1 %18, label %47, label %50\l|{<s0>T|<s1>F}}"];
	Node0x53010e0:s0 -> Node0x5301640;
	Node0x53010e0:s1 -> Node0x5301500;
	Node0x5301640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%47:\l47:                                               \l  %48 = add i32 %38, %46\l  %49 = mul i32 %48, %6\l  br label %53\l}"];
	Node0x5301640 -> Node0x53018a0;
	Node0x5301500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%50:\l50:                                               \l  %51 = add i32 %46, %40\l  %52 = icmp ult i32 %51, %7\l  br i1 %52, label %45, label %41, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x5301500:s0 -> Node0x53010e0;
	Node0x5301500:s1 -> Node0x5300080;
	Node0x53018a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi i32 [ %17, %47 ], [ %78, %53 ]\l  %55 = add i32 %54, %49\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !19,\l... !amdgpu.noclobber !15\l  %59 = tail call float @llvm.round.f32(float %58)\l  %60 = fptosi float %59 to i32\l  %61 = icmp ne i32 %60, 0\l  %62 = zext i1 %61 to i32\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %56\l  store i32 %62, i32 addrspace(1)* %63, align 4, !tbaa !23\l  %64 = zext i1 %61 to i64\l  %65 = getelementptr inbounds i64, i64 addrspace(1)* %2, i64 %56\l  %66 = load i64, i64 addrspace(1)* %65, align 8, !tbaa !25\l  %67 = add i64 %66, %64\l  store i64 %67, i64 addrspace(1)* %65, align 8, !tbaa !25\l  %68 = getelementptr inbounds i64, i64 addrspace(1)* %3, i64 %56\l  %69 = load i64, i64 addrspace(1)* %68, align 8, !tbaa !25\l  %70 = add i64 %69, %64\l  store i64 %70, i64 addrspace(1)* %68, align 8, !tbaa !25\l  %71 = sext i32 %60 to i64\l  %72 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %56\l  %73 = load i64, i64 addrspace(1)* %72, align 8, !tbaa !25\l  %74 = add nsw i64 %73, %71\l  store i64 %74, i64 addrspace(1)* %72, align 8, !tbaa !25\l  %75 = getelementptr inbounds i64, i64 addrspace(1)* %5, i64 %56\l  %76 = load i64, i64 addrspace(1)* %75, align 8, !tbaa !25\l  %77 = add nsw i64 %76, %71\l  store i64 %77, i64 addrspace(1)* %75, align 8, !tbaa !25\l  %78 = add i32 %54, %28\l  %79 = icmp ult i32 %78, %6\l  br i1 %79, label %53, label %50, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x53018a0:s0 -> Node0x53018a0;
	Node0x53018a0:s1 -> Node0x5301500;
}
