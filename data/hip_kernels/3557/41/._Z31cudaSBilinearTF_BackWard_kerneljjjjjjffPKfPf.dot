digraph "CFG for '_Z31cudaSBilinearTF_BackWard_kerneljjjjjjffPKfPf' function" {
	label="CFG for '_Z31cudaSBilinearTF_BackWard_kerneljjjjjjffPKfPf' function";

	Node0x4c1cae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 8\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !6\l  %19 = add i32 %17, %18\l  %20 = mul i32 %19, %2\l  %21 = mul i32 %5, %4\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %23 = icmp ult i32 %22, %2\l  br i1 %23, label %24, label %48\l|{<s0>T|<s1>F}}"];
	Node0x4c1cae0:s0 -> Node0x4c1fb30;
	Node0x4c1cae0:s1 -> Node0x4c1fbc0;
	Node0x4c1fb30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%24:\l24:                                               \l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = icmp ult i32 %25, %1\l  %27 = add i32 %5, -1\l  %28 = uitofp i32 %27 to float\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %30 = icmp ult i32 %29, %0\l  %31 = add i32 %4, -1\l  %32 = uitofp i32 %31 to float\l  %33 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %34 = bitcast i8 addrspace(4)* %33 to i16 addrspace(4)*\l  %35 = load i16, i16 addrspace(4)* %34, align 4\l  %36 = zext i16 %35 to i32\l  %37 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %38 = bitcast i8 addrspace(4)* %37 to i16 addrspace(4)*\l  %39 = load i16, i16 addrspace(4)* %38, align 2\l  %40 = zext i16 %39 to i32\l  %41 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %42 = bitcast i8 addrspace(4)* %41 to i32 addrspace(4)*\l  %43 = load i32, i32 addrspace(4)* %42, align 4, !tbaa !7\l  %44 = udiv i32 %43, %36\l  %45 = mul i32 %44, %36\l  %46 = icmp ugt i32 %43, %45\l  %47 = zext i1 %46 to i32\l  br label %49\l}"];
	Node0x4c1fb30 -> Node0x4c214d0;
	Node0x4c1fbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%48:\l48:                                               \l  ret void\l}"];
	Node0x4c214d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%49:\l49:                                               \l  %50 = phi i32 [ %22, %24 ], [ %58, %56 ]\l  br i1 %26, label %51, label %56\l|{<s0>T|<s1>F}}"];
	Node0x4c214d0:s0 -> Node0x4c21720;
	Node0x4c214d0:s1 -> Node0x4c21620;
	Node0x4c21720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%51:\l51:                                               \l  %52 = add i32 %50, %20\l  %53 = mul i32 %21, %52\l  %54 = add i32 %50, %20\l  %55 = mul i32 %54, %1\l  br label %60\l}"];
	Node0x4c21720 -> Node0x4c21aa0;
	Node0x4c21620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%56:\l56:                                               \l  %57 = add i32 %44, %50\l  %58 = add i32 %57, %47\l  %59 = icmp ult i32 %58, %2\l  br i1 %59, label %49, label %48, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4c21620:s0 -> Node0x4c214d0;
	Node0x4c21620:s1 -> Node0x4c1fbc0;
	Node0x4c21aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%60:\l60:                                               \l  %61 = phi i32 [ %25, %51 ], [ %81, %80 ]\l  %62 = uitofp i32 %61 to float\l  %63 = fmul contract float %62, %7\l  %64 = tail call float @llvm.floor.f32(float %63)\l  %65 = fptosi float %64 to i32\l  %66 = sitofp i32 %65 to float\l  %67 = fsub contract float %63, %66\l  %68 = fsub contract float 1.000000e+00, %67\l  br i1 %30, label %69, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4c21aa0:s0 -> Node0x4c20bc0;
	Node0x4c21aa0:s1 -> Node0x4c21e80;
	Node0x4c20bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%69:\l69:                                               \l  %70 = fcmp contract olt float %63, %28\l  %71 = tail call float @llvm.ceil.f32(float %63)\l  %72 = select i1 %70, float %71, float %28\l  %73 = fptosi float %72 to i32\l  %74 = mul i32 %65, %4\l  %75 = add i32 %53, %74\l  %76 = mul i32 %73, %4\l  %77 = add i32 %53, %76\l  %78 = add i32 %55, %61\l  %79 = mul i32 %78, %0\l  br label %83\l}"];
	Node0x4c20bc0 -> Node0x4c23950;
	Node0x4c21e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%80:\l80:                                               \l  %81 = add i32 %61, %40\l  %82 = icmp ult i32 %81, %1\l  br i1 %82, label %60, label %56, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x4c21e80:s0 -> Node0x4c21aa0;
	Node0x4c21e80:s1 -> Node0x4c21620;
	Node0x4c23950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  %84 = phi i32 [ %29, %69 ], [ %126, %83 ]\l  %85 = uitofp i32 %84 to float\l  %86 = fmul contract float %85, %6\l  %87 = tail call float @llvm.floor.f32(float %86)\l  %88 = fptosi float %87 to i32\l  %89 = fcmp contract olt float %86, %32\l  %90 = tail call float @llvm.ceil.f32(float %86)\l  %91 = select i1 %89, float %90, float %32\l  %92 = fptosi float %91 to i32\l  %93 = sitofp i32 %88 to float\l  %94 = fsub contract float %86, %93\l  %95 = fsub contract float 1.000000e+00, %94\l  %96 = add i32 %75, %88\l  %97 = add i32 %75, %92\l  %98 = add i32 %77, %88\l  %99 = add i32 %77, %92\l  %100 = add i32 %84, %79\l  %101 = zext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %8, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !19\l  %104 = fmul contract float %68, %103\l  %105 = fmul contract float %95, %104\l  %106 = zext i32 %96 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %9, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !19\l  %109 = fadd contract float %108, %105\l  store float %109, float addrspace(1)* %107, align 4, !tbaa !19\l  %110 = fmul contract float %94, %104\l  %111 = zext i32 %97 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %9, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !19\l  %114 = fadd contract float %110, %113\l  store float %114, float addrspace(1)* %112, align 4, !tbaa !19\l  %115 = fmul contract float %67, %103\l  %116 = fmul contract float %95, %115\l  %117 = zext i32 %98 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %9, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !19\l  %120 = fadd contract float %116, %119\l  store float %120, float addrspace(1)* %118, align 4, !tbaa !19\l  %121 = fmul contract float %94, %115\l  %122 = zext i32 %99 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %9, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !19\l  %125 = fadd contract float %121, %124\l  store float %125, float addrspace(1)* %123, align 4, !tbaa !19\l  %126 = add i32 %84, %36\l  %127 = icmp ult i32 %126, %0\l  br i1 %127, label %83, label %80, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x4c23950:s0 -> Node0x4c23950;
	Node0x4c23950:s1 -> Node0x4c21e80;
}
