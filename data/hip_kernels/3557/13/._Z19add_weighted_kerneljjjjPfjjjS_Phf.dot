digraph "CFG for '_Z19add_weighted_kerneljjjjPfjjjS_Phf' function" {
	label="CFG for '_Z19add_weighted_kerneljjjjPfjjjS_Phf' function";

	Node0x5334be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %13 = mul i32 %3, %2\l  %14 = mul i32 %13, %12\l  %15 = mul i32 %14, %1\l  %16 = mul i32 %7, %6\l  %17 = mul i32 %16, %12\l  %18 = mul i32 %17, %5\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %21 = getelementptr i8, i8 addrspace(4)* %20, i64 4\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 4, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 12\l  %26 = bitcast i8 addrspace(4)* %25 to i32 addrspace(4)*\l  %27 = load i32, i32 addrspace(4)* %26, align 4, !tbaa !6\l  %28 = mul i32 %19, %24\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %30 = add i32 %28, %29\l  %31 = udiv i32 %27, %24\l  %32 = mul i32 %31, %24\l  %33 = icmp ugt i32 %27, %32\l  %34 = zext i1 %33 to i32\l  %35 = add i32 %31, %34\l  %36 = mul i32 %35, %24\l  %37 = icmp ult i32 %30, %13\l  br i1 %37, label %38, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5334be0:s0 -> Node0x5337ec0;
	Node0x5334be0:s1 -> Node0x5337f50;
	Node0x5337ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%38:\l38:                                               \l  %39 = icmp ugt i32 %1, 1\l  %40 = shl i32 %16, 1\l  %41 = add i32 %1, -1\l  %42 = add i32 %1, -2\l  %43 = and i32 %41, 7\l  %44 = icmp ult i32 %42, 7\l  %45 = and i32 %41, -8\l  %46 = icmp eq i32 %43, 0\l  br label %48\l}"];
	Node0x5337ec0 -> Node0x5338600;
	Node0x5337f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%47:\l47:                                               \l  ret void\l}"];
	Node0x5338600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%48:\l48:                                               \l  %49 = phi i32 [ %30, %38 ], [ %209, %208 ]\l  br i1 %39, label %50, label %208\l|{<s0>T|<s1>F}}"];
	Node0x5338600:s0 -> Node0x5338840;
	Node0x5338600:s1 -> Node0x5338740;
	Node0x5338840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%50:\l50:                                               \l  %51 = add i32 %49, %15\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %4, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !16\l  br i1 %44, label %55, label %129\l|{<s0>T|<s1>F}}"];
	Node0x5338840:s0 -> Node0x5338cc0;
	Node0x5338840:s1 -> Node0x5338d50;
	Node0x5338cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%55:\l55:                                               \l  %56 = phi i32 [ undef, %50 ], [ %204, %129 ]\l  %57 = phi i32 [ 0, %50 ], [ %204, %129 ]\l  %58 = phi float [ %54, %50 ], [ %203, %129 ]\l  %59 = phi i32 [ 1, %50 ], [ %205, %129 ]\l  br i1 %46, label %76, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5338cc0:s0 -> Node0x5339640;
	Node0x5338cc0:s1 -> Node0x53396d0;
	Node0x53396d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  %61 = phi i32 [ %72, %60 ], [ %57, %55 ]\l  %62 = phi float [ %71, %60 ], [ %58, %55 ]\l  %63 = phi i32 [ %73, %60 ], [ %59, %55 ]\l  %64 = phi i32 [ %74, %60 ], [ 0, %55 ]\l  %65 = mul i32 %13, %63\l  %66 = add i32 %51, %65\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %4, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !16\l  %70 = fcmp contract ogt float %69, %62\l  %71 = select i1 %70, float %69, float %62\l  %72 = select i1 %70, i32 %63, i32 %61\l  %73 = add nuw i32 %63, 1\l  %74 = add i32 %64, 1\l  %75 = icmp eq i32 %74, %43\l  br i1 %75, label %76, label %60, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x53396d0:s0 -> Node0x5339640;
	Node0x53396d0:s1 -> Node0x53396d0;
	Node0x5339640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%76:\l76:                                               \l  %77 = phi i32 [ %56, %55 ], [ %72, %60 ]\l  %78 = and i32 %77, 3\l  %79 = zext i32 %78 to i64\l  %80 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]\l... addrspace(4)* @_ZL6colors, i64 0, i64 %79, i64 0\l  %81 = load float, float addrspace(4)* %80, align 4, !tbaa !16\l  %82 = fmul contract float %81, %10\l  %83 = add i32 %49, %18\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %8, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !16\l  %87 = fadd contract float %82, %86\l  %88 = fpext float %87 to double\l  %89 = tail call double @llvm.minnum.f64(double %88, double 2.550000e+02)\l  %90 = fpext float %82 to double\l  %91 = tail call double @llvm.maxnum.f64(double %90, double %89)\l  %92 = fptoui double %91 to i8\l  %93 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]\l... addrspace(4)* @_ZL6colors, i64 0, i64 %79, i64 1\l  %94 = load float, float addrspace(4)* %93, align 4, !tbaa !16\l  %95 = fmul contract float %94, %10\l  %96 = add i32 %83, %16\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %8, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !16\l  %100 = fadd contract float %95, %99\l  %101 = fpext float %100 to double\l  %102 = tail call double @llvm.minnum.f64(double %101, double 2.550000e+02)\l  %103 = fpext float %95 to double\l  %104 = tail call double @llvm.maxnum.f64(double %103, double %102)\l  %105 = fptoui double %104 to i8\l  %106 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]\l... addrspace(4)* @_ZL6colors, i64 0, i64 %79, i64 2\l  %107 = load float, float addrspace(4)* %106, align 4, !tbaa !16\l  %108 = fmul contract float %107, %10\l  %109 = add i32 %83, %40\l  %110 = zext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %8, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !16\l  %113 = fadd contract float %108, %112\l  %114 = fpext float %113 to double\l  %115 = tail call double @llvm.minnum.f64(double %114, double 2.550000e+02)\l  %116 = fpext float %108 to double\l  %117 = tail call double @llvm.maxnum.f64(double %116, double %115)\l  %118 = fptoui double %117 to i8\l  %119 = mul i32 %49, 3\l  %120 = add i32 %119, %18\l  %121 = zext i32 %120 to i64\l  %122 = getelementptr inbounds i8, i8 addrspace(1)* %9, i64 %121\l  store i8 %92, i8 addrspace(1)* %122, align 1, !tbaa !22\l  %123 = add i32 %120, 1\l  %124 = zext i32 %123 to i64\l  %125 = getelementptr inbounds i8, i8 addrspace(1)* %9, i64 %124\l  store i8 %105, i8 addrspace(1)* %125, align 1, !tbaa !22\l  %126 = add i32 %120, 2\l  %127 = zext i32 %126 to i64\l  %128 = getelementptr inbounds i8, i8 addrspace(1)* %9, i64 %127\l  store i8 %118, i8 addrspace(1)* %128, align 1, !tbaa !22\l  br label %208\l}"];
	Node0x5339640 -> Node0x5338740;
	Node0x5338d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%129:\l129:                                              \l  %130 = phi i32 [ %204, %129 ], [ 0, %50 ]\l  %131 = phi float [ %203, %129 ], [ %54, %50 ]\l  %132 = phi i32 [ %205, %129 ], [ 1, %50 ]\l  %133 = phi i32 [ %206, %129 ], [ 0, %50 ]\l  %134 = mul i32 %13, %132\l  %135 = add i32 %51, %134\l  %136 = zext i32 %135 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %4, i64 %136\l  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !16\l  %139 = fcmp contract ogt float %138, %131\l  %140 = select i1 %139, float %138, float %131\l  %141 = select i1 %139, i32 %132, i32 %130\l  %142 = add nuw nsw i32 %132, 1\l  %143 = mul i32 %13, %142\l  %144 = add i32 %51, %143\l  %145 = zext i32 %144 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %4, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !16\l  %148 = fcmp contract ogt float %147, %140\l  %149 = select i1 %148, float %147, float %140\l  %150 = select i1 %148, i32 %142, i32 %141\l  %151 = add nuw nsw i32 %132, 2\l  %152 = mul i32 %13, %151\l  %153 = add i32 %51, %152\l  %154 = zext i32 %153 to i64\l  %155 = getelementptr inbounds float, float addrspace(1)* %4, i64 %154\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !16\l  %157 = fcmp contract ogt float %156, %149\l  %158 = select i1 %157, float %156, float %149\l  %159 = select i1 %157, i32 %151, i32 %150\l  %160 = add nuw nsw i32 %132, 3\l  %161 = mul i32 %13, %160\l  %162 = add i32 %51, %161\l  %163 = zext i32 %162 to i64\l  %164 = getelementptr inbounds float, float addrspace(1)* %4, i64 %163\l  %165 = load float, float addrspace(1)* %164, align 4, !tbaa !16\l  %166 = fcmp contract ogt float %165, %158\l  %167 = select i1 %166, float %165, float %158\l  %168 = select i1 %166, i32 %160, i32 %159\l  %169 = add nuw nsw i32 %132, 4\l  %170 = mul i32 %13, %169\l  %171 = add i32 %51, %170\l  %172 = zext i32 %171 to i64\l  %173 = getelementptr inbounds float, float addrspace(1)* %4, i64 %172\l  %174 = load float, float addrspace(1)* %173, align 4, !tbaa !16\l  %175 = fcmp contract ogt float %174, %167\l  %176 = select i1 %175, float %174, float %167\l  %177 = select i1 %175, i32 %169, i32 %168\l  %178 = add nuw nsw i32 %132, 5\l  %179 = mul i32 %13, %178\l  %180 = add i32 %51, %179\l  %181 = zext i32 %180 to i64\l  %182 = getelementptr inbounds float, float addrspace(1)* %4, i64 %181\l  %183 = load float, float addrspace(1)* %182, align 4, !tbaa !16\l  %184 = fcmp contract ogt float %183, %176\l  %185 = select i1 %184, float %183, float %176\l  %186 = select i1 %184, i32 %178, i32 %177\l  %187 = add nuw nsw i32 %132, 6\l  %188 = mul i32 %13, %187\l  %189 = add i32 %51, %188\l  %190 = zext i32 %189 to i64\l  %191 = getelementptr inbounds float, float addrspace(1)* %4, i64 %190\l  %192 = load float, float addrspace(1)* %191, align 4, !tbaa !16\l  %193 = fcmp contract ogt float %192, %185\l  %194 = select i1 %193, float %192, float %185\l  %195 = select i1 %193, i32 %187, i32 %186\l  %196 = add nuw i32 %132, 7\l  %197 = mul i32 %13, %196\l  %198 = add i32 %51, %197\l  %199 = zext i32 %198 to i64\l  %200 = getelementptr inbounds float, float addrspace(1)* %4, i64 %199\l  %201 = load float, float addrspace(1)* %200, align 4, !tbaa !16\l  %202 = fcmp contract ogt float %201, %194\l  %203 = select i1 %202, float %201, float %194\l  %204 = select i1 %202, i32 %196, i32 %195\l  %205 = add nuw i32 %132, 8\l  %206 = add i32 %133, 8\l  %207 = icmp eq i32 %206, %45\l  br i1 %207, label %55, label %129, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5338d50:s0 -> Node0x5338cc0;
	Node0x5338d50:s1 -> Node0x5338d50;
	Node0x5338740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%208:\l208:                                              \l  %209 = add i32 %49, %36\l  %210 = icmp ult i32 %209, %13\l  br i1 %210, label %48, label %47, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x5338740:s0 -> Node0x5338600;
	Node0x5338740:s1 -> Node0x5337f50;
}
