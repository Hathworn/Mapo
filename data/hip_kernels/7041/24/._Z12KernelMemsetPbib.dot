digraph "CFG for '_Z12KernelMemsetPbib' function" {
	label="CFG for '_Z12KernelMemsetPbib' function";

	Node0x5891c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%3:\l  %4 = zext i1 %2 to i8\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = mul i32 %5, %10\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %16 = add i32 %14, %15\l  %17 = udiv i32 %13, %10\l  %18 = mul i32 %17, %10\l  %19 = icmp ugt i32 %13, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %10\l  %23 = icmp slt i32 %16, %1\l  br i1 %23, label %24, label %125\l|{<s0>T|<s1>F}}"];
	Node0x5891c70:s0 -> Node0x5894270;
	Node0x5891c70:s1 -> Node0x5894300;
	Node0x5894270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%24:\l24:                                               \l  %25 = add i32 %5, %17\l  %26 = add i32 %25, %20\l  %27 = mul i32 %26, %10\l  %28 = add i32 %15, %27\l  %29 = tail call i32 @llvm.smax.i32(i32 %1, i32 %28)\l  %30 = icmp slt i32 %28, %1\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = sub i32 %29, %32\l  %34 = udiv i32 %33, %22\l  %35 = add i32 %34, %31\l  %36 = add i32 %35, 1\l  %37 = icmp ult i32 %36, 4\l  br i1 %37, label %123, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5894270:s0 -> Node0x5894e00;
	Node0x5894270:s1 -> Node0x5894e90;
	Node0x5894e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%38:\l38:                                               \l  %39 = and i32 %36, -4\l  %40 = mul i32 %39, %22\l  %41 = add i32 %16, %40\l  %42 = insertelement \<4 x i32\> poison, i32 %16, i64 0\l  %43 = shufflevector \<4 x i32\> %42, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %44 = insertelement \<4 x i32\> poison, i32 %22, i64 0\l  %45 = shufflevector \<4 x i32\> %44, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %46 = mul \<4 x i32\> %45, \<i32 0, i32 1, i32 2, i32 3\>\l  %47 = add \<4 x i32\> %43, %46\l  %48 = shl i32 %22, 2\l  %49 = insertelement \<4 x i32\> poison, i32 %48, i64 0\l  %50 = shufflevector \<4 x i32\> %49, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %51 = add i32 %35, -3\l  %52 = lshr i32 %51, 2\l  %53 = add nuw nsw i32 %52, 1\l  %54 = and i32 %53, 3\l  %55 = icmp ult i32 %51, 12\l  br i1 %55, label %103, label %56\l|{<s0>T|<s1>F}}"];
	Node0x5894e90:s0 -> Node0x5896ac0;
	Node0x5894e90:s1 -> Node0x5896b50;
	Node0x5896b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%56:\l56:                                               \l  %57 = and i32 %53, -4\l  br label %58\l}"];
	Node0x5896b50 -> Node0x5896d20;
	Node0x5896d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%58:\l58:                                               \l  %59 = phi \<4 x i32\> [ %47, %56 ], [ %100, %58 ]\l  %60 = phi i32 [ 0, %56 ], [ %101, %58 ]\l  %61 = sext \<4 x i32\> %59 to \<4 x i64\>\l  %62 = extractelement \<4 x i64\> %61, i64 0\l  %63 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %62\l  %64 = extractelement \<4 x i64\> %61, i64 1\l  %65 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %64\l  %66 = extractelement \<4 x i64\> %61, i64 2\l  %67 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %66\l  %68 = extractelement \<4 x i64\> %61, i64 3\l  %69 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %68\l  store i8 %4, i8 addrspace(1)* %63, align 1, !tbaa !16\l  store i8 %4, i8 addrspace(1)* %65, align 1, !tbaa !16\l  store i8 %4, i8 addrspace(1)* %67, align 1, !tbaa !16\l  store i8 %4, i8 addrspace(1)* %69, align 1, !tbaa !16\l  %70 = add \<4 x i32\> %59, %50\l  %71 = sext \<4 x i32\> %70 to \<4 x i64\>\l  %72 = extractelement \<4 x i64\> %71, i64 0\l  %73 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %72\l  %74 = extractelement \<4 x i64\> %71, i64 1\l  %75 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %74\l  %76 = extractelement \<4 x i64\> %71, i64 2\l  %77 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %76\l  %78 = extractelement \<4 x i64\> %71, i64 3\l  %79 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %78\l  store i8 %4, i8 addrspace(1)* %73, align 1, !tbaa !16\l  store i8 %4, i8 addrspace(1)* %75, align 1, !tbaa !16\l  store i8 %4, i8 addrspace(1)* %77, align 1, !tbaa !16\l  store i8 %4, i8 addrspace(1)* %79, align 1, !tbaa !16\l  %80 = add \<4 x i32\> %70, %50\l  %81 = sext \<4 x i32\> %80 to \<4 x i64\>\l  %82 = extractelement \<4 x i64\> %81, i64 0\l  %83 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %82\l  %84 = extractelement \<4 x i64\> %81, i64 1\l  %85 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %84\l  %86 = extractelement \<4 x i64\> %81, i64 2\l  %87 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %86\l  %88 = extractelement \<4 x i64\> %81, i64 3\l  %89 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %88\l  store i8 %4, i8 addrspace(1)* %83, align 1, !tbaa !16\l  store i8 %4, i8 addrspace(1)* %85, align 1, !tbaa !16\l  store i8 %4, i8 addrspace(1)* %87, align 1, !tbaa !16\l  store i8 %4, i8 addrspace(1)* %89, align 1, !tbaa !16\l  %90 = add \<4 x i32\> %80, %50\l  %91 = sext \<4 x i32\> %90 to \<4 x i64\>\l  %92 = extractelement \<4 x i64\> %91, i64 0\l  %93 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %92\l  %94 = extractelement \<4 x i64\> %91, i64 1\l  %95 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %94\l  %96 = extractelement \<4 x i64\> %91, i64 2\l  %97 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %96\l  %98 = extractelement \<4 x i64\> %91, i64 3\l  %99 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %98\l  store i8 %4, i8 addrspace(1)* %93, align 1, !tbaa !16\l  store i8 %4, i8 addrspace(1)* %95, align 1, !tbaa !16\l  store i8 %4, i8 addrspace(1)* %97, align 1, !tbaa !16\l  store i8 %4, i8 addrspace(1)* %99, align 1, !tbaa !16\l  %100 = add \<4 x i32\> %90, %50\l  %101 = add nuw i32 %60, 4\l  %102 = icmp eq i32 %101, %57\l  br i1 %102, label %103, label %58, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5896d20:s0 -> Node0x5896ac0;
	Node0x5896d20:s1 -> Node0x5896d20;
	Node0x5896ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%103:\l103:                                              \l  %104 = phi \<4 x i32\> [ %47, %38 ], [ %100, %58 ]\l  %105 = icmp eq i32 %54, 0\l  br i1 %105, label %121, label %106\l|{<s0>T|<s1>F}}"];
	Node0x5896ac0:s0 -> Node0x5899e00;
	Node0x5896ac0:s1 -> Node0x5899e50;
	Node0x5899e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%106:\l106:                                              \l  %107 = phi \<4 x i32\> [ %118, %106 ], [ %104, %103 ]\l  %108 = phi i32 [ %119, %106 ], [ 0, %103 ]\l  %109 = sext \<4 x i32\> %107 to \<4 x i64\>\l  %110 = extractelement \<4 x i64\> %109, i64 0\l  %111 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %110\l  %112 = extractelement \<4 x i64\> %109, i64 1\l  %113 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %112\l  %114 = extractelement \<4 x i64\> %109, i64 2\l  %115 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %114\l  %116 = extractelement \<4 x i64\> %109, i64 3\l  %117 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %116\l  store i8 %4, i8 addrspace(1)* %111, align 1, !tbaa !16\l  store i8 %4, i8 addrspace(1)* %113, align 1, !tbaa !16\l  store i8 %4, i8 addrspace(1)* %115, align 1, !tbaa !16\l  store i8 %4, i8 addrspace(1)* %117, align 1, !tbaa !16\l  %118 = add \<4 x i32\> %107, %50\l  %119 = add i32 %108, 1\l  %120 = icmp eq i32 %119, %54\l  br i1 %120, label %121, label %106, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5899e50:s0 -> Node0x5899e00;
	Node0x5899e50:s1 -> Node0x5899e50;
	Node0x5899e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%121:\l121:                                              \l  %122 = icmp eq i32 %36, %39\l  br i1 %122, label %125, label %123\l|{<s0>T|<s1>F}}"];
	Node0x5899e00:s0 -> Node0x5894300;
	Node0x5899e00:s1 -> Node0x5894e00;
	Node0x5894e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%123:\l123:                                              \l  %124 = phi i32 [ %16, %24 ], [ %41, %121 ]\l  br label %126\l}"];
	Node0x5894e00 -> Node0x589adb0;
	Node0x5894300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%125:\l125:                                              \l  ret void\l}"];
	Node0x589adb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%126:\l126:                                              \l  %127 = phi i32 [ %130, %126 ], [ %124, %123 ]\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %128\l  store i8 %4, i8 addrspace(1)* %129, align 1, !tbaa !16\l  %130 = add nsw i32 %127, %22\l  %131 = icmp slt i32 %130, %1\l  br i1 %131, label %126, label %125, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x589adb0:s0 -> Node0x589adb0;
	Node0x589adb0:s1 -> Node0x5894300;
}
