digraph "CFG for '_Z19kRectifyBoundingBoxPfS_S_S_iiii' function" {
	label="CFG for '_Z19kRectifyBoundingBoxPfS_S_S_iiii' function";

	Node0x53f7260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = icmp slt i32 %9, %7\l  br i1 %10, label %11, label %32\l|{<s0>T|<s1>F}}"];
	Node0x53f7260:s0 -> Node0x53f7520;
	Node0x53f7260:s1 -> Node0x53f75b0;
	Node0x53f7520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%11:\l11:                                               \l  %12 = shl nsw i32 %7, 1\l  %13 = mul nsw i32 %7, 3\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %15 = icmp slt i32 %14, %4\l  %16 = sitofp i32 %5 to double\l  %17 = fdiv contract double 2.560000e+02, %16\l  %18 = sitofp i32 %5 to float\l  %19 = sitofp i32 %6 to float\l  %20 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %21 = getelementptr i8, i8 addrspace(4)* %20, i64 4\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 12\l  %24 = bitcast i8 addrspace(4)* %23 to i32 addrspace(4)*\l  %25 = load i32, i32 addrspace(4)* %24, align 4, !tbaa !5\l  %26 = load i16, i16 addrspace(4)* %22, align 4, !range !14, !invariant.load\l... !15\l  %27 = zext i16 %26 to i32\l  %28 = udiv i32 %25, %27\l  %29 = mul i32 %28, %27\l  %30 = icmp ugt i32 %25, %29\l  %31 = zext i1 %30 to i32\l  br label %33\l}"];
	Node0x53f7520 -> Node0x53fa5e0;
	Node0x53f75b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%32:\l32:                                               \l  ret void\l}"];
	Node0x53fa5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%33:\l33:                                               \l  %34 = phi i32 [ %9, %11 ], [ %52, %50 ]\l  %35 = mul nsw i32 %34, %4\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = add nsw i32 %34, %7\l  %39 = mul nsw i32 %38, %4\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  %42 = add nsw i32 %34, %12\l  %43 = mul nsw i32 %42, %4\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = add nsw i32 %34, %13\l  %47 = mul nsw i32 %46, %4\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  br i1 %15, label %54, label %50\l|{<s0>T|<s1>F}}"];
	Node0x53fa5e0:s0 -> Node0x53fb180;
	Node0x53fa5e0:s1 -> Node0x53f8d60;
	Node0x53f8d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%50:\l50:                                               \l  %51 = add i32 %28, %34\l  %52 = add i32 %51, %31\l  %53 = icmp slt i32 %52, %7\l  br i1 %53, label %33, label %32, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x53f8d60:s0 -> Node0x53fa5e0;
	Node0x53f8d60:s1 -> Node0x53f75b0;
	Node0x53fb180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = phi i32 [ %96, %76 ], [ %14, %33 ]\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %3, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !18\l  %59 = fcmp contract ogt float %58, 5.000000e-01\l  br i1 %59, label %60, label %70\l|{<s0>T|<s1>F}}"];
	Node0x53fb180:s0 -> Node0x53fbab0;
	Node0x53fb180:s1 -> Node0x53fbb40;
	Node0x53fbab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%60:\l60:                                               \l  %61 = getelementptr inbounds float, float addrspace(1)* %45, i64 %56\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !18\l  %63 = fpext float %62 to double\l  %64 = fsub contract double %17, %63\l  %65 = fptrunc double %64 to float\l  %66 = getelementptr inbounds float, float addrspace(1)* %37, i64 %56\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !18\l  %68 = fpext float %67 to double\l  %69 = fsub contract double %17, %68\l  br label %76\l}"];
	Node0x53fbab0 -> Node0x53fb5e0;
	Node0x53fbb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%70:\l70:                                               \l  %71 = getelementptr inbounds float, float addrspace(1)* %37, i64 %56\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !18\l  %73 = getelementptr inbounds float, float addrspace(1)* %45, i64 %56\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !18\l  %75 = fpext float %74 to double\l  br label %76\l}"];
	Node0x53fbb40 -> Node0x53fb5e0;
	Node0x53fb5e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  %77 = phi float [ %65, %60 ], [ %72, %70 ]\l  %78 = phi contract double [ %69, %60 ], [ %75, %70 ]\l  %79 = fptrunc double %78 to float\l  %80 = getelementptr inbounds float, float addrspace(1)* %41, i64 %56\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !18\l  %82 = getelementptr inbounds float, float addrspace(1)* %49, i64 %56\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !18\l  %84 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !18\l  %86 = getelementptr inbounds float, float addrspace(1)* %2, i64 %56\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !18\l  %88 = fdiv contract float %85, %18\l  %89 = fsub contract float %77, %88\l  %90 = getelementptr inbounds float, float addrspace(1)* %37, i64 %56\l  store float %89, float addrspace(1)* %90, align 4, !tbaa !18\l  %91 = fsub contract float %79, %88\l  %92 = getelementptr inbounds float, float addrspace(1)* %45, i64 %56\l  store float %91, float addrspace(1)* %92, align 4, !tbaa !18\l  %93 = fdiv contract float %87, %19\l  %94 = fsub contract float %81, %93\l  store float %94, float addrspace(1)* %80, align 4, !tbaa !18\l  %95 = fsub contract float %83, %93\l  store float %95, float addrspace(1)* %82, align 4, !tbaa !18\l  %96 = add i32 %55, %27\l  %97 = icmp slt i32 %96, %4\l  br i1 %97, label %54, label %50, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x53fb5e0:s0 -> Node0x53fb180;
	Node0x53fb5e0:s1 -> Node0x53f8d60;
}
