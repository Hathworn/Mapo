digraph "CFG for '_Z15kSoftMaxGradCLSPfPiS_S_jj' function" {
	label="CFG for '_Z15kSoftMaxGradCLSPfPiS_S_jj' function";

	Node0x4bc27b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = mul i32 %7, %12\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %18 = add i32 %16, %17\l  %19 = udiv i32 %15, %12\l  %20 = mul i32 %19, %12\l  %21 = icmp ugt i32 %15, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %12\l  %25 = mul i32 %5, %4\l  %26 = icmp ult i32 %18, %25\l  br i1 %26, label %28, label %27\l|{<s0>T|<s1>F}}"];
	Node0x4bc27b0:s0 -> Node0x4bc4dd0;
	Node0x4bc27b0:s1 -> Node0x4bc4e60;
	Node0x4bc4e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%27:\l27:                                               \l  ret void\l}"];
	Node0x4bc4dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %49, %28 ], [ %18, %6 ]\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %33 = freeze i32 %29\l  %34 = freeze i32 %5\l  %35 = udiv i32 %33, %34\l  %36 = mul i32 %35, %34\l  %37 = sub i32 %33, %36\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %2, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !16\l  %41 = fptosi float %40 to i32\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %42\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !20, !amdgpu.noclobber\l... !5\l  %45 = icmp eq i32 %44, %35\l  %46 = uitofp i1 %45 to float\l  %47 = fsub contract float %32, %46\l  %48 = getelementptr inbounds float, float addrspace(1)* %3, i64 %30\l  store float %47, float addrspace(1)* %48, align 4, !tbaa !16\l  %49 = add i32 %29, %24\l  %50 = icmp ult i32 %49, %25\l  br i1 %50, label %28, label %27, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4bc4dd0:s0 -> Node0x4bc4dd0;
	Node0x4bc4dd0:s1 -> Node0x4bc4e60;
}
