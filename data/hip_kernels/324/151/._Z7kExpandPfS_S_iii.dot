digraph "CFG for '_Z7kExpandPfS_S_iii' function" {
	label="CFG for '_Z7kExpandPfS_S_iii' function";

	Node0x47997e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = mul i32 %7, %12\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %18 = add i32 %16, %17\l  %19 = udiv i32 %15, %12\l  %20 = mul i32 %19, %12\l  %21 = icmp ugt i32 %15, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %12\l  %25 = mul nsw i32 %5, %3\l  %26 = icmp ult i32 %18, %25\l  br i1 %26, label %27, label %29\l|{<s0>T|<s1>F}}"];
	Node0x47997e0:s0 -> Node0x479be00;
	Node0x47997e0:s1 -> Node0x479be90;
	Node0x479be00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %4, %3\l  br label %30\l}"];
	Node0x479be00 -> Node0x479c060;
	Node0x479be90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%29:\l29:                                               \l  ret void\l}"];
	Node0x479c060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ %18, %27 ], [ %52, %48 ]\l  %32 = freeze i32 %31\l  %33 = freeze i32 %3\l  %34 = udiv i32 %32, %33\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16\l  %38 = fptosi float %37 to i32\l  %39 = mul nsw i32 %38, %3\l  %40 = mul i32 %34, %33\l  %41 = sub i32 %32, %40\l  %42 = add i32 %39, %41\l  %43 = icmp slt i32 %42, %28\l  br i1 %43, label %44, label %48\l|{<s0>T|<s1>F}}"];
	Node0x479c060:s0 -> Node0x479cb20;
	Node0x479c060:s1 -> Node0x479c170;
	Node0x479cb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%44:\l44:                                               \l  %45 = sext i32 %42 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !16\l  br label %48\l}"];
	Node0x479cb20 -> Node0x479c170;
	Node0x479c170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi float [ %47, %44 ], [ 0x7FF8000000000000, %30 ]\l  %50 = zext i32 %31 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %50\l  store float %49, float addrspace(1)* %51, align 4, !tbaa !16\l  %52 = add i32 %31, %24\l  %53 = icmp ult i32 %52, %25\l  br i1 %53, label %30, label %29, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x479c170:s0 -> Node0x479c060;
	Node0x479c170:s1 -> Node0x479be90;
}
