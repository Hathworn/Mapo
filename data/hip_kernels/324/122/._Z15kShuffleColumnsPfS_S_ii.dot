digraph "CFG for '_Z15kShuffleColumnsPfS_S_ii' function" {
	label="CFG for '_Z15kShuffleColumnsPfS_S_ii' function";

	Node0x5962af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = udiv i32 %14, %11\l  %19 = mul i32 %18, %11\l  %20 = icmp ugt i32 %14, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %11\l  %24 = add nsw i32 %3, 1\l  %25 = sdiv i32 %24, 2\l  %26 = mul nsw i32 %25, %4\l  %27 = icmp ult i32 %17, %26\l  br i1 %27, label %29, label %28\l|{<s0>T|<s1>F}}"];
	Node0x5962af0:s0 -> Node0x5965240;
	Node0x5962af0:s1 -> Node0x59652d0;
	Node0x59652d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%28:\l28:                                               \l  ret void\l}"];
	Node0x5965240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %67, %63 ], [ %17, %5 ]\l  %31 = freeze i32 %30\l  %32 = freeze i32 %4\l  %33 = udiv i32 %31, %32\l  %34 = shl i32 %33, 1\l  %35 = mul i32 %33, %32\l  %36 = sub i32 %31, %35\l  %37 = add nuw nsw i32 %34, 1\l  %38 = icmp ult i32 %37, %3\l  %39 = zext i32 %34 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %2, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16\l  %42 = fptosi float %41 to i32\l  %43 = mul nsw i32 %42, %4\l  %44 = add i32 %43, %36\l  br i1 %38, label %49, label %45\l|{<s0>T|<s1>F}}"];
	Node0x5965240:s0 -> Node0x5965f60;
	Node0x5965240:s1 -> Node0x5965ff0;
	Node0x5965ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%45:\l45:                                               \l  %46 = zext i32 %44 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !16\l  br label %63\l}"];
	Node0x5965ff0 -> Node0x5965490;
	Node0x5965f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%49:\l49:                                               \l  %50 = zext i32 %37 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !16\l  %53 = fptosi float %52 to i32\l  %54 = mul nsw i32 %53, %4\l  %55 = add i32 %54, %36\l  %56 = zext i32 %44 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !16\l  %59 = zext i32 %55 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !16\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  store float %58, float addrspace(1)* %62, align 4, !tbaa !16\l  br label %63\l}"];
	Node0x5965f60 -> Node0x5965490;
	Node0x5965490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = phi i64 [ %46, %45 ], [ %56, %49 ]\l  %65 = phi float [ %48, %45 ], [ %61, %49 ]\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  store float %65, float addrspace(1)* %66, align 4, !tbaa !16\l  %67 = add i32 %30, %23\l  %68 = icmp ult i32 %67, %26\l  br i1 %68, label %29, label %28, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5965490:s0 -> Node0x5965240;
	Node0x5965490:s1 -> Node0x59652d0;
}
