digraph "CFG for '_Z17kApplyLog1PlusExpPfS_j' function" {
	label="CFG for '_Z17kApplyLog1PlusExpPfS_j' function";

	Node0x5baa800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = udiv i32 %12, %9\l  %17 = mul i32 %16, %9\l  %18 = icmp ugt i32 %12, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %9\l  %22 = icmp ult i32 %15, %2\l  br i1 %22, label %24, label %23\l|{<s0>T|<s1>F}}"];
	Node0x5baa800:s0 -> Node0x5bacdb0;
	Node0x5baa800:s1 -> Node0x5bace40;
	Node0x5bace40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%23:\l23:                                               \l  ret void\l}"];
	Node0x5bacdb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %43, %40 ], [ %15, %3 ]\l  %26 = zext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !16\l  %29 = fcmp contract ogt float %28, 0.000000e+00\l  br i1 %29, label %30, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5bacdb0:s0 -> Node0x5badea0;
	Node0x5bacdb0:s1 -> Node0x5badf30;
	Node0x5badea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%30:\l30:                                               \l  %31 = fneg contract float %28\l  %32 = tail call float @llvm.exp.f32(float %31)\l  %33 = fadd contract float %32, 1.000000e+00\l  %34 = tail call float @llvm.log.f32(float %33)\l  %35 = fadd contract float %28, %34\l  br label %40\l}"];
	Node0x5badea0 -> Node0x5bacfd0;
	Node0x5badf30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%36:\l36:                                               \l  %37 = tail call float @llvm.exp.f32(float %28)\l  %38 = fadd contract float %37, 1.000000e+00\l  %39 = tail call float @llvm.log.f32(float %38)\l  br label %40\l}"];
	Node0x5badf30 -> Node0x5bacfd0;
	Node0x5bacfd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi float [ %35, %30 ], [ %39, %36 ]\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %26\l  store float %41, float addrspace(1)* %42, align 4\l  %43 = add i32 %25, %21\l  %44 = icmp ult i32 %43, %2\l  br i1 %44, label %24, label %23, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5bacfd0:s0 -> Node0x5bacdb0;
	Node0x5bacfd0:s1 -> Node0x5bace40;
}
