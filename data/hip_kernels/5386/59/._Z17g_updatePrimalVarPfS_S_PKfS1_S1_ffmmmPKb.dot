digraph "CFG for '_Z17g_updatePrimalVarPfS_S_PKfS1_S1_ffmmmPKb' function" {
	label="CFG for '_Z17g_updatePrimalVarPfS_S_PKfS1_S1_ffmmmPKb' function";

	Node0x63c9a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = sext i32 %21 to i64\l  %23 = icmp ult i64 %22, %8\l  br i1 %23, label %24, label %107\l|{<s0>T|<s1>F}}"];
	Node0x63c9a10:s0 -> Node0x63cc620;
	Node0x63c9a10:s1 -> Node0x63cc6b0;
	Node0x63cc620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%24:\l24:                                               \l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %27 = getelementptr i8, i8 addrspace(4)* %14, i64 6\l  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*\l  %29 = load i16, i16 addrspace(4)* %28, align 2, !range !4, !invariant.load !5\l  %30 = zext i16 %29 to i32\l  %31 = mul i32 %26, %30\l  %32 = add i32 %31, %25\l  %33 = sext i32 %32 to i64\l  %34 = icmp ult i64 %33, %9\l  br i1 %34, label %35, label %107\l|{<s0>T|<s1>F}}"];
	Node0x63cc620:s0 -> Node0x63ce390;
	Node0x63cc620:s1 -> Node0x63cc6b0;
	Node0x63ce390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%35:\l35:                                               \l  %36 = mul i64 %33, %8\l  %37 = add i64 %36, %22\l  %38 = getelementptr inbounds i8, i8 addrspace(1)* %11, i64 %37\l  %39 = load i8, i8 addrspace(1)* %38, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !5\l  %40 = icmp ne i8 %39, 0\l  %41 = icmp ne i64 %10, 0\l  %42 = select i1 %40, i1 %41, i1 false\l  br i1 %42, label %43, label %107\l|{<s0>T|<s1>F}}"];
	Node0x63ce390:s0 -> Node0x63cec30;
	Node0x63ce390:s1 -> Node0x63cc6b0;
	Node0x63cec30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%43:\l43:                                               \l  %44 = mul i64 %9, %8\l  %45 = mul i64 %44, %10\l  %46 = getelementptr inbounds float, float addrspace(1)* %3, i64 %45\l  %47 = icmp sgt i32 %21, 0\l  %48 = add i64 %37, -1\l  %49 = getelementptr inbounds i8, i8 addrspace(1)* %11, i64 %48\l  %50 = icmp sgt i32 %32, 0\l  %51 = sub i64 %37, %8\l  %52 = getelementptr inbounds i8, i8 addrspace(1)* %11, i64 %51\l  %53 = fmul contract float %6, 2.000000e+00\l  br label %54\l}"];
	Node0x63cec30 -> Node0x63cfd70;
	Node0x63cfd70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = phi i64 [ 0, %43 ], [ %105, %83 ]\l  %56 = mul i64 %44, %55\l  %57 = add i64 %56, %37\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !12\l  br i1 %47, label %60, label %71\l|{<s0>T|<s1>F}}"];
	Node0x63cfd70:s0 -> Node0x63d0380;
	Node0x63cfd70:s1 -> Node0x63d0410;
	Node0x63d0380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%60:\l60:                                               \l  %61 = load i8, i8 addrspace(1)* %49, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !5\l  %62 = icmp eq i8 %61, 0\l  br i1 %62, label %71, label %63\l|{<s0>T|<s1>F}}"];
	Node0x63d0380:s0 -> Node0x63d0410;
	Node0x63d0380:s1 -> Node0x63d12b0;
	Node0x63d12b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%63:\l63:                                               \l  %64 = add i64 %57, -1\l  %65 = getelementptr inbounds float, float addrspace(1)* %3, i64 %64\l  %66 = bitcast float addrspace(1)* %65 to \<2 x float\> addrspace(1)*\l  %67 = load \<2 x float\>, \<2 x float\> addrspace(1)* %66, align 4, !tbaa !12\l  %68 = extractelement \<2 x float\> %67, i64 0\l  %69 = extractelement \<2 x float\> %67, i64 1\l  %70 = fsub contract float %69, %68\l  br label %71\l}"];
	Node0x63d12b0 -> Node0x63d0410;
	Node0x63d0410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = phi float [ %70, %63 ], [ 0.000000e+00, %60 ], [ 0.000000e+00, %54 ]\l  br i1 %50, label %73, label %83\l|{<s0>T|<s1>F}}"];
	Node0x63d0410:s0 -> Node0x63d26d0;
	Node0x63d0410:s1 -> Node0x63cfea0;
	Node0x63d26d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%73:\l73:                                               \l  %74 = load i8, i8 addrspace(1)* %52, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !5\l  %75 = icmp eq i8 %74, 0\l  br i1 %75, label %83, label %76\l|{<s0>T|<s1>F}}"];
	Node0x63d26d0:s0 -> Node0x63cfea0;
	Node0x63d26d0:s1 -> Node0x63d2940;
	Node0x63d2940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%76:\l76:                                               \l  %77 = getelementptr inbounds float, float addrspace(1)* %46, i64 %57\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !12\l  %79 = sub i64 %57, %8\l  %80 = getelementptr inbounds float, float addrspace(1)* %46, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !12\l  %82 = fsub contract float %78, %81\l  br label %83\l}"];
	Node0x63d2940 -> Node0x63cfea0;
	Node0x63cfea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  %84 = phi float [ %82, %76 ], [ 0.000000e+00, %73 ], [ 0.000000e+00, %71 ]\l  %85 = fadd contract float %72, %84\l  %86 = fmul contract float %85, %6\l  %87 = fadd contract float %59, %86\l  %88 = getelementptr inbounds float, float addrspace(1)* %5, i64 %57\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !12\l  %90 = getelementptr inbounds float, float addrspace(1)* %4, i64 %57\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !12\l  %92 = fmul contract float %53, %89\l  %93 = fmul contract float %92, %91\l  %94 = fadd contract float %93, %87\l  %95 = fmul contract float %89, %92\l  %96 = fadd contract float %95, 1.000000e+00\l  %97 = fdiv contract float %94, %96\l  %98 = fsub contract float %97, %59\l  %99 = fmul contract float %98, %7\l  %100 = fadd contract float %97, %99\l  %101 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  store float %100, float addrspace(1)* %101, align 4, !tbaa !12\l  store float %97, float addrspace(1)* %58, align 4, !tbaa !12\l  %102 = tail call float @llvm.fabs.f32(float %98)\l  %103 = getelementptr inbounds float, float addrspace(1)* %2, i64 %57\l  store float %102, float addrspace(1)* %103, align 4, !tbaa !12\l  %104 = add nuw nsw i64 %55, 1\l  %105 = and i64 %104, 4294967295\l  %106 = icmp ult i64 %105, %10\l  br i1 %106, label %54, label %107, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x63cfea0:s0 -> Node0x63cfd70;
	Node0x63cfea0:s1 -> Node0x63cc6b0;
	Node0x63cc6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%107:\l107:                                              \l  ret void\l}"];
}
