digraph "CFG for '_Z15kernel_partialsPfS_S_ii' function" {
	label="CFG for '_Z15kernel_partialsPfS_S_ii' function";

	Node0x5d5d8d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %8, %12\l  %14 = add i32 %13, %6\l  %15 = zext i32 %14 to i64\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = add i32 %22, %16\l  %24 = zext i32 %23 to i64\l  %25 = sext i32 %4 to i64\l  %26 = mul nsw i64 %15, %25\l  %27 = add nsw i64 %26, %24\l  %28 = sext i32 %3 to i64\l  %29 = icmp uge i64 %15, %28\l  %30 = icmp ult i32 %14, 2\l  %31 = or i1 %30, %29\l  br i1 %31, label %59, label %32\l|{<s0>T|<s1>F}}"];
	Node0x5d5d8d0:s0 -> Node0x5d61620;
	Node0x5d5d8d0:s1 -> Node0x5d616b0;
	Node0x5d616b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%32:\l32:                                               \l  %33 = icmp uge i64 %24, %25\l  %34 = icmp ult i32 %23, 2\l  %35 = or i1 %34, %33\l  br i1 %35, label %59, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5d616b0:s0 -> Node0x5d61620;
	Node0x5d616b0:s1 -> Node0x5d60020;
	Node0x5d60020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%36:\l36:                                               \l  %37 = add nsw i64 %27, -1\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %40 = add nsw i64 %27, 1\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %43 = add nsw i64 %15, -1\l  %44 = mul nsw i64 %43, %25\l  %45 = add nsw i64 %44, %24\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %48 = add nuw nsw i64 %15, 1\l  %49 = mul nsw i64 %48, %25\l  %50 = add nsw i64 %49, %24\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %53 = fsub contract float %42, %39\l  %54 = fmul contract float %53, 5.000000e-01\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  store float %54, float addrspace(1)* %55, align 4, !tbaa !7\l  %56 = fsub contract float %52, %47\l  %57 = fmul contract float %56, 5.000000e-01\l  %58 = getelementptr inbounds float, float addrspace(1)* %2, i64 %27\l  store float %57, float addrspace(1)* %58, align 4, !tbaa !7\l  br label %59\l}"];
	Node0x5d60020 -> Node0x5d61620;
	Node0x5d61620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  ret void\l}"];
}
