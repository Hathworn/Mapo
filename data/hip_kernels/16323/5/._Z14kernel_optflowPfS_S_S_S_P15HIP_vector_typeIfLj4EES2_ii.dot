digraph "CFG for '_Z14kernel_optflowPfS_S_S_S_P15HIP_vector_typeIfLj4EES2_ii' function" {
	label="CFG for '_Z14kernel_optflowPfS_S_S_S_P15HIP_vector_typeIfLj4EES2_ii' function";

	Node0x615a310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 2, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %12, %16\l  %18 = add i32 %17, %10\l  %19 = zext i32 %18 to i64\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %22 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 4, !range !5, !invariant.load !6\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %21, %25\l  %27 = add i32 %26, %20\l  %28 = zext i32 %27 to i64\l  %29 = sext i32 %8 to i64\l  %30 = mul nsw i64 %19, %29\l  %31 = add nsw i64 %30, %28\l  %32 = add nsw i32 %7, -2\l  %33 = sext i32 %32 to i64\l  %34 = icmp uge i64 %19, %33\l  %35 = icmp ult i32 %18, 3\l  %36 = or i1 %35, %34\l  br i1 %36, label %537, label %37\l|{<s0>T|<s1>F}}"];
	Node0x615a310:s0 -> Node0x615ed30;
	Node0x615a310:s1 -> Node0x615edc0;
	Node0x615edc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%37:\l37:                                               \l  %38 = add nsw i32 %8, -2\l  %39 = sext i32 %38 to i64\l  %40 = icmp uge i64 %28, %39\l  %41 = icmp ult i32 %27, 3\l  %42 = or i1 %41, %40\l  br i1 %42, label %537, label %43\l|{<s0>T|<s1>F}}"];
	Node0x615edc0:s0 -> Node0x615ed30;
	Node0x615edc0:s1 -> Node0x615f1b0;
	Node0x615f1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%43:\l43:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %44 = add nsw i64 %19, -2\l  %45 = mul nsw i64 %44, %29\l  %46 = add nsw i64 %45, %28\l  %47 = add nsw i64 %46, -2\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %50 = fmul contract float %49, %49\l  %51 = fadd contract float %50, 0.000000e+00\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %54 = fmul contract float %53, %53\l  %55 = fadd contract float %54, 0.000000e+00\l  %56 = fmul contract float %49, %53\l  %57 = fadd contract float %56, 0.000000e+00\l  %58 = getelementptr inbounds float, float addrspace(1)* %4, i64 %47\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %60 = fmul contract float %49, %59\l  %61 = fadd contract float %60, 0.000000e+00\l  %62 = fmul contract float %53, %59\l  %63 = fadd contract float %62, 0.000000e+00\l  %64 = add nsw i64 %46, -1\l  %65 = getelementptr inbounds float, float addrspace(1)* %0, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %67 = fmul contract float %66, %66\l  %68 = fadd contract float %51, %67\l  %69 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %71 = fmul contract float %70, %70\l  %72 = fadd contract float %55, %71\l  %73 = fmul contract float %66, %70\l  %74 = fadd contract float %57, %73\l  %75 = getelementptr inbounds float, float addrspace(1)* %4, i64 %64\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %77 = fmul contract float %66, %76\l  %78 = fadd contract float %61, %77\l  %79 = fmul contract float %70, %76\l  %80 = fadd contract float %63, %79\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %83 = fmul contract float %82, %82\l  %84 = fadd contract float %68, %83\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %87 = fmul contract float %86, %86\l  %88 = fadd contract float %72, %87\l  %89 = fmul contract float %82, %86\l  %90 = fadd contract float %74, %89\l  %91 = getelementptr inbounds float, float addrspace(1)* %4, i64 %46\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %93 = fmul contract float %82, %92\l  %94 = fadd contract float %78, %93\l  %95 = fmul contract float %86, %92\l  %96 = fadd contract float %80, %95\l  %97 = add nsw i64 %46, 1\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %100 = fmul contract float %99, %99\l  %101 = fadd contract float %84, %100\l  %102 = getelementptr inbounds float, float addrspace(1)* %1, i64 %97\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %104 = fmul contract float %103, %103\l  %105 = fadd contract float %88, %104\l  %106 = fmul contract float %99, %103\l  %107 = fadd contract float %90, %106\l  %108 = getelementptr inbounds float, float addrspace(1)* %4, i64 %97\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %110 = fmul contract float %99, %109\l  %111 = fadd contract float %94, %110\l  %112 = fmul contract float %103, %109\l  %113 = fadd contract float %96, %112\l  %114 = add nsw i64 %46, 2\l  %115 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %117 = fmul contract float %116, %116\l  %118 = fadd contract float %101, %117\l  %119 = getelementptr inbounds float, float addrspace(1)* %1, i64 %114\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %121 = fmul contract float %120, %120\l  %122 = fadd contract float %105, %121\l  %123 = fmul contract float %116, %120\l  %124 = fadd contract float %107, %123\l  %125 = getelementptr inbounds float, float addrspace(1)* %4, i64 %114\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %127 = fmul contract float %116, %126\l  %128 = fadd contract float %111, %127\l  %129 = fmul contract float %120, %126\l  %130 = fadd contract float %113, %129\l  %131 = add nsw i64 %19, -1\l  %132 = mul nsw i64 %131, %29\l  %133 = add nsw i64 %132, %28\l  %134 = add nsw i64 %133, -2\l  %135 = getelementptr inbounds float, float addrspace(1)* %0, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %137 = fmul contract float %136, %136\l  %138 = fadd contract float %118, %137\l  %139 = getelementptr inbounds float, float addrspace(1)* %1, i64 %134\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %141 = fmul contract float %140, %140\l  %142 = fadd contract float %122, %141\l  %143 = fmul contract float %136, %140\l  %144 = fadd contract float %124, %143\l  %145 = getelementptr inbounds float, float addrspace(1)* %4, i64 %134\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %147 = fmul contract float %136, %146\l  %148 = fadd contract float %128, %147\l  %149 = fmul contract float %140, %146\l  %150 = fadd contract float %130, %149\l  %151 = add nsw i64 %133, -1\l  %152 = getelementptr inbounds float, float addrspace(1)* %0, i64 %151\l  %153 = load float, float addrspace(1)* %152, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %154 = fmul contract float %153, %153\l  %155 = fadd contract float %138, %154\l  %156 = getelementptr inbounds float, float addrspace(1)* %1, i64 %151\l  %157 = load float, float addrspace(1)* %156, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %158 = fmul contract float %157, %157\l  %159 = fadd contract float %142, %158\l  %160 = fmul contract float %153, %157\l  %161 = fadd contract float %144, %160\l  %162 = getelementptr inbounds float, float addrspace(1)* %4, i64 %151\l  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %164 = fmul contract float %153, %163\l  %165 = fadd contract float %148, %164\l  %166 = fmul contract float %157, %163\l  %167 = fadd contract float %150, %166\l  %168 = getelementptr inbounds float, float addrspace(1)* %0, i64 %133\l  %169 = load float, float addrspace(1)* %168, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %170 = fmul contract float %169, %169\l  %171 = fadd contract float %155, %170\l  %172 = getelementptr inbounds float, float addrspace(1)* %1, i64 %133\l  %173 = load float, float addrspace(1)* %172, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %174 = fmul contract float %173, %173\l  %175 = fadd contract float %159, %174\l  %176 = fmul contract float %169, %173\l  %177 = fadd contract float %161, %176\l  %178 = getelementptr inbounds float, float addrspace(1)* %4, i64 %133\l  %179 = load float, float addrspace(1)* %178, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %180 = fmul contract float %169, %179\l  %181 = fadd contract float %165, %180\l  %182 = fmul contract float %173, %179\l  %183 = fadd contract float %167, %182\l  %184 = add nsw i64 %133, 1\l  %185 = getelementptr inbounds float, float addrspace(1)* %0, i64 %184\l  %186 = load float, float addrspace(1)* %185, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %187 = fmul contract float %186, %186\l  %188 = fadd contract float %171, %187\l  %189 = getelementptr inbounds float, float addrspace(1)* %1, i64 %184\l  %190 = load float, float addrspace(1)* %189, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %191 = fmul contract float %190, %190\l  %192 = fadd contract float %175, %191\l  %193 = fmul contract float %186, %190\l  %194 = fadd contract float %177, %193\l  %195 = getelementptr inbounds float, float addrspace(1)* %4, i64 %184\l  %196 = load float, float addrspace(1)* %195, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %197 = fmul contract float %186, %196\l  %198 = fadd contract float %181, %197\l  %199 = fmul contract float %190, %196\l  %200 = fadd contract float %183, %199\l  %201 = add nsw i64 %133, 2\l  %202 = getelementptr inbounds float, float addrspace(1)* %0, i64 %201\l  %203 = load float, float addrspace(1)* %202, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %204 = fmul contract float %203, %203\l  %205 = fadd contract float %188, %204\l  %206 = getelementptr inbounds float, float addrspace(1)* %1, i64 %201\l  %207 = load float, float addrspace(1)* %206, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %208 = fmul contract float %207, %207\l  %209 = fadd contract float %192, %208\l  %210 = fmul contract float %203, %207\l  %211 = fadd contract float %194, %210\l  %212 = getelementptr inbounds float, float addrspace(1)* %4, i64 %201\l  %213 = load float, float addrspace(1)* %212, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %214 = fmul contract float %203, %213\l  %215 = fadd contract float %198, %214\l  %216 = fmul contract float %207, %213\l  %217 = fadd contract float %200, %216\l  %218 = add nsw i64 %31, -2\l  %219 = getelementptr inbounds float, float addrspace(1)* %0, i64 %218\l  %220 = load float, float addrspace(1)* %219, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %221 = fmul contract float %220, %220\l  %222 = fadd contract float %205, %221\l  %223 = getelementptr inbounds float, float addrspace(1)* %1, i64 %218\l  %224 = load float, float addrspace(1)* %223, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %225 = fmul contract float %224, %224\l  %226 = fadd contract float %209, %225\l  %227 = fmul contract float %220, %224\l  %228 = fadd contract float %211, %227\l  %229 = getelementptr inbounds float, float addrspace(1)* %4, i64 %218\l  %230 = load float, float addrspace(1)* %229, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %231 = fmul contract float %220, %230\l  %232 = fadd contract float %215, %231\l  %233 = fmul contract float %224, %230\l  %234 = fadd contract float %217, %233\l  %235 = add nsw i64 %31, -1\l  %236 = getelementptr inbounds float, float addrspace(1)* %0, i64 %235\l  %237 = load float, float addrspace(1)* %236, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %238 = fmul contract float %237, %237\l  %239 = fadd contract float %222, %238\l  %240 = getelementptr inbounds float, float addrspace(1)* %1, i64 %235\l  %241 = load float, float addrspace(1)* %240, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %242 = fmul contract float %241, %241\l  %243 = fadd contract float %226, %242\l  %244 = fmul contract float %237, %241\l  %245 = fadd contract float %228, %244\l  %246 = getelementptr inbounds float, float addrspace(1)* %4, i64 %235\l  %247 = load float, float addrspace(1)* %246, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %248 = fmul contract float %237, %247\l  %249 = fadd contract float %232, %248\l  %250 = fmul contract float %241, %247\l  %251 = fadd contract float %234, %250\l  %252 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %253 = load float, float addrspace(1)* %252, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %254 = fmul contract float %253, %253\l  %255 = fadd contract float %239, %254\l  %256 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %257 = load float, float addrspace(1)* %256, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %258 = fmul contract float %257, %257\l  %259 = fadd contract float %243, %258\l  %260 = fmul contract float %253, %257\l  %261 = fadd contract float %245, %260\l  %262 = getelementptr inbounds float, float addrspace(1)* %4, i64 %31\l  %263 = load float, float addrspace(1)* %262, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %264 = fmul contract float %253, %263\l  %265 = fadd contract float %249, %264\l  %266 = fmul contract float %257, %263\l  %267 = fadd contract float %251, %266\l  %268 = add nsw i64 %31, 1\l  %269 = getelementptr inbounds float, float addrspace(1)* %0, i64 %268\l  %270 = load float, float addrspace(1)* %269, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %271 = fmul contract float %270, %270\l  %272 = fadd contract float %255, %271\l  %273 = getelementptr inbounds float, float addrspace(1)* %1, i64 %268\l  %274 = load float, float addrspace(1)* %273, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %275 = fmul contract float %274, %274\l  %276 = fadd contract float %259, %275\l  %277 = fmul contract float %270, %274\l  %278 = fadd contract float %261, %277\l  %279 = getelementptr inbounds float, float addrspace(1)* %4, i64 %268\l  %280 = load float, float addrspace(1)* %279, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %281 = fmul contract float %270, %280\l  %282 = fadd contract float %265, %281\l  %283 = fmul contract float %274, %280\l  %284 = fadd contract float %267, %283\l  %285 = add nsw i64 %31, 2\l  %286 = getelementptr inbounds float, float addrspace(1)* %0, i64 %285\l  %287 = load float, float addrspace(1)* %286, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %288 = fmul contract float %287, %287\l  %289 = fadd contract float %272, %288\l  %290 = getelementptr inbounds float, float addrspace(1)* %1, i64 %285\l  %291 = load float, float addrspace(1)* %290, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %292 = fmul contract float %291, %291\l  %293 = fadd contract float %276, %292\l  %294 = fmul contract float %287, %291\l  %295 = fadd contract float %278, %294\l  %296 = getelementptr inbounds float, float addrspace(1)* %4, i64 %285\l  %297 = load float, float addrspace(1)* %296, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %298 = fmul contract float %287, %297\l  %299 = fadd contract float %282, %298\l  %300 = fmul contract float %291, %297\l  %301 = fadd contract float %284, %300\l  %302 = add nuw nsw i64 %19, 1\l  %303 = mul nsw i64 %302, %29\l  %304 = add nsw i64 %303, %28\l  %305 = add i64 %304, -2\l  %306 = getelementptr inbounds float, float addrspace(1)* %0, i64 %305\l  %307 = load float, float addrspace(1)* %306, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %308 = fmul contract float %307, %307\l  %309 = fadd contract float %289, %308\l  %310 = getelementptr inbounds float, float addrspace(1)* %1, i64 %305\l  %311 = load float, float addrspace(1)* %310, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %312 = fmul contract float %311, %311\l  %313 = fadd contract float %293, %312\l  %314 = fmul contract float %307, %311\l  %315 = fadd contract float %295, %314\l  %316 = getelementptr inbounds float, float addrspace(1)* %4, i64 %305\l  %317 = load float, float addrspace(1)* %316, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %318 = fmul contract float %307, %317\l  %319 = fadd contract float %299, %318\l  %320 = fmul contract float %311, %317\l  %321 = fadd contract float %301, %320\l  %322 = add i64 %304, -1\l  %323 = getelementptr inbounds float, float addrspace(1)* %0, i64 %322\l  %324 = load float, float addrspace(1)* %323, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %325 = fmul contract float %324, %324\l  %326 = fadd contract float %309, %325\l  %327 = getelementptr inbounds float, float addrspace(1)* %1, i64 %322\l  %328 = load float, float addrspace(1)* %327, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %329 = fmul contract float %328, %328\l  %330 = fadd contract float %313, %329\l  %331 = fmul contract float %324, %328\l  %332 = fadd contract float %315, %331\l  %333 = getelementptr inbounds float, float addrspace(1)* %4, i64 %322\l  %334 = load float, float addrspace(1)* %333, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %335 = fmul contract float %324, %334\l  %336 = fadd contract float %319, %335\l  %337 = fmul contract float %328, %334\l  %338 = fadd contract float %321, %337\l  %339 = getelementptr inbounds float, float addrspace(1)* %0, i64 %304\l  %340 = load float, float addrspace(1)* %339, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %341 = fmul contract float %340, %340\l  %342 = fadd contract float %326, %341\l  %343 = getelementptr inbounds float, float addrspace(1)* %1, i64 %304\l  %344 = load float, float addrspace(1)* %343, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %345 = fmul contract float %344, %344\l  %346 = fadd contract float %330, %345\l  %347 = fmul contract float %340, %344\l  %348 = fadd contract float %332, %347\l  %349 = getelementptr inbounds float, float addrspace(1)* %4, i64 %304\l  %350 = load float, float addrspace(1)* %349, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %351 = fmul contract float %340, %350\l  %352 = fadd contract float %336, %351\l  %353 = fmul contract float %344, %350\l  %354 = fadd contract float %338, %353\l  %355 = add i64 %304, 1\l  %356 = getelementptr inbounds float, float addrspace(1)* %0, i64 %355\l  %357 = load float, float addrspace(1)* %356, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %358 = fmul contract float %357, %357\l  %359 = fadd contract float %342, %358\l  %360 = getelementptr inbounds float, float addrspace(1)* %1, i64 %355\l  %361 = load float, float addrspace(1)* %360, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %362 = fmul contract float %361, %361\l  %363 = fadd contract float %346, %362\l  %364 = fmul contract float %357, %361\l  %365 = fadd contract float %348, %364\l  %366 = getelementptr inbounds float, float addrspace(1)* %4, i64 %355\l  %367 = load float, float addrspace(1)* %366, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %368 = fmul contract float %357, %367\l  %369 = fadd contract float %352, %368\l  %370 = fmul contract float %361, %367\l  %371 = fadd contract float %354, %370\l  %372 = add i64 %304, 2\l  %373 = getelementptr inbounds float, float addrspace(1)* %0, i64 %372\l  %374 = load float, float addrspace(1)* %373, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %375 = fmul contract float %374, %374\l  %376 = fadd contract float %359, %375\l  %377 = getelementptr inbounds float, float addrspace(1)* %1, i64 %372\l  %378 = load float, float addrspace(1)* %377, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %379 = fmul contract float %378, %378\l  %380 = fadd contract float %363, %379\l  %381 = fmul contract float %374, %378\l  %382 = fadd contract float %365, %381\l  %383 = getelementptr inbounds float, float addrspace(1)* %4, i64 %372\l  %384 = load float, float addrspace(1)* %383, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %385 = fmul contract float %374, %384\l  %386 = fadd contract float %369, %385\l  %387 = fmul contract float %378, %384\l  %388 = fadd contract float %371, %387\l  %389 = add nuw nsw i64 %19, 2\l  %390 = mul i64 %389, %29\l  %391 = add i64 %390, %28\l  %392 = add i64 %391, -2\l  %393 = getelementptr inbounds float, float addrspace(1)* %0, i64 %392\l  %394 = load float, float addrspace(1)* %393, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %395 = fmul contract float %394, %394\l  %396 = fadd contract float %376, %395\l  %397 = getelementptr inbounds float, float addrspace(1)* %1, i64 %392\l  %398 = load float, float addrspace(1)* %397, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %399 = fmul contract float %398, %398\l  %400 = fadd contract float %380, %399\l  %401 = fmul contract float %394, %398\l  %402 = fadd contract float %382, %401\l  %403 = getelementptr inbounds float, float addrspace(1)* %4, i64 %392\l  %404 = load float, float addrspace(1)* %403, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %405 = fmul contract float %394, %404\l  %406 = fadd contract float %386, %405\l  %407 = fmul contract float %398, %404\l  %408 = fadd contract float %388, %407\l  %409 = add i64 %391, -1\l  %410 = getelementptr inbounds float, float addrspace(1)* %0, i64 %409\l  %411 = load float, float addrspace(1)* %410, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %412 = fmul contract float %411, %411\l  %413 = fadd contract float %396, %412\l  %414 = getelementptr inbounds float, float addrspace(1)* %1, i64 %409\l  %415 = load float, float addrspace(1)* %414, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %416 = fmul contract float %415, %415\l  %417 = fadd contract float %400, %416\l  %418 = fmul contract float %411, %415\l  %419 = fadd contract float %402, %418\l  %420 = getelementptr inbounds float, float addrspace(1)* %4, i64 %409\l  %421 = load float, float addrspace(1)* %420, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %422 = fmul contract float %411, %421\l  %423 = fadd contract float %406, %422\l  %424 = fmul contract float %415, %421\l  %425 = fadd contract float %408, %424\l  %426 = getelementptr inbounds float, float addrspace(1)* %0, i64 %391\l  %427 = load float, float addrspace(1)* %426, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %428 = fmul contract float %427, %427\l  %429 = fadd contract float %413, %428\l  %430 = getelementptr inbounds float, float addrspace(1)* %1, i64 %391\l  %431 = load float, float addrspace(1)* %430, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %432 = fmul contract float %431, %431\l  %433 = fadd contract float %417, %432\l  %434 = fmul contract float %427, %431\l  %435 = fadd contract float %419, %434\l  %436 = getelementptr inbounds float, float addrspace(1)* %4, i64 %391\l  %437 = load float, float addrspace(1)* %436, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %438 = fmul contract float %427, %437\l  %439 = fadd contract float %423, %438\l  %440 = fmul contract float %431, %437\l  %441 = fadd contract float %425, %440\l  %442 = add i64 %391, 1\l  %443 = getelementptr inbounds float, float addrspace(1)* %0, i64 %442\l  %444 = load float, float addrspace(1)* %443, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %445 = fmul contract float %444, %444\l  %446 = fadd contract float %429, %445\l  %447 = getelementptr inbounds float, float addrspace(1)* %1, i64 %442\l  %448 = load float, float addrspace(1)* %447, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %449 = fmul contract float %448, %448\l  %450 = fadd contract float %433, %449\l  %451 = fmul contract float %444, %448\l  %452 = fadd contract float %435, %451\l  %453 = getelementptr inbounds float, float addrspace(1)* %4, i64 %442\l  %454 = load float, float addrspace(1)* %453, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %455 = fmul contract float %444, %454\l  %456 = fadd contract float %439, %455\l  %457 = fmul contract float %448, %454\l  %458 = fadd contract float %441, %457\l  %459 = add i64 %391, 2\l  %460 = getelementptr inbounds float, float addrspace(1)* %0, i64 %459\l  %461 = load float, float addrspace(1)* %460, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %462 = fmul contract float %461, %461\l  %463 = fadd contract float %446, %462\l  %464 = getelementptr inbounds float, float addrspace(1)* %1, i64 %459\l  %465 = load float, float addrspace(1)* %464, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %466 = fmul contract float %465, %465\l  %467 = fadd contract float %450, %466\l  %468 = fmul contract float %461, %465\l  %469 = fadd contract float %452, %468\l  %470 = getelementptr inbounds float, float addrspace(1)* %4, i64 %459\l  %471 = load float, float addrspace(1)* %470, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %472 = fmul contract float %461, %471\l  %473 = fadd contract float %456, %472\l  %474 = fmul contract float %465, %471\l  %475 = fadd contract float %458, %474\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %476 = fmul contract float %467, %463\l  %477 = fmul contract float %469, %469\l  %478 = fsub contract float %476, %477\l  %479 = tail call float @llvm.fabs.f32(float %478)\l  %480 = fpext float %479 to double\l  %481 = fcmp contract ugt double %480, 1.500000e-08\l  br i1 %481, label %485, label %482\l|{<s0>T|<s1>F}}"];
	Node0x615f1b0:s0 -> Node0x61737e0;
	Node0x615f1b0:s1 -> Node0x6173870;
	Node0x6173870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%482:\l482:                                              \l  %483 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %5, i64 %31\l  %484 = getelementptr %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(1)* %483, i64 0, i32 0, i32 0, i32 0, i64 0\l  store float 0.000000e+00, float addrspace(1)* %484, align 16, !tbaa !11\l  br label %530\l}"];
	Node0x6173870 -> Node0x6173da0;
	Node0x61737e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%485:\l485:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %486 = fadd contract float %467, %463\l  %487 = fmul contract float %486, %486\l  %488 = fmul contract float %478, 4.000000e+00\l  %489 = fsub contract float %487, %488\l  %490 = fcmp olt float %489, 0x39F0000000000000\l  %491 = select i1 %490, float 0x41F0000000000000, float 1.000000e+00\l  %492 = fmul float %489, %491\l  %493 = tail call float @llvm.sqrt.f32(float %492)\l  %494 = bitcast float %493 to i32\l  %495 = add nsw i32 %494, -1\l  %496 = bitcast i32 %495 to float\l  %497 = add nsw i32 %494, 1\l  %498 = bitcast i32 %497 to float\l  %499 = tail call i1 @llvm.amdgcn.class.f32(float %492, i32 608)\l  %500 = select i1 %490, float 0x3EF0000000000000, float 1.000000e+00\l  %501 = fneg float %498\l  %502 = tail call float @llvm.fma.f32(float %501, float %493, float %492)\l  %503 = fcmp ogt float %502, 0.000000e+00\l  %504 = fneg float %496\l  %505 = tail call float @llvm.fma.f32(float %504, float %493, float %492)\l  %506 = fcmp ole float %505, 0.000000e+00\l  %507 = select i1 %506, float %496, float %493\l  %508 = select i1 %503, float %498, float %507\l  %509 = fmul float %500, %508\l  %510 = select i1 %499, float %492, float %509\l  %511 = fcmp uno float %510, 0.000000e+00\l  br i1 %511, label %516, label %512\l|{<s0>T|<s1>F}}"];
	Node0x61737e0:s0 -> Node0x6175620;
	Node0x61737e0:s1 -> Node0x61756b0;
	Node0x61756b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%512:\l512:                                              \l  %513 = fsub contract float %486, %510\l  %514 = fpext float %513 to double\l  %515 = fcmp contract ugt double %514, 2.000000e-04\l  br i1 %515, label %519, label %516\l|{<s0>T|<s1>F}}"];
	Node0x61756b0:s0 -> Node0x6168e90;
	Node0x61756b0:s1 -> Node0x6175620;
	Node0x6175620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%516:\l516:                                              \l  %517 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %5, i64 %31\l  %518 = getelementptr %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(1)* %517, i64 0, i32 0, i32 0, i32 0, i64 0\l  store float 0.000000e+00, float addrspace(1)* %518, align 16, !tbaa !11\l  br label %530\l}"];
	Node0x6175620 -> Node0x6173da0;
	Node0x6168e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%519:\l519:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %520 = fmul contract float %469, %475\l  %521 = fmul contract float %473, %467\l  %522 = fsub contract float %520, %521\l  %523 = fdiv contract float %522, %478\l  %524 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %5, i64 %31\l  %525 = getelementptr %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(1)* %524, i64 0, i32 0, i32 0, i32 0, i64 0\l  store float %523, float addrspace(1)* %525, align 16, !tbaa !11\l  %526 = fmul contract float %469, %473\l  %527 = fmul contract float %475, %463\l  %528 = fsub contract float %526, %527\l  %529 = fdiv contract float %528, %478\l  br label %530\l}"];
	Node0x6168e90 -> Node0x6173da0;
	Node0x6173da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%530:\l530:                                              \l  %531 = phi float [ 0.000000e+00, %482 ], [ %529, %519 ], [ 0.000000e+00,\l... %516 ]\l  %532 = phi %struct.HIP_vector_type addrspace(1)* [ %483, %482 ], [ %524,\l... %519 ], [ %517, %516 ]\l  %533 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %5, i64 %31, i32 0, i32 0, i32 0, i64 1\l  store float %531, float addrspace(1)* %533, align 4, !tbaa !11\l  %534 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %31\l  %535 = bitcast %struct.HIP_vector_type addrspace(1)* %534 to i8 addrspace(1)*\l  %536 = bitcast %struct.HIP_vector_type addrspace(1)* %532 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %535, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %536, i64 16, i1 false)\l  br label %537\l}"];
	Node0x6173da0 -> Node0x615ed30;
	Node0x615ed30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%537:\l537:                                              \l  ret void\l}"];
}
