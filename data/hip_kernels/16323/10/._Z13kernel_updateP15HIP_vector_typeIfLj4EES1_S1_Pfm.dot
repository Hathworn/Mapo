digraph "CFG for '_Z13kernel_updateP15HIP_vector_typeIfLj4EES1_S1_Pfm' function" {
	label="CFG for '_Z13kernel_updateP15HIP_vector_typeIfLj4EES1_S1_Pfm' function";

	Node0x63786f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = add i32 %13, %6\l  %15 = zext i32 %14 to i64\l  %16 = icmp ult i64 %15, %4\l  br i1 %16, label %17, label %58\l|{<s0>T|<s1>F}}"];
	Node0x63786f0:s0 -> Node0x6379820;
	Node0x63786f0:s1 -> Node0x637a700;
	Node0x6379820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%17:\l17:                                               \l  %18 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %15, i32 0, i32 0, i32 0, i64 0\l  %19 = load float, float addrspace(1)* %18, align 16, !amdgpu.noclobber !6\l  %20 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %15, i32 0, i32 0, i32 0, i64 1\l  %21 = load float, float addrspace(1)* %20, align 4, !amdgpu.noclobber !6\l  %22 = fmul contract float %19, %19\l  %23 = fmul contract float %21, %21\l  %24 = fadd contract float %22, %23\l  %25 = fcmp olt float %24, 0x39F0000000000000\l  %26 = select i1 %25, float 0x41F0000000000000, float 1.000000e+00\l  %27 = fmul float %24, %26\l  %28 = tail call float @llvm.sqrt.f32(float %27)\l  %29 = bitcast float %28 to i32\l  %30 = add nsw i32 %29, -1\l  %31 = bitcast i32 %30 to float\l  %32 = add nsw i32 %29, 1\l  %33 = bitcast i32 %32 to float\l  %34 = tail call i1 @llvm.amdgcn.class.f32(float %27, i32 608)\l  %35 = select i1 %25, float 0x3EF0000000000000, float 1.000000e+00\l  %36 = fneg float %33\l  %37 = tail call float @llvm.fma.f32(float %36, float %28, float %27)\l  %38 = fcmp ogt float %37, 0.000000e+00\l  %39 = fneg float %31\l  %40 = tail call float @llvm.fma.f32(float %39, float %28, float %27)\l  %41 = fcmp ole float %40, 0.000000e+00\l  %42 = select i1 %41, float %31, float %28\l  %43 = select i1 %38, float %33, float %42\l  %44 = fmul float %35, %43\l  %45 = select i1 %34, float %27, float %44\l  %46 = fpext float %45 to double\l  %47 = fmul contract double %46, 3.000000e-02\l  %48 = fptrunc double %47 to float\l  %49 = tail call float @llvm.minnum.f32(float %48, float 5.000000e-01)\l  %50 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %15, i32 0, i32 0, i32 0, i64 0\l  %51 = load float, float addrspace(1)* %50, align 16, !tbaa !7,\l... !amdgpu.noclobber !6\l  %52 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %15, i32 0, i32 0, i32 0, i64 1\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %54 = insertelement \<4 x float\> \<float poison, float poison, float poison,\l... float 0.000000e+00\>, float %51, i64 0\l  %55 = insertelement \<4 x float\> %54, float %53, i64 1\l  %56 = insertelement \<4 x float\> %55, float %49, i64 2\l  %57 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %15, i32 0, i32 0, i32 0\l  store \<4 x float\> %56, \<4 x float\> addrspace(1)* %57, align 16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %58\l}"];
	Node0x6379820 -> Node0x637a700;
	Node0x637a700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  ret void\l}"];
}
