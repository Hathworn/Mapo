digraph "CFG for '_Z3dotPiS_S_' function" {
	label="CFG for '_Z3dotPiS_S_' function";

	Node0x588c810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, 1000\l  br i1 %16, label %17, label %36\l|{<s0>T|<s1>F}}"];
	Node0x588c810:s0 -> Node0x588e170;
	Node0x588c810:s1 -> Node0x588eb20;
	Node0x588e170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%17:\l17:                                               \l  %18 = udiv i32 %12, %9\l  %19 = mul i32 %18, %9\l  %20 = icmp ugt i32 %12, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %9\l  br label %24\l}"];
	Node0x588e170 -> Node0x588efa0;
	Node0x588efa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ 0, %17 ], [ %33, %24 ]\l  %26 = phi i32 [ %15, %17 ], [ %34, %24 ]\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %27\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %32 = mul nsw i32 %31, %29\l  %33 = add nsw i32 %32, %25\l  %34 = add i32 %23, %26\l  %35 = icmp slt i32 %34, 1000\l  br i1 %35, label %24, label %36, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x588efa0:s0 -> Node0x588efa0;
	Node0x588efa0:s1 -> Node0x588eb20;
	Node0x588eb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%36:\l36:                                               \l  %37 = phi i32 [ 0, %3 ], [ %33, %24 ]\l  %38 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ3dotPiS_S_E5cache, i32 0, i32 %14\l  store i32 %37, i32 addrspace(3)* %38, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %39 = icmp ult i16 %8, 2\l  br i1 %39, label %55, label %40\l|{<s0>T|<s1>F}}"];
	Node0x588eb20:s0 -> Node0x5890d70;
	Node0x588eb20:s1 -> Node0x5890dc0;
	Node0x5890dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%40:\l40:                                               \l  %41 = lshr i32 %9, 1\l  br label %42\l}"];
	Node0x5890dc0 -> Node0x5890f80;
	Node0x5890f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = phi i32 [ %52, %51 ], [ %41, %40 ]\l  %44 = icmp ult i32 %14, %43\l  br i1 %44, label %45, label %51\l|{<s0>T|<s1>F}}"];
	Node0x5890f80:s0 -> Node0x5891240;
	Node0x5890f80:s1 -> Node0x5891070;
	Node0x5891240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%45:\l45:                                               \l  %46 = add nsw i32 %43, %14\l  %47 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ3dotPiS_S_E5cache, i32 0, i32 %46\l  %48 = load i32, i32 addrspace(3)* %47, align 4, !tbaa !16\l  %49 = load i32, i32 addrspace(3)* %38, align 4, !tbaa !16\l  %50 = add nsw i32 %49, %48\l  store i32 %50, i32 addrspace(3)* %38, align 4, !tbaa !16\l  br label %51\l}"];
	Node0x5891240 -> Node0x5891070;
	Node0x5891070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %52 = sdiv i32 %43, 2\l  %53 = add nsw i32 %43, 1\l  %54 = icmp ult i32 %53, 3\l  br i1 %54, label %55, label %42, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5891070:s0 -> Node0x5890d70;
	Node0x5891070:s1 -> Node0x5890f80;
	Node0x5890d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%55:\l55:                                               \l  %56 = icmp eq i32 %14, 0\l  br i1 %56, label %57, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5890d70:s0 -> Node0x5891ce0;
	Node0x5890d70:s1 -> Node0x5891d30;
	Node0x5891ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%57:\l57:                                               \l  %58 = load i32, i32 addrspace(3)* getelementptr inbounds ([256 x i32], [256\l... x i32] addrspace(3)* @_ZZ3dotPiS_S_E5cache, i32 0, i32 0), align 16, !tbaa !16\l  %59 = zext i32 %4 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %59\l  store i32 %58, i32 addrspace(1)* %60, align 4, !tbaa !16\l  br label %61\l}"];
	Node0x5891ce0 -> Node0x5891d30;
	Node0x5891d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%61:\l61:                                               \l  ret void\l}"];
}
