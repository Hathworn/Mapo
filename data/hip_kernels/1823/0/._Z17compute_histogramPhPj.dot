digraph "CFG for '_Z17compute_histogramPhPj' function" {
	label="CFG for '_Z17compute_histogramPhPj' function";

	Node0x5e08300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !6\l  %12 = mul i32 %3, %8\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %14 = add i32 %12, %13\l  %15 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ17compute_histogramPhPjE5cache, i32 0, i32 %13\l  store i32 0, i32 addrspace(3)* %15, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %16 = icmp slt i32 %14, 10000000\l  br i1 %16, label %17, label %34\l|{<s0>T|<s1>F}}"];
	Node0x5e08300:s0 -> Node0x5e09cf0;
	Node0x5e08300:s1 -> Node0x5e0abe0;
	Node0x5e09cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%17:\l17:                                               \l  %18 = udiv i32 %11, %8\l  %19 = mul i32 %18, %8\l  %20 = icmp ugt i32 %11, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %8\l  br label %24\l}"];
	Node0x5e09cf0 -> Node0x5e0b060;
	Node0x5e0b060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %14, %17 ], [ %32, %24 ]\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %26\l  %28 = load i8, i8 addrspace(1)* %27, align 1, !tbaa !20, !amdgpu.noclobber !5\l  %29 = zext i8 %28 to i32\l  %30 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ17compute_histogramPhPjE5cache, i32 0, i32 %29\l  %31 = atomicrmw add i32 addrspace(3)* %30, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %32 = add i32 %23, %25\l  %33 = icmp slt i32 %32, 10000000\l  br i1 %33, label %24, label %34, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x5e0b060:s0 -> Node0x5e0b060;
	Node0x5e0b060:s1 -> Node0x5e0abe0;
	Node0x5e0abe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%34:\l34:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %35 = zext i32 %13 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %35\l  %37 = load i32, i32 addrspace(3)* %15, align 4, !tbaa !16\l  %38 = atomicrmw add i32 addrspace(1)* %36, i32 %37 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  ret void\l}"];
}
