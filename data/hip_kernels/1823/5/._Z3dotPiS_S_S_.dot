digraph "CFG for '_Z3dotPiS_S_S_' function" {
	label="CFG for '_Z3dotPiS_S_S_' function";

	Node0x47f9cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = mul i32 %5, %10\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, 1000\l  br i1 %17, label %18, label %37\l|{<s0>T|<s1>F}}"];
	Node0x47f9cc0:s0 -> Node0x47fbf50;
	Node0x47f9cc0:s1 -> Node0x47fbfe0;
	Node0x47fbf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%18:\l18:                                               \l  %19 = udiv i32 %13, %10\l  %20 = mul i32 %19, %10\l  %21 = icmp ugt i32 %13, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %10\l  br label %25\l}"];
	Node0x47fbf50 -> Node0x47fc460;
	Node0x47fc460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ 0, %18 ], [ %34, %25 ]\l  %27 = phi i32 [ %16, %18 ], [ %35, %25 ]\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %28\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %28\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %33 = mul nsw i32 %32, %30\l  %34 = add nsw i32 %33, %26\l  %35 = add i32 %24, %27\l  %36 = icmp slt i32 %35, 1000\l  br i1 %36, label %25, label %37, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x47fc460:s0 -> Node0x47fc460;
	Node0x47fc460:s1 -> Node0x47fbfe0;
	Node0x47fbfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%37:\l37:                                               \l  %38 = phi i32 [ 0, %4 ], [ %34, %25 ]\l  %39 = sext i32 %16 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %39\l  store i32 %38, i32 addrspace(1)* %40, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %41 = icmp ult i16 %9, 2\l  br i1 %41, label %58, label %42\l|{<s0>T|<s1>F}}"];
	Node0x47fbfe0:s0 -> Node0x47fe280;
	Node0x47fbfe0:s1 -> Node0x47fe2d0;
	Node0x47fe2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%42:\l42:                                               \l  %43 = lshr i32 %10, 1\l  br label %44\l}"];
	Node0x47fe2d0 -> Node0x47fe490;
	Node0x47fe490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi i32 [ %55, %54 ], [ %43, %42 ]\l  %46 = icmp ult i32 %15, %45\l  br i1 %46, label %47, label %54\l|{<s0>T|<s1>F}}"];
	Node0x47fe490:s0 -> Node0x47fe750;
	Node0x47fe490:s1 -> Node0x47fe580;
	Node0x47fe750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%47:\l47:                                               \l  %48 = add nsw i32 %45, %16\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %49\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !16\l  %52 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !16\l  %53 = add nsw i32 %52, %51\l  store i32 %53, i32 addrspace(1)* %40, align 4, !tbaa !16\l  br label %54\l}"];
	Node0x47fe750 -> Node0x47fe580;
	Node0x47fe580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %55 = sdiv i32 %45, 2\l  %56 = add nsw i32 %45, 1\l  %57 = icmp ult i32 %56, 3\l  br i1 %57, label %58, label %44, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x47fe580:s0 -> Node0x47fe280;
	Node0x47fe580:s1 -> Node0x47fe490;
	Node0x47fe280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%58:\l58:                                               \l  %59 = icmp eq i32 %15, 0\l  br i1 %59, label %60, label %64\l|{<s0>T|<s1>F}}"];
	Node0x47fe280:s0 -> Node0x47ff1f0;
	Node0x47fe280:s1 -> Node0x47ff240;
	Node0x47ff1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%60:\l60:                                               \l  %61 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !16\l  %62 = zext i32 %5 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %62\l  store i32 %61, i32 addrspace(1)* %63, align 4, !tbaa !16\l  br label %64\l}"];
	Node0x47ff1f0 -> Node0x47ff240;
	Node0x47ff240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%64:\l64:                                               \l  ret void\l}"];
}
