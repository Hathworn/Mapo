digraph "CFG for '_Z19im2col_nopad_kernelPfiiiiiS_' function" {
	label="CFG for '_Z19im2col_nopad_kernelPfiiiiiS_' function";

	Node0x60a2ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = sub nsw i32 %2, %4\l  %9 = sdiv i32 %8, %5\l  %10 = add nsw i32 %9, 1\l  %11 = sub nsw i32 %3, %4\l  %12 = sdiv i32 %11, %5\l  %13 = add nsw i32 %12, 1\l  %14 = mul nsw i32 %4, %1\l  %15 = mul nsw i32 %14, %4\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 12\l  %20 = bitcast i8 addrspace(4)* %19 to i32 addrspace(4)*\l  %21 = load i32, i32 addrspace(4)* %20, align 4, !tbaa !4\l  %22 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 4, !range !13, !invariant.load\l... !14\l  %25 = zext i16 %24 to i32\l  %26 = udiv i32 %21, %25\l  %27 = mul i32 %26, %25\l  %28 = icmp ugt i32 %21, %27\l  %29 = zext i1 %28 to i32\l  %30 = add i32 %26, %29\l  %31 = mul i32 %30, %17\l  %32 = add i32 %31, %16\l  %33 = mul i32 %32, %25\l  %34 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %35 = add i32 %33, %34\l  %36 = mul i32 %10, %15\l  %37 = mul i32 %36, %13\l  %38 = icmp slt i32 %35, %37\l  br i1 %38, label %39, label %82\l|{<s0>T|<s1>F}}"];
	Node0x60a2ab0:s0 -> Node0x60a5a10;
	Node0x60a2ab0:s1 -> Node0x60a5aa0;
	Node0x60a5a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%39:\l39:                                               \l  %40 = freeze i32 %35\l  %41 = freeze i32 %13\l  %42 = sdiv i32 %40, %41\l  %43 = mul i32 %42, %41\l  %44 = sub i32 %40, %43\l  %45 = freeze i32 %10\l  %46 = sdiv i32 %42, %45\l  %47 = mul i32 %46, %45\l  %48 = sub i32 %42, %47\l  %49 = srem i32 %46, %15\l  %50 = freeze i32 %49\l  %51 = freeze i32 %4\l  %52 = sdiv i32 %50, %51\l  %53 = mul i32 %52, %51\l  %54 = sub i32 %50, %53\l  %55 = freeze i32 %4\l  %56 = sdiv i32 %52, %55\l  %57 = mul i32 %56, %55\l  %58 = sub i32 %52, %57\l  %59 = mul nsw i32 %48, %5\l  %60 = add nsw i32 %58, %59\l  %61 = mul nsw i32 %44, %5\l  %62 = add nsw i32 %54, %61\l  %63 = icmp sgt i32 %60, -1\l  %64 = icmp sgt i32 %62, -1\l  %65 = select i1 %63, i1 %64, i1 false\l  %66 = icmp slt i32 %60, %2\l  %67 = select i1 %65, i1 %66, i1 false\l  %68 = icmp slt i32 %62, %3\l  %69 = select i1 %67, i1 %68, i1 false\l  br i1 %69, label %70, label %78\l|{<s0>T|<s1>F}}"];
	Node0x60a5a10:s0 -> Node0x60a6e80;
	Node0x60a5a10:s1 -> Node0x60a6f10;
	Node0x60a6e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%70:\l70:                                               \l  %71 = mul nsw i32 %56, %2\l  %72 = add nsw i32 %71, %60\l  %73 = mul nsw i32 %72, %3\l  %74 = add nsw i32 %73, %62\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %78\l}"];
	Node0x60a6e80 -> Node0x60a6f10;
	Node0x60a6f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%78:\l78:                                               \l  %79 = phi contract float [ %77, %70 ], [ 0.000000e+00, %39 ]\l  %80 = sext i32 %35 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %6, i64 %80\l  store float %79, float addrspace(1)* %81, align 4, !tbaa !16\l  br label %82\l}"];
	Node0x60a6f10 -> Node0x60a5aa0;
	Node0x60a5aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  ret void\l}"];
}
