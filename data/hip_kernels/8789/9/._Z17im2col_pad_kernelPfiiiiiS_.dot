digraph "CFG for '_Z17im2col_pad_kernelPfiiiiiS_' function" {
	label="CFG for '_Z17im2col_pad_kernelPfiiiiiS_' function";

	Node0x488fb30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = add nsw i32 %2, -1\l  %9 = sdiv i32 %8, %5\l  %10 = add nsw i32 %9, 1\l  %11 = add nsw i32 %3, -1\l  %12 = sdiv i32 %11, %5\l  %13 = add nsw i32 %12, 1\l  %14 = mul nsw i32 %4, %1\l  %15 = mul nsw i32 %14, %4\l  %16 = sdiv i32 %4, -2\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr inbounds i8, i8 addrspace(4)* %19, i64 12\l  %21 = bitcast i8 addrspace(4)* %20 to i32 addrspace(4)*\l  %22 = load i32, i32 addrspace(4)* %21, align 4, !tbaa !4\l  %23 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !13, !invariant.load\l... !14\l  %26 = zext i16 %25 to i32\l  %27 = udiv i32 %22, %26\l  %28 = mul i32 %27, %26\l  %29 = icmp ugt i32 %22, %28\l  %30 = zext i1 %29 to i32\l  %31 = add i32 %27, %30\l  %32 = mul i32 %31, %18\l  %33 = add i32 %32, %17\l  %34 = mul i32 %33, %26\l  %35 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %36 = add i32 %34, %35\l  %37 = mul i32 %10, %15\l  %38 = mul i32 %37, %13\l  %39 = icmp slt i32 %36, %38\l  br i1 %39, label %40, label %85\l|{<s0>T|<s1>F}}"];
	Node0x488fb30:s0 -> Node0x4892ae0;
	Node0x488fb30:s1 -> Node0x4892b70;
	Node0x4892ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%40:\l40:                                               \l  %41 = freeze i32 %36\l  %42 = freeze i32 %13\l  %43 = sdiv i32 %41, %42\l  %44 = mul i32 %43, %42\l  %45 = sub i32 %41, %44\l  %46 = freeze i32 %10\l  %47 = sdiv i32 %43, %46\l  %48 = mul i32 %47, %46\l  %49 = sub i32 %43, %48\l  %50 = srem i32 %47, %15\l  %51 = freeze i32 %50\l  %52 = freeze i32 %4\l  %53 = sdiv i32 %51, %52\l  %54 = mul i32 %53, %52\l  %55 = sub i32 %51, %54\l  %56 = freeze i32 %4\l  %57 = sdiv i32 %53, %56\l  %58 = mul i32 %57, %56\l  %59 = sub i32 %53, %58\l  %60 = mul nsw i32 %49, %5\l  %61 = add i32 %60, %16\l  %62 = add i32 %61, %59\l  %63 = mul nsw i32 %45, %5\l  %64 = add i32 %63, %16\l  %65 = add i32 %64, %55\l  %66 = icmp sgt i32 %62, -1\l  %67 = icmp sgt i32 %65, -1\l  %68 = select i1 %66, i1 %67, i1 false\l  %69 = icmp slt i32 %62, %2\l  %70 = select i1 %68, i1 %69, i1 false\l  %71 = icmp slt i32 %65, %3\l  %72 = select i1 %70, i1 %71, i1 false\l  br i1 %72, label %73, label %81\l|{<s0>T|<s1>F}}"];
	Node0x4892ae0:s0 -> Node0x4892510;
	Node0x4892ae0:s1 -> Node0x48940b0;
	Node0x4892510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%73:\l73:                                               \l  %74 = mul nsw i32 %57, %2\l  %75 = add nsw i32 %74, %62\l  %76 = mul nsw i32 %75, %3\l  %77 = add nsw i32 %76, %65\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %81\l}"];
	Node0x4892510 -> Node0x48940b0;
	Node0x48940b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%81:\l81:                                               \l  %82 = phi contract float [ %80, %73 ], [ 0.000000e+00, %40 ]\l  %83 = sext i32 %36 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %6, i64 %83\l  store float %82, float addrspace(1)* %84, align 4, !tbaa !16\l  br label %85\l}"];
	Node0x48940b0 -> Node0x4892b70;
	Node0x4892b70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  ret void\l}"];
}
