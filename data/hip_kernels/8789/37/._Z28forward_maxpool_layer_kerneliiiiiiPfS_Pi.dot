digraph "CFG for '_Z28forward_maxpool_layer_kerneliiiiiiPfS_Pi' function" {
	label="CFG for '_Z28forward_maxpool_layer_kerneliiiiiiPfS_Pi' function";

	Node0x4980950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%9:\l  %10 = add nsw i32 %1, -1\l  %11 = sdiv i32 %10, %4\l  %12 = add nsw i32 %11, 1\l  %13 = add nsw i32 %2, -1\l  %14 = sdiv i32 %13, %4\l  %15 = add nsw i32 %14, 1\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 12\l  %20 = bitcast i8 addrspace(4)* %19 to i32 addrspace(4)*\l  %21 = load i32, i32 addrspace(4)* %20, align 4, !tbaa !4\l  %22 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 4, !range !13, !invariant.load\l... !14\l  %25 = zext i16 %24 to i32\l  %26 = udiv i32 %21, %25\l  %27 = mul i32 %26, %25\l  %28 = icmp ugt i32 %21, %27\l  %29 = zext i1 %28 to i32\l  %30 = add i32 %26, %29\l  %31 = mul i32 %30, %17\l  %32 = add i32 %31, %16\l  %33 = mul i32 %32, %25\l  %34 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %35 = add i32 %33, %34\l  %36 = icmp slt i32 %35, %0\l  br i1 %36, label %37, label %191\l|{<s0>T|<s1>F}}"];
	Node0x4980950:s0 -> Node0x49841a0;
	Node0x4980950:s1 -> Node0x4984230;
	Node0x49841a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%37:\l37:                                               \l  %38 = freeze i32 %35\l  %39 = freeze i32 %15\l  %40 = sdiv i32 %38, %39\l  %41 = mul i32 %40, %39\l  %42 = sub i32 %38, %41\l  %43 = freeze i32 %12\l  %44 = sdiv i32 %40, %43\l  %45 = mul i32 %44, %43\l  %46 = sub i32 %40, %45\l  %47 = freeze i32 %44\l  %48 = xor i32 %5, -1\l  %49 = sdiv i32 %48, 2\l  %50 = add nsw i32 %49, 1\l  %51 = mul nsw i32 %47, %12\l  %52 = add nsw i32 %51, %46\l  %53 = mul nsw i32 %52, %15\l  %54 = add nsw i32 %53, %42\l  %55 = icmp sgt i32 %5, 0\l  br i1 %55, label %56, label %185\l|{<s0>T|<s1>F}}"];
	Node0x49841a0:s0 -> Node0x4984d40;
	Node0x49841a0:s1 -> Node0x4984d90;
	Node0x4984d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%56:\l56:                                               \l  %57 = mul nsw i32 %46, %4\l  %58 = add nsw i32 %57, %50\l  %59 = mul nsw i32 %42, %4\l  %60 = add nsw i32 %59, %50\l  %61 = mul nsw i32 %47, %1\l  %62 = and i32 %5, 3\l  %63 = icmp ult i32 %5, 4\l  %64 = and i32 %5, -4\l  %65 = icmp eq i32 %62, 0\l  br label %66\l}"];
	Node0x4984d40 -> Node0x4983c60;
	Node0x4983c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%66:\l66:                                               \l  %67 = phi float [ 0xFFF0000000000000, %56 ], [ %182, %180 ]\l  %68 = phi i32 [ -1, %56 ], [ %181, %180 ]\l  %69 = phi i32 [ 0, %56 ], [ %183, %180 ]\l  %70 = add nsw i32 %58, %69\l  %71 = add nsw i32 %70, %61\l  %72 = mul nsw i32 %71, %2\l  %73 = icmp sgt i32 %70, -1\l  %74 = icmp slt i32 %70, %1\l  br i1 %63, label %150, label %75\l|{<s0>T|<s1>F}}"];
	Node0x4983c60:s0 -> Node0x4986800;
	Node0x4983c60:s1 -> Node0x4986890;
	Node0x4986890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%75:\l75:                                               \l  %76 = phi float [ %146, %142 ], [ %67, %66 ]\l  %77 = phi i32 [ %145, %142 ], [ %68, %66 ]\l  %78 = phi i32 [ %147, %142 ], [ 0, %66 ]\l  %79 = phi i32 [ %148, %142 ], [ 0, %66 ]\l  %80 = add nsw i32 %60, %78\l  %81 = add nsw i32 %80, %72\l  br i1 %73, label %82, label %91\l|{<s0>T|<s1>F}}"];
	Node0x4986890:s0 -> Node0x4986fc0;
	Node0x4986890:s1 -> Node0x4987050;
	Node0x4986fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%82:\l82:                                               \l  %83 = icmp sgt i32 %80, -1\l  %84 = select i1 %74, i1 %83, i1 false\l  %85 = icmp slt i32 %80, %2\l  %86 = select i1 %84, i1 %85, i1 false\l  br i1 %86, label %87, label %91\l|{<s0>T|<s1>F}}"];
	Node0x4986fc0:s0 -> Node0x4987440;
	Node0x4986fc0:s1 -> Node0x4987050;
	Node0x4987440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%87:\l87:                                               \l  %88 = sext i32 %81 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %6, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %91\l}"];
	Node0x4987440 -> Node0x4987050;
	Node0x4987050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%91:\l91:                                               \l  %92 = phi contract float [ %90, %87 ], [ 0xFFF0000000000000, %82 ], [\l... 0xFFF0000000000000, %75 ]\l  %93 = fcmp contract ogt float %92, %76\l  %94 = select i1 %93, i32 %81, i32 %77\l  %95 = select contract i1 %93, float %92, float %76\l  %96 = or i32 %78, 1\l  %97 = add nsw i32 %60, %96\l  %98 = add nsw i32 %97, %72\l  br i1 %73, label %99, label %108\l|{<s0>T|<s1>F}}"];
	Node0x4987050:s0 -> Node0x4988360;
	Node0x4987050:s1 -> Node0x49883b0;
	Node0x4988360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%99:\l99:                                               \l  %100 = icmp sgt i32 %97, -1\l  %101 = select i1 %74, i1 %100, i1 false\l  %102 = icmp slt i32 %97, %2\l  %103 = select i1 %101, i1 %102, i1 false\l  br i1 %103, label %104, label %108\l|{<s0>T|<s1>F}}"];
	Node0x4988360:s0 -> Node0x4988770;
	Node0x4988360:s1 -> Node0x49883b0;
	Node0x4988770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%104:\l104:                                              \l  %105 = sext i32 %98 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %6, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %108\l}"];
	Node0x4988770 -> Node0x49883b0;
	Node0x49883b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%108:\l108:                                              \l  %109 = phi contract float [ %107, %104 ], [ 0xFFF0000000000000, %99 ], [\l... 0xFFF0000000000000, %91 ]\l  %110 = fcmp contract ogt float %109, %95\l  %111 = select i1 %110, i32 %98, i32 %94\l  %112 = select contract i1 %110, float %109, float %95\l  %113 = or i32 %78, 2\l  %114 = add nsw i32 %60, %113\l  %115 = add nsw i32 %114, %72\l  br i1 %73, label %116, label %125\l|{<s0>T|<s1>F}}"];
	Node0x49883b0:s0 -> Node0x49894e0;
	Node0x49883b0:s1 -> Node0x4989530;
	Node0x49894e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%116:\l116:                                              \l  %117 = icmp sgt i32 %114, -1\l  %118 = select i1 %74, i1 %117, i1 false\l  %119 = icmp slt i32 %114, %2\l  %120 = select i1 %118, i1 %119, i1 false\l  br i1 %120, label %121, label %125\l|{<s0>T|<s1>F}}"];
	Node0x49894e0:s0 -> Node0x49898f0;
	Node0x49894e0:s1 -> Node0x4989530;
	Node0x49898f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%121:\l121:                                              \l  %122 = sext i32 %115 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %6, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %125\l}"];
	Node0x49898f0 -> Node0x4989530;
	Node0x4989530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%125:\l125:                                              \l  %126 = phi contract float [ %124, %121 ], [ 0xFFF0000000000000, %116 ], [\l... 0xFFF0000000000000, %108 ]\l  %127 = fcmp contract ogt float %126, %112\l  %128 = select i1 %127, i32 %115, i32 %111\l  %129 = select contract i1 %127, float %126, float %112\l  %130 = or i32 %78, 3\l  %131 = add nsw i32 %60, %130\l  %132 = add nsw i32 %131, %72\l  br i1 %73, label %133, label %142\l|{<s0>T|<s1>F}}"];
	Node0x4989530:s0 -> Node0x4985640;
	Node0x4989530:s1 -> Node0x4986a00;
	Node0x4985640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%133:\l133:                                              \l  %134 = icmp sgt i32 %131, -1\l  %135 = select i1 %74, i1 %134, i1 false\l  %136 = icmp slt i32 %131, %2\l  %137 = select i1 %135, i1 %136, i1 false\l  br i1 %137, label %138, label %142\l|{<s0>T|<s1>F}}"];
	Node0x4985640:s0 -> Node0x498a7f0;
	Node0x4985640:s1 -> Node0x4986a00;
	Node0x498a7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%138:\l138:                                              \l  %139 = sext i32 %132 to i64\l  %140 = getelementptr inbounds float, float addrspace(1)* %6, i64 %139\l  %141 = load float, float addrspace(1)* %140, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %142\l}"];
	Node0x498a7f0 -> Node0x4986a00;
	Node0x4986a00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%142:\l142:                                              \l  %143 = phi contract float [ %141, %138 ], [ 0xFFF0000000000000, %133 ], [\l... 0xFFF0000000000000, %125 ]\l  %144 = fcmp contract ogt float %143, %129\l  %145 = select i1 %144, i32 %132, i32 %128\l  %146 = select contract i1 %144, float %143, float %129\l  %147 = add nuw nsw i32 %78, 4\l  %148 = add i32 %79, 4\l  %149 = icmp eq i32 %148, %64\l  br i1 %149, label %150, label %75, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4986a00:s0 -> Node0x4986800;
	Node0x4986a00:s1 -> Node0x4986890;
	Node0x4986800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%150:\l150:                                              \l  %151 = phi i32 [ undef, %66 ], [ %145, %142 ]\l  %152 = phi float [ undef, %66 ], [ %146, %142 ]\l  %153 = phi float [ %67, %66 ], [ %146, %142 ]\l  %154 = phi i32 [ %68, %66 ], [ %145, %142 ]\l  %155 = phi i32 [ 0, %66 ], [ %147, %142 ]\l  br i1 %65, label %180, label %156\l|{<s0>T|<s1>F}}"];
	Node0x4986800:s0 -> Node0x4983d90;
	Node0x4986800:s1 -> Node0x498b7b0;
	Node0x498b7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%156:\l156:                                              \l  %157 = phi float [ %176, %172 ], [ %153, %150 ]\l  %158 = phi i32 [ %175, %172 ], [ %154, %150 ]\l  %159 = phi i32 [ %177, %172 ], [ %155, %150 ]\l  %160 = phi i32 [ %178, %172 ], [ 0, %150 ]\l  %161 = add nsw i32 %60, %159\l  %162 = add nsw i32 %161, %72\l  br i1 %73, label %163, label %172\l|{<s0>T|<s1>F}}"];
	Node0x498b7b0:s0 -> Node0x498bda0;
	Node0x498b7b0:s1 -> Node0x498b8b0;
	Node0x498bda0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%163:\l163:                                              \l  %164 = icmp sgt i32 %161, -1\l  %165 = select i1 %74, i1 %164, i1 false\l  %166 = icmp slt i32 %161, %2\l  %167 = select i1 %165, i1 %166, i1 false\l  br i1 %167, label %168, label %172\l|{<s0>T|<s1>F}}"];
	Node0x498bda0:s0 -> Node0x498c160;
	Node0x498bda0:s1 -> Node0x498b8b0;
	Node0x498c160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%168:\l168:                                              \l  %169 = sext i32 %162 to i64\l  %170 = getelementptr inbounds float, float addrspace(1)* %6, i64 %169\l  %171 = load float, float addrspace(1)* %170, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %172\l}"];
	Node0x498c160 -> Node0x498b8b0;
	Node0x498b8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%172:\l172:                                              \l  %173 = phi contract float [ %171, %168 ], [ 0xFFF0000000000000, %163 ], [\l... 0xFFF0000000000000, %156 ]\l  %174 = fcmp contract ogt float %173, %157\l  %175 = select i1 %174, i32 %162, i32 %158\l  %176 = select contract i1 %174, float %173, float %157\l  %177 = add nuw nsw i32 %159, 1\l  %178 = add i32 %160, 1\l  %179 = icmp eq i32 %178, %62\l  br i1 %179, label %180, label %156, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x498b8b0:s0 -> Node0x4983d90;
	Node0x498b8b0:s1 -> Node0x498b7b0;
	Node0x4983d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%180:\l180:                                              \l  %181 = phi i32 [ %151, %150 ], [ %175, %172 ]\l  %182 = phi float [ %152, %150 ], [ %176, %172 ]\l  %183 = add nuw nsw i32 %69, 1\l  %184 = icmp eq i32 %183, %5\l  br i1 %184, label %185, label %66, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4983d90:s0 -> Node0x4984d90;
	Node0x4983d90:s1 -> Node0x4983c60;
	Node0x4984d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%185:\l185:                                              \l  %186 = phi i32 [ -1, %37 ], [ %181, %180 ]\l  %187 = phi float [ 0xFFF0000000000000, %37 ], [ %182, %180 ]\l  %188 = sext i32 %54 to i64\l  %189 = getelementptr inbounds float, float addrspace(1)* %7, i64 %188\l  store float %187, float addrspace(1)* %189, align 4, !tbaa !16\l  %190 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %188\l  store i32 %186, i32 addrspace(1)* %190, align 4, !tbaa !25\l  br label %191\l}"];
	Node0x4984d90 -> Node0x4984230;
	Node0x4984230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%191:\l191:                                              \l  ret void\l}"];
}
