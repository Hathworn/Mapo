digraph "CFG for '_Z17executeThirdLayerPfS_S_' function" {
	label="CFG for '_Z17executeThirdLayerPfS_S_' function";

	Node0x540f0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = mul nsw i32 %4, 1251\l  %6 = sext i32 %5 to i64\l  %7 = getelementptr inbounds float, float addrspace(1)* %1, i64 %6\l  %8 = load float, float addrspace(1)* %7, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %9 = fadd contract float %8, 0.000000e+00\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = mul i32 %10, 1250\l  br label %53\l}"];
	Node0x540f0d0 -> Node0x5411630;
	Node0x5411730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%12:\l12:                                               \l  %13 = fpext float %165 to double\l  %14 = fmul contract double %13, 0x3FE55555571F7693\l  %15 = fptrunc double %14 to float\l  %16 = tail call float @llvm.fabs.f32(float %15)\l  %17 = fcmp olt float %16, 6.250000e-01\l  br i1 %17, label %18, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5411730:s0 -> Node0x54108d0;
	Node0x5411730:s1 -> Node0x5411da0;
	Node0x54108d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%18:\l18:                                               \l  %19 = fmul float %15, %15\l  %20 = tail call float @llvm.fmuladd.f32(float %19, float 0xBF7758E7A0000000,\l... float 0x3F95211920000000)\l  %21 = tail call float @llvm.fmuladd.f32(float %19, float %20, float\l... 0xBFAB8389C0000000)\l  %22 = tail call float @llvm.fmuladd.f32(float %19, float %21, float\l... 0x3FC1107040000000)\l  %23 = tail call float @llvm.fmuladd.f32(float %19, float %22, float\l... 0xBFD5555320000000)\l  %24 = fmul float %16, %23\l  %25 = tail call float @llvm.fmuladd.f32(float %19, float %24, float %16)\l  br label %43\l}"];
	Node0x54108d0 -> Node0x54128e0;
	Node0x5411da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%26:\l26:                                               \l  %27 = fmul float %16, 2.000000e+00\l  %28 = fmul float %27, 0x3FF7154760000000\l  %29 = tail call float @llvm.rint.f32(float %28)\l  %30 = fcmp ogt float %27, 0x40562E4300000000\l  %31 = fneg float %28\l  %32 = tail call float @llvm.fma.f32(float %27, float 0x3FF7154760000000,\l... float %31)\l  %33 = tail call float @llvm.fma.f32(float %27, float 0x3E54AE0BE0000000,\l... float %32)\l  %34 = fsub float %28, %29\l  %35 = fadd float %33, %34\l  %36 = tail call float @llvm.exp2.f32(float %35)\l  %37 = fptosi float %29 to i32\l  %38 = tail call float @llvm.amdgcn.ldexp.f32(float %36, i32 %37)\l  %39 = fadd float %38, 1.000000e+00\l  %40 = select i1 %30, float 0x7FF0000000000000, float %39\l  %41 = tail call float @llvm.amdgcn.rcp.f32(float %40)\l  %42 = tail call float @llvm.fmuladd.f32(float %41, float -2.000000e+00,\l... float 1.000000e+00)\l  br label %43\l}"];
	Node0x5411da0 -> Node0x54128e0;
	Node0x54128e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%43:\l43:                                               \l  %44 = phi float [ %25, %18 ], [ %42, %26 ]\l  %45 = tail call float @llvm.copysign.f32(float %44, float %15)\l  %46 = fpext float %45 to double\l  %47 = fmul contract double %46, 1.715900e+00\l  %48 = fptrunc double %47 to float\l  %49 = mul i32 %10, 100\l  %50 = add i32 %49, %4\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %2, i64 %51\l  store float %48, float addrspace(1)* %52, align 4, !tbaa !4\l  ret void\l}"];
	Node0x5411630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi i32 [ 0, %3 ], [ %159, %53 ]\l  %55 = phi float [ %9, %3 ], [ %165, %53 ]\l  %56 = add i32 %54, %11\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %60 = or i32 %54, 1\l  %61 = add i32 %60, %5\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %1, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %65 = fmul contract float %59, %64\l  %66 = fadd contract float %55, %65\l  %67 = add i32 %60, %11\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %71 = add nuw nsw i32 %54, 2\l  %72 = add i32 %71, %5\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %76 = fmul contract float %70, %75\l  %77 = fadd contract float %66, %76\l  %78 = add i32 %71, %11\l  %79 = zext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %82 = add nuw nsw i32 %54, 3\l  %83 = add i32 %82, %5\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %87 = fmul contract float %81, %86\l  %88 = fadd contract float %77, %87\l  %89 = add i32 %82, %11\l  %90 = zext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %93 = add nuw nsw i32 %54, 4\l  %94 = add i32 %93, %5\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %1, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %98 = fmul contract float %92, %97\l  %99 = fadd contract float %88, %98\l  %100 = add i32 %93, %11\l  %101 = zext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %0, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %104 = add nuw nsw i32 %54, 5\l  %105 = add i32 %104, %5\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %1, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %109 = fmul contract float %103, %108\l  %110 = fadd contract float %99, %109\l  %111 = add i32 %104, %11\l  %112 = zext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %0, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %115 = add nuw nsw i32 %54, 6\l  %116 = add i32 %115, %5\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %1, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %120 = fmul contract float %114, %119\l  %121 = fadd contract float %110, %120\l  %122 = add i32 %115, %11\l  %123 = zext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %0, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %126 = add nuw nsw i32 %54, 7\l  %127 = add i32 %126, %5\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %1, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %131 = fmul contract float %125, %130\l  %132 = fadd contract float %121, %131\l  %133 = add i32 %126, %11\l  %134 = zext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %0, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %137 = add nuw nsw i32 %54, 8\l  %138 = add i32 %137, %5\l  %139 = sext i32 %138 to i64\l  %140 = getelementptr inbounds float, float addrspace(1)* %1, i64 %139\l  %141 = load float, float addrspace(1)* %140, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %142 = fmul contract float %136, %141\l  %143 = fadd contract float %132, %142\l  %144 = add i32 %137, %11\l  %145 = zext i32 %144 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %0, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %148 = add nuw nsw i32 %54, 9\l  %149 = add i32 %148, %5\l  %150 = sext i32 %149 to i64\l  %151 = getelementptr inbounds float, float addrspace(1)* %1, i64 %150\l  %152 = load float, float addrspace(1)* %151, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %153 = fmul contract float %147, %152\l  %154 = fadd contract float %143, %153\l  %155 = add i32 %148, %11\l  %156 = zext i32 %155 to i64\l  %157 = getelementptr inbounds float, float addrspace(1)* %0, i64 %156\l  %158 = load float, float addrspace(1)* %157, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %159 = add nuw nsw i32 %54, 10\l  %160 = add i32 %159, %5\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds float, float addrspace(1)* %1, i64 %161\l  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %164 = fmul contract float %158, %163\l  %165 = fadd contract float %154, %164\l  %166 = icmp eq i32 %159, 1250\l  br i1 %166, label %12, label %53, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5411630:s0 -> Node0x5411730;
	Node0x5411630:s1 -> Node0x5411630;
}
