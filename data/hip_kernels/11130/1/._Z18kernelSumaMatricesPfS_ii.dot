digraph "CFG for '_Z18kernelSumaMatricesPfS_ii' function" {
	label="CFG for '_Z18kernelSumaMatricesPfS_ii' function";

	Node0x4da4ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 16\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 8, !tbaa !16\l  %24 = icmp slt i32 %16, %2\l  br i1 %24, label %25, label %61\l|{<s0>T|<s1>F}}"];
	Node0x4da4ab0:s0 -> Node0x4da7ec0;
	Node0x4da4ab0:s1 -> Node0x4da7f50;
	Node0x4da7ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%25:\l25:                                               \l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %27 = mul i32 %26, %20\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %29 = add i32 %27, %28\l  %30 = icmp slt i32 %29, %3\l  %31 = udiv i32 %14, %11\l  %32 = mul i32 %31, %11\l  %33 = icmp ugt i32 %14, %32\l  %34 = zext i1 %33 to i32\l  %35 = add i32 %31, %34\l  %36 = mul i32 %35, %11\l  br label %37\l}"];
	Node0x4da7ec0 -> Node0x4da9050;
	Node0x4da9050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%37:\l37:                                               \l  %38 = phi i32 [ %16, %25 ], [ %59, %58 ]\l  br i1 %30, label %39, label %58\l|{<s0>T|<s1>F}}"];
	Node0x4da9050:s0 -> Node0x4da92c0;
	Node0x4da9050:s1 -> Node0x4da9180;
	Node0x4da92c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%39:\l39:                                               \l  %40 = mul nsw i32 %38, %3\l  %41 = udiv i32 %23, %20\l  %42 = mul i32 %41, %20\l  %43 = icmp ugt i32 %23, %42\l  %44 = zext i1 %43 to i32\l  %45 = add i32 %41, %44\l  %46 = mul i32 %45, %20\l  br label %47\l}"];
	Node0x4da92c0 -> Node0x4da97d0;
	Node0x4da97d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi i32 [ %29, %39 ], [ %56, %47 ]\l  %49 = add nsw i32 %48, %40\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %1, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !17\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !17\l  %55 = fadd contract float %52, %54\l  store float %55, float addrspace(1)* %53, align 4, !tbaa !17\l  %56 = add i32 %46, %48\l  %57 = icmp slt i32 %56, %3\l  br i1 %57, label %47, label %58, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x4da97d0:s0 -> Node0x4da97d0;
	Node0x4da97d0:s1 -> Node0x4da9180;
	Node0x4da9180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%58:\l58:                                               \l  %59 = add i32 %36, %38\l  %60 = icmp slt i32 %59, %2\l  br i1 %60, label %37, label %61, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x4da9180:s0 -> Node0x4da9050;
	Node0x4da9180:s1 -> Node0x4da7f50;
	Node0x4da7f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%61:\l61:                                               \l  ret void\l}"];
}
