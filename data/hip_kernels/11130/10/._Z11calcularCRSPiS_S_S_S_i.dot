digraph "CFG for '_Z11calcularCRSPiS_S_S_S_i' function" {
	label="CFG for '_Z11calcularCRSPiS_S_S_S_i' function";

	Node0x46358f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = add i32 %14, %7\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = add i32 %22, %16\l  %24 = sext i32 %15 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %27 = add nsw i32 %15, 1\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %28\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %31 = add nsw i32 %30, -1\l  %32 = icmp slt i32 %26, %30\l  br i1 %32, label %33, label %35\l|{<s0>T|<s1>F}}"];
	Node0x46358f0:s0 -> Node0x4637f00;
	Node0x46358f0:s1 -> Node0x4637f90;
	Node0x4637f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%33:\l33:                                               \l  %34 = add nsw i32 %26, -1\l  br label %41\l}"];
	Node0x4637f00 -> Node0x463a1f0;
	Node0x4637f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%35:\l35:                                               \l  %36 = phi i32 [ 0, %6 ], [ %56, %41 ]\l  %37 = mul nsw i32 %15, %5\l  %38 = add nsw i32 %23, %37\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %39\l  store i32 %36, i32 addrspace(1)* %40, align 4, !tbaa !7\l  ret void\l}"];
	Node0x463a1f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = phi i32 [ %57, %41 ], [ %34, %33 ]\l  %43 = phi i32 [ %56, %41 ], [ 0, %33 ]\l  %44 = sext i32 %42 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %44\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %49 = add nsw i32 %48, -1\l  %50 = mul nsw i32 %49, %5\l  %51 = add nsw i32 %50, %23\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %52\l  %54 = load i32, i32 addrspace(1)* %53, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %55 = mul nsw i32 %54, %46\l  %56 = add nsw i32 %55, %43\l  %57 = add nsw i32 %42, 1\l  %58 = icmp slt i32 %57, %31\l  br i1 %58, label %41, label %35, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x463a1f0:s0 -> Node0x463a1f0;
	Node0x463a1f0:s1 -> Node0x4637f90;
}
