digraph "CFG for '_Z15calcularBloquesPiS_S_iii' function" {
	label="CFG for '_Z15calcularBloquesPiS_S_iii' function";

	Node0x5118c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = add i32 %14, %7\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = add i32 %22, %16\l  %24 = icmp sgt i32 %3, 0\l  br i1 %24, label %25, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5118c00:s0 -> Node0x511c510;
	Node0x5118c00:s1 -> Node0x511c5a0;
	Node0x511c510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%25:\l25:                                               \l  %26 = icmp sgt i32 %4, 0\l  %27 = mul nsw i32 %15, %4\l  %28 = and i32 %4, 7\l  %29 = icmp ult i32 %4, 8\l  %30 = and i32 %4, -8\l  %31 = icmp eq i32 %28, 0\l  br label %32\l}"];
	Node0x511c510 -> Node0x511cad0;
	Node0x511cad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%32:\l32:                                               \l  %33 = phi i32 [ 0, %25 ], [ %67, %60 ]\l  %34 = mul nsw i32 %33, %4\l  br i1 %26, label %35, label %60\l|{<s0>T|<s1>F}}"];
	Node0x511cad0:s0 -> Node0x511ce90;
	Node0x511cad0:s1 -> Node0x511b240;
	Node0x511ce90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%35:\l35:                                               \l  br i1 %29, label %37, label %69\l|{<s0>T|<s1>F}}"];
	Node0x511ce90:s0 -> Node0x511cfd0;
	Node0x511ce90:s1 -> Node0x511d020;
	Node0x511c5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%36:\l36:                                               \l  ret void\l}"];
	Node0x511cfd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%37:\l37:                                               \l  %38 = phi i32 [ undef, %35 ], [ %175, %69 ]\l  %39 = phi i32 [ 0, %35 ], [ %176, %69 ]\l  %40 = phi i32 [ 0, %35 ], [ %175, %69 ]\l  br i1 %31, label %60, label %41\l|{<s0>T|<s1>F}}"];
	Node0x511cfd0:s0 -> Node0x511b240;
	Node0x511cfd0:s1 -> Node0x511d840;
	Node0x511d840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = phi i32 [ %57, %41 ], [ %39, %37 ]\l  %43 = phi i32 [ %56, %41 ], [ %40, %37 ]\l  %44 = phi i32 [ %58, %41 ], [ 0, %37 ]\l  %45 = add nsw i32 %42, %27\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7\l  %49 = add nsw i32 %42, %34\l  %50 = mul nsw i32 %49, %5\l  %51 = add nsw i32 %50, %23\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %52\l  %54 = load i32, i32 addrspace(1)* %53, align 4, !tbaa !7\l  %55 = mul nsw i32 %54, %48\l  %56 = add nsw i32 %55, %43\l  %57 = add nuw nsw i32 %42, 1\l  %58 = add i32 %44, 1\l  %59 = icmp eq i32 %58, %28\l  br i1 %59, label %60, label %41, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x511d840:s0 -> Node0x511b240;
	Node0x511d840:s1 -> Node0x511d840;
	Node0x511b240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%60:\l60:                                               \l  %61 = phi i32 [ 0, %32 ], [ %38, %37 ], [ %56, %41 ]\l  %62 = add nsw i32 %34, %15\l  %63 = mul nsw i32 %62, %5\l  %64 = add nsw i32 %63, %23\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %65\l  store i32 %61, i32 addrspace(1)* %66, align 4, !tbaa !7\l  %67 = add nuw nsw i32 %33, 1\l  %68 = icmp eq i32 %67, %3\l  br i1 %68, label %36, label %32, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x511b240:s0 -> Node0x511c5a0;
	Node0x511b240:s1 -> Node0x511cad0;
	Node0x511d020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%69:\l69:                                               \l  %70 = phi i32 [ %176, %69 ], [ 0, %35 ]\l  %71 = phi i32 [ %175, %69 ], [ 0, %35 ]\l  %72 = phi i32 [ %177, %69 ], [ 0, %35 ]\l  %73 = add nsw i32 %70, %27\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %74\l  %76 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !7\l  %77 = add nsw i32 %70, %34\l  %78 = mul nsw i32 %77, %5\l  %79 = add nsw i32 %78, %23\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %80\l  %82 = load i32, i32 addrspace(1)* %81, align 4, !tbaa !7\l  %83 = mul nsw i32 %82, %76\l  %84 = add nsw i32 %83, %71\l  %85 = or i32 %70, 1\l  %86 = add nsw i32 %85, %27\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %87\l  %89 = load i32, i32 addrspace(1)* %88, align 4, !tbaa !7\l  %90 = add nsw i32 %85, %34\l  %91 = mul nsw i32 %90, %5\l  %92 = add nsw i32 %91, %23\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %93\l  %95 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !7\l  %96 = mul nsw i32 %95, %89\l  %97 = add nsw i32 %96, %84\l  %98 = or i32 %70, 2\l  %99 = add nsw i32 %98, %27\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %100\l  %102 = load i32, i32 addrspace(1)* %101, align 4, !tbaa !7\l  %103 = add nsw i32 %98, %34\l  %104 = mul nsw i32 %103, %5\l  %105 = add nsw i32 %104, %23\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %106\l  %108 = load i32, i32 addrspace(1)* %107, align 4, !tbaa !7\l  %109 = mul nsw i32 %108, %102\l  %110 = add nsw i32 %109, %97\l  %111 = or i32 %70, 3\l  %112 = add nsw i32 %111, %27\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %113\l  %115 = load i32, i32 addrspace(1)* %114, align 4, !tbaa !7\l  %116 = add nsw i32 %111, %34\l  %117 = mul nsw i32 %116, %5\l  %118 = add nsw i32 %117, %23\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %119\l  %121 = load i32, i32 addrspace(1)* %120, align 4, !tbaa !7\l  %122 = mul nsw i32 %121, %115\l  %123 = add nsw i32 %122, %110\l  %124 = or i32 %70, 4\l  %125 = add nsw i32 %124, %27\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %126\l  %128 = load i32, i32 addrspace(1)* %127, align 4, !tbaa !7\l  %129 = add nsw i32 %124, %34\l  %130 = mul nsw i32 %129, %5\l  %131 = add nsw i32 %130, %23\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %132\l  %134 = load i32, i32 addrspace(1)* %133, align 4, !tbaa !7\l  %135 = mul nsw i32 %134, %128\l  %136 = add nsw i32 %135, %123\l  %137 = or i32 %70, 5\l  %138 = add nsw i32 %137, %27\l  %139 = sext i32 %138 to i64\l  %140 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %139\l  %141 = load i32, i32 addrspace(1)* %140, align 4, !tbaa !7\l  %142 = add nsw i32 %137, %34\l  %143 = mul nsw i32 %142, %5\l  %144 = add nsw i32 %143, %23\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %145\l  %147 = load i32, i32 addrspace(1)* %146, align 4, !tbaa !7\l  %148 = mul nsw i32 %147, %141\l  %149 = add nsw i32 %148, %136\l  %150 = or i32 %70, 6\l  %151 = add nsw i32 %150, %27\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %152\l  %154 = load i32, i32 addrspace(1)* %153, align 4, !tbaa !7\l  %155 = add nsw i32 %150, %34\l  %156 = mul nsw i32 %155, %5\l  %157 = add nsw i32 %156, %23\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %158\l  %160 = load i32, i32 addrspace(1)* %159, align 4, !tbaa !7\l  %161 = mul nsw i32 %160, %154\l  %162 = add nsw i32 %161, %149\l  %163 = or i32 %70, 7\l  %164 = add nsw i32 %163, %27\l  %165 = sext i32 %164 to i64\l  %166 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %165\l  %167 = load i32, i32 addrspace(1)* %166, align 4, !tbaa !7\l  %168 = add nsw i32 %163, %34\l  %169 = mul nsw i32 %168, %5\l  %170 = add nsw i32 %169, %23\l  %171 = sext i32 %170 to i64\l  %172 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %171\l  %173 = load i32, i32 addrspace(1)* %172, align 4, !tbaa !7\l  %174 = mul nsw i32 %173, %167\l  %175 = add nsw i32 %174, %162\l  %176 = add nuw nsw i32 %70, 8\l  %177 = add i32 %72, 8\l  %178 = icmp eq i32 %177, %30\l  br i1 %178, label %37, label %69, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x511d020:s0 -> Node0x511cfd0;
	Node0x511d020:s1 -> Node0x511d020;
}
