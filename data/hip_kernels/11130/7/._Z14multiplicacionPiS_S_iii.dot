digraph "CFG for '_Z14multiplicacionPiS_S_iii' function" {
	label="CFG for '_Z14multiplicacionPiS_S_iii' function";

	Node0x5b4b1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = add i32 %14, %7\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = add i32 %22, %16\l  %24 = mul nsw i32 %15, %5\l  %25 = add nsw i32 %23, %24\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %26\l  store i32 0, i32 addrspace(1)* %27, align 4, !tbaa !7\l  %28 = icmp sgt i32 %4, 0\l  br i1 %28, label %29, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5b4b1e0:s0 -> Node0x5b4ef20;
	Node0x5b4b1e0:s1 -> Node0x5b4efb0;
	Node0x5b4ef20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %15, %4\l  %31 = and i32 %4, 3\l  %32 = icmp ult i32 %4, 4\l  br i1 %32, label %35, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5b4ef20:s0 -> Node0x5b4d7f0;
	Node0x5b4ef20:s1 -> Node0x5b4d840;
	Node0x5b4d840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%33:\l33:                                               \l  %34 = and i32 %4, -4\l  br label %58\l}"];
	Node0x5b4d840 -> Node0x5b4f620;
	Node0x5b4d7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%35:\l35:                                               \l  %36 = phi i32 [ 0, %29 ], [ %108, %58 ]\l  %37 = phi i32 [ 0, %29 ], [ %109, %58 ]\l  %38 = icmp eq i32 %31, 0\l  br i1 %38, label %57, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5b4d7f0:s0 -> Node0x5b4efb0;
	Node0x5b4d7f0:s1 -> Node0x5b4f970;
	Node0x5b4f970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i32 [ %53, %39 ], [ %36, %35 ]\l  %41 = phi i32 [ %54, %39 ], [ %37, %35 ]\l  %42 = phi i32 [ %55, %39 ], [ 0, %35 ]\l  %43 = add nsw i32 %41, %30\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7\l  %47 = mul nsw i32 %41, %5\l  %48 = add nsw i32 %47, %23\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %49\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !7\l  %52 = mul nsw i32 %51, %46\l  %53 = add nsw i32 %40, %52\l  store i32 %53, i32 addrspace(1)* %27, align 4, !tbaa !7\l  %54 = add nuw nsw i32 %41, 1\l  %55 = add i32 %42, 1\l  %56 = icmp eq i32 %55, %31\l  br i1 %56, label %57, label %39, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5b4f970:s0 -> Node0x5b4efb0;
	Node0x5b4f970:s1 -> Node0x5b4f970;
	Node0x5b4efb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%57:\l57:                                               \l  ret void\l}"];
	Node0x5b4f620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%58:\l58:                                               \l  %59 = phi i32 [ 0, %33 ], [ %108, %58 ]\l  %60 = phi i32 [ 0, %33 ], [ %109, %58 ]\l  %61 = phi i32 [ 0, %33 ], [ %110, %58 ]\l  %62 = add nsw i32 %60, %30\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !7\l  %66 = mul nsw i32 %60, %5\l  %67 = add nsw i32 %66, %23\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !7\l  %71 = mul nsw i32 %70, %65\l  %72 = add nsw i32 %59, %71\l  store i32 %72, i32 addrspace(1)* %27, align 4, !tbaa !7\l  %73 = or i32 %60, 1\l  %74 = add nsw i32 %73, %30\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %75\l  %77 = load i32, i32 addrspace(1)* %76, align 4, !tbaa !7\l  %78 = mul nsw i32 %73, %5\l  %79 = add nsw i32 %78, %23\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %80\l  %82 = load i32, i32 addrspace(1)* %81, align 4, !tbaa !7\l  %83 = mul nsw i32 %82, %77\l  %84 = add nsw i32 %72, %83\l  store i32 %84, i32 addrspace(1)* %27, align 4, !tbaa !7\l  %85 = or i32 %60, 2\l  %86 = add nsw i32 %85, %30\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %87\l  %89 = load i32, i32 addrspace(1)* %88, align 4, !tbaa !7\l  %90 = mul nsw i32 %85, %5\l  %91 = add nsw i32 %90, %23\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %92\l  %94 = load i32, i32 addrspace(1)* %93, align 4, !tbaa !7\l  %95 = mul nsw i32 %94, %89\l  %96 = add nsw i32 %84, %95\l  store i32 %96, i32 addrspace(1)* %27, align 4, !tbaa !7\l  %97 = or i32 %60, 3\l  %98 = add nsw i32 %97, %30\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %99\l  %101 = load i32, i32 addrspace(1)* %100, align 4, !tbaa !7\l  %102 = mul nsw i32 %97, %5\l  %103 = add nsw i32 %102, %23\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %104\l  %106 = load i32, i32 addrspace(1)* %105, align 4, !tbaa !7\l  %107 = mul nsw i32 %106, %101\l  %108 = add nsw i32 %96, %107\l  store i32 %108, i32 addrspace(1)* %27, align 4, !tbaa !7\l  %109 = add nuw nsw i32 %60, 4\l  %110 = add i32 %61, 4\l  %111 = icmp eq i32 %110, %34\l  br i1 %111, label %35, label %58, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5b4f620:s0 -> Node0x5b4d7f0;
	Node0x5b4f620:s1 -> Node0x5b4f620;
}
