digraph "CFG for '_Z12gpu_distancePiPfS_ii' function" {
	label="CFG for '_Z12gpu_distancePiPfS_ii' function";

	Node0x45c4b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = icmp slt i32 %14, %3\l  br i1 %15, label %16, label %153\l|{<s0>T|<s1>F}}"];
	Node0x45c4b00:s0 -> Node0x45c69c0;
	Node0x45c4b00:s1 -> Node0x45c6a50;
	Node0x45c69c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%16:\l16:                                               \l  %17 = icmp sgt i32 %4, 0\l  br i1 %17, label %18, label %47\l|{<s0>T|<s1>F}}"];
	Node0x45c69c0:s0 -> Node0x45c6ca0;
	Node0x45c69c0:s1 -> Node0x45c6cf0;
	Node0x45c6ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %14, %4\l  %20 = and i32 %4, 7\l  %21 = icmp ult i32 %4, 8\l  br i1 %21, label %24, label %22\l|{<s0>T|<s1>F}}"];
	Node0x45c6ca0:s0 -> Node0x45c7040;
	Node0x45c6ca0:s1 -> Node0x45c7090;
	Node0x45c7090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%22:\l22:                                               \l  %23 = and i32 %4, -8\l  br label %51\l}"];
	Node0x45c7090 -> Node0x45c7290;
	Node0x45c7040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%24:\l24:                                               \l  %25 = phi float [ undef, %18 ], [ %149, %51 ]\l  %26 = phi i32 [ 0, %18 ], [ %150, %51 ]\l  %27 = phi float [ 0.000000e+00, %18 ], [ %149, %51 ]\l  %28 = icmp eq i32 %20, 0\l  br i1 %28, label %47, label %29\l|{<s0>T|<s1>F}}"];
	Node0x45c7040:s0 -> Node0x45c6cf0;
	Node0x45c7040:s1 -> Node0x45c8500;
	Node0x45c8500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %44, %29 ], [ %26, %24 ]\l  %31 = phi float [ %43, %29 ], [ %27, %24 ]\l  %32 = phi i32 [ %45, %29 ], [ 0, %24 ]\l  %33 = add nsw i32 %30, %19\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %34\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %37 = zext i32 %30 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %37\l  %39 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %40 = sub nsw i32 %36, %39\l  %41 = tail call i32 @llvm.abs.i32(i32 %40, i1 true)\l  %42 = sitofp i32 %41 to float\l  %43 = fadd contract float %31, %42\l  %44 = add nuw nsw i32 %30, 1\l  %45 = add i32 %32, 1\l  %46 = icmp eq i32 %45, %20\l  br i1 %46, label %47, label %29, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x45c8500:s0 -> Node0x45c6cf0;
	Node0x45c8500:s1 -> Node0x45c8500;
	Node0x45c6cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%47:\l47:                                               \l  %48 = phi float [ 0.000000e+00, %16 ], [ %25, %24 ], [ %43, %29 ]\l  %49 = sext i32 %14 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  store float %48, float addrspace(1)* %50, align 4, !tbaa !13\l  br label %153\l}"];
	Node0x45c6cf0 -> Node0x45c6a50;
	Node0x45c7290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%51:\l51:                                               \l  %52 = phi i32 [ 0, %22 ], [ %150, %51 ]\l  %53 = phi float [ 0.000000e+00, %22 ], [ %149, %51 ]\l  %54 = phi i32 [ 0, %22 ], [ %151, %51 ]\l  %55 = add nsw i32 %52, %19\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %56\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %59 = zext i32 %52 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %62 = sub nsw i32 %58, %61\l  %63 = tail call i32 @llvm.abs.i32(i32 %62, i1 true)\l  %64 = sitofp i32 %63 to float\l  %65 = fadd contract float %53, %64\l  %66 = or i32 %52, 1\l  %67 = add nsw i32 %66, %19\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %71 = zext i32 %66 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %71\l  %73 = load i32, i32 addrspace(1)* %72, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %74 = sub nsw i32 %70, %73\l  %75 = tail call i32 @llvm.abs.i32(i32 %74, i1 true)\l  %76 = sitofp i32 %75 to float\l  %77 = fadd contract float %65, %76\l  %78 = or i32 %52, 2\l  %79 = add nsw i32 %78, %19\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %80\l  %82 = load i32, i32 addrspace(1)* %81, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %83 = zext i32 %78 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %86 = sub nsw i32 %82, %85\l  %87 = tail call i32 @llvm.abs.i32(i32 %86, i1 true)\l  %88 = sitofp i32 %87 to float\l  %89 = fadd contract float %77, %88\l  %90 = or i32 %52, 3\l  %91 = add nsw i32 %90, %19\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %92\l  %94 = load i32, i32 addrspace(1)* %93, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %95 = zext i32 %90 to i64\l  %96 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %95\l  %97 = load i32, i32 addrspace(1)* %96, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %98 = sub nsw i32 %94, %97\l  %99 = tail call i32 @llvm.abs.i32(i32 %98, i1 true)\l  %100 = sitofp i32 %99 to float\l  %101 = fadd contract float %89, %100\l  %102 = or i32 %52, 4\l  %103 = add nsw i32 %102, %19\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %104\l  %106 = load i32, i32 addrspace(1)* %105, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %107 = zext i32 %102 to i64\l  %108 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %107\l  %109 = load i32, i32 addrspace(1)* %108, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %110 = sub nsw i32 %106, %109\l  %111 = tail call i32 @llvm.abs.i32(i32 %110, i1 true)\l  %112 = sitofp i32 %111 to float\l  %113 = fadd contract float %101, %112\l  %114 = or i32 %52, 5\l  %115 = add nsw i32 %114, %19\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %116\l  %118 = load i32, i32 addrspace(1)* %117, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %119 = zext i32 %114 to i64\l  %120 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %119\l  %121 = load i32, i32 addrspace(1)* %120, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %122 = sub nsw i32 %118, %121\l  %123 = tail call i32 @llvm.abs.i32(i32 %122, i1 true)\l  %124 = sitofp i32 %123 to float\l  %125 = fadd contract float %113, %124\l  %126 = or i32 %52, 6\l  %127 = add nsw i32 %126, %19\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %128\l  %130 = load i32, i32 addrspace(1)* %129, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %131 = zext i32 %126 to i64\l  %132 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %131\l  %133 = load i32, i32 addrspace(1)* %132, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %134 = sub nsw i32 %130, %133\l  %135 = tail call i32 @llvm.abs.i32(i32 %134, i1 true)\l  %136 = sitofp i32 %135 to float\l  %137 = fadd contract float %125, %136\l  %138 = or i32 %52, 7\l  %139 = add nsw i32 %138, %19\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %140\l  %142 = load i32, i32 addrspace(1)* %141, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %143 = zext i32 %138 to i64\l  %144 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %143\l  %145 = load i32, i32 addrspace(1)* %144, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %146 = sub nsw i32 %142, %145\l  %147 = tail call i32 @llvm.abs.i32(i32 %146, i1 true)\l  %148 = sitofp i32 %147 to float\l  %149 = fadd contract float %137, %148\l  %150 = add nuw nsw i32 %52, 8\l  %151 = add i32 %54, 8\l  %152 = icmp eq i32 %151, %23\l  br i1 %152, label %24, label %51, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x45c7290:s0 -> Node0x45c7040;
	Node0x45c7290:s1 -> Node0x45c7290;
	Node0x45c6a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%153:\l153:                                              \l  ret void\l}"];
}
