digraph "CFG for '_Z10kernSmoothiiiPhS_PKfi' function" {
	label="CFG for '_Z10kernSmoothiiiPhS_PKfi' function";

	Node0x594d730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = icmp slt i32 %16, %1\l  %26 = icmp slt i32 %24, %2\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %133\l|{<s0>T|<s1>F}}"];
	Node0x594d730:s0 -> Node0x5951180;
	Node0x594d730:s1 -> Node0x5951210;
	Node0x5951180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%28:\l28:                                               \l  %29 = icmp sgt i32 %6, 0\l  br i1 %29, label %30, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5951180:s0 -> Node0x5951410;
	Node0x5951180:s1 -> Node0x5951460;
	Node0x5951410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%30:\l30:                                               \l  %31 = lshr i32 %6, 1\l  %32 = sub i32 %16, %31\l  %33 = sub i32 %24, %31\l  %34 = and i32 %6, 1\l  %35 = icmp eq i32 %6, 1\l  %36 = and i32 %6, -2\l  %37 = icmp eq i32 %34, 0\l  br label %46\l}"];
	Node0x5951410 -> Node0x594f610;
	Node0x5951460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%38:\l38:                                               \l  %39 = phi float [ 0.000000e+00, %28 ], [ %78, %77 ]\l  %40 = tail call float @llvm.fabs.f32(float %39)\l  %41 = fptoui float %40 to i8\l  %42 = mul nsw i32 %24, %1\l  %43 = add nsw i32 %42, %16\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %44\l  store i8 %41, i8 addrspace(1)* %45, align 1, !tbaa !7\l  br label %133\l}"];
	Node0x5951460 -> Node0x5951210;
	Node0x594f610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%46:\l46:                                               \l  %47 = phi float [ 0.000000e+00, %30 ], [ %78, %77 ]\l  %48 = phi i32 [ 0, %30 ], [ %79, %77 ]\l  %49 = add i32 %32, %48\l  %50 = icmp sgt i32 %49, -1\l  %51 = icmp slt i32 %49, %1\l  br i1 %35, label %52, label %81\l|{<s0>T|<s1>F}}"];
	Node0x594f610:s0 -> Node0x59531e0;
	Node0x594f610:s1 -> Node0x5953270;
	Node0x59531e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%52:\l52:                                               \l  %53 = phi float [ undef, %46 ], [ %129, %128 ]\l  %54 = phi i32 [ 0, %46 ], [ %130, %128 ]\l  %55 = phi float [ %47, %46 ], [ %129, %128 ]\l  br i1 %37, label %77, label %56\l|{<s0>T|<s1>F}}"];
	Node0x59531e0:s0 -> Node0x5952630;
	Node0x59531e0:s1 -> Node0x5953b10;
	Node0x5953b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%56:\l56:                                               \l  %57 = add i32 %33, %54\l  %58 = icmp sgt i32 %57, -1\l  %59 = select i1 %50, i1 %58, i1 false\l  %60 = select i1 %59, i1 %51, i1 false\l  %61 = icmp slt i32 %57, %2\l  %62 = select i1 %60, i1 %61, i1 false\l  br i1 %62, label %63, label %77\l|{<s0>T|<s1>F}}"];
	Node0x5953b10:s0 -> Node0x5954010;
	Node0x5953b10:s1 -> Node0x5952630;
	Node0x5954010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%63:\l63:                                               \l  %64 = mul nsw i32 %57, %1\l  %65 = add nsw i32 %64, %49\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %66\l  %68 = load i8, i8 addrspace(1)* %67, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %69 = uitofp i8 %68 to float\l  %70 = mul nsw i32 %54, %6\l  %71 = add nsw i32 %70, %48\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %5, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %75 = fmul contract float %74, %69\l  %76 = fadd contract float %55, %75\l  br label %77\l}"];
	Node0x5954010 -> Node0x5952630;
	Node0x5952630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%77:\l77:                                               \l  %78 = phi float [ %53, %52 ], [ %76, %63 ], [ %55, %56 ]\l  %79 = add nuw nsw i32 %48, 1\l  %80 = icmp eq i32 %79, %6\l  br i1 %80, label %38, label %46, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5952630:s0 -> Node0x5951460;
	Node0x5952630:s1 -> Node0x594f610;
	Node0x5953270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = phi i32 [ %130, %128 ], [ 0, %46 ]\l  %83 = phi float [ %129, %128 ], [ %47, %46 ]\l  %84 = phi i32 [ %131, %128 ], [ 0, %46 ]\l  %85 = add i32 %33, %82\l  %86 = icmp sgt i32 %85, -1\l  %87 = select i1 %50, i1 %86, i1 false\l  %88 = select i1 %87, i1 %51, i1 false\l  %89 = icmp slt i32 %85, %2\l  %90 = select i1 %88, i1 %89, i1 false\l  br i1 %90, label %91, label %105\l|{<s0>T|<s1>F}}"];
	Node0x5953270:s0 -> Node0x5955b40;
	Node0x5953270:s1 -> Node0x5955bd0;
	Node0x5955b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%91:\l91:                                               \l  %92 = mul nsw i32 %85, %1\l  %93 = add nsw i32 %92, %49\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %94\l  %96 = load i8, i8 addrspace(1)* %95, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %97 = uitofp i8 %96 to float\l  %98 = mul nsw i32 %82, %6\l  %99 = add nsw i32 %98, %48\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %5, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %103 = fmul contract float %102, %97\l  %104 = fadd contract float %83, %103\l  br label %105\l}"];
	Node0x5955b40 -> Node0x5955bd0;
	Node0x5955bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  %106 = phi float [ %104, %91 ], [ %83, %81 ]\l  %107 = or i32 %82, 1\l  %108 = add i32 %33, %107\l  %109 = icmp sgt i32 %108, -1\l  %110 = select i1 %50, i1 %109, i1 false\l  %111 = select i1 %110, i1 %51, i1 false\l  %112 = icmp slt i32 %108, %2\l  %113 = select i1 %111, i1 %112, i1 false\l  br i1 %113, label %114, label %128\l|{<s0>T|<s1>F}}"];
	Node0x5955bd0:s0 -> Node0x5956fa0;
	Node0x5955bd0:s1 -> Node0x5953800;
	Node0x5956fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%114:\l114:                                              \l  %115 = mul nsw i32 %108, %1\l  %116 = add nsw i32 %115, %49\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %117\l  %119 = load i8, i8 addrspace(1)* %118, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %120 = uitofp i8 %119 to float\l  %121 = mul nsw i32 %107, %6\l  %122 = add nsw i32 %121, %48\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %5, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %126 = fmul contract float %125, %120\l  %127 = fadd contract float %106, %126\l  br label %128\l}"];
	Node0x5956fa0 -> Node0x5953800;
	Node0x5953800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%128:\l128:                                              \l  %129 = phi float [ %127, %114 ], [ %106, %105 ]\l  %130 = add nuw nsw i32 %82, 2\l  %131 = add i32 %84, 2\l  %132 = icmp eq i32 %131, %36\l  br i1 %132, label %52, label %81, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5953800:s0 -> Node0x59531e0;
	Node0x5953800:s1 -> Node0x5953270;
	Node0x5951210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%133:\l133:                                              \l  ret void\l}"];
}
