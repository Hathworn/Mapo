digraph "CFG for '_Z16kernGaussianBluriiPhS_iPf' function" {
	label="CFG for '_Z16kernGaussianBluriiPhS_iPf' function";

	Node0x47912e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %0\l  %25 = icmp slt i32 %23, %1\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %201\l|{<s0>T|<s1>F}}"];
	Node0x47912e0:s0 -> Node0x4794d60;
	Node0x47912e0:s1 -> Node0x4794df0;
	Node0x4794d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%27:\l27:                                               \l  %28 = icmp sgt i32 %4, 0\l  br i1 %28, label %29, label %37\l|{<s0>T|<s1>F}}"];
	Node0x4794d60:s0 -> Node0x4794ff0;
	Node0x4794d60:s1 -> Node0x4795040;
	Node0x4794ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%29:\l29:                                               \l  %30 = lshr i32 %4, 1\l  %31 = sub i32 %15, %30\l  %32 = sub i32 %23, %30\l  %33 = and i32 %4, 1\l  %34 = icmp eq i32 %4, 1\l  %35 = and i32 %4, -2\l  %36 = icmp eq i32 %33, 0\l  br label %55\l}"];
	Node0x4794ff0 -> Node0x47933c0;
	Node0x4795040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%37:\l37:                                               \l  %38 = phi float [ 0.000000e+00, %27 ], [ %108, %107 ]\l  %39 = phi float [ 0.000000e+00, %27 ], [ %109, %107 ]\l  %40 = phi float [ 0.000000e+00, %27 ], [ %110, %107 ]\l  %41 = mul nsw i32 %23, %0\l  %42 = add nsw i32 %41, %15\l  %43 = mul nsw i32 %42, 3\l  %44 = fptoui float %40 to i8\l  %45 = sext i32 %43 to i64\l  %46 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %45\l  store i8 %44, i8 addrspace(1)* %46, align 1, !tbaa !7\l  %47 = fptoui float %39 to i8\l  %48 = add nsw i32 %43, 1\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %49\l  store i8 %47, i8 addrspace(1)* %50, align 1, !tbaa !7\l  %51 = fptoui float %38 to i8\l  %52 = add nsw i32 %43, 2\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %53\l  store i8 %51, i8 addrspace(1)* %54, align 1, !tbaa !7\l  br label %201\l}"];
	Node0x4795040 -> Node0x4794df0;
	Node0x47933c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%55:\l55:                                               \l  %56 = phi float [ 0.000000e+00, %29 ], [ %110, %107 ]\l  %57 = phi float [ 0.000000e+00, %29 ], [ %109, %107 ]\l  %58 = phi i32 [ 0, %29 ], [ %111, %107 ]\l  %59 = phi float [ 0.000000e+00, %29 ], [ %108, %107 ]\l  %60 = add i32 %31, %58\l  %61 = icmp sgt i32 %60, -1\l  %62 = icmp slt i32 %60, %0\l  br i1 %34, label %63, label %113\l|{<s0>T|<s1>F}}"];
	Node0x47933c0:s0 -> Node0x4797b80;
	Node0x47933c0:s1 -> Node0x4797c10;
	Node0x4797b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%63:\l63:                                               \l  %64 = phi float [ undef, %55 ], [ %195, %194 ]\l  %65 = phi float [ undef, %55 ], [ %196, %194 ]\l  %66 = phi float [ undef, %55 ], [ %197, %194 ]\l  %67 = phi float [ %56, %55 ], [ %197, %194 ]\l  %68 = phi i32 [ 0, %55 ], [ %198, %194 ]\l  %69 = phi float [ %57, %55 ], [ %196, %194 ]\l  %70 = phi float [ %59, %55 ], [ %195, %194 ]\l  br i1 %36, label %107, label %71\l|{<s0>T|<s1>F}}"];
	Node0x4797b80:s0 -> Node0x4796210;
	Node0x4797b80:s1 -> Node0x4798a50;
	Node0x4798a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%71:\l71:                                               \l  %72 = add i32 %32, %68\l  %73 = icmp sgt i32 %72, -1\l  %74 = select i1 %61, i1 %73, i1 false\l  %75 = select i1 %74, i1 %62, i1 false\l  %76 = icmp slt i32 %72, %1\l  %77 = select i1 %75, i1 %76, i1 false\l  br i1 %77, label %78, label %107\l|{<s0>T|<s1>F}}"];
	Node0x4798a50:s0 -> Node0x4798f50;
	Node0x4798a50:s1 -> Node0x4796210;
	Node0x4798f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%78:\l78:                                               \l  %79 = mul nsw i32 %72, %0\l  %80 = add nsw i32 %79, %60\l  %81 = mul nsw i32 %80, 3\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %82\l  %84 = load i8, i8 addrspace(1)* %83, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %85 = uitofp i8 %84 to float\l  %86 = mul nsw i32 %68, %4\l  %87 = add nsw i32 %86, %58\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %5, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %91 = fmul contract float %90, %85\l  %92 = fadd contract float %67, %91\l  %93 = add nsw i32 %81, 1\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %94\l  %96 = load i8, i8 addrspace(1)* %95, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %97 = uitofp i8 %96 to float\l  %98 = fmul contract float %90, %97\l  %99 = fadd contract float %69, %98\l  %100 = add nsw i32 %81, 2\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %101\l  %103 = load i8, i8 addrspace(1)* %102, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %104 = uitofp i8 %103 to float\l  %105 = fmul contract float %90, %104\l  %106 = fadd contract float %70, %105\l  br label %107\l}"];
	Node0x4798f50 -> Node0x4796210;
	Node0x4796210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%107:\l107:                                              \l  %108 = phi float [ %64, %63 ], [ %106, %78 ], [ %70, %71 ]\l  %109 = phi float [ %65, %63 ], [ %99, %78 ], [ %69, %71 ]\l  %110 = phi float [ %66, %63 ], [ %92, %78 ], [ %67, %71 ]\l  %111 = add nuw nsw i32 %58, 1\l  %112 = icmp eq i32 %111, %4\l  br i1 %112, label %37, label %55, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4796210:s0 -> Node0x4795040;
	Node0x4796210:s1 -> Node0x47933c0;
	Node0x4797c10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%113:\l113:                                              \l  %114 = phi float [ %197, %194 ], [ %56, %55 ]\l  %115 = phi i32 [ %198, %194 ], [ 0, %55 ]\l  %116 = phi float [ %196, %194 ], [ %57, %55 ]\l  %117 = phi float [ %195, %194 ], [ %59, %55 ]\l  %118 = phi i32 [ %199, %194 ], [ 0, %55 ]\l  %119 = add i32 %32, %115\l  %120 = icmp sgt i32 %119, -1\l  %121 = select i1 %61, i1 %120, i1 false\l  %122 = select i1 %121, i1 %62, i1 false\l  %123 = icmp slt i32 %119, %1\l  %124 = select i1 %122, i1 %123, i1 false\l  br i1 %124, label %125, label %154\l|{<s0>T|<s1>F}}"];
	Node0x4797c10:s0 -> Node0x479adc0;
	Node0x4797c10:s1 -> Node0x479ae10;
	Node0x479adc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%125:\l125:                                              \l  %126 = mul nsw i32 %119, %0\l  %127 = add nsw i32 %126, %60\l  %128 = mul nsw i32 %127, 3\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %129\l  %131 = load i8, i8 addrspace(1)* %130, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %132 = uitofp i8 %131 to float\l  %133 = mul nsw i32 %115, %4\l  %134 = add nsw i32 %133, %58\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds float, float addrspace(1)* %5, i64 %135\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %138 = fmul contract float %137, %132\l  %139 = fadd contract float %114, %138\l  %140 = add nsw i32 %128, 1\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %141\l  %143 = load i8, i8 addrspace(1)* %142, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %144 = uitofp i8 %143 to float\l  %145 = fmul contract float %137, %144\l  %146 = fadd contract float %116, %145\l  %147 = add nsw i32 %128, 2\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %148\l  %150 = load i8, i8 addrspace(1)* %149, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %151 = uitofp i8 %150 to float\l  %152 = fmul contract float %137, %151\l  %153 = fadd contract float %117, %152\l  br label %154\l}"];
	Node0x479adc0 -> Node0x479ae10;
	Node0x479ae10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%154:\l154:                                              \l  %155 = phi float [ %153, %125 ], [ %117, %113 ]\l  %156 = phi float [ %146, %125 ], [ %116, %113 ]\l  %157 = phi float [ %139, %125 ], [ %114, %113 ]\l  %158 = or i32 %115, 1\l  %159 = add i32 %32, %158\l  %160 = icmp sgt i32 %159, -1\l  %161 = select i1 %61, i1 %160, i1 false\l  %162 = select i1 %161, i1 %62, i1 false\l  %163 = icmp slt i32 %159, %1\l  %164 = select i1 %162, i1 %163, i1 false\l  br i1 %164, label %165, label %194\l|{<s0>T|<s1>F}}"];
	Node0x479ae10:s0 -> Node0x479cf40;
	Node0x479ae10:s1 -> Node0x47981a0;
	Node0x479cf40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%165:\l165:                                              \l  %166 = mul nsw i32 %159, %0\l  %167 = add nsw i32 %166, %60\l  %168 = mul nsw i32 %167, 3\l  %169 = sext i32 %168 to i64\l  %170 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %169\l  %171 = load i8, i8 addrspace(1)* %170, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %172 = uitofp i8 %171 to float\l  %173 = mul nsw i32 %158, %4\l  %174 = add nsw i32 %173, %58\l  %175 = sext i32 %174 to i64\l  %176 = getelementptr inbounds float, float addrspace(1)* %5, i64 %175\l  %177 = load float, float addrspace(1)* %176, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %178 = fmul contract float %177, %172\l  %179 = fadd contract float %157, %178\l  %180 = add nsw i32 %168, 1\l  %181 = sext i32 %180 to i64\l  %182 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %181\l  %183 = load i8, i8 addrspace(1)* %182, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %184 = uitofp i8 %183 to float\l  %185 = fmul contract float %177, %184\l  %186 = fadd contract float %156, %185\l  %187 = add nsw i32 %168, 2\l  %188 = sext i32 %187 to i64\l  %189 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %188\l  %190 = load i8, i8 addrspace(1)* %189, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %191 = uitofp i8 %190 to float\l  %192 = fmul contract float %177, %191\l  %193 = fadd contract float %155, %192\l  br label %194\l}"];
	Node0x479cf40 -> Node0x47981a0;
	Node0x47981a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%194:\l194:                                              \l  %195 = phi float [ %193, %165 ], [ %155, %154 ]\l  %196 = phi float [ %186, %165 ], [ %156, %154 ]\l  %197 = phi float [ %179, %165 ], [ %157, %154 ]\l  %198 = add nuw nsw i32 %115, 2\l  %199 = add i32 %118, 2\l  %200 = icmp eq i32 %199, %35\l  br i1 %200, label %63, label %113, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x47981a0:s0 -> Node0x4797b80;
	Node0x47981a0:s1 -> Node0x4797c10;
	Node0x4794df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%201:\l201:                                              \l  ret void\l}"];
}
