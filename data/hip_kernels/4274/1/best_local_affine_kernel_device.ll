; ModuleID = '../data/hip_kernels/4274/1/main.cu'
source_filename = "../data/hip_kernels/4274/1/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind
define protected amdgpu_kernel void @_Z24best_local_affine_kernelPfS_S_iifi(float addrspace(1)* nocapture readonly %0, float addrspace(1)* nocapture readonly %1, float addrspace(1)* nocapture writeonly %2, i32 %3, i32 %4, float %5, i32 %6) local_unnamed_addr #0 {
  %8 = mul nsw i32 %4, %3
  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()
  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4
  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*
  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5
  %14 = zext i16 %13 to i32
  %15 = mul i32 %9, %14
  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6
  %17 = add i32 %15, %16
  %18 = icmp slt i32 %17, %8
  br i1 %18, label %19, label %658

19:                                               ; preds = %7
  %20 = freeze i32 %17
  %21 = freeze i32 %4
  %22 = sdiv i32 %20, %21
  %23 = mul i32 %22, %21
  %24 = sub i32 %20, %23
  %25 = sub i32 0, %6
  %26 = icmp slt i32 %6, 0
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = shl nsw i32 %8, 1
  br label %29

29:                                               ; preds = %27, %505
  %30 = phi double [ 0.000000e+00, %27 ], [ %628, %505 ]
  %31 = phi double [ 0.000000e+00, %27 ], [ %629, %505 ]
  %32 = phi double [ 0.000000e+00, %27 ], [ %630, %505 ]
  %33 = phi double [ 0.000000e+00, %27 ], [ %631, %505 ]
  %34 = phi double [ 0.000000e+00, %27 ], [ %632, %505 ]
  %35 = phi double [ 0.000000e+00, %27 ], [ %633, %505 ]
  %36 = phi double [ 0.000000e+00, %27 ], [ %634, %505 ]
  %37 = phi double [ 0.000000e+00, %27 ], [ %635, %505 ]
  %38 = phi double [ 0.000000e+00, %27 ], [ %636, %505 ]
  %39 = phi double [ 0.000000e+00, %27 ], [ %637, %505 ]
  %40 = phi double [ 0.000000e+00, %27 ], [ %638, %505 ]
  %41 = phi double [ 0.000000e+00, %27 ], [ %639, %505 ]
  %42 = phi double [ 0.000000e+00, %27 ], [ %640, %505 ]
  %43 = phi double [ 0.000000e+00, %27 ], [ %641, %505 ]
  %44 = phi double [ 0.000000e+00, %27 ], [ %642, %505 ]
  %45 = phi double [ 0.000000e+00, %27 ], [ %643, %505 ]
  %46 = phi double [ 0.000000e+00, %27 ], [ %644, %505 ]
  %47 = phi double [ 1.000000e-03, %27 ], [ %645, %505 ]
  %48 = phi double [ 0.000000e+00, %27 ], [ %646, %505 ]
  %49 = phi double [ 0.000000e+00, %27 ], [ %647, %505 ]
  %50 = phi double [ 0.000000e+00, %27 ], [ %648, %505 ]
  %51 = phi double [ 0.000000e+00, %27 ], [ %649, %505 ]
  %52 = phi double [ 1.000000e-03, %27 ], [ %650, %505 ]
  %53 = phi double [ 0.000000e+00, %27 ], [ %651, %505 ]
  %54 = phi double [ 0.000000e+00, %27 ], [ %652, %505 ]
  %55 = phi double [ 0.000000e+00, %27 ], [ %653, %505 ]
  %56 = phi double [ 0.000000e+00, %27 ], [ %654, %505 ]
  %57 = phi double [ 1.000000e-03, %27 ], [ %655, %505 ]
  %58 = phi i32 [ %25, %27 ], [ %506, %505 ]
  %59 = add nsw i32 %58, %22
  %60 = mul nsw i32 %59, %4
  %61 = icmp sgt i32 %59, -1
  %62 = icmp slt i32 %59, %3
  br label %508

63:                                               ; preds = %505, %19
  %64 = phi double [ 1.000000e-03, %19 ], [ %655, %505 ]
  %65 = phi double [ 0.000000e+00, %19 ], [ %654, %505 ]
  %66 = phi double [ 0.000000e+00, %19 ], [ %653, %505 ]
  %67 = phi double [ 0.000000e+00, %19 ], [ %652, %505 ]
  %68 = phi double [ 0.000000e+00, %19 ], [ %651, %505 ]
  %69 = phi double [ 1.000000e-03, %19 ], [ %650, %505 ]
  %70 = phi double [ 0.000000e+00, %19 ], [ %649, %505 ]
  %71 = phi double [ 0.000000e+00, %19 ], [ %648, %505 ]
  %72 = phi double [ 0.000000e+00, %19 ], [ %647, %505 ]
  %73 = phi double [ 0.000000e+00, %19 ], [ %646, %505 ]
  %74 = phi double [ 1.000000e-03, %19 ], [ %645, %505 ]
  %75 = phi double [ 0.000000e+00, %19 ], [ %644, %505 ]
  %76 = phi double [ 0.000000e+00, %19 ], [ %643, %505 ]
  %77 = phi double [ 0.000000e+00, %19 ], [ %642, %505 ]
  %78 = phi double [ 0.000000e+00, %19 ], [ %641, %505 ]
  %79 = phi double [ 0.000000e+00, %19 ], [ %640, %505 ]
  %80 = phi double [ 0.000000e+00, %19 ], [ %639, %505 ]
  %81 = phi double [ 0.000000e+00, %19 ], [ %638, %505 ]
  %82 = phi double [ 0.000000e+00, %19 ], [ %637, %505 ]
  %83 = phi double [ 0.000000e+00, %19 ], [ %636, %505 ]
  %84 = phi double [ 0.000000e+00, %19 ], [ %635, %505 ]
  %85 = phi double [ 0.000000e+00, %19 ], [ %634, %505 ]
  %86 = phi double [ 0.000000e+00, %19 ], [ %633, %505 ]
  %87 = phi double [ 0.000000e+00, %19 ], [ %632, %505 ]
  %88 = phi double [ 0.000000e+00, %19 ], [ %631, %505 ]
  %89 = phi double [ 0.000000e+00, %19 ], [ %630, %505 ]
  %90 = phi double [ 0.000000e+00, %19 ], [ %629, %505 ]
  %91 = phi double [ 0.000000e+00, %19 ], [ %628, %505 ]
  %92 = fmul contract double %69, %74
  %93 = fmul contract double %92, %79
  %94 = fmul contract double %69, %75
  %95 = fmul contract double %94, %78
  %96 = fsub contract double %93, %95
  %97 = fmul contract double %70, %73
  %98 = fmul contract double %97, %79
  %99 = fsub contract double %96, %98
  %100 = fmul contract double %71, %73
  %101 = fmul contract double %100, %78
  %102 = fadd contract double %101, %99
  %103 = fmul contract double %70, %77
  %104 = fmul contract double %75, %103
  %105 = fadd contract double %104, %102
  %106 = fmul contract double %71, %77
  %107 = fmul contract double %74, %106
  %108 = fsub contract double %105, %107
  %109 = fneg contract double %68
  %110 = fmul contract double %74, %109
  %111 = fmul contract double %110, %79
  %112 = fmul contract double %68, %75
  %113 = fmul contract double %112, %78
  %114 = fadd contract double %113, %111
  %115 = fmul contract double %70, %72
  %116 = fmul contract double %115, %79
  %117 = fadd contract double %116, %114
  %118 = fmul contract double %71, %72
  %119 = fmul contract double %118, %78
  %120 = fsub contract double %117, %119
  %121 = fmul contract double %70, %76
  %122 = fmul contract double %75, %121
  %123 = fsub contract double %120, %122
  %124 = fmul contract double %71, %76
  %125 = fmul contract double %74, %124
  %126 = fadd contract double %125, %123
  %127 = fmul contract double %68, %73
  %128 = fmul contract double %127, %79
  %129 = fmul contract double %112, %77
  %130 = fsub contract double %128, %129
  %131 = fmul contract double %69, %72
  %132 = fmul contract double %131, %79
  %133 = fsub contract double %130, %132
  %134 = fmul contract double %118, %77
  %135 = fadd contract double %134, %133
  %136 = fmul contract double %69, %76
  %137 = fmul contract double %75, %136
  %138 = fadd contract double %137, %135
  %139 = fmul contract double %73, %124
  %140 = fsub contract double %138, %139
  %141 = fmul contract double %73, %109
  %142 = fmul contract double %141, %78
  %143 = fmul contract double %68, %74
  %144 = fmul contract double %143, %77
  %145 = fadd contract double %144, %142
  %146 = fmul contract double %131, %78
  %147 = fadd contract double %146, %145
  %148 = fmul contract double %115, %77
  %149 = fsub contract double %147, %148
  %150 = fmul contract double %74, %136
  %151 = fsub contract double %149, %150
  %152 = fmul contract double %73, %121
  %153 = fadd contract double %152, %151
  %154 = fneg contract double %65
  %155 = fmul contract double %66, %73
  %156 = fmul contract double %67, %73
  %157 = fmul contract double %66, %77
  %158 = fmul contract double %67, %77
  %159 = fmul contract double %64, %74
  %160 = fmul contract double %64, %75
  %161 = fmul contract double %66, %72
  %162 = fmul contract double %67, %72
  %163 = fmul contract double %66, %76
  %164 = fmul contract double %67, %76
  %165 = fneg contract double %64
  %166 = fmul contract double %65, %72
  %167 = fmul contract double %65, %76
  %168 = fmul contract double %65, %71
  %169 = fmul contract double %66, %69
  %170 = fmul contract double %67, %69
  %171 = fmul contract double %64, %71
  %172 = fmul contract double %66, %68
  %173 = fmul contract double %67, %68
  %174 = fmul contract double %64, %69
  %175 = fmul contract double %65, %68
  %176 = fmul contract double %69, %165
  %177 = fmul contract double %64, %70
  %178 = fmul contract double %64, %108
  %179 = fmul contract double %65, %126
  %180 = fadd contract double %179, %178
  %181 = fmul contract double %66, %140
  %182 = fadd contract double %181, %180
  %183 = fmul contract double %67, %153
  %184 = fadd contract double %183, %182
  %185 = tail call double @llvm.fabs.f64(double %184)
  %186 = fcmp contract olt double %185, 1.000000e-09
  br i1 %186, label %344, label %187

187:                                              ; preds = %63
  %188 = fmul contract double %70, %166
  %189 = fmul contract double %172, %73
  %190 = fmul contract double %174, %74
  %191 = fmul contract double %177, %73
  %192 = fsub contract double %190, %191
  %193 = fmul contract double %175, %74
  %194 = fsub contract double %192, %193
  %195 = fadd contract double %189, %194
  %196 = fadd contract double %188, %195
  %197 = fmul contract double %69, %161
  %198 = fsub contract double %196, %197
  %199 = fmul contract double %69, %162
  %200 = fmul contract double %175, %75
  %201 = fmul contract double %176, %75
  %202 = fmul contract double %171, %73
  %203 = fadd contract double %202, %201
  %204 = fadd contract double %200, %203
  %205 = fmul contract double %173, %73
  %206 = fsub contract double %204, %205
  %207 = fmul contract double %71, %166
  %208 = fsub contract double %206, %207
  %209 = fadd contract double %199, %208
  %210 = fmul contract double %71, %161
  %211 = fmul contract double %173, %74
  %212 = fmul contract double %177, %75
  %213 = fmul contract double %171, %74
  %214 = fsub contract double %212, %213
  %215 = fmul contract double %172, %75
  %216 = fsub contract double %214, %215
  %217 = fadd contract double %211, %216
  %218 = fadd contract double %210, %217
  %219 = fmul contract double %70, %162
  %220 = fsub contract double %218, %219
  %221 = fmul contract double %70, %156
  %222 = fmul contract double %70, %154
  %223 = fmul contract double %222, %75
  %224 = fmul contract double %168, %74
  %225 = fadd contract double %224, %223
  %226 = fmul contract double %169, %75
  %227 = fadd contract double %226, %225
  %228 = fmul contract double %170, %74
  %229 = fsub contract double %227, %228
  %230 = fmul contract double %71, %155
  %231 = fsub contract double %229, %230
  %232 = fadd contract double %221, %231
  %233 = fmul contract double %69, %163
  %234 = fmul contract double %175, %78
  %235 = fmul contract double %176, %78
  %236 = fmul contract double %177, %77
  %237 = fadd contract double %236, %235
  %238 = fadd contract double %234, %237
  %239 = fmul contract double %172, %77
  %240 = fsub contract double %238, %239
  %241 = fmul contract double %70, %167
  %242 = fsub contract double %240, %241
  %243 = fadd contract double %233, %242
  %244 = fmul contract double %71, %167
  %245 = fmul contract double %173, %77
  %246 = fmul contract double %174, %79
  %247 = fmul contract double %171, %77
  %248 = fsub contract double %246, %247
  %249 = fmul contract double %175, %79
  %250 = fsub contract double %248, %249
  %251 = fadd contract double %245, %250
  %252 = fadd contract double %244, %251
  %253 = fmul contract double %69, %164
  %254 = fsub contract double %252, %253
  %255 = fmul contract double %70, %164
  %256 = fmul contract double %172, %79
  %257 = fmul contract double %70, %165
  %258 = fmul contract double %257, %79
  %259 = fmul contract double %171, %78
  %260 = fadd contract double %259, %258
  %261 = fadd contract double %256, %260
  %262 = fmul contract double %173, %78
  %263 = fsub contract double %261, %262
  %264 = fmul contract double %71, %163
  %265 = fsub contract double %263, %264
  %266 = fadd contract double %255, %265
  %267 = fmul contract double %71, %157
  %268 = fmul contract double %65, %70
  %269 = fmul contract double %268, %79
  %270 = fmul contract double %168, %78
  %271 = fsub contract double %269, %270
  %272 = fmul contract double %169, %79
  %273 = fsub contract double %271, %272
  %274 = fmul contract double %170, %78
  %275 = fadd contract double %274, %273
  %276 = fadd contract double %267, %275
  %277 = fmul contract double %70, %158
  %278 = fsub contract double %276, %277
  %279 = fmul contract double %74, %167
  %280 = fmul contract double %161, %77
  %281 = fmul contract double %64, %73
  %282 = fmul contract double %281, %78
  %283 = fmul contract double %159, %77
  %284 = fsub contract double %282, %283
  %285 = fmul contract double %166, %78
  %286 = fsub contract double %284, %285
  %287 = fadd contract double %280, %286
  %288 = fadd contract double %279, %287
  %289 = fmul contract double %73, %163
  %290 = fsub contract double %288, %289
  %291 = fmul contract double %73, %164
  %292 = fmul contract double %166, %79
  %293 = fmul contract double %73, %165
  %294 = fmul contract double %293, %79
  %295 = fmul contract double %160, %77
  %296 = fadd contract double %295, %294
  %297 = fadd contract double %292, %296
  %298 = fmul contract double %162, %77
  %299 = fsub contract double %297, %298
  %300 = fmul contract double %75, %167
  %301 = fsub contract double %299, %300
  %302 = fadd contract double %291, %301
  %303 = fmul contract double %75, %163
  %304 = fmul contract double %162, %78
  %305 = fmul contract double %159, %79
  %306 = fmul contract double %160, %78
  %307 = fsub contract double %305, %306
  %308 = fmul contract double %161, %79
  %309 = fsub contract double %307, %308
  %310 = fadd contract double %304, %309
  %311 = fadd contract double %303, %310
  %312 = fmul contract double %74, %164
  %313 = fsub contract double %311, %312
  %314 = fmul contract double %74, %158
  %315 = fmul contract double %74, %154
  %316 = fmul contract double %315, %79
  %317 = fmul contract double %65, %75
  %318 = fmul contract double %317, %78
  %319 = fadd contract double %318, %316
  %320 = fmul contract double %155, %79
  %321 = fadd contract double %320, %319
  %322 = fmul contract double %156, %78
  %323 = fsub contract double %321, %322
  %324 = fmul contract double %75, %157
  %325 = fsub contract double %323, %324
  %326 = fadd contract double %314, %325
  %327 = fdiv contract double 1.000000e+00, %184
  %328 = fmul contract double %108, %327
  %329 = fmul contract double %326, %327
  %330 = fmul contract double %278, %327
  %331 = fmul contract double %232, %327
  %332 = fmul contract double %126, %327
  %333 = fmul contract double %313, %327
  %334 = fmul contract double %266, %327
  %335 = fmul contract double %220, %327
  %336 = fmul contract double %140, %327
  %337 = fmul contract double %302, %327
  %338 = fmul contract double %254, %327
  %339 = fmul contract double %209, %327
  %340 = fmul contract double %153, %327
  %341 = fmul contract double %290, %327
  %342 = fmul contract double %243, %327
  %343 = fmul contract double %198, %327
  br label %344

344:                                              ; preds = %63, %187
  %345 = phi double [ 0.000000e+00, %63 ], [ %328, %187 ]
  %346 = phi double [ 0.000000e+00, %63 ], [ %329, %187 ]
  %347 = phi double [ 0.000000e+00, %63 ], [ %330, %187 ]
  %348 = phi double [ 0.000000e+00, %63 ], [ %331, %187 ]
  %349 = phi double [ 0.000000e+00, %63 ], [ %332, %187 ]
  %350 = phi double [ 0.000000e+00, %63 ], [ %333, %187 ]
  %351 = phi double [ 0.000000e+00, %63 ], [ %334, %187 ]
  %352 = phi double [ 0.000000e+00, %63 ], [ %335, %187 ]
  %353 = phi double [ 0.000000e+00, %63 ], [ %336, %187 ]
  %354 = phi double [ 0.000000e+00, %63 ], [ %337, %187 ]
  %355 = phi double [ 0.000000e+00, %63 ], [ %338, %187 ]
  %356 = phi double [ 0.000000e+00, %63 ], [ %339, %187 ]
  %357 = phi double [ 0.000000e+00, %63 ], [ %340, %187 ]
  %358 = phi double [ 0.000000e+00, %63 ], [ %341, %187 ]
  %359 = phi double [ 0.000000e+00, %63 ], [ %342, %187 ]
  %360 = phi double [ 0.000000e+00, %63 ], [ %343, %187 ]
  %361 = fmul contract double %345, %80
  %362 = fadd contract double %361, 0.000000e+00
  %363 = fmul contract double %346, %81
  %364 = fadd contract double %362, %363
  %365 = fmul contract double %347, %82
  %366 = fadd contract double %364, %365
  %367 = fmul contract double %348, %83
  %368 = fadd contract double %366, %367
  %369 = fmul contract double %349, %80
  %370 = fadd contract double %369, 0.000000e+00
  %371 = fmul contract double %350, %81
  %372 = fadd contract double %370, %371
  %373 = fmul contract double %351, %82
  %374 = fadd contract double %372, %373
  %375 = fmul contract double %352, %83
  %376 = fadd contract double %374, %375
  %377 = fmul contract double %353, %80
  %378 = fadd contract double %377, 0.000000e+00
  %379 = fmul contract double %354, %81
  %380 = fadd contract double %378, %379
  %381 = fmul contract double %355, %82
  %382 = fadd contract double %380, %381
  %383 = fmul contract double %356, %83
  %384 = fadd contract double %382, %383
  %385 = fmul contract double %357, %80
  %386 = fadd contract double %385, 0.000000e+00
  %387 = fmul contract double %358, %81
  %388 = fadd contract double %386, %387
  %389 = fmul contract double %359, %82
  %390 = fadd contract double %388, %389
  %391 = fmul contract double %360, %83
  %392 = fadd contract double %390, %391
  %393 = fmul contract double %345, %84
  %394 = fadd contract double %393, 0.000000e+00
  %395 = fmul contract double %346, %85
  %396 = fadd contract double %394, %395
  %397 = fmul contract double %347, %86
  %398 = fadd contract double %396, %397
  %399 = fmul contract double %348, %87
  %400 = fadd contract double %398, %399
  %401 = fmul contract double %349, %84
  %402 = fadd contract double %401, 0.000000e+00
  %403 = fmul contract double %350, %85
  %404 = fadd contract double %402, %403
  %405 = fmul contract double %351, %86
  %406 = fadd contract double %404, %405
  %407 = fmul contract double %352, %87
  %408 = fadd contract double %406, %407
  %409 = fmul contract double %353, %84
  %410 = fadd contract double %409, 0.000000e+00
  %411 = fmul contract double %354, %85
  %412 = fadd contract double %410, %411
  %413 = fmul contract double %355, %86
  %414 = fadd contract double %412, %413
  %415 = fmul contract double %356, %87
  %416 = fadd contract double %414, %415
  %417 = fmul contract double %357, %84
  %418 = fadd contract double %417, 0.000000e+00
  %419 = fmul contract double %358, %85
  %420 = fadd contract double %418, %419
  %421 = fmul contract double %359, %86
  %422 = fadd contract double %420, %421
  %423 = fmul contract double %360, %87
  %424 = fadd contract double %422, %423
  %425 = fmul contract double %345, %88
  %426 = fadd contract double %425, 0.000000e+00
  %427 = fmul contract double %346, %89
  %428 = fadd contract double %426, %427
  %429 = fmul contract double %347, %90
  %430 = fadd contract double %428, %429
  %431 = fmul contract double %348, %91
  %432 = fadd contract double %430, %431
  %433 = fmul contract double %349, %88
  %434 = fadd contract double %433, 0.000000e+00
  %435 = fmul contract double %350, %89
  %436 = fadd contract double %434, %435
  %437 = fmul contract double %351, %90
  %438 = fadd contract double %436, %437
  %439 = fmul contract double %352, %91
  %440 = fadd contract double %438, %439
  %441 = fmul contract double %353, %88
  %442 = fadd contract double %441, 0.000000e+00
  %443 = fmul contract double %354, %89
  %444 = fadd contract double %442, %443
  %445 = fmul contract double %355, %90
  %446 = fadd contract double %444, %445
  %447 = fmul contract double %356, %91
  %448 = fadd contract double %446, %447
  %449 = fmul contract double %357, %88
  %450 = fadd contract double %449, 0.000000e+00
  %451 = fmul contract double %358, %89
  %452 = fadd contract double %450, %451
  %453 = fmul contract double %359, %90
  %454 = fadd contract double %452, %453
  %455 = fmul contract double %360, %91
  %456 = fadd contract double %454, %455
  %457 = mul nsw i32 %17, 12
  %458 = fptrunc double %368 to float
  %459 = sext i32 %457 to i64
  %460 = getelementptr inbounds float, float addrspace(1)* %2, i64 %459
  store float %458, float addrspace(1)* %460, align 4, !tbaa !7
  %461 = fptrunc double %376 to float
  %462 = or i32 %457, 1
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds float, float addrspace(1)* %2, i64 %463
  store float %461, float addrspace(1)* %464, align 4, !tbaa !7
  %465 = fptrunc double %384 to float
  %466 = or i32 %457, 2
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds float, float addrspace(1)* %2, i64 %467
  store float %465, float addrspace(1)* %468, align 4, !tbaa !7
  %469 = fptrunc double %392 to float
  %470 = or i32 %457, 3
  %471 = sext i32 %470 to i64
  %472 = getelementptr inbounds float, float addrspace(1)* %2, i64 %471
  store float %469, float addrspace(1)* %472, align 4, !tbaa !7
  %473 = add i32 %457, 4
  %474 = fptrunc double %400 to float
  %475 = sext i32 %473 to i64
  %476 = getelementptr inbounds float, float addrspace(1)* %2, i64 %475
  store float %474, float addrspace(1)* %476, align 4, !tbaa !7
  %477 = fptrunc double %408 to float
  %478 = add i32 %457, 5
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds float, float addrspace(1)* %2, i64 %479
  store float %477, float addrspace(1)* %480, align 4, !tbaa !7
  %481 = fptrunc double %416 to float
  %482 = add i32 %457, 6
  %483 = sext i32 %482 to i64
  %484 = getelementptr inbounds float, float addrspace(1)* %2, i64 %483
  store float %481, float addrspace(1)* %484, align 4, !tbaa !7
  %485 = fptrunc double %424 to float
  %486 = add i32 %457, 7
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds float, float addrspace(1)* %2, i64 %487
  store float %485, float addrspace(1)* %488, align 4, !tbaa !7
  %489 = add i32 %457, 8
  %490 = fptrunc double %432 to float
  %491 = sext i32 %489 to i64
  %492 = getelementptr inbounds float, float addrspace(1)* %2, i64 %491
  store float %490, float addrspace(1)* %492, align 4, !tbaa !7
  %493 = fptrunc double %440 to float
  %494 = add i32 %457, 9
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds float, float addrspace(1)* %2, i64 %495
  store float %493, float addrspace(1)* %496, align 4, !tbaa !7
  %497 = fptrunc double %448 to float
  %498 = add i32 %457, 10
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds float, float addrspace(1)* %2, i64 %499
  store float %497, float addrspace(1)* %500, align 4, !tbaa !7
  %501 = fptrunc double %456 to float
  %502 = add i32 %457, 11
  %503 = sext i32 %502 to i64
  %504 = getelementptr inbounds float, float addrspace(1)* %2, i64 %503
  store float %501, float addrspace(1)* %504, align 4, !tbaa !7
  br label %658

505:                                              ; preds = %627
  %506 = add i32 %58, 1
  %507 = icmp eq i32 %58, %6
  br i1 %507, label %63, label %29, !llvm.loop !11

508:                                              ; preds = %29, %627
  %509 = phi double [ %30, %29 ], [ %628, %627 ]
  %510 = phi double [ %31, %29 ], [ %629, %627 ]
  %511 = phi double [ %32, %29 ], [ %630, %627 ]
  %512 = phi double [ %33, %29 ], [ %631, %627 ]
  %513 = phi double [ %34, %29 ], [ %632, %627 ]
  %514 = phi double [ %35, %29 ], [ %633, %627 ]
  %515 = phi double [ %36, %29 ], [ %634, %627 ]
  %516 = phi double [ %37, %29 ], [ %635, %627 ]
  %517 = phi double [ %38, %29 ], [ %636, %627 ]
  %518 = phi double [ %39, %29 ], [ %637, %627 ]
  %519 = phi double [ %40, %29 ], [ %638, %627 ]
  %520 = phi double [ %41, %29 ], [ %639, %627 ]
  %521 = phi double [ %42, %29 ], [ %640, %627 ]
  %522 = phi double [ %43, %29 ], [ %641, %627 ]
  %523 = phi double [ %44, %29 ], [ %642, %627 ]
  %524 = phi double [ %45, %29 ], [ %643, %627 ]
  %525 = phi double [ %46, %29 ], [ %644, %627 ]
  %526 = phi double [ %47, %29 ], [ %645, %627 ]
  %527 = phi double [ %48, %29 ], [ %646, %627 ]
  %528 = phi double [ %49, %29 ], [ %647, %627 ]
  %529 = phi double [ %50, %29 ], [ %648, %627 ]
  %530 = phi double [ %51, %29 ], [ %649, %627 ]
  %531 = phi double [ %52, %29 ], [ %650, %627 ]
  %532 = phi double [ %53, %29 ], [ %651, %627 ]
  %533 = phi double [ %54, %29 ], [ %652, %627 ]
  %534 = phi double [ %55, %29 ], [ %653, %627 ]
  %535 = phi double [ %56, %29 ], [ %654, %627 ]
  %536 = phi double [ %57, %29 ], [ %655, %627 ]
  %537 = phi i32 [ %25, %29 ], [ %656, %627 ]
  %538 = add nsw i32 %537, %24
  %539 = add nsw i32 %538, %60
  %540 = icmp sgt i32 %538, -1
  br i1 %540, label %541, label %627

541:                                              ; preds = %508
  %542 = icmp slt i32 %538, %4
  %543 = select i1 %542, i1 %61, i1 false
  %544 = select i1 %543, i1 %62, i1 false
  br i1 %544, label %545, label %627

545:                                              ; preds = %541
  %546 = add nsw i32 %539, %28
  %547 = sext i32 %546 to i64
  %548 = getelementptr inbounds float, float addrspace(1)* %1, i64 %547
  %549 = load float, float addrspace(1)* %548, align 4, !tbaa !7, !amdgpu.noclobber !5
  %550 = fmul contract float %549, %549
  %551 = fpext float %550 to double
  %552 = fadd contract double %536, %551
  %553 = add nsw i32 %539, %8
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds float, float addrspace(1)* %1, i64 %554
  %556 = load float, float addrspace(1)* %555, align 4, !tbaa !7, !amdgpu.noclobber !5
  %557 = fmul contract float %549, %556
  %558 = fpext float %557 to double
  %559 = fadd contract double %535, %558
  %560 = sext i32 %539 to i64
  %561 = getelementptr inbounds float, float addrspace(1)* %1, i64 %560
  %562 = load float, float addrspace(1)* %561, align 4, !tbaa !7, !amdgpu.noclobber !5
  %563 = fmul contract float %549, %562
  %564 = fpext float %563 to double
  %565 = fadd contract double %534, %564
  %566 = fpext float %549 to double
  %567 = fadd contract double %533, %566
  %568 = fadd contract double %532, %558
  %569 = fmul contract float %556, %556
  %570 = fpext float %569 to double
  %571 = fadd contract double %531, %570
  %572 = fmul contract float %556, %562
  %573 = fpext float %572 to double
  %574 = fadd contract double %530, %573
  %575 = fpext float %556 to double
  %576 = fadd contract double %529, %575
  %577 = fadd contract double %528, %564
  %578 = fadd contract double %527, %573
  %579 = fmul contract float %562, %562
  %580 = fpext float %579 to double
  %581 = fadd contract double %526, %580
  %582 = fpext float %562 to double
  %583 = fadd contract double %525, %582
  %584 = fadd contract double %524, %566
  %585 = fadd contract double %523, %575
  %586 = fadd contract double %522, %582
  %587 = fadd contract double %521, 1.000000e+00
  %588 = getelementptr inbounds float, float addrspace(1)* %0, i64 %547
  %589 = load float, float addrspace(1)* %588, align 4, !tbaa !7, !amdgpu.noclobber !5
  %590 = fmul contract float %549, %589
  %591 = fpext float %590 to double
  %592 = fadd contract double %520, %591
  %593 = fmul contract float %556, %589
  %594 = fpext float %593 to double
  %595 = fadd contract double %519, %594
  %596 = fmul contract float %562, %589
  %597 = fpext float %596 to double
  %598 = fadd contract double %518, %597
  %599 = fpext float %589 to double
  %600 = fadd contract double %517, %599
  %601 = getelementptr inbounds float, float addrspace(1)* %0, i64 %554
  %602 = load float, float addrspace(1)* %601, align 4, !tbaa !7, !amdgpu.noclobber !5
  %603 = fmul contract float %549, %602
  %604 = fpext float %603 to double
  %605 = fadd contract double %516, %604
  %606 = fmul contract float %556, %602
  %607 = fpext float %606 to double
  %608 = fadd contract double %515, %607
  %609 = fmul contract float %562, %602
  %610 = fpext float %609 to double
  %611 = fadd contract double %514, %610
  %612 = fpext float %602 to double
  %613 = fadd contract double %513, %612
  %614 = getelementptr inbounds float, float addrspace(1)* %0, i64 %560
  %615 = load float, float addrspace(1)* %614, align 4, !tbaa !7, !amdgpu.noclobber !5
  %616 = fmul contract float %549, %615
  %617 = fpext float %616 to double
  %618 = fadd contract double %512, %617
  %619 = fmul contract float %556, %615
  %620 = fpext float %619 to double
  %621 = fadd contract double %511, %620
  %622 = fmul contract float %562, %615
  %623 = fpext float %622 to double
  %624 = fadd contract double %510, %623
  %625 = fpext float %615 to double
  %626 = fadd contract double %509, %625
  br label %627

627:                                              ; preds = %545, %541, %508
  %628 = phi double [ %626, %545 ], [ %509, %541 ], [ %509, %508 ]
  %629 = phi double [ %624, %545 ], [ %510, %541 ], [ %510, %508 ]
  %630 = phi double [ %621, %545 ], [ %511, %541 ], [ %511, %508 ]
  %631 = phi double [ %618, %545 ], [ %512, %541 ], [ %512, %508 ]
  %632 = phi double [ %613, %545 ], [ %513, %541 ], [ %513, %508 ]
  %633 = phi double [ %611, %545 ], [ %514, %541 ], [ %514, %508 ]
  %634 = phi double [ %608, %545 ], [ %515, %541 ], [ %515, %508 ]
  %635 = phi double [ %605, %545 ], [ %516, %541 ], [ %516, %508 ]
  %636 = phi double [ %600, %545 ], [ %517, %541 ], [ %517, %508 ]
  %637 = phi double [ %598, %545 ], [ %518, %541 ], [ %518, %508 ]
  %638 = phi double [ %595, %545 ], [ %519, %541 ], [ %519, %508 ]
  %639 = phi double [ %592, %545 ], [ %520, %541 ], [ %520, %508 ]
  %640 = phi double [ %587, %545 ], [ %521, %541 ], [ %521, %508 ]
  %641 = phi double [ %586, %545 ], [ %522, %541 ], [ %522, %508 ]
  %642 = phi double [ %585, %545 ], [ %523, %541 ], [ %523, %508 ]
  %643 = phi double [ %584, %545 ], [ %524, %541 ], [ %524, %508 ]
  %644 = phi double [ %583, %545 ], [ %525, %541 ], [ %525, %508 ]
  %645 = phi double [ %581, %545 ], [ %526, %541 ], [ %526, %508 ]
  %646 = phi double [ %578, %545 ], [ %527, %541 ], [ %527, %508 ]
  %647 = phi double [ %577, %545 ], [ %528, %541 ], [ %528, %508 ]
  %648 = phi double [ %576, %545 ], [ %529, %541 ], [ %529, %508 ]
  %649 = phi double [ %574, %545 ], [ %530, %541 ], [ %530, %508 ]
  %650 = phi double [ %571, %545 ], [ %531, %541 ], [ %531, %508 ]
  %651 = phi double [ %568, %545 ], [ %532, %541 ], [ %532, %508 ]
  %652 = phi double [ %567, %545 ], [ %533, %541 ], [ %533, %508 ]
  %653 = phi double [ %565, %545 ], [ %534, %541 ], [ %534, %508 ]
  %654 = phi double [ %559, %545 ], [ %535, %541 ], [ %535, %508 ]
  %655 = phi double [ %552, %545 ], [ %536, %541 ], [ %536, %508 ]
  %656 = add i32 %537, 1
  %657 = icmp eq i32 %537, %6
  br i1 %657, label %505, label %508, !llvm.loop !13

658:                                              ; preds = %344, %7
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #2

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{i16 1, i16 1025}
!5 = !{}
!6 = !{i32 0, i32 1024}
!7 = !{!8, !8, i64 0}
!8 = !{!"float", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C++ TBAA"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.mustprogress"}
!13 = distinct !{!13, !12}
