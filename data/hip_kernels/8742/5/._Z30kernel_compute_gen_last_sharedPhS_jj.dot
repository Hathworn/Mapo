digraph "CFG for '_Z30kernel_compute_gen_last_sharedPhS_jj' function" {
	label="CFG for '_Z30kernel_compute_gen_last_sharedPhS_jj' function";

	Node0x52c4920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = add nsw i32 %9, -2\l  %12 = mul i32 %11, %10\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = add i32 %3, -1\l  %16 = and i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %19 = add i32 %17, %18\l  %20 = add i32 %2, -1\l  %21 = and i32 %20, %19\l  %22 = mul i32 %21, %3\l  %23 = add i32 %16, %22\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %24\l  %26 = load i8, i8 addrspace(1)* %25, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %27 = zext i8 %26 to i32\l  %28 = getelementptr inbounds [3 x [130 x i32]], [3 x [130 x i32]]\l... addrspace(3)* @_ZZ30kernel_compute_gen_last_sharedPhS_jjE6shared, i32 0, i32\l... %18, i32 %13\l  store i32 %27, i32 addrspace(3)* %28, align 4, !tbaa !10\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %29 = icmp eq i32 %18, 1\l  %30 = icmp ne i32 %13, 0\l  %31 = select i1 %29, i1 %30, i1 false\l  %32 = icmp ult i32 %13, 129\l  %33 = select i1 %31, i1 %32, i1 false\l  br i1 %33, label %34, label %68\l|{<s0>T|<s1>F}}"];
	Node0x52c4920:s0 -> Node0x52c6a60;
	Node0x52c4920:s1 -> Node0x52c8c70;
	Node0x52c6a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%34:\l34:                                               \l  %35 = getelementptr [3 x [130 x i32]], [3 x [130 x i32]] addrspace(3)*\l... @_ZZ30kernel_compute_gen_last_sharedPhS_jjE6shared, i32 0, i32 2, i32 %13\l  %36 = load i32, i32 addrspace(3)* %35, align 4, !tbaa !10\l  %37 = getelementptr inbounds [3 x [130 x i32]], [3 x [130 x i32]]\l... addrspace(3)* @_ZZ30kernel_compute_gen_last_sharedPhS_jjE6shared, i32 0, i32\l... 0, i32 %13\l  %38 = load i32, i32 addrspace(3)* %37, align 4, !tbaa !10\l  %39 = add nsw i32 %38, %36\l  %40 = add nuw nsw i32 %13, 1\l  %41 = getelementptr inbounds [3 x [130 x i32]], [3 x [130 x i32]]\l... addrspace(3)* @_ZZ30kernel_compute_gen_last_sharedPhS_jjE6shared, i32 0, i32\l... 1, i32 %40\l  %42 = load i32, i32 addrspace(3)* %41, align 4, !tbaa !10\l  %43 = add nsw i32 %39, %42\l  %44 = add nsw i32 %13, -1\l  %45 = getelementptr inbounds [3 x [130 x i32]], [3 x [130 x i32]]\l... addrspace(3)* @_ZZ30kernel_compute_gen_last_sharedPhS_jjE6shared, i32 0, i32\l... 1, i32 %44\l  %46 = load i32, i32 addrspace(3)* %45, align 4, !tbaa !10\l  %47 = add nsw i32 %43, %46\l  %48 = getelementptr [3 x [130 x i32]], [3 x [130 x i32]] addrspace(3)*\l... @_ZZ30kernel_compute_gen_last_sharedPhS_jjE6shared, i32 0, i32 2, i32 %40\l  %49 = load i32, i32 addrspace(3)* %48, align 4, !tbaa !10\l  %50 = add nsw i32 %47, %49\l  %51 = getelementptr inbounds [3 x [130 x i32]], [3 x [130 x i32]]\l... addrspace(3)* @_ZZ30kernel_compute_gen_last_sharedPhS_jjE6shared, i32 0, i32\l... 0, i32 %44\l  %52 = load i32, i32 addrspace(3)* %51, align 4, !tbaa !10\l  %53 = add nsw i32 %50, %52\l  %54 = getelementptr inbounds [3 x [130 x i32]], [3 x [130 x i32]]\l... addrspace(3)* @_ZZ30kernel_compute_gen_last_sharedPhS_jjE6shared, i32 0, i32\l... 0, i32 %40\l  %55 = load i32, i32 addrspace(3)* %54, align 4, !tbaa !10\l  %56 = add nsw i32 %53, %55\l  %57 = getelementptr [3 x [130 x i32]], [3 x [130 x i32]] addrspace(3)*\l... @_ZZ30kernel_compute_gen_last_sharedPhS_jjE6shared, i32 0, i32 2, i32 %44\l  %58 = load i32, i32 addrspace(3)* %57, align 4, !tbaa !10\l  %59 = add nsw i32 %56, %58\l  %60 = and i32 %59, 255\l  %61 = icmp eq i32 %60, 3\l  %62 = icmp eq i32 %60, 2\l  %63 = icmp ne i8 %26, 0\l  %64 = select i1 %62, i1 %63, i1 false\l  %65 = select i1 %61, i1 true, i1 %64\l  %66 = zext i1 %65 to i8\l  %67 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %24\l  store i8 %66, i8 addrspace(1)* %67, align 1, !tbaa !7\l  br label %68\l}"];
	Node0x52c6a60 -> Node0x52c8c70;
	Node0x52c8c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  ret void\l}"];
}
