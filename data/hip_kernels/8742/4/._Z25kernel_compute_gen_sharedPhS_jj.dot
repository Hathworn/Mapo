digraph "CFG for '_Z25kernel_compute_gen_sharedPhS_jj' function" {
	label="CFG for '_Z25kernel_compute_gen_sharedPhS_jj' function";

	Node0x53e0e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = add i32 %3, -1\l  %15 = and i32 %13, %14\l  %16 = add i32 %15, -1\l  %17 = and i32 %16, %14\l  %18 = add i32 %15, 1\l  %19 = and i32 %18, %14\l  %20 = sub i32 %13, %15\l  %21 = sub i32 %20, %3\l  %22 = and i32 %21, %2\l  %23 = add i32 %20, %3\l  %24 = and i32 %23, %2\l  %25 = add i32 %22, %15\l  %26 = zext i32 %25 to i64\l  %27 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %26\l  %28 = load i8, i8 addrspace(1)* %27, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %29 = add nuw nsw i32 %12, 1\l  %30 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @shared, i32\l... 0, i32 %29\l  store i8 %28, i8 addrspace(3)* %30, align 1, !tbaa !7\l  %31 = zext i32 %13 to i64\l  %32 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %31\l  %33 = load i8, i8 addrspace(1)* %32, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %34 = add nuw nsw i32 %29, %10\l  %35 = add nuw nsw i32 %34, 2\l  %36 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @shared, i32\l... 0, i32 %35\l  store i8 %33, i8 addrspace(3)* %36, align 1, !tbaa !7\l  %37 = add i32 %24, %15\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %38\l  %40 = load i8, i8 addrspace(1)* %39, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %41 = shl nuw nsw i32 %10, 1\l  %42 = add nuw nsw i32 %12, 5\l  %43 = add nuw nsw i32 %42, %41\l  %44 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @shared, i32\l... 0, i32 %43\l  store i8 %40, i8 addrspace(3)* %44, align 1, !tbaa !7\l  %45 = icmp eq i32 %12, 0\l  br i1 %45, label %46, label %58\l|{<s0>T|<s1>F}}"];
	Node0x53e0e50:s0 -> Node0x53e5190;
	Node0x53e0e50:s1 -> Node0x53e5220;
	Node0x53e5190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%46:\l46:                                               \l  %47 = add i32 %22, %17\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %48\l  %50 = load i8, i8 addrspace(1)* %49, align 1, !tbaa !7, !amdgpu.noclobber !5\l  store i8 %50, i8 addrspace(3)* getelementptr inbounds ([0 x i8], [0 x i8]\l... addrspace(3)* @shared, i32 0, i32 0), align 1, !tbaa !7\l  %51 = add i32 %17, %20\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %52\l  %54 = load i8, i8 addrspace(1)* %53, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %55 = add nuw nsw i32 %10, 2\l  %56 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @shared, i32\l... 0, i32 %55\l  store i8 %54, i8 addrspace(3)* %56, align 1, !tbaa !7\l  %57 = add nuw nsw i32 %41, 4\l  br label %76\l}"];
	Node0x53e5190 -> Node0x53e5d60;
	Node0x53e5220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e36c5570",label="{%58:\l58:                                               \l  %59 = add nsw i32 %10, -1\l  %60 = icmp eq i32 %12, %59\l  br i1 %60, label %61, label %84\l|{<s0>T|<s1>F}}"];
	Node0x53e5220:s0 -> Node0x53e5f80;
	Node0x53e5220:s1 -> Node0x53e5fd0;
	Node0x53e5f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%61:\l61:                                               \l  %62 = add i32 %22, %19\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %63\l  %65 = load i8, i8 addrspace(1)* %64, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %66 = add nuw nsw i32 %10, 1\l  %67 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @shared, i32\l... 0, i32 %66\l  store i8 %65, i8 addrspace(3)* %67, align 1, !tbaa !7\l  %68 = add i32 %19, %20\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %69\l  %71 = load i8, i8 addrspace(1)* %70, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %72 = add nuw nsw i32 %41, 3\l  %73 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @shared, i32\l... 0, i32 %72\l  store i8 %71, i8 addrspace(3)* %73, align 1, !tbaa !7\l  %74 = mul nuw nsw i32 %10, 3\l  %75 = add nuw nsw i32 %74, 5\l  br label %76\l}"];
	Node0x53e5f80 -> Node0x53e5d60;
	Node0x53e5d60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%76:\l76:                                               \l  %77 = phi i32 [ %75, %61 ], [ %57, %46 ]\l  %78 = phi i32 [ %19, %61 ], [ %17, %46 ]\l  %79 = add i32 %24, %78\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %80\l  %82 = load i8, i8 addrspace(1)* %81, align 1, !tbaa !7\l  %83 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @shared, i32\l... 0, i32 %77\l  store i8 %82, i8 addrspace(3)* %83, align 1, !tbaa !7\l  br label %84\l}"];
	Node0x53e5d60 -> Node0x53e5fd0;
	Node0x53e5fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %85 = add nuw nsw i32 %34, 1\l  %86 = add nuw nsw i32 %34, 3\l  %87 = sub nuw nsw i32 -2, %10\l  %88 = add nuw nsw i32 %10, 2\l  %89 = add nsw i32 %85, %87\l  %90 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @shared, i32\l... 0, i32 %89\l  %91 = load i8, i8 addrspace(3)* %90, align 1, !tbaa !7\l  %92 = add nsw i32 %35, %87\l  %93 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @shared, i32\l... 0, i32 %92\l  %94 = load i8, i8 addrspace(3)* %93, align 1, !tbaa !7\l  %95 = add i8 %94, %91\l  %96 = add nsw i32 %86, %87\l  %97 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @shared, i32\l... 0, i32 %96\l  %98 = load i8, i8 addrspace(3)* %97, align 1, !tbaa !7\l  %99 = add i8 %95, %98\l  %100 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @shared, i32\l... 0, i32 %85\l  %101 = load i8, i8 addrspace(3)* %100, align 1, !tbaa !7\l  %102 = add i8 %99, %101\l  %103 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @shared, i32\l... 0, i32 %86\l  %104 = load i8, i8 addrspace(3)* %103, align 1, !tbaa !7\l  %105 = add i8 %102, %104\l  %106 = add nuw nsw i32 %85, %88\l  %107 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @shared, i32\l... 0, i32 %106\l  %108 = load i8, i8 addrspace(3)* %107, align 1, !tbaa !7\l  %109 = add i8 %105, %108\l  %110 = add nuw nsw i32 %35, %88\l  %111 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @shared, i32\l... 0, i32 %110\l  %112 = load i8, i8 addrspace(3)* %111, align 1, !tbaa !7\l  %113 = add i8 %109, %112\l  %114 = add nuw nsw i32 %86, %88\l  %115 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @shared, i32\l... 0, i32 %114\l  %116 = load i8, i8 addrspace(3)* %115, align 1, !tbaa !7\l  %117 = add i8 %113, %116\l  switch i8 %117, label %121 [\l    i8 3, label %122\l    i8 2, label %118\l  ]\l|{<s0>def|<s1>3|<s2>2}}"];
	Node0x53e5fd0:s0 -> Node0x53e8890;
	Node0x53e5fd0:s1 -> Node0x53e88e0;
	Node0x53e5fd0:s2 -> Node0x53e8960;
	Node0x53e8960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%118:\l118:                                              \l  %119 = load i8, i8 addrspace(3)* %36, align 1, !tbaa !7\l  %120 = icmp ne i8 %119, 0\l  br label %122\l}"];
	Node0x53e8960 -> Node0x53e88e0;
	Node0x53e8890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%121:\l121:                                              \l  br label %122\l}"];
	Node0x53e8890 -> Node0x53e88e0;
	Node0x53e88e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%122:\l122:                                              \l  %123 = phi i1 [ true, %84 ], [ %120, %118 ], [ false, %121 ]\l  %124 = zext i1 %123 to i8\l  %125 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %31\l  store i8 %124, i8 addrspace(1)* %125, align 1, !tbaa !7\l  ret void\l}"];
}
