digraph "CFG for '_Z30kernel_compute_gen_multiblocksPhS_jj' function" {
	label="CFG for '_Z30kernel_compute_gen_multiblocksPhS_jj' function";

	Node0x48808c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = add i32 %3, -1\l  %15 = and i32 %13, %14\l  %16 = add i32 %15, -1\l  %17 = and i32 %16, %14\l  %18 = add i32 %15, 1\l  %19 = and i32 %18, %14\l  %20 = sub i32 %13, %15\l  %21 = sub i32 %20, %3\l  %22 = and i32 %21, %2\l  %23 = add i32 %20, %3\l  %24 = and i32 %23, %2\l  %25 = add i32 %22, %17\l  %26 = zext i32 %25 to i64\l  %27 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %26\l  %28 = load i8, i8 addrspace(1)* %27, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %29 = add i32 %22, %15\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %30\l  %32 = load i8, i8 addrspace(1)* %31, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %33 = add i8 %32, %28\l  %34 = add i32 %22, %19\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %35\l  %37 = load i8, i8 addrspace(1)* %36, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %38 = add i8 %33, %37\l  %39 = add i32 %17, %20\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %40\l  %42 = load i8, i8 addrspace(1)* %41, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %43 = add i8 %38, %42\l  %44 = add i32 %19, %20\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %45\l  %47 = load i8, i8 addrspace(1)* %46, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %48 = add i8 %43, %47\l  %49 = add i32 %24, %17\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %50\l  %52 = load i8, i8 addrspace(1)* %51, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %53 = add i8 %48, %52\l  %54 = add i32 %24, %15\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %55\l  %57 = load i8, i8 addrspace(1)* %56, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %58 = add i8 %53, %57\l  %59 = add i32 %24, %19\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %60\l  %62 = load i8, i8 addrspace(1)* %61, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %63 = add i8 %58, %62\l  switch i8 %63, label %69 [\l    i8 3, label %70\l    i8 2, label %64\l  ]\l|{<s0>def|<s1>3|<s2>2}}"];
	Node0x48808c0:s0 -> Node0x48853b0;
	Node0x48808c0:s1 -> Node0x4885440;
	Node0x48808c0:s2 -> Node0x4885500;
	Node0x4885500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%64:\l64:                                               \l  %65 = zext i32 %13 to i64\l  %66 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %65\l  %67 = load i8, i8 addrspace(1)* %66, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %68 = icmp ne i8 %67, 0\l  br label %70\l}"];
	Node0x4885500 -> Node0x4885440;
	Node0x48853b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%69:\l69:                                               \l  br label %70\l}"];
	Node0x48853b0 -> Node0x4885440;
	Node0x4885440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = phi i1 [ true, %4 ], [ %68, %64 ], [ false, %69 ]\l  %72 = zext i1 %71 to i8\l  %73 = zext i32 %13 to i64\l  %74 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %73\l  store i8 %72, i8 addrspace(1)* %74, align 1, !tbaa !7\l  ret void\l}"];
}
