digraph "CFG for '_Z20backward_bias_kernelPfS_iii' function" {
	label="CFG for '_Z20backward_bias_kernelPfS_iii' function";

	Node0x4690a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = icmp sgt i32 %2, 0\l  br i1 %8, label %9, label %144\l|{<s0>T|<s1>F}}"];
	Node0x4690a50:s0 -> Node0x4690180;
	Node0x4690a50:s1 -> Node0x4692130;
	Node0x4690180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%9:\l9:                                                \l  %10 = icmp sgt i32 %4, 0\l  %11 = add i32 %4, -1\l  %12 = lshr i32 %11, 9\l  %13 = add nuw nsw i32 %12, 1\l  %14 = and i32 %13, 7\l  %15 = icmp ult i32 %4, 3585\l  %16 = and i32 %13, -8\l  %17 = icmp eq i32 %14, 0\l  br label %18\l}"];
	Node0x4690180 -> Node0x4692890;
	Node0x4692890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%18:\l18:                                               \l  %19 = phi float [ 0.000000e+00, %9 ], [ %141, %140 ]\l  %20 = phi i32 [ 0, %9 ], [ %142, %140 ]\l  br i1 %10, label %21, label %140\l|{<s0>T|<s1>F}}"];
	Node0x4692890:s0 -> Node0x4693630;
	Node0x4692890:s1 -> Node0x46933d0;
	Node0x4693630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%21:\l21:                                               \l  %22 = mul nsw i32 %20, %3\l  %23 = add nsw i32 %22, %6\l  %24 = mul nsw i32 %23, %4\l  br i1 %15, label %119, label %25\l|{<s0>T|<s1>F}}"];
	Node0x4693630:s0 -> Node0x4693920;
	Node0x4693630:s1 -> Node0x4693970;
	Node0x4693970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%25:\l25:                                               \l  %26 = phi i32 [ %116, %113 ], [ 0, %21 ]\l  %27 = phi float [ %115, %113 ], [ %19, %21 ]\l  %28 = phi i32 [ %117, %113 ], [ 0, %21 ]\l  %29 = or i32 %26, %7\l  %30 = icmp slt i32 %29, %4\l  br i1 %30, label %31, label %36\l|{<s0>T|<s1>F}}"];
	Node0x4693970:s0 -> Node0x4693f80;
	Node0x4693970:s1 -> Node0x4694010;
	Node0x4693f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%31:\l31:                                               \l  %32 = add nsw i32 %29, %24\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %36\l}"];
	Node0x4693f80 -> Node0x4694010;
	Node0x4694010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%36:\l36:                                               \l  %37 = phi contract float [ %35, %31 ], [ 0.000000e+00, %25 ]\l  %38 = fadd contract float %27, %37\l  %39 = or i32 %26, 512\l  %40 = add nuw nsw i32 %39, %7\l  %41 = icmp slt i32 %40, %4\l  br i1 %41, label %42, label %47\l|{<s0>T|<s1>F}}"];
	Node0x4694010:s0 -> Node0x4694ab0;
	Node0x4694010:s1 -> Node0x4694b00;
	Node0x4694ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%42:\l42:                                               \l  %43 = add nsw i32 %40, %24\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %47\l}"];
	Node0x4694ab0 -> Node0x4694b00;
	Node0x4694b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%47:\l47:                                               \l  %48 = phi contract float [ %46, %42 ], [ 0.000000e+00, %36 ]\l  %49 = fadd contract float %38, %48\l  %50 = or i32 %26, %7\l  %51 = or i32 %50, 1024\l  %52 = icmp slt i32 %51, %4\l  br i1 %52, label %53, label %58\l|{<s0>T|<s1>F}}"];
	Node0x4694b00:s0 -> Node0x4695e00;
	Node0x4694b00:s1 -> Node0x4695e50;
	Node0x4695e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%53:\l53:                                               \l  %54 = add nsw i32 %51, %24\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %58\l}"];
	Node0x4695e00 -> Node0x4695e50;
	Node0x4695e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%58:\l58:                                               \l  %59 = phi contract float [ %57, %53 ], [ 0.000000e+00, %47 ]\l  %60 = fadd contract float %49, %59\l  %61 = or i32 %26, 1536\l  %62 = add nuw nsw i32 %61, %7\l  %63 = icmp slt i32 %62, %4\l  br i1 %63, label %64, label %69\l|{<s0>T|<s1>F}}"];
	Node0x4695e50:s0 -> Node0x4696530;
	Node0x4695e50:s1 -> Node0x4696580;
	Node0x4696530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%64:\l64:                                               \l  %65 = add nsw i32 %62, %24\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %1, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %69\l}"];
	Node0x4696530 -> Node0x4696580;
	Node0x4696580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%69:\l69:                                               \l  %70 = phi contract float [ %68, %64 ], [ 0.000000e+00, %58 ]\l  %71 = fadd contract float %60, %70\l  %72 = or i32 %26, %7\l  %73 = or i32 %72, 2048\l  %74 = icmp slt i32 %73, %4\l  br i1 %74, label %75, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4696580:s0 -> Node0x4696e60;
	Node0x4696580:s1 -> Node0x4696eb0;
	Node0x4696e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%75:\l75:                                               \l  %76 = add nsw i32 %73, %24\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %80\l}"];
	Node0x4696e60 -> Node0x4696eb0;
	Node0x4696eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%80:\l80:                                               \l  %81 = phi contract float [ %79, %75 ], [ 0.000000e+00, %69 ]\l  %82 = fadd contract float %71, %81\l  %83 = or i32 %26, 2560\l  %84 = add nuw nsw i32 %83, %7\l  %85 = icmp slt i32 %84, %4\l  br i1 %85, label %86, label %91\l|{<s0>T|<s1>F}}"];
	Node0x4696eb0:s0 -> Node0x4697590;
	Node0x4696eb0:s1 -> Node0x46975e0;
	Node0x4697590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%86:\l86:                                               \l  %87 = add nsw i32 %84, %24\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %1, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %91\l}"];
	Node0x4697590 -> Node0x46975e0;
	Node0x46975e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%91:\l91:                                               \l  %92 = phi contract float [ %90, %86 ], [ 0.000000e+00, %80 ]\l  %93 = fadd contract float %82, %92\l  %94 = or i32 %26, %7\l  %95 = or i32 %94, 3072\l  %96 = icmp slt i32 %95, %4\l  br i1 %96, label %97, label %102\l|{<s0>T|<s1>F}}"];
	Node0x46975e0:s0 -> Node0x4697cc0;
	Node0x46975e0:s1 -> Node0x4697d10;
	Node0x4697cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%97:\l97:                                               \l  %98 = add nsw i32 %95, %24\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %1, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %102\l}"];
	Node0x4697cc0 -> Node0x4697d10;
	Node0x4697d10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%102:\l102:                                              \l  %103 = phi contract float [ %101, %97 ], [ 0.000000e+00, %91 ]\l  %104 = fadd contract float %93, %103\l  %105 = or i32 %26, 3584\l  %106 = add nuw nsw i32 %105, %7\l  %107 = icmp slt i32 %106, %4\l  br i1 %107, label %108, label %113\l|{<s0>T|<s1>F}}"];
	Node0x4697d10:s0 -> Node0x46983f0;
	Node0x4697d10:s1 -> Node0x4693ae0;
	Node0x46983f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%108:\l108:                                              \l  %109 = add nsw i32 %106, %24\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %1, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %113\l}"];
	Node0x46983f0 -> Node0x4693ae0;
	Node0x4693ae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%113:\l113:                                              \l  %114 = phi contract float [ %112, %108 ], [ 0.000000e+00, %102 ]\l  %115 = fadd contract float %104, %114\l  %116 = add nuw nsw i32 %26, 4096\l  %117 = add i32 %28, 8\l  %118 = icmp eq i32 %117, %16\l  br i1 %118, label %119, label %25, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4693ae0:s0 -> Node0x4693920;
	Node0x4693ae0:s1 -> Node0x4693970;
	Node0x4693920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%119:\l119:                                              \l  %120 = phi float [ undef, %21 ], [ %115, %113 ]\l  %121 = phi i32 [ 0, %21 ], [ %116, %113 ]\l  %122 = phi float [ %19, %21 ], [ %115, %113 ]\l  br i1 %17, label %140, label %123\l|{<s0>T|<s1>F}}"];
	Node0x4693920:s0 -> Node0x46933d0;
	Node0x4693920:s1 -> Node0x4698dd0;
	Node0x4698dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%123:\l123:                                              \l  %124 = phi i32 [ %137, %134 ], [ %121, %119 ]\l  %125 = phi float [ %136, %134 ], [ %122, %119 ]\l  %126 = phi i32 [ %138, %134 ], [ 0, %119 ]\l  %127 = add nuw nsw i32 %124, %7\l  %128 = icmp slt i32 %127, %4\l  br i1 %128, label %129, label %134\l|{<s0>T|<s1>F}}"];
	Node0x4698dd0:s0 -> Node0x46966c0;
	Node0x4698dd0:s1 -> Node0x4698ed0;
	Node0x46966c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%129:\l129:                                              \l  %130 = add nsw i32 %127, %24\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %1, i64 %131\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %134\l}"];
	Node0x46966c0 -> Node0x4698ed0;
	Node0x4698ed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%134:\l134:                                              \l  %135 = phi contract float [ %133, %129 ], [ 0.000000e+00, %123 ]\l  %136 = fadd contract float %125, %135\l  %137 = add nuw nsw i32 %124, 512\l  %138 = add i32 %126, 1\l  %139 = icmp eq i32 %138, %14\l  br i1 %139, label %140, label %123, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4698ed0:s0 -> Node0x46933d0;
	Node0x4698ed0:s1 -> Node0x4698dd0;
	Node0x46933d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%140:\l140:                                              \l  %141 = phi float [ %19, %18 ], [ %120, %119 ], [ %136, %134 ]\l  %142 = add nuw nsw i32 %20, 1\l  %143 = icmp eq i32 %142, %2\l  br i1 %143, label %144, label %18, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x46933d0:s0 -> Node0x4692130;
	Node0x46933d0:s1 -> Node0x4692890;
	Node0x4692130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%144:\l144:                                              \l  %145 = phi float [ 0.000000e+00, %5 ], [ %141, %140 ]\l  %146 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %7\l  store float %145, float addrspace(3)* %146, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %147 = icmp eq i32 %7, 0\l  br i1 %147, label %148, label %221\l|{<s0>T|<s1>F}}"];
	Node0x4692130:s0 -> Node0x469a730;
	Node0x4692130:s1 -> Node0x469a780;
	Node0x469a730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%148:\l148:                                              \l  %149 = sext i32 %6 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %0, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !5\l  br label %152\l}"];
	Node0x469a730 -> Node0x469aa00;
	Node0x469aa00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%152:\l152:                                              \l  %153 = phi i32 [ 0, %148 ], [ %218, %152 ]\l  %154 = phi float [ %151, %148 ], [ %217, %152 ]\l  %155 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %153\l  %156 = load float, float addrspace(3)* %155, align 16, !tbaa !5\l  %157 = fadd contract float %156, %154\l  %158 = or i32 %153, 1\l  %159 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %158\l  %160 = load float, float addrspace(3)* %159, align 4, !tbaa !5\l  %161 = fadd contract float %160, %157\l  %162 = or i32 %153, 2\l  %163 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %162\l  %164 = load float, float addrspace(3)* %163, align 8, !tbaa !5\l  %165 = fadd contract float %164, %161\l  %166 = or i32 %153, 3\l  %167 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %166\l  %168 = load float, float addrspace(3)* %167, align 4, !tbaa !5\l  %169 = fadd contract float %168, %165\l  %170 = or i32 %153, 4\l  %171 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %170\l  %172 = load float, float addrspace(3)* %171, align 16, !tbaa !5\l  %173 = fadd contract float %172, %169\l  %174 = or i32 %153, 5\l  %175 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %174\l  %176 = load float, float addrspace(3)* %175, align 4, !tbaa !5\l  %177 = fadd contract float %176, %173\l  %178 = or i32 %153, 6\l  %179 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %178\l  %180 = load float, float addrspace(3)* %179, align 8, !tbaa !5\l  %181 = fadd contract float %180, %177\l  %182 = or i32 %153, 7\l  %183 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %182\l  %184 = load float, float addrspace(3)* %183, align 4, !tbaa !5\l  %185 = fadd contract float %184, %181\l  %186 = or i32 %153, 8\l  %187 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %186\l  %188 = load float, float addrspace(3)* %187, align 16, !tbaa !5\l  %189 = fadd contract float %188, %185\l  %190 = or i32 %153, 9\l  %191 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %190\l  %192 = load float, float addrspace(3)* %191, align 4, !tbaa !5\l  %193 = fadd contract float %192, %189\l  %194 = or i32 %153, 10\l  %195 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %194\l  %196 = load float, float addrspace(3)* %195, align 8, !tbaa !5\l  %197 = fadd contract float %196, %193\l  %198 = or i32 %153, 11\l  %199 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %198\l  %200 = load float, float addrspace(3)* %199, align 4, !tbaa !5\l  %201 = fadd contract float %200, %197\l  %202 = or i32 %153, 12\l  %203 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %202\l  %204 = load float, float addrspace(3)* %203, align 16, !tbaa !5\l  %205 = fadd contract float %204, %201\l  %206 = or i32 %153, 13\l  %207 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %206\l  %208 = load float, float addrspace(3)* %207, align 4, !tbaa !5\l  %209 = fadd contract float %208, %205\l  %210 = or i32 %153, 14\l  %211 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %210\l  %212 = load float, float addrspace(3)* %211, align 8, !tbaa !5\l  %213 = fadd contract float %212, %209\l  %214 = or i32 %153, 15\l  %215 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20backward_bias_kernelPfS_iiiE4part, i32 0, i32 %214\l  %216 = load float, float addrspace(3)* %215, align 4, !tbaa !5\l  %217 = fadd contract float %216, %213\l  %218 = add nuw nsw i32 %153, 16\l  %219 = icmp eq i32 %218, 512\l  br i1 %219, label %220, label %152, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x469aa00:s0 -> Node0x469acb0;
	Node0x469aa00:s1 -> Node0x469aa00;
	Node0x469acb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%220:\l220:                                              \l  store float %217, float addrspace(1)* %150, align 4, !tbaa !5\l  br label %221\l}"];
	Node0x469acb0 -> Node0x469a780;
	Node0x469a780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%221:\l221:                                              \l  ret void\l}"];
}
