digraph "CFG for '_Z28PoissonImageCloningIterationPKfS0_S0_Pfii' function" {
	label="CFG for '_Z28PoissonImageCloningIterationPKfS0_S0_Pfii' function";

	Node0x6142560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = mul nsw i32 %15, %4\l  %25 = add nsw i32 %24, %23\l  %26 = icmp slt i32 %15, %5\l  %27 = icmp slt i32 %23, %4\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %175\l|{<s0>T|<s1>F}}"];
	Node0x6142560:s0 -> Node0x6146140;
	Node0x6142560:s1 -> Node0x61461d0;
	Node0x6146140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%29:\l29:                                               \l  %30 = sext i32 %25 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %33 = fcmp contract ogt float %32, 1.270000e+02\l  br i1 %33, label %34, label %175\l|{<s0>T|<s1>F}}"];
	Node0x6146140:s0 -> Node0x6147260;
	Node0x6146140:s1 -> Node0x61461d0;
	Node0x6147260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%34:\l34:                                               \l  %35 = icmp eq i32 %15, 0\l  %36 = icmp eq i32 %23, 0\l  %37 = add nsw i32 %5, -1\l  %38 = icmp eq i32 %15, %37\l  %39 = add nsw i32 %4, -1\l  %40 = icmp ne i32 %23, %39\l  %41 = select i1 %35, i32 0, i32 %4\l  %42 = sub nsw i32 %25, %41\l  %43 = add nsw i32 %25, -1\l  %44 = select i1 %36, i32 %24, i32 %43\l  %45 = select i1 %38, i32 0, i32 %4\l  %46 = add nsw i32 %25, %45\l  %47 = zext i1 %40 to i32\l  %48 = add nsw i32 %25, %47\l  br i1 %35, label %54, label %49\l|{<s0>T|<s1>F}}"];
	Node0x6147260:s0 -> Node0x6147bb0;
	Node0x6147260:s1 -> Node0x6147c00;
	Node0x6147c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%49:\l49:                                               \l  %50 = sext i32 %42 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %1, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %53 = fcmp contract ole float %52, 1.270000e+02\l  br label %54\l}"];
	Node0x6147c00 -> Node0x6147bb0;
	Node0x6147bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%54:\l54:                                               \l  %55 = phi i1 [ %53, %49 ], [ true, %34 ]\l  br i1 %36, label %61, label %56\l|{<s0>T|<s1>F}}"];
	Node0x6147bb0:s0 -> Node0x61486b0;
	Node0x6147bb0:s1 -> Node0x6148700;
	Node0x6148700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%56:\l56:                                               \l  %57 = sext i32 %44 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %60 = fcmp contract ole float %59, 1.270000e+02\l  br label %61\l}"];
	Node0x6148700 -> Node0x61486b0;
	Node0x61486b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%61:\l61:                                               \l  %62 = phi i1 [ %60, %56 ], [ true, %54 ]\l  br i1 %38, label %68, label %63\l|{<s0>T|<s1>F}}"];
	Node0x61486b0:s0 -> Node0x6148ba0;
	Node0x61486b0:s1 -> Node0x6148bf0;
	Node0x6148bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%63:\l63:                                               \l  %64 = sext i32 %46 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %67 = fcmp contract ole float %66, 1.270000e+02\l  br label %68\l}"];
	Node0x6148bf0 -> Node0x6148ba0;
	Node0x6148ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%68:\l68:                                               \l  %69 = phi i1 [ %67, %63 ], [ true, %61 ]\l  br i1 %40, label %70, label %75\l|{<s0>T|<s1>F}}"];
	Node0x6148ba0:s0 -> Node0x6149260;
	Node0x6148ba0:s1 -> Node0x61492b0;
	Node0x6149260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%70:\l70:                                               \l  %71 = sext i32 %48 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %74 = fcmp contract ole float %73, 1.270000e+02\l  br label %75\l}"];
	Node0x6149260 -> Node0x61492b0;
	Node0x61492b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%75:\l75:                                               \l  %76 = phi i1 [ %74, %70 ], [ true, %68 ]\l  %77 = mul nsw i32 %25, 3\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %81 = getelementptr inbounds float, float addrspace(1)* %3, i64 %78\l  store float %80, float addrspace(1)* %81, align 4, !tbaa !7\l  %82 = add nsw i32 %77, 1\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !7\l  %86 = getelementptr inbounds float, float addrspace(1)* %3, i64 %83\l  store float %85, float addrspace(1)* %86, align 4, !tbaa !7\l  %87 = add nsw i32 %77, 2\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !7\l  %91 = getelementptr inbounds float, float addrspace(1)* %3, i64 %88\l  store float %90, float addrspace(1)* %91, align 4, !tbaa !7\l  br i1 %55, label %108, label %92\l|{<s0>T|<s1>F}}"];
	Node0x61492b0:s0 -> Node0x614a170;
	Node0x61492b0:s1 -> Node0x614a200;
	Node0x614a200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%92:\l92:                                               \l  %93 = mul nsw i32 %42, 3\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %2, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7\l  %97 = fadd contract float %80, %96\l  store float %97, float addrspace(1)* %81, align 4, !tbaa !7\l  %98 = add nsw i32 %93, 1\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %2, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7\l  %102 = fadd contract float %85, %101\l  store float %102, float addrspace(1)* %86, align 4, !tbaa !7\l  %103 = add nsw i32 %93, 2\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %2, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7\l  %107 = fadd contract float %90, %106\l  store float %107, float addrspace(1)* %91, align 4, !tbaa !7\l  br label %108\l}"];
	Node0x614a200 -> Node0x614a170;
	Node0x614a170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%108:\l108:                                              \l  %109 = phi float [ %107, %92 ], [ %90, %75 ]\l  %110 = phi float [ %102, %92 ], [ %85, %75 ]\l  %111 = phi float [ %97, %92 ], [ %80, %75 ]\l  br i1 %62, label %128, label %112\l|{<s0>T|<s1>F}}"];
	Node0x614a170:s0 -> Node0x614af50;
	Node0x614a170:s1 -> Node0x614afa0;
	Node0x614afa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%112:\l112:                                              \l  %113 = mul nsw i32 %44, 3\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %2, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7\l  %117 = fadd contract float %116, %111\l  store float %117, float addrspace(1)* %81, align 4, !tbaa !7\l  %118 = add nsw i32 %113, 1\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %2, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7\l  %122 = fadd contract float %121, %110\l  store float %122, float addrspace(1)* %86, align 4, !tbaa !7\l  %123 = add nsw i32 %113, 2\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %2, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7\l  %127 = fadd contract float %126, %109\l  store float %127, float addrspace(1)* %91, align 4, !tbaa !7\l  br label %128\l}"];
	Node0x614afa0 -> Node0x614af50;
	Node0x614af50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%128:\l128:                                              \l  %129 = phi float [ %127, %112 ], [ %109, %108 ]\l  %130 = phi float [ %122, %112 ], [ %110, %108 ]\l  %131 = phi float [ %117, %112 ], [ %111, %108 ]\l  br i1 %69, label %148, label %132\l|{<s0>T|<s1>F}}"];
	Node0x614af50:s0 -> Node0x6148fb0;
	Node0x614af50:s1 -> Node0x6149000;
	Node0x6149000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%132:\l132:                                              \l  %133 = mul nsw i32 %46, 3\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %2, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !7\l  %137 = fadd contract float %136, %131\l  store float %137, float addrspace(1)* %81, align 4, !tbaa !7\l  %138 = add nsw i32 %133, 1\l  %139 = sext i32 %138 to i64\l  %140 = getelementptr inbounds float, float addrspace(1)* %2, i64 %139\l  %141 = load float, float addrspace(1)* %140, align 4, !tbaa !7\l  %142 = fadd contract float %141, %130\l  store float %142, float addrspace(1)* %86, align 4, !tbaa !7\l  %143 = add nsw i32 %133, 2\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %2, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !7\l  %147 = fadd contract float %146, %129\l  store float %147, float addrspace(1)* %91, align 4, !tbaa !7\l  br label %148\l}"];
	Node0x6149000 -> Node0x6148fb0;
	Node0x6148fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%148:\l148:                                              \l  %149 = phi float [ %147, %132 ], [ %129, %128 ]\l  %150 = phi float [ %142, %132 ], [ %130, %128 ]\l  %151 = phi float [ %137, %132 ], [ %131, %128 ]\l  br i1 %76, label %168, label %152\l|{<s0>T|<s1>F}}"];
	Node0x6148fb0:s0 -> Node0x614ce30;
	Node0x6148fb0:s1 -> Node0x614ce80;
	Node0x614ce80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%152:\l152:                                              \l  %153 = mul nsw i32 %48, 3\l  %154 = sext i32 %153 to i64\l  %155 = getelementptr inbounds float, float addrspace(1)* %2, i64 %154\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !7\l  %157 = fadd contract float %156, %151\l  store float %157, float addrspace(1)* %81, align 4, !tbaa !7\l  %158 = add nsw i32 %153, 1\l  %159 = sext i32 %158 to i64\l  %160 = getelementptr inbounds float, float addrspace(1)* %2, i64 %159\l  %161 = load float, float addrspace(1)* %160, align 4, !tbaa !7\l  %162 = fadd contract float %161, %150\l  store float %162, float addrspace(1)* %86, align 4, !tbaa !7\l  %163 = add nsw i32 %153, 2\l  %164 = sext i32 %163 to i64\l  %165 = getelementptr inbounds float, float addrspace(1)* %2, i64 %164\l  %166 = load float, float addrspace(1)* %165, align 4, !tbaa !7\l  %167 = fadd contract float %166, %149\l  store float %167, float addrspace(1)* %91, align 4, !tbaa !7\l  br label %168\l}"];
	Node0x614ce80 -> Node0x614ce30;
	Node0x614ce30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%168:\l168:                                              \l  %169 = phi float [ %167, %152 ], [ %149, %148 ]\l  %170 = phi float [ %162, %152 ], [ %150, %148 ]\l  %171 = phi float [ %157, %152 ], [ %151, %148 ]\l  %172 = fmul contract float %171, 2.500000e-01\l  store float %172, float addrspace(1)* %81, align 4, !tbaa !7\l  %173 = fmul contract float %170, 2.500000e-01\l  store float %173, float addrspace(1)* %86, align 4, !tbaa !7\l  %174 = fmul contract float %169, 2.500000e-01\l  store float %174, float addrspace(1)* %91, align 4, !tbaa !7\l  br label %175\l}"];
	Node0x614ce30 -> Node0x61461d0;
	Node0x61461d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%175:\l175:                                              \l  ret void\l}"];
}
