digraph "CFG for '_Z8mAddDripPfiif' function" {
	label="CFG for '_Z8mAddDripPfiif' function";

	Node0x62c9640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = sub nsw i32 %6, %1\l  %8 = mul nsw i32 %7, %7\l  %9 = sitofp i32 %8 to float\l  %10 = sub nsw i32 %5, %2\l  %11 = mul nsw i32 %10, %10\l  %12 = sitofp i32 %11 to float\l  %13 = fadd contract float %9, %12\l  %14 = fcmp olt float %13, 0x39F0000000000000\l  %15 = select i1 %14, float 0x41F0000000000000, float 1.000000e+00\l  %16 = fmul float %13, %15\l  %17 = tail call float @llvm.sqrt.f32(float %16)\l  %18 = bitcast float %17 to i32\l  %19 = add nsw i32 %18, -1\l  %20 = bitcast i32 %19 to float\l  %21 = add nsw i32 %18, 1\l  %22 = bitcast i32 %21 to float\l  %23 = tail call i1 @llvm.amdgcn.class.f32(float %16, i32 608)\l  %24 = select i1 %14, float 0x3EF0000000000000, float 1.000000e+00\l  %25 = fneg float %22\l  %26 = tail call float @llvm.fma.f32(float %25, float %17, float %16)\l  %27 = fcmp ogt float %26, 0.000000e+00\l  %28 = fneg float %20\l  %29 = tail call float @llvm.fma.f32(float %28, float %17, float %16)\l  %30 = fcmp ole float %29, 0.000000e+00\l  %31 = select i1 %30, float %20, float %17\l  %32 = select i1 %27, float %22, float %31\l  %33 = fmul float %24, %32\l  %34 = select i1 %23, float %16, float %33\l  %35 = fcmp contract olt float %34, %3\l  br i1 %35, label %36, label %48\l|{<s0>T|<s1>F}}"];
	Node0x62c9640:s0 -> Node0x62cb700;
	Node0x62c9640:s1 -> Node0x62cd020;
	Node0x62cb700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%36:\l36:                                               \l  %37 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %38 = getelementptr i8, i8 addrspace(4)* %37, i64 4\l  %39 = bitcast i8 addrspace(4)* %38 to i16 addrspace(4)*\l  %40 = load i16, i16 addrspace(4)* %39, align 4, !range !5, !invariant.load !6\l  %41 = zext i16 %40 to i32\l  %42 = mul i32 %5, %41\l  %43 = add i32 %42, %6\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %47 = fadd contract float %46, 2.000000e+02\l  store float %47, float addrspace(1)* %45, align 4, !tbaa !7\l  br label %48\l}"];
	Node0x62cb700 -> Node0x62cd020;
	Node0x62cd020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  ret void\l}"];
}
