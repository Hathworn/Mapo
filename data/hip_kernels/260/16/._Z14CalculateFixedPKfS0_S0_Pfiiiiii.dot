digraph "CFG for '_Z14CalculateFixedPKfS0_S0_Pfiiiiii' function" {
	label="CFG for '_Z14CalculateFixedPKfS0_S0_Pfiiiiii' function";

	Node0x5c32810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 2, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %19 = add i32 %17, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 4, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %27 = add i32 %25, %26\l  %28 = mul nsw i32 %19, %6\l  %29 = add nsw i32 %28, %27\l  %30 = icmp slt i32 %19, %7\l  %31 = icmp slt i32 %27, %6\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %261\l|{<s0>T|<s1>F}}"];
	Node0x5c32810:s0 -> Node0x5c34d60;
	Node0x5c32810:s1 -> Node0x5c34df0;
	Node0x5c34d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%33:\l33:                                               \l  %34 = sext i32 %29 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = fcmp contract ogt float %36, 1.270000e+02\l  br i1 %37, label %38, label %261\l|{<s0>T|<s1>F}}"];
	Node0x5c34d60:s0 -> Node0x5c37ff0;
	Node0x5c34d60:s1 -> Node0x5c34df0;
	Node0x5c37ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%38:\l38:                                               \l  %39 = icmp eq i32 %19, 0\l  %40 = icmp eq i32 %27, 0\l  %41 = add nsw i32 %7, -1\l  %42 = icmp eq i32 %19, %41\l  %43 = add nsw i32 %6, -1\l  %44 = icmp ne i32 %27, %43\l  %45 = select i1 %39, i32 0, i32 %6\l  %46 = sub nsw i32 %29, %45\l  %47 = add nsw i32 %29, -1\l  %48 = select i1 %40, i32 %28, i32 %47\l  %49 = select i1 %42, i32 0, i32 %6\l  %50 = add nsw i32 %29, %49\l  %51 = zext i1 %44 to i32\l  %52 = add nsw i32 %29, %51\l  %53 = mul nsw i32 %29, 3\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %57 = fmul contract float %56, 4.000000e+00\l  %58 = mul nsw i32 %46, 3\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %62 = mul nsw i32 %48, 3\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %1, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %66 = fadd contract float %61, %65\l  %67 = mul nsw i32 %50, 3\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %1, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %71 = fadd contract float %66, %70\l  %72 = mul nsw i32 %52, 3\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %76 = fadd contract float %71, %75\l  %77 = fsub contract float %57, %76\l  %78 = getelementptr inbounds float, float addrspace(1)* %3, i64 %54\l  store float %77, float addrspace(1)* %78, align 4, !tbaa !7\l  %79 = add nsw i32 %53, 1\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  %83 = fmul contract float %82, 4.000000e+00\l  %84 = add nsw i32 %58, 1\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %1, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7\l  %88 = add nsw i32 %62, 1\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %1, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !7\l  %92 = fadd contract float %87, %91\l  %93 = add nsw i32 %67, 1\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7\l  %97 = fadd contract float %92, %96\l  %98 = add nsw i32 %72, 1\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %1, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7\l  %102 = fadd contract float %97, %101\l  %103 = fsub contract float %83, %102\l  %104 = getelementptr inbounds float, float addrspace(1)* %3, i64 %80\l  store float %103, float addrspace(1)* %104, align 4, !tbaa !7\l  %105 = add nsw i32 %53, 2\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %1, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7\l  %109 = fmul contract float %108, 4.000000e+00\l  %110 = add nsw i32 %58, 2\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %1, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7\l  %114 = add nsw i32 %62, 2\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %1, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !7\l  %118 = fadd contract float %113, %117\l  %119 = add nsw i32 %67, 2\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %1, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7\l  %123 = fadd contract float %118, %122\l  %124 = add nsw i32 %72, 2\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %1, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !7\l  %128 = fadd contract float %123, %127\l  %129 = fsub contract float %109, %128\l  %130 = getelementptr inbounds float, float addrspace(1)* %3, i64 %106\l  store float %129, float addrspace(1)* %130, align 4, !tbaa !7\l  %131 = add nsw i32 %19, %8\l  %132 = add nsw i32 %27, %9\l  %133 = mul nsw i32 %131, %4\l  %134 = add nsw i32 %133, %132\l  %135 = icmp sgt i32 %131, -1\l  br i1 %135, label %136, label %261\l|{<s0>T|<s1>F}}"];
	Node0x5c37ff0:s0 -> Node0x5c3c560;
	Node0x5c37ff0:s1 -> Node0x5c34df0;
	Node0x5c3c560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%136:\l136:                                              \l  %137 = icmp slt i32 %131, %5\l  %138 = icmp sgt i32 %132, -1\l  %139 = select i1 %137, i1 %138, i1 false\l  %140 = icmp slt i32 %132, %4\l  %141 = select i1 %139, i1 %140, i1 false\l  br i1 %141, label %142, label %261\l|{<s0>T|<s1>F}}"];
	Node0x5c3c560:s0 -> Node0x5c3c9b0;
	Node0x5c3c560:s1 -> Node0x5c34df0;
	Node0x5c3c9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%142:\l142:                                              \l  %143 = icmp eq i32 %131, 0\l  %144 = icmp eq i32 %132, 0\l  %145 = add nsw i32 %5, -1\l  %146 = icmp eq i32 %131, %145\l  %147 = add nsw i32 %4, -1\l  %148 = icmp ne i32 %132, %147\l  %149 = select i1 %143, i32 0, i32 %4\l  %150 = sub nsw i32 %134, %149\l  %151 = add nsw i32 %134, -1\l  %152 = select i1 %144, i32 %133, i32 %151\l  %153 = select i1 %146, i32 0, i32 %4\l  %154 = add nsw i32 %134, %153\l  %155 = zext i1 %148 to i32\l  %156 = add nsw i32 %134, %155\l  br i1 %39, label %162, label %157\l|{<s0>T|<s1>F}}"];
	Node0x5c3c9b0:s0 -> Node0x5c3d2d0;
	Node0x5c3c9b0:s1 -> Node0x5c3d320;
	Node0x5c3d320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%157:\l157:                                              \l  %158 = sext i32 %46 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %2, i64 %158\l  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !7\l  %161 = fcmp contract ole float %160, 1.270000e+02\l  br label %162\l}"];
	Node0x5c3d320 -> Node0x5c3d2d0;
	Node0x5c3d2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%162:\l162:                                              \l  %163 = phi i1 [ %161, %157 ], [ true, %142 ]\l  br i1 %40, label %169, label %164\l|{<s0>T|<s1>F}}"];
	Node0x5c3d2d0:s0 -> Node0x5c3d790;
	Node0x5c3d2d0:s1 -> Node0x5c3d7e0;
	Node0x5c3d7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%164:\l164:                                              \l  %165 = sext i32 %48 to i64\l  %166 = getelementptr inbounds float, float addrspace(1)* %2, i64 %165\l  %167 = load float, float addrspace(1)* %166, align 4, !tbaa !7\l  %168 = fcmp contract ole float %167, 1.270000e+02\l  br label %169\l}"];
	Node0x5c3d7e0 -> Node0x5c3d790;
	Node0x5c3d790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%169:\l169:                                              \l  %170 = phi i1 [ %168, %164 ], [ true, %162 ]\l  br i1 %42, label %176, label %171\l|{<s0>T|<s1>F}}"];
	Node0x5c3d790:s0 -> Node0x5c3dc40;
	Node0x5c3d790:s1 -> Node0x5c3dc90;
	Node0x5c3dc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%171:\l171:                                              \l  %172 = sext i32 %50 to i64\l  %173 = getelementptr inbounds float, float addrspace(1)* %2, i64 %172\l  %174 = load float, float addrspace(1)* %173, align 4, !tbaa !7\l  %175 = fcmp contract ole float %174, 1.270000e+02\l  br label %176\l}"];
	Node0x5c3dc90 -> Node0x5c3dc40;
	Node0x5c3dc40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%176:\l176:                                              \l  %177 = phi i1 [ %175, %171 ], [ true, %169 ]\l  br i1 %44, label %178, label %183\l|{<s0>T|<s1>F}}"];
	Node0x5c3dc40:s0 -> Node0x5c3e0c0;
	Node0x5c3dc40:s1 -> Node0x5c3e110;
	Node0x5c3e0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%178:\l178:                                              \l  %179 = sext i32 %52 to i64\l  %180 = getelementptr inbounds float, float addrspace(1)* %2, i64 %179\l  %181 = load float, float addrspace(1)* %180, align 4, !tbaa !7\l  %182 = fcmp contract ole float %181, 1.270000e+02\l  br label %183\l}"];
	Node0x5c3e0c0 -> Node0x5c3e110;
	Node0x5c3e110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%183:\l183:                                              \l  %184 = phi i1 [ %182, %178 ], [ true, %176 ]\l  br i1 %163, label %185, label %201\l|{<s0>T|<s1>F}}"];
	Node0x5c3e110:s0 -> Node0x5c3e540;
	Node0x5c3e110:s1 -> Node0x5c3e590;
	Node0x5c3e540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%185:\l185:                                              \l  %186 = mul nsw i32 %150, 3\l  %187 = sext i32 %186 to i64\l  %188 = getelementptr inbounds float, float addrspace(1)* %0, i64 %187\l  %189 = load float, float addrspace(1)* %188, align 4, !tbaa !7\l  %190 = fadd contract float %77, %189\l  store float %190, float addrspace(1)* %78, align 4, !tbaa !7\l  %191 = add nsw i32 %186, 1\l  %192 = sext i32 %191 to i64\l  %193 = getelementptr inbounds float, float addrspace(1)* %0, i64 %192\l  %194 = load float, float addrspace(1)* %193, align 4, !tbaa !7\l  %195 = fadd contract float %103, %194\l  store float %195, float addrspace(1)* %104, align 4, !tbaa !7\l  %196 = add nsw i32 %186, 2\l  %197 = sext i32 %196 to i64\l  %198 = getelementptr inbounds float, float addrspace(1)* %0, i64 %197\l  %199 = load float, float addrspace(1)* %198, align 4, !tbaa !7\l  %200 = fadd contract float %129, %199\l  store float %200, float addrspace(1)* %130, align 4, !tbaa !7\l  br label %201\l}"];
	Node0x5c3e540 -> Node0x5c3e590;
	Node0x5c3e590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%201:\l201:                                              \l  %202 = phi float [ %200, %185 ], [ %129, %183 ]\l  %203 = phi float [ %195, %185 ], [ %103, %183 ]\l  %204 = phi float [ %190, %185 ], [ %77, %183 ]\l  br i1 %170, label %205, label %221\l|{<s0>T|<s1>F}}"];
	Node0x5c3e590:s0 -> Node0x5c3f2a0;
	Node0x5c3e590:s1 -> Node0x5c3f2f0;
	Node0x5c3f2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%205:\l205:                                              \l  %206 = mul nsw i32 %152, 3\l  %207 = sext i32 %206 to i64\l  %208 = getelementptr inbounds float, float addrspace(1)* %0, i64 %207\l  %209 = load float, float addrspace(1)* %208, align 4, !tbaa !7\l  %210 = fadd contract float %209, %204\l  store float %210, float addrspace(1)* %78, align 4, !tbaa !7\l  %211 = add nsw i32 %206, 1\l  %212 = sext i32 %211 to i64\l  %213 = getelementptr inbounds float, float addrspace(1)* %0, i64 %212\l  %214 = load float, float addrspace(1)* %213, align 4, !tbaa !7\l  %215 = fadd contract float %214, %203\l  store float %215, float addrspace(1)* %104, align 4, !tbaa !7\l  %216 = add nsw i32 %206, 2\l  %217 = sext i32 %216 to i64\l  %218 = getelementptr inbounds float, float addrspace(1)* %0, i64 %217\l  %219 = load float, float addrspace(1)* %218, align 4, !tbaa !7\l  %220 = fadd contract float %219, %202\l  store float %220, float addrspace(1)* %130, align 4, !tbaa !7\l  br label %221\l}"];
	Node0x5c3f2a0 -> Node0x5c3f2f0;
	Node0x5c3f2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%221:\l221:                                              \l  %222 = phi float [ %220, %205 ], [ %202, %201 ]\l  %223 = phi float [ %215, %205 ], [ %203, %201 ]\l  %224 = phi float [ %210, %205 ], [ %204, %201 ]\l  br i1 %177, label %225, label %241\l|{<s0>T|<s1>F}}"];
	Node0x5c3f2f0:s0 -> Node0x5c40000;
	Node0x5c3f2f0:s1 -> Node0x5c40050;
	Node0x5c40000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%225:\l225:                                              \l  %226 = mul nsw i32 %154, 3\l  %227 = sext i32 %226 to i64\l  %228 = getelementptr inbounds float, float addrspace(1)* %0, i64 %227\l  %229 = load float, float addrspace(1)* %228, align 4, !tbaa !7\l  %230 = fadd contract float %229, %224\l  store float %230, float addrspace(1)* %78, align 4, !tbaa !7\l  %231 = add nsw i32 %226, 1\l  %232 = sext i32 %231 to i64\l  %233 = getelementptr inbounds float, float addrspace(1)* %0, i64 %232\l  %234 = load float, float addrspace(1)* %233, align 4, !tbaa !7\l  %235 = fadd contract float %234, %223\l  store float %235, float addrspace(1)* %104, align 4, !tbaa !7\l  %236 = add nsw i32 %226, 2\l  %237 = sext i32 %236 to i64\l  %238 = getelementptr inbounds float, float addrspace(1)* %0, i64 %237\l  %239 = load float, float addrspace(1)* %238, align 4, !tbaa !7\l  %240 = fadd contract float %239, %222\l  store float %240, float addrspace(1)* %130, align 4, !tbaa !7\l  br label %241\l}"];
	Node0x5c40000 -> Node0x5c40050;
	Node0x5c40050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%241:\l241:                                              \l  %242 = phi float [ %240, %225 ], [ %222, %221 ]\l  %243 = phi float [ %235, %225 ], [ %223, %221 ]\l  %244 = phi float [ %230, %225 ], [ %224, %221 ]\l  br i1 %184, label %245, label %261\l|{<s0>T|<s1>F}}"];
	Node0x5c40050:s0 -> Node0x5c40d60;
	Node0x5c40050:s1 -> Node0x5c34df0;
	Node0x5c40d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%245:\l245:                                              \l  %246 = mul nsw i32 %156, 3\l  %247 = sext i32 %246 to i64\l  %248 = getelementptr inbounds float, float addrspace(1)* %0, i64 %247\l  %249 = load float, float addrspace(1)* %248, align 4, !tbaa !7\l  %250 = fadd contract float %249, %244\l  store float %250, float addrspace(1)* %78, align 4, !tbaa !7\l  %251 = add nsw i32 %246, 1\l  %252 = sext i32 %251 to i64\l  %253 = getelementptr inbounds float, float addrspace(1)* %0, i64 %252\l  %254 = load float, float addrspace(1)* %253, align 4, !tbaa !7\l  %255 = fadd contract float %254, %243\l  store float %255, float addrspace(1)* %104, align 4, !tbaa !7\l  %256 = add nsw i32 %246, 2\l  %257 = sext i32 %256 to i64\l  %258 = getelementptr inbounds float, float addrspace(1)* %0, i64 %257\l  %259 = load float, float addrspace(1)* %258, align 4, !tbaa !7\l  %260 = fadd contract float %259, %242\l  store float %260, float addrspace(1)* %130, align 4, !tbaa !7\l  br label %261\l}"];
	Node0x5c40d60 -> Node0x5c34df0;
	Node0x5c34df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%261:\l261:                                              \l  ret void\l}"];
}
