digraph "CFG for '_Z10mInitForcePfS_' function" {
	label="CFG for '_Z10mInitForcePfS_' function";

	Node0x5aad900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = mul i32 %3, %8\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = add i32 %9, %10\l  %12 = uitofp i32 %10 to float\l  %13 = uitofp i32 %3 to float\l  %14 = fadd contract float %12, -3.200000e+02\l  %15 = fmul contract float %14, %14\l  %16 = fadd contract float %13, -2.400000e+02\l  %17 = fmul contract float %16, %16\l  %18 = fadd contract float %15, %17\l  %19 = fcmp olt float %18, 0x39F0000000000000\l  %20 = select i1 %19, float 0x41F0000000000000, float 1.000000e+00\l  %21 = fmul float %18, %20\l  %22 = tail call float @llvm.sqrt.f32(float %21)\l  %23 = bitcast float %22 to i32\l  %24 = add nsw i32 %23, -1\l  %25 = bitcast i32 %24 to float\l  %26 = add nsw i32 %23, 1\l  %27 = bitcast i32 %26 to float\l  %28 = tail call i1 @llvm.amdgcn.class.f32(float %21, i32 608)\l  %29 = select i1 %19, float 0x3EF0000000000000, float 1.000000e+00\l  %30 = fneg float %27\l  %31 = tail call float @llvm.fma.f32(float %30, float %22, float %21)\l  %32 = fcmp ogt float %31, 0.000000e+00\l  %33 = fneg float %25\l  %34 = tail call float @llvm.fma.f32(float %33, float %22, float %21)\l  %35 = fcmp ole float %34, 0.000000e+00\l  %36 = select i1 %35, float %25, float %22\l  %37 = select i1 %32, float %27, float %36\l  %38 = fmul float %29, %37\l  %39 = select i1 %28, float %21, float %38\l  %40 = fcmp contract olt float %39, 1.000000e+01\l  br i1 %40, label %41, label %54\l|{<s0>T|<s1>F}}"];
	Node0x5aad900:s0 -> Node0x5ab1b60;
	Node0x5aad900:s1 -> Node0x5ab1bf0;
	Node0x5ab1b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%41:\l41:                                               \l  %42 = fpext float %13 to double\l  %43 = fsub contract double 2.400000e+02, %42\l  %44 = fpext float %39 to double\l  %45 = fdiv contract double %43, %44\l  %46 = fptrunc double %45 to float\l  %47 = sext i32 %11 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  store float %46, float addrspace(1)* %48, align 4, !tbaa !7\l  %49 = uitofp i32 %10 to double\l  %50 = fadd contract double %49, -3.200000e+02\l  %51 = fdiv contract double %50, %44\l  %52 = fptrunc double %51 to float\l  %53 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  store float %52, float addrspace(1)* %53, align 4, !tbaa !7\l  br label %58\l}"];
	Node0x5ab1b60 -> Node0x5ab2c00;
	Node0x5ab1bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%54:\l54:                                               \l  %55 = sext i32 %11 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %55\l  store float 0.000000e+00, float addrspace(1)* %56, align 4, !tbaa !7\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  store float 0.000000e+00, float addrspace(1)* %57, align 4, !tbaa !7\l  br label %58\l}"];
	Node0x5ab1bf0 -> Node0x5ab2c00;
	Node0x5ab2c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  ret void\l}"];
}
