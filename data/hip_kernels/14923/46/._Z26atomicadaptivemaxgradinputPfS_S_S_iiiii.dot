digraph "CFG for '_Z26atomicadaptivemaxgradinputPfS_S_S_iiiii' function" {
	label="CFG for '_Z26atomicadaptivemaxgradinputPfS_S_S_iiiii' function";

	Node0x5d46500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 16\l  %23 = bitcast i8 addrspace(4)* %22 to i32 addrspace(4)*\l  %24 = load i32, i32 addrspace(4)* %23, align 8, !tbaa !7\l  %25 = mul i32 %17, %21\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %27 = add i32 %25, %26\l  %28 = udiv i32 %24, %21\l  %29 = mul i32 %28, %21\l  %30 = icmp ugt i32 %24, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = mul i32 %32, %21\l  %34 = mul i32 %10, %7\l  %35 = mul i32 %34, %8\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 %36\l  %38 = mul i32 %10, %5\l  %39 = mul i32 %38, %6\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  %42 = getelementptr inbounds float, float addrspace(1)* %2, i64 %36\l  %43 = getelementptr inbounds float, float addrspace(1)* %3, i64 %36\l  %44 = icmp slt i32 %27, %7\l  br i1 %44, label %45, label %97\l|{<s0>T|<s1>F}}"];
	Node0x5d46500:s0 -> Node0x5d4b780;
	Node0x5d46500:s1 -> Node0x5d4b810;
	Node0x5d4b780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%45:\l45:                                               \l  %46 = sitofp i32 %7 to float\l  %47 = sitofp i32 %5 to float\l  %48 = icmp slt i32 %11, %8\l  %49 = sitofp i32 %8 to float\l  %50 = sitofp i32 %6 to float\l  br label %51\l}"];
	Node0x5d4b780 -> Node0x5d4bba0;
	Node0x5d4bba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%51:\l51:                                               \l  %52 = phi i32 [ %27, %45 ], [ %95, %94 ]\l  br i1 %48, label %53, label %94\l|{<s0>T|<s1>F}}"];
	Node0x5d4bba0:s0 -> Node0x5d4bdd0;
	Node0x5d4bba0:s1 -> Node0x5d4bc90;
	Node0x5d4bdd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%53:\l53:                                               \l  %54 = sitofp i32 %52 to float\l  %55 = fdiv contract float %54, %46\l  %56 = fmul contract float %55, %47\l  %57 = tail call float @llvm.floor.f32(float %56)\l  %58 = fptosi float %57 to i32\l  %59 = mul nsw i32 %58, %6\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %41, i64 %60\l  %62 = mul nsw i32 %52, %8\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %37, i64 %63\l  %65 = getelementptr inbounds float, float addrspace(1)* %42, i64 %63\l  %66 = getelementptr inbounds float, float addrspace(1)* %43, i64 %63\l  br label %67\l}"];
	Node0x5d4bdd0 -> Node0x5d4b0f0;
	Node0x5d4b0f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi i32 [ %11, %53 ], [ %92, %67 ]\l  %69 = sitofp i32 %68 to float\l  %70 = fdiv contract float %69, %49\l  %71 = fmul contract float %70, %50\l  %72 = tail call float @llvm.floor.f32(float %71)\l  %73 = fptosi float %72 to i32\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %61, i64 %74\l  %76 = zext i32 %68 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %64, i64 %76\l  %78 = getelementptr inbounds float, float addrspace(1)* %65, i64 %76\l  %79 = getelementptr inbounds float, float addrspace(1)* %66, i64 %76\l  %80 = load float, float addrspace(1)* %77, align 4, !tbaa !16\l  %81 = load float, float addrspace(1)* %78, align 4, !tbaa !16\l  %82 = fadd contract float %81, -1.000000e+00\l  %83 = fptosi float %82 to i32\l  %84 = load float, float addrspace(1)* %79, align 4, !tbaa !16\l  %85 = fadd contract float %84, -1.000000e+00\l  %86 = fptosi float %85 to i32\l  %87 = mul nsw i32 %86, %6\l  %88 = add nsw i32 %87, %83\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %75, i64 %89\l  %91 = atomicrmw fadd float addrspace(1)* %90, float %80\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %92 = add nuw nsw i32 %68, %16\l  %93 = icmp slt i32 %92, %8\l  br i1 %93, label %67, label %94, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5d4b0f0:s0 -> Node0x5d4b0f0;
	Node0x5d4b0f0:s1 -> Node0x5d4bc90;
	Node0x5d4bc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%94:\l94:                                               \l  %95 = add nsw i32 %52, %33\l  %96 = icmp slt i32 %95, %7\l  br i1 %96, label %51, label %97, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5d4bc90:s0 -> Node0x5d4bba0;
	Node0x5d4bc90:s1 -> Node0x5d4b810;
	Node0x5d4b810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%97:\l97:                                               \l  ret void\l}"];
}
