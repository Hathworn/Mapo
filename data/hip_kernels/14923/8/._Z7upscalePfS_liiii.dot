digraph "CFG for '_Z7upscalePfS_liiii' function" {
	label="CFG for '_Z7upscalePfS_liiii' function";

	Node0x6177910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !7\l  %18 = mul i32 %10, %14\l  %19 = add i32 %18, %8\l  %20 = zext i32 %19 to i64\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !5, !invariant.load !6\l  %26 = zext i16 %25 to i32\l  %27 = udiv i32 %17, %14\l  %28 = mul i32 %27, %14\l  %29 = icmp ugt i32 %17, %28\l  %30 = zext i1 %29 to i32\l  %31 = add i32 %27, %30\l  %32 = mul i32 %22, %14\l  %33 = mul i32 %32, %26\l  %34 = mul i32 %33, %31\l  %35 = add i32 %34, %21\l  %36 = zext i32 %35 to i64\l  %37 = add nuw nsw i64 %36, %20\l  %38 = icmp slt i64 %37, %2\l  br i1 %38, label %39, label %63\l|{<s0>T|<s1>F}}"];
	Node0x6177910:s0 -> Node0x617bb90;
	Node0x6177910:s1 -> Node0x617bc20;
	Node0x617bb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%39:\l39:                                               \l  %40 = trunc i64 %37 to i32\l  %41 = freeze i32 %40\l  %42 = freeze i32 %6\l  %43 = sdiv i32 %41, %42\l  %44 = mul i32 %43, %42\l  %45 = sub i32 %41, %44\l  %46 = freeze i32 %5\l  %47 = sdiv i32 %43, %46\l  %48 = mul i32 %47, %46\l  %49 = sub i32 %43, %48\l  %50 = freeze i32 %47\l  %51 = sdiv i32 %45, %3\l  %52 = sdiv i32 %49, %3\l  %53 = sdiv i32 %5, %3\l  %54 = sdiv i32 %6, %3\l  %55 = mul nsw i32 %53, %50\l  %56 = add nsw i32 %55, %52\l  %57 = mul nsw i32 %56, %54\l  %58 = add nsw i32 %57, %51\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  store float %61, float addrspace(1)* %62, align 4, !tbaa !16\l  br label %63\l}"];
	Node0x617bb90 -> Node0x617bc20;
	Node0x617bc20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  ret void\l}"];
}
