digraph "CFG for '_Z7kernelDiPfS_' function" {
	label="CFG for '_Z7kernelDiPfS_' function";

	Node0x64ca600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = udiv i32 %12, %9\l  %17 = mul i32 %16, %9\l  %18 = icmp ugt i32 %12, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %9\l  %22 = icmp slt i32 %15, %0\l  br i1 %22, label %23, label %36\l|{<s0>T|<s1>F}}"];
	Node0x64ca600:s0 -> Node0x64ccbc0;
	Node0x64ca600:s1 -> Node0x64ccc50;
	Node0x64ccbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%23:\l23:                                               \l  %24 = sdiv i32 %0, 128\l  %25 = icmp sgt i32 %0, 127\l  %26 = add nsw i32 %24, -1\l  %27 = and i32 %24, 7\l  %28 = icmp ult i32 %26, 7\l  %29 = and i32 %24, -8\l  %30 = icmp eq i32 %27, 0\l  br label %31\l}"];
	Node0x64ccbc0 -> Node0x64cd270;
	Node0x64cd270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%31:\l31:                                               \l  %32 = phi i32 [ %15, %23 ], [ %51, %50 ]\l  br i1 %25, label %33, label %50\l|{<s0>T|<s1>F}}"];
	Node0x64cd270:s0 -> Node0x64cc800;
	Node0x64cd270:s1 -> Node0x64cd360;
	Node0x64cc800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%33:\l33:                                               \l  %34 = sext i32 %32 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 %34\l  br i1 %28, label %37, label %53\l|{<s0>T|<s1>F}}"];
	Node0x64cc800:s0 -> Node0x64cd800;
	Node0x64cc800:s1 -> Node0x64cd850;
	Node0x64ccc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%36:\l36:                                               \l  ret void\l}"];
	Node0x64cd800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%37:\l37:                                               \l  %38 = phi i32 [ 0, %33 ], [ %103, %53 ]\l  br i1 %30, label %50, label %39\l|{<s0>T|<s1>F}}"];
	Node0x64cd800:s0 -> Node0x64cd360;
	Node0x64cd800:s1 -> Node0x64cdac0;
	Node0x64cdac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i32 [ %47, %39 ], [ %38, %37 ]\l  %41 = phi i32 [ %48, %39 ], [ 0, %37 ]\l  %42 = zext i32 %40 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %2, i64 %42\l  %44 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !16\l  %46 = atomicrmw fadd float addrspace(1)* %43, float %45\l... syncscope(\"agent-one-as\") monotonic, align 4\l  store float %46, float addrspace(1)* %35, align 4, !tbaa !16\l  %47 = add nuw nsw i32 %40, 1\l  %48 = add i32 %41, 1\l  %49 = icmp eq i32 %48, %27\l  br i1 %49, label %50, label %39, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x64cdac0:s0 -> Node0x64cd360;
	Node0x64cdac0:s1 -> Node0x64cdac0;
	Node0x64cd360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%50:\l50:                                               \l  %51 = add nsw i32 %32, %21\l  %52 = icmp slt i32 %51, %0\l  br i1 %52, label %31, label %36, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x64cd360:s0 -> Node0x64cd270;
	Node0x64cd360:s1 -> Node0x64ccc50;
	Node0x64cd850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%53:\l53:                                               \l  %54 = phi i32 [ %103, %53 ], [ 0, %33 ]\l  %55 = phi i32 [ %104, %53 ], [ 0, %33 ]\l  %56 = zext i32 %54 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %2, i64 %56\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !16\l  %60 = atomicrmw fadd float addrspace(1)* %57, float %59\l... syncscope(\"agent-one-as\") monotonic, align 4\l  store float %60, float addrspace(1)* %35, align 4, !tbaa !16\l  %61 = or i32 %54, 1\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %2, i64 %62\l  %64 = getelementptr inbounds float, float addrspace(1)* %1, i64 %62\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !16\l  %66 = atomicrmw fadd float addrspace(1)* %63, float %65\l... syncscope(\"agent-one-as\") monotonic, align 4\l  store float %66, float addrspace(1)* %35, align 4, !tbaa !16\l  %67 = or i32 %54, 2\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %2, i64 %68\l  %70 = getelementptr inbounds float, float addrspace(1)* %1, i64 %68\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !16\l  %72 = atomicrmw fadd float addrspace(1)* %69, float %71\l... syncscope(\"agent-one-as\") monotonic, align 4\l  store float %72, float addrspace(1)* %35, align 4, !tbaa !16\l  %73 = or i32 %54, 3\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %2, i64 %74\l  %76 = getelementptr inbounds float, float addrspace(1)* %1, i64 %74\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !16\l  %78 = atomicrmw fadd float addrspace(1)* %75, float %77\l... syncscope(\"agent-one-as\") monotonic, align 4\l  store float %78, float addrspace(1)* %35, align 4, !tbaa !16\l  %79 = or i32 %54, 4\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %2, i64 %80\l  %82 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !16\l  %84 = atomicrmw fadd float addrspace(1)* %81, float %83\l... syncscope(\"agent-one-as\") monotonic, align 4\l  store float %84, float addrspace(1)* %35, align 4, !tbaa !16\l  %85 = or i32 %54, 5\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %2, i64 %86\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !16\l  %90 = atomicrmw fadd float addrspace(1)* %87, float %89\l... syncscope(\"agent-one-as\") monotonic, align 4\l  store float %90, float addrspace(1)* %35, align 4, !tbaa !16\l  %91 = or i32 %54, 6\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %2, i64 %92\l  %94 = getelementptr inbounds float, float addrspace(1)* %1, i64 %92\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !16\l  %96 = atomicrmw fadd float addrspace(1)* %93, float %95\l... syncscope(\"agent-one-as\") monotonic, align 4\l  store float %96, float addrspace(1)* %35, align 4, !tbaa !16\l  %97 = or i32 %54, 7\l  %98 = zext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %2, i64 %98\l  %100 = getelementptr inbounds float, float addrspace(1)* %1, i64 %98\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !16\l  %102 = atomicrmw fadd float addrspace(1)* %99, float %101\l... syncscope(\"agent-one-as\") monotonic, align 4\l  store float %102, float addrspace(1)* %35, align 4, !tbaa !16\l  %103 = add nuw nsw i32 %54, 8\l  %104 = add i32 %55, 8\l  %105 = icmp eq i32 %104, %29\l  br i1 %105, label %37, label %53, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x64cd850:s0 -> Node0x64cd800;
	Node0x64cd850:s1 -> Node0x64cd850;
}
