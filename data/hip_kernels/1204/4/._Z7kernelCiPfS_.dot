digraph "CFG for '_Z7kernelCiPfS_' function" {
	label="CFG for '_Z7kernelCiPfS_' function";

	Node0x481a750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = udiv i32 %12, %9\l  %17 = mul i32 %16, %9\l  %18 = icmp ugt i32 %12, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %9\l  %22 = icmp slt i32 %15, %0\l  br i1 %22, label %23, label %31\l|{<s0>T|<s1>F}}"];
	Node0x481a750:s0 -> Node0x481cd10;
	Node0x481a750:s1 -> Node0x481cda0;
	Node0x481cd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%23:\l23:                                               \l  %24 = sdiv i32 %0, 128\l  %25 = icmp slt i32 %0, 128\l  %26 = add nsw i32 %24, -1\l  %27 = and i32 %24, 7\l  %28 = icmp ult i32 %26, 7\l  %29 = and i32 %24, -8\l  %30 = icmp eq i32 %27, 0\l  br label %32\l}"];
	Node0x481cd10 -> Node0x481d390;
	Node0x481cda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%31:\l31:                                               \l  ret void\l}"];
	Node0x481d390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%32:\l32:                                               \l  %33 = phi i32 [ %15, %23 ], [ %118, %117 ]\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 %34\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !16\l  %39 = fcmp contract ule float %36, %38\l  %40 = select i1 %39, i1 true, i1 %25\l  br i1 %40, label %117, label %41\l|{<s0>T|<s1>F}}"];
	Node0x481d390:s0 -> Node0x481c980;
	Node0x481d390:s1 -> Node0x481e230;
	Node0x481e230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%41:\l41:                                               \l  br i1 %28, label %103, label %42\l|{<s0>T|<s1>F}}"];
	Node0x481e230:s0 -> Node0x481e370;
	Node0x481e230:s1 -> Node0x481e3c0;
	Node0x481e3c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%42:\l42:                                               \l  %43 = phi i32 [ %100, %42 ], [ 0, %41 ]\l  %44 = phi i32 [ %101, %42 ], [ 0, %41 ]\l  %45 = zext i32 %43 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !16\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %45\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !16\l  %50 = fadd contract float %47, %49\l  store float %50, float addrspace(1)* %37, align 4, !tbaa !16\l  %51 = or i32 %43, 1\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %1, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !16\l  %55 = getelementptr inbounds float, float addrspace(1)* %2, i64 %52\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !16\l  %57 = fadd contract float %54, %56\l  store float %57, float addrspace(1)* %37, align 4, !tbaa !16\l  %58 = or i32 %43, 2\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !16\l  %62 = getelementptr inbounds float, float addrspace(1)* %2, i64 %59\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !16\l  %64 = fadd contract float %61, %63\l  store float %64, float addrspace(1)* %37, align 4, !tbaa !16\l  %65 = or i32 %43, 3\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %1, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !16\l  %69 = getelementptr inbounds float, float addrspace(1)* %2, i64 %66\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !16\l  %71 = fadd contract float %68, %70\l  store float %71, float addrspace(1)* %37, align 4, !tbaa !16\l  %72 = or i32 %43, 4\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !16\l  %76 = getelementptr inbounds float, float addrspace(1)* %2, i64 %73\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !16\l  %78 = fadd contract float %75, %77\l  store float %78, float addrspace(1)* %37, align 4, !tbaa !16\l  %79 = or i32 %43, 5\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !16\l  %83 = getelementptr inbounds float, float addrspace(1)* %2, i64 %80\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !16\l  %85 = fadd contract float %82, %84\l  store float %85, float addrspace(1)* %37, align 4, !tbaa !16\l  %86 = or i32 %43, 6\l  %87 = zext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !16\l  %90 = getelementptr inbounds float, float addrspace(1)* %2, i64 %87\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !16\l  %92 = fadd contract float %89, %91\l  store float %92, float addrspace(1)* %37, align 4, !tbaa !16\l  %93 = or i32 %43, 7\l  %94 = zext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !16\l  %97 = getelementptr inbounds float, float addrspace(1)* %2, i64 %94\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !16\l  %99 = fadd contract float %96, %98\l  store float %99, float addrspace(1)* %37, align 4, !tbaa !16\l  %100 = add nuw nsw i32 %43, 8\l  %101 = add i32 %44, 8\l  %102 = icmp eq i32 %101, %29\l  br i1 %102, label %103, label %42, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x481e3c0:s0 -> Node0x481e370;
	Node0x481e3c0:s1 -> Node0x481e3c0;
	Node0x481e370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%103:\l103:                                              \l  %104 = phi i32 [ 0, %41 ], [ %100, %42 ]\l  br i1 %30, label %117, label %105\l|{<s0>T|<s1>F}}"];
	Node0x481e370:s0 -> Node0x481c980;
	Node0x481e370:s1 -> Node0x4820fa0;
	Node0x4820fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  %106 = phi i32 [ %114, %105 ], [ %104, %103 ]\l  %107 = phi i32 [ %115, %105 ], [ 0, %103 ]\l  %108 = zext i32 %106 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %1, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !16\l  %111 = getelementptr inbounds float, float addrspace(1)* %2, i64 %108\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !16\l  %113 = fadd contract float %110, %112\l  store float %113, float addrspace(1)* %37, align 4, !tbaa !16\l  %114 = add nuw nsw i32 %106, 1\l  %115 = add i32 %107, 1\l  %116 = icmp eq i32 %115, %27\l  br i1 %116, label %117, label %105, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4820fa0:s0 -> Node0x481c980;
	Node0x4820fa0:s1 -> Node0x4820fa0;
	Node0x481c980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%117:\l117:                                              \l  %118 = add nsw i32 %33, %21\l  %119 = icmp slt i32 %118, %0\l  br i1 %119, label %32, label %31, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x481c980:s0 -> Node0x481d390;
	Node0x481c980:s1 -> Node0x481cda0;
}
