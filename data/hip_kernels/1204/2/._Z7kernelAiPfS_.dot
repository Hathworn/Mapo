digraph "CFG for '_Z7kernelAiPfS_' function" {
	label="CFG for '_Z7kernelAiPfS_' function";

	Node0x519f450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = udiv i32 %12, %9\l  %17 = mul i32 %16, %9\l  %18 = icmp ugt i32 %12, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %9\l  %22 = icmp slt i32 %15, %0\l  br i1 %22, label %23, label %35\l|{<s0>T|<s1>F}}"];
	Node0x519f450:s0 -> Node0x51a1a10;
	Node0x519f450:s1 -> Node0x51a1aa0;
	Node0x51a1a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%23:\l23:                                               \l  %24 = sdiv i32 %0, 128\l  %25 = icmp sgt i32 %0, 127\l  %26 = add nsw i32 %24, -1\l  %27 = and i32 %24, 3\l  %28 = icmp ult i32 %26, 3\l  %29 = and i32 %24, -4\l  %30 = icmp eq i32 %27, 0\l  %31 = and i32 %24, 7\l  %32 = icmp ult i32 %26, 7\l  %33 = and i32 %24, -8\l  %34 = icmp eq i32 %31, 0\l  br label %36\l}"];
	Node0x51a1a10 -> Node0x51a1710;
	Node0x51a1aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%35:\l35:                                               \l  ret void\l}"];
	Node0x51a1710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%36:\l36:                                               \l  %37 = phi i32 [ %15, %23 ], [ %171, %170 ]\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %1, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !16\l  %41 = getelementptr inbounds float, float addrspace(1)* %2, i64 %38\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !16\l  %43 = fcmp contract ogt float %40, %42\l  br i1 %43, label %46, label %44\l|{<s0>T|<s1>F}}"];
	Node0x51a1710:s0 -> Node0x51a3140;
	Node0x51a1710:s1 -> Node0x51a31d0;
	Node0x51a31d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%44:\l44:                                               \l  br i1 %25, label %45, label %170\l|{<s0>T|<s1>F}}"];
	Node0x51a31d0:s0 -> Node0x51a3310;
	Node0x51a31d0:s1 -> Node0x51a25a0;
	Node0x51a3310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%45:\l45:                                               \l  br i1 %28, label %156, label %109\l|{<s0>T|<s1>F}}"];
	Node0x51a3310:s0 -> Node0x51a3410;
	Node0x51a3310:s1 -> Node0x51a3460;
	Node0x51a3140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%46:\l46:                                               \l  br i1 %25, label %47, label %170\l|{<s0>T|<s1>F}}"];
	Node0x51a3140:s0 -> Node0x51a35a0;
	Node0x51a3140:s1 -> Node0x51a25a0;
	Node0x51a35a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%47:\l47:                                               \l  br i1 %32, label %142, label %48\l|{<s0>T|<s1>F}}"];
	Node0x51a35a0:s0 -> Node0x51a36a0;
	Node0x51a35a0:s1 -> Node0x51a36f0;
	Node0x51a36f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%48:\l48:                                               \l  %49 = phi i32 [ %106, %48 ], [ 0, %47 ]\l  %50 = phi i32 [ %107, %48 ], [ 0, %47 ]\l  %51 = zext i32 %49 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !16\l  %54 = getelementptr inbounds float, float addrspace(1)* %2, i64 %51\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %56 = fadd contract float %53, %55\l  store float %56, float addrspace(1)* %41, align 4, !tbaa !16\l  %57 = or i32 %49, 1\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %1, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !16\l  %61 = getelementptr inbounds float, float addrspace(1)* %2, i64 %58\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !16\l  %63 = fadd contract float %60, %62\l  store float %63, float addrspace(1)* %41, align 4, !tbaa !16\l  %64 = or i32 %49, 2\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !16\l  %68 = getelementptr inbounds float, float addrspace(1)* %2, i64 %65\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !16\l  %70 = fadd contract float %67, %69\l  store float %70, float addrspace(1)* %41, align 4, !tbaa !16\l  %71 = or i32 %49, 3\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %1, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !16\l  %75 = getelementptr inbounds float, float addrspace(1)* %2, i64 %72\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !16\l  %77 = fadd contract float %74, %76\l  store float %77, float addrspace(1)* %41, align 4, !tbaa !16\l  %78 = or i32 %49, 4\l  %79 = zext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %1, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !16\l  %82 = getelementptr inbounds float, float addrspace(1)* %2, i64 %79\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !16\l  %84 = fadd contract float %81, %83\l  store float %84, float addrspace(1)* %41, align 4, !tbaa !16\l  %85 = or i32 %49, 5\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !16\l  %89 = getelementptr inbounds float, float addrspace(1)* %2, i64 %86\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !16\l  %91 = fadd contract float %88, %90\l  store float %91, float addrspace(1)* %41, align 4, !tbaa !16\l  %92 = or i32 %49, 6\l  %93 = zext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %1, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !16\l  %96 = getelementptr inbounds float, float addrspace(1)* %2, i64 %93\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !16\l  %98 = fadd contract float %95, %97\l  store float %98, float addrspace(1)* %41, align 4, !tbaa !16\l  %99 = or i32 %49, 7\l  %100 = zext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %1, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !16\l  %103 = getelementptr inbounds float, float addrspace(1)* %2, i64 %100\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !16\l  %105 = fadd contract float %102, %104\l  store float %105, float addrspace(1)* %41, align 4, !tbaa !16\l  %106 = add nuw nsw i32 %49, 8\l  %107 = add i32 %50, 8\l  %108 = icmp eq i32 %107, %33\l  br i1 %108, label %142, label %48, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x51a36f0:s0 -> Node0x51a36a0;
	Node0x51a36f0:s1 -> Node0x51a36f0;
	Node0x51a3460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%109:\l109:                                              \l  %110 = phi i32 [ %139, %109 ], [ 0, %45 ]\l  %111 = phi i32 [ %140, %109 ], [ 0, %45 ]\l  %112 = zext i32 %110 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %1, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !16\l  %115 = getelementptr inbounds float, float addrspace(1)* %2, i64 %112\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !16\l  %117 = fdiv contract float %114, %116\l  store float %117, float addrspace(1)* %41, align 4, !tbaa !16\l  %118 = or i32 %110, 1\l  %119 = zext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %1, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !16\l  %122 = getelementptr inbounds float, float addrspace(1)* %2, i64 %119\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !16\l  %124 = fdiv contract float %121, %123\l  store float %124, float addrspace(1)* %41, align 4, !tbaa !16\l  %125 = or i32 %110, 2\l  %126 = zext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %1, i64 %126\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !16\l  %129 = getelementptr inbounds float, float addrspace(1)* %2, i64 %126\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !16\l  %131 = fdiv contract float %128, %130\l  store float %131, float addrspace(1)* %41, align 4, !tbaa !16\l  %132 = or i32 %110, 3\l  %133 = zext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %1, i64 %133\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !16\l  %136 = getelementptr inbounds float, float addrspace(1)* %2, i64 %133\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !16\l  %138 = fdiv contract float %135, %137\l  store float %138, float addrspace(1)* %41, align 4, !tbaa !16\l  %139 = add nuw nsw i32 %110, 4\l  %140 = add i32 %111, 4\l  %141 = icmp eq i32 %140, %29\l  br i1 %141, label %156, label %109, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x51a3460:s0 -> Node0x51a3410;
	Node0x51a3460:s1 -> Node0x51a3460;
	Node0x51a36a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%142:\l142:                                              \l  %143 = phi i32 [ 0, %47 ], [ %106, %48 ]\l  br i1 %34, label %170, label %144\l|{<s0>T|<s1>F}}"];
	Node0x51a36a0:s0 -> Node0x51a25a0;
	Node0x51a36a0:s1 -> Node0x51a7bc0;
	Node0x51a7bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%144:\l144:                                              \l  %145 = phi i32 [ %153, %144 ], [ %143, %142 ]\l  %146 = phi i32 [ %154, %144 ], [ 0, %142 ]\l  %147 = zext i32 %145 to i64\l  %148 = getelementptr inbounds float, float addrspace(1)* %1, i64 %147\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !16\l  %150 = getelementptr inbounds float, float addrspace(1)* %2, i64 %147\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !16\l  %152 = fadd contract float %149, %151\l  store float %152, float addrspace(1)* %41, align 4, !tbaa !16\l  %153 = add nuw nsw i32 %145, 1\l  %154 = add i32 %146, 1\l  %155 = icmp eq i32 %154, %31\l  br i1 %155, label %170, label %144, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x51a7bc0:s0 -> Node0x51a25a0;
	Node0x51a7bc0:s1 -> Node0x51a7bc0;
	Node0x51a3410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%156:\l156:                                              \l  %157 = phi i32 [ 0, %45 ], [ %139, %109 ]\l  br i1 %30, label %170, label %158\l|{<s0>T|<s1>F}}"];
	Node0x51a3410:s0 -> Node0x51a25a0;
	Node0x51a3410:s1 -> Node0x51a85e0;
	Node0x51a85e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%158:\l158:                                              \l  %159 = phi i32 [ %167, %158 ], [ %157, %156 ]\l  %160 = phi i32 [ %168, %158 ], [ 0, %156 ]\l  %161 = zext i32 %159 to i64\l  %162 = getelementptr inbounds float, float addrspace(1)* %1, i64 %161\l  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !16\l  %164 = getelementptr inbounds float, float addrspace(1)* %2, i64 %161\l  %165 = load float, float addrspace(1)* %164, align 4, !tbaa !16\l  %166 = fdiv contract float %163, %165\l  store float %166, float addrspace(1)* %41, align 4, !tbaa !16\l  %167 = add nuw nsw i32 %159, 1\l  %168 = add i32 %160, 1\l  %169 = icmp eq i32 %168, %27\l  br i1 %169, label %170, label %158, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x51a85e0:s0 -> Node0x51a25a0;
	Node0x51a85e0:s1 -> Node0x51a85e0;
	Node0x51a25a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%170:\l170:                                              \l  %171 = add nsw i32 %37, %21\l  %172 = icmp slt i32 %171, %0\l  br i1 %172, label %36, label %35, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x51a25a0:s0 -> Node0x51a1710;
	Node0x51a25a0:s1 -> Node0x51a1aa0;
}
