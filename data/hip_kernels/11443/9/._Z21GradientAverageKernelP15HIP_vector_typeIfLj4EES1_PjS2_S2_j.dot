digraph "CFG for '_Z21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_j' function" {
	label="CFG for '_Z21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_j' function";

	Node0x5bfc8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = shl i32 %7, 2\l  %14 = mul i32 %13, %12\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = shl nuw nsw i32 %15, 2\l  %18 = icmp ult i32 %16, %5\l  br i1 %18, label %19, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5bfc8f0:s0 -> Node0x5bfe970;
	Node0x5bfc8f0:s1 -> Node0x5bfea00;
	Node0x5bfe970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%19:\l19:                                               \l  %20 = sext i32 %16 to i64\l  %21 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %20\l  %22 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %17\l  %23 = bitcast %struct.HIP_vector_type addrspace(3)* %22 to i8 addrspace(3)*\l  %24 = bitcast %struct.HIP_vector_type addrspace(1)* %21 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p3i8.p1i8.i64(i8 addrspace(3)* noundef align 16\l... dereferenceable(16) %23, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %24, i64 16, i1 false)\l  %25 = add nuw nsw i32 %17, 1\l  br label %26\l}"];
	Node0x5bfe970 -> Node0x5bfea00;
	Node0x5bfea00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%26:\l26:                                               \l  %27 = phi i32 [ %25, %19 ], [ %17, %6 ]\l  %28 = add nsw i32 %16, 128\l  %29 = icmp ult i32 %28, %5\l  br i1 %29, label %30, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5bfea00:s0 -> Node0x5bff420;
	Node0x5bfea00:s1 -> Node0x5bff470;
	Node0x5bff420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%30:\l30:                                               \l  %31 = sext i32 %28 to i64\l  %32 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31\l  %33 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %27\l  %34 = bitcast %struct.HIP_vector_type addrspace(3)* %33 to i8 addrspace(3)*\l  %35 = bitcast %struct.HIP_vector_type addrspace(1)* %32 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p3i8.p1i8.i64(i8 addrspace(3)* noundef align 16\l... dereferenceable(16) %34, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %35, i64 16, i1 false)\l  %36 = add nuw nsw i32 %27, 1\l  br label %37\l}"];
	Node0x5bff420 -> Node0x5bff470;
	Node0x5bff470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%37:\l37:                                               \l  %38 = phi i32 [ %36, %30 ], [ %27, %26 ]\l  %39 = add nsw i32 %16, 256\l  %40 = icmp ult i32 %39, %5\l  br i1 %40, label %41, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5bff470:s0 -> Node0x5bffe20;
	Node0x5bff470:s1 -> Node0x5bffe70;
	Node0x5bffe20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%41:\l41:                                               \l  %42 = sext i32 %39 to i64\l  %43 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %42\l  %44 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %38\l  %45 = bitcast %struct.HIP_vector_type addrspace(3)* %44 to i8 addrspace(3)*\l  %46 = bitcast %struct.HIP_vector_type addrspace(1)* %43 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p3i8.p1i8.i64(i8 addrspace(3)* noundef align 16\l... dereferenceable(16) %45, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %46, i64 16, i1 false)\l  %47 = add nuw nsw i32 %38, 1\l  br label %48\l}"];
	Node0x5bffe20 -> Node0x5bffe70;
	Node0x5bffe70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%48:\l48:                                               \l  %49 = phi i32 [ %47, %41 ], [ %38, %37 ]\l  %50 = add nsw i32 %16, 384\l  %51 = icmp ult i32 %50, %5\l  br i1 %51, label %52, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5bffe70:s0 -> Node0x5c00670;
	Node0x5bffe70:s1 -> Node0x5c006c0;
	Node0x5c00670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%52:\l52:                                               \l  %53 = sext i32 %50 to i64\l  %54 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %53\l  %55 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %49\l  %56 = bitcast %struct.HIP_vector_type addrspace(3)* %55 to i8 addrspace(3)*\l  %57 = bitcast %struct.HIP_vector_type addrspace(1)* %54 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p3i8.p1i8.i64(i8 addrspace(3)* noundef align 16\l... dereferenceable(16) %56, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %57, i64 16, i1 false)\l  br label %58\l}"];
	Node0x5c00670 -> Node0x5c006c0;
	Node0x5c006c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%58:\l58:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %18, label %59, label %253\l|{<s0>T|<s1>F}}"];
	Node0x5c006c0:s0 -> Node0x5c00ef0;
	Node0x5c006c0:s1 -> Node0x5c00f40;
	Node0x5c00ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%59:\l59:                                               \l  %60 = sext i32 %16 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %60\l  %62 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !7\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %60\l  %64 = load i32, i32 addrspace(1)* %63, align 4, !tbaa !7\l  %65 = add nuw nsw i32 %17, 1\l  %66 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %17, i32 0, i32 0, i32 0, i32 0\l  %67 = load float, float addrspace(3)* %66, align 16\l  %68 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %17, i32 0, i32 0, i32 0, i32 1\l  %69 = load float, float addrspace(3)* %68, align 4\l  %70 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %17, i32 0, i32 0, i32 0, i32 2\l  %71 = load float, float addrspace(3)* %70, align 8\l  %72 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %17, i32 0, i32 0, i32 0, i32 3\l  %73 = load float, float addrspace(3)* %72, align 4\l  %74 = icmp sgt i32 %64, 0\l  br i1 %74, label %75, label %240\l|{<s0>T|<s1>F}}"];
	Node0x5c00ef0:s0 -> Node0x5bff870;
	Node0x5c00ef0:s1 -> Node0x5c02510;
	Node0x5bff870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%75:\l75:                                               \l  %76 = and i32 %64, 7\l  %77 = icmp ult i32 %64, 8\l  br i1 %77, label %208, label %78\l|{<s0>T|<s1>F}}"];
	Node0x5bff870:s0 -> Node0x5c027a0;
	Node0x5bff870:s1 -> Node0x5c027f0;
	Node0x5c027f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%78:\l78:                                               \l  %79 = and i32 %64, -8\l  br label %80\l}"];
	Node0x5c027f0 -> Node0x5c029f0;
	Node0x5c029f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%80:\l80:                                               \l  %81 = phi float [ %67, %78 ], [ %202, %80 ]\l  %82 = phi float [ %69, %78 ], [ %203, %80 ]\l  %83 = phi float [ %71, %78 ], [ %204, %80 ]\l  %84 = phi i32 [ 0, %78 ], [ %205, %80 ]\l  %85 = phi i32 [ 0, %78 ], [ %206, %80 ]\l  %86 = add nsw i32 %84, %62\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %87\l  %89 = load i32, i32 addrspace(1)* %88, align 4, !tbaa !7\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %90, i32 0, i32 0, i32 0, i64 0\l  %92 = load float, float addrspace(1)* %91, align 16\l  %93 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %90, i32 0, i32 0, i32 0, i64 1\l  %94 = load float, float addrspace(1)* %93, align 4\l  %95 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %90, i32 0, i32 0, i32 0, i64 2\l  %96 = load float, float addrspace(1)* %95, align 8\l  %97 = fadd contract float %81, %92\l  %98 = fadd contract float %82, %94\l  %99 = fadd contract float %83, %96\l  %100 = or i32 %84, 1\l  %101 = add nsw i32 %100, %62\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %102\l  %104 = load i32, i32 addrspace(1)* %103, align 4, !tbaa !7\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %105, i32 0, i32 0, i32 0, i64 0\l  %107 = load float, float addrspace(1)* %106, align 16\l  %108 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %105, i32 0, i32 0, i32 0, i64 1\l  %109 = load float, float addrspace(1)* %108, align 4\l  %110 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %105, i32 0, i32 0, i32 0, i64 2\l  %111 = load float, float addrspace(1)* %110, align 8\l  %112 = fadd contract float %97, %107\l  %113 = fadd contract float %98, %109\l  %114 = fadd contract float %99, %111\l  %115 = or i32 %84, 2\l  %116 = add nsw i32 %115, %62\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %117\l  %119 = load i32, i32 addrspace(1)* %118, align 4, !tbaa !7\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %120, i32 0, i32 0, i32 0, i64 0\l  %122 = load float, float addrspace(1)* %121, align 16\l  %123 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %120, i32 0, i32 0, i32 0, i64 1\l  %124 = load float, float addrspace(1)* %123, align 4\l  %125 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %120, i32 0, i32 0, i32 0, i64 2\l  %126 = load float, float addrspace(1)* %125, align 8\l  %127 = fadd contract float %112, %122\l  %128 = fadd contract float %113, %124\l  %129 = fadd contract float %114, %126\l  %130 = or i32 %84, 3\l  %131 = add nsw i32 %130, %62\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %132\l  %134 = load i32, i32 addrspace(1)* %133, align 4, !tbaa !7\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %135, i32 0, i32 0, i32 0, i64 0\l  %137 = load float, float addrspace(1)* %136, align 16\l  %138 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %135, i32 0, i32 0, i32 0, i64 1\l  %139 = load float, float addrspace(1)* %138, align 4\l  %140 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %135, i32 0, i32 0, i32 0, i64 2\l  %141 = load float, float addrspace(1)* %140, align 8\l  %142 = fadd contract float %127, %137\l  %143 = fadd contract float %128, %139\l  %144 = fadd contract float %129, %141\l  %145 = or i32 %84, 4\l  %146 = add nsw i32 %145, %62\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %147\l  %149 = load i32, i32 addrspace(1)* %148, align 4, !tbaa !7\l  %150 = sext i32 %149 to i64\l  %151 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %150, i32 0, i32 0, i32 0, i64 0\l  %152 = load float, float addrspace(1)* %151, align 16\l  %153 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %150, i32 0, i32 0, i32 0, i64 1\l  %154 = load float, float addrspace(1)* %153, align 4\l  %155 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %150, i32 0, i32 0, i32 0, i64 2\l  %156 = load float, float addrspace(1)* %155, align 8\l  %157 = fadd contract float %142, %152\l  %158 = fadd contract float %143, %154\l  %159 = fadd contract float %144, %156\l  %160 = or i32 %84, 5\l  %161 = add nsw i32 %160, %62\l  %162 = sext i32 %161 to i64\l  %163 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %162\l  %164 = load i32, i32 addrspace(1)* %163, align 4, !tbaa !7\l  %165 = sext i32 %164 to i64\l  %166 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %165, i32 0, i32 0, i32 0, i64 0\l  %167 = load float, float addrspace(1)* %166, align 16\l  %168 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %165, i32 0, i32 0, i32 0, i64 1\l  %169 = load float, float addrspace(1)* %168, align 4\l  %170 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %165, i32 0, i32 0, i32 0, i64 2\l  %171 = load float, float addrspace(1)* %170, align 8\l  %172 = fadd contract float %157, %167\l  %173 = fadd contract float %158, %169\l  %174 = fadd contract float %159, %171\l  %175 = or i32 %84, 6\l  %176 = add nsw i32 %175, %62\l  %177 = sext i32 %176 to i64\l  %178 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %177\l  %179 = load i32, i32 addrspace(1)* %178, align 4, !tbaa !7\l  %180 = sext i32 %179 to i64\l  %181 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %180, i32 0, i32 0, i32 0, i64 0\l  %182 = load float, float addrspace(1)* %181, align 16\l  %183 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %180, i32 0, i32 0, i32 0, i64 1\l  %184 = load float, float addrspace(1)* %183, align 4\l  %185 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %180, i32 0, i32 0, i32 0, i64 2\l  %186 = load float, float addrspace(1)* %185, align 8\l  %187 = fadd contract float %172, %182\l  %188 = fadd contract float %173, %184\l  %189 = fadd contract float %174, %186\l  %190 = or i32 %84, 7\l  %191 = add nsw i32 %190, %62\l  %192 = sext i32 %191 to i64\l  %193 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %192\l  %194 = load i32, i32 addrspace(1)* %193, align 4, !tbaa !7\l  %195 = sext i32 %194 to i64\l  %196 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %195, i32 0, i32 0, i32 0, i64 0\l  %197 = load float, float addrspace(1)* %196, align 16\l  %198 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %195, i32 0, i32 0, i32 0, i64 1\l  %199 = load float, float addrspace(1)* %198, align 4\l  %200 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %195, i32 0, i32 0, i32 0, i64 2\l  %201 = load float, float addrspace(1)* %200, align 8\l  %202 = fadd contract float %187, %197\l  %203 = fadd contract float %188, %199\l  %204 = fadd contract float %189, %201\l  %205 = add nuw nsw i32 %84, 8\l  %206 = add i32 %85, 8\l  %207 = icmp eq i32 %206, %79\l  br i1 %207, label %208, label %80, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5c029f0:s0 -> Node0x5c027a0;
	Node0x5c029f0:s1 -> Node0x5c029f0;
	Node0x5c027a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%208:\l208:                                              \l  %209 = phi float [ undef, %75 ], [ %202, %80 ]\l  %210 = phi float [ undef, %75 ], [ %203, %80 ]\l  %211 = phi float [ undef, %75 ], [ %204, %80 ]\l  %212 = phi float [ %67, %75 ], [ %202, %80 ]\l  %213 = phi float [ %69, %75 ], [ %203, %80 ]\l  %214 = phi float [ %71, %75 ], [ %204, %80 ]\l  %215 = phi i32 [ 0, %75 ], [ %205, %80 ]\l  %216 = icmp eq i32 %76, 0\l  br i1 %216, label %240, label %217\l|{<s0>T|<s1>F}}"];
	Node0x5c027a0:s0 -> Node0x5c02510;
	Node0x5c027a0:s1 -> Node0x5c08890;
	Node0x5c08890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%217:\l217:                                              \l  %218 = phi float [ %234, %217 ], [ %212, %208 ]\l  %219 = phi float [ %235, %217 ], [ %213, %208 ]\l  %220 = phi float [ %236, %217 ], [ %214, %208 ]\l  %221 = phi i32 [ %237, %217 ], [ %215, %208 ]\l  %222 = phi i32 [ %238, %217 ], [ 0, %208 ]\l  %223 = add nsw i32 %221, %62\l  %224 = sext i32 %223 to i64\l  %225 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %224\l  %226 = load i32, i32 addrspace(1)* %225, align 4, !tbaa !7\l  %227 = sext i32 %226 to i64\l  %228 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %227, i32 0, i32 0, i32 0, i64 0\l  %229 = load float, float addrspace(1)* %228, align 16\l  %230 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %227, i32 0, i32 0, i32 0, i64 1\l  %231 = load float, float addrspace(1)* %230, align 4\l  %232 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %227, i32 0, i32 0, i32 0, i64 2\l  %233 = load float, float addrspace(1)* %232, align 8\l  %234 = fadd contract float %218, %229\l  %235 = fadd contract float %219, %231\l  %236 = fadd contract float %220, %233\l  %237 = add nuw nsw i32 %221, 1\l  %238 = add i32 %222, 1\l  %239 = icmp eq i32 %238, %76\l  br i1 %239, label %240, label %217, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5c08890:s0 -> Node0x5c02510;
	Node0x5c08890:s1 -> Node0x5c08890;
	Node0x5c02510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%240:\l240:                                              \l  %241 = phi float [ %71, %59 ], [ %211, %208 ], [ %236, %217 ]\l  %242 = phi float [ %69, %59 ], [ %210, %208 ], [ %235, %217 ]\l  %243 = phi float [ %67, %59 ], [ %209, %208 ], [ %234, %217 ]\l  %244 = add nsw i32 %64, 1\l  %245 = sitofp i32 %244 to float\l  %246 = fdiv contract float %243, %245\l  %247 = fdiv contract float %242, %245\l  %248 = fdiv contract float %241, %245\l  %249 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %60, i32 0, i32 0, i32 0, i64 0\l  store float %246, float addrspace(1)* %249, align 16\l  %250 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %60, i32 0, i32 0, i32 0, i64 1\l  store float %247, float addrspace(1)* %250, align 4\l  %251 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %60, i32 0, i32 0, i32 0, i64 2\l  store float %248, float addrspace(1)* %251, align 8\l  %252 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %60, i32 0, i32 0, i32 0, i64 3\l  store float %73, float addrspace(1)* %252, align 4\l  br label %253\l}"];
	Node0x5c02510 -> Node0x5c00f40;
	Node0x5c00f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%253:\l253:                                              \l  %254 = phi i32 [ %65, %240 ], [ %17, %58 ]\l  %255 = icmp ult i32 %28, %5\l  br i1 %255, label %256, label %450\l|{<s0>T|<s1>F}}"];
	Node0x5c00f40:s0 -> Node0x5c0a6d0;
	Node0x5c00f40:s1 -> Node0x5c0a720;
	Node0x5c0a6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%256:\l256:                                              \l  %257 = sext i32 %28 to i64\l  %258 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %257\l  %259 = load i32, i32 addrspace(1)* %258, align 4, !tbaa !7\l  %260 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %257\l  %261 = load i32, i32 addrspace(1)* %260, align 4, !tbaa !7\l  %262 = add nsw i32 %254, 1\l  %263 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %254, i32 0, i32 0, i32 0, i32 0\l  %264 = load float, float addrspace(3)* %263, align 16\l  %265 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %254, i32 0, i32 0, i32 0, i32 1\l  %266 = load float, float addrspace(3)* %265, align 4\l  %267 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %254, i32 0, i32 0, i32 0, i32 2\l  %268 = load float, float addrspace(3)* %267, align 8\l  %269 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %254, i32 0, i32 0, i32 0, i32 3\l  %270 = load float, float addrspace(3)* %269, align 4\l  %271 = icmp sgt i32 %261, 0\l  br i1 %271, label %272, label %437\l|{<s0>T|<s1>F}}"];
	Node0x5c0a6d0:s0 -> Node0x5c053c0;
	Node0x5c0a6d0:s1 -> Node0x5c0ba70;
	Node0x5c053c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%272:\l272:                                              \l  %273 = and i32 %261, 7\l  %274 = icmp ult i32 %261, 8\l  br i1 %274, label %405, label %275\l|{<s0>T|<s1>F}}"];
	Node0x5c053c0:s0 -> Node0x5c0bc90;
	Node0x5c053c0:s1 -> Node0x5c0bce0;
	Node0x5c0bce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%275:\l275:                                              \l  %276 = and i32 %261, -8\l  br label %277\l}"];
	Node0x5c0bce0 -> Node0x5c0beb0;
	Node0x5c0beb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%277:\l277:                                              \l  %278 = phi float [ %264, %275 ], [ %399, %277 ]\l  %279 = phi float [ %266, %275 ], [ %400, %277 ]\l  %280 = phi float [ %268, %275 ], [ %401, %277 ]\l  %281 = phi i32 [ 0, %275 ], [ %402, %277 ]\l  %282 = phi i32 [ 0, %275 ], [ %403, %277 ]\l  %283 = add nsw i32 %281, %259\l  %284 = sext i32 %283 to i64\l  %285 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %284\l  %286 = load i32, i32 addrspace(1)* %285, align 4, !tbaa !7\l  %287 = sext i32 %286 to i64\l  %288 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %287, i32 0, i32 0, i32 0, i64 0\l  %289 = load float, float addrspace(1)* %288, align 16\l  %290 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %287, i32 0, i32 0, i32 0, i64 1\l  %291 = load float, float addrspace(1)* %290, align 4\l  %292 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %287, i32 0, i32 0, i32 0, i64 2\l  %293 = load float, float addrspace(1)* %292, align 8\l  %294 = fadd contract float %278, %289\l  %295 = fadd contract float %279, %291\l  %296 = fadd contract float %280, %293\l  %297 = or i32 %281, 1\l  %298 = add nsw i32 %297, %259\l  %299 = sext i32 %298 to i64\l  %300 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %299\l  %301 = load i32, i32 addrspace(1)* %300, align 4, !tbaa !7\l  %302 = sext i32 %301 to i64\l  %303 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %302, i32 0, i32 0, i32 0, i64 0\l  %304 = load float, float addrspace(1)* %303, align 16\l  %305 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %302, i32 0, i32 0, i32 0, i64 1\l  %306 = load float, float addrspace(1)* %305, align 4\l  %307 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %302, i32 0, i32 0, i32 0, i64 2\l  %308 = load float, float addrspace(1)* %307, align 8\l  %309 = fadd contract float %294, %304\l  %310 = fadd contract float %295, %306\l  %311 = fadd contract float %296, %308\l  %312 = or i32 %281, 2\l  %313 = add nsw i32 %312, %259\l  %314 = sext i32 %313 to i64\l  %315 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %314\l  %316 = load i32, i32 addrspace(1)* %315, align 4, !tbaa !7\l  %317 = sext i32 %316 to i64\l  %318 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %317, i32 0, i32 0, i32 0, i64 0\l  %319 = load float, float addrspace(1)* %318, align 16\l  %320 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %317, i32 0, i32 0, i32 0, i64 1\l  %321 = load float, float addrspace(1)* %320, align 4\l  %322 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %317, i32 0, i32 0, i32 0, i64 2\l  %323 = load float, float addrspace(1)* %322, align 8\l  %324 = fadd contract float %309, %319\l  %325 = fadd contract float %310, %321\l  %326 = fadd contract float %311, %323\l  %327 = or i32 %281, 3\l  %328 = add nsw i32 %327, %259\l  %329 = sext i32 %328 to i64\l  %330 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %329\l  %331 = load i32, i32 addrspace(1)* %330, align 4, !tbaa !7\l  %332 = sext i32 %331 to i64\l  %333 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %332, i32 0, i32 0, i32 0, i64 0\l  %334 = load float, float addrspace(1)* %333, align 16\l  %335 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %332, i32 0, i32 0, i32 0, i64 1\l  %336 = load float, float addrspace(1)* %335, align 4\l  %337 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %332, i32 0, i32 0, i32 0, i64 2\l  %338 = load float, float addrspace(1)* %337, align 8\l  %339 = fadd contract float %324, %334\l  %340 = fadd contract float %325, %336\l  %341 = fadd contract float %326, %338\l  %342 = or i32 %281, 4\l  %343 = add nsw i32 %342, %259\l  %344 = sext i32 %343 to i64\l  %345 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %344\l  %346 = load i32, i32 addrspace(1)* %345, align 4, !tbaa !7\l  %347 = sext i32 %346 to i64\l  %348 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %347, i32 0, i32 0, i32 0, i64 0\l  %349 = load float, float addrspace(1)* %348, align 16\l  %350 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %347, i32 0, i32 0, i32 0, i64 1\l  %351 = load float, float addrspace(1)* %350, align 4\l  %352 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %347, i32 0, i32 0, i32 0, i64 2\l  %353 = load float, float addrspace(1)* %352, align 8\l  %354 = fadd contract float %339, %349\l  %355 = fadd contract float %340, %351\l  %356 = fadd contract float %341, %353\l  %357 = or i32 %281, 5\l  %358 = add nsw i32 %357, %259\l  %359 = sext i32 %358 to i64\l  %360 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %359\l  %361 = load i32, i32 addrspace(1)* %360, align 4, !tbaa !7\l  %362 = sext i32 %361 to i64\l  %363 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %362, i32 0, i32 0, i32 0, i64 0\l  %364 = load float, float addrspace(1)* %363, align 16\l  %365 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %362, i32 0, i32 0, i32 0, i64 1\l  %366 = load float, float addrspace(1)* %365, align 4\l  %367 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %362, i32 0, i32 0, i32 0, i64 2\l  %368 = load float, float addrspace(1)* %367, align 8\l  %369 = fadd contract float %354, %364\l  %370 = fadd contract float %355, %366\l  %371 = fadd contract float %356, %368\l  %372 = or i32 %281, 6\l  %373 = add nsw i32 %372, %259\l  %374 = sext i32 %373 to i64\l  %375 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %374\l  %376 = load i32, i32 addrspace(1)* %375, align 4, !tbaa !7\l  %377 = sext i32 %376 to i64\l  %378 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %377, i32 0, i32 0, i32 0, i64 0\l  %379 = load float, float addrspace(1)* %378, align 16\l  %380 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %377, i32 0, i32 0, i32 0, i64 1\l  %381 = load float, float addrspace(1)* %380, align 4\l  %382 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %377, i32 0, i32 0, i32 0, i64 2\l  %383 = load float, float addrspace(1)* %382, align 8\l  %384 = fadd contract float %369, %379\l  %385 = fadd contract float %370, %381\l  %386 = fadd contract float %371, %383\l  %387 = or i32 %281, 7\l  %388 = add nsw i32 %387, %259\l  %389 = sext i32 %388 to i64\l  %390 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %389\l  %391 = load i32, i32 addrspace(1)* %390, align 4, !tbaa !7\l  %392 = sext i32 %391 to i64\l  %393 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %392, i32 0, i32 0, i32 0, i64 0\l  %394 = load float, float addrspace(1)* %393, align 16\l  %395 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %392, i32 0, i32 0, i32 0, i64 1\l  %396 = load float, float addrspace(1)* %395, align 4\l  %397 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %392, i32 0, i32 0, i32 0, i64 2\l  %398 = load float, float addrspace(1)* %397, align 8\l  %399 = fadd contract float %384, %394\l  %400 = fadd contract float %385, %396\l  %401 = fadd contract float %386, %398\l  %402 = add nuw nsw i32 %281, 8\l  %403 = add i32 %282, 8\l  %404 = icmp eq i32 %403, %276\l  br i1 %404, label %405, label %277, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5c0beb0:s0 -> Node0x5c0bc90;
	Node0x5c0beb0:s1 -> Node0x5c0beb0;
	Node0x5c0bc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%405:\l405:                                              \l  %406 = phi float [ undef, %272 ], [ %399, %277 ]\l  %407 = phi float [ undef, %272 ], [ %400, %277 ]\l  %408 = phi float [ undef, %272 ], [ %401, %277 ]\l  %409 = phi float [ %264, %272 ], [ %399, %277 ]\l  %410 = phi float [ %266, %272 ], [ %400, %277 ]\l  %411 = phi float [ %268, %272 ], [ %401, %277 ]\l  %412 = phi i32 [ 0, %272 ], [ %402, %277 ]\l  %413 = icmp eq i32 %273, 0\l  br i1 %413, label %437, label %414\l|{<s0>T|<s1>F}}"];
	Node0x5c0bc90:s0 -> Node0x5c0ba70;
	Node0x5c0bc90:s1 -> Node0x5c11cb0;
	Node0x5c11cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%414:\l414:                                              \l  %415 = phi float [ %431, %414 ], [ %409, %405 ]\l  %416 = phi float [ %432, %414 ], [ %410, %405 ]\l  %417 = phi float [ %433, %414 ], [ %411, %405 ]\l  %418 = phi i32 [ %434, %414 ], [ %412, %405 ]\l  %419 = phi i32 [ %435, %414 ], [ 0, %405 ]\l  %420 = add nsw i32 %418, %259\l  %421 = sext i32 %420 to i64\l  %422 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %421\l  %423 = load i32, i32 addrspace(1)* %422, align 4, !tbaa !7\l  %424 = sext i32 %423 to i64\l  %425 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %424, i32 0, i32 0, i32 0, i64 0\l  %426 = load float, float addrspace(1)* %425, align 16\l  %427 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %424, i32 0, i32 0, i32 0, i64 1\l  %428 = load float, float addrspace(1)* %427, align 4\l  %429 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %424, i32 0, i32 0, i32 0, i64 2\l  %430 = load float, float addrspace(1)* %429, align 8\l  %431 = fadd contract float %415, %426\l  %432 = fadd contract float %416, %428\l  %433 = fadd contract float %417, %430\l  %434 = add nuw nsw i32 %418, 1\l  %435 = add i32 %419, 1\l  %436 = icmp eq i32 %435, %273\l  br i1 %436, label %437, label %414, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5c11cb0:s0 -> Node0x5c0ba70;
	Node0x5c11cb0:s1 -> Node0x5c11cb0;
	Node0x5c0ba70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%437:\l437:                                              \l  %438 = phi float [ %268, %256 ], [ %408, %405 ], [ %433, %414 ]\l  %439 = phi float [ %266, %256 ], [ %407, %405 ], [ %432, %414 ]\l  %440 = phi float [ %264, %256 ], [ %406, %405 ], [ %431, %414 ]\l  %441 = add nsw i32 %261, 1\l  %442 = sitofp i32 %441 to float\l  %443 = fdiv contract float %440, %442\l  %444 = fdiv contract float %439, %442\l  %445 = fdiv contract float %438, %442\l  %446 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %257, i32 0, i32 0, i32 0, i64 0\l  store float %443, float addrspace(1)* %446, align 16\l  %447 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %257, i32 0, i32 0, i32 0, i64 1\l  store float %444, float addrspace(1)* %447, align 4\l  %448 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %257, i32 0, i32 0, i32 0, i64 2\l  store float %445, float addrspace(1)* %448, align 8\l  %449 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %257, i32 0, i32 0, i32 0, i64 3\l  store float %270, float addrspace(1)* %449, align 4\l  br label %450\l}"];
	Node0x5c0ba70 -> Node0x5c0a720;
	Node0x5c0a720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%450:\l450:                                              \l  %451 = phi i32 [ %262, %437 ], [ %254, %253 ]\l  %452 = add nsw i32 %16, 256\l  %453 = icmp ult i32 %452, %5\l  br i1 %453, label %454, label %648\l|{<s0>T|<s1>F}}"];
	Node0x5c0a720:s0 -> Node0x5c13b30;
	Node0x5c0a720:s1 -> Node0x5c13b80;
	Node0x5c13b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%454:\l454:                                              \l  %455 = sext i32 %452 to i64\l  %456 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %455\l  %457 = load i32, i32 addrspace(1)* %456, align 4, !tbaa !7\l  %458 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %455\l  %459 = load i32, i32 addrspace(1)* %458, align 4, !tbaa !7\l  %460 = add nsw i32 %451, 1\l  %461 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %451, i32 0, i32 0, i32 0, i32 0\l  %462 = load float, float addrspace(3)* %461, align 16\l  %463 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %451, i32 0, i32 0, i32 0, i32 1\l  %464 = load float, float addrspace(3)* %463, align 4\l  %465 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %451, i32 0, i32 0, i32 0, i32 2\l  %466 = load float, float addrspace(3)* %465, align 8\l  %467 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %451, i32 0, i32 0, i32 0, i32 3\l  %468 = load float, float addrspace(3)* %467, align 4\l  %469 = icmp sgt i32 %459, 0\l  br i1 %469, label %470, label %635\l|{<s0>T|<s1>F}}"];
	Node0x5c13b30:s0 -> Node0x5c146f0;
	Node0x5c13b30:s1 -> Node0x5c14740;
	Node0x5c146f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%470:\l470:                                              \l  %471 = and i32 %459, 7\l  %472 = icmp ult i32 %459, 8\l  br i1 %472, label %603, label %473\l|{<s0>T|<s1>F}}"];
	Node0x5c146f0:s0 -> Node0x5c14960;
	Node0x5c146f0:s1 -> Node0x5c149b0;
	Node0x5c149b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%473:\l473:                                              \l  %474 = and i32 %459, -8\l  br label %475\l}"];
	Node0x5c149b0 -> Node0x5c14b40;
	Node0x5c14b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%475:\l475:                                              \l  %476 = phi float [ %462, %473 ], [ %597, %475 ]\l  %477 = phi float [ %464, %473 ], [ %598, %475 ]\l  %478 = phi float [ %466, %473 ], [ %599, %475 ]\l  %479 = phi i32 [ 0, %473 ], [ %600, %475 ]\l  %480 = phi i32 [ 0, %473 ], [ %601, %475 ]\l  %481 = add nsw i32 %479, %457\l  %482 = sext i32 %481 to i64\l  %483 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %482\l  %484 = load i32, i32 addrspace(1)* %483, align 4, !tbaa !7\l  %485 = sext i32 %484 to i64\l  %486 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %485, i32 0, i32 0, i32 0, i64 0\l  %487 = load float, float addrspace(1)* %486, align 16\l  %488 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %485, i32 0, i32 0, i32 0, i64 1\l  %489 = load float, float addrspace(1)* %488, align 4\l  %490 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %485, i32 0, i32 0, i32 0, i64 2\l  %491 = load float, float addrspace(1)* %490, align 8\l  %492 = fadd contract float %476, %487\l  %493 = fadd contract float %477, %489\l  %494 = fadd contract float %478, %491\l  %495 = or i32 %479, 1\l  %496 = add nsw i32 %495, %457\l  %497 = sext i32 %496 to i64\l  %498 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %497\l  %499 = load i32, i32 addrspace(1)* %498, align 4, !tbaa !7\l  %500 = sext i32 %499 to i64\l  %501 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %500, i32 0, i32 0, i32 0, i64 0\l  %502 = load float, float addrspace(1)* %501, align 16\l  %503 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %500, i32 0, i32 0, i32 0, i64 1\l  %504 = load float, float addrspace(1)* %503, align 4\l  %505 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %500, i32 0, i32 0, i32 0, i64 2\l  %506 = load float, float addrspace(1)* %505, align 8\l  %507 = fadd contract float %492, %502\l  %508 = fadd contract float %493, %504\l  %509 = fadd contract float %494, %506\l  %510 = or i32 %479, 2\l  %511 = add nsw i32 %510, %457\l  %512 = sext i32 %511 to i64\l  %513 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %512\l  %514 = load i32, i32 addrspace(1)* %513, align 4, !tbaa !7\l  %515 = sext i32 %514 to i64\l  %516 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %515, i32 0, i32 0, i32 0, i64 0\l  %517 = load float, float addrspace(1)* %516, align 16\l  %518 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %515, i32 0, i32 0, i32 0, i64 1\l  %519 = load float, float addrspace(1)* %518, align 4\l  %520 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %515, i32 0, i32 0, i32 0, i64 2\l  %521 = load float, float addrspace(1)* %520, align 8\l  %522 = fadd contract float %507, %517\l  %523 = fadd contract float %508, %519\l  %524 = fadd contract float %509, %521\l  %525 = or i32 %479, 3\l  %526 = add nsw i32 %525, %457\l  %527 = sext i32 %526 to i64\l  %528 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %527\l  %529 = load i32, i32 addrspace(1)* %528, align 4, !tbaa !7\l  %530 = sext i32 %529 to i64\l  %531 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %530, i32 0, i32 0, i32 0, i64 0\l  %532 = load float, float addrspace(1)* %531, align 16\l  %533 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %530, i32 0, i32 0, i32 0, i64 1\l  %534 = load float, float addrspace(1)* %533, align 4\l  %535 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %530, i32 0, i32 0, i32 0, i64 2\l  %536 = load float, float addrspace(1)* %535, align 8\l  %537 = fadd contract float %522, %532\l  %538 = fadd contract float %523, %534\l  %539 = fadd contract float %524, %536\l  %540 = or i32 %479, 4\l  %541 = add nsw i32 %540, %457\l  %542 = sext i32 %541 to i64\l  %543 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %542\l  %544 = load i32, i32 addrspace(1)* %543, align 4, !tbaa !7\l  %545 = sext i32 %544 to i64\l  %546 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %545, i32 0, i32 0, i32 0, i64 0\l  %547 = load float, float addrspace(1)* %546, align 16\l  %548 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %545, i32 0, i32 0, i32 0, i64 1\l  %549 = load float, float addrspace(1)* %548, align 4\l  %550 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %545, i32 0, i32 0, i32 0, i64 2\l  %551 = load float, float addrspace(1)* %550, align 8\l  %552 = fadd contract float %537, %547\l  %553 = fadd contract float %538, %549\l  %554 = fadd contract float %539, %551\l  %555 = or i32 %479, 5\l  %556 = add nsw i32 %555, %457\l  %557 = sext i32 %556 to i64\l  %558 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %557\l  %559 = load i32, i32 addrspace(1)* %558, align 4, !tbaa !7\l  %560 = sext i32 %559 to i64\l  %561 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %560, i32 0, i32 0, i32 0, i64 0\l  %562 = load float, float addrspace(1)* %561, align 16\l  %563 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %560, i32 0, i32 0, i32 0, i64 1\l  %564 = load float, float addrspace(1)* %563, align 4\l  %565 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %560, i32 0, i32 0, i32 0, i64 2\l  %566 = load float, float addrspace(1)* %565, align 8\l  %567 = fadd contract float %552, %562\l  %568 = fadd contract float %553, %564\l  %569 = fadd contract float %554, %566\l  %570 = or i32 %479, 6\l  %571 = add nsw i32 %570, %457\l  %572 = sext i32 %571 to i64\l  %573 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %572\l  %574 = load i32, i32 addrspace(1)* %573, align 4, !tbaa !7\l  %575 = sext i32 %574 to i64\l  %576 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %575, i32 0, i32 0, i32 0, i64 0\l  %577 = load float, float addrspace(1)* %576, align 16\l  %578 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %575, i32 0, i32 0, i32 0, i64 1\l  %579 = load float, float addrspace(1)* %578, align 4\l  %580 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %575, i32 0, i32 0, i32 0, i64 2\l  %581 = load float, float addrspace(1)* %580, align 8\l  %582 = fadd contract float %567, %577\l  %583 = fadd contract float %568, %579\l  %584 = fadd contract float %569, %581\l  %585 = or i32 %479, 7\l  %586 = add nsw i32 %585, %457\l  %587 = sext i32 %586 to i64\l  %588 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %587\l  %589 = load i32, i32 addrspace(1)* %588, align 4, !tbaa !7\l  %590 = sext i32 %589 to i64\l  %591 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %590, i32 0, i32 0, i32 0, i64 0\l  %592 = load float, float addrspace(1)* %591, align 16\l  %593 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %590, i32 0, i32 0, i32 0, i64 1\l  %594 = load float, float addrspace(1)* %593, align 4\l  %595 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %590, i32 0, i32 0, i32 0, i64 2\l  %596 = load float, float addrspace(1)* %595, align 8\l  %597 = fadd contract float %582, %592\l  %598 = fadd contract float %583, %594\l  %599 = fadd contract float %584, %596\l  %600 = add nuw nsw i32 %479, 8\l  %601 = add i32 %480, 8\l  %602 = icmp eq i32 %601, %474\l  br i1 %602, label %603, label %475, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5c14b40:s0 -> Node0x5c14960;
	Node0x5c14b40:s1 -> Node0x5c14b40;
	Node0x5c14960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%603:\l603:                                              \l  %604 = phi float [ undef, %470 ], [ %597, %475 ]\l  %605 = phi float [ undef, %470 ], [ %598, %475 ]\l  %606 = phi float [ undef, %470 ], [ %599, %475 ]\l  %607 = phi float [ %462, %470 ], [ %597, %475 ]\l  %608 = phi float [ %464, %470 ], [ %598, %475 ]\l  %609 = phi float [ %466, %470 ], [ %599, %475 ]\l  %610 = phi i32 [ 0, %470 ], [ %600, %475 ]\l  %611 = icmp eq i32 %471, 0\l  br i1 %611, label %635, label %612\l|{<s0>T|<s1>F}}"];
	Node0x5c14960:s0 -> Node0x5c14740;
	Node0x5c14960:s1 -> Node0x5c1b320;
	Node0x5c1b320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%612:\l612:                                              \l  %613 = phi float [ %629, %612 ], [ %607, %603 ]\l  %614 = phi float [ %630, %612 ], [ %608, %603 ]\l  %615 = phi float [ %631, %612 ], [ %609, %603 ]\l  %616 = phi i32 [ %632, %612 ], [ %610, %603 ]\l  %617 = phi i32 [ %633, %612 ], [ 0, %603 ]\l  %618 = add nsw i32 %616, %457\l  %619 = sext i32 %618 to i64\l  %620 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %619\l  %621 = load i32, i32 addrspace(1)* %620, align 4, !tbaa !7\l  %622 = sext i32 %621 to i64\l  %623 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %622, i32 0, i32 0, i32 0, i64 0\l  %624 = load float, float addrspace(1)* %623, align 16\l  %625 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %622, i32 0, i32 0, i32 0, i64 1\l  %626 = load float, float addrspace(1)* %625, align 4\l  %627 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %622, i32 0, i32 0, i32 0, i64 2\l  %628 = load float, float addrspace(1)* %627, align 8\l  %629 = fadd contract float %613, %624\l  %630 = fadd contract float %614, %626\l  %631 = fadd contract float %615, %628\l  %632 = add nuw nsw i32 %616, 1\l  %633 = add i32 %617, 1\l  %634 = icmp eq i32 %633, %471\l  br i1 %634, label %635, label %612, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5c1b320:s0 -> Node0x5c14740;
	Node0x5c1b320:s1 -> Node0x5c1b320;
	Node0x5c14740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%635:\l635:                                              \l  %636 = phi float [ %466, %454 ], [ %606, %603 ], [ %631, %612 ]\l  %637 = phi float [ %464, %454 ], [ %605, %603 ], [ %630, %612 ]\l  %638 = phi float [ %462, %454 ], [ %604, %603 ], [ %629, %612 ]\l  %639 = add nsw i32 %459, 1\l  %640 = sitofp i32 %639 to float\l  %641 = fdiv contract float %638, %640\l  %642 = fdiv contract float %637, %640\l  %643 = fdiv contract float %636, %640\l  %644 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %455, i32 0, i32 0, i32 0, i64 0\l  store float %641, float addrspace(1)* %644, align 16\l  %645 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %455, i32 0, i32 0, i32 0, i64 1\l  store float %642, float addrspace(1)* %645, align 4\l  %646 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %455, i32 0, i32 0, i32 0, i64 2\l  store float %643, float addrspace(1)* %646, align 8\l  %647 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %455, i32 0, i32 0, i32 0, i64 3\l  store float %468, float addrspace(1)* %647, align 4\l  br label %648\l}"];
	Node0x5c14740 -> Node0x5c13b80;
	Node0x5c13b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%648:\l648:                                              \l  %649 = phi i32 [ %460, %635 ], [ %451, %450 ]\l  %650 = add nsw i32 %16, 384\l  %651 = icmp ult i32 %650, %5\l  br i1 %651, label %652, label %845\l|{<s0>T|<s1>F}}"];
	Node0x5c13b80:s0 -> Node0x5c1d170;
	Node0x5c13b80:s1 -> Node0x5c1d1c0;
	Node0x5c1d170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%652:\l652:                                              \l  %653 = sext i32 %650 to i64\l  %654 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %653\l  %655 = load i32, i32 addrspace(1)* %654, align 4, !tbaa !7\l  %656 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %653\l  %657 = load i32, i32 addrspace(1)* %656, align 4, !tbaa !7\l  %658 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %649, i32 0, i32 0, i32 0, i32 0\l  %659 = load float, float addrspace(3)* %658, align 16\l  %660 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %649, i32 0, i32 0, i32 0, i32 1\l  %661 = load float, float addrspace(3)* %660, align 4\l  %662 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %649, i32 0, i32 0, i32 0, i32 2\l  %663 = load float, float addrspace(3)* %662, align 8\l  %664 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ21GradientAverageKernelP15HIP_vector_typeIfLj4EES1_PjS2_S2_jE2SI, i32 0,\l... i32 %649, i32 0, i32 0, i32 0, i32 3\l  %665 = load float, float addrspace(3)* %664, align 4\l  %666 = icmp sgt i32 %657, 0\l  br i1 %666, label %667, label %832\l|{<s0>T|<s1>F}}"];
	Node0x5c1d170:s0 -> Node0x5c1dca0;
	Node0x5c1d170:s1 -> Node0x5c1dcf0;
	Node0x5c1dca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%667:\l667:                                              \l  %668 = and i32 %657, 7\l  %669 = icmp ult i32 %657, 8\l  br i1 %669, label %800, label %670\l|{<s0>T|<s1>F}}"];
	Node0x5c1dca0:s0 -> Node0x5c1df10;
	Node0x5c1dca0:s1 -> Node0x5c1df60;
	Node0x5c1df60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%670:\l670:                                              \l  %671 = and i32 %657, -8\l  br label %672\l}"];
	Node0x5c1df60 -> Node0x5c1e0f0;
	Node0x5c1e0f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%672:\l672:                                              \l  %673 = phi float [ %659, %670 ], [ %794, %672 ]\l  %674 = phi float [ %661, %670 ], [ %795, %672 ]\l  %675 = phi float [ %663, %670 ], [ %796, %672 ]\l  %676 = phi i32 [ 0, %670 ], [ %797, %672 ]\l  %677 = phi i32 [ 0, %670 ], [ %798, %672 ]\l  %678 = add nsw i32 %676, %655\l  %679 = sext i32 %678 to i64\l  %680 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %679\l  %681 = load i32, i32 addrspace(1)* %680, align 4, !tbaa !7\l  %682 = sext i32 %681 to i64\l  %683 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %682, i32 0, i32 0, i32 0, i64 0\l  %684 = load float, float addrspace(1)* %683, align 16\l  %685 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %682, i32 0, i32 0, i32 0, i64 1\l  %686 = load float, float addrspace(1)* %685, align 4\l  %687 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %682, i32 0, i32 0, i32 0, i64 2\l  %688 = load float, float addrspace(1)* %687, align 8\l  %689 = fadd contract float %673, %684\l  %690 = fadd contract float %674, %686\l  %691 = fadd contract float %675, %688\l  %692 = or i32 %676, 1\l  %693 = add nsw i32 %692, %655\l  %694 = sext i32 %693 to i64\l  %695 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %694\l  %696 = load i32, i32 addrspace(1)* %695, align 4, !tbaa !7\l  %697 = sext i32 %696 to i64\l  %698 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %697, i32 0, i32 0, i32 0, i64 0\l  %699 = load float, float addrspace(1)* %698, align 16\l  %700 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %697, i32 0, i32 0, i32 0, i64 1\l  %701 = load float, float addrspace(1)* %700, align 4\l  %702 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %697, i32 0, i32 0, i32 0, i64 2\l  %703 = load float, float addrspace(1)* %702, align 8\l  %704 = fadd contract float %689, %699\l  %705 = fadd contract float %690, %701\l  %706 = fadd contract float %691, %703\l  %707 = or i32 %676, 2\l  %708 = add nsw i32 %707, %655\l  %709 = sext i32 %708 to i64\l  %710 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %709\l  %711 = load i32, i32 addrspace(1)* %710, align 4, !tbaa !7\l  %712 = sext i32 %711 to i64\l  %713 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %712, i32 0, i32 0, i32 0, i64 0\l  %714 = load float, float addrspace(1)* %713, align 16\l  %715 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %712, i32 0, i32 0, i32 0, i64 1\l  %716 = load float, float addrspace(1)* %715, align 4\l  %717 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %712, i32 0, i32 0, i32 0, i64 2\l  %718 = load float, float addrspace(1)* %717, align 8\l  %719 = fadd contract float %704, %714\l  %720 = fadd contract float %705, %716\l  %721 = fadd contract float %706, %718\l  %722 = or i32 %676, 3\l  %723 = add nsw i32 %722, %655\l  %724 = sext i32 %723 to i64\l  %725 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %724\l  %726 = load i32, i32 addrspace(1)* %725, align 4, !tbaa !7\l  %727 = sext i32 %726 to i64\l  %728 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %727, i32 0, i32 0, i32 0, i64 0\l  %729 = load float, float addrspace(1)* %728, align 16\l  %730 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %727, i32 0, i32 0, i32 0, i64 1\l  %731 = load float, float addrspace(1)* %730, align 4\l  %732 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %727, i32 0, i32 0, i32 0, i64 2\l  %733 = load float, float addrspace(1)* %732, align 8\l  %734 = fadd contract float %719, %729\l  %735 = fadd contract float %720, %731\l  %736 = fadd contract float %721, %733\l  %737 = or i32 %676, 4\l  %738 = add nsw i32 %737, %655\l  %739 = sext i32 %738 to i64\l  %740 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %739\l  %741 = load i32, i32 addrspace(1)* %740, align 4, !tbaa !7\l  %742 = sext i32 %741 to i64\l  %743 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %742, i32 0, i32 0, i32 0, i64 0\l  %744 = load float, float addrspace(1)* %743, align 16\l  %745 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %742, i32 0, i32 0, i32 0, i64 1\l  %746 = load float, float addrspace(1)* %745, align 4\l  %747 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %742, i32 0, i32 0, i32 0, i64 2\l  %748 = load float, float addrspace(1)* %747, align 8\l  %749 = fadd contract float %734, %744\l  %750 = fadd contract float %735, %746\l  %751 = fadd contract float %736, %748\l  %752 = or i32 %676, 5\l  %753 = add nsw i32 %752, %655\l  %754 = sext i32 %753 to i64\l  %755 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %754\l  %756 = load i32, i32 addrspace(1)* %755, align 4, !tbaa !7\l  %757 = sext i32 %756 to i64\l  %758 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %757, i32 0, i32 0, i32 0, i64 0\l  %759 = load float, float addrspace(1)* %758, align 16\l  %760 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %757, i32 0, i32 0, i32 0, i64 1\l  %761 = load float, float addrspace(1)* %760, align 4\l  %762 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %757, i32 0, i32 0, i32 0, i64 2\l  %763 = load float, float addrspace(1)* %762, align 8\l  %764 = fadd contract float %749, %759\l  %765 = fadd contract float %750, %761\l  %766 = fadd contract float %751, %763\l  %767 = or i32 %676, 6\l  %768 = add nsw i32 %767, %655\l  %769 = sext i32 %768 to i64\l  %770 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %769\l  %771 = load i32, i32 addrspace(1)* %770, align 4, !tbaa !7\l  %772 = sext i32 %771 to i64\l  %773 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %772, i32 0, i32 0, i32 0, i64 0\l  %774 = load float, float addrspace(1)* %773, align 16\l  %775 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %772, i32 0, i32 0, i32 0, i64 1\l  %776 = load float, float addrspace(1)* %775, align 4\l  %777 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %772, i32 0, i32 0, i32 0, i64 2\l  %778 = load float, float addrspace(1)* %777, align 8\l  %779 = fadd contract float %764, %774\l  %780 = fadd contract float %765, %776\l  %781 = fadd contract float %766, %778\l  %782 = or i32 %676, 7\l  %783 = add nsw i32 %782, %655\l  %784 = sext i32 %783 to i64\l  %785 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %784\l  %786 = load i32, i32 addrspace(1)* %785, align 4, !tbaa !7\l  %787 = sext i32 %786 to i64\l  %788 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %787, i32 0, i32 0, i32 0, i64 0\l  %789 = load float, float addrspace(1)* %788, align 16\l  %790 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %787, i32 0, i32 0, i32 0, i64 1\l  %791 = load float, float addrspace(1)* %790, align 4\l  %792 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %787, i32 0, i32 0, i32 0, i64 2\l  %793 = load float, float addrspace(1)* %792, align 8\l  %794 = fadd contract float %779, %789\l  %795 = fadd contract float %780, %791\l  %796 = fadd contract float %781, %793\l  %797 = add nuw nsw i32 %676, 8\l  %798 = add i32 %677, 8\l  %799 = icmp eq i32 %798, %671\l  br i1 %799, label %800, label %672, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5c1e0f0:s0 -> Node0x5c1df10;
	Node0x5c1e0f0:s1 -> Node0x5c1e0f0;
	Node0x5c1df10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%800:\l800:                                              \l  %801 = phi float [ undef, %667 ], [ %794, %672 ]\l  %802 = phi float [ undef, %667 ], [ %795, %672 ]\l  %803 = phi float [ undef, %667 ], [ %796, %672 ]\l  %804 = phi float [ %659, %667 ], [ %794, %672 ]\l  %805 = phi float [ %661, %667 ], [ %795, %672 ]\l  %806 = phi float [ %663, %667 ], [ %796, %672 ]\l  %807 = phi i32 [ 0, %667 ], [ %797, %672 ]\l  %808 = icmp eq i32 %668, 0\l  br i1 %808, label %832, label %809\l|{<s0>T|<s1>F}}"];
	Node0x5c1df10:s0 -> Node0x5c1dcf0;
	Node0x5c1df10:s1 -> Node0x5c242b0;
	Node0x5c242b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%809:\l809:                                              \l  %810 = phi float [ %826, %809 ], [ %804, %800 ]\l  %811 = phi float [ %827, %809 ], [ %805, %800 ]\l  %812 = phi float [ %828, %809 ], [ %806, %800 ]\l  %813 = phi i32 [ %829, %809 ], [ %807, %800 ]\l  %814 = phi i32 [ %830, %809 ], [ 0, %800 ]\l  %815 = add nsw i32 %813, %655\l  %816 = sext i32 %815 to i64\l  %817 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %816\l  %818 = load i32, i32 addrspace(1)* %817, align 4, !tbaa !7\l  %819 = sext i32 %818 to i64\l  %820 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %819, i32 0, i32 0, i32 0, i64 0\l  %821 = load float, float addrspace(1)* %820, align 16\l  %822 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %819, i32 0, i32 0, i32 0, i64 1\l  %823 = load float, float addrspace(1)* %822, align 4\l  %824 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %819, i32 0, i32 0, i32 0, i64 2\l  %825 = load float, float addrspace(1)* %824, align 8\l  %826 = fadd contract float %810, %821\l  %827 = fadd contract float %811, %823\l  %828 = fadd contract float %812, %825\l  %829 = add nuw nsw i32 %813, 1\l  %830 = add i32 %814, 1\l  %831 = icmp eq i32 %830, %668\l  br i1 %831, label %832, label %809, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5c242b0:s0 -> Node0x5c1dcf0;
	Node0x5c242b0:s1 -> Node0x5c242b0;
	Node0x5c1dcf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%832:\l832:                                              \l  %833 = phi float [ %663, %652 ], [ %803, %800 ], [ %828, %809 ]\l  %834 = phi float [ %661, %652 ], [ %802, %800 ], [ %827, %809 ]\l  %835 = phi float [ %659, %652 ], [ %801, %800 ], [ %826, %809 ]\l  %836 = add nsw i32 %657, 1\l  %837 = sitofp i32 %836 to float\l  %838 = fdiv contract float %835, %837\l  %839 = fdiv contract float %834, %837\l  %840 = fdiv contract float %833, %837\l  %841 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %653, i32 0, i32 0, i32 0, i64 0\l  store float %838, float addrspace(1)* %841, align 16\l  %842 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %653, i32 0, i32 0, i32 0, i64 1\l  store float %839, float addrspace(1)* %842, align 4\l  %843 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %653, i32 0, i32 0, i32 0, i64 2\l  store float %840, float addrspace(1)* %843, align 8\l  %844 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %653, i32 0, i32 0, i32 0, i64 3\l  store float %665, float addrspace(1)* %844, align 4\l  br label %845\l}"];
	Node0x5c1dcf0 -> Node0x5c1d1c0;
	Node0x5c1d1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%845:\l845:                                              \l  ret void\l}"];
}
