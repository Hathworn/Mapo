digraph "CFG for '_Z34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jf' function" {
	label="CFG for '_Z34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jf' function";

	Node0x57e9940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = shl i32 %8, 2\l  %15 = mul i32 %14, %13\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = icmp ult i32 %17, %5\l  br i1 %18, label %19, label %26\l|{<s0>T|<s1>F}}"];
	Node0x57e9940:s0 -> Node0x57eb8e0;
	Node0x57e9940:s1 -> Node0x57eb970;
	Node0x57eb8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%19:\l19:                                               \l  %20 = sext i32 %17 to i64\l  %21 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %20\l  %22 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %16\l  %23 = bitcast %struct.HIP_vector_type addrspace(3)* %22 to i8 addrspace(3)*\l  %24 = bitcast %struct.HIP_vector_type addrspace(1)* %21 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p3i8.p1i8.i64(i8 addrspace(3)* noundef align 16\l... dereferenceable(16) %23, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %24, i64 16, i1 false)\l  %25 = add nuw nsw i32 %16, 128\l  br label %26\l}"];
	Node0x57eb8e0 -> Node0x57eb970;
	Node0x57eb970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%26:\l26:                                               \l  %27 = phi i32 [ %25, %19 ], [ %16, %7 ]\l  %28 = add nsw i32 %17, 128\l  %29 = icmp ult i32 %28, %5\l  br i1 %29, label %30, label %37\l|{<s0>T|<s1>F}}"];
	Node0x57eb970:s0 -> Node0x57ec430;
	Node0x57eb970:s1 -> Node0x57ec480;
	Node0x57ec430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%30:\l30:                                               \l  %31 = sext i32 %28 to i64\l  %32 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %31\l  %33 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %27\l  %34 = bitcast %struct.HIP_vector_type addrspace(3)* %33 to i8 addrspace(3)*\l  %35 = bitcast %struct.HIP_vector_type addrspace(1)* %32 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p3i8.p1i8.i64(i8 addrspace(3)* noundef align 16\l... dereferenceable(16) %34, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %35, i64 16, i1 false)\l  %36 = add nuw nsw i32 %27, 128\l  br label %37\l}"];
	Node0x57ec430 -> Node0x57ec480;
	Node0x57ec480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%37:\l37:                                               \l  %38 = phi i32 [ %36, %30 ], [ %27, %26 ]\l  %39 = add nsw i32 %17, 256\l  %40 = icmp ult i32 %39, %5\l  br i1 %40, label %41, label %48\l|{<s0>T|<s1>F}}"];
	Node0x57ec480:s0 -> Node0x57ece60;
	Node0x57ec480:s1 -> Node0x57eceb0;
	Node0x57ece60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%41:\l41:                                               \l  %42 = sext i32 %39 to i64\l  %43 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %42\l  %44 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %38\l  %45 = bitcast %struct.HIP_vector_type addrspace(3)* %44 to i8 addrspace(3)*\l  %46 = bitcast %struct.HIP_vector_type addrspace(1)* %43 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p3i8.p1i8.i64(i8 addrspace(3)* noundef align 16\l... dereferenceable(16) %45, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %46, i64 16, i1 false)\l  %47 = add nuw nsw i32 %38, 128\l  br label %48\l}"];
	Node0x57ece60 -> Node0x57eceb0;
	Node0x57eceb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%48:\l48:                                               \l  %49 = phi i32 [ %47, %41 ], [ %38, %37 ]\l  %50 = add nsw i32 %17, 384\l  %51 = icmp ult i32 %50, %5\l  br i1 %51, label %52, label %58\l|{<s0>T|<s1>F}}"];
	Node0x57eceb0:s0 -> Node0x57ed6b0;
	Node0x57eceb0:s1 -> Node0x57ed700;
	Node0x57ed6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%52:\l52:                                               \l  %53 = sext i32 %50 to i64\l  %54 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %53\l  %55 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %49\l  %56 = bitcast %struct.HIP_vector_type addrspace(3)* %55 to i8 addrspace(3)*\l  %57 = bitcast %struct.HIP_vector_type addrspace(1)* %54 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p3i8.p1i8.i64(i8 addrspace(3)* noundef align 16\l... dereferenceable(16) %56, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %57, i64 16, i1 false)\l  br label %58\l}"];
	Node0x57ed6b0 -> Node0x57ed700;
	Node0x57ed700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%58:\l58:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %18, label %59, label %146\l|{<s0>T|<s1>F}}"];
	Node0x57ed700:s0 -> Node0x57edeb0;
	Node0x57ed700:s1 -> Node0x57edf00;
	Node0x57edeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%59:\l59:                                               \l  %60 = sext i32 %17 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %60\l  %62 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %60\l  %64 = load i32, i32 addrspace(1)* %63, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %65 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %16, i32 0, i32 0, i32 0, i32 0\l  %66 = load float, float addrspace(3)* %65, align 16\l  %67 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %16, i32 0, i32 0, i32 0, i32 1\l  %68 = load float, float addrspace(3)* %67, align 4\l  %69 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %16, i32 0, i32 0, i32 0, i32 2\l  %70 = load float, float addrspace(3)* %69, align 8\l  %71 = add nuw nsw i32 %16, 128\l  %72 = icmp sgt i32 %64, 0\l  br i1 %72, label %73, label %146\l|{<s0>T|<s1>F}}"];
	Node0x57edeb0:s0 -> Node0x57ec6d0;
	Node0x57edeb0:s1 -> Node0x57edf00;
	Node0x57ec6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%73:\l73:                                               \l  %74 = fmul contract float %66, %66\l  %75 = fmul contract float %68, %68\l  %76 = fadd contract float %74, %75\l  %77 = fmul contract float %70, %70\l  %78 = fadd contract float %76, %77\l  %79 = tail call float @llvm.sqrt.f32(float %78)\l  br label %80\l}"];
	Node0x57ec6d0 -> Node0x57eff40;
	Node0x57eff40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = phi i32 [ 0, %73 ], [ %144, %141 ]\l  %82 = add nsw i32 %81, %62\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %86 = sub nsw i32 %85, %15\l  %87 = add i32 %86, -1\l  %88 = icmp ult i32 %87, 511\l  %89 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %86\l  %90 = addrspacecast %struct.HIP_vector_type addrspace(3)* %89 to\l... %struct.HIP_vector_type*\l  %91 = sext i32 %85 to i64\l  %92 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %91\l  %93 = addrspacecast %struct.HIP_vector_type addrspace(1)* %92 to\l... %struct.HIP_vector_type*\l  %94 = select i1 %88, %struct.HIP_vector_type* %90, %struct.HIP_vector_type*\l... %93\l  %95 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type* %94, i64 0, i32 0, i32 0, i32 0, i64 0\l  %96 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type* %94, i64 0, i32 0, i32 0, i32 0, i64 2\l  %97 = load float, float* %96, align 8\l  %98 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type* %94, i64 0, i32 0, i32 0, i32 0, i64 1\l  %99 = load float, float* %98, align 4\l  %100 = load float, float* %95, align 16\l  %101 = fmul contract float %66, %100\l  %102 = fmul contract float %68, %99\l  %103 = fadd contract float %102, %101\l  %104 = fmul contract float %70, %97\l  %105 = fadd contract float %104, %103\l  %106 = fmul contract float %100, %100\l  %107 = fmul contract float %99, %99\l  %108 = fadd contract float %107, %106\l  %109 = fmul contract float %97, %97\l  %110 = fadd contract float %109, %108\l  %111 = tail call float @llvm.sqrt.f32(float %110)\l  %112 = fmul contract float %79, %111\l  %113 = fcmp contract olt float %112, 0x3E7AD7F2A0000000\l  %114 = tail call float @llvm.fabs.f32(float %105)\l  %115 = fcmp contract ogt float %114, %112\l  %116 = select i1 %113, i1 true, i1 %115\l  br i1 %116, label %141, label %117\l|{<s0>T|<s1>F}}"];
	Node0x57eff40:s0 -> Node0x57f0070;
	Node0x57eff40:s1 -> Node0x57f2420;
	Node0x57f2420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%117:\l117:                                              \l  %118 = fdiv contract float %105, %112\l  %119 = tail call float @llvm.fabs.f32(float %118)\l  %120 = tail call float @llvm.fmuladd.f32(float %119, float -5.000000e-01,\l... float 5.000000e-01)\l  %121 = fmul float %118, %118\l  %122 = fcmp ogt float %119, 5.000000e-01\l  %123 = select i1 %122, float %120, float %121\l  %124 = tail call float @llvm.fmuladd.f32(float %123, float\l... 0x3FA38434E0000000, float 0x3F8BF8BB40000000)\l  %125 = tail call float @llvm.fmuladd.f32(float %123, float %124, float\l... 0x3FA0698780000000)\l  %126 = tail call float @llvm.fmuladd.f32(float %123, float %125, float\l... 0x3FA6C83620000000)\l  %127 = tail call float @llvm.fmuladd.f32(float %123, float %126, float\l... 0x3FB3337900000000)\l  %128 = tail call float @llvm.fmuladd.f32(float %123, float %127, float\l... 0x3FC5555580000000)\l  %129 = fmul float %123, %128\l  %130 = tail call float @llvm.sqrt.f32(float %123)\l  %131 = tail call float @llvm.fmuladd.f32(float %130, float %129, float %130)\l  %132 = fmul float %131, 2.000000e+00\l  %133 = fsub float 0x400921FB60000000, %132\l  %134 = fcmp olt float %118, 0.000000e+00\l  %135 = select i1 %134, float %133, float %132\l  %136 = tail call float @llvm.fmuladd.f32(float %118, float %129, float %118)\l  %137 = fsub float 0x3FF921FB60000000, %136\l  %138 = select i1 %122, float %135, float %137\l  %139 = tail call float @llvm.fabs.f32(float %138)\l  %140 = fmul contract float %139, %6\l  br label %141\l}"];
	Node0x57f2420 -> Node0x57f0070;
	Node0x57f0070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%141:\l141:                                              \l  %142 = phi float [ %140, %117 ], [ 0.000000e+00, %80 ]\l  %143 = getelementptr inbounds float, float addrspace(1)* %1, i64 %83\l  store float %142, float addrspace(1)* %143, align 4, !tbaa !11\l  %144 = add nuw nsw i32 %81, 1\l  %145 = icmp eq i32 %144, %64\l  br i1 %145, label %146, label %80, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x57f0070:s0 -> Node0x57edf00;
	Node0x57f0070:s1 -> Node0x57eff40;
	Node0x57edf00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%146:\l146:                                              \l  %147 = phi i32 [ %16, %58 ], [ %71, %59 ], [ %71, %141 ]\l  %148 = icmp ult i32 %28, %5\l  br i1 %148, label %149, label %236\l|{<s0>T|<s1>F}}"];
	Node0x57edf00:s0 -> Node0x57f48c0;
	Node0x57edf00:s1 -> Node0x57f4910;
	Node0x57f48c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%149:\l149:                                              \l  %150 = sext i32 %28 to i64\l  %151 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %150\l  %152 = load i32, i32 addrspace(1)* %151, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %153 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %150\l  %154 = load i32, i32 addrspace(1)* %153, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %155 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %147, i32 0, i32 0, i32 0, i32 0\l  %156 = load float, float addrspace(3)* %155, align 16\l  %157 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %147, i32 0, i32 0, i32 0, i32 1\l  %158 = load float, float addrspace(3)* %157, align 4\l  %159 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %147, i32 0, i32 0, i32 0, i32 2\l  %160 = load float, float addrspace(3)* %159, align 8\l  %161 = add nsw i32 %147, 128\l  %162 = icmp sgt i32 %154, 0\l  br i1 %162, label %163, label %236\l|{<s0>T|<s1>F}}"];
	Node0x57f48c0:s0 -> Node0x57f4d20;
	Node0x57f48c0:s1 -> Node0x57f4910;
	Node0x57f4d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%163:\l163:                                              \l  %164 = fmul contract float %156, %156\l  %165 = fmul contract float %158, %158\l  %166 = fadd contract float %164, %165\l  %167 = fmul contract float %160, %160\l  %168 = fadd contract float %166, %167\l  %169 = tail call float @llvm.sqrt.f32(float %168)\l  br label %170\l}"];
	Node0x57f4d20 -> Node0x57f5910;
	Node0x57f5910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%170:\l170:                                              \l  %171 = phi i32 [ 0, %163 ], [ %234, %231 ]\l  %172 = add nsw i32 %171, %152\l  %173 = sext i32 %172 to i64\l  %174 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %173\l  %175 = load i32, i32 addrspace(1)* %174, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %176 = sub nsw i32 %175, %15\l  %177 = add i32 %176, -1\l  %178 = icmp ult i32 %177, 511\l  %179 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %176\l  %180 = addrspacecast %struct.HIP_vector_type addrspace(3)* %179 to\l... %struct.HIP_vector_type*\l  %181 = sext i32 %175 to i64\l  %182 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %181\l  %183 = addrspacecast %struct.HIP_vector_type addrspace(1)* %182 to\l... %struct.HIP_vector_type*\l  %184 = select i1 %178, %struct.HIP_vector_type* %180,\l... %struct.HIP_vector_type* %183\l  %185 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type* %184, i64 0, i32 0, i32 0, i32 0, i64 0\l  %186 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type* %184, i64 0, i32 0, i32 0, i32 0, i64 2\l  %187 = load float, float* %186, align 8\l  %188 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type* %184, i64 0, i32 0, i32 0, i32 0, i64 1\l  %189 = load float, float* %188, align 4\l  %190 = load float, float* %185, align 16\l  %191 = fmul contract float %156, %190\l  %192 = fmul contract float %158, %189\l  %193 = fadd contract float %192, %191\l  %194 = fmul contract float %160, %187\l  %195 = fadd contract float %194, %193\l  %196 = fmul contract float %190, %190\l  %197 = fmul contract float %189, %189\l  %198 = fadd contract float %197, %196\l  %199 = fmul contract float %187, %187\l  %200 = fadd contract float %199, %198\l  %201 = tail call float @llvm.sqrt.f32(float %200)\l  %202 = fmul contract float %169, %201\l  %203 = fcmp contract olt float %202, 0x3E7AD7F2A0000000\l  %204 = tail call float @llvm.fabs.f32(float %195)\l  %205 = fcmp contract ogt float %204, %202\l  %206 = select i1 %203, i1 true, i1 %205\l  br i1 %206, label %231, label %207\l|{<s0>T|<s1>F}}"];
	Node0x57f5910:s0 -> Node0x57f59d0;
	Node0x57f5910:s1 -> Node0x57f7100;
	Node0x57f7100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%207:\l207:                                              \l  %208 = fdiv contract float %195, %202\l  %209 = tail call float @llvm.fabs.f32(float %208)\l  %210 = tail call float @llvm.fmuladd.f32(float %209, float -5.000000e-01,\l... float 5.000000e-01)\l  %211 = fmul float %208, %208\l  %212 = fcmp ogt float %209, 5.000000e-01\l  %213 = select i1 %212, float %210, float %211\l  %214 = tail call float @llvm.fmuladd.f32(float %213, float\l... 0x3FA38434E0000000, float 0x3F8BF8BB40000000)\l  %215 = tail call float @llvm.fmuladd.f32(float %213, float %214, float\l... 0x3FA0698780000000)\l  %216 = tail call float @llvm.fmuladd.f32(float %213, float %215, float\l... 0x3FA6C83620000000)\l  %217 = tail call float @llvm.fmuladd.f32(float %213, float %216, float\l... 0x3FB3337900000000)\l  %218 = tail call float @llvm.fmuladd.f32(float %213, float %217, float\l... 0x3FC5555580000000)\l  %219 = fmul float %213, %218\l  %220 = tail call float @llvm.sqrt.f32(float %213)\l  %221 = tail call float @llvm.fmuladd.f32(float %220, float %219, float %220)\l  %222 = fmul float %221, 2.000000e+00\l  %223 = fsub float 0x400921FB60000000, %222\l  %224 = fcmp olt float %208, 0.000000e+00\l  %225 = select i1 %224, float %223, float %222\l  %226 = tail call float @llvm.fmuladd.f32(float %208, float %219, float %208)\l  %227 = fsub float 0x3FF921FB60000000, %226\l  %228 = select i1 %212, float %225, float %227\l  %229 = tail call float @llvm.fabs.f32(float %228)\l  %230 = fmul contract float %229, %6\l  br label %231\l}"];
	Node0x57f7100 -> Node0x57f59d0;
	Node0x57f59d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%231:\l231:                                              \l  %232 = phi float [ %230, %207 ], [ 0.000000e+00, %170 ]\l  %233 = getelementptr inbounds float, float addrspace(1)* %1, i64 %173\l  store float %232, float addrspace(1)* %233, align 4, !tbaa !11\l  %234 = add nuw nsw i32 %171, 1\l  %235 = icmp eq i32 %234, %154\l  br i1 %235, label %236, label %170, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x57f59d0:s0 -> Node0x57f4910;
	Node0x57f59d0:s1 -> Node0x57f5910;
	Node0x57f4910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%236:\l236:                                              \l  %237 = phi i32 [ %147, %146 ], [ %161, %149 ], [ %161, %231 ]\l  %238 = add nsw i32 %17, 256\l  %239 = icmp ult i32 %238, %5\l  br i1 %239, label %240, label %327\l|{<s0>T|<s1>F}}"];
	Node0x57f4910:s0 -> Node0x57f9790;
	Node0x57f4910:s1 -> Node0x57f97e0;
	Node0x57f9790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%240:\l240:                                              \l  %241 = sext i32 %238 to i64\l  %242 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %241\l  %243 = load i32, i32 addrspace(1)* %242, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %244 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %241\l  %245 = load i32, i32 addrspace(1)* %244, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %246 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %237, i32 0, i32 0, i32 0, i32 0\l  %247 = load float, float addrspace(3)* %246, align 16\l  %248 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %237, i32 0, i32 0, i32 0, i32 1\l  %249 = load float, float addrspace(3)* %248, align 4\l  %250 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %237, i32 0, i32 0, i32 0, i32 2\l  %251 = load float, float addrspace(3)* %250, align 8\l  %252 = add nsw i32 %237, 128\l  %253 = icmp sgt i32 %245, 0\l  br i1 %253, label %254, label %327\l|{<s0>T|<s1>F}}"];
	Node0x57f9790:s0 -> Node0x57fa220;
	Node0x57f9790:s1 -> Node0x57f97e0;
	Node0x57fa220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%254:\l254:                                              \l  %255 = fmul contract float %247, %247\l  %256 = fmul contract float %249, %249\l  %257 = fadd contract float %255, %256\l  %258 = fmul contract float %251, %251\l  %259 = fadd contract float %257, %258\l  %260 = tail call float @llvm.sqrt.f32(float %259)\l  br label %261\l}"];
	Node0x57fa220 -> Node0x57f3620;
	Node0x57f3620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%261:\l261:                                              \l  %262 = phi i32 [ 0, %254 ], [ %325, %322 ]\l  %263 = add nsw i32 %262, %243\l  %264 = sext i32 %263 to i64\l  %265 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %264\l  %266 = load i32, i32 addrspace(1)* %265, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %267 = sub nsw i32 %266, %15\l  %268 = add i32 %267, -1\l  %269 = icmp ult i32 %268, 511\l  %270 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %267\l  %271 = addrspacecast %struct.HIP_vector_type addrspace(3)* %270 to\l... %struct.HIP_vector_type*\l  %272 = sext i32 %266 to i64\l  %273 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %272\l  %274 = addrspacecast %struct.HIP_vector_type addrspace(1)* %273 to\l... %struct.HIP_vector_type*\l  %275 = select i1 %269, %struct.HIP_vector_type* %271,\l... %struct.HIP_vector_type* %274\l  %276 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type* %275, i64 0, i32 0, i32 0, i32 0, i64 0\l  %277 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type* %275, i64 0, i32 0, i32 0, i32 0, i64 2\l  %278 = load float, float* %277, align 8\l  %279 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type* %275, i64 0, i32 0, i32 0, i32 0, i64 1\l  %280 = load float, float* %279, align 4\l  %281 = load float, float* %276, align 16\l  %282 = fmul contract float %247, %281\l  %283 = fmul contract float %249, %280\l  %284 = fadd contract float %283, %282\l  %285 = fmul contract float %251, %278\l  %286 = fadd contract float %285, %284\l  %287 = fmul contract float %281, %281\l  %288 = fmul contract float %280, %280\l  %289 = fadd contract float %288, %287\l  %290 = fmul contract float %278, %278\l  %291 = fadd contract float %290, %289\l  %292 = tail call float @llvm.sqrt.f32(float %291)\l  %293 = fmul contract float %260, %292\l  %294 = fcmp contract olt float %293, 0x3E7AD7F2A0000000\l  %295 = tail call float @llvm.fabs.f32(float %286)\l  %296 = fcmp contract ogt float %295, %293\l  %297 = select i1 %294, i1 true, i1 %296\l  br i1 %297, label %322, label %298\l|{<s0>T|<s1>F}}"];
	Node0x57f3620:s0 -> Node0x57f36e0;
	Node0x57f3620:s1 -> Node0x57fc6d0;
	Node0x57fc6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%298:\l298:                                              \l  %299 = fdiv contract float %286, %293\l  %300 = tail call float @llvm.fabs.f32(float %299)\l  %301 = tail call float @llvm.fmuladd.f32(float %300, float -5.000000e-01,\l... float 5.000000e-01)\l  %302 = fmul float %299, %299\l  %303 = fcmp ogt float %300, 5.000000e-01\l  %304 = select i1 %303, float %301, float %302\l  %305 = tail call float @llvm.fmuladd.f32(float %304, float\l... 0x3FA38434E0000000, float 0x3F8BF8BB40000000)\l  %306 = tail call float @llvm.fmuladd.f32(float %304, float %305, float\l... 0x3FA0698780000000)\l  %307 = tail call float @llvm.fmuladd.f32(float %304, float %306, float\l... 0x3FA6C83620000000)\l  %308 = tail call float @llvm.fmuladd.f32(float %304, float %307, float\l... 0x3FB3337900000000)\l  %309 = tail call float @llvm.fmuladd.f32(float %304, float %308, float\l... 0x3FC5555580000000)\l  %310 = fmul float %304, %309\l  %311 = tail call float @llvm.sqrt.f32(float %304)\l  %312 = tail call float @llvm.fmuladd.f32(float %311, float %310, float %311)\l  %313 = fmul float %312, 2.000000e+00\l  %314 = fsub float 0x400921FB60000000, %313\l  %315 = fcmp olt float %299, 0.000000e+00\l  %316 = select i1 %315, float %314, float %313\l  %317 = tail call float @llvm.fmuladd.f32(float %299, float %310, float %299)\l  %318 = fsub float 0x3FF921FB60000000, %317\l  %319 = select i1 %303, float %316, float %318\l  %320 = tail call float @llvm.fabs.f32(float %319)\l  %321 = fmul contract float %320, %6\l  br label %322\l}"];
	Node0x57fc6d0 -> Node0x57f36e0;
	Node0x57f36e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%322:\l322:                                              \l  %323 = phi float [ %321, %298 ], [ 0.000000e+00, %261 ]\l  %324 = getelementptr inbounds float, float addrspace(1)* %1, i64 %264\l  store float %323, float addrspace(1)* %324, align 4, !tbaa !11\l  %325 = add nuw nsw i32 %262, 1\l  %326 = icmp eq i32 %325, %245\l  br i1 %326, label %327, label %261, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x57f36e0:s0 -> Node0x57f97e0;
	Node0x57f36e0:s1 -> Node0x57f3620;
	Node0x57f97e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%327:\l327:                                              \l  %328 = phi i32 [ %237, %236 ], [ %252, %240 ], [ %252, %322 ]\l  %329 = add nsw i32 %17, 384\l  %330 = icmp ult i32 %329, %5\l  br i1 %330, label %331, label %417\l|{<s0>T|<s1>F}}"];
	Node0x57f97e0:s0 -> Node0x57fe110;
	Node0x57f97e0:s1 -> Node0x57fe160;
	Node0x57fe110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%331:\l331:                                              \l  %332 = sext i32 %329 to i64\l  %333 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %332\l  %334 = load i32, i32 addrspace(1)* %333, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %335 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %332\l  %336 = load i32, i32 addrspace(1)* %335, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %337 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %328, i32 0, i32 0, i32 0, i32 0\l  %338 = load float, float addrspace(3)* %337, align 16\l  %339 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %328, i32 0, i32 0, i32 0, i32 1\l  %340 = load float, float addrspace(3)* %339, align 4\l  %341 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %328, i32 0, i32 0, i32 0, i32 2\l  %342 = load float, float addrspace(3)* %341, align 8\l  %343 = icmp sgt i32 %336, 0\l  br i1 %343, label %344, label %417\l|{<s0>T|<s1>F}}"];
	Node0x57fe110:s0 -> Node0x57feb10;
	Node0x57fe110:s1 -> Node0x57fe160;
	Node0x57feb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%344:\l344:                                              \l  %345 = fmul contract float %338, %338\l  %346 = fmul contract float %340, %340\l  %347 = fadd contract float %345, %346\l  %348 = fmul contract float %342, %342\l  %349 = fadd contract float %347, %348\l  %350 = tail call float @llvm.sqrt.f32(float %349)\l  br label %351\l}"];
	Node0x57feb10 -> Node0x57fefd0;
	Node0x57fefd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%351:\l351:                                              \l  %352 = phi i32 [ 0, %344 ], [ %415, %412 ]\l  %353 = add nsw i32 %352, %334\l  %354 = sext i32 %353 to i64\l  %355 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %354\l  %356 = load i32, i32 addrspace(1)* %355, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %357 = sub nsw i32 %356, %15\l  %358 = add i32 %357, -1\l  %359 = icmp ult i32 %358, 511\l  %360 = getelementptr inbounds [512 x %struct.HIP_vector_type], [512 x\l... %struct.HIP_vector_type] addrspace(3)*\l... @_ZZ34computeSphereVertexDistancesKernelP15HIP_vector_typeIfLj4EEPfPjS3_S3_jfE\l...2SI, i32 0, i32 %357\l  %361 = addrspacecast %struct.HIP_vector_type addrspace(3)* %360 to\l... %struct.HIP_vector_type*\l  %362 = sext i32 %356 to i64\l  %363 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %362\l  %364 = addrspacecast %struct.HIP_vector_type addrspace(1)* %363 to\l... %struct.HIP_vector_type*\l  %365 = select i1 %359, %struct.HIP_vector_type* %361,\l... %struct.HIP_vector_type* %364\l  %366 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type* %365, i64 0, i32 0, i32 0, i32 0, i64 0\l  %367 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type* %365, i64 0, i32 0, i32 0, i32 0, i64 2\l  %368 = load float, float* %367, align 8\l  %369 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type* %365, i64 0, i32 0, i32 0, i32 0, i64 1\l  %370 = load float, float* %369, align 4\l  %371 = load float, float* %366, align 16\l  %372 = fmul contract float %338, %371\l  %373 = fmul contract float %340, %370\l  %374 = fadd contract float %373, %372\l  %375 = fmul contract float %342, %368\l  %376 = fadd contract float %375, %374\l  %377 = fmul contract float %371, %371\l  %378 = fmul contract float %370, %370\l  %379 = fadd contract float %378, %377\l  %380 = fmul contract float %368, %368\l  %381 = fadd contract float %380, %379\l  %382 = tail call float @llvm.sqrt.f32(float %381)\l  %383 = fmul contract float %350, %382\l  %384 = fcmp contract olt float %383, 0x3E7AD7F2A0000000\l  %385 = tail call float @llvm.fabs.f32(float %376)\l  %386 = fcmp contract ogt float %385, %383\l  %387 = select i1 %384, i1 true, i1 %386\l  br i1 %387, label %412, label %388\l|{<s0>T|<s1>F}}"];
	Node0x57fefd0:s0 -> Node0x57ff090;
	Node0x57fefd0:s1 -> Node0x58007c0;
	Node0x58007c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%388:\l388:                                              \l  %389 = fdiv contract float %376, %383\l  %390 = tail call float @llvm.fabs.f32(float %389)\l  %391 = tail call float @llvm.fmuladd.f32(float %390, float -5.000000e-01,\l... float 5.000000e-01)\l  %392 = fmul float %389, %389\l  %393 = fcmp ogt float %390, 5.000000e-01\l  %394 = select i1 %393, float %391, float %392\l  %395 = tail call float @llvm.fmuladd.f32(float %394, float\l... 0x3FA38434E0000000, float 0x3F8BF8BB40000000)\l  %396 = tail call float @llvm.fmuladd.f32(float %394, float %395, float\l... 0x3FA0698780000000)\l  %397 = tail call float @llvm.fmuladd.f32(float %394, float %396, float\l... 0x3FA6C83620000000)\l  %398 = tail call float @llvm.fmuladd.f32(float %394, float %397, float\l... 0x3FB3337900000000)\l  %399 = tail call float @llvm.fmuladd.f32(float %394, float %398, float\l... 0x3FC5555580000000)\l  %400 = fmul float %394, %399\l  %401 = tail call float @llvm.sqrt.f32(float %394)\l  %402 = tail call float @llvm.fmuladd.f32(float %401, float %400, float %401)\l  %403 = fmul float %402, 2.000000e+00\l  %404 = fsub float 0x400921FB60000000, %403\l  %405 = fcmp olt float %389, 0.000000e+00\l  %406 = select i1 %405, float %404, float %403\l  %407 = tail call float @llvm.fmuladd.f32(float %389, float %400, float %389)\l  %408 = fsub float 0x3FF921FB60000000, %407\l  %409 = select i1 %393, float %406, float %408\l  %410 = tail call float @llvm.fabs.f32(float %409)\l  %411 = fmul contract float %410, %6\l  br label %412\l}"];
	Node0x58007c0 -> Node0x57ff090;
	Node0x57ff090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%412:\l412:                                              \l  %413 = phi float [ %411, %388 ], [ 0.000000e+00, %351 ]\l  %414 = getelementptr inbounds float, float addrspace(1)* %1, i64 %354\l  store float %413, float addrspace(1)* %414, align 4, !tbaa !11\l  %415 = add nuw nsw i32 %352, 1\l  %416 = icmp eq i32 %415, %336\l  br i1 %416, label %417, label %351, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x57ff090:s0 -> Node0x57fe160;
	Node0x57ff090:s1 -> Node0x57fefd0;
	Node0x57fe160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%417:\l417:                                              \l  ret void\l}"];
}
