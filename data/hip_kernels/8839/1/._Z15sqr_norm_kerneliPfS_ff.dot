digraph "CFG for '_Z15sqr_norm_kerneliPfS_ff' function" {
	label="CFG for '_Z15sqr_norm_kerneliPfS_ff' function";

	Node0x551a670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !4\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !13\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !13\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = bitcast i8 addrspace(4)* %8 to \<2 x i16\> addrspace(4)*\l  %16 = load \<2 x i16\>, \<2 x i16\> addrspace(4)* %15, align 4, !invariant.load\l... !14\l  %17 = zext \<2 x i16\> %16 to \<2 x i32\>\l  %18 = extractelement \<2 x i32\> %17, i64 0\l  %19 = mul nuw nsw i32 %12, %18\l  %20 = add nuw nsw i32 %19, %13\l  %21 = udiv i32 %11, %18\l  %22 = mul i32 %21, %18\l  %23 = icmp ugt i32 %11, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %14\l  %27 = add i32 %26, %7\l  %28 = extractelement \<2 x i32\> %17, i64 1\l  %29 = mul nuw nsw i32 %28, %18\l  %30 = mul i32 %27, %29\l  %31 = add i32 %20, %30\l  %32 = shl i32 %31, 1\l  %33 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %20\l  %34 = sext i32 %32 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !15,\l... !amdgpu.noclobber !14\l  %37 = fmul contract float %36, %36\l  %38 = add nuw nsw i32 %32, 1\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %2, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !15,\l... !amdgpu.noclobber !14\l  %42 = fmul contract float %41, %41\l  %43 = fadd contract float %37, %42\l  store float %43, float addrspace(3)* %33, align 4, !tbaa !15\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %44 = add nuw nsw i32 %29, 1\l  br label %47\l}"];
	Node0x551a670 -> Node0x551f810;
	Node0x551f910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%45:\l45:                                               \l  %46 = icmp eq i32 %20, 0\l  br i1 %46, label %64, label %72\l|{<s0>T|<s1>F}}"];
	Node0x551f910:s0 -> Node0x551fa30;
	Node0x551f910:s1 -> Node0x551fa80;
	Node0x551f810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi i32 [ %52, %62 ], [ %29, %5 ]\l  %49 = phi i32 [ %52, %62 ], [ %44, %5 ]\l  %50 = lshr i32 %49, 1\l  %51 = and i32 %48, 1\l  %52 = add nuw i32 %51, %50\l  %53 = icmp ult i32 %20, %52\l  br i1 %53, label %54, label %62\l|{<s0>T|<s1>F}}"];
	Node0x551f810:s0 -> Node0x551fff0;
	Node0x551f810:s1 -> Node0x551fbc0;
	Node0x551fff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%54:\l54:                                               \l  %55 = add i32 %52, %20\l  %56 = icmp ult i32 %55, %48\l  br i1 %56, label %57, label %62\l|{<s0>T|<s1>F}}"];
	Node0x551fff0:s0 -> Node0x5520210;
	Node0x551fff0:s1 -> Node0x551fbc0;
	Node0x5520210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%57:\l57:                                               \l  %58 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %55\l  %59 = load float, float addrspace(3)* %58, align 4, !tbaa !15\l  %60 = load float, float addrspace(3)* %33, align 4, !tbaa !15\l  %61 = fadd contract float %59, %60\l  store float %61, float addrspace(3)* %33, align 4, !tbaa !15\l  br label %62\l}"];
	Node0x5520210 -> Node0x551fbc0;
	Node0x551fbc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %63 = icmp ult i32 %52, 2\l  br i1 %63, label %45, label %47, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x551fbc0:s0 -> Node0x551f910;
	Node0x551fbc0:s1 -> Node0x551f810;
	Node0x551fa30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%64:\l64:                                               \l  %65 = sdiv i32 %27, %0\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %1, i64 %66\l  %68 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @sdata, i32 0, i32 0), align 4, !tbaa !15\l  %69 = fmul contract float %3, %4\l  %70 = fdiv contract float %68, %69\l  %71 = atomicrmw fadd float addrspace(1)* %67, float %70\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %72\l}"];
	Node0x551fa30 -> Node0x551fa80;
	Node0x551fa80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%72:\l72:                                               \l  ret void\l}"];
}
