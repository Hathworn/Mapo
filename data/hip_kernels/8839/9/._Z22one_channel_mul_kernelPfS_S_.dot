digraph "CFG for '_Z22one_channel_mul_kernelPfS_S_' function" {
	label="CFG for '_Z22one_channel_mul_kernelPfS_S_' function";

	Node0x458fa20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %8 = bitcast i8 addrspace(4)* %7 to i32 addrspace(4)*\l  %9 = load i32, i32 addrspace(4)* %8, align 4, !tbaa !4\l  %10 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !13, !invariant.load\l... !14\l  %13 = zext i16 %12 to i32\l  %14 = udiv i32 %9, %13\l  %15 = mul i32 %14, %13\l  %16 = icmp ugt i32 %9, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = mul i32 %18, %5\l  %20 = add i32 %19, %4\l  %21 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !13, !invariant.load\l... !14\l  %24 = zext i16 %23 to i32\l  %25 = mul nuw nsw i32 %24, %13\l  %26 = mul i32 %25, %20\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %28 = mul nuw nsw i32 %27, %13\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %30 = add nuw nsw i32 %28, %29\l  %31 = add i32 %30, %26\l  %32 = shl i32 %31, 1\l  %33 = shl nuw nsw i32 %30, 1\l  %34 = sext i32 %32 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %37 = zext i32 %33 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %40 = fmul contract float %36, %39\l  %41 = add nuw nsw i32 %32, 1\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %45 = add nuw nsw i32 %33, 1\l  %46 = zext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %49 = fmul contract float %44, %48\l  %50 = fsub contract float %40, %49\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %34\l  store float %50, float addrspace(1)* %51, align 4, !tbaa !16\l  %52 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %53 = load float, float addrspace(1)* %47, align 4, !tbaa !16\l  %54 = fmul contract float %52, %53\l  %55 = load float, float addrspace(1)* %43, align 4, !tbaa !16\l  %56 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  %57 = fmul contract float %55, %56\l  %58 = fadd contract float %54, %57\l  %59 = getelementptr inbounds float, float addrspace(1)* %2, i64 %42\l  store float %58, float addrspace(1)* %59, align 4, !tbaa !16\l  ret void\l}"];
}
