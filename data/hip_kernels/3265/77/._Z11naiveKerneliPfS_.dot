digraph "CFG for '_Z11naiveKerneliPfS_' function" {
	label="CFG for '_Z11naiveKerneliPfS_' function";

	Node0x5b45880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%3:\l  %4 = icmp sgt i32 %0, 0\l  br i1 %4, label %5, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5b45880:s0 -> Node0x5b45fc0;
	Node0x5b45880:s1 -> Node0x5b46050;
	Node0x5b45fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%5:\l5:                                                \l  %6 = and i32 %0, 7\l  %7 = icmp ult i32 %0, 8\l  br i1 %7, label %10, label %8\l|{<s0>T|<s1>F}}"];
	Node0x5b45fc0:s0 -> Node0x5b462b0;
	Node0x5b45fc0:s1 -> Node0x5b46300;
	Node0x5b46300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%8:\l8:                                                \l  %9 = and i32 %0, -8\l  br label %30\l}"];
	Node0x5b46300 -> Node0x5b45f70;
	Node0x5b462b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%10:\l10:                                               \l  %11 = phi float [ undef, %5 ], [ %72, %30 ]\l  %12 = phi i32 [ 0, %5 ], [ %73, %30 ]\l  %13 = phi float [ 0.000000e+00, %5 ], [ %72, %30 ]\l  %14 = icmp eq i32 %6, 0\l  br i1 %14, label %26, label %15\l|{<s0>T|<s1>F}}"];
	Node0x5b462b0:s0 -> Node0x5b46050;
	Node0x5b462b0:s1 -> Node0x5b477b0;
	Node0x5b477b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  %16 = phi i32 [ %23, %15 ], [ %12, %10 ]\l  %17 = phi float [ %22, %15 ], [ %13, %10 ]\l  %18 = phi i32 [ %24, %15 ], [ 0, %10 ]\l  %19 = zext i32 %16 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %1, i64 %19\l  %21 = load float, float addrspace(1)* %20, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %22 = fadd contract float %17, %21\l  %23 = add nuw nsw i32 %16, 1\l  %24 = add i32 %18, 1\l  %25 = icmp eq i32 %24, %6\l  br i1 %25, label %26, label %15, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5b477b0:s0 -> Node0x5b46050;
	Node0x5b477b0:s1 -> Node0x5b477b0;
	Node0x5b46050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%26:\l26:                                               \l  %27 = phi float [ 0.000000e+00, %3 ], [ %11, %10 ], [ %22, %15 ]\l  %28 = sitofp i32 %0 to float\l  %29 = fdiv contract float %27, %28\l  store float %29, float addrspace(1)* %2, align 4, !tbaa !4\l  ret void\l}"];
	Node0x5b45f70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%30:\l30:                                               \l  %31 = phi i32 [ 0, %8 ], [ %73, %30 ]\l  %32 = phi float [ 0.000000e+00, %8 ], [ %72, %30 ]\l  %33 = phi i32 [ 0, %8 ], [ %74, %30 ]\l  %34 = zext i32 %31 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %37 = fadd contract float %32, %36\l  %38 = or i32 %31, 1\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %42 = fadd contract float %37, %41\l  %43 = or i32 %31, 2\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %47 = fadd contract float %42, %46\l  %48 = or i32 %31, 3\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %52 = fadd contract float %47, %51\l  %53 = or i32 %31, 4\l  %54 = zext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %57 = fadd contract float %52, %56\l  %58 = or i32 %31, 5\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %62 = fadd contract float %57, %61\l  %63 = or i32 %31, 6\l  %64 = zext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %67 = fadd contract float %62, %66\l  %68 = or i32 %31, 7\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %1, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %72 = fadd contract float %67, %71\l  %73 = add nuw nsw i32 %31, 8\l  %74 = add i32 %33, 8\l  %75 = icmp eq i32 %74, %9\l  br i1 %75, label %10, label %30, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5b45f70:s0 -> Node0x5b462b0;
	Node0x5b45f70:s1 -> Node0x5b45f70;
}
