digraph "CFG for '_Z10smemKerneliPdS_' function" {
	label="CFG for '_Z10smemKerneliPdS_' function";

	Node0x461c730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %8\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add nsw i32 %10, %11\l  %13 = icmp sgt i32 %0, 0\l  br i1 %13, label %16, label %14\l|{<s0>T|<s1>F}}"];
	Node0x461c730:s0 -> Node0x461e630;
	Node0x461c730:s1 -> Node0x461e6c0;
	Node0x461e6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  br label %21\l}"];
	Node0x461e6c0 -> Node0x461e870;
	Node0x461e630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%16:\l16:                                               \l  %17 = add nuw nsw i32 %0, 15\l  %18 = lshr i32 %17, 4\l  %19 = sext i32 %12 to i64\l  %20 = getelementptr inbounds double, double addrspace(1)* %2, i64 %19\l  br label %27\l}"];
	Node0x461e630 -> Node0x461ec70;
	Node0x461e870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%21:\l21:                                               \l  %22 = phi i64 [ %15, %14 ], [ %19, %48 ]\l  %23 = sitofp i32 %0 to double\l  %24 = getelementptr inbounds double, double addrspace(1)* %2, i64 %22\l  %25 = load double, double addrspace(1)* %24, align 8, !tbaa !7\l  %26 = fdiv contract double %25, %23\l  store double %26, double addrspace(1)* %24, align 8, !tbaa !7\l  ret void\l}"];
	Node0x461ec70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%27:\l27:                                               \l  %28 = phi i32 [ 0, %16 ], [ %49, %48 ]\l  %29 = shl nsw i32 %28, 4\l  %30 = add nuw nsw i32 %29, 16\l  %31 = tail call i32 @llvm.smin.i32(i32 %30, i32 %0)\l  %32 = add nuw nsw i32 %29, %11\l  %33 = icmp slt i32 %32, %31\l  br i1 %33, label %38, label %34\l|{<s0>T|<s1>F}}"];
	Node0x461ec70:s0 -> Node0x461e9c0;
	Node0x461ec70:s1 -> Node0x461ff60;
	Node0x461ff60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%34:\l34:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %35 = icmp slt i32 %29, %31\l  br i1 %35, label %36, label %48\l|{<s0>T|<s1>F}}"];
	Node0x461ff60:s0 -> Node0x4620400;
	Node0x461ff60:s1 -> Node0x461ed30;
	Node0x4620400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%36:\l36:                                               \l  %37 = load double, double addrspace(1)* %20, align 8, !tbaa !7\l  br label %51\l}"];
	Node0x4620400 -> Node0x46205b0;
	Node0x461e9c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i32 [ %45, %38 ], [ %32, %27 ]\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds double, double addrspace(1)* %1, i64 %40\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !7\l  %43 = sub nuw nsw i32 %39, %29\l  %44 = getelementptr inbounds [16 x double], [16 x double] addrspace(3)*\l... @_ZZ10smemKerneliPdS_E4buff, i32 0, i32 %43\l  store double %42, double addrspace(3)* %44, align 8, !tbaa !7\l  %45 = add nuw nsw i32 %39, %8\l  %46 = icmp slt i32 %45, %31\l  br i1 %46, label %38, label %34, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x461e9c0:s0 -> Node0x461e9c0;
	Node0x461e9c0:s1 -> Node0x461ff60;
	Node0x4620dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%47:\l47:                                               \l  store double %57, double addrspace(1)* %20, align 8, !tbaa !7\l  br label %48\l}"];
	Node0x4620dc0 -> Node0x461ed30;
	Node0x461ed30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%48:\l48:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %49 = add nuw nsw i32 %28, 1\l  %50 = icmp eq i32 %49, %18\l  br i1 %50, label %21, label %27, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x461ed30:s0 -> Node0x461e870;
	Node0x461ed30:s1 -> Node0x461ec70;
	Node0x46205b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi double [ %37, %36 ], [ %57, %51 ]\l  %53 = phi i32 [ %29, %36 ], [ %58, %51 ]\l  %54 = sub nuw nsw i32 %53, %29\l  %55 = getelementptr inbounds [16 x double], [16 x double] addrspace(3)*\l... @_ZZ10smemKerneliPdS_E4buff, i32 0, i32 %54\l  %56 = load double, double addrspace(3)* %55, align 8, !tbaa !7\l  %57 = fadd contract double %56, %52\l  %58 = add nuw nsw i32 %53, 1\l  %59 = icmp slt i32 %58, %31\l  br i1 %59, label %51, label %47, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x46205b0:s0 -> Node0x46205b0;
	Node0x46205b0:s1 -> Node0x4620dc0;
}
