digraph "CFG for '_Z7processiiPfS_' function" {
	label="CFG for '_Z7processiiPfS_' function";

	Node0x594bf80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = alloca [12288 x float], align 16, addrspace(5)\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = icmp slt i32 %14, %1\l  br i1 %15, label %16, label %188\l|{<s0>T|<s1>F}}"];
	Node0x594bf80:s0 -> Node0x594e550;
	Node0x594bf80:s1 -> Node0x594e5e0;
	Node0x594e550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%16:\l16:                                               \l  %17 = bitcast [12288 x float] addrspace(5)* %5 to i8 addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 49152, i8 addrspace(5)* %17) #3\l  %18 = mul nsw i32 %14, 12288\l  br label %21\l}"];
	Node0x594e550 -> Node0x594ea10;
	Node0x594ead0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%19:\l19:                                               \l  %20 = icmp sgt i32 %0, 0\l  br i1 %20, label %124, label %120\l|{<s0>T|<s1>F}}"];
	Node0x594ead0:s0 -> Node0x594ec20;
	Node0x594ead0:s1 -> Node0x594ec70;
	Node0x594ea10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = phi i32 [ 0, %16 ], [ %118, %21 ]\l  %23 = add nsw i32 %22, %18\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %2, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %22\l  store float %26, float addrspace(5)* %27, align 16, !tbaa !7\l  %28 = or i32 %22, 1\l  %29 = add nsw i32 %28, %18\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %33 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %28\l  store float %32, float addrspace(5)* %33, align 4, !tbaa !7\l  %34 = or i32 %22, 2\l  %35 = add nsw i32 %34, %18\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %34\l  store float %38, float addrspace(5)* %39, align 8, !tbaa !7\l  %40 = or i32 %22, 3\l  %41 = add nsw i32 %40, %18\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %2, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %40\l  store float %44, float addrspace(5)* %45, align 4, !tbaa !7\l  %46 = or i32 %22, 4\l  %47 = add nsw i32 %46, %18\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %2, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %51 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %46\l  store float %50, float addrspace(5)* %51, align 16, !tbaa !7\l  %52 = or i32 %22, 5\l  %53 = add nsw i32 %52, %18\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %2, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %57 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %52\l  store float %56, float addrspace(5)* %57, align 4, !tbaa !7\l  %58 = or i32 %22, 6\l  %59 = add nsw i32 %58, %18\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %2, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %58\l  store float %62, float addrspace(5)* %63, align 8, !tbaa !7\l  %64 = or i32 %22, 7\l  %65 = add nsw i32 %64, %18\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %2, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %69 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %64\l  store float %68, float addrspace(5)* %69, align 4, !tbaa !7\l  %70 = or i32 %22, 8\l  %71 = add nsw i32 %70, %18\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %2, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %75 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %70\l  store float %74, float addrspace(5)* %75, align 16, !tbaa !7\l  %76 = or i32 %22, 9\l  %77 = add nsw i32 %76, %18\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %2, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %81 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %76\l  store float %80, float addrspace(5)* %81, align 4, !tbaa !7\l  %82 = or i32 %22, 10\l  %83 = add nsw i32 %82, %18\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %2, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %87 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %82\l  store float %86, float addrspace(5)* %87, align 8, !tbaa !7\l  %88 = or i32 %22, 11\l  %89 = add nsw i32 %88, %18\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %2, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %93 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %88\l  store float %92, float addrspace(5)* %93, align 4, !tbaa !7\l  %94 = or i32 %22, 12\l  %95 = add nsw i32 %94, %18\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %2, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %99 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %94\l  store float %98, float addrspace(5)* %99, align 16, !tbaa !7\l  %100 = or i32 %22, 13\l  %101 = add nsw i32 %100, %18\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %2, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %105 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %100\l  store float %104, float addrspace(5)* %105, align 4, !tbaa !7\l  %106 = or i32 %22, 14\l  %107 = add nsw i32 %106, %18\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %2, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %111 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %106\l  store float %110, float addrspace(5)* %111, align 8, !tbaa !7\l  %112 = or i32 %22, 15\l  %113 = add nsw i32 %112, %18\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %2, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %117 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %112\l  store float %116, float addrspace(5)* %117, align 4, !tbaa !7\l  %118 = add nuw nsw i32 %22, 16\l  %119 = icmp eq i32 %118, 12288\l  br i1 %119, label %19, label %21, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x594ea10:s0 -> Node0x594ead0;
	Node0x594ea10:s1 -> Node0x594ea10;
	Node0x594ec70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%120:\l120:                                              \l  %121 = phi float [ 0.000000e+00, %19 ], [ %186, %124 ]\l  %122 = sext i32 %14 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %3, i64 %122\l  store float %121, float addrspace(1)* %123, align 4, !tbaa !7\l  call void @llvm.lifetime.end.p5i8(i64 49152, i8 addrspace(5)* %17) #3\l  br label %188\l}"];
	Node0x594ec70 -> Node0x594e5e0;
	Node0x594ec20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%124:\l124:                                              \l  %125 = phi i32 [ %131, %124 ], [ 0, %19 ]\l  %126 = phi float [ %186, %124 ], [ 0.000000e+00, %19 ]\l  %127 = urem i32 %125, 12288\l  %128 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %127\l  %129 = load float, float addrspace(5)* %128, align 4, !tbaa !7\l  %130 = fadd contract float %129, 0.000000e+00\l  %131 = add nuw nsw i32 %125, 1\l  %132 = urem i32 %131, 12288\l  %133 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %132\l  %134 = load float, float addrspace(5)* %133, align 4, !tbaa !7\l  %135 = fadd contract float %130, %134\l  %136 = add nuw nsw i32 %125, 2\l  %137 = urem i32 %136, 12288\l  %138 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %137\l  %139 = load float, float addrspace(5)* %138, align 4, !tbaa !7\l  %140 = fadd contract float %135, %139\l  %141 = add nuw nsw i32 %125, 3\l  %142 = urem i32 %141, 12288\l  %143 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %142\l  %144 = load float, float addrspace(5)* %143, align 4, !tbaa !7\l  %145 = fadd contract float %140, %144\l  %146 = add nuw nsw i32 %125, 4\l  %147 = urem i32 %146, 12288\l  %148 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %147\l  %149 = load float, float addrspace(5)* %148, align 4, !tbaa !7\l  %150 = fadd contract float %145, %149\l  %151 = add nuw nsw i32 %125, 5\l  %152 = urem i32 %151, 12288\l  %153 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %152\l  %154 = load float, float addrspace(5)* %153, align 4, !tbaa !7\l  %155 = fadd contract float %150, %154\l  %156 = add nuw nsw i32 %125, 6\l  %157 = urem i32 %156, 12288\l  %158 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %157\l  %159 = load float, float addrspace(5)* %158, align 4, !tbaa !7\l  %160 = fadd contract float %155, %159\l  %161 = add nuw nsw i32 %125, 7\l  %162 = urem i32 %161, 12288\l  %163 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %162\l  %164 = load float, float addrspace(5)* %163, align 4, !tbaa !7\l  %165 = fadd contract float %160, %164\l  %166 = add nuw nsw i32 %125, 8\l  %167 = urem i32 %166, 12288\l  %168 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %167\l  %169 = load float, float addrspace(5)* %168, align 4, !tbaa !7\l  %170 = fadd contract float %165, %169\l  %171 = add nuw nsw i32 %125, 9\l  %172 = urem i32 %171, 12288\l  %173 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %172\l  %174 = load float, float addrspace(5)* %173, align 4, !tbaa !7\l  %175 = fadd contract float %170, %174\l  %176 = add nuw nsw i32 %125, 10\l  %177 = urem i32 %176, 12288\l  %178 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %177\l  %179 = load float, float addrspace(5)* %178, align 4, !tbaa !7\l  %180 = fadd contract float %175, %179\l  %181 = add nuw nsw i32 %125, 11\l  %182 = urem i32 %181, 12288\l  %183 = getelementptr inbounds [12288 x float], [12288 x float] addrspace(5)*\l... %5, i32 0, i32 %182\l  %184 = load float, float addrspace(5)* %183, align 4, !tbaa !7\l  %185 = fadd contract float %180, %184\l  %186 = fadd contract float %126, %185\l  %187 = icmp eq i32 %131, %0\l  br i1 %187, label %120, label %124, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x594ec20:s0 -> Node0x594ec70;
	Node0x594ec20:s1 -> Node0x594ec20;
	Node0x594e5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%188:\l188:                                              \l  ret void\l}"];
}
