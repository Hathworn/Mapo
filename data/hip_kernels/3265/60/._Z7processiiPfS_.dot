digraph "CFG for '_Z7processiiPfS_' function" {
	label="CFG for '_Z7processiiPfS_' function";

	Node0x44f9030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %1\l  br i1 %14, label %15, label %110\l|{<s0>T|<s1>F}}"];
	Node0x44f9030:s0 -> Node0x44faf40;
	Node0x44f9030:s1 -> Node0x44fafd0;
	Node0x44faf40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%15:\l15:                                               \l  %16 = icmp sgt i32 %0, 0\l  br i1 %16, label %17, label %106\l|{<s0>T|<s1>F}}"];
	Node0x44faf40:s0 -> Node0x44f9be0;
	Node0x44faf40:s1 -> Node0x44fb2b0;
	Node0x44f9be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%17:\l17:                                               \l  %18 = mul nsw i32 %13, 12288\l  br label %19\l}"];
	Node0x44f9be0 -> Node0x44fb470;
	Node0x44fb470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = phi i32 [ 0, %17 ], [ %28, %19 ]\l  %21 = phi float [ 0.000000e+00, %17 ], [ %104, %19 ]\l  %22 = urem i32 %20, 12288\l  %23 = add nsw i32 %22, %18\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %2, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = fadd contract float %21, %26\l  %28 = add nuw nsw i32 %20, 1\l  %29 = urem i32 %28, 12288\l  %30 = add nsw i32 %29, %18\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %2, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = fadd contract float %27, %33\l  %35 = add nuw nsw i32 %20, 2\l  %36 = urem i32 %35, 12288\l  %37 = add nsw i32 %36, %18\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %2, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %41 = fadd contract float %34, %40\l  %42 = add nuw nsw i32 %20, 3\l  %43 = urem i32 %42, 12288\l  %44 = add nsw i32 %43, %18\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %2, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fadd contract float %41, %47\l  %49 = add nuw nsw i32 %20, 4\l  %50 = urem i32 %49, 12288\l  %51 = add nsw i32 %50, %18\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %2, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %55 = fadd contract float %48, %54\l  %56 = add nuw nsw i32 %20, 5\l  %57 = urem i32 %56, 12288\l  %58 = add nsw i32 %57, %18\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %2, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %62 = fadd contract float %55, %61\l  %63 = add nuw nsw i32 %20, 6\l  %64 = urem i32 %63, 12288\l  %65 = add nsw i32 %64, %18\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %2, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %69 = fadd contract float %62, %68\l  %70 = add nuw nsw i32 %20, 7\l  %71 = urem i32 %70, 12288\l  %72 = add nsw i32 %71, %18\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %2, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %76 = fadd contract float %69, %75\l  %77 = add nuw nsw i32 %20, 8\l  %78 = urem i32 %77, 12288\l  %79 = add nsw i32 %78, %18\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %2, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %83 = fadd contract float %76, %82\l  %84 = add nuw nsw i32 %20, 9\l  %85 = urem i32 %84, 12288\l  %86 = add nsw i32 %85, %18\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %2, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %90 = fadd contract float %83, %89\l  %91 = add nuw nsw i32 %20, 10\l  %92 = urem i32 %91, 12288\l  %93 = add nsw i32 %92, %18\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %2, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %97 = fadd contract float %90, %96\l  %98 = add nuw nsw i32 %20, 11\l  %99 = urem i32 %98, 12288\l  %100 = add nsw i32 %99, %18\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %2, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %104 = fadd contract float %97, %103\l  %105 = icmp eq i32 %28, %0\l  br i1 %105, label %106, label %19, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x44fb470:s0 -> Node0x44fb2b0;
	Node0x44fb470:s1 -> Node0x44fb470;
	Node0x44fb2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%106:\l106:                                              \l  %107 = phi float [ 0.000000e+00, %15 ], [ %104, %19 ]\l  %108 = sext i32 %13 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %3, i64 %108\l  store float %107, float addrspace(1)* %109, align 4, !tbaa !7\l  br label %110\l}"];
	Node0x44fb2b0 -> Node0x44fafd0;
	Node0x44fafd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%110:\l110:                                              \l  ret void\l}"];
}
