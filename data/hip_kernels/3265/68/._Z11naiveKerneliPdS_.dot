digraph "CFG for '_Z11naiveKerneliPdS_' function" {
	label="CFG for '_Z11naiveKerneliPdS_' function";

	Node0x4d4afc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %0\l  br i1 %13, label %14, label %91\l|{<s0>T|<s1>F}}"];
	Node0x4d4afc0:s0 -> Node0x4d4cec0;
	Node0x4d4afc0:s1 -> Node0x4d4cf50;
	Node0x4d4cec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%14:\l14:                                               \l  %15 = icmp sgt i32 %0, 0\l  %16 = sext i32 %12 to i64\l  %17 = getelementptr inbounds double, double addrspace(1)* %2, i64 %16\l  %18 = load double, double addrspace(1)* %17, align 8, !tbaa !7\l  br i1 %15, label %19, label %40\l|{<s0>T|<s1>F}}"];
	Node0x4d4cec0:s0 -> Node0x4d4d470;
	Node0x4d4cec0:s1 -> Node0x4d4d500;
	Node0x4d4d470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = and i32 %0, 7\l  %21 = icmp ult i32 %0, 8\l  br i1 %21, label %24, label %22\l|{<s0>T|<s1>F}}"];
	Node0x4d4d470:s0 -> Node0x4d4d790;
	Node0x4d4d470:s1 -> Node0x4d4d7e0;
	Node0x4d4d7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%22:\l22:                                               \l  %23 = and i32 %0, -8\l  br label %45\l}"];
	Node0x4d4d7e0 -> Node0x4d4d9e0;
	Node0x4d4d790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%24:\l24:                                               \l  %25 = phi double [ undef, %19 ], [ %87, %45 ]\l  %26 = phi double [ %18, %19 ], [ %87, %45 ]\l  %27 = phi i32 [ 0, %19 ], [ %88, %45 ]\l  %28 = icmp eq i32 %20, 0\l  br i1 %28, label %40, label %29\l|{<s0>T|<s1>F}}"];
	Node0x4d4d790:s0 -> Node0x4d4d500;
	Node0x4d4d790:s1 -> Node0x4d4e200;
	Node0x4d4e200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi double [ %36, %29 ], [ %26, %24 ]\l  %31 = phi i32 [ %37, %29 ], [ %27, %24 ]\l  %32 = phi i32 [ %38, %29 ], [ 0, %24 ]\l  %33 = zext i32 %31 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %36 = fadd contract double %35, %30\l  store double %36, double addrspace(1)* %17, align 8, !tbaa !7\l  %37 = add nuw nsw i32 %31, 1\l  %38 = add i32 %32, 1\l  %39 = icmp eq i32 %38, %20\l  br i1 %39, label %40, label %29, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4d4e200:s0 -> Node0x4d4d500;
	Node0x4d4e200:s1 -> Node0x4d4e200;
	Node0x4d4d500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%40:\l40:                                               \l  %41 = phi double [ %18, %14 ], [ %25, %24 ], [ %36, %29 ]\l  %42 = sitofp i32 %0 to double\l  %43 = getelementptr inbounds double, double addrspace(1)* %2, i64 %16\l  %44 = fdiv contract double %41, %42\l  store double %44, double addrspace(1)* %43, align 8, !tbaa !7\l  br label %91\l}"];
	Node0x4d4d500 -> Node0x4d4cf50;
	Node0x4d4d9e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%45:\l45:                                               \l  %46 = phi double [ %18, %22 ], [ %87, %45 ]\l  %47 = phi i32 [ 0, %22 ], [ %88, %45 ]\l  %48 = phi i32 [ 0, %22 ], [ %89, %45 ]\l  %49 = zext i32 %47 to i64\l  %50 = getelementptr inbounds double, double addrspace(1)* %1, i64 %49\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !7\l  %52 = fadd contract double %51, %46\l  store double %52, double addrspace(1)* %17, align 8, !tbaa !7\l  %53 = or i32 %47, 1\l  %54 = zext i32 %53 to i64\l  %55 = getelementptr inbounds double, double addrspace(1)* %1, i64 %54\l  %56 = load double, double addrspace(1)* %55, align 8, !tbaa !7\l  %57 = fadd contract double %56, %52\l  store double %57, double addrspace(1)* %17, align 8, !tbaa !7\l  %58 = or i32 %47, 2\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds double, double addrspace(1)* %1, i64 %59\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !7\l  %62 = fadd contract double %61, %57\l  store double %62, double addrspace(1)* %17, align 8, !tbaa !7\l  %63 = or i32 %47, 3\l  %64 = zext i32 %63 to i64\l  %65 = getelementptr inbounds double, double addrspace(1)* %1, i64 %64\l  %66 = load double, double addrspace(1)* %65, align 8, !tbaa !7\l  %67 = fadd contract double %66, %62\l  store double %67, double addrspace(1)* %17, align 8, !tbaa !7\l  %68 = or i32 %47, 4\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds double, double addrspace(1)* %1, i64 %69\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !7\l  %72 = fadd contract double %71, %67\l  store double %72, double addrspace(1)* %17, align 8, !tbaa !7\l  %73 = or i32 %47, 5\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds double, double addrspace(1)* %1, i64 %74\l  %76 = load double, double addrspace(1)* %75, align 8, !tbaa !7\l  %77 = fadd contract double %76, %72\l  store double %77, double addrspace(1)* %17, align 8, !tbaa !7\l  %78 = or i32 %47, 6\l  %79 = zext i32 %78 to i64\l  %80 = getelementptr inbounds double, double addrspace(1)* %1, i64 %79\l  %81 = load double, double addrspace(1)* %80, align 8, !tbaa !7\l  %82 = fadd contract double %81, %77\l  store double %82, double addrspace(1)* %17, align 8, !tbaa !7\l  %83 = or i32 %47, 7\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds double, double addrspace(1)* %1, i64 %84\l  %86 = load double, double addrspace(1)* %85, align 8, !tbaa !7\l  %87 = fadd contract double %86, %82\l  store double %87, double addrspace(1)* %17, align 8, !tbaa !7\l  %88 = add nuw nsw i32 %47, 8\l  %89 = add i32 %48, 8\l  %90 = icmp eq i32 %89, %23\l  br i1 %90, label %24, label %45, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4d4d9e0:s0 -> Node0x4d4d790;
	Node0x4d4d9e0:s1 -> Node0x4d4d9e0;
	Node0x4d4cf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%91:\l91:                                               \l  ret void\l}"];
}
