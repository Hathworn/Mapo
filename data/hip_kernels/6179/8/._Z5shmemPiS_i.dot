digraph "CFG for '_Z5shmemPiS_i' function" {
	label="CFG for '_Z5shmemPiS_i' function";

	Node0x4988cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %8\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %19\l|{<s0>T|<s1>F}}"];
	Node0x4988cb0:s0 -> Node0x498abc0;
	Node0x4988cb0:s1 -> Node0x498ac50;
	Node0x498abc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %15\l  %17 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %18 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @buf, i32 0,\l... i32 %12\l  store i32 %17, i32 addrspace(3)* %18, align 4, !tbaa !7\l  br label %19\l}"];
	Node0x498abc0 -> Node0x498ac50;
	Node0x498ac50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %20 = sdiv i32 %2, 2\l  %21 = icmp slt i32 %12, %20\l  br i1 %21, label %22, label %29\l|{<s0>T|<s1>F}}"];
	Node0x498ac50:s0 -> Node0x498c340;
	Node0x498ac50:s1 -> Node0x498c390;
	Node0x498c340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%22:\l22:                                               \l  %23 = xor i32 %12, -1\l  %24 = add i32 %23, %2\l  %25 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @buf, i32 0,\l... i32 %24\l  %26 = load i32, i32 addrspace(3)* %25, align 4, !tbaa !7\l  %27 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @buf, i32 0,\l... i32 %12\l  %28 = load i32, i32 addrspace(3)* %27, align 4, !tbaa !7\l  store i32 %28, i32 addrspace(3)* %25, align 4, !tbaa !7\l  store i32 %26, i32 addrspace(3)* %27, align 4, !tbaa !7\l  br label %29\l}"];
	Node0x498c340 -> Node0x498c390;
	Node0x498c390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %13, label %30, label %35\l|{<s0>T|<s1>F}}"];
	Node0x498c390:s0 -> Node0x498cbb0;
	Node0x498c390:s1 -> Node0x498cc00;
	Node0x498cbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%30:\l30:                                               \l  %31 = sext i32 %12 to i64\l  %32 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @buf, i32 0,\l... i32 %12\l  %33 = load i32, i32 addrspace(3)* %32, align 4, !tbaa !7\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %31\l  store i32 %33, i32 addrspace(1)* %34, align 4, !tbaa !7\l  br label %35\l}"];
	Node0x498cbb0 -> Node0x498cc00;
	Node0x498cc00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  ret void\l}"];
}
