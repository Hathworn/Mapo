digraph "CFG for '_Z6interpPfS_i' function" {
	label="CFG for '_Z6interpPfS_i' function";

	Node0x5b006e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %8\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5b006e0:s0 -> Node0x5b01fb0;
	Node0x5b006e0:s1 -> Node0x5b02040;
	Node0x5b01fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%14:\l14:                                               \l  %15 = load %struct.__hip_texture*, %struct.__hip_texture* addrspace(1)*\l... getelementptr inbounds (%struct.texture, %struct.texture addrspace(1)*\l... @tex_sin3, i64 0, i32 0, i32 11), align 8\l  %16 = sitofp i32 %12 to float\l  %17 = sitofp i32 %2 to float\l  %18 = fdiv contract float %16, %17\l  %19 = bitcast %struct.__hip_texture* %15 to i32*\l  %20 = addrspacecast i32* %19 to i32 addrspace(4)*\l  %21 = getelementptr inbounds i32, i32 addrspace(4)* %20, i64 12\l  %22 = getelementptr inbounds i32, i32 addrspace(4)* %20, i64 10\l  %23 = load i32, i32 addrspace(4)* %22, align 4, !tbaa !7\l  %24 = uitofp i32 %23 to float\l  %25 = load i32, i32 addrspace(4)* %21, align 4, !tbaa !7\l  %26 = and i32 %25, 32768\l  %27 = icmp eq i32 %26, 0\l  %28 = select i1 %27, float %24, float 1.000000e+00\l  %29 = bitcast i32 addrspace(4)* %21 to \<4 x i32\> addrspace(4)*\l  %30 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %29, align 16, !tbaa !11\l  %31 = bitcast %struct.__hip_texture* %15 to \<8 x i32\>*\l  %32 = addrspacecast \<8 x i32\>* %31 to \<8 x i32\> addrspace(4)*\l  %33 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %32, align 32, !tbaa !11\l  %34 = extractelement \<4 x i32\> %30, i64 2\l  %35 = and i32 %34, 1048576\l  %36 = icmp eq i32 %35, 0\l  %37 = tail call float @llvm.amdgcn.rcp.f32(float %28)\l  %38 = fmul float %18, %28\l  %39 = tail call float @llvm.floor.f32(float %38)\l  %40 = fmul float %37, %39\l  %41 = select i1 %36, float %40, float %18\l  %42 = tail call float @llvm.amdgcn.image.sample.lz.1d.f32.f32(i32 1, float\l... %41, \<8 x i32\> %33, \<4 x i32\> %30, i1 false, i32 0, i32 0)\l  %43 = sext i32 %12 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  store float %42, float addrspace(1)* %44, align 4, !tbaa !12\l  %45 = load %struct.__hip_texture*, %struct.__hip_texture* addrspace(1)*\l... getelementptr inbounds (%struct.texture, %struct.texture addrspace(1)*\l... @tex_sin, i64 0, i32 0, i32 11), align 8\l  %46 = bitcast %struct.__hip_texture* %45 to i32*\l  %47 = addrspacecast i32* %46 to i32 addrspace(4)*\l  %48 = getelementptr inbounds i32, i32 addrspace(4)* %47, i64 12\l  %49 = getelementptr inbounds i32, i32 addrspace(4)* %47, i64 10\l  %50 = load i32, i32 addrspace(4)* %49, align 4, !tbaa !7\l  %51 = uitofp i32 %50 to float\l  %52 = load i32, i32 addrspace(4)* %48, align 4, !tbaa !7\l  %53 = and i32 %52, 32768\l  %54 = icmp eq i32 %53, 0\l  %55 = select i1 %54, float %51, float 1.000000e+00\l  %56 = bitcast i32 addrspace(4)* %48 to \<4 x i32\> addrspace(4)*\l  %57 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %56, align 16, !tbaa !11\l  %58 = bitcast %struct.__hip_texture* %45 to \<8 x i32\>*\l  %59 = addrspacecast \<8 x i32\>* %58 to \<8 x i32\> addrspace(4)*\l  %60 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %59, align 32, !tbaa !11\l  %61 = extractelement \<4 x i32\> %57, i64 2\l  %62 = and i32 %61, 1048576\l  %63 = icmp eq i32 %62, 0\l  %64 = tail call float @llvm.amdgcn.rcp.f32(float %55)\l  %65 = fmul float %18, %55\l  %66 = tail call float @llvm.floor.f32(float %65)\l  %67 = fmul float %64, %66\l  %68 = select i1 %63, float %67, float %18\l  %69 = tail call float @llvm.amdgcn.image.sample.lz.1d.f32.f32(i32 1, float\l... %68, \<8 x i32\> %60, \<4 x i32\> %57, i1 false, i32 0, i32 0)\l  %70 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  store float %69, float addrspace(1)* %70, align 4, !tbaa !12\l  br label %71\l}"];
	Node0x5b01fb0 -> Node0x5b02040;
	Node0x5b02040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  ret void\l}"];
}
