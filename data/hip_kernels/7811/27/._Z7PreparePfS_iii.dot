digraph "CFG for '_Z7PreparePfS_iii' function" {
	label="CFG for '_Z7PreparePfS_iii' function";

	Node0x63fccb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = icmp slt i32 %14, %2\l  %24 = icmp slt i32 %22, %3\l  %25 = select i1 %23, i1 %24, i1 false\l  br i1 %25, label %26, label %68\l|{<s0>T|<s1>F}}"];
	Node0x63fccb0:s0 -> Node0x6400720;
	Node0x63fccb0:s1 -> Node0x64007b0;
	Node0x6400720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%26:\l26:                                               \l  %27 = mul nsw i32 %22, %2\l  %28 = add nsw i32 %27, %14\l  %29 = shl nsw i32 %28, 2\l  %30 = sitofp i32 %14 to float\l  %31 = add nsw i32 %2, -1\l  %32 = sitofp i32 %31 to float\l  %33 = fdiv contract float %30, %32\l  %34 = icmp eq i32 %4, 1\l  %35 = sext i32 %29 to i64\l  br i1 %34, label %39, label %36\l|{<s0>T|<s1>F}}"];
	Node0x6400720:s0 -> Node0x63fee20;
	Node0x6400720:s1 -> Node0x6400f80;
	Node0x6400f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%36:\l36:                                               \l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  br label %39\l}"];
	Node0x6400f80 -> Node0x63fee20;
	Node0x63fee20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%39:\l39:                                               \l  %40 = phi contract float [ %38, %36 ], [ %33, %26 ]\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  store float %40, float addrspace(1)* %41, align 4, !tbaa !7\l  %42 = add nuw nsw i32 %29, 1\l  %43 = sext i32 %42 to i64\l  br i1 %34, label %52, label %44\l|{<s0>T|<s1>F}}"];
	Node0x63fee20:s0 -> Node0x6401ce0;
	Node0x63fee20:s1 -> Node0x6401d30;
	Node0x6401d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%44:\l44:                                               \l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  store float %46, float addrspace(1)* %47, align 4, !tbaa !7\l  %48 = add nuw nsw i32 %29, 2\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7\l  br label %56\l}"];
	Node0x6401d30 -> Node0x64022c0;
	Node0x6401ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%52:\l52:                                               \l  %53 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  store float %33, float addrspace(1)* %53, align 4, !tbaa !7\l  %54 = add nuw nsw i32 %29, 2\l  %55 = sext i32 %54 to i64\l  br label %56\l}"];
	Node0x6401ce0 -> Node0x64022c0;
	Node0x64022c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%56:\l56:                                               \l  %57 = phi i64 [ %55, %52 ], [ %49, %44 ]\l  %58 = phi contract float [ %33, %52 ], [ %51, %44 ]\l  %59 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  store float %58, float addrspace(1)* %59, align 4, !tbaa !7\l  %60 = add nuw nsw i32 %29, 3\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  store float 1.000000e+00, float addrspace(1)* %62, align 4, !tbaa !7\l  %63 = icmp eq i32 %4, 2\l  br i1 %63, label %64, label %68\l|{<s0>T|<s1>F}}"];
	Node0x64022c0:s0 -> Node0x6403580;
	Node0x64022c0:s1 -> Node0x64007b0;
	Node0x6403580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%64:\l64:                                               \l  %65 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  store float %33, float addrspace(1)* %65, align 4, !tbaa !7\l  %66 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  store float %33, float addrspace(1)* %66, align 4, !tbaa !7\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  store float %33, float addrspace(1)* %67, align 4, !tbaa !7\l  br label %68\l}"];
	Node0x6403580 -> Node0x64007b0;
	Node0x64007b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  ret void\l}"];
}
