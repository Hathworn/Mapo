digraph "CFG for '_Z16FilmGradeKernelCPfiifffffff' function" {
	label="CFG for '_Z16FilmGradeKernelCPfiifffffff' function";

	Node0x4592cc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %27 = add i32 %25, %26\l  %28 = icmp slt i32 %19, %1\l  %29 = icmp slt i32 %27, %2\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %73\l|{<s0>T|<s1>F}}"];
	Node0x4592cc0:s0 -> Node0x45974d0;
	Node0x4592cc0:s1 -> Node0x4597560;
	Node0x45974d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %27, %1\l  %33 = add nsw i32 %32, %19\l  %34 = shl nsw i32 %33, 2\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = fsub contract float %37, %9\l  %39 = fmul contract float %38, %3\l  %40 = fadd contract float %39, %9\l  %41 = add nuw nsw i32 %34, 1\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = fsub contract float %44, %9\l  %46 = fmul contract float %45, %4\l  %47 = fadd contract float %46, %9\l  %48 = add nuw nsw i32 %34, 2\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %52 = fsub contract float %51, %9\l  %53 = fmul contract float %52, %5\l  %54 = fadd contract float %53, %9\l  %55 = fmul contract float %40, 0x3FCB367A00000000\l  %56 = fmul contract float %47, 0x3FE6E2EB20000000\l  %57 = fadd contract float %55, %56\l  %58 = fmul contract float %54, 0x3FB27BB300000000\l  %59 = fadd contract float %57, %58\l  %60 = fmul contract float %6, 0x3FCB367A00000000\l  %61 = fmul contract float %7, 0x3FE6E2EB20000000\l  %62 = fadd contract float %60, %61\l  %63 = fmul contract float %8, 0x3FB27BB300000000\l  %64 = fadd contract float %62, %63\l  %65 = fsub contract float 1.000000e+00, %64\l  %66 = fmul contract float %65, %59\l  %67 = fmul contract float %40, %6\l  %68 = fadd contract float %67, %66\l  %69 = fmul contract float %47, %7\l  %70 = fadd contract float %69, %66\l  %71 = fmul contract float %54, %8\l  %72 = fadd contract float %71, %66\l  store float %68, float addrspace(1)* %36, align 4, !tbaa !7\l  store float %70, float addrspace(1)* %43, align 4, !tbaa !7\l  store float %72, float addrspace(1)* %50, align 4, !tbaa !7\l  br label %73\l}"];
	Node0x45974d0 -> Node0x4597560;
	Node0x4597560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  ret void\l}"];
}
