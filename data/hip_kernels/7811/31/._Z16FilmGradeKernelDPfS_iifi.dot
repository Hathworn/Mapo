digraph "CFG for '_Z16FilmGradeKernelDPfS_iifi' function" {
	label="CFG for '_Z16FilmGradeKernelDPfS_iifi' function";

	Node0x4fd96f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = sitofp i32 %3 to float\l  %25 = sitofp i32 %2 to float\l  %26 = sitofp i32 %15 to float\l  %27 = sitofp i32 %23 to float\l  %28 = fdiv contract float %25, 1.920000e+03\l  %29 = icmp slt i32 %15, %2\l  %30 = icmp slt i32 %23, %3\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %180\l|{<s0>T|<s1>F}}"];
	Node0x4fd96f0:s0 -> Node0x4fdde10;
	Node0x4fd96f0:s1 -> Node0x4fddea0;
	Node0x4fdde10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%32:\l32:                                               \l  %33 = mul nsw i32 %23, %2\l  %34 = add nsw i32 %33, %15\l  %35 = shl nsw i32 %34, 2\l  switch i32 %5, label %180 [\l    i32 1, label %43\l    i32 2, label %36\l  ]\l|{<s0>def|<s1>1|<s2>2}}"];
	Node0x4fdde10:s0 -> Node0x4fddea0;
	Node0x4fdde10:s1 -> Node0x4fde310;
	Node0x4fdde10:s2 -> Node0x4fde360;
	Node0x4fde360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%36:\l36:                                               \l  %37 = fdiv contract float %27, %24\l  %38 = fmul contract float %28, 0x3F747AE140000000\l  %39 = fadd contract float %38, %4\l  %40 = fcmp contract ult float %37, %4\l  %41 = fcmp contract ugt float %37, %39\l  %42 = select i1 %40, i1 true, i1 %41\l  br i1 %42, label %156, label %110\l|{<s0>T|<s1>F}}"];
	Node0x4fde360:s0 -> Node0x4fde8c0;
	Node0x4fde360:s1 -> Node0x4fde950;
	Node0x4fde310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%43:\l43:                                               \l  %44 = fdiv contract float %27, %24\l  %45 = fcmp contract ult float %44, %4\l  %46 = fmul contract float %28, 0x3F747AE140000000\l  %47 = fadd contract float %46, %4\l  %48 = fcmp contract ugt float %44, %47\l  %49 = select i1 %45, i1 true, i1 %48\l  br i1 %49, label %97, label %50\l|{<s0>T|<s1>F}}"];
	Node0x4fde310:s0 -> Node0x4fdee10;
	Node0x4fde310:s1 -> Node0x4fdee60;
	Node0x4fdee60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%50:\l50:                                               \l  %51 = tail call float @llvm.fabs.f32(float %26)\l  %52 = fcmp ogt float %51, 2.000000e+00\l  br i1 %52, label %53, label %86\l|{<s0>T|<s1>F}}"];
	Node0x4fdee60:s0 -> Node0x4fdf220;
	Node0x4fdee60:s1 -> Node0x4fdf2b0;
	Node0x4fdf220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%53:\l53:                                               \l  %54 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %51)\l  %55 = tail call float @llvm.amdgcn.frexp.mant.f32(float %51)\l  %56 = tail call float @llvm.amdgcn.ldexp.f32(float %55, i32 12)\l  %57 = add i32 %54, -2\l  %58 = icmp sgt i32 %57, 12\l  br i1 %58, label %59, label %70\l|{<s0>T|<s1>F}}"];
	Node0x4fdf220:s0 -> Node0x4fdfbe0;
	Node0x4fdf220:s1 -> Node0x4fdfc70;
	Node0x4fdfbe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%59:\l59:                                               \l  %60 = phi float [ %67, %59 ], [ %56, %53 ]\l  %61 = phi i32 [ %68, %59 ], [ %57, %53 ]\l  %62 = tail call float @llvm.rint.f32(float %60)\l  %63 = fsub float %60, %62\l  %64 = fcmp olt float %63, 0.000000e+00\l  %65 = select i1 %64, float 1.000000e+00, float -0.000000e+00\l  %66 = fadd float %63, %65\l  %67 = tail call float @llvm.amdgcn.ldexp.f32(float %66, i32 12)\l  %68 = add nsw i32 %61, -12\l  %69 = icmp ugt i32 %61, 24\l  br i1 %69, label %59, label %70\l|{<s0>T|<s1>F}}"];
	Node0x4fdfbe0:s0 -> Node0x4fdfbe0;
	Node0x4fdfbe0:s1 -> Node0x4fdfc70;
	Node0x4fdfc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%70:\l70:                                               \l  %71 = phi i32 [ %57, %53 ], [ %68, %59 ]\l  %72 = phi float [ %56, %53 ], [ %67, %59 ]\l  %73 = add nsw i32 %71, -11\l  %74 = tail call float @llvm.amdgcn.ldexp.f32(float %72, i32 %73)\l  %75 = tail call float @llvm.rint.f32(float %74)\l  %76 = fsub float %74, %75\l  %77 = fcmp olt float %76, 0.000000e+00\l  %78 = select i1 %77, float 1.000000e+00, float -0.000000e+00\l  %79 = fadd float %76, %78\l  %80 = tail call float @llvm.amdgcn.ldexp.f32(float %79, i32 1)\l  %81 = bitcast float %26 to i32\l  %82 = and i32 %81, -2147483648\l  %83 = bitcast float %80 to i32\l  %84 = xor i32 %82, %83\l  %85 = bitcast i32 %84 to float\l  br label %90\l}"];
	Node0x4fdfc70 -> Node0x4fe1490;
	Node0x4fdf2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%86:\l86:                                               \l  %87 = fcmp oeq float %51, 2.000000e+00\l  %88 = tail call float @llvm.copysign.f32(float 0.000000e+00, float %26)\l  %89 = select i1 %87, float %88, float %26\l  br label %90\l}"];
	Node0x4fdf2b0 -> Node0x4fe1490;
	Node0x4fe1490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%90:\l90:                                               \l  %91 = phi float [ %85, %70 ], [ %89, %86 ]\l  %92 = tail call i1 @llvm.amdgcn.class.f32(float %26, i32 504)\l  %93 = select i1 %92, float %91, float 0x7FF8000000000000\l  %94 = fcmp contract une float %93, 0.000000e+00\l  %95 = select contract i1 %94, float 1.000000e+00, float 0.000000e+00\l  %96 = sext i32 %35 to i64\l  br label %176\l}"];
	Node0x4fe1490 -> Node0x4fe1de0;
	Node0x4fdee10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%97:\l97:                                               \l  %98 = sext i32 %35 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %1, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %101 = fmul contract float %28, 5.000000e+00\l  %102 = fsub contract float %27, %101\l  %103 = fdiv contract float %102, %24\l  %104 = fcmp contract ult float %100, %103\l  br i1 %104, label %176, label %105\l|{<s0>T|<s1>F}}"];
	Node0x4fdee10:s0 -> Node0x4fe1de0;
	Node0x4fdee10:s1 -> Node0x4fe2480;
	Node0x4fe2480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%105:\l105:                                              \l  %106 = fadd contract float %101, %27\l  %107 = fdiv contract float %106, %24\l  %108 = fcmp contract ole float %100, %107\l  %109 = select contract i1 %108, float 1.000000e+00, float 0.000000e+00\l  br label %176\l}"];
	Node0x4fe2480 -> Node0x4fe1de0;
	Node0x4fde950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%110:\l110:                                              \l  %111 = tail call float @llvm.fabs.f32(float %26)\l  %112 = fcmp ogt float %111, 2.000000e+00\l  br i1 %112, label %113, label %146\l|{<s0>T|<s1>F}}"];
	Node0x4fde950:s0 -> Node0x4fe2a10;
	Node0x4fde950:s1 -> Node0x4fe2a60;
	Node0x4fe2a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%113:\l113:                                              \l  %114 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %111)\l  %115 = tail call float @llvm.amdgcn.frexp.mant.f32(float %111)\l  %116 = tail call float @llvm.amdgcn.ldexp.f32(float %115, i32 12)\l  %117 = add i32 %114, -2\l  %118 = icmp sgt i32 %117, 12\l  br i1 %118, label %119, label %130\l|{<s0>T|<s1>F}}"];
	Node0x4fe2a10:s0 -> Node0x4fe2fc0;
	Node0x4fe2a10:s1 -> Node0x4fe3010;
	Node0x4fe2fc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%119:\l119:                                              \l  %120 = phi float [ %127, %119 ], [ %116, %113 ]\l  %121 = phi i32 [ %128, %119 ], [ %117, %113 ]\l  %122 = tail call float @llvm.rint.f32(float %120)\l  %123 = fsub float %120, %122\l  %124 = fcmp olt float %123, 0.000000e+00\l  %125 = select i1 %124, float 1.000000e+00, float -0.000000e+00\l  %126 = fadd float %123, %125\l  %127 = tail call float @llvm.amdgcn.ldexp.f32(float %126, i32 12)\l  %128 = add nsw i32 %121, -12\l  %129 = icmp ugt i32 %121, 24\l  br i1 %129, label %119, label %130\l|{<s0>T|<s1>F}}"];
	Node0x4fe2fc0:s0 -> Node0x4fe2fc0;
	Node0x4fe2fc0:s1 -> Node0x4fe3010;
	Node0x4fe3010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%130:\l130:                                              \l  %131 = phi i32 [ %117, %113 ], [ %128, %119 ]\l  %132 = phi float [ %116, %113 ], [ %127, %119 ]\l  %133 = add nsw i32 %131, -11\l  %134 = tail call float @llvm.amdgcn.ldexp.f32(float %132, i32 %133)\l  %135 = tail call float @llvm.rint.f32(float %134)\l  %136 = fsub float %134, %135\l  %137 = fcmp olt float %136, 0.000000e+00\l  %138 = select i1 %137, float 1.000000e+00, float -0.000000e+00\l  %139 = fadd float %136, %138\l  %140 = tail call float @llvm.amdgcn.ldexp.f32(float %139, i32 1)\l  %141 = bitcast float %26 to i32\l  %142 = and i32 %141, -2147483648\l  %143 = bitcast float %140 to i32\l  %144 = xor i32 %142, %143\l  %145 = bitcast i32 %144 to float\l  br label %150\l}"];
	Node0x4fe3010 -> Node0x4fe4720;
	Node0x4fe2a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%146:\l146:                                              \l  %147 = fcmp oeq float %111, 2.000000e+00\l  %148 = tail call float @llvm.copysign.f32(float 0.000000e+00, float %26)\l  %149 = select i1 %147, float %148, float %26\l  br label %150\l}"];
	Node0x4fe2a60 -> Node0x4fe4720;
	Node0x4fe4720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%150:\l150:                                              \l  %151 = phi float [ %145, %130 ], [ %149, %146 ]\l  %152 = tail call i1 @llvm.amdgcn.class.f32(float %26, i32 504)\l  %153 = select i1 %152, float %151, float 0x7FF8000000000000\l  %154 = fcmp contract une float %153, 0.000000e+00\l  %155 = select contract i1 %154, float 1.000000e+00, float 0.000000e+00\l  br label %169\l}"];
	Node0x4fe4720 -> Node0x4fe4e50;
	Node0x4fde8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%156:\l156:                                              \l  %157 = sext i32 %35 to i64\l  %158 = getelementptr inbounds float, float addrspace(1)* %0, i64 %157\l  %159 = load float, float addrspace(1)* %158, align 4, !tbaa !7\l  %160 = fmul contract float %28, 5.000000e+00\l  %161 = fsub contract float %27, %160\l  %162 = fdiv contract float %161, %24\l  %163 = fcmp contract ult float %159, %162\l  br i1 %163, label %169, label %164\l|{<s0>T|<s1>F}}"];
	Node0x4fde8c0:s0 -> Node0x4fe4e50;
	Node0x4fde8c0:s1 -> Node0x4fe58e0;
	Node0x4fe58e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%164:\l164:                                              \l  %165 = fadd contract float %160, %27\l  %166 = fdiv contract float %165, %24\l  %167 = fcmp contract ole float %159, %166\l  %168 = select contract i1 %167, float 1.000000e+00, float 0.000000e+00\l  br label %169\l}"];
	Node0x4fe58e0 -> Node0x4fe4e50;
	Node0x4fe4e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%169:\l169:                                              \l  %170 = phi contract float [ %155, %150 ], [ 0.000000e+00, %156 ], [ %168,\l... %164 ]\l  %171 = fcmp contract oeq float %170, 0.000000e+00\l  %172 = sext i32 %35 to i64\l  br i1 %171, label %173, label %176\l|{<s0>T|<s1>F}}"];
	Node0x4fe4e50:s0 -> Node0x4fe5e80;
	Node0x4fe4e50:s1 -> Node0x4fe1de0;
	Node0x4fe5e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%173:\l173:                                              \l  %174 = getelementptr inbounds float, float addrspace(1)* %1, i64 %172\l  %175 = load float, float addrspace(1)* %174, align 4, !tbaa !7\l  br label %176\l}"];
	Node0x4fe5e80 -> Node0x4fe1de0;
	Node0x4fe1de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%176:\l176:                                              \l  %177 = phi i64 [ %98, %97 ], [ %98, %105 ], [ %96, %90 ], [ %172, %169 ], [\l... %172, %173 ]\l  %178 = phi float [ 0.000000e+00, %97 ], [ %109, %105 ], [ %95, %90 ], [\l... %170, %169 ], [ %175, %173 ]\l  %179 = getelementptr inbounds float, float addrspace(1)* %1, i64 %177\l  store float %178, float addrspace(1)* %179, align 4, !tbaa !7\l  br label %180\l}"];
	Node0x4fe1de0 -> Node0x4fddea0;
	Node0x4fddea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%180:\l180:                                              \l  ret void\l}"];
}
