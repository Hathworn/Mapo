digraph "CFG for '_Z15variance_kernelPfS_iiiS_' function" {
	label="CFG for '_Z15variance_kernelPfS_iiiS_' function";

	Node0x5acbb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%6:\l  %7 = mul nsw i32 %4, %2\l  %8 = add nsw i32 %7, -1\l  %9 = sitofp i32 %8 to float\l  %10 = fdiv contract float 1.000000e+00, %9\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !4\l  %17 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !13, !invariant.load\l... !14\l  %20 = zext i16 %19 to i32\l  %21 = udiv i32 %16, %20\l  %22 = mul i32 %21, %20\l  %23 = icmp ugt i32 %16, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %12\l  %27 = add i32 %26, %11\l  %28 = mul i32 %27, %20\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %30 = add i32 %28, %29\l  %31 = icmp slt i32 %30, %3\l  br i1 %31, label %32, label %217\l|{<s0>T|<s1>F}}"];
	Node0x5acbb00:s0 -> Node0x5aceff0;
	Node0x5acbb00:s1 -> Node0x5acf080;
	Node0x5aceff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %5, i64 %33\l  store float 0.000000e+00, float addrspace(1)* %34, align 4, !tbaa !16\l  %35 = icmp sgt i32 %2, 0\l  br i1 %35, label %36, label %214\l|{<s0>T|<s1>F}}"];
	Node0x5aceff0:s0 -> Node0x5acf630;
	Node0x5aceff0:s1 -> Node0x5acf6c0;
	Node0x5acf630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%36:\l36:                                               \l  %37 = icmp sgt i32 %4, 0\l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  br label %39\l}"];
	Node0x5acf630 -> Node0x5acf930;
	Node0x5acf930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%39:\l39:                                               \l  %40 = phi float [ 0.000000e+00, %36 ], [ %211, %210 ]\l  %41 = phi i32 [ 0, %36 ], [ %212, %210 ]\l  br i1 %37, label %42, label %210\l|{<s0>T|<s1>F}}"];
	Node0x5acf930:s0 -> Node0x5acfc80;
	Node0x5acf930:s1 -> Node0x5acfa20;
	Node0x5acfc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%42:\l42:                                               \l  %43 = mul nsw i32 %41, %3\l  %44 = add i32 %43, %30\l  %45 = mul i32 %44, %4\l  br label %46\l}"];
	Node0x5acfc80 -> Node0x5acff70;
	Node0x5acff70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i32 [ 0, %42 ], [ %208, %46 ]\l  %48 = add nsw i32 %47, %45\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !16\l  %52 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  %53 = fsub contract float %51, %52\l  %54 = tail call float @llvm.fabs.f32(float %53)\l  %55 = tail call float @llvm.amdgcn.frexp.mant.f32(float %54)\l  %56 = fcmp olt float %55, 0x3FE5555560000000\l  %57 = zext i1 %56 to i32\l  %58 = tail call float @llvm.amdgcn.ldexp.f32(float %55, i32 %57)\l  %59 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %54)\l  %60 = sub nsw i32 %59, %57\l  %61 = fadd float %58, -1.000000e+00\l  %62 = fadd float %58, 1.000000e+00\l  %63 = fadd float %62, -1.000000e+00\l  %64 = fsub float %58, %63\l  %65 = tail call float @llvm.amdgcn.rcp.f32(float %62)\l  %66 = fmul float %61, %65\l  %67 = fmul float %62, %66\l  %68 = fneg float %67\l  %69 = tail call float @llvm.fma.f32(float %66, float %62, float %68)\l  %70 = tail call float @llvm.fma.f32(float %66, float %64, float %69)\l  %71 = fadd float %67, %70\l  %72 = fsub float %71, %67\l  %73 = fsub float %70, %72\l  %74 = fsub float %61, %71\l  %75 = fsub float %61, %74\l  %76 = fsub float %75, %71\l  %77 = fsub float %76, %73\l  %78 = fadd float %74, %77\l  %79 = fmul float %65, %78\l  %80 = fadd float %66, %79\l  %81 = fsub float %80, %66\l  %82 = fsub float %79, %81\l  %83 = fmul float %80, %80\l  %84 = fneg float %83\l  %85 = tail call float @llvm.fma.f32(float %80, float %80, float %84)\l  %86 = fmul float %82, 2.000000e+00\l  %87 = tail call float @llvm.fma.f32(float %80, float %86, float %85)\l  %88 = fadd float %83, %87\l  %89 = fsub float %88, %83\l  %90 = fsub float %87, %89\l  %91 = tail call float @llvm.fmuladd.f32(float %88, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %92 = tail call float @llvm.fmuladd.f32(float %88, float %91, float\l... 0x3FD999BDE0000000)\l  %93 = sitofp i32 %60 to float\l  %94 = fmul float %93, 0x3FE62E4300000000\l  %95 = fneg float %94\l  %96 = tail call float @llvm.fma.f32(float %93, float 0x3FE62E4300000000,\l... float %95)\l  %97 = tail call float @llvm.fma.f32(float %93, float 0xBE205C6100000000,\l... float %96)\l  %98 = fadd float %94, %97\l  %99 = fsub float %98, %94\l  %100 = fsub float %97, %99\l  %101 = tail call float @llvm.amdgcn.ldexp.f32(float %80, i32 1)\l  %102 = fmul float %80, %88\l  %103 = fneg float %102\l  %104 = tail call float @llvm.fma.f32(float %88, float %80, float %103)\l  %105 = tail call float @llvm.fma.f32(float %88, float %82, float %104)\l  %106 = tail call float @llvm.fma.f32(float %90, float %80, float %105)\l  %107 = fadd float %102, %106\l  %108 = fsub float %107, %102\l  %109 = fsub float %106, %108\l  %110 = fmul float %88, %92\l  %111 = fneg float %110\l  %112 = tail call float @llvm.fma.f32(float %88, float %92, float %111)\l  %113 = tail call float @llvm.fma.f32(float %90, float %92, float %112)\l  %114 = fadd float %110, %113\l  %115 = fsub float %114, %110\l  %116 = fsub float %113, %115\l  %117 = fadd float %114, 0x3FE5555540000000\l  %118 = fadd float %117, 0xBFE5555540000000\l  %119 = fsub float %114, %118\l  %120 = fadd float %116, 0x3E2E720200000000\l  %121 = fadd float %120, %119\l  %122 = fadd float %117, %121\l  %123 = fsub float %122, %117\l  %124 = fsub float %121, %123\l  %125 = fmul float %107, %122\l  %126 = fneg float %125\l  %127 = tail call float @llvm.fma.f32(float %107, float %122, float %126)\l  %128 = tail call float @llvm.fma.f32(float %107, float %124, float %127)\l  %129 = tail call float @llvm.fma.f32(float %109, float %122, float %128)\l  %130 = tail call float @llvm.amdgcn.ldexp.f32(float %82, i32 1)\l  %131 = fadd float %125, %129\l  %132 = fsub float %131, %125\l  %133 = fsub float %129, %132\l  %134 = fadd float %101, %131\l  %135 = fsub float %134, %101\l  %136 = fsub float %131, %135\l  %137 = fadd float %130, %133\l  %138 = fadd float %137, %136\l  %139 = fadd float %134, %138\l  %140 = fsub float %139, %134\l  %141 = fsub float %138, %140\l  %142 = fadd float %98, %139\l  %143 = fsub float %142, %98\l  %144 = fsub float %142, %143\l  %145 = fsub float %98, %144\l  %146 = fsub float %139, %143\l  %147 = fadd float %146, %145\l  %148 = fadd float %100, %141\l  %149 = fsub float %148, %100\l  %150 = fsub float %148, %149\l  %151 = fsub float %100, %150\l  %152 = fsub float %141, %149\l  %153 = fadd float %152, %151\l  %154 = fadd float %148, %147\l  %155 = fadd float %142, %154\l  %156 = fsub float %155, %142\l  %157 = fsub float %154, %156\l  %158 = fadd float %153, %157\l  %159 = fadd float %155, %158\l  %160 = fsub float %159, %155\l  %161 = fsub float %158, %160\l  %162 = fmul float %159, 2.000000e+00\l  %163 = fneg float %162\l  %164 = tail call float @llvm.fma.f32(float %159, float 2.000000e+00, float\l... %163)\l  %165 = tail call float @llvm.fma.f32(float %161, float 2.000000e+00, float\l... %164)\l  %166 = fadd float %162, %165\l  %167 = fsub float %166, %162\l  %168 = fsub float %165, %167\l  %169 = tail call float @llvm.fabs.f32(float %162) #3\l  %170 = fcmp oeq float %169, 0x7FF0000000000000\l  %171 = select i1 %170, float %162, float %166\l  %172 = tail call float @llvm.fabs.f32(float %171) #3\l  %173 = fcmp oeq float %172, 0x7FF0000000000000\l  %174 = select i1 %173, float 0.000000e+00, float %168\l  %175 = fcmp oeq float %171, 0x40562E4300000000\l  %176 = select i1 %175, float 0x3EE0000000000000, float 0.000000e+00\l  %177 = fsub float %171, %176\l  %178 = fadd float %176, %174\l  %179 = fmul float %177, 0x3FF7154760000000\l  %180 = tail call float @llvm.rint.f32(float %179)\l  %181 = fcmp ogt float %177, 0x40562E4300000000\l  %182 = fcmp olt float %177, 0xC059D1DA00000000\l  %183 = fneg float %179\l  %184 = tail call float @llvm.fma.f32(float %177, float 0x3FF7154760000000,\l... float %183)\l  %185 = tail call float @llvm.fma.f32(float %177, float 0x3E54AE0BE0000000,\l... float %184)\l  %186 = fsub float %179, %180\l  %187 = fadd float %185, %186\l  %188 = tail call float @llvm.exp2.f32(float %187)\l  %189 = fptosi float %180 to i32\l  %190 = tail call float @llvm.amdgcn.ldexp.f32(float %188, i32 %189)\l  %191 = select i1 %182, float 0.000000e+00, float %190\l  %192 = select i1 %181, float 0x7FF0000000000000, float %191\l  %193 = tail call float @llvm.fma.f32(float %192, float %178, float %192)\l  %194 = tail call float @llvm.fabs.f32(float %192) #3\l  %195 = fcmp oeq float %194, 0x7FF0000000000000\l  %196 = select i1 %195, float %192, float %193\l  %197 = tail call float @llvm.fabs.f32(float %196)\l  %198 = fcmp oeq float %54, 0x7FF0000000000000\l  %199 = fcmp oeq float %53, 0.000000e+00\l  %200 = select i1 %198, float 0x7FF0000000000000, float %197\l  %201 = select i1 %199, float 0.000000e+00, float %200\l  %202 = fcmp uno float %53, 0.000000e+00\l  %203 = select i1 %202, float 0x7FF8000000000000, float %201\l  %204 = fcmp oeq float %53, 1.000000e+00\l  %205 = select i1 %204, float 1.000000e+00, float %203\l  %206 = load float, float addrspace(1)* %34, align 4, !tbaa !16\l  %207 = fadd contract float %206, %205\l  store float %207, float addrspace(1)* %34, align 4, !tbaa !16\l  %208 = add nuw nsw i32 %47, 1\l  %209 = icmp eq i32 %208, %4\l  br i1 %209, label %210, label %46, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5acff70:s0 -> Node0x5acfa20;
	Node0x5acff70:s1 -> Node0x5acff70;
	Node0x5acfa20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%210:\l210:                                              \l  %211 = phi float [ %40, %39 ], [ %207, %46 ]\l  %212 = add nuw nsw i32 %41, 1\l  %213 = icmp eq i32 %212, %2\l  br i1 %213, label %214, label %39, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5acfa20:s0 -> Node0x5acf6c0;
	Node0x5acfa20:s1 -> Node0x5acf930;
	Node0x5acf6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%214:\l214:                                              \l  %215 = phi float [ 0.000000e+00, %32 ], [ %211, %210 ]\l  %216 = fmul contract float %10, %215\l  store float %216, float addrspace(1)* %34, align 4, !tbaa !16\l  br label %217\l}"];
	Node0x5acf6c0 -> Node0x5acf080;
	Node0x5acf080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%217:\l217:                                              \l  ret void\l}"];
}
