digraph "CFG for '_Z7flip_3DPfmmmiii' function" {
	label="CFG for '_Z7flip_3DPfmmmiii' function";

	Node0x4bf2c60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = zext i32 %16 to i64\l  %18 = mul i64 %3, %2\l  %19 = mul i64 %18, %1\l  %20 = freeze i64 %17\l  %21 = freeze i64 %3\l  %22 = udiv i64 %20, %21\l  %23 = mul i64 %22, %21\l  %24 = sub i64 %20, %23\l  %25 = urem i64 %22, %3\l  %26 = udiv i64 %17, %18\l  %27 = icmp ugt i64 %19, %17\l  br i1 %27, label %28, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4bf2c60:s0 -> Node0x4bf50f0;
	Node0x4bf2c60:s1 -> Node0x4bf5180;
	Node0x4bf50f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%28:\l28:                                               \l  %29 = icmp ne i32 %6, 0\l  %30 = lshr i64 %3, 1\l  %31 = icmp ult i64 %24, %30\l  %32 = select i1 %29, i1 %31, i1 false\l  br i1 %32, label %33, label %47\l|{<s0>T|<s1>F}}"];
	Node0x4bf50f0:s0 -> Node0x4bf4a80;
	Node0x4bf50f0:s1 -> Node0x4bf4ad0;
	Node0x4bf4a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%33:\l33:                                               \l  %34 = shl i64 %19, 1\l  %35 = mul i64 %26, %18\l  %36 = mul i64 %25, %3\l  %37 = add i64 %36, %34\l  %38 = add i64 %37, %35\l  %39 = add i64 %38, %24\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = xor i64 %24, -1\l  %42 = add i64 %41, %3\l  %43 = add i64 %42, %38\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %46 = load float, float addrspace(1)* %44, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  store float %46, float addrspace(1)* %40, align 4, !tbaa !7\l  store float %45, float addrspace(1)* %44, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %47\l}"];
	Node0x4bf4a80 -> Node0x4bf4ad0;
	Node0x4bf4ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%47:\l47:                                               \l  %48 = icmp ne i32 %5, 0\l  %49 = lshr i64 %2, 1\l  %50 = icmp ult i64 %25, %49\l  %51 = select i1 %48, i1 %50, i1 false\l  br i1 %51, label %52, label %66\l|{<s0>T|<s1>F}}"];
	Node0x4bf4ad0:s0 -> Node0x4bf7450;
	Node0x4bf4ad0:s1 -> Node0x4bf74a0;
	Node0x4bf7450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%52:\l52:                                               \l  %53 = mul i64 %26, %18\l  %54 = add i64 %53, %19\l  %55 = mul i64 %25, %3\l  %56 = add i64 %54, %24\l  %57 = add i64 %56, %55\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = xor i64 %25, -1\l  %60 = add i64 %59, %2\l  %61 = mul i64 %60, %3\l  %62 = add i64 %56, %61\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %65 = load float, float addrspace(1)* %63, align 4, !tbaa !7\l  store float %65, float addrspace(1)* %58, align 4, !tbaa !7\l  store float %64, float addrspace(1)* %63, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %66\l}"];
	Node0x4bf7450 -> Node0x4bf74a0;
	Node0x4bf74a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%66:\l66:                                               \l  %67 = icmp ne i32 %4, 0\l  %68 = lshr i64 %1, 1\l  %69 = icmp ult i64 %26, %68\l  %70 = select i1 %67, i1 %69, i1 false\l  br i1 %70, label %71, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4bf74a0:s0 -> Node0x4bf84e0;
	Node0x4bf74a0:s1 -> Node0x4bf5180;
	Node0x4bf84e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%71:\l71:                                               \l  %72 = mul i64 %26, %18\l  %73 = mul i64 %25, %3\l  %74 = add i64 %73, %24\l  %75 = add i64 %74, %72\l  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %75\l  %77 = xor i64 %26, -1\l  %78 = add i64 %77, %1\l  %79 = mul i64 %78, %18\l  %80 = add i64 %74, %79\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  %82 = load float, float addrspace(1)* %76, align 4, !tbaa !7\l  %83 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  store float %83, float addrspace(1)* %76, align 4, !tbaa !7\l  store float %82, float addrspace(1)* %81, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %84\l}"];
	Node0x4bf84e0 -> Node0x4bf5180;
	Node0x4bf5180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  ret void\l}"];
}
