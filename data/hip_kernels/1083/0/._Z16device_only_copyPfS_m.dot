digraph "CFG for '_Z16device_only_copyPfS_m' function" {
	label="CFG for '_Z16device_only_copyPfS_m' function";

	Node0x4811540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = zext i32 %15 to i64\l  %17 = icmp ult i64 %16, %2\l  br i1 %17, label %18, label %26\l|{<s0>T|<s1>F}}"];
	Node0x4811540:s0 -> Node0x4813820;
	Node0x4811540:s1 -> Node0x48138b0;
	Node0x4813820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  %19 = udiv i32 %12, %9\l  %20 = mul i32 %19, %9\l  %21 = icmp ugt i32 %12, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %9\l  %25 = zext i32 %24 to i64\l  br label %27\l}"];
	Node0x4813820 -> Node0x4813da0;
	Node0x48138b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%26:\l26:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
	Node0x4813da0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i64 [ %16, %18 ], [ %32, %27 ]\l  %29 = getelementptr inbounds float, float addrspace(1)* %1, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !16\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  store float %30, float addrspace(1)* %31, align 4, !tbaa !16\l  %32 = add i64 %28, %25\l  %33 = icmp ult i64 %32, %2\l  br i1 %33, label %27, label %26, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4813da0:s0 -> Node0x4813da0;
	Node0x4813da0:s1 -> Node0x48138b0;
}
