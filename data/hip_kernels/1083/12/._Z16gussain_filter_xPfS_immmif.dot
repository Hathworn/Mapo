digraph "CFG for '_Z16gussain_filter_xPfS_immmif' function" {
	label="CFG for '_Z16gussain_filter_xPfS_immmif' function";

	Node0x457f530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = zext i32 %17 to i64\l  %19 = mul i64 %5, %4\l  %20 = mul i64 %19, %3\l  %21 = freeze i64 %18\l  %22 = freeze i64 %5\l  %23 = udiv i64 %21, %22\l  %24 = mul i64 %23, %22\l  %25 = sub i64 %21, %24\l  %26 = urem i64 %23, %4\l  %27 = udiv i64 %18, %19\l  %28 = urem i64 %27, %3\l  %29 = udiv i64 %18, %20\l  %30 = icmp ult i64 %3, 2\l  %31 = select i1 %30, i64 2, i64 3\l  %32 = mul i64 %20, %31\l  %33 = icmp ugt i64 %32, %18\l  br i1 %33, label %34, label %122\l|{<s0>T|<s1>F}}"];
	Node0x457f530:s0 -> Node0x4581350;
	Node0x457f530:s1 -> Node0x4581e80;
	Node0x4581350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%34:\l34:                                               \l  %35 = icmp eq i32 %6, 0\l  %36 = icmp slt i32 %2, 0\l  br i1 %35, label %37, label %72\l|{<s0>T|<s1>F}}"];
	Node0x4581350:s0 -> Node0x45820e0;
	Node0x4581350:s1 -> Node0x4582130;
	Node0x45820e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%37:\l37:                                               \l  br i1 %36, label %47, label %38\l|{<s0>T|<s1>F}}"];
	Node0x45820e0:s0 -> Node0x4582270;
	Node0x45820e0:s1 -> Node0x45822c0;
	Node0x45822c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%38:\l38:                                               \l  %39 = sub nsw i32 0, %2\l  %40 = trunc i64 %25 to i32\l  %41 = add i64 %5, -1\l  %42 = mul i64 %29, %20\l  %43 = mul i64 %28, %19\l  %44 = mul i64 %26, %5\l  %45 = add i64 %43, %44\l  %46 = add i64 %45, %42\l  br label %50\l}"];
	Node0x45822c0 -> Node0x4582890;
	Node0x4582270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%47:\l47:                                               \l  %48 = phi float [ 0.000000e+00, %37 ], [ %69, %62 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %49 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  store float %48, float addrspace(1)* %49, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  br label %121\l}"];
	Node0x4582270 -> Node0x4583c30;
	Node0x4582890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%50:\l50:                                               \l  %51 = phi i32 [ %39, %38 ], [ %70, %62 ]\l  %52 = phi float [ 0.000000e+00, %38 ], [ %69, %62 ]\l  %53 = add i32 %51, %40\l  %54 = icmp slt i32 %53, 0\l  br i1 %54, label %62, label %55\l|{<s0>T|<s1>F}}"];
	Node0x4582890:s0 -> Node0x45833d0;
	Node0x4582890:s1 -> Node0x4583f70;
	Node0x4583f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%55:\l55:                                               \l  %56 = zext i32 %53 to i64\l  %57 = icmp ult i64 %41, %56\l  br i1 %57, label %62, label %58\l|{<s0>T|<s1>F}}"];
	Node0x4583f70:s0 -> Node0x45833d0;
	Node0x4583f70:s1 -> Node0x45841b0;
	Node0x45841b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%58:\l58:                                               \l  %59 = add i64 %46, %56\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  br label %62\l}"];
	Node0x45841b0 -> Node0x45833d0;
	Node0x45833d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%62:\l62:                                               \l  %63 = phi float [ %61, %58 ], [ %7, %55 ], [ %7, %50 ]\l  %64 = add nsw i32 %51, %2\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7\l  %68 = fmul contract float %67, %63\l  %69 = fadd contract float %52, %68\l  %70 = add i32 %51, 1\l  %71 = icmp eq i32 %51, %2\l  br i1 %71, label %47, label %50, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x45833d0:s0 -> Node0x4582270;
	Node0x45833d0:s1 -> Node0x4582890;
	Node0x4582130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%72:\l72:                                               \l  br i1 %36, label %85, label %73\l|{<s0>T|<s1>F}}"];
	Node0x4582130:s0 -> Node0x4581de0;
	Node0x4582130:s1 -> Node0x45859c0;
	Node0x45859c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%73:\l73:                                               \l  %74 = sub nsw i32 0, %2\l  %75 = trunc i64 %25 to i32\l  %76 = trunc i64 %5 to i32\l  %77 = shl nsw i32 %76, 1\l  %78 = add nsw i32 %77, -2\l  %79 = sub nsw i32 1, %76\l  %80 = mul i64 %29, %20\l  %81 = mul i64 %28, %19\l  %82 = mul i64 %26, %5\l  %83 = add i64 %81, %82\l  %84 = add i64 %83, %80\l  br label %88\l}"];
	Node0x45859c0 -> Node0x45860f0;
	Node0x4581de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%85:\l85:                                               \l  %86 = phi float [ 0.000000e+00, %72 ], [ %118, %107 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  store float %86, float addrspace(1)* %87, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  br label %121\l}"];
	Node0x4581de0 -> Node0x4583c30;
	Node0x45860f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  %89 = phi i32 [ %74, %73 ], [ %119, %107 ]\l  %90 = phi float [ 0.000000e+00, %73 ], [ %118, %107 ]\l  %91 = add i32 %89, %75\l  %92 = freeze i32 %91\l  %93 = icmp slt i32 %92, 0\l  br i1 %93, label %94, label %100\l|{<s0>T|<s1>F}}"];
	Node0x45860f0:s0 -> Node0x4586a80;
	Node0x45860f0:s1 -> Node0x4586ad0;
	Node0x4586a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%94:\l94:                                               \l  %95 = srem i32 %92, %78\l  %96 = icmp sgt i32 %95, %79\l  %97 = add nsw i32 %95, %78\l  %98 = sub nsw i32 0, %95\l  %99 = select i1 %96, i32 %98, i32 %97\l  br label %107\l}"];
	Node0x4586a80 -> Node0x45861b0;
	Node0x4586ad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%100:\l100:                                              \l  %101 = icmp slt i32 %92, %76\l  br i1 %101, label %107, label %102\l|{<s0>T|<s1>F}}"];
	Node0x4586ad0:s0 -> Node0x45861b0;
	Node0x4586ad0:s1 -> Node0x4587000;
	Node0x4587000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%102:\l102:                                              \l  %103 = srem i32 %92, %78\l  %104 = icmp slt i32 %103, %76\l  %105 = sub nsw i32 %78, %103\l  %106 = select i1 %104, i32 %103, i32 %105\l  br label %107\l}"];
	Node0x4587000 -> Node0x45861b0;
	Node0x45861b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  %108 = phi i32 [ %99, %94 ], [ %106, %102 ], [ %92, %100 ]\l  %109 = add nsw i32 %89, %2\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %1, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %113 = sext i32 %108 to i64\l  %114 = add i64 %84, %113\l  %115 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %117 = fmul contract float %112, %116\l  %118 = fadd contract float %90, %117\l  %119 = add i32 %89, 1\l  %120 = icmp eq i32 %89, %2\l  br i1 %120, label %85, label %88, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x45861b0:s0 -> Node0x4581de0;
	Node0x45861b0:s1 -> Node0x45860f0;
	Node0x4583c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%121:\l121:                                              \l  fence syncscope(\"workgroup\") acquire\l  br label %122\l}"];
	Node0x4583c30 -> Node0x4581e80;
	Node0x4581e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%122:\l122:                                              \l  ret void\l}"];
}
