digraph "CFG for '_Z29backward_maxpool_layer_kerneliiiiiiiPfS_Pi' function" {
	label="CFG for '_Z29backward_maxpool_layer_kerneliiiiiiiPfS_Pi' function";

	Node0x63f3370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%10:\l  %11 = sub i32 %1, %5\l  %12 = add i32 %11, %6\l  %13 = sdiv i32 %12, %4\l  %14 = add nsw i32 %13, 1\l  %15 = sub i32 %2, %5\l  %16 = add i32 %15, %6\l  %17 = sdiv i32 %16, %4\l  %18 = add nsw i32 %17, 1\l  %19 = add nsw i32 %5, -1\l  %20 = sdiv i32 %19, %4\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %24 = getelementptr inbounds i8, i8 addrspace(4)* %23, i64 12\l  %25 = bitcast i8 addrspace(4)* %24 to i32 addrspace(4)*\l  %26 = load i32, i32 addrspace(4)* %25, align 4, !tbaa !4\l  %27 = getelementptr i8, i8 addrspace(4)* %23, i64 4\l  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*\l  %29 = load i16, i16 addrspace(4)* %28, align 4, !range !13, !invariant.load\l... !14\l  %30 = zext i16 %29 to i32\l  %31 = udiv i32 %26, %30\l  %32 = mul i32 %31, %30\l  %33 = icmp ugt i32 %26, %32\l  %34 = zext i1 %33 to i32\l  %35 = add i32 %31, %34\l  %36 = mul i32 %35, %22\l  %37 = add i32 %36, %21\l  %38 = mul i32 %37, %30\l  %39 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %40 = add i32 %38, %39\l  %41 = icmp slt i32 %40, %0\l  br i1 %41, label %42, label %103\l|{<s0>T|<s1>F}}"];
	Node0x63f3370:s0 -> Node0x63f70a0;
	Node0x63f3370:s1 -> Node0x63f7130;
	Node0x63f70a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%42:\l42:                                               \l  %43 = freeze i32 %40\l  %44 = freeze i32 %2\l  %45 = sdiv i32 %43, %44\l  %46 = sdiv i32 %6, -2\l  %47 = sub i32 0, %20\l  %48 = icmp slt i32 %20, 0\l  br i1 %48, label %97, label %49\l|{<s0>T|<s1>F}}"];
	Node0x63f70a0:s0 -> Node0x63f75c0;
	Node0x63f70a0:s1 -> Node0x63f7610;
	Node0x63f7610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%49:\l49:                                               \l  %50 = freeze i32 %45\l  %51 = freeze i32 %1\l  %52 = sdiv i32 %50, %51\l  %53 = freeze i32 %52\l  %54 = mul i32 %52, %51\l  %55 = sub i32 %50, %54\l  %56 = mul i32 %45, %44\l  %57 = sub i32 %43, %56\l  %58 = sub nsw i32 %57, %46\l  %59 = sub nsw i32 %55, %46\l  %60 = mul nsw i32 %53, %14\l  %61 = sdiv i32 %58, %4\l  %62 = sdiv i32 %59, %4\l  br label %63\l}"];
	Node0x63f7610 -> Node0x63f7e40;
	Node0x63f7e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%63:\l63:                                               \l  %64 = phi float [ 0.000000e+00, %49 ], [ %91, %94 ]\l  %65 = phi i32 [ %47, %49 ], [ %95, %94 ]\l  %66 = add nsw i32 %62, %65\l  %67 = add nsw i32 %66, %60\l  %68 = mul nsw i32 %67, %18\l  %69 = icmp sgt i32 %66, -1\l  %70 = icmp sle i32 %66, %13\l  br label %71\l}"];
	Node0x63f7e40 -> Node0x63f69c0;
	Node0x63f69c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = phi float [ %64, %63 ], [ %91, %89 ]\l  %73 = phi i32 [ %47, %63 ], [ %92, %89 ]\l  %74 = add nsw i32 %61, %73\l  %75 = add nsw i32 %68, %74\l  %76 = icmp sgt i32 %74, -1\l  br i1 %76, label %77, label %89\l|{<s0>T|<s1>F}}"];
	Node0x63f69c0:s0 -> Node0x63f9590;
	Node0x63f69c0:s1 -> Node0x63f91c0;
	Node0x63f9590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%77:\l77:                                               \l  %78 = icmp sle i32 %74, %17\l  %79 = select i1 %78, i1 %69, i1 false\l  %80 = select i1 %79, i1 %70, i1 false\l  br i1 %80, label %81, label %89\l|{<s0>T|<s1>F}}"];
	Node0x63f9590:s0 -> Node0x63f98f0;
	Node0x63f9590:s1 -> Node0x63f91c0;
	Node0x63f98f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%81:\l81:                                               \l  %82 = sext i32 %75 to i64\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %82\l  %84 = load i32, i32 addrspace(1)* %83, align 4, !tbaa !16, !amdgpu.noclobber\l... !14\l  %85 = icmp eq i32 %84, %40\l  br i1 %85, label %86, label %89\l|{<s0>T|<s1>F}}"];
	Node0x63f98f0:s0 -> Node0x63fa3c0;
	Node0x63f98f0:s1 -> Node0x63f91c0;
	Node0x63fa3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%86:\l86:                                               \l  %87 = getelementptr inbounds float, float addrspace(1)* %7, i64 %82\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !20,\l... !amdgpu.noclobber !14\l  br label %89\l}"];
	Node0x63fa3c0 -> Node0x63f91c0;
	Node0x63f91c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%89:\l89:                                               \l  %90 = phi contract float [ %88, %86 ], [ 0.000000e+00, %81 ], [\l... 0.000000e+00, %77 ], [ 0.000000e+00, %71 ]\l  %91 = fadd contract float %72, %90\l  %92 = add i32 %73, 1\l  %93 = icmp eq i32 %73, %20\l  br i1 %93, label %94, label %71, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x63f91c0:s0 -> Node0x63f8980;
	Node0x63f91c0:s1 -> Node0x63f69c0;
	Node0x63f8980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%94:\l94:                                               \l  %95 = add i32 %65, 1\l  %96 = icmp eq i32 %65, %20\l  br i1 %96, label %97, label %63, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x63f8980:s0 -> Node0x63f75c0;
	Node0x63f8980:s1 -> Node0x63f7e40;
	Node0x63f75c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%97:\l97:                                               \l  %98 = phi float [ 0.000000e+00, %42 ], [ %91, %94 ]\l  %99 = sext i32 %40 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %8, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !20,\l... !amdgpu.noclobber !14\l  %102 = fadd contract float %98, %101\l  store float %102, float addrspace(1)* %100, align 4, !tbaa !20\l  br label %103\l}"];
	Node0x63f75c0 -> Node0x63f7130;
	Node0x63f7130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%103:\l103:                                              \l  ret void\l}"];
}
