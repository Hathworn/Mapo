digraph "CFG for '_Z14fill_bspline_4PK15HIP_vector_typeIfLj4EEiPKfiiiPiS5_S5_PfS6_S6_S6_S6_S6_S6_' function" {
	label="CFG for '_Z14fill_bspline_4PK15HIP_vector_typeIfLj4EEiPKfiiiPiS5_S5_PfS6_S6_S6_S6_S6_S6_' function";

	Node0x59dc220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%16:\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 12\l  %24 = bitcast i8 addrspace(4)* %23 to i32 addrspace(4)*\l  %25 = load i32, i32 addrspace(4)* %24, align 4, !tbaa !6\l  %26 = mul i32 %17, %22\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %28 = add i32 %26, %27\l  %29 = icmp ult i32 %28, %1\l  br i1 %29, label %30, label %232\l|{<s0>T|<s1>F}}"];
	Node0x59dc220:s0 -> Node0x59df0a0;
	Node0x59dc220:s1 -> Node0x59df130;
	Node0x59df0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%30:\l30:                                               \l  %31 = getelementptr inbounds float, float addrspace(1)* %2, i64 1\l  %32 = getelementptr inbounds float, float addrspace(1)* %2, i64 2\l  %33 = sitofp i32 %3 to float\l  %34 = getelementptr inbounds float, float addrspace(1)* %2, i64 3\l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 4\l  %36 = getelementptr inbounds float, float addrspace(1)* %2, i64 5\l  %37 = sitofp i32 %4 to float\l  %38 = getelementptr inbounds float, float addrspace(1)* %2, i64 6\l  %39 = getelementptr inbounds float, float addrspace(1)* %2, i64 7\l  %40 = getelementptr inbounds float, float addrspace(1)* %2, i64 8\l  %41 = sitofp i32 %5 to float\l  %42 = udiv i32 %25, %22\l  %43 = mul i32 %42, %22\l  %44 = icmp ugt i32 %25, %43\l  %45 = zext i1 %44 to i32\l  %46 = add i32 %42, %45\l  %47 = mul i32 %46, %22\l  br label %48\l}"];
	Node0x59df0a0 -> Node0x59dfe30;
	Node0x59dfe30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i32 [ %28, %30 ], [ %230, %48 ]\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %50, i32 0, i32 0, i32 0, i64 0\l  %52 = load float, float addrspace(1)* %51, align 16\l  %53 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %50, i32 0, i32 0, i32 0, i64 1\l  %54 = load float, float addrspace(1)* %53, align 4\l  %55 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %50, i32 0, i32 0, i32 0, i64 2\l  %56 = load float, float addrspace(1)* %55, align 8\l  %57 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %50, i32 0, i32 0, i32 0, i64 3\l  %58 = load float, float addrspace(1)* %57, align 4\l  %59 = load float, float addrspace(1)* %2, align 4, !tbaa !16\l  %60 = fmul contract float %52, %59\l  %61 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %62 = fmul contract float %54, %61\l  %63 = fadd contract float %60, %62\l  %64 = load float, float addrspace(1)* %32, align 4, !tbaa !16\l  %65 = fmul contract float %56, %64\l  %66 = fadd contract float %63, %65\l  %67 = fadd contract float %66, 2.000000e+00\l  %68 = fadd contract float %67, 5.000000e-01\l  %69 = tail call float @llvm.floor.f32(float %68)\l  %70 = fadd contract float %69, -5.000000e-01\l  %71 = fsub contract float %67, %70\l  %72 = fmul contract float %71, %33\l  %73 = load float, float addrspace(1)* %34, align 4, !tbaa !16\l  %74 = fmul contract float %52, %73\l  %75 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %76 = fmul contract float %54, %75\l  %77 = fadd contract float %74, %76\l  %78 = load float, float addrspace(1)* %36, align 4, !tbaa !16\l  %79 = fmul contract float %56, %78\l  %80 = fadd contract float %77, %79\l  %81 = fadd contract float %80, 2.000000e+00\l  %82 = fadd contract float %81, 5.000000e-01\l  %83 = tail call float @llvm.floor.f32(float %82)\l  %84 = fadd contract float %83, -5.000000e-01\l  %85 = fsub contract float %81, %84\l  %86 = fmul contract float %85, %37\l  %87 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  %88 = fmul contract float %52, %87\l  %89 = load float, float addrspace(1)* %39, align 4, !tbaa !16\l  %90 = fmul contract float %54, %89\l  %91 = fadd contract float %88, %90\l  %92 = load float, float addrspace(1)* %40, align 4, !tbaa !16\l  %93 = fmul contract float %56, %92\l  %94 = fadd contract float %91, %93\l  %95 = fadd contract float %94, 2.000000e+00\l  %96 = fadd contract float %95, 5.000000e-01\l  %97 = tail call float @llvm.floor.f32(float %96)\l  %98 = fadd contract float %97, -5.000000e-01\l  %99 = fsub contract float %95, %98\l  %100 = fmul contract float %99, %41\l  %101 = fptosi float %72 to i32\l  %102 = fptosi float %86 to i32\l  %103 = fptosi float %100 to i32\l  %104 = sitofp i32 %101 to float\l  %105 = fsub contract float %72, %104\l  %106 = sitofp i32 %102 to float\l  %107 = fsub contract float %86, %106\l  %108 = sitofp i32 %103 to float\l  %109 = fsub contract float %100, %108\l  %110 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %50\l  store i32 %101, i32 addrspace(1)* %110, align 4, !tbaa !20\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %50\l  store i32 %102, i32 addrspace(1)* %111, align 4, !tbaa !20\l  %112 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %50\l  store i32 %103, i32 addrspace(1)* %112, align 4, !tbaa !20\l  %113 = getelementptr inbounds float, float addrspace(1)* %9, i64 %50\l  store float %58, float addrspace(1)* %113, align 4, !tbaa !16\l  %114 = fsub contract float 1.000000e+00, %105\l  %115 = fsub contract float 1.000000e+00, %107\l  %116 = fsub contract float 1.000000e+00, %109\l  %117 = fmul contract float %105, 5.000000e-01\l  %118 = fmul contract float %105, %117\l  %119 = fmul contract float %107, 5.000000e-01\l  %120 = fmul contract float %107, %119\l  %121 = fmul contract float %109, 5.000000e-01\l  %122 = fmul contract float %109, %121\l  %123 = fadd contract float %105, 1.000000e+00\l  %124 = fmul contract float %123, %114\l  %125 = fsub contract float 2.000000e+00, %105\l  %126 = fmul contract float %105, %125\l  %127 = fadd contract float %124, %126\l  %128 = fmul contract float %127, 5.000000e-01\l  %129 = fadd contract float %107, 1.000000e+00\l  %130 = fmul contract float %129, %115\l  %131 = fsub contract float 2.000000e+00, %107\l  %132 = fmul contract float %107, %131\l  %133 = fadd contract float %130, %132\l  %134 = fmul contract float %133, 5.000000e-01\l  %135 = fadd contract float %109, 1.000000e+00\l  %136 = fmul contract float %135, %116\l  %137 = fsub contract float 2.000000e+00, %109\l  %138 = fmul contract float %109, %137\l  %139 = fadd contract float %136, %138\l  %140 = fmul contract float %139, 5.000000e-01\l  %141 = fmul contract float %114, 5.000000e-01\l  %142 = fmul contract float %114, %141\l  %143 = fmul contract float %115, 5.000000e-01\l  %144 = fmul contract float %115, %143\l  %145 = fmul contract float %116, 5.000000e-01\l  %146 = fmul contract float %116, %145\l  %147 = fneg contract float %142\l  %148 = fneg contract float %144\l  %149 = fneg contract float %146\l  %150 = fsub contract float %142, %128\l  %151 = fsub contract float %144, %134\l  %152 = fsub contract float %146, %140\l  %153 = fsub contract float %128, %118\l  %154 = fsub contract float %134, %120\l  %155 = fsub contract float %140, %122\l  %156 = fmul contract float %105, 0x3FD5555560000000\l  %157 = fmul contract float %156, %118\l  %158 = fmul contract float %107, 0x3FD5555560000000\l  %159 = fmul contract float %158, %120\l  %160 = fmul contract float %109, 0x3FD5555560000000\l  %161 = fmul contract float %160, %122\l  %162 = fmul contract float %123, %128\l  %163 = fsub contract float 3.000000e+00, %105\l  %164 = fmul contract float %163, %118\l  %165 = fadd contract float %164, %162\l  %166 = fmul contract float %165, 0x3FD5555560000000\l  %167 = fmul contract float %129, %134\l  %168 = fsub contract float 3.000000e+00, %107\l  %169 = fmul contract float %168, %120\l  %170 = fadd contract float %169, %167\l  %171 = fmul contract float %170, 0x3FD5555560000000\l  %172 = fmul contract float %135, %140\l  %173 = fsub contract float 3.000000e+00, %109\l  %174 = fmul contract float %173, %122\l  %175 = fadd contract float %174, %172\l  %176 = fmul contract float %175, 0x3FD5555560000000\l  %177 = fadd contract float %105, 2.000000e+00\l  %178 = fmul contract float %177, %142\l  %179 = fmul contract float %125, %128\l  %180 = fadd contract float %178, %179\l  %181 = fmul contract float %180, 0x3FD5555560000000\l  %182 = fadd contract float %107, 2.000000e+00\l  %183 = fmul contract float %182, %144\l  %184 = fmul contract float %131, %134\l  %185 = fadd contract float %183, %184\l  %186 = fmul contract float %185, 0x3FD5555560000000\l  %187 = fadd contract float %109, 2.000000e+00\l  %188 = fmul contract float %187, %146\l  %189 = fmul contract float %137, %140\l  %190 = fadd contract float %188, %189\l  %191 = fmul contract float %190, 0x3FD5555560000000\l  %192 = fmul contract float %114, 0x3FD5555560000000\l  %193 = fmul contract float %192, %142\l  %194 = fmul contract float %115, 0x3FD5555560000000\l  %195 = fmul contract float %194, %144\l  %196 = fmul contract float %116, 0x3FD5555560000000\l  %197 = fmul contract float %196, %146\l  %198 = shl i32 %49, 2\l  %199 = sext i32 %198 to i64\l  %200 = getelementptr inbounds float, float addrspace(1)* %10, i64 %199\l  store float %193, float addrspace(1)* %200, align 4, !tbaa !16\l  %201 = add nuw nsw i32 %198, 1\l  %202 = sext i32 %201 to i64\l  %203 = getelementptr inbounds float, float addrspace(1)* %10, i64 %202\l  store float %181, float addrspace(1)* %203, align 4, !tbaa !16\l  %204 = add nuw nsw i32 %198, 2\l  %205 = sext i32 %204 to i64\l  %206 = getelementptr inbounds float, float addrspace(1)* %10, i64 %205\l  store float %166, float addrspace(1)* %206, align 4, !tbaa !16\l  %207 = add nuw nsw i32 %198, 3\l  %208 = sext i32 %207 to i64\l  %209 = getelementptr inbounds float, float addrspace(1)* %10, i64 %208\l  store float %157, float addrspace(1)* %209, align 4, !tbaa !16\l  %210 = getelementptr inbounds float, float addrspace(1)* %11, i64 %199\l  store float %195, float addrspace(1)* %210, align 4, !tbaa !16\l  %211 = getelementptr inbounds float, float addrspace(1)* %11, i64 %202\l  store float %186, float addrspace(1)* %211, align 4, !tbaa !16\l  %212 = getelementptr inbounds float, float addrspace(1)* %11, i64 %205\l  store float %171, float addrspace(1)* %212, align 4, !tbaa !16\l  %213 = getelementptr inbounds float, float addrspace(1)* %11, i64 %208\l  store float %159, float addrspace(1)* %213, align 4, !tbaa !16\l  %214 = getelementptr inbounds float, float addrspace(1)* %12, i64 %199\l  store float %197, float addrspace(1)* %214, align 4, !tbaa !16\l  %215 = getelementptr inbounds float, float addrspace(1)* %12, i64 %202\l  store float %191, float addrspace(1)* %215, align 4, !tbaa !16\l  %216 = getelementptr inbounds float, float addrspace(1)* %12, i64 %205\l  store float %176, float addrspace(1)* %216, align 4, !tbaa !16\l  %217 = getelementptr inbounds float, float addrspace(1)* %12, i64 %208\l  store float %161, float addrspace(1)* %217, align 4, !tbaa !16\l  %218 = getelementptr inbounds float, float addrspace(1)* %13, i64 %199\l  store float %147, float addrspace(1)* %218, align 4, !tbaa !16\l  %219 = getelementptr inbounds float, float addrspace(1)* %13, i64 %202\l  store float %150, float addrspace(1)* %219, align 4, !tbaa !16\l  %220 = getelementptr inbounds float, float addrspace(1)* %13, i64 %205\l  store float %153, float addrspace(1)* %220, align 4, !tbaa !16\l  %221 = getelementptr inbounds float, float addrspace(1)* %13, i64 %208\l  store float %118, float addrspace(1)* %221, align 4, !tbaa !16\l  %222 = getelementptr inbounds float, float addrspace(1)* %14, i64 %199\l  store float %148, float addrspace(1)* %222, align 4, !tbaa !16\l  %223 = getelementptr inbounds float, float addrspace(1)* %14, i64 %202\l  store float %151, float addrspace(1)* %223, align 4, !tbaa !16\l  %224 = getelementptr inbounds float, float addrspace(1)* %14, i64 %205\l  store float %154, float addrspace(1)* %224, align 4, !tbaa !16\l  %225 = getelementptr inbounds float, float addrspace(1)* %14, i64 %208\l  store float %120, float addrspace(1)* %225, align 4, !tbaa !16\l  %226 = getelementptr inbounds float, float addrspace(1)* %15, i64 %199\l  store float %149, float addrspace(1)* %226, align 4, !tbaa !16\l  %227 = getelementptr inbounds float, float addrspace(1)* %15, i64 %202\l  store float %152, float addrspace(1)* %227, align 4, !tbaa !16\l  %228 = getelementptr inbounds float, float addrspace(1)* %15, i64 %205\l  store float %155, float addrspace(1)* %228, align 4, !tbaa !16\l  %229 = getelementptr inbounds float, float addrspace(1)* %15, i64 %208\l  store float %122, float addrspace(1)* %229, align 4, !tbaa !16\l  %230 = add i32 %47, %49\l  %231 = icmp ult i32 %230, %1\l  br i1 %231, label %48, label %232, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x59dfe30:s0 -> Node0x59dfe30;
	Node0x59dfe30:s1 -> Node0x59df130;
	Node0x59df130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%232:\l232:                                              \l  ret void\l}"];
}
