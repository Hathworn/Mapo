digraph "CFG for '_Z20GaussianKernelSimplePKhPhiii' function" {
	label="CFG for '_Z20GaussianKernelSimplePKhPhiii' function";

	Node0x4cc3370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = icmp slt i32 %14, %2\l  %24 = icmp slt i32 %22, %3\l  %25 = select i1 %23, i1 %24, i1 false\l  br i1 %25, label %26, label %215\l|{<s0>T|<s1>F}}"];
	Node0x4cc3370:s0 -> Node0x4cc6e20;
	Node0x4cc3370:s1 -> Node0x4cc6eb0;
	Node0x4cc6e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%26:\l26:                                               \l  %27 = mul nsw i32 %22, %4\l  %28 = add i32 %27, %14\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %29\l  %31 = load i8, i8 addrspace(1)* %30, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %32 = uitofp i8 %31 to float\l  %33 = fmul contract float %32, 0x3F68527AE0000000\l  %34 = fadd contract float %33, 0.000000e+00\l  %35 = add i32 %28, 1\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %36\l  %38 = load i8, i8 addrspace(1)* %37, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %39 = uitofp i8 %38 to float\l  %40 = fmul contract float %39, 0x3F8B404940000000\l  %41 = fadd contract float %34, %40\l  %42 = add i32 %28, 2\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %43\l  %45 = load i8, i8 addrspace(1)* %44, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %46 = uitofp i8 %45 to float\l  %47 = fmul contract float %46, 0x3F9676F9C0000000\l  %48 = fadd contract float %41, %47\l  %49 = add i32 %28, 3\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %50\l  %52 = load i8, i8 addrspace(1)* %51, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %53 = uitofp i8 %52 to float\l  %54 = fmul contract float %53, 0x3F8B404940000000\l  %55 = fadd contract float %48, %54\l  %56 = add i32 %28, 4\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %57\l  %59 = load i8, i8 addrspace(1)* %58, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %60 = uitofp i8 %59 to float\l  %61 = fmul contract float %60, 0x3F68527AE0000000\l  %62 = fadd contract float %55, %61\l  %63 = add nsw i32 %22, 1\l  %64 = mul nsw i32 %63, %4\l  %65 = add i32 %64, %14\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %66\l  %68 = load i8, i8 addrspace(1)* %67, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %69 = uitofp i8 %68 to float\l  %70 = fmul contract float %69, 0x3F8B404940000000\l  %71 = fadd contract float %62, %70\l  %72 = add i32 %65, 1\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %73\l  %75 = load i8, i8 addrspace(1)* %74, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %76 = uitofp i8 %75 to float\l  %77 = fmul contract float %76, 0x3FAE8862E0000000\l  %78 = fadd contract float %71, %77\l  %79 = add i32 %65, 2\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %80\l  %82 = load i8, i8 addrspace(1)* %81, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %83 = uitofp i8 %82 to float\l  %84 = fmul contract float %83, 0x3FB92B8560000000\l  %85 = fadd contract float %78, %84\l  %86 = add i32 %65, 3\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %87\l  %89 = load i8, i8 addrspace(1)* %88, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %90 = uitofp i8 %89 to float\l  %91 = fmul contract float %90, 0x3FAE8862E0000000\l  %92 = fadd contract float %85, %91\l  %93 = add i32 %65, 4\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %94\l  %96 = load i8, i8 addrspace(1)* %95, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %97 = uitofp i8 %96 to float\l  %98 = fmul contract float %97, 0x3F8B404940000000\l  %99 = fadd contract float %92, %98\l  %100 = add nsw i32 %22, 2\l  %101 = mul nsw i32 %100, %4\l  %102 = add i32 %101, %14\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %103\l  %105 = load i8, i8 addrspace(1)* %104, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %106 = uitofp i8 %105 to float\l  %107 = fmul contract float %106, 0x3F9676F9C0000000\l  %108 = fadd contract float %99, %107\l  %109 = add i32 %102, 1\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %110\l  %112 = load i8, i8 addrspace(1)* %111, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %113 = uitofp i8 %112 to float\l  %114 = fmul contract float %113, 0x3FB92B8560000000\l  %115 = fadd contract float %108, %114\l  %116 = add i32 %102, 2\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %117\l  %119 = load i8, i8 addrspace(1)* %118, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %120 = uitofp i8 %119 to float\l  %121 = fmul contract float %120, 0x3FC4BFC900000000\l  %122 = fadd contract float %115, %121\l  %123 = add i32 %102, 3\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %124\l  %126 = load i8, i8 addrspace(1)* %125, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %127 = uitofp i8 %126 to float\l  %128 = fmul contract float %127, 0x3FB92B8560000000\l  %129 = fadd contract float %122, %128\l  %130 = add i32 %102, 4\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %131\l  %133 = load i8, i8 addrspace(1)* %132, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %134 = uitofp i8 %133 to float\l  %135 = fmul contract float %134, 0x3F9676F9C0000000\l  %136 = fadd contract float %129, %135\l  %137 = add nsw i32 %22, 3\l  %138 = mul nsw i32 %137, %4\l  %139 = add i32 %138, %14\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %140\l  %142 = load i8, i8 addrspace(1)* %141, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %143 = uitofp i8 %142 to float\l  %144 = fmul contract float %143, 0x3F8B404940000000\l  %145 = fadd contract float %136, %144\l  %146 = add i32 %139, 1\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %147\l  %149 = load i8, i8 addrspace(1)* %148, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %150 = uitofp i8 %149 to float\l  %151 = fmul contract float %150, 0x3FAE8862E0000000\l  %152 = fadd contract float %145, %151\l  %153 = add i32 %139, 2\l  %154 = sext i32 %153 to i64\l  %155 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %154\l  %156 = load i8, i8 addrspace(1)* %155, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %157 = uitofp i8 %156 to float\l  %158 = fmul contract float %157, 0x3FB92B8560000000\l  %159 = fadd contract float %152, %158\l  %160 = add i32 %139, 3\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %161\l  %163 = load i8, i8 addrspace(1)* %162, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %164 = uitofp i8 %163 to float\l  %165 = fmul contract float %164, 0x3FAE8862E0000000\l  %166 = fadd contract float %159, %165\l  %167 = add i32 %139, 4\l  %168 = sext i32 %167 to i64\l  %169 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %168\l  %170 = load i8, i8 addrspace(1)* %169, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %171 = uitofp i8 %170 to float\l  %172 = fmul contract float %171, 0x3F8B404940000000\l  %173 = fadd contract float %166, %172\l  %174 = add nsw i32 %22, 4\l  %175 = mul nsw i32 %174, %4\l  %176 = add i32 %175, %14\l  %177 = sext i32 %176 to i64\l  %178 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %177\l  %179 = load i8, i8 addrspace(1)* %178, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %180 = uitofp i8 %179 to float\l  %181 = fmul contract float %180, 0x3F68527AE0000000\l  %182 = fadd contract float %173, %181\l  %183 = add i32 %176, 1\l  %184 = sext i32 %183 to i64\l  %185 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %184\l  %186 = load i8, i8 addrspace(1)* %185, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %187 = uitofp i8 %186 to float\l  %188 = fmul contract float %187, 0x3F8B404940000000\l  %189 = fadd contract float %182, %188\l  %190 = add i32 %176, 2\l  %191 = sext i32 %190 to i64\l  %192 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %191\l  %193 = load i8, i8 addrspace(1)* %192, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %194 = uitofp i8 %193 to float\l  %195 = fmul contract float %194, 0x3F9676F9C0000000\l  %196 = fadd contract float %189, %195\l  %197 = add i32 %176, 3\l  %198 = sext i32 %197 to i64\l  %199 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %198\l  %200 = load i8, i8 addrspace(1)* %199, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %201 = uitofp i8 %200 to float\l  %202 = fmul contract float %201, 0x3F8B404940000000\l  %203 = fadd contract float %196, %202\l  %204 = add i32 %176, 4\l  %205 = sext i32 %204 to i64\l  %206 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %205\l  %207 = load i8, i8 addrspace(1)* %206, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %208 = uitofp i8 %207 to float\l  %209 = fmul contract float %208, 0x3F68527AE0000000\l  %210 = fadd contract float %203, %209\l  %211 = fadd contract float %210, 5.000000e-01\l  %212 = fptosi float %211 to i32\l  %213 = trunc i32 %212 to i8\l  %214 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %29\l  store i8 %213, i8 addrspace(1)* %214, align 1, !tbaa !7\l  br label %215\l}"];
	Node0x4cc6e20 -> Node0x4cc6eb0;
	Node0x4cc6eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%215:\l215:                                              \l  ret void\l}"];
}
