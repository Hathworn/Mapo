digraph "CFG for '_Z19GaussianKernelArrayPKhPhiiii' function" {
	label="CFG for '_Z19GaussianKernelArrayPKhPhiiii' function";

	Node0x44fca20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %2\l  %25 = icmp slt i32 %23, %3\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %170\l|{<s0>T|<s1>F}}"];
	Node0x44fca20:s0 -> Node0x45004e0;
	Node0x44fca20:s1 -> Node0x4500570;
	Node0x45004e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%27:\l27:                                               \l  %28 = icmp sgt i32 %5, 0\l  br i1 %28, label %29, label %45\l|{<s0>T|<s1>F}}"];
	Node0x45004e0:s0 -> Node0x4500770;
	Node0x45004e0:s1 -> Node0x45007c0;
	Node0x4500770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%29:\l29:                                               \l  %30 = and i32 %5, 7\l  %31 = icmp ult i32 %5, 8\l  %32 = and i32 %5, -8\l  %33 = icmp eq i32 %30, 0\l  br label %34\l}"];
	Node0x4500770 -> Node0x44feb10;
	Node0x44feb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%34:\l34:                                               \l  %35 = phi i32 [ %74, %72 ], [ 0, %29 ]\l  %36 = phi float [ %73, %72 ], [ 0.000000e+00, %29 ]\l  %37 = zext i32 %35 to i64\l  %38 = add nsw i32 %35, %23\l  %39 = mul nsw i32 %38, %4\l  %40 = add i32 %39, %15\l  br i1 %31, label %51, label %76\l|{<s0>T|<s1>F}}"];
	Node0x44feb10:s0 -> Node0x4501280;
	Node0x44feb10:s1 -> Node0x4501310;
	Node0x4501450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%41:\l41:                                               \l  %42 = fadd contract float %73, 5.000000e-01\l  %43 = fptosi float %42 to i32\l  %44 = trunc i32 %43 to i8\l  br label %45\l}"];
	Node0x4501450 -> Node0x45007c0;
	Node0x45007c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%45:\l45:                                               \l  %46 = phi i8 [ 0, %27 ], [ %44, %41 ]\l  %47 = mul nsw i32 %23, %4\l  %48 = add nsw i32 %47, %15\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %49\l  store i8 %46, i8 addrspace(1)* %50, align 1, !tbaa !7\l  br label %170\l}"];
	Node0x45007c0 -> Node0x4500570;
	Node0x4501280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%51:\l51:                                               \l  %52 = phi float [ undef, %34 ], [ %166, %76 ]\l  %53 = phi i32 [ 0, %34 ], [ %167, %76 ]\l  %54 = phi float [ %36, %34 ], [ %166, %76 ]\l  br i1 %33, label %72, label %55\l|{<s0>T|<s1>F}}"];
	Node0x4501280:s0 -> Node0x4500dc0;
	Node0x4501280:s1 -> Node0x4502290;
	Node0x4502290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  %56 = phi i32 [ %69, %55 ], [ %53, %51 ]\l  %57 = phi float [ %68, %55 ], [ %54, %51 ]\l  %58 = phi i32 [ %70, %55 ], [ 0, %51 ]\l  %59 = zext i32 %56 to i64\l  %60 = getelementptr [5 x [5 x float]], [5 x [5 x float]] addrspace(4)*\l... @__const._Z19GaussianKernelArrayPKhPhiiii.filter, i64 0, i64 %37, i64 %59\l  %61 = load float, float addrspace(4)* %60, align 4, !tbaa !10\l  %62 = add i32 %40, %56\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %63\l  %65 = load i8, i8 addrspace(1)* %64, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %66 = uitofp i8 %65 to float\l  %67 = fmul contract float %61, %66\l  %68 = fadd contract float %57, %67\l  %69 = add nuw nsw i32 %56, 1\l  %70 = add i32 %58, 1\l  %71 = icmp eq i32 %70, %30\l  br i1 %71, label %72, label %55, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4502290:s0 -> Node0x4500dc0;
	Node0x4502290:s1 -> Node0x4502290;
	Node0x4500dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%72:\l72:                                               \l  %73 = phi float [ %52, %51 ], [ %68, %55 ]\l  %74 = add nuw nsw i32 %35, 1\l  %75 = icmp eq i32 %74, %5\l  br i1 %75, label %41, label %34, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4500dc0:s0 -> Node0x4501450;
	Node0x4500dc0:s1 -> Node0x44feb10;
	Node0x4501310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%76:\l76:                                               \l  %77 = phi i32 [ %167, %76 ], [ 0, %34 ]\l  %78 = phi float [ %166, %76 ], [ %36, %34 ]\l  %79 = phi i32 [ %168, %76 ], [ 0, %34 ]\l  %80 = zext i32 %77 to i64\l  %81 = getelementptr [5 x [5 x float]], [5 x [5 x float]] addrspace(4)*\l... @__const._Z19GaussianKernelArrayPKhPhiiii.filter, i64 0, i64 %37, i64 %80\l  %82 = load float, float addrspace(4)* %81, align 4, !tbaa !10\l  %83 = add i32 %40, %77\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %84\l  %86 = load i8, i8 addrspace(1)* %85, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %87 = uitofp i8 %86 to float\l  %88 = fmul contract float %82, %87\l  %89 = fadd contract float %78, %88\l  %90 = or i32 %77, 1\l  %91 = zext i32 %90 to i64\l  %92 = getelementptr [5 x [5 x float]], [5 x [5 x float]] addrspace(4)*\l... @__const._Z19GaussianKernelArrayPKhPhiiii.filter, i64 0, i64 %37, i64 %91\l  %93 = load float, float addrspace(4)* %92, align 4, !tbaa !10\l  %94 = add i32 %40, %90\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %95\l  %97 = load i8, i8 addrspace(1)* %96, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %98 = uitofp i8 %97 to float\l  %99 = fmul contract float %93, %98\l  %100 = fadd contract float %89, %99\l  %101 = or i32 %77, 2\l  %102 = zext i32 %101 to i64\l  %103 = getelementptr [5 x [5 x float]], [5 x [5 x float]] addrspace(4)*\l... @__const._Z19GaussianKernelArrayPKhPhiiii.filter, i64 0, i64 %37, i64 %102\l  %104 = load float, float addrspace(4)* %103, align 4, !tbaa !10\l  %105 = add i32 %40, %101\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %106\l  %108 = load i8, i8 addrspace(1)* %107, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %109 = uitofp i8 %108 to float\l  %110 = fmul contract float %104, %109\l  %111 = fadd contract float %100, %110\l  %112 = or i32 %77, 3\l  %113 = zext i32 %112 to i64\l  %114 = getelementptr [5 x [5 x float]], [5 x [5 x float]] addrspace(4)*\l... @__const._Z19GaussianKernelArrayPKhPhiiii.filter, i64 0, i64 %37, i64 %113\l  %115 = load float, float addrspace(4)* %114, align 4, !tbaa !10\l  %116 = add i32 %40, %112\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %117\l  %119 = load i8, i8 addrspace(1)* %118, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %120 = uitofp i8 %119 to float\l  %121 = fmul contract float %115, %120\l  %122 = fadd contract float %111, %121\l  %123 = or i32 %77, 4\l  %124 = zext i32 %123 to i64\l  %125 = getelementptr [5 x [5 x float]], [5 x [5 x float]] addrspace(4)*\l... @__const._Z19GaussianKernelArrayPKhPhiiii.filter, i64 0, i64 %37, i64 %124\l  %126 = load float, float addrspace(4)* %125, align 4, !tbaa !10\l  %127 = add i32 %40, %123\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %128\l  %130 = load i8, i8 addrspace(1)* %129, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %131 = uitofp i8 %130 to float\l  %132 = fmul contract float %126, %131\l  %133 = fadd contract float %122, %132\l  %134 = or i32 %77, 5\l  %135 = zext i32 %134 to i64\l  %136 = getelementptr [5 x [5 x float]], [5 x [5 x float]] addrspace(4)*\l... @__const._Z19GaussianKernelArrayPKhPhiiii.filter, i64 0, i64 %37, i64 %135\l  %137 = load float, float addrspace(4)* %136, align 4, !tbaa !10\l  %138 = add i32 %40, %134\l  %139 = sext i32 %138 to i64\l  %140 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %139\l  %141 = load i8, i8 addrspace(1)* %140, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %142 = uitofp i8 %141 to float\l  %143 = fmul contract float %137, %142\l  %144 = fadd contract float %133, %143\l  %145 = or i32 %77, 6\l  %146 = zext i32 %145 to i64\l  %147 = getelementptr [5 x [5 x float]], [5 x [5 x float]] addrspace(4)*\l... @__const._Z19GaussianKernelArrayPKhPhiiii.filter, i64 0, i64 %37, i64 %146\l  %148 = load float, float addrspace(4)* %147, align 4, !tbaa !10\l  %149 = add i32 %40, %145\l  %150 = sext i32 %149 to i64\l  %151 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %150\l  %152 = load i8, i8 addrspace(1)* %151, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %153 = uitofp i8 %152 to float\l  %154 = fmul contract float %148, %153\l  %155 = fadd contract float %144, %154\l  %156 = or i32 %77, 7\l  %157 = zext i32 %156 to i64\l  %158 = getelementptr [5 x [5 x float]], [5 x [5 x float]] addrspace(4)*\l... @__const._Z19GaussianKernelArrayPKhPhiiii.filter, i64 0, i64 %37, i64 %157\l  %159 = load float, float addrspace(4)* %158, align 4, !tbaa !10\l  %160 = add i32 %40, %156\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %161\l  %163 = load i8, i8 addrspace(1)* %162, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %164 = uitofp i8 %163 to float\l  %165 = fmul contract float %159, %164\l  %166 = fadd contract float %155, %165\l  %167 = add nuw nsw i32 %77, 8\l  %168 = add i32 %79, 8\l  %169 = icmp eq i32 %168, %32\l  br i1 %169, label %51, label %76, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4501310:s0 -> Node0x4501280;
	Node0x4501310:s1 -> Node0x4501310;
	Node0x4500570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%170:\l170:                                              \l  ret void\l}"];
}
