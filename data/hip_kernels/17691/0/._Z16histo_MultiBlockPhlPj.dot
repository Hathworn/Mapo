digraph "CFG for '_Z16histo_MultiBlockPhlPj' function" {
	label="CFG for '_Z16histo_MultiBlockPhlPj' function";

	Node0x6009020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 8\l  %7 = add i32 %6, %4\l  %8 = icmp ult i32 %4, 256\l  br i1 %8, label %9, label %11\l|{<s0>T|<s1>F}}"];
	Node0x6009020:s0 -> Node0x6009db0;
	Node0x6009020:s1 -> Node0x600a870;
	Node0x6009db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%9:\l9:                                                \l  %10 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ16histo_MultiBlockPhlPjE4temp, i32 0, i32 %4\l  store i32 0, i32 addrspace(3)* %10, align 4, !tbaa !5\l  br label %11\l}"];
	Node0x6009db0 -> Node0x600a870;
	Node0x600a870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%11:\l11:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %12 = sext i32 %7 to i64\l  %13 = icmp slt i64 %12, %1\l  br i1 %13, label %14, label %25\l|{<s0>T|<s1>F}}"];
	Node0x600a870:s0 -> Node0x600b0c0;
	Node0x600a870:s1 -> Node0x600b150;
	Node0x600b0c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l14:                                               \l  %15 = phi i64 [ %23, %14 ], [ %12, %11 ]\l  %16 = phi i32 [ %22, %14 ], [ %7, %11 ]\l  %17 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %15\l  %18 = load i8, i8 addrspace(1)* %17, align 1, !tbaa !9, !amdgpu.noclobber !10\l  %19 = zext i8 %18 to i32\l  %20 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ16histo_MultiBlockPhlPjE4temp, i32 0, i32 %19\l  %21 = atomicrmw add i32 addrspace(3)* %20, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %22 = add nsw i32 %16, 256000\l  %23 = sext i32 %22 to i64\l  %24 = icmp slt i64 %23, %1\l  br i1 %24, label %14, label %25, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x600b0c0:s0 -> Node0x600b0c0;
	Node0x600b0c0:s1 -> Node0x600b150;
	Node0x600b150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%25:\l25:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %8, label %26, label %32\l|{<s0>T|<s1>F}}"];
	Node0x600b150:s0 -> Node0x600bfe0;
	Node0x600b150:s1 -> Node0x600c030;
	Node0x600bfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%26:\l26:                                               \l  %27 = zext i32 %7 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %27\l  %29 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ16histo_MultiBlockPhlPjE4temp, i32 0, i32 %4\l  %30 = load i32, i32 addrspace(3)* %29, align 4, !tbaa !5\l  %31 = atomicrmw add i32 addrspace(1)* %28, i32 %30 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  br label %32\l}"];
	Node0x600bfe0 -> Node0x600c030;
	Node0x600c030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%32:\l32:                                               \l  ret void\l}"];
}
