digraph "CFG for '_Z4calcPfii' function" {
	label="CFG for '_Z4calcPfii' function";

	Node0x60acbf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 16\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 8, !tbaa !16\l  %24 = mul i32 %16, %20\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %26 = add i32 %24, %25\l  %27 = mul nuw nsw i32 %25, %9\l  %28 = add nuw nsw i32 %27, %14\l  %29 = mul nuw nsw i32 %28, 12\l  %30 = udiv i32 %12, %9\l  %31 = mul i32 %30, %9\l  %32 = icmp ugt i32 %12, %31\l  %33 = zext i1 %32 to i32\l  %34 = add i32 %30, %33\l  %35 = mul i32 %34, %9\l  %36 = udiv i32 %23, %20\l  %37 = mul i32 %36, %20\l  %38 = icmp ugt i32 %23, %37\l  %39 = zext i1 %38 to i32\l  %40 = add i32 %36, %39\l  %41 = mul i32 %40, %20\l  %42 = mul nsw i32 %2, %1\l  %43 = mul nsw i32 %26, %1\l  %44 = add nsw i32 %15, %42\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !17,\l... !amdgpu.noclobber !5\l  %48 = add nsw i32 %43, %15\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !17,\l... !amdgpu.noclobber !5\l  %52 = getelementptr inbounds [3072 x float], [3072 x float] addrspace(3)*\l... @_ZZ4calcPfiiE3s_d, i32 0, i32 %29\l  store float %51, float addrspace(3)* %52, align 16, !tbaa !17\l  %53 = or i32 %29, 1\l  %54 = getelementptr inbounds [3072 x float], [3072 x float] addrspace(3)*\l... @_ZZ4calcPfiiE3s_d, i32 0, i32 %53\l  store float %47, float addrspace(3)* %54, align 4, !tbaa !17\l  %55 = add nsw i32 %43, %2\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !17\l  %59 = or i32 %29, 2\l  %60 = getelementptr inbounds [3072 x float], [3072 x float] addrspace(3)*\l... @_ZZ4calcPfiiE3s_d, i32 0, i32 %59\l  store float %58, float addrspace(3)* %60, align 8, !tbaa !17\l  %61 = add nsw i32 %41, %26\l  %62 = mul nsw i32 %61, %1\l  %63 = add nsw i32 %62, %15\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %0, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !17,\l... !amdgpu.noclobber !5\l  %67 = or i32 %29, 3\l  %68 = getelementptr inbounds [3072 x float], [3072 x float] addrspace(3)*\l... @_ZZ4calcPfiiE3s_d, i32 0, i32 %67\l  store float %66, float addrspace(3)* %68, align 4, !tbaa !17\l  %69 = add nuw nsw i32 %29, 4\l  %70 = getelementptr inbounds [3072 x float], [3072 x float] addrspace(3)*\l... @_ZZ4calcPfiiE3s_d, i32 0, i32 %69\l  store float %47, float addrspace(3)* %70, align 16, !tbaa !17\l  %71 = add nsw i32 %62, %2\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !17\l  %75 = add nuw nsw i32 %29, 5\l  %76 = getelementptr inbounds [3072 x float], [3072 x float] addrspace(3)*\l... @_ZZ4calcPfiiE3s_d, i32 0, i32 %75\l  store float %74, float addrspace(3)* %76, align 4, !tbaa !17\l  %77 = add nsw i32 %35, %15\l  %78 = add nsw i32 %77, %42\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !17,\l... !amdgpu.noclobber !5\l  %82 = add nsw i32 %43, %77\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !17,\l... !amdgpu.noclobber !5\l  %86 = add nuw nsw i32 %29, 6\l  %87 = getelementptr inbounds [3072 x float], [3072 x float] addrspace(3)*\l... @_ZZ4calcPfiiE3s_d, i32 0, i32 %86\l  store float %85, float addrspace(3)* %87, align 8, !tbaa !17\l  %88 = add nuw nsw i32 %29, 7\l  %89 = getelementptr inbounds [3072 x float], [3072 x float] addrspace(3)*\l... @_ZZ4calcPfiiE3s_d, i32 0, i32 %88\l  store float %81, float addrspace(3)* %89, align 4, !tbaa !17\l  %90 = add nuw nsw i32 %29, 8\l  %91 = getelementptr inbounds [3072 x float], [3072 x float] addrspace(3)*\l... @_ZZ4calcPfiiE3s_d, i32 0, i32 %90\l  store float %58, float addrspace(3)* %91, align 16, !tbaa !17\l  %92 = add nsw i32 %62, %77\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %0, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !17,\l... !amdgpu.noclobber !5\l  %96 = add nuw nsw i32 %29, 9\l  %97 = getelementptr inbounds [3072 x float], [3072 x float] addrspace(3)*\l... @_ZZ4calcPfiiE3s_d, i32 0, i32 %96\l  store float %95, float addrspace(3)* %97, align 4, !tbaa !17\l  %98 = add nuw nsw i32 %29, 10\l  %99 = getelementptr inbounds [3072 x float], [3072 x float] addrspace(3)*\l... @_ZZ4calcPfiiE3s_d, i32 0, i32 %98\l  store float %81, float addrspace(3)* %99, align 8, !tbaa !17\l  %100 = add nuw nsw i32 %29, 11\l  %101 = getelementptr inbounds [3072 x float], [3072 x float] addrspace(3)*\l... @_ZZ4calcPfiiE3s_d, i32 0, i32 %100\l  store float %74, float addrspace(3)* %101, align 4, !tbaa !17\l  %102 = load float, float addrspace(3)* %52, align 16, !tbaa !17\l  %103 = bitcast float addrspace(3)* %54 to \<2 x float\> addrspace(3)*\l  %104 = load \<2 x float\>, \<2 x float\> addrspace(3)* %103, align 4, !tbaa !17\l  %105 = extractelement \<2 x float\> %104, i64 0\l  %106 = extractelement \<2 x float\> %104, i64 1\l  %107 = fadd contract float %105, %106\l  %108 = fcmp contract ogt float %102, %107\l  br i1 %108, label %109, label %110\l|{<s0>T|<s1>F}}"];
	Node0x60acbf0:s0 -> Node0x60b54b0;
	Node0x60acbf0:s1 -> Node0x60b5540;
	Node0x60b54b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%109:\l109:                                              \l  store float %107, float addrspace(3)* %52, align 16, !tbaa !17\l  br label %110\l}"];
	Node0x60b54b0 -> Node0x60b5540;
	Node0x60b5540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%110:\l110:                                              \l  %111 = load float, float addrspace(3)* %68, align 4, !tbaa !17\l  %112 = bitcast float addrspace(3)* %70 to \<2 x float\> addrspace(3)*\l  %113 = load \<2 x float\>, \<2 x float\> addrspace(3)* %112, align 16, !tbaa !17\l  %114 = extractelement \<2 x float\> %113, i64 0\l  %115 = extractelement \<2 x float\> %113, i64 1\l  %116 = fadd contract float %114, %115\l  %117 = fcmp contract ogt float %111, %116\l  br i1 %117, label %118, label %119\l|{<s0>T|<s1>F}}"];
	Node0x60b5540:s0 -> Node0x60b5b40;
	Node0x60b5540:s1 -> Node0x60b5b90;
	Node0x60b5b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%118:\l118:                                              \l  store float %116, float addrspace(3)* %68, align 4, !tbaa !17\l  br label %119\l}"];
	Node0x60b5b40 -> Node0x60b5b90;
	Node0x60b5b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%119:\l119:                                              \l  %120 = phi float [ %116, %118 ], [ %111, %110 ]\l  %121 = load float, float addrspace(3)* %87, align 8, !tbaa !17\l  %122 = bitcast float addrspace(3)* %89 to \<2 x float\> addrspace(3)*\l  %123 = load \<2 x float\>, \<2 x float\> addrspace(3)* %122, align 4, !tbaa !17\l  %124 = extractelement \<2 x float\> %123, i64 0\l  %125 = extractelement \<2 x float\> %123, i64 1\l  %126 = fadd contract float %124, %125\l  %127 = fcmp contract ogt float %121, %126\l  br i1 %127, label %128, label %129\l|{<s0>T|<s1>F}}"];
	Node0x60b5b90:s0 -> Node0x60b61d0;
	Node0x60b5b90:s1 -> Node0x60b6220;
	Node0x60b61d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%128:\l128:                                              \l  store float %126, float addrspace(3)* %87, align 8, !tbaa !17\l  br label %129\l}"];
	Node0x60b61d0 -> Node0x60b6220;
	Node0x60b6220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%129:\l129:                                              \l  %130 = phi float [ %126, %128 ], [ %121, %119 ]\l  %131 = load float, float addrspace(3)* %97, align 4, !tbaa !17\l  %132 = bitcast float addrspace(3)* %99 to \<2 x float\> addrspace(3)*\l  %133 = load \<2 x float\>, \<2 x float\> addrspace(3)* %132, align 8, !tbaa !17\l  %134 = extractelement \<2 x float\> %133, i64 0\l  %135 = extractelement \<2 x float\> %133, i64 1\l  %136 = fadd contract float %134, %135\l  %137 = fcmp contract ogt float %131, %136\l  br i1 %137, label %138, label %139\l|{<s0>T|<s1>F}}"];
	Node0x60b6220:s0 -> Node0x60b2f30;
	Node0x60b6220:s1 -> Node0x60b6ce0;
	Node0x60b2f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%138:\l138:                                              \l  store float %136, float addrspace(3)* %97, align 4, !tbaa !17\l  br label %139\l}"];
	Node0x60b2f30 -> Node0x60b6ce0;
	Node0x60b6ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%139:\l139:                                              \l  %140 = phi float [ %136, %138 ], [ %131, %129 ]\l  %141 = load float, float addrspace(3)* %52, align 16, !tbaa !17\l  store float %141, float addrspace(1)* %50, align 4, !tbaa !17\l  store float %120, float addrspace(1)* %65, align 4, !tbaa !17\l  store float %130, float addrspace(1)* %84, align 4, !tbaa !17\l  store float %140, float addrspace(1)* %94, align 4, !tbaa !17\l  ret void\l}"];
}
