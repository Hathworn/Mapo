digraph "CFG for '_Z14MatrixMultiplyPKfS0_Pfiii' function" {
	label="CFG for '_Z14MatrixMultiplyPKfS0_Pfiii' function";

	Node0x6212030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 16\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 8, !tbaa !6\l  %16 = mul i32 %7, %12\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %25 = bitcast i8 addrspace(4)* %24 to i32 addrspace(4)*\l  %26 = load i32, i32 addrspace(4)* %25, align 4, !tbaa !16\l  %27 = mul i32 %19, %23\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %29 = add i32 %27, %28\l  %30 = udiv i32 %26, %23\l  %31 = mul i32 %30, %23\l  %32 = icmp ugt i32 %26, %31\l  %33 = zext i1 %32 to i32\l  %34 = add i32 %30, %33\l  %35 = mul i32 %34, %23\l  %36 = udiv i32 %15, %12\l  %37 = mul i32 %36, %12\l  %38 = icmp ugt i32 %15, %37\l  %39 = zext i1 %38 to i32\l  %40 = add i32 %36, %39\l  %41 = mul i32 %40, %12\l  %42 = add nsw i32 %4, -1\l  %43 = add i32 %42, %41\l  %44 = sdiv i32 %43, %41\l  %45 = icmp sgt i32 %44, 0\l  br i1 %45, label %46, label %97\l|{<s0>T|<s1>F}}"];
	Node0x6212030:s0 -> Node0x62168b0;
	Node0x6212030:s1 -> Node0x6216940;
	Node0x62168b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%46:\l46:                                               \l  %47 = add nsw i32 %3, -1\l  %48 = add i32 %47, %35\l  %49 = sdiv i32 %48, %35\l  %50 = icmp sgt i32 %49, 0\l  %51 = add nsw i32 %3, 15\l  %52 = sdiv i32 %51, 16\l  %53 = icmp sgt i32 %3, 0\l  %54 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 %28\l  %55 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 %17, i32 %28\l  %56 = tail call i32 @llvm.smax.i32(i32 %52, i32 1)\l  %57 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 0\l  %58 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 0, i32 %28\l  %59 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 1\l  %60 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 1, i32 %28\l  %61 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 2\l  %62 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 2, i32 %28\l  %63 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 3\l  %64 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 3, i32 %28\l  %65 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 4\l  %66 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 4, i32 %28\l  %67 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 5\l  %68 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 5, i32 %28\l  %69 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 6\l  %70 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 6, i32 %28\l  %71 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 7\l  %72 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 7, i32 %28\l  %73 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 8\l  %74 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 8, i32 %28\l  %75 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 9\l  %76 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 9, i32 %28\l  %77 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 10\l  %78 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 10, i32 %28\l  %79 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 11\l  %80 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 11, i32 %28\l  %81 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 12\l  %82 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 12, i32 %28\l  %83 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 13\l  %84 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 13, i32 %28\l  %85 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 14\l  %86 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 14, i32 %28\l  %87 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2As, i32 0, i32 %17, i32 15\l  %88 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ14MatrixMultiplyPKfS0_PfiiiE2Bs, i32 0, i32 15, i32 %28\l  br label %89\l}"];
	Node0x62168b0 -> Node0x6217300;
	Node0x6217300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%89:\l89:                                               \l  %90 = phi i32 [ 0, %46 ], [ %99, %98 ]\l  br i1 %50, label %91, label %98\l|{<s0>T|<s1>F}}"];
	Node0x6217300:s0 -> Node0x6219600;
	Node0x6217300:s1 -> Node0x62194c0;
	Node0x6219600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%91:\l91:                                               \l  %92 = mul nsw i32 %90, %41\l  %93 = add nsw i32 %18, %92\l  %94 = icmp slt i32 %93, %4\l  %95 = mul nsw i32 %93, %3\l  %96 = mul nsw i32 %93, %5\l  br label %101\l}"];
	Node0x6219600 -> Node0x6219a10;
	Node0x6216940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%97:\l97:                                               \l  ret void\l}"];
	Node0x62194c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%98:\l98:                                               \l  %99 = add nuw nsw i32 %90, 1\l  %100 = icmp eq i32 %99, %44\l  br i1 %100, label %97, label %89, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x62194c0:s0 -> Node0x6216940;
	Node0x62194c0:s1 -> Node0x6217300;
	Node0x6219a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%101:\l101:                                              \l  %102 = phi i32 [ 0, %91 ], [ %207, %206 ]\l  %103 = mul nsw i32 %102, %35\l  %104 = add nsw i32 %29, %103\l  br i1 %53, label %105, label %107\l|{<s0>T|<s1>F}}"];
	Node0x6219a10:s0 -> Node0x6219fd0;
	Node0x6219a10:s1 -> Node0x621a060;
	Node0x6219fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%105:\l105:                                              \l  %106 = icmp slt i32 %104, %5\l  br label %111\l}"];
	Node0x6219fd0 -> Node0x621a230;
	Node0x621a060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%107:\l107:                                              \l  %108 = phi float [ 0.000000e+00, %101 ], [ %199, %134 ]\l  %109 = icmp slt i32 %104, %5\l  %110 = select i1 %94, i1 %109, i1 false\l  br i1 %110, label %202, label %206\l|{<s0>T|<s1>F}}"];
	Node0x621a060:s0 -> Node0x621b020;
	Node0x621a060:s1 -> Node0x6219d70;
	Node0x621a230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  %112 = phi i32 [ 0, %105 ], [ %200, %134 ]\l  %113 = phi float [ 0.000000e+00, %105 ], [ %199, %134 ]\l  %114 = shl nsw i32 %112, 4\l  %115 = add nuw i32 %114, %28\l  %116 = icmp slt i32 %115, %3\l  %117 = select i1 %116, i1 %94, i1 false\l  br i1 %117, label %118, label %123\l|{<s0>T|<s1>F}}"];
	Node0x621a230:s0 -> Node0x621b550;
	Node0x621a230:s1 -> Node0x621b5e0;
	Node0x621b550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%118:\l118:                                              \l  %119 = add i32 %115, %95\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %0, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !19\l  br label %123\l}"];
	Node0x621b550 -> Node0x621b5e0;
	Node0x621b5e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%123:\l123:                                              \l  %124 = phi float [ %122, %118 ], [ 0.000000e+00, %111 ]\l  store float %124, float addrspace(3)* %54, align 4, !tbaa !19\l  %125 = add nuw nsw i32 %114, %17\l  %126 = icmp slt i32 %125, %3\l  %127 = select i1 %126, i1 %106, i1 false\l  br i1 %127, label %128, label %134\l|{<s0>T|<s1>F}}"];
	Node0x621b5e0:s0 -> Node0x621c3f0;
	Node0x621b5e0:s1 -> Node0x621ad70;
	Node0x621c3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%128:\l128:                                              \l  %129 = mul nsw i32 %125, %5\l  %130 = add nsw i32 %129, %104\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %1, i64 %131\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !19\l  br label %134\l}"];
	Node0x621c3f0 -> Node0x621ad70;
	Node0x621ad70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%134:\l134:                                              \l  %135 = phi float [ %133, %128 ], [ 0.000000e+00, %123 ]\l  store float %135, float addrspace(3)* %55, align 4, !tbaa !19\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %136 = load float, float addrspace(3)* %57, align 16, !tbaa !19\l  %137 = load float, float addrspace(3)* %58, align 4, !tbaa !19\l  %138 = fmul contract float %136, %137\l  %139 = fadd contract float %113, %138\l  %140 = load float, float addrspace(3)* %59, align 4, !tbaa !19\l  %141 = load float, float addrspace(3)* %60, align 4, !tbaa !19\l  %142 = fmul contract float %140, %141\l  %143 = fadd contract float %139, %142\l  %144 = load float, float addrspace(3)* %61, align 8, !tbaa !19\l  %145 = load float, float addrspace(3)* %62, align 4, !tbaa !19\l  %146 = fmul contract float %144, %145\l  %147 = fadd contract float %143, %146\l  %148 = load float, float addrspace(3)* %63, align 4, !tbaa !19\l  %149 = load float, float addrspace(3)* %64, align 4, !tbaa !19\l  %150 = fmul contract float %148, %149\l  %151 = fadd contract float %147, %150\l  %152 = load float, float addrspace(3)* %65, align 16, !tbaa !19\l  %153 = load float, float addrspace(3)* %66, align 4, !tbaa !19\l  %154 = fmul contract float %152, %153\l  %155 = fadd contract float %151, %154\l  %156 = load float, float addrspace(3)* %67, align 4, !tbaa !19\l  %157 = load float, float addrspace(3)* %68, align 4, !tbaa !19\l  %158 = fmul contract float %156, %157\l  %159 = fadd contract float %155, %158\l  %160 = load float, float addrspace(3)* %69, align 8, !tbaa !19\l  %161 = load float, float addrspace(3)* %70, align 4, !tbaa !19\l  %162 = fmul contract float %160, %161\l  %163 = fadd contract float %159, %162\l  %164 = load float, float addrspace(3)* %71, align 4, !tbaa !19\l  %165 = load float, float addrspace(3)* %72, align 4, !tbaa !19\l  %166 = fmul contract float %164, %165\l  %167 = fadd contract float %163, %166\l  %168 = load float, float addrspace(3)* %73, align 16, !tbaa !19\l  %169 = load float, float addrspace(3)* %74, align 4, !tbaa !19\l  %170 = fmul contract float %168, %169\l  %171 = fadd contract float %167, %170\l  %172 = load float, float addrspace(3)* %75, align 4, !tbaa !19\l  %173 = load float, float addrspace(3)* %76, align 4, !tbaa !19\l  %174 = fmul contract float %172, %173\l  %175 = fadd contract float %171, %174\l  %176 = load float, float addrspace(3)* %77, align 8, !tbaa !19\l  %177 = load float, float addrspace(3)* %78, align 4, !tbaa !19\l  %178 = fmul contract float %176, %177\l  %179 = fadd contract float %175, %178\l  %180 = load float, float addrspace(3)* %79, align 4, !tbaa !19\l  %181 = load float, float addrspace(3)* %80, align 4, !tbaa !19\l  %182 = fmul contract float %180, %181\l  %183 = fadd contract float %179, %182\l  %184 = load float, float addrspace(3)* %81, align 16, !tbaa !19\l  %185 = load float, float addrspace(3)* %82, align 4, !tbaa !19\l  %186 = fmul contract float %184, %185\l  %187 = fadd contract float %183, %186\l  %188 = load float, float addrspace(3)* %83, align 4, !tbaa !19\l  %189 = load float, float addrspace(3)* %84, align 4, !tbaa !19\l  %190 = fmul contract float %188, %189\l  %191 = fadd contract float %187, %190\l  %192 = load float, float addrspace(3)* %85, align 8, !tbaa !19\l  %193 = load float, float addrspace(3)* %86, align 4, !tbaa !19\l  %194 = fmul contract float %192, %193\l  %195 = fadd contract float %191, %194\l  %196 = load float, float addrspace(3)* %87, align 4, !tbaa !19\l  %197 = load float, float addrspace(3)* %88, align 4, !tbaa !19\l  %198 = fmul contract float %196, %197\l  %199 = fadd contract float %195, %198\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %200 = add nuw nsw i32 %112, 1\l  %201 = icmp eq i32 %200, %56\l  br i1 %201, label %107, label %111, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x621ad70:s0 -> Node0x621a060;
	Node0x621ad70:s1 -> Node0x621a230;
	Node0x621b020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%202:\l202:                                              \l  %203 = add nsw i32 %104, %96\l  %204 = sext i32 %203 to i64\l  %205 = getelementptr inbounds float, float addrspace(1)* %2, i64 %204\l  store float %108, float addrspace(1)* %205, align 4, !tbaa !19\l  br label %206\l}"];
	Node0x621b020 -> Node0x6219d70;
	Node0x6219d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%206:\l206:                                              \l  %207 = add nuw nsw i32 %102, 1\l  %208 = icmp eq i32 %207, %49\l  br i1 %208, label %98, label %101, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x6219d70:s0 -> Node0x62194c0;
	Node0x6219d70:s1 -> Node0x6219a10;
}
