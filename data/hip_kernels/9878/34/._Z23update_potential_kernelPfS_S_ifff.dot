digraph "CFG for '_Z23update_potential_kernelPfS_S_ifff' function" {
	label="CFG for '_Z23update_potential_kernelPfS_S_ifff' function";

	Node0x4f357a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !7\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = udiv i32 %17, %14\l  %20 = mul i32 %19, %14\l  %21 = icmp ugt i32 %17, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %18\l  %25 = add i32 %24, %9\l  %26 = mul i32 %25, %14\l  %27 = add i32 %26, %8\l  %28 = icmp slt i32 %27, %3\l  br i1 %28, label %29, label %45\l|{<s0>T|<s1>F}}"];
	Node0x4f357a0:s0 -> Node0x4f37fa0;
	Node0x4f357a0:s1 -> Node0x4f38030;
	Node0x4f37fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = sext i32 %27 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %35 = fmul contract float %34, %4\l  %36 = fadd contract float %32, %35\l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %39 = fmul contract float %38, %5\l  %40 = fadd contract float %36, %39\l  store float %40, float addrspace(1)* %31, align 4, !tbaa !16\l  %41 = load float, float addrspace(1)* %33, align 4, !tbaa !16\l  %42 = load float, float addrspace(1)* %37, align 4, !tbaa !16\l  %43 = fmul contract float %42, %6\l  %44 = fadd contract float %41, %43\l  store float %44, float addrspace(1)* %33, align 4, !tbaa !16\l  store float 0.000000e+00, float addrspace(1)* %37, align 4, !tbaa !16\l  br label %45\l}"];
	Node0x4f37fa0 -> Node0x4f38030;
	Node0x4f38030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  ret void\l}"];
}
