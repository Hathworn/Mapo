digraph "CFG for '_Z27update_accel_elastic_kernelPfPKfifS1_S1_S1_' function" {
	label="CFG for '_Z27update_accel_elastic_kernelPfPKfifS1_S1_S1_' function";

	Node0x5a50b60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !7\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = udiv i32 %17, %14\l  %20 = mul i32 %19, %14\l  %21 = icmp ugt i32 %17, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %18\l  %25 = add i32 %24, %9\l  %26 = mul i32 %25, %14\l  %27 = add i32 %26, %8\l  %28 = icmp slt i32 %27, %2\l  br i1 %28, label %29, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5a50b60:s0 -> Node0x5a53390;
	Node0x5a50b60:s1 -> Node0x5a53420;
	Node0x5a53390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %27, 3\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %34 = sext i32 %27 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %4, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %37 = fmul contract float %33, %36\l  %38 = add nsw i32 %30, 1\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %42 = fmul contract float %41, %3\l  %43 = fadd contract float %37, %42\l  store float %43, float addrspace(1)* %32, align 4, !tbaa !16\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %46 = getelementptr inbounds float, float addrspace(1)* %5, i64 %34\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !16\l  %48 = fmul contract float %45, %47\l  %49 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !16\l  %51 = fmul contract float %50, %3\l  %52 = fsub contract float %48, %51\l  store float %52, float addrspace(1)* %44, align 4, !tbaa !16\l  %53 = add nsw i32 %30, 2\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %57 = getelementptr inbounds float, float addrspace(1)* %6, i64 %34\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !16\l  %59 = fmul contract float %56, %58\l  store float %59, float addrspace(1)* %55, align 4, !tbaa !16\l  br label %60\l}"];
	Node0x5a53390 -> Node0x5a53420;
	Node0x5a53420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  ret void\l}"];
}
