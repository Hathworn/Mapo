digraph "CFG for '_Z37assemble_boundary_potential_on_devicePfPKfiiPKiS3_' function" {
	label="CFG for '_Z37assemble_boundary_potential_on_devicePfPKfiiPKiS3_' function";

	Node0x4cb0d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = udiv i32 %16, %13\l  %18 = mul i32 %17, %13\l  %19 = icmp ugt i32 %16, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %24 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !5, !invariant.load !6\l  %27 = zext i16 %26 to i32\l  %28 = mul i32 %23, %27\l  %29 = add i32 %28, %22\l  %30 = mul i32 %29, %21\l  %31 = add i32 %30, %8\l  %32 = mul i32 %31, %13\l  %33 = add i32 %32, %7\l  %34 = icmp sgt i32 %2, 0\l  br i1 %34, label %35, label %143\l|{<s0>T|<s1>F}}"];
	Node0x4cb0d50:s0 -> Node0x4cb2dd0;
	Node0x4cb0d50:s1 -> Node0x4cb4ed0;
	Node0x4cb2dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%35:\l35:                                               \l  %36 = and i32 %2, 3\l  %37 = icmp ult i32 %2, 4\l  br i1 %37, label %117, label %38\l|{<s0>T|<s1>F}}"];
	Node0x4cb2dd0:s0 -> Node0x4cb5160;
	Node0x4cb2dd0:s1 -> Node0x4cb51b0;
	Node0x4cb51b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%38:\l38:                                               \l  %39 = and i32 %2, -4\l  br label %40\l}"];
	Node0x4cb51b0 -> Node0x4cb53b0;
	Node0x4cb53b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%40:\l40:                                               \l  %41 = phi i32 [ 0, %38 ], [ %114, %113 ]\l  %42 = phi i32 [ 0, %38 ], [ %115, %113 ]\l  %43 = zext i32 %41 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %43\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !16\l  %46 = icmp slt i32 %33, %45\l  br i1 %46, label %47, label %59\l|{<s0>T|<s1>F}}"];
	Node0x4cb53b0:s0 -> Node0x4cb5a80;
	Node0x4cb53b0:s1 -> Node0x4cb5b10;
	Node0x4cb5a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%47:\l47:                                               \l  %48 = mul nsw i32 %41, %3\l  %49 = add nsw i32 %48, %33\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !16\l  %53 = add nsw i32 %52, -1\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %50\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !20\l  %58 = atomicrmw fadd float addrspace(1)* %55, float %57\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %59\l}"];
	Node0x4cb5a80 -> Node0x4cb5b10;
	Node0x4cb5b10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%59:\l59:                                               \l  %60 = or i32 %41, 1\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %61\l  %63 = load i32, i32 addrspace(1)* %62, align 4, !tbaa !16\l  %64 = icmp slt i32 %33, %63\l  br i1 %64, label %65, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4cb5b10:s0 -> Node0x4cb4bf0;
	Node0x4cb5b10:s1 -> Node0x4cb4c40;
	Node0x4cb4bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%65:\l65:                                               \l  %66 = mul nsw i32 %60, %3\l  %67 = add nsw i32 %66, %33\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !16\l  %71 = add nsw i32 %70, -1\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %72\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %68\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !20\l  %76 = atomicrmw fadd float addrspace(1)* %73, float %75\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %77\l}"];
	Node0x4cb4bf0 -> Node0x4cb4c40;
	Node0x4cb4c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%77:\l77:                                               \l  %78 = or i32 %41, 2\l  %79 = zext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %79\l  %81 = load i32, i32 addrspace(1)* %80, align 4, !tbaa !16\l  %82 = icmp slt i32 %33, %81\l  br i1 %82, label %83, label %95\l|{<s0>T|<s1>F}}"];
	Node0x4cb4c40:s0 -> Node0x4cb7fa0;
	Node0x4cb4c40:s1 -> Node0x4cb7ff0;
	Node0x4cb7fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%83:\l83:                                               \l  %84 = mul nsw i32 %78, %3\l  %85 = add nsw i32 %84, %33\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %86\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !16\l  %89 = add nsw i32 %88, -1\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  %92 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !20\l  %94 = atomicrmw fadd float addrspace(1)* %91, float %93\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %95\l}"];
	Node0x4cb7fa0 -> Node0x4cb7ff0;
	Node0x4cb7ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%95:\l95:                                               \l  %96 = or i32 %41, 3\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %97\l  %99 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !16\l  %100 = icmp slt i32 %33, %99\l  br i1 %100, label %101, label %113\l|{<s0>T|<s1>F}}"];
	Node0x4cb7ff0:s0 -> Node0x4cb89e0;
	Node0x4cb7ff0:s1 -> Node0x4cb54a0;
	Node0x4cb89e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%101:\l101:                                              \l  %102 = mul nsw i32 %96, %3\l  %103 = add nsw i32 %102, %33\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %104\l  %106 = load i32, i32 addrspace(1)* %105, align 4, !tbaa !16\l  %107 = add nsw i32 %106, -1\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %0, i64 %108\l  %110 = getelementptr inbounds float, float addrspace(1)* %1, i64 %104\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !20\l  %112 = atomicrmw fadd float addrspace(1)* %109, float %111\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %113\l}"];
	Node0x4cb89e0 -> Node0x4cb54a0;
	Node0x4cb54a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%113:\l113:                                              \l  %114 = add nuw nsw i32 %41, 4\l  %115 = add i32 %42, 4\l  %116 = icmp eq i32 %115, %39\l  br i1 %116, label %117, label %40, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4cb54a0:s0 -> Node0x4cb5160;
	Node0x4cb54a0:s1 -> Node0x4cb53b0;
	Node0x4cb5160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%117:\l117:                                              \l  %118 = phi i32 [ 0, %35 ], [ %114, %113 ]\l  %119 = icmp eq i32 %36, 0\l  br i1 %119, label %143, label %120\l|{<s0>T|<s1>F}}"];
	Node0x4cb5160:s0 -> Node0x4cb4ed0;
	Node0x4cb5160:s1 -> Node0x4cb9550;
	Node0x4cb9550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%120:\l120:                                              \l  %121 = phi i32 [ %140, %139 ], [ %118, %117 ]\l  %122 = phi i32 [ %141, %139 ], [ 0, %117 ]\l  %123 = zext i32 %121 to i64\l  %124 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %123\l  %125 = load i32, i32 addrspace(1)* %124, align 4, !tbaa !16\l  %126 = icmp slt i32 %33, %125\l  br i1 %126, label %127, label %139\l|{<s0>T|<s1>F}}"];
	Node0x4cb9550:s0 -> Node0x4cb9a10;
	Node0x4cb9550:s1 -> Node0x4cb9650;
	Node0x4cb9a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%127:\l127:                                              \l  %128 = mul nsw i32 %121, %3\l  %129 = add nsw i32 %128, %33\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %130\l  %132 = load i32, i32 addrspace(1)* %131, align 4, !tbaa !16\l  %133 = add nsw i32 %132, -1\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %0, i64 %134\l  %136 = getelementptr inbounds float, float addrspace(1)* %1, i64 %130\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !20\l  %138 = atomicrmw fadd float addrspace(1)* %135, float %137\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %139\l}"];
	Node0x4cb9a10 -> Node0x4cb9650;
	Node0x4cb9650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%139:\l139:                                              \l  %140 = add nuw nsw i32 %121, 1\l  %141 = add i32 %122, 1\l  %142 = icmp eq i32 %141, %36\l  br i1 %142, label %143, label %120, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4cb9650:s0 -> Node0x4cb4ed0;
	Node0x4cb9650:s1 -> Node0x4cb9550;
	Node0x4cb4ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%143:\l143:                                              \l  ret void\l}"];
}
