digraph "CFG for '_Z36prepare_boundary_potential_on_devicePKfPfiiPKiS3_' function" {
	label="CFG for '_Z36prepare_boundary_potential_on_devicePKfPfiiPKiS3_' function";

	Node0x4575db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = udiv i32 %16, %13\l  %18 = mul i32 %17, %13\l  %19 = icmp ugt i32 %16, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %24 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !5, !invariant.load !6\l  %27 = zext i16 %26 to i32\l  %28 = mul i32 %23, %27\l  %29 = add i32 %28, %22\l  %30 = mul i32 %29, %21\l  %31 = add i32 %30, %8\l  %32 = mul i32 %31, %13\l  %33 = add i32 %32, %7\l  %34 = icmp sgt i32 %2, 0\l  br i1 %34, label %35, label %138\l|{<s0>T|<s1>F}}"];
	Node0x4575db0:s0 -> Node0x4577e30;
	Node0x4575db0:s1 -> Node0x4579f30;
	Node0x4577e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%35:\l35:                                               \l  %36 = and i32 %2, 3\l  %37 = icmp ult i32 %2, 4\l  br i1 %37, label %113, label %38\l|{<s0>T|<s1>F}}"];
	Node0x4577e30:s0 -> Node0x457a1c0;
	Node0x4577e30:s1 -> Node0x457a210;
	Node0x457a210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%38:\l38:                                               \l  %39 = and i32 %2, -4\l  br label %40\l}"];
	Node0x457a210 -> Node0x457a410;
	Node0x457a410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%40:\l40:                                               \l  %41 = phi i32 [ 0, %38 ], [ %110, %109 ]\l  %42 = phi i32 [ 0, %38 ], [ %111, %109 ]\l  %43 = zext i32 %41 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %43\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %46 = icmp slt i32 %33, %45\l  br i1 %46, label %47, label %58\l|{<s0>T|<s1>F}}"];
	Node0x457a410:s0 -> Node0x457ab60;
	Node0x457a410:s1 -> Node0x457abf0;
	Node0x457ab60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%47:\l47:                                               \l  %48 = mul nsw i32 %41, %3\l  %49 = add nsw i32 %48, %33\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %53 = add nsw i32 %52, -1\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !20\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %50\l  store float %56, float addrspace(1)* %57, align 4, !tbaa !20\l  br label %58\l}"];
	Node0x457ab60 -> Node0x457abf0;
	Node0x457abf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%58:\l58:                                               \l  %59 = or i32 %41, 1\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %60\l  %62 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %63 = icmp slt i32 %33, %62\l  br i1 %63, label %64, label %75\l|{<s0>T|<s1>F}}"];
	Node0x457abf0:s0 -> Node0x457c3e0;
	Node0x457abf0:s1 -> Node0x457c470;
	Node0x457c3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%64:\l64:                                               \l  %65 = mul nsw i32 %59, %3\l  %66 = add nsw i32 %65, %33\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %70 = add nsw i32 %69, -1\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !20\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  store float %73, float addrspace(1)* %74, align 4, !tbaa !20\l  br label %75\l}"];
	Node0x457c3e0 -> Node0x457c470;
	Node0x457c470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%75:\l75:                                               \l  %76 = or i32 %41, 2\l  %77 = zext i32 %76 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %77\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %80 = icmp slt i32 %33, %79\l  br i1 %80, label %81, label %92\l|{<s0>T|<s1>F}}"];
	Node0x457c470:s0 -> Node0x457d0e0;
	Node0x457c470:s1 -> Node0x457d170;
	Node0x457d0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%81:\l81:                                               \l  %82 = mul nsw i32 %76, %3\l  %83 = add nsw i32 %82, %33\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %84\l  %86 = load i32, i32 addrspace(1)* %85, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %87 = add nsw i32 %86, -1\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !20\l  %91 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  store float %90, float addrspace(1)* %91, align 4, !tbaa !20\l  br label %92\l}"];
	Node0x457d0e0 -> Node0x457d170;
	Node0x457d170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%92:\l92:                                               \l  %93 = or i32 %41, 3\l  %94 = zext i32 %93 to i64\l  %95 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %94\l  %96 = load i32, i32 addrspace(1)* %95, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %97 = icmp slt i32 %33, %96\l  br i1 %97, label %98, label %109\l|{<s0>T|<s1>F}}"];
	Node0x457d170:s0 -> Node0x457dba0;
	Node0x457d170:s1 -> Node0x457a500;
	Node0x457dba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%98:\l98:                                               \l  %99 = mul nsw i32 %93, %3\l  %100 = add nsw i32 %99, %33\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %101\l  %103 = load i32, i32 addrspace(1)* %102, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %104 = add nsw i32 %103, -1\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %0, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !20\l  %108 = getelementptr inbounds float, float addrspace(1)* %1, i64 %101\l  store float %107, float addrspace(1)* %108, align 4, !tbaa !20\l  br label %109\l}"];
	Node0x457dba0 -> Node0x457a500;
	Node0x457a500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%109:\l109:                                              \l  %110 = add nuw nsw i32 %41, 4\l  %111 = add i32 %42, 4\l  %112 = icmp eq i32 %111, %39\l  br i1 %112, label %113, label %40, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x457a500:s0 -> Node0x457a1c0;
	Node0x457a500:s1 -> Node0x457a410;
	Node0x457a1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%113:\l113:                                              \l  %114 = phi i32 [ 0, %35 ], [ %110, %109 ]\l  %115 = icmp eq i32 %36, 0\l  br i1 %115, label %138, label %116\l|{<s0>T|<s1>F}}"];
	Node0x457a1c0:s0 -> Node0x4579f30;
	Node0x457a1c0:s1 -> Node0x457e750;
	Node0x457e750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%116:\l116:                                              \l  %117 = phi i32 [ %135, %134 ], [ %114, %113 ]\l  %118 = phi i32 [ %136, %134 ], [ 0, %113 ]\l  %119 = zext i32 %117 to i64\l  %120 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %119\l  %121 = load i32, i32 addrspace(1)* %120, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %122 = icmp slt i32 %33, %121\l  br i1 %122, label %123, label %134\l|{<s0>T|<s1>F}}"];
	Node0x457e750:s0 -> Node0x457ecd0;
	Node0x457e750:s1 -> Node0x457e850;
	Node0x457ecd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%123:\l123:                                              \l  %124 = mul nsw i32 %117, %3\l  %125 = add nsw i32 %124, %33\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %126\l  %128 = load i32, i32 addrspace(1)* %127, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %129 = add nsw i32 %128, -1\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %0, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !20\l  %133 = getelementptr inbounds float, float addrspace(1)* %1, i64 %126\l  store float %132, float addrspace(1)* %133, align 4, !tbaa !20\l  br label %134\l}"];
	Node0x457ecd0 -> Node0x457e850;
	Node0x457e850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%134:\l134:                                              \l  %135 = add nuw nsw i32 %117, 1\l  %136 = add i32 %118, 1\l  %137 = icmp eq i32 %136, %36\l  br i1 %137, label %138, label %116, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x457e850:s0 -> Node0x4579f30;
	Node0x457e850:s1 -> Node0x457e750;
	Node0x4579f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%138:\l138:                                              \l  ret void\l}"];
}
