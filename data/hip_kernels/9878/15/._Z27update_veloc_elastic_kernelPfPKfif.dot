digraph "CFG for '_Z27update_veloc_elastic_kernelPfPKfif' function" {
	label="CFG for '_Z27update_veloc_elastic_kernelPfPKfif' function";

	Node0x4cc0870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = udiv i32 %14, %11\l  %17 = mul i32 %16, %11\l  %18 = icmp ugt i32 %14, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %15\l  %22 = add i32 %21, %6\l  %23 = mul i32 %22, %11\l  %24 = add i32 %23, %5\l  %25 = icmp slt i32 %24, %2\l  br i1 %25, label %26, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4cc0870:s0 -> Node0x4cc30d0;
	Node0x4cc0870:s1 -> Node0x4cc3160;
	Node0x4cc30d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%26:\l26:                                               \l  %27 = sext i32 %24 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %32 = fmul contract float %31, %3\l  %33 = fadd contract float %29, %32\l  store float %33, float addrspace(1)* %28, align 4, !tbaa !16\l  %34 = add nsw i32 %24, %2\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16\l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  %40 = fmul contract float %39, %3\l  %41 = fadd contract float %37, %40\l  store float %41, float addrspace(1)* %36, align 4, !tbaa !16\l  %42 = shl nsw i32 %2, 1\l  %43 = add nsw i32 %24, %42\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !16\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !16\l  %49 = fmul contract float %48, %3\l  %50 = fadd contract float %46, %49\l  store float %50, float addrspace(1)* %45, align 4, !tbaa !16\l  br label %51\l}"];
	Node0x4cc30d0 -> Node0x4cc3160;
	Node0x4cc3160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  ret void\l}"];
}
