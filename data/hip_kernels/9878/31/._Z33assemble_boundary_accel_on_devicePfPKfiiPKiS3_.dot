digraph "CFG for '_Z33assemble_boundary_accel_on_devicePfPKfiiPKiS3_' function" {
	label="CFG for '_Z33assemble_boundary_accel_on_devicePfPKfiiPKiS3_' function";

	Node0x5d6adc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = udiv i32 %16, %13\l  %18 = mul i32 %17, %13\l  %19 = icmp ugt i32 %16, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %24 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !5, !invariant.load !6\l  %27 = zext i16 %26 to i32\l  %28 = mul i32 %23, %27\l  %29 = add i32 %28, %22\l  %30 = mul i32 %29, %21\l  %31 = add i32 %30, %8\l  %32 = mul i32 %31, %13\l  %33 = add i32 %32, %7\l  %34 = icmp sgt i32 %2, 0\l  br i1 %34, label %35, label %146\l|{<s0>T|<s1>F}}"];
	Node0x5d6adc0:s0 -> Node0x5d6ce40;
	Node0x5d6adc0:s1 -> Node0x5d6ef40;
	Node0x5d6ce40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%35:\l35:                                               \l  %36 = and i32 %2, 1\l  %37 = icmp eq i32 %2, 1\l  br i1 %37, label %111, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5d6ce40:s0 -> Node0x5d6f1a0;
	Node0x5d6ce40:s1 -> Node0x5d6f1f0;
	Node0x5d6f1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%38:\l38:                                               \l  %39 = and i32 %2, -2\l  br label %40\l}"];
	Node0x5d6f1f0 -> Node0x5d6f3f0;
	Node0x5d6f3f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ 0, %38 ], [ %108, %107 ]\l  %42 = phi i32 [ 0, %38 ], [ %109, %107 ]\l  %43 = zext i32 %41 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %43\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !16\l  %46 = icmp slt i32 %33, %45\l  br i1 %46, label %47, label %74\l|{<s0>T|<s1>F}}"];
	Node0x5d6f3f0:s0 -> Node0x5d6fac0;
	Node0x5d6f3f0:s1 -> Node0x5d6fb50;
	Node0x5d6fac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%47:\l47:                                               \l  %48 = mul nsw i32 %41, %3\l  %49 = add nsw i32 %48, %33\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !16\l  %53 = mul i32 %52, 3\l  %54 = add i32 %53, -3\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = mul nsw i32 %49, 3\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %1, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !20\l  %61 = atomicrmw fadd float addrspace(1)* %56, float %60\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %62 = getelementptr inbounds float, float addrspace(1)* %56, i64 1\l  %63 = add nsw i32 %57, 1\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !20\l  %67 = atomicrmw fadd float addrspace(1)* %62, float %66\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %68 = getelementptr inbounds float, float addrspace(1)* %56, i64 2\l  %69 = add nsw i32 %57, 2\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %1, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !20\l  %73 = atomicrmw fadd float addrspace(1)* %68, float %72\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %74\l}"];
	Node0x5d6fac0 -> Node0x5d6fb50;
	Node0x5d6fb50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = or i32 %41, 1\l  %76 = zext i32 %75 to i64\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %76\l  %78 = load i32, i32 addrspace(1)* %77, align 4, !tbaa !16\l  %79 = icmp slt i32 %33, %78\l  br i1 %79, label %80, label %107\l|{<s0>T|<s1>F}}"];
	Node0x5d6fb50:s0 -> Node0x5d71df0;
	Node0x5d6fb50:s1 -> Node0x5d6f4e0;
	Node0x5d71df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%80:\l80:                                               \l  %81 = mul nsw i32 %75, %3\l  %82 = add nsw i32 %81, %33\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !16\l  %86 = mul i32 %85, 3\l  %87 = add i32 %86, -3\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88\l  %90 = mul nsw i32 %82, 3\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %1, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !20\l  %94 = atomicrmw fadd float addrspace(1)* %89, float %93\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %95 = getelementptr inbounds float, float addrspace(1)* %89, i64 1\l  %96 = add nsw i32 %90, 1\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %1, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !20\l  %100 = atomicrmw fadd float addrspace(1)* %95, float %99\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %101 = getelementptr inbounds float, float addrspace(1)* %89, i64 2\l  %102 = add nsw i32 %90, 2\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %1, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !20\l  %106 = atomicrmw fadd float addrspace(1)* %101, float %105\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %107\l}"];
	Node0x5d71df0 -> Node0x5d6f4e0;
	Node0x5d6f4e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  %108 = add nuw nsw i32 %41, 2\l  %109 = add i32 %42, 2\l  %110 = icmp eq i32 %109, %39\l  br i1 %110, label %111, label %40, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5d6f4e0:s0 -> Node0x5d6f1a0;
	Node0x5d6f4e0:s1 -> Node0x5d6f3f0;
	Node0x5d6f1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%111:\l111:                                              \l  %112 = phi i32 [ 0, %35 ], [ %108, %107 ]\l  %113 = icmp eq i32 %36, 0\l  br i1 %113, label %146, label %114\l|{<s0>T|<s1>F}}"];
	Node0x5d6f1a0:s0 -> Node0x5d6ef40;
	Node0x5d6f1a0:s1 -> Node0x5d73170;
	Node0x5d73170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%114:\l114:                                              \l  %115 = zext i32 %112 to i64\l  %116 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %115\l  %117 = load i32, i32 addrspace(1)* %116, align 4, !tbaa !16\l  %118 = icmp slt i32 %33, %117\l  br i1 %118, label %119, label %146\l|{<s0>T|<s1>F}}"];
	Node0x5d73170:s0 -> Node0x5d73480;
	Node0x5d73170:s1 -> Node0x5d6ef40;
	Node0x5d73480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%119:\l119:                                              \l  %120 = mul nsw i32 %112, %3\l  %121 = add nsw i32 %120, %33\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %122\l  %124 = load i32, i32 addrspace(1)* %123, align 4, !tbaa !16\l  %125 = mul i32 %124, 3\l  %126 = add i32 %125, -3\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds float, float addrspace(1)* %0, i64 %127\l  %129 = mul nsw i32 %121, 3\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %1, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !20\l  %133 = atomicrmw fadd float addrspace(1)* %128, float %132\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %134 = getelementptr inbounds float, float addrspace(1)* %128, i64 1\l  %135 = add nsw i32 %129, 1\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %1, i64 %136\l  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !20\l  %139 = atomicrmw fadd float addrspace(1)* %134, float %138\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %140 = getelementptr inbounds float, float addrspace(1)* %128, i64 2\l  %141 = add nsw i32 %129, 2\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %1, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !20\l  %145 = atomicrmw fadd float addrspace(1)* %140, float %144\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %146\l}"];
	Node0x5d73480 -> Node0x5d6ef40;
	Node0x5d6ef40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%146:\l146:                                              \l  ret void\l}"];
}
