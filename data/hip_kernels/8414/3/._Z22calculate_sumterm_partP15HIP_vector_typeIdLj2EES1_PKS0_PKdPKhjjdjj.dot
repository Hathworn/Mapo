digraph "CFG for '_Z22calculate_sumterm_partP15HIP_vector_typeIdLj2EES1_PKS0_PKdPKhjjdjj' function" {
	label="CFG for '_Z22calculate_sumterm_partP15HIP_vector_typeIdLj2EES1_PKS0_PKdPKhjjdjj' function";

	Node0x539b4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %12, %17\l  %19 = add i32 %18, %11\l  %20 = freeze i32 %19\l  %21 = mul i32 %6, %5\l  %22 = icmp ult i32 %20, %21\l  %23 = icmp ne i32 %8, 0\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %128\l|{<s0>T|<s1>F}}"];
	Node0x539b4e0:s0 -> Node0x539e210;
	Node0x539b4e0:s1 -> Node0x539e2a0;
	Node0x539e210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %126, %25 ], [ 0, %10 ]\l  %27 = shl nsw i32 %26, 2\l  %28 = zext i32 %27 to i64\l  %29 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %28\l  %30 = load i8, i8 addrspace(1)* %29, align 1, !tbaa !7\l  %31 = zext i8 %30 to i32\l  %32 = add nsw i32 %31, -1\l  %33 = add nuw nsw i32 %27, 1\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %34\l  %36 = load i8, i8 addrspace(1)* %35, align 1, !tbaa !7\l  %37 = zext i8 %36 to i32\l  %38 = add nsw i32 %37, -1\l  %39 = add nuw nsw i32 %27, 2\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %40\l  %42 = load i8, i8 addrspace(1)* %41, align 1, !tbaa !7\l  %43 = zext i8 %42 to i32\l  %44 = add nsw i32 %43, -1\l  %45 = add nuw nsw i32 %27, 3\l  %46 = zext i32 %45 to i64\l  %47 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %46\l  %48 = load i8, i8 addrspace(1)* %47, align 1, !tbaa !7\l  %49 = zext i8 %48 to i32\l  %50 = add nsw i32 %49, -1\l  %51 = mul i32 %38, %21\l  %52 = add i32 %51, %20\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %53, i32 0, i32 0, i32 0, i64 0\l  %55 = load double, double addrspace(1)* %54, align 16, !tbaa !7\l  %56 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %53, i32 0, i32 0, i32 0, i64 1\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !7\l  %58 = mul i32 %44, %21\l  %59 = add i32 %58, %20\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %60, i32 0, i32 0, i32 0, i64 0\l  %62 = load double, double addrspace(1)* %61, align 16, !tbaa !7\l  %63 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %60, i32 0, i32 0, i32 0, i64 1\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !7\l  %65 = mul i32 %50, %21\l  %66 = add i32 %65, %20\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %67, i32 0, i32 0, i32 0, i64 0\l  %69 = load double, double addrspace(1)* %68, align 16, !tbaa !7\l  %70 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %67, i32 0, i32 0, i32 0, i64 1\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !7\l  %72 = mul i32 %32, %21\l  %73 = add i32 %72, %20\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %74, i32 0, i32 0, i32 0, i64 0\l  %76 = load double, double addrspace(1)* %75, align 16, !tbaa !7\l  %77 = zext i32 %26 to i64\l  %78 = getelementptr inbounds double, double addrspace(1)* %3, i64 %77\l  %79 = load double, double addrspace(1)* %78, align 8, !tbaa !10\l  %80 = fmul contract double %79, %7\l  %81 = fmul contract double %55, %62\l  %82 = fmul contract double %81, %69\l  %83 = fmul contract double %57, %64\l  %84 = fmul contract double %83, %69\l  %85 = fsub contract double %82, %84\l  %86 = fmul contract double %55, %64\l  %87 = fmul contract double %86, %71\l  %88 = fadd contract double %85, %87\l  %89 = fmul contract double %57, %62\l  %90 = fmul contract double %89, %71\l  %91 = fadd contract double %90, %88\l  %92 = fmul contract double %80, %91\l  %93 = fadd contract double %76, %92\l  store double %93, double addrspace(1)* %75, align 16, !tbaa !7\l  %94 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %74, i32 0, i32 0, i32 0, i64 1\l  %95 = load double, double addrspace(1)* %94, align 8, !tbaa !7\l  %96 = load double, double addrspace(1)* %78, align 8, !tbaa !10\l  %97 = fmul contract double %96, %7\l  %98 = fmul contract double %86, %69\l  %99 = fmul contract double %89, %69\l  %100 = fadd contract double %98, %99\l  %101 = fmul contract double %81, %71\l  %102 = fsub contract double %100, %101\l  %103 = fmul contract double %83, %71\l  %104 = fadd contract double %103, %102\l  %105 = fmul contract double %104, %97\l  %106 = fadd contract double %95, %105\l  store double %106, double addrspace(1)* %94, align 8, !tbaa !7\l  %107 = mul i32 %51, %9\l  %108 = add i32 %107, %73\l  %109 = zext i32 %108 to i64\l  %110 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %109, i32 0, i32 0, i32 0, i64 0\l  %111 = load double, double addrspace(1)* %110, align 16, !tbaa !7\l  %112 = load double, double addrspace(1)* %78, align 8, !tbaa !10\l  %113 = fmul contract double %62, %69\l  %114 = fmul contract double %64, %71\l  %115 = fadd contract double %113, %114\l  %116 = fmul contract double %115, %112\l  %117 = fadd contract double %111, %116\l  store double %117, double addrspace(1)* %110, align 16, !tbaa !7\l  %118 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %109, i32 0, i32 0, i32 0, i64 1\l  %119 = load double, double addrspace(1)* %118, align 8, !tbaa !7\l  %120 = load double, double addrspace(1)* %78, align 8, !tbaa !10\l  %121 = fmul contract double %64, %69\l  %122 = fmul contract double %62, %71\l  %123 = fsub contract double %121, %122\l  %124 = fmul contract double %123, %120\l  %125 = fadd contract double %119, %124\l  store double %125, double addrspace(1)* %118, align 8, !tbaa !7\l  %126 = add nuw nsw i32 %26, 1\l  %127 = icmp eq i32 %126, %8\l  br i1 %127, label %128, label %25, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x539e210:s0 -> Node0x539e2a0;
	Node0x539e210:s1 -> Node0x539e210;
	Node0x539e2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%128:\l128:                                              \l  ret void\l}"];
}
