digraph "CFG for '_Z17calculate_tensorsPfPKfS1_ii' function" {
	label="CFG for '_Z17calculate_tensorsPfPKfS1_ii' function";

	Node0x565c0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = add i32 %13, %6\l  %15 = mul i32 %3, %3\l  %16 = mul i32 %15, %15\l  %17 = mul nsw i32 %4, %3\l  %18 = icmp ult i32 %14, %16\l  br i1 %18, label %19, label %197\l|{<s0>T|<s1>F}}"];
	Node0x565c0d0:s0 -> Node0x565e1d0;
	Node0x565c0d0:s1 -> Node0x565e260;
	Node0x565e1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%19:\l19:                                               \l  %20 = freeze i32 %14\l  %21 = freeze i32 %3\l  %22 = udiv i32 %20, %21\l  %23 = mul i32 %22, %21\l  %24 = sub i32 %20, %23\l  %25 = freeze i32 %3\l  %26 = udiv i32 %22, %25\l  %27 = mul i32 %26, %25\l  %28 = sub i32 %22, %27\l  %29 = freeze i32 %3\l  %30 = udiv i32 %26, %29\l  %31 = mul i32 %30, %29\l  %32 = sub i32 %26, %31\l  %33 = icmp sgt i32 %4, 0\l  %34 = zext i32 %14 to i64\l  br i1 %33, label %35, label %45\l|{<s0>T|<s1>F}}"];
	Node0x565e1d0:s0 -> Node0x565ec80;
	Node0x565e1d0:s1 -> Node0x565ecd0;
	Node0x565ec80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%35:\l35:                                               \l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %37 = and i32 %4, 3\l  %38 = icmp ult i32 %4, 4\l  %39 = and i32 %4, -4\l  %40 = icmp eq i32 %37, 0\l  br label %41\l}"];
	Node0x565ec80 -> Node0x565f180;
	Node0x565f180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = phi i32 [ 0, %35 ], [ %97, %96 ]\l  %43 = mul nsw i32 %42, %3\l  %44 = load float, float addrspace(1)* %36, align 4, !tbaa !7\l  br i1 %38, label %64, label %99\l|{<s0>T|<s1>F}}"];
	Node0x565f180:s0 -> Node0x565f620;
	Node0x565f180:s1 -> Node0x565f6b0;
	Node0x565ecd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%45:\l45:                                               \l  %46 = zext i32 %24 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %2, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !7\l  %49 = zext i32 %28 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %2, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7\l  %52 = fmul contract float %48, %51\l  %53 = zext i32 %32 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %2, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %56 = fmul contract float %52, %55\l  %57 = zext i32 %30 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %2, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = fmul contract float %56, %59\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %63 = fdiv contract float %62, %60\l  store float %63, float addrspace(1)* %61, align 4, !tbaa !7\l  br label %197\l}"];
	Node0x565ecd0 -> Node0x565e260;
	Node0x565f620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%64:\l64:                                               \l  %65 = phi float [ %44, %41 ], [ %193, %99 ]\l  %66 = phi i32 [ 0, %41 ], [ %194, %99 ]\l  br i1 %40, label %96, label %67\l|{<s0>T|<s1>F}}"];
	Node0x565f620:s0 -> Node0x565f270;
	Node0x565f620:s1 -> Node0x565ec00;
	Node0x565ec00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi float [ %92, %67 ], [ %65, %64 ]\l  %69 = phi i32 [ %93, %67 ], [ %66, %64 ]\l  %70 = phi i32 [ %94, %67 ], [ 0, %64 ]\l  %71 = mul i32 %17, %69\l  %72 = add i32 %71, %43\l  %73 = add i32 %72, %24\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7\l  %77 = add i32 %72, %28\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %1, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7\l  %81 = fmul contract float %76, %80\l  %82 = add i32 %72, %32\l  %83 = zext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %1, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !7\l  %86 = fmul contract float %81, %85\l  %87 = add i32 %72, %30\l  %88 = zext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %1, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !7\l  %91 = fmul contract float %86, %90\l  %92 = fadd contract float %68, %91\l  store float %92, float addrspace(1)* %36, align 4, !tbaa !7\l  %93 = add nuw nsw i32 %69, 1\l  %94 = add i32 %70, 1\l  %95 = icmp eq i32 %94, %37\l  br i1 %95, label %96, label %67, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x565ec00:s0 -> Node0x565f270;
	Node0x565ec00:s1 -> Node0x565ec00;
	Node0x565f270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%96:\l96:                                               \l  %97 = add nuw nsw i32 %42, 1\l  %98 = icmp eq i32 %97, %4\l  br i1 %98, label %45, label %41, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x565f270:s0 -> Node0x565ecd0;
	Node0x565f270:s1 -> Node0x565f180;
	Node0x565f6b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%99:\l99:                                               \l  %100 = phi float [ %193, %99 ], [ %44, %41 ]\l  %101 = phi i32 [ %194, %99 ], [ 0, %41 ]\l  %102 = phi i32 [ %195, %99 ], [ 0, %41 ]\l  %103 = mul i32 %17, %101\l  %104 = add i32 %103, %43\l  %105 = add i32 %104, %24\l  %106 = zext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %1, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7\l  %109 = add i32 %104, %28\l  %110 = zext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %1, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !7\l  %113 = fmul contract float %108, %112\l  %114 = add i32 %104, %32\l  %115 = zext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %1, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !7\l  %118 = fmul contract float %113, %117\l  %119 = add i32 %104, %30\l  %120 = zext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %1, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7\l  %123 = fmul contract float %118, %122\l  %124 = fadd contract float %100, %123\l  store float %124, float addrspace(1)* %36, align 4, !tbaa !7\l  %125 = or i32 %101, 1\l  %126 = mul i32 %17, %125\l  %127 = add i32 %126, %43\l  %128 = add i32 %127, %24\l  %129 = zext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %1, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !7\l  %132 = add i32 %127, %28\l  %133 = zext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %1, i64 %133\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !7\l  %136 = fmul contract float %131, %135\l  %137 = add i32 %127, %32\l  %138 = zext i32 %137 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %1, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !7\l  %141 = fmul contract float %136, %140\l  %142 = add i32 %127, %30\l  %143 = zext i32 %142 to i64\l  %144 = getelementptr inbounds float, float addrspace(1)* %1, i64 %143\l  %145 = load float, float addrspace(1)* %144, align 4, !tbaa !7\l  %146 = fmul contract float %141, %145\l  %147 = fadd contract float %124, %146\l  store float %147, float addrspace(1)* %36, align 4, !tbaa !7\l  %148 = or i32 %101, 2\l  %149 = mul i32 %17, %148\l  %150 = add i32 %149, %43\l  %151 = add i32 %150, %24\l  %152 = zext i32 %151 to i64\l  %153 = getelementptr inbounds float, float addrspace(1)* %1, i64 %152\l  %154 = load float, float addrspace(1)* %153, align 4, !tbaa !7\l  %155 = add i32 %150, %28\l  %156 = zext i32 %155 to i64\l  %157 = getelementptr inbounds float, float addrspace(1)* %1, i64 %156\l  %158 = load float, float addrspace(1)* %157, align 4, !tbaa !7\l  %159 = fmul contract float %154, %158\l  %160 = add i32 %150, %32\l  %161 = zext i32 %160 to i64\l  %162 = getelementptr inbounds float, float addrspace(1)* %1, i64 %161\l  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !7\l  %164 = fmul contract float %159, %163\l  %165 = add i32 %150, %30\l  %166 = zext i32 %165 to i64\l  %167 = getelementptr inbounds float, float addrspace(1)* %1, i64 %166\l  %168 = load float, float addrspace(1)* %167, align 4, !tbaa !7\l  %169 = fmul contract float %164, %168\l  %170 = fadd contract float %147, %169\l  store float %170, float addrspace(1)* %36, align 4, !tbaa !7\l  %171 = or i32 %101, 3\l  %172 = mul i32 %17, %171\l  %173 = add i32 %172, %43\l  %174 = add i32 %173, %24\l  %175 = zext i32 %174 to i64\l  %176 = getelementptr inbounds float, float addrspace(1)* %1, i64 %175\l  %177 = load float, float addrspace(1)* %176, align 4, !tbaa !7\l  %178 = add i32 %173, %28\l  %179 = zext i32 %178 to i64\l  %180 = getelementptr inbounds float, float addrspace(1)* %1, i64 %179\l  %181 = load float, float addrspace(1)* %180, align 4, !tbaa !7\l  %182 = fmul contract float %177, %181\l  %183 = add i32 %173, %32\l  %184 = zext i32 %183 to i64\l  %185 = getelementptr inbounds float, float addrspace(1)* %1, i64 %184\l  %186 = load float, float addrspace(1)* %185, align 4, !tbaa !7\l  %187 = fmul contract float %182, %186\l  %188 = add i32 %173, %30\l  %189 = zext i32 %188 to i64\l  %190 = getelementptr inbounds float, float addrspace(1)* %1, i64 %189\l  %191 = load float, float addrspace(1)* %190, align 4, !tbaa !7\l  %192 = fmul contract float %187, %191\l  %193 = fadd contract float %170, %192\l  store float %193, float addrspace(1)* %36, align 4, !tbaa !7\l  %194 = add nuw nsw i32 %101, 4\l  %195 = add i32 %102, 4\l  %196 = icmp eq i32 %195, %39\l  br i1 %196, label %64, label %99, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x565f6b0:s0 -> Node0x565f620;
	Node0x565f6b0:s1 -> Node0x565f6b0;
	Node0x565e260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%197:\l197:                                              \l  ret void\l}"];
}
