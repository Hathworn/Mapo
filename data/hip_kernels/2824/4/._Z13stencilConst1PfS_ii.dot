digraph "CFG for '_Z13stencilConst1PfS_ii' function" {
	label="CFG for '_Z13stencilConst1PfS_ii' function";

	Node0x5ca3bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add nuw nsw i32 %12, 1\l  %14 = add i32 %13, %3\l  %15 = add i32 %14, %11\l  %16 = icmp slt i32 %15, %2\l  br i1 %16, label %17, label %147\l|{<s0>T|<s1>F}}"];
	Node0x5ca3bf0:s0 -> Node0x5ca4190;
	Node0x5ca3bf0:s1 -> Node0x5ca5720;
	Node0x5ca4190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%17:\l17:                                               \l  %18 = sub nsw i32 0, %3\l  %19 = icmp sgt i32 %3, 0\l  br i1 %19, label %20, label %51\l|{<s0>T|<s1>F}}"];
	Node0x5ca4190:s0 -> Node0x5ca5980;
	Node0x5ca4190:s1 -> Node0x5ca59d0;
	Node0x5ca5980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%20:\l20:                                               \l  %21 = sub nsw i32 1, %3\l  %22 = tail call i32 @llvm.smax.i32(i32 %3, i32 %21)\l  %23 = add nuw i32 %22, %3\l  %24 = add i32 %23, -1\l  %25 = and i32 %23, 7\l  %26 = icmp eq i32 %25, 0\l  br i1 %26, label %46, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5ca5980:s0 -> Node0x5ca6010;
	Node0x5ca5980:s1 -> Node0x5ca60a0;
	Node0x5ca60a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %41, %27 ], [ %18, %20 ]\l  %29 = phi float [ %40, %27 ], [ 0.000000e+00, %20 ]\l  %30 = phi i32 [ %42, %27 ], [ 0, %20 ]\l  %31 = add nsw i32 %28, %15\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %35 = add nsw i32 %28, %3\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds [10000 x float], [10000 x float] addrspace(4)*\l... @const_stencilWeight, i64 0, i64 %36\l  %38 = load float, float addrspace(4)* %37, align 4, !tbaa !7\l  %39 = fmul contract float %34, %38\l  %40 = fadd contract float %29, %39\l  %41 = add nsw i32 %28, 1\l  %42 = add nuw nsw i32 %30, 1\l  %43 = icmp eq i32 %42, %25\l  br i1 %43, label %44, label %27, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5ca60a0:s0 -> Node0x5ca85f0;
	Node0x5ca60a0:s1 -> Node0x5ca60a0;
	Node0x5ca85f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%44:\l44:                                               \l  %45 = sub i32 %25, %3\l  br label %46\l}"];
	Node0x5ca85f0 -> Node0x5ca6010;
	Node0x5ca6010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%46:\l46:                                               \l  %47 = phi i32 [ %18, %20 ], [ %45, %44 ]\l  %48 = phi float [ 0.000000e+00, %20 ], [ %40, %44 ]\l  %49 = phi float [ undef, %20 ], [ %40, %44 ]\l  %50 = icmp ult i32 %24, 7\l  br i1 %50, label %51, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5ca6010:s0 -> Node0x5ca59d0;
	Node0x5ca6010:s1 -> Node0x5ca8ed0;
	Node0x5ca59d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%51:\l51:                                               \l  %52 = phi float [ 0.000000e+00, %17 ], [ %49, %46 ], [ %144, %55 ]\l  %53 = sext i32 %15 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  store float %52, float addrspace(1)* %54, align 4, !tbaa !7\l  br label %147\l}"];
	Node0x5ca59d0 -> Node0x5ca5720;
	Node0x5ca8ed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%55:\l55:                                               \l  %56 = phi i32 [ %145, %55 ], [ %47, %46 ]\l  %57 = phi float [ %144, %55 ], [ %48, %46 ]\l  %58 = add nsw i32 %56, %15\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %62 = add nsw i32 %56, %3\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds [10000 x float], [10000 x float] addrspace(4)*\l... @const_stencilWeight, i64 0, i64 %63\l  %65 = load float, float addrspace(4)* %64, align 4, !tbaa !7\l  %66 = fmul contract float %61, %65\l  %67 = fadd contract float %57, %66\l  %68 = add nsw i32 %56, 1\l  %69 = add nsw i32 %68, %15\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %73 = add nsw i32 %68, %3\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds [10000 x float], [10000 x float] addrspace(4)*\l... @const_stencilWeight, i64 0, i64 %74\l  %76 = load float, float addrspace(4)* %75, align 4, !tbaa !7\l  %77 = fmul contract float %72, %76\l  %78 = fadd contract float %67, %77\l  %79 = add nsw i32 %56, 2\l  %80 = add nsw i32 %79, %15\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %84 = add nsw i32 %79, %3\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds [10000 x float], [10000 x float] addrspace(4)*\l... @const_stencilWeight, i64 0, i64 %85\l  %87 = load float, float addrspace(4)* %86, align 4, !tbaa !7\l  %88 = fmul contract float %83, %87\l  %89 = fadd contract float %78, %88\l  %90 = add nsw i32 %56, 3\l  %91 = add nsw i32 %90, %15\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %0, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %95 = add nsw i32 %90, %3\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds [10000 x float], [10000 x float] addrspace(4)*\l... @const_stencilWeight, i64 0, i64 %96\l  %98 = load float, float addrspace(4)* %97, align 4, !tbaa !7\l  %99 = fmul contract float %94, %98\l  %100 = fadd contract float %89, %99\l  %101 = add nsw i32 %56, 4\l  %102 = add nsw i32 %101, %15\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %0, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %106 = add nsw i32 %101, %3\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds [10000 x float], [10000 x float] addrspace(4)*\l... @const_stencilWeight, i64 0, i64 %107\l  %109 = load float, float addrspace(4)* %108, align 4, !tbaa !7\l  %110 = fmul contract float %105, %109\l  %111 = fadd contract float %100, %110\l  %112 = add nsw i32 %56, 5\l  %113 = add nsw i32 %112, %15\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %117 = add nsw i32 %112, %3\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds [10000 x float], [10000 x float] addrspace(4)*\l... @const_stencilWeight, i64 0, i64 %118\l  %120 = load float, float addrspace(4)* %119, align 4, !tbaa !7\l  %121 = fmul contract float %116, %120\l  %122 = fadd contract float %111, %121\l  %123 = add nsw i32 %56, 6\l  %124 = add nsw i32 %123, %15\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %0, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %128 = add nsw i32 %123, %3\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds [10000 x float], [10000 x float] addrspace(4)*\l... @const_stencilWeight, i64 0, i64 %129\l  %131 = load float, float addrspace(4)* %130, align 4, !tbaa !7\l  %132 = fmul contract float %127, %131\l  %133 = fadd contract float %122, %132\l  %134 = add nsw i32 %56, 7\l  %135 = add nsw i32 %134, %15\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %0, i64 %136\l  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %139 = add nsw i32 %134, %3\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds [10000 x float], [10000 x float] addrspace(4)*\l... @const_stencilWeight, i64 0, i64 %140\l  %142 = load float, float addrspace(4)* %141, align 4, !tbaa !7\l  %143 = fmul contract float %138, %142\l  %144 = fadd contract float %133, %143\l  %145 = add nsw i32 %56, 8\l  %146 = icmp slt i32 %145, %3\l  br i1 %146, label %55, label %51, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5ca8ed0:s0 -> Node0x5ca8ed0;
	Node0x5ca8ed0:s1 -> Node0x5ca59d0;
	Node0x5ca5720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%147:\l147:                                              \l  ret void\l}"];
}
