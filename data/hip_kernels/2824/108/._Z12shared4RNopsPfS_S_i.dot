digraph "CFG for '_Z12shared4RNopsPfS_S_i' function" {
	label="CFG for '_Z12shared4RNopsPfS_S_i' function";

	Node0x4c83a10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %3\l  br i1 %14, label %15, label %20\l|{<s0>T|<s1>F}}"];
	Node0x4c83a10:s0 -> Node0x4c85920;
	Node0x4c83a10:s1 -> Node0x4c859b0;
	Node0x4c85920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %0, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %19 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ12shared4RNopsPfS_S_iE4Smem, i32 0, i32 %12\l  store float %18, float addrspace(3)* %19, align 4, !tbaa !7\l  br label %20\l}"];
	Node0x4c85920 -> Node0x4c859b0;
	Node0x4c859b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %14, label %21, label %87\l|{<s0>T|<s1>F}}"];
	Node0x4c859b0:s0 -> Node0x4c86f80;
	Node0x4c859b0:s1 -> Node0x4c86fd0;
	Node0x4c86f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%21:\l21:                                               \l  %22 = sext i32 %13 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %0, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %25 = fmul contract float %24, 2.500000e-01\l  %26 = getelementptr inbounds float, float addrspace(1)* %1, i64 %22\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %28 = fmul contract float %27, 1.500000e+01\l  %29 = fadd contract float %25, %28\l  %30 = fpext float %29 to double\l  %31 = fpext float %24 to double\l  %32 = fdiv contract double %31, 7.000000e+00\l  %33 = fmul contract double %32, %31\l  %34 = fsub contract double %30, %33\l  %35 = fmul contract float %27, 4.000000e+00\l  %36 = fpext float %35 to double\l  %37 = fadd contract double %34, %36\l  %38 = fmul contract float %24, 7.000000e+00\l  %39 = fmul contract float %24, %38\l  %40 = fpext float %39 to double\l  %41 = fadd contract double %37, %40\l  %42 = fmul contract float %24, %27\l  %43 = fmul contract float %42, 7.000000e+00\l  %44 = fpext float %43 to double\l  %45 = fadd contract double %41, %44\l  %46 = fptrunc double %45 to float\l  %47 = fdiv contract float %24, 3.000000e+00\l  %48 = fmul contract float %27, 1.700000e+01\l  %49 = fadd contract float %47, %48\l  %50 = fmul contract float %24, %24\l  %51 = fsub contract float %49, %50\l  %52 = fmul contract float %27, 3.000000e+00\l  %53 = fadd contract float %52, %51\l  %54 = fmul contract float %24, 4.000000e+00\l  %55 = fmul contract float %54, %46\l  %56 = fsub contract float %53, %55\l  %57 = fmul contract float %27, %46\l  %58 = fmul contract float %57, 7.000000e+00\l  %59 = fadd contract float %56, %58\l  %60 = fadd contract float %59, %46\l  %61 = fadd contract float %60, -8.000000e+00\l  %62 = add nuw nsw i32 %12, 1\l  %63 = and i32 %62, 511\l  %64 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ12shared4RNopsPfS_S_iE4Smem, i32 0, i32 %63\l  %65 = load float, float addrspace(3)* %64, align 4, !tbaa !7\l  %66 = fmul contract float %24, %65\l  %67 = fadd contract float %66, %61\l  %68 = add nuw nsw i32 %12, 2\l  %69 = and i32 %68, 511\l  %70 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ12shared4RNopsPfS_S_iE4Smem, i32 0, i32 %69\l  %71 = load float, float addrspace(3)* %70, align 4, !tbaa !7\l  %72 = fmul contract float %71, 4.000000e+00\l  %73 = fadd contract float %72, %67\l  %74 = add nuw nsw i32 %12, 3\l  %75 = and i32 %74, 511\l  %76 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ12shared4RNopsPfS_S_iE4Smem, i32 0, i32 %75\l  %77 = load float, float addrspace(3)* %76, align 4, !tbaa !7\l  %78 = fmul contract float %52, %77\l  %79 = fadd contract float %78, %73\l  %80 = add nuw nsw i32 %12, 4\l  %81 = and i32 %80, 511\l  %82 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ12shared4RNopsPfS_S_iE4Smem, i32 0, i32 %81\l  %83 = load float, float addrspace(3)* %82, align 4, !tbaa !7\l  %84 = fmul contract float %24, %83\l  %85 = fadd contract float %84, %79\l  %86 = getelementptr inbounds float, float addrspace(1)* %2, i64 %22\l  store float %85, float addrspace(1)* %86, align 4, !tbaa !7\l  br label %87\l}"];
	Node0x4c86f80 -> Node0x4c86fd0;
	Node0x4c86fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  ret void\l}"];
}
