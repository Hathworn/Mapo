digraph "CFG for '_Z13shared4R40opsPfS_S_i' function" {
	label="CFG for '_Z13shared4R40opsPfS_S_i' function";

	Node0x62bf930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %3\l  br i1 %14, label %15, label %20\l|{<s0>T|<s1>F}}"];
	Node0x62bf930:s0 -> Node0x62c1840;
	Node0x62bf930:s1 -> Node0x62c18d0;
	Node0x62c1840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %0, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %19 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ13shared4R40opsPfS_S_iE4Smem, i32 0, i32 %12\l  store float %18, float addrspace(3)* %19, align 4, !tbaa !7\l  br label %20\l}"];
	Node0x62c1840 -> Node0x62c18d0;
	Node0x62c18d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %14, label %21, label %80\l|{<s0>T|<s1>F}}"];
	Node0x62c18d0:s0 -> Node0x62c2ec0;
	Node0x62c18d0:s1 -> Node0x62c2f10;
	Node0x62c2ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%21:\l21:                                               \l  %22 = sext i32 %13 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %1, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %25 = fpext float %24 to double\l  %26 = fmul contract double %25, 2.500000e-01\l  %27 = fadd contract double %26, 0x3FB00D78C2ADE4ED\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %22\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %30 = fmul contract float %24, %29\l  %31 = fpext float %30 to double\l  %32 = fdiv contract double %31, 3.000000e+00\l  %33 = fadd contract double %27, %32\l  %34 = fpext float %29 to double\l  %35 = fmul contract double %34, 0x3FB9AF8877430B80\l  %36 = fadd contract double %35, %33\l  %37 = fmul contract double %25, 0x3FE17B4F5BF3474A\l  %38 = fadd contract double %37, %36\l  %39 = fptrunc double %38 to float\l  %40 = fdiv contract float %29, 3.000000e+00\l  %41 = fmul contract float %24, 1.700000e+01\l  %42 = fadd contract float %41, %40\l  %43 = fmul contract float %29, %29\l  %44 = fsub contract float %42, %43\l  %45 = fmul contract float %24, 3.000000e+00\l  %46 = fadd contract float %45, %44\l  %47 = fmul contract float %29, 4.000000e+00\l  %48 = fmul contract float %24, %47\l  %49 = fsub contract float %46, %48\l  %50 = fmul contract float %24, %24\l  %51 = fmul contract float %50, 7.000000e+00\l  %52 = fadd contract float %51, %49\l  %53 = fadd contract float %52, %39\l  %54 = fadd contract float %53, -8.000000e+00\l  %55 = add nuw nsw i32 %12, 1\l  %56 = and i32 %55, 511\l  %57 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ13shared4R40opsPfS_S_iE4Smem, i32 0, i32 %56\l  %58 = load float, float addrspace(3)* %57, align 4, !tbaa !7\l  %59 = fmul contract float %29, %58\l  %60 = fadd contract float %59, %54\l  %61 = add nuw nsw i32 %12, 2\l  %62 = and i32 %61, 511\l  %63 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ13shared4R40opsPfS_S_iE4Smem, i32 0, i32 %62\l  %64 = load float, float addrspace(3)* %63, align 4, !tbaa !7\l  %65 = fmul contract float %64, 4.000000e+00\l  %66 = fadd contract float %65, %60\l  %67 = add nuw nsw i32 %12, 3\l  %68 = and i32 %67, 511\l  %69 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ13shared4R40opsPfS_S_iE4Smem, i32 0, i32 %68\l  %70 = load float, float addrspace(3)* %69, align 4, !tbaa !7\l  %71 = fmul contract float %45, %70\l  %72 = fadd contract float %71, %66\l  %73 = add nuw nsw i32 %12, 4\l  %74 = and i32 %73, 511\l  %75 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ13shared4R40opsPfS_S_iE4Smem, i32 0, i32 %74\l  %76 = load float, float addrspace(3)* %75, align 4, !tbaa !7\l  %77 = fmul contract float %29, %76\l  %78 = fadd contract float %77, %72\l  %79 = getelementptr inbounds float, float addrspace(1)* %2, i64 %22\l  store float %78, float addrspace(1)* %79, align 4, !tbaa !7\l  br label %80\l}"];
	Node0x62c2ec0 -> Node0x62c2f10;
	Node0x62c2f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  ret void\l}"];
}
