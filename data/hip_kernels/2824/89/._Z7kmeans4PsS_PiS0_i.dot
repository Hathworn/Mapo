digraph "CFG for '_Z7kmeans4PsS_PiS0_i' function" {
	label="CFG for '_Z7kmeans4PsS_PiS0_i' function";

	Node0x581e780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = shl i32 %14, 2\l  %16 = icmp slt i32 %15, %4\l  br i1 %16, label %17, label %134\l|{<s0>T|<s1>F}}"];
	Node0x581e780:s0 -> Node0x581f270;
	Node0x581e780:s1 -> Node0x58207e0;
	Node0x581f270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%17:\l17:                                               \l  %18 = sext i32 %15 to i64\l  %19 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %18\l  %20 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 4\l  %21 = load i16, i16 addrspace(1)* %20, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %22 = sext i16 %21 to i32\l  %23 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 5\l  %24 = load i16, i16 addrspace(1)* %23, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %25 = sext i16 %24 to i32\l  %26 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 6\l  %27 = load i16, i16 addrspace(1)* %26, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %28 = sext i16 %27 to i32\l  %29 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 7\l  %30 = load i16, i16 addrspace(1)* %29, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %31 = sext i16 %30 to i32\l  %32 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 8\l  %33 = load i16, i16 addrspace(1)* %32, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %34 = sext i16 %33 to i32\l  %35 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 9\l  %36 = load i16, i16 addrspace(1)* %35, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %37 = sext i16 %36 to i32\l  %38 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 10\l  %39 = load i16, i16 addrspace(1)* %38, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %40 = sext i16 %39 to i32\l  %41 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 11\l  %42 = load i16, i16 addrspace(1)* %41, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %43 = sext i16 %42 to i32\l  %44 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 12\l  %45 = load i16, i16 addrspace(1)* %44, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %46 = sext i16 %45 to i32\l  %47 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 13\l  %48 = load i16, i16 addrspace(1)* %47, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %49 = sext i16 %48 to i32\l  %50 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 14\l  %51 = load i16, i16 addrspace(1)* %50, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %52 = sext i16 %51 to i32\l  %53 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 15\l  %54 = load i16, i16 addrspace(1)* %53, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %55 = sext i16 %54 to i32\l  %56 = bitcast i16 addrspace(1)* %19 to \<4 x i16\> addrspace(1)*\l  %57 = load \<4 x i16\>, \<4 x i16\> addrspace(1)* %56, align 2, !tbaa !7\l  %58 = sext \<4 x i16\> %57 to \<4 x i32\>\l  %59 = bitcast i16 addrspace(1)* %1 to \<4 x i16\> addrspace(1)*\l  %60 = load \<4 x i16\>, \<4 x i16\> addrspace(1)* %59, align 2, !tbaa !7\l  %61 = sext \<4 x i16\> %60 to \<4 x i32\>\l  %62 = sub nsw \<4 x i32\> %58, %61\l  %63 = extractelement \<4 x i32\> %58, i64 0\l  %64 = sub nsw i32 %63, %22\l  %65 = extractelement \<4 x i32\> %58, i64 1\l  %66 = sub nsw i32 %65, %25\l  %67 = extractelement \<4 x i32\> %58, i64 2\l  %68 = sub nsw i32 %67, %28\l  %69 = extractelement \<4 x i32\> %58, i64 3\l  %70 = sub nsw i32 %69, %31\l  %71 = sub nsw i32 %63, %34\l  %72 = sub nsw i32 %65, %37\l  %73 = sub nsw i32 %67, %40\l  %74 = sub nsw i32 %69, %43\l  %75 = sub nsw i32 %63, %46\l  %76 = sub nsw i32 %65, %49\l  %77 = sub nsw i32 %67, %52\l  %78 = sub nsw i32 %69, %55\l  %79 = mul nsw \<4 x i32\> %62, %62\l  %80 = mul nsw i32 %64, %64\l  %81 = mul nsw i32 %66, %66\l  %82 = mul nsw i32 %68, %68\l  %83 = mul nsw i32 %70, %70\l  %84 = mul nsw i32 %71, %71\l  %85 = mul nsw i32 %72, %72\l  %86 = mul nsw i32 %73, %73\l  %87 = mul nsw i32 %74, %74\l  %88 = mul nsw i32 %75, %75\l  %89 = mul nsw i32 %76, %76\l  %90 = mul nsw i32 %77, %77\l  %91 = mul nsw i32 %78, %78\l  %92 = tail call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %79)\l  %93 = add nuw nsw i32 %81, %80\l  %94 = add nuw nsw i32 %93, %82\l  %95 = add nuw nsw i32 %94, %83\l  %96 = add nuw nsw i32 %85, %84\l  %97 = add nuw nsw i32 %96, %86\l  %98 = add nuw nsw i32 %97, %87\l  %99 = add nuw nsw i32 %89, %88\l  %100 = add nuw nsw i32 %99, %90\l  %101 = add nuw nsw i32 %100, %91\l  %102 = icmp uge i32 %92, %95\l  %103 = zext i1 %102 to i32\l  %104 = tail call i32 @llvm.umin.i32(i32 %92, i32 %95)\l  %105 = icmp ult i32 %98, %101\l  %106 = select i1 %105, i32 2, i32 3\l  %107 = tail call i32 @llvm.umin.i32(i32 %98, i32 %101)\l  %108 = icmp ult i32 %104, %107\l  %109 = select i1 %108, i32 %103, i32 %106\l  %110 = shl nuw nsw i32 %109, 2\l  %111 = zext i32 %110 to i64\l  %112 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %111\l  %113 = load i32, i32 addrspace(1)* %112, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %114 = add nsw i32 %113, %63\l  store i32 %114, i32 addrspace(1)* %112, align 4, !tbaa !11\l  %115 = add nuw nsw i32 %110, 1\l  %116 = zext i32 %115 to i64\l  %117 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %116\l  %118 = load i32, i32 addrspace(1)* %117, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %119 = add nsw i32 %118, %65\l  store i32 %119, i32 addrspace(1)* %117, align 4, !tbaa !11\l  %120 = add nuw nsw i32 %110, 2\l  %121 = zext i32 %120 to i64\l  %122 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %121\l  %123 = load i32, i32 addrspace(1)* %122, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %124 = add nsw i32 %123, %67\l  store i32 %124, i32 addrspace(1)* %122, align 4, !tbaa !11\l  %125 = add nuw nsw i32 %110, 3\l  %126 = zext i32 %125 to i64\l  %127 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %126\l  %128 = load i32, i32 addrspace(1)* %127, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %129 = add nsw i32 %128, %69\l  store i32 %129, i32 addrspace(1)* %127, align 4, !tbaa !11\l  %130 = zext i32 %109 to i64\l  %131 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %130\l  %132 = load i32, i32 addrspace(1)* %131, align 4, !tbaa !11\l  %133 = add nsw i32 %132, 1\l  store i32 %133, i32 addrspace(1)* %131, align 4, !tbaa !11\l  br label %134\l}"];
	Node0x581f270 -> Node0x58207e0;
	Node0x58207e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%134:\l134:                                              \l  ret void\l}"];
}
