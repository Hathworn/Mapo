digraph "CFG for '_Z19transposeUnroll4ColPfS_ii' function" {
	label="CFG for '_Z19transposeUnroll4ColPfS_ii' function";

	Node0x5aa88a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = shl i32 %6, 2\l  %12 = mul i32 %11, %10\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = mul i32 %22, %2\l  %24 = add i32 %23, %14\l  %25 = mul i32 %14, %3\l  %26 = add i32 %25, %22\l  %27 = mul nuw nsw i32 %10, 3\l  %28 = add i32 %14, %27\l  %29 = icmp ult i32 %28, %2\l  %30 = icmp ult i32 %22, %3\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %63\l|{<s0>T|<s1>F}}"];
	Node0x5aa88a0:s0 -> Node0x5aac7b0;
	Node0x5aa88a0:s1 -> Node0x5aac840;
	Node0x5aac7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = zext i32 %26 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = zext i32 %24 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  store float %35, float addrspace(1)* %37, align 4, !tbaa !7\l  %38 = mul i32 %10, %3\l  %39 = add i32 %26, %38\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7\l  %43 = add i32 %24, %10\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  store float %42, float addrspace(1)* %45, align 4, !tbaa !7\l  %46 = shl nuw nsw i32 %10, 1\l  %47 = mul i32 %46, %3\l  %48 = add i32 %26, %47\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7\l  %52 = add i32 %24, %46\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  store float %51, float addrspace(1)* %54, align 4, !tbaa !7\l  %55 = mul i32 %27, %3\l  %56 = add i32 %26, %55\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = add i32 %24, %27\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  store float %59, float addrspace(1)* %62, align 4, !tbaa !7\l  br label %63\l}"];
	Node0x5aac7b0 -> Node0x5aac840;
	Node0x5aac840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  ret void\l}"];
}
