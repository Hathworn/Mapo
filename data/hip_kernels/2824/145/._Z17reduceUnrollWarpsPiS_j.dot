digraph "CFG for '_Z17reduceUnrollWarpsPiS_j' function" {
	label="CFG for '_Z17reduceUnrollWarpsPiS_j' function";

	Node0x52c6260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = shl i32 %5, 1\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %4\l  %14 = zext i32 %12 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %14\l  %16 = add i32 %13, %10\l  %17 = icmp ult i32 %16, %2\l  br i1 %17, label %18, label %26\l|{<s0>T|<s1>F}}"];
	Node0x52c6260:s0 -> Node0x52c6fc0;
	Node0x52c6260:s1 -> Node0x52c8470;
	Node0x52c6fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%18:\l18:                                               \l  %19 = zext i32 %16 to i64\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %19\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %22 = zext i32 %13 to i64\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %22\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %25 = add nsw i32 %24, %21\l  store i32 %25, i32 addrspace(1)* %23, align 4, !tbaa !7\l  br label %26\l}"];
	Node0x52c6fc0 -> Node0x52c8470;
	Node0x52c8470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%26:\l26:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %27 = icmp ugt i16 %9, 65\l  br i1 %27, label %28, label %31\l|{<s0>T|<s1>F}}"];
	Node0x52c8470:s0 -> Node0x52c9b70;
	Node0x52c8470:s1 -> Node0x52c9c00;
	Node0x52c9b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%28:\l28:                                               \l  %29 = zext i32 %4 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %29\l  br label %33\l}"];
	Node0x52c9b70 -> Node0x52c9e50;
	Node0x52c9c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%31:\l31:                                               \l  %32 = icmp ult i32 %4, 32\l  br i1 %32, label %46, label %92\l|{<s0>T|<s1>F}}"];
	Node0x52c9c00:s0 -> Node0x52c8320;
	Node0x52c9c00:s1 -> Node0x52c8370;
	Node0x52c9e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ %10, %28 ], [ %35, %44 ]\l  %35 = lshr i32 %34, 1\l  %36 = icmp ult i32 %4, %35\l  br i1 %36, label %37, label %44\l|{<s0>T|<s1>F}}"];
	Node0x52c9e50:s0 -> Node0x52ca4f0;
	Node0x52c9e50:s1 -> Node0x52ca290;
	Node0x52ca4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%37:\l37:                                               \l  %38 = add nuw nsw i32 %35, %4\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7\l  %42 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7\l  %43 = add nsw i32 %42, %41\l  store i32 %43, i32 addrspace(1)* %30, align 4, !tbaa !7\l  br label %44\l}"];
	Node0x52ca4f0 -> Node0x52ca290;
	Node0x52ca290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %45 = icmp ugt i32 %34, 131\l  br i1 %45, label %33, label %31, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x52ca290:s0 -> Node0x52c9e50;
	Node0x52ca290:s1 -> Node0x52c9c00;
	Node0x52c8320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%46:\l46:                                               \l  %47 = add nuw nsw i32 %4, 32\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %48\l  %50 = addrspacecast i32 addrspace(1)* %49 to i32*\l  %51 = load volatile i32, i32* %50, align 4, !tbaa !7\l  %52 = zext i32 %4 to i64\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %52\l  %54 = addrspacecast i32 addrspace(1)* %53 to i32*\l  %55 = load volatile i32, i32* %54, align 4, !tbaa !7\l  %56 = add nsw i32 %55, %51\l  store volatile i32 %56, i32* %54, align 4, !tbaa !7\l  %57 = add nuw nsw i32 %4, 16\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %58\l  %60 = addrspacecast i32 addrspace(1)* %59 to i32*\l  %61 = load volatile i32, i32* %60, align 4, !tbaa !7\l  %62 = load volatile i32, i32* %54, align 4, !tbaa !7\l  %63 = add nsw i32 %62, %61\l  store volatile i32 %63, i32* %54, align 4, !tbaa !7\l  %64 = add nuw nsw i32 %4, 8\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %65\l  %67 = addrspacecast i32 addrspace(1)* %66 to i32*\l  %68 = load volatile i32, i32* %67, align 4, !tbaa !7\l  %69 = load volatile i32, i32* %54, align 4, !tbaa !7\l  %70 = add nsw i32 %69, %68\l  store volatile i32 %70, i32* %54, align 4, !tbaa !7\l  %71 = add nuw nsw i32 %4, 4\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %72\l  %74 = addrspacecast i32 addrspace(1)* %73 to i32*\l  %75 = load volatile i32, i32* %74, align 4, !tbaa !7\l  %76 = load volatile i32, i32* %54, align 4, !tbaa !7\l  %77 = add nsw i32 %76, %75\l  store volatile i32 %77, i32* %54, align 4, !tbaa !7\l  %78 = add nuw nsw i32 %4, 2\l  %79 = zext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %79\l  %81 = addrspacecast i32 addrspace(1)* %80 to i32*\l  %82 = load volatile i32, i32* %81, align 4, !tbaa !7\l  %83 = load volatile i32, i32* %54, align 4, !tbaa !7\l  %84 = add nsw i32 %83, %82\l  store volatile i32 %84, i32* %54, align 4, !tbaa !7\l  %85 = add nuw nsw i32 %4, 1\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %86\l  %88 = addrspacecast i32 addrspace(1)* %87 to i32*\l  %89 = load volatile i32, i32* %88, align 4, !tbaa !7\l  %90 = load volatile i32, i32* %54, align 4, !tbaa !7\l  %91 = add nsw i32 %90, %89\l  store volatile i32 %91, i32* %54, align 4, !tbaa !7\l  br label %92\l}"];
	Node0x52c8320 -> Node0x52c8370;
	Node0x52c8370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%92:\l92:                                               \l  %93 = icmp eq i32 %4, 0\l  br i1 %93, label %94, label %98\l|{<s0>T|<s1>F}}"];
	Node0x52c8370:s0 -> Node0x52ccb70;
	Node0x52c8370:s1 -> Node0x52ccbc0;
	Node0x52ccb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%94:\l94:                                               \l  %95 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !7\l  %96 = zext i32 %5 to i64\l  %97 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %96\l  store i32 %95, i32 addrspace(1)* %97, align 4, !tbaa !7\l  br label %98\l}"];
	Node0x52ccb70 -> Node0x52ccbc0;
	Node0x52ccbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%98:\l98:                                               \l  ret void\l}"];
}
