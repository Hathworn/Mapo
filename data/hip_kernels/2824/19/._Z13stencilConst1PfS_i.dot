digraph "CFG for '_Z13stencilConst1PfS_i' function" {
	label="CFG for '_Z13stencilConst1PfS_i' function";

	Node0x5c6c480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add nuw nsw i32 %11, 11\l  %13 = add i32 %12, %10\l  %14 = icmp slt i32 %13, %2\l  br i1 %14, label %15, label %156\l|{<s0>T|<s1>F}}"];
	Node0x5c6c480:s0 -> Node0x5c6de00;
	Node0x5c6c480:s1 -> Node0x5c6de90;
	Node0x5c6de00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = add nsw i32 %13, -10\l  %17 = sext i32 %16 to i64\l  %18 = getelementptr inbounds float, float addrspace(1)* %0, i64 %17\l  %19 = load float, float addrspace(1)* %18, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %20 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 0),\l... align 16, !tbaa !7\l  %21 = fmul contract float %19, %20\l  %22 = fadd contract float %21, 0.000000e+00\l  %23 = add nsw i32 %13, -9\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %0, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 1),\l... align 4, !tbaa !7\l  %28 = fmul contract float %26, %27\l  %29 = fadd contract float %22, %28\l  %30 = add nsw i32 %13, -8\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 2),\l... align 8, !tbaa !7\l  %35 = fmul contract float %33, %34\l  %36 = fadd contract float %29, %35\l  %37 = add nsw i32 %13, -7\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %41 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 3),\l... align 4, !tbaa !7\l  %42 = fmul contract float %40, %41\l  %43 = fadd contract float %36, %42\l  %44 = add nsw i32 %13, -6\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 4),\l... align 16, !tbaa !7\l  %49 = fmul contract float %47, %48\l  %50 = fadd contract float %43, %49\l  %51 = add nsw i32 %13, -5\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %55 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 5),\l... align 4, !tbaa !7\l  %56 = fmul contract float %54, %55\l  %57 = fadd contract float %50, %56\l  %58 = add nsw i32 %13, -4\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %62 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 6),\l... align 8, !tbaa !7\l  %63 = fmul contract float %61, %62\l  %64 = fadd contract float %57, %63\l  %65 = add nsw i32 %13, -3\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %69 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 7),\l... align 4, !tbaa !7\l  %70 = fmul contract float %68, %69\l  %71 = fadd contract float %64, %70\l  %72 = add nsw i32 %13, -2\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %76 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 8),\l... align 16, !tbaa !7\l  %77 = fmul contract float %75, %76\l  %78 = fadd contract float %71, %77\l  %79 = add nsw i32 %13, -1\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %83 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 9),\l... align 4, !tbaa !7\l  %84 = fmul contract float %82, %83\l  %85 = fadd contract float %78, %84\l  %86 = sext i32 %13 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %89 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 10),\l... align 8, !tbaa !7\l  %90 = fmul contract float %88, %89\l  %91 = fadd contract float %85, %90\l  %92 = add nsw i32 %13, 1\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %0, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %96 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 11),\l... align 4, !tbaa !7\l  %97 = fmul contract float %95, %96\l  %98 = fadd contract float %91, %97\l  %99 = add nsw i32 %13, 2\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %0, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %103 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 12),\l... align 16, !tbaa !7\l  %104 = fmul contract float %102, %103\l  %105 = fadd contract float %98, %104\l  %106 = add nsw i32 %13, 3\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %0, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %110 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 13),\l... align 4, !tbaa !7\l  %111 = fmul contract float %109, %110\l  %112 = fadd contract float %105, %111\l  %113 = add nsw i32 %13, 4\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %117 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 14),\l... align 8, !tbaa !7\l  %118 = fmul contract float %116, %117\l  %119 = fadd contract float %112, %118\l  %120 = add nsw i32 %13, 5\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %0, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %124 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 15),\l... align 4, !tbaa !7\l  %125 = fmul contract float %123, %124\l  %126 = fadd contract float %119, %125\l  %127 = add nsw i32 %13, 6\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %0, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %131 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 16),\l... align 16, !tbaa !7\l  %132 = fmul contract float %130, %131\l  %133 = fadd contract float %126, %132\l  %134 = add nsw i32 %13, 7\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds float, float addrspace(1)* %0, i64 %135\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %138 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 17),\l... align 4, !tbaa !7\l  %139 = fmul contract float %137, %138\l  %140 = fadd contract float %133, %139\l  %141 = add nsw i32 %13, 8\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %0, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %145 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 18),\l... align 8, !tbaa !7\l  %146 = fmul contract float %144, %145\l  %147 = fadd contract float %140, %146\l  %148 = add nsw i32 %13, 9\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %0, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %152 = load float, float addrspace(4)* getelementptr inbounds ([10000 x\l... float], [10000 x float] addrspace(4)* @const_stencilWeight, i64 0, i64 19),\l... align 4, !tbaa !7\l  %153 = fmul contract float %151, %152\l  %154 = fadd contract float %147, %153\l  %155 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  store float %154, float addrspace(1)* %155, align 4, !tbaa !7\l  br label %156\l}"];
	Node0x5c6de00 -> Node0x5c6de90;
	Node0x5c6de90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%156:\l156:                                              \l  ret void\l}"];
}
