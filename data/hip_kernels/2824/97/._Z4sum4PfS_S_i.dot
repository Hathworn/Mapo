digraph "CFG for '_Z4sum4PfS_S_i' function" {
	label="CFG for '_Z4sum4PfS_S_i' function";

	Node0x6373d90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = mul i32 %5, %10\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %3\l  br i1 %17, label %18, label %33\l|{<s0>T|<s1>F}}"];
	Node0x6373d90:s0 -> Node0x6376020;
	Node0x6373d90:s1 -> Node0x63760b0;
	Node0x6376020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = sext i32 %16 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %0, i64 %19\l  %21 = load float, float addrspace(1)* %20, align 4, !tbaa !16\l  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %19\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !16\l  %24 = fadd contract float %21, %23\l  %25 = getelementptr inbounds float, float addrspace(1)* %2, i64 %19\l  store float %24, float addrspace(1)* %25, align 4, !tbaa !16\l  %26 = udiv i32 %13, %10\l  %27 = mul i32 %26, %10\l  %28 = icmp ugt i32 %13, %27\l  %29 = zext i1 %28 to i32\l  %30 = add i32 %26, %29\l  %31 = mul i32 %30, %10\l  %32 = add i32 %31, %16\l  br label %33\l}"];
	Node0x6376020 -> Node0x63760b0;
	Node0x63760b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ %32, %18 ], [ %16, %4 ]\l  %35 = icmp slt i32 %34, %3\l  br i1 %35, label %36, label %51\l|{<s0>T|<s1>F}}"];
	Node0x63760b0:s0 -> Node0x6375fd0;
	Node0x63760b0:s1 -> Node0x6377420;
	Node0x6375fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%36:\l36:                                               \l  %37 = sext i32 %34 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16\l  %42 = fadd contract float %39, %41\l  %43 = getelementptr inbounds float, float addrspace(1)* %2, i64 %37\l  store float %42, float addrspace(1)* %43, align 4, !tbaa !16\l  %44 = udiv i32 %13, %10\l  %45 = mul i32 %44, %10\l  %46 = icmp ugt i32 %13, %45\l  %47 = zext i1 %46 to i32\l  %48 = add i32 %44, %47\l  %49 = mul i32 %48, %10\l  %50 = add i32 %49, %34\l  br label %51\l}"];
	Node0x6375fd0 -> Node0x6377420;
	Node0x6377420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32 [ %50, %36 ], [ %34, %33 ]\l  %53 = icmp slt i32 %52, %3\l  br i1 %53, label %54, label %69\l|{<s0>T|<s1>F}}"];
	Node0x6377420:s0 -> Node0x6377f30;
	Node0x6377420:s1 -> Node0x6377f80;
	Node0x6377f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%54:\l54:                                               \l  %55 = sext i32 %52 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !16\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %55\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !16\l  %60 = fadd contract float %57, %59\l  %61 = getelementptr inbounds float, float addrspace(1)* %2, i64 %55\l  store float %60, float addrspace(1)* %61, align 4, !tbaa !16\l  %62 = udiv i32 %13, %10\l  %63 = mul i32 %62, %10\l  %64 = icmp ugt i32 %13, %63\l  %65 = zext i1 %64 to i32\l  %66 = add i32 %62, %65\l  %67 = mul i32 %66, %10\l  %68 = add i32 %67, %52\l  br label %69\l}"];
	Node0x6377f30 -> Node0x6377f80;
	Node0x6377f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  %70 = phi i32 [ %68, %54 ], [ %52, %51 ]\l  %71 = icmp slt i32 %70, %3\l  br i1 %71, label %72, label %80\l|{<s0>T|<s1>F}}"];
	Node0x6377f80:s0 -> Node0x6378c60;
	Node0x6377f80:s1 -> Node0x6378cb0;
	Node0x6378c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%72:\l72:                                               \l  %73 = sext i32 %70 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !16\l  %76 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !16\l  %78 = fadd contract float %75, %77\l  %79 = getelementptr inbounds float, float addrspace(1)* %2, i64 %73\l  store float %78, float addrspace(1)* %79, align 4, !tbaa !16\l  br label %80\l}"];
	Node0x6378c60 -> Node0x6378cb0;
	Node0x6378cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  ret void\l}"];
}
