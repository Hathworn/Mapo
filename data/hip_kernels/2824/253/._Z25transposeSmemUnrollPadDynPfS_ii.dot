digraph "CFG for '_Z25transposeSmemUnrollPadDynPfS_ii' function" {
	label="CFG for '_Z25transposeSmemUnrollPadDynPfS_ii' function";

	Node0x594a1d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = shl i32 %6, 1\l  %12 = mul i32 %11, %10\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = mul i32 %22, %2\l  %24 = add i32 %23, %14\l  %25 = mul nuw nsw i32 %21, %10\l  %26 = add nuw nsw i32 %25, %13\l  %27 = freeze i32 %26\l  %28 = freeze i32 %19\l  %29 = udiv i32 %27, %28\l  %30 = mul i32 %29, %28\l  %31 = sub i32 %27, %30\l  %32 = add i32 %20, %31\l  %33 = shl nuw nsw i32 %10, 1\l  %34 = mul i32 %33, %6\l  %35 = add i32 %34, %29\l  %36 = mul i32 %35, %3\l  %37 = add i32 %32, %36\l  %38 = add i32 %14, %10\l  %39 = icmp ult i32 %38, %2\l  %40 = icmp ult i32 %22, %3\l  %41 = select i1 %39, i1 %40, i1 false\l  br i1 %41, label %42, label %69\l|{<s0>T|<s1>F}}"];
	Node0x594a1d0:s0 -> Node0x594c490;
	Node0x594a1d0:s1 -> Node0x594e7e0;
	Node0x594c490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%42:\l42:                                               \l  %43 = add nuw nsw i32 %33, 2\l  %44 = mul nuw nsw i32 %43, %21\l  %45 = add nuw nsw i32 %44, %13\l  %46 = zext i32 %24 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %49 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @tile,\l... i32 0, i32 %45\l  store float %48, float addrspace(3)* %49, align 4, !tbaa !7\l  %50 = add i32 %24, 16\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %54 = add nuw nsw i32 %45, 16\l  %55 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @tile,\l... i32 0, i32 %54\l  store float %53, float addrspace(3)* %55, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %56 = mul nuw nsw i32 %31, %43\l  %57 = add nuw nsw i32 %56, %29\l  %58 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @tile,\l... i32 0, i32 %57\l  %59 = load float, float addrspace(3)* %58, align 4, !tbaa !7\l  %60 = zext i32 %37 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  store float %59, float addrspace(1)* %61, align 4, !tbaa !7\l  %62 = add nuw nsw i32 %57, 16\l  %63 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @tile,\l... i32 0, i32 %62\l  %64 = load float, float addrspace(3)* %63, align 4, !tbaa !7\l  %65 = shl nsw i32 %3, 4\l  %66 = add i32 %37, %65\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  store float %64, float addrspace(1)* %68, align 4, !tbaa !7\l  br label %69\l}"];
	Node0x594c490 -> Node0x594e7e0;
	Node0x594e7e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  ret void\l}"];
}
