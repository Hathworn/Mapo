digraph "CFG for '_Z18reduceUnrollWarps8PiS_j' function" {
	label="CFG for '_Z18reduceUnrollWarps8PiS_j' function";

	Node0x459c8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = shl i32 %5, 3\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %4\l  %14 = zext i32 %12 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %14\l  %16 = mul nuw nsw i32 %10, 7\l  %17 = add i32 %13, %16\l  %18 = icmp ult i32 %17, %2\l  br i1 %18, label %19, label %62\l|{<s0>T|<s1>F}}"];
	Node0x459c8c0:s0 -> Node0x459d620;
	Node0x459c8c0:s1 -> Node0x459eb90;
	Node0x459d620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%19:\l19:                                               \l  %20 = zext i32 %13 to i64\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %20\l  %22 = load i32, i32 addrspace(1)* %21, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %23 = add i32 %13, %10\l  %24 = zext i32 %23 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %27 = shl nuw nsw i32 %10, 1\l  %28 = add i32 %13, %27\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %32 = mul nuw nsw i32 %10, 3\l  %33 = add i32 %13, %32\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %34\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %37 = shl nuw nsw i32 %10, 2\l  %38 = add i32 %13, %37\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %42 = mul nuw nsw i32 %10, 5\l  %43 = add i32 %13, %42\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %47 = mul nuw nsw i32 %10, 6\l  %48 = add i32 %13, %47\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %49\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %52 = zext i32 %17 to i64\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %52\l  %54 = load i32, i32 addrspace(1)* %53, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %55 = add nsw i32 %26, %22\l  %56 = add nsw i32 %55, %31\l  %57 = add nsw i32 %56, %36\l  %58 = add nsw i32 %57, %41\l  %59 = add nsw i32 %58, %46\l  %60 = add nsw i32 %59, %51\l  %61 = add nsw i32 %60, %54\l  store i32 %61, i32 addrspace(1)* %21, align 4, !tbaa !7\l  br label %62\l}"];
	Node0x459d620 -> Node0x459eb90;
	Node0x459eb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%62:\l62:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %63 = icmp ugt i16 %9, 65\l  br i1 %63, label %64, label %67\l|{<s0>T|<s1>F}}"];
	Node0x459eb90:s0 -> Node0x45a1870;
	Node0x459eb90:s1 -> Node0x45a1900;
	Node0x45a1870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%64:\l64:                                               \l  %65 = zext i32 %4 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %65\l  br label %69\l}"];
	Node0x45a1870 -> Node0x45a0320;
	Node0x45a1900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%67:\l67:                                               \l  %68 = icmp ult i32 %4, 32\l  br i1 %68, label %82, label %128\l|{<s0>T|<s1>F}}"];
	Node0x45a1900:s0 -> Node0x45a1ee0;
	Node0x45a1900:s1 -> Node0x45a1f30;
	Node0x45a0320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  %70 = phi i32 [ %10, %64 ], [ %71, %80 ]\l  %71 = lshr i32 %70, 1\l  %72 = icmp ult i32 %4, %71\l  br i1 %72, label %73, label %80\l|{<s0>T|<s1>F}}"];
	Node0x45a0320:s0 -> Node0x45a2300;
	Node0x45a0320:s1 -> Node0x45a20a0;
	Node0x45a2300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%73:\l73:                                               \l  %74 = add nuw nsw i32 %71, %4\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %75\l  %77 = load i32, i32 addrspace(1)* %76, align 4, !tbaa !7\l  %78 = load i32, i32 addrspace(1)* %66, align 4, !tbaa !7\l  %79 = add nsw i32 %78, %77\l  store i32 %79, i32 addrspace(1)* %66, align 4, !tbaa !7\l  br label %80\l}"];
	Node0x45a2300 -> Node0x45a20a0;
	Node0x45a20a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %81 = icmp ugt i32 %70, 131\l  br i1 %81, label %69, label %67, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x45a20a0:s0 -> Node0x45a0320;
	Node0x45a20a0:s1 -> Node0x45a1900;
	Node0x45a1ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%82:\l82:                                               \l  %83 = add nuw nsw i32 %4, 32\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %84\l  %86 = addrspacecast i32 addrspace(1)* %85 to i32*\l  %87 = load volatile i32, i32* %86, align 4, !tbaa !7\l  %88 = zext i32 %4 to i64\l  %89 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %88\l  %90 = addrspacecast i32 addrspace(1)* %89 to i32*\l  %91 = load volatile i32, i32* %90, align 4, !tbaa !7\l  %92 = add nsw i32 %91, %87\l  store volatile i32 %92, i32* %90, align 4, !tbaa !7\l  %93 = add nuw nsw i32 %4, 16\l  %94 = zext i32 %93 to i64\l  %95 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %94\l  %96 = addrspacecast i32 addrspace(1)* %95 to i32*\l  %97 = load volatile i32, i32* %96, align 4, !tbaa !7\l  %98 = load volatile i32, i32* %90, align 4, !tbaa !7\l  %99 = add nsw i32 %98, %97\l  store volatile i32 %99, i32* %90, align 4, !tbaa !7\l  %100 = add nuw nsw i32 %4, 8\l  %101 = zext i32 %100 to i64\l  %102 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %101\l  %103 = addrspacecast i32 addrspace(1)* %102 to i32*\l  %104 = load volatile i32, i32* %103, align 4, !tbaa !7\l  %105 = load volatile i32, i32* %90, align 4, !tbaa !7\l  %106 = add nsw i32 %105, %104\l  store volatile i32 %106, i32* %90, align 4, !tbaa !7\l  %107 = add nuw nsw i32 %4, 4\l  %108 = zext i32 %107 to i64\l  %109 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %108\l  %110 = addrspacecast i32 addrspace(1)* %109 to i32*\l  %111 = load volatile i32, i32* %110, align 4, !tbaa !7\l  %112 = load volatile i32, i32* %90, align 4, !tbaa !7\l  %113 = add nsw i32 %112, %111\l  store volatile i32 %113, i32* %90, align 4, !tbaa !7\l  %114 = add nuw nsw i32 %4, 2\l  %115 = zext i32 %114 to i64\l  %116 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %115\l  %117 = addrspacecast i32 addrspace(1)* %116 to i32*\l  %118 = load volatile i32, i32* %117, align 4, !tbaa !7\l  %119 = load volatile i32, i32* %90, align 4, !tbaa !7\l  %120 = add nsw i32 %119, %118\l  store volatile i32 %120, i32* %90, align 4, !tbaa !7\l  %121 = add nuw nsw i32 %4, 1\l  %122 = zext i32 %121 to i64\l  %123 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %122\l  %124 = addrspacecast i32 addrspace(1)* %123 to i32*\l  %125 = load volatile i32, i32* %124, align 4, !tbaa !7\l  %126 = load volatile i32, i32* %90, align 4, !tbaa !7\l  %127 = add nsw i32 %126, %125\l  store volatile i32 %127, i32* %90, align 4, !tbaa !7\l  br label %128\l}"];
	Node0x45a1ee0 -> Node0x45a1f30;
	Node0x45a1f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%128:\l128:                                              \l  %129 = icmp eq i32 %4, 0\l  br i1 %129, label %130, label %134\l|{<s0>T|<s1>F}}"];
	Node0x45a1f30:s0 -> Node0x45a1ad0;
	Node0x45a1f30:s1 -> Node0x45a1b20;
	Node0x45a1ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%130:\l130:                                              \l  %131 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !7\l  %132 = zext i32 %5 to i64\l  %133 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %132\l  store i32 %131, i32 addrspace(1)* %133, align 4, !tbaa !7\l  br label %134\l}"];
	Node0x45a1ad0 -> Node0x45a1b20;
	Node0x45a1b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%134:\l134:                                              \l  ret void\l}"];
}
