digraph "CFG for '_Z13shared4R20opsPfS_S_i' function" {
	label="CFG for '_Z13shared4R20opsPfS_S_i' function";

	Node0x52ef6f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %3\l  br i1 %14, label %15, label %20\l|{<s0>T|<s1>F}}"];
	Node0x52ef6f0:s0 -> Node0x52f1600;
	Node0x52ef6f0:s1 -> Node0x52f1690;
	Node0x52f1600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %0, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %19 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ13shared4R20opsPfS_S_iE4Smem, i32 0, i32 %12\l  store float %18, float addrspace(3)* %19, align 4, !tbaa !7\l  br label %20\l}"];
	Node0x52f1600 -> Node0x52f1690;
	Node0x52f1690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %14, label %21, label %66\l|{<s0>T|<s1>F}}"];
	Node0x52f1690:s0 -> Node0x52f2c80;
	Node0x52f1690:s1 -> Node0x52f2cd0;
	Node0x52f2c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%21:\l21:                                               \l  %22 = sext i32 %13 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %0, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %25 = fdiv contract float %24, 3.000000e+00\l  %26 = getelementptr inbounds float, float addrspace(1)* %1, i64 %22\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %28 = fmul contract float %27, 1.700000e+01\l  %29 = fadd contract float %25, %28\l  %30 = fmul contract float %24, %24\l  %31 = fsub contract float %29, %30\l  %32 = fmul contract float %27, 3.000000e+00\l  %33 = fadd contract float %32, %31\l  %34 = fmul contract float %24, 4.000000e+00\l  %35 = fmul contract float %34, %27\l  %36 = fsub contract float %33, %35\l  %37 = fmul contract float %27, %27\l  %38 = fmul contract float %37, 7.000000e+00\l  %39 = fadd contract float %38, %36\l  %40 = fadd contract float %39, -8.000000e+00\l  %41 = add nuw nsw i32 %12, 1\l  %42 = and i32 %41, 511\l  %43 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ13shared4R20opsPfS_S_iE4Smem, i32 0, i32 %42\l  %44 = load float, float addrspace(3)* %43, align 4, !tbaa !7\l  %45 = fmul contract float %24, %44\l  %46 = fadd contract float %45, %40\l  %47 = add nuw nsw i32 %12, 2\l  %48 = and i32 %47, 511\l  %49 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ13shared4R20opsPfS_S_iE4Smem, i32 0, i32 %48\l  %50 = load float, float addrspace(3)* %49, align 4, !tbaa !7\l  %51 = fmul contract float %50, 4.000000e+00\l  %52 = fadd contract float %51, %46\l  %53 = add nuw nsw i32 %12, 3\l  %54 = and i32 %53, 511\l  %55 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ13shared4R20opsPfS_S_iE4Smem, i32 0, i32 %54\l  %56 = load float, float addrspace(3)* %55, align 4, !tbaa !7\l  %57 = fmul contract float %32, %56\l  %58 = fadd contract float %57, %52\l  %59 = add nuw nsw i32 %12, 4\l  %60 = and i32 %59, 511\l  %61 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ13shared4R20opsPfS_S_iE4Smem, i32 0, i32 %60\l  %62 = load float, float addrspace(3)* %61, align 4, !tbaa !7\l  %63 = fmul contract float %24, %62\l  %64 = fadd contract float %63, %58\l  %65 = getelementptr inbounds float, float addrspace(1)* %2, i64 %22\l  store float %64, float addrspace(1)* %65, align 4, !tbaa !7\l  br label %66\l}"];
	Node0x52f2c80 -> Node0x52f2cd0;
	Node0x52f2cd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  ret void\l}"];
}
