digraph "CFG for '_Z5sum4MPfS_S_i' function" {
	label="CFG for '_Z5sum4MPfS_S_i' function";

	Node0x49227a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = mul i32 %5, %10\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %3\l  br i1 %17, label %18, label %48\l|{<s0>T|<s1>F}}"];
	Node0x49227a0:s0 -> Node0x4924a30;
	Node0x49227a0:s1 -> Node0x4924ac0;
	Node0x4924a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = sext i32 %16 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %0, i64 %19\l  %21 = load float, float addrspace(1)* %20, align 4, !tbaa !16\l  %22 = fpext float %21 to double\l  %23 = fdiv contract double %22, 7.000000e+00\l  %24 = fmul contract double %23, %22\l  %25 = fptrunc double %24 to float\l  %26 = fdiv contract float %21, 3.000000e+00\l  %27 = getelementptr inbounds float, float addrspace(1)* %1, i64 %19\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !16\l  %29 = fmul contract float %28, 1.700000e+01\l  %30 = fadd contract float %26, %29\l  %31 = fmul contract float %28, 3.000000e+00\l  %32 = fadd contract float %31, %30\l  %33 = fmul contract float %21, %25\l  %34 = fsub contract float %32, %33\l  %35 = fmul contract float %28, %25\l  %36 = fmul contract float %35, 7.000000e+00\l  %37 = fadd contract float %34, %36\l  %38 = getelementptr inbounds float, float addrspace(1)* %2, i64 %19\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  %40 = fadd contract float %39, %37\l  store float %40, float addrspace(1)* %38, align 4, !tbaa !16\l  %41 = udiv i32 %13, %10\l  %42 = mul i32 %41, %10\l  %43 = icmp ugt i32 %13, %42\l  %44 = zext i1 %43 to i32\l  %45 = add i32 %41, %44\l  %46 = mul i32 %45, %10\l  %47 = add i32 %46, %16\l  br label %48\l}"];
	Node0x4924a30 -> Node0x4924ac0;
	Node0x4924ac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i32 [ %47, %18 ], [ %16, %4 ]\l  %50 = icmp slt i32 %49, %3\l  br i1 %50, label %51, label %81\l|{<s0>T|<s1>F}}"];
	Node0x4924ac0:s0 -> Node0x4927140;
	Node0x4924ac0:s1 -> Node0x4927190;
	Node0x4927140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%51:\l51:                                               \l  %52 = sext i32 %49 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !16\l  %55 = fpext float %54 to double\l  %56 = fdiv contract double %55, 7.000000e+00\l  %57 = fmul contract double %56, %55\l  %58 = fptrunc double %57 to float\l  %59 = fdiv contract float %54, 3.000000e+00\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %52\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !16\l  %62 = fmul contract float %61, 1.700000e+01\l  %63 = fadd contract float %59, %62\l  %64 = fmul contract float %61, 3.000000e+00\l  %65 = fadd contract float %64, %63\l  %66 = fmul contract float %54, %58\l  %67 = fsub contract float %65, %66\l  %68 = fmul contract float %61, %58\l  %69 = fmul contract float %68, 7.000000e+00\l  %70 = fadd contract float %67, %69\l  %71 = getelementptr inbounds float, float addrspace(1)* %2, i64 %52\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !16\l  %73 = fadd contract float %72, %70\l  store float %73, float addrspace(1)* %71, align 4, !tbaa !16\l  %74 = udiv i32 %13, %10\l  %75 = mul i32 %74, %10\l  %76 = icmp ugt i32 %13, %75\l  %77 = zext i1 %76 to i32\l  %78 = add i32 %74, %77\l  %79 = mul i32 %78, %10\l  %80 = add i32 %79, %49\l  br label %81\l}"];
	Node0x4927140 -> Node0x4927190;
	Node0x4927190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = phi i32 [ %80, %51 ], [ %49, %48 ]\l  %83 = icmp slt i32 %82, %3\l  br i1 %83, label %84, label %114\l|{<s0>T|<s1>F}}"];
	Node0x4927190:s0 -> Node0x4928680;
	Node0x4927190:s1 -> Node0x49286d0;
	Node0x4928680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%84:\l84:                                               \l  %85 = sext i32 %82 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !16\l  %88 = fpext float %87 to double\l  %89 = fdiv contract double %88, 7.000000e+00\l  %90 = fmul contract double %89, %88\l  %91 = fptrunc double %90 to float\l  %92 = fdiv contract float %87, 3.000000e+00\l  %93 = getelementptr inbounds float, float addrspace(1)* %1, i64 %85\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !16\l  %95 = fmul contract float %94, 1.700000e+01\l  %96 = fadd contract float %92, %95\l  %97 = fmul contract float %94, 3.000000e+00\l  %98 = fadd contract float %97, %96\l  %99 = fmul contract float %87, %91\l  %100 = fsub contract float %98, %99\l  %101 = fmul contract float %94, %91\l  %102 = fmul contract float %101, 7.000000e+00\l  %103 = fadd contract float %100, %102\l  %104 = getelementptr inbounds float, float addrspace(1)* %2, i64 %85\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !16\l  %106 = fadd contract float %105, %103\l  store float %106, float addrspace(1)* %104, align 4, !tbaa !16\l  %107 = udiv i32 %13, %10\l  %108 = mul i32 %107, %10\l  %109 = icmp ugt i32 %13, %108\l  %110 = zext i1 %109 to i32\l  %111 = add i32 %107, %110\l  %112 = mul i32 %111, %10\l  %113 = add i32 %112, %82\l  br label %114\l}"];
	Node0x4928680 -> Node0x49286d0;
	Node0x49286d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  %115 = phi i32 [ %113, %84 ], [ %82, %81 ]\l  %116 = icmp slt i32 %115, %3\l  br i1 %116, label %117, label %140\l|{<s0>T|<s1>F}}"];
	Node0x49286d0:s0 -> Node0x49299b0;
	Node0x49286d0:s1 -> Node0x4929a00;
	Node0x49299b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%117:\l117:                                              \l  %118 = sext i32 %115 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %0, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !16\l  %121 = fpext float %120 to double\l  %122 = fdiv contract double %121, 7.000000e+00\l  %123 = fmul contract double %122, %121\l  %124 = fptrunc double %123 to float\l  %125 = fdiv contract float %120, 3.000000e+00\l  %126 = getelementptr inbounds float, float addrspace(1)* %1, i64 %118\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !16\l  %128 = fmul contract float %127, 1.700000e+01\l  %129 = fadd contract float %125, %128\l  %130 = fmul contract float %127, 3.000000e+00\l  %131 = fadd contract float %130, %129\l  %132 = fmul contract float %120, %124\l  %133 = fsub contract float %131, %132\l  %134 = fmul contract float %127, %124\l  %135 = fmul contract float %134, 7.000000e+00\l  %136 = fadd contract float %133, %135\l  %137 = getelementptr inbounds float, float addrspace(1)* %2, i64 %118\l  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !16\l  %139 = fadd contract float %138, %136\l  store float %139, float addrspace(1)* %137, align 4, !tbaa !16\l  br label %140\l}"];
	Node0x49299b0 -> Node0x4929a00;
	Node0x4929a00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%140:\l140:                                              \l  ret void\l}"];
}
