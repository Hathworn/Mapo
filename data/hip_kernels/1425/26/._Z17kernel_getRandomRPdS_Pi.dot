digraph "CFG for '_Z17kernel_getRandomRPdS_Pi' function" {
	label="CFG for '_Z17kernel_getRandomRPdS_Pi' function";

	Node0x59e1c20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = zext i32 %5 to i64\l  %7 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %6\l  %8 = load i32, i32 addrspace(1)* %7, align 4, !tbaa !5, !amdgpu.noclobber !9\l  %9 = icmp ult i32 %4, %8\l  br i1 %9, label %10, label %166\l|{<s0>T|<s1>F}}"];
	Node0x59e1c20:s0 -> Node0x59e29b0;
	Node0x59e1c20:s1 -> Node0x59e31c0;
	Node0x59e29b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%10:\l10:                                               \l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !10, !invariant.load\l... !9\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %5, %15\l  %17 = add i32 %16, %4\l  %18 = mul nuw nsw i32 %4, 18\l  %19 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @matS,\l... i32 0, i32 %18\l  %20 = getelementptr inbounds double, double addrspace(3)* %19, i32 9\l  store double 0.000000e+00, double addrspace(3)* %19, align 8, !tbaa !11\l  %21 = getelementptr inbounds double, double addrspace(3)* %19, i32 4\l  store double 0.000000e+00, double addrspace(3)* %21, align 8, !tbaa !11\l  %22 = getelementptr inbounds double, double addrspace(3)* %19, i32 8\l  store double 0.000000e+00, double addrspace(3)* %22, align 8, !tbaa !11\l  %23 = shl nsw i32 %17, 2\l  %24 = add nuw nsw i32 %23, 1\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds double, double addrspace(1)* %1, i64 %25\l  %27 = load double, double addrspace(1)* %26, align 8, !tbaa !11\l  %28 = getelementptr inbounds double, double addrspace(3)* %19, i32 5\l  store double %27, double addrspace(3)* %28, align 8, !tbaa !11\l  %29 = add nuw nsw i32 %23, 2\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds double, double addrspace(1)* %1, i64 %30\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !11\l  %33 = getelementptr inbounds double, double addrspace(3)* %19, i32 6\l  store double %32, double addrspace(3)* %33, align 8, !tbaa !11\l  %34 = add nuw nsw i32 %23, 3\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds double, double addrspace(1)* %1, i64 %35\l  %37 = load double, double addrspace(1)* %36, align 8, !tbaa !11\l  %38 = getelementptr inbounds double, double addrspace(3)* %19, i32 1\l  store double %37, double addrspace(3)* %38, align 8, !tbaa !11\l  %39 = fneg contract double %27\l  %40 = getelementptr inbounds double, double addrspace(3)* %19, i32 7\l  store double %39, double addrspace(3)* %40, align 8, !tbaa !11\l  %41 = fneg contract double %32\l  %42 = getelementptr inbounds double, double addrspace(3)* %19, i32 2\l  store double %41, double addrspace(3)* %42, align 8, !tbaa !11\l  %43 = fneg contract double %37\l  %44 = getelementptr inbounds double, double addrspace(3)* %19, i32 3\l  store double %43, double addrspace(3)* %44, align 8, !tbaa !11\l  %45 = getelementptr inbounds double, double addrspace(3)* %19, i32 10\l  %46 = getelementptr inbounds double, double addrspace(3)* %19, i32 11\l  %47 = getelementptr inbounds double, double addrspace(3)* %19, i32 12\l  %48 = getelementptr inbounds double, double addrspace(3)* %19, i32 13\l  %49 = getelementptr inbounds double, double addrspace(3)* %19, i32 14\l  %50 = getelementptr inbounds double, double addrspace(3)* %19, i32 15\l  %51 = getelementptr inbounds double, double addrspace(3)* %19, i32 16\l  %52 = getelementptr inbounds double, double addrspace(3)* %19, i32 17\l  %53 = fmul contract double %37, %37\l  %54 = fsub contract double 0.000000e+00, %53\l  %55 = fmul contract double %32, %41\l  %56 = fadd contract double %54, %55\l  store double %56, double addrspace(3)* %20, align 8, !tbaa !11\l  %57 = fmul contract double %37, -0.000000e+00\l  %58 = fadd contract double %57, 0.000000e+00\l  %59 = fadd contract double %58, %57\l  %60 = fmul contract double %32, %27\l  %61 = fadd contract double %59, %60\l  store double %61, double addrspace(3)* %47, align 8, !tbaa !11\l  %62 = fmul contract double %32, 0.000000e+00\l  %63 = fadd contract double %62, 0.000000e+00\l  %64 = fmul contract double %37, %27\l  %65 = fadd contract double %63, %64\l  %66 = fadd contract double %65, %62\l  store double %66, double addrspace(3)* %50, align 8, !tbaa !11\l  %67 = fmul contract double %37, 0.000000e+00\l  %68 = fadd contract double %67, 0.000000e+00\l  %69 = fadd contract double %68, %67\l  %70 = fmul contract double %27, %32\l  %71 = fadd contract double %69, %70\l  store double %71, double addrspace(3)* %45, align 8, !tbaa !11\l  %72 = fadd contract double %54, 0.000000e+00\l  %73 = fmul contract double %27, %27\l  %74 = fsub contract double %72, %73\l  store double %74, double addrspace(3)* %48, align 8, !tbaa !11\l  %75 = fmul contract double %37, %32\l  %76 = fadd contract double %75, 0.000000e+00\l  %77 = fmul contract double %27, -0.000000e+00\l  %78 = fadd contract double %76, %77\l  %79 = fadd contract double %78, %77\l  store double %79, double addrspace(3)* %51, align 8, !tbaa !11\l  %80 = fmul contract double %32, -0.000000e+00\l  %81 = fadd contract double %80, 0.000000e+00\l  %82 = fmul contract double %27, %37\l  %83 = fadd contract double %81, %82\l  %84 = fadd contract double %83, %80\l  store double %84, double addrspace(3)* %46, align 8, !tbaa !11\l  %85 = fmul contract double %32, %37\l  %86 = fadd contract double %85, 0.000000e+00\l  %87 = load double, double addrspace(3)* %21, align 8, !tbaa !11\l  %88 = fmul contract double %27, %87\l  %89 = fadd contract double %86, %88\l  %90 = load double, double addrspace(3)* %22, align 8, !tbaa !11\l  %91 = load double, double addrspace(3)* %28, align 8, !tbaa !11\l  %92 = fmul contract double %90, %91\l  %93 = fadd contract double %89, %92\l  store double %93, double addrspace(3)* %49, align 8, !tbaa !11\l  %94 = fadd contract double %55, 0.000000e+00\l  %95 = fmul contract double %27, %91\l  %96 = fsub contract double %94, %95\l  %97 = fmul contract double %90, %90\l  %98 = fadd contract double %96, %97\l  store double %98, double addrspace(3)* %52, align 8, !tbaa !11\l  %99 = sext i32 %23 to i64\l  %100 = getelementptr inbounds double, double addrspace(1)* %1, i64 %99\l  %101 = load double, double addrspace(1)* %100, align 8, !tbaa !11,\l... !amdgpu.noclobber !9\l  %102 = fmul contract double %101, 2.000000e+00\l  %103 = load double, double addrspace(3)* %19, align 8, !tbaa !11\l  %104 = fmul contract double %102, %103\l  %105 = fmul contract double %56, 2.000000e+00\l  %106 = fadd contract double %104, %105\l  %107 = load double, double addrspace(3)* %38, align 8, !tbaa !11\l  %108 = fmul contract double %102, %107\l  %109 = fmul contract double %71, 2.000000e+00\l  %110 = fadd contract double %108, %109\l  store double %110, double addrspace(3)* %38, align 8, !tbaa !11\l  %111 = load double, double addrspace(3)* %42, align 8, !tbaa !11\l  %112 = fmul contract double %102, %111\l  %113 = fmul contract double %84, 2.000000e+00\l  %114 = fadd contract double %112, %113\l  store double %114, double addrspace(3)* %42, align 8, !tbaa !11\l  %115 = load double, double addrspace(3)* %44, align 8, !tbaa !11\l  %116 = fmul contract double %102, %115\l  %117 = fmul contract double %61, 2.000000e+00\l  %118 = fadd contract double %116, %117\l  store double %118, double addrspace(3)* %44, align 8, !tbaa !11\l  %119 = fmul contract double %102, %87\l  %120 = fmul contract double %74, 2.000000e+00\l  %121 = fadd contract double %119, %120\l  %122 = fmul contract double %102, %91\l  %123 = fmul contract double %93, 2.000000e+00\l  %124 = fadd contract double %122, %123\l  store double %124, double addrspace(3)* %28, align 8, !tbaa !11\l  %125 = load double, double addrspace(3)* %33, align 8, !tbaa !11\l  %126 = fmul contract double %102, %125\l  %127 = fmul contract double %66, 2.000000e+00\l  %128 = fadd contract double %126, %127\l  store double %128, double addrspace(3)* %33, align 8, !tbaa !11\l  %129 = load double, double addrspace(3)* %40, align 8, !tbaa !11\l  %130 = fmul contract double %102, %129\l  %131 = fmul contract double %79, 2.000000e+00\l  %132 = fadd contract double %130, %131\l  store double %132, double addrspace(3)* %40, align 8, !tbaa !11\l  %133 = fmul contract double %102, %90\l  %134 = fmul contract double %98, 2.000000e+00\l  %135 = fadd contract double %133, %134\l  %136 = fadd contract double %106, 1.000000e+00\l  store double %136, double addrspace(3)* %19, align 8, !tbaa !11\l  %137 = fadd contract double %121, 1.000000e+00\l  store double %137, double addrspace(3)* %21, align 8, !tbaa !11\l  %138 = fadd contract double %135, 1.000000e+00\l  store double %138, double addrspace(3)* %22, align 8, !tbaa !11\l  %139 = mul nsw i32 %17, 9\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds double, double addrspace(1)* %0, i64 %140\l  store double %136, double addrspace(1)* %141, align 8, !tbaa !11\l  %142 = add nsw i32 %139, 1\l  %143 = sext i32 %142 to i64\l  %144 = getelementptr inbounds double, double addrspace(1)* %0, i64 %143\l  store double %110, double addrspace(1)* %144, align 8, !tbaa !11\l  %145 = add nsw i32 %139, 2\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds double, double addrspace(1)* %0, i64 %146\l  store double %114, double addrspace(1)* %147, align 8, !tbaa !11\l  %148 = add nsw i32 %139, 3\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds double, double addrspace(1)* %0, i64 %149\l  store double %118, double addrspace(1)* %150, align 8, !tbaa !11\l  %151 = add nsw i32 %139, 4\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds double, double addrspace(1)* %0, i64 %152\l  store double %137, double addrspace(1)* %153, align 8, !tbaa !11\l  %154 = add nsw i32 %139, 5\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds double, double addrspace(1)* %0, i64 %155\l  store double %124, double addrspace(1)* %156, align 8, !tbaa !11\l  %157 = add nsw i32 %139, 6\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds double, double addrspace(1)* %0, i64 %158\l  store double %128, double addrspace(1)* %159, align 8, !tbaa !11\l  %160 = add nsw i32 %139, 7\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds double, double addrspace(1)* %0, i64 %161\l  store double %132, double addrspace(1)* %162, align 8, !tbaa !11\l  %163 = add nsw i32 %139, 8\l  %164 = sext i32 %163 to i64\l  %165 = getelementptr inbounds double, double addrspace(1)* %0, i64 %164\l  store double %138, double addrspace(1)* %165, align 8, !tbaa !11\l  br label %166\l}"];
	Node0x59e29b0 -> Node0x59e31c0;
	Node0x59e31c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%166:\l166:                                              \l  ret void\l}"];
}
