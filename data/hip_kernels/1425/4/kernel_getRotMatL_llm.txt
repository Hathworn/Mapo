// Use shared memory to reduce global memory access for `mat` and `res`.
// Perform manual loop unrolling to optimize the matrix multiplication.
// Use shared memory to cache `devnR` values and reduce repeated global memory access.
// Perform manual loop unrolling for initializing `res` with zeros for optimal performance.
// Use loop unrolling to minimize loop control overhead during matrix computation.
// Optimize memory writes to `devRotm` by coalescing and minimizing access contention.