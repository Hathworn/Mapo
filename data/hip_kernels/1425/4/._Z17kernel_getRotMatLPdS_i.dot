digraph "CFG for '_Z17kernel_getRotMatLPdS_i' function" {
	label="CFG for '_Z17kernel_getRotMatLPdS_i' function";

	Node0x5130730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = mul nuw nsw i32 %4, 18\l  %6 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @matS,\l... i32 0, i32 %5\l  %7 = getelementptr inbounds double, double addrspace(3)* %6, i32 9\l  store double 0.000000e+00, double addrspace(3)* %6, align 8, !tbaa !5\l  %8 = getelementptr inbounds double, double addrspace(3)* %6, i32 4\l  store double 0.000000e+00, double addrspace(3)* %8, align 8, !tbaa !5\l  %9 = getelementptr inbounds double, double addrspace(3)* %6, i32 8\l  store double 0.000000e+00, double addrspace(3)* %9, align 8, !tbaa !5\l  %10 = shl nuw nsw i32 %4, 2\l  %11 = add nuw nsw i32 %10, 1\l  %12 = zext i32 %11 to i64\l  %13 = getelementptr inbounds double, double addrspace(1)* %1, i64 %12\l  %14 = load double, double addrspace(1)* %13, align 8, !tbaa !5\l  %15 = getelementptr inbounds double, double addrspace(3)* %6, i32 5\l  store double %14, double addrspace(3)* %15, align 8, !tbaa !5\l  %16 = add nuw nsw i32 %10, 2\l  %17 = zext i32 %16 to i64\l  %18 = getelementptr inbounds double, double addrspace(1)* %1, i64 %17\l  %19 = load double, double addrspace(1)* %18, align 8, !tbaa !5\l  %20 = getelementptr inbounds double, double addrspace(3)* %6, i32 6\l  store double %19, double addrspace(3)* %20, align 8, !tbaa !5\l  %21 = add nuw nsw i32 %10, 3\l  %22 = zext i32 %21 to i64\l  %23 = getelementptr inbounds double, double addrspace(1)* %1, i64 %22\l  %24 = load double, double addrspace(1)* %23, align 8, !tbaa !5\l  %25 = getelementptr inbounds double, double addrspace(3)* %6, i32 1\l  store double %24, double addrspace(3)* %25, align 8, !tbaa !5\l  %26 = fneg contract double %14\l  %27 = getelementptr inbounds double, double addrspace(3)* %6, i32 7\l  store double %26, double addrspace(3)* %27, align 8, !tbaa !5\l  %28 = fneg contract double %19\l  %29 = getelementptr inbounds double, double addrspace(3)* %6, i32 2\l  store double %28, double addrspace(3)* %29, align 8, !tbaa !5\l  %30 = fneg contract double %24\l  %31 = getelementptr inbounds double, double addrspace(3)* %6, i32 3\l  store double %30, double addrspace(3)* %31, align 8, !tbaa !5\l  %32 = getelementptr inbounds double, double addrspace(3)* %6, i32 10\l  %33 = getelementptr inbounds double, double addrspace(3)* %6, i32 11\l  %34 = getelementptr inbounds double, double addrspace(3)* %6, i32 12\l  %35 = getelementptr inbounds double, double addrspace(3)* %6, i32 13\l  %36 = getelementptr inbounds double, double addrspace(3)* %6, i32 14\l  %37 = getelementptr inbounds double, double addrspace(3)* %6, i32 15\l  %38 = getelementptr inbounds double, double addrspace(3)* %6, i32 16\l  %39 = getelementptr inbounds double, double addrspace(3)* %6, i32 17\l  %40 = fmul contract double %24, %24\l  %41 = fsub contract double 0.000000e+00, %40\l  %42 = fmul contract double %19, %28\l  %43 = fadd contract double %41, %42\l  store double %43, double addrspace(3)* %7, align 8, !tbaa !5\l  %44 = fmul contract double %24, -0.000000e+00\l  %45 = fadd contract double %44, 0.000000e+00\l  %46 = fadd contract double %45, %44\l  %47 = fmul contract double %19, %14\l  %48 = fadd contract double %46, %47\l  store double %48, double addrspace(3)* %34, align 8, !tbaa !5\l  %49 = fmul contract double %19, 0.000000e+00\l  %50 = fadd contract double %49, 0.000000e+00\l  %51 = fmul contract double %24, %14\l  %52 = fadd contract double %50, %51\l  %53 = fadd contract double %52, %49\l  store double %53, double addrspace(3)* %37, align 8, !tbaa !5\l  %54 = fmul contract double %24, 0.000000e+00\l  %55 = fadd contract double %54, 0.000000e+00\l  %56 = fadd contract double %55, %54\l  %57 = fmul contract double %14, %19\l  %58 = fadd contract double %56, %57\l  store double %58, double addrspace(3)* %32, align 8, !tbaa !5\l  %59 = fadd contract double %41, 0.000000e+00\l  %60 = fmul contract double %14, %14\l  %61 = fsub contract double %59, %60\l  store double %61, double addrspace(3)* %35, align 8, !tbaa !5\l  %62 = fmul contract double %24, %19\l  %63 = fadd contract double %62, 0.000000e+00\l  %64 = fmul contract double %14, -0.000000e+00\l  %65 = fadd contract double %63, %64\l  %66 = fadd contract double %65, %64\l  store double %66, double addrspace(3)* %38, align 8, !tbaa !5\l  %67 = fmul contract double %19, -0.000000e+00\l  %68 = fadd contract double %67, 0.000000e+00\l  %69 = fmul contract double %14, %24\l  %70 = fadd contract double %68, %69\l  %71 = fadd contract double %70, %67\l  store double %71, double addrspace(3)* %33, align 8, !tbaa !5\l  %72 = fmul contract double %19, %24\l  %73 = fadd contract double %72, 0.000000e+00\l  %74 = load double, double addrspace(3)* %8, align 8, !tbaa !5\l  %75 = fmul contract double %14, %74\l  %76 = fadd contract double %73, %75\l  %77 = load double, double addrspace(3)* %9, align 8, !tbaa !5\l  %78 = load double, double addrspace(3)* %15, align 8, !tbaa !5\l  %79 = fmul contract double %77, %78\l  %80 = fadd contract double %76, %79\l  store double %80, double addrspace(3)* %36, align 8, !tbaa !5\l  %81 = fadd contract double %42, 0.000000e+00\l  %82 = fmul contract double %14, %78\l  %83 = fsub contract double %81, %82\l  %84 = fmul contract double %77, %77\l  %85 = fadd contract double %83, %84\l  store double %85, double addrspace(3)* %39, align 8, !tbaa !5\l  %86 = zext i32 %10 to i64\l  %87 = getelementptr inbounds double, double addrspace(1)* %1, i64 %86\l  %88 = load double, double addrspace(1)* %87, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %89 = fmul contract double %88, 2.000000e+00\l  %90 = load double, double addrspace(3)* %6, align 8, !tbaa !5\l  %91 = fmul contract double %89, %90\l  %92 = fmul contract double %43, 2.000000e+00\l  %93 = fadd contract double %91, %92\l  %94 = load double, double addrspace(3)* %25, align 8, !tbaa !5\l  %95 = fmul contract double %89, %94\l  %96 = fmul contract double %58, 2.000000e+00\l  %97 = fadd contract double %95, %96\l  store double %97, double addrspace(3)* %25, align 8, !tbaa !5\l  %98 = load double, double addrspace(3)* %29, align 8, !tbaa !5\l  %99 = fmul contract double %89, %98\l  %100 = fmul contract double %71, 2.000000e+00\l  %101 = fadd contract double %99, %100\l  store double %101, double addrspace(3)* %29, align 8, !tbaa !5\l  %102 = load double, double addrspace(3)* %31, align 8, !tbaa !5\l  %103 = fmul contract double %89, %102\l  %104 = fmul contract double %48, 2.000000e+00\l  %105 = fadd contract double %103, %104\l  store double %105, double addrspace(3)* %31, align 8, !tbaa !5\l  %106 = fmul contract double %89, %74\l  %107 = fmul contract double %61, 2.000000e+00\l  %108 = fadd contract double %106, %107\l  %109 = fmul contract double %89, %78\l  %110 = fmul contract double %80, 2.000000e+00\l  %111 = fadd contract double %109, %110\l  store double %111, double addrspace(3)* %15, align 8, !tbaa !5\l  %112 = load double, double addrspace(3)* %20, align 8, !tbaa !5\l  %113 = fmul contract double %89, %112\l  %114 = fmul contract double %53, 2.000000e+00\l  %115 = fadd contract double %113, %114\l  store double %115, double addrspace(3)* %20, align 8, !tbaa !5\l  %116 = load double, double addrspace(3)* %27, align 8, !tbaa !5\l  %117 = fmul contract double %89, %116\l  %118 = fmul contract double %66, 2.000000e+00\l  %119 = fadd contract double %117, %118\l  store double %119, double addrspace(3)* %27, align 8, !tbaa !5\l  %120 = fmul contract double %89, %77\l  %121 = fmul contract double %85, 2.000000e+00\l  %122 = fadd contract double %120, %121\l  %123 = fadd contract double %93, 1.000000e+00\l  store double %123, double addrspace(3)* %6, align 8, !tbaa !5\l  %124 = fadd contract double %108, 1.000000e+00\l  store double %124, double addrspace(3)* %8, align 8, !tbaa !5\l  %125 = fadd contract double %122, 1.000000e+00\l  store double %125, double addrspace(3)* %9, align 8, !tbaa !5\l  %126 = mul nuw nsw i32 %4, 9\l  %127 = zext i32 %126 to i64\l  %128 = getelementptr inbounds double, double addrspace(1)* %0, i64 %127\l  store double %123, double addrspace(1)* %128, align 8, !tbaa !5\l  %129 = add nuw nsw i32 %126, 1\l  %130 = zext i32 %129 to i64\l  %131 = getelementptr inbounds double, double addrspace(1)* %0, i64 %130\l  store double %97, double addrspace(1)* %131, align 8, !tbaa !5\l  %132 = add nuw nsw i32 %126, 2\l  %133 = zext i32 %132 to i64\l  %134 = getelementptr inbounds double, double addrspace(1)* %0, i64 %133\l  store double %101, double addrspace(1)* %134, align 8, !tbaa !5\l  %135 = add nuw nsw i32 %126, 3\l  %136 = zext i32 %135 to i64\l  %137 = getelementptr inbounds double, double addrspace(1)* %0, i64 %136\l  store double %105, double addrspace(1)* %137, align 8, !tbaa !5\l  %138 = add nuw nsw i32 %126, 4\l  %139 = zext i32 %138 to i64\l  %140 = getelementptr inbounds double, double addrspace(1)* %0, i64 %139\l  store double %124, double addrspace(1)* %140, align 8, !tbaa !5\l  %141 = add nuw nsw i32 %126, 5\l  %142 = zext i32 %141 to i64\l  %143 = getelementptr inbounds double, double addrspace(1)* %0, i64 %142\l  store double %111, double addrspace(1)* %143, align 8, !tbaa !5\l  %144 = add nuw nsw i32 %126, 6\l  %145 = zext i32 %144 to i64\l  %146 = getelementptr inbounds double, double addrspace(1)* %0, i64 %145\l  store double %115, double addrspace(1)* %146, align 8, !tbaa !5\l  %147 = add nuw nsw i32 %126, 7\l  %148 = zext i32 %147 to i64\l  %149 = getelementptr inbounds double, double addrspace(1)* %0, i64 %148\l  store double %119, double addrspace(1)* %149, align 8, !tbaa !5\l  %150 = add nuw nsw i32 %126, 8\l  %151 = zext i32 %150 to i64\l  %152 = getelementptr inbounds double, double addrspace(1)* %0, i64 %151\l  store double %125, double addrspace(1)* %152, align 8, !tbaa !5\l  ret void\l}"];
}
