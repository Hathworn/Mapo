digraph "CFG for '_Z17kernel_getRandomRPdS_' function" {
	label="CFG for '_Z17kernel_getRandomRPdS_' function";

	Node0x59d99b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = add i32 %10, %3\l  %12 = mul nuw nsw i32 %3, 18\l  %13 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @matS,\l... i32 0, i32 %12\l  %14 = getelementptr inbounds double, double addrspace(3)* %13, i32 9\l  store double 0.000000e+00, double addrspace(3)* %13, align 8, !tbaa !7\l  %15 = getelementptr inbounds double, double addrspace(3)* %13, i32 4\l  store double 0.000000e+00, double addrspace(3)* %15, align 8, !tbaa !7\l  %16 = getelementptr inbounds double, double addrspace(3)* %13, i32 8\l  store double 0.000000e+00, double addrspace(3)* %16, align 8, !tbaa !7\l  %17 = shl nsw i32 %11, 2\l  %18 = add nuw nsw i32 %17, 1\l  %19 = sext i32 %18 to i64\l  %20 = getelementptr inbounds double, double addrspace(1)* %1, i64 %19\l  %21 = load double, double addrspace(1)* %20, align 8, !tbaa !7\l  %22 = getelementptr inbounds double, double addrspace(3)* %13, i32 5\l  store double %21, double addrspace(3)* %22, align 8, !tbaa !7\l  %23 = add nuw nsw i32 %17, 2\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds double, double addrspace(1)* %1, i64 %24\l  %26 = load double, double addrspace(1)* %25, align 8, !tbaa !7\l  %27 = getelementptr inbounds double, double addrspace(3)* %13, i32 6\l  store double %26, double addrspace(3)* %27, align 8, !tbaa !7\l  %28 = add nuw nsw i32 %17, 3\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds double, double addrspace(1)* %1, i64 %29\l  %31 = load double, double addrspace(1)* %30, align 8, !tbaa !7\l  %32 = getelementptr inbounds double, double addrspace(3)* %13, i32 1\l  store double %31, double addrspace(3)* %32, align 8, !tbaa !7\l  %33 = fneg contract double %21\l  %34 = getelementptr inbounds double, double addrspace(3)* %13, i32 7\l  store double %33, double addrspace(3)* %34, align 8, !tbaa !7\l  %35 = fneg contract double %26\l  %36 = getelementptr inbounds double, double addrspace(3)* %13, i32 2\l  store double %35, double addrspace(3)* %36, align 8, !tbaa !7\l  %37 = fneg contract double %31\l  %38 = getelementptr inbounds double, double addrspace(3)* %13, i32 3\l  store double %37, double addrspace(3)* %38, align 8, !tbaa !7\l  %39 = getelementptr inbounds double, double addrspace(3)* %13, i32 10\l  %40 = getelementptr inbounds double, double addrspace(3)* %13, i32 11\l  %41 = getelementptr inbounds double, double addrspace(3)* %13, i32 12\l  %42 = getelementptr inbounds double, double addrspace(3)* %13, i32 13\l  %43 = getelementptr inbounds double, double addrspace(3)* %13, i32 14\l  %44 = getelementptr inbounds double, double addrspace(3)* %13, i32 15\l  %45 = getelementptr inbounds double, double addrspace(3)* %13, i32 16\l  %46 = getelementptr inbounds double, double addrspace(3)* %13, i32 17\l  %47 = fmul contract double %31, %31\l  %48 = fsub contract double 0.000000e+00, %47\l  %49 = fmul contract double %26, %35\l  %50 = fadd contract double %48, %49\l  store double %50, double addrspace(3)* %14, align 8, !tbaa !7\l  %51 = fmul contract double %31, -0.000000e+00\l  %52 = fadd contract double %51, 0.000000e+00\l  %53 = fadd contract double %52, %51\l  %54 = fmul contract double %26, %21\l  %55 = fadd contract double %53, %54\l  store double %55, double addrspace(3)* %41, align 8, !tbaa !7\l  %56 = fmul contract double %26, 0.000000e+00\l  %57 = fadd contract double %56, 0.000000e+00\l  %58 = fmul contract double %31, %21\l  %59 = fadd contract double %57, %58\l  %60 = fadd contract double %59, %56\l  store double %60, double addrspace(3)* %44, align 8, !tbaa !7\l  %61 = fmul contract double %31, 0.000000e+00\l  %62 = fadd contract double %61, 0.000000e+00\l  %63 = fadd contract double %62, %61\l  %64 = fmul contract double %21, %26\l  %65 = fadd contract double %63, %64\l  store double %65, double addrspace(3)* %39, align 8, !tbaa !7\l  %66 = fadd contract double %48, 0.000000e+00\l  %67 = fmul contract double %21, %21\l  %68 = fsub contract double %66, %67\l  store double %68, double addrspace(3)* %42, align 8, !tbaa !7\l  %69 = fmul contract double %31, %26\l  %70 = fadd contract double %69, 0.000000e+00\l  %71 = fmul contract double %21, -0.000000e+00\l  %72 = fadd contract double %70, %71\l  %73 = fadd contract double %72, %71\l  store double %73, double addrspace(3)* %45, align 8, !tbaa !7\l  %74 = fmul contract double %26, -0.000000e+00\l  %75 = fadd contract double %74, 0.000000e+00\l  %76 = fmul contract double %21, %31\l  %77 = fadd contract double %75, %76\l  %78 = fadd contract double %77, %74\l  store double %78, double addrspace(3)* %40, align 8, !tbaa !7\l  %79 = fmul contract double %26, %31\l  %80 = fadd contract double %79, 0.000000e+00\l  %81 = load double, double addrspace(3)* %15, align 8, !tbaa !7\l  %82 = fmul contract double %21, %81\l  %83 = fadd contract double %80, %82\l  %84 = load double, double addrspace(3)* %16, align 8, !tbaa !7\l  %85 = load double, double addrspace(3)* %22, align 8, !tbaa !7\l  %86 = fmul contract double %84, %85\l  %87 = fadd contract double %83, %86\l  store double %87, double addrspace(3)* %43, align 8, !tbaa !7\l  %88 = fadd contract double %49, 0.000000e+00\l  %89 = fmul contract double %21, %85\l  %90 = fsub contract double %88, %89\l  %91 = fmul contract double %84, %84\l  %92 = fadd contract double %90, %91\l  store double %92, double addrspace(3)* %46, align 8, !tbaa !7\l  %93 = sext i32 %17 to i64\l  %94 = getelementptr inbounds double, double addrspace(1)* %1, i64 %93\l  %95 = load double, double addrspace(1)* %94, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %96 = fmul contract double %95, 2.000000e+00\l  %97 = load double, double addrspace(3)* %13, align 8, !tbaa !7\l  %98 = fmul contract double %96, %97\l  %99 = fmul contract double %50, 2.000000e+00\l  %100 = fadd contract double %98, %99\l  %101 = load double, double addrspace(3)* %32, align 8, !tbaa !7\l  %102 = fmul contract double %96, %101\l  %103 = fmul contract double %65, 2.000000e+00\l  %104 = fadd contract double %102, %103\l  store double %104, double addrspace(3)* %32, align 8, !tbaa !7\l  %105 = load double, double addrspace(3)* %36, align 8, !tbaa !7\l  %106 = fmul contract double %96, %105\l  %107 = fmul contract double %78, 2.000000e+00\l  %108 = fadd contract double %106, %107\l  store double %108, double addrspace(3)* %36, align 8, !tbaa !7\l  %109 = load double, double addrspace(3)* %38, align 8, !tbaa !7\l  %110 = fmul contract double %96, %109\l  %111 = fmul contract double %55, 2.000000e+00\l  %112 = fadd contract double %110, %111\l  store double %112, double addrspace(3)* %38, align 8, !tbaa !7\l  %113 = fmul contract double %96, %81\l  %114 = fmul contract double %68, 2.000000e+00\l  %115 = fadd contract double %113, %114\l  %116 = fmul contract double %96, %85\l  %117 = fmul contract double %87, 2.000000e+00\l  %118 = fadd contract double %116, %117\l  store double %118, double addrspace(3)* %22, align 8, !tbaa !7\l  %119 = load double, double addrspace(3)* %27, align 8, !tbaa !7\l  %120 = fmul contract double %96, %119\l  %121 = fmul contract double %60, 2.000000e+00\l  %122 = fadd contract double %120, %121\l  store double %122, double addrspace(3)* %27, align 8, !tbaa !7\l  %123 = load double, double addrspace(3)* %34, align 8, !tbaa !7\l  %124 = fmul contract double %96, %123\l  %125 = fmul contract double %73, 2.000000e+00\l  %126 = fadd contract double %124, %125\l  store double %126, double addrspace(3)* %34, align 8, !tbaa !7\l  %127 = fmul contract double %96, %84\l  %128 = fmul contract double %92, 2.000000e+00\l  %129 = fadd contract double %127, %128\l  %130 = fadd contract double %100, 1.000000e+00\l  store double %130, double addrspace(3)* %13, align 8, !tbaa !7\l  %131 = fadd contract double %115, 1.000000e+00\l  store double %131, double addrspace(3)* %15, align 8, !tbaa !7\l  %132 = fadd contract double %129, 1.000000e+00\l  store double %132, double addrspace(3)* %16, align 8, !tbaa !7\l  %133 = mul nsw i32 %11, 9\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds double, double addrspace(1)* %0, i64 %134\l  store double %130, double addrspace(1)* %135, align 8, !tbaa !7\l  %136 = add nsw i32 %133, 1\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds double, double addrspace(1)* %0, i64 %137\l  store double %104, double addrspace(1)* %138, align 8, !tbaa !7\l  %139 = add nsw i32 %133, 2\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds double, double addrspace(1)* %0, i64 %140\l  store double %108, double addrspace(1)* %141, align 8, !tbaa !7\l  %142 = add nsw i32 %133, 3\l  %143 = sext i32 %142 to i64\l  %144 = getelementptr inbounds double, double addrspace(1)* %0, i64 %143\l  store double %112, double addrspace(1)* %144, align 8, !tbaa !7\l  %145 = add nsw i32 %133, 4\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds double, double addrspace(1)* %0, i64 %146\l  store double %131, double addrspace(1)* %147, align 8, !tbaa !7\l  %148 = add nsw i32 %133, 5\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds double, double addrspace(1)* %0, i64 %149\l  store double %118, double addrspace(1)* %150, align 8, !tbaa !7\l  %151 = add nsw i32 %133, 6\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds double, double addrspace(1)* %0, i64 %152\l  store double %122, double addrspace(1)* %153, align 8, !tbaa !7\l  %154 = add nsw i32 %133, 7\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds double, double addrspace(1)* %0, i64 %155\l  store double %126, double addrspace(1)* %156, align 8, !tbaa !7\l  %157 = add nsw i32 %133, 8\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds double, double addrspace(1)* %0, i64 %158\l  store double %132, double addrspace(1)* %159, align 8, !tbaa !7\l  ret void\l}"];
}
