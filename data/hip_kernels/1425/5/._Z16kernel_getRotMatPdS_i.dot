digraph "CFG for '_Z16kernel_getRotMatPdS_i' function" {
	label="CFG for '_Z16kernel_getRotMatPdS_i' function";

	Node0x630bae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %163\l|{<s0>T|<s1>F}}"];
	Node0x630bae0:s0 -> Node0x630c870;
	Node0x630bae0:s1 -> Node0x630da70;
	Node0x630c870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%14:\l14:                                               \l  %15 = mul nuw nsw i32 %4, 18\l  %16 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)* @matS,\l... i32 0, i32 %15\l  %17 = getelementptr inbounds double, double addrspace(3)* %16, i32 9\l  store double 0.000000e+00, double addrspace(3)* %16, align 8, !tbaa !7\l  %18 = getelementptr inbounds double, double addrspace(3)* %16, i32 4\l  store double 0.000000e+00, double addrspace(3)* %18, align 8, !tbaa !7\l  %19 = getelementptr inbounds double, double addrspace(3)* %16, i32 8\l  store double 0.000000e+00, double addrspace(3)* %19, align 8, !tbaa !7\l  %20 = shl nsw i32 %12, 2\l  %21 = add nuw nsw i32 %20, 1\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds double, double addrspace(1)* %1, i64 %22\l  %24 = load double, double addrspace(1)* %23, align 8, !tbaa !7\l  %25 = getelementptr inbounds double, double addrspace(3)* %16, i32 5\l  store double %24, double addrspace(3)* %25, align 8, !tbaa !7\l  %26 = add nuw nsw i32 %20, 2\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds double, double addrspace(1)* %1, i64 %27\l  %29 = load double, double addrspace(1)* %28, align 8, !tbaa !7\l  %30 = getelementptr inbounds double, double addrspace(3)* %16, i32 6\l  store double %29, double addrspace(3)* %30, align 8, !tbaa !7\l  %31 = add nuw nsw i32 %20, 3\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds double, double addrspace(1)* %1, i64 %32\l  %34 = load double, double addrspace(1)* %33, align 8, !tbaa !7\l  %35 = getelementptr inbounds double, double addrspace(3)* %16, i32 1\l  store double %34, double addrspace(3)* %35, align 8, !tbaa !7\l  %36 = fneg contract double %24\l  %37 = getelementptr inbounds double, double addrspace(3)* %16, i32 7\l  store double %36, double addrspace(3)* %37, align 8, !tbaa !7\l  %38 = fneg contract double %29\l  %39 = getelementptr inbounds double, double addrspace(3)* %16, i32 2\l  store double %38, double addrspace(3)* %39, align 8, !tbaa !7\l  %40 = fneg contract double %34\l  %41 = getelementptr inbounds double, double addrspace(3)* %16, i32 3\l  store double %40, double addrspace(3)* %41, align 8, !tbaa !7\l  %42 = getelementptr inbounds double, double addrspace(3)* %16, i32 10\l  %43 = getelementptr inbounds double, double addrspace(3)* %16, i32 11\l  %44 = getelementptr inbounds double, double addrspace(3)* %16, i32 12\l  %45 = getelementptr inbounds double, double addrspace(3)* %16, i32 13\l  %46 = getelementptr inbounds double, double addrspace(3)* %16, i32 14\l  %47 = getelementptr inbounds double, double addrspace(3)* %16, i32 15\l  %48 = getelementptr inbounds double, double addrspace(3)* %16, i32 16\l  %49 = getelementptr inbounds double, double addrspace(3)* %16, i32 17\l  %50 = fmul contract double %34, %34\l  %51 = fsub contract double 0.000000e+00, %50\l  %52 = fmul contract double %29, %38\l  %53 = fadd contract double %51, %52\l  store double %53, double addrspace(3)* %17, align 8, !tbaa !7\l  %54 = fmul contract double %34, -0.000000e+00\l  %55 = fadd contract double %54, 0.000000e+00\l  %56 = fadd contract double %55, %54\l  %57 = fmul contract double %29, %24\l  %58 = fadd contract double %56, %57\l  store double %58, double addrspace(3)* %44, align 8, !tbaa !7\l  %59 = fmul contract double %29, 0.000000e+00\l  %60 = fadd contract double %59, 0.000000e+00\l  %61 = fmul contract double %34, %24\l  %62 = fadd contract double %60, %61\l  %63 = fadd contract double %62, %59\l  store double %63, double addrspace(3)* %47, align 8, !tbaa !7\l  %64 = fmul contract double %34, 0.000000e+00\l  %65 = fadd contract double %64, 0.000000e+00\l  %66 = fadd contract double %65, %64\l  %67 = fmul contract double %24, %29\l  %68 = fadd contract double %66, %67\l  store double %68, double addrspace(3)* %42, align 8, !tbaa !7\l  %69 = fadd contract double %51, 0.000000e+00\l  %70 = fmul contract double %24, %24\l  %71 = fsub contract double %69, %70\l  store double %71, double addrspace(3)* %45, align 8, !tbaa !7\l  %72 = fmul contract double %34, %29\l  %73 = fadd contract double %72, 0.000000e+00\l  %74 = fmul contract double %24, -0.000000e+00\l  %75 = fadd contract double %73, %74\l  %76 = fadd contract double %75, %74\l  store double %76, double addrspace(3)* %48, align 8, !tbaa !7\l  %77 = fmul contract double %29, -0.000000e+00\l  %78 = fadd contract double %77, 0.000000e+00\l  %79 = fmul contract double %24, %34\l  %80 = fadd contract double %78, %79\l  %81 = fadd contract double %80, %77\l  store double %81, double addrspace(3)* %43, align 8, !tbaa !7\l  %82 = fmul contract double %29, %34\l  %83 = fadd contract double %82, 0.000000e+00\l  %84 = load double, double addrspace(3)* %18, align 8, !tbaa !7\l  %85 = fmul contract double %24, %84\l  %86 = fadd contract double %83, %85\l  %87 = load double, double addrspace(3)* %19, align 8, !tbaa !7\l  %88 = load double, double addrspace(3)* %25, align 8, !tbaa !7\l  %89 = fmul contract double %87, %88\l  %90 = fadd contract double %86, %89\l  store double %90, double addrspace(3)* %46, align 8, !tbaa !7\l  %91 = fadd contract double %52, 0.000000e+00\l  %92 = fmul contract double %24, %88\l  %93 = fsub contract double %91, %92\l  %94 = fmul contract double %87, %87\l  %95 = fadd contract double %93, %94\l  store double %95, double addrspace(3)* %49, align 8, !tbaa !7\l  %96 = sext i32 %20 to i64\l  %97 = getelementptr inbounds double, double addrspace(1)* %1, i64 %96\l  %98 = load double, double addrspace(1)* %97, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %99 = fmul contract double %98, 2.000000e+00\l  %100 = load double, double addrspace(3)* %16, align 8, !tbaa !7\l  %101 = fmul contract double %99, %100\l  %102 = fmul contract double %53, 2.000000e+00\l  %103 = fadd contract double %101, %102\l  %104 = load double, double addrspace(3)* %35, align 8, !tbaa !7\l  %105 = fmul contract double %99, %104\l  %106 = fmul contract double %68, 2.000000e+00\l  %107 = fadd contract double %105, %106\l  store double %107, double addrspace(3)* %35, align 8, !tbaa !7\l  %108 = load double, double addrspace(3)* %39, align 8, !tbaa !7\l  %109 = fmul contract double %99, %108\l  %110 = fmul contract double %81, 2.000000e+00\l  %111 = fadd contract double %109, %110\l  store double %111, double addrspace(3)* %39, align 8, !tbaa !7\l  %112 = load double, double addrspace(3)* %41, align 8, !tbaa !7\l  %113 = fmul contract double %99, %112\l  %114 = fmul contract double %58, 2.000000e+00\l  %115 = fadd contract double %113, %114\l  store double %115, double addrspace(3)* %41, align 8, !tbaa !7\l  %116 = fmul contract double %99, %84\l  %117 = fmul contract double %71, 2.000000e+00\l  %118 = fadd contract double %116, %117\l  %119 = fmul contract double %99, %88\l  %120 = fmul contract double %90, 2.000000e+00\l  %121 = fadd contract double %119, %120\l  store double %121, double addrspace(3)* %25, align 8, !tbaa !7\l  %122 = load double, double addrspace(3)* %30, align 8, !tbaa !7\l  %123 = fmul contract double %99, %122\l  %124 = fmul contract double %63, 2.000000e+00\l  %125 = fadd contract double %123, %124\l  store double %125, double addrspace(3)* %30, align 8, !tbaa !7\l  %126 = load double, double addrspace(3)* %37, align 8, !tbaa !7\l  %127 = fmul contract double %99, %126\l  %128 = fmul contract double %76, 2.000000e+00\l  %129 = fadd contract double %127, %128\l  store double %129, double addrspace(3)* %37, align 8, !tbaa !7\l  %130 = fmul contract double %99, %87\l  %131 = fmul contract double %95, 2.000000e+00\l  %132 = fadd contract double %130, %131\l  %133 = fadd contract double %103, 1.000000e+00\l  store double %133, double addrspace(3)* %16, align 8, !tbaa !7\l  %134 = fadd contract double %118, 1.000000e+00\l  store double %134, double addrspace(3)* %18, align 8, !tbaa !7\l  %135 = fadd contract double %132, 1.000000e+00\l  store double %135, double addrspace(3)* %19, align 8, !tbaa !7\l  %136 = mul nsw i32 %12, 9\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds double, double addrspace(1)* %0, i64 %137\l  store double %133, double addrspace(1)* %138, align 8, !tbaa !7\l  %139 = add nsw i32 %136, 1\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds double, double addrspace(1)* %0, i64 %140\l  store double %107, double addrspace(1)* %141, align 8, !tbaa !7\l  %142 = add nsw i32 %136, 2\l  %143 = sext i32 %142 to i64\l  %144 = getelementptr inbounds double, double addrspace(1)* %0, i64 %143\l  store double %111, double addrspace(1)* %144, align 8, !tbaa !7\l  %145 = add nsw i32 %136, 3\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds double, double addrspace(1)* %0, i64 %146\l  store double %115, double addrspace(1)* %147, align 8, !tbaa !7\l  %148 = add nsw i32 %136, 4\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds double, double addrspace(1)* %0, i64 %149\l  store double %134, double addrspace(1)* %150, align 8, !tbaa !7\l  %151 = add nsw i32 %136, 5\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds double, double addrspace(1)* %0, i64 %152\l  store double %121, double addrspace(1)* %153, align 8, !tbaa !7\l  %154 = add nsw i32 %136, 6\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds double, double addrspace(1)* %0, i64 %155\l  store double %125, double addrspace(1)* %156, align 8, !tbaa !7\l  %157 = add nsw i32 %136, 7\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds double, double addrspace(1)* %0, i64 %158\l  store double %129, double addrspace(1)* %159, align 8, !tbaa !7\l  %160 = add nsw i32 %136, 8\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds double, double addrspace(1)* %0, i64 %161\l  store double %135, double addrspace(1)* %162, align 8, !tbaa !7\l  br label %163\l}"];
	Node0x630c870 -> Node0x630da70;
	Node0x630da70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%163:\l163:                                              \l  ret void\l}"];
}
