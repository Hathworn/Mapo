digraph "CFG for '_Z11getLowerAAtPKdPdmm' function" {
	label="CFG for '_Z11getLowerAAtPKdPdmm' function";

	Node0x5f31740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = zext i32 %5 to i64\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = zext i32 %15 to i64\l  %17 = icmp ult i64 %6, %2\l  %18 = icmp ult i64 %16, %2\l  %19 = select i1 %17, i1 %18, i1 false\l  br i1 %19, label %20, label %129\l|{<s0>T|<s1>F}}"];
	Node0x5f31740:s0 -> Node0x5f33b10;
	Node0x5f31740:s1 -> Node0x5f33ba0;
	Node0x5f33b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%20:\l20:                                               \l  %21 = mul i64 %6, %2\l  %22 = add i64 %21, %16\l  %23 = getelementptr inbounds double, double addrspace(1)* %1, i64 %22\l  store double 0.000000e+00, double addrspace(1)* %23, align 8, !tbaa !7\l  %24 = icmp eq i64 %3, 0\l  br i1 %24, label %129, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5f33b10:s0 -> Node0x5f33ba0;
	Node0x5f33b10:s1 -> Node0x5f34b40;
	Node0x5f34b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%25:\l25:                                               \l  %26 = mul i64 %6, %3\l  %27 = mul i64 %16, %3\l  %28 = and i64 %3, 7\l  %29 = icmp ult i64 %3, 8\l  br i1 %29, label %110, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5f34b40:s0 -> Node0x5f34f20;
	Node0x5f34b40:s1 -> Node0x5f34f70;
	Node0x5f34f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%30:\l30:                                               \l  %31 = and i64 %3, -8\l  br label %32\l}"];
	Node0x5f34f70 -> Node0x5f35170;
	Node0x5f35170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = phi double [ 0.000000e+00, %30 ], [ %106, %32 ]\l  %34 = phi i64 [ 0, %30 ], [ %107, %32 ]\l  %35 = phi i64 [ 0, %30 ], [ %108, %32 ]\l  %36 = add i64 %34, %26\l  %37 = getelementptr inbounds double, double addrspace(1)* %0, i64 %36\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !7\l  %39 = add i64 %34, %27\l  %40 = getelementptr inbounds double, double addrspace(1)* %0, i64 %39\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !7\l  %42 = fmul contract double %38, %41\l  %43 = fadd contract double %33, %42\l  store double %43, double addrspace(1)* %23, align 8, !tbaa !7\l  %44 = or i64 %34, 1\l  %45 = add i64 %44, %26\l  %46 = getelementptr inbounds double, double addrspace(1)* %0, i64 %45\l  %47 = load double, double addrspace(1)* %46, align 8, !tbaa !7\l  %48 = add i64 %44, %27\l  %49 = getelementptr inbounds double, double addrspace(1)* %0, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !7\l  %51 = fmul contract double %47, %50\l  %52 = fadd contract double %43, %51\l  store double %52, double addrspace(1)* %23, align 8, !tbaa !7\l  %53 = or i64 %34, 2\l  %54 = add i64 %53, %26\l  %55 = getelementptr inbounds double, double addrspace(1)* %0, i64 %54\l  %56 = load double, double addrspace(1)* %55, align 8, !tbaa !7\l  %57 = add i64 %53, %27\l  %58 = getelementptr inbounds double, double addrspace(1)* %0, i64 %57\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !7\l  %60 = fmul contract double %56, %59\l  %61 = fadd contract double %52, %60\l  store double %61, double addrspace(1)* %23, align 8, !tbaa !7\l  %62 = or i64 %34, 3\l  %63 = add i64 %62, %26\l  %64 = getelementptr inbounds double, double addrspace(1)* %0, i64 %63\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !7\l  %66 = add i64 %62, %27\l  %67 = getelementptr inbounds double, double addrspace(1)* %0, i64 %66\l  %68 = load double, double addrspace(1)* %67, align 8, !tbaa !7\l  %69 = fmul contract double %65, %68\l  %70 = fadd contract double %61, %69\l  store double %70, double addrspace(1)* %23, align 8, !tbaa !7\l  %71 = or i64 %34, 4\l  %72 = add i64 %71, %26\l  %73 = getelementptr inbounds double, double addrspace(1)* %0, i64 %72\l  %74 = load double, double addrspace(1)* %73, align 8, !tbaa !7\l  %75 = add i64 %71, %27\l  %76 = getelementptr inbounds double, double addrspace(1)* %0, i64 %75\l  %77 = load double, double addrspace(1)* %76, align 8, !tbaa !7\l  %78 = fmul contract double %74, %77\l  %79 = fadd contract double %70, %78\l  store double %79, double addrspace(1)* %23, align 8, !tbaa !7\l  %80 = or i64 %34, 5\l  %81 = add i64 %80, %26\l  %82 = getelementptr inbounds double, double addrspace(1)* %0, i64 %81\l  %83 = load double, double addrspace(1)* %82, align 8, !tbaa !7\l  %84 = add i64 %80, %27\l  %85 = getelementptr inbounds double, double addrspace(1)* %0, i64 %84\l  %86 = load double, double addrspace(1)* %85, align 8, !tbaa !7\l  %87 = fmul contract double %83, %86\l  %88 = fadd contract double %79, %87\l  store double %88, double addrspace(1)* %23, align 8, !tbaa !7\l  %89 = or i64 %34, 6\l  %90 = add i64 %89, %26\l  %91 = getelementptr inbounds double, double addrspace(1)* %0, i64 %90\l  %92 = load double, double addrspace(1)* %91, align 8, !tbaa !7\l  %93 = add i64 %89, %27\l  %94 = getelementptr inbounds double, double addrspace(1)* %0, i64 %93\l  %95 = load double, double addrspace(1)* %94, align 8, !tbaa !7\l  %96 = fmul contract double %92, %95\l  %97 = fadd contract double %88, %96\l  store double %97, double addrspace(1)* %23, align 8, !tbaa !7\l  %98 = or i64 %34, 7\l  %99 = add i64 %98, %26\l  %100 = getelementptr inbounds double, double addrspace(1)* %0, i64 %99\l  %101 = load double, double addrspace(1)* %100, align 8, !tbaa !7\l  %102 = add i64 %98, %27\l  %103 = getelementptr inbounds double, double addrspace(1)* %0, i64 %102\l  %104 = load double, double addrspace(1)* %103, align 8, !tbaa !7\l  %105 = fmul contract double %101, %104\l  %106 = fadd contract double %97, %105\l  store double %106, double addrspace(1)* %23, align 8, !tbaa !7\l  %107 = add nuw i64 %34, 8\l  %108 = add i64 %35, 8\l  %109 = icmp eq i64 %108, %31\l  br i1 %109, label %110, label %32, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5f35170:s0 -> Node0x5f34f20;
	Node0x5f35170:s1 -> Node0x5f35170;
	Node0x5f34f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%110:\l110:                                              \l  %111 = phi double [ 0.000000e+00, %25 ], [ %106, %32 ]\l  %112 = phi i64 [ 0, %25 ], [ %107, %32 ]\l  %113 = icmp eq i64 %28, 0\l  br i1 %113, label %129, label %114\l|{<s0>T|<s1>F}}"];
	Node0x5f34f20:s0 -> Node0x5f33ba0;
	Node0x5f34f20:s1 -> Node0x5f39000;
	Node0x5f39000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  %115 = phi double [ %125, %114 ], [ %111, %110 ]\l  %116 = phi i64 [ %126, %114 ], [ %112, %110 ]\l  %117 = phi i64 [ %127, %114 ], [ 0, %110 ]\l  %118 = add i64 %116, %26\l  %119 = getelementptr inbounds double, double addrspace(1)* %0, i64 %118\l  %120 = load double, double addrspace(1)* %119, align 8, !tbaa !7\l  %121 = add i64 %116, %27\l  %122 = getelementptr inbounds double, double addrspace(1)* %0, i64 %121\l  %123 = load double, double addrspace(1)* %122, align 8, !tbaa !7\l  %124 = fmul contract double %120, %123\l  %125 = fadd contract double %115, %124\l  store double %125, double addrspace(1)* %23, align 8, !tbaa !7\l  %126 = add nuw i64 %116, 1\l  %127 = add i64 %117, 1\l  %128 = icmp eq i64 %127, %28\l  br i1 %128, label %129, label %114, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5f39000:s0 -> Node0x5f33ba0;
	Node0x5f39000:s1 -> Node0x5f39000;
	Node0x5f33ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%129:\l129:                                              \l  ret void\l}"];
}
