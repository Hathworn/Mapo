digraph "CFG for '_Z19restoreEigenvectorsPKdS0_Pdmmm' function" {
	label="CFG for '_Z19restoreEigenvectorsPKdS0_Pdmmm' function";

	Node0x5a040b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = zext i32 %7 to i64\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = zext i32 %17 to i64\l  %19 = icmp ult i64 %18, %4\l  %20 = icmp ult i64 %8, %5\l  %21 = select i1 %19, i1 %20, i1 false\l  br i1 %21, label %22, label %101\l|{<s0>T|<s1>F}}"];
	Node0x5a040b0:s0 -> Node0x5a06450;
	Node0x5a040b0:s1 -> Node0x5a064e0;
	Node0x5a06450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%22:\l22:                                               \l  %23 = mul i64 %8, %4\l  %24 = add i64 %23, %18\l  %25 = getelementptr inbounds double, double addrspace(1)* %2, i64 %24\l  store double 0.000000e+00, double addrspace(1)* %25, align 8, !tbaa !7\l  %26 = icmp eq i64 %3, 0\l  br i1 %26, label %101, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5a06450:s0 -> Node0x5a064e0;
	Node0x5a06450:s1 -> Node0x5a07480;
	Node0x5a07480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%27:\l27:                                               \l  %28 = xor i64 %8, -1\l  %29 = add i64 %28, %3\l  %30 = mul i64 %29, %3\l  %31 = and i64 %3, 3\l  %32 = icmp ult i64 %3, 4\l  br i1 %32, label %81, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5a07480:s0 -> Node0x5a06100;
	Node0x5a07480:s1 -> Node0x5a06150;
	Node0x5a06150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%33:\l33:                                               \l  %34 = and i64 %3, -4\l  br label %35\l}"];
	Node0x5a06150 -> Node0x5a07c40;
	Node0x5a07c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%35:\l35:                                               \l  %36 = phi double [ 0.000000e+00, %33 ], [ %77, %35 ]\l  %37 = phi i64 [ 0, %33 ], [ %78, %35 ]\l  %38 = phi i64 [ 0, %33 ], [ %79, %35 ]\l  %39 = add i64 %37, %30\l  %40 = getelementptr inbounds double, double addrspace(1)* %1, i64 %39\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !7\l  %42 = mul i64 %37, %4\l  %43 = add i64 %42, %18\l  %44 = getelementptr inbounds double, double addrspace(1)* %0, i64 %43\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !7\l  %46 = fmul contract double %41, %45\l  %47 = fadd contract double %36, %46\l  store double %47, double addrspace(1)* %25, align 8, !tbaa !7\l  %48 = or i64 %37, 1\l  %49 = add i64 %48, %30\l  %50 = getelementptr inbounds double, double addrspace(1)* %1, i64 %49\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !7\l  %52 = mul i64 %48, %4\l  %53 = add i64 %52, %18\l  %54 = getelementptr inbounds double, double addrspace(1)* %0, i64 %53\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !7\l  %56 = fmul contract double %51, %55\l  %57 = fadd contract double %47, %56\l  store double %57, double addrspace(1)* %25, align 8, !tbaa !7\l  %58 = or i64 %37, 2\l  %59 = add i64 %58, %30\l  %60 = getelementptr inbounds double, double addrspace(1)* %1, i64 %59\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !7\l  %62 = mul i64 %58, %4\l  %63 = add i64 %62, %18\l  %64 = getelementptr inbounds double, double addrspace(1)* %0, i64 %63\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !7\l  %66 = fmul contract double %61, %65\l  %67 = fadd contract double %57, %66\l  store double %67, double addrspace(1)* %25, align 8, !tbaa !7\l  %68 = or i64 %37, 3\l  %69 = add i64 %68, %30\l  %70 = getelementptr inbounds double, double addrspace(1)* %1, i64 %69\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !7\l  %72 = mul i64 %68, %4\l  %73 = add i64 %72, %18\l  %74 = getelementptr inbounds double, double addrspace(1)* %0, i64 %73\l  %75 = load double, double addrspace(1)* %74, align 8, !tbaa !7\l  %76 = fmul contract double %71, %75\l  %77 = fadd contract double %67, %76\l  store double %77, double addrspace(1)* %25, align 8, !tbaa !7\l  %78 = add nuw i64 %37, 4\l  %79 = add i64 %38, 4\l  %80 = icmp eq i64 %79, %34\l  br i1 %80, label %81, label %35, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5a07c40:s0 -> Node0x5a06100;
	Node0x5a07c40:s1 -> Node0x5a07c40;
	Node0x5a06100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%81:\l81:                                               \l  %82 = phi double [ 0.000000e+00, %27 ], [ %77, %35 ]\l  %83 = phi i64 [ 0, %27 ], [ %78, %35 ]\l  %84 = icmp eq i64 %31, 0\l  br i1 %84, label %101, label %85\l|{<s0>T|<s1>F}}"];
	Node0x5a06100:s0 -> Node0x5a064e0;
	Node0x5a06100:s1 -> Node0x5a0a550;
	Node0x5a0a550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  %86 = phi double [ %97, %85 ], [ %82, %81 ]\l  %87 = phi i64 [ %98, %85 ], [ %83, %81 ]\l  %88 = phi i64 [ %99, %85 ], [ 0, %81 ]\l  %89 = add i64 %87, %30\l  %90 = getelementptr inbounds double, double addrspace(1)* %1, i64 %89\l  %91 = load double, double addrspace(1)* %90, align 8, !tbaa !7\l  %92 = mul i64 %87, %4\l  %93 = add i64 %92, %18\l  %94 = getelementptr inbounds double, double addrspace(1)* %0, i64 %93\l  %95 = load double, double addrspace(1)* %94, align 8, !tbaa !7\l  %96 = fmul contract double %91, %95\l  %97 = fadd contract double %86, %96\l  store double %97, double addrspace(1)* %25, align 8, !tbaa !7\l  %98 = add nuw i64 %87, 1\l  %99 = add i64 %88, 1\l  %100 = icmp eq i64 %99, %31\l  br i1 %100, label %101, label %85, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5a0a550:s0 -> Node0x5a064e0;
	Node0x5a0a550:s1 -> Node0x5a0a550;
	Node0x5a064e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%101:\l101:                                              \l  ret void\l}"];
}
