digraph "CFG for '_Z12getDistancesPKdS0_Pdmmm' function" {
	label="CFG for '_Z12getDistancesPKdS0_Pdmmm' function";

	Node0x472cd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = zext i32 %7 to i64\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = zext i32 %17 to i64\l  %19 = icmp ult i64 %18, %4\l  %20 = icmp ult i64 %8, %3\l  %21 = select i1 %19, i1 %20, i1 false\l  br i1 %21, label %22, label %78\l|{<s0>T|<s1>F}}"];
	Node0x472cd20:s0 -> Node0x472f080;
	Node0x472cd20:s1 -> Node0x472f110;
	Node0x472f080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%22:\l22:                                               \l  %23 = mul i64 %8, %4\l  %24 = add i64 %23, %18\l  %25 = getelementptr inbounds double, double addrspace(1)* %2, i64 %24\l  store double 0.000000e+00, double addrspace(1)* %25, align 8, !tbaa !7\l  %26 = icmp eq i64 %5, 0\l  br i1 %26, label %78, label %27\l|{<s0>T|<s1>F}}"];
	Node0x472f080:s0 -> Node0x472f110;
	Node0x472f080:s1 -> Node0x47300b0;
	Node0x47300b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%27:\l27:                                               \l  %28 = and i64 %5, 1\l  %29 = icmp eq i64 %5, 1\l  br i1 %29, label %62, label %30\l|{<s0>T|<s1>F}}"];
	Node0x47300b0:s0 -> Node0x4730340;
	Node0x47300b0:s1 -> Node0x4730390;
	Node0x4730390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%30:\l30:                                               \l  %31 = and i64 %5, -2\l  br label %32\l}"];
	Node0x4730390 -> Node0x4730590;
	Node0x4730590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = phi double [ 0.000000e+00, %30 ], [ %58, %32 ]\l  %34 = phi i64 [ 0, %30 ], [ %59, %32 ]\l  %35 = phi i64 [ 0, %30 ], [ %60, %32 ]\l  %36 = mul i64 %34, %3\l  %37 = add i64 %36, %8\l  %38 = getelementptr inbounds double, double addrspace(1)* %0, i64 %37\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !7\l  %40 = mul i64 %34, %4\l  %41 = add i64 %40, %18\l  %42 = getelementptr inbounds double, double addrspace(1)* %1, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !7\l  %44 = fsub contract double %39, %43\l  %45 = tail call double @llvm.fabs.f64(double %44)\l  %46 = fadd contract double %33, %45\l  store double %46, double addrspace(1)* %25, align 8, !tbaa !7\l  %47 = or i64 %34, 1\l  %48 = mul i64 %47, %3\l  %49 = add i64 %48, %8\l  %50 = getelementptr inbounds double, double addrspace(1)* %0, i64 %49\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !7\l  %52 = mul i64 %47, %4\l  %53 = add i64 %52, %18\l  %54 = getelementptr inbounds double, double addrspace(1)* %1, i64 %53\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !7\l  %56 = fsub contract double %51, %55\l  %57 = tail call double @llvm.fabs.f64(double %56)\l  %58 = fadd contract double %46, %57\l  store double %58, double addrspace(1)* %25, align 8, !tbaa !7\l  %59 = add nuw i64 %34, 2\l  %60 = add i64 %35, 2\l  %61 = icmp eq i64 %60, %31\l  br i1 %61, label %62, label %32, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4730590:s0 -> Node0x4730340;
	Node0x4730590:s1 -> Node0x4730590;
	Node0x4730340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%62:\l62:                                               \l  %63 = phi double [ 0.000000e+00, %27 ], [ %58, %32 ]\l  %64 = phi i64 [ 0, %27 ], [ %59, %32 ]\l  %65 = icmp eq i64 %28, 0\l  br i1 %65, label %78, label %66\l|{<s0>T|<s1>F}}"];
	Node0x4730340:s0 -> Node0x472f110;
	Node0x4730340:s1 -> Node0x47306e0;
	Node0x47306e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%66:\l66:                                               \l  %67 = mul i64 %64, %3\l  %68 = add i64 %67, %8\l  %69 = getelementptr inbounds double, double addrspace(1)* %0, i64 %68\l  %70 = load double, double addrspace(1)* %69, align 8, !tbaa !7\l  %71 = mul i64 %64, %4\l  %72 = add i64 %71, %18\l  %73 = getelementptr inbounds double, double addrspace(1)* %1, i64 %72\l  %74 = load double, double addrspace(1)* %73, align 8, !tbaa !7\l  %75 = fsub contract double %70, %74\l  %76 = tail call double @llvm.fabs.f64(double %75)\l  %77 = fadd contract double %63, %76\l  store double %77, double addrspace(1)* %25, align 8, !tbaa !7\l  br label %78\l}"];
	Node0x47306e0 -> Node0x472f110;
	Node0x472f110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%78:\l78:                                               \l  ret void\l}"];
}
