digraph "CFG for '_Z13kernelScharrXPKfiiPf' function" {
	label="CFG for '_Z13kernelScharrXPKfiiPf' function";

	Node0x5bb0c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %13, %1\l  %23 = icmp slt i32 %21, %2\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %78\l|{<s0>T|<s1>F}}"];
	Node0x5bb0c40:s0 -> Node0x5bb46b0;
	Node0x5bb0c40:s1 -> Node0x5bb4740;
	Node0x5bb46b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%25:\l25:                                               \l  %26 = tail call i32 @llvm.smax.i32(i32 %21, i32 1)\l  %27 = add nsw i32 %26, -1\l  %28 = add nsw i32 %21, 1\l  %29 = add nsw i32 %2, -1\l  %30 = tail call i32 @llvm.smin.i32(i32 %28, i32 %29)\l  %31 = tail call i32 @llvm.smax.i32(i32 %13, i32 1)\l  %32 = add nsw i32 %31, -1\l  %33 = add nsw i32 %13, 1\l  %34 = add nsw i32 %1, -1\l  %35 = tail call i32 @llvm.smin.i32(i32 %33, i32 %34)\l  %36 = mul nsw i32 %27, %1\l  %37 = add nsw i32 %36, %32\l  %38 = add nsw i32 %36, %35\l  %39 = mul nsw i32 %21, %1\l  %40 = add nsw i32 %39, %32\l  %41 = add nsw i32 %39, %35\l  %42 = mul nsw i32 %30, %1\l  %43 = add nsw i32 %42, %32\l  %44 = add nsw i32 %42, %35\l  %45 = sext i32 %37 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fneg contract float %47\l  %49 = sext i32 %43 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %52 = fsub contract float %48, %51\l  %53 = sext i32 %38 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %56 = fadd contract float %52, %55\l  %57 = sext i32 %44 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %60 = fadd contract float %56, %59\l  %61 = fpext float %60 to double\l  %62 = fmul contract double %61, 3.000000e+00\l  %63 = sext i32 %41 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %66 = sext i32 %40 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %69 = fsub contract float %65, %68\l  %70 = fpext float %69 to double\l  %71 = fmul contract double %70, 1.000000e+01\l  %72 = fadd contract double %62, %71\l  %73 = fptrunc double %72 to float\l  %74 = fdiv contract float %73, 2.000000e+01\l  %75 = add nsw i32 %39, %13\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %3, i64 %76\l  store float %74, float addrspace(1)* %77, align 4, !tbaa !7\l  br label %78\l}"];
	Node0x5bb46b0 -> Node0x5bb4740;
	Node0x5bb4740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%78:\l78:                                               \l  ret void\l}"];
}
