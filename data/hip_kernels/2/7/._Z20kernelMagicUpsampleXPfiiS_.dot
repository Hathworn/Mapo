digraph "CFG for '_Z20kernelMagicUpsampleXPfiiS_' function" {
	label="CFG for '_Z20kernelMagicUpsampleXPfiiS_' function";

	Node0x583b900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %13, %1\l  %23 = icmp slt i32 %21, %2\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %67\l|{<s0>T|<s1>F}}"];
	Node0x583b900:s0 -> Node0x583f370;
	Node0x583b900:s1 -> Node0x583f400;
	Node0x583f370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%25:\l25:                                               \l  %26 = mul nsw i32 %21, %1\l  %27 = add nsw i32 %26, %13\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = shl i32 %1, 1\l  %32 = mul i32 %31, %21\l  %33 = shl nsw i32 %13, 1\l  %34 = add nsw i32 %32, %33\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %3, i64 %35\l  store float %30, float addrspace(1)* %36, align 4, !tbaa !7\l  %37 = add nsw i32 %1, -2\l  %38 = icmp slt i32 %13, %37\l  %39 = icmp sgt i32 %13, 1\l  %40 = and i1 %38, %39\l  br i1 %40, label %41, label %67\l|{<s0>T|<s1>F}}"];
	Node0x583f370:s0 -> Node0x5840700;
	Node0x583f370:s1 -> Node0x583f400;
	Node0x5840700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%41:\l41:                                               \l  %42 = load float, float addrspace(1)* %29, align 4, !tbaa !7\l  %43 = add nsw i32 %27, 1\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %47 = fadd contract float %42, %46\l  %48 = fpext float %47 to double\l  %49 = fmul contract double %48, 3.000000e+00\l  %50 = add nsw i32 %27, -1\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7\l  %54 = fpext float %53 to double\l  %55 = fadd contract double %49, %54\l  %56 = add nsw i32 %27, 2\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = fpext float %59 to double\l  %61 = fadd contract double %55, %60\l  %62 = fptrunc double %61 to float\l  %63 = fmul contract float %62, 1.250000e-01\l  %64 = or i32 %34, 1\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %3, i64 %65\l  store float %63, float addrspace(1)* %66, align 4, !tbaa !7\l  br label %67\l}"];
	Node0x5840700 -> Node0x583f400;
	Node0x583f400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  ret void\l}"];
}
