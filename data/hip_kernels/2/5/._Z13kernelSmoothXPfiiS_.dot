digraph "CFG for '_Z13kernelSmoothXPfiiS_' function" {
	label="CFG for '_Z13kernelSmoothXPfiiS_' function";

	Node0x5de8a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %13, %1\l  %23 = icmp slt i32 %21, %2\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5de8a20:s0 -> Node0x5dec490;
	Node0x5de8a20:s1 -> Node0x5dec520;
	Node0x5dec490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%25:\l25:                                               \l  %26 = mul nsw i32 %21, %1\l  %27 = add nsw i32 %13, 1\l  %28 = add nsw i32 %13, 2\l  %29 = tail call i32 @llvm.smax.i32(i32 %13, i32 2)\l  %30 = add nsw i32 %29, -2\l  %31 = tail call i32 @llvm.smax.i32(i32 %13, i32 1)\l  %32 = add nsw i32 %31, -1\l  %33 = icmp slt i32 %27, %1\l  %34 = add nsw i32 %1, -1\l  %35 = select i1 %33, i32 %27, i32 %34\l  %36 = icmp slt i32 %28, %1\l  %37 = select i1 %36, i32 %28, i32 %34\l  %38 = add nsw i32 %30, %26\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = fmul contract float %41, 6.250000e-02\l  %43 = add nsw i32 %32, %26\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = fmul contract float %46, 2.500000e-01\l  %48 = fadd contract float %42, %47\l  %49 = add nsw i32 %26, %13\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %53 = fmul contract float %52, 3.750000e-01\l  %54 = fadd contract float %48, %53\l  %55 = add nsw i32 %35, %26\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %59 = fmul contract float %58, 2.500000e-01\l  %60 = fadd contract float %54, %59\l  %61 = add nsw i32 %37, %26\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %65 = fmul contract float %64, 6.250000e-02\l  %66 = fadd contract float %60, %65\l  %67 = getelementptr inbounds float, float addrspace(1)* %3, i64 %50\l  store float %66, float addrspace(1)* %67, align 4, !tbaa !7\l  br label %68\l}"];
	Node0x5dec490 -> Node0x5dec520;
	Node0x5dec520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  ret void\l}"];
}
