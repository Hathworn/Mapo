digraph "CFG for '_Z16propagateCarriesPii' function" {
	label="CFG for '_Z16propagateCarriesPii' function";

	Node0x5bc2a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%2:\l  %3 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %4 = getelementptr i8, i8 addrspace(4)* %3, i64 4\l  %5 = bitcast i8 addrspace(4)* %4 to i16 addrspace(4)*\l  %6 = load i16, i16 addrspace(4)* %5, align 4, !range !4, !invariant.load !5\l  %7 = zext i16 %6 to i32\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = mul i32 %8, %7\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = mul i32 %10, %1\l  %12 = add i32 %9, %11\l  %13 = icmp sgt i32 %1, 0\l  br i1 %13, label %14, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5bc2a20:s0 -> Node0x5bc49b0;
	Node0x5bc2a20:s1 -> Node0x5bc4a40;
	Node0x5bc49b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%14:\l14:                                               \l  %15 = and i32 %1, 3\l  %16 = icmp ult i32 %1, 4\l  br i1 %16, label %19, label %17\l|{<s0>T|<s1>F}}"];
	Node0x5bc49b0:s0 -> Node0x5bc43b0;
	Node0x5bc49b0:s1 -> Node0x5bc4e10;
	Node0x5bc4e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%17:\l17:                                               \l  %18 = and i32 %1, -4\l  br label %40\l}"];
	Node0x5bc4e10 -> Node0x5bc4fd0;
	Node0x5bc43b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = phi i32 [ %1, %14 ], [ %74, %40 ]\l  %21 = phi i32 [ 0, %14 ], [ %81, %40 ]\l  %22 = icmp eq i32 %15, 0\l  br i1 %22, label %39, label %23\l|{<s0>T|<s1>F}}"];
	Node0x5bc43b0:s0 -> Node0x5bc4a40;
	Node0x5bc43b0:s1 -> Node0x5bc5320;
	Node0x5bc5320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i32 [ %27, %23 ], [ %20, %19 ]\l  %25 = phi i32 [ %34, %23 ], [ %21, %19 ]\l  %26 = phi i32 [ %37, %23 ], [ 0, %19 ]\l  %27 = add nsw i32 %24, -1\l  %28 = add nsw i32 %12, %27\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7\l  %32 = add nsw i32 %31, %25\l  %33 = freeze i32 %32\l  %34 = sdiv i32 %33, 10\l  %35 = mul i32 %34, 10\l  %36 = sub i32 %33, %35\l  store i32 %36, i32 addrspace(1)* %30, align 4, !tbaa !7\l  %37 = add i32 %26, 1\l  %38 = icmp eq i32 %37, %15\l  br i1 %38, label %39, label %23, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5bc5320:s0 -> Node0x5bc4a40;
	Node0x5bc5320:s1 -> Node0x5bc5320;
	Node0x5bc4a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%39:\l39:                                               \l  ret void\l}"];
	Node0x5bc4fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%40:\l40:                                               \l  %41 = phi i32 [ %1, %17 ], [ %74, %40 ]\l  %42 = phi i32 [ 0, %17 ], [ %81, %40 ]\l  %43 = phi i32 [ 0, %17 ], [ %84, %40 ]\l  %44 = add nsw i32 %41, -1\l  %45 = add nsw i32 %12, %44\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7\l  %49 = add nsw i32 %48, %42\l  %50 = freeze i32 %49\l  %51 = sdiv i32 %50, 10\l  %52 = mul i32 %51, 10\l  %53 = sub i32 %50, %52\l  store i32 %53, i32 addrspace(1)* %47, align 4, !tbaa !7\l  %54 = add nsw i32 %41, -2\l  %55 = add nsw i32 %12, %54\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %56\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !7\l  %59 = add nsw i32 %58, %51\l  %60 = freeze i32 %59\l  %61 = sdiv i32 %60, 10\l  %62 = mul i32 %61, 10\l  %63 = sub i32 %60, %62\l  store i32 %63, i32 addrspace(1)* %57, align 4, !tbaa !7\l  %64 = add nsw i32 %41, -3\l  %65 = add nsw i32 %12, %64\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %66\l  %68 = load i32, i32 addrspace(1)* %67, align 4, !tbaa !7\l  %69 = add nsw i32 %68, %61\l  %70 = freeze i32 %69\l  %71 = sdiv i32 %70, 10\l  %72 = mul i32 %71, 10\l  %73 = sub i32 %70, %72\l  store i32 %73, i32 addrspace(1)* %67, align 4, !tbaa !7\l  %74 = add nsw i32 %41, -4\l  %75 = add nsw i32 %12, %74\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %76\l  %78 = load i32, i32 addrspace(1)* %77, align 4, !tbaa !7\l  %79 = add nsw i32 %78, %71\l  %80 = freeze i32 %79\l  %81 = sdiv i32 %80, 10\l  %82 = mul i32 %81, 10\l  %83 = sub i32 %80, %82\l  store i32 %83, i32 addrspace(1)* %77, align 4, !tbaa !7\l  %84 = add i32 %43, 4\l  %85 = icmp eq i32 %84, %18\l  br i1 %85, label %19, label %40, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5bc4fd0:s0 -> Node0x5bc43b0;
	Node0x5bc4fd0:s1 -> Node0x5bc4fd0;
}
