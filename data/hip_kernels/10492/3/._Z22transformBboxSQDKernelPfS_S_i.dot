digraph "CFG for '_Z22transformBboxSQDKernelPfS_S_i' function" {
	label="CFG for '_Z22transformBboxSQDKernelPfS_S_i' function";

	Node0x6364240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = mul i32 %5, %3\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = add i32 %6, %7\l  %9 = shl i32 %8, 2\l  %10 = sext i32 %9 to i64\l  %11 = getelementptr inbounds float, float addrspace(1)* %0, i64 %10\l  %12 = load float, float addrspace(1)* %11, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %13 = add nuw nsw i32 %9, 1\l  %14 = sext i32 %13 to i64\l  %15 = getelementptr inbounds float, float addrspace(1)* %0, i64 %14\l  %16 = load float, float addrspace(1)* %15, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %17 = add nuw nsw i32 %9, 2\l  %18 = sext i32 %17 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %21 = add nuw nsw i32 %9, 3\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %0, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %25 = getelementptr inbounds float, float addrspace(1)* %1, i64 %10\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %27 = getelementptr inbounds float, float addrspace(1)* %1, i64 %14\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %29 = getelementptr inbounds float, float addrspace(1)* %1, i64 %18\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %22\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %33 = fcmp contract olt float %20, 1.000000e+00\l  br i1 %33, label %34, label %49\l|{<s0>T|<s1>F}}"];
	Node0x6364240:s0 -> Node0x6368460;
	Node0x6364240:s1 -> Node0x63684b0;
	Node0x6368460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%34:\l34:                                               \l  %35 = fmul float %20, 0x3FF7154760000000\l  %36 = tail call float @llvm.rint.f32(float %35)\l  %37 = fcmp ogt float %20, 0x40562E4300000000\l  %38 = fcmp olt float %20, 0xC059D1DA00000000\l  %39 = fneg float %35\l  %40 = tail call float @llvm.fma.f32(float %20, float 0x3FF7154760000000,\l... float %39)\l  %41 = tail call float @llvm.fma.f32(float %20, float 0x3E54AE0BE0000000,\l... float %40)\l  %42 = fsub float %35, %36\l  %43 = fadd float %41, %42\l  %44 = tail call float @llvm.exp2.f32(float %43)\l  %45 = fptosi float %36 to i32\l  %46 = tail call float @llvm.amdgcn.ldexp.f32(float %44, i32 %45)\l  %47 = select i1 %38, float 0.000000e+00, float %46\l  %48 = select i1 %37, float 0x7FF0000000000000, float %47\l  br label %51\l}"];
	Node0x6368460 -> Node0x6369610;
	Node0x63684b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%49:\l49:                                               \l  %50 = fmul contract float %20, 0x4005BF0A80000000\l  br label %51\l}"];
	Node0x63684b0 -> Node0x6369610;
	Node0x6369610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi contract float [ %48, %34 ], [ %50, %49 ]\l  %53 = fcmp contract olt float %24, 1.000000e+00\l  br i1 %53, label %54, label %69\l|{<s0>T|<s1>F}}"];
	Node0x6369610:s0 -> Node0x6369950;
	Node0x6369610:s1 -> Node0x63699a0;
	Node0x6369950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%54:\l54:                                               \l  %55 = fmul float %24, 0x3FF7154760000000\l  %56 = tail call float @llvm.rint.f32(float %55)\l  %57 = fcmp ogt float %24, 0x40562E4300000000\l  %58 = fcmp olt float %24, 0xC059D1DA00000000\l  %59 = fneg float %55\l  %60 = tail call float @llvm.fma.f32(float %24, float 0x3FF7154760000000,\l... float %59)\l  %61 = tail call float @llvm.fma.f32(float %24, float 0x3E54AE0BE0000000,\l... float %60)\l  %62 = fsub float %55, %56\l  %63 = fadd float %61, %62\l  %64 = tail call float @llvm.exp2.f32(float %63)\l  %65 = fptosi float %56 to i32\l  %66 = tail call float @llvm.amdgcn.ldexp.f32(float %64, i32 %65)\l  %67 = select i1 %58, float 0.000000e+00, float %66\l  %68 = select i1 %57, float 0x7FF0000000000000, float %67\l  br label %71\l}"];
	Node0x6369950 -> Node0x6367a00;
	Node0x63699a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%69:\l69:                                               \l  %70 = fmul contract float %24, 0x4005BF0A80000000\l  br label %71\l}"];
	Node0x63699a0 -> Node0x6367a00;
	Node0x6367a00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = phi contract float [ %68, %54 ], [ %70, %69 ]\l  %73 = fmul contract float %30, %52\l  %74 = fmul contract float %16, %32\l  %75 = fadd contract float %28, %74\l  %76 = fmul contract float %12, %30\l  %77 = fadd contract float %26, %76\l  %78 = fmul contract float %32, %72\l  %79 = fpext float %77 to double\l  %80 = fpext float %73 to double\l  %81 = fmul contract double %80, 5.000000e-01\l  %82 = fsub contract double %79, %81\l  %83 = fptrunc double %82 to float\l  %84 = getelementptr inbounds float, float addrspace(1)* %2, i64 %10\l  store float %83, float addrspace(1)* %84, align 4, !tbaa !5\l  %85 = fpext float %75 to double\l  %86 = fpext float %78 to double\l  %87 = fmul contract double %86, 5.000000e-01\l  %88 = fsub contract double %85, %87\l  %89 = fptrunc double %88 to float\l  %90 = getelementptr inbounds float, float addrspace(1)* %2, i64 %14\l  store float %89, float addrspace(1)* %90, align 4, !tbaa !5\l  %91 = fadd contract double %81, %79\l  %92 = fptrunc double %91 to float\l  %93 = getelementptr inbounds float, float addrspace(1)* %2, i64 %18\l  store float %92, float addrspace(1)* %93, align 4, !tbaa !5\l  %94 = fadd contract double %87, %85\l  %95 = fptrunc double %94 to float\l  %96 = getelementptr inbounds float, float addrspace(1)* %2, i64 %22\l  store float %95, float addrspace(1)* %96, align 4, !tbaa !5\l  ret void\l}"];
}
