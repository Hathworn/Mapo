digraph "CFG for '_Z18reduceArgMaxKernelPfS_S_ii' function" {
	label="CFG for '_Z18reduceArgMaxKernelPfS_S_ii' function";

	Node0x49d0370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = mul i32 %6, %4\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = add i32 %7, %8\l  %10 = mul nsw i32 %9, %3\l  %11 = sext i32 %10 to i64\l  %12 = getelementptr inbounds float, float addrspace(1)* %0, i64 %11\l  %13 = load float, float addrspace(1)* %12, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %14 = icmp sgt i32 %3, 1\l  br i1 %14, label %15, label %48\l|{<s0>T|<s1>F}}"];
	Node0x49d0370:s0 -> Node0x49cf5d0;
	Node0x49d0370:s1 -> Node0x49d2080;
	Node0x49cf5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%15:\l15:                                               \l  %16 = add i32 %3, -1\l  %17 = add i32 %3, -2\l  %18 = and i32 %16, 7\l  %19 = icmp ult i32 %17, 7\l  br i1 %19, label %22, label %20\l|{<s0>T|<s1>F}}"];
	Node0x49cf5d0:s0 -> Node0x49d2540;
	Node0x49cf5d0:s1 -> Node0x49d2590;
	Node0x49d2590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%20:\l20:                                               \l  %21 = and i32 %16, -8\l  br label %54\l}"];
	Node0x49d2590 -> Node0x49d2760;
	Node0x49d2540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%22:\l22:                                               \l  %23 = phi float [ undef, %15 ], [ %120, %54 ]\l  %24 = phi i32 [ undef, %15 ], [ %121, %54 ]\l  %25 = phi i32 [ 1, %15 ], [ %122, %54 ]\l  %26 = phi i32 [ 0, %15 ], [ %121, %54 ]\l  %27 = phi float [ %13, %15 ], [ %120, %54 ]\l  %28 = icmp eq i32 %18, 0\l  br i1 %28, label %44, label %29\l|{<s0>T|<s1>F}}"];
	Node0x49d2540:s0 -> Node0x49d3180;
	Node0x49d2540:s1 -> Node0x49d3210;
	Node0x49d3210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %41, %29 ], [ %25, %22 ]\l  %31 = phi i32 [ %40, %29 ], [ %26, %22 ]\l  %32 = phi float [ %39, %29 ], [ %27, %22 ]\l  %33 = phi i32 [ %42, %29 ], [ 0, %22 ]\l  %34 = add nsw i32 %30, %10\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %38 = fcmp contract ogt float %37, %32\l  %39 = select i1 %38, float %37, float %32\l  %40 = select i1 %38, i32 %30, i32 %31\l  %41 = add nuw nsw i32 %30, 1\l  %42 = add i32 %33, 1\l  %43 = icmp eq i32 %42, %18\l  br i1 %43, label %44, label %29, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x49d3210:s0 -> Node0x49d3180;
	Node0x49d3210:s1 -> Node0x49d3210;
	Node0x49d3180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%44:\l44:                                               \l  %45 = phi float [ %23, %22 ], [ %39, %29 ]\l  %46 = phi i32 [ %24, %22 ], [ %40, %29 ]\l  %47 = sitofp i32 %46 to float\l  br label %48\l}"];
	Node0x49d3180 -> Node0x49d2080;
	Node0x49d2080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%48:\l48:                                               \l  %49 = phi float [ %13, %5 ], [ %45, %44 ]\l  %50 = phi float [ 0.000000e+00, %5 ], [ %47, %44 ]\l  %51 = sext i32 %9 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  store float %49, float addrspace(1)* %52, align 4, !tbaa !5\l  %53 = getelementptr inbounds float, float addrspace(1)* %2, i64 %51\l  store float %50, float addrspace(1)* %53, align 4, !tbaa !5\l  ret void\l}"];
	Node0x49d2760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%54:\l54:                                               \l  %55 = phi i32 [ 1, %20 ], [ %122, %54 ]\l  %56 = phi i32 [ 0, %20 ], [ %121, %54 ]\l  %57 = phi float [ %13, %20 ], [ %120, %54 ]\l  %58 = phi i32 [ 0, %20 ], [ %123, %54 ]\l  %59 = add nsw i32 %55, %10\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %63 = fcmp contract ogt float %62, %57\l  %64 = select i1 %63, float %62, float %57\l  %65 = select i1 %63, i32 %55, i32 %56\l  %66 = add nuw nsw i32 %55, 1\l  %67 = add nsw i32 %66, %10\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %71 = fcmp contract ogt float %70, %64\l  %72 = select i1 %71, float %70, float %64\l  %73 = select i1 %71, i32 %66, i32 %65\l  %74 = add nuw nsw i32 %55, 2\l  %75 = add nsw i32 %74, %10\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %79 = fcmp contract ogt float %78, %72\l  %80 = select i1 %79, float %78, float %72\l  %81 = select i1 %79, i32 %74, i32 %73\l  %82 = add nuw nsw i32 %55, 3\l  %83 = add nsw i32 %82, %10\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %0, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %87 = fcmp contract ogt float %86, %80\l  %88 = select i1 %87, float %86, float %80\l  %89 = select i1 %87, i32 %82, i32 %81\l  %90 = add nuw nsw i32 %55, 4\l  %91 = add nsw i32 %90, %10\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %0, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %95 = fcmp contract ogt float %94, %88\l  %96 = select i1 %95, float %94, float %88\l  %97 = select i1 %95, i32 %90, i32 %89\l  %98 = add nuw nsw i32 %55, 5\l  %99 = add nsw i32 %98, %10\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %0, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %103 = fcmp contract ogt float %102, %96\l  %104 = select i1 %103, float %102, float %96\l  %105 = select i1 %103, i32 %98, i32 %97\l  %106 = add nuw nsw i32 %55, 6\l  %107 = add nsw i32 %106, %10\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %0, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %111 = fcmp contract ogt float %110, %104\l  %112 = select i1 %111, float %110, float %104\l  %113 = select i1 %111, i32 %106, i32 %105\l  %114 = add nuw nsw i32 %55, 7\l  %115 = add nsw i32 %114, %10\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %0, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %119 = fcmp contract ogt float %118, %112\l  %120 = select i1 %119, float %118, float %112\l  %121 = select i1 %119, i32 %114, i32 %113\l  %122 = add nuw nsw i32 %55, 8\l  %123 = add i32 %58, 8\l  %124 = icmp eq i32 %123, %21\l  br i1 %124, label %22, label %54, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x49d2760:s0 -> Node0x49d2540;
	Node0x49d2760:s1 -> Node0x49d2760;
}
