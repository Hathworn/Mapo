digraph "CFG for '_Z19reduceUnrolling8NewPiS_j' function" {
	label="CFG for '_Z19reduceUnrolling8NewPiS_j' function";

	Node0x4a11c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = shl i32 %5, 3\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %4\l  %14 = zext i32 %12 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %14\l  %16 = mul nuw nsw i32 %10, 7\l  %17 = add i32 %13, %16\l  %18 = icmp ult i32 %17, %2\l  br i1 %18, label %19, label %45\l|{<s0>T|<s1>F}}"];
	Node0x4a11c00:s0 -> Node0x4a12990;
	Node0x4a11c00:s1 -> Node0x4a13f00;
	Node0x4a12990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%19:\l19:                                               \l  %20 = zext i32 %13 to i64\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %20\l  %22 = zext i16 %9 to i64\l  %23 = load i32, i32 addrspace(1)* %21, align 4, !tbaa !7\l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %22\l  %25 = load i32, i32 addrspace(1)* %24, align 4, !tbaa !7\l  %26 = add nsw i32 %25, %23\l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %24, i64 %22\l  %28 = load i32, i32 addrspace(1)* %27, align 4, !tbaa !7\l  %29 = add nsw i32 %28, %26\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %27, i64 %22\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7\l  %32 = add nsw i32 %31, %29\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %30, i64 %22\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !7\l  %35 = add nsw i32 %34, %32\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %33, i64 %22\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !7\l  %38 = add nsw i32 %37, %35\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %36, i64 %22\l  %40 = load i32, i32 addrspace(1)* %39, align 4, !tbaa !7\l  %41 = add nsw i32 %40, %38\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %39, i64 %22\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !7\l  %44 = add nsw i32 %43, %41\l  store i32 %44, i32 addrspace(1)* %21, align 4, !tbaa !7\l  br label %45\l}"];
	Node0x4a12990 -> Node0x4a13f00;
	Node0x4a13f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%45:\l45:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %46 = icmp ult i16 %9, 2\l  br i1 %46, label %50, label %47\l|{<s0>T|<s1>F}}"];
	Node0x4a13f00:s0 -> Node0x4a15a00;
	Node0x4a13f00:s1 -> Node0x4a15a90;
	Node0x4a15a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%47:\l47:                                               \l  %48 = zext i32 %4 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %48\l  br label %52\l}"];
	Node0x4a15a90 -> Node0x4a15ce0;
	Node0x4a15a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%50:\l50:                                               \l  %51 = icmp eq i32 %4, 0\l  br i1 %51, label %65, label %69\l|{<s0>T|<s1>F}}"];
	Node0x4a15a00:s0 -> Node0x4a15e60;
	Node0x4a15a00:s1 -> Node0x4a15eb0;
	Node0x4a15ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi i32 [ %10, %47 ], [ %54, %63 ]\l  %54 = lshr i32 %53, 1\l  %55 = icmp ult i32 %4, %54\l  br i1 %55, label %56, label %63\l|{<s0>T|<s1>F}}"];
	Node0x4a15ce0:s0 -> Node0x4a162b0;
	Node0x4a15ce0:s1 -> Node0x4a16020;
	Node0x4a162b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%56:\l56:                                               \l  %57 = add nuw nsw i32 %54, %4\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %58\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !7\l  %61 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !7\l  %62 = add nsw i32 %61, %60\l  store i32 %62, i32 addrspace(1)* %49, align 4, !tbaa !7\l  br label %63\l}"];
	Node0x4a162b0 -> Node0x4a16020;
	Node0x4a16020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %64 = icmp ult i32 %53, 4\l  br i1 %64, label %50, label %52, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4a16020:s0 -> Node0x4a15a00;
	Node0x4a16020:s1 -> Node0x4a15ce0;
	Node0x4a15e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%65:\l65:                                               \l  %66 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !7\l  %67 = zext i32 %5 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %67\l  store i32 %66, i32 addrspace(1)* %68, align 4, !tbaa !7\l  br label %69\l}"];
	Node0x4a15e60 -> Node0x4a15eb0;
	Node0x4a15eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%69:\l69:                                               \l  ret void\l}"];
}
