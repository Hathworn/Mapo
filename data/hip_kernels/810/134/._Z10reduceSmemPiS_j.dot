digraph "CFG for '_Z10reduceSmemPiS_j' function" {
	label="CFG for '_Z10reduceSmemPiS_j' function";

	Node0x51ea490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = icmp ult i32 %12, %2\l  br i1 %13, label %14, label %106\l|{<s0>T|<s1>F}}"];
	Node0x51ea490:s0 -> Node0x51eb220;
	Node0x51ea490:s1 -> Node0x51ec420;
	Node0x51eb220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%14:\l14:                                               \l  %15 = zext i32 %11 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %15\l  %17 = zext i32 %4 to i64\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %16, i64 %17\l  %19 = load i32, i32 addrspace(1)* %18, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %20 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ10reduceSmemPiS_jE4smem, i32 0, i32 %4\l  store i32 %19, i32 addrspace(3)* %20, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %21 = icmp ugt i16 %9, 1023\l  %22 = icmp ult i32 %4, 512\l  %23 = select i1 %21, i1 %22, i1 false\l  br i1 %23, label %24, label %30\l|{<s0>T|<s1>F}}"];
	Node0x51eb220:s0 -> Node0x51edca0;
	Node0x51eb220:s1 -> Node0x51edd30;
	Node0x51edca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%24:\l24:                                               \l  %25 = add nuw nsw i32 %4, 512\l  %26 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ10reduceSmemPiS_jE4smem, i32 0, i32 %25\l  %27 = load i32, i32 addrspace(3)* %26, align 4, !tbaa !7\l  %28 = load i32, i32 addrspace(3)* %20, align 4, !tbaa !7\l  %29 = add nsw i32 %28, %27\l  store i32 %29, i32 addrspace(3)* %20, align 4, !tbaa !7\l  br label %30\l}"];
	Node0x51edca0 -> Node0x51edd30;
	Node0x51edd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%30:\l30:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %31 = icmp ugt i16 %9, 511\l  %32 = icmp ult i32 %4, 256\l  %33 = select i1 %31, i1 %32, i1 false\l  br i1 %33, label %34, label %40\l|{<s0>T|<s1>F}}"];
	Node0x51edd30:s0 -> Node0x51ec720;
	Node0x51edd30:s1 -> Node0x51ee740;
	Node0x51ec720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%34:\l34:                                               \l  %35 = add nuw nsw i32 %4, 256\l  %36 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ10reduceSmemPiS_jE4smem, i32 0, i32 %35\l  %37 = load i32, i32 addrspace(3)* %36, align 4, !tbaa !7\l  %38 = load i32, i32 addrspace(3)* %20, align 4, !tbaa !7\l  %39 = add nsw i32 %38, %37\l  store i32 %39, i32 addrspace(3)* %20, align 4, !tbaa !7\l  br label %40\l}"];
	Node0x51ec720 -> Node0x51ee740;
	Node0x51ee740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%40:\l40:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %41 = icmp ugt i16 %9, 255\l  %42 = icmp ult i32 %4, 128\l  %43 = select i1 %41, i1 %42, i1 false\l  br i1 %43, label %44, label %50\l|{<s0>T|<s1>F}}"];
	Node0x51ee740:s0 -> Node0x51eefa0;
	Node0x51ee740:s1 -> Node0x51eeff0;
	Node0x51eefa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%44:\l44:                                               \l  %45 = add nuw nsw i32 %4, 128\l  %46 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ10reduceSmemPiS_jE4smem, i32 0, i32 %45\l  %47 = load i32, i32 addrspace(3)* %46, align 4, !tbaa !7\l  %48 = load i32, i32 addrspace(3)* %20, align 4, !tbaa !7\l  %49 = add nsw i32 %48, %47\l  store i32 %49, i32 addrspace(3)* %20, align 4, !tbaa !7\l  br label %50\l}"];
	Node0x51eefa0 -> Node0x51eeff0;
	Node0x51eeff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%50:\l50:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %51 = icmp ugt i16 %9, 127\l  %52 = icmp ult i32 %4, 64\l  %53 = select i1 %51, i1 %52, i1 false\l  br i1 %53, label %54, label %60\l|{<s0>T|<s1>F}}"];
	Node0x51eeff0:s0 -> Node0x51ef850;
	Node0x51eeff0:s1 -> Node0x51ef8a0;
	Node0x51ef850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%54:\l54:                                               \l  %55 = add nuw nsw i32 %4, 64\l  %56 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ10reduceSmemPiS_jE4smem, i32 0, i32 %55\l  %57 = load i32, i32 addrspace(3)* %56, align 4, !tbaa !7\l  %58 = load i32, i32 addrspace(3)* %20, align 4, !tbaa !7\l  %59 = add nsw i32 %58, %57\l  store i32 %59, i32 addrspace(3)* %20, align 4, !tbaa !7\l  br label %60\l}"];
	Node0x51ef850 -> Node0x51ef8a0;
	Node0x51ef8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%60:\l60:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %61 = icmp ult i32 %4, 32\l  br i1 %61, label %62, label %100\l|{<s0>T|<s1>F}}"];
	Node0x51ef8a0:s0 -> Node0x51eff90;
	Node0x51ef8a0:s1 -> Node0x51effe0;
	Node0x51eff90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%62:\l62:                                               \l  %63 = add nuw nsw i32 %4, 32\l  %64 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ10reduceSmemPiS_jE4smem, i32 0, i32 %63\l  %65 = addrspacecast i32 addrspace(3)* %64 to i32*\l  %66 = load volatile i32, i32* %65, align 4, !tbaa !7\l  %67 = addrspacecast i32 addrspace(3)* %20 to i32*\l  %68 = load volatile i32, i32* %67, align 4, !tbaa !7\l  %69 = add nsw i32 %68, %66\l  store volatile i32 %69, i32* %67, align 4, !tbaa !7\l  %70 = add nuw nsw i32 %4, 16\l  %71 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ10reduceSmemPiS_jE4smem, i32 0, i32 %70\l  %72 = addrspacecast i32 addrspace(3)* %71 to i32*\l  %73 = load volatile i32, i32* %72, align 4, !tbaa !7\l  %74 = load volatile i32, i32* %67, align 4, !tbaa !7\l  %75 = add nsw i32 %74, %73\l  store volatile i32 %75, i32* %67, align 4, !tbaa !7\l  %76 = add nuw nsw i32 %4, 8\l  %77 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ10reduceSmemPiS_jE4smem, i32 0, i32 %76\l  %78 = addrspacecast i32 addrspace(3)* %77 to i32*\l  %79 = load volatile i32, i32* %78, align 4, !tbaa !7\l  %80 = load volatile i32, i32* %67, align 4, !tbaa !7\l  %81 = add nsw i32 %80, %79\l  store volatile i32 %81, i32* %67, align 4, !tbaa !7\l  %82 = add nuw nsw i32 %4, 4\l  %83 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ10reduceSmemPiS_jE4smem, i32 0, i32 %82\l  %84 = addrspacecast i32 addrspace(3)* %83 to i32*\l  %85 = load volatile i32, i32* %84, align 4, !tbaa !7\l  %86 = load volatile i32, i32* %67, align 4, !tbaa !7\l  %87 = add nsw i32 %86, %85\l  store volatile i32 %87, i32* %67, align 4, !tbaa !7\l  %88 = add nuw nsw i32 %4, 2\l  %89 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ10reduceSmemPiS_jE4smem, i32 0, i32 %88\l  %90 = addrspacecast i32 addrspace(3)* %89 to i32*\l  %91 = load volatile i32, i32* %90, align 4, !tbaa !7\l  %92 = load volatile i32, i32* %67, align 4, !tbaa !7\l  %93 = add nsw i32 %92, %91\l  store volatile i32 %93, i32* %67, align 4, !tbaa !7\l  %94 = add nuw nsw i32 %4, 1\l  %95 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ10reduceSmemPiS_jE4smem, i32 0, i32 %94\l  %96 = addrspacecast i32 addrspace(3)* %95 to i32*\l  %97 = load volatile i32, i32* %96, align 4, !tbaa !7\l  %98 = load volatile i32, i32* %67, align 4, !tbaa !7\l  %99 = add nsw i32 %98, %97\l  store volatile i32 %99, i32* %67, align 4, !tbaa !7\l  br label %100\l}"];
	Node0x51eff90 -> Node0x51effe0;
	Node0x51effe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%100:\l100:                                              \l  %101 = icmp eq i32 %4, 0\l  br i1 %101, label %102, label %106\l|{<s0>T|<s1>F}}"];
	Node0x51effe0:s0 -> Node0x51f1c10;
	Node0x51effe0:s1 -> Node0x51ec420;
	Node0x51f1c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%102:\l102:                                              \l  %103 = load i32, i32 addrspace(3)* getelementptr inbounds ([128 x i32], [128\l... x i32] addrspace(3)* @_ZZ10reduceSmemPiS_jE4smem, i32 0, i32 0), align 16,\l... !tbaa !7\l  %104 = zext i32 %5 to i64\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %104\l  store i32 %103, i32 addrspace(1)* %105, align 4, !tbaa !7\l  br label %106\l}"];
	Node0x51f1c10 -> Node0x51ec420;
	Node0x51ec420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  ret void\l}"];
}
