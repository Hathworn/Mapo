digraph "CFG for '_Z16reduceNeighboredPiS_j' function" {
	label="CFG for '_Z16reduceNeighboredPiS_j' function";

	Node0x460b5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = zext i32 %11 to i64\l  %14 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %13\l  %15 = icmp ult i32 %12, %2\l  br i1 %15, label %16, label %42\l|{<s0>T|<s1>F}}"];
	Node0x460b5f0:s0 -> Node0x460c380;
	Node0x460b5f0:s1 -> Node0x460d690;
	Node0x460c380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%16:\l16:                                               \l  %17 = icmp ugt i16 %9, 1\l  br i1 %17, label %18, label %21\l|{<s0>T|<s1>F}}"];
	Node0x460c380:s0 -> Node0x460d8e0;
	Node0x460c380:s1 -> Node0x460d930;
	Node0x460d8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%18:\l18:                                               \l  %19 = zext i32 %4 to i64\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %14, i64 %19\l  br label %23\l}"];
	Node0x460d8e0 -> Node0x460db80;
	Node0x460d930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%21:\l21:                                               \l  %22 = icmp eq i32 %4, 0\l  br i1 %22, label %38, label %42\l|{<s0>T|<s1>F}}"];
	Node0x460d930:s0 -> Node0x460dd00;
	Node0x460d930:s1 -> Node0x460d690;
	Node0x460db80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i32 [ 1, %18 ], [ %25, %36 ]\l  %25 = shl nsw i32 %24, 1\l  %26 = add i32 %25, 1023\l  %27 = and i32 %26, %4\l  %28 = icmp eq i32 %27, 0\l  br i1 %28, label %29, label %36\l|{<s0>T|<s1>F}}"];
	Node0x460db80:s0 -> Node0x460e1e0;
	Node0x460db80:s1 -> Node0x460de60;
	Node0x460e1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%29:\l29:                                               \l  %30 = add i32 %24, %4\l  %31 = zext i32 %30 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %14, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !7\l  %34 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !7\l  %35 = add nsw i32 %34, %33\l  store i32 %35, i32 addrspace(1)* %20, align 4, !tbaa !7\l  br label %36\l}"];
	Node0x460e1e0 -> Node0x460de60;
	Node0x460de60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %37 = icmp ult i32 %25, %10\l  br i1 %37, label %23, label %21, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x460de60:s0 -> Node0x460db80;
	Node0x460de60:s1 -> Node0x460d930;
	Node0x460dd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%38:\l38:                                               \l  %39 = load i32, i32 addrspace(1)* %14, align 4, !tbaa !7\l  %40 = zext i32 %5 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %40\l  store i32 %39, i32 addrspace(1)* %41, align 4, !tbaa !7\l  br label %42\l}"];
	Node0x460dd00 -> Node0x460d690;
	Node0x460d690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%42:\l42:                                               \l  ret void\l}"];
}
