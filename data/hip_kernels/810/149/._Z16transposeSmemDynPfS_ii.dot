digraph "CFG for '_Z16transposeSmemDynPfS_ii' function" {
	label="CFG for '_Z16transposeSmemDynPfS_ii' function";

	Node0x5694e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %6, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 2, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %20 = mul nuw nsw i32 %19, %10\l  %21 = add nuw nsw i32 %20, %12\l  %22 = freeze i32 %21\l  %23 = freeze i32 %17\l  %24 = udiv i32 %22, %23\l  %25 = mul i32 %24, %23\l  %26 = sub i32 %22, %25\l  %27 = add i32 %18, %26\l  %28 = add i32 %11, %24\l  %29 = icmp ult i32 %27, %2\l  %30 = icmp ult i32 %28, %3\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5694e10:s0 -> Node0x5698c80;
	Node0x5694e10:s1 -> Node0x5698d10;
	Node0x5698c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = mul i32 %28, %3\l  %34 = add i32 %33, %27\l  %35 = mul nuw nsw i32 %26, %10\l  %36 = add nuw nsw i32 %35, %24\l  %37 = add i32 %18, %19\l  %38 = mul i32 %37, %2\l  %39 = add i32 %11, %12\l  %40 = add i32 %39, %38\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @tile,\l... i32 0, i32 %21\l  store float %43, float addrspace(3)* %44, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %45 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @tile,\l... i32 0, i32 %36\l  %46 = load float, float addrspace(3)* %45, align 4, !tbaa !7\l  %47 = zext i32 %34 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  store float %46, float addrspace(1)* %48, align 4, !tbaa !7\l  br label %49\l}"];
	Node0x5698c80 -> Node0x5698d10;
	Node0x5698d10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  ret void\l}"];
}
