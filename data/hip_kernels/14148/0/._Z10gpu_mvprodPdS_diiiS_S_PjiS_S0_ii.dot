digraph "CFG for '_Z10gpu_mvprodPdS_diiiS_S_PjiS_S0_ii' function" {
	label="CFG for '_Z10gpu_mvprodPdS_diiiS_S_PjiS_S0_ii' function";

	Node0x6256550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%14:\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %16 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %17 = getelementptr i8, i8 addrspace(4)* %16, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %16, i64 12\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 4, !tbaa !7\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %25 = mul i32 %24, %20\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %27 = mul i32 %26, %20\l  %28 = udiv i32 %23, %20\l  %29 = mul i32 %28, %20\l  %30 = icmp ugt i32 %23, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = mul i32 %27, %32\l  %34 = add i32 %33, %25\l  %35 = add i32 %34, %15\l  %36 = icmp slt i32 %35, %5\l  br i1 %36, label %37, label %446\l|{<s0>T|<s1>F}}"];
	Node0x6256550:s0 -> Node0x6257d00;
	Node0x6256550:s1 -> Node0x62596c0;
	Node0x6257d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%37:\l37:                                               \l  %38 = sext i32 %35 to i64\l  %39 = getelementptr inbounds double, double addrspace(1)* %6, i64 %38\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %41 = getelementptr inbounds double, double addrspace(1)* %0, i64 %38\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %43 = fmul contract double %40, %42\l  %44 = freeze i32 %35\l  %45 = freeze i32 %4\l  %46 = sdiv i32 %44, %45\l  %47 = mul i32 %46, %45\l  %48 = sub i32 %44, %47\l  %49 = mul nsw i32 %13, %12\l  %50 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @shared, i32 0, i32 %49\l  %51 = bitcast double addrspace(3)* %50 to i32 addrspace(3)*\l  %52 = udiv i32 %34, %4\l  %53 = icmp ult i32 %15, %13\l  br i1 %53, label %54, label %137\l|{<s0>T|<s1>F}}"];
	Node0x6257d00:s0 -> Node0x625aea0;
	Node0x6257d00:s1 -> Node0x625af30;
	Node0x625aea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%54:\l54:                                               \l  %55 = add i32 %52, %15\l  %56 = icmp ult i32 %55, %3\l  %57 = icmp sgt i32 %12, 0\l  %58 = select i1 %56, i1 %57, i1 false\l  br i1 %58, label %59, label %137\l|{<s0>T|<s1>F}}"];
	Node0x625aea0:s0 -> Node0x625b300;
	Node0x625aea0:s1 -> Node0x625af30;
	Node0x625b300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%59:\l59:                                               \l  %60 = and i32 %12, 3\l  %61 = icmp ult i32 %12, 4\l  br i1 %61, label %117, label %62\l|{<s0>T|<s1>F}}"];
	Node0x625b300:s0 -> Node0x625b580;
	Node0x625b300:s1 -> Node0x625b5d0;
	Node0x625b5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%62:\l62:                                               \l  %63 = and i32 %12, -4\l  br label %64\l}"];
	Node0x625b5d0 -> Node0x625b7d0;
	Node0x625b7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%64:\l64:                                               \l  %65 = phi i32 [ 0, %62 ], [ %114, %64 ]\l  %66 = phi i32 [ 0, %62 ], [ %115, %64 ]\l  %67 = mul nsw i32 %65, %3\l  %68 = add i32 %67, %55\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds double, double addrspace(1)* %10, i64 %69\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %72 = mul nsw i32 %65, %13\l  %73 = add i32 %72, %15\l  %74 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @shared, i32 0, i32 %73\l  store double %71, double addrspace(3)* %74, align 8, !tbaa !16\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %69\l  %76 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !20, !amdgpu.noclobber\l... !6\l  %77 = getelementptr inbounds i32, i32 addrspace(3)* %51, i32 %73\l  store i32 %76, i32 addrspace(3)* %77, align 4, !tbaa !20\l  %78 = or i32 %65, 1\l  %79 = mul nsw i32 %78, %3\l  %80 = add i32 %79, %55\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds double, double addrspace(1)* %10, i64 %81\l  %83 = load double, double addrspace(1)* %82, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %84 = mul nsw i32 %78, %13\l  %85 = add i32 %84, %15\l  %86 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @shared, i32 0, i32 %85\l  store double %83, double addrspace(3)* %86, align 8, !tbaa !16\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %81\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !20, !amdgpu.noclobber\l... !6\l  %89 = getelementptr inbounds i32, i32 addrspace(3)* %51, i32 %85\l  store i32 %88, i32 addrspace(3)* %89, align 4, !tbaa !20\l  %90 = or i32 %65, 2\l  %91 = mul nsw i32 %90, %3\l  %92 = add i32 %91, %55\l  %93 = zext i32 %92 to i64\l  %94 = getelementptr inbounds double, double addrspace(1)* %10, i64 %93\l  %95 = load double, double addrspace(1)* %94, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %96 = mul nsw i32 %90, %13\l  %97 = add i32 %96, %15\l  %98 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @shared, i32 0, i32 %97\l  store double %95, double addrspace(3)* %98, align 8, !tbaa !16\l  %99 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %93\l  %100 = load i32, i32 addrspace(1)* %99, align 4, !tbaa !20,\l... !amdgpu.noclobber !6\l  %101 = getelementptr inbounds i32, i32 addrspace(3)* %51, i32 %97\l  store i32 %100, i32 addrspace(3)* %101, align 4, !tbaa !20\l  %102 = or i32 %65, 3\l  %103 = mul nsw i32 %102, %3\l  %104 = add i32 %103, %55\l  %105 = zext i32 %104 to i64\l  %106 = getelementptr inbounds double, double addrspace(1)* %10, i64 %105\l  %107 = load double, double addrspace(1)* %106, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %108 = mul nsw i32 %102, %13\l  %109 = add i32 %108, %15\l  %110 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @shared, i32 0, i32 %109\l  store double %107, double addrspace(3)* %110, align 8, !tbaa !16\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %105\l  %112 = load i32, i32 addrspace(1)* %111, align 4, !tbaa !20,\l... !amdgpu.noclobber !6\l  %113 = getelementptr inbounds i32, i32 addrspace(3)* %51, i32 %109\l  store i32 %112, i32 addrspace(3)* %113, align 4, !tbaa !20\l  %114 = add nuw nsw i32 %65, 4\l  %115 = add i32 %66, 4\l  %116 = icmp eq i32 %115, %63\l  br i1 %116, label %117, label %64, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x625b7d0:s0 -> Node0x625b580;
	Node0x625b7d0:s1 -> Node0x625b7d0;
	Node0x625b580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%117:\l117:                                              \l  %118 = phi i32 [ 0, %59 ], [ %114, %64 ]\l  %119 = icmp eq i32 %60, 0\l  br i1 %119, label %137, label %120\l|{<s0>T|<s1>F}}"];
	Node0x625b580:s0 -> Node0x625af30;
	Node0x625b580:s1 -> Node0x625e990;
	Node0x625e990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%120:\l120:                                              \l  %121 = phi i32 [ %134, %120 ], [ %118, %117 ]\l  %122 = phi i32 [ %135, %120 ], [ 0, %117 ]\l  %123 = mul nsw i32 %121, %3\l  %124 = add i32 %123, %55\l  %125 = zext i32 %124 to i64\l  %126 = getelementptr inbounds double, double addrspace(1)* %10, i64 %125\l  %127 = load double, double addrspace(1)* %126, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %128 = mul nsw i32 %121, %13\l  %129 = add i32 %128, %15\l  %130 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @shared, i32 0, i32 %129\l  store double %127, double addrspace(3)* %130, align 8, !tbaa !16\l  %131 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %125\l  %132 = load i32, i32 addrspace(1)* %131, align 4, !tbaa !20,\l... !amdgpu.noclobber !6\l  %133 = getelementptr inbounds i32, i32 addrspace(3)* %51, i32 %129\l  store i32 %132, i32 addrspace(3)* %133, align 4, !tbaa !20\l  %134 = add nuw nsw i32 %121, 1\l  %135 = add i32 %122, 1\l  %136 = icmp eq i32 %135, %60\l  br i1 %136, label %137, label %120, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x625e990:s0 -> Node0x625af30;
	Node0x625e990:s1 -> Node0x625e990;
	Node0x625af30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%137:\l137:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %138 = icmp sgt i32 %12, 0\l  br i1 %138, label %139, label %170\l|{<s0>T|<s1>F}}"];
	Node0x625af30:s0 -> Node0x625fe60;
	Node0x625af30:s1 -> Node0x625feb0;
	Node0x625fe60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%139:\l139:                                              \l  %140 = sub nsw i32 %46, %52\l  %141 = and i32 %12, 7\l  %142 = icmp ult i32 %12, 8\l  br i1 %142, label %145, label %143\l|{<s0>T|<s1>F}}"];
	Node0x625fe60:s0 -> Node0x62601d0;
	Node0x625fe60:s1 -> Node0x6260220;
	Node0x6260220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%143:\l143:                                              \l  %144 = and i32 %12, -8\l  br label %179\l}"];
	Node0x6260220 -> Node0x6260420;
	Node0x62601d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%145:\l145:                                              \l  %146 = phi double [ undef, %139 ], [ %293, %179 ]\l  %147 = phi i32 [ 0, %139 ], [ %294, %179 ]\l  %148 = phi double [ %43, %139 ], [ %293, %179 ]\l  %149 = icmp eq i32 %141, 0\l  br i1 %149, label %170, label %150\l|{<s0>T|<s1>F}}"];
	Node0x62601d0:s0 -> Node0x625feb0;
	Node0x62601d0:s1 -> Node0x6260c40;
	Node0x6260c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%150:\l150:                                              \l  %151 = phi i32 [ %167, %150 ], [ %147, %145 ]\l  %152 = phi double [ %166, %150 ], [ %148, %145 ]\l  %153 = phi i32 [ %168, %150 ], [ 0, %145 ]\l  %154 = mul nsw i32 %151, %13\l  %155 = add nsw i32 %154, %140\l  %156 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @shared, i32 0, i32 %155\l  %157 = load double, double addrspace(3)* %156, align 8, !tbaa !16\l  %158 = getelementptr inbounds i32, i32 addrspace(3)* %51, i32 %155\l  %159 = load i32, i32 addrspace(3)* %158, align 4, !tbaa !20\l  %160 = mul i32 %159, %4\l  %161 = add i32 %160, %48\l  %162 = zext i32 %161 to i64\l  %163 = getelementptr inbounds double, double addrspace(1)* %0, i64 %162\l  %164 = load double, double addrspace(1)* %163, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %165 = fmul contract double %157, %164\l  %166 = fadd contract double %152, %165\l  %167 = add nuw nsw i32 %151, 1\l  %168 = add i32 %153, 1\l  %169 = icmp eq i32 %168, %141\l  br i1 %169, label %170, label %150, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x6260c40:s0 -> Node0x625feb0;
	Node0x6260c40:s1 -> Node0x6260c40;
	Node0x625feb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%170:\l170:                                              \l  %171 = phi double [ %43, %137 ], [ %146, %145 ], [ %166, %150 ]\l  %172 = icmp sgt i32 %9, 0\l  br i1 %172, label %173, label %322\l|{<s0>T|<s1>F}}"];
	Node0x625feb0:s0 -> Node0x6261cb0;
	Node0x625feb0:s1 -> Node0x6261d00;
	Node0x6261cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%173:\l173:                                              \l  %174 = mul nsw i32 %46, %4\l  %175 = and i32 %9, 7\l  %176 = icmp ult i32 %9, 8\l  br i1 %176, label %297, label %177\l|{<s0>T|<s1>F}}"];
	Node0x6261cb0:s0 -> Node0x6261ff0;
	Node0x6261cb0:s1 -> Node0x6262040;
	Node0x6262040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%177:\l177:                                              \l  %178 = and i32 %9, -8\l  br label %328\l}"];
	Node0x6262040 -> Node0x6262210;
	Node0x6260420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%179:\l179:                                              \l  %180 = phi i32 [ 0, %143 ], [ %294, %179 ]\l  %181 = phi double [ %43, %143 ], [ %293, %179 ]\l  %182 = phi i32 [ 0, %143 ], [ %295, %179 ]\l  %183 = mul nsw i32 %180, %13\l  %184 = add nsw i32 %183, %140\l  %185 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @shared, i32 0, i32 %184\l  %186 = load double, double addrspace(3)* %185, align 8, !tbaa !16\l  %187 = getelementptr inbounds i32, i32 addrspace(3)* %51, i32 %184\l  %188 = load i32, i32 addrspace(3)* %187, align 4, !tbaa !20\l  %189 = mul i32 %188, %4\l  %190 = add i32 %189, %48\l  %191 = zext i32 %190 to i64\l  %192 = getelementptr inbounds double, double addrspace(1)* %0, i64 %191\l  %193 = load double, double addrspace(1)* %192, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %194 = fmul contract double %186, %193\l  %195 = fadd contract double %181, %194\l  %196 = or i32 %180, 1\l  %197 = mul nsw i32 %196, %13\l  %198 = add nsw i32 %197, %140\l  %199 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @shared, i32 0, i32 %198\l  %200 = load double, double addrspace(3)* %199, align 8, !tbaa !16\l  %201 = getelementptr inbounds i32, i32 addrspace(3)* %51, i32 %198\l  %202 = load i32, i32 addrspace(3)* %201, align 4, !tbaa !20\l  %203 = mul i32 %202, %4\l  %204 = add i32 %203, %48\l  %205 = zext i32 %204 to i64\l  %206 = getelementptr inbounds double, double addrspace(1)* %0, i64 %205\l  %207 = load double, double addrspace(1)* %206, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %208 = fmul contract double %200, %207\l  %209 = fadd contract double %195, %208\l  %210 = or i32 %180, 2\l  %211 = mul nsw i32 %210, %13\l  %212 = add nsw i32 %211, %140\l  %213 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @shared, i32 0, i32 %212\l  %214 = load double, double addrspace(3)* %213, align 8, !tbaa !16\l  %215 = getelementptr inbounds i32, i32 addrspace(3)* %51, i32 %212\l  %216 = load i32, i32 addrspace(3)* %215, align 4, !tbaa !20\l  %217 = mul i32 %216, %4\l  %218 = add i32 %217, %48\l  %219 = zext i32 %218 to i64\l  %220 = getelementptr inbounds double, double addrspace(1)* %0, i64 %219\l  %221 = load double, double addrspace(1)* %220, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %222 = fmul contract double %214, %221\l  %223 = fadd contract double %209, %222\l  %224 = or i32 %180, 3\l  %225 = mul nsw i32 %224, %13\l  %226 = add nsw i32 %225, %140\l  %227 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @shared, i32 0, i32 %226\l  %228 = load double, double addrspace(3)* %227, align 8, !tbaa !16\l  %229 = getelementptr inbounds i32, i32 addrspace(3)* %51, i32 %226\l  %230 = load i32, i32 addrspace(3)* %229, align 4, !tbaa !20\l  %231 = mul i32 %230, %4\l  %232 = add i32 %231, %48\l  %233 = zext i32 %232 to i64\l  %234 = getelementptr inbounds double, double addrspace(1)* %0, i64 %233\l  %235 = load double, double addrspace(1)* %234, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %236 = fmul contract double %228, %235\l  %237 = fadd contract double %223, %236\l  %238 = or i32 %180, 4\l  %239 = mul nsw i32 %238, %13\l  %240 = add nsw i32 %239, %140\l  %241 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @shared, i32 0, i32 %240\l  %242 = load double, double addrspace(3)* %241, align 8, !tbaa !16\l  %243 = getelementptr inbounds i32, i32 addrspace(3)* %51, i32 %240\l  %244 = load i32, i32 addrspace(3)* %243, align 4, !tbaa !20\l  %245 = mul i32 %244, %4\l  %246 = add i32 %245, %48\l  %247 = zext i32 %246 to i64\l  %248 = getelementptr inbounds double, double addrspace(1)* %0, i64 %247\l  %249 = load double, double addrspace(1)* %248, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %250 = fmul contract double %242, %249\l  %251 = fadd contract double %237, %250\l  %252 = or i32 %180, 5\l  %253 = mul nsw i32 %252, %13\l  %254 = add nsw i32 %253, %140\l  %255 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @shared, i32 0, i32 %254\l  %256 = load double, double addrspace(3)* %255, align 8, !tbaa !16\l  %257 = getelementptr inbounds i32, i32 addrspace(3)* %51, i32 %254\l  %258 = load i32, i32 addrspace(3)* %257, align 4, !tbaa !20\l  %259 = mul i32 %258, %4\l  %260 = add i32 %259, %48\l  %261 = zext i32 %260 to i64\l  %262 = getelementptr inbounds double, double addrspace(1)* %0, i64 %261\l  %263 = load double, double addrspace(1)* %262, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %264 = fmul contract double %256, %263\l  %265 = fadd contract double %251, %264\l  %266 = or i32 %180, 6\l  %267 = mul nsw i32 %266, %13\l  %268 = add nsw i32 %267, %140\l  %269 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @shared, i32 0, i32 %268\l  %270 = load double, double addrspace(3)* %269, align 8, !tbaa !16\l  %271 = getelementptr inbounds i32, i32 addrspace(3)* %51, i32 %268\l  %272 = load i32, i32 addrspace(3)* %271, align 4, !tbaa !20\l  %273 = mul i32 %272, %4\l  %274 = add i32 %273, %48\l  %275 = zext i32 %274 to i64\l  %276 = getelementptr inbounds double, double addrspace(1)* %0, i64 %275\l  %277 = load double, double addrspace(1)* %276, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %278 = fmul contract double %270, %277\l  %279 = fadd contract double %265, %278\l  %280 = or i32 %180, 7\l  %281 = mul nsw i32 %280, %13\l  %282 = add nsw i32 %281, %140\l  %283 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @shared, i32 0, i32 %282\l  %284 = load double, double addrspace(3)* %283, align 8, !tbaa !16\l  %285 = getelementptr inbounds i32, i32 addrspace(3)* %51, i32 %282\l  %286 = load i32, i32 addrspace(3)* %285, align 4, !tbaa !20\l  %287 = mul i32 %286, %4\l  %288 = add i32 %287, %48\l  %289 = zext i32 %288 to i64\l  %290 = getelementptr inbounds double, double addrspace(1)* %0, i64 %289\l  %291 = load double, double addrspace(1)* %290, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %292 = fmul contract double %284, %291\l  %293 = fadd contract double %279, %292\l  %294 = add nuw nsw i32 %180, 8\l  %295 = add i32 %182, 8\l  %296 = icmp eq i32 %295, %144\l  br i1 %296, label %145, label %179, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x6260420:s0 -> Node0x62601d0;
	Node0x6260420:s1 -> Node0x6260420;
	Node0x6261ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%297:\l297:                                              \l  %298 = phi double [ undef, %173 ], [ %442, %328 ]\l  %299 = phi i32 [ 0, %173 ], [ %443, %328 ]\l  %300 = phi double [ %171, %173 ], [ %442, %328 ]\l  %301 = icmp eq i32 %175, 0\l  br i1 %301, label %322, label %302\l|{<s0>T|<s1>F}}"];
	Node0x6261ff0:s0 -> Node0x6261d00;
	Node0x6261ff0:s1 -> Node0x6267b80;
	Node0x6267b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%302:\l302:                                              \l  %303 = phi i32 [ %319, %302 ], [ %299, %297 ]\l  %304 = phi double [ %318, %302 ], [ %300, %297 ]\l  %305 = phi i32 [ %320, %302 ], [ 0, %297 ]\l  %306 = mul nsw i32 %303, %4\l  %307 = add nsw i32 %306, %48\l  %308 = sext i32 %307 to i64\l  %309 = getelementptr inbounds double, double addrspace(1)* %7, i64 %308\l  %310 = load double, double addrspace(1)* %309, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %311 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %308\l  %312 = load i32, i32 addrspace(1)* %311, align 4, !tbaa !20,\l... !amdgpu.noclobber !6\l  %313 = add i32 %312, %174\l  %314 = zext i32 %313 to i64\l  %315 = getelementptr inbounds double, double addrspace(1)* %0, i64 %314\l  %316 = load double, double addrspace(1)* %315, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %317 = fmul contract double %310, %316\l  %318 = fadd contract double %304, %317\l  %319 = add nuw nsw i32 %303, 1\l  %320 = add i32 %305, 1\l  %321 = icmp eq i32 %320, %175\l  br i1 %321, label %322, label %302, !llvm.loop !28\l|{<s0>T|<s1>F}}"];
	Node0x6267b80:s0 -> Node0x6261d00;
	Node0x6267b80:s1 -> Node0x6267b80;
	Node0x6261d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%322:\l322:                                              \l  %323 = phi double [ %171, %170 ], [ %298, %297 ], [ %318, %302 ]\l  %324 = getelementptr inbounds double, double addrspace(1)* %1, i64 %38\l  %325 = load double, double addrspace(1)* %324, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %326 = fmul contract double %325, %2\l  %327 = fadd contract double %323, %326\l  store double %327, double addrspace(1)* %324, align 8, !tbaa !16\l  br label %446\l}"];
	Node0x6261d00 -> Node0x62596c0;
	Node0x6262210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%328:\l328:                                              \l  %329 = phi i32 [ 0, %177 ], [ %443, %328 ]\l  %330 = phi double [ %171, %177 ], [ %442, %328 ]\l  %331 = phi i32 [ 0, %177 ], [ %444, %328 ]\l  %332 = mul nsw i32 %329, %4\l  %333 = add nsw i32 %332, %48\l  %334 = sext i32 %333 to i64\l  %335 = getelementptr inbounds double, double addrspace(1)* %7, i64 %334\l  %336 = load double, double addrspace(1)* %335, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %337 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %334\l  %338 = load i32, i32 addrspace(1)* %337, align 4, !tbaa !20,\l... !amdgpu.noclobber !6\l  %339 = add i32 %338, %174\l  %340 = zext i32 %339 to i64\l  %341 = getelementptr inbounds double, double addrspace(1)* %0, i64 %340\l  %342 = load double, double addrspace(1)* %341, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %343 = fmul contract double %336, %342\l  %344 = fadd contract double %330, %343\l  %345 = or i32 %329, 1\l  %346 = mul nsw i32 %345, %4\l  %347 = add nsw i32 %346, %48\l  %348 = sext i32 %347 to i64\l  %349 = getelementptr inbounds double, double addrspace(1)* %7, i64 %348\l  %350 = load double, double addrspace(1)* %349, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %351 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %348\l  %352 = load i32, i32 addrspace(1)* %351, align 4, !tbaa !20,\l... !amdgpu.noclobber !6\l  %353 = add i32 %352, %174\l  %354 = zext i32 %353 to i64\l  %355 = getelementptr inbounds double, double addrspace(1)* %0, i64 %354\l  %356 = load double, double addrspace(1)* %355, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %357 = fmul contract double %350, %356\l  %358 = fadd contract double %344, %357\l  %359 = or i32 %329, 2\l  %360 = mul nsw i32 %359, %4\l  %361 = add nsw i32 %360, %48\l  %362 = sext i32 %361 to i64\l  %363 = getelementptr inbounds double, double addrspace(1)* %7, i64 %362\l  %364 = load double, double addrspace(1)* %363, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %365 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %362\l  %366 = load i32, i32 addrspace(1)* %365, align 4, !tbaa !20,\l... !amdgpu.noclobber !6\l  %367 = add i32 %366, %174\l  %368 = zext i32 %367 to i64\l  %369 = getelementptr inbounds double, double addrspace(1)* %0, i64 %368\l  %370 = load double, double addrspace(1)* %369, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %371 = fmul contract double %364, %370\l  %372 = fadd contract double %358, %371\l  %373 = or i32 %329, 3\l  %374 = mul nsw i32 %373, %4\l  %375 = add nsw i32 %374, %48\l  %376 = sext i32 %375 to i64\l  %377 = getelementptr inbounds double, double addrspace(1)* %7, i64 %376\l  %378 = load double, double addrspace(1)* %377, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %379 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %376\l  %380 = load i32, i32 addrspace(1)* %379, align 4, !tbaa !20,\l... !amdgpu.noclobber !6\l  %381 = add i32 %380, %174\l  %382 = zext i32 %381 to i64\l  %383 = getelementptr inbounds double, double addrspace(1)* %0, i64 %382\l  %384 = load double, double addrspace(1)* %383, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %385 = fmul contract double %378, %384\l  %386 = fadd contract double %372, %385\l  %387 = or i32 %329, 4\l  %388 = mul nsw i32 %387, %4\l  %389 = add nsw i32 %388, %48\l  %390 = sext i32 %389 to i64\l  %391 = getelementptr inbounds double, double addrspace(1)* %7, i64 %390\l  %392 = load double, double addrspace(1)* %391, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %393 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %390\l  %394 = load i32, i32 addrspace(1)* %393, align 4, !tbaa !20,\l... !amdgpu.noclobber !6\l  %395 = add i32 %394, %174\l  %396 = zext i32 %395 to i64\l  %397 = getelementptr inbounds double, double addrspace(1)* %0, i64 %396\l  %398 = load double, double addrspace(1)* %397, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %399 = fmul contract double %392, %398\l  %400 = fadd contract double %386, %399\l  %401 = or i32 %329, 5\l  %402 = mul nsw i32 %401, %4\l  %403 = add nsw i32 %402, %48\l  %404 = sext i32 %403 to i64\l  %405 = getelementptr inbounds double, double addrspace(1)* %7, i64 %404\l  %406 = load double, double addrspace(1)* %405, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %407 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %404\l  %408 = load i32, i32 addrspace(1)* %407, align 4, !tbaa !20,\l... !amdgpu.noclobber !6\l  %409 = add i32 %408, %174\l  %410 = zext i32 %409 to i64\l  %411 = getelementptr inbounds double, double addrspace(1)* %0, i64 %410\l  %412 = load double, double addrspace(1)* %411, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %413 = fmul contract double %406, %412\l  %414 = fadd contract double %400, %413\l  %415 = or i32 %329, 6\l  %416 = mul nsw i32 %415, %4\l  %417 = add nsw i32 %416, %48\l  %418 = sext i32 %417 to i64\l  %419 = getelementptr inbounds double, double addrspace(1)* %7, i64 %418\l  %420 = load double, double addrspace(1)* %419, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %421 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %418\l  %422 = load i32, i32 addrspace(1)* %421, align 4, !tbaa !20,\l... !amdgpu.noclobber !6\l  %423 = add i32 %422, %174\l  %424 = zext i32 %423 to i64\l  %425 = getelementptr inbounds double, double addrspace(1)* %0, i64 %424\l  %426 = load double, double addrspace(1)* %425, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %427 = fmul contract double %420, %426\l  %428 = fadd contract double %414, %427\l  %429 = or i32 %329, 7\l  %430 = mul nsw i32 %429, %4\l  %431 = add nsw i32 %430, %48\l  %432 = sext i32 %431 to i64\l  %433 = getelementptr inbounds double, double addrspace(1)* %7, i64 %432\l  %434 = load double, double addrspace(1)* %433, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %435 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %432\l  %436 = load i32, i32 addrspace(1)* %435, align 4, !tbaa !20,\l... !amdgpu.noclobber !6\l  %437 = add i32 %436, %174\l  %438 = zext i32 %437 to i64\l  %439 = getelementptr inbounds double, double addrspace(1)* %0, i64 %438\l  %440 = load double, double addrspace(1)* %439, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %441 = fmul contract double %434, %440\l  %442 = fadd contract double %428, %441\l  %443 = add nuw nsw i32 %329, 8\l  %444 = add i32 %331, 8\l  %445 = icmp eq i32 %444, %178\l  br i1 %445, label %297, label %328, !llvm.loop !29\l|{<s0>T|<s1>F}}"];
	Node0x6262210:s0 -> Node0x6261ff0;
	Node0x6262210:s1 -> Node0x6262210;
	Node0x62596c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%446:\l446:                                              \l  ret void\l}"];
}
