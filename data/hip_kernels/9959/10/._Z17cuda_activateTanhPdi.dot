digraph "CFG for '_Z17cuda_activateTanhPdi' function" {
	label="CFG for '_Z17cuda_activateTanhPdi' function";

	Node0x54abbf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = mul i32 %3, %8\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = add i32 %9, %10\l  %12 = icmp slt i32 %11, %1\l  br i1 %12, label %13, label %167\l|{<s0>T|<s1>F}}"];
	Node0x54abbf0:s0 -> Node0x54adaf0;
	Node0x54abbf0:s1 -> Node0x54adb80;
	Node0x54adaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%13:\l13:                                               \l  %14 = sext i32 %11 to i64\l  %15 = getelementptr inbounds double, double addrspace(1)* %0, i64 %14\l  %16 = load double, double addrspace(1)* %15, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %17 = tail call double @llvm.fabs.f64(double %16)\l  %18 = fmul double %17, 0x3FF71547652B82FE\l  %19 = tail call double @llvm.rint.f64(double %18)\l  %20 = tail call double @llvm.fma.f64(double %19, double 0xBFE62E42FEFA3000,\l... double %17)\l  %21 = fadd double %20, 0.000000e+00\l  %22 = fsub double %20, %21\l  %23 = fadd double %22, 0.000000e+00\l  %24 = fmul double %19, 0x3D53DE6AF278E000\l  %25 = fsub double %21, %24\l  %26 = fsub double %21, %25\l  %27 = fsub double %26, %24\l  %28 = fadd double %23, %27\l  %29 = fadd double %25, %28\l  %30 = fsub double %29, %25\l  %31 = fsub double %28, %30\l  %32 = fmul double %19, 0x3AC9CC01F97B57A0\l  %33 = fsub double %29, %32\l  %34 = fsub double %29, %33\l  %35 = fsub double %34, %32\l  %36 = fadd double %31, %35\l  %37 = fadd double %33, %36\l  %38 = fsub double %37, %33\l  %39 = fsub double %36, %38\l  %40 = tail call double @llvm.fma.f64(double %37, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %41 = tail call double @llvm.fma.f64(double %37, double %40, double\l... 0x3EC71DEE623FDE64)\l  %42 = tail call double @llvm.fma.f64(double %37, double %41, double\l... 0x3EFA01997C89E6B0)\l  %43 = tail call double @llvm.fma.f64(double %37, double %42, double\l... 0x3F2A01A014761F6E)\l  %44 = tail call double @llvm.fma.f64(double %37, double %43, double\l... 0x3F56C16C1852B7B0)\l  %45 = tail call double @llvm.fma.f64(double %37, double %44, double\l... 0x3F81111111122322)\l  %46 = tail call double @llvm.fma.f64(double %37, double %45, double\l... 0x3FA55555555502A1)\l  %47 = tail call double @llvm.fma.f64(double %37, double %46, double\l... 0x3FC5555555555511)\l  %48 = tail call double @llvm.fma.f64(double %37, double %47, double\l... 0x3FE000000000000B)\l  %49 = fmul double %37, %37\l  %50 = fneg double %49\l  %51 = tail call double @llvm.fma.f64(double %37, double %37, double %50)\l  %52 = fmul double %39, 2.000000e+00\l  %53 = tail call double @llvm.fma.f64(double %37, double %52, double %51)\l  %54 = fadd double %49, %53\l  %55 = fsub double %54, %49\l  %56 = fsub double %53, %55\l  %57 = fmul double %54, %48\l  %58 = fneg double %57\l  %59 = tail call double @llvm.fma.f64(double %54, double %48, double %58)\l  %60 = tail call double @llvm.fma.f64(double %56, double %48, double %59)\l  %61 = fadd double %57, %60\l  %62 = fsub double %61, %57\l  %63 = fsub double %60, %62\l  %64 = fadd double %37, %61\l  %65 = fsub double %64, %37\l  %66 = fsub double %61, %65\l  %67 = fadd double %39, %63\l  %68 = fadd double %67, %66\l  %69 = fadd double %64, %68\l  %70 = fsub double %69, %64\l  %71 = fsub double %68, %70\l  %72 = fadd double %69, 1.000000e+00\l  %73 = fadd double %72, -1.000000e+00\l  %74 = fsub double %69, %73\l  %75 = fadd double %71, %74\l  %76 = fadd double %72, %75\l  %77 = fsub double %76, %72\l  %78 = fsub double %75, %77\l  %79 = fptosi double %19 to i32\l  %80 = tail call double @llvm.amdgcn.ldexp.f64(double %76, i32 %79)\l  %81 = tail call double @llvm.amdgcn.ldexp.f64(double %78, i32 %79)\l  %82 = tail call double @llvm.amdgcn.rcp.f64(double %80)\l  %83 = fneg double %80\l  %84 = tail call double @llvm.fma.f64(double %83, double %82, double\l... 1.000000e+00)\l  %85 = tail call double @llvm.fma.f64(double %84, double %82, double %82)\l  %86 = tail call double @llvm.fma.f64(double %83, double %85, double\l... 1.000000e+00)\l  %87 = tail call double @llvm.fma.f64(double %86, double %85, double %85)\l  %88 = fmul double %80, %87\l  %89 = fneg double %88\l  %90 = tail call double @llvm.fma.f64(double %87, double %80, double %89)\l  %91 = tail call double @llvm.fma.f64(double %87, double %81, double %90)\l  %92 = fadd double %88, %91\l  %93 = fsub double %92, %88\l  %94 = fsub double %91, %93\l  %95 = fsub double 1.000000e+00, %92\l  %96 = fsub double 1.000000e+00, %95\l  %97 = fsub double %96, %92\l  %98 = fsub double %97, %94\l  %99 = fadd double %95, %98\l  %100 = fsub double %99, %95\l  %101 = fsub double %98, %100\l  %102 = fmul double %87, %99\l  %103 = fmul double %80, %102\l  %104 = fneg double %103\l  %105 = tail call double @llvm.fma.f64(double %102, double %80, double %104)\l  %106 = tail call double @llvm.fma.f64(double %102, double %81, double %105)\l  %107 = fadd double %103, %106\l  %108 = fsub double %107, %103\l  %109 = fsub double %106, %108\l  %110 = fsub double %99, %107\l  %111 = fsub double %99, %110\l  %112 = fsub double %111, %107\l  %113 = fadd double %101, %112\l  %114 = fsub double %113, %109\l  %115 = fadd double %110, %114\l  %116 = fmul double %87, %115\l  %117 = fadd double %87, %102\l  %118 = fsub double %117, %87\l  %119 = fsub double %102, %118\l  %120 = fadd double %119, %116\l  %121 = fadd double %117, %120\l  %122 = fsub double %121, %117\l  %123 = fsub double %120, %122\l  %124 = fsub double %80, %121\l  %125 = fsub double %80, %124\l  %126 = fsub double %125, %121\l  %127 = fadd double %81, %126\l  %128 = fsub double %127, %123\l  %129 = fadd double %124, %128\l  %130 = fsub double %129, %124\l  %131 = fsub double %128, %130\l  %132 = fadd double %80, %121\l  %133 = fsub double %132, %80\l  %134 = fsub double %121, %133\l  %135 = fadd double %81, %123\l  %136 = fadd double %135, %134\l  %137 = fadd double %132, %136\l  %138 = fsub double %137, %132\l  %139 = fsub double %136, %138\l  %140 = tail call double @llvm.amdgcn.rcp.f64(double %137)\l  %141 = fneg double %137\l  %142 = tail call double @llvm.fma.f64(double %141, double %140, double\l... 1.000000e+00)\l  %143 = tail call double @llvm.fma.f64(double %142, double %140, double %140)\l  %144 = tail call double @llvm.fma.f64(double %141, double %143, double\l... 1.000000e+00)\l  %145 = tail call double @llvm.fma.f64(double %144, double %143, double %143)\l  %146 = fmul double %129, %145\l  %147 = fmul double %137, %146\l  %148 = fneg double %147\l  %149 = tail call double @llvm.fma.f64(double %146, double %137, double %148)\l  %150 = tail call double @llvm.fma.f64(double %146, double %139, double %149)\l  %151 = fadd double %147, %150\l  %152 = fsub double %151, %147\l  %153 = fsub double %150, %152\l  %154 = fsub double %129, %151\l  %155 = fsub double %129, %154\l  %156 = fsub double %155, %151\l  %157 = fsub double %156, %153\l  %158 = fadd double %131, %157\l  %159 = fadd double %154, %158\l  %160 = fmul double %145, %159\l  %161 = fadd double %146, %160\l  %162 = fcmp ogt double %17, 1.906250e+01\l  %163 = select i1 %162, double 1.000000e+00, double %161\l  %164 = fcmp olt double %17, 0x3E40000000000000\l  %165 = select i1 %164, double %17, double %163\l  %166 = tail call double @llvm.copysign.f64(double %165, double %16)\l  store double %166, double addrspace(1)* %15, align 8, !tbaa !7\l  br label %167\l}"];
	Node0x54adaf0 -> Node0x54adb80;
	Node0x54adb80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%167:\l167:                                              \l  ret void\l}"];
}
