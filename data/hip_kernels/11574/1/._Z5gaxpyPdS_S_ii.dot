digraph "CFG for '_Z5gaxpyPdS_S_ii' function" {
	label="CFG for '_Z5gaxpyPdS_S_ii' function";

	Node0x6154940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#dc5d4a70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = icmp slt i32 %6, %3\l  %9 = icmp slt i32 %7, %4\l  %10 = select i1 %8, i1 %9, i1 false\l  br i1 %10, label %11, label %102\l|{<s0>T|<s1>F}}"];
	Node0x6154940:s0 -> Node0x6154070;
	Node0x6154940:s1 -> Node0x6156160;
	Node0x6154070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%11:\l11:                                               \l  %12 = mul nsw i32 %6, %4\l  %13 = add nsw i32 %12, %7\l  %14 = sext i32 %13 to i64\l  %15 = getelementptr inbounds double, double addrspace(1)* %1, i64 %14\l  %16 = load double, double addrspace(1)* %15, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %17 = zext i32 %7 to i64\l  %18 = getelementptr inbounds double, double addrspace(1)* %2, i64 %17\l  %19 = load double, double addrspace(1)* %18, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %20 = fmul contract double %16, %19\l  %21 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @dots_s, i32 0, i32 %13\l  store double %20, double addrspace(3)* %21, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %22 = icmp eq i32 %7, 0\l  br i1 %22, label %23, label %102\l|{<s0>T|<s1>F}}"];
	Node0x6154070:s0 -> Node0x6157c30;
	Node0x6154070:s1 -> Node0x6156160;
	Node0x6157c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%23:\l23:                                               \l  %24 = icmp ugt i32 %4, 1\l  %25 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @dots_s, i32 0, i32 %12\l  %26 = load double, double addrspace(3)* %25, align 8, !tbaa !5\l  br i1 %24, label %27, label %52\l|{<s0>T|<s1>F}}"];
	Node0x6157c30:s0 -> Node0x6157f60;
	Node0x6157c30:s1 -> Node0x6157fb0;
	Node0x6157f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%27:\l27:                                               \l  %28 = add i32 %4, -1\l  %29 = add i32 %4, -2\l  %30 = and i32 %28, 7\l  %31 = icmp ult i32 %29, 7\l  br i1 %31, label %34, label %32\l|{<s0>T|<s1>F}}"];
	Node0x6157f60:s0 -> Node0x6158390;
	Node0x6157f60:s1 -> Node0x61583e0;
	Node0x61583e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%32:\l32:                                               \l  %33 = and i32 %28, -8\l  br label %56\l}"];
	Node0x61583e0 -> Node0x61568f0;
	Node0x6158390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%34:\l34:                                               \l  %35 = phi double [ undef, %27 ], [ %98, %56 ]\l  %36 = phi double [ %26, %27 ], [ %98, %56 ]\l  %37 = phi i32 [ 1, %27 ], [ %99, %56 ]\l  %38 = icmp eq i32 %30, 0\l  br i1 %38, label %50, label %39\l|{<s0>T|<s1>F}}"];
	Node0x6158390:s0 -> Node0x6158f00;
	Node0x6158390:s1 -> Node0x6158f90;
	Node0x6158f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi double [ %46, %39 ], [ %36, %34 ]\l  %41 = phi i32 [ %47, %39 ], [ %37, %34 ]\l  %42 = phi i32 [ %48, %39 ], [ 0, %34 ]\l  %43 = add nsw i32 %41, %12\l  %44 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @dots_s, i32 0, i32 %43\l  %45 = load double, double addrspace(3)* %44, align 8, !tbaa !5\l  %46 = fadd contract double %45, %40\l  %47 = add nuw nsw i32 %41, 1\l  %48 = add i32 %42, 1\l  %49 = icmp eq i32 %48, %30\l  br i1 %49, label %50, label %39, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x6158f90:s0 -> Node0x6158f00;
	Node0x6158f90:s1 -> Node0x6158f90;
	Node0x6158f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%50:\l50:                                               \l  %51 = phi double [ %35, %34 ], [ %46, %39 ]\l  store double %51, double addrspace(3)* %25, align 8, !tbaa !5\l  br label %52\l}"];
	Node0x6158f00 -> Node0x6157fb0;
	Node0x6157fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%52:\l52:                                               \l  %53 = phi double [ %51, %50 ], [ %26, %23 ]\l  %54 = sext i32 %6 to i64\l  %55 = getelementptr inbounds double, double addrspace(1)* %0, i64 %54\l  store double %53, double addrspace(1)* %55, align 8, !tbaa !5\l  br label %102\l}"];
	Node0x6157fb0 -> Node0x6156160;
	Node0x61568f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%56:\l56:                                               \l  %57 = phi double [ %26, %32 ], [ %98, %56 ]\l  %58 = phi i32 [ 1, %32 ], [ %99, %56 ]\l  %59 = phi i32 [ 0, %32 ], [ %100, %56 ]\l  %60 = add nsw i32 %58, %12\l  %61 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @dots_s, i32 0, i32 %60\l  %62 = load double, double addrspace(3)* %61, align 8, !tbaa !5\l  %63 = fadd contract double %62, %57\l  %64 = add nuw nsw i32 %58, 1\l  %65 = add nsw i32 %64, %12\l  %66 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @dots_s, i32 0, i32 %65\l  %67 = load double, double addrspace(3)* %66, align 8, !tbaa !5\l  %68 = fadd contract double %67, %63\l  %69 = add nuw nsw i32 %58, 2\l  %70 = add nsw i32 %69, %12\l  %71 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @dots_s, i32 0, i32 %70\l  %72 = load double, double addrspace(3)* %71, align 8, !tbaa !5\l  %73 = fadd contract double %72, %68\l  %74 = add nuw nsw i32 %58, 3\l  %75 = add nsw i32 %74, %12\l  %76 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @dots_s, i32 0, i32 %75\l  %77 = load double, double addrspace(3)* %76, align 8, !tbaa !5\l  %78 = fadd contract double %77, %73\l  %79 = add nuw nsw i32 %58, 4\l  %80 = add nsw i32 %79, %12\l  %81 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @dots_s, i32 0, i32 %80\l  %82 = load double, double addrspace(3)* %81, align 8, !tbaa !5\l  %83 = fadd contract double %82, %78\l  %84 = add nuw nsw i32 %58, 5\l  %85 = add nsw i32 %84, %12\l  %86 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @dots_s, i32 0, i32 %85\l  %87 = load double, double addrspace(3)* %86, align 8, !tbaa !5\l  %88 = fadd contract double %87, %83\l  %89 = add nuw nsw i32 %58, 6\l  %90 = add nsw i32 %89, %12\l  %91 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @dots_s, i32 0, i32 %90\l  %92 = load double, double addrspace(3)* %91, align 8, !tbaa !5\l  %93 = fadd contract double %92, %88\l  %94 = add nuw nsw i32 %58, 7\l  %95 = add nsw i32 %94, %12\l  %96 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @dots_s, i32 0, i32 %95\l  %97 = load double, double addrspace(3)* %96, align 8, !tbaa !5\l  %98 = fadd contract double %97, %93\l  %99 = add nuw nsw i32 %58, 8\l  %100 = add i32 %59, 8\l  %101 = icmp eq i32 %100, %33\l  br i1 %101, label %34, label %56, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x61568f0:s0 -> Node0x6158390;
	Node0x61568f0:s1 -> Node0x61568f0;
	Node0x6156160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#dc5d4a70",label="{%102:\l102:                                              \l  ret void\l}"];
}
