digraph "CFG for '_Z11smoothColorPhS_jj' function" {
	label="CFG for '_Z11smoothColorPhS_jj' function";

	Node0x55baed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = shl i32 %5, 16\l  %13 = mul i32 %12, %10\l  %14 = shl i32 %11, 10\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = or i32 %15, %16\l  %18 = mul i32 %3, %2\l  %19 = icmp ult i32 %17, %18\l  br i1 %19, label %20, label %103\l|{<s0>T|<s1>F}}"];
	Node0x55baed0:s0 -> Node0x55bd310;
	Node0x55baed0:s1 -> Node0x55bd3a0;
	Node0x55bd310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%20:\l20:                                               \l  %21 = freeze i32 %17\l  %22 = freeze i32 %2\l  %23 = udiv i32 %21, %22\l  %24 = add i32 %23, -2\l  %25 = add i32 %23, 2\l  %26 = mul i32 %23, %22\l  %27 = sub i32 %21, %26\l  %28 = add i32 %27, -2\l  %29 = add i32 %27, 2\l  %30 = tail call i32 @llvm.smax.i32(i32 %24, i32 0)\l  %31 = tail call i32 @llvm.smax.i32(i32 %28, i32 0)\l  %32 = icmp ult i32 %25, %2\l  %33 = add i32 %2, -1\l  %34 = select i1 %32, i32 %25, i32 %33\l  %35 = icmp ult i32 %29, %2\l  %36 = select i1 %35, i32 %29, i32 %33\l  %37 = icmp sgt i32 %30, %34\l  br i1 %37, label %48, label %38\l|{<s0>T|<s1>F}}"];
	Node0x55bd310:s0 -> Node0x55bd170;
	Node0x55bd310:s1 -> Node0x55be2b0;
	Node0x55be2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%38:\l38:                                               \l  %39 = icmp sgt i32 %31, %36\l  br label %40\l}"];
	Node0x55be2b0 -> Node0x55be480;
	Node0x55be480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%40:\l40:                                               \l  %41 = phi i32 [ %30, %38 ], [ %73, %68 ]\l  %42 = phi i32 [ 0, %38 ], [ %72, %68 ]\l  %43 = phi i32 [ 0, %38 ], [ %71, %68 ]\l  %44 = phi i32 [ 0, %38 ], [ %70, %68 ]\l  %45 = phi i32 [ 0, %38 ], [ %69, %68 ]\l  br i1 %39, label %68, label %46\l|{<s0>T|<s1>F}}"];
	Node0x55be480:s0 -> Node0x55be540;
	Node0x55be480:s1 -> Node0x55beb00;
	Node0x55beb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%46:\l46:                                               \l  %47 = mul i32 %41, %2\l  br label %75\l}"];
	Node0x55beb00 -> Node0x55becd0;
	Node0x55bd170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%48:\l48:                                               \l  %49 = phi i32 [ 0, %20 ], [ %69, %68 ]\l  %50 = phi i32 [ 0, %20 ], [ %70, %68 ]\l  %51 = phi i32 [ 0, %20 ], [ %71, %68 ]\l  %52 = phi i32 [ 0, %20 ], [ %72, %68 ]\l  %53 = sdiv i32 %49, %52\l  %54 = trunc i32 %53 to i8\l  %55 = mul i32 %17, 3\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %56\l  store i8 %54, i8 addrspace(1)* %57, align 1, !tbaa !7\l  %58 = sdiv i32 %50, %52\l  %59 = trunc i32 %58 to i8\l  %60 = add i32 %55, 1\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %61\l  store i8 %59, i8 addrspace(1)* %62, align 1, !tbaa !7\l  %63 = sdiv i32 %51, %52\l  %64 = trunc i32 %63 to i8\l  %65 = add i32 %55, 2\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %66\l  store i8 %64, i8 addrspace(1)* %67, align 1, !tbaa !7\l  br label %103\l}"];
	Node0x55bd170 -> Node0x55bd3a0;
	Node0x55be540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%68:\l68:                                               \l  %69 = phi i32 [ %45, %40 ], [ %87, %75 ]\l  %70 = phi i32 [ %44, %40 ], [ %93, %75 ]\l  %71 = phi i32 [ %43, %40 ], [ %99, %75 ]\l  %72 = phi i32 [ %42, %40 ], [ %100, %75 ]\l  %73 = add nuw nsw i32 %41, 1\l  %74 = icmp slt i32 %41, %34\l  br i1 %74, label %40, label %48, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x55be540:s0 -> Node0x55be480;
	Node0x55be540:s1 -> Node0x55bd170;
	Node0x55becd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  %76 = phi i32 [ %31, %46 ], [ %101, %75 ]\l  %77 = phi i32 [ %42, %46 ], [ %100, %75 ]\l  %78 = phi i32 [ %43, %46 ], [ %99, %75 ]\l  %79 = phi i32 [ %44, %46 ], [ %93, %75 ]\l  %80 = phi i32 [ %45, %46 ], [ %87, %75 ]\l  %81 = add i32 %76, %47\l  %82 = mul i32 %81, 3\l  %83 = zext i32 %82 to i64\l  %84 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %83\l  %85 = load i8, i8 addrspace(1)* %84, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %86 = zext i8 %85 to i32\l  %87 = add nsw i32 %80, %86\l  %88 = add i32 %82, 1\l  %89 = zext i32 %88 to i64\l  %90 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %89\l  %91 = load i8, i8 addrspace(1)* %90, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %92 = zext i8 %91 to i32\l  %93 = add nsw i32 %79, %92\l  %94 = add i32 %82, 2\l  %95 = zext i32 %94 to i64\l  %96 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %95\l  %97 = load i8, i8 addrspace(1)* %96, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %98 = zext i8 %97 to i32\l  %99 = add nsw i32 %78, %98\l  %100 = add nsw i32 %77, 1\l  %101 = add nuw nsw i32 %76, 1\l  %102 = icmp slt i32 %76, %36\l  br i1 %102, label %75, label %68, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x55becd0:s0 -> Node0x55becd0;
	Node0x55becd0:s1 -> Node0x55be540;
	Node0x55bd3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%103:\l103:                                              \l  ret void\l}"];
}
