digraph "CFG for '_Z13multMatrixGPUPKfmmS0_mmPf' function" {
	label="CFG for '_Z13multMatrixGPUPKfmmS0_mmPf' function";

	Node0x54f0970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 2, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = add i32 %16, %9\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = add i32 %23, %8\l  %25 = add i64 %2, -1\l  %26 = lshr i64 %25, 4\l  %27 = sext i32 %17 to i64\l  %28 = icmp uge i64 %27, %1\l  %29 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 %8\l  %30 = mul i64 %27, %2\l  %31 = zext i32 %8 to i64\l  %32 = add i64 %30, %31\l  %33 = sext i32 %24 to i64\l  %34 = icmp uge i64 %33, %5\l  %35 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 %9, i32 %8\l  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 0\l  %37 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 0, i32 %8\l  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 1\l  %39 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 1, i32 %8\l  %40 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 2\l  %41 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 2, i32 %8\l  %42 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 3\l  %43 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 3, i32 %8\l  %44 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 4\l  %45 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 4, i32 %8\l  %46 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 5\l  %47 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 5, i32 %8\l  %48 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 6\l  %49 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 6, i32 %8\l  %50 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 7\l  %51 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 7, i32 %8\l  %52 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 8\l  %53 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 8, i32 %8\l  %54 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 9\l  %55 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 9, i32 %8\l  %56 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 10\l  %57 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 10, i32 %8\l  %58 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 11\l  %59 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 11, i32 %8\l  %60 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 12\l  %61 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 12, i32 %8\l  %62 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 13\l  %63 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 13, i32 %8\l  %64 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 14\l  %65 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 14, i32 %8\l  %66 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_A, i32 0, i32 %9, i32 15\l  %67 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ13multMatrixGPUPKfmmS0_mmPfE4ds_B, i32 0, i32 15, i32 %8\l  br label %72\l}"];
	Node0x54f0970 -> Node0x54f4450;
	Node0x54f6ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%68:\l68:                                               \l  %69 = icmp ult i64 %27, %1\l  %70 = icmp ult i64 %33, %5\l  %71 = select i1 %69, i1 %70, i1 false\l  br i1 %71, label %165, label %169\l|{<s0>T|<s1>F}}"];
	Node0x54f6ba0:s0 -> Node0x54f6e30;
	Node0x54f6ba0:s1 -> Node0x54f6e80;
	Node0x54f4450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  %73 = phi i32 [ 0, %7 ], [ %162, %96 ]\l  %74 = phi float [ 0.000000e+00, %7 ], [ %161, %96 ]\l  %75 = shl nsw i32 %73, 4\l  %76 = add nuw nsw i32 %75, %8\l  %77 = zext i32 %76 to i64\l  %78 = icmp uge i64 %77, %2\l  %79 = select i1 %78, i1 true, i1 %28\l  br i1 %79, label %85, label %80\l|{<s0>T|<s1>F}}"];
	Node0x54f4450:s0 -> Node0x54f7fa0;
	Node0x54f4450:s1 -> Node0x54f8030;
	Node0x54f8030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%80:\l80:                                               \l  %81 = zext i32 %75 to i64\l  %82 = add i64 %32, %81\l  %83 = getelementptr inbounds float, float addrspace(1)* %0, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  br label %85\l}"];
	Node0x54f8030 -> Node0x54f7fa0;
	Node0x54f7fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  %86 = phi float [ %84, %80 ], [ 0.000000e+00, %72 ]\l  store float %86, float addrspace(3)* %29, align 4, !tbaa !7\l  %87 = add nuw nsw i32 %75, %9\l  %88 = zext i32 %87 to i64\l  %89 = icmp uge i64 %88, %4\l  %90 = select i1 %89, i1 true, i1 %34\l  br i1 %90, label %96, label %91\l|{<s0>T|<s1>F}}"];
	Node0x54f7fa0:s0 -> Node0x54f6ff0;
	Node0x54f7fa0:s1 -> Node0x54f8ef0;
	Node0x54f8ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%91:\l91:                                               \l  %92 = mul i64 %88, %5\l  %93 = add i64 %92, %33\l  %94 = getelementptr inbounds float, float addrspace(1)* %3, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  br label %96\l}"];
	Node0x54f8ef0 -> Node0x54f6ff0;
	Node0x54f6ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%96:\l96:                                               \l  %97 = phi float [ %95, %91 ], [ 0.000000e+00, %85 ]\l  store float %97, float addrspace(3)* %35, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %98 = load float, float addrspace(3)* %36, align 16, !tbaa !7\l  %99 = load float, float addrspace(3)* %37, align 4, !tbaa !7\l  %100 = fmul contract float %98, %99\l  %101 = fadd contract float %74, %100\l  %102 = load float, float addrspace(3)* %38, align 4, !tbaa !7\l  %103 = load float, float addrspace(3)* %39, align 4, !tbaa !7\l  %104 = fmul contract float %102, %103\l  %105 = fadd contract float %101, %104\l  %106 = load float, float addrspace(3)* %40, align 8, !tbaa !7\l  %107 = load float, float addrspace(3)* %41, align 4, !tbaa !7\l  %108 = fmul contract float %106, %107\l  %109 = fadd contract float %105, %108\l  %110 = load float, float addrspace(3)* %42, align 4, !tbaa !7\l  %111 = load float, float addrspace(3)* %43, align 4, !tbaa !7\l  %112 = fmul contract float %110, %111\l  %113 = fadd contract float %109, %112\l  %114 = load float, float addrspace(3)* %44, align 16, !tbaa !7\l  %115 = load float, float addrspace(3)* %45, align 4, !tbaa !7\l  %116 = fmul contract float %114, %115\l  %117 = fadd contract float %113, %116\l  %118 = load float, float addrspace(3)* %46, align 4, !tbaa !7\l  %119 = load float, float addrspace(3)* %47, align 4, !tbaa !7\l  %120 = fmul contract float %118, %119\l  %121 = fadd contract float %117, %120\l  %122 = load float, float addrspace(3)* %48, align 8, !tbaa !7\l  %123 = load float, float addrspace(3)* %49, align 4, !tbaa !7\l  %124 = fmul contract float %122, %123\l  %125 = fadd contract float %121, %124\l  %126 = load float, float addrspace(3)* %50, align 4, !tbaa !7\l  %127 = load float, float addrspace(3)* %51, align 4, !tbaa !7\l  %128 = fmul contract float %126, %127\l  %129 = fadd contract float %125, %128\l  %130 = load float, float addrspace(3)* %52, align 16, !tbaa !7\l  %131 = load float, float addrspace(3)* %53, align 4, !tbaa !7\l  %132 = fmul contract float %130, %131\l  %133 = fadd contract float %129, %132\l  %134 = load float, float addrspace(3)* %54, align 4, !tbaa !7\l  %135 = load float, float addrspace(3)* %55, align 4, !tbaa !7\l  %136 = fmul contract float %134, %135\l  %137 = fadd contract float %133, %136\l  %138 = load float, float addrspace(3)* %56, align 8, !tbaa !7\l  %139 = load float, float addrspace(3)* %57, align 4, !tbaa !7\l  %140 = fmul contract float %138, %139\l  %141 = fadd contract float %137, %140\l  %142 = load float, float addrspace(3)* %58, align 4, !tbaa !7\l  %143 = load float, float addrspace(3)* %59, align 4, !tbaa !7\l  %144 = fmul contract float %142, %143\l  %145 = fadd contract float %141, %144\l  %146 = load float, float addrspace(3)* %60, align 16, !tbaa !7\l  %147 = load float, float addrspace(3)* %61, align 4, !tbaa !7\l  %148 = fmul contract float %146, %147\l  %149 = fadd contract float %145, %148\l  %150 = load float, float addrspace(3)* %62, align 4, !tbaa !7\l  %151 = load float, float addrspace(3)* %63, align 4, !tbaa !7\l  %152 = fmul contract float %150, %151\l  %153 = fadd contract float %149, %152\l  %154 = load float, float addrspace(3)* %64, align 8, !tbaa !7\l  %155 = load float, float addrspace(3)* %65, align 4, !tbaa !7\l  %156 = fmul contract float %154, %155\l  %157 = fadd contract float %153, %156\l  %158 = load float, float addrspace(3)* %66, align 4, !tbaa !7\l  %159 = load float, float addrspace(3)* %67, align 4, !tbaa !7\l  %160 = fmul contract float %158, %159\l  %161 = fadd contract float %157, %160\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %162 = add nuw nsw i32 %73, 1\l  %163 = zext i32 %162 to i64\l  %164 = icmp ult i64 %26, %163\l  br i1 %164, label %68, label %72, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x54f6ff0:s0 -> Node0x54f6ba0;
	Node0x54f6ff0:s1 -> Node0x54f4450;
	Node0x54f6e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%165:\l165:                                              \l  %166 = mul i64 %27, %5\l  %167 = add i64 %166, %33\l  %168 = getelementptr inbounds float, float addrspace(1)* %6, i64 %167\l  store float %161, float addrspace(1)* %168, align 4, !tbaa !7\l  br label %169\l}"];
	Node0x54f6e30 -> Node0x54f6e80;
	Node0x54f6e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%169:\l169:                                              \l  ret void\l}"];
}
