digraph "CFG for '_Z14scan_v2_kernelPfS_i' function" {
	label="CFG for '_Z14scan_v2_kernelPfS_i' function";

	Node0x5077640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %8\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = sext i32 %12 to i64\l  %14 = getelementptr inbounds float, float addrspace(1)* %1, i64 %13\l  %15 = load float, float addrspace(1)* %14, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %16 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_buffer, i32 0, i32 %11\l  store float %15, float addrspace(3)* %16, align 4, !tbaa !7\l  %17 = add nsw i32 %12, 16\l  %18 = sext i32 %17 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %1, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %21 = add nuw nsw i32 %11, 16\l  %22 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_buffer, i32 0, i32 %21\l  store float %20, float addrspace(3)* %22, align 4, !tbaa !7\l  %23 = icmp sgt i32 %2, 1\l  br i1 %23, label %24, label %28\l|{<s0>T|<s1>F}}"];
	Node0x5077640:s0 -> Node0x507ab00;
	Node0x5077640:s1 -> Node0x507ab90;
	Node0x507ab00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%24:\l24:                                               \l  %25 = shl nuw nsw i32 %11, 1\l  %26 = add nuw nsw i32 %25, 1\l  %27 = add nuw nsw i32 %25, 2\l  br label %35\l}"];
	Node0x507ab00 -> Node0x507aeb0;
	Node0x507ab90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%28:\l28:                                               \l  %29 = phi i32 [ 1, %3 ], [ %51, %50 ]\l  %30 = icmp sgt i32 %29, 1\l  br i1 %30, label %31, label %71\l|{<s0>T|<s1>F}}"];
	Node0x507ab90:s0 -> Node0x507b170;
	Node0x507ab90:s1 -> Node0x507b200;
	Node0x507b170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%31:\l31:                                               \l  %32 = shl nuw nsw i32 %11, 1\l  %33 = add nuw nsw i32 %32, 2\l  %34 = add nuw nsw i32 %32, 3\l  br label %53\l}"];
	Node0x507b170 -> Node0x5079f80;
	Node0x507aeb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i32 [ 1, %24 ], [ %51, %50 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %37 = mul nsw i32 %36, %26\l  %38 = mul nsw i32 %36, %27\l  %39 = icmp sgt i32 %37, 0\l  %40 = icmp slt i32 %38, 33\l  %41 = select i1 %39, i1 %40, i1 false\l  br i1 %41, label %42, label %50\l|{<s0>T|<s1>F}}"];
	Node0x507aeb0:s0 -> Node0x507bdc0;
	Node0x507aeb0:s1 -> Node0x507afa0;
	Node0x507bdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%42:\l42:                                               \l  %43 = add nsw i32 %38, -1\l  %44 = add nsw i32 %37, -1\l  %45 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_buffer, i32 0, i32 %44\l  %46 = load float, float addrspace(3)* %45, align 4, !tbaa !7\l  %47 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_buffer, i32 0, i32 %43\l  %48 = load float, float addrspace(3)* %47, align 4, !tbaa !7\l  %49 = fadd contract float %46, %48\l  store float %49, float addrspace(3)* %47, align 4, !tbaa !7\l  br label %50\l}"];
	Node0x507bdc0 -> Node0x507afa0;
	Node0x507afa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = shl i32 %36, 1\l  %52 = icmp slt i32 %51, %2\l  br i1 %52, label %35, label %28, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x507afa0:s0 -> Node0x507aeb0;
	Node0x507afa0:s1 -> Node0x507ab90;
	Node0x5079f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi i32 [ %29, %31 ], [ %55, %69 ]\l  %55 = ashr i32 %54, 1\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %56 = mul nsw i32 %55, %33\l  %57 = mul nsw i32 %55, %34\l  %58 = icmp sgt i32 %56, 0\l  %59 = icmp slt i32 %57, 33\l  %60 = select i1 %58, i1 %59, i1 false\l  br i1 %60, label %61, label %69\l|{<s0>T|<s1>F}}"];
	Node0x5079f80:s0 -> Node0x507ccf0;
	Node0x5079f80:s1 -> Node0x507c680;
	Node0x507ccf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%61:\l61:                                               \l  %62 = add nsw i32 %57, -1\l  %63 = add nsw i32 %56, -1\l  %64 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_buffer, i32 0, i32 %63\l  %65 = load float, float addrspace(3)* %64, align 4, !tbaa !7\l  %66 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_buffer, i32 0, i32 %62\l  %67 = load float, float addrspace(3)* %66, align 4, !tbaa !7\l  %68 = fadd contract float %65, %67\l  store float %68, float addrspace(3)* %66, align 4, !tbaa !7\l  br label %69\l}"];
	Node0x507ccf0 -> Node0x507c680;
	Node0x507c680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  %70 = icmp sgt i32 %54, 3\l  br i1 %70, label %53, label %71, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x507c680:s0 -> Node0x5079f80;
	Node0x507c680:s1 -> Node0x507b200;
	Node0x507b200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%71:\l71:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %72 = load float, float addrspace(3)* %16, align 4, !tbaa !7\l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %13\l  store float %72, float addrspace(1)* %73, align 4, !tbaa !7\l  %74 = load float, float addrspace(3)* %22, align 4, !tbaa !7\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  store float %74, float addrspace(1)* %75, align 4, !tbaa !7\l  ret void\l}"];
}
