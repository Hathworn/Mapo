digraph "CFG for '_Z16reduction_kernelPfS_j' function" {
	label="CFG for '_Z16reduction_kernelPfS_j' function";

	Node0x6330330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = icmp ult i32 %15, %2\l  br i1 %16, label %17, label %24\l|{<s0>T|<s1>F}}"];
	Node0x6330330:s0 -> Node0x6331c80;
	Node0x6330330:s1 -> Node0x6332630;
	Node0x6331c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%17:\l17:                                               \l  %18 = udiv i32 %12, %9\l  %19 = mul i32 %18, %9\l  %20 = icmp ugt i32 %12, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %9\l  br label %28\l}"];
	Node0x6331c80 -> Node0x6332ab0;
	Node0x6332630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%24:\l24:                                               \l  %25 = phi float [ 0.000000e+00, %3 ], [ %34, %28 ]\l  %26 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s_data,\l... i32 0, i32 %14\l  store float %25, float addrspace(3)* %26, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %27 = icmp ult i16 %8, 2\l  br i1 %27, label %37, label %39\l|{<s0>T|<s1>F}}"];
	Node0x6332630:s0 -> Node0x6333cd0;
	Node0x6332630:s1 -> Node0x6333d60;
	Node0x6332ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %15, %17 ], [ %35, %28 ]\l  %30 = phi float [ 0.000000e+00, %17 ], [ %34, %28 ]\l  %31 = sext i32 %29 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %34 = fadd contract float %30, %33\l  %35 = add i32 %23, %29\l  %36 = icmp ult i32 %35, %2\l  br i1 %36, label %28, label %24, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x6332ab0:s0 -> Node0x6332ab0;
	Node0x6332ab0:s1 -> Node0x6332630;
	Node0x6333cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%37:\l37:                                               \l  %38 = icmp eq i32 %14, 0\l  br i1 %38, label %51, label %55\l|{<s0>T|<s1>F}}"];
	Node0x6333cd0:s0 -> Node0x6335320;
	Node0x6333cd0:s1 -> Node0x6335370;
	Node0x6333d60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i32 [ %41, %49 ], [ %9, %24 ]\l  %41 = lshr i32 %40, 1\l  %42 = icmp ult i32 %14, %41\l  br i1 %42, label %43, label %49\l|{<s0>T|<s1>F}}"];
	Node0x6333d60:s0 -> Node0x6335710;
	Node0x6333d60:s1 -> Node0x63354b0;
	Node0x6335710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%43:\l43:                                               \l  %44 = add nuw nsw i32 %41, %14\l  %45 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s_data,\l... i32 0, i32 %44\l  %46 = load float, float addrspace(3)* %45, align 4, !tbaa !16\l  %47 = load float, float addrspace(3)* %26, align 4, !tbaa !16\l  %48 = fadd contract float %46, %47\l  store float %48, float addrspace(3)* %26, align 4, !tbaa !16\l  br label %49\l}"];
	Node0x6335710 -> Node0x63354b0;
	Node0x63354b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %50 = icmp ult i32 %40, 4\l  br i1 %50, label %37, label %39, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x63354b0:s0 -> Node0x6333cd0;
	Node0x63354b0:s1 -> Node0x6333d60;
	Node0x6335320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%51:\l51:                                               \l  %52 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @s_data, i32 0, i32 0), align 4, !tbaa !16\l  %53 = zext i32 %4 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  store float %52, float addrspace(1)* %54, align 4, !tbaa !16\l  br label %55\l}"];
	Node0x6335320 -> Node0x6335370;
	Node0x6335370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%55:\l55:                                               \l  ret void\l}"];
}
