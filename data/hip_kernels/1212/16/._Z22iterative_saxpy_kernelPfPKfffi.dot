digraph "CFG for '_Z22iterative_saxpy_kernelPfPKfffi' function" {
	label="CFG for '_Z22iterative_saxpy_kernelPfPKfffi' function";

	Node0x5540a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%5:\l  %6 = icmp sgt i32 %4, 0\l  br i1 %6, label %7, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5540a30:s0 -> Node0x5541120;
	Node0x5540a30:s1 -> Node0x55411b0;
	Node0x5541120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%7:\l7:                                                \l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = sext i32 %16 to i64\l  %18 = getelementptr inbounds float, float addrspace(1)* %1, i64 %17\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %17\l  %20 = and i32 %4, 7\l  %21 = icmp ult i32 %4, 8\l  br i1 %21, label %24, label %22\l|{<s0>T|<s1>F}}"];
	Node0x5541120:s0 -> Node0x5542e80;
	Node0x5541120:s1 -> Node0x5542f10;
	Node0x5542f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%22:\l22:                                               \l  %23 = and i32 %4, -8\l  br label %34\l}"];
	Node0x5542f10 -> Node0x5543110;
	Node0x5542e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%24:\l24:                                               \l  %25 = icmp eq i32 %20, 0\l  br i1 %25, label %33, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5542e80:s0 -> Node0x55411b0;
	Node0x5542e80:s1 -> Node0x5543260;
	Node0x5543260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i32 [ %31, %26 ], [ 0, %24 ]\l  %28 = load float, float addrspace(1)* %18, align 4, !tbaa !7\l  %29 = fmul contract float %28, %2\l  %30 = fadd contract float %29, %3\l  store float %30, float addrspace(1)* %19, align 4, !tbaa !7\l  %31 = add i32 %27, 1\l  %32 = icmp eq i32 %31, %20\l  br i1 %32, label %33, label %26, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5543260:s0 -> Node0x55411b0;
	Node0x5543260:s1 -> Node0x5543260;
	Node0x55411b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%33:\l33:                                               \l  ret void\l}"];
	Node0x5543110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%34:\l34:                                               \l  %35 = phi i32 [ 0, %22 ], [ %60, %34 ]\l  %36 = load float, float addrspace(1)* %18, align 4, !tbaa !7\l  %37 = fmul contract float %36, %2\l  %38 = fadd contract float %37, %3\l  store float %38, float addrspace(1)* %19, align 4, !tbaa !7\l  %39 = load float, float addrspace(1)* %18, align 4, !tbaa !7\l  %40 = fmul contract float %39, %2\l  %41 = fadd contract float %40, %3\l  store float %41, float addrspace(1)* %19, align 4, !tbaa !7\l  %42 = load float, float addrspace(1)* %18, align 4, !tbaa !7\l  %43 = fmul contract float %42, %2\l  %44 = fadd contract float %43, %3\l  store float %44, float addrspace(1)* %19, align 4, !tbaa !7\l  %45 = load float, float addrspace(1)* %18, align 4, !tbaa !7\l  %46 = fmul contract float %45, %2\l  %47 = fadd contract float %46, %3\l  store float %47, float addrspace(1)* %19, align 4, !tbaa !7\l  %48 = load float, float addrspace(1)* %18, align 4, !tbaa !7\l  %49 = fmul contract float %48, %2\l  %50 = fadd contract float %49, %3\l  store float %50, float addrspace(1)* %19, align 4, !tbaa !7\l  %51 = load float, float addrspace(1)* %18, align 4, !tbaa !7\l  %52 = fmul contract float %51, %2\l  %53 = fadd contract float %52, %3\l  store float %53, float addrspace(1)* %19, align 4, !tbaa !7\l  %54 = load float, float addrspace(1)* %18, align 4, !tbaa !7\l  %55 = fmul contract float %54, %2\l  %56 = fadd contract float %55, %3\l  store float %56, float addrspace(1)* %19, align 4, !tbaa !7\l  %57 = load float, float addrspace(1)* %18, align 4, !tbaa !7\l  %58 = fmul contract float %57, %2\l  %59 = fadd contract float %58, %3\l  store float %59, float addrspace(1)* %19, align 4, !tbaa !7\l  %60 = add i32 %35, 8\l  %61 = icmp eq i32 %60, %23\l  br i1 %61, label %24, label %34, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5543110:s0 -> Node0x5542e80;
	Node0x5543110:s1 -> Node0x5543110;
}
