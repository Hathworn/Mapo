digraph "CFG for '_Z4movePhjjtb' function" {
	label="CFG for '_Z4movePhjjtb' function";

	Node0x4e5f290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = zext i32 %2 to i64\l  %8 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %7\l  %9 = icmp eq i16 %3, 0\l  br i1 %9, label %106, label %10\l|{<s0>T|<s1>F}}"];
	Node0x4e5f290:s0 -> Node0x4e5ea10;
	Node0x4e5f290:s1 -> Node0x4e608b0;
	Node0x4e608b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%10:\l10:                                               \l  %11 = zext i16 %3 to i32\l  %12 = mul nuw nsw i32 %6, %11\l  %13 = icmp ult i16 %3, 4\l  br i1 %13, label %104, label %14\l|{<s0>T|<s1>F}}"];
	Node0x4e608b0:s0 -> Node0x4e60bb0;
	Node0x4e608b0:s1 -> Node0x4e60c00;
	Node0x4e60c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%14:\l14:                                               \l  %15 = and i32 %11, 65532\l  %16 = insertelement \<4 x i32\> poison, i32 %12, i64 0\l  %17 = shufflevector \<4 x i32\> %16, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %18 = add nsw i32 %11, -4\l  %19 = lshr i32 %18, 2\l  %20 = add nuw nsw i32 %19, 1\l  %21 = and i32 %20, 1\l  %22 = icmp ult i32 %18, 4\l  br i1 %22, label %80, label %23\l|{<s0>T|<s1>F}}"];
	Node0x4e60c00:s0 -> Node0x4e621d0;
	Node0x4e60c00:s1 -> Node0x4e62260;
	Node0x4e62260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%23:\l23:                                               \l  %24 = and i32 %20, -2\l  br label %25\l}"];
	Node0x4e62260 -> Node0x4e62460;
	Node0x4e62460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%25:\l25:                                               \l  %26 = phi \<4 x i32\> [ \<i32 0, i32 1, i32 2, i32 3\>, %23 ], [ %77, %75 ]\l  %27 = phi i32 [ 0, %23 ], [ %78, %75 ]\l  %28 = add nuw nsw \<4 x i32\> %17, %26\l  %29 = zext \<4 x i32\> %28 to \<4 x i64\>\l  %30 = extractelement \<4 x i64\> %29, i64 0\l  %31 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %30\l  %32 = bitcast i8 addrspace(1)* %31 to \<4 x i8\> addrspace(1)*\l  %33 = load \<4 x i8\>, \<4 x i8\> addrspace(1)* %32, align 1, !tbaa !5\l  %34 = extractelement \<4 x i32\> %28, i64 0\l  %35 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @sharedMemT,\l... i32 0, i32 %34\l  %36 = bitcast i8 addrspace(3)* %35 to \<4 x i8\> addrspace(3)*\l  store \<4 x i8\> %33, \<4 x i8\> addrspace(3)* %36, align 1, !tbaa !5\l  br i1 %4, label %37, label %64\l|{<s0>T|<s1>F}}"];
	Node0x4e62460:s0 -> Node0x4e63740;
	Node0x4e62460:s1 -> Node0x4e637d0;
	Node0x4e63740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%37:\l37:                                               \l  %38 = extractelement \<4 x i64\> %29, i64 0\l  %39 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %38\l  store i8 0, i8 addrspace(1)* %39, align 1, !tbaa !5\l  %40 = extractelement \<4 x i64\> %29, i64 1\l  %41 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %40\l  store i8 0, i8 addrspace(1)* %41, align 1, !tbaa !5\l  %42 = extractelement \<4 x i64\> %29, i64 2\l  %43 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %42\l  store i8 0, i8 addrspace(1)* %43, align 1, !tbaa !5\l  %44 = extractelement \<4 x i64\> %29, i64 3\l  %45 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %44\l  store i8 0, i8 addrspace(1)* %45, align 1, !tbaa !5\l  %46 = add \<4 x i32\> %26, \<i32 4, i32 4, i32 4, i32 4\>\l  %47 = add nuw nsw \<4 x i32\> %17, %46\l  %48 = zext \<4 x i32\> %47 to \<4 x i64\>\l  %49 = extractelement \<4 x i64\> %48, i64 0\l  %50 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %49\l  %51 = bitcast i8 addrspace(1)* %50 to \<4 x i8\> addrspace(1)*\l  %52 = load \<4 x i8\>, \<4 x i8\> addrspace(1)* %51, align 1, !tbaa !5\l  %53 = extractelement \<4 x i32\> %47, i64 0\l  %54 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @sharedMemT,\l... i32 0, i32 %53\l  %55 = bitcast i8 addrspace(3)* %54 to \<4 x i8\> addrspace(3)*\l  store \<4 x i8\> %52, \<4 x i8\> addrspace(3)* %55, align 1, !tbaa !5\l  %56 = extractelement \<4 x i64\> %48, i64 0\l  %57 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %56\l  store i8 0, i8 addrspace(1)* %57, align 1, !tbaa !5\l  %58 = extractelement \<4 x i64\> %48, i64 1\l  %59 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %58\l  store i8 0, i8 addrspace(1)* %59, align 1, !tbaa !5\l  %60 = extractelement \<4 x i64\> %48, i64 2\l  %61 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %60\l  store i8 0, i8 addrspace(1)* %61, align 1, !tbaa !5\l  %62 = extractelement \<4 x i64\> %48, i64 3\l  %63 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %62\l  store i8 0, i8 addrspace(1)* %63, align 1, !tbaa !5\l  br label %75\l}"];
	Node0x4e63740 -> Node0x4e626d0;
	Node0x4e637d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%64:\l64:                                               \l  %65 = add \<4 x i32\> %26, \<i32 4, i32 4, i32 4, i32 4\>\l  %66 = add nuw nsw \<4 x i32\> %17, %65\l  %67 = extractelement \<4 x i32\> %66, i64 0\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %68\l  %70 = bitcast i8 addrspace(1)* %69 to \<4 x i8\> addrspace(1)*\l  %71 = load \<4 x i8\>, \<4 x i8\> addrspace(1)* %70, align 1, !tbaa !5\l  %72 = extractelement \<4 x i32\> %66, i64 0\l  %73 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @sharedMemT,\l... i32 0, i32 %72\l  %74 = bitcast i8 addrspace(3)* %73 to \<4 x i8\> addrspace(3)*\l  store \<4 x i8\> %71, \<4 x i8\> addrspace(3)* %74, align 1, !tbaa !5\l  br label %75\l}"];
	Node0x4e637d0 -> Node0x4e626d0;
	Node0x4e626d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%75:\l75:                                               \l  %76 = phi \<4 x i32\> [ %65, %64 ], [ %46, %37 ]\l  %77 = add \<4 x i32\> %76, \<i32 4, i32 4, i32 4, i32 4\>\l  %78 = add i32 %27, 2\l  %79 = icmp eq i32 %78, %24\l  br i1 %79, label %80, label %25, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x4e626d0:s0 -> Node0x4e621d0;
	Node0x4e626d0:s1 -> Node0x4e62460;
	Node0x4e621d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%80:\l80:                                               \l  %81 = phi \<4 x i32\> [ \<i32 0, i32 1, i32 2, i32 3\>, %14 ], [ %77, %75 ]\l  %82 = icmp eq i32 %21, 0\l  br i1 %82, label %102, label %83\l|{<s0>T|<s1>F}}"];
	Node0x4e621d0:s0 -> Node0x4e65b70;
	Node0x4e621d0:s1 -> Node0x4e65bc0;
	Node0x4e65bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%83:\l83:                                               \l  %84 = add nuw nsw \<4 x i32\> %17, %81\l  %85 = zext \<4 x i32\> %84 to \<4 x i64\>\l  %86 = extractelement \<4 x i64\> %85, i64 0\l  %87 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %86\l  %88 = bitcast i8 addrspace(1)* %87 to \<4 x i8\> addrspace(1)*\l  %89 = load \<4 x i8\>, \<4 x i8\> addrspace(1)* %88, align 1, !tbaa !5\l  %90 = extractelement \<4 x i32\> %84, i64 0\l  %91 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @sharedMemT,\l... i32 0, i32 %90\l  %92 = bitcast i8 addrspace(3)* %91 to \<4 x i8\> addrspace(3)*\l  store \<4 x i8\> %89, \<4 x i8\> addrspace(3)* %92, align 1, !tbaa !5\l  br i1 %4, label %93, label %102\l|{<s0>T|<s1>F}}"];
	Node0x4e65bc0:s0 -> Node0x4e66220;
	Node0x4e65bc0:s1 -> Node0x4e65b70;
	Node0x4e66220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%93:\l93:                                               \l  %94 = extractelement \<4 x i64\> %85, i64 0\l  %95 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %94\l  store i8 0, i8 addrspace(1)* %95, align 1, !tbaa !5\l  %96 = extractelement \<4 x i64\> %85, i64 1\l  %97 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %96\l  store i8 0, i8 addrspace(1)* %97, align 1, !tbaa !5\l  %98 = extractelement \<4 x i64\> %85, i64 2\l  %99 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %98\l  store i8 0, i8 addrspace(1)* %99, align 1, !tbaa !5\l  %100 = extractelement \<4 x i64\> %85, i64 3\l  %101 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %100\l  store i8 0, i8 addrspace(1)* %101, align 1, !tbaa !5\l  br label %102\l}"];
	Node0x4e66220 -> Node0x4e65b70;
	Node0x4e65b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%102:\l102:                                              \l  %103 = icmp eq i32 %15, %11\l  br i1 %103, label %106, label %104\l|{<s0>T|<s1>F}}"];
	Node0x4e65b70:s0 -> Node0x4e5ea10;
	Node0x4e65b70:s1 -> Node0x4e60bb0;
	Node0x4e60bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%104:\l104:                                              \l  %105 = phi i32 [ 0, %10 ], [ %15, %102 ]\l  br label %116\l}"];
	Node0x4e60bb0 -> Node0x4e66c80;
	Node0x4e5ea10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%106:\l106:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %107 = zext i32 %1 to i64\l  %108 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %107\l  br i1 %9, label %141, label %109\l|{<s0>T|<s1>F}}"];
	Node0x4e5ea10:s0 -> Node0x4e67050;
	Node0x4e5ea10:s1 -> Node0x4e670a0;
	Node0x4e670a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%109:\l109:                                              \l  %110 = zext i16 %3 to i32\l  %111 = mul nuw nsw i32 %6, %110\l  %112 = and i32 %110, 7\l  %113 = icmp ult i16 %3, 8\l  br i1 %113, label %127, label %114\l|{<s0>T|<s1>F}}"];
	Node0x4e670a0:s0 -> Node0x4e67430;
	Node0x4e670a0:s1 -> Node0x4e67480;
	Node0x4e67480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%114:\l114:                                              \l  %115 = and i32 %110, 65528\l  br label %142\l}"];
	Node0x4e67480 -> Node0x4e67680;
	Node0x4e66c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%116:\l116:                                              \l  %117 = phi i32 [ %125, %124 ], [ %105, %104 ]\l  %118 = add nuw nsw i32 %12, %117\l  %119 = zext i32 %118 to i64\l  %120 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 %119\l  %121 = load i8, i8 addrspace(1)* %120, align 1, !tbaa !5\l  %122 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @sharedMemT,\l... i32 0, i32 %118\l  store i8 %121, i8 addrspace(3)* %122, align 1, !tbaa !5\l  br i1 %4, label %123, label %124\l|{<s0>T|<s1>F}}"];
	Node0x4e66c80:s0 -> Node0x4e67c80;
	Node0x4e66c80:s1 -> Node0x4e67770;
	Node0x4e67c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%123:\l123:                                              \l  store i8 0, i8 addrspace(1)* %120, align 1, !tbaa !5\l  br label %124\l}"];
	Node0x4e67c80 -> Node0x4e67770;
	Node0x4e67770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%124:\l124:                                              \l  %125 = add nuw nsw i32 %117, 1\l  %126 = icmp eq i32 %125, %11\l  br i1 %126, label %106, label %116, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4e67770:s0 -> Node0x4e5ea10;
	Node0x4e67770:s1 -> Node0x4e66c80;
	Node0x4e67430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%127:\l127:                                              \l  %128 = phi i32 [ 0, %109 ], [ %192, %142 ]\l  %129 = icmp eq i32 %112, 0\l  br i1 %129, label %141, label %130\l|{<s0>T|<s1>F}}"];
	Node0x4e67430:s0 -> Node0x4e67050;
	Node0x4e67430:s1 -> Node0x4e64ec0;
	Node0x4e64ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%130:\l130:                                              \l  %131 = phi i32 [ %138, %130 ], [ %128, %127 ]\l  %132 = phi i32 [ %139, %130 ], [ 0, %127 ]\l  %133 = add nuw nsw i32 %111, %131\l  %134 = zext i32 %133 to i64\l  %135 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @sharedMemT,\l... i32 0, i32 %133\l  %136 = load i8, i8 addrspace(3)* %135, align 1, !tbaa !5\l  %137 = getelementptr inbounds i8, i8 addrspace(1)* %108, i64 %134\l  store i8 %136, i8 addrspace(1)* %137, align 1, !tbaa !5\l  %138 = add nuw nsw i32 %131, 1\l  %139 = add i32 %132, 1\l  %140 = icmp eq i32 %139, %112\l  br i1 %140, label %141, label %130, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4e64ec0:s0 -> Node0x4e67050;
	Node0x4e64ec0:s1 -> Node0x4e64ec0;
	Node0x4e67050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%141:\l141:                                              \l  ret void\l}"];
	Node0x4e67680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%142:\l142:                                              \l  %143 = phi i32 [ 0, %114 ], [ %192, %142 ]\l  %144 = phi i32 [ 0, %114 ], [ %193, %142 ]\l  %145 = add nuw nsw i32 %111, %143\l  %146 = zext i32 %145 to i64\l  %147 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @sharedMemT,\l... i32 0, i32 %145\l  %148 = load i8, i8 addrspace(3)* %147, align 1, !tbaa !5\l  %149 = getelementptr inbounds i8, i8 addrspace(1)* %108, i64 %146\l  store i8 %148, i8 addrspace(1)* %149, align 1, !tbaa !5\l  %150 = or i32 %143, 1\l  %151 = add nuw nsw i32 %111, %150\l  %152 = zext i32 %151 to i64\l  %153 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @sharedMemT,\l... i32 0, i32 %151\l  %154 = load i8, i8 addrspace(3)* %153, align 1, !tbaa !5\l  %155 = getelementptr inbounds i8, i8 addrspace(1)* %108, i64 %152\l  store i8 %154, i8 addrspace(1)* %155, align 1, !tbaa !5\l  %156 = or i32 %143, 2\l  %157 = add nuw nsw i32 %111, %156\l  %158 = zext i32 %157 to i64\l  %159 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @sharedMemT,\l... i32 0, i32 %157\l  %160 = load i8, i8 addrspace(3)* %159, align 1, !tbaa !5\l  %161 = getelementptr inbounds i8, i8 addrspace(1)* %108, i64 %158\l  store i8 %160, i8 addrspace(1)* %161, align 1, !tbaa !5\l  %162 = or i32 %143, 3\l  %163 = add nuw nsw i32 %111, %162\l  %164 = zext i32 %163 to i64\l  %165 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @sharedMemT,\l... i32 0, i32 %163\l  %166 = load i8, i8 addrspace(3)* %165, align 1, !tbaa !5\l  %167 = getelementptr inbounds i8, i8 addrspace(1)* %108, i64 %164\l  store i8 %166, i8 addrspace(1)* %167, align 1, !tbaa !5\l  %168 = or i32 %143, 4\l  %169 = add nuw nsw i32 %111, %168\l  %170 = zext i32 %169 to i64\l  %171 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @sharedMemT,\l... i32 0, i32 %169\l  %172 = load i8, i8 addrspace(3)* %171, align 1, !tbaa !5\l  %173 = getelementptr inbounds i8, i8 addrspace(1)* %108, i64 %170\l  store i8 %172, i8 addrspace(1)* %173, align 1, !tbaa !5\l  %174 = or i32 %143, 5\l  %175 = add nuw nsw i32 %111, %174\l  %176 = zext i32 %175 to i64\l  %177 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @sharedMemT,\l... i32 0, i32 %175\l  %178 = load i8, i8 addrspace(3)* %177, align 1, !tbaa !5\l  %179 = getelementptr inbounds i8, i8 addrspace(1)* %108, i64 %176\l  store i8 %178, i8 addrspace(1)* %179, align 1, !tbaa !5\l  %180 = or i32 %143, 6\l  %181 = add nuw nsw i32 %111, %180\l  %182 = zext i32 %181 to i64\l  %183 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @sharedMemT,\l... i32 0, i32 %181\l  %184 = load i8, i8 addrspace(3)* %183, align 1, !tbaa !5\l  %185 = getelementptr inbounds i8, i8 addrspace(1)* %108, i64 %182\l  store i8 %184, i8 addrspace(1)* %185, align 1, !tbaa !5\l  %186 = or i32 %143, 7\l  %187 = add nuw nsw i32 %111, %186\l  %188 = zext i32 %187 to i64\l  %189 = getelementptr inbounds [0 x i8], [0 x i8] addrspace(3)* @sharedMemT,\l... i32 0, i32 %187\l  %190 = load i8, i8 addrspace(3)* %189, align 1, !tbaa !5\l  %191 = getelementptr inbounds i8, i8 addrspace(1)* %108, i64 %188\l  store i8 %190, i8 addrspace(1)* %191, align 1, !tbaa !5\l  %192 = add nuw nsw i32 %143, 8\l  %193 = add i32 %144, 8\l  %194 = icmp eq i32 %193, %115\l  br i1 %194, label %127, label %142, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4e67680:s0 -> Node0x4e67430;
	Node0x4e67680:s1 -> Node0x4e67680;
}
