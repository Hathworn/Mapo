digraph "CFG for '_Z16bit_reduce_countPKjPjS1_t' function" {
	label="CFG for '_Z16bit_reduce_countPKjPjS1_t' function";

	Node0x4b71090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %5\l  %14 = zext i32 %13 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %14\l  %16 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %17 = lshr i32 %16, 8\l  %18 = lshr i32 %16, 16\l  %19 = lshr i32 %16, 24\l  %20 = insertelement \<4 x i32\> poison, i32 %16, i64 0\l  %21 = insertelement \<4 x i32\> %20, i32 %17, i64 1\l  %22 = insertelement \<4 x i32\> %21, i32 %18, i64 2\l  %23 = insertelement \<4 x i32\> %22, i32 %19, i64 3\l  %24 = trunc \<4 x i32\> %23 to \<4 x i8\>\l  %25 = icmp ult i32 %16, 256\l  %26 = icmp ult i32 %16, 65536\l  %27 = select i1 %26, i32 2, i32 4\l  %28 = select i1 %25, i32 1, i32 %27\l  %29 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sharedMem,\l... i32 0, i32 %5\l  store i32 %28, i32 addrspace(3)* %29, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %30 = icmp eq i32 %5, 1\l  br i1 %30, label %31, label %96\l|{<s0>T|<s1>F}}"];
	Node0x4b71090:s0 -> Node0x4b75790;
	Node0x4b71090:s1 -> Node0x4b75820;
	Node0x4b75790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%31:\l31:                                               \l  %32 = icmp eq i16 %3, 0\l  br i1 %32, label %54, label %33\l|{<s0>T|<s1>F}}"];
	Node0x4b75790:s0 -> Node0x4b73850;
	Node0x4b75790:s1 -> Node0x4b738a0;
	Node0x4b738a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%33:\l33:                                               \l  %34 = zext i16 %3 to i32\l  %35 = and i32 %34, 7\l  %36 = icmp ult i16 %3, 8\l  br i1 %36, label %39, label %37\l|{<s0>T|<s1>F}}"];
	Node0x4b738a0:s0 -> Node0x4b75e70;
	Node0x4b738a0:s1 -> Node0x4b75ec0;
	Node0x4b75ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%37:\l37:                                               \l  %38 = and i32 %34, 65528\l  br label %58\l}"];
	Node0x4b75ec0 -> Node0x4b760c0;
	Node0x4b75e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%39:\l39:                                               \l  %40 = phi i32 [ undef, %33 ], [ %92, %58 ]\l  %41 = phi i32 [ 0, %33 ], [ %93, %58 ]\l  %42 = phi i32 [ 0, %33 ], [ %92, %58 ]\l  %43 = icmp eq i32 %35, 0\l  br i1 %43, label %54, label %44\l|{<s0>T|<s1>F}}"];
	Node0x4b75e70:s0 -> Node0x4b73850;
	Node0x4b75e70:s1 -> Node0x4b768e0;
	Node0x4b768e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi i32 [ %51, %44 ], [ %41, %39 ]\l  %46 = phi i32 [ %50, %44 ], [ %42, %39 ]\l  %47 = phi i32 [ %52, %44 ], [ 0, %39 ]\l  %48 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sharedMem,\l... i32 0, i32 %45\l  %49 = load i32, i32 addrspace(3)* %48, align 4, !tbaa !7\l  %50 = add i32 %49, %46\l  store i32 %50, i32 addrspace(3)* %48, align 4, !tbaa !7\l  %51 = add nuw nsw i32 %45, 1\l  %52 = add i32 %47, 1\l  %53 = icmp eq i32 %52, %35\l  br i1 %53, label %54, label %44, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4b768e0:s0 -> Node0x4b73850;
	Node0x4b768e0:s1 -> Node0x4b768e0;
	Node0x4b73850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%54:\l54:                                               \l  %55 = phi i32 [ 0, %31 ], [ %40, %39 ], [ %50, %44 ]\l  %56 = zext i32 %11 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %56\l  store i32 %55, i32 addrspace(1)* %57, align 4, !tbaa !7\l  br label %96\l}"];
	Node0x4b73850 -> Node0x4b75820;
	Node0x4b760c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%58:\l58:                                               \l  %59 = phi i32 [ 0, %37 ], [ %93, %58 ]\l  %60 = phi i32 [ 0, %37 ], [ %92, %58 ]\l  %61 = phi i32 [ 0, %37 ], [ %94, %58 ]\l  %62 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sharedMem,\l... i32 0, i32 %59\l  %63 = load i32, i32 addrspace(3)* %62, align 4, !tbaa !7\l  %64 = add i32 %63, %60\l  store i32 %64, i32 addrspace(3)* %62, align 4, !tbaa !7\l  %65 = or i32 %59, 1\l  %66 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sharedMem,\l... i32 0, i32 %65\l  %67 = load i32, i32 addrspace(3)* %66, align 4, !tbaa !7\l  %68 = add i32 %67, %64\l  store i32 %68, i32 addrspace(3)* %66, align 4, !tbaa !7\l  %69 = or i32 %59, 2\l  %70 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sharedMem,\l... i32 0, i32 %69\l  %71 = load i32, i32 addrspace(3)* %70, align 4, !tbaa !7\l  %72 = add i32 %71, %68\l  store i32 %72, i32 addrspace(3)* %70, align 4, !tbaa !7\l  %73 = or i32 %59, 3\l  %74 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sharedMem,\l... i32 0, i32 %73\l  %75 = load i32, i32 addrspace(3)* %74, align 4, !tbaa !7\l  %76 = add i32 %75, %72\l  store i32 %76, i32 addrspace(3)* %74, align 4, !tbaa !7\l  %77 = or i32 %59, 4\l  %78 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sharedMem,\l... i32 0, i32 %77\l  %79 = load i32, i32 addrspace(3)* %78, align 4, !tbaa !7\l  %80 = add i32 %79, %76\l  store i32 %80, i32 addrspace(3)* %78, align 4, !tbaa !7\l  %81 = or i32 %59, 5\l  %82 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sharedMem,\l... i32 0, i32 %81\l  %83 = load i32, i32 addrspace(3)* %82, align 4, !tbaa !7\l  %84 = add i32 %83, %80\l  store i32 %84, i32 addrspace(3)* %82, align 4, !tbaa !7\l  %85 = or i32 %59, 6\l  %86 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sharedMem,\l... i32 0, i32 %85\l  %87 = load i32, i32 addrspace(3)* %86, align 4, !tbaa !7\l  %88 = add i32 %87, %84\l  store i32 %88, i32 addrspace(3)* %86, align 4, !tbaa !7\l  %89 = or i32 %59, 7\l  %90 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sharedMem,\l... i32 0, i32 %89\l  %91 = load i32, i32 addrspace(3)* %90, align 4, !tbaa !7\l  %92 = add i32 %91, %88\l  store i32 %92, i32 addrspace(3)* %90, align 4, !tbaa !7\l  %93 = add nuw nsw i32 %59, 8\l  %94 = add i32 %61, 8\l  %95 = icmp eq i32 %94, %38\l  br i1 %95, label %39, label %58, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4b760c0:s0 -> Node0x4b75e70;
	Node0x4b760c0:s1 -> Node0x4b760c0;
	Node0x4b75820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%96:\l96:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %97 = load i32, i32 addrspace(3)* %29, align 4, !tbaa !7\l  %98 = sub nsw i32 %5, %28\l  %99 = add i32 %98, %97\l  %100 = zext i32 %12 to i64\l  %101 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %100\l  %102 = bitcast i32 addrspace(1)* %101 to i8 addrspace(1)*\l  %103 = zext i32 %99 to i64\l  %104 = getelementptr inbounds i8, i8 addrspace(1)* %102, i64 %103\l  br i1 %25, label %105, label %108\l|{<s0>T|<s1>F}}"];
	Node0x4b75820:s0 -> Node0x4b798a0;
	Node0x4b75820:s1 -> Node0x4b798f0;
	Node0x4b798a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%105:\l105:                                              \l  store i8 1, i8 addrspace(1)* %104, align 1, !tbaa !15\l  %106 = getelementptr inbounds i8, i8 addrspace(1)* %104, i64 1\l  %107 = extractelement \<4 x i8\> %24, i64 0\l  store i8 %107, i8 addrspace(1)* %106, align 1, !tbaa !15\l  br label %116\l}"];
	Node0x4b798a0 -> Node0x4b7a350;
	Node0x4b798f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%108:\l108:                                              \l  %109 = getelementptr inbounds i8, i8 addrspace(1)* %104, i64 1\l  br i1 %26, label %110, label %114\l|{<s0>T|<s1>F}}"];
	Node0x4b798f0:s0 -> Node0x4b7a4f0;
	Node0x4b798f0:s1 -> Node0x4b7a540;
	Node0x4b7a4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%110:\l110:                                              \l  store i8 2, i8 addrspace(1)* %104, align 1, !tbaa !15\l  %111 = getelementptr inbounds i8, i8 addrspace(1)* %109, i64 1\l  %112 = extractelement \<4 x i8\> %24, i64 1\l  store i8 %112, i8 addrspace(1)* %111, align 1, !tbaa !15\l  %113 = extractelement \<4 x i8\> %24, i64 0\l  store i8 %113, i8 addrspace(1)* %109, align 1, !tbaa !15\l  br label %116\l}"];
	Node0x4b7a4f0 -> Node0x4b7a350;
	Node0x4b7a540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%114:\l114:                                              \l  store i8 4, i8 addrspace(1)* %104, align 1, !tbaa !15\l  %115 = bitcast i8 addrspace(1)* %109 to \<4 x i8\> addrspace(1)*\l  store \<4 x i8\> %24, \<4 x i8\> addrspace(1)* %115, align 1, !tbaa !15\l  br label %116\l}"];
	Node0x4b7a540 -> Node0x4b7a350;
	Node0x4b7a350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%116:\l116:                                              \l  ret void\l}"];
}
