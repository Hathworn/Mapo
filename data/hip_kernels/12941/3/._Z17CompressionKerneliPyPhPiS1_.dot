digraph "CFG for '_Z17CompressionKerneliPyPhPiS1_' function" {
	label="CFG for '_Z17CompressionKerneliPyPhPiS1_' function";

	Node0x5c6f630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = and i32 %6, 31\l  %8 = lshr i32 %6, 5\l  %9 = mul nuw nsw i32 %8, 48\l  %10 = add nuw nsw i32 %9, %7\l  %11 = getelementptr inbounds [1536 x i32], [1536 x i32] addrspace(3)*\l... @_ZZ17CompressionKerneliPyPhPiS1_E5ibufs, i32 0, i32 %10\l  store i32 0, i32 addrspace(3)* %11, align 4, !tbaa !5\l  %12 = add nuw nsw i32 %10, 16\l  %13 = add nuw nsw i32 %9, 47\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !9, !invariant.load\l... !10\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %14, %19\l  %21 = add i32 %20, %6\l  %22 = lshr i32 %21, 5\l  %23 = srem i32 %7, %0\l  %24 = icmp ult i32 %21, 32\l  br i1 %24, label %30, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5c6f630:s0 -> Node0x5c71dc0;
	Node0x5c6f630:s1 -> Node0x5c71e50;
	Node0x5c71e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%25:\l25:                                               \l  %26 = add nsw i32 %22, -1\l  %27 = zext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !5, !amdgpu.noclobber\l... !10\l  br label %30\l}"];
	Node0x5c71e50 -> Node0x5c71dc0;
	Node0x5c71dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%30:\l30:                                               \l  %31 = phi i32 [ %29, %25 ], [ 0, %5 ]\l  %32 = zext i32 %22 to i64\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !5, !amdgpu.noclobber\l... !10\l  %35 = add nsw i32 %31, 1\l  %36 = sdiv i32 %35, 2\l  %37 = mul nsw i32 %36, 17\l  %38 = add nsw i32 %31, %7\l  %39 = icmp slt i32 %38, %34\l  br i1 %39, label %40, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5c71dc0:s0 -> Node0x5c73530;
	Node0x5c71dc0:s1 -> Node0x5c735c0;
	Node0x5c73530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%40:\l40:                                               \l  %41 = getelementptr inbounds [1536 x i32], [1536 x i32] addrspace(3)*\l... @_ZZ17CompressionKerneliPyPhPiS1_E5ibufs, i32 0, i32 %12\l  %42 = add nuw nsw i32 %10, 15\l  %43 = getelementptr inbounds [1536 x i32], [1536 x i32] addrspace(3)*\l... @_ZZ17CompressionKerneliPyPhPiS1_E5ibufs, i32 0, i32 %42\l  %44 = add nuw nsw i32 %10, 14\l  %45 = getelementptr inbounds [1536 x i32], [1536 x i32] addrspace(3)*\l... @_ZZ17CompressionKerneliPyPhPiS1_E5ibufs, i32 0, i32 %44\l  %46 = add nuw nsw i32 %10, 12\l  %47 = getelementptr inbounds [1536 x i32], [1536 x i32] addrspace(3)*\l... @_ZZ17CompressionKerneliPyPhPiS1_E5ibufs, i32 0, i32 %46\l  %48 = add nuw nsw i32 %10, 8\l  %49 = getelementptr inbounds [1536 x i32], [1536 x i32] addrspace(3)*\l... @_ZZ17CompressionKerneliPyPhPiS1_E5ibufs, i32 0, i32 %48\l  %50 = getelementptr inbounds [1536 x i32], [1536 x i32] addrspace(3)*\l... @_ZZ17CompressionKerneliPyPhPiS1_E5ibufs, i32 0, i32 %13\l  %51 = and i32 %6, 1\l  %52 = icmp eq i32 %51, 0\l  %53 = lshr i32 %7, 1\l  %54 = add i32 %7, %0\l  br label %58\l}"];
	Node0x5c73530 -> Node0x5c73760;
	Node0x5c735c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%55:\l55:                                               \l  %56 = phi i32 [ %37, %30 ], [ %122, %121 ]\l  %57 = icmp eq i32 %7, 31\l  br i1 %57, label %130, label %132\l|{<s0>T|<s1>F}}"];
	Node0x5c735c0:s0 -> Node0x5c743a0;
	Node0x5c735c0:s1 -> Node0x5c74430;
	Node0x5c73760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%58:\l58:                                               \l  %59 = phi i32 [ %38, %40 ], [ %123, %121 ]\l  %60 = phi i64 [ 0, %40 ], [ %128, %121 ]\l  %61 = phi i32 [ %37, %40 ], [ %122, %121 ]\l  %62 = sext i32 %59 to i64\l  %63 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %62\l  %64 = load i64, i64 addrspace(1)* %63, align 8, !tbaa !11\l  %65 = sub i64 %64, %60\l  %66 = lshr i64 %65, 60\l  %67 = trunc i64 %66 to i32\l  %68 = and i32 %67, 8\l  %69 = icmp eq i32 %68, 0\l  %70 = sub i64 0, %65\l  %71 = select i1 %69, i64 %65, i64 %70\l  %72 = tail call i64 @llvm.ctlz.i64(i64 %71, i1 false), !range !13\l  %73 = trunc i64 %72 to i32\l  %74 = lshr i32 %73, 3\l  %75 = sub nuw nsw i32 8, %74\l  %76 = icmp eq i32 %74, 6\l  %77 = select i1 %76, i32 3, i32 %75\l  store i32 %77, i32 addrspace(3)* %41, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") seq_cst\l  %78 = load i32, i32 addrspace(3)* %43, align 4, !tbaa !5\l  %79 = load i32, i32 addrspace(3)* %41, align 4, !tbaa !5\l  %80 = add nsw i32 %79, %78\l  store i32 %80, i32 addrspace(3)* %41, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") seq_cst\l  %81 = load i32, i32 addrspace(3)* %45, align 4, !tbaa !5\l  %82 = load i32, i32 addrspace(3)* %41, align 4, !tbaa !5\l  %83 = add nsw i32 %82, %81\l  store i32 %83, i32 addrspace(3)* %41, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") seq_cst\l  %84 = load i32, i32 addrspace(3)* %47, align 4, !tbaa !5\l  %85 = load i32, i32 addrspace(3)* %41, align 4, !tbaa !5\l  %86 = add nsw i32 %85, %84\l  store i32 %86, i32 addrspace(3)* %41, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") seq_cst\l  %87 = load i32, i32 addrspace(3)* %49, align 4, !tbaa !5\l  %88 = load i32, i32 addrspace(3)* %41, align 4, !tbaa !5\l  %89 = add nsw i32 %88, %87\l  store i32 %89, i32 addrspace(3)* %41, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") seq_cst\l  %90 = load i32, i32 addrspace(3)* %11, align 4, !tbaa !5\l  %91 = load i32, i32 addrspace(3)* %41, align 4, !tbaa !5\l  %92 = add nsw i32 %91, %90\l  store i32 %92, i32 addrspace(3)* %41, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") seq_cst\l  %93 = add i32 %61, 16\l  %94 = load i32, i32 addrspace(3)* %43, align 4, !tbaa !5\l  %95 = add nsw i32 %93, %94\l  %96 = add nsw i32 %95, %77\l  %97 = icmp eq i32 %77, 0\l  br i1 %97, label %107, label %98\l|{<s0>T|<s1>F}}"];
	Node0x5c73760:s0 -> Node0x5c767b0;
	Node0x5c73760:s1 -> Node0x5c76840;
	Node0x5c76840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%98:\l98:                                               \l  %99 = phi i64 [ %104, %98 ], [ %71, %58 ]\l  %100 = phi i32 [ %105, %98 ], [ %95, %58 ]\l  %101 = trunc i64 %99 to i8\l  %102 = sext i32 %100 to i64\l  %103 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %102\l  store i8 %101, i8 addrspace(1)* %103, align 1, !tbaa !14\l  %104 = lshr i64 %99, 8\l  %105 = add nsw i32 %100, 1\l  %106 = icmp slt i32 %105, %96\l  br i1 %106, label %98, label %107, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5c76840:s0 -> Node0x5c76840;
	Node0x5c76840:s1 -> Node0x5c767b0;
	Node0x5c767b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%107:\l107:                                              \l  %108 = icmp sgt i32 %77, 2\l  %109 = sext i1 %108 to i32\l  %110 = add nsw i32 %77, %109\l  %111 = load i32, i32 addrspace(3)* %50, align 4, !tbaa !5\l  %112 = or i32 %110, %68\l  store i32 %112, i32 addrspace(3)* %41, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") seq_cst\l  br i1 %52, label %121, label %113\l|{<s0>T|<s1>F}}"];
	Node0x5c767b0:s0 -> Node0x5c74210;
	Node0x5c767b0:s1 -> Node0x5c77560;
	Node0x5c77560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%113:\l113:                                              \l  %114 = load i32, i32 addrspace(3)* %43, align 4, !tbaa !5\l  %115 = shl i32 %112, 4\l  %116 = or i32 %114, %115\l  %117 = trunc i32 %116 to i8\l  %118 = add nsw i32 %61, %53\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %119\l  store i8 %117, i8 addrspace(1)* %120, align 1, !tbaa !14\l  br label %121\l}"];
	Node0x5c77560 -> Node0x5c74210;
	Node0x5c74210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%121:\l121:                                              \l  %122 = add i32 %93, %111\l  %123 = add i32 %59, 32\l  %124 = sub i32 %123, %54\l  %125 = add i32 %124, %23\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %126\l  %128 = load i64, i64 addrspace(1)* %127, align 8, !tbaa !11\l  %129 = icmp slt i32 %123, %34\l  br i1 %129, label %58, label %55, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5c74210:s0 -> Node0x5c73760;
	Node0x5c74210:s1 -> Node0x5c735c0;
	Node0x5c743a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%130:\l130:                                              \l  %131 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %32\l  store i32 %56, i32 addrspace(1)* %131, align 4, !tbaa !5\l  br label %132\l}"];
	Node0x5c743a0 -> Node0x5c74430;
	Node0x5c74430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%132:\l132:                                              \l  ret void\l}"];
}
