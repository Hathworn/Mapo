digraph "CFG for '_Z21squareMatrixMulKernelPiS_S_i' function" {
	label="CFG for '_Z21squareMatrixMulKernelPiS_S_i' function";

	Node0x525a810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = icmp sgt i32 %3, 0\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %7 = mul i32 %6, %3\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  br i1 %5, label %9, label %42\l|{<s0>T|<s1>F}}"];
	Node0x525a810:s0 -> Node0x525a8a0;
	Node0x525a810:s1 -> Node0x525c630;
	Node0x525a8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%9:\l9:                                                \l  %10 = and i32 %3, 7\l  %11 = icmp ult i32 %3, 8\l  br i1 %11, label %14, label %12\l|{<s0>T|<s1>F}}"];
	Node0x525a8a0:s0 -> Node0x525c8f0;
	Node0x525a8a0:s1 -> Node0x525c940;
	Node0x525c940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%12:\l12:                                               \l  %13 = and i32 %3, -8\l  br label %47\l}"];
	Node0x525c940 -> Node0x525cb40;
	Node0x525c8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%14:\l14:                                               \l  %15 = phi float [ undef, %9 ], [ %161, %47 ]\l  %16 = phi float [ 0.000000e+00, %9 ], [ %161, %47 ]\l  %17 = phi i32 [ 0, %9 ], [ %162, %47 ]\l  %18 = icmp eq i32 %10, 0\l  br i1 %18, label %39, label %19\l|{<s0>T|<s1>F}}"];
	Node0x525c8f0:s0 -> Node0x525de50;
	Node0x525c8f0:s1 -> Node0x525dee0;
	Node0x525dee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = phi float [ %35, %19 ], [ %16, %14 ]\l  %21 = phi i32 [ %36, %19 ], [ %17, %14 ]\l  %22 = phi i32 [ %37, %19 ], [ 0, %14 ]\l  %23 = add i32 %21, %7\l  %24 = zext i32 %23 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %27 = sitofp i32 %26 to float\l  %28 = mul nsw i32 %21, %3\l  %29 = add i32 %28, %8\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %33 = sitofp i32 %32 to float\l  %34 = fmul contract float %27, %33\l  %35 = fadd contract float %20, %34\l  %36 = add nuw nsw i32 %21, 1\l  %37 = add i32 %22, 1\l  %38 = icmp eq i32 %37, %10\l  br i1 %38, label %39, label %19, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x525dee0:s0 -> Node0x525de50;
	Node0x525dee0:s1 -> Node0x525dee0;
	Node0x525de50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%39:\l39:                                               \l  %40 = phi float [ %15, %14 ], [ %35, %19 ]\l  %41 = fptosi float %40 to i32\l  br label %42\l}"];
	Node0x525de50 -> Node0x525c630;
	Node0x525c630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%42:\l42:                                               \l  %43 = phi i32 [ %41, %39 ], [ 0, %4 ]\l  %44 = add i32 %7, %8\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %45\l  store i32 %43, i32 addrspace(1)* %46, align 4, !tbaa !5\l  ret void\l}"];
	Node0x525cb40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%47:\l47:                                               \l  %48 = phi float [ 0.000000e+00, %12 ], [ %161, %47 ]\l  %49 = phi i32 [ 0, %12 ], [ %162, %47 ]\l  %50 = phi i32 [ 0, %12 ], [ %163, %47 ]\l  %51 = add i32 %49, %7\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %52\l  %54 = load i32, i32 addrspace(1)* %53, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %55 = sitofp i32 %54 to float\l  %56 = mul nsw i32 %49, %3\l  %57 = add i32 %56, %8\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %58\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %61 = sitofp i32 %60 to float\l  %62 = fmul contract float %55, %61\l  %63 = fadd contract float %48, %62\l  %64 = or i32 %49, 1\l  %65 = add i32 %64, %7\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %66\l  %68 = load i32, i32 addrspace(1)* %67, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %69 = sitofp i32 %68 to float\l  %70 = mul nsw i32 %64, %3\l  %71 = add i32 %70, %8\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %72\l  %74 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %75 = sitofp i32 %74 to float\l  %76 = fmul contract float %69, %75\l  %77 = fadd contract float %63, %76\l  %78 = or i32 %49, 2\l  %79 = add i32 %78, %7\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %80\l  %82 = load i32, i32 addrspace(1)* %81, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %83 = sitofp i32 %82 to float\l  %84 = mul nsw i32 %78, %3\l  %85 = add i32 %84, %8\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %86\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %89 = sitofp i32 %88 to float\l  %90 = fmul contract float %83, %89\l  %91 = fadd contract float %77, %90\l  %92 = or i32 %49, 3\l  %93 = add i32 %92, %7\l  %94 = zext i32 %93 to i64\l  %95 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %94\l  %96 = load i32, i32 addrspace(1)* %95, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %97 = sitofp i32 %96 to float\l  %98 = mul nsw i32 %92, %3\l  %99 = add i32 %98, %8\l  %100 = zext i32 %99 to i64\l  %101 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %100\l  %102 = load i32, i32 addrspace(1)* %101, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %103 = sitofp i32 %102 to float\l  %104 = fmul contract float %97, %103\l  %105 = fadd contract float %91, %104\l  %106 = or i32 %49, 4\l  %107 = add i32 %106, %7\l  %108 = zext i32 %107 to i64\l  %109 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %108\l  %110 = load i32, i32 addrspace(1)* %109, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %111 = sitofp i32 %110 to float\l  %112 = mul nsw i32 %106, %3\l  %113 = add i32 %112, %8\l  %114 = zext i32 %113 to i64\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %114\l  %116 = load i32, i32 addrspace(1)* %115, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %117 = sitofp i32 %116 to float\l  %118 = fmul contract float %111, %117\l  %119 = fadd contract float %105, %118\l  %120 = or i32 %49, 5\l  %121 = add i32 %120, %7\l  %122 = zext i32 %121 to i64\l  %123 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %122\l  %124 = load i32, i32 addrspace(1)* %123, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %125 = sitofp i32 %124 to float\l  %126 = mul nsw i32 %120, %3\l  %127 = add i32 %126, %8\l  %128 = zext i32 %127 to i64\l  %129 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %128\l  %130 = load i32, i32 addrspace(1)* %129, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %131 = sitofp i32 %130 to float\l  %132 = fmul contract float %125, %131\l  %133 = fadd contract float %119, %132\l  %134 = or i32 %49, 6\l  %135 = add i32 %134, %7\l  %136 = zext i32 %135 to i64\l  %137 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %136\l  %138 = load i32, i32 addrspace(1)* %137, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %139 = sitofp i32 %138 to float\l  %140 = mul nsw i32 %134, %3\l  %141 = add i32 %140, %8\l  %142 = zext i32 %141 to i64\l  %143 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %142\l  %144 = load i32, i32 addrspace(1)* %143, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %145 = sitofp i32 %144 to float\l  %146 = fmul contract float %139, %145\l  %147 = fadd contract float %133, %146\l  %148 = or i32 %49, 7\l  %149 = add i32 %148, %7\l  %150 = zext i32 %149 to i64\l  %151 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %150\l  %152 = load i32, i32 addrspace(1)* %151, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %153 = sitofp i32 %152 to float\l  %154 = mul nsw i32 %148, %3\l  %155 = add i32 %154, %8\l  %156 = zext i32 %155 to i64\l  %157 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %156\l  %158 = load i32, i32 addrspace(1)* %157, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %159 = sitofp i32 %158 to float\l  %160 = fmul contract float %153, %159\l  %161 = fadd contract float %147, %160\l  %162 = add nuw nsw i32 %49, 8\l  %163 = add i32 %50, 8\l  %164 = icmp eq i32 %163, %13\l  br i1 %164, label %14, label %47, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x525cb40:s0 -> Node0x525c8f0;
	Node0x525cb40:s1 -> Node0x525cb40;
}
