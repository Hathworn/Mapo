digraph "CFG for '_Z9addKernelPiPKiS1_' function" {
	label="CFG for '_Z9addKernelPiPKiS1_' function";

	Node0x58271c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = zext i32 %4 to i64\l  %6 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %5\l  %7 = load i32, i32 addrspace(1)* %6, align 4, !tbaa !5, !amdgpu.noclobber !9\l  %8 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %5\l  %9 = load i32, i32 addrspace(1)* %8, align 4, !tbaa !5, !amdgpu.noclobber !9\l  %10 = add nsw i32 %9, %7\l  %11 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %5\l  store i32 %10, i32 addrspace(1)* %11, align 4, !tbaa !5\l  %12 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 24\l  %14 = bitcast i8 addrspace(4)* %13 to i64 addrspace(4)*\l  %15 = load i64, i64 addrspace(4)* %14, align 8, !tbaa !10\l  %16 = inttoptr i64 %15 to i8 addrspace(1)*\l  %17 = addrspacecast i8 addrspace(1)* %16 to i8*\l  %18 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %17,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %19 = extractelement \<2 x i64\> %18, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([4 x i8], [4 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %20, label %24\l|{<s0>T|<s1>F}}"];
	Node0x58271c0:s0 -> Node0x582a870;
	Node0x58271c0:s1 -> Node0x582b260;
	Node0x582a870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%20:\l20:                                               \l  %21 = and i64 %19, -225\l  %22 = or i64 %21, 32\l  %23 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %17,\l... i64 noundef %22, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %465\l}"];
	Node0x582a870 -> Node0x582b520;
	Node0x582b260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%24:\l24:                                               \l  %25 = and i64 %19, 2\l  %26 = and i64 %19, -3\l  %27 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %26, i64 0\l  br label %28\l}"];
	Node0x582b260 -> Node0x582c0c0;
	Node0x582c0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%28:\l28:                                               \l  %29 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([4 x i8], [4 x i8] addrspace(4)* @.str, i64 0, i64 0)\l... to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([4 x i8], [4 x i8] addrspace(4)* @.str,\l... i64 0, i64 3) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint ([4 x\l... i8]* addrspacecast ([4 x i8] addrspace(4)* @.str to [4 x i8]*) to i64)), i64\l... 1))), %24 ], [ %462, %454 ]\l  %30 = phi i8 addrspace(4)* [ getelementptr inbounds ([4 x i8], [4 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %24 ], [ %463, %454 ]\l  %31 = phi \<2 x i64\> [ %27, %24 ], [ %461, %454 ]\l  %32 = icmp ugt i64 %29, 56\l  %33 = extractelement \<2 x i64\> %31, i64 0\l  %34 = or i64 %33, %25\l  %35 = insertelement \<2 x i64\> poison, i64 %34, i64 0\l  %36 = select i1 %32, \<2 x i64\> %31, \<2 x i64\> %35\l  %37 = tail call i64 @llvm.umin.i64(i64 %29, i64 56)\l  %38 = trunc i64 %37 to i32\l  %39 = extractelement \<2 x i64\> %36, i64 0\l  %40 = icmp ugt i32 %38, 7\l  br i1 %40, label %43, label %41\l|{<s0>T|<s1>F}}"];
	Node0x582c0c0:s0 -> Node0x582d140;
	Node0x582c0c0:s1 -> Node0x582d1d0;
	Node0x582d1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%41:\l41:                                               \l  %42 = icmp eq i32 %38, 0\l  br i1 %42, label %96, label %83\l|{<s0>T|<s1>F}}"];
	Node0x582d1d0:s0 -> Node0x582d3d0;
	Node0x582d1d0:s1 -> Node0x582d420;
	Node0x582d140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%43:\l43:                                               \l  %44 = load i8, i8 addrspace(4)* %30, align 1, !tbaa !14\l  %45 = zext i8 %44 to i64\l  %46 = getelementptr inbounds i8, i8 addrspace(4)* %30, i64 1\l  %47 = load i8, i8 addrspace(4)* %46, align 1, !tbaa !14\l  %48 = zext i8 %47 to i64\l  %49 = shl nuw nsw i64 %48, 8\l  %50 = or i64 %49, %45\l  %51 = getelementptr inbounds i8, i8 addrspace(4)* %30, i64 2\l  %52 = load i8, i8 addrspace(4)* %51, align 1, !tbaa !14\l  %53 = zext i8 %52 to i64\l  %54 = shl nuw nsw i64 %53, 16\l  %55 = or i64 %50, %54\l  %56 = getelementptr inbounds i8, i8 addrspace(4)* %30, i64 3\l  %57 = load i8, i8 addrspace(4)* %56, align 1, !tbaa !14\l  %58 = zext i8 %57 to i64\l  %59 = shl nuw nsw i64 %58, 24\l  %60 = or i64 %55, %59\l  %61 = getelementptr inbounds i8, i8 addrspace(4)* %30, i64 4\l  %62 = load i8, i8 addrspace(4)* %61, align 1, !tbaa !14\l  %63 = zext i8 %62 to i64\l  %64 = shl nuw nsw i64 %63, 32\l  %65 = or i64 %60, %64\l  %66 = getelementptr inbounds i8, i8 addrspace(4)* %30, i64 5\l  %67 = load i8, i8 addrspace(4)* %66, align 1, !tbaa !14\l  %68 = zext i8 %67 to i64\l  %69 = shl nuw nsw i64 %68, 40\l  %70 = or i64 %65, %69\l  %71 = getelementptr inbounds i8, i8 addrspace(4)* %30, i64 6\l  %72 = load i8, i8 addrspace(4)* %71, align 1, !tbaa !14\l  %73 = zext i8 %72 to i64\l  %74 = shl nuw nsw i64 %73, 48\l  %75 = or i64 %70, %74\l  %76 = getelementptr inbounds i8, i8 addrspace(4)* %30, i64 7\l  %77 = load i8, i8 addrspace(4)* %76, align 1, !tbaa !14\l  %78 = zext i8 %77 to i64\l  %79 = shl nuw i64 %78, 56\l  %80 = or i64 %75, %79\l  %81 = add nsw i32 %38, -8\l  %82 = getelementptr inbounds i8, i8 addrspace(4)* %30, i64 8\l  br label %96\l}"];
	Node0x582d140 -> Node0x582d3d0;
	Node0x582d420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  %84 = phi i32 [ %94, %83 ], [ 0, %41 ]\l  %85 = phi i64 [ %93, %83 ], [ 0, %41 ]\l  %86 = zext i32 %84 to i64\l  %87 = getelementptr inbounds i8, i8 addrspace(4)* %30, i64 %86\l  %88 = load i8, i8 addrspace(4)* %87, align 1, !tbaa !14\l  %89 = zext i8 %88 to i64\l  %90 = shl i32 %84, 3\l  %91 = zext i32 %90 to i64\l  %92 = shl nuw i64 %89, %91\l  %93 = or i64 %92, %85\l  %94 = add nuw nsw i32 %84, 1\l  %95 = icmp eq i32 %94, %38\l  br i1 %95, label %96, label %83, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x582d420:s0 -> Node0x582d3d0;
	Node0x582d420:s1 -> Node0x582d420;
	Node0x582d3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%96:\l96:                                               \l  %97 = phi i8 addrspace(4)* [ %82, %43 ], [ %30, %41 ], [ %30, %83 ]\l  %98 = phi i32 [ %81, %43 ], [ 0, %41 ], [ 0, %83 ]\l  %99 = phi i64 [ %80, %43 ], [ 0, %41 ], [ %93, %83 ]\l  %100 = icmp ugt i32 %98, 7\l  br i1 %100, label %103, label %101\l|{<s0>T|<s1>F}}"];
	Node0x582d3d0:s0 -> Node0x58300d0;
	Node0x582d3d0:s1 -> Node0x5830120;
	Node0x5830120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%101:\l101:                                              \l  %102 = icmp eq i32 %98, 0\l  br i1 %102, label %156, label %143\l|{<s0>T|<s1>F}}"];
	Node0x5830120:s0 -> Node0x58302f0;
	Node0x5830120:s1 -> Node0x5830340;
	Node0x58300d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%103:\l103:                                              \l  %104 = load i8, i8 addrspace(4)* %97, align 1, !tbaa !14\l  %105 = zext i8 %104 to i64\l  %106 = getelementptr inbounds i8, i8 addrspace(4)* %97, i64 1\l  %107 = load i8, i8 addrspace(4)* %106, align 1, !tbaa !14\l  %108 = zext i8 %107 to i64\l  %109 = shl nuw nsw i64 %108, 8\l  %110 = or i64 %109, %105\l  %111 = getelementptr inbounds i8, i8 addrspace(4)* %97, i64 2\l  %112 = load i8, i8 addrspace(4)* %111, align 1, !tbaa !14\l  %113 = zext i8 %112 to i64\l  %114 = shl nuw nsw i64 %113, 16\l  %115 = or i64 %110, %114\l  %116 = getelementptr inbounds i8, i8 addrspace(4)* %97, i64 3\l  %117 = load i8, i8 addrspace(4)* %116, align 1, !tbaa !14\l  %118 = zext i8 %117 to i64\l  %119 = shl nuw nsw i64 %118, 24\l  %120 = or i64 %115, %119\l  %121 = getelementptr inbounds i8, i8 addrspace(4)* %97, i64 4\l  %122 = load i8, i8 addrspace(4)* %121, align 1, !tbaa !14\l  %123 = zext i8 %122 to i64\l  %124 = shl nuw nsw i64 %123, 32\l  %125 = or i64 %120, %124\l  %126 = getelementptr inbounds i8, i8 addrspace(4)* %97, i64 5\l  %127 = load i8, i8 addrspace(4)* %126, align 1, !tbaa !14\l  %128 = zext i8 %127 to i64\l  %129 = shl nuw nsw i64 %128, 40\l  %130 = or i64 %125, %129\l  %131 = getelementptr inbounds i8, i8 addrspace(4)* %97, i64 6\l  %132 = load i8, i8 addrspace(4)* %131, align 1, !tbaa !14\l  %133 = zext i8 %132 to i64\l  %134 = shl nuw nsw i64 %133, 48\l  %135 = or i64 %130, %134\l  %136 = getelementptr inbounds i8, i8 addrspace(4)* %97, i64 7\l  %137 = load i8, i8 addrspace(4)* %136, align 1, !tbaa !14\l  %138 = zext i8 %137 to i64\l  %139 = shl nuw i64 %138, 56\l  %140 = or i64 %135, %139\l  %141 = add nsw i32 %98, -8\l  %142 = getelementptr inbounds i8, i8 addrspace(4)* %97, i64 8\l  br label %156\l}"];
	Node0x58300d0 -> Node0x58302f0;
	Node0x5830340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%143:\l143:                                              \l  %144 = phi i32 [ %154, %143 ], [ 0, %101 ]\l  %145 = phi i64 [ %153, %143 ], [ 0, %101 ]\l  %146 = zext i32 %144 to i64\l  %147 = getelementptr inbounds i8, i8 addrspace(4)* %97, i64 %146\l  %148 = load i8, i8 addrspace(4)* %147, align 1, !tbaa !14\l  %149 = zext i8 %148 to i64\l  %150 = shl i32 %144, 3\l  %151 = zext i32 %150 to i64\l  %152 = shl nuw i64 %149, %151\l  %153 = or i64 %152, %145\l  %154 = add nuw nsw i32 %144, 1\l  %155 = icmp eq i32 %154, %98\l  br i1 %155, label %156, label %143\l|{<s0>T|<s1>F}}"];
	Node0x5830340:s0 -> Node0x58302f0;
	Node0x5830340:s1 -> Node0x5830340;
	Node0x58302f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%156:\l156:                                              \l  %157 = phi i8 addrspace(4)* [ %142, %103 ], [ %97, %101 ], [ %97, %143 ]\l  %158 = phi i32 [ %141, %103 ], [ 0, %101 ], [ 0, %143 ]\l  %159 = phi i64 [ %140, %103 ], [ 0, %101 ], [ %153, %143 ]\l  %160 = icmp ugt i32 %158, 7\l  br i1 %160, label %163, label %161\l|{<s0>T|<s1>F}}"];
	Node0x58302f0:s0 -> Node0x5832810;
	Node0x58302f0:s1 -> Node0x5832860;
	Node0x5832860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%161:\l161:                                              \l  %162 = icmp eq i32 %158, 0\l  br i1 %162, label %216, label %203\l|{<s0>T|<s1>F}}"];
	Node0x5832860:s0 -> Node0x58329f0;
	Node0x5832860:s1 -> Node0x5832a40;
	Node0x5832810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%163:\l163:                                              \l  %164 = load i8, i8 addrspace(4)* %157, align 1, !tbaa !14\l  %165 = zext i8 %164 to i64\l  %166 = getelementptr inbounds i8, i8 addrspace(4)* %157, i64 1\l  %167 = load i8, i8 addrspace(4)* %166, align 1, !tbaa !14\l  %168 = zext i8 %167 to i64\l  %169 = shl nuw nsw i64 %168, 8\l  %170 = or i64 %169, %165\l  %171 = getelementptr inbounds i8, i8 addrspace(4)* %157, i64 2\l  %172 = load i8, i8 addrspace(4)* %171, align 1, !tbaa !14\l  %173 = zext i8 %172 to i64\l  %174 = shl nuw nsw i64 %173, 16\l  %175 = or i64 %170, %174\l  %176 = getelementptr inbounds i8, i8 addrspace(4)* %157, i64 3\l  %177 = load i8, i8 addrspace(4)* %176, align 1, !tbaa !14\l  %178 = zext i8 %177 to i64\l  %179 = shl nuw nsw i64 %178, 24\l  %180 = or i64 %175, %179\l  %181 = getelementptr inbounds i8, i8 addrspace(4)* %157, i64 4\l  %182 = load i8, i8 addrspace(4)* %181, align 1, !tbaa !14\l  %183 = zext i8 %182 to i64\l  %184 = shl nuw nsw i64 %183, 32\l  %185 = or i64 %180, %184\l  %186 = getelementptr inbounds i8, i8 addrspace(4)* %157, i64 5\l  %187 = load i8, i8 addrspace(4)* %186, align 1, !tbaa !14\l  %188 = zext i8 %187 to i64\l  %189 = shl nuw nsw i64 %188, 40\l  %190 = or i64 %185, %189\l  %191 = getelementptr inbounds i8, i8 addrspace(4)* %157, i64 6\l  %192 = load i8, i8 addrspace(4)* %191, align 1, !tbaa !14\l  %193 = zext i8 %192 to i64\l  %194 = shl nuw nsw i64 %193, 48\l  %195 = or i64 %190, %194\l  %196 = getelementptr inbounds i8, i8 addrspace(4)* %157, i64 7\l  %197 = load i8, i8 addrspace(4)* %196, align 1, !tbaa !14\l  %198 = zext i8 %197 to i64\l  %199 = shl nuw i64 %198, 56\l  %200 = or i64 %195, %199\l  %201 = add nsw i32 %158, -8\l  %202 = getelementptr inbounds i8, i8 addrspace(4)* %157, i64 8\l  br label %216\l}"];
	Node0x5832810 -> Node0x58329f0;
	Node0x5832a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%203:\l203:                                              \l  %204 = phi i32 [ %214, %203 ], [ 0, %161 ]\l  %205 = phi i64 [ %213, %203 ], [ 0, %161 ]\l  %206 = zext i32 %204 to i64\l  %207 = getelementptr inbounds i8, i8 addrspace(4)* %157, i64 %206\l  %208 = load i8, i8 addrspace(4)* %207, align 1, !tbaa !14\l  %209 = zext i8 %208 to i64\l  %210 = shl i32 %204, 3\l  %211 = zext i32 %210 to i64\l  %212 = shl nuw i64 %209, %211\l  %213 = or i64 %212, %205\l  %214 = add nuw nsw i32 %204, 1\l  %215 = icmp eq i32 %214, %158\l  br i1 %215, label %216, label %203\l|{<s0>T|<s1>F}}"];
	Node0x5832a40:s0 -> Node0x58329f0;
	Node0x5832a40:s1 -> Node0x5832a40;
	Node0x58329f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%216:\l216:                                              \l  %217 = phi i8 addrspace(4)* [ %202, %163 ], [ %157, %161 ], [ %157, %203 ]\l  %218 = phi i32 [ %201, %163 ], [ 0, %161 ], [ 0, %203 ]\l  %219 = phi i64 [ %200, %163 ], [ 0, %161 ], [ %213, %203 ]\l  %220 = icmp ugt i32 %218, 7\l  br i1 %220, label %223, label %221\l|{<s0>T|<s1>F}}"];
	Node0x58329f0:s0 -> Node0x5834a90;
	Node0x58329f0:s1 -> Node0x5834ae0;
	Node0x5834ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%221:\l221:                                              \l  %222 = icmp eq i32 %218, 0\l  br i1 %222, label %276, label %263\l|{<s0>T|<s1>F}}"];
	Node0x5834ae0:s0 -> Node0x5834c70;
	Node0x5834ae0:s1 -> Node0x5834cc0;
	Node0x5834a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%223:\l223:                                              \l  %224 = load i8, i8 addrspace(4)* %217, align 1, !tbaa !14\l  %225 = zext i8 %224 to i64\l  %226 = getelementptr inbounds i8, i8 addrspace(4)* %217, i64 1\l  %227 = load i8, i8 addrspace(4)* %226, align 1, !tbaa !14\l  %228 = zext i8 %227 to i64\l  %229 = shl nuw nsw i64 %228, 8\l  %230 = or i64 %229, %225\l  %231 = getelementptr inbounds i8, i8 addrspace(4)* %217, i64 2\l  %232 = load i8, i8 addrspace(4)* %231, align 1, !tbaa !14\l  %233 = zext i8 %232 to i64\l  %234 = shl nuw nsw i64 %233, 16\l  %235 = or i64 %230, %234\l  %236 = getelementptr inbounds i8, i8 addrspace(4)* %217, i64 3\l  %237 = load i8, i8 addrspace(4)* %236, align 1, !tbaa !14\l  %238 = zext i8 %237 to i64\l  %239 = shl nuw nsw i64 %238, 24\l  %240 = or i64 %235, %239\l  %241 = getelementptr inbounds i8, i8 addrspace(4)* %217, i64 4\l  %242 = load i8, i8 addrspace(4)* %241, align 1, !tbaa !14\l  %243 = zext i8 %242 to i64\l  %244 = shl nuw nsw i64 %243, 32\l  %245 = or i64 %240, %244\l  %246 = getelementptr inbounds i8, i8 addrspace(4)* %217, i64 5\l  %247 = load i8, i8 addrspace(4)* %246, align 1, !tbaa !14\l  %248 = zext i8 %247 to i64\l  %249 = shl nuw nsw i64 %248, 40\l  %250 = or i64 %245, %249\l  %251 = getelementptr inbounds i8, i8 addrspace(4)* %217, i64 6\l  %252 = load i8, i8 addrspace(4)* %251, align 1, !tbaa !14\l  %253 = zext i8 %252 to i64\l  %254 = shl nuw nsw i64 %253, 48\l  %255 = or i64 %250, %254\l  %256 = getelementptr inbounds i8, i8 addrspace(4)* %217, i64 7\l  %257 = load i8, i8 addrspace(4)* %256, align 1, !tbaa !14\l  %258 = zext i8 %257 to i64\l  %259 = shl nuw i64 %258, 56\l  %260 = or i64 %255, %259\l  %261 = add nsw i32 %218, -8\l  %262 = getelementptr inbounds i8, i8 addrspace(4)* %217, i64 8\l  br label %276\l}"];
	Node0x5834a90 -> Node0x5834c70;
	Node0x5834cc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%263:\l263:                                              \l  %264 = phi i32 [ %274, %263 ], [ 0, %221 ]\l  %265 = phi i64 [ %273, %263 ], [ 0, %221 ]\l  %266 = zext i32 %264 to i64\l  %267 = getelementptr inbounds i8, i8 addrspace(4)* %217, i64 %266\l  %268 = load i8, i8 addrspace(4)* %267, align 1, !tbaa !14\l  %269 = zext i8 %268 to i64\l  %270 = shl i32 %264, 3\l  %271 = zext i32 %270 to i64\l  %272 = shl nuw i64 %269, %271\l  %273 = or i64 %272, %265\l  %274 = add nuw nsw i32 %264, 1\l  %275 = icmp eq i32 %274, %218\l  br i1 %275, label %276, label %263\l|{<s0>T|<s1>F}}"];
	Node0x5834cc0:s0 -> Node0x5834c70;
	Node0x5834cc0:s1 -> Node0x5834cc0;
	Node0x5834c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%276:\l276:                                              \l  %277 = phi i8 addrspace(4)* [ %262, %223 ], [ %217, %221 ], [ %217, %263 ]\l  %278 = phi i32 [ %261, %223 ], [ 0, %221 ], [ 0, %263 ]\l  %279 = phi i64 [ %260, %223 ], [ 0, %221 ], [ %273, %263 ]\l  %280 = icmp ugt i32 %278, 7\l  br i1 %280, label %283, label %281\l|{<s0>T|<s1>F}}"];
	Node0x5834c70:s0 -> Node0x5837500;
	Node0x5834c70:s1 -> Node0x5837550;
	Node0x5837550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%281:\l281:                                              \l  %282 = icmp eq i32 %278, 0\l  br i1 %282, label %336, label %323\l|{<s0>T|<s1>F}}"];
	Node0x5837550:s0 -> Node0x58376e0;
	Node0x5837550:s1 -> Node0x5837730;
	Node0x5837500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%283:\l283:                                              \l  %284 = load i8, i8 addrspace(4)* %277, align 1, !tbaa !14\l  %285 = zext i8 %284 to i64\l  %286 = getelementptr inbounds i8, i8 addrspace(4)* %277, i64 1\l  %287 = load i8, i8 addrspace(4)* %286, align 1, !tbaa !14\l  %288 = zext i8 %287 to i64\l  %289 = shl nuw nsw i64 %288, 8\l  %290 = or i64 %289, %285\l  %291 = getelementptr inbounds i8, i8 addrspace(4)* %277, i64 2\l  %292 = load i8, i8 addrspace(4)* %291, align 1, !tbaa !14\l  %293 = zext i8 %292 to i64\l  %294 = shl nuw nsw i64 %293, 16\l  %295 = or i64 %290, %294\l  %296 = getelementptr inbounds i8, i8 addrspace(4)* %277, i64 3\l  %297 = load i8, i8 addrspace(4)* %296, align 1, !tbaa !14\l  %298 = zext i8 %297 to i64\l  %299 = shl nuw nsw i64 %298, 24\l  %300 = or i64 %295, %299\l  %301 = getelementptr inbounds i8, i8 addrspace(4)* %277, i64 4\l  %302 = load i8, i8 addrspace(4)* %301, align 1, !tbaa !14\l  %303 = zext i8 %302 to i64\l  %304 = shl nuw nsw i64 %303, 32\l  %305 = or i64 %300, %304\l  %306 = getelementptr inbounds i8, i8 addrspace(4)* %277, i64 5\l  %307 = load i8, i8 addrspace(4)* %306, align 1, !tbaa !14\l  %308 = zext i8 %307 to i64\l  %309 = shl nuw nsw i64 %308, 40\l  %310 = or i64 %305, %309\l  %311 = getelementptr inbounds i8, i8 addrspace(4)* %277, i64 6\l  %312 = load i8, i8 addrspace(4)* %311, align 1, !tbaa !14\l  %313 = zext i8 %312 to i64\l  %314 = shl nuw nsw i64 %313, 48\l  %315 = or i64 %310, %314\l  %316 = getelementptr inbounds i8, i8 addrspace(4)* %277, i64 7\l  %317 = load i8, i8 addrspace(4)* %316, align 1, !tbaa !14\l  %318 = zext i8 %317 to i64\l  %319 = shl nuw i64 %318, 56\l  %320 = or i64 %315, %319\l  %321 = add nsw i32 %278, -8\l  %322 = getelementptr inbounds i8, i8 addrspace(4)* %277, i64 8\l  br label %336\l}"];
	Node0x5837500 -> Node0x58376e0;
	Node0x5837730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%323:\l323:                                              \l  %324 = phi i32 [ %334, %323 ], [ 0, %281 ]\l  %325 = phi i64 [ %333, %323 ], [ 0, %281 ]\l  %326 = zext i32 %324 to i64\l  %327 = getelementptr inbounds i8, i8 addrspace(4)* %277, i64 %326\l  %328 = load i8, i8 addrspace(4)* %327, align 1, !tbaa !14\l  %329 = zext i8 %328 to i64\l  %330 = shl i32 %324, 3\l  %331 = zext i32 %330 to i64\l  %332 = shl nuw i64 %329, %331\l  %333 = or i64 %332, %325\l  %334 = add nuw nsw i32 %324, 1\l  %335 = icmp eq i32 %334, %278\l  br i1 %335, label %336, label %323\l|{<s0>T|<s1>F}}"];
	Node0x5837730:s0 -> Node0x58376e0;
	Node0x5837730:s1 -> Node0x5837730;
	Node0x58376e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%336:\l336:                                              \l  %337 = phi i8 addrspace(4)* [ %322, %283 ], [ %277, %281 ], [ %277, %323 ]\l  %338 = phi i32 [ %321, %283 ], [ 0, %281 ], [ 0, %323 ]\l  %339 = phi i64 [ %320, %283 ], [ 0, %281 ], [ %333, %323 ]\l  %340 = icmp ugt i32 %338, 7\l  br i1 %340, label %343, label %341\l|{<s0>T|<s1>F}}"];
	Node0x58376e0:s0 -> Node0x583a190;
	Node0x58376e0:s1 -> Node0x583a1e0;
	Node0x583a1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%341:\l341:                                              \l  %342 = icmp eq i32 %338, 0\l  br i1 %342, label %396, label %383\l|{<s0>T|<s1>F}}"];
	Node0x583a1e0:s0 -> Node0x583a370;
	Node0x583a1e0:s1 -> Node0x583a3c0;
	Node0x583a190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%343:\l343:                                              \l  %344 = load i8, i8 addrspace(4)* %337, align 1, !tbaa !14\l  %345 = zext i8 %344 to i64\l  %346 = getelementptr inbounds i8, i8 addrspace(4)* %337, i64 1\l  %347 = load i8, i8 addrspace(4)* %346, align 1, !tbaa !14\l  %348 = zext i8 %347 to i64\l  %349 = shl nuw nsw i64 %348, 8\l  %350 = or i64 %349, %345\l  %351 = getelementptr inbounds i8, i8 addrspace(4)* %337, i64 2\l  %352 = load i8, i8 addrspace(4)* %351, align 1, !tbaa !14\l  %353 = zext i8 %352 to i64\l  %354 = shl nuw nsw i64 %353, 16\l  %355 = or i64 %350, %354\l  %356 = getelementptr inbounds i8, i8 addrspace(4)* %337, i64 3\l  %357 = load i8, i8 addrspace(4)* %356, align 1, !tbaa !14\l  %358 = zext i8 %357 to i64\l  %359 = shl nuw nsw i64 %358, 24\l  %360 = or i64 %355, %359\l  %361 = getelementptr inbounds i8, i8 addrspace(4)* %337, i64 4\l  %362 = load i8, i8 addrspace(4)* %361, align 1, !tbaa !14\l  %363 = zext i8 %362 to i64\l  %364 = shl nuw nsw i64 %363, 32\l  %365 = or i64 %360, %364\l  %366 = getelementptr inbounds i8, i8 addrspace(4)* %337, i64 5\l  %367 = load i8, i8 addrspace(4)* %366, align 1, !tbaa !14\l  %368 = zext i8 %367 to i64\l  %369 = shl nuw nsw i64 %368, 40\l  %370 = or i64 %365, %369\l  %371 = getelementptr inbounds i8, i8 addrspace(4)* %337, i64 6\l  %372 = load i8, i8 addrspace(4)* %371, align 1, !tbaa !14\l  %373 = zext i8 %372 to i64\l  %374 = shl nuw nsw i64 %373, 48\l  %375 = or i64 %370, %374\l  %376 = getelementptr inbounds i8, i8 addrspace(4)* %337, i64 7\l  %377 = load i8, i8 addrspace(4)* %376, align 1, !tbaa !14\l  %378 = zext i8 %377 to i64\l  %379 = shl nuw i64 %378, 56\l  %380 = or i64 %375, %379\l  %381 = add nsw i32 %338, -8\l  %382 = getelementptr inbounds i8, i8 addrspace(4)* %337, i64 8\l  br label %396\l}"];
	Node0x583a190 -> Node0x583a370;
	Node0x583a3c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%383:\l383:                                              \l  %384 = phi i32 [ %394, %383 ], [ 0, %341 ]\l  %385 = phi i64 [ %393, %383 ], [ 0, %341 ]\l  %386 = zext i32 %384 to i64\l  %387 = getelementptr inbounds i8, i8 addrspace(4)* %337, i64 %386\l  %388 = load i8, i8 addrspace(4)* %387, align 1, !tbaa !14\l  %389 = zext i8 %388 to i64\l  %390 = shl i32 %384, 3\l  %391 = zext i32 %390 to i64\l  %392 = shl nuw i64 %389, %391\l  %393 = or i64 %392, %385\l  %394 = add nuw nsw i32 %384, 1\l  %395 = icmp eq i32 %394, %338\l  br i1 %395, label %396, label %383\l|{<s0>T|<s1>F}}"];
	Node0x583a3c0:s0 -> Node0x583a370;
	Node0x583a3c0:s1 -> Node0x583a3c0;
	Node0x583a370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%396:\l396:                                              \l  %397 = phi i8 addrspace(4)* [ %382, %343 ], [ %337, %341 ], [ %337, %383 ]\l  %398 = phi i32 [ %381, %343 ], [ 0, %341 ], [ 0, %383 ]\l  %399 = phi i64 [ %380, %343 ], [ 0, %341 ], [ %393, %383 ]\l  %400 = icmp ugt i32 %398, 7\l  br i1 %400, label %403, label %401\l|{<s0>T|<s1>F}}"];
	Node0x583a370:s0 -> Node0x583c9f0;
	Node0x583a370:s1 -> Node0x583ca40;
	Node0x583ca40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%401:\l401:                                              \l  %402 = icmp eq i32 %398, 0\l  br i1 %402, label %454, label %441\l|{<s0>T|<s1>F}}"];
	Node0x583ca40:s0 -> Node0x582c560;
	Node0x583ca40:s1 -> Node0x583cbd0;
	Node0x583c9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%403:\l403:                                              \l  %404 = load i8, i8 addrspace(4)* %397, align 1, !tbaa !14\l  %405 = zext i8 %404 to i64\l  %406 = getelementptr inbounds i8, i8 addrspace(4)* %397, i64 1\l  %407 = load i8, i8 addrspace(4)* %406, align 1, !tbaa !14\l  %408 = zext i8 %407 to i64\l  %409 = shl nuw nsw i64 %408, 8\l  %410 = or i64 %409, %405\l  %411 = getelementptr inbounds i8, i8 addrspace(4)* %397, i64 2\l  %412 = load i8, i8 addrspace(4)* %411, align 1, !tbaa !14\l  %413 = zext i8 %412 to i64\l  %414 = shl nuw nsw i64 %413, 16\l  %415 = or i64 %410, %414\l  %416 = getelementptr inbounds i8, i8 addrspace(4)* %397, i64 3\l  %417 = load i8, i8 addrspace(4)* %416, align 1, !tbaa !14\l  %418 = zext i8 %417 to i64\l  %419 = shl nuw nsw i64 %418, 24\l  %420 = or i64 %415, %419\l  %421 = getelementptr inbounds i8, i8 addrspace(4)* %397, i64 4\l  %422 = load i8, i8 addrspace(4)* %421, align 1, !tbaa !14\l  %423 = zext i8 %422 to i64\l  %424 = shl nuw nsw i64 %423, 32\l  %425 = or i64 %420, %424\l  %426 = getelementptr inbounds i8, i8 addrspace(4)* %397, i64 5\l  %427 = load i8, i8 addrspace(4)* %426, align 1, !tbaa !14\l  %428 = zext i8 %427 to i64\l  %429 = shl nuw nsw i64 %428, 40\l  %430 = or i64 %425, %429\l  %431 = getelementptr inbounds i8, i8 addrspace(4)* %397, i64 6\l  %432 = load i8, i8 addrspace(4)* %431, align 1, !tbaa !14\l  %433 = zext i8 %432 to i64\l  %434 = shl nuw nsw i64 %433, 48\l  %435 = or i64 %430, %434\l  %436 = getelementptr inbounds i8, i8 addrspace(4)* %397, i64 7\l  %437 = load i8, i8 addrspace(4)* %436, align 1, !tbaa !14\l  %438 = zext i8 %437 to i64\l  %439 = shl nuw i64 %438, 56\l  %440 = or i64 %435, %439\l  br label %454\l}"];
	Node0x583c9f0 -> Node0x582c560;
	Node0x583cbd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%441:\l441:                                              \l  %442 = phi i32 [ %452, %441 ], [ 0, %401 ]\l  %443 = phi i64 [ %451, %441 ], [ 0, %401 ]\l  %444 = zext i32 %442 to i64\l  %445 = getelementptr inbounds i8, i8 addrspace(4)* %397, i64 %444\l  %446 = load i8, i8 addrspace(4)* %445, align 1, !tbaa !14\l  %447 = zext i8 %446 to i64\l  %448 = shl i32 %442, 3\l  %449 = zext i32 %448 to i64\l  %450 = shl nuw i64 %447, %449\l  %451 = or i64 %450, %443\l  %452 = add nuw nsw i32 %442, 1\l  %453 = icmp eq i32 %452, %398\l  br i1 %453, label %454, label %441\l|{<s0>T|<s1>F}}"];
	Node0x583cbd0:s0 -> Node0x582c560;
	Node0x583cbd0:s1 -> Node0x583cbd0;
	Node0x582c560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%454:\l454:                                              \l  %455 = phi i64 [ %440, %403 ], [ 0, %401 ], [ %451, %441 ]\l  %456 = shl nuw nsw i64 %37, 2\l  %457 = add nuw nsw i64 %456, 28\l  %458 = and i64 %457, 480\l  %459 = and i64 %39, -225\l  %460 = or i64 %459, %458\l  %461 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %17,\l... i64 noundef %460, i64 noundef %99, i64 noundef %159, i64 noundef %219, i64\l... noundef %279, i64 noundef %339, i64 noundef %399, i64 noundef %455) #10\l  %462 = sub i64 %29, %37\l  %463 = getelementptr inbounds i8, i8 addrspace(4)* %30, i64 %37\l  %464 = icmp eq i64 %462, 0\l  br i1 %464, label %465, label %28\l|{<s0>T|<s1>F}}"];
	Node0x582c560:s0 -> Node0x582b520;
	Node0x582c560:s1 -> Node0x582c0c0;
	Node0x582b520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%465:\l465:                                              \l  %466 = phi \<2 x i64\> [ %23, %20 ], [ %461, %454 ]\l  %467 = extractelement \<2 x i64\> %466, i64 0\l  %468 = and i64 %467, -227\l  %469 = or i64 %468, 34\l  %470 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %17,\l... i64 noundef %469, i64 noundef %5, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  ret void\l}"];
}
