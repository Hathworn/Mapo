digraph "CFG for '_Z21squareMatrixMulKernelPiS_S_i' function" {
	label="CFG for '_Z21squareMatrixMulKernelPiS_S_i' function";

	Node0x4973d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp sgt i32 %3, 0\l  %23 = mul nsw i32 %21, %3\l  br i1 %22, label %24, label %57\l|{<s0>T|<s1>F}}"];
	Node0x4973d30:s0 -> Node0x4977760;
	Node0x4973d30:s1 -> Node0x49777f0;
	Node0x4977760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%24:\l24:                                               \l  %25 = and i32 %3, 7\l  %26 = icmp ult i32 %3, 8\l  br i1 %26, label %29, label %27\l|{<s0>T|<s1>F}}"];
	Node0x4977760:s0 -> Node0x4977ab0;
	Node0x4977760:s1 -> Node0x4977b00;
	Node0x4977b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%27:\l27:                                               \l  %28 = and i32 %3, -8\l  br label %62\l}"];
	Node0x4977b00 -> Node0x4977d00;
	Node0x4977ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%29:\l29:                                               \l  %30 = phi float [ undef, %24 ], [ %176, %62 ]\l  %31 = phi float [ 0.000000e+00, %24 ], [ %176, %62 ]\l  %32 = phi i32 [ 0, %24 ], [ %177, %62 ]\l  %33 = icmp eq i32 %25, 0\l  br i1 %33, label %54, label %34\l|{<s0>T|<s1>F}}"];
	Node0x4977ab0:s0 -> Node0x4975f70;
	Node0x4977ab0:s1 -> Node0x4979130;
	Node0x4979130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi float [ %50, %34 ], [ %31, %29 ]\l  %36 = phi i32 [ %51, %34 ], [ %32, %29 ]\l  %37 = phi i32 [ %52, %34 ], [ 0, %29 ]\l  %38 = add nsw i32 %36, %23\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %42 = sitofp i32 %41 to float\l  %43 = mul nsw i32 %36, %3\l  %44 = add nsw i32 %43, %13\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %45\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %48 = sitofp i32 %47 to float\l  %49 = fmul contract float %42, %48\l  %50 = fadd contract float %35, %49\l  %51 = add nuw nsw i32 %36, 1\l  %52 = add i32 %37, 1\l  %53 = icmp eq i32 %52, %25\l  br i1 %53, label %54, label %34, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4979130:s0 -> Node0x4975f70;
	Node0x4979130:s1 -> Node0x4979130;
	Node0x4975f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%54:\l54:                                               \l  %55 = phi float [ %30, %29 ], [ %50, %34 ]\l  %56 = fptosi float %55 to i32\l  br label %57\l}"];
	Node0x4975f70 -> Node0x49777f0;
	Node0x49777f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%57:\l57:                                               \l  %58 = phi i32 [ %56, %54 ], [ 0, %4 ]\l  %59 = add nsw i32 %23, %13\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %60\l  store i32 %58, i32 addrspace(1)* %61, align 4, !tbaa !7\l  ret void\l}"];
	Node0x4977d00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%62:\l62:                                               \l  %63 = phi float [ 0.000000e+00, %27 ], [ %176, %62 ]\l  %64 = phi i32 [ 0, %27 ], [ %177, %62 ]\l  %65 = phi i32 [ 0, %27 ], [ %178, %62 ]\l  %66 = add nsw i32 %64, %23\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %70 = sitofp i32 %69 to float\l  %71 = mul nsw i32 %64, %3\l  %72 = add nsw i32 %71, %13\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %73\l  %75 = load i32, i32 addrspace(1)* %74, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %76 = sitofp i32 %75 to float\l  %77 = fmul contract float %70, %76\l  %78 = fadd contract float %63, %77\l  %79 = or i32 %64, 1\l  %80 = add nsw i32 %79, %23\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %84 = sitofp i32 %83 to float\l  %85 = mul nsw i32 %79, %3\l  %86 = add nsw i32 %85, %13\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %87\l  %89 = load i32, i32 addrspace(1)* %88, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %90 = sitofp i32 %89 to float\l  %91 = fmul contract float %84, %90\l  %92 = fadd contract float %78, %91\l  %93 = or i32 %64, 2\l  %94 = add nsw i32 %93, %23\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %95\l  %97 = load i32, i32 addrspace(1)* %96, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %98 = sitofp i32 %97 to float\l  %99 = mul nsw i32 %93, %3\l  %100 = add nsw i32 %99, %13\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %101\l  %103 = load i32, i32 addrspace(1)* %102, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %104 = sitofp i32 %103 to float\l  %105 = fmul contract float %98, %104\l  %106 = fadd contract float %92, %105\l  %107 = or i32 %64, 3\l  %108 = add nsw i32 %107, %23\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %109\l  %111 = load i32, i32 addrspace(1)* %110, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %112 = sitofp i32 %111 to float\l  %113 = mul nsw i32 %107, %3\l  %114 = add nsw i32 %113, %13\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %115\l  %117 = load i32, i32 addrspace(1)* %116, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %118 = sitofp i32 %117 to float\l  %119 = fmul contract float %112, %118\l  %120 = fadd contract float %106, %119\l  %121 = or i32 %64, 4\l  %122 = add nsw i32 %121, %23\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %123\l  %125 = load i32, i32 addrspace(1)* %124, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %126 = sitofp i32 %125 to float\l  %127 = mul nsw i32 %121, %3\l  %128 = add nsw i32 %127, %13\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %129\l  %131 = load i32, i32 addrspace(1)* %130, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %132 = sitofp i32 %131 to float\l  %133 = fmul contract float %126, %132\l  %134 = fadd contract float %120, %133\l  %135 = or i32 %64, 5\l  %136 = add nsw i32 %135, %23\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %137\l  %139 = load i32, i32 addrspace(1)* %138, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %140 = sitofp i32 %139 to float\l  %141 = mul nsw i32 %135, %3\l  %142 = add nsw i32 %141, %13\l  %143 = sext i32 %142 to i64\l  %144 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %143\l  %145 = load i32, i32 addrspace(1)* %144, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %146 = sitofp i32 %145 to float\l  %147 = fmul contract float %140, %146\l  %148 = fadd contract float %134, %147\l  %149 = or i32 %64, 6\l  %150 = add nsw i32 %149, %23\l  %151 = sext i32 %150 to i64\l  %152 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %151\l  %153 = load i32, i32 addrspace(1)* %152, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %154 = sitofp i32 %153 to float\l  %155 = mul nsw i32 %149, %3\l  %156 = add nsw i32 %155, %13\l  %157 = sext i32 %156 to i64\l  %158 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %157\l  %159 = load i32, i32 addrspace(1)* %158, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %160 = sitofp i32 %159 to float\l  %161 = fmul contract float %154, %160\l  %162 = fadd contract float %148, %161\l  %163 = or i32 %64, 7\l  %164 = add nsw i32 %163, %23\l  %165 = sext i32 %164 to i64\l  %166 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %165\l  %167 = load i32, i32 addrspace(1)* %166, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %168 = sitofp i32 %167 to float\l  %169 = mul nsw i32 %163, %3\l  %170 = add nsw i32 %169, %13\l  %171 = sext i32 %170 to i64\l  %172 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %171\l  %173 = load i32, i32 addrspace(1)* %172, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %174 = sitofp i32 %173 to float\l  %175 = fmul contract float %168, %174\l  %176 = fadd contract float %162, %175\l  %177 = add nuw nsw i32 %64, 8\l  %178 = add i32 %65, 8\l  %179 = icmp eq i32 %178, %28\l  br i1 %179, label %29, label %62, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4977d00:s0 -> Node0x4977ab0;
	Node0x4977d00:s1 -> Node0x4977d00;
}
