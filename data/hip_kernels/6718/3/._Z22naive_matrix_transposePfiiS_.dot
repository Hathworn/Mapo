digraph "CFG for '_Z22naive_matrix_transposePfiiS_' function" {
	label="CFG for '_Z22naive_matrix_transposePfiiS_' function";

	Node0x531ef90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 5\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = add i32 %6, %7\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = shl i32 %9, 5\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %12 = icmp slt i32 %8, %1\l  %13 = freeze i1 %12\l  br i1 %13, label %14, label %17\l|{<s0>T|<s1>F}}"];
	Node0x531ef90:s0 -> Node0x53212c0;
	Node0x531ef90:s1 -> Node0x5321350;
	Node0x53212c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%14:\l14:                                               \l  %15 = add i32 %11, %10\l  %16 = icmp slt i32 %15, %2\l  br i1 %16, label %24, label %17\l|{<s0>T|<s1>F}}"];
	Node0x53212c0:s0 -> Node0x53206f0;
	Node0x53212c0:s1 -> Node0x5321350;
	Node0x5321350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %18 = add i32 %10, %7\l  %19 = icmp slt i32 %18, %1\l  %20 = freeze i1 %19\l  br i1 %20, label %21, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5321350:s0 -> Node0x5321b90;
	Node0x5321350:s1 -> Node0x5321c20;
	Node0x5321b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%21:\l21:                                               \l  %22 = add i32 %11, %6\l  %23 = icmp slt i32 %22, %2\l  br i1 %23, label %62, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5321b90:s0 -> Node0x5321e80;
	Node0x5321b90:s1 -> Node0x5321c20;
	Node0x53206f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%24:\l24:                                               \l  %25 = mul nsw i32 %15, %1\l  %26 = add nsw i32 %25, %8\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %30 = getelementptr inbounds [32 x [33 x float]], [32 x [33 x float]]\l... addrspace(3)* @_ZZ22naive_matrix_transposePfiiS_E4tile, i32 0, i32 %11, i32 %7\l  store float %29, float addrspace(3)* %30, align 4, !tbaa !5\l  %31 = add nuw nsw i32 %11, 8\l  %32 = add i32 %31, %10\l  %33 = icmp slt i32 %32, %2\l  br i1 %33, label %34, label %17\l|{<s0>T|<s1>F}}"];
	Node0x53206f0:s0 -> Node0x5322530;
	Node0x53206f0:s1 -> Node0x5321350;
	Node0x5322530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%34:\l34:                                               \l  %35 = mul nsw i32 %32, %1\l  %36 = add nsw i32 %35, %8\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %40 = getelementptr inbounds [32 x [33 x float]], [32 x [33 x float]]\l... addrspace(3)* @_ZZ22naive_matrix_transposePfiiS_E4tile, i32 0, i32 %31, i32 %7\l  store float %39, float addrspace(3)* %40, align 4, !tbaa !5\l  %41 = add nuw nsw i32 %11, 16\l  %42 = add i32 %41, %10\l  %43 = icmp slt i32 %42, %2\l  br i1 %43, label %44, label %17\l|{<s0>T|<s1>F}}"];
	Node0x5322530:s0 -> Node0x5323990;
	Node0x5322530:s1 -> Node0x5321350;
	Node0x5323990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%44:\l44:                                               \l  %45 = mul nsw i32 %42, %1\l  %46 = add nsw i32 %45, %8\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %50 = getelementptr inbounds [32 x [33 x float]], [32 x [33 x float]]\l... addrspace(3)* @_ZZ22naive_matrix_transposePfiiS_E4tile, i32 0, i32 %41, i32 %7\l  store float %49, float addrspace(3)* %50, align 4, !tbaa !5\l  %51 = add nuw nsw i32 %11, 24\l  %52 = add i32 %51, %10\l  %53 = icmp slt i32 %52, %2\l  br i1 %53, label %54, label %17\l|{<s0>T|<s1>F}}"];
	Node0x5323990:s0 -> Node0x53240b0;
	Node0x5323990:s1 -> Node0x5321350;
	Node0x53240b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%54:\l54:                                               \l  %55 = mul nsw i32 %52, %1\l  %56 = add nsw i32 %55, %8\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %60 = getelementptr inbounds [32 x [33 x float]], [32 x [33 x float]]\l... addrspace(3)* @_ZZ22naive_matrix_transposePfiiS_E4tile, i32 0, i32 %51, i32 %7\l  store float %59, float addrspace(3)* %60, align 4, !tbaa !5\l  br label %17\l}"];
	Node0x53240b0 -> Node0x5321350;
	Node0x5321c20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  ret void\l}"];
	Node0x5321e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%62:\l62:                                               \l  %63 = getelementptr inbounds [32 x [33 x float]], [32 x [33 x float]]\l... addrspace(3)* @_ZZ22naive_matrix_transposePfiiS_E4tile, i32 0, i32 %7, i32 %11\l  %64 = load float, float addrspace(3)* %63, align 4, !tbaa !5\l  %65 = mul nsw i32 %22, %1\l  %66 = add nsw i32 %65, %18\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %3, i64 %67\l  store float %64, float addrspace(1)* %68, align 4, !tbaa !5\l  %69 = add nuw nsw i32 %11, 8\l  %70 = add i32 %69, %6\l  %71 = icmp slt i32 %70, %2\l  br i1 %71, label %72, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5321e80:s0 -> Node0x5324a10;
	Node0x5321e80:s1 -> Node0x5321c20;
	Node0x5324a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%72:\l72:                                               \l  %73 = getelementptr inbounds [32 x [33 x float]], [32 x [33 x float]]\l... addrspace(3)* @_ZZ22naive_matrix_transposePfiiS_E4tile, i32 0, i32 %7, i32 %69\l  %74 = load float, float addrspace(3)* %73, align 4, !tbaa !5\l  %75 = mul nsw i32 %70, %1\l  %76 = add nsw i32 %75, %18\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %3, i64 %77\l  store float %74, float addrspace(1)* %78, align 4, !tbaa !5\l  %79 = add nuw nsw i32 %11, 16\l  %80 = add i32 %79, %6\l  %81 = icmp slt i32 %80, %2\l  br i1 %81, label %82, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5324a10:s0 -> Node0x5322fb0;
	Node0x5324a10:s1 -> Node0x5321c20;
	Node0x5322fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%82:\l82:                                               \l  %83 = getelementptr inbounds [32 x [33 x float]], [32 x [33 x float]]\l... addrspace(3)* @_ZZ22naive_matrix_transposePfiiS_E4tile, i32 0, i32 %7, i32 %79\l  %84 = load float, float addrspace(3)* %83, align 4, !tbaa !5\l  %85 = mul nsw i32 %80, %1\l  %86 = add nsw i32 %85, %18\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %3, i64 %87\l  store float %84, float addrspace(1)* %88, align 4, !tbaa !5\l  %89 = add nuw nsw i32 %11, 24\l  %90 = add i32 %89, %6\l  %91 = icmp slt i32 %90, %2\l  br i1 %91, label %92, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5322fb0:s0 -> Node0x53259c0;
	Node0x5322fb0:s1 -> Node0x5321c20;
	Node0x53259c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%92:\l92:                                               \l  %93 = getelementptr inbounds [32 x [33 x float]], [32 x [33 x float]]\l... addrspace(3)* @_ZZ22naive_matrix_transposePfiiS_E4tile, i32 0, i32 %7, i32 %89\l  %94 = load float, float addrspace(3)* %93, align 4, !tbaa !5\l  %95 = mul nsw i32 %90, %1\l  %96 = add nsw i32 %95, %18\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %3, i64 %97\l  store float %94, float addrspace(1)* %98, align 4, !tbaa !5\l  br label %61\l}"];
	Node0x53259c0 -> Node0x5321c20;
}
