digraph "CFG for 'mandel_double' function" {
	label="CFG for 'mandel_double' function";

	Node0x5262060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !7\l  %20 = mul i32 %11, %16\l  %21 = add i32 %20, %10\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %24 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !5, !invariant.load !6\l  %27 = zext i16 %26 to i32\l  %28 = mul i32 %23, %27\l  %29 = add i32 %28, %22\l  %30 = mul i32 %29, %16\l  %31 = udiv i32 %19, %16\l  %32 = mul i32 %31, %16\l  %33 = icmp ugt i32 %19, %32\l  %34 = zext i1 %33 to i32\l  %35 = add i32 %31, %34\l  %36 = mul i32 %30, %35\l  %37 = add i32 %36, %21\l  %38 = icmp slt i32 %21, %3\l  %39 = icmp slt i32 %29, %4\l  %40 = select i1 %38, i1 %39, i1 false\l  br i1 %40, label %41, label %116\l|{<s0>T|<s1>F}}"];
	Node0x5262060:s0 -> Node0x5266980;
	Node0x5262060:s1 -> Node0x5266a10;
	Node0x5266980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%41:\l41:                                               \l  %42 = shl nsw i32 %8, 8\l  %43 = fdiv contract double 1.000000e+00, %7\l  %44 = sitofp i32 %4 to double\l  %45 = fmul contract double %43, %44\l  %46 = sitofp i32 %3 to double\l  %47 = fdiv contract double %45, %46\l  %48 = icmp sgt i32 %4, %3\l  br i1 %48, label %49, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5266980:s0 -> Node0x5267940;
	Node0x5266980:s1 -> Node0x52679d0;
	Node0x5267940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%49:\l49:                                               \l  %50 = fmul contract double %43, %46\l  %51 = fdiv contract double %50, %44\l  br label %52\l}"];
	Node0x5267940 -> Node0x52679d0;
	Node0x52679d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%52:\l52:                                               \l  %53 = phi double [ %43, %49 ], [ %47, %41 ]\l  %54 = phi double [ %51, %49 ], [ %43, %41 ]\l  %55 = fmul contract double %54, 2.000000e+00\l  %56 = add nsw i32 %3, -1\l  %57 = sitofp i32 %56 to double\l  %58 = fdiv contract double %55, %57\l  %59 = fmul contract double %53, 2.000000e+00\l  %60 = add nsw i32 %4, -1\l  %61 = sitofp i32 %60 to double\l  %62 = fdiv contract double %59, %61\l  %63 = fsub contract double %5, %54\l  %64 = fsub contract double %6, %53\l  %65 = sitofp i32 %21 to double\l  %66 = fmul contract double %58, %65\l  %67 = fadd contract double %63, %66\l  %68 = sitofp i32 %29 to double\l  %69 = fmul contract double %62, %68\l  %70 = fadd contract double %64, %69\l  %71 = icmp eq i32 %8, 0\l  br i1 %71, label %107, label %72\l|{<s0>T|<s1>F}}"];
	Node0x52679d0:s0 -> Node0x5268950;
	Node0x52679d0:s1 -> Node0x52689e0;
	Node0x52689e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  %73 = phi i8 [ %103, %98 ], [ 0, %52 ]\l  %74 = phi i8 [ %102, %98 ], [ 0, %52 ]\l  %75 = phi i8 [ %101, %98 ], [ 0, %52 ]\l  %76 = phi i32 [ %104, %98 ], [ 0, %52 ]\l  %77 = phi double [ %100, %98 ], [ %70, %52 ]\l  %78 = phi double [ %99, %98 ], [ %67, %52 ]\l  %79 = fmul contract double %78, %78\l  %80 = fmul contract double %77, %77\l  %81 = fadd contract double %79, %80\l  %82 = fcmp contract ule double %81, 4.000000e+00\l  br i1 %82, label %92, label %83\l|{<s0>T|<s1>F}}"];
	Node0x52689e0:s0 -> Node0x52694e0;
	Node0x52689e0:s1 -> Node0x5269570;
	Node0x5269570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%83:\l83:                                               \l  %84 = and i32 %76, 255\l  %85 = zext i32 %84 to i64\l  %86 = getelementptr inbounds [256 x [3 x i8]], [256 x [3 x i8]]\l... addrspace(1)* @_ZL7viridis, i64 0, i64 %85, i64 0\l  %87 = load i8, i8 addrspace(1)* %86, align 1, !tbaa !16\l  %88 = getelementptr inbounds [256 x [3 x i8]], [256 x [3 x i8]]\l... addrspace(1)* @_ZL7viridis, i64 0, i64 %85, i64 1\l  %89 = load i8, i8 addrspace(1)* %88, align 1, !tbaa !16\l  %90 = getelementptr inbounds [256 x [3 x i8]], [256 x [3 x i8]]\l... addrspace(1)* @_ZL7viridis, i64 0, i64 %85, i64 2\l  %91 = load i8, i8 addrspace(1)* %90, align 1, !tbaa !16\l  br label %98\l}"];
	Node0x5269570 -> Node0x5268b50;
	Node0x52694e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%92:\l92:                                               \l  %93 = fmul contract double %78, 2.000000e+00\l  %94 = fmul contract double %93, %77\l  %95 = fadd contract double %70, %94\l  %96 = fsub contract double %79, %80\l  %97 = fadd contract double %67, %96\l  br label %98\l}"];
	Node0x52694e0 -> Node0x5268b50;
	Node0x5268b50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%98:\l98:                                               \l  %99 = phi double [ %78, %83 ], [ %97, %92 ]\l  %100 = phi double [ %77, %83 ], [ %95, %92 ]\l  %101 = phi i8 [ %91, %83 ], [ %75, %92 ]\l  %102 = phi i8 [ %89, %83 ], [ %74, %92 ]\l  %103 = phi i8 [ %87, %83 ], [ %73, %92 ]\l  %104 = add nuw i32 %76, 1\l  %105 = icmp ult i32 %104, %42\l  %106 = select i1 %82, i1 %105, i1 false\l  br i1 %106, label %72, label %107, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5268b50:s0 -> Node0x52689e0;
	Node0x5268b50:s1 -> Node0x5268950;
	Node0x5268950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%107:\l107:                                              \l  %108 = phi i8 [ 0, %52 ], [ %101, %98 ]\l  %109 = phi i8 [ 0, %52 ], [ %102, %98 ]\l  %110 = phi i8 [ 0, %52 ], [ %103, %98 ]\l  %111 = sext i32 %37 to i64\l  %112 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %111, i32 0, i32 0, i32 0, i64 0\l  store i8 %110, i8 addrspace(1)* %112, align 4\l  %113 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %111, i32 0, i32 0, i32 0, i64 1\l  store i8 %109, i8 addrspace(1)* %113, align 1\l  %114 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %111, i32 0, i32 0, i32 0, i64 2\l  store i8 %108, i8 addrspace(1)* %114, align 2\l  %115 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %111, i32 0, i32 0, i32 0, i64 3\l  store i8 0, i8 addrspace(1)* %115, align 1\l  br label %123\l}"];
	Node0x5268950 -> Node0x526b700;
	Node0x5266a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%116:\l116:                                              \l  %117 = icmp slt i32 %21, %1\l  %118 = icmp slt i32 %29, %2\l  %119 = select i1 %117, i1 %118, i1 false\l  br i1 %119, label %120, label %123\l|{<s0>T|<s1>F}}"];
	Node0x5266a10:s0 -> Node0x526b990;
	Node0x5266a10:s1 -> Node0x526b700;
	Node0x526b990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%120:\l120:                                              \l  %121 = sext i32 %37 to i64\l  %122 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %121, i32 0, i32 0, i32 0\l  store \<4 x i8\> \<i8 0, i8 -1, i8 -1, i8 0\>, \<4 x i8\> addrspace(1)* %122,\l... align 4\l  br label %123\l}"];
	Node0x526b990 -> Node0x526b700;
	Node0x526b700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%123:\l123:                                              \l  ret void\l}"];
}
