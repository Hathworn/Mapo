; ModuleID = '../data/hip_kernels/1324/2/main.cu'
source_filename = "../data/hip_kernels/1324/2/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind
define protected amdgpu_kernel void @_Z17kernelUpdateGBestPfS_(float addrspace(1)* nocapture %0, float addrspace(1)* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds float, float addrspace(1)* %0, i64 2
  %4 = load float, float addrspace(1)* %1, align 4, !tbaa !4
  %5 = insertelement <3 x float> undef, float %4, i64 0
  %6 = getelementptr inbounds float, float addrspace(1)* %1, i64 1
  %7 = load float, float addrspace(1)* %6, align 4, !tbaa !4
  %8 = insertelement <3 x float> %5, float %7, i64 1
  %9 = getelementptr inbounds float, float addrspace(1)* %1, i64 2
  %10 = load float, float addrspace(1)* %9, align 4, !tbaa !4
  %11 = insertelement <3 x float> %8, float %10, i64 2
  %12 = fadd contract float %4, -1.000000e+00
  %13 = fmul contract float %12, 2.500000e-01
  %14 = fadd contract float %13, 1.000000e+00
  %15 = fadd contract float %10, -1.000000e+00
  %16 = fmul contract float %15, 2.500000e-01
  %17 = fadd contract float %16, 1.000000e+00
  %18 = fmul contract float %14, 0x400921CAC0000000
  %19 = tail call float @llvm.fabs.f32(float %18)
  %20 = fcmp olt float %19, 1.310720e+05
  br i1 %20, label %21, label %29

21:                                               ; preds = %2
  %22 = fmul float %19, 0x3FE45F3060000000
  %23 = tail call float @llvm.rint.f32(float %22)
  %24 = tail call float @llvm.fma.f32(float %23, float 0xBFF921FB40000000, float %19)
  %25 = tail call float @llvm.fma.f32(float %23, float 0xBE74442D00000000, float %24)
  %26 = tail call float @llvm.fma.f32(float %23, float 0xBCF8469880000000, float %25)
  %27 = fptosi float %23 to i32
  %28 = bitcast float %19 to i32
  br label %135

29:                                               ; preds = %2
  %30 = bitcast float %19 to i32
  %31 = lshr i32 %30, 23
  %32 = and i32 %30, 8388607
  %33 = or i32 %32, 8388608
  %34 = zext i32 %33 to i64
  %35 = mul nuw nsw i64 %34, 4266746795
  %36 = trunc i64 %35 to i32
  %37 = lshr i64 %35, 32
  %38 = mul nuw nsw i64 %34, 1011060801
  %39 = add nuw nsw i64 %37, %38
  %40 = trunc i64 %39 to i32
  %41 = lshr i64 %39, 32
  %42 = mul nuw nsw i64 %34, 3680671129
  %43 = add nuw nsw i64 %41, %42
  %44 = trunc i64 %43 to i32
  %45 = lshr i64 %43, 32
  %46 = mul nuw nsw i64 %34, 4113882560
  %47 = add nuw nsw i64 %45, %46
  %48 = trunc i64 %47 to i32
  %49 = lshr i64 %47, 32
  %50 = mul nuw nsw i64 %34, 4230436817
  %51 = add nuw nsw i64 %49, %50
  %52 = trunc i64 %51 to i32
  %53 = lshr i64 %51, 32
  %54 = mul nuw nsw i64 %34, 1313084713
  %55 = add nuw nsw i64 %53, %54
  %56 = trunc i64 %55 to i32
  %57 = lshr i64 %55, 32
  %58 = mul nuw nsw i64 %34, 2734261102
  %59 = add nuw nsw i64 %57, %58
  %60 = trunc i64 %59 to i32
  %61 = lshr i64 %59, 32
  %62 = trunc i64 %61 to i32
  %63 = add nsw i32 %31, -120
  %64 = icmp ugt i32 %63, 63
  %65 = select i1 %64, i32 %56, i32 %62
  %66 = select i1 %64, i32 %52, i32 %60
  %67 = select i1 %64, i32 %48, i32 %56
  %68 = select i1 %64, i32 %44, i32 %52
  %69 = select i1 %64, i32 %40, i32 %48
  %70 = select i1 %64, i32 %36, i32 %44
  %71 = select i1 %64, i32 -64, i32 0
  %72 = add nsw i32 %71, %63
  %73 = icmp ugt i32 %72, 31
  %74 = select i1 %73, i32 %66, i32 %65
  %75 = select i1 %73, i32 %67, i32 %66
  %76 = select i1 %73, i32 %68, i32 %67
  %77 = select i1 %73, i32 %69, i32 %68
  %78 = select i1 %73, i32 %70, i32 %69
  %79 = select i1 %73, i32 -32, i32 0
  %80 = add nsw i32 %79, %72
  %81 = icmp ugt i32 %80, 31
  %82 = select i1 %81, i32 %75, i32 %74
  %83 = select i1 %81, i32 %76, i32 %75
  %84 = select i1 %81, i32 %77, i32 %76
  %85 = select i1 %81, i32 %78, i32 %77
  %86 = select i1 %81, i32 -32, i32 0
  %87 = add nsw i32 %86, %80
  %88 = icmp eq i32 %87, 0
  %89 = sub nsw i32 32, %87
  %90 = tail call i32 @llvm.fshr.i32(i32 %82, i32 %83, i32 %89)
  %91 = tail call i32 @llvm.fshr.i32(i32 %83, i32 %84, i32 %89)
  %92 = tail call i32 @llvm.fshr.i32(i32 %84, i32 %85, i32 %89)
  %93 = select i1 %88, i32 %82, i32 %90
  %94 = select i1 %88, i32 %83, i32 %91
  %95 = select i1 %88, i32 %84, i32 %92
  %96 = lshr i32 %93, 29
  %97 = tail call i32 @llvm.fshl.i32(i32 %93, i32 %94, i32 2)
  %98 = tail call i32 @llvm.fshl.i32(i32 %94, i32 %95, i32 2)
  %99 = tail call i32 @llvm.fshl.i32(i32 %95, i32 %85, i32 2)
  %100 = and i32 %96, 1
  %101 = sub nsw i32 0, %100
  %102 = shl i32 %96, 31
  %103 = xor i32 %97, %101
  %104 = xor i32 %98, %101
  %105 = xor i32 %99, %101
  %106 = tail call i32 @llvm.ctlz.i32(i32 %103, i1 false), !range !8
  %107 = sub nsw i32 31, %106
  %108 = tail call i32 @llvm.fshr.i32(i32 %103, i32 %104, i32 %107)
  %109 = tail call i32 @llvm.fshr.i32(i32 %104, i32 %105, i32 %107)
  %110 = shl nuw nsw i32 %106, 23
  %111 = sub nuw nsw i32 1056964608, %110
  %112 = lshr i32 %108, 9
  %113 = or i32 %112, %111
  %114 = or i32 %113, %102
  %115 = bitcast i32 %114 to float
  %116 = tail call i32 @llvm.fshl.i32(i32 %108, i32 %109, i32 23)
  %117 = tail call i32 @llvm.ctlz.i32(i32 %116, i1 false), !range !8
  %118 = fmul float %115, 0x3FF921FB40000000
  %119 = add nuw nsw i32 %117, %106
  %120 = shl nuw nsw i32 %119, 23
  %121 = sub nuw nsw i32 855638016, %120
  %122 = sub nsw i32 31, %117
  %123 = tail call i32 @llvm.fshr.i32(i32 %116, i32 %109, i32 %122)
  %124 = lshr i32 %123, 9
  %125 = or i32 %121, %124
  %126 = or i32 %125, %102
  %127 = bitcast i32 %126 to float
  %128 = fneg float %118
  %129 = tail call float @llvm.fma.f32(float %115, float 0x3FF921FB40000000, float %128)
  %130 = tail call float @llvm.fma.f32(float %115, float 0x3E74442D00000000, float %129)
  %131 = tail call float @llvm.fma.f32(float %127, float 0x3FF921FB40000000, float %130)
  %132 = fadd float %118, %131
  %133 = lshr i32 %93, 30
  %134 = add nuw nsw i32 %100, %133
  br label %135

135:                                              ; preds = %29, %21
  %136 = phi i32 [ %28, %21 ], [ %30, %29 ]
  %137 = phi float [ %26, %21 ], [ %132, %29 ]
  %138 = phi i32 [ %27, %21 ], [ %134, %29 ]
  %139 = fmul float %137, %137
  %140 = tail call float @llvm.fmuladd.f32(float %139, float 0xBF29833040000000, float 0x3F81103880000000)
  %141 = tail call float @llvm.fmuladd.f32(float %139, float %140, float 0xBFC55553A0000000)
  %142 = fmul float %139, %141
  %143 = tail call float @llvm.fmuladd.f32(float %137, float %142, float %137)
  %144 = tail call float @llvm.fmuladd.f32(float %139, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %145 = tail call float @llvm.fmuladd.f32(float %139, float %144, float 0x3FA5557EE0000000)
  %146 = tail call float @llvm.fmuladd.f32(float %139, float %145, float 0xBFE0000080000000)
  %147 = tail call float @llvm.fmuladd.f32(float %139, float %146, float 1.000000e+00)
  %148 = and i32 %138, 1
  %149 = icmp eq i32 %148, 0
  %150 = select i1 %149, float %143, float %147
  %151 = bitcast float %150 to i32
  %152 = shl i32 %138, 30
  %153 = and i32 %152, -2147483648
  %154 = bitcast float %18 to i32
  %155 = xor i32 %136, %154
  %156 = xor i32 %155, %153
  %157 = xor i32 %156, %151
  %158 = bitcast i32 %157 to float
  %159 = tail call i1 @llvm.amdgcn.class.f32(float %19, i32 504)
  %160 = select i1 %159, float %158, float 0x7FF8000000000000
  %161 = tail call float @llvm.fabs.f32(float %160)
  %162 = tail call float @llvm.amdgcn.frexp.mant.f32(float %161)
  %163 = fcmp olt float %162, 0x3FE5555560000000
  %164 = zext i1 %163 to i32
  %165 = tail call float @llvm.amdgcn.ldexp.f32(float %162, i32 %164)
  %166 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %161)
  %167 = sub nsw i32 %166, %164
  %168 = fadd float %165, -1.000000e+00
  %169 = fadd float %165, 1.000000e+00
  %170 = fadd float %169, -1.000000e+00
  %171 = fsub float %165, %170
  %172 = tail call float @llvm.amdgcn.rcp.f32(float %169)
  %173 = fmul float %168, %172
  %174 = fmul float %169, %173
  %175 = fneg float %174
  %176 = tail call float @llvm.fma.f32(float %173, float %169, float %175)
  %177 = tail call float @llvm.fma.f32(float %173, float %171, float %176)
  %178 = fadd float %174, %177
  %179 = fsub float %178, %174
  %180 = fsub float %177, %179
  %181 = fsub float %168, %178
  %182 = fsub float %168, %181
  %183 = fsub float %182, %178
  %184 = fsub float %183, %180
  %185 = fadd float %181, %184
  %186 = fmul float %172, %185
  %187 = fadd float %173, %186
  %188 = fsub float %187, %173
  %189 = fsub float %186, %188
  %190 = fmul float %187, %187
  %191 = fneg float %190
  %192 = tail call float @llvm.fma.f32(float %187, float %187, float %191)
  %193 = fmul float %189, 2.000000e+00
  %194 = tail call float @llvm.fma.f32(float %187, float %193, float %192)
  %195 = fadd float %190, %194
  %196 = fsub float %195, %190
  %197 = fsub float %194, %196
  %198 = tail call float @llvm.fmuladd.f32(float %195, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %199 = tail call float @llvm.fmuladd.f32(float %195, float %198, float 0x3FD999BDE0000000)
  %200 = sitofp i32 %167 to float
  %201 = fmul float %200, 0x3FE62E4300000000
  %202 = fneg float %201
  %203 = tail call float @llvm.fma.f32(float %200, float 0x3FE62E4300000000, float %202)
  %204 = tail call float @llvm.fma.f32(float %200, float 0xBE205C6100000000, float %203)
  %205 = fadd float %201, %204
  %206 = fsub float %205, %201
  %207 = fsub float %204, %206
  %208 = tail call float @llvm.amdgcn.ldexp.f32(float %187, i32 1)
  %209 = fmul float %187, %195
  %210 = fneg float %209
  %211 = tail call float @llvm.fma.f32(float %195, float %187, float %210)
  %212 = tail call float @llvm.fma.f32(float %195, float %189, float %211)
  %213 = tail call float @llvm.fma.f32(float %197, float %187, float %212)
  %214 = fadd float %209, %213
  %215 = fsub float %214, %209
  %216 = fsub float %213, %215
  %217 = fmul float %195, %199
  %218 = fneg float %217
  %219 = tail call float @llvm.fma.f32(float %195, float %199, float %218)
  %220 = tail call float @llvm.fma.f32(float %197, float %199, float %219)
  %221 = fadd float %217, %220
  %222 = fsub float %221, %217
  %223 = fsub float %220, %222
  %224 = fadd float %221, 0x3FE5555540000000
  %225 = fadd float %224, 0xBFE5555540000000
  %226 = fsub float %221, %225
  %227 = fadd float %223, 0x3E2E720200000000
  %228 = fadd float %227, %226
  %229 = fadd float %224, %228
  %230 = fsub float %229, %224
  %231 = fsub float %228, %230
  %232 = fmul float %214, %229
  %233 = fneg float %232
  %234 = tail call float @llvm.fma.f32(float %214, float %229, float %233)
  %235 = tail call float @llvm.fma.f32(float %214, float %231, float %234)
  %236 = tail call float @llvm.fma.f32(float %216, float %229, float %235)
  %237 = tail call float @llvm.amdgcn.ldexp.f32(float %189, i32 1)
  %238 = fadd float %232, %236
  %239 = fsub float %238, %232
  %240 = fsub float %236, %239
  %241 = fadd float %208, %238
  %242 = fsub float %241, %208
  %243 = fsub float %238, %242
  %244 = fadd float %237, %240
  %245 = fadd float %244, %243
  %246 = fadd float %241, %245
  %247 = fsub float %246, %241
  %248 = fsub float %245, %247
  %249 = fadd float %205, %246
  %250 = fsub float %249, %205
  %251 = fsub float %249, %250
  %252 = fsub float %205, %251
  %253 = fsub float %246, %250
  %254 = fadd float %253, %252
  %255 = fadd float %207, %248
  %256 = fsub float %255, %207
  %257 = fsub float %255, %256
  %258 = fsub float %207, %257
  %259 = fsub float %248, %256
  %260 = fadd float %259, %258
  %261 = fadd float %255, %254
  %262 = fadd float %249, %261
  %263 = fsub float %262, %249
  %264 = fsub float %261, %263
  %265 = fadd float %260, %264
  %266 = fadd float %262, %265
  %267 = fsub float %266, %262
  %268 = fsub float %265, %267
  %269 = fmul float %266, 2.000000e+00
  %270 = fneg float %269
  %271 = tail call float @llvm.fma.f32(float %266, float 2.000000e+00, float %270)
  %272 = fmul float %266, 0.000000e+00
  %273 = tail call float @llvm.fma.f32(float %268, float 2.000000e+00, float %272)
  %274 = fadd float %271, %273
  %275 = fadd float %269, %274
  %276 = fsub float %275, %269
  %277 = fsub float %274, %276
  %278 = tail call float @llvm.fabs.f32(float %269) #3
  %279 = fcmp oeq float %278, 0x7FF0000000000000
  %280 = select i1 %279, float %269, float %275
  %281 = tail call float @llvm.fabs.f32(float %280) #3
  %282 = fcmp oeq float %281, 0x7FF0000000000000
  %283 = select i1 %282, float 0.000000e+00, float %277
  %284 = fcmp oeq float %280, 0x40562E4300000000
  %285 = select i1 %284, float 0x3EE0000000000000, float 0.000000e+00
  %286 = fsub float %280, %285
  %287 = fadd float %285, %283
  %288 = fmul float %286, 0x3FF7154760000000
  %289 = tail call float @llvm.rint.f32(float %288)
  %290 = fcmp ogt float %286, 0x40562E4300000000
  %291 = fcmp olt float %286, 0xC059D1DA00000000
  %292 = fneg float %288
  %293 = tail call float @llvm.fma.f32(float %286, float 0x3FF7154760000000, float %292)
  %294 = tail call float @llvm.fma.f32(float %286, float 0x3E54AE0BE0000000, float %293)
  %295 = fsub float %288, %289
  %296 = fadd float %294, %295
  %297 = tail call float @llvm.exp2.f32(float %296)
  %298 = fptosi float %289 to i32
  %299 = tail call float @llvm.amdgcn.ldexp.f32(float %297, i32 %298)
  %300 = select i1 %291, float 0.000000e+00, float %299
  %301 = select i1 %290, float 0x7FF0000000000000, float %300
  %302 = tail call float @llvm.fma.f32(float %301, float %287, float %301)
  %303 = tail call float @llvm.fabs.f32(float %301) #3
  %304 = fcmp oeq float %303, 0x7FF0000000000000
  %305 = select i1 %304, float %301, float %302
  %306 = tail call float @llvm.fabs.f32(float %305)
  %307 = fcmp oeq float %161, 0x7FF0000000000000
  %308 = fcmp oeq float %160, 0.000000e+00
  %309 = select i1 %307, float 0x7FF0000000000000, float %306
  %310 = select i1 %308, float 0.000000e+00, float %309
  %311 = fcmp uno float %160, 0.000000e+00
  %312 = select i1 %311, float 0x7FF8000000000000, float %310
  %313 = fadd contract float %17, -1.000000e+00
  %314 = tail call float @llvm.fabs.f32(float %313)
  %315 = tail call float @llvm.amdgcn.frexp.mant.f32(float %314)
  %316 = fcmp olt float %315, 0x3FE5555560000000
  %317 = zext i1 %316 to i32
  %318 = tail call float @llvm.amdgcn.ldexp.f32(float %315, i32 %317)
  %319 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %314)
  %320 = sub nsw i32 %319, %317
  %321 = fadd float %318, -1.000000e+00
  %322 = fadd float %318, 1.000000e+00
  %323 = fadd float %322, -1.000000e+00
  %324 = fsub float %318, %323
  %325 = tail call float @llvm.amdgcn.rcp.f32(float %322)
  %326 = fmul float %321, %325
  %327 = fmul float %322, %326
  %328 = fneg float %327
  %329 = tail call float @llvm.fma.f32(float %326, float %322, float %328)
  %330 = tail call float @llvm.fma.f32(float %326, float %324, float %329)
  %331 = fadd float %327, %330
  %332 = fsub float %331, %327
  %333 = fsub float %330, %332
  %334 = fsub float %321, %331
  %335 = fsub float %321, %334
  %336 = fsub float %335, %331
  %337 = fsub float %336, %333
  %338 = fadd float %334, %337
  %339 = fmul float %325, %338
  %340 = fadd float %326, %339
  %341 = fsub float %340, %326
  %342 = fsub float %339, %341
  %343 = fmul float %340, %340
  %344 = fneg float %343
  %345 = tail call float @llvm.fma.f32(float %340, float %340, float %344)
  %346 = fmul float %342, 2.000000e+00
  %347 = tail call float @llvm.fma.f32(float %340, float %346, float %345)
  %348 = fadd float %343, %347
  %349 = fsub float %348, %343
  %350 = fsub float %347, %349
  %351 = tail call float @llvm.fmuladd.f32(float %348, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %352 = tail call float @llvm.fmuladd.f32(float %348, float %351, float 0x3FD999BDE0000000)
  %353 = sitofp i32 %320 to float
  %354 = fmul float %353, 0x3FE62E4300000000
  %355 = fneg float %354
  %356 = tail call float @llvm.fma.f32(float %353, float 0x3FE62E4300000000, float %355)
  %357 = tail call float @llvm.fma.f32(float %353, float 0xBE205C6100000000, float %356)
  %358 = fadd float %354, %357
  %359 = fsub float %358, %354
  %360 = fsub float %357, %359
  %361 = tail call float @llvm.amdgcn.ldexp.f32(float %340, i32 1)
  %362 = fmul float %340, %348
  %363 = fneg float %362
  %364 = tail call float @llvm.fma.f32(float %348, float %340, float %363)
  %365 = tail call float @llvm.fma.f32(float %348, float %342, float %364)
  %366 = tail call float @llvm.fma.f32(float %350, float %340, float %365)
  %367 = fadd float %362, %366
  %368 = fsub float %367, %362
  %369 = fsub float %366, %368
  %370 = fmul float %348, %352
  %371 = fneg float %370
  %372 = tail call float @llvm.fma.f32(float %348, float %352, float %371)
  %373 = tail call float @llvm.fma.f32(float %350, float %352, float %372)
  %374 = fadd float %370, %373
  %375 = fsub float %374, %370
  %376 = fsub float %373, %375
  %377 = fadd float %374, 0x3FE5555540000000
  %378 = fadd float %377, 0xBFE5555540000000
  %379 = fsub float %374, %378
  %380 = fadd float %376, 0x3E2E720200000000
  %381 = fadd float %380, %379
  %382 = fadd float %377, %381
  %383 = fsub float %382, %377
  %384 = fsub float %381, %383
  %385 = fmul float %367, %382
  %386 = fneg float %385
  %387 = tail call float @llvm.fma.f32(float %367, float %382, float %386)
  %388 = tail call float @llvm.fma.f32(float %367, float %384, float %387)
  %389 = tail call float @llvm.fma.f32(float %369, float %382, float %388)
  %390 = tail call float @llvm.amdgcn.ldexp.f32(float %342, i32 1)
  %391 = fadd float %385, %389
  %392 = fsub float %391, %385
  %393 = fsub float %389, %392
  %394 = fadd float %361, %391
  %395 = fsub float %394, %361
  %396 = fsub float %391, %395
  %397 = fadd float %390, %393
  %398 = fadd float %397, %396
  %399 = fadd float %394, %398
  %400 = fsub float %399, %394
  %401 = fsub float %398, %400
  %402 = fadd float %358, %399
  %403 = fsub float %402, %358
  %404 = fsub float %402, %403
  %405 = fsub float %358, %404
  %406 = fsub float %399, %403
  %407 = fadd float %406, %405
  %408 = fadd float %360, %401
  %409 = fsub float %408, %360
  %410 = fsub float %408, %409
  %411 = fsub float %360, %410
  %412 = fsub float %401, %409
  %413 = fadd float %412, %411
  %414 = fadd float %408, %407
  %415 = fadd float %402, %414
  %416 = fsub float %415, %402
  %417 = fsub float %414, %416
  %418 = fadd float %413, %417
  %419 = fadd float %415, %418
  %420 = fsub float %419, %415
  %421 = fsub float %418, %420
  %422 = fmul float %419, 2.000000e+00
  %423 = fneg float %422
  %424 = tail call float @llvm.fma.f32(float %419, float 2.000000e+00, float %423)
  %425 = fmul float %419, 0.000000e+00
  %426 = tail call float @llvm.fma.f32(float %421, float 2.000000e+00, float %425)
  %427 = fadd float %424, %426
  %428 = fadd float %422, %427
  %429 = fsub float %428, %422
  %430 = fsub float %427, %429
  %431 = tail call float @llvm.fabs.f32(float %422) #3
  %432 = fcmp oeq float %431, 0x7FF0000000000000
  %433 = select i1 %432, float %422, float %428
  %434 = tail call float @llvm.fabs.f32(float %433) #3
  %435 = fcmp oeq float %434, 0x7FF0000000000000
  %436 = select i1 %435, float 0.000000e+00, float %430
  %437 = fcmp oeq float %433, 0x40562E4300000000
  %438 = select i1 %437, float 0x3EE0000000000000, float 0.000000e+00
  %439 = fsub float %433, %438
  %440 = fadd float %438, %436
  %441 = fmul float %439, 0x3FF7154760000000
  %442 = tail call float @llvm.rint.f32(float %441)
  %443 = fcmp ogt float %439, 0x40562E4300000000
  %444 = fcmp olt float %439, 0xC059D1DA00000000
  %445 = fneg float %441
  %446 = tail call float @llvm.fma.f32(float %439, float 0x3FF7154760000000, float %445)
  %447 = tail call float @llvm.fma.f32(float %439, float 0x3E54AE0BE0000000, float %446)
  %448 = fsub float %441, %442
  %449 = fadd float %447, %448
  %450 = tail call float @llvm.exp2.f32(float %449)
  %451 = fptosi float %442 to i32
  %452 = tail call float @llvm.amdgcn.ldexp.f32(float %450, i32 %451)
  %453 = select i1 %444, float 0.000000e+00, float %452
  %454 = select i1 %443, float 0x7FF0000000000000, float %453
  %455 = tail call float @llvm.fma.f32(float %454, float %440, float %454)
  %456 = tail call float @llvm.fabs.f32(float %454) #3
  %457 = fcmp oeq float %456, 0x7FF0000000000000
  %458 = select i1 %457, float %454, float %455
  %459 = tail call float @llvm.fabs.f32(float %458)
  %460 = fcmp oeq float %314, 0x7FF0000000000000
  %461 = fcmp oeq float %313, 0.000000e+00
  %462 = select i1 %460, float 0x7FF0000000000000, float %459
  %463 = select i1 %461, float 0.000000e+00, float %462
  %464 = fcmp uno float %313, 0.000000e+00
  %465 = select i1 %464, float 0x7FF8000000000000, float %463
  %466 = fadd contract float %465, %312
  %467 = fadd contract float %466, 0.000000e+00
  br label %468

468:                                              ; preds = %753, %135
  %469 = phi i1 [ true, %135 ], [ false, %753 ]
  %470 = phi i32 [ 0, %135 ], [ 1, %753 ]
  %471 = phi float [ %467, %135 ], [ %934, %753 ]
  %472 = zext i32 %470 to i64
  %473 = extractelement <3 x float> %11, i64 %472
  %474 = fadd contract float %473, -1.000000e+00
  %475 = fmul contract float %474, 2.500000e-01
  %476 = fadd contract float %475, 1.000000e+00
  %477 = add nuw nsw i32 %470, 1
  %478 = zext i32 %477 to i64
  %479 = extractelement <3 x float> %11, i64 %478
  %480 = fadd contract float %479, -1.000000e+00
  %481 = fmul contract float %480, 2.500000e-01
  %482 = fadd contract float %481, 1.000000e+00
  %483 = fadd contract float %476, -1.000000e+00
  %484 = tail call float @llvm.fabs.f32(float %483)
  %485 = tail call float @llvm.amdgcn.frexp.mant.f32(float %484)
  %486 = fcmp olt float %485, 0x3FE5555560000000
  %487 = zext i1 %486 to i32
  %488 = tail call float @llvm.amdgcn.ldexp.f32(float %485, i32 %487)
  %489 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %484)
  %490 = sub nsw i32 %489, %487
  %491 = fadd float %488, -1.000000e+00
  %492 = fadd float %488, 1.000000e+00
  %493 = fadd float %492, -1.000000e+00
  %494 = fsub float %488, %493
  %495 = tail call float @llvm.amdgcn.rcp.f32(float %492)
  %496 = fmul float %491, %495
  %497 = fmul float %492, %496
  %498 = fneg float %497
  %499 = tail call float @llvm.fma.f32(float %496, float %492, float %498)
  %500 = tail call float @llvm.fma.f32(float %496, float %494, float %499)
  %501 = fadd float %497, %500
  %502 = fsub float %501, %497
  %503 = fsub float %500, %502
  %504 = fsub float %491, %501
  %505 = fsub float %491, %504
  %506 = fsub float %505, %501
  %507 = fsub float %506, %503
  %508 = fadd float %504, %507
  %509 = fmul float %495, %508
  %510 = fadd float %496, %509
  %511 = fsub float %510, %496
  %512 = fsub float %509, %511
  %513 = fmul float %510, %510
  %514 = fneg float %513
  %515 = tail call float @llvm.fma.f32(float %510, float %510, float %514)
  %516 = fmul float %512, 2.000000e+00
  %517 = tail call float @llvm.fma.f32(float %510, float %516, float %515)
  %518 = fadd float %513, %517
  %519 = fsub float %518, %513
  %520 = fsub float %517, %519
  %521 = tail call float @llvm.fmuladd.f32(float %518, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %522 = tail call float @llvm.fmuladd.f32(float %518, float %521, float 0x3FD999BDE0000000)
  %523 = sitofp i32 %490 to float
  %524 = fmul float %523, 0x3FE62E4300000000
  %525 = fneg float %524
  %526 = tail call float @llvm.fma.f32(float %523, float 0x3FE62E4300000000, float %525)
  %527 = tail call float @llvm.fma.f32(float %523, float 0xBE205C6100000000, float %526)
  %528 = fadd float %524, %527
  %529 = fsub float %528, %524
  %530 = fsub float %527, %529
  %531 = tail call float @llvm.amdgcn.ldexp.f32(float %510, i32 1)
  %532 = fmul float %510, %518
  %533 = fneg float %532
  %534 = tail call float @llvm.fma.f32(float %518, float %510, float %533)
  %535 = tail call float @llvm.fma.f32(float %518, float %512, float %534)
  %536 = tail call float @llvm.fma.f32(float %520, float %510, float %535)
  %537 = fadd float %532, %536
  %538 = fsub float %537, %532
  %539 = fsub float %536, %538
  %540 = fmul float %518, %522
  %541 = fneg float %540
  %542 = tail call float @llvm.fma.f32(float %518, float %522, float %541)
  %543 = tail call float @llvm.fma.f32(float %520, float %522, float %542)
  %544 = fadd float %540, %543
  %545 = fsub float %544, %540
  %546 = fsub float %543, %545
  %547 = fadd float %544, 0x3FE5555540000000
  %548 = fadd float %547, 0xBFE5555540000000
  %549 = fsub float %544, %548
  %550 = fadd float %546, 0x3E2E720200000000
  %551 = fadd float %550, %549
  %552 = fadd float %547, %551
  %553 = fsub float %552, %547
  %554 = fsub float %551, %553
  %555 = fmul float %537, %552
  %556 = fneg float %555
  %557 = tail call float @llvm.fma.f32(float %537, float %552, float %556)
  %558 = tail call float @llvm.fma.f32(float %537, float %554, float %557)
  %559 = tail call float @llvm.fma.f32(float %539, float %552, float %558)
  %560 = tail call float @llvm.amdgcn.ldexp.f32(float %512, i32 1)
  %561 = fadd float %555, %559
  %562 = fsub float %561, %555
  %563 = fsub float %559, %562
  %564 = fadd float %531, %561
  %565 = fsub float %564, %531
  %566 = fsub float %561, %565
  %567 = fadd float %560, %563
  %568 = fadd float %567, %566
  %569 = fadd float %564, %568
  %570 = fsub float %569, %564
  %571 = fsub float %568, %570
  %572 = fadd float %528, %569
  %573 = fsub float %572, %528
  %574 = fsub float %572, %573
  %575 = fsub float %528, %574
  %576 = fsub float %569, %573
  %577 = fadd float %576, %575
  %578 = fadd float %530, %571
  %579 = fsub float %578, %530
  %580 = fsub float %578, %579
  %581 = fsub float %530, %580
  %582 = fsub float %571, %579
  %583 = fadd float %582, %581
  %584 = fadd float %578, %577
  %585 = fadd float %572, %584
  %586 = fsub float %585, %572
  %587 = fsub float %584, %586
  %588 = fadd float %583, %587
  %589 = fadd float %585, %588
  %590 = fsub float %589, %585
  %591 = fsub float %588, %590
  %592 = fmul float %589, 2.000000e+00
  %593 = fneg float %592
  %594 = tail call float @llvm.fma.f32(float %589, float 2.000000e+00, float %593)
  %595 = fmul float %589, 0.000000e+00
  %596 = tail call float @llvm.fma.f32(float %591, float 2.000000e+00, float %595)
  %597 = fadd float %594, %596
  %598 = fadd float %592, %597
  %599 = fsub float %598, %592
  %600 = fsub float %597, %599
  %601 = tail call float @llvm.fabs.f32(float %592) #3
  %602 = fcmp oeq float %601, 0x7FF0000000000000
  %603 = select i1 %602, float %592, float %598
  %604 = tail call float @llvm.fabs.f32(float %603) #3
  %605 = fcmp oeq float %604, 0x7FF0000000000000
  %606 = select i1 %605, float 0.000000e+00, float %600
  %607 = fcmp oeq float %603, 0x40562E4300000000
  %608 = select i1 %607, float 0x3EE0000000000000, float 0.000000e+00
  %609 = fsub float %603, %608
  %610 = fadd float %608, %606
  %611 = fmul float %609, 0x3FF7154760000000
  %612 = tail call float @llvm.rint.f32(float %611)
  %613 = fcmp ogt float %609, 0x40562E4300000000
  %614 = fcmp olt float %609, 0xC059D1DA00000000
  %615 = fneg float %611
  %616 = tail call float @llvm.fma.f32(float %609, float 0x3FF7154760000000, float %615)
  %617 = tail call float @llvm.fma.f32(float %609, float 0x3E54AE0BE0000000, float %616)
  %618 = fsub float %611, %612
  %619 = fadd float %617, %618
  %620 = tail call float @llvm.exp2.f32(float %619)
  %621 = fptosi float %612 to i32
  %622 = tail call float @llvm.amdgcn.ldexp.f32(float %620, i32 %621)
  %623 = select i1 %614, float 0.000000e+00, float %622
  %624 = select i1 %613, float 0x7FF0000000000000, float %623
  %625 = tail call float @llvm.fma.f32(float %624, float %610, float %624)
  %626 = tail call float @llvm.fabs.f32(float %624) #3
  %627 = fcmp oeq float %626, 0x7FF0000000000000
  %628 = select i1 %627, float %624, float %625
  %629 = tail call float @llvm.fabs.f32(float %628)
  %630 = fcmp oeq float %484, 0x7FF0000000000000
  %631 = fcmp oeq float %483, 0.000000e+00
  %632 = select i1 %630, float 0x7FF0000000000000, float %629
  %633 = select i1 %631, float 0.000000e+00, float %632
  %634 = fcmp uno float %483, 0.000000e+00
  %635 = select i1 %634, float 0x7FF8000000000000, float %633
  %636 = fmul contract float %482, 0x400921CAC0000000
  %637 = tail call float @llvm.fabs.f32(float %636)
  %638 = fcmp olt float %637, 1.310720e+05
  br i1 %638, label %639, label %647

639:                                              ; preds = %468
  %640 = fmul float %637, 0x3FE45F3060000000
  %641 = tail call float @llvm.rint.f32(float %640)
  %642 = tail call float @llvm.fma.f32(float %641, float 0xBFF921FB40000000, float %637)
  %643 = tail call float @llvm.fma.f32(float %641, float 0xBE74442D00000000, float %642)
  %644 = tail call float @llvm.fma.f32(float %641, float 0xBCF8469880000000, float %643)
  %645 = fptosi float %641 to i32
  %646 = bitcast float %637 to i32
  br label %753

647:                                              ; preds = %468
  %648 = bitcast float %637 to i32
  %649 = lshr i32 %648, 23
  %650 = and i32 %648, 8388607
  %651 = or i32 %650, 8388608
  %652 = zext i32 %651 to i64
  %653 = mul nuw nsw i64 %652, 4266746795
  %654 = trunc i64 %653 to i32
  %655 = lshr i64 %653, 32
  %656 = mul nuw nsw i64 %652, 1011060801
  %657 = add nuw nsw i64 %655, %656
  %658 = trunc i64 %657 to i32
  %659 = lshr i64 %657, 32
  %660 = mul nuw nsw i64 %652, 3680671129
  %661 = add nuw nsw i64 %659, %660
  %662 = trunc i64 %661 to i32
  %663 = lshr i64 %661, 32
  %664 = mul nuw nsw i64 %652, 4113882560
  %665 = add nuw nsw i64 %663, %664
  %666 = trunc i64 %665 to i32
  %667 = lshr i64 %665, 32
  %668 = mul nuw nsw i64 %652, 4230436817
  %669 = add nuw nsw i64 %667, %668
  %670 = trunc i64 %669 to i32
  %671 = lshr i64 %669, 32
  %672 = mul nuw nsw i64 %652, 1313084713
  %673 = add nuw nsw i64 %671, %672
  %674 = trunc i64 %673 to i32
  %675 = lshr i64 %673, 32
  %676 = mul nuw nsw i64 %652, 2734261102
  %677 = add nuw nsw i64 %675, %676
  %678 = trunc i64 %677 to i32
  %679 = lshr i64 %677, 32
  %680 = trunc i64 %679 to i32
  %681 = add nsw i32 %649, -120
  %682 = icmp ugt i32 %681, 63
  %683 = select i1 %682, i32 %674, i32 %680
  %684 = select i1 %682, i32 %670, i32 %678
  %685 = select i1 %682, i32 %666, i32 %674
  %686 = select i1 %682, i32 %662, i32 %670
  %687 = select i1 %682, i32 %658, i32 %666
  %688 = select i1 %682, i32 %654, i32 %662
  %689 = select i1 %682, i32 -64, i32 0
  %690 = add nsw i32 %689, %681
  %691 = icmp ugt i32 %690, 31
  %692 = select i1 %691, i32 %684, i32 %683
  %693 = select i1 %691, i32 %685, i32 %684
  %694 = select i1 %691, i32 %686, i32 %685
  %695 = select i1 %691, i32 %687, i32 %686
  %696 = select i1 %691, i32 %688, i32 %687
  %697 = select i1 %691, i32 -32, i32 0
  %698 = add nsw i32 %697, %690
  %699 = icmp ugt i32 %698, 31
  %700 = select i1 %699, i32 %693, i32 %692
  %701 = select i1 %699, i32 %694, i32 %693
  %702 = select i1 %699, i32 %695, i32 %694
  %703 = select i1 %699, i32 %696, i32 %695
  %704 = select i1 %699, i32 -32, i32 0
  %705 = add nsw i32 %704, %698
  %706 = icmp eq i32 %705, 0
  %707 = sub nsw i32 32, %705
  %708 = tail call i32 @llvm.fshr.i32(i32 %700, i32 %701, i32 %707)
  %709 = tail call i32 @llvm.fshr.i32(i32 %701, i32 %702, i32 %707)
  %710 = tail call i32 @llvm.fshr.i32(i32 %702, i32 %703, i32 %707)
  %711 = select i1 %706, i32 %700, i32 %708
  %712 = select i1 %706, i32 %701, i32 %709
  %713 = select i1 %706, i32 %702, i32 %710
  %714 = lshr i32 %711, 29
  %715 = tail call i32 @llvm.fshl.i32(i32 %711, i32 %712, i32 2)
  %716 = tail call i32 @llvm.fshl.i32(i32 %712, i32 %713, i32 2)
  %717 = tail call i32 @llvm.fshl.i32(i32 %713, i32 %703, i32 2)
  %718 = and i32 %714, 1
  %719 = sub nsw i32 0, %718
  %720 = shl i32 %714, 31
  %721 = xor i32 %715, %719
  %722 = xor i32 %716, %719
  %723 = xor i32 %717, %719
  %724 = tail call i32 @llvm.ctlz.i32(i32 %721, i1 false), !range !8
  %725 = sub nsw i32 31, %724
  %726 = tail call i32 @llvm.fshr.i32(i32 %721, i32 %722, i32 %725)
  %727 = tail call i32 @llvm.fshr.i32(i32 %722, i32 %723, i32 %725)
  %728 = shl nuw nsw i32 %724, 23
  %729 = sub nuw nsw i32 1056964608, %728
  %730 = lshr i32 %726, 9
  %731 = or i32 %730, %729
  %732 = or i32 %731, %720
  %733 = bitcast i32 %732 to float
  %734 = tail call i32 @llvm.fshl.i32(i32 %726, i32 %727, i32 23)
  %735 = tail call i32 @llvm.ctlz.i32(i32 %734, i1 false), !range !8
  %736 = fmul float %733, 0x3FF921FB40000000
  %737 = add nuw nsw i32 %735, %724
  %738 = shl nuw nsw i32 %737, 23
  %739 = sub nuw nsw i32 855638016, %738
  %740 = sub nsw i32 31, %735
  %741 = tail call i32 @llvm.fshr.i32(i32 %734, i32 %727, i32 %740)
  %742 = lshr i32 %741, 9
  %743 = or i32 %739, %742
  %744 = or i32 %743, %720
  %745 = bitcast i32 %744 to float
  %746 = fneg float %736
  %747 = tail call float @llvm.fma.f32(float %733, float 0x3FF921FB40000000, float %746)
  %748 = tail call float @llvm.fma.f32(float %733, float 0x3E74442D00000000, float %747)
  %749 = tail call float @llvm.fma.f32(float %745, float 0x3FF921FB40000000, float %748)
  %750 = fadd float %736, %749
  %751 = lshr i32 %711, 30
  %752 = add nuw nsw i32 %718, %751
  br label %753

753:                                              ; preds = %647, %639
  %754 = phi i32 [ %646, %639 ], [ %648, %647 ]
  %755 = phi float [ %644, %639 ], [ %750, %647 ]
  %756 = phi i32 [ %645, %639 ], [ %752, %647 ]
  %757 = fmul float %755, %755
  %758 = tail call float @llvm.fmuladd.f32(float %757, float 0xBF29833040000000, float 0x3F81103880000000)
  %759 = tail call float @llvm.fmuladd.f32(float %757, float %758, float 0xBFC55553A0000000)
  %760 = fmul float %757, %759
  %761 = tail call float @llvm.fmuladd.f32(float %755, float %760, float %755)
  %762 = tail call float @llvm.fmuladd.f32(float %757, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %763 = tail call float @llvm.fmuladd.f32(float %757, float %762, float 0x3FA5557EE0000000)
  %764 = tail call float @llvm.fmuladd.f32(float %757, float %763, float 0xBFE0000080000000)
  %765 = tail call float @llvm.fmuladd.f32(float %757, float %764, float 1.000000e+00)
  %766 = and i32 %756, 1
  %767 = icmp eq i32 %766, 0
  %768 = select i1 %767, float %761, float %765
  %769 = bitcast float %768 to i32
  %770 = shl i32 %756, 30
  %771 = and i32 %770, -2147483648
  %772 = bitcast float %636 to i32
  %773 = xor i32 %754, %772
  %774 = xor i32 %773, %771
  %775 = xor i32 %774, %769
  %776 = bitcast i32 %775 to float
  %777 = tail call i1 @llvm.amdgcn.class.f32(float %637, i32 504)
  %778 = select i1 %777, float %776, float 0x7FF8000000000000
  %779 = tail call float @llvm.fabs.f32(float %778)
  %780 = tail call float @llvm.amdgcn.frexp.mant.f32(float %779)
  %781 = fcmp olt float %780, 0x3FE5555560000000
  %782 = zext i1 %781 to i32
  %783 = tail call float @llvm.amdgcn.ldexp.f32(float %780, i32 %782)
  %784 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %779)
  %785 = sub nsw i32 %784, %782
  %786 = fadd float %783, -1.000000e+00
  %787 = fadd float %783, 1.000000e+00
  %788 = fadd float %787, -1.000000e+00
  %789 = fsub float %783, %788
  %790 = tail call float @llvm.amdgcn.rcp.f32(float %787)
  %791 = fmul float %786, %790
  %792 = fmul float %787, %791
  %793 = fneg float %792
  %794 = tail call float @llvm.fma.f32(float %791, float %787, float %793)
  %795 = tail call float @llvm.fma.f32(float %791, float %789, float %794)
  %796 = fadd float %792, %795
  %797 = fsub float %796, %792
  %798 = fsub float %795, %797
  %799 = fsub float %786, %796
  %800 = fsub float %786, %799
  %801 = fsub float %800, %796
  %802 = fsub float %801, %798
  %803 = fadd float %799, %802
  %804 = fmul float %790, %803
  %805 = fadd float %791, %804
  %806 = fsub float %805, %791
  %807 = fsub float %804, %806
  %808 = fmul float %805, %805
  %809 = fneg float %808
  %810 = tail call float @llvm.fma.f32(float %805, float %805, float %809)
  %811 = fmul float %807, 2.000000e+00
  %812 = tail call float @llvm.fma.f32(float %805, float %811, float %810)
  %813 = fadd float %808, %812
  %814 = fsub float %813, %808
  %815 = fsub float %812, %814
  %816 = tail call float @llvm.fmuladd.f32(float %813, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %817 = tail call float @llvm.fmuladd.f32(float %813, float %816, float 0x3FD999BDE0000000)
  %818 = sitofp i32 %785 to float
  %819 = fmul float %818, 0x3FE62E4300000000
  %820 = fneg float %819
  %821 = tail call float @llvm.fma.f32(float %818, float 0x3FE62E4300000000, float %820)
  %822 = tail call float @llvm.fma.f32(float %818, float 0xBE205C6100000000, float %821)
  %823 = fadd float %819, %822
  %824 = fsub float %823, %819
  %825 = fsub float %822, %824
  %826 = tail call float @llvm.amdgcn.ldexp.f32(float %805, i32 1)
  %827 = fmul float %805, %813
  %828 = fneg float %827
  %829 = tail call float @llvm.fma.f32(float %813, float %805, float %828)
  %830 = tail call float @llvm.fma.f32(float %813, float %807, float %829)
  %831 = tail call float @llvm.fma.f32(float %815, float %805, float %830)
  %832 = fadd float %827, %831
  %833 = fsub float %832, %827
  %834 = fsub float %831, %833
  %835 = fmul float %813, %817
  %836 = fneg float %835
  %837 = tail call float @llvm.fma.f32(float %813, float %817, float %836)
  %838 = tail call float @llvm.fma.f32(float %815, float %817, float %837)
  %839 = fadd float %835, %838
  %840 = fsub float %839, %835
  %841 = fsub float %838, %840
  %842 = fadd float %839, 0x3FE5555540000000
  %843 = fadd float %842, 0xBFE5555540000000
  %844 = fsub float %839, %843
  %845 = fadd float %841, 0x3E2E720200000000
  %846 = fadd float %845, %844
  %847 = fadd float %842, %846
  %848 = fsub float %847, %842
  %849 = fsub float %846, %848
  %850 = fmul float %832, %847
  %851 = fneg float %850
  %852 = tail call float @llvm.fma.f32(float %832, float %847, float %851)
  %853 = tail call float @llvm.fma.f32(float %832, float %849, float %852)
  %854 = tail call float @llvm.fma.f32(float %834, float %847, float %853)
  %855 = tail call float @llvm.amdgcn.ldexp.f32(float %807, i32 1)
  %856 = fadd float %850, %854
  %857 = fsub float %856, %850
  %858 = fsub float %854, %857
  %859 = fadd float %826, %856
  %860 = fsub float %859, %826
  %861 = fsub float %856, %860
  %862 = fadd float %855, %858
  %863 = fadd float %862, %861
  %864 = fadd float %859, %863
  %865 = fsub float %864, %859
  %866 = fsub float %863, %865
  %867 = fadd float %823, %864
  %868 = fsub float %867, %823
  %869 = fsub float %867, %868
  %870 = fsub float %823, %869
  %871 = fsub float %864, %868
  %872 = fadd float %871, %870
  %873 = fadd float %825, %866
  %874 = fsub float %873, %825
  %875 = fsub float %873, %874
  %876 = fsub float %825, %875
  %877 = fsub float %866, %874
  %878 = fadd float %877, %876
  %879 = fadd float %873, %872
  %880 = fadd float %867, %879
  %881 = fsub float %880, %867
  %882 = fsub float %879, %881
  %883 = fadd float %878, %882
  %884 = fadd float %880, %883
  %885 = fsub float %884, %880
  %886 = fsub float %883, %885
  %887 = fmul float %884, 2.000000e+00
  %888 = fneg float %887
  %889 = tail call float @llvm.fma.f32(float %884, float 2.000000e+00, float %888)
  %890 = fmul float %884, 0.000000e+00
  %891 = tail call float @llvm.fma.f32(float %886, float 2.000000e+00, float %890)
  %892 = fadd float %889, %891
  %893 = fadd float %887, %892
  %894 = fsub float %893, %887
  %895 = fsub float %892, %894
  %896 = tail call float @llvm.fabs.f32(float %887) #3
  %897 = fcmp oeq float %896, 0x7FF0000000000000
  %898 = select i1 %897, float %887, float %893
  %899 = tail call float @llvm.fabs.f32(float %898) #3
  %900 = fcmp oeq float %899, 0x7FF0000000000000
  %901 = select i1 %900, float 0.000000e+00, float %895
  %902 = fcmp oeq float %898, 0x40562E4300000000
  %903 = select i1 %902, float 0x3EE0000000000000, float 0.000000e+00
  %904 = fsub float %898, %903
  %905 = fadd float %903, %901
  %906 = fmul float %904, 0x3FF7154760000000
  %907 = tail call float @llvm.rint.f32(float %906)
  %908 = fcmp ogt float %904, 0x40562E4300000000
  %909 = fcmp olt float %904, 0xC059D1DA00000000
  %910 = fneg float %906
  %911 = tail call float @llvm.fma.f32(float %904, float 0x3FF7154760000000, float %910)
  %912 = tail call float @llvm.fma.f32(float %904, float 0x3E54AE0BE0000000, float %911)
  %913 = fsub float %906, %907
  %914 = fadd float %912, %913
  %915 = tail call float @llvm.exp2.f32(float %914)
  %916 = fptosi float %907 to i32
  %917 = tail call float @llvm.amdgcn.ldexp.f32(float %915, i32 %916)
  %918 = select i1 %909, float 0.000000e+00, float %917
  %919 = select i1 %908, float 0x7FF0000000000000, float %918
  %920 = tail call float @llvm.fma.f32(float %919, float %905, float %919)
  %921 = tail call float @llvm.fabs.f32(float %919) #3
  %922 = fcmp oeq float %921, 0x7FF0000000000000
  %923 = select i1 %922, float %919, float %920
  %924 = tail call float @llvm.fabs.f32(float %923)
  %925 = fcmp oeq float %779, 0x7FF0000000000000
  %926 = fcmp oeq float %778, 0.000000e+00
  %927 = fcmp uno float %778, 0.000000e+00
  %928 = fmul contract float %924, 1.000000e+01
  %929 = fadd contract float %928, 1.000000e+00
  %930 = select i1 %925, float 0x7FF0000000000000, float %929
  %931 = select i1 %926, float 1.000000e+00, float %930
  %932 = select i1 %927, float 0x7FF8000000000000, float %931
  %933 = fmul contract float %635, %932
  %934 = fadd contract float %471, %933
  br i1 %469, label %468, label %935, !llvm.loop !9

935:                                              ; preds = %753
  %936 = load float, float addrspace(1)* %0, align 4, !tbaa !4
  %937 = fadd contract float %936, -1.000000e+00
  %938 = fmul contract float %937, 2.500000e-01
  %939 = fadd contract float %938, 1.000000e+00
  %940 = load float, float addrspace(1)* %3, align 4, !tbaa !4
  %941 = fadd contract float %940, -1.000000e+00
  %942 = fmul contract float %941, 2.500000e-01
  %943 = fadd contract float %942, 1.000000e+00
  %944 = fmul contract float %939, 0x400921CAC0000000
  %945 = tail call float @llvm.fabs.f32(float %944)
  %946 = fcmp olt float %945, 1.310720e+05
  br i1 %946, label %947, label %955

947:                                              ; preds = %935
  %948 = fmul float %945, 0x3FE45F3060000000
  %949 = tail call float @llvm.rint.f32(float %948)
  %950 = tail call float @llvm.fma.f32(float %949, float 0xBFF921FB40000000, float %945)
  %951 = tail call float @llvm.fma.f32(float %949, float 0xBE74442D00000000, float %950)
  %952 = tail call float @llvm.fma.f32(float %949, float 0xBCF8469880000000, float %951)
  %953 = fptosi float %949 to i32
  %954 = bitcast float %945 to i32
  br label %1061

955:                                              ; preds = %935
  %956 = bitcast float %945 to i32
  %957 = lshr i32 %956, 23
  %958 = and i32 %956, 8388607
  %959 = or i32 %958, 8388608
  %960 = zext i32 %959 to i64
  %961 = mul nuw nsw i64 %960, 4266746795
  %962 = trunc i64 %961 to i32
  %963 = lshr i64 %961, 32
  %964 = mul nuw nsw i64 %960, 1011060801
  %965 = add nuw nsw i64 %963, %964
  %966 = trunc i64 %965 to i32
  %967 = lshr i64 %965, 32
  %968 = mul nuw nsw i64 %960, 3680671129
  %969 = add nuw nsw i64 %967, %968
  %970 = trunc i64 %969 to i32
  %971 = lshr i64 %969, 32
  %972 = mul nuw nsw i64 %960, 4113882560
  %973 = add nuw nsw i64 %971, %972
  %974 = trunc i64 %973 to i32
  %975 = lshr i64 %973, 32
  %976 = mul nuw nsw i64 %960, 4230436817
  %977 = add nuw nsw i64 %975, %976
  %978 = trunc i64 %977 to i32
  %979 = lshr i64 %977, 32
  %980 = mul nuw nsw i64 %960, 1313084713
  %981 = add nuw nsw i64 %979, %980
  %982 = trunc i64 %981 to i32
  %983 = lshr i64 %981, 32
  %984 = mul nuw nsw i64 %960, 2734261102
  %985 = add nuw nsw i64 %983, %984
  %986 = trunc i64 %985 to i32
  %987 = lshr i64 %985, 32
  %988 = trunc i64 %987 to i32
  %989 = add nsw i32 %957, -120
  %990 = icmp ugt i32 %989, 63
  %991 = select i1 %990, i32 %982, i32 %988
  %992 = select i1 %990, i32 %978, i32 %986
  %993 = select i1 %990, i32 %974, i32 %982
  %994 = select i1 %990, i32 %970, i32 %978
  %995 = select i1 %990, i32 %966, i32 %974
  %996 = select i1 %990, i32 %962, i32 %970
  %997 = select i1 %990, i32 -64, i32 0
  %998 = add nsw i32 %997, %989
  %999 = icmp ugt i32 %998, 31
  %1000 = select i1 %999, i32 %992, i32 %991
  %1001 = select i1 %999, i32 %993, i32 %992
  %1002 = select i1 %999, i32 %994, i32 %993
  %1003 = select i1 %999, i32 %995, i32 %994
  %1004 = select i1 %999, i32 %996, i32 %995
  %1005 = select i1 %999, i32 -32, i32 0
  %1006 = add nsw i32 %1005, %998
  %1007 = icmp ugt i32 %1006, 31
  %1008 = select i1 %1007, i32 %1001, i32 %1000
  %1009 = select i1 %1007, i32 %1002, i32 %1001
  %1010 = select i1 %1007, i32 %1003, i32 %1002
  %1011 = select i1 %1007, i32 %1004, i32 %1003
  %1012 = select i1 %1007, i32 -32, i32 0
  %1013 = add nsw i32 %1012, %1006
  %1014 = icmp eq i32 %1013, 0
  %1015 = sub nsw i32 32, %1013
  %1016 = tail call i32 @llvm.fshr.i32(i32 %1008, i32 %1009, i32 %1015)
  %1017 = tail call i32 @llvm.fshr.i32(i32 %1009, i32 %1010, i32 %1015)
  %1018 = tail call i32 @llvm.fshr.i32(i32 %1010, i32 %1011, i32 %1015)
  %1019 = select i1 %1014, i32 %1008, i32 %1016
  %1020 = select i1 %1014, i32 %1009, i32 %1017
  %1021 = select i1 %1014, i32 %1010, i32 %1018
  %1022 = lshr i32 %1019, 29
  %1023 = tail call i32 @llvm.fshl.i32(i32 %1019, i32 %1020, i32 2)
  %1024 = tail call i32 @llvm.fshl.i32(i32 %1020, i32 %1021, i32 2)
  %1025 = tail call i32 @llvm.fshl.i32(i32 %1021, i32 %1011, i32 2)
  %1026 = and i32 %1022, 1
  %1027 = sub nsw i32 0, %1026
  %1028 = shl i32 %1022, 31
  %1029 = xor i32 %1023, %1027
  %1030 = xor i32 %1024, %1027
  %1031 = xor i32 %1025, %1027
  %1032 = tail call i32 @llvm.ctlz.i32(i32 %1029, i1 false), !range !8
  %1033 = sub nsw i32 31, %1032
  %1034 = tail call i32 @llvm.fshr.i32(i32 %1029, i32 %1030, i32 %1033)
  %1035 = tail call i32 @llvm.fshr.i32(i32 %1030, i32 %1031, i32 %1033)
  %1036 = shl nuw nsw i32 %1032, 23
  %1037 = sub nuw nsw i32 1056964608, %1036
  %1038 = lshr i32 %1034, 9
  %1039 = or i32 %1038, %1037
  %1040 = or i32 %1039, %1028
  %1041 = bitcast i32 %1040 to float
  %1042 = tail call i32 @llvm.fshl.i32(i32 %1034, i32 %1035, i32 23)
  %1043 = tail call i32 @llvm.ctlz.i32(i32 %1042, i1 false), !range !8
  %1044 = fmul float %1041, 0x3FF921FB40000000
  %1045 = add nuw nsw i32 %1043, %1032
  %1046 = shl nuw nsw i32 %1045, 23
  %1047 = sub nuw nsw i32 855638016, %1046
  %1048 = sub nsw i32 31, %1043
  %1049 = tail call i32 @llvm.fshr.i32(i32 %1042, i32 %1035, i32 %1048)
  %1050 = lshr i32 %1049, 9
  %1051 = or i32 %1047, %1050
  %1052 = or i32 %1051, %1028
  %1053 = bitcast i32 %1052 to float
  %1054 = fneg float %1044
  %1055 = tail call float @llvm.fma.f32(float %1041, float 0x3FF921FB40000000, float %1054)
  %1056 = tail call float @llvm.fma.f32(float %1041, float 0x3E74442D00000000, float %1055)
  %1057 = tail call float @llvm.fma.f32(float %1053, float 0x3FF921FB40000000, float %1056)
  %1058 = fadd float %1044, %1057
  %1059 = lshr i32 %1019, 30
  %1060 = add nuw nsw i32 %1026, %1059
  br label %1061

1061:                                             ; preds = %955, %947
  %1062 = phi i32 [ %954, %947 ], [ %956, %955 ]
  %1063 = phi float [ %952, %947 ], [ %1058, %955 ]
  %1064 = phi i32 [ %953, %947 ], [ %1060, %955 ]
  %1065 = fmul float %1063, %1063
  %1066 = tail call float @llvm.fmuladd.f32(float %1065, float 0xBF29833040000000, float 0x3F81103880000000)
  %1067 = tail call float @llvm.fmuladd.f32(float %1065, float %1066, float 0xBFC55553A0000000)
  %1068 = fmul float %1065, %1067
  %1069 = tail call float @llvm.fmuladd.f32(float %1063, float %1068, float %1063)
  %1070 = tail call float @llvm.fmuladd.f32(float %1065, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %1071 = tail call float @llvm.fmuladd.f32(float %1065, float %1070, float 0x3FA5557EE0000000)
  %1072 = tail call float @llvm.fmuladd.f32(float %1065, float %1071, float 0xBFE0000080000000)
  %1073 = tail call float @llvm.fmuladd.f32(float %1065, float %1072, float 1.000000e+00)
  %1074 = and i32 %1064, 1
  %1075 = icmp eq i32 %1074, 0
  %1076 = select i1 %1075, float %1069, float %1073
  %1077 = bitcast float %1076 to i32
  %1078 = shl i32 %1064, 30
  %1079 = and i32 %1078, -2147483648
  %1080 = bitcast float %944 to i32
  %1081 = xor i32 %1062, %1080
  %1082 = xor i32 %1081, %1079
  %1083 = xor i32 %1082, %1077
  %1084 = bitcast i32 %1083 to float
  %1085 = tail call i1 @llvm.amdgcn.class.f32(float %945, i32 504)
  %1086 = select i1 %1085, float %1084, float 0x7FF8000000000000
  %1087 = tail call float @llvm.fabs.f32(float %1086)
  %1088 = tail call float @llvm.amdgcn.frexp.mant.f32(float %1087)
  %1089 = fcmp olt float %1088, 0x3FE5555560000000
  %1090 = zext i1 %1089 to i32
  %1091 = tail call float @llvm.amdgcn.ldexp.f32(float %1088, i32 %1090)
  %1092 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %1087)
  %1093 = sub nsw i32 %1092, %1090
  %1094 = fadd float %1091, -1.000000e+00
  %1095 = fadd float %1091, 1.000000e+00
  %1096 = fadd float %1095, -1.000000e+00
  %1097 = fsub float %1091, %1096
  %1098 = tail call float @llvm.amdgcn.rcp.f32(float %1095)
  %1099 = fmul float %1094, %1098
  %1100 = fmul float %1095, %1099
  %1101 = fneg float %1100
  %1102 = tail call float @llvm.fma.f32(float %1099, float %1095, float %1101)
  %1103 = tail call float @llvm.fma.f32(float %1099, float %1097, float %1102)
  %1104 = fadd float %1100, %1103
  %1105 = fsub float %1104, %1100
  %1106 = fsub float %1103, %1105
  %1107 = fsub float %1094, %1104
  %1108 = fsub float %1094, %1107
  %1109 = fsub float %1108, %1104
  %1110 = fsub float %1109, %1106
  %1111 = fadd float %1107, %1110
  %1112 = fmul float %1098, %1111
  %1113 = fadd float %1099, %1112
  %1114 = fsub float %1113, %1099
  %1115 = fsub float %1112, %1114
  %1116 = fmul float %1113, %1113
  %1117 = fneg float %1116
  %1118 = tail call float @llvm.fma.f32(float %1113, float %1113, float %1117)
  %1119 = fmul float %1115, 2.000000e+00
  %1120 = tail call float @llvm.fma.f32(float %1113, float %1119, float %1118)
  %1121 = fadd float %1116, %1120
  %1122 = fsub float %1121, %1116
  %1123 = fsub float %1120, %1122
  %1124 = tail call float @llvm.fmuladd.f32(float %1121, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %1125 = tail call float @llvm.fmuladd.f32(float %1121, float %1124, float 0x3FD999BDE0000000)
  %1126 = sitofp i32 %1093 to float
  %1127 = fmul float %1126, 0x3FE62E4300000000
  %1128 = fneg float %1127
  %1129 = tail call float @llvm.fma.f32(float %1126, float 0x3FE62E4300000000, float %1128)
  %1130 = tail call float @llvm.fma.f32(float %1126, float 0xBE205C6100000000, float %1129)
  %1131 = fadd float %1127, %1130
  %1132 = fsub float %1131, %1127
  %1133 = fsub float %1130, %1132
  %1134 = tail call float @llvm.amdgcn.ldexp.f32(float %1113, i32 1)
  %1135 = fmul float %1113, %1121
  %1136 = fneg float %1135
  %1137 = tail call float @llvm.fma.f32(float %1121, float %1113, float %1136)
  %1138 = tail call float @llvm.fma.f32(float %1121, float %1115, float %1137)
  %1139 = tail call float @llvm.fma.f32(float %1123, float %1113, float %1138)
  %1140 = fadd float %1135, %1139
  %1141 = fsub float %1140, %1135
  %1142 = fsub float %1139, %1141
  %1143 = fmul float %1121, %1125
  %1144 = fneg float %1143
  %1145 = tail call float @llvm.fma.f32(float %1121, float %1125, float %1144)
  %1146 = tail call float @llvm.fma.f32(float %1123, float %1125, float %1145)
  %1147 = fadd float %1143, %1146
  %1148 = fsub float %1147, %1143
  %1149 = fsub float %1146, %1148
  %1150 = fadd float %1147, 0x3FE5555540000000
  %1151 = fadd float %1150, 0xBFE5555540000000
  %1152 = fsub float %1147, %1151
  %1153 = fadd float %1149, 0x3E2E720200000000
  %1154 = fadd float %1153, %1152
  %1155 = fadd float %1150, %1154
  %1156 = fsub float %1155, %1150
  %1157 = fsub float %1154, %1156
  %1158 = fmul float %1140, %1155
  %1159 = fneg float %1158
  %1160 = tail call float @llvm.fma.f32(float %1140, float %1155, float %1159)
  %1161 = tail call float @llvm.fma.f32(float %1140, float %1157, float %1160)
  %1162 = tail call float @llvm.fma.f32(float %1142, float %1155, float %1161)
  %1163 = tail call float @llvm.amdgcn.ldexp.f32(float %1115, i32 1)
  %1164 = fadd float %1158, %1162
  %1165 = fsub float %1164, %1158
  %1166 = fsub float %1162, %1165
  %1167 = fadd float %1134, %1164
  %1168 = fsub float %1167, %1134
  %1169 = fsub float %1164, %1168
  %1170 = fadd float %1163, %1166
  %1171 = fadd float %1170, %1169
  %1172 = fadd float %1167, %1171
  %1173 = fsub float %1172, %1167
  %1174 = fsub float %1171, %1173
  %1175 = fadd float %1131, %1172
  %1176 = fsub float %1175, %1131
  %1177 = fsub float %1175, %1176
  %1178 = fsub float %1131, %1177
  %1179 = fsub float %1172, %1176
  %1180 = fadd float %1179, %1178
  %1181 = fadd float %1133, %1174
  %1182 = fsub float %1181, %1133
  %1183 = fsub float %1181, %1182
  %1184 = fsub float %1133, %1183
  %1185 = fsub float %1174, %1182
  %1186 = fadd float %1185, %1184
  %1187 = fadd float %1181, %1180
  %1188 = fadd float %1175, %1187
  %1189 = fsub float %1188, %1175
  %1190 = fsub float %1187, %1189
  %1191 = fadd float %1186, %1190
  %1192 = fadd float %1188, %1191
  %1193 = fsub float %1192, %1188
  %1194 = fsub float %1191, %1193
  %1195 = fmul float %1192, 2.000000e+00
  %1196 = fneg float %1195
  %1197 = tail call float @llvm.fma.f32(float %1192, float 2.000000e+00, float %1196)
  %1198 = fmul float %1192, 0.000000e+00
  %1199 = tail call float @llvm.fma.f32(float %1194, float 2.000000e+00, float %1198)
  %1200 = fadd float %1197, %1199
  %1201 = fadd float %1195, %1200
  %1202 = fsub float %1201, %1195
  %1203 = fsub float %1200, %1202
  %1204 = tail call float @llvm.fabs.f32(float %1195) #3
  %1205 = fcmp oeq float %1204, 0x7FF0000000000000
  %1206 = select i1 %1205, float %1195, float %1201
  %1207 = tail call float @llvm.fabs.f32(float %1206) #3
  %1208 = fcmp oeq float %1207, 0x7FF0000000000000
  %1209 = select i1 %1208, float 0.000000e+00, float %1203
  %1210 = fcmp oeq float %1206, 0x40562E4300000000
  %1211 = select i1 %1210, float 0x3EE0000000000000, float 0.000000e+00
  %1212 = fsub float %1206, %1211
  %1213 = fadd float %1211, %1209
  %1214 = fmul float %1212, 0x3FF7154760000000
  %1215 = tail call float @llvm.rint.f32(float %1214)
  %1216 = fcmp ogt float %1212, 0x40562E4300000000
  %1217 = fcmp olt float %1212, 0xC059D1DA00000000
  %1218 = fneg float %1214
  %1219 = tail call float @llvm.fma.f32(float %1212, float 0x3FF7154760000000, float %1218)
  %1220 = tail call float @llvm.fma.f32(float %1212, float 0x3E54AE0BE0000000, float %1219)
  %1221 = fsub float %1214, %1215
  %1222 = fadd float %1220, %1221
  %1223 = tail call float @llvm.exp2.f32(float %1222)
  %1224 = fptosi float %1215 to i32
  %1225 = tail call float @llvm.amdgcn.ldexp.f32(float %1223, i32 %1224)
  %1226 = select i1 %1217, float 0.000000e+00, float %1225
  %1227 = select i1 %1216, float 0x7FF0000000000000, float %1226
  %1228 = tail call float @llvm.fma.f32(float %1227, float %1213, float %1227)
  %1229 = tail call float @llvm.fabs.f32(float %1227) #3
  %1230 = fcmp oeq float %1229, 0x7FF0000000000000
  %1231 = select i1 %1230, float %1227, float %1228
  %1232 = tail call float @llvm.fabs.f32(float %1231)
  %1233 = fcmp oeq float %1087, 0x7FF0000000000000
  %1234 = fcmp oeq float %1086, 0.000000e+00
  %1235 = select i1 %1233, float 0x7FF0000000000000, float %1232
  %1236 = select i1 %1234, float 0.000000e+00, float %1235
  %1237 = fcmp uno float %1086, 0.000000e+00
  %1238 = select i1 %1237, float 0x7FF8000000000000, float %1236
  %1239 = fadd contract float %943, -1.000000e+00
  %1240 = tail call float @llvm.fabs.f32(float %1239)
  %1241 = tail call float @llvm.amdgcn.frexp.mant.f32(float %1240)
  %1242 = fcmp olt float %1241, 0x3FE5555560000000
  %1243 = zext i1 %1242 to i32
  %1244 = tail call float @llvm.amdgcn.ldexp.f32(float %1241, i32 %1243)
  %1245 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %1240)
  %1246 = sub nsw i32 %1245, %1243
  %1247 = fadd float %1244, -1.000000e+00
  %1248 = fadd float %1244, 1.000000e+00
  %1249 = fadd float %1248, -1.000000e+00
  %1250 = fsub float %1244, %1249
  %1251 = tail call float @llvm.amdgcn.rcp.f32(float %1248)
  %1252 = fmul float %1247, %1251
  %1253 = fmul float %1248, %1252
  %1254 = fneg float %1253
  %1255 = tail call float @llvm.fma.f32(float %1252, float %1248, float %1254)
  %1256 = tail call float @llvm.fma.f32(float %1252, float %1250, float %1255)
  %1257 = fadd float %1253, %1256
  %1258 = fsub float %1257, %1253
  %1259 = fsub float %1256, %1258
  %1260 = fsub float %1247, %1257
  %1261 = fsub float %1247, %1260
  %1262 = fsub float %1261, %1257
  %1263 = fsub float %1262, %1259
  %1264 = fadd float %1260, %1263
  %1265 = fmul float %1251, %1264
  %1266 = fadd float %1252, %1265
  %1267 = fsub float %1266, %1252
  %1268 = fsub float %1265, %1267
  %1269 = fmul float %1266, %1266
  %1270 = fneg float %1269
  %1271 = tail call float @llvm.fma.f32(float %1266, float %1266, float %1270)
  %1272 = fmul float %1268, 2.000000e+00
  %1273 = tail call float @llvm.fma.f32(float %1266, float %1272, float %1271)
  %1274 = fadd float %1269, %1273
  %1275 = fsub float %1274, %1269
  %1276 = fsub float %1273, %1275
  %1277 = tail call float @llvm.fmuladd.f32(float %1274, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %1278 = tail call float @llvm.fmuladd.f32(float %1274, float %1277, float 0x3FD999BDE0000000)
  %1279 = sitofp i32 %1246 to float
  %1280 = fmul float %1279, 0x3FE62E4300000000
  %1281 = fneg float %1280
  %1282 = tail call float @llvm.fma.f32(float %1279, float 0x3FE62E4300000000, float %1281)
  %1283 = tail call float @llvm.fma.f32(float %1279, float 0xBE205C6100000000, float %1282)
  %1284 = fadd float %1280, %1283
  %1285 = fsub float %1284, %1280
  %1286 = fsub float %1283, %1285
  %1287 = tail call float @llvm.amdgcn.ldexp.f32(float %1266, i32 1)
  %1288 = fmul float %1266, %1274
  %1289 = fneg float %1288
  %1290 = tail call float @llvm.fma.f32(float %1274, float %1266, float %1289)
  %1291 = tail call float @llvm.fma.f32(float %1274, float %1268, float %1290)
  %1292 = tail call float @llvm.fma.f32(float %1276, float %1266, float %1291)
  %1293 = fadd float %1288, %1292
  %1294 = fsub float %1293, %1288
  %1295 = fsub float %1292, %1294
  %1296 = fmul float %1274, %1278
  %1297 = fneg float %1296
  %1298 = tail call float @llvm.fma.f32(float %1274, float %1278, float %1297)
  %1299 = tail call float @llvm.fma.f32(float %1276, float %1278, float %1298)
  %1300 = fadd float %1296, %1299
  %1301 = fsub float %1300, %1296
  %1302 = fsub float %1299, %1301
  %1303 = fadd float %1300, 0x3FE5555540000000
  %1304 = fadd float %1303, 0xBFE5555540000000
  %1305 = fsub float %1300, %1304
  %1306 = fadd float %1302, 0x3E2E720200000000
  %1307 = fadd float %1306, %1305
  %1308 = fadd float %1303, %1307
  %1309 = fsub float %1308, %1303
  %1310 = fsub float %1307, %1309
  %1311 = fmul float %1293, %1308
  %1312 = fneg float %1311
  %1313 = tail call float @llvm.fma.f32(float %1293, float %1308, float %1312)
  %1314 = tail call float @llvm.fma.f32(float %1293, float %1310, float %1313)
  %1315 = tail call float @llvm.fma.f32(float %1295, float %1308, float %1314)
  %1316 = tail call float @llvm.amdgcn.ldexp.f32(float %1268, i32 1)
  %1317 = fadd float %1311, %1315
  %1318 = fsub float %1317, %1311
  %1319 = fsub float %1315, %1318
  %1320 = fadd float %1287, %1317
  %1321 = fsub float %1320, %1287
  %1322 = fsub float %1317, %1321
  %1323 = fadd float %1316, %1319
  %1324 = fadd float %1323, %1322
  %1325 = fadd float %1320, %1324
  %1326 = fsub float %1325, %1320
  %1327 = fsub float %1324, %1326
  %1328 = fadd float %1284, %1325
  %1329 = fsub float %1328, %1284
  %1330 = fsub float %1328, %1329
  %1331 = fsub float %1284, %1330
  %1332 = fsub float %1325, %1329
  %1333 = fadd float %1332, %1331
  %1334 = fadd float %1286, %1327
  %1335 = fsub float %1334, %1286
  %1336 = fsub float %1334, %1335
  %1337 = fsub float %1286, %1336
  %1338 = fsub float %1327, %1335
  %1339 = fadd float %1338, %1337
  %1340 = fadd float %1334, %1333
  %1341 = fadd float %1328, %1340
  %1342 = fsub float %1341, %1328
  %1343 = fsub float %1340, %1342
  %1344 = fadd float %1339, %1343
  %1345 = fadd float %1341, %1344
  %1346 = fsub float %1345, %1341
  %1347 = fsub float %1344, %1346
  %1348 = fmul float %1345, 2.000000e+00
  %1349 = fneg float %1348
  %1350 = tail call float @llvm.fma.f32(float %1345, float 2.000000e+00, float %1349)
  %1351 = fmul float %1345, 0.000000e+00
  %1352 = tail call float @llvm.fma.f32(float %1347, float 2.000000e+00, float %1351)
  %1353 = fadd float %1350, %1352
  %1354 = fadd float %1348, %1353
  %1355 = fsub float %1354, %1348
  %1356 = fsub float %1353, %1355
  %1357 = tail call float @llvm.fabs.f32(float %1348) #3
  %1358 = fcmp oeq float %1357, 0x7FF0000000000000
  %1359 = select i1 %1358, float %1348, float %1354
  %1360 = tail call float @llvm.fabs.f32(float %1359) #3
  %1361 = fcmp oeq float %1360, 0x7FF0000000000000
  %1362 = select i1 %1361, float 0.000000e+00, float %1356
  %1363 = fcmp oeq float %1359, 0x40562E4300000000
  %1364 = select i1 %1363, float 0x3EE0000000000000, float 0.000000e+00
  %1365 = fsub float %1359, %1364
  %1366 = fadd float %1364, %1362
  %1367 = fmul float %1365, 0x3FF7154760000000
  %1368 = tail call float @llvm.rint.f32(float %1367)
  %1369 = fcmp ogt float %1365, 0x40562E4300000000
  %1370 = fcmp olt float %1365, 0xC059D1DA00000000
  %1371 = fneg float %1367
  %1372 = tail call float @llvm.fma.f32(float %1365, float 0x3FF7154760000000, float %1371)
  %1373 = tail call float @llvm.fma.f32(float %1365, float 0x3E54AE0BE0000000, float %1372)
  %1374 = fsub float %1367, %1368
  %1375 = fadd float %1373, %1374
  %1376 = tail call float @llvm.exp2.f32(float %1375)
  %1377 = fptosi float %1368 to i32
  %1378 = tail call float @llvm.amdgcn.ldexp.f32(float %1376, i32 %1377)
  %1379 = select i1 %1370, float 0.000000e+00, float %1378
  %1380 = select i1 %1369, float 0x7FF0000000000000, float %1379
  %1381 = tail call float @llvm.fma.f32(float %1380, float %1366, float %1380)
  %1382 = tail call float @llvm.fabs.f32(float %1380) #3
  %1383 = fcmp oeq float %1382, 0x7FF0000000000000
  %1384 = select i1 %1383, float %1380, float %1381
  %1385 = tail call float @llvm.fabs.f32(float %1384)
  %1386 = fcmp oeq float %1240, 0x7FF0000000000000
  %1387 = fcmp oeq float %1239, 0.000000e+00
  %1388 = select i1 %1386, float 0x7FF0000000000000, float %1385
  %1389 = select i1 %1387, float 0.000000e+00, float %1388
  %1390 = fcmp uno float %1239, 0.000000e+00
  %1391 = select i1 %1390, float 0x7FF8000000000000, float %1389
  %1392 = fadd contract float %1391, %1238
  %1393 = fadd contract float %1392, 0.000000e+00
  br label %1394

1394:                                             ; preds = %1681, %1061
  %1395 = phi i1 [ true, %1061 ], [ false, %1681 ]
  %1396 = phi i32 [ 0, %1061 ], [ 1, %1681 ]
  %1397 = phi float [ %1393, %1061 ], [ %1862, %1681 ]
  %1398 = zext i32 %1396 to i64
  %1399 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1398
  %1400 = load float, float addrspace(1)* %1399, align 4, !tbaa !4
  %1401 = fadd contract float %1400, -1.000000e+00
  %1402 = fmul contract float %1401, 2.500000e-01
  %1403 = fadd contract float %1402, 1.000000e+00
  %1404 = add nuw nsw i32 %1396, 1
  %1405 = zext i32 %1404 to i64
  %1406 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1405
  %1407 = load float, float addrspace(1)* %1406, align 4, !tbaa !4
  %1408 = fadd contract float %1407, -1.000000e+00
  %1409 = fmul contract float %1408, 2.500000e-01
  %1410 = fadd contract float %1409, 1.000000e+00
  %1411 = fadd contract float %1403, -1.000000e+00
  %1412 = tail call float @llvm.fabs.f32(float %1411)
  %1413 = tail call float @llvm.amdgcn.frexp.mant.f32(float %1412)
  %1414 = fcmp olt float %1413, 0x3FE5555560000000
  %1415 = zext i1 %1414 to i32
  %1416 = tail call float @llvm.amdgcn.ldexp.f32(float %1413, i32 %1415)
  %1417 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %1412)
  %1418 = sub nsw i32 %1417, %1415
  %1419 = fadd float %1416, -1.000000e+00
  %1420 = fadd float %1416, 1.000000e+00
  %1421 = fadd float %1420, -1.000000e+00
  %1422 = fsub float %1416, %1421
  %1423 = tail call float @llvm.amdgcn.rcp.f32(float %1420)
  %1424 = fmul float %1419, %1423
  %1425 = fmul float %1420, %1424
  %1426 = fneg float %1425
  %1427 = tail call float @llvm.fma.f32(float %1424, float %1420, float %1426)
  %1428 = tail call float @llvm.fma.f32(float %1424, float %1422, float %1427)
  %1429 = fadd float %1425, %1428
  %1430 = fsub float %1429, %1425
  %1431 = fsub float %1428, %1430
  %1432 = fsub float %1419, %1429
  %1433 = fsub float %1419, %1432
  %1434 = fsub float %1433, %1429
  %1435 = fsub float %1434, %1431
  %1436 = fadd float %1432, %1435
  %1437 = fmul float %1423, %1436
  %1438 = fadd float %1424, %1437
  %1439 = fsub float %1438, %1424
  %1440 = fsub float %1437, %1439
  %1441 = fmul float %1438, %1438
  %1442 = fneg float %1441
  %1443 = tail call float @llvm.fma.f32(float %1438, float %1438, float %1442)
  %1444 = fmul float %1440, 2.000000e+00
  %1445 = tail call float @llvm.fma.f32(float %1438, float %1444, float %1443)
  %1446 = fadd float %1441, %1445
  %1447 = fsub float %1446, %1441
  %1448 = fsub float %1445, %1447
  %1449 = tail call float @llvm.fmuladd.f32(float %1446, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %1450 = tail call float @llvm.fmuladd.f32(float %1446, float %1449, float 0x3FD999BDE0000000)
  %1451 = sitofp i32 %1418 to float
  %1452 = fmul float %1451, 0x3FE62E4300000000
  %1453 = fneg float %1452
  %1454 = tail call float @llvm.fma.f32(float %1451, float 0x3FE62E4300000000, float %1453)
  %1455 = tail call float @llvm.fma.f32(float %1451, float 0xBE205C6100000000, float %1454)
  %1456 = fadd float %1452, %1455
  %1457 = fsub float %1456, %1452
  %1458 = fsub float %1455, %1457
  %1459 = tail call float @llvm.amdgcn.ldexp.f32(float %1438, i32 1)
  %1460 = fmul float %1438, %1446
  %1461 = fneg float %1460
  %1462 = tail call float @llvm.fma.f32(float %1446, float %1438, float %1461)
  %1463 = tail call float @llvm.fma.f32(float %1446, float %1440, float %1462)
  %1464 = tail call float @llvm.fma.f32(float %1448, float %1438, float %1463)
  %1465 = fadd float %1460, %1464
  %1466 = fsub float %1465, %1460
  %1467 = fsub float %1464, %1466
  %1468 = fmul float %1446, %1450
  %1469 = fneg float %1468
  %1470 = tail call float @llvm.fma.f32(float %1446, float %1450, float %1469)
  %1471 = tail call float @llvm.fma.f32(float %1448, float %1450, float %1470)
  %1472 = fadd float %1468, %1471
  %1473 = fsub float %1472, %1468
  %1474 = fsub float %1471, %1473
  %1475 = fadd float %1472, 0x3FE5555540000000
  %1476 = fadd float %1475, 0xBFE5555540000000
  %1477 = fsub float %1472, %1476
  %1478 = fadd float %1474, 0x3E2E720200000000
  %1479 = fadd float %1478, %1477
  %1480 = fadd float %1475, %1479
  %1481 = fsub float %1480, %1475
  %1482 = fsub float %1479, %1481
  %1483 = fmul float %1465, %1480
  %1484 = fneg float %1483
  %1485 = tail call float @llvm.fma.f32(float %1465, float %1480, float %1484)
  %1486 = tail call float @llvm.fma.f32(float %1465, float %1482, float %1485)
  %1487 = tail call float @llvm.fma.f32(float %1467, float %1480, float %1486)
  %1488 = tail call float @llvm.amdgcn.ldexp.f32(float %1440, i32 1)
  %1489 = fadd float %1483, %1487
  %1490 = fsub float %1489, %1483
  %1491 = fsub float %1487, %1490
  %1492 = fadd float %1459, %1489
  %1493 = fsub float %1492, %1459
  %1494 = fsub float %1489, %1493
  %1495 = fadd float %1488, %1491
  %1496 = fadd float %1495, %1494
  %1497 = fadd float %1492, %1496
  %1498 = fsub float %1497, %1492
  %1499 = fsub float %1496, %1498
  %1500 = fadd float %1456, %1497
  %1501 = fsub float %1500, %1456
  %1502 = fsub float %1500, %1501
  %1503 = fsub float %1456, %1502
  %1504 = fsub float %1497, %1501
  %1505 = fadd float %1504, %1503
  %1506 = fadd float %1458, %1499
  %1507 = fsub float %1506, %1458
  %1508 = fsub float %1506, %1507
  %1509 = fsub float %1458, %1508
  %1510 = fsub float %1499, %1507
  %1511 = fadd float %1510, %1509
  %1512 = fadd float %1506, %1505
  %1513 = fadd float %1500, %1512
  %1514 = fsub float %1513, %1500
  %1515 = fsub float %1512, %1514
  %1516 = fadd float %1511, %1515
  %1517 = fadd float %1513, %1516
  %1518 = fsub float %1517, %1513
  %1519 = fsub float %1516, %1518
  %1520 = fmul float %1517, 2.000000e+00
  %1521 = fneg float %1520
  %1522 = tail call float @llvm.fma.f32(float %1517, float 2.000000e+00, float %1521)
  %1523 = fmul float %1517, 0.000000e+00
  %1524 = tail call float @llvm.fma.f32(float %1519, float 2.000000e+00, float %1523)
  %1525 = fadd float %1522, %1524
  %1526 = fadd float %1520, %1525
  %1527 = fsub float %1526, %1520
  %1528 = fsub float %1525, %1527
  %1529 = tail call float @llvm.fabs.f32(float %1520) #3
  %1530 = fcmp oeq float %1529, 0x7FF0000000000000
  %1531 = select i1 %1530, float %1520, float %1526
  %1532 = tail call float @llvm.fabs.f32(float %1531) #3
  %1533 = fcmp oeq float %1532, 0x7FF0000000000000
  %1534 = select i1 %1533, float 0.000000e+00, float %1528
  %1535 = fcmp oeq float %1531, 0x40562E4300000000
  %1536 = select i1 %1535, float 0x3EE0000000000000, float 0.000000e+00
  %1537 = fsub float %1531, %1536
  %1538 = fadd float %1536, %1534
  %1539 = fmul float %1537, 0x3FF7154760000000
  %1540 = tail call float @llvm.rint.f32(float %1539)
  %1541 = fcmp ogt float %1537, 0x40562E4300000000
  %1542 = fcmp olt float %1537, 0xC059D1DA00000000
  %1543 = fneg float %1539
  %1544 = tail call float @llvm.fma.f32(float %1537, float 0x3FF7154760000000, float %1543)
  %1545 = tail call float @llvm.fma.f32(float %1537, float 0x3E54AE0BE0000000, float %1544)
  %1546 = fsub float %1539, %1540
  %1547 = fadd float %1545, %1546
  %1548 = tail call float @llvm.exp2.f32(float %1547)
  %1549 = fptosi float %1540 to i32
  %1550 = tail call float @llvm.amdgcn.ldexp.f32(float %1548, i32 %1549)
  %1551 = select i1 %1542, float 0.000000e+00, float %1550
  %1552 = select i1 %1541, float 0x7FF0000000000000, float %1551
  %1553 = tail call float @llvm.fma.f32(float %1552, float %1538, float %1552)
  %1554 = tail call float @llvm.fabs.f32(float %1552) #3
  %1555 = fcmp oeq float %1554, 0x7FF0000000000000
  %1556 = select i1 %1555, float %1552, float %1553
  %1557 = tail call float @llvm.fabs.f32(float %1556)
  %1558 = fcmp oeq float %1412, 0x7FF0000000000000
  %1559 = fcmp oeq float %1411, 0.000000e+00
  %1560 = select i1 %1558, float 0x7FF0000000000000, float %1557
  %1561 = select i1 %1559, float 0.000000e+00, float %1560
  %1562 = fcmp uno float %1411, 0.000000e+00
  %1563 = select i1 %1562, float 0x7FF8000000000000, float %1561
  %1564 = fmul contract float %1410, 0x400921CAC0000000
  %1565 = tail call float @llvm.fabs.f32(float %1564)
  %1566 = fcmp olt float %1565, 1.310720e+05
  br i1 %1566, label %1567, label %1575

1567:                                             ; preds = %1394
  %1568 = fmul float %1565, 0x3FE45F3060000000
  %1569 = tail call float @llvm.rint.f32(float %1568)
  %1570 = tail call float @llvm.fma.f32(float %1569, float 0xBFF921FB40000000, float %1565)
  %1571 = tail call float @llvm.fma.f32(float %1569, float 0xBE74442D00000000, float %1570)
  %1572 = tail call float @llvm.fma.f32(float %1569, float 0xBCF8469880000000, float %1571)
  %1573 = fptosi float %1569 to i32
  %1574 = bitcast float %1565 to i32
  br label %1681

1575:                                             ; preds = %1394
  %1576 = bitcast float %1565 to i32
  %1577 = lshr i32 %1576, 23
  %1578 = and i32 %1576, 8388607
  %1579 = or i32 %1578, 8388608
  %1580 = zext i32 %1579 to i64
  %1581 = mul nuw nsw i64 %1580, 4266746795
  %1582 = trunc i64 %1581 to i32
  %1583 = lshr i64 %1581, 32
  %1584 = mul nuw nsw i64 %1580, 1011060801
  %1585 = add nuw nsw i64 %1583, %1584
  %1586 = trunc i64 %1585 to i32
  %1587 = lshr i64 %1585, 32
  %1588 = mul nuw nsw i64 %1580, 3680671129
  %1589 = add nuw nsw i64 %1587, %1588
  %1590 = trunc i64 %1589 to i32
  %1591 = lshr i64 %1589, 32
  %1592 = mul nuw nsw i64 %1580, 4113882560
  %1593 = add nuw nsw i64 %1591, %1592
  %1594 = trunc i64 %1593 to i32
  %1595 = lshr i64 %1593, 32
  %1596 = mul nuw nsw i64 %1580, 4230436817
  %1597 = add nuw nsw i64 %1595, %1596
  %1598 = trunc i64 %1597 to i32
  %1599 = lshr i64 %1597, 32
  %1600 = mul nuw nsw i64 %1580, 1313084713
  %1601 = add nuw nsw i64 %1599, %1600
  %1602 = trunc i64 %1601 to i32
  %1603 = lshr i64 %1601, 32
  %1604 = mul nuw nsw i64 %1580, 2734261102
  %1605 = add nuw nsw i64 %1603, %1604
  %1606 = trunc i64 %1605 to i32
  %1607 = lshr i64 %1605, 32
  %1608 = trunc i64 %1607 to i32
  %1609 = add nsw i32 %1577, -120
  %1610 = icmp ugt i32 %1609, 63
  %1611 = select i1 %1610, i32 %1602, i32 %1608
  %1612 = select i1 %1610, i32 %1598, i32 %1606
  %1613 = select i1 %1610, i32 %1594, i32 %1602
  %1614 = select i1 %1610, i32 %1590, i32 %1598
  %1615 = select i1 %1610, i32 %1586, i32 %1594
  %1616 = select i1 %1610, i32 %1582, i32 %1590
  %1617 = select i1 %1610, i32 -64, i32 0
  %1618 = add nsw i32 %1617, %1609
  %1619 = icmp ugt i32 %1618, 31
  %1620 = select i1 %1619, i32 %1612, i32 %1611
  %1621 = select i1 %1619, i32 %1613, i32 %1612
  %1622 = select i1 %1619, i32 %1614, i32 %1613
  %1623 = select i1 %1619, i32 %1615, i32 %1614
  %1624 = select i1 %1619, i32 %1616, i32 %1615
  %1625 = select i1 %1619, i32 -32, i32 0
  %1626 = add nsw i32 %1625, %1618
  %1627 = icmp ugt i32 %1626, 31
  %1628 = select i1 %1627, i32 %1621, i32 %1620
  %1629 = select i1 %1627, i32 %1622, i32 %1621
  %1630 = select i1 %1627, i32 %1623, i32 %1622
  %1631 = select i1 %1627, i32 %1624, i32 %1623
  %1632 = select i1 %1627, i32 -32, i32 0
  %1633 = add nsw i32 %1632, %1626
  %1634 = icmp eq i32 %1633, 0
  %1635 = sub nsw i32 32, %1633
  %1636 = tail call i32 @llvm.fshr.i32(i32 %1628, i32 %1629, i32 %1635)
  %1637 = tail call i32 @llvm.fshr.i32(i32 %1629, i32 %1630, i32 %1635)
  %1638 = tail call i32 @llvm.fshr.i32(i32 %1630, i32 %1631, i32 %1635)
  %1639 = select i1 %1634, i32 %1628, i32 %1636
  %1640 = select i1 %1634, i32 %1629, i32 %1637
  %1641 = select i1 %1634, i32 %1630, i32 %1638
  %1642 = lshr i32 %1639, 29
  %1643 = tail call i32 @llvm.fshl.i32(i32 %1639, i32 %1640, i32 2)
  %1644 = tail call i32 @llvm.fshl.i32(i32 %1640, i32 %1641, i32 2)
  %1645 = tail call i32 @llvm.fshl.i32(i32 %1641, i32 %1631, i32 2)
  %1646 = and i32 %1642, 1
  %1647 = sub nsw i32 0, %1646
  %1648 = shl i32 %1642, 31
  %1649 = xor i32 %1643, %1647
  %1650 = xor i32 %1644, %1647
  %1651 = xor i32 %1645, %1647
  %1652 = tail call i32 @llvm.ctlz.i32(i32 %1649, i1 false), !range !8
  %1653 = sub nsw i32 31, %1652
  %1654 = tail call i32 @llvm.fshr.i32(i32 %1649, i32 %1650, i32 %1653)
  %1655 = tail call i32 @llvm.fshr.i32(i32 %1650, i32 %1651, i32 %1653)
  %1656 = shl nuw nsw i32 %1652, 23
  %1657 = sub nuw nsw i32 1056964608, %1656
  %1658 = lshr i32 %1654, 9
  %1659 = or i32 %1658, %1657
  %1660 = or i32 %1659, %1648
  %1661 = bitcast i32 %1660 to float
  %1662 = tail call i32 @llvm.fshl.i32(i32 %1654, i32 %1655, i32 23)
  %1663 = tail call i32 @llvm.ctlz.i32(i32 %1662, i1 false), !range !8
  %1664 = fmul float %1661, 0x3FF921FB40000000
  %1665 = add nuw nsw i32 %1663, %1652
  %1666 = shl nuw nsw i32 %1665, 23
  %1667 = sub nuw nsw i32 855638016, %1666
  %1668 = sub nsw i32 31, %1663
  %1669 = tail call i32 @llvm.fshr.i32(i32 %1662, i32 %1655, i32 %1668)
  %1670 = lshr i32 %1669, 9
  %1671 = or i32 %1667, %1670
  %1672 = or i32 %1671, %1648
  %1673 = bitcast i32 %1672 to float
  %1674 = fneg float %1664
  %1675 = tail call float @llvm.fma.f32(float %1661, float 0x3FF921FB40000000, float %1674)
  %1676 = tail call float @llvm.fma.f32(float %1661, float 0x3E74442D00000000, float %1675)
  %1677 = tail call float @llvm.fma.f32(float %1673, float 0x3FF921FB40000000, float %1676)
  %1678 = fadd float %1664, %1677
  %1679 = lshr i32 %1639, 30
  %1680 = add nuw nsw i32 %1646, %1679
  br label %1681

1681:                                             ; preds = %1575, %1567
  %1682 = phi i32 [ %1574, %1567 ], [ %1576, %1575 ]
  %1683 = phi float [ %1572, %1567 ], [ %1678, %1575 ]
  %1684 = phi i32 [ %1573, %1567 ], [ %1680, %1575 ]
  %1685 = fmul float %1683, %1683
  %1686 = tail call float @llvm.fmuladd.f32(float %1685, float 0xBF29833040000000, float 0x3F81103880000000)
  %1687 = tail call float @llvm.fmuladd.f32(float %1685, float %1686, float 0xBFC55553A0000000)
  %1688 = fmul float %1685, %1687
  %1689 = tail call float @llvm.fmuladd.f32(float %1683, float %1688, float %1683)
  %1690 = tail call float @llvm.fmuladd.f32(float %1685, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %1691 = tail call float @llvm.fmuladd.f32(float %1685, float %1690, float 0x3FA5557EE0000000)
  %1692 = tail call float @llvm.fmuladd.f32(float %1685, float %1691, float 0xBFE0000080000000)
  %1693 = tail call float @llvm.fmuladd.f32(float %1685, float %1692, float 1.000000e+00)
  %1694 = and i32 %1684, 1
  %1695 = icmp eq i32 %1694, 0
  %1696 = select i1 %1695, float %1689, float %1693
  %1697 = bitcast float %1696 to i32
  %1698 = shl i32 %1684, 30
  %1699 = and i32 %1698, -2147483648
  %1700 = bitcast float %1564 to i32
  %1701 = xor i32 %1682, %1700
  %1702 = xor i32 %1701, %1699
  %1703 = xor i32 %1702, %1697
  %1704 = bitcast i32 %1703 to float
  %1705 = tail call i1 @llvm.amdgcn.class.f32(float %1565, i32 504)
  %1706 = select i1 %1705, float %1704, float 0x7FF8000000000000
  %1707 = tail call float @llvm.fabs.f32(float %1706)
  %1708 = tail call float @llvm.amdgcn.frexp.mant.f32(float %1707)
  %1709 = fcmp olt float %1708, 0x3FE5555560000000
  %1710 = zext i1 %1709 to i32
  %1711 = tail call float @llvm.amdgcn.ldexp.f32(float %1708, i32 %1710)
  %1712 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %1707)
  %1713 = sub nsw i32 %1712, %1710
  %1714 = fadd float %1711, -1.000000e+00
  %1715 = fadd float %1711, 1.000000e+00
  %1716 = fadd float %1715, -1.000000e+00
  %1717 = fsub float %1711, %1716
  %1718 = tail call float @llvm.amdgcn.rcp.f32(float %1715)
  %1719 = fmul float %1714, %1718
  %1720 = fmul float %1715, %1719
  %1721 = fneg float %1720
  %1722 = tail call float @llvm.fma.f32(float %1719, float %1715, float %1721)
  %1723 = tail call float @llvm.fma.f32(float %1719, float %1717, float %1722)
  %1724 = fadd float %1720, %1723
  %1725 = fsub float %1724, %1720
  %1726 = fsub float %1723, %1725
  %1727 = fsub float %1714, %1724
  %1728 = fsub float %1714, %1727
  %1729 = fsub float %1728, %1724
  %1730 = fsub float %1729, %1726
  %1731 = fadd float %1727, %1730
  %1732 = fmul float %1718, %1731
  %1733 = fadd float %1719, %1732
  %1734 = fsub float %1733, %1719
  %1735 = fsub float %1732, %1734
  %1736 = fmul float %1733, %1733
  %1737 = fneg float %1736
  %1738 = tail call float @llvm.fma.f32(float %1733, float %1733, float %1737)
  %1739 = fmul float %1735, 2.000000e+00
  %1740 = tail call float @llvm.fma.f32(float %1733, float %1739, float %1738)
  %1741 = fadd float %1736, %1740
  %1742 = fsub float %1741, %1736
  %1743 = fsub float %1740, %1742
  %1744 = tail call float @llvm.fmuladd.f32(float %1741, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %1745 = tail call float @llvm.fmuladd.f32(float %1741, float %1744, float 0x3FD999BDE0000000)
  %1746 = sitofp i32 %1713 to float
  %1747 = fmul float %1746, 0x3FE62E4300000000
  %1748 = fneg float %1747
  %1749 = tail call float @llvm.fma.f32(float %1746, float 0x3FE62E4300000000, float %1748)
  %1750 = tail call float @llvm.fma.f32(float %1746, float 0xBE205C6100000000, float %1749)
  %1751 = fadd float %1747, %1750
  %1752 = fsub float %1751, %1747
  %1753 = fsub float %1750, %1752
  %1754 = tail call float @llvm.amdgcn.ldexp.f32(float %1733, i32 1)
  %1755 = fmul float %1733, %1741
  %1756 = fneg float %1755
  %1757 = tail call float @llvm.fma.f32(float %1741, float %1733, float %1756)
  %1758 = tail call float @llvm.fma.f32(float %1741, float %1735, float %1757)
  %1759 = tail call float @llvm.fma.f32(float %1743, float %1733, float %1758)
  %1760 = fadd float %1755, %1759
  %1761 = fsub float %1760, %1755
  %1762 = fsub float %1759, %1761
  %1763 = fmul float %1741, %1745
  %1764 = fneg float %1763
  %1765 = tail call float @llvm.fma.f32(float %1741, float %1745, float %1764)
  %1766 = tail call float @llvm.fma.f32(float %1743, float %1745, float %1765)
  %1767 = fadd float %1763, %1766
  %1768 = fsub float %1767, %1763
  %1769 = fsub float %1766, %1768
  %1770 = fadd float %1767, 0x3FE5555540000000
  %1771 = fadd float %1770, 0xBFE5555540000000
  %1772 = fsub float %1767, %1771
  %1773 = fadd float %1769, 0x3E2E720200000000
  %1774 = fadd float %1773, %1772
  %1775 = fadd float %1770, %1774
  %1776 = fsub float %1775, %1770
  %1777 = fsub float %1774, %1776
  %1778 = fmul float %1760, %1775
  %1779 = fneg float %1778
  %1780 = tail call float @llvm.fma.f32(float %1760, float %1775, float %1779)
  %1781 = tail call float @llvm.fma.f32(float %1760, float %1777, float %1780)
  %1782 = tail call float @llvm.fma.f32(float %1762, float %1775, float %1781)
  %1783 = tail call float @llvm.amdgcn.ldexp.f32(float %1735, i32 1)
  %1784 = fadd float %1778, %1782
  %1785 = fsub float %1784, %1778
  %1786 = fsub float %1782, %1785
  %1787 = fadd float %1754, %1784
  %1788 = fsub float %1787, %1754
  %1789 = fsub float %1784, %1788
  %1790 = fadd float %1783, %1786
  %1791 = fadd float %1790, %1789
  %1792 = fadd float %1787, %1791
  %1793 = fsub float %1792, %1787
  %1794 = fsub float %1791, %1793
  %1795 = fadd float %1751, %1792
  %1796 = fsub float %1795, %1751
  %1797 = fsub float %1795, %1796
  %1798 = fsub float %1751, %1797
  %1799 = fsub float %1792, %1796
  %1800 = fadd float %1799, %1798
  %1801 = fadd float %1753, %1794
  %1802 = fsub float %1801, %1753
  %1803 = fsub float %1801, %1802
  %1804 = fsub float %1753, %1803
  %1805 = fsub float %1794, %1802
  %1806 = fadd float %1805, %1804
  %1807 = fadd float %1801, %1800
  %1808 = fadd float %1795, %1807
  %1809 = fsub float %1808, %1795
  %1810 = fsub float %1807, %1809
  %1811 = fadd float %1806, %1810
  %1812 = fadd float %1808, %1811
  %1813 = fsub float %1812, %1808
  %1814 = fsub float %1811, %1813
  %1815 = fmul float %1812, 2.000000e+00
  %1816 = fneg float %1815
  %1817 = tail call float @llvm.fma.f32(float %1812, float 2.000000e+00, float %1816)
  %1818 = fmul float %1812, 0.000000e+00
  %1819 = tail call float @llvm.fma.f32(float %1814, float 2.000000e+00, float %1818)
  %1820 = fadd float %1817, %1819
  %1821 = fadd float %1815, %1820
  %1822 = fsub float %1821, %1815
  %1823 = fsub float %1820, %1822
  %1824 = tail call float @llvm.fabs.f32(float %1815) #3
  %1825 = fcmp oeq float %1824, 0x7FF0000000000000
  %1826 = select i1 %1825, float %1815, float %1821
  %1827 = tail call float @llvm.fabs.f32(float %1826) #3
  %1828 = fcmp oeq float %1827, 0x7FF0000000000000
  %1829 = select i1 %1828, float 0.000000e+00, float %1823
  %1830 = fcmp oeq float %1826, 0x40562E4300000000
  %1831 = select i1 %1830, float 0x3EE0000000000000, float 0.000000e+00
  %1832 = fsub float %1826, %1831
  %1833 = fadd float %1831, %1829
  %1834 = fmul float %1832, 0x3FF7154760000000
  %1835 = tail call float @llvm.rint.f32(float %1834)
  %1836 = fcmp ogt float %1832, 0x40562E4300000000
  %1837 = fcmp olt float %1832, 0xC059D1DA00000000
  %1838 = fneg float %1834
  %1839 = tail call float @llvm.fma.f32(float %1832, float 0x3FF7154760000000, float %1838)
  %1840 = tail call float @llvm.fma.f32(float %1832, float 0x3E54AE0BE0000000, float %1839)
  %1841 = fsub float %1834, %1835
  %1842 = fadd float %1840, %1841
  %1843 = tail call float @llvm.exp2.f32(float %1842)
  %1844 = fptosi float %1835 to i32
  %1845 = tail call float @llvm.amdgcn.ldexp.f32(float %1843, i32 %1844)
  %1846 = select i1 %1837, float 0.000000e+00, float %1845
  %1847 = select i1 %1836, float 0x7FF0000000000000, float %1846
  %1848 = tail call float @llvm.fma.f32(float %1847, float %1833, float %1847)
  %1849 = tail call float @llvm.fabs.f32(float %1847) #3
  %1850 = fcmp oeq float %1849, 0x7FF0000000000000
  %1851 = select i1 %1850, float %1847, float %1848
  %1852 = tail call float @llvm.fabs.f32(float %1851)
  %1853 = fcmp oeq float %1707, 0x7FF0000000000000
  %1854 = fcmp oeq float %1706, 0.000000e+00
  %1855 = fcmp uno float %1706, 0.000000e+00
  %1856 = fmul contract float %1852, 1.000000e+01
  %1857 = fadd contract float %1856, 1.000000e+00
  %1858 = select i1 %1853, float 0x7FF0000000000000, float %1857
  %1859 = select i1 %1854, float 1.000000e+00, float %1858
  %1860 = select i1 %1855, float 0x7FF8000000000000, float %1859
  %1861 = fmul contract float %1563, %1860
  %1862 = fadd contract float %1397, %1861
  br i1 %1395, label %1394, label %1863, !llvm.loop !9

1863:                                             ; preds = %1681
  %1864 = fcmp contract olt float %934, %1862
  br i1 %1864, label %1865, label %1867

1865:                                             ; preds = %1863
  store float %4, float addrspace(1)* %0, align 4, !tbaa !4
  %1866 = getelementptr inbounds float, float addrspace(1)* %0, i64 1
  store float %7, float addrspace(1)* %1866, align 4, !tbaa !4
  store float %10, float addrspace(1)* %3, align 4, !tbaa !4
  br label %1867

1867:                                             ; preds = %1865, %1863
  %1868 = getelementptr inbounds float, float addrspace(1)* %1, i64 3
  %1869 = load float, float addrspace(1)* %1868, align 4, !tbaa !4
  %1870 = insertelement <3 x float> poison, float %1869, i64 0
  %1871 = getelementptr inbounds float, float addrspace(1)* %1, i64 4
  %1872 = load float, float addrspace(1)* %1871, align 4, !tbaa !4
  %1873 = insertelement <3 x float> %1870, float %1872, i64 1
  %1874 = getelementptr inbounds float, float addrspace(1)* %1, i64 5
  %1875 = load float, float addrspace(1)* %1874, align 4, !tbaa !4
  %1876 = insertelement <3 x float> %1873, float %1875, i64 2
  %1877 = fadd contract float %1869, -1.000000e+00
  %1878 = fmul contract float %1877, 2.500000e-01
  %1879 = fadd contract float %1878, 1.000000e+00
  %1880 = fadd contract float %1875, -1.000000e+00
  %1881 = fmul contract float %1880, 2.500000e-01
  %1882 = fadd contract float %1881, 1.000000e+00
  %1883 = fmul contract float %1879, 0x400921CAC0000000
  %1884 = tail call float @llvm.fabs.f32(float %1883)
  %1885 = fcmp olt float %1884, 1.310720e+05
  br i1 %1885, label %1992, label %1886

1886:                                             ; preds = %1867
  %1887 = bitcast float %1884 to i32
  %1888 = lshr i32 %1887, 23
  %1889 = and i32 %1887, 8388607
  %1890 = or i32 %1889, 8388608
  %1891 = zext i32 %1890 to i64
  %1892 = mul nuw nsw i64 %1891, 4266746795
  %1893 = trunc i64 %1892 to i32
  %1894 = lshr i64 %1892, 32
  %1895 = mul nuw nsw i64 %1891, 1011060801
  %1896 = add nuw nsw i64 %1894, %1895
  %1897 = trunc i64 %1896 to i32
  %1898 = lshr i64 %1896, 32
  %1899 = mul nuw nsw i64 %1891, 3680671129
  %1900 = add nuw nsw i64 %1898, %1899
  %1901 = trunc i64 %1900 to i32
  %1902 = lshr i64 %1900, 32
  %1903 = mul nuw nsw i64 %1891, 4113882560
  %1904 = add nuw nsw i64 %1902, %1903
  %1905 = trunc i64 %1904 to i32
  %1906 = lshr i64 %1904, 32
  %1907 = mul nuw nsw i64 %1891, 4230436817
  %1908 = add nuw nsw i64 %1906, %1907
  %1909 = trunc i64 %1908 to i32
  %1910 = lshr i64 %1908, 32
  %1911 = mul nuw nsw i64 %1891, 1313084713
  %1912 = add nuw nsw i64 %1910, %1911
  %1913 = trunc i64 %1912 to i32
  %1914 = lshr i64 %1912, 32
  %1915 = mul nuw nsw i64 %1891, 2734261102
  %1916 = add nuw nsw i64 %1914, %1915
  %1917 = trunc i64 %1916 to i32
  %1918 = lshr i64 %1916, 32
  %1919 = trunc i64 %1918 to i32
  %1920 = add nsw i32 %1888, -120
  %1921 = icmp ugt i32 %1920, 63
  %1922 = select i1 %1921, i32 %1913, i32 %1919
  %1923 = select i1 %1921, i32 %1909, i32 %1917
  %1924 = select i1 %1921, i32 %1905, i32 %1913
  %1925 = select i1 %1921, i32 %1901, i32 %1909
  %1926 = select i1 %1921, i32 %1897, i32 %1905
  %1927 = select i1 %1921, i32 %1893, i32 %1901
  %1928 = select i1 %1921, i32 -64, i32 0
  %1929 = add nsw i32 %1928, %1920
  %1930 = icmp ugt i32 %1929, 31
  %1931 = select i1 %1930, i32 %1923, i32 %1922
  %1932 = select i1 %1930, i32 %1924, i32 %1923
  %1933 = select i1 %1930, i32 %1925, i32 %1924
  %1934 = select i1 %1930, i32 %1926, i32 %1925
  %1935 = select i1 %1930, i32 %1927, i32 %1926
  %1936 = select i1 %1930, i32 -32, i32 0
  %1937 = add nsw i32 %1936, %1929
  %1938 = icmp ugt i32 %1937, 31
  %1939 = select i1 %1938, i32 %1932, i32 %1931
  %1940 = select i1 %1938, i32 %1933, i32 %1932
  %1941 = select i1 %1938, i32 %1934, i32 %1933
  %1942 = select i1 %1938, i32 %1935, i32 %1934
  %1943 = select i1 %1938, i32 -32, i32 0
  %1944 = add nsw i32 %1943, %1937
  %1945 = icmp eq i32 %1944, 0
  %1946 = sub nsw i32 32, %1944
  %1947 = tail call i32 @llvm.fshr.i32(i32 %1939, i32 %1940, i32 %1946)
  %1948 = tail call i32 @llvm.fshr.i32(i32 %1940, i32 %1941, i32 %1946)
  %1949 = tail call i32 @llvm.fshr.i32(i32 %1941, i32 %1942, i32 %1946)
  %1950 = select i1 %1945, i32 %1939, i32 %1947
  %1951 = select i1 %1945, i32 %1940, i32 %1948
  %1952 = select i1 %1945, i32 %1941, i32 %1949
  %1953 = lshr i32 %1950, 29
  %1954 = tail call i32 @llvm.fshl.i32(i32 %1950, i32 %1951, i32 2)
  %1955 = tail call i32 @llvm.fshl.i32(i32 %1951, i32 %1952, i32 2)
  %1956 = tail call i32 @llvm.fshl.i32(i32 %1952, i32 %1942, i32 2)
  %1957 = and i32 %1953, 1
  %1958 = sub nsw i32 0, %1957
  %1959 = shl i32 %1953, 31
  %1960 = xor i32 %1954, %1958
  %1961 = xor i32 %1955, %1958
  %1962 = xor i32 %1956, %1958
  %1963 = tail call i32 @llvm.ctlz.i32(i32 %1960, i1 false), !range !8
  %1964 = sub nsw i32 31, %1963
  %1965 = tail call i32 @llvm.fshr.i32(i32 %1960, i32 %1961, i32 %1964)
  %1966 = tail call i32 @llvm.fshr.i32(i32 %1961, i32 %1962, i32 %1964)
  %1967 = shl nuw nsw i32 %1963, 23
  %1968 = sub nuw nsw i32 1056964608, %1967
  %1969 = lshr i32 %1965, 9
  %1970 = or i32 %1969, %1968
  %1971 = or i32 %1970, %1959
  %1972 = bitcast i32 %1971 to float
  %1973 = tail call i32 @llvm.fshl.i32(i32 %1965, i32 %1966, i32 23)
  %1974 = tail call i32 @llvm.ctlz.i32(i32 %1973, i1 false), !range !8
  %1975 = fmul float %1972, 0x3FF921FB40000000
  %1976 = add nuw nsw i32 %1974, %1963
  %1977 = shl nuw nsw i32 %1976, 23
  %1978 = sub nuw nsw i32 855638016, %1977
  %1979 = sub nsw i32 31, %1974
  %1980 = tail call i32 @llvm.fshr.i32(i32 %1973, i32 %1966, i32 %1979)
  %1981 = lshr i32 %1980, 9
  %1982 = or i32 %1978, %1981
  %1983 = or i32 %1982, %1959
  %1984 = bitcast i32 %1983 to float
  %1985 = fneg float %1975
  %1986 = tail call float @llvm.fma.f32(float %1972, float 0x3FF921FB40000000, float %1985)
  %1987 = tail call float @llvm.fma.f32(float %1972, float 0x3E74442D00000000, float %1986)
  %1988 = tail call float @llvm.fma.f32(float %1984, float 0x3FF921FB40000000, float %1987)
  %1989 = fadd float %1975, %1988
  %1990 = lshr i32 %1950, 30
  %1991 = add nuw nsw i32 %1957, %1990
  br label %2000

1992:                                             ; preds = %1867
  %1993 = fmul float %1884, 0x3FE45F3060000000
  %1994 = tail call float @llvm.rint.f32(float %1993)
  %1995 = tail call float @llvm.fma.f32(float %1994, float 0xBFF921FB40000000, float %1884)
  %1996 = tail call float @llvm.fma.f32(float %1994, float 0xBE74442D00000000, float %1995)
  %1997 = tail call float @llvm.fma.f32(float %1994, float 0xBCF8469880000000, float %1996)
  %1998 = fptosi float %1994 to i32
  %1999 = bitcast float %1884 to i32
  br label %2000

2000:                                             ; preds = %1992, %1886
  %2001 = phi i32 [ %1999, %1992 ], [ %1887, %1886 ]
  %2002 = phi float [ %1997, %1992 ], [ %1989, %1886 ]
  %2003 = phi i32 [ %1998, %1992 ], [ %1991, %1886 ]
  %2004 = fmul float %2002, %2002
  %2005 = tail call float @llvm.fmuladd.f32(float %2004, float 0xBF29833040000000, float 0x3F81103880000000)
  %2006 = tail call float @llvm.fmuladd.f32(float %2004, float %2005, float 0xBFC55553A0000000)
  %2007 = fmul float %2004, %2006
  %2008 = tail call float @llvm.fmuladd.f32(float %2002, float %2007, float %2002)
  %2009 = tail call float @llvm.fmuladd.f32(float %2004, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %2010 = tail call float @llvm.fmuladd.f32(float %2004, float %2009, float 0x3FA5557EE0000000)
  %2011 = tail call float @llvm.fmuladd.f32(float %2004, float %2010, float 0xBFE0000080000000)
  %2012 = tail call float @llvm.fmuladd.f32(float %2004, float %2011, float 1.000000e+00)
  %2013 = and i32 %2003, 1
  %2014 = icmp eq i32 %2013, 0
  %2015 = select i1 %2014, float %2008, float %2012
  %2016 = bitcast float %2015 to i32
  %2017 = shl i32 %2003, 30
  %2018 = and i32 %2017, -2147483648
  %2019 = bitcast float %1883 to i32
  %2020 = xor i32 %2001, %2019
  %2021 = xor i32 %2020, %2018
  %2022 = xor i32 %2021, %2016
  %2023 = bitcast i32 %2022 to float
  %2024 = tail call i1 @llvm.amdgcn.class.f32(float %1884, i32 504)
  %2025 = select i1 %2024, float %2023, float 0x7FF8000000000000
  %2026 = tail call float @llvm.fabs.f32(float %2025)
  %2027 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2026)
  %2028 = fcmp olt float %2027, 0x3FE5555560000000
  %2029 = zext i1 %2028 to i32
  %2030 = tail call float @llvm.amdgcn.ldexp.f32(float %2027, i32 %2029)
  %2031 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2026)
  %2032 = sub nsw i32 %2031, %2029
  %2033 = fadd float %2030, -1.000000e+00
  %2034 = fadd float %2030, 1.000000e+00
  %2035 = fadd float %2034, -1.000000e+00
  %2036 = fsub float %2030, %2035
  %2037 = tail call float @llvm.amdgcn.rcp.f32(float %2034)
  %2038 = fmul float %2033, %2037
  %2039 = fmul float %2034, %2038
  %2040 = fneg float %2039
  %2041 = tail call float @llvm.fma.f32(float %2038, float %2034, float %2040)
  %2042 = tail call float @llvm.fma.f32(float %2038, float %2036, float %2041)
  %2043 = fadd float %2039, %2042
  %2044 = fsub float %2043, %2039
  %2045 = fsub float %2042, %2044
  %2046 = fsub float %2033, %2043
  %2047 = fsub float %2033, %2046
  %2048 = fsub float %2047, %2043
  %2049 = fsub float %2048, %2045
  %2050 = fadd float %2046, %2049
  %2051 = fmul float %2037, %2050
  %2052 = fadd float %2038, %2051
  %2053 = fsub float %2052, %2038
  %2054 = fsub float %2051, %2053
  %2055 = fmul float %2052, %2052
  %2056 = fneg float %2055
  %2057 = tail call float @llvm.fma.f32(float %2052, float %2052, float %2056)
  %2058 = fmul float %2054, 2.000000e+00
  %2059 = tail call float @llvm.fma.f32(float %2052, float %2058, float %2057)
  %2060 = fadd float %2055, %2059
  %2061 = fsub float %2060, %2055
  %2062 = fsub float %2059, %2061
  %2063 = tail call float @llvm.fmuladd.f32(float %2060, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2064 = tail call float @llvm.fmuladd.f32(float %2060, float %2063, float 0x3FD999BDE0000000)
  %2065 = sitofp i32 %2032 to float
  %2066 = fmul float %2065, 0x3FE62E4300000000
  %2067 = fneg float %2066
  %2068 = tail call float @llvm.fma.f32(float %2065, float 0x3FE62E4300000000, float %2067)
  %2069 = tail call float @llvm.fma.f32(float %2065, float 0xBE205C6100000000, float %2068)
  %2070 = fadd float %2066, %2069
  %2071 = fsub float %2070, %2066
  %2072 = fsub float %2069, %2071
  %2073 = tail call float @llvm.amdgcn.ldexp.f32(float %2052, i32 1)
  %2074 = fmul float %2052, %2060
  %2075 = fneg float %2074
  %2076 = tail call float @llvm.fma.f32(float %2060, float %2052, float %2075)
  %2077 = tail call float @llvm.fma.f32(float %2060, float %2054, float %2076)
  %2078 = tail call float @llvm.fma.f32(float %2062, float %2052, float %2077)
  %2079 = fadd float %2074, %2078
  %2080 = fsub float %2079, %2074
  %2081 = fsub float %2078, %2080
  %2082 = fmul float %2060, %2064
  %2083 = fneg float %2082
  %2084 = tail call float @llvm.fma.f32(float %2060, float %2064, float %2083)
  %2085 = tail call float @llvm.fma.f32(float %2062, float %2064, float %2084)
  %2086 = fadd float %2082, %2085
  %2087 = fsub float %2086, %2082
  %2088 = fsub float %2085, %2087
  %2089 = fadd float %2086, 0x3FE5555540000000
  %2090 = fadd float %2089, 0xBFE5555540000000
  %2091 = fsub float %2086, %2090
  %2092 = fadd float %2088, 0x3E2E720200000000
  %2093 = fadd float %2092, %2091
  %2094 = fadd float %2089, %2093
  %2095 = fsub float %2094, %2089
  %2096 = fsub float %2093, %2095
  %2097 = fmul float %2079, %2094
  %2098 = fneg float %2097
  %2099 = tail call float @llvm.fma.f32(float %2079, float %2094, float %2098)
  %2100 = tail call float @llvm.fma.f32(float %2079, float %2096, float %2099)
  %2101 = tail call float @llvm.fma.f32(float %2081, float %2094, float %2100)
  %2102 = tail call float @llvm.amdgcn.ldexp.f32(float %2054, i32 1)
  %2103 = fadd float %2097, %2101
  %2104 = fsub float %2103, %2097
  %2105 = fsub float %2101, %2104
  %2106 = fadd float %2073, %2103
  %2107 = fsub float %2106, %2073
  %2108 = fsub float %2103, %2107
  %2109 = fadd float %2102, %2105
  %2110 = fadd float %2109, %2108
  %2111 = fadd float %2106, %2110
  %2112 = fsub float %2111, %2106
  %2113 = fsub float %2110, %2112
  %2114 = fadd float %2070, %2111
  %2115 = fsub float %2114, %2070
  %2116 = fsub float %2114, %2115
  %2117 = fsub float %2070, %2116
  %2118 = fsub float %2111, %2115
  %2119 = fadd float %2118, %2117
  %2120 = fadd float %2072, %2113
  %2121 = fsub float %2120, %2072
  %2122 = fsub float %2120, %2121
  %2123 = fsub float %2072, %2122
  %2124 = fsub float %2113, %2121
  %2125 = fadd float %2124, %2123
  %2126 = fadd float %2120, %2119
  %2127 = fadd float %2114, %2126
  %2128 = fsub float %2127, %2114
  %2129 = fsub float %2126, %2128
  %2130 = fadd float %2125, %2129
  %2131 = fadd float %2127, %2130
  %2132 = fsub float %2131, %2127
  %2133 = fsub float %2130, %2132
  %2134 = fmul float %2131, 2.000000e+00
  %2135 = fneg float %2134
  %2136 = tail call float @llvm.fma.f32(float %2131, float 2.000000e+00, float %2135)
  %2137 = fmul float %2131, 0.000000e+00
  %2138 = tail call float @llvm.fma.f32(float %2133, float 2.000000e+00, float %2137)
  %2139 = fadd float %2136, %2138
  %2140 = fadd float %2134, %2139
  %2141 = fsub float %2140, %2134
  %2142 = fsub float %2139, %2141
  %2143 = tail call float @llvm.fabs.f32(float %2134) #3
  %2144 = fcmp oeq float %2143, 0x7FF0000000000000
  %2145 = select i1 %2144, float %2134, float %2140
  %2146 = tail call float @llvm.fabs.f32(float %2145) #3
  %2147 = fcmp oeq float %2146, 0x7FF0000000000000
  %2148 = select i1 %2147, float 0.000000e+00, float %2142
  %2149 = fcmp oeq float %2145, 0x40562E4300000000
  %2150 = select i1 %2149, float 0x3EE0000000000000, float 0.000000e+00
  %2151 = fsub float %2145, %2150
  %2152 = fadd float %2150, %2148
  %2153 = fmul float %2151, 0x3FF7154760000000
  %2154 = tail call float @llvm.rint.f32(float %2153)
  %2155 = fcmp ogt float %2151, 0x40562E4300000000
  %2156 = fcmp olt float %2151, 0xC059D1DA00000000
  %2157 = fneg float %2153
  %2158 = tail call float @llvm.fma.f32(float %2151, float 0x3FF7154760000000, float %2157)
  %2159 = tail call float @llvm.fma.f32(float %2151, float 0x3E54AE0BE0000000, float %2158)
  %2160 = fsub float %2153, %2154
  %2161 = fadd float %2159, %2160
  %2162 = tail call float @llvm.exp2.f32(float %2161)
  %2163 = fptosi float %2154 to i32
  %2164 = tail call float @llvm.amdgcn.ldexp.f32(float %2162, i32 %2163)
  %2165 = select i1 %2156, float 0.000000e+00, float %2164
  %2166 = select i1 %2155, float 0x7FF0000000000000, float %2165
  %2167 = tail call float @llvm.fma.f32(float %2166, float %2152, float %2166)
  %2168 = tail call float @llvm.fabs.f32(float %2166) #3
  %2169 = fcmp oeq float %2168, 0x7FF0000000000000
  %2170 = select i1 %2169, float %2166, float %2167
  %2171 = tail call float @llvm.fabs.f32(float %2170)
  %2172 = fcmp oeq float %2026, 0x7FF0000000000000
  %2173 = fcmp oeq float %2025, 0.000000e+00
  %2174 = select i1 %2172, float 0x7FF0000000000000, float %2171
  %2175 = select i1 %2173, float 0.000000e+00, float %2174
  %2176 = fcmp uno float %2025, 0.000000e+00
  %2177 = select i1 %2176, float 0x7FF8000000000000, float %2175
  %2178 = fadd contract float %1882, -1.000000e+00
  %2179 = tail call float @llvm.fabs.f32(float %2178)
  %2180 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2179)
  %2181 = fcmp olt float %2180, 0x3FE5555560000000
  %2182 = zext i1 %2181 to i32
  %2183 = tail call float @llvm.amdgcn.ldexp.f32(float %2180, i32 %2182)
  %2184 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2179)
  %2185 = sub nsw i32 %2184, %2182
  %2186 = fadd float %2183, -1.000000e+00
  %2187 = fadd float %2183, 1.000000e+00
  %2188 = fadd float %2187, -1.000000e+00
  %2189 = fsub float %2183, %2188
  %2190 = tail call float @llvm.amdgcn.rcp.f32(float %2187)
  %2191 = fmul float %2186, %2190
  %2192 = fmul float %2187, %2191
  %2193 = fneg float %2192
  %2194 = tail call float @llvm.fma.f32(float %2191, float %2187, float %2193)
  %2195 = tail call float @llvm.fma.f32(float %2191, float %2189, float %2194)
  %2196 = fadd float %2192, %2195
  %2197 = fsub float %2196, %2192
  %2198 = fsub float %2195, %2197
  %2199 = fsub float %2186, %2196
  %2200 = fsub float %2186, %2199
  %2201 = fsub float %2200, %2196
  %2202 = fsub float %2201, %2198
  %2203 = fadd float %2199, %2202
  %2204 = fmul float %2190, %2203
  %2205 = fadd float %2191, %2204
  %2206 = fsub float %2205, %2191
  %2207 = fsub float %2204, %2206
  %2208 = fmul float %2205, %2205
  %2209 = fneg float %2208
  %2210 = tail call float @llvm.fma.f32(float %2205, float %2205, float %2209)
  %2211 = fmul float %2207, 2.000000e+00
  %2212 = tail call float @llvm.fma.f32(float %2205, float %2211, float %2210)
  %2213 = fadd float %2208, %2212
  %2214 = fsub float %2213, %2208
  %2215 = fsub float %2212, %2214
  %2216 = tail call float @llvm.fmuladd.f32(float %2213, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2217 = tail call float @llvm.fmuladd.f32(float %2213, float %2216, float 0x3FD999BDE0000000)
  %2218 = sitofp i32 %2185 to float
  %2219 = fmul float %2218, 0x3FE62E4300000000
  %2220 = fneg float %2219
  %2221 = tail call float @llvm.fma.f32(float %2218, float 0x3FE62E4300000000, float %2220)
  %2222 = tail call float @llvm.fma.f32(float %2218, float 0xBE205C6100000000, float %2221)
  %2223 = fadd float %2219, %2222
  %2224 = fsub float %2223, %2219
  %2225 = fsub float %2222, %2224
  %2226 = tail call float @llvm.amdgcn.ldexp.f32(float %2205, i32 1)
  %2227 = fmul float %2205, %2213
  %2228 = fneg float %2227
  %2229 = tail call float @llvm.fma.f32(float %2213, float %2205, float %2228)
  %2230 = tail call float @llvm.fma.f32(float %2213, float %2207, float %2229)
  %2231 = tail call float @llvm.fma.f32(float %2215, float %2205, float %2230)
  %2232 = fadd float %2227, %2231
  %2233 = fsub float %2232, %2227
  %2234 = fsub float %2231, %2233
  %2235 = fmul float %2213, %2217
  %2236 = fneg float %2235
  %2237 = tail call float @llvm.fma.f32(float %2213, float %2217, float %2236)
  %2238 = tail call float @llvm.fma.f32(float %2215, float %2217, float %2237)
  %2239 = fadd float %2235, %2238
  %2240 = fsub float %2239, %2235
  %2241 = fsub float %2238, %2240
  %2242 = fadd float %2239, 0x3FE5555540000000
  %2243 = fadd float %2242, 0xBFE5555540000000
  %2244 = fsub float %2239, %2243
  %2245 = fadd float %2241, 0x3E2E720200000000
  %2246 = fadd float %2245, %2244
  %2247 = fadd float %2242, %2246
  %2248 = fsub float %2247, %2242
  %2249 = fsub float %2246, %2248
  %2250 = fmul float %2232, %2247
  %2251 = fneg float %2250
  %2252 = tail call float @llvm.fma.f32(float %2232, float %2247, float %2251)
  %2253 = tail call float @llvm.fma.f32(float %2232, float %2249, float %2252)
  %2254 = tail call float @llvm.fma.f32(float %2234, float %2247, float %2253)
  %2255 = tail call float @llvm.amdgcn.ldexp.f32(float %2207, i32 1)
  %2256 = fadd float %2250, %2254
  %2257 = fsub float %2256, %2250
  %2258 = fsub float %2254, %2257
  %2259 = fadd float %2226, %2256
  %2260 = fsub float %2259, %2226
  %2261 = fsub float %2256, %2260
  %2262 = fadd float %2255, %2258
  %2263 = fadd float %2262, %2261
  %2264 = fadd float %2259, %2263
  %2265 = fsub float %2264, %2259
  %2266 = fsub float %2263, %2265
  %2267 = fadd float %2223, %2264
  %2268 = fsub float %2267, %2223
  %2269 = fsub float %2267, %2268
  %2270 = fsub float %2223, %2269
  %2271 = fsub float %2264, %2268
  %2272 = fadd float %2271, %2270
  %2273 = fadd float %2225, %2266
  %2274 = fsub float %2273, %2225
  %2275 = fsub float %2273, %2274
  %2276 = fsub float %2225, %2275
  %2277 = fsub float %2266, %2274
  %2278 = fadd float %2277, %2276
  %2279 = fadd float %2273, %2272
  %2280 = fadd float %2267, %2279
  %2281 = fsub float %2280, %2267
  %2282 = fsub float %2279, %2281
  %2283 = fadd float %2278, %2282
  %2284 = fadd float %2280, %2283
  %2285 = fsub float %2284, %2280
  %2286 = fsub float %2283, %2285
  %2287 = fmul float %2284, 2.000000e+00
  %2288 = fneg float %2287
  %2289 = tail call float @llvm.fma.f32(float %2284, float 2.000000e+00, float %2288)
  %2290 = fmul float %2284, 0.000000e+00
  %2291 = tail call float @llvm.fma.f32(float %2286, float 2.000000e+00, float %2290)
  %2292 = fadd float %2289, %2291
  %2293 = fadd float %2287, %2292
  %2294 = fsub float %2293, %2287
  %2295 = fsub float %2292, %2294
  %2296 = tail call float @llvm.fabs.f32(float %2287) #3
  %2297 = fcmp oeq float %2296, 0x7FF0000000000000
  %2298 = select i1 %2297, float %2287, float %2293
  %2299 = tail call float @llvm.fabs.f32(float %2298) #3
  %2300 = fcmp oeq float %2299, 0x7FF0000000000000
  %2301 = select i1 %2300, float 0.000000e+00, float %2295
  %2302 = fcmp oeq float %2298, 0x40562E4300000000
  %2303 = select i1 %2302, float 0x3EE0000000000000, float 0.000000e+00
  %2304 = fsub float %2298, %2303
  %2305 = fadd float %2303, %2301
  %2306 = fmul float %2304, 0x3FF7154760000000
  %2307 = tail call float @llvm.rint.f32(float %2306)
  %2308 = fcmp ogt float %2304, 0x40562E4300000000
  %2309 = fcmp olt float %2304, 0xC059D1DA00000000
  %2310 = fneg float %2306
  %2311 = tail call float @llvm.fma.f32(float %2304, float 0x3FF7154760000000, float %2310)
  %2312 = tail call float @llvm.fma.f32(float %2304, float 0x3E54AE0BE0000000, float %2311)
  %2313 = fsub float %2306, %2307
  %2314 = fadd float %2312, %2313
  %2315 = tail call float @llvm.exp2.f32(float %2314)
  %2316 = fptosi float %2307 to i32
  %2317 = tail call float @llvm.amdgcn.ldexp.f32(float %2315, i32 %2316)
  %2318 = select i1 %2309, float 0.000000e+00, float %2317
  %2319 = select i1 %2308, float 0x7FF0000000000000, float %2318
  %2320 = tail call float @llvm.fma.f32(float %2319, float %2305, float %2319)
  %2321 = tail call float @llvm.fabs.f32(float %2319) #3
  %2322 = fcmp oeq float %2321, 0x7FF0000000000000
  %2323 = select i1 %2322, float %2319, float %2320
  %2324 = tail call float @llvm.fabs.f32(float %2323)
  %2325 = fcmp oeq float %2179, 0x7FF0000000000000
  %2326 = fcmp oeq float %2178, 0.000000e+00
  %2327 = select i1 %2325, float 0x7FF0000000000000, float %2324
  %2328 = select i1 %2326, float 0.000000e+00, float %2327
  %2329 = fcmp uno float %2178, 0.000000e+00
  %2330 = select i1 %2329, float 0x7FF8000000000000, float %2328
  %2331 = fadd contract float %2330, %2177
  %2332 = fadd contract float %2331, 0.000000e+00
  br label %2333

2333:                                             ; preds = %2618, %2000
  %2334 = phi i1 [ true, %2000 ], [ false, %2618 ]
  %2335 = phi i32 [ 0, %2000 ], [ 1, %2618 ]
  %2336 = phi float [ %2332, %2000 ], [ %2799, %2618 ]
  %2337 = zext i32 %2335 to i64
  %2338 = extractelement <3 x float> %1876, i64 %2337
  %2339 = fadd contract float %2338, -1.000000e+00
  %2340 = fmul contract float %2339, 2.500000e-01
  %2341 = fadd contract float %2340, 1.000000e+00
  %2342 = add nuw nsw i32 %2335, 1
  %2343 = zext i32 %2342 to i64
  %2344 = extractelement <3 x float> %1876, i64 %2343
  %2345 = fadd contract float %2344, -1.000000e+00
  %2346 = fmul contract float %2345, 2.500000e-01
  %2347 = fadd contract float %2346, 1.000000e+00
  %2348 = fadd contract float %2341, -1.000000e+00
  %2349 = tail call float @llvm.fabs.f32(float %2348)
  %2350 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2349)
  %2351 = fcmp olt float %2350, 0x3FE5555560000000
  %2352 = zext i1 %2351 to i32
  %2353 = tail call float @llvm.amdgcn.ldexp.f32(float %2350, i32 %2352)
  %2354 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2349)
  %2355 = sub nsw i32 %2354, %2352
  %2356 = fadd float %2353, -1.000000e+00
  %2357 = fadd float %2353, 1.000000e+00
  %2358 = fadd float %2357, -1.000000e+00
  %2359 = fsub float %2353, %2358
  %2360 = tail call float @llvm.amdgcn.rcp.f32(float %2357)
  %2361 = fmul float %2356, %2360
  %2362 = fmul float %2357, %2361
  %2363 = fneg float %2362
  %2364 = tail call float @llvm.fma.f32(float %2361, float %2357, float %2363)
  %2365 = tail call float @llvm.fma.f32(float %2361, float %2359, float %2364)
  %2366 = fadd float %2362, %2365
  %2367 = fsub float %2366, %2362
  %2368 = fsub float %2365, %2367
  %2369 = fsub float %2356, %2366
  %2370 = fsub float %2356, %2369
  %2371 = fsub float %2370, %2366
  %2372 = fsub float %2371, %2368
  %2373 = fadd float %2369, %2372
  %2374 = fmul float %2360, %2373
  %2375 = fadd float %2361, %2374
  %2376 = fsub float %2375, %2361
  %2377 = fsub float %2374, %2376
  %2378 = fmul float %2375, %2375
  %2379 = fneg float %2378
  %2380 = tail call float @llvm.fma.f32(float %2375, float %2375, float %2379)
  %2381 = fmul float %2377, 2.000000e+00
  %2382 = tail call float @llvm.fma.f32(float %2375, float %2381, float %2380)
  %2383 = fadd float %2378, %2382
  %2384 = fsub float %2383, %2378
  %2385 = fsub float %2382, %2384
  %2386 = tail call float @llvm.fmuladd.f32(float %2383, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2387 = tail call float @llvm.fmuladd.f32(float %2383, float %2386, float 0x3FD999BDE0000000)
  %2388 = sitofp i32 %2355 to float
  %2389 = fmul float %2388, 0x3FE62E4300000000
  %2390 = fneg float %2389
  %2391 = tail call float @llvm.fma.f32(float %2388, float 0x3FE62E4300000000, float %2390)
  %2392 = tail call float @llvm.fma.f32(float %2388, float 0xBE205C6100000000, float %2391)
  %2393 = fadd float %2389, %2392
  %2394 = fsub float %2393, %2389
  %2395 = fsub float %2392, %2394
  %2396 = tail call float @llvm.amdgcn.ldexp.f32(float %2375, i32 1)
  %2397 = fmul float %2375, %2383
  %2398 = fneg float %2397
  %2399 = tail call float @llvm.fma.f32(float %2383, float %2375, float %2398)
  %2400 = tail call float @llvm.fma.f32(float %2383, float %2377, float %2399)
  %2401 = tail call float @llvm.fma.f32(float %2385, float %2375, float %2400)
  %2402 = fadd float %2397, %2401
  %2403 = fsub float %2402, %2397
  %2404 = fsub float %2401, %2403
  %2405 = fmul float %2383, %2387
  %2406 = fneg float %2405
  %2407 = tail call float @llvm.fma.f32(float %2383, float %2387, float %2406)
  %2408 = tail call float @llvm.fma.f32(float %2385, float %2387, float %2407)
  %2409 = fadd float %2405, %2408
  %2410 = fsub float %2409, %2405
  %2411 = fsub float %2408, %2410
  %2412 = fadd float %2409, 0x3FE5555540000000
  %2413 = fadd float %2412, 0xBFE5555540000000
  %2414 = fsub float %2409, %2413
  %2415 = fadd float %2411, 0x3E2E720200000000
  %2416 = fadd float %2415, %2414
  %2417 = fadd float %2412, %2416
  %2418 = fsub float %2417, %2412
  %2419 = fsub float %2416, %2418
  %2420 = fmul float %2402, %2417
  %2421 = fneg float %2420
  %2422 = tail call float @llvm.fma.f32(float %2402, float %2417, float %2421)
  %2423 = tail call float @llvm.fma.f32(float %2402, float %2419, float %2422)
  %2424 = tail call float @llvm.fma.f32(float %2404, float %2417, float %2423)
  %2425 = tail call float @llvm.amdgcn.ldexp.f32(float %2377, i32 1)
  %2426 = fadd float %2420, %2424
  %2427 = fsub float %2426, %2420
  %2428 = fsub float %2424, %2427
  %2429 = fadd float %2396, %2426
  %2430 = fsub float %2429, %2396
  %2431 = fsub float %2426, %2430
  %2432 = fadd float %2425, %2428
  %2433 = fadd float %2432, %2431
  %2434 = fadd float %2429, %2433
  %2435 = fsub float %2434, %2429
  %2436 = fsub float %2433, %2435
  %2437 = fadd float %2393, %2434
  %2438 = fsub float %2437, %2393
  %2439 = fsub float %2437, %2438
  %2440 = fsub float %2393, %2439
  %2441 = fsub float %2434, %2438
  %2442 = fadd float %2441, %2440
  %2443 = fadd float %2395, %2436
  %2444 = fsub float %2443, %2395
  %2445 = fsub float %2443, %2444
  %2446 = fsub float %2395, %2445
  %2447 = fsub float %2436, %2444
  %2448 = fadd float %2447, %2446
  %2449 = fadd float %2443, %2442
  %2450 = fadd float %2437, %2449
  %2451 = fsub float %2450, %2437
  %2452 = fsub float %2449, %2451
  %2453 = fadd float %2448, %2452
  %2454 = fadd float %2450, %2453
  %2455 = fsub float %2454, %2450
  %2456 = fsub float %2453, %2455
  %2457 = fmul float %2454, 2.000000e+00
  %2458 = fneg float %2457
  %2459 = tail call float @llvm.fma.f32(float %2454, float 2.000000e+00, float %2458)
  %2460 = fmul float %2454, 0.000000e+00
  %2461 = tail call float @llvm.fma.f32(float %2456, float 2.000000e+00, float %2460)
  %2462 = fadd float %2459, %2461
  %2463 = fadd float %2457, %2462
  %2464 = fsub float %2463, %2457
  %2465 = fsub float %2462, %2464
  %2466 = tail call float @llvm.fabs.f32(float %2457) #3
  %2467 = fcmp oeq float %2466, 0x7FF0000000000000
  %2468 = select i1 %2467, float %2457, float %2463
  %2469 = tail call float @llvm.fabs.f32(float %2468) #3
  %2470 = fcmp oeq float %2469, 0x7FF0000000000000
  %2471 = select i1 %2470, float 0.000000e+00, float %2465
  %2472 = fcmp oeq float %2468, 0x40562E4300000000
  %2473 = select i1 %2472, float 0x3EE0000000000000, float 0.000000e+00
  %2474 = fsub float %2468, %2473
  %2475 = fadd float %2473, %2471
  %2476 = fmul float %2474, 0x3FF7154760000000
  %2477 = tail call float @llvm.rint.f32(float %2476)
  %2478 = fcmp ogt float %2474, 0x40562E4300000000
  %2479 = fcmp olt float %2474, 0xC059D1DA00000000
  %2480 = fneg float %2476
  %2481 = tail call float @llvm.fma.f32(float %2474, float 0x3FF7154760000000, float %2480)
  %2482 = tail call float @llvm.fma.f32(float %2474, float 0x3E54AE0BE0000000, float %2481)
  %2483 = fsub float %2476, %2477
  %2484 = fadd float %2482, %2483
  %2485 = tail call float @llvm.exp2.f32(float %2484)
  %2486 = fptosi float %2477 to i32
  %2487 = tail call float @llvm.amdgcn.ldexp.f32(float %2485, i32 %2486)
  %2488 = select i1 %2479, float 0.000000e+00, float %2487
  %2489 = select i1 %2478, float 0x7FF0000000000000, float %2488
  %2490 = tail call float @llvm.fma.f32(float %2489, float %2475, float %2489)
  %2491 = tail call float @llvm.fabs.f32(float %2489) #3
  %2492 = fcmp oeq float %2491, 0x7FF0000000000000
  %2493 = select i1 %2492, float %2489, float %2490
  %2494 = tail call float @llvm.fabs.f32(float %2493)
  %2495 = fcmp oeq float %2349, 0x7FF0000000000000
  %2496 = fcmp oeq float %2348, 0.000000e+00
  %2497 = select i1 %2495, float 0x7FF0000000000000, float %2494
  %2498 = select i1 %2496, float 0.000000e+00, float %2497
  %2499 = fcmp uno float %2348, 0.000000e+00
  %2500 = select i1 %2499, float 0x7FF8000000000000, float %2498
  %2501 = fmul contract float %2347, 0x400921CAC0000000
  %2502 = tail call float @llvm.fabs.f32(float %2501)
  %2503 = fcmp olt float %2502, 1.310720e+05
  br i1 %2503, label %2610, label %2504

2504:                                             ; preds = %2333
  %2505 = bitcast float %2502 to i32
  %2506 = lshr i32 %2505, 23
  %2507 = and i32 %2505, 8388607
  %2508 = or i32 %2507, 8388608
  %2509 = zext i32 %2508 to i64
  %2510 = mul nuw nsw i64 %2509, 4266746795
  %2511 = trunc i64 %2510 to i32
  %2512 = lshr i64 %2510, 32
  %2513 = mul nuw nsw i64 %2509, 1011060801
  %2514 = add nuw nsw i64 %2512, %2513
  %2515 = trunc i64 %2514 to i32
  %2516 = lshr i64 %2514, 32
  %2517 = mul nuw nsw i64 %2509, 3680671129
  %2518 = add nuw nsw i64 %2516, %2517
  %2519 = trunc i64 %2518 to i32
  %2520 = lshr i64 %2518, 32
  %2521 = mul nuw nsw i64 %2509, 4113882560
  %2522 = add nuw nsw i64 %2520, %2521
  %2523 = trunc i64 %2522 to i32
  %2524 = lshr i64 %2522, 32
  %2525 = mul nuw nsw i64 %2509, 4230436817
  %2526 = add nuw nsw i64 %2524, %2525
  %2527 = trunc i64 %2526 to i32
  %2528 = lshr i64 %2526, 32
  %2529 = mul nuw nsw i64 %2509, 1313084713
  %2530 = add nuw nsw i64 %2528, %2529
  %2531 = trunc i64 %2530 to i32
  %2532 = lshr i64 %2530, 32
  %2533 = mul nuw nsw i64 %2509, 2734261102
  %2534 = add nuw nsw i64 %2532, %2533
  %2535 = trunc i64 %2534 to i32
  %2536 = lshr i64 %2534, 32
  %2537 = trunc i64 %2536 to i32
  %2538 = add nsw i32 %2506, -120
  %2539 = icmp ugt i32 %2538, 63
  %2540 = select i1 %2539, i32 %2531, i32 %2537
  %2541 = select i1 %2539, i32 %2527, i32 %2535
  %2542 = select i1 %2539, i32 %2523, i32 %2531
  %2543 = select i1 %2539, i32 %2519, i32 %2527
  %2544 = select i1 %2539, i32 %2515, i32 %2523
  %2545 = select i1 %2539, i32 %2511, i32 %2519
  %2546 = select i1 %2539, i32 -64, i32 0
  %2547 = add nsw i32 %2546, %2538
  %2548 = icmp ugt i32 %2547, 31
  %2549 = select i1 %2548, i32 %2541, i32 %2540
  %2550 = select i1 %2548, i32 %2542, i32 %2541
  %2551 = select i1 %2548, i32 %2543, i32 %2542
  %2552 = select i1 %2548, i32 %2544, i32 %2543
  %2553 = select i1 %2548, i32 %2545, i32 %2544
  %2554 = select i1 %2548, i32 -32, i32 0
  %2555 = add nsw i32 %2554, %2547
  %2556 = icmp ugt i32 %2555, 31
  %2557 = select i1 %2556, i32 %2550, i32 %2549
  %2558 = select i1 %2556, i32 %2551, i32 %2550
  %2559 = select i1 %2556, i32 %2552, i32 %2551
  %2560 = select i1 %2556, i32 %2553, i32 %2552
  %2561 = select i1 %2556, i32 -32, i32 0
  %2562 = add nsw i32 %2561, %2555
  %2563 = icmp eq i32 %2562, 0
  %2564 = sub nsw i32 32, %2562
  %2565 = tail call i32 @llvm.fshr.i32(i32 %2557, i32 %2558, i32 %2564)
  %2566 = tail call i32 @llvm.fshr.i32(i32 %2558, i32 %2559, i32 %2564)
  %2567 = tail call i32 @llvm.fshr.i32(i32 %2559, i32 %2560, i32 %2564)
  %2568 = select i1 %2563, i32 %2557, i32 %2565
  %2569 = select i1 %2563, i32 %2558, i32 %2566
  %2570 = select i1 %2563, i32 %2559, i32 %2567
  %2571 = lshr i32 %2568, 29
  %2572 = tail call i32 @llvm.fshl.i32(i32 %2568, i32 %2569, i32 2)
  %2573 = tail call i32 @llvm.fshl.i32(i32 %2569, i32 %2570, i32 2)
  %2574 = tail call i32 @llvm.fshl.i32(i32 %2570, i32 %2560, i32 2)
  %2575 = and i32 %2571, 1
  %2576 = sub nsw i32 0, %2575
  %2577 = shl i32 %2571, 31
  %2578 = xor i32 %2572, %2576
  %2579 = xor i32 %2573, %2576
  %2580 = xor i32 %2574, %2576
  %2581 = tail call i32 @llvm.ctlz.i32(i32 %2578, i1 false), !range !8
  %2582 = sub nsw i32 31, %2581
  %2583 = tail call i32 @llvm.fshr.i32(i32 %2578, i32 %2579, i32 %2582)
  %2584 = tail call i32 @llvm.fshr.i32(i32 %2579, i32 %2580, i32 %2582)
  %2585 = shl nuw nsw i32 %2581, 23
  %2586 = sub nuw nsw i32 1056964608, %2585
  %2587 = lshr i32 %2583, 9
  %2588 = or i32 %2587, %2586
  %2589 = or i32 %2588, %2577
  %2590 = bitcast i32 %2589 to float
  %2591 = tail call i32 @llvm.fshl.i32(i32 %2583, i32 %2584, i32 23)
  %2592 = tail call i32 @llvm.ctlz.i32(i32 %2591, i1 false), !range !8
  %2593 = fmul float %2590, 0x3FF921FB40000000
  %2594 = add nuw nsw i32 %2592, %2581
  %2595 = shl nuw nsw i32 %2594, 23
  %2596 = sub nuw nsw i32 855638016, %2595
  %2597 = sub nsw i32 31, %2592
  %2598 = tail call i32 @llvm.fshr.i32(i32 %2591, i32 %2584, i32 %2597)
  %2599 = lshr i32 %2598, 9
  %2600 = or i32 %2596, %2599
  %2601 = or i32 %2600, %2577
  %2602 = bitcast i32 %2601 to float
  %2603 = fneg float %2593
  %2604 = tail call float @llvm.fma.f32(float %2590, float 0x3FF921FB40000000, float %2603)
  %2605 = tail call float @llvm.fma.f32(float %2590, float 0x3E74442D00000000, float %2604)
  %2606 = tail call float @llvm.fma.f32(float %2602, float 0x3FF921FB40000000, float %2605)
  %2607 = fadd float %2593, %2606
  %2608 = lshr i32 %2568, 30
  %2609 = add nuw nsw i32 %2575, %2608
  br label %2618

2610:                                             ; preds = %2333
  %2611 = fmul float %2502, 0x3FE45F3060000000
  %2612 = tail call float @llvm.rint.f32(float %2611)
  %2613 = tail call float @llvm.fma.f32(float %2612, float 0xBFF921FB40000000, float %2502)
  %2614 = tail call float @llvm.fma.f32(float %2612, float 0xBE74442D00000000, float %2613)
  %2615 = tail call float @llvm.fma.f32(float %2612, float 0xBCF8469880000000, float %2614)
  %2616 = fptosi float %2612 to i32
  %2617 = bitcast float %2502 to i32
  br label %2618

2618:                                             ; preds = %2610, %2504
  %2619 = phi i32 [ %2617, %2610 ], [ %2505, %2504 ]
  %2620 = phi float [ %2615, %2610 ], [ %2607, %2504 ]
  %2621 = phi i32 [ %2616, %2610 ], [ %2609, %2504 ]
  %2622 = fmul float %2620, %2620
  %2623 = tail call float @llvm.fmuladd.f32(float %2622, float 0xBF29833040000000, float 0x3F81103880000000)
  %2624 = tail call float @llvm.fmuladd.f32(float %2622, float %2623, float 0xBFC55553A0000000)
  %2625 = fmul float %2622, %2624
  %2626 = tail call float @llvm.fmuladd.f32(float %2620, float %2625, float %2620)
  %2627 = tail call float @llvm.fmuladd.f32(float %2622, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %2628 = tail call float @llvm.fmuladd.f32(float %2622, float %2627, float 0x3FA5557EE0000000)
  %2629 = tail call float @llvm.fmuladd.f32(float %2622, float %2628, float 0xBFE0000080000000)
  %2630 = tail call float @llvm.fmuladd.f32(float %2622, float %2629, float 1.000000e+00)
  %2631 = and i32 %2621, 1
  %2632 = icmp eq i32 %2631, 0
  %2633 = select i1 %2632, float %2626, float %2630
  %2634 = bitcast float %2633 to i32
  %2635 = shl i32 %2621, 30
  %2636 = and i32 %2635, -2147483648
  %2637 = bitcast float %2501 to i32
  %2638 = xor i32 %2619, %2637
  %2639 = xor i32 %2638, %2636
  %2640 = xor i32 %2639, %2634
  %2641 = bitcast i32 %2640 to float
  %2642 = tail call i1 @llvm.amdgcn.class.f32(float %2502, i32 504)
  %2643 = select i1 %2642, float %2641, float 0x7FF8000000000000
  %2644 = tail call float @llvm.fabs.f32(float %2643)
  %2645 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2644)
  %2646 = fcmp olt float %2645, 0x3FE5555560000000
  %2647 = zext i1 %2646 to i32
  %2648 = tail call float @llvm.amdgcn.ldexp.f32(float %2645, i32 %2647)
  %2649 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2644)
  %2650 = sub nsw i32 %2649, %2647
  %2651 = fadd float %2648, -1.000000e+00
  %2652 = fadd float %2648, 1.000000e+00
  %2653 = fadd float %2652, -1.000000e+00
  %2654 = fsub float %2648, %2653
  %2655 = tail call float @llvm.amdgcn.rcp.f32(float %2652)
  %2656 = fmul float %2651, %2655
  %2657 = fmul float %2652, %2656
  %2658 = fneg float %2657
  %2659 = tail call float @llvm.fma.f32(float %2656, float %2652, float %2658)
  %2660 = tail call float @llvm.fma.f32(float %2656, float %2654, float %2659)
  %2661 = fadd float %2657, %2660
  %2662 = fsub float %2661, %2657
  %2663 = fsub float %2660, %2662
  %2664 = fsub float %2651, %2661
  %2665 = fsub float %2651, %2664
  %2666 = fsub float %2665, %2661
  %2667 = fsub float %2666, %2663
  %2668 = fadd float %2664, %2667
  %2669 = fmul float %2655, %2668
  %2670 = fadd float %2656, %2669
  %2671 = fsub float %2670, %2656
  %2672 = fsub float %2669, %2671
  %2673 = fmul float %2670, %2670
  %2674 = fneg float %2673
  %2675 = tail call float @llvm.fma.f32(float %2670, float %2670, float %2674)
  %2676 = fmul float %2672, 2.000000e+00
  %2677 = tail call float @llvm.fma.f32(float %2670, float %2676, float %2675)
  %2678 = fadd float %2673, %2677
  %2679 = fsub float %2678, %2673
  %2680 = fsub float %2677, %2679
  %2681 = tail call float @llvm.fmuladd.f32(float %2678, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2682 = tail call float @llvm.fmuladd.f32(float %2678, float %2681, float 0x3FD999BDE0000000)
  %2683 = sitofp i32 %2650 to float
  %2684 = fmul float %2683, 0x3FE62E4300000000
  %2685 = fneg float %2684
  %2686 = tail call float @llvm.fma.f32(float %2683, float 0x3FE62E4300000000, float %2685)
  %2687 = tail call float @llvm.fma.f32(float %2683, float 0xBE205C6100000000, float %2686)
  %2688 = fadd float %2684, %2687
  %2689 = fsub float %2688, %2684
  %2690 = fsub float %2687, %2689
  %2691 = tail call float @llvm.amdgcn.ldexp.f32(float %2670, i32 1)
  %2692 = fmul float %2670, %2678
  %2693 = fneg float %2692
  %2694 = tail call float @llvm.fma.f32(float %2678, float %2670, float %2693)
  %2695 = tail call float @llvm.fma.f32(float %2678, float %2672, float %2694)
  %2696 = tail call float @llvm.fma.f32(float %2680, float %2670, float %2695)
  %2697 = fadd float %2692, %2696
  %2698 = fsub float %2697, %2692
  %2699 = fsub float %2696, %2698
  %2700 = fmul float %2678, %2682
  %2701 = fneg float %2700
  %2702 = tail call float @llvm.fma.f32(float %2678, float %2682, float %2701)
  %2703 = tail call float @llvm.fma.f32(float %2680, float %2682, float %2702)
  %2704 = fadd float %2700, %2703
  %2705 = fsub float %2704, %2700
  %2706 = fsub float %2703, %2705
  %2707 = fadd float %2704, 0x3FE5555540000000
  %2708 = fadd float %2707, 0xBFE5555540000000
  %2709 = fsub float %2704, %2708
  %2710 = fadd float %2706, 0x3E2E720200000000
  %2711 = fadd float %2710, %2709
  %2712 = fadd float %2707, %2711
  %2713 = fsub float %2712, %2707
  %2714 = fsub float %2711, %2713
  %2715 = fmul float %2697, %2712
  %2716 = fneg float %2715
  %2717 = tail call float @llvm.fma.f32(float %2697, float %2712, float %2716)
  %2718 = tail call float @llvm.fma.f32(float %2697, float %2714, float %2717)
  %2719 = tail call float @llvm.fma.f32(float %2699, float %2712, float %2718)
  %2720 = tail call float @llvm.amdgcn.ldexp.f32(float %2672, i32 1)
  %2721 = fadd float %2715, %2719
  %2722 = fsub float %2721, %2715
  %2723 = fsub float %2719, %2722
  %2724 = fadd float %2691, %2721
  %2725 = fsub float %2724, %2691
  %2726 = fsub float %2721, %2725
  %2727 = fadd float %2720, %2723
  %2728 = fadd float %2727, %2726
  %2729 = fadd float %2724, %2728
  %2730 = fsub float %2729, %2724
  %2731 = fsub float %2728, %2730
  %2732 = fadd float %2688, %2729
  %2733 = fsub float %2732, %2688
  %2734 = fsub float %2732, %2733
  %2735 = fsub float %2688, %2734
  %2736 = fsub float %2729, %2733
  %2737 = fadd float %2736, %2735
  %2738 = fadd float %2690, %2731
  %2739 = fsub float %2738, %2690
  %2740 = fsub float %2738, %2739
  %2741 = fsub float %2690, %2740
  %2742 = fsub float %2731, %2739
  %2743 = fadd float %2742, %2741
  %2744 = fadd float %2738, %2737
  %2745 = fadd float %2732, %2744
  %2746 = fsub float %2745, %2732
  %2747 = fsub float %2744, %2746
  %2748 = fadd float %2743, %2747
  %2749 = fadd float %2745, %2748
  %2750 = fsub float %2749, %2745
  %2751 = fsub float %2748, %2750
  %2752 = fmul float %2749, 2.000000e+00
  %2753 = fneg float %2752
  %2754 = tail call float @llvm.fma.f32(float %2749, float 2.000000e+00, float %2753)
  %2755 = fmul float %2749, 0.000000e+00
  %2756 = tail call float @llvm.fma.f32(float %2751, float 2.000000e+00, float %2755)
  %2757 = fadd float %2754, %2756
  %2758 = fadd float %2752, %2757
  %2759 = fsub float %2758, %2752
  %2760 = fsub float %2757, %2759
  %2761 = tail call float @llvm.fabs.f32(float %2752) #3
  %2762 = fcmp oeq float %2761, 0x7FF0000000000000
  %2763 = select i1 %2762, float %2752, float %2758
  %2764 = tail call float @llvm.fabs.f32(float %2763) #3
  %2765 = fcmp oeq float %2764, 0x7FF0000000000000
  %2766 = select i1 %2765, float 0.000000e+00, float %2760
  %2767 = fcmp oeq float %2763, 0x40562E4300000000
  %2768 = select i1 %2767, float 0x3EE0000000000000, float 0.000000e+00
  %2769 = fsub float %2763, %2768
  %2770 = fadd float %2768, %2766
  %2771 = fmul float %2769, 0x3FF7154760000000
  %2772 = tail call float @llvm.rint.f32(float %2771)
  %2773 = fcmp ogt float %2769, 0x40562E4300000000
  %2774 = fcmp olt float %2769, 0xC059D1DA00000000
  %2775 = fneg float %2771
  %2776 = tail call float @llvm.fma.f32(float %2769, float 0x3FF7154760000000, float %2775)
  %2777 = tail call float @llvm.fma.f32(float %2769, float 0x3E54AE0BE0000000, float %2776)
  %2778 = fsub float %2771, %2772
  %2779 = fadd float %2777, %2778
  %2780 = tail call float @llvm.exp2.f32(float %2779)
  %2781 = fptosi float %2772 to i32
  %2782 = tail call float @llvm.amdgcn.ldexp.f32(float %2780, i32 %2781)
  %2783 = select i1 %2774, float 0.000000e+00, float %2782
  %2784 = select i1 %2773, float 0x7FF0000000000000, float %2783
  %2785 = tail call float @llvm.fma.f32(float %2784, float %2770, float %2784)
  %2786 = tail call float @llvm.fabs.f32(float %2784) #3
  %2787 = fcmp oeq float %2786, 0x7FF0000000000000
  %2788 = select i1 %2787, float %2784, float %2785
  %2789 = tail call float @llvm.fabs.f32(float %2788)
  %2790 = fcmp oeq float %2644, 0x7FF0000000000000
  %2791 = fcmp oeq float %2643, 0.000000e+00
  %2792 = fcmp uno float %2643, 0.000000e+00
  %2793 = fmul contract float %2789, 1.000000e+01
  %2794 = fadd contract float %2793, 1.000000e+00
  %2795 = select i1 %2790, float 0x7FF0000000000000, float %2794
  %2796 = select i1 %2791, float 1.000000e+00, float %2795
  %2797 = select i1 %2792, float 0x7FF8000000000000, float %2796
  %2798 = fmul contract float %2500, %2797
  %2799 = fadd contract float %2336, %2798
  br i1 %2334, label %2333, label %2800, !llvm.loop !9

2800:                                             ; preds = %2618
  %2801 = load float, float addrspace(1)* %0, align 4, !tbaa !4
  %2802 = fadd contract float %2801, -1.000000e+00
  %2803 = fmul contract float %2802, 2.500000e-01
  %2804 = fadd contract float %2803, 1.000000e+00
  %2805 = load float, float addrspace(1)* %3, align 4, !tbaa !4
  %2806 = fadd contract float %2805, -1.000000e+00
  %2807 = fmul contract float %2806, 2.500000e-01
  %2808 = fadd contract float %2807, 1.000000e+00
  %2809 = fmul contract float %2804, 0x400921CAC0000000
  %2810 = tail call float @llvm.fabs.f32(float %2809)
  %2811 = fcmp olt float %2810, 1.310720e+05
  br i1 %2811, label %2918, label %2812

2812:                                             ; preds = %2800
  %2813 = bitcast float %2810 to i32
  %2814 = lshr i32 %2813, 23
  %2815 = and i32 %2813, 8388607
  %2816 = or i32 %2815, 8388608
  %2817 = zext i32 %2816 to i64
  %2818 = mul nuw nsw i64 %2817, 4266746795
  %2819 = trunc i64 %2818 to i32
  %2820 = lshr i64 %2818, 32
  %2821 = mul nuw nsw i64 %2817, 1011060801
  %2822 = add nuw nsw i64 %2820, %2821
  %2823 = trunc i64 %2822 to i32
  %2824 = lshr i64 %2822, 32
  %2825 = mul nuw nsw i64 %2817, 3680671129
  %2826 = add nuw nsw i64 %2824, %2825
  %2827 = trunc i64 %2826 to i32
  %2828 = lshr i64 %2826, 32
  %2829 = mul nuw nsw i64 %2817, 4113882560
  %2830 = add nuw nsw i64 %2828, %2829
  %2831 = trunc i64 %2830 to i32
  %2832 = lshr i64 %2830, 32
  %2833 = mul nuw nsw i64 %2817, 4230436817
  %2834 = add nuw nsw i64 %2832, %2833
  %2835 = trunc i64 %2834 to i32
  %2836 = lshr i64 %2834, 32
  %2837 = mul nuw nsw i64 %2817, 1313084713
  %2838 = add nuw nsw i64 %2836, %2837
  %2839 = trunc i64 %2838 to i32
  %2840 = lshr i64 %2838, 32
  %2841 = mul nuw nsw i64 %2817, 2734261102
  %2842 = add nuw nsw i64 %2840, %2841
  %2843 = trunc i64 %2842 to i32
  %2844 = lshr i64 %2842, 32
  %2845 = trunc i64 %2844 to i32
  %2846 = add nsw i32 %2814, -120
  %2847 = icmp ugt i32 %2846, 63
  %2848 = select i1 %2847, i32 %2839, i32 %2845
  %2849 = select i1 %2847, i32 %2835, i32 %2843
  %2850 = select i1 %2847, i32 %2831, i32 %2839
  %2851 = select i1 %2847, i32 %2827, i32 %2835
  %2852 = select i1 %2847, i32 %2823, i32 %2831
  %2853 = select i1 %2847, i32 %2819, i32 %2827
  %2854 = select i1 %2847, i32 -64, i32 0
  %2855 = add nsw i32 %2854, %2846
  %2856 = icmp ugt i32 %2855, 31
  %2857 = select i1 %2856, i32 %2849, i32 %2848
  %2858 = select i1 %2856, i32 %2850, i32 %2849
  %2859 = select i1 %2856, i32 %2851, i32 %2850
  %2860 = select i1 %2856, i32 %2852, i32 %2851
  %2861 = select i1 %2856, i32 %2853, i32 %2852
  %2862 = select i1 %2856, i32 -32, i32 0
  %2863 = add nsw i32 %2862, %2855
  %2864 = icmp ugt i32 %2863, 31
  %2865 = select i1 %2864, i32 %2858, i32 %2857
  %2866 = select i1 %2864, i32 %2859, i32 %2858
  %2867 = select i1 %2864, i32 %2860, i32 %2859
  %2868 = select i1 %2864, i32 %2861, i32 %2860
  %2869 = select i1 %2864, i32 -32, i32 0
  %2870 = add nsw i32 %2869, %2863
  %2871 = icmp eq i32 %2870, 0
  %2872 = sub nsw i32 32, %2870
  %2873 = tail call i32 @llvm.fshr.i32(i32 %2865, i32 %2866, i32 %2872)
  %2874 = tail call i32 @llvm.fshr.i32(i32 %2866, i32 %2867, i32 %2872)
  %2875 = tail call i32 @llvm.fshr.i32(i32 %2867, i32 %2868, i32 %2872)
  %2876 = select i1 %2871, i32 %2865, i32 %2873
  %2877 = select i1 %2871, i32 %2866, i32 %2874
  %2878 = select i1 %2871, i32 %2867, i32 %2875
  %2879 = lshr i32 %2876, 29
  %2880 = tail call i32 @llvm.fshl.i32(i32 %2876, i32 %2877, i32 2)
  %2881 = tail call i32 @llvm.fshl.i32(i32 %2877, i32 %2878, i32 2)
  %2882 = tail call i32 @llvm.fshl.i32(i32 %2878, i32 %2868, i32 2)
  %2883 = and i32 %2879, 1
  %2884 = sub nsw i32 0, %2883
  %2885 = shl i32 %2879, 31
  %2886 = xor i32 %2880, %2884
  %2887 = xor i32 %2881, %2884
  %2888 = xor i32 %2882, %2884
  %2889 = tail call i32 @llvm.ctlz.i32(i32 %2886, i1 false), !range !8
  %2890 = sub nsw i32 31, %2889
  %2891 = tail call i32 @llvm.fshr.i32(i32 %2886, i32 %2887, i32 %2890)
  %2892 = tail call i32 @llvm.fshr.i32(i32 %2887, i32 %2888, i32 %2890)
  %2893 = shl nuw nsw i32 %2889, 23
  %2894 = sub nuw nsw i32 1056964608, %2893
  %2895 = lshr i32 %2891, 9
  %2896 = or i32 %2895, %2894
  %2897 = or i32 %2896, %2885
  %2898 = bitcast i32 %2897 to float
  %2899 = tail call i32 @llvm.fshl.i32(i32 %2891, i32 %2892, i32 23)
  %2900 = tail call i32 @llvm.ctlz.i32(i32 %2899, i1 false), !range !8
  %2901 = fmul float %2898, 0x3FF921FB40000000
  %2902 = add nuw nsw i32 %2900, %2889
  %2903 = shl nuw nsw i32 %2902, 23
  %2904 = sub nuw nsw i32 855638016, %2903
  %2905 = sub nsw i32 31, %2900
  %2906 = tail call i32 @llvm.fshr.i32(i32 %2899, i32 %2892, i32 %2905)
  %2907 = lshr i32 %2906, 9
  %2908 = or i32 %2904, %2907
  %2909 = or i32 %2908, %2885
  %2910 = bitcast i32 %2909 to float
  %2911 = fneg float %2901
  %2912 = tail call float @llvm.fma.f32(float %2898, float 0x3FF921FB40000000, float %2911)
  %2913 = tail call float @llvm.fma.f32(float %2898, float 0x3E74442D00000000, float %2912)
  %2914 = tail call float @llvm.fma.f32(float %2910, float 0x3FF921FB40000000, float %2913)
  %2915 = fadd float %2901, %2914
  %2916 = lshr i32 %2876, 30
  %2917 = add nuw nsw i32 %2883, %2916
  br label %2926

2918:                                             ; preds = %2800
  %2919 = fmul float %2810, 0x3FE45F3060000000
  %2920 = tail call float @llvm.rint.f32(float %2919)
  %2921 = tail call float @llvm.fma.f32(float %2920, float 0xBFF921FB40000000, float %2810)
  %2922 = tail call float @llvm.fma.f32(float %2920, float 0xBE74442D00000000, float %2921)
  %2923 = tail call float @llvm.fma.f32(float %2920, float 0xBCF8469880000000, float %2922)
  %2924 = fptosi float %2920 to i32
  %2925 = bitcast float %2810 to i32
  br label %2926

2926:                                             ; preds = %2918, %2812
  %2927 = phi i32 [ %2925, %2918 ], [ %2813, %2812 ]
  %2928 = phi float [ %2923, %2918 ], [ %2915, %2812 ]
  %2929 = phi i32 [ %2924, %2918 ], [ %2917, %2812 ]
  %2930 = fmul float %2928, %2928
  %2931 = tail call float @llvm.fmuladd.f32(float %2930, float 0xBF29833040000000, float 0x3F81103880000000)
  %2932 = tail call float @llvm.fmuladd.f32(float %2930, float %2931, float 0xBFC55553A0000000)
  %2933 = fmul float %2930, %2932
  %2934 = tail call float @llvm.fmuladd.f32(float %2928, float %2933, float %2928)
  %2935 = tail call float @llvm.fmuladd.f32(float %2930, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %2936 = tail call float @llvm.fmuladd.f32(float %2930, float %2935, float 0x3FA5557EE0000000)
  %2937 = tail call float @llvm.fmuladd.f32(float %2930, float %2936, float 0xBFE0000080000000)
  %2938 = tail call float @llvm.fmuladd.f32(float %2930, float %2937, float 1.000000e+00)
  %2939 = and i32 %2929, 1
  %2940 = icmp eq i32 %2939, 0
  %2941 = select i1 %2940, float %2934, float %2938
  %2942 = bitcast float %2941 to i32
  %2943 = shl i32 %2929, 30
  %2944 = and i32 %2943, -2147483648
  %2945 = bitcast float %2809 to i32
  %2946 = xor i32 %2927, %2945
  %2947 = xor i32 %2946, %2944
  %2948 = xor i32 %2947, %2942
  %2949 = bitcast i32 %2948 to float
  %2950 = tail call i1 @llvm.amdgcn.class.f32(float %2810, i32 504)
  %2951 = select i1 %2950, float %2949, float 0x7FF8000000000000
  %2952 = tail call float @llvm.fabs.f32(float %2951)
  %2953 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2952)
  %2954 = fcmp olt float %2953, 0x3FE5555560000000
  %2955 = zext i1 %2954 to i32
  %2956 = tail call float @llvm.amdgcn.ldexp.f32(float %2953, i32 %2955)
  %2957 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2952)
  %2958 = sub nsw i32 %2957, %2955
  %2959 = fadd float %2956, -1.000000e+00
  %2960 = fadd float %2956, 1.000000e+00
  %2961 = fadd float %2960, -1.000000e+00
  %2962 = fsub float %2956, %2961
  %2963 = tail call float @llvm.amdgcn.rcp.f32(float %2960)
  %2964 = fmul float %2959, %2963
  %2965 = fmul float %2960, %2964
  %2966 = fneg float %2965
  %2967 = tail call float @llvm.fma.f32(float %2964, float %2960, float %2966)
  %2968 = tail call float @llvm.fma.f32(float %2964, float %2962, float %2967)
  %2969 = fadd float %2965, %2968
  %2970 = fsub float %2969, %2965
  %2971 = fsub float %2968, %2970
  %2972 = fsub float %2959, %2969
  %2973 = fsub float %2959, %2972
  %2974 = fsub float %2973, %2969
  %2975 = fsub float %2974, %2971
  %2976 = fadd float %2972, %2975
  %2977 = fmul float %2963, %2976
  %2978 = fadd float %2964, %2977
  %2979 = fsub float %2978, %2964
  %2980 = fsub float %2977, %2979
  %2981 = fmul float %2978, %2978
  %2982 = fneg float %2981
  %2983 = tail call float @llvm.fma.f32(float %2978, float %2978, float %2982)
  %2984 = fmul float %2980, 2.000000e+00
  %2985 = tail call float @llvm.fma.f32(float %2978, float %2984, float %2983)
  %2986 = fadd float %2981, %2985
  %2987 = fsub float %2986, %2981
  %2988 = fsub float %2985, %2987
  %2989 = tail call float @llvm.fmuladd.f32(float %2986, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2990 = tail call float @llvm.fmuladd.f32(float %2986, float %2989, float 0x3FD999BDE0000000)
  %2991 = sitofp i32 %2958 to float
  %2992 = fmul float %2991, 0x3FE62E4300000000
  %2993 = fneg float %2992
  %2994 = tail call float @llvm.fma.f32(float %2991, float 0x3FE62E4300000000, float %2993)
  %2995 = tail call float @llvm.fma.f32(float %2991, float 0xBE205C6100000000, float %2994)
  %2996 = fadd float %2992, %2995
  %2997 = fsub float %2996, %2992
  %2998 = fsub float %2995, %2997
  %2999 = tail call float @llvm.amdgcn.ldexp.f32(float %2978, i32 1)
  %3000 = fmul float %2978, %2986
  %3001 = fneg float %3000
  %3002 = tail call float @llvm.fma.f32(float %2986, float %2978, float %3001)
  %3003 = tail call float @llvm.fma.f32(float %2986, float %2980, float %3002)
  %3004 = tail call float @llvm.fma.f32(float %2988, float %2978, float %3003)
  %3005 = fadd float %3000, %3004
  %3006 = fsub float %3005, %3000
  %3007 = fsub float %3004, %3006
  %3008 = fmul float %2986, %2990
  %3009 = fneg float %3008
  %3010 = tail call float @llvm.fma.f32(float %2986, float %2990, float %3009)
  %3011 = tail call float @llvm.fma.f32(float %2988, float %2990, float %3010)
  %3012 = fadd float %3008, %3011
  %3013 = fsub float %3012, %3008
  %3014 = fsub float %3011, %3013
  %3015 = fadd float %3012, 0x3FE5555540000000
  %3016 = fadd float %3015, 0xBFE5555540000000
  %3017 = fsub float %3012, %3016
  %3018 = fadd float %3014, 0x3E2E720200000000
  %3019 = fadd float %3018, %3017
  %3020 = fadd float %3015, %3019
  %3021 = fsub float %3020, %3015
  %3022 = fsub float %3019, %3021
  %3023 = fmul float %3005, %3020
  %3024 = fneg float %3023
  %3025 = tail call float @llvm.fma.f32(float %3005, float %3020, float %3024)
  %3026 = tail call float @llvm.fma.f32(float %3005, float %3022, float %3025)
  %3027 = tail call float @llvm.fma.f32(float %3007, float %3020, float %3026)
  %3028 = tail call float @llvm.amdgcn.ldexp.f32(float %2980, i32 1)
  %3029 = fadd float %3023, %3027
  %3030 = fsub float %3029, %3023
  %3031 = fsub float %3027, %3030
  %3032 = fadd float %2999, %3029
  %3033 = fsub float %3032, %2999
  %3034 = fsub float %3029, %3033
  %3035 = fadd float %3028, %3031
  %3036 = fadd float %3035, %3034
  %3037 = fadd float %3032, %3036
  %3038 = fsub float %3037, %3032
  %3039 = fsub float %3036, %3038
  %3040 = fadd float %2996, %3037
  %3041 = fsub float %3040, %2996
  %3042 = fsub float %3040, %3041
  %3043 = fsub float %2996, %3042
  %3044 = fsub float %3037, %3041
  %3045 = fadd float %3044, %3043
  %3046 = fadd float %2998, %3039
  %3047 = fsub float %3046, %2998
  %3048 = fsub float %3046, %3047
  %3049 = fsub float %2998, %3048
  %3050 = fsub float %3039, %3047
  %3051 = fadd float %3050, %3049
  %3052 = fadd float %3046, %3045
  %3053 = fadd float %3040, %3052
  %3054 = fsub float %3053, %3040
  %3055 = fsub float %3052, %3054
  %3056 = fadd float %3051, %3055
  %3057 = fadd float %3053, %3056
  %3058 = fsub float %3057, %3053
  %3059 = fsub float %3056, %3058
  %3060 = fmul float %3057, 2.000000e+00
  %3061 = fneg float %3060
  %3062 = tail call float @llvm.fma.f32(float %3057, float 2.000000e+00, float %3061)
  %3063 = fmul float %3057, 0.000000e+00
  %3064 = tail call float @llvm.fma.f32(float %3059, float 2.000000e+00, float %3063)
  %3065 = fadd float %3062, %3064
  %3066 = fadd float %3060, %3065
  %3067 = fsub float %3066, %3060
  %3068 = fsub float %3065, %3067
  %3069 = tail call float @llvm.fabs.f32(float %3060) #3
  %3070 = fcmp oeq float %3069, 0x7FF0000000000000
  %3071 = select i1 %3070, float %3060, float %3066
  %3072 = tail call float @llvm.fabs.f32(float %3071) #3
  %3073 = fcmp oeq float %3072, 0x7FF0000000000000
  %3074 = select i1 %3073, float 0.000000e+00, float %3068
  %3075 = fcmp oeq float %3071, 0x40562E4300000000
  %3076 = select i1 %3075, float 0x3EE0000000000000, float 0.000000e+00
  %3077 = fsub float %3071, %3076
  %3078 = fadd float %3076, %3074
  %3079 = fmul float %3077, 0x3FF7154760000000
  %3080 = tail call float @llvm.rint.f32(float %3079)
  %3081 = fcmp ogt float %3077, 0x40562E4300000000
  %3082 = fcmp olt float %3077, 0xC059D1DA00000000
  %3083 = fneg float %3079
  %3084 = tail call float @llvm.fma.f32(float %3077, float 0x3FF7154760000000, float %3083)
  %3085 = tail call float @llvm.fma.f32(float %3077, float 0x3E54AE0BE0000000, float %3084)
  %3086 = fsub float %3079, %3080
  %3087 = fadd float %3085, %3086
  %3088 = tail call float @llvm.exp2.f32(float %3087)
  %3089 = fptosi float %3080 to i32
  %3090 = tail call float @llvm.amdgcn.ldexp.f32(float %3088, i32 %3089)
  %3091 = select i1 %3082, float 0.000000e+00, float %3090
  %3092 = select i1 %3081, float 0x7FF0000000000000, float %3091
  %3093 = tail call float @llvm.fma.f32(float %3092, float %3078, float %3092)
  %3094 = tail call float @llvm.fabs.f32(float %3092) #3
  %3095 = fcmp oeq float %3094, 0x7FF0000000000000
  %3096 = select i1 %3095, float %3092, float %3093
  %3097 = tail call float @llvm.fabs.f32(float %3096)
  %3098 = fcmp oeq float %2952, 0x7FF0000000000000
  %3099 = fcmp oeq float %2951, 0.000000e+00
  %3100 = select i1 %3098, float 0x7FF0000000000000, float %3097
  %3101 = select i1 %3099, float 0.000000e+00, float %3100
  %3102 = fcmp uno float %2951, 0.000000e+00
  %3103 = select i1 %3102, float 0x7FF8000000000000, float %3101
  %3104 = fadd contract float %2808, -1.000000e+00
  %3105 = tail call float @llvm.fabs.f32(float %3104)
  %3106 = tail call float @llvm.amdgcn.frexp.mant.f32(float %3105)
  %3107 = fcmp olt float %3106, 0x3FE5555560000000
  %3108 = zext i1 %3107 to i32
  %3109 = tail call float @llvm.amdgcn.ldexp.f32(float %3106, i32 %3108)
  %3110 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %3105)
  %3111 = sub nsw i32 %3110, %3108
  %3112 = fadd float %3109, -1.000000e+00
  %3113 = fadd float %3109, 1.000000e+00
  %3114 = fadd float %3113, -1.000000e+00
  %3115 = fsub float %3109, %3114
  %3116 = tail call float @llvm.amdgcn.rcp.f32(float %3113)
  %3117 = fmul float %3112, %3116
  %3118 = fmul float %3113, %3117
  %3119 = fneg float %3118
  %3120 = tail call float @llvm.fma.f32(float %3117, float %3113, float %3119)
  %3121 = tail call float @llvm.fma.f32(float %3117, float %3115, float %3120)
  %3122 = fadd float %3118, %3121
  %3123 = fsub float %3122, %3118
  %3124 = fsub float %3121, %3123
  %3125 = fsub float %3112, %3122
  %3126 = fsub float %3112, %3125
  %3127 = fsub float %3126, %3122
  %3128 = fsub float %3127, %3124
  %3129 = fadd float %3125, %3128
  %3130 = fmul float %3116, %3129
  %3131 = fadd float %3117, %3130
  %3132 = fsub float %3131, %3117
  %3133 = fsub float %3130, %3132
  %3134 = fmul float %3131, %3131
  %3135 = fneg float %3134
  %3136 = tail call float @llvm.fma.f32(float %3131, float %3131, float %3135)
  %3137 = fmul float %3133, 2.000000e+00
  %3138 = tail call float @llvm.fma.f32(float %3131, float %3137, float %3136)
  %3139 = fadd float %3134, %3138
  %3140 = fsub float %3139, %3134
  %3141 = fsub float %3138, %3140
  %3142 = tail call float @llvm.fmuladd.f32(float %3139, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %3143 = tail call float @llvm.fmuladd.f32(float %3139, float %3142, float 0x3FD999BDE0000000)
  %3144 = sitofp i32 %3111 to float
  %3145 = fmul float %3144, 0x3FE62E4300000000
  %3146 = fneg float %3145
  %3147 = tail call float @llvm.fma.f32(float %3144, float 0x3FE62E4300000000, float %3146)
  %3148 = tail call float @llvm.fma.f32(float %3144, float 0xBE205C6100000000, float %3147)
  %3149 = fadd float %3145, %3148
  %3150 = fsub float %3149, %3145
  %3151 = fsub float %3148, %3150
  %3152 = tail call float @llvm.amdgcn.ldexp.f32(float %3131, i32 1)
  %3153 = fmul float %3131, %3139
  %3154 = fneg float %3153
  %3155 = tail call float @llvm.fma.f32(float %3139, float %3131, float %3154)
  %3156 = tail call float @llvm.fma.f32(float %3139, float %3133, float %3155)
  %3157 = tail call float @llvm.fma.f32(float %3141, float %3131, float %3156)
  %3158 = fadd float %3153, %3157
  %3159 = fsub float %3158, %3153
  %3160 = fsub float %3157, %3159
  %3161 = fmul float %3139, %3143
  %3162 = fneg float %3161
  %3163 = tail call float @llvm.fma.f32(float %3139, float %3143, float %3162)
  %3164 = tail call float @llvm.fma.f32(float %3141, float %3143, float %3163)
  %3165 = fadd float %3161, %3164
  %3166 = fsub float %3165, %3161
  %3167 = fsub float %3164, %3166
  %3168 = fadd float %3165, 0x3FE5555540000000
  %3169 = fadd float %3168, 0xBFE5555540000000
  %3170 = fsub float %3165, %3169
  %3171 = fadd float %3167, 0x3E2E720200000000
  %3172 = fadd float %3171, %3170
  %3173 = fadd float %3168, %3172
  %3174 = fsub float %3173, %3168
  %3175 = fsub float %3172, %3174
  %3176 = fmul float %3158, %3173
  %3177 = fneg float %3176
  %3178 = tail call float @llvm.fma.f32(float %3158, float %3173, float %3177)
  %3179 = tail call float @llvm.fma.f32(float %3158, float %3175, float %3178)
  %3180 = tail call float @llvm.fma.f32(float %3160, float %3173, float %3179)
  %3181 = tail call float @llvm.amdgcn.ldexp.f32(float %3133, i32 1)
  %3182 = fadd float %3176, %3180
  %3183 = fsub float %3182, %3176
  %3184 = fsub float %3180, %3183
  %3185 = fadd float %3152, %3182
  %3186 = fsub float %3185, %3152
  %3187 = fsub float %3182, %3186
  %3188 = fadd float %3181, %3184
  %3189 = fadd float %3188, %3187
  %3190 = fadd float %3185, %3189
  %3191 = fsub float %3190, %3185
  %3192 = fsub float %3189, %3191
  %3193 = fadd float %3149, %3190
  %3194 = fsub float %3193, %3149
  %3195 = fsub float %3193, %3194
  %3196 = fsub float %3149, %3195
  %3197 = fsub float %3190, %3194
  %3198 = fadd float %3197, %3196
  %3199 = fadd float %3151, %3192
  %3200 = fsub float %3199, %3151
  %3201 = fsub float %3199, %3200
  %3202 = fsub float %3151, %3201
  %3203 = fsub float %3192, %3200
  %3204 = fadd float %3203, %3202
  %3205 = fadd float %3199, %3198
  %3206 = fadd float %3193, %3205
  %3207 = fsub float %3206, %3193
  %3208 = fsub float %3205, %3207
  %3209 = fadd float %3204, %3208
  %3210 = fadd float %3206, %3209
  %3211 = fsub float %3210, %3206
  %3212 = fsub float %3209, %3211
  %3213 = fmul float %3210, 2.000000e+00
  %3214 = fneg float %3213
  %3215 = tail call float @llvm.fma.f32(float %3210, float 2.000000e+00, float %3214)
  %3216 = fmul float %3210, 0.000000e+00
  %3217 = tail call float @llvm.fma.f32(float %3212, float 2.000000e+00, float %3216)
  %3218 = fadd float %3215, %3217
  %3219 = fadd float %3213, %3218
  %3220 = fsub float %3219, %3213
  %3221 = fsub float %3218, %3220
  %3222 = tail call float @llvm.fabs.f32(float %3213) #3
  %3223 = fcmp oeq float %3222, 0x7FF0000000000000
  %3224 = select i1 %3223, float %3213, float %3219
  %3225 = tail call float @llvm.fabs.f32(float %3224) #3
  %3226 = fcmp oeq float %3225, 0x7FF0000000000000
  %3227 = select i1 %3226, float 0.000000e+00, float %3221
  %3228 = fcmp oeq float %3224, 0x40562E4300000000
  %3229 = select i1 %3228, float 0x3EE0000000000000, float 0.000000e+00
  %3230 = fsub float %3224, %3229
  %3231 = fadd float %3229, %3227
  %3232 = fmul float %3230, 0x3FF7154760000000
  %3233 = tail call float @llvm.rint.f32(float %3232)
  %3234 = fcmp ogt float %3230, 0x40562E4300000000
  %3235 = fcmp olt float %3230, 0xC059D1DA00000000
  %3236 = fneg float %3232
  %3237 = tail call float @llvm.fma.f32(float %3230, float 0x3FF7154760000000, float %3236)
  %3238 = tail call float @llvm.fma.f32(float %3230, float 0x3E54AE0BE0000000, float %3237)
  %3239 = fsub float %3232, %3233
  %3240 = fadd float %3238, %3239
  %3241 = tail call float @llvm.exp2.f32(float %3240)
  %3242 = fptosi float %3233 to i32
  %3243 = tail call float @llvm.amdgcn.ldexp.f32(float %3241, i32 %3242)
  %3244 = select i1 %3235, float 0.000000e+00, float %3243
  %3245 = select i1 %3234, float 0x7FF0000000000000, float %3244
  %3246 = tail call float @llvm.fma.f32(float %3245, float %3231, float %3245)
  %3247 = tail call float @llvm.fabs.f32(float %3245) #3
  %3248 = fcmp oeq float %3247, 0x7FF0000000000000
  %3249 = select i1 %3248, float %3245, float %3246
  %3250 = tail call float @llvm.fabs.f32(float %3249)
  %3251 = fcmp oeq float %3105, 0x7FF0000000000000
  %3252 = fcmp oeq float %3104, 0.000000e+00
  %3253 = select i1 %3251, float 0x7FF0000000000000, float %3250
  %3254 = select i1 %3252, float 0.000000e+00, float %3253
  %3255 = fcmp uno float %3104, 0.000000e+00
  %3256 = select i1 %3255, float 0x7FF8000000000000, float %3254
  %3257 = fadd contract float %3256, %3103
  %3258 = fadd contract float %3257, 0.000000e+00
  br label %3259

3259:                                             ; preds = %3546, %2926
  %3260 = phi i1 [ true, %2926 ], [ false, %3546 ]
  %3261 = phi i32 [ 0, %2926 ], [ 1, %3546 ]
  %3262 = phi float [ %3258, %2926 ], [ %3727, %3546 ]
  %3263 = zext i32 %3261 to i64
  %3264 = getelementptr inbounds float, float addrspace(1)* %0, i64 %3263
  %3265 = load float, float addrspace(1)* %3264, align 4, !tbaa !4
  %3266 = fadd contract float %3265, -1.000000e+00
  %3267 = fmul contract float %3266, 2.500000e-01
  %3268 = fadd contract float %3267, 1.000000e+00
  %3269 = add nuw nsw i32 %3261, 1
  %3270 = zext i32 %3269 to i64
  %3271 = getelementptr inbounds float, float addrspace(1)* %0, i64 %3270
  %3272 = load float, float addrspace(1)* %3271, align 4, !tbaa !4
  %3273 = fadd contract float %3272, -1.000000e+00
  %3274 = fmul contract float %3273, 2.500000e-01
  %3275 = fadd contract float %3274, 1.000000e+00
  %3276 = fadd contract float %3268, -1.000000e+00
  %3277 = tail call float @llvm.fabs.f32(float %3276)
  %3278 = tail call float @llvm.amdgcn.frexp.mant.f32(float %3277)
  %3279 = fcmp olt float %3278, 0x3FE5555560000000
  %3280 = zext i1 %3279 to i32
  %3281 = tail call float @llvm.amdgcn.ldexp.f32(float %3278, i32 %3280)
  %3282 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %3277)
  %3283 = sub nsw i32 %3282, %3280
  %3284 = fadd float %3281, -1.000000e+00
  %3285 = fadd float %3281, 1.000000e+00
  %3286 = fadd float %3285, -1.000000e+00
  %3287 = fsub float %3281, %3286
  %3288 = tail call float @llvm.amdgcn.rcp.f32(float %3285)
  %3289 = fmul float %3284, %3288
  %3290 = fmul float %3285, %3289
  %3291 = fneg float %3290
  %3292 = tail call float @llvm.fma.f32(float %3289, float %3285, float %3291)
  %3293 = tail call float @llvm.fma.f32(float %3289, float %3287, float %3292)
  %3294 = fadd float %3290, %3293
  %3295 = fsub float %3294, %3290
  %3296 = fsub float %3293, %3295
  %3297 = fsub float %3284, %3294
  %3298 = fsub float %3284, %3297
  %3299 = fsub float %3298, %3294
  %3300 = fsub float %3299, %3296
  %3301 = fadd float %3297, %3300
  %3302 = fmul float %3288, %3301
  %3303 = fadd float %3289, %3302
  %3304 = fsub float %3303, %3289
  %3305 = fsub float %3302, %3304
  %3306 = fmul float %3303, %3303
  %3307 = fneg float %3306
  %3308 = tail call float @llvm.fma.f32(float %3303, float %3303, float %3307)
  %3309 = fmul float %3305, 2.000000e+00
  %3310 = tail call float @llvm.fma.f32(float %3303, float %3309, float %3308)
  %3311 = fadd float %3306, %3310
  %3312 = fsub float %3311, %3306
  %3313 = fsub float %3310, %3312
  %3314 = tail call float @llvm.fmuladd.f32(float %3311, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %3315 = tail call float @llvm.fmuladd.f32(float %3311, float %3314, float 0x3FD999BDE0000000)
  %3316 = sitofp i32 %3283 to float
  %3317 = fmul float %3316, 0x3FE62E4300000000
  %3318 = fneg float %3317
  %3319 = tail call float @llvm.fma.f32(float %3316, float 0x3FE62E4300000000, float %3318)
  %3320 = tail call float @llvm.fma.f32(float %3316, float 0xBE205C6100000000, float %3319)
  %3321 = fadd float %3317, %3320
  %3322 = fsub float %3321, %3317
  %3323 = fsub float %3320, %3322
  %3324 = tail call float @llvm.amdgcn.ldexp.f32(float %3303, i32 1)
  %3325 = fmul float %3303, %3311
  %3326 = fneg float %3325
  %3327 = tail call float @llvm.fma.f32(float %3311, float %3303, float %3326)
  %3328 = tail call float @llvm.fma.f32(float %3311, float %3305, float %3327)
  %3329 = tail call float @llvm.fma.f32(float %3313, float %3303, float %3328)
  %3330 = fadd float %3325, %3329
  %3331 = fsub float %3330, %3325
  %3332 = fsub float %3329, %3331
  %3333 = fmul float %3311, %3315
  %3334 = fneg float %3333
  %3335 = tail call float @llvm.fma.f32(float %3311, float %3315, float %3334)
  %3336 = tail call float @llvm.fma.f32(float %3313, float %3315, float %3335)
  %3337 = fadd float %3333, %3336
  %3338 = fsub float %3337, %3333
  %3339 = fsub float %3336, %3338
  %3340 = fadd float %3337, 0x3FE5555540000000
  %3341 = fadd float %3340, 0xBFE5555540000000
  %3342 = fsub float %3337, %3341
  %3343 = fadd float %3339, 0x3E2E720200000000
  %3344 = fadd float %3343, %3342
  %3345 = fadd float %3340, %3344
  %3346 = fsub float %3345, %3340
  %3347 = fsub float %3344, %3346
  %3348 = fmul float %3330, %3345
  %3349 = fneg float %3348
  %3350 = tail call float @llvm.fma.f32(float %3330, float %3345, float %3349)
  %3351 = tail call float @llvm.fma.f32(float %3330, float %3347, float %3350)
  %3352 = tail call float @llvm.fma.f32(float %3332, float %3345, float %3351)
  %3353 = tail call float @llvm.amdgcn.ldexp.f32(float %3305, i32 1)
  %3354 = fadd float %3348, %3352
  %3355 = fsub float %3354, %3348
  %3356 = fsub float %3352, %3355
  %3357 = fadd float %3324, %3354
  %3358 = fsub float %3357, %3324
  %3359 = fsub float %3354, %3358
  %3360 = fadd float %3353, %3356
  %3361 = fadd float %3360, %3359
  %3362 = fadd float %3357, %3361
  %3363 = fsub float %3362, %3357
  %3364 = fsub float %3361, %3363
  %3365 = fadd float %3321, %3362
  %3366 = fsub float %3365, %3321
  %3367 = fsub float %3365, %3366
  %3368 = fsub float %3321, %3367
  %3369 = fsub float %3362, %3366
  %3370 = fadd float %3369, %3368
  %3371 = fadd float %3323, %3364
  %3372 = fsub float %3371, %3323
  %3373 = fsub float %3371, %3372
  %3374 = fsub float %3323, %3373
  %3375 = fsub float %3364, %3372
  %3376 = fadd float %3375, %3374
  %3377 = fadd float %3371, %3370
  %3378 = fadd float %3365, %3377
  %3379 = fsub float %3378, %3365
  %3380 = fsub float %3377, %3379
  %3381 = fadd float %3376, %3380
  %3382 = fadd float %3378, %3381
  %3383 = fsub float %3382, %3378
  %3384 = fsub float %3381, %3383
  %3385 = fmul float %3382, 2.000000e+00
  %3386 = fneg float %3385
  %3387 = tail call float @llvm.fma.f32(float %3382, float 2.000000e+00, float %3386)
  %3388 = fmul float %3382, 0.000000e+00
  %3389 = tail call float @llvm.fma.f32(float %3384, float 2.000000e+00, float %3388)
  %3390 = fadd float %3387, %3389
  %3391 = fadd float %3385, %3390
  %3392 = fsub float %3391, %3385
  %3393 = fsub float %3390, %3392
  %3394 = tail call float @llvm.fabs.f32(float %3385) #3
  %3395 = fcmp oeq float %3394, 0x7FF0000000000000
  %3396 = select i1 %3395, float %3385, float %3391
  %3397 = tail call float @llvm.fabs.f32(float %3396) #3
  %3398 = fcmp oeq float %3397, 0x7FF0000000000000
  %3399 = select i1 %3398, float 0.000000e+00, float %3393
  %3400 = fcmp oeq float %3396, 0x40562E4300000000
  %3401 = select i1 %3400, float 0x3EE0000000000000, float 0.000000e+00
  %3402 = fsub float %3396, %3401
  %3403 = fadd float %3401, %3399
  %3404 = fmul float %3402, 0x3FF7154760000000
  %3405 = tail call float @llvm.rint.f32(float %3404)
  %3406 = fcmp ogt float %3402, 0x40562E4300000000
  %3407 = fcmp olt float %3402, 0xC059D1DA00000000
  %3408 = fneg float %3404
  %3409 = tail call float @llvm.fma.f32(float %3402, float 0x3FF7154760000000, float %3408)
  %3410 = tail call float @llvm.fma.f32(float %3402, float 0x3E54AE0BE0000000, float %3409)
  %3411 = fsub float %3404, %3405
  %3412 = fadd float %3410, %3411
  %3413 = tail call float @llvm.exp2.f32(float %3412)
  %3414 = fptosi float %3405 to i32
  %3415 = tail call float @llvm.amdgcn.ldexp.f32(float %3413, i32 %3414)
  %3416 = select i1 %3407, float 0.000000e+00, float %3415
  %3417 = select i1 %3406, float 0x7FF0000000000000, float %3416
  %3418 = tail call float @llvm.fma.f32(float %3417, float %3403, float %3417)
  %3419 = tail call float @llvm.fabs.f32(float %3417) #3
  %3420 = fcmp oeq float %3419, 0x7FF0000000000000
  %3421 = select i1 %3420, float %3417, float %3418
  %3422 = tail call float @llvm.fabs.f32(float %3421)
  %3423 = fcmp oeq float %3277, 0x7FF0000000000000
  %3424 = fcmp oeq float %3276, 0.000000e+00
  %3425 = select i1 %3423, float 0x7FF0000000000000, float %3422
  %3426 = select i1 %3424, float 0.000000e+00, float %3425
  %3427 = fcmp uno float %3276, 0.000000e+00
  %3428 = select i1 %3427, float 0x7FF8000000000000, float %3426
  %3429 = fmul contract float %3275, 0x400921CAC0000000
  %3430 = tail call float @llvm.fabs.f32(float %3429)
  %3431 = fcmp olt float %3430, 1.310720e+05
  br i1 %3431, label %3538, label %3432

3432:                                             ; preds = %3259
  %3433 = bitcast float %3430 to i32
  %3434 = lshr i32 %3433, 23
  %3435 = and i32 %3433, 8388607
  %3436 = or i32 %3435, 8388608
  %3437 = zext i32 %3436 to i64
  %3438 = mul nuw nsw i64 %3437, 4266746795
  %3439 = trunc i64 %3438 to i32
  %3440 = lshr i64 %3438, 32
  %3441 = mul nuw nsw i64 %3437, 1011060801
  %3442 = add nuw nsw i64 %3440, %3441
  %3443 = trunc i64 %3442 to i32
  %3444 = lshr i64 %3442, 32
  %3445 = mul nuw nsw i64 %3437, 3680671129
  %3446 = add nuw nsw i64 %3444, %3445
  %3447 = trunc i64 %3446 to i32
  %3448 = lshr i64 %3446, 32
  %3449 = mul nuw nsw i64 %3437, 4113882560
  %3450 = add nuw nsw i64 %3448, %3449
  %3451 = trunc i64 %3450 to i32
  %3452 = lshr i64 %3450, 32
  %3453 = mul nuw nsw i64 %3437, 4230436817
  %3454 = add nuw nsw i64 %3452, %3453
  %3455 = trunc i64 %3454 to i32
  %3456 = lshr i64 %3454, 32
  %3457 = mul nuw nsw i64 %3437, 1313084713
  %3458 = add nuw nsw i64 %3456, %3457
  %3459 = trunc i64 %3458 to i32
  %3460 = lshr i64 %3458, 32
  %3461 = mul nuw nsw i64 %3437, 2734261102
  %3462 = add nuw nsw i64 %3460, %3461
  %3463 = trunc i64 %3462 to i32
  %3464 = lshr i64 %3462, 32
  %3465 = trunc i64 %3464 to i32
  %3466 = add nsw i32 %3434, -120
  %3467 = icmp ugt i32 %3466, 63
  %3468 = select i1 %3467, i32 %3459, i32 %3465
  %3469 = select i1 %3467, i32 %3455, i32 %3463
  %3470 = select i1 %3467, i32 %3451, i32 %3459
  %3471 = select i1 %3467, i32 %3447, i32 %3455
  %3472 = select i1 %3467, i32 %3443, i32 %3451
  %3473 = select i1 %3467, i32 %3439, i32 %3447
  %3474 = select i1 %3467, i32 -64, i32 0
  %3475 = add nsw i32 %3474, %3466
  %3476 = icmp ugt i32 %3475, 31
  %3477 = select i1 %3476, i32 %3469, i32 %3468
  %3478 = select i1 %3476, i32 %3470, i32 %3469
  %3479 = select i1 %3476, i32 %3471, i32 %3470
  %3480 = select i1 %3476, i32 %3472, i32 %3471
  %3481 = select i1 %3476, i32 %3473, i32 %3472
  %3482 = select i1 %3476, i32 -32, i32 0
  %3483 = add nsw i32 %3482, %3475
  %3484 = icmp ugt i32 %3483, 31
  %3485 = select i1 %3484, i32 %3478, i32 %3477
  %3486 = select i1 %3484, i32 %3479, i32 %3478
  %3487 = select i1 %3484, i32 %3480, i32 %3479
  %3488 = select i1 %3484, i32 %3481, i32 %3480
  %3489 = select i1 %3484, i32 -32, i32 0
  %3490 = add nsw i32 %3489, %3483
  %3491 = icmp eq i32 %3490, 0
  %3492 = sub nsw i32 32, %3490
  %3493 = tail call i32 @llvm.fshr.i32(i32 %3485, i32 %3486, i32 %3492)
  %3494 = tail call i32 @llvm.fshr.i32(i32 %3486, i32 %3487, i32 %3492)
  %3495 = tail call i32 @llvm.fshr.i32(i32 %3487, i32 %3488, i32 %3492)
  %3496 = select i1 %3491, i32 %3485, i32 %3493
  %3497 = select i1 %3491, i32 %3486, i32 %3494
  %3498 = select i1 %3491, i32 %3487, i32 %3495
  %3499 = lshr i32 %3496, 29
  %3500 = tail call i32 @llvm.fshl.i32(i32 %3496, i32 %3497, i32 2)
  %3501 = tail call i32 @llvm.fshl.i32(i32 %3497, i32 %3498, i32 2)
  %3502 = tail call i32 @llvm.fshl.i32(i32 %3498, i32 %3488, i32 2)
  %3503 = and i32 %3499, 1
  %3504 = sub nsw i32 0, %3503
  %3505 = shl i32 %3499, 31
  %3506 = xor i32 %3500, %3504
  %3507 = xor i32 %3501, %3504
  %3508 = xor i32 %3502, %3504
  %3509 = tail call i32 @llvm.ctlz.i32(i32 %3506, i1 false), !range !8
  %3510 = sub nsw i32 31, %3509
  %3511 = tail call i32 @llvm.fshr.i32(i32 %3506, i32 %3507, i32 %3510)
  %3512 = tail call i32 @llvm.fshr.i32(i32 %3507, i32 %3508, i32 %3510)
  %3513 = shl nuw nsw i32 %3509, 23
  %3514 = sub nuw nsw i32 1056964608, %3513
  %3515 = lshr i32 %3511, 9
  %3516 = or i32 %3515, %3514
  %3517 = or i32 %3516, %3505
  %3518 = bitcast i32 %3517 to float
  %3519 = tail call i32 @llvm.fshl.i32(i32 %3511, i32 %3512, i32 23)
  %3520 = tail call i32 @llvm.ctlz.i32(i32 %3519, i1 false), !range !8
  %3521 = fmul float %3518, 0x3FF921FB40000000
  %3522 = add nuw nsw i32 %3520, %3509
  %3523 = shl nuw nsw i32 %3522, 23
  %3524 = sub nuw nsw i32 855638016, %3523
  %3525 = sub nsw i32 31, %3520
  %3526 = tail call i32 @llvm.fshr.i32(i32 %3519, i32 %3512, i32 %3525)
  %3527 = lshr i32 %3526, 9
  %3528 = or i32 %3524, %3527
  %3529 = or i32 %3528, %3505
  %3530 = bitcast i32 %3529 to float
  %3531 = fneg float %3521
  %3532 = tail call float @llvm.fma.f32(float %3518, float 0x3FF921FB40000000, float %3531)
  %3533 = tail call float @llvm.fma.f32(float %3518, float 0x3E74442D00000000, float %3532)
  %3534 = tail call float @llvm.fma.f32(float %3530, float 0x3FF921FB40000000, float %3533)
  %3535 = fadd float %3521, %3534
  %3536 = lshr i32 %3496, 30
  %3537 = add nuw nsw i32 %3503, %3536
  br label %3546

3538:                                             ; preds = %3259
  %3539 = fmul float %3430, 0x3FE45F3060000000
  %3540 = tail call float @llvm.rint.f32(float %3539)
  %3541 = tail call float @llvm.fma.f32(float %3540, float 0xBFF921FB40000000, float %3430)
  %3542 = tail call float @llvm.fma.f32(float %3540, float 0xBE74442D00000000, float %3541)
  %3543 = tail call float @llvm.fma.f32(float %3540, float 0xBCF8469880000000, float %3542)
  %3544 = fptosi float %3540 to i32
  %3545 = bitcast float %3430 to i32
  br label %3546

3546:                                             ; preds = %3538, %3432
  %3547 = phi i32 [ %3545, %3538 ], [ %3433, %3432 ]
  %3548 = phi float [ %3543, %3538 ], [ %3535, %3432 ]
  %3549 = phi i32 [ %3544, %3538 ], [ %3537, %3432 ]
  %3550 = fmul float %3548, %3548
  %3551 = tail call float @llvm.fmuladd.f32(float %3550, float 0xBF29833040000000, float 0x3F81103880000000)
  %3552 = tail call float @llvm.fmuladd.f32(float %3550, float %3551, float 0xBFC55553A0000000)
  %3553 = fmul float %3550, %3552
  %3554 = tail call float @llvm.fmuladd.f32(float %3548, float %3553, float %3548)
  %3555 = tail call float @llvm.fmuladd.f32(float %3550, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %3556 = tail call float @llvm.fmuladd.f32(float %3550, float %3555, float 0x3FA5557EE0000000)
  %3557 = tail call float @llvm.fmuladd.f32(float %3550, float %3556, float 0xBFE0000080000000)
  %3558 = tail call float @llvm.fmuladd.f32(float %3550, float %3557, float 1.000000e+00)
  %3559 = and i32 %3549, 1
  %3560 = icmp eq i32 %3559, 0
  %3561 = select i1 %3560, float %3554, float %3558
  %3562 = bitcast float %3561 to i32
  %3563 = shl i32 %3549, 30
  %3564 = and i32 %3563, -2147483648
  %3565 = bitcast float %3429 to i32
  %3566 = xor i32 %3547, %3565
  %3567 = xor i32 %3566, %3564
  %3568 = xor i32 %3567, %3562
  %3569 = bitcast i32 %3568 to float
  %3570 = tail call i1 @llvm.amdgcn.class.f32(float %3430, i32 504)
  %3571 = select i1 %3570, float %3569, float 0x7FF8000000000000
  %3572 = tail call float @llvm.fabs.f32(float %3571)
  %3573 = tail call float @llvm.amdgcn.frexp.mant.f32(float %3572)
  %3574 = fcmp olt float %3573, 0x3FE5555560000000
  %3575 = zext i1 %3574 to i32
  %3576 = tail call float @llvm.amdgcn.ldexp.f32(float %3573, i32 %3575)
  %3577 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %3572)
  %3578 = sub nsw i32 %3577, %3575
  %3579 = fadd float %3576, -1.000000e+00
  %3580 = fadd float %3576, 1.000000e+00
  %3581 = fadd float %3580, -1.000000e+00
  %3582 = fsub float %3576, %3581
  %3583 = tail call float @llvm.amdgcn.rcp.f32(float %3580)
  %3584 = fmul float %3579, %3583
  %3585 = fmul float %3580, %3584
  %3586 = fneg float %3585
  %3587 = tail call float @llvm.fma.f32(float %3584, float %3580, float %3586)
  %3588 = tail call float @llvm.fma.f32(float %3584, float %3582, float %3587)
  %3589 = fadd float %3585, %3588
  %3590 = fsub float %3589, %3585
  %3591 = fsub float %3588, %3590
  %3592 = fsub float %3579, %3589
  %3593 = fsub float %3579, %3592
  %3594 = fsub float %3593, %3589
  %3595 = fsub float %3594, %3591
  %3596 = fadd float %3592, %3595
  %3597 = fmul float %3583, %3596
  %3598 = fadd float %3584, %3597
  %3599 = fsub float %3598, %3584
  %3600 = fsub float %3597, %3599
  %3601 = fmul float %3598, %3598
  %3602 = fneg float %3601
  %3603 = tail call float @llvm.fma.f32(float %3598, float %3598, float %3602)
  %3604 = fmul float %3600, 2.000000e+00
  %3605 = tail call float @llvm.fma.f32(float %3598, float %3604, float %3603)
  %3606 = fadd float %3601, %3605
  %3607 = fsub float %3606, %3601
  %3608 = fsub float %3605, %3607
  %3609 = tail call float @llvm.fmuladd.f32(float %3606, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %3610 = tail call float @llvm.fmuladd.f32(float %3606, float %3609, float 0x3FD999BDE0000000)
  %3611 = sitofp i32 %3578 to float
  %3612 = fmul float %3611, 0x3FE62E4300000000
  %3613 = fneg float %3612
  %3614 = tail call float @llvm.fma.f32(float %3611, float 0x3FE62E4300000000, float %3613)
  %3615 = tail call float @llvm.fma.f32(float %3611, float 0xBE205C6100000000, float %3614)
  %3616 = fadd float %3612, %3615
  %3617 = fsub float %3616, %3612
  %3618 = fsub float %3615, %3617
  %3619 = tail call float @llvm.amdgcn.ldexp.f32(float %3598, i32 1)
  %3620 = fmul float %3598, %3606
  %3621 = fneg float %3620
  %3622 = tail call float @llvm.fma.f32(float %3606, float %3598, float %3621)
  %3623 = tail call float @llvm.fma.f32(float %3606, float %3600, float %3622)
  %3624 = tail call float @llvm.fma.f32(float %3608, float %3598, float %3623)
  %3625 = fadd float %3620, %3624
  %3626 = fsub float %3625, %3620
  %3627 = fsub float %3624, %3626
  %3628 = fmul float %3606, %3610
  %3629 = fneg float %3628
  %3630 = tail call float @llvm.fma.f32(float %3606, float %3610, float %3629)
  %3631 = tail call float @llvm.fma.f32(float %3608, float %3610, float %3630)
  %3632 = fadd float %3628, %3631
  %3633 = fsub float %3632, %3628
  %3634 = fsub float %3631, %3633
  %3635 = fadd float %3632, 0x3FE5555540000000
  %3636 = fadd float %3635, 0xBFE5555540000000
  %3637 = fsub float %3632, %3636
  %3638 = fadd float %3634, 0x3E2E720200000000
  %3639 = fadd float %3638, %3637
  %3640 = fadd float %3635, %3639
  %3641 = fsub float %3640, %3635
  %3642 = fsub float %3639, %3641
  %3643 = fmul float %3625, %3640
  %3644 = fneg float %3643
  %3645 = tail call float @llvm.fma.f32(float %3625, float %3640, float %3644)
  %3646 = tail call float @llvm.fma.f32(float %3625, float %3642, float %3645)
  %3647 = tail call float @llvm.fma.f32(float %3627, float %3640, float %3646)
  %3648 = tail call float @llvm.amdgcn.ldexp.f32(float %3600, i32 1)
  %3649 = fadd float %3643, %3647
  %3650 = fsub float %3649, %3643
  %3651 = fsub float %3647, %3650
  %3652 = fadd float %3619, %3649
  %3653 = fsub float %3652, %3619
  %3654 = fsub float %3649, %3653
  %3655 = fadd float %3648, %3651
  %3656 = fadd float %3655, %3654
  %3657 = fadd float %3652, %3656
  %3658 = fsub float %3657, %3652
  %3659 = fsub float %3656, %3658
  %3660 = fadd float %3616, %3657
  %3661 = fsub float %3660, %3616
  %3662 = fsub float %3660, %3661
  %3663 = fsub float %3616, %3662
  %3664 = fsub float %3657, %3661
  %3665 = fadd float %3664, %3663
  %3666 = fadd float %3618, %3659
  %3667 = fsub float %3666, %3618
  %3668 = fsub float %3666, %3667
  %3669 = fsub float %3618, %3668
  %3670 = fsub float %3659, %3667
  %3671 = fadd float %3670, %3669
  %3672 = fadd float %3666, %3665
  %3673 = fadd float %3660, %3672
  %3674 = fsub float %3673, %3660
  %3675 = fsub float %3672, %3674
  %3676 = fadd float %3671, %3675
  %3677 = fadd float %3673, %3676
  %3678 = fsub float %3677, %3673
  %3679 = fsub float %3676, %3678
  %3680 = fmul float %3677, 2.000000e+00
  %3681 = fneg float %3680
  %3682 = tail call float @llvm.fma.f32(float %3677, float 2.000000e+00, float %3681)
  %3683 = fmul float %3677, 0.000000e+00
  %3684 = tail call float @llvm.fma.f32(float %3679, float 2.000000e+00, float %3683)
  %3685 = fadd float %3682, %3684
  %3686 = fadd float %3680, %3685
  %3687 = fsub float %3686, %3680
  %3688 = fsub float %3685, %3687
  %3689 = tail call float @llvm.fabs.f32(float %3680) #3
  %3690 = fcmp oeq float %3689, 0x7FF0000000000000
  %3691 = select i1 %3690, float %3680, float %3686
  %3692 = tail call float @llvm.fabs.f32(float %3691) #3
  %3693 = fcmp oeq float %3692, 0x7FF0000000000000
  %3694 = select i1 %3693, float 0.000000e+00, float %3688
  %3695 = fcmp oeq float %3691, 0x40562E4300000000
  %3696 = select i1 %3695, float 0x3EE0000000000000, float 0.000000e+00
  %3697 = fsub float %3691, %3696
  %3698 = fadd float %3696, %3694
  %3699 = fmul float %3697, 0x3FF7154760000000
  %3700 = tail call float @llvm.rint.f32(float %3699)
  %3701 = fcmp ogt float %3697, 0x40562E4300000000
  %3702 = fcmp olt float %3697, 0xC059D1DA00000000
  %3703 = fneg float %3699
  %3704 = tail call float @llvm.fma.f32(float %3697, float 0x3FF7154760000000, float %3703)
  %3705 = tail call float @llvm.fma.f32(float %3697, float 0x3E54AE0BE0000000, float %3704)
  %3706 = fsub float %3699, %3700
  %3707 = fadd float %3705, %3706
  %3708 = tail call float @llvm.exp2.f32(float %3707)
  %3709 = fptosi float %3700 to i32
  %3710 = tail call float @llvm.amdgcn.ldexp.f32(float %3708, i32 %3709)
  %3711 = select i1 %3702, float 0.000000e+00, float %3710
  %3712 = select i1 %3701, float 0x7FF0000000000000, float %3711
  %3713 = tail call float @llvm.fma.f32(float %3712, float %3698, float %3712)
  %3714 = tail call float @llvm.fabs.f32(float %3712) #3
  %3715 = fcmp oeq float %3714, 0x7FF0000000000000
  %3716 = select i1 %3715, float %3712, float %3713
  %3717 = tail call float @llvm.fabs.f32(float %3716)
  %3718 = fcmp oeq float %3572, 0x7FF0000000000000
  %3719 = fcmp oeq float %3571, 0.000000e+00
  %3720 = fcmp uno float %3571, 0.000000e+00
  %3721 = fmul contract float %3717, 1.000000e+01
  %3722 = fadd contract float %3721, 1.000000e+00
  %3723 = select i1 %3718, float 0x7FF0000000000000, float %3722
  %3724 = select i1 %3719, float 1.000000e+00, float %3723
  %3725 = select i1 %3720, float 0x7FF8000000000000, float %3724
  %3726 = fmul contract float %3428, %3725
  %3727 = fadd contract float %3262, %3726
  br i1 %3260, label %3259, label %3728, !llvm.loop !9

3728:                                             ; preds = %3546
  %3729 = fcmp contract olt float %2799, %3727
  br i1 %3729, label %3730, label %3732

3730:                                             ; preds = %3728
  store float %1869, float addrspace(1)* %0, align 4, !tbaa !4
  %3731 = getelementptr inbounds float, float addrspace(1)* %0, i64 1
  store float %1872, float addrspace(1)* %3731, align 4, !tbaa !4
  store float %1875, float addrspace(1)* %3, align 4, !tbaa !4
  br label %3732

3732:                                             ; preds = %3730, %3728
  %3733 = getelementptr inbounds float, float addrspace(1)* %1, i64 6
  %3734 = load float, float addrspace(1)* %3733, align 4, !tbaa !4
  %3735 = insertelement <3 x float> poison, float %3734, i64 0
  %3736 = getelementptr inbounds float, float addrspace(1)* %1, i64 7
  %3737 = load float, float addrspace(1)* %3736, align 4, !tbaa !4
  %3738 = insertelement <3 x float> %3735, float %3737, i64 1
  %3739 = getelementptr inbounds float, float addrspace(1)* %1, i64 8
  %3740 = load float, float addrspace(1)* %3739, align 4, !tbaa !4
  %3741 = insertelement <3 x float> %3738, float %3740, i64 2
  %3742 = fadd contract float %3734, -1.000000e+00
  %3743 = fmul contract float %3742, 2.500000e-01
  %3744 = fadd contract float %3743, 1.000000e+00
  %3745 = fadd contract float %3740, -1.000000e+00
  %3746 = fmul contract float %3745, 2.500000e-01
  %3747 = fadd contract float %3746, 1.000000e+00
  %3748 = fmul contract float %3744, 0x400921CAC0000000
  %3749 = tail call float @llvm.fabs.f32(float %3748)
  %3750 = fcmp olt float %3749, 1.310720e+05
  br i1 %3750, label %3857, label %3751

3751:                                             ; preds = %3732
  %3752 = bitcast float %3749 to i32
  %3753 = lshr i32 %3752, 23
  %3754 = and i32 %3752, 8388607
  %3755 = or i32 %3754, 8388608
  %3756 = zext i32 %3755 to i64
  %3757 = mul nuw nsw i64 %3756, 4266746795
  %3758 = trunc i64 %3757 to i32
  %3759 = lshr i64 %3757, 32
  %3760 = mul nuw nsw i64 %3756, 1011060801
  %3761 = add nuw nsw i64 %3759, %3760
  %3762 = trunc i64 %3761 to i32
  %3763 = lshr i64 %3761, 32
  %3764 = mul nuw nsw i64 %3756, 3680671129
  %3765 = add nuw nsw i64 %3763, %3764
  %3766 = trunc i64 %3765 to i32
  %3767 = lshr i64 %3765, 32
  %3768 = mul nuw nsw i64 %3756, 4113882560
  %3769 = add nuw nsw i64 %3767, %3768
  %3770 = trunc i64 %3769 to i32
  %3771 = lshr i64 %3769, 32
  %3772 = mul nuw nsw i64 %3756, 4230436817
  %3773 = add nuw nsw i64 %3771, %3772
  %3774 = trunc i64 %3773 to i32
  %3775 = lshr i64 %3773, 32
  %3776 = mul nuw nsw i64 %3756, 1313084713
  %3777 = add nuw nsw i64 %3775, %3776
  %3778 = trunc i64 %3777 to i32
  %3779 = lshr i64 %3777, 32
  %3780 = mul nuw nsw i64 %3756, 2734261102
  %3781 = add nuw nsw i64 %3779, %3780
  %3782 = trunc i64 %3781 to i32
  %3783 = lshr i64 %3781, 32
  %3784 = trunc i64 %3783 to i32
  %3785 = add nsw i32 %3753, -120
  %3786 = icmp ugt i32 %3785, 63
  %3787 = select i1 %3786, i32 %3778, i32 %3784
  %3788 = select i1 %3786, i32 %3774, i32 %3782
  %3789 = select i1 %3786, i32 %3770, i32 %3778
  %3790 = select i1 %3786, i32 %3766, i32 %3774
  %3791 = select i1 %3786, i32 %3762, i32 %3770
  %3792 = select i1 %3786, i32 %3758, i32 %3766
  %3793 = select i1 %3786, i32 -64, i32 0
  %3794 = add nsw i32 %3793, %3785
  %3795 = icmp ugt i32 %3794, 31
  %3796 = select i1 %3795, i32 %3788, i32 %3787
  %3797 = select i1 %3795, i32 %3789, i32 %3788
  %3798 = select i1 %3795, i32 %3790, i32 %3789
  %3799 = select i1 %3795, i32 %3791, i32 %3790
  %3800 = select i1 %3795, i32 %3792, i32 %3791
  %3801 = select i1 %3795, i32 -32, i32 0
  %3802 = add nsw i32 %3801, %3794
  %3803 = icmp ugt i32 %3802, 31
  %3804 = select i1 %3803, i32 %3797, i32 %3796
  %3805 = select i1 %3803, i32 %3798, i32 %3797
  %3806 = select i1 %3803, i32 %3799, i32 %3798
  %3807 = select i1 %3803, i32 %3800, i32 %3799
  %3808 = select i1 %3803, i32 -32, i32 0
  %3809 = add nsw i32 %3808, %3802
  %3810 = icmp eq i32 %3809, 0
  %3811 = sub nsw i32 32, %3809
  %3812 = tail call i32 @llvm.fshr.i32(i32 %3804, i32 %3805, i32 %3811)
  %3813 = tail call i32 @llvm.fshr.i32(i32 %3805, i32 %3806, i32 %3811)
  %3814 = tail call i32 @llvm.fshr.i32(i32 %3806, i32 %3807, i32 %3811)
  %3815 = select i1 %3810, i32 %3804, i32 %3812
  %3816 = select i1 %3810, i32 %3805, i32 %3813
  %3817 = select i1 %3810, i32 %3806, i32 %3814
  %3818 = lshr i32 %3815, 29
  %3819 = tail call i32 @llvm.fshl.i32(i32 %3815, i32 %3816, i32 2)
  %3820 = tail call i32 @llvm.fshl.i32(i32 %3816, i32 %3817, i32 2)
  %3821 = tail call i32 @llvm.fshl.i32(i32 %3817, i32 %3807, i32 2)
  %3822 = and i32 %3818, 1
  %3823 = sub nsw i32 0, %3822
  %3824 = shl i32 %3818, 31
  %3825 = xor i32 %3819, %3823
  %3826 = xor i32 %3820, %3823
  %3827 = xor i32 %3821, %3823
  %3828 = tail call i32 @llvm.ctlz.i32(i32 %3825, i1 false), !range !8
  %3829 = sub nsw i32 31, %3828
  %3830 = tail call i32 @llvm.fshr.i32(i32 %3825, i32 %3826, i32 %3829)
  %3831 = tail call i32 @llvm.fshr.i32(i32 %3826, i32 %3827, i32 %3829)
  %3832 = shl nuw nsw i32 %3828, 23
  %3833 = sub nuw nsw i32 1056964608, %3832
  %3834 = lshr i32 %3830, 9
  %3835 = or i32 %3834, %3833
  %3836 = or i32 %3835, %3824
  %3837 = bitcast i32 %3836 to float
  %3838 = tail call i32 @llvm.fshl.i32(i32 %3830, i32 %3831, i32 23)
  %3839 = tail call i32 @llvm.ctlz.i32(i32 %3838, i1 false), !range !8
  %3840 = fmul float %3837, 0x3FF921FB40000000
  %3841 = add nuw nsw i32 %3839, %3828
  %3842 = shl nuw nsw i32 %3841, 23
  %3843 = sub nuw nsw i32 855638016, %3842
  %3844 = sub nsw i32 31, %3839
  %3845 = tail call i32 @llvm.fshr.i32(i32 %3838, i32 %3831, i32 %3844)
  %3846 = lshr i32 %3845, 9
  %3847 = or i32 %3843, %3846
  %3848 = or i32 %3847, %3824
  %3849 = bitcast i32 %3848 to float
  %3850 = fneg float %3840
  %3851 = tail call float @llvm.fma.f32(float %3837, float 0x3FF921FB40000000, float %3850)
  %3852 = tail call float @llvm.fma.f32(float %3837, float 0x3E74442D00000000, float %3851)
  %3853 = tail call float @llvm.fma.f32(float %3849, float 0x3FF921FB40000000, float %3852)
  %3854 = fadd float %3840, %3853
  %3855 = lshr i32 %3815, 30
  %3856 = add nuw nsw i32 %3822, %3855
  br label %3865

3857:                                             ; preds = %3732
  %3858 = fmul float %3749, 0x3FE45F3060000000
  %3859 = tail call float @llvm.rint.f32(float %3858)
  %3860 = tail call float @llvm.fma.f32(float %3859, float 0xBFF921FB40000000, float %3749)
  %3861 = tail call float @llvm.fma.f32(float %3859, float 0xBE74442D00000000, float %3860)
  %3862 = tail call float @llvm.fma.f32(float %3859, float 0xBCF8469880000000, float %3861)
  %3863 = fptosi float %3859 to i32
  %3864 = bitcast float %3749 to i32
  br label %3865

3865:                                             ; preds = %3857, %3751
  %3866 = phi i32 [ %3864, %3857 ], [ %3752, %3751 ]
  %3867 = phi float [ %3862, %3857 ], [ %3854, %3751 ]
  %3868 = phi i32 [ %3863, %3857 ], [ %3856, %3751 ]
  %3869 = fmul float %3867, %3867
  %3870 = tail call float @llvm.fmuladd.f32(float %3869, float 0xBF29833040000000, float 0x3F81103880000000)
  %3871 = tail call float @llvm.fmuladd.f32(float %3869, float %3870, float 0xBFC55553A0000000)
  %3872 = fmul float %3869, %3871
  %3873 = tail call float @llvm.fmuladd.f32(float %3867, float %3872, float %3867)
  %3874 = tail call float @llvm.fmuladd.f32(float %3869, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %3875 = tail call float @llvm.fmuladd.f32(float %3869, float %3874, float 0x3FA5557EE0000000)
  %3876 = tail call float @llvm.fmuladd.f32(float %3869, float %3875, float 0xBFE0000080000000)
  %3877 = tail call float @llvm.fmuladd.f32(float %3869, float %3876, float 1.000000e+00)
  %3878 = and i32 %3868, 1
  %3879 = icmp eq i32 %3878, 0
  %3880 = select i1 %3879, float %3873, float %3877
  %3881 = bitcast float %3880 to i32
  %3882 = shl i32 %3868, 30
  %3883 = and i32 %3882, -2147483648
  %3884 = bitcast float %3748 to i32
  %3885 = xor i32 %3866, %3884
  %3886 = xor i32 %3885, %3883
  %3887 = xor i32 %3886, %3881
  %3888 = bitcast i32 %3887 to float
  %3889 = tail call i1 @llvm.amdgcn.class.f32(float %3749, i32 504)
  %3890 = select i1 %3889, float %3888, float 0x7FF8000000000000
  %3891 = tail call float @llvm.fabs.f32(float %3890)
  %3892 = tail call float @llvm.amdgcn.frexp.mant.f32(float %3891)
  %3893 = fcmp olt float %3892, 0x3FE5555560000000
  %3894 = zext i1 %3893 to i32
  %3895 = tail call float @llvm.amdgcn.ldexp.f32(float %3892, i32 %3894)
  %3896 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %3891)
  %3897 = sub nsw i32 %3896, %3894
  %3898 = fadd float %3895, -1.000000e+00
  %3899 = fadd float %3895, 1.000000e+00
  %3900 = fadd float %3899, -1.000000e+00
  %3901 = fsub float %3895, %3900
  %3902 = tail call float @llvm.amdgcn.rcp.f32(float %3899)
  %3903 = fmul float %3898, %3902
  %3904 = fmul float %3899, %3903
  %3905 = fneg float %3904
  %3906 = tail call float @llvm.fma.f32(float %3903, float %3899, float %3905)
  %3907 = tail call float @llvm.fma.f32(float %3903, float %3901, float %3906)
  %3908 = fadd float %3904, %3907
  %3909 = fsub float %3908, %3904
  %3910 = fsub float %3907, %3909
  %3911 = fsub float %3898, %3908
  %3912 = fsub float %3898, %3911
  %3913 = fsub float %3912, %3908
  %3914 = fsub float %3913, %3910
  %3915 = fadd float %3911, %3914
  %3916 = fmul float %3902, %3915
  %3917 = fadd float %3903, %3916
  %3918 = fsub float %3917, %3903
  %3919 = fsub float %3916, %3918
  %3920 = fmul float %3917, %3917
  %3921 = fneg float %3920
  %3922 = tail call float @llvm.fma.f32(float %3917, float %3917, float %3921)
  %3923 = fmul float %3919, 2.000000e+00
  %3924 = tail call float @llvm.fma.f32(float %3917, float %3923, float %3922)
  %3925 = fadd float %3920, %3924
  %3926 = fsub float %3925, %3920
  %3927 = fsub float %3924, %3926
  %3928 = tail call float @llvm.fmuladd.f32(float %3925, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %3929 = tail call float @llvm.fmuladd.f32(float %3925, float %3928, float 0x3FD999BDE0000000)
  %3930 = sitofp i32 %3897 to float
  %3931 = fmul float %3930, 0x3FE62E4300000000
  %3932 = fneg float %3931
  %3933 = tail call float @llvm.fma.f32(float %3930, float 0x3FE62E4300000000, float %3932)
  %3934 = tail call float @llvm.fma.f32(float %3930, float 0xBE205C6100000000, float %3933)
  %3935 = fadd float %3931, %3934
  %3936 = fsub float %3935, %3931
  %3937 = fsub float %3934, %3936
  %3938 = tail call float @llvm.amdgcn.ldexp.f32(float %3917, i32 1)
  %3939 = fmul float %3917, %3925
  %3940 = fneg float %3939
  %3941 = tail call float @llvm.fma.f32(float %3925, float %3917, float %3940)
  %3942 = tail call float @llvm.fma.f32(float %3925, float %3919, float %3941)
  %3943 = tail call float @llvm.fma.f32(float %3927, float %3917, float %3942)
  %3944 = fadd float %3939, %3943
  %3945 = fsub float %3944, %3939
  %3946 = fsub float %3943, %3945
  %3947 = fmul float %3925, %3929
  %3948 = fneg float %3947
  %3949 = tail call float @llvm.fma.f32(float %3925, float %3929, float %3948)
  %3950 = tail call float @llvm.fma.f32(float %3927, float %3929, float %3949)
  %3951 = fadd float %3947, %3950
  %3952 = fsub float %3951, %3947
  %3953 = fsub float %3950, %3952
  %3954 = fadd float %3951, 0x3FE5555540000000
  %3955 = fadd float %3954, 0xBFE5555540000000
  %3956 = fsub float %3951, %3955
  %3957 = fadd float %3953, 0x3E2E720200000000
  %3958 = fadd float %3957, %3956
  %3959 = fadd float %3954, %3958
  %3960 = fsub float %3959, %3954
  %3961 = fsub float %3958, %3960
  %3962 = fmul float %3944, %3959
  %3963 = fneg float %3962
  %3964 = tail call float @llvm.fma.f32(float %3944, float %3959, float %3963)
  %3965 = tail call float @llvm.fma.f32(float %3944, float %3961, float %3964)
  %3966 = tail call float @llvm.fma.f32(float %3946, float %3959, float %3965)
  %3967 = tail call float @llvm.amdgcn.ldexp.f32(float %3919, i32 1)
  %3968 = fadd float %3962, %3966
  %3969 = fsub float %3968, %3962
  %3970 = fsub float %3966, %3969
  %3971 = fadd float %3938, %3968
  %3972 = fsub float %3971, %3938
  %3973 = fsub float %3968, %3972
  %3974 = fadd float %3967, %3970
  %3975 = fadd float %3974, %3973
  %3976 = fadd float %3971, %3975
  %3977 = fsub float %3976, %3971
  %3978 = fsub float %3975, %3977
  %3979 = fadd float %3935, %3976
  %3980 = fsub float %3979, %3935
  %3981 = fsub float %3979, %3980
  %3982 = fsub float %3935, %3981
  %3983 = fsub float %3976, %3980
  %3984 = fadd float %3983, %3982
  %3985 = fadd float %3937, %3978
  %3986 = fsub float %3985, %3937
  %3987 = fsub float %3985, %3986
  %3988 = fsub float %3937, %3987
  %3989 = fsub float %3978, %3986
  %3990 = fadd float %3989, %3988
  %3991 = fadd float %3985, %3984
  %3992 = fadd float %3979, %3991
  %3993 = fsub float %3992, %3979
  %3994 = fsub float %3991, %3993
  %3995 = fadd float %3990, %3994
  %3996 = fadd float %3992, %3995
  %3997 = fsub float %3996, %3992
  %3998 = fsub float %3995, %3997
  %3999 = fmul float %3996, 2.000000e+00
  %4000 = fneg float %3999
  %4001 = tail call float @llvm.fma.f32(float %3996, float 2.000000e+00, float %4000)
  %4002 = fmul float %3996, 0.000000e+00
  %4003 = tail call float @llvm.fma.f32(float %3998, float 2.000000e+00, float %4002)
  %4004 = fadd float %4001, %4003
  %4005 = fadd float %3999, %4004
  %4006 = fsub float %4005, %3999
  %4007 = fsub float %4004, %4006
  %4008 = tail call float @llvm.fabs.f32(float %3999) #3
  %4009 = fcmp oeq float %4008, 0x7FF0000000000000
  %4010 = select i1 %4009, float %3999, float %4005
  %4011 = tail call float @llvm.fabs.f32(float %4010) #3
  %4012 = fcmp oeq float %4011, 0x7FF0000000000000
  %4013 = select i1 %4012, float 0.000000e+00, float %4007
  %4014 = fcmp oeq float %4010, 0x40562E4300000000
  %4015 = select i1 %4014, float 0x3EE0000000000000, float 0.000000e+00
  %4016 = fsub float %4010, %4015
  %4017 = fadd float %4015, %4013
  %4018 = fmul float %4016, 0x3FF7154760000000
  %4019 = tail call float @llvm.rint.f32(float %4018)
  %4020 = fcmp ogt float %4016, 0x40562E4300000000
  %4021 = fcmp olt float %4016, 0xC059D1DA00000000
  %4022 = fneg float %4018
  %4023 = tail call float @llvm.fma.f32(float %4016, float 0x3FF7154760000000, float %4022)
  %4024 = tail call float @llvm.fma.f32(float %4016, float 0x3E54AE0BE0000000, float %4023)
  %4025 = fsub float %4018, %4019
  %4026 = fadd float %4024, %4025
  %4027 = tail call float @llvm.exp2.f32(float %4026)
  %4028 = fptosi float %4019 to i32
  %4029 = tail call float @llvm.amdgcn.ldexp.f32(float %4027, i32 %4028)
  %4030 = select i1 %4021, float 0.000000e+00, float %4029
  %4031 = select i1 %4020, float 0x7FF0000000000000, float %4030
  %4032 = tail call float @llvm.fma.f32(float %4031, float %4017, float %4031)
  %4033 = tail call float @llvm.fabs.f32(float %4031) #3
  %4034 = fcmp oeq float %4033, 0x7FF0000000000000
  %4035 = select i1 %4034, float %4031, float %4032
  %4036 = tail call float @llvm.fabs.f32(float %4035)
  %4037 = fcmp oeq float %3891, 0x7FF0000000000000
  %4038 = fcmp oeq float %3890, 0.000000e+00
  %4039 = select i1 %4037, float 0x7FF0000000000000, float %4036
  %4040 = select i1 %4038, float 0.000000e+00, float %4039
  %4041 = fcmp uno float %3890, 0.000000e+00
  %4042 = select i1 %4041, float 0x7FF8000000000000, float %4040
  %4043 = fadd contract float %3747, -1.000000e+00
  %4044 = tail call float @llvm.fabs.f32(float %4043)
  %4045 = tail call float @llvm.amdgcn.frexp.mant.f32(float %4044)
  %4046 = fcmp olt float %4045, 0x3FE5555560000000
  %4047 = zext i1 %4046 to i32
  %4048 = tail call float @llvm.amdgcn.ldexp.f32(float %4045, i32 %4047)
  %4049 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %4044)
  %4050 = sub nsw i32 %4049, %4047
  %4051 = fadd float %4048, -1.000000e+00
  %4052 = fadd float %4048, 1.000000e+00
  %4053 = fadd float %4052, -1.000000e+00
  %4054 = fsub float %4048, %4053
  %4055 = tail call float @llvm.amdgcn.rcp.f32(float %4052)
  %4056 = fmul float %4051, %4055
  %4057 = fmul float %4052, %4056
  %4058 = fneg float %4057
  %4059 = tail call float @llvm.fma.f32(float %4056, float %4052, float %4058)
  %4060 = tail call float @llvm.fma.f32(float %4056, float %4054, float %4059)
  %4061 = fadd float %4057, %4060
  %4062 = fsub float %4061, %4057
  %4063 = fsub float %4060, %4062
  %4064 = fsub float %4051, %4061
  %4065 = fsub float %4051, %4064
  %4066 = fsub float %4065, %4061
  %4067 = fsub float %4066, %4063
  %4068 = fadd float %4064, %4067
  %4069 = fmul float %4055, %4068
  %4070 = fadd float %4056, %4069
  %4071 = fsub float %4070, %4056
  %4072 = fsub float %4069, %4071
  %4073 = fmul float %4070, %4070
  %4074 = fneg float %4073
  %4075 = tail call float @llvm.fma.f32(float %4070, float %4070, float %4074)
  %4076 = fmul float %4072, 2.000000e+00
  %4077 = tail call float @llvm.fma.f32(float %4070, float %4076, float %4075)
  %4078 = fadd float %4073, %4077
  %4079 = fsub float %4078, %4073
  %4080 = fsub float %4077, %4079
  %4081 = tail call float @llvm.fmuladd.f32(float %4078, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %4082 = tail call float @llvm.fmuladd.f32(float %4078, float %4081, float 0x3FD999BDE0000000)
  %4083 = sitofp i32 %4050 to float
  %4084 = fmul float %4083, 0x3FE62E4300000000
  %4085 = fneg float %4084
  %4086 = tail call float @llvm.fma.f32(float %4083, float 0x3FE62E4300000000, float %4085)
  %4087 = tail call float @llvm.fma.f32(float %4083, float 0xBE205C6100000000, float %4086)
  %4088 = fadd float %4084, %4087
  %4089 = fsub float %4088, %4084
  %4090 = fsub float %4087, %4089
  %4091 = tail call float @llvm.amdgcn.ldexp.f32(float %4070, i32 1)
  %4092 = fmul float %4070, %4078
  %4093 = fneg float %4092
  %4094 = tail call float @llvm.fma.f32(float %4078, float %4070, float %4093)
  %4095 = tail call float @llvm.fma.f32(float %4078, float %4072, float %4094)
  %4096 = tail call float @llvm.fma.f32(float %4080, float %4070, float %4095)
  %4097 = fadd float %4092, %4096
  %4098 = fsub float %4097, %4092
  %4099 = fsub float %4096, %4098
  %4100 = fmul float %4078, %4082
  %4101 = fneg float %4100
  %4102 = tail call float @llvm.fma.f32(float %4078, float %4082, float %4101)
  %4103 = tail call float @llvm.fma.f32(float %4080, float %4082, float %4102)
  %4104 = fadd float %4100, %4103
  %4105 = fsub float %4104, %4100
  %4106 = fsub float %4103, %4105
  %4107 = fadd float %4104, 0x3FE5555540000000
  %4108 = fadd float %4107, 0xBFE5555540000000
  %4109 = fsub float %4104, %4108
  %4110 = fadd float %4106, 0x3E2E720200000000
  %4111 = fadd float %4110, %4109
  %4112 = fadd float %4107, %4111
  %4113 = fsub float %4112, %4107
  %4114 = fsub float %4111, %4113
  %4115 = fmul float %4097, %4112
  %4116 = fneg float %4115
  %4117 = tail call float @llvm.fma.f32(float %4097, float %4112, float %4116)
  %4118 = tail call float @llvm.fma.f32(float %4097, float %4114, float %4117)
  %4119 = tail call float @llvm.fma.f32(float %4099, float %4112, float %4118)
  %4120 = tail call float @llvm.amdgcn.ldexp.f32(float %4072, i32 1)
  %4121 = fadd float %4115, %4119
  %4122 = fsub float %4121, %4115
  %4123 = fsub float %4119, %4122
  %4124 = fadd float %4091, %4121
  %4125 = fsub float %4124, %4091
  %4126 = fsub float %4121, %4125
  %4127 = fadd float %4120, %4123
  %4128 = fadd float %4127, %4126
  %4129 = fadd float %4124, %4128
  %4130 = fsub float %4129, %4124
  %4131 = fsub float %4128, %4130
  %4132 = fadd float %4088, %4129
  %4133 = fsub float %4132, %4088
  %4134 = fsub float %4132, %4133
  %4135 = fsub float %4088, %4134
  %4136 = fsub float %4129, %4133
  %4137 = fadd float %4136, %4135
  %4138 = fadd float %4090, %4131
  %4139 = fsub float %4138, %4090
  %4140 = fsub float %4138, %4139
  %4141 = fsub float %4090, %4140
  %4142 = fsub float %4131, %4139
  %4143 = fadd float %4142, %4141
  %4144 = fadd float %4138, %4137
  %4145 = fadd float %4132, %4144
  %4146 = fsub float %4145, %4132
  %4147 = fsub float %4144, %4146
  %4148 = fadd float %4143, %4147
  %4149 = fadd float %4145, %4148
  %4150 = fsub float %4149, %4145
  %4151 = fsub float %4148, %4150
  %4152 = fmul float %4149, 2.000000e+00
  %4153 = fneg float %4152
  %4154 = tail call float @llvm.fma.f32(float %4149, float 2.000000e+00, float %4153)
  %4155 = fmul float %4149, 0.000000e+00
  %4156 = tail call float @llvm.fma.f32(float %4151, float 2.000000e+00, float %4155)
  %4157 = fadd float %4154, %4156
  %4158 = fadd float %4152, %4157
  %4159 = fsub float %4158, %4152
  %4160 = fsub float %4157, %4159
  %4161 = tail call float @llvm.fabs.f32(float %4152) #3
  %4162 = fcmp oeq float %4161, 0x7FF0000000000000
  %4163 = select i1 %4162, float %4152, float %4158
  %4164 = tail call float @llvm.fabs.f32(float %4163) #3
  %4165 = fcmp oeq float %4164, 0x7FF0000000000000
  %4166 = select i1 %4165, float 0.000000e+00, float %4160
  %4167 = fcmp oeq float %4163, 0x40562E4300000000
  %4168 = select i1 %4167, float 0x3EE0000000000000, float 0.000000e+00
  %4169 = fsub float %4163, %4168
  %4170 = fadd float %4168, %4166
  %4171 = fmul float %4169, 0x3FF7154760000000
  %4172 = tail call float @llvm.rint.f32(float %4171)
  %4173 = fcmp ogt float %4169, 0x40562E4300000000
  %4174 = fcmp olt float %4169, 0xC059D1DA00000000
  %4175 = fneg float %4171
  %4176 = tail call float @llvm.fma.f32(float %4169, float 0x3FF7154760000000, float %4175)
  %4177 = tail call float @llvm.fma.f32(float %4169, float 0x3E54AE0BE0000000, float %4176)
  %4178 = fsub float %4171, %4172
  %4179 = fadd float %4177, %4178
  %4180 = tail call float @llvm.exp2.f32(float %4179)
  %4181 = fptosi float %4172 to i32
  %4182 = tail call float @llvm.amdgcn.ldexp.f32(float %4180, i32 %4181)
  %4183 = select i1 %4174, float 0.000000e+00, float %4182
  %4184 = select i1 %4173, float 0x7FF0000000000000, float %4183
  %4185 = tail call float @llvm.fma.f32(float %4184, float %4170, float %4184)
  %4186 = tail call float @llvm.fabs.f32(float %4184) #3
  %4187 = fcmp oeq float %4186, 0x7FF0000000000000
  %4188 = select i1 %4187, float %4184, float %4185
  %4189 = tail call float @llvm.fabs.f32(float %4188)
  %4190 = fcmp oeq float %4044, 0x7FF0000000000000
  %4191 = fcmp oeq float %4043, 0.000000e+00
  %4192 = select i1 %4190, float 0x7FF0000000000000, float %4189
  %4193 = select i1 %4191, float 0.000000e+00, float %4192
  %4194 = fcmp uno float %4043, 0.000000e+00
  %4195 = select i1 %4194, float 0x7FF8000000000000, float %4193
  %4196 = fadd contract float %4195, %4042
  %4197 = fadd contract float %4196, 0.000000e+00
  br label %4198

4198:                                             ; preds = %4483, %3865
  %4199 = phi i1 [ true, %3865 ], [ false, %4483 ]
  %4200 = phi i32 [ 0, %3865 ], [ 1, %4483 ]
  %4201 = phi float [ %4197, %3865 ], [ %4664, %4483 ]
  %4202 = zext i32 %4200 to i64
  %4203 = extractelement <3 x float> %3741, i64 %4202
  %4204 = fadd contract float %4203, -1.000000e+00
  %4205 = fmul contract float %4204, 2.500000e-01
  %4206 = fadd contract float %4205, 1.000000e+00
  %4207 = add nuw nsw i32 %4200, 1
  %4208 = zext i32 %4207 to i64
  %4209 = extractelement <3 x float> %3741, i64 %4208
  %4210 = fadd contract float %4209, -1.000000e+00
  %4211 = fmul contract float %4210, 2.500000e-01
  %4212 = fadd contract float %4211, 1.000000e+00
  %4213 = fadd contract float %4206, -1.000000e+00
  %4214 = tail call float @llvm.fabs.f32(float %4213)
  %4215 = tail call float @llvm.amdgcn.frexp.mant.f32(float %4214)
  %4216 = fcmp olt float %4215, 0x3FE5555560000000
  %4217 = zext i1 %4216 to i32
  %4218 = tail call float @llvm.amdgcn.ldexp.f32(float %4215, i32 %4217)
  %4219 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %4214)
  %4220 = sub nsw i32 %4219, %4217
  %4221 = fadd float %4218, -1.000000e+00
  %4222 = fadd float %4218, 1.000000e+00
  %4223 = fadd float %4222, -1.000000e+00
  %4224 = fsub float %4218, %4223
  %4225 = tail call float @llvm.amdgcn.rcp.f32(float %4222)
  %4226 = fmul float %4221, %4225
  %4227 = fmul float %4222, %4226
  %4228 = fneg float %4227
  %4229 = tail call float @llvm.fma.f32(float %4226, float %4222, float %4228)
  %4230 = tail call float @llvm.fma.f32(float %4226, float %4224, float %4229)
  %4231 = fadd float %4227, %4230
  %4232 = fsub float %4231, %4227
  %4233 = fsub float %4230, %4232
  %4234 = fsub float %4221, %4231
  %4235 = fsub float %4221, %4234
  %4236 = fsub float %4235, %4231
  %4237 = fsub float %4236, %4233
  %4238 = fadd float %4234, %4237
  %4239 = fmul float %4225, %4238
  %4240 = fadd float %4226, %4239
  %4241 = fsub float %4240, %4226
  %4242 = fsub float %4239, %4241
  %4243 = fmul float %4240, %4240
  %4244 = fneg float %4243
  %4245 = tail call float @llvm.fma.f32(float %4240, float %4240, float %4244)
  %4246 = fmul float %4242, 2.000000e+00
  %4247 = tail call float @llvm.fma.f32(float %4240, float %4246, float %4245)
  %4248 = fadd float %4243, %4247
  %4249 = fsub float %4248, %4243
  %4250 = fsub float %4247, %4249
  %4251 = tail call float @llvm.fmuladd.f32(float %4248, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %4252 = tail call float @llvm.fmuladd.f32(float %4248, float %4251, float 0x3FD999BDE0000000)
  %4253 = sitofp i32 %4220 to float
  %4254 = fmul float %4253, 0x3FE62E4300000000
  %4255 = fneg float %4254
  %4256 = tail call float @llvm.fma.f32(float %4253, float 0x3FE62E4300000000, float %4255)
  %4257 = tail call float @llvm.fma.f32(float %4253, float 0xBE205C6100000000, float %4256)
  %4258 = fadd float %4254, %4257
  %4259 = fsub float %4258, %4254
  %4260 = fsub float %4257, %4259
  %4261 = tail call float @llvm.amdgcn.ldexp.f32(float %4240, i32 1)
  %4262 = fmul float %4240, %4248
  %4263 = fneg float %4262
  %4264 = tail call float @llvm.fma.f32(float %4248, float %4240, float %4263)
  %4265 = tail call float @llvm.fma.f32(float %4248, float %4242, float %4264)
  %4266 = tail call float @llvm.fma.f32(float %4250, float %4240, float %4265)
  %4267 = fadd float %4262, %4266
  %4268 = fsub float %4267, %4262
  %4269 = fsub float %4266, %4268
  %4270 = fmul float %4248, %4252
  %4271 = fneg float %4270
  %4272 = tail call float @llvm.fma.f32(float %4248, float %4252, float %4271)
  %4273 = tail call float @llvm.fma.f32(float %4250, float %4252, float %4272)
  %4274 = fadd float %4270, %4273
  %4275 = fsub float %4274, %4270
  %4276 = fsub float %4273, %4275
  %4277 = fadd float %4274, 0x3FE5555540000000
  %4278 = fadd float %4277, 0xBFE5555540000000
  %4279 = fsub float %4274, %4278
  %4280 = fadd float %4276, 0x3E2E720200000000
  %4281 = fadd float %4280, %4279
  %4282 = fadd float %4277, %4281
  %4283 = fsub float %4282, %4277
  %4284 = fsub float %4281, %4283
  %4285 = fmul float %4267, %4282
  %4286 = fneg float %4285
  %4287 = tail call float @llvm.fma.f32(float %4267, float %4282, float %4286)
  %4288 = tail call float @llvm.fma.f32(float %4267, float %4284, float %4287)
  %4289 = tail call float @llvm.fma.f32(float %4269, float %4282, float %4288)
  %4290 = tail call float @llvm.amdgcn.ldexp.f32(float %4242, i32 1)
  %4291 = fadd float %4285, %4289
  %4292 = fsub float %4291, %4285
  %4293 = fsub float %4289, %4292
  %4294 = fadd float %4261, %4291
  %4295 = fsub float %4294, %4261
  %4296 = fsub float %4291, %4295
  %4297 = fadd float %4290, %4293
  %4298 = fadd float %4297, %4296
  %4299 = fadd float %4294, %4298
  %4300 = fsub float %4299, %4294
  %4301 = fsub float %4298, %4300
  %4302 = fadd float %4258, %4299
  %4303 = fsub float %4302, %4258
  %4304 = fsub float %4302, %4303
  %4305 = fsub float %4258, %4304
  %4306 = fsub float %4299, %4303
  %4307 = fadd float %4306, %4305
  %4308 = fadd float %4260, %4301
  %4309 = fsub float %4308, %4260
  %4310 = fsub float %4308, %4309
  %4311 = fsub float %4260, %4310
  %4312 = fsub float %4301, %4309
  %4313 = fadd float %4312, %4311
  %4314 = fadd float %4308, %4307
  %4315 = fadd float %4302, %4314
  %4316 = fsub float %4315, %4302
  %4317 = fsub float %4314, %4316
  %4318 = fadd float %4313, %4317
  %4319 = fadd float %4315, %4318
  %4320 = fsub float %4319, %4315
  %4321 = fsub float %4318, %4320
  %4322 = fmul float %4319, 2.000000e+00
  %4323 = fneg float %4322
  %4324 = tail call float @llvm.fma.f32(float %4319, float 2.000000e+00, float %4323)
  %4325 = fmul float %4319, 0.000000e+00
  %4326 = tail call float @llvm.fma.f32(float %4321, float 2.000000e+00, float %4325)
  %4327 = fadd float %4324, %4326
  %4328 = fadd float %4322, %4327
  %4329 = fsub float %4328, %4322
  %4330 = fsub float %4327, %4329
  %4331 = tail call float @llvm.fabs.f32(float %4322) #3
  %4332 = fcmp oeq float %4331, 0x7FF0000000000000
  %4333 = select i1 %4332, float %4322, float %4328
  %4334 = tail call float @llvm.fabs.f32(float %4333) #3
  %4335 = fcmp oeq float %4334, 0x7FF0000000000000
  %4336 = select i1 %4335, float 0.000000e+00, float %4330
  %4337 = fcmp oeq float %4333, 0x40562E4300000000
  %4338 = select i1 %4337, float 0x3EE0000000000000, float 0.000000e+00
  %4339 = fsub float %4333, %4338
  %4340 = fadd float %4338, %4336
  %4341 = fmul float %4339, 0x3FF7154760000000
  %4342 = tail call float @llvm.rint.f32(float %4341)
  %4343 = fcmp ogt float %4339, 0x40562E4300000000
  %4344 = fcmp olt float %4339, 0xC059D1DA00000000
  %4345 = fneg float %4341
  %4346 = tail call float @llvm.fma.f32(float %4339, float 0x3FF7154760000000, float %4345)
  %4347 = tail call float @llvm.fma.f32(float %4339, float 0x3E54AE0BE0000000, float %4346)
  %4348 = fsub float %4341, %4342
  %4349 = fadd float %4347, %4348
  %4350 = tail call float @llvm.exp2.f32(float %4349)
  %4351 = fptosi float %4342 to i32
  %4352 = tail call float @llvm.amdgcn.ldexp.f32(float %4350, i32 %4351)
  %4353 = select i1 %4344, float 0.000000e+00, float %4352
  %4354 = select i1 %4343, float 0x7FF0000000000000, float %4353
  %4355 = tail call float @llvm.fma.f32(float %4354, float %4340, float %4354)
  %4356 = tail call float @llvm.fabs.f32(float %4354) #3
  %4357 = fcmp oeq float %4356, 0x7FF0000000000000
  %4358 = select i1 %4357, float %4354, float %4355
  %4359 = tail call float @llvm.fabs.f32(float %4358)
  %4360 = fcmp oeq float %4214, 0x7FF0000000000000
  %4361 = fcmp oeq float %4213, 0.000000e+00
  %4362 = select i1 %4360, float 0x7FF0000000000000, float %4359
  %4363 = select i1 %4361, float 0.000000e+00, float %4362
  %4364 = fcmp uno float %4213, 0.000000e+00
  %4365 = select i1 %4364, float 0x7FF8000000000000, float %4363
  %4366 = fmul contract float %4212, 0x400921CAC0000000
  %4367 = tail call float @llvm.fabs.f32(float %4366)
  %4368 = fcmp olt float %4367, 1.310720e+05
  br i1 %4368, label %4475, label %4369

4369:                                             ; preds = %4198
  %4370 = bitcast float %4367 to i32
  %4371 = lshr i32 %4370, 23
  %4372 = and i32 %4370, 8388607
  %4373 = or i32 %4372, 8388608
  %4374 = zext i32 %4373 to i64
  %4375 = mul nuw nsw i64 %4374, 4266746795
  %4376 = trunc i64 %4375 to i32
  %4377 = lshr i64 %4375, 32
  %4378 = mul nuw nsw i64 %4374, 1011060801
  %4379 = add nuw nsw i64 %4377, %4378
  %4380 = trunc i64 %4379 to i32
  %4381 = lshr i64 %4379, 32
  %4382 = mul nuw nsw i64 %4374, 3680671129
  %4383 = add nuw nsw i64 %4381, %4382
  %4384 = trunc i64 %4383 to i32
  %4385 = lshr i64 %4383, 32
  %4386 = mul nuw nsw i64 %4374, 4113882560
  %4387 = add nuw nsw i64 %4385, %4386
  %4388 = trunc i64 %4387 to i32
  %4389 = lshr i64 %4387, 32
  %4390 = mul nuw nsw i64 %4374, 4230436817
  %4391 = add nuw nsw i64 %4389, %4390
  %4392 = trunc i64 %4391 to i32
  %4393 = lshr i64 %4391, 32
  %4394 = mul nuw nsw i64 %4374, 1313084713
  %4395 = add nuw nsw i64 %4393, %4394
  %4396 = trunc i64 %4395 to i32
  %4397 = lshr i64 %4395, 32
  %4398 = mul nuw nsw i64 %4374, 2734261102
  %4399 = add nuw nsw i64 %4397, %4398
  %4400 = trunc i64 %4399 to i32
  %4401 = lshr i64 %4399, 32
  %4402 = trunc i64 %4401 to i32
  %4403 = add nsw i32 %4371, -120
  %4404 = icmp ugt i32 %4403, 63
  %4405 = select i1 %4404, i32 %4396, i32 %4402
  %4406 = select i1 %4404, i32 %4392, i32 %4400
  %4407 = select i1 %4404, i32 %4388, i32 %4396
  %4408 = select i1 %4404, i32 %4384, i32 %4392
  %4409 = select i1 %4404, i32 %4380, i32 %4388
  %4410 = select i1 %4404, i32 %4376, i32 %4384
  %4411 = select i1 %4404, i32 -64, i32 0
  %4412 = add nsw i32 %4411, %4403
  %4413 = icmp ugt i32 %4412, 31
  %4414 = select i1 %4413, i32 %4406, i32 %4405
  %4415 = select i1 %4413, i32 %4407, i32 %4406
  %4416 = select i1 %4413, i32 %4408, i32 %4407
  %4417 = select i1 %4413, i32 %4409, i32 %4408
  %4418 = select i1 %4413, i32 %4410, i32 %4409
  %4419 = select i1 %4413, i32 -32, i32 0
  %4420 = add nsw i32 %4419, %4412
  %4421 = icmp ugt i32 %4420, 31
  %4422 = select i1 %4421, i32 %4415, i32 %4414
  %4423 = select i1 %4421, i32 %4416, i32 %4415
  %4424 = select i1 %4421, i32 %4417, i32 %4416
  %4425 = select i1 %4421, i32 %4418, i32 %4417
  %4426 = select i1 %4421, i32 -32, i32 0
  %4427 = add nsw i32 %4426, %4420
  %4428 = icmp eq i32 %4427, 0
  %4429 = sub nsw i32 32, %4427
  %4430 = tail call i32 @llvm.fshr.i32(i32 %4422, i32 %4423, i32 %4429)
  %4431 = tail call i32 @llvm.fshr.i32(i32 %4423, i32 %4424, i32 %4429)
  %4432 = tail call i32 @llvm.fshr.i32(i32 %4424, i32 %4425, i32 %4429)
  %4433 = select i1 %4428, i32 %4422, i32 %4430
  %4434 = select i1 %4428, i32 %4423, i32 %4431
  %4435 = select i1 %4428, i32 %4424, i32 %4432
  %4436 = lshr i32 %4433, 29
  %4437 = tail call i32 @llvm.fshl.i32(i32 %4433, i32 %4434, i32 2)
  %4438 = tail call i32 @llvm.fshl.i32(i32 %4434, i32 %4435, i32 2)
  %4439 = tail call i32 @llvm.fshl.i32(i32 %4435, i32 %4425, i32 2)
  %4440 = and i32 %4436, 1
  %4441 = sub nsw i32 0, %4440
  %4442 = shl i32 %4436, 31
  %4443 = xor i32 %4437, %4441
  %4444 = xor i32 %4438, %4441
  %4445 = xor i32 %4439, %4441
  %4446 = tail call i32 @llvm.ctlz.i32(i32 %4443, i1 false), !range !8
  %4447 = sub nsw i32 31, %4446
  %4448 = tail call i32 @llvm.fshr.i32(i32 %4443, i32 %4444, i32 %4447)
  %4449 = tail call i32 @llvm.fshr.i32(i32 %4444, i32 %4445, i32 %4447)
  %4450 = shl nuw nsw i32 %4446, 23
  %4451 = sub nuw nsw i32 1056964608, %4450
  %4452 = lshr i32 %4448, 9
  %4453 = or i32 %4452, %4451
  %4454 = or i32 %4453, %4442
  %4455 = bitcast i32 %4454 to float
  %4456 = tail call i32 @llvm.fshl.i32(i32 %4448, i32 %4449, i32 23)
  %4457 = tail call i32 @llvm.ctlz.i32(i32 %4456, i1 false), !range !8
  %4458 = fmul float %4455, 0x3FF921FB40000000
  %4459 = add nuw nsw i32 %4457, %4446
  %4460 = shl nuw nsw i32 %4459, 23
  %4461 = sub nuw nsw i32 855638016, %4460
  %4462 = sub nsw i32 31, %4457
  %4463 = tail call i32 @llvm.fshr.i32(i32 %4456, i32 %4449, i32 %4462)
  %4464 = lshr i32 %4463, 9
  %4465 = or i32 %4461, %4464
  %4466 = or i32 %4465, %4442
  %4467 = bitcast i32 %4466 to float
  %4468 = fneg float %4458
  %4469 = tail call float @llvm.fma.f32(float %4455, float 0x3FF921FB40000000, float %4468)
  %4470 = tail call float @llvm.fma.f32(float %4455, float 0x3E74442D00000000, float %4469)
  %4471 = tail call float @llvm.fma.f32(float %4467, float 0x3FF921FB40000000, float %4470)
  %4472 = fadd float %4458, %4471
  %4473 = lshr i32 %4433, 30
  %4474 = add nuw nsw i32 %4440, %4473
  br label %4483

4475:                                             ; preds = %4198
  %4476 = fmul float %4367, 0x3FE45F3060000000
  %4477 = tail call float @llvm.rint.f32(float %4476)
  %4478 = tail call float @llvm.fma.f32(float %4477, float 0xBFF921FB40000000, float %4367)
  %4479 = tail call float @llvm.fma.f32(float %4477, float 0xBE74442D00000000, float %4478)
  %4480 = tail call float @llvm.fma.f32(float %4477, float 0xBCF8469880000000, float %4479)
  %4481 = fptosi float %4477 to i32
  %4482 = bitcast float %4367 to i32
  br label %4483

4483:                                             ; preds = %4475, %4369
  %4484 = phi i32 [ %4482, %4475 ], [ %4370, %4369 ]
  %4485 = phi float [ %4480, %4475 ], [ %4472, %4369 ]
  %4486 = phi i32 [ %4481, %4475 ], [ %4474, %4369 ]
  %4487 = fmul float %4485, %4485
  %4488 = tail call float @llvm.fmuladd.f32(float %4487, float 0xBF29833040000000, float 0x3F81103880000000)
  %4489 = tail call float @llvm.fmuladd.f32(float %4487, float %4488, float 0xBFC55553A0000000)
  %4490 = fmul float %4487, %4489
  %4491 = tail call float @llvm.fmuladd.f32(float %4485, float %4490, float %4485)
  %4492 = tail call float @llvm.fmuladd.f32(float %4487, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %4493 = tail call float @llvm.fmuladd.f32(float %4487, float %4492, float 0x3FA5557EE0000000)
  %4494 = tail call float @llvm.fmuladd.f32(float %4487, float %4493, float 0xBFE0000080000000)
  %4495 = tail call float @llvm.fmuladd.f32(float %4487, float %4494, float 1.000000e+00)
  %4496 = and i32 %4486, 1
  %4497 = icmp eq i32 %4496, 0
  %4498 = select i1 %4497, float %4491, float %4495
  %4499 = bitcast float %4498 to i32
  %4500 = shl i32 %4486, 30
  %4501 = and i32 %4500, -2147483648
  %4502 = bitcast float %4366 to i32
  %4503 = xor i32 %4484, %4502
  %4504 = xor i32 %4503, %4501
  %4505 = xor i32 %4504, %4499
  %4506 = bitcast i32 %4505 to float
  %4507 = tail call i1 @llvm.amdgcn.class.f32(float %4367, i32 504)
  %4508 = select i1 %4507, float %4506, float 0x7FF8000000000000
  %4509 = tail call float @llvm.fabs.f32(float %4508)
  %4510 = tail call float @llvm.amdgcn.frexp.mant.f32(float %4509)
  %4511 = fcmp olt float %4510, 0x3FE5555560000000
  %4512 = zext i1 %4511 to i32
  %4513 = tail call float @llvm.amdgcn.ldexp.f32(float %4510, i32 %4512)
  %4514 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %4509)
  %4515 = sub nsw i32 %4514, %4512
  %4516 = fadd float %4513, -1.000000e+00
  %4517 = fadd float %4513, 1.000000e+00
  %4518 = fadd float %4517, -1.000000e+00
  %4519 = fsub float %4513, %4518
  %4520 = tail call float @llvm.amdgcn.rcp.f32(float %4517)
  %4521 = fmul float %4516, %4520
  %4522 = fmul float %4517, %4521
  %4523 = fneg float %4522
  %4524 = tail call float @llvm.fma.f32(float %4521, float %4517, float %4523)
  %4525 = tail call float @llvm.fma.f32(float %4521, float %4519, float %4524)
  %4526 = fadd float %4522, %4525
  %4527 = fsub float %4526, %4522
  %4528 = fsub float %4525, %4527
  %4529 = fsub float %4516, %4526
  %4530 = fsub float %4516, %4529
  %4531 = fsub float %4530, %4526
  %4532 = fsub float %4531, %4528
  %4533 = fadd float %4529, %4532
  %4534 = fmul float %4520, %4533
  %4535 = fadd float %4521, %4534
  %4536 = fsub float %4535, %4521
  %4537 = fsub float %4534, %4536
  %4538 = fmul float %4535, %4535
  %4539 = fneg float %4538
  %4540 = tail call float @llvm.fma.f32(float %4535, float %4535, float %4539)
  %4541 = fmul float %4537, 2.000000e+00
  %4542 = tail call float @llvm.fma.f32(float %4535, float %4541, float %4540)
  %4543 = fadd float %4538, %4542
  %4544 = fsub float %4543, %4538
  %4545 = fsub float %4542, %4544
  %4546 = tail call float @llvm.fmuladd.f32(float %4543, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %4547 = tail call float @llvm.fmuladd.f32(float %4543, float %4546, float 0x3FD999BDE0000000)
  %4548 = sitofp i32 %4515 to float
  %4549 = fmul float %4548, 0x3FE62E4300000000
  %4550 = fneg float %4549
  %4551 = tail call float @llvm.fma.f32(float %4548, float 0x3FE62E4300000000, float %4550)
  %4552 = tail call float @llvm.fma.f32(float %4548, float 0xBE205C6100000000, float %4551)
  %4553 = fadd float %4549, %4552
  %4554 = fsub float %4553, %4549
  %4555 = fsub float %4552, %4554
  %4556 = tail call float @llvm.amdgcn.ldexp.f32(float %4535, i32 1)
  %4557 = fmul float %4535, %4543
  %4558 = fneg float %4557
  %4559 = tail call float @llvm.fma.f32(float %4543, float %4535, float %4558)
  %4560 = tail call float @llvm.fma.f32(float %4543, float %4537, float %4559)
  %4561 = tail call float @llvm.fma.f32(float %4545, float %4535, float %4560)
  %4562 = fadd float %4557, %4561
  %4563 = fsub float %4562, %4557
  %4564 = fsub float %4561, %4563
  %4565 = fmul float %4543, %4547
  %4566 = fneg float %4565
  %4567 = tail call float @llvm.fma.f32(float %4543, float %4547, float %4566)
  %4568 = tail call float @llvm.fma.f32(float %4545, float %4547, float %4567)
  %4569 = fadd float %4565, %4568
  %4570 = fsub float %4569, %4565
  %4571 = fsub float %4568, %4570
  %4572 = fadd float %4569, 0x3FE5555540000000
  %4573 = fadd float %4572, 0xBFE5555540000000
  %4574 = fsub float %4569, %4573
  %4575 = fadd float %4571, 0x3E2E720200000000
  %4576 = fadd float %4575, %4574
  %4577 = fadd float %4572, %4576
  %4578 = fsub float %4577, %4572
  %4579 = fsub float %4576, %4578
  %4580 = fmul float %4562, %4577
  %4581 = fneg float %4580
  %4582 = tail call float @llvm.fma.f32(float %4562, float %4577, float %4581)
  %4583 = tail call float @llvm.fma.f32(float %4562, float %4579, float %4582)
  %4584 = tail call float @llvm.fma.f32(float %4564, float %4577, float %4583)
  %4585 = tail call float @llvm.amdgcn.ldexp.f32(float %4537, i32 1)
  %4586 = fadd float %4580, %4584
  %4587 = fsub float %4586, %4580
  %4588 = fsub float %4584, %4587
  %4589 = fadd float %4556, %4586
  %4590 = fsub float %4589, %4556
  %4591 = fsub float %4586, %4590
  %4592 = fadd float %4585, %4588
  %4593 = fadd float %4592, %4591
  %4594 = fadd float %4589, %4593
  %4595 = fsub float %4594, %4589
  %4596 = fsub float %4593, %4595
  %4597 = fadd float %4553, %4594
  %4598 = fsub float %4597, %4553
  %4599 = fsub float %4597, %4598
  %4600 = fsub float %4553, %4599
  %4601 = fsub float %4594, %4598
  %4602 = fadd float %4601, %4600
  %4603 = fadd float %4555, %4596
  %4604 = fsub float %4603, %4555
  %4605 = fsub float %4603, %4604
  %4606 = fsub float %4555, %4605
  %4607 = fsub float %4596, %4604
  %4608 = fadd float %4607, %4606
  %4609 = fadd float %4603, %4602
  %4610 = fadd float %4597, %4609
  %4611 = fsub float %4610, %4597
  %4612 = fsub float %4609, %4611
  %4613 = fadd float %4608, %4612
  %4614 = fadd float %4610, %4613
  %4615 = fsub float %4614, %4610
  %4616 = fsub float %4613, %4615
  %4617 = fmul float %4614, 2.000000e+00
  %4618 = fneg float %4617
  %4619 = tail call float @llvm.fma.f32(float %4614, float 2.000000e+00, float %4618)
  %4620 = fmul float %4614, 0.000000e+00
  %4621 = tail call float @llvm.fma.f32(float %4616, float 2.000000e+00, float %4620)
  %4622 = fadd float %4619, %4621
  %4623 = fadd float %4617, %4622
  %4624 = fsub float %4623, %4617
  %4625 = fsub float %4622, %4624
  %4626 = tail call float @llvm.fabs.f32(float %4617) #3
  %4627 = fcmp oeq float %4626, 0x7FF0000000000000
  %4628 = select i1 %4627, float %4617, float %4623
  %4629 = tail call float @llvm.fabs.f32(float %4628) #3
  %4630 = fcmp oeq float %4629, 0x7FF0000000000000
  %4631 = select i1 %4630, float 0.000000e+00, float %4625
  %4632 = fcmp oeq float %4628, 0x40562E4300000000
  %4633 = select i1 %4632, float 0x3EE0000000000000, float 0.000000e+00
  %4634 = fsub float %4628, %4633
  %4635 = fadd float %4633, %4631
  %4636 = fmul float %4634, 0x3FF7154760000000
  %4637 = tail call float @llvm.rint.f32(float %4636)
  %4638 = fcmp ogt float %4634, 0x40562E4300000000
  %4639 = fcmp olt float %4634, 0xC059D1DA00000000
  %4640 = fneg float %4636
  %4641 = tail call float @llvm.fma.f32(float %4634, float 0x3FF7154760000000, float %4640)
  %4642 = tail call float @llvm.fma.f32(float %4634, float 0x3E54AE0BE0000000, float %4641)
  %4643 = fsub float %4636, %4637
  %4644 = fadd float %4642, %4643
  %4645 = tail call float @llvm.exp2.f32(float %4644)
  %4646 = fptosi float %4637 to i32
  %4647 = tail call float @llvm.amdgcn.ldexp.f32(float %4645, i32 %4646)
  %4648 = select i1 %4639, float 0.000000e+00, float %4647
  %4649 = select i1 %4638, float 0x7FF0000000000000, float %4648
  %4650 = tail call float @llvm.fma.f32(float %4649, float %4635, float %4649)
  %4651 = tail call float @llvm.fabs.f32(float %4649) #3
  %4652 = fcmp oeq float %4651, 0x7FF0000000000000
  %4653 = select i1 %4652, float %4649, float %4650
  %4654 = tail call float @llvm.fabs.f32(float %4653)
  %4655 = fcmp oeq float %4509, 0x7FF0000000000000
  %4656 = fcmp oeq float %4508, 0.000000e+00
  %4657 = fcmp uno float %4508, 0.000000e+00
  %4658 = fmul contract float %4654, 1.000000e+01
  %4659 = fadd contract float %4658, 1.000000e+00
  %4660 = select i1 %4655, float 0x7FF0000000000000, float %4659
  %4661 = select i1 %4656, float 1.000000e+00, float %4660
  %4662 = select i1 %4657, float 0x7FF8000000000000, float %4661
  %4663 = fmul contract float %4365, %4662
  %4664 = fadd contract float %4201, %4663
  br i1 %4199, label %4198, label %4665, !llvm.loop !9

4665:                                             ; preds = %4483
  %4666 = load float, float addrspace(1)* %0, align 4, !tbaa !4
  %4667 = fadd contract float %4666, -1.000000e+00
  %4668 = fmul contract float %4667, 2.500000e-01
  %4669 = fadd contract float %4668, 1.000000e+00
  %4670 = load float, float addrspace(1)* %3, align 4, !tbaa !4
  %4671 = fadd contract float %4670, -1.000000e+00
  %4672 = fmul contract float %4671, 2.500000e-01
  %4673 = fadd contract float %4672, 1.000000e+00
  %4674 = fmul contract float %4669, 0x400921CAC0000000
  %4675 = tail call float @llvm.fabs.f32(float %4674)
  %4676 = fcmp olt float %4675, 1.310720e+05
  br i1 %4676, label %4783, label %4677

4677:                                             ; preds = %4665
  %4678 = bitcast float %4675 to i32
  %4679 = lshr i32 %4678, 23
  %4680 = and i32 %4678, 8388607
  %4681 = or i32 %4680, 8388608
  %4682 = zext i32 %4681 to i64
  %4683 = mul nuw nsw i64 %4682, 4266746795
  %4684 = trunc i64 %4683 to i32
  %4685 = lshr i64 %4683, 32
  %4686 = mul nuw nsw i64 %4682, 1011060801
  %4687 = add nuw nsw i64 %4685, %4686
  %4688 = trunc i64 %4687 to i32
  %4689 = lshr i64 %4687, 32
  %4690 = mul nuw nsw i64 %4682, 3680671129
  %4691 = add nuw nsw i64 %4689, %4690
  %4692 = trunc i64 %4691 to i32
  %4693 = lshr i64 %4691, 32
  %4694 = mul nuw nsw i64 %4682, 4113882560
  %4695 = add nuw nsw i64 %4693, %4694
  %4696 = trunc i64 %4695 to i32
  %4697 = lshr i64 %4695, 32
  %4698 = mul nuw nsw i64 %4682, 4230436817
  %4699 = add nuw nsw i64 %4697, %4698
  %4700 = trunc i64 %4699 to i32
  %4701 = lshr i64 %4699, 32
  %4702 = mul nuw nsw i64 %4682, 1313084713
  %4703 = add nuw nsw i64 %4701, %4702
  %4704 = trunc i64 %4703 to i32
  %4705 = lshr i64 %4703, 32
  %4706 = mul nuw nsw i64 %4682, 2734261102
  %4707 = add nuw nsw i64 %4705, %4706
  %4708 = trunc i64 %4707 to i32
  %4709 = lshr i64 %4707, 32
  %4710 = trunc i64 %4709 to i32
  %4711 = add nsw i32 %4679, -120
  %4712 = icmp ugt i32 %4711, 63
  %4713 = select i1 %4712, i32 %4704, i32 %4710
  %4714 = select i1 %4712, i32 %4700, i32 %4708
  %4715 = select i1 %4712, i32 %4696, i32 %4704
  %4716 = select i1 %4712, i32 %4692, i32 %4700
  %4717 = select i1 %4712, i32 %4688, i32 %4696
  %4718 = select i1 %4712, i32 %4684, i32 %4692
  %4719 = select i1 %4712, i32 -64, i32 0
  %4720 = add nsw i32 %4719, %4711
  %4721 = icmp ugt i32 %4720, 31
  %4722 = select i1 %4721, i32 %4714, i32 %4713
  %4723 = select i1 %4721, i32 %4715, i32 %4714
  %4724 = select i1 %4721, i32 %4716, i32 %4715
  %4725 = select i1 %4721, i32 %4717, i32 %4716
  %4726 = select i1 %4721, i32 %4718, i32 %4717
  %4727 = select i1 %4721, i32 -32, i32 0
  %4728 = add nsw i32 %4727, %4720
  %4729 = icmp ugt i32 %4728, 31
  %4730 = select i1 %4729, i32 %4723, i32 %4722
  %4731 = select i1 %4729, i32 %4724, i32 %4723
  %4732 = select i1 %4729, i32 %4725, i32 %4724
  %4733 = select i1 %4729, i32 %4726, i32 %4725
  %4734 = select i1 %4729, i32 -32, i32 0
  %4735 = add nsw i32 %4734, %4728
  %4736 = icmp eq i32 %4735, 0
  %4737 = sub nsw i32 32, %4735
  %4738 = tail call i32 @llvm.fshr.i32(i32 %4730, i32 %4731, i32 %4737)
  %4739 = tail call i32 @llvm.fshr.i32(i32 %4731, i32 %4732, i32 %4737)
  %4740 = tail call i32 @llvm.fshr.i32(i32 %4732, i32 %4733, i32 %4737)
  %4741 = select i1 %4736, i32 %4730, i32 %4738
  %4742 = select i1 %4736, i32 %4731, i32 %4739
  %4743 = select i1 %4736, i32 %4732, i32 %4740
  %4744 = lshr i32 %4741, 29
  %4745 = tail call i32 @llvm.fshl.i32(i32 %4741, i32 %4742, i32 2)
  %4746 = tail call i32 @llvm.fshl.i32(i32 %4742, i32 %4743, i32 2)
  %4747 = tail call i32 @llvm.fshl.i32(i32 %4743, i32 %4733, i32 2)
  %4748 = and i32 %4744, 1
  %4749 = sub nsw i32 0, %4748
  %4750 = shl i32 %4744, 31
  %4751 = xor i32 %4745, %4749
  %4752 = xor i32 %4746, %4749
  %4753 = xor i32 %4747, %4749
  %4754 = tail call i32 @llvm.ctlz.i32(i32 %4751, i1 false), !range !8
  %4755 = sub nsw i32 31, %4754
  %4756 = tail call i32 @llvm.fshr.i32(i32 %4751, i32 %4752, i32 %4755)
  %4757 = tail call i32 @llvm.fshr.i32(i32 %4752, i32 %4753, i32 %4755)
  %4758 = shl nuw nsw i32 %4754, 23
  %4759 = sub nuw nsw i32 1056964608, %4758
  %4760 = lshr i32 %4756, 9
  %4761 = or i32 %4760, %4759
  %4762 = or i32 %4761, %4750
  %4763 = bitcast i32 %4762 to float
  %4764 = tail call i32 @llvm.fshl.i32(i32 %4756, i32 %4757, i32 23)
  %4765 = tail call i32 @llvm.ctlz.i32(i32 %4764, i1 false), !range !8
  %4766 = fmul float %4763, 0x3FF921FB40000000
  %4767 = add nuw nsw i32 %4765, %4754
  %4768 = shl nuw nsw i32 %4767, 23
  %4769 = sub nuw nsw i32 855638016, %4768
  %4770 = sub nsw i32 31, %4765
  %4771 = tail call i32 @llvm.fshr.i32(i32 %4764, i32 %4757, i32 %4770)
  %4772 = lshr i32 %4771, 9
  %4773 = or i32 %4769, %4772
  %4774 = or i32 %4773, %4750
  %4775 = bitcast i32 %4774 to float
  %4776 = fneg float %4766
  %4777 = tail call float @llvm.fma.f32(float %4763, float 0x3FF921FB40000000, float %4776)
  %4778 = tail call float @llvm.fma.f32(float %4763, float 0x3E74442D00000000, float %4777)
  %4779 = tail call float @llvm.fma.f32(float %4775, float 0x3FF921FB40000000, float %4778)
  %4780 = fadd float %4766, %4779
  %4781 = lshr i32 %4741, 30
  %4782 = add nuw nsw i32 %4748, %4781
  br label %4791

4783:                                             ; preds = %4665
  %4784 = fmul float %4675, 0x3FE45F3060000000
  %4785 = tail call float @llvm.rint.f32(float %4784)
  %4786 = tail call float @llvm.fma.f32(float %4785, float 0xBFF921FB40000000, float %4675)
  %4787 = tail call float @llvm.fma.f32(float %4785, float 0xBE74442D00000000, float %4786)
  %4788 = tail call float @llvm.fma.f32(float %4785, float 0xBCF8469880000000, float %4787)
  %4789 = fptosi float %4785 to i32
  %4790 = bitcast float %4675 to i32
  br label %4791

4791:                                             ; preds = %4783, %4677
  %4792 = phi i32 [ %4790, %4783 ], [ %4678, %4677 ]
  %4793 = phi float [ %4788, %4783 ], [ %4780, %4677 ]
  %4794 = phi i32 [ %4789, %4783 ], [ %4782, %4677 ]
  %4795 = fmul float %4793, %4793
  %4796 = tail call float @llvm.fmuladd.f32(float %4795, float 0xBF29833040000000, float 0x3F81103880000000)
  %4797 = tail call float @llvm.fmuladd.f32(float %4795, float %4796, float 0xBFC55553A0000000)
  %4798 = fmul float %4795, %4797
  %4799 = tail call float @llvm.fmuladd.f32(float %4793, float %4798, float %4793)
  %4800 = tail call float @llvm.fmuladd.f32(float %4795, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %4801 = tail call float @llvm.fmuladd.f32(float %4795, float %4800, float 0x3FA5557EE0000000)
  %4802 = tail call float @llvm.fmuladd.f32(float %4795, float %4801, float 0xBFE0000080000000)
  %4803 = tail call float @llvm.fmuladd.f32(float %4795, float %4802, float 1.000000e+00)
  %4804 = and i32 %4794, 1
  %4805 = icmp eq i32 %4804, 0
  %4806 = select i1 %4805, float %4799, float %4803
  %4807 = bitcast float %4806 to i32
  %4808 = shl i32 %4794, 30
  %4809 = and i32 %4808, -2147483648
  %4810 = bitcast float %4674 to i32
  %4811 = xor i32 %4792, %4810
  %4812 = xor i32 %4811, %4809
  %4813 = xor i32 %4812, %4807
  %4814 = bitcast i32 %4813 to float
  %4815 = tail call i1 @llvm.amdgcn.class.f32(float %4675, i32 504)
  %4816 = select i1 %4815, float %4814, float 0x7FF8000000000000
  %4817 = tail call float @llvm.fabs.f32(float %4816)
  %4818 = tail call float @llvm.amdgcn.frexp.mant.f32(float %4817)
  %4819 = fcmp olt float %4818, 0x3FE5555560000000
  %4820 = zext i1 %4819 to i32
  %4821 = tail call float @llvm.amdgcn.ldexp.f32(float %4818, i32 %4820)
  %4822 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %4817)
  %4823 = sub nsw i32 %4822, %4820
  %4824 = fadd float %4821, -1.000000e+00
  %4825 = fadd float %4821, 1.000000e+00
  %4826 = fadd float %4825, -1.000000e+00
  %4827 = fsub float %4821, %4826
  %4828 = tail call float @llvm.amdgcn.rcp.f32(float %4825)
  %4829 = fmul float %4824, %4828
  %4830 = fmul float %4825, %4829
  %4831 = fneg float %4830
  %4832 = tail call float @llvm.fma.f32(float %4829, float %4825, float %4831)
  %4833 = tail call float @llvm.fma.f32(float %4829, float %4827, float %4832)
  %4834 = fadd float %4830, %4833
  %4835 = fsub float %4834, %4830
  %4836 = fsub float %4833, %4835
  %4837 = fsub float %4824, %4834
  %4838 = fsub float %4824, %4837
  %4839 = fsub float %4838, %4834
  %4840 = fsub float %4839, %4836
  %4841 = fadd float %4837, %4840
  %4842 = fmul float %4828, %4841
  %4843 = fadd float %4829, %4842
  %4844 = fsub float %4843, %4829
  %4845 = fsub float %4842, %4844
  %4846 = fmul float %4843, %4843
  %4847 = fneg float %4846
  %4848 = tail call float @llvm.fma.f32(float %4843, float %4843, float %4847)
  %4849 = fmul float %4845, 2.000000e+00
  %4850 = tail call float @llvm.fma.f32(float %4843, float %4849, float %4848)
  %4851 = fadd float %4846, %4850
  %4852 = fsub float %4851, %4846
  %4853 = fsub float %4850, %4852
  %4854 = tail call float @llvm.fmuladd.f32(float %4851, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %4855 = tail call float @llvm.fmuladd.f32(float %4851, float %4854, float 0x3FD999BDE0000000)
  %4856 = sitofp i32 %4823 to float
  %4857 = fmul float %4856, 0x3FE62E4300000000
  %4858 = fneg float %4857
  %4859 = tail call float @llvm.fma.f32(float %4856, float 0x3FE62E4300000000, float %4858)
  %4860 = tail call float @llvm.fma.f32(float %4856, float 0xBE205C6100000000, float %4859)
  %4861 = fadd float %4857, %4860
  %4862 = fsub float %4861, %4857
  %4863 = fsub float %4860, %4862
  %4864 = tail call float @llvm.amdgcn.ldexp.f32(float %4843, i32 1)
  %4865 = fmul float %4843, %4851
  %4866 = fneg float %4865
  %4867 = tail call float @llvm.fma.f32(float %4851, float %4843, float %4866)
  %4868 = tail call float @llvm.fma.f32(float %4851, float %4845, float %4867)
  %4869 = tail call float @llvm.fma.f32(float %4853, float %4843, float %4868)
  %4870 = fadd float %4865, %4869
  %4871 = fsub float %4870, %4865
  %4872 = fsub float %4869, %4871
  %4873 = fmul float %4851, %4855
  %4874 = fneg float %4873
  %4875 = tail call float @llvm.fma.f32(float %4851, float %4855, float %4874)
  %4876 = tail call float @llvm.fma.f32(float %4853, float %4855, float %4875)
  %4877 = fadd float %4873, %4876
  %4878 = fsub float %4877, %4873
  %4879 = fsub float %4876, %4878
  %4880 = fadd float %4877, 0x3FE5555540000000
  %4881 = fadd float %4880, 0xBFE5555540000000
  %4882 = fsub float %4877, %4881
  %4883 = fadd float %4879, 0x3E2E720200000000
  %4884 = fadd float %4883, %4882
  %4885 = fadd float %4880, %4884
  %4886 = fsub float %4885, %4880
  %4887 = fsub float %4884, %4886
  %4888 = fmul float %4870, %4885
  %4889 = fneg float %4888
  %4890 = tail call float @llvm.fma.f32(float %4870, float %4885, float %4889)
  %4891 = tail call float @llvm.fma.f32(float %4870, float %4887, float %4890)
  %4892 = tail call float @llvm.fma.f32(float %4872, float %4885, float %4891)
  %4893 = tail call float @llvm.amdgcn.ldexp.f32(float %4845, i32 1)
  %4894 = fadd float %4888, %4892
  %4895 = fsub float %4894, %4888
  %4896 = fsub float %4892, %4895
  %4897 = fadd float %4864, %4894
  %4898 = fsub float %4897, %4864
  %4899 = fsub float %4894, %4898
  %4900 = fadd float %4893, %4896
  %4901 = fadd float %4900, %4899
  %4902 = fadd float %4897, %4901
  %4903 = fsub float %4902, %4897
  %4904 = fsub float %4901, %4903
  %4905 = fadd float %4861, %4902
  %4906 = fsub float %4905, %4861
  %4907 = fsub float %4905, %4906
  %4908 = fsub float %4861, %4907
  %4909 = fsub float %4902, %4906
  %4910 = fadd float %4909, %4908
  %4911 = fadd float %4863, %4904
  %4912 = fsub float %4911, %4863
  %4913 = fsub float %4911, %4912
  %4914 = fsub float %4863, %4913
  %4915 = fsub float %4904, %4912
  %4916 = fadd float %4915, %4914
  %4917 = fadd float %4911, %4910
  %4918 = fadd float %4905, %4917
  %4919 = fsub float %4918, %4905
  %4920 = fsub float %4917, %4919
  %4921 = fadd float %4916, %4920
  %4922 = fadd float %4918, %4921
  %4923 = fsub float %4922, %4918
  %4924 = fsub float %4921, %4923
  %4925 = fmul float %4922, 2.000000e+00
  %4926 = fneg float %4925
  %4927 = tail call float @llvm.fma.f32(float %4922, float 2.000000e+00, float %4926)
  %4928 = fmul float %4922, 0.000000e+00
  %4929 = tail call float @llvm.fma.f32(float %4924, float 2.000000e+00, float %4928)
  %4930 = fadd float %4927, %4929
  %4931 = fadd float %4925, %4930
  %4932 = fsub float %4931, %4925
  %4933 = fsub float %4930, %4932
  %4934 = tail call float @llvm.fabs.f32(float %4925) #3
  %4935 = fcmp oeq float %4934, 0x7FF0000000000000
  %4936 = select i1 %4935, float %4925, float %4931
  %4937 = tail call float @llvm.fabs.f32(float %4936) #3
  %4938 = fcmp oeq float %4937, 0x7FF0000000000000
  %4939 = select i1 %4938, float 0.000000e+00, float %4933
  %4940 = fcmp oeq float %4936, 0x40562E4300000000
  %4941 = select i1 %4940, float 0x3EE0000000000000, float 0.000000e+00
  %4942 = fsub float %4936, %4941
  %4943 = fadd float %4941, %4939
  %4944 = fmul float %4942, 0x3FF7154760000000
  %4945 = tail call float @llvm.rint.f32(float %4944)
  %4946 = fcmp ogt float %4942, 0x40562E4300000000
  %4947 = fcmp olt float %4942, 0xC059D1DA00000000
  %4948 = fneg float %4944
  %4949 = tail call float @llvm.fma.f32(float %4942, float 0x3FF7154760000000, float %4948)
  %4950 = tail call float @llvm.fma.f32(float %4942, float 0x3E54AE0BE0000000, float %4949)
  %4951 = fsub float %4944, %4945
  %4952 = fadd float %4950, %4951
  %4953 = tail call float @llvm.exp2.f32(float %4952)
  %4954 = fptosi float %4945 to i32
  %4955 = tail call float @llvm.amdgcn.ldexp.f32(float %4953, i32 %4954)
  %4956 = select i1 %4947, float 0.000000e+00, float %4955
  %4957 = select i1 %4946, float 0x7FF0000000000000, float %4956
  %4958 = tail call float @llvm.fma.f32(float %4957, float %4943, float %4957)
  %4959 = tail call float @llvm.fabs.f32(float %4957) #3
  %4960 = fcmp oeq float %4959, 0x7FF0000000000000
  %4961 = select i1 %4960, float %4957, float %4958
  %4962 = tail call float @llvm.fabs.f32(float %4961)
  %4963 = fcmp oeq float %4817, 0x7FF0000000000000
  %4964 = fcmp oeq float %4816, 0.000000e+00
  %4965 = select i1 %4963, float 0x7FF0000000000000, float %4962
  %4966 = select i1 %4964, float 0.000000e+00, float %4965
  %4967 = fcmp uno float %4816, 0.000000e+00
  %4968 = select i1 %4967, float 0x7FF8000000000000, float %4966
  %4969 = fadd contract float %4673, -1.000000e+00
  %4970 = tail call float @llvm.fabs.f32(float %4969)
  %4971 = tail call float @llvm.amdgcn.frexp.mant.f32(float %4970)
  %4972 = fcmp olt float %4971, 0x3FE5555560000000
  %4973 = zext i1 %4972 to i32
  %4974 = tail call float @llvm.amdgcn.ldexp.f32(float %4971, i32 %4973)
  %4975 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %4970)
  %4976 = sub nsw i32 %4975, %4973
  %4977 = fadd float %4974, -1.000000e+00
  %4978 = fadd float %4974, 1.000000e+00
  %4979 = fadd float %4978, -1.000000e+00
  %4980 = fsub float %4974, %4979
  %4981 = tail call float @llvm.amdgcn.rcp.f32(float %4978)
  %4982 = fmul float %4977, %4981
  %4983 = fmul float %4978, %4982
  %4984 = fneg float %4983
  %4985 = tail call float @llvm.fma.f32(float %4982, float %4978, float %4984)
  %4986 = tail call float @llvm.fma.f32(float %4982, float %4980, float %4985)
  %4987 = fadd float %4983, %4986
  %4988 = fsub float %4987, %4983
  %4989 = fsub float %4986, %4988
  %4990 = fsub float %4977, %4987
  %4991 = fsub float %4977, %4990
  %4992 = fsub float %4991, %4987
  %4993 = fsub float %4992, %4989
  %4994 = fadd float %4990, %4993
  %4995 = fmul float %4981, %4994
  %4996 = fadd float %4982, %4995
  %4997 = fsub float %4996, %4982
  %4998 = fsub float %4995, %4997
  %4999 = fmul float %4996, %4996
  %5000 = fneg float %4999
  %5001 = tail call float @llvm.fma.f32(float %4996, float %4996, float %5000)
  %5002 = fmul float %4998, 2.000000e+00
  %5003 = tail call float @llvm.fma.f32(float %4996, float %5002, float %5001)
  %5004 = fadd float %4999, %5003
  %5005 = fsub float %5004, %4999
  %5006 = fsub float %5003, %5005
  %5007 = tail call float @llvm.fmuladd.f32(float %5004, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %5008 = tail call float @llvm.fmuladd.f32(float %5004, float %5007, float 0x3FD999BDE0000000)
  %5009 = sitofp i32 %4976 to float
  %5010 = fmul float %5009, 0x3FE62E4300000000
  %5011 = fneg float %5010
  %5012 = tail call float @llvm.fma.f32(float %5009, float 0x3FE62E4300000000, float %5011)
  %5013 = tail call float @llvm.fma.f32(float %5009, float 0xBE205C6100000000, float %5012)
  %5014 = fadd float %5010, %5013
  %5015 = fsub float %5014, %5010
  %5016 = fsub float %5013, %5015
  %5017 = tail call float @llvm.amdgcn.ldexp.f32(float %4996, i32 1)
  %5018 = fmul float %4996, %5004
  %5019 = fneg float %5018
  %5020 = tail call float @llvm.fma.f32(float %5004, float %4996, float %5019)
  %5021 = tail call float @llvm.fma.f32(float %5004, float %4998, float %5020)
  %5022 = tail call float @llvm.fma.f32(float %5006, float %4996, float %5021)
  %5023 = fadd float %5018, %5022
  %5024 = fsub float %5023, %5018
  %5025 = fsub float %5022, %5024
  %5026 = fmul float %5004, %5008
  %5027 = fneg float %5026
  %5028 = tail call float @llvm.fma.f32(float %5004, float %5008, float %5027)
  %5029 = tail call float @llvm.fma.f32(float %5006, float %5008, float %5028)
  %5030 = fadd float %5026, %5029
  %5031 = fsub float %5030, %5026
  %5032 = fsub float %5029, %5031
  %5033 = fadd float %5030, 0x3FE5555540000000
  %5034 = fadd float %5033, 0xBFE5555540000000
  %5035 = fsub float %5030, %5034
  %5036 = fadd float %5032, 0x3E2E720200000000
  %5037 = fadd float %5036, %5035
  %5038 = fadd float %5033, %5037
  %5039 = fsub float %5038, %5033
  %5040 = fsub float %5037, %5039
  %5041 = fmul float %5023, %5038
  %5042 = fneg float %5041
  %5043 = tail call float @llvm.fma.f32(float %5023, float %5038, float %5042)
  %5044 = tail call float @llvm.fma.f32(float %5023, float %5040, float %5043)
  %5045 = tail call float @llvm.fma.f32(float %5025, float %5038, float %5044)
  %5046 = tail call float @llvm.amdgcn.ldexp.f32(float %4998, i32 1)
  %5047 = fadd float %5041, %5045
  %5048 = fsub float %5047, %5041
  %5049 = fsub float %5045, %5048
  %5050 = fadd float %5017, %5047
  %5051 = fsub float %5050, %5017
  %5052 = fsub float %5047, %5051
  %5053 = fadd float %5046, %5049
  %5054 = fadd float %5053, %5052
  %5055 = fadd float %5050, %5054
  %5056 = fsub float %5055, %5050
  %5057 = fsub float %5054, %5056
  %5058 = fadd float %5014, %5055
  %5059 = fsub float %5058, %5014
  %5060 = fsub float %5058, %5059
  %5061 = fsub float %5014, %5060
  %5062 = fsub float %5055, %5059
  %5063 = fadd float %5062, %5061
  %5064 = fadd float %5016, %5057
  %5065 = fsub float %5064, %5016
  %5066 = fsub float %5064, %5065
  %5067 = fsub float %5016, %5066
  %5068 = fsub float %5057, %5065
  %5069 = fadd float %5068, %5067
  %5070 = fadd float %5064, %5063
  %5071 = fadd float %5058, %5070
  %5072 = fsub float %5071, %5058
  %5073 = fsub float %5070, %5072
  %5074 = fadd float %5069, %5073
  %5075 = fadd float %5071, %5074
  %5076 = fsub float %5075, %5071
  %5077 = fsub float %5074, %5076
  %5078 = fmul float %5075, 2.000000e+00
  %5079 = fneg float %5078
  %5080 = tail call float @llvm.fma.f32(float %5075, float 2.000000e+00, float %5079)
  %5081 = fmul float %5075, 0.000000e+00
  %5082 = tail call float @llvm.fma.f32(float %5077, float 2.000000e+00, float %5081)
  %5083 = fadd float %5080, %5082
  %5084 = fadd float %5078, %5083
  %5085 = fsub float %5084, %5078
  %5086 = fsub float %5083, %5085
  %5087 = tail call float @llvm.fabs.f32(float %5078) #3
  %5088 = fcmp oeq float %5087, 0x7FF0000000000000
  %5089 = select i1 %5088, float %5078, float %5084
  %5090 = tail call float @llvm.fabs.f32(float %5089) #3
  %5091 = fcmp oeq float %5090, 0x7FF0000000000000
  %5092 = select i1 %5091, float 0.000000e+00, float %5086
  %5093 = fcmp oeq float %5089, 0x40562E4300000000
  %5094 = select i1 %5093, float 0x3EE0000000000000, float 0.000000e+00
  %5095 = fsub float %5089, %5094
  %5096 = fadd float %5094, %5092
  %5097 = fmul float %5095, 0x3FF7154760000000
  %5098 = tail call float @llvm.rint.f32(float %5097)
  %5099 = fcmp ogt float %5095, 0x40562E4300000000
  %5100 = fcmp olt float %5095, 0xC059D1DA00000000
  %5101 = fneg float %5097
  %5102 = tail call float @llvm.fma.f32(float %5095, float 0x3FF7154760000000, float %5101)
  %5103 = tail call float @llvm.fma.f32(float %5095, float 0x3E54AE0BE0000000, float %5102)
  %5104 = fsub float %5097, %5098
  %5105 = fadd float %5103, %5104
  %5106 = tail call float @llvm.exp2.f32(float %5105)
  %5107 = fptosi float %5098 to i32
  %5108 = tail call float @llvm.amdgcn.ldexp.f32(float %5106, i32 %5107)
  %5109 = select i1 %5100, float 0.000000e+00, float %5108
  %5110 = select i1 %5099, float 0x7FF0000000000000, float %5109
  %5111 = tail call float @llvm.fma.f32(float %5110, float %5096, float %5110)
  %5112 = tail call float @llvm.fabs.f32(float %5110) #3
  %5113 = fcmp oeq float %5112, 0x7FF0000000000000
  %5114 = select i1 %5113, float %5110, float %5111
  %5115 = tail call float @llvm.fabs.f32(float %5114)
  %5116 = fcmp oeq float %4970, 0x7FF0000000000000
  %5117 = fcmp oeq float %4969, 0.000000e+00
  %5118 = select i1 %5116, float 0x7FF0000000000000, float %5115
  %5119 = select i1 %5117, float 0.000000e+00, float %5118
  %5120 = fcmp uno float %4969, 0.000000e+00
  %5121 = select i1 %5120, float 0x7FF8000000000000, float %5119
  %5122 = fadd contract float %5121, %4968
  %5123 = fadd contract float %5122, 0.000000e+00
  br label %5124

5124:                                             ; preds = %5411, %4791
  %5125 = phi i1 [ true, %4791 ], [ false, %5411 ]
  %5126 = phi i32 [ 0, %4791 ], [ 1, %5411 ]
  %5127 = phi float [ %5123, %4791 ], [ %5592, %5411 ]
  %5128 = zext i32 %5126 to i64
  %5129 = getelementptr inbounds float, float addrspace(1)* %0, i64 %5128
  %5130 = load float, float addrspace(1)* %5129, align 4, !tbaa !4
  %5131 = fadd contract float %5130, -1.000000e+00
  %5132 = fmul contract float %5131, 2.500000e-01
  %5133 = fadd contract float %5132, 1.000000e+00
  %5134 = add nuw nsw i32 %5126, 1
  %5135 = zext i32 %5134 to i64
  %5136 = getelementptr inbounds float, float addrspace(1)* %0, i64 %5135
  %5137 = load float, float addrspace(1)* %5136, align 4, !tbaa !4
  %5138 = fadd contract float %5137, -1.000000e+00
  %5139 = fmul contract float %5138, 2.500000e-01
  %5140 = fadd contract float %5139, 1.000000e+00
  %5141 = fadd contract float %5133, -1.000000e+00
  %5142 = tail call float @llvm.fabs.f32(float %5141)
  %5143 = tail call float @llvm.amdgcn.frexp.mant.f32(float %5142)
  %5144 = fcmp olt float %5143, 0x3FE5555560000000
  %5145 = zext i1 %5144 to i32
  %5146 = tail call float @llvm.amdgcn.ldexp.f32(float %5143, i32 %5145)
  %5147 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %5142)
  %5148 = sub nsw i32 %5147, %5145
  %5149 = fadd float %5146, -1.000000e+00
  %5150 = fadd float %5146, 1.000000e+00
  %5151 = fadd float %5150, -1.000000e+00
  %5152 = fsub float %5146, %5151
  %5153 = tail call float @llvm.amdgcn.rcp.f32(float %5150)
  %5154 = fmul float %5149, %5153
  %5155 = fmul float %5150, %5154
  %5156 = fneg float %5155
  %5157 = tail call float @llvm.fma.f32(float %5154, float %5150, float %5156)
  %5158 = tail call float @llvm.fma.f32(float %5154, float %5152, float %5157)
  %5159 = fadd float %5155, %5158
  %5160 = fsub float %5159, %5155
  %5161 = fsub float %5158, %5160
  %5162 = fsub float %5149, %5159
  %5163 = fsub float %5149, %5162
  %5164 = fsub float %5163, %5159
  %5165 = fsub float %5164, %5161
  %5166 = fadd float %5162, %5165
  %5167 = fmul float %5153, %5166
  %5168 = fadd float %5154, %5167
  %5169 = fsub float %5168, %5154
  %5170 = fsub float %5167, %5169
  %5171 = fmul float %5168, %5168
  %5172 = fneg float %5171
  %5173 = tail call float @llvm.fma.f32(float %5168, float %5168, float %5172)
  %5174 = fmul float %5170, 2.000000e+00
  %5175 = tail call float @llvm.fma.f32(float %5168, float %5174, float %5173)
  %5176 = fadd float %5171, %5175
  %5177 = fsub float %5176, %5171
  %5178 = fsub float %5175, %5177
  %5179 = tail call float @llvm.fmuladd.f32(float %5176, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %5180 = tail call float @llvm.fmuladd.f32(float %5176, float %5179, float 0x3FD999BDE0000000)
  %5181 = sitofp i32 %5148 to float
  %5182 = fmul float %5181, 0x3FE62E4300000000
  %5183 = fneg float %5182
  %5184 = tail call float @llvm.fma.f32(float %5181, float 0x3FE62E4300000000, float %5183)
  %5185 = tail call float @llvm.fma.f32(float %5181, float 0xBE205C6100000000, float %5184)
  %5186 = fadd float %5182, %5185
  %5187 = fsub float %5186, %5182
  %5188 = fsub float %5185, %5187
  %5189 = tail call float @llvm.amdgcn.ldexp.f32(float %5168, i32 1)
  %5190 = fmul float %5168, %5176
  %5191 = fneg float %5190
  %5192 = tail call float @llvm.fma.f32(float %5176, float %5168, float %5191)
  %5193 = tail call float @llvm.fma.f32(float %5176, float %5170, float %5192)
  %5194 = tail call float @llvm.fma.f32(float %5178, float %5168, float %5193)
  %5195 = fadd float %5190, %5194
  %5196 = fsub float %5195, %5190
  %5197 = fsub float %5194, %5196
  %5198 = fmul float %5176, %5180
  %5199 = fneg float %5198
  %5200 = tail call float @llvm.fma.f32(float %5176, float %5180, float %5199)
  %5201 = tail call float @llvm.fma.f32(float %5178, float %5180, float %5200)
  %5202 = fadd float %5198, %5201
  %5203 = fsub float %5202, %5198
  %5204 = fsub float %5201, %5203
  %5205 = fadd float %5202, 0x3FE5555540000000
  %5206 = fadd float %5205, 0xBFE5555540000000
  %5207 = fsub float %5202, %5206
  %5208 = fadd float %5204, 0x3E2E720200000000
  %5209 = fadd float %5208, %5207
  %5210 = fadd float %5205, %5209
  %5211 = fsub float %5210, %5205
  %5212 = fsub float %5209, %5211
  %5213 = fmul float %5195, %5210
  %5214 = fneg float %5213
  %5215 = tail call float @llvm.fma.f32(float %5195, float %5210, float %5214)
  %5216 = tail call float @llvm.fma.f32(float %5195, float %5212, float %5215)
  %5217 = tail call float @llvm.fma.f32(float %5197, float %5210, float %5216)
  %5218 = tail call float @llvm.amdgcn.ldexp.f32(float %5170, i32 1)
  %5219 = fadd float %5213, %5217
  %5220 = fsub float %5219, %5213
  %5221 = fsub float %5217, %5220
  %5222 = fadd float %5189, %5219
  %5223 = fsub float %5222, %5189
  %5224 = fsub float %5219, %5223
  %5225 = fadd float %5218, %5221
  %5226 = fadd float %5225, %5224
  %5227 = fadd float %5222, %5226
  %5228 = fsub float %5227, %5222
  %5229 = fsub float %5226, %5228
  %5230 = fadd float %5186, %5227
  %5231 = fsub float %5230, %5186
  %5232 = fsub float %5230, %5231
  %5233 = fsub float %5186, %5232
  %5234 = fsub float %5227, %5231
  %5235 = fadd float %5234, %5233
  %5236 = fadd float %5188, %5229
  %5237 = fsub float %5236, %5188
  %5238 = fsub float %5236, %5237
  %5239 = fsub float %5188, %5238
  %5240 = fsub float %5229, %5237
  %5241 = fadd float %5240, %5239
  %5242 = fadd float %5236, %5235
  %5243 = fadd float %5230, %5242
  %5244 = fsub float %5243, %5230
  %5245 = fsub float %5242, %5244
  %5246 = fadd float %5241, %5245
  %5247 = fadd float %5243, %5246
  %5248 = fsub float %5247, %5243
  %5249 = fsub float %5246, %5248
  %5250 = fmul float %5247, 2.000000e+00
  %5251 = fneg float %5250
  %5252 = tail call float @llvm.fma.f32(float %5247, float 2.000000e+00, float %5251)
  %5253 = fmul float %5247, 0.000000e+00
  %5254 = tail call float @llvm.fma.f32(float %5249, float 2.000000e+00, float %5253)
  %5255 = fadd float %5252, %5254
  %5256 = fadd float %5250, %5255
  %5257 = fsub float %5256, %5250
  %5258 = fsub float %5255, %5257
  %5259 = tail call float @llvm.fabs.f32(float %5250) #3
  %5260 = fcmp oeq float %5259, 0x7FF0000000000000
  %5261 = select i1 %5260, float %5250, float %5256
  %5262 = tail call float @llvm.fabs.f32(float %5261) #3
  %5263 = fcmp oeq float %5262, 0x7FF0000000000000
  %5264 = select i1 %5263, float 0.000000e+00, float %5258
  %5265 = fcmp oeq float %5261, 0x40562E4300000000
  %5266 = select i1 %5265, float 0x3EE0000000000000, float 0.000000e+00
  %5267 = fsub float %5261, %5266
  %5268 = fadd float %5266, %5264
  %5269 = fmul float %5267, 0x3FF7154760000000
  %5270 = tail call float @llvm.rint.f32(float %5269)
  %5271 = fcmp ogt float %5267, 0x40562E4300000000
  %5272 = fcmp olt float %5267, 0xC059D1DA00000000
  %5273 = fneg float %5269
  %5274 = tail call float @llvm.fma.f32(float %5267, float 0x3FF7154760000000, float %5273)
  %5275 = tail call float @llvm.fma.f32(float %5267, float 0x3E54AE0BE0000000, float %5274)
  %5276 = fsub float %5269, %5270
  %5277 = fadd float %5275, %5276
  %5278 = tail call float @llvm.exp2.f32(float %5277)
  %5279 = fptosi float %5270 to i32
  %5280 = tail call float @llvm.amdgcn.ldexp.f32(float %5278, i32 %5279)
  %5281 = select i1 %5272, float 0.000000e+00, float %5280
  %5282 = select i1 %5271, float 0x7FF0000000000000, float %5281
  %5283 = tail call float @llvm.fma.f32(float %5282, float %5268, float %5282)
  %5284 = tail call float @llvm.fabs.f32(float %5282) #3
  %5285 = fcmp oeq float %5284, 0x7FF0000000000000
  %5286 = select i1 %5285, float %5282, float %5283
  %5287 = tail call float @llvm.fabs.f32(float %5286)
  %5288 = fcmp oeq float %5142, 0x7FF0000000000000
  %5289 = fcmp oeq float %5141, 0.000000e+00
  %5290 = select i1 %5288, float 0x7FF0000000000000, float %5287
  %5291 = select i1 %5289, float 0.000000e+00, float %5290
  %5292 = fcmp uno float %5141, 0.000000e+00
  %5293 = select i1 %5292, float 0x7FF8000000000000, float %5291
  %5294 = fmul contract float %5140, 0x400921CAC0000000
  %5295 = tail call float @llvm.fabs.f32(float %5294)
  %5296 = fcmp olt float %5295, 1.310720e+05
  br i1 %5296, label %5403, label %5297

5297:                                             ; preds = %5124
  %5298 = bitcast float %5295 to i32
  %5299 = lshr i32 %5298, 23
  %5300 = and i32 %5298, 8388607
  %5301 = or i32 %5300, 8388608
  %5302 = zext i32 %5301 to i64
  %5303 = mul nuw nsw i64 %5302, 4266746795
  %5304 = trunc i64 %5303 to i32
  %5305 = lshr i64 %5303, 32
  %5306 = mul nuw nsw i64 %5302, 1011060801
  %5307 = add nuw nsw i64 %5305, %5306
  %5308 = trunc i64 %5307 to i32
  %5309 = lshr i64 %5307, 32
  %5310 = mul nuw nsw i64 %5302, 3680671129
  %5311 = add nuw nsw i64 %5309, %5310
  %5312 = trunc i64 %5311 to i32
  %5313 = lshr i64 %5311, 32
  %5314 = mul nuw nsw i64 %5302, 4113882560
  %5315 = add nuw nsw i64 %5313, %5314
  %5316 = trunc i64 %5315 to i32
  %5317 = lshr i64 %5315, 32
  %5318 = mul nuw nsw i64 %5302, 4230436817
  %5319 = add nuw nsw i64 %5317, %5318
  %5320 = trunc i64 %5319 to i32
  %5321 = lshr i64 %5319, 32
  %5322 = mul nuw nsw i64 %5302, 1313084713
  %5323 = add nuw nsw i64 %5321, %5322
  %5324 = trunc i64 %5323 to i32
  %5325 = lshr i64 %5323, 32
  %5326 = mul nuw nsw i64 %5302, 2734261102
  %5327 = add nuw nsw i64 %5325, %5326
  %5328 = trunc i64 %5327 to i32
  %5329 = lshr i64 %5327, 32
  %5330 = trunc i64 %5329 to i32
  %5331 = add nsw i32 %5299, -120
  %5332 = icmp ugt i32 %5331, 63
  %5333 = select i1 %5332, i32 %5324, i32 %5330
  %5334 = select i1 %5332, i32 %5320, i32 %5328
  %5335 = select i1 %5332, i32 %5316, i32 %5324
  %5336 = select i1 %5332, i32 %5312, i32 %5320
  %5337 = select i1 %5332, i32 %5308, i32 %5316
  %5338 = select i1 %5332, i32 %5304, i32 %5312
  %5339 = select i1 %5332, i32 -64, i32 0
  %5340 = add nsw i32 %5339, %5331
  %5341 = icmp ugt i32 %5340, 31
  %5342 = select i1 %5341, i32 %5334, i32 %5333
  %5343 = select i1 %5341, i32 %5335, i32 %5334
  %5344 = select i1 %5341, i32 %5336, i32 %5335
  %5345 = select i1 %5341, i32 %5337, i32 %5336
  %5346 = select i1 %5341, i32 %5338, i32 %5337
  %5347 = select i1 %5341, i32 -32, i32 0
  %5348 = add nsw i32 %5347, %5340
  %5349 = icmp ugt i32 %5348, 31
  %5350 = select i1 %5349, i32 %5343, i32 %5342
  %5351 = select i1 %5349, i32 %5344, i32 %5343
  %5352 = select i1 %5349, i32 %5345, i32 %5344
  %5353 = select i1 %5349, i32 %5346, i32 %5345
  %5354 = select i1 %5349, i32 -32, i32 0
  %5355 = add nsw i32 %5354, %5348
  %5356 = icmp eq i32 %5355, 0
  %5357 = sub nsw i32 32, %5355
  %5358 = tail call i32 @llvm.fshr.i32(i32 %5350, i32 %5351, i32 %5357)
  %5359 = tail call i32 @llvm.fshr.i32(i32 %5351, i32 %5352, i32 %5357)
  %5360 = tail call i32 @llvm.fshr.i32(i32 %5352, i32 %5353, i32 %5357)
  %5361 = select i1 %5356, i32 %5350, i32 %5358
  %5362 = select i1 %5356, i32 %5351, i32 %5359
  %5363 = select i1 %5356, i32 %5352, i32 %5360
  %5364 = lshr i32 %5361, 29
  %5365 = tail call i32 @llvm.fshl.i32(i32 %5361, i32 %5362, i32 2)
  %5366 = tail call i32 @llvm.fshl.i32(i32 %5362, i32 %5363, i32 2)
  %5367 = tail call i32 @llvm.fshl.i32(i32 %5363, i32 %5353, i32 2)
  %5368 = and i32 %5364, 1
  %5369 = sub nsw i32 0, %5368
  %5370 = shl i32 %5364, 31
  %5371 = xor i32 %5365, %5369
  %5372 = xor i32 %5366, %5369
  %5373 = xor i32 %5367, %5369
  %5374 = tail call i32 @llvm.ctlz.i32(i32 %5371, i1 false), !range !8
  %5375 = sub nsw i32 31, %5374
  %5376 = tail call i32 @llvm.fshr.i32(i32 %5371, i32 %5372, i32 %5375)
  %5377 = tail call i32 @llvm.fshr.i32(i32 %5372, i32 %5373, i32 %5375)
  %5378 = shl nuw nsw i32 %5374, 23
  %5379 = sub nuw nsw i32 1056964608, %5378
  %5380 = lshr i32 %5376, 9
  %5381 = or i32 %5380, %5379
  %5382 = or i32 %5381, %5370
  %5383 = bitcast i32 %5382 to float
  %5384 = tail call i32 @llvm.fshl.i32(i32 %5376, i32 %5377, i32 23)
  %5385 = tail call i32 @llvm.ctlz.i32(i32 %5384, i1 false), !range !8
  %5386 = fmul float %5383, 0x3FF921FB40000000
  %5387 = add nuw nsw i32 %5385, %5374
  %5388 = shl nuw nsw i32 %5387, 23
  %5389 = sub nuw nsw i32 855638016, %5388
  %5390 = sub nsw i32 31, %5385
  %5391 = tail call i32 @llvm.fshr.i32(i32 %5384, i32 %5377, i32 %5390)
  %5392 = lshr i32 %5391, 9
  %5393 = or i32 %5389, %5392
  %5394 = or i32 %5393, %5370
  %5395 = bitcast i32 %5394 to float
  %5396 = fneg float %5386
  %5397 = tail call float @llvm.fma.f32(float %5383, float 0x3FF921FB40000000, float %5396)
  %5398 = tail call float @llvm.fma.f32(float %5383, float 0x3E74442D00000000, float %5397)
  %5399 = tail call float @llvm.fma.f32(float %5395, float 0x3FF921FB40000000, float %5398)
  %5400 = fadd float %5386, %5399
  %5401 = lshr i32 %5361, 30
  %5402 = add nuw nsw i32 %5368, %5401
  br label %5411

5403:                                             ; preds = %5124
  %5404 = fmul float %5295, 0x3FE45F3060000000
  %5405 = tail call float @llvm.rint.f32(float %5404)
  %5406 = tail call float @llvm.fma.f32(float %5405, float 0xBFF921FB40000000, float %5295)
  %5407 = tail call float @llvm.fma.f32(float %5405, float 0xBE74442D00000000, float %5406)
  %5408 = tail call float @llvm.fma.f32(float %5405, float 0xBCF8469880000000, float %5407)
  %5409 = fptosi float %5405 to i32
  %5410 = bitcast float %5295 to i32
  br label %5411

5411:                                             ; preds = %5403, %5297
  %5412 = phi i32 [ %5410, %5403 ], [ %5298, %5297 ]
  %5413 = phi float [ %5408, %5403 ], [ %5400, %5297 ]
  %5414 = phi i32 [ %5409, %5403 ], [ %5402, %5297 ]
  %5415 = fmul float %5413, %5413
  %5416 = tail call float @llvm.fmuladd.f32(float %5415, float 0xBF29833040000000, float 0x3F81103880000000)
  %5417 = tail call float @llvm.fmuladd.f32(float %5415, float %5416, float 0xBFC55553A0000000)
  %5418 = fmul float %5415, %5417
  %5419 = tail call float @llvm.fmuladd.f32(float %5413, float %5418, float %5413)
  %5420 = tail call float @llvm.fmuladd.f32(float %5415, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %5421 = tail call float @llvm.fmuladd.f32(float %5415, float %5420, float 0x3FA5557EE0000000)
  %5422 = tail call float @llvm.fmuladd.f32(float %5415, float %5421, float 0xBFE0000080000000)
  %5423 = tail call float @llvm.fmuladd.f32(float %5415, float %5422, float 1.000000e+00)
  %5424 = and i32 %5414, 1
  %5425 = icmp eq i32 %5424, 0
  %5426 = select i1 %5425, float %5419, float %5423
  %5427 = bitcast float %5426 to i32
  %5428 = shl i32 %5414, 30
  %5429 = and i32 %5428, -2147483648
  %5430 = bitcast float %5294 to i32
  %5431 = xor i32 %5412, %5430
  %5432 = xor i32 %5431, %5429
  %5433 = xor i32 %5432, %5427
  %5434 = bitcast i32 %5433 to float
  %5435 = tail call i1 @llvm.amdgcn.class.f32(float %5295, i32 504)
  %5436 = select i1 %5435, float %5434, float 0x7FF8000000000000
  %5437 = tail call float @llvm.fabs.f32(float %5436)
  %5438 = tail call float @llvm.amdgcn.frexp.mant.f32(float %5437)
  %5439 = fcmp olt float %5438, 0x3FE5555560000000
  %5440 = zext i1 %5439 to i32
  %5441 = tail call float @llvm.amdgcn.ldexp.f32(float %5438, i32 %5440)
  %5442 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %5437)
  %5443 = sub nsw i32 %5442, %5440
  %5444 = fadd float %5441, -1.000000e+00
  %5445 = fadd float %5441, 1.000000e+00
  %5446 = fadd float %5445, -1.000000e+00
  %5447 = fsub float %5441, %5446
  %5448 = tail call float @llvm.amdgcn.rcp.f32(float %5445)
  %5449 = fmul float %5444, %5448
  %5450 = fmul float %5445, %5449
  %5451 = fneg float %5450
  %5452 = tail call float @llvm.fma.f32(float %5449, float %5445, float %5451)
  %5453 = tail call float @llvm.fma.f32(float %5449, float %5447, float %5452)
  %5454 = fadd float %5450, %5453
  %5455 = fsub float %5454, %5450
  %5456 = fsub float %5453, %5455
  %5457 = fsub float %5444, %5454
  %5458 = fsub float %5444, %5457
  %5459 = fsub float %5458, %5454
  %5460 = fsub float %5459, %5456
  %5461 = fadd float %5457, %5460
  %5462 = fmul float %5448, %5461
  %5463 = fadd float %5449, %5462
  %5464 = fsub float %5463, %5449
  %5465 = fsub float %5462, %5464
  %5466 = fmul float %5463, %5463
  %5467 = fneg float %5466
  %5468 = tail call float @llvm.fma.f32(float %5463, float %5463, float %5467)
  %5469 = fmul float %5465, 2.000000e+00
  %5470 = tail call float @llvm.fma.f32(float %5463, float %5469, float %5468)
  %5471 = fadd float %5466, %5470
  %5472 = fsub float %5471, %5466
  %5473 = fsub float %5470, %5472
  %5474 = tail call float @llvm.fmuladd.f32(float %5471, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %5475 = tail call float @llvm.fmuladd.f32(float %5471, float %5474, float 0x3FD999BDE0000000)
  %5476 = sitofp i32 %5443 to float
  %5477 = fmul float %5476, 0x3FE62E4300000000
  %5478 = fneg float %5477
  %5479 = tail call float @llvm.fma.f32(float %5476, float 0x3FE62E4300000000, float %5478)
  %5480 = tail call float @llvm.fma.f32(float %5476, float 0xBE205C6100000000, float %5479)
  %5481 = fadd float %5477, %5480
  %5482 = fsub float %5481, %5477
  %5483 = fsub float %5480, %5482
  %5484 = tail call float @llvm.amdgcn.ldexp.f32(float %5463, i32 1)
  %5485 = fmul float %5463, %5471
  %5486 = fneg float %5485
  %5487 = tail call float @llvm.fma.f32(float %5471, float %5463, float %5486)
  %5488 = tail call float @llvm.fma.f32(float %5471, float %5465, float %5487)
  %5489 = tail call float @llvm.fma.f32(float %5473, float %5463, float %5488)
  %5490 = fadd float %5485, %5489
  %5491 = fsub float %5490, %5485
  %5492 = fsub float %5489, %5491
  %5493 = fmul float %5471, %5475
  %5494 = fneg float %5493
  %5495 = tail call float @llvm.fma.f32(float %5471, float %5475, float %5494)
  %5496 = tail call float @llvm.fma.f32(float %5473, float %5475, float %5495)
  %5497 = fadd float %5493, %5496
  %5498 = fsub float %5497, %5493
  %5499 = fsub float %5496, %5498
  %5500 = fadd float %5497, 0x3FE5555540000000
  %5501 = fadd float %5500, 0xBFE5555540000000
  %5502 = fsub float %5497, %5501
  %5503 = fadd float %5499, 0x3E2E720200000000
  %5504 = fadd float %5503, %5502
  %5505 = fadd float %5500, %5504
  %5506 = fsub float %5505, %5500
  %5507 = fsub float %5504, %5506
  %5508 = fmul float %5490, %5505
  %5509 = fneg float %5508
  %5510 = tail call float @llvm.fma.f32(float %5490, float %5505, float %5509)
  %5511 = tail call float @llvm.fma.f32(float %5490, float %5507, float %5510)
  %5512 = tail call float @llvm.fma.f32(float %5492, float %5505, float %5511)
  %5513 = tail call float @llvm.amdgcn.ldexp.f32(float %5465, i32 1)
  %5514 = fadd float %5508, %5512
  %5515 = fsub float %5514, %5508
  %5516 = fsub float %5512, %5515
  %5517 = fadd float %5484, %5514
  %5518 = fsub float %5517, %5484
  %5519 = fsub float %5514, %5518
  %5520 = fadd float %5513, %5516
  %5521 = fadd float %5520, %5519
  %5522 = fadd float %5517, %5521
  %5523 = fsub float %5522, %5517
  %5524 = fsub float %5521, %5523
  %5525 = fadd float %5481, %5522
  %5526 = fsub float %5525, %5481
  %5527 = fsub float %5525, %5526
  %5528 = fsub float %5481, %5527
  %5529 = fsub float %5522, %5526
  %5530 = fadd float %5529, %5528
  %5531 = fadd float %5483, %5524
  %5532 = fsub float %5531, %5483
  %5533 = fsub float %5531, %5532
  %5534 = fsub float %5483, %5533
  %5535 = fsub float %5524, %5532
  %5536 = fadd float %5535, %5534
  %5537 = fadd float %5531, %5530
  %5538 = fadd float %5525, %5537
  %5539 = fsub float %5538, %5525
  %5540 = fsub float %5537, %5539
  %5541 = fadd float %5536, %5540
  %5542 = fadd float %5538, %5541
  %5543 = fsub float %5542, %5538
  %5544 = fsub float %5541, %5543
  %5545 = fmul float %5542, 2.000000e+00
  %5546 = fneg float %5545
  %5547 = tail call float @llvm.fma.f32(float %5542, float 2.000000e+00, float %5546)
  %5548 = fmul float %5542, 0.000000e+00
  %5549 = tail call float @llvm.fma.f32(float %5544, float 2.000000e+00, float %5548)
  %5550 = fadd float %5547, %5549
  %5551 = fadd float %5545, %5550
  %5552 = fsub float %5551, %5545
  %5553 = fsub float %5550, %5552
  %5554 = tail call float @llvm.fabs.f32(float %5545) #3
  %5555 = fcmp oeq float %5554, 0x7FF0000000000000
  %5556 = select i1 %5555, float %5545, float %5551
  %5557 = tail call float @llvm.fabs.f32(float %5556) #3
  %5558 = fcmp oeq float %5557, 0x7FF0000000000000
  %5559 = select i1 %5558, float 0.000000e+00, float %5553
  %5560 = fcmp oeq float %5556, 0x40562E4300000000
  %5561 = select i1 %5560, float 0x3EE0000000000000, float 0.000000e+00
  %5562 = fsub float %5556, %5561
  %5563 = fadd float %5561, %5559
  %5564 = fmul float %5562, 0x3FF7154760000000
  %5565 = tail call float @llvm.rint.f32(float %5564)
  %5566 = fcmp ogt float %5562, 0x40562E4300000000
  %5567 = fcmp olt float %5562, 0xC059D1DA00000000
  %5568 = fneg float %5564
  %5569 = tail call float @llvm.fma.f32(float %5562, float 0x3FF7154760000000, float %5568)
  %5570 = tail call float @llvm.fma.f32(float %5562, float 0x3E54AE0BE0000000, float %5569)
  %5571 = fsub float %5564, %5565
  %5572 = fadd float %5570, %5571
  %5573 = tail call float @llvm.exp2.f32(float %5572)
  %5574 = fptosi float %5565 to i32
  %5575 = tail call float @llvm.amdgcn.ldexp.f32(float %5573, i32 %5574)
  %5576 = select i1 %5567, float 0.000000e+00, float %5575
  %5577 = select i1 %5566, float 0x7FF0000000000000, float %5576
  %5578 = tail call float @llvm.fma.f32(float %5577, float %5563, float %5577)
  %5579 = tail call float @llvm.fabs.f32(float %5577) #3
  %5580 = fcmp oeq float %5579, 0x7FF0000000000000
  %5581 = select i1 %5580, float %5577, float %5578
  %5582 = tail call float @llvm.fabs.f32(float %5581)
  %5583 = fcmp oeq float %5437, 0x7FF0000000000000
  %5584 = fcmp oeq float %5436, 0.000000e+00
  %5585 = fcmp uno float %5436, 0.000000e+00
  %5586 = fmul contract float %5582, 1.000000e+01
  %5587 = fadd contract float %5586, 1.000000e+00
  %5588 = select i1 %5583, float 0x7FF0000000000000, float %5587
  %5589 = select i1 %5584, float 1.000000e+00, float %5588
  %5590 = select i1 %5585, float 0x7FF8000000000000, float %5589
  %5591 = fmul contract float %5293, %5590
  %5592 = fadd contract float %5127, %5591
  br i1 %5125, label %5124, label %5593, !llvm.loop !9

5593:                                             ; preds = %5411
  %5594 = fcmp contract olt float %4664, %5592
  br i1 %5594, label %5595, label %5597

5595:                                             ; preds = %5593
  store float %3734, float addrspace(1)* %0, align 4, !tbaa !4
  %5596 = getelementptr inbounds float, float addrspace(1)* %0, i64 1
  store float %3737, float addrspace(1)* %5596, align 4, !tbaa !4
  store float %3740, float addrspace(1)* %3, align 4, !tbaa !4
  br label %5597

5597:                                             ; preds = %5595, %5593
  %5598 = getelementptr inbounds float, float addrspace(1)* %1, i64 9
  %5599 = load float, float addrspace(1)* %5598, align 4, !tbaa !4
  %5600 = insertelement <3 x float> poison, float %5599, i64 0
  %5601 = getelementptr inbounds float, float addrspace(1)* %1, i64 10
  %5602 = load float, float addrspace(1)* %5601, align 4, !tbaa !4
  %5603 = insertelement <3 x float> %5600, float %5602, i64 1
  %5604 = getelementptr inbounds float, float addrspace(1)* %1, i64 11
  %5605 = load float, float addrspace(1)* %5604, align 4, !tbaa !4
  %5606 = insertelement <3 x float> %5603, float %5605, i64 2
  %5607 = fadd contract float %5599, -1.000000e+00
  %5608 = fmul contract float %5607, 2.500000e-01
  %5609 = fadd contract float %5608, 1.000000e+00
  %5610 = fadd contract float %5605, -1.000000e+00
  %5611 = fmul contract float %5610, 2.500000e-01
  %5612 = fadd contract float %5611, 1.000000e+00
  %5613 = fmul contract float %5609, 0x400921CAC0000000
  %5614 = tail call float @llvm.fabs.f32(float %5613)
  %5615 = fcmp olt float %5614, 1.310720e+05
  br i1 %5615, label %5722, label %5616

5616:                                             ; preds = %5597
  %5617 = bitcast float %5614 to i32
  %5618 = lshr i32 %5617, 23
  %5619 = and i32 %5617, 8388607
  %5620 = or i32 %5619, 8388608
  %5621 = zext i32 %5620 to i64
  %5622 = mul nuw nsw i64 %5621, 4266746795
  %5623 = trunc i64 %5622 to i32
  %5624 = lshr i64 %5622, 32
  %5625 = mul nuw nsw i64 %5621, 1011060801
  %5626 = add nuw nsw i64 %5624, %5625
  %5627 = trunc i64 %5626 to i32
  %5628 = lshr i64 %5626, 32
  %5629 = mul nuw nsw i64 %5621, 3680671129
  %5630 = add nuw nsw i64 %5628, %5629
  %5631 = trunc i64 %5630 to i32
  %5632 = lshr i64 %5630, 32
  %5633 = mul nuw nsw i64 %5621, 4113882560
  %5634 = add nuw nsw i64 %5632, %5633
  %5635 = trunc i64 %5634 to i32
  %5636 = lshr i64 %5634, 32
  %5637 = mul nuw nsw i64 %5621, 4230436817
  %5638 = add nuw nsw i64 %5636, %5637
  %5639 = trunc i64 %5638 to i32
  %5640 = lshr i64 %5638, 32
  %5641 = mul nuw nsw i64 %5621, 1313084713
  %5642 = add nuw nsw i64 %5640, %5641
  %5643 = trunc i64 %5642 to i32
  %5644 = lshr i64 %5642, 32
  %5645 = mul nuw nsw i64 %5621, 2734261102
  %5646 = add nuw nsw i64 %5644, %5645
  %5647 = trunc i64 %5646 to i32
  %5648 = lshr i64 %5646, 32
  %5649 = trunc i64 %5648 to i32
  %5650 = add nsw i32 %5618, -120
  %5651 = icmp ugt i32 %5650, 63
  %5652 = select i1 %5651, i32 %5643, i32 %5649
  %5653 = select i1 %5651, i32 %5639, i32 %5647
  %5654 = select i1 %5651, i32 %5635, i32 %5643
  %5655 = select i1 %5651, i32 %5631, i32 %5639
  %5656 = select i1 %5651, i32 %5627, i32 %5635
  %5657 = select i1 %5651, i32 %5623, i32 %5631
  %5658 = select i1 %5651, i32 -64, i32 0
  %5659 = add nsw i32 %5658, %5650
  %5660 = icmp ugt i32 %5659, 31
  %5661 = select i1 %5660, i32 %5653, i32 %5652
  %5662 = select i1 %5660, i32 %5654, i32 %5653
  %5663 = select i1 %5660, i32 %5655, i32 %5654
  %5664 = select i1 %5660, i32 %5656, i32 %5655
  %5665 = select i1 %5660, i32 %5657, i32 %5656
  %5666 = select i1 %5660, i32 -32, i32 0
  %5667 = add nsw i32 %5666, %5659
  %5668 = icmp ugt i32 %5667, 31
  %5669 = select i1 %5668, i32 %5662, i32 %5661
  %5670 = select i1 %5668, i32 %5663, i32 %5662
  %5671 = select i1 %5668, i32 %5664, i32 %5663
  %5672 = select i1 %5668, i32 %5665, i32 %5664
  %5673 = select i1 %5668, i32 -32, i32 0
  %5674 = add nsw i32 %5673, %5667
  %5675 = icmp eq i32 %5674, 0
  %5676 = sub nsw i32 32, %5674
  %5677 = tail call i32 @llvm.fshr.i32(i32 %5669, i32 %5670, i32 %5676)
  %5678 = tail call i32 @llvm.fshr.i32(i32 %5670, i32 %5671, i32 %5676)
  %5679 = tail call i32 @llvm.fshr.i32(i32 %5671, i32 %5672, i32 %5676)
  %5680 = select i1 %5675, i32 %5669, i32 %5677
  %5681 = select i1 %5675, i32 %5670, i32 %5678
  %5682 = select i1 %5675, i32 %5671, i32 %5679
  %5683 = lshr i32 %5680, 29
  %5684 = tail call i32 @llvm.fshl.i32(i32 %5680, i32 %5681, i32 2)
  %5685 = tail call i32 @llvm.fshl.i32(i32 %5681, i32 %5682, i32 2)
  %5686 = tail call i32 @llvm.fshl.i32(i32 %5682, i32 %5672, i32 2)
  %5687 = and i32 %5683, 1
  %5688 = sub nsw i32 0, %5687
  %5689 = shl i32 %5683, 31
  %5690 = xor i32 %5684, %5688
  %5691 = xor i32 %5685, %5688
  %5692 = xor i32 %5686, %5688
  %5693 = tail call i32 @llvm.ctlz.i32(i32 %5690, i1 false), !range !8
  %5694 = sub nsw i32 31, %5693
  %5695 = tail call i32 @llvm.fshr.i32(i32 %5690, i32 %5691, i32 %5694)
  %5696 = tail call i32 @llvm.fshr.i32(i32 %5691, i32 %5692, i32 %5694)
  %5697 = shl nuw nsw i32 %5693, 23
  %5698 = sub nuw nsw i32 1056964608, %5697
  %5699 = lshr i32 %5695, 9
  %5700 = or i32 %5699, %5698
  %5701 = or i32 %5700, %5689
  %5702 = bitcast i32 %5701 to float
  %5703 = tail call i32 @llvm.fshl.i32(i32 %5695, i32 %5696, i32 23)
  %5704 = tail call i32 @llvm.ctlz.i32(i32 %5703, i1 false), !range !8
  %5705 = fmul float %5702, 0x3FF921FB40000000
  %5706 = add nuw nsw i32 %5704, %5693
  %5707 = shl nuw nsw i32 %5706, 23
  %5708 = sub nuw nsw i32 855638016, %5707
  %5709 = sub nsw i32 31, %5704
  %5710 = tail call i32 @llvm.fshr.i32(i32 %5703, i32 %5696, i32 %5709)
  %5711 = lshr i32 %5710, 9
  %5712 = or i32 %5708, %5711
  %5713 = or i32 %5712, %5689
  %5714 = bitcast i32 %5713 to float
  %5715 = fneg float %5705
  %5716 = tail call float @llvm.fma.f32(float %5702, float 0x3FF921FB40000000, float %5715)
  %5717 = tail call float @llvm.fma.f32(float %5702, float 0x3E74442D00000000, float %5716)
  %5718 = tail call float @llvm.fma.f32(float %5714, float 0x3FF921FB40000000, float %5717)
  %5719 = fadd float %5705, %5718
  %5720 = lshr i32 %5680, 30
  %5721 = add nuw nsw i32 %5687, %5720
  br label %5730

5722:                                             ; preds = %5597
  %5723 = fmul float %5614, 0x3FE45F3060000000
  %5724 = tail call float @llvm.rint.f32(float %5723)
  %5725 = tail call float @llvm.fma.f32(float %5724, float 0xBFF921FB40000000, float %5614)
  %5726 = tail call float @llvm.fma.f32(float %5724, float 0xBE74442D00000000, float %5725)
  %5727 = tail call float @llvm.fma.f32(float %5724, float 0xBCF8469880000000, float %5726)
  %5728 = fptosi float %5724 to i32
  %5729 = bitcast float %5614 to i32
  br label %5730

5730:                                             ; preds = %5722, %5616
  %5731 = phi i32 [ %5729, %5722 ], [ %5617, %5616 ]
  %5732 = phi float [ %5727, %5722 ], [ %5719, %5616 ]
  %5733 = phi i32 [ %5728, %5722 ], [ %5721, %5616 ]
  %5734 = fmul float %5732, %5732
  %5735 = tail call float @llvm.fmuladd.f32(float %5734, float 0xBF29833040000000, float 0x3F81103880000000)
  %5736 = tail call float @llvm.fmuladd.f32(float %5734, float %5735, float 0xBFC55553A0000000)
  %5737 = fmul float %5734, %5736
  %5738 = tail call float @llvm.fmuladd.f32(float %5732, float %5737, float %5732)
  %5739 = tail call float @llvm.fmuladd.f32(float %5734, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %5740 = tail call float @llvm.fmuladd.f32(float %5734, float %5739, float 0x3FA5557EE0000000)
  %5741 = tail call float @llvm.fmuladd.f32(float %5734, float %5740, float 0xBFE0000080000000)
  %5742 = tail call float @llvm.fmuladd.f32(float %5734, float %5741, float 1.000000e+00)
  %5743 = and i32 %5733, 1
  %5744 = icmp eq i32 %5743, 0
  %5745 = select i1 %5744, float %5738, float %5742
  %5746 = bitcast float %5745 to i32
  %5747 = shl i32 %5733, 30
  %5748 = and i32 %5747, -2147483648
  %5749 = bitcast float %5613 to i32
  %5750 = xor i32 %5731, %5749
  %5751 = xor i32 %5750, %5748
  %5752 = xor i32 %5751, %5746
  %5753 = bitcast i32 %5752 to float
  %5754 = tail call i1 @llvm.amdgcn.class.f32(float %5614, i32 504)
  %5755 = select i1 %5754, float %5753, float 0x7FF8000000000000
  %5756 = tail call float @llvm.fabs.f32(float %5755)
  %5757 = tail call float @llvm.amdgcn.frexp.mant.f32(float %5756)
  %5758 = fcmp olt float %5757, 0x3FE5555560000000
  %5759 = zext i1 %5758 to i32
  %5760 = tail call float @llvm.amdgcn.ldexp.f32(float %5757, i32 %5759)
  %5761 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %5756)
  %5762 = sub nsw i32 %5761, %5759
  %5763 = fadd float %5760, -1.000000e+00
  %5764 = fadd float %5760, 1.000000e+00
  %5765 = fadd float %5764, -1.000000e+00
  %5766 = fsub float %5760, %5765
  %5767 = tail call float @llvm.amdgcn.rcp.f32(float %5764)
  %5768 = fmul float %5763, %5767
  %5769 = fmul float %5764, %5768
  %5770 = fneg float %5769
  %5771 = tail call float @llvm.fma.f32(float %5768, float %5764, float %5770)
  %5772 = tail call float @llvm.fma.f32(float %5768, float %5766, float %5771)
  %5773 = fadd float %5769, %5772
  %5774 = fsub float %5773, %5769
  %5775 = fsub float %5772, %5774
  %5776 = fsub float %5763, %5773
  %5777 = fsub float %5763, %5776
  %5778 = fsub float %5777, %5773
  %5779 = fsub float %5778, %5775
  %5780 = fadd float %5776, %5779
  %5781 = fmul float %5767, %5780
  %5782 = fadd float %5768, %5781
  %5783 = fsub float %5782, %5768
  %5784 = fsub float %5781, %5783
  %5785 = fmul float %5782, %5782
  %5786 = fneg float %5785
  %5787 = tail call float @llvm.fma.f32(float %5782, float %5782, float %5786)
  %5788 = fmul float %5784, 2.000000e+00
  %5789 = tail call float @llvm.fma.f32(float %5782, float %5788, float %5787)
  %5790 = fadd float %5785, %5789
  %5791 = fsub float %5790, %5785
  %5792 = fsub float %5789, %5791
  %5793 = tail call float @llvm.fmuladd.f32(float %5790, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %5794 = tail call float @llvm.fmuladd.f32(float %5790, float %5793, float 0x3FD999BDE0000000)
  %5795 = sitofp i32 %5762 to float
  %5796 = fmul float %5795, 0x3FE62E4300000000
  %5797 = fneg float %5796
  %5798 = tail call float @llvm.fma.f32(float %5795, float 0x3FE62E4300000000, float %5797)
  %5799 = tail call float @llvm.fma.f32(float %5795, float 0xBE205C6100000000, float %5798)
  %5800 = fadd float %5796, %5799
  %5801 = fsub float %5800, %5796
  %5802 = fsub float %5799, %5801
  %5803 = tail call float @llvm.amdgcn.ldexp.f32(float %5782, i32 1)
  %5804 = fmul float %5782, %5790
  %5805 = fneg float %5804
  %5806 = tail call float @llvm.fma.f32(float %5790, float %5782, float %5805)
  %5807 = tail call float @llvm.fma.f32(float %5790, float %5784, float %5806)
  %5808 = tail call float @llvm.fma.f32(float %5792, float %5782, float %5807)
  %5809 = fadd float %5804, %5808
  %5810 = fsub float %5809, %5804
  %5811 = fsub float %5808, %5810
  %5812 = fmul float %5790, %5794
  %5813 = fneg float %5812
  %5814 = tail call float @llvm.fma.f32(float %5790, float %5794, float %5813)
  %5815 = tail call float @llvm.fma.f32(float %5792, float %5794, float %5814)
  %5816 = fadd float %5812, %5815
  %5817 = fsub float %5816, %5812
  %5818 = fsub float %5815, %5817
  %5819 = fadd float %5816, 0x3FE5555540000000
  %5820 = fadd float %5819, 0xBFE5555540000000
  %5821 = fsub float %5816, %5820
  %5822 = fadd float %5818, 0x3E2E720200000000
  %5823 = fadd float %5822, %5821
  %5824 = fadd float %5819, %5823
  %5825 = fsub float %5824, %5819
  %5826 = fsub float %5823, %5825
  %5827 = fmul float %5809, %5824
  %5828 = fneg float %5827
  %5829 = tail call float @llvm.fma.f32(float %5809, float %5824, float %5828)
  %5830 = tail call float @llvm.fma.f32(float %5809, float %5826, float %5829)
  %5831 = tail call float @llvm.fma.f32(float %5811, float %5824, float %5830)
  %5832 = tail call float @llvm.amdgcn.ldexp.f32(float %5784, i32 1)
  %5833 = fadd float %5827, %5831
  %5834 = fsub float %5833, %5827
  %5835 = fsub float %5831, %5834
  %5836 = fadd float %5803, %5833
  %5837 = fsub float %5836, %5803
  %5838 = fsub float %5833, %5837
  %5839 = fadd float %5832, %5835
  %5840 = fadd float %5839, %5838
  %5841 = fadd float %5836, %5840
  %5842 = fsub float %5841, %5836
  %5843 = fsub float %5840, %5842
  %5844 = fadd float %5800, %5841
  %5845 = fsub float %5844, %5800
  %5846 = fsub float %5844, %5845
  %5847 = fsub float %5800, %5846
  %5848 = fsub float %5841, %5845
  %5849 = fadd float %5848, %5847
  %5850 = fadd float %5802, %5843
  %5851 = fsub float %5850, %5802
  %5852 = fsub float %5850, %5851
  %5853 = fsub float %5802, %5852
  %5854 = fsub float %5843, %5851
  %5855 = fadd float %5854, %5853
  %5856 = fadd float %5850, %5849
  %5857 = fadd float %5844, %5856
  %5858 = fsub float %5857, %5844
  %5859 = fsub float %5856, %5858
  %5860 = fadd float %5855, %5859
  %5861 = fadd float %5857, %5860
  %5862 = fsub float %5861, %5857
  %5863 = fsub float %5860, %5862
  %5864 = fmul float %5861, 2.000000e+00
  %5865 = fneg float %5864
  %5866 = tail call float @llvm.fma.f32(float %5861, float 2.000000e+00, float %5865)
  %5867 = fmul float %5861, 0.000000e+00
  %5868 = tail call float @llvm.fma.f32(float %5863, float 2.000000e+00, float %5867)
  %5869 = fadd float %5866, %5868
  %5870 = fadd float %5864, %5869
  %5871 = fsub float %5870, %5864
  %5872 = fsub float %5869, %5871
  %5873 = tail call float @llvm.fabs.f32(float %5864) #3
  %5874 = fcmp oeq float %5873, 0x7FF0000000000000
  %5875 = select i1 %5874, float %5864, float %5870
  %5876 = tail call float @llvm.fabs.f32(float %5875) #3
  %5877 = fcmp oeq float %5876, 0x7FF0000000000000
  %5878 = select i1 %5877, float 0.000000e+00, float %5872
  %5879 = fcmp oeq float %5875, 0x40562E4300000000
  %5880 = select i1 %5879, float 0x3EE0000000000000, float 0.000000e+00
  %5881 = fsub float %5875, %5880
  %5882 = fadd float %5880, %5878
  %5883 = fmul float %5881, 0x3FF7154760000000
  %5884 = tail call float @llvm.rint.f32(float %5883)
  %5885 = fcmp ogt float %5881, 0x40562E4300000000
  %5886 = fcmp olt float %5881, 0xC059D1DA00000000
  %5887 = fneg float %5883
  %5888 = tail call float @llvm.fma.f32(float %5881, float 0x3FF7154760000000, float %5887)
  %5889 = tail call float @llvm.fma.f32(float %5881, float 0x3E54AE0BE0000000, float %5888)
  %5890 = fsub float %5883, %5884
  %5891 = fadd float %5889, %5890
  %5892 = tail call float @llvm.exp2.f32(float %5891)
  %5893 = fptosi float %5884 to i32
  %5894 = tail call float @llvm.amdgcn.ldexp.f32(float %5892, i32 %5893)
  %5895 = select i1 %5886, float 0.000000e+00, float %5894
  %5896 = select i1 %5885, float 0x7FF0000000000000, float %5895
  %5897 = tail call float @llvm.fma.f32(float %5896, float %5882, float %5896)
  %5898 = tail call float @llvm.fabs.f32(float %5896) #3
  %5899 = fcmp oeq float %5898, 0x7FF0000000000000
  %5900 = select i1 %5899, float %5896, float %5897
  %5901 = tail call float @llvm.fabs.f32(float %5900)
  %5902 = fcmp oeq float %5756, 0x7FF0000000000000
  %5903 = fcmp oeq float %5755, 0.000000e+00
  %5904 = select i1 %5902, float 0x7FF0000000000000, float %5901
  %5905 = select i1 %5903, float 0.000000e+00, float %5904
  %5906 = fcmp uno float %5755, 0.000000e+00
  %5907 = select i1 %5906, float 0x7FF8000000000000, float %5905
  %5908 = fadd contract float %5612, -1.000000e+00
  %5909 = tail call float @llvm.fabs.f32(float %5908)
  %5910 = tail call float @llvm.amdgcn.frexp.mant.f32(float %5909)
  %5911 = fcmp olt float %5910, 0x3FE5555560000000
  %5912 = zext i1 %5911 to i32
  %5913 = tail call float @llvm.amdgcn.ldexp.f32(float %5910, i32 %5912)
  %5914 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %5909)
  %5915 = sub nsw i32 %5914, %5912
  %5916 = fadd float %5913, -1.000000e+00
  %5917 = fadd float %5913, 1.000000e+00
  %5918 = fadd float %5917, -1.000000e+00
  %5919 = fsub float %5913, %5918
  %5920 = tail call float @llvm.amdgcn.rcp.f32(float %5917)
  %5921 = fmul float %5916, %5920
  %5922 = fmul float %5917, %5921
  %5923 = fneg float %5922
  %5924 = tail call float @llvm.fma.f32(float %5921, float %5917, float %5923)
  %5925 = tail call float @llvm.fma.f32(float %5921, float %5919, float %5924)
  %5926 = fadd float %5922, %5925
  %5927 = fsub float %5926, %5922
  %5928 = fsub float %5925, %5927
  %5929 = fsub float %5916, %5926
  %5930 = fsub float %5916, %5929
  %5931 = fsub float %5930, %5926
  %5932 = fsub float %5931, %5928
  %5933 = fadd float %5929, %5932
  %5934 = fmul float %5920, %5933
  %5935 = fadd float %5921, %5934
  %5936 = fsub float %5935, %5921
  %5937 = fsub float %5934, %5936
  %5938 = fmul float %5935, %5935
  %5939 = fneg float %5938
  %5940 = tail call float @llvm.fma.f32(float %5935, float %5935, float %5939)
  %5941 = fmul float %5937, 2.000000e+00
  %5942 = tail call float @llvm.fma.f32(float %5935, float %5941, float %5940)
  %5943 = fadd float %5938, %5942
  %5944 = fsub float %5943, %5938
  %5945 = fsub float %5942, %5944
  %5946 = tail call float @llvm.fmuladd.f32(float %5943, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %5947 = tail call float @llvm.fmuladd.f32(float %5943, float %5946, float 0x3FD999BDE0000000)
  %5948 = sitofp i32 %5915 to float
  %5949 = fmul float %5948, 0x3FE62E4300000000
  %5950 = fneg float %5949
  %5951 = tail call float @llvm.fma.f32(float %5948, float 0x3FE62E4300000000, float %5950)
  %5952 = tail call float @llvm.fma.f32(float %5948, float 0xBE205C6100000000, float %5951)
  %5953 = fadd float %5949, %5952
  %5954 = fsub float %5953, %5949
  %5955 = fsub float %5952, %5954
  %5956 = tail call float @llvm.amdgcn.ldexp.f32(float %5935, i32 1)
  %5957 = fmul float %5935, %5943
  %5958 = fneg float %5957
  %5959 = tail call float @llvm.fma.f32(float %5943, float %5935, float %5958)
  %5960 = tail call float @llvm.fma.f32(float %5943, float %5937, float %5959)
  %5961 = tail call float @llvm.fma.f32(float %5945, float %5935, float %5960)
  %5962 = fadd float %5957, %5961
  %5963 = fsub float %5962, %5957
  %5964 = fsub float %5961, %5963
  %5965 = fmul float %5943, %5947
  %5966 = fneg float %5965
  %5967 = tail call float @llvm.fma.f32(float %5943, float %5947, float %5966)
  %5968 = tail call float @llvm.fma.f32(float %5945, float %5947, float %5967)
  %5969 = fadd float %5965, %5968
  %5970 = fsub float %5969, %5965
  %5971 = fsub float %5968, %5970
  %5972 = fadd float %5969, 0x3FE5555540000000
  %5973 = fadd float %5972, 0xBFE5555540000000
  %5974 = fsub float %5969, %5973
  %5975 = fadd float %5971, 0x3E2E720200000000
  %5976 = fadd float %5975, %5974
  %5977 = fadd float %5972, %5976
  %5978 = fsub float %5977, %5972
  %5979 = fsub float %5976, %5978
  %5980 = fmul float %5962, %5977
  %5981 = fneg float %5980
  %5982 = tail call float @llvm.fma.f32(float %5962, float %5977, float %5981)
  %5983 = tail call float @llvm.fma.f32(float %5962, float %5979, float %5982)
  %5984 = tail call float @llvm.fma.f32(float %5964, float %5977, float %5983)
  %5985 = tail call float @llvm.amdgcn.ldexp.f32(float %5937, i32 1)
  %5986 = fadd float %5980, %5984
  %5987 = fsub float %5986, %5980
  %5988 = fsub float %5984, %5987
  %5989 = fadd float %5956, %5986
  %5990 = fsub float %5989, %5956
  %5991 = fsub float %5986, %5990
  %5992 = fadd float %5985, %5988
  %5993 = fadd float %5992, %5991
  %5994 = fadd float %5989, %5993
  %5995 = fsub float %5994, %5989
  %5996 = fsub float %5993, %5995
  %5997 = fadd float %5953, %5994
  %5998 = fsub float %5997, %5953
  %5999 = fsub float %5997, %5998
  %6000 = fsub float %5953, %5999
  %6001 = fsub float %5994, %5998
  %6002 = fadd float %6001, %6000
  %6003 = fadd float %5955, %5996
  %6004 = fsub float %6003, %5955
  %6005 = fsub float %6003, %6004
  %6006 = fsub float %5955, %6005
  %6007 = fsub float %5996, %6004
  %6008 = fadd float %6007, %6006
  %6009 = fadd float %6003, %6002
  %6010 = fadd float %5997, %6009
  %6011 = fsub float %6010, %5997
  %6012 = fsub float %6009, %6011
  %6013 = fadd float %6008, %6012
  %6014 = fadd float %6010, %6013
  %6015 = fsub float %6014, %6010
  %6016 = fsub float %6013, %6015
  %6017 = fmul float %6014, 2.000000e+00
  %6018 = fneg float %6017
  %6019 = tail call float @llvm.fma.f32(float %6014, float 2.000000e+00, float %6018)
  %6020 = fmul float %6014, 0.000000e+00
  %6021 = tail call float @llvm.fma.f32(float %6016, float 2.000000e+00, float %6020)
  %6022 = fadd float %6019, %6021
  %6023 = fadd float %6017, %6022
  %6024 = fsub float %6023, %6017
  %6025 = fsub float %6022, %6024
  %6026 = tail call float @llvm.fabs.f32(float %6017) #3
  %6027 = fcmp oeq float %6026, 0x7FF0000000000000
  %6028 = select i1 %6027, float %6017, float %6023
  %6029 = tail call float @llvm.fabs.f32(float %6028) #3
  %6030 = fcmp oeq float %6029, 0x7FF0000000000000
  %6031 = select i1 %6030, float 0.000000e+00, float %6025
  %6032 = fcmp oeq float %6028, 0x40562E4300000000
  %6033 = select i1 %6032, float 0x3EE0000000000000, float 0.000000e+00
  %6034 = fsub float %6028, %6033
  %6035 = fadd float %6033, %6031
  %6036 = fmul float %6034, 0x3FF7154760000000
  %6037 = tail call float @llvm.rint.f32(float %6036)
  %6038 = fcmp ogt float %6034, 0x40562E4300000000
  %6039 = fcmp olt float %6034, 0xC059D1DA00000000
  %6040 = fneg float %6036
  %6041 = tail call float @llvm.fma.f32(float %6034, float 0x3FF7154760000000, float %6040)
  %6042 = tail call float @llvm.fma.f32(float %6034, float 0x3E54AE0BE0000000, float %6041)
  %6043 = fsub float %6036, %6037
  %6044 = fadd float %6042, %6043
  %6045 = tail call float @llvm.exp2.f32(float %6044)
  %6046 = fptosi float %6037 to i32
  %6047 = tail call float @llvm.amdgcn.ldexp.f32(float %6045, i32 %6046)
  %6048 = select i1 %6039, float 0.000000e+00, float %6047
  %6049 = select i1 %6038, float 0x7FF0000000000000, float %6048
  %6050 = tail call float @llvm.fma.f32(float %6049, float %6035, float %6049)
  %6051 = tail call float @llvm.fabs.f32(float %6049) #3
  %6052 = fcmp oeq float %6051, 0x7FF0000000000000
  %6053 = select i1 %6052, float %6049, float %6050
  %6054 = tail call float @llvm.fabs.f32(float %6053)
  %6055 = fcmp oeq float %5909, 0x7FF0000000000000
  %6056 = fcmp oeq float %5908, 0.000000e+00
  %6057 = select i1 %6055, float 0x7FF0000000000000, float %6054
  %6058 = select i1 %6056, float 0.000000e+00, float %6057
  %6059 = fcmp uno float %5908, 0.000000e+00
  %6060 = select i1 %6059, float 0x7FF8000000000000, float %6058
  %6061 = fadd contract float %6060, %5907
  %6062 = fadd contract float %6061, 0.000000e+00
  br label %6063

6063:                                             ; preds = %6348, %5730
  %6064 = phi i1 [ true, %5730 ], [ false, %6348 ]
  %6065 = phi i32 [ 0, %5730 ], [ 1, %6348 ]
  %6066 = phi float [ %6062, %5730 ], [ %6529, %6348 ]
  %6067 = zext i32 %6065 to i64
  %6068 = extractelement <3 x float> %5606, i64 %6067
  %6069 = fadd contract float %6068, -1.000000e+00
  %6070 = fmul contract float %6069, 2.500000e-01
  %6071 = fadd contract float %6070, 1.000000e+00
  %6072 = add nuw nsw i32 %6065, 1
  %6073 = zext i32 %6072 to i64
  %6074 = extractelement <3 x float> %5606, i64 %6073
  %6075 = fadd contract float %6074, -1.000000e+00
  %6076 = fmul contract float %6075, 2.500000e-01
  %6077 = fadd contract float %6076, 1.000000e+00
  %6078 = fadd contract float %6071, -1.000000e+00
  %6079 = tail call float @llvm.fabs.f32(float %6078)
  %6080 = tail call float @llvm.amdgcn.frexp.mant.f32(float %6079)
  %6081 = fcmp olt float %6080, 0x3FE5555560000000
  %6082 = zext i1 %6081 to i32
  %6083 = tail call float @llvm.amdgcn.ldexp.f32(float %6080, i32 %6082)
  %6084 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %6079)
  %6085 = sub nsw i32 %6084, %6082
  %6086 = fadd float %6083, -1.000000e+00
  %6087 = fadd float %6083, 1.000000e+00
  %6088 = fadd float %6087, -1.000000e+00
  %6089 = fsub float %6083, %6088
  %6090 = tail call float @llvm.amdgcn.rcp.f32(float %6087)
  %6091 = fmul float %6086, %6090
  %6092 = fmul float %6087, %6091
  %6093 = fneg float %6092
  %6094 = tail call float @llvm.fma.f32(float %6091, float %6087, float %6093)
  %6095 = tail call float @llvm.fma.f32(float %6091, float %6089, float %6094)
  %6096 = fadd float %6092, %6095
  %6097 = fsub float %6096, %6092
  %6098 = fsub float %6095, %6097
  %6099 = fsub float %6086, %6096
  %6100 = fsub float %6086, %6099
  %6101 = fsub float %6100, %6096
  %6102 = fsub float %6101, %6098
  %6103 = fadd float %6099, %6102
  %6104 = fmul float %6090, %6103
  %6105 = fadd float %6091, %6104
  %6106 = fsub float %6105, %6091
  %6107 = fsub float %6104, %6106
  %6108 = fmul float %6105, %6105
  %6109 = fneg float %6108
  %6110 = tail call float @llvm.fma.f32(float %6105, float %6105, float %6109)
  %6111 = fmul float %6107, 2.000000e+00
  %6112 = tail call float @llvm.fma.f32(float %6105, float %6111, float %6110)
  %6113 = fadd float %6108, %6112
  %6114 = fsub float %6113, %6108
  %6115 = fsub float %6112, %6114
  %6116 = tail call float @llvm.fmuladd.f32(float %6113, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %6117 = tail call float @llvm.fmuladd.f32(float %6113, float %6116, float 0x3FD999BDE0000000)
  %6118 = sitofp i32 %6085 to float
  %6119 = fmul float %6118, 0x3FE62E4300000000
  %6120 = fneg float %6119
  %6121 = tail call float @llvm.fma.f32(float %6118, float 0x3FE62E4300000000, float %6120)
  %6122 = tail call float @llvm.fma.f32(float %6118, float 0xBE205C6100000000, float %6121)
  %6123 = fadd float %6119, %6122
  %6124 = fsub float %6123, %6119
  %6125 = fsub float %6122, %6124
  %6126 = tail call float @llvm.amdgcn.ldexp.f32(float %6105, i32 1)
  %6127 = fmul float %6105, %6113
  %6128 = fneg float %6127
  %6129 = tail call float @llvm.fma.f32(float %6113, float %6105, float %6128)
  %6130 = tail call float @llvm.fma.f32(float %6113, float %6107, float %6129)
  %6131 = tail call float @llvm.fma.f32(float %6115, float %6105, float %6130)
  %6132 = fadd float %6127, %6131
  %6133 = fsub float %6132, %6127
  %6134 = fsub float %6131, %6133
  %6135 = fmul float %6113, %6117
  %6136 = fneg float %6135
  %6137 = tail call float @llvm.fma.f32(float %6113, float %6117, float %6136)
  %6138 = tail call float @llvm.fma.f32(float %6115, float %6117, float %6137)
  %6139 = fadd float %6135, %6138
  %6140 = fsub float %6139, %6135
  %6141 = fsub float %6138, %6140
  %6142 = fadd float %6139, 0x3FE5555540000000
  %6143 = fadd float %6142, 0xBFE5555540000000
  %6144 = fsub float %6139, %6143
  %6145 = fadd float %6141, 0x3E2E720200000000
  %6146 = fadd float %6145, %6144
  %6147 = fadd float %6142, %6146
  %6148 = fsub float %6147, %6142
  %6149 = fsub float %6146, %6148
  %6150 = fmul float %6132, %6147
  %6151 = fneg float %6150
  %6152 = tail call float @llvm.fma.f32(float %6132, float %6147, float %6151)
  %6153 = tail call float @llvm.fma.f32(float %6132, float %6149, float %6152)
  %6154 = tail call float @llvm.fma.f32(float %6134, float %6147, float %6153)
  %6155 = tail call float @llvm.amdgcn.ldexp.f32(float %6107, i32 1)
  %6156 = fadd float %6150, %6154
  %6157 = fsub float %6156, %6150
  %6158 = fsub float %6154, %6157
  %6159 = fadd float %6126, %6156
  %6160 = fsub float %6159, %6126
  %6161 = fsub float %6156, %6160
  %6162 = fadd float %6155, %6158
  %6163 = fadd float %6162, %6161
  %6164 = fadd float %6159, %6163
  %6165 = fsub float %6164, %6159
  %6166 = fsub float %6163, %6165
  %6167 = fadd float %6123, %6164
  %6168 = fsub float %6167, %6123
  %6169 = fsub float %6167, %6168
  %6170 = fsub float %6123, %6169
  %6171 = fsub float %6164, %6168
  %6172 = fadd float %6171, %6170
  %6173 = fadd float %6125, %6166
  %6174 = fsub float %6173, %6125
  %6175 = fsub float %6173, %6174
  %6176 = fsub float %6125, %6175
  %6177 = fsub float %6166, %6174
  %6178 = fadd float %6177, %6176
  %6179 = fadd float %6173, %6172
  %6180 = fadd float %6167, %6179
  %6181 = fsub float %6180, %6167
  %6182 = fsub float %6179, %6181
  %6183 = fadd float %6178, %6182
  %6184 = fadd float %6180, %6183
  %6185 = fsub float %6184, %6180
  %6186 = fsub float %6183, %6185
  %6187 = fmul float %6184, 2.000000e+00
  %6188 = fneg float %6187
  %6189 = tail call float @llvm.fma.f32(float %6184, float 2.000000e+00, float %6188)
  %6190 = fmul float %6184, 0.000000e+00
  %6191 = tail call float @llvm.fma.f32(float %6186, float 2.000000e+00, float %6190)
  %6192 = fadd float %6189, %6191
  %6193 = fadd float %6187, %6192
  %6194 = fsub float %6193, %6187
  %6195 = fsub float %6192, %6194
  %6196 = tail call float @llvm.fabs.f32(float %6187) #3
  %6197 = fcmp oeq float %6196, 0x7FF0000000000000
  %6198 = select i1 %6197, float %6187, float %6193
  %6199 = tail call float @llvm.fabs.f32(float %6198) #3
  %6200 = fcmp oeq float %6199, 0x7FF0000000000000
  %6201 = select i1 %6200, float 0.000000e+00, float %6195
  %6202 = fcmp oeq float %6198, 0x40562E4300000000
  %6203 = select i1 %6202, float 0x3EE0000000000000, float 0.000000e+00
  %6204 = fsub float %6198, %6203
  %6205 = fadd float %6203, %6201
  %6206 = fmul float %6204, 0x3FF7154760000000
  %6207 = tail call float @llvm.rint.f32(float %6206)
  %6208 = fcmp ogt float %6204, 0x40562E4300000000
  %6209 = fcmp olt float %6204, 0xC059D1DA00000000
  %6210 = fneg float %6206
  %6211 = tail call float @llvm.fma.f32(float %6204, float 0x3FF7154760000000, float %6210)
  %6212 = tail call float @llvm.fma.f32(float %6204, float 0x3E54AE0BE0000000, float %6211)
  %6213 = fsub float %6206, %6207
  %6214 = fadd float %6212, %6213
  %6215 = tail call float @llvm.exp2.f32(float %6214)
  %6216 = fptosi float %6207 to i32
  %6217 = tail call float @llvm.amdgcn.ldexp.f32(float %6215, i32 %6216)
  %6218 = select i1 %6209, float 0.000000e+00, float %6217
  %6219 = select i1 %6208, float 0x7FF0000000000000, float %6218
  %6220 = tail call float @llvm.fma.f32(float %6219, float %6205, float %6219)
  %6221 = tail call float @llvm.fabs.f32(float %6219) #3
  %6222 = fcmp oeq float %6221, 0x7FF0000000000000
  %6223 = select i1 %6222, float %6219, float %6220
  %6224 = tail call float @llvm.fabs.f32(float %6223)
  %6225 = fcmp oeq float %6079, 0x7FF0000000000000
  %6226 = fcmp oeq float %6078, 0.000000e+00
  %6227 = select i1 %6225, float 0x7FF0000000000000, float %6224
  %6228 = select i1 %6226, float 0.000000e+00, float %6227
  %6229 = fcmp uno float %6078, 0.000000e+00
  %6230 = select i1 %6229, float 0x7FF8000000000000, float %6228
  %6231 = fmul contract float %6077, 0x400921CAC0000000
  %6232 = tail call float @llvm.fabs.f32(float %6231)
  %6233 = fcmp olt float %6232, 1.310720e+05
  br i1 %6233, label %6340, label %6234

6234:                                             ; preds = %6063
  %6235 = bitcast float %6232 to i32
  %6236 = lshr i32 %6235, 23
  %6237 = and i32 %6235, 8388607
  %6238 = or i32 %6237, 8388608
  %6239 = zext i32 %6238 to i64
  %6240 = mul nuw nsw i64 %6239, 4266746795
  %6241 = trunc i64 %6240 to i32
  %6242 = lshr i64 %6240, 32
  %6243 = mul nuw nsw i64 %6239, 1011060801
  %6244 = add nuw nsw i64 %6242, %6243
  %6245 = trunc i64 %6244 to i32
  %6246 = lshr i64 %6244, 32
  %6247 = mul nuw nsw i64 %6239, 3680671129
  %6248 = add nuw nsw i64 %6246, %6247
  %6249 = trunc i64 %6248 to i32
  %6250 = lshr i64 %6248, 32
  %6251 = mul nuw nsw i64 %6239, 4113882560
  %6252 = add nuw nsw i64 %6250, %6251
  %6253 = trunc i64 %6252 to i32
  %6254 = lshr i64 %6252, 32
  %6255 = mul nuw nsw i64 %6239, 4230436817
  %6256 = add nuw nsw i64 %6254, %6255
  %6257 = trunc i64 %6256 to i32
  %6258 = lshr i64 %6256, 32
  %6259 = mul nuw nsw i64 %6239, 1313084713
  %6260 = add nuw nsw i64 %6258, %6259
  %6261 = trunc i64 %6260 to i32
  %6262 = lshr i64 %6260, 32
  %6263 = mul nuw nsw i64 %6239, 2734261102
  %6264 = add nuw nsw i64 %6262, %6263
  %6265 = trunc i64 %6264 to i32
  %6266 = lshr i64 %6264, 32
  %6267 = trunc i64 %6266 to i32
  %6268 = add nsw i32 %6236, -120
  %6269 = icmp ugt i32 %6268, 63
  %6270 = select i1 %6269, i32 %6261, i32 %6267
  %6271 = select i1 %6269, i32 %6257, i32 %6265
  %6272 = select i1 %6269, i32 %6253, i32 %6261
  %6273 = select i1 %6269, i32 %6249, i32 %6257
  %6274 = select i1 %6269, i32 %6245, i32 %6253
  %6275 = select i1 %6269, i32 %6241, i32 %6249
  %6276 = select i1 %6269, i32 -64, i32 0
  %6277 = add nsw i32 %6276, %6268
  %6278 = icmp ugt i32 %6277, 31
  %6279 = select i1 %6278, i32 %6271, i32 %6270
  %6280 = select i1 %6278, i32 %6272, i32 %6271
  %6281 = select i1 %6278, i32 %6273, i32 %6272
  %6282 = select i1 %6278, i32 %6274, i32 %6273
  %6283 = select i1 %6278, i32 %6275, i32 %6274
  %6284 = select i1 %6278, i32 -32, i32 0
  %6285 = add nsw i32 %6284, %6277
  %6286 = icmp ugt i32 %6285, 31
  %6287 = select i1 %6286, i32 %6280, i32 %6279
  %6288 = select i1 %6286, i32 %6281, i32 %6280
  %6289 = select i1 %6286, i32 %6282, i32 %6281
  %6290 = select i1 %6286, i32 %6283, i32 %6282
  %6291 = select i1 %6286, i32 -32, i32 0
  %6292 = add nsw i32 %6291, %6285
  %6293 = icmp eq i32 %6292, 0
  %6294 = sub nsw i32 32, %6292
  %6295 = tail call i32 @llvm.fshr.i32(i32 %6287, i32 %6288, i32 %6294)
  %6296 = tail call i32 @llvm.fshr.i32(i32 %6288, i32 %6289, i32 %6294)
  %6297 = tail call i32 @llvm.fshr.i32(i32 %6289, i32 %6290, i32 %6294)
  %6298 = select i1 %6293, i32 %6287, i32 %6295
  %6299 = select i1 %6293, i32 %6288, i32 %6296
  %6300 = select i1 %6293, i32 %6289, i32 %6297
  %6301 = lshr i32 %6298, 29
  %6302 = tail call i32 @llvm.fshl.i32(i32 %6298, i32 %6299, i32 2)
  %6303 = tail call i32 @llvm.fshl.i32(i32 %6299, i32 %6300, i32 2)
  %6304 = tail call i32 @llvm.fshl.i32(i32 %6300, i32 %6290, i32 2)
  %6305 = and i32 %6301, 1
  %6306 = sub nsw i32 0, %6305
  %6307 = shl i32 %6301, 31
  %6308 = xor i32 %6302, %6306
  %6309 = xor i32 %6303, %6306
  %6310 = xor i32 %6304, %6306
  %6311 = tail call i32 @llvm.ctlz.i32(i32 %6308, i1 false), !range !8
  %6312 = sub nsw i32 31, %6311
  %6313 = tail call i32 @llvm.fshr.i32(i32 %6308, i32 %6309, i32 %6312)
  %6314 = tail call i32 @llvm.fshr.i32(i32 %6309, i32 %6310, i32 %6312)
  %6315 = shl nuw nsw i32 %6311, 23
  %6316 = sub nuw nsw i32 1056964608, %6315
  %6317 = lshr i32 %6313, 9
  %6318 = or i32 %6317, %6316
  %6319 = or i32 %6318, %6307
  %6320 = bitcast i32 %6319 to float
  %6321 = tail call i32 @llvm.fshl.i32(i32 %6313, i32 %6314, i32 23)
  %6322 = tail call i32 @llvm.ctlz.i32(i32 %6321, i1 false), !range !8
  %6323 = fmul float %6320, 0x3FF921FB40000000
  %6324 = add nuw nsw i32 %6322, %6311
  %6325 = shl nuw nsw i32 %6324, 23
  %6326 = sub nuw nsw i32 855638016, %6325
  %6327 = sub nsw i32 31, %6322
  %6328 = tail call i32 @llvm.fshr.i32(i32 %6321, i32 %6314, i32 %6327)
  %6329 = lshr i32 %6328, 9
  %6330 = or i32 %6326, %6329
  %6331 = or i32 %6330, %6307
  %6332 = bitcast i32 %6331 to float
  %6333 = fneg float %6323
  %6334 = tail call float @llvm.fma.f32(float %6320, float 0x3FF921FB40000000, float %6333)
  %6335 = tail call float @llvm.fma.f32(float %6320, float 0x3E74442D00000000, float %6334)
  %6336 = tail call float @llvm.fma.f32(float %6332, float 0x3FF921FB40000000, float %6335)
  %6337 = fadd float %6323, %6336
  %6338 = lshr i32 %6298, 30
  %6339 = add nuw nsw i32 %6305, %6338
  br label %6348

6340:                                             ; preds = %6063
  %6341 = fmul float %6232, 0x3FE45F3060000000
  %6342 = tail call float @llvm.rint.f32(float %6341)
  %6343 = tail call float @llvm.fma.f32(float %6342, float 0xBFF921FB40000000, float %6232)
  %6344 = tail call float @llvm.fma.f32(float %6342, float 0xBE74442D00000000, float %6343)
  %6345 = tail call float @llvm.fma.f32(float %6342, float 0xBCF8469880000000, float %6344)
  %6346 = fptosi float %6342 to i32
  %6347 = bitcast float %6232 to i32
  br label %6348

6348:                                             ; preds = %6340, %6234
  %6349 = phi i32 [ %6347, %6340 ], [ %6235, %6234 ]
  %6350 = phi float [ %6345, %6340 ], [ %6337, %6234 ]
  %6351 = phi i32 [ %6346, %6340 ], [ %6339, %6234 ]
  %6352 = fmul float %6350, %6350
  %6353 = tail call float @llvm.fmuladd.f32(float %6352, float 0xBF29833040000000, float 0x3F81103880000000)
  %6354 = tail call float @llvm.fmuladd.f32(float %6352, float %6353, float 0xBFC55553A0000000)
  %6355 = fmul float %6352, %6354
  %6356 = tail call float @llvm.fmuladd.f32(float %6350, float %6355, float %6350)
  %6357 = tail call float @llvm.fmuladd.f32(float %6352, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %6358 = tail call float @llvm.fmuladd.f32(float %6352, float %6357, float 0x3FA5557EE0000000)
  %6359 = tail call float @llvm.fmuladd.f32(float %6352, float %6358, float 0xBFE0000080000000)
  %6360 = tail call float @llvm.fmuladd.f32(float %6352, float %6359, float 1.000000e+00)
  %6361 = and i32 %6351, 1
  %6362 = icmp eq i32 %6361, 0
  %6363 = select i1 %6362, float %6356, float %6360
  %6364 = bitcast float %6363 to i32
  %6365 = shl i32 %6351, 30
  %6366 = and i32 %6365, -2147483648
  %6367 = bitcast float %6231 to i32
  %6368 = xor i32 %6349, %6367
  %6369 = xor i32 %6368, %6366
  %6370 = xor i32 %6369, %6364
  %6371 = bitcast i32 %6370 to float
  %6372 = tail call i1 @llvm.amdgcn.class.f32(float %6232, i32 504)
  %6373 = select i1 %6372, float %6371, float 0x7FF8000000000000
  %6374 = tail call float @llvm.fabs.f32(float %6373)
  %6375 = tail call float @llvm.amdgcn.frexp.mant.f32(float %6374)
  %6376 = fcmp olt float %6375, 0x3FE5555560000000
  %6377 = zext i1 %6376 to i32
  %6378 = tail call float @llvm.amdgcn.ldexp.f32(float %6375, i32 %6377)
  %6379 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %6374)
  %6380 = sub nsw i32 %6379, %6377
  %6381 = fadd float %6378, -1.000000e+00
  %6382 = fadd float %6378, 1.000000e+00
  %6383 = fadd float %6382, -1.000000e+00
  %6384 = fsub float %6378, %6383
  %6385 = tail call float @llvm.amdgcn.rcp.f32(float %6382)
  %6386 = fmul float %6381, %6385
  %6387 = fmul float %6382, %6386
  %6388 = fneg float %6387
  %6389 = tail call float @llvm.fma.f32(float %6386, float %6382, float %6388)
  %6390 = tail call float @llvm.fma.f32(float %6386, float %6384, float %6389)
  %6391 = fadd float %6387, %6390
  %6392 = fsub float %6391, %6387
  %6393 = fsub float %6390, %6392
  %6394 = fsub float %6381, %6391
  %6395 = fsub float %6381, %6394
  %6396 = fsub float %6395, %6391
  %6397 = fsub float %6396, %6393
  %6398 = fadd float %6394, %6397
  %6399 = fmul float %6385, %6398
  %6400 = fadd float %6386, %6399
  %6401 = fsub float %6400, %6386
  %6402 = fsub float %6399, %6401
  %6403 = fmul float %6400, %6400
  %6404 = fneg float %6403
  %6405 = tail call float @llvm.fma.f32(float %6400, float %6400, float %6404)
  %6406 = fmul float %6402, 2.000000e+00
  %6407 = tail call float @llvm.fma.f32(float %6400, float %6406, float %6405)
  %6408 = fadd float %6403, %6407
  %6409 = fsub float %6408, %6403
  %6410 = fsub float %6407, %6409
  %6411 = tail call float @llvm.fmuladd.f32(float %6408, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %6412 = tail call float @llvm.fmuladd.f32(float %6408, float %6411, float 0x3FD999BDE0000000)
  %6413 = sitofp i32 %6380 to float
  %6414 = fmul float %6413, 0x3FE62E4300000000
  %6415 = fneg float %6414
  %6416 = tail call float @llvm.fma.f32(float %6413, float 0x3FE62E4300000000, float %6415)
  %6417 = tail call float @llvm.fma.f32(float %6413, float 0xBE205C6100000000, float %6416)
  %6418 = fadd float %6414, %6417
  %6419 = fsub float %6418, %6414
  %6420 = fsub float %6417, %6419
  %6421 = tail call float @llvm.amdgcn.ldexp.f32(float %6400, i32 1)
  %6422 = fmul float %6400, %6408
  %6423 = fneg float %6422
  %6424 = tail call float @llvm.fma.f32(float %6408, float %6400, float %6423)
  %6425 = tail call float @llvm.fma.f32(float %6408, float %6402, float %6424)
  %6426 = tail call float @llvm.fma.f32(float %6410, float %6400, float %6425)
  %6427 = fadd float %6422, %6426
  %6428 = fsub float %6427, %6422
  %6429 = fsub float %6426, %6428
  %6430 = fmul float %6408, %6412
  %6431 = fneg float %6430
  %6432 = tail call float @llvm.fma.f32(float %6408, float %6412, float %6431)
  %6433 = tail call float @llvm.fma.f32(float %6410, float %6412, float %6432)
  %6434 = fadd float %6430, %6433
  %6435 = fsub float %6434, %6430
  %6436 = fsub float %6433, %6435
  %6437 = fadd float %6434, 0x3FE5555540000000
  %6438 = fadd float %6437, 0xBFE5555540000000
  %6439 = fsub float %6434, %6438
  %6440 = fadd float %6436, 0x3E2E720200000000
  %6441 = fadd float %6440, %6439
  %6442 = fadd float %6437, %6441
  %6443 = fsub float %6442, %6437
  %6444 = fsub float %6441, %6443
  %6445 = fmul float %6427, %6442
  %6446 = fneg float %6445
  %6447 = tail call float @llvm.fma.f32(float %6427, float %6442, float %6446)
  %6448 = tail call float @llvm.fma.f32(float %6427, float %6444, float %6447)
  %6449 = tail call float @llvm.fma.f32(float %6429, float %6442, float %6448)
  %6450 = tail call float @llvm.amdgcn.ldexp.f32(float %6402, i32 1)
  %6451 = fadd float %6445, %6449
  %6452 = fsub float %6451, %6445
  %6453 = fsub float %6449, %6452
  %6454 = fadd float %6421, %6451
  %6455 = fsub float %6454, %6421
  %6456 = fsub float %6451, %6455
  %6457 = fadd float %6450, %6453
  %6458 = fadd float %6457, %6456
  %6459 = fadd float %6454, %6458
  %6460 = fsub float %6459, %6454
  %6461 = fsub float %6458, %6460
  %6462 = fadd float %6418, %6459
  %6463 = fsub float %6462, %6418
  %6464 = fsub float %6462, %6463
  %6465 = fsub float %6418, %6464
  %6466 = fsub float %6459, %6463
  %6467 = fadd float %6466, %6465
  %6468 = fadd float %6420, %6461
  %6469 = fsub float %6468, %6420
  %6470 = fsub float %6468, %6469
  %6471 = fsub float %6420, %6470
  %6472 = fsub float %6461, %6469
  %6473 = fadd float %6472, %6471
  %6474 = fadd float %6468, %6467
  %6475 = fadd float %6462, %6474
  %6476 = fsub float %6475, %6462
  %6477 = fsub float %6474, %6476
  %6478 = fadd float %6473, %6477
  %6479 = fadd float %6475, %6478
  %6480 = fsub float %6479, %6475
  %6481 = fsub float %6478, %6480
  %6482 = fmul float %6479, 2.000000e+00
  %6483 = fneg float %6482
  %6484 = tail call float @llvm.fma.f32(float %6479, float 2.000000e+00, float %6483)
  %6485 = fmul float %6479, 0.000000e+00
  %6486 = tail call float @llvm.fma.f32(float %6481, float 2.000000e+00, float %6485)
  %6487 = fadd float %6484, %6486
  %6488 = fadd float %6482, %6487
  %6489 = fsub float %6488, %6482
  %6490 = fsub float %6487, %6489
  %6491 = tail call float @llvm.fabs.f32(float %6482) #3
  %6492 = fcmp oeq float %6491, 0x7FF0000000000000
  %6493 = select i1 %6492, float %6482, float %6488
  %6494 = tail call float @llvm.fabs.f32(float %6493) #3
  %6495 = fcmp oeq float %6494, 0x7FF0000000000000
  %6496 = select i1 %6495, float 0.000000e+00, float %6490
  %6497 = fcmp oeq float %6493, 0x40562E4300000000
  %6498 = select i1 %6497, float 0x3EE0000000000000, float 0.000000e+00
  %6499 = fsub float %6493, %6498
  %6500 = fadd float %6498, %6496
  %6501 = fmul float %6499, 0x3FF7154760000000
  %6502 = tail call float @llvm.rint.f32(float %6501)
  %6503 = fcmp ogt float %6499, 0x40562E4300000000
  %6504 = fcmp olt float %6499, 0xC059D1DA00000000
  %6505 = fneg float %6501
  %6506 = tail call float @llvm.fma.f32(float %6499, float 0x3FF7154760000000, float %6505)
  %6507 = tail call float @llvm.fma.f32(float %6499, float 0x3E54AE0BE0000000, float %6506)
  %6508 = fsub float %6501, %6502
  %6509 = fadd float %6507, %6508
  %6510 = tail call float @llvm.exp2.f32(float %6509)
  %6511 = fptosi float %6502 to i32
  %6512 = tail call float @llvm.amdgcn.ldexp.f32(float %6510, i32 %6511)
  %6513 = select i1 %6504, float 0.000000e+00, float %6512
  %6514 = select i1 %6503, float 0x7FF0000000000000, float %6513
  %6515 = tail call float @llvm.fma.f32(float %6514, float %6500, float %6514)
  %6516 = tail call float @llvm.fabs.f32(float %6514) #3
  %6517 = fcmp oeq float %6516, 0x7FF0000000000000
  %6518 = select i1 %6517, float %6514, float %6515
  %6519 = tail call float @llvm.fabs.f32(float %6518)
  %6520 = fcmp oeq float %6374, 0x7FF0000000000000
  %6521 = fcmp oeq float %6373, 0.000000e+00
  %6522 = fcmp uno float %6373, 0.000000e+00
  %6523 = fmul contract float %6519, 1.000000e+01
  %6524 = fadd contract float %6523, 1.000000e+00
  %6525 = select i1 %6520, float 0x7FF0000000000000, float %6524
  %6526 = select i1 %6521, float 1.000000e+00, float %6525
  %6527 = select i1 %6522, float 0x7FF8000000000000, float %6526
  %6528 = fmul contract float %6230, %6527
  %6529 = fadd contract float %6066, %6528
  br i1 %6064, label %6063, label %6530, !llvm.loop !9

6530:                                             ; preds = %6348
  %6531 = load float, float addrspace(1)* %0, align 4, !tbaa !4
  %6532 = fadd contract float %6531, -1.000000e+00
  %6533 = fmul contract float %6532, 2.500000e-01
  %6534 = fadd contract float %6533, 1.000000e+00
  %6535 = load float, float addrspace(1)* %3, align 4, !tbaa !4
  %6536 = fadd contract float %6535, -1.000000e+00
  %6537 = fmul contract float %6536, 2.500000e-01
  %6538 = fadd contract float %6537, 1.000000e+00
  %6539 = fmul contract float %6534, 0x400921CAC0000000
  %6540 = tail call float @llvm.fabs.f32(float %6539)
  %6541 = fcmp olt float %6540, 1.310720e+05
  br i1 %6541, label %6648, label %6542

6542:                                             ; preds = %6530
  %6543 = bitcast float %6540 to i32
  %6544 = lshr i32 %6543, 23
  %6545 = and i32 %6543, 8388607
  %6546 = or i32 %6545, 8388608
  %6547 = zext i32 %6546 to i64
  %6548 = mul nuw nsw i64 %6547, 4266746795
  %6549 = trunc i64 %6548 to i32
  %6550 = lshr i64 %6548, 32
  %6551 = mul nuw nsw i64 %6547, 1011060801
  %6552 = add nuw nsw i64 %6550, %6551
  %6553 = trunc i64 %6552 to i32
  %6554 = lshr i64 %6552, 32
  %6555 = mul nuw nsw i64 %6547, 3680671129
  %6556 = add nuw nsw i64 %6554, %6555
  %6557 = trunc i64 %6556 to i32
  %6558 = lshr i64 %6556, 32
  %6559 = mul nuw nsw i64 %6547, 4113882560
  %6560 = add nuw nsw i64 %6558, %6559
  %6561 = trunc i64 %6560 to i32
  %6562 = lshr i64 %6560, 32
  %6563 = mul nuw nsw i64 %6547, 4230436817
  %6564 = add nuw nsw i64 %6562, %6563
  %6565 = trunc i64 %6564 to i32
  %6566 = lshr i64 %6564, 32
  %6567 = mul nuw nsw i64 %6547, 1313084713
  %6568 = add nuw nsw i64 %6566, %6567
  %6569 = trunc i64 %6568 to i32
  %6570 = lshr i64 %6568, 32
  %6571 = mul nuw nsw i64 %6547, 2734261102
  %6572 = add nuw nsw i64 %6570, %6571
  %6573 = trunc i64 %6572 to i32
  %6574 = lshr i64 %6572, 32
  %6575 = trunc i64 %6574 to i32
  %6576 = add nsw i32 %6544, -120
  %6577 = icmp ugt i32 %6576, 63
  %6578 = select i1 %6577, i32 %6569, i32 %6575
  %6579 = select i1 %6577, i32 %6565, i32 %6573
  %6580 = select i1 %6577, i32 %6561, i32 %6569
  %6581 = select i1 %6577, i32 %6557, i32 %6565
  %6582 = select i1 %6577, i32 %6553, i32 %6561
  %6583 = select i1 %6577, i32 %6549, i32 %6557
  %6584 = select i1 %6577, i32 -64, i32 0
  %6585 = add nsw i32 %6584, %6576
  %6586 = icmp ugt i32 %6585, 31
  %6587 = select i1 %6586, i32 %6579, i32 %6578
  %6588 = select i1 %6586, i32 %6580, i32 %6579
  %6589 = select i1 %6586, i32 %6581, i32 %6580
  %6590 = select i1 %6586, i32 %6582, i32 %6581
  %6591 = select i1 %6586, i32 %6583, i32 %6582
  %6592 = select i1 %6586, i32 -32, i32 0
  %6593 = add nsw i32 %6592, %6585
  %6594 = icmp ugt i32 %6593, 31
  %6595 = select i1 %6594, i32 %6588, i32 %6587
  %6596 = select i1 %6594, i32 %6589, i32 %6588
  %6597 = select i1 %6594, i32 %6590, i32 %6589
  %6598 = select i1 %6594, i32 %6591, i32 %6590
  %6599 = select i1 %6594, i32 -32, i32 0
  %6600 = add nsw i32 %6599, %6593
  %6601 = icmp eq i32 %6600, 0
  %6602 = sub nsw i32 32, %6600
  %6603 = tail call i32 @llvm.fshr.i32(i32 %6595, i32 %6596, i32 %6602)
  %6604 = tail call i32 @llvm.fshr.i32(i32 %6596, i32 %6597, i32 %6602)
  %6605 = tail call i32 @llvm.fshr.i32(i32 %6597, i32 %6598, i32 %6602)
  %6606 = select i1 %6601, i32 %6595, i32 %6603
  %6607 = select i1 %6601, i32 %6596, i32 %6604
  %6608 = select i1 %6601, i32 %6597, i32 %6605
  %6609 = lshr i32 %6606, 29
  %6610 = tail call i32 @llvm.fshl.i32(i32 %6606, i32 %6607, i32 2)
  %6611 = tail call i32 @llvm.fshl.i32(i32 %6607, i32 %6608, i32 2)
  %6612 = tail call i32 @llvm.fshl.i32(i32 %6608, i32 %6598, i32 2)
  %6613 = and i32 %6609, 1
  %6614 = sub nsw i32 0, %6613
  %6615 = shl i32 %6609, 31
  %6616 = xor i32 %6610, %6614
  %6617 = xor i32 %6611, %6614
  %6618 = xor i32 %6612, %6614
  %6619 = tail call i32 @llvm.ctlz.i32(i32 %6616, i1 false), !range !8
  %6620 = sub nsw i32 31, %6619
  %6621 = tail call i32 @llvm.fshr.i32(i32 %6616, i32 %6617, i32 %6620)
  %6622 = tail call i32 @llvm.fshr.i32(i32 %6617, i32 %6618, i32 %6620)
  %6623 = shl nuw nsw i32 %6619, 23
  %6624 = sub nuw nsw i32 1056964608, %6623
  %6625 = lshr i32 %6621, 9
  %6626 = or i32 %6625, %6624
  %6627 = or i32 %6626, %6615
  %6628 = bitcast i32 %6627 to float
  %6629 = tail call i32 @llvm.fshl.i32(i32 %6621, i32 %6622, i32 23)
  %6630 = tail call i32 @llvm.ctlz.i32(i32 %6629, i1 false), !range !8
  %6631 = fmul float %6628, 0x3FF921FB40000000
  %6632 = add nuw nsw i32 %6630, %6619
  %6633 = shl nuw nsw i32 %6632, 23
  %6634 = sub nuw nsw i32 855638016, %6633
  %6635 = sub nsw i32 31, %6630
  %6636 = tail call i32 @llvm.fshr.i32(i32 %6629, i32 %6622, i32 %6635)
  %6637 = lshr i32 %6636, 9
  %6638 = or i32 %6634, %6637
  %6639 = or i32 %6638, %6615
  %6640 = bitcast i32 %6639 to float
  %6641 = fneg float %6631
  %6642 = tail call float @llvm.fma.f32(float %6628, float 0x3FF921FB40000000, float %6641)
  %6643 = tail call float @llvm.fma.f32(float %6628, float 0x3E74442D00000000, float %6642)
  %6644 = tail call float @llvm.fma.f32(float %6640, float 0x3FF921FB40000000, float %6643)
  %6645 = fadd float %6631, %6644
  %6646 = lshr i32 %6606, 30
  %6647 = add nuw nsw i32 %6613, %6646
  br label %6656

6648:                                             ; preds = %6530
  %6649 = fmul float %6540, 0x3FE45F3060000000
  %6650 = tail call float @llvm.rint.f32(float %6649)
  %6651 = tail call float @llvm.fma.f32(float %6650, float 0xBFF921FB40000000, float %6540)
  %6652 = tail call float @llvm.fma.f32(float %6650, float 0xBE74442D00000000, float %6651)
  %6653 = tail call float @llvm.fma.f32(float %6650, float 0xBCF8469880000000, float %6652)
  %6654 = fptosi float %6650 to i32
  %6655 = bitcast float %6540 to i32
  br label %6656

6656:                                             ; preds = %6648, %6542
  %6657 = phi i32 [ %6655, %6648 ], [ %6543, %6542 ]
  %6658 = phi float [ %6653, %6648 ], [ %6645, %6542 ]
  %6659 = phi i32 [ %6654, %6648 ], [ %6647, %6542 ]
  %6660 = fmul float %6658, %6658
  %6661 = tail call float @llvm.fmuladd.f32(float %6660, float 0xBF29833040000000, float 0x3F81103880000000)
  %6662 = tail call float @llvm.fmuladd.f32(float %6660, float %6661, float 0xBFC55553A0000000)
  %6663 = fmul float %6660, %6662
  %6664 = tail call float @llvm.fmuladd.f32(float %6658, float %6663, float %6658)
  %6665 = tail call float @llvm.fmuladd.f32(float %6660, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %6666 = tail call float @llvm.fmuladd.f32(float %6660, float %6665, float 0x3FA5557EE0000000)
  %6667 = tail call float @llvm.fmuladd.f32(float %6660, float %6666, float 0xBFE0000080000000)
  %6668 = tail call float @llvm.fmuladd.f32(float %6660, float %6667, float 1.000000e+00)
  %6669 = and i32 %6659, 1
  %6670 = icmp eq i32 %6669, 0
  %6671 = select i1 %6670, float %6664, float %6668
  %6672 = bitcast float %6671 to i32
  %6673 = shl i32 %6659, 30
  %6674 = and i32 %6673, -2147483648
  %6675 = bitcast float %6539 to i32
  %6676 = xor i32 %6657, %6675
  %6677 = xor i32 %6676, %6674
  %6678 = xor i32 %6677, %6672
  %6679 = bitcast i32 %6678 to float
  %6680 = tail call i1 @llvm.amdgcn.class.f32(float %6540, i32 504)
  %6681 = select i1 %6680, float %6679, float 0x7FF8000000000000
  %6682 = tail call float @llvm.fabs.f32(float %6681)
  %6683 = tail call float @llvm.amdgcn.frexp.mant.f32(float %6682)
  %6684 = fcmp olt float %6683, 0x3FE5555560000000
  %6685 = zext i1 %6684 to i32
  %6686 = tail call float @llvm.amdgcn.ldexp.f32(float %6683, i32 %6685)
  %6687 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %6682)
  %6688 = sub nsw i32 %6687, %6685
  %6689 = fadd float %6686, -1.000000e+00
  %6690 = fadd float %6686, 1.000000e+00
  %6691 = fadd float %6690, -1.000000e+00
  %6692 = fsub float %6686, %6691
  %6693 = tail call float @llvm.amdgcn.rcp.f32(float %6690)
  %6694 = fmul float %6689, %6693
  %6695 = fmul float %6690, %6694
  %6696 = fneg float %6695
  %6697 = tail call float @llvm.fma.f32(float %6694, float %6690, float %6696)
  %6698 = tail call float @llvm.fma.f32(float %6694, float %6692, float %6697)
  %6699 = fadd float %6695, %6698
  %6700 = fsub float %6699, %6695
  %6701 = fsub float %6698, %6700
  %6702 = fsub float %6689, %6699
  %6703 = fsub float %6689, %6702
  %6704 = fsub float %6703, %6699
  %6705 = fsub float %6704, %6701
  %6706 = fadd float %6702, %6705
  %6707 = fmul float %6693, %6706
  %6708 = fadd float %6694, %6707
  %6709 = fsub float %6708, %6694
  %6710 = fsub float %6707, %6709
  %6711 = fmul float %6708, %6708
  %6712 = fneg float %6711
  %6713 = tail call float @llvm.fma.f32(float %6708, float %6708, float %6712)
  %6714 = fmul float %6710, 2.000000e+00
  %6715 = tail call float @llvm.fma.f32(float %6708, float %6714, float %6713)
  %6716 = fadd float %6711, %6715
  %6717 = fsub float %6716, %6711
  %6718 = fsub float %6715, %6717
  %6719 = tail call float @llvm.fmuladd.f32(float %6716, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %6720 = tail call float @llvm.fmuladd.f32(float %6716, float %6719, float 0x3FD999BDE0000000)
  %6721 = sitofp i32 %6688 to float
  %6722 = fmul float %6721, 0x3FE62E4300000000
  %6723 = fneg float %6722
  %6724 = tail call float @llvm.fma.f32(float %6721, float 0x3FE62E4300000000, float %6723)
  %6725 = tail call float @llvm.fma.f32(float %6721, float 0xBE205C6100000000, float %6724)
  %6726 = fadd float %6722, %6725
  %6727 = fsub float %6726, %6722
  %6728 = fsub float %6725, %6727
  %6729 = tail call float @llvm.amdgcn.ldexp.f32(float %6708, i32 1)
  %6730 = fmul float %6708, %6716
  %6731 = fneg float %6730
  %6732 = tail call float @llvm.fma.f32(float %6716, float %6708, float %6731)
  %6733 = tail call float @llvm.fma.f32(float %6716, float %6710, float %6732)
  %6734 = tail call float @llvm.fma.f32(float %6718, float %6708, float %6733)
  %6735 = fadd float %6730, %6734
  %6736 = fsub float %6735, %6730
  %6737 = fsub float %6734, %6736
  %6738 = fmul float %6716, %6720
  %6739 = fneg float %6738
  %6740 = tail call float @llvm.fma.f32(float %6716, float %6720, float %6739)
  %6741 = tail call float @llvm.fma.f32(float %6718, float %6720, float %6740)
  %6742 = fadd float %6738, %6741
  %6743 = fsub float %6742, %6738
  %6744 = fsub float %6741, %6743
  %6745 = fadd float %6742, 0x3FE5555540000000
  %6746 = fadd float %6745, 0xBFE5555540000000
  %6747 = fsub float %6742, %6746
  %6748 = fadd float %6744, 0x3E2E720200000000
  %6749 = fadd float %6748, %6747
  %6750 = fadd float %6745, %6749
  %6751 = fsub float %6750, %6745
  %6752 = fsub float %6749, %6751
  %6753 = fmul float %6735, %6750
  %6754 = fneg float %6753
  %6755 = tail call float @llvm.fma.f32(float %6735, float %6750, float %6754)
  %6756 = tail call float @llvm.fma.f32(float %6735, float %6752, float %6755)
  %6757 = tail call float @llvm.fma.f32(float %6737, float %6750, float %6756)
  %6758 = tail call float @llvm.amdgcn.ldexp.f32(float %6710, i32 1)
  %6759 = fadd float %6753, %6757
  %6760 = fsub float %6759, %6753
  %6761 = fsub float %6757, %6760
  %6762 = fadd float %6729, %6759
  %6763 = fsub float %6762, %6729
  %6764 = fsub float %6759, %6763
  %6765 = fadd float %6758, %6761
  %6766 = fadd float %6765, %6764
  %6767 = fadd float %6762, %6766
  %6768 = fsub float %6767, %6762
  %6769 = fsub float %6766, %6768
  %6770 = fadd float %6726, %6767
  %6771 = fsub float %6770, %6726
  %6772 = fsub float %6770, %6771
  %6773 = fsub float %6726, %6772
  %6774 = fsub float %6767, %6771
  %6775 = fadd float %6774, %6773
  %6776 = fadd float %6728, %6769
  %6777 = fsub float %6776, %6728
  %6778 = fsub float %6776, %6777
  %6779 = fsub float %6728, %6778
  %6780 = fsub float %6769, %6777
  %6781 = fadd float %6780, %6779
  %6782 = fadd float %6776, %6775
  %6783 = fadd float %6770, %6782
  %6784 = fsub float %6783, %6770
  %6785 = fsub float %6782, %6784
  %6786 = fadd float %6781, %6785
  %6787 = fadd float %6783, %6786
  %6788 = fsub float %6787, %6783
  %6789 = fsub float %6786, %6788
  %6790 = fmul float %6787, 2.000000e+00
  %6791 = fneg float %6790
  %6792 = tail call float @llvm.fma.f32(float %6787, float 2.000000e+00, float %6791)
  %6793 = fmul float %6787, 0.000000e+00
  %6794 = tail call float @llvm.fma.f32(float %6789, float 2.000000e+00, float %6793)
  %6795 = fadd float %6792, %6794
  %6796 = fadd float %6790, %6795
  %6797 = fsub float %6796, %6790
  %6798 = fsub float %6795, %6797
  %6799 = tail call float @llvm.fabs.f32(float %6790) #3
  %6800 = fcmp oeq float %6799, 0x7FF0000000000000
  %6801 = select i1 %6800, float %6790, float %6796
  %6802 = tail call float @llvm.fabs.f32(float %6801) #3
  %6803 = fcmp oeq float %6802, 0x7FF0000000000000
  %6804 = select i1 %6803, float 0.000000e+00, float %6798
  %6805 = fcmp oeq float %6801, 0x40562E4300000000
  %6806 = select i1 %6805, float 0x3EE0000000000000, float 0.000000e+00
  %6807 = fsub float %6801, %6806
  %6808 = fadd float %6806, %6804
  %6809 = fmul float %6807, 0x3FF7154760000000
  %6810 = tail call float @llvm.rint.f32(float %6809)
  %6811 = fcmp ogt float %6807, 0x40562E4300000000
  %6812 = fcmp olt float %6807, 0xC059D1DA00000000
  %6813 = fneg float %6809
  %6814 = tail call float @llvm.fma.f32(float %6807, float 0x3FF7154760000000, float %6813)
  %6815 = tail call float @llvm.fma.f32(float %6807, float 0x3E54AE0BE0000000, float %6814)
  %6816 = fsub float %6809, %6810
  %6817 = fadd float %6815, %6816
  %6818 = tail call float @llvm.exp2.f32(float %6817)
  %6819 = fptosi float %6810 to i32
  %6820 = tail call float @llvm.amdgcn.ldexp.f32(float %6818, i32 %6819)
  %6821 = select i1 %6812, float 0.000000e+00, float %6820
  %6822 = select i1 %6811, float 0x7FF0000000000000, float %6821
  %6823 = tail call float @llvm.fma.f32(float %6822, float %6808, float %6822)
  %6824 = tail call float @llvm.fabs.f32(float %6822) #3
  %6825 = fcmp oeq float %6824, 0x7FF0000000000000
  %6826 = select i1 %6825, float %6822, float %6823
  %6827 = tail call float @llvm.fabs.f32(float %6826)
  %6828 = fcmp oeq float %6682, 0x7FF0000000000000
  %6829 = fcmp oeq float %6681, 0.000000e+00
  %6830 = select i1 %6828, float 0x7FF0000000000000, float %6827
  %6831 = select i1 %6829, float 0.000000e+00, float %6830
  %6832 = fcmp uno float %6681, 0.000000e+00
  %6833 = select i1 %6832, float 0x7FF8000000000000, float %6831
  %6834 = fadd contract float %6538, -1.000000e+00
  %6835 = tail call float @llvm.fabs.f32(float %6834)
  %6836 = tail call float @llvm.amdgcn.frexp.mant.f32(float %6835)
  %6837 = fcmp olt float %6836, 0x3FE5555560000000
  %6838 = zext i1 %6837 to i32
  %6839 = tail call float @llvm.amdgcn.ldexp.f32(float %6836, i32 %6838)
  %6840 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %6835)
  %6841 = sub nsw i32 %6840, %6838
  %6842 = fadd float %6839, -1.000000e+00
  %6843 = fadd float %6839, 1.000000e+00
  %6844 = fadd float %6843, -1.000000e+00
  %6845 = fsub float %6839, %6844
  %6846 = tail call float @llvm.amdgcn.rcp.f32(float %6843)
  %6847 = fmul float %6842, %6846
  %6848 = fmul float %6843, %6847
  %6849 = fneg float %6848
  %6850 = tail call float @llvm.fma.f32(float %6847, float %6843, float %6849)
  %6851 = tail call float @llvm.fma.f32(float %6847, float %6845, float %6850)
  %6852 = fadd float %6848, %6851
  %6853 = fsub float %6852, %6848
  %6854 = fsub float %6851, %6853
  %6855 = fsub float %6842, %6852
  %6856 = fsub float %6842, %6855
  %6857 = fsub float %6856, %6852
  %6858 = fsub float %6857, %6854
  %6859 = fadd float %6855, %6858
  %6860 = fmul float %6846, %6859
  %6861 = fadd float %6847, %6860
  %6862 = fsub float %6861, %6847
  %6863 = fsub float %6860, %6862
  %6864 = fmul float %6861, %6861
  %6865 = fneg float %6864
  %6866 = tail call float @llvm.fma.f32(float %6861, float %6861, float %6865)
  %6867 = fmul float %6863, 2.000000e+00
  %6868 = tail call float @llvm.fma.f32(float %6861, float %6867, float %6866)
  %6869 = fadd float %6864, %6868
  %6870 = fsub float %6869, %6864
  %6871 = fsub float %6868, %6870
  %6872 = tail call float @llvm.fmuladd.f32(float %6869, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %6873 = tail call float @llvm.fmuladd.f32(float %6869, float %6872, float 0x3FD999BDE0000000)
  %6874 = sitofp i32 %6841 to float
  %6875 = fmul float %6874, 0x3FE62E4300000000
  %6876 = fneg float %6875
  %6877 = tail call float @llvm.fma.f32(float %6874, float 0x3FE62E4300000000, float %6876)
  %6878 = tail call float @llvm.fma.f32(float %6874, float 0xBE205C6100000000, float %6877)
  %6879 = fadd float %6875, %6878
  %6880 = fsub float %6879, %6875
  %6881 = fsub float %6878, %6880
  %6882 = tail call float @llvm.amdgcn.ldexp.f32(float %6861, i32 1)
  %6883 = fmul float %6861, %6869
  %6884 = fneg float %6883
  %6885 = tail call float @llvm.fma.f32(float %6869, float %6861, float %6884)
  %6886 = tail call float @llvm.fma.f32(float %6869, float %6863, float %6885)
  %6887 = tail call float @llvm.fma.f32(float %6871, float %6861, float %6886)
  %6888 = fadd float %6883, %6887
  %6889 = fsub float %6888, %6883
  %6890 = fsub float %6887, %6889
  %6891 = fmul float %6869, %6873
  %6892 = fneg float %6891
  %6893 = tail call float @llvm.fma.f32(float %6869, float %6873, float %6892)
  %6894 = tail call float @llvm.fma.f32(float %6871, float %6873, float %6893)
  %6895 = fadd float %6891, %6894
  %6896 = fsub float %6895, %6891
  %6897 = fsub float %6894, %6896
  %6898 = fadd float %6895, 0x3FE5555540000000
  %6899 = fadd float %6898, 0xBFE5555540000000
  %6900 = fsub float %6895, %6899
  %6901 = fadd float %6897, 0x3E2E720200000000
  %6902 = fadd float %6901, %6900
  %6903 = fadd float %6898, %6902
  %6904 = fsub float %6903, %6898
  %6905 = fsub float %6902, %6904
  %6906 = fmul float %6888, %6903
  %6907 = fneg float %6906
  %6908 = tail call float @llvm.fma.f32(float %6888, float %6903, float %6907)
  %6909 = tail call float @llvm.fma.f32(float %6888, float %6905, float %6908)
  %6910 = tail call float @llvm.fma.f32(float %6890, float %6903, float %6909)
  %6911 = tail call float @llvm.amdgcn.ldexp.f32(float %6863, i32 1)
  %6912 = fadd float %6906, %6910
  %6913 = fsub float %6912, %6906
  %6914 = fsub float %6910, %6913
  %6915 = fadd float %6882, %6912
  %6916 = fsub float %6915, %6882
  %6917 = fsub float %6912, %6916
  %6918 = fadd float %6911, %6914
  %6919 = fadd float %6918, %6917
  %6920 = fadd float %6915, %6919
  %6921 = fsub float %6920, %6915
  %6922 = fsub float %6919, %6921
  %6923 = fadd float %6879, %6920
  %6924 = fsub float %6923, %6879
  %6925 = fsub float %6923, %6924
  %6926 = fsub float %6879, %6925
  %6927 = fsub float %6920, %6924
  %6928 = fadd float %6927, %6926
  %6929 = fadd float %6881, %6922
  %6930 = fsub float %6929, %6881
  %6931 = fsub float %6929, %6930
  %6932 = fsub float %6881, %6931
  %6933 = fsub float %6922, %6930
  %6934 = fadd float %6933, %6932
  %6935 = fadd float %6929, %6928
  %6936 = fadd float %6923, %6935
  %6937 = fsub float %6936, %6923
  %6938 = fsub float %6935, %6937
  %6939 = fadd float %6934, %6938
  %6940 = fadd float %6936, %6939
  %6941 = fsub float %6940, %6936
  %6942 = fsub float %6939, %6941
  %6943 = fmul float %6940, 2.000000e+00
  %6944 = fneg float %6943
  %6945 = tail call float @llvm.fma.f32(float %6940, float 2.000000e+00, float %6944)
  %6946 = fmul float %6940, 0.000000e+00
  %6947 = tail call float @llvm.fma.f32(float %6942, float 2.000000e+00, float %6946)
  %6948 = fadd float %6945, %6947
  %6949 = fadd float %6943, %6948
  %6950 = fsub float %6949, %6943
  %6951 = fsub float %6948, %6950
  %6952 = tail call float @llvm.fabs.f32(float %6943) #3
  %6953 = fcmp oeq float %6952, 0x7FF0000000000000
  %6954 = select i1 %6953, float %6943, float %6949
  %6955 = tail call float @llvm.fabs.f32(float %6954) #3
  %6956 = fcmp oeq float %6955, 0x7FF0000000000000
  %6957 = select i1 %6956, float 0.000000e+00, float %6951
  %6958 = fcmp oeq float %6954, 0x40562E4300000000
  %6959 = select i1 %6958, float 0x3EE0000000000000, float 0.000000e+00
  %6960 = fsub float %6954, %6959
  %6961 = fadd float %6959, %6957
  %6962 = fmul float %6960, 0x3FF7154760000000
  %6963 = tail call float @llvm.rint.f32(float %6962)
  %6964 = fcmp ogt float %6960, 0x40562E4300000000
  %6965 = fcmp olt float %6960, 0xC059D1DA00000000
  %6966 = fneg float %6962
  %6967 = tail call float @llvm.fma.f32(float %6960, float 0x3FF7154760000000, float %6966)
  %6968 = tail call float @llvm.fma.f32(float %6960, float 0x3E54AE0BE0000000, float %6967)
  %6969 = fsub float %6962, %6963
  %6970 = fadd float %6968, %6969
  %6971 = tail call float @llvm.exp2.f32(float %6970)
  %6972 = fptosi float %6963 to i32
  %6973 = tail call float @llvm.amdgcn.ldexp.f32(float %6971, i32 %6972)
  %6974 = select i1 %6965, float 0.000000e+00, float %6973
  %6975 = select i1 %6964, float 0x7FF0000000000000, float %6974
  %6976 = tail call float @llvm.fma.f32(float %6975, float %6961, float %6975)
  %6977 = tail call float @llvm.fabs.f32(float %6975) #3
  %6978 = fcmp oeq float %6977, 0x7FF0000000000000
  %6979 = select i1 %6978, float %6975, float %6976
  %6980 = tail call float @llvm.fabs.f32(float %6979)
  %6981 = fcmp oeq float %6835, 0x7FF0000000000000
  %6982 = fcmp oeq float %6834, 0.000000e+00
  %6983 = select i1 %6981, float 0x7FF0000000000000, float %6980
  %6984 = select i1 %6982, float 0.000000e+00, float %6983
  %6985 = fcmp uno float %6834, 0.000000e+00
  %6986 = select i1 %6985, float 0x7FF8000000000000, float %6984
  %6987 = fadd contract float %6986, %6833
  %6988 = fadd contract float %6987, 0.000000e+00
  br label %6989

6989:                                             ; preds = %7276, %6656
  %6990 = phi i1 [ true, %6656 ], [ false, %7276 ]
  %6991 = phi i32 [ 0, %6656 ], [ 1, %7276 ]
  %6992 = phi float [ %6988, %6656 ], [ %7457, %7276 ]
  %6993 = zext i32 %6991 to i64
  %6994 = getelementptr inbounds float, float addrspace(1)* %0, i64 %6993
  %6995 = load float, float addrspace(1)* %6994, align 4, !tbaa !4
  %6996 = fadd contract float %6995, -1.000000e+00
  %6997 = fmul contract float %6996, 2.500000e-01
  %6998 = fadd contract float %6997, 1.000000e+00
  %6999 = add nuw nsw i32 %6991, 1
  %7000 = zext i32 %6999 to i64
  %7001 = getelementptr inbounds float, float addrspace(1)* %0, i64 %7000
  %7002 = load float, float addrspace(1)* %7001, align 4, !tbaa !4
  %7003 = fadd contract float %7002, -1.000000e+00
  %7004 = fmul contract float %7003, 2.500000e-01
  %7005 = fadd contract float %7004, 1.000000e+00
  %7006 = fadd contract float %6998, -1.000000e+00
  %7007 = tail call float @llvm.fabs.f32(float %7006)
  %7008 = tail call float @llvm.amdgcn.frexp.mant.f32(float %7007)
  %7009 = fcmp olt float %7008, 0x3FE5555560000000
  %7010 = zext i1 %7009 to i32
  %7011 = tail call float @llvm.amdgcn.ldexp.f32(float %7008, i32 %7010)
  %7012 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %7007)
  %7013 = sub nsw i32 %7012, %7010
  %7014 = fadd float %7011, -1.000000e+00
  %7015 = fadd float %7011, 1.000000e+00
  %7016 = fadd float %7015, -1.000000e+00
  %7017 = fsub float %7011, %7016
  %7018 = tail call float @llvm.amdgcn.rcp.f32(float %7015)
  %7019 = fmul float %7014, %7018
  %7020 = fmul float %7015, %7019
  %7021 = fneg float %7020
  %7022 = tail call float @llvm.fma.f32(float %7019, float %7015, float %7021)
  %7023 = tail call float @llvm.fma.f32(float %7019, float %7017, float %7022)
  %7024 = fadd float %7020, %7023
  %7025 = fsub float %7024, %7020
  %7026 = fsub float %7023, %7025
  %7027 = fsub float %7014, %7024
  %7028 = fsub float %7014, %7027
  %7029 = fsub float %7028, %7024
  %7030 = fsub float %7029, %7026
  %7031 = fadd float %7027, %7030
  %7032 = fmul float %7018, %7031
  %7033 = fadd float %7019, %7032
  %7034 = fsub float %7033, %7019
  %7035 = fsub float %7032, %7034
  %7036 = fmul float %7033, %7033
  %7037 = fneg float %7036
  %7038 = tail call float @llvm.fma.f32(float %7033, float %7033, float %7037)
  %7039 = fmul float %7035, 2.000000e+00
  %7040 = tail call float @llvm.fma.f32(float %7033, float %7039, float %7038)
  %7041 = fadd float %7036, %7040
  %7042 = fsub float %7041, %7036
  %7043 = fsub float %7040, %7042
  %7044 = tail call float @llvm.fmuladd.f32(float %7041, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %7045 = tail call float @llvm.fmuladd.f32(float %7041, float %7044, float 0x3FD999BDE0000000)
  %7046 = sitofp i32 %7013 to float
  %7047 = fmul float %7046, 0x3FE62E4300000000
  %7048 = fneg float %7047
  %7049 = tail call float @llvm.fma.f32(float %7046, float 0x3FE62E4300000000, float %7048)
  %7050 = tail call float @llvm.fma.f32(float %7046, float 0xBE205C6100000000, float %7049)
  %7051 = fadd float %7047, %7050
  %7052 = fsub float %7051, %7047
  %7053 = fsub float %7050, %7052
  %7054 = tail call float @llvm.amdgcn.ldexp.f32(float %7033, i32 1)
  %7055 = fmul float %7033, %7041
  %7056 = fneg float %7055
  %7057 = tail call float @llvm.fma.f32(float %7041, float %7033, float %7056)
  %7058 = tail call float @llvm.fma.f32(float %7041, float %7035, float %7057)
  %7059 = tail call float @llvm.fma.f32(float %7043, float %7033, float %7058)
  %7060 = fadd float %7055, %7059
  %7061 = fsub float %7060, %7055
  %7062 = fsub float %7059, %7061
  %7063 = fmul float %7041, %7045
  %7064 = fneg float %7063
  %7065 = tail call float @llvm.fma.f32(float %7041, float %7045, float %7064)
  %7066 = tail call float @llvm.fma.f32(float %7043, float %7045, float %7065)
  %7067 = fadd float %7063, %7066
  %7068 = fsub float %7067, %7063
  %7069 = fsub float %7066, %7068
  %7070 = fadd float %7067, 0x3FE5555540000000
  %7071 = fadd float %7070, 0xBFE5555540000000
  %7072 = fsub float %7067, %7071
  %7073 = fadd float %7069, 0x3E2E720200000000
  %7074 = fadd float %7073, %7072
  %7075 = fadd float %7070, %7074
  %7076 = fsub float %7075, %7070
  %7077 = fsub float %7074, %7076
  %7078 = fmul float %7060, %7075
  %7079 = fneg float %7078
  %7080 = tail call float @llvm.fma.f32(float %7060, float %7075, float %7079)
  %7081 = tail call float @llvm.fma.f32(float %7060, float %7077, float %7080)
  %7082 = tail call float @llvm.fma.f32(float %7062, float %7075, float %7081)
  %7083 = tail call float @llvm.amdgcn.ldexp.f32(float %7035, i32 1)
  %7084 = fadd float %7078, %7082
  %7085 = fsub float %7084, %7078
  %7086 = fsub float %7082, %7085
  %7087 = fadd float %7054, %7084
  %7088 = fsub float %7087, %7054
  %7089 = fsub float %7084, %7088
  %7090 = fadd float %7083, %7086
  %7091 = fadd float %7090, %7089
  %7092 = fadd float %7087, %7091
  %7093 = fsub float %7092, %7087
  %7094 = fsub float %7091, %7093
  %7095 = fadd float %7051, %7092
  %7096 = fsub float %7095, %7051
  %7097 = fsub float %7095, %7096
  %7098 = fsub float %7051, %7097
  %7099 = fsub float %7092, %7096
  %7100 = fadd float %7099, %7098
  %7101 = fadd float %7053, %7094
  %7102 = fsub float %7101, %7053
  %7103 = fsub float %7101, %7102
  %7104 = fsub float %7053, %7103
  %7105 = fsub float %7094, %7102
  %7106 = fadd float %7105, %7104
  %7107 = fadd float %7101, %7100
  %7108 = fadd float %7095, %7107
  %7109 = fsub float %7108, %7095
  %7110 = fsub float %7107, %7109
  %7111 = fadd float %7106, %7110
  %7112 = fadd float %7108, %7111
  %7113 = fsub float %7112, %7108
  %7114 = fsub float %7111, %7113
  %7115 = fmul float %7112, 2.000000e+00
  %7116 = fneg float %7115
  %7117 = tail call float @llvm.fma.f32(float %7112, float 2.000000e+00, float %7116)
  %7118 = fmul float %7112, 0.000000e+00
  %7119 = tail call float @llvm.fma.f32(float %7114, float 2.000000e+00, float %7118)
  %7120 = fadd float %7117, %7119
  %7121 = fadd float %7115, %7120
  %7122 = fsub float %7121, %7115
  %7123 = fsub float %7120, %7122
  %7124 = tail call float @llvm.fabs.f32(float %7115) #3
  %7125 = fcmp oeq float %7124, 0x7FF0000000000000
  %7126 = select i1 %7125, float %7115, float %7121
  %7127 = tail call float @llvm.fabs.f32(float %7126) #3
  %7128 = fcmp oeq float %7127, 0x7FF0000000000000
  %7129 = select i1 %7128, float 0.000000e+00, float %7123
  %7130 = fcmp oeq float %7126, 0x40562E4300000000
  %7131 = select i1 %7130, float 0x3EE0000000000000, float 0.000000e+00
  %7132 = fsub float %7126, %7131
  %7133 = fadd float %7131, %7129
  %7134 = fmul float %7132, 0x3FF7154760000000
  %7135 = tail call float @llvm.rint.f32(float %7134)
  %7136 = fcmp ogt float %7132, 0x40562E4300000000
  %7137 = fcmp olt float %7132, 0xC059D1DA00000000
  %7138 = fneg float %7134
  %7139 = tail call float @llvm.fma.f32(float %7132, float 0x3FF7154760000000, float %7138)
  %7140 = tail call float @llvm.fma.f32(float %7132, float 0x3E54AE0BE0000000, float %7139)
  %7141 = fsub float %7134, %7135
  %7142 = fadd float %7140, %7141
  %7143 = tail call float @llvm.exp2.f32(float %7142)
  %7144 = fptosi float %7135 to i32
  %7145 = tail call float @llvm.amdgcn.ldexp.f32(float %7143, i32 %7144)
  %7146 = select i1 %7137, float 0.000000e+00, float %7145
  %7147 = select i1 %7136, float 0x7FF0000000000000, float %7146
  %7148 = tail call float @llvm.fma.f32(float %7147, float %7133, float %7147)
  %7149 = tail call float @llvm.fabs.f32(float %7147) #3
  %7150 = fcmp oeq float %7149, 0x7FF0000000000000
  %7151 = select i1 %7150, float %7147, float %7148
  %7152 = tail call float @llvm.fabs.f32(float %7151)
  %7153 = fcmp oeq float %7007, 0x7FF0000000000000
  %7154 = fcmp oeq float %7006, 0.000000e+00
  %7155 = select i1 %7153, float 0x7FF0000000000000, float %7152
  %7156 = select i1 %7154, float 0.000000e+00, float %7155
  %7157 = fcmp uno float %7006, 0.000000e+00
  %7158 = select i1 %7157, float 0x7FF8000000000000, float %7156
  %7159 = fmul contract float %7005, 0x400921CAC0000000
  %7160 = tail call float @llvm.fabs.f32(float %7159)
  %7161 = fcmp olt float %7160, 1.310720e+05
  br i1 %7161, label %7268, label %7162

7162:                                             ; preds = %6989
  %7163 = bitcast float %7160 to i32
  %7164 = lshr i32 %7163, 23
  %7165 = and i32 %7163, 8388607
  %7166 = or i32 %7165, 8388608
  %7167 = zext i32 %7166 to i64
  %7168 = mul nuw nsw i64 %7167, 4266746795
  %7169 = trunc i64 %7168 to i32
  %7170 = lshr i64 %7168, 32
  %7171 = mul nuw nsw i64 %7167, 1011060801
  %7172 = add nuw nsw i64 %7170, %7171
  %7173 = trunc i64 %7172 to i32
  %7174 = lshr i64 %7172, 32
  %7175 = mul nuw nsw i64 %7167, 3680671129
  %7176 = add nuw nsw i64 %7174, %7175
  %7177 = trunc i64 %7176 to i32
  %7178 = lshr i64 %7176, 32
  %7179 = mul nuw nsw i64 %7167, 4113882560
  %7180 = add nuw nsw i64 %7178, %7179
  %7181 = trunc i64 %7180 to i32
  %7182 = lshr i64 %7180, 32
  %7183 = mul nuw nsw i64 %7167, 4230436817
  %7184 = add nuw nsw i64 %7182, %7183
  %7185 = trunc i64 %7184 to i32
  %7186 = lshr i64 %7184, 32
  %7187 = mul nuw nsw i64 %7167, 1313084713
  %7188 = add nuw nsw i64 %7186, %7187
  %7189 = trunc i64 %7188 to i32
  %7190 = lshr i64 %7188, 32
  %7191 = mul nuw nsw i64 %7167, 2734261102
  %7192 = add nuw nsw i64 %7190, %7191
  %7193 = trunc i64 %7192 to i32
  %7194 = lshr i64 %7192, 32
  %7195 = trunc i64 %7194 to i32
  %7196 = add nsw i32 %7164, -120
  %7197 = icmp ugt i32 %7196, 63
  %7198 = select i1 %7197, i32 %7189, i32 %7195
  %7199 = select i1 %7197, i32 %7185, i32 %7193
  %7200 = select i1 %7197, i32 %7181, i32 %7189
  %7201 = select i1 %7197, i32 %7177, i32 %7185
  %7202 = select i1 %7197, i32 %7173, i32 %7181
  %7203 = select i1 %7197, i32 %7169, i32 %7177
  %7204 = select i1 %7197, i32 -64, i32 0
  %7205 = add nsw i32 %7204, %7196
  %7206 = icmp ugt i32 %7205, 31
  %7207 = select i1 %7206, i32 %7199, i32 %7198
  %7208 = select i1 %7206, i32 %7200, i32 %7199
  %7209 = select i1 %7206, i32 %7201, i32 %7200
  %7210 = select i1 %7206, i32 %7202, i32 %7201
  %7211 = select i1 %7206, i32 %7203, i32 %7202
  %7212 = select i1 %7206, i32 -32, i32 0
  %7213 = add nsw i32 %7212, %7205
  %7214 = icmp ugt i32 %7213, 31
  %7215 = select i1 %7214, i32 %7208, i32 %7207
  %7216 = select i1 %7214, i32 %7209, i32 %7208
  %7217 = select i1 %7214, i32 %7210, i32 %7209
  %7218 = select i1 %7214, i32 %7211, i32 %7210
  %7219 = select i1 %7214, i32 -32, i32 0
  %7220 = add nsw i32 %7219, %7213
  %7221 = icmp eq i32 %7220, 0
  %7222 = sub nsw i32 32, %7220
  %7223 = tail call i32 @llvm.fshr.i32(i32 %7215, i32 %7216, i32 %7222)
  %7224 = tail call i32 @llvm.fshr.i32(i32 %7216, i32 %7217, i32 %7222)
  %7225 = tail call i32 @llvm.fshr.i32(i32 %7217, i32 %7218, i32 %7222)
  %7226 = select i1 %7221, i32 %7215, i32 %7223
  %7227 = select i1 %7221, i32 %7216, i32 %7224
  %7228 = select i1 %7221, i32 %7217, i32 %7225
  %7229 = lshr i32 %7226, 29
  %7230 = tail call i32 @llvm.fshl.i32(i32 %7226, i32 %7227, i32 2)
  %7231 = tail call i32 @llvm.fshl.i32(i32 %7227, i32 %7228, i32 2)
  %7232 = tail call i32 @llvm.fshl.i32(i32 %7228, i32 %7218, i32 2)
  %7233 = and i32 %7229, 1
  %7234 = sub nsw i32 0, %7233
  %7235 = shl i32 %7229, 31
  %7236 = xor i32 %7230, %7234
  %7237 = xor i32 %7231, %7234
  %7238 = xor i32 %7232, %7234
  %7239 = tail call i32 @llvm.ctlz.i32(i32 %7236, i1 false), !range !8
  %7240 = sub nsw i32 31, %7239
  %7241 = tail call i32 @llvm.fshr.i32(i32 %7236, i32 %7237, i32 %7240)
  %7242 = tail call i32 @llvm.fshr.i32(i32 %7237, i32 %7238, i32 %7240)
  %7243 = shl nuw nsw i32 %7239, 23
  %7244 = sub nuw nsw i32 1056964608, %7243
  %7245 = lshr i32 %7241, 9
  %7246 = or i32 %7245, %7244
  %7247 = or i32 %7246, %7235
  %7248 = bitcast i32 %7247 to float
  %7249 = tail call i32 @llvm.fshl.i32(i32 %7241, i32 %7242, i32 23)
  %7250 = tail call i32 @llvm.ctlz.i32(i32 %7249, i1 false), !range !8
  %7251 = fmul float %7248, 0x3FF921FB40000000
  %7252 = add nuw nsw i32 %7250, %7239
  %7253 = shl nuw nsw i32 %7252, 23
  %7254 = sub nuw nsw i32 855638016, %7253
  %7255 = sub nsw i32 31, %7250
  %7256 = tail call i32 @llvm.fshr.i32(i32 %7249, i32 %7242, i32 %7255)
  %7257 = lshr i32 %7256, 9
  %7258 = or i32 %7254, %7257
  %7259 = or i32 %7258, %7235
  %7260 = bitcast i32 %7259 to float
  %7261 = fneg float %7251
  %7262 = tail call float @llvm.fma.f32(float %7248, float 0x3FF921FB40000000, float %7261)
  %7263 = tail call float @llvm.fma.f32(float %7248, float 0x3E74442D00000000, float %7262)
  %7264 = tail call float @llvm.fma.f32(float %7260, float 0x3FF921FB40000000, float %7263)
  %7265 = fadd float %7251, %7264
  %7266 = lshr i32 %7226, 30
  %7267 = add nuw nsw i32 %7233, %7266
  br label %7276

7268:                                             ; preds = %6989
  %7269 = fmul float %7160, 0x3FE45F3060000000
  %7270 = tail call float @llvm.rint.f32(float %7269)
  %7271 = tail call float @llvm.fma.f32(float %7270, float 0xBFF921FB40000000, float %7160)
  %7272 = tail call float @llvm.fma.f32(float %7270, float 0xBE74442D00000000, float %7271)
  %7273 = tail call float @llvm.fma.f32(float %7270, float 0xBCF8469880000000, float %7272)
  %7274 = fptosi float %7270 to i32
  %7275 = bitcast float %7160 to i32
  br label %7276

7276:                                             ; preds = %7268, %7162
  %7277 = phi i32 [ %7275, %7268 ], [ %7163, %7162 ]
  %7278 = phi float [ %7273, %7268 ], [ %7265, %7162 ]
  %7279 = phi i32 [ %7274, %7268 ], [ %7267, %7162 ]
  %7280 = fmul float %7278, %7278
  %7281 = tail call float @llvm.fmuladd.f32(float %7280, float 0xBF29833040000000, float 0x3F81103880000000)
  %7282 = tail call float @llvm.fmuladd.f32(float %7280, float %7281, float 0xBFC55553A0000000)
  %7283 = fmul float %7280, %7282
  %7284 = tail call float @llvm.fmuladd.f32(float %7278, float %7283, float %7278)
  %7285 = tail call float @llvm.fmuladd.f32(float %7280, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %7286 = tail call float @llvm.fmuladd.f32(float %7280, float %7285, float 0x3FA5557EE0000000)
  %7287 = tail call float @llvm.fmuladd.f32(float %7280, float %7286, float 0xBFE0000080000000)
  %7288 = tail call float @llvm.fmuladd.f32(float %7280, float %7287, float 1.000000e+00)
  %7289 = and i32 %7279, 1
  %7290 = icmp eq i32 %7289, 0
  %7291 = select i1 %7290, float %7284, float %7288
  %7292 = bitcast float %7291 to i32
  %7293 = shl i32 %7279, 30
  %7294 = and i32 %7293, -2147483648
  %7295 = bitcast float %7159 to i32
  %7296 = xor i32 %7277, %7295
  %7297 = xor i32 %7296, %7294
  %7298 = xor i32 %7297, %7292
  %7299 = bitcast i32 %7298 to float
  %7300 = tail call i1 @llvm.amdgcn.class.f32(float %7160, i32 504)
  %7301 = select i1 %7300, float %7299, float 0x7FF8000000000000
  %7302 = tail call float @llvm.fabs.f32(float %7301)
  %7303 = tail call float @llvm.amdgcn.frexp.mant.f32(float %7302)
  %7304 = fcmp olt float %7303, 0x3FE5555560000000
  %7305 = zext i1 %7304 to i32
  %7306 = tail call float @llvm.amdgcn.ldexp.f32(float %7303, i32 %7305)
  %7307 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %7302)
  %7308 = sub nsw i32 %7307, %7305
  %7309 = fadd float %7306, -1.000000e+00
  %7310 = fadd float %7306, 1.000000e+00
  %7311 = fadd float %7310, -1.000000e+00
  %7312 = fsub float %7306, %7311
  %7313 = tail call float @llvm.amdgcn.rcp.f32(float %7310)
  %7314 = fmul float %7309, %7313
  %7315 = fmul float %7310, %7314
  %7316 = fneg float %7315
  %7317 = tail call float @llvm.fma.f32(float %7314, float %7310, float %7316)
  %7318 = tail call float @llvm.fma.f32(float %7314, float %7312, float %7317)
  %7319 = fadd float %7315, %7318
  %7320 = fsub float %7319, %7315
  %7321 = fsub float %7318, %7320
  %7322 = fsub float %7309, %7319
  %7323 = fsub float %7309, %7322
  %7324 = fsub float %7323, %7319
  %7325 = fsub float %7324, %7321
  %7326 = fadd float %7322, %7325
  %7327 = fmul float %7313, %7326
  %7328 = fadd float %7314, %7327
  %7329 = fsub float %7328, %7314
  %7330 = fsub float %7327, %7329
  %7331 = fmul float %7328, %7328
  %7332 = fneg float %7331
  %7333 = tail call float @llvm.fma.f32(float %7328, float %7328, float %7332)
  %7334 = fmul float %7330, 2.000000e+00
  %7335 = tail call float @llvm.fma.f32(float %7328, float %7334, float %7333)
  %7336 = fadd float %7331, %7335
  %7337 = fsub float %7336, %7331
  %7338 = fsub float %7335, %7337
  %7339 = tail call float @llvm.fmuladd.f32(float %7336, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %7340 = tail call float @llvm.fmuladd.f32(float %7336, float %7339, float 0x3FD999BDE0000000)
  %7341 = sitofp i32 %7308 to float
  %7342 = fmul float %7341, 0x3FE62E4300000000
  %7343 = fneg float %7342
  %7344 = tail call float @llvm.fma.f32(float %7341, float 0x3FE62E4300000000, float %7343)
  %7345 = tail call float @llvm.fma.f32(float %7341, float 0xBE205C6100000000, float %7344)
  %7346 = fadd float %7342, %7345
  %7347 = fsub float %7346, %7342
  %7348 = fsub float %7345, %7347
  %7349 = tail call float @llvm.amdgcn.ldexp.f32(float %7328, i32 1)
  %7350 = fmul float %7328, %7336
  %7351 = fneg float %7350
  %7352 = tail call float @llvm.fma.f32(float %7336, float %7328, float %7351)
  %7353 = tail call float @llvm.fma.f32(float %7336, float %7330, float %7352)
  %7354 = tail call float @llvm.fma.f32(float %7338, float %7328, float %7353)
  %7355 = fadd float %7350, %7354
  %7356 = fsub float %7355, %7350
  %7357 = fsub float %7354, %7356
  %7358 = fmul float %7336, %7340
  %7359 = fneg float %7358
  %7360 = tail call float @llvm.fma.f32(float %7336, float %7340, float %7359)
  %7361 = tail call float @llvm.fma.f32(float %7338, float %7340, float %7360)
  %7362 = fadd float %7358, %7361
  %7363 = fsub float %7362, %7358
  %7364 = fsub float %7361, %7363
  %7365 = fadd float %7362, 0x3FE5555540000000
  %7366 = fadd float %7365, 0xBFE5555540000000
  %7367 = fsub float %7362, %7366
  %7368 = fadd float %7364, 0x3E2E720200000000
  %7369 = fadd float %7368, %7367
  %7370 = fadd float %7365, %7369
  %7371 = fsub float %7370, %7365
  %7372 = fsub float %7369, %7371
  %7373 = fmul float %7355, %7370
  %7374 = fneg float %7373
  %7375 = tail call float @llvm.fma.f32(float %7355, float %7370, float %7374)
  %7376 = tail call float @llvm.fma.f32(float %7355, float %7372, float %7375)
  %7377 = tail call float @llvm.fma.f32(float %7357, float %7370, float %7376)
  %7378 = tail call float @llvm.amdgcn.ldexp.f32(float %7330, i32 1)
  %7379 = fadd float %7373, %7377
  %7380 = fsub float %7379, %7373
  %7381 = fsub float %7377, %7380
  %7382 = fadd float %7349, %7379
  %7383 = fsub float %7382, %7349
  %7384 = fsub float %7379, %7383
  %7385 = fadd float %7378, %7381
  %7386 = fadd float %7385, %7384
  %7387 = fadd float %7382, %7386
  %7388 = fsub float %7387, %7382
  %7389 = fsub float %7386, %7388
  %7390 = fadd float %7346, %7387
  %7391 = fsub float %7390, %7346
  %7392 = fsub float %7390, %7391
  %7393 = fsub float %7346, %7392
  %7394 = fsub float %7387, %7391
  %7395 = fadd float %7394, %7393
  %7396 = fadd float %7348, %7389
  %7397 = fsub float %7396, %7348
  %7398 = fsub float %7396, %7397
  %7399 = fsub float %7348, %7398
  %7400 = fsub float %7389, %7397
  %7401 = fadd float %7400, %7399
  %7402 = fadd float %7396, %7395
  %7403 = fadd float %7390, %7402
  %7404 = fsub float %7403, %7390
  %7405 = fsub float %7402, %7404
  %7406 = fadd float %7401, %7405
  %7407 = fadd float %7403, %7406
  %7408 = fsub float %7407, %7403
  %7409 = fsub float %7406, %7408
  %7410 = fmul float %7407, 2.000000e+00
  %7411 = fneg float %7410
  %7412 = tail call float @llvm.fma.f32(float %7407, float 2.000000e+00, float %7411)
  %7413 = fmul float %7407, 0.000000e+00
  %7414 = tail call float @llvm.fma.f32(float %7409, float 2.000000e+00, float %7413)
  %7415 = fadd float %7412, %7414
  %7416 = fadd float %7410, %7415
  %7417 = fsub float %7416, %7410
  %7418 = fsub float %7415, %7417
  %7419 = tail call float @llvm.fabs.f32(float %7410) #3
  %7420 = fcmp oeq float %7419, 0x7FF0000000000000
  %7421 = select i1 %7420, float %7410, float %7416
  %7422 = tail call float @llvm.fabs.f32(float %7421) #3
  %7423 = fcmp oeq float %7422, 0x7FF0000000000000
  %7424 = select i1 %7423, float 0.000000e+00, float %7418
  %7425 = fcmp oeq float %7421, 0x40562E4300000000
  %7426 = select i1 %7425, float 0x3EE0000000000000, float 0.000000e+00
  %7427 = fsub float %7421, %7426
  %7428 = fadd float %7426, %7424
  %7429 = fmul float %7427, 0x3FF7154760000000
  %7430 = tail call float @llvm.rint.f32(float %7429)
  %7431 = fcmp ogt float %7427, 0x40562E4300000000
  %7432 = fcmp olt float %7427, 0xC059D1DA00000000
  %7433 = fneg float %7429
  %7434 = tail call float @llvm.fma.f32(float %7427, float 0x3FF7154760000000, float %7433)
  %7435 = tail call float @llvm.fma.f32(float %7427, float 0x3E54AE0BE0000000, float %7434)
  %7436 = fsub float %7429, %7430
  %7437 = fadd float %7435, %7436
  %7438 = tail call float @llvm.exp2.f32(float %7437)
  %7439 = fptosi float %7430 to i32
  %7440 = tail call float @llvm.amdgcn.ldexp.f32(float %7438, i32 %7439)
  %7441 = select i1 %7432, float 0.000000e+00, float %7440
  %7442 = select i1 %7431, float 0x7FF0000000000000, float %7441
  %7443 = tail call float @llvm.fma.f32(float %7442, float %7428, float %7442)
  %7444 = tail call float @llvm.fabs.f32(float %7442) #3
  %7445 = fcmp oeq float %7444, 0x7FF0000000000000
  %7446 = select i1 %7445, float %7442, float %7443
  %7447 = tail call float @llvm.fabs.f32(float %7446)
  %7448 = fcmp oeq float %7302, 0x7FF0000000000000
  %7449 = fcmp oeq float %7301, 0.000000e+00
  %7450 = fcmp uno float %7301, 0.000000e+00
  %7451 = fmul contract float %7447, 1.000000e+01
  %7452 = fadd contract float %7451, 1.000000e+00
  %7453 = select i1 %7448, float 0x7FF0000000000000, float %7452
  %7454 = select i1 %7449, float 1.000000e+00, float %7453
  %7455 = select i1 %7450, float 0x7FF8000000000000, float %7454
  %7456 = fmul contract float %7158, %7455
  %7457 = fadd contract float %6992, %7456
  br i1 %6990, label %6989, label %7458, !llvm.loop !9

7458:                                             ; preds = %7276
  %7459 = fcmp contract olt float %6529, %7457
  br i1 %7459, label %7460, label %7462

7460:                                             ; preds = %7458
  store float %5599, float addrspace(1)* %0, align 4, !tbaa !4
  %7461 = getelementptr inbounds float, float addrspace(1)* %0, i64 1
  store float %5602, float addrspace(1)* %7461, align 4, !tbaa !4
  store float %5605, float addrspace(1)* %3, align 4, !tbaa !4
  br label %7462

7462:                                             ; preds = %7460, %7458
  %7463 = getelementptr inbounds float, float addrspace(1)* %1, i64 12
  %7464 = load float, float addrspace(1)* %7463, align 4, !tbaa !4
  %7465 = insertelement <3 x float> poison, float %7464, i64 0
  %7466 = getelementptr inbounds float, float addrspace(1)* %1, i64 13
  %7467 = load float, float addrspace(1)* %7466, align 4, !tbaa !4
  %7468 = insertelement <3 x float> %7465, float %7467, i64 1
  %7469 = getelementptr inbounds float, float addrspace(1)* %1, i64 14
  %7470 = load float, float addrspace(1)* %7469, align 4, !tbaa !4
  %7471 = insertelement <3 x float> %7468, float %7470, i64 2
  %7472 = fadd contract float %7464, -1.000000e+00
  %7473 = fmul contract float %7472, 2.500000e-01
  %7474 = fadd contract float %7473, 1.000000e+00
  %7475 = fadd contract float %7470, -1.000000e+00
  %7476 = fmul contract float %7475, 2.500000e-01
  %7477 = fadd contract float %7476, 1.000000e+00
  %7478 = fmul contract float %7474, 0x400921CAC0000000
  %7479 = tail call float @llvm.fabs.f32(float %7478)
  %7480 = fcmp olt float %7479, 1.310720e+05
  br i1 %7480, label %7587, label %7481

7481:                                             ; preds = %7462
  %7482 = bitcast float %7479 to i32
  %7483 = lshr i32 %7482, 23
  %7484 = and i32 %7482, 8388607
  %7485 = or i32 %7484, 8388608
  %7486 = zext i32 %7485 to i64
  %7487 = mul nuw nsw i64 %7486, 4266746795
  %7488 = trunc i64 %7487 to i32
  %7489 = lshr i64 %7487, 32
  %7490 = mul nuw nsw i64 %7486, 1011060801
  %7491 = add nuw nsw i64 %7489, %7490
  %7492 = trunc i64 %7491 to i32
  %7493 = lshr i64 %7491, 32
  %7494 = mul nuw nsw i64 %7486, 3680671129
  %7495 = add nuw nsw i64 %7493, %7494
  %7496 = trunc i64 %7495 to i32
  %7497 = lshr i64 %7495, 32
  %7498 = mul nuw nsw i64 %7486, 4113882560
  %7499 = add nuw nsw i64 %7497, %7498
  %7500 = trunc i64 %7499 to i32
  %7501 = lshr i64 %7499, 32
  %7502 = mul nuw nsw i64 %7486, 4230436817
  %7503 = add nuw nsw i64 %7501, %7502
  %7504 = trunc i64 %7503 to i32
  %7505 = lshr i64 %7503, 32
  %7506 = mul nuw nsw i64 %7486, 1313084713
  %7507 = add nuw nsw i64 %7505, %7506
  %7508 = trunc i64 %7507 to i32
  %7509 = lshr i64 %7507, 32
  %7510 = mul nuw nsw i64 %7486, 2734261102
  %7511 = add nuw nsw i64 %7509, %7510
  %7512 = trunc i64 %7511 to i32
  %7513 = lshr i64 %7511, 32
  %7514 = trunc i64 %7513 to i32
  %7515 = add nsw i32 %7483, -120
  %7516 = icmp ugt i32 %7515, 63
  %7517 = select i1 %7516, i32 %7508, i32 %7514
  %7518 = select i1 %7516, i32 %7504, i32 %7512
  %7519 = select i1 %7516, i32 %7500, i32 %7508
  %7520 = select i1 %7516, i32 %7496, i32 %7504
  %7521 = select i1 %7516, i32 %7492, i32 %7500
  %7522 = select i1 %7516, i32 %7488, i32 %7496
  %7523 = select i1 %7516, i32 -64, i32 0
  %7524 = add nsw i32 %7523, %7515
  %7525 = icmp ugt i32 %7524, 31
  %7526 = select i1 %7525, i32 %7518, i32 %7517
  %7527 = select i1 %7525, i32 %7519, i32 %7518
  %7528 = select i1 %7525, i32 %7520, i32 %7519
  %7529 = select i1 %7525, i32 %7521, i32 %7520
  %7530 = select i1 %7525, i32 %7522, i32 %7521
  %7531 = select i1 %7525, i32 -32, i32 0
  %7532 = add nsw i32 %7531, %7524
  %7533 = icmp ugt i32 %7532, 31
  %7534 = select i1 %7533, i32 %7527, i32 %7526
  %7535 = select i1 %7533, i32 %7528, i32 %7527
  %7536 = select i1 %7533, i32 %7529, i32 %7528
  %7537 = select i1 %7533, i32 %7530, i32 %7529
  %7538 = select i1 %7533, i32 -32, i32 0
  %7539 = add nsw i32 %7538, %7532
  %7540 = icmp eq i32 %7539, 0
  %7541 = sub nsw i32 32, %7539
  %7542 = tail call i32 @llvm.fshr.i32(i32 %7534, i32 %7535, i32 %7541)
  %7543 = tail call i32 @llvm.fshr.i32(i32 %7535, i32 %7536, i32 %7541)
  %7544 = tail call i32 @llvm.fshr.i32(i32 %7536, i32 %7537, i32 %7541)
  %7545 = select i1 %7540, i32 %7534, i32 %7542
  %7546 = select i1 %7540, i32 %7535, i32 %7543
  %7547 = select i1 %7540, i32 %7536, i32 %7544
  %7548 = lshr i32 %7545, 29
  %7549 = tail call i32 @llvm.fshl.i32(i32 %7545, i32 %7546, i32 2)
  %7550 = tail call i32 @llvm.fshl.i32(i32 %7546, i32 %7547, i32 2)
  %7551 = tail call i32 @llvm.fshl.i32(i32 %7547, i32 %7537, i32 2)
  %7552 = and i32 %7548, 1
  %7553 = sub nsw i32 0, %7552
  %7554 = shl i32 %7548, 31
  %7555 = xor i32 %7549, %7553
  %7556 = xor i32 %7550, %7553
  %7557 = xor i32 %7551, %7553
  %7558 = tail call i32 @llvm.ctlz.i32(i32 %7555, i1 false), !range !8
  %7559 = sub nsw i32 31, %7558
  %7560 = tail call i32 @llvm.fshr.i32(i32 %7555, i32 %7556, i32 %7559)
  %7561 = tail call i32 @llvm.fshr.i32(i32 %7556, i32 %7557, i32 %7559)
  %7562 = shl nuw nsw i32 %7558, 23
  %7563 = sub nuw nsw i32 1056964608, %7562
  %7564 = lshr i32 %7560, 9
  %7565 = or i32 %7564, %7563
  %7566 = or i32 %7565, %7554
  %7567 = bitcast i32 %7566 to float
  %7568 = tail call i32 @llvm.fshl.i32(i32 %7560, i32 %7561, i32 23)
  %7569 = tail call i32 @llvm.ctlz.i32(i32 %7568, i1 false), !range !8
  %7570 = fmul float %7567, 0x3FF921FB40000000
  %7571 = add nuw nsw i32 %7569, %7558
  %7572 = shl nuw nsw i32 %7571, 23
  %7573 = sub nuw nsw i32 855638016, %7572
  %7574 = sub nsw i32 31, %7569
  %7575 = tail call i32 @llvm.fshr.i32(i32 %7568, i32 %7561, i32 %7574)
  %7576 = lshr i32 %7575, 9
  %7577 = or i32 %7573, %7576
  %7578 = or i32 %7577, %7554
  %7579 = bitcast i32 %7578 to float
  %7580 = fneg float %7570
  %7581 = tail call float @llvm.fma.f32(float %7567, float 0x3FF921FB40000000, float %7580)
  %7582 = tail call float @llvm.fma.f32(float %7567, float 0x3E74442D00000000, float %7581)
  %7583 = tail call float @llvm.fma.f32(float %7579, float 0x3FF921FB40000000, float %7582)
  %7584 = fadd float %7570, %7583
  %7585 = lshr i32 %7545, 30
  %7586 = add nuw nsw i32 %7552, %7585
  br label %7595

7587:                                             ; preds = %7462
  %7588 = fmul float %7479, 0x3FE45F3060000000
  %7589 = tail call float @llvm.rint.f32(float %7588)
  %7590 = tail call float @llvm.fma.f32(float %7589, float 0xBFF921FB40000000, float %7479)
  %7591 = tail call float @llvm.fma.f32(float %7589, float 0xBE74442D00000000, float %7590)
  %7592 = tail call float @llvm.fma.f32(float %7589, float 0xBCF8469880000000, float %7591)
  %7593 = fptosi float %7589 to i32
  %7594 = bitcast float %7479 to i32
  br label %7595

7595:                                             ; preds = %7587, %7481
  %7596 = phi i32 [ %7594, %7587 ], [ %7482, %7481 ]
  %7597 = phi float [ %7592, %7587 ], [ %7584, %7481 ]
  %7598 = phi i32 [ %7593, %7587 ], [ %7586, %7481 ]
  %7599 = fmul float %7597, %7597
  %7600 = tail call float @llvm.fmuladd.f32(float %7599, float 0xBF29833040000000, float 0x3F81103880000000)
  %7601 = tail call float @llvm.fmuladd.f32(float %7599, float %7600, float 0xBFC55553A0000000)
  %7602 = fmul float %7599, %7601
  %7603 = tail call float @llvm.fmuladd.f32(float %7597, float %7602, float %7597)
  %7604 = tail call float @llvm.fmuladd.f32(float %7599, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %7605 = tail call float @llvm.fmuladd.f32(float %7599, float %7604, float 0x3FA5557EE0000000)
  %7606 = tail call float @llvm.fmuladd.f32(float %7599, float %7605, float 0xBFE0000080000000)
  %7607 = tail call float @llvm.fmuladd.f32(float %7599, float %7606, float 1.000000e+00)
  %7608 = and i32 %7598, 1
  %7609 = icmp eq i32 %7608, 0
  %7610 = select i1 %7609, float %7603, float %7607
  %7611 = bitcast float %7610 to i32
  %7612 = shl i32 %7598, 30
  %7613 = and i32 %7612, -2147483648
  %7614 = bitcast float %7478 to i32
  %7615 = xor i32 %7596, %7614
  %7616 = xor i32 %7615, %7613
  %7617 = xor i32 %7616, %7611
  %7618 = bitcast i32 %7617 to float
  %7619 = tail call i1 @llvm.amdgcn.class.f32(float %7479, i32 504)
  %7620 = select i1 %7619, float %7618, float 0x7FF8000000000000
  %7621 = tail call float @llvm.fabs.f32(float %7620)
  %7622 = tail call float @llvm.amdgcn.frexp.mant.f32(float %7621)
  %7623 = fcmp olt float %7622, 0x3FE5555560000000
  %7624 = zext i1 %7623 to i32
  %7625 = tail call float @llvm.amdgcn.ldexp.f32(float %7622, i32 %7624)
  %7626 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %7621)
  %7627 = sub nsw i32 %7626, %7624
  %7628 = fadd float %7625, -1.000000e+00
  %7629 = fadd float %7625, 1.000000e+00
  %7630 = fadd float %7629, -1.000000e+00
  %7631 = fsub float %7625, %7630
  %7632 = tail call float @llvm.amdgcn.rcp.f32(float %7629)
  %7633 = fmul float %7628, %7632
  %7634 = fmul float %7629, %7633
  %7635 = fneg float %7634
  %7636 = tail call float @llvm.fma.f32(float %7633, float %7629, float %7635)
  %7637 = tail call float @llvm.fma.f32(float %7633, float %7631, float %7636)
  %7638 = fadd float %7634, %7637
  %7639 = fsub float %7638, %7634
  %7640 = fsub float %7637, %7639
  %7641 = fsub float %7628, %7638
  %7642 = fsub float %7628, %7641
  %7643 = fsub float %7642, %7638
  %7644 = fsub float %7643, %7640
  %7645 = fadd float %7641, %7644
  %7646 = fmul float %7632, %7645
  %7647 = fadd float %7633, %7646
  %7648 = fsub float %7647, %7633
  %7649 = fsub float %7646, %7648
  %7650 = fmul float %7647, %7647
  %7651 = fneg float %7650
  %7652 = tail call float @llvm.fma.f32(float %7647, float %7647, float %7651)
  %7653 = fmul float %7649, 2.000000e+00
  %7654 = tail call float @llvm.fma.f32(float %7647, float %7653, float %7652)
  %7655 = fadd float %7650, %7654
  %7656 = fsub float %7655, %7650
  %7657 = fsub float %7654, %7656
  %7658 = tail call float @llvm.fmuladd.f32(float %7655, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %7659 = tail call float @llvm.fmuladd.f32(float %7655, float %7658, float 0x3FD999BDE0000000)
  %7660 = sitofp i32 %7627 to float
  %7661 = fmul float %7660, 0x3FE62E4300000000
  %7662 = fneg float %7661
  %7663 = tail call float @llvm.fma.f32(float %7660, float 0x3FE62E4300000000, float %7662)
  %7664 = tail call float @llvm.fma.f32(float %7660, float 0xBE205C6100000000, float %7663)
  %7665 = fadd float %7661, %7664
  %7666 = fsub float %7665, %7661
  %7667 = fsub float %7664, %7666
  %7668 = tail call float @llvm.amdgcn.ldexp.f32(float %7647, i32 1)
  %7669 = fmul float %7647, %7655
  %7670 = fneg float %7669
  %7671 = tail call float @llvm.fma.f32(float %7655, float %7647, float %7670)
  %7672 = tail call float @llvm.fma.f32(float %7655, float %7649, float %7671)
  %7673 = tail call float @llvm.fma.f32(float %7657, float %7647, float %7672)
  %7674 = fadd float %7669, %7673
  %7675 = fsub float %7674, %7669
  %7676 = fsub float %7673, %7675
  %7677 = fmul float %7655, %7659
  %7678 = fneg float %7677
  %7679 = tail call float @llvm.fma.f32(float %7655, float %7659, float %7678)
  %7680 = tail call float @llvm.fma.f32(float %7657, float %7659, float %7679)
  %7681 = fadd float %7677, %7680
  %7682 = fsub float %7681, %7677
  %7683 = fsub float %7680, %7682
  %7684 = fadd float %7681, 0x3FE5555540000000
  %7685 = fadd float %7684, 0xBFE5555540000000
  %7686 = fsub float %7681, %7685
  %7687 = fadd float %7683, 0x3E2E720200000000
  %7688 = fadd float %7687, %7686
  %7689 = fadd float %7684, %7688
  %7690 = fsub float %7689, %7684
  %7691 = fsub float %7688, %7690
  %7692 = fmul float %7674, %7689
  %7693 = fneg float %7692
  %7694 = tail call float @llvm.fma.f32(float %7674, float %7689, float %7693)
  %7695 = tail call float @llvm.fma.f32(float %7674, float %7691, float %7694)
  %7696 = tail call float @llvm.fma.f32(float %7676, float %7689, float %7695)
  %7697 = tail call float @llvm.amdgcn.ldexp.f32(float %7649, i32 1)
  %7698 = fadd float %7692, %7696
  %7699 = fsub float %7698, %7692
  %7700 = fsub float %7696, %7699
  %7701 = fadd float %7668, %7698
  %7702 = fsub float %7701, %7668
  %7703 = fsub float %7698, %7702
  %7704 = fadd float %7697, %7700
  %7705 = fadd float %7704, %7703
  %7706 = fadd float %7701, %7705
  %7707 = fsub float %7706, %7701
  %7708 = fsub float %7705, %7707
  %7709 = fadd float %7665, %7706
  %7710 = fsub float %7709, %7665
  %7711 = fsub float %7709, %7710
  %7712 = fsub float %7665, %7711
  %7713 = fsub float %7706, %7710
  %7714 = fadd float %7713, %7712
  %7715 = fadd float %7667, %7708
  %7716 = fsub float %7715, %7667
  %7717 = fsub float %7715, %7716
  %7718 = fsub float %7667, %7717
  %7719 = fsub float %7708, %7716
  %7720 = fadd float %7719, %7718
  %7721 = fadd float %7715, %7714
  %7722 = fadd float %7709, %7721
  %7723 = fsub float %7722, %7709
  %7724 = fsub float %7721, %7723
  %7725 = fadd float %7720, %7724
  %7726 = fadd float %7722, %7725
  %7727 = fsub float %7726, %7722
  %7728 = fsub float %7725, %7727
  %7729 = fmul float %7726, 2.000000e+00
  %7730 = fneg float %7729
  %7731 = tail call float @llvm.fma.f32(float %7726, float 2.000000e+00, float %7730)
  %7732 = fmul float %7726, 0.000000e+00
  %7733 = tail call float @llvm.fma.f32(float %7728, float 2.000000e+00, float %7732)
  %7734 = fadd float %7731, %7733
  %7735 = fadd float %7729, %7734
  %7736 = fsub float %7735, %7729
  %7737 = fsub float %7734, %7736
  %7738 = tail call float @llvm.fabs.f32(float %7729) #3
  %7739 = fcmp oeq float %7738, 0x7FF0000000000000
  %7740 = select i1 %7739, float %7729, float %7735
  %7741 = tail call float @llvm.fabs.f32(float %7740) #3
  %7742 = fcmp oeq float %7741, 0x7FF0000000000000
  %7743 = select i1 %7742, float 0.000000e+00, float %7737
  %7744 = fcmp oeq float %7740, 0x40562E4300000000
  %7745 = select i1 %7744, float 0x3EE0000000000000, float 0.000000e+00
  %7746 = fsub float %7740, %7745
  %7747 = fadd float %7745, %7743
  %7748 = fmul float %7746, 0x3FF7154760000000
  %7749 = tail call float @llvm.rint.f32(float %7748)
  %7750 = fcmp ogt float %7746, 0x40562E4300000000
  %7751 = fcmp olt float %7746, 0xC059D1DA00000000
  %7752 = fneg float %7748
  %7753 = tail call float @llvm.fma.f32(float %7746, float 0x3FF7154760000000, float %7752)
  %7754 = tail call float @llvm.fma.f32(float %7746, float 0x3E54AE0BE0000000, float %7753)
  %7755 = fsub float %7748, %7749
  %7756 = fadd float %7754, %7755
  %7757 = tail call float @llvm.exp2.f32(float %7756)
  %7758 = fptosi float %7749 to i32
  %7759 = tail call float @llvm.amdgcn.ldexp.f32(float %7757, i32 %7758)
  %7760 = select i1 %7751, float 0.000000e+00, float %7759
  %7761 = select i1 %7750, float 0x7FF0000000000000, float %7760
  %7762 = tail call float @llvm.fma.f32(float %7761, float %7747, float %7761)
  %7763 = tail call float @llvm.fabs.f32(float %7761) #3
  %7764 = fcmp oeq float %7763, 0x7FF0000000000000
  %7765 = select i1 %7764, float %7761, float %7762
  %7766 = tail call float @llvm.fabs.f32(float %7765)
  %7767 = fcmp oeq float %7621, 0x7FF0000000000000
  %7768 = fcmp oeq float %7620, 0.000000e+00
  %7769 = select i1 %7767, float 0x7FF0000000000000, float %7766
  %7770 = select i1 %7768, float 0.000000e+00, float %7769
  %7771 = fcmp uno float %7620, 0.000000e+00
  %7772 = select i1 %7771, float 0x7FF8000000000000, float %7770
  %7773 = fadd contract float %7477, -1.000000e+00
  %7774 = tail call float @llvm.fabs.f32(float %7773)
  %7775 = tail call float @llvm.amdgcn.frexp.mant.f32(float %7774)
  %7776 = fcmp olt float %7775, 0x3FE5555560000000
  %7777 = zext i1 %7776 to i32
  %7778 = tail call float @llvm.amdgcn.ldexp.f32(float %7775, i32 %7777)
  %7779 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %7774)
  %7780 = sub nsw i32 %7779, %7777
  %7781 = fadd float %7778, -1.000000e+00
  %7782 = fadd float %7778, 1.000000e+00
  %7783 = fadd float %7782, -1.000000e+00
  %7784 = fsub float %7778, %7783
  %7785 = tail call float @llvm.amdgcn.rcp.f32(float %7782)
  %7786 = fmul float %7781, %7785
  %7787 = fmul float %7782, %7786
  %7788 = fneg float %7787
  %7789 = tail call float @llvm.fma.f32(float %7786, float %7782, float %7788)
  %7790 = tail call float @llvm.fma.f32(float %7786, float %7784, float %7789)
  %7791 = fadd float %7787, %7790
  %7792 = fsub float %7791, %7787
  %7793 = fsub float %7790, %7792
  %7794 = fsub float %7781, %7791
  %7795 = fsub float %7781, %7794
  %7796 = fsub float %7795, %7791
  %7797 = fsub float %7796, %7793
  %7798 = fadd float %7794, %7797
  %7799 = fmul float %7785, %7798
  %7800 = fadd float %7786, %7799
  %7801 = fsub float %7800, %7786
  %7802 = fsub float %7799, %7801
  %7803 = fmul float %7800, %7800
  %7804 = fneg float %7803
  %7805 = tail call float @llvm.fma.f32(float %7800, float %7800, float %7804)
  %7806 = fmul float %7802, 2.000000e+00
  %7807 = tail call float @llvm.fma.f32(float %7800, float %7806, float %7805)
  %7808 = fadd float %7803, %7807
  %7809 = fsub float %7808, %7803
  %7810 = fsub float %7807, %7809
  %7811 = tail call float @llvm.fmuladd.f32(float %7808, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %7812 = tail call float @llvm.fmuladd.f32(float %7808, float %7811, float 0x3FD999BDE0000000)
  %7813 = sitofp i32 %7780 to float
  %7814 = fmul float %7813, 0x3FE62E4300000000
  %7815 = fneg float %7814
  %7816 = tail call float @llvm.fma.f32(float %7813, float 0x3FE62E4300000000, float %7815)
  %7817 = tail call float @llvm.fma.f32(float %7813, float 0xBE205C6100000000, float %7816)
  %7818 = fadd float %7814, %7817
  %7819 = fsub float %7818, %7814
  %7820 = fsub float %7817, %7819
  %7821 = tail call float @llvm.amdgcn.ldexp.f32(float %7800, i32 1)
  %7822 = fmul float %7800, %7808
  %7823 = fneg float %7822
  %7824 = tail call float @llvm.fma.f32(float %7808, float %7800, float %7823)
  %7825 = tail call float @llvm.fma.f32(float %7808, float %7802, float %7824)
  %7826 = tail call float @llvm.fma.f32(float %7810, float %7800, float %7825)
  %7827 = fadd float %7822, %7826
  %7828 = fsub float %7827, %7822
  %7829 = fsub float %7826, %7828
  %7830 = fmul float %7808, %7812
  %7831 = fneg float %7830
  %7832 = tail call float @llvm.fma.f32(float %7808, float %7812, float %7831)
  %7833 = tail call float @llvm.fma.f32(float %7810, float %7812, float %7832)
  %7834 = fadd float %7830, %7833
  %7835 = fsub float %7834, %7830
  %7836 = fsub float %7833, %7835
  %7837 = fadd float %7834, 0x3FE5555540000000
  %7838 = fadd float %7837, 0xBFE5555540000000
  %7839 = fsub float %7834, %7838
  %7840 = fadd float %7836, 0x3E2E720200000000
  %7841 = fadd float %7840, %7839
  %7842 = fadd float %7837, %7841
  %7843 = fsub float %7842, %7837
  %7844 = fsub float %7841, %7843
  %7845 = fmul float %7827, %7842
  %7846 = fneg float %7845
  %7847 = tail call float @llvm.fma.f32(float %7827, float %7842, float %7846)
  %7848 = tail call float @llvm.fma.f32(float %7827, float %7844, float %7847)
  %7849 = tail call float @llvm.fma.f32(float %7829, float %7842, float %7848)
  %7850 = tail call float @llvm.amdgcn.ldexp.f32(float %7802, i32 1)
  %7851 = fadd float %7845, %7849
  %7852 = fsub float %7851, %7845
  %7853 = fsub float %7849, %7852
  %7854 = fadd float %7821, %7851
  %7855 = fsub float %7854, %7821
  %7856 = fsub float %7851, %7855
  %7857 = fadd float %7850, %7853
  %7858 = fadd float %7857, %7856
  %7859 = fadd float %7854, %7858
  %7860 = fsub float %7859, %7854
  %7861 = fsub float %7858, %7860
  %7862 = fadd float %7818, %7859
  %7863 = fsub float %7862, %7818
  %7864 = fsub float %7862, %7863
  %7865 = fsub float %7818, %7864
  %7866 = fsub float %7859, %7863
  %7867 = fadd float %7866, %7865
  %7868 = fadd float %7820, %7861
  %7869 = fsub float %7868, %7820
  %7870 = fsub float %7868, %7869
  %7871 = fsub float %7820, %7870
  %7872 = fsub float %7861, %7869
  %7873 = fadd float %7872, %7871
  %7874 = fadd float %7868, %7867
  %7875 = fadd float %7862, %7874
  %7876 = fsub float %7875, %7862
  %7877 = fsub float %7874, %7876
  %7878 = fadd float %7873, %7877
  %7879 = fadd float %7875, %7878
  %7880 = fsub float %7879, %7875
  %7881 = fsub float %7878, %7880
  %7882 = fmul float %7879, 2.000000e+00
  %7883 = fneg float %7882
  %7884 = tail call float @llvm.fma.f32(float %7879, float 2.000000e+00, float %7883)
  %7885 = fmul float %7879, 0.000000e+00
  %7886 = tail call float @llvm.fma.f32(float %7881, float 2.000000e+00, float %7885)
  %7887 = fadd float %7884, %7886
  %7888 = fadd float %7882, %7887
  %7889 = fsub float %7888, %7882
  %7890 = fsub float %7887, %7889
  %7891 = tail call float @llvm.fabs.f32(float %7882) #3
  %7892 = fcmp oeq float %7891, 0x7FF0000000000000
  %7893 = select i1 %7892, float %7882, float %7888
  %7894 = tail call float @llvm.fabs.f32(float %7893) #3
  %7895 = fcmp oeq float %7894, 0x7FF0000000000000
  %7896 = select i1 %7895, float 0.000000e+00, float %7890
  %7897 = fcmp oeq float %7893, 0x40562E4300000000
  %7898 = select i1 %7897, float 0x3EE0000000000000, float 0.000000e+00
  %7899 = fsub float %7893, %7898
  %7900 = fadd float %7898, %7896
  %7901 = fmul float %7899, 0x3FF7154760000000
  %7902 = tail call float @llvm.rint.f32(float %7901)
  %7903 = fcmp ogt float %7899, 0x40562E4300000000
  %7904 = fcmp olt float %7899, 0xC059D1DA00000000
  %7905 = fneg float %7901
  %7906 = tail call float @llvm.fma.f32(float %7899, float 0x3FF7154760000000, float %7905)
  %7907 = tail call float @llvm.fma.f32(float %7899, float 0x3E54AE0BE0000000, float %7906)
  %7908 = fsub float %7901, %7902
  %7909 = fadd float %7907, %7908
  %7910 = tail call float @llvm.exp2.f32(float %7909)
  %7911 = fptosi float %7902 to i32
  %7912 = tail call float @llvm.amdgcn.ldexp.f32(float %7910, i32 %7911)
  %7913 = select i1 %7904, float 0.000000e+00, float %7912
  %7914 = select i1 %7903, float 0x7FF0000000000000, float %7913
  %7915 = tail call float @llvm.fma.f32(float %7914, float %7900, float %7914)
  %7916 = tail call float @llvm.fabs.f32(float %7914) #3
  %7917 = fcmp oeq float %7916, 0x7FF0000000000000
  %7918 = select i1 %7917, float %7914, float %7915
  %7919 = tail call float @llvm.fabs.f32(float %7918)
  %7920 = fcmp oeq float %7774, 0x7FF0000000000000
  %7921 = fcmp oeq float %7773, 0.000000e+00
  %7922 = select i1 %7920, float 0x7FF0000000000000, float %7919
  %7923 = select i1 %7921, float 0.000000e+00, float %7922
  %7924 = fcmp uno float %7773, 0.000000e+00
  %7925 = select i1 %7924, float 0x7FF8000000000000, float %7923
  %7926 = fadd contract float %7925, %7772
  %7927 = fadd contract float %7926, 0.000000e+00
  br label %7928

7928:                                             ; preds = %8213, %7595
  %7929 = phi i1 [ true, %7595 ], [ false, %8213 ]
  %7930 = phi i32 [ 0, %7595 ], [ 1, %8213 ]
  %7931 = phi float [ %7927, %7595 ], [ %8394, %8213 ]
  %7932 = zext i32 %7930 to i64
  %7933 = extractelement <3 x float> %7471, i64 %7932
  %7934 = fadd contract float %7933, -1.000000e+00
  %7935 = fmul contract float %7934, 2.500000e-01
  %7936 = fadd contract float %7935, 1.000000e+00
  %7937 = add nuw nsw i32 %7930, 1
  %7938 = zext i32 %7937 to i64
  %7939 = extractelement <3 x float> %7471, i64 %7938
  %7940 = fadd contract float %7939, -1.000000e+00
  %7941 = fmul contract float %7940, 2.500000e-01
  %7942 = fadd contract float %7941, 1.000000e+00
  %7943 = fadd contract float %7936, -1.000000e+00
  %7944 = tail call float @llvm.fabs.f32(float %7943)
  %7945 = tail call float @llvm.amdgcn.frexp.mant.f32(float %7944)
  %7946 = fcmp olt float %7945, 0x3FE5555560000000
  %7947 = zext i1 %7946 to i32
  %7948 = tail call float @llvm.amdgcn.ldexp.f32(float %7945, i32 %7947)
  %7949 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %7944)
  %7950 = sub nsw i32 %7949, %7947
  %7951 = fadd float %7948, -1.000000e+00
  %7952 = fadd float %7948, 1.000000e+00
  %7953 = fadd float %7952, -1.000000e+00
  %7954 = fsub float %7948, %7953
  %7955 = tail call float @llvm.amdgcn.rcp.f32(float %7952)
  %7956 = fmul float %7951, %7955
  %7957 = fmul float %7952, %7956
  %7958 = fneg float %7957
  %7959 = tail call float @llvm.fma.f32(float %7956, float %7952, float %7958)
  %7960 = tail call float @llvm.fma.f32(float %7956, float %7954, float %7959)
  %7961 = fadd float %7957, %7960
  %7962 = fsub float %7961, %7957
  %7963 = fsub float %7960, %7962
  %7964 = fsub float %7951, %7961
  %7965 = fsub float %7951, %7964
  %7966 = fsub float %7965, %7961
  %7967 = fsub float %7966, %7963
  %7968 = fadd float %7964, %7967
  %7969 = fmul float %7955, %7968
  %7970 = fadd float %7956, %7969
  %7971 = fsub float %7970, %7956
  %7972 = fsub float %7969, %7971
  %7973 = fmul float %7970, %7970
  %7974 = fneg float %7973
  %7975 = tail call float @llvm.fma.f32(float %7970, float %7970, float %7974)
  %7976 = fmul float %7972, 2.000000e+00
  %7977 = tail call float @llvm.fma.f32(float %7970, float %7976, float %7975)
  %7978 = fadd float %7973, %7977
  %7979 = fsub float %7978, %7973
  %7980 = fsub float %7977, %7979
  %7981 = tail call float @llvm.fmuladd.f32(float %7978, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %7982 = tail call float @llvm.fmuladd.f32(float %7978, float %7981, float 0x3FD999BDE0000000)
  %7983 = sitofp i32 %7950 to float
  %7984 = fmul float %7983, 0x3FE62E4300000000
  %7985 = fneg float %7984
  %7986 = tail call float @llvm.fma.f32(float %7983, float 0x3FE62E4300000000, float %7985)
  %7987 = tail call float @llvm.fma.f32(float %7983, float 0xBE205C6100000000, float %7986)
  %7988 = fadd float %7984, %7987
  %7989 = fsub float %7988, %7984
  %7990 = fsub float %7987, %7989
  %7991 = tail call float @llvm.amdgcn.ldexp.f32(float %7970, i32 1)
  %7992 = fmul float %7970, %7978
  %7993 = fneg float %7992
  %7994 = tail call float @llvm.fma.f32(float %7978, float %7970, float %7993)
  %7995 = tail call float @llvm.fma.f32(float %7978, float %7972, float %7994)
  %7996 = tail call float @llvm.fma.f32(float %7980, float %7970, float %7995)
  %7997 = fadd float %7992, %7996
  %7998 = fsub float %7997, %7992
  %7999 = fsub float %7996, %7998
  %8000 = fmul float %7978, %7982
  %8001 = fneg float %8000
  %8002 = tail call float @llvm.fma.f32(float %7978, float %7982, float %8001)
  %8003 = tail call float @llvm.fma.f32(float %7980, float %7982, float %8002)
  %8004 = fadd float %8000, %8003
  %8005 = fsub float %8004, %8000
  %8006 = fsub float %8003, %8005
  %8007 = fadd float %8004, 0x3FE5555540000000
  %8008 = fadd float %8007, 0xBFE5555540000000
  %8009 = fsub float %8004, %8008
  %8010 = fadd float %8006, 0x3E2E720200000000
  %8011 = fadd float %8010, %8009
  %8012 = fadd float %8007, %8011
  %8013 = fsub float %8012, %8007
  %8014 = fsub float %8011, %8013
  %8015 = fmul float %7997, %8012
  %8016 = fneg float %8015
  %8017 = tail call float @llvm.fma.f32(float %7997, float %8012, float %8016)
  %8018 = tail call float @llvm.fma.f32(float %7997, float %8014, float %8017)
  %8019 = tail call float @llvm.fma.f32(float %7999, float %8012, float %8018)
  %8020 = tail call float @llvm.amdgcn.ldexp.f32(float %7972, i32 1)
  %8021 = fadd float %8015, %8019
  %8022 = fsub float %8021, %8015
  %8023 = fsub float %8019, %8022
  %8024 = fadd float %7991, %8021
  %8025 = fsub float %8024, %7991
  %8026 = fsub float %8021, %8025
  %8027 = fadd float %8020, %8023
  %8028 = fadd float %8027, %8026
  %8029 = fadd float %8024, %8028
  %8030 = fsub float %8029, %8024
  %8031 = fsub float %8028, %8030
  %8032 = fadd float %7988, %8029
  %8033 = fsub float %8032, %7988
  %8034 = fsub float %8032, %8033
  %8035 = fsub float %7988, %8034
  %8036 = fsub float %8029, %8033
  %8037 = fadd float %8036, %8035
  %8038 = fadd float %7990, %8031
  %8039 = fsub float %8038, %7990
  %8040 = fsub float %8038, %8039
  %8041 = fsub float %7990, %8040
  %8042 = fsub float %8031, %8039
  %8043 = fadd float %8042, %8041
  %8044 = fadd float %8038, %8037
  %8045 = fadd float %8032, %8044
  %8046 = fsub float %8045, %8032
  %8047 = fsub float %8044, %8046
  %8048 = fadd float %8043, %8047
  %8049 = fadd float %8045, %8048
  %8050 = fsub float %8049, %8045
  %8051 = fsub float %8048, %8050
  %8052 = fmul float %8049, 2.000000e+00
  %8053 = fneg float %8052
  %8054 = tail call float @llvm.fma.f32(float %8049, float 2.000000e+00, float %8053)
  %8055 = fmul float %8049, 0.000000e+00
  %8056 = tail call float @llvm.fma.f32(float %8051, float 2.000000e+00, float %8055)
  %8057 = fadd float %8054, %8056
  %8058 = fadd float %8052, %8057
  %8059 = fsub float %8058, %8052
  %8060 = fsub float %8057, %8059
  %8061 = tail call float @llvm.fabs.f32(float %8052) #3
  %8062 = fcmp oeq float %8061, 0x7FF0000000000000
  %8063 = select i1 %8062, float %8052, float %8058
  %8064 = tail call float @llvm.fabs.f32(float %8063) #3
  %8065 = fcmp oeq float %8064, 0x7FF0000000000000
  %8066 = select i1 %8065, float 0.000000e+00, float %8060
  %8067 = fcmp oeq float %8063, 0x40562E4300000000
  %8068 = select i1 %8067, float 0x3EE0000000000000, float 0.000000e+00
  %8069 = fsub float %8063, %8068
  %8070 = fadd float %8068, %8066
  %8071 = fmul float %8069, 0x3FF7154760000000
  %8072 = tail call float @llvm.rint.f32(float %8071)
  %8073 = fcmp ogt float %8069, 0x40562E4300000000
  %8074 = fcmp olt float %8069, 0xC059D1DA00000000
  %8075 = fneg float %8071
  %8076 = tail call float @llvm.fma.f32(float %8069, float 0x3FF7154760000000, float %8075)
  %8077 = tail call float @llvm.fma.f32(float %8069, float 0x3E54AE0BE0000000, float %8076)
  %8078 = fsub float %8071, %8072
  %8079 = fadd float %8077, %8078
  %8080 = tail call float @llvm.exp2.f32(float %8079)
  %8081 = fptosi float %8072 to i32
  %8082 = tail call float @llvm.amdgcn.ldexp.f32(float %8080, i32 %8081)
  %8083 = select i1 %8074, float 0.000000e+00, float %8082
  %8084 = select i1 %8073, float 0x7FF0000000000000, float %8083
  %8085 = tail call float @llvm.fma.f32(float %8084, float %8070, float %8084)
  %8086 = tail call float @llvm.fabs.f32(float %8084) #3
  %8087 = fcmp oeq float %8086, 0x7FF0000000000000
  %8088 = select i1 %8087, float %8084, float %8085
  %8089 = tail call float @llvm.fabs.f32(float %8088)
  %8090 = fcmp oeq float %7944, 0x7FF0000000000000
  %8091 = fcmp oeq float %7943, 0.000000e+00
  %8092 = select i1 %8090, float 0x7FF0000000000000, float %8089
  %8093 = select i1 %8091, float 0.000000e+00, float %8092
  %8094 = fcmp uno float %7943, 0.000000e+00
  %8095 = select i1 %8094, float 0x7FF8000000000000, float %8093
  %8096 = fmul contract float %7942, 0x400921CAC0000000
  %8097 = tail call float @llvm.fabs.f32(float %8096)
  %8098 = fcmp olt float %8097, 1.310720e+05
  br i1 %8098, label %8205, label %8099

8099:                                             ; preds = %7928
  %8100 = bitcast float %8097 to i32
  %8101 = lshr i32 %8100, 23
  %8102 = and i32 %8100, 8388607
  %8103 = or i32 %8102, 8388608
  %8104 = zext i32 %8103 to i64
  %8105 = mul nuw nsw i64 %8104, 4266746795
  %8106 = trunc i64 %8105 to i32
  %8107 = lshr i64 %8105, 32
  %8108 = mul nuw nsw i64 %8104, 1011060801
  %8109 = add nuw nsw i64 %8107, %8108
  %8110 = trunc i64 %8109 to i32
  %8111 = lshr i64 %8109, 32
  %8112 = mul nuw nsw i64 %8104, 3680671129
  %8113 = add nuw nsw i64 %8111, %8112
  %8114 = trunc i64 %8113 to i32
  %8115 = lshr i64 %8113, 32
  %8116 = mul nuw nsw i64 %8104, 4113882560
  %8117 = add nuw nsw i64 %8115, %8116
  %8118 = trunc i64 %8117 to i32
  %8119 = lshr i64 %8117, 32
  %8120 = mul nuw nsw i64 %8104, 4230436817
  %8121 = add nuw nsw i64 %8119, %8120
  %8122 = trunc i64 %8121 to i32
  %8123 = lshr i64 %8121, 32
  %8124 = mul nuw nsw i64 %8104, 1313084713
  %8125 = add nuw nsw i64 %8123, %8124
  %8126 = trunc i64 %8125 to i32
  %8127 = lshr i64 %8125, 32
  %8128 = mul nuw nsw i64 %8104, 2734261102
  %8129 = add nuw nsw i64 %8127, %8128
  %8130 = trunc i64 %8129 to i32
  %8131 = lshr i64 %8129, 32
  %8132 = trunc i64 %8131 to i32
  %8133 = add nsw i32 %8101, -120
  %8134 = icmp ugt i32 %8133, 63
  %8135 = select i1 %8134, i32 %8126, i32 %8132
  %8136 = select i1 %8134, i32 %8122, i32 %8130
  %8137 = select i1 %8134, i32 %8118, i32 %8126
  %8138 = select i1 %8134, i32 %8114, i32 %8122
  %8139 = select i1 %8134, i32 %8110, i32 %8118
  %8140 = select i1 %8134, i32 %8106, i32 %8114
  %8141 = select i1 %8134, i32 -64, i32 0
  %8142 = add nsw i32 %8141, %8133
  %8143 = icmp ugt i32 %8142, 31
  %8144 = select i1 %8143, i32 %8136, i32 %8135
  %8145 = select i1 %8143, i32 %8137, i32 %8136
  %8146 = select i1 %8143, i32 %8138, i32 %8137
  %8147 = select i1 %8143, i32 %8139, i32 %8138
  %8148 = select i1 %8143, i32 %8140, i32 %8139
  %8149 = select i1 %8143, i32 -32, i32 0
  %8150 = add nsw i32 %8149, %8142
  %8151 = icmp ugt i32 %8150, 31
  %8152 = select i1 %8151, i32 %8145, i32 %8144
  %8153 = select i1 %8151, i32 %8146, i32 %8145
  %8154 = select i1 %8151, i32 %8147, i32 %8146
  %8155 = select i1 %8151, i32 %8148, i32 %8147
  %8156 = select i1 %8151, i32 -32, i32 0
  %8157 = add nsw i32 %8156, %8150
  %8158 = icmp eq i32 %8157, 0
  %8159 = sub nsw i32 32, %8157
  %8160 = tail call i32 @llvm.fshr.i32(i32 %8152, i32 %8153, i32 %8159)
  %8161 = tail call i32 @llvm.fshr.i32(i32 %8153, i32 %8154, i32 %8159)
  %8162 = tail call i32 @llvm.fshr.i32(i32 %8154, i32 %8155, i32 %8159)
  %8163 = select i1 %8158, i32 %8152, i32 %8160
  %8164 = select i1 %8158, i32 %8153, i32 %8161
  %8165 = select i1 %8158, i32 %8154, i32 %8162
  %8166 = lshr i32 %8163, 29
  %8167 = tail call i32 @llvm.fshl.i32(i32 %8163, i32 %8164, i32 2)
  %8168 = tail call i32 @llvm.fshl.i32(i32 %8164, i32 %8165, i32 2)
  %8169 = tail call i32 @llvm.fshl.i32(i32 %8165, i32 %8155, i32 2)
  %8170 = and i32 %8166, 1
  %8171 = sub nsw i32 0, %8170
  %8172 = shl i32 %8166, 31
  %8173 = xor i32 %8167, %8171
  %8174 = xor i32 %8168, %8171
  %8175 = xor i32 %8169, %8171
  %8176 = tail call i32 @llvm.ctlz.i32(i32 %8173, i1 false), !range !8
  %8177 = sub nsw i32 31, %8176
  %8178 = tail call i32 @llvm.fshr.i32(i32 %8173, i32 %8174, i32 %8177)
  %8179 = tail call i32 @llvm.fshr.i32(i32 %8174, i32 %8175, i32 %8177)
  %8180 = shl nuw nsw i32 %8176, 23
  %8181 = sub nuw nsw i32 1056964608, %8180
  %8182 = lshr i32 %8178, 9
  %8183 = or i32 %8182, %8181
  %8184 = or i32 %8183, %8172
  %8185 = bitcast i32 %8184 to float
  %8186 = tail call i32 @llvm.fshl.i32(i32 %8178, i32 %8179, i32 23)
  %8187 = tail call i32 @llvm.ctlz.i32(i32 %8186, i1 false), !range !8
  %8188 = fmul float %8185, 0x3FF921FB40000000
  %8189 = add nuw nsw i32 %8187, %8176
  %8190 = shl nuw nsw i32 %8189, 23
  %8191 = sub nuw nsw i32 855638016, %8190
  %8192 = sub nsw i32 31, %8187
  %8193 = tail call i32 @llvm.fshr.i32(i32 %8186, i32 %8179, i32 %8192)
  %8194 = lshr i32 %8193, 9
  %8195 = or i32 %8191, %8194
  %8196 = or i32 %8195, %8172
  %8197 = bitcast i32 %8196 to float
  %8198 = fneg float %8188
  %8199 = tail call float @llvm.fma.f32(float %8185, float 0x3FF921FB40000000, float %8198)
  %8200 = tail call float @llvm.fma.f32(float %8185, float 0x3E74442D00000000, float %8199)
  %8201 = tail call float @llvm.fma.f32(float %8197, float 0x3FF921FB40000000, float %8200)
  %8202 = fadd float %8188, %8201
  %8203 = lshr i32 %8163, 30
  %8204 = add nuw nsw i32 %8170, %8203
  br label %8213

8205:                                             ; preds = %7928
  %8206 = fmul float %8097, 0x3FE45F3060000000
  %8207 = tail call float @llvm.rint.f32(float %8206)
  %8208 = tail call float @llvm.fma.f32(float %8207, float 0xBFF921FB40000000, float %8097)
  %8209 = tail call float @llvm.fma.f32(float %8207, float 0xBE74442D00000000, float %8208)
  %8210 = tail call float @llvm.fma.f32(float %8207, float 0xBCF8469880000000, float %8209)
  %8211 = fptosi float %8207 to i32
  %8212 = bitcast float %8097 to i32
  br label %8213

8213:                                             ; preds = %8205, %8099
  %8214 = phi i32 [ %8212, %8205 ], [ %8100, %8099 ]
  %8215 = phi float [ %8210, %8205 ], [ %8202, %8099 ]
  %8216 = phi i32 [ %8211, %8205 ], [ %8204, %8099 ]
  %8217 = fmul float %8215, %8215
  %8218 = tail call float @llvm.fmuladd.f32(float %8217, float 0xBF29833040000000, float 0x3F81103880000000)
  %8219 = tail call float @llvm.fmuladd.f32(float %8217, float %8218, float 0xBFC55553A0000000)
  %8220 = fmul float %8217, %8219
  %8221 = tail call float @llvm.fmuladd.f32(float %8215, float %8220, float %8215)
  %8222 = tail call float @llvm.fmuladd.f32(float %8217, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %8223 = tail call float @llvm.fmuladd.f32(float %8217, float %8222, float 0x3FA5557EE0000000)
  %8224 = tail call float @llvm.fmuladd.f32(float %8217, float %8223, float 0xBFE0000080000000)
  %8225 = tail call float @llvm.fmuladd.f32(float %8217, float %8224, float 1.000000e+00)
  %8226 = and i32 %8216, 1
  %8227 = icmp eq i32 %8226, 0
  %8228 = select i1 %8227, float %8221, float %8225
  %8229 = bitcast float %8228 to i32
  %8230 = shl i32 %8216, 30
  %8231 = and i32 %8230, -2147483648
  %8232 = bitcast float %8096 to i32
  %8233 = xor i32 %8214, %8232
  %8234 = xor i32 %8233, %8231
  %8235 = xor i32 %8234, %8229
  %8236 = bitcast i32 %8235 to float
  %8237 = tail call i1 @llvm.amdgcn.class.f32(float %8097, i32 504)
  %8238 = select i1 %8237, float %8236, float 0x7FF8000000000000
  %8239 = tail call float @llvm.fabs.f32(float %8238)
  %8240 = tail call float @llvm.amdgcn.frexp.mant.f32(float %8239)
  %8241 = fcmp olt float %8240, 0x3FE5555560000000
  %8242 = zext i1 %8241 to i32
  %8243 = tail call float @llvm.amdgcn.ldexp.f32(float %8240, i32 %8242)
  %8244 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %8239)
  %8245 = sub nsw i32 %8244, %8242
  %8246 = fadd float %8243, -1.000000e+00
  %8247 = fadd float %8243, 1.000000e+00
  %8248 = fadd float %8247, -1.000000e+00
  %8249 = fsub float %8243, %8248
  %8250 = tail call float @llvm.amdgcn.rcp.f32(float %8247)
  %8251 = fmul float %8246, %8250
  %8252 = fmul float %8247, %8251
  %8253 = fneg float %8252
  %8254 = tail call float @llvm.fma.f32(float %8251, float %8247, float %8253)
  %8255 = tail call float @llvm.fma.f32(float %8251, float %8249, float %8254)
  %8256 = fadd float %8252, %8255
  %8257 = fsub float %8256, %8252
  %8258 = fsub float %8255, %8257
  %8259 = fsub float %8246, %8256
  %8260 = fsub float %8246, %8259
  %8261 = fsub float %8260, %8256
  %8262 = fsub float %8261, %8258
  %8263 = fadd float %8259, %8262
  %8264 = fmul float %8250, %8263
  %8265 = fadd float %8251, %8264
  %8266 = fsub float %8265, %8251
  %8267 = fsub float %8264, %8266
  %8268 = fmul float %8265, %8265
  %8269 = fneg float %8268
  %8270 = tail call float @llvm.fma.f32(float %8265, float %8265, float %8269)
  %8271 = fmul float %8267, 2.000000e+00
  %8272 = tail call float @llvm.fma.f32(float %8265, float %8271, float %8270)
  %8273 = fadd float %8268, %8272
  %8274 = fsub float %8273, %8268
  %8275 = fsub float %8272, %8274
  %8276 = tail call float @llvm.fmuladd.f32(float %8273, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %8277 = tail call float @llvm.fmuladd.f32(float %8273, float %8276, float 0x3FD999BDE0000000)
  %8278 = sitofp i32 %8245 to float
  %8279 = fmul float %8278, 0x3FE62E4300000000
  %8280 = fneg float %8279
  %8281 = tail call float @llvm.fma.f32(float %8278, float 0x3FE62E4300000000, float %8280)
  %8282 = tail call float @llvm.fma.f32(float %8278, float 0xBE205C6100000000, float %8281)
  %8283 = fadd float %8279, %8282
  %8284 = fsub float %8283, %8279
  %8285 = fsub float %8282, %8284
  %8286 = tail call float @llvm.amdgcn.ldexp.f32(float %8265, i32 1)
  %8287 = fmul float %8265, %8273
  %8288 = fneg float %8287
  %8289 = tail call float @llvm.fma.f32(float %8273, float %8265, float %8288)
  %8290 = tail call float @llvm.fma.f32(float %8273, float %8267, float %8289)
  %8291 = tail call float @llvm.fma.f32(float %8275, float %8265, float %8290)
  %8292 = fadd float %8287, %8291
  %8293 = fsub float %8292, %8287
  %8294 = fsub float %8291, %8293
  %8295 = fmul float %8273, %8277
  %8296 = fneg float %8295
  %8297 = tail call float @llvm.fma.f32(float %8273, float %8277, float %8296)
  %8298 = tail call float @llvm.fma.f32(float %8275, float %8277, float %8297)
  %8299 = fadd float %8295, %8298
  %8300 = fsub float %8299, %8295
  %8301 = fsub float %8298, %8300
  %8302 = fadd float %8299, 0x3FE5555540000000
  %8303 = fadd float %8302, 0xBFE5555540000000
  %8304 = fsub float %8299, %8303
  %8305 = fadd float %8301, 0x3E2E720200000000
  %8306 = fadd float %8305, %8304
  %8307 = fadd float %8302, %8306
  %8308 = fsub float %8307, %8302
  %8309 = fsub float %8306, %8308
  %8310 = fmul float %8292, %8307
  %8311 = fneg float %8310
  %8312 = tail call float @llvm.fma.f32(float %8292, float %8307, float %8311)
  %8313 = tail call float @llvm.fma.f32(float %8292, float %8309, float %8312)
  %8314 = tail call float @llvm.fma.f32(float %8294, float %8307, float %8313)
  %8315 = tail call float @llvm.amdgcn.ldexp.f32(float %8267, i32 1)
  %8316 = fadd float %8310, %8314
  %8317 = fsub float %8316, %8310
  %8318 = fsub float %8314, %8317
  %8319 = fadd float %8286, %8316
  %8320 = fsub float %8319, %8286
  %8321 = fsub float %8316, %8320
  %8322 = fadd float %8315, %8318
  %8323 = fadd float %8322, %8321
  %8324 = fadd float %8319, %8323
  %8325 = fsub float %8324, %8319
  %8326 = fsub float %8323, %8325
  %8327 = fadd float %8283, %8324
  %8328 = fsub float %8327, %8283
  %8329 = fsub float %8327, %8328
  %8330 = fsub float %8283, %8329
  %8331 = fsub float %8324, %8328
  %8332 = fadd float %8331, %8330
  %8333 = fadd float %8285, %8326
  %8334 = fsub float %8333, %8285
  %8335 = fsub float %8333, %8334
  %8336 = fsub float %8285, %8335
  %8337 = fsub float %8326, %8334
  %8338 = fadd float %8337, %8336
  %8339 = fadd float %8333, %8332
  %8340 = fadd float %8327, %8339
  %8341 = fsub float %8340, %8327
  %8342 = fsub float %8339, %8341
  %8343 = fadd float %8338, %8342
  %8344 = fadd float %8340, %8343
  %8345 = fsub float %8344, %8340
  %8346 = fsub float %8343, %8345
  %8347 = fmul float %8344, 2.000000e+00
  %8348 = fneg float %8347
  %8349 = tail call float @llvm.fma.f32(float %8344, float 2.000000e+00, float %8348)
  %8350 = fmul float %8344, 0.000000e+00
  %8351 = tail call float @llvm.fma.f32(float %8346, float 2.000000e+00, float %8350)
  %8352 = fadd float %8349, %8351
  %8353 = fadd float %8347, %8352
  %8354 = fsub float %8353, %8347
  %8355 = fsub float %8352, %8354
  %8356 = tail call float @llvm.fabs.f32(float %8347) #3
  %8357 = fcmp oeq float %8356, 0x7FF0000000000000
  %8358 = select i1 %8357, float %8347, float %8353
  %8359 = tail call float @llvm.fabs.f32(float %8358) #3
  %8360 = fcmp oeq float %8359, 0x7FF0000000000000
  %8361 = select i1 %8360, float 0.000000e+00, float %8355
  %8362 = fcmp oeq float %8358, 0x40562E4300000000
  %8363 = select i1 %8362, float 0x3EE0000000000000, float 0.000000e+00
  %8364 = fsub float %8358, %8363
  %8365 = fadd float %8363, %8361
  %8366 = fmul float %8364, 0x3FF7154760000000
  %8367 = tail call float @llvm.rint.f32(float %8366)
  %8368 = fcmp ogt float %8364, 0x40562E4300000000
  %8369 = fcmp olt float %8364, 0xC059D1DA00000000
  %8370 = fneg float %8366
  %8371 = tail call float @llvm.fma.f32(float %8364, float 0x3FF7154760000000, float %8370)
  %8372 = tail call float @llvm.fma.f32(float %8364, float 0x3E54AE0BE0000000, float %8371)
  %8373 = fsub float %8366, %8367
  %8374 = fadd float %8372, %8373
  %8375 = tail call float @llvm.exp2.f32(float %8374)
  %8376 = fptosi float %8367 to i32
  %8377 = tail call float @llvm.amdgcn.ldexp.f32(float %8375, i32 %8376)
  %8378 = select i1 %8369, float 0.000000e+00, float %8377
  %8379 = select i1 %8368, float 0x7FF0000000000000, float %8378
  %8380 = tail call float @llvm.fma.f32(float %8379, float %8365, float %8379)
  %8381 = tail call float @llvm.fabs.f32(float %8379) #3
  %8382 = fcmp oeq float %8381, 0x7FF0000000000000
  %8383 = select i1 %8382, float %8379, float %8380
  %8384 = tail call float @llvm.fabs.f32(float %8383)
  %8385 = fcmp oeq float %8239, 0x7FF0000000000000
  %8386 = fcmp oeq float %8238, 0.000000e+00
  %8387 = fcmp uno float %8238, 0.000000e+00
  %8388 = fmul contract float %8384, 1.000000e+01
  %8389 = fadd contract float %8388, 1.000000e+00
  %8390 = select i1 %8385, float 0x7FF0000000000000, float %8389
  %8391 = select i1 %8386, float 1.000000e+00, float %8390
  %8392 = select i1 %8387, float 0x7FF8000000000000, float %8391
  %8393 = fmul contract float %8095, %8392
  %8394 = fadd contract float %7931, %8393
  br i1 %7929, label %7928, label %8395, !llvm.loop !9

8395:                                             ; preds = %8213
  %8396 = load float, float addrspace(1)* %0, align 4, !tbaa !4
  %8397 = fadd contract float %8396, -1.000000e+00
  %8398 = fmul contract float %8397, 2.500000e-01
  %8399 = fadd contract float %8398, 1.000000e+00
  %8400 = load float, float addrspace(1)* %3, align 4, !tbaa !4
  %8401 = fadd contract float %8400, -1.000000e+00
  %8402 = fmul contract float %8401, 2.500000e-01
  %8403 = fadd contract float %8402, 1.000000e+00
  %8404 = fmul contract float %8399, 0x400921CAC0000000
  %8405 = tail call float @llvm.fabs.f32(float %8404)
  %8406 = fcmp olt float %8405, 1.310720e+05
  br i1 %8406, label %8513, label %8407

8407:                                             ; preds = %8395
  %8408 = bitcast float %8405 to i32
  %8409 = lshr i32 %8408, 23
  %8410 = and i32 %8408, 8388607
  %8411 = or i32 %8410, 8388608
  %8412 = zext i32 %8411 to i64
  %8413 = mul nuw nsw i64 %8412, 4266746795
  %8414 = trunc i64 %8413 to i32
  %8415 = lshr i64 %8413, 32
  %8416 = mul nuw nsw i64 %8412, 1011060801
  %8417 = add nuw nsw i64 %8415, %8416
  %8418 = trunc i64 %8417 to i32
  %8419 = lshr i64 %8417, 32
  %8420 = mul nuw nsw i64 %8412, 3680671129
  %8421 = add nuw nsw i64 %8419, %8420
  %8422 = trunc i64 %8421 to i32
  %8423 = lshr i64 %8421, 32
  %8424 = mul nuw nsw i64 %8412, 4113882560
  %8425 = add nuw nsw i64 %8423, %8424
  %8426 = trunc i64 %8425 to i32
  %8427 = lshr i64 %8425, 32
  %8428 = mul nuw nsw i64 %8412, 4230436817
  %8429 = add nuw nsw i64 %8427, %8428
  %8430 = trunc i64 %8429 to i32
  %8431 = lshr i64 %8429, 32
  %8432 = mul nuw nsw i64 %8412, 1313084713
  %8433 = add nuw nsw i64 %8431, %8432
  %8434 = trunc i64 %8433 to i32
  %8435 = lshr i64 %8433, 32
  %8436 = mul nuw nsw i64 %8412, 2734261102
  %8437 = add nuw nsw i64 %8435, %8436
  %8438 = trunc i64 %8437 to i32
  %8439 = lshr i64 %8437, 32
  %8440 = trunc i64 %8439 to i32
  %8441 = add nsw i32 %8409, -120
  %8442 = icmp ugt i32 %8441, 63
  %8443 = select i1 %8442, i32 %8434, i32 %8440
  %8444 = select i1 %8442, i32 %8430, i32 %8438
  %8445 = select i1 %8442, i32 %8426, i32 %8434
  %8446 = select i1 %8442, i32 %8422, i32 %8430
  %8447 = select i1 %8442, i32 %8418, i32 %8426
  %8448 = select i1 %8442, i32 %8414, i32 %8422
  %8449 = select i1 %8442, i32 -64, i32 0
  %8450 = add nsw i32 %8449, %8441
  %8451 = icmp ugt i32 %8450, 31
  %8452 = select i1 %8451, i32 %8444, i32 %8443
  %8453 = select i1 %8451, i32 %8445, i32 %8444
  %8454 = select i1 %8451, i32 %8446, i32 %8445
  %8455 = select i1 %8451, i32 %8447, i32 %8446
  %8456 = select i1 %8451, i32 %8448, i32 %8447
  %8457 = select i1 %8451, i32 -32, i32 0
  %8458 = add nsw i32 %8457, %8450
  %8459 = icmp ugt i32 %8458, 31
  %8460 = select i1 %8459, i32 %8453, i32 %8452
  %8461 = select i1 %8459, i32 %8454, i32 %8453
  %8462 = select i1 %8459, i32 %8455, i32 %8454
  %8463 = select i1 %8459, i32 %8456, i32 %8455
  %8464 = select i1 %8459, i32 -32, i32 0
  %8465 = add nsw i32 %8464, %8458
  %8466 = icmp eq i32 %8465, 0
  %8467 = sub nsw i32 32, %8465
  %8468 = tail call i32 @llvm.fshr.i32(i32 %8460, i32 %8461, i32 %8467)
  %8469 = tail call i32 @llvm.fshr.i32(i32 %8461, i32 %8462, i32 %8467)
  %8470 = tail call i32 @llvm.fshr.i32(i32 %8462, i32 %8463, i32 %8467)
  %8471 = select i1 %8466, i32 %8460, i32 %8468
  %8472 = select i1 %8466, i32 %8461, i32 %8469
  %8473 = select i1 %8466, i32 %8462, i32 %8470
  %8474 = lshr i32 %8471, 29
  %8475 = tail call i32 @llvm.fshl.i32(i32 %8471, i32 %8472, i32 2)
  %8476 = tail call i32 @llvm.fshl.i32(i32 %8472, i32 %8473, i32 2)
  %8477 = tail call i32 @llvm.fshl.i32(i32 %8473, i32 %8463, i32 2)
  %8478 = and i32 %8474, 1
  %8479 = sub nsw i32 0, %8478
  %8480 = shl i32 %8474, 31
  %8481 = xor i32 %8475, %8479
  %8482 = xor i32 %8476, %8479
  %8483 = xor i32 %8477, %8479
  %8484 = tail call i32 @llvm.ctlz.i32(i32 %8481, i1 false), !range !8
  %8485 = sub nsw i32 31, %8484
  %8486 = tail call i32 @llvm.fshr.i32(i32 %8481, i32 %8482, i32 %8485)
  %8487 = tail call i32 @llvm.fshr.i32(i32 %8482, i32 %8483, i32 %8485)
  %8488 = shl nuw nsw i32 %8484, 23
  %8489 = sub nuw nsw i32 1056964608, %8488
  %8490 = lshr i32 %8486, 9
  %8491 = or i32 %8490, %8489
  %8492 = or i32 %8491, %8480
  %8493 = bitcast i32 %8492 to float
  %8494 = tail call i32 @llvm.fshl.i32(i32 %8486, i32 %8487, i32 23)
  %8495 = tail call i32 @llvm.ctlz.i32(i32 %8494, i1 false), !range !8
  %8496 = fmul float %8493, 0x3FF921FB40000000
  %8497 = add nuw nsw i32 %8495, %8484
  %8498 = shl nuw nsw i32 %8497, 23
  %8499 = sub nuw nsw i32 855638016, %8498
  %8500 = sub nsw i32 31, %8495
  %8501 = tail call i32 @llvm.fshr.i32(i32 %8494, i32 %8487, i32 %8500)
  %8502 = lshr i32 %8501, 9
  %8503 = or i32 %8499, %8502
  %8504 = or i32 %8503, %8480
  %8505 = bitcast i32 %8504 to float
  %8506 = fneg float %8496
  %8507 = tail call float @llvm.fma.f32(float %8493, float 0x3FF921FB40000000, float %8506)
  %8508 = tail call float @llvm.fma.f32(float %8493, float 0x3E74442D00000000, float %8507)
  %8509 = tail call float @llvm.fma.f32(float %8505, float 0x3FF921FB40000000, float %8508)
  %8510 = fadd float %8496, %8509
  %8511 = lshr i32 %8471, 30
  %8512 = add nuw nsw i32 %8478, %8511
  br label %8521

8513:                                             ; preds = %8395
  %8514 = fmul float %8405, 0x3FE45F3060000000
  %8515 = tail call float @llvm.rint.f32(float %8514)
  %8516 = tail call float @llvm.fma.f32(float %8515, float 0xBFF921FB40000000, float %8405)
  %8517 = tail call float @llvm.fma.f32(float %8515, float 0xBE74442D00000000, float %8516)
  %8518 = tail call float @llvm.fma.f32(float %8515, float 0xBCF8469880000000, float %8517)
  %8519 = fptosi float %8515 to i32
  %8520 = bitcast float %8405 to i32
  br label %8521

8521:                                             ; preds = %8513, %8407
  %8522 = phi i32 [ %8520, %8513 ], [ %8408, %8407 ]
  %8523 = phi float [ %8518, %8513 ], [ %8510, %8407 ]
  %8524 = phi i32 [ %8519, %8513 ], [ %8512, %8407 ]
  %8525 = fmul float %8523, %8523
  %8526 = tail call float @llvm.fmuladd.f32(float %8525, float 0xBF29833040000000, float 0x3F81103880000000)
  %8527 = tail call float @llvm.fmuladd.f32(float %8525, float %8526, float 0xBFC55553A0000000)
  %8528 = fmul float %8525, %8527
  %8529 = tail call float @llvm.fmuladd.f32(float %8523, float %8528, float %8523)
  %8530 = tail call float @llvm.fmuladd.f32(float %8525, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %8531 = tail call float @llvm.fmuladd.f32(float %8525, float %8530, float 0x3FA5557EE0000000)
  %8532 = tail call float @llvm.fmuladd.f32(float %8525, float %8531, float 0xBFE0000080000000)
  %8533 = tail call float @llvm.fmuladd.f32(float %8525, float %8532, float 1.000000e+00)
  %8534 = and i32 %8524, 1
  %8535 = icmp eq i32 %8534, 0
  %8536 = select i1 %8535, float %8529, float %8533
  %8537 = bitcast float %8536 to i32
  %8538 = shl i32 %8524, 30
  %8539 = and i32 %8538, -2147483648
  %8540 = bitcast float %8404 to i32
  %8541 = xor i32 %8522, %8540
  %8542 = xor i32 %8541, %8539
  %8543 = xor i32 %8542, %8537
  %8544 = bitcast i32 %8543 to float
  %8545 = tail call i1 @llvm.amdgcn.class.f32(float %8405, i32 504)
  %8546 = select i1 %8545, float %8544, float 0x7FF8000000000000
  %8547 = tail call float @llvm.fabs.f32(float %8546)
  %8548 = tail call float @llvm.amdgcn.frexp.mant.f32(float %8547)
  %8549 = fcmp olt float %8548, 0x3FE5555560000000
  %8550 = zext i1 %8549 to i32
  %8551 = tail call float @llvm.amdgcn.ldexp.f32(float %8548, i32 %8550)
  %8552 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %8547)
  %8553 = sub nsw i32 %8552, %8550
  %8554 = fadd float %8551, -1.000000e+00
  %8555 = fadd float %8551, 1.000000e+00
  %8556 = fadd float %8555, -1.000000e+00
  %8557 = fsub float %8551, %8556
  %8558 = tail call float @llvm.amdgcn.rcp.f32(float %8555)
  %8559 = fmul float %8554, %8558
  %8560 = fmul float %8555, %8559
  %8561 = fneg float %8560
  %8562 = tail call float @llvm.fma.f32(float %8559, float %8555, float %8561)
  %8563 = tail call float @llvm.fma.f32(float %8559, float %8557, float %8562)
  %8564 = fadd float %8560, %8563
  %8565 = fsub float %8564, %8560
  %8566 = fsub float %8563, %8565
  %8567 = fsub float %8554, %8564
  %8568 = fsub float %8554, %8567
  %8569 = fsub float %8568, %8564
  %8570 = fsub float %8569, %8566
  %8571 = fadd float %8567, %8570
  %8572 = fmul float %8558, %8571
  %8573 = fadd float %8559, %8572
  %8574 = fsub float %8573, %8559
  %8575 = fsub float %8572, %8574
  %8576 = fmul float %8573, %8573
  %8577 = fneg float %8576
  %8578 = tail call float @llvm.fma.f32(float %8573, float %8573, float %8577)
  %8579 = fmul float %8575, 2.000000e+00
  %8580 = tail call float @llvm.fma.f32(float %8573, float %8579, float %8578)
  %8581 = fadd float %8576, %8580
  %8582 = fsub float %8581, %8576
  %8583 = fsub float %8580, %8582
  %8584 = tail call float @llvm.fmuladd.f32(float %8581, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %8585 = tail call float @llvm.fmuladd.f32(float %8581, float %8584, float 0x3FD999BDE0000000)
  %8586 = sitofp i32 %8553 to float
  %8587 = fmul float %8586, 0x3FE62E4300000000
  %8588 = fneg float %8587
  %8589 = tail call float @llvm.fma.f32(float %8586, float 0x3FE62E4300000000, float %8588)
  %8590 = tail call float @llvm.fma.f32(float %8586, float 0xBE205C6100000000, float %8589)
  %8591 = fadd float %8587, %8590
  %8592 = fsub float %8591, %8587
  %8593 = fsub float %8590, %8592
  %8594 = tail call float @llvm.amdgcn.ldexp.f32(float %8573, i32 1)
  %8595 = fmul float %8573, %8581
  %8596 = fneg float %8595
  %8597 = tail call float @llvm.fma.f32(float %8581, float %8573, float %8596)
  %8598 = tail call float @llvm.fma.f32(float %8581, float %8575, float %8597)
  %8599 = tail call float @llvm.fma.f32(float %8583, float %8573, float %8598)
  %8600 = fadd float %8595, %8599
  %8601 = fsub float %8600, %8595
  %8602 = fsub float %8599, %8601
  %8603 = fmul float %8581, %8585
  %8604 = fneg float %8603
  %8605 = tail call float @llvm.fma.f32(float %8581, float %8585, float %8604)
  %8606 = tail call float @llvm.fma.f32(float %8583, float %8585, float %8605)
  %8607 = fadd float %8603, %8606
  %8608 = fsub float %8607, %8603
  %8609 = fsub float %8606, %8608
  %8610 = fadd float %8607, 0x3FE5555540000000
  %8611 = fadd float %8610, 0xBFE5555540000000
  %8612 = fsub float %8607, %8611
  %8613 = fadd float %8609, 0x3E2E720200000000
  %8614 = fadd float %8613, %8612
  %8615 = fadd float %8610, %8614
  %8616 = fsub float %8615, %8610
  %8617 = fsub float %8614, %8616
  %8618 = fmul float %8600, %8615
  %8619 = fneg float %8618
  %8620 = tail call float @llvm.fma.f32(float %8600, float %8615, float %8619)
  %8621 = tail call float @llvm.fma.f32(float %8600, float %8617, float %8620)
  %8622 = tail call float @llvm.fma.f32(float %8602, float %8615, float %8621)
  %8623 = tail call float @llvm.amdgcn.ldexp.f32(float %8575, i32 1)
  %8624 = fadd float %8618, %8622
  %8625 = fsub float %8624, %8618
  %8626 = fsub float %8622, %8625
  %8627 = fadd float %8594, %8624
  %8628 = fsub float %8627, %8594
  %8629 = fsub float %8624, %8628
  %8630 = fadd float %8623, %8626
  %8631 = fadd float %8630, %8629
  %8632 = fadd float %8627, %8631
  %8633 = fsub float %8632, %8627
  %8634 = fsub float %8631, %8633
  %8635 = fadd float %8591, %8632
  %8636 = fsub float %8635, %8591
  %8637 = fsub float %8635, %8636
  %8638 = fsub float %8591, %8637
  %8639 = fsub float %8632, %8636
  %8640 = fadd float %8639, %8638
  %8641 = fadd float %8593, %8634
  %8642 = fsub float %8641, %8593
  %8643 = fsub float %8641, %8642
  %8644 = fsub float %8593, %8643
  %8645 = fsub float %8634, %8642
  %8646 = fadd float %8645, %8644
  %8647 = fadd float %8641, %8640
  %8648 = fadd float %8635, %8647
  %8649 = fsub float %8648, %8635
  %8650 = fsub float %8647, %8649
  %8651 = fadd float %8646, %8650
  %8652 = fadd float %8648, %8651
  %8653 = fsub float %8652, %8648
  %8654 = fsub float %8651, %8653
  %8655 = fmul float %8652, 2.000000e+00
  %8656 = fneg float %8655
  %8657 = tail call float @llvm.fma.f32(float %8652, float 2.000000e+00, float %8656)
  %8658 = fmul float %8652, 0.000000e+00
  %8659 = tail call float @llvm.fma.f32(float %8654, float 2.000000e+00, float %8658)
  %8660 = fadd float %8657, %8659
  %8661 = fadd float %8655, %8660
  %8662 = fsub float %8661, %8655
  %8663 = fsub float %8660, %8662
  %8664 = tail call float @llvm.fabs.f32(float %8655) #3
  %8665 = fcmp oeq float %8664, 0x7FF0000000000000
  %8666 = select i1 %8665, float %8655, float %8661
  %8667 = tail call float @llvm.fabs.f32(float %8666) #3
  %8668 = fcmp oeq float %8667, 0x7FF0000000000000
  %8669 = select i1 %8668, float 0.000000e+00, float %8663
  %8670 = fcmp oeq float %8666, 0x40562E4300000000
  %8671 = select i1 %8670, float 0x3EE0000000000000, float 0.000000e+00
  %8672 = fsub float %8666, %8671
  %8673 = fadd float %8671, %8669
  %8674 = fmul float %8672, 0x3FF7154760000000
  %8675 = tail call float @llvm.rint.f32(float %8674)
  %8676 = fcmp ogt float %8672, 0x40562E4300000000
  %8677 = fcmp olt float %8672, 0xC059D1DA00000000
  %8678 = fneg float %8674
  %8679 = tail call float @llvm.fma.f32(float %8672, float 0x3FF7154760000000, float %8678)
  %8680 = tail call float @llvm.fma.f32(float %8672, float 0x3E54AE0BE0000000, float %8679)
  %8681 = fsub float %8674, %8675
  %8682 = fadd float %8680, %8681
  %8683 = tail call float @llvm.exp2.f32(float %8682)
  %8684 = fptosi float %8675 to i32
  %8685 = tail call float @llvm.amdgcn.ldexp.f32(float %8683, i32 %8684)
  %8686 = select i1 %8677, float 0.000000e+00, float %8685
  %8687 = select i1 %8676, float 0x7FF0000000000000, float %8686
  %8688 = tail call float @llvm.fma.f32(float %8687, float %8673, float %8687)
  %8689 = tail call float @llvm.fabs.f32(float %8687) #3
  %8690 = fcmp oeq float %8689, 0x7FF0000000000000
  %8691 = select i1 %8690, float %8687, float %8688
  %8692 = tail call float @llvm.fabs.f32(float %8691)
  %8693 = fcmp oeq float %8547, 0x7FF0000000000000
  %8694 = fcmp oeq float %8546, 0.000000e+00
  %8695 = select i1 %8693, float 0x7FF0000000000000, float %8692
  %8696 = select i1 %8694, float 0.000000e+00, float %8695
  %8697 = fcmp uno float %8546, 0.000000e+00
  %8698 = select i1 %8697, float 0x7FF8000000000000, float %8696
  %8699 = fadd contract float %8403, -1.000000e+00
  %8700 = tail call float @llvm.fabs.f32(float %8699)
  %8701 = tail call float @llvm.amdgcn.frexp.mant.f32(float %8700)
  %8702 = fcmp olt float %8701, 0x3FE5555560000000
  %8703 = zext i1 %8702 to i32
  %8704 = tail call float @llvm.amdgcn.ldexp.f32(float %8701, i32 %8703)
  %8705 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %8700)
  %8706 = sub nsw i32 %8705, %8703
  %8707 = fadd float %8704, -1.000000e+00
  %8708 = fadd float %8704, 1.000000e+00
  %8709 = fadd float %8708, -1.000000e+00
  %8710 = fsub float %8704, %8709
  %8711 = tail call float @llvm.amdgcn.rcp.f32(float %8708)
  %8712 = fmul float %8707, %8711
  %8713 = fmul float %8708, %8712
  %8714 = fneg float %8713
  %8715 = tail call float @llvm.fma.f32(float %8712, float %8708, float %8714)
  %8716 = tail call float @llvm.fma.f32(float %8712, float %8710, float %8715)
  %8717 = fadd float %8713, %8716
  %8718 = fsub float %8717, %8713
  %8719 = fsub float %8716, %8718
  %8720 = fsub float %8707, %8717
  %8721 = fsub float %8707, %8720
  %8722 = fsub float %8721, %8717
  %8723 = fsub float %8722, %8719
  %8724 = fadd float %8720, %8723
  %8725 = fmul float %8711, %8724
  %8726 = fadd float %8712, %8725
  %8727 = fsub float %8726, %8712
  %8728 = fsub float %8725, %8727
  %8729 = fmul float %8726, %8726
  %8730 = fneg float %8729
  %8731 = tail call float @llvm.fma.f32(float %8726, float %8726, float %8730)
  %8732 = fmul float %8728, 2.000000e+00
  %8733 = tail call float @llvm.fma.f32(float %8726, float %8732, float %8731)
  %8734 = fadd float %8729, %8733
  %8735 = fsub float %8734, %8729
  %8736 = fsub float %8733, %8735
  %8737 = tail call float @llvm.fmuladd.f32(float %8734, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %8738 = tail call float @llvm.fmuladd.f32(float %8734, float %8737, float 0x3FD999BDE0000000)
  %8739 = sitofp i32 %8706 to float
  %8740 = fmul float %8739, 0x3FE62E4300000000
  %8741 = fneg float %8740
  %8742 = tail call float @llvm.fma.f32(float %8739, float 0x3FE62E4300000000, float %8741)
  %8743 = tail call float @llvm.fma.f32(float %8739, float 0xBE205C6100000000, float %8742)
  %8744 = fadd float %8740, %8743
  %8745 = fsub float %8744, %8740
  %8746 = fsub float %8743, %8745
  %8747 = tail call float @llvm.amdgcn.ldexp.f32(float %8726, i32 1)
  %8748 = fmul float %8726, %8734
  %8749 = fneg float %8748
  %8750 = tail call float @llvm.fma.f32(float %8734, float %8726, float %8749)
  %8751 = tail call float @llvm.fma.f32(float %8734, float %8728, float %8750)
  %8752 = tail call float @llvm.fma.f32(float %8736, float %8726, float %8751)
  %8753 = fadd float %8748, %8752
  %8754 = fsub float %8753, %8748
  %8755 = fsub float %8752, %8754
  %8756 = fmul float %8734, %8738
  %8757 = fneg float %8756
  %8758 = tail call float @llvm.fma.f32(float %8734, float %8738, float %8757)
  %8759 = tail call float @llvm.fma.f32(float %8736, float %8738, float %8758)
  %8760 = fadd float %8756, %8759
  %8761 = fsub float %8760, %8756
  %8762 = fsub float %8759, %8761
  %8763 = fadd float %8760, 0x3FE5555540000000
  %8764 = fadd float %8763, 0xBFE5555540000000
  %8765 = fsub float %8760, %8764
  %8766 = fadd float %8762, 0x3E2E720200000000
  %8767 = fadd float %8766, %8765
  %8768 = fadd float %8763, %8767
  %8769 = fsub float %8768, %8763
  %8770 = fsub float %8767, %8769
  %8771 = fmul float %8753, %8768
  %8772 = fneg float %8771
  %8773 = tail call float @llvm.fma.f32(float %8753, float %8768, float %8772)
  %8774 = tail call float @llvm.fma.f32(float %8753, float %8770, float %8773)
  %8775 = tail call float @llvm.fma.f32(float %8755, float %8768, float %8774)
  %8776 = tail call float @llvm.amdgcn.ldexp.f32(float %8728, i32 1)
  %8777 = fadd float %8771, %8775
  %8778 = fsub float %8777, %8771
  %8779 = fsub float %8775, %8778
  %8780 = fadd float %8747, %8777
  %8781 = fsub float %8780, %8747
  %8782 = fsub float %8777, %8781
  %8783 = fadd float %8776, %8779
  %8784 = fadd float %8783, %8782
  %8785 = fadd float %8780, %8784
  %8786 = fsub float %8785, %8780
  %8787 = fsub float %8784, %8786
  %8788 = fadd float %8744, %8785
  %8789 = fsub float %8788, %8744
  %8790 = fsub float %8788, %8789
  %8791 = fsub float %8744, %8790
  %8792 = fsub float %8785, %8789
  %8793 = fadd float %8792, %8791
  %8794 = fadd float %8746, %8787
  %8795 = fsub float %8794, %8746
  %8796 = fsub float %8794, %8795
  %8797 = fsub float %8746, %8796
  %8798 = fsub float %8787, %8795
  %8799 = fadd float %8798, %8797
  %8800 = fadd float %8794, %8793
  %8801 = fadd float %8788, %8800
  %8802 = fsub float %8801, %8788
  %8803 = fsub float %8800, %8802
  %8804 = fadd float %8799, %8803
  %8805 = fadd float %8801, %8804
  %8806 = fsub float %8805, %8801
  %8807 = fsub float %8804, %8806
  %8808 = fmul float %8805, 2.000000e+00
  %8809 = fneg float %8808
  %8810 = tail call float @llvm.fma.f32(float %8805, float 2.000000e+00, float %8809)
  %8811 = fmul float %8805, 0.000000e+00
  %8812 = tail call float @llvm.fma.f32(float %8807, float 2.000000e+00, float %8811)
  %8813 = fadd float %8810, %8812
  %8814 = fadd float %8808, %8813
  %8815 = fsub float %8814, %8808
  %8816 = fsub float %8813, %8815
  %8817 = tail call float @llvm.fabs.f32(float %8808) #3
  %8818 = fcmp oeq float %8817, 0x7FF0000000000000
  %8819 = select i1 %8818, float %8808, float %8814
  %8820 = tail call float @llvm.fabs.f32(float %8819) #3
  %8821 = fcmp oeq float %8820, 0x7FF0000000000000
  %8822 = select i1 %8821, float 0.000000e+00, float %8816
  %8823 = fcmp oeq float %8819, 0x40562E4300000000
  %8824 = select i1 %8823, float 0x3EE0000000000000, float 0.000000e+00
  %8825 = fsub float %8819, %8824
  %8826 = fadd float %8824, %8822
  %8827 = fmul float %8825, 0x3FF7154760000000
  %8828 = tail call float @llvm.rint.f32(float %8827)
  %8829 = fcmp ogt float %8825, 0x40562E4300000000
  %8830 = fcmp olt float %8825, 0xC059D1DA00000000
  %8831 = fneg float %8827
  %8832 = tail call float @llvm.fma.f32(float %8825, float 0x3FF7154760000000, float %8831)
  %8833 = tail call float @llvm.fma.f32(float %8825, float 0x3E54AE0BE0000000, float %8832)
  %8834 = fsub float %8827, %8828
  %8835 = fadd float %8833, %8834
  %8836 = tail call float @llvm.exp2.f32(float %8835)
  %8837 = fptosi float %8828 to i32
  %8838 = tail call float @llvm.amdgcn.ldexp.f32(float %8836, i32 %8837)
  %8839 = select i1 %8830, float 0.000000e+00, float %8838
  %8840 = select i1 %8829, float 0x7FF0000000000000, float %8839
  %8841 = tail call float @llvm.fma.f32(float %8840, float %8826, float %8840)
  %8842 = tail call float @llvm.fabs.f32(float %8840) #3
  %8843 = fcmp oeq float %8842, 0x7FF0000000000000
  %8844 = select i1 %8843, float %8840, float %8841
  %8845 = tail call float @llvm.fabs.f32(float %8844)
  %8846 = fcmp oeq float %8700, 0x7FF0000000000000
  %8847 = fcmp oeq float %8699, 0.000000e+00
  %8848 = select i1 %8846, float 0x7FF0000000000000, float %8845
  %8849 = select i1 %8847, float 0.000000e+00, float %8848
  %8850 = fcmp uno float %8699, 0.000000e+00
  %8851 = select i1 %8850, float 0x7FF8000000000000, float %8849
  %8852 = fadd contract float %8851, %8698
  %8853 = fadd contract float %8852, 0.000000e+00
  br label %8854

8854:                                             ; preds = %9141, %8521
  %8855 = phi i1 [ true, %8521 ], [ false, %9141 ]
  %8856 = phi i32 [ 0, %8521 ], [ 1, %9141 ]
  %8857 = phi float [ %8853, %8521 ], [ %9322, %9141 ]
  %8858 = zext i32 %8856 to i64
  %8859 = getelementptr inbounds float, float addrspace(1)* %0, i64 %8858
  %8860 = load float, float addrspace(1)* %8859, align 4, !tbaa !4
  %8861 = fadd contract float %8860, -1.000000e+00
  %8862 = fmul contract float %8861, 2.500000e-01
  %8863 = fadd contract float %8862, 1.000000e+00
  %8864 = add nuw nsw i32 %8856, 1
  %8865 = zext i32 %8864 to i64
  %8866 = getelementptr inbounds float, float addrspace(1)* %0, i64 %8865
  %8867 = load float, float addrspace(1)* %8866, align 4, !tbaa !4
  %8868 = fadd contract float %8867, -1.000000e+00
  %8869 = fmul contract float %8868, 2.500000e-01
  %8870 = fadd contract float %8869, 1.000000e+00
  %8871 = fadd contract float %8863, -1.000000e+00
  %8872 = tail call float @llvm.fabs.f32(float %8871)
  %8873 = tail call float @llvm.amdgcn.frexp.mant.f32(float %8872)
  %8874 = fcmp olt float %8873, 0x3FE5555560000000
  %8875 = zext i1 %8874 to i32
  %8876 = tail call float @llvm.amdgcn.ldexp.f32(float %8873, i32 %8875)
  %8877 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %8872)
  %8878 = sub nsw i32 %8877, %8875
  %8879 = fadd float %8876, -1.000000e+00
  %8880 = fadd float %8876, 1.000000e+00
  %8881 = fadd float %8880, -1.000000e+00
  %8882 = fsub float %8876, %8881
  %8883 = tail call float @llvm.amdgcn.rcp.f32(float %8880)
  %8884 = fmul float %8879, %8883
  %8885 = fmul float %8880, %8884
  %8886 = fneg float %8885
  %8887 = tail call float @llvm.fma.f32(float %8884, float %8880, float %8886)
  %8888 = tail call float @llvm.fma.f32(float %8884, float %8882, float %8887)
  %8889 = fadd float %8885, %8888
  %8890 = fsub float %8889, %8885
  %8891 = fsub float %8888, %8890
  %8892 = fsub float %8879, %8889
  %8893 = fsub float %8879, %8892
  %8894 = fsub float %8893, %8889
  %8895 = fsub float %8894, %8891
  %8896 = fadd float %8892, %8895
  %8897 = fmul float %8883, %8896
  %8898 = fadd float %8884, %8897
  %8899 = fsub float %8898, %8884
  %8900 = fsub float %8897, %8899
  %8901 = fmul float %8898, %8898
  %8902 = fneg float %8901
  %8903 = tail call float @llvm.fma.f32(float %8898, float %8898, float %8902)
  %8904 = fmul float %8900, 2.000000e+00
  %8905 = tail call float @llvm.fma.f32(float %8898, float %8904, float %8903)
  %8906 = fadd float %8901, %8905
  %8907 = fsub float %8906, %8901
  %8908 = fsub float %8905, %8907
  %8909 = tail call float @llvm.fmuladd.f32(float %8906, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %8910 = tail call float @llvm.fmuladd.f32(float %8906, float %8909, float 0x3FD999BDE0000000)
  %8911 = sitofp i32 %8878 to float
  %8912 = fmul float %8911, 0x3FE62E4300000000
  %8913 = fneg float %8912
  %8914 = tail call float @llvm.fma.f32(float %8911, float 0x3FE62E4300000000, float %8913)
  %8915 = tail call float @llvm.fma.f32(float %8911, float 0xBE205C6100000000, float %8914)
  %8916 = fadd float %8912, %8915
  %8917 = fsub float %8916, %8912
  %8918 = fsub float %8915, %8917
  %8919 = tail call float @llvm.amdgcn.ldexp.f32(float %8898, i32 1)
  %8920 = fmul float %8898, %8906
  %8921 = fneg float %8920
  %8922 = tail call float @llvm.fma.f32(float %8906, float %8898, float %8921)
  %8923 = tail call float @llvm.fma.f32(float %8906, float %8900, float %8922)
  %8924 = tail call float @llvm.fma.f32(float %8908, float %8898, float %8923)
  %8925 = fadd float %8920, %8924
  %8926 = fsub float %8925, %8920
  %8927 = fsub float %8924, %8926
  %8928 = fmul float %8906, %8910
  %8929 = fneg float %8928
  %8930 = tail call float @llvm.fma.f32(float %8906, float %8910, float %8929)
  %8931 = tail call float @llvm.fma.f32(float %8908, float %8910, float %8930)
  %8932 = fadd float %8928, %8931
  %8933 = fsub float %8932, %8928
  %8934 = fsub float %8931, %8933
  %8935 = fadd float %8932, 0x3FE5555540000000
  %8936 = fadd float %8935, 0xBFE5555540000000
  %8937 = fsub float %8932, %8936
  %8938 = fadd float %8934, 0x3E2E720200000000
  %8939 = fadd float %8938, %8937
  %8940 = fadd float %8935, %8939
  %8941 = fsub float %8940, %8935
  %8942 = fsub float %8939, %8941
  %8943 = fmul float %8925, %8940
  %8944 = fneg float %8943
  %8945 = tail call float @llvm.fma.f32(float %8925, float %8940, float %8944)
  %8946 = tail call float @llvm.fma.f32(float %8925, float %8942, float %8945)
  %8947 = tail call float @llvm.fma.f32(float %8927, float %8940, float %8946)
  %8948 = tail call float @llvm.amdgcn.ldexp.f32(float %8900, i32 1)
  %8949 = fadd float %8943, %8947
  %8950 = fsub float %8949, %8943
  %8951 = fsub float %8947, %8950
  %8952 = fadd float %8919, %8949
  %8953 = fsub float %8952, %8919
  %8954 = fsub float %8949, %8953
  %8955 = fadd float %8948, %8951
  %8956 = fadd float %8955, %8954
  %8957 = fadd float %8952, %8956
  %8958 = fsub float %8957, %8952
  %8959 = fsub float %8956, %8958
  %8960 = fadd float %8916, %8957
  %8961 = fsub float %8960, %8916
  %8962 = fsub float %8960, %8961
  %8963 = fsub float %8916, %8962
  %8964 = fsub float %8957, %8961
  %8965 = fadd float %8964, %8963
  %8966 = fadd float %8918, %8959
  %8967 = fsub float %8966, %8918
  %8968 = fsub float %8966, %8967
  %8969 = fsub float %8918, %8968
  %8970 = fsub float %8959, %8967
  %8971 = fadd float %8970, %8969
  %8972 = fadd float %8966, %8965
  %8973 = fadd float %8960, %8972
  %8974 = fsub float %8973, %8960
  %8975 = fsub float %8972, %8974
  %8976 = fadd float %8971, %8975
  %8977 = fadd float %8973, %8976
  %8978 = fsub float %8977, %8973
  %8979 = fsub float %8976, %8978
  %8980 = fmul float %8977, 2.000000e+00
  %8981 = fneg float %8980
  %8982 = tail call float @llvm.fma.f32(float %8977, float 2.000000e+00, float %8981)
  %8983 = fmul float %8977, 0.000000e+00
  %8984 = tail call float @llvm.fma.f32(float %8979, float 2.000000e+00, float %8983)
  %8985 = fadd float %8982, %8984
  %8986 = fadd float %8980, %8985
  %8987 = fsub float %8986, %8980
  %8988 = fsub float %8985, %8987
  %8989 = tail call float @llvm.fabs.f32(float %8980) #3
  %8990 = fcmp oeq float %8989, 0x7FF0000000000000
  %8991 = select i1 %8990, float %8980, float %8986
  %8992 = tail call float @llvm.fabs.f32(float %8991) #3
  %8993 = fcmp oeq float %8992, 0x7FF0000000000000
  %8994 = select i1 %8993, float 0.000000e+00, float %8988
  %8995 = fcmp oeq float %8991, 0x40562E4300000000
  %8996 = select i1 %8995, float 0x3EE0000000000000, float 0.000000e+00
  %8997 = fsub float %8991, %8996
  %8998 = fadd float %8996, %8994
  %8999 = fmul float %8997, 0x3FF7154760000000
  %9000 = tail call float @llvm.rint.f32(float %8999)
  %9001 = fcmp ogt float %8997, 0x40562E4300000000
  %9002 = fcmp olt float %8997, 0xC059D1DA00000000
  %9003 = fneg float %8999
  %9004 = tail call float @llvm.fma.f32(float %8997, float 0x3FF7154760000000, float %9003)
  %9005 = tail call float @llvm.fma.f32(float %8997, float 0x3E54AE0BE0000000, float %9004)
  %9006 = fsub float %8999, %9000
  %9007 = fadd float %9005, %9006
  %9008 = tail call float @llvm.exp2.f32(float %9007)
  %9009 = fptosi float %9000 to i32
  %9010 = tail call float @llvm.amdgcn.ldexp.f32(float %9008, i32 %9009)
  %9011 = select i1 %9002, float 0.000000e+00, float %9010
  %9012 = select i1 %9001, float 0x7FF0000000000000, float %9011
  %9013 = tail call float @llvm.fma.f32(float %9012, float %8998, float %9012)
  %9014 = tail call float @llvm.fabs.f32(float %9012) #3
  %9015 = fcmp oeq float %9014, 0x7FF0000000000000
  %9016 = select i1 %9015, float %9012, float %9013
  %9017 = tail call float @llvm.fabs.f32(float %9016)
  %9018 = fcmp oeq float %8872, 0x7FF0000000000000
  %9019 = fcmp oeq float %8871, 0.000000e+00
  %9020 = select i1 %9018, float 0x7FF0000000000000, float %9017
  %9021 = select i1 %9019, float 0.000000e+00, float %9020
  %9022 = fcmp uno float %8871, 0.000000e+00
  %9023 = select i1 %9022, float 0x7FF8000000000000, float %9021
  %9024 = fmul contract float %8870, 0x400921CAC0000000
  %9025 = tail call float @llvm.fabs.f32(float %9024)
  %9026 = fcmp olt float %9025, 1.310720e+05
  br i1 %9026, label %9133, label %9027

9027:                                             ; preds = %8854
  %9028 = bitcast float %9025 to i32
  %9029 = lshr i32 %9028, 23
  %9030 = and i32 %9028, 8388607
  %9031 = or i32 %9030, 8388608
  %9032 = zext i32 %9031 to i64
  %9033 = mul nuw nsw i64 %9032, 4266746795
  %9034 = trunc i64 %9033 to i32
  %9035 = lshr i64 %9033, 32
  %9036 = mul nuw nsw i64 %9032, 1011060801
  %9037 = add nuw nsw i64 %9035, %9036
  %9038 = trunc i64 %9037 to i32
  %9039 = lshr i64 %9037, 32
  %9040 = mul nuw nsw i64 %9032, 3680671129
  %9041 = add nuw nsw i64 %9039, %9040
  %9042 = trunc i64 %9041 to i32
  %9043 = lshr i64 %9041, 32
  %9044 = mul nuw nsw i64 %9032, 4113882560
  %9045 = add nuw nsw i64 %9043, %9044
  %9046 = trunc i64 %9045 to i32
  %9047 = lshr i64 %9045, 32
  %9048 = mul nuw nsw i64 %9032, 4230436817
  %9049 = add nuw nsw i64 %9047, %9048
  %9050 = trunc i64 %9049 to i32
  %9051 = lshr i64 %9049, 32
  %9052 = mul nuw nsw i64 %9032, 1313084713
  %9053 = add nuw nsw i64 %9051, %9052
  %9054 = trunc i64 %9053 to i32
  %9055 = lshr i64 %9053, 32
  %9056 = mul nuw nsw i64 %9032, 2734261102
  %9057 = add nuw nsw i64 %9055, %9056
  %9058 = trunc i64 %9057 to i32
  %9059 = lshr i64 %9057, 32
  %9060 = trunc i64 %9059 to i32
  %9061 = add nsw i32 %9029, -120
  %9062 = icmp ugt i32 %9061, 63
  %9063 = select i1 %9062, i32 %9054, i32 %9060
  %9064 = select i1 %9062, i32 %9050, i32 %9058
  %9065 = select i1 %9062, i32 %9046, i32 %9054
  %9066 = select i1 %9062, i32 %9042, i32 %9050
  %9067 = select i1 %9062, i32 %9038, i32 %9046
  %9068 = select i1 %9062, i32 %9034, i32 %9042
  %9069 = select i1 %9062, i32 -64, i32 0
  %9070 = add nsw i32 %9069, %9061
  %9071 = icmp ugt i32 %9070, 31
  %9072 = select i1 %9071, i32 %9064, i32 %9063
  %9073 = select i1 %9071, i32 %9065, i32 %9064
  %9074 = select i1 %9071, i32 %9066, i32 %9065
  %9075 = select i1 %9071, i32 %9067, i32 %9066
  %9076 = select i1 %9071, i32 %9068, i32 %9067
  %9077 = select i1 %9071, i32 -32, i32 0
  %9078 = add nsw i32 %9077, %9070
  %9079 = icmp ugt i32 %9078, 31
  %9080 = select i1 %9079, i32 %9073, i32 %9072
  %9081 = select i1 %9079, i32 %9074, i32 %9073
  %9082 = select i1 %9079, i32 %9075, i32 %9074
  %9083 = select i1 %9079, i32 %9076, i32 %9075
  %9084 = select i1 %9079, i32 -32, i32 0
  %9085 = add nsw i32 %9084, %9078
  %9086 = icmp eq i32 %9085, 0
  %9087 = sub nsw i32 32, %9085
  %9088 = tail call i32 @llvm.fshr.i32(i32 %9080, i32 %9081, i32 %9087)
  %9089 = tail call i32 @llvm.fshr.i32(i32 %9081, i32 %9082, i32 %9087)
  %9090 = tail call i32 @llvm.fshr.i32(i32 %9082, i32 %9083, i32 %9087)
  %9091 = select i1 %9086, i32 %9080, i32 %9088
  %9092 = select i1 %9086, i32 %9081, i32 %9089
  %9093 = select i1 %9086, i32 %9082, i32 %9090
  %9094 = lshr i32 %9091, 29
  %9095 = tail call i32 @llvm.fshl.i32(i32 %9091, i32 %9092, i32 2)
  %9096 = tail call i32 @llvm.fshl.i32(i32 %9092, i32 %9093, i32 2)
  %9097 = tail call i32 @llvm.fshl.i32(i32 %9093, i32 %9083, i32 2)
  %9098 = and i32 %9094, 1
  %9099 = sub nsw i32 0, %9098
  %9100 = shl i32 %9094, 31
  %9101 = xor i32 %9095, %9099
  %9102 = xor i32 %9096, %9099
  %9103 = xor i32 %9097, %9099
  %9104 = tail call i32 @llvm.ctlz.i32(i32 %9101, i1 false), !range !8
  %9105 = sub nsw i32 31, %9104
  %9106 = tail call i32 @llvm.fshr.i32(i32 %9101, i32 %9102, i32 %9105)
  %9107 = tail call i32 @llvm.fshr.i32(i32 %9102, i32 %9103, i32 %9105)
  %9108 = shl nuw nsw i32 %9104, 23
  %9109 = sub nuw nsw i32 1056964608, %9108
  %9110 = lshr i32 %9106, 9
  %9111 = or i32 %9110, %9109
  %9112 = or i32 %9111, %9100
  %9113 = bitcast i32 %9112 to float
  %9114 = tail call i32 @llvm.fshl.i32(i32 %9106, i32 %9107, i32 23)
  %9115 = tail call i32 @llvm.ctlz.i32(i32 %9114, i1 false), !range !8
  %9116 = fmul float %9113, 0x3FF921FB40000000
  %9117 = add nuw nsw i32 %9115, %9104
  %9118 = shl nuw nsw i32 %9117, 23
  %9119 = sub nuw nsw i32 855638016, %9118
  %9120 = sub nsw i32 31, %9115
  %9121 = tail call i32 @llvm.fshr.i32(i32 %9114, i32 %9107, i32 %9120)
  %9122 = lshr i32 %9121, 9
  %9123 = or i32 %9119, %9122
  %9124 = or i32 %9123, %9100
  %9125 = bitcast i32 %9124 to float
  %9126 = fneg float %9116
  %9127 = tail call float @llvm.fma.f32(float %9113, float 0x3FF921FB40000000, float %9126)
  %9128 = tail call float @llvm.fma.f32(float %9113, float 0x3E74442D00000000, float %9127)
  %9129 = tail call float @llvm.fma.f32(float %9125, float 0x3FF921FB40000000, float %9128)
  %9130 = fadd float %9116, %9129
  %9131 = lshr i32 %9091, 30
  %9132 = add nuw nsw i32 %9098, %9131
  br label %9141

9133:                                             ; preds = %8854
  %9134 = fmul float %9025, 0x3FE45F3060000000
  %9135 = tail call float @llvm.rint.f32(float %9134)
  %9136 = tail call float @llvm.fma.f32(float %9135, float 0xBFF921FB40000000, float %9025)
  %9137 = tail call float @llvm.fma.f32(float %9135, float 0xBE74442D00000000, float %9136)
  %9138 = tail call float @llvm.fma.f32(float %9135, float 0xBCF8469880000000, float %9137)
  %9139 = fptosi float %9135 to i32
  %9140 = bitcast float %9025 to i32
  br label %9141

9141:                                             ; preds = %9133, %9027
  %9142 = phi i32 [ %9140, %9133 ], [ %9028, %9027 ]
  %9143 = phi float [ %9138, %9133 ], [ %9130, %9027 ]
  %9144 = phi i32 [ %9139, %9133 ], [ %9132, %9027 ]
  %9145 = fmul float %9143, %9143
  %9146 = tail call float @llvm.fmuladd.f32(float %9145, float 0xBF29833040000000, float 0x3F81103880000000)
  %9147 = tail call float @llvm.fmuladd.f32(float %9145, float %9146, float 0xBFC55553A0000000)
  %9148 = fmul float %9145, %9147
  %9149 = tail call float @llvm.fmuladd.f32(float %9143, float %9148, float %9143)
  %9150 = tail call float @llvm.fmuladd.f32(float %9145, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %9151 = tail call float @llvm.fmuladd.f32(float %9145, float %9150, float 0x3FA5557EE0000000)
  %9152 = tail call float @llvm.fmuladd.f32(float %9145, float %9151, float 0xBFE0000080000000)
  %9153 = tail call float @llvm.fmuladd.f32(float %9145, float %9152, float 1.000000e+00)
  %9154 = and i32 %9144, 1
  %9155 = icmp eq i32 %9154, 0
  %9156 = select i1 %9155, float %9149, float %9153
  %9157 = bitcast float %9156 to i32
  %9158 = shl i32 %9144, 30
  %9159 = and i32 %9158, -2147483648
  %9160 = bitcast float %9024 to i32
  %9161 = xor i32 %9142, %9160
  %9162 = xor i32 %9161, %9159
  %9163 = xor i32 %9162, %9157
  %9164 = bitcast i32 %9163 to float
  %9165 = tail call i1 @llvm.amdgcn.class.f32(float %9025, i32 504)
  %9166 = select i1 %9165, float %9164, float 0x7FF8000000000000
  %9167 = tail call float @llvm.fabs.f32(float %9166)
  %9168 = tail call float @llvm.amdgcn.frexp.mant.f32(float %9167)
  %9169 = fcmp olt float %9168, 0x3FE5555560000000
  %9170 = zext i1 %9169 to i32
  %9171 = tail call float @llvm.amdgcn.ldexp.f32(float %9168, i32 %9170)
  %9172 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %9167)
  %9173 = sub nsw i32 %9172, %9170
  %9174 = fadd float %9171, -1.000000e+00
  %9175 = fadd float %9171, 1.000000e+00
  %9176 = fadd float %9175, -1.000000e+00
  %9177 = fsub float %9171, %9176
  %9178 = tail call float @llvm.amdgcn.rcp.f32(float %9175)
  %9179 = fmul float %9174, %9178
  %9180 = fmul float %9175, %9179
  %9181 = fneg float %9180
  %9182 = tail call float @llvm.fma.f32(float %9179, float %9175, float %9181)
  %9183 = tail call float @llvm.fma.f32(float %9179, float %9177, float %9182)
  %9184 = fadd float %9180, %9183
  %9185 = fsub float %9184, %9180
  %9186 = fsub float %9183, %9185
  %9187 = fsub float %9174, %9184
  %9188 = fsub float %9174, %9187
  %9189 = fsub float %9188, %9184
  %9190 = fsub float %9189, %9186
  %9191 = fadd float %9187, %9190
  %9192 = fmul float %9178, %9191
  %9193 = fadd float %9179, %9192
  %9194 = fsub float %9193, %9179
  %9195 = fsub float %9192, %9194
  %9196 = fmul float %9193, %9193
  %9197 = fneg float %9196
  %9198 = tail call float @llvm.fma.f32(float %9193, float %9193, float %9197)
  %9199 = fmul float %9195, 2.000000e+00
  %9200 = tail call float @llvm.fma.f32(float %9193, float %9199, float %9198)
  %9201 = fadd float %9196, %9200
  %9202 = fsub float %9201, %9196
  %9203 = fsub float %9200, %9202
  %9204 = tail call float @llvm.fmuladd.f32(float %9201, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %9205 = tail call float @llvm.fmuladd.f32(float %9201, float %9204, float 0x3FD999BDE0000000)
  %9206 = sitofp i32 %9173 to float
  %9207 = fmul float %9206, 0x3FE62E4300000000
  %9208 = fneg float %9207
  %9209 = tail call float @llvm.fma.f32(float %9206, float 0x3FE62E4300000000, float %9208)
  %9210 = tail call float @llvm.fma.f32(float %9206, float 0xBE205C6100000000, float %9209)
  %9211 = fadd float %9207, %9210
  %9212 = fsub float %9211, %9207
  %9213 = fsub float %9210, %9212
  %9214 = tail call float @llvm.amdgcn.ldexp.f32(float %9193, i32 1)
  %9215 = fmul float %9193, %9201
  %9216 = fneg float %9215
  %9217 = tail call float @llvm.fma.f32(float %9201, float %9193, float %9216)
  %9218 = tail call float @llvm.fma.f32(float %9201, float %9195, float %9217)
  %9219 = tail call float @llvm.fma.f32(float %9203, float %9193, float %9218)
  %9220 = fadd float %9215, %9219
  %9221 = fsub float %9220, %9215
  %9222 = fsub float %9219, %9221
  %9223 = fmul float %9201, %9205
  %9224 = fneg float %9223
  %9225 = tail call float @llvm.fma.f32(float %9201, float %9205, float %9224)
  %9226 = tail call float @llvm.fma.f32(float %9203, float %9205, float %9225)
  %9227 = fadd float %9223, %9226
  %9228 = fsub float %9227, %9223
  %9229 = fsub float %9226, %9228
  %9230 = fadd float %9227, 0x3FE5555540000000
  %9231 = fadd float %9230, 0xBFE5555540000000
  %9232 = fsub float %9227, %9231
  %9233 = fadd float %9229, 0x3E2E720200000000
  %9234 = fadd float %9233, %9232
  %9235 = fadd float %9230, %9234
  %9236 = fsub float %9235, %9230
  %9237 = fsub float %9234, %9236
  %9238 = fmul float %9220, %9235
  %9239 = fneg float %9238
  %9240 = tail call float @llvm.fma.f32(float %9220, float %9235, float %9239)
  %9241 = tail call float @llvm.fma.f32(float %9220, float %9237, float %9240)
  %9242 = tail call float @llvm.fma.f32(float %9222, float %9235, float %9241)
  %9243 = tail call float @llvm.amdgcn.ldexp.f32(float %9195, i32 1)
  %9244 = fadd float %9238, %9242
  %9245 = fsub float %9244, %9238
  %9246 = fsub float %9242, %9245
  %9247 = fadd float %9214, %9244
  %9248 = fsub float %9247, %9214
  %9249 = fsub float %9244, %9248
  %9250 = fadd float %9243, %9246
  %9251 = fadd float %9250, %9249
  %9252 = fadd float %9247, %9251
  %9253 = fsub float %9252, %9247
  %9254 = fsub float %9251, %9253
  %9255 = fadd float %9211, %9252
  %9256 = fsub float %9255, %9211
  %9257 = fsub float %9255, %9256
  %9258 = fsub float %9211, %9257
  %9259 = fsub float %9252, %9256
  %9260 = fadd float %9259, %9258
  %9261 = fadd float %9213, %9254
  %9262 = fsub float %9261, %9213
  %9263 = fsub float %9261, %9262
  %9264 = fsub float %9213, %9263
  %9265 = fsub float %9254, %9262
  %9266 = fadd float %9265, %9264
  %9267 = fadd float %9261, %9260
  %9268 = fadd float %9255, %9267
  %9269 = fsub float %9268, %9255
  %9270 = fsub float %9267, %9269
  %9271 = fadd float %9266, %9270
  %9272 = fadd float %9268, %9271
  %9273 = fsub float %9272, %9268
  %9274 = fsub float %9271, %9273
  %9275 = fmul float %9272, 2.000000e+00
  %9276 = fneg float %9275
  %9277 = tail call float @llvm.fma.f32(float %9272, float 2.000000e+00, float %9276)
  %9278 = fmul float %9272, 0.000000e+00
  %9279 = tail call float @llvm.fma.f32(float %9274, float 2.000000e+00, float %9278)
  %9280 = fadd float %9277, %9279
  %9281 = fadd float %9275, %9280
  %9282 = fsub float %9281, %9275
  %9283 = fsub float %9280, %9282
  %9284 = tail call float @llvm.fabs.f32(float %9275) #3
  %9285 = fcmp oeq float %9284, 0x7FF0000000000000
  %9286 = select i1 %9285, float %9275, float %9281
  %9287 = tail call float @llvm.fabs.f32(float %9286) #3
  %9288 = fcmp oeq float %9287, 0x7FF0000000000000
  %9289 = select i1 %9288, float 0.000000e+00, float %9283
  %9290 = fcmp oeq float %9286, 0x40562E4300000000
  %9291 = select i1 %9290, float 0x3EE0000000000000, float 0.000000e+00
  %9292 = fsub float %9286, %9291
  %9293 = fadd float %9291, %9289
  %9294 = fmul float %9292, 0x3FF7154760000000
  %9295 = tail call float @llvm.rint.f32(float %9294)
  %9296 = fcmp ogt float %9292, 0x40562E4300000000
  %9297 = fcmp olt float %9292, 0xC059D1DA00000000
  %9298 = fneg float %9294
  %9299 = tail call float @llvm.fma.f32(float %9292, float 0x3FF7154760000000, float %9298)
  %9300 = tail call float @llvm.fma.f32(float %9292, float 0x3E54AE0BE0000000, float %9299)
  %9301 = fsub float %9294, %9295
  %9302 = fadd float %9300, %9301
  %9303 = tail call float @llvm.exp2.f32(float %9302)
  %9304 = fptosi float %9295 to i32
  %9305 = tail call float @llvm.amdgcn.ldexp.f32(float %9303, i32 %9304)
  %9306 = select i1 %9297, float 0.000000e+00, float %9305
  %9307 = select i1 %9296, float 0x7FF0000000000000, float %9306
  %9308 = tail call float @llvm.fma.f32(float %9307, float %9293, float %9307)
  %9309 = tail call float @llvm.fabs.f32(float %9307) #3
  %9310 = fcmp oeq float %9309, 0x7FF0000000000000
  %9311 = select i1 %9310, float %9307, float %9308
  %9312 = tail call float @llvm.fabs.f32(float %9311)
  %9313 = fcmp oeq float %9167, 0x7FF0000000000000
  %9314 = fcmp oeq float %9166, 0.000000e+00
  %9315 = fcmp uno float %9166, 0.000000e+00
  %9316 = fmul contract float %9312, 1.000000e+01
  %9317 = fadd contract float %9316, 1.000000e+00
  %9318 = select i1 %9313, float 0x7FF0000000000000, float %9317
  %9319 = select i1 %9314, float 1.000000e+00, float %9318
  %9320 = select i1 %9315, float 0x7FF8000000000000, float %9319
  %9321 = fmul contract float %9023, %9320
  %9322 = fadd contract float %8857, %9321
  br i1 %8855, label %8854, label %9323, !llvm.loop !9

9323:                                             ; preds = %9141
  %9324 = fcmp contract olt float %8394, %9322
  br i1 %9324, label %9325, label %9327

9325:                                             ; preds = %9323
  store float %7464, float addrspace(1)* %0, align 4, !tbaa !4
  %9326 = getelementptr inbounds float, float addrspace(1)* %0, i64 1
  store float %7467, float addrspace(1)* %9326, align 4, !tbaa !4
  store float %7470, float addrspace(1)* %3, align 4, !tbaa !4
  br label %9327

9327:                                             ; preds = %9325, %9323
  %9328 = getelementptr inbounds float, float addrspace(1)* %1, i64 15
  %9329 = load float, float addrspace(1)* %9328, align 4, !tbaa !4
  %9330 = insertelement <3 x float> poison, float %9329, i64 0
  %9331 = getelementptr inbounds float, float addrspace(1)* %1, i64 16
  %9332 = load float, float addrspace(1)* %9331, align 4, !tbaa !4
  %9333 = insertelement <3 x float> %9330, float %9332, i64 1
  %9334 = getelementptr inbounds float, float addrspace(1)* %1, i64 17
  %9335 = load float, float addrspace(1)* %9334, align 4, !tbaa !4
  %9336 = insertelement <3 x float> %9333, float %9335, i64 2
  %9337 = fadd contract float %9329, -1.000000e+00
  %9338 = fmul contract float %9337, 2.500000e-01
  %9339 = fadd contract float %9338, 1.000000e+00
  %9340 = fadd contract float %9335, -1.000000e+00
  %9341 = fmul contract float %9340, 2.500000e-01
  %9342 = fadd contract float %9341, 1.000000e+00
  %9343 = fmul contract float %9339, 0x400921CAC0000000
  %9344 = tail call float @llvm.fabs.f32(float %9343)
  %9345 = fcmp olt float %9344, 1.310720e+05
  br i1 %9345, label %9452, label %9346

9346:                                             ; preds = %9327
  %9347 = bitcast float %9344 to i32
  %9348 = lshr i32 %9347, 23
  %9349 = and i32 %9347, 8388607
  %9350 = or i32 %9349, 8388608
  %9351 = zext i32 %9350 to i64
  %9352 = mul nuw nsw i64 %9351, 4266746795
  %9353 = trunc i64 %9352 to i32
  %9354 = lshr i64 %9352, 32
  %9355 = mul nuw nsw i64 %9351, 1011060801
  %9356 = add nuw nsw i64 %9354, %9355
  %9357 = trunc i64 %9356 to i32
  %9358 = lshr i64 %9356, 32
  %9359 = mul nuw nsw i64 %9351, 3680671129
  %9360 = add nuw nsw i64 %9358, %9359
  %9361 = trunc i64 %9360 to i32
  %9362 = lshr i64 %9360, 32
  %9363 = mul nuw nsw i64 %9351, 4113882560
  %9364 = add nuw nsw i64 %9362, %9363
  %9365 = trunc i64 %9364 to i32
  %9366 = lshr i64 %9364, 32
  %9367 = mul nuw nsw i64 %9351, 4230436817
  %9368 = add nuw nsw i64 %9366, %9367
  %9369 = trunc i64 %9368 to i32
  %9370 = lshr i64 %9368, 32
  %9371 = mul nuw nsw i64 %9351, 1313084713
  %9372 = add nuw nsw i64 %9370, %9371
  %9373 = trunc i64 %9372 to i32
  %9374 = lshr i64 %9372, 32
  %9375 = mul nuw nsw i64 %9351, 2734261102
  %9376 = add nuw nsw i64 %9374, %9375
  %9377 = trunc i64 %9376 to i32
  %9378 = lshr i64 %9376, 32
  %9379 = trunc i64 %9378 to i32
  %9380 = add nsw i32 %9348, -120
  %9381 = icmp ugt i32 %9380, 63
  %9382 = select i1 %9381, i32 %9373, i32 %9379
  %9383 = select i1 %9381, i32 %9369, i32 %9377
  %9384 = select i1 %9381, i32 %9365, i32 %9373
  %9385 = select i1 %9381, i32 %9361, i32 %9369
  %9386 = select i1 %9381, i32 %9357, i32 %9365
  %9387 = select i1 %9381, i32 %9353, i32 %9361
  %9388 = select i1 %9381, i32 -64, i32 0
  %9389 = add nsw i32 %9388, %9380
  %9390 = icmp ugt i32 %9389, 31
  %9391 = select i1 %9390, i32 %9383, i32 %9382
  %9392 = select i1 %9390, i32 %9384, i32 %9383
  %9393 = select i1 %9390, i32 %9385, i32 %9384
  %9394 = select i1 %9390, i32 %9386, i32 %9385
  %9395 = select i1 %9390, i32 %9387, i32 %9386
  %9396 = select i1 %9390, i32 -32, i32 0
  %9397 = add nsw i32 %9396, %9389
  %9398 = icmp ugt i32 %9397, 31
  %9399 = select i1 %9398, i32 %9392, i32 %9391
  %9400 = select i1 %9398, i32 %9393, i32 %9392
  %9401 = select i1 %9398, i32 %9394, i32 %9393
  %9402 = select i1 %9398, i32 %9395, i32 %9394
  %9403 = select i1 %9398, i32 -32, i32 0
  %9404 = add nsw i32 %9403, %9397
  %9405 = icmp eq i32 %9404, 0
  %9406 = sub nsw i32 32, %9404
  %9407 = tail call i32 @llvm.fshr.i32(i32 %9399, i32 %9400, i32 %9406)
  %9408 = tail call i32 @llvm.fshr.i32(i32 %9400, i32 %9401, i32 %9406)
  %9409 = tail call i32 @llvm.fshr.i32(i32 %9401, i32 %9402, i32 %9406)
  %9410 = select i1 %9405, i32 %9399, i32 %9407
  %9411 = select i1 %9405, i32 %9400, i32 %9408
  %9412 = select i1 %9405, i32 %9401, i32 %9409
  %9413 = lshr i32 %9410, 29
  %9414 = tail call i32 @llvm.fshl.i32(i32 %9410, i32 %9411, i32 2)
  %9415 = tail call i32 @llvm.fshl.i32(i32 %9411, i32 %9412, i32 2)
  %9416 = tail call i32 @llvm.fshl.i32(i32 %9412, i32 %9402, i32 2)
  %9417 = and i32 %9413, 1
  %9418 = sub nsw i32 0, %9417
  %9419 = shl i32 %9413, 31
  %9420 = xor i32 %9414, %9418
  %9421 = xor i32 %9415, %9418
  %9422 = xor i32 %9416, %9418
  %9423 = tail call i32 @llvm.ctlz.i32(i32 %9420, i1 false), !range !8
  %9424 = sub nsw i32 31, %9423
  %9425 = tail call i32 @llvm.fshr.i32(i32 %9420, i32 %9421, i32 %9424)
  %9426 = tail call i32 @llvm.fshr.i32(i32 %9421, i32 %9422, i32 %9424)
  %9427 = shl nuw nsw i32 %9423, 23
  %9428 = sub nuw nsw i32 1056964608, %9427
  %9429 = lshr i32 %9425, 9
  %9430 = or i32 %9429, %9428
  %9431 = or i32 %9430, %9419
  %9432 = bitcast i32 %9431 to float
  %9433 = tail call i32 @llvm.fshl.i32(i32 %9425, i32 %9426, i32 23)
  %9434 = tail call i32 @llvm.ctlz.i32(i32 %9433, i1 false), !range !8
  %9435 = fmul float %9432, 0x3FF921FB40000000
  %9436 = add nuw nsw i32 %9434, %9423
  %9437 = shl nuw nsw i32 %9436, 23
  %9438 = sub nuw nsw i32 855638016, %9437
  %9439 = sub nsw i32 31, %9434
  %9440 = tail call i32 @llvm.fshr.i32(i32 %9433, i32 %9426, i32 %9439)
  %9441 = lshr i32 %9440, 9
  %9442 = or i32 %9438, %9441
  %9443 = or i32 %9442, %9419
  %9444 = bitcast i32 %9443 to float
  %9445 = fneg float %9435
  %9446 = tail call float @llvm.fma.f32(float %9432, float 0x3FF921FB40000000, float %9445)
  %9447 = tail call float @llvm.fma.f32(float %9432, float 0x3E74442D00000000, float %9446)
  %9448 = tail call float @llvm.fma.f32(float %9444, float 0x3FF921FB40000000, float %9447)
  %9449 = fadd float %9435, %9448
  %9450 = lshr i32 %9410, 30
  %9451 = add nuw nsw i32 %9417, %9450
  br label %9460

9452:                                             ; preds = %9327
  %9453 = fmul float %9344, 0x3FE45F3060000000
  %9454 = tail call float @llvm.rint.f32(float %9453)
  %9455 = tail call float @llvm.fma.f32(float %9454, float 0xBFF921FB40000000, float %9344)
  %9456 = tail call float @llvm.fma.f32(float %9454, float 0xBE74442D00000000, float %9455)
  %9457 = tail call float @llvm.fma.f32(float %9454, float 0xBCF8469880000000, float %9456)
  %9458 = fptosi float %9454 to i32
  %9459 = bitcast float %9344 to i32
  br label %9460

9460:                                             ; preds = %9452, %9346
  %9461 = phi i32 [ %9459, %9452 ], [ %9347, %9346 ]
  %9462 = phi float [ %9457, %9452 ], [ %9449, %9346 ]
  %9463 = phi i32 [ %9458, %9452 ], [ %9451, %9346 ]
  %9464 = fmul float %9462, %9462
  %9465 = tail call float @llvm.fmuladd.f32(float %9464, float 0xBF29833040000000, float 0x3F81103880000000)
  %9466 = tail call float @llvm.fmuladd.f32(float %9464, float %9465, float 0xBFC55553A0000000)
  %9467 = fmul float %9464, %9466
  %9468 = tail call float @llvm.fmuladd.f32(float %9462, float %9467, float %9462)
  %9469 = tail call float @llvm.fmuladd.f32(float %9464, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %9470 = tail call float @llvm.fmuladd.f32(float %9464, float %9469, float 0x3FA5557EE0000000)
  %9471 = tail call float @llvm.fmuladd.f32(float %9464, float %9470, float 0xBFE0000080000000)
  %9472 = tail call float @llvm.fmuladd.f32(float %9464, float %9471, float 1.000000e+00)
  %9473 = and i32 %9463, 1
  %9474 = icmp eq i32 %9473, 0
  %9475 = select i1 %9474, float %9468, float %9472
  %9476 = bitcast float %9475 to i32
  %9477 = shl i32 %9463, 30
  %9478 = and i32 %9477, -2147483648
  %9479 = bitcast float %9343 to i32
  %9480 = xor i32 %9461, %9479
  %9481 = xor i32 %9480, %9478
  %9482 = xor i32 %9481, %9476
  %9483 = bitcast i32 %9482 to float
  %9484 = tail call i1 @llvm.amdgcn.class.f32(float %9344, i32 504)
  %9485 = select i1 %9484, float %9483, float 0x7FF8000000000000
  %9486 = tail call float @llvm.fabs.f32(float %9485)
  %9487 = tail call float @llvm.amdgcn.frexp.mant.f32(float %9486)
  %9488 = fcmp olt float %9487, 0x3FE5555560000000
  %9489 = zext i1 %9488 to i32
  %9490 = tail call float @llvm.amdgcn.ldexp.f32(float %9487, i32 %9489)
  %9491 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %9486)
  %9492 = sub nsw i32 %9491, %9489
  %9493 = fadd float %9490, -1.000000e+00
  %9494 = fadd float %9490, 1.000000e+00
  %9495 = fadd float %9494, -1.000000e+00
  %9496 = fsub float %9490, %9495
  %9497 = tail call float @llvm.amdgcn.rcp.f32(float %9494)
  %9498 = fmul float %9493, %9497
  %9499 = fmul float %9494, %9498
  %9500 = fneg float %9499
  %9501 = tail call float @llvm.fma.f32(float %9498, float %9494, float %9500)
  %9502 = tail call float @llvm.fma.f32(float %9498, float %9496, float %9501)
  %9503 = fadd float %9499, %9502
  %9504 = fsub float %9503, %9499
  %9505 = fsub float %9502, %9504
  %9506 = fsub float %9493, %9503
  %9507 = fsub float %9493, %9506
  %9508 = fsub float %9507, %9503
  %9509 = fsub float %9508, %9505
  %9510 = fadd float %9506, %9509
  %9511 = fmul float %9497, %9510
  %9512 = fadd float %9498, %9511
  %9513 = fsub float %9512, %9498
  %9514 = fsub float %9511, %9513
  %9515 = fmul float %9512, %9512
  %9516 = fneg float %9515
  %9517 = tail call float @llvm.fma.f32(float %9512, float %9512, float %9516)
  %9518 = fmul float %9514, 2.000000e+00
  %9519 = tail call float @llvm.fma.f32(float %9512, float %9518, float %9517)
  %9520 = fadd float %9515, %9519
  %9521 = fsub float %9520, %9515
  %9522 = fsub float %9519, %9521
  %9523 = tail call float @llvm.fmuladd.f32(float %9520, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %9524 = tail call float @llvm.fmuladd.f32(float %9520, float %9523, float 0x3FD999BDE0000000)
  %9525 = sitofp i32 %9492 to float
  %9526 = fmul float %9525, 0x3FE62E4300000000
  %9527 = fneg float %9526
  %9528 = tail call float @llvm.fma.f32(float %9525, float 0x3FE62E4300000000, float %9527)
  %9529 = tail call float @llvm.fma.f32(float %9525, float 0xBE205C6100000000, float %9528)
  %9530 = fadd float %9526, %9529
  %9531 = fsub float %9530, %9526
  %9532 = fsub float %9529, %9531
  %9533 = tail call float @llvm.amdgcn.ldexp.f32(float %9512, i32 1)
  %9534 = fmul float %9512, %9520
  %9535 = fneg float %9534
  %9536 = tail call float @llvm.fma.f32(float %9520, float %9512, float %9535)
  %9537 = tail call float @llvm.fma.f32(float %9520, float %9514, float %9536)
  %9538 = tail call float @llvm.fma.f32(float %9522, float %9512, float %9537)
  %9539 = fadd float %9534, %9538
  %9540 = fsub float %9539, %9534
  %9541 = fsub float %9538, %9540
  %9542 = fmul float %9520, %9524
  %9543 = fneg float %9542
  %9544 = tail call float @llvm.fma.f32(float %9520, float %9524, float %9543)
  %9545 = tail call float @llvm.fma.f32(float %9522, float %9524, float %9544)
  %9546 = fadd float %9542, %9545
  %9547 = fsub float %9546, %9542
  %9548 = fsub float %9545, %9547
  %9549 = fadd float %9546, 0x3FE5555540000000
  %9550 = fadd float %9549, 0xBFE5555540000000
  %9551 = fsub float %9546, %9550
  %9552 = fadd float %9548, 0x3E2E720200000000
  %9553 = fadd float %9552, %9551
  %9554 = fadd float %9549, %9553
  %9555 = fsub float %9554, %9549
  %9556 = fsub float %9553, %9555
  %9557 = fmul float %9539, %9554
  %9558 = fneg float %9557
  %9559 = tail call float @llvm.fma.f32(float %9539, float %9554, float %9558)
  %9560 = tail call float @llvm.fma.f32(float %9539, float %9556, float %9559)
  %9561 = tail call float @llvm.fma.f32(float %9541, float %9554, float %9560)
  %9562 = tail call float @llvm.amdgcn.ldexp.f32(float %9514, i32 1)
  %9563 = fadd float %9557, %9561
  %9564 = fsub float %9563, %9557
  %9565 = fsub float %9561, %9564
  %9566 = fadd float %9533, %9563
  %9567 = fsub float %9566, %9533
  %9568 = fsub float %9563, %9567
  %9569 = fadd float %9562, %9565
  %9570 = fadd float %9569, %9568
  %9571 = fadd float %9566, %9570
  %9572 = fsub float %9571, %9566
  %9573 = fsub float %9570, %9572
  %9574 = fadd float %9530, %9571
  %9575 = fsub float %9574, %9530
  %9576 = fsub float %9574, %9575
  %9577 = fsub float %9530, %9576
  %9578 = fsub float %9571, %9575
  %9579 = fadd float %9578, %9577
  %9580 = fadd float %9532, %9573
  %9581 = fsub float %9580, %9532
  %9582 = fsub float %9580, %9581
  %9583 = fsub float %9532, %9582
  %9584 = fsub float %9573, %9581
  %9585 = fadd float %9584, %9583
  %9586 = fadd float %9580, %9579
  %9587 = fadd float %9574, %9586
  %9588 = fsub float %9587, %9574
  %9589 = fsub float %9586, %9588
  %9590 = fadd float %9585, %9589
  %9591 = fadd float %9587, %9590
  %9592 = fsub float %9591, %9587
  %9593 = fsub float %9590, %9592
  %9594 = fmul float %9591, 2.000000e+00
  %9595 = fneg float %9594
  %9596 = tail call float @llvm.fma.f32(float %9591, float 2.000000e+00, float %9595)
  %9597 = fmul float %9591, 0.000000e+00
  %9598 = tail call float @llvm.fma.f32(float %9593, float 2.000000e+00, float %9597)
  %9599 = fadd float %9596, %9598
  %9600 = fadd float %9594, %9599
  %9601 = fsub float %9600, %9594
  %9602 = fsub float %9599, %9601
  %9603 = tail call float @llvm.fabs.f32(float %9594) #3
  %9604 = fcmp oeq float %9603, 0x7FF0000000000000
  %9605 = select i1 %9604, float %9594, float %9600
  %9606 = tail call float @llvm.fabs.f32(float %9605) #3
  %9607 = fcmp oeq float %9606, 0x7FF0000000000000
  %9608 = select i1 %9607, float 0.000000e+00, float %9602
  %9609 = fcmp oeq float %9605, 0x40562E4300000000
  %9610 = select i1 %9609, float 0x3EE0000000000000, float 0.000000e+00
  %9611 = fsub float %9605, %9610
  %9612 = fadd float %9610, %9608
  %9613 = fmul float %9611, 0x3FF7154760000000
  %9614 = tail call float @llvm.rint.f32(float %9613)
  %9615 = fcmp ogt float %9611, 0x40562E4300000000
  %9616 = fcmp olt float %9611, 0xC059D1DA00000000
  %9617 = fneg float %9613
  %9618 = tail call float @llvm.fma.f32(float %9611, float 0x3FF7154760000000, float %9617)
  %9619 = tail call float @llvm.fma.f32(float %9611, float 0x3E54AE0BE0000000, float %9618)
  %9620 = fsub float %9613, %9614
  %9621 = fadd float %9619, %9620
  %9622 = tail call float @llvm.exp2.f32(float %9621)
  %9623 = fptosi float %9614 to i32
  %9624 = tail call float @llvm.amdgcn.ldexp.f32(float %9622, i32 %9623)
  %9625 = select i1 %9616, float 0.000000e+00, float %9624
  %9626 = select i1 %9615, float 0x7FF0000000000000, float %9625
  %9627 = tail call float @llvm.fma.f32(float %9626, float %9612, float %9626)
  %9628 = tail call float @llvm.fabs.f32(float %9626) #3
  %9629 = fcmp oeq float %9628, 0x7FF0000000000000
  %9630 = select i1 %9629, float %9626, float %9627
  %9631 = tail call float @llvm.fabs.f32(float %9630)
  %9632 = fcmp oeq float %9486, 0x7FF0000000000000
  %9633 = fcmp oeq float %9485, 0.000000e+00
  %9634 = select i1 %9632, float 0x7FF0000000000000, float %9631
  %9635 = select i1 %9633, float 0.000000e+00, float %9634
  %9636 = fcmp uno float %9485, 0.000000e+00
  %9637 = select i1 %9636, float 0x7FF8000000000000, float %9635
  %9638 = fadd contract float %9342, -1.000000e+00
  %9639 = tail call float @llvm.fabs.f32(float %9638)
  %9640 = tail call float @llvm.amdgcn.frexp.mant.f32(float %9639)
  %9641 = fcmp olt float %9640, 0x3FE5555560000000
  %9642 = zext i1 %9641 to i32
  %9643 = tail call float @llvm.amdgcn.ldexp.f32(float %9640, i32 %9642)
  %9644 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %9639)
  %9645 = sub nsw i32 %9644, %9642
  %9646 = fadd float %9643, -1.000000e+00
  %9647 = fadd float %9643, 1.000000e+00
  %9648 = fadd float %9647, -1.000000e+00
  %9649 = fsub float %9643, %9648
  %9650 = tail call float @llvm.amdgcn.rcp.f32(float %9647)
  %9651 = fmul float %9646, %9650
  %9652 = fmul float %9647, %9651
  %9653 = fneg float %9652
  %9654 = tail call float @llvm.fma.f32(float %9651, float %9647, float %9653)
  %9655 = tail call float @llvm.fma.f32(float %9651, float %9649, float %9654)
  %9656 = fadd float %9652, %9655
  %9657 = fsub float %9656, %9652
  %9658 = fsub float %9655, %9657
  %9659 = fsub float %9646, %9656
  %9660 = fsub float %9646, %9659
  %9661 = fsub float %9660, %9656
  %9662 = fsub float %9661, %9658
  %9663 = fadd float %9659, %9662
  %9664 = fmul float %9650, %9663
  %9665 = fadd float %9651, %9664
  %9666 = fsub float %9665, %9651
  %9667 = fsub float %9664, %9666
  %9668 = fmul float %9665, %9665
  %9669 = fneg float %9668
  %9670 = tail call float @llvm.fma.f32(float %9665, float %9665, float %9669)
  %9671 = fmul float %9667, 2.000000e+00
  %9672 = tail call float @llvm.fma.f32(float %9665, float %9671, float %9670)
  %9673 = fadd float %9668, %9672
  %9674 = fsub float %9673, %9668
  %9675 = fsub float %9672, %9674
  %9676 = tail call float @llvm.fmuladd.f32(float %9673, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %9677 = tail call float @llvm.fmuladd.f32(float %9673, float %9676, float 0x3FD999BDE0000000)
  %9678 = sitofp i32 %9645 to float
  %9679 = fmul float %9678, 0x3FE62E4300000000
  %9680 = fneg float %9679
  %9681 = tail call float @llvm.fma.f32(float %9678, float 0x3FE62E4300000000, float %9680)
  %9682 = tail call float @llvm.fma.f32(float %9678, float 0xBE205C6100000000, float %9681)
  %9683 = fadd float %9679, %9682
  %9684 = fsub float %9683, %9679
  %9685 = fsub float %9682, %9684
  %9686 = tail call float @llvm.amdgcn.ldexp.f32(float %9665, i32 1)
  %9687 = fmul float %9665, %9673
  %9688 = fneg float %9687
  %9689 = tail call float @llvm.fma.f32(float %9673, float %9665, float %9688)
  %9690 = tail call float @llvm.fma.f32(float %9673, float %9667, float %9689)
  %9691 = tail call float @llvm.fma.f32(float %9675, float %9665, float %9690)
  %9692 = fadd float %9687, %9691
  %9693 = fsub float %9692, %9687
  %9694 = fsub float %9691, %9693
  %9695 = fmul float %9673, %9677
  %9696 = fneg float %9695
  %9697 = tail call float @llvm.fma.f32(float %9673, float %9677, float %9696)
  %9698 = tail call float @llvm.fma.f32(float %9675, float %9677, float %9697)
  %9699 = fadd float %9695, %9698
  %9700 = fsub float %9699, %9695
  %9701 = fsub float %9698, %9700
  %9702 = fadd float %9699, 0x3FE5555540000000
  %9703 = fadd float %9702, 0xBFE5555540000000
  %9704 = fsub float %9699, %9703
  %9705 = fadd float %9701, 0x3E2E720200000000
  %9706 = fadd float %9705, %9704
  %9707 = fadd float %9702, %9706
  %9708 = fsub float %9707, %9702
  %9709 = fsub float %9706, %9708
  %9710 = fmul float %9692, %9707
  %9711 = fneg float %9710
  %9712 = tail call float @llvm.fma.f32(float %9692, float %9707, float %9711)
  %9713 = tail call float @llvm.fma.f32(float %9692, float %9709, float %9712)
  %9714 = tail call float @llvm.fma.f32(float %9694, float %9707, float %9713)
  %9715 = tail call float @llvm.amdgcn.ldexp.f32(float %9667, i32 1)
  %9716 = fadd float %9710, %9714
  %9717 = fsub float %9716, %9710
  %9718 = fsub float %9714, %9717
  %9719 = fadd float %9686, %9716
  %9720 = fsub float %9719, %9686
  %9721 = fsub float %9716, %9720
  %9722 = fadd float %9715, %9718
  %9723 = fadd float %9722, %9721
  %9724 = fadd float %9719, %9723
  %9725 = fsub float %9724, %9719
  %9726 = fsub float %9723, %9725
  %9727 = fadd float %9683, %9724
  %9728 = fsub float %9727, %9683
  %9729 = fsub float %9727, %9728
  %9730 = fsub float %9683, %9729
  %9731 = fsub float %9724, %9728
  %9732 = fadd float %9731, %9730
  %9733 = fadd float %9685, %9726
  %9734 = fsub float %9733, %9685
  %9735 = fsub float %9733, %9734
  %9736 = fsub float %9685, %9735
  %9737 = fsub float %9726, %9734
  %9738 = fadd float %9737, %9736
  %9739 = fadd float %9733, %9732
  %9740 = fadd float %9727, %9739
  %9741 = fsub float %9740, %9727
  %9742 = fsub float %9739, %9741
  %9743 = fadd float %9738, %9742
  %9744 = fadd float %9740, %9743
  %9745 = fsub float %9744, %9740
  %9746 = fsub float %9743, %9745
  %9747 = fmul float %9744, 2.000000e+00
  %9748 = fneg float %9747
  %9749 = tail call float @llvm.fma.f32(float %9744, float 2.000000e+00, float %9748)
  %9750 = fmul float %9744, 0.000000e+00
  %9751 = tail call float @llvm.fma.f32(float %9746, float 2.000000e+00, float %9750)
  %9752 = fadd float %9749, %9751
  %9753 = fadd float %9747, %9752
  %9754 = fsub float %9753, %9747
  %9755 = fsub float %9752, %9754
  %9756 = tail call float @llvm.fabs.f32(float %9747) #3
  %9757 = fcmp oeq float %9756, 0x7FF0000000000000
  %9758 = select i1 %9757, float %9747, float %9753
  %9759 = tail call float @llvm.fabs.f32(float %9758) #3
  %9760 = fcmp oeq float %9759, 0x7FF0000000000000
  %9761 = select i1 %9760, float 0.000000e+00, float %9755
  %9762 = fcmp oeq float %9758, 0x40562E4300000000
  %9763 = select i1 %9762, float 0x3EE0000000000000, float 0.000000e+00
  %9764 = fsub float %9758, %9763
  %9765 = fadd float %9763, %9761
  %9766 = fmul float %9764, 0x3FF7154760000000
  %9767 = tail call float @llvm.rint.f32(float %9766)
  %9768 = fcmp ogt float %9764, 0x40562E4300000000
  %9769 = fcmp olt float %9764, 0xC059D1DA00000000
  %9770 = fneg float %9766
  %9771 = tail call float @llvm.fma.f32(float %9764, float 0x3FF7154760000000, float %9770)
  %9772 = tail call float @llvm.fma.f32(float %9764, float 0x3E54AE0BE0000000, float %9771)
  %9773 = fsub float %9766, %9767
  %9774 = fadd float %9772, %9773
  %9775 = tail call float @llvm.exp2.f32(float %9774)
  %9776 = fptosi float %9767 to i32
  %9777 = tail call float @llvm.amdgcn.ldexp.f32(float %9775, i32 %9776)
  %9778 = select i1 %9769, float 0.000000e+00, float %9777
  %9779 = select i1 %9768, float 0x7FF0000000000000, float %9778
  %9780 = tail call float @llvm.fma.f32(float %9779, float %9765, float %9779)
  %9781 = tail call float @llvm.fabs.f32(float %9779) #3
  %9782 = fcmp oeq float %9781, 0x7FF0000000000000
  %9783 = select i1 %9782, float %9779, float %9780
  %9784 = tail call float @llvm.fabs.f32(float %9783)
  %9785 = fcmp oeq float %9639, 0x7FF0000000000000
  %9786 = fcmp oeq float %9638, 0.000000e+00
  %9787 = select i1 %9785, float 0x7FF0000000000000, float %9784
  %9788 = select i1 %9786, float 0.000000e+00, float %9787
  %9789 = fcmp uno float %9638, 0.000000e+00
  %9790 = select i1 %9789, float 0x7FF8000000000000, float %9788
  %9791 = fadd contract float %9790, %9637
  %9792 = fadd contract float %9791, 0.000000e+00
  br label %9793

9793:                                             ; preds = %10078, %9460
  %9794 = phi i1 [ true, %9460 ], [ false, %10078 ]
  %9795 = phi i32 [ 0, %9460 ], [ 1, %10078 ]
  %9796 = phi float [ %9792, %9460 ], [ %10259, %10078 ]
  %9797 = zext i32 %9795 to i64
  %9798 = extractelement <3 x float> %9336, i64 %9797
  %9799 = fadd contract float %9798, -1.000000e+00
  %9800 = fmul contract float %9799, 2.500000e-01
  %9801 = fadd contract float %9800, 1.000000e+00
  %9802 = add nuw nsw i32 %9795, 1
  %9803 = zext i32 %9802 to i64
  %9804 = extractelement <3 x float> %9336, i64 %9803
  %9805 = fadd contract float %9804, -1.000000e+00
  %9806 = fmul contract float %9805, 2.500000e-01
  %9807 = fadd contract float %9806, 1.000000e+00
  %9808 = fadd contract float %9801, -1.000000e+00
  %9809 = tail call float @llvm.fabs.f32(float %9808)
  %9810 = tail call float @llvm.amdgcn.frexp.mant.f32(float %9809)
  %9811 = fcmp olt float %9810, 0x3FE5555560000000
  %9812 = zext i1 %9811 to i32
  %9813 = tail call float @llvm.amdgcn.ldexp.f32(float %9810, i32 %9812)
  %9814 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %9809)
  %9815 = sub nsw i32 %9814, %9812
  %9816 = fadd float %9813, -1.000000e+00
  %9817 = fadd float %9813, 1.000000e+00
  %9818 = fadd float %9817, -1.000000e+00
  %9819 = fsub float %9813, %9818
  %9820 = tail call float @llvm.amdgcn.rcp.f32(float %9817)
  %9821 = fmul float %9816, %9820
  %9822 = fmul float %9817, %9821
  %9823 = fneg float %9822
  %9824 = tail call float @llvm.fma.f32(float %9821, float %9817, float %9823)
  %9825 = tail call float @llvm.fma.f32(float %9821, float %9819, float %9824)
  %9826 = fadd float %9822, %9825
  %9827 = fsub float %9826, %9822
  %9828 = fsub float %9825, %9827
  %9829 = fsub float %9816, %9826
  %9830 = fsub float %9816, %9829
  %9831 = fsub float %9830, %9826
  %9832 = fsub float %9831, %9828
  %9833 = fadd float %9829, %9832
  %9834 = fmul float %9820, %9833
  %9835 = fadd float %9821, %9834
  %9836 = fsub float %9835, %9821
  %9837 = fsub float %9834, %9836
  %9838 = fmul float %9835, %9835
  %9839 = fneg float %9838
  %9840 = tail call float @llvm.fma.f32(float %9835, float %9835, float %9839)
  %9841 = fmul float %9837, 2.000000e+00
  %9842 = tail call float @llvm.fma.f32(float %9835, float %9841, float %9840)
  %9843 = fadd float %9838, %9842
  %9844 = fsub float %9843, %9838
  %9845 = fsub float %9842, %9844
  %9846 = tail call float @llvm.fmuladd.f32(float %9843, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %9847 = tail call float @llvm.fmuladd.f32(float %9843, float %9846, float 0x3FD999BDE0000000)
  %9848 = sitofp i32 %9815 to float
  %9849 = fmul float %9848, 0x3FE62E4300000000
  %9850 = fneg float %9849
  %9851 = tail call float @llvm.fma.f32(float %9848, float 0x3FE62E4300000000, float %9850)
  %9852 = tail call float @llvm.fma.f32(float %9848, float 0xBE205C6100000000, float %9851)
  %9853 = fadd float %9849, %9852
  %9854 = fsub float %9853, %9849
  %9855 = fsub float %9852, %9854
  %9856 = tail call float @llvm.amdgcn.ldexp.f32(float %9835, i32 1)
  %9857 = fmul float %9835, %9843
  %9858 = fneg float %9857
  %9859 = tail call float @llvm.fma.f32(float %9843, float %9835, float %9858)
  %9860 = tail call float @llvm.fma.f32(float %9843, float %9837, float %9859)
  %9861 = tail call float @llvm.fma.f32(float %9845, float %9835, float %9860)
  %9862 = fadd float %9857, %9861
  %9863 = fsub float %9862, %9857
  %9864 = fsub float %9861, %9863
  %9865 = fmul float %9843, %9847
  %9866 = fneg float %9865
  %9867 = tail call float @llvm.fma.f32(float %9843, float %9847, float %9866)
  %9868 = tail call float @llvm.fma.f32(float %9845, float %9847, float %9867)
  %9869 = fadd float %9865, %9868
  %9870 = fsub float %9869, %9865
  %9871 = fsub float %9868, %9870
  %9872 = fadd float %9869, 0x3FE5555540000000
  %9873 = fadd float %9872, 0xBFE5555540000000
  %9874 = fsub float %9869, %9873
  %9875 = fadd float %9871, 0x3E2E720200000000
  %9876 = fadd float %9875, %9874
  %9877 = fadd float %9872, %9876
  %9878 = fsub float %9877, %9872
  %9879 = fsub float %9876, %9878
  %9880 = fmul float %9862, %9877
  %9881 = fneg float %9880
  %9882 = tail call float @llvm.fma.f32(float %9862, float %9877, float %9881)
  %9883 = tail call float @llvm.fma.f32(float %9862, float %9879, float %9882)
  %9884 = tail call float @llvm.fma.f32(float %9864, float %9877, float %9883)
  %9885 = tail call float @llvm.amdgcn.ldexp.f32(float %9837, i32 1)
  %9886 = fadd float %9880, %9884
  %9887 = fsub float %9886, %9880
  %9888 = fsub float %9884, %9887
  %9889 = fadd float %9856, %9886
  %9890 = fsub float %9889, %9856
  %9891 = fsub float %9886, %9890
  %9892 = fadd float %9885, %9888
  %9893 = fadd float %9892, %9891
  %9894 = fadd float %9889, %9893
  %9895 = fsub float %9894, %9889
  %9896 = fsub float %9893, %9895
  %9897 = fadd float %9853, %9894
  %9898 = fsub float %9897, %9853
  %9899 = fsub float %9897, %9898
  %9900 = fsub float %9853, %9899
  %9901 = fsub float %9894, %9898
  %9902 = fadd float %9901, %9900
  %9903 = fadd float %9855, %9896
  %9904 = fsub float %9903, %9855
  %9905 = fsub float %9903, %9904
  %9906 = fsub float %9855, %9905
  %9907 = fsub float %9896, %9904
  %9908 = fadd float %9907, %9906
  %9909 = fadd float %9903, %9902
  %9910 = fadd float %9897, %9909
  %9911 = fsub float %9910, %9897
  %9912 = fsub float %9909, %9911
  %9913 = fadd float %9908, %9912
  %9914 = fadd float %9910, %9913
  %9915 = fsub float %9914, %9910
  %9916 = fsub float %9913, %9915
  %9917 = fmul float %9914, 2.000000e+00
  %9918 = fneg float %9917
  %9919 = tail call float @llvm.fma.f32(float %9914, float 2.000000e+00, float %9918)
  %9920 = fmul float %9914, 0.000000e+00
  %9921 = tail call float @llvm.fma.f32(float %9916, float 2.000000e+00, float %9920)
  %9922 = fadd float %9919, %9921
  %9923 = fadd float %9917, %9922
  %9924 = fsub float %9923, %9917
  %9925 = fsub float %9922, %9924
  %9926 = tail call float @llvm.fabs.f32(float %9917) #3
  %9927 = fcmp oeq float %9926, 0x7FF0000000000000
  %9928 = select i1 %9927, float %9917, float %9923
  %9929 = tail call float @llvm.fabs.f32(float %9928) #3
  %9930 = fcmp oeq float %9929, 0x7FF0000000000000
  %9931 = select i1 %9930, float 0.000000e+00, float %9925
  %9932 = fcmp oeq float %9928, 0x40562E4300000000
  %9933 = select i1 %9932, float 0x3EE0000000000000, float 0.000000e+00
  %9934 = fsub float %9928, %9933
  %9935 = fadd float %9933, %9931
  %9936 = fmul float %9934, 0x3FF7154760000000
  %9937 = tail call float @llvm.rint.f32(float %9936)
  %9938 = fcmp ogt float %9934, 0x40562E4300000000
  %9939 = fcmp olt float %9934, 0xC059D1DA00000000
  %9940 = fneg float %9936
  %9941 = tail call float @llvm.fma.f32(float %9934, float 0x3FF7154760000000, float %9940)
  %9942 = tail call float @llvm.fma.f32(float %9934, float 0x3E54AE0BE0000000, float %9941)
  %9943 = fsub float %9936, %9937
  %9944 = fadd float %9942, %9943
  %9945 = tail call float @llvm.exp2.f32(float %9944)
  %9946 = fptosi float %9937 to i32
  %9947 = tail call float @llvm.amdgcn.ldexp.f32(float %9945, i32 %9946)
  %9948 = select i1 %9939, float 0.000000e+00, float %9947
  %9949 = select i1 %9938, float 0x7FF0000000000000, float %9948
  %9950 = tail call float @llvm.fma.f32(float %9949, float %9935, float %9949)
  %9951 = tail call float @llvm.fabs.f32(float %9949) #3
  %9952 = fcmp oeq float %9951, 0x7FF0000000000000
  %9953 = select i1 %9952, float %9949, float %9950
  %9954 = tail call float @llvm.fabs.f32(float %9953)
  %9955 = fcmp oeq float %9809, 0x7FF0000000000000
  %9956 = fcmp oeq float %9808, 0.000000e+00
  %9957 = select i1 %9955, float 0x7FF0000000000000, float %9954
  %9958 = select i1 %9956, float 0.000000e+00, float %9957
  %9959 = fcmp uno float %9808, 0.000000e+00
  %9960 = select i1 %9959, float 0x7FF8000000000000, float %9958
  %9961 = fmul contract float %9807, 0x400921CAC0000000
  %9962 = tail call float @llvm.fabs.f32(float %9961)
  %9963 = fcmp olt float %9962, 1.310720e+05
  br i1 %9963, label %10070, label %9964

9964:                                             ; preds = %9793
  %9965 = bitcast float %9962 to i32
  %9966 = lshr i32 %9965, 23
  %9967 = and i32 %9965, 8388607
  %9968 = or i32 %9967, 8388608
  %9969 = zext i32 %9968 to i64
  %9970 = mul nuw nsw i64 %9969, 4266746795
  %9971 = trunc i64 %9970 to i32
  %9972 = lshr i64 %9970, 32
  %9973 = mul nuw nsw i64 %9969, 1011060801
  %9974 = add nuw nsw i64 %9972, %9973
  %9975 = trunc i64 %9974 to i32
  %9976 = lshr i64 %9974, 32
  %9977 = mul nuw nsw i64 %9969, 3680671129
  %9978 = add nuw nsw i64 %9976, %9977
  %9979 = trunc i64 %9978 to i32
  %9980 = lshr i64 %9978, 32
  %9981 = mul nuw nsw i64 %9969, 4113882560
  %9982 = add nuw nsw i64 %9980, %9981
  %9983 = trunc i64 %9982 to i32
  %9984 = lshr i64 %9982, 32
  %9985 = mul nuw nsw i64 %9969, 4230436817
  %9986 = add nuw nsw i64 %9984, %9985
  %9987 = trunc i64 %9986 to i32
  %9988 = lshr i64 %9986, 32
  %9989 = mul nuw nsw i64 %9969, 1313084713
  %9990 = add nuw nsw i64 %9988, %9989
  %9991 = trunc i64 %9990 to i32
  %9992 = lshr i64 %9990, 32
  %9993 = mul nuw nsw i64 %9969, 2734261102
  %9994 = add nuw nsw i64 %9992, %9993
  %9995 = trunc i64 %9994 to i32
  %9996 = lshr i64 %9994, 32
  %9997 = trunc i64 %9996 to i32
  %9998 = add nsw i32 %9966, -120
  %9999 = icmp ugt i32 %9998, 63
  %10000 = select i1 %9999, i32 %9991, i32 %9997
  %10001 = select i1 %9999, i32 %9987, i32 %9995
  %10002 = select i1 %9999, i32 %9983, i32 %9991
  %10003 = select i1 %9999, i32 %9979, i32 %9987
  %10004 = select i1 %9999, i32 %9975, i32 %9983
  %10005 = select i1 %9999, i32 %9971, i32 %9979
  %10006 = select i1 %9999, i32 -64, i32 0
  %10007 = add nsw i32 %10006, %9998
  %10008 = icmp ugt i32 %10007, 31
  %10009 = select i1 %10008, i32 %10001, i32 %10000
  %10010 = select i1 %10008, i32 %10002, i32 %10001
  %10011 = select i1 %10008, i32 %10003, i32 %10002
  %10012 = select i1 %10008, i32 %10004, i32 %10003
  %10013 = select i1 %10008, i32 %10005, i32 %10004
  %10014 = select i1 %10008, i32 -32, i32 0
  %10015 = add nsw i32 %10014, %10007
  %10016 = icmp ugt i32 %10015, 31
  %10017 = select i1 %10016, i32 %10010, i32 %10009
  %10018 = select i1 %10016, i32 %10011, i32 %10010
  %10019 = select i1 %10016, i32 %10012, i32 %10011
  %10020 = select i1 %10016, i32 %10013, i32 %10012
  %10021 = select i1 %10016, i32 -32, i32 0
  %10022 = add nsw i32 %10021, %10015
  %10023 = icmp eq i32 %10022, 0
  %10024 = sub nsw i32 32, %10022
  %10025 = tail call i32 @llvm.fshr.i32(i32 %10017, i32 %10018, i32 %10024)
  %10026 = tail call i32 @llvm.fshr.i32(i32 %10018, i32 %10019, i32 %10024)
  %10027 = tail call i32 @llvm.fshr.i32(i32 %10019, i32 %10020, i32 %10024)
  %10028 = select i1 %10023, i32 %10017, i32 %10025
  %10029 = select i1 %10023, i32 %10018, i32 %10026
  %10030 = select i1 %10023, i32 %10019, i32 %10027
  %10031 = lshr i32 %10028, 29
  %10032 = tail call i32 @llvm.fshl.i32(i32 %10028, i32 %10029, i32 2)
  %10033 = tail call i32 @llvm.fshl.i32(i32 %10029, i32 %10030, i32 2)
  %10034 = tail call i32 @llvm.fshl.i32(i32 %10030, i32 %10020, i32 2)
  %10035 = and i32 %10031, 1
  %10036 = sub nsw i32 0, %10035
  %10037 = shl i32 %10031, 31
  %10038 = xor i32 %10032, %10036
  %10039 = xor i32 %10033, %10036
  %10040 = xor i32 %10034, %10036
  %10041 = tail call i32 @llvm.ctlz.i32(i32 %10038, i1 false), !range !8
  %10042 = sub nsw i32 31, %10041
  %10043 = tail call i32 @llvm.fshr.i32(i32 %10038, i32 %10039, i32 %10042)
  %10044 = tail call i32 @llvm.fshr.i32(i32 %10039, i32 %10040, i32 %10042)
  %10045 = shl nuw nsw i32 %10041, 23
  %10046 = sub nuw nsw i32 1056964608, %10045
  %10047 = lshr i32 %10043, 9
  %10048 = or i32 %10047, %10046
  %10049 = or i32 %10048, %10037
  %10050 = bitcast i32 %10049 to float
  %10051 = tail call i32 @llvm.fshl.i32(i32 %10043, i32 %10044, i32 23)
  %10052 = tail call i32 @llvm.ctlz.i32(i32 %10051, i1 false), !range !8
  %10053 = fmul float %10050, 0x3FF921FB40000000
  %10054 = add nuw nsw i32 %10052, %10041
  %10055 = shl nuw nsw i32 %10054, 23
  %10056 = sub nuw nsw i32 855638016, %10055
  %10057 = sub nsw i32 31, %10052
  %10058 = tail call i32 @llvm.fshr.i32(i32 %10051, i32 %10044, i32 %10057)
  %10059 = lshr i32 %10058, 9
  %10060 = or i32 %10056, %10059
  %10061 = or i32 %10060, %10037
  %10062 = bitcast i32 %10061 to float
  %10063 = fneg float %10053
  %10064 = tail call float @llvm.fma.f32(float %10050, float 0x3FF921FB40000000, float %10063)
  %10065 = tail call float @llvm.fma.f32(float %10050, float 0x3E74442D00000000, float %10064)
  %10066 = tail call float @llvm.fma.f32(float %10062, float 0x3FF921FB40000000, float %10065)
  %10067 = fadd float %10053, %10066
  %10068 = lshr i32 %10028, 30
  %10069 = add nuw nsw i32 %10035, %10068
  br label %10078

10070:                                            ; preds = %9793
  %10071 = fmul float %9962, 0x3FE45F3060000000
  %10072 = tail call float @llvm.rint.f32(float %10071)
  %10073 = tail call float @llvm.fma.f32(float %10072, float 0xBFF921FB40000000, float %9962)
  %10074 = tail call float @llvm.fma.f32(float %10072, float 0xBE74442D00000000, float %10073)
  %10075 = tail call float @llvm.fma.f32(float %10072, float 0xBCF8469880000000, float %10074)
  %10076 = fptosi float %10072 to i32
  %10077 = bitcast float %9962 to i32
  br label %10078

10078:                                            ; preds = %10070, %9964
  %10079 = phi i32 [ %10077, %10070 ], [ %9965, %9964 ]
  %10080 = phi float [ %10075, %10070 ], [ %10067, %9964 ]
  %10081 = phi i32 [ %10076, %10070 ], [ %10069, %9964 ]
  %10082 = fmul float %10080, %10080
  %10083 = tail call float @llvm.fmuladd.f32(float %10082, float 0xBF29833040000000, float 0x3F81103880000000)
  %10084 = tail call float @llvm.fmuladd.f32(float %10082, float %10083, float 0xBFC55553A0000000)
  %10085 = fmul float %10082, %10084
  %10086 = tail call float @llvm.fmuladd.f32(float %10080, float %10085, float %10080)
  %10087 = tail call float @llvm.fmuladd.f32(float %10082, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %10088 = tail call float @llvm.fmuladd.f32(float %10082, float %10087, float 0x3FA5557EE0000000)
  %10089 = tail call float @llvm.fmuladd.f32(float %10082, float %10088, float 0xBFE0000080000000)
  %10090 = tail call float @llvm.fmuladd.f32(float %10082, float %10089, float 1.000000e+00)
  %10091 = and i32 %10081, 1
  %10092 = icmp eq i32 %10091, 0
  %10093 = select i1 %10092, float %10086, float %10090
  %10094 = bitcast float %10093 to i32
  %10095 = shl i32 %10081, 30
  %10096 = and i32 %10095, -2147483648
  %10097 = bitcast float %9961 to i32
  %10098 = xor i32 %10079, %10097
  %10099 = xor i32 %10098, %10096
  %10100 = xor i32 %10099, %10094
  %10101 = bitcast i32 %10100 to float
  %10102 = tail call i1 @llvm.amdgcn.class.f32(float %9962, i32 504)
  %10103 = select i1 %10102, float %10101, float 0x7FF8000000000000
  %10104 = tail call float @llvm.fabs.f32(float %10103)
  %10105 = tail call float @llvm.amdgcn.frexp.mant.f32(float %10104)
  %10106 = fcmp olt float %10105, 0x3FE5555560000000
  %10107 = zext i1 %10106 to i32
  %10108 = tail call float @llvm.amdgcn.ldexp.f32(float %10105, i32 %10107)
  %10109 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %10104)
  %10110 = sub nsw i32 %10109, %10107
  %10111 = fadd float %10108, -1.000000e+00
  %10112 = fadd float %10108, 1.000000e+00
  %10113 = fadd float %10112, -1.000000e+00
  %10114 = fsub float %10108, %10113
  %10115 = tail call float @llvm.amdgcn.rcp.f32(float %10112)
  %10116 = fmul float %10111, %10115
  %10117 = fmul float %10112, %10116
  %10118 = fneg float %10117
  %10119 = tail call float @llvm.fma.f32(float %10116, float %10112, float %10118)
  %10120 = tail call float @llvm.fma.f32(float %10116, float %10114, float %10119)
  %10121 = fadd float %10117, %10120
  %10122 = fsub float %10121, %10117
  %10123 = fsub float %10120, %10122
  %10124 = fsub float %10111, %10121
  %10125 = fsub float %10111, %10124
  %10126 = fsub float %10125, %10121
  %10127 = fsub float %10126, %10123
  %10128 = fadd float %10124, %10127
  %10129 = fmul float %10115, %10128
  %10130 = fadd float %10116, %10129
  %10131 = fsub float %10130, %10116
  %10132 = fsub float %10129, %10131
  %10133 = fmul float %10130, %10130
  %10134 = fneg float %10133
  %10135 = tail call float @llvm.fma.f32(float %10130, float %10130, float %10134)
  %10136 = fmul float %10132, 2.000000e+00
  %10137 = tail call float @llvm.fma.f32(float %10130, float %10136, float %10135)
  %10138 = fadd float %10133, %10137
  %10139 = fsub float %10138, %10133
  %10140 = fsub float %10137, %10139
  %10141 = tail call float @llvm.fmuladd.f32(float %10138, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %10142 = tail call float @llvm.fmuladd.f32(float %10138, float %10141, float 0x3FD999BDE0000000)
  %10143 = sitofp i32 %10110 to float
  %10144 = fmul float %10143, 0x3FE62E4300000000
  %10145 = fneg float %10144
  %10146 = tail call float @llvm.fma.f32(float %10143, float 0x3FE62E4300000000, float %10145)
  %10147 = tail call float @llvm.fma.f32(float %10143, float 0xBE205C6100000000, float %10146)
  %10148 = fadd float %10144, %10147
  %10149 = fsub float %10148, %10144
  %10150 = fsub float %10147, %10149
  %10151 = tail call float @llvm.amdgcn.ldexp.f32(float %10130, i32 1)
  %10152 = fmul float %10130, %10138
  %10153 = fneg float %10152
  %10154 = tail call float @llvm.fma.f32(float %10138, float %10130, float %10153)
  %10155 = tail call float @llvm.fma.f32(float %10138, float %10132, float %10154)
  %10156 = tail call float @llvm.fma.f32(float %10140, float %10130, float %10155)
  %10157 = fadd float %10152, %10156
  %10158 = fsub float %10157, %10152
  %10159 = fsub float %10156, %10158
  %10160 = fmul float %10138, %10142
  %10161 = fneg float %10160
  %10162 = tail call float @llvm.fma.f32(float %10138, float %10142, float %10161)
  %10163 = tail call float @llvm.fma.f32(float %10140, float %10142, float %10162)
  %10164 = fadd float %10160, %10163
  %10165 = fsub float %10164, %10160
  %10166 = fsub float %10163, %10165
  %10167 = fadd float %10164, 0x3FE5555540000000
  %10168 = fadd float %10167, 0xBFE5555540000000
  %10169 = fsub float %10164, %10168
  %10170 = fadd float %10166, 0x3E2E720200000000
  %10171 = fadd float %10170, %10169
  %10172 = fadd float %10167, %10171
  %10173 = fsub float %10172, %10167
  %10174 = fsub float %10171, %10173
  %10175 = fmul float %10157, %10172
  %10176 = fneg float %10175
  %10177 = tail call float @llvm.fma.f32(float %10157, float %10172, float %10176)
  %10178 = tail call float @llvm.fma.f32(float %10157, float %10174, float %10177)
  %10179 = tail call float @llvm.fma.f32(float %10159, float %10172, float %10178)
  %10180 = tail call float @llvm.amdgcn.ldexp.f32(float %10132, i32 1)
  %10181 = fadd float %10175, %10179
  %10182 = fsub float %10181, %10175
  %10183 = fsub float %10179, %10182
  %10184 = fadd float %10151, %10181
  %10185 = fsub float %10184, %10151
  %10186 = fsub float %10181, %10185
  %10187 = fadd float %10180, %10183
  %10188 = fadd float %10187, %10186
  %10189 = fadd float %10184, %10188
  %10190 = fsub float %10189, %10184
  %10191 = fsub float %10188, %10190
  %10192 = fadd float %10148, %10189
  %10193 = fsub float %10192, %10148
  %10194 = fsub float %10192, %10193
  %10195 = fsub float %10148, %10194
  %10196 = fsub float %10189, %10193
  %10197 = fadd float %10196, %10195
  %10198 = fadd float %10150, %10191
  %10199 = fsub float %10198, %10150
  %10200 = fsub float %10198, %10199
  %10201 = fsub float %10150, %10200
  %10202 = fsub float %10191, %10199
  %10203 = fadd float %10202, %10201
  %10204 = fadd float %10198, %10197
  %10205 = fadd float %10192, %10204
  %10206 = fsub float %10205, %10192
  %10207 = fsub float %10204, %10206
  %10208 = fadd float %10203, %10207
  %10209 = fadd float %10205, %10208
  %10210 = fsub float %10209, %10205
  %10211 = fsub float %10208, %10210
  %10212 = fmul float %10209, 2.000000e+00
  %10213 = fneg float %10212
  %10214 = tail call float @llvm.fma.f32(float %10209, float 2.000000e+00, float %10213)
  %10215 = fmul float %10209, 0.000000e+00
  %10216 = tail call float @llvm.fma.f32(float %10211, float 2.000000e+00, float %10215)
  %10217 = fadd float %10214, %10216
  %10218 = fadd float %10212, %10217
  %10219 = fsub float %10218, %10212
  %10220 = fsub float %10217, %10219
  %10221 = tail call float @llvm.fabs.f32(float %10212) #3
  %10222 = fcmp oeq float %10221, 0x7FF0000000000000
  %10223 = select i1 %10222, float %10212, float %10218
  %10224 = tail call float @llvm.fabs.f32(float %10223) #3
  %10225 = fcmp oeq float %10224, 0x7FF0000000000000
  %10226 = select i1 %10225, float 0.000000e+00, float %10220
  %10227 = fcmp oeq float %10223, 0x40562E4300000000
  %10228 = select i1 %10227, float 0x3EE0000000000000, float 0.000000e+00
  %10229 = fsub float %10223, %10228
  %10230 = fadd float %10228, %10226
  %10231 = fmul float %10229, 0x3FF7154760000000
  %10232 = tail call float @llvm.rint.f32(float %10231)
  %10233 = fcmp ogt float %10229, 0x40562E4300000000
  %10234 = fcmp olt float %10229, 0xC059D1DA00000000
  %10235 = fneg float %10231
  %10236 = tail call float @llvm.fma.f32(float %10229, float 0x3FF7154760000000, float %10235)
  %10237 = tail call float @llvm.fma.f32(float %10229, float 0x3E54AE0BE0000000, float %10236)
  %10238 = fsub float %10231, %10232
  %10239 = fadd float %10237, %10238
  %10240 = tail call float @llvm.exp2.f32(float %10239)
  %10241 = fptosi float %10232 to i32
  %10242 = tail call float @llvm.amdgcn.ldexp.f32(float %10240, i32 %10241)
  %10243 = select i1 %10234, float 0.000000e+00, float %10242
  %10244 = select i1 %10233, float 0x7FF0000000000000, float %10243
  %10245 = tail call float @llvm.fma.f32(float %10244, float %10230, float %10244)
  %10246 = tail call float @llvm.fabs.f32(float %10244) #3
  %10247 = fcmp oeq float %10246, 0x7FF0000000000000
  %10248 = select i1 %10247, float %10244, float %10245
  %10249 = tail call float @llvm.fabs.f32(float %10248)
  %10250 = fcmp oeq float %10104, 0x7FF0000000000000
  %10251 = fcmp oeq float %10103, 0.000000e+00
  %10252 = fcmp uno float %10103, 0.000000e+00
  %10253 = fmul contract float %10249, 1.000000e+01
  %10254 = fadd contract float %10253, 1.000000e+00
  %10255 = select i1 %10250, float 0x7FF0000000000000, float %10254
  %10256 = select i1 %10251, float 1.000000e+00, float %10255
  %10257 = select i1 %10252, float 0x7FF8000000000000, float %10256
  %10258 = fmul contract float %9960, %10257
  %10259 = fadd contract float %9796, %10258
  br i1 %9794, label %9793, label %10260, !llvm.loop !9

10260:                                            ; preds = %10078
  %10261 = load float, float addrspace(1)* %0, align 4, !tbaa !4
  %10262 = fadd contract float %10261, -1.000000e+00
  %10263 = fmul contract float %10262, 2.500000e-01
  %10264 = fadd contract float %10263, 1.000000e+00
  %10265 = load float, float addrspace(1)* %3, align 4, !tbaa !4
  %10266 = fadd contract float %10265, -1.000000e+00
  %10267 = fmul contract float %10266, 2.500000e-01
  %10268 = fadd contract float %10267, 1.000000e+00
  %10269 = fmul contract float %10264, 0x400921CAC0000000
  %10270 = tail call float @llvm.fabs.f32(float %10269)
  %10271 = fcmp olt float %10270, 1.310720e+05
  br i1 %10271, label %10378, label %10272

10272:                                            ; preds = %10260
  %10273 = bitcast float %10270 to i32
  %10274 = lshr i32 %10273, 23
  %10275 = and i32 %10273, 8388607
  %10276 = or i32 %10275, 8388608
  %10277 = zext i32 %10276 to i64
  %10278 = mul nuw nsw i64 %10277, 4266746795
  %10279 = trunc i64 %10278 to i32
  %10280 = lshr i64 %10278, 32
  %10281 = mul nuw nsw i64 %10277, 1011060801
  %10282 = add nuw nsw i64 %10280, %10281
  %10283 = trunc i64 %10282 to i32
  %10284 = lshr i64 %10282, 32
  %10285 = mul nuw nsw i64 %10277, 3680671129
  %10286 = add nuw nsw i64 %10284, %10285
  %10287 = trunc i64 %10286 to i32
  %10288 = lshr i64 %10286, 32
  %10289 = mul nuw nsw i64 %10277, 4113882560
  %10290 = add nuw nsw i64 %10288, %10289
  %10291 = trunc i64 %10290 to i32
  %10292 = lshr i64 %10290, 32
  %10293 = mul nuw nsw i64 %10277, 4230436817
  %10294 = add nuw nsw i64 %10292, %10293
  %10295 = trunc i64 %10294 to i32
  %10296 = lshr i64 %10294, 32
  %10297 = mul nuw nsw i64 %10277, 1313084713
  %10298 = add nuw nsw i64 %10296, %10297
  %10299 = trunc i64 %10298 to i32
  %10300 = lshr i64 %10298, 32
  %10301 = mul nuw nsw i64 %10277, 2734261102
  %10302 = add nuw nsw i64 %10300, %10301
  %10303 = trunc i64 %10302 to i32
  %10304 = lshr i64 %10302, 32
  %10305 = trunc i64 %10304 to i32
  %10306 = add nsw i32 %10274, -120
  %10307 = icmp ugt i32 %10306, 63
  %10308 = select i1 %10307, i32 %10299, i32 %10305
  %10309 = select i1 %10307, i32 %10295, i32 %10303
  %10310 = select i1 %10307, i32 %10291, i32 %10299
  %10311 = select i1 %10307, i32 %10287, i32 %10295
  %10312 = select i1 %10307, i32 %10283, i32 %10291
  %10313 = select i1 %10307, i32 %10279, i32 %10287
  %10314 = select i1 %10307, i32 -64, i32 0
  %10315 = add nsw i32 %10314, %10306
  %10316 = icmp ugt i32 %10315, 31
  %10317 = select i1 %10316, i32 %10309, i32 %10308
  %10318 = select i1 %10316, i32 %10310, i32 %10309
  %10319 = select i1 %10316, i32 %10311, i32 %10310
  %10320 = select i1 %10316, i32 %10312, i32 %10311
  %10321 = select i1 %10316, i32 %10313, i32 %10312
  %10322 = select i1 %10316, i32 -32, i32 0
  %10323 = add nsw i32 %10322, %10315
  %10324 = icmp ugt i32 %10323, 31
  %10325 = select i1 %10324, i32 %10318, i32 %10317
  %10326 = select i1 %10324, i32 %10319, i32 %10318
  %10327 = select i1 %10324, i32 %10320, i32 %10319
  %10328 = select i1 %10324, i32 %10321, i32 %10320
  %10329 = select i1 %10324, i32 -32, i32 0
  %10330 = add nsw i32 %10329, %10323
  %10331 = icmp eq i32 %10330, 0
  %10332 = sub nsw i32 32, %10330
  %10333 = tail call i32 @llvm.fshr.i32(i32 %10325, i32 %10326, i32 %10332)
  %10334 = tail call i32 @llvm.fshr.i32(i32 %10326, i32 %10327, i32 %10332)
  %10335 = tail call i32 @llvm.fshr.i32(i32 %10327, i32 %10328, i32 %10332)
  %10336 = select i1 %10331, i32 %10325, i32 %10333
  %10337 = select i1 %10331, i32 %10326, i32 %10334
  %10338 = select i1 %10331, i32 %10327, i32 %10335
  %10339 = lshr i32 %10336, 29
  %10340 = tail call i32 @llvm.fshl.i32(i32 %10336, i32 %10337, i32 2)
  %10341 = tail call i32 @llvm.fshl.i32(i32 %10337, i32 %10338, i32 2)
  %10342 = tail call i32 @llvm.fshl.i32(i32 %10338, i32 %10328, i32 2)
  %10343 = and i32 %10339, 1
  %10344 = sub nsw i32 0, %10343
  %10345 = shl i32 %10339, 31
  %10346 = xor i32 %10340, %10344
  %10347 = xor i32 %10341, %10344
  %10348 = xor i32 %10342, %10344
  %10349 = tail call i32 @llvm.ctlz.i32(i32 %10346, i1 false), !range !8
  %10350 = sub nsw i32 31, %10349
  %10351 = tail call i32 @llvm.fshr.i32(i32 %10346, i32 %10347, i32 %10350)
  %10352 = tail call i32 @llvm.fshr.i32(i32 %10347, i32 %10348, i32 %10350)
  %10353 = shl nuw nsw i32 %10349, 23
  %10354 = sub nuw nsw i32 1056964608, %10353
  %10355 = lshr i32 %10351, 9
  %10356 = or i32 %10355, %10354
  %10357 = or i32 %10356, %10345
  %10358 = bitcast i32 %10357 to float
  %10359 = tail call i32 @llvm.fshl.i32(i32 %10351, i32 %10352, i32 23)
  %10360 = tail call i32 @llvm.ctlz.i32(i32 %10359, i1 false), !range !8
  %10361 = fmul float %10358, 0x3FF921FB40000000
  %10362 = add nuw nsw i32 %10360, %10349
  %10363 = shl nuw nsw i32 %10362, 23
  %10364 = sub nuw nsw i32 855638016, %10363
  %10365 = sub nsw i32 31, %10360
  %10366 = tail call i32 @llvm.fshr.i32(i32 %10359, i32 %10352, i32 %10365)
  %10367 = lshr i32 %10366, 9
  %10368 = or i32 %10364, %10367
  %10369 = or i32 %10368, %10345
  %10370 = bitcast i32 %10369 to float
  %10371 = fneg float %10361
  %10372 = tail call float @llvm.fma.f32(float %10358, float 0x3FF921FB40000000, float %10371)
  %10373 = tail call float @llvm.fma.f32(float %10358, float 0x3E74442D00000000, float %10372)
  %10374 = tail call float @llvm.fma.f32(float %10370, float 0x3FF921FB40000000, float %10373)
  %10375 = fadd float %10361, %10374
  %10376 = lshr i32 %10336, 30
  %10377 = add nuw nsw i32 %10343, %10376
  br label %10386

10378:                                            ; preds = %10260
  %10379 = fmul float %10270, 0x3FE45F3060000000
  %10380 = tail call float @llvm.rint.f32(float %10379)
  %10381 = tail call float @llvm.fma.f32(float %10380, float 0xBFF921FB40000000, float %10270)
  %10382 = tail call float @llvm.fma.f32(float %10380, float 0xBE74442D00000000, float %10381)
  %10383 = tail call float @llvm.fma.f32(float %10380, float 0xBCF8469880000000, float %10382)
  %10384 = fptosi float %10380 to i32
  %10385 = bitcast float %10270 to i32
  br label %10386

10386:                                            ; preds = %10378, %10272
  %10387 = phi i32 [ %10385, %10378 ], [ %10273, %10272 ]
  %10388 = phi float [ %10383, %10378 ], [ %10375, %10272 ]
  %10389 = phi i32 [ %10384, %10378 ], [ %10377, %10272 ]
  %10390 = fmul float %10388, %10388
  %10391 = tail call float @llvm.fmuladd.f32(float %10390, float 0xBF29833040000000, float 0x3F81103880000000)
  %10392 = tail call float @llvm.fmuladd.f32(float %10390, float %10391, float 0xBFC55553A0000000)
  %10393 = fmul float %10390, %10392
  %10394 = tail call float @llvm.fmuladd.f32(float %10388, float %10393, float %10388)
  %10395 = tail call float @llvm.fmuladd.f32(float %10390, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %10396 = tail call float @llvm.fmuladd.f32(float %10390, float %10395, float 0x3FA5557EE0000000)
  %10397 = tail call float @llvm.fmuladd.f32(float %10390, float %10396, float 0xBFE0000080000000)
  %10398 = tail call float @llvm.fmuladd.f32(float %10390, float %10397, float 1.000000e+00)
  %10399 = and i32 %10389, 1
  %10400 = icmp eq i32 %10399, 0
  %10401 = select i1 %10400, float %10394, float %10398
  %10402 = bitcast float %10401 to i32
  %10403 = shl i32 %10389, 30
  %10404 = and i32 %10403, -2147483648
  %10405 = bitcast float %10269 to i32
  %10406 = xor i32 %10387, %10405
  %10407 = xor i32 %10406, %10404
  %10408 = xor i32 %10407, %10402
  %10409 = bitcast i32 %10408 to float
  %10410 = tail call i1 @llvm.amdgcn.class.f32(float %10270, i32 504)
  %10411 = select i1 %10410, float %10409, float 0x7FF8000000000000
  %10412 = tail call float @llvm.fabs.f32(float %10411)
  %10413 = tail call float @llvm.amdgcn.frexp.mant.f32(float %10412)
  %10414 = fcmp olt float %10413, 0x3FE5555560000000
  %10415 = zext i1 %10414 to i32
  %10416 = tail call float @llvm.amdgcn.ldexp.f32(float %10413, i32 %10415)
  %10417 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %10412)
  %10418 = sub nsw i32 %10417, %10415
  %10419 = fadd float %10416, -1.000000e+00
  %10420 = fadd float %10416, 1.000000e+00
  %10421 = fadd float %10420, -1.000000e+00
  %10422 = fsub float %10416, %10421
  %10423 = tail call float @llvm.amdgcn.rcp.f32(float %10420)
  %10424 = fmul float %10419, %10423
  %10425 = fmul float %10420, %10424
  %10426 = fneg float %10425
  %10427 = tail call float @llvm.fma.f32(float %10424, float %10420, float %10426)
  %10428 = tail call float @llvm.fma.f32(float %10424, float %10422, float %10427)
  %10429 = fadd float %10425, %10428
  %10430 = fsub float %10429, %10425
  %10431 = fsub float %10428, %10430
  %10432 = fsub float %10419, %10429
  %10433 = fsub float %10419, %10432
  %10434 = fsub float %10433, %10429
  %10435 = fsub float %10434, %10431
  %10436 = fadd float %10432, %10435
  %10437 = fmul float %10423, %10436
  %10438 = fadd float %10424, %10437
  %10439 = fsub float %10438, %10424
  %10440 = fsub float %10437, %10439
  %10441 = fmul float %10438, %10438
  %10442 = fneg float %10441
  %10443 = tail call float @llvm.fma.f32(float %10438, float %10438, float %10442)
  %10444 = fmul float %10440, 2.000000e+00
  %10445 = tail call float @llvm.fma.f32(float %10438, float %10444, float %10443)
  %10446 = fadd float %10441, %10445
  %10447 = fsub float %10446, %10441
  %10448 = fsub float %10445, %10447
  %10449 = tail call float @llvm.fmuladd.f32(float %10446, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %10450 = tail call float @llvm.fmuladd.f32(float %10446, float %10449, float 0x3FD999BDE0000000)
  %10451 = sitofp i32 %10418 to float
  %10452 = fmul float %10451, 0x3FE62E4300000000
  %10453 = fneg float %10452
  %10454 = tail call float @llvm.fma.f32(float %10451, float 0x3FE62E4300000000, float %10453)
  %10455 = tail call float @llvm.fma.f32(float %10451, float 0xBE205C6100000000, float %10454)
  %10456 = fadd float %10452, %10455
  %10457 = fsub float %10456, %10452
  %10458 = fsub float %10455, %10457
  %10459 = tail call float @llvm.amdgcn.ldexp.f32(float %10438, i32 1)
  %10460 = fmul float %10438, %10446
  %10461 = fneg float %10460
  %10462 = tail call float @llvm.fma.f32(float %10446, float %10438, float %10461)
  %10463 = tail call float @llvm.fma.f32(float %10446, float %10440, float %10462)
  %10464 = tail call float @llvm.fma.f32(float %10448, float %10438, float %10463)
  %10465 = fadd float %10460, %10464
  %10466 = fsub float %10465, %10460
  %10467 = fsub float %10464, %10466
  %10468 = fmul float %10446, %10450
  %10469 = fneg float %10468
  %10470 = tail call float @llvm.fma.f32(float %10446, float %10450, float %10469)
  %10471 = tail call float @llvm.fma.f32(float %10448, float %10450, float %10470)
  %10472 = fadd float %10468, %10471
  %10473 = fsub float %10472, %10468
  %10474 = fsub float %10471, %10473
  %10475 = fadd float %10472, 0x3FE5555540000000
  %10476 = fadd float %10475, 0xBFE5555540000000
  %10477 = fsub float %10472, %10476
  %10478 = fadd float %10474, 0x3E2E720200000000
  %10479 = fadd float %10478, %10477
  %10480 = fadd float %10475, %10479
  %10481 = fsub float %10480, %10475
  %10482 = fsub float %10479, %10481
  %10483 = fmul float %10465, %10480
  %10484 = fneg float %10483
  %10485 = tail call float @llvm.fma.f32(float %10465, float %10480, float %10484)
  %10486 = tail call float @llvm.fma.f32(float %10465, float %10482, float %10485)
  %10487 = tail call float @llvm.fma.f32(float %10467, float %10480, float %10486)
  %10488 = tail call float @llvm.amdgcn.ldexp.f32(float %10440, i32 1)
  %10489 = fadd float %10483, %10487
  %10490 = fsub float %10489, %10483
  %10491 = fsub float %10487, %10490
  %10492 = fadd float %10459, %10489
  %10493 = fsub float %10492, %10459
  %10494 = fsub float %10489, %10493
  %10495 = fadd float %10488, %10491
  %10496 = fadd float %10495, %10494
  %10497 = fadd float %10492, %10496
  %10498 = fsub float %10497, %10492
  %10499 = fsub float %10496, %10498
  %10500 = fadd float %10456, %10497
  %10501 = fsub float %10500, %10456
  %10502 = fsub float %10500, %10501
  %10503 = fsub float %10456, %10502
  %10504 = fsub float %10497, %10501
  %10505 = fadd float %10504, %10503
  %10506 = fadd float %10458, %10499
  %10507 = fsub float %10506, %10458
  %10508 = fsub float %10506, %10507
  %10509 = fsub float %10458, %10508
  %10510 = fsub float %10499, %10507
  %10511 = fadd float %10510, %10509
  %10512 = fadd float %10506, %10505
  %10513 = fadd float %10500, %10512
  %10514 = fsub float %10513, %10500
  %10515 = fsub float %10512, %10514
  %10516 = fadd float %10511, %10515
  %10517 = fadd float %10513, %10516
  %10518 = fsub float %10517, %10513
  %10519 = fsub float %10516, %10518
  %10520 = fmul float %10517, 2.000000e+00
  %10521 = fneg float %10520
  %10522 = tail call float @llvm.fma.f32(float %10517, float 2.000000e+00, float %10521)
  %10523 = fmul float %10517, 0.000000e+00
  %10524 = tail call float @llvm.fma.f32(float %10519, float 2.000000e+00, float %10523)
  %10525 = fadd float %10522, %10524
  %10526 = fadd float %10520, %10525
  %10527 = fsub float %10526, %10520
  %10528 = fsub float %10525, %10527
  %10529 = tail call float @llvm.fabs.f32(float %10520) #3
  %10530 = fcmp oeq float %10529, 0x7FF0000000000000
  %10531 = select i1 %10530, float %10520, float %10526
  %10532 = tail call float @llvm.fabs.f32(float %10531) #3
  %10533 = fcmp oeq float %10532, 0x7FF0000000000000
  %10534 = select i1 %10533, float 0.000000e+00, float %10528
  %10535 = fcmp oeq float %10531, 0x40562E4300000000
  %10536 = select i1 %10535, float 0x3EE0000000000000, float 0.000000e+00
  %10537 = fsub float %10531, %10536
  %10538 = fadd float %10536, %10534
  %10539 = fmul float %10537, 0x3FF7154760000000
  %10540 = tail call float @llvm.rint.f32(float %10539)
  %10541 = fcmp ogt float %10537, 0x40562E4300000000
  %10542 = fcmp olt float %10537, 0xC059D1DA00000000
  %10543 = fneg float %10539
  %10544 = tail call float @llvm.fma.f32(float %10537, float 0x3FF7154760000000, float %10543)
  %10545 = tail call float @llvm.fma.f32(float %10537, float 0x3E54AE0BE0000000, float %10544)
  %10546 = fsub float %10539, %10540
  %10547 = fadd float %10545, %10546
  %10548 = tail call float @llvm.exp2.f32(float %10547)
  %10549 = fptosi float %10540 to i32
  %10550 = tail call float @llvm.amdgcn.ldexp.f32(float %10548, i32 %10549)
  %10551 = select i1 %10542, float 0.000000e+00, float %10550
  %10552 = select i1 %10541, float 0x7FF0000000000000, float %10551
  %10553 = tail call float @llvm.fma.f32(float %10552, float %10538, float %10552)
  %10554 = tail call float @llvm.fabs.f32(float %10552) #3
  %10555 = fcmp oeq float %10554, 0x7FF0000000000000
  %10556 = select i1 %10555, float %10552, float %10553
  %10557 = tail call float @llvm.fabs.f32(float %10556)
  %10558 = fcmp oeq float %10412, 0x7FF0000000000000
  %10559 = fcmp oeq float %10411, 0.000000e+00
  %10560 = select i1 %10558, float 0x7FF0000000000000, float %10557
  %10561 = select i1 %10559, float 0.000000e+00, float %10560
  %10562 = fcmp uno float %10411, 0.000000e+00
  %10563 = select i1 %10562, float 0x7FF8000000000000, float %10561
  %10564 = fadd contract float %10268, -1.000000e+00
  %10565 = tail call float @llvm.fabs.f32(float %10564)
  %10566 = tail call float @llvm.amdgcn.frexp.mant.f32(float %10565)
  %10567 = fcmp olt float %10566, 0x3FE5555560000000
  %10568 = zext i1 %10567 to i32
  %10569 = tail call float @llvm.amdgcn.ldexp.f32(float %10566, i32 %10568)
  %10570 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %10565)
  %10571 = sub nsw i32 %10570, %10568
  %10572 = fadd float %10569, -1.000000e+00
  %10573 = fadd float %10569, 1.000000e+00
  %10574 = fadd float %10573, -1.000000e+00
  %10575 = fsub float %10569, %10574
  %10576 = tail call float @llvm.amdgcn.rcp.f32(float %10573)
  %10577 = fmul float %10572, %10576
  %10578 = fmul float %10573, %10577
  %10579 = fneg float %10578
  %10580 = tail call float @llvm.fma.f32(float %10577, float %10573, float %10579)
  %10581 = tail call float @llvm.fma.f32(float %10577, float %10575, float %10580)
  %10582 = fadd float %10578, %10581
  %10583 = fsub float %10582, %10578
  %10584 = fsub float %10581, %10583
  %10585 = fsub float %10572, %10582
  %10586 = fsub float %10572, %10585
  %10587 = fsub float %10586, %10582
  %10588 = fsub float %10587, %10584
  %10589 = fadd float %10585, %10588
  %10590 = fmul float %10576, %10589
  %10591 = fadd float %10577, %10590
  %10592 = fsub float %10591, %10577
  %10593 = fsub float %10590, %10592
  %10594 = fmul float %10591, %10591
  %10595 = fneg float %10594
  %10596 = tail call float @llvm.fma.f32(float %10591, float %10591, float %10595)
  %10597 = fmul float %10593, 2.000000e+00
  %10598 = tail call float @llvm.fma.f32(float %10591, float %10597, float %10596)
  %10599 = fadd float %10594, %10598
  %10600 = fsub float %10599, %10594
  %10601 = fsub float %10598, %10600
  %10602 = tail call float @llvm.fmuladd.f32(float %10599, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %10603 = tail call float @llvm.fmuladd.f32(float %10599, float %10602, float 0x3FD999BDE0000000)
  %10604 = sitofp i32 %10571 to float
  %10605 = fmul float %10604, 0x3FE62E4300000000
  %10606 = fneg float %10605
  %10607 = tail call float @llvm.fma.f32(float %10604, float 0x3FE62E4300000000, float %10606)
  %10608 = tail call float @llvm.fma.f32(float %10604, float 0xBE205C6100000000, float %10607)
  %10609 = fadd float %10605, %10608
  %10610 = fsub float %10609, %10605
  %10611 = fsub float %10608, %10610
  %10612 = tail call float @llvm.amdgcn.ldexp.f32(float %10591, i32 1)
  %10613 = fmul float %10591, %10599
  %10614 = fneg float %10613
  %10615 = tail call float @llvm.fma.f32(float %10599, float %10591, float %10614)
  %10616 = tail call float @llvm.fma.f32(float %10599, float %10593, float %10615)
  %10617 = tail call float @llvm.fma.f32(float %10601, float %10591, float %10616)
  %10618 = fadd float %10613, %10617
  %10619 = fsub float %10618, %10613
  %10620 = fsub float %10617, %10619
  %10621 = fmul float %10599, %10603
  %10622 = fneg float %10621
  %10623 = tail call float @llvm.fma.f32(float %10599, float %10603, float %10622)
  %10624 = tail call float @llvm.fma.f32(float %10601, float %10603, float %10623)
  %10625 = fadd float %10621, %10624
  %10626 = fsub float %10625, %10621
  %10627 = fsub float %10624, %10626
  %10628 = fadd float %10625, 0x3FE5555540000000
  %10629 = fadd float %10628, 0xBFE5555540000000
  %10630 = fsub float %10625, %10629
  %10631 = fadd float %10627, 0x3E2E720200000000
  %10632 = fadd float %10631, %10630
  %10633 = fadd float %10628, %10632
  %10634 = fsub float %10633, %10628
  %10635 = fsub float %10632, %10634
  %10636 = fmul float %10618, %10633
  %10637 = fneg float %10636
  %10638 = tail call float @llvm.fma.f32(float %10618, float %10633, float %10637)
  %10639 = tail call float @llvm.fma.f32(float %10618, float %10635, float %10638)
  %10640 = tail call float @llvm.fma.f32(float %10620, float %10633, float %10639)
  %10641 = tail call float @llvm.amdgcn.ldexp.f32(float %10593, i32 1)
  %10642 = fadd float %10636, %10640
  %10643 = fsub float %10642, %10636
  %10644 = fsub float %10640, %10643
  %10645 = fadd float %10612, %10642
  %10646 = fsub float %10645, %10612
  %10647 = fsub float %10642, %10646
  %10648 = fadd float %10641, %10644
  %10649 = fadd float %10648, %10647
  %10650 = fadd float %10645, %10649
  %10651 = fsub float %10650, %10645
  %10652 = fsub float %10649, %10651
  %10653 = fadd float %10609, %10650
  %10654 = fsub float %10653, %10609
  %10655 = fsub float %10653, %10654
  %10656 = fsub float %10609, %10655
  %10657 = fsub float %10650, %10654
  %10658 = fadd float %10657, %10656
  %10659 = fadd float %10611, %10652
  %10660 = fsub float %10659, %10611
  %10661 = fsub float %10659, %10660
  %10662 = fsub float %10611, %10661
  %10663 = fsub float %10652, %10660
  %10664 = fadd float %10663, %10662
  %10665 = fadd float %10659, %10658
  %10666 = fadd float %10653, %10665
  %10667 = fsub float %10666, %10653
  %10668 = fsub float %10665, %10667
  %10669 = fadd float %10664, %10668
  %10670 = fadd float %10666, %10669
  %10671 = fsub float %10670, %10666
  %10672 = fsub float %10669, %10671
  %10673 = fmul float %10670, 2.000000e+00
  %10674 = fneg float %10673
  %10675 = tail call float @llvm.fma.f32(float %10670, float 2.000000e+00, float %10674)
  %10676 = fmul float %10670, 0.000000e+00
  %10677 = tail call float @llvm.fma.f32(float %10672, float 2.000000e+00, float %10676)
  %10678 = fadd float %10675, %10677
  %10679 = fadd float %10673, %10678
  %10680 = fsub float %10679, %10673
  %10681 = fsub float %10678, %10680
  %10682 = tail call float @llvm.fabs.f32(float %10673) #3
  %10683 = fcmp oeq float %10682, 0x7FF0000000000000
  %10684 = select i1 %10683, float %10673, float %10679
  %10685 = tail call float @llvm.fabs.f32(float %10684) #3
  %10686 = fcmp oeq float %10685, 0x7FF0000000000000
  %10687 = select i1 %10686, float 0.000000e+00, float %10681
  %10688 = fcmp oeq float %10684, 0x40562E4300000000
  %10689 = select i1 %10688, float 0x3EE0000000000000, float 0.000000e+00
  %10690 = fsub float %10684, %10689
  %10691 = fadd float %10689, %10687
  %10692 = fmul float %10690, 0x3FF7154760000000
  %10693 = tail call float @llvm.rint.f32(float %10692)
  %10694 = fcmp ogt float %10690, 0x40562E4300000000
  %10695 = fcmp olt float %10690, 0xC059D1DA00000000
  %10696 = fneg float %10692
  %10697 = tail call float @llvm.fma.f32(float %10690, float 0x3FF7154760000000, float %10696)
  %10698 = tail call float @llvm.fma.f32(float %10690, float 0x3E54AE0BE0000000, float %10697)
  %10699 = fsub float %10692, %10693
  %10700 = fadd float %10698, %10699
  %10701 = tail call float @llvm.exp2.f32(float %10700)
  %10702 = fptosi float %10693 to i32
  %10703 = tail call float @llvm.amdgcn.ldexp.f32(float %10701, i32 %10702)
  %10704 = select i1 %10695, float 0.000000e+00, float %10703
  %10705 = select i1 %10694, float 0x7FF0000000000000, float %10704
  %10706 = tail call float @llvm.fma.f32(float %10705, float %10691, float %10705)
  %10707 = tail call float @llvm.fabs.f32(float %10705) #3
  %10708 = fcmp oeq float %10707, 0x7FF0000000000000
  %10709 = select i1 %10708, float %10705, float %10706
  %10710 = tail call float @llvm.fabs.f32(float %10709)
  %10711 = fcmp oeq float %10565, 0x7FF0000000000000
  %10712 = fcmp oeq float %10564, 0.000000e+00
  %10713 = select i1 %10711, float 0x7FF0000000000000, float %10710
  %10714 = select i1 %10712, float 0.000000e+00, float %10713
  %10715 = fcmp uno float %10564, 0.000000e+00
  %10716 = select i1 %10715, float 0x7FF8000000000000, float %10714
  %10717 = fadd contract float %10716, %10563
  %10718 = fadd contract float %10717, 0.000000e+00
  br label %10719

10719:                                            ; preds = %11006, %10386
  %10720 = phi i1 [ true, %10386 ], [ false, %11006 ]
  %10721 = phi i32 [ 0, %10386 ], [ 1, %11006 ]
  %10722 = phi float [ %10718, %10386 ], [ %11187, %11006 ]
  %10723 = zext i32 %10721 to i64
  %10724 = getelementptr inbounds float, float addrspace(1)* %0, i64 %10723
  %10725 = load float, float addrspace(1)* %10724, align 4, !tbaa !4
  %10726 = fadd contract float %10725, -1.000000e+00
  %10727 = fmul contract float %10726, 2.500000e-01
  %10728 = fadd contract float %10727, 1.000000e+00
  %10729 = add nuw nsw i32 %10721, 1
  %10730 = zext i32 %10729 to i64
  %10731 = getelementptr inbounds float, float addrspace(1)* %0, i64 %10730
  %10732 = load float, float addrspace(1)* %10731, align 4, !tbaa !4
  %10733 = fadd contract float %10732, -1.000000e+00
  %10734 = fmul contract float %10733, 2.500000e-01
  %10735 = fadd contract float %10734, 1.000000e+00
  %10736 = fadd contract float %10728, -1.000000e+00
  %10737 = tail call float @llvm.fabs.f32(float %10736)
  %10738 = tail call float @llvm.amdgcn.frexp.mant.f32(float %10737)
  %10739 = fcmp olt float %10738, 0x3FE5555560000000
  %10740 = zext i1 %10739 to i32
  %10741 = tail call float @llvm.amdgcn.ldexp.f32(float %10738, i32 %10740)
  %10742 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %10737)
  %10743 = sub nsw i32 %10742, %10740
  %10744 = fadd float %10741, -1.000000e+00
  %10745 = fadd float %10741, 1.000000e+00
  %10746 = fadd float %10745, -1.000000e+00
  %10747 = fsub float %10741, %10746
  %10748 = tail call float @llvm.amdgcn.rcp.f32(float %10745)
  %10749 = fmul float %10744, %10748
  %10750 = fmul float %10745, %10749
  %10751 = fneg float %10750
  %10752 = tail call float @llvm.fma.f32(float %10749, float %10745, float %10751)
  %10753 = tail call float @llvm.fma.f32(float %10749, float %10747, float %10752)
  %10754 = fadd float %10750, %10753
  %10755 = fsub float %10754, %10750
  %10756 = fsub float %10753, %10755
  %10757 = fsub float %10744, %10754
  %10758 = fsub float %10744, %10757
  %10759 = fsub float %10758, %10754
  %10760 = fsub float %10759, %10756
  %10761 = fadd float %10757, %10760
  %10762 = fmul float %10748, %10761
  %10763 = fadd float %10749, %10762
  %10764 = fsub float %10763, %10749
  %10765 = fsub float %10762, %10764
  %10766 = fmul float %10763, %10763
  %10767 = fneg float %10766
  %10768 = tail call float @llvm.fma.f32(float %10763, float %10763, float %10767)
  %10769 = fmul float %10765, 2.000000e+00
  %10770 = tail call float @llvm.fma.f32(float %10763, float %10769, float %10768)
  %10771 = fadd float %10766, %10770
  %10772 = fsub float %10771, %10766
  %10773 = fsub float %10770, %10772
  %10774 = tail call float @llvm.fmuladd.f32(float %10771, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %10775 = tail call float @llvm.fmuladd.f32(float %10771, float %10774, float 0x3FD999BDE0000000)
  %10776 = sitofp i32 %10743 to float
  %10777 = fmul float %10776, 0x3FE62E4300000000
  %10778 = fneg float %10777
  %10779 = tail call float @llvm.fma.f32(float %10776, float 0x3FE62E4300000000, float %10778)
  %10780 = tail call float @llvm.fma.f32(float %10776, float 0xBE205C6100000000, float %10779)
  %10781 = fadd float %10777, %10780
  %10782 = fsub float %10781, %10777
  %10783 = fsub float %10780, %10782
  %10784 = tail call float @llvm.amdgcn.ldexp.f32(float %10763, i32 1)
  %10785 = fmul float %10763, %10771
  %10786 = fneg float %10785
  %10787 = tail call float @llvm.fma.f32(float %10771, float %10763, float %10786)
  %10788 = tail call float @llvm.fma.f32(float %10771, float %10765, float %10787)
  %10789 = tail call float @llvm.fma.f32(float %10773, float %10763, float %10788)
  %10790 = fadd float %10785, %10789
  %10791 = fsub float %10790, %10785
  %10792 = fsub float %10789, %10791
  %10793 = fmul float %10771, %10775
  %10794 = fneg float %10793
  %10795 = tail call float @llvm.fma.f32(float %10771, float %10775, float %10794)
  %10796 = tail call float @llvm.fma.f32(float %10773, float %10775, float %10795)
  %10797 = fadd float %10793, %10796
  %10798 = fsub float %10797, %10793
  %10799 = fsub float %10796, %10798
  %10800 = fadd float %10797, 0x3FE5555540000000
  %10801 = fadd float %10800, 0xBFE5555540000000
  %10802 = fsub float %10797, %10801
  %10803 = fadd float %10799, 0x3E2E720200000000
  %10804 = fadd float %10803, %10802
  %10805 = fadd float %10800, %10804
  %10806 = fsub float %10805, %10800
  %10807 = fsub float %10804, %10806
  %10808 = fmul float %10790, %10805
  %10809 = fneg float %10808
  %10810 = tail call float @llvm.fma.f32(float %10790, float %10805, float %10809)
  %10811 = tail call float @llvm.fma.f32(float %10790, float %10807, float %10810)
  %10812 = tail call float @llvm.fma.f32(float %10792, float %10805, float %10811)
  %10813 = tail call float @llvm.amdgcn.ldexp.f32(float %10765, i32 1)
  %10814 = fadd float %10808, %10812
  %10815 = fsub float %10814, %10808
  %10816 = fsub float %10812, %10815
  %10817 = fadd float %10784, %10814
  %10818 = fsub float %10817, %10784
  %10819 = fsub float %10814, %10818
  %10820 = fadd float %10813, %10816
  %10821 = fadd float %10820, %10819
  %10822 = fadd float %10817, %10821
  %10823 = fsub float %10822, %10817
  %10824 = fsub float %10821, %10823
  %10825 = fadd float %10781, %10822
  %10826 = fsub float %10825, %10781
  %10827 = fsub float %10825, %10826
  %10828 = fsub float %10781, %10827
  %10829 = fsub float %10822, %10826
  %10830 = fadd float %10829, %10828
  %10831 = fadd float %10783, %10824
  %10832 = fsub float %10831, %10783
  %10833 = fsub float %10831, %10832
  %10834 = fsub float %10783, %10833
  %10835 = fsub float %10824, %10832
  %10836 = fadd float %10835, %10834
  %10837 = fadd float %10831, %10830
  %10838 = fadd float %10825, %10837
  %10839 = fsub float %10838, %10825
  %10840 = fsub float %10837, %10839
  %10841 = fadd float %10836, %10840
  %10842 = fadd float %10838, %10841
  %10843 = fsub float %10842, %10838
  %10844 = fsub float %10841, %10843
  %10845 = fmul float %10842, 2.000000e+00
  %10846 = fneg float %10845
  %10847 = tail call float @llvm.fma.f32(float %10842, float 2.000000e+00, float %10846)
  %10848 = fmul float %10842, 0.000000e+00
  %10849 = tail call float @llvm.fma.f32(float %10844, float 2.000000e+00, float %10848)
  %10850 = fadd float %10847, %10849
  %10851 = fadd float %10845, %10850
  %10852 = fsub float %10851, %10845
  %10853 = fsub float %10850, %10852
  %10854 = tail call float @llvm.fabs.f32(float %10845) #3
  %10855 = fcmp oeq float %10854, 0x7FF0000000000000
  %10856 = select i1 %10855, float %10845, float %10851
  %10857 = tail call float @llvm.fabs.f32(float %10856) #3
  %10858 = fcmp oeq float %10857, 0x7FF0000000000000
  %10859 = select i1 %10858, float 0.000000e+00, float %10853
  %10860 = fcmp oeq float %10856, 0x40562E4300000000
  %10861 = select i1 %10860, float 0x3EE0000000000000, float 0.000000e+00
  %10862 = fsub float %10856, %10861
  %10863 = fadd float %10861, %10859
  %10864 = fmul float %10862, 0x3FF7154760000000
  %10865 = tail call float @llvm.rint.f32(float %10864)
  %10866 = fcmp ogt float %10862, 0x40562E4300000000
  %10867 = fcmp olt float %10862, 0xC059D1DA00000000
  %10868 = fneg float %10864
  %10869 = tail call float @llvm.fma.f32(float %10862, float 0x3FF7154760000000, float %10868)
  %10870 = tail call float @llvm.fma.f32(float %10862, float 0x3E54AE0BE0000000, float %10869)
  %10871 = fsub float %10864, %10865
  %10872 = fadd float %10870, %10871
  %10873 = tail call float @llvm.exp2.f32(float %10872)
  %10874 = fptosi float %10865 to i32
  %10875 = tail call float @llvm.amdgcn.ldexp.f32(float %10873, i32 %10874)
  %10876 = select i1 %10867, float 0.000000e+00, float %10875
  %10877 = select i1 %10866, float 0x7FF0000000000000, float %10876
  %10878 = tail call float @llvm.fma.f32(float %10877, float %10863, float %10877)
  %10879 = tail call float @llvm.fabs.f32(float %10877) #3
  %10880 = fcmp oeq float %10879, 0x7FF0000000000000
  %10881 = select i1 %10880, float %10877, float %10878
  %10882 = tail call float @llvm.fabs.f32(float %10881)
  %10883 = fcmp oeq float %10737, 0x7FF0000000000000
  %10884 = fcmp oeq float %10736, 0.000000e+00
  %10885 = select i1 %10883, float 0x7FF0000000000000, float %10882
  %10886 = select i1 %10884, float 0.000000e+00, float %10885
  %10887 = fcmp uno float %10736, 0.000000e+00
  %10888 = select i1 %10887, float 0x7FF8000000000000, float %10886
  %10889 = fmul contract float %10735, 0x400921CAC0000000
  %10890 = tail call float @llvm.fabs.f32(float %10889)
  %10891 = fcmp olt float %10890, 1.310720e+05
  br i1 %10891, label %10998, label %10892

10892:                                            ; preds = %10719
  %10893 = bitcast float %10890 to i32
  %10894 = lshr i32 %10893, 23
  %10895 = and i32 %10893, 8388607
  %10896 = or i32 %10895, 8388608
  %10897 = zext i32 %10896 to i64
  %10898 = mul nuw nsw i64 %10897, 4266746795
  %10899 = trunc i64 %10898 to i32
  %10900 = lshr i64 %10898, 32
  %10901 = mul nuw nsw i64 %10897, 1011060801
  %10902 = add nuw nsw i64 %10900, %10901
  %10903 = trunc i64 %10902 to i32
  %10904 = lshr i64 %10902, 32
  %10905 = mul nuw nsw i64 %10897, 3680671129
  %10906 = add nuw nsw i64 %10904, %10905
  %10907 = trunc i64 %10906 to i32
  %10908 = lshr i64 %10906, 32
  %10909 = mul nuw nsw i64 %10897, 4113882560
  %10910 = add nuw nsw i64 %10908, %10909
  %10911 = trunc i64 %10910 to i32
  %10912 = lshr i64 %10910, 32
  %10913 = mul nuw nsw i64 %10897, 4230436817
  %10914 = add nuw nsw i64 %10912, %10913
  %10915 = trunc i64 %10914 to i32
  %10916 = lshr i64 %10914, 32
  %10917 = mul nuw nsw i64 %10897, 1313084713
  %10918 = add nuw nsw i64 %10916, %10917
  %10919 = trunc i64 %10918 to i32
  %10920 = lshr i64 %10918, 32
  %10921 = mul nuw nsw i64 %10897, 2734261102
  %10922 = add nuw nsw i64 %10920, %10921
  %10923 = trunc i64 %10922 to i32
  %10924 = lshr i64 %10922, 32
  %10925 = trunc i64 %10924 to i32
  %10926 = add nsw i32 %10894, -120
  %10927 = icmp ugt i32 %10926, 63
  %10928 = select i1 %10927, i32 %10919, i32 %10925
  %10929 = select i1 %10927, i32 %10915, i32 %10923
  %10930 = select i1 %10927, i32 %10911, i32 %10919
  %10931 = select i1 %10927, i32 %10907, i32 %10915
  %10932 = select i1 %10927, i32 %10903, i32 %10911
  %10933 = select i1 %10927, i32 %10899, i32 %10907
  %10934 = select i1 %10927, i32 -64, i32 0
  %10935 = add nsw i32 %10934, %10926
  %10936 = icmp ugt i32 %10935, 31
  %10937 = select i1 %10936, i32 %10929, i32 %10928
  %10938 = select i1 %10936, i32 %10930, i32 %10929
  %10939 = select i1 %10936, i32 %10931, i32 %10930
  %10940 = select i1 %10936, i32 %10932, i32 %10931
  %10941 = select i1 %10936, i32 %10933, i32 %10932
  %10942 = select i1 %10936, i32 -32, i32 0
  %10943 = add nsw i32 %10942, %10935
  %10944 = icmp ugt i32 %10943, 31
  %10945 = select i1 %10944, i32 %10938, i32 %10937
  %10946 = select i1 %10944, i32 %10939, i32 %10938
  %10947 = select i1 %10944, i32 %10940, i32 %10939
  %10948 = select i1 %10944, i32 %10941, i32 %10940
  %10949 = select i1 %10944, i32 -32, i32 0
  %10950 = add nsw i32 %10949, %10943
  %10951 = icmp eq i32 %10950, 0
  %10952 = sub nsw i32 32, %10950
  %10953 = tail call i32 @llvm.fshr.i32(i32 %10945, i32 %10946, i32 %10952)
  %10954 = tail call i32 @llvm.fshr.i32(i32 %10946, i32 %10947, i32 %10952)
  %10955 = tail call i32 @llvm.fshr.i32(i32 %10947, i32 %10948, i32 %10952)
  %10956 = select i1 %10951, i32 %10945, i32 %10953
  %10957 = select i1 %10951, i32 %10946, i32 %10954
  %10958 = select i1 %10951, i32 %10947, i32 %10955
  %10959 = lshr i32 %10956, 29
  %10960 = tail call i32 @llvm.fshl.i32(i32 %10956, i32 %10957, i32 2)
  %10961 = tail call i32 @llvm.fshl.i32(i32 %10957, i32 %10958, i32 2)
  %10962 = tail call i32 @llvm.fshl.i32(i32 %10958, i32 %10948, i32 2)
  %10963 = and i32 %10959, 1
  %10964 = sub nsw i32 0, %10963
  %10965 = shl i32 %10959, 31
  %10966 = xor i32 %10960, %10964
  %10967 = xor i32 %10961, %10964
  %10968 = xor i32 %10962, %10964
  %10969 = tail call i32 @llvm.ctlz.i32(i32 %10966, i1 false), !range !8
  %10970 = sub nsw i32 31, %10969
  %10971 = tail call i32 @llvm.fshr.i32(i32 %10966, i32 %10967, i32 %10970)
  %10972 = tail call i32 @llvm.fshr.i32(i32 %10967, i32 %10968, i32 %10970)
  %10973 = shl nuw nsw i32 %10969, 23
  %10974 = sub nuw nsw i32 1056964608, %10973
  %10975 = lshr i32 %10971, 9
  %10976 = or i32 %10975, %10974
  %10977 = or i32 %10976, %10965
  %10978 = bitcast i32 %10977 to float
  %10979 = tail call i32 @llvm.fshl.i32(i32 %10971, i32 %10972, i32 23)
  %10980 = tail call i32 @llvm.ctlz.i32(i32 %10979, i1 false), !range !8
  %10981 = fmul float %10978, 0x3FF921FB40000000
  %10982 = add nuw nsw i32 %10980, %10969
  %10983 = shl nuw nsw i32 %10982, 23
  %10984 = sub nuw nsw i32 855638016, %10983
  %10985 = sub nsw i32 31, %10980
  %10986 = tail call i32 @llvm.fshr.i32(i32 %10979, i32 %10972, i32 %10985)
  %10987 = lshr i32 %10986, 9
  %10988 = or i32 %10984, %10987
  %10989 = or i32 %10988, %10965
  %10990 = bitcast i32 %10989 to float
  %10991 = fneg float %10981
  %10992 = tail call float @llvm.fma.f32(float %10978, float 0x3FF921FB40000000, float %10991)
  %10993 = tail call float @llvm.fma.f32(float %10978, float 0x3E74442D00000000, float %10992)
  %10994 = tail call float @llvm.fma.f32(float %10990, float 0x3FF921FB40000000, float %10993)
  %10995 = fadd float %10981, %10994
  %10996 = lshr i32 %10956, 30
  %10997 = add nuw nsw i32 %10963, %10996
  br label %11006

10998:                                            ; preds = %10719
  %10999 = fmul float %10890, 0x3FE45F3060000000
  %11000 = tail call float @llvm.rint.f32(float %10999)
  %11001 = tail call float @llvm.fma.f32(float %11000, float 0xBFF921FB40000000, float %10890)
  %11002 = tail call float @llvm.fma.f32(float %11000, float 0xBE74442D00000000, float %11001)
  %11003 = tail call float @llvm.fma.f32(float %11000, float 0xBCF8469880000000, float %11002)
  %11004 = fptosi float %11000 to i32
  %11005 = bitcast float %10890 to i32
  br label %11006

11006:                                            ; preds = %10998, %10892
  %11007 = phi i32 [ %11005, %10998 ], [ %10893, %10892 ]
  %11008 = phi float [ %11003, %10998 ], [ %10995, %10892 ]
  %11009 = phi i32 [ %11004, %10998 ], [ %10997, %10892 ]
  %11010 = fmul float %11008, %11008
  %11011 = tail call float @llvm.fmuladd.f32(float %11010, float 0xBF29833040000000, float 0x3F81103880000000)
  %11012 = tail call float @llvm.fmuladd.f32(float %11010, float %11011, float 0xBFC55553A0000000)
  %11013 = fmul float %11010, %11012
  %11014 = tail call float @llvm.fmuladd.f32(float %11008, float %11013, float %11008)
  %11015 = tail call float @llvm.fmuladd.f32(float %11010, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %11016 = tail call float @llvm.fmuladd.f32(float %11010, float %11015, float 0x3FA5557EE0000000)
  %11017 = tail call float @llvm.fmuladd.f32(float %11010, float %11016, float 0xBFE0000080000000)
  %11018 = tail call float @llvm.fmuladd.f32(float %11010, float %11017, float 1.000000e+00)
  %11019 = and i32 %11009, 1
  %11020 = icmp eq i32 %11019, 0
  %11021 = select i1 %11020, float %11014, float %11018
  %11022 = bitcast float %11021 to i32
  %11023 = shl i32 %11009, 30
  %11024 = and i32 %11023, -2147483648
  %11025 = bitcast float %10889 to i32
  %11026 = xor i32 %11007, %11025
  %11027 = xor i32 %11026, %11024
  %11028 = xor i32 %11027, %11022
  %11029 = bitcast i32 %11028 to float
  %11030 = tail call i1 @llvm.amdgcn.class.f32(float %10890, i32 504)
  %11031 = select i1 %11030, float %11029, float 0x7FF8000000000000
  %11032 = tail call float @llvm.fabs.f32(float %11031)
  %11033 = tail call float @llvm.amdgcn.frexp.mant.f32(float %11032)
  %11034 = fcmp olt float %11033, 0x3FE5555560000000
  %11035 = zext i1 %11034 to i32
  %11036 = tail call float @llvm.amdgcn.ldexp.f32(float %11033, i32 %11035)
  %11037 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %11032)
  %11038 = sub nsw i32 %11037, %11035
  %11039 = fadd float %11036, -1.000000e+00
  %11040 = fadd float %11036, 1.000000e+00
  %11041 = fadd float %11040, -1.000000e+00
  %11042 = fsub float %11036, %11041
  %11043 = tail call float @llvm.amdgcn.rcp.f32(float %11040)
  %11044 = fmul float %11039, %11043
  %11045 = fmul float %11040, %11044
  %11046 = fneg float %11045
  %11047 = tail call float @llvm.fma.f32(float %11044, float %11040, float %11046)
  %11048 = tail call float @llvm.fma.f32(float %11044, float %11042, float %11047)
  %11049 = fadd float %11045, %11048
  %11050 = fsub float %11049, %11045
  %11051 = fsub float %11048, %11050
  %11052 = fsub float %11039, %11049
  %11053 = fsub float %11039, %11052
  %11054 = fsub float %11053, %11049
  %11055 = fsub float %11054, %11051
  %11056 = fadd float %11052, %11055
  %11057 = fmul float %11043, %11056
  %11058 = fadd float %11044, %11057
  %11059 = fsub float %11058, %11044
  %11060 = fsub float %11057, %11059
  %11061 = fmul float %11058, %11058
  %11062 = fneg float %11061
  %11063 = tail call float @llvm.fma.f32(float %11058, float %11058, float %11062)
  %11064 = fmul float %11060, 2.000000e+00
  %11065 = tail call float @llvm.fma.f32(float %11058, float %11064, float %11063)
  %11066 = fadd float %11061, %11065
  %11067 = fsub float %11066, %11061
  %11068 = fsub float %11065, %11067
  %11069 = tail call float @llvm.fmuladd.f32(float %11066, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %11070 = tail call float @llvm.fmuladd.f32(float %11066, float %11069, float 0x3FD999BDE0000000)
  %11071 = sitofp i32 %11038 to float
  %11072 = fmul float %11071, 0x3FE62E4300000000
  %11073 = fneg float %11072
  %11074 = tail call float @llvm.fma.f32(float %11071, float 0x3FE62E4300000000, float %11073)
  %11075 = tail call float @llvm.fma.f32(float %11071, float 0xBE205C6100000000, float %11074)
  %11076 = fadd float %11072, %11075
  %11077 = fsub float %11076, %11072
  %11078 = fsub float %11075, %11077
  %11079 = tail call float @llvm.amdgcn.ldexp.f32(float %11058, i32 1)
  %11080 = fmul float %11058, %11066
  %11081 = fneg float %11080
  %11082 = tail call float @llvm.fma.f32(float %11066, float %11058, float %11081)
  %11083 = tail call float @llvm.fma.f32(float %11066, float %11060, float %11082)
  %11084 = tail call float @llvm.fma.f32(float %11068, float %11058, float %11083)
  %11085 = fadd float %11080, %11084
  %11086 = fsub float %11085, %11080
  %11087 = fsub float %11084, %11086
  %11088 = fmul float %11066, %11070
  %11089 = fneg float %11088
  %11090 = tail call float @llvm.fma.f32(float %11066, float %11070, float %11089)
  %11091 = tail call float @llvm.fma.f32(float %11068, float %11070, float %11090)
  %11092 = fadd float %11088, %11091
  %11093 = fsub float %11092, %11088
  %11094 = fsub float %11091, %11093
  %11095 = fadd float %11092, 0x3FE5555540000000
  %11096 = fadd float %11095, 0xBFE5555540000000
  %11097 = fsub float %11092, %11096
  %11098 = fadd float %11094, 0x3E2E720200000000
  %11099 = fadd float %11098, %11097
  %11100 = fadd float %11095, %11099
  %11101 = fsub float %11100, %11095
  %11102 = fsub float %11099, %11101
  %11103 = fmul float %11085, %11100
  %11104 = fneg float %11103
  %11105 = tail call float @llvm.fma.f32(float %11085, float %11100, float %11104)
  %11106 = tail call float @llvm.fma.f32(float %11085, float %11102, float %11105)
  %11107 = tail call float @llvm.fma.f32(float %11087, float %11100, float %11106)
  %11108 = tail call float @llvm.amdgcn.ldexp.f32(float %11060, i32 1)
  %11109 = fadd float %11103, %11107
  %11110 = fsub float %11109, %11103
  %11111 = fsub float %11107, %11110
  %11112 = fadd float %11079, %11109
  %11113 = fsub float %11112, %11079
  %11114 = fsub float %11109, %11113
  %11115 = fadd float %11108, %11111
  %11116 = fadd float %11115, %11114
  %11117 = fadd float %11112, %11116
  %11118 = fsub float %11117, %11112
  %11119 = fsub float %11116, %11118
  %11120 = fadd float %11076, %11117
  %11121 = fsub float %11120, %11076
  %11122 = fsub float %11120, %11121
  %11123 = fsub float %11076, %11122
  %11124 = fsub float %11117, %11121
  %11125 = fadd float %11124, %11123
  %11126 = fadd float %11078, %11119
  %11127 = fsub float %11126, %11078
  %11128 = fsub float %11126, %11127
  %11129 = fsub float %11078, %11128
  %11130 = fsub float %11119, %11127
  %11131 = fadd float %11130, %11129
  %11132 = fadd float %11126, %11125
  %11133 = fadd float %11120, %11132
  %11134 = fsub float %11133, %11120
  %11135 = fsub float %11132, %11134
  %11136 = fadd float %11131, %11135
  %11137 = fadd float %11133, %11136
  %11138 = fsub float %11137, %11133
  %11139 = fsub float %11136, %11138
  %11140 = fmul float %11137, 2.000000e+00
  %11141 = fneg float %11140
  %11142 = tail call float @llvm.fma.f32(float %11137, float 2.000000e+00, float %11141)
  %11143 = fmul float %11137, 0.000000e+00
  %11144 = tail call float @llvm.fma.f32(float %11139, float 2.000000e+00, float %11143)
  %11145 = fadd float %11142, %11144
  %11146 = fadd float %11140, %11145
  %11147 = fsub float %11146, %11140
  %11148 = fsub float %11145, %11147
  %11149 = tail call float @llvm.fabs.f32(float %11140) #3
  %11150 = fcmp oeq float %11149, 0x7FF0000000000000
  %11151 = select i1 %11150, float %11140, float %11146
  %11152 = tail call float @llvm.fabs.f32(float %11151) #3
  %11153 = fcmp oeq float %11152, 0x7FF0000000000000
  %11154 = select i1 %11153, float 0.000000e+00, float %11148
  %11155 = fcmp oeq float %11151, 0x40562E4300000000
  %11156 = select i1 %11155, float 0x3EE0000000000000, float 0.000000e+00
  %11157 = fsub float %11151, %11156
  %11158 = fadd float %11156, %11154
  %11159 = fmul float %11157, 0x3FF7154760000000
  %11160 = tail call float @llvm.rint.f32(float %11159)
  %11161 = fcmp ogt float %11157, 0x40562E4300000000
  %11162 = fcmp olt float %11157, 0xC059D1DA00000000
  %11163 = fneg float %11159
  %11164 = tail call float @llvm.fma.f32(float %11157, float 0x3FF7154760000000, float %11163)
  %11165 = tail call float @llvm.fma.f32(float %11157, float 0x3E54AE0BE0000000, float %11164)
  %11166 = fsub float %11159, %11160
  %11167 = fadd float %11165, %11166
  %11168 = tail call float @llvm.exp2.f32(float %11167)
  %11169 = fptosi float %11160 to i32
  %11170 = tail call float @llvm.amdgcn.ldexp.f32(float %11168, i32 %11169)
  %11171 = select i1 %11162, float 0.000000e+00, float %11170
  %11172 = select i1 %11161, float 0x7FF0000000000000, float %11171
  %11173 = tail call float @llvm.fma.f32(float %11172, float %11158, float %11172)
  %11174 = tail call float @llvm.fabs.f32(float %11172) #3
  %11175 = fcmp oeq float %11174, 0x7FF0000000000000
  %11176 = select i1 %11175, float %11172, float %11173
  %11177 = tail call float @llvm.fabs.f32(float %11176)
  %11178 = fcmp oeq float %11032, 0x7FF0000000000000
  %11179 = fcmp oeq float %11031, 0.000000e+00
  %11180 = fcmp uno float %11031, 0.000000e+00
  %11181 = fmul contract float %11177, 1.000000e+01
  %11182 = fadd contract float %11181, 1.000000e+00
  %11183 = select i1 %11178, float 0x7FF0000000000000, float %11182
  %11184 = select i1 %11179, float 1.000000e+00, float %11183
  %11185 = select i1 %11180, float 0x7FF8000000000000, float %11184
  %11186 = fmul contract float %10888, %11185
  %11187 = fadd contract float %10722, %11186
  br i1 %10720, label %10719, label %11188, !llvm.loop !9

11188:                                            ; preds = %11006
  %11189 = fcmp contract olt float %10259, %11187
  br i1 %11189, label %11190, label %11192

11190:                                            ; preds = %11188
  store float %9329, float addrspace(1)* %0, align 4, !tbaa !4
  %11191 = getelementptr inbounds float, float addrspace(1)* %0, i64 1
  store float %9332, float addrspace(1)* %11191, align 4, !tbaa !4
  store float %9335, float addrspace(1)* %3, align 4, !tbaa !4
  br label %11192

11192:                                            ; preds = %11190, %11188
  %11193 = getelementptr inbounds float, float addrspace(1)* %1, i64 18
  %11194 = load float, float addrspace(1)* %11193, align 4, !tbaa !4
  %11195 = insertelement <3 x float> poison, float %11194, i64 0
  %11196 = getelementptr inbounds float, float addrspace(1)* %1, i64 19
  %11197 = load float, float addrspace(1)* %11196, align 4, !tbaa !4
  %11198 = insertelement <3 x float> %11195, float %11197, i64 1
  %11199 = getelementptr inbounds float, float addrspace(1)* %1, i64 20
  %11200 = load float, float addrspace(1)* %11199, align 4, !tbaa !4
  %11201 = insertelement <3 x float> %11198, float %11200, i64 2
  %11202 = fadd contract float %11194, -1.000000e+00
  %11203 = fmul contract float %11202, 2.500000e-01
  %11204 = fadd contract float %11203, 1.000000e+00
  %11205 = fadd contract float %11200, -1.000000e+00
  %11206 = fmul contract float %11205, 2.500000e-01
  %11207 = fadd contract float %11206, 1.000000e+00
  %11208 = fmul contract float %11204, 0x400921CAC0000000
  %11209 = tail call float @llvm.fabs.f32(float %11208)
  %11210 = fcmp olt float %11209, 1.310720e+05
  br i1 %11210, label %11317, label %11211

11211:                                            ; preds = %11192
  %11212 = bitcast float %11209 to i32
  %11213 = lshr i32 %11212, 23
  %11214 = and i32 %11212, 8388607
  %11215 = or i32 %11214, 8388608
  %11216 = zext i32 %11215 to i64
  %11217 = mul nuw nsw i64 %11216, 4266746795
  %11218 = trunc i64 %11217 to i32
  %11219 = lshr i64 %11217, 32
  %11220 = mul nuw nsw i64 %11216, 1011060801
  %11221 = add nuw nsw i64 %11219, %11220
  %11222 = trunc i64 %11221 to i32
  %11223 = lshr i64 %11221, 32
  %11224 = mul nuw nsw i64 %11216, 3680671129
  %11225 = add nuw nsw i64 %11223, %11224
  %11226 = trunc i64 %11225 to i32
  %11227 = lshr i64 %11225, 32
  %11228 = mul nuw nsw i64 %11216, 4113882560
  %11229 = add nuw nsw i64 %11227, %11228
  %11230 = trunc i64 %11229 to i32
  %11231 = lshr i64 %11229, 32
  %11232 = mul nuw nsw i64 %11216, 4230436817
  %11233 = add nuw nsw i64 %11231, %11232
  %11234 = trunc i64 %11233 to i32
  %11235 = lshr i64 %11233, 32
  %11236 = mul nuw nsw i64 %11216, 1313084713
  %11237 = add nuw nsw i64 %11235, %11236
  %11238 = trunc i64 %11237 to i32
  %11239 = lshr i64 %11237, 32
  %11240 = mul nuw nsw i64 %11216, 2734261102
  %11241 = add nuw nsw i64 %11239, %11240
  %11242 = trunc i64 %11241 to i32
  %11243 = lshr i64 %11241, 32
  %11244 = trunc i64 %11243 to i32
  %11245 = add nsw i32 %11213, -120
  %11246 = icmp ugt i32 %11245, 63
  %11247 = select i1 %11246, i32 %11238, i32 %11244
  %11248 = select i1 %11246, i32 %11234, i32 %11242
  %11249 = select i1 %11246, i32 %11230, i32 %11238
  %11250 = select i1 %11246, i32 %11226, i32 %11234
  %11251 = select i1 %11246, i32 %11222, i32 %11230
  %11252 = select i1 %11246, i32 %11218, i32 %11226
  %11253 = select i1 %11246, i32 -64, i32 0
  %11254 = add nsw i32 %11253, %11245
  %11255 = icmp ugt i32 %11254, 31
  %11256 = select i1 %11255, i32 %11248, i32 %11247
  %11257 = select i1 %11255, i32 %11249, i32 %11248
  %11258 = select i1 %11255, i32 %11250, i32 %11249
  %11259 = select i1 %11255, i32 %11251, i32 %11250
  %11260 = select i1 %11255, i32 %11252, i32 %11251
  %11261 = select i1 %11255, i32 -32, i32 0
  %11262 = add nsw i32 %11261, %11254
  %11263 = icmp ugt i32 %11262, 31
  %11264 = select i1 %11263, i32 %11257, i32 %11256
  %11265 = select i1 %11263, i32 %11258, i32 %11257
  %11266 = select i1 %11263, i32 %11259, i32 %11258
  %11267 = select i1 %11263, i32 %11260, i32 %11259
  %11268 = select i1 %11263, i32 -32, i32 0
  %11269 = add nsw i32 %11268, %11262
  %11270 = icmp eq i32 %11269, 0
  %11271 = sub nsw i32 32, %11269
  %11272 = tail call i32 @llvm.fshr.i32(i32 %11264, i32 %11265, i32 %11271)
  %11273 = tail call i32 @llvm.fshr.i32(i32 %11265, i32 %11266, i32 %11271)
  %11274 = tail call i32 @llvm.fshr.i32(i32 %11266, i32 %11267, i32 %11271)
  %11275 = select i1 %11270, i32 %11264, i32 %11272
  %11276 = select i1 %11270, i32 %11265, i32 %11273
  %11277 = select i1 %11270, i32 %11266, i32 %11274
  %11278 = lshr i32 %11275, 29
  %11279 = tail call i32 @llvm.fshl.i32(i32 %11275, i32 %11276, i32 2)
  %11280 = tail call i32 @llvm.fshl.i32(i32 %11276, i32 %11277, i32 2)
  %11281 = tail call i32 @llvm.fshl.i32(i32 %11277, i32 %11267, i32 2)
  %11282 = and i32 %11278, 1
  %11283 = sub nsw i32 0, %11282
  %11284 = shl i32 %11278, 31
  %11285 = xor i32 %11279, %11283
  %11286 = xor i32 %11280, %11283
  %11287 = xor i32 %11281, %11283
  %11288 = tail call i32 @llvm.ctlz.i32(i32 %11285, i1 false), !range !8
  %11289 = sub nsw i32 31, %11288
  %11290 = tail call i32 @llvm.fshr.i32(i32 %11285, i32 %11286, i32 %11289)
  %11291 = tail call i32 @llvm.fshr.i32(i32 %11286, i32 %11287, i32 %11289)
  %11292 = shl nuw nsw i32 %11288, 23
  %11293 = sub nuw nsw i32 1056964608, %11292
  %11294 = lshr i32 %11290, 9
  %11295 = or i32 %11294, %11293
  %11296 = or i32 %11295, %11284
  %11297 = bitcast i32 %11296 to float
  %11298 = tail call i32 @llvm.fshl.i32(i32 %11290, i32 %11291, i32 23)
  %11299 = tail call i32 @llvm.ctlz.i32(i32 %11298, i1 false), !range !8
  %11300 = fmul float %11297, 0x3FF921FB40000000
  %11301 = add nuw nsw i32 %11299, %11288
  %11302 = shl nuw nsw i32 %11301, 23
  %11303 = sub nuw nsw i32 855638016, %11302
  %11304 = sub nsw i32 31, %11299
  %11305 = tail call i32 @llvm.fshr.i32(i32 %11298, i32 %11291, i32 %11304)
  %11306 = lshr i32 %11305, 9
  %11307 = or i32 %11303, %11306
  %11308 = or i32 %11307, %11284
  %11309 = bitcast i32 %11308 to float
  %11310 = fneg float %11300
  %11311 = tail call float @llvm.fma.f32(float %11297, float 0x3FF921FB40000000, float %11310)
  %11312 = tail call float @llvm.fma.f32(float %11297, float 0x3E74442D00000000, float %11311)
  %11313 = tail call float @llvm.fma.f32(float %11309, float 0x3FF921FB40000000, float %11312)
  %11314 = fadd float %11300, %11313
  %11315 = lshr i32 %11275, 30
  %11316 = add nuw nsw i32 %11282, %11315
  br label %11325

11317:                                            ; preds = %11192
  %11318 = fmul float %11209, 0x3FE45F3060000000
  %11319 = tail call float @llvm.rint.f32(float %11318)
  %11320 = tail call float @llvm.fma.f32(float %11319, float 0xBFF921FB40000000, float %11209)
  %11321 = tail call float @llvm.fma.f32(float %11319, float 0xBE74442D00000000, float %11320)
  %11322 = tail call float @llvm.fma.f32(float %11319, float 0xBCF8469880000000, float %11321)
  %11323 = fptosi float %11319 to i32
  %11324 = bitcast float %11209 to i32
  br label %11325

11325:                                            ; preds = %11317, %11211
  %11326 = phi i32 [ %11324, %11317 ], [ %11212, %11211 ]
  %11327 = phi float [ %11322, %11317 ], [ %11314, %11211 ]
  %11328 = phi i32 [ %11323, %11317 ], [ %11316, %11211 ]
  %11329 = fmul float %11327, %11327
  %11330 = tail call float @llvm.fmuladd.f32(float %11329, float 0xBF29833040000000, float 0x3F81103880000000)
  %11331 = tail call float @llvm.fmuladd.f32(float %11329, float %11330, float 0xBFC55553A0000000)
  %11332 = fmul float %11329, %11331
  %11333 = tail call float @llvm.fmuladd.f32(float %11327, float %11332, float %11327)
  %11334 = tail call float @llvm.fmuladd.f32(float %11329, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %11335 = tail call float @llvm.fmuladd.f32(float %11329, float %11334, float 0x3FA5557EE0000000)
  %11336 = tail call float @llvm.fmuladd.f32(float %11329, float %11335, float 0xBFE0000080000000)
  %11337 = tail call float @llvm.fmuladd.f32(float %11329, float %11336, float 1.000000e+00)
  %11338 = and i32 %11328, 1
  %11339 = icmp eq i32 %11338, 0
  %11340 = select i1 %11339, float %11333, float %11337
  %11341 = bitcast float %11340 to i32
  %11342 = shl i32 %11328, 30
  %11343 = and i32 %11342, -2147483648
  %11344 = bitcast float %11208 to i32
  %11345 = xor i32 %11326, %11344
  %11346 = xor i32 %11345, %11343
  %11347 = xor i32 %11346, %11341
  %11348 = bitcast i32 %11347 to float
  %11349 = tail call i1 @llvm.amdgcn.class.f32(float %11209, i32 504)
  %11350 = select i1 %11349, float %11348, float 0x7FF8000000000000
  %11351 = tail call float @llvm.fabs.f32(float %11350)
  %11352 = tail call float @llvm.amdgcn.frexp.mant.f32(float %11351)
  %11353 = fcmp olt float %11352, 0x3FE5555560000000
  %11354 = zext i1 %11353 to i32
  %11355 = tail call float @llvm.amdgcn.ldexp.f32(float %11352, i32 %11354)
  %11356 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %11351)
  %11357 = sub nsw i32 %11356, %11354
  %11358 = fadd float %11355, -1.000000e+00
  %11359 = fadd float %11355, 1.000000e+00
  %11360 = fadd float %11359, -1.000000e+00
  %11361 = fsub float %11355, %11360
  %11362 = tail call float @llvm.amdgcn.rcp.f32(float %11359)
  %11363 = fmul float %11358, %11362
  %11364 = fmul float %11359, %11363
  %11365 = fneg float %11364
  %11366 = tail call float @llvm.fma.f32(float %11363, float %11359, float %11365)
  %11367 = tail call float @llvm.fma.f32(float %11363, float %11361, float %11366)
  %11368 = fadd float %11364, %11367
  %11369 = fsub float %11368, %11364
  %11370 = fsub float %11367, %11369
  %11371 = fsub float %11358, %11368
  %11372 = fsub float %11358, %11371
  %11373 = fsub float %11372, %11368
  %11374 = fsub float %11373, %11370
  %11375 = fadd float %11371, %11374
  %11376 = fmul float %11362, %11375
  %11377 = fadd float %11363, %11376
  %11378 = fsub float %11377, %11363
  %11379 = fsub float %11376, %11378
  %11380 = fmul float %11377, %11377
  %11381 = fneg float %11380
  %11382 = tail call float @llvm.fma.f32(float %11377, float %11377, float %11381)
  %11383 = fmul float %11379, 2.000000e+00
  %11384 = tail call float @llvm.fma.f32(float %11377, float %11383, float %11382)
  %11385 = fadd float %11380, %11384
  %11386 = fsub float %11385, %11380
  %11387 = fsub float %11384, %11386
  %11388 = tail call float @llvm.fmuladd.f32(float %11385, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %11389 = tail call float @llvm.fmuladd.f32(float %11385, float %11388, float 0x3FD999BDE0000000)
  %11390 = sitofp i32 %11357 to float
  %11391 = fmul float %11390, 0x3FE62E4300000000
  %11392 = fneg float %11391
  %11393 = tail call float @llvm.fma.f32(float %11390, float 0x3FE62E4300000000, float %11392)
  %11394 = tail call float @llvm.fma.f32(float %11390, float 0xBE205C6100000000, float %11393)
  %11395 = fadd float %11391, %11394
  %11396 = fsub float %11395, %11391
  %11397 = fsub float %11394, %11396
  %11398 = tail call float @llvm.amdgcn.ldexp.f32(float %11377, i32 1)
  %11399 = fmul float %11377, %11385
  %11400 = fneg float %11399
  %11401 = tail call float @llvm.fma.f32(float %11385, float %11377, float %11400)
  %11402 = tail call float @llvm.fma.f32(float %11385, float %11379, float %11401)
  %11403 = tail call float @llvm.fma.f32(float %11387, float %11377, float %11402)
  %11404 = fadd float %11399, %11403
  %11405 = fsub float %11404, %11399
  %11406 = fsub float %11403, %11405
  %11407 = fmul float %11385, %11389
  %11408 = fneg float %11407
  %11409 = tail call float @llvm.fma.f32(float %11385, float %11389, float %11408)
  %11410 = tail call float @llvm.fma.f32(float %11387, float %11389, float %11409)
  %11411 = fadd float %11407, %11410
  %11412 = fsub float %11411, %11407
  %11413 = fsub float %11410, %11412
  %11414 = fadd float %11411, 0x3FE5555540000000
  %11415 = fadd float %11414, 0xBFE5555540000000
  %11416 = fsub float %11411, %11415
  %11417 = fadd float %11413, 0x3E2E720200000000
  %11418 = fadd float %11417, %11416
  %11419 = fadd float %11414, %11418
  %11420 = fsub float %11419, %11414
  %11421 = fsub float %11418, %11420
  %11422 = fmul float %11404, %11419
  %11423 = fneg float %11422
  %11424 = tail call float @llvm.fma.f32(float %11404, float %11419, float %11423)
  %11425 = tail call float @llvm.fma.f32(float %11404, float %11421, float %11424)
  %11426 = tail call float @llvm.fma.f32(float %11406, float %11419, float %11425)
  %11427 = tail call float @llvm.amdgcn.ldexp.f32(float %11379, i32 1)
  %11428 = fadd float %11422, %11426
  %11429 = fsub float %11428, %11422
  %11430 = fsub float %11426, %11429
  %11431 = fadd float %11398, %11428
  %11432 = fsub float %11431, %11398
  %11433 = fsub float %11428, %11432
  %11434 = fadd float %11427, %11430
  %11435 = fadd float %11434, %11433
  %11436 = fadd float %11431, %11435
  %11437 = fsub float %11436, %11431
  %11438 = fsub float %11435, %11437
  %11439 = fadd float %11395, %11436
  %11440 = fsub float %11439, %11395
  %11441 = fsub float %11439, %11440
  %11442 = fsub float %11395, %11441
  %11443 = fsub float %11436, %11440
  %11444 = fadd float %11443, %11442
  %11445 = fadd float %11397, %11438
  %11446 = fsub float %11445, %11397
  %11447 = fsub float %11445, %11446
  %11448 = fsub float %11397, %11447
  %11449 = fsub float %11438, %11446
  %11450 = fadd float %11449, %11448
  %11451 = fadd float %11445, %11444
  %11452 = fadd float %11439, %11451
  %11453 = fsub float %11452, %11439
  %11454 = fsub float %11451, %11453
  %11455 = fadd float %11450, %11454
  %11456 = fadd float %11452, %11455
  %11457 = fsub float %11456, %11452
  %11458 = fsub float %11455, %11457
  %11459 = fmul float %11456, 2.000000e+00
  %11460 = fneg float %11459
  %11461 = tail call float @llvm.fma.f32(float %11456, float 2.000000e+00, float %11460)
  %11462 = fmul float %11456, 0.000000e+00
  %11463 = tail call float @llvm.fma.f32(float %11458, float 2.000000e+00, float %11462)
  %11464 = fadd float %11461, %11463
  %11465 = fadd float %11459, %11464
  %11466 = fsub float %11465, %11459
  %11467 = fsub float %11464, %11466
  %11468 = tail call float @llvm.fabs.f32(float %11459) #3
  %11469 = fcmp oeq float %11468, 0x7FF0000000000000
  %11470 = select i1 %11469, float %11459, float %11465
  %11471 = tail call float @llvm.fabs.f32(float %11470) #3
  %11472 = fcmp oeq float %11471, 0x7FF0000000000000
  %11473 = select i1 %11472, float 0.000000e+00, float %11467
  %11474 = fcmp oeq float %11470, 0x40562E4300000000
  %11475 = select i1 %11474, float 0x3EE0000000000000, float 0.000000e+00
  %11476 = fsub float %11470, %11475
  %11477 = fadd float %11475, %11473
  %11478 = fmul float %11476, 0x3FF7154760000000
  %11479 = tail call float @llvm.rint.f32(float %11478)
  %11480 = fcmp ogt float %11476, 0x40562E4300000000
  %11481 = fcmp olt float %11476, 0xC059D1DA00000000
  %11482 = fneg float %11478
  %11483 = tail call float @llvm.fma.f32(float %11476, float 0x3FF7154760000000, float %11482)
  %11484 = tail call float @llvm.fma.f32(float %11476, float 0x3E54AE0BE0000000, float %11483)
  %11485 = fsub float %11478, %11479
  %11486 = fadd float %11484, %11485
  %11487 = tail call float @llvm.exp2.f32(float %11486)
  %11488 = fptosi float %11479 to i32
  %11489 = tail call float @llvm.amdgcn.ldexp.f32(float %11487, i32 %11488)
  %11490 = select i1 %11481, float 0.000000e+00, float %11489
  %11491 = select i1 %11480, float 0x7FF0000000000000, float %11490
  %11492 = tail call float @llvm.fma.f32(float %11491, float %11477, float %11491)
  %11493 = tail call float @llvm.fabs.f32(float %11491) #3
  %11494 = fcmp oeq float %11493, 0x7FF0000000000000
  %11495 = select i1 %11494, float %11491, float %11492
  %11496 = tail call float @llvm.fabs.f32(float %11495)
  %11497 = fcmp oeq float %11351, 0x7FF0000000000000
  %11498 = fcmp oeq float %11350, 0.000000e+00
  %11499 = select i1 %11497, float 0x7FF0000000000000, float %11496
  %11500 = select i1 %11498, float 0.000000e+00, float %11499
  %11501 = fcmp uno float %11350, 0.000000e+00
  %11502 = select i1 %11501, float 0x7FF8000000000000, float %11500
  %11503 = fadd contract float %11207, -1.000000e+00
  %11504 = tail call float @llvm.fabs.f32(float %11503)
  %11505 = tail call float @llvm.amdgcn.frexp.mant.f32(float %11504)
  %11506 = fcmp olt float %11505, 0x3FE5555560000000
  %11507 = zext i1 %11506 to i32
  %11508 = tail call float @llvm.amdgcn.ldexp.f32(float %11505, i32 %11507)
  %11509 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %11504)
  %11510 = sub nsw i32 %11509, %11507
  %11511 = fadd float %11508, -1.000000e+00
  %11512 = fadd float %11508, 1.000000e+00
  %11513 = fadd float %11512, -1.000000e+00
  %11514 = fsub float %11508, %11513
  %11515 = tail call float @llvm.amdgcn.rcp.f32(float %11512)
  %11516 = fmul float %11511, %11515
  %11517 = fmul float %11512, %11516
  %11518 = fneg float %11517
  %11519 = tail call float @llvm.fma.f32(float %11516, float %11512, float %11518)
  %11520 = tail call float @llvm.fma.f32(float %11516, float %11514, float %11519)
  %11521 = fadd float %11517, %11520
  %11522 = fsub float %11521, %11517
  %11523 = fsub float %11520, %11522
  %11524 = fsub float %11511, %11521
  %11525 = fsub float %11511, %11524
  %11526 = fsub float %11525, %11521
  %11527 = fsub float %11526, %11523
  %11528 = fadd float %11524, %11527
  %11529 = fmul float %11515, %11528
  %11530 = fadd float %11516, %11529
  %11531 = fsub float %11530, %11516
  %11532 = fsub float %11529, %11531
  %11533 = fmul float %11530, %11530
  %11534 = fneg float %11533
  %11535 = tail call float @llvm.fma.f32(float %11530, float %11530, float %11534)
  %11536 = fmul float %11532, 2.000000e+00
  %11537 = tail call float @llvm.fma.f32(float %11530, float %11536, float %11535)
  %11538 = fadd float %11533, %11537
  %11539 = fsub float %11538, %11533
  %11540 = fsub float %11537, %11539
  %11541 = tail call float @llvm.fmuladd.f32(float %11538, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %11542 = tail call float @llvm.fmuladd.f32(float %11538, float %11541, float 0x3FD999BDE0000000)
  %11543 = sitofp i32 %11510 to float
  %11544 = fmul float %11543, 0x3FE62E4300000000
  %11545 = fneg float %11544
  %11546 = tail call float @llvm.fma.f32(float %11543, float 0x3FE62E4300000000, float %11545)
  %11547 = tail call float @llvm.fma.f32(float %11543, float 0xBE205C6100000000, float %11546)
  %11548 = fadd float %11544, %11547
  %11549 = fsub float %11548, %11544
  %11550 = fsub float %11547, %11549
  %11551 = tail call float @llvm.amdgcn.ldexp.f32(float %11530, i32 1)
  %11552 = fmul float %11530, %11538
  %11553 = fneg float %11552
  %11554 = tail call float @llvm.fma.f32(float %11538, float %11530, float %11553)
  %11555 = tail call float @llvm.fma.f32(float %11538, float %11532, float %11554)
  %11556 = tail call float @llvm.fma.f32(float %11540, float %11530, float %11555)
  %11557 = fadd float %11552, %11556
  %11558 = fsub float %11557, %11552
  %11559 = fsub float %11556, %11558
  %11560 = fmul float %11538, %11542
  %11561 = fneg float %11560
  %11562 = tail call float @llvm.fma.f32(float %11538, float %11542, float %11561)
  %11563 = tail call float @llvm.fma.f32(float %11540, float %11542, float %11562)
  %11564 = fadd float %11560, %11563
  %11565 = fsub float %11564, %11560
  %11566 = fsub float %11563, %11565
  %11567 = fadd float %11564, 0x3FE5555540000000
  %11568 = fadd float %11567, 0xBFE5555540000000
  %11569 = fsub float %11564, %11568
  %11570 = fadd float %11566, 0x3E2E720200000000
  %11571 = fadd float %11570, %11569
  %11572 = fadd float %11567, %11571
  %11573 = fsub float %11572, %11567
  %11574 = fsub float %11571, %11573
  %11575 = fmul float %11557, %11572
  %11576 = fneg float %11575
  %11577 = tail call float @llvm.fma.f32(float %11557, float %11572, float %11576)
  %11578 = tail call float @llvm.fma.f32(float %11557, float %11574, float %11577)
  %11579 = tail call float @llvm.fma.f32(float %11559, float %11572, float %11578)
  %11580 = tail call float @llvm.amdgcn.ldexp.f32(float %11532, i32 1)
  %11581 = fadd float %11575, %11579
  %11582 = fsub float %11581, %11575
  %11583 = fsub float %11579, %11582
  %11584 = fadd float %11551, %11581
  %11585 = fsub float %11584, %11551
  %11586 = fsub float %11581, %11585
  %11587 = fadd float %11580, %11583
  %11588 = fadd float %11587, %11586
  %11589 = fadd float %11584, %11588
  %11590 = fsub float %11589, %11584
  %11591 = fsub float %11588, %11590
  %11592 = fadd float %11548, %11589
  %11593 = fsub float %11592, %11548
  %11594 = fsub float %11592, %11593
  %11595 = fsub float %11548, %11594
  %11596 = fsub float %11589, %11593
  %11597 = fadd float %11596, %11595
  %11598 = fadd float %11550, %11591
  %11599 = fsub float %11598, %11550
  %11600 = fsub float %11598, %11599
  %11601 = fsub float %11550, %11600
  %11602 = fsub float %11591, %11599
  %11603 = fadd float %11602, %11601
  %11604 = fadd float %11598, %11597
  %11605 = fadd float %11592, %11604
  %11606 = fsub float %11605, %11592
  %11607 = fsub float %11604, %11606
  %11608 = fadd float %11603, %11607
  %11609 = fadd float %11605, %11608
  %11610 = fsub float %11609, %11605
  %11611 = fsub float %11608, %11610
  %11612 = fmul float %11609, 2.000000e+00
  %11613 = fneg float %11612
  %11614 = tail call float @llvm.fma.f32(float %11609, float 2.000000e+00, float %11613)
  %11615 = fmul float %11609, 0.000000e+00
  %11616 = tail call float @llvm.fma.f32(float %11611, float 2.000000e+00, float %11615)
  %11617 = fadd float %11614, %11616
  %11618 = fadd float %11612, %11617
  %11619 = fsub float %11618, %11612
  %11620 = fsub float %11617, %11619
  %11621 = tail call float @llvm.fabs.f32(float %11612) #3
  %11622 = fcmp oeq float %11621, 0x7FF0000000000000
  %11623 = select i1 %11622, float %11612, float %11618
  %11624 = tail call float @llvm.fabs.f32(float %11623) #3
  %11625 = fcmp oeq float %11624, 0x7FF0000000000000
  %11626 = select i1 %11625, float 0.000000e+00, float %11620
  %11627 = fcmp oeq float %11623, 0x40562E4300000000
  %11628 = select i1 %11627, float 0x3EE0000000000000, float 0.000000e+00
  %11629 = fsub float %11623, %11628
  %11630 = fadd float %11628, %11626
  %11631 = fmul float %11629, 0x3FF7154760000000
  %11632 = tail call float @llvm.rint.f32(float %11631)
  %11633 = fcmp ogt float %11629, 0x40562E4300000000
  %11634 = fcmp olt float %11629, 0xC059D1DA00000000
  %11635 = fneg float %11631
  %11636 = tail call float @llvm.fma.f32(float %11629, float 0x3FF7154760000000, float %11635)
  %11637 = tail call float @llvm.fma.f32(float %11629, float 0x3E54AE0BE0000000, float %11636)
  %11638 = fsub float %11631, %11632
  %11639 = fadd float %11637, %11638
  %11640 = tail call float @llvm.exp2.f32(float %11639)
  %11641 = fptosi float %11632 to i32
  %11642 = tail call float @llvm.amdgcn.ldexp.f32(float %11640, i32 %11641)
  %11643 = select i1 %11634, float 0.000000e+00, float %11642
  %11644 = select i1 %11633, float 0x7FF0000000000000, float %11643
  %11645 = tail call float @llvm.fma.f32(float %11644, float %11630, float %11644)
  %11646 = tail call float @llvm.fabs.f32(float %11644) #3
  %11647 = fcmp oeq float %11646, 0x7FF0000000000000
  %11648 = select i1 %11647, float %11644, float %11645
  %11649 = tail call float @llvm.fabs.f32(float %11648)
  %11650 = fcmp oeq float %11504, 0x7FF0000000000000
  %11651 = fcmp oeq float %11503, 0.000000e+00
  %11652 = select i1 %11650, float 0x7FF0000000000000, float %11649
  %11653 = select i1 %11651, float 0.000000e+00, float %11652
  %11654 = fcmp uno float %11503, 0.000000e+00
  %11655 = select i1 %11654, float 0x7FF8000000000000, float %11653
  %11656 = fadd contract float %11655, %11502
  %11657 = fadd contract float %11656, 0.000000e+00
  br label %11658

11658:                                            ; preds = %11943, %11325
  %11659 = phi i1 [ true, %11325 ], [ false, %11943 ]
  %11660 = phi i32 [ 0, %11325 ], [ 1, %11943 ]
  %11661 = phi float [ %11657, %11325 ], [ %12124, %11943 ]
  %11662 = zext i32 %11660 to i64
  %11663 = extractelement <3 x float> %11201, i64 %11662
  %11664 = fadd contract float %11663, -1.000000e+00
  %11665 = fmul contract float %11664, 2.500000e-01
  %11666 = fadd contract float %11665, 1.000000e+00
  %11667 = add nuw nsw i32 %11660, 1
  %11668 = zext i32 %11667 to i64
  %11669 = extractelement <3 x float> %11201, i64 %11668
  %11670 = fadd contract float %11669, -1.000000e+00
  %11671 = fmul contract float %11670, 2.500000e-01
  %11672 = fadd contract float %11671, 1.000000e+00
  %11673 = fadd contract float %11666, -1.000000e+00
  %11674 = tail call float @llvm.fabs.f32(float %11673)
  %11675 = tail call float @llvm.amdgcn.frexp.mant.f32(float %11674)
  %11676 = fcmp olt float %11675, 0x3FE5555560000000
  %11677 = zext i1 %11676 to i32
  %11678 = tail call float @llvm.amdgcn.ldexp.f32(float %11675, i32 %11677)
  %11679 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %11674)
  %11680 = sub nsw i32 %11679, %11677
  %11681 = fadd float %11678, -1.000000e+00
  %11682 = fadd float %11678, 1.000000e+00
  %11683 = fadd float %11682, -1.000000e+00
  %11684 = fsub float %11678, %11683
  %11685 = tail call float @llvm.amdgcn.rcp.f32(float %11682)
  %11686 = fmul float %11681, %11685
  %11687 = fmul float %11682, %11686
  %11688 = fneg float %11687
  %11689 = tail call float @llvm.fma.f32(float %11686, float %11682, float %11688)
  %11690 = tail call float @llvm.fma.f32(float %11686, float %11684, float %11689)
  %11691 = fadd float %11687, %11690
  %11692 = fsub float %11691, %11687
  %11693 = fsub float %11690, %11692
  %11694 = fsub float %11681, %11691
  %11695 = fsub float %11681, %11694
  %11696 = fsub float %11695, %11691
  %11697 = fsub float %11696, %11693
  %11698 = fadd float %11694, %11697
  %11699 = fmul float %11685, %11698
  %11700 = fadd float %11686, %11699
  %11701 = fsub float %11700, %11686
  %11702 = fsub float %11699, %11701
  %11703 = fmul float %11700, %11700
  %11704 = fneg float %11703
  %11705 = tail call float @llvm.fma.f32(float %11700, float %11700, float %11704)
  %11706 = fmul float %11702, 2.000000e+00
  %11707 = tail call float @llvm.fma.f32(float %11700, float %11706, float %11705)
  %11708 = fadd float %11703, %11707
  %11709 = fsub float %11708, %11703
  %11710 = fsub float %11707, %11709
  %11711 = tail call float @llvm.fmuladd.f32(float %11708, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %11712 = tail call float @llvm.fmuladd.f32(float %11708, float %11711, float 0x3FD999BDE0000000)
  %11713 = sitofp i32 %11680 to float
  %11714 = fmul float %11713, 0x3FE62E4300000000
  %11715 = fneg float %11714
  %11716 = tail call float @llvm.fma.f32(float %11713, float 0x3FE62E4300000000, float %11715)
  %11717 = tail call float @llvm.fma.f32(float %11713, float 0xBE205C6100000000, float %11716)
  %11718 = fadd float %11714, %11717
  %11719 = fsub float %11718, %11714
  %11720 = fsub float %11717, %11719
  %11721 = tail call float @llvm.amdgcn.ldexp.f32(float %11700, i32 1)
  %11722 = fmul float %11700, %11708
  %11723 = fneg float %11722
  %11724 = tail call float @llvm.fma.f32(float %11708, float %11700, float %11723)
  %11725 = tail call float @llvm.fma.f32(float %11708, float %11702, float %11724)
  %11726 = tail call float @llvm.fma.f32(float %11710, float %11700, float %11725)
  %11727 = fadd float %11722, %11726
  %11728 = fsub float %11727, %11722
  %11729 = fsub float %11726, %11728
  %11730 = fmul float %11708, %11712
  %11731 = fneg float %11730
  %11732 = tail call float @llvm.fma.f32(float %11708, float %11712, float %11731)
  %11733 = tail call float @llvm.fma.f32(float %11710, float %11712, float %11732)
  %11734 = fadd float %11730, %11733
  %11735 = fsub float %11734, %11730
  %11736 = fsub float %11733, %11735
  %11737 = fadd float %11734, 0x3FE5555540000000
  %11738 = fadd float %11737, 0xBFE5555540000000
  %11739 = fsub float %11734, %11738
  %11740 = fadd float %11736, 0x3E2E720200000000
  %11741 = fadd float %11740, %11739
  %11742 = fadd float %11737, %11741
  %11743 = fsub float %11742, %11737
  %11744 = fsub float %11741, %11743
  %11745 = fmul float %11727, %11742
  %11746 = fneg float %11745
  %11747 = tail call float @llvm.fma.f32(float %11727, float %11742, float %11746)
  %11748 = tail call float @llvm.fma.f32(float %11727, float %11744, float %11747)
  %11749 = tail call float @llvm.fma.f32(float %11729, float %11742, float %11748)
  %11750 = tail call float @llvm.amdgcn.ldexp.f32(float %11702, i32 1)
  %11751 = fadd float %11745, %11749
  %11752 = fsub float %11751, %11745
  %11753 = fsub float %11749, %11752
  %11754 = fadd float %11721, %11751
  %11755 = fsub float %11754, %11721
  %11756 = fsub float %11751, %11755
  %11757 = fadd float %11750, %11753
  %11758 = fadd float %11757, %11756
  %11759 = fadd float %11754, %11758
  %11760 = fsub float %11759, %11754
  %11761 = fsub float %11758, %11760
  %11762 = fadd float %11718, %11759
  %11763 = fsub float %11762, %11718
  %11764 = fsub float %11762, %11763
  %11765 = fsub float %11718, %11764
  %11766 = fsub float %11759, %11763
  %11767 = fadd float %11766, %11765
  %11768 = fadd float %11720, %11761
  %11769 = fsub float %11768, %11720
  %11770 = fsub float %11768, %11769
  %11771 = fsub float %11720, %11770
  %11772 = fsub float %11761, %11769
  %11773 = fadd float %11772, %11771
  %11774 = fadd float %11768, %11767
  %11775 = fadd float %11762, %11774
  %11776 = fsub float %11775, %11762
  %11777 = fsub float %11774, %11776
  %11778 = fadd float %11773, %11777
  %11779 = fadd float %11775, %11778
  %11780 = fsub float %11779, %11775
  %11781 = fsub float %11778, %11780
  %11782 = fmul float %11779, 2.000000e+00
  %11783 = fneg float %11782
  %11784 = tail call float @llvm.fma.f32(float %11779, float 2.000000e+00, float %11783)
  %11785 = fmul float %11779, 0.000000e+00
  %11786 = tail call float @llvm.fma.f32(float %11781, float 2.000000e+00, float %11785)
  %11787 = fadd float %11784, %11786
  %11788 = fadd float %11782, %11787
  %11789 = fsub float %11788, %11782
  %11790 = fsub float %11787, %11789
  %11791 = tail call float @llvm.fabs.f32(float %11782) #3
  %11792 = fcmp oeq float %11791, 0x7FF0000000000000
  %11793 = select i1 %11792, float %11782, float %11788
  %11794 = tail call float @llvm.fabs.f32(float %11793) #3
  %11795 = fcmp oeq float %11794, 0x7FF0000000000000
  %11796 = select i1 %11795, float 0.000000e+00, float %11790
  %11797 = fcmp oeq float %11793, 0x40562E4300000000
  %11798 = select i1 %11797, float 0x3EE0000000000000, float 0.000000e+00
  %11799 = fsub float %11793, %11798
  %11800 = fadd float %11798, %11796
  %11801 = fmul float %11799, 0x3FF7154760000000
  %11802 = tail call float @llvm.rint.f32(float %11801)
  %11803 = fcmp ogt float %11799, 0x40562E4300000000
  %11804 = fcmp olt float %11799, 0xC059D1DA00000000
  %11805 = fneg float %11801
  %11806 = tail call float @llvm.fma.f32(float %11799, float 0x3FF7154760000000, float %11805)
  %11807 = tail call float @llvm.fma.f32(float %11799, float 0x3E54AE0BE0000000, float %11806)
  %11808 = fsub float %11801, %11802
  %11809 = fadd float %11807, %11808
  %11810 = tail call float @llvm.exp2.f32(float %11809)
  %11811 = fptosi float %11802 to i32
  %11812 = tail call float @llvm.amdgcn.ldexp.f32(float %11810, i32 %11811)
  %11813 = select i1 %11804, float 0.000000e+00, float %11812
  %11814 = select i1 %11803, float 0x7FF0000000000000, float %11813
  %11815 = tail call float @llvm.fma.f32(float %11814, float %11800, float %11814)
  %11816 = tail call float @llvm.fabs.f32(float %11814) #3
  %11817 = fcmp oeq float %11816, 0x7FF0000000000000
  %11818 = select i1 %11817, float %11814, float %11815
  %11819 = tail call float @llvm.fabs.f32(float %11818)
  %11820 = fcmp oeq float %11674, 0x7FF0000000000000
  %11821 = fcmp oeq float %11673, 0.000000e+00
  %11822 = select i1 %11820, float 0x7FF0000000000000, float %11819
  %11823 = select i1 %11821, float 0.000000e+00, float %11822
  %11824 = fcmp uno float %11673, 0.000000e+00
  %11825 = select i1 %11824, float 0x7FF8000000000000, float %11823
  %11826 = fmul contract float %11672, 0x400921CAC0000000
  %11827 = tail call float @llvm.fabs.f32(float %11826)
  %11828 = fcmp olt float %11827, 1.310720e+05
  br i1 %11828, label %11935, label %11829

11829:                                            ; preds = %11658
  %11830 = bitcast float %11827 to i32
  %11831 = lshr i32 %11830, 23
  %11832 = and i32 %11830, 8388607
  %11833 = or i32 %11832, 8388608
  %11834 = zext i32 %11833 to i64
  %11835 = mul nuw nsw i64 %11834, 4266746795
  %11836 = trunc i64 %11835 to i32
  %11837 = lshr i64 %11835, 32
  %11838 = mul nuw nsw i64 %11834, 1011060801
  %11839 = add nuw nsw i64 %11837, %11838
  %11840 = trunc i64 %11839 to i32
  %11841 = lshr i64 %11839, 32
  %11842 = mul nuw nsw i64 %11834, 3680671129
  %11843 = add nuw nsw i64 %11841, %11842
  %11844 = trunc i64 %11843 to i32
  %11845 = lshr i64 %11843, 32
  %11846 = mul nuw nsw i64 %11834, 4113882560
  %11847 = add nuw nsw i64 %11845, %11846
  %11848 = trunc i64 %11847 to i32
  %11849 = lshr i64 %11847, 32
  %11850 = mul nuw nsw i64 %11834, 4230436817
  %11851 = add nuw nsw i64 %11849, %11850
  %11852 = trunc i64 %11851 to i32
  %11853 = lshr i64 %11851, 32
  %11854 = mul nuw nsw i64 %11834, 1313084713
  %11855 = add nuw nsw i64 %11853, %11854
  %11856 = trunc i64 %11855 to i32
  %11857 = lshr i64 %11855, 32
  %11858 = mul nuw nsw i64 %11834, 2734261102
  %11859 = add nuw nsw i64 %11857, %11858
  %11860 = trunc i64 %11859 to i32
  %11861 = lshr i64 %11859, 32
  %11862 = trunc i64 %11861 to i32
  %11863 = add nsw i32 %11831, -120
  %11864 = icmp ugt i32 %11863, 63
  %11865 = select i1 %11864, i32 %11856, i32 %11862
  %11866 = select i1 %11864, i32 %11852, i32 %11860
  %11867 = select i1 %11864, i32 %11848, i32 %11856
  %11868 = select i1 %11864, i32 %11844, i32 %11852
  %11869 = select i1 %11864, i32 %11840, i32 %11848
  %11870 = select i1 %11864, i32 %11836, i32 %11844
  %11871 = select i1 %11864, i32 -64, i32 0
  %11872 = add nsw i32 %11871, %11863
  %11873 = icmp ugt i32 %11872, 31
  %11874 = select i1 %11873, i32 %11866, i32 %11865
  %11875 = select i1 %11873, i32 %11867, i32 %11866
  %11876 = select i1 %11873, i32 %11868, i32 %11867
  %11877 = select i1 %11873, i32 %11869, i32 %11868
  %11878 = select i1 %11873, i32 %11870, i32 %11869
  %11879 = select i1 %11873, i32 -32, i32 0
  %11880 = add nsw i32 %11879, %11872
  %11881 = icmp ugt i32 %11880, 31
  %11882 = select i1 %11881, i32 %11875, i32 %11874
  %11883 = select i1 %11881, i32 %11876, i32 %11875
  %11884 = select i1 %11881, i32 %11877, i32 %11876
  %11885 = select i1 %11881, i32 %11878, i32 %11877
  %11886 = select i1 %11881, i32 -32, i32 0
  %11887 = add nsw i32 %11886, %11880
  %11888 = icmp eq i32 %11887, 0
  %11889 = sub nsw i32 32, %11887
  %11890 = tail call i32 @llvm.fshr.i32(i32 %11882, i32 %11883, i32 %11889)
  %11891 = tail call i32 @llvm.fshr.i32(i32 %11883, i32 %11884, i32 %11889)
  %11892 = tail call i32 @llvm.fshr.i32(i32 %11884, i32 %11885, i32 %11889)
  %11893 = select i1 %11888, i32 %11882, i32 %11890
  %11894 = select i1 %11888, i32 %11883, i32 %11891
  %11895 = select i1 %11888, i32 %11884, i32 %11892
  %11896 = lshr i32 %11893, 29
  %11897 = tail call i32 @llvm.fshl.i32(i32 %11893, i32 %11894, i32 2)
  %11898 = tail call i32 @llvm.fshl.i32(i32 %11894, i32 %11895, i32 2)
  %11899 = tail call i32 @llvm.fshl.i32(i32 %11895, i32 %11885, i32 2)
  %11900 = and i32 %11896, 1
  %11901 = sub nsw i32 0, %11900
  %11902 = shl i32 %11896, 31
  %11903 = xor i32 %11897, %11901
  %11904 = xor i32 %11898, %11901
  %11905 = xor i32 %11899, %11901
  %11906 = tail call i32 @llvm.ctlz.i32(i32 %11903, i1 false), !range !8
  %11907 = sub nsw i32 31, %11906
  %11908 = tail call i32 @llvm.fshr.i32(i32 %11903, i32 %11904, i32 %11907)
  %11909 = tail call i32 @llvm.fshr.i32(i32 %11904, i32 %11905, i32 %11907)
  %11910 = shl nuw nsw i32 %11906, 23
  %11911 = sub nuw nsw i32 1056964608, %11910
  %11912 = lshr i32 %11908, 9
  %11913 = or i32 %11912, %11911
  %11914 = or i32 %11913, %11902
  %11915 = bitcast i32 %11914 to float
  %11916 = tail call i32 @llvm.fshl.i32(i32 %11908, i32 %11909, i32 23)
  %11917 = tail call i32 @llvm.ctlz.i32(i32 %11916, i1 false), !range !8
  %11918 = fmul float %11915, 0x3FF921FB40000000
  %11919 = add nuw nsw i32 %11917, %11906
  %11920 = shl nuw nsw i32 %11919, 23
  %11921 = sub nuw nsw i32 855638016, %11920
  %11922 = sub nsw i32 31, %11917
  %11923 = tail call i32 @llvm.fshr.i32(i32 %11916, i32 %11909, i32 %11922)
  %11924 = lshr i32 %11923, 9
  %11925 = or i32 %11921, %11924
  %11926 = or i32 %11925, %11902
  %11927 = bitcast i32 %11926 to float
  %11928 = fneg float %11918
  %11929 = tail call float @llvm.fma.f32(float %11915, float 0x3FF921FB40000000, float %11928)
  %11930 = tail call float @llvm.fma.f32(float %11915, float 0x3E74442D00000000, float %11929)
  %11931 = tail call float @llvm.fma.f32(float %11927, float 0x3FF921FB40000000, float %11930)
  %11932 = fadd float %11918, %11931
  %11933 = lshr i32 %11893, 30
  %11934 = add nuw nsw i32 %11900, %11933
  br label %11943

11935:                                            ; preds = %11658
  %11936 = fmul float %11827, 0x3FE45F3060000000
  %11937 = tail call float @llvm.rint.f32(float %11936)
  %11938 = tail call float @llvm.fma.f32(float %11937, float 0xBFF921FB40000000, float %11827)
  %11939 = tail call float @llvm.fma.f32(float %11937, float 0xBE74442D00000000, float %11938)
  %11940 = tail call float @llvm.fma.f32(float %11937, float 0xBCF8469880000000, float %11939)
  %11941 = fptosi float %11937 to i32
  %11942 = bitcast float %11827 to i32
  br label %11943

11943:                                            ; preds = %11935, %11829
  %11944 = phi i32 [ %11942, %11935 ], [ %11830, %11829 ]
  %11945 = phi float [ %11940, %11935 ], [ %11932, %11829 ]
  %11946 = phi i32 [ %11941, %11935 ], [ %11934, %11829 ]
  %11947 = fmul float %11945, %11945
  %11948 = tail call float @llvm.fmuladd.f32(float %11947, float 0xBF29833040000000, float 0x3F81103880000000)
  %11949 = tail call float @llvm.fmuladd.f32(float %11947, float %11948, float 0xBFC55553A0000000)
  %11950 = fmul float %11947, %11949
  %11951 = tail call float @llvm.fmuladd.f32(float %11945, float %11950, float %11945)
  %11952 = tail call float @llvm.fmuladd.f32(float %11947, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %11953 = tail call float @llvm.fmuladd.f32(float %11947, float %11952, float 0x3FA5557EE0000000)
  %11954 = tail call float @llvm.fmuladd.f32(float %11947, float %11953, float 0xBFE0000080000000)
  %11955 = tail call float @llvm.fmuladd.f32(float %11947, float %11954, float 1.000000e+00)
  %11956 = and i32 %11946, 1
  %11957 = icmp eq i32 %11956, 0
  %11958 = select i1 %11957, float %11951, float %11955
  %11959 = bitcast float %11958 to i32
  %11960 = shl i32 %11946, 30
  %11961 = and i32 %11960, -2147483648
  %11962 = bitcast float %11826 to i32
  %11963 = xor i32 %11944, %11962
  %11964 = xor i32 %11963, %11961
  %11965 = xor i32 %11964, %11959
  %11966 = bitcast i32 %11965 to float
  %11967 = tail call i1 @llvm.amdgcn.class.f32(float %11827, i32 504)
  %11968 = select i1 %11967, float %11966, float 0x7FF8000000000000
  %11969 = tail call float @llvm.fabs.f32(float %11968)
  %11970 = tail call float @llvm.amdgcn.frexp.mant.f32(float %11969)
  %11971 = fcmp olt float %11970, 0x3FE5555560000000
  %11972 = zext i1 %11971 to i32
  %11973 = tail call float @llvm.amdgcn.ldexp.f32(float %11970, i32 %11972)
  %11974 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %11969)
  %11975 = sub nsw i32 %11974, %11972
  %11976 = fadd float %11973, -1.000000e+00
  %11977 = fadd float %11973, 1.000000e+00
  %11978 = fadd float %11977, -1.000000e+00
  %11979 = fsub float %11973, %11978
  %11980 = tail call float @llvm.amdgcn.rcp.f32(float %11977)
  %11981 = fmul float %11976, %11980
  %11982 = fmul float %11977, %11981
  %11983 = fneg float %11982
  %11984 = tail call float @llvm.fma.f32(float %11981, float %11977, float %11983)
  %11985 = tail call float @llvm.fma.f32(float %11981, float %11979, float %11984)
  %11986 = fadd float %11982, %11985
  %11987 = fsub float %11986, %11982
  %11988 = fsub float %11985, %11987
  %11989 = fsub float %11976, %11986
  %11990 = fsub float %11976, %11989
  %11991 = fsub float %11990, %11986
  %11992 = fsub float %11991, %11988
  %11993 = fadd float %11989, %11992
  %11994 = fmul float %11980, %11993
  %11995 = fadd float %11981, %11994
  %11996 = fsub float %11995, %11981
  %11997 = fsub float %11994, %11996
  %11998 = fmul float %11995, %11995
  %11999 = fneg float %11998
  %12000 = tail call float @llvm.fma.f32(float %11995, float %11995, float %11999)
  %12001 = fmul float %11997, 2.000000e+00
  %12002 = tail call float @llvm.fma.f32(float %11995, float %12001, float %12000)
  %12003 = fadd float %11998, %12002
  %12004 = fsub float %12003, %11998
  %12005 = fsub float %12002, %12004
  %12006 = tail call float @llvm.fmuladd.f32(float %12003, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %12007 = tail call float @llvm.fmuladd.f32(float %12003, float %12006, float 0x3FD999BDE0000000)
  %12008 = sitofp i32 %11975 to float
  %12009 = fmul float %12008, 0x3FE62E4300000000
  %12010 = fneg float %12009
  %12011 = tail call float @llvm.fma.f32(float %12008, float 0x3FE62E4300000000, float %12010)
  %12012 = tail call float @llvm.fma.f32(float %12008, float 0xBE205C6100000000, float %12011)
  %12013 = fadd float %12009, %12012
  %12014 = fsub float %12013, %12009
  %12015 = fsub float %12012, %12014
  %12016 = tail call float @llvm.amdgcn.ldexp.f32(float %11995, i32 1)
  %12017 = fmul float %11995, %12003
  %12018 = fneg float %12017
  %12019 = tail call float @llvm.fma.f32(float %12003, float %11995, float %12018)
  %12020 = tail call float @llvm.fma.f32(float %12003, float %11997, float %12019)
  %12021 = tail call float @llvm.fma.f32(float %12005, float %11995, float %12020)
  %12022 = fadd float %12017, %12021
  %12023 = fsub float %12022, %12017
  %12024 = fsub float %12021, %12023
  %12025 = fmul float %12003, %12007
  %12026 = fneg float %12025
  %12027 = tail call float @llvm.fma.f32(float %12003, float %12007, float %12026)
  %12028 = tail call float @llvm.fma.f32(float %12005, float %12007, float %12027)
  %12029 = fadd float %12025, %12028
  %12030 = fsub float %12029, %12025
  %12031 = fsub float %12028, %12030
  %12032 = fadd float %12029, 0x3FE5555540000000
  %12033 = fadd float %12032, 0xBFE5555540000000
  %12034 = fsub float %12029, %12033
  %12035 = fadd float %12031, 0x3E2E720200000000
  %12036 = fadd float %12035, %12034
  %12037 = fadd float %12032, %12036
  %12038 = fsub float %12037, %12032
  %12039 = fsub float %12036, %12038
  %12040 = fmul float %12022, %12037
  %12041 = fneg float %12040
  %12042 = tail call float @llvm.fma.f32(float %12022, float %12037, float %12041)
  %12043 = tail call float @llvm.fma.f32(float %12022, float %12039, float %12042)
  %12044 = tail call float @llvm.fma.f32(float %12024, float %12037, float %12043)
  %12045 = tail call float @llvm.amdgcn.ldexp.f32(float %11997, i32 1)
  %12046 = fadd float %12040, %12044
  %12047 = fsub float %12046, %12040
  %12048 = fsub float %12044, %12047
  %12049 = fadd float %12016, %12046
  %12050 = fsub float %12049, %12016
  %12051 = fsub float %12046, %12050
  %12052 = fadd float %12045, %12048
  %12053 = fadd float %12052, %12051
  %12054 = fadd float %12049, %12053
  %12055 = fsub float %12054, %12049
  %12056 = fsub float %12053, %12055
  %12057 = fadd float %12013, %12054
  %12058 = fsub float %12057, %12013
  %12059 = fsub float %12057, %12058
  %12060 = fsub float %12013, %12059
  %12061 = fsub float %12054, %12058
  %12062 = fadd float %12061, %12060
  %12063 = fadd float %12015, %12056
  %12064 = fsub float %12063, %12015
  %12065 = fsub float %12063, %12064
  %12066 = fsub float %12015, %12065
  %12067 = fsub float %12056, %12064
  %12068 = fadd float %12067, %12066
  %12069 = fadd float %12063, %12062
  %12070 = fadd float %12057, %12069
  %12071 = fsub float %12070, %12057
  %12072 = fsub float %12069, %12071
  %12073 = fadd float %12068, %12072
  %12074 = fadd float %12070, %12073
  %12075 = fsub float %12074, %12070
  %12076 = fsub float %12073, %12075
  %12077 = fmul float %12074, 2.000000e+00
  %12078 = fneg float %12077
  %12079 = tail call float @llvm.fma.f32(float %12074, float 2.000000e+00, float %12078)
  %12080 = fmul float %12074, 0.000000e+00
  %12081 = tail call float @llvm.fma.f32(float %12076, float 2.000000e+00, float %12080)
  %12082 = fadd float %12079, %12081
  %12083 = fadd float %12077, %12082
  %12084 = fsub float %12083, %12077
  %12085 = fsub float %12082, %12084
  %12086 = tail call float @llvm.fabs.f32(float %12077) #3
  %12087 = fcmp oeq float %12086, 0x7FF0000000000000
  %12088 = select i1 %12087, float %12077, float %12083
  %12089 = tail call float @llvm.fabs.f32(float %12088) #3
  %12090 = fcmp oeq float %12089, 0x7FF0000000000000
  %12091 = select i1 %12090, float 0.000000e+00, float %12085
  %12092 = fcmp oeq float %12088, 0x40562E4300000000
  %12093 = select i1 %12092, float 0x3EE0000000000000, float 0.000000e+00
  %12094 = fsub float %12088, %12093
  %12095 = fadd float %12093, %12091
  %12096 = fmul float %12094, 0x3FF7154760000000
  %12097 = tail call float @llvm.rint.f32(float %12096)
  %12098 = fcmp ogt float %12094, 0x40562E4300000000
  %12099 = fcmp olt float %12094, 0xC059D1DA00000000
  %12100 = fneg float %12096
  %12101 = tail call float @llvm.fma.f32(float %12094, float 0x3FF7154760000000, float %12100)
  %12102 = tail call float @llvm.fma.f32(float %12094, float 0x3E54AE0BE0000000, float %12101)
  %12103 = fsub float %12096, %12097
  %12104 = fadd float %12102, %12103
  %12105 = tail call float @llvm.exp2.f32(float %12104)
  %12106 = fptosi float %12097 to i32
  %12107 = tail call float @llvm.amdgcn.ldexp.f32(float %12105, i32 %12106)
  %12108 = select i1 %12099, float 0.000000e+00, float %12107
  %12109 = select i1 %12098, float 0x7FF0000000000000, float %12108
  %12110 = tail call float @llvm.fma.f32(float %12109, float %12095, float %12109)
  %12111 = tail call float @llvm.fabs.f32(float %12109) #3
  %12112 = fcmp oeq float %12111, 0x7FF0000000000000
  %12113 = select i1 %12112, float %12109, float %12110
  %12114 = tail call float @llvm.fabs.f32(float %12113)
  %12115 = fcmp oeq float %11969, 0x7FF0000000000000
  %12116 = fcmp oeq float %11968, 0.000000e+00
  %12117 = fcmp uno float %11968, 0.000000e+00
  %12118 = fmul contract float %12114, 1.000000e+01
  %12119 = fadd contract float %12118, 1.000000e+00
  %12120 = select i1 %12115, float 0x7FF0000000000000, float %12119
  %12121 = select i1 %12116, float 1.000000e+00, float %12120
  %12122 = select i1 %12117, float 0x7FF8000000000000, float %12121
  %12123 = fmul contract float %11825, %12122
  %12124 = fadd contract float %11661, %12123
  br i1 %11659, label %11658, label %12125, !llvm.loop !9

12125:                                            ; preds = %11943
  %12126 = load float, float addrspace(1)* %0, align 4, !tbaa !4
  %12127 = fadd contract float %12126, -1.000000e+00
  %12128 = fmul contract float %12127, 2.500000e-01
  %12129 = fadd contract float %12128, 1.000000e+00
  %12130 = load float, float addrspace(1)* %3, align 4, !tbaa !4
  %12131 = fadd contract float %12130, -1.000000e+00
  %12132 = fmul contract float %12131, 2.500000e-01
  %12133 = fadd contract float %12132, 1.000000e+00
  %12134 = fmul contract float %12129, 0x400921CAC0000000
  %12135 = tail call float @llvm.fabs.f32(float %12134)
  %12136 = fcmp olt float %12135, 1.310720e+05
  br i1 %12136, label %12243, label %12137

12137:                                            ; preds = %12125
  %12138 = bitcast float %12135 to i32
  %12139 = lshr i32 %12138, 23
  %12140 = and i32 %12138, 8388607
  %12141 = or i32 %12140, 8388608
  %12142 = zext i32 %12141 to i64
  %12143 = mul nuw nsw i64 %12142, 4266746795
  %12144 = trunc i64 %12143 to i32
  %12145 = lshr i64 %12143, 32
  %12146 = mul nuw nsw i64 %12142, 1011060801
  %12147 = add nuw nsw i64 %12145, %12146
  %12148 = trunc i64 %12147 to i32
  %12149 = lshr i64 %12147, 32
  %12150 = mul nuw nsw i64 %12142, 3680671129
  %12151 = add nuw nsw i64 %12149, %12150
  %12152 = trunc i64 %12151 to i32
  %12153 = lshr i64 %12151, 32
  %12154 = mul nuw nsw i64 %12142, 4113882560
  %12155 = add nuw nsw i64 %12153, %12154
  %12156 = trunc i64 %12155 to i32
  %12157 = lshr i64 %12155, 32
  %12158 = mul nuw nsw i64 %12142, 4230436817
  %12159 = add nuw nsw i64 %12157, %12158
  %12160 = trunc i64 %12159 to i32
  %12161 = lshr i64 %12159, 32
  %12162 = mul nuw nsw i64 %12142, 1313084713
  %12163 = add nuw nsw i64 %12161, %12162
  %12164 = trunc i64 %12163 to i32
  %12165 = lshr i64 %12163, 32
  %12166 = mul nuw nsw i64 %12142, 2734261102
  %12167 = add nuw nsw i64 %12165, %12166
  %12168 = trunc i64 %12167 to i32
  %12169 = lshr i64 %12167, 32
  %12170 = trunc i64 %12169 to i32
  %12171 = add nsw i32 %12139, -120
  %12172 = icmp ugt i32 %12171, 63
  %12173 = select i1 %12172, i32 %12164, i32 %12170
  %12174 = select i1 %12172, i32 %12160, i32 %12168
  %12175 = select i1 %12172, i32 %12156, i32 %12164
  %12176 = select i1 %12172, i32 %12152, i32 %12160
  %12177 = select i1 %12172, i32 %12148, i32 %12156
  %12178 = select i1 %12172, i32 %12144, i32 %12152
  %12179 = select i1 %12172, i32 -64, i32 0
  %12180 = add nsw i32 %12179, %12171
  %12181 = icmp ugt i32 %12180, 31
  %12182 = select i1 %12181, i32 %12174, i32 %12173
  %12183 = select i1 %12181, i32 %12175, i32 %12174
  %12184 = select i1 %12181, i32 %12176, i32 %12175
  %12185 = select i1 %12181, i32 %12177, i32 %12176
  %12186 = select i1 %12181, i32 %12178, i32 %12177
  %12187 = select i1 %12181, i32 -32, i32 0
  %12188 = add nsw i32 %12187, %12180
  %12189 = icmp ugt i32 %12188, 31
  %12190 = select i1 %12189, i32 %12183, i32 %12182
  %12191 = select i1 %12189, i32 %12184, i32 %12183
  %12192 = select i1 %12189, i32 %12185, i32 %12184
  %12193 = select i1 %12189, i32 %12186, i32 %12185
  %12194 = select i1 %12189, i32 -32, i32 0
  %12195 = add nsw i32 %12194, %12188
  %12196 = icmp eq i32 %12195, 0
  %12197 = sub nsw i32 32, %12195
  %12198 = tail call i32 @llvm.fshr.i32(i32 %12190, i32 %12191, i32 %12197)
  %12199 = tail call i32 @llvm.fshr.i32(i32 %12191, i32 %12192, i32 %12197)
  %12200 = tail call i32 @llvm.fshr.i32(i32 %12192, i32 %12193, i32 %12197)
  %12201 = select i1 %12196, i32 %12190, i32 %12198
  %12202 = select i1 %12196, i32 %12191, i32 %12199
  %12203 = select i1 %12196, i32 %12192, i32 %12200
  %12204 = lshr i32 %12201, 29
  %12205 = tail call i32 @llvm.fshl.i32(i32 %12201, i32 %12202, i32 2)
  %12206 = tail call i32 @llvm.fshl.i32(i32 %12202, i32 %12203, i32 2)
  %12207 = tail call i32 @llvm.fshl.i32(i32 %12203, i32 %12193, i32 2)
  %12208 = and i32 %12204, 1
  %12209 = sub nsw i32 0, %12208
  %12210 = shl i32 %12204, 31
  %12211 = xor i32 %12205, %12209
  %12212 = xor i32 %12206, %12209
  %12213 = xor i32 %12207, %12209
  %12214 = tail call i32 @llvm.ctlz.i32(i32 %12211, i1 false), !range !8
  %12215 = sub nsw i32 31, %12214
  %12216 = tail call i32 @llvm.fshr.i32(i32 %12211, i32 %12212, i32 %12215)
  %12217 = tail call i32 @llvm.fshr.i32(i32 %12212, i32 %12213, i32 %12215)
  %12218 = shl nuw nsw i32 %12214, 23
  %12219 = sub nuw nsw i32 1056964608, %12218
  %12220 = lshr i32 %12216, 9
  %12221 = or i32 %12220, %12219
  %12222 = or i32 %12221, %12210
  %12223 = bitcast i32 %12222 to float
  %12224 = tail call i32 @llvm.fshl.i32(i32 %12216, i32 %12217, i32 23)
  %12225 = tail call i32 @llvm.ctlz.i32(i32 %12224, i1 false), !range !8
  %12226 = fmul float %12223, 0x3FF921FB40000000
  %12227 = add nuw nsw i32 %12225, %12214
  %12228 = shl nuw nsw i32 %12227, 23
  %12229 = sub nuw nsw i32 855638016, %12228
  %12230 = sub nsw i32 31, %12225
  %12231 = tail call i32 @llvm.fshr.i32(i32 %12224, i32 %12217, i32 %12230)
  %12232 = lshr i32 %12231, 9
  %12233 = or i32 %12229, %12232
  %12234 = or i32 %12233, %12210
  %12235 = bitcast i32 %12234 to float
  %12236 = fneg float %12226
  %12237 = tail call float @llvm.fma.f32(float %12223, float 0x3FF921FB40000000, float %12236)
  %12238 = tail call float @llvm.fma.f32(float %12223, float 0x3E74442D00000000, float %12237)
  %12239 = tail call float @llvm.fma.f32(float %12235, float 0x3FF921FB40000000, float %12238)
  %12240 = fadd float %12226, %12239
  %12241 = lshr i32 %12201, 30
  %12242 = add nuw nsw i32 %12208, %12241
  br label %12251

12243:                                            ; preds = %12125
  %12244 = fmul float %12135, 0x3FE45F3060000000
  %12245 = tail call float @llvm.rint.f32(float %12244)
  %12246 = tail call float @llvm.fma.f32(float %12245, float 0xBFF921FB40000000, float %12135)
  %12247 = tail call float @llvm.fma.f32(float %12245, float 0xBE74442D00000000, float %12246)
  %12248 = tail call float @llvm.fma.f32(float %12245, float 0xBCF8469880000000, float %12247)
  %12249 = fptosi float %12245 to i32
  %12250 = bitcast float %12135 to i32
  br label %12251

12251:                                            ; preds = %12243, %12137
  %12252 = phi i32 [ %12250, %12243 ], [ %12138, %12137 ]
  %12253 = phi float [ %12248, %12243 ], [ %12240, %12137 ]
  %12254 = phi i32 [ %12249, %12243 ], [ %12242, %12137 ]
  %12255 = fmul float %12253, %12253
  %12256 = tail call float @llvm.fmuladd.f32(float %12255, float 0xBF29833040000000, float 0x3F81103880000000)
  %12257 = tail call float @llvm.fmuladd.f32(float %12255, float %12256, float 0xBFC55553A0000000)
  %12258 = fmul float %12255, %12257
  %12259 = tail call float @llvm.fmuladd.f32(float %12253, float %12258, float %12253)
  %12260 = tail call float @llvm.fmuladd.f32(float %12255, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %12261 = tail call float @llvm.fmuladd.f32(float %12255, float %12260, float 0x3FA5557EE0000000)
  %12262 = tail call float @llvm.fmuladd.f32(float %12255, float %12261, float 0xBFE0000080000000)
  %12263 = tail call float @llvm.fmuladd.f32(float %12255, float %12262, float 1.000000e+00)
  %12264 = and i32 %12254, 1
  %12265 = icmp eq i32 %12264, 0
  %12266 = select i1 %12265, float %12259, float %12263
  %12267 = bitcast float %12266 to i32
  %12268 = shl i32 %12254, 30
  %12269 = and i32 %12268, -2147483648
  %12270 = bitcast float %12134 to i32
  %12271 = xor i32 %12252, %12270
  %12272 = xor i32 %12271, %12269
  %12273 = xor i32 %12272, %12267
  %12274 = bitcast i32 %12273 to float
  %12275 = tail call i1 @llvm.amdgcn.class.f32(float %12135, i32 504)
  %12276 = select i1 %12275, float %12274, float 0x7FF8000000000000
  %12277 = tail call float @llvm.fabs.f32(float %12276)
  %12278 = tail call float @llvm.amdgcn.frexp.mant.f32(float %12277)
  %12279 = fcmp olt float %12278, 0x3FE5555560000000
  %12280 = zext i1 %12279 to i32
  %12281 = tail call float @llvm.amdgcn.ldexp.f32(float %12278, i32 %12280)
  %12282 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %12277)
  %12283 = sub nsw i32 %12282, %12280
  %12284 = fadd float %12281, -1.000000e+00
  %12285 = fadd float %12281, 1.000000e+00
  %12286 = fadd float %12285, -1.000000e+00
  %12287 = fsub float %12281, %12286
  %12288 = tail call float @llvm.amdgcn.rcp.f32(float %12285)
  %12289 = fmul float %12284, %12288
  %12290 = fmul float %12285, %12289
  %12291 = fneg float %12290
  %12292 = tail call float @llvm.fma.f32(float %12289, float %12285, float %12291)
  %12293 = tail call float @llvm.fma.f32(float %12289, float %12287, float %12292)
  %12294 = fadd float %12290, %12293
  %12295 = fsub float %12294, %12290
  %12296 = fsub float %12293, %12295
  %12297 = fsub float %12284, %12294
  %12298 = fsub float %12284, %12297
  %12299 = fsub float %12298, %12294
  %12300 = fsub float %12299, %12296
  %12301 = fadd float %12297, %12300
  %12302 = fmul float %12288, %12301
  %12303 = fadd float %12289, %12302
  %12304 = fsub float %12303, %12289
  %12305 = fsub float %12302, %12304
  %12306 = fmul float %12303, %12303
  %12307 = fneg float %12306
  %12308 = tail call float @llvm.fma.f32(float %12303, float %12303, float %12307)
  %12309 = fmul float %12305, 2.000000e+00
  %12310 = tail call float @llvm.fma.f32(float %12303, float %12309, float %12308)
  %12311 = fadd float %12306, %12310
  %12312 = fsub float %12311, %12306
  %12313 = fsub float %12310, %12312
  %12314 = tail call float @llvm.fmuladd.f32(float %12311, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %12315 = tail call float @llvm.fmuladd.f32(float %12311, float %12314, float 0x3FD999BDE0000000)
  %12316 = sitofp i32 %12283 to float
  %12317 = fmul float %12316, 0x3FE62E4300000000
  %12318 = fneg float %12317
  %12319 = tail call float @llvm.fma.f32(float %12316, float 0x3FE62E4300000000, float %12318)
  %12320 = tail call float @llvm.fma.f32(float %12316, float 0xBE205C6100000000, float %12319)
  %12321 = fadd float %12317, %12320
  %12322 = fsub float %12321, %12317
  %12323 = fsub float %12320, %12322
  %12324 = tail call float @llvm.amdgcn.ldexp.f32(float %12303, i32 1)
  %12325 = fmul float %12303, %12311
  %12326 = fneg float %12325
  %12327 = tail call float @llvm.fma.f32(float %12311, float %12303, float %12326)
  %12328 = tail call float @llvm.fma.f32(float %12311, float %12305, float %12327)
  %12329 = tail call float @llvm.fma.f32(float %12313, float %12303, float %12328)
  %12330 = fadd float %12325, %12329
  %12331 = fsub float %12330, %12325
  %12332 = fsub float %12329, %12331
  %12333 = fmul float %12311, %12315
  %12334 = fneg float %12333
  %12335 = tail call float @llvm.fma.f32(float %12311, float %12315, float %12334)
  %12336 = tail call float @llvm.fma.f32(float %12313, float %12315, float %12335)
  %12337 = fadd float %12333, %12336
  %12338 = fsub float %12337, %12333
  %12339 = fsub float %12336, %12338
  %12340 = fadd float %12337, 0x3FE5555540000000
  %12341 = fadd float %12340, 0xBFE5555540000000
  %12342 = fsub float %12337, %12341
  %12343 = fadd float %12339, 0x3E2E720200000000
  %12344 = fadd float %12343, %12342
  %12345 = fadd float %12340, %12344
  %12346 = fsub float %12345, %12340
  %12347 = fsub float %12344, %12346
  %12348 = fmul float %12330, %12345
  %12349 = fneg float %12348
  %12350 = tail call float @llvm.fma.f32(float %12330, float %12345, float %12349)
  %12351 = tail call float @llvm.fma.f32(float %12330, float %12347, float %12350)
  %12352 = tail call float @llvm.fma.f32(float %12332, float %12345, float %12351)
  %12353 = tail call float @llvm.amdgcn.ldexp.f32(float %12305, i32 1)
  %12354 = fadd float %12348, %12352
  %12355 = fsub float %12354, %12348
  %12356 = fsub float %12352, %12355
  %12357 = fadd float %12324, %12354
  %12358 = fsub float %12357, %12324
  %12359 = fsub float %12354, %12358
  %12360 = fadd float %12353, %12356
  %12361 = fadd float %12360, %12359
  %12362 = fadd float %12357, %12361
  %12363 = fsub float %12362, %12357
  %12364 = fsub float %12361, %12363
  %12365 = fadd float %12321, %12362
  %12366 = fsub float %12365, %12321
  %12367 = fsub float %12365, %12366
  %12368 = fsub float %12321, %12367
  %12369 = fsub float %12362, %12366
  %12370 = fadd float %12369, %12368
  %12371 = fadd float %12323, %12364
  %12372 = fsub float %12371, %12323
  %12373 = fsub float %12371, %12372
  %12374 = fsub float %12323, %12373
  %12375 = fsub float %12364, %12372
  %12376 = fadd float %12375, %12374
  %12377 = fadd float %12371, %12370
  %12378 = fadd float %12365, %12377
  %12379 = fsub float %12378, %12365
  %12380 = fsub float %12377, %12379
  %12381 = fadd float %12376, %12380
  %12382 = fadd float %12378, %12381
  %12383 = fsub float %12382, %12378
  %12384 = fsub float %12381, %12383
  %12385 = fmul float %12382, 2.000000e+00
  %12386 = fneg float %12385
  %12387 = tail call float @llvm.fma.f32(float %12382, float 2.000000e+00, float %12386)
  %12388 = fmul float %12382, 0.000000e+00
  %12389 = tail call float @llvm.fma.f32(float %12384, float 2.000000e+00, float %12388)
  %12390 = fadd float %12387, %12389
  %12391 = fadd float %12385, %12390
  %12392 = fsub float %12391, %12385
  %12393 = fsub float %12390, %12392
  %12394 = tail call float @llvm.fabs.f32(float %12385) #3
  %12395 = fcmp oeq float %12394, 0x7FF0000000000000
  %12396 = select i1 %12395, float %12385, float %12391
  %12397 = tail call float @llvm.fabs.f32(float %12396) #3
  %12398 = fcmp oeq float %12397, 0x7FF0000000000000
  %12399 = select i1 %12398, float 0.000000e+00, float %12393
  %12400 = fcmp oeq float %12396, 0x40562E4300000000
  %12401 = select i1 %12400, float 0x3EE0000000000000, float 0.000000e+00
  %12402 = fsub float %12396, %12401
  %12403 = fadd float %12401, %12399
  %12404 = fmul float %12402, 0x3FF7154760000000
  %12405 = tail call float @llvm.rint.f32(float %12404)
  %12406 = fcmp ogt float %12402, 0x40562E4300000000
  %12407 = fcmp olt float %12402, 0xC059D1DA00000000
  %12408 = fneg float %12404
  %12409 = tail call float @llvm.fma.f32(float %12402, float 0x3FF7154760000000, float %12408)
  %12410 = tail call float @llvm.fma.f32(float %12402, float 0x3E54AE0BE0000000, float %12409)
  %12411 = fsub float %12404, %12405
  %12412 = fadd float %12410, %12411
  %12413 = tail call float @llvm.exp2.f32(float %12412)
  %12414 = fptosi float %12405 to i32
  %12415 = tail call float @llvm.amdgcn.ldexp.f32(float %12413, i32 %12414)
  %12416 = select i1 %12407, float 0.000000e+00, float %12415
  %12417 = select i1 %12406, float 0x7FF0000000000000, float %12416
  %12418 = tail call float @llvm.fma.f32(float %12417, float %12403, float %12417)
  %12419 = tail call float @llvm.fabs.f32(float %12417) #3
  %12420 = fcmp oeq float %12419, 0x7FF0000000000000
  %12421 = select i1 %12420, float %12417, float %12418
  %12422 = tail call float @llvm.fabs.f32(float %12421)
  %12423 = fcmp oeq float %12277, 0x7FF0000000000000
  %12424 = fcmp oeq float %12276, 0.000000e+00
  %12425 = select i1 %12423, float 0x7FF0000000000000, float %12422
  %12426 = select i1 %12424, float 0.000000e+00, float %12425
  %12427 = fcmp uno float %12276, 0.000000e+00
  %12428 = select i1 %12427, float 0x7FF8000000000000, float %12426
  %12429 = fadd contract float %12133, -1.000000e+00
  %12430 = tail call float @llvm.fabs.f32(float %12429)
  %12431 = tail call float @llvm.amdgcn.frexp.mant.f32(float %12430)
  %12432 = fcmp olt float %12431, 0x3FE5555560000000
  %12433 = zext i1 %12432 to i32
  %12434 = tail call float @llvm.amdgcn.ldexp.f32(float %12431, i32 %12433)
  %12435 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %12430)
  %12436 = sub nsw i32 %12435, %12433
  %12437 = fadd float %12434, -1.000000e+00
  %12438 = fadd float %12434, 1.000000e+00
  %12439 = fadd float %12438, -1.000000e+00
  %12440 = fsub float %12434, %12439
  %12441 = tail call float @llvm.amdgcn.rcp.f32(float %12438)
  %12442 = fmul float %12437, %12441
  %12443 = fmul float %12438, %12442
  %12444 = fneg float %12443
  %12445 = tail call float @llvm.fma.f32(float %12442, float %12438, float %12444)
  %12446 = tail call float @llvm.fma.f32(float %12442, float %12440, float %12445)
  %12447 = fadd float %12443, %12446
  %12448 = fsub float %12447, %12443
  %12449 = fsub float %12446, %12448
  %12450 = fsub float %12437, %12447
  %12451 = fsub float %12437, %12450
  %12452 = fsub float %12451, %12447
  %12453 = fsub float %12452, %12449
  %12454 = fadd float %12450, %12453
  %12455 = fmul float %12441, %12454
  %12456 = fadd float %12442, %12455
  %12457 = fsub float %12456, %12442
  %12458 = fsub float %12455, %12457
  %12459 = fmul float %12456, %12456
  %12460 = fneg float %12459
  %12461 = tail call float @llvm.fma.f32(float %12456, float %12456, float %12460)
  %12462 = fmul float %12458, 2.000000e+00
  %12463 = tail call float @llvm.fma.f32(float %12456, float %12462, float %12461)
  %12464 = fadd float %12459, %12463
  %12465 = fsub float %12464, %12459
  %12466 = fsub float %12463, %12465
  %12467 = tail call float @llvm.fmuladd.f32(float %12464, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %12468 = tail call float @llvm.fmuladd.f32(float %12464, float %12467, float 0x3FD999BDE0000000)
  %12469 = sitofp i32 %12436 to float
  %12470 = fmul float %12469, 0x3FE62E4300000000
  %12471 = fneg float %12470
  %12472 = tail call float @llvm.fma.f32(float %12469, float 0x3FE62E4300000000, float %12471)
  %12473 = tail call float @llvm.fma.f32(float %12469, float 0xBE205C6100000000, float %12472)
  %12474 = fadd float %12470, %12473
  %12475 = fsub float %12474, %12470
  %12476 = fsub float %12473, %12475
  %12477 = tail call float @llvm.amdgcn.ldexp.f32(float %12456, i32 1)
  %12478 = fmul float %12456, %12464
  %12479 = fneg float %12478
  %12480 = tail call float @llvm.fma.f32(float %12464, float %12456, float %12479)
  %12481 = tail call float @llvm.fma.f32(float %12464, float %12458, float %12480)
  %12482 = tail call float @llvm.fma.f32(float %12466, float %12456, float %12481)
  %12483 = fadd float %12478, %12482
  %12484 = fsub float %12483, %12478
  %12485 = fsub float %12482, %12484
  %12486 = fmul float %12464, %12468
  %12487 = fneg float %12486
  %12488 = tail call float @llvm.fma.f32(float %12464, float %12468, float %12487)
  %12489 = tail call float @llvm.fma.f32(float %12466, float %12468, float %12488)
  %12490 = fadd float %12486, %12489
  %12491 = fsub float %12490, %12486
  %12492 = fsub float %12489, %12491
  %12493 = fadd float %12490, 0x3FE5555540000000
  %12494 = fadd float %12493, 0xBFE5555540000000
  %12495 = fsub float %12490, %12494
  %12496 = fadd float %12492, 0x3E2E720200000000
  %12497 = fadd float %12496, %12495
  %12498 = fadd float %12493, %12497
  %12499 = fsub float %12498, %12493
  %12500 = fsub float %12497, %12499
  %12501 = fmul float %12483, %12498
  %12502 = fneg float %12501
  %12503 = tail call float @llvm.fma.f32(float %12483, float %12498, float %12502)
  %12504 = tail call float @llvm.fma.f32(float %12483, float %12500, float %12503)
  %12505 = tail call float @llvm.fma.f32(float %12485, float %12498, float %12504)
  %12506 = tail call float @llvm.amdgcn.ldexp.f32(float %12458, i32 1)
  %12507 = fadd float %12501, %12505
  %12508 = fsub float %12507, %12501
  %12509 = fsub float %12505, %12508
  %12510 = fadd float %12477, %12507
  %12511 = fsub float %12510, %12477
  %12512 = fsub float %12507, %12511
  %12513 = fadd float %12506, %12509
  %12514 = fadd float %12513, %12512
  %12515 = fadd float %12510, %12514
  %12516 = fsub float %12515, %12510
  %12517 = fsub float %12514, %12516
  %12518 = fadd float %12474, %12515
  %12519 = fsub float %12518, %12474
  %12520 = fsub float %12518, %12519
  %12521 = fsub float %12474, %12520
  %12522 = fsub float %12515, %12519
  %12523 = fadd float %12522, %12521
  %12524 = fadd float %12476, %12517
  %12525 = fsub float %12524, %12476
  %12526 = fsub float %12524, %12525
  %12527 = fsub float %12476, %12526
  %12528 = fsub float %12517, %12525
  %12529 = fadd float %12528, %12527
  %12530 = fadd float %12524, %12523
  %12531 = fadd float %12518, %12530
  %12532 = fsub float %12531, %12518
  %12533 = fsub float %12530, %12532
  %12534 = fadd float %12529, %12533
  %12535 = fadd float %12531, %12534
  %12536 = fsub float %12535, %12531
  %12537 = fsub float %12534, %12536
  %12538 = fmul float %12535, 2.000000e+00
  %12539 = fneg float %12538
  %12540 = tail call float @llvm.fma.f32(float %12535, float 2.000000e+00, float %12539)
  %12541 = fmul float %12535, 0.000000e+00
  %12542 = tail call float @llvm.fma.f32(float %12537, float 2.000000e+00, float %12541)
  %12543 = fadd float %12540, %12542
  %12544 = fadd float %12538, %12543
  %12545 = fsub float %12544, %12538
  %12546 = fsub float %12543, %12545
  %12547 = tail call float @llvm.fabs.f32(float %12538) #3
  %12548 = fcmp oeq float %12547, 0x7FF0000000000000
  %12549 = select i1 %12548, float %12538, float %12544
  %12550 = tail call float @llvm.fabs.f32(float %12549) #3
  %12551 = fcmp oeq float %12550, 0x7FF0000000000000
  %12552 = select i1 %12551, float 0.000000e+00, float %12546
  %12553 = fcmp oeq float %12549, 0x40562E4300000000
  %12554 = select i1 %12553, float 0x3EE0000000000000, float 0.000000e+00
  %12555 = fsub float %12549, %12554
  %12556 = fadd float %12554, %12552
  %12557 = fmul float %12555, 0x3FF7154760000000
  %12558 = tail call float @llvm.rint.f32(float %12557)
  %12559 = fcmp ogt float %12555, 0x40562E4300000000
  %12560 = fcmp olt float %12555, 0xC059D1DA00000000
  %12561 = fneg float %12557
  %12562 = tail call float @llvm.fma.f32(float %12555, float 0x3FF7154760000000, float %12561)
  %12563 = tail call float @llvm.fma.f32(float %12555, float 0x3E54AE0BE0000000, float %12562)
  %12564 = fsub float %12557, %12558
  %12565 = fadd float %12563, %12564
  %12566 = tail call float @llvm.exp2.f32(float %12565)
  %12567 = fptosi float %12558 to i32
  %12568 = tail call float @llvm.amdgcn.ldexp.f32(float %12566, i32 %12567)
  %12569 = select i1 %12560, float 0.000000e+00, float %12568
  %12570 = select i1 %12559, float 0x7FF0000000000000, float %12569
  %12571 = tail call float @llvm.fma.f32(float %12570, float %12556, float %12570)
  %12572 = tail call float @llvm.fabs.f32(float %12570) #3
  %12573 = fcmp oeq float %12572, 0x7FF0000000000000
  %12574 = select i1 %12573, float %12570, float %12571
  %12575 = tail call float @llvm.fabs.f32(float %12574)
  %12576 = fcmp oeq float %12430, 0x7FF0000000000000
  %12577 = fcmp oeq float %12429, 0.000000e+00
  %12578 = select i1 %12576, float 0x7FF0000000000000, float %12575
  %12579 = select i1 %12577, float 0.000000e+00, float %12578
  %12580 = fcmp uno float %12429, 0.000000e+00
  %12581 = select i1 %12580, float 0x7FF8000000000000, float %12579
  %12582 = fadd contract float %12581, %12428
  %12583 = fadd contract float %12582, 0.000000e+00
  br label %12584

12584:                                            ; preds = %12871, %12251
  %12585 = phi i1 [ true, %12251 ], [ false, %12871 ]
  %12586 = phi i32 [ 0, %12251 ], [ 1, %12871 ]
  %12587 = phi float [ %12583, %12251 ], [ %13052, %12871 ]
  %12588 = zext i32 %12586 to i64
  %12589 = getelementptr inbounds float, float addrspace(1)* %0, i64 %12588
  %12590 = load float, float addrspace(1)* %12589, align 4, !tbaa !4
  %12591 = fadd contract float %12590, -1.000000e+00
  %12592 = fmul contract float %12591, 2.500000e-01
  %12593 = fadd contract float %12592, 1.000000e+00
  %12594 = add nuw nsw i32 %12586, 1
  %12595 = zext i32 %12594 to i64
  %12596 = getelementptr inbounds float, float addrspace(1)* %0, i64 %12595
  %12597 = load float, float addrspace(1)* %12596, align 4, !tbaa !4
  %12598 = fadd contract float %12597, -1.000000e+00
  %12599 = fmul contract float %12598, 2.500000e-01
  %12600 = fadd contract float %12599, 1.000000e+00
  %12601 = fadd contract float %12593, -1.000000e+00
  %12602 = tail call float @llvm.fabs.f32(float %12601)
  %12603 = tail call float @llvm.amdgcn.frexp.mant.f32(float %12602)
  %12604 = fcmp olt float %12603, 0x3FE5555560000000
  %12605 = zext i1 %12604 to i32
  %12606 = tail call float @llvm.amdgcn.ldexp.f32(float %12603, i32 %12605)
  %12607 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %12602)
  %12608 = sub nsw i32 %12607, %12605
  %12609 = fadd float %12606, -1.000000e+00
  %12610 = fadd float %12606, 1.000000e+00
  %12611 = fadd float %12610, -1.000000e+00
  %12612 = fsub float %12606, %12611
  %12613 = tail call float @llvm.amdgcn.rcp.f32(float %12610)
  %12614 = fmul float %12609, %12613
  %12615 = fmul float %12610, %12614
  %12616 = fneg float %12615
  %12617 = tail call float @llvm.fma.f32(float %12614, float %12610, float %12616)
  %12618 = tail call float @llvm.fma.f32(float %12614, float %12612, float %12617)
  %12619 = fadd float %12615, %12618
  %12620 = fsub float %12619, %12615
  %12621 = fsub float %12618, %12620
  %12622 = fsub float %12609, %12619
  %12623 = fsub float %12609, %12622
  %12624 = fsub float %12623, %12619
  %12625 = fsub float %12624, %12621
  %12626 = fadd float %12622, %12625
  %12627 = fmul float %12613, %12626
  %12628 = fadd float %12614, %12627
  %12629 = fsub float %12628, %12614
  %12630 = fsub float %12627, %12629
  %12631 = fmul float %12628, %12628
  %12632 = fneg float %12631
  %12633 = tail call float @llvm.fma.f32(float %12628, float %12628, float %12632)
  %12634 = fmul float %12630, 2.000000e+00
  %12635 = tail call float @llvm.fma.f32(float %12628, float %12634, float %12633)
  %12636 = fadd float %12631, %12635
  %12637 = fsub float %12636, %12631
  %12638 = fsub float %12635, %12637
  %12639 = tail call float @llvm.fmuladd.f32(float %12636, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %12640 = tail call float @llvm.fmuladd.f32(float %12636, float %12639, float 0x3FD999BDE0000000)
  %12641 = sitofp i32 %12608 to float
  %12642 = fmul float %12641, 0x3FE62E4300000000
  %12643 = fneg float %12642
  %12644 = tail call float @llvm.fma.f32(float %12641, float 0x3FE62E4300000000, float %12643)
  %12645 = tail call float @llvm.fma.f32(float %12641, float 0xBE205C6100000000, float %12644)
  %12646 = fadd float %12642, %12645
  %12647 = fsub float %12646, %12642
  %12648 = fsub float %12645, %12647
  %12649 = tail call float @llvm.amdgcn.ldexp.f32(float %12628, i32 1)
  %12650 = fmul float %12628, %12636
  %12651 = fneg float %12650
  %12652 = tail call float @llvm.fma.f32(float %12636, float %12628, float %12651)
  %12653 = tail call float @llvm.fma.f32(float %12636, float %12630, float %12652)
  %12654 = tail call float @llvm.fma.f32(float %12638, float %12628, float %12653)
  %12655 = fadd float %12650, %12654
  %12656 = fsub float %12655, %12650
  %12657 = fsub float %12654, %12656
  %12658 = fmul float %12636, %12640
  %12659 = fneg float %12658
  %12660 = tail call float @llvm.fma.f32(float %12636, float %12640, float %12659)
  %12661 = tail call float @llvm.fma.f32(float %12638, float %12640, float %12660)
  %12662 = fadd float %12658, %12661
  %12663 = fsub float %12662, %12658
  %12664 = fsub float %12661, %12663
  %12665 = fadd float %12662, 0x3FE5555540000000
  %12666 = fadd float %12665, 0xBFE5555540000000
  %12667 = fsub float %12662, %12666
  %12668 = fadd float %12664, 0x3E2E720200000000
  %12669 = fadd float %12668, %12667
  %12670 = fadd float %12665, %12669
  %12671 = fsub float %12670, %12665
  %12672 = fsub float %12669, %12671
  %12673 = fmul float %12655, %12670
  %12674 = fneg float %12673
  %12675 = tail call float @llvm.fma.f32(float %12655, float %12670, float %12674)
  %12676 = tail call float @llvm.fma.f32(float %12655, float %12672, float %12675)
  %12677 = tail call float @llvm.fma.f32(float %12657, float %12670, float %12676)
  %12678 = tail call float @llvm.amdgcn.ldexp.f32(float %12630, i32 1)
  %12679 = fadd float %12673, %12677
  %12680 = fsub float %12679, %12673
  %12681 = fsub float %12677, %12680
  %12682 = fadd float %12649, %12679
  %12683 = fsub float %12682, %12649
  %12684 = fsub float %12679, %12683
  %12685 = fadd float %12678, %12681
  %12686 = fadd float %12685, %12684
  %12687 = fadd float %12682, %12686
  %12688 = fsub float %12687, %12682
  %12689 = fsub float %12686, %12688
  %12690 = fadd float %12646, %12687
  %12691 = fsub float %12690, %12646
  %12692 = fsub float %12690, %12691
  %12693 = fsub float %12646, %12692
  %12694 = fsub float %12687, %12691
  %12695 = fadd float %12694, %12693
  %12696 = fadd float %12648, %12689
  %12697 = fsub float %12696, %12648
  %12698 = fsub float %12696, %12697
  %12699 = fsub float %12648, %12698
  %12700 = fsub float %12689, %12697
  %12701 = fadd float %12700, %12699
  %12702 = fadd float %12696, %12695
  %12703 = fadd float %12690, %12702
  %12704 = fsub float %12703, %12690
  %12705 = fsub float %12702, %12704
  %12706 = fadd float %12701, %12705
  %12707 = fadd float %12703, %12706
  %12708 = fsub float %12707, %12703
  %12709 = fsub float %12706, %12708
  %12710 = fmul float %12707, 2.000000e+00
  %12711 = fneg float %12710
  %12712 = tail call float @llvm.fma.f32(float %12707, float 2.000000e+00, float %12711)
  %12713 = fmul float %12707, 0.000000e+00
  %12714 = tail call float @llvm.fma.f32(float %12709, float 2.000000e+00, float %12713)
  %12715 = fadd float %12712, %12714
  %12716 = fadd float %12710, %12715
  %12717 = fsub float %12716, %12710
  %12718 = fsub float %12715, %12717
  %12719 = tail call float @llvm.fabs.f32(float %12710) #3
  %12720 = fcmp oeq float %12719, 0x7FF0000000000000
  %12721 = select i1 %12720, float %12710, float %12716
  %12722 = tail call float @llvm.fabs.f32(float %12721) #3
  %12723 = fcmp oeq float %12722, 0x7FF0000000000000
  %12724 = select i1 %12723, float 0.000000e+00, float %12718
  %12725 = fcmp oeq float %12721, 0x40562E4300000000
  %12726 = select i1 %12725, float 0x3EE0000000000000, float 0.000000e+00
  %12727 = fsub float %12721, %12726
  %12728 = fadd float %12726, %12724
  %12729 = fmul float %12727, 0x3FF7154760000000
  %12730 = tail call float @llvm.rint.f32(float %12729)
  %12731 = fcmp ogt float %12727, 0x40562E4300000000
  %12732 = fcmp olt float %12727, 0xC059D1DA00000000
  %12733 = fneg float %12729
  %12734 = tail call float @llvm.fma.f32(float %12727, float 0x3FF7154760000000, float %12733)
  %12735 = tail call float @llvm.fma.f32(float %12727, float 0x3E54AE0BE0000000, float %12734)
  %12736 = fsub float %12729, %12730
  %12737 = fadd float %12735, %12736
  %12738 = tail call float @llvm.exp2.f32(float %12737)
  %12739 = fptosi float %12730 to i32
  %12740 = tail call float @llvm.amdgcn.ldexp.f32(float %12738, i32 %12739)
  %12741 = select i1 %12732, float 0.000000e+00, float %12740
  %12742 = select i1 %12731, float 0x7FF0000000000000, float %12741
  %12743 = tail call float @llvm.fma.f32(float %12742, float %12728, float %12742)
  %12744 = tail call float @llvm.fabs.f32(float %12742) #3
  %12745 = fcmp oeq float %12744, 0x7FF0000000000000
  %12746 = select i1 %12745, float %12742, float %12743
  %12747 = tail call float @llvm.fabs.f32(float %12746)
  %12748 = fcmp oeq float %12602, 0x7FF0000000000000
  %12749 = fcmp oeq float %12601, 0.000000e+00
  %12750 = select i1 %12748, float 0x7FF0000000000000, float %12747
  %12751 = select i1 %12749, float 0.000000e+00, float %12750
  %12752 = fcmp uno float %12601, 0.000000e+00
  %12753 = select i1 %12752, float 0x7FF8000000000000, float %12751
  %12754 = fmul contract float %12600, 0x400921CAC0000000
  %12755 = tail call float @llvm.fabs.f32(float %12754)
  %12756 = fcmp olt float %12755, 1.310720e+05
  br i1 %12756, label %12863, label %12757

12757:                                            ; preds = %12584
  %12758 = bitcast float %12755 to i32
  %12759 = lshr i32 %12758, 23
  %12760 = and i32 %12758, 8388607
  %12761 = or i32 %12760, 8388608
  %12762 = zext i32 %12761 to i64
  %12763 = mul nuw nsw i64 %12762, 4266746795
  %12764 = trunc i64 %12763 to i32
  %12765 = lshr i64 %12763, 32
  %12766 = mul nuw nsw i64 %12762, 1011060801
  %12767 = add nuw nsw i64 %12765, %12766
  %12768 = trunc i64 %12767 to i32
  %12769 = lshr i64 %12767, 32
  %12770 = mul nuw nsw i64 %12762, 3680671129
  %12771 = add nuw nsw i64 %12769, %12770
  %12772 = trunc i64 %12771 to i32
  %12773 = lshr i64 %12771, 32
  %12774 = mul nuw nsw i64 %12762, 4113882560
  %12775 = add nuw nsw i64 %12773, %12774
  %12776 = trunc i64 %12775 to i32
  %12777 = lshr i64 %12775, 32
  %12778 = mul nuw nsw i64 %12762, 4230436817
  %12779 = add nuw nsw i64 %12777, %12778
  %12780 = trunc i64 %12779 to i32
  %12781 = lshr i64 %12779, 32
  %12782 = mul nuw nsw i64 %12762, 1313084713
  %12783 = add nuw nsw i64 %12781, %12782
  %12784 = trunc i64 %12783 to i32
  %12785 = lshr i64 %12783, 32
  %12786 = mul nuw nsw i64 %12762, 2734261102
  %12787 = add nuw nsw i64 %12785, %12786
  %12788 = trunc i64 %12787 to i32
  %12789 = lshr i64 %12787, 32
  %12790 = trunc i64 %12789 to i32
  %12791 = add nsw i32 %12759, -120
  %12792 = icmp ugt i32 %12791, 63
  %12793 = select i1 %12792, i32 %12784, i32 %12790
  %12794 = select i1 %12792, i32 %12780, i32 %12788
  %12795 = select i1 %12792, i32 %12776, i32 %12784
  %12796 = select i1 %12792, i32 %12772, i32 %12780
  %12797 = select i1 %12792, i32 %12768, i32 %12776
  %12798 = select i1 %12792, i32 %12764, i32 %12772
  %12799 = select i1 %12792, i32 -64, i32 0
  %12800 = add nsw i32 %12799, %12791
  %12801 = icmp ugt i32 %12800, 31
  %12802 = select i1 %12801, i32 %12794, i32 %12793
  %12803 = select i1 %12801, i32 %12795, i32 %12794
  %12804 = select i1 %12801, i32 %12796, i32 %12795
  %12805 = select i1 %12801, i32 %12797, i32 %12796
  %12806 = select i1 %12801, i32 %12798, i32 %12797
  %12807 = select i1 %12801, i32 -32, i32 0
  %12808 = add nsw i32 %12807, %12800
  %12809 = icmp ugt i32 %12808, 31
  %12810 = select i1 %12809, i32 %12803, i32 %12802
  %12811 = select i1 %12809, i32 %12804, i32 %12803
  %12812 = select i1 %12809, i32 %12805, i32 %12804
  %12813 = select i1 %12809, i32 %12806, i32 %12805
  %12814 = select i1 %12809, i32 -32, i32 0
  %12815 = add nsw i32 %12814, %12808
  %12816 = icmp eq i32 %12815, 0
  %12817 = sub nsw i32 32, %12815
  %12818 = tail call i32 @llvm.fshr.i32(i32 %12810, i32 %12811, i32 %12817)
  %12819 = tail call i32 @llvm.fshr.i32(i32 %12811, i32 %12812, i32 %12817)
  %12820 = tail call i32 @llvm.fshr.i32(i32 %12812, i32 %12813, i32 %12817)
  %12821 = select i1 %12816, i32 %12810, i32 %12818
  %12822 = select i1 %12816, i32 %12811, i32 %12819
  %12823 = select i1 %12816, i32 %12812, i32 %12820
  %12824 = lshr i32 %12821, 29
  %12825 = tail call i32 @llvm.fshl.i32(i32 %12821, i32 %12822, i32 2)
  %12826 = tail call i32 @llvm.fshl.i32(i32 %12822, i32 %12823, i32 2)
  %12827 = tail call i32 @llvm.fshl.i32(i32 %12823, i32 %12813, i32 2)
  %12828 = and i32 %12824, 1
  %12829 = sub nsw i32 0, %12828
  %12830 = shl i32 %12824, 31
  %12831 = xor i32 %12825, %12829
  %12832 = xor i32 %12826, %12829
  %12833 = xor i32 %12827, %12829
  %12834 = tail call i32 @llvm.ctlz.i32(i32 %12831, i1 false), !range !8
  %12835 = sub nsw i32 31, %12834
  %12836 = tail call i32 @llvm.fshr.i32(i32 %12831, i32 %12832, i32 %12835)
  %12837 = tail call i32 @llvm.fshr.i32(i32 %12832, i32 %12833, i32 %12835)
  %12838 = shl nuw nsw i32 %12834, 23
  %12839 = sub nuw nsw i32 1056964608, %12838
  %12840 = lshr i32 %12836, 9
  %12841 = or i32 %12840, %12839
  %12842 = or i32 %12841, %12830
  %12843 = bitcast i32 %12842 to float
  %12844 = tail call i32 @llvm.fshl.i32(i32 %12836, i32 %12837, i32 23)
  %12845 = tail call i32 @llvm.ctlz.i32(i32 %12844, i1 false), !range !8
  %12846 = fmul float %12843, 0x3FF921FB40000000
  %12847 = add nuw nsw i32 %12845, %12834
  %12848 = shl nuw nsw i32 %12847, 23
  %12849 = sub nuw nsw i32 855638016, %12848
  %12850 = sub nsw i32 31, %12845
  %12851 = tail call i32 @llvm.fshr.i32(i32 %12844, i32 %12837, i32 %12850)
  %12852 = lshr i32 %12851, 9
  %12853 = or i32 %12849, %12852
  %12854 = or i32 %12853, %12830
  %12855 = bitcast i32 %12854 to float
  %12856 = fneg float %12846
  %12857 = tail call float @llvm.fma.f32(float %12843, float 0x3FF921FB40000000, float %12856)
  %12858 = tail call float @llvm.fma.f32(float %12843, float 0x3E74442D00000000, float %12857)
  %12859 = tail call float @llvm.fma.f32(float %12855, float 0x3FF921FB40000000, float %12858)
  %12860 = fadd float %12846, %12859
  %12861 = lshr i32 %12821, 30
  %12862 = add nuw nsw i32 %12828, %12861
  br label %12871

12863:                                            ; preds = %12584
  %12864 = fmul float %12755, 0x3FE45F3060000000
  %12865 = tail call float @llvm.rint.f32(float %12864)
  %12866 = tail call float @llvm.fma.f32(float %12865, float 0xBFF921FB40000000, float %12755)
  %12867 = tail call float @llvm.fma.f32(float %12865, float 0xBE74442D00000000, float %12866)
  %12868 = tail call float @llvm.fma.f32(float %12865, float 0xBCF8469880000000, float %12867)
  %12869 = fptosi float %12865 to i32
  %12870 = bitcast float %12755 to i32
  br label %12871

12871:                                            ; preds = %12863, %12757
  %12872 = phi i32 [ %12870, %12863 ], [ %12758, %12757 ]
  %12873 = phi float [ %12868, %12863 ], [ %12860, %12757 ]
  %12874 = phi i32 [ %12869, %12863 ], [ %12862, %12757 ]
  %12875 = fmul float %12873, %12873
  %12876 = tail call float @llvm.fmuladd.f32(float %12875, float 0xBF29833040000000, float 0x3F81103880000000)
  %12877 = tail call float @llvm.fmuladd.f32(float %12875, float %12876, float 0xBFC55553A0000000)
  %12878 = fmul float %12875, %12877
  %12879 = tail call float @llvm.fmuladd.f32(float %12873, float %12878, float %12873)
  %12880 = tail call float @llvm.fmuladd.f32(float %12875, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %12881 = tail call float @llvm.fmuladd.f32(float %12875, float %12880, float 0x3FA5557EE0000000)
  %12882 = tail call float @llvm.fmuladd.f32(float %12875, float %12881, float 0xBFE0000080000000)
  %12883 = tail call float @llvm.fmuladd.f32(float %12875, float %12882, float 1.000000e+00)
  %12884 = and i32 %12874, 1
  %12885 = icmp eq i32 %12884, 0
  %12886 = select i1 %12885, float %12879, float %12883
  %12887 = bitcast float %12886 to i32
  %12888 = shl i32 %12874, 30
  %12889 = and i32 %12888, -2147483648
  %12890 = bitcast float %12754 to i32
  %12891 = xor i32 %12872, %12890
  %12892 = xor i32 %12891, %12889
  %12893 = xor i32 %12892, %12887
  %12894 = bitcast i32 %12893 to float
  %12895 = tail call i1 @llvm.amdgcn.class.f32(float %12755, i32 504)
  %12896 = select i1 %12895, float %12894, float 0x7FF8000000000000
  %12897 = tail call float @llvm.fabs.f32(float %12896)
  %12898 = tail call float @llvm.amdgcn.frexp.mant.f32(float %12897)
  %12899 = fcmp olt float %12898, 0x3FE5555560000000
  %12900 = zext i1 %12899 to i32
  %12901 = tail call float @llvm.amdgcn.ldexp.f32(float %12898, i32 %12900)
  %12902 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %12897)
  %12903 = sub nsw i32 %12902, %12900
  %12904 = fadd float %12901, -1.000000e+00
  %12905 = fadd float %12901, 1.000000e+00
  %12906 = fadd float %12905, -1.000000e+00
  %12907 = fsub float %12901, %12906
  %12908 = tail call float @llvm.amdgcn.rcp.f32(float %12905)
  %12909 = fmul float %12904, %12908
  %12910 = fmul float %12905, %12909
  %12911 = fneg float %12910
  %12912 = tail call float @llvm.fma.f32(float %12909, float %12905, float %12911)
  %12913 = tail call float @llvm.fma.f32(float %12909, float %12907, float %12912)
  %12914 = fadd float %12910, %12913
  %12915 = fsub float %12914, %12910
  %12916 = fsub float %12913, %12915
  %12917 = fsub float %12904, %12914
  %12918 = fsub float %12904, %12917
  %12919 = fsub float %12918, %12914
  %12920 = fsub float %12919, %12916
  %12921 = fadd float %12917, %12920
  %12922 = fmul float %12908, %12921
  %12923 = fadd float %12909, %12922
  %12924 = fsub float %12923, %12909
  %12925 = fsub float %12922, %12924
  %12926 = fmul float %12923, %12923
  %12927 = fneg float %12926
  %12928 = tail call float @llvm.fma.f32(float %12923, float %12923, float %12927)
  %12929 = fmul float %12925, 2.000000e+00
  %12930 = tail call float @llvm.fma.f32(float %12923, float %12929, float %12928)
  %12931 = fadd float %12926, %12930
  %12932 = fsub float %12931, %12926
  %12933 = fsub float %12930, %12932
  %12934 = tail call float @llvm.fmuladd.f32(float %12931, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %12935 = tail call float @llvm.fmuladd.f32(float %12931, float %12934, float 0x3FD999BDE0000000)
  %12936 = sitofp i32 %12903 to float
  %12937 = fmul float %12936, 0x3FE62E4300000000
  %12938 = fneg float %12937
  %12939 = tail call float @llvm.fma.f32(float %12936, float 0x3FE62E4300000000, float %12938)
  %12940 = tail call float @llvm.fma.f32(float %12936, float 0xBE205C6100000000, float %12939)
  %12941 = fadd float %12937, %12940
  %12942 = fsub float %12941, %12937
  %12943 = fsub float %12940, %12942
  %12944 = tail call float @llvm.amdgcn.ldexp.f32(float %12923, i32 1)
  %12945 = fmul float %12923, %12931
  %12946 = fneg float %12945
  %12947 = tail call float @llvm.fma.f32(float %12931, float %12923, float %12946)
  %12948 = tail call float @llvm.fma.f32(float %12931, float %12925, float %12947)
  %12949 = tail call float @llvm.fma.f32(float %12933, float %12923, float %12948)
  %12950 = fadd float %12945, %12949
  %12951 = fsub float %12950, %12945
  %12952 = fsub float %12949, %12951
  %12953 = fmul float %12931, %12935
  %12954 = fneg float %12953
  %12955 = tail call float @llvm.fma.f32(float %12931, float %12935, float %12954)
  %12956 = tail call float @llvm.fma.f32(float %12933, float %12935, float %12955)
  %12957 = fadd float %12953, %12956
  %12958 = fsub float %12957, %12953
  %12959 = fsub float %12956, %12958
  %12960 = fadd float %12957, 0x3FE5555540000000
  %12961 = fadd float %12960, 0xBFE5555540000000
  %12962 = fsub float %12957, %12961
  %12963 = fadd float %12959, 0x3E2E720200000000
  %12964 = fadd float %12963, %12962
  %12965 = fadd float %12960, %12964
  %12966 = fsub float %12965, %12960
  %12967 = fsub float %12964, %12966
  %12968 = fmul float %12950, %12965
  %12969 = fneg float %12968
  %12970 = tail call float @llvm.fma.f32(float %12950, float %12965, float %12969)
  %12971 = tail call float @llvm.fma.f32(float %12950, float %12967, float %12970)
  %12972 = tail call float @llvm.fma.f32(float %12952, float %12965, float %12971)
  %12973 = tail call float @llvm.amdgcn.ldexp.f32(float %12925, i32 1)
  %12974 = fadd float %12968, %12972
  %12975 = fsub float %12974, %12968
  %12976 = fsub float %12972, %12975
  %12977 = fadd float %12944, %12974
  %12978 = fsub float %12977, %12944
  %12979 = fsub float %12974, %12978
  %12980 = fadd float %12973, %12976
  %12981 = fadd float %12980, %12979
  %12982 = fadd float %12977, %12981
  %12983 = fsub float %12982, %12977
  %12984 = fsub float %12981, %12983
  %12985 = fadd float %12941, %12982
  %12986 = fsub float %12985, %12941
  %12987 = fsub float %12985, %12986
  %12988 = fsub float %12941, %12987
  %12989 = fsub float %12982, %12986
  %12990 = fadd float %12989, %12988
  %12991 = fadd float %12943, %12984
  %12992 = fsub float %12991, %12943
  %12993 = fsub float %12991, %12992
  %12994 = fsub float %12943, %12993
  %12995 = fsub float %12984, %12992
  %12996 = fadd float %12995, %12994
  %12997 = fadd float %12991, %12990
  %12998 = fadd float %12985, %12997
  %12999 = fsub float %12998, %12985
  %13000 = fsub float %12997, %12999
  %13001 = fadd float %12996, %13000
  %13002 = fadd float %12998, %13001
  %13003 = fsub float %13002, %12998
  %13004 = fsub float %13001, %13003
  %13005 = fmul float %13002, 2.000000e+00
  %13006 = fneg float %13005
  %13007 = tail call float @llvm.fma.f32(float %13002, float 2.000000e+00, float %13006)
  %13008 = fmul float %13002, 0.000000e+00
  %13009 = tail call float @llvm.fma.f32(float %13004, float 2.000000e+00, float %13008)
  %13010 = fadd float %13007, %13009
  %13011 = fadd float %13005, %13010
  %13012 = fsub float %13011, %13005
  %13013 = fsub float %13010, %13012
  %13014 = tail call float @llvm.fabs.f32(float %13005) #3
  %13015 = fcmp oeq float %13014, 0x7FF0000000000000
  %13016 = select i1 %13015, float %13005, float %13011
  %13017 = tail call float @llvm.fabs.f32(float %13016) #3
  %13018 = fcmp oeq float %13017, 0x7FF0000000000000
  %13019 = select i1 %13018, float 0.000000e+00, float %13013
  %13020 = fcmp oeq float %13016, 0x40562E4300000000
  %13021 = select i1 %13020, float 0x3EE0000000000000, float 0.000000e+00
  %13022 = fsub float %13016, %13021
  %13023 = fadd float %13021, %13019
  %13024 = fmul float %13022, 0x3FF7154760000000
  %13025 = tail call float @llvm.rint.f32(float %13024)
  %13026 = fcmp ogt float %13022, 0x40562E4300000000
  %13027 = fcmp olt float %13022, 0xC059D1DA00000000
  %13028 = fneg float %13024
  %13029 = tail call float @llvm.fma.f32(float %13022, float 0x3FF7154760000000, float %13028)
  %13030 = tail call float @llvm.fma.f32(float %13022, float 0x3E54AE0BE0000000, float %13029)
  %13031 = fsub float %13024, %13025
  %13032 = fadd float %13030, %13031
  %13033 = tail call float @llvm.exp2.f32(float %13032)
  %13034 = fptosi float %13025 to i32
  %13035 = tail call float @llvm.amdgcn.ldexp.f32(float %13033, i32 %13034)
  %13036 = select i1 %13027, float 0.000000e+00, float %13035
  %13037 = select i1 %13026, float 0x7FF0000000000000, float %13036
  %13038 = tail call float @llvm.fma.f32(float %13037, float %13023, float %13037)
  %13039 = tail call float @llvm.fabs.f32(float %13037) #3
  %13040 = fcmp oeq float %13039, 0x7FF0000000000000
  %13041 = select i1 %13040, float %13037, float %13038
  %13042 = tail call float @llvm.fabs.f32(float %13041)
  %13043 = fcmp oeq float %12897, 0x7FF0000000000000
  %13044 = fcmp oeq float %12896, 0.000000e+00
  %13045 = fcmp uno float %12896, 0.000000e+00
  %13046 = fmul contract float %13042, 1.000000e+01
  %13047 = fadd contract float %13046, 1.000000e+00
  %13048 = select i1 %13043, float 0x7FF0000000000000, float %13047
  %13049 = select i1 %13044, float 1.000000e+00, float %13048
  %13050 = select i1 %13045, float 0x7FF8000000000000, float %13049
  %13051 = fmul contract float %12753, %13050
  %13052 = fadd contract float %12587, %13051
  br i1 %12585, label %12584, label %13053, !llvm.loop !9

13053:                                            ; preds = %12871
  %13054 = fcmp contract olt float %12124, %13052
  br i1 %13054, label %13055, label %13057

13055:                                            ; preds = %13053
  store float %11194, float addrspace(1)* %0, align 4, !tbaa !4
  %13056 = getelementptr inbounds float, float addrspace(1)* %0, i64 1
  store float %11197, float addrspace(1)* %13056, align 4, !tbaa !4
  store float %11200, float addrspace(1)* %3, align 4, !tbaa !4
  br label %13057

13057:                                            ; preds = %13055, %13053
  %13058 = getelementptr inbounds float, float addrspace(1)* %1, i64 21
  %13059 = load float, float addrspace(1)* %13058, align 4, !tbaa !4
  %13060 = insertelement <3 x float> poison, float %13059, i64 0
  %13061 = getelementptr inbounds float, float addrspace(1)* %1, i64 22
  %13062 = load float, float addrspace(1)* %13061, align 4, !tbaa !4
  %13063 = insertelement <3 x float> %13060, float %13062, i64 1
  %13064 = getelementptr inbounds float, float addrspace(1)* %1, i64 23
  %13065 = load float, float addrspace(1)* %13064, align 4, !tbaa !4
  %13066 = insertelement <3 x float> %13063, float %13065, i64 2
  %13067 = fadd contract float %13059, -1.000000e+00
  %13068 = fmul contract float %13067, 2.500000e-01
  %13069 = fadd contract float %13068, 1.000000e+00
  %13070 = fadd contract float %13065, -1.000000e+00
  %13071 = fmul contract float %13070, 2.500000e-01
  %13072 = fadd contract float %13071, 1.000000e+00
  %13073 = fmul contract float %13069, 0x400921CAC0000000
  %13074 = tail call float @llvm.fabs.f32(float %13073)
  %13075 = fcmp olt float %13074, 1.310720e+05
  br i1 %13075, label %13182, label %13076

13076:                                            ; preds = %13057
  %13077 = bitcast float %13074 to i32
  %13078 = lshr i32 %13077, 23
  %13079 = and i32 %13077, 8388607
  %13080 = or i32 %13079, 8388608
  %13081 = zext i32 %13080 to i64
  %13082 = mul nuw nsw i64 %13081, 4266746795
  %13083 = trunc i64 %13082 to i32
  %13084 = lshr i64 %13082, 32
  %13085 = mul nuw nsw i64 %13081, 1011060801
  %13086 = add nuw nsw i64 %13084, %13085
  %13087 = trunc i64 %13086 to i32
  %13088 = lshr i64 %13086, 32
  %13089 = mul nuw nsw i64 %13081, 3680671129
  %13090 = add nuw nsw i64 %13088, %13089
  %13091 = trunc i64 %13090 to i32
  %13092 = lshr i64 %13090, 32
  %13093 = mul nuw nsw i64 %13081, 4113882560
  %13094 = add nuw nsw i64 %13092, %13093
  %13095 = trunc i64 %13094 to i32
  %13096 = lshr i64 %13094, 32
  %13097 = mul nuw nsw i64 %13081, 4230436817
  %13098 = add nuw nsw i64 %13096, %13097
  %13099 = trunc i64 %13098 to i32
  %13100 = lshr i64 %13098, 32
  %13101 = mul nuw nsw i64 %13081, 1313084713
  %13102 = add nuw nsw i64 %13100, %13101
  %13103 = trunc i64 %13102 to i32
  %13104 = lshr i64 %13102, 32
  %13105 = mul nuw nsw i64 %13081, 2734261102
  %13106 = add nuw nsw i64 %13104, %13105
  %13107 = trunc i64 %13106 to i32
  %13108 = lshr i64 %13106, 32
  %13109 = trunc i64 %13108 to i32
  %13110 = add nsw i32 %13078, -120
  %13111 = icmp ugt i32 %13110, 63
  %13112 = select i1 %13111, i32 %13103, i32 %13109
  %13113 = select i1 %13111, i32 %13099, i32 %13107
  %13114 = select i1 %13111, i32 %13095, i32 %13103
  %13115 = select i1 %13111, i32 %13091, i32 %13099
  %13116 = select i1 %13111, i32 %13087, i32 %13095
  %13117 = select i1 %13111, i32 %13083, i32 %13091
  %13118 = select i1 %13111, i32 -64, i32 0
  %13119 = add nsw i32 %13118, %13110
  %13120 = icmp ugt i32 %13119, 31
  %13121 = select i1 %13120, i32 %13113, i32 %13112
  %13122 = select i1 %13120, i32 %13114, i32 %13113
  %13123 = select i1 %13120, i32 %13115, i32 %13114
  %13124 = select i1 %13120, i32 %13116, i32 %13115
  %13125 = select i1 %13120, i32 %13117, i32 %13116
  %13126 = select i1 %13120, i32 -32, i32 0
  %13127 = add nsw i32 %13126, %13119
  %13128 = icmp ugt i32 %13127, 31
  %13129 = select i1 %13128, i32 %13122, i32 %13121
  %13130 = select i1 %13128, i32 %13123, i32 %13122
  %13131 = select i1 %13128, i32 %13124, i32 %13123
  %13132 = select i1 %13128, i32 %13125, i32 %13124
  %13133 = select i1 %13128, i32 -32, i32 0
  %13134 = add nsw i32 %13133, %13127
  %13135 = icmp eq i32 %13134, 0
  %13136 = sub nsw i32 32, %13134
  %13137 = tail call i32 @llvm.fshr.i32(i32 %13129, i32 %13130, i32 %13136)
  %13138 = tail call i32 @llvm.fshr.i32(i32 %13130, i32 %13131, i32 %13136)
  %13139 = tail call i32 @llvm.fshr.i32(i32 %13131, i32 %13132, i32 %13136)
  %13140 = select i1 %13135, i32 %13129, i32 %13137
  %13141 = select i1 %13135, i32 %13130, i32 %13138
  %13142 = select i1 %13135, i32 %13131, i32 %13139
  %13143 = lshr i32 %13140, 29
  %13144 = tail call i32 @llvm.fshl.i32(i32 %13140, i32 %13141, i32 2)
  %13145 = tail call i32 @llvm.fshl.i32(i32 %13141, i32 %13142, i32 2)
  %13146 = tail call i32 @llvm.fshl.i32(i32 %13142, i32 %13132, i32 2)
  %13147 = and i32 %13143, 1
  %13148 = sub nsw i32 0, %13147
  %13149 = shl i32 %13143, 31
  %13150 = xor i32 %13144, %13148
  %13151 = xor i32 %13145, %13148
  %13152 = xor i32 %13146, %13148
  %13153 = tail call i32 @llvm.ctlz.i32(i32 %13150, i1 false), !range !8
  %13154 = sub nsw i32 31, %13153
  %13155 = tail call i32 @llvm.fshr.i32(i32 %13150, i32 %13151, i32 %13154)
  %13156 = tail call i32 @llvm.fshr.i32(i32 %13151, i32 %13152, i32 %13154)
  %13157 = shl nuw nsw i32 %13153, 23
  %13158 = sub nuw nsw i32 1056964608, %13157
  %13159 = lshr i32 %13155, 9
  %13160 = or i32 %13159, %13158
  %13161 = or i32 %13160, %13149
  %13162 = bitcast i32 %13161 to float
  %13163 = tail call i32 @llvm.fshl.i32(i32 %13155, i32 %13156, i32 23)
  %13164 = tail call i32 @llvm.ctlz.i32(i32 %13163, i1 false), !range !8
  %13165 = fmul float %13162, 0x3FF921FB40000000
  %13166 = add nuw nsw i32 %13164, %13153
  %13167 = shl nuw nsw i32 %13166, 23
  %13168 = sub nuw nsw i32 855638016, %13167
  %13169 = sub nsw i32 31, %13164
  %13170 = tail call i32 @llvm.fshr.i32(i32 %13163, i32 %13156, i32 %13169)
  %13171 = lshr i32 %13170, 9
  %13172 = or i32 %13168, %13171
  %13173 = or i32 %13172, %13149
  %13174 = bitcast i32 %13173 to float
  %13175 = fneg float %13165
  %13176 = tail call float @llvm.fma.f32(float %13162, float 0x3FF921FB40000000, float %13175)
  %13177 = tail call float @llvm.fma.f32(float %13162, float 0x3E74442D00000000, float %13176)
  %13178 = tail call float @llvm.fma.f32(float %13174, float 0x3FF921FB40000000, float %13177)
  %13179 = fadd float %13165, %13178
  %13180 = lshr i32 %13140, 30
  %13181 = add nuw nsw i32 %13147, %13180
  br label %13190

13182:                                            ; preds = %13057
  %13183 = fmul float %13074, 0x3FE45F3060000000
  %13184 = tail call float @llvm.rint.f32(float %13183)
  %13185 = tail call float @llvm.fma.f32(float %13184, float 0xBFF921FB40000000, float %13074)
  %13186 = tail call float @llvm.fma.f32(float %13184, float 0xBE74442D00000000, float %13185)
  %13187 = tail call float @llvm.fma.f32(float %13184, float 0xBCF8469880000000, float %13186)
  %13188 = fptosi float %13184 to i32
  %13189 = bitcast float %13074 to i32
  br label %13190

13190:                                            ; preds = %13182, %13076
  %13191 = phi i32 [ %13189, %13182 ], [ %13077, %13076 ]
  %13192 = phi float [ %13187, %13182 ], [ %13179, %13076 ]
  %13193 = phi i32 [ %13188, %13182 ], [ %13181, %13076 ]
  %13194 = fmul float %13192, %13192
  %13195 = tail call float @llvm.fmuladd.f32(float %13194, float 0xBF29833040000000, float 0x3F81103880000000)
  %13196 = tail call float @llvm.fmuladd.f32(float %13194, float %13195, float 0xBFC55553A0000000)
  %13197 = fmul float %13194, %13196
  %13198 = tail call float @llvm.fmuladd.f32(float %13192, float %13197, float %13192)
  %13199 = tail call float @llvm.fmuladd.f32(float %13194, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %13200 = tail call float @llvm.fmuladd.f32(float %13194, float %13199, float 0x3FA5557EE0000000)
  %13201 = tail call float @llvm.fmuladd.f32(float %13194, float %13200, float 0xBFE0000080000000)
  %13202 = tail call float @llvm.fmuladd.f32(float %13194, float %13201, float 1.000000e+00)
  %13203 = and i32 %13193, 1
  %13204 = icmp eq i32 %13203, 0
  %13205 = select i1 %13204, float %13198, float %13202
  %13206 = bitcast float %13205 to i32
  %13207 = shl i32 %13193, 30
  %13208 = and i32 %13207, -2147483648
  %13209 = bitcast float %13073 to i32
  %13210 = xor i32 %13191, %13209
  %13211 = xor i32 %13210, %13208
  %13212 = xor i32 %13211, %13206
  %13213 = bitcast i32 %13212 to float
  %13214 = tail call i1 @llvm.amdgcn.class.f32(float %13074, i32 504)
  %13215 = select i1 %13214, float %13213, float 0x7FF8000000000000
  %13216 = tail call float @llvm.fabs.f32(float %13215)
  %13217 = tail call float @llvm.amdgcn.frexp.mant.f32(float %13216)
  %13218 = fcmp olt float %13217, 0x3FE5555560000000
  %13219 = zext i1 %13218 to i32
  %13220 = tail call float @llvm.amdgcn.ldexp.f32(float %13217, i32 %13219)
  %13221 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %13216)
  %13222 = sub nsw i32 %13221, %13219
  %13223 = fadd float %13220, -1.000000e+00
  %13224 = fadd float %13220, 1.000000e+00
  %13225 = fadd float %13224, -1.000000e+00
  %13226 = fsub float %13220, %13225
  %13227 = tail call float @llvm.amdgcn.rcp.f32(float %13224)
  %13228 = fmul float %13223, %13227
  %13229 = fmul float %13224, %13228
  %13230 = fneg float %13229
  %13231 = tail call float @llvm.fma.f32(float %13228, float %13224, float %13230)
  %13232 = tail call float @llvm.fma.f32(float %13228, float %13226, float %13231)
  %13233 = fadd float %13229, %13232
  %13234 = fsub float %13233, %13229
  %13235 = fsub float %13232, %13234
  %13236 = fsub float %13223, %13233
  %13237 = fsub float %13223, %13236
  %13238 = fsub float %13237, %13233
  %13239 = fsub float %13238, %13235
  %13240 = fadd float %13236, %13239
  %13241 = fmul float %13227, %13240
  %13242 = fadd float %13228, %13241
  %13243 = fsub float %13242, %13228
  %13244 = fsub float %13241, %13243
  %13245 = fmul float %13242, %13242
  %13246 = fneg float %13245
  %13247 = tail call float @llvm.fma.f32(float %13242, float %13242, float %13246)
  %13248 = fmul float %13244, 2.000000e+00
  %13249 = tail call float @llvm.fma.f32(float %13242, float %13248, float %13247)
  %13250 = fadd float %13245, %13249
  %13251 = fsub float %13250, %13245
  %13252 = fsub float %13249, %13251
  %13253 = tail call float @llvm.fmuladd.f32(float %13250, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %13254 = tail call float @llvm.fmuladd.f32(float %13250, float %13253, float 0x3FD999BDE0000000)
  %13255 = sitofp i32 %13222 to float
  %13256 = fmul float %13255, 0x3FE62E4300000000
  %13257 = fneg float %13256
  %13258 = tail call float @llvm.fma.f32(float %13255, float 0x3FE62E4300000000, float %13257)
  %13259 = tail call float @llvm.fma.f32(float %13255, float 0xBE205C6100000000, float %13258)
  %13260 = fadd float %13256, %13259
  %13261 = fsub float %13260, %13256
  %13262 = fsub float %13259, %13261
  %13263 = tail call float @llvm.amdgcn.ldexp.f32(float %13242, i32 1)
  %13264 = fmul float %13242, %13250
  %13265 = fneg float %13264
  %13266 = tail call float @llvm.fma.f32(float %13250, float %13242, float %13265)
  %13267 = tail call float @llvm.fma.f32(float %13250, float %13244, float %13266)
  %13268 = tail call float @llvm.fma.f32(float %13252, float %13242, float %13267)
  %13269 = fadd float %13264, %13268
  %13270 = fsub float %13269, %13264
  %13271 = fsub float %13268, %13270
  %13272 = fmul float %13250, %13254
  %13273 = fneg float %13272
  %13274 = tail call float @llvm.fma.f32(float %13250, float %13254, float %13273)
  %13275 = tail call float @llvm.fma.f32(float %13252, float %13254, float %13274)
  %13276 = fadd float %13272, %13275
  %13277 = fsub float %13276, %13272
  %13278 = fsub float %13275, %13277
  %13279 = fadd float %13276, 0x3FE5555540000000
  %13280 = fadd float %13279, 0xBFE5555540000000
  %13281 = fsub float %13276, %13280
  %13282 = fadd float %13278, 0x3E2E720200000000
  %13283 = fadd float %13282, %13281
  %13284 = fadd float %13279, %13283
  %13285 = fsub float %13284, %13279
  %13286 = fsub float %13283, %13285
  %13287 = fmul float %13269, %13284
  %13288 = fneg float %13287
  %13289 = tail call float @llvm.fma.f32(float %13269, float %13284, float %13288)
  %13290 = tail call float @llvm.fma.f32(float %13269, float %13286, float %13289)
  %13291 = tail call float @llvm.fma.f32(float %13271, float %13284, float %13290)
  %13292 = tail call float @llvm.amdgcn.ldexp.f32(float %13244, i32 1)
  %13293 = fadd float %13287, %13291
  %13294 = fsub float %13293, %13287
  %13295 = fsub float %13291, %13294
  %13296 = fadd float %13263, %13293
  %13297 = fsub float %13296, %13263
  %13298 = fsub float %13293, %13297
  %13299 = fadd float %13292, %13295
  %13300 = fadd float %13299, %13298
  %13301 = fadd float %13296, %13300
  %13302 = fsub float %13301, %13296
  %13303 = fsub float %13300, %13302
  %13304 = fadd float %13260, %13301
  %13305 = fsub float %13304, %13260
  %13306 = fsub float %13304, %13305
  %13307 = fsub float %13260, %13306
  %13308 = fsub float %13301, %13305
  %13309 = fadd float %13308, %13307
  %13310 = fadd float %13262, %13303
  %13311 = fsub float %13310, %13262
  %13312 = fsub float %13310, %13311
  %13313 = fsub float %13262, %13312
  %13314 = fsub float %13303, %13311
  %13315 = fadd float %13314, %13313
  %13316 = fadd float %13310, %13309
  %13317 = fadd float %13304, %13316
  %13318 = fsub float %13317, %13304
  %13319 = fsub float %13316, %13318
  %13320 = fadd float %13315, %13319
  %13321 = fadd float %13317, %13320
  %13322 = fsub float %13321, %13317
  %13323 = fsub float %13320, %13322
  %13324 = fmul float %13321, 2.000000e+00
  %13325 = fneg float %13324
  %13326 = tail call float @llvm.fma.f32(float %13321, float 2.000000e+00, float %13325)
  %13327 = fmul float %13321, 0.000000e+00
  %13328 = tail call float @llvm.fma.f32(float %13323, float 2.000000e+00, float %13327)
  %13329 = fadd float %13326, %13328
  %13330 = fadd float %13324, %13329
  %13331 = fsub float %13330, %13324
  %13332 = fsub float %13329, %13331
  %13333 = tail call float @llvm.fabs.f32(float %13324) #3
  %13334 = fcmp oeq float %13333, 0x7FF0000000000000
  %13335 = select i1 %13334, float %13324, float %13330
  %13336 = tail call float @llvm.fabs.f32(float %13335) #3
  %13337 = fcmp oeq float %13336, 0x7FF0000000000000
  %13338 = select i1 %13337, float 0.000000e+00, float %13332
  %13339 = fcmp oeq float %13335, 0x40562E4300000000
  %13340 = select i1 %13339, float 0x3EE0000000000000, float 0.000000e+00
  %13341 = fsub float %13335, %13340
  %13342 = fadd float %13340, %13338
  %13343 = fmul float %13341, 0x3FF7154760000000
  %13344 = tail call float @llvm.rint.f32(float %13343)
  %13345 = fcmp ogt float %13341, 0x40562E4300000000
  %13346 = fcmp olt float %13341, 0xC059D1DA00000000
  %13347 = fneg float %13343
  %13348 = tail call float @llvm.fma.f32(float %13341, float 0x3FF7154760000000, float %13347)
  %13349 = tail call float @llvm.fma.f32(float %13341, float 0x3E54AE0BE0000000, float %13348)
  %13350 = fsub float %13343, %13344
  %13351 = fadd float %13349, %13350
  %13352 = tail call float @llvm.exp2.f32(float %13351)
  %13353 = fptosi float %13344 to i32
  %13354 = tail call float @llvm.amdgcn.ldexp.f32(float %13352, i32 %13353)
  %13355 = select i1 %13346, float 0.000000e+00, float %13354
  %13356 = select i1 %13345, float 0x7FF0000000000000, float %13355
  %13357 = tail call float @llvm.fma.f32(float %13356, float %13342, float %13356)
  %13358 = tail call float @llvm.fabs.f32(float %13356) #3
  %13359 = fcmp oeq float %13358, 0x7FF0000000000000
  %13360 = select i1 %13359, float %13356, float %13357
  %13361 = tail call float @llvm.fabs.f32(float %13360)
  %13362 = fcmp oeq float %13216, 0x7FF0000000000000
  %13363 = fcmp oeq float %13215, 0.000000e+00
  %13364 = select i1 %13362, float 0x7FF0000000000000, float %13361
  %13365 = select i1 %13363, float 0.000000e+00, float %13364
  %13366 = fcmp uno float %13215, 0.000000e+00
  %13367 = select i1 %13366, float 0x7FF8000000000000, float %13365
  %13368 = fadd contract float %13072, -1.000000e+00
  %13369 = tail call float @llvm.fabs.f32(float %13368)
  %13370 = tail call float @llvm.amdgcn.frexp.mant.f32(float %13369)
  %13371 = fcmp olt float %13370, 0x3FE5555560000000
  %13372 = zext i1 %13371 to i32
  %13373 = tail call float @llvm.amdgcn.ldexp.f32(float %13370, i32 %13372)
  %13374 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %13369)
  %13375 = sub nsw i32 %13374, %13372
  %13376 = fadd float %13373, -1.000000e+00
  %13377 = fadd float %13373, 1.000000e+00
  %13378 = fadd float %13377, -1.000000e+00
  %13379 = fsub float %13373, %13378
  %13380 = tail call float @llvm.amdgcn.rcp.f32(float %13377)
  %13381 = fmul float %13376, %13380
  %13382 = fmul float %13377, %13381
  %13383 = fneg float %13382
  %13384 = tail call float @llvm.fma.f32(float %13381, float %13377, float %13383)
  %13385 = tail call float @llvm.fma.f32(float %13381, float %13379, float %13384)
  %13386 = fadd float %13382, %13385
  %13387 = fsub float %13386, %13382
  %13388 = fsub float %13385, %13387
  %13389 = fsub float %13376, %13386
  %13390 = fsub float %13376, %13389
  %13391 = fsub float %13390, %13386
  %13392 = fsub float %13391, %13388
  %13393 = fadd float %13389, %13392
  %13394 = fmul float %13380, %13393
  %13395 = fadd float %13381, %13394
  %13396 = fsub float %13395, %13381
  %13397 = fsub float %13394, %13396
  %13398 = fmul float %13395, %13395
  %13399 = fneg float %13398
  %13400 = tail call float @llvm.fma.f32(float %13395, float %13395, float %13399)
  %13401 = fmul float %13397, 2.000000e+00
  %13402 = tail call float @llvm.fma.f32(float %13395, float %13401, float %13400)
  %13403 = fadd float %13398, %13402
  %13404 = fsub float %13403, %13398
  %13405 = fsub float %13402, %13404
  %13406 = tail call float @llvm.fmuladd.f32(float %13403, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %13407 = tail call float @llvm.fmuladd.f32(float %13403, float %13406, float 0x3FD999BDE0000000)
  %13408 = sitofp i32 %13375 to float
  %13409 = fmul float %13408, 0x3FE62E4300000000
  %13410 = fneg float %13409
  %13411 = tail call float @llvm.fma.f32(float %13408, float 0x3FE62E4300000000, float %13410)
  %13412 = tail call float @llvm.fma.f32(float %13408, float 0xBE205C6100000000, float %13411)
  %13413 = fadd float %13409, %13412
  %13414 = fsub float %13413, %13409
  %13415 = fsub float %13412, %13414
  %13416 = tail call float @llvm.amdgcn.ldexp.f32(float %13395, i32 1)
  %13417 = fmul float %13395, %13403
  %13418 = fneg float %13417
  %13419 = tail call float @llvm.fma.f32(float %13403, float %13395, float %13418)
  %13420 = tail call float @llvm.fma.f32(float %13403, float %13397, float %13419)
  %13421 = tail call float @llvm.fma.f32(float %13405, float %13395, float %13420)
  %13422 = fadd float %13417, %13421
  %13423 = fsub float %13422, %13417
  %13424 = fsub float %13421, %13423
  %13425 = fmul float %13403, %13407
  %13426 = fneg float %13425
  %13427 = tail call float @llvm.fma.f32(float %13403, float %13407, float %13426)
  %13428 = tail call float @llvm.fma.f32(float %13405, float %13407, float %13427)
  %13429 = fadd float %13425, %13428
  %13430 = fsub float %13429, %13425
  %13431 = fsub float %13428, %13430
  %13432 = fadd float %13429, 0x3FE5555540000000
  %13433 = fadd float %13432, 0xBFE5555540000000
  %13434 = fsub float %13429, %13433
  %13435 = fadd float %13431, 0x3E2E720200000000
  %13436 = fadd float %13435, %13434
  %13437 = fadd float %13432, %13436
  %13438 = fsub float %13437, %13432
  %13439 = fsub float %13436, %13438
  %13440 = fmul float %13422, %13437
  %13441 = fneg float %13440
  %13442 = tail call float @llvm.fma.f32(float %13422, float %13437, float %13441)
  %13443 = tail call float @llvm.fma.f32(float %13422, float %13439, float %13442)
  %13444 = tail call float @llvm.fma.f32(float %13424, float %13437, float %13443)
  %13445 = tail call float @llvm.amdgcn.ldexp.f32(float %13397, i32 1)
  %13446 = fadd float %13440, %13444
  %13447 = fsub float %13446, %13440
  %13448 = fsub float %13444, %13447
  %13449 = fadd float %13416, %13446
  %13450 = fsub float %13449, %13416
  %13451 = fsub float %13446, %13450
  %13452 = fadd float %13445, %13448
  %13453 = fadd float %13452, %13451
  %13454 = fadd float %13449, %13453
  %13455 = fsub float %13454, %13449
  %13456 = fsub float %13453, %13455
  %13457 = fadd float %13413, %13454
  %13458 = fsub float %13457, %13413
  %13459 = fsub float %13457, %13458
  %13460 = fsub float %13413, %13459
  %13461 = fsub float %13454, %13458
  %13462 = fadd float %13461, %13460
  %13463 = fadd float %13415, %13456
  %13464 = fsub float %13463, %13415
  %13465 = fsub float %13463, %13464
  %13466 = fsub float %13415, %13465
  %13467 = fsub float %13456, %13464
  %13468 = fadd float %13467, %13466
  %13469 = fadd float %13463, %13462
  %13470 = fadd float %13457, %13469
  %13471 = fsub float %13470, %13457
  %13472 = fsub float %13469, %13471
  %13473 = fadd float %13468, %13472
  %13474 = fadd float %13470, %13473
  %13475 = fsub float %13474, %13470
  %13476 = fsub float %13473, %13475
  %13477 = fmul float %13474, 2.000000e+00
  %13478 = fneg float %13477
  %13479 = tail call float @llvm.fma.f32(float %13474, float 2.000000e+00, float %13478)
  %13480 = fmul float %13474, 0.000000e+00
  %13481 = tail call float @llvm.fma.f32(float %13476, float 2.000000e+00, float %13480)
  %13482 = fadd float %13479, %13481
  %13483 = fadd float %13477, %13482
  %13484 = fsub float %13483, %13477
  %13485 = fsub float %13482, %13484
  %13486 = tail call float @llvm.fabs.f32(float %13477) #3
  %13487 = fcmp oeq float %13486, 0x7FF0000000000000
  %13488 = select i1 %13487, float %13477, float %13483
  %13489 = tail call float @llvm.fabs.f32(float %13488) #3
  %13490 = fcmp oeq float %13489, 0x7FF0000000000000
  %13491 = select i1 %13490, float 0.000000e+00, float %13485
  %13492 = fcmp oeq float %13488, 0x40562E4300000000
  %13493 = select i1 %13492, float 0x3EE0000000000000, float 0.000000e+00
  %13494 = fsub float %13488, %13493
  %13495 = fadd float %13493, %13491
  %13496 = fmul float %13494, 0x3FF7154760000000
  %13497 = tail call float @llvm.rint.f32(float %13496)
  %13498 = fcmp ogt float %13494, 0x40562E4300000000
  %13499 = fcmp olt float %13494, 0xC059D1DA00000000
  %13500 = fneg float %13496
  %13501 = tail call float @llvm.fma.f32(float %13494, float 0x3FF7154760000000, float %13500)
  %13502 = tail call float @llvm.fma.f32(float %13494, float 0x3E54AE0BE0000000, float %13501)
  %13503 = fsub float %13496, %13497
  %13504 = fadd float %13502, %13503
  %13505 = tail call float @llvm.exp2.f32(float %13504)
  %13506 = fptosi float %13497 to i32
  %13507 = tail call float @llvm.amdgcn.ldexp.f32(float %13505, i32 %13506)
  %13508 = select i1 %13499, float 0.000000e+00, float %13507
  %13509 = select i1 %13498, float 0x7FF0000000000000, float %13508
  %13510 = tail call float @llvm.fma.f32(float %13509, float %13495, float %13509)
  %13511 = tail call float @llvm.fabs.f32(float %13509) #3
  %13512 = fcmp oeq float %13511, 0x7FF0000000000000
  %13513 = select i1 %13512, float %13509, float %13510
  %13514 = tail call float @llvm.fabs.f32(float %13513)
  %13515 = fcmp oeq float %13369, 0x7FF0000000000000
  %13516 = fcmp oeq float %13368, 0.000000e+00
  %13517 = select i1 %13515, float 0x7FF0000000000000, float %13514
  %13518 = select i1 %13516, float 0.000000e+00, float %13517
  %13519 = fcmp uno float %13368, 0.000000e+00
  %13520 = select i1 %13519, float 0x7FF8000000000000, float %13518
  %13521 = fadd contract float %13520, %13367
  %13522 = fadd contract float %13521, 0.000000e+00
  br label %13523

13523:                                            ; preds = %13808, %13190
  %13524 = phi i1 [ true, %13190 ], [ false, %13808 ]
  %13525 = phi i32 [ 0, %13190 ], [ 1, %13808 ]
  %13526 = phi float [ %13522, %13190 ], [ %13989, %13808 ]
  %13527 = zext i32 %13525 to i64
  %13528 = extractelement <3 x float> %13066, i64 %13527
  %13529 = fadd contract float %13528, -1.000000e+00
  %13530 = fmul contract float %13529, 2.500000e-01
  %13531 = fadd contract float %13530, 1.000000e+00
  %13532 = add nuw nsw i32 %13525, 1
  %13533 = zext i32 %13532 to i64
  %13534 = extractelement <3 x float> %13066, i64 %13533
  %13535 = fadd contract float %13534, -1.000000e+00
  %13536 = fmul contract float %13535, 2.500000e-01
  %13537 = fadd contract float %13536, 1.000000e+00
  %13538 = fadd contract float %13531, -1.000000e+00
  %13539 = tail call float @llvm.fabs.f32(float %13538)
  %13540 = tail call float @llvm.amdgcn.frexp.mant.f32(float %13539)
  %13541 = fcmp olt float %13540, 0x3FE5555560000000
  %13542 = zext i1 %13541 to i32
  %13543 = tail call float @llvm.amdgcn.ldexp.f32(float %13540, i32 %13542)
  %13544 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %13539)
  %13545 = sub nsw i32 %13544, %13542
  %13546 = fadd float %13543, -1.000000e+00
  %13547 = fadd float %13543, 1.000000e+00
  %13548 = fadd float %13547, -1.000000e+00
  %13549 = fsub float %13543, %13548
  %13550 = tail call float @llvm.amdgcn.rcp.f32(float %13547)
  %13551 = fmul float %13546, %13550
  %13552 = fmul float %13547, %13551
  %13553 = fneg float %13552
  %13554 = tail call float @llvm.fma.f32(float %13551, float %13547, float %13553)
  %13555 = tail call float @llvm.fma.f32(float %13551, float %13549, float %13554)
  %13556 = fadd float %13552, %13555
  %13557 = fsub float %13556, %13552
  %13558 = fsub float %13555, %13557
  %13559 = fsub float %13546, %13556
  %13560 = fsub float %13546, %13559
  %13561 = fsub float %13560, %13556
  %13562 = fsub float %13561, %13558
  %13563 = fadd float %13559, %13562
  %13564 = fmul float %13550, %13563
  %13565 = fadd float %13551, %13564
  %13566 = fsub float %13565, %13551
  %13567 = fsub float %13564, %13566
  %13568 = fmul float %13565, %13565
  %13569 = fneg float %13568
  %13570 = tail call float @llvm.fma.f32(float %13565, float %13565, float %13569)
  %13571 = fmul float %13567, 2.000000e+00
  %13572 = tail call float @llvm.fma.f32(float %13565, float %13571, float %13570)
  %13573 = fadd float %13568, %13572
  %13574 = fsub float %13573, %13568
  %13575 = fsub float %13572, %13574
  %13576 = tail call float @llvm.fmuladd.f32(float %13573, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %13577 = tail call float @llvm.fmuladd.f32(float %13573, float %13576, float 0x3FD999BDE0000000)
  %13578 = sitofp i32 %13545 to float
  %13579 = fmul float %13578, 0x3FE62E4300000000
  %13580 = fneg float %13579
  %13581 = tail call float @llvm.fma.f32(float %13578, float 0x3FE62E4300000000, float %13580)
  %13582 = tail call float @llvm.fma.f32(float %13578, float 0xBE205C6100000000, float %13581)
  %13583 = fadd float %13579, %13582
  %13584 = fsub float %13583, %13579
  %13585 = fsub float %13582, %13584
  %13586 = tail call float @llvm.amdgcn.ldexp.f32(float %13565, i32 1)
  %13587 = fmul float %13565, %13573
  %13588 = fneg float %13587
  %13589 = tail call float @llvm.fma.f32(float %13573, float %13565, float %13588)
  %13590 = tail call float @llvm.fma.f32(float %13573, float %13567, float %13589)
  %13591 = tail call float @llvm.fma.f32(float %13575, float %13565, float %13590)
  %13592 = fadd float %13587, %13591
  %13593 = fsub float %13592, %13587
  %13594 = fsub float %13591, %13593
  %13595 = fmul float %13573, %13577
  %13596 = fneg float %13595
  %13597 = tail call float @llvm.fma.f32(float %13573, float %13577, float %13596)
  %13598 = tail call float @llvm.fma.f32(float %13575, float %13577, float %13597)
  %13599 = fadd float %13595, %13598
  %13600 = fsub float %13599, %13595
  %13601 = fsub float %13598, %13600
  %13602 = fadd float %13599, 0x3FE5555540000000
  %13603 = fadd float %13602, 0xBFE5555540000000
  %13604 = fsub float %13599, %13603
  %13605 = fadd float %13601, 0x3E2E720200000000
  %13606 = fadd float %13605, %13604
  %13607 = fadd float %13602, %13606
  %13608 = fsub float %13607, %13602
  %13609 = fsub float %13606, %13608
  %13610 = fmul float %13592, %13607
  %13611 = fneg float %13610
  %13612 = tail call float @llvm.fma.f32(float %13592, float %13607, float %13611)
  %13613 = tail call float @llvm.fma.f32(float %13592, float %13609, float %13612)
  %13614 = tail call float @llvm.fma.f32(float %13594, float %13607, float %13613)
  %13615 = tail call float @llvm.amdgcn.ldexp.f32(float %13567, i32 1)
  %13616 = fadd float %13610, %13614
  %13617 = fsub float %13616, %13610
  %13618 = fsub float %13614, %13617
  %13619 = fadd float %13586, %13616
  %13620 = fsub float %13619, %13586
  %13621 = fsub float %13616, %13620
  %13622 = fadd float %13615, %13618
  %13623 = fadd float %13622, %13621
  %13624 = fadd float %13619, %13623
  %13625 = fsub float %13624, %13619
  %13626 = fsub float %13623, %13625
  %13627 = fadd float %13583, %13624
  %13628 = fsub float %13627, %13583
  %13629 = fsub float %13627, %13628
  %13630 = fsub float %13583, %13629
  %13631 = fsub float %13624, %13628
  %13632 = fadd float %13631, %13630
  %13633 = fadd float %13585, %13626
  %13634 = fsub float %13633, %13585
  %13635 = fsub float %13633, %13634
  %13636 = fsub float %13585, %13635
  %13637 = fsub float %13626, %13634
  %13638 = fadd float %13637, %13636
  %13639 = fadd float %13633, %13632
  %13640 = fadd float %13627, %13639
  %13641 = fsub float %13640, %13627
  %13642 = fsub float %13639, %13641
  %13643 = fadd float %13638, %13642
  %13644 = fadd float %13640, %13643
  %13645 = fsub float %13644, %13640
  %13646 = fsub float %13643, %13645
  %13647 = fmul float %13644, 2.000000e+00
  %13648 = fneg float %13647
  %13649 = tail call float @llvm.fma.f32(float %13644, float 2.000000e+00, float %13648)
  %13650 = fmul float %13644, 0.000000e+00
  %13651 = tail call float @llvm.fma.f32(float %13646, float 2.000000e+00, float %13650)
  %13652 = fadd float %13649, %13651
  %13653 = fadd float %13647, %13652
  %13654 = fsub float %13653, %13647
  %13655 = fsub float %13652, %13654
  %13656 = tail call float @llvm.fabs.f32(float %13647) #3
  %13657 = fcmp oeq float %13656, 0x7FF0000000000000
  %13658 = select i1 %13657, float %13647, float %13653
  %13659 = tail call float @llvm.fabs.f32(float %13658) #3
  %13660 = fcmp oeq float %13659, 0x7FF0000000000000
  %13661 = select i1 %13660, float 0.000000e+00, float %13655
  %13662 = fcmp oeq float %13658, 0x40562E4300000000
  %13663 = select i1 %13662, float 0x3EE0000000000000, float 0.000000e+00
  %13664 = fsub float %13658, %13663
  %13665 = fadd float %13663, %13661
  %13666 = fmul float %13664, 0x3FF7154760000000
  %13667 = tail call float @llvm.rint.f32(float %13666)
  %13668 = fcmp ogt float %13664, 0x40562E4300000000
  %13669 = fcmp olt float %13664, 0xC059D1DA00000000
  %13670 = fneg float %13666
  %13671 = tail call float @llvm.fma.f32(float %13664, float 0x3FF7154760000000, float %13670)
  %13672 = tail call float @llvm.fma.f32(float %13664, float 0x3E54AE0BE0000000, float %13671)
  %13673 = fsub float %13666, %13667
  %13674 = fadd float %13672, %13673
  %13675 = tail call float @llvm.exp2.f32(float %13674)
  %13676 = fptosi float %13667 to i32
  %13677 = tail call float @llvm.amdgcn.ldexp.f32(float %13675, i32 %13676)
  %13678 = select i1 %13669, float 0.000000e+00, float %13677
  %13679 = select i1 %13668, float 0x7FF0000000000000, float %13678
  %13680 = tail call float @llvm.fma.f32(float %13679, float %13665, float %13679)
  %13681 = tail call float @llvm.fabs.f32(float %13679) #3
  %13682 = fcmp oeq float %13681, 0x7FF0000000000000
  %13683 = select i1 %13682, float %13679, float %13680
  %13684 = tail call float @llvm.fabs.f32(float %13683)
  %13685 = fcmp oeq float %13539, 0x7FF0000000000000
  %13686 = fcmp oeq float %13538, 0.000000e+00
  %13687 = select i1 %13685, float 0x7FF0000000000000, float %13684
  %13688 = select i1 %13686, float 0.000000e+00, float %13687
  %13689 = fcmp uno float %13538, 0.000000e+00
  %13690 = select i1 %13689, float 0x7FF8000000000000, float %13688
  %13691 = fmul contract float %13537, 0x400921CAC0000000
  %13692 = tail call float @llvm.fabs.f32(float %13691)
  %13693 = fcmp olt float %13692, 1.310720e+05
  br i1 %13693, label %13800, label %13694

13694:                                            ; preds = %13523
  %13695 = bitcast float %13692 to i32
  %13696 = lshr i32 %13695, 23
  %13697 = and i32 %13695, 8388607
  %13698 = or i32 %13697, 8388608
  %13699 = zext i32 %13698 to i64
  %13700 = mul nuw nsw i64 %13699, 4266746795
  %13701 = trunc i64 %13700 to i32
  %13702 = lshr i64 %13700, 32
  %13703 = mul nuw nsw i64 %13699, 1011060801
  %13704 = add nuw nsw i64 %13702, %13703
  %13705 = trunc i64 %13704 to i32
  %13706 = lshr i64 %13704, 32
  %13707 = mul nuw nsw i64 %13699, 3680671129
  %13708 = add nuw nsw i64 %13706, %13707
  %13709 = trunc i64 %13708 to i32
  %13710 = lshr i64 %13708, 32
  %13711 = mul nuw nsw i64 %13699, 4113882560
  %13712 = add nuw nsw i64 %13710, %13711
  %13713 = trunc i64 %13712 to i32
  %13714 = lshr i64 %13712, 32
  %13715 = mul nuw nsw i64 %13699, 4230436817
  %13716 = add nuw nsw i64 %13714, %13715
  %13717 = trunc i64 %13716 to i32
  %13718 = lshr i64 %13716, 32
  %13719 = mul nuw nsw i64 %13699, 1313084713
  %13720 = add nuw nsw i64 %13718, %13719
  %13721 = trunc i64 %13720 to i32
  %13722 = lshr i64 %13720, 32
  %13723 = mul nuw nsw i64 %13699, 2734261102
  %13724 = add nuw nsw i64 %13722, %13723
  %13725 = trunc i64 %13724 to i32
  %13726 = lshr i64 %13724, 32
  %13727 = trunc i64 %13726 to i32
  %13728 = add nsw i32 %13696, -120
  %13729 = icmp ugt i32 %13728, 63
  %13730 = select i1 %13729, i32 %13721, i32 %13727
  %13731 = select i1 %13729, i32 %13717, i32 %13725
  %13732 = select i1 %13729, i32 %13713, i32 %13721
  %13733 = select i1 %13729, i32 %13709, i32 %13717
  %13734 = select i1 %13729, i32 %13705, i32 %13713
  %13735 = select i1 %13729, i32 %13701, i32 %13709
  %13736 = select i1 %13729, i32 -64, i32 0
  %13737 = add nsw i32 %13736, %13728
  %13738 = icmp ugt i32 %13737, 31
  %13739 = select i1 %13738, i32 %13731, i32 %13730
  %13740 = select i1 %13738, i32 %13732, i32 %13731
  %13741 = select i1 %13738, i32 %13733, i32 %13732
  %13742 = select i1 %13738, i32 %13734, i32 %13733
  %13743 = select i1 %13738, i32 %13735, i32 %13734
  %13744 = select i1 %13738, i32 -32, i32 0
  %13745 = add nsw i32 %13744, %13737
  %13746 = icmp ugt i32 %13745, 31
  %13747 = select i1 %13746, i32 %13740, i32 %13739
  %13748 = select i1 %13746, i32 %13741, i32 %13740
  %13749 = select i1 %13746, i32 %13742, i32 %13741
  %13750 = select i1 %13746, i32 %13743, i32 %13742
  %13751 = select i1 %13746, i32 -32, i32 0
  %13752 = add nsw i32 %13751, %13745
  %13753 = icmp eq i32 %13752, 0
  %13754 = sub nsw i32 32, %13752
  %13755 = tail call i32 @llvm.fshr.i32(i32 %13747, i32 %13748, i32 %13754)
  %13756 = tail call i32 @llvm.fshr.i32(i32 %13748, i32 %13749, i32 %13754)
  %13757 = tail call i32 @llvm.fshr.i32(i32 %13749, i32 %13750, i32 %13754)
  %13758 = select i1 %13753, i32 %13747, i32 %13755
  %13759 = select i1 %13753, i32 %13748, i32 %13756
  %13760 = select i1 %13753, i32 %13749, i32 %13757
  %13761 = lshr i32 %13758, 29
  %13762 = tail call i32 @llvm.fshl.i32(i32 %13758, i32 %13759, i32 2)
  %13763 = tail call i32 @llvm.fshl.i32(i32 %13759, i32 %13760, i32 2)
  %13764 = tail call i32 @llvm.fshl.i32(i32 %13760, i32 %13750, i32 2)
  %13765 = and i32 %13761, 1
  %13766 = sub nsw i32 0, %13765
  %13767 = shl i32 %13761, 31
  %13768 = xor i32 %13762, %13766
  %13769 = xor i32 %13763, %13766
  %13770 = xor i32 %13764, %13766
  %13771 = tail call i32 @llvm.ctlz.i32(i32 %13768, i1 false), !range !8
  %13772 = sub nsw i32 31, %13771
  %13773 = tail call i32 @llvm.fshr.i32(i32 %13768, i32 %13769, i32 %13772)
  %13774 = tail call i32 @llvm.fshr.i32(i32 %13769, i32 %13770, i32 %13772)
  %13775 = shl nuw nsw i32 %13771, 23
  %13776 = sub nuw nsw i32 1056964608, %13775
  %13777 = lshr i32 %13773, 9
  %13778 = or i32 %13777, %13776
  %13779 = or i32 %13778, %13767
  %13780 = bitcast i32 %13779 to float
  %13781 = tail call i32 @llvm.fshl.i32(i32 %13773, i32 %13774, i32 23)
  %13782 = tail call i32 @llvm.ctlz.i32(i32 %13781, i1 false), !range !8
  %13783 = fmul float %13780, 0x3FF921FB40000000
  %13784 = add nuw nsw i32 %13782, %13771
  %13785 = shl nuw nsw i32 %13784, 23
  %13786 = sub nuw nsw i32 855638016, %13785
  %13787 = sub nsw i32 31, %13782
  %13788 = tail call i32 @llvm.fshr.i32(i32 %13781, i32 %13774, i32 %13787)
  %13789 = lshr i32 %13788, 9
  %13790 = or i32 %13786, %13789
  %13791 = or i32 %13790, %13767
  %13792 = bitcast i32 %13791 to float
  %13793 = fneg float %13783
  %13794 = tail call float @llvm.fma.f32(float %13780, float 0x3FF921FB40000000, float %13793)
  %13795 = tail call float @llvm.fma.f32(float %13780, float 0x3E74442D00000000, float %13794)
  %13796 = tail call float @llvm.fma.f32(float %13792, float 0x3FF921FB40000000, float %13795)
  %13797 = fadd float %13783, %13796
  %13798 = lshr i32 %13758, 30
  %13799 = add nuw nsw i32 %13765, %13798
  br label %13808

13800:                                            ; preds = %13523
  %13801 = fmul float %13692, 0x3FE45F3060000000
  %13802 = tail call float @llvm.rint.f32(float %13801)
  %13803 = tail call float @llvm.fma.f32(float %13802, float 0xBFF921FB40000000, float %13692)
  %13804 = tail call float @llvm.fma.f32(float %13802, float 0xBE74442D00000000, float %13803)
  %13805 = tail call float @llvm.fma.f32(float %13802, float 0xBCF8469880000000, float %13804)
  %13806 = fptosi float %13802 to i32
  %13807 = bitcast float %13692 to i32
  br label %13808

13808:                                            ; preds = %13800, %13694
  %13809 = phi i32 [ %13807, %13800 ], [ %13695, %13694 ]
  %13810 = phi float [ %13805, %13800 ], [ %13797, %13694 ]
  %13811 = phi i32 [ %13806, %13800 ], [ %13799, %13694 ]
  %13812 = fmul float %13810, %13810
  %13813 = tail call float @llvm.fmuladd.f32(float %13812, float 0xBF29833040000000, float 0x3F81103880000000)
  %13814 = tail call float @llvm.fmuladd.f32(float %13812, float %13813, float 0xBFC55553A0000000)
  %13815 = fmul float %13812, %13814
  %13816 = tail call float @llvm.fmuladd.f32(float %13810, float %13815, float %13810)
  %13817 = tail call float @llvm.fmuladd.f32(float %13812, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %13818 = tail call float @llvm.fmuladd.f32(float %13812, float %13817, float 0x3FA5557EE0000000)
  %13819 = tail call float @llvm.fmuladd.f32(float %13812, float %13818, float 0xBFE0000080000000)
  %13820 = tail call float @llvm.fmuladd.f32(float %13812, float %13819, float 1.000000e+00)
  %13821 = and i32 %13811, 1
  %13822 = icmp eq i32 %13821, 0
  %13823 = select i1 %13822, float %13816, float %13820
  %13824 = bitcast float %13823 to i32
  %13825 = shl i32 %13811, 30
  %13826 = and i32 %13825, -2147483648
  %13827 = bitcast float %13691 to i32
  %13828 = xor i32 %13809, %13827
  %13829 = xor i32 %13828, %13826
  %13830 = xor i32 %13829, %13824
  %13831 = bitcast i32 %13830 to float
  %13832 = tail call i1 @llvm.amdgcn.class.f32(float %13692, i32 504)
  %13833 = select i1 %13832, float %13831, float 0x7FF8000000000000
  %13834 = tail call float @llvm.fabs.f32(float %13833)
  %13835 = tail call float @llvm.amdgcn.frexp.mant.f32(float %13834)
  %13836 = fcmp olt float %13835, 0x3FE5555560000000
  %13837 = zext i1 %13836 to i32
  %13838 = tail call float @llvm.amdgcn.ldexp.f32(float %13835, i32 %13837)
  %13839 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %13834)
  %13840 = sub nsw i32 %13839, %13837
  %13841 = fadd float %13838, -1.000000e+00
  %13842 = fadd float %13838, 1.000000e+00
  %13843 = fadd float %13842, -1.000000e+00
  %13844 = fsub float %13838, %13843
  %13845 = tail call float @llvm.amdgcn.rcp.f32(float %13842)
  %13846 = fmul float %13841, %13845
  %13847 = fmul float %13842, %13846
  %13848 = fneg float %13847
  %13849 = tail call float @llvm.fma.f32(float %13846, float %13842, float %13848)
  %13850 = tail call float @llvm.fma.f32(float %13846, float %13844, float %13849)
  %13851 = fadd float %13847, %13850
  %13852 = fsub float %13851, %13847
  %13853 = fsub float %13850, %13852
  %13854 = fsub float %13841, %13851
  %13855 = fsub float %13841, %13854
  %13856 = fsub float %13855, %13851
  %13857 = fsub float %13856, %13853
  %13858 = fadd float %13854, %13857
  %13859 = fmul float %13845, %13858
  %13860 = fadd float %13846, %13859
  %13861 = fsub float %13860, %13846
  %13862 = fsub float %13859, %13861
  %13863 = fmul float %13860, %13860
  %13864 = fneg float %13863
  %13865 = tail call float @llvm.fma.f32(float %13860, float %13860, float %13864)
  %13866 = fmul float %13862, 2.000000e+00
  %13867 = tail call float @llvm.fma.f32(float %13860, float %13866, float %13865)
  %13868 = fadd float %13863, %13867
  %13869 = fsub float %13868, %13863
  %13870 = fsub float %13867, %13869
  %13871 = tail call float @llvm.fmuladd.f32(float %13868, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %13872 = tail call float @llvm.fmuladd.f32(float %13868, float %13871, float 0x3FD999BDE0000000)
  %13873 = sitofp i32 %13840 to float
  %13874 = fmul float %13873, 0x3FE62E4300000000
  %13875 = fneg float %13874
  %13876 = tail call float @llvm.fma.f32(float %13873, float 0x3FE62E4300000000, float %13875)
  %13877 = tail call float @llvm.fma.f32(float %13873, float 0xBE205C6100000000, float %13876)
  %13878 = fadd float %13874, %13877
  %13879 = fsub float %13878, %13874
  %13880 = fsub float %13877, %13879
  %13881 = tail call float @llvm.amdgcn.ldexp.f32(float %13860, i32 1)
  %13882 = fmul float %13860, %13868
  %13883 = fneg float %13882
  %13884 = tail call float @llvm.fma.f32(float %13868, float %13860, float %13883)
  %13885 = tail call float @llvm.fma.f32(float %13868, float %13862, float %13884)
  %13886 = tail call float @llvm.fma.f32(float %13870, float %13860, float %13885)
  %13887 = fadd float %13882, %13886
  %13888 = fsub float %13887, %13882
  %13889 = fsub float %13886, %13888
  %13890 = fmul float %13868, %13872
  %13891 = fneg float %13890
  %13892 = tail call float @llvm.fma.f32(float %13868, float %13872, float %13891)
  %13893 = tail call float @llvm.fma.f32(float %13870, float %13872, float %13892)
  %13894 = fadd float %13890, %13893
  %13895 = fsub float %13894, %13890
  %13896 = fsub float %13893, %13895
  %13897 = fadd float %13894, 0x3FE5555540000000
  %13898 = fadd float %13897, 0xBFE5555540000000
  %13899 = fsub float %13894, %13898
  %13900 = fadd float %13896, 0x3E2E720200000000
  %13901 = fadd float %13900, %13899
  %13902 = fadd float %13897, %13901
  %13903 = fsub float %13902, %13897
  %13904 = fsub float %13901, %13903
  %13905 = fmul float %13887, %13902
  %13906 = fneg float %13905
  %13907 = tail call float @llvm.fma.f32(float %13887, float %13902, float %13906)
  %13908 = tail call float @llvm.fma.f32(float %13887, float %13904, float %13907)
  %13909 = tail call float @llvm.fma.f32(float %13889, float %13902, float %13908)
  %13910 = tail call float @llvm.amdgcn.ldexp.f32(float %13862, i32 1)
  %13911 = fadd float %13905, %13909
  %13912 = fsub float %13911, %13905
  %13913 = fsub float %13909, %13912
  %13914 = fadd float %13881, %13911
  %13915 = fsub float %13914, %13881
  %13916 = fsub float %13911, %13915
  %13917 = fadd float %13910, %13913
  %13918 = fadd float %13917, %13916
  %13919 = fadd float %13914, %13918
  %13920 = fsub float %13919, %13914
  %13921 = fsub float %13918, %13920
  %13922 = fadd float %13878, %13919
  %13923 = fsub float %13922, %13878
  %13924 = fsub float %13922, %13923
  %13925 = fsub float %13878, %13924
  %13926 = fsub float %13919, %13923
  %13927 = fadd float %13926, %13925
  %13928 = fadd float %13880, %13921
  %13929 = fsub float %13928, %13880
  %13930 = fsub float %13928, %13929
  %13931 = fsub float %13880, %13930
  %13932 = fsub float %13921, %13929
  %13933 = fadd float %13932, %13931
  %13934 = fadd float %13928, %13927
  %13935 = fadd float %13922, %13934
  %13936 = fsub float %13935, %13922
  %13937 = fsub float %13934, %13936
  %13938 = fadd float %13933, %13937
  %13939 = fadd float %13935, %13938
  %13940 = fsub float %13939, %13935
  %13941 = fsub float %13938, %13940
  %13942 = fmul float %13939, 2.000000e+00
  %13943 = fneg float %13942
  %13944 = tail call float @llvm.fma.f32(float %13939, float 2.000000e+00, float %13943)
  %13945 = fmul float %13939, 0.000000e+00
  %13946 = tail call float @llvm.fma.f32(float %13941, float 2.000000e+00, float %13945)
  %13947 = fadd float %13944, %13946
  %13948 = fadd float %13942, %13947
  %13949 = fsub float %13948, %13942
  %13950 = fsub float %13947, %13949
  %13951 = tail call float @llvm.fabs.f32(float %13942) #3
  %13952 = fcmp oeq float %13951, 0x7FF0000000000000
  %13953 = select i1 %13952, float %13942, float %13948
  %13954 = tail call float @llvm.fabs.f32(float %13953) #3
  %13955 = fcmp oeq float %13954, 0x7FF0000000000000
  %13956 = select i1 %13955, float 0.000000e+00, float %13950
  %13957 = fcmp oeq float %13953, 0x40562E4300000000
  %13958 = select i1 %13957, float 0x3EE0000000000000, float 0.000000e+00
  %13959 = fsub float %13953, %13958
  %13960 = fadd float %13958, %13956
  %13961 = fmul float %13959, 0x3FF7154760000000
  %13962 = tail call float @llvm.rint.f32(float %13961)
  %13963 = fcmp ogt float %13959, 0x40562E4300000000
  %13964 = fcmp olt float %13959, 0xC059D1DA00000000
  %13965 = fneg float %13961
  %13966 = tail call float @llvm.fma.f32(float %13959, float 0x3FF7154760000000, float %13965)
  %13967 = tail call float @llvm.fma.f32(float %13959, float 0x3E54AE0BE0000000, float %13966)
  %13968 = fsub float %13961, %13962
  %13969 = fadd float %13967, %13968
  %13970 = tail call float @llvm.exp2.f32(float %13969)
  %13971 = fptosi float %13962 to i32
  %13972 = tail call float @llvm.amdgcn.ldexp.f32(float %13970, i32 %13971)
  %13973 = select i1 %13964, float 0.000000e+00, float %13972
  %13974 = select i1 %13963, float 0x7FF0000000000000, float %13973
  %13975 = tail call float @llvm.fma.f32(float %13974, float %13960, float %13974)
  %13976 = tail call float @llvm.fabs.f32(float %13974) #3
  %13977 = fcmp oeq float %13976, 0x7FF0000000000000
  %13978 = select i1 %13977, float %13974, float %13975
  %13979 = tail call float @llvm.fabs.f32(float %13978)
  %13980 = fcmp oeq float %13834, 0x7FF0000000000000
  %13981 = fcmp oeq float %13833, 0.000000e+00
  %13982 = fcmp uno float %13833, 0.000000e+00
  %13983 = fmul contract float %13979, 1.000000e+01
  %13984 = fadd contract float %13983, 1.000000e+00
  %13985 = select i1 %13980, float 0x7FF0000000000000, float %13984
  %13986 = select i1 %13981, float 1.000000e+00, float %13985
  %13987 = select i1 %13982, float 0x7FF8000000000000, float %13986
  %13988 = fmul contract float %13690, %13987
  %13989 = fadd contract float %13526, %13988
  br i1 %13524, label %13523, label %13990, !llvm.loop !9

13990:                                            ; preds = %13808
  %13991 = load float, float addrspace(1)* %0, align 4, !tbaa !4
  %13992 = fadd contract float %13991, -1.000000e+00
  %13993 = fmul contract float %13992, 2.500000e-01
  %13994 = fadd contract float %13993, 1.000000e+00
  %13995 = load float, float addrspace(1)* %3, align 4, !tbaa !4
  %13996 = fadd contract float %13995, -1.000000e+00
  %13997 = fmul contract float %13996, 2.500000e-01
  %13998 = fadd contract float %13997, 1.000000e+00
  %13999 = fmul contract float %13994, 0x400921CAC0000000
  %14000 = tail call float @llvm.fabs.f32(float %13999)
  %14001 = fcmp olt float %14000, 1.310720e+05
  br i1 %14001, label %14108, label %14002

14002:                                            ; preds = %13990
  %14003 = bitcast float %14000 to i32
  %14004 = lshr i32 %14003, 23
  %14005 = and i32 %14003, 8388607
  %14006 = or i32 %14005, 8388608
  %14007 = zext i32 %14006 to i64
  %14008 = mul nuw nsw i64 %14007, 4266746795
  %14009 = trunc i64 %14008 to i32
  %14010 = lshr i64 %14008, 32
  %14011 = mul nuw nsw i64 %14007, 1011060801
  %14012 = add nuw nsw i64 %14010, %14011
  %14013 = trunc i64 %14012 to i32
  %14014 = lshr i64 %14012, 32
  %14015 = mul nuw nsw i64 %14007, 3680671129
  %14016 = add nuw nsw i64 %14014, %14015
  %14017 = trunc i64 %14016 to i32
  %14018 = lshr i64 %14016, 32
  %14019 = mul nuw nsw i64 %14007, 4113882560
  %14020 = add nuw nsw i64 %14018, %14019
  %14021 = trunc i64 %14020 to i32
  %14022 = lshr i64 %14020, 32
  %14023 = mul nuw nsw i64 %14007, 4230436817
  %14024 = add nuw nsw i64 %14022, %14023
  %14025 = trunc i64 %14024 to i32
  %14026 = lshr i64 %14024, 32
  %14027 = mul nuw nsw i64 %14007, 1313084713
  %14028 = add nuw nsw i64 %14026, %14027
  %14029 = trunc i64 %14028 to i32
  %14030 = lshr i64 %14028, 32
  %14031 = mul nuw nsw i64 %14007, 2734261102
  %14032 = add nuw nsw i64 %14030, %14031
  %14033 = trunc i64 %14032 to i32
  %14034 = lshr i64 %14032, 32
  %14035 = trunc i64 %14034 to i32
  %14036 = add nsw i32 %14004, -120
  %14037 = icmp ugt i32 %14036, 63
  %14038 = select i1 %14037, i32 %14029, i32 %14035
  %14039 = select i1 %14037, i32 %14025, i32 %14033
  %14040 = select i1 %14037, i32 %14021, i32 %14029
  %14041 = select i1 %14037, i32 %14017, i32 %14025
  %14042 = select i1 %14037, i32 %14013, i32 %14021
  %14043 = select i1 %14037, i32 %14009, i32 %14017
  %14044 = select i1 %14037, i32 -64, i32 0
  %14045 = add nsw i32 %14044, %14036
  %14046 = icmp ugt i32 %14045, 31
  %14047 = select i1 %14046, i32 %14039, i32 %14038
  %14048 = select i1 %14046, i32 %14040, i32 %14039
  %14049 = select i1 %14046, i32 %14041, i32 %14040
  %14050 = select i1 %14046, i32 %14042, i32 %14041
  %14051 = select i1 %14046, i32 %14043, i32 %14042
  %14052 = select i1 %14046, i32 -32, i32 0
  %14053 = add nsw i32 %14052, %14045
  %14054 = icmp ugt i32 %14053, 31
  %14055 = select i1 %14054, i32 %14048, i32 %14047
  %14056 = select i1 %14054, i32 %14049, i32 %14048
  %14057 = select i1 %14054, i32 %14050, i32 %14049
  %14058 = select i1 %14054, i32 %14051, i32 %14050
  %14059 = select i1 %14054, i32 -32, i32 0
  %14060 = add nsw i32 %14059, %14053
  %14061 = icmp eq i32 %14060, 0
  %14062 = sub nsw i32 32, %14060
  %14063 = tail call i32 @llvm.fshr.i32(i32 %14055, i32 %14056, i32 %14062)
  %14064 = tail call i32 @llvm.fshr.i32(i32 %14056, i32 %14057, i32 %14062)
  %14065 = tail call i32 @llvm.fshr.i32(i32 %14057, i32 %14058, i32 %14062)
  %14066 = select i1 %14061, i32 %14055, i32 %14063
  %14067 = select i1 %14061, i32 %14056, i32 %14064
  %14068 = select i1 %14061, i32 %14057, i32 %14065
  %14069 = lshr i32 %14066, 29
  %14070 = tail call i32 @llvm.fshl.i32(i32 %14066, i32 %14067, i32 2)
  %14071 = tail call i32 @llvm.fshl.i32(i32 %14067, i32 %14068, i32 2)
  %14072 = tail call i32 @llvm.fshl.i32(i32 %14068, i32 %14058, i32 2)
  %14073 = and i32 %14069, 1
  %14074 = sub nsw i32 0, %14073
  %14075 = shl i32 %14069, 31
  %14076 = xor i32 %14070, %14074
  %14077 = xor i32 %14071, %14074
  %14078 = xor i32 %14072, %14074
  %14079 = tail call i32 @llvm.ctlz.i32(i32 %14076, i1 false), !range !8
  %14080 = sub nsw i32 31, %14079
  %14081 = tail call i32 @llvm.fshr.i32(i32 %14076, i32 %14077, i32 %14080)
  %14082 = tail call i32 @llvm.fshr.i32(i32 %14077, i32 %14078, i32 %14080)
  %14083 = shl nuw nsw i32 %14079, 23
  %14084 = sub nuw nsw i32 1056964608, %14083
  %14085 = lshr i32 %14081, 9
  %14086 = or i32 %14085, %14084
  %14087 = or i32 %14086, %14075
  %14088 = bitcast i32 %14087 to float
  %14089 = tail call i32 @llvm.fshl.i32(i32 %14081, i32 %14082, i32 23)
  %14090 = tail call i32 @llvm.ctlz.i32(i32 %14089, i1 false), !range !8
  %14091 = fmul float %14088, 0x3FF921FB40000000
  %14092 = add nuw nsw i32 %14090, %14079
  %14093 = shl nuw nsw i32 %14092, 23
  %14094 = sub nuw nsw i32 855638016, %14093
  %14095 = sub nsw i32 31, %14090
  %14096 = tail call i32 @llvm.fshr.i32(i32 %14089, i32 %14082, i32 %14095)
  %14097 = lshr i32 %14096, 9
  %14098 = or i32 %14094, %14097
  %14099 = or i32 %14098, %14075
  %14100 = bitcast i32 %14099 to float
  %14101 = fneg float %14091
  %14102 = tail call float @llvm.fma.f32(float %14088, float 0x3FF921FB40000000, float %14101)
  %14103 = tail call float @llvm.fma.f32(float %14088, float 0x3E74442D00000000, float %14102)
  %14104 = tail call float @llvm.fma.f32(float %14100, float 0x3FF921FB40000000, float %14103)
  %14105 = fadd float %14091, %14104
  %14106 = lshr i32 %14066, 30
  %14107 = add nuw nsw i32 %14073, %14106
  br label %14116

14108:                                            ; preds = %13990
  %14109 = fmul float %14000, 0x3FE45F3060000000
  %14110 = tail call float @llvm.rint.f32(float %14109)
  %14111 = tail call float @llvm.fma.f32(float %14110, float 0xBFF921FB40000000, float %14000)
  %14112 = tail call float @llvm.fma.f32(float %14110, float 0xBE74442D00000000, float %14111)
  %14113 = tail call float @llvm.fma.f32(float %14110, float 0xBCF8469880000000, float %14112)
  %14114 = fptosi float %14110 to i32
  %14115 = bitcast float %14000 to i32
  br label %14116

14116:                                            ; preds = %14108, %14002
  %14117 = phi i32 [ %14115, %14108 ], [ %14003, %14002 ]
  %14118 = phi float [ %14113, %14108 ], [ %14105, %14002 ]
  %14119 = phi i32 [ %14114, %14108 ], [ %14107, %14002 ]
  %14120 = fmul float %14118, %14118
  %14121 = tail call float @llvm.fmuladd.f32(float %14120, float 0xBF29833040000000, float 0x3F81103880000000)
  %14122 = tail call float @llvm.fmuladd.f32(float %14120, float %14121, float 0xBFC55553A0000000)
  %14123 = fmul float %14120, %14122
  %14124 = tail call float @llvm.fmuladd.f32(float %14118, float %14123, float %14118)
  %14125 = tail call float @llvm.fmuladd.f32(float %14120, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %14126 = tail call float @llvm.fmuladd.f32(float %14120, float %14125, float 0x3FA5557EE0000000)
  %14127 = tail call float @llvm.fmuladd.f32(float %14120, float %14126, float 0xBFE0000080000000)
  %14128 = tail call float @llvm.fmuladd.f32(float %14120, float %14127, float 1.000000e+00)
  %14129 = and i32 %14119, 1
  %14130 = icmp eq i32 %14129, 0
  %14131 = select i1 %14130, float %14124, float %14128
  %14132 = bitcast float %14131 to i32
  %14133 = shl i32 %14119, 30
  %14134 = and i32 %14133, -2147483648
  %14135 = bitcast float %13999 to i32
  %14136 = xor i32 %14117, %14135
  %14137 = xor i32 %14136, %14134
  %14138 = xor i32 %14137, %14132
  %14139 = bitcast i32 %14138 to float
  %14140 = tail call i1 @llvm.amdgcn.class.f32(float %14000, i32 504)
  %14141 = select i1 %14140, float %14139, float 0x7FF8000000000000
  %14142 = tail call float @llvm.fabs.f32(float %14141)
  %14143 = tail call float @llvm.amdgcn.frexp.mant.f32(float %14142)
  %14144 = fcmp olt float %14143, 0x3FE5555560000000
  %14145 = zext i1 %14144 to i32
  %14146 = tail call float @llvm.amdgcn.ldexp.f32(float %14143, i32 %14145)
  %14147 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %14142)
  %14148 = sub nsw i32 %14147, %14145
  %14149 = fadd float %14146, -1.000000e+00
  %14150 = fadd float %14146, 1.000000e+00
  %14151 = fadd float %14150, -1.000000e+00
  %14152 = fsub float %14146, %14151
  %14153 = tail call float @llvm.amdgcn.rcp.f32(float %14150)
  %14154 = fmul float %14149, %14153
  %14155 = fmul float %14150, %14154
  %14156 = fneg float %14155
  %14157 = tail call float @llvm.fma.f32(float %14154, float %14150, float %14156)
  %14158 = tail call float @llvm.fma.f32(float %14154, float %14152, float %14157)
  %14159 = fadd float %14155, %14158
  %14160 = fsub float %14159, %14155
  %14161 = fsub float %14158, %14160
  %14162 = fsub float %14149, %14159
  %14163 = fsub float %14149, %14162
  %14164 = fsub float %14163, %14159
  %14165 = fsub float %14164, %14161
  %14166 = fadd float %14162, %14165
  %14167 = fmul float %14153, %14166
  %14168 = fadd float %14154, %14167
  %14169 = fsub float %14168, %14154
  %14170 = fsub float %14167, %14169
  %14171 = fmul float %14168, %14168
  %14172 = fneg float %14171
  %14173 = tail call float @llvm.fma.f32(float %14168, float %14168, float %14172)
  %14174 = fmul float %14170, 2.000000e+00
  %14175 = tail call float @llvm.fma.f32(float %14168, float %14174, float %14173)
  %14176 = fadd float %14171, %14175
  %14177 = fsub float %14176, %14171
  %14178 = fsub float %14175, %14177
  %14179 = tail call float @llvm.fmuladd.f32(float %14176, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %14180 = tail call float @llvm.fmuladd.f32(float %14176, float %14179, float 0x3FD999BDE0000000)
  %14181 = sitofp i32 %14148 to float
  %14182 = fmul float %14181, 0x3FE62E4300000000
  %14183 = fneg float %14182
  %14184 = tail call float @llvm.fma.f32(float %14181, float 0x3FE62E4300000000, float %14183)
  %14185 = tail call float @llvm.fma.f32(float %14181, float 0xBE205C6100000000, float %14184)
  %14186 = fadd float %14182, %14185
  %14187 = fsub float %14186, %14182
  %14188 = fsub float %14185, %14187
  %14189 = tail call float @llvm.amdgcn.ldexp.f32(float %14168, i32 1)
  %14190 = fmul float %14168, %14176
  %14191 = fneg float %14190
  %14192 = tail call float @llvm.fma.f32(float %14176, float %14168, float %14191)
  %14193 = tail call float @llvm.fma.f32(float %14176, float %14170, float %14192)
  %14194 = tail call float @llvm.fma.f32(float %14178, float %14168, float %14193)
  %14195 = fadd float %14190, %14194
  %14196 = fsub float %14195, %14190
  %14197 = fsub float %14194, %14196
  %14198 = fmul float %14176, %14180
  %14199 = fneg float %14198
  %14200 = tail call float @llvm.fma.f32(float %14176, float %14180, float %14199)
  %14201 = tail call float @llvm.fma.f32(float %14178, float %14180, float %14200)
  %14202 = fadd float %14198, %14201
  %14203 = fsub float %14202, %14198
  %14204 = fsub float %14201, %14203
  %14205 = fadd float %14202, 0x3FE5555540000000
  %14206 = fadd float %14205, 0xBFE5555540000000
  %14207 = fsub float %14202, %14206
  %14208 = fadd float %14204, 0x3E2E720200000000
  %14209 = fadd float %14208, %14207
  %14210 = fadd float %14205, %14209
  %14211 = fsub float %14210, %14205
  %14212 = fsub float %14209, %14211
  %14213 = fmul float %14195, %14210
  %14214 = fneg float %14213
  %14215 = tail call float @llvm.fma.f32(float %14195, float %14210, float %14214)
  %14216 = tail call float @llvm.fma.f32(float %14195, float %14212, float %14215)
  %14217 = tail call float @llvm.fma.f32(float %14197, float %14210, float %14216)
  %14218 = tail call float @llvm.amdgcn.ldexp.f32(float %14170, i32 1)
  %14219 = fadd float %14213, %14217
  %14220 = fsub float %14219, %14213
  %14221 = fsub float %14217, %14220
  %14222 = fadd float %14189, %14219
  %14223 = fsub float %14222, %14189
  %14224 = fsub float %14219, %14223
  %14225 = fadd float %14218, %14221
  %14226 = fadd float %14225, %14224
  %14227 = fadd float %14222, %14226
  %14228 = fsub float %14227, %14222
  %14229 = fsub float %14226, %14228
  %14230 = fadd float %14186, %14227
  %14231 = fsub float %14230, %14186
  %14232 = fsub float %14230, %14231
  %14233 = fsub float %14186, %14232
  %14234 = fsub float %14227, %14231
  %14235 = fadd float %14234, %14233
  %14236 = fadd float %14188, %14229
  %14237 = fsub float %14236, %14188
  %14238 = fsub float %14236, %14237
  %14239 = fsub float %14188, %14238
  %14240 = fsub float %14229, %14237
  %14241 = fadd float %14240, %14239
  %14242 = fadd float %14236, %14235
  %14243 = fadd float %14230, %14242
  %14244 = fsub float %14243, %14230
  %14245 = fsub float %14242, %14244
  %14246 = fadd float %14241, %14245
  %14247 = fadd float %14243, %14246
  %14248 = fsub float %14247, %14243
  %14249 = fsub float %14246, %14248
  %14250 = fmul float %14247, 2.000000e+00
  %14251 = fneg float %14250
  %14252 = tail call float @llvm.fma.f32(float %14247, float 2.000000e+00, float %14251)
  %14253 = fmul float %14247, 0.000000e+00
  %14254 = tail call float @llvm.fma.f32(float %14249, float 2.000000e+00, float %14253)
  %14255 = fadd float %14252, %14254
  %14256 = fadd float %14250, %14255
  %14257 = fsub float %14256, %14250
  %14258 = fsub float %14255, %14257
  %14259 = tail call float @llvm.fabs.f32(float %14250) #3
  %14260 = fcmp oeq float %14259, 0x7FF0000000000000
  %14261 = select i1 %14260, float %14250, float %14256
  %14262 = tail call float @llvm.fabs.f32(float %14261) #3
  %14263 = fcmp oeq float %14262, 0x7FF0000000000000
  %14264 = select i1 %14263, float 0.000000e+00, float %14258
  %14265 = fcmp oeq float %14261, 0x40562E4300000000
  %14266 = select i1 %14265, float 0x3EE0000000000000, float 0.000000e+00
  %14267 = fsub float %14261, %14266
  %14268 = fadd float %14266, %14264
  %14269 = fmul float %14267, 0x3FF7154760000000
  %14270 = tail call float @llvm.rint.f32(float %14269)
  %14271 = fcmp ogt float %14267, 0x40562E4300000000
  %14272 = fcmp olt float %14267, 0xC059D1DA00000000
  %14273 = fneg float %14269
  %14274 = tail call float @llvm.fma.f32(float %14267, float 0x3FF7154760000000, float %14273)
  %14275 = tail call float @llvm.fma.f32(float %14267, float 0x3E54AE0BE0000000, float %14274)
  %14276 = fsub float %14269, %14270
  %14277 = fadd float %14275, %14276
  %14278 = tail call float @llvm.exp2.f32(float %14277)
  %14279 = fptosi float %14270 to i32
  %14280 = tail call float @llvm.amdgcn.ldexp.f32(float %14278, i32 %14279)
  %14281 = select i1 %14272, float 0.000000e+00, float %14280
  %14282 = select i1 %14271, float 0x7FF0000000000000, float %14281
  %14283 = tail call float @llvm.fma.f32(float %14282, float %14268, float %14282)
  %14284 = tail call float @llvm.fabs.f32(float %14282) #3
  %14285 = fcmp oeq float %14284, 0x7FF0000000000000
  %14286 = select i1 %14285, float %14282, float %14283
  %14287 = tail call float @llvm.fabs.f32(float %14286)
  %14288 = fcmp oeq float %14142, 0x7FF0000000000000
  %14289 = fcmp oeq float %14141, 0.000000e+00
  %14290 = select i1 %14288, float 0x7FF0000000000000, float %14287
  %14291 = select i1 %14289, float 0.000000e+00, float %14290
  %14292 = fcmp uno float %14141, 0.000000e+00
  %14293 = select i1 %14292, float 0x7FF8000000000000, float %14291
  %14294 = fadd contract float %13998, -1.000000e+00
  %14295 = tail call float @llvm.fabs.f32(float %14294)
  %14296 = tail call float @llvm.amdgcn.frexp.mant.f32(float %14295)
  %14297 = fcmp olt float %14296, 0x3FE5555560000000
  %14298 = zext i1 %14297 to i32
  %14299 = tail call float @llvm.amdgcn.ldexp.f32(float %14296, i32 %14298)
  %14300 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %14295)
  %14301 = sub nsw i32 %14300, %14298
  %14302 = fadd float %14299, -1.000000e+00
  %14303 = fadd float %14299, 1.000000e+00
  %14304 = fadd float %14303, -1.000000e+00
  %14305 = fsub float %14299, %14304
  %14306 = tail call float @llvm.amdgcn.rcp.f32(float %14303)
  %14307 = fmul float %14302, %14306
  %14308 = fmul float %14303, %14307
  %14309 = fneg float %14308
  %14310 = tail call float @llvm.fma.f32(float %14307, float %14303, float %14309)
  %14311 = tail call float @llvm.fma.f32(float %14307, float %14305, float %14310)
  %14312 = fadd float %14308, %14311
  %14313 = fsub float %14312, %14308
  %14314 = fsub float %14311, %14313
  %14315 = fsub float %14302, %14312
  %14316 = fsub float %14302, %14315
  %14317 = fsub float %14316, %14312
  %14318 = fsub float %14317, %14314
  %14319 = fadd float %14315, %14318
  %14320 = fmul float %14306, %14319
  %14321 = fadd float %14307, %14320
  %14322 = fsub float %14321, %14307
  %14323 = fsub float %14320, %14322
  %14324 = fmul float %14321, %14321
  %14325 = fneg float %14324
  %14326 = tail call float @llvm.fma.f32(float %14321, float %14321, float %14325)
  %14327 = fmul float %14323, 2.000000e+00
  %14328 = tail call float @llvm.fma.f32(float %14321, float %14327, float %14326)
  %14329 = fadd float %14324, %14328
  %14330 = fsub float %14329, %14324
  %14331 = fsub float %14328, %14330
  %14332 = tail call float @llvm.fmuladd.f32(float %14329, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %14333 = tail call float @llvm.fmuladd.f32(float %14329, float %14332, float 0x3FD999BDE0000000)
  %14334 = sitofp i32 %14301 to float
  %14335 = fmul float %14334, 0x3FE62E4300000000
  %14336 = fneg float %14335
  %14337 = tail call float @llvm.fma.f32(float %14334, float 0x3FE62E4300000000, float %14336)
  %14338 = tail call float @llvm.fma.f32(float %14334, float 0xBE205C6100000000, float %14337)
  %14339 = fadd float %14335, %14338
  %14340 = fsub float %14339, %14335
  %14341 = fsub float %14338, %14340
  %14342 = tail call float @llvm.amdgcn.ldexp.f32(float %14321, i32 1)
  %14343 = fmul float %14321, %14329
  %14344 = fneg float %14343
  %14345 = tail call float @llvm.fma.f32(float %14329, float %14321, float %14344)
  %14346 = tail call float @llvm.fma.f32(float %14329, float %14323, float %14345)
  %14347 = tail call float @llvm.fma.f32(float %14331, float %14321, float %14346)
  %14348 = fadd float %14343, %14347
  %14349 = fsub float %14348, %14343
  %14350 = fsub float %14347, %14349
  %14351 = fmul float %14329, %14333
  %14352 = fneg float %14351
  %14353 = tail call float @llvm.fma.f32(float %14329, float %14333, float %14352)
  %14354 = tail call float @llvm.fma.f32(float %14331, float %14333, float %14353)
  %14355 = fadd float %14351, %14354
  %14356 = fsub float %14355, %14351
  %14357 = fsub float %14354, %14356
  %14358 = fadd float %14355, 0x3FE5555540000000
  %14359 = fadd float %14358, 0xBFE5555540000000
  %14360 = fsub float %14355, %14359
  %14361 = fadd float %14357, 0x3E2E720200000000
  %14362 = fadd float %14361, %14360
  %14363 = fadd float %14358, %14362
  %14364 = fsub float %14363, %14358
  %14365 = fsub float %14362, %14364
  %14366 = fmul float %14348, %14363
  %14367 = fneg float %14366
  %14368 = tail call float @llvm.fma.f32(float %14348, float %14363, float %14367)
  %14369 = tail call float @llvm.fma.f32(float %14348, float %14365, float %14368)
  %14370 = tail call float @llvm.fma.f32(float %14350, float %14363, float %14369)
  %14371 = tail call float @llvm.amdgcn.ldexp.f32(float %14323, i32 1)
  %14372 = fadd float %14366, %14370
  %14373 = fsub float %14372, %14366
  %14374 = fsub float %14370, %14373
  %14375 = fadd float %14342, %14372
  %14376 = fsub float %14375, %14342
  %14377 = fsub float %14372, %14376
  %14378 = fadd float %14371, %14374
  %14379 = fadd float %14378, %14377
  %14380 = fadd float %14375, %14379
  %14381 = fsub float %14380, %14375
  %14382 = fsub float %14379, %14381
  %14383 = fadd float %14339, %14380
  %14384 = fsub float %14383, %14339
  %14385 = fsub float %14383, %14384
  %14386 = fsub float %14339, %14385
  %14387 = fsub float %14380, %14384
  %14388 = fadd float %14387, %14386
  %14389 = fadd float %14341, %14382
  %14390 = fsub float %14389, %14341
  %14391 = fsub float %14389, %14390
  %14392 = fsub float %14341, %14391
  %14393 = fsub float %14382, %14390
  %14394 = fadd float %14393, %14392
  %14395 = fadd float %14389, %14388
  %14396 = fadd float %14383, %14395
  %14397 = fsub float %14396, %14383
  %14398 = fsub float %14395, %14397
  %14399 = fadd float %14394, %14398
  %14400 = fadd float %14396, %14399
  %14401 = fsub float %14400, %14396
  %14402 = fsub float %14399, %14401
  %14403 = fmul float %14400, 2.000000e+00
  %14404 = fneg float %14403
  %14405 = tail call float @llvm.fma.f32(float %14400, float 2.000000e+00, float %14404)
  %14406 = fmul float %14400, 0.000000e+00
  %14407 = tail call float @llvm.fma.f32(float %14402, float 2.000000e+00, float %14406)
  %14408 = fadd float %14405, %14407
  %14409 = fadd float %14403, %14408
  %14410 = fsub float %14409, %14403
  %14411 = fsub float %14408, %14410
  %14412 = tail call float @llvm.fabs.f32(float %14403) #3
  %14413 = fcmp oeq float %14412, 0x7FF0000000000000
  %14414 = select i1 %14413, float %14403, float %14409
  %14415 = tail call float @llvm.fabs.f32(float %14414) #3
  %14416 = fcmp oeq float %14415, 0x7FF0000000000000
  %14417 = select i1 %14416, float 0.000000e+00, float %14411
  %14418 = fcmp oeq float %14414, 0x40562E4300000000
  %14419 = select i1 %14418, float 0x3EE0000000000000, float 0.000000e+00
  %14420 = fsub float %14414, %14419
  %14421 = fadd float %14419, %14417
  %14422 = fmul float %14420, 0x3FF7154760000000
  %14423 = tail call float @llvm.rint.f32(float %14422)
  %14424 = fcmp ogt float %14420, 0x40562E4300000000
  %14425 = fcmp olt float %14420, 0xC059D1DA00000000
  %14426 = fneg float %14422
  %14427 = tail call float @llvm.fma.f32(float %14420, float 0x3FF7154760000000, float %14426)
  %14428 = tail call float @llvm.fma.f32(float %14420, float 0x3E54AE0BE0000000, float %14427)
  %14429 = fsub float %14422, %14423
  %14430 = fadd float %14428, %14429
  %14431 = tail call float @llvm.exp2.f32(float %14430)
  %14432 = fptosi float %14423 to i32
  %14433 = tail call float @llvm.amdgcn.ldexp.f32(float %14431, i32 %14432)
  %14434 = select i1 %14425, float 0.000000e+00, float %14433
  %14435 = select i1 %14424, float 0x7FF0000000000000, float %14434
  %14436 = tail call float @llvm.fma.f32(float %14435, float %14421, float %14435)
  %14437 = tail call float @llvm.fabs.f32(float %14435) #3
  %14438 = fcmp oeq float %14437, 0x7FF0000000000000
  %14439 = select i1 %14438, float %14435, float %14436
  %14440 = tail call float @llvm.fabs.f32(float %14439)
  %14441 = fcmp oeq float %14295, 0x7FF0000000000000
  %14442 = fcmp oeq float %14294, 0.000000e+00
  %14443 = select i1 %14441, float 0x7FF0000000000000, float %14440
  %14444 = select i1 %14442, float 0.000000e+00, float %14443
  %14445 = fcmp uno float %14294, 0.000000e+00
  %14446 = select i1 %14445, float 0x7FF8000000000000, float %14444
  %14447 = fadd contract float %14446, %14293
  %14448 = fadd contract float %14447, 0.000000e+00
  br label %14449

14449:                                            ; preds = %14736, %14116
  %14450 = phi i1 [ true, %14116 ], [ false, %14736 ]
  %14451 = phi i32 [ 0, %14116 ], [ 1, %14736 ]
  %14452 = phi float [ %14448, %14116 ], [ %14917, %14736 ]
  %14453 = zext i32 %14451 to i64
  %14454 = getelementptr inbounds float, float addrspace(1)* %0, i64 %14453
  %14455 = load float, float addrspace(1)* %14454, align 4, !tbaa !4
  %14456 = fadd contract float %14455, -1.000000e+00
  %14457 = fmul contract float %14456, 2.500000e-01
  %14458 = fadd contract float %14457, 1.000000e+00
  %14459 = add nuw nsw i32 %14451, 1
  %14460 = zext i32 %14459 to i64
  %14461 = getelementptr inbounds float, float addrspace(1)* %0, i64 %14460
  %14462 = load float, float addrspace(1)* %14461, align 4, !tbaa !4
  %14463 = fadd contract float %14462, -1.000000e+00
  %14464 = fmul contract float %14463, 2.500000e-01
  %14465 = fadd contract float %14464, 1.000000e+00
  %14466 = fadd contract float %14458, -1.000000e+00
  %14467 = tail call float @llvm.fabs.f32(float %14466)
  %14468 = tail call float @llvm.amdgcn.frexp.mant.f32(float %14467)
  %14469 = fcmp olt float %14468, 0x3FE5555560000000
  %14470 = zext i1 %14469 to i32
  %14471 = tail call float @llvm.amdgcn.ldexp.f32(float %14468, i32 %14470)
  %14472 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %14467)
  %14473 = sub nsw i32 %14472, %14470
  %14474 = fadd float %14471, -1.000000e+00
  %14475 = fadd float %14471, 1.000000e+00
  %14476 = fadd float %14475, -1.000000e+00
  %14477 = fsub float %14471, %14476
  %14478 = tail call float @llvm.amdgcn.rcp.f32(float %14475)
  %14479 = fmul float %14474, %14478
  %14480 = fmul float %14475, %14479
  %14481 = fneg float %14480
  %14482 = tail call float @llvm.fma.f32(float %14479, float %14475, float %14481)
  %14483 = tail call float @llvm.fma.f32(float %14479, float %14477, float %14482)
  %14484 = fadd float %14480, %14483
  %14485 = fsub float %14484, %14480
  %14486 = fsub float %14483, %14485
  %14487 = fsub float %14474, %14484
  %14488 = fsub float %14474, %14487
  %14489 = fsub float %14488, %14484
  %14490 = fsub float %14489, %14486
  %14491 = fadd float %14487, %14490
  %14492 = fmul float %14478, %14491
  %14493 = fadd float %14479, %14492
  %14494 = fsub float %14493, %14479
  %14495 = fsub float %14492, %14494
  %14496 = fmul float %14493, %14493
  %14497 = fneg float %14496
  %14498 = tail call float @llvm.fma.f32(float %14493, float %14493, float %14497)
  %14499 = fmul float %14495, 2.000000e+00
  %14500 = tail call float @llvm.fma.f32(float %14493, float %14499, float %14498)
  %14501 = fadd float %14496, %14500
  %14502 = fsub float %14501, %14496
  %14503 = fsub float %14500, %14502
  %14504 = tail call float @llvm.fmuladd.f32(float %14501, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %14505 = tail call float @llvm.fmuladd.f32(float %14501, float %14504, float 0x3FD999BDE0000000)
  %14506 = sitofp i32 %14473 to float
  %14507 = fmul float %14506, 0x3FE62E4300000000
  %14508 = fneg float %14507
  %14509 = tail call float @llvm.fma.f32(float %14506, float 0x3FE62E4300000000, float %14508)
  %14510 = tail call float @llvm.fma.f32(float %14506, float 0xBE205C6100000000, float %14509)
  %14511 = fadd float %14507, %14510
  %14512 = fsub float %14511, %14507
  %14513 = fsub float %14510, %14512
  %14514 = tail call float @llvm.amdgcn.ldexp.f32(float %14493, i32 1)
  %14515 = fmul float %14493, %14501
  %14516 = fneg float %14515
  %14517 = tail call float @llvm.fma.f32(float %14501, float %14493, float %14516)
  %14518 = tail call float @llvm.fma.f32(float %14501, float %14495, float %14517)
  %14519 = tail call float @llvm.fma.f32(float %14503, float %14493, float %14518)
  %14520 = fadd float %14515, %14519
  %14521 = fsub float %14520, %14515
  %14522 = fsub float %14519, %14521
  %14523 = fmul float %14501, %14505
  %14524 = fneg float %14523
  %14525 = tail call float @llvm.fma.f32(float %14501, float %14505, float %14524)
  %14526 = tail call float @llvm.fma.f32(float %14503, float %14505, float %14525)
  %14527 = fadd float %14523, %14526
  %14528 = fsub float %14527, %14523
  %14529 = fsub float %14526, %14528
  %14530 = fadd float %14527, 0x3FE5555540000000
  %14531 = fadd float %14530, 0xBFE5555540000000
  %14532 = fsub float %14527, %14531
  %14533 = fadd float %14529, 0x3E2E720200000000
  %14534 = fadd float %14533, %14532
  %14535 = fadd float %14530, %14534
  %14536 = fsub float %14535, %14530
  %14537 = fsub float %14534, %14536
  %14538 = fmul float %14520, %14535
  %14539 = fneg float %14538
  %14540 = tail call float @llvm.fma.f32(float %14520, float %14535, float %14539)
  %14541 = tail call float @llvm.fma.f32(float %14520, float %14537, float %14540)
  %14542 = tail call float @llvm.fma.f32(float %14522, float %14535, float %14541)
  %14543 = tail call float @llvm.amdgcn.ldexp.f32(float %14495, i32 1)
  %14544 = fadd float %14538, %14542
  %14545 = fsub float %14544, %14538
  %14546 = fsub float %14542, %14545
  %14547 = fadd float %14514, %14544
  %14548 = fsub float %14547, %14514
  %14549 = fsub float %14544, %14548
  %14550 = fadd float %14543, %14546
  %14551 = fadd float %14550, %14549
  %14552 = fadd float %14547, %14551
  %14553 = fsub float %14552, %14547
  %14554 = fsub float %14551, %14553
  %14555 = fadd float %14511, %14552
  %14556 = fsub float %14555, %14511
  %14557 = fsub float %14555, %14556
  %14558 = fsub float %14511, %14557
  %14559 = fsub float %14552, %14556
  %14560 = fadd float %14559, %14558
  %14561 = fadd float %14513, %14554
  %14562 = fsub float %14561, %14513
  %14563 = fsub float %14561, %14562
  %14564 = fsub float %14513, %14563
  %14565 = fsub float %14554, %14562
  %14566 = fadd float %14565, %14564
  %14567 = fadd float %14561, %14560
  %14568 = fadd float %14555, %14567
  %14569 = fsub float %14568, %14555
  %14570 = fsub float %14567, %14569
  %14571 = fadd float %14566, %14570
  %14572 = fadd float %14568, %14571
  %14573 = fsub float %14572, %14568
  %14574 = fsub float %14571, %14573
  %14575 = fmul float %14572, 2.000000e+00
  %14576 = fneg float %14575
  %14577 = tail call float @llvm.fma.f32(float %14572, float 2.000000e+00, float %14576)
  %14578 = fmul float %14572, 0.000000e+00
  %14579 = tail call float @llvm.fma.f32(float %14574, float 2.000000e+00, float %14578)
  %14580 = fadd float %14577, %14579
  %14581 = fadd float %14575, %14580
  %14582 = fsub float %14581, %14575
  %14583 = fsub float %14580, %14582
  %14584 = tail call float @llvm.fabs.f32(float %14575) #3
  %14585 = fcmp oeq float %14584, 0x7FF0000000000000
  %14586 = select i1 %14585, float %14575, float %14581
  %14587 = tail call float @llvm.fabs.f32(float %14586) #3
  %14588 = fcmp oeq float %14587, 0x7FF0000000000000
  %14589 = select i1 %14588, float 0.000000e+00, float %14583
  %14590 = fcmp oeq float %14586, 0x40562E4300000000
  %14591 = select i1 %14590, float 0x3EE0000000000000, float 0.000000e+00
  %14592 = fsub float %14586, %14591
  %14593 = fadd float %14591, %14589
  %14594 = fmul float %14592, 0x3FF7154760000000
  %14595 = tail call float @llvm.rint.f32(float %14594)
  %14596 = fcmp ogt float %14592, 0x40562E4300000000
  %14597 = fcmp olt float %14592, 0xC059D1DA00000000
  %14598 = fneg float %14594
  %14599 = tail call float @llvm.fma.f32(float %14592, float 0x3FF7154760000000, float %14598)
  %14600 = tail call float @llvm.fma.f32(float %14592, float 0x3E54AE0BE0000000, float %14599)
  %14601 = fsub float %14594, %14595
  %14602 = fadd float %14600, %14601
  %14603 = tail call float @llvm.exp2.f32(float %14602)
  %14604 = fptosi float %14595 to i32
  %14605 = tail call float @llvm.amdgcn.ldexp.f32(float %14603, i32 %14604)
  %14606 = select i1 %14597, float 0.000000e+00, float %14605
  %14607 = select i1 %14596, float 0x7FF0000000000000, float %14606
  %14608 = tail call float @llvm.fma.f32(float %14607, float %14593, float %14607)
  %14609 = tail call float @llvm.fabs.f32(float %14607) #3
  %14610 = fcmp oeq float %14609, 0x7FF0000000000000
  %14611 = select i1 %14610, float %14607, float %14608
  %14612 = tail call float @llvm.fabs.f32(float %14611)
  %14613 = fcmp oeq float %14467, 0x7FF0000000000000
  %14614 = fcmp oeq float %14466, 0.000000e+00
  %14615 = select i1 %14613, float 0x7FF0000000000000, float %14612
  %14616 = select i1 %14614, float 0.000000e+00, float %14615
  %14617 = fcmp uno float %14466, 0.000000e+00
  %14618 = select i1 %14617, float 0x7FF8000000000000, float %14616
  %14619 = fmul contract float %14465, 0x400921CAC0000000
  %14620 = tail call float @llvm.fabs.f32(float %14619)
  %14621 = fcmp olt float %14620, 1.310720e+05
  br i1 %14621, label %14728, label %14622

14622:                                            ; preds = %14449
  %14623 = bitcast float %14620 to i32
  %14624 = lshr i32 %14623, 23
  %14625 = and i32 %14623, 8388607
  %14626 = or i32 %14625, 8388608
  %14627 = zext i32 %14626 to i64
  %14628 = mul nuw nsw i64 %14627, 4266746795
  %14629 = trunc i64 %14628 to i32
  %14630 = lshr i64 %14628, 32
  %14631 = mul nuw nsw i64 %14627, 1011060801
  %14632 = add nuw nsw i64 %14630, %14631
  %14633 = trunc i64 %14632 to i32
  %14634 = lshr i64 %14632, 32
  %14635 = mul nuw nsw i64 %14627, 3680671129
  %14636 = add nuw nsw i64 %14634, %14635
  %14637 = trunc i64 %14636 to i32
  %14638 = lshr i64 %14636, 32
  %14639 = mul nuw nsw i64 %14627, 4113882560
  %14640 = add nuw nsw i64 %14638, %14639
  %14641 = trunc i64 %14640 to i32
  %14642 = lshr i64 %14640, 32
  %14643 = mul nuw nsw i64 %14627, 4230436817
  %14644 = add nuw nsw i64 %14642, %14643
  %14645 = trunc i64 %14644 to i32
  %14646 = lshr i64 %14644, 32
  %14647 = mul nuw nsw i64 %14627, 1313084713
  %14648 = add nuw nsw i64 %14646, %14647
  %14649 = trunc i64 %14648 to i32
  %14650 = lshr i64 %14648, 32
  %14651 = mul nuw nsw i64 %14627, 2734261102
  %14652 = add nuw nsw i64 %14650, %14651
  %14653 = trunc i64 %14652 to i32
  %14654 = lshr i64 %14652, 32
  %14655 = trunc i64 %14654 to i32
  %14656 = add nsw i32 %14624, -120
  %14657 = icmp ugt i32 %14656, 63
  %14658 = select i1 %14657, i32 %14649, i32 %14655
  %14659 = select i1 %14657, i32 %14645, i32 %14653
  %14660 = select i1 %14657, i32 %14641, i32 %14649
  %14661 = select i1 %14657, i32 %14637, i32 %14645
  %14662 = select i1 %14657, i32 %14633, i32 %14641
  %14663 = select i1 %14657, i32 %14629, i32 %14637
  %14664 = select i1 %14657, i32 -64, i32 0
  %14665 = add nsw i32 %14664, %14656
  %14666 = icmp ugt i32 %14665, 31
  %14667 = select i1 %14666, i32 %14659, i32 %14658
  %14668 = select i1 %14666, i32 %14660, i32 %14659
  %14669 = select i1 %14666, i32 %14661, i32 %14660
  %14670 = select i1 %14666, i32 %14662, i32 %14661
  %14671 = select i1 %14666, i32 %14663, i32 %14662
  %14672 = select i1 %14666, i32 -32, i32 0
  %14673 = add nsw i32 %14672, %14665
  %14674 = icmp ugt i32 %14673, 31
  %14675 = select i1 %14674, i32 %14668, i32 %14667
  %14676 = select i1 %14674, i32 %14669, i32 %14668
  %14677 = select i1 %14674, i32 %14670, i32 %14669
  %14678 = select i1 %14674, i32 %14671, i32 %14670
  %14679 = select i1 %14674, i32 -32, i32 0
  %14680 = add nsw i32 %14679, %14673
  %14681 = icmp eq i32 %14680, 0
  %14682 = sub nsw i32 32, %14680
  %14683 = tail call i32 @llvm.fshr.i32(i32 %14675, i32 %14676, i32 %14682)
  %14684 = tail call i32 @llvm.fshr.i32(i32 %14676, i32 %14677, i32 %14682)
  %14685 = tail call i32 @llvm.fshr.i32(i32 %14677, i32 %14678, i32 %14682)
  %14686 = select i1 %14681, i32 %14675, i32 %14683
  %14687 = select i1 %14681, i32 %14676, i32 %14684
  %14688 = select i1 %14681, i32 %14677, i32 %14685
  %14689 = lshr i32 %14686, 29
  %14690 = tail call i32 @llvm.fshl.i32(i32 %14686, i32 %14687, i32 2)
  %14691 = tail call i32 @llvm.fshl.i32(i32 %14687, i32 %14688, i32 2)
  %14692 = tail call i32 @llvm.fshl.i32(i32 %14688, i32 %14678, i32 2)
  %14693 = and i32 %14689, 1
  %14694 = sub nsw i32 0, %14693
  %14695 = shl i32 %14689, 31
  %14696 = xor i32 %14690, %14694
  %14697 = xor i32 %14691, %14694
  %14698 = xor i32 %14692, %14694
  %14699 = tail call i32 @llvm.ctlz.i32(i32 %14696, i1 false), !range !8
  %14700 = sub nsw i32 31, %14699
  %14701 = tail call i32 @llvm.fshr.i32(i32 %14696, i32 %14697, i32 %14700)
  %14702 = tail call i32 @llvm.fshr.i32(i32 %14697, i32 %14698, i32 %14700)
  %14703 = shl nuw nsw i32 %14699, 23
  %14704 = sub nuw nsw i32 1056964608, %14703
  %14705 = lshr i32 %14701, 9
  %14706 = or i32 %14705, %14704
  %14707 = or i32 %14706, %14695
  %14708 = bitcast i32 %14707 to float
  %14709 = tail call i32 @llvm.fshl.i32(i32 %14701, i32 %14702, i32 23)
  %14710 = tail call i32 @llvm.ctlz.i32(i32 %14709, i1 false), !range !8
  %14711 = fmul float %14708, 0x3FF921FB40000000
  %14712 = add nuw nsw i32 %14710, %14699
  %14713 = shl nuw nsw i32 %14712, 23
  %14714 = sub nuw nsw i32 855638016, %14713
  %14715 = sub nsw i32 31, %14710
  %14716 = tail call i32 @llvm.fshr.i32(i32 %14709, i32 %14702, i32 %14715)
  %14717 = lshr i32 %14716, 9
  %14718 = or i32 %14714, %14717
  %14719 = or i32 %14718, %14695
  %14720 = bitcast i32 %14719 to float
  %14721 = fneg float %14711
  %14722 = tail call float @llvm.fma.f32(float %14708, float 0x3FF921FB40000000, float %14721)
  %14723 = tail call float @llvm.fma.f32(float %14708, float 0x3E74442D00000000, float %14722)
  %14724 = tail call float @llvm.fma.f32(float %14720, float 0x3FF921FB40000000, float %14723)
  %14725 = fadd float %14711, %14724
  %14726 = lshr i32 %14686, 30
  %14727 = add nuw nsw i32 %14693, %14726
  br label %14736

14728:                                            ; preds = %14449
  %14729 = fmul float %14620, 0x3FE45F3060000000
  %14730 = tail call float @llvm.rint.f32(float %14729)
  %14731 = tail call float @llvm.fma.f32(float %14730, float 0xBFF921FB40000000, float %14620)
  %14732 = tail call float @llvm.fma.f32(float %14730, float 0xBE74442D00000000, float %14731)
  %14733 = tail call float @llvm.fma.f32(float %14730, float 0xBCF8469880000000, float %14732)
  %14734 = fptosi float %14730 to i32
  %14735 = bitcast float %14620 to i32
  br label %14736

14736:                                            ; preds = %14728, %14622
  %14737 = phi i32 [ %14735, %14728 ], [ %14623, %14622 ]
  %14738 = phi float [ %14733, %14728 ], [ %14725, %14622 ]
  %14739 = phi i32 [ %14734, %14728 ], [ %14727, %14622 ]
  %14740 = fmul float %14738, %14738
  %14741 = tail call float @llvm.fmuladd.f32(float %14740, float 0xBF29833040000000, float 0x3F81103880000000)
  %14742 = tail call float @llvm.fmuladd.f32(float %14740, float %14741, float 0xBFC55553A0000000)
  %14743 = fmul float %14740, %14742
  %14744 = tail call float @llvm.fmuladd.f32(float %14738, float %14743, float %14738)
  %14745 = tail call float @llvm.fmuladd.f32(float %14740, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %14746 = tail call float @llvm.fmuladd.f32(float %14740, float %14745, float 0x3FA5557EE0000000)
  %14747 = tail call float @llvm.fmuladd.f32(float %14740, float %14746, float 0xBFE0000080000000)
  %14748 = tail call float @llvm.fmuladd.f32(float %14740, float %14747, float 1.000000e+00)
  %14749 = and i32 %14739, 1
  %14750 = icmp eq i32 %14749, 0
  %14751 = select i1 %14750, float %14744, float %14748
  %14752 = bitcast float %14751 to i32
  %14753 = shl i32 %14739, 30
  %14754 = and i32 %14753, -2147483648
  %14755 = bitcast float %14619 to i32
  %14756 = xor i32 %14737, %14755
  %14757 = xor i32 %14756, %14754
  %14758 = xor i32 %14757, %14752
  %14759 = bitcast i32 %14758 to float
  %14760 = tail call i1 @llvm.amdgcn.class.f32(float %14620, i32 504)
  %14761 = select i1 %14760, float %14759, float 0x7FF8000000000000
  %14762 = tail call float @llvm.fabs.f32(float %14761)
  %14763 = tail call float @llvm.amdgcn.frexp.mant.f32(float %14762)
  %14764 = fcmp olt float %14763, 0x3FE5555560000000
  %14765 = zext i1 %14764 to i32
  %14766 = tail call float @llvm.amdgcn.ldexp.f32(float %14763, i32 %14765)
  %14767 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %14762)
  %14768 = sub nsw i32 %14767, %14765
  %14769 = fadd float %14766, -1.000000e+00
  %14770 = fadd float %14766, 1.000000e+00
  %14771 = fadd float %14770, -1.000000e+00
  %14772 = fsub float %14766, %14771
  %14773 = tail call float @llvm.amdgcn.rcp.f32(float %14770)
  %14774 = fmul float %14769, %14773
  %14775 = fmul float %14770, %14774
  %14776 = fneg float %14775
  %14777 = tail call float @llvm.fma.f32(float %14774, float %14770, float %14776)
  %14778 = tail call float @llvm.fma.f32(float %14774, float %14772, float %14777)
  %14779 = fadd float %14775, %14778
  %14780 = fsub float %14779, %14775
  %14781 = fsub float %14778, %14780
  %14782 = fsub float %14769, %14779
  %14783 = fsub float %14769, %14782
  %14784 = fsub float %14783, %14779
  %14785 = fsub float %14784, %14781
  %14786 = fadd float %14782, %14785
  %14787 = fmul float %14773, %14786
  %14788 = fadd float %14774, %14787
  %14789 = fsub float %14788, %14774
  %14790 = fsub float %14787, %14789
  %14791 = fmul float %14788, %14788
  %14792 = fneg float %14791
  %14793 = tail call float @llvm.fma.f32(float %14788, float %14788, float %14792)
  %14794 = fmul float %14790, 2.000000e+00
  %14795 = tail call float @llvm.fma.f32(float %14788, float %14794, float %14793)
  %14796 = fadd float %14791, %14795
  %14797 = fsub float %14796, %14791
  %14798 = fsub float %14795, %14797
  %14799 = tail call float @llvm.fmuladd.f32(float %14796, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %14800 = tail call float @llvm.fmuladd.f32(float %14796, float %14799, float 0x3FD999BDE0000000)
  %14801 = sitofp i32 %14768 to float
  %14802 = fmul float %14801, 0x3FE62E4300000000
  %14803 = fneg float %14802
  %14804 = tail call float @llvm.fma.f32(float %14801, float 0x3FE62E4300000000, float %14803)
  %14805 = tail call float @llvm.fma.f32(float %14801, float 0xBE205C6100000000, float %14804)
  %14806 = fadd float %14802, %14805
  %14807 = fsub float %14806, %14802
  %14808 = fsub float %14805, %14807
  %14809 = tail call float @llvm.amdgcn.ldexp.f32(float %14788, i32 1)
  %14810 = fmul float %14788, %14796
  %14811 = fneg float %14810
  %14812 = tail call float @llvm.fma.f32(float %14796, float %14788, float %14811)
  %14813 = tail call float @llvm.fma.f32(float %14796, float %14790, float %14812)
  %14814 = tail call float @llvm.fma.f32(float %14798, float %14788, float %14813)
  %14815 = fadd float %14810, %14814
  %14816 = fsub float %14815, %14810
  %14817 = fsub float %14814, %14816
  %14818 = fmul float %14796, %14800
  %14819 = fneg float %14818
  %14820 = tail call float @llvm.fma.f32(float %14796, float %14800, float %14819)
  %14821 = tail call float @llvm.fma.f32(float %14798, float %14800, float %14820)
  %14822 = fadd float %14818, %14821
  %14823 = fsub float %14822, %14818
  %14824 = fsub float %14821, %14823
  %14825 = fadd float %14822, 0x3FE5555540000000
  %14826 = fadd float %14825, 0xBFE5555540000000
  %14827 = fsub float %14822, %14826
  %14828 = fadd float %14824, 0x3E2E720200000000
  %14829 = fadd float %14828, %14827
  %14830 = fadd float %14825, %14829
  %14831 = fsub float %14830, %14825
  %14832 = fsub float %14829, %14831
  %14833 = fmul float %14815, %14830
  %14834 = fneg float %14833
  %14835 = tail call float @llvm.fma.f32(float %14815, float %14830, float %14834)
  %14836 = tail call float @llvm.fma.f32(float %14815, float %14832, float %14835)
  %14837 = tail call float @llvm.fma.f32(float %14817, float %14830, float %14836)
  %14838 = tail call float @llvm.amdgcn.ldexp.f32(float %14790, i32 1)
  %14839 = fadd float %14833, %14837
  %14840 = fsub float %14839, %14833
  %14841 = fsub float %14837, %14840
  %14842 = fadd float %14809, %14839
  %14843 = fsub float %14842, %14809
  %14844 = fsub float %14839, %14843
  %14845 = fadd float %14838, %14841
  %14846 = fadd float %14845, %14844
  %14847 = fadd float %14842, %14846
  %14848 = fsub float %14847, %14842
  %14849 = fsub float %14846, %14848
  %14850 = fadd float %14806, %14847
  %14851 = fsub float %14850, %14806
  %14852 = fsub float %14850, %14851
  %14853 = fsub float %14806, %14852
  %14854 = fsub float %14847, %14851
  %14855 = fadd float %14854, %14853
  %14856 = fadd float %14808, %14849
  %14857 = fsub float %14856, %14808
  %14858 = fsub float %14856, %14857
  %14859 = fsub float %14808, %14858
  %14860 = fsub float %14849, %14857
  %14861 = fadd float %14860, %14859
  %14862 = fadd float %14856, %14855
  %14863 = fadd float %14850, %14862
  %14864 = fsub float %14863, %14850
  %14865 = fsub float %14862, %14864
  %14866 = fadd float %14861, %14865
  %14867 = fadd float %14863, %14866
  %14868 = fsub float %14867, %14863
  %14869 = fsub float %14866, %14868
  %14870 = fmul float %14867, 2.000000e+00
  %14871 = fneg float %14870
  %14872 = tail call float @llvm.fma.f32(float %14867, float 2.000000e+00, float %14871)
  %14873 = fmul float %14867, 0.000000e+00
  %14874 = tail call float @llvm.fma.f32(float %14869, float 2.000000e+00, float %14873)
  %14875 = fadd float %14872, %14874
  %14876 = fadd float %14870, %14875
  %14877 = fsub float %14876, %14870
  %14878 = fsub float %14875, %14877
  %14879 = tail call float @llvm.fabs.f32(float %14870) #3
  %14880 = fcmp oeq float %14879, 0x7FF0000000000000
  %14881 = select i1 %14880, float %14870, float %14876
  %14882 = tail call float @llvm.fabs.f32(float %14881) #3
  %14883 = fcmp oeq float %14882, 0x7FF0000000000000
  %14884 = select i1 %14883, float 0.000000e+00, float %14878
  %14885 = fcmp oeq float %14881, 0x40562E4300000000
  %14886 = select i1 %14885, float 0x3EE0000000000000, float 0.000000e+00
  %14887 = fsub float %14881, %14886
  %14888 = fadd float %14886, %14884
  %14889 = fmul float %14887, 0x3FF7154760000000
  %14890 = tail call float @llvm.rint.f32(float %14889)
  %14891 = fcmp ogt float %14887, 0x40562E4300000000
  %14892 = fcmp olt float %14887, 0xC059D1DA00000000
  %14893 = fneg float %14889
  %14894 = tail call float @llvm.fma.f32(float %14887, float 0x3FF7154760000000, float %14893)
  %14895 = tail call float @llvm.fma.f32(float %14887, float 0x3E54AE0BE0000000, float %14894)
  %14896 = fsub float %14889, %14890
  %14897 = fadd float %14895, %14896
  %14898 = tail call float @llvm.exp2.f32(float %14897)
  %14899 = fptosi float %14890 to i32
  %14900 = tail call float @llvm.amdgcn.ldexp.f32(float %14898, i32 %14899)
  %14901 = select i1 %14892, float 0.000000e+00, float %14900
  %14902 = select i1 %14891, float 0x7FF0000000000000, float %14901
  %14903 = tail call float @llvm.fma.f32(float %14902, float %14888, float %14902)
  %14904 = tail call float @llvm.fabs.f32(float %14902) #3
  %14905 = fcmp oeq float %14904, 0x7FF0000000000000
  %14906 = select i1 %14905, float %14902, float %14903
  %14907 = tail call float @llvm.fabs.f32(float %14906)
  %14908 = fcmp oeq float %14762, 0x7FF0000000000000
  %14909 = fcmp oeq float %14761, 0.000000e+00
  %14910 = fcmp uno float %14761, 0.000000e+00
  %14911 = fmul contract float %14907, 1.000000e+01
  %14912 = fadd contract float %14911, 1.000000e+00
  %14913 = select i1 %14908, float 0x7FF0000000000000, float %14912
  %14914 = select i1 %14909, float 1.000000e+00, float %14913
  %14915 = select i1 %14910, float 0x7FF8000000000000, float %14914
  %14916 = fmul contract float %14618, %14915
  %14917 = fadd contract float %14452, %14916
  br i1 %14450, label %14449, label %14918, !llvm.loop !9

14918:                                            ; preds = %14736
  %14919 = fcmp contract olt float %13989, %14917
  br i1 %14919, label %14920, label %14922

14920:                                            ; preds = %14918
  store float %13059, float addrspace(1)* %0, align 4, !tbaa !4
  %14921 = getelementptr inbounds float, float addrspace(1)* %0, i64 1
  store float %13062, float addrspace(1)* %14921, align 4, !tbaa !4
  store float %13065, float addrspace(1)* %3, align 4, !tbaa !4
  br label %14922

14922:                                            ; preds = %14920, %14918
  %14923 = getelementptr inbounds float, float addrspace(1)* %1, i64 24
  %14924 = load float, float addrspace(1)* %14923, align 4, !tbaa !4
  %14925 = insertelement <3 x float> poison, float %14924, i64 0
  %14926 = getelementptr inbounds float, float addrspace(1)* %1, i64 25
  %14927 = load float, float addrspace(1)* %14926, align 4, !tbaa !4
  %14928 = insertelement <3 x float> %14925, float %14927, i64 1
  %14929 = getelementptr inbounds float, float addrspace(1)* %1, i64 26
  %14930 = load float, float addrspace(1)* %14929, align 4, !tbaa !4
  %14931 = insertelement <3 x float> %14928, float %14930, i64 2
  %14932 = fadd contract float %14924, -1.000000e+00
  %14933 = fmul contract float %14932, 2.500000e-01
  %14934 = fadd contract float %14933, 1.000000e+00
  %14935 = fadd contract float %14930, -1.000000e+00
  %14936 = fmul contract float %14935, 2.500000e-01
  %14937 = fadd contract float %14936, 1.000000e+00
  %14938 = fmul contract float %14934, 0x400921CAC0000000
  %14939 = tail call float @llvm.fabs.f32(float %14938)
  %14940 = fcmp olt float %14939, 1.310720e+05
  br i1 %14940, label %15047, label %14941

14941:                                            ; preds = %14922
  %14942 = bitcast float %14939 to i32
  %14943 = lshr i32 %14942, 23
  %14944 = and i32 %14942, 8388607
  %14945 = or i32 %14944, 8388608
  %14946 = zext i32 %14945 to i64
  %14947 = mul nuw nsw i64 %14946, 4266746795
  %14948 = trunc i64 %14947 to i32
  %14949 = lshr i64 %14947, 32
  %14950 = mul nuw nsw i64 %14946, 1011060801
  %14951 = add nuw nsw i64 %14949, %14950
  %14952 = trunc i64 %14951 to i32
  %14953 = lshr i64 %14951, 32
  %14954 = mul nuw nsw i64 %14946, 3680671129
  %14955 = add nuw nsw i64 %14953, %14954
  %14956 = trunc i64 %14955 to i32
  %14957 = lshr i64 %14955, 32
  %14958 = mul nuw nsw i64 %14946, 4113882560
  %14959 = add nuw nsw i64 %14957, %14958
  %14960 = trunc i64 %14959 to i32
  %14961 = lshr i64 %14959, 32
  %14962 = mul nuw nsw i64 %14946, 4230436817
  %14963 = add nuw nsw i64 %14961, %14962
  %14964 = trunc i64 %14963 to i32
  %14965 = lshr i64 %14963, 32
  %14966 = mul nuw nsw i64 %14946, 1313084713
  %14967 = add nuw nsw i64 %14965, %14966
  %14968 = trunc i64 %14967 to i32
  %14969 = lshr i64 %14967, 32
  %14970 = mul nuw nsw i64 %14946, 2734261102
  %14971 = add nuw nsw i64 %14969, %14970
  %14972 = trunc i64 %14971 to i32
  %14973 = lshr i64 %14971, 32
  %14974 = trunc i64 %14973 to i32
  %14975 = add nsw i32 %14943, -120
  %14976 = icmp ugt i32 %14975, 63
  %14977 = select i1 %14976, i32 %14968, i32 %14974
  %14978 = select i1 %14976, i32 %14964, i32 %14972
  %14979 = select i1 %14976, i32 %14960, i32 %14968
  %14980 = select i1 %14976, i32 %14956, i32 %14964
  %14981 = select i1 %14976, i32 %14952, i32 %14960
  %14982 = select i1 %14976, i32 %14948, i32 %14956
  %14983 = select i1 %14976, i32 -64, i32 0
  %14984 = add nsw i32 %14983, %14975
  %14985 = icmp ugt i32 %14984, 31
  %14986 = select i1 %14985, i32 %14978, i32 %14977
  %14987 = select i1 %14985, i32 %14979, i32 %14978
  %14988 = select i1 %14985, i32 %14980, i32 %14979
  %14989 = select i1 %14985, i32 %14981, i32 %14980
  %14990 = select i1 %14985, i32 %14982, i32 %14981
  %14991 = select i1 %14985, i32 -32, i32 0
  %14992 = add nsw i32 %14991, %14984
  %14993 = icmp ugt i32 %14992, 31
  %14994 = select i1 %14993, i32 %14987, i32 %14986
  %14995 = select i1 %14993, i32 %14988, i32 %14987
  %14996 = select i1 %14993, i32 %14989, i32 %14988
  %14997 = select i1 %14993, i32 %14990, i32 %14989
  %14998 = select i1 %14993, i32 -32, i32 0
  %14999 = add nsw i32 %14998, %14992
  %15000 = icmp eq i32 %14999, 0
  %15001 = sub nsw i32 32, %14999
  %15002 = tail call i32 @llvm.fshr.i32(i32 %14994, i32 %14995, i32 %15001)
  %15003 = tail call i32 @llvm.fshr.i32(i32 %14995, i32 %14996, i32 %15001)
  %15004 = tail call i32 @llvm.fshr.i32(i32 %14996, i32 %14997, i32 %15001)
  %15005 = select i1 %15000, i32 %14994, i32 %15002
  %15006 = select i1 %15000, i32 %14995, i32 %15003
  %15007 = select i1 %15000, i32 %14996, i32 %15004
  %15008 = lshr i32 %15005, 29
  %15009 = tail call i32 @llvm.fshl.i32(i32 %15005, i32 %15006, i32 2)
  %15010 = tail call i32 @llvm.fshl.i32(i32 %15006, i32 %15007, i32 2)
  %15011 = tail call i32 @llvm.fshl.i32(i32 %15007, i32 %14997, i32 2)
  %15012 = and i32 %15008, 1
  %15013 = sub nsw i32 0, %15012
  %15014 = shl i32 %15008, 31
  %15015 = xor i32 %15009, %15013
  %15016 = xor i32 %15010, %15013
  %15017 = xor i32 %15011, %15013
  %15018 = tail call i32 @llvm.ctlz.i32(i32 %15015, i1 false), !range !8
  %15019 = sub nsw i32 31, %15018
  %15020 = tail call i32 @llvm.fshr.i32(i32 %15015, i32 %15016, i32 %15019)
  %15021 = tail call i32 @llvm.fshr.i32(i32 %15016, i32 %15017, i32 %15019)
  %15022 = shl nuw nsw i32 %15018, 23
  %15023 = sub nuw nsw i32 1056964608, %15022
  %15024 = lshr i32 %15020, 9
  %15025 = or i32 %15024, %15023
  %15026 = or i32 %15025, %15014
  %15027 = bitcast i32 %15026 to float
  %15028 = tail call i32 @llvm.fshl.i32(i32 %15020, i32 %15021, i32 23)
  %15029 = tail call i32 @llvm.ctlz.i32(i32 %15028, i1 false), !range !8
  %15030 = fmul float %15027, 0x3FF921FB40000000
  %15031 = add nuw nsw i32 %15029, %15018
  %15032 = shl nuw nsw i32 %15031, 23
  %15033 = sub nuw nsw i32 855638016, %15032
  %15034 = sub nsw i32 31, %15029
  %15035 = tail call i32 @llvm.fshr.i32(i32 %15028, i32 %15021, i32 %15034)
  %15036 = lshr i32 %15035, 9
  %15037 = or i32 %15033, %15036
  %15038 = or i32 %15037, %15014
  %15039 = bitcast i32 %15038 to float
  %15040 = fneg float %15030
  %15041 = tail call float @llvm.fma.f32(float %15027, float 0x3FF921FB40000000, float %15040)
  %15042 = tail call float @llvm.fma.f32(float %15027, float 0x3E74442D00000000, float %15041)
  %15043 = tail call float @llvm.fma.f32(float %15039, float 0x3FF921FB40000000, float %15042)
  %15044 = fadd float %15030, %15043
  %15045 = lshr i32 %15005, 30
  %15046 = add nuw nsw i32 %15012, %15045
  br label %15055

15047:                                            ; preds = %14922
  %15048 = fmul float %14939, 0x3FE45F3060000000
  %15049 = tail call float @llvm.rint.f32(float %15048)
  %15050 = tail call float @llvm.fma.f32(float %15049, float 0xBFF921FB40000000, float %14939)
  %15051 = tail call float @llvm.fma.f32(float %15049, float 0xBE74442D00000000, float %15050)
  %15052 = tail call float @llvm.fma.f32(float %15049, float 0xBCF8469880000000, float %15051)
  %15053 = fptosi float %15049 to i32
  %15054 = bitcast float %14939 to i32
  br label %15055

15055:                                            ; preds = %15047, %14941
  %15056 = phi i32 [ %15054, %15047 ], [ %14942, %14941 ]
  %15057 = phi float [ %15052, %15047 ], [ %15044, %14941 ]
  %15058 = phi i32 [ %15053, %15047 ], [ %15046, %14941 ]
  %15059 = fmul float %15057, %15057
  %15060 = tail call float @llvm.fmuladd.f32(float %15059, float 0xBF29833040000000, float 0x3F81103880000000)
  %15061 = tail call float @llvm.fmuladd.f32(float %15059, float %15060, float 0xBFC55553A0000000)
  %15062 = fmul float %15059, %15061
  %15063 = tail call float @llvm.fmuladd.f32(float %15057, float %15062, float %15057)
  %15064 = tail call float @llvm.fmuladd.f32(float %15059, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %15065 = tail call float @llvm.fmuladd.f32(float %15059, float %15064, float 0x3FA5557EE0000000)
  %15066 = tail call float @llvm.fmuladd.f32(float %15059, float %15065, float 0xBFE0000080000000)
  %15067 = tail call float @llvm.fmuladd.f32(float %15059, float %15066, float 1.000000e+00)
  %15068 = and i32 %15058, 1
  %15069 = icmp eq i32 %15068, 0
  %15070 = select i1 %15069, float %15063, float %15067
  %15071 = bitcast float %15070 to i32
  %15072 = shl i32 %15058, 30
  %15073 = and i32 %15072, -2147483648
  %15074 = bitcast float %14938 to i32
  %15075 = xor i32 %15056, %15074
  %15076 = xor i32 %15075, %15073
  %15077 = xor i32 %15076, %15071
  %15078 = bitcast i32 %15077 to float
  %15079 = tail call i1 @llvm.amdgcn.class.f32(float %14939, i32 504)
  %15080 = select i1 %15079, float %15078, float 0x7FF8000000000000
  %15081 = tail call float @llvm.fabs.f32(float %15080)
  %15082 = tail call float @llvm.amdgcn.frexp.mant.f32(float %15081)
  %15083 = fcmp olt float %15082, 0x3FE5555560000000
  %15084 = zext i1 %15083 to i32
  %15085 = tail call float @llvm.amdgcn.ldexp.f32(float %15082, i32 %15084)
  %15086 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %15081)
  %15087 = sub nsw i32 %15086, %15084
  %15088 = fadd float %15085, -1.000000e+00
  %15089 = fadd float %15085, 1.000000e+00
  %15090 = fadd float %15089, -1.000000e+00
  %15091 = fsub float %15085, %15090
  %15092 = tail call float @llvm.amdgcn.rcp.f32(float %15089)
  %15093 = fmul float %15088, %15092
  %15094 = fmul float %15089, %15093
  %15095 = fneg float %15094
  %15096 = tail call float @llvm.fma.f32(float %15093, float %15089, float %15095)
  %15097 = tail call float @llvm.fma.f32(float %15093, float %15091, float %15096)
  %15098 = fadd float %15094, %15097
  %15099 = fsub float %15098, %15094
  %15100 = fsub float %15097, %15099
  %15101 = fsub float %15088, %15098
  %15102 = fsub float %15088, %15101
  %15103 = fsub float %15102, %15098
  %15104 = fsub float %15103, %15100
  %15105 = fadd float %15101, %15104
  %15106 = fmul float %15092, %15105
  %15107 = fadd float %15093, %15106
  %15108 = fsub float %15107, %15093
  %15109 = fsub float %15106, %15108
  %15110 = fmul float %15107, %15107
  %15111 = fneg float %15110
  %15112 = tail call float @llvm.fma.f32(float %15107, float %15107, float %15111)
  %15113 = fmul float %15109, 2.000000e+00
  %15114 = tail call float @llvm.fma.f32(float %15107, float %15113, float %15112)
  %15115 = fadd float %15110, %15114
  %15116 = fsub float %15115, %15110
  %15117 = fsub float %15114, %15116
  %15118 = tail call float @llvm.fmuladd.f32(float %15115, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %15119 = tail call float @llvm.fmuladd.f32(float %15115, float %15118, float 0x3FD999BDE0000000)
  %15120 = sitofp i32 %15087 to float
  %15121 = fmul float %15120, 0x3FE62E4300000000
  %15122 = fneg float %15121
  %15123 = tail call float @llvm.fma.f32(float %15120, float 0x3FE62E4300000000, float %15122)
  %15124 = tail call float @llvm.fma.f32(float %15120, float 0xBE205C6100000000, float %15123)
  %15125 = fadd float %15121, %15124
  %15126 = fsub float %15125, %15121
  %15127 = fsub float %15124, %15126
  %15128 = tail call float @llvm.amdgcn.ldexp.f32(float %15107, i32 1)
  %15129 = fmul float %15107, %15115
  %15130 = fneg float %15129
  %15131 = tail call float @llvm.fma.f32(float %15115, float %15107, float %15130)
  %15132 = tail call float @llvm.fma.f32(float %15115, float %15109, float %15131)
  %15133 = tail call float @llvm.fma.f32(float %15117, float %15107, float %15132)
  %15134 = fadd float %15129, %15133
  %15135 = fsub float %15134, %15129
  %15136 = fsub float %15133, %15135
  %15137 = fmul float %15115, %15119
  %15138 = fneg float %15137
  %15139 = tail call float @llvm.fma.f32(float %15115, float %15119, float %15138)
  %15140 = tail call float @llvm.fma.f32(float %15117, float %15119, float %15139)
  %15141 = fadd float %15137, %15140
  %15142 = fsub float %15141, %15137
  %15143 = fsub float %15140, %15142
  %15144 = fadd float %15141, 0x3FE5555540000000
  %15145 = fadd float %15144, 0xBFE5555540000000
  %15146 = fsub float %15141, %15145
  %15147 = fadd float %15143, 0x3E2E720200000000
  %15148 = fadd float %15147, %15146
  %15149 = fadd float %15144, %15148
  %15150 = fsub float %15149, %15144
  %15151 = fsub float %15148, %15150
  %15152 = fmul float %15134, %15149
  %15153 = fneg float %15152
  %15154 = tail call float @llvm.fma.f32(float %15134, float %15149, float %15153)
  %15155 = tail call float @llvm.fma.f32(float %15134, float %15151, float %15154)
  %15156 = tail call float @llvm.fma.f32(float %15136, float %15149, float %15155)
  %15157 = tail call float @llvm.amdgcn.ldexp.f32(float %15109, i32 1)
  %15158 = fadd float %15152, %15156
  %15159 = fsub float %15158, %15152
  %15160 = fsub float %15156, %15159
  %15161 = fadd float %15128, %15158
  %15162 = fsub float %15161, %15128
  %15163 = fsub float %15158, %15162
  %15164 = fadd float %15157, %15160
  %15165 = fadd float %15164, %15163
  %15166 = fadd float %15161, %15165
  %15167 = fsub float %15166, %15161
  %15168 = fsub float %15165, %15167
  %15169 = fadd float %15125, %15166
  %15170 = fsub float %15169, %15125
  %15171 = fsub float %15169, %15170
  %15172 = fsub float %15125, %15171
  %15173 = fsub float %15166, %15170
  %15174 = fadd float %15173, %15172
  %15175 = fadd float %15127, %15168
  %15176 = fsub float %15175, %15127
  %15177 = fsub float %15175, %15176
  %15178 = fsub float %15127, %15177
  %15179 = fsub float %15168, %15176
  %15180 = fadd float %15179, %15178
  %15181 = fadd float %15175, %15174
  %15182 = fadd float %15169, %15181
  %15183 = fsub float %15182, %15169
  %15184 = fsub float %15181, %15183
  %15185 = fadd float %15180, %15184
  %15186 = fadd float %15182, %15185
  %15187 = fsub float %15186, %15182
  %15188 = fsub float %15185, %15187
  %15189 = fmul float %15186, 2.000000e+00
  %15190 = fneg float %15189
  %15191 = tail call float @llvm.fma.f32(float %15186, float 2.000000e+00, float %15190)
  %15192 = fmul float %15186, 0.000000e+00
  %15193 = tail call float @llvm.fma.f32(float %15188, float 2.000000e+00, float %15192)
  %15194 = fadd float %15191, %15193
  %15195 = fadd float %15189, %15194
  %15196 = fsub float %15195, %15189
  %15197 = fsub float %15194, %15196
  %15198 = tail call float @llvm.fabs.f32(float %15189) #3
  %15199 = fcmp oeq float %15198, 0x7FF0000000000000
  %15200 = select i1 %15199, float %15189, float %15195
  %15201 = tail call float @llvm.fabs.f32(float %15200) #3
  %15202 = fcmp oeq float %15201, 0x7FF0000000000000
  %15203 = select i1 %15202, float 0.000000e+00, float %15197
  %15204 = fcmp oeq float %15200, 0x40562E4300000000
  %15205 = select i1 %15204, float 0x3EE0000000000000, float 0.000000e+00
  %15206 = fsub float %15200, %15205
  %15207 = fadd float %15205, %15203
  %15208 = fmul float %15206, 0x3FF7154760000000
  %15209 = tail call float @llvm.rint.f32(float %15208)
  %15210 = fcmp ogt float %15206, 0x40562E4300000000
  %15211 = fcmp olt float %15206, 0xC059D1DA00000000
  %15212 = fneg float %15208
  %15213 = tail call float @llvm.fma.f32(float %15206, float 0x3FF7154760000000, float %15212)
  %15214 = tail call float @llvm.fma.f32(float %15206, float 0x3E54AE0BE0000000, float %15213)
  %15215 = fsub float %15208, %15209
  %15216 = fadd float %15214, %15215
  %15217 = tail call float @llvm.exp2.f32(float %15216)
  %15218 = fptosi float %15209 to i32
  %15219 = tail call float @llvm.amdgcn.ldexp.f32(float %15217, i32 %15218)
  %15220 = select i1 %15211, float 0.000000e+00, float %15219
  %15221 = select i1 %15210, float 0x7FF0000000000000, float %15220
  %15222 = tail call float @llvm.fma.f32(float %15221, float %15207, float %15221)
  %15223 = tail call float @llvm.fabs.f32(float %15221) #3
  %15224 = fcmp oeq float %15223, 0x7FF0000000000000
  %15225 = select i1 %15224, float %15221, float %15222
  %15226 = tail call float @llvm.fabs.f32(float %15225)
  %15227 = fcmp oeq float %15081, 0x7FF0000000000000
  %15228 = fcmp oeq float %15080, 0.000000e+00
  %15229 = select i1 %15227, float 0x7FF0000000000000, float %15226
  %15230 = select i1 %15228, float 0.000000e+00, float %15229
  %15231 = fcmp uno float %15080, 0.000000e+00
  %15232 = select i1 %15231, float 0x7FF8000000000000, float %15230
  %15233 = fadd contract float %14937, -1.000000e+00
  %15234 = tail call float @llvm.fabs.f32(float %15233)
  %15235 = tail call float @llvm.amdgcn.frexp.mant.f32(float %15234)
  %15236 = fcmp olt float %15235, 0x3FE5555560000000
  %15237 = zext i1 %15236 to i32
  %15238 = tail call float @llvm.amdgcn.ldexp.f32(float %15235, i32 %15237)
  %15239 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %15234)
  %15240 = sub nsw i32 %15239, %15237
  %15241 = fadd float %15238, -1.000000e+00
  %15242 = fadd float %15238, 1.000000e+00
  %15243 = fadd float %15242, -1.000000e+00
  %15244 = fsub float %15238, %15243
  %15245 = tail call float @llvm.amdgcn.rcp.f32(float %15242)
  %15246 = fmul float %15241, %15245
  %15247 = fmul float %15242, %15246
  %15248 = fneg float %15247
  %15249 = tail call float @llvm.fma.f32(float %15246, float %15242, float %15248)
  %15250 = tail call float @llvm.fma.f32(float %15246, float %15244, float %15249)
  %15251 = fadd float %15247, %15250
  %15252 = fsub float %15251, %15247
  %15253 = fsub float %15250, %15252
  %15254 = fsub float %15241, %15251
  %15255 = fsub float %15241, %15254
  %15256 = fsub float %15255, %15251
  %15257 = fsub float %15256, %15253
  %15258 = fadd float %15254, %15257
  %15259 = fmul float %15245, %15258
  %15260 = fadd float %15246, %15259
  %15261 = fsub float %15260, %15246
  %15262 = fsub float %15259, %15261
  %15263 = fmul float %15260, %15260
  %15264 = fneg float %15263
  %15265 = tail call float @llvm.fma.f32(float %15260, float %15260, float %15264)
  %15266 = fmul float %15262, 2.000000e+00
  %15267 = tail call float @llvm.fma.f32(float %15260, float %15266, float %15265)
  %15268 = fadd float %15263, %15267
  %15269 = fsub float %15268, %15263
  %15270 = fsub float %15267, %15269
  %15271 = tail call float @llvm.fmuladd.f32(float %15268, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %15272 = tail call float @llvm.fmuladd.f32(float %15268, float %15271, float 0x3FD999BDE0000000)
  %15273 = sitofp i32 %15240 to float
  %15274 = fmul float %15273, 0x3FE62E4300000000
  %15275 = fneg float %15274
  %15276 = tail call float @llvm.fma.f32(float %15273, float 0x3FE62E4300000000, float %15275)
  %15277 = tail call float @llvm.fma.f32(float %15273, float 0xBE205C6100000000, float %15276)
  %15278 = fadd float %15274, %15277
  %15279 = fsub float %15278, %15274
  %15280 = fsub float %15277, %15279
  %15281 = tail call float @llvm.amdgcn.ldexp.f32(float %15260, i32 1)
  %15282 = fmul float %15260, %15268
  %15283 = fneg float %15282
  %15284 = tail call float @llvm.fma.f32(float %15268, float %15260, float %15283)
  %15285 = tail call float @llvm.fma.f32(float %15268, float %15262, float %15284)
  %15286 = tail call float @llvm.fma.f32(float %15270, float %15260, float %15285)
  %15287 = fadd float %15282, %15286
  %15288 = fsub float %15287, %15282
  %15289 = fsub float %15286, %15288
  %15290 = fmul float %15268, %15272
  %15291 = fneg float %15290
  %15292 = tail call float @llvm.fma.f32(float %15268, float %15272, float %15291)
  %15293 = tail call float @llvm.fma.f32(float %15270, float %15272, float %15292)
  %15294 = fadd float %15290, %15293
  %15295 = fsub float %15294, %15290
  %15296 = fsub float %15293, %15295
  %15297 = fadd float %15294, 0x3FE5555540000000
  %15298 = fadd float %15297, 0xBFE5555540000000
  %15299 = fsub float %15294, %15298
  %15300 = fadd float %15296, 0x3E2E720200000000
  %15301 = fadd float %15300, %15299
  %15302 = fadd float %15297, %15301
  %15303 = fsub float %15302, %15297
  %15304 = fsub float %15301, %15303
  %15305 = fmul float %15287, %15302
  %15306 = fneg float %15305
  %15307 = tail call float @llvm.fma.f32(float %15287, float %15302, float %15306)
  %15308 = tail call float @llvm.fma.f32(float %15287, float %15304, float %15307)
  %15309 = tail call float @llvm.fma.f32(float %15289, float %15302, float %15308)
  %15310 = tail call float @llvm.amdgcn.ldexp.f32(float %15262, i32 1)
  %15311 = fadd float %15305, %15309
  %15312 = fsub float %15311, %15305
  %15313 = fsub float %15309, %15312
  %15314 = fadd float %15281, %15311
  %15315 = fsub float %15314, %15281
  %15316 = fsub float %15311, %15315
  %15317 = fadd float %15310, %15313
  %15318 = fadd float %15317, %15316
  %15319 = fadd float %15314, %15318
  %15320 = fsub float %15319, %15314
  %15321 = fsub float %15318, %15320
  %15322 = fadd float %15278, %15319
  %15323 = fsub float %15322, %15278
  %15324 = fsub float %15322, %15323
  %15325 = fsub float %15278, %15324
  %15326 = fsub float %15319, %15323
  %15327 = fadd float %15326, %15325
  %15328 = fadd float %15280, %15321
  %15329 = fsub float %15328, %15280
  %15330 = fsub float %15328, %15329
  %15331 = fsub float %15280, %15330
  %15332 = fsub float %15321, %15329
  %15333 = fadd float %15332, %15331
  %15334 = fadd float %15328, %15327
  %15335 = fadd float %15322, %15334
  %15336 = fsub float %15335, %15322
  %15337 = fsub float %15334, %15336
  %15338 = fadd float %15333, %15337
  %15339 = fadd float %15335, %15338
  %15340 = fsub float %15339, %15335
  %15341 = fsub float %15338, %15340
  %15342 = fmul float %15339, 2.000000e+00
  %15343 = fneg float %15342
  %15344 = tail call float @llvm.fma.f32(float %15339, float 2.000000e+00, float %15343)
  %15345 = fmul float %15339, 0.000000e+00
  %15346 = tail call float @llvm.fma.f32(float %15341, float 2.000000e+00, float %15345)
  %15347 = fadd float %15344, %15346
  %15348 = fadd float %15342, %15347
  %15349 = fsub float %15348, %15342
  %15350 = fsub float %15347, %15349
  %15351 = tail call float @llvm.fabs.f32(float %15342) #3
  %15352 = fcmp oeq float %15351, 0x7FF0000000000000
  %15353 = select i1 %15352, float %15342, float %15348
  %15354 = tail call float @llvm.fabs.f32(float %15353) #3
  %15355 = fcmp oeq float %15354, 0x7FF0000000000000
  %15356 = select i1 %15355, float 0.000000e+00, float %15350
  %15357 = fcmp oeq float %15353, 0x40562E4300000000
  %15358 = select i1 %15357, float 0x3EE0000000000000, float 0.000000e+00
  %15359 = fsub float %15353, %15358
  %15360 = fadd float %15358, %15356
  %15361 = fmul float %15359, 0x3FF7154760000000
  %15362 = tail call float @llvm.rint.f32(float %15361)
  %15363 = fcmp ogt float %15359, 0x40562E4300000000
  %15364 = fcmp olt float %15359, 0xC059D1DA00000000
  %15365 = fneg float %15361
  %15366 = tail call float @llvm.fma.f32(float %15359, float 0x3FF7154760000000, float %15365)
  %15367 = tail call float @llvm.fma.f32(float %15359, float 0x3E54AE0BE0000000, float %15366)
  %15368 = fsub float %15361, %15362
  %15369 = fadd float %15367, %15368
  %15370 = tail call float @llvm.exp2.f32(float %15369)
  %15371 = fptosi float %15362 to i32
  %15372 = tail call float @llvm.amdgcn.ldexp.f32(float %15370, i32 %15371)
  %15373 = select i1 %15364, float 0.000000e+00, float %15372
  %15374 = select i1 %15363, float 0x7FF0000000000000, float %15373
  %15375 = tail call float @llvm.fma.f32(float %15374, float %15360, float %15374)
  %15376 = tail call float @llvm.fabs.f32(float %15374) #3
  %15377 = fcmp oeq float %15376, 0x7FF0000000000000
  %15378 = select i1 %15377, float %15374, float %15375
  %15379 = tail call float @llvm.fabs.f32(float %15378)
  %15380 = fcmp oeq float %15234, 0x7FF0000000000000
  %15381 = fcmp oeq float %15233, 0.000000e+00
  %15382 = select i1 %15380, float 0x7FF0000000000000, float %15379
  %15383 = select i1 %15381, float 0.000000e+00, float %15382
  %15384 = fcmp uno float %15233, 0.000000e+00
  %15385 = select i1 %15384, float 0x7FF8000000000000, float %15383
  %15386 = fadd contract float %15385, %15232
  %15387 = fadd contract float %15386, 0.000000e+00
  br label %15388

15388:                                            ; preds = %15673, %15055
  %15389 = phi i1 [ true, %15055 ], [ false, %15673 ]
  %15390 = phi i32 [ 0, %15055 ], [ 1, %15673 ]
  %15391 = phi float [ %15387, %15055 ], [ %15854, %15673 ]
  %15392 = zext i32 %15390 to i64
  %15393 = extractelement <3 x float> %14931, i64 %15392
  %15394 = fadd contract float %15393, -1.000000e+00
  %15395 = fmul contract float %15394, 2.500000e-01
  %15396 = fadd contract float %15395, 1.000000e+00
  %15397 = add nuw nsw i32 %15390, 1
  %15398 = zext i32 %15397 to i64
  %15399 = extractelement <3 x float> %14931, i64 %15398
  %15400 = fadd contract float %15399, -1.000000e+00
  %15401 = fmul contract float %15400, 2.500000e-01
  %15402 = fadd contract float %15401, 1.000000e+00
  %15403 = fadd contract float %15396, -1.000000e+00
  %15404 = tail call float @llvm.fabs.f32(float %15403)
  %15405 = tail call float @llvm.amdgcn.frexp.mant.f32(float %15404)
  %15406 = fcmp olt float %15405, 0x3FE5555560000000
  %15407 = zext i1 %15406 to i32
  %15408 = tail call float @llvm.amdgcn.ldexp.f32(float %15405, i32 %15407)
  %15409 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %15404)
  %15410 = sub nsw i32 %15409, %15407
  %15411 = fadd float %15408, -1.000000e+00
  %15412 = fadd float %15408, 1.000000e+00
  %15413 = fadd float %15412, -1.000000e+00
  %15414 = fsub float %15408, %15413
  %15415 = tail call float @llvm.amdgcn.rcp.f32(float %15412)
  %15416 = fmul float %15411, %15415
  %15417 = fmul float %15412, %15416
  %15418 = fneg float %15417
  %15419 = tail call float @llvm.fma.f32(float %15416, float %15412, float %15418)
  %15420 = tail call float @llvm.fma.f32(float %15416, float %15414, float %15419)
  %15421 = fadd float %15417, %15420
  %15422 = fsub float %15421, %15417
  %15423 = fsub float %15420, %15422
  %15424 = fsub float %15411, %15421
  %15425 = fsub float %15411, %15424
  %15426 = fsub float %15425, %15421
  %15427 = fsub float %15426, %15423
  %15428 = fadd float %15424, %15427
  %15429 = fmul float %15415, %15428
  %15430 = fadd float %15416, %15429
  %15431 = fsub float %15430, %15416
  %15432 = fsub float %15429, %15431
  %15433 = fmul float %15430, %15430
  %15434 = fneg float %15433
  %15435 = tail call float @llvm.fma.f32(float %15430, float %15430, float %15434)
  %15436 = fmul float %15432, 2.000000e+00
  %15437 = tail call float @llvm.fma.f32(float %15430, float %15436, float %15435)
  %15438 = fadd float %15433, %15437
  %15439 = fsub float %15438, %15433
  %15440 = fsub float %15437, %15439
  %15441 = tail call float @llvm.fmuladd.f32(float %15438, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %15442 = tail call float @llvm.fmuladd.f32(float %15438, float %15441, float 0x3FD999BDE0000000)
  %15443 = sitofp i32 %15410 to float
  %15444 = fmul float %15443, 0x3FE62E4300000000
  %15445 = fneg float %15444
  %15446 = tail call float @llvm.fma.f32(float %15443, float 0x3FE62E4300000000, float %15445)
  %15447 = tail call float @llvm.fma.f32(float %15443, float 0xBE205C6100000000, float %15446)
  %15448 = fadd float %15444, %15447
  %15449 = fsub float %15448, %15444
  %15450 = fsub float %15447, %15449
  %15451 = tail call float @llvm.amdgcn.ldexp.f32(float %15430, i32 1)
  %15452 = fmul float %15430, %15438
  %15453 = fneg float %15452
  %15454 = tail call float @llvm.fma.f32(float %15438, float %15430, float %15453)
  %15455 = tail call float @llvm.fma.f32(float %15438, float %15432, float %15454)
  %15456 = tail call float @llvm.fma.f32(float %15440, float %15430, float %15455)
  %15457 = fadd float %15452, %15456
  %15458 = fsub float %15457, %15452
  %15459 = fsub float %15456, %15458
  %15460 = fmul float %15438, %15442
  %15461 = fneg float %15460
  %15462 = tail call float @llvm.fma.f32(float %15438, float %15442, float %15461)
  %15463 = tail call float @llvm.fma.f32(float %15440, float %15442, float %15462)
  %15464 = fadd float %15460, %15463
  %15465 = fsub float %15464, %15460
  %15466 = fsub float %15463, %15465
  %15467 = fadd float %15464, 0x3FE5555540000000
  %15468 = fadd float %15467, 0xBFE5555540000000
  %15469 = fsub float %15464, %15468
  %15470 = fadd float %15466, 0x3E2E720200000000
  %15471 = fadd float %15470, %15469
  %15472 = fadd float %15467, %15471
  %15473 = fsub float %15472, %15467
  %15474 = fsub float %15471, %15473
  %15475 = fmul float %15457, %15472
  %15476 = fneg float %15475
  %15477 = tail call float @llvm.fma.f32(float %15457, float %15472, float %15476)
  %15478 = tail call float @llvm.fma.f32(float %15457, float %15474, float %15477)
  %15479 = tail call float @llvm.fma.f32(float %15459, float %15472, float %15478)
  %15480 = tail call float @llvm.amdgcn.ldexp.f32(float %15432, i32 1)
  %15481 = fadd float %15475, %15479
  %15482 = fsub float %15481, %15475
  %15483 = fsub float %15479, %15482
  %15484 = fadd float %15451, %15481
  %15485 = fsub float %15484, %15451
  %15486 = fsub float %15481, %15485
  %15487 = fadd float %15480, %15483
  %15488 = fadd float %15487, %15486
  %15489 = fadd float %15484, %15488
  %15490 = fsub float %15489, %15484
  %15491 = fsub float %15488, %15490
  %15492 = fadd float %15448, %15489
  %15493 = fsub float %15492, %15448
  %15494 = fsub float %15492, %15493
  %15495 = fsub float %15448, %15494
  %15496 = fsub float %15489, %15493
  %15497 = fadd float %15496, %15495
  %15498 = fadd float %15450, %15491
  %15499 = fsub float %15498, %15450
  %15500 = fsub float %15498, %15499
  %15501 = fsub float %15450, %15500
  %15502 = fsub float %15491, %15499
  %15503 = fadd float %15502, %15501
  %15504 = fadd float %15498, %15497
  %15505 = fadd float %15492, %15504
  %15506 = fsub float %15505, %15492
  %15507 = fsub float %15504, %15506
  %15508 = fadd float %15503, %15507
  %15509 = fadd float %15505, %15508
  %15510 = fsub float %15509, %15505
  %15511 = fsub float %15508, %15510
  %15512 = fmul float %15509, 2.000000e+00
  %15513 = fneg float %15512
  %15514 = tail call float @llvm.fma.f32(float %15509, float 2.000000e+00, float %15513)
  %15515 = fmul float %15509, 0.000000e+00
  %15516 = tail call float @llvm.fma.f32(float %15511, float 2.000000e+00, float %15515)
  %15517 = fadd float %15514, %15516
  %15518 = fadd float %15512, %15517
  %15519 = fsub float %15518, %15512
  %15520 = fsub float %15517, %15519
  %15521 = tail call float @llvm.fabs.f32(float %15512) #3
  %15522 = fcmp oeq float %15521, 0x7FF0000000000000
  %15523 = select i1 %15522, float %15512, float %15518
  %15524 = tail call float @llvm.fabs.f32(float %15523) #3
  %15525 = fcmp oeq float %15524, 0x7FF0000000000000
  %15526 = select i1 %15525, float 0.000000e+00, float %15520
  %15527 = fcmp oeq float %15523, 0x40562E4300000000
  %15528 = select i1 %15527, float 0x3EE0000000000000, float 0.000000e+00
  %15529 = fsub float %15523, %15528
  %15530 = fadd float %15528, %15526
  %15531 = fmul float %15529, 0x3FF7154760000000
  %15532 = tail call float @llvm.rint.f32(float %15531)
  %15533 = fcmp ogt float %15529, 0x40562E4300000000
  %15534 = fcmp olt float %15529, 0xC059D1DA00000000
  %15535 = fneg float %15531
  %15536 = tail call float @llvm.fma.f32(float %15529, float 0x3FF7154760000000, float %15535)
  %15537 = tail call float @llvm.fma.f32(float %15529, float 0x3E54AE0BE0000000, float %15536)
  %15538 = fsub float %15531, %15532
  %15539 = fadd float %15537, %15538
  %15540 = tail call float @llvm.exp2.f32(float %15539)
  %15541 = fptosi float %15532 to i32
  %15542 = tail call float @llvm.amdgcn.ldexp.f32(float %15540, i32 %15541)
  %15543 = select i1 %15534, float 0.000000e+00, float %15542
  %15544 = select i1 %15533, float 0x7FF0000000000000, float %15543
  %15545 = tail call float @llvm.fma.f32(float %15544, float %15530, float %15544)
  %15546 = tail call float @llvm.fabs.f32(float %15544) #3
  %15547 = fcmp oeq float %15546, 0x7FF0000000000000
  %15548 = select i1 %15547, float %15544, float %15545
  %15549 = tail call float @llvm.fabs.f32(float %15548)
  %15550 = fcmp oeq float %15404, 0x7FF0000000000000
  %15551 = fcmp oeq float %15403, 0.000000e+00
  %15552 = select i1 %15550, float 0x7FF0000000000000, float %15549
  %15553 = select i1 %15551, float 0.000000e+00, float %15552
  %15554 = fcmp uno float %15403, 0.000000e+00
  %15555 = select i1 %15554, float 0x7FF8000000000000, float %15553
  %15556 = fmul contract float %15402, 0x400921CAC0000000
  %15557 = tail call float @llvm.fabs.f32(float %15556)
  %15558 = fcmp olt float %15557, 1.310720e+05
  br i1 %15558, label %15665, label %15559

15559:                                            ; preds = %15388
  %15560 = bitcast float %15557 to i32
  %15561 = lshr i32 %15560, 23
  %15562 = and i32 %15560, 8388607
  %15563 = or i32 %15562, 8388608
  %15564 = zext i32 %15563 to i64
  %15565 = mul nuw nsw i64 %15564, 4266746795
  %15566 = trunc i64 %15565 to i32
  %15567 = lshr i64 %15565, 32
  %15568 = mul nuw nsw i64 %15564, 1011060801
  %15569 = add nuw nsw i64 %15567, %15568
  %15570 = trunc i64 %15569 to i32
  %15571 = lshr i64 %15569, 32
  %15572 = mul nuw nsw i64 %15564, 3680671129
  %15573 = add nuw nsw i64 %15571, %15572
  %15574 = trunc i64 %15573 to i32
  %15575 = lshr i64 %15573, 32
  %15576 = mul nuw nsw i64 %15564, 4113882560
  %15577 = add nuw nsw i64 %15575, %15576
  %15578 = trunc i64 %15577 to i32
  %15579 = lshr i64 %15577, 32
  %15580 = mul nuw nsw i64 %15564, 4230436817
  %15581 = add nuw nsw i64 %15579, %15580
  %15582 = trunc i64 %15581 to i32
  %15583 = lshr i64 %15581, 32
  %15584 = mul nuw nsw i64 %15564, 1313084713
  %15585 = add nuw nsw i64 %15583, %15584
  %15586 = trunc i64 %15585 to i32
  %15587 = lshr i64 %15585, 32
  %15588 = mul nuw nsw i64 %15564, 2734261102
  %15589 = add nuw nsw i64 %15587, %15588
  %15590 = trunc i64 %15589 to i32
  %15591 = lshr i64 %15589, 32
  %15592 = trunc i64 %15591 to i32
  %15593 = add nsw i32 %15561, -120
  %15594 = icmp ugt i32 %15593, 63
  %15595 = select i1 %15594, i32 %15586, i32 %15592
  %15596 = select i1 %15594, i32 %15582, i32 %15590
  %15597 = select i1 %15594, i32 %15578, i32 %15586
  %15598 = select i1 %15594, i32 %15574, i32 %15582
  %15599 = select i1 %15594, i32 %15570, i32 %15578
  %15600 = select i1 %15594, i32 %15566, i32 %15574
  %15601 = select i1 %15594, i32 -64, i32 0
  %15602 = add nsw i32 %15601, %15593
  %15603 = icmp ugt i32 %15602, 31
  %15604 = select i1 %15603, i32 %15596, i32 %15595
  %15605 = select i1 %15603, i32 %15597, i32 %15596
  %15606 = select i1 %15603, i32 %15598, i32 %15597
  %15607 = select i1 %15603, i32 %15599, i32 %15598
  %15608 = select i1 %15603, i32 %15600, i32 %15599
  %15609 = select i1 %15603, i32 -32, i32 0
  %15610 = add nsw i32 %15609, %15602
  %15611 = icmp ugt i32 %15610, 31
  %15612 = select i1 %15611, i32 %15605, i32 %15604
  %15613 = select i1 %15611, i32 %15606, i32 %15605
  %15614 = select i1 %15611, i32 %15607, i32 %15606
  %15615 = select i1 %15611, i32 %15608, i32 %15607
  %15616 = select i1 %15611, i32 -32, i32 0
  %15617 = add nsw i32 %15616, %15610
  %15618 = icmp eq i32 %15617, 0
  %15619 = sub nsw i32 32, %15617
  %15620 = tail call i32 @llvm.fshr.i32(i32 %15612, i32 %15613, i32 %15619)
  %15621 = tail call i32 @llvm.fshr.i32(i32 %15613, i32 %15614, i32 %15619)
  %15622 = tail call i32 @llvm.fshr.i32(i32 %15614, i32 %15615, i32 %15619)
  %15623 = select i1 %15618, i32 %15612, i32 %15620
  %15624 = select i1 %15618, i32 %15613, i32 %15621
  %15625 = select i1 %15618, i32 %15614, i32 %15622
  %15626 = lshr i32 %15623, 29
  %15627 = tail call i32 @llvm.fshl.i32(i32 %15623, i32 %15624, i32 2)
  %15628 = tail call i32 @llvm.fshl.i32(i32 %15624, i32 %15625, i32 2)
  %15629 = tail call i32 @llvm.fshl.i32(i32 %15625, i32 %15615, i32 2)
  %15630 = and i32 %15626, 1
  %15631 = sub nsw i32 0, %15630
  %15632 = shl i32 %15626, 31
  %15633 = xor i32 %15627, %15631
  %15634 = xor i32 %15628, %15631
  %15635 = xor i32 %15629, %15631
  %15636 = tail call i32 @llvm.ctlz.i32(i32 %15633, i1 false), !range !8
  %15637 = sub nsw i32 31, %15636
  %15638 = tail call i32 @llvm.fshr.i32(i32 %15633, i32 %15634, i32 %15637)
  %15639 = tail call i32 @llvm.fshr.i32(i32 %15634, i32 %15635, i32 %15637)
  %15640 = shl nuw nsw i32 %15636, 23
  %15641 = sub nuw nsw i32 1056964608, %15640
  %15642 = lshr i32 %15638, 9
  %15643 = or i32 %15642, %15641
  %15644 = or i32 %15643, %15632
  %15645 = bitcast i32 %15644 to float
  %15646 = tail call i32 @llvm.fshl.i32(i32 %15638, i32 %15639, i32 23)
  %15647 = tail call i32 @llvm.ctlz.i32(i32 %15646, i1 false), !range !8
  %15648 = fmul float %15645, 0x3FF921FB40000000
  %15649 = add nuw nsw i32 %15647, %15636
  %15650 = shl nuw nsw i32 %15649, 23
  %15651 = sub nuw nsw i32 855638016, %15650
  %15652 = sub nsw i32 31, %15647
  %15653 = tail call i32 @llvm.fshr.i32(i32 %15646, i32 %15639, i32 %15652)
  %15654 = lshr i32 %15653, 9
  %15655 = or i32 %15651, %15654
  %15656 = or i32 %15655, %15632
  %15657 = bitcast i32 %15656 to float
  %15658 = fneg float %15648
  %15659 = tail call float @llvm.fma.f32(float %15645, float 0x3FF921FB40000000, float %15658)
  %15660 = tail call float @llvm.fma.f32(float %15645, float 0x3E74442D00000000, float %15659)
  %15661 = tail call float @llvm.fma.f32(float %15657, float 0x3FF921FB40000000, float %15660)
  %15662 = fadd float %15648, %15661
  %15663 = lshr i32 %15623, 30
  %15664 = add nuw nsw i32 %15630, %15663
  br label %15673

15665:                                            ; preds = %15388
  %15666 = fmul float %15557, 0x3FE45F3060000000
  %15667 = tail call float @llvm.rint.f32(float %15666)
  %15668 = tail call float @llvm.fma.f32(float %15667, float 0xBFF921FB40000000, float %15557)
  %15669 = tail call float @llvm.fma.f32(float %15667, float 0xBE74442D00000000, float %15668)
  %15670 = tail call float @llvm.fma.f32(float %15667, float 0xBCF8469880000000, float %15669)
  %15671 = fptosi float %15667 to i32
  %15672 = bitcast float %15557 to i32
  br label %15673

15673:                                            ; preds = %15665, %15559
  %15674 = phi i32 [ %15672, %15665 ], [ %15560, %15559 ]
  %15675 = phi float [ %15670, %15665 ], [ %15662, %15559 ]
  %15676 = phi i32 [ %15671, %15665 ], [ %15664, %15559 ]
  %15677 = fmul float %15675, %15675
  %15678 = tail call float @llvm.fmuladd.f32(float %15677, float 0xBF29833040000000, float 0x3F81103880000000)
  %15679 = tail call float @llvm.fmuladd.f32(float %15677, float %15678, float 0xBFC55553A0000000)
  %15680 = fmul float %15677, %15679
  %15681 = tail call float @llvm.fmuladd.f32(float %15675, float %15680, float %15675)
  %15682 = tail call float @llvm.fmuladd.f32(float %15677, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %15683 = tail call float @llvm.fmuladd.f32(float %15677, float %15682, float 0x3FA5557EE0000000)
  %15684 = tail call float @llvm.fmuladd.f32(float %15677, float %15683, float 0xBFE0000080000000)
  %15685 = tail call float @llvm.fmuladd.f32(float %15677, float %15684, float 1.000000e+00)
  %15686 = and i32 %15676, 1
  %15687 = icmp eq i32 %15686, 0
  %15688 = select i1 %15687, float %15681, float %15685
  %15689 = bitcast float %15688 to i32
  %15690 = shl i32 %15676, 30
  %15691 = and i32 %15690, -2147483648
  %15692 = bitcast float %15556 to i32
  %15693 = xor i32 %15674, %15692
  %15694 = xor i32 %15693, %15691
  %15695 = xor i32 %15694, %15689
  %15696 = bitcast i32 %15695 to float
  %15697 = tail call i1 @llvm.amdgcn.class.f32(float %15557, i32 504)
  %15698 = select i1 %15697, float %15696, float 0x7FF8000000000000
  %15699 = tail call float @llvm.fabs.f32(float %15698)
  %15700 = tail call float @llvm.amdgcn.frexp.mant.f32(float %15699)
  %15701 = fcmp olt float %15700, 0x3FE5555560000000
  %15702 = zext i1 %15701 to i32
  %15703 = tail call float @llvm.amdgcn.ldexp.f32(float %15700, i32 %15702)
  %15704 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %15699)
  %15705 = sub nsw i32 %15704, %15702
  %15706 = fadd float %15703, -1.000000e+00
  %15707 = fadd float %15703, 1.000000e+00
  %15708 = fadd float %15707, -1.000000e+00
  %15709 = fsub float %15703, %15708
  %15710 = tail call float @llvm.amdgcn.rcp.f32(float %15707)
  %15711 = fmul float %15706, %15710
  %15712 = fmul float %15707, %15711
  %15713 = fneg float %15712
  %15714 = tail call float @llvm.fma.f32(float %15711, float %15707, float %15713)
  %15715 = tail call float @llvm.fma.f32(float %15711, float %15709, float %15714)
  %15716 = fadd float %15712, %15715
  %15717 = fsub float %15716, %15712
  %15718 = fsub float %15715, %15717
  %15719 = fsub float %15706, %15716
  %15720 = fsub float %15706, %15719
  %15721 = fsub float %15720, %15716
  %15722 = fsub float %15721, %15718
  %15723 = fadd float %15719, %15722
  %15724 = fmul float %15710, %15723
  %15725 = fadd float %15711, %15724
  %15726 = fsub float %15725, %15711
  %15727 = fsub float %15724, %15726
  %15728 = fmul float %15725, %15725
  %15729 = fneg float %15728
  %15730 = tail call float @llvm.fma.f32(float %15725, float %15725, float %15729)
  %15731 = fmul float %15727, 2.000000e+00
  %15732 = tail call float @llvm.fma.f32(float %15725, float %15731, float %15730)
  %15733 = fadd float %15728, %15732
  %15734 = fsub float %15733, %15728
  %15735 = fsub float %15732, %15734
  %15736 = tail call float @llvm.fmuladd.f32(float %15733, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %15737 = tail call float @llvm.fmuladd.f32(float %15733, float %15736, float 0x3FD999BDE0000000)
  %15738 = sitofp i32 %15705 to float
  %15739 = fmul float %15738, 0x3FE62E4300000000
  %15740 = fneg float %15739
  %15741 = tail call float @llvm.fma.f32(float %15738, float 0x3FE62E4300000000, float %15740)
  %15742 = tail call float @llvm.fma.f32(float %15738, float 0xBE205C6100000000, float %15741)
  %15743 = fadd float %15739, %15742
  %15744 = fsub float %15743, %15739
  %15745 = fsub float %15742, %15744
  %15746 = tail call float @llvm.amdgcn.ldexp.f32(float %15725, i32 1)
  %15747 = fmul float %15725, %15733
  %15748 = fneg float %15747
  %15749 = tail call float @llvm.fma.f32(float %15733, float %15725, float %15748)
  %15750 = tail call float @llvm.fma.f32(float %15733, float %15727, float %15749)
  %15751 = tail call float @llvm.fma.f32(float %15735, float %15725, float %15750)
  %15752 = fadd float %15747, %15751
  %15753 = fsub float %15752, %15747
  %15754 = fsub float %15751, %15753
  %15755 = fmul float %15733, %15737
  %15756 = fneg float %15755
  %15757 = tail call float @llvm.fma.f32(float %15733, float %15737, float %15756)
  %15758 = tail call float @llvm.fma.f32(float %15735, float %15737, float %15757)
  %15759 = fadd float %15755, %15758
  %15760 = fsub float %15759, %15755
  %15761 = fsub float %15758, %15760
  %15762 = fadd float %15759, 0x3FE5555540000000
  %15763 = fadd float %15762, 0xBFE5555540000000
  %15764 = fsub float %15759, %15763
  %15765 = fadd float %15761, 0x3E2E720200000000
  %15766 = fadd float %15765, %15764
  %15767 = fadd float %15762, %15766
  %15768 = fsub float %15767, %15762
  %15769 = fsub float %15766, %15768
  %15770 = fmul float %15752, %15767
  %15771 = fneg float %15770
  %15772 = tail call float @llvm.fma.f32(float %15752, float %15767, float %15771)
  %15773 = tail call float @llvm.fma.f32(float %15752, float %15769, float %15772)
  %15774 = tail call float @llvm.fma.f32(float %15754, float %15767, float %15773)
  %15775 = tail call float @llvm.amdgcn.ldexp.f32(float %15727, i32 1)
  %15776 = fadd float %15770, %15774
  %15777 = fsub float %15776, %15770
  %15778 = fsub float %15774, %15777
  %15779 = fadd float %15746, %15776
  %15780 = fsub float %15779, %15746
  %15781 = fsub float %15776, %15780
  %15782 = fadd float %15775, %15778
  %15783 = fadd float %15782, %15781
  %15784 = fadd float %15779, %15783
  %15785 = fsub float %15784, %15779
  %15786 = fsub float %15783, %15785
  %15787 = fadd float %15743, %15784
  %15788 = fsub float %15787, %15743
  %15789 = fsub float %15787, %15788
  %15790 = fsub float %15743, %15789
  %15791 = fsub float %15784, %15788
  %15792 = fadd float %15791, %15790
  %15793 = fadd float %15745, %15786
  %15794 = fsub float %15793, %15745
  %15795 = fsub float %15793, %15794
  %15796 = fsub float %15745, %15795
  %15797 = fsub float %15786, %15794
  %15798 = fadd float %15797, %15796
  %15799 = fadd float %15793, %15792
  %15800 = fadd float %15787, %15799
  %15801 = fsub float %15800, %15787
  %15802 = fsub float %15799, %15801
  %15803 = fadd float %15798, %15802
  %15804 = fadd float %15800, %15803
  %15805 = fsub float %15804, %15800
  %15806 = fsub float %15803, %15805
  %15807 = fmul float %15804, 2.000000e+00
  %15808 = fneg float %15807
  %15809 = tail call float @llvm.fma.f32(float %15804, float 2.000000e+00, float %15808)
  %15810 = fmul float %15804, 0.000000e+00
  %15811 = tail call float @llvm.fma.f32(float %15806, float 2.000000e+00, float %15810)
  %15812 = fadd float %15809, %15811
  %15813 = fadd float %15807, %15812
  %15814 = fsub float %15813, %15807
  %15815 = fsub float %15812, %15814
  %15816 = tail call float @llvm.fabs.f32(float %15807) #3
  %15817 = fcmp oeq float %15816, 0x7FF0000000000000
  %15818 = select i1 %15817, float %15807, float %15813
  %15819 = tail call float @llvm.fabs.f32(float %15818) #3
  %15820 = fcmp oeq float %15819, 0x7FF0000000000000
  %15821 = select i1 %15820, float 0.000000e+00, float %15815
  %15822 = fcmp oeq float %15818, 0x40562E4300000000
  %15823 = select i1 %15822, float 0x3EE0000000000000, float 0.000000e+00
  %15824 = fsub float %15818, %15823
  %15825 = fadd float %15823, %15821
  %15826 = fmul float %15824, 0x3FF7154760000000
  %15827 = tail call float @llvm.rint.f32(float %15826)
  %15828 = fcmp ogt float %15824, 0x40562E4300000000
  %15829 = fcmp olt float %15824, 0xC059D1DA00000000
  %15830 = fneg float %15826
  %15831 = tail call float @llvm.fma.f32(float %15824, float 0x3FF7154760000000, float %15830)
  %15832 = tail call float @llvm.fma.f32(float %15824, float 0x3E54AE0BE0000000, float %15831)
  %15833 = fsub float %15826, %15827
  %15834 = fadd float %15832, %15833
  %15835 = tail call float @llvm.exp2.f32(float %15834)
  %15836 = fptosi float %15827 to i32
  %15837 = tail call float @llvm.amdgcn.ldexp.f32(float %15835, i32 %15836)
  %15838 = select i1 %15829, float 0.000000e+00, float %15837
  %15839 = select i1 %15828, float 0x7FF0000000000000, float %15838
  %15840 = tail call float @llvm.fma.f32(float %15839, float %15825, float %15839)
  %15841 = tail call float @llvm.fabs.f32(float %15839) #3
  %15842 = fcmp oeq float %15841, 0x7FF0000000000000
  %15843 = select i1 %15842, float %15839, float %15840
  %15844 = tail call float @llvm.fabs.f32(float %15843)
  %15845 = fcmp oeq float %15699, 0x7FF0000000000000
  %15846 = fcmp oeq float %15698, 0.000000e+00
  %15847 = fcmp uno float %15698, 0.000000e+00
  %15848 = fmul contract float %15844, 1.000000e+01
  %15849 = fadd contract float %15848, 1.000000e+00
  %15850 = select i1 %15845, float 0x7FF0000000000000, float %15849
  %15851 = select i1 %15846, float 1.000000e+00, float %15850
  %15852 = select i1 %15847, float 0x7FF8000000000000, float %15851
  %15853 = fmul contract float %15555, %15852
  %15854 = fadd contract float %15391, %15853
  br i1 %15389, label %15388, label %15855, !llvm.loop !9

15855:                                            ; preds = %15673
  %15856 = load float, float addrspace(1)* %0, align 4, !tbaa !4
  %15857 = fadd contract float %15856, -1.000000e+00
  %15858 = fmul contract float %15857, 2.500000e-01
  %15859 = fadd contract float %15858, 1.000000e+00
  %15860 = load float, float addrspace(1)* %3, align 4, !tbaa !4
  %15861 = fadd contract float %15860, -1.000000e+00
  %15862 = fmul contract float %15861, 2.500000e-01
  %15863 = fadd contract float %15862, 1.000000e+00
  %15864 = fmul contract float %15859, 0x400921CAC0000000
  %15865 = tail call float @llvm.fabs.f32(float %15864)
  %15866 = fcmp olt float %15865, 1.310720e+05
  br i1 %15866, label %15973, label %15867

15867:                                            ; preds = %15855
  %15868 = bitcast float %15865 to i32
  %15869 = lshr i32 %15868, 23
  %15870 = and i32 %15868, 8388607
  %15871 = or i32 %15870, 8388608
  %15872 = zext i32 %15871 to i64
  %15873 = mul nuw nsw i64 %15872, 4266746795
  %15874 = trunc i64 %15873 to i32
  %15875 = lshr i64 %15873, 32
  %15876 = mul nuw nsw i64 %15872, 1011060801
  %15877 = add nuw nsw i64 %15875, %15876
  %15878 = trunc i64 %15877 to i32
  %15879 = lshr i64 %15877, 32
  %15880 = mul nuw nsw i64 %15872, 3680671129
  %15881 = add nuw nsw i64 %15879, %15880
  %15882 = trunc i64 %15881 to i32
  %15883 = lshr i64 %15881, 32
  %15884 = mul nuw nsw i64 %15872, 4113882560
  %15885 = add nuw nsw i64 %15883, %15884
  %15886 = trunc i64 %15885 to i32
  %15887 = lshr i64 %15885, 32
  %15888 = mul nuw nsw i64 %15872, 4230436817
  %15889 = add nuw nsw i64 %15887, %15888
  %15890 = trunc i64 %15889 to i32
  %15891 = lshr i64 %15889, 32
  %15892 = mul nuw nsw i64 %15872, 1313084713
  %15893 = add nuw nsw i64 %15891, %15892
  %15894 = trunc i64 %15893 to i32
  %15895 = lshr i64 %15893, 32
  %15896 = mul nuw nsw i64 %15872, 2734261102
  %15897 = add nuw nsw i64 %15895, %15896
  %15898 = trunc i64 %15897 to i32
  %15899 = lshr i64 %15897, 32
  %15900 = trunc i64 %15899 to i32
  %15901 = add nsw i32 %15869, -120
  %15902 = icmp ugt i32 %15901, 63
  %15903 = select i1 %15902, i32 %15894, i32 %15900
  %15904 = select i1 %15902, i32 %15890, i32 %15898
  %15905 = select i1 %15902, i32 %15886, i32 %15894
  %15906 = select i1 %15902, i32 %15882, i32 %15890
  %15907 = select i1 %15902, i32 %15878, i32 %15886
  %15908 = select i1 %15902, i32 %15874, i32 %15882
  %15909 = select i1 %15902, i32 -64, i32 0
  %15910 = add nsw i32 %15909, %15901
  %15911 = icmp ugt i32 %15910, 31
  %15912 = select i1 %15911, i32 %15904, i32 %15903
  %15913 = select i1 %15911, i32 %15905, i32 %15904
  %15914 = select i1 %15911, i32 %15906, i32 %15905
  %15915 = select i1 %15911, i32 %15907, i32 %15906
  %15916 = select i1 %15911, i32 %15908, i32 %15907
  %15917 = select i1 %15911, i32 -32, i32 0
  %15918 = add nsw i32 %15917, %15910
  %15919 = icmp ugt i32 %15918, 31
  %15920 = select i1 %15919, i32 %15913, i32 %15912
  %15921 = select i1 %15919, i32 %15914, i32 %15913
  %15922 = select i1 %15919, i32 %15915, i32 %15914
  %15923 = select i1 %15919, i32 %15916, i32 %15915
  %15924 = select i1 %15919, i32 -32, i32 0
  %15925 = add nsw i32 %15924, %15918
  %15926 = icmp eq i32 %15925, 0
  %15927 = sub nsw i32 32, %15925
  %15928 = tail call i32 @llvm.fshr.i32(i32 %15920, i32 %15921, i32 %15927)
  %15929 = tail call i32 @llvm.fshr.i32(i32 %15921, i32 %15922, i32 %15927)
  %15930 = tail call i32 @llvm.fshr.i32(i32 %15922, i32 %15923, i32 %15927)
  %15931 = select i1 %15926, i32 %15920, i32 %15928
  %15932 = select i1 %15926, i32 %15921, i32 %15929
  %15933 = select i1 %15926, i32 %15922, i32 %15930
  %15934 = lshr i32 %15931, 29
  %15935 = tail call i32 @llvm.fshl.i32(i32 %15931, i32 %15932, i32 2)
  %15936 = tail call i32 @llvm.fshl.i32(i32 %15932, i32 %15933, i32 2)
  %15937 = tail call i32 @llvm.fshl.i32(i32 %15933, i32 %15923, i32 2)
  %15938 = and i32 %15934, 1
  %15939 = sub nsw i32 0, %15938
  %15940 = shl i32 %15934, 31
  %15941 = xor i32 %15935, %15939
  %15942 = xor i32 %15936, %15939
  %15943 = xor i32 %15937, %15939
  %15944 = tail call i32 @llvm.ctlz.i32(i32 %15941, i1 false), !range !8
  %15945 = sub nsw i32 31, %15944
  %15946 = tail call i32 @llvm.fshr.i32(i32 %15941, i32 %15942, i32 %15945)
  %15947 = tail call i32 @llvm.fshr.i32(i32 %15942, i32 %15943, i32 %15945)
  %15948 = shl nuw nsw i32 %15944, 23
  %15949 = sub nuw nsw i32 1056964608, %15948
  %15950 = lshr i32 %15946, 9
  %15951 = or i32 %15950, %15949
  %15952 = or i32 %15951, %15940
  %15953 = bitcast i32 %15952 to float
  %15954 = tail call i32 @llvm.fshl.i32(i32 %15946, i32 %15947, i32 23)
  %15955 = tail call i32 @llvm.ctlz.i32(i32 %15954, i1 false), !range !8
  %15956 = fmul float %15953, 0x3FF921FB40000000
  %15957 = add nuw nsw i32 %15955, %15944
  %15958 = shl nuw nsw i32 %15957, 23
  %15959 = sub nuw nsw i32 855638016, %15958
  %15960 = sub nsw i32 31, %15955
  %15961 = tail call i32 @llvm.fshr.i32(i32 %15954, i32 %15947, i32 %15960)
  %15962 = lshr i32 %15961, 9
  %15963 = or i32 %15959, %15962
  %15964 = or i32 %15963, %15940
  %15965 = bitcast i32 %15964 to float
  %15966 = fneg float %15956
  %15967 = tail call float @llvm.fma.f32(float %15953, float 0x3FF921FB40000000, float %15966)
  %15968 = tail call float @llvm.fma.f32(float %15953, float 0x3E74442D00000000, float %15967)
  %15969 = tail call float @llvm.fma.f32(float %15965, float 0x3FF921FB40000000, float %15968)
  %15970 = fadd float %15956, %15969
  %15971 = lshr i32 %15931, 30
  %15972 = add nuw nsw i32 %15938, %15971
  br label %15981

15973:                                            ; preds = %15855
  %15974 = fmul float %15865, 0x3FE45F3060000000
  %15975 = tail call float @llvm.rint.f32(float %15974)
  %15976 = tail call float @llvm.fma.f32(float %15975, float 0xBFF921FB40000000, float %15865)
  %15977 = tail call float @llvm.fma.f32(float %15975, float 0xBE74442D00000000, float %15976)
  %15978 = tail call float @llvm.fma.f32(float %15975, float 0xBCF8469880000000, float %15977)
  %15979 = fptosi float %15975 to i32
  %15980 = bitcast float %15865 to i32
  br label %15981

15981:                                            ; preds = %15973, %15867
  %15982 = phi i32 [ %15980, %15973 ], [ %15868, %15867 ]
  %15983 = phi float [ %15978, %15973 ], [ %15970, %15867 ]
  %15984 = phi i32 [ %15979, %15973 ], [ %15972, %15867 ]
  %15985 = fmul float %15983, %15983
  %15986 = tail call float @llvm.fmuladd.f32(float %15985, float 0xBF29833040000000, float 0x3F81103880000000)
  %15987 = tail call float @llvm.fmuladd.f32(float %15985, float %15986, float 0xBFC55553A0000000)
  %15988 = fmul float %15985, %15987
  %15989 = tail call float @llvm.fmuladd.f32(float %15983, float %15988, float %15983)
  %15990 = tail call float @llvm.fmuladd.f32(float %15985, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %15991 = tail call float @llvm.fmuladd.f32(float %15985, float %15990, float 0x3FA5557EE0000000)
  %15992 = tail call float @llvm.fmuladd.f32(float %15985, float %15991, float 0xBFE0000080000000)
  %15993 = tail call float @llvm.fmuladd.f32(float %15985, float %15992, float 1.000000e+00)
  %15994 = and i32 %15984, 1
  %15995 = icmp eq i32 %15994, 0
  %15996 = select i1 %15995, float %15989, float %15993
  %15997 = bitcast float %15996 to i32
  %15998 = shl i32 %15984, 30
  %15999 = and i32 %15998, -2147483648
  %16000 = bitcast float %15864 to i32
  %16001 = xor i32 %15982, %16000
  %16002 = xor i32 %16001, %15999
  %16003 = xor i32 %16002, %15997
  %16004 = bitcast i32 %16003 to float
  %16005 = tail call i1 @llvm.amdgcn.class.f32(float %15865, i32 504)
  %16006 = select i1 %16005, float %16004, float 0x7FF8000000000000
  %16007 = tail call float @llvm.fabs.f32(float %16006)
  %16008 = tail call float @llvm.amdgcn.frexp.mant.f32(float %16007)
  %16009 = fcmp olt float %16008, 0x3FE5555560000000
  %16010 = zext i1 %16009 to i32
  %16011 = tail call float @llvm.amdgcn.ldexp.f32(float %16008, i32 %16010)
  %16012 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %16007)
  %16013 = sub nsw i32 %16012, %16010
  %16014 = fadd float %16011, -1.000000e+00
  %16015 = fadd float %16011, 1.000000e+00
  %16016 = fadd float %16015, -1.000000e+00
  %16017 = fsub float %16011, %16016
  %16018 = tail call float @llvm.amdgcn.rcp.f32(float %16015)
  %16019 = fmul float %16014, %16018
  %16020 = fmul float %16015, %16019
  %16021 = fneg float %16020
  %16022 = tail call float @llvm.fma.f32(float %16019, float %16015, float %16021)
  %16023 = tail call float @llvm.fma.f32(float %16019, float %16017, float %16022)
  %16024 = fadd float %16020, %16023
  %16025 = fsub float %16024, %16020
  %16026 = fsub float %16023, %16025
  %16027 = fsub float %16014, %16024
  %16028 = fsub float %16014, %16027
  %16029 = fsub float %16028, %16024
  %16030 = fsub float %16029, %16026
  %16031 = fadd float %16027, %16030
  %16032 = fmul float %16018, %16031
  %16033 = fadd float %16019, %16032
  %16034 = fsub float %16033, %16019
  %16035 = fsub float %16032, %16034
  %16036 = fmul float %16033, %16033
  %16037 = fneg float %16036
  %16038 = tail call float @llvm.fma.f32(float %16033, float %16033, float %16037)
  %16039 = fmul float %16035, 2.000000e+00
  %16040 = tail call float @llvm.fma.f32(float %16033, float %16039, float %16038)
  %16041 = fadd float %16036, %16040
  %16042 = fsub float %16041, %16036
  %16043 = fsub float %16040, %16042
  %16044 = tail call float @llvm.fmuladd.f32(float %16041, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %16045 = tail call float @llvm.fmuladd.f32(float %16041, float %16044, float 0x3FD999BDE0000000)
  %16046 = sitofp i32 %16013 to float
  %16047 = fmul float %16046, 0x3FE62E4300000000
  %16048 = fneg float %16047
  %16049 = tail call float @llvm.fma.f32(float %16046, float 0x3FE62E4300000000, float %16048)
  %16050 = tail call float @llvm.fma.f32(float %16046, float 0xBE205C6100000000, float %16049)
  %16051 = fadd float %16047, %16050
  %16052 = fsub float %16051, %16047
  %16053 = fsub float %16050, %16052
  %16054 = tail call float @llvm.amdgcn.ldexp.f32(float %16033, i32 1)
  %16055 = fmul float %16033, %16041
  %16056 = fneg float %16055
  %16057 = tail call float @llvm.fma.f32(float %16041, float %16033, float %16056)
  %16058 = tail call float @llvm.fma.f32(float %16041, float %16035, float %16057)
  %16059 = tail call float @llvm.fma.f32(float %16043, float %16033, float %16058)
  %16060 = fadd float %16055, %16059
  %16061 = fsub float %16060, %16055
  %16062 = fsub float %16059, %16061
  %16063 = fmul float %16041, %16045
  %16064 = fneg float %16063
  %16065 = tail call float @llvm.fma.f32(float %16041, float %16045, float %16064)
  %16066 = tail call float @llvm.fma.f32(float %16043, float %16045, float %16065)
  %16067 = fadd float %16063, %16066
  %16068 = fsub float %16067, %16063
  %16069 = fsub float %16066, %16068
  %16070 = fadd float %16067, 0x3FE5555540000000
  %16071 = fadd float %16070, 0xBFE5555540000000
  %16072 = fsub float %16067, %16071
  %16073 = fadd float %16069, 0x3E2E720200000000
  %16074 = fadd float %16073, %16072
  %16075 = fadd float %16070, %16074
  %16076 = fsub float %16075, %16070
  %16077 = fsub float %16074, %16076
  %16078 = fmul float %16060, %16075
  %16079 = fneg float %16078
  %16080 = tail call float @llvm.fma.f32(float %16060, float %16075, float %16079)
  %16081 = tail call float @llvm.fma.f32(float %16060, float %16077, float %16080)
  %16082 = tail call float @llvm.fma.f32(float %16062, float %16075, float %16081)
  %16083 = tail call float @llvm.amdgcn.ldexp.f32(float %16035, i32 1)
  %16084 = fadd float %16078, %16082
  %16085 = fsub float %16084, %16078
  %16086 = fsub float %16082, %16085
  %16087 = fadd float %16054, %16084
  %16088 = fsub float %16087, %16054
  %16089 = fsub float %16084, %16088
  %16090 = fadd float %16083, %16086
  %16091 = fadd float %16090, %16089
  %16092 = fadd float %16087, %16091
  %16093 = fsub float %16092, %16087
  %16094 = fsub float %16091, %16093
  %16095 = fadd float %16051, %16092
  %16096 = fsub float %16095, %16051
  %16097 = fsub float %16095, %16096
  %16098 = fsub float %16051, %16097
  %16099 = fsub float %16092, %16096
  %16100 = fadd float %16099, %16098
  %16101 = fadd float %16053, %16094
  %16102 = fsub float %16101, %16053
  %16103 = fsub float %16101, %16102
  %16104 = fsub float %16053, %16103
  %16105 = fsub float %16094, %16102
  %16106 = fadd float %16105, %16104
  %16107 = fadd float %16101, %16100
  %16108 = fadd float %16095, %16107
  %16109 = fsub float %16108, %16095
  %16110 = fsub float %16107, %16109
  %16111 = fadd float %16106, %16110
  %16112 = fadd float %16108, %16111
  %16113 = fsub float %16112, %16108
  %16114 = fsub float %16111, %16113
  %16115 = fmul float %16112, 2.000000e+00
  %16116 = fneg float %16115
  %16117 = tail call float @llvm.fma.f32(float %16112, float 2.000000e+00, float %16116)
  %16118 = fmul float %16112, 0.000000e+00
  %16119 = tail call float @llvm.fma.f32(float %16114, float 2.000000e+00, float %16118)
  %16120 = fadd float %16117, %16119
  %16121 = fadd float %16115, %16120
  %16122 = fsub float %16121, %16115
  %16123 = fsub float %16120, %16122
  %16124 = tail call float @llvm.fabs.f32(float %16115) #3
  %16125 = fcmp oeq float %16124, 0x7FF0000000000000
  %16126 = select i1 %16125, float %16115, float %16121
  %16127 = tail call float @llvm.fabs.f32(float %16126) #3
  %16128 = fcmp oeq float %16127, 0x7FF0000000000000
  %16129 = select i1 %16128, float 0.000000e+00, float %16123
  %16130 = fcmp oeq float %16126, 0x40562E4300000000
  %16131 = select i1 %16130, float 0x3EE0000000000000, float 0.000000e+00
  %16132 = fsub float %16126, %16131
  %16133 = fadd float %16131, %16129
  %16134 = fmul float %16132, 0x3FF7154760000000
  %16135 = tail call float @llvm.rint.f32(float %16134)
  %16136 = fcmp ogt float %16132, 0x40562E4300000000
  %16137 = fcmp olt float %16132, 0xC059D1DA00000000
  %16138 = fneg float %16134
  %16139 = tail call float @llvm.fma.f32(float %16132, float 0x3FF7154760000000, float %16138)
  %16140 = tail call float @llvm.fma.f32(float %16132, float 0x3E54AE0BE0000000, float %16139)
  %16141 = fsub float %16134, %16135
  %16142 = fadd float %16140, %16141
  %16143 = tail call float @llvm.exp2.f32(float %16142)
  %16144 = fptosi float %16135 to i32
  %16145 = tail call float @llvm.amdgcn.ldexp.f32(float %16143, i32 %16144)
  %16146 = select i1 %16137, float 0.000000e+00, float %16145
  %16147 = select i1 %16136, float 0x7FF0000000000000, float %16146
  %16148 = tail call float @llvm.fma.f32(float %16147, float %16133, float %16147)
  %16149 = tail call float @llvm.fabs.f32(float %16147) #3
  %16150 = fcmp oeq float %16149, 0x7FF0000000000000
  %16151 = select i1 %16150, float %16147, float %16148
  %16152 = tail call float @llvm.fabs.f32(float %16151)
  %16153 = fcmp oeq float %16007, 0x7FF0000000000000
  %16154 = fcmp oeq float %16006, 0.000000e+00
  %16155 = select i1 %16153, float 0x7FF0000000000000, float %16152
  %16156 = select i1 %16154, float 0.000000e+00, float %16155
  %16157 = fcmp uno float %16006, 0.000000e+00
  %16158 = select i1 %16157, float 0x7FF8000000000000, float %16156
  %16159 = fadd contract float %15863, -1.000000e+00
  %16160 = tail call float @llvm.fabs.f32(float %16159)
  %16161 = tail call float @llvm.amdgcn.frexp.mant.f32(float %16160)
  %16162 = fcmp olt float %16161, 0x3FE5555560000000
  %16163 = zext i1 %16162 to i32
  %16164 = tail call float @llvm.amdgcn.ldexp.f32(float %16161, i32 %16163)
  %16165 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %16160)
  %16166 = sub nsw i32 %16165, %16163
  %16167 = fadd float %16164, -1.000000e+00
  %16168 = fadd float %16164, 1.000000e+00
  %16169 = fadd float %16168, -1.000000e+00
  %16170 = fsub float %16164, %16169
  %16171 = tail call float @llvm.amdgcn.rcp.f32(float %16168)
  %16172 = fmul float %16167, %16171
  %16173 = fmul float %16168, %16172
  %16174 = fneg float %16173
  %16175 = tail call float @llvm.fma.f32(float %16172, float %16168, float %16174)
  %16176 = tail call float @llvm.fma.f32(float %16172, float %16170, float %16175)
  %16177 = fadd float %16173, %16176
  %16178 = fsub float %16177, %16173
  %16179 = fsub float %16176, %16178
  %16180 = fsub float %16167, %16177
  %16181 = fsub float %16167, %16180
  %16182 = fsub float %16181, %16177
  %16183 = fsub float %16182, %16179
  %16184 = fadd float %16180, %16183
  %16185 = fmul float %16171, %16184
  %16186 = fadd float %16172, %16185
  %16187 = fsub float %16186, %16172
  %16188 = fsub float %16185, %16187
  %16189 = fmul float %16186, %16186
  %16190 = fneg float %16189
  %16191 = tail call float @llvm.fma.f32(float %16186, float %16186, float %16190)
  %16192 = fmul float %16188, 2.000000e+00
  %16193 = tail call float @llvm.fma.f32(float %16186, float %16192, float %16191)
  %16194 = fadd float %16189, %16193
  %16195 = fsub float %16194, %16189
  %16196 = fsub float %16193, %16195
  %16197 = tail call float @llvm.fmuladd.f32(float %16194, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %16198 = tail call float @llvm.fmuladd.f32(float %16194, float %16197, float 0x3FD999BDE0000000)
  %16199 = sitofp i32 %16166 to float
  %16200 = fmul float %16199, 0x3FE62E4300000000
  %16201 = fneg float %16200
  %16202 = tail call float @llvm.fma.f32(float %16199, float 0x3FE62E4300000000, float %16201)
  %16203 = tail call float @llvm.fma.f32(float %16199, float 0xBE205C6100000000, float %16202)
  %16204 = fadd float %16200, %16203
  %16205 = fsub float %16204, %16200
  %16206 = fsub float %16203, %16205
  %16207 = tail call float @llvm.amdgcn.ldexp.f32(float %16186, i32 1)
  %16208 = fmul float %16186, %16194
  %16209 = fneg float %16208
  %16210 = tail call float @llvm.fma.f32(float %16194, float %16186, float %16209)
  %16211 = tail call float @llvm.fma.f32(float %16194, float %16188, float %16210)
  %16212 = tail call float @llvm.fma.f32(float %16196, float %16186, float %16211)
  %16213 = fadd float %16208, %16212
  %16214 = fsub float %16213, %16208
  %16215 = fsub float %16212, %16214
  %16216 = fmul float %16194, %16198
  %16217 = fneg float %16216
  %16218 = tail call float @llvm.fma.f32(float %16194, float %16198, float %16217)
  %16219 = tail call float @llvm.fma.f32(float %16196, float %16198, float %16218)
  %16220 = fadd float %16216, %16219
  %16221 = fsub float %16220, %16216
  %16222 = fsub float %16219, %16221
  %16223 = fadd float %16220, 0x3FE5555540000000
  %16224 = fadd float %16223, 0xBFE5555540000000
  %16225 = fsub float %16220, %16224
  %16226 = fadd float %16222, 0x3E2E720200000000
  %16227 = fadd float %16226, %16225
  %16228 = fadd float %16223, %16227
  %16229 = fsub float %16228, %16223
  %16230 = fsub float %16227, %16229
  %16231 = fmul float %16213, %16228
  %16232 = fneg float %16231
  %16233 = tail call float @llvm.fma.f32(float %16213, float %16228, float %16232)
  %16234 = tail call float @llvm.fma.f32(float %16213, float %16230, float %16233)
  %16235 = tail call float @llvm.fma.f32(float %16215, float %16228, float %16234)
  %16236 = tail call float @llvm.amdgcn.ldexp.f32(float %16188, i32 1)
  %16237 = fadd float %16231, %16235
  %16238 = fsub float %16237, %16231
  %16239 = fsub float %16235, %16238
  %16240 = fadd float %16207, %16237
  %16241 = fsub float %16240, %16207
  %16242 = fsub float %16237, %16241
  %16243 = fadd float %16236, %16239
  %16244 = fadd float %16243, %16242
  %16245 = fadd float %16240, %16244
  %16246 = fsub float %16245, %16240
  %16247 = fsub float %16244, %16246
  %16248 = fadd float %16204, %16245
  %16249 = fsub float %16248, %16204
  %16250 = fsub float %16248, %16249
  %16251 = fsub float %16204, %16250
  %16252 = fsub float %16245, %16249
  %16253 = fadd float %16252, %16251
  %16254 = fadd float %16206, %16247
  %16255 = fsub float %16254, %16206
  %16256 = fsub float %16254, %16255
  %16257 = fsub float %16206, %16256
  %16258 = fsub float %16247, %16255
  %16259 = fadd float %16258, %16257
  %16260 = fadd float %16254, %16253
  %16261 = fadd float %16248, %16260
  %16262 = fsub float %16261, %16248
  %16263 = fsub float %16260, %16262
  %16264 = fadd float %16259, %16263
  %16265 = fadd float %16261, %16264
  %16266 = fsub float %16265, %16261
  %16267 = fsub float %16264, %16266
  %16268 = fmul float %16265, 2.000000e+00
  %16269 = fneg float %16268
  %16270 = tail call float @llvm.fma.f32(float %16265, float 2.000000e+00, float %16269)
  %16271 = fmul float %16265, 0.000000e+00
  %16272 = tail call float @llvm.fma.f32(float %16267, float 2.000000e+00, float %16271)
  %16273 = fadd float %16270, %16272
  %16274 = fadd float %16268, %16273
  %16275 = fsub float %16274, %16268
  %16276 = fsub float %16273, %16275
  %16277 = tail call float @llvm.fabs.f32(float %16268) #3
  %16278 = fcmp oeq float %16277, 0x7FF0000000000000
  %16279 = select i1 %16278, float %16268, float %16274
  %16280 = tail call float @llvm.fabs.f32(float %16279) #3
  %16281 = fcmp oeq float %16280, 0x7FF0000000000000
  %16282 = select i1 %16281, float 0.000000e+00, float %16276
  %16283 = fcmp oeq float %16279, 0x40562E4300000000
  %16284 = select i1 %16283, float 0x3EE0000000000000, float 0.000000e+00
  %16285 = fsub float %16279, %16284
  %16286 = fadd float %16284, %16282
  %16287 = fmul float %16285, 0x3FF7154760000000
  %16288 = tail call float @llvm.rint.f32(float %16287)
  %16289 = fcmp ogt float %16285, 0x40562E4300000000
  %16290 = fcmp olt float %16285, 0xC059D1DA00000000
  %16291 = fneg float %16287
  %16292 = tail call float @llvm.fma.f32(float %16285, float 0x3FF7154760000000, float %16291)
  %16293 = tail call float @llvm.fma.f32(float %16285, float 0x3E54AE0BE0000000, float %16292)
  %16294 = fsub float %16287, %16288
  %16295 = fadd float %16293, %16294
  %16296 = tail call float @llvm.exp2.f32(float %16295)
  %16297 = fptosi float %16288 to i32
  %16298 = tail call float @llvm.amdgcn.ldexp.f32(float %16296, i32 %16297)
  %16299 = select i1 %16290, float 0.000000e+00, float %16298
  %16300 = select i1 %16289, float 0x7FF0000000000000, float %16299
  %16301 = tail call float @llvm.fma.f32(float %16300, float %16286, float %16300)
  %16302 = tail call float @llvm.fabs.f32(float %16300) #3
  %16303 = fcmp oeq float %16302, 0x7FF0000000000000
  %16304 = select i1 %16303, float %16300, float %16301
  %16305 = tail call float @llvm.fabs.f32(float %16304)
  %16306 = fcmp oeq float %16160, 0x7FF0000000000000
  %16307 = fcmp oeq float %16159, 0.000000e+00
  %16308 = select i1 %16306, float 0x7FF0000000000000, float %16305
  %16309 = select i1 %16307, float 0.000000e+00, float %16308
  %16310 = fcmp uno float %16159, 0.000000e+00
  %16311 = select i1 %16310, float 0x7FF8000000000000, float %16309
  %16312 = fadd contract float %16311, %16158
  %16313 = fadd contract float %16312, 0.000000e+00
  br label %16314

16314:                                            ; preds = %16601, %15981
  %16315 = phi i1 [ true, %15981 ], [ false, %16601 ]
  %16316 = phi i32 [ 0, %15981 ], [ 1, %16601 ]
  %16317 = phi float [ %16313, %15981 ], [ %16782, %16601 ]
  %16318 = zext i32 %16316 to i64
  %16319 = getelementptr inbounds float, float addrspace(1)* %0, i64 %16318
  %16320 = load float, float addrspace(1)* %16319, align 4, !tbaa !4
  %16321 = fadd contract float %16320, -1.000000e+00
  %16322 = fmul contract float %16321, 2.500000e-01
  %16323 = fadd contract float %16322, 1.000000e+00
  %16324 = add nuw nsw i32 %16316, 1
  %16325 = zext i32 %16324 to i64
  %16326 = getelementptr inbounds float, float addrspace(1)* %0, i64 %16325
  %16327 = load float, float addrspace(1)* %16326, align 4, !tbaa !4
  %16328 = fadd contract float %16327, -1.000000e+00
  %16329 = fmul contract float %16328, 2.500000e-01
  %16330 = fadd contract float %16329, 1.000000e+00
  %16331 = fadd contract float %16323, -1.000000e+00
  %16332 = tail call float @llvm.fabs.f32(float %16331)
  %16333 = tail call float @llvm.amdgcn.frexp.mant.f32(float %16332)
  %16334 = fcmp olt float %16333, 0x3FE5555560000000
  %16335 = zext i1 %16334 to i32
  %16336 = tail call float @llvm.amdgcn.ldexp.f32(float %16333, i32 %16335)
  %16337 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %16332)
  %16338 = sub nsw i32 %16337, %16335
  %16339 = fadd float %16336, -1.000000e+00
  %16340 = fadd float %16336, 1.000000e+00
  %16341 = fadd float %16340, -1.000000e+00
  %16342 = fsub float %16336, %16341
  %16343 = tail call float @llvm.amdgcn.rcp.f32(float %16340)
  %16344 = fmul float %16339, %16343
  %16345 = fmul float %16340, %16344
  %16346 = fneg float %16345
  %16347 = tail call float @llvm.fma.f32(float %16344, float %16340, float %16346)
  %16348 = tail call float @llvm.fma.f32(float %16344, float %16342, float %16347)
  %16349 = fadd float %16345, %16348
  %16350 = fsub float %16349, %16345
  %16351 = fsub float %16348, %16350
  %16352 = fsub float %16339, %16349
  %16353 = fsub float %16339, %16352
  %16354 = fsub float %16353, %16349
  %16355 = fsub float %16354, %16351
  %16356 = fadd float %16352, %16355
  %16357 = fmul float %16343, %16356
  %16358 = fadd float %16344, %16357
  %16359 = fsub float %16358, %16344
  %16360 = fsub float %16357, %16359
  %16361 = fmul float %16358, %16358
  %16362 = fneg float %16361
  %16363 = tail call float @llvm.fma.f32(float %16358, float %16358, float %16362)
  %16364 = fmul float %16360, 2.000000e+00
  %16365 = tail call float @llvm.fma.f32(float %16358, float %16364, float %16363)
  %16366 = fadd float %16361, %16365
  %16367 = fsub float %16366, %16361
  %16368 = fsub float %16365, %16367
  %16369 = tail call float @llvm.fmuladd.f32(float %16366, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %16370 = tail call float @llvm.fmuladd.f32(float %16366, float %16369, float 0x3FD999BDE0000000)
  %16371 = sitofp i32 %16338 to float
  %16372 = fmul float %16371, 0x3FE62E4300000000
  %16373 = fneg float %16372
  %16374 = tail call float @llvm.fma.f32(float %16371, float 0x3FE62E4300000000, float %16373)
  %16375 = tail call float @llvm.fma.f32(float %16371, float 0xBE205C6100000000, float %16374)
  %16376 = fadd float %16372, %16375
  %16377 = fsub float %16376, %16372
  %16378 = fsub float %16375, %16377
  %16379 = tail call float @llvm.amdgcn.ldexp.f32(float %16358, i32 1)
  %16380 = fmul float %16358, %16366
  %16381 = fneg float %16380
  %16382 = tail call float @llvm.fma.f32(float %16366, float %16358, float %16381)
  %16383 = tail call float @llvm.fma.f32(float %16366, float %16360, float %16382)
  %16384 = tail call float @llvm.fma.f32(float %16368, float %16358, float %16383)
  %16385 = fadd float %16380, %16384
  %16386 = fsub float %16385, %16380
  %16387 = fsub float %16384, %16386
  %16388 = fmul float %16366, %16370
  %16389 = fneg float %16388
  %16390 = tail call float @llvm.fma.f32(float %16366, float %16370, float %16389)
  %16391 = tail call float @llvm.fma.f32(float %16368, float %16370, float %16390)
  %16392 = fadd float %16388, %16391
  %16393 = fsub float %16392, %16388
  %16394 = fsub float %16391, %16393
  %16395 = fadd float %16392, 0x3FE5555540000000
  %16396 = fadd float %16395, 0xBFE5555540000000
  %16397 = fsub float %16392, %16396
  %16398 = fadd float %16394, 0x3E2E720200000000
  %16399 = fadd float %16398, %16397
  %16400 = fadd float %16395, %16399
  %16401 = fsub float %16400, %16395
  %16402 = fsub float %16399, %16401
  %16403 = fmul float %16385, %16400
  %16404 = fneg float %16403
  %16405 = tail call float @llvm.fma.f32(float %16385, float %16400, float %16404)
  %16406 = tail call float @llvm.fma.f32(float %16385, float %16402, float %16405)
  %16407 = tail call float @llvm.fma.f32(float %16387, float %16400, float %16406)
  %16408 = tail call float @llvm.amdgcn.ldexp.f32(float %16360, i32 1)
  %16409 = fadd float %16403, %16407
  %16410 = fsub float %16409, %16403
  %16411 = fsub float %16407, %16410
  %16412 = fadd float %16379, %16409
  %16413 = fsub float %16412, %16379
  %16414 = fsub float %16409, %16413
  %16415 = fadd float %16408, %16411
  %16416 = fadd float %16415, %16414
  %16417 = fadd float %16412, %16416
  %16418 = fsub float %16417, %16412
  %16419 = fsub float %16416, %16418
  %16420 = fadd float %16376, %16417
  %16421 = fsub float %16420, %16376
  %16422 = fsub float %16420, %16421
  %16423 = fsub float %16376, %16422
  %16424 = fsub float %16417, %16421
  %16425 = fadd float %16424, %16423
  %16426 = fadd float %16378, %16419
  %16427 = fsub float %16426, %16378
  %16428 = fsub float %16426, %16427
  %16429 = fsub float %16378, %16428
  %16430 = fsub float %16419, %16427
  %16431 = fadd float %16430, %16429
  %16432 = fadd float %16426, %16425
  %16433 = fadd float %16420, %16432
  %16434 = fsub float %16433, %16420
  %16435 = fsub float %16432, %16434
  %16436 = fadd float %16431, %16435
  %16437 = fadd float %16433, %16436
  %16438 = fsub float %16437, %16433
  %16439 = fsub float %16436, %16438
  %16440 = fmul float %16437, 2.000000e+00
  %16441 = fneg float %16440
  %16442 = tail call float @llvm.fma.f32(float %16437, float 2.000000e+00, float %16441)
  %16443 = fmul float %16437, 0.000000e+00
  %16444 = tail call float @llvm.fma.f32(float %16439, float 2.000000e+00, float %16443)
  %16445 = fadd float %16442, %16444
  %16446 = fadd float %16440, %16445
  %16447 = fsub float %16446, %16440
  %16448 = fsub float %16445, %16447
  %16449 = tail call float @llvm.fabs.f32(float %16440) #3
  %16450 = fcmp oeq float %16449, 0x7FF0000000000000
  %16451 = select i1 %16450, float %16440, float %16446
  %16452 = tail call float @llvm.fabs.f32(float %16451) #3
  %16453 = fcmp oeq float %16452, 0x7FF0000000000000
  %16454 = select i1 %16453, float 0.000000e+00, float %16448
  %16455 = fcmp oeq float %16451, 0x40562E4300000000
  %16456 = select i1 %16455, float 0x3EE0000000000000, float 0.000000e+00
  %16457 = fsub float %16451, %16456
  %16458 = fadd float %16456, %16454
  %16459 = fmul float %16457, 0x3FF7154760000000
  %16460 = tail call float @llvm.rint.f32(float %16459)
  %16461 = fcmp ogt float %16457, 0x40562E4300000000
  %16462 = fcmp olt float %16457, 0xC059D1DA00000000
  %16463 = fneg float %16459
  %16464 = tail call float @llvm.fma.f32(float %16457, float 0x3FF7154760000000, float %16463)
  %16465 = tail call float @llvm.fma.f32(float %16457, float 0x3E54AE0BE0000000, float %16464)
  %16466 = fsub float %16459, %16460
  %16467 = fadd float %16465, %16466
  %16468 = tail call float @llvm.exp2.f32(float %16467)
  %16469 = fptosi float %16460 to i32
  %16470 = tail call float @llvm.amdgcn.ldexp.f32(float %16468, i32 %16469)
  %16471 = select i1 %16462, float 0.000000e+00, float %16470
  %16472 = select i1 %16461, float 0x7FF0000000000000, float %16471
  %16473 = tail call float @llvm.fma.f32(float %16472, float %16458, float %16472)
  %16474 = tail call float @llvm.fabs.f32(float %16472) #3
  %16475 = fcmp oeq float %16474, 0x7FF0000000000000
  %16476 = select i1 %16475, float %16472, float %16473
  %16477 = tail call float @llvm.fabs.f32(float %16476)
  %16478 = fcmp oeq float %16332, 0x7FF0000000000000
  %16479 = fcmp oeq float %16331, 0.000000e+00
  %16480 = select i1 %16478, float 0x7FF0000000000000, float %16477
  %16481 = select i1 %16479, float 0.000000e+00, float %16480
  %16482 = fcmp uno float %16331, 0.000000e+00
  %16483 = select i1 %16482, float 0x7FF8000000000000, float %16481
  %16484 = fmul contract float %16330, 0x400921CAC0000000
  %16485 = tail call float @llvm.fabs.f32(float %16484)
  %16486 = fcmp olt float %16485, 1.310720e+05
  br i1 %16486, label %16593, label %16487

16487:                                            ; preds = %16314
  %16488 = bitcast float %16485 to i32
  %16489 = lshr i32 %16488, 23
  %16490 = and i32 %16488, 8388607
  %16491 = or i32 %16490, 8388608
  %16492 = zext i32 %16491 to i64
  %16493 = mul nuw nsw i64 %16492, 4266746795
  %16494 = trunc i64 %16493 to i32
  %16495 = lshr i64 %16493, 32
  %16496 = mul nuw nsw i64 %16492, 1011060801
  %16497 = add nuw nsw i64 %16495, %16496
  %16498 = trunc i64 %16497 to i32
  %16499 = lshr i64 %16497, 32
  %16500 = mul nuw nsw i64 %16492, 3680671129
  %16501 = add nuw nsw i64 %16499, %16500
  %16502 = trunc i64 %16501 to i32
  %16503 = lshr i64 %16501, 32
  %16504 = mul nuw nsw i64 %16492, 4113882560
  %16505 = add nuw nsw i64 %16503, %16504
  %16506 = trunc i64 %16505 to i32
  %16507 = lshr i64 %16505, 32
  %16508 = mul nuw nsw i64 %16492, 4230436817
  %16509 = add nuw nsw i64 %16507, %16508
  %16510 = trunc i64 %16509 to i32
  %16511 = lshr i64 %16509, 32
  %16512 = mul nuw nsw i64 %16492, 1313084713
  %16513 = add nuw nsw i64 %16511, %16512
  %16514 = trunc i64 %16513 to i32
  %16515 = lshr i64 %16513, 32
  %16516 = mul nuw nsw i64 %16492, 2734261102
  %16517 = add nuw nsw i64 %16515, %16516
  %16518 = trunc i64 %16517 to i32
  %16519 = lshr i64 %16517, 32
  %16520 = trunc i64 %16519 to i32
  %16521 = add nsw i32 %16489, -120
  %16522 = icmp ugt i32 %16521, 63
  %16523 = select i1 %16522, i32 %16514, i32 %16520
  %16524 = select i1 %16522, i32 %16510, i32 %16518
  %16525 = select i1 %16522, i32 %16506, i32 %16514
  %16526 = select i1 %16522, i32 %16502, i32 %16510
  %16527 = select i1 %16522, i32 %16498, i32 %16506
  %16528 = select i1 %16522, i32 %16494, i32 %16502
  %16529 = select i1 %16522, i32 -64, i32 0
  %16530 = add nsw i32 %16529, %16521
  %16531 = icmp ugt i32 %16530, 31
  %16532 = select i1 %16531, i32 %16524, i32 %16523
  %16533 = select i1 %16531, i32 %16525, i32 %16524
  %16534 = select i1 %16531, i32 %16526, i32 %16525
  %16535 = select i1 %16531, i32 %16527, i32 %16526
  %16536 = select i1 %16531, i32 %16528, i32 %16527
  %16537 = select i1 %16531, i32 -32, i32 0
  %16538 = add nsw i32 %16537, %16530
  %16539 = icmp ugt i32 %16538, 31
  %16540 = select i1 %16539, i32 %16533, i32 %16532
  %16541 = select i1 %16539, i32 %16534, i32 %16533
  %16542 = select i1 %16539, i32 %16535, i32 %16534
  %16543 = select i1 %16539, i32 %16536, i32 %16535
  %16544 = select i1 %16539, i32 -32, i32 0
  %16545 = add nsw i32 %16544, %16538
  %16546 = icmp eq i32 %16545, 0
  %16547 = sub nsw i32 32, %16545
  %16548 = tail call i32 @llvm.fshr.i32(i32 %16540, i32 %16541, i32 %16547)
  %16549 = tail call i32 @llvm.fshr.i32(i32 %16541, i32 %16542, i32 %16547)
  %16550 = tail call i32 @llvm.fshr.i32(i32 %16542, i32 %16543, i32 %16547)
  %16551 = select i1 %16546, i32 %16540, i32 %16548
  %16552 = select i1 %16546, i32 %16541, i32 %16549
  %16553 = select i1 %16546, i32 %16542, i32 %16550
  %16554 = lshr i32 %16551, 29
  %16555 = tail call i32 @llvm.fshl.i32(i32 %16551, i32 %16552, i32 2)
  %16556 = tail call i32 @llvm.fshl.i32(i32 %16552, i32 %16553, i32 2)
  %16557 = tail call i32 @llvm.fshl.i32(i32 %16553, i32 %16543, i32 2)
  %16558 = and i32 %16554, 1
  %16559 = sub nsw i32 0, %16558
  %16560 = shl i32 %16554, 31
  %16561 = xor i32 %16555, %16559
  %16562 = xor i32 %16556, %16559
  %16563 = xor i32 %16557, %16559
  %16564 = tail call i32 @llvm.ctlz.i32(i32 %16561, i1 false), !range !8
  %16565 = sub nsw i32 31, %16564
  %16566 = tail call i32 @llvm.fshr.i32(i32 %16561, i32 %16562, i32 %16565)
  %16567 = tail call i32 @llvm.fshr.i32(i32 %16562, i32 %16563, i32 %16565)
  %16568 = shl nuw nsw i32 %16564, 23
  %16569 = sub nuw nsw i32 1056964608, %16568
  %16570 = lshr i32 %16566, 9
  %16571 = or i32 %16570, %16569
  %16572 = or i32 %16571, %16560
  %16573 = bitcast i32 %16572 to float
  %16574 = tail call i32 @llvm.fshl.i32(i32 %16566, i32 %16567, i32 23)
  %16575 = tail call i32 @llvm.ctlz.i32(i32 %16574, i1 false), !range !8
  %16576 = fmul float %16573, 0x3FF921FB40000000
  %16577 = add nuw nsw i32 %16575, %16564
  %16578 = shl nuw nsw i32 %16577, 23
  %16579 = sub nuw nsw i32 855638016, %16578
  %16580 = sub nsw i32 31, %16575
  %16581 = tail call i32 @llvm.fshr.i32(i32 %16574, i32 %16567, i32 %16580)
  %16582 = lshr i32 %16581, 9
  %16583 = or i32 %16579, %16582
  %16584 = or i32 %16583, %16560
  %16585 = bitcast i32 %16584 to float
  %16586 = fneg float %16576
  %16587 = tail call float @llvm.fma.f32(float %16573, float 0x3FF921FB40000000, float %16586)
  %16588 = tail call float @llvm.fma.f32(float %16573, float 0x3E74442D00000000, float %16587)
  %16589 = tail call float @llvm.fma.f32(float %16585, float 0x3FF921FB40000000, float %16588)
  %16590 = fadd float %16576, %16589
  %16591 = lshr i32 %16551, 30
  %16592 = add nuw nsw i32 %16558, %16591
  br label %16601

16593:                                            ; preds = %16314
  %16594 = fmul float %16485, 0x3FE45F3060000000
  %16595 = tail call float @llvm.rint.f32(float %16594)
  %16596 = tail call float @llvm.fma.f32(float %16595, float 0xBFF921FB40000000, float %16485)
  %16597 = tail call float @llvm.fma.f32(float %16595, float 0xBE74442D00000000, float %16596)
  %16598 = tail call float @llvm.fma.f32(float %16595, float 0xBCF8469880000000, float %16597)
  %16599 = fptosi float %16595 to i32
  %16600 = bitcast float %16485 to i32
  br label %16601

16601:                                            ; preds = %16593, %16487
  %16602 = phi i32 [ %16600, %16593 ], [ %16488, %16487 ]
  %16603 = phi float [ %16598, %16593 ], [ %16590, %16487 ]
  %16604 = phi i32 [ %16599, %16593 ], [ %16592, %16487 ]
  %16605 = fmul float %16603, %16603
  %16606 = tail call float @llvm.fmuladd.f32(float %16605, float 0xBF29833040000000, float 0x3F81103880000000)
  %16607 = tail call float @llvm.fmuladd.f32(float %16605, float %16606, float 0xBFC55553A0000000)
  %16608 = fmul float %16605, %16607
  %16609 = tail call float @llvm.fmuladd.f32(float %16603, float %16608, float %16603)
  %16610 = tail call float @llvm.fmuladd.f32(float %16605, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %16611 = tail call float @llvm.fmuladd.f32(float %16605, float %16610, float 0x3FA5557EE0000000)
  %16612 = tail call float @llvm.fmuladd.f32(float %16605, float %16611, float 0xBFE0000080000000)
  %16613 = tail call float @llvm.fmuladd.f32(float %16605, float %16612, float 1.000000e+00)
  %16614 = and i32 %16604, 1
  %16615 = icmp eq i32 %16614, 0
  %16616 = select i1 %16615, float %16609, float %16613
  %16617 = bitcast float %16616 to i32
  %16618 = shl i32 %16604, 30
  %16619 = and i32 %16618, -2147483648
  %16620 = bitcast float %16484 to i32
  %16621 = xor i32 %16602, %16620
  %16622 = xor i32 %16621, %16619
  %16623 = xor i32 %16622, %16617
  %16624 = bitcast i32 %16623 to float
  %16625 = tail call i1 @llvm.amdgcn.class.f32(float %16485, i32 504)
  %16626 = select i1 %16625, float %16624, float 0x7FF8000000000000
  %16627 = tail call float @llvm.fabs.f32(float %16626)
  %16628 = tail call float @llvm.amdgcn.frexp.mant.f32(float %16627)
  %16629 = fcmp olt float %16628, 0x3FE5555560000000
  %16630 = zext i1 %16629 to i32
  %16631 = tail call float @llvm.amdgcn.ldexp.f32(float %16628, i32 %16630)
  %16632 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %16627)
  %16633 = sub nsw i32 %16632, %16630
  %16634 = fadd float %16631, -1.000000e+00
  %16635 = fadd float %16631, 1.000000e+00
  %16636 = fadd float %16635, -1.000000e+00
  %16637 = fsub float %16631, %16636
  %16638 = tail call float @llvm.amdgcn.rcp.f32(float %16635)
  %16639 = fmul float %16634, %16638
  %16640 = fmul float %16635, %16639
  %16641 = fneg float %16640
  %16642 = tail call float @llvm.fma.f32(float %16639, float %16635, float %16641)
  %16643 = tail call float @llvm.fma.f32(float %16639, float %16637, float %16642)
  %16644 = fadd float %16640, %16643
  %16645 = fsub float %16644, %16640
  %16646 = fsub float %16643, %16645
  %16647 = fsub float %16634, %16644
  %16648 = fsub float %16634, %16647
  %16649 = fsub float %16648, %16644
  %16650 = fsub float %16649, %16646
  %16651 = fadd float %16647, %16650
  %16652 = fmul float %16638, %16651
  %16653 = fadd float %16639, %16652
  %16654 = fsub float %16653, %16639
  %16655 = fsub float %16652, %16654
  %16656 = fmul float %16653, %16653
  %16657 = fneg float %16656
  %16658 = tail call float @llvm.fma.f32(float %16653, float %16653, float %16657)
  %16659 = fmul float %16655, 2.000000e+00
  %16660 = tail call float @llvm.fma.f32(float %16653, float %16659, float %16658)
  %16661 = fadd float %16656, %16660
  %16662 = fsub float %16661, %16656
  %16663 = fsub float %16660, %16662
  %16664 = tail call float @llvm.fmuladd.f32(float %16661, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %16665 = tail call float @llvm.fmuladd.f32(float %16661, float %16664, float 0x3FD999BDE0000000)
  %16666 = sitofp i32 %16633 to float
  %16667 = fmul float %16666, 0x3FE62E4300000000
  %16668 = fneg float %16667
  %16669 = tail call float @llvm.fma.f32(float %16666, float 0x3FE62E4300000000, float %16668)
  %16670 = tail call float @llvm.fma.f32(float %16666, float 0xBE205C6100000000, float %16669)
  %16671 = fadd float %16667, %16670
  %16672 = fsub float %16671, %16667
  %16673 = fsub float %16670, %16672
  %16674 = tail call float @llvm.amdgcn.ldexp.f32(float %16653, i32 1)
  %16675 = fmul float %16653, %16661
  %16676 = fneg float %16675
  %16677 = tail call float @llvm.fma.f32(float %16661, float %16653, float %16676)
  %16678 = tail call float @llvm.fma.f32(float %16661, float %16655, float %16677)
  %16679 = tail call float @llvm.fma.f32(float %16663, float %16653, float %16678)
  %16680 = fadd float %16675, %16679
  %16681 = fsub float %16680, %16675
  %16682 = fsub float %16679, %16681
  %16683 = fmul float %16661, %16665
  %16684 = fneg float %16683
  %16685 = tail call float @llvm.fma.f32(float %16661, float %16665, float %16684)
  %16686 = tail call float @llvm.fma.f32(float %16663, float %16665, float %16685)
  %16687 = fadd float %16683, %16686
  %16688 = fsub float %16687, %16683
  %16689 = fsub float %16686, %16688
  %16690 = fadd float %16687, 0x3FE5555540000000
  %16691 = fadd float %16690, 0xBFE5555540000000
  %16692 = fsub float %16687, %16691
  %16693 = fadd float %16689, 0x3E2E720200000000
  %16694 = fadd float %16693, %16692
  %16695 = fadd float %16690, %16694
  %16696 = fsub float %16695, %16690
  %16697 = fsub float %16694, %16696
  %16698 = fmul float %16680, %16695
  %16699 = fneg float %16698
  %16700 = tail call float @llvm.fma.f32(float %16680, float %16695, float %16699)
  %16701 = tail call float @llvm.fma.f32(float %16680, float %16697, float %16700)
  %16702 = tail call float @llvm.fma.f32(float %16682, float %16695, float %16701)
  %16703 = tail call float @llvm.amdgcn.ldexp.f32(float %16655, i32 1)
  %16704 = fadd float %16698, %16702
  %16705 = fsub float %16704, %16698
  %16706 = fsub float %16702, %16705
  %16707 = fadd float %16674, %16704
  %16708 = fsub float %16707, %16674
  %16709 = fsub float %16704, %16708
  %16710 = fadd float %16703, %16706
  %16711 = fadd float %16710, %16709
  %16712 = fadd float %16707, %16711
  %16713 = fsub float %16712, %16707
  %16714 = fsub float %16711, %16713
  %16715 = fadd float %16671, %16712
  %16716 = fsub float %16715, %16671
  %16717 = fsub float %16715, %16716
  %16718 = fsub float %16671, %16717
  %16719 = fsub float %16712, %16716
  %16720 = fadd float %16719, %16718
  %16721 = fadd float %16673, %16714
  %16722 = fsub float %16721, %16673
  %16723 = fsub float %16721, %16722
  %16724 = fsub float %16673, %16723
  %16725 = fsub float %16714, %16722
  %16726 = fadd float %16725, %16724
  %16727 = fadd float %16721, %16720
  %16728 = fadd float %16715, %16727
  %16729 = fsub float %16728, %16715
  %16730 = fsub float %16727, %16729
  %16731 = fadd float %16726, %16730
  %16732 = fadd float %16728, %16731
  %16733 = fsub float %16732, %16728
  %16734 = fsub float %16731, %16733
  %16735 = fmul float %16732, 2.000000e+00
  %16736 = fneg float %16735
  %16737 = tail call float @llvm.fma.f32(float %16732, float 2.000000e+00, float %16736)
  %16738 = fmul float %16732, 0.000000e+00
  %16739 = tail call float @llvm.fma.f32(float %16734, float 2.000000e+00, float %16738)
  %16740 = fadd float %16737, %16739
  %16741 = fadd float %16735, %16740
  %16742 = fsub float %16741, %16735
  %16743 = fsub float %16740, %16742
  %16744 = tail call float @llvm.fabs.f32(float %16735) #3
  %16745 = fcmp oeq float %16744, 0x7FF0000000000000
  %16746 = select i1 %16745, float %16735, float %16741
  %16747 = tail call float @llvm.fabs.f32(float %16746) #3
  %16748 = fcmp oeq float %16747, 0x7FF0000000000000
  %16749 = select i1 %16748, float 0.000000e+00, float %16743
  %16750 = fcmp oeq float %16746, 0x40562E4300000000
  %16751 = select i1 %16750, float 0x3EE0000000000000, float 0.000000e+00
  %16752 = fsub float %16746, %16751
  %16753 = fadd float %16751, %16749
  %16754 = fmul float %16752, 0x3FF7154760000000
  %16755 = tail call float @llvm.rint.f32(float %16754)
  %16756 = fcmp ogt float %16752, 0x40562E4300000000
  %16757 = fcmp olt float %16752, 0xC059D1DA00000000
  %16758 = fneg float %16754
  %16759 = tail call float @llvm.fma.f32(float %16752, float 0x3FF7154760000000, float %16758)
  %16760 = tail call float @llvm.fma.f32(float %16752, float 0x3E54AE0BE0000000, float %16759)
  %16761 = fsub float %16754, %16755
  %16762 = fadd float %16760, %16761
  %16763 = tail call float @llvm.exp2.f32(float %16762)
  %16764 = fptosi float %16755 to i32
  %16765 = tail call float @llvm.amdgcn.ldexp.f32(float %16763, i32 %16764)
  %16766 = select i1 %16757, float 0.000000e+00, float %16765
  %16767 = select i1 %16756, float 0x7FF0000000000000, float %16766
  %16768 = tail call float @llvm.fma.f32(float %16767, float %16753, float %16767)
  %16769 = tail call float @llvm.fabs.f32(float %16767) #3
  %16770 = fcmp oeq float %16769, 0x7FF0000000000000
  %16771 = select i1 %16770, float %16767, float %16768
  %16772 = tail call float @llvm.fabs.f32(float %16771)
  %16773 = fcmp oeq float %16627, 0x7FF0000000000000
  %16774 = fcmp oeq float %16626, 0.000000e+00
  %16775 = fcmp uno float %16626, 0.000000e+00
  %16776 = fmul contract float %16772, 1.000000e+01
  %16777 = fadd contract float %16776, 1.000000e+00
  %16778 = select i1 %16773, float 0x7FF0000000000000, float %16777
  %16779 = select i1 %16774, float 1.000000e+00, float %16778
  %16780 = select i1 %16775, float 0x7FF8000000000000, float %16779
  %16781 = fmul contract float %16483, %16780
  %16782 = fadd contract float %16317, %16781
  br i1 %16315, label %16314, label %16783, !llvm.loop !9

16783:                                            ; preds = %16601
  %16784 = fcmp contract olt float %15854, %16782
  br i1 %16784, label %16785, label %16787

16785:                                            ; preds = %16783
  store float %14924, float addrspace(1)* %0, align 4, !tbaa !4
  %16786 = getelementptr inbounds float, float addrspace(1)* %0, i64 1
  store float %14927, float addrspace(1)* %16786, align 4, !tbaa !4
  store float %14930, float addrspace(1)* %3, align 4, !tbaa !4
  br label %16787

16787:                                            ; preds = %16785, %16783
  %16788 = getelementptr inbounds float, float addrspace(1)* %1, i64 27
  %16789 = load float, float addrspace(1)* %16788, align 4, !tbaa !4
  %16790 = insertelement <3 x float> poison, float %16789, i64 0
  %16791 = getelementptr inbounds float, float addrspace(1)* %1, i64 28
  %16792 = load float, float addrspace(1)* %16791, align 4, !tbaa !4
  %16793 = insertelement <3 x float> %16790, float %16792, i64 1
  %16794 = getelementptr inbounds float, float addrspace(1)* %1, i64 29
  %16795 = load float, float addrspace(1)* %16794, align 4, !tbaa !4
  %16796 = insertelement <3 x float> %16793, float %16795, i64 2
  %16797 = fadd contract float %16789, -1.000000e+00
  %16798 = fmul contract float %16797, 2.500000e-01
  %16799 = fadd contract float %16798, 1.000000e+00
  %16800 = fadd contract float %16795, -1.000000e+00
  %16801 = fmul contract float %16800, 2.500000e-01
  %16802 = fadd contract float %16801, 1.000000e+00
  %16803 = fmul contract float %16799, 0x400921CAC0000000
  %16804 = tail call float @llvm.fabs.f32(float %16803)
  %16805 = fcmp olt float %16804, 1.310720e+05
  br i1 %16805, label %16912, label %16806

16806:                                            ; preds = %16787
  %16807 = bitcast float %16804 to i32
  %16808 = lshr i32 %16807, 23
  %16809 = and i32 %16807, 8388607
  %16810 = or i32 %16809, 8388608
  %16811 = zext i32 %16810 to i64
  %16812 = mul nuw nsw i64 %16811, 4266746795
  %16813 = trunc i64 %16812 to i32
  %16814 = lshr i64 %16812, 32
  %16815 = mul nuw nsw i64 %16811, 1011060801
  %16816 = add nuw nsw i64 %16814, %16815
  %16817 = trunc i64 %16816 to i32
  %16818 = lshr i64 %16816, 32
  %16819 = mul nuw nsw i64 %16811, 3680671129
  %16820 = add nuw nsw i64 %16818, %16819
  %16821 = trunc i64 %16820 to i32
  %16822 = lshr i64 %16820, 32
  %16823 = mul nuw nsw i64 %16811, 4113882560
  %16824 = add nuw nsw i64 %16822, %16823
  %16825 = trunc i64 %16824 to i32
  %16826 = lshr i64 %16824, 32
  %16827 = mul nuw nsw i64 %16811, 4230436817
  %16828 = add nuw nsw i64 %16826, %16827
  %16829 = trunc i64 %16828 to i32
  %16830 = lshr i64 %16828, 32
  %16831 = mul nuw nsw i64 %16811, 1313084713
  %16832 = add nuw nsw i64 %16830, %16831
  %16833 = trunc i64 %16832 to i32
  %16834 = lshr i64 %16832, 32
  %16835 = mul nuw nsw i64 %16811, 2734261102
  %16836 = add nuw nsw i64 %16834, %16835
  %16837 = trunc i64 %16836 to i32
  %16838 = lshr i64 %16836, 32
  %16839 = trunc i64 %16838 to i32
  %16840 = add nsw i32 %16808, -120
  %16841 = icmp ugt i32 %16840, 63
  %16842 = select i1 %16841, i32 %16833, i32 %16839
  %16843 = select i1 %16841, i32 %16829, i32 %16837
  %16844 = select i1 %16841, i32 %16825, i32 %16833
  %16845 = select i1 %16841, i32 %16821, i32 %16829
  %16846 = select i1 %16841, i32 %16817, i32 %16825
  %16847 = select i1 %16841, i32 %16813, i32 %16821
  %16848 = select i1 %16841, i32 -64, i32 0
  %16849 = add nsw i32 %16848, %16840
  %16850 = icmp ugt i32 %16849, 31
  %16851 = select i1 %16850, i32 %16843, i32 %16842
  %16852 = select i1 %16850, i32 %16844, i32 %16843
  %16853 = select i1 %16850, i32 %16845, i32 %16844
  %16854 = select i1 %16850, i32 %16846, i32 %16845
  %16855 = select i1 %16850, i32 %16847, i32 %16846
  %16856 = select i1 %16850, i32 -32, i32 0
  %16857 = add nsw i32 %16856, %16849
  %16858 = icmp ugt i32 %16857, 31
  %16859 = select i1 %16858, i32 %16852, i32 %16851
  %16860 = select i1 %16858, i32 %16853, i32 %16852
  %16861 = select i1 %16858, i32 %16854, i32 %16853
  %16862 = select i1 %16858, i32 %16855, i32 %16854
  %16863 = select i1 %16858, i32 -32, i32 0
  %16864 = add nsw i32 %16863, %16857
  %16865 = icmp eq i32 %16864, 0
  %16866 = sub nsw i32 32, %16864
  %16867 = tail call i32 @llvm.fshr.i32(i32 %16859, i32 %16860, i32 %16866)
  %16868 = tail call i32 @llvm.fshr.i32(i32 %16860, i32 %16861, i32 %16866)
  %16869 = tail call i32 @llvm.fshr.i32(i32 %16861, i32 %16862, i32 %16866)
  %16870 = select i1 %16865, i32 %16859, i32 %16867
  %16871 = select i1 %16865, i32 %16860, i32 %16868
  %16872 = select i1 %16865, i32 %16861, i32 %16869
  %16873 = lshr i32 %16870, 29
  %16874 = tail call i32 @llvm.fshl.i32(i32 %16870, i32 %16871, i32 2)
  %16875 = tail call i32 @llvm.fshl.i32(i32 %16871, i32 %16872, i32 2)
  %16876 = tail call i32 @llvm.fshl.i32(i32 %16872, i32 %16862, i32 2)
  %16877 = and i32 %16873, 1
  %16878 = sub nsw i32 0, %16877
  %16879 = shl i32 %16873, 31
  %16880 = xor i32 %16874, %16878
  %16881 = xor i32 %16875, %16878
  %16882 = xor i32 %16876, %16878
  %16883 = tail call i32 @llvm.ctlz.i32(i32 %16880, i1 false), !range !8
  %16884 = sub nsw i32 31, %16883
  %16885 = tail call i32 @llvm.fshr.i32(i32 %16880, i32 %16881, i32 %16884)
  %16886 = tail call i32 @llvm.fshr.i32(i32 %16881, i32 %16882, i32 %16884)
  %16887 = shl nuw nsw i32 %16883, 23
  %16888 = sub nuw nsw i32 1056964608, %16887
  %16889 = lshr i32 %16885, 9
  %16890 = or i32 %16889, %16888
  %16891 = or i32 %16890, %16879
  %16892 = bitcast i32 %16891 to float
  %16893 = tail call i32 @llvm.fshl.i32(i32 %16885, i32 %16886, i32 23)
  %16894 = tail call i32 @llvm.ctlz.i32(i32 %16893, i1 false), !range !8
  %16895 = fmul float %16892, 0x3FF921FB40000000
  %16896 = add nuw nsw i32 %16894, %16883
  %16897 = shl nuw nsw i32 %16896, 23
  %16898 = sub nuw nsw i32 855638016, %16897
  %16899 = sub nsw i32 31, %16894
  %16900 = tail call i32 @llvm.fshr.i32(i32 %16893, i32 %16886, i32 %16899)
  %16901 = lshr i32 %16900, 9
  %16902 = or i32 %16898, %16901
  %16903 = or i32 %16902, %16879
  %16904 = bitcast i32 %16903 to float
  %16905 = fneg float %16895
  %16906 = tail call float @llvm.fma.f32(float %16892, float 0x3FF921FB40000000, float %16905)
  %16907 = tail call float @llvm.fma.f32(float %16892, float 0x3E74442D00000000, float %16906)
  %16908 = tail call float @llvm.fma.f32(float %16904, float 0x3FF921FB40000000, float %16907)
  %16909 = fadd float %16895, %16908
  %16910 = lshr i32 %16870, 30
  %16911 = add nuw nsw i32 %16877, %16910
  br label %16920

16912:                                            ; preds = %16787
  %16913 = fmul float %16804, 0x3FE45F3060000000
  %16914 = tail call float @llvm.rint.f32(float %16913)
  %16915 = tail call float @llvm.fma.f32(float %16914, float 0xBFF921FB40000000, float %16804)
  %16916 = tail call float @llvm.fma.f32(float %16914, float 0xBE74442D00000000, float %16915)
  %16917 = tail call float @llvm.fma.f32(float %16914, float 0xBCF8469880000000, float %16916)
  %16918 = fptosi float %16914 to i32
  %16919 = bitcast float %16804 to i32
  br label %16920

16920:                                            ; preds = %16912, %16806
  %16921 = phi i32 [ %16919, %16912 ], [ %16807, %16806 ]
  %16922 = phi float [ %16917, %16912 ], [ %16909, %16806 ]
  %16923 = phi i32 [ %16918, %16912 ], [ %16911, %16806 ]
  %16924 = fmul float %16922, %16922
  %16925 = tail call float @llvm.fmuladd.f32(float %16924, float 0xBF29833040000000, float 0x3F81103880000000)
  %16926 = tail call float @llvm.fmuladd.f32(float %16924, float %16925, float 0xBFC55553A0000000)
  %16927 = fmul float %16924, %16926
  %16928 = tail call float @llvm.fmuladd.f32(float %16922, float %16927, float %16922)
  %16929 = tail call float @llvm.fmuladd.f32(float %16924, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %16930 = tail call float @llvm.fmuladd.f32(float %16924, float %16929, float 0x3FA5557EE0000000)
  %16931 = tail call float @llvm.fmuladd.f32(float %16924, float %16930, float 0xBFE0000080000000)
  %16932 = tail call float @llvm.fmuladd.f32(float %16924, float %16931, float 1.000000e+00)
  %16933 = and i32 %16923, 1
  %16934 = icmp eq i32 %16933, 0
  %16935 = select i1 %16934, float %16928, float %16932
  %16936 = bitcast float %16935 to i32
  %16937 = shl i32 %16923, 30
  %16938 = and i32 %16937, -2147483648
  %16939 = bitcast float %16803 to i32
  %16940 = xor i32 %16921, %16939
  %16941 = xor i32 %16940, %16938
  %16942 = xor i32 %16941, %16936
  %16943 = bitcast i32 %16942 to float
  %16944 = tail call i1 @llvm.amdgcn.class.f32(float %16804, i32 504)
  %16945 = select i1 %16944, float %16943, float 0x7FF8000000000000
  %16946 = tail call float @llvm.fabs.f32(float %16945)
  %16947 = tail call float @llvm.amdgcn.frexp.mant.f32(float %16946)
  %16948 = fcmp olt float %16947, 0x3FE5555560000000
  %16949 = zext i1 %16948 to i32
  %16950 = tail call float @llvm.amdgcn.ldexp.f32(float %16947, i32 %16949)
  %16951 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %16946)
  %16952 = sub nsw i32 %16951, %16949
  %16953 = fadd float %16950, -1.000000e+00
  %16954 = fadd float %16950, 1.000000e+00
  %16955 = fadd float %16954, -1.000000e+00
  %16956 = fsub float %16950, %16955
  %16957 = tail call float @llvm.amdgcn.rcp.f32(float %16954)
  %16958 = fmul float %16953, %16957
  %16959 = fmul float %16954, %16958
  %16960 = fneg float %16959
  %16961 = tail call float @llvm.fma.f32(float %16958, float %16954, float %16960)
  %16962 = tail call float @llvm.fma.f32(float %16958, float %16956, float %16961)
  %16963 = fadd float %16959, %16962
  %16964 = fsub float %16963, %16959
  %16965 = fsub float %16962, %16964
  %16966 = fsub float %16953, %16963
  %16967 = fsub float %16953, %16966
  %16968 = fsub float %16967, %16963
  %16969 = fsub float %16968, %16965
  %16970 = fadd float %16966, %16969
  %16971 = fmul float %16957, %16970
  %16972 = fadd float %16958, %16971
  %16973 = fsub float %16972, %16958
  %16974 = fsub float %16971, %16973
  %16975 = fmul float %16972, %16972
  %16976 = fneg float %16975
  %16977 = tail call float @llvm.fma.f32(float %16972, float %16972, float %16976)
  %16978 = fmul float %16974, 2.000000e+00
  %16979 = tail call float @llvm.fma.f32(float %16972, float %16978, float %16977)
  %16980 = fadd float %16975, %16979
  %16981 = fsub float %16980, %16975
  %16982 = fsub float %16979, %16981
  %16983 = tail call float @llvm.fmuladd.f32(float %16980, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %16984 = tail call float @llvm.fmuladd.f32(float %16980, float %16983, float 0x3FD999BDE0000000)
  %16985 = sitofp i32 %16952 to float
  %16986 = fmul float %16985, 0x3FE62E4300000000
  %16987 = fneg float %16986
  %16988 = tail call float @llvm.fma.f32(float %16985, float 0x3FE62E4300000000, float %16987)
  %16989 = tail call float @llvm.fma.f32(float %16985, float 0xBE205C6100000000, float %16988)
  %16990 = fadd float %16986, %16989
  %16991 = fsub float %16990, %16986
  %16992 = fsub float %16989, %16991
  %16993 = tail call float @llvm.amdgcn.ldexp.f32(float %16972, i32 1)
  %16994 = fmul float %16972, %16980
  %16995 = fneg float %16994
  %16996 = tail call float @llvm.fma.f32(float %16980, float %16972, float %16995)
  %16997 = tail call float @llvm.fma.f32(float %16980, float %16974, float %16996)
  %16998 = tail call float @llvm.fma.f32(float %16982, float %16972, float %16997)
  %16999 = fadd float %16994, %16998
  %17000 = fsub float %16999, %16994
  %17001 = fsub float %16998, %17000
  %17002 = fmul float %16980, %16984
  %17003 = fneg float %17002
  %17004 = tail call float @llvm.fma.f32(float %16980, float %16984, float %17003)
  %17005 = tail call float @llvm.fma.f32(float %16982, float %16984, float %17004)
  %17006 = fadd float %17002, %17005
  %17007 = fsub float %17006, %17002
  %17008 = fsub float %17005, %17007
  %17009 = fadd float %17006, 0x3FE5555540000000
  %17010 = fadd float %17009, 0xBFE5555540000000
  %17011 = fsub float %17006, %17010
  %17012 = fadd float %17008, 0x3E2E720200000000
  %17013 = fadd float %17012, %17011
  %17014 = fadd float %17009, %17013
  %17015 = fsub float %17014, %17009
  %17016 = fsub float %17013, %17015
  %17017 = fmul float %16999, %17014
  %17018 = fneg float %17017
  %17019 = tail call float @llvm.fma.f32(float %16999, float %17014, float %17018)
  %17020 = tail call float @llvm.fma.f32(float %16999, float %17016, float %17019)
  %17021 = tail call float @llvm.fma.f32(float %17001, float %17014, float %17020)
  %17022 = tail call float @llvm.amdgcn.ldexp.f32(float %16974, i32 1)
  %17023 = fadd float %17017, %17021
  %17024 = fsub float %17023, %17017
  %17025 = fsub float %17021, %17024
  %17026 = fadd float %16993, %17023
  %17027 = fsub float %17026, %16993
  %17028 = fsub float %17023, %17027
  %17029 = fadd float %17022, %17025
  %17030 = fadd float %17029, %17028
  %17031 = fadd float %17026, %17030
  %17032 = fsub float %17031, %17026
  %17033 = fsub float %17030, %17032
  %17034 = fadd float %16990, %17031
  %17035 = fsub float %17034, %16990
  %17036 = fsub float %17034, %17035
  %17037 = fsub float %16990, %17036
  %17038 = fsub float %17031, %17035
  %17039 = fadd float %17038, %17037
  %17040 = fadd float %16992, %17033
  %17041 = fsub float %17040, %16992
  %17042 = fsub float %17040, %17041
  %17043 = fsub float %16992, %17042
  %17044 = fsub float %17033, %17041
  %17045 = fadd float %17044, %17043
  %17046 = fadd float %17040, %17039
  %17047 = fadd float %17034, %17046
  %17048 = fsub float %17047, %17034
  %17049 = fsub float %17046, %17048
  %17050 = fadd float %17045, %17049
  %17051 = fadd float %17047, %17050
  %17052 = fsub float %17051, %17047
  %17053 = fsub float %17050, %17052
  %17054 = fmul float %17051, 2.000000e+00
  %17055 = fneg float %17054
  %17056 = tail call float @llvm.fma.f32(float %17051, float 2.000000e+00, float %17055)
  %17057 = fmul float %17051, 0.000000e+00
  %17058 = tail call float @llvm.fma.f32(float %17053, float 2.000000e+00, float %17057)
  %17059 = fadd float %17056, %17058
  %17060 = fadd float %17054, %17059
  %17061 = fsub float %17060, %17054
  %17062 = fsub float %17059, %17061
  %17063 = tail call float @llvm.fabs.f32(float %17054) #3
  %17064 = fcmp oeq float %17063, 0x7FF0000000000000
  %17065 = select i1 %17064, float %17054, float %17060
  %17066 = tail call float @llvm.fabs.f32(float %17065) #3
  %17067 = fcmp oeq float %17066, 0x7FF0000000000000
  %17068 = select i1 %17067, float 0.000000e+00, float %17062
  %17069 = fcmp oeq float %17065, 0x40562E4300000000
  %17070 = select i1 %17069, float 0x3EE0000000000000, float 0.000000e+00
  %17071 = fsub float %17065, %17070
  %17072 = fadd float %17070, %17068
  %17073 = fmul float %17071, 0x3FF7154760000000
  %17074 = tail call float @llvm.rint.f32(float %17073)
  %17075 = fcmp ogt float %17071, 0x40562E4300000000
  %17076 = fcmp olt float %17071, 0xC059D1DA00000000
  %17077 = fneg float %17073
  %17078 = tail call float @llvm.fma.f32(float %17071, float 0x3FF7154760000000, float %17077)
  %17079 = tail call float @llvm.fma.f32(float %17071, float 0x3E54AE0BE0000000, float %17078)
  %17080 = fsub float %17073, %17074
  %17081 = fadd float %17079, %17080
  %17082 = tail call float @llvm.exp2.f32(float %17081)
  %17083 = fptosi float %17074 to i32
  %17084 = tail call float @llvm.amdgcn.ldexp.f32(float %17082, i32 %17083)
  %17085 = select i1 %17076, float 0.000000e+00, float %17084
  %17086 = select i1 %17075, float 0x7FF0000000000000, float %17085
  %17087 = tail call float @llvm.fma.f32(float %17086, float %17072, float %17086)
  %17088 = tail call float @llvm.fabs.f32(float %17086) #3
  %17089 = fcmp oeq float %17088, 0x7FF0000000000000
  %17090 = select i1 %17089, float %17086, float %17087
  %17091 = tail call float @llvm.fabs.f32(float %17090)
  %17092 = fcmp oeq float %16946, 0x7FF0000000000000
  %17093 = fcmp oeq float %16945, 0.000000e+00
  %17094 = select i1 %17092, float 0x7FF0000000000000, float %17091
  %17095 = select i1 %17093, float 0.000000e+00, float %17094
  %17096 = fcmp uno float %16945, 0.000000e+00
  %17097 = select i1 %17096, float 0x7FF8000000000000, float %17095
  %17098 = fadd contract float %16802, -1.000000e+00
  %17099 = tail call float @llvm.fabs.f32(float %17098)
  %17100 = tail call float @llvm.amdgcn.frexp.mant.f32(float %17099)
  %17101 = fcmp olt float %17100, 0x3FE5555560000000
  %17102 = zext i1 %17101 to i32
  %17103 = tail call float @llvm.amdgcn.ldexp.f32(float %17100, i32 %17102)
  %17104 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %17099)
  %17105 = sub nsw i32 %17104, %17102
  %17106 = fadd float %17103, -1.000000e+00
  %17107 = fadd float %17103, 1.000000e+00
  %17108 = fadd float %17107, -1.000000e+00
  %17109 = fsub float %17103, %17108
  %17110 = tail call float @llvm.amdgcn.rcp.f32(float %17107)
  %17111 = fmul float %17106, %17110
  %17112 = fmul float %17107, %17111
  %17113 = fneg float %17112
  %17114 = tail call float @llvm.fma.f32(float %17111, float %17107, float %17113)
  %17115 = tail call float @llvm.fma.f32(float %17111, float %17109, float %17114)
  %17116 = fadd float %17112, %17115
  %17117 = fsub float %17116, %17112
  %17118 = fsub float %17115, %17117
  %17119 = fsub float %17106, %17116
  %17120 = fsub float %17106, %17119
  %17121 = fsub float %17120, %17116
  %17122 = fsub float %17121, %17118
  %17123 = fadd float %17119, %17122
  %17124 = fmul float %17110, %17123
  %17125 = fadd float %17111, %17124
  %17126 = fsub float %17125, %17111
  %17127 = fsub float %17124, %17126
  %17128 = fmul float %17125, %17125
  %17129 = fneg float %17128
  %17130 = tail call float @llvm.fma.f32(float %17125, float %17125, float %17129)
  %17131 = fmul float %17127, 2.000000e+00
  %17132 = tail call float @llvm.fma.f32(float %17125, float %17131, float %17130)
  %17133 = fadd float %17128, %17132
  %17134 = fsub float %17133, %17128
  %17135 = fsub float %17132, %17134
  %17136 = tail call float @llvm.fmuladd.f32(float %17133, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %17137 = tail call float @llvm.fmuladd.f32(float %17133, float %17136, float 0x3FD999BDE0000000)
  %17138 = sitofp i32 %17105 to float
  %17139 = fmul float %17138, 0x3FE62E4300000000
  %17140 = fneg float %17139
  %17141 = tail call float @llvm.fma.f32(float %17138, float 0x3FE62E4300000000, float %17140)
  %17142 = tail call float @llvm.fma.f32(float %17138, float 0xBE205C6100000000, float %17141)
  %17143 = fadd float %17139, %17142
  %17144 = fsub float %17143, %17139
  %17145 = fsub float %17142, %17144
  %17146 = tail call float @llvm.amdgcn.ldexp.f32(float %17125, i32 1)
  %17147 = fmul float %17125, %17133
  %17148 = fneg float %17147
  %17149 = tail call float @llvm.fma.f32(float %17133, float %17125, float %17148)
  %17150 = tail call float @llvm.fma.f32(float %17133, float %17127, float %17149)
  %17151 = tail call float @llvm.fma.f32(float %17135, float %17125, float %17150)
  %17152 = fadd float %17147, %17151
  %17153 = fsub float %17152, %17147
  %17154 = fsub float %17151, %17153
  %17155 = fmul float %17133, %17137
  %17156 = fneg float %17155
  %17157 = tail call float @llvm.fma.f32(float %17133, float %17137, float %17156)
  %17158 = tail call float @llvm.fma.f32(float %17135, float %17137, float %17157)
  %17159 = fadd float %17155, %17158
  %17160 = fsub float %17159, %17155
  %17161 = fsub float %17158, %17160
  %17162 = fadd float %17159, 0x3FE5555540000000
  %17163 = fadd float %17162, 0xBFE5555540000000
  %17164 = fsub float %17159, %17163
  %17165 = fadd float %17161, 0x3E2E720200000000
  %17166 = fadd float %17165, %17164
  %17167 = fadd float %17162, %17166
  %17168 = fsub float %17167, %17162
  %17169 = fsub float %17166, %17168
  %17170 = fmul float %17152, %17167
  %17171 = fneg float %17170
  %17172 = tail call float @llvm.fma.f32(float %17152, float %17167, float %17171)
  %17173 = tail call float @llvm.fma.f32(float %17152, float %17169, float %17172)
  %17174 = tail call float @llvm.fma.f32(float %17154, float %17167, float %17173)
  %17175 = tail call float @llvm.amdgcn.ldexp.f32(float %17127, i32 1)
  %17176 = fadd float %17170, %17174
  %17177 = fsub float %17176, %17170
  %17178 = fsub float %17174, %17177
  %17179 = fadd float %17146, %17176
  %17180 = fsub float %17179, %17146
  %17181 = fsub float %17176, %17180
  %17182 = fadd float %17175, %17178
  %17183 = fadd float %17182, %17181
  %17184 = fadd float %17179, %17183
  %17185 = fsub float %17184, %17179
  %17186 = fsub float %17183, %17185
  %17187 = fadd float %17143, %17184
  %17188 = fsub float %17187, %17143
  %17189 = fsub float %17187, %17188
  %17190 = fsub float %17143, %17189
  %17191 = fsub float %17184, %17188
  %17192 = fadd float %17191, %17190
  %17193 = fadd float %17145, %17186
  %17194 = fsub float %17193, %17145
  %17195 = fsub float %17193, %17194
  %17196 = fsub float %17145, %17195
  %17197 = fsub float %17186, %17194
  %17198 = fadd float %17197, %17196
  %17199 = fadd float %17193, %17192
  %17200 = fadd float %17187, %17199
  %17201 = fsub float %17200, %17187
  %17202 = fsub float %17199, %17201
  %17203 = fadd float %17198, %17202
  %17204 = fadd float %17200, %17203
  %17205 = fsub float %17204, %17200
  %17206 = fsub float %17203, %17205
  %17207 = fmul float %17204, 2.000000e+00
  %17208 = fneg float %17207
  %17209 = tail call float @llvm.fma.f32(float %17204, float 2.000000e+00, float %17208)
  %17210 = fmul float %17204, 0.000000e+00
  %17211 = tail call float @llvm.fma.f32(float %17206, float 2.000000e+00, float %17210)
  %17212 = fadd float %17209, %17211
  %17213 = fadd float %17207, %17212
  %17214 = fsub float %17213, %17207
  %17215 = fsub float %17212, %17214
  %17216 = tail call float @llvm.fabs.f32(float %17207) #3
  %17217 = fcmp oeq float %17216, 0x7FF0000000000000
  %17218 = select i1 %17217, float %17207, float %17213
  %17219 = tail call float @llvm.fabs.f32(float %17218) #3
  %17220 = fcmp oeq float %17219, 0x7FF0000000000000
  %17221 = select i1 %17220, float 0.000000e+00, float %17215
  %17222 = fcmp oeq float %17218, 0x40562E4300000000
  %17223 = select i1 %17222, float 0x3EE0000000000000, float 0.000000e+00
  %17224 = fsub float %17218, %17223
  %17225 = fadd float %17223, %17221
  %17226 = fmul float %17224, 0x3FF7154760000000
  %17227 = tail call float @llvm.rint.f32(float %17226)
  %17228 = fcmp ogt float %17224, 0x40562E4300000000
  %17229 = fcmp olt float %17224, 0xC059D1DA00000000
  %17230 = fneg float %17226
  %17231 = tail call float @llvm.fma.f32(float %17224, float 0x3FF7154760000000, float %17230)
  %17232 = tail call float @llvm.fma.f32(float %17224, float 0x3E54AE0BE0000000, float %17231)
  %17233 = fsub float %17226, %17227
  %17234 = fadd float %17232, %17233
  %17235 = tail call float @llvm.exp2.f32(float %17234)
  %17236 = fptosi float %17227 to i32
  %17237 = tail call float @llvm.amdgcn.ldexp.f32(float %17235, i32 %17236)
  %17238 = select i1 %17229, float 0.000000e+00, float %17237
  %17239 = select i1 %17228, float 0x7FF0000000000000, float %17238
  %17240 = tail call float @llvm.fma.f32(float %17239, float %17225, float %17239)
  %17241 = tail call float @llvm.fabs.f32(float %17239) #3
  %17242 = fcmp oeq float %17241, 0x7FF0000000000000
  %17243 = select i1 %17242, float %17239, float %17240
  %17244 = tail call float @llvm.fabs.f32(float %17243)
  %17245 = fcmp oeq float %17099, 0x7FF0000000000000
  %17246 = fcmp oeq float %17098, 0.000000e+00
  %17247 = select i1 %17245, float 0x7FF0000000000000, float %17244
  %17248 = select i1 %17246, float 0.000000e+00, float %17247
  %17249 = fcmp uno float %17098, 0.000000e+00
  %17250 = select i1 %17249, float 0x7FF8000000000000, float %17248
  %17251 = fadd contract float %17250, %17097
  %17252 = fadd contract float %17251, 0.000000e+00
  br label %17253

17253:                                            ; preds = %17538, %16920
  %17254 = phi i1 [ true, %16920 ], [ false, %17538 ]
  %17255 = phi i32 [ 0, %16920 ], [ 1, %17538 ]
  %17256 = phi float [ %17252, %16920 ], [ %17719, %17538 ]
  %17257 = zext i32 %17255 to i64
  %17258 = extractelement <3 x float> %16796, i64 %17257
  %17259 = fadd contract float %17258, -1.000000e+00
  %17260 = fmul contract float %17259, 2.500000e-01
  %17261 = fadd contract float %17260, 1.000000e+00
  %17262 = add nuw nsw i32 %17255, 1
  %17263 = zext i32 %17262 to i64
  %17264 = extractelement <3 x float> %16796, i64 %17263
  %17265 = fadd contract float %17264, -1.000000e+00
  %17266 = fmul contract float %17265, 2.500000e-01
  %17267 = fadd contract float %17266, 1.000000e+00
  %17268 = fadd contract float %17261, -1.000000e+00
  %17269 = tail call float @llvm.fabs.f32(float %17268)
  %17270 = tail call float @llvm.amdgcn.frexp.mant.f32(float %17269)
  %17271 = fcmp olt float %17270, 0x3FE5555560000000
  %17272 = zext i1 %17271 to i32
  %17273 = tail call float @llvm.amdgcn.ldexp.f32(float %17270, i32 %17272)
  %17274 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %17269)
  %17275 = sub nsw i32 %17274, %17272
  %17276 = fadd float %17273, -1.000000e+00
  %17277 = fadd float %17273, 1.000000e+00
  %17278 = fadd float %17277, -1.000000e+00
  %17279 = fsub float %17273, %17278
  %17280 = tail call float @llvm.amdgcn.rcp.f32(float %17277)
  %17281 = fmul float %17276, %17280
  %17282 = fmul float %17277, %17281
  %17283 = fneg float %17282
  %17284 = tail call float @llvm.fma.f32(float %17281, float %17277, float %17283)
  %17285 = tail call float @llvm.fma.f32(float %17281, float %17279, float %17284)
  %17286 = fadd float %17282, %17285
  %17287 = fsub float %17286, %17282
  %17288 = fsub float %17285, %17287
  %17289 = fsub float %17276, %17286
  %17290 = fsub float %17276, %17289
  %17291 = fsub float %17290, %17286
  %17292 = fsub float %17291, %17288
  %17293 = fadd float %17289, %17292
  %17294 = fmul float %17280, %17293
  %17295 = fadd float %17281, %17294
  %17296 = fsub float %17295, %17281
  %17297 = fsub float %17294, %17296
  %17298 = fmul float %17295, %17295
  %17299 = fneg float %17298
  %17300 = tail call float @llvm.fma.f32(float %17295, float %17295, float %17299)
  %17301 = fmul float %17297, 2.000000e+00
  %17302 = tail call float @llvm.fma.f32(float %17295, float %17301, float %17300)
  %17303 = fadd float %17298, %17302
  %17304 = fsub float %17303, %17298
  %17305 = fsub float %17302, %17304
  %17306 = tail call float @llvm.fmuladd.f32(float %17303, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %17307 = tail call float @llvm.fmuladd.f32(float %17303, float %17306, float 0x3FD999BDE0000000)
  %17308 = sitofp i32 %17275 to float
  %17309 = fmul float %17308, 0x3FE62E4300000000
  %17310 = fneg float %17309
  %17311 = tail call float @llvm.fma.f32(float %17308, float 0x3FE62E4300000000, float %17310)
  %17312 = tail call float @llvm.fma.f32(float %17308, float 0xBE205C6100000000, float %17311)
  %17313 = fadd float %17309, %17312
  %17314 = fsub float %17313, %17309
  %17315 = fsub float %17312, %17314
  %17316 = tail call float @llvm.amdgcn.ldexp.f32(float %17295, i32 1)
  %17317 = fmul float %17295, %17303
  %17318 = fneg float %17317
  %17319 = tail call float @llvm.fma.f32(float %17303, float %17295, float %17318)
  %17320 = tail call float @llvm.fma.f32(float %17303, float %17297, float %17319)
  %17321 = tail call float @llvm.fma.f32(float %17305, float %17295, float %17320)
  %17322 = fadd float %17317, %17321
  %17323 = fsub float %17322, %17317
  %17324 = fsub float %17321, %17323
  %17325 = fmul float %17303, %17307
  %17326 = fneg float %17325
  %17327 = tail call float @llvm.fma.f32(float %17303, float %17307, float %17326)
  %17328 = tail call float @llvm.fma.f32(float %17305, float %17307, float %17327)
  %17329 = fadd float %17325, %17328
  %17330 = fsub float %17329, %17325
  %17331 = fsub float %17328, %17330
  %17332 = fadd float %17329, 0x3FE5555540000000
  %17333 = fadd float %17332, 0xBFE5555540000000
  %17334 = fsub float %17329, %17333
  %17335 = fadd float %17331, 0x3E2E720200000000
  %17336 = fadd float %17335, %17334
  %17337 = fadd float %17332, %17336
  %17338 = fsub float %17337, %17332
  %17339 = fsub float %17336, %17338
  %17340 = fmul float %17322, %17337
  %17341 = fneg float %17340
  %17342 = tail call float @llvm.fma.f32(float %17322, float %17337, float %17341)
  %17343 = tail call float @llvm.fma.f32(float %17322, float %17339, float %17342)
  %17344 = tail call float @llvm.fma.f32(float %17324, float %17337, float %17343)
  %17345 = tail call float @llvm.amdgcn.ldexp.f32(float %17297, i32 1)
  %17346 = fadd float %17340, %17344
  %17347 = fsub float %17346, %17340
  %17348 = fsub float %17344, %17347
  %17349 = fadd float %17316, %17346
  %17350 = fsub float %17349, %17316
  %17351 = fsub float %17346, %17350
  %17352 = fadd float %17345, %17348
  %17353 = fadd float %17352, %17351
  %17354 = fadd float %17349, %17353
  %17355 = fsub float %17354, %17349
  %17356 = fsub float %17353, %17355
  %17357 = fadd float %17313, %17354
  %17358 = fsub float %17357, %17313
  %17359 = fsub float %17357, %17358
  %17360 = fsub float %17313, %17359
  %17361 = fsub float %17354, %17358
  %17362 = fadd float %17361, %17360
  %17363 = fadd float %17315, %17356
  %17364 = fsub float %17363, %17315
  %17365 = fsub float %17363, %17364
  %17366 = fsub float %17315, %17365
  %17367 = fsub float %17356, %17364
  %17368 = fadd float %17367, %17366
  %17369 = fadd float %17363, %17362
  %17370 = fadd float %17357, %17369
  %17371 = fsub float %17370, %17357
  %17372 = fsub float %17369, %17371
  %17373 = fadd float %17368, %17372
  %17374 = fadd float %17370, %17373
  %17375 = fsub float %17374, %17370
  %17376 = fsub float %17373, %17375
  %17377 = fmul float %17374, 2.000000e+00
  %17378 = fneg float %17377
  %17379 = tail call float @llvm.fma.f32(float %17374, float 2.000000e+00, float %17378)
  %17380 = fmul float %17374, 0.000000e+00
  %17381 = tail call float @llvm.fma.f32(float %17376, float 2.000000e+00, float %17380)
  %17382 = fadd float %17379, %17381
  %17383 = fadd float %17377, %17382
  %17384 = fsub float %17383, %17377
  %17385 = fsub float %17382, %17384
  %17386 = tail call float @llvm.fabs.f32(float %17377) #3
  %17387 = fcmp oeq float %17386, 0x7FF0000000000000
  %17388 = select i1 %17387, float %17377, float %17383
  %17389 = tail call float @llvm.fabs.f32(float %17388) #3
  %17390 = fcmp oeq float %17389, 0x7FF0000000000000
  %17391 = select i1 %17390, float 0.000000e+00, float %17385
  %17392 = fcmp oeq float %17388, 0x40562E4300000000
  %17393 = select i1 %17392, float 0x3EE0000000000000, float 0.000000e+00
  %17394 = fsub float %17388, %17393
  %17395 = fadd float %17393, %17391
  %17396 = fmul float %17394, 0x3FF7154760000000
  %17397 = tail call float @llvm.rint.f32(float %17396)
  %17398 = fcmp ogt float %17394, 0x40562E4300000000
  %17399 = fcmp olt float %17394, 0xC059D1DA00000000
  %17400 = fneg float %17396
  %17401 = tail call float @llvm.fma.f32(float %17394, float 0x3FF7154760000000, float %17400)
  %17402 = tail call float @llvm.fma.f32(float %17394, float 0x3E54AE0BE0000000, float %17401)
  %17403 = fsub float %17396, %17397
  %17404 = fadd float %17402, %17403
  %17405 = tail call float @llvm.exp2.f32(float %17404)
  %17406 = fptosi float %17397 to i32
  %17407 = tail call float @llvm.amdgcn.ldexp.f32(float %17405, i32 %17406)
  %17408 = select i1 %17399, float 0.000000e+00, float %17407
  %17409 = select i1 %17398, float 0x7FF0000000000000, float %17408
  %17410 = tail call float @llvm.fma.f32(float %17409, float %17395, float %17409)
  %17411 = tail call float @llvm.fabs.f32(float %17409) #3
  %17412 = fcmp oeq float %17411, 0x7FF0000000000000
  %17413 = select i1 %17412, float %17409, float %17410
  %17414 = tail call float @llvm.fabs.f32(float %17413)
  %17415 = fcmp oeq float %17269, 0x7FF0000000000000
  %17416 = fcmp oeq float %17268, 0.000000e+00
  %17417 = select i1 %17415, float 0x7FF0000000000000, float %17414
  %17418 = select i1 %17416, float 0.000000e+00, float %17417
  %17419 = fcmp uno float %17268, 0.000000e+00
  %17420 = select i1 %17419, float 0x7FF8000000000000, float %17418
  %17421 = fmul contract float %17267, 0x400921CAC0000000
  %17422 = tail call float @llvm.fabs.f32(float %17421)
  %17423 = fcmp olt float %17422, 1.310720e+05
  br i1 %17423, label %17530, label %17424

17424:                                            ; preds = %17253
  %17425 = bitcast float %17422 to i32
  %17426 = lshr i32 %17425, 23
  %17427 = and i32 %17425, 8388607
  %17428 = or i32 %17427, 8388608
  %17429 = zext i32 %17428 to i64
  %17430 = mul nuw nsw i64 %17429, 4266746795
  %17431 = trunc i64 %17430 to i32
  %17432 = lshr i64 %17430, 32
  %17433 = mul nuw nsw i64 %17429, 1011060801
  %17434 = add nuw nsw i64 %17432, %17433
  %17435 = trunc i64 %17434 to i32
  %17436 = lshr i64 %17434, 32
  %17437 = mul nuw nsw i64 %17429, 3680671129
  %17438 = add nuw nsw i64 %17436, %17437
  %17439 = trunc i64 %17438 to i32
  %17440 = lshr i64 %17438, 32
  %17441 = mul nuw nsw i64 %17429, 4113882560
  %17442 = add nuw nsw i64 %17440, %17441
  %17443 = trunc i64 %17442 to i32
  %17444 = lshr i64 %17442, 32
  %17445 = mul nuw nsw i64 %17429, 4230436817
  %17446 = add nuw nsw i64 %17444, %17445
  %17447 = trunc i64 %17446 to i32
  %17448 = lshr i64 %17446, 32
  %17449 = mul nuw nsw i64 %17429, 1313084713
  %17450 = add nuw nsw i64 %17448, %17449
  %17451 = trunc i64 %17450 to i32
  %17452 = lshr i64 %17450, 32
  %17453 = mul nuw nsw i64 %17429, 2734261102
  %17454 = add nuw nsw i64 %17452, %17453
  %17455 = trunc i64 %17454 to i32
  %17456 = lshr i64 %17454, 32
  %17457 = trunc i64 %17456 to i32
  %17458 = add nsw i32 %17426, -120
  %17459 = icmp ugt i32 %17458, 63
  %17460 = select i1 %17459, i32 %17451, i32 %17457
  %17461 = select i1 %17459, i32 %17447, i32 %17455
  %17462 = select i1 %17459, i32 %17443, i32 %17451
  %17463 = select i1 %17459, i32 %17439, i32 %17447
  %17464 = select i1 %17459, i32 %17435, i32 %17443
  %17465 = select i1 %17459, i32 %17431, i32 %17439
  %17466 = select i1 %17459, i32 -64, i32 0
  %17467 = add nsw i32 %17466, %17458
  %17468 = icmp ugt i32 %17467, 31
  %17469 = select i1 %17468, i32 %17461, i32 %17460
  %17470 = select i1 %17468, i32 %17462, i32 %17461
  %17471 = select i1 %17468, i32 %17463, i32 %17462
  %17472 = select i1 %17468, i32 %17464, i32 %17463
  %17473 = select i1 %17468, i32 %17465, i32 %17464
  %17474 = select i1 %17468, i32 -32, i32 0
  %17475 = add nsw i32 %17474, %17467
  %17476 = icmp ugt i32 %17475, 31
  %17477 = select i1 %17476, i32 %17470, i32 %17469
  %17478 = select i1 %17476, i32 %17471, i32 %17470
  %17479 = select i1 %17476, i32 %17472, i32 %17471
  %17480 = select i1 %17476, i32 %17473, i32 %17472
  %17481 = select i1 %17476, i32 -32, i32 0
  %17482 = add nsw i32 %17481, %17475
  %17483 = icmp eq i32 %17482, 0
  %17484 = sub nsw i32 32, %17482
  %17485 = tail call i32 @llvm.fshr.i32(i32 %17477, i32 %17478, i32 %17484)
  %17486 = tail call i32 @llvm.fshr.i32(i32 %17478, i32 %17479, i32 %17484)
  %17487 = tail call i32 @llvm.fshr.i32(i32 %17479, i32 %17480, i32 %17484)
  %17488 = select i1 %17483, i32 %17477, i32 %17485
  %17489 = select i1 %17483, i32 %17478, i32 %17486
  %17490 = select i1 %17483, i32 %17479, i32 %17487
  %17491 = lshr i32 %17488, 29
  %17492 = tail call i32 @llvm.fshl.i32(i32 %17488, i32 %17489, i32 2)
  %17493 = tail call i32 @llvm.fshl.i32(i32 %17489, i32 %17490, i32 2)
  %17494 = tail call i32 @llvm.fshl.i32(i32 %17490, i32 %17480, i32 2)
  %17495 = and i32 %17491, 1
  %17496 = sub nsw i32 0, %17495
  %17497 = shl i32 %17491, 31
  %17498 = xor i32 %17492, %17496
  %17499 = xor i32 %17493, %17496
  %17500 = xor i32 %17494, %17496
  %17501 = tail call i32 @llvm.ctlz.i32(i32 %17498, i1 false), !range !8
  %17502 = sub nsw i32 31, %17501
  %17503 = tail call i32 @llvm.fshr.i32(i32 %17498, i32 %17499, i32 %17502)
  %17504 = tail call i32 @llvm.fshr.i32(i32 %17499, i32 %17500, i32 %17502)
  %17505 = shl nuw nsw i32 %17501, 23
  %17506 = sub nuw nsw i32 1056964608, %17505
  %17507 = lshr i32 %17503, 9
  %17508 = or i32 %17507, %17506
  %17509 = or i32 %17508, %17497
  %17510 = bitcast i32 %17509 to float
  %17511 = tail call i32 @llvm.fshl.i32(i32 %17503, i32 %17504, i32 23)
  %17512 = tail call i32 @llvm.ctlz.i32(i32 %17511, i1 false), !range !8
  %17513 = fmul float %17510, 0x3FF921FB40000000
  %17514 = add nuw nsw i32 %17512, %17501
  %17515 = shl nuw nsw i32 %17514, 23
  %17516 = sub nuw nsw i32 855638016, %17515
  %17517 = sub nsw i32 31, %17512
  %17518 = tail call i32 @llvm.fshr.i32(i32 %17511, i32 %17504, i32 %17517)
  %17519 = lshr i32 %17518, 9
  %17520 = or i32 %17516, %17519
  %17521 = or i32 %17520, %17497
  %17522 = bitcast i32 %17521 to float
  %17523 = fneg float %17513
  %17524 = tail call float @llvm.fma.f32(float %17510, float 0x3FF921FB40000000, float %17523)
  %17525 = tail call float @llvm.fma.f32(float %17510, float 0x3E74442D00000000, float %17524)
  %17526 = tail call float @llvm.fma.f32(float %17522, float 0x3FF921FB40000000, float %17525)
  %17527 = fadd float %17513, %17526
  %17528 = lshr i32 %17488, 30
  %17529 = add nuw nsw i32 %17495, %17528
  br label %17538

17530:                                            ; preds = %17253
  %17531 = fmul float %17422, 0x3FE45F3060000000
  %17532 = tail call float @llvm.rint.f32(float %17531)
  %17533 = tail call float @llvm.fma.f32(float %17532, float 0xBFF921FB40000000, float %17422)
  %17534 = tail call float @llvm.fma.f32(float %17532, float 0xBE74442D00000000, float %17533)
  %17535 = tail call float @llvm.fma.f32(float %17532, float 0xBCF8469880000000, float %17534)
  %17536 = fptosi float %17532 to i32
  %17537 = bitcast float %17422 to i32
  br label %17538

17538:                                            ; preds = %17530, %17424
  %17539 = phi i32 [ %17537, %17530 ], [ %17425, %17424 ]
  %17540 = phi float [ %17535, %17530 ], [ %17527, %17424 ]
  %17541 = phi i32 [ %17536, %17530 ], [ %17529, %17424 ]
  %17542 = fmul float %17540, %17540
  %17543 = tail call float @llvm.fmuladd.f32(float %17542, float 0xBF29833040000000, float 0x3F81103880000000)
  %17544 = tail call float @llvm.fmuladd.f32(float %17542, float %17543, float 0xBFC55553A0000000)
  %17545 = fmul float %17542, %17544
  %17546 = tail call float @llvm.fmuladd.f32(float %17540, float %17545, float %17540)
  %17547 = tail call float @llvm.fmuladd.f32(float %17542, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %17548 = tail call float @llvm.fmuladd.f32(float %17542, float %17547, float 0x3FA5557EE0000000)
  %17549 = tail call float @llvm.fmuladd.f32(float %17542, float %17548, float 0xBFE0000080000000)
  %17550 = tail call float @llvm.fmuladd.f32(float %17542, float %17549, float 1.000000e+00)
  %17551 = and i32 %17541, 1
  %17552 = icmp eq i32 %17551, 0
  %17553 = select i1 %17552, float %17546, float %17550
  %17554 = bitcast float %17553 to i32
  %17555 = shl i32 %17541, 30
  %17556 = and i32 %17555, -2147483648
  %17557 = bitcast float %17421 to i32
  %17558 = xor i32 %17539, %17557
  %17559 = xor i32 %17558, %17556
  %17560 = xor i32 %17559, %17554
  %17561 = bitcast i32 %17560 to float
  %17562 = tail call i1 @llvm.amdgcn.class.f32(float %17422, i32 504)
  %17563 = select i1 %17562, float %17561, float 0x7FF8000000000000
  %17564 = tail call float @llvm.fabs.f32(float %17563)
  %17565 = tail call float @llvm.amdgcn.frexp.mant.f32(float %17564)
  %17566 = fcmp olt float %17565, 0x3FE5555560000000
  %17567 = zext i1 %17566 to i32
  %17568 = tail call float @llvm.amdgcn.ldexp.f32(float %17565, i32 %17567)
  %17569 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %17564)
  %17570 = sub nsw i32 %17569, %17567
  %17571 = fadd float %17568, -1.000000e+00
  %17572 = fadd float %17568, 1.000000e+00
  %17573 = fadd float %17572, -1.000000e+00
  %17574 = fsub float %17568, %17573
  %17575 = tail call float @llvm.amdgcn.rcp.f32(float %17572)
  %17576 = fmul float %17571, %17575
  %17577 = fmul float %17572, %17576
  %17578 = fneg float %17577
  %17579 = tail call float @llvm.fma.f32(float %17576, float %17572, float %17578)
  %17580 = tail call float @llvm.fma.f32(float %17576, float %17574, float %17579)
  %17581 = fadd float %17577, %17580
  %17582 = fsub float %17581, %17577
  %17583 = fsub float %17580, %17582
  %17584 = fsub float %17571, %17581
  %17585 = fsub float %17571, %17584
  %17586 = fsub float %17585, %17581
  %17587 = fsub float %17586, %17583
  %17588 = fadd float %17584, %17587
  %17589 = fmul float %17575, %17588
  %17590 = fadd float %17576, %17589
  %17591 = fsub float %17590, %17576
  %17592 = fsub float %17589, %17591
  %17593 = fmul float %17590, %17590
  %17594 = fneg float %17593
  %17595 = tail call float @llvm.fma.f32(float %17590, float %17590, float %17594)
  %17596 = fmul float %17592, 2.000000e+00
  %17597 = tail call float @llvm.fma.f32(float %17590, float %17596, float %17595)
  %17598 = fadd float %17593, %17597
  %17599 = fsub float %17598, %17593
  %17600 = fsub float %17597, %17599
  %17601 = tail call float @llvm.fmuladd.f32(float %17598, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %17602 = tail call float @llvm.fmuladd.f32(float %17598, float %17601, float 0x3FD999BDE0000000)
  %17603 = sitofp i32 %17570 to float
  %17604 = fmul float %17603, 0x3FE62E4300000000
  %17605 = fneg float %17604
  %17606 = tail call float @llvm.fma.f32(float %17603, float 0x3FE62E4300000000, float %17605)
  %17607 = tail call float @llvm.fma.f32(float %17603, float 0xBE205C6100000000, float %17606)
  %17608 = fadd float %17604, %17607
  %17609 = fsub float %17608, %17604
  %17610 = fsub float %17607, %17609
  %17611 = tail call float @llvm.amdgcn.ldexp.f32(float %17590, i32 1)
  %17612 = fmul float %17590, %17598
  %17613 = fneg float %17612
  %17614 = tail call float @llvm.fma.f32(float %17598, float %17590, float %17613)
  %17615 = tail call float @llvm.fma.f32(float %17598, float %17592, float %17614)
  %17616 = tail call float @llvm.fma.f32(float %17600, float %17590, float %17615)
  %17617 = fadd float %17612, %17616
  %17618 = fsub float %17617, %17612
  %17619 = fsub float %17616, %17618
  %17620 = fmul float %17598, %17602
  %17621 = fneg float %17620
  %17622 = tail call float @llvm.fma.f32(float %17598, float %17602, float %17621)
  %17623 = tail call float @llvm.fma.f32(float %17600, float %17602, float %17622)
  %17624 = fadd float %17620, %17623
  %17625 = fsub float %17624, %17620
  %17626 = fsub float %17623, %17625
  %17627 = fadd float %17624, 0x3FE5555540000000
  %17628 = fadd float %17627, 0xBFE5555540000000
  %17629 = fsub float %17624, %17628
  %17630 = fadd float %17626, 0x3E2E720200000000
  %17631 = fadd float %17630, %17629
  %17632 = fadd float %17627, %17631
  %17633 = fsub float %17632, %17627
  %17634 = fsub float %17631, %17633
  %17635 = fmul float %17617, %17632
  %17636 = fneg float %17635
  %17637 = tail call float @llvm.fma.f32(float %17617, float %17632, float %17636)
  %17638 = tail call float @llvm.fma.f32(float %17617, float %17634, float %17637)
  %17639 = tail call float @llvm.fma.f32(float %17619, float %17632, float %17638)
  %17640 = tail call float @llvm.amdgcn.ldexp.f32(float %17592, i32 1)
  %17641 = fadd float %17635, %17639
  %17642 = fsub float %17641, %17635
  %17643 = fsub float %17639, %17642
  %17644 = fadd float %17611, %17641
  %17645 = fsub float %17644, %17611
  %17646 = fsub float %17641, %17645
  %17647 = fadd float %17640, %17643
  %17648 = fadd float %17647, %17646
  %17649 = fadd float %17644, %17648
  %17650 = fsub float %17649, %17644
  %17651 = fsub float %17648, %17650
  %17652 = fadd float %17608, %17649
  %17653 = fsub float %17652, %17608
  %17654 = fsub float %17652, %17653
  %17655 = fsub float %17608, %17654
  %17656 = fsub float %17649, %17653
  %17657 = fadd float %17656, %17655
  %17658 = fadd float %17610, %17651
  %17659 = fsub float %17658, %17610
  %17660 = fsub float %17658, %17659
  %17661 = fsub float %17610, %17660
  %17662 = fsub float %17651, %17659
  %17663 = fadd float %17662, %17661
  %17664 = fadd float %17658, %17657
  %17665 = fadd float %17652, %17664
  %17666 = fsub float %17665, %17652
  %17667 = fsub float %17664, %17666
  %17668 = fadd float %17663, %17667
  %17669 = fadd float %17665, %17668
  %17670 = fsub float %17669, %17665
  %17671 = fsub float %17668, %17670
  %17672 = fmul float %17669, 2.000000e+00
  %17673 = fneg float %17672
  %17674 = tail call float @llvm.fma.f32(float %17669, float 2.000000e+00, float %17673)
  %17675 = fmul float %17669, 0.000000e+00
  %17676 = tail call float @llvm.fma.f32(float %17671, float 2.000000e+00, float %17675)
  %17677 = fadd float %17674, %17676
  %17678 = fadd float %17672, %17677
  %17679 = fsub float %17678, %17672
  %17680 = fsub float %17677, %17679
  %17681 = tail call float @llvm.fabs.f32(float %17672) #3
  %17682 = fcmp oeq float %17681, 0x7FF0000000000000
  %17683 = select i1 %17682, float %17672, float %17678
  %17684 = tail call float @llvm.fabs.f32(float %17683) #3
  %17685 = fcmp oeq float %17684, 0x7FF0000000000000
  %17686 = select i1 %17685, float 0.000000e+00, float %17680
  %17687 = fcmp oeq float %17683, 0x40562E4300000000
  %17688 = select i1 %17687, float 0x3EE0000000000000, float 0.000000e+00
  %17689 = fsub float %17683, %17688
  %17690 = fadd float %17688, %17686
  %17691 = fmul float %17689, 0x3FF7154760000000
  %17692 = tail call float @llvm.rint.f32(float %17691)
  %17693 = fcmp ogt float %17689, 0x40562E4300000000
  %17694 = fcmp olt float %17689, 0xC059D1DA00000000
  %17695 = fneg float %17691
  %17696 = tail call float @llvm.fma.f32(float %17689, float 0x3FF7154760000000, float %17695)
  %17697 = tail call float @llvm.fma.f32(float %17689, float 0x3E54AE0BE0000000, float %17696)
  %17698 = fsub float %17691, %17692
  %17699 = fadd float %17697, %17698
  %17700 = tail call float @llvm.exp2.f32(float %17699)
  %17701 = fptosi float %17692 to i32
  %17702 = tail call float @llvm.amdgcn.ldexp.f32(float %17700, i32 %17701)
  %17703 = select i1 %17694, float 0.000000e+00, float %17702
  %17704 = select i1 %17693, float 0x7FF0000000000000, float %17703
  %17705 = tail call float @llvm.fma.f32(float %17704, float %17690, float %17704)
  %17706 = tail call float @llvm.fabs.f32(float %17704) #3
  %17707 = fcmp oeq float %17706, 0x7FF0000000000000
  %17708 = select i1 %17707, float %17704, float %17705
  %17709 = tail call float @llvm.fabs.f32(float %17708)
  %17710 = fcmp oeq float %17564, 0x7FF0000000000000
  %17711 = fcmp oeq float %17563, 0.000000e+00
  %17712 = fcmp uno float %17563, 0.000000e+00
  %17713 = fmul contract float %17709, 1.000000e+01
  %17714 = fadd contract float %17713, 1.000000e+00
  %17715 = select i1 %17710, float 0x7FF0000000000000, float %17714
  %17716 = select i1 %17711, float 1.000000e+00, float %17715
  %17717 = select i1 %17712, float 0x7FF8000000000000, float %17716
  %17718 = fmul contract float %17420, %17717
  %17719 = fadd contract float %17256, %17718
  br i1 %17254, label %17253, label %17720, !llvm.loop !9

17720:                                            ; preds = %17538
  %17721 = load float, float addrspace(1)* %0, align 4, !tbaa !4
  %17722 = fadd contract float %17721, -1.000000e+00
  %17723 = fmul contract float %17722, 2.500000e-01
  %17724 = fadd contract float %17723, 1.000000e+00
  %17725 = load float, float addrspace(1)* %3, align 4, !tbaa !4
  %17726 = fadd contract float %17725, -1.000000e+00
  %17727 = fmul contract float %17726, 2.500000e-01
  %17728 = fadd contract float %17727, 1.000000e+00
  %17729 = fmul contract float %17724, 0x400921CAC0000000
  %17730 = tail call float @llvm.fabs.f32(float %17729)
  %17731 = fcmp olt float %17730, 1.310720e+05
  br i1 %17731, label %17838, label %17732

17732:                                            ; preds = %17720
  %17733 = bitcast float %17730 to i32
  %17734 = lshr i32 %17733, 23
  %17735 = and i32 %17733, 8388607
  %17736 = or i32 %17735, 8388608
  %17737 = zext i32 %17736 to i64
  %17738 = mul nuw nsw i64 %17737, 4266746795
  %17739 = trunc i64 %17738 to i32
  %17740 = lshr i64 %17738, 32
  %17741 = mul nuw nsw i64 %17737, 1011060801
  %17742 = add nuw nsw i64 %17740, %17741
  %17743 = trunc i64 %17742 to i32
  %17744 = lshr i64 %17742, 32
  %17745 = mul nuw nsw i64 %17737, 3680671129
  %17746 = add nuw nsw i64 %17744, %17745
  %17747 = trunc i64 %17746 to i32
  %17748 = lshr i64 %17746, 32
  %17749 = mul nuw nsw i64 %17737, 4113882560
  %17750 = add nuw nsw i64 %17748, %17749
  %17751 = trunc i64 %17750 to i32
  %17752 = lshr i64 %17750, 32
  %17753 = mul nuw nsw i64 %17737, 4230436817
  %17754 = add nuw nsw i64 %17752, %17753
  %17755 = trunc i64 %17754 to i32
  %17756 = lshr i64 %17754, 32
  %17757 = mul nuw nsw i64 %17737, 1313084713
  %17758 = add nuw nsw i64 %17756, %17757
  %17759 = trunc i64 %17758 to i32
  %17760 = lshr i64 %17758, 32
  %17761 = mul nuw nsw i64 %17737, 2734261102
  %17762 = add nuw nsw i64 %17760, %17761
  %17763 = trunc i64 %17762 to i32
  %17764 = lshr i64 %17762, 32
  %17765 = trunc i64 %17764 to i32
  %17766 = add nsw i32 %17734, -120
  %17767 = icmp ugt i32 %17766, 63
  %17768 = select i1 %17767, i32 %17759, i32 %17765
  %17769 = select i1 %17767, i32 %17755, i32 %17763
  %17770 = select i1 %17767, i32 %17751, i32 %17759
  %17771 = select i1 %17767, i32 %17747, i32 %17755
  %17772 = select i1 %17767, i32 %17743, i32 %17751
  %17773 = select i1 %17767, i32 %17739, i32 %17747
  %17774 = select i1 %17767, i32 -64, i32 0
  %17775 = add nsw i32 %17774, %17766
  %17776 = icmp ugt i32 %17775, 31
  %17777 = select i1 %17776, i32 %17769, i32 %17768
  %17778 = select i1 %17776, i32 %17770, i32 %17769
  %17779 = select i1 %17776, i32 %17771, i32 %17770
  %17780 = select i1 %17776, i32 %17772, i32 %17771
  %17781 = select i1 %17776, i32 %17773, i32 %17772
  %17782 = select i1 %17776, i32 -32, i32 0
  %17783 = add nsw i32 %17782, %17775
  %17784 = icmp ugt i32 %17783, 31
  %17785 = select i1 %17784, i32 %17778, i32 %17777
  %17786 = select i1 %17784, i32 %17779, i32 %17778
  %17787 = select i1 %17784, i32 %17780, i32 %17779
  %17788 = select i1 %17784, i32 %17781, i32 %17780
  %17789 = select i1 %17784, i32 -32, i32 0
  %17790 = add nsw i32 %17789, %17783
  %17791 = icmp eq i32 %17790, 0
  %17792 = sub nsw i32 32, %17790
  %17793 = tail call i32 @llvm.fshr.i32(i32 %17785, i32 %17786, i32 %17792)
  %17794 = tail call i32 @llvm.fshr.i32(i32 %17786, i32 %17787, i32 %17792)
  %17795 = tail call i32 @llvm.fshr.i32(i32 %17787, i32 %17788, i32 %17792)
  %17796 = select i1 %17791, i32 %17785, i32 %17793
  %17797 = select i1 %17791, i32 %17786, i32 %17794
  %17798 = select i1 %17791, i32 %17787, i32 %17795
  %17799 = lshr i32 %17796, 29
  %17800 = tail call i32 @llvm.fshl.i32(i32 %17796, i32 %17797, i32 2)
  %17801 = tail call i32 @llvm.fshl.i32(i32 %17797, i32 %17798, i32 2)
  %17802 = tail call i32 @llvm.fshl.i32(i32 %17798, i32 %17788, i32 2)
  %17803 = and i32 %17799, 1
  %17804 = sub nsw i32 0, %17803
  %17805 = shl i32 %17799, 31
  %17806 = xor i32 %17800, %17804
  %17807 = xor i32 %17801, %17804
  %17808 = xor i32 %17802, %17804
  %17809 = tail call i32 @llvm.ctlz.i32(i32 %17806, i1 false), !range !8
  %17810 = sub nsw i32 31, %17809
  %17811 = tail call i32 @llvm.fshr.i32(i32 %17806, i32 %17807, i32 %17810)
  %17812 = tail call i32 @llvm.fshr.i32(i32 %17807, i32 %17808, i32 %17810)
  %17813 = shl nuw nsw i32 %17809, 23
  %17814 = sub nuw nsw i32 1056964608, %17813
  %17815 = lshr i32 %17811, 9
  %17816 = or i32 %17815, %17814
  %17817 = or i32 %17816, %17805
  %17818 = bitcast i32 %17817 to float
  %17819 = tail call i32 @llvm.fshl.i32(i32 %17811, i32 %17812, i32 23)
  %17820 = tail call i32 @llvm.ctlz.i32(i32 %17819, i1 false), !range !8
  %17821 = fmul float %17818, 0x3FF921FB40000000
  %17822 = add nuw nsw i32 %17820, %17809
  %17823 = shl nuw nsw i32 %17822, 23
  %17824 = sub nuw nsw i32 855638016, %17823
  %17825 = sub nsw i32 31, %17820
  %17826 = tail call i32 @llvm.fshr.i32(i32 %17819, i32 %17812, i32 %17825)
  %17827 = lshr i32 %17826, 9
  %17828 = or i32 %17824, %17827
  %17829 = or i32 %17828, %17805
  %17830 = bitcast i32 %17829 to float
  %17831 = fneg float %17821
  %17832 = tail call float @llvm.fma.f32(float %17818, float 0x3FF921FB40000000, float %17831)
  %17833 = tail call float @llvm.fma.f32(float %17818, float 0x3E74442D00000000, float %17832)
  %17834 = tail call float @llvm.fma.f32(float %17830, float 0x3FF921FB40000000, float %17833)
  %17835 = fadd float %17821, %17834
  %17836 = lshr i32 %17796, 30
  %17837 = add nuw nsw i32 %17803, %17836
  br label %17846

17838:                                            ; preds = %17720
  %17839 = fmul float %17730, 0x3FE45F3060000000
  %17840 = tail call float @llvm.rint.f32(float %17839)
  %17841 = tail call float @llvm.fma.f32(float %17840, float 0xBFF921FB40000000, float %17730)
  %17842 = tail call float @llvm.fma.f32(float %17840, float 0xBE74442D00000000, float %17841)
  %17843 = tail call float @llvm.fma.f32(float %17840, float 0xBCF8469880000000, float %17842)
  %17844 = fptosi float %17840 to i32
  %17845 = bitcast float %17730 to i32
  br label %17846

17846:                                            ; preds = %17838, %17732
  %17847 = phi i32 [ %17845, %17838 ], [ %17733, %17732 ]
  %17848 = phi float [ %17843, %17838 ], [ %17835, %17732 ]
  %17849 = phi i32 [ %17844, %17838 ], [ %17837, %17732 ]
  %17850 = fmul float %17848, %17848
  %17851 = tail call float @llvm.fmuladd.f32(float %17850, float 0xBF29833040000000, float 0x3F81103880000000)
  %17852 = tail call float @llvm.fmuladd.f32(float %17850, float %17851, float 0xBFC55553A0000000)
  %17853 = fmul float %17850, %17852
  %17854 = tail call float @llvm.fmuladd.f32(float %17848, float %17853, float %17848)
  %17855 = tail call float @llvm.fmuladd.f32(float %17850, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %17856 = tail call float @llvm.fmuladd.f32(float %17850, float %17855, float 0x3FA5557EE0000000)
  %17857 = tail call float @llvm.fmuladd.f32(float %17850, float %17856, float 0xBFE0000080000000)
  %17858 = tail call float @llvm.fmuladd.f32(float %17850, float %17857, float 1.000000e+00)
  %17859 = and i32 %17849, 1
  %17860 = icmp eq i32 %17859, 0
  %17861 = select i1 %17860, float %17854, float %17858
  %17862 = bitcast float %17861 to i32
  %17863 = shl i32 %17849, 30
  %17864 = and i32 %17863, -2147483648
  %17865 = bitcast float %17729 to i32
  %17866 = xor i32 %17847, %17865
  %17867 = xor i32 %17866, %17864
  %17868 = xor i32 %17867, %17862
  %17869 = bitcast i32 %17868 to float
  %17870 = tail call i1 @llvm.amdgcn.class.f32(float %17730, i32 504)
  %17871 = select i1 %17870, float %17869, float 0x7FF8000000000000
  %17872 = tail call float @llvm.fabs.f32(float %17871)
  %17873 = tail call float @llvm.amdgcn.frexp.mant.f32(float %17872)
  %17874 = fcmp olt float %17873, 0x3FE5555560000000
  %17875 = zext i1 %17874 to i32
  %17876 = tail call float @llvm.amdgcn.ldexp.f32(float %17873, i32 %17875)
  %17877 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %17872)
  %17878 = sub nsw i32 %17877, %17875
  %17879 = fadd float %17876, -1.000000e+00
  %17880 = fadd float %17876, 1.000000e+00
  %17881 = fadd float %17880, -1.000000e+00
  %17882 = fsub float %17876, %17881
  %17883 = tail call float @llvm.amdgcn.rcp.f32(float %17880)
  %17884 = fmul float %17879, %17883
  %17885 = fmul float %17880, %17884
  %17886 = fneg float %17885
  %17887 = tail call float @llvm.fma.f32(float %17884, float %17880, float %17886)
  %17888 = tail call float @llvm.fma.f32(float %17884, float %17882, float %17887)
  %17889 = fadd float %17885, %17888
  %17890 = fsub float %17889, %17885
  %17891 = fsub float %17888, %17890
  %17892 = fsub float %17879, %17889
  %17893 = fsub float %17879, %17892
  %17894 = fsub float %17893, %17889
  %17895 = fsub float %17894, %17891
  %17896 = fadd float %17892, %17895
  %17897 = fmul float %17883, %17896
  %17898 = fadd float %17884, %17897
  %17899 = fsub float %17898, %17884
  %17900 = fsub float %17897, %17899
  %17901 = fmul float %17898, %17898
  %17902 = fneg float %17901
  %17903 = tail call float @llvm.fma.f32(float %17898, float %17898, float %17902)
  %17904 = fmul float %17900, 2.000000e+00
  %17905 = tail call float @llvm.fma.f32(float %17898, float %17904, float %17903)
  %17906 = fadd float %17901, %17905
  %17907 = fsub float %17906, %17901
  %17908 = fsub float %17905, %17907
  %17909 = tail call float @llvm.fmuladd.f32(float %17906, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %17910 = tail call float @llvm.fmuladd.f32(float %17906, float %17909, float 0x3FD999BDE0000000)
  %17911 = sitofp i32 %17878 to float
  %17912 = fmul float %17911, 0x3FE62E4300000000
  %17913 = fneg float %17912
  %17914 = tail call float @llvm.fma.f32(float %17911, float 0x3FE62E4300000000, float %17913)
  %17915 = tail call float @llvm.fma.f32(float %17911, float 0xBE205C6100000000, float %17914)
  %17916 = fadd float %17912, %17915
  %17917 = fsub float %17916, %17912
  %17918 = fsub float %17915, %17917
  %17919 = tail call float @llvm.amdgcn.ldexp.f32(float %17898, i32 1)
  %17920 = fmul float %17898, %17906
  %17921 = fneg float %17920
  %17922 = tail call float @llvm.fma.f32(float %17906, float %17898, float %17921)
  %17923 = tail call float @llvm.fma.f32(float %17906, float %17900, float %17922)
  %17924 = tail call float @llvm.fma.f32(float %17908, float %17898, float %17923)
  %17925 = fadd float %17920, %17924
  %17926 = fsub float %17925, %17920
  %17927 = fsub float %17924, %17926
  %17928 = fmul float %17906, %17910
  %17929 = fneg float %17928
  %17930 = tail call float @llvm.fma.f32(float %17906, float %17910, float %17929)
  %17931 = tail call float @llvm.fma.f32(float %17908, float %17910, float %17930)
  %17932 = fadd float %17928, %17931
  %17933 = fsub float %17932, %17928
  %17934 = fsub float %17931, %17933
  %17935 = fadd float %17932, 0x3FE5555540000000
  %17936 = fadd float %17935, 0xBFE5555540000000
  %17937 = fsub float %17932, %17936
  %17938 = fadd float %17934, 0x3E2E720200000000
  %17939 = fadd float %17938, %17937
  %17940 = fadd float %17935, %17939
  %17941 = fsub float %17940, %17935
  %17942 = fsub float %17939, %17941
  %17943 = fmul float %17925, %17940
  %17944 = fneg float %17943
  %17945 = tail call float @llvm.fma.f32(float %17925, float %17940, float %17944)
  %17946 = tail call float @llvm.fma.f32(float %17925, float %17942, float %17945)
  %17947 = tail call float @llvm.fma.f32(float %17927, float %17940, float %17946)
  %17948 = tail call float @llvm.amdgcn.ldexp.f32(float %17900, i32 1)
  %17949 = fadd float %17943, %17947
  %17950 = fsub float %17949, %17943
  %17951 = fsub float %17947, %17950
  %17952 = fadd float %17919, %17949
  %17953 = fsub float %17952, %17919
  %17954 = fsub float %17949, %17953
  %17955 = fadd float %17948, %17951
  %17956 = fadd float %17955, %17954
  %17957 = fadd float %17952, %17956
  %17958 = fsub float %17957, %17952
  %17959 = fsub float %17956, %17958
  %17960 = fadd float %17916, %17957
  %17961 = fsub float %17960, %17916
  %17962 = fsub float %17960, %17961
  %17963 = fsub float %17916, %17962
  %17964 = fsub float %17957, %17961
  %17965 = fadd float %17964, %17963
  %17966 = fadd float %17918, %17959
  %17967 = fsub float %17966, %17918
  %17968 = fsub float %17966, %17967
  %17969 = fsub float %17918, %17968
  %17970 = fsub float %17959, %17967
  %17971 = fadd float %17970, %17969
  %17972 = fadd float %17966, %17965
  %17973 = fadd float %17960, %17972
  %17974 = fsub float %17973, %17960
  %17975 = fsub float %17972, %17974
  %17976 = fadd float %17971, %17975
  %17977 = fadd float %17973, %17976
  %17978 = fsub float %17977, %17973
  %17979 = fsub float %17976, %17978
  %17980 = fmul float %17977, 2.000000e+00
  %17981 = fneg float %17980
  %17982 = tail call float @llvm.fma.f32(float %17977, float 2.000000e+00, float %17981)
  %17983 = fmul float %17977, 0.000000e+00
  %17984 = tail call float @llvm.fma.f32(float %17979, float 2.000000e+00, float %17983)
  %17985 = fadd float %17982, %17984
  %17986 = fadd float %17980, %17985
  %17987 = fsub float %17986, %17980
  %17988 = fsub float %17985, %17987
  %17989 = tail call float @llvm.fabs.f32(float %17980) #3
  %17990 = fcmp oeq float %17989, 0x7FF0000000000000
  %17991 = select i1 %17990, float %17980, float %17986
  %17992 = tail call float @llvm.fabs.f32(float %17991) #3
  %17993 = fcmp oeq float %17992, 0x7FF0000000000000
  %17994 = select i1 %17993, float 0.000000e+00, float %17988
  %17995 = fcmp oeq float %17991, 0x40562E4300000000
  %17996 = select i1 %17995, float 0x3EE0000000000000, float 0.000000e+00
  %17997 = fsub float %17991, %17996
  %17998 = fadd float %17996, %17994
  %17999 = fmul float %17997, 0x3FF7154760000000
  %18000 = tail call float @llvm.rint.f32(float %17999)
  %18001 = fcmp ogt float %17997, 0x40562E4300000000
  %18002 = fcmp olt float %17997, 0xC059D1DA00000000
  %18003 = fneg float %17999
  %18004 = tail call float @llvm.fma.f32(float %17997, float 0x3FF7154760000000, float %18003)
  %18005 = tail call float @llvm.fma.f32(float %17997, float 0x3E54AE0BE0000000, float %18004)
  %18006 = fsub float %17999, %18000
  %18007 = fadd float %18005, %18006
  %18008 = tail call float @llvm.exp2.f32(float %18007)
  %18009 = fptosi float %18000 to i32
  %18010 = tail call float @llvm.amdgcn.ldexp.f32(float %18008, i32 %18009)
  %18011 = select i1 %18002, float 0.000000e+00, float %18010
  %18012 = select i1 %18001, float 0x7FF0000000000000, float %18011
  %18013 = tail call float @llvm.fma.f32(float %18012, float %17998, float %18012)
  %18014 = tail call float @llvm.fabs.f32(float %18012) #3
  %18015 = fcmp oeq float %18014, 0x7FF0000000000000
  %18016 = select i1 %18015, float %18012, float %18013
  %18017 = tail call float @llvm.fabs.f32(float %18016)
  %18018 = fcmp oeq float %17872, 0x7FF0000000000000
  %18019 = fcmp oeq float %17871, 0.000000e+00
  %18020 = select i1 %18018, float 0x7FF0000000000000, float %18017
  %18021 = select i1 %18019, float 0.000000e+00, float %18020
  %18022 = fcmp uno float %17871, 0.000000e+00
  %18023 = select i1 %18022, float 0x7FF8000000000000, float %18021
  %18024 = fadd contract float %17728, -1.000000e+00
  %18025 = tail call float @llvm.fabs.f32(float %18024)
  %18026 = tail call float @llvm.amdgcn.frexp.mant.f32(float %18025)
  %18027 = fcmp olt float %18026, 0x3FE5555560000000
  %18028 = zext i1 %18027 to i32
  %18029 = tail call float @llvm.amdgcn.ldexp.f32(float %18026, i32 %18028)
  %18030 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %18025)
  %18031 = sub nsw i32 %18030, %18028
  %18032 = fadd float %18029, -1.000000e+00
  %18033 = fadd float %18029, 1.000000e+00
  %18034 = fadd float %18033, -1.000000e+00
  %18035 = fsub float %18029, %18034
  %18036 = tail call float @llvm.amdgcn.rcp.f32(float %18033)
  %18037 = fmul float %18032, %18036
  %18038 = fmul float %18033, %18037
  %18039 = fneg float %18038
  %18040 = tail call float @llvm.fma.f32(float %18037, float %18033, float %18039)
  %18041 = tail call float @llvm.fma.f32(float %18037, float %18035, float %18040)
  %18042 = fadd float %18038, %18041
  %18043 = fsub float %18042, %18038
  %18044 = fsub float %18041, %18043
  %18045 = fsub float %18032, %18042
  %18046 = fsub float %18032, %18045
  %18047 = fsub float %18046, %18042
  %18048 = fsub float %18047, %18044
  %18049 = fadd float %18045, %18048
  %18050 = fmul float %18036, %18049
  %18051 = fadd float %18037, %18050
  %18052 = fsub float %18051, %18037
  %18053 = fsub float %18050, %18052
  %18054 = fmul float %18051, %18051
  %18055 = fneg float %18054
  %18056 = tail call float @llvm.fma.f32(float %18051, float %18051, float %18055)
  %18057 = fmul float %18053, 2.000000e+00
  %18058 = tail call float @llvm.fma.f32(float %18051, float %18057, float %18056)
  %18059 = fadd float %18054, %18058
  %18060 = fsub float %18059, %18054
  %18061 = fsub float %18058, %18060
  %18062 = tail call float @llvm.fmuladd.f32(float %18059, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %18063 = tail call float @llvm.fmuladd.f32(float %18059, float %18062, float 0x3FD999BDE0000000)
  %18064 = sitofp i32 %18031 to float
  %18065 = fmul float %18064, 0x3FE62E4300000000
  %18066 = fneg float %18065
  %18067 = tail call float @llvm.fma.f32(float %18064, float 0x3FE62E4300000000, float %18066)
  %18068 = tail call float @llvm.fma.f32(float %18064, float 0xBE205C6100000000, float %18067)
  %18069 = fadd float %18065, %18068
  %18070 = fsub float %18069, %18065
  %18071 = fsub float %18068, %18070
  %18072 = tail call float @llvm.amdgcn.ldexp.f32(float %18051, i32 1)
  %18073 = fmul float %18051, %18059
  %18074 = fneg float %18073
  %18075 = tail call float @llvm.fma.f32(float %18059, float %18051, float %18074)
  %18076 = tail call float @llvm.fma.f32(float %18059, float %18053, float %18075)
  %18077 = tail call float @llvm.fma.f32(float %18061, float %18051, float %18076)
  %18078 = fadd float %18073, %18077
  %18079 = fsub float %18078, %18073
  %18080 = fsub float %18077, %18079
  %18081 = fmul float %18059, %18063
  %18082 = fneg float %18081
  %18083 = tail call float @llvm.fma.f32(float %18059, float %18063, float %18082)
  %18084 = tail call float @llvm.fma.f32(float %18061, float %18063, float %18083)
  %18085 = fadd float %18081, %18084
  %18086 = fsub float %18085, %18081
  %18087 = fsub float %18084, %18086
  %18088 = fadd float %18085, 0x3FE5555540000000
  %18089 = fadd float %18088, 0xBFE5555540000000
  %18090 = fsub float %18085, %18089
  %18091 = fadd float %18087, 0x3E2E720200000000
  %18092 = fadd float %18091, %18090
  %18093 = fadd float %18088, %18092
  %18094 = fsub float %18093, %18088
  %18095 = fsub float %18092, %18094
  %18096 = fmul float %18078, %18093
  %18097 = fneg float %18096
  %18098 = tail call float @llvm.fma.f32(float %18078, float %18093, float %18097)
  %18099 = tail call float @llvm.fma.f32(float %18078, float %18095, float %18098)
  %18100 = tail call float @llvm.fma.f32(float %18080, float %18093, float %18099)
  %18101 = tail call float @llvm.amdgcn.ldexp.f32(float %18053, i32 1)
  %18102 = fadd float %18096, %18100
  %18103 = fsub float %18102, %18096
  %18104 = fsub float %18100, %18103
  %18105 = fadd float %18072, %18102
  %18106 = fsub float %18105, %18072
  %18107 = fsub float %18102, %18106
  %18108 = fadd float %18101, %18104
  %18109 = fadd float %18108, %18107
  %18110 = fadd float %18105, %18109
  %18111 = fsub float %18110, %18105
  %18112 = fsub float %18109, %18111
  %18113 = fadd float %18069, %18110
  %18114 = fsub float %18113, %18069
  %18115 = fsub float %18113, %18114
  %18116 = fsub float %18069, %18115
  %18117 = fsub float %18110, %18114
  %18118 = fadd float %18117, %18116
  %18119 = fadd float %18071, %18112
  %18120 = fsub float %18119, %18071
  %18121 = fsub float %18119, %18120
  %18122 = fsub float %18071, %18121
  %18123 = fsub float %18112, %18120
  %18124 = fadd float %18123, %18122
  %18125 = fadd float %18119, %18118
  %18126 = fadd float %18113, %18125
  %18127 = fsub float %18126, %18113
  %18128 = fsub float %18125, %18127
  %18129 = fadd float %18124, %18128
  %18130 = fadd float %18126, %18129
  %18131 = fsub float %18130, %18126
  %18132 = fsub float %18129, %18131
  %18133 = fmul float %18130, 2.000000e+00
  %18134 = fneg float %18133
  %18135 = tail call float @llvm.fma.f32(float %18130, float 2.000000e+00, float %18134)
  %18136 = fmul float %18130, 0.000000e+00
  %18137 = tail call float @llvm.fma.f32(float %18132, float 2.000000e+00, float %18136)
  %18138 = fadd float %18135, %18137
  %18139 = fadd float %18133, %18138
  %18140 = fsub float %18139, %18133
  %18141 = fsub float %18138, %18140
  %18142 = tail call float @llvm.fabs.f32(float %18133) #3
  %18143 = fcmp oeq float %18142, 0x7FF0000000000000
  %18144 = select i1 %18143, float %18133, float %18139
  %18145 = tail call float @llvm.fabs.f32(float %18144) #3
  %18146 = fcmp oeq float %18145, 0x7FF0000000000000
  %18147 = select i1 %18146, float 0.000000e+00, float %18141
  %18148 = fcmp oeq float %18144, 0x40562E4300000000
  %18149 = select i1 %18148, float 0x3EE0000000000000, float 0.000000e+00
  %18150 = fsub float %18144, %18149
  %18151 = fadd float %18149, %18147
  %18152 = fmul float %18150, 0x3FF7154760000000
  %18153 = tail call float @llvm.rint.f32(float %18152)
  %18154 = fcmp ogt float %18150, 0x40562E4300000000
  %18155 = fcmp olt float %18150, 0xC059D1DA00000000
  %18156 = fneg float %18152
  %18157 = tail call float @llvm.fma.f32(float %18150, float 0x3FF7154760000000, float %18156)
  %18158 = tail call float @llvm.fma.f32(float %18150, float 0x3E54AE0BE0000000, float %18157)
  %18159 = fsub float %18152, %18153
  %18160 = fadd float %18158, %18159
  %18161 = tail call float @llvm.exp2.f32(float %18160)
  %18162 = fptosi float %18153 to i32
  %18163 = tail call float @llvm.amdgcn.ldexp.f32(float %18161, i32 %18162)
  %18164 = select i1 %18155, float 0.000000e+00, float %18163
  %18165 = select i1 %18154, float 0x7FF0000000000000, float %18164
  %18166 = tail call float @llvm.fma.f32(float %18165, float %18151, float %18165)
  %18167 = tail call float @llvm.fabs.f32(float %18165) #3
  %18168 = fcmp oeq float %18167, 0x7FF0000000000000
  %18169 = select i1 %18168, float %18165, float %18166
  %18170 = tail call float @llvm.fabs.f32(float %18169)
  %18171 = fcmp oeq float %18025, 0x7FF0000000000000
  %18172 = fcmp oeq float %18024, 0.000000e+00
  %18173 = select i1 %18171, float 0x7FF0000000000000, float %18170
  %18174 = select i1 %18172, float 0.000000e+00, float %18173
  %18175 = fcmp uno float %18024, 0.000000e+00
  %18176 = select i1 %18175, float 0x7FF8000000000000, float %18174
  %18177 = fadd contract float %18176, %18023
  %18178 = fadd contract float %18177, 0.000000e+00
  br label %18179

18179:                                            ; preds = %18466, %17846
  %18180 = phi i1 [ true, %17846 ], [ false, %18466 ]
  %18181 = phi i32 [ 0, %17846 ], [ 1, %18466 ]
  %18182 = phi float [ %18178, %17846 ], [ %18647, %18466 ]
  %18183 = zext i32 %18181 to i64
  %18184 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18183
  %18185 = load float, float addrspace(1)* %18184, align 4, !tbaa !4
  %18186 = fadd contract float %18185, -1.000000e+00
  %18187 = fmul contract float %18186, 2.500000e-01
  %18188 = fadd contract float %18187, 1.000000e+00
  %18189 = add nuw nsw i32 %18181, 1
  %18190 = zext i32 %18189 to i64
  %18191 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18190
  %18192 = load float, float addrspace(1)* %18191, align 4, !tbaa !4
  %18193 = fadd contract float %18192, -1.000000e+00
  %18194 = fmul contract float %18193, 2.500000e-01
  %18195 = fadd contract float %18194, 1.000000e+00
  %18196 = fadd contract float %18188, -1.000000e+00
  %18197 = tail call float @llvm.fabs.f32(float %18196)
  %18198 = tail call float @llvm.amdgcn.frexp.mant.f32(float %18197)
  %18199 = fcmp olt float %18198, 0x3FE5555560000000
  %18200 = zext i1 %18199 to i32
  %18201 = tail call float @llvm.amdgcn.ldexp.f32(float %18198, i32 %18200)
  %18202 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %18197)
  %18203 = sub nsw i32 %18202, %18200
  %18204 = fadd float %18201, -1.000000e+00
  %18205 = fadd float %18201, 1.000000e+00
  %18206 = fadd float %18205, -1.000000e+00
  %18207 = fsub float %18201, %18206
  %18208 = tail call float @llvm.amdgcn.rcp.f32(float %18205)
  %18209 = fmul float %18204, %18208
  %18210 = fmul float %18205, %18209
  %18211 = fneg float %18210
  %18212 = tail call float @llvm.fma.f32(float %18209, float %18205, float %18211)
  %18213 = tail call float @llvm.fma.f32(float %18209, float %18207, float %18212)
  %18214 = fadd float %18210, %18213
  %18215 = fsub float %18214, %18210
  %18216 = fsub float %18213, %18215
  %18217 = fsub float %18204, %18214
  %18218 = fsub float %18204, %18217
  %18219 = fsub float %18218, %18214
  %18220 = fsub float %18219, %18216
  %18221 = fadd float %18217, %18220
  %18222 = fmul float %18208, %18221
  %18223 = fadd float %18209, %18222
  %18224 = fsub float %18223, %18209
  %18225 = fsub float %18222, %18224
  %18226 = fmul float %18223, %18223
  %18227 = fneg float %18226
  %18228 = tail call float @llvm.fma.f32(float %18223, float %18223, float %18227)
  %18229 = fmul float %18225, 2.000000e+00
  %18230 = tail call float @llvm.fma.f32(float %18223, float %18229, float %18228)
  %18231 = fadd float %18226, %18230
  %18232 = fsub float %18231, %18226
  %18233 = fsub float %18230, %18232
  %18234 = tail call float @llvm.fmuladd.f32(float %18231, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %18235 = tail call float @llvm.fmuladd.f32(float %18231, float %18234, float 0x3FD999BDE0000000)
  %18236 = sitofp i32 %18203 to float
  %18237 = fmul float %18236, 0x3FE62E4300000000
  %18238 = fneg float %18237
  %18239 = tail call float @llvm.fma.f32(float %18236, float 0x3FE62E4300000000, float %18238)
  %18240 = tail call float @llvm.fma.f32(float %18236, float 0xBE205C6100000000, float %18239)
  %18241 = fadd float %18237, %18240
  %18242 = fsub float %18241, %18237
  %18243 = fsub float %18240, %18242
  %18244 = tail call float @llvm.amdgcn.ldexp.f32(float %18223, i32 1)
  %18245 = fmul float %18223, %18231
  %18246 = fneg float %18245
  %18247 = tail call float @llvm.fma.f32(float %18231, float %18223, float %18246)
  %18248 = tail call float @llvm.fma.f32(float %18231, float %18225, float %18247)
  %18249 = tail call float @llvm.fma.f32(float %18233, float %18223, float %18248)
  %18250 = fadd float %18245, %18249
  %18251 = fsub float %18250, %18245
  %18252 = fsub float %18249, %18251
  %18253 = fmul float %18231, %18235
  %18254 = fneg float %18253
  %18255 = tail call float @llvm.fma.f32(float %18231, float %18235, float %18254)
  %18256 = tail call float @llvm.fma.f32(float %18233, float %18235, float %18255)
  %18257 = fadd float %18253, %18256
  %18258 = fsub float %18257, %18253
  %18259 = fsub float %18256, %18258
  %18260 = fadd float %18257, 0x3FE5555540000000
  %18261 = fadd float %18260, 0xBFE5555540000000
  %18262 = fsub float %18257, %18261
  %18263 = fadd float %18259, 0x3E2E720200000000
  %18264 = fadd float %18263, %18262
  %18265 = fadd float %18260, %18264
  %18266 = fsub float %18265, %18260
  %18267 = fsub float %18264, %18266
  %18268 = fmul float %18250, %18265
  %18269 = fneg float %18268
  %18270 = tail call float @llvm.fma.f32(float %18250, float %18265, float %18269)
  %18271 = tail call float @llvm.fma.f32(float %18250, float %18267, float %18270)
  %18272 = tail call float @llvm.fma.f32(float %18252, float %18265, float %18271)
  %18273 = tail call float @llvm.amdgcn.ldexp.f32(float %18225, i32 1)
  %18274 = fadd float %18268, %18272
  %18275 = fsub float %18274, %18268
  %18276 = fsub float %18272, %18275
  %18277 = fadd float %18244, %18274
  %18278 = fsub float %18277, %18244
  %18279 = fsub float %18274, %18278
  %18280 = fadd float %18273, %18276
  %18281 = fadd float %18280, %18279
  %18282 = fadd float %18277, %18281
  %18283 = fsub float %18282, %18277
  %18284 = fsub float %18281, %18283
  %18285 = fadd float %18241, %18282
  %18286 = fsub float %18285, %18241
  %18287 = fsub float %18285, %18286
  %18288 = fsub float %18241, %18287
  %18289 = fsub float %18282, %18286
  %18290 = fadd float %18289, %18288
  %18291 = fadd float %18243, %18284
  %18292 = fsub float %18291, %18243
  %18293 = fsub float %18291, %18292
  %18294 = fsub float %18243, %18293
  %18295 = fsub float %18284, %18292
  %18296 = fadd float %18295, %18294
  %18297 = fadd float %18291, %18290
  %18298 = fadd float %18285, %18297
  %18299 = fsub float %18298, %18285
  %18300 = fsub float %18297, %18299
  %18301 = fadd float %18296, %18300
  %18302 = fadd float %18298, %18301
  %18303 = fsub float %18302, %18298
  %18304 = fsub float %18301, %18303
  %18305 = fmul float %18302, 2.000000e+00
  %18306 = fneg float %18305
  %18307 = tail call float @llvm.fma.f32(float %18302, float 2.000000e+00, float %18306)
  %18308 = fmul float %18302, 0.000000e+00
  %18309 = tail call float @llvm.fma.f32(float %18304, float 2.000000e+00, float %18308)
  %18310 = fadd float %18307, %18309
  %18311 = fadd float %18305, %18310
  %18312 = fsub float %18311, %18305
  %18313 = fsub float %18310, %18312
  %18314 = tail call float @llvm.fabs.f32(float %18305) #3
  %18315 = fcmp oeq float %18314, 0x7FF0000000000000
  %18316 = select i1 %18315, float %18305, float %18311
  %18317 = tail call float @llvm.fabs.f32(float %18316) #3
  %18318 = fcmp oeq float %18317, 0x7FF0000000000000
  %18319 = select i1 %18318, float 0.000000e+00, float %18313
  %18320 = fcmp oeq float %18316, 0x40562E4300000000
  %18321 = select i1 %18320, float 0x3EE0000000000000, float 0.000000e+00
  %18322 = fsub float %18316, %18321
  %18323 = fadd float %18321, %18319
  %18324 = fmul float %18322, 0x3FF7154760000000
  %18325 = tail call float @llvm.rint.f32(float %18324)
  %18326 = fcmp ogt float %18322, 0x40562E4300000000
  %18327 = fcmp olt float %18322, 0xC059D1DA00000000
  %18328 = fneg float %18324
  %18329 = tail call float @llvm.fma.f32(float %18322, float 0x3FF7154760000000, float %18328)
  %18330 = tail call float @llvm.fma.f32(float %18322, float 0x3E54AE0BE0000000, float %18329)
  %18331 = fsub float %18324, %18325
  %18332 = fadd float %18330, %18331
  %18333 = tail call float @llvm.exp2.f32(float %18332)
  %18334 = fptosi float %18325 to i32
  %18335 = tail call float @llvm.amdgcn.ldexp.f32(float %18333, i32 %18334)
  %18336 = select i1 %18327, float 0.000000e+00, float %18335
  %18337 = select i1 %18326, float 0x7FF0000000000000, float %18336
  %18338 = tail call float @llvm.fma.f32(float %18337, float %18323, float %18337)
  %18339 = tail call float @llvm.fabs.f32(float %18337) #3
  %18340 = fcmp oeq float %18339, 0x7FF0000000000000
  %18341 = select i1 %18340, float %18337, float %18338
  %18342 = tail call float @llvm.fabs.f32(float %18341)
  %18343 = fcmp oeq float %18197, 0x7FF0000000000000
  %18344 = fcmp oeq float %18196, 0.000000e+00
  %18345 = select i1 %18343, float 0x7FF0000000000000, float %18342
  %18346 = select i1 %18344, float 0.000000e+00, float %18345
  %18347 = fcmp uno float %18196, 0.000000e+00
  %18348 = select i1 %18347, float 0x7FF8000000000000, float %18346
  %18349 = fmul contract float %18195, 0x400921CAC0000000
  %18350 = tail call float @llvm.fabs.f32(float %18349)
  %18351 = fcmp olt float %18350, 1.310720e+05
  br i1 %18351, label %18458, label %18352

18352:                                            ; preds = %18179
  %18353 = bitcast float %18350 to i32
  %18354 = lshr i32 %18353, 23
  %18355 = and i32 %18353, 8388607
  %18356 = or i32 %18355, 8388608
  %18357 = zext i32 %18356 to i64
  %18358 = mul nuw nsw i64 %18357, 4266746795
  %18359 = trunc i64 %18358 to i32
  %18360 = lshr i64 %18358, 32
  %18361 = mul nuw nsw i64 %18357, 1011060801
  %18362 = add nuw nsw i64 %18360, %18361
  %18363 = trunc i64 %18362 to i32
  %18364 = lshr i64 %18362, 32
  %18365 = mul nuw nsw i64 %18357, 3680671129
  %18366 = add nuw nsw i64 %18364, %18365
  %18367 = trunc i64 %18366 to i32
  %18368 = lshr i64 %18366, 32
  %18369 = mul nuw nsw i64 %18357, 4113882560
  %18370 = add nuw nsw i64 %18368, %18369
  %18371 = trunc i64 %18370 to i32
  %18372 = lshr i64 %18370, 32
  %18373 = mul nuw nsw i64 %18357, 4230436817
  %18374 = add nuw nsw i64 %18372, %18373
  %18375 = trunc i64 %18374 to i32
  %18376 = lshr i64 %18374, 32
  %18377 = mul nuw nsw i64 %18357, 1313084713
  %18378 = add nuw nsw i64 %18376, %18377
  %18379 = trunc i64 %18378 to i32
  %18380 = lshr i64 %18378, 32
  %18381 = mul nuw nsw i64 %18357, 2734261102
  %18382 = add nuw nsw i64 %18380, %18381
  %18383 = trunc i64 %18382 to i32
  %18384 = lshr i64 %18382, 32
  %18385 = trunc i64 %18384 to i32
  %18386 = add nsw i32 %18354, -120
  %18387 = icmp ugt i32 %18386, 63
  %18388 = select i1 %18387, i32 %18379, i32 %18385
  %18389 = select i1 %18387, i32 %18375, i32 %18383
  %18390 = select i1 %18387, i32 %18371, i32 %18379
  %18391 = select i1 %18387, i32 %18367, i32 %18375
  %18392 = select i1 %18387, i32 %18363, i32 %18371
  %18393 = select i1 %18387, i32 %18359, i32 %18367
  %18394 = select i1 %18387, i32 -64, i32 0
  %18395 = add nsw i32 %18394, %18386
  %18396 = icmp ugt i32 %18395, 31
  %18397 = select i1 %18396, i32 %18389, i32 %18388
  %18398 = select i1 %18396, i32 %18390, i32 %18389
  %18399 = select i1 %18396, i32 %18391, i32 %18390
  %18400 = select i1 %18396, i32 %18392, i32 %18391
  %18401 = select i1 %18396, i32 %18393, i32 %18392
  %18402 = select i1 %18396, i32 -32, i32 0
  %18403 = add nsw i32 %18402, %18395
  %18404 = icmp ugt i32 %18403, 31
  %18405 = select i1 %18404, i32 %18398, i32 %18397
  %18406 = select i1 %18404, i32 %18399, i32 %18398
  %18407 = select i1 %18404, i32 %18400, i32 %18399
  %18408 = select i1 %18404, i32 %18401, i32 %18400
  %18409 = select i1 %18404, i32 -32, i32 0
  %18410 = add nsw i32 %18409, %18403
  %18411 = icmp eq i32 %18410, 0
  %18412 = sub nsw i32 32, %18410
  %18413 = tail call i32 @llvm.fshr.i32(i32 %18405, i32 %18406, i32 %18412)
  %18414 = tail call i32 @llvm.fshr.i32(i32 %18406, i32 %18407, i32 %18412)
  %18415 = tail call i32 @llvm.fshr.i32(i32 %18407, i32 %18408, i32 %18412)
  %18416 = select i1 %18411, i32 %18405, i32 %18413
  %18417 = select i1 %18411, i32 %18406, i32 %18414
  %18418 = select i1 %18411, i32 %18407, i32 %18415
  %18419 = lshr i32 %18416, 29
  %18420 = tail call i32 @llvm.fshl.i32(i32 %18416, i32 %18417, i32 2)
  %18421 = tail call i32 @llvm.fshl.i32(i32 %18417, i32 %18418, i32 2)
  %18422 = tail call i32 @llvm.fshl.i32(i32 %18418, i32 %18408, i32 2)
  %18423 = and i32 %18419, 1
  %18424 = sub nsw i32 0, %18423
  %18425 = shl i32 %18419, 31
  %18426 = xor i32 %18420, %18424
  %18427 = xor i32 %18421, %18424
  %18428 = xor i32 %18422, %18424
  %18429 = tail call i32 @llvm.ctlz.i32(i32 %18426, i1 false), !range !8
  %18430 = sub nsw i32 31, %18429
  %18431 = tail call i32 @llvm.fshr.i32(i32 %18426, i32 %18427, i32 %18430)
  %18432 = tail call i32 @llvm.fshr.i32(i32 %18427, i32 %18428, i32 %18430)
  %18433 = shl nuw nsw i32 %18429, 23
  %18434 = sub nuw nsw i32 1056964608, %18433
  %18435 = lshr i32 %18431, 9
  %18436 = or i32 %18435, %18434
  %18437 = or i32 %18436, %18425
  %18438 = bitcast i32 %18437 to float
  %18439 = tail call i32 @llvm.fshl.i32(i32 %18431, i32 %18432, i32 23)
  %18440 = tail call i32 @llvm.ctlz.i32(i32 %18439, i1 false), !range !8
  %18441 = fmul float %18438, 0x3FF921FB40000000
  %18442 = add nuw nsw i32 %18440, %18429
  %18443 = shl nuw nsw i32 %18442, 23
  %18444 = sub nuw nsw i32 855638016, %18443
  %18445 = sub nsw i32 31, %18440
  %18446 = tail call i32 @llvm.fshr.i32(i32 %18439, i32 %18432, i32 %18445)
  %18447 = lshr i32 %18446, 9
  %18448 = or i32 %18444, %18447
  %18449 = or i32 %18448, %18425
  %18450 = bitcast i32 %18449 to float
  %18451 = fneg float %18441
  %18452 = tail call float @llvm.fma.f32(float %18438, float 0x3FF921FB40000000, float %18451)
  %18453 = tail call float @llvm.fma.f32(float %18438, float 0x3E74442D00000000, float %18452)
  %18454 = tail call float @llvm.fma.f32(float %18450, float 0x3FF921FB40000000, float %18453)
  %18455 = fadd float %18441, %18454
  %18456 = lshr i32 %18416, 30
  %18457 = add nuw nsw i32 %18423, %18456
  br label %18466

18458:                                            ; preds = %18179
  %18459 = fmul float %18350, 0x3FE45F3060000000
  %18460 = tail call float @llvm.rint.f32(float %18459)
  %18461 = tail call float @llvm.fma.f32(float %18460, float 0xBFF921FB40000000, float %18350)
  %18462 = tail call float @llvm.fma.f32(float %18460, float 0xBE74442D00000000, float %18461)
  %18463 = tail call float @llvm.fma.f32(float %18460, float 0xBCF8469880000000, float %18462)
  %18464 = fptosi float %18460 to i32
  %18465 = bitcast float %18350 to i32
  br label %18466

18466:                                            ; preds = %18458, %18352
  %18467 = phi i32 [ %18465, %18458 ], [ %18353, %18352 ]
  %18468 = phi float [ %18463, %18458 ], [ %18455, %18352 ]
  %18469 = phi i32 [ %18464, %18458 ], [ %18457, %18352 ]
  %18470 = fmul float %18468, %18468
  %18471 = tail call float @llvm.fmuladd.f32(float %18470, float 0xBF29833040000000, float 0x3F81103880000000)
  %18472 = tail call float @llvm.fmuladd.f32(float %18470, float %18471, float 0xBFC55553A0000000)
  %18473 = fmul float %18470, %18472
  %18474 = tail call float @llvm.fmuladd.f32(float %18468, float %18473, float %18468)
  %18475 = tail call float @llvm.fmuladd.f32(float %18470, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %18476 = tail call float @llvm.fmuladd.f32(float %18470, float %18475, float 0x3FA5557EE0000000)
  %18477 = tail call float @llvm.fmuladd.f32(float %18470, float %18476, float 0xBFE0000080000000)
  %18478 = tail call float @llvm.fmuladd.f32(float %18470, float %18477, float 1.000000e+00)
  %18479 = and i32 %18469, 1
  %18480 = icmp eq i32 %18479, 0
  %18481 = select i1 %18480, float %18474, float %18478
  %18482 = bitcast float %18481 to i32
  %18483 = shl i32 %18469, 30
  %18484 = and i32 %18483, -2147483648
  %18485 = bitcast float %18349 to i32
  %18486 = xor i32 %18467, %18485
  %18487 = xor i32 %18486, %18484
  %18488 = xor i32 %18487, %18482
  %18489 = bitcast i32 %18488 to float
  %18490 = tail call i1 @llvm.amdgcn.class.f32(float %18350, i32 504)
  %18491 = select i1 %18490, float %18489, float 0x7FF8000000000000
  %18492 = tail call float @llvm.fabs.f32(float %18491)
  %18493 = tail call float @llvm.amdgcn.frexp.mant.f32(float %18492)
  %18494 = fcmp olt float %18493, 0x3FE5555560000000
  %18495 = zext i1 %18494 to i32
  %18496 = tail call float @llvm.amdgcn.ldexp.f32(float %18493, i32 %18495)
  %18497 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %18492)
  %18498 = sub nsw i32 %18497, %18495
  %18499 = fadd float %18496, -1.000000e+00
  %18500 = fadd float %18496, 1.000000e+00
  %18501 = fadd float %18500, -1.000000e+00
  %18502 = fsub float %18496, %18501
  %18503 = tail call float @llvm.amdgcn.rcp.f32(float %18500)
  %18504 = fmul float %18499, %18503
  %18505 = fmul float %18500, %18504
  %18506 = fneg float %18505
  %18507 = tail call float @llvm.fma.f32(float %18504, float %18500, float %18506)
  %18508 = tail call float @llvm.fma.f32(float %18504, float %18502, float %18507)
  %18509 = fadd float %18505, %18508
  %18510 = fsub float %18509, %18505
  %18511 = fsub float %18508, %18510
  %18512 = fsub float %18499, %18509
  %18513 = fsub float %18499, %18512
  %18514 = fsub float %18513, %18509
  %18515 = fsub float %18514, %18511
  %18516 = fadd float %18512, %18515
  %18517 = fmul float %18503, %18516
  %18518 = fadd float %18504, %18517
  %18519 = fsub float %18518, %18504
  %18520 = fsub float %18517, %18519
  %18521 = fmul float %18518, %18518
  %18522 = fneg float %18521
  %18523 = tail call float @llvm.fma.f32(float %18518, float %18518, float %18522)
  %18524 = fmul float %18520, 2.000000e+00
  %18525 = tail call float @llvm.fma.f32(float %18518, float %18524, float %18523)
  %18526 = fadd float %18521, %18525
  %18527 = fsub float %18526, %18521
  %18528 = fsub float %18525, %18527
  %18529 = tail call float @llvm.fmuladd.f32(float %18526, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %18530 = tail call float @llvm.fmuladd.f32(float %18526, float %18529, float 0x3FD999BDE0000000)
  %18531 = sitofp i32 %18498 to float
  %18532 = fmul float %18531, 0x3FE62E4300000000
  %18533 = fneg float %18532
  %18534 = tail call float @llvm.fma.f32(float %18531, float 0x3FE62E4300000000, float %18533)
  %18535 = tail call float @llvm.fma.f32(float %18531, float 0xBE205C6100000000, float %18534)
  %18536 = fadd float %18532, %18535
  %18537 = fsub float %18536, %18532
  %18538 = fsub float %18535, %18537
  %18539 = tail call float @llvm.amdgcn.ldexp.f32(float %18518, i32 1)
  %18540 = fmul float %18518, %18526
  %18541 = fneg float %18540
  %18542 = tail call float @llvm.fma.f32(float %18526, float %18518, float %18541)
  %18543 = tail call float @llvm.fma.f32(float %18526, float %18520, float %18542)
  %18544 = tail call float @llvm.fma.f32(float %18528, float %18518, float %18543)
  %18545 = fadd float %18540, %18544
  %18546 = fsub float %18545, %18540
  %18547 = fsub float %18544, %18546
  %18548 = fmul float %18526, %18530
  %18549 = fneg float %18548
  %18550 = tail call float @llvm.fma.f32(float %18526, float %18530, float %18549)
  %18551 = tail call float @llvm.fma.f32(float %18528, float %18530, float %18550)
  %18552 = fadd float %18548, %18551
  %18553 = fsub float %18552, %18548
  %18554 = fsub float %18551, %18553
  %18555 = fadd float %18552, 0x3FE5555540000000
  %18556 = fadd float %18555, 0xBFE5555540000000
  %18557 = fsub float %18552, %18556
  %18558 = fadd float %18554, 0x3E2E720200000000
  %18559 = fadd float %18558, %18557
  %18560 = fadd float %18555, %18559
  %18561 = fsub float %18560, %18555
  %18562 = fsub float %18559, %18561
  %18563 = fmul float %18545, %18560
  %18564 = fneg float %18563
  %18565 = tail call float @llvm.fma.f32(float %18545, float %18560, float %18564)
  %18566 = tail call float @llvm.fma.f32(float %18545, float %18562, float %18565)
  %18567 = tail call float @llvm.fma.f32(float %18547, float %18560, float %18566)
  %18568 = tail call float @llvm.amdgcn.ldexp.f32(float %18520, i32 1)
  %18569 = fadd float %18563, %18567
  %18570 = fsub float %18569, %18563
  %18571 = fsub float %18567, %18570
  %18572 = fadd float %18539, %18569
  %18573 = fsub float %18572, %18539
  %18574 = fsub float %18569, %18573
  %18575 = fadd float %18568, %18571
  %18576 = fadd float %18575, %18574
  %18577 = fadd float %18572, %18576
  %18578 = fsub float %18577, %18572
  %18579 = fsub float %18576, %18578
  %18580 = fadd float %18536, %18577
  %18581 = fsub float %18580, %18536
  %18582 = fsub float %18580, %18581
  %18583 = fsub float %18536, %18582
  %18584 = fsub float %18577, %18581
  %18585 = fadd float %18584, %18583
  %18586 = fadd float %18538, %18579
  %18587 = fsub float %18586, %18538
  %18588 = fsub float %18586, %18587
  %18589 = fsub float %18538, %18588
  %18590 = fsub float %18579, %18587
  %18591 = fadd float %18590, %18589
  %18592 = fadd float %18586, %18585
  %18593 = fadd float %18580, %18592
  %18594 = fsub float %18593, %18580
  %18595 = fsub float %18592, %18594
  %18596 = fadd float %18591, %18595
  %18597 = fadd float %18593, %18596
  %18598 = fsub float %18597, %18593
  %18599 = fsub float %18596, %18598
  %18600 = fmul float %18597, 2.000000e+00
  %18601 = fneg float %18600
  %18602 = tail call float @llvm.fma.f32(float %18597, float 2.000000e+00, float %18601)
  %18603 = fmul float %18597, 0.000000e+00
  %18604 = tail call float @llvm.fma.f32(float %18599, float 2.000000e+00, float %18603)
  %18605 = fadd float %18602, %18604
  %18606 = fadd float %18600, %18605
  %18607 = fsub float %18606, %18600
  %18608 = fsub float %18605, %18607
  %18609 = tail call float @llvm.fabs.f32(float %18600) #3
  %18610 = fcmp oeq float %18609, 0x7FF0000000000000
  %18611 = select i1 %18610, float %18600, float %18606
  %18612 = tail call float @llvm.fabs.f32(float %18611) #3
  %18613 = fcmp oeq float %18612, 0x7FF0000000000000
  %18614 = select i1 %18613, float 0.000000e+00, float %18608
  %18615 = fcmp oeq float %18611, 0x40562E4300000000
  %18616 = select i1 %18615, float 0x3EE0000000000000, float 0.000000e+00
  %18617 = fsub float %18611, %18616
  %18618 = fadd float %18616, %18614
  %18619 = fmul float %18617, 0x3FF7154760000000
  %18620 = tail call float @llvm.rint.f32(float %18619)
  %18621 = fcmp ogt float %18617, 0x40562E4300000000
  %18622 = fcmp olt float %18617, 0xC059D1DA00000000
  %18623 = fneg float %18619
  %18624 = tail call float @llvm.fma.f32(float %18617, float 0x3FF7154760000000, float %18623)
  %18625 = tail call float @llvm.fma.f32(float %18617, float 0x3E54AE0BE0000000, float %18624)
  %18626 = fsub float %18619, %18620
  %18627 = fadd float %18625, %18626
  %18628 = tail call float @llvm.exp2.f32(float %18627)
  %18629 = fptosi float %18620 to i32
  %18630 = tail call float @llvm.amdgcn.ldexp.f32(float %18628, i32 %18629)
  %18631 = select i1 %18622, float 0.000000e+00, float %18630
  %18632 = select i1 %18621, float 0x7FF0000000000000, float %18631
  %18633 = tail call float @llvm.fma.f32(float %18632, float %18618, float %18632)
  %18634 = tail call float @llvm.fabs.f32(float %18632) #3
  %18635 = fcmp oeq float %18634, 0x7FF0000000000000
  %18636 = select i1 %18635, float %18632, float %18633
  %18637 = tail call float @llvm.fabs.f32(float %18636)
  %18638 = fcmp oeq float %18492, 0x7FF0000000000000
  %18639 = fcmp oeq float %18491, 0.000000e+00
  %18640 = fcmp uno float %18491, 0.000000e+00
  %18641 = fmul contract float %18637, 1.000000e+01
  %18642 = fadd contract float %18641, 1.000000e+00
  %18643 = select i1 %18638, float 0x7FF0000000000000, float %18642
  %18644 = select i1 %18639, float 1.000000e+00, float %18643
  %18645 = select i1 %18640, float 0x7FF8000000000000, float %18644
  %18646 = fmul contract float %18348, %18645
  %18647 = fadd contract float %18182, %18646
  br i1 %18180, label %18179, label %18648, !llvm.loop !9

18648:                                            ; preds = %18466
  %18649 = fcmp contract olt float %17719, %18647
  br i1 %18649, label %18650, label %18652

18650:                                            ; preds = %18648
  store float %16789, float addrspace(1)* %0, align 4, !tbaa !4
  %18651 = getelementptr inbounds float, float addrspace(1)* %0, i64 1
  store float %16792, float addrspace(1)* %18651, align 4, !tbaa !4
  store float %16795, float addrspace(1)* %3, align 4, !tbaa !4
  br label %18652

18652:                                            ; preds = %18650, %18648
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.exp2.f32(float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fma.f32(float, float, float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fmuladd.f32(float, float, float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.rint.f32(float) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.amdgcn.ldexp.f32(float, i32) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.amdgcn.frexp.mant.f32(float) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.frexp.exp.i32.f32(float) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.amdgcn.rcp.f32(float) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i1 @llvm.amdgcn.class.f32(float, i32) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshr.i32(i32, i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #1

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{!5, !5, i64 0}
!5 = !{!"float", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{i32 0, i32 33}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
