; ModuleID = '../data/hip_kernels/1324/1/main.cu'
source_filename = "../data/hip_kernels/1324/1/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: mustprogress nofree norecurse nounwind
define protected amdgpu_kernel void @_Z17kernelUpdatePBestPfS_S_(float addrspace(1)* nocapture readonly %0, float addrspace(1)* nocapture %1, float addrspace(1)* nocapture %2) local_unnamed_addr #0 {
  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()
  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4
  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*
  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5
  %9 = zext i16 %8 to i32
  %10 = mul i32 %4, %9
  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6
  %12 = add i32 %10, %11
  %13 = icmp slt i32 %12, 1536
  %14 = srem i32 %12, 3
  %15 = icmp eq i32 %14, 0
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %3592

17:                                               ; preds = %3
  %18 = sext i32 %12 to i64
  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18
  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber !5
  %21 = insertelement <3 x float> undef, float %20, i64 0
  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %18
  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7, !amdgpu.noclobber !5
  %24 = insertelement <3 x float> undef, float %23, i64 0
  %25 = add nsw i32 %12, 1
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26
  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !7, !amdgpu.noclobber !5
  %29 = insertelement <3 x float> %21, float %28, i64 1
  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 %26
  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7, !amdgpu.noclobber !5
  %32 = insertelement <3 x float> %24, float %31, i64 1
  %33 = add nsw i32 %12, 2
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34
  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7, !amdgpu.noclobber !5
  %37 = insertelement <3 x float> %29, float %36, i64 2
  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34
  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7, !amdgpu.noclobber !5
  %40 = insertelement <3 x float> %32, float %39, i64 2
  %41 = fadd contract float %20, -1.000000e+00
  %42 = fmul contract float %41, 2.500000e-01
  %43 = fadd contract float %42, 1.000000e+00
  %44 = fadd contract float %36, -1.000000e+00
  %45 = fmul contract float %44, 2.500000e-01
  %46 = fadd contract float %45, 1.000000e+00
  %47 = fmul contract float %43, 0x400921CAC0000000
  %48 = tail call float @llvm.fabs.f32(float %47)
  %49 = fcmp olt float %48, 1.310720e+05
  br i1 %49, label %50, label %58

50:                                               ; preds = %17
  %51 = fmul float %48, 0x3FE45F3060000000
  %52 = tail call float @llvm.rint.f32(float %51)
  %53 = tail call float @llvm.fma.f32(float %52, float 0xBFF921FB40000000, float %48)
  %54 = tail call float @llvm.fma.f32(float %52, float 0xBE74442D00000000, float %53)
  %55 = tail call float @llvm.fma.f32(float %52, float 0xBCF8469880000000, float %54)
  %56 = fptosi float %52 to i32
  %57 = bitcast float %48 to i32
  br label %164

58:                                               ; preds = %17
  %59 = bitcast float %48 to i32
  %60 = lshr i32 %59, 23
  %61 = and i32 %59, 8388607
  %62 = or i32 %61, 8388608
  %63 = zext i32 %62 to i64
  %64 = mul nuw nsw i64 %63, 4266746795
  %65 = trunc i64 %64 to i32
  %66 = lshr i64 %64, 32
  %67 = mul nuw nsw i64 %63, 1011060801
  %68 = add nuw nsw i64 %66, %67
  %69 = trunc i64 %68 to i32
  %70 = lshr i64 %68, 32
  %71 = mul nuw nsw i64 %63, 3680671129
  %72 = add nuw nsw i64 %70, %71
  %73 = trunc i64 %72 to i32
  %74 = lshr i64 %72, 32
  %75 = mul nuw nsw i64 %63, 4113882560
  %76 = add nuw nsw i64 %74, %75
  %77 = trunc i64 %76 to i32
  %78 = lshr i64 %76, 32
  %79 = mul nuw nsw i64 %63, 4230436817
  %80 = add nuw nsw i64 %78, %79
  %81 = trunc i64 %80 to i32
  %82 = lshr i64 %80, 32
  %83 = mul nuw nsw i64 %63, 1313084713
  %84 = add nuw nsw i64 %82, %83
  %85 = trunc i64 %84 to i32
  %86 = lshr i64 %84, 32
  %87 = mul nuw nsw i64 %63, 2734261102
  %88 = add nuw nsw i64 %86, %87
  %89 = trunc i64 %88 to i32
  %90 = lshr i64 %88, 32
  %91 = trunc i64 %90 to i32
  %92 = add nsw i32 %60, -120
  %93 = icmp ugt i32 %92, 63
  %94 = select i1 %93, i32 %85, i32 %91
  %95 = select i1 %93, i32 %81, i32 %89
  %96 = select i1 %93, i32 %77, i32 %85
  %97 = select i1 %93, i32 %73, i32 %81
  %98 = select i1 %93, i32 %69, i32 %77
  %99 = select i1 %93, i32 %65, i32 %73
  %100 = select i1 %93, i32 -64, i32 0
  %101 = add nsw i32 %100, %92
  %102 = icmp ugt i32 %101, 31
  %103 = select i1 %102, i32 %95, i32 %94
  %104 = select i1 %102, i32 %96, i32 %95
  %105 = select i1 %102, i32 %97, i32 %96
  %106 = select i1 %102, i32 %98, i32 %97
  %107 = select i1 %102, i32 %99, i32 %98
  %108 = select i1 %102, i32 -32, i32 0
  %109 = add nsw i32 %108, %101
  %110 = icmp ugt i32 %109, 31
  %111 = select i1 %110, i32 %104, i32 %103
  %112 = select i1 %110, i32 %105, i32 %104
  %113 = select i1 %110, i32 %106, i32 %105
  %114 = select i1 %110, i32 %107, i32 %106
  %115 = select i1 %110, i32 -32, i32 0
  %116 = add nsw i32 %115, %109
  %117 = icmp eq i32 %116, 0
  %118 = sub nsw i32 32, %116
  %119 = tail call i32 @llvm.fshr.i32(i32 %111, i32 %112, i32 %118)
  %120 = tail call i32 @llvm.fshr.i32(i32 %112, i32 %113, i32 %118)
  %121 = tail call i32 @llvm.fshr.i32(i32 %113, i32 %114, i32 %118)
  %122 = select i1 %117, i32 %111, i32 %119
  %123 = select i1 %117, i32 %112, i32 %120
  %124 = select i1 %117, i32 %113, i32 %121
  %125 = lshr i32 %122, 29
  %126 = tail call i32 @llvm.fshl.i32(i32 %122, i32 %123, i32 2)
  %127 = tail call i32 @llvm.fshl.i32(i32 %123, i32 %124, i32 2)
  %128 = tail call i32 @llvm.fshl.i32(i32 %124, i32 %114, i32 2)
  %129 = and i32 %125, 1
  %130 = sub nsw i32 0, %129
  %131 = shl i32 %125, 31
  %132 = xor i32 %126, %130
  %133 = xor i32 %127, %130
  %134 = xor i32 %128, %130
  %135 = tail call i32 @llvm.ctlz.i32(i32 %132, i1 false), !range !11
  %136 = sub nsw i32 31, %135
  %137 = tail call i32 @llvm.fshr.i32(i32 %132, i32 %133, i32 %136)
  %138 = tail call i32 @llvm.fshr.i32(i32 %133, i32 %134, i32 %136)
  %139 = shl nuw nsw i32 %135, 23
  %140 = sub nuw nsw i32 1056964608, %139
  %141 = lshr i32 %137, 9
  %142 = or i32 %141, %140
  %143 = or i32 %142, %131
  %144 = bitcast i32 %143 to float
  %145 = tail call i32 @llvm.fshl.i32(i32 %137, i32 %138, i32 23)
  %146 = tail call i32 @llvm.ctlz.i32(i32 %145, i1 false), !range !11
  %147 = fmul float %144, 0x3FF921FB40000000
  %148 = add nuw nsw i32 %146, %135
  %149 = shl nuw nsw i32 %148, 23
  %150 = sub nuw nsw i32 855638016, %149
  %151 = sub nsw i32 31, %146
  %152 = tail call i32 @llvm.fshr.i32(i32 %145, i32 %138, i32 %151)
  %153 = lshr i32 %152, 9
  %154 = or i32 %150, %153
  %155 = or i32 %154, %131
  %156 = bitcast i32 %155 to float
  %157 = fneg float %147
  %158 = tail call float @llvm.fma.f32(float %144, float 0x3FF921FB40000000, float %157)
  %159 = tail call float @llvm.fma.f32(float %144, float 0x3E74442D00000000, float %158)
  %160 = tail call float @llvm.fma.f32(float %156, float 0x3FF921FB40000000, float %159)
  %161 = fadd float %147, %160
  %162 = lshr i32 %122, 30
  %163 = add nuw nsw i32 %129, %162
  br label %164

164:                                              ; preds = %58, %50
  %165 = phi i32 [ %57, %50 ], [ %59, %58 ]
  %166 = phi float [ %55, %50 ], [ %161, %58 ]
  %167 = phi i32 [ %56, %50 ], [ %163, %58 ]
  %168 = fmul float %166, %166
  %169 = tail call float @llvm.fmuladd.f32(float %168, float 0xBF29833040000000, float 0x3F81103880000000)
  %170 = tail call float @llvm.fmuladd.f32(float %168, float %169, float 0xBFC55553A0000000)
  %171 = fmul float %168, %170
  %172 = tail call float @llvm.fmuladd.f32(float %166, float %171, float %166)
  %173 = tail call float @llvm.fmuladd.f32(float %168, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %174 = tail call float @llvm.fmuladd.f32(float %168, float %173, float 0x3FA5557EE0000000)
  %175 = tail call float @llvm.fmuladd.f32(float %168, float %174, float 0xBFE0000080000000)
  %176 = tail call float @llvm.fmuladd.f32(float %168, float %175, float 1.000000e+00)
  %177 = and i32 %167, 1
  %178 = icmp eq i32 %177, 0
  %179 = select i1 %178, float %172, float %176
  %180 = bitcast float %179 to i32
  %181 = shl i32 %167, 30
  %182 = and i32 %181, -2147483648
  %183 = bitcast float %47 to i32
  %184 = xor i32 %165, %182
  %185 = xor i32 %184, %180
  %186 = xor i32 %185, %183
  %187 = bitcast i32 %186 to float
  %188 = tail call i1 @llvm.amdgcn.class.f32(float %48, i32 504)
  %189 = select i1 %188, float %187, float 0x7FF8000000000000
  %190 = tail call float @llvm.fabs.f32(float %189)
  %191 = tail call float @llvm.amdgcn.frexp.mant.f32(float %190)
  %192 = fcmp olt float %191, 0x3FE5555560000000
  %193 = zext i1 %192 to i32
  %194 = tail call float @llvm.amdgcn.ldexp.f32(float %191, i32 %193)
  %195 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %190)
  %196 = sub nsw i32 %195, %193
  %197 = fadd float %194, -1.000000e+00
  %198 = fadd float %194, 1.000000e+00
  %199 = fadd float %198, -1.000000e+00
  %200 = fsub float %194, %199
  %201 = tail call float @llvm.amdgcn.rcp.f32(float %198)
  %202 = fmul float %197, %201
  %203 = fmul float %198, %202
  %204 = fneg float %203
  %205 = tail call float @llvm.fma.f32(float %202, float %198, float %204)
  %206 = tail call float @llvm.fma.f32(float %202, float %200, float %205)
  %207 = fadd float %203, %206
  %208 = fsub float %207, %203
  %209 = fsub float %206, %208
  %210 = fsub float %197, %207
  %211 = fsub float %197, %210
  %212 = fsub float %211, %207
  %213 = fsub float %212, %209
  %214 = fadd float %210, %213
  %215 = fmul float %201, %214
  %216 = fadd float %202, %215
  %217 = fsub float %216, %202
  %218 = fsub float %215, %217
  %219 = fmul float %216, %216
  %220 = fneg float %219
  %221 = tail call float @llvm.fma.f32(float %216, float %216, float %220)
  %222 = fmul float %218, 2.000000e+00
  %223 = tail call float @llvm.fma.f32(float %216, float %222, float %221)
  %224 = fadd float %219, %223
  %225 = fsub float %224, %219
  %226 = fsub float %223, %225
  %227 = tail call float @llvm.fmuladd.f32(float %224, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %228 = tail call float @llvm.fmuladd.f32(float %224, float %227, float 0x3FD999BDE0000000)
  %229 = sitofp i32 %196 to float
  %230 = fmul float %229, 0x3FE62E4300000000
  %231 = fneg float %230
  %232 = tail call float @llvm.fma.f32(float %229, float 0x3FE62E4300000000, float %231)
  %233 = tail call float @llvm.fma.f32(float %229, float 0xBE205C6100000000, float %232)
  %234 = fadd float %230, %233
  %235 = fsub float %234, %230
  %236 = fsub float %233, %235
  %237 = tail call float @llvm.amdgcn.ldexp.f32(float %216, i32 1)
  %238 = fmul float %216, %224
  %239 = fneg float %238
  %240 = tail call float @llvm.fma.f32(float %224, float %216, float %239)
  %241 = tail call float @llvm.fma.f32(float %224, float %218, float %240)
  %242 = tail call float @llvm.fma.f32(float %226, float %216, float %241)
  %243 = fadd float %238, %242
  %244 = fsub float %243, %238
  %245 = fsub float %242, %244
  %246 = fmul float %224, %228
  %247 = fneg float %246
  %248 = tail call float @llvm.fma.f32(float %224, float %228, float %247)
  %249 = tail call float @llvm.fma.f32(float %226, float %228, float %248)
  %250 = fadd float %246, %249
  %251 = fsub float %250, %246
  %252 = fsub float %249, %251
  %253 = fadd float %250, 0x3FE5555540000000
  %254 = fadd float %253, 0xBFE5555540000000
  %255 = fsub float %250, %254
  %256 = fadd float %252, 0x3E2E720200000000
  %257 = fadd float %256, %255
  %258 = fadd float %253, %257
  %259 = fsub float %258, %253
  %260 = fsub float %257, %259
  %261 = fmul float %243, %258
  %262 = fneg float %261
  %263 = tail call float @llvm.fma.f32(float %243, float %258, float %262)
  %264 = tail call float @llvm.fma.f32(float %243, float %260, float %263)
  %265 = tail call float @llvm.fma.f32(float %245, float %258, float %264)
  %266 = tail call float @llvm.amdgcn.ldexp.f32(float %218, i32 1)
  %267 = fadd float %261, %265
  %268 = fsub float %267, %261
  %269 = fsub float %265, %268
  %270 = fadd float %237, %267
  %271 = fsub float %270, %237
  %272 = fsub float %267, %271
  %273 = fadd float %266, %269
  %274 = fadd float %273, %272
  %275 = fadd float %270, %274
  %276 = fsub float %275, %270
  %277 = fsub float %274, %276
  %278 = fadd float %234, %275
  %279 = fsub float %278, %234
  %280 = fsub float %278, %279
  %281 = fsub float %234, %280
  %282 = fsub float %275, %279
  %283 = fadd float %282, %281
  %284 = fadd float %236, %277
  %285 = fsub float %284, %236
  %286 = fsub float %284, %285
  %287 = fsub float %236, %286
  %288 = fsub float %277, %285
  %289 = fadd float %288, %287
  %290 = fadd float %284, %283
  %291 = fadd float %278, %290
  %292 = fsub float %291, %278
  %293 = fsub float %290, %292
  %294 = fadd float %289, %293
  %295 = fadd float %291, %294
  %296 = fsub float %295, %291
  %297 = fsub float %294, %296
  %298 = fmul float %295, 2.000000e+00
  %299 = fneg float %298
  %300 = tail call float @llvm.fma.f32(float %295, float 2.000000e+00, float %299)
  %301 = fmul float %295, 0.000000e+00
  %302 = tail call float @llvm.fma.f32(float %297, float 2.000000e+00, float %301)
  %303 = fadd float %300, %302
  %304 = fadd float %298, %303
  %305 = fsub float %304, %298
  %306 = fsub float %303, %305
  %307 = tail call float @llvm.fabs.f32(float %298) #3
  %308 = fcmp oeq float %307, 0x7FF0000000000000
  %309 = select i1 %308, float %298, float %304
  %310 = tail call float @llvm.fabs.f32(float %309) #3
  %311 = fcmp oeq float %310, 0x7FF0000000000000
  %312 = select i1 %311, float 0.000000e+00, float %306
  %313 = fcmp oeq float %309, 0x40562E4300000000
  %314 = select i1 %313, float 0x3EE0000000000000, float 0.000000e+00
  %315 = fsub float %309, %314
  %316 = fadd float %314, %312
  %317 = fmul float %315, 0x3FF7154760000000
  %318 = tail call float @llvm.rint.f32(float %317)
  %319 = fcmp ogt float %315, 0x40562E4300000000
  %320 = fcmp olt float %315, 0xC059D1DA00000000
  %321 = fneg float %317
  %322 = tail call float @llvm.fma.f32(float %315, float 0x3FF7154760000000, float %321)
  %323 = tail call float @llvm.fma.f32(float %315, float 0x3E54AE0BE0000000, float %322)
  %324 = fsub float %317, %318
  %325 = fadd float %323, %324
  %326 = tail call float @llvm.exp2.f32(float %325)
  %327 = fptosi float %318 to i32
  %328 = tail call float @llvm.amdgcn.ldexp.f32(float %326, i32 %327)
  %329 = select i1 %320, float 0.000000e+00, float %328
  %330 = select i1 %319, float 0x7FF0000000000000, float %329
  %331 = tail call float @llvm.fma.f32(float %330, float %316, float %330)
  %332 = tail call float @llvm.fabs.f32(float %330) #3
  %333 = fcmp oeq float %332, 0x7FF0000000000000
  %334 = select i1 %333, float %330, float %331
  %335 = tail call float @llvm.fabs.f32(float %334)
  %336 = fcmp oeq float %190, 0x7FF0000000000000
  %337 = fcmp oeq float %189, 0.000000e+00
  %338 = select i1 %336, float 0x7FF0000000000000, float %335
  %339 = select i1 %337, float 0.000000e+00, float %338
  %340 = fcmp uno float %189, 0.000000e+00
  %341 = select i1 %340, float 0x7FF8000000000000, float %339
  %342 = fadd contract float %46, -1.000000e+00
  %343 = tail call float @llvm.fabs.f32(float %342)
  %344 = tail call float @llvm.amdgcn.frexp.mant.f32(float %343)
  %345 = fcmp olt float %344, 0x3FE5555560000000
  %346 = zext i1 %345 to i32
  %347 = tail call float @llvm.amdgcn.ldexp.f32(float %344, i32 %346)
  %348 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %343)
  %349 = sub nsw i32 %348, %346
  %350 = fadd float %347, -1.000000e+00
  %351 = fadd float %347, 1.000000e+00
  %352 = fadd float %351, -1.000000e+00
  %353 = fsub float %347, %352
  %354 = tail call float @llvm.amdgcn.rcp.f32(float %351)
  %355 = fmul float %350, %354
  %356 = fmul float %351, %355
  %357 = fneg float %356
  %358 = tail call float @llvm.fma.f32(float %355, float %351, float %357)
  %359 = tail call float @llvm.fma.f32(float %355, float %353, float %358)
  %360 = fadd float %356, %359
  %361 = fsub float %360, %356
  %362 = fsub float %359, %361
  %363 = fsub float %350, %360
  %364 = fsub float %350, %363
  %365 = fsub float %364, %360
  %366 = fsub float %365, %362
  %367 = fadd float %363, %366
  %368 = fmul float %354, %367
  %369 = fadd float %355, %368
  %370 = fsub float %369, %355
  %371 = fsub float %368, %370
  %372 = fmul float %369, %369
  %373 = fneg float %372
  %374 = tail call float @llvm.fma.f32(float %369, float %369, float %373)
  %375 = fmul float %371, 2.000000e+00
  %376 = tail call float @llvm.fma.f32(float %369, float %375, float %374)
  %377 = fadd float %372, %376
  %378 = fsub float %377, %372
  %379 = fsub float %376, %378
  %380 = tail call float @llvm.fmuladd.f32(float %377, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %381 = tail call float @llvm.fmuladd.f32(float %377, float %380, float 0x3FD999BDE0000000)
  %382 = sitofp i32 %349 to float
  %383 = fmul float %382, 0x3FE62E4300000000
  %384 = fneg float %383
  %385 = tail call float @llvm.fma.f32(float %382, float 0x3FE62E4300000000, float %384)
  %386 = tail call float @llvm.fma.f32(float %382, float 0xBE205C6100000000, float %385)
  %387 = fadd float %383, %386
  %388 = fsub float %387, %383
  %389 = fsub float %386, %388
  %390 = tail call float @llvm.amdgcn.ldexp.f32(float %369, i32 1)
  %391 = fmul float %369, %377
  %392 = fneg float %391
  %393 = tail call float @llvm.fma.f32(float %377, float %369, float %392)
  %394 = tail call float @llvm.fma.f32(float %377, float %371, float %393)
  %395 = tail call float @llvm.fma.f32(float %379, float %369, float %394)
  %396 = fadd float %391, %395
  %397 = fsub float %396, %391
  %398 = fsub float %395, %397
  %399 = fmul float %377, %381
  %400 = fneg float %399
  %401 = tail call float @llvm.fma.f32(float %377, float %381, float %400)
  %402 = tail call float @llvm.fma.f32(float %379, float %381, float %401)
  %403 = fadd float %399, %402
  %404 = fsub float %403, %399
  %405 = fsub float %402, %404
  %406 = fadd float %403, 0x3FE5555540000000
  %407 = fadd float %406, 0xBFE5555540000000
  %408 = fsub float %403, %407
  %409 = fadd float %405, 0x3E2E720200000000
  %410 = fadd float %409, %408
  %411 = fadd float %406, %410
  %412 = fsub float %411, %406
  %413 = fsub float %410, %412
  %414 = fmul float %396, %411
  %415 = fneg float %414
  %416 = tail call float @llvm.fma.f32(float %396, float %411, float %415)
  %417 = tail call float @llvm.fma.f32(float %396, float %413, float %416)
  %418 = tail call float @llvm.fma.f32(float %398, float %411, float %417)
  %419 = tail call float @llvm.amdgcn.ldexp.f32(float %371, i32 1)
  %420 = fadd float %414, %418
  %421 = fsub float %420, %414
  %422 = fsub float %418, %421
  %423 = fadd float %390, %420
  %424 = fsub float %423, %390
  %425 = fsub float %420, %424
  %426 = fadd float %419, %422
  %427 = fadd float %426, %425
  %428 = fadd float %423, %427
  %429 = fsub float %428, %423
  %430 = fsub float %427, %429
  %431 = fadd float %387, %428
  %432 = fsub float %431, %387
  %433 = fsub float %431, %432
  %434 = fsub float %387, %433
  %435 = fsub float %428, %432
  %436 = fadd float %435, %434
  %437 = fadd float %389, %430
  %438 = fsub float %437, %389
  %439 = fsub float %437, %438
  %440 = fsub float %389, %439
  %441 = fsub float %430, %438
  %442 = fadd float %441, %440
  %443 = fadd float %437, %436
  %444 = fadd float %431, %443
  %445 = fsub float %444, %431
  %446 = fsub float %443, %445
  %447 = fadd float %442, %446
  %448 = fadd float %444, %447
  %449 = fsub float %448, %444
  %450 = fsub float %447, %449
  %451 = fmul float %448, 2.000000e+00
  %452 = fneg float %451
  %453 = tail call float @llvm.fma.f32(float %448, float 2.000000e+00, float %452)
  %454 = fmul float %448, 0.000000e+00
  %455 = tail call float @llvm.fma.f32(float %450, float 2.000000e+00, float %454)
  %456 = fadd float %453, %455
  %457 = fadd float %451, %456
  %458 = fsub float %457, %451
  %459 = fsub float %456, %458
  %460 = tail call float @llvm.fabs.f32(float %451) #3
  %461 = fcmp oeq float %460, 0x7FF0000000000000
  %462 = select i1 %461, float %451, float %457
  %463 = tail call float @llvm.fabs.f32(float %462) #3
  %464 = fcmp oeq float %463, 0x7FF0000000000000
  %465 = select i1 %464, float 0.000000e+00, float %459
  %466 = fcmp oeq float %462, 0x40562E4300000000
  %467 = select i1 %466, float 0x3EE0000000000000, float 0.000000e+00
  %468 = fsub float %462, %467
  %469 = fadd float %467, %465
  %470 = fmul float %468, 0x3FF7154760000000
  %471 = tail call float @llvm.rint.f32(float %470)
  %472 = fcmp ogt float %468, 0x40562E4300000000
  %473 = fcmp olt float %468, 0xC059D1DA00000000
  %474 = fneg float %470
  %475 = tail call float @llvm.fma.f32(float %468, float 0x3FF7154760000000, float %474)
  %476 = tail call float @llvm.fma.f32(float %468, float 0x3E54AE0BE0000000, float %475)
  %477 = fsub float %470, %471
  %478 = fadd float %476, %477
  %479 = tail call float @llvm.exp2.f32(float %478)
  %480 = fptosi float %471 to i32
  %481 = tail call float @llvm.amdgcn.ldexp.f32(float %479, i32 %480)
  %482 = select i1 %473, float 0.000000e+00, float %481
  %483 = select i1 %472, float 0x7FF0000000000000, float %482
  %484 = tail call float @llvm.fma.f32(float %483, float %469, float %483)
  %485 = tail call float @llvm.fabs.f32(float %483) #3
  %486 = fcmp oeq float %485, 0x7FF0000000000000
  %487 = select i1 %486, float %483, float %484
  %488 = tail call float @llvm.fabs.f32(float %487)
  %489 = fcmp oeq float %343, 0x7FF0000000000000
  %490 = fcmp oeq float %342, 0.000000e+00
  %491 = select i1 %489, float 0x7FF0000000000000, float %488
  %492 = select i1 %490, float 0.000000e+00, float %491
  %493 = fcmp uno float %342, 0.000000e+00
  %494 = select i1 %493, float 0x7FF8000000000000, float %492
  %495 = fadd contract float %494, %341
  %496 = fadd contract float %495, 0.000000e+00
  br label %497

497:                                              ; preds = %782, %164
  %498 = phi i1 [ true, %164 ], [ false, %782 ]
  %499 = phi i32 [ 0, %164 ], [ 1, %782 ]
  %500 = phi float [ %496, %164 ], [ %963, %782 ]
  %501 = zext i32 %499 to i64
  %502 = extractelement <3 x float> %37, i64 %501
  %503 = fadd contract float %502, -1.000000e+00
  %504 = fmul contract float %503, 2.500000e-01
  %505 = fadd contract float %504, 1.000000e+00
  %506 = add nuw nsw i32 %499, 1
  %507 = zext i32 %506 to i64
  %508 = extractelement <3 x float> %37, i64 %507
  %509 = fadd contract float %508, -1.000000e+00
  %510 = fmul contract float %509, 2.500000e-01
  %511 = fadd contract float %510, 1.000000e+00
  %512 = fadd contract float %505, -1.000000e+00
  %513 = tail call float @llvm.fabs.f32(float %512)
  %514 = tail call float @llvm.amdgcn.frexp.mant.f32(float %513)
  %515 = fcmp olt float %514, 0x3FE5555560000000
  %516 = zext i1 %515 to i32
  %517 = tail call float @llvm.amdgcn.ldexp.f32(float %514, i32 %516)
  %518 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %513)
  %519 = sub nsw i32 %518, %516
  %520 = fadd float %517, -1.000000e+00
  %521 = fadd float %517, 1.000000e+00
  %522 = fadd float %521, -1.000000e+00
  %523 = fsub float %517, %522
  %524 = tail call float @llvm.amdgcn.rcp.f32(float %521)
  %525 = fmul float %520, %524
  %526 = fmul float %521, %525
  %527 = fneg float %526
  %528 = tail call float @llvm.fma.f32(float %525, float %521, float %527)
  %529 = tail call float @llvm.fma.f32(float %525, float %523, float %528)
  %530 = fadd float %526, %529
  %531 = fsub float %530, %526
  %532 = fsub float %529, %531
  %533 = fsub float %520, %530
  %534 = fsub float %520, %533
  %535 = fsub float %534, %530
  %536 = fsub float %535, %532
  %537 = fadd float %533, %536
  %538 = fmul float %524, %537
  %539 = fadd float %525, %538
  %540 = fsub float %539, %525
  %541 = fsub float %538, %540
  %542 = fmul float %539, %539
  %543 = fneg float %542
  %544 = tail call float @llvm.fma.f32(float %539, float %539, float %543)
  %545 = fmul float %541, 2.000000e+00
  %546 = tail call float @llvm.fma.f32(float %539, float %545, float %544)
  %547 = fadd float %542, %546
  %548 = fsub float %547, %542
  %549 = fsub float %546, %548
  %550 = tail call float @llvm.fmuladd.f32(float %547, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %551 = tail call float @llvm.fmuladd.f32(float %547, float %550, float 0x3FD999BDE0000000)
  %552 = sitofp i32 %519 to float
  %553 = fmul float %552, 0x3FE62E4300000000
  %554 = fneg float %553
  %555 = tail call float @llvm.fma.f32(float %552, float 0x3FE62E4300000000, float %554)
  %556 = tail call float @llvm.fma.f32(float %552, float 0xBE205C6100000000, float %555)
  %557 = fadd float %553, %556
  %558 = fsub float %557, %553
  %559 = fsub float %556, %558
  %560 = tail call float @llvm.amdgcn.ldexp.f32(float %539, i32 1)
  %561 = fmul float %539, %547
  %562 = fneg float %561
  %563 = tail call float @llvm.fma.f32(float %547, float %539, float %562)
  %564 = tail call float @llvm.fma.f32(float %547, float %541, float %563)
  %565 = tail call float @llvm.fma.f32(float %549, float %539, float %564)
  %566 = fadd float %561, %565
  %567 = fsub float %566, %561
  %568 = fsub float %565, %567
  %569 = fmul float %547, %551
  %570 = fneg float %569
  %571 = tail call float @llvm.fma.f32(float %547, float %551, float %570)
  %572 = tail call float @llvm.fma.f32(float %549, float %551, float %571)
  %573 = fadd float %569, %572
  %574 = fsub float %573, %569
  %575 = fsub float %572, %574
  %576 = fadd float %573, 0x3FE5555540000000
  %577 = fadd float %576, 0xBFE5555540000000
  %578 = fsub float %573, %577
  %579 = fadd float %575, 0x3E2E720200000000
  %580 = fadd float %579, %578
  %581 = fadd float %576, %580
  %582 = fsub float %581, %576
  %583 = fsub float %580, %582
  %584 = fmul float %566, %581
  %585 = fneg float %584
  %586 = tail call float @llvm.fma.f32(float %566, float %581, float %585)
  %587 = tail call float @llvm.fma.f32(float %566, float %583, float %586)
  %588 = tail call float @llvm.fma.f32(float %568, float %581, float %587)
  %589 = tail call float @llvm.amdgcn.ldexp.f32(float %541, i32 1)
  %590 = fadd float %584, %588
  %591 = fsub float %590, %584
  %592 = fsub float %588, %591
  %593 = fadd float %560, %590
  %594 = fsub float %593, %560
  %595 = fsub float %590, %594
  %596 = fadd float %589, %592
  %597 = fadd float %596, %595
  %598 = fadd float %593, %597
  %599 = fsub float %598, %593
  %600 = fsub float %597, %599
  %601 = fadd float %557, %598
  %602 = fsub float %601, %557
  %603 = fsub float %601, %602
  %604 = fsub float %557, %603
  %605 = fsub float %598, %602
  %606 = fadd float %605, %604
  %607 = fadd float %559, %600
  %608 = fsub float %607, %559
  %609 = fsub float %607, %608
  %610 = fsub float %559, %609
  %611 = fsub float %600, %608
  %612 = fadd float %611, %610
  %613 = fadd float %607, %606
  %614 = fadd float %601, %613
  %615 = fsub float %614, %601
  %616 = fsub float %613, %615
  %617 = fadd float %612, %616
  %618 = fadd float %614, %617
  %619 = fsub float %618, %614
  %620 = fsub float %617, %619
  %621 = fmul float %618, 2.000000e+00
  %622 = fneg float %621
  %623 = tail call float @llvm.fma.f32(float %618, float 2.000000e+00, float %622)
  %624 = fmul float %618, 0.000000e+00
  %625 = tail call float @llvm.fma.f32(float %620, float 2.000000e+00, float %624)
  %626 = fadd float %623, %625
  %627 = fadd float %621, %626
  %628 = fsub float %627, %621
  %629 = fsub float %626, %628
  %630 = tail call float @llvm.fabs.f32(float %621) #3
  %631 = fcmp oeq float %630, 0x7FF0000000000000
  %632 = select i1 %631, float %621, float %627
  %633 = tail call float @llvm.fabs.f32(float %632) #3
  %634 = fcmp oeq float %633, 0x7FF0000000000000
  %635 = select i1 %634, float 0.000000e+00, float %629
  %636 = fcmp oeq float %632, 0x40562E4300000000
  %637 = select i1 %636, float 0x3EE0000000000000, float 0.000000e+00
  %638 = fsub float %632, %637
  %639 = fadd float %637, %635
  %640 = fmul float %638, 0x3FF7154760000000
  %641 = tail call float @llvm.rint.f32(float %640)
  %642 = fcmp ogt float %638, 0x40562E4300000000
  %643 = fcmp olt float %638, 0xC059D1DA00000000
  %644 = fneg float %640
  %645 = tail call float @llvm.fma.f32(float %638, float 0x3FF7154760000000, float %644)
  %646 = tail call float @llvm.fma.f32(float %638, float 0x3E54AE0BE0000000, float %645)
  %647 = fsub float %640, %641
  %648 = fadd float %646, %647
  %649 = tail call float @llvm.exp2.f32(float %648)
  %650 = fptosi float %641 to i32
  %651 = tail call float @llvm.amdgcn.ldexp.f32(float %649, i32 %650)
  %652 = select i1 %643, float 0.000000e+00, float %651
  %653 = select i1 %642, float 0x7FF0000000000000, float %652
  %654 = tail call float @llvm.fma.f32(float %653, float %639, float %653)
  %655 = tail call float @llvm.fabs.f32(float %653) #3
  %656 = fcmp oeq float %655, 0x7FF0000000000000
  %657 = select i1 %656, float %653, float %654
  %658 = tail call float @llvm.fabs.f32(float %657)
  %659 = fcmp oeq float %513, 0x7FF0000000000000
  %660 = fcmp oeq float %512, 0.000000e+00
  %661 = select i1 %659, float 0x7FF0000000000000, float %658
  %662 = select i1 %660, float 0.000000e+00, float %661
  %663 = fcmp uno float %512, 0.000000e+00
  %664 = select i1 %663, float 0x7FF8000000000000, float %662
  %665 = fmul contract float %511, 0x400921CAC0000000
  %666 = tail call float @llvm.fabs.f32(float %665)
  %667 = fcmp olt float %666, 1.310720e+05
  br i1 %667, label %668, label %676

668:                                              ; preds = %497
  %669 = fmul float %666, 0x3FE45F3060000000
  %670 = tail call float @llvm.rint.f32(float %669)
  %671 = tail call float @llvm.fma.f32(float %670, float 0xBFF921FB40000000, float %666)
  %672 = tail call float @llvm.fma.f32(float %670, float 0xBE74442D00000000, float %671)
  %673 = tail call float @llvm.fma.f32(float %670, float 0xBCF8469880000000, float %672)
  %674 = fptosi float %670 to i32
  %675 = bitcast float %666 to i32
  br label %782

676:                                              ; preds = %497
  %677 = bitcast float %666 to i32
  %678 = lshr i32 %677, 23
  %679 = and i32 %677, 8388607
  %680 = or i32 %679, 8388608
  %681 = zext i32 %680 to i64
  %682 = mul nuw nsw i64 %681, 4266746795
  %683 = trunc i64 %682 to i32
  %684 = lshr i64 %682, 32
  %685 = mul nuw nsw i64 %681, 1011060801
  %686 = add nuw nsw i64 %684, %685
  %687 = trunc i64 %686 to i32
  %688 = lshr i64 %686, 32
  %689 = mul nuw nsw i64 %681, 3680671129
  %690 = add nuw nsw i64 %688, %689
  %691 = trunc i64 %690 to i32
  %692 = lshr i64 %690, 32
  %693 = mul nuw nsw i64 %681, 4113882560
  %694 = add nuw nsw i64 %692, %693
  %695 = trunc i64 %694 to i32
  %696 = lshr i64 %694, 32
  %697 = mul nuw nsw i64 %681, 4230436817
  %698 = add nuw nsw i64 %696, %697
  %699 = trunc i64 %698 to i32
  %700 = lshr i64 %698, 32
  %701 = mul nuw nsw i64 %681, 1313084713
  %702 = add nuw nsw i64 %700, %701
  %703 = trunc i64 %702 to i32
  %704 = lshr i64 %702, 32
  %705 = mul nuw nsw i64 %681, 2734261102
  %706 = add nuw nsw i64 %704, %705
  %707 = trunc i64 %706 to i32
  %708 = lshr i64 %706, 32
  %709 = trunc i64 %708 to i32
  %710 = add nsw i32 %678, -120
  %711 = icmp ugt i32 %710, 63
  %712 = select i1 %711, i32 %703, i32 %709
  %713 = select i1 %711, i32 %699, i32 %707
  %714 = select i1 %711, i32 %695, i32 %703
  %715 = select i1 %711, i32 %691, i32 %699
  %716 = select i1 %711, i32 %687, i32 %695
  %717 = select i1 %711, i32 %683, i32 %691
  %718 = select i1 %711, i32 -64, i32 0
  %719 = add nsw i32 %718, %710
  %720 = icmp ugt i32 %719, 31
  %721 = select i1 %720, i32 %713, i32 %712
  %722 = select i1 %720, i32 %714, i32 %713
  %723 = select i1 %720, i32 %715, i32 %714
  %724 = select i1 %720, i32 %716, i32 %715
  %725 = select i1 %720, i32 %717, i32 %716
  %726 = select i1 %720, i32 -32, i32 0
  %727 = add nsw i32 %726, %719
  %728 = icmp ugt i32 %727, 31
  %729 = select i1 %728, i32 %722, i32 %721
  %730 = select i1 %728, i32 %723, i32 %722
  %731 = select i1 %728, i32 %724, i32 %723
  %732 = select i1 %728, i32 %725, i32 %724
  %733 = select i1 %728, i32 -32, i32 0
  %734 = add nsw i32 %733, %727
  %735 = icmp eq i32 %734, 0
  %736 = sub nsw i32 32, %734
  %737 = tail call i32 @llvm.fshr.i32(i32 %729, i32 %730, i32 %736)
  %738 = tail call i32 @llvm.fshr.i32(i32 %730, i32 %731, i32 %736)
  %739 = tail call i32 @llvm.fshr.i32(i32 %731, i32 %732, i32 %736)
  %740 = select i1 %735, i32 %729, i32 %737
  %741 = select i1 %735, i32 %730, i32 %738
  %742 = select i1 %735, i32 %731, i32 %739
  %743 = lshr i32 %740, 29
  %744 = tail call i32 @llvm.fshl.i32(i32 %740, i32 %741, i32 2)
  %745 = tail call i32 @llvm.fshl.i32(i32 %741, i32 %742, i32 2)
  %746 = tail call i32 @llvm.fshl.i32(i32 %742, i32 %732, i32 2)
  %747 = and i32 %743, 1
  %748 = sub nsw i32 0, %747
  %749 = shl i32 %743, 31
  %750 = xor i32 %744, %748
  %751 = xor i32 %745, %748
  %752 = xor i32 %746, %748
  %753 = tail call i32 @llvm.ctlz.i32(i32 %750, i1 false), !range !11
  %754 = sub nsw i32 31, %753
  %755 = tail call i32 @llvm.fshr.i32(i32 %750, i32 %751, i32 %754)
  %756 = tail call i32 @llvm.fshr.i32(i32 %751, i32 %752, i32 %754)
  %757 = shl nuw nsw i32 %753, 23
  %758 = sub nuw nsw i32 1056964608, %757
  %759 = lshr i32 %755, 9
  %760 = or i32 %759, %758
  %761 = or i32 %760, %749
  %762 = bitcast i32 %761 to float
  %763 = tail call i32 @llvm.fshl.i32(i32 %755, i32 %756, i32 23)
  %764 = tail call i32 @llvm.ctlz.i32(i32 %763, i1 false), !range !11
  %765 = fmul float %762, 0x3FF921FB40000000
  %766 = add nuw nsw i32 %764, %753
  %767 = shl nuw nsw i32 %766, 23
  %768 = sub nuw nsw i32 855638016, %767
  %769 = sub nsw i32 31, %764
  %770 = tail call i32 @llvm.fshr.i32(i32 %763, i32 %756, i32 %769)
  %771 = lshr i32 %770, 9
  %772 = or i32 %768, %771
  %773 = or i32 %772, %749
  %774 = bitcast i32 %773 to float
  %775 = fneg float %765
  %776 = tail call float @llvm.fma.f32(float %762, float 0x3FF921FB40000000, float %775)
  %777 = tail call float @llvm.fma.f32(float %762, float 0x3E74442D00000000, float %776)
  %778 = tail call float @llvm.fma.f32(float %774, float 0x3FF921FB40000000, float %777)
  %779 = fadd float %765, %778
  %780 = lshr i32 %740, 30
  %781 = add nuw nsw i32 %747, %780
  br label %782

782:                                              ; preds = %676, %668
  %783 = phi i32 [ %675, %668 ], [ %677, %676 ]
  %784 = phi float [ %673, %668 ], [ %779, %676 ]
  %785 = phi i32 [ %674, %668 ], [ %781, %676 ]
  %786 = fmul float %784, %784
  %787 = tail call float @llvm.fmuladd.f32(float %786, float 0xBF29833040000000, float 0x3F81103880000000)
  %788 = tail call float @llvm.fmuladd.f32(float %786, float %787, float 0xBFC55553A0000000)
  %789 = fmul float %786, %788
  %790 = tail call float @llvm.fmuladd.f32(float %784, float %789, float %784)
  %791 = tail call float @llvm.fmuladd.f32(float %786, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %792 = tail call float @llvm.fmuladd.f32(float %786, float %791, float 0x3FA5557EE0000000)
  %793 = tail call float @llvm.fmuladd.f32(float %786, float %792, float 0xBFE0000080000000)
  %794 = tail call float @llvm.fmuladd.f32(float %786, float %793, float 1.000000e+00)
  %795 = and i32 %785, 1
  %796 = icmp eq i32 %795, 0
  %797 = select i1 %796, float %790, float %794
  %798 = bitcast float %797 to i32
  %799 = shl i32 %785, 30
  %800 = and i32 %799, -2147483648
  %801 = bitcast float %665 to i32
  %802 = xor i32 %783, %801
  %803 = xor i32 %802, %800
  %804 = xor i32 %803, %798
  %805 = bitcast i32 %804 to float
  %806 = tail call i1 @llvm.amdgcn.class.f32(float %666, i32 504)
  %807 = select i1 %806, float %805, float 0x7FF8000000000000
  %808 = tail call float @llvm.fabs.f32(float %807)
  %809 = tail call float @llvm.amdgcn.frexp.mant.f32(float %808)
  %810 = fcmp olt float %809, 0x3FE5555560000000
  %811 = zext i1 %810 to i32
  %812 = tail call float @llvm.amdgcn.ldexp.f32(float %809, i32 %811)
  %813 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %808)
  %814 = sub nsw i32 %813, %811
  %815 = fadd float %812, -1.000000e+00
  %816 = fadd float %812, 1.000000e+00
  %817 = fadd float %816, -1.000000e+00
  %818 = fsub float %812, %817
  %819 = tail call float @llvm.amdgcn.rcp.f32(float %816)
  %820 = fmul float %815, %819
  %821 = fmul float %816, %820
  %822 = fneg float %821
  %823 = tail call float @llvm.fma.f32(float %820, float %816, float %822)
  %824 = tail call float @llvm.fma.f32(float %820, float %818, float %823)
  %825 = fadd float %821, %824
  %826 = fsub float %825, %821
  %827 = fsub float %824, %826
  %828 = fsub float %815, %825
  %829 = fsub float %815, %828
  %830 = fsub float %829, %825
  %831 = fsub float %830, %827
  %832 = fadd float %828, %831
  %833 = fmul float %819, %832
  %834 = fadd float %820, %833
  %835 = fsub float %834, %820
  %836 = fsub float %833, %835
  %837 = fmul float %834, %834
  %838 = fneg float %837
  %839 = tail call float @llvm.fma.f32(float %834, float %834, float %838)
  %840 = fmul float %836, 2.000000e+00
  %841 = tail call float @llvm.fma.f32(float %834, float %840, float %839)
  %842 = fadd float %837, %841
  %843 = fsub float %842, %837
  %844 = fsub float %841, %843
  %845 = tail call float @llvm.fmuladd.f32(float %842, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %846 = tail call float @llvm.fmuladd.f32(float %842, float %845, float 0x3FD999BDE0000000)
  %847 = sitofp i32 %814 to float
  %848 = fmul float %847, 0x3FE62E4300000000
  %849 = fneg float %848
  %850 = tail call float @llvm.fma.f32(float %847, float 0x3FE62E4300000000, float %849)
  %851 = tail call float @llvm.fma.f32(float %847, float 0xBE205C6100000000, float %850)
  %852 = fadd float %848, %851
  %853 = fsub float %852, %848
  %854 = fsub float %851, %853
  %855 = tail call float @llvm.amdgcn.ldexp.f32(float %834, i32 1)
  %856 = fmul float %834, %842
  %857 = fneg float %856
  %858 = tail call float @llvm.fma.f32(float %842, float %834, float %857)
  %859 = tail call float @llvm.fma.f32(float %842, float %836, float %858)
  %860 = tail call float @llvm.fma.f32(float %844, float %834, float %859)
  %861 = fadd float %856, %860
  %862 = fsub float %861, %856
  %863 = fsub float %860, %862
  %864 = fmul float %842, %846
  %865 = fneg float %864
  %866 = tail call float @llvm.fma.f32(float %842, float %846, float %865)
  %867 = tail call float @llvm.fma.f32(float %844, float %846, float %866)
  %868 = fadd float %864, %867
  %869 = fsub float %868, %864
  %870 = fsub float %867, %869
  %871 = fadd float %868, 0x3FE5555540000000
  %872 = fadd float %871, 0xBFE5555540000000
  %873 = fsub float %868, %872
  %874 = fadd float %870, 0x3E2E720200000000
  %875 = fadd float %874, %873
  %876 = fadd float %871, %875
  %877 = fsub float %876, %871
  %878 = fsub float %875, %877
  %879 = fmul float %861, %876
  %880 = fneg float %879
  %881 = tail call float @llvm.fma.f32(float %861, float %876, float %880)
  %882 = tail call float @llvm.fma.f32(float %861, float %878, float %881)
  %883 = tail call float @llvm.fma.f32(float %863, float %876, float %882)
  %884 = tail call float @llvm.amdgcn.ldexp.f32(float %836, i32 1)
  %885 = fadd float %879, %883
  %886 = fsub float %885, %879
  %887 = fsub float %883, %886
  %888 = fadd float %855, %885
  %889 = fsub float %888, %855
  %890 = fsub float %885, %889
  %891 = fadd float %884, %887
  %892 = fadd float %891, %890
  %893 = fadd float %888, %892
  %894 = fsub float %893, %888
  %895 = fsub float %892, %894
  %896 = fadd float %852, %893
  %897 = fsub float %896, %852
  %898 = fsub float %896, %897
  %899 = fsub float %852, %898
  %900 = fsub float %893, %897
  %901 = fadd float %900, %899
  %902 = fadd float %854, %895
  %903 = fsub float %902, %854
  %904 = fsub float %902, %903
  %905 = fsub float %854, %904
  %906 = fsub float %895, %903
  %907 = fadd float %906, %905
  %908 = fadd float %902, %901
  %909 = fadd float %896, %908
  %910 = fsub float %909, %896
  %911 = fsub float %908, %910
  %912 = fadd float %907, %911
  %913 = fadd float %909, %912
  %914 = fsub float %913, %909
  %915 = fsub float %912, %914
  %916 = fmul float %913, 2.000000e+00
  %917 = fneg float %916
  %918 = tail call float @llvm.fma.f32(float %913, float 2.000000e+00, float %917)
  %919 = fmul float %913, 0.000000e+00
  %920 = tail call float @llvm.fma.f32(float %915, float 2.000000e+00, float %919)
  %921 = fadd float %918, %920
  %922 = fadd float %916, %921
  %923 = fsub float %922, %916
  %924 = fsub float %921, %923
  %925 = tail call float @llvm.fabs.f32(float %916) #3
  %926 = fcmp oeq float %925, 0x7FF0000000000000
  %927 = select i1 %926, float %916, float %922
  %928 = tail call float @llvm.fabs.f32(float %927) #3
  %929 = fcmp oeq float %928, 0x7FF0000000000000
  %930 = select i1 %929, float 0.000000e+00, float %924
  %931 = fcmp oeq float %927, 0x40562E4300000000
  %932 = select i1 %931, float 0x3EE0000000000000, float 0.000000e+00
  %933 = fsub float %927, %932
  %934 = fadd float %932, %930
  %935 = fmul float %933, 0x3FF7154760000000
  %936 = tail call float @llvm.rint.f32(float %935)
  %937 = fcmp ogt float %933, 0x40562E4300000000
  %938 = fcmp olt float %933, 0xC059D1DA00000000
  %939 = fneg float %935
  %940 = tail call float @llvm.fma.f32(float %933, float 0x3FF7154760000000, float %939)
  %941 = tail call float @llvm.fma.f32(float %933, float 0x3E54AE0BE0000000, float %940)
  %942 = fsub float %935, %936
  %943 = fadd float %941, %942
  %944 = tail call float @llvm.exp2.f32(float %943)
  %945 = fptosi float %936 to i32
  %946 = tail call float @llvm.amdgcn.ldexp.f32(float %944, i32 %945)
  %947 = select i1 %938, float 0.000000e+00, float %946
  %948 = select i1 %937, float 0x7FF0000000000000, float %947
  %949 = tail call float @llvm.fma.f32(float %948, float %934, float %948)
  %950 = tail call float @llvm.fabs.f32(float %948) #3
  %951 = fcmp oeq float %950, 0x7FF0000000000000
  %952 = select i1 %951, float %948, float %949
  %953 = tail call float @llvm.fabs.f32(float %952)
  %954 = fcmp oeq float %808, 0x7FF0000000000000
  %955 = fcmp oeq float %807, 0.000000e+00
  %956 = fcmp uno float %807, 0.000000e+00
  %957 = fmul contract float %953, 1.000000e+01
  %958 = fadd contract float %957, 1.000000e+00
  %959 = select i1 %954, float 0x7FF0000000000000, float %958
  %960 = select i1 %955, float 1.000000e+00, float %959
  %961 = select i1 %956, float 0x7FF8000000000000, float %960
  %962 = fmul contract float %664, %961
  %963 = fadd contract float %500, %962
  br i1 %498, label %497, label %964, !llvm.loop !12

964:                                              ; preds = %782
  %965 = fadd contract float %23, -1.000000e+00
  %966 = fmul contract float %965, 2.500000e-01
  %967 = fadd contract float %966, 1.000000e+00
  %968 = fadd contract float %39, -1.000000e+00
  %969 = fmul contract float %968, 2.500000e-01
  %970 = fadd contract float %969, 1.000000e+00
  %971 = fmul contract float %967, 0x400921CAC0000000
  %972 = tail call float @llvm.fabs.f32(float %971)
  %973 = fcmp olt float %972, 1.310720e+05
  br i1 %973, label %974, label %982

974:                                              ; preds = %964
  %975 = fmul float %972, 0x3FE45F3060000000
  %976 = tail call float @llvm.rint.f32(float %975)
  %977 = tail call float @llvm.fma.f32(float %976, float 0xBFF921FB40000000, float %972)
  %978 = tail call float @llvm.fma.f32(float %976, float 0xBE74442D00000000, float %977)
  %979 = tail call float @llvm.fma.f32(float %976, float 0xBCF8469880000000, float %978)
  %980 = fptosi float %976 to i32
  %981 = bitcast float %972 to i32
  br label %1088

982:                                              ; preds = %964
  %983 = bitcast float %972 to i32
  %984 = lshr i32 %983, 23
  %985 = and i32 %983, 8388607
  %986 = or i32 %985, 8388608
  %987 = zext i32 %986 to i64
  %988 = mul nuw nsw i64 %987, 4266746795
  %989 = trunc i64 %988 to i32
  %990 = lshr i64 %988, 32
  %991 = mul nuw nsw i64 %987, 1011060801
  %992 = add nuw nsw i64 %990, %991
  %993 = trunc i64 %992 to i32
  %994 = lshr i64 %992, 32
  %995 = mul nuw nsw i64 %987, 3680671129
  %996 = add nuw nsw i64 %994, %995
  %997 = trunc i64 %996 to i32
  %998 = lshr i64 %996, 32
  %999 = mul nuw nsw i64 %987, 4113882560
  %1000 = add nuw nsw i64 %998, %999
  %1001 = trunc i64 %1000 to i32
  %1002 = lshr i64 %1000, 32
  %1003 = mul nuw nsw i64 %987, 4230436817
  %1004 = add nuw nsw i64 %1002, %1003
  %1005 = trunc i64 %1004 to i32
  %1006 = lshr i64 %1004, 32
  %1007 = mul nuw nsw i64 %987, 1313084713
  %1008 = add nuw nsw i64 %1006, %1007
  %1009 = trunc i64 %1008 to i32
  %1010 = lshr i64 %1008, 32
  %1011 = mul nuw nsw i64 %987, 2734261102
  %1012 = add nuw nsw i64 %1010, %1011
  %1013 = trunc i64 %1012 to i32
  %1014 = lshr i64 %1012, 32
  %1015 = trunc i64 %1014 to i32
  %1016 = add nsw i32 %984, -120
  %1017 = icmp ugt i32 %1016, 63
  %1018 = select i1 %1017, i32 %1009, i32 %1015
  %1019 = select i1 %1017, i32 %1005, i32 %1013
  %1020 = select i1 %1017, i32 %1001, i32 %1009
  %1021 = select i1 %1017, i32 %997, i32 %1005
  %1022 = select i1 %1017, i32 %993, i32 %1001
  %1023 = select i1 %1017, i32 %989, i32 %997
  %1024 = select i1 %1017, i32 -64, i32 0
  %1025 = add nsw i32 %1024, %1016
  %1026 = icmp ugt i32 %1025, 31
  %1027 = select i1 %1026, i32 %1019, i32 %1018
  %1028 = select i1 %1026, i32 %1020, i32 %1019
  %1029 = select i1 %1026, i32 %1021, i32 %1020
  %1030 = select i1 %1026, i32 %1022, i32 %1021
  %1031 = select i1 %1026, i32 %1023, i32 %1022
  %1032 = select i1 %1026, i32 -32, i32 0
  %1033 = add nsw i32 %1032, %1025
  %1034 = icmp ugt i32 %1033, 31
  %1035 = select i1 %1034, i32 %1028, i32 %1027
  %1036 = select i1 %1034, i32 %1029, i32 %1028
  %1037 = select i1 %1034, i32 %1030, i32 %1029
  %1038 = select i1 %1034, i32 %1031, i32 %1030
  %1039 = select i1 %1034, i32 -32, i32 0
  %1040 = add nsw i32 %1039, %1033
  %1041 = icmp eq i32 %1040, 0
  %1042 = sub nsw i32 32, %1040
  %1043 = tail call i32 @llvm.fshr.i32(i32 %1035, i32 %1036, i32 %1042)
  %1044 = tail call i32 @llvm.fshr.i32(i32 %1036, i32 %1037, i32 %1042)
  %1045 = tail call i32 @llvm.fshr.i32(i32 %1037, i32 %1038, i32 %1042)
  %1046 = select i1 %1041, i32 %1035, i32 %1043
  %1047 = select i1 %1041, i32 %1036, i32 %1044
  %1048 = select i1 %1041, i32 %1037, i32 %1045
  %1049 = lshr i32 %1046, 29
  %1050 = tail call i32 @llvm.fshl.i32(i32 %1046, i32 %1047, i32 2)
  %1051 = tail call i32 @llvm.fshl.i32(i32 %1047, i32 %1048, i32 2)
  %1052 = tail call i32 @llvm.fshl.i32(i32 %1048, i32 %1038, i32 2)
  %1053 = and i32 %1049, 1
  %1054 = sub nsw i32 0, %1053
  %1055 = shl i32 %1049, 31
  %1056 = xor i32 %1050, %1054
  %1057 = xor i32 %1051, %1054
  %1058 = xor i32 %1052, %1054
  %1059 = tail call i32 @llvm.ctlz.i32(i32 %1056, i1 false), !range !11
  %1060 = sub nsw i32 31, %1059
  %1061 = tail call i32 @llvm.fshr.i32(i32 %1056, i32 %1057, i32 %1060)
  %1062 = tail call i32 @llvm.fshr.i32(i32 %1057, i32 %1058, i32 %1060)
  %1063 = shl nuw nsw i32 %1059, 23
  %1064 = sub nuw nsw i32 1056964608, %1063
  %1065 = lshr i32 %1061, 9
  %1066 = or i32 %1065, %1064
  %1067 = or i32 %1066, %1055
  %1068 = bitcast i32 %1067 to float
  %1069 = tail call i32 @llvm.fshl.i32(i32 %1061, i32 %1062, i32 23)
  %1070 = tail call i32 @llvm.ctlz.i32(i32 %1069, i1 false), !range !11
  %1071 = fmul float %1068, 0x3FF921FB40000000
  %1072 = add nuw nsw i32 %1070, %1059
  %1073 = shl nuw nsw i32 %1072, 23
  %1074 = sub nuw nsw i32 855638016, %1073
  %1075 = sub nsw i32 31, %1070
  %1076 = tail call i32 @llvm.fshr.i32(i32 %1069, i32 %1062, i32 %1075)
  %1077 = lshr i32 %1076, 9
  %1078 = or i32 %1074, %1077
  %1079 = or i32 %1078, %1055
  %1080 = bitcast i32 %1079 to float
  %1081 = fneg float %1071
  %1082 = tail call float @llvm.fma.f32(float %1068, float 0x3FF921FB40000000, float %1081)
  %1083 = tail call float @llvm.fma.f32(float %1068, float 0x3E74442D00000000, float %1082)
  %1084 = tail call float @llvm.fma.f32(float %1080, float 0x3FF921FB40000000, float %1083)
  %1085 = fadd float %1071, %1084
  %1086 = lshr i32 %1046, 30
  %1087 = add nuw nsw i32 %1053, %1086
  br label %1088

1088:                                             ; preds = %982, %974
  %1089 = phi i32 [ %981, %974 ], [ %983, %982 ]
  %1090 = phi float [ %979, %974 ], [ %1085, %982 ]
  %1091 = phi i32 [ %980, %974 ], [ %1087, %982 ]
  %1092 = fmul float %1090, %1090
  %1093 = tail call float @llvm.fmuladd.f32(float %1092, float 0xBF29833040000000, float 0x3F81103880000000)
  %1094 = tail call float @llvm.fmuladd.f32(float %1092, float %1093, float 0xBFC55553A0000000)
  %1095 = fmul float %1092, %1094
  %1096 = tail call float @llvm.fmuladd.f32(float %1090, float %1095, float %1090)
  %1097 = tail call float @llvm.fmuladd.f32(float %1092, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %1098 = tail call float @llvm.fmuladd.f32(float %1092, float %1097, float 0x3FA5557EE0000000)
  %1099 = tail call float @llvm.fmuladd.f32(float %1092, float %1098, float 0xBFE0000080000000)
  %1100 = tail call float @llvm.fmuladd.f32(float %1092, float %1099, float 1.000000e+00)
  %1101 = and i32 %1091, 1
  %1102 = icmp eq i32 %1101, 0
  %1103 = select i1 %1102, float %1096, float %1100
  %1104 = bitcast float %1103 to i32
  %1105 = shl i32 %1091, 30
  %1106 = and i32 %1105, -2147483648
  %1107 = bitcast float %971 to i32
  %1108 = xor i32 %1089, %1107
  %1109 = xor i32 %1108, %1106
  %1110 = xor i32 %1109, %1104
  %1111 = bitcast i32 %1110 to float
  %1112 = tail call i1 @llvm.amdgcn.class.f32(float %972, i32 504)
  %1113 = select i1 %1112, float %1111, float 0x7FF8000000000000
  %1114 = tail call float @llvm.fabs.f32(float %1113)
  %1115 = tail call float @llvm.amdgcn.frexp.mant.f32(float %1114)
  %1116 = fcmp olt float %1115, 0x3FE5555560000000
  %1117 = zext i1 %1116 to i32
  %1118 = tail call float @llvm.amdgcn.ldexp.f32(float %1115, i32 %1117)
  %1119 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %1114)
  %1120 = sub nsw i32 %1119, %1117
  %1121 = fadd float %1118, -1.000000e+00
  %1122 = fadd float %1118, 1.000000e+00
  %1123 = fadd float %1122, -1.000000e+00
  %1124 = fsub float %1118, %1123
  %1125 = tail call float @llvm.amdgcn.rcp.f32(float %1122)
  %1126 = fmul float %1121, %1125
  %1127 = fmul float %1122, %1126
  %1128 = fneg float %1127
  %1129 = tail call float @llvm.fma.f32(float %1126, float %1122, float %1128)
  %1130 = tail call float @llvm.fma.f32(float %1126, float %1124, float %1129)
  %1131 = fadd float %1127, %1130
  %1132 = fsub float %1131, %1127
  %1133 = fsub float %1130, %1132
  %1134 = fsub float %1121, %1131
  %1135 = fsub float %1121, %1134
  %1136 = fsub float %1135, %1131
  %1137 = fsub float %1136, %1133
  %1138 = fadd float %1134, %1137
  %1139 = fmul float %1125, %1138
  %1140 = fadd float %1126, %1139
  %1141 = fsub float %1140, %1126
  %1142 = fsub float %1139, %1141
  %1143 = fmul float %1140, %1140
  %1144 = fneg float %1143
  %1145 = tail call float @llvm.fma.f32(float %1140, float %1140, float %1144)
  %1146 = fmul float %1142, 2.000000e+00
  %1147 = tail call float @llvm.fma.f32(float %1140, float %1146, float %1145)
  %1148 = fadd float %1143, %1147
  %1149 = fsub float %1148, %1143
  %1150 = fsub float %1147, %1149
  %1151 = tail call float @llvm.fmuladd.f32(float %1148, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %1152 = tail call float @llvm.fmuladd.f32(float %1148, float %1151, float 0x3FD999BDE0000000)
  %1153 = sitofp i32 %1120 to float
  %1154 = fmul float %1153, 0x3FE62E4300000000
  %1155 = fneg float %1154
  %1156 = tail call float @llvm.fma.f32(float %1153, float 0x3FE62E4300000000, float %1155)
  %1157 = tail call float @llvm.fma.f32(float %1153, float 0xBE205C6100000000, float %1156)
  %1158 = fadd float %1154, %1157
  %1159 = fsub float %1158, %1154
  %1160 = fsub float %1157, %1159
  %1161 = tail call float @llvm.amdgcn.ldexp.f32(float %1140, i32 1)
  %1162 = fmul float %1140, %1148
  %1163 = fneg float %1162
  %1164 = tail call float @llvm.fma.f32(float %1148, float %1140, float %1163)
  %1165 = tail call float @llvm.fma.f32(float %1148, float %1142, float %1164)
  %1166 = tail call float @llvm.fma.f32(float %1150, float %1140, float %1165)
  %1167 = fadd float %1162, %1166
  %1168 = fsub float %1167, %1162
  %1169 = fsub float %1166, %1168
  %1170 = fmul float %1148, %1152
  %1171 = fneg float %1170
  %1172 = tail call float @llvm.fma.f32(float %1148, float %1152, float %1171)
  %1173 = tail call float @llvm.fma.f32(float %1150, float %1152, float %1172)
  %1174 = fadd float %1170, %1173
  %1175 = fsub float %1174, %1170
  %1176 = fsub float %1173, %1175
  %1177 = fadd float %1174, 0x3FE5555540000000
  %1178 = fadd float %1177, 0xBFE5555540000000
  %1179 = fsub float %1174, %1178
  %1180 = fadd float %1176, 0x3E2E720200000000
  %1181 = fadd float %1180, %1179
  %1182 = fadd float %1177, %1181
  %1183 = fsub float %1182, %1177
  %1184 = fsub float %1181, %1183
  %1185 = fmul float %1167, %1182
  %1186 = fneg float %1185
  %1187 = tail call float @llvm.fma.f32(float %1167, float %1182, float %1186)
  %1188 = tail call float @llvm.fma.f32(float %1167, float %1184, float %1187)
  %1189 = tail call float @llvm.fma.f32(float %1169, float %1182, float %1188)
  %1190 = tail call float @llvm.amdgcn.ldexp.f32(float %1142, i32 1)
  %1191 = fadd float %1185, %1189
  %1192 = fsub float %1191, %1185
  %1193 = fsub float %1189, %1192
  %1194 = fadd float %1161, %1191
  %1195 = fsub float %1194, %1161
  %1196 = fsub float %1191, %1195
  %1197 = fadd float %1190, %1193
  %1198 = fadd float %1197, %1196
  %1199 = fadd float %1194, %1198
  %1200 = fsub float %1199, %1194
  %1201 = fsub float %1198, %1200
  %1202 = fadd float %1158, %1199
  %1203 = fsub float %1202, %1158
  %1204 = fsub float %1202, %1203
  %1205 = fsub float %1158, %1204
  %1206 = fsub float %1199, %1203
  %1207 = fadd float %1206, %1205
  %1208 = fadd float %1160, %1201
  %1209 = fsub float %1208, %1160
  %1210 = fsub float %1208, %1209
  %1211 = fsub float %1160, %1210
  %1212 = fsub float %1201, %1209
  %1213 = fadd float %1212, %1211
  %1214 = fadd float %1208, %1207
  %1215 = fadd float %1202, %1214
  %1216 = fsub float %1215, %1202
  %1217 = fsub float %1214, %1216
  %1218 = fadd float %1213, %1217
  %1219 = fadd float %1215, %1218
  %1220 = fsub float %1219, %1215
  %1221 = fsub float %1218, %1220
  %1222 = fmul float %1219, 2.000000e+00
  %1223 = fneg float %1222
  %1224 = tail call float @llvm.fma.f32(float %1219, float 2.000000e+00, float %1223)
  %1225 = fmul float %1219, 0.000000e+00
  %1226 = tail call float @llvm.fma.f32(float %1221, float 2.000000e+00, float %1225)
  %1227 = fadd float %1224, %1226
  %1228 = fadd float %1222, %1227
  %1229 = fsub float %1228, %1222
  %1230 = fsub float %1227, %1229
  %1231 = tail call float @llvm.fabs.f32(float %1222) #3
  %1232 = fcmp oeq float %1231, 0x7FF0000000000000
  %1233 = select i1 %1232, float %1222, float %1228
  %1234 = tail call float @llvm.fabs.f32(float %1233) #3
  %1235 = fcmp oeq float %1234, 0x7FF0000000000000
  %1236 = select i1 %1235, float 0.000000e+00, float %1230
  %1237 = fcmp oeq float %1233, 0x40562E4300000000
  %1238 = select i1 %1237, float 0x3EE0000000000000, float 0.000000e+00
  %1239 = fsub float %1233, %1238
  %1240 = fadd float %1238, %1236
  %1241 = fmul float %1239, 0x3FF7154760000000
  %1242 = tail call float @llvm.rint.f32(float %1241)
  %1243 = fcmp ogt float %1239, 0x40562E4300000000
  %1244 = fcmp olt float %1239, 0xC059D1DA00000000
  %1245 = fneg float %1241
  %1246 = tail call float @llvm.fma.f32(float %1239, float 0x3FF7154760000000, float %1245)
  %1247 = tail call float @llvm.fma.f32(float %1239, float 0x3E54AE0BE0000000, float %1246)
  %1248 = fsub float %1241, %1242
  %1249 = fadd float %1247, %1248
  %1250 = tail call float @llvm.exp2.f32(float %1249)
  %1251 = fptosi float %1242 to i32
  %1252 = tail call float @llvm.amdgcn.ldexp.f32(float %1250, i32 %1251)
  %1253 = select i1 %1244, float 0.000000e+00, float %1252
  %1254 = select i1 %1243, float 0x7FF0000000000000, float %1253
  %1255 = tail call float @llvm.fma.f32(float %1254, float %1240, float %1254)
  %1256 = tail call float @llvm.fabs.f32(float %1254) #3
  %1257 = fcmp oeq float %1256, 0x7FF0000000000000
  %1258 = select i1 %1257, float %1254, float %1255
  %1259 = tail call float @llvm.fabs.f32(float %1258)
  %1260 = fcmp oeq float %1114, 0x7FF0000000000000
  %1261 = fcmp oeq float %1113, 0.000000e+00
  %1262 = select i1 %1260, float 0x7FF0000000000000, float %1259
  %1263 = select i1 %1261, float 0.000000e+00, float %1262
  %1264 = fcmp uno float %1113, 0.000000e+00
  %1265 = select i1 %1264, float 0x7FF8000000000000, float %1263
  %1266 = fadd contract float %970, -1.000000e+00
  %1267 = tail call float @llvm.fabs.f32(float %1266)
  %1268 = tail call float @llvm.amdgcn.frexp.mant.f32(float %1267)
  %1269 = fcmp olt float %1268, 0x3FE5555560000000
  %1270 = zext i1 %1269 to i32
  %1271 = tail call float @llvm.amdgcn.ldexp.f32(float %1268, i32 %1270)
  %1272 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %1267)
  %1273 = sub nsw i32 %1272, %1270
  %1274 = fadd float %1271, -1.000000e+00
  %1275 = fadd float %1271, 1.000000e+00
  %1276 = fadd float %1275, -1.000000e+00
  %1277 = fsub float %1271, %1276
  %1278 = tail call float @llvm.amdgcn.rcp.f32(float %1275)
  %1279 = fmul float %1274, %1278
  %1280 = fmul float %1275, %1279
  %1281 = fneg float %1280
  %1282 = tail call float @llvm.fma.f32(float %1279, float %1275, float %1281)
  %1283 = tail call float @llvm.fma.f32(float %1279, float %1277, float %1282)
  %1284 = fadd float %1280, %1283
  %1285 = fsub float %1284, %1280
  %1286 = fsub float %1283, %1285
  %1287 = fsub float %1274, %1284
  %1288 = fsub float %1274, %1287
  %1289 = fsub float %1288, %1284
  %1290 = fsub float %1289, %1286
  %1291 = fadd float %1287, %1290
  %1292 = fmul float %1278, %1291
  %1293 = fadd float %1279, %1292
  %1294 = fsub float %1293, %1279
  %1295 = fsub float %1292, %1294
  %1296 = fmul float %1293, %1293
  %1297 = fneg float %1296
  %1298 = tail call float @llvm.fma.f32(float %1293, float %1293, float %1297)
  %1299 = fmul float %1295, 2.000000e+00
  %1300 = tail call float @llvm.fma.f32(float %1293, float %1299, float %1298)
  %1301 = fadd float %1296, %1300
  %1302 = fsub float %1301, %1296
  %1303 = fsub float %1300, %1302
  %1304 = tail call float @llvm.fmuladd.f32(float %1301, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %1305 = tail call float @llvm.fmuladd.f32(float %1301, float %1304, float 0x3FD999BDE0000000)
  %1306 = sitofp i32 %1273 to float
  %1307 = fmul float %1306, 0x3FE62E4300000000
  %1308 = fneg float %1307
  %1309 = tail call float @llvm.fma.f32(float %1306, float 0x3FE62E4300000000, float %1308)
  %1310 = tail call float @llvm.fma.f32(float %1306, float 0xBE205C6100000000, float %1309)
  %1311 = fadd float %1307, %1310
  %1312 = fsub float %1311, %1307
  %1313 = fsub float %1310, %1312
  %1314 = tail call float @llvm.amdgcn.ldexp.f32(float %1293, i32 1)
  %1315 = fmul float %1293, %1301
  %1316 = fneg float %1315
  %1317 = tail call float @llvm.fma.f32(float %1301, float %1293, float %1316)
  %1318 = tail call float @llvm.fma.f32(float %1301, float %1295, float %1317)
  %1319 = tail call float @llvm.fma.f32(float %1303, float %1293, float %1318)
  %1320 = fadd float %1315, %1319
  %1321 = fsub float %1320, %1315
  %1322 = fsub float %1319, %1321
  %1323 = fmul float %1301, %1305
  %1324 = fneg float %1323
  %1325 = tail call float @llvm.fma.f32(float %1301, float %1305, float %1324)
  %1326 = tail call float @llvm.fma.f32(float %1303, float %1305, float %1325)
  %1327 = fadd float %1323, %1326
  %1328 = fsub float %1327, %1323
  %1329 = fsub float %1326, %1328
  %1330 = fadd float %1327, 0x3FE5555540000000
  %1331 = fadd float %1330, 0xBFE5555540000000
  %1332 = fsub float %1327, %1331
  %1333 = fadd float %1329, 0x3E2E720200000000
  %1334 = fadd float %1333, %1332
  %1335 = fadd float %1330, %1334
  %1336 = fsub float %1335, %1330
  %1337 = fsub float %1334, %1336
  %1338 = fmul float %1320, %1335
  %1339 = fneg float %1338
  %1340 = tail call float @llvm.fma.f32(float %1320, float %1335, float %1339)
  %1341 = tail call float @llvm.fma.f32(float %1320, float %1337, float %1340)
  %1342 = tail call float @llvm.fma.f32(float %1322, float %1335, float %1341)
  %1343 = tail call float @llvm.amdgcn.ldexp.f32(float %1295, i32 1)
  %1344 = fadd float %1338, %1342
  %1345 = fsub float %1344, %1338
  %1346 = fsub float %1342, %1345
  %1347 = fadd float %1314, %1344
  %1348 = fsub float %1347, %1314
  %1349 = fsub float %1344, %1348
  %1350 = fadd float %1343, %1346
  %1351 = fadd float %1350, %1349
  %1352 = fadd float %1347, %1351
  %1353 = fsub float %1352, %1347
  %1354 = fsub float %1351, %1353
  %1355 = fadd float %1311, %1352
  %1356 = fsub float %1355, %1311
  %1357 = fsub float %1355, %1356
  %1358 = fsub float %1311, %1357
  %1359 = fsub float %1352, %1356
  %1360 = fadd float %1359, %1358
  %1361 = fadd float %1313, %1354
  %1362 = fsub float %1361, %1313
  %1363 = fsub float %1361, %1362
  %1364 = fsub float %1313, %1363
  %1365 = fsub float %1354, %1362
  %1366 = fadd float %1365, %1364
  %1367 = fadd float %1361, %1360
  %1368 = fadd float %1355, %1367
  %1369 = fsub float %1368, %1355
  %1370 = fsub float %1367, %1369
  %1371 = fadd float %1366, %1370
  %1372 = fadd float %1368, %1371
  %1373 = fsub float %1372, %1368
  %1374 = fsub float %1371, %1373
  %1375 = fmul float %1372, 2.000000e+00
  %1376 = fneg float %1375
  %1377 = tail call float @llvm.fma.f32(float %1372, float 2.000000e+00, float %1376)
  %1378 = fmul float %1372, 0.000000e+00
  %1379 = tail call float @llvm.fma.f32(float %1374, float 2.000000e+00, float %1378)
  %1380 = fadd float %1377, %1379
  %1381 = fadd float %1375, %1380
  %1382 = fsub float %1381, %1375
  %1383 = fsub float %1380, %1382
  %1384 = tail call float @llvm.fabs.f32(float %1375) #3
  %1385 = fcmp oeq float %1384, 0x7FF0000000000000
  %1386 = select i1 %1385, float %1375, float %1381
  %1387 = tail call float @llvm.fabs.f32(float %1386) #3
  %1388 = fcmp oeq float %1387, 0x7FF0000000000000
  %1389 = select i1 %1388, float 0.000000e+00, float %1383
  %1390 = fcmp oeq float %1386, 0x40562E4300000000
  %1391 = select i1 %1390, float 0x3EE0000000000000, float 0.000000e+00
  %1392 = fsub float %1386, %1391
  %1393 = fadd float %1391, %1389
  %1394 = fmul float %1392, 0x3FF7154760000000
  %1395 = tail call float @llvm.rint.f32(float %1394)
  %1396 = fcmp ogt float %1392, 0x40562E4300000000
  %1397 = fcmp olt float %1392, 0xC059D1DA00000000
  %1398 = fneg float %1394
  %1399 = tail call float @llvm.fma.f32(float %1392, float 0x3FF7154760000000, float %1398)
  %1400 = tail call float @llvm.fma.f32(float %1392, float 0x3E54AE0BE0000000, float %1399)
  %1401 = fsub float %1394, %1395
  %1402 = fadd float %1400, %1401
  %1403 = tail call float @llvm.exp2.f32(float %1402)
  %1404 = fptosi float %1395 to i32
  %1405 = tail call float @llvm.amdgcn.ldexp.f32(float %1403, i32 %1404)
  %1406 = select i1 %1397, float 0.000000e+00, float %1405
  %1407 = select i1 %1396, float 0x7FF0000000000000, float %1406
  %1408 = tail call float @llvm.fma.f32(float %1407, float %1393, float %1407)
  %1409 = tail call float @llvm.fabs.f32(float %1407) #3
  %1410 = fcmp oeq float %1409, 0x7FF0000000000000
  %1411 = select i1 %1410, float %1407, float %1408
  %1412 = tail call float @llvm.fabs.f32(float %1411)
  %1413 = fcmp oeq float %1267, 0x7FF0000000000000
  %1414 = fcmp oeq float %1266, 0.000000e+00
  %1415 = select i1 %1413, float 0x7FF0000000000000, float %1412
  %1416 = select i1 %1414, float 0.000000e+00, float %1415
  %1417 = fcmp uno float %1266, 0.000000e+00
  %1418 = select i1 %1417, float 0x7FF8000000000000, float %1416
  %1419 = fadd contract float %1418, %1265
  %1420 = fadd contract float %1419, 0.000000e+00
  br label %1421

1421:                                             ; preds = %1706, %1088
  %1422 = phi i1 [ true, %1088 ], [ false, %1706 ]
  %1423 = phi i32 [ 0, %1088 ], [ 1, %1706 ]
  %1424 = phi float [ %1420, %1088 ], [ %1887, %1706 ]
  %1425 = zext i32 %1423 to i64
  %1426 = extractelement <3 x float> %40, i64 %1425
  %1427 = fadd contract float %1426, -1.000000e+00
  %1428 = fmul contract float %1427, 2.500000e-01
  %1429 = fadd contract float %1428, 1.000000e+00
  %1430 = add nuw nsw i32 %1423, 1
  %1431 = zext i32 %1430 to i64
  %1432 = extractelement <3 x float> %40, i64 %1431
  %1433 = fadd contract float %1432, -1.000000e+00
  %1434 = fmul contract float %1433, 2.500000e-01
  %1435 = fadd contract float %1434, 1.000000e+00
  %1436 = fadd contract float %1429, -1.000000e+00
  %1437 = tail call float @llvm.fabs.f32(float %1436)
  %1438 = tail call float @llvm.amdgcn.frexp.mant.f32(float %1437)
  %1439 = fcmp olt float %1438, 0x3FE5555560000000
  %1440 = zext i1 %1439 to i32
  %1441 = tail call float @llvm.amdgcn.ldexp.f32(float %1438, i32 %1440)
  %1442 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %1437)
  %1443 = sub nsw i32 %1442, %1440
  %1444 = fadd float %1441, -1.000000e+00
  %1445 = fadd float %1441, 1.000000e+00
  %1446 = fadd float %1445, -1.000000e+00
  %1447 = fsub float %1441, %1446
  %1448 = tail call float @llvm.amdgcn.rcp.f32(float %1445)
  %1449 = fmul float %1444, %1448
  %1450 = fmul float %1445, %1449
  %1451 = fneg float %1450
  %1452 = tail call float @llvm.fma.f32(float %1449, float %1445, float %1451)
  %1453 = tail call float @llvm.fma.f32(float %1449, float %1447, float %1452)
  %1454 = fadd float %1450, %1453
  %1455 = fsub float %1454, %1450
  %1456 = fsub float %1453, %1455
  %1457 = fsub float %1444, %1454
  %1458 = fsub float %1444, %1457
  %1459 = fsub float %1458, %1454
  %1460 = fsub float %1459, %1456
  %1461 = fadd float %1457, %1460
  %1462 = fmul float %1448, %1461
  %1463 = fadd float %1449, %1462
  %1464 = fsub float %1463, %1449
  %1465 = fsub float %1462, %1464
  %1466 = fmul float %1463, %1463
  %1467 = fneg float %1466
  %1468 = tail call float @llvm.fma.f32(float %1463, float %1463, float %1467)
  %1469 = fmul float %1465, 2.000000e+00
  %1470 = tail call float @llvm.fma.f32(float %1463, float %1469, float %1468)
  %1471 = fadd float %1466, %1470
  %1472 = fsub float %1471, %1466
  %1473 = fsub float %1470, %1472
  %1474 = tail call float @llvm.fmuladd.f32(float %1471, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %1475 = tail call float @llvm.fmuladd.f32(float %1471, float %1474, float 0x3FD999BDE0000000)
  %1476 = sitofp i32 %1443 to float
  %1477 = fmul float %1476, 0x3FE62E4300000000
  %1478 = fneg float %1477
  %1479 = tail call float @llvm.fma.f32(float %1476, float 0x3FE62E4300000000, float %1478)
  %1480 = tail call float @llvm.fma.f32(float %1476, float 0xBE205C6100000000, float %1479)
  %1481 = fadd float %1477, %1480
  %1482 = fsub float %1481, %1477
  %1483 = fsub float %1480, %1482
  %1484 = tail call float @llvm.amdgcn.ldexp.f32(float %1463, i32 1)
  %1485 = fmul float %1463, %1471
  %1486 = fneg float %1485
  %1487 = tail call float @llvm.fma.f32(float %1471, float %1463, float %1486)
  %1488 = tail call float @llvm.fma.f32(float %1471, float %1465, float %1487)
  %1489 = tail call float @llvm.fma.f32(float %1473, float %1463, float %1488)
  %1490 = fadd float %1485, %1489
  %1491 = fsub float %1490, %1485
  %1492 = fsub float %1489, %1491
  %1493 = fmul float %1471, %1475
  %1494 = fneg float %1493
  %1495 = tail call float @llvm.fma.f32(float %1471, float %1475, float %1494)
  %1496 = tail call float @llvm.fma.f32(float %1473, float %1475, float %1495)
  %1497 = fadd float %1493, %1496
  %1498 = fsub float %1497, %1493
  %1499 = fsub float %1496, %1498
  %1500 = fadd float %1497, 0x3FE5555540000000
  %1501 = fadd float %1500, 0xBFE5555540000000
  %1502 = fsub float %1497, %1501
  %1503 = fadd float %1499, 0x3E2E720200000000
  %1504 = fadd float %1503, %1502
  %1505 = fadd float %1500, %1504
  %1506 = fsub float %1505, %1500
  %1507 = fsub float %1504, %1506
  %1508 = fmul float %1490, %1505
  %1509 = fneg float %1508
  %1510 = tail call float @llvm.fma.f32(float %1490, float %1505, float %1509)
  %1511 = tail call float @llvm.fma.f32(float %1490, float %1507, float %1510)
  %1512 = tail call float @llvm.fma.f32(float %1492, float %1505, float %1511)
  %1513 = tail call float @llvm.amdgcn.ldexp.f32(float %1465, i32 1)
  %1514 = fadd float %1508, %1512
  %1515 = fsub float %1514, %1508
  %1516 = fsub float %1512, %1515
  %1517 = fadd float %1484, %1514
  %1518 = fsub float %1517, %1484
  %1519 = fsub float %1514, %1518
  %1520 = fadd float %1513, %1516
  %1521 = fadd float %1520, %1519
  %1522 = fadd float %1517, %1521
  %1523 = fsub float %1522, %1517
  %1524 = fsub float %1521, %1523
  %1525 = fadd float %1481, %1522
  %1526 = fsub float %1525, %1481
  %1527 = fsub float %1525, %1526
  %1528 = fsub float %1481, %1527
  %1529 = fsub float %1522, %1526
  %1530 = fadd float %1529, %1528
  %1531 = fadd float %1483, %1524
  %1532 = fsub float %1531, %1483
  %1533 = fsub float %1531, %1532
  %1534 = fsub float %1483, %1533
  %1535 = fsub float %1524, %1532
  %1536 = fadd float %1535, %1534
  %1537 = fadd float %1531, %1530
  %1538 = fadd float %1525, %1537
  %1539 = fsub float %1538, %1525
  %1540 = fsub float %1537, %1539
  %1541 = fadd float %1536, %1540
  %1542 = fadd float %1538, %1541
  %1543 = fsub float %1542, %1538
  %1544 = fsub float %1541, %1543
  %1545 = fmul float %1542, 2.000000e+00
  %1546 = fneg float %1545
  %1547 = tail call float @llvm.fma.f32(float %1542, float 2.000000e+00, float %1546)
  %1548 = fmul float %1542, 0.000000e+00
  %1549 = tail call float @llvm.fma.f32(float %1544, float 2.000000e+00, float %1548)
  %1550 = fadd float %1547, %1549
  %1551 = fadd float %1545, %1550
  %1552 = fsub float %1551, %1545
  %1553 = fsub float %1550, %1552
  %1554 = tail call float @llvm.fabs.f32(float %1545) #3
  %1555 = fcmp oeq float %1554, 0x7FF0000000000000
  %1556 = select i1 %1555, float %1545, float %1551
  %1557 = tail call float @llvm.fabs.f32(float %1556) #3
  %1558 = fcmp oeq float %1557, 0x7FF0000000000000
  %1559 = select i1 %1558, float 0.000000e+00, float %1553
  %1560 = fcmp oeq float %1556, 0x40562E4300000000
  %1561 = select i1 %1560, float 0x3EE0000000000000, float 0.000000e+00
  %1562 = fsub float %1556, %1561
  %1563 = fadd float %1561, %1559
  %1564 = fmul float %1562, 0x3FF7154760000000
  %1565 = tail call float @llvm.rint.f32(float %1564)
  %1566 = fcmp ogt float %1562, 0x40562E4300000000
  %1567 = fcmp olt float %1562, 0xC059D1DA00000000
  %1568 = fneg float %1564
  %1569 = tail call float @llvm.fma.f32(float %1562, float 0x3FF7154760000000, float %1568)
  %1570 = tail call float @llvm.fma.f32(float %1562, float 0x3E54AE0BE0000000, float %1569)
  %1571 = fsub float %1564, %1565
  %1572 = fadd float %1570, %1571
  %1573 = tail call float @llvm.exp2.f32(float %1572)
  %1574 = fptosi float %1565 to i32
  %1575 = tail call float @llvm.amdgcn.ldexp.f32(float %1573, i32 %1574)
  %1576 = select i1 %1567, float 0.000000e+00, float %1575
  %1577 = select i1 %1566, float 0x7FF0000000000000, float %1576
  %1578 = tail call float @llvm.fma.f32(float %1577, float %1563, float %1577)
  %1579 = tail call float @llvm.fabs.f32(float %1577) #3
  %1580 = fcmp oeq float %1579, 0x7FF0000000000000
  %1581 = select i1 %1580, float %1577, float %1578
  %1582 = tail call float @llvm.fabs.f32(float %1581)
  %1583 = fcmp oeq float %1437, 0x7FF0000000000000
  %1584 = fcmp oeq float %1436, 0.000000e+00
  %1585 = select i1 %1583, float 0x7FF0000000000000, float %1582
  %1586 = select i1 %1584, float 0.000000e+00, float %1585
  %1587 = fcmp uno float %1436, 0.000000e+00
  %1588 = select i1 %1587, float 0x7FF8000000000000, float %1586
  %1589 = fmul contract float %1435, 0x400921CAC0000000
  %1590 = tail call float @llvm.fabs.f32(float %1589)
  %1591 = fcmp olt float %1590, 1.310720e+05
  br i1 %1591, label %1592, label %1600

1592:                                             ; preds = %1421
  %1593 = fmul float %1590, 0x3FE45F3060000000
  %1594 = tail call float @llvm.rint.f32(float %1593)
  %1595 = tail call float @llvm.fma.f32(float %1594, float 0xBFF921FB40000000, float %1590)
  %1596 = tail call float @llvm.fma.f32(float %1594, float 0xBE74442D00000000, float %1595)
  %1597 = tail call float @llvm.fma.f32(float %1594, float 0xBCF8469880000000, float %1596)
  %1598 = fptosi float %1594 to i32
  %1599 = bitcast float %1590 to i32
  br label %1706

1600:                                             ; preds = %1421
  %1601 = bitcast float %1590 to i32
  %1602 = lshr i32 %1601, 23
  %1603 = and i32 %1601, 8388607
  %1604 = or i32 %1603, 8388608
  %1605 = zext i32 %1604 to i64
  %1606 = mul nuw nsw i64 %1605, 4266746795
  %1607 = trunc i64 %1606 to i32
  %1608 = lshr i64 %1606, 32
  %1609 = mul nuw nsw i64 %1605, 1011060801
  %1610 = add nuw nsw i64 %1608, %1609
  %1611 = trunc i64 %1610 to i32
  %1612 = lshr i64 %1610, 32
  %1613 = mul nuw nsw i64 %1605, 3680671129
  %1614 = add nuw nsw i64 %1612, %1613
  %1615 = trunc i64 %1614 to i32
  %1616 = lshr i64 %1614, 32
  %1617 = mul nuw nsw i64 %1605, 4113882560
  %1618 = add nuw nsw i64 %1616, %1617
  %1619 = trunc i64 %1618 to i32
  %1620 = lshr i64 %1618, 32
  %1621 = mul nuw nsw i64 %1605, 4230436817
  %1622 = add nuw nsw i64 %1620, %1621
  %1623 = trunc i64 %1622 to i32
  %1624 = lshr i64 %1622, 32
  %1625 = mul nuw nsw i64 %1605, 1313084713
  %1626 = add nuw nsw i64 %1624, %1625
  %1627 = trunc i64 %1626 to i32
  %1628 = lshr i64 %1626, 32
  %1629 = mul nuw nsw i64 %1605, 2734261102
  %1630 = add nuw nsw i64 %1628, %1629
  %1631 = trunc i64 %1630 to i32
  %1632 = lshr i64 %1630, 32
  %1633 = trunc i64 %1632 to i32
  %1634 = add nsw i32 %1602, -120
  %1635 = icmp ugt i32 %1634, 63
  %1636 = select i1 %1635, i32 %1627, i32 %1633
  %1637 = select i1 %1635, i32 %1623, i32 %1631
  %1638 = select i1 %1635, i32 %1619, i32 %1627
  %1639 = select i1 %1635, i32 %1615, i32 %1623
  %1640 = select i1 %1635, i32 %1611, i32 %1619
  %1641 = select i1 %1635, i32 %1607, i32 %1615
  %1642 = select i1 %1635, i32 -64, i32 0
  %1643 = add nsw i32 %1642, %1634
  %1644 = icmp ugt i32 %1643, 31
  %1645 = select i1 %1644, i32 %1637, i32 %1636
  %1646 = select i1 %1644, i32 %1638, i32 %1637
  %1647 = select i1 %1644, i32 %1639, i32 %1638
  %1648 = select i1 %1644, i32 %1640, i32 %1639
  %1649 = select i1 %1644, i32 %1641, i32 %1640
  %1650 = select i1 %1644, i32 -32, i32 0
  %1651 = add nsw i32 %1650, %1643
  %1652 = icmp ugt i32 %1651, 31
  %1653 = select i1 %1652, i32 %1646, i32 %1645
  %1654 = select i1 %1652, i32 %1647, i32 %1646
  %1655 = select i1 %1652, i32 %1648, i32 %1647
  %1656 = select i1 %1652, i32 %1649, i32 %1648
  %1657 = select i1 %1652, i32 -32, i32 0
  %1658 = add nsw i32 %1657, %1651
  %1659 = icmp eq i32 %1658, 0
  %1660 = sub nsw i32 32, %1658
  %1661 = tail call i32 @llvm.fshr.i32(i32 %1653, i32 %1654, i32 %1660)
  %1662 = tail call i32 @llvm.fshr.i32(i32 %1654, i32 %1655, i32 %1660)
  %1663 = tail call i32 @llvm.fshr.i32(i32 %1655, i32 %1656, i32 %1660)
  %1664 = select i1 %1659, i32 %1653, i32 %1661
  %1665 = select i1 %1659, i32 %1654, i32 %1662
  %1666 = select i1 %1659, i32 %1655, i32 %1663
  %1667 = lshr i32 %1664, 29
  %1668 = tail call i32 @llvm.fshl.i32(i32 %1664, i32 %1665, i32 2)
  %1669 = tail call i32 @llvm.fshl.i32(i32 %1665, i32 %1666, i32 2)
  %1670 = tail call i32 @llvm.fshl.i32(i32 %1666, i32 %1656, i32 2)
  %1671 = and i32 %1667, 1
  %1672 = sub nsw i32 0, %1671
  %1673 = shl i32 %1667, 31
  %1674 = xor i32 %1668, %1672
  %1675 = xor i32 %1669, %1672
  %1676 = xor i32 %1670, %1672
  %1677 = tail call i32 @llvm.ctlz.i32(i32 %1674, i1 false), !range !11
  %1678 = sub nsw i32 31, %1677
  %1679 = tail call i32 @llvm.fshr.i32(i32 %1674, i32 %1675, i32 %1678)
  %1680 = tail call i32 @llvm.fshr.i32(i32 %1675, i32 %1676, i32 %1678)
  %1681 = shl nuw nsw i32 %1677, 23
  %1682 = sub nuw nsw i32 1056964608, %1681
  %1683 = lshr i32 %1679, 9
  %1684 = or i32 %1683, %1682
  %1685 = or i32 %1684, %1673
  %1686 = bitcast i32 %1685 to float
  %1687 = tail call i32 @llvm.fshl.i32(i32 %1679, i32 %1680, i32 23)
  %1688 = tail call i32 @llvm.ctlz.i32(i32 %1687, i1 false), !range !11
  %1689 = fmul float %1686, 0x3FF921FB40000000
  %1690 = add nuw nsw i32 %1688, %1677
  %1691 = shl nuw nsw i32 %1690, 23
  %1692 = sub nuw nsw i32 855638016, %1691
  %1693 = sub nsw i32 31, %1688
  %1694 = tail call i32 @llvm.fshr.i32(i32 %1687, i32 %1680, i32 %1693)
  %1695 = lshr i32 %1694, 9
  %1696 = or i32 %1692, %1695
  %1697 = or i32 %1696, %1673
  %1698 = bitcast i32 %1697 to float
  %1699 = fneg float %1689
  %1700 = tail call float @llvm.fma.f32(float %1686, float 0x3FF921FB40000000, float %1699)
  %1701 = tail call float @llvm.fma.f32(float %1686, float 0x3E74442D00000000, float %1700)
  %1702 = tail call float @llvm.fma.f32(float %1698, float 0x3FF921FB40000000, float %1701)
  %1703 = fadd float %1689, %1702
  %1704 = lshr i32 %1664, 30
  %1705 = add nuw nsw i32 %1671, %1704
  br label %1706

1706:                                             ; preds = %1600, %1592
  %1707 = phi i32 [ %1599, %1592 ], [ %1601, %1600 ]
  %1708 = phi float [ %1597, %1592 ], [ %1703, %1600 ]
  %1709 = phi i32 [ %1598, %1592 ], [ %1705, %1600 ]
  %1710 = fmul float %1708, %1708
  %1711 = tail call float @llvm.fmuladd.f32(float %1710, float 0xBF29833040000000, float 0x3F81103880000000)
  %1712 = tail call float @llvm.fmuladd.f32(float %1710, float %1711, float 0xBFC55553A0000000)
  %1713 = fmul float %1710, %1712
  %1714 = tail call float @llvm.fmuladd.f32(float %1708, float %1713, float %1708)
  %1715 = tail call float @llvm.fmuladd.f32(float %1710, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %1716 = tail call float @llvm.fmuladd.f32(float %1710, float %1715, float 0x3FA5557EE0000000)
  %1717 = tail call float @llvm.fmuladd.f32(float %1710, float %1716, float 0xBFE0000080000000)
  %1718 = tail call float @llvm.fmuladd.f32(float %1710, float %1717, float 1.000000e+00)
  %1719 = and i32 %1709, 1
  %1720 = icmp eq i32 %1719, 0
  %1721 = select i1 %1720, float %1714, float %1718
  %1722 = bitcast float %1721 to i32
  %1723 = shl i32 %1709, 30
  %1724 = and i32 %1723, -2147483648
  %1725 = bitcast float %1589 to i32
  %1726 = xor i32 %1707, %1725
  %1727 = xor i32 %1726, %1724
  %1728 = xor i32 %1727, %1722
  %1729 = bitcast i32 %1728 to float
  %1730 = tail call i1 @llvm.amdgcn.class.f32(float %1590, i32 504)
  %1731 = select i1 %1730, float %1729, float 0x7FF8000000000000
  %1732 = tail call float @llvm.fabs.f32(float %1731)
  %1733 = tail call float @llvm.amdgcn.frexp.mant.f32(float %1732)
  %1734 = fcmp olt float %1733, 0x3FE5555560000000
  %1735 = zext i1 %1734 to i32
  %1736 = tail call float @llvm.amdgcn.ldexp.f32(float %1733, i32 %1735)
  %1737 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %1732)
  %1738 = sub nsw i32 %1737, %1735
  %1739 = fadd float %1736, -1.000000e+00
  %1740 = fadd float %1736, 1.000000e+00
  %1741 = fadd float %1740, -1.000000e+00
  %1742 = fsub float %1736, %1741
  %1743 = tail call float @llvm.amdgcn.rcp.f32(float %1740)
  %1744 = fmul float %1739, %1743
  %1745 = fmul float %1740, %1744
  %1746 = fneg float %1745
  %1747 = tail call float @llvm.fma.f32(float %1744, float %1740, float %1746)
  %1748 = tail call float @llvm.fma.f32(float %1744, float %1742, float %1747)
  %1749 = fadd float %1745, %1748
  %1750 = fsub float %1749, %1745
  %1751 = fsub float %1748, %1750
  %1752 = fsub float %1739, %1749
  %1753 = fsub float %1739, %1752
  %1754 = fsub float %1753, %1749
  %1755 = fsub float %1754, %1751
  %1756 = fadd float %1752, %1755
  %1757 = fmul float %1743, %1756
  %1758 = fadd float %1744, %1757
  %1759 = fsub float %1758, %1744
  %1760 = fsub float %1757, %1759
  %1761 = fmul float %1758, %1758
  %1762 = fneg float %1761
  %1763 = tail call float @llvm.fma.f32(float %1758, float %1758, float %1762)
  %1764 = fmul float %1760, 2.000000e+00
  %1765 = tail call float @llvm.fma.f32(float %1758, float %1764, float %1763)
  %1766 = fadd float %1761, %1765
  %1767 = fsub float %1766, %1761
  %1768 = fsub float %1765, %1767
  %1769 = tail call float @llvm.fmuladd.f32(float %1766, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %1770 = tail call float @llvm.fmuladd.f32(float %1766, float %1769, float 0x3FD999BDE0000000)
  %1771 = sitofp i32 %1738 to float
  %1772 = fmul float %1771, 0x3FE62E4300000000
  %1773 = fneg float %1772
  %1774 = tail call float @llvm.fma.f32(float %1771, float 0x3FE62E4300000000, float %1773)
  %1775 = tail call float @llvm.fma.f32(float %1771, float 0xBE205C6100000000, float %1774)
  %1776 = fadd float %1772, %1775
  %1777 = fsub float %1776, %1772
  %1778 = fsub float %1775, %1777
  %1779 = tail call float @llvm.amdgcn.ldexp.f32(float %1758, i32 1)
  %1780 = fmul float %1758, %1766
  %1781 = fneg float %1780
  %1782 = tail call float @llvm.fma.f32(float %1766, float %1758, float %1781)
  %1783 = tail call float @llvm.fma.f32(float %1766, float %1760, float %1782)
  %1784 = tail call float @llvm.fma.f32(float %1768, float %1758, float %1783)
  %1785 = fadd float %1780, %1784
  %1786 = fsub float %1785, %1780
  %1787 = fsub float %1784, %1786
  %1788 = fmul float %1766, %1770
  %1789 = fneg float %1788
  %1790 = tail call float @llvm.fma.f32(float %1766, float %1770, float %1789)
  %1791 = tail call float @llvm.fma.f32(float %1768, float %1770, float %1790)
  %1792 = fadd float %1788, %1791
  %1793 = fsub float %1792, %1788
  %1794 = fsub float %1791, %1793
  %1795 = fadd float %1792, 0x3FE5555540000000
  %1796 = fadd float %1795, 0xBFE5555540000000
  %1797 = fsub float %1792, %1796
  %1798 = fadd float %1794, 0x3E2E720200000000
  %1799 = fadd float %1798, %1797
  %1800 = fadd float %1795, %1799
  %1801 = fsub float %1800, %1795
  %1802 = fsub float %1799, %1801
  %1803 = fmul float %1785, %1800
  %1804 = fneg float %1803
  %1805 = tail call float @llvm.fma.f32(float %1785, float %1800, float %1804)
  %1806 = tail call float @llvm.fma.f32(float %1785, float %1802, float %1805)
  %1807 = tail call float @llvm.fma.f32(float %1787, float %1800, float %1806)
  %1808 = tail call float @llvm.amdgcn.ldexp.f32(float %1760, i32 1)
  %1809 = fadd float %1803, %1807
  %1810 = fsub float %1809, %1803
  %1811 = fsub float %1807, %1810
  %1812 = fadd float %1779, %1809
  %1813 = fsub float %1812, %1779
  %1814 = fsub float %1809, %1813
  %1815 = fadd float %1808, %1811
  %1816 = fadd float %1815, %1814
  %1817 = fadd float %1812, %1816
  %1818 = fsub float %1817, %1812
  %1819 = fsub float %1816, %1818
  %1820 = fadd float %1776, %1817
  %1821 = fsub float %1820, %1776
  %1822 = fsub float %1820, %1821
  %1823 = fsub float %1776, %1822
  %1824 = fsub float %1817, %1821
  %1825 = fadd float %1824, %1823
  %1826 = fadd float %1778, %1819
  %1827 = fsub float %1826, %1778
  %1828 = fsub float %1826, %1827
  %1829 = fsub float %1778, %1828
  %1830 = fsub float %1819, %1827
  %1831 = fadd float %1830, %1829
  %1832 = fadd float %1826, %1825
  %1833 = fadd float %1820, %1832
  %1834 = fsub float %1833, %1820
  %1835 = fsub float %1832, %1834
  %1836 = fadd float %1831, %1835
  %1837 = fadd float %1833, %1836
  %1838 = fsub float %1837, %1833
  %1839 = fsub float %1836, %1838
  %1840 = fmul float %1837, 2.000000e+00
  %1841 = fneg float %1840
  %1842 = tail call float @llvm.fma.f32(float %1837, float 2.000000e+00, float %1841)
  %1843 = fmul float %1837, 0.000000e+00
  %1844 = tail call float @llvm.fma.f32(float %1839, float 2.000000e+00, float %1843)
  %1845 = fadd float %1842, %1844
  %1846 = fadd float %1840, %1845
  %1847 = fsub float %1846, %1840
  %1848 = fsub float %1845, %1847
  %1849 = tail call float @llvm.fabs.f32(float %1840) #3
  %1850 = fcmp oeq float %1849, 0x7FF0000000000000
  %1851 = select i1 %1850, float %1840, float %1846
  %1852 = tail call float @llvm.fabs.f32(float %1851) #3
  %1853 = fcmp oeq float %1852, 0x7FF0000000000000
  %1854 = select i1 %1853, float 0.000000e+00, float %1848
  %1855 = fcmp oeq float %1851, 0x40562E4300000000
  %1856 = select i1 %1855, float 0x3EE0000000000000, float 0.000000e+00
  %1857 = fsub float %1851, %1856
  %1858 = fadd float %1856, %1854
  %1859 = fmul float %1857, 0x3FF7154760000000
  %1860 = tail call float @llvm.rint.f32(float %1859)
  %1861 = fcmp ogt float %1857, 0x40562E4300000000
  %1862 = fcmp olt float %1857, 0xC059D1DA00000000
  %1863 = fneg float %1859
  %1864 = tail call float @llvm.fma.f32(float %1857, float 0x3FF7154760000000, float %1863)
  %1865 = tail call float @llvm.fma.f32(float %1857, float 0x3E54AE0BE0000000, float %1864)
  %1866 = fsub float %1859, %1860
  %1867 = fadd float %1865, %1866
  %1868 = tail call float @llvm.exp2.f32(float %1867)
  %1869 = fptosi float %1860 to i32
  %1870 = tail call float @llvm.amdgcn.ldexp.f32(float %1868, i32 %1869)
  %1871 = select i1 %1862, float 0.000000e+00, float %1870
  %1872 = select i1 %1861, float 0x7FF0000000000000, float %1871
  %1873 = tail call float @llvm.fma.f32(float %1872, float %1858, float %1872)
  %1874 = tail call float @llvm.fabs.f32(float %1872) #3
  %1875 = fcmp oeq float %1874, 0x7FF0000000000000
  %1876 = select i1 %1875, float %1872, float %1873
  %1877 = tail call float @llvm.fabs.f32(float %1876)
  %1878 = fcmp oeq float %1732, 0x7FF0000000000000
  %1879 = fcmp oeq float %1731, 0.000000e+00
  %1880 = fcmp uno float %1731, 0.000000e+00
  %1881 = fmul contract float %1877, 1.000000e+01
  %1882 = fadd contract float %1881, 1.000000e+00
  %1883 = select i1 %1878, float 0x7FF0000000000000, float %1882
  %1884 = select i1 %1879, float 1.000000e+00, float %1883
  %1885 = select i1 %1880, float 0x7FF8000000000000, float %1884
  %1886 = fmul contract float %1588, %1885
  %1887 = fadd contract float %1424, %1886
  br i1 %1422, label %1421, label %1888, !llvm.loop !12

1888:                                             ; preds = %1706
  %1889 = fcmp contract olt float %963, %1887
  br i1 %1889, label %1890, label %3592

1890:                                             ; preds = %1888
  store float %20, float addrspace(1)* %22, align 4, !tbaa !7
  store float %28, float addrspace(1)* %30, align 4, !tbaa !7
  store float %36, float addrspace(1)* %38, align 4, !tbaa !7
  br i1 %49, label %1891, label %1899

1891:                                             ; preds = %1890
  %1892 = fmul float %48, 0x3FE45F3060000000
  %1893 = tail call float @llvm.rint.f32(float %1892)
  %1894 = tail call float @llvm.fma.f32(float %1893, float 0xBFF921FB40000000, float %48)
  %1895 = tail call float @llvm.fma.f32(float %1893, float 0xBE74442D00000000, float %1894)
  %1896 = tail call float @llvm.fma.f32(float %1893, float 0xBCF8469880000000, float %1895)
  %1897 = fptosi float %1893 to i32
  %1898 = bitcast float %48 to i32
  br label %2005

1899:                                             ; preds = %1890
  %1900 = bitcast float %48 to i32
  %1901 = lshr i32 %1900, 23
  %1902 = and i32 %1900, 8388607
  %1903 = or i32 %1902, 8388608
  %1904 = zext i32 %1903 to i64
  %1905 = mul nuw nsw i64 %1904, 4266746795
  %1906 = trunc i64 %1905 to i32
  %1907 = lshr i64 %1905, 32
  %1908 = mul nuw nsw i64 %1904, 1011060801
  %1909 = add nuw nsw i64 %1907, %1908
  %1910 = trunc i64 %1909 to i32
  %1911 = lshr i64 %1909, 32
  %1912 = mul nuw nsw i64 %1904, 3680671129
  %1913 = add nuw nsw i64 %1911, %1912
  %1914 = trunc i64 %1913 to i32
  %1915 = lshr i64 %1913, 32
  %1916 = mul nuw nsw i64 %1904, 4113882560
  %1917 = add nuw nsw i64 %1915, %1916
  %1918 = trunc i64 %1917 to i32
  %1919 = lshr i64 %1917, 32
  %1920 = mul nuw nsw i64 %1904, 4230436817
  %1921 = add nuw nsw i64 %1919, %1920
  %1922 = trunc i64 %1921 to i32
  %1923 = lshr i64 %1921, 32
  %1924 = mul nuw nsw i64 %1904, 1313084713
  %1925 = add nuw nsw i64 %1923, %1924
  %1926 = trunc i64 %1925 to i32
  %1927 = lshr i64 %1925, 32
  %1928 = mul nuw nsw i64 %1904, 2734261102
  %1929 = add nuw nsw i64 %1927, %1928
  %1930 = trunc i64 %1929 to i32
  %1931 = lshr i64 %1929, 32
  %1932 = trunc i64 %1931 to i32
  %1933 = add nsw i32 %1901, -120
  %1934 = icmp ugt i32 %1933, 63
  %1935 = select i1 %1934, i32 %1926, i32 %1932
  %1936 = select i1 %1934, i32 %1922, i32 %1930
  %1937 = select i1 %1934, i32 %1918, i32 %1926
  %1938 = select i1 %1934, i32 %1914, i32 %1922
  %1939 = select i1 %1934, i32 %1910, i32 %1918
  %1940 = select i1 %1934, i32 %1906, i32 %1914
  %1941 = select i1 %1934, i32 -64, i32 0
  %1942 = add nsw i32 %1941, %1933
  %1943 = icmp ugt i32 %1942, 31
  %1944 = select i1 %1943, i32 %1936, i32 %1935
  %1945 = select i1 %1943, i32 %1937, i32 %1936
  %1946 = select i1 %1943, i32 %1938, i32 %1937
  %1947 = select i1 %1943, i32 %1939, i32 %1938
  %1948 = select i1 %1943, i32 %1940, i32 %1939
  %1949 = select i1 %1943, i32 -32, i32 0
  %1950 = add nsw i32 %1949, %1942
  %1951 = icmp ugt i32 %1950, 31
  %1952 = select i1 %1951, i32 %1945, i32 %1944
  %1953 = select i1 %1951, i32 %1946, i32 %1945
  %1954 = select i1 %1951, i32 %1947, i32 %1946
  %1955 = select i1 %1951, i32 %1948, i32 %1947
  %1956 = select i1 %1951, i32 -32, i32 0
  %1957 = add nsw i32 %1956, %1950
  %1958 = icmp eq i32 %1957, 0
  %1959 = sub nsw i32 32, %1957
  %1960 = tail call i32 @llvm.fshr.i32(i32 %1952, i32 %1953, i32 %1959)
  %1961 = tail call i32 @llvm.fshr.i32(i32 %1953, i32 %1954, i32 %1959)
  %1962 = tail call i32 @llvm.fshr.i32(i32 %1954, i32 %1955, i32 %1959)
  %1963 = select i1 %1958, i32 %1952, i32 %1960
  %1964 = select i1 %1958, i32 %1953, i32 %1961
  %1965 = select i1 %1958, i32 %1954, i32 %1962
  %1966 = lshr i32 %1963, 29
  %1967 = tail call i32 @llvm.fshl.i32(i32 %1963, i32 %1964, i32 2)
  %1968 = tail call i32 @llvm.fshl.i32(i32 %1964, i32 %1965, i32 2)
  %1969 = tail call i32 @llvm.fshl.i32(i32 %1965, i32 %1955, i32 2)
  %1970 = and i32 %1966, 1
  %1971 = sub nsw i32 0, %1970
  %1972 = shl i32 %1966, 31
  %1973 = xor i32 %1967, %1971
  %1974 = xor i32 %1968, %1971
  %1975 = xor i32 %1969, %1971
  %1976 = tail call i32 @llvm.ctlz.i32(i32 %1973, i1 false), !range !11
  %1977 = sub nsw i32 31, %1976
  %1978 = tail call i32 @llvm.fshr.i32(i32 %1973, i32 %1974, i32 %1977)
  %1979 = tail call i32 @llvm.fshr.i32(i32 %1974, i32 %1975, i32 %1977)
  %1980 = shl nuw nsw i32 %1976, 23
  %1981 = sub nuw nsw i32 1056964608, %1980
  %1982 = lshr i32 %1978, 9
  %1983 = or i32 %1982, %1981
  %1984 = or i32 %1983, %1972
  %1985 = bitcast i32 %1984 to float
  %1986 = tail call i32 @llvm.fshl.i32(i32 %1978, i32 %1979, i32 23)
  %1987 = tail call i32 @llvm.ctlz.i32(i32 %1986, i1 false), !range !11
  %1988 = fmul float %1985, 0x3FF921FB40000000
  %1989 = add nuw nsw i32 %1987, %1976
  %1990 = shl nuw nsw i32 %1989, 23
  %1991 = sub nuw nsw i32 855638016, %1990
  %1992 = sub nsw i32 31, %1987
  %1993 = tail call i32 @llvm.fshr.i32(i32 %1986, i32 %1979, i32 %1992)
  %1994 = lshr i32 %1993, 9
  %1995 = or i32 %1991, %1994
  %1996 = or i32 %1995, %1972
  %1997 = bitcast i32 %1996 to float
  %1998 = fneg float %1988
  %1999 = tail call float @llvm.fma.f32(float %1985, float 0x3FF921FB40000000, float %1998)
  %2000 = tail call float @llvm.fma.f32(float %1985, float 0x3E74442D00000000, float %1999)
  %2001 = tail call float @llvm.fma.f32(float %1997, float 0x3FF921FB40000000, float %2000)
  %2002 = fadd float %1988, %2001
  %2003 = lshr i32 %1963, 30
  %2004 = add nuw nsw i32 %1970, %2003
  br label %2005

2005:                                             ; preds = %1899, %1891
  %2006 = phi i32 [ %1898, %1891 ], [ %1900, %1899 ]
  %2007 = phi float [ %1896, %1891 ], [ %2002, %1899 ]
  %2008 = phi i32 [ %1897, %1891 ], [ %2004, %1899 ]
  %2009 = fmul float %2007, %2007
  %2010 = tail call float @llvm.fmuladd.f32(float %2009, float 0xBF29833040000000, float 0x3F81103880000000)
  %2011 = tail call float @llvm.fmuladd.f32(float %2009, float %2010, float 0xBFC55553A0000000)
  %2012 = fmul float %2009, %2011
  %2013 = tail call float @llvm.fmuladd.f32(float %2007, float %2012, float %2007)
  %2014 = tail call float @llvm.fmuladd.f32(float %2009, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %2015 = tail call float @llvm.fmuladd.f32(float %2009, float %2014, float 0x3FA5557EE0000000)
  %2016 = tail call float @llvm.fmuladd.f32(float %2009, float %2015, float 0xBFE0000080000000)
  %2017 = tail call float @llvm.fmuladd.f32(float %2009, float %2016, float 1.000000e+00)
  %2018 = and i32 %2008, 1
  %2019 = icmp eq i32 %2018, 0
  %2020 = select i1 %2019, float %2013, float %2017
  %2021 = bitcast float %2020 to i32
  %2022 = shl i32 %2008, 30
  %2023 = and i32 %2022, -2147483648
  %2024 = xor i32 %2006, %2023
  %2025 = xor i32 %2024, %2021
  %2026 = xor i32 %2025, %183
  %2027 = bitcast i32 %2026 to float
  %2028 = select i1 %188, float %2027, float 0x7FF8000000000000
  %2029 = tail call float @llvm.fabs.f32(float %2028)
  %2030 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2029)
  %2031 = fcmp olt float %2030, 0x3FE5555560000000
  %2032 = zext i1 %2031 to i32
  %2033 = tail call float @llvm.amdgcn.ldexp.f32(float %2030, i32 %2032)
  %2034 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2029)
  %2035 = sub nsw i32 %2034, %2032
  %2036 = fadd float %2033, -1.000000e+00
  %2037 = fadd float %2033, 1.000000e+00
  %2038 = fadd float %2037, -1.000000e+00
  %2039 = fsub float %2033, %2038
  %2040 = tail call float @llvm.amdgcn.rcp.f32(float %2037)
  %2041 = fmul float %2036, %2040
  %2042 = fmul float %2037, %2041
  %2043 = fneg float %2042
  %2044 = tail call float @llvm.fma.f32(float %2041, float %2037, float %2043)
  %2045 = tail call float @llvm.fma.f32(float %2041, float %2039, float %2044)
  %2046 = fadd float %2042, %2045
  %2047 = fsub float %2046, %2042
  %2048 = fsub float %2045, %2047
  %2049 = fsub float %2036, %2046
  %2050 = fsub float %2036, %2049
  %2051 = fsub float %2050, %2046
  %2052 = fsub float %2051, %2048
  %2053 = fadd float %2049, %2052
  %2054 = fmul float %2040, %2053
  %2055 = fadd float %2041, %2054
  %2056 = fsub float %2055, %2041
  %2057 = fsub float %2054, %2056
  %2058 = fmul float %2055, %2055
  %2059 = fneg float %2058
  %2060 = tail call float @llvm.fma.f32(float %2055, float %2055, float %2059)
  %2061 = fmul float %2057, 2.000000e+00
  %2062 = tail call float @llvm.fma.f32(float %2055, float %2061, float %2060)
  %2063 = fadd float %2058, %2062
  %2064 = fsub float %2063, %2058
  %2065 = fsub float %2062, %2064
  %2066 = tail call float @llvm.fmuladd.f32(float %2063, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2067 = tail call float @llvm.fmuladd.f32(float %2063, float %2066, float 0x3FD999BDE0000000)
  %2068 = sitofp i32 %2035 to float
  %2069 = fmul float %2068, 0x3FE62E4300000000
  %2070 = fneg float %2069
  %2071 = tail call float @llvm.fma.f32(float %2068, float 0x3FE62E4300000000, float %2070)
  %2072 = tail call float @llvm.fma.f32(float %2068, float 0xBE205C6100000000, float %2071)
  %2073 = fadd float %2069, %2072
  %2074 = fsub float %2073, %2069
  %2075 = fsub float %2072, %2074
  %2076 = tail call float @llvm.amdgcn.ldexp.f32(float %2055, i32 1)
  %2077 = fmul float %2055, %2063
  %2078 = fneg float %2077
  %2079 = tail call float @llvm.fma.f32(float %2063, float %2055, float %2078)
  %2080 = tail call float @llvm.fma.f32(float %2063, float %2057, float %2079)
  %2081 = tail call float @llvm.fma.f32(float %2065, float %2055, float %2080)
  %2082 = fadd float %2077, %2081
  %2083 = fsub float %2082, %2077
  %2084 = fsub float %2081, %2083
  %2085 = fmul float %2063, %2067
  %2086 = fneg float %2085
  %2087 = tail call float @llvm.fma.f32(float %2063, float %2067, float %2086)
  %2088 = tail call float @llvm.fma.f32(float %2065, float %2067, float %2087)
  %2089 = fadd float %2085, %2088
  %2090 = fsub float %2089, %2085
  %2091 = fsub float %2088, %2090
  %2092 = fadd float %2089, 0x3FE5555540000000
  %2093 = fadd float %2092, 0xBFE5555540000000
  %2094 = fsub float %2089, %2093
  %2095 = fadd float %2091, 0x3E2E720200000000
  %2096 = fadd float %2095, %2094
  %2097 = fadd float %2092, %2096
  %2098 = fsub float %2097, %2092
  %2099 = fsub float %2096, %2098
  %2100 = fmul float %2082, %2097
  %2101 = fneg float %2100
  %2102 = tail call float @llvm.fma.f32(float %2082, float %2097, float %2101)
  %2103 = tail call float @llvm.fma.f32(float %2082, float %2099, float %2102)
  %2104 = tail call float @llvm.fma.f32(float %2084, float %2097, float %2103)
  %2105 = tail call float @llvm.amdgcn.ldexp.f32(float %2057, i32 1)
  %2106 = fadd float %2100, %2104
  %2107 = fsub float %2106, %2100
  %2108 = fsub float %2104, %2107
  %2109 = fadd float %2076, %2106
  %2110 = fsub float %2109, %2076
  %2111 = fsub float %2106, %2110
  %2112 = fadd float %2105, %2108
  %2113 = fadd float %2112, %2111
  %2114 = fadd float %2109, %2113
  %2115 = fsub float %2114, %2109
  %2116 = fsub float %2113, %2115
  %2117 = fadd float %2073, %2114
  %2118 = fsub float %2117, %2073
  %2119 = fsub float %2117, %2118
  %2120 = fsub float %2073, %2119
  %2121 = fsub float %2114, %2118
  %2122 = fadd float %2121, %2120
  %2123 = fadd float %2075, %2116
  %2124 = fsub float %2123, %2075
  %2125 = fsub float %2123, %2124
  %2126 = fsub float %2075, %2125
  %2127 = fsub float %2116, %2124
  %2128 = fadd float %2127, %2126
  %2129 = fadd float %2123, %2122
  %2130 = fadd float %2117, %2129
  %2131 = fsub float %2130, %2117
  %2132 = fsub float %2129, %2131
  %2133 = fadd float %2128, %2132
  %2134 = fadd float %2130, %2133
  %2135 = fsub float %2134, %2130
  %2136 = fsub float %2133, %2135
  %2137 = fmul float %2134, 2.000000e+00
  %2138 = fneg float %2137
  %2139 = tail call float @llvm.fma.f32(float %2134, float 2.000000e+00, float %2138)
  %2140 = fmul float %2134, 0.000000e+00
  %2141 = tail call float @llvm.fma.f32(float %2136, float 2.000000e+00, float %2140)
  %2142 = fadd float %2139, %2141
  %2143 = fadd float %2137, %2142
  %2144 = fsub float %2143, %2137
  %2145 = fsub float %2142, %2144
  %2146 = tail call float @llvm.fabs.f32(float %2137) #3
  %2147 = fcmp oeq float %2146, 0x7FF0000000000000
  %2148 = select i1 %2147, float %2137, float %2143
  %2149 = tail call float @llvm.fabs.f32(float %2148) #3
  %2150 = fcmp oeq float %2149, 0x7FF0000000000000
  %2151 = select i1 %2150, float 0.000000e+00, float %2145
  %2152 = fcmp oeq float %2148, 0x40562E4300000000
  %2153 = select i1 %2152, float 0x3EE0000000000000, float 0.000000e+00
  %2154 = fsub float %2148, %2153
  %2155 = fadd float %2153, %2151
  %2156 = fmul float %2154, 0x3FF7154760000000
  %2157 = tail call float @llvm.rint.f32(float %2156)
  %2158 = fcmp ogt float %2154, 0x40562E4300000000
  %2159 = fcmp olt float %2154, 0xC059D1DA00000000
  %2160 = fneg float %2156
  %2161 = tail call float @llvm.fma.f32(float %2154, float 0x3FF7154760000000, float %2160)
  %2162 = tail call float @llvm.fma.f32(float %2154, float 0x3E54AE0BE0000000, float %2161)
  %2163 = fsub float %2156, %2157
  %2164 = fadd float %2162, %2163
  %2165 = tail call float @llvm.exp2.f32(float %2164)
  %2166 = fptosi float %2157 to i32
  %2167 = tail call float @llvm.amdgcn.ldexp.f32(float %2165, i32 %2166)
  %2168 = select i1 %2159, float 0.000000e+00, float %2167
  %2169 = select i1 %2158, float 0x7FF0000000000000, float %2168
  %2170 = tail call float @llvm.fma.f32(float %2169, float %2155, float %2169)
  %2171 = tail call float @llvm.fabs.f32(float %2169) #3
  %2172 = fcmp oeq float %2171, 0x7FF0000000000000
  %2173 = select i1 %2172, float %2169, float %2170
  %2174 = tail call float @llvm.fabs.f32(float %2173)
  %2175 = fcmp oeq float %2029, 0x7FF0000000000000
  %2176 = fcmp oeq float %2028, 0.000000e+00
  %2177 = select i1 %2175, float 0x7FF0000000000000, float %2174
  %2178 = select i1 %2176, float 0.000000e+00, float %2177
  %2179 = fcmp uno float %2028, 0.000000e+00
  %2180 = select i1 %2179, float 0x7FF8000000000000, float %2178
  %2181 = fadd contract float %494, %2180
  %2182 = fadd contract float %2181, 0.000000e+00
  br label %2183

2183:                                             ; preds = %2468, %2005
  %2184 = phi i1 [ true, %2005 ], [ false, %2468 ]
  %2185 = phi i32 [ 0, %2005 ], [ 1, %2468 ]
  %2186 = phi float [ %2182, %2005 ], [ %2649, %2468 ]
  %2187 = zext i32 %2185 to i64
  %2188 = extractelement <3 x float> %37, i64 %2187
  %2189 = fadd contract float %2188, -1.000000e+00
  %2190 = fmul contract float %2189, 2.500000e-01
  %2191 = fadd contract float %2190, 1.000000e+00
  %2192 = add nuw nsw i32 %2185, 1
  %2193 = zext i32 %2192 to i64
  %2194 = extractelement <3 x float> %37, i64 %2193
  %2195 = fadd contract float %2194, -1.000000e+00
  %2196 = fmul contract float %2195, 2.500000e-01
  %2197 = fadd contract float %2196, 1.000000e+00
  %2198 = fadd contract float %2191, -1.000000e+00
  %2199 = tail call float @llvm.fabs.f32(float %2198)
  %2200 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2199)
  %2201 = fcmp olt float %2200, 0x3FE5555560000000
  %2202 = zext i1 %2201 to i32
  %2203 = tail call float @llvm.amdgcn.ldexp.f32(float %2200, i32 %2202)
  %2204 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2199)
  %2205 = sub nsw i32 %2204, %2202
  %2206 = fadd float %2203, -1.000000e+00
  %2207 = fadd float %2203, 1.000000e+00
  %2208 = fadd float %2207, -1.000000e+00
  %2209 = fsub float %2203, %2208
  %2210 = tail call float @llvm.amdgcn.rcp.f32(float %2207)
  %2211 = fmul float %2206, %2210
  %2212 = fmul float %2207, %2211
  %2213 = fneg float %2212
  %2214 = tail call float @llvm.fma.f32(float %2211, float %2207, float %2213)
  %2215 = tail call float @llvm.fma.f32(float %2211, float %2209, float %2214)
  %2216 = fadd float %2212, %2215
  %2217 = fsub float %2216, %2212
  %2218 = fsub float %2215, %2217
  %2219 = fsub float %2206, %2216
  %2220 = fsub float %2206, %2219
  %2221 = fsub float %2220, %2216
  %2222 = fsub float %2221, %2218
  %2223 = fadd float %2219, %2222
  %2224 = fmul float %2210, %2223
  %2225 = fadd float %2211, %2224
  %2226 = fsub float %2225, %2211
  %2227 = fsub float %2224, %2226
  %2228 = fmul float %2225, %2225
  %2229 = fneg float %2228
  %2230 = tail call float @llvm.fma.f32(float %2225, float %2225, float %2229)
  %2231 = fmul float %2227, 2.000000e+00
  %2232 = tail call float @llvm.fma.f32(float %2225, float %2231, float %2230)
  %2233 = fadd float %2228, %2232
  %2234 = fsub float %2233, %2228
  %2235 = fsub float %2232, %2234
  %2236 = tail call float @llvm.fmuladd.f32(float %2233, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2237 = tail call float @llvm.fmuladd.f32(float %2233, float %2236, float 0x3FD999BDE0000000)
  %2238 = sitofp i32 %2205 to float
  %2239 = fmul float %2238, 0x3FE62E4300000000
  %2240 = fneg float %2239
  %2241 = tail call float @llvm.fma.f32(float %2238, float 0x3FE62E4300000000, float %2240)
  %2242 = tail call float @llvm.fma.f32(float %2238, float 0xBE205C6100000000, float %2241)
  %2243 = fadd float %2239, %2242
  %2244 = fsub float %2243, %2239
  %2245 = fsub float %2242, %2244
  %2246 = tail call float @llvm.amdgcn.ldexp.f32(float %2225, i32 1)
  %2247 = fmul float %2225, %2233
  %2248 = fneg float %2247
  %2249 = tail call float @llvm.fma.f32(float %2233, float %2225, float %2248)
  %2250 = tail call float @llvm.fma.f32(float %2233, float %2227, float %2249)
  %2251 = tail call float @llvm.fma.f32(float %2235, float %2225, float %2250)
  %2252 = fadd float %2247, %2251
  %2253 = fsub float %2252, %2247
  %2254 = fsub float %2251, %2253
  %2255 = fmul float %2233, %2237
  %2256 = fneg float %2255
  %2257 = tail call float @llvm.fma.f32(float %2233, float %2237, float %2256)
  %2258 = tail call float @llvm.fma.f32(float %2235, float %2237, float %2257)
  %2259 = fadd float %2255, %2258
  %2260 = fsub float %2259, %2255
  %2261 = fsub float %2258, %2260
  %2262 = fadd float %2259, 0x3FE5555540000000
  %2263 = fadd float %2262, 0xBFE5555540000000
  %2264 = fsub float %2259, %2263
  %2265 = fadd float %2261, 0x3E2E720200000000
  %2266 = fadd float %2265, %2264
  %2267 = fadd float %2262, %2266
  %2268 = fsub float %2267, %2262
  %2269 = fsub float %2266, %2268
  %2270 = fmul float %2252, %2267
  %2271 = fneg float %2270
  %2272 = tail call float @llvm.fma.f32(float %2252, float %2267, float %2271)
  %2273 = tail call float @llvm.fma.f32(float %2252, float %2269, float %2272)
  %2274 = tail call float @llvm.fma.f32(float %2254, float %2267, float %2273)
  %2275 = tail call float @llvm.amdgcn.ldexp.f32(float %2227, i32 1)
  %2276 = fadd float %2270, %2274
  %2277 = fsub float %2276, %2270
  %2278 = fsub float %2274, %2277
  %2279 = fadd float %2246, %2276
  %2280 = fsub float %2279, %2246
  %2281 = fsub float %2276, %2280
  %2282 = fadd float %2275, %2278
  %2283 = fadd float %2282, %2281
  %2284 = fadd float %2279, %2283
  %2285 = fsub float %2284, %2279
  %2286 = fsub float %2283, %2285
  %2287 = fadd float %2243, %2284
  %2288 = fsub float %2287, %2243
  %2289 = fsub float %2287, %2288
  %2290 = fsub float %2243, %2289
  %2291 = fsub float %2284, %2288
  %2292 = fadd float %2291, %2290
  %2293 = fadd float %2245, %2286
  %2294 = fsub float %2293, %2245
  %2295 = fsub float %2293, %2294
  %2296 = fsub float %2245, %2295
  %2297 = fsub float %2286, %2294
  %2298 = fadd float %2297, %2296
  %2299 = fadd float %2293, %2292
  %2300 = fadd float %2287, %2299
  %2301 = fsub float %2300, %2287
  %2302 = fsub float %2299, %2301
  %2303 = fadd float %2298, %2302
  %2304 = fadd float %2300, %2303
  %2305 = fsub float %2304, %2300
  %2306 = fsub float %2303, %2305
  %2307 = fmul float %2304, 2.000000e+00
  %2308 = fneg float %2307
  %2309 = tail call float @llvm.fma.f32(float %2304, float 2.000000e+00, float %2308)
  %2310 = fmul float %2304, 0.000000e+00
  %2311 = tail call float @llvm.fma.f32(float %2306, float 2.000000e+00, float %2310)
  %2312 = fadd float %2309, %2311
  %2313 = fadd float %2307, %2312
  %2314 = fsub float %2313, %2307
  %2315 = fsub float %2312, %2314
  %2316 = tail call float @llvm.fabs.f32(float %2307) #3
  %2317 = fcmp oeq float %2316, 0x7FF0000000000000
  %2318 = select i1 %2317, float %2307, float %2313
  %2319 = tail call float @llvm.fabs.f32(float %2318) #3
  %2320 = fcmp oeq float %2319, 0x7FF0000000000000
  %2321 = select i1 %2320, float 0.000000e+00, float %2315
  %2322 = fcmp oeq float %2318, 0x40562E4300000000
  %2323 = select i1 %2322, float 0x3EE0000000000000, float 0.000000e+00
  %2324 = fsub float %2318, %2323
  %2325 = fadd float %2323, %2321
  %2326 = fmul float %2324, 0x3FF7154760000000
  %2327 = tail call float @llvm.rint.f32(float %2326)
  %2328 = fcmp ogt float %2324, 0x40562E4300000000
  %2329 = fcmp olt float %2324, 0xC059D1DA00000000
  %2330 = fneg float %2326
  %2331 = tail call float @llvm.fma.f32(float %2324, float 0x3FF7154760000000, float %2330)
  %2332 = tail call float @llvm.fma.f32(float %2324, float 0x3E54AE0BE0000000, float %2331)
  %2333 = fsub float %2326, %2327
  %2334 = fadd float %2332, %2333
  %2335 = tail call float @llvm.exp2.f32(float %2334)
  %2336 = fptosi float %2327 to i32
  %2337 = tail call float @llvm.amdgcn.ldexp.f32(float %2335, i32 %2336)
  %2338 = select i1 %2329, float 0.000000e+00, float %2337
  %2339 = select i1 %2328, float 0x7FF0000000000000, float %2338
  %2340 = tail call float @llvm.fma.f32(float %2339, float %2325, float %2339)
  %2341 = tail call float @llvm.fabs.f32(float %2339) #3
  %2342 = fcmp oeq float %2341, 0x7FF0000000000000
  %2343 = select i1 %2342, float %2339, float %2340
  %2344 = tail call float @llvm.fabs.f32(float %2343)
  %2345 = fcmp oeq float %2199, 0x7FF0000000000000
  %2346 = fcmp oeq float %2198, 0.000000e+00
  %2347 = select i1 %2345, float 0x7FF0000000000000, float %2344
  %2348 = select i1 %2346, float 0.000000e+00, float %2347
  %2349 = fcmp uno float %2198, 0.000000e+00
  %2350 = select i1 %2349, float 0x7FF8000000000000, float %2348
  %2351 = fmul contract float %2197, 0x400921CAC0000000
  %2352 = tail call float @llvm.fabs.f32(float %2351)
  %2353 = fcmp olt float %2352, 1.310720e+05
  br i1 %2353, label %2354, label %2362

2354:                                             ; preds = %2183
  %2355 = fmul float %2352, 0x3FE45F3060000000
  %2356 = tail call float @llvm.rint.f32(float %2355)
  %2357 = tail call float @llvm.fma.f32(float %2356, float 0xBFF921FB40000000, float %2352)
  %2358 = tail call float @llvm.fma.f32(float %2356, float 0xBE74442D00000000, float %2357)
  %2359 = tail call float @llvm.fma.f32(float %2356, float 0xBCF8469880000000, float %2358)
  %2360 = fptosi float %2356 to i32
  %2361 = bitcast float %2352 to i32
  br label %2468

2362:                                             ; preds = %2183
  %2363 = bitcast float %2352 to i32
  %2364 = lshr i32 %2363, 23
  %2365 = and i32 %2363, 8388607
  %2366 = or i32 %2365, 8388608
  %2367 = zext i32 %2366 to i64
  %2368 = mul nuw nsw i64 %2367, 4266746795
  %2369 = trunc i64 %2368 to i32
  %2370 = lshr i64 %2368, 32
  %2371 = mul nuw nsw i64 %2367, 1011060801
  %2372 = add nuw nsw i64 %2370, %2371
  %2373 = trunc i64 %2372 to i32
  %2374 = lshr i64 %2372, 32
  %2375 = mul nuw nsw i64 %2367, 3680671129
  %2376 = add nuw nsw i64 %2374, %2375
  %2377 = trunc i64 %2376 to i32
  %2378 = lshr i64 %2376, 32
  %2379 = mul nuw nsw i64 %2367, 4113882560
  %2380 = add nuw nsw i64 %2378, %2379
  %2381 = trunc i64 %2380 to i32
  %2382 = lshr i64 %2380, 32
  %2383 = mul nuw nsw i64 %2367, 4230436817
  %2384 = add nuw nsw i64 %2382, %2383
  %2385 = trunc i64 %2384 to i32
  %2386 = lshr i64 %2384, 32
  %2387 = mul nuw nsw i64 %2367, 1313084713
  %2388 = add nuw nsw i64 %2386, %2387
  %2389 = trunc i64 %2388 to i32
  %2390 = lshr i64 %2388, 32
  %2391 = mul nuw nsw i64 %2367, 2734261102
  %2392 = add nuw nsw i64 %2390, %2391
  %2393 = trunc i64 %2392 to i32
  %2394 = lshr i64 %2392, 32
  %2395 = trunc i64 %2394 to i32
  %2396 = add nsw i32 %2364, -120
  %2397 = icmp ugt i32 %2396, 63
  %2398 = select i1 %2397, i32 %2389, i32 %2395
  %2399 = select i1 %2397, i32 %2385, i32 %2393
  %2400 = select i1 %2397, i32 %2381, i32 %2389
  %2401 = select i1 %2397, i32 %2377, i32 %2385
  %2402 = select i1 %2397, i32 %2373, i32 %2381
  %2403 = select i1 %2397, i32 %2369, i32 %2377
  %2404 = select i1 %2397, i32 -64, i32 0
  %2405 = add nsw i32 %2404, %2396
  %2406 = icmp ugt i32 %2405, 31
  %2407 = select i1 %2406, i32 %2399, i32 %2398
  %2408 = select i1 %2406, i32 %2400, i32 %2399
  %2409 = select i1 %2406, i32 %2401, i32 %2400
  %2410 = select i1 %2406, i32 %2402, i32 %2401
  %2411 = select i1 %2406, i32 %2403, i32 %2402
  %2412 = select i1 %2406, i32 -32, i32 0
  %2413 = add nsw i32 %2412, %2405
  %2414 = icmp ugt i32 %2413, 31
  %2415 = select i1 %2414, i32 %2408, i32 %2407
  %2416 = select i1 %2414, i32 %2409, i32 %2408
  %2417 = select i1 %2414, i32 %2410, i32 %2409
  %2418 = select i1 %2414, i32 %2411, i32 %2410
  %2419 = select i1 %2414, i32 -32, i32 0
  %2420 = add nsw i32 %2419, %2413
  %2421 = icmp eq i32 %2420, 0
  %2422 = sub nsw i32 32, %2420
  %2423 = tail call i32 @llvm.fshr.i32(i32 %2415, i32 %2416, i32 %2422)
  %2424 = tail call i32 @llvm.fshr.i32(i32 %2416, i32 %2417, i32 %2422)
  %2425 = tail call i32 @llvm.fshr.i32(i32 %2417, i32 %2418, i32 %2422)
  %2426 = select i1 %2421, i32 %2415, i32 %2423
  %2427 = select i1 %2421, i32 %2416, i32 %2424
  %2428 = select i1 %2421, i32 %2417, i32 %2425
  %2429 = lshr i32 %2426, 29
  %2430 = tail call i32 @llvm.fshl.i32(i32 %2426, i32 %2427, i32 2)
  %2431 = tail call i32 @llvm.fshl.i32(i32 %2427, i32 %2428, i32 2)
  %2432 = tail call i32 @llvm.fshl.i32(i32 %2428, i32 %2418, i32 2)
  %2433 = and i32 %2429, 1
  %2434 = sub nsw i32 0, %2433
  %2435 = shl i32 %2429, 31
  %2436 = xor i32 %2430, %2434
  %2437 = xor i32 %2431, %2434
  %2438 = xor i32 %2432, %2434
  %2439 = tail call i32 @llvm.ctlz.i32(i32 %2436, i1 false), !range !11
  %2440 = sub nsw i32 31, %2439
  %2441 = tail call i32 @llvm.fshr.i32(i32 %2436, i32 %2437, i32 %2440)
  %2442 = tail call i32 @llvm.fshr.i32(i32 %2437, i32 %2438, i32 %2440)
  %2443 = shl nuw nsw i32 %2439, 23
  %2444 = sub nuw nsw i32 1056964608, %2443
  %2445 = lshr i32 %2441, 9
  %2446 = or i32 %2445, %2444
  %2447 = or i32 %2446, %2435
  %2448 = bitcast i32 %2447 to float
  %2449 = tail call i32 @llvm.fshl.i32(i32 %2441, i32 %2442, i32 23)
  %2450 = tail call i32 @llvm.ctlz.i32(i32 %2449, i1 false), !range !11
  %2451 = fmul float %2448, 0x3FF921FB40000000
  %2452 = add nuw nsw i32 %2450, %2439
  %2453 = shl nuw nsw i32 %2452, 23
  %2454 = sub nuw nsw i32 855638016, %2453
  %2455 = sub nsw i32 31, %2450
  %2456 = tail call i32 @llvm.fshr.i32(i32 %2449, i32 %2442, i32 %2455)
  %2457 = lshr i32 %2456, 9
  %2458 = or i32 %2454, %2457
  %2459 = or i32 %2458, %2435
  %2460 = bitcast i32 %2459 to float
  %2461 = fneg float %2451
  %2462 = tail call float @llvm.fma.f32(float %2448, float 0x3FF921FB40000000, float %2461)
  %2463 = tail call float @llvm.fma.f32(float %2448, float 0x3E74442D00000000, float %2462)
  %2464 = tail call float @llvm.fma.f32(float %2460, float 0x3FF921FB40000000, float %2463)
  %2465 = fadd float %2451, %2464
  %2466 = lshr i32 %2426, 30
  %2467 = add nuw nsw i32 %2433, %2466
  br label %2468

2468:                                             ; preds = %2362, %2354
  %2469 = phi i32 [ %2361, %2354 ], [ %2363, %2362 ]
  %2470 = phi float [ %2359, %2354 ], [ %2465, %2362 ]
  %2471 = phi i32 [ %2360, %2354 ], [ %2467, %2362 ]
  %2472 = fmul float %2470, %2470
  %2473 = tail call float @llvm.fmuladd.f32(float %2472, float 0xBF29833040000000, float 0x3F81103880000000)
  %2474 = tail call float @llvm.fmuladd.f32(float %2472, float %2473, float 0xBFC55553A0000000)
  %2475 = fmul float %2472, %2474
  %2476 = tail call float @llvm.fmuladd.f32(float %2470, float %2475, float %2470)
  %2477 = tail call float @llvm.fmuladd.f32(float %2472, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %2478 = tail call float @llvm.fmuladd.f32(float %2472, float %2477, float 0x3FA5557EE0000000)
  %2479 = tail call float @llvm.fmuladd.f32(float %2472, float %2478, float 0xBFE0000080000000)
  %2480 = tail call float @llvm.fmuladd.f32(float %2472, float %2479, float 1.000000e+00)
  %2481 = and i32 %2471, 1
  %2482 = icmp eq i32 %2481, 0
  %2483 = select i1 %2482, float %2476, float %2480
  %2484 = bitcast float %2483 to i32
  %2485 = shl i32 %2471, 30
  %2486 = and i32 %2485, -2147483648
  %2487 = bitcast float %2351 to i32
  %2488 = xor i32 %2469, %2487
  %2489 = xor i32 %2488, %2486
  %2490 = xor i32 %2489, %2484
  %2491 = bitcast i32 %2490 to float
  %2492 = tail call i1 @llvm.amdgcn.class.f32(float %2352, i32 504)
  %2493 = select i1 %2492, float %2491, float 0x7FF8000000000000
  %2494 = tail call float @llvm.fabs.f32(float %2493)
  %2495 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2494)
  %2496 = fcmp olt float %2495, 0x3FE5555560000000
  %2497 = zext i1 %2496 to i32
  %2498 = tail call float @llvm.amdgcn.ldexp.f32(float %2495, i32 %2497)
  %2499 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2494)
  %2500 = sub nsw i32 %2499, %2497
  %2501 = fadd float %2498, -1.000000e+00
  %2502 = fadd float %2498, 1.000000e+00
  %2503 = fadd float %2502, -1.000000e+00
  %2504 = fsub float %2498, %2503
  %2505 = tail call float @llvm.amdgcn.rcp.f32(float %2502)
  %2506 = fmul float %2501, %2505
  %2507 = fmul float %2502, %2506
  %2508 = fneg float %2507
  %2509 = tail call float @llvm.fma.f32(float %2506, float %2502, float %2508)
  %2510 = tail call float @llvm.fma.f32(float %2506, float %2504, float %2509)
  %2511 = fadd float %2507, %2510
  %2512 = fsub float %2511, %2507
  %2513 = fsub float %2510, %2512
  %2514 = fsub float %2501, %2511
  %2515 = fsub float %2501, %2514
  %2516 = fsub float %2515, %2511
  %2517 = fsub float %2516, %2513
  %2518 = fadd float %2514, %2517
  %2519 = fmul float %2505, %2518
  %2520 = fadd float %2506, %2519
  %2521 = fsub float %2520, %2506
  %2522 = fsub float %2519, %2521
  %2523 = fmul float %2520, %2520
  %2524 = fneg float %2523
  %2525 = tail call float @llvm.fma.f32(float %2520, float %2520, float %2524)
  %2526 = fmul float %2522, 2.000000e+00
  %2527 = tail call float @llvm.fma.f32(float %2520, float %2526, float %2525)
  %2528 = fadd float %2523, %2527
  %2529 = fsub float %2528, %2523
  %2530 = fsub float %2527, %2529
  %2531 = tail call float @llvm.fmuladd.f32(float %2528, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2532 = tail call float @llvm.fmuladd.f32(float %2528, float %2531, float 0x3FD999BDE0000000)
  %2533 = sitofp i32 %2500 to float
  %2534 = fmul float %2533, 0x3FE62E4300000000
  %2535 = fneg float %2534
  %2536 = tail call float @llvm.fma.f32(float %2533, float 0x3FE62E4300000000, float %2535)
  %2537 = tail call float @llvm.fma.f32(float %2533, float 0xBE205C6100000000, float %2536)
  %2538 = fadd float %2534, %2537
  %2539 = fsub float %2538, %2534
  %2540 = fsub float %2537, %2539
  %2541 = tail call float @llvm.amdgcn.ldexp.f32(float %2520, i32 1)
  %2542 = fmul float %2520, %2528
  %2543 = fneg float %2542
  %2544 = tail call float @llvm.fma.f32(float %2528, float %2520, float %2543)
  %2545 = tail call float @llvm.fma.f32(float %2528, float %2522, float %2544)
  %2546 = tail call float @llvm.fma.f32(float %2530, float %2520, float %2545)
  %2547 = fadd float %2542, %2546
  %2548 = fsub float %2547, %2542
  %2549 = fsub float %2546, %2548
  %2550 = fmul float %2528, %2532
  %2551 = fneg float %2550
  %2552 = tail call float @llvm.fma.f32(float %2528, float %2532, float %2551)
  %2553 = tail call float @llvm.fma.f32(float %2530, float %2532, float %2552)
  %2554 = fadd float %2550, %2553
  %2555 = fsub float %2554, %2550
  %2556 = fsub float %2553, %2555
  %2557 = fadd float %2554, 0x3FE5555540000000
  %2558 = fadd float %2557, 0xBFE5555540000000
  %2559 = fsub float %2554, %2558
  %2560 = fadd float %2556, 0x3E2E720200000000
  %2561 = fadd float %2560, %2559
  %2562 = fadd float %2557, %2561
  %2563 = fsub float %2562, %2557
  %2564 = fsub float %2561, %2563
  %2565 = fmul float %2547, %2562
  %2566 = fneg float %2565
  %2567 = tail call float @llvm.fma.f32(float %2547, float %2562, float %2566)
  %2568 = tail call float @llvm.fma.f32(float %2547, float %2564, float %2567)
  %2569 = tail call float @llvm.fma.f32(float %2549, float %2562, float %2568)
  %2570 = tail call float @llvm.amdgcn.ldexp.f32(float %2522, i32 1)
  %2571 = fadd float %2565, %2569
  %2572 = fsub float %2571, %2565
  %2573 = fsub float %2569, %2572
  %2574 = fadd float %2541, %2571
  %2575 = fsub float %2574, %2541
  %2576 = fsub float %2571, %2575
  %2577 = fadd float %2570, %2573
  %2578 = fadd float %2577, %2576
  %2579 = fadd float %2574, %2578
  %2580 = fsub float %2579, %2574
  %2581 = fsub float %2578, %2580
  %2582 = fadd float %2538, %2579
  %2583 = fsub float %2582, %2538
  %2584 = fsub float %2582, %2583
  %2585 = fsub float %2538, %2584
  %2586 = fsub float %2579, %2583
  %2587 = fadd float %2586, %2585
  %2588 = fadd float %2540, %2581
  %2589 = fsub float %2588, %2540
  %2590 = fsub float %2588, %2589
  %2591 = fsub float %2540, %2590
  %2592 = fsub float %2581, %2589
  %2593 = fadd float %2592, %2591
  %2594 = fadd float %2588, %2587
  %2595 = fadd float %2582, %2594
  %2596 = fsub float %2595, %2582
  %2597 = fsub float %2594, %2596
  %2598 = fadd float %2593, %2597
  %2599 = fadd float %2595, %2598
  %2600 = fsub float %2599, %2595
  %2601 = fsub float %2598, %2600
  %2602 = fmul float %2599, 2.000000e+00
  %2603 = fneg float %2602
  %2604 = tail call float @llvm.fma.f32(float %2599, float 2.000000e+00, float %2603)
  %2605 = fmul float %2599, 0.000000e+00
  %2606 = tail call float @llvm.fma.f32(float %2601, float 2.000000e+00, float %2605)
  %2607 = fadd float %2604, %2606
  %2608 = fadd float %2602, %2607
  %2609 = fsub float %2608, %2602
  %2610 = fsub float %2607, %2609
  %2611 = tail call float @llvm.fabs.f32(float %2602) #3
  %2612 = fcmp oeq float %2611, 0x7FF0000000000000
  %2613 = select i1 %2612, float %2602, float %2608
  %2614 = tail call float @llvm.fabs.f32(float %2613) #3
  %2615 = fcmp oeq float %2614, 0x7FF0000000000000
  %2616 = select i1 %2615, float 0.000000e+00, float %2610
  %2617 = fcmp oeq float %2613, 0x40562E4300000000
  %2618 = select i1 %2617, float 0x3EE0000000000000, float 0.000000e+00
  %2619 = fsub float %2613, %2618
  %2620 = fadd float %2618, %2616
  %2621 = fmul float %2619, 0x3FF7154760000000
  %2622 = tail call float @llvm.rint.f32(float %2621)
  %2623 = fcmp ogt float %2619, 0x40562E4300000000
  %2624 = fcmp olt float %2619, 0xC059D1DA00000000
  %2625 = fneg float %2621
  %2626 = tail call float @llvm.fma.f32(float %2619, float 0x3FF7154760000000, float %2625)
  %2627 = tail call float @llvm.fma.f32(float %2619, float 0x3E54AE0BE0000000, float %2626)
  %2628 = fsub float %2621, %2622
  %2629 = fadd float %2627, %2628
  %2630 = tail call float @llvm.exp2.f32(float %2629)
  %2631 = fptosi float %2622 to i32
  %2632 = tail call float @llvm.amdgcn.ldexp.f32(float %2630, i32 %2631)
  %2633 = select i1 %2624, float 0.000000e+00, float %2632
  %2634 = select i1 %2623, float 0x7FF0000000000000, float %2633
  %2635 = tail call float @llvm.fma.f32(float %2634, float %2620, float %2634)
  %2636 = tail call float @llvm.fabs.f32(float %2634) #3
  %2637 = fcmp oeq float %2636, 0x7FF0000000000000
  %2638 = select i1 %2637, float %2634, float %2635
  %2639 = tail call float @llvm.fabs.f32(float %2638)
  %2640 = fcmp oeq float %2494, 0x7FF0000000000000
  %2641 = fcmp oeq float %2493, 0.000000e+00
  %2642 = fcmp uno float %2493, 0.000000e+00
  %2643 = fmul contract float %2639, 1.000000e+01
  %2644 = fadd contract float %2643, 1.000000e+00
  %2645 = select i1 %2640, float 0x7FF0000000000000, float %2644
  %2646 = select i1 %2641, float 1.000000e+00, float %2645
  %2647 = select i1 %2642, float 0x7FF8000000000000, float %2646
  %2648 = fmul contract float %2350, %2647
  %2649 = fadd contract float %2186, %2648
  br i1 %2184, label %2183, label %2650, !llvm.loop !12

2650:                                             ; preds = %2468
  %2651 = load float, float addrspace(1)* %2, align 4, !tbaa !7
  %2652 = fadd contract float %2651, -1.000000e+00
  %2653 = fmul contract float %2652, 2.500000e-01
  %2654 = fadd contract float %2653, 1.000000e+00
  %2655 = getelementptr inbounds float, float addrspace(1)* %2, i64 2
  %2656 = load float, float addrspace(1)* %2655, align 4, !tbaa !7
  %2657 = fadd contract float %2656, -1.000000e+00
  %2658 = fmul contract float %2657, 2.500000e-01
  %2659 = fadd contract float %2658, 1.000000e+00
  %2660 = fmul contract float %2654, 0x400921CAC0000000
  %2661 = tail call float @llvm.fabs.f32(float %2660)
  %2662 = fcmp olt float %2661, 1.310720e+05
  br i1 %2662, label %2663, label %2671

2663:                                             ; preds = %2650
  %2664 = fmul float %2661, 0x3FE45F3060000000
  %2665 = tail call float @llvm.rint.f32(float %2664)
  %2666 = tail call float @llvm.fma.f32(float %2665, float 0xBFF921FB40000000, float %2661)
  %2667 = tail call float @llvm.fma.f32(float %2665, float 0xBE74442D00000000, float %2666)
  %2668 = tail call float @llvm.fma.f32(float %2665, float 0xBCF8469880000000, float %2667)
  %2669 = fptosi float %2665 to i32
  %2670 = bitcast float %2661 to i32
  br label %2777

2671:                                             ; preds = %2650
  %2672 = bitcast float %2661 to i32
  %2673 = lshr i32 %2672, 23
  %2674 = and i32 %2672, 8388607
  %2675 = or i32 %2674, 8388608
  %2676 = zext i32 %2675 to i64
  %2677 = mul nuw nsw i64 %2676, 4266746795
  %2678 = trunc i64 %2677 to i32
  %2679 = lshr i64 %2677, 32
  %2680 = mul nuw nsw i64 %2676, 1011060801
  %2681 = add nuw nsw i64 %2679, %2680
  %2682 = trunc i64 %2681 to i32
  %2683 = lshr i64 %2681, 32
  %2684 = mul nuw nsw i64 %2676, 3680671129
  %2685 = add nuw nsw i64 %2683, %2684
  %2686 = trunc i64 %2685 to i32
  %2687 = lshr i64 %2685, 32
  %2688 = mul nuw nsw i64 %2676, 4113882560
  %2689 = add nuw nsw i64 %2687, %2688
  %2690 = trunc i64 %2689 to i32
  %2691 = lshr i64 %2689, 32
  %2692 = mul nuw nsw i64 %2676, 4230436817
  %2693 = add nuw nsw i64 %2691, %2692
  %2694 = trunc i64 %2693 to i32
  %2695 = lshr i64 %2693, 32
  %2696 = mul nuw nsw i64 %2676, 1313084713
  %2697 = add nuw nsw i64 %2695, %2696
  %2698 = trunc i64 %2697 to i32
  %2699 = lshr i64 %2697, 32
  %2700 = mul nuw nsw i64 %2676, 2734261102
  %2701 = add nuw nsw i64 %2699, %2700
  %2702 = trunc i64 %2701 to i32
  %2703 = lshr i64 %2701, 32
  %2704 = trunc i64 %2703 to i32
  %2705 = add nsw i32 %2673, -120
  %2706 = icmp ugt i32 %2705, 63
  %2707 = select i1 %2706, i32 %2698, i32 %2704
  %2708 = select i1 %2706, i32 %2694, i32 %2702
  %2709 = select i1 %2706, i32 %2690, i32 %2698
  %2710 = select i1 %2706, i32 %2686, i32 %2694
  %2711 = select i1 %2706, i32 %2682, i32 %2690
  %2712 = select i1 %2706, i32 %2678, i32 %2686
  %2713 = select i1 %2706, i32 -64, i32 0
  %2714 = add nsw i32 %2713, %2705
  %2715 = icmp ugt i32 %2714, 31
  %2716 = select i1 %2715, i32 %2708, i32 %2707
  %2717 = select i1 %2715, i32 %2709, i32 %2708
  %2718 = select i1 %2715, i32 %2710, i32 %2709
  %2719 = select i1 %2715, i32 %2711, i32 %2710
  %2720 = select i1 %2715, i32 %2712, i32 %2711
  %2721 = select i1 %2715, i32 -32, i32 0
  %2722 = add nsw i32 %2721, %2714
  %2723 = icmp ugt i32 %2722, 31
  %2724 = select i1 %2723, i32 %2717, i32 %2716
  %2725 = select i1 %2723, i32 %2718, i32 %2717
  %2726 = select i1 %2723, i32 %2719, i32 %2718
  %2727 = select i1 %2723, i32 %2720, i32 %2719
  %2728 = select i1 %2723, i32 -32, i32 0
  %2729 = add nsw i32 %2728, %2722
  %2730 = icmp eq i32 %2729, 0
  %2731 = sub nsw i32 32, %2729
  %2732 = tail call i32 @llvm.fshr.i32(i32 %2724, i32 %2725, i32 %2731)
  %2733 = tail call i32 @llvm.fshr.i32(i32 %2725, i32 %2726, i32 %2731)
  %2734 = tail call i32 @llvm.fshr.i32(i32 %2726, i32 %2727, i32 %2731)
  %2735 = select i1 %2730, i32 %2724, i32 %2732
  %2736 = select i1 %2730, i32 %2725, i32 %2733
  %2737 = select i1 %2730, i32 %2726, i32 %2734
  %2738 = lshr i32 %2735, 29
  %2739 = tail call i32 @llvm.fshl.i32(i32 %2735, i32 %2736, i32 2)
  %2740 = tail call i32 @llvm.fshl.i32(i32 %2736, i32 %2737, i32 2)
  %2741 = tail call i32 @llvm.fshl.i32(i32 %2737, i32 %2727, i32 2)
  %2742 = and i32 %2738, 1
  %2743 = sub nsw i32 0, %2742
  %2744 = shl i32 %2738, 31
  %2745 = xor i32 %2739, %2743
  %2746 = xor i32 %2740, %2743
  %2747 = xor i32 %2741, %2743
  %2748 = tail call i32 @llvm.ctlz.i32(i32 %2745, i1 false), !range !11
  %2749 = sub nsw i32 31, %2748
  %2750 = tail call i32 @llvm.fshr.i32(i32 %2745, i32 %2746, i32 %2749)
  %2751 = tail call i32 @llvm.fshr.i32(i32 %2746, i32 %2747, i32 %2749)
  %2752 = shl nuw nsw i32 %2748, 23
  %2753 = sub nuw nsw i32 1056964608, %2752
  %2754 = lshr i32 %2750, 9
  %2755 = or i32 %2754, %2753
  %2756 = or i32 %2755, %2744
  %2757 = bitcast i32 %2756 to float
  %2758 = tail call i32 @llvm.fshl.i32(i32 %2750, i32 %2751, i32 23)
  %2759 = tail call i32 @llvm.ctlz.i32(i32 %2758, i1 false), !range !11
  %2760 = fmul float %2757, 0x3FF921FB40000000
  %2761 = add nuw nsw i32 %2759, %2748
  %2762 = shl nuw nsw i32 %2761, 23
  %2763 = sub nuw nsw i32 855638016, %2762
  %2764 = sub nsw i32 31, %2759
  %2765 = tail call i32 @llvm.fshr.i32(i32 %2758, i32 %2751, i32 %2764)
  %2766 = lshr i32 %2765, 9
  %2767 = or i32 %2763, %2766
  %2768 = or i32 %2767, %2744
  %2769 = bitcast i32 %2768 to float
  %2770 = fneg float %2760
  %2771 = tail call float @llvm.fma.f32(float %2757, float 0x3FF921FB40000000, float %2770)
  %2772 = tail call float @llvm.fma.f32(float %2757, float 0x3E74442D00000000, float %2771)
  %2773 = tail call float @llvm.fma.f32(float %2769, float 0x3FF921FB40000000, float %2772)
  %2774 = fadd float %2760, %2773
  %2775 = lshr i32 %2735, 30
  %2776 = add nuw nsw i32 %2742, %2775
  br label %2777

2777:                                             ; preds = %2671, %2663
  %2778 = phi i32 [ %2670, %2663 ], [ %2672, %2671 ]
  %2779 = phi float [ %2668, %2663 ], [ %2774, %2671 ]
  %2780 = phi i32 [ %2669, %2663 ], [ %2776, %2671 ]
  %2781 = fmul float %2779, %2779
  %2782 = tail call float @llvm.fmuladd.f32(float %2781, float 0xBF29833040000000, float 0x3F81103880000000)
  %2783 = tail call float @llvm.fmuladd.f32(float %2781, float %2782, float 0xBFC55553A0000000)
  %2784 = fmul float %2781, %2783
  %2785 = tail call float @llvm.fmuladd.f32(float %2779, float %2784, float %2779)
  %2786 = tail call float @llvm.fmuladd.f32(float %2781, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %2787 = tail call float @llvm.fmuladd.f32(float %2781, float %2786, float 0x3FA5557EE0000000)
  %2788 = tail call float @llvm.fmuladd.f32(float %2781, float %2787, float 0xBFE0000080000000)
  %2789 = tail call float @llvm.fmuladd.f32(float %2781, float %2788, float 1.000000e+00)
  %2790 = and i32 %2780, 1
  %2791 = icmp eq i32 %2790, 0
  %2792 = select i1 %2791, float %2785, float %2789
  %2793 = bitcast float %2792 to i32
  %2794 = shl i32 %2780, 30
  %2795 = and i32 %2794, -2147483648
  %2796 = bitcast float %2660 to i32
  %2797 = xor i32 %2778, %2796
  %2798 = xor i32 %2797, %2795
  %2799 = xor i32 %2798, %2793
  %2800 = bitcast i32 %2799 to float
  %2801 = tail call i1 @llvm.amdgcn.class.f32(float %2661, i32 504)
  %2802 = select i1 %2801, float %2800, float 0x7FF8000000000000
  %2803 = tail call float @llvm.fabs.f32(float %2802)
  %2804 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2803)
  %2805 = fcmp olt float %2804, 0x3FE5555560000000
  %2806 = zext i1 %2805 to i32
  %2807 = tail call float @llvm.amdgcn.ldexp.f32(float %2804, i32 %2806)
  %2808 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2803)
  %2809 = sub nsw i32 %2808, %2806
  %2810 = fadd float %2807, -1.000000e+00
  %2811 = fadd float %2807, 1.000000e+00
  %2812 = fadd float %2811, -1.000000e+00
  %2813 = fsub float %2807, %2812
  %2814 = tail call float @llvm.amdgcn.rcp.f32(float %2811)
  %2815 = fmul float %2810, %2814
  %2816 = fmul float %2811, %2815
  %2817 = fneg float %2816
  %2818 = tail call float @llvm.fma.f32(float %2815, float %2811, float %2817)
  %2819 = tail call float @llvm.fma.f32(float %2815, float %2813, float %2818)
  %2820 = fadd float %2816, %2819
  %2821 = fsub float %2820, %2816
  %2822 = fsub float %2819, %2821
  %2823 = fsub float %2810, %2820
  %2824 = fsub float %2810, %2823
  %2825 = fsub float %2824, %2820
  %2826 = fsub float %2825, %2822
  %2827 = fadd float %2823, %2826
  %2828 = fmul float %2814, %2827
  %2829 = fadd float %2815, %2828
  %2830 = fsub float %2829, %2815
  %2831 = fsub float %2828, %2830
  %2832 = fmul float %2829, %2829
  %2833 = fneg float %2832
  %2834 = tail call float @llvm.fma.f32(float %2829, float %2829, float %2833)
  %2835 = fmul float %2831, 2.000000e+00
  %2836 = tail call float @llvm.fma.f32(float %2829, float %2835, float %2834)
  %2837 = fadd float %2832, %2836
  %2838 = fsub float %2837, %2832
  %2839 = fsub float %2836, %2838
  %2840 = tail call float @llvm.fmuladd.f32(float %2837, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2841 = tail call float @llvm.fmuladd.f32(float %2837, float %2840, float 0x3FD999BDE0000000)
  %2842 = sitofp i32 %2809 to float
  %2843 = fmul float %2842, 0x3FE62E4300000000
  %2844 = fneg float %2843
  %2845 = tail call float @llvm.fma.f32(float %2842, float 0x3FE62E4300000000, float %2844)
  %2846 = tail call float @llvm.fma.f32(float %2842, float 0xBE205C6100000000, float %2845)
  %2847 = fadd float %2843, %2846
  %2848 = fsub float %2847, %2843
  %2849 = fsub float %2846, %2848
  %2850 = tail call float @llvm.amdgcn.ldexp.f32(float %2829, i32 1)
  %2851 = fmul float %2829, %2837
  %2852 = fneg float %2851
  %2853 = tail call float @llvm.fma.f32(float %2837, float %2829, float %2852)
  %2854 = tail call float @llvm.fma.f32(float %2837, float %2831, float %2853)
  %2855 = tail call float @llvm.fma.f32(float %2839, float %2829, float %2854)
  %2856 = fadd float %2851, %2855
  %2857 = fsub float %2856, %2851
  %2858 = fsub float %2855, %2857
  %2859 = fmul float %2837, %2841
  %2860 = fneg float %2859
  %2861 = tail call float @llvm.fma.f32(float %2837, float %2841, float %2860)
  %2862 = tail call float @llvm.fma.f32(float %2839, float %2841, float %2861)
  %2863 = fadd float %2859, %2862
  %2864 = fsub float %2863, %2859
  %2865 = fsub float %2862, %2864
  %2866 = fadd float %2863, 0x3FE5555540000000
  %2867 = fadd float %2866, 0xBFE5555540000000
  %2868 = fsub float %2863, %2867
  %2869 = fadd float %2865, 0x3E2E720200000000
  %2870 = fadd float %2869, %2868
  %2871 = fadd float %2866, %2870
  %2872 = fsub float %2871, %2866
  %2873 = fsub float %2870, %2872
  %2874 = fmul float %2856, %2871
  %2875 = fneg float %2874
  %2876 = tail call float @llvm.fma.f32(float %2856, float %2871, float %2875)
  %2877 = tail call float @llvm.fma.f32(float %2856, float %2873, float %2876)
  %2878 = tail call float @llvm.fma.f32(float %2858, float %2871, float %2877)
  %2879 = tail call float @llvm.amdgcn.ldexp.f32(float %2831, i32 1)
  %2880 = fadd float %2874, %2878
  %2881 = fsub float %2880, %2874
  %2882 = fsub float %2878, %2881
  %2883 = fadd float %2850, %2880
  %2884 = fsub float %2883, %2850
  %2885 = fsub float %2880, %2884
  %2886 = fadd float %2879, %2882
  %2887 = fadd float %2886, %2885
  %2888 = fadd float %2883, %2887
  %2889 = fsub float %2888, %2883
  %2890 = fsub float %2887, %2889
  %2891 = fadd float %2847, %2888
  %2892 = fsub float %2891, %2847
  %2893 = fsub float %2891, %2892
  %2894 = fsub float %2847, %2893
  %2895 = fsub float %2888, %2892
  %2896 = fadd float %2895, %2894
  %2897 = fadd float %2849, %2890
  %2898 = fsub float %2897, %2849
  %2899 = fsub float %2897, %2898
  %2900 = fsub float %2849, %2899
  %2901 = fsub float %2890, %2898
  %2902 = fadd float %2901, %2900
  %2903 = fadd float %2897, %2896
  %2904 = fadd float %2891, %2903
  %2905 = fsub float %2904, %2891
  %2906 = fsub float %2903, %2905
  %2907 = fadd float %2902, %2906
  %2908 = fadd float %2904, %2907
  %2909 = fsub float %2908, %2904
  %2910 = fsub float %2907, %2909
  %2911 = fmul float %2908, 2.000000e+00
  %2912 = fneg float %2911
  %2913 = tail call float @llvm.fma.f32(float %2908, float 2.000000e+00, float %2912)
  %2914 = fmul float %2908, 0.000000e+00
  %2915 = tail call float @llvm.fma.f32(float %2910, float 2.000000e+00, float %2914)
  %2916 = fadd float %2913, %2915
  %2917 = fadd float %2911, %2916
  %2918 = fsub float %2917, %2911
  %2919 = fsub float %2916, %2918
  %2920 = tail call float @llvm.fabs.f32(float %2911) #3
  %2921 = fcmp oeq float %2920, 0x7FF0000000000000
  %2922 = select i1 %2921, float %2911, float %2917
  %2923 = tail call float @llvm.fabs.f32(float %2922) #3
  %2924 = fcmp oeq float %2923, 0x7FF0000000000000
  %2925 = select i1 %2924, float 0.000000e+00, float %2919
  %2926 = fcmp oeq float %2922, 0x40562E4300000000
  %2927 = select i1 %2926, float 0x3EE0000000000000, float 0.000000e+00
  %2928 = fsub float %2922, %2927
  %2929 = fadd float %2927, %2925
  %2930 = fmul float %2928, 0x3FF7154760000000
  %2931 = tail call float @llvm.rint.f32(float %2930)
  %2932 = fcmp ogt float %2928, 0x40562E4300000000
  %2933 = fcmp olt float %2928, 0xC059D1DA00000000
  %2934 = fneg float %2930
  %2935 = tail call float @llvm.fma.f32(float %2928, float 0x3FF7154760000000, float %2934)
  %2936 = tail call float @llvm.fma.f32(float %2928, float 0x3E54AE0BE0000000, float %2935)
  %2937 = fsub float %2930, %2931
  %2938 = fadd float %2936, %2937
  %2939 = tail call float @llvm.exp2.f32(float %2938)
  %2940 = fptosi float %2931 to i32
  %2941 = tail call float @llvm.amdgcn.ldexp.f32(float %2939, i32 %2940)
  %2942 = select i1 %2933, float 0.000000e+00, float %2941
  %2943 = select i1 %2932, float 0x7FF0000000000000, float %2942
  %2944 = tail call float @llvm.fma.f32(float %2943, float %2929, float %2943)
  %2945 = tail call float @llvm.fabs.f32(float %2943) #3
  %2946 = fcmp oeq float %2945, 0x7FF0000000000000
  %2947 = select i1 %2946, float %2943, float %2944
  %2948 = tail call float @llvm.fabs.f32(float %2947)
  %2949 = fcmp oeq float %2803, 0x7FF0000000000000
  %2950 = fcmp oeq float %2802, 0.000000e+00
  %2951 = select i1 %2949, float 0x7FF0000000000000, float %2948
  %2952 = select i1 %2950, float 0.000000e+00, float %2951
  %2953 = fcmp uno float %2802, 0.000000e+00
  %2954 = select i1 %2953, float 0x7FF8000000000000, float %2952
  %2955 = fadd contract float %2659, -1.000000e+00
  %2956 = tail call float @llvm.fabs.f32(float %2955)
  %2957 = tail call float @llvm.amdgcn.frexp.mant.f32(float %2956)
  %2958 = fcmp olt float %2957, 0x3FE5555560000000
  %2959 = zext i1 %2958 to i32
  %2960 = tail call float @llvm.amdgcn.ldexp.f32(float %2957, i32 %2959)
  %2961 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %2956)
  %2962 = sub nsw i32 %2961, %2959
  %2963 = fadd float %2960, -1.000000e+00
  %2964 = fadd float %2960, 1.000000e+00
  %2965 = fadd float %2964, -1.000000e+00
  %2966 = fsub float %2960, %2965
  %2967 = tail call float @llvm.amdgcn.rcp.f32(float %2964)
  %2968 = fmul float %2963, %2967
  %2969 = fmul float %2964, %2968
  %2970 = fneg float %2969
  %2971 = tail call float @llvm.fma.f32(float %2968, float %2964, float %2970)
  %2972 = tail call float @llvm.fma.f32(float %2968, float %2966, float %2971)
  %2973 = fadd float %2969, %2972
  %2974 = fsub float %2973, %2969
  %2975 = fsub float %2972, %2974
  %2976 = fsub float %2963, %2973
  %2977 = fsub float %2963, %2976
  %2978 = fsub float %2977, %2973
  %2979 = fsub float %2978, %2975
  %2980 = fadd float %2976, %2979
  %2981 = fmul float %2967, %2980
  %2982 = fadd float %2968, %2981
  %2983 = fsub float %2982, %2968
  %2984 = fsub float %2981, %2983
  %2985 = fmul float %2982, %2982
  %2986 = fneg float %2985
  %2987 = tail call float @llvm.fma.f32(float %2982, float %2982, float %2986)
  %2988 = fmul float %2984, 2.000000e+00
  %2989 = tail call float @llvm.fma.f32(float %2982, float %2988, float %2987)
  %2990 = fadd float %2985, %2989
  %2991 = fsub float %2990, %2985
  %2992 = fsub float %2989, %2991
  %2993 = tail call float @llvm.fmuladd.f32(float %2990, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %2994 = tail call float @llvm.fmuladd.f32(float %2990, float %2993, float 0x3FD999BDE0000000)
  %2995 = sitofp i32 %2962 to float
  %2996 = fmul float %2995, 0x3FE62E4300000000
  %2997 = fneg float %2996
  %2998 = tail call float @llvm.fma.f32(float %2995, float 0x3FE62E4300000000, float %2997)
  %2999 = tail call float @llvm.fma.f32(float %2995, float 0xBE205C6100000000, float %2998)
  %3000 = fadd float %2996, %2999
  %3001 = fsub float %3000, %2996
  %3002 = fsub float %2999, %3001
  %3003 = tail call float @llvm.amdgcn.ldexp.f32(float %2982, i32 1)
  %3004 = fmul float %2982, %2990
  %3005 = fneg float %3004
  %3006 = tail call float @llvm.fma.f32(float %2990, float %2982, float %3005)
  %3007 = tail call float @llvm.fma.f32(float %2990, float %2984, float %3006)
  %3008 = tail call float @llvm.fma.f32(float %2992, float %2982, float %3007)
  %3009 = fadd float %3004, %3008
  %3010 = fsub float %3009, %3004
  %3011 = fsub float %3008, %3010
  %3012 = fmul float %2990, %2994
  %3013 = fneg float %3012
  %3014 = tail call float @llvm.fma.f32(float %2990, float %2994, float %3013)
  %3015 = tail call float @llvm.fma.f32(float %2992, float %2994, float %3014)
  %3016 = fadd float %3012, %3015
  %3017 = fsub float %3016, %3012
  %3018 = fsub float %3015, %3017
  %3019 = fadd float %3016, 0x3FE5555540000000
  %3020 = fadd float %3019, 0xBFE5555540000000
  %3021 = fsub float %3016, %3020
  %3022 = fadd float %3018, 0x3E2E720200000000
  %3023 = fadd float %3022, %3021
  %3024 = fadd float %3019, %3023
  %3025 = fsub float %3024, %3019
  %3026 = fsub float %3023, %3025
  %3027 = fmul float %3009, %3024
  %3028 = fneg float %3027
  %3029 = tail call float @llvm.fma.f32(float %3009, float %3024, float %3028)
  %3030 = tail call float @llvm.fma.f32(float %3009, float %3026, float %3029)
  %3031 = tail call float @llvm.fma.f32(float %3011, float %3024, float %3030)
  %3032 = tail call float @llvm.amdgcn.ldexp.f32(float %2984, i32 1)
  %3033 = fadd float %3027, %3031
  %3034 = fsub float %3033, %3027
  %3035 = fsub float %3031, %3034
  %3036 = fadd float %3003, %3033
  %3037 = fsub float %3036, %3003
  %3038 = fsub float %3033, %3037
  %3039 = fadd float %3032, %3035
  %3040 = fadd float %3039, %3038
  %3041 = fadd float %3036, %3040
  %3042 = fsub float %3041, %3036
  %3043 = fsub float %3040, %3042
  %3044 = fadd float %3000, %3041
  %3045 = fsub float %3044, %3000
  %3046 = fsub float %3044, %3045
  %3047 = fsub float %3000, %3046
  %3048 = fsub float %3041, %3045
  %3049 = fadd float %3048, %3047
  %3050 = fadd float %3002, %3043
  %3051 = fsub float %3050, %3002
  %3052 = fsub float %3050, %3051
  %3053 = fsub float %3002, %3052
  %3054 = fsub float %3043, %3051
  %3055 = fadd float %3054, %3053
  %3056 = fadd float %3050, %3049
  %3057 = fadd float %3044, %3056
  %3058 = fsub float %3057, %3044
  %3059 = fsub float %3056, %3058
  %3060 = fadd float %3055, %3059
  %3061 = fadd float %3057, %3060
  %3062 = fsub float %3061, %3057
  %3063 = fsub float %3060, %3062
  %3064 = fmul float %3061, 2.000000e+00
  %3065 = fneg float %3064
  %3066 = tail call float @llvm.fma.f32(float %3061, float 2.000000e+00, float %3065)
  %3067 = fmul float %3061, 0.000000e+00
  %3068 = tail call float @llvm.fma.f32(float %3063, float 2.000000e+00, float %3067)
  %3069 = fadd float %3066, %3068
  %3070 = fadd float %3064, %3069
  %3071 = fsub float %3070, %3064
  %3072 = fsub float %3069, %3071
  %3073 = tail call float @llvm.fabs.f32(float %3064) #3
  %3074 = fcmp oeq float %3073, 0x7FF0000000000000
  %3075 = select i1 %3074, float %3064, float %3070
  %3076 = tail call float @llvm.fabs.f32(float %3075) #3
  %3077 = fcmp oeq float %3076, 0x7FF0000000000000
  %3078 = select i1 %3077, float 0.000000e+00, float %3072
  %3079 = fcmp oeq float %3075, 0x40562E4300000000
  %3080 = select i1 %3079, float 0x3EE0000000000000, float 0.000000e+00
  %3081 = fsub float %3075, %3080
  %3082 = fadd float %3080, %3078
  %3083 = fmul float %3081, 0x3FF7154760000000
  %3084 = tail call float @llvm.rint.f32(float %3083)
  %3085 = fcmp ogt float %3081, 0x40562E4300000000
  %3086 = fcmp olt float %3081, 0xC059D1DA00000000
  %3087 = fneg float %3083
  %3088 = tail call float @llvm.fma.f32(float %3081, float 0x3FF7154760000000, float %3087)
  %3089 = tail call float @llvm.fma.f32(float %3081, float 0x3E54AE0BE0000000, float %3088)
  %3090 = fsub float %3083, %3084
  %3091 = fadd float %3089, %3090
  %3092 = tail call float @llvm.exp2.f32(float %3091)
  %3093 = fptosi float %3084 to i32
  %3094 = tail call float @llvm.amdgcn.ldexp.f32(float %3092, i32 %3093)
  %3095 = select i1 %3086, float 0.000000e+00, float %3094
  %3096 = select i1 %3085, float 0x7FF0000000000000, float %3095
  %3097 = tail call float @llvm.fma.f32(float %3096, float %3082, float %3096)
  %3098 = tail call float @llvm.fabs.f32(float %3096) #3
  %3099 = fcmp oeq float %3098, 0x7FF0000000000000
  %3100 = select i1 %3099, float %3096, float %3097
  %3101 = tail call float @llvm.fabs.f32(float %3100)
  %3102 = fcmp oeq float %2956, 0x7FF0000000000000
  %3103 = fcmp oeq float %2955, 0.000000e+00
  %3104 = select i1 %3102, float 0x7FF0000000000000, float %3101
  %3105 = select i1 %3103, float 0.000000e+00, float %3104
  %3106 = fcmp uno float %2955, 0.000000e+00
  %3107 = select i1 %3106, float 0x7FF8000000000000, float %3105
  %3108 = fadd contract float %3107, %2954
  %3109 = fadd contract float %3108, 0.000000e+00
  br label %3110

3110:                                             ; preds = %3397, %2777
  %3111 = phi i1 [ true, %2777 ], [ false, %3397 ]
  %3112 = phi i32 [ 0, %2777 ], [ 1, %3397 ]
  %3113 = phi float [ %3109, %2777 ], [ %3578, %3397 ]
  %3114 = zext i32 %3112 to i64
  %3115 = getelementptr inbounds float, float addrspace(1)* %2, i64 %3114
  %3116 = load float, float addrspace(1)* %3115, align 4, !tbaa !7
  %3117 = fadd contract float %3116, -1.000000e+00
  %3118 = fmul contract float %3117, 2.500000e-01
  %3119 = fadd contract float %3118, 1.000000e+00
  %3120 = add nuw nsw i32 %3112, 1
  %3121 = zext i32 %3120 to i64
  %3122 = getelementptr inbounds float, float addrspace(1)* %2, i64 %3121
  %3123 = load float, float addrspace(1)* %3122, align 4, !tbaa !7
  %3124 = fadd contract float %3123, -1.000000e+00
  %3125 = fmul contract float %3124, 2.500000e-01
  %3126 = fadd contract float %3125, 1.000000e+00
  %3127 = fadd contract float %3119, -1.000000e+00
  %3128 = tail call float @llvm.fabs.f32(float %3127)
  %3129 = tail call float @llvm.amdgcn.frexp.mant.f32(float %3128)
  %3130 = fcmp olt float %3129, 0x3FE5555560000000
  %3131 = zext i1 %3130 to i32
  %3132 = tail call float @llvm.amdgcn.ldexp.f32(float %3129, i32 %3131)
  %3133 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %3128)
  %3134 = sub nsw i32 %3133, %3131
  %3135 = fadd float %3132, -1.000000e+00
  %3136 = fadd float %3132, 1.000000e+00
  %3137 = fadd float %3136, -1.000000e+00
  %3138 = fsub float %3132, %3137
  %3139 = tail call float @llvm.amdgcn.rcp.f32(float %3136)
  %3140 = fmul float %3135, %3139
  %3141 = fmul float %3136, %3140
  %3142 = fneg float %3141
  %3143 = tail call float @llvm.fma.f32(float %3140, float %3136, float %3142)
  %3144 = tail call float @llvm.fma.f32(float %3140, float %3138, float %3143)
  %3145 = fadd float %3141, %3144
  %3146 = fsub float %3145, %3141
  %3147 = fsub float %3144, %3146
  %3148 = fsub float %3135, %3145
  %3149 = fsub float %3135, %3148
  %3150 = fsub float %3149, %3145
  %3151 = fsub float %3150, %3147
  %3152 = fadd float %3148, %3151
  %3153 = fmul float %3139, %3152
  %3154 = fadd float %3140, %3153
  %3155 = fsub float %3154, %3140
  %3156 = fsub float %3153, %3155
  %3157 = fmul float %3154, %3154
  %3158 = fneg float %3157
  %3159 = tail call float @llvm.fma.f32(float %3154, float %3154, float %3158)
  %3160 = fmul float %3156, 2.000000e+00
  %3161 = tail call float @llvm.fma.f32(float %3154, float %3160, float %3159)
  %3162 = fadd float %3157, %3161
  %3163 = fsub float %3162, %3157
  %3164 = fsub float %3161, %3163
  %3165 = tail call float @llvm.fmuladd.f32(float %3162, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %3166 = tail call float @llvm.fmuladd.f32(float %3162, float %3165, float 0x3FD999BDE0000000)
  %3167 = sitofp i32 %3134 to float
  %3168 = fmul float %3167, 0x3FE62E4300000000
  %3169 = fneg float %3168
  %3170 = tail call float @llvm.fma.f32(float %3167, float 0x3FE62E4300000000, float %3169)
  %3171 = tail call float @llvm.fma.f32(float %3167, float 0xBE205C6100000000, float %3170)
  %3172 = fadd float %3168, %3171
  %3173 = fsub float %3172, %3168
  %3174 = fsub float %3171, %3173
  %3175 = tail call float @llvm.amdgcn.ldexp.f32(float %3154, i32 1)
  %3176 = fmul float %3154, %3162
  %3177 = fneg float %3176
  %3178 = tail call float @llvm.fma.f32(float %3162, float %3154, float %3177)
  %3179 = tail call float @llvm.fma.f32(float %3162, float %3156, float %3178)
  %3180 = tail call float @llvm.fma.f32(float %3164, float %3154, float %3179)
  %3181 = fadd float %3176, %3180
  %3182 = fsub float %3181, %3176
  %3183 = fsub float %3180, %3182
  %3184 = fmul float %3162, %3166
  %3185 = fneg float %3184
  %3186 = tail call float @llvm.fma.f32(float %3162, float %3166, float %3185)
  %3187 = tail call float @llvm.fma.f32(float %3164, float %3166, float %3186)
  %3188 = fadd float %3184, %3187
  %3189 = fsub float %3188, %3184
  %3190 = fsub float %3187, %3189
  %3191 = fadd float %3188, 0x3FE5555540000000
  %3192 = fadd float %3191, 0xBFE5555540000000
  %3193 = fsub float %3188, %3192
  %3194 = fadd float %3190, 0x3E2E720200000000
  %3195 = fadd float %3194, %3193
  %3196 = fadd float %3191, %3195
  %3197 = fsub float %3196, %3191
  %3198 = fsub float %3195, %3197
  %3199 = fmul float %3181, %3196
  %3200 = fneg float %3199
  %3201 = tail call float @llvm.fma.f32(float %3181, float %3196, float %3200)
  %3202 = tail call float @llvm.fma.f32(float %3181, float %3198, float %3201)
  %3203 = tail call float @llvm.fma.f32(float %3183, float %3196, float %3202)
  %3204 = tail call float @llvm.amdgcn.ldexp.f32(float %3156, i32 1)
  %3205 = fadd float %3199, %3203
  %3206 = fsub float %3205, %3199
  %3207 = fsub float %3203, %3206
  %3208 = fadd float %3175, %3205
  %3209 = fsub float %3208, %3175
  %3210 = fsub float %3205, %3209
  %3211 = fadd float %3204, %3207
  %3212 = fadd float %3211, %3210
  %3213 = fadd float %3208, %3212
  %3214 = fsub float %3213, %3208
  %3215 = fsub float %3212, %3214
  %3216 = fadd float %3172, %3213
  %3217 = fsub float %3216, %3172
  %3218 = fsub float %3216, %3217
  %3219 = fsub float %3172, %3218
  %3220 = fsub float %3213, %3217
  %3221 = fadd float %3220, %3219
  %3222 = fadd float %3174, %3215
  %3223 = fsub float %3222, %3174
  %3224 = fsub float %3222, %3223
  %3225 = fsub float %3174, %3224
  %3226 = fsub float %3215, %3223
  %3227 = fadd float %3226, %3225
  %3228 = fadd float %3222, %3221
  %3229 = fadd float %3216, %3228
  %3230 = fsub float %3229, %3216
  %3231 = fsub float %3228, %3230
  %3232 = fadd float %3227, %3231
  %3233 = fadd float %3229, %3232
  %3234 = fsub float %3233, %3229
  %3235 = fsub float %3232, %3234
  %3236 = fmul float %3233, 2.000000e+00
  %3237 = fneg float %3236
  %3238 = tail call float @llvm.fma.f32(float %3233, float 2.000000e+00, float %3237)
  %3239 = fmul float %3233, 0.000000e+00
  %3240 = tail call float @llvm.fma.f32(float %3235, float 2.000000e+00, float %3239)
  %3241 = fadd float %3238, %3240
  %3242 = fadd float %3236, %3241
  %3243 = fsub float %3242, %3236
  %3244 = fsub float %3241, %3243
  %3245 = tail call float @llvm.fabs.f32(float %3236) #3
  %3246 = fcmp oeq float %3245, 0x7FF0000000000000
  %3247 = select i1 %3246, float %3236, float %3242
  %3248 = tail call float @llvm.fabs.f32(float %3247) #3
  %3249 = fcmp oeq float %3248, 0x7FF0000000000000
  %3250 = select i1 %3249, float 0.000000e+00, float %3244
  %3251 = fcmp oeq float %3247, 0x40562E4300000000
  %3252 = select i1 %3251, float 0x3EE0000000000000, float 0.000000e+00
  %3253 = fsub float %3247, %3252
  %3254 = fadd float %3252, %3250
  %3255 = fmul float %3253, 0x3FF7154760000000
  %3256 = tail call float @llvm.rint.f32(float %3255)
  %3257 = fcmp ogt float %3253, 0x40562E4300000000
  %3258 = fcmp olt float %3253, 0xC059D1DA00000000
  %3259 = fneg float %3255
  %3260 = tail call float @llvm.fma.f32(float %3253, float 0x3FF7154760000000, float %3259)
  %3261 = tail call float @llvm.fma.f32(float %3253, float 0x3E54AE0BE0000000, float %3260)
  %3262 = fsub float %3255, %3256
  %3263 = fadd float %3261, %3262
  %3264 = tail call float @llvm.exp2.f32(float %3263)
  %3265 = fptosi float %3256 to i32
  %3266 = tail call float @llvm.amdgcn.ldexp.f32(float %3264, i32 %3265)
  %3267 = select i1 %3258, float 0.000000e+00, float %3266
  %3268 = select i1 %3257, float 0x7FF0000000000000, float %3267
  %3269 = tail call float @llvm.fma.f32(float %3268, float %3254, float %3268)
  %3270 = tail call float @llvm.fabs.f32(float %3268) #3
  %3271 = fcmp oeq float %3270, 0x7FF0000000000000
  %3272 = select i1 %3271, float %3268, float %3269
  %3273 = tail call float @llvm.fabs.f32(float %3272)
  %3274 = fcmp oeq float %3128, 0x7FF0000000000000
  %3275 = fcmp oeq float %3127, 0.000000e+00
  %3276 = select i1 %3274, float 0x7FF0000000000000, float %3273
  %3277 = select i1 %3275, float 0.000000e+00, float %3276
  %3278 = fcmp uno float %3127, 0.000000e+00
  %3279 = select i1 %3278, float 0x7FF8000000000000, float %3277
  %3280 = fmul contract float %3126, 0x400921CAC0000000
  %3281 = tail call float @llvm.fabs.f32(float %3280)
  %3282 = fcmp olt float %3281, 1.310720e+05
  br i1 %3282, label %3283, label %3291

3283:                                             ; preds = %3110
  %3284 = fmul float %3281, 0x3FE45F3060000000
  %3285 = tail call float @llvm.rint.f32(float %3284)
  %3286 = tail call float @llvm.fma.f32(float %3285, float 0xBFF921FB40000000, float %3281)
  %3287 = tail call float @llvm.fma.f32(float %3285, float 0xBE74442D00000000, float %3286)
  %3288 = tail call float @llvm.fma.f32(float %3285, float 0xBCF8469880000000, float %3287)
  %3289 = fptosi float %3285 to i32
  %3290 = bitcast float %3281 to i32
  br label %3397

3291:                                             ; preds = %3110
  %3292 = bitcast float %3281 to i32
  %3293 = lshr i32 %3292, 23
  %3294 = and i32 %3292, 8388607
  %3295 = or i32 %3294, 8388608
  %3296 = zext i32 %3295 to i64
  %3297 = mul nuw nsw i64 %3296, 4266746795
  %3298 = trunc i64 %3297 to i32
  %3299 = lshr i64 %3297, 32
  %3300 = mul nuw nsw i64 %3296, 1011060801
  %3301 = add nuw nsw i64 %3299, %3300
  %3302 = trunc i64 %3301 to i32
  %3303 = lshr i64 %3301, 32
  %3304 = mul nuw nsw i64 %3296, 3680671129
  %3305 = add nuw nsw i64 %3303, %3304
  %3306 = trunc i64 %3305 to i32
  %3307 = lshr i64 %3305, 32
  %3308 = mul nuw nsw i64 %3296, 4113882560
  %3309 = add nuw nsw i64 %3307, %3308
  %3310 = trunc i64 %3309 to i32
  %3311 = lshr i64 %3309, 32
  %3312 = mul nuw nsw i64 %3296, 4230436817
  %3313 = add nuw nsw i64 %3311, %3312
  %3314 = trunc i64 %3313 to i32
  %3315 = lshr i64 %3313, 32
  %3316 = mul nuw nsw i64 %3296, 1313084713
  %3317 = add nuw nsw i64 %3315, %3316
  %3318 = trunc i64 %3317 to i32
  %3319 = lshr i64 %3317, 32
  %3320 = mul nuw nsw i64 %3296, 2734261102
  %3321 = add nuw nsw i64 %3319, %3320
  %3322 = trunc i64 %3321 to i32
  %3323 = lshr i64 %3321, 32
  %3324 = trunc i64 %3323 to i32
  %3325 = add nsw i32 %3293, -120
  %3326 = icmp ugt i32 %3325, 63
  %3327 = select i1 %3326, i32 %3318, i32 %3324
  %3328 = select i1 %3326, i32 %3314, i32 %3322
  %3329 = select i1 %3326, i32 %3310, i32 %3318
  %3330 = select i1 %3326, i32 %3306, i32 %3314
  %3331 = select i1 %3326, i32 %3302, i32 %3310
  %3332 = select i1 %3326, i32 %3298, i32 %3306
  %3333 = select i1 %3326, i32 -64, i32 0
  %3334 = add nsw i32 %3333, %3325
  %3335 = icmp ugt i32 %3334, 31
  %3336 = select i1 %3335, i32 %3328, i32 %3327
  %3337 = select i1 %3335, i32 %3329, i32 %3328
  %3338 = select i1 %3335, i32 %3330, i32 %3329
  %3339 = select i1 %3335, i32 %3331, i32 %3330
  %3340 = select i1 %3335, i32 %3332, i32 %3331
  %3341 = select i1 %3335, i32 -32, i32 0
  %3342 = add nsw i32 %3341, %3334
  %3343 = icmp ugt i32 %3342, 31
  %3344 = select i1 %3343, i32 %3337, i32 %3336
  %3345 = select i1 %3343, i32 %3338, i32 %3337
  %3346 = select i1 %3343, i32 %3339, i32 %3338
  %3347 = select i1 %3343, i32 %3340, i32 %3339
  %3348 = select i1 %3343, i32 -32, i32 0
  %3349 = add nsw i32 %3348, %3342
  %3350 = icmp eq i32 %3349, 0
  %3351 = sub nsw i32 32, %3349
  %3352 = tail call i32 @llvm.fshr.i32(i32 %3344, i32 %3345, i32 %3351)
  %3353 = tail call i32 @llvm.fshr.i32(i32 %3345, i32 %3346, i32 %3351)
  %3354 = tail call i32 @llvm.fshr.i32(i32 %3346, i32 %3347, i32 %3351)
  %3355 = select i1 %3350, i32 %3344, i32 %3352
  %3356 = select i1 %3350, i32 %3345, i32 %3353
  %3357 = select i1 %3350, i32 %3346, i32 %3354
  %3358 = lshr i32 %3355, 29
  %3359 = tail call i32 @llvm.fshl.i32(i32 %3355, i32 %3356, i32 2)
  %3360 = tail call i32 @llvm.fshl.i32(i32 %3356, i32 %3357, i32 2)
  %3361 = tail call i32 @llvm.fshl.i32(i32 %3357, i32 %3347, i32 2)
  %3362 = and i32 %3358, 1
  %3363 = sub nsw i32 0, %3362
  %3364 = shl i32 %3358, 31
  %3365 = xor i32 %3359, %3363
  %3366 = xor i32 %3360, %3363
  %3367 = xor i32 %3361, %3363
  %3368 = tail call i32 @llvm.ctlz.i32(i32 %3365, i1 false), !range !11
  %3369 = sub nsw i32 31, %3368
  %3370 = tail call i32 @llvm.fshr.i32(i32 %3365, i32 %3366, i32 %3369)
  %3371 = tail call i32 @llvm.fshr.i32(i32 %3366, i32 %3367, i32 %3369)
  %3372 = shl nuw nsw i32 %3368, 23
  %3373 = sub nuw nsw i32 1056964608, %3372
  %3374 = lshr i32 %3370, 9
  %3375 = or i32 %3374, %3373
  %3376 = or i32 %3375, %3364
  %3377 = bitcast i32 %3376 to float
  %3378 = tail call i32 @llvm.fshl.i32(i32 %3370, i32 %3371, i32 23)
  %3379 = tail call i32 @llvm.ctlz.i32(i32 %3378, i1 false), !range !11
  %3380 = fmul float %3377, 0x3FF921FB40000000
  %3381 = add nuw nsw i32 %3379, %3368
  %3382 = shl nuw nsw i32 %3381, 23
  %3383 = sub nuw nsw i32 855638016, %3382
  %3384 = sub nsw i32 31, %3379
  %3385 = tail call i32 @llvm.fshr.i32(i32 %3378, i32 %3371, i32 %3384)
  %3386 = lshr i32 %3385, 9
  %3387 = or i32 %3383, %3386
  %3388 = or i32 %3387, %3364
  %3389 = bitcast i32 %3388 to float
  %3390 = fneg float %3380
  %3391 = tail call float @llvm.fma.f32(float %3377, float 0x3FF921FB40000000, float %3390)
  %3392 = tail call float @llvm.fma.f32(float %3377, float 0x3E74442D00000000, float %3391)
  %3393 = tail call float @llvm.fma.f32(float %3389, float 0x3FF921FB40000000, float %3392)
  %3394 = fadd float %3380, %3393
  %3395 = lshr i32 %3355, 30
  %3396 = add nuw nsw i32 %3362, %3395
  br label %3397

3397:                                             ; preds = %3291, %3283
  %3398 = phi i32 [ %3290, %3283 ], [ %3292, %3291 ]
  %3399 = phi float [ %3288, %3283 ], [ %3394, %3291 ]
  %3400 = phi i32 [ %3289, %3283 ], [ %3396, %3291 ]
  %3401 = fmul float %3399, %3399
  %3402 = tail call float @llvm.fmuladd.f32(float %3401, float 0xBF29833040000000, float 0x3F81103880000000)
  %3403 = tail call float @llvm.fmuladd.f32(float %3401, float %3402, float 0xBFC55553A0000000)
  %3404 = fmul float %3401, %3403
  %3405 = tail call float @llvm.fmuladd.f32(float %3399, float %3404, float %3399)
  %3406 = tail call float @llvm.fmuladd.f32(float %3401, float 0x3EFAEA6680000000, float 0xBF56C9E760000000)
  %3407 = tail call float @llvm.fmuladd.f32(float %3401, float %3406, float 0x3FA5557EE0000000)
  %3408 = tail call float @llvm.fmuladd.f32(float %3401, float %3407, float 0xBFE0000080000000)
  %3409 = tail call float @llvm.fmuladd.f32(float %3401, float %3408, float 1.000000e+00)
  %3410 = and i32 %3400, 1
  %3411 = icmp eq i32 %3410, 0
  %3412 = select i1 %3411, float %3405, float %3409
  %3413 = bitcast float %3412 to i32
  %3414 = shl i32 %3400, 30
  %3415 = and i32 %3414, -2147483648
  %3416 = bitcast float %3280 to i32
  %3417 = xor i32 %3398, %3416
  %3418 = xor i32 %3417, %3415
  %3419 = xor i32 %3418, %3413
  %3420 = bitcast i32 %3419 to float
  %3421 = tail call i1 @llvm.amdgcn.class.f32(float %3281, i32 504)
  %3422 = select i1 %3421, float %3420, float 0x7FF8000000000000
  %3423 = tail call float @llvm.fabs.f32(float %3422)
  %3424 = tail call float @llvm.amdgcn.frexp.mant.f32(float %3423)
  %3425 = fcmp olt float %3424, 0x3FE5555560000000
  %3426 = zext i1 %3425 to i32
  %3427 = tail call float @llvm.amdgcn.ldexp.f32(float %3424, i32 %3426)
  %3428 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %3423)
  %3429 = sub nsw i32 %3428, %3426
  %3430 = fadd float %3427, -1.000000e+00
  %3431 = fadd float %3427, 1.000000e+00
  %3432 = fadd float %3431, -1.000000e+00
  %3433 = fsub float %3427, %3432
  %3434 = tail call float @llvm.amdgcn.rcp.f32(float %3431)
  %3435 = fmul float %3430, %3434
  %3436 = fmul float %3431, %3435
  %3437 = fneg float %3436
  %3438 = tail call float @llvm.fma.f32(float %3435, float %3431, float %3437)
  %3439 = tail call float @llvm.fma.f32(float %3435, float %3433, float %3438)
  %3440 = fadd float %3436, %3439
  %3441 = fsub float %3440, %3436
  %3442 = fsub float %3439, %3441
  %3443 = fsub float %3430, %3440
  %3444 = fsub float %3430, %3443
  %3445 = fsub float %3444, %3440
  %3446 = fsub float %3445, %3442
  %3447 = fadd float %3443, %3446
  %3448 = fmul float %3434, %3447
  %3449 = fadd float %3435, %3448
  %3450 = fsub float %3449, %3435
  %3451 = fsub float %3448, %3450
  %3452 = fmul float %3449, %3449
  %3453 = fneg float %3452
  %3454 = tail call float @llvm.fma.f32(float %3449, float %3449, float %3453)
  %3455 = fmul float %3451, 2.000000e+00
  %3456 = tail call float @llvm.fma.f32(float %3449, float %3455, float %3454)
  %3457 = fadd float %3452, %3456
  %3458 = fsub float %3457, %3452
  %3459 = fsub float %3456, %3458
  %3460 = tail call float @llvm.fmuladd.f32(float %3457, float 0x3FCED89C20000000, float 0x3FD23E9880000000)
  %3461 = tail call float @llvm.fmuladd.f32(float %3457, float %3460, float 0x3FD999BDE0000000)
  %3462 = sitofp i32 %3429 to float
  %3463 = fmul float %3462, 0x3FE62E4300000000
  %3464 = fneg float %3463
  %3465 = tail call float @llvm.fma.f32(float %3462, float 0x3FE62E4300000000, float %3464)
  %3466 = tail call float @llvm.fma.f32(float %3462, float 0xBE205C6100000000, float %3465)
  %3467 = fadd float %3463, %3466
  %3468 = fsub float %3467, %3463
  %3469 = fsub float %3466, %3468
  %3470 = tail call float @llvm.amdgcn.ldexp.f32(float %3449, i32 1)
  %3471 = fmul float %3449, %3457
  %3472 = fneg float %3471
  %3473 = tail call float @llvm.fma.f32(float %3457, float %3449, float %3472)
  %3474 = tail call float @llvm.fma.f32(float %3457, float %3451, float %3473)
  %3475 = tail call float @llvm.fma.f32(float %3459, float %3449, float %3474)
  %3476 = fadd float %3471, %3475
  %3477 = fsub float %3476, %3471
  %3478 = fsub float %3475, %3477
  %3479 = fmul float %3457, %3461
  %3480 = fneg float %3479
  %3481 = tail call float @llvm.fma.f32(float %3457, float %3461, float %3480)
  %3482 = tail call float @llvm.fma.f32(float %3459, float %3461, float %3481)
  %3483 = fadd float %3479, %3482
  %3484 = fsub float %3483, %3479
  %3485 = fsub float %3482, %3484
  %3486 = fadd float %3483, 0x3FE5555540000000
  %3487 = fadd float %3486, 0xBFE5555540000000
  %3488 = fsub float %3483, %3487
  %3489 = fadd float %3485, 0x3E2E720200000000
  %3490 = fadd float %3489, %3488
  %3491 = fadd float %3486, %3490
  %3492 = fsub float %3491, %3486
  %3493 = fsub float %3490, %3492
  %3494 = fmul float %3476, %3491
  %3495 = fneg float %3494
  %3496 = tail call float @llvm.fma.f32(float %3476, float %3491, float %3495)
  %3497 = tail call float @llvm.fma.f32(float %3476, float %3493, float %3496)
  %3498 = tail call float @llvm.fma.f32(float %3478, float %3491, float %3497)
  %3499 = tail call float @llvm.amdgcn.ldexp.f32(float %3451, i32 1)
  %3500 = fadd float %3494, %3498
  %3501 = fsub float %3500, %3494
  %3502 = fsub float %3498, %3501
  %3503 = fadd float %3470, %3500
  %3504 = fsub float %3503, %3470
  %3505 = fsub float %3500, %3504
  %3506 = fadd float %3499, %3502
  %3507 = fadd float %3506, %3505
  %3508 = fadd float %3503, %3507
  %3509 = fsub float %3508, %3503
  %3510 = fsub float %3507, %3509
  %3511 = fadd float %3467, %3508
  %3512 = fsub float %3511, %3467
  %3513 = fsub float %3511, %3512
  %3514 = fsub float %3467, %3513
  %3515 = fsub float %3508, %3512
  %3516 = fadd float %3515, %3514
  %3517 = fadd float %3469, %3510
  %3518 = fsub float %3517, %3469
  %3519 = fsub float %3517, %3518
  %3520 = fsub float %3469, %3519
  %3521 = fsub float %3510, %3518
  %3522 = fadd float %3521, %3520
  %3523 = fadd float %3517, %3516
  %3524 = fadd float %3511, %3523
  %3525 = fsub float %3524, %3511
  %3526 = fsub float %3523, %3525
  %3527 = fadd float %3522, %3526
  %3528 = fadd float %3524, %3527
  %3529 = fsub float %3528, %3524
  %3530 = fsub float %3527, %3529
  %3531 = fmul float %3528, 2.000000e+00
  %3532 = fneg float %3531
  %3533 = tail call float @llvm.fma.f32(float %3528, float 2.000000e+00, float %3532)
  %3534 = fmul float %3528, 0.000000e+00
  %3535 = tail call float @llvm.fma.f32(float %3530, float 2.000000e+00, float %3534)
  %3536 = fadd float %3533, %3535
  %3537 = fadd float %3531, %3536
  %3538 = fsub float %3537, %3531
  %3539 = fsub float %3536, %3538
  %3540 = tail call float @llvm.fabs.f32(float %3531) #3
  %3541 = fcmp oeq float %3540, 0x7FF0000000000000
  %3542 = select i1 %3541, float %3531, float %3537
  %3543 = tail call float @llvm.fabs.f32(float %3542) #3
  %3544 = fcmp oeq float %3543, 0x7FF0000000000000
  %3545 = select i1 %3544, float 0.000000e+00, float %3539
  %3546 = fcmp oeq float %3542, 0x40562E4300000000
  %3547 = select i1 %3546, float 0x3EE0000000000000, float 0.000000e+00
  %3548 = fsub float %3542, %3547
  %3549 = fadd float %3547, %3545
  %3550 = fmul float %3548, 0x3FF7154760000000
  %3551 = tail call float @llvm.rint.f32(float %3550)
  %3552 = fcmp ogt float %3548, 0x40562E4300000000
  %3553 = fcmp olt float %3548, 0xC059D1DA00000000
  %3554 = fneg float %3550
  %3555 = tail call float @llvm.fma.f32(float %3548, float 0x3FF7154760000000, float %3554)
  %3556 = tail call float @llvm.fma.f32(float %3548, float 0x3E54AE0BE0000000, float %3555)
  %3557 = fsub float %3550, %3551
  %3558 = fadd float %3556, %3557
  %3559 = tail call float @llvm.exp2.f32(float %3558)
  %3560 = fptosi float %3551 to i32
  %3561 = tail call float @llvm.amdgcn.ldexp.f32(float %3559, i32 %3560)
  %3562 = select i1 %3553, float 0.000000e+00, float %3561
  %3563 = select i1 %3552, float 0x7FF0000000000000, float %3562
  %3564 = tail call float @llvm.fma.f32(float %3563, float %3549, float %3563)
  %3565 = tail call float @llvm.fabs.f32(float %3563) #3
  %3566 = fcmp oeq float %3565, 0x7FF0000000000000
  %3567 = select i1 %3566, float %3563, float %3564
  %3568 = tail call float @llvm.fabs.f32(float %3567)
  %3569 = fcmp oeq float %3423, 0x7FF0000000000000
  %3570 = fcmp oeq float %3422, 0.000000e+00
  %3571 = fcmp uno float %3422, 0.000000e+00
  %3572 = fmul contract float %3568, 1.000000e+01
  %3573 = fadd contract float %3572, 1.000000e+00
  %3574 = select i1 %3569, float 0x7FF0000000000000, float %3573
  %3575 = select i1 %3570, float 1.000000e+00, float %3574
  %3576 = select i1 %3571, float 0x7FF8000000000000, float %3575
  %3577 = fmul contract float %3279, %3576
  %3578 = fadd contract float %3113, %3577
  br i1 %3111, label %3110, label %3579, !llvm.loop !12

3579:                                             ; preds = %3397
  %3580 = fcmp contract olt float %2649, %3578
  br i1 %3580, label %3581, label %3592

3581:                                             ; preds = %3579
  %3582 = bitcast float addrspace(1)* %2 to i32 addrspace(1)*
  %3583 = bitcast float %20 to i32
  %3584 = atomicrmw xchg i32 addrspace(1)* %3582, i32 %3583 syncscope("agent-one-as") monotonic, align 4
  %3585 = getelementptr inbounds float, float addrspace(1)* %2, i64 1
  %3586 = bitcast float addrspace(1)* %3585 to i32 addrspace(1)*
  %3587 = bitcast float %28 to i32
  %3588 = atomicrmw xchg i32 addrspace(1)* %3586, i32 %3587 syncscope("agent-one-as") monotonic, align 4
  %3589 = bitcast float addrspace(1)* %2655 to i32 addrspace(1)*
  %3590 = bitcast float %36 to i32
  %3591 = atomicrmw xchg i32 addrspace(1)* %3589, i32 %3590 syncscope("agent-one-as") monotonic, align 4
  br label %3592

3592:                                             ; preds = %3581, %1888, %3579, %3
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.exp2.f32(float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fma.f32(float, float, float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fmuladd.f32(float, float, float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.rint.f32(float) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.amdgcn.ldexp.f32(float, i32) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.amdgcn.frexp.mant.f32(float) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.frexp.exp.i32.f32(float) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.amdgcn.rcp.f32(float) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i1 @llvm.amdgcn.class.f32(float, i32) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshr.i32(i32, i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #2

attributes #0 = { mustprogress nofree norecurse nounwind "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{i16 1, i16 1025}
!5 = !{}
!6 = !{i32 0, i32 1024}
!7 = !{!8, !8, i64 0}
!8 = !{!"float", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C++ TBAA"}
!11 = !{i32 0, i32 33}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.mustprogress"}
