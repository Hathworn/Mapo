digraph "CFG for '_ZL15rgbToV210KernelPtS_ii' function" {
	label="CFG for '_ZL15rgbToV210KernelPtS_ii' function";

	Node0x4dfc780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = sdiv i32 %2, 18\l  %23 = icmp slt i32 %13, %22\l  %24 = icmp slt i32 %21, %3\l  %25 = select i1 %23, i1 %24, i1 false\l  br i1 %25, label %26, label %252\l|{<s0>T|<s1>F}}"];
	Node0x4dfc780:s0 -> Node0x4e00280;
	Node0x4dfc780:s1 -> Node0x4e00310;
	Node0x4e00280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%26:\l26:                                               \l  %27 = mul nsw i32 %13, 18\l  %28 = mul nsw i32 %21, %2\l  %29 = add nsw i32 %28, %27\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %30\l  %32 = load i16, i16 addrspace(1)* %31, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %33 = zext i16 %32 to i32\l  %34 = add nsw i32 %29, 1\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %35\l  %37 = load i16, i16 addrspace(1)* %36, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %38 = zext i16 %37 to i32\l  %39 = add nsw i32 %29, 2\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %40\l  %42 = load i16, i16 addrspace(1)* %41, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %43 = zext i16 %42 to i32\l  %44 = mul nuw nsw i32 %33, 299\l  %45 = mul nuw nsw i32 %38, 587\l  %46 = add nuw nsw i32 %45, %44\l  %47 = mul nuw nsw i32 %43, 114\l  %48 = add nuw nsw i32 %46, %47\l  %49 = udiv i32 %48, 1000\l  %50 = mul nsw i32 %33, -169\l  %51 = add nsw i32 %50, 512000\l  %52 = mul nsw i32 %38, -332\l  %53 = add nsw i32 %51, %52\l  %54 = mul nuw nsw i32 %43, 500\l  %55 = add nsw i32 %53, %54\l  %56 = udiv i32 %55, 1000\l  %57 = mul nuw nsw i32 %33, 500\l  %58 = add nuw nsw i32 %57, 512000\l  %59 = mul nsw i32 %38, -419\l  %60 = add nsw i32 %58, %59\l  %61 = mul nsw i32 %43, -81\l  %62 = add nsw i32 %60, %61\l  %63 = udiv i32 %62, 1000\l  %64 = add nsw i32 %29, 3\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %65\l  %67 = load i16, i16 addrspace(1)* %66, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %68 = zext i16 %67 to i32\l  %69 = add nsw i32 %29, 4\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %70\l  %72 = load i16, i16 addrspace(1)* %71, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %73 = zext i16 %72 to i32\l  %74 = add nsw i32 %29, 5\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %75\l  %77 = load i16, i16 addrspace(1)* %76, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %78 = zext i16 %77 to i32\l  %79 = mul nuw nsw i32 %68, 299\l  %80 = mul nuw nsw i32 %73, 587\l  %81 = add nuw nsw i32 %80, %79\l  %82 = mul nuw nsw i32 %78, 114\l  %83 = add nuw nsw i32 %81, %82\l  %84 = udiv i32 %83, 1000\l  %85 = mul nsw i32 %68, -169\l  %86 = add nsw i32 %85, 512000\l  %87 = mul nsw i32 %73, -332\l  %88 = add nsw i32 %86, %87\l  %89 = mul nuw nsw i32 %78, 500\l  %90 = add nsw i32 %88, %89\l  %91 = udiv i32 %90, 1000\l  %92 = mul nuw nsw i32 %68, 500\l  %93 = add nuw nsw i32 %92, 512000\l  %94 = mul nsw i32 %73, -419\l  %95 = add nsw i32 %93, %94\l  %96 = mul nsw i32 %78, -81\l  %97 = add nsw i32 %95, %96\l  %98 = udiv i32 %97, 1000\l  %99 = add nsw i32 %29, 6\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %100\l  %102 = load i16, i16 addrspace(1)* %101, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %103 = zext i16 %102 to i32\l  %104 = add nsw i32 %29, 7\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %105\l  %107 = load i16, i16 addrspace(1)* %106, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %108 = zext i16 %107 to i32\l  %109 = add nsw i32 %29, 8\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %110\l  %112 = load i16, i16 addrspace(1)* %111, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %113 = zext i16 %112 to i32\l  %114 = mul nuw nsw i32 %103, 299\l  %115 = mul nuw nsw i32 %108, 587\l  %116 = add nuw nsw i32 %115, %114\l  %117 = mul nuw nsw i32 %113, 114\l  %118 = add nuw nsw i32 %116, %117\l  %119 = udiv i32 %118, 1000\l  %120 = mul nsw i32 %103, -169\l  %121 = add nsw i32 %120, 512000\l  %122 = mul nsw i32 %108, -332\l  %123 = add nsw i32 %121, %122\l  %124 = mul nuw nsw i32 %113, 500\l  %125 = add nsw i32 %123, %124\l  %126 = udiv i32 %125, 1000\l  %127 = mul nuw nsw i32 %103, 500\l  %128 = add nuw nsw i32 %127, 512000\l  %129 = mul nsw i32 %108, -419\l  %130 = add nsw i32 %128, %129\l  %131 = mul nsw i32 %113, -81\l  %132 = add nsw i32 %130, %131\l  %133 = udiv i32 %132, 1000\l  %134 = add nsw i32 %29, 9\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %135\l  %137 = load i16, i16 addrspace(1)* %136, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %138 = zext i16 %137 to i32\l  %139 = add nsw i32 %29, 10\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %140\l  %142 = load i16, i16 addrspace(1)* %141, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %143 = zext i16 %142 to i32\l  %144 = add nsw i32 %29, 11\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %145\l  %147 = load i16, i16 addrspace(1)* %146, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %148 = zext i16 %147 to i32\l  %149 = mul nuw nsw i32 %138, 299\l  %150 = mul nuw nsw i32 %143, 587\l  %151 = add nuw nsw i32 %150, %149\l  %152 = mul nuw nsw i32 %148, 114\l  %153 = add nuw nsw i32 %151, %152\l  %154 = udiv i32 %153, 1000\l  %155 = add nsw i32 %29, 12\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %156\l  %158 = load i16, i16 addrspace(1)* %157, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %159 = zext i16 %158 to i32\l  %160 = add nsw i32 %29, 13\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %161\l  %163 = load i16, i16 addrspace(1)* %162, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %164 = zext i16 %163 to i32\l  %165 = add nsw i32 %29, 14\l  %166 = sext i32 %165 to i64\l  %167 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %166\l  %168 = load i16, i16 addrspace(1)* %167, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %169 = zext i16 %168 to i32\l  %170 = mul nuw nsw i32 %159, 299\l  %171 = mul nuw nsw i32 %164, 587\l  %172 = add nuw nsw i32 %171, %170\l  %173 = mul nuw nsw i32 %169, 114\l  %174 = add nuw nsw i32 %172, %173\l  %175 = udiv i32 %174, 1000\l  %176 = add nsw i32 %29, 15\l  %177 = sext i32 %176 to i64\l  %178 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %177\l  %179 = load i16, i16 addrspace(1)* %178, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %180 = zext i16 %179 to i32\l  %181 = add nsw i32 %29, 16\l  %182 = sext i32 %181 to i64\l  %183 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %182\l  %184 = load i16, i16 addrspace(1)* %183, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %185 = zext i16 %184 to i32\l  %186 = add nsw i32 %29, 17\l  %187 = sext i32 %186 to i64\l  %188 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %187\l  %189 = load i16, i16 addrspace(1)* %188, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %190 = zext i16 %189 to i32\l  %191 = mul nuw nsw i32 %180, 299\l  %192 = mul nuw nsw i32 %185, 587\l  %193 = add nuw nsw i32 %192, %191\l  %194 = mul nuw nsw i32 %190, 114\l  %195 = add nuw nsw i32 %193, %194\l  %196 = udiv i32 %195, 1000\l  %197 = shl i32 %63, 20\l  %198 = shl nuw nsw i32 %49, 10\l  %199 = or i32 %198, %56\l  %200 = or i32 %199, %197\l  %201 = shl i32 %119, 20\l  %202 = shl i32 %91, 10\l  %203 = or i32 %202, %84\l  %204 = or i32 %203, %201\l  %205 = shl i32 %126, 20\l  %206 = shl nuw nsw i32 %154, 10\l  %207 = or i32 %205, %98\l  %208 = or i32 %207, %206\l  %209 = shl i32 %196, 20\l  %210 = shl i32 %133, 10\l  %211 = or i32 %175, %210\l  %212 = or i32 %211, %209\l  %213 = shl nsw i32 %13, 3\l  %214 = shl nsw i32 %28, 2\l  %215 = sdiv i32 %214, 9\l  %216 = trunc i32 %199 to i16\l  %217 = add nsw i32 %215, %213\l  %218 = sext i32 %217 to i64\l  %219 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %218\l  store i16 %216, i16 addrspace(1)* %219, align 2, !tbaa !7\l  %220 = lshr i32 %200, 16\l  %221 = trunc i32 %220 to i16\l  %222 = add nsw i32 %217, 1\l  %223 = sext i32 %222 to i64\l  %224 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %223\l  store i16 %221, i16 addrspace(1)* %224, align 2, !tbaa !7\l  %225 = trunc i32 %203 to i16\l  %226 = add nsw i32 %217, 2\l  %227 = sext i32 %226 to i64\l  %228 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %227\l  store i16 %225, i16 addrspace(1)* %228, align 2, !tbaa !7\l  %229 = lshr i32 %204, 16\l  %230 = trunc i32 %229 to i16\l  %231 = add nsw i32 %217, 3\l  %232 = sext i32 %231 to i64\l  %233 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %232\l  store i16 %230, i16 addrspace(1)* %233, align 2, !tbaa !7\l  %234 = trunc i32 %208 to i16\l  %235 = add nsw i32 %217, 4\l  %236 = sext i32 %235 to i64\l  %237 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %236\l  store i16 %234, i16 addrspace(1)* %237, align 2, !tbaa !7\l  %238 = lshr i32 %208, 16\l  %239 = trunc i32 %238 to i16\l  %240 = add nsw i32 %217, 5\l  %241 = sext i32 %240 to i64\l  %242 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %241\l  store i16 %239, i16 addrspace(1)* %242, align 2, !tbaa !7\l  %243 = trunc i32 %211 to i16\l  %244 = add nsw i32 %217, 6\l  %245 = sext i32 %244 to i64\l  %246 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %245\l  store i16 %243, i16 addrspace(1)* %246, align 2, !tbaa !7\l  %247 = lshr i32 %212, 16\l  %248 = trunc i32 %247 to i16\l  %249 = add nsw i32 %217, 7\l  %250 = sext i32 %249 to i64\l  %251 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %250\l  store i16 %248, i16 addrspace(1)* %251, align 2, !tbaa !7\l  br label %252\l}"];
	Node0x4e00280 -> Node0x4e00310;
	Node0x4e00310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%252:\l252:                                              \l  ret void\l}"];
}
