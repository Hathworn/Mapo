digraph "CFG for '_ZL15resizeRGBKernelPKtiiPhiiPi' function" {
	label="CFG for '_ZL15resizeRGBKernelPKtiiPhiiPi' function";

	Node0x5267bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = icmp slt i32 %16, %4\l  %26 = icmp slt i32 %24, %5\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5267bf0:s0 -> Node0x526b610;
	Node0x5267bf0:s1 -> Node0x526b6a0;
	Node0x526b610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%28:\l28:                                               \l  %29 = sdiv i32 %1, %4\l  %30 = sdiv i32 %2, %5\l  %31 = mul i32 %24, %1\l  %32 = mul i32 %31, %30\l  %33 = mul i32 %29, %16\l  %34 = add i32 %32, %33\l  %35 = mul i32 %34, 3\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %36\l  %38 = load i16, i16 addrspace(1)* %37, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %39 = add nsw i32 %35, 1\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %40\l  %42 = load i16, i16 addrspace(1)* %41, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %43 = add nsw i32 %35, 2\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %44\l  %46 = load i16, i16 addrspace(1)* %45, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %47 = mul nsw i32 %24, %4\l  %48 = zext i16 %38 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %48\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %51 = trunc i32 %50 to i8\l  %52 = add i32 %47, %16\l  %53 = mul i32 %52, 3\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %54\l  store i8 %51, i8 addrspace(1)* %55, align 1, !tbaa !13\l  %56 = zext i16 %42 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %56\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !11\l  %59 = trunc i32 %58 to i8\l  %60 = add nsw i32 %53, 1\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %61\l  store i8 %59, i8 addrspace(1)* %62, align 1, !tbaa !13\l  %63 = zext i16 %46 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !11\l  %66 = trunc i32 %65 to i8\l  %67 = add nsw i32 %53, 2\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %68\l  store i8 %66, i8 addrspace(1)* %69, align 1, !tbaa !13\l  br label %70\l}"];
	Node0x526b610 -> Node0x526b6a0;
	Node0x526b6a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  ret void\l}"];
}
