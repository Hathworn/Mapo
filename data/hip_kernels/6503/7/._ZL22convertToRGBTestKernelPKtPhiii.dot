digraph "CFG for '_ZL22convertToRGBTestKernelPKtPhiii' function" {
	label="CFG for '_ZL22convertToRGBTestKernelPKtPhiii' function";

	Node0x4578d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = sdiv i32 %2, 8\l  %24 = icmp slt i32 %14, %23\l  %25 = icmp slt i32 %22, %4\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %275\l|{<s0>T|<s1>F}}"];
	Node0x4578d50:s0 -> Node0x457c890;
	Node0x4578d50:s1 -> Node0x457c920;
	Node0x457c890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %22, %2\l  %29 = shl nsw i32 %14, 3\l  %30 = add nsw i32 %28, %29\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %31\l  %33 = load i16, i16 addrspace(1)* %32, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %34 = zext i16 %33 to i32\l  %35 = add nsw i32 %30, 1\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %36\l  %38 = load i16, i16 addrspace(1)* %37, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %39 = zext i16 %38 to i32\l  %40 = shl nuw i32 %39, 16\l  %41 = or i32 %40, %34\l  %42 = add nsw i32 %30, 2\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %43\l  %45 = load i16, i16 addrspace(1)* %44, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %46 = zext i16 %45 to i32\l  %47 = add nsw i32 %30, 3\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %48\l  %50 = load i16, i16 addrspace(1)* %49, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %51 = zext i16 %50 to i32\l  %52 = shl nuw i32 %51, 16\l  %53 = or i32 %52, %46\l  %54 = add nsw i32 %30, 4\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %55\l  %57 = load i16, i16 addrspace(1)* %56, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %58 = zext i16 %57 to i32\l  %59 = add nsw i32 %30, 5\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %60\l  %62 = load i16, i16 addrspace(1)* %61, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %63 = zext i16 %62 to i32\l  %64 = shl nuw i32 %63, 16\l  %65 = or i32 %64, %58\l  %66 = add nsw i32 %30, 6\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %67\l  %69 = load i16, i16 addrspace(1)* %68, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %70 = zext i16 %69 to i32\l  %71 = add nsw i32 %30, 7\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %72\l  %74 = load i16, i16 addrspace(1)* %73, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %75 = zext i16 %74 to i32\l  %76 = shl nuw i32 %75, 16\l  %77 = or i32 %76, %70\l  %78 = lshr i32 %39, 4\l  %79 = and i32 %78, 1023\l  %80 = lshr i32 %41, 10\l  %81 = and i32 %80, 1023\l  %82 = mul nuw nsw i32 %81, 1000\l  %83 = and i32 %34, 1023\l  %84 = lshr i32 %51, 4\l  %85 = and i32 %84, 1023\l  %86 = mul nuw nsw i32 %85, 1000\l  %87 = lshr i32 %53, 10\l  %88 = and i32 %87, 1023\l  %89 = and i32 %46, 1023\l  %90 = mul nuw nsw i32 %89, 1000\l  %91 = lshr i32 %63, 4\l  %92 = and i32 %91, 1023\l  %93 = lshr i32 %65, 10\l  %94 = and i32 %93, 1023\l  %95 = mul nuw nsw i32 %94, 1000\l  %96 = and i32 %58, 1023\l  %97 = lshr i32 %75, 4\l  %98 = and i32 %97, 1023\l  %99 = mul nuw nsw i32 %98, 1000\l  %100 = lshr i32 %77, 10\l  %101 = and i32 %100, 1023\l  %102 = and i32 %70, 1023\l  %103 = mul nuw nsw i32 %102, 1000\l  %104 = mul nsw i32 %14, 18\l  %105 = mul nsw i32 %28, 9\l  %106 = sdiv i32 %105, 4\l  %107 = mul nuw nsw i32 %79, 1407\l  %108 = add nsw i32 %107, -720384\l  %109 = mul nuw nsw i32 %79, 716\l  %110 = mul nuw nsw i32 %83, 345\l  %111 = add nuw nsw i32 %110, -543232\l  %112 = add nsw i32 %111, %109\l  %113 = mul nuw nsw i32 %83, 1779\l  %114 = add nsw i32 %113, -910848\l  %115 = add nsw i32 %82, %108\l  %116 = uitofp i32 %115 to double\l  %117 = fmul contract double %116, 2.490000e-01\l  %118 = fdiv contract double %117, 1.000000e+03\l  %119 = fptoui double %118 to i8\l  %120 = add nsw i32 %106, %104\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %121\l  store i8 %119, i8 addrspace(1)* %122, align 1, !tbaa !11\l  %123 = sub nsw i32 %82, %112\l  %124 = uitofp i32 %123 to double\l  %125 = fmul contract double %124, 2.490000e-01\l  %126 = fdiv contract double %125, 1.000000e+03\l  %127 = fptoui double %126 to i8\l  %128 = add nsw i32 %120, 1\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %129\l  store i8 %127, i8 addrspace(1)* %130, align 1, !tbaa !11\l  %131 = add nsw i32 %82, %114\l  %132 = uitofp i32 %131 to double\l  %133 = fmul contract double %132, 2.490000e-01\l  %134 = fdiv contract double %133, 1.000000e+03\l  %135 = fptoui double %134 to i8\l  %136 = add nsw i32 %120, 2\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %137\l  store i8 %135, i8 addrspace(1)* %138, align 1, !tbaa !11\l  %139 = add nsw i32 %108, %90\l  %140 = uitofp i32 %139 to double\l  %141 = fmul contract double %140, 2.490000e-01\l  %142 = fdiv contract double %141, 1.000000e+03\l  %143 = fptoui double %142 to i8\l  %144 = add nsw i32 %120, 3\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %145\l  store i8 %143, i8 addrspace(1)* %146, align 1, !tbaa !11\l  %147 = sub nsw i32 %90, %112\l  %148 = uitofp i32 %147 to double\l  %149 = fmul contract double %148, 2.490000e-01\l  %150 = fdiv contract double %149, 1.000000e+03\l  %151 = fptoui double %150 to i8\l  %152 = add nsw i32 %120, 4\l  %153 = sext i32 %152 to i64\l  %154 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %153\l  store i8 %151, i8 addrspace(1)* %154, align 1, !tbaa !11\l  %155 = add nsw i32 %90, %114\l  %156 = uitofp i32 %155 to double\l  %157 = fmul contract double %156, 2.490000e-01\l  %158 = fdiv contract double %157, 1.000000e+03\l  %159 = fptoui double %158 to i8\l  %160 = add nsw i32 %120, 5\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %161\l  store i8 %159, i8 addrspace(1)* %162, align 1, !tbaa !11\l  %163 = mul nuw nsw i32 %96, 1407\l  %164 = add nsw i32 %163, -720384\l  %165 = mul nuw nsw i32 %96, 716\l  %166 = mul nuw nsw i32 %88, 345\l  %167 = add nsw i32 %165, -543232\l  %168 = add nsw i32 %167, %166\l  %169 = mul nuw nsw i32 %88, 1779\l  %170 = add nsw i32 %169, -910848\l  %171 = add nsw i32 %164, %86\l  %172 = uitofp i32 %171 to double\l  %173 = fmul contract double %172, 2.490000e-01\l  %174 = fdiv contract double %173, 1.000000e+03\l  %175 = fptoui double %174 to i8\l  %176 = add nsw i32 %120, 6\l  %177 = sext i32 %176 to i64\l  %178 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %177\l  store i8 %175, i8 addrspace(1)* %178, align 1, !tbaa !11\l  %179 = sub nsw i32 %86, %168\l  %180 = uitofp i32 %179 to double\l  %181 = fmul contract double %180, 2.490000e-01\l  %182 = fdiv contract double %181, 1.000000e+03\l  %183 = fptoui double %182 to i8\l  %184 = add nsw i32 %120, 7\l  %185 = sext i32 %184 to i64\l  %186 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %185\l  store i8 %183, i8 addrspace(1)* %186, align 1, !tbaa !11\l  %187 = add nsw i32 %170, %86\l  %188 = uitofp i32 %187 to double\l  %189 = fmul contract double %188, 2.490000e-01\l  %190 = fdiv contract double %189, 1.000000e+03\l  %191 = fptoui double %190 to i8\l  %192 = add nsw i32 %120, 8\l  %193 = sext i32 %192 to i64\l  %194 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %193\l  store i8 %191, i8 addrspace(1)* %194, align 1, !tbaa !11\l  %195 = add nsw i32 %95, %164\l  %196 = uitofp i32 %195 to double\l  %197 = fmul contract double %196, 2.490000e-01\l  %198 = fdiv contract double %197, 1.000000e+03\l  %199 = fptoui double %198 to i8\l  %200 = add nsw i32 %120, 9\l  %201 = sext i32 %200 to i64\l  %202 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %201\l  store i8 %199, i8 addrspace(1)* %202, align 1, !tbaa !11\l  %203 = sub nsw i32 %95, %168\l  %204 = uitofp i32 %203 to double\l  %205 = fmul contract double %204, 2.490000e-01\l  %206 = fdiv contract double %205, 1.000000e+03\l  %207 = fptoui double %206 to i8\l  %208 = add nsw i32 %120, 10\l  %209 = sext i32 %208 to i64\l  %210 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %209\l  store i8 %207, i8 addrspace(1)* %210, align 1, !tbaa !11\l  %211 = add nsw i32 %95, %170\l  %212 = uitofp i32 %211 to double\l  %213 = fmul contract double %212, 2.490000e-01\l  %214 = fdiv contract double %213, 1.000000e+03\l  %215 = fptoui double %214 to i8\l  %216 = add nsw i32 %120, 11\l  %217 = sext i32 %216 to i64\l  %218 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %217\l  store i8 %215, i8 addrspace(1)* %218, align 1, !tbaa !11\l  %219 = mul nuw nsw i32 %101, 1407\l  %220 = add nsw i32 %219, -720384\l  %221 = mul nuw nsw i32 %101, 716\l  %222 = mul nuw nsw i32 %92, 345\l  %223 = add nuw nsw i32 %222, -543232\l  %224 = add nsw i32 %223, %221\l  %225 = mul nuw nsw i32 %92, 1779\l  %226 = add nsw i32 %225, -910848\l  %227 = add nsw i32 %220, %103\l  %228 = uitofp i32 %227 to double\l  %229 = fmul contract double %228, 2.490000e-01\l  %230 = fdiv contract double %229, 1.000000e+03\l  %231 = fptoui double %230 to i8\l  %232 = add nsw i32 %120, 12\l  %233 = sext i32 %232 to i64\l  %234 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %233\l  store i8 %231, i8 addrspace(1)* %234, align 1, !tbaa !11\l  %235 = sub nsw i32 %103, %224\l  %236 = uitofp i32 %235 to double\l  %237 = fmul contract double %236, 2.490000e-01\l  %238 = fdiv contract double %237, 1.000000e+03\l  %239 = fptoui double %238 to i8\l  %240 = add nsw i32 %120, 13\l  %241 = sext i32 %240 to i64\l  %242 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %241\l  store i8 %239, i8 addrspace(1)* %242, align 1, !tbaa !11\l  %243 = add nsw i32 %226, %103\l  %244 = uitofp i32 %243 to double\l  %245 = fmul contract double %244, 2.490000e-01\l  %246 = fdiv contract double %245, 1.000000e+03\l  %247 = fptoui double %246 to i8\l  %248 = add nsw i32 %120, 14\l  %249 = sext i32 %248 to i64\l  %250 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %249\l  store i8 %247, i8 addrspace(1)* %250, align 1, !tbaa !11\l  %251 = add nsw i32 %220, %99\l  %252 = uitofp i32 %251 to double\l  %253 = fmul contract double %252, 2.490000e-01\l  %254 = fdiv contract double %253, 1.000000e+03\l  %255 = fptoui double %254 to i8\l  %256 = add nsw i32 %120, 15\l  %257 = sext i32 %256 to i64\l  %258 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %257\l  store i8 %255, i8 addrspace(1)* %258, align 1, !tbaa !11\l  %259 = sub nsw i32 %99, %224\l  %260 = uitofp i32 %259 to double\l  %261 = fmul contract double %260, 2.490000e-01\l  %262 = fdiv contract double %261, 1.000000e+03\l  %263 = fptoui double %262 to i8\l  %264 = add nsw i32 %120, 16\l  %265 = sext i32 %264 to i64\l  %266 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %265\l  store i8 %263, i8 addrspace(1)* %266, align 1, !tbaa !11\l  %267 = add nsw i32 %99, %226\l  %268 = uitofp i32 %267 to double\l  %269 = fmul contract double %268, 2.490000e-01\l  %270 = fdiv contract double %269, 1.000000e+03\l  %271 = fptoui double %270 to i8\l  %272 = add nsw i32 %120, 17\l  %273 = sext i32 %272 to i64\l  %274 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %273\l  store i8 %271, i8 addrspace(1)* %274, align 1, !tbaa !11\l  br label %275\l}"];
	Node0x457c890 -> Node0x457c920;
	Node0x457c920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%275:\l275:                                              \l  ret void\l}"];
}
