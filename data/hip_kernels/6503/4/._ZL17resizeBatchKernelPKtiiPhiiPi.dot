digraph "CFG for '_ZL17resizeBatchKernelPKtiiPhiiPi' function" {
	label="CFG for '_ZL17resizeBatchKernelPKtiiPhiiPi' function";

	Node0x4baa630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = sdiv i32 %2, %5\l  switch i32 %25, label %461 [\l    i32 4, label %26\l    i32 6, label %205\l    i32 2, label %275\l  ]\l|{<s0>def|<s1>4|<s2>6|<s3>2}}"];
	Node0x4baa630:s0 -> Node0x4badf20;
	Node0x4baa630:s1 -> Node0x4badfe0;
	Node0x4baa630:s2 -> Node0x4bae0a0;
	Node0x4baa630:s3 -> Node0x4bae160;
	Node0x4badfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%26:\l26:                                               \l  %27 = sdiv i32 %4, 6\l  %28 = icmp slt i32 %16, %27\l  %29 = icmp slt i32 %24, %5\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %461\l|{<s0>T|<s1>F}}"];
	Node0x4badfe0:s0 -> Node0x4bae5e0;
	Node0x4badfe0:s1 -> Node0x4badf20;
	Node0x4bae5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %24, %1\l  %33 = shl nsw i32 %32, 2\l  %34 = shl nsw i32 %16, 5\l  %35 = add nsw i32 %33, %34\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %36\l  %38 = load i16, i16 addrspace(1)* %37, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %39 = zext i16 %38 to i32\l  %40 = or i32 %35, 1\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %41\l  %43 = load i16, i16 addrspace(1)* %42, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %44 = zext i16 %43 to i32\l  %45 = shl nuw i32 %44, 16\l  %46 = or i32 %45, %39\l  %47 = add nsw i32 %35, 6\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %48\l  %50 = load i16, i16 addrspace(1)* %49, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %51 = lshr i32 %44, 4\l  %52 = and i32 %51, 1023\l  %53 = lshr i32 %46, 10\l  %54 = and i32 %53, 1023\l  %55 = and i32 %39, 1023\l  %56 = and i16 %50, 1023\l  %57 = add nsw i32 %35, 10\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %58\l  %60 = load i16, i16 addrspace(1)* %59, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %61 = zext i16 %60 to i32\l  %62 = add nsw i32 %35, 11\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %63\l  %65 = load i16, i16 addrspace(1)* %64, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %66 = zext i16 %65 to i32\l  %67 = shl nuw i32 %66, 16\l  %68 = or i32 %67, %61\l  %69 = add nsw i32 %35, 12\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %70\l  %72 = load i16, i16 addrspace(1)* %71, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %73 = lshr i32 %66, 4\l  %74 = and i32 %73, 1023\l  %75 = lshr i32 %68, 10\l  %76 = and i32 %75, 1023\l  %77 = and i16 %72, 1023\l  %78 = add nsw i32 %35, 16\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %79\l  %81 = load i16, i16 addrspace(1)* %80, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %82 = zext i16 %81 to i64\l  %83 = add nsw i32 %35, 17\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %84\l  %86 = load i16, i16 addrspace(1)* %85, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %87 = zext i16 %86 to i64\l  %88 = shl nuw nsw i64 %87, 16\l  %89 = or i64 %88, %82\l  %90 = add nsw i32 %35, 21\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %91\l  %93 = load i16, i16 addrspace(1)* %92, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %94 = add nsw i32 %35, 22\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %95\l  %97 = load i16, i16 addrspace(1)* %96, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %98 = zext i16 %97 to i32\l  %99 = add nsw i32 %35, 23\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %100\l  %102 = load i16, i16 addrspace(1)* %101, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %103 = zext i16 %102 to i32\l  %104 = shl nuw i32 %103, 16\l  %105 = or i32 %104, %98\l  %106 = lshr i64 %89, 10\l  %107 = and i64 %106, 1023\l  %108 = lshr i16 %93, 4\l  %109 = and i16 %108, 1023\l  %110 = lshr i32 %105, 10\l  %111 = and i32 %110, 1023\l  %112 = and i32 %98, 1023\l  %113 = add nsw i32 %35, 27\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %114\l  %116 = load i16, i16 addrspace(1)* %115, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %117 = lshr i16 %116, 4\l  %118 = and i16 %117, 1023\l  %119 = mul nsw i32 %16, 6\l  %120 = mul nsw i32 %24, %4\l  %121 = zext i32 %54 to i64\l  %122 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %121\l  %123 = load i32, i32 addrspace(1)* %122, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %124 = trunc i32 %123 to i8\l  %125 = add nsw i32 %120, %119\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %126\l  store i8 %124, i8 addrspace(1)* %127, align 1, !tbaa !13\l  %128 = zext i16 %56 to i64\l  %129 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %128\l  %130 = load i32, i32 addrspace(1)* %129, align 4, !tbaa !11\l  %131 = trunc i32 %130 to i8\l  %132 = add nsw i32 %125, 1\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %133\l  store i8 %131, i8 addrspace(1)* %134, align 1, !tbaa !13\l  %135 = zext i32 %74 to i64\l  %136 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %135\l  %137 = load i32, i32 addrspace(1)* %136, align 4, !tbaa !11\l  %138 = trunc i32 %137 to i8\l  %139 = add nsw i32 %125, 2\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %140\l  store i8 %138, i8 addrspace(1)* %141, align 1, !tbaa !13\l  %142 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %107\l  %143 = load i32, i32 addrspace(1)* %142, align 4, !tbaa !11\l  %144 = trunc i32 %143 to i8\l  %145 = add nsw i32 %125, 3\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %146\l  store i8 %144, i8 addrspace(1)* %147, align 1, !tbaa !13\l  %148 = zext i32 %112 to i64\l  %149 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %148\l  %150 = load i32, i32 addrspace(1)* %149, align 4, !tbaa !11\l  %151 = trunc i32 %150 to i8\l  %152 = add nsw i32 %125, 4\l  %153 = sext i32 %152 to i64\l  %154 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %153\l  store i8 %151, i8 addrspace(1)* %154, align 1, !tbaa !13\l  %155 = zext i16 %118 to i64\l  %156 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %155\l  %157 = load i32, i32 addrspace(1)* %156, align 4, !tbaa !11\l  %158 = trunc i32 %157 to i8\l  %159 = add nsw i32 %125, 5\l  %160 = sext i32 %159 to i64\l  %161 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %160\l  store i8 %158, i8 addrspace(1)* %161, align 1, !tbaa !13\l  %162 = mul nsw i32 %16, 3\l  %163 = sdiv i32 %120, 2\l  %164 = zext i32 %55 to i64\l  %165 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %164\l  %166 = load i32, i32 addrspace(1)* %165, align 4, !tbaa !11\l  %167 = trunc i32 %166 to i8\l  %168 = add i32 %163, %162\l  %169 = sext i32 %168 to i64\l  %170 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %169\l  store i8 %167, i8 addrspace(1)* %170, align 1, !tbaa !13\l  %171 = zext i32 %76 to i64\l  %172 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %171\l  %173 = load i32, i32 addrspace(1)* %172, align 4, !tbaa !11\l  %174 = trunc i32 %173 to i8\l  %175 = add nsw i32 %168, 1\l  %176 = sext i32 %175 to i64\l  %177 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %176\l  store i8 %174, i8 addrspace(1)* %177, align 1, !tbaa !13\l  %178 = zext i16 %109 to i64\l  %179 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %178\l  %180 = load i32, i32 addrspace(1)* %179, align 4, !tbaa !11\l  %181 = trunc i32 %180 to i8\l  %182 = add nsw i32 %168, 2\l  %183 = sext i32 %182 to i64\l  %184 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %183\l  store i8 %181, i8 addrspace(1)* %184, align 1, !tbaa !13\l  %185 = mul i32 %4, 3\l  %186 = mul i32 %185, %5\l  %187 = sdiv i32 %186, 2\l  %188 = zext i32 %52 to i64\l  %189 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %188\l  %190 = load i32, i32 addrspace(1)* %189, align 4, !tbaa !11\l  %191 = trunc i32 %190 to i8\l  %192 = add i32 %168, %187\l  %193 = sext i32 %192 to i64\l  %194 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %193\l  store i8 %191, i8 addrspace(1)* %194, align 1, !tbaa !13\l  %195 = zext i16 %77 to i64\l  %196 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %195\l  %197 = load i32, i32 addrspace(1)* %196, align 4, !tbaa !11\l  %198 = trunc i32 %197 to i8\l  %199 = add nsw i32 %192, 1\l  %200 = sext i32 %199 to i64\l  %201 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %200\l  store i8 %198, i8 addrspace(1)* %201, align 1, !tbaa !13\l  %202 = zext i32 %111 to i64\l  %203 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %202\l  %204 = add nsw i32 %192, 2\l  br label %454\l}"];
	Node0x4bae5e0 -> Node0x4bb6b20;
	Node0x4bae0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%205:\l205:                                              \l  %206 = sdiv i32 %4, 2\l  %207 = icmp slt i32 %16, %206\l  %208 = icmp slt i32 %24, %5\l  %209 = select i1 %207, i1 %208, i1 false\l  br i1 %209, label %210, label %461\l|{<s0>T|<s1>F}}"];
	Node0x4bae0a0:s0 -> Node0x4bb6e80;
	Node0x4bae0a0:s1 -> Node0x4badf20;
	Node0x4bb6e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%210:\l210:                                              \l  %211 = mul nsw i32 %24, %1\l  %212 = mul nsw i32 %211, 6\l  %213 = shl nsw i32 %16, 4\l  %214 = add nsw i32 %212, %213\l  %215 = sext i32 %214 to i64\l  %216 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %215\l  %217 = load i16, i16 addrspace(1)* %216, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %218 = zext i16 %217 to i32\l  %219 = or i32 %214, 1\l  %220 = sext i32 %219 to i64\l  %221 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %220\l  %222 = load i16, i16 addrspace(1)* %221, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %223 = zext i16 %222 to i32\l  %224 = shl nuw i32 %223, 16\l  %225 = or i32 %224, %218\l  %226 = lshr i32 %223, 4\l  %227 = and i32 %226, 1023\l  %228 = lshr i32 %225, 10\l  %229 = and i32 %228, 1023\l  %230 = and i32 %218, 1023\l  %231 = add nsw i32 %214, 8\l  %232 = sext i32 %231 to i64\l  %233 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %232\l  %234 = load i16, i16 addrspace(1)* %233, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %235 = zext i16 %234 to i64\l  %236 = add nsw i32 %214, 9\l  %237 = sext i32 %236 to i64\l  %238 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %237\l  %239 = load i16, i16 addrspace(1)* %238, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %240 = zext i16 %239 to i64\l  %241 = shl nuw nsw i64 %240, 16\l  %242 = or i64 %241, %235\l  %243 = lshr i64 %242, 10\l  %244 = and i64 %243, 1023\l  %245 = shl nsw i32 %16, 1\l  %246 = mul nsw i32 %24, %4\l  %247 = zext i32 %229 to i64\l  %248 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %247\l  %249 = load i32, i32 addrspace(1)* %248, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %250 = trunc i32 %249 to i8\l  %251 = add nsw i32 %246, %245\l  %252 = sext i32 %251 to i64\l  %253 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %252\l  store i8 %250, i8 addrspace(1)* %253, align 1, !tbaa !13\l  %254 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %244\l  %255 = load i32, i32 addrspace(1)* %254, align 4, !tbaa !11\l  %256 = trunc i32 %255 to i8\l  %257 = add nsw i32 %251, 1\l  %258 = sext i32 %257 to i64\l  %259 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %258\l  store i8 %256, i8 addrspace(1)* %259, align 1, !tbaa !13\l  %260 = sdiv i32 %246, 2\l  %261 = zext i32 %230 to i64\l  %262 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %261\l  %263 = load i32, i32 addrspace(1)* %262, align 4, !tbaa !11\l  %264 = trunc i32 %263 to i8\l  %265 = add i32 %260, %16\l  %266 = sext i32 %265 to i64\l  %267 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %266\l  store i8 %264, i8 addrspace(1)* %267, align 1, !tbaa !13\l  %268 = mul i32 %4, 3\l  %269 = mul i32 %268, %5\l  %270 = sdiv i32 %269, 2\l  %271 = zext i32 %227 to i64\l  %272 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %271\l  %273 = add i32 %265, 1\l  %274 = add i32 %273, %270\l  br label %454\l}"];
	Node0x4bb6e80 -> Node0x4bb6b20;
	Node0x4bae160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%275:\l275:                                              \l  %276 = sdiv i32 %4, 6\l  %277 = icmp slt i32 %16, %276\l  %278 = icmp slt i32 %24, %5\l  %279 = select i1 %277, i1 %278, i1 false\l  br i1 %279, label %280, label %461\l|{<s0>T|<s1>F}}"];
	Node0x4bae160:s0 -> Node0x4bab980;
	Node0x4bae160:s1 -> Node0x4badf20;
	Node0x4bab980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%280:\l280:                                              \l  %281 = mul nsw i32 %24, %1\l  %282 = shl nsw i32 %281, 1\l  %283 = shl nsw i32 %16, 4\l  %284 = add nsw i32 %282, %283\l  %285 = sext i32 %284 to i64\l  %286 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %285\l  %287 = load i16, i16 addrspace(1)* %286, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %288 = zext i16 %287 to i32\l  %289 = or i32 %284, 1\l  %290 = sext i32 %289 to i64\l  %291 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %290\l  %292 = load i16, i16 addrspace(1)* %291, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %293 = zext i16 %292 to i32\l  %294 = shl nuw i32 %293, 16\l  %295 = or i32 %294, %288\l  %296 = add nsw i32 %284, 3\l  %297 = sext i32 %296 to i64\l  %298 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %297\l  %299 = load i16, i16 addrspace(1)* %298, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %300 = add nsw i32 %284, 5\l  %301 = sext i32 %300 to i64\l  %302 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %301\l  %303 = load i16, i16 addrspace(1)* %302, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %304 = add nsw i32 %284, 6\l  %305 = sext i32 %304 to i64\l  %306 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %305\l  %307 = load i16, i16 addrspace(1)* %306, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %308 = zext i16 %307 to i32\l  %309 = add nsw i32 %284, 7\l  %310 = sext i32 %309 to i64\l  %311 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %310\l  %312 = load i16, i16 addrspace(1)* %311, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %313 = zext i16 %312 to i32\l  %314 = shl nuw i32 %313, 16\l  %315 = or i32 %314, %308\l  %316 = lshr i32 %293, 4\l  %317 = and i32 %316, 1023\l  %318 = lshr i32 %295, 10\l  %319 = and i32 %318, 1023\l  %320 = and i32 %288, 1023\l  %321 = lshr i16 %299, 4\l  %322 = and i16 %321, 1023\l  %323 = lshr i16 %303, 4\l  %324 = and i16 %323, 1023\l  %325 = lshr i32 %315, 10\l  %326 = and i32 %325, 1023\l  %327 = and i32 %308, 1023\l  %328 = add nsw i32 %284, 8\l  %329 = sext i32 %328 to i64\l  %330 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %329\l  %331 = load i16, i16 addrspace(1)* %330, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %332 = zext i16 %331 to i64\l  %333 = add nsw i32 %284, 9\l  %334 = sext i32 %333 to i64\l  %335 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %334\l  %336 = load i16, i16 addrspace(1)* %335, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %337 = zext i16 %336 to i64\l  %338 = shl nuw nsw i64 %337, 16\l  %339 = or i64 %338, %332\l  %340 = add nsw i32 %284, 10\l  %341 = sext i32 %340 to i64\l  %342 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %341\l  %343 = load i16, i16 addrspace(1)* %342, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %344 = zext i16 %343 to i32\l  %345 = add nsw i32 %284, 11\l  %346 = sext i32 %345 to i64\l  %347 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %346\l  %348 = load i16, i16 addrspace(1)* %347, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %349 = zext i16 %348 to i32\l  %350 = shl nuw i32 %349, 16\l  %351 = or i32 %350, %344\l  %352 = add nsw i32 %284, 12\l  %353 = sext i32 %352 to i64\l  %354 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %353\l  %355 = load i16, i16 addrspace(1)* %354, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %356 = add nsw i32 %284, 14\l  %357 = sext i32 %356 to i64\l  %358 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %357\l  %359 = load i16, i16 addrspace(1)* %358, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %360 = lshr i64 %339, 10\l  %361 = and i64 %360, 1023\l  %362 = lshr i32 %349, 4\l  %363 = and i32 %362, 1023\l  %364 = lshr i32 %351, 10\l  %365 = and i32 %364, 1023\l  %366 = and i16 %355, 1023\l  %367 = and i16 %359, 1023\l  %368 = mul nsw i32 %16, 6\l  %369 = mul nsw i32 %24, %4\l  %370 = zext i32 %319 to i64\l  %371 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %370\l  %372 = load i32, i32 addrspace(1)* %371, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %373 = trunc i32 %372 to i8\l  %374 = add nsw i32 %369, %368\l  %375 = sext i32 %374 to i64\l  %376 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %375\l  store i8 %373, i8 addrspace(1)* %376, align 1, !tbaa !13\l  %377 = zext i16 %322 to i64\l  %378 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %377\l  %379 = load i32, i32 addrspace(1)* %378, align 4, !tbaa !11\l  %380 = trunc i32 %379 to i8\l  %381 = add nsw i32 %374, 1\l  %382 = sext i32 %381 to i64\l  %383 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %382\l  store i8 %380, i8 addrspace(1)* %383, align 1, !tbaa !13\l  %384 = zext i32 %327 to i64\l  %385 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %384\l  %386 = load i32, i32 addrspace(1)* %385, align 4, !tbaa !11\l  %387 = trunc i32 %386 to i8\l  %388 = add nsw i32 %374, 2\l  %389 = sext i32 %388 to i64\l  %390 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %389\l  store i8 %387, i8 addrspace(1)* %390, align 1, !tbaa !13\l  %391 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %361\l  %392 = load i32, i32 addrspace(1)* %391, align 4, !tbaa !11\l  %393 = trunc i32 %392 to i8\l  %394 = add nsw i32 %374, 3\l  %395 = sext i32 %394 to i64\l  %396 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %395\l  store i8 %393, i8 addrspace(1)* %396, align 1, !tbaa !13\l  %397 = zext i32 %363 to i64\l  %398 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %397\l  %399 = load i32, i32 addrspace(1)* %398, align 4, !tbaa !11\l  %400 = trunc i32 %399 to i8\l  %401 = add nsw i32 %374, 4\l  %402 = sext i32 %401 to i64\l  %403 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %402\l  store i8 %400, i8 addrspace(1)* %403, align 1, !tbaa !13\l  %404 = zext i16 %367 to i64\l  %405 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %404\l  %406 = load i32, i32 addrspace(1)* %405, align 4, !tbaa !11\l  %407 = trunc i32 %406 to i8\l  %408 = add nsw i32 %374, 5\l  %409 = sext i32 %408 to i64\l  %410 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %409\l  store i8 %407, i8 addrspace(1)* %410, align 1, !tbaa !13\l  %411 = mul nsw i32 %16, 3\l  %412 = sdiv i32 %369, 2\l  %413 = zext i32 %320 to i64\l  %414 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %413\l  %415 = load i32, i32 addrspace(1)* %414, align 4, !tbaa !11\l  %416 = trunc i32 %415 to i8\l  %417 = add i32 %412, %411\l  %418 = sext i32 %417 to i64\l  %419 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %418\l  store i8 %416, i8 addrspace(1)* %419, align 1, !tbaa !13\l  %420 = zext i16 %324 to i64\l  %421 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %420\l  %422 = load i32, i32 addrspace(1)* %421, align 4, !tbaa !11\l  %423 = trunc i32 %422 to i8\l  %424 = add nsw i32 %417, 1\l  %425 = sext i32 %424 to i64\l  %426 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %425\l  store i8 %423, i8 addrspace(1)* %426, align 1, !tbaa !13\l  %427 = zext i32 %365 to i64\l  %428 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %427\l  %429 = load i32, i32 addrspace(1)* %428, align 4, !tbaa !11\l  %430 = trunc i32 %429 to i8\l  %431 = add nsw i32 %417, 2\l  %432 = sext i32 %431 to i64\l  %433 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %432\l  store i8 %430, i8 addrspace(1)* %433, align 1, !tbaa !13\l  %434 = mul i32 %4, 3\l  %435 = mul i32 %434, %5\l  %436 = sdiv i32 %435, 2\l  %437 = zext i32 %317 to i64\l  %438 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %437\l  %439 = load i32, i32 addrspace(1)* %438, align 4, !tbaa !11\l  %440 = trunc i32 %439 to i8\l  %441 = add i32 %417, %436\l  %442 = sext i32 %441 to i64\l  %443 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %442\l  store i8 %440, i8 addrspace(1)* %443, align 1, !tbaa !13\l  %444 = zext i32 %326 to i64\l  %445 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %444\l  %446 = load i32, i32 addrspace(1)* %445, align 4, !tbaa !11\l  %447 = trunc i32 %446 to i8\l  %448 = add nsw i32 %441, 1\l  %449 = sext i32 %448 to i64\l  %450 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %449\l  store i8 %447, i8 addrspace(1)* %450, align 1, !tbaa !13\l  %451 = zext i16 %366 to i64\l  %452 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %451\l  %453 = add nsw i32 %441, 2\l  br label %454\l}"];
	Node0x4bab980 -> Node0x4bb6b20;
	Node0x4bb6b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%454:\l454:                                              \l  %455 = phi i32 [ %453, %280 ], [ %274, %210 ], [ %204, %31 ]\l  %456 = phi i32 addrspace(1)* [ %452, %280 ], [ %272, %210 ], [ %203, %31 ]\l  %457 = load i32, i32 addrspace(1)* %456, align 4, !tbaa !11\l  %458 = trunc i32 %457 to i8\l  %459 = sext i32 %455 to i64\l  %460 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %459\l  store i8 %458, i8 addrspace(1)* %460, align 1, !tbaa !13\l  br label %461\l}"];
	Node0x4bb6b20 -> Node0x4badf20;
	Node0x4badf20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%461:\l461:                                              \l  ret void\l}"];
}
