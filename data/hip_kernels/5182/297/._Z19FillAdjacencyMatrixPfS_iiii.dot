digraph "CFG for '_Z19FillAdjacencyMatrixPfS_iiii' function" {
	label="CFG for '_Z19FillAdjacencyMatrixPfS_iiii' function";

	Node0x4e6ec30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = udiv i32 %14, %11\l  %18 = mul i32 %17, %11\l  %19 = icmp ugt i32 %14, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %16\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %24 = add i32 %22, %15\l  %25 = mul i32 %24, %11\l  %26 = add i32 %25, %23\l  %27 = freeze i32 %26\l  %28 = freeze i32 %3\l  %29 = sdiv i32 %27, %28\l  %30 = mul i32 %29, %28\l  %31 = sub i32 %27, %30\l  %32 = icmp slt i32 %26, %2\l  %33 = add nsw i32 %3, -2\l  %34 = icmp slt i32 %31, %33\l  %35 = select i1 %32, i1 %34, i1 false\l  br i1 %35, label %36, label %74\l|{<s0>T|<s1>F}}"];
	Node0x4e6ec30:s0 -> Node0x4e70b50;
	Node0x4e6ec30:s1 -> Node0x4e71a60;
	Node0x4e70b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%36:\l36:                                               \l  %37 = add nsw i32 %4, -2\l  %38 = icmp slt i32 %29, %37\l  %39 = icmp sgt i32 %29, 1\l  %40 = and i1 %38, %39\l  %41 = icmp sgt i32 %31, 1\l  %42 = select i1 %40, i1 %41, i1 false\l  br i1 %42, label %43, label %74\l|{<s0>T|<s1>F}}"];
	Node0x4e70b50:s0 -> Node0x4e71f50;
	Node0x4e70b50:s1 -> Node0x4e71a60;
	Node0x4e71f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%43:\l43:                                               \l  %44 = sext i32 %26 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %47 = fptosi float %46 to i32\l  %48 = sitofp i32 %47 to float\l  %49 = add nsw i32 %26, 1\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %1, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %53 = fcmp contract une float %52, %48\l  br i1 %53, label %60, label %54\l|{<s0>T|<s1>F}}"];
	Node0x4e71f50:s0 -> Node0x4e73360;
	Node0x4e71f50:s1 -> Node0x4e733f0;
	Node0x4e733f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%54:\l54:                                               \l  %55 = sub nsw i32 %26, %3\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %59 = fcmp contract une float %58, %48\l  br i1 %59, label %60, label %74\l|{<s0>T|<s1>F}}"];
	Node0x4e733f0:s0 -> Node0x4e73360;
	Node0x4e733f0:s1 -> Node0x4e71a60;
	Node0x4e73360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%60:\l60:                                               \l  %61 = phi float [ %52, %43 ], [ %58, %54 ]\l  %62 = phi float addrspace(1)* [ %51, %43 ], [ %57, %54 ]\l  %63 = fptosi float %61 to i32\l  %64 = mul nsw i32 %47, %5\l  %65 = add nsw i32 %64, %63\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  store float 1.000000e+00, float addrspace(1)* %67, align 4, !tbaa !16\l  %68 = load float, float addrspace(1)* %62, align 4, !tbaa !16\l  %69 = fptosi float %68 to i32\l  %70 = mul nsw i32 %69, %5\l  %71 = add nsw i32 %70, %47\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %72\l  store float 1.000000e+00, float addrspace(1)* %73, align 4, !tbaa !16\l  br label %74\l}"];
	Node0x4e73360 -> Node0x4e71a60;
	Node0x4e71a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  ret void\l}"];
}
