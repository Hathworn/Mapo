digraph "CFG for '_Z27CopyPointsCoordinatesKernelPfPifffS_ii' function" {
	label="CFG for '_Z27CopyPointsCoordinatesKernelPfPifffS_ii' function";

	Node0x51bfa80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !6\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = udiv i32 %16, %13\l  %20 = mul i32 %19, %13\l  %21 = icmp ugt i32 %16, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %18\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %26 = add i32 %24, %17\l  %27 = mul i32 %26, %13\l  %28 = add i32 %27, %25\l  %29 = icmp slt i32 %28, %7\l  br i1 %29, label %30, label %59\l|{<s0>T|<s1>F}}"];
	Node0x51bfa80:s0 -> Node0x51c22d0;
	Node0x51bfa80:s1 -> Node0x51c2360;
	Node0x51c22d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%30:\l30:                                               \l  %31 = mul nsw i32 %28, 3\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %35 = add nsw i32 %31, 1\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %39 = add nsw i32 %31, 2\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %43 = sext i32 %28 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %43\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !20, !amdgpu.noclobber\l... !5\l  %46 = icmp eq i32 %45, 0\l  %47 = select i1 %46, float %2, float %34\l  %48 = select i1 %46, float %3, float %38\l  %49 = select i1 %46, float %4, float %42\l  %50 = add nsw i32 %31, %6\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %5, i64 %51\l  store float %47, float addrspace(1)* %52, align 4, !tbaa !16\l  %53 = add nsw i32 %50, 1\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %5, i64 %54\l  store float %48, float addrspace(1)* %55, align 4, !tbaa !16\l  %56 = add nsw i32 %50, 2\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %5, i64 %57\l  store float %49, float addrspace(1)* %58, align 4, !tbaa !16\l  br label %59\l}"];
	Node0x51c22d0 -> Node0x51c2360;
	Node0x51c2360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  ret void\l}"];
}
