digraph "CFG for '_Z30BilinearResampleSubImageKernelPfS_S_biiii' function" {
	label="CFG for '_Z30BilinearResampleSubImageKernelPfS_S_biiii' function";

	Node0x525e7f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !6\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = udiv i32 %16, %13\l  %20 = mul i32 %19, %13\l  %21 = icmp ugt i32 %16, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %18\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %26 = add i32 %24, %17\l  %27 = mul i32 %26, %13\l  %28 = add i32 %27, %25\l  %29 = mul nsw i32 %7, %6\l  %30 = icmp slt i32 %28, %29\l  br i1 %30, label %31, label %138\l|{<s0>T|<s1>F}}"];
	Node0x525e7f0:s0 -> Node0x52610d0;
	Node0x525e7f0:s1 -> Node0x5261160;
	Node0x52610d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%31:\l31:                                               \l  %32 = load float, float addrspace(1)* %2, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %33 = getelementptr inbounds float, float addrspace(1)* %2, i64 1\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 2\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %37 = add nsw i32 %4, -1\l  %38 = add nsw i32 %5, -1\l  %39 = tail call i32 @llvm.smin.i32(i32 %37, i32 %38)\l  %40 = sitofp i32 %39 to float\l  %41 = fmul contract float %36, %40\l  %42 = fptosi float %41 to i32\l  %43 = tail call i32 @llvm.smax.i32(i32 %42, i32 1)\l  %44 = tail call i32 @llvm.smin.i32(i32 %39, i32 %43)\l  %45 = sitofp i32 %4 to float\l  %46 = fadd contract float %32, 1.000000e+00\l  %47 = fmul contract float %46, %45\l  %48 = fmul contract float %47, 5.000000e-01\l  %49 = fptosi float %48 to i32\l  %50 = sdiv i32 %44, 2\l  %51 = sub nsw i32 %49, %50\l  %52 = sitofp i32 %5 to float\l  %53 = fadd contract float %34, 1.000000e+00\l  %54 = fmul contract float %53, %52\l  %55 = fmul contract float %54, 5.000000e-01\l  %56 = fptosi float %55 to i32\l  %57 = sub nsw i32 %56, %50\l  br i1 %3, label %58, label %66\l|{<s0>T|<s1>F}}"];
	Node0x52610d0:s0 -> Node0x5263e90;
	Node0x52610d0:s1 -> Node0x5263f20;
	Node0x5263e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%58:\l58:                                               \l  %59 = tail call i32 @llvm.smax.i32(i32 %51, i32 1)\l  %60 = tail call i32 @llvm.smax.i32(i32 %57, i32 1)\l  %61 = xor i32 %44, -1\l  %62 = add i32 %61, %4\l  %63 = tail call i32 @llvm.smin.i32(i32 %59, i32 %62)\l  %64 = add i32 %61, %5\l  %65 = tail call i32 @llvm.smin.i32(i32 %60, i32 %64)\l  br label %66\l}"];
	Node0x5263e90 -> Node0x5263f20;
	Node0x5263f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%66:\l66:                                               \l  %67 = phi i32 [ %65, %58 ], [ %57, %31 ]\l  %68 = phi i32 [ %63, %58 ], [ %51, %31 ]\l  %69 = freeze i32 %28\l  %70 = freeze i32 %6\l  %71 = sdiv i32 %69, %70\l  %72 = mul i32 %71, %70\l  %73 = sub i32 %69, %72\l  %74 = add nsw i32 %44, -1\l  %75 = sitofp i32 %74 to float\l  %76 = add nsw i32 %6, -1\l  %77 = sitofp i32 %76 to float\l  %78 = fdiv contract float %75, %77\l  %79 = add nsw i32 %7, -1\l  %80 = sitofp i32 %79 to float\l  %81 = fdiv contract float %75, %80\l  %82 = sitofp i32 %73 to float\l  %83 = fmul contract float %78, %82\l  %84 = fptosi float %83 to i32\l  %85 = sitofp i32 %71 to float\l  %86 = fmul contract float %81, %85\l  %87 = fptosi float %86 to i32\l  %88 = add i32 %68, %84\l  %89 = icmp sgt i32 %88, -1\l  br i1 %89, label %90, label %138\l|{<s0>T|<s1>F}}"];
	Node0x5263f20:s0 -> Node0x5265540;
	Node0x5263f20:s1 -> Node0x5261160;
	Node0x5265540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%90:\l90:                                               \l  %91 = add nsw i32 %67, %87\l  %92 = icmp sgt i32 %91, -1\l  %93 = icmp slt i32 %88, %4\l  %94 = select i1 %92, i1 %93, i1 false\l  %95 = icmp slt i32 %91, %5\l  %96 = select i1 %94, i1 %95, i1 false\l  br i1 %96, label %97, label %138\l|{<s0>T|<s1>F}}"];
	Node0x5265540:s0 -> Node0x52659e0;
	Node0x5265540:s1 -> Node0x5261160;
	Node0x52659e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%97:\l97:                                               \l  %98 = sitofp i32 %84 to float\l  %99 = fsub contract float %83, %98\l  %100 = sitofp i32 %87 to float\l  %101 = fsub contract float %86, %100\l  %102 = mul nsw i32 %91, %4\l  %103 = add i32 %88, %102\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %0, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %107 = add nsw i32 %103, 1\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %0, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %111 = add nuw nsw i32 %91, 1\l  %112 = mul nsw i32 %111, %4\l  %113 = add i32 %88, %112\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %117 = add nsw i32 %113, 1\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %0, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %121 = fsub contract float 1.000000e+00, %99\l  %122 = fmul contract float %121, %106\l  %123 = fsub contract float 1.000000e+00, %101\l  %124 = fmul contract float %123, %122\l  %125 = fmul contract float %99, %110\l  %126 = fmul contract float %123, %125\l  %127 = fadd contract float %124, %126\l  %128 = fmul contract float %101, %116\l  %129 = fmul contract float %121, %128\l  %130 = fadd contract float %127, %129\l  %131 = fmul contract float %99, %120\l  %132 = fmul contract float %101, %131\l  %133 = fadd contract float %130, %132\l  %134 = mul nsw i32 %71, %6\l  %135 = add nsw i32 %134, %73\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %1, i64 %136\l  store float %133, float addrspace(1)* %137, align 4, !tbaa !16\l  br label %138\l}"];
	Node0x52659e0 -> Node0x5261160;
	Node0x5261160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%138:\l138:                                              \l  ret void\l}"];
}
