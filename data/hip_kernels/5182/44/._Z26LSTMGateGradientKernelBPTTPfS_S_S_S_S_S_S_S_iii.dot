digraph "CFG for '_Z26LSTMGateGradientKernelBPTTPfS_S_S_S_S_S_S_S_iii' function" {
	label="CFG for '_Z26LSTMGateGradientKernelBPTTPfS_S_S_S_S_S_S_S_iii' function";

	Node0x4a334d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %19 = bitcast i8 addrspace(4)* %18 to i32 addrspace(4)*\l  %20 = load i32, i32 addrspace(4)* %19, align 4, !tbaa !6\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = udiv i32 %20, %17\l  %24 = mul i32 %23, %17\l  %25 = icmp ugt i32 %20, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %22\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %30 = add i32 %28, %21\l  %31 = mul i32 %30, %17\l  %32 = add i32 %31, %29\l  %33 = add nsw i32 %10, %9\l  %34 = add nsw i32 %33, %11\l  %35 = add nsw i32 %34, 1\l  %36 = mul nsw i32 %35, %10\l  %37 = sdiv i32 %36, %11\l  %38 = icmp slt i32 %32, %37\l  br i1 %38, label %39, label %95\l|{<s0>T|<s1>F}}"];
	Node0x4a334d0:s0 -> Node0x4a35890;
	Node0x4a334d0:s1 -> Node0x4a36d80;
	Node0x4a35890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%39:\l39:                                               \l  %40 = freeze i32 %32\l  %41 = freeze i32 %35\l  %42 = sdiv i32 %40, %41\l  %43 = mul i32 %42, %41\l  %44 = sub i32 %40, %43\l  %45 = icmp sgt i32 %44, -1\l  %46 = icmp slt i32 %44, %9\l  %47 = select i1 %45, i1 %46, i1 false\l  %48 = icmp slt i32 %44, %33\l  %49 = xor i1 %46, true\l  %50 = select i1 %49, i1 %48, i1 false\l  %51 = icmp slt i32 %44, %34\l  %52 = xor i1 %48, true\l  %53 = select i1 %52, i1 %51, i1 false\l  %54 = icmp eq i32 %44, %34\l  %55 = uitofp i1 %47 to float\l  %56 = sext i32 %44 to i64\l  %57 = select i1 %47, i64 %56, i64 0\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %60 = fmul contract float %59, %55\l  %61 = uitofp i1 %50 to float\l  %62 = sub nsw i32 %44, %9\l  %63 = sext i32 %62 to i64\l  %64 = select i1 %50, i64 %63, i64 0\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %67 = fmul contract float %66, %61\l  %68 = fadd contract float %60, %67\l  %69 = uitofp i1 %53 to float\l  %70 = mul nsw i32 %42, %11\l  %71 = sub i32 %62, %10\l  %72 = add nsw i32 %71, %70\l  %73 = sext i32 %72 to i64\l  %74 = select i1 %53, i64 %73, i64 0\l  %75 = getelementptr inbounds float, float addrspace(1)* %2, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %77 = fmul contract float %76, %69\l  %78 = fadd contract float %68, %77\l  %79 = uitofp i1 %54 to float\l  %80 = fadd contract float %78, %79\l  %81 = sext i32 %42 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %5, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %84 = fmul contract float %83, %80\l  %85 = sext i32 %32 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %6, i64 %85\l  store float %84, float addrspace(1)* %86, align 4, !tbaa !16\l  %87 = getelementptr inbounds float, float addrspace(1)* %3, i64 %81\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !16\l  %89 = fmul contract float %88, %80\l  %90 = getelementptr inbounds float, float addrspace(1)* %7, i64 %85\l  store float %89, float addrspace(1)* %90, align 4, !tbaa !16\l  %91 = getelementptr inbounds float, float addrspace(1)* %4, i64 %81\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !16\l  %93 = fmul contract float %80, %92\l  %94 = getelementptr inbounds float, float addrspace(1)* %8, i64 %85\l  store float %93, float addrspace(1)* %94, align 4, !tbaa !16\l  br label %95\l}"];
	Node0x4a35890 -> Node0x4a36d80;
	Node0x4a36d80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%95:\l95:                                               \l  ret void\l}"];
}
