digraph "CFG for '_Z25RemoveNodeByUtilityKernelPiS_S_PffS0_S_S0_S_fi' function" {
	label="CFG for '_Z25RemoveNodeByUtilityKernelPiS_S_PffS0_S_S0_S_fi' function";

	Node0x5327eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%11:\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !6\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = udiv i32 %19, %16\l  %23 = mul i32 %22, %16\l  %24 = icmp ugt i32 %19, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %29 = add i32 %27, %20\l  %30 = mul i32 %29, %16\l  %31 = add i32 %30, %28\l  %32 = icmp slt i32 %31, %10\l  br i1 %32, label %33, label %120\l|{<s0>T|<s1>F}}"];
	Node0x5327eb0:s0 -> Node0x532a490;
	Node0x5327eb0:s1 -> Node0x532a520;
	Node0x532a490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%33:\l33:                                               \l  %34 = sext i32 %31 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %34\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %37 = icmp eq i32 %36, 1\l  br i1 %37, label %38, label %120\l|{<s0>T|<s1>F}}"];
	Node0x532a490:s0 -> Node0x532c1b0;
	Node0x532a490:s1 -> Node0x532a520;
	Node0x532c1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%38:\l38:                                               \l  %39 = getelementptr inbounds float, float addrspace(1)* %3, i64 %34\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %41 = fcmp contract ogt float %40, 0.000000e+00\l  %42 = fdiv contract float %9, %40\l  %43 = fcmp contract ogt float %42, %4\l  %44 = select i1 %41, i1 %43, i1 false\l  br i1 %44, label %45, label %120\l|{<s0>T|<s1>F}}"];
	Node0x532c1b0:s0 -> Node0x532d1f0;
	Node0x532c1b0:s1 -> Node0x532a520;
	Node0x532d1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%45:\l45:                                               \l  store i32 0, i32 addrspace(1)* %35, align 4, !tbaa !16\l  %46 = getelementptr inbounds float, float addrspace(1)* %5, i64 %34\l  store float 0.000000e+00, float addrspace(1)* %46, align 4, !tbaa !20\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %34\l  store i32 0, i32 addrspace(1)* %47, align 4, !tbaa !16\l  %48 = getelementptr inbounds float, float addrspace(1)* %7, i64 %34\l  store float 0.000000e+00, float addrspace(1)* %48, align 4, !tbaa !20\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %34\l  store i32 0, i32 addrspace(1)* %49, align 4, !tbaa !16\l  store float 0.000000e+00, float addrspace(1)* %39, align 4, !tbaa !20\l  %50 = icmp sgt i32 %10, 0\l  br i1 %50, label %51, label %120\l|{<s0>T|<s1>F}}"];
	Node0x532d1f0:s0 -> Node0x532e620;
	Node0x532d1f0:s1 -> Node0x532a520;
	Node0x532e620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%51:\l51:                                               \l  %52 = mul nsw i32 %31, %10\l  %53 = and i32 %10, 3\l  %54 = icmp ult i32 %10, 4\l  br i1 %54, label %102, label %55\l|{<s0>T|<s1>F}}"];
	Node0x532e620:s0 -> Node0x532e900;
	Node0x532e620:s1 -> Node0x532e950;
	Node0x532e950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%55:\l55:                                               \l  %56 = and i32 %10, -4\l  br label %57\l}"];
	Node0x532e950 -> Node0x532eb50;
	Node0x532eb50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%57:\l57:                                               \l  %58 = phi i32 [ 0, %55 ], [ %99, %57 ]\l  %59 = phi i32 [ 0, %55 ], [ %100, %57 ]\l  %60 = add nsw i32 %58, %52\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %61\l  store i32 0, i32 addrspace(1)* %62, align 4, !tbaa !16\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %61\l  store i32 0, i32 addrspace(1)* %63, align 4, !tbaa !16\l  %64 = mul nsw i32 %58, %10\l  %65 = add nsw i32 %64, %31\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %66\l  store i32 0, i32 addrspace(1)* %67, align 4, !tbaa !16\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %66\l  store i32 0, i32 addrspace(1)* %68, align 4, !tbaa !16\l  %69 = or i32 %58, 1\l  %70 = add nsw i32 %69, %52\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %71\l  store i32 0, i32 addrspace(1)* %72, align 4, !tbaa !16\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %71\l  store i32 0, i32 addrspace(1)* %73, align 4, !tbaa !16\l  %74 = mul nsw i32 %69, %10\l  %75 = add nsw i32 %74, %31\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %76\l  store i32 0, i32 addrspace(1)* %77, align 4, !tbaa !16\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %76\l  store i32 0, i32 addrspace(1)* %78, align 4, !tbaa !16\l  %79 = or i32 %58, 2\l  %80 = add nsw i32 %79, %52\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %81\l  store i32 0, i32 addrspace(1)* %82, align 4, !tbaa !16\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %81\l  store i32 0, i32 addrspace(1)* %83, align 4, !tbaa !16\l  %84 = mul nsw i32 %79, %10\l  %85 = add nsw i32 %84, %31\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %86\l  store i32 0, i32 addrspace(1)* %87, align 4, !tbaa !16\l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %86\l  store i32 0, i32 addrspace(1)* %88, align 4, !tbaa !16\l  %89 = or i32 %58, 3\l  %90 = add nsw i32 %89, %52\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %91\l  store i32 0, i32 addrspace(1)* %92, align 4, !tbaa !16\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %91\l  store i32 0, i32 addrspace(1)* %93, align 4, !tbaa !16\l  %94 = mul nsw i32 %89, %10\l  %95 = add nsw i32 %94, %31\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %96\l  store i32 0, i32 addrspace(1)* %97, align 4, !tbaa !16\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %96\l  store i32 0, i32 addrspace(1)* %98, align 4, !tbaa !16\l  %99 = add nuw nsw i32 %58, 4\l  %100 = add i32 %59, 4\l  %101 = icmp eq i32 %100, %56\l  br i1 %101, label %102, label %57, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x532eb50:s0 -> Node0x532e900;
	Node0x532eb50:s1 -> Node0x532eb50;
	Node0x532e900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%102:\l102:                                              \l  %103 = phi i32 [ 0, %51 ], [ %99, %57 ]\l  %104 = icmp eq i32 %53, 0\l  br i1 %104, label %120, label %105\l|{<s0>T|<s1>F}}"];
	Node0x532e900:s0 -> Node0x532a520;
	Node0x532e900:s1 -> Node0x53313c0;
	Node0x53313c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  %106 = phi i32 [ %117, %105 ], [ %103, %102 ]\l  %107 = phi i32 [ %118, %105 ], [ 0, %102 ]\l  %108 = add nsw i32 %106, %52\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %109\l  store i32 0, i32 addrspace(1)* %110, align 4, !tbaa !16\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %109\l  store i32 0, i32 addrspace(1)* %111, align 4, !tbaa !16\l  %112 = mul nsw i32 %106, %10\l  %113 = add nsw i32 %112, %31\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %114\l  store i32 0, i32 addrspace(1)* %115, align 4, !tbaa !16\l  %116 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %114\l  store i32 0, i32 addrspace(1)* %116, align 4, !tbaa !16\l  %117 = add nuw nsw i32 %106, 1\l  %118 = add i32 %107, 1\l  %119 = icmp eq i32 %118, %53\l  br i1 %119, label %120, label %105, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x53313c0:s0 -> Node0x532a520;
	Node0x53313c0:s1 -> Node0x53313c0;
	Node0x532a520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%120:\l120:                                              \l  ret void\l}"];
}
