digraph "CFG for '_Z30CutSubImageKernel_SingleParamsPfS_fffbiiii' function" {
	label="CFG for '_Z30CutSubImageKernel_SingleParamsPfS_fffbiiii' function";

	Node0x566b5d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !6\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = udiv i32 %18, %15\l  %22 = mul i32 %21, %15\l  %23 = icmp ugt i32 %18, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %20\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %28 = add i32 %26, %19\l  %29 = mul i32 %28, %15\l  %30 = add i32 %29, %27\l  %31 = mul nsw i32 %9, %8\l  %32 = icmp slt i32 %30, %31\l  br i1 %32, label %33, label %104\l|{<s0>T|<s1>F}}"];
	Node0x566b5d0:s0 -> Node0x566d9a0;
	Node0x566b5d0:s1 -> Node0x566da30;
	Node0x566d9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%33:\l33:                                               \l  %34 = add nsw i32 %6, -1\l  %35 = add nsw i32 %7, -1\l  %36 = tail call i32 @llvm.smin.i32(i32 %34, i32 %35)\l  %37 = sitofp i32 %36 to float\l  %38 = fmul contract float %37, %4\l  %39 = fptosi float %38 to i32\l  %40 = tail call i32 @llvm.smax.i32(i32 %39, i32 1)\l  %41 = tail call i32 @llvm.smin.i32(i32 %36, i32 %40)\l  %42 = sitofp i32 %6 to float\l  %43 = fadd contract float %2, 1.000000e+00\l  %44 = fmul contract float %43, %42\l  %45 = fmul contract float %44, 5.000000e-01\l  %46 = fptosi float %45 to i32\l  %47 = sdiv i32 %41, 2\l  %48 = sub nsw i32 %46, %47\l  %49 = sitofp i32 %7 to float\l  %50 = fadd contract float %3, 1.000000e+00\l  %51 = fmul contract float %50, %49\l  %52 = fmul contract float %51, 5.000000e-01\l  %53 = fptosi float %52 to i32\l  %54 = sub nsw i32 %53, %47\l  br i1 %5, label %55, label %63\l|{<s0>T|<s1>F}}"];
	Node0x566d9a0:s0 -> Node0x5670680;
	Node0x566d9a0:s1 -> Node0x5670710;
	Node0x5670680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%55:\l55:                                               \l  %56 = tail call i32 @llvm.smax.i32(i32 %48, i32 1)\l  %57 = tail call i32 @llvm.smax.i32(i32 %54, i32 1)\l  %58 = xor i32 %41, -1\l  %59 = add i32 %58, %6\l  %60 = tail call i32 @llvm.smin.i32(i32 %56, i32 %59)\l  %61 = add i32 %58, %7\l  %62 = tail call i32 @llvm.smin.i32(i32 %57, i32 %61)\l  br label %63\l}"];
	Node0x5670680 -> Node0x5670710;
	Node0x5670710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%63:\l63:                                               \l  %64 = phi i32 [ %62, %55 ], [ %54, %33 ]\l  %65 = phi i32 [ %60, %55 ], [ %48, %33 ]\l  %66 = freeze i32 %30\l  %67 = freeze i32 %8\l  %68 = sdiv i32 %66, %67\l  %69 = mul i32 %68, %67\l  %70 = sub i32 %66, %69\l  %71 = add nsw i32 %41, -1\l  %72 = sitofp i32 %71 to float\l  %73 = add nsw i32 %8, -1\l  %74 = sitofp i32 %73 to float\l  %75 = fdiv contract float %72, %74\l  %76 = sitofp i32 %70 to float\l  %77 = fmul contract float %75, %76\l  %78 = fptosi float %77 to i32\l  %79 = add i32 %65, %78\l  %80 = icmp sgt i32 %79, -1\l  br i1 %80, label %81, label %104\l|{<s0>T|<s1>F}}"];
	Node0x5670710:s0 -> Node0x5671a00;
	Node0x5670710:s1 -> Node0x566da30;
	Node0x5671a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%81:\l81:                                               \l  %82 = add nsw i32 %9, -1\l  %83 = sitofp i32 %82 to float\l  %84 = fdiv contract float %72, %83\l  %85 = sitofp i32 %68 to float\l  %86 = fmul contract float %84, %85\l  %87 = fptosi float %86 to i32\l  %88 = add nsw i32 %64, %87\l  %89 = icmp sgt i32 %88, -1\l  %90 = icmp slt i32 %79, %6\l  %91 = select i1 %89, i1 %90, i1 false\l  %92 = icmp slt i32 %88, %7\l  %93 = select i1 %91, i1 %92, i1 false\l  br i1 %93, label %94, label %104\l|{<s0>T|<s1>F}}"];
	Node0x5671a00:s0 -> Node0x56721a0;
	Node0x5671a00:s1 -> Node0x566da30;
	Node0x56721a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%94:\l94:                                               \l  %95 = mul nsw i32 %88, %6\l  %96 = add i32 %79, %95\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %100 = mul nsw i32 %68, %8\l  %101 = add nsw i32 %100, %70\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %1, i64 %102\l  store float %99, float addrspace(1)* %103, align 4, !tbaa !16\l  br label %104\l}"];
	Node0x56721a0 -> Node0x566da30;
	Node0x566da30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%104:\l104:                                              \l  ret void\l}"];
}
