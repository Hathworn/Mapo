digraph "CFG for '_Z18ComputeQuadsKernelPfS_ifPiii' function" {
	label="CFG for '_Z18ComputeQuadsKernelPfS_ifPiii' function";

	Node0x5b2e4c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = udiv i32 %15, %12\l  %19 = mul i32 %18, %12\l  %20 = icmp ugt i32 %15, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %17\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %25 = add i32 %23, %16\l  %26 = mul i32 %25, %12\l  %27 = add i32 %26, %24\l  %28 = icmp slt i32 %27, %6\l  br i1 %28, label %29, label %247\l|{<s0>T|<s1>F}}"];
	Node0x5b2e4c0:s0 -> Node0x5b30d30;
	Node0x5b2e4c0:s1 -> Node0x5b30dc0;
	Node0x5b30d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %27, 3\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %34 = add nsw i32 %30, 1\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %38 = add nsw i32 %30, 2\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %42 = fmul contract float %3, 5.000000e-01\l  %43 = sext i32 %27 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %43\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !20, !amdgpu.noclobber\l... !5\l  %46 = icmp eq i32 %45, 0\l  %47 = select i1 %46, float 0.000000e+00, float %42\l  %48 = mul i32 %6, 36\l  %49 = add nsw i32 %48, %2\l  %50 = mul nsw i32 %6, %5\l  %51 = sitofp i32 %50 to float\l  %52 = fsub contract float %33, %47\l  %53 = mul nsw i32 %27, 36\l  %54 = add nsw i32 %53, %2\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %55\l  store float %52, float addrspace(1)* %56, align 4, !tbaa !16\l  %57 = fadd contract float %37, %47\l  %58 = add nsw i32 %54, 1\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  store float %57, float addrspace(1)* %60, align 4, !tbaa !16\l  %61 = add nsw i32 %54, 2\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %1, i64 %62\l  store float %41, float addrspace(1)* %63, align 4, !tbaa !16\l  %64 = mul nsw i32 %27, %5\l  %65 = sitofp i32 %64 to float\l  %66 = fdiv contract float %65, %51\l  %67 = mul nsw i32 %27, 24\l  %68 = add nsw i32 %49, %67\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %1, i64 %69\l  store float %66, float addrspace(1)* %70, align 4, !tbaa !16\l  %71 = add nsw i32 %68, 1\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %1, i64 %72\l  store float 0.000000e+00, float addrspace(1)* %73, align 4, !tbaa !16\l  %74 = add nsw i32 %54, 3\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %1, i64 %75\l  store float %52, float addrspace(1)* %76, align 4, !tbaa !16\l  %77 = fsub contract float %37, %47\l  %78 = add nsw i32 %54, 4\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %1, i64 %79\l  store float %77, float addrspace(1)* %80, align 4, !tbaa !16\l  %81 = add nsw i32 %54, 5\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %1, i64 %82\l  store float %41, float addrspace(1)* %83, align 4, !tbaa !16\l  %84 = add nsw i32 %68, 2\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %1, i64 %85\l  store float %66, float addrspace(1)* %86, align 4, !tbaa !16\l  %87 = add nsw i32 %68, 3\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %1, i64 %88\l  store float 1.000000e+00, float addrspace(1)* %89, align 4, !tbaa !16\l  %90 = fadd contract float %33, %47\l  %91 = add nsw i32 %54, 6\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %1, i64 %92\l  store float %90, float addrspace(1)* %93, align 4, !tbaa !16\l  %94 = add nsw i32 %54, 7\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %1, i64 %95\l  store float %77, float addrspace(1)* %96, align 4, !tbaa !16\l  %97 = add nsw i32 %54, 8\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %1, i64 %98\l  store float %41, float addrspace(1)* %99, align 4, !tbaa !16\l  %100 = add nsw i32 %27, 1\l  %101 = mul nsw i32 %100, %5\l  %102 = sitofp i32 %101 to float\l  %103 = fdiv contract float %102, %51\l  %104 = add nsw i32 %68, 4\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %1, i64 %105\l  store float %103, float addrspace(1)* %106, align 4, !tbaa !16\l  %107 = add nsw i32 %68, 5\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %1, i64 %108\l  store float 1.000000e+00, float addrspace(1)* %109, align 4, !tbaa !16\l  %110 = add nsw i32 %54, 9\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %1, i64 %111\l  store float %90, float addrspace(1)* %112, align 4, !tbaa !16\l  %113 = add nsw i32 %54, 10\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %1, i64 %114\l  store float %57, float addrspace(1)* %115, align 4, !tbaa !16\l  %116 = add nsw i32 %54, 11\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %1, i64 %117\l  store float %41, float addrspace(1)* %118, align 4, !tbaa !16\l  %119 = add nsw i32 %68, 6\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %1, i64 %120\l  store float %103, float addrspace(1)* %121, align 4, !tbaa !16\l  %122 = add nsw i32 %68, 7\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %1, i64 %123\l  store float 0.000000e+00, float addrspace(1)* %124, align 4, !tbaa !16\l  %125 = add nsw i32 %54, 12\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %1, i64 %126\l  store float %52, float addrspace(1)* %127, align 4, !tbaa !16\l  %128 = add nsw i32 %54, 13\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %1, i64 %129\l  store float %37, float addrspace(1)* %130, align 4, !tbaa !16\l  %131 = fadd contract float %41, %47\l  %132 = add nsw i32 %54, 14\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %1, i64 %133\l  store float %131, float addrspace(1)* %134, align 4, !tbaa !16\l  %135 = add nsw i32 %68, 8\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %1, i64 %136\l  store float %66, float addrspace(1)* %137, align 4, !tbaa !16\l  %138 = add nsw i32 %68, 9\l  %139 = sext i32 %138 to i64\l  %140 = getelementptr inbounds float, float addrspace(1)* %1, i64 %139\l  store float 1.000000e+00, float addrspace(1)* %140, align 4, !tbaa !16\l  %141 = add nsw i32 %54, 15\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %1, i64 %142\l  store float %52, float addrspace(1)* %143, align 4, !tbaa !16\l  %144 = add nsw i32 %54, 16\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %1, i64 %145\l  store float %37, float addrspace(1)* %146, align 4, !tbaa !16\l  %147 = fsub contract float %41, %47\l  %148 = add nsw i32 %54, 17\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %1, i64 %149\l  store float %147, float addrspace(1)* %150, align 4, !tbaa !16\l  %151 = add nsw i32 %68, 10\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds float, float addrspace(1)* %1, i64 %152\l  store float %66, float addrspace(1)* %153, align 4, !tbaa !16\l  %154 = add nsw i32 %68, 11\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds float, float addrspace(1)* %1, i64 %155\l  store float 0.000000e+00, float addrspace(1)* %156, align 4, !tbaa !16\l  %157 = add nsw i32 %54, 18\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %1, i64 %158\l  store float %90, float addrspace(1)* %159, align 4, !tbaa !16\l  %160 = add nsw i32 %54, 19\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds float, float addrspace(1)* %1, i64 %161\l  store float %37, float addrspace(1)* %162, align 4, !tbaa !16\l  %163 = add nsw i32 %54, 20\l  %164 = sext i32 %163 to i64\l  %165 = getelementptr inbounds float, float addrspace(1)* %1, i64 %164\l  store float %147, float addrspace(1)* %165, align 4, !tbaa !16\l  %166 = add nsw i32 %68, 12\l  %167 = sext i32 %166 to i64\l  %168 = getelementptr inbounds float, float addrspace(1)* %1, i64 %167\l  store float %103, float addrspace(1)* %168, align 4, !tbaa !16\l  %169 = add nsw i32 %68, 13\l  %170 = sext i32 %169 to i64\l  %171 = getelementptr inbounds float, float addrspace(1)* %1, i64 %170\l  store float 0.000000e+00, float addrspace(1)* %171, align 4, !tbaa !16\l  %172 = add nsw i32 %54, 21\l  %173 = sext i32 %172 to i64\l  %174 = getelementptr inbounds float, float addrspace(1)* %1, i64 %173\l  store float %90, float addrspace(1)* %174, align 4, !tbaa !16\l  %175 = add nsw i32 %54, 22\l  %176 = sext i32 %175 to i64\l  %177 = getelementptr inbounds float, float addrspace(1)* %1, i64 %176\l  store float %37, float addrspace(1)* %177, align 4, !tbaa !16\l  %178 = add nsw i32 %54, 23\l  %179 = sext i32 %178 to i64\l  %180 = getelementptr inbounds float, float addrspace(1)* %1, i64 %179\l  store float %131, float addrspace(1)* %180, align 4, !tbaa !16\l  %181 = add nsw i32 %68, 14\l  %182 = sext i32 %181 to i64\l  %183 = getelementptr inbounds float, float addrspace(1)* %1, i64 %182\l  store float %103, float addrspace(1)* %183, align 4, !tbaa !16\l  %184 = add nsw i32 %68, 15\l  %185 = sext i32 %184 to i64\l  %186 = getelementptr inbounds float, float addrspace(1)* %1, i64 %185\l  store float 1.000000e+00, float addrspace(1)* %186, align 4, !tbaa !16\l  %187 = add nsw i32 %54, 24\l  %188 = sext i32 %187 to i64\l  %189 = getelementptr inbounds float, float addrspace(1)* %1, i64 %188\l  store float %33, float addrspace(1)* %189, align 4, !tbaa !16\l  %190 = add nsw i32 %54, 25\l  %191 = sext i32 %190 to i64\l  %192 = getelementptr inbounds float, float addrspace(1)* %1, i64 %191\l  store float %77, float addrspace(1)* %192, align 4, !tbaa !16\l  %193 = add nsw i32 %54, 26\l  %194 = sext i32 %193 to i64\l  %195 = getelementptr inbounds float, float addrspace(1)* %1, i64 %194\l  store float %131, float addrspace(1)* %195, align 4, !tbaa !16\l  %196 = add nsw i32 %68, 16\l  %197 = sext i32 %196 to i64\l  %198 = getelementptr inbounds float, float addrspace(1)* %1, i64 %197\l  store float %103, float addrspace(1)* %198, align 4, !tbaa !16\l  %199 = add nsw i32 %68, 17\l  %200 = sext i32 %199 to i64\l  %201 = getelementptr inbounds float, float addrspace(1)* %1, i64 %200\l  store float 1.000000e+00, float addrspace(1)* %201, align 4, !tbaa !16\l  %202 = add nsw i32 %54, 27\l  %203 = sext i32 %202 to i64\l  %204 = getelementptr inbounds float, float addrspace(1)* %1, i64 %203\l  store float %33, float addrspace(1)* %204, align 4, !tbaa !16\l  %205 = add nsw i32 %54, 28\l  %206 = sext i32 %205 to i64\l  %207 = getelementptr inbounds float, float addrspace(1)* %1, i64 %206\l  store float %77, float addrspace(1)* %207, align 4, !tbaa !16\l  %208 = add nsw i32 %54, 29\l  %209 = sext i32 %208 to i64\l  %210 = getelementptr inbounds float, float addrspace(1)* %1, i64 %209\l  store float %147, float addrspace(1)* %210, align 4, !tbaa !16\l  %211 = add nsw i32 %68, 18\l  %212 = sext i32 %211 to i64\l  %213 = getelementptr inbounds float, float addrspace(1)* %1, i64 %212\l  store float %66, float addrspace(1)* %213, align 4, !tbaa !16\l  %214 = add nsw i32 %68, 19\l  %215 = sext i32 %214 to i64\l  %216 = getelementptr inbounds float, float addrspace(1)* %1, i64 %215\l  store float 1.000000e+00, float addrspace(1)* %216, align 4, !tbaa !16\l  %217 = add nsw i32 %54, 30\l  %218 = sext i32 %217 to i64\l  %219 = getelementptr inbounds float, float addrspace(1)* %1, i64 %218\l  store float %33, float addrspace(1)* %219, align 4, !tbaa !16\l  %220 = add nsw i32 %54, 31\l  %221 = sext i32 %220 to i64\l  %222 = getelementptr inbounds float, float addrspace(1)* %1, i64 %221\l  store float %57, float addrspace(1)* %222, align 4, !tbaa !16\l  %223 = add nsw i32 %54, 32\l  %224 = sext i32 %223 to i64\l  %225 = getelementptr inbounds float, float addrspace(1)* %1, i64 %224\l  store float %147, float addrspace(1)* %225, align 4, !tbaa !16\l  %226 = add nsw i32 %68, 20\l  %227 = sext i32 %226 to i64\l  %228 = getelementptr inbounds float, float addrspace(1)* %1, i64 %227\l  store float %66, float addrspace(1)* %228, align 4, !tbaa !16\l  %229 = add nsw i32 %68, 21\l  %230 = sext i32 %229 to i64\l  %231 = getelementptr inbounds float, float addrspace(1)* %1, i64 %230\l  store float 0.000000e+00, float addrspace(1)* %231, align 4, !tbaa !16\l  %232 = add nsw i32 %54, 33\l  %233 = sext i32 %232 to i64\l  %234 = getelementptr inbounds float, float addrspace(1)* %1, i64 %233\l  store float %33, float addrspace(1)* %234, align 4, !tbaa !16\l  %235 = add nsw i32 %54, 34\l  %236 = sext i32 %235 to i64\l  %237 = getelementptr inbounds float, float addrspace(1)* %1, i64 %236\l  store float %57, float addrspace(1)* %237, align 4, !tbaa !16\l  %238 = add nsw i32 %54, 35\l  %239 = sext i32 %238 to i64\l  %240 = getelementptr inbounds float, float addrspace(1)* %1, i64 %239\l  store float %131, float addrspace(1)* %240, align 4, !tbaa !16\l  %241 = add nsw i32 %68, 22\l  %242 = sext i32 %241 to i64\l  %243 = getelementptr inbounds float, float addrspace(1)* %1, i64 %242\l  store float %103, float addrspace(1)* %243, align 4, !tbaa !16\l  %244 = add nsw i32 %68, 23\l  %245 = sext i32 %244 to i64\l  %246 = getelementptr inbounds float, float addrspace(1)* %1, i64 %245\l  store float 0.000000e+00, float addrspace(1)* %246, align 4, !tbaa !16\l  br label %247\l}"];
	Node0x5b30d30 -> Node0x5b30dc0;
	Node0x5b30dc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%247:\l247:                                              \l  ret void\l}"];
}
