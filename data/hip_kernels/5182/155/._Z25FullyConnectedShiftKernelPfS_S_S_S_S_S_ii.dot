digraph "CFG for '_Z25FullyConnectedShiftKernelPfS_S_S_S_S_S_ii' function" {
	label="CFG for '_Z25FullyConnectedShiftKernelPfS_S_S_S_S_S_ii' function";

	Node0x6294340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%9:\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !6\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = udiv i32 %17, %14\l  %21 = mul i32 %20, %14\l  %22 = icmp ugt i32 %17, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %19\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %27 = add i32 %25, %18\l  %28 = mul i32 %27, %14\l  %29 = add i32 %28, %26\l  %30 = icmp slt i32 %29, %8\l  br i1 %30, label %31, label %135\l|{<s0>T|<s1>F}}"];
	Node0x6294340:s0 -> Node0x62976c0;
	Node0x6294340:s1 -> Node0x6297750;
	Node0x62976c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%31:\l31:                                               \l  %32 = sext i32 %29 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %6, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %35 = fcmp contract une float %34, 0.000000e+00\l  br i1 %35, label %135, label %36\l|{<s0>T|<s1>F}}"];
	Node0x62976c0:s0 -> Node0x6297750;
	Node0x62976c0:s1 -> Node0x6298d80;
	Node0x6298d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%36:\l36:                                               \l  %37 = icmp sgt i32 %7, 0\l  br i1 %37, label %38, label %128\l|{<s0>T|<s1>F}}"];
	Node0x6298d80:s0 -> Node0x6298f50;
	Node0x6298d80:s1 -> Node0x6298fa0;
	Node0x6298f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%38:\l38:                                               \l  %39 = and i32 %7, 7\l  %40 = icmp ult i32 %7, 8\l  br i1 %40, label %112, label %41\l|{<s0>T|<s1>F}}"];
	Node0x6298f50:s0 -> Node0x6299260;
	Node0x6298f50:s1 -> Node0x62992b0;
	Node0x62992b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%41:\l41:                                               \l  %42 = and i32 %7, -8\l  br label %43\l}"];
	Node0x62992b0 -> Node0x62994b0;
	Node0x62994b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%43:\l43:                                               \l  %44 = phi i32 [ %29, %41 ], [ %109, %43 ]\l  %45 = phi i32 [ 0, %41 ], [ %110, %43 ]\l  %46 = sext i32 %44 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !16\l  %49 = getelementptr inbounds float, float addrspace(1)* %4, i64 %46\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !16\l  %51 = fadd contract float %48, %50\l  %52 = getelementptr inbounds float, float addrspace(1)* %2, i64 %46\l  store float %51, float addrspace(1)* %52, align 4, !tbaa !16\l  %53 = add nsw i32 %44, %8\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !16\l  %57 = getelementptr inbounds float, float addrspace(1)* %4, i64 %54\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !16\l  %59 = fadd contract float %56, %58\l  %60 = getelementptr inbounds float, float addrspace(1)* %2, i64 %54\l  store float %59, float addrspace(1)* %60, align 4, !tbaa !16\l  %61 = add nsw i32 %53, %8\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !16\l  %65 = getelementptr inbounds float, float addrspace(1)* %4, i64 %62\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !16\l  %67 = fadd contract float %64, %66\l  %68 = getelementptr inbounds float, float addrspace(1)* %2, i64 %62\l  store float %67, float addrspace(1)* %68, align 4, !tbaa !16\l  %69 = add nsw i32 %61, %8\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !16\l  %73 = getelementptr inbounds float, float addrspace(1)* %4, i64 %70\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !16\l  %75 = fadd contract float %72, %74\l  %76 = getelementptr inbounds float, float addrspace(1)* %2, i64 %70\l  store float %75, float addrspace(1)* %76, align 4, !tbaa !16\l  %77 = add nsw i32 %69, %8\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !16\l  %81 = getelementptr inbounds float, float addrspace(1)* %4, i64 %78\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !16\l  %83 = fadd contract float %80, %82\l  %84 = getelementptr inbounds float, float addrspace(1)* %2, i64 %78\l  store float %83, float addrspace(1)* %84, align 4, !tbaa !16\l  %85 = add nsw i32 %77, %8\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !16\l  %89 = getelementptr inbounds float, float addrspace(1)* %4, i64 %86\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !16\l  %91 = fadd contract float %88, %90\l  %92 = getelementptr inbounds float, float addrspace(1)* %2, i64 %86\l  store float %91, float addrspace(1)* %92, align 4, !tbaa !16\l  %93 = add nsw i32 %85, %8\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %0, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !16\l  %97 = getelementptr inbounds float, float addrspace(1)* %4, i64 %94\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !16\l  %99 = fadd contract float %96, %98\l  %100 = getelementptr inbounds float, float addrspace(1)* %2, i64 %94\l  store float %99, float addrspace(1)* %100, align 4, !tbaa !16\l  %101 = add nsw i32 %93, %8\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %0, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !16\l  %105 = getelementptr inbounds float, float addrspace(1)* %4, i64 %102\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !16\l  %107 = fadd contract float %104, %106\l  %108 = getelementptr inbounds float, float addrspace(1)* %2, i64 %102\l  store float %107, float addrspace(1)* %108, align 4, !tbaa !16\l  %109 = add nsw i32 %101, %8\l  %110 = add i32 %45, 8\l  %111 = icmp eq i32 %110, %42\l  br i1 %111, label %112, label %43, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x62994b0:s0 -> Node0x6299260;
	Node0x62994b0:s1 -> Node0x62994b0;
	Node0x6299260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%112:\l112:                                              \l  %113 = phi i32 [ %29, %38 ], [ %109, %43 ]\l  %114 = icmp eq i32 %39, 0\l  br i1 %114, label %128, label %115\l|{<s0>T|<s1>F}}"];
	Node0x6299260:s0 -> Node0x6298fa0;
	Node0x6299260:s1 -> Node0x629ca80;
	Node0x629ca80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%115:\l115:                                              \l  %116 = phi i32 [ %125, %115 ], [ %113, %112 ]\l  %117 = phi i32 [ %126, %115 ], [ 0, %112 ]\l  %118 = sext i32 %116 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %0, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !16\l  %121 = getelementptr inbounds float, float addrspace(1)* %4, i64 %118\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !16\l  %123 = fadd contract float %120, %122\l  %124 = getelementptr inbounds float, float addrspace(1)* %2, i64 %118\l  store float %123, float addrspace(1)* %124, align 4, !tbaa !16\l  %125 = add nsw i32 %116, %8\l  %126 = add i32 %117, 1\l  %127 = icmp eq i32 %126, %39\l  br i1 %127, label %128, label %115, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x629ca80:s0 -> Node0x6298fa0;
	Node0x629ca80:s1 -> Node0x629ca80;
	Node0x6298fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%128:\l128:                                              \l  %129 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !16\l  %131 = getelementptr inbounds float, float addrspace(1)* %5, i64 %32\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !16\l  %133 = fsub contract float %130, %132\l  %134 = getelementptr inbounds float, float addrspace(1)* %3, i64 %32\l  store float %133, float addrspace(1)* %134, align 4, !tbaa !16\l  br label %135\l}"];
	Node0x6298fa0 -> Node0x6297750;
	Node0x6297750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%135:\l135:                                              \l  ret void\l}"];
}
