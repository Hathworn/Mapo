digraph "CFG for '_Z40FullyConnectedEstimateLearningRateKernelPfS_S_S_S_S_S_S_S_S_S_ii' function" {
	label="CFG for '_Z40FullyConnectedEstimateLearningRateKernelPfS_S_S_S_S_S_S_S_S_S_ii' function";

	Node0x4a7baf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#dc5d4a70",label="{%13:\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = getelementptr inbounds i8, i8 addrspace(4)* %14, i64 12\l  %20 = bitcast i8 addrspace(4)* %19 to i32 addrspace(4)*\l  %21 = load i32, i32 addrspace(4)* %20, align 4, !tbaa !6\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %24 = udiv i32 %21, %18\l  %25 = mul i32 %24, %18\l  %26 = icmp ugt i32 %21, %25\l  %27 = zext i1 %26 to i32\l  %28 = add i32 %24, %27\l  %29 = mul i32 %28, %23\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %31 = add i32 %29, %22\l  %32 = mul i32 %31, %18\l  %33 = add i32 %32, %30\l  %34 = icmp slt i32 %33, %12\l  br i1 %34, label %35, label %114\l|{<s0>T|<s1>F}}"];
	Node0x4a7baf0:s0 -> Node0x4a7d3e0;
	Node0x4a7baf0:s1 -> Node0x4a7f360;
	Node0x4a7d3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%35:\l35:                                               \l  %36 = sext i32 %33 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %10, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %39 = fcmp contract une float %38, 0.000000e+00\l  br i1 %39, label %114, label %40\l|{<s0>T|<s1>F}}"];
	Node0x4a7d3e0:s0 -> Node0x4a7f360;
	Node0x4a7d3e0:s1 -> Node0x4a80890;
	Node0x4a80890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%40:\l40:                                               \l  %41 = icmp sgt i32 %11, 0\l  br i1 %41, label %42, label %100\l|{<s0>T|<s1>F}}"];
	Node0x4a80890:s0 -> Node0x4a80a60;
	Node0x4a80890:s1 -> Node0x4a80ab0;
	Node0x4a80a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%42:\l42:                                               \l  %43 = and i32 %11, 1\l  %44 = icmp eq i32 %11, 1\l  br i1 %44, label %82, label %45\l|{<s0>T|<s1>F}}"];
	Node0x4a80a60:s0 -> Node0x4a80d10;
	Node0x4a80a60:s1 -> Node0x4a80d60;
	Node0x4a80d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%45:\l45:                                               \l  %46 = and i32 %11, -2\l  br label %47\l}"];
	Node0x4a80d60 -> Node0x4a80f60;
	Node0x4a80f60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi i32 [ %33, %45 ], [ %79, %47 ]\l  %49 = phi i32 [ 0, %45 ], [ %80, %47 ]\l  %50 = sext i32 %48 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %6, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !16\l  %53 = getelementptr inbounds float, float addrspace(1)* %8, i64 %50\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !16\l  %55 = fdiv contract float %52, %54\l  %56 = getelementptr inbounds float, float addrspace(1)* %2, i64 %50\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !16\l  %58 = fmul contract float %57, %57\l  %59 = getelementptr inbounds float, float addrspace(1)* %4, i64 %50\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !16\l  %61 = fdiv contract float %58, %60\l  %62 = fmul contract float %55, %61\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  store float %62, float addrspace(1)* %63, align 4, !tbaa !16\l  %64 = add nsw i32 %48, %12\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %6, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !16\l  %68 = getelementptr inbounds float, float addrspace(1)* %8, i64 %65\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !16\l  %70 = fdiv contract float %67, %69\l  %71 = getelementptr inbounds float, float addrspace(1)* %2, i64 %65\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !16\l  %73 = fmul contract float %72, %72\l  %74 = getelementptr inbounds float, float addrspace(1)* %4, i64 %65\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !16\l  %76 = fdiv contract float %73, %75\l  %77 = fmul contract float %70, %76\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %65\l  store float %77, float addrspace(1)* %78, align 4, !tbaa !16\l  %79 = add nsw i32 %64, %12\l  %80 = add i32 %49, 2\l  %81 = icmp eq i32 %80, %46\l  br i1 %81, label %82, label %47, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4a80f60:s0 -> Node0x4a80d10;
	Node0x4a80f60:s1 -> Node0x4a80f60;
	Node0x4a80d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%82:\l82:                                               \l  %83 = phi i32 [ %33, %42 ], [ %79, %47 ]\l  %84 = icmp eq i32 %43, 0\l  br i1 %84, label %100, label %85\l|{<s0>T|<s1>F}}"];
	Node0x4a80d10:s0 -> Node0x4a80ab0;
	Node0x4a80d10:s1 -> Node0x4a82fb0;
	Node0x4a82fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%85:\l85:                                               \l  %86 = sext i32 %83 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %6, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !16\l  %89 = getelementptr inbounds float, float addrspace(1)* %8, i64 %86\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !16\l  %91 = fdiv contract float %88, %90\l  %92 = getelementptr inbounds float, float addrspace(1)* %2, i64 %86\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !16\l  %94 = fmul contract float %93, %93\l  %95 = getelementptr inbounds float, float addrspace(1)* %4, i64 %86\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !16\l  %97 = fdiv contract float %94, %96\l  %98 = fmul contract float %91, %97\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  store float %98, float addrspace(1)* %99, align 4, !tbaa !16\l  br label %100\l}"];
	Node0x4a82fb0 -> Node0x4a80ab0;
	Node0x4a80ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%100:\l100:                                              \l  %101 = getelementptr inbounds float, float addrspace(1)* %7, i64 %36\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !16\l  %103 = getelementptr inbounds float, float addrspace(1)* %9, i64 %36\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !16\l  %105 = fdiv contract float %102, %104\l  %106 = getelementptr inbounds float, float addrspace(1)* %3, i64 %36\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !16\l  %108 = fmul contract float %107, %107\l  %109 = getelementptr inbounds float, float addrspace(1)* %5, i64 %36\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !16\l  %111 = fdiv contract float %108, %110\l  %112 = fmul contract float %105, %111\l  %113 = getelementptr inbounds float, float addrspace(1)* %1, i64 %36\l  store float %112, float addrspace(1)* %113, align 4, !tbaa !16\l  br label %114\l}"];
	Node0x4a80ab0 -> Node0x4a7f360;
	Node0x4a7f360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#dc5d4a70",label="{%114:\l114:                                              \l  ret void\l}"];
}
