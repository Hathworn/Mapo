digraph "CFG for '_Z19ComputeCubes2KernelPfS_ifS_S_Pifi' function" {
	label="CFG for '_Z19ComputeCubes2KernelPfS_ifS_S_Pifi' function";

	Node0x6119420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !6\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = udiv i32 %17, %14\l  %21 = mul i32 %20, %14\l  %22 = icmp ugt i32 %17, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %19\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %27 = add i32 %25, %18\l  %28 = mul i32 %27, %14\l  %29 = add i32 %28, %26\l  %30 = mul nsw i32 %8, 6\l  %31 = icmp slt i32 %29, %30\l  br i1 %31, label %32, label %241\l|{<s0>T|<s1>F}}"];
	Node0x6119420:s0 -> Node0x611b8c0;
	Node0x6119420:s1 -> Node0x611b950;
	Node0x611b8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = freeze i32 %29\l  %34 = sdiv i32 %33, 6\l  %35 = sitofp i32 %34 to float\l  %36 = mul i32 %34, 6\l  %37 = sub i32 %33, %36\l  %38 = mul nsw i32 %34, 3\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %42 = add nsw i32 %38, 1\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %46 = add nsw i32 %38, 2\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %50 = sext i32 %34 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !20, !amdgpu.noclobber\l... !5\l  %53 = icmp eq i32 %52, 1\l  %54 = uitofp i1 %53 to float\l  %55 = fmul contract float %54, 5.000000e-01\l  %56 = fmul contract float %55, %3\l  %57 = mul i32 %8, 72\l  %58 = add nsw i32 %57, %2\l  %59 = sitofp i32 %8 to float\l  %60 = fmul contract float %59, %7\l  %61 = mul nsw i32 %37, 12\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds [72 x float], [72 x float] addrspace(4)*\l... @operationMaskConstant, i64 0, i64 %62\l  %64 = load float, float addrspace(4)* %63, align 16, !tbaa !16\l  %65 = fmul contract float %64, %56\l  %66 = fadd contract float %41, %65\l  %67 = mul nsw i32 %34, 72\l  %68 = add nsw i32 %67, %2\l  %69 = add nsw i32 %68, %61\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %1, i64 %70\l  store float %66, float addrspace(1)* %71, align 4, !tbaa !16\l  %72 = or i32 %61, 1\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds [72 x float], [72 x float] addrspace(4)*\l... @operationMaskConstant, i64 0, i64 %73\l  %75 = load float, float addrspace(4)* %74, align 4, !tbaa !16\l  %76 = fmul contract float %75, %56\l  %77 = fadd contract float %45, %76\l  %78 = add nsw i32 %69, 1\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %1, i64 %79\l  store float %77, float addrspace(1)* %80, align 4, !tbaa !16\l  %81 = or i32 %61, 2\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds [72 x float], [72 x float] addrspace(4)*\l... @operationMaskConstant, i64 0, i64 %82\l  %84 = load float, float addrspace(4)* %83, align 8, !tbaa !16\l  %85 = fmul contract float %56, %84\l  %86 = fadd contract float %49, %85\l  %87 = add nsw i32 %69, 2\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %1, i64 %88\l  store float %86, float addrspace(1)* %89, align 4, !tbaa !16\l  %90 = or i32 %61, 3\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds [72 x float], [72 x float] addrspace(4)*\l... @operationMaskConstant, i64 0, i64 %91\l  %93 = load float, float addrspace(4)* %92, align 4, !tbaa !16\l  %94 = fmul contract float %56, %93\l  %95 = fadd contract float %41, %94\l  %96 = add nsw i32 %69, 3\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %1, i64 %97\l  store float %95, float addrspace(1)* %98, align 4, !tbaa !16\l  %99 = add nsw i32 %61, 4\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds [72 x float], [72 x float] addrspace(4)*\l... @operationMaskConstant, i64 0, i64 %100\l  %102 = load float, float addrspace(4)* %101, align 16, !tbaa !16\l  %103 = fmul contract float %56, %102\l  %104 = fadd contract float %45, %103\l  %105 = add nsw i32 %69, 4\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %1, i64 %106\l  store float %104, float addrspace(1)* %107, align 4, !tbaa !16\l  %108 = add nsw i32 %61, 5\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds [72 x float], [72 x float] addrspace(4)*\l... @operationMaskConstant, i64 0, i64 %109\l  %111 = load float, float addrspace(4)* %110, align 4, !tbaa !16\l  %112 = fmul contract float %56, %111\l  %113 = fadd contract float %49, %112\l  %114 = add nsw i32 %69, 5\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %1, i64 %115\l  store float %113, float addrspace(1)* %116, align 4, !tbaa !16\l  %117 = add nsw i32 %61, 6\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds [72 x float], [72 x float] addrspace(4)*\l... @operationMaskConstant, i64 0, i64 %118\l  %120 = load float, float addrspace(4)* %119, align 8, !tbaa !16\l  %121 = fmul contract float %56, %120\l  %122 = fadd contract float %41, %121\l  %123 = add nsw i32 %69, 6\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %1, i64 %124\l  store float %122, float addrspace(1)* %125, align 4, !tbaa !16\l  %126 = add nsw i32 %61, 7\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds [72 x float], [72 x float] addrspace(4)*\l... @operationMaskConstant, i64 0, i64 %127\l  %129 = load float, float addrspace(4)* %128, align 4, !tbaa !16\l  %130 = fmul contract float %56, %129\l  %131 = fadd contract float %45, %130\l  %132 = add nsw i32 %69, 7\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %1, i64 %133\l  store float %131, float addrspace(1)* %134, align 4, !tbaa !16\l  %135 = add nsw i32 %61, 8\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds [72 x float], [72 x float] addrspace(4)*\l... @operationMaskConstant, i64 0, i64 %136\l  %138 = load float, float addrspace(4)* %137, align 16, !tbaa !16\l  %139 = fmul contract float %56, %138\l  %140 = fadd contract float %49, %139\l  %141 = add nsw i32 %69, 8\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %1, i64 %142\l  store float %140, float addrspace(1)* %143, align 4, !tbaa !16\l  %144 = add nsw i32 %61, 9\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds [72 x float], [72 x float] addrspace(4)*\l... @operationMaskConstant, i64 0, i64 %145\l  %147 = load float, float addrspace(4)* %146, align 4, !tbaa !16\l  %148 = fmul contract float %56, %147\l  %149 = fadd contract float %41, %148\l  %150 = add nsw i32 %69, 9\l  %151 = sext i32 %150 to i64\l  %152 = getelementptr inbounds float, float addrspace(1)* %1, i64 %151\l  store float %149, float addrspace(1)* %152, align 4, !tbaa !16\l  %153 = add nsw i32 %61, 10\l  %154 = sext i32 %153 to i64\l  %155 = getelementptr inbounds [72 x float], [72 x float] addrspace(4)*\l... @operationMaskConstant, i64 0, i64 %154\l  %156 = load float, float addrspace(4)* %155, align 8, !tbaa !16\l  %157 = fmul contract float %56, %156\l  %158 = fadd contract float %45, %157\l  %159 = add nsw i32 %69, 10\l  %160 = sext i32 %159 to i64\l  %161 = getelementptr inbounds float, float addrspace(1)* %1, i64 %160\l  store float %158, float addrspace(1)* %161, align 4, !tbaa !16\l  %162 = add nsw i32 %61, 11\l  %163 = sext i32 %162 to i64\l  %164 = getelementptr inbounds [72 x float], [72 x float] addrspace(4)*\l... @operationMaskConstant, i64 0, i64 %163\l  %165 = load float, float addrspace(4)* %164, align 4, !tbaa !16\l  %166 = fmul contract float %56, %165\l  %167 = fadd contract float %49, %166\l  %168 = add nsw i32 %69, 11\l  %169 = sext i32 %168 to i64\l  %170 = getelementptr inbounds float, float addrspace(1)* %1, i64 %169\l  store float %167, float addrspace(1)* %170, align 4, !tbaa !16\l  %171 = shl nsw i32 %37, 3\l  %172 = sext i32 %171 to i64\l  %173 = getelementptr inbounds [48 x float], [48 x float] addrspace(4)*\l... @cubeTexCoordinatesConstant, i64 0, i64 %172\l  %174 = load float, float addrspace(4)* %173, align 16, !tbaa !16\l  %175 = fadd contract float %174, %35\l  %176 = fmul contract float %175, %7\l  %177 = fdiv contract float %176, %60\l  %178 = mul nsw i32 %34, 48\l  %179 = add nsw i32 %58, %178\l  %180 = add nsw i32 %179, %171\l  %181 = sext i32 %180 to i64\l  %182 = getelementptr inbounds float, float addrspace(1)* %1, i64 %181\l  store float %177, float addrspace(1)* %182, align 4, !tbaa !16\l  %183 = add nuw nsw i32 %171, 1\l  %184 = sext i32 %183 to i64\l  %185 = getelementptr inbounds [48 x float], [48 x float] addrspace(4)*\l... @cubeTexCoordinatesConstant, i64 0, i64 %184\l  %186 = load float, float addrspace(4)* %185, align 4, !tbaa !16\l  %187 = add nsw i32 %180, 1\l  %188 = sext i32 %187 to i64\l  %189 = getelementptr inbounds float, float addrspace(1)* %1, i64 %188\l  store float %186, float addrspace(1)* %189, align 4, !tbaa !16\l  %190 = add nuw nsw i32 %171, 2\l  %191 = sext i32 %190 to i64\l  %192 = getelementptr inbounds [48 x float], [48 x float] addrspace(4)*\l... @cubeTexCoordinatesConstant, i64 0, i64 %191\l  %193 = load float, float addrspace(4)* %192, align 8, !tbaa !16\l  %194 = fadd contract float %193, %35\l  %195 = fmul contract float %194, %7\l  %196 = fdiv contract float %195, %60\l  %197 = add nsw i32 %180, 2\l  %198 = sext i32 %197 to i64\l  %199 = getelementptr inbounds float, float addrspace(1)* %1, i64 %198\l  store float %196, float addrspace(1)* %199, align 4, !tbaa !16\l  %200 = add nuw nsw i32 %171, 3\l  %201 = sext i32 %200 to i64\l  %202 = getelementptr inbounds [48 x float], [48 x float] addrspace(4)*\l... @cubeTexCoordinatesConstant, i64 0, i64 %201\l  %203 = load float, float addrspace(4)* %202, align 4, !tbaa !16\l  %204 = add nsw i32 %180, 3\l  %205 = sext i32 %204 to i64\l  %206 = getelementptr inbounds float, float addrspace(1)* %1, i64 %205\l  store float %203, float addrspace(1)* %206, align 4, !tbaa !16\l  %207 = add nuw nsw i32 %171, 4\l  %208 = sext i32 %207 to i64\l  %209 = getelementptr inbounds [48 x float], [48 x float] addrspace(4)*\l... @cubeTexCoordinatesConstant, i64 0, i64 %208\l  %210 = load float, float addrspace(4)* %209, align 16, !tbaa !16\l  %211 = fadd contract float %210, %35\l  %212 = fmul contract float %211, %7\l  %213 = fdiv contract float %212, %60\l  %214 = add nsw i32 %180, 4\l  %215 = sext i32 %214 to i64\l  %216 = getelementptr inbounds float, float addrspace(1)* %1, i64 %215\l  store float %213, float addrspace(1)* %216, align 4, !tbaa !16\l  %217 = add nuw nsw i32 %171, 5\l  %218 = sext i32 %217 to i64\l  %219 = getelementptr inbounds [48 x float], [48 x float] addrspace(4)*\l... @cubeTexCoordinatesConstant, i64 0, i64 %218\l  %220 = load float, float addrspace(4)* %219, align 4, !tbaa !16\l  %221 = add nsw i32 %180, 5\l  %222 = sext i32 %221 to i64\l  %223 = getelementptr inbounds float, float addrspace(1)* %1, i64 %222\l  store float %220, float addrspace(1)* %223, align 4, !tbaa !16\l  %224 = add nuw nsw i32 %171, 6\l  %225 = sext i32 %224 to i64\l  %226 = getelementptr inbounds [48 x float], [48 x float] addrspace(4)*\l... @cubeTexCoordinatesConstant, i64 0, i64 %225\l  %227 = load float, float addrspace(4)* %226, align 8, !tbaa !16\l  %228 = fadd contract float %227, %35\l  %229 = fmul contract float %228, %7\l  %230 = fdiv contract float %229, %60\l  %231 = add nsw i32 %180, 6\l  %232 = sext i32 %231 to i64\l  %233 = getelementptr inbounds float, float addrspace(1)* %1, i64 %232\l  store float %230, float addrspace(1)* %233, align 4, !tbaa !16\l  %234 = add nuw nsw i32 %171, 7\l  %235 = sext i32 %234 to i64\l  %236 = getelementptr inbounds [48 x float], [48 x float] addrspace(4)*\l... @cubeTexCoordinatesConstant, i64 0, i64 %235\l  %237 = load float, float addrspace(4)* %236, align 4, !tbaa !16\l  %238 = add nsw i32 %180, 7\l  %239 = sext i32 %238 to i64\l  %240 = getelementptr inbounds float, float addrspace(1)* %1, i64 %239\l  store float %237, float addrspace(1)* %240, align 4, !tbaa !16\l  br label %241\l}"];
	Node0x611b8c0 -> Node0x611b950;
	Node0x611b950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%241:\l241:                                              \l  ret void\l}"];
}
