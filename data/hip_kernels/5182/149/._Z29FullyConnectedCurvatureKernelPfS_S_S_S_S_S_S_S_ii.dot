digraph "CFG for '_Z29FullyConnectedCurvatureKernelPfS_S_S_S_S_S_S_S_ii' function" {
	label="CFG for '_Z29FullyConnectedCurvatureKernelPfS_S_S_S_S_S_S_S_ii' function";

	Node0x4d001f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%11:\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !6\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = udiv i32 %19, %16\l  %23 = mul i32 %22, %16\l  %24 = icmp ugt i32 %19, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %29 = add i32 %27, %20\l  %30 = mul i32 %29, %16\l  %31 = add i32 %30, %28\l  %32 = icmp slt i32 %31, %10\l  br i1 %32, label %33, label %129\l|{<s0>T|<s1>F}}"];
	Node0x4d001f0:s0 -> Node0x4d02560;
	Node0x4d001f0:s1 -> Node0x4d025f0;
	Node0x4d02560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%33:\l33:                                               \l  %34 = sext i32 %31 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %8, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %37 = fcmp contract une float %36, 0.000000e+00\l  br i1 %37, label %129, label %38\l|{<s0>T|<s1>F}}"];
	Node0x4d02560:s0 -> Node0x4d025f0;
	Node0x4d02560:s1 -> Node0x4d04cd0;
	Node0x4d04cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%38:\l38:                                               \l  %39 = icmp sgt i32 %9, 0\l  br i1 %39, label %40, label %118\l|{<s0>T|<s1>F}}"];
	Node0x4d04cd0:s0 -> Node0x4d04ea0;
	Node0x4d04cd0:s1 -> Node0x4d04ef0;
	Node0x4d04ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%40:\l40:                                               \l  %41 = and i32 %9, 3\l  %42 = icmp ult i32 %9, 4\l  br i1 %42, label %98, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4d04ea0:s0 -> Node0x4d05180;
	Node0x4d04ea0:s1 -> Node0x4d051d0;
	Node0x4d051d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%43:\l43:                                               \l  %44 = and i32 %9, -4\l  br label %45\l}"];
	Node0x4d051d0 -> Node0x4d053d0;
	Node0x4d053d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%45:\l45:                                               \l  %46 = phi i32 [ %31, %43 ], [ %95, %45 ]\l  %47 = phi i32 [ 0, %43 ], [ %96, %45 ]\l  %48 = sext i32 %46 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %4, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !16\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !16\l  %53 = getelementptr inbounds float, float addrspace(1)* %2, i64 %48\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !16\l  %55 = fsub contract float %52, %54\l  %56 = tail call float @llvm.fabs.f32(float %55)\l  %57 = fdiv contract float %56, %50\l  %58 = getelementptr inbounds float, float addrspace(1)* %6, i64 %48\l  store float %57, float addrspace(1)* %58, align 4, !tbaa !16\l  %59 = add nsw i32 %46, %10\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %4, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !16\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !16\l  %65 = getelementptr inbounds float, float addrspace(1)* %2, i64 %60\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !16\l  %67 = fsub contract float %64, %66\l  %68 = tail call float @llvm.fabs.f32(float %67)\l  %69 = fdiv contract float %68, %62\l  %70 = getelementptr inbounds float, float addrspace(1)* %6, i64 %60\l  store float %69, float addrspace(1)* %70, align 4, !tbaa !16\l  %71 = add nsw i32 %59, %10\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %4, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !16\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %72\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !16\l  %77 = getelementptr inbounds float, float addrspace(1)* %2, i64 %72\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !16\l  %79 = fsub contract float %76, %78\l  %80 = tail call float @llvm.fabs.f32(float %79)\l  %81 = fdiv contract float %80, %74\l  %82 = getelementptr inbounds float, float addrspace(1)* %6, i64 %72\l  store float %81, float addrspace(1)* %82, align 4, !tbaa !16\l  %83 = add nsw i32 %71, %10\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %4, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !16\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %84\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !16\l  %89 = getelementptr inbounds float, float addrspace(1)* %2, i64 %84\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !16\l  %91 = fsub contract float %88, %90\l  %92 = tail call float @llvm.fabs.f32(float %91)\l  %93 = fdiv contract float %92, %86\l  %94 = getelementptr inbounds float, float addrspace(1)* %6, i64 %84\l  store float %93, float addrspace(1)* %94, align 4, !tbaa !16\l  %95 = add nsw i32 %83, %10\l  %96 = add i32 %47, 4\l  %97 = icmp eq i32 %96, %44\l  br i1 %97, label %98, label %45, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4d053d0:s0 -> Node0x4d05180;
	Node0x4d053d0:s1 -> Node0x4d053d0;
	Node0x4d05180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%98:\l98:                                               \l  %99 = phi i32 [ %31, %40 ], [ %95, %45 ]\l  %100 = icmp eq i32 %41, 0\l  br i1 %100, label %118, label %101\l|{<s0>T|<s1>F}}"];
	Node0x4d05180:s0 -> Node0x4d04ef0;
	Node0x4d05180:s1 -> Node0x4d081b0;
	Node0x4d081b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%101:\l101:                                              \l  %102 = phi i32 [ %115, %101 ], [ %99, %98 ]\l  %103 = phi i32 [ %116, %101 ], [ 0, %98 ]\l  %104 = sext i32 %102 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %4, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !16\l  %107 = getelementptr inbounds float, float addrspace(1)* %0, i64 %104\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !16\l  %109 = getelementptr inbounds float, float addrspace(1)* %2, i64 %104\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !16\l  %111 = fsub contract float %108, %110\l  %112 = tail call float @llvm.fabs.f32(float %111)\l  %113 = fdiv contract float %112, %106\l  %114 = getelementptr inbounds float, float addrspace(1)* %6, i64 %104\l  store float %113, float addrspace(1)* %114, align 4, !tbaa !16\l  %115 = add nsw i32 %102, %10\l  %116 = add i32 %103, 1\l  %117 = icmp eq i32 %116, %41\l  br i1 %117, label %118, label %101, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4d081b0:s0 -> Node0x4d04ef0;
	Node0x4d081b0:s1 -> Node0x4d081b0;
	Node0x4d04ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%118:\l118:                                              \l  %119 = getelementptr inbounds float, float addrspace(1)* %5, i64 %34\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !16\l  %121 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !16\l  %123 = getelementptr inbounds float, float addrspace(1)* %3, i64 %34\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !16\l  %125 = fsub contract float %122, %124\l  %126 = tail call float @llvm.fabs.f32(float %125)\l  %127 = fdiv contract float %126, %120\l  %128 = getelementptr inbounds float, float addrspace(1)* %7, i64 %34\l  store float %127, float addrspace(1)* %128, align 4, !tbaa !16\l  br label %129\l}"];
	Node0x4d04ef0 -> Node0x4d025f0;
	Node0x4d025f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%129:\l129:                                              \l  ret void\l}"];
}
