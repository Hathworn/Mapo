digraph "CFG for '_Z20AdaptRefVectorKerneliPffffPiS_i' function" {
	label="CFG for '_Z20AdaptRefVectorKerneliPffffPiS_i' function";

	Node0x48e7d30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !6\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = udiv i32 %16, %13\l  %20 = mul i32 %19, %13\l  %21 = icmp ugt i32 %16, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %18\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %26 = add i32 %24, %17\l  %27 = mul i32 %26, %13\l  %28 = add i32 %27, %25\l  %29 = icmp slt i32 %28, %7\l  br i1 %29, label %30, label %63\l|{<s0>T|<s1>F}}"];
	Node0x48e7d30:s0 -> Node0x48ea580;
	Node0x48e7d30:s1 -> Node0x48ea610;
	Node0x48ea580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%30:\l30:                                               \l  %31 = fsub contract float %3, %2\l  %32 = fneg contract float %4\l  %33 = sext i32 %0 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %36 = sitofp i32 %35 to float\l  %37 = fmul contract float %32, %36\l  %38 = fmul float %37, 0x3FF7154760000000\l  %39 = tail call float @llvm.rint.f32(float %38)\l  %40 = fcmp ogt float %37, 0x40562E4300000000\l  %41 = fcmp olt float %37, 0xC059D1DA00000000\l  %42 = fneg float %38\l  %43 = tail call float @llvm.fma.f32(float %37, float 0x3FF7154760000000,\l... float %42)\l  %44 = tail call float @llvm.fma.f32(float %37, float 0x3E54AE0BE0000000,\l... float %43)\l  %45 = fsub float %38, %39\l  %46 = fadd float %44, %45\l  %47 = tail call float @llvm.exp2.f32(float %46)\l  %48 = fptosi float %39 to i32\l  %49 = tail call float @llvm.amdgcn.ldexp.f32(float %47, i32 %48)\l  %50 = select i1 %41, float 0.000000e+00, float %49\l  %51 = select i1 %40, float 0x7FF0000000000000, float %50\l  %52 = fmul contract float %31, %51\l  %53 = fadd contract float %52, %2\l  %54 = mul nsw i32 %7, %0\l  %55 = add nsw i32 %28, %54\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %6, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %59 = fmul contract float %58, %53\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %62 = fadd contract float %61, %59\l  store float %62, float addrspace(1)* %60, align 4, !tbaa !20\l  br label %63\l}"];
	Node0x48ea580 -> Node0x48ea610;
	Node0x48ea610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  ret void\l}"];
}
