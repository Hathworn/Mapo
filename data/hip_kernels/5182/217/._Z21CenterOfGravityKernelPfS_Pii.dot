digraph "CFG for '_Z21CenterOfGravityKernelPfS_Pii' function" {
	label="CFG for '_Z21CenterOfGravityKernelPfS_Pii' function";

	Node0x4b4fb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = udiv i32 %12, %9\l  %16 = mul i32 %15, %9\l  %17 = icmp ugt i32 %12, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %14\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %13\l  %23 = mul i32 %22, %9\l  %24 = add i32 %23, %21\l  %25 = icmp slt i32 %24, 1\l  br i1 %25, label %26, label %140\l|{<s0>T|<s1>F}}"];
	Node0x4b4fb90:s0 -> Node0x4b52420;
	Node0x4b4fb90:s1 -> Node0x4b524b0;
	Node0x4b52420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%26:\l26:                                               \l  %27 = icmp sgt i32 %3, 0\l  br i1 %27, label %28, label %66\l|{<s0>T|<s1>F}}"];
	Node0x4b52420:s0 -> Node0x4b526b0;
	Node0x4b52420:s1 -> Node0x4b52700;
	Node0x4b526b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%28:\l28:                                               \l  %29 = and i32 %3, 1\l  %30 = icmp eq i32 %3, 1\l  br i1 %30, label %33, label %31\l|{<s0>T|<s1>F}}"];
	Node0x4b526b0:s0 -> Node0x4b52960;
	Node0x4b526b0:s1 -> Node0x4b529b0;
	Node0x4b529b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%31:\l31:                                               \l  %32 = and i32 %3, -2\l  br label %77\l}"];
	Node0x4b529b0 -> Node0x4b51b90;
	Node0x4b52960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%33:\l33:                                               \l  %34 = phi float [ undef, %28 ], [ %133, %132 ]\l  %35 = phi float [ undef, %28 ], [ %134, %132 ]\l  %36 = phi float [ undef, %28 ], [ %135, %132 ]\l  %37 = phi i32 [ undef, %28 ], [ %136, %132 ]\l  %38 = phi i32 [ 0, %28 ], [ %137, %132 ]\l  %39 = phi i32 [ 0, %28 ], [ %136, %132 ]\l  %40 = phi float [ 0.000000e+00, %28 ], [ %135, %132 ]\l  %41 = phi float [ 0.000000e+00, %28 ], [ %134, %132 ]\l  %42 = phi float [ 0.000000e+00, %28 ], [ %133, %132 ]\l  %43 = icmp eq i32 %29, 0\l  br i1 %43, label %66, label %44\l|{<s0>T|<s1>F}}"];
	Node0x4b52960:s0 -> Node0x4b52700;
	Node0x4b52960:s1 -> Node0x4b54530;
	Node0x4b54530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%44:\l44:                                               \l  %45 = zext i32 %38 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %45\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %48 = icmp eq i32 %47, 1\l  br i1 %48, label %49, label %66\l|{<s0>T|<s1>F}}"];
	Node0x4b54530:s0 -> Node0x4b55040;
	Node0x4b54530:s1 -> Node0x4b52700;
	Node0x4b55040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%49:\l49:                                               \l  %50 = mul nsw i32 %38, 3\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %54 = fadd contract float %42, %53\l  %55 = add nuw nsw i32 %50, 1\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %59 = fadd contract float %41, %58\l  %60 = add nuw nsw i32 %50, 2\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %64 = fadd contract float %40, %63\l  %65 = add nsw i32 %39, 1\l  br label %66\l}"];
	Node0x4b55040 -> Node0x4b52700;
	Node0x4b52700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%66:\l66:                                               \l  %67 = phi float [ 0.000000e+00, %26 ], [ %34, %33 ], [ %54, %49 ], [ %42,\l... %44 ]\l  %68 = phi float [ 0.000000e+00, %26 ], [ %35, %33 ], [ %59, %49 ], [ %41,\l... %44 ]\l  %69 = phi float [ 0.000000e+00, %26 ], [ %36, %33 ], [ %64, %49 ], [ %40,\l... %44 ]\l  %70 = phi i32 [ 0, %26 ], [ %37, %33 ], [ %65, %49 ], [ %39, %44 ]\l  %71 = sitofp i32 %70 to float\l  %72 = fdiv contract float %67, %71\l  store float %72, float addrspace(1)* %1, align 4, !tbaa !20\l  %73 = fdiv contract float %68, %71\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 1\l  store float %73, float addrspace(1)* %74, align 4, !tbaa !20\l  %75 = fdiv contract float %69, %71\l  %76 = getelementptr inbounds float, float addrspace(1)* %1, i64 2\l  store float %75, float addrspace(1)* %76, align 4, !tbaa !20\l  br label %140\l}"];
	Node0x4b52700 -> Node0x4b524b0;
	Node0x4b51b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi i32 [ 0, %31 ], [ %137, %132 ]\l  %79 = phi i32 [ 0, %31 ], [ %136, %132 ]\l  %80 = phi float [ 0.000000e+00, %31 ], [ %135, %132 ]\l  %81 = phi float [ 0.000000e+00, %31 ], [ %134, %132 ]\l  %82 = phi float [ 0.000000e+00, %31 ], [ %133, %132 ]\l  %83 = phi i32 [ 0, %31 ], [ %138, %132 ]\l  %84 = zext i32 %78 to i64\l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %84\l  %86 = load i32, i32 addrspace(1)* %85, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %87 = icmp eq i32 %86, 1\l  br i1 %87, label %88, label %105\l|{<s0>T|<s1>F}}"];
	Node0x4b51b90:s0 -> Node0x4b57ac0;
	Node0x4b51b90:s1 -> Node0x4b57b50;
	Node0x4b57ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%88:\l88:                                               \l  %89 = mul nsw i32 %78, 3\l  %90 = zext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %93 = fadd contract float %82, %92\l  %94 = or i32 %89, 1\l  %95 = zext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %0, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %98 = fadd contract float %81, %97\l  %99 = add nuw nsw i32 %89, 2\l  %100 = zext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %0, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %103 = fadd contract float %80, %102\l  %104 = add nsw i32 %79, 1\l  br label %105\l}"];
	Node0x4b57ac0 -> Node0x4b57b50;
	Node0x4b57b50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  %106 = phi float [ %93, %88 ], [ %82, %77 ]\l  %107 = phi float [ %98, %88 ], [ %81, %77 ]\l  %108 = phi float [ %103, %88 ], [ %80, %77 ]\l  %109 = phi i32 [ %104, %88 ], [ %79, %77 ]\l  %110 = or i32 %78, 1\l  %111 = zext i32 %110 to i64\l  %112 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %111\l  %113 = load i32, i32 addrspace(1)* %112, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %114 = icmp eq i32 %113, 1\l  br i1 %114, label %115, label %132\l|{<s0>T|<s1>F}}"];
	Node0x4b57b50:s0 -> Node0x4b58b80;
	Node0x4b57b50:s1 -> Node0x4b531d0;
	Node0x4b58b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%115:\l115:                                              \l  %116 = mul nsw i32 %110, 3\l  %117 = zext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %0, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %120 = fadd contract float %106, %119\l  %121 = add nuw nsw i32 %116, 1\l  %122 = zext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %0, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %125 = fadd contract float %107, %124\l  %126 = add nuw nsw i32 %116, 2\l  %127 = zext i32 %126 to i64\l  %128 = getelementptr inbounds float, float addrspace(1)* %0, i64 %127\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %130 = fadd contract float %108, %129\l  %131 = add nsw i32 %109, 1\l  br label %132\l}"];
	Node0x4b58b80 -> Node0x4b531d0;
	Node0x4b531d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%132:\l132:                                              \l  %133 = phi float [ %120, %115 ], [ %106, %105 ]\l  %134 = phi float [ %125, %115 ], [ %107, %105 ]\l  %135 = phi float [ %130, %115 ], [ %108, %105 ]\l  %136 = phi i32 [ %131, %115 ], [ %109, %105 ]\l  %137 = add nuw nsw i32 %78, 2\l  %138 = add i32 %83, 2\l  %139 = icmp eq i32 %138, %32\l  br i1 %139, label %33, label %77, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4b531d0:s0 -> Node0x4b52960;
	Node0x4b531d0:s1 -> Node0x4b51b90;
	Node0x4b524b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%140:\l140:                                              \l  ret void\l}"];
}
