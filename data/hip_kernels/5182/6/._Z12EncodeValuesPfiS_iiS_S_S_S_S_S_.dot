digraph "CFG for '_Z12EncodeValuesPfiS_iiS_S_S_S_S_S_' function" {
	label="CFG for '_Z12EncodeValuesPfiS_iiS_S_S_S_S_S_' function";

	Node0x504dde0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !6\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = udiv i32 %19, %16\l  %23 = mul i32 %22, %16\l  %24 = icmp ugt i32 %19, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %29 = add i32 %27, %20\l  %30 = mul i32 %29, %16\l  %31 = add i32 %30, %28\l  %32 = icmp ult i32 %28, 2\l  br i1 %32, label %33, label %42\l|{<s0>T|<s1>F}}"];
	Node0x504dde0:s0 -> Node0x504fc70;
	Node0x504dde0:s1 -> Node0x504fd00;
	Node0x504fc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%33:\l33:                                               \l  %34 = icmp eq i32 %4, 1\l  %35 = zext i32 %28 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16\l  %38 = tail call float @llvm.minnum.f32(float %37, float 1.000000e+00)\l  %39 = tail call float @llvm.maxnum.f32(float %38, float -1.000000e+00)\l  %40 = select i1 %34, float %39, float %37\l  %41 = getelementptr inbounds [2 x float], [2 x float] addrspace(3)*\l... @_ZZ12EncodeValuesPfiS_iiS_S_S_S_S_S_E8s_values, i32 0, i32 %28\l  store float %40, float addrspace(3)* %41, align 4, !tbaa !16\l  br label %42\l}"];
	Node0x504fc70 -> Node0x504fd00;
	Node0x504fd00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %43 = icmp slt i32 %31, %3\l  br i1 %43, label %44, label %96\l|{<s0>T|<s1>F}}"];
	Node0x504fd00:s0 -> Node0x5052e50;
	Node0x504fd00:s1 -> Node0x5052ee0;
	Node0x5052e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%44:\l44:                                               \l  %45 = load float, float addrspace(3)* getelementptr inbounds ([2 x float],\l... [2 x float] addrspace(3)* @_ZZ12EncodeValuesPfiS_iiS_S_S_S_S_S_E8s_values,\l... i32 0, i32 0), align 4, !tbaa !16\l  %46 = fcmp contract ogt float %45, 0.000000e+00\l  %47 = select i1 %46, float addrspace(1)* %5, float addrspace(1)* %7\l  %48 = sext i32 %31 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %9, i64 %48\l  %50 = getelementptr inbounds float, float addrspace(1)* %47, i64 %48\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %48\l  %52 = icmp eq i32 %4, 1\l  %53 = tail call float @llvm.fabs.f32(float %45)\l  %54 = fsub contract float 1.000000e+00, %53\l  br i1 %52, label %55, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5052e50:s0 -> Node0x50539f0;
	Node0x5052e50:s1 -> Node0x5053a80;
	Node0x50539f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%55:\l55:                                               \l  %56 = fmul contract float %54, %54\l  %57 = load float, float addrspace(1)* %49, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %58 = fmul contract float %56, %57\l  store float %58, float addrspace(1)* %51, align 4, !tbaa !16\l  %59 = fmul contract float %53, 2.000000e+00\l  %60 = fmul contract float %45, %45\l  %61 = fsub contract float %59, %60\l  br label %65\l}"];
	Node0x50539f0 -> Node0x5054650;
	Node0x5053a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%62:\l62:                                               \l  %63 = load float, float addrspace(1)* %49, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %64 = fmul contract float %54, %63\l  store float %64, float addrspace(1)* %51, align 4, !tbaa !16\l  br label %65\l}"];
	Node0x5053a80 -> Node0x5054650;
	Node0x5054650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%65:\l65:                                               \l  %66 = phi float [ %53, %62 ], [ %61, %55 ]\l  %67 = phi float [ %64, %62 ], [ %58, %55 ]\l  %68 = load float, float addrspace(1)* %50, align 4, !tbaa !16\l  %69 = fmul contract float %66, %68\l  %70 = fadd contract float %67, %69\l  store float %70, float addrspace(1)* %51, align 4, !tbaa !16\l  %71 = icmp sgt i32 %1, 1\l  br i1 %71, label %72, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5054650:s0 -> Node0x5054f70;
	Node0x5054650:s1 -> Node0x5052ee0;
	Node0x5054f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%72:\l72:                                               \l  %73 = load float, float addrspace(3)* getelementptr inbounds ([2 x float],\l... [2 x float] addrspace(3)* @_ZZ12EncodeValuesPfiS_iiS_S_S_S_S_S_E8s_values,\l... i32 0, i32 1), align 4, !tbaa !16\l  %74 = fcmp contract ogt float %73, 0.000000e+00\l  %75 = select i1 %74, float addrspace(1)* %6, float addrspace(1)* %8\l  %76 = getelementptr inbounds float, float addrspace(1)* %10, i64 %48\l  %77 = getelementptr inbounds float, float addrspace(1)* %75, i64 %48\l  %78 = tail call float @llvm.fabs.f32(float %73)\l  %79 = fsub contract float 1.000000e+00, %78\l  br i1 %52, label %80, label %87\l|{<s0>T|<s1>F}}"];
	Node0x5054f70:s0 -> Node0x50555c0;
	Node0x5054f70:s1 -> Node0x5055610;
	Node0x50555c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%80:\l80:                                               \l  %81 = fmul contract float %79, %79\l  %82 = load float, float addrspace(1)* %76, align 4, !tbaa !16\l  %83 = fmul contract float %81, %82\l  store float %83, float addrspace(1)* %51, align 4, !tbaa !16\l  %84 = fmul contract float %78, 2.000000e+00\l  %85 = fmul contract float %73, %73\l  %86 = fsub contract float %84, %85\l  br label %90\l}"];
	Node0x50555c0 -> Node0x5055ae0;
	Node0x5055610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%87:\l87:                                               \l  %88 = load float, float addrspace(1)* %76, align 4, !tbaa !16\l  %89 = fmul contract float %79, %88\l  store float %89, float addrspace(1)* %51, align 4, !tbaa !16\l  br label %90\l}"];
	Node0x5055610 -> Node0x5055ae0;
	Node0x5055ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%90:\l90:                                               \l  %91 = phi float [ %78, %87 ], [ %86, %80 ]\l  %92 = phi float [ %89, %87 ], [ %83, %80 ]\l  %93 = load float, float addrspace(1)* %77, align 4, !tbaa !16\l  %94 = fmul contract float %91, %93\l  %95 = fadd contract float %92, %94\l  store float %95, float addrspace(1)* %51, align 4, !tbaa !16\l  br label %96\l}"];
	Node0x5055ae0 -> Node0x5052ee0;
	Node0x5052ee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%96:\l96:                                               \l  ret void\l}"];
}
