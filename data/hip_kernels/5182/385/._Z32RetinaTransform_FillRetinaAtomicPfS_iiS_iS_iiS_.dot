digraph "CFG for '_Z32RetinaTransform_FillRetinaAtomicPfS_iiS_iS_iiS_' function" {
	label="CFG for '_Z32RetinaTransform_FillRetinaAtomicPfS_iiS_iS_iiS_' function";

	Node0x5397a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%10:\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !6\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = udiv i32 %18, %15\l  %22 = mul i32 %21, %15\l  %23 = icmp ugt i32 %18, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %20\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %28 = add i32 %26, %19\l  %29 = mul i32 %28, %15\l  %30 = add i32 %29, %27\l  %31 = freeze i32 %30\l  %32 = freeze i32 %2\l  %33 = sdiv i32 %31, %32\l  %34 = mul i32 %33, %32\l  %35 = sub i32 %31, %34\l  %36 = sitofp i32 %2 to float\l  %37 = sitofp i32 %3 to float\l  %38 = tail call float @llvm.minnum.f32(float %36, float %37)\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 2\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %41 = fmul contract float %38, %40\l  %42 = fptosi float %41 to i32\l  %43 = load float, float addrspace(1)* %0, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %44 = fadd contract float %43, 1.000000e+00\l  %45 = fmul contract float %44, %36\l  %46 = fmul contract float %45, 5.000000e-01\l  %47 = fptosi float %46 to i32\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 1\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %50 = fadd contract float %49, 1.000000e+00\l  %51 = fmul contract float %50, %37\l  %52 = fmul contract float %51, 5.000000e-01\l  %53 = fptosi float %52 to i32\l  %54 = add nsw i32 %2, -1\l  %55 = add nsw i32 %3, -1\l  %56 = tail call i32 @llvm.smin.i32(i32 %54, i32 %55)\l  %57 = tail call i32 @llvm.smax.i32(i32 %42, i32 1)\l  %58 = tail call i32 @llvm.smin.i32(i32 %56, i32 %57)\l  %59 = mul nsw i32 %3, %2\l  %60 = icmp slt i32 %30, %59\l  br i1 %60, label %61, label %210\l|{<s0>T|<s1>F}}"];
	Node0x5397a60:s0 -> Node0x539e020;
	Node0x5397a60:s1 -> Node0x539e0b0;
	Node0x539e020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%61:\l61:                                               \l  %62 = icmp sgt i32 %7, 0\l  br i1 %62, label %63, label %110\l|{<s0>T|<s1>F}}"];
	Node0x539e020:s0 -> Node0x539e280;
	Node0x539e020:s1 -> Node0x539e2d0;
	Node0x539e280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%63:\l63:                                               \l  %64 = sitofp i32 %58 to float\l  %65 = sitofp i32 %47 to float\l  %66 = sitofp i32 %53 to float\l  %67 = sitofp i32 %35 to float\l  %68 = sitofp i32 %33 to float\l  %69 = and i32 %7, 3\l  %70 = icmp ult i32 %7, 4\l  br i1 %70, label %73, label %71\l|{<s0>T|<s1>F}}"];
	Node0x539e280:s0 -> Node0x539e9b0;
	Node0x539e280:s1 -> Node0x539ea40;
	Node0x539ea40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%71:\l71:                                               \l  %72 = and i32 %7, -4\l  br label %119\l}"];
	Node0x539ea40 -> Node0x539ec40;
	Node0x539e9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%73:\l73:                                               \l  %74 = phi i32 [ undef, %63 ], [ %205, %119 ]\l  %75 = phi float [ 0x412E847FC0000000, %63 ], [ %206, %119 ]\l  %76 = phi i32 [ 1, %63 ], [ %205, %119 ]\l  %77 = phi i32 [ 0, %63 ], [ %207, %119 ]\l  %78 = icmp eq i32 %69, 0\l  br i1 %78, label %107, label %79\l|{<s0>T|<s1>F}}"];
	Node0x539e9b0:s0 -> Node0x539f5c0;
	Node0x539e9b0:s1 -> Node0x539f650;
	Node0x539f650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  %80 = phi float [ %103, %79 ], [ %75, %73 ]\l  %81 = phi i32 [ %102, %79 ], [ %76, %73 ]\l  %82 = phi i32 [ %104, %79 ], [ %77, %73 ]\l  %83 = phi i32 [ %105, %79 ], [ 0, %73 ]\l  %84 = mul nsw i32 %82, %8\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %6, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %88 = fmul contract float %87, %64\l  %89 = add nsw i32 %84, 1\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %6, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %93 = fmul contract float %92, %64\l  %94 = fadd contract float %88, %65\l  %95 = fadd contract float %93, %66\l  %96 = fsub contract float %67, %94\l  %97 = fmul contract float %96, %96\l  %98 = fsub contract float %68, %95\l  %99 = fmul contract float %98, %98\l  %100 = fadd contract float %97, %99\l  %101 = fcmp contract olt float %100, %80\l  %102 = select i1 %101, i32 %82, i32 %81\l  %103 = select i1 %101, float %100, float %80\l  %104 = add nuw nsw i32 %82, 1\l  %105 = add i32 %83, 1\l  %106 = icmp eq i32 %105, %69\l  br i1 %106, label %107, label %79, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x539f650:s0 -> Node0x539f5c0;
	Node0x539f650:s1 -> Node0x539f650;
	Node0x539f5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%107:\l107:                                              \l  %108 = phi i32 [ %74, %73 ], [ %102, %79 ]\l  %109 = sext i32 %108 to i64\l  br label %110\l}"];
	Node0x539f5c0 -> Node0x539e2d0;
	Node0x539e2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%110:\l110:                                              \l  %111 = phi i64 [ 1, %61 ], [ %109, %107 ]\l  %112 = getelementptr inbounds float, float addrspace(1)* %4, i64 %111\l  %113 = sext i32 %30 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %1, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %116 = atomicrmw fadd float addrspace(1)* %112, float %115\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %117 = getelementptr inbounds float, float addrspace(1)* %9, i64 %111\l  %118 = atomicrmw fadd float addrspace(1)* %117, float 1.000000e+00\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %210\l}"];
	Node0x539e2d0 -> Node0x539e0b0;
	Node0x539ec40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%119:\l119:                                              \l  %120 = phi float [ 0x412E847FC0000000, %71 ], [ %206, %119 ]\l  %121 = phi i32 [ 1, %71 ], [ %205, %119 ]\l  %122 = phi i32 [ 0, %71 ], [ %207, %119 ]\l  %123 = phi i32 [ 0, %71 ], [ %208, %119 ]\l  %124 = mul nsw i32 %122, %8\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %6, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %128 = fmul contract float %127, %64\l  %129 = or i32 %124, 1\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %6, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %133 = fmul contract float %132, %64\l  %134 = fadd contract float %128, %65\l  %135 = fadd contract float %133, %66\l  %136 = fsub contract float %67, %134\l  %137 = fmul contract float %136, %136\l  %138 = fsub contract float %68, %135\l  %139 = fmul contract float %138, %138\l  %140 = fadd contract float %137, %139\l  %141 = fcmp contract olt float %140, %120\l  %142 = select i1 %141, i32 %122, i32 %121\l  %143 = select i1 %141, float %140, float %120\l  %144 = or i32 %122, 1\l  %145 = mul nsw i32 %144, %8\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %6, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %149 = fmul contract float %148, %64\l  %150 = add nsw i32 %145, 1\l  %151 = sext i32 %150 to i64\l  %152 = getelementptr inbounds float, float addrspace(1)* %6, i64 %151\l  %153 = load float, float addrspace(1)* %152, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %154 = fmul contract float %153, %64\l  %155 = fadd contract float %149, %65\l  %156 = fadd contract float %154, %66\l  %157 = fsub contract float %67, %155\l  %158 = fmul contract float %157, %157\l  %159 = fsub contract float %68, %156\l  %160 = fmul contract float %159, %159\l  %161 = fadd contract float %158, %160\l  %162 = fcmp contract olt float %161, %143\l  %163 = select i1 %162, i32 %144, i32 %142\l  %164 = select i1 %162, float %161, float %143\l  %165 = or i32 %122, 2\l  %166 = mul nsw i32 %165, %8\l  %167 = sext i32 %166 to i64\l  %168 = getelementptr inbounds float, float addrspace(1)* %6, i64 %167\l  %169 = load float, float addrspace(1)* %168, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %170 = fmul contract float %169, %64\l  %171 = or i32 %166, 1\l  %172 = sext i32 %171 to i64\l  %173 = getelementptr inbounds float, float addrspace(1)* %6, i64 %172\l  %174 = load float, float addrspace(1)* %173, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %175 = fmul contract float %174, %64\l  %176 = fadd contract float %170, %65\l  %177 = fadd contract float %175, %66\l  %178 = fsub contract float %67, %176\l  %179 = fmul contract float %178, %178\l  %180 = fsub contract float %68, %177\l  %181 = fmul contract float %180, %180\l  %182 = fadd contract float %179, %181\l  %183 = fcmp contract olt float %182, %164\l  %184 = select i1 %183, i32 %165, i32 %163\l  %185 = select i1 %183, float %182, float %164\l  %186 = or i32 %122, 3\l  %187 = mul nsw i32 %186, %8\l  %188 = sext i32 %187 to i64\l  %189 = getelementptr inbounds float, float addrspace(1)* %6, i64 %188\l  %190 = load float, float addrspace(1)* %189, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %191 = fmul contract float %190, %64\l  %192 = add nsw i32 %187, 1\l  %193 = sext i32 %192 to i64\l  %194 = getelementptr inbounds float, float addrspace(1)* %6, i64 %193\l  %195 = load float, float addrspace(1)* %194, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %196 = fmul contract float %195, %64\l  %197 = fadd contract float %191, %65\l  %198 = fadd contract float %196, %66\l  %199 = fsub contract float %67, %197\l  %200 = fmul contract float %199, %199\l  %201 = fsub contract float %68, %198\l  %202 = fmul contract float %201, %201\l  %203 = fadd contract float %200, %202\l  %204 = fcmp contract olt float %203, %185\l  %205 = select i1 %204, i32 %186, i32 %184\l  %206 = select i1 %204, float %203, float %185\l  %207 = add nuw nsw i32 %122, 4\l  %208 = add i32 %123, 4\l  %209 = icmp eq i32 %208, %72\l  br i1 %209, label %73, label %119, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x539ec40:s0 -> Node0x539e9b0;
	Node0x539ec40:s1 -> Node0x539ec40;
	Node0x539e0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%210:\l210:                                              \l  ret void\l}"];
}
