digraph "CFG for '_Z15ThresholdKernelffiPfS_ii' function" {
	label="CFG for '_Z15ThresholdKernelffiPfS_ii' function";

	Node0x513d1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%7:\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = udiv i32 %15, %12\l  %19 = mul i32 %18, %12\l  %20 = icmp ugt i32 %15, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %17\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %25 = add i32 %23, %16\l  %26 = mul i32 %25, %12\l  %27 = add i32 %26, %24\l  %28 = icmp slt i32 %27, %5\l  br i1 %28, label %29, label %127\l|{<s0>T|<s1>F}}"];
	Node0x513d1b0:s0 -> Node0x513f9e0;
	Node0x513d1b0:s1 -> Node0x513fa70;
	Node0x513f9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%29:\l29:                                               \l  %30 = icmp eq i32 %24, 0\l  br i1 %30, label %31, label %35\l|{<s0>T|<s1>F}}"];
	Node0x513f9e0:s0 -> Node0x513fc40;
	Node0x513f9e0:s1 -> Node0x513fc90;
	Node0x513fc40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%31:\l31:                                               \l  %32 = fsub contract float %1, %0\l  %33 = sitofp i32 %6 to float\l  %34 = fdiv contract float %32, %33\l  store float %34, float addrspace(3)* @_ZZ15ThresholdKernelffiPfS_iiE5delta,\l... align 4, !tbaa !16\l  br label %35\l}"];
	Node0x513fc40 -> Node0x513fc90;
	Node0x513fc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%35:\l35:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %36 = icmp sgt i32 %6, 0\l  br i1 %36, label %37, label %55\l|{<s0>T|<s1>F}}"];
	Node0x513fc90:s0 -> Node0x51405e0;
	Node0x513fc90:s1 -> Node0x5140670;
	Node0x51405e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%37:\l37:                                               \l  %38 = and i32 %6, 7\l  %39 = icmp ult i32 %6, 8\l  br i1 %39, label %42, label %40\l|{<s0>T|<s1>F}}"];
	Node0x51405e0:s0 -> Node0x5140900;
	Node0x51405e0:s1 -> Node0x5140950;
	Node0x5140950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%40:\l40:                                               \l  %41 = and i32 %6, -8\l  br label %62\l}"];
	Node0x5140950 -> Node0x5140b50;
	Node0x5140900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%42:\l42:                                               \l  %43 = phi i32 [ 0, %37 ], [ %104, %62 ]\l  %44 = icmp eq i32 %38, 0\l  br i1 %44, label %55, label %45\l|{<s0>T|<s1>F}}"];
	Node0x5140900:s0 -> Node0x5140670;
	Node0x5140900:s1 -> Node0x5140d80;
	Node0x5140d80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = phi i32 [ %52, %45 ], [ %43, %42 ]\l  %47 = phi i32 [ %53, %45 ], [ 0, %42 ]\l  %48 = mul nsw i32 %46, %5\l  %49 = add nsw i32 %48, %27\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %4, i64 %50\l  store float 0.000000e+00, float addrspace(1)* %51, align 4, !tbaa !16\l  %52 = add nuw nsw i32 %46, 1\l  %53 = add i32 %47, 1\l  %54 = icmp eq i32 %53, %38\l  br i1 %54, label %55, label %45, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5140d80:s0 -> Node0x5140670;
	Node0x5140d80:s1 -> Node0x5140d80;
	Node0x5140670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%55:\l55:                                               \l  %56 = sext i32 %27 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %3, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !16\l  %59 = fsub contract float %58, %0\l  %60 = load float, float addrspace(3)* @_ZZ15ThresholdKernelffiPfS_iiE5delta,\l... align 4, !tbaa !16\l  %61 = fdiv contract float %59, %60\l  switch i32 %2, label %121 [\l    i32 0, label %107\l    i32 1, label %114\l  ]\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0x5140670:s0 -> Node0x5142990;
	Node0x5140670:s1 -> Node0x5142ae0;
	Node0x5140670:s2 -> Node0x5142b70;
	Node0x5140b50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%62:\l62:                                               \l  %63 = phi i32 [ 0, %40 ], [ %104, %62 ]\l  %64 = phi i32 [ 0, %40 ], [ %105, %62 ]\l  %65 = mul nsw i32 %63, %5\l  %66 = add nsw i32 %65, %27\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %4, i64 %67\l  store float 0.000000e+00, float addrspace(1)* %68, align 4, !tbaa !16\l  %69 = or i32 %63, 1\l  %70 = mul nsw i32 %69, %5\l  %71 = add nsw i32 %70, %27\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %4, i64 %72\l  store float 0.000000e+00, float addrspace(1)* %73, align 4, !tbaa !16\l  %74 = or i32 %63, 2\l  %75 = mul nsw i32 %74, %5\l  %76 = add nsw i32 %75, %27\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %4, i64 %77\l  store float 0.000000e+00, float addrspace(1)* %78, align 4, !tbaa !16\l  %79 = or i32 %63, 3\l  %80 = mul nsw i32 %79, %5\l  %81 = add nsw i32 %80, %27\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %4, i64 %82\l  store float 0.000000e+00, float addrspace(1)* %83, align 4, !tbaa !16\l  %84 = or i32 %63, 4\l  %85 = mul nsw i32 %84, %5\l  %86 = add nsw i32 %85, %27\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %4, i64 %87\l  store float 0.000000e+00, float addrspace(1)* %88, align 4, !tbaa !16\l  %89 = or i32 %63, 5\l  %90 = mul nsw i32 %89, %5\l  %91 = add nsw i32 %90, %27\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %4, i64 %92\l  store float 0.000000e+00, float addrspace(1)* %93, align 4, !tbaa !16\l  %94 = or i32 %63, 6\l  %95 = mul nsw i32 %94, %5\l  %96 = add nsw i32 %95, %27\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %4, i64 %97\l  store float 0.000000e+00, float addrspace(1)* %98, align 4, !tbaa !16\l  %99 = or i32 %63, 7\l  %100 = mul nsw i32 %99, %5\l  %101 = add nsw i32 %100, %27\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %4, i64 %102\l  store float 0.000000e+00, float addrspace(1)* %103, align 4, !tbaa !16\l  %104 = add nuw nsw i32 %63, 8\l  %105 = add i32 %64, 8\l  %106 = icmp eq i32 %105, %41\l  br i1 %106, label %42, label %62, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5140b50:s0 -> Node0x5140900;
	Node0x5140b50:s1 -> Node0x5140b50;
	Node0x5142ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%107:\l107:                                              \l  %108 = add nsw i32 %6, -1\l  %109 = sitofp i32 %108 to float\l  %110 = tail call float @llvm.minnum.f32(float %61, float %109)\l  %111 = tail call float @llvm.maxnum.f32(float %110, float 0.000000e+00)\l  %112 = tail call float @llvm.floor.f32(float %111)\l  %113 = fptosi float %112 to i32\l  br label %121\l}"];
	Node0x5142ae0 -> Node0x5142990;
	Node0x5142b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%114:\l114:                                              \l  %115 = fcmp contract uge float %61, 0.000000e+00\l  %116 = sitofp i32 %6 to float\l  %117 = fcmp contract ult float %61, %116\l  %118 = select i1 %115, i1 %117, i1 false\l  br i1 %118, label %119, label %127\l|{<s0>T|<s1>F}}"];
	Node0x5142b70:s0 -> Node0x5145880;
	Node0x5142b70:s1 -> Node0x513fa70;
	Node0x5145880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%119:\l119:                                              \l  %120 = fptosi float %61 to i32\l  br label %121\l}"];
	Node0x5145880 -> Node0x5142990;
	Node0x5142990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%121:\l121:                                              \l  %122 = phi i32 [ undef, %55 ], [ %120, %119 ], [ %113, %107 ]\l  %123 = mul nsw i32 %122, %5\l  %124 = add nsw i32 %123, %27\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %4, i64 %125\l  store float 1.000000e+00, float addrspace(1)* %126, align 4, !tbaa !16\l  br label %127\l}"];
	Node0x5142990 -> Node0x513fa70;
	Node0x513fa70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%127:\l127:                                              \l  ret void\l}"];
}
