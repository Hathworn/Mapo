digraph "CFG for '_Z22FinalizeVelocityKernelPfS_ii' function" {
	label="CFG for '_Z22FinalizeVelocityKernelPfS_ii' function";

	Node0x4f7d270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = udiv i32 %12, %9\l  %16 = mul i32 %15, %9\l  %17 = icmp ugt i32 %12, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %14\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %13\l  %23 = mul i32 %22, %9\l  %24 = add i32 %23, %21\l  %25 = mul nsw i32 %3, %2\l  %26 = icmp slt i32 %24, %25\l  br i1 %26, label %27, label %98\l|{<s0>T|<s1>F}}"];
	Node0x4f7d270:s0 -> Node0x4f7fb90;
	Node0x4f7d270:s1 -> Node0x4f7fc20;
	Node0x4f7fb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%27:\l27:                                               \l  %28 = load float, float addrspace(1)* %1, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %29 = fmul contract float %28, %28\l  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 1\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %32 = fmul contract float %31, %31\l  %33 = fadd contract float %29, %32\l  %34 = fcmp olt float %33, 0x39F0000000000000\l  %35 = select i1 %34, float 0x41F0000000000000, float 1.000000e+00\l  %36 = fmul float %33, %35\l  %37 = tail call float @llvm.sqrt.f32(float %36)\l  %38 = bitcast float %37 to i32\l  %39 = add nsw i32 %38, -1\l  %40 = bitcast i32 %39 to float\l  %41 = add nsw i32 %38, 1\l  %42 = bitcast i32 %41 to float\l  %43 = tail call i1 @llvm.amdgcn.class.f32(float %36, i32 608)\l  %44 = select i1 %34, float 0x3EF0000000000000, float 1.000000e+00\l  %45 = fneg float %42\l  %46 = tail call float @llvm.fma.f32(float %45, float %37, float %36)\l  %47 = fcmp ogt float %46, 0.000000e+00\l  %48 = fneg float %40\l  %49 = tail call float @llvm.fma.f32(float %48, float %37, float %36)\l  %50 = fcmp ole float %49, 0.000000e+00\l  %51 = select i1 %50, float %40, float %37\l  %52 = select i1 %47, float %42, float %51\l  %53 = fmul float %44, %52\l  %54 = select i1 %43, float %36, float %53\l  %55 = sext i32 %24 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %58 = fmul contract float %57, %57\l  %59 = add nsw i32 %24, %25\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %63 = fmul contract float %62, %62\l  %64 = fadd contract float %58, %63\l  %65 = fcmp olt float %64, 0x39F0000000000000\l  %66 = select i1 %65, float 0x41F0000000000000, float 1.000000e+00\l  %67 = fmul float %64, %66\l  %68 = tail call float @llvm.sqrt.f32(float %67)\l  %69 = bitcast float %68 to i32\l  %70 = add nsw i32 %69, -1\l  %71 = bitcast i32 %70 to float\l  %72 = add nsw i32 %69, 1\l  %73 = bitcast i32 %72 to float\l  %74 = tail call i1 @llvm.amdgcn.class.f32(float %67, i32 608)\l  %75 = select i1 %65, float 0x3EF0000000000000, float 1.000000e+00\l  %76 = fneg float %73\l  %77 = tail call float @llvm.fma.f32(float %76, float %68, float %67)\l  %78 = fcmp ogt float %77, 0.000000e+00\l  %79 = fneg float %71\l  %80 = tail call float @llvm.fma.f32(float %79, float %68, float %67)\l  %81 = fcmp ole float %80, 0.000000e+00\l  %82 = select i1 %81, float %71, float %68\l  %83 = select i1 %78, float %73, float %82\l  %84 = fmul float %75, %83\l  %85 = select i1 %74, float %67, float %84\l  %86 = fcmp contract ogt float %54, 0.000000e+00\l  %87 = fcmp contract ogt float %85, 0.000000e+00\l  %88 = select i1 %86, i1 %87, i1 false\l  br i1 %88, label %89, label %98\l|{<s0>T|<s1>F}}"];
	Node0x4f7fb90:s0 -> Node0x4f84500;
	Node0x4f7fb90:s1 -> Node0x4f7fc20;
	Node0x4f84500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%89:\l89:                                               \l  %90 = fmul contract float %28, %57\l  %91 = fmul contract float %31, %62\l  %92 = fadd contract float %90, %91\l  %93 = fmul contract float %54, %85\l  %94 = fdiv contract float %92, %93\l  %95 = fpext float %94 to double\l  %96 = fcmp contract ogt double %95, 0x3FE6666666666666\l  br i1 %96, label %97, label %98\l|{<s0>T|<s1>F}}"];
	Node0x4f84500:s0 -> Node0x4f849d0;
	Node0x4f84500:s1 -> Node0x4f7fc20;
	Node0x4f849d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%97:\l97:                                               \l  store float 0.000000e+00, float addrspace(1)* %56, align 4, !tbaa !16\l  store float 0.000000e+00, float addrspace(1)* %61, align 4, !tbaa !16\l  br label %98\l}"];
	Node0x4f849d0 -> Node0x4f7fc20;
	Node0x4f7fc20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%98:\l98:                                               \l  ret void\l}"];
}
