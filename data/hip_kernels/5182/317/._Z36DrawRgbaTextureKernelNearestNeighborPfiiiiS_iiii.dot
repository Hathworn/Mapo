digraph "CFG for '_Z36DrawRgbaTextureKernelNearestNeighborPfiiiiS_iiii' function" {
	label="CFG for '_Z36DrawRgbaTextureKernelNearestNeighborPfiiiiS_iiii' function";

	Node0x5a43f30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !6\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = udiv i32 %18, %15\l  %22 = mul i32 %21, %15\l  %23 = icmp ugt i32 %18, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %20\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %28 = add i32 %26, %19\l  %29 = mul i32 %28, %15\l  %30 = add i32 %29, %27\l  %31 = mul nsw i32 %7, %6\l  %32 = mul nsw i32 %9, %8\l  %33 = sdiv i32 %30, %32\l  %34 = mul nsw i32 %33, %32\l  %35 = sub nsw i32 %30, %34\l  %36 = sdiv i32 %35, %8\l  %37 = mul nsw i32 %36, %8\l  %38 = sub nsw i32 %35, %37\l  %39 = icmp slt i32 %33, 3\l  br i1 %39, label %40, label %82\l|{<s0>T|<s1>F}}"];
	Node0x5a43f30:s0 -> Node0x5a46620;
	Node0x5a43f30:s1 -> Node0x5a47bb0;
	Node0x5a46620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%40:\l40:                                               \l  switch i32 %33, label %43 [\l    i32 0, label %41\l    i32 2, label %42\l  ]\l|{<s0>def|<s1>0|<s2>2}}"];
	Node0x5a46620:s0 -> Node0x5a47cf0;
	Node0x5a46620:s1 -> Node0x5a47d40;
	Node0x5a46620:s2 -> Node0x5a47e00;
	Node0x5a47d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%41:\l41:                                               \l  br label %43\l}"];
	Node0x5a47d40 -> Node0x5a47cf0;
	Node0x5a47e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%42:\l42:                                               \l  br label %43\l}"];
	Node0x5a47e00 -> Node0x5a47cf0;
	Node0x5a47cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%43:\l43:                                               \l  %44 = phi i32 [ %33, %40 ], [ 0, %42 ], [ 2, %41 ]\l  %45 = add nsw i32 %38, %3\l  %46 = icmp slt i32 %45, %1\l  %47 = icmp sgt i32 %45, -1\l  %48 = and i1 %46, %47\l  br i1 %48, label %49, label %82\l|{<s0>T|<s1>F}}"];
	Node0x5a47cf0:s0 -> Node0x5a483d0;
	Node0x5a47cf0:s1 -> Node0x5a47bb0;
	Node0x5a483d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%49:\l49:                                               \l  %50 = add nsw i32 %36, %4\l  %51 = icmp slt i32 %50, %2\l  %52 = icmp sgt i32 %50, -1\l  %53 = and i1 %51, %52\l  br i1 %53, label %54, label %82\l|{<s0>T|<s1>F}}"];
	Node0x5a483d0:s0 -> Node0x5a48710;
	Node0x5a483d0:s1 -> Node0x5a47bb0;
	Node0x5a48710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%54:\l54:                                               \l  %55 = mul nsw i32 %38, %6\l  %56 = sdiv i32 %55, %8\l  %57 = mul nsw i32 %36, %7\l  %58 = sdiv i32 %57, %9\l  %59 = mul nsw i32 %58, %6\l  %60 = add nsw i32 %59, %56\l  %61 = mul nsw i32 %33, %31\l  %62 = add nsw i32 %60, %61\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %5, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %66 = mul i32 %44, %2\l  %67 = add i32 %66, %50\l  %68 = mul i32 %67, %1\l  %69 = add i32 %68, %45\l  %70 = mul nsw i32 %31, 3\l  %71 = add nsw i32 %60, %70\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %5, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %75 = sext i32 %69 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %78 = fsub contract float 1.000000e+00, %74\l  %79 = fmul contract float %77, %78\l  %80 = fmul contract float %65, %74\l  %81 = fadd contract float %80, %79\l  store float %81, float addrspace(1)* %76, align 4, !tbaa !16\l  br label %82\l}"];
	Node0x5a48710 -> Node0x5a47bb0;
	Node0x5a47bb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  ret void\l}"];
}
