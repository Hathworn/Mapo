digraph "CFG for '_Z22ComputeHistogramKernelPfPi' function" {
	label="CFG for '_Z22ComputeHistogramKernelPfPi' function";

	Node0x52beff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %4 = getelementptr i8, i8 addrspace(4)* %3, i64 4\l  %5 = bitcast i8 addrspace(4)* %4 to i16 addrspace(4)*\l  %6 = load i16, i16 addrspace(4)* %5, align 4, !range !4, !invariant.load !5\l  %7 = zext i16 %6 to i32\l  %8 = getelementptr inbounds i8, i8 addrspace(4)* %3, i64 12\l  %9 = bitcast i8 addrspace(4)* %8 to i32 addrspace(4)*\l  %10 = load i32, i32 addrspace(4)* %9, align 4, !tbaa !6\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = udiv i32 %10, %7\l  %14 = mul i32 %13, %7\l  %15 = icmp ugt i32 %10, %14\l  %16 = zext i1 %15 to i32\l  %17 = add i32 %13, %16\l  %18 = mul i32 %17, %12\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %20 = add i32 %18, %11\l  %21 = mul i32 %20, %7\l  %22 = add i32 %21, %19\l  %23 = load i32, i32 addrspace(4)* @D_BINS, align 4, !tbaa !16\l  %24 = icmp slt i32 %19, %23\l  br i1 %24, label %25, label %27\l|{<s0>T|<s1>F}}"];
	Node0x52beff0:s0 -> Node0x52c13e0;
	Node0x52beff0:s1 -> Node0x52c1470;
	Node0x52c13e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%25:\l25:                                               \l  %26 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @partialHist, i32 0, i32 %19\l  store i32 0, i32 addrspace(3)* %26, align 4, !tbaa !16\l  br label %27\l}"];
	Node0x52c13e0 -> Node0x52c1470;
	Node0x52c1470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %28 = load i32, i32 addrspace(4)* @D_MEMORY_BLOCK_SIZE, align 4, !tbaa !16\l  %29 = icmp slt i32 %22, %28\l  br i1 %29, label %30, label %64\l|{<s0>T|<s1>F}}"];
	Node0x52c1470:s0 -> Node0x52c2170;
	Node0x52c1470:s1 -> Node0x52c21c0;
	Node0x52c2170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = sext i32 %22 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %34 = add nsw i32 %23, -1\l  %35 = fpext float %33 to double\l  %36 = load double, double addrspace(4)* @D_MAX_VALUE, align 8, !tbaa !22\l  %37 = fcmp contract olt double %36, %35\l  %38 = select i1 %37, i32 %34, i32 0\l  %39 = load double, double addrspace(4)* @D_MIN_VALUE, align 8, !tbaa !22\l  %40 = fcmp contract ugt double %39, %35\l  %41 = fcmp contract ult double %36, %35\l  %42 = select i1 %40, i1 true, i1 %41\l  br i1 %42, label %54, label %43\l|{<s0>T|<s1>F}}"];
	Node0x52c2170:s0 -> Node0x52c3960;
	Node0x52c2170:s1 -> Node0x52c39f0;
	Node0x52c39f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%43:\l43:                                               \l  %44 = fsub contract double %35, %39\l  %45 = fptrunc double %44 to float\l  %46 = load float, float addrspace(4)* @D_BIN_VALUE_WIDTH, align 4, !tbaa !20\l  %47 = fdiv contract float %45, %46\l  %48 = tail call float @llvm.floor.f32(float %47)\l  %49 = fptosi float %48 to i32\l  %50 = add nsw i32 %49, 1\l  %51 = fcmp contract oeq double %36, %35\l  %52 = add nsw i32 %23, -2\l  %53 = select i1 %51, i32 %52, i32 %50\l  br label %54\l}"];
	Node0x52c39f0 -> Node0x52c3960;
	Node0x52c3960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%54:\l54:                                               \l  %55 = phi i32 [ %53, %43 ], [ %38, %30 ]\l  %56 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @partialHist, i32 0, i32 %55\l  %57 = atomicrmw add i32 addrspace(3)* %56, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %24, label %58, label %64\l|{<s0>T|<s1>F}}"];
	Node0x52c3960:s0 -> Node0x52c4cb0;
	Node0x52c3960:s1 -> Node0x52c21c0;
	Node0x52c4cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%58:\l58:                                               \l  %59 = zext i32 %19 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %59\l  %61 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @partialHist, i32 0, i32 %19\l  %62 = load i32, i32 addrspace(3)* %61, align 4, !tbaa !16\l  %63 = atomicrmw add i32 addrspace(1)* %60, i32 %62 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  br label %64\l}"];
	Node0x52c4cb0 -> Node0x52c21c0;
	Node0x52c21c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  ret void\l}"];
}
