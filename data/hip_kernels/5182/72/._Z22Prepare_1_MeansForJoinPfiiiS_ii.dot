digraph "CFG for '_Z22Prepare_1_MeansForJoinPfiiiS_ii' function" {
	label="CFG for '_Z22Prepare_1_MeansForJoinPfiiiS_ii' function";

	Node0x60b3450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = udiv i32 %15, %12\l  %19 = mul i32 %18, %12\l  %20 = icmp ugt i32 %15, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %17\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %25 = add i32 %23, %16\l  %26 = mul i32 %25, %12\l  %27 = add i32 %26, %24\l  %28 = mul nsw i32 %6, %5\l  %29 = icmp slt i32 %27, %28\l  br i1 %29, label %30, label %115\l|{<s0>T|<s1>F}}"];
	Node0x60b3450:s0 -> Node0x60b5d50;
	Node0x60b3450:s1 -> Node0x60b5de0;
	Node0x60b5d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%30:\l30:                                               \l  %31 = freeze i32 %27\l  %32 = freeze i32 %5\l  %33 = sdiv i32 %31, %32\l  %34 = mul i32 %33, %32\l  %35 = sub i32 %31, %34\l  %36 = shl nsw i32 %28, 2\l  %37 = sext i32 %27 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %40 = fcmp contract ogt float %39, 0.000000e+00\l  %41 = mul i32 %28, 5\l  br i1 %40, label %42, label %93\l|{<s0>T|<s1>F}}"];
	Node0x60b5d50:s0 -> Node0x60b7800;
	Node0x60b5d50:s1 -> Node0x60b7890;
	Node0x60b7800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%42:\l42:                                               \l  %43 = mul i32 %41, %2\l  %44 = add i32 %27, %36\l  %45 = add i32 %44, %43\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %4, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %49 = fcmp contract une float %48, 0.000000e+00\l  %50 = mul i32 %41, %1\l  %51 = add i32 %44, %50\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %4, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %55 = fcmp contract une float %54, 0.000000e+00\l  %56 = select i1 %55, i1 true, i1 %49\l  br i1 %56, label %57, label %93\l|{<s0>T|<s1>F}}"];
	Node0x60b7800:s0 -> Node0x60b87f0;
	Node0x60b7800:s1 -> Node0x60b7890;
	Node0x60b87f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%57:\l57:                                               \l  %58 = sitofp i32 %35 to float\l  %59 = fmul contract float %58, 2.000000e+00\l  %60 = sitofp i32 %5 to float\l  %61 = fdiv contract float %59, %60\l  %62 = fadd contract float %61, -1.000000e+00\l  %63 = sitofp i32 %33 to float\l  %64 = fmul contract float %63, 2.000000e+00\l  %65 = sitofp i32 %6 to float\l  %66 = fdiv contract float %64, %65\l  %67 = fadd contract float %66, -1.000000e+00\l  %68 = fmul contract float %39, %62\l  %69 = mul i32 %41, %3\l  %70 = add i32 %27, %69\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %4, i64 %71\l  store float %68, float addrspace(1)* %72, align 4, !tbaa !16\l  %73 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  %74 = fmul contract float %67, %73\l  %75 = add i32 %70, %28\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %4, i64 %76\l  store float %74, float addrspace(1)* %77, align 4, !tbaa !16\l  %78 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  %79 = fmul contract float %62, %78\l  %80 = fmul contract float %62, %79\l  %81 = shl nsw i32 %28, 1\l  %82 = add i32 %70, %81\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %4, i64 %83\l  store float %80, float addrspace(1)* %84, align 4, !tbaa !16\l  %85 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  %86 = fmul contract float %67, %85\l  %87 = fmul contract float %67, %86\l  %88 = mul nsw i32 %28, 3\l  %89 = add i32 %70, %88\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %4, i64 %90\l  store float %87, float addrspace(1)* %91, align 4, !tbaa !16\l  %92 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  br label %109\l}"];
	Node0x60b87f0 -> Node0x60ba0c0;
	Node0x60b7890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%93:\l93:                                               \l  %94 = mul i32 %41, %3\l  %95 = add i32 %27, %94\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %4, i64 %96\l  store float 0.000000e+00, float addrspace(1)* %97, align 4, !tbaa !16\l  %98 = add i32 %95, %28\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %4, i64 %99\l  store float 0.000000e+00, float addrspace(1)* %100, align 4, !tbaa !16\l  %101 = shl nsw i32 %28, 1\l  %102 = add i32 %95, %101\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %4, i64 %103\l  store float 0.000000e+00, float addrspace(1)* %104, align 4, !tbaa !16\l  %105 = mul nsw i32 %28, 3\l  %106 = add i32 %95, %105\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %4, i64 %107\l  store float 0.000000e+00, float addrspace(1)* %108, align 4, !tbaa !16\l  br label %109\l}"];
	Node0x60b7890 -> Node0x60ba0c0;
	Node0x60ba0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%109:\l109:                                              \l  %110 = phi i32 [ %70, %57 ], [ %95, %93 ]\l  %111 = phi float [ %92, %57 ], [ 0.000000e+00, %93 ]\l  %112 = add i32 %110, %36\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %4, i64 %113\l  store float %111, float addrspace(1)* %114, align 4, !tbaa !16\l  br label %115\l}"];
	Node0x60ba0c0 -> Node0x60b5de0;
	Node0x60b5de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%115:\l115:                                              \l  ret void\l}"];
}
