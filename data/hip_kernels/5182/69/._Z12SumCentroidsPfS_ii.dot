digraph "CFG for '_Z12SumCentroidsPfS_ii' function" {
	label="CFG for '_Z12SumCentroidsPfS_ii' function";

	Node0x5edd320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = udiv i32 %12, %9\l  %16 = mul i32 %15, %9\l  %17 = icmp ugt i32 %12, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %14\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %13\l  %23 = mul i32 %22, %9\l  %24 = add i32 %23, %21\l  %25 = mul nsw i32 %2, 5\l  %26 = icmp slt i32 %24, %25\l  br i1 %26, label %27, label %110\l|{<s0>T|<s1>F}}"];
	Node0x5edd320:s0 -> Node0x5edfc00;
	Node0x5edd320:s1 -> Node0x5edfc90;
	Node0x5edfc00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%27:\l27:                                               \l  %28 = icmp sgt i32 %3, 0\l  br i1 %28, label %29, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5edfc00:s0 -> Node0x5edfe90;
	Node0x5edfc00:s1 -> Node0x5edfee0;
	Node0x5edfe90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %24, %3\l  %31 = and i32 %3, 7\l  %32 = icmp ult i32 %3, 8\l  br i1 %32, label %35, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5edfe90:s0 -> Node0x5edf2e0;
	Node0x5edfe90:s1 -> Node0x5edf330;
	Node0x5edf330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%33:\l33:                                               \l  %34 = and i32 %3, -8\l  br label %56\l}"];
	Node0x5edf330 -> Node0x5ee0580;
	Node0x5edf2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%35:\l35:                                               \l  %36 = phi float [ undef, %29 ], [ %106, %56 ]\l  %37 = phi i32 [ 0, %29 ], [ %107, %56 ]\l  %38 = phi float [ 0.000000e+00, %29 ], [ %106, %56 ]\l  %39 = icmp eq i32 %31, 0\l  br i1 %39, label %52, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5edf2e0:s0 -> Node0x5edfee0;
	Node0x5edf2e0:s1 -> Node0x5ee17f0;
	Node0x5ee17f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ %49, %40 ], [ %37, %35 ]\l  %42 = phi float [ %48, %40 ], [ %38, %35 ]\l  %43 = phi i32 [ %50, %40 ], [ 0, %35 ]\l  %44 = add nsw i32 %41, %30\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %48 = fadd contract float %42, %47\l  %49 = add nuw nsw i32 %41, 1\l  %50 = add i32 %43, 1\l  %51 = icmp eq i32 %50, %31\l  br i1 %51, label %52, label %40, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5ee17f0:s0 -> Node0x5edfee0;
	Node0x5ee17f0:s1 -> Node0x5ee17f0;
	Node0x5edfee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%52:\l52:                                               \l  %53 = phi float [ 0.000000e+00, %27 ], [ %36, %35 ], [ %48, %40 ]\l  %54 = sext i32 %24 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  store float %53, float addrspace(1)* %55, align 4, !tbaa !16\l  br label %110\l}"];
	Node0x5edfee0 -> Node0x5edfc90;
	Node0x5ee0580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%56:\l56:                                               \l  %57 = phi i32 [ 0, %33 ], [ %107, %56 ]\l  %58 = phi float [ 0.000000e+00, %33 ], [ %106, %56 ]\l  %59 = phi i32 [ 0, %33 ], [ %108, %56 ]\l  %60 = add nsw i32 %57, %30\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %64 = fadd contract float %58, %63\l  %65 = or i32 %57, 1\l  %66 = add nsw i32 %65, %30\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %70 = fadd contract float %64, %69\l  %71 = or i32 %57, 2\l  %72 = add nsw i32 %71, %30\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %76 = fadd contract float %70, %75\l  %77 = or i32 %57, 3\l  %78 = add nsw i32 %77, %30\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %82 = fadd contract float %76, %81\l  %83 = or i32 %57, 4\l  %84 = add nsw i32 %83, %30\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %88 = fadd contract float %82, %87\l  %89 = or i32 %57, 5\l  %90 = add nsw i32 %89, %30\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %94 = fadd contract float %88, %93\l  %95 = or i32 %57, 6\l  %96 = add nsw i32 %95, %30\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %100 = fadd contract float %94, %99\l  %101 = or i32 %57, 7\l  %102 = add nsw i32 %101, %30\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %0, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %106 = fadd contract float %100, %105\l  %107 = add nuw nsw i32 %57, 8\l  %108 = add i32 %59, 8\l  %109 = icmp eq i32 %108, %34\l  br i1 %109, label %35, label %56, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5ee0580:s0 -> Node0x5edf2e0;
	Node0x5ee0580:s1 -> Node0x5ee0580;
	Node0x5edfc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%110:\l110:                                              \l  ret void\l}"];
}
