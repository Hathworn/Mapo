digraph "CFG for '_Z17RemoveEdgesKernelPiS_iS_PfS_S0_S0_S_i' function" {
	label="CFG for '_Z17RemoveEdgesKernelPiS_iS_PfS_S0_S0_S_i' function";

	Node0x54c57d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%10:\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !6\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = udiv i32 %18, %15\l  %22 = mul i32 %21, %15\l  %23 = icmp ugt i32 %18, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %20\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %28 = add i32 %26, %19\l  %29 = mul i32 %28, %15\l  %30 = add i32 %29, %27\l  %31 = icmp slt i32 %30, %9\l  br i1 %31, label %32, label %148\l|{<s0>T|<s1>F}}"];
	Node0x54c57d0:s0 -> Node0x54c8b70;
	Node0x54c57d0:s1 -> Node0x54c8c00;
	Node0x54c8b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %36 = icmp eq i32 %35, 1\l  br i1 %36, label %37, label %148\l|{<s0>T|<s1>F}}"];
	Node0x54c8b70:s0 -> Node0x54c97e0;
	Node0x54c8b70:s1 -> Node0x54c8c00;
	Node0x54c97e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%37:\l37:                                               \l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %33\l  %39 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %40 = add nsw i32 %39, 1\l  store i32 %40, i32 addrspace(1)* %38, align 4, !tbaa !16\l  %41 = icmp sgt i32 %9, 0\l  br i1 %41, label %42, label %74\l|{<s0>T|<s1>F}}"];
	Node0x54c97e0:s0 -> Node0x54ca220;
	Node0x54c97e0:s1 -> Node0x54ca2b0;
	Node0x54ca220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%42:\l42:                                               \l  %43 = mul nsw i32 %30, %9\l  %44 = and i32 %9, 3\l  %45 = icmp ult i32 %9, 4\l  br i1 %45, label %48, label %46\l|{<s0>T|<s1>F}}"];
	Node0x54ca220:s0 -> Node0x54ca600;
	Node0x54ca220:s1 -> Node0x54ca650;
	Node0x54ca650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%46:\l46:                                               \l  %47 = and i32 %9, -4\l  br label %77\l}"];
	Node0x54ca650 -> Node0x54ca850;
	Node0x54ca600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%48:\l48:                                               \l  %49 = phi i32 [ undef, %42 ], [ %139, %138 ]\l  %50 = phi i32 [ 0, %42 ], [ %140, %138 ]\l  %51 = phi i32 [ 0, %42 ], [ %139, %138 ]\l  %52 = icmp eq i32 %44, 0\l  br i1 %52, label %74, label %53\l|{<s0>T|<s1>F}}"];
	Node0x54ca600:s0 -> Node0x54ca2b0;
	Node0x54ca600:s1 -> Node0x54cb100;
	Node0x54cb100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi i32 [ %71, %69 ], [ %50, %48 ]\l  %55 = phi i32 [ %70, %69 ], [ %51, %48 ]\l  %56 = phi i32 [ %72, %69 ], [ 0, %48 ]\l  %57 = add nsw i32 %54, %43\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %58\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !16\l  %61 = icmp eq i32 %60, 1\l  br i1 %61, label %62, label %69\l|{<s0>T|<s1>F}}"];
	Node0x54cb100:s0 -> Node0x54cb8c0;
	Node0x54cb100:s1 -> Node0x54cb270;
	Node0x54cb8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%62:\l62:                                               \l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %58\l  %64 = load i32, i32 addrspace(1)* %63, align 4, !tbaa !16\l  %65 = icmp sgt i32 %64, %2\l  br i1 %65, label %68, label %66\l|{<s0>T|<s1>F}}"];
	Node0x54cb8c0:s0 -> Node0x54c8dd0;
	Node0x54cb8c0:s1 -> Node0x54c8e20;
	Node0x54c8e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%66:\l66:                                               \l  %67 = add nsw i32 %55, 1\l  br label %69\l}"];
	Node0x54c8e20 -> Node0x54cb270;
	Node0x54c8dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%68:\l68:                                               \l  store i32 0, i32 addrspace(1)* %59, align 4, !tbaa !16\l  store i32 0, i32 addrspace(1)* %63, align 4, !tbaa !16\l  br label %69\l}"];
	Node0x54c8dd0 -> Node0x54cb270;
	Node0x54cb270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  %70 = phi i32 [ %67, %66 ], [ %55, %68 ], [ %55, %53 ]\l  %71 = add nuw nsw i32 %54, 1\l  %72 = add i32 %56, 1\l  %73 = icmp eq i32 %72, %44\l  br i1 %73, label %74, label %53, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x54cb270:s0 -> Node0x54ca2b0;
	Node0x54cb270:s1 -> Node0x54cb100;
	Node0x54ca2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%74:\l74:                                               \l  %75 = phi i32 [ 0, %37 ], [ %49, %48 ], [ %70, %69 ]\l  %76 = icmp eq i32 %75, 0\l  br i1 %76, label %143, label %148\l|{<s0>T|<s1>F}}"];
	Node0x54ca2b0:s0 -> Node0x54cc6e0;
	Node0x54ca2b0:s1 -> Node0x54c8c00;
	Node0x54ca850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%77:\l77:                                               \l  %78 = phi i32 [ 0, %46 ], [ %140, %138 ]\l  %79 = phi i32 [ 0, %46 ], [ %139, %138 ]\l  %80 = phi i32 [ 0, %46 ], [ %141, %138 ]\l  %81 = add nsw i32 %78, %43\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %82\l  %84 = load i32, i32 addrspace(1)* %83, align 4, !tbaa !16\l  %85 = icmp eq i32 %84, 1\l  br i1 %85, label %86, label %93\l|{<s0>T|<s1>F}}"];
	Node0x54ca850:s0 -> Node0x54ccc90;
	Node0x54ca850:s1 -> Node0x54ccce0;
	Node0x54ccc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%86:\l86:                                               \l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %82\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !16\l  %89 = icmp sgt i32 %88, %2\l  br i1 %89, label %92, label %90\l|{<s0>T|<s1>F}}"];
	Node0x54ccc90:s0 -> Node0x54ccf80;
	Node0x54ccc90:s1 -> Node0x54ccfd0;
	Node0x54ccfd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%90:\l90:                                               \l  %91 = add nsw i32 %79, 1\l  br label %93\l}"];
	Node0x54ccfd0 -> Node0x54ccce0;
	Node0x54ccf80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%92:\l92:                                               \l  store i32 0, i32 addrspace(1)* %83, align 4, !tbaa !16\l  store i32 0, i32 addrspace(1)* %87, align 4, !tbaa !16\l  br label %93\l}"];
	Node0x54ccf80 -> Node0x54ccce0;
	Node0x54ccce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%93:\l93:                                               \l  %94 = phi i32 [ %91, %90 ], [ %79, %92 ], [ %79, %77 ]\l  %95 = or i32 %78, 1\l  %96 = add nsw i32 %95, %43\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %97\l  %99 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !16\l  %100 = icmp eq i32 %99, 1\l  br i1 %100, label %101, label %108\l|{<s0>T|<s1>F}}"];
	Node0x54ccce0:s0 -> Node0x54cd760;
	Node0x54ccce0:s1 -> Node0x54cd7b0;
	Node0x54cd760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%101:\l101:                                              \l  %102 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %97\l  %103 = load i32, i32 addrspace(1)* %102, align 4, !tbaa !16\l  %104 = icmp sgt i32 %103, %2\l  br i1 %104, label %107, label %105\l|{<s0>T|<s1>F}}"];
	Node0x54cd760:s0 -> Node0x54cda50;
	Node0x54cd760:s1 -> Node0x54cdaa0;
	Node0x54cdaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%105:\l105:                                              \l  %106 = add nsw i32 %94, 1\l  br label %108\l}"];
	Node0x54cdaa0 -> Node0x54cd7b0;
	Node0x54cda50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%107:\l107:                                              \l  store i32 0, i32 addrspace(1)* %98, align 4, !tbaa !16\l  store i32 0, i32 addrspace(1)* %102, align 4, !tbaa !16\l  br label %108\l}"];
	Node0x54cda50 -> Node0x54cd7b0;
	Node0x54cd7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%108:\l108:                                              \l  %109 = phi i32 [ %106, %105 ], [ %94, %107 ], [ %94, %93 ]\l  %110 = or i32 %78, 2\l  %111 = add nsw i32 %110, %43\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %112\l  %114 = load i32, i32 addrspace(1)* %113, align 4, !tbaa !16\l  %115 = icmp eq i32 %114, 1\l  br i1 %115, label %116, label %123\l|{<s0>T|<s1>F}}"];
	Node0x54cd7b0:s0 -> Node0x54ce230;
	Node0x54cd7b0:s1 -> Node0x54ce280;
	Node0x54ce230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%116:\l116:                                              \l  %117 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %112\l  %118 = load i32, i32 addrspace(1)* %117, align 4, !tbaa !16\l  %119 = icmp sgt i32 %118, %2\l  br i1 %119, label %122, label %120\l|{<s0>T|<s1>F}}"];
	Node0x54ce230:s0 -> Node0x54ce520;
	Node0x54ce230:s1 -> Node0x54ce570;
	Node0x54ce570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%120:\l120:                                              \l  %121 = add nsw i32 %109, 1\l  br label %123\l}"];
	Node0x54ce570 -> Node0x54ce280;
	Node0x54ce520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%122:\l122:                                              \l  store i32 0, i32 addrspace(1)* %113, align 4, !tbaa !16\l  store i32 0, i32 addrspace(1)* %117, align 4, !tbaa !16\l  br label %123\l}"];
	Node0x54ce520 -> Node0x54ce280;
	Node0x54ce280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%123:\l123:                                              \l  %124 = phi i32 [ %121, %120 ], [ %109, %122 ], [ %109, %108 ]\l  %125 = or i32 %78, 3\l  %126 = add nsw i32 %125, %43\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %127\l  %129 = load i32, i32 addrspace(1)* %128, align 4, !tbaa !16\l  %130 = icmp eq i32 %129, 1\l  br i1 %130, label %131, label %138\l|{<s0>T|<s1>F}}"];
	Node0x54ce280:s0 -> Node0x54cbc10;
	Node0x54ce280:s1 -> Node0x54cad60;
	Node0x54cbc10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%131:\l131:                                              \l  %132 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %127\l  %133 = load i32, i32 addrspace(1)* %132, align 4, !tbaa !16\l  %134 = icmp sgt i32 %133, %2\l  br i1 %134, label %137, label %135\l|{<s0>T|<s1>F}}"];
	Node0x54cbc10:s0 -> Node0x54cbeb0;
	Node0x54cbc10:s1 -> Node0x54cf410;
	Node0x54cf410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%135:\l135:                                              \l  %136 = add nsw i32 %124, 1\l  br label %138\l}"];
	Node0x54cf410 -> Node0x54cad60;
	Node0x54cbeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%137:\l137:                                              \l  store i32 0, i32 addrspace(1)* %128, align 4, !tbaa !16\l  store i32 0, i32 addrspace(1)* %132, align 4, !tbaa !16\l  br label %138\l}"];
	Node0x54cbeb0 -> Node0x54cad60;
	Node0x54cad60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%138:\l138:                                              \l  %139 = phi i32 [ %136, %135 ], [ %124, %137 ], [ %124, %123 ]\l  %140 = add nuw nsw i32 %78, 4\l  %141 = add i32 %80, 4\l  %142 = icmp eq i32 %141, %47\l  br i1 %142, label %48, label %77, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x54cad60:s0 -> Node0x54ca600;
	Node0x54cad60:s1 -> Node0x54ca850;
	Node0x54cc6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%143:\l143:                                              \l  store i32 0, i32 addrspace(1)* %34, align 4, !tbaa !16\l  %144 = getelementptr inbounds float, float addrspace(1)* %7, i64 %33\l  store float 0.000000e+00, float addrspace(1)* %144, align 4, !tbaa !24\l  store i32 0, i32 addrspace(1)* %38, align 4, !tbaa !16\l  %145 = getelementptr inbounds float, float addrspace(1)* %4, i64 %33\l  store float 0.000000e+00, float addrspace(1)* %145, align 4, !tbaa !24\l  %146 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %33\l  store i32 0, i32 addrspace(1)* %146, align 4, !tbaa !16\l  %147 = getelementptr inbounds float, float addrspace(1)* %6, i64 %33\l  store float 0.000000e+00, float addrspace(1)* %147, align 4, !tbaa !24\l  br label %148\l}"];
	Node0x54cc6e0 -> Node0x54c8c00;
	Node0x54c8c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%148:\l148:                                              \l  ret void\l}"];
}
