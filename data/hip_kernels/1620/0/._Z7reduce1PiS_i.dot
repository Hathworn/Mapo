digraph "CFG for '_Z7reduce1PiS_i' function" {
	label="CFG for '_Z7reduce1PiS_i' function";

	Node0x47a6180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = zext i32 %12 to i64\l  %14 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %13\l  %15 = load i32, i32 addrspace(1)* %14, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %16 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ7reduce1PiS_iE5sdata, i32 0, i32 %4\l  store i32 %15, i32 addrspace(3)* %16, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %17 = icmp ugt i16 %9, 1\l  br i1 %17, label %20, label %18\l|{<s0>T|<s1>F}}"];
	Node0x47a6180:s0 -> Node0x47a94d0;
	Node0x47a6180:s1 -> Node0x47a9560;
	Node0x47a9560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%18:\l18:                                               \l  %19 = icmp eq i32 %4, 0\l  br i1 %19, label %34, label %38\l|{<s0>T|<s1>F}}"];
	Node0x47a9560:s0 -> Node0x47a9730;
	Node0x47a9560:s1 -> Node0x47a9780;
	Node0x47a94d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = phi i32 [ %22, %32 ], [ 1, %3 ]\l  %22 = shl i32 %21, 1\l  %23 = add i32 %22, 1023\l  %24 = and i32 %23, %4\l  %25 = icmp eq i32 %24, 0\l  br i1 %25, label %26, label %32\l|{<s0>T|<s1>F}}"];
	Node0x47a94d0:s0 -> Node0x47a9ca0;
	Node0x47a94d0:s1 -> Node0x47a98f0;
	Node0x47a9ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%26:\l26:                                               \l  %27 = add i32 %21, %4\l  %28 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ7reduce1PiS_iE5sdata, i32 0, i32 %27\l  %29 = load i32, i32 addrspace(3)* %28, align 4, !tbaa !7\l  %30 = load i32, i32 addrspace(3)* %16, align 4, !tbaa !7\l  %31 = add nsw i32 %30, %29\l  store i32 %31, i32 addrspace(3)* %16, align 4, !tbaa !7\l  br label %32\l}"];
	Node0x47a9ca0 -> Node0x47a98f0;
	Node0x47a98f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %33 = icmp ult i32 %22, %10\l  br i1 %33, label %20, label %18, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x47a98f0:s0 -> Node0x47a94d0;
	Node0x47a98f0:s1 -> Node0x47a9560;
	Node0x47a9730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%34:\l34:                                               \l  %35 = load i32, i32 addrspace(3)* getelementptr inbounds ([256 x i32], [256\l... x i32] addrspace(3)* @_ZZ7reduce1PiS_iE5sdata, i32 0, i32 0), align 16, !tbaa\l... !7\l  %36 = zext i32 %5 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %36\l  store i32 %35, i32 addrspace(1)* %37, align 4, !tbaa !7\l  br label %38\l}"];
	Node0x47a9730 -> Node0x47a9780;
	Node0x47a9780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%38:\l38:                                               \l  ret void\l}"];
}
