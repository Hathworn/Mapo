digraph "CFG for '_Z26THCudaTensor_kernel_renormPfflf' function" {
	label="CFG for '_Z26THCudaTensor_kernel_renormPfflf' function";

	Node0x5f7bed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = zext i32 %5 to i64\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = zext i32 %7 to i64\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = zext i16 %12 to i64\l  %15 = mul nsw i64 %8, %2\l  %16 = getelementptr inbounds float, float addrspace(1)* %0, i64 %15\l  %17 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ26THCudaTensor_kernel_renormPfflfE6buffer, i32 0, i32 %5\l  store float 0.000000e+00, float addrspace(3)* %17, align 4, !tbaa !7\l  %18 = icmp slt i64 %6, %2\l  br i1 %18, label %19, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5f7bed0:s0 -> Node0x5f7ed30;
	Node0x5f7bed0:s1 -> Node0x5f7edc0;
	Node0x5f7ed30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%19:\l19:                                               \l  %20 = tail call float @llvm.fabs.f32(float %1)\l  %21 = fcmp oeq float %20, 0x7FF0000000000000\l  %22 = bitcast float %1 to i32\l  %23 = fcmp olt float %1, 0.000000e+00\l  %24 = fcmp oeq float %1, 0.000000e+00\l  br i1 %21, label %192, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5f7ed30:s0 -> Node0x5f7f2e0;
	Node0x5f7ed30:s1 -> Node0x5f7f370;
	Node0x5f7f4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%25:\l25:                                               \l  %26 = phi float [ %216, %192 ], [ %189, %29 ]\l  store float %26, float addrspace(3)* %17, align 4, !tbaa !7\l  br label %27\l}"];
	Node0x5f7f4b0 -> Node0x5f7edc0;
	Node0x5f7edc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%27:\l27:                                               \l  %28 = icmp ult i16 %12, 2\l  br i1 %28, label %219, label %414\l|{<s0>T|<s1>F}}"];
	Node0x5f7edc0:s0 -> Node0x5f7fe90;
	Node0x5f7edc0:s1 -> Node0x5f7fee0;
	Node0x5f7f370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%29:\l29:                                               \l  %30 = phi float [ %189, %29 ], [ 0.000000e+00, %19 ]\l  %31 = phi i64 [ %190, %29 ], [ %6, %19 ]\l  %32 = getelementptr inbounds float, float addrspace(1)* %16, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %34 = tail call float @llvm.fabs.f32(float %33)\l  %35 = tail call float @llvm.amdgcn.frexp.mant.f32(float %34)\l  %36 = fcmp olt float %35, 0x3FE5555560000000\l  %37 = zext i1 %36 to i32\l  %38 = tail call float @llvm.amdgcn.ldexp.f32(float %35, i32 %37)\l  %39 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %34)\l  %40 = sub nsw i32 %39, %37\l  %41 = fadd float %38, -1.000000e+00\l  %42 = fadd float %38, 1.000000e+00\l  %43 = fadd float %42, -1.000000e+00\l  %44 = fsub float %38, %43\l  %45 = tail call float @llvm.amdgcn.rcp.f32(float %42)\l  %46 = fmul float %41, %45\l  %47 = fmul float %42, %46\l  %48 = fneg float %47\l  %49 = tail call float @llvm.fma.f32(float %46, float %42, float %48)\l  %50 = tail call float @llvm.fma.f32(float %46, float %44, float %49)\l  %51 = fadd float %47, %50\l  %52 = fsub float %51, %47\l  %53 = fsub float %50, %52\l  %54 = fsub float %41, %51\l  %55 = fsub float %41, %54\l  %56 = fsub float %55, %51\l  %57 = fsub float %56, %53\l  %58 = fadd float %54, %57\l  %59 = fmul float %45, %58\l  %60 = fadd float %46, %59\l  %61 = fsub float %60, %46\l  %62 = fsub float %59, %61\l  %63 = fmul float %60, %60\l  %64 = fneg float %63\l  %65 = tail call float @llvm.fma.f32(float %60, float %60, float %64)\l  %66 = fmul float %62, 2.000000e+00\l  %67 = tail call float @llvm.fma.f32(float %60, float %66, float %65)\l  %68 = fadd float %63, %67\l  %69 = fsub float %68, %63\l  %70 = fsub float %67, %69\l  %71 = tail call float @llvm.fmuladd.f32(float %68, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %72 = tail call float @llvm.fmuladd.f32(float %68, float %71, float\l... 0x3FD999BDE0000000)\l  %73 = sitofp i32 %40 to float\l  %74 = fmul float %73, 0x3FE62E4300000000\l  %75 = fneg float %74\l  %76 = tail call float @llvm.fma.f32(float %73, float 0x3FE62E4300000000,\l... float %75)\l  %77 = tail call float @llvm.fma.f32(float %73, float 0xBE205C6100000000,\l... float %76)\l  %78 = fadd float %74, %77\l  %79 = fsub float %78, %74\l  %80 = fsub float %77, %79\l  %81 = tail call float @llvm.amdgcn.ldexp.f32(float %60, i32 1)\l  %82 = fmul float %60, %68\l  %83 = fneg float %82\l  %84 = tail call float @llvm.fma.f32(float %68, float %60, float %83)\l  %85 = tail call float @llvm.fma.f32(float %68, float %62, float %84)\l  %86 = tail call float @llvm.fma.f32(float %70, float %60, float %85)\l  %87 = fadd float %82, %86\l  %88 = fsub float %87, %82\l  %89 = fsub float %86, %88\l  %90 = fmul float %68, %72\l  %91 = fneg float %90\l  %92 = tail call float @llvm.fma.f32(float %68, float %72, float %91)\l  %93 = tail call float @llvm.fma.f32(float %70, float %72, float %92)\l  %94 = fadd float %90, %93\l  %95 = fsub float %94, %90\l  %96 = fsub float %93, %95\l  %97 = fadd float %94, 0x3FE5555540000000\l  %98 = fadd float %97, 0xBFE5555540000000\l  %99 = fsub float %94, %98\l  %100 = fadd float %96, 0x3E2E720200000000\l  %101 = fadd float %100, %99\l  %102 = fadd float %97, %101\l  %103 = fsub float %102, %97\l  %104 = fsub float %101, %103\l  %105 = fmul float %87, %102\l  %106 = fneg float %105\l  %107 = tail call float @llvm.fma.f32(float %87, float %102, float %106)\l  %108 = tail call float @llvm.fma.f32(float %87, float %104, float %107)\l  %109 = tail call float @llvm.fma.f32(float %89, float %102, float %108)\l  %110 = tail call float @llvm.amdgcn.ldexp.f32(float %62, i32 1)\l  %111 = fadd float %105, %109\l  %112 = fsub float %111, %105\l  %113 = fsub float %109, %112\l  %114 = fadd float %81, %111\l  %115 = fsub float %114, %81\l  %116 = fsub float %111, %115\l  %117 = fadd float %110, %113\l  %118 = fadd float %117, %116\l  %119 = fadd float %114, %118\l  %120 = fsub float %119, %114\l  %121 = fsub float %118, %120\l  %122 = fadd float %78, %119\l  %123 = fsub float %122, %78\l  %124 = fsub float %122, %123\l  %125 = fsub float %78, %124\l  %126 = fsub float %119, %123\l  %127 = fadd float %126, %125\l  %128 = fadd float %80, %121\l  %129 = fsub float %128, %80\l  %130 = fsub float %128, %129\l  %131 = fsub float %80, %130\l  %132 = fsub float %121, %129\l  %133 = fadd float %132, %131\l  %134 = fadd float %128, %127\l  %135 = fadd float %122, %134\l  %136 = fsub float %135, %122\l  %137 = fsub float %134, %136\l  %138 = fadd float %133, %137\l  %139 = fadd float %135, %138\l  %140 = fsub float %139, %135\l  %141 = fsub float %138, %140\l  %142 = fmul float %139, %1\l  %143 = fneg float %142\l  %144 = tail call float @llvm.fma.f32(float %1, float %139, float %143)\l  %145 = tail call float @llvm.fma.f32(float %1, float %141, float %144)\l  %146 = fadd float %142, %145\l  %147 = fsub float %146, %142\l  %148 = fsub float %145, %147\l  %149 = tail call float @llvm.fabs.f32(float %142) #4\l  %150 = fcmp oeq float %149, 0x7FF0000000000000\l  %151 = select i1 %150, float %142, float %146\l  %152 = tail call float @llvm.fabs.f32(float %151) #4\l  %153 = fcmp oeq float %152, 0x7FF0000000000000\l  %154 = select i1 %153, float 0.000000e+00, float %148\l  %155 = fcmp oeq float %151, 0x40562E4300000000\l  %156 = select i1 %155, float 0x3EE0000000000000, float 0.000000e+00\l  %157 = fsub float %151, %156\l  %158 = fadd float %156, %154\l  %159 = fmul float %157, 0x3FF7154760000000\l  %160 = tail call float @llvm.rint.f32(float %159)\l  %161 = fcmp ogt float %157, 0x40562E4300000000\l  %162 = fcmp olt float %157, 0xC059D1DA00000000\l  %163 = fneg float %159\l  %164 = tail call float @llvm.fma.f32(float %157, float 0x3FF7154760000000,\l... float %163)\l  %165 = tail call float @llvm.fma.f32(float %157, float 0x3E54AE0BE0000000,\l... float %164)\l  %166 = fsub float %159, %160\l  %167 = fadd float %165, %166\l  %168 = tail call float @llvm.exp2.f32(float %167)\l  %169 = fptosi float %160 to i32\l  %170 = tail call float @llvm.amdgcn.ldexp.f32(float %168, i32 %169)\l  %171 = select i1 %162, float 0.000000e+00, float %170\l  %172 = select i1 %161, float 0x7FF0000000000000, float %171\l  %173 = tail call float @llvm.fma.f32(float %172, float %158, float %172)\l  %174 = tail call float @llvm.fabs.f32(float %172) #4\l  %175 = fcmp oeq float %174, 0x7FF0000000000000\l  %176 = select i1 %175, float %172, float %173\l  %177 = tail call float @llvm.fabs.f32(float %176)\l  %178 = fcmp oeq float %34, 0x7FF0000000000000\l  %179 = fcmp oeq float %33, 0.000000e+00\l  %180 = or i1 %179, %178\l  %181 = xor i1 %23, %179\l  %182 = select i1 %181, float 0.000000e+00, float 0x7FF0000000000000\l  %183 = select i1 %180, float %182, float %177\l  %184 = fcmp uno float %34, %1\l  %185 = select i1 %184, float 0x7FF8000000000000, float %183\l  %186 = fcmp oeq float %34, 1.000000e+00\l  %187 = or i1 %24, %186\l  %188 = select i1 %187, float 1.000000e+00, float %185\l  %189 = fadd contract float %30, %188\l  %190 = add nuw nsw i64 %31, %14\l  %191 = icmp slt i64 %190, %2\l  br i1 %191, label %29, label %25, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5f7f370:s0 -> Node0x5f7f370;
	Node0x5f7f370:s1 -> Node0x5f7f4b0;
	Node0x5f7f2e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%192:\l192:                                              \l  %193 = phi float [ %216, %192 ], [ 0.000000e+00, %19 ]\l  %194 = phi i64 [ %217, %192 ], [ %6, %19 ]\l  %195 = getelementptr inbounds float, float addrspace(1)* %16, i64 %194\l  %196 = load float, float addrspace(1)* %195, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %197 = tail call float @llvm.fabs.f32(float %196)\l  %198 = fcmp oeq float %197, 1.000000e+00\l  %199 = fadd float %197, -1.000000e+00\l  %200 = bitcast float %199 to i32\l  %201 = xor i32 %200, %22\l  %202 = icmp sgt i32 %201, -1\l  %203 = select i1 %202, float 0x7FF0000000000000, float 0.000000e+00\l  %204 = select i1 %198, float %197, float %203\l  %205 = fcmp oeq float %197, 0x7FF0000000000000\l  %206 = fcmp oeq float %196, 0.000000e+00\l  %207 = or i1 %206, %205\l  %208 = xor i1 %23, %206\l  %209 = select i1 %208, float 0.000000e+00, float 0x7FF0000000000000\l  %210 = select i1 %207, float %209, float %204\l  %211 = fcmp uno float %197, %1\l  %212 = select i1 %211, float 0x7FF8000000000000, float %210\l  %213 = fcmp oeq float %197, 1.000000e+00\l  %214 = or i1 %24, %213\l  %215 = select i1 %214, float 1.000000e+00, float %212\l  %216 = fadd contract float %193, %215\l  %217 = add nuw nsw i64 %194, %14\l  %218 = icmp slt i64 %217, %2\l  br i1 %218, label %192, label %25, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5f7f2e0:s0 -> Node0x5f7f2e0;
	Node0x5f7f2e0:s1 -> Node0x5f7f4b0;
	Node0x5f7fe90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%219:\l219:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %220 = load float, float addrspace(3)* getelementptr inbounds ([32 x float],\l... [32 x float] addrspace(3)* @_ZZ26THCudaTensor_kernel_renormPfflfE6buffer, i32\l... 0, i32 0), align 16, !tbaa !7\l  %221 = fdiv contract float 1.000000e+00, %1\l  %222 = tail call float @llvm.fabs.f32(float %220)\l  %223 = tail call float @llvm.amdgcn.frexp.mant.f32(float %222)\l  %224 = fcmp olt float %223, 0x3FE5555560000000\l  %225 = zext i1 %224 to i32\l  %226 = tail call float @llvm.amdgcn.ldexp.f32(float %223, i32 %225)\l  %227 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %222)\l  %228 = sub nsw i32 %227, %225\l  %229 = fadd float %226, -1.000000e+00\l  %230 = fadd float %226, 1.000000e+00\l  %231 = fadd float %230, -1.000000e+00\l  %232 = fsub float %226, %231\l  %233 = tail call float @llvm.amdgcn.rcp.f32(float %230)\l  %234 = fmul float %229, %233\l  %235 = fmul float %230, %234\l  %236 = fneg float %235\l  %237 = tail call float @llvm.fma.f32(float %234, float %230, float %236)\l  %238 = tail call float @llvm.fma.f32(float %234, float %232, float %237)\l  %239 = fadd float %235, %238\l  %240 = fsub float %239, %235\l  %241 = fsub float %238, %240\l  %242 = fsub float %229, %239\l  %243 = fsub float %229, %242\l  %244 = fsub float %243, %239\l  %245 = fsub float %244, %241\l  %246 = fadd float %242, %245\l  %247 = fmul float %233, %246\l  %248 = fadd float %234, %247\l  %249 = fsub float %248, %234\l  %250 = fsub float %247, %249\l  %251 = fmul float %248, %248\l  %252 = fneg float %251\l  %253 = tail call float @llvm.fma.f32(float %248, float %248, float %252)\l  %254 = fmul float %250, 2.000000e+00\l  %255 = tail call float @llvm.fma.f32(float %248, float %254, float %253)\l  %256 = fadd float %251, %255\l  %257 = fsub float %256, %251\l  %258 = fsub float %255, %257\l  %259 = tail call float @llvm.fmuladd.f32(float %256, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %260 = tail call float @llvm.fmuladd.f32(float %256, float %259, float\l... 0x3FD999BDE0000000)\l  %261 = sitofp i32 %228 to float\l  %262 = fmul float %261, 0x3FE62E4300000000\l  %263 = fneg float %262\l  %264 = tail call float @llvm.fma.f32(float %261, float 0x3FE62E4300000000,\l... float %263)\l  %265 = tail call float @llvm.fma.f32(float %261, float 0xBE205C6100000000,\l... float %264)\l  %266 = fadd float %262, %265\l  %267 = fsub float %266, %262\l  %268 = fsub float %265, %267\l  %269 = tail call float @llvm.amdgcn.ldexp.f32(float %248, i32 1)\l  %270 = fmul float %248, %256\l  %271 = fneg float %270\l  %272 = tail call float @llvm.fma.f32(float %256, float %248, float %271)\l  %273 = tail call float @llvm.fma.f32(float %256, float %250, float %272)\l  %274 = tail call float @llvm.fma.f32(float %258, float %248, float %273)\l  %275 = fadd float %270, %274\l  %276 = fsub float %275, %270\l  %277 = fsub float %274, %276\l  %278 = fmul float %256, %260\l  %279 = fneg float %278\l  %280 = tail call float @llvm.fma.f32(float %256, float %260, float %279)\l  %281 = tail call float @llvm.fma.f32(float %258, float %260, float %280)\l  %282 = fadd float %278, %281\l  %283 = fsub float %282, %278\l  %284 = fsub float %281, %283\l  %285 = fadd float %282, 0x3FE5555540000000\l  %286 = fadd float %285, 0xBFE5555540000000\l  %287 = fsub float %282, %286\l  %288 = fadd float %284, 0x3E2E720200000000\l  %289 = fadd float %288, %287\l  %290 = fadd float %285, %289\l  %291 = fsub float %290, %285\l  %292 = fsub float %289, %291\l  %293 = fmul float %275, %290\l  %294 = fneg float %293\l  %295 = tail call float @llvm.fma.f32(float %275, float %290, float %294)\l  %296 = tail call float @llvm.fma.f32(float %275, float %292, float %295)\l  %297 = tail call float @llvm.fma.f32(float %277, float %290, float %296)\l  %298 = tail call float @llvm.amdgcn.ldexp.f32(float %250, i32 1)\l  %299 = fadd float %293, %297\l  %300 = fsub float %299, %293\l  %301 = fsub float %297, %300\l  %302 = fadd float %269, %299\l  %303 = fsub float %302, %269\l  %304 = fsub float %299, %303\l  %305 = fadd float %298, %301\l  %306 = fadd float %305, %304\l  %307 = fadd float %302, %306\l  %308 = fsub float %307, %302\l  %309 = fsub float %306, %308\l  %310 = fadd float %266, %307\l  %311 = fsub float %310, %266\l  %312 = fsub float %310, %311\l  %313 = fsub float %266, %312\l  %314 = fsub float %307, %311\l  %315 = fadd float %314, %313\l  %316 = fadd float %268, %309\l  %317 = fsub float %316, %268\l  %318 = fsub float %316, %317\l  %319 = fsub float %268, %318\l  %320 = fsub float %309, %317\l  %321 = fadd float %320, %319\l  %322 = fadd float %316, %315\l  %323 = fadd float %310, %322\l  %324 = fsub float %323, %310\l  %325 = fsub float %322, %324\l  %326 = fadd float %321, %325\l  %327 = fadd float %323, %326\l  %328 = fsub float %327, %323\l  %329 = fsub float %326, %328\l  %330 = fmul float %221, %327\l  %331 = fneg float %330\l  %332 = tail call float @llvm.fma.f32(float %221, float %327, float %331)\l  %333 = tail call float @llvm.fma.f32(float %221, float %329, float %332)\l  %334 = fadd float %330, %333\l  %335 = fsub float %334, %330\l  %336 = fsub float %333, %335\l  %337 = tail call float @llvm.fabs.f32(float %330) #4\l  %338 = fcmp oeq float %337, 0x7FF0000000000000\l  %339 = select i1 %338, float %330, float %334\l  %340 = tail call float @llvm.fabs.f32(float %339) #4\l  %341 = fcmp oeq float %340, 0x7FF0000000000000\l  %342 = select i1 %341, float 0.000000e+00, float %336\l  %343 = fcmp oeq float %339, 0x40562E4300000000\l  %344 = select i1 %343, float 0x3EE0000000000000, float 0.000000e+00\l  %345 = fsub float %339, %344\l  %346 = fadd float %344, %342\l  %347 = fmul float %345, 0x3FF7154760000000\l  %348 = tail call float @llvm.rint.f32(float %347)\l  %349 = fcmp ogt float %345, 0x40562E4300000000\l  %350 = fcmp olt float %345, 0xC059D1DA00000000\l  %351 = fneg float %347\l  %352 = tail call float @llvm.fma.f32(float %345, float 0x3FF7154760000000,\l... float %351)\l  %353 = tail call float @llvm.fma.f32(float %345, float 0x3E54AE0BE0000000,\l... float %352)\l  %354 = fsub float %347, %348\l  %355 = fadd float %353, %354\l  %356 = tail call float @llvm.exp2.f32(float %355)\l  %357 = fptosi float %348 to i32\l  %358 = tail call float @llvm.amdgcn.ldexp.f32(float %356, i32 %357)\l  %359 = select i1 %350, float 0.000000e+00, float %358\l  %360 = select i1 %349, float 0x7FF0000000000000, float %359\l  %361 = tail call float @llvm.fma.f32(float %360, float %346, float %360)\l  %362 = tail call float @llvm.fabs.f32(float %360) #4\l  %363 = fcmp oeq float %362, 0x7FF0000000000000\l  %364 = select i1 %363, float %360, float %361\l  %365 = tail call float @llvm.fabs.f32(float %221)\l  %366 = tail call float @llvm.trunc.f32(float %365)\l  %367 = fcmp oeq float %365, %366\l  %368 = zext i1 %367 to i32\l  %369 = fmul float %366, 5.000000e-01\l  %370 = tail call float @llvm.amdgcn.fract.f32(float %369)\l  %371 = tail call i1 @llvm.amdgcn.class.f32(float %369, i32 516)\l  %372 = select i1 %371, float 0.000000e+00, float %370\l  %373 = fcmp oeq float %372, 0.000000e+00\l  %374 = and i1 %367, %373\l  %375 = zext i1 %374 to i32\l  %376 = add nuw nsw i32 %375, %368\l  %377 = icmp eq i32 %376, 1\l  %378 = fcmp olt float %220, 0.000000e+00\l  %379 = and i1 %377, %378\l  %380 = select i1 %379, float -0.000000e+00, float 0.000000e+00\l  %381 = tail call float @llvm.copysign.f32(float %364, float %380)\l  %382 = fcmp uge float %220, 0.000000e+00\l  %383 = icmp ne i32 %376, 0\l  %384 = select i1 %382, i1 true, i1 %383\l  %385 = select i1 %384, float %381, float 0x7FF8000000000000\l  %386 = fcmp oeq float %365, 0x7FF0000000000000\l  br i1 %386, label %387, label %396\l|{<s0>T|<s1>F}}"];
	Node0x5f7fe90:s0 -> Node0x5f927f0;
	Node0x5f7fe90:s1 -> Node0x5f92880;
	Node0x5f927f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%387:\l387:                                              \l  %388 = fcmp oeq float %222, 1.000000e+00\l  %389 = fadd float %222, -1.000000e+00\l  %390 = bitcast float %221 to i32\l  %391 = bitcast float %389 to i32\l  %392 = xor i32 %391, %390\l  %393 = icmp sgt i32 %392, -1\l  %394 = select i1 %393, float 0x7FF0000000000000, float 0.000000e+00\l  %395 = select i1 %388, float %222, float %394\l  br label %396\l}"];
	Node0x5f927f0 -> Node0x5f92880;
	Node0x5f92880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%396:\l396:                                              \l  %397 = phi float [ %385, %219 ], [ %395, %387 ]\l  %398 = fcmp oeq float %222, 0x7FF0000000000000\l  %399 = fcmp oeq float %220, 0.000000e+00\l  %400 = or i1 %399, %398\l  %401 = fcmp olt float %221, 0.000000e+00\l  %402 = xor i1 %401, %399\l  %403 = select i1 %402, float 0.000000e+00, float 0x7FF0000000000000\l  %404 = select i1 %377, float %220, float 0.000000e+00\l  %405 = tail call float @llvm.copysign.f32(float %403, float %404)\l  %406 = select i1 %400, float %405, float %397\l  %407 = fcmp uno float %220, %221\l  %408 = select i1 %407, float 0x7FF8000000000000, float %406\l  %409 = fcmp oeq float %220, 1.000000e+00\l  %410 = fcmp oeq float %221, 0.000000e+00\l  %411 = or i1 %410, %409\l  %412 = select i1 %411, float 1.000000e+00, float %408\l  %413 = fcmp contract ogt float %412, %3\l  br i1 %413, label %426, label %439\l|{<s0>T|<s1>F}}"];
	Node0x5f92880:s0 -> Node0x5f93980;
	Node0x5f92880:s1 -> Node0x5f939d0;
	Node0x5f7fee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%414:\l414:                                              \l  %415 = phi i32 [ %416, %424 ], [ %13, %27 ]\l  %416 = lshr i32 %415, 1\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %417 = icmp ult i32 %5, %416\l  br i1 %417, label %418, label %424\l|{<s0>T|<s1>F}}"];
	Node0x5f7fee0:s0 -> Node0x5f93f60;
	Node0x5f7fee0:s1 -> Node0x5f93b40;
	Node0x5f93f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%418:\l418:                                              \l  %419 = add nuw nsw i32 %416, %5\l  %420 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ26THCudaTensor_kernel_renormPfflfE6buffer, i32 0, i32 %419\l  %421 = load float, float addrspace(3)* %420, align 4, !tbaa !7\l  %422 = load float, float addrspace(3)* %17, align 4, !tbaa !7\l  %423 = fadd contract float %421, %422\l  store float %423, float addrspace(3)* %17, align 4, !tbaa !7\l  br label %424\l}"];
	Node0x5f93f60 -> Node0x5f93b40;
	Node0x5f93b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%424:\l424:                                              \l  %425 = icmp ult i32 %415, 4\l  br i1 %425, label %219, label %414, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5f93b40:s0 -> Node0x5f7fe90;
	Node0x5f93b40:s1 -> Node0x5f7fee0;
	Node0x5f93980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%426:\l426:                                              \l  %427 = fpext float %3 to double\l  %428 = fpext float %412 to double\l  %429 = fadd contract double %428, 0x3E7AD7F29ABCAF48\l  %430 = fdiv contract double %427, %429\l  %431 = fptrunc double %430 to float\l  br i1 %18, label %432, label %439\l|{<s0>T|<s1>F}}"];
	Node0x5f93980:s0 -> Node0x5f93d60;
	Node0x5f93980:s1 -> Node0x5f939d0;
	Node0x5f93d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%432:\l432:                                              \l  %433 = phi i64 [ %437, %432 ], [ %6, %426 ]\l  %434 = getelementptr inbounds float, float addrspace(1)* %16, i64 %433\l  %435 = load float, float addrspace(1)* %434, align 4, !tbaa !7\l  %436 = fmul contract float %435, %431\l  store float %436, float addrspace(1)* %434, align 4, !tbaa !7\l  %437 = add nuw nsw i64 %433, %14\l  %438 = icmp slt i64 %437, %2\l  br i1 %438, label %432, label %439, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5f93d60:s0 -> Node0x5f93d60;
	Node0x5f93d60:s1 -> Node0x5f939d0;
	Node0x5f939d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%439:\l439:                                              \l  ret void\l}"];
}
