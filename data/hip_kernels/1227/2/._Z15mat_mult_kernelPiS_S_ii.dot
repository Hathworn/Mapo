digraph "CFG for '_Z15mat_mult_kernelPiS_S_ii' function" {
	label="CFG for '_Z15mat_mult_kernelPiS_S_ii' function";

	Node0x5bfa8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !7\l  %16 = mul i32 %7, %12\l  %17 = add i32 %16, %6\l  %18 = icmp slt i32 %17, %3\l  br i1 %18, label %19, label %147\l|{<s0>T|<s1>F}}"];
	Node0x5bfa8c0:s0 -> Node0x5bfcb00;
	Node0x5bfa8c0:s1 -> Node0x5bfcb90;
	Node0x5bfcb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%19:\l19:                                               \l  %20 = icmp sgt i32 %4, 0\l  %21 = udiv i32 %15, %12\l  %22 = mul i32 %21, %12\l  %23 = icmp ugt i32 %15, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %12\l  %27 = and i32 %4, 7\l  %28 = icmp ult i32 %4, 8\l  %29 = and i32 %4, -8\l  %30 = icmp eq i32 %27, 0\l  br label %31\l}"];
	Node0x5bfcb00 -> Node0x5bfd370;
	Node0x5bfd370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%31:\l31:                                               \l  %32 = phi i32 [ %17, %19 ], [ %59, %55 ]\l  br i1 %20, label %33, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5bfd370:s0 -> Node0x5bfc960;
	Node0x5bfd370:s1 -> Node0x5bfd460;
	Node0x5bfc960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%33:\l33:                                               \l  %34 = mul nsw i32 %32, %4\l  br i1 %28, label %35, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5bfc960:s0 -> Node0x5bfc9f0;
	Node0x5bfc960:s1 -> Node0x5bfd8f0;
	Node0x5bfc9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%35:\l35:                                               \l  %36 = phi i32 [ undef, %33 ], [ %143, %61 ]\l  %37 = phi i32 [ 0, %33 ], [ %144, %61 ]\l  %38 = phi i32 [ 0, %33 ], [ %143, %61 ]\l  br i1 %30, label %55, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5bfc9f0:s0 -> Node0x5bfd460;
	Node0x5bfc9f0:s1 -> Node0x5bfe0c0;
	Node0x5bfe0c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i32 [ %52, %39 ], [ %37, %35 ]\l  %41 = phi i32 [ %51, %39 ], [ %38, %35 ]\l  %42 = phi i32 [ %53, %39 ], [ 0, %35 ]\l  %43 = add nsw i32 %40, %34\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !16\l  %47 = zext i32 %40 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !16\l  %50 = mul nsw i32 %49, %46\l  %51 = add nsw i32 %50, %41\l  %52 = add nuw nsw i32 %40, 1\l  %53 = add i32 %42, 1\l  %54 = icmp eq i32 %53, %27\l  br i1 %54, label %55, label %39, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5bfe0c0:s0 -> Node0x5bfd460;
	Node0x5bfe0c0:s1 -> Node0x5bfe0c0;
	Node0x5bfd460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%55:\l55:                                               \l  %56 = phi i32 [ 0, %31 ], [ %36, %35 ], [ %51, %39 ]\l  %57 = sext i32 %32 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %57\l  store i32 %56, i32 addrspace(1)* %58, align 4, !tbaa !16\l  %59 = add i32 %26, %32\l  %60 = icmp slt i32 %59, %3\l  br i1 %60, label %31, label %147, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5bfd460:s0 -> Node0x5bfd370;
	Node0x5bfd460:s1 -> Node0x5bfcb90;
	Node0x5bfd8f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%61:\l61:                                               \l  %62 = phi i32 [ %144, %61 ], [ 0, %33 ]\l  %63 = phi i32 [ %143, %61 ], [ 0, %33 ]\l  %64 = phi i32 [ %145, %61 ], [ 0, %33 ]\l  %65 = add nsw i32 %62, %34\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %66\l  %68 = load i32, i32 addrspace(1)* %67, align 4, !tbaa !16\l  %69 = zext i32 %62 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %69\l  %71 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !16\l  %72 = mul nsw i32 %71, %68\l  %73 = add nsw i32 %72, %63\l  %74 = or i32 %62, 1\l  %75 = add nsw i32 %74, %34\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %76\l  %78 = load i32, i32 addrspace(1)* %77, align 4, !tbaa !16\l  %79 = zext i32 %74 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %79\l  %81 = load i32, i32 addrspace(1)* %80, align 4, !tbaa !16\l  %82 = mul nsw i32 %81, %78\l  %83 = add nsw i32 %82, %73\l  %84 = or i32 %62, 2\l  %85 = add nsw i32 %84, %34\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %86\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !16\l  %89 = zext i32 %84 to i64\l  %90 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %89\l  %91 = load i32, i32 addrspace(1)* %90, align 4, !tbaa !16\l  %92 = mul nsw i32 %91, %88\l  %93 = add nsw i32 %92, %83\l  %94 = or i32 %62, 3\l  %95 = add nsw i32 %94, %34\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %96\l  %98 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !16\l  %99 = zext i32 %94 to i64\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %99\l  %101 = load i32, i32 addrspace(1)* %100, align 4, !tbaa !16\l  %102 = mul nsw i32 %101, %98\l  %103 = add nsw i32 %102, %93\l  %104 = or i32 %62, 4\l  %105 = add nsw i32 %104, %34\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %106\l  %108 = load i32, i32 addrspace(1)* %107, align 4, !tbaa !16\l  %109 = zext i32 %104 to i64\l  %110 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %109\l  %111 = load i32, i32 addrspace(1)* %110, align 4, !tbaa !16\l  %112 = mul nsw i32 %111, %108\l  %113 = add nsw i32 %112, %103\l  %114 = or i32 %62, 5\l  %115 = add nsw i32 %114, %34\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %116\l  %118 = load i32, i32 addrspace(1)* %117, align 4, !tbaa !16\l  %119 = zext i32 %114 to i64\l  %120 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %119\l  %121 = load i32, i32 addrspace(1)* %120, align 4, !tbaa !16\l  %122 = mul nsw i32 %121, %118\l  %123 = add nsw i32 %122, %113\l  %124 = or i32 %62, 6\l  %125 = add nsw i32 %124, %34\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %126\l  %128 = load i32, i32 addrspace(1)* %127, align 4, !tbaa !16\l  %129 = zext i32 %124 to i64\l  %130 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %129\l  %131 = load i32, i32 addrspace(1)* %130, align 4, !tbaa !16\l  %132 = mul nsw i32 %131, %128\l  %133 = add nsw i32 %132, %123\l  %134 = or i32 %62, 7\l  %135 = add nsw i32 %134, %34\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %136\l  %138 = load i32, i32 addrspace(1)* %137, align 4, !tbaa !16\l  %139 = zext i32 %134 to i64\l  %140 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %139\l  %141 = load i32, i32 addrspace(1)* %140, align 4, !tbaa !16\l  %142 = mul nsw i32 %141, %138\l  %143 = add nsw i32 %142, %133\l  %144 = add nuw nsw i32 %62, 8\l  %145 = add i32 %64, 8\l  %146 = icmp eq i32 %145, %29\l  br i1 %146, label %35, label %61, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5bfd8f0:s0 -> Node0x5bfc9f0;
	Node0x5bfd8f0:s1 -> Node0x5bfd8f0;
	Node0x5bfcb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%147:\l147:                                              \l  ret void\l}"];
}
