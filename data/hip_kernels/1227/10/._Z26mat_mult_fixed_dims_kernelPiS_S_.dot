digraph "CFG for '_Z26mat_mult_fixed_dims_kernelPiS_S_' function" {
	label="CFG for '_Z26mat_mult_fixed_dims_kernelPiS_S_' function";

	Node0x62b1d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %6 = bitcast i8 addrspace(4)* %5 to i32 addrspace(4)*\l  %7 = load i32, i32 addrspace(4)* %6, align 4, !tbaa !4\l  %8 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !13, !invariant.load\l... !14\l  %11 = zext i16 %10 to i32\l  %12 = udiv i32 %7, %11\l  %13 = mul i32 %12, %11\l  %14 = icmp ugt i32 %7, %13\l  %15 = zext i1 %14 to i32\l  %16 = add i32 %12, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %19 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ26mat_mult_fixed_dims_kernelPiS_S_E4smem, i32 0, i32 %18\l  %20 = icmp ult i16 %10, 2\l  %21 = icmp eq i32 %18, 0\l  %22 = udiv i16 239, %10\l  %23 = zext i16 %22 to i32\l  br label %25\l}"];
	Node0x62b1d20 -> Node0x62b4130;
	Node0x62b4540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x62b4130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%25:\l25:                                               \l  %26 = phi i32 [ 0, %3 ], [ %35, %33 ]\l  %27 = phi i32 [ 0, %3 ], [ %34, %33 ]\l  %28 = add i32 %26, %17\l  %29 = mul nsw i32 %28, 240\l  %30 = shl nsw i32 %28, 9\l  br label %31\l}"];
	Node0x62b4130 -> Node0x62b4a80;
	Node0x62b4a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%31:\l31:                                               \l  %32 = phi i32 [ 0, %25 ], [ %83, %82 ]\l  br label %38\l}"];
	Node0x62b4a80 -> Node0x62b3b80;
	Node0x62b4650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%33:\l33:                                               \l  %34 = add nuw nsw i32 %27, 1\l  %35 = mul i32 %16, %34\l  %36 = icmp ult i32 %35, 256\l  br i1 %36, label %25, label %24, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x62b4650:s0 -> Node0x62b4130;
	Node0x62b4650:s1 -> Node0x62b4540;
	Node0x62b5210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%37:\l37:                                               \l  br i1 %21, label %78, label %82\l|{<s0>T|<s1>F}}"];
	Node0x62b5210:s0 -> Node0x62b52a0;
	Node0x62b5210:s1 -> Node0x62b4bb0;
	Node0x62b3b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%38:\l38:                                               \l  %39 = phi i32 [ 0, %31 ], [ %76, %73 ]\l  %40 = phi i32 [ 0, %31 ], [ %75, %73 ]\l  %41 = phi i32 [ 0, %31 ], [ %74, %73 ]\l  %42 = add nuw nsw i32 %39, %18\l  %43 = icmp ugt i32 %42, 239\l  br i1 %43, label %55, label %44\l|{<s0>T|<s1>F}}"];
	Node0x62b3b80:s0 -> Node0x62b5870;
	Node0x62b3b80:s1 -> Node0x62b5900;
	Node0x62b5900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%44:\l44:                                               \l  %45 = add nsw i32 %42, %29\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !18\l  %49 = shl nuw nsw i32 %42, 9\l  %50 = add nuw nsw i32 %49, %32\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !18\l  %54 = mul nsw i32 %53, %48\l  br label %55\l}"];
	Node0x62b5900 -> Node0x62b5870;
	Node0x62b5870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%55:\l55:                                               \l  %56 = phi i32 [ %54, %44 ], [ 0, %38 ]\l  store i32 %56, i32 addrspace(3)* %19, align 4, !tbaa !18\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %20, label %57, label %58\l|{<s0>T|<s1>F}}"];
	Node0x62b5870:s0 -> Node0x62b6b00;
	Node0x62b5870:s1 -> Node0x62b6b90;
	Node0x62b6b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%57:\l57:                                               \l  br i1 %21, label %70, label %73\l|{<s0>T|<s1>F}}"];
	Node0x62b6b00:s0 -> Node0x62b6cd0;
	Node0x62b6b00:s1 -> Node0x62b53a0;
	Node0x62b6b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi i32 [ %60, %68 ], [ %11, %55 ]\l  %60 = lshr i32 %59, 1\l  %61 = icmp ult i32 %18, %60\l  br i1 %61, label %62, label %68\l|{<s0>T|<s1>F}}"];
	Node0x62b6b90:s0 -> Node0x62b7030;
	Node0x62b6b90:s1 -> Node0x62b6dd0;
	Node0x62b7030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%62:\l62:                                               \l  %63 = load i32, i32 addrspace(3)* %19, align 4, !tbaa !18\l  %64 = add nuw nsw i32 %60, %18\l  %65 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ26mat_mult_fixed_dims_kernelPiS_S_E4smem, i32 0, i32 %64\l  %66 = load i32, i32 addrspace(3)* %65, align 4, !tbaa !18\l  %67 = add nsw i32 %66, %63\l  store i32 %67, i32 addrspace(3)* %19, align 4, !tbaa !18\l  br label %68\l}"];
	Node0x62b7030 -> Node0x62b6dd0;
	Node0x62b6dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %69 = icmp ult i32 %59, 4\l  br i1 %69, label %57, label %58, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x62b6dd0:s0 -> Node0x62b6b00;
	Node0x62b6dd0:s1 -> Node0x62b6b90;
	Node0x62b6cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%70:\l70:                                               \l  %71 = load i32, i32 addrspace(3)* %19, align 4, !tbaa !18\l  %72 = add nsw i32 %71, %41\l  br label %73\l}"];
	Node0x62b6cd0 -> Node0x62b53a0;
	Node0x62b53a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%73:\l73:                                               \l  %74 = phi i32 [ %72, %70 ], [ %41, %57 ]\l  %75 = add nuw nsw i32 %40, 1\l  %76 = mul nuw nsw i32 %75, %11\l  %77 = icmp eq i32 %40, %23\l  br i1 %77, label %37, label %38, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x62b53a0:s0 -> Node0x62b5210;
	Node0x62b53a0:s1 -> Node0x62b3b80;
	Node0x62b52a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%78:\l78:                                               \l  %79 = add nsw i32 %32, %30\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %80\l  store i32 %74, i32 addrspace(1)* %81, align 4, !tbaa !18\l  br label %82\l}"];
	Node0x62b52a0 -> Node0x62b4bb0;
	Node0x62b4bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%82:\l82:                                               \l  %83 = add nuw nsw i32 %32, 1\l  %84 = icmp eq i32 %83, 512\l  br i1 %84, label %33, label %31, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x62b4bb0:s0 -> Node0x62b4650;
	Node0x62b4bb0:s1 -> Node0x62b4a80;
}
