digraph "CFG for '_Z22collective_dist_kernelPiiiPd' function" {
	label="CFG for '_Z22collective_dist_kernelPiiiPd' function";

	Node0x45bb7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = icmp slt i32 %16, %2\l  br i1 %17, label %18, label %49\l|{<s0>T|<s1>F}}"];
	Node0x45bb7c0:s0 -> Node0x45bb850;
	Node0x45bb7c0:s1 -> Node0x45bdb00;
	Node0x45bb850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%18:\l18:                                               \l  %19 = icmp sgt i32 %1, 0\l  %20 = udiv i32 %14, %11\l  %21 = mul i32 %20, %11\l  %22 = icmp ugt i32 %14, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %11\l  br label %26\l}"];
	Node0x45bb850 -> Node0x45be010;
	Node0x45be010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%26:\l26:                                               \l  %27 = phi i32 [ %16, %18 ], [ %47, %43 ]\l  br i1 %19, label %28, label %43\l|{<s0>T|<s1>F}}"];
	Node0x45be010:s0 -> Node0x45be240;
	Node0x45be010:s1 -> Node0x45be100;
	Node0x45be240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %41, %37 ], [ 0, %26 ]\l  %30 = phi double [ %40, %37 ], [ 0.000000e+00, %26 ]\l  %31 = mul nsw i32 %29, %2\l  %32 = add nsw i32 %31, %27\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %36 = icmp eq i32 %35, 0\l  br i1 %36, label %43, label %37\l|{<s0>T|<s1>F}}"];
	Node0x45be240:s0 -> Node0x45be100;
	Node0x45be240:s1 -> Node0x45be3b0;
	Node0x45be3b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = sitofp i32 %35 to double\l  %39 = fdiv contract double 1.000000e+00, %38\l  %40 = fadd contract double %30, %39\l  %41 = add nuw nsw i32 %29, 1\l  %42 = icmp eq i32 %41, %1\l  br i1 %42, label %43, label %28, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x45be3b0:s0 -> Node0x45be100;
	Node0x45be3b0:s1 -> Node0x45be240;
	Node0x45be100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%43:\l43:                                               \l  %44 = phi double [ 0.000000e+00, %26 ], [ %40, %37 ], [ 0.000000e+00, %28 ]\l  %45 = sext i32 %27 to i64\l  %46 = getelementptr inbounds double, double addrspace(1)* %3, i64 %45\l  store double %44, double addrspace(1)* %46, align 8, !tbaa !22\l  %47 = add i32 %25, %27\l  %48 = icmp slt i32 %47, %2\l  br i1 %48, label %26, label %49, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x45be100:s0 -> Node0x45be010;
	Node0x45be100:s1 -> Node0x45bdb00;
	Node0x45bdb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%49:\l49:                                               \l  ret void\l}"];
}
