digraph "CFG for '_Z32mat_mult_fixed_dims_trans_kernelPiS_S_' function" {
	label="CFG for '_Z32mat_mult_fixed_dims_trans_kernelPiS_S_' function";

	Node0x5622d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %6 = bitcast i8 addrspace(4)* %5 to i32 addrspace(4)*\l  %7 = load i32, i32 addrspace(4)* %6, align 4, !tbaa !4\l  %8 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !13, !invariant.load\l... !14\l  %11 = zext i16 %10 to i32\l  %12 = udiv i32 %7, %11\l  %13 = mul i32 %12, %11\l  %14 = icmp ugt i32 %7, %13\l  %15 = zext i1 %14 to i32\l  %16 = add i32 %12, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %19 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ32mat_mult_fixed_dims_trans_kernelPiS_S_E4smem, i32 0, i32 %18\l  %20 = icmp ult i16 %10, 2\l  %21 = icmp eq i32 %18, 0\l  %22 = udiv i16 239, %10\l  %23 = zext i16 %22 to i32\l  br label %25\l}"];
	Node0x5622d60 -> Node0x56254f0;
	Node0x56255f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x56254f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%25:\l25:                                               \l  %26 = phi i32 [ 0, %3 ], [ %36, %34 ]\l  %27 = phi i32 [ 0, %3 ], [ %35, %34 ]\l  %28 = add i32 %26, %17\l  %29 = mul nsw i32 %28, 240\l  %30 = shl nsw i32 %28, 9\l  br label %31\l}"];
	Node0x56254f0 -> Node0x5625ad0;
	Node0x5625ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%31:\l31:                                               \l  %32 = phi i32 [ 0, %25 ], [ %83, %82 ]\l  %33 = mul nuw nsw i32 %32, 240\l  br label %39\l}"];
	Node0x5625ad0 -> Node0x5624c50;
	Node0x5625700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%34:\l34:                                               \l  %35 = add nuw nsw i32 %27, 1\l  %36 = mul i32 %16, %35\l  %37 = icmp ult i32 %36, 256\l  br i1 %37, label %25, label %24, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5625700:s0 -> Node0x56254f0;
	Node0x5625700:s1 -> Node0x56255f0;
	Node0x56262e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%38:\l38:                                               \l  br i1 %21, label %78, label %82\l|{<s0>T|<s1>F}}"];
	Node0x56262e0:s0 -> Node0x5626370;
	Node0x56262e0:s1 -> Node0x5625c00;
	Node0x5624c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%39:\l39:                                               \l  %40 = phi i32 [ 0, %31 ], [ %76, %73 ]\l  %41 = phi i32 [ 0, %31 ], [ %75, %73 ]\l  %42 = phi i32 [ 0, %31 ], [ %74, %73 ]\l  %43 = add nuw nsw i32 %40, %18\l  %44 = icmp ugt i32 %43, 239\l  br i1 %44, label %55, label %45\l|{<s0>T|<s1>F}}"];
	Node0x5624c50:s0 -> Node0x5626940;
	Node0x5624c50:s1 -> Node0x56269d0;
	Node0x56269d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%45:\l45:                                               \l  %46 = add nsw i32 %43, %29\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !18\l  %50 = add nuw nsw i32 %43, %33\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !18\l  %54 = mul nsw i32 %53, %49\l  br label %55\l}"];
	Node0x56269d0 -> Node0x5626940;
	Node0x5626940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%55:\l55:                                               \l  %56 = phi i32 [ %54, %45 ], [ 0, %39 ]\l  store i32 %56, i32 addrspace(3)* %19, align 4, !tbaa !18\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %20, label %57, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5626940:s0 -> Node0x5627b40;
	Node0x5626940:s1 -> Node0x5627bd0;
	Node0x5627b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%57:\l57:                                               \l  br i1 %21, label %70, label %73\l|{<s0>T|<s1>F}}"];
	Node0x5627b40:s0 -> Node0x5627d10;
	Node0x5627b40:s1 -> Node0x5626470;
	Node0x5627bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi i32 [ %60, %68 ], [ %11, %55 ]\l  %60 = lshr i32 %59, 1\l  %61 = icmp ult i32 %18, %60\l  br i1 %61, label %62, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5627bd0:s0 -> Node0x5628070;
	Node0x5627bd0:s1 -> Node0x5627e10;
	Node0x5628070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%62:\l62:                                               \l  %63 = load i32, i32 addrspace(3)* %19, align 4, !tbaa !18\l  %64 = add nuw nsw i32 %60, %18\l  %65 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ32mat_mult_fixed_dims_trans_kernelPiS_S_E4smem, i32 0, i32 %64\l  %66 = load i32, i32 addrspace(3)* %65, align 4, !tbaa !18\l  %67 = add nsw i32 %66, %63\l  store i32 %67, i32 addrspace(3)* %19, align 4, !tbaa !18\l  br label %68\l}"];
	Node0x5628070 -> Node0x5627e10;
	Node0x5627e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %69 = icmp ult i32 %59, 4\l  br i1 %69, label %57, label %58, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5627e10:s0 -> Node0x5627b40;
	Node0x5627e10:s1 -> Node0x5627bd0;
	Node0x5627d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%70:\l70:                                               \l  %71 = load i32, i32 addrspace(3)* %19, align 4, !tbaa !18\l  %72 = add nsw i32 %71, %42\l  br label %73\l}"];
	Node0x5627d10 -> Node0x5626470;
	Node0x5626470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%73:\l73:                                               \l  %74 = phi i32 [ %72, %70 ], [ %42, %57 ]\l  %75 = add nuw nsw i32 %41, 1\l  %76 = mul nuw nsw i32 %75, %11\l  %77 = icmp eq i32 %41, %23\l  br i1 %77, label %38, label %39, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5626470:s0 -> Node0x56262e0;
	Node0x5626470:s1 -> Node0x5624c50;
	Node0x5626370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%78:\l78:                                               \l  %79 = add nsw i32 %32, %30\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %80\l  store i32 %74, i32 addrspace(1)* %81, align 4, !tbaa !18\l  br label %82\l}"];
	Node0x5626370 -> Node0x5625c00;
	Node0x5625c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%82:\l82:                                               \l  %83 = add nuw nsw i32 %32, 1\l  %84 = icmp eq i32 %83, 512\l  br i1 %84, label %34, label %31, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5625c00:s0 -> Node0x5625700;
	Node0x5625c00:s1 -> Node0x5625ad0;
}
