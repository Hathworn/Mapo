digraph "CFG for '_Z28CuDeviceArrayCopyFromTextureP15HIP_vector_typeIfLj3EEiii' function" {
	label="CFG for '_Z28CuDeviceArrayCopyFromTextureP15HIP_vector_typeIfLj3EEiii' function";

	Node0x632c990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp sgt i32 %13, %2\l  %23 = icmp sgt i32 %21, %3\l  %24 = select i1 %22, i1 true, i1 %23\l  br i1 %24, label %78, label %25\l|{<s0>T|<s1>F}}"];
	Node0x632c990:s0 -> Node0x632fe30;
	Node0x632c990:s1 -> Node0x632fec0;
	Node0x632fec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%25:\l25:                                               \l  %26 = load %struct.__hip_texture*, %struct.__hip_texture* addrspace(1)*\l... getelementptr inbounds (%struct.texture, %struct.texture addrspace(1)*\l... @inTex, i64 0, i32 0, i32 11), align 8\l  %27 = sitofp i32 %13 to float\l  %28 = sitofp i32 %21 to float\l  %29 = bitcast %struct.__hip_texture* %26 to i32*\l  %30 = addrspacecast i32* %29 to i32 addrspace(4)*\l  %31 = getelementptr inbounds i32, i32 addrspace(4)* %30, i64 12\l  %32 = getelementptr inbounds i32, i32 addrspace(4)* %30, i64 10\l  %33 = load i32, i32 addrspace(4)* %32, align 4, !tbaa !7\l  %34 = uitofp i32 %33 to float\l  %35 = getelementptr inbounds i32, i32 addrspace(4)* %30, i64 2\l  %36 = load i32, i32 addrspace(4)* %35, align 4, !tbaa !7\l  %37 = lshr i32 %36, 14\l  %38 = and i32 %37, 16383\l  %39 = add nuw nsw i32 %38, 1\l  %40 = uitofp i32 %39 to float\l  %41 = load i32, i32 addrspace(4)* %31, align 4, !tbaa !7\l  %42 = and i32 %41, 32768\l  %43 = icmp eq i32 %42, 0\l  %44 = select i1 %43, float %34, float 1.000000e+00\l  %45 = select i1 %43, float %40, float 1.000000e+00\l  %46 = getelementptr inbounds i32, i32 addrspace(4)* %30, i64 14\l  %47 = load i32, i32 addrspace(4)* %46, align 4, !tbaa !7\l  %48 = and i32 %47, 1048576\l  %49 = icmp eq i32 %48, 0\l  %50 = bitcast i32 addrspace(4)* %31 to \<4 x i32\> addrspace(4)*\l  %51 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %50, align 16, !tbaa !11\l  %52 = bitcast %struct.__hip_texture* %26 to \<8 x i32\>*\l  %53 = addrspacecast \<8 x i32\>* %52 to \<8 x i32\> addrspace(4)*\l  %54 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %53, align 32, !tbaa !11\l  %55 = tail call float @llvm.amdgcn.rcp.f32(float %45)\l  %56 = fmul float %45, %28\l  %57 = tail call float @llvm.floor.f32(float %56)\l  %58 = fmul float %55, %57\l  %59 = select i1 %49, float %58, float %28\l  %60 = tail call float @llvm.amdgcn.rcp.f32(float %44)\l  %61 = fmul float %44, %27\l  %62 = tail call float @llvm.floor.f32(float %61)\l  %63 = fmul float %60, %62\l  %64 = select i1 %49, float %63, float %27\l  %65 = tail call \<3 x float\> @llvm.amdgcn.image.sample.lz.2d.v3f32.f32(i32 7,\l... float %64, float %59, \<8 x i32\> %54, \<4 x i32\> %51, i1 false, i32 0, i32 0)\l  %66 = bitcast %struct.HIP_vector_type addrspace(1)* %0 to i8 addrspace(1)*\l  %67 = mul nsw i32 %21, %1\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i8, i8 addrspace(1)* %66, i64 %68\l  %70 = bitcast i8 addrspace(1)* %69 to %struct.HIP_vector_type addrspace(1)*\l  %71 = extractelement \<3 x float\> %65, i64 0\l  %72 = extractelement \<3 x float\> %65, i64 1\l  %73 = extractelement \<3 x float\> %65, i64 2\l  %74 = sext i32 %13 to i64\l  %75 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %70, i64 %74, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  store float %71, float addrspace(1)* %75, align 4\l  %76 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %70, i64 %74, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float %72, float addrspace(1)* %76, align 4\l  %77 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %70, i64 %74, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  store float %73, float addrspace(1)* %77, align 4\l  br label %78\l}"];
	Node0x632fec0 -> Node0x632fe30;
	Node0x632fe30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%78:\l78:                                               \l  ret void\l}"];
}
