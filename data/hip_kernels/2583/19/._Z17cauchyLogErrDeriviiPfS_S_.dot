digraph "CFG for '_Z17cauchyLogErrDeriviiPfS_S_' function" {
	label="CFG for '_Z17cauchyLogErrDeriviiPfS_S_' function";

	Node0x49f0b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = mul nsw i32 %22, %0\l  %24 = add nsw i32 %23, %14\l  %25 = icmp slt i32 %14, %0\l  %26 = icmp slt i32 %22, %1\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %54\l|{<s0>T|<s1>F}}"];
	Node0x49f0b40:s0 -> Node0x49f46d0;
	Node0x49f0b40:s1 -> Node0x49f4760;
	Node0x49f46d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%28:\l28:                                               \l  %29 = mul nsw i32 %1, %0\l  %30 = add nsw i32 %24, %29\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %2, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = tail call float @llvm.exp.f32(float %33)\l  %35 = sext i32 %24 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %2, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = getelementptr inbounds float, float addrspace(1)* %3, i64 %35\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = fcmp contract ogt float %37, %39\l  br i1 %40, label %45, label %41\l|{<s0>T|<s1>F}}"];
	Node0x49f46d0:s0 -> Node0x49f59d0;
	Node0x49f46d0:s1 -> Node0x49f5a60;
	Node0x49f5a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%41:\l41:                                               \l  %42 = fcmp contract olt float %37, %39\l  br i1 %42, label %43, label %45\l|{<s0>T|<s1>F}}"];
	Node0x49f5a60:s0 -> Node0x49f5c30;
	Node0x49f5a60:s1 -> Node0x49f59d0;
	Node0x49f5c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%43:\l43:                                               \l  %44 = fneg contract float %34\l  br label %45\l}"];
	Node0x49f5c30 -> Node0x49f59d0;
	Node0x49f59d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%45:\l45:                                               \l  %46 = phi float [ %44, %43 ], [ %34, %28 ], [ 0.000000e+00, %41 ]\l  %47 = getelementptr inbounds float, float addrspace(1)* %4, i64 %35\l  store float %46, float addrspace(1)* %47, align 4, !tbaa !7\l  %48 = load float, float addrspace(1)* %36, align 4, !tbaa !7\l  %49 = load float, float addrspace(1)* %38, align 4, !tbaa !7\l  %50 = fsub contract float %48, %49\l  %51 = tail call float @llvm.fabs.f32(float %50)\l  %52 = tail call float @llvm.fma.f32(float %34, float %51, float\l... -1.000000e+00)\l  %53 = getelementptr inbounds float, float addrspace(1)* %4, i64 %31\l  store float %52, float addrspace(1)* %53, align 4, !tbaa !7\l  br label %54\l}"];
	Node0x49f59d0 -> Node0x49f4760;
	Node0x49f4760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  ret void\l}"];
}
