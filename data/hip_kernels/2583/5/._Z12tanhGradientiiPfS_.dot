digraph "CFG for '_Z12tanhGradientiiPfS_' function" {
	label="CFG for '_Z12tanhGradientiiPfS_' function";

	Node0x4cd2b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %13, %0\l  %23 = icmp slt i32 %21, %1\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %56\l|{<s0>T|<s1>F}}"];
	Node0x4cd2b00:s0 -> Node0x4cd65a0;
	Node0x4cd2b00:s1 -> Node0x4cd6630;
	Node0x4cd65a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%25:\l25:                                               \l  %26 = mul nsw i32 %21, %0\l  %27 = add nsw i32 %26, %13\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %2, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = fmul contract float %30, 0x3FE5555560000000\l  %32 = fpext float %31 to double\l  %33 = fcmp contract ogt double %32, 4.970000e+00\l  br i1 %33, label %34, label %35\l|{<s0>T|<s1>F}}"];
	Node0x4cd65a0:s0 -> Node0x4cd7920;
	Node0x4cd65a0:s1 -> Node0x4cd7970;
	Node0x4cd7920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%34:\l34:                                               \l  store float 0x3FFB745380000000, float addrspace(1)* %29, align 4, !tbaa !7\l  br label %53\l}"];
	Node0x4cd7920 -> Node0x4cd8150;
	Node0x4cd7970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%35:\l35:                                               \l  %36 = fcmp contract olt double %32, -4.970000e+00\l  br i1 %36, label %37, label %38\l|{<s0>T|<s1>F}}"];
	Node0x4cd7970:s0 -> Node0x4cd82e0;
	Node0x4cd7970:s1 -> Node0x4cd8370;
	Node0x4cd82e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%37:\l37:                                               \l  store float 0xBFFB745380000000, float addrspace(1)* %29, align 4, !tbaa !7\l  br label %53\l}"];
	Node0x4cd82e0 -> Node0x4cd8150;
	Node0x4cd8370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%38:\l38:                                               \l  %39 = fmul contract float %31, %31\l  %40 = fadd contract float %39, 3.780000e+02\l  %41 = tail call float @llvm.fma.f32(float %39, float %40, float 1.723500e+04)\l  %42 = tail call float @llvm.fma.f32(float %39, float %41, float 1.351350e+05)\l  %43 = fmul contract float %31, %42\l  %44 = tail call float @llvm.fma.f32(float %39, float 2.800000e+01, float\l... 3.150000e+03)\l  %45 = tail call float @llvm.fma.f32(float %39, float %44, float 6.237000e+04)\l  %46 = tail call float @llvm.fma.f32(float %39, float %45, float 1.351350e+05)\l  %47 = fdiv contract float %43, %46\l  %48 = fmul contract float %47, 0x3FFB745380000000\l  store float %48, float addrspace(1)* %29, align 4, !tbaa !7\l  %49 = fneg contract float %47\l  %50 = tail call float @llvm.fma.f32(float %49, float %47, float 1.000000e+00)\l  %51 = fmul contract float %50, 0x3FE5555560000000\l  %52 = fmul contract float %51, 0x3FFB745380000000\l  br label %53\l}"];
	Node0x4cd8370 -> Node0x4cd8150;
	Node0x4cd8150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%53:\l53:                                               \l  %54 = phi float [ 0.000000e+00, %34 ], [ %52, %38 ], [ 0.000000e+00, %37 ]\l  %55 = getelementptr inbounds float, float addrspace(1)* %3, i64 %28\l  store float %54, float addrspace(1)* %55, align 4, !tbaa !7\l  br label %56\l}"];
	Node0x4cd8150 -> Node0x4cd6630;
	Node0x4cd6630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  ret void\l}"];
}
