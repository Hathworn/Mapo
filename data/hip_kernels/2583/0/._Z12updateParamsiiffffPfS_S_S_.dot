digraph "CFG for '_Z12updateParamsiiffffPfS_S_S_' function" {
	label="CFG for '_Z12updateParamsiiffffPfS_S_S_' function";

	Node0x4e676b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %27 = add i32 %25, %26\l  %28 = mul nsw i32 %27, %0\l  %29 = add nsw i32 %28, %19\l  %30 = fsub contract float 1.000000e+00, %3\l  %31 = fneg contract float %2\l  %32 = tail call float @llvm.fabs.f32(float %3)\l  %33 = tail call float @llvm.amdgcn.frexp.mant.f32(float %32)\l  %34 = fcmp olt float %33, 0x3FE5555560000000\l  %35 = zext i1 %34 to i32\l  %36 = tail call float @llvm.amdgcn.ldexp.f32(float %33, i32 %35)\l  %37 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %32)\l  %38 = sub nsw i32 %37, %35\l  %39 = fadd float %36, -1.000000e+00\l  %40 = fadd float %36, 1.000000e+00\l  %41 = fadd float %40, -1.000000e+00\l  %42 = fsub float %36, %41\l  %43 = tail call float @llvm.amdgcn.rcp.f32(float %40)\l  %44 = fmul float %39, %43\l  %45 = fmul float %40, %44\l  %46 = fneg float %45\l  %47 = tail call float @llvm.fma.f32(float %44, float %40, float %46)\l  %48 = tail call float @llvm.fma.f32(float %44, float %42, float %47)\l  %49 = fadd float %45, %48\l  %50 = fsub float %49, %45\l  %51 = fsub float %48, %50\l  %52 = fsub float %39, %49\l  %53 = fsub float %39, %52\l  %54 = fsub float %53, %49\l  %55 = fsub float %54, %51\l  %56 = fadd float %52, %55\l  %57 = fmul float %43, %56\l  %58 = fadd float %44, %57\l  %59 = fsub float %58, %44\l  %60 = fsub float %57, %59\l  %61 = fmul float %58, %58\l  %62 = fneg float %61\l  %63 = tail call float @llvm.fma.f32(float %58, float %58, float %62)\l  %64 = fmul float %60, 2.000000e+00\l  %65 = tail call float @llvm.fma.f32(float %58, float %64, float %63)\l  %66 = fadd float %61, %65\l  %67 = fsub float %66, %61\l  %68 = fsub float %65, %67\l  %69 = tail call float @llvm.fmuladd.f32(float %66, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %70 = tail call float @llvm.fmuladd.f32(float %66, float %69, float\l... 0x3FD999BDE0000000)\l  %71 = sitofp i32 %38 to float\l  %72 = fmul float %71, 0x3FE62E4300000000\l  %73 = fneg float %72\l  %74 = tail call float @llvm.fma.f32(float %71, float 0x3FE62E4300000000,\l... float %73)\l  %75 = tail call float @llvm.fma.f32(float %71, float 0xBE205C6100000000,\l... float %74)\l  %76 = fadd float %72, %75\l  %77 = fsub float %76, %72\l  %78 = fsub float %75, %77\l  %79 = tail call float @llvm.amdgcn.ldexp.f32(float %58, i32 1)\l  %80 = fmul float %58, %66\l  %81 = fneg float %80\l  %82 = tail call float @llvm.fma.f32(float %66, float %58, float %81)\l  %83 = tail call float @llvm.fma.f32(float %66, float %60, float %82)\l  %84 = tail call float @llvm.fma.f32(float %68, float %58, float %83)\l  %85 = fadd float %80, %84\l  %86 = fsub float %85, %80\l  %87 = fsub float %84, %86\l  %88 = fmul float %66, %70\l  %89 = fneg float %88\l  %90 = tail call float @llvm.fma.f32(float %66, float %70, float %89)\l  %91 = tail call float @llvm.fma.f32(float %68, float %70, float %90)\l  %92 = fadd float %88, %91\l  %93 = fsub float %92, %88\l  %94 = fsub float %91, %93\l  %95 = fadd float %92, 0x3FE5555540000000\l  %96 = fadd float %95, 0xBFE5555540000000\l  %97 = fsub float %92, %96\l  %98 = fadd float %94, 0x3E2E720200000000\l  %99 = fadd float %98, %97\l  %100 = fadd float %95, %99\l  %101 = fsub float %100, %95\l  %102 = fsub float %99, %101\l  %103 = fmul float %85, %100\l  %104 = fneg float %103\l  %105 = tail call float @llvm.fma.f32(float %85, float %100, float %104)\l  %106 = tail call float @llvm.fma.f32(float %85, float %102, float %105)\l  %107 = tail call float @llvm.fma.f32(float %87, float %100, float %106)\l  %108 = tail call float @llvm.amdgcn.ldexp.f32(float %60, i32 1)\l  %109 = fadd float %103, %107\l  %110 = fsub float %109, %103\l  %111 = fsub float %107, %110\l  %112 = fadd float %79, %109\l  %113 = fsub float %112, %79\l  %114 = fsub float %109, %113\l  %115 = fadd float %108, %111\l  %116 = fadd float %115, %114\l  %117 = fadd float %112, %116\l  %118 = fsub float %117, %112\l  %119 = fsub float %116, %118\l  %120 = fadd float %76, %117\l  %121 = fsub float %120, %76\l  %122 = fsub float %120, %121\l  %123 = fsub float %76, %122\l  %124 = fsub float %117, %121\l  %125 = fadd float %124, %123\l  %126 = fadd float %78, %119\l  %127 = fsub float %126, %78\l  %128 = fsub float %126, %127\l  %129 = fsub float %78, %128\l  %130 = fsub float %119, %127\l  %131 = fadd float %130, %129\l  %132 = fadd float %126, %125\l  %133 = fadd float %120, %132\l  %134 = fsub float %133, %120\l  %135 = fsub float %132, %134\l  %136 = fadd float %131, %135\l  %137 = fadd float %133, %136\l  %138 = fsub float %137, %133\l  %139 = fsub float %136, %138\l  %140 = fmul float %137, %5\l  %141 = fneg float %140\l  %142 = tail call float @llvm.fma.f32(float %5, float %137, float %141)\l  %143 = tail call float @llvm.fma.f32(float %5, float %139, float %142)\l  %144 = fadd float %140, %143\l  %145 = fsub float %144, %140\l  %146 = fsub float %143, %145\l  %147 = tail call float @llvm.fabs.f32(float %140) #3\l  %148 = fcmp oeq float %147, 0x7FF0000000000000\l  %149 = select i1 %148, float %140, float %144\l  %150 = tail call float @llvm.fabs.f32(float %149) #3\l  %151 = fcmp oeq float %150, 0x7FF0000000000000\l  %152 = select i1 %151, float 0.000000e+00, float %146\l  %153 = fcmp oeq float %149, 0x40562E4300000000\l  %154 = select i1 %153, float 0x3EE0000000000000, float 0.000000e+00\l  %155 = fsub float %149, %154\l  %156 = fadd float %154, %152\l  %157 = fmul float %155, 0x3FF7154760000000\l  %158 = tail call float @llvm.rint.f32(float %157)\l  %159 = fcmp ogt float %155, 0x40562E4300000000\l  %160 = fcmp olt float %155, 0xC059D1DA00000000\l  %161 = fneg float %157\l  %162 = tail call float @llvm.fma.f32(float %155, float 0x3FF7154760000000,\l... float %161)\l  %163 = tail call float @llvm.fma.f32(float %155, float 0x3E54AE0BE0000000,\l... float %162)\l  %164 = fsub float %157, %158\l  %165 = fadd float %163, %164\l  %166 = tail call float @llvm.exp2.f32(float %165)\l  %167 = fptosi float %158 to i32\l  %168 = tail call float @llvm.amdgcn.ldexp.f32(float %166, i32 %167)\l  %169 = select i1 %160, float 0.000000e+00, float %168\l  %170 = select i1 %159, float 0x7FF0000000000000, float %169\l  %171 = tail call float @llvm.fma.f32(float %170, float %156, float %170)\l  %172 = tail call float @llvm.fabs.f32(float %170) #3\l  %173 = fcmp oeq float %172, 0x7FF0000000000000\l  %174 = select i1 %173, float %170, float %171\l  %175 = tail call float @llvm.fabs.f32(float %5)\l  %176 = tail call float @llvm.trunc.f32(float %175)\l  %177 = fcmp oeq float %175, %176\l  %178 = zext i1 %177 to i32\l  %179 = fmul float %176, 5.000000e-01\l  %180 = tail call float @llvm.amdgcn.fract.f32(float %179)\l  %181 = tail call i1 @llvm.amdgcn.class.f32(float %179, i32 516)\l  %182 = select i1 %181, float 0.000000e+00, float %180\l  %183 = fcmp oeq float %182, 0.000000e+00\l  %184 = and i1 %177, %183\l  %185 = zext i1 %184 to i32\l  %186 = add nuw nsw i32 %185, %178\l  %187 = icmp eq i32 %186, 1\l  %188 = fcmp olt float %3, 0.000000e+00\l  %189 = and i1 %188, %187\l  %190 = select i1 %189, float -0.000000e+00, float 0.000000e+00\l  %191 = tail call float @llvm.copysign.f32(float %174, float %190)\l  %192 = fcmp uge float %3, 0.000000e+00\l  %193 = icmp ne i32 %186, 0\l  %194 = select i1 %192, i1 true, i1 %193\l  %195 = select i1 %194, float %191, float 0x7FF8000000000000\l  %196 = fcmp oeq float %175, 0x7FF0000000000000\l  br i1 %196, label %197, label %206\l|{<s0>T|<s1>F}}"];
	Node0x4e676b0:s0 -> Node0x4e755c0;
	Node0x4e676b0:s1 -> Node0x4e75650;
	Node0x4e755c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e97a5f70",label="{%197:\l197:                                              \l  %198 = fcmp oeq float %32, 1.000000e+00\l  %199 = fadd float %32, -1.000000e+00\l  %200 = bitcast float %5 to i32\l  %201 = bitcast float %199 to i32\l  %202 = xor i32 %201, %200\l  %203 = icmp sgt i32 %202, -1\l  %204 = select i1 %203, float 0x7FF0000000000000, float 0.000000e+00\l  %205 = select i1 %198, float %32, float %204\l  br label %206\l}"];
	Node0x4e755c0 -> Node0x4e75650;
	Node0x4e75650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%206:\l206:                                              \l  %207 = phi float [ %195, %10 ], [ %205, %197 ]\l  %208 = fcmp oeq float %3, 0.000000e+00\l  %209 = icmp slt i32 %19, %0\l  %210 = icmp slt i32 %27, %1\l  %211 = select i1 %209, i1 %210, i1 false\l  br i1 %211, label %212, label %249\l|{<s0>T|<s1>F}}"];
	Node0x4e75650:s0 -> Node0x4e75ff0;
	Node0x4e75650:s1 -> Node0x4e76040;
	Node0x4e75ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%212:\l212:                                              \l  %213 = fcmp oeq float %3, 1.000000e+00\l  %214 = fcmp oeq float %5, 0.000000e+00\l  %215 = or i1 %213, %214\l  %216 = fcmp uno float %3, %5\l  %217 = fcmp oeq float %32, 0x7FF0000000000000\l  %218 = or i1 %208, %217\l  %219 = fcmp olt float %5, 0.000000e+00\l  %220 = xor i1 %208, %219\l  %221 = select i1 %220, float 0.000000e+00, float 0x7FF0000000000000\l  %222 = select i1 %187, float %3, float 0.000000e+00\l  %223 = tail call float @llvm.copysign.f32(float %221, float %222)\l  %224 = select i1 %218, float %223, float %207\l  %225 = fsub contract float 1.000000e+00, %224\l  %226 = fdiv contract float 1.000000e+00, %225\l  %227 = select i1 %216, float 0x7FF8000000000000, float %226\l  %228 = select i1 %215, float 0x7FF0000000000000, float %227\l  %229 = fmul contract float %228, %31\l  %230 = sext i32 %29 to i64\l  %231 = getelementptr inbounds float, float addrspace(1)* %8, i64 %230\l  %232 = load float, float addrspace(1)* %231, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %233 = getelementptr inbounds float, float addrspace(1)* %7, i64 %230\l  %234 = load float, float addrspace(1)* %233, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %235 = fmul contract float %30, %234\l  %236 = tail call float @llvm.fma.f32(float %3, float %232, float %235)\l  store float %236, float addrspace(1)* %231, align 4, !tbaa !7\l  %237 = getelementptr inbounds float, float addrspace(1)* %9, i64 %230\l  %238 = load float, float addrspace(1)* %237, align 4, !tbaa !7\l  %239 = fmul contract float %238, %4\l  %240 = load float, float addrspace(1)* %233, align 4, !tbaa !7\l  %241 = tail call float @llvm.fabs.f32(float %240)\l  %242 = tail call float @llvm.maxnum.f32(float %239, float %241)\l  %243 = tail call float @llvm.maxnum.f32(float %242, float 0x3C9CD2B2A0000000)\l  store float %243, float addrspace(1)* %237, align 4, !tbaa !7\l  %244 = load float, float addrspace(1)* %231, align 4, !tbaa !7\l  %245 = fdiv contract float %244, %243\l  %246 = getelementptr inbounds float, float addrspace(1)* %6, i64 %230\l  %247 = load float, float addrspace(1)* %246, align 4, !tbaa !7\l  %248 = tail call float @llvm.fma.f32(float %229, float %245, float %247)\l  store float %248, float addrspace(1)* %246, align 4, !tbaa !7\l  br label %249\l}"];
	Node0x4e75ff0 -> Node0x4e76040;
	Node0x4e76040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%249:\l249:                                              \l  ret void\l}"];
}
