digraph "CFG for '_Z19tanhGradientDropoutiiPfS_if' function" {
	label="CFG for '_Z19tanhGradientDropoutiiPfS_if' function";

	Node0x476e000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = mul nsw i32 %23, %0\l  %25 = add nsw i32 %24, %15\l  %26 = fsub contract float 1.000000e+00, %5\l  %27 = fdiv contract float 0x3FFB745380000000, %26\l  %28 = fdiv contract float 0xBFFB745380000000, %26\l  %29 = icmp slt i32 %15, %0\l  %30 = icmp slt i32 %23, %1\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %85\l|{<s0>T|<s1>F}}"];
	Node0x476e000:s0 -> Node0x4772820;
	Node0x476e000:s1 -> Node0x47728b0;
	Node0x4772820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%32:\l32:                                               \l  %33 = shl i32 %4, 20\l  %34 = add nsw i32 %25, %33\l  %35 = xor i32 %34, 746559103\l  %36 = icmp sgt i32 %34, -1\l  %37 = mul i32 %35, 1228688033\l  %38 = select i1 %36, i32 -1973591729, i32 -100066652\l  %39 = add i32 %37, 123456789\l  %40 = add i32 %37, 5783321\l  %41 = lshr i32 %39, 2\l  %42 = xor i32 %41, %39\l  %43 = shl i32 %40, 4\l  %44 = shl i32 %42, 1\l  %45 = xor i32 %43, %44\l  %46 = xor i32 %45, %40\l  %47 = xor i32 %46, %42\l  %48 = add i32 %37, 6977678\l  %49 = add i32 %48, %38\l  %50 = add i32 %49, %47\l  %51 = uitofp i32 %50 to float\l  %52 = fmul contract float %51, 0x3DF0000000000000\l  %53 = fadd contract float %52, 0x3DF0000000000000\l  %54 = fcmp contract olt float %53, %5\l  %55 = sext i32 %25 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %2, i64 %55\l  br i1 %54, label %57, label %58\l|{<s0>T|<s1>F}}"];
	Node0x4772820:s0 -> Node0x4773ac0;
	Node0x4772820:s1 -> Node0x4773b50;
	Node0x4773ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%57:\l57:                                               \l  store float 0.000000e+00, float addrspace(1)* %56, align 4, !tbaa !7\l  br label %82\l}"];
	Node0x4773ac0 -> Node0x4773e90;
	Node0x4773b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%58:\l58:                                               \l  %59 = load float, float addrspace(1)* %56, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %60 = fmul contract float %59, 0x3FE5555560000000\l  %61 = fpext float %60 to double\l  %62 = fcmp contract ogt double %61, 4.970000e+00\l  br i1 %62, label %63, label %64\l|{<s0>T|<s1>F}}"];
	Node0x4773b50:s0 -> Node0x4774860;
	Node0x4773b50:s1 -> Node0x47748f0;
	Node0x4774860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%63:\l63:                                               \l  store float %27, float addrspace(1)* %56, align 4, !tbaa !7\l  br label %82\l}"];
	Node0x4774860 -> Node0x4773e90;
	Node0x47748f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%64:\l64:                                               \l  %65 = fcmp contract olt double %61, -4.970000e+00\l  br i1 %65, label %66, label %67\l|{<s0>T|<s1>F}}"];
	Node0x47748f0:s0 -> Node0x4772a80;
	Node0x47748f0:s1 -> Node0x4772ad0;
	Node0x4772a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%66:\l66:                                               \l  store float %28, float addrspace(1)* %56, align 4, !tbaa !7\l  br label %82\l}"];
	Node0x4772a80 -> Node0x4773e90;
	Node0x4772ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%67:\l67:                                               \l  %68 = fmul contract float %60, %60\l  %69 = fadd contract float %68, 3.780000e+02\l  %70 = tail call float @llvm.fma.f32(float %68, float %69, float 1.723500e+04)\l  %71 = tail call float @llvm.fma.f32(float %68, float %70, float 1.351350e+05)\l  %72 = fmul contract float %60, %71\l  %73 = tail call float @llvm.fma.f32(float %68, float 2.800000e+01, float\l... 3.150000e+03)\l  %74 = tail call float @llvm.fma.f32(float %68, float %73, float 6.237000e+04)\l  %75 = tail call float @llvm.fma.f32(float %68, float %74, float 1.351350e+05)\l  %76 = fdiv contract float %72, %75\l  %77 = fmul contract float %27, %76\l  store float %77, float addrspace(1)* %56, align 4, !tbaa !7\l  %78 = fneg contract float %76\l  %79 = tail call float @llvm.fma.f32(float %78, float %76, float 1.000000e+00)\l  %80 = fmul contract float %79, 0x3FE5555560000000\l  %81 = fmul contract float %27, %80\l  br label %82\l}"];
	Node0x4772ad0 -> Node0x4773e90;
	Node0x4773e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%82:\l82:                                               \l  %83 = phi float [ 0.000000e+00, %57 ], [ 0.000000e+00, %66 ], [ %81, %67 ],\l... [ 0.000000e+00, %63 ]\l  %84 = getelementptr inbounds float, float addrspace(1)* %3, i64 %55\l  store float %83, float addrspace(1)* %84, align 4, !tbaa !7\l  br label %85\l}"];
	Node0x4773e90 -> Node0x47728b0;
	Node0x47728b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  ret void\l}"];
}
