digraph "CFG for '_Z21updateDisplacements_kP15HIP_vector_typeIfLj4EES1_PfS1_S1_iS1_j' function" {
	label="CFG for '_Z21updateDisplacements_kP15HIP_vector_typeIfLj4EES1_PfS1_S1_iS1_j' function";

	Node0x5f34e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = icmp ult i32 %17, %7\l  br i1 %18, label %19, label %238\l|{<s0>T|<s1>F}}"];
	Node0x5f34e60:s0 -> Node0x5f36d30;
	Node0x5f34e60:s1 -> Node0x5f36dc0;
	Node0x5f36d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%19:\l19:                                               \l  %20 = icmp sgt i32 %5, 0\l  br i1 %20, label %21, label %74\l|{<s0>T|<s1>F}}"];
	Node0x5f36d30:s0 -> Node0x5f36f90;
	Node0x5f36d30:s1 -> Node0x5f36fe0;
	Node0x5f36f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%21:\l21:                                               \l  %22 = mul nsw i32 %17, %5\l  %23 = and i32 %5, 7\l  %24 = icmp ult i32 %5, 8\l  br i1 %24, label %34, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5f36f90:s0 -> Node0x5f37330;
	Node0x5f36f90:s1 -> Node0x5f37380;
	Node0x5f37380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%25:\l25:                                               \l  %26 = and i32 %5, -8\l  br label %127\l}"];
	Node0x5f37380 -> Node0x5f37580;
	Node0x5f37640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%27:\l27:                                               \l  %28 = insertelement \<4 x float\> %128, float %214, i64 0\l  %29 = insertelement \<4 x float\> %28, float %216, i64 1\l  %30 = insertelement \<4 x float\> %29, float %218, i64 2\l  %31 = insertelement \<4 x float\> %30, float %229, i64 0\l  %32 = insertelement \<4 x float\> %31, float %231, i64 1\l  %33 = insertelement \<4 x float\> %32, float %233, i64 2\l  br label %34\l}"];
	Node0x5f37640 -> Node0x5f37330;
	Node0x5f37330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%34:\l34:                                               \l  %35 = phi \<4 x float\> [ undef, %21 ], [ %30, %27 ]\l  %36 = phi float [ undef, %21 ], [ %229, %27 ]\l  %37 = phi float [ undef, %21 ], [ %231, %27 ]\l  %38 = phi float [ undef, %21 ], [ %233, %27 ]\l  %39 = phi \<4 x float\> [ zeroinitializer, %21 ], [ %33, %27 ]\l  %40 = phi i32 [ 0, %21 ], [ %235, %27 ]\l  %41 = icmp eq i32 %23, 0\l  br i1 %41, label %66, label %42\l|{<s0>T|<s1>F}}"];
	Node0x5f37330:s0 -> Node0x5f38d30;
	Node0x5f37330:s1 -> Node0x5f38dc0;
	Node0x5f38dc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = phi \<4 x float\> [ %62, %42 ], [ %39, %34 ]\l  %44 = phi i32 [ %63, %42 ], [ %40, %34 ]\l  %45 = phi i32 [ %64, %42 ], [ 0, %34 ]\l  %46 = add nsw i32 %44, %22\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %47, i32 0, i32 0, i32 0, i64 0\l  %49 = load float, float addrspace(1)* %48, align 16, !amdgpu.noclobber !5\l  %50 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %47, i32 0, i32 0, i32 0, i64 1\l  %51 = load float, float addrspace(1)* %50, align 4, !amdgpu.noclobber !5\l  %52 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %47, i32 0, i32 0, i32 0, i64 2\l  %53 = load float, float addrspace(1)* %52, align 8, !amdgpu.noclobber !5\l  %54 = extractelement \<4 x float\> %43, i64 0\l  %55 = fadd contract float %54, %49\l  %56 = insertelement \<4 x float\> %43, float %55, i64 0\l  %57 = extractelement \<4 x float\> %43, i64 1\l  %58 = fadd contract float %57, %51\l  %59 = insertelement \<4 x float\> %56, float %58, i64 1\l  %60 = extractelement \<4 x float\> %43, i64 2\l  %61 = fadd contract float %60, %53\l  %62 = insertelement \<4 x float\> %59, float %61, i64 2\l  %63 = add nuw nsw i32 %44, 1\l  %64 = add i32 %45, 1\l  %65 = icmp eq i32 %64, %23\l  br i1 %65, label %66, label %42, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x5f38dc0:s0 -> Node0x5f38d30;
	Node0x5f38dc0:s1 -> Node0x5f38dc0;
	Node0x5f38d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%66:\l66:                                               \l  %67 = phi \<4 x float\> [ %35, %34 ], [ %43, %42 ]\l  %68 = phi float [ %36, %34 ], [ %55, %42 ]\l  %69 = phi float [ %37, %34 ], [ %58, %42 ]\l  %70 = phi float [ %38, %34 ], [ %61, %42 ]\l  %71 = insertelement \<4 x float\> %67, float %68, i64 0\l  %72 = insertelement \<4 x float\> %71, float %69, i64 1\l  %73 = insertelement \<4 x float\> %72, float %70, i64 2\l  br label %74\l}"];
	Node0x5f38d30 -> Node0x5f36fe0;
	Node0x5f36fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%74:\l74:                                               \l  %75 = phi \<4 x float\> [ %73, %66 ], [ zeroinitializer, %19 ]\l  %76 = sext i32 %17 to i64\l  %77 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %76, i32 0, i32 0, i32 0, i64 0\l  %78 = load float, float addrspace(1)* %77, align 16, !amdgpu.noclobber !5\l  %79 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %76, i32 0, i32 0, i32 0, i64 1\l  %80 = load float, float addrspace(1)* %79, align 4, !amdgpu.noclobber !5\l  %81 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %76, i32 0, i32 0, i32 0, i64 2\l  %82 = load float, float addrspace(1)* %81, align 8, !amdgpu.noclobber !5\l  %83 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %76, i32 0, i32 0, i32 0, i64 0\l  %84 = load float, float addrspace(1)* %83, align 16, !amdgpu.noclobber !5\l  %85 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %76, i32 0, i32 0, i32 0, i64 1\l  %86 = load float, float addrspace(1)* %85, align 4, !amdgpu.noclobber !5\l  %87 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %76, i32 0, i32 0, i32 0, i64 2\l  %88 = load float, float addrspace(1)* %87, align 8, !amdgpu.noclobber !5\l  %89 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %76\l  %90 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %89, i64 0, i32 0, i32 0, i32 0, i64 0\l  %91 = load float, float addrspace(1)* %90, align 16, !amdgpu.noclobber !5\l  %92 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %76, i32 0, i32 0, i32 0, i64 1\l  %93 = load float, float addrspace(1)* %92, align 4, !amdgpu.noclobber !5\l  %94 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %76, i32 0, i32 0, i32 0, i64 2\l  %95 = load float, float addrspace(1)* %94, align 8, !amdgpu.noclobber !5\l  %96 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %3, i64 %76, i32 0, i32 0, i32 0, i64 0\l  %97 = load float, float addrspace(1)* %96, align 16, !amdgpu.noclobber !5\l  %98 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %3, i64 %76, i32 0, i32 0, i32 0, i64 1\l  %99 = load float, float addrspace(1)* %98, align 4, !amdgpu.noclobber !5\l  %100 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %3, i64 %76, i32 0, i32 0, i32 0, i64 2\l  %101 = load float, float addrspace(1)* %100, align 8, !amdgpu.noclobber !5\l  %102 = extractelement \<4 x float\> %75, i64 0\l  %103 = fsub contract float %97, %102\l  %104 = fmul contract float %78, %103\l  %105 = fmul contract float %80, %84\l  %106 = fadd contract float %105, %104\l  %107 = fmul contract float %82, %91\l  %108 = fadd contract float %107, %106\l  %109 = extractelement \<4 x float\> %75, i64 1\l  %110 = fsub contract float %99, %109\l  %111 = fmul contract float %78, %110\l  %112 = fmul contract float %80, %86\l  %113 = fadd contract float %112, %111\l  %114 = fmul contract float %82, %93\l  %115 = fadd contract float %114, %113\l  %116 = extractelement \<4 x float\> %75, i64 2\l  %117 = fsub contract float %101, %116\l  %118 = fmul contract float %78, %117\l  %119 = fmul contract float %80, %88\l  %120 = fadd contract float %119, %118\l  %121 = fmul contract float %82, %95\l  %122 = fadd contract float %121, %120\l  %123 = insertelement \<4 x float\> \<float poison, float poison, float poison,\l... float 0.000000e+00\>, float %108, i64 0\l  %124 = insertelement \<4 x float\> %123, float %115, i64 1\l  %125 = insertelement \<4 x float\> %124, float %122, i64 2\l  %126 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %89, i64 0, i32 0, i32 0, i32 0\l  store \<4 x float\> %125, \<4 x float\> addrspace(1)* %126, align 16\l  br label %238\l}"];
	Node0x5f36fe0 -> Node0x5f36dc0;
	Node0x5f37580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%127:\l127:                                              \l  %128 = phi \<4 x float\> [ zeroinitializer, %25 ], [ %234, %127 ]\l  %129 = phi i32 [ 0, %25 ], [ %235, %127 ]\l  %130 = phi i32 [ 0, %25 ], [ %236, %127 ]\l  %131 = add nsw i32 %129, %22\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %132, i32 0, i32 0, i32 0, i64 0\l  %134 = load float, float addrspace(1)* %133, align 16, !amdgpu.noclobber !5\l  %135 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %132, i32 0, i32 0, i32 0, i64 1\l  %136 = load float, float addrspace(1)* %135, align 4, !amdgpu.noclobber !5\l  %137 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %132, i32 0, i32 0, i32 0, i64 2\l  %138 = load float, float addrspace(1)* %137, align 8, !amdgpu.noclobber !5\l  %139 = extractelement \<4 x float\> %128, i64 0\l  %140 = fadd contract float %139, %134\l  %141 = extractelement \<4 x float\> %128, i64 1\l  %142 = fadd contract float %141, %136\l  %143 = extractelement \<4 x float\> %128, i64 2\l  %144 = fadd contract float %143, %138\l  %145 = or i32 %129, 1\l  %146 = add nsw i32 %145, %22\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %147, i32 0, i32 0, i32 0, i64 0\l  %149 = load float, float addrspace(1)* %148, align 16, !amdgpu.noclobber !5\l  %150 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %147, i32 0, i32 0, i32 0, i64 1\l  %151 = load float, float addrspace(1)* %150, align 4, !amdgpu.noclobber !5\l  %152 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %147, i32 0, i32 0, i32 0, i64 2\l  %153 = load float, float addrspace(1)* %152, align 8, !amdgpu.noclobber !5\l  %154 = fadd contract float %140, %149\l  %155 = fadd contract float %142, %151\l  %156 = fadd contract float %144, %153\l  %157 = or i32 %129, 2\l  %158 = add nsw i32 %157, %22\l  %159 = sext i32 %158 to i64\l  %160 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %159, i32 0, i32 0, i32 0, i64 0\l  %161 = load float, float addrspace(1)* %160, align 16, !amdgpu.noclobber !5\l  %162 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %159, i32 0, i32 0, i32 0, i64 1\l  %163 = load float, float addrspace(1)* %162, align 4, !amdgpu.noclobber !5\l  %164 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %159, i32 0, i32 0, i32 0, i64 2\l  %165 = load float, float addrspace(1)* %164, align 8, !amdgpu.noclobber !5\l  %166 = fadd contract float %154, %161\l  %167 = fadd contract float %155, %163\l  %168 = fadd contract float %156, %165\l  %169 = or i32 %129, 3\l  %170 = add nsw i32 %169, %22\l  %171 = sext i32 %170 to i64\l  %172 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %171, i32 0, i32 0, i32 0, i64 0\l  %173 = load float, float addrspace(1)* %172, align 16, !amdgpu.noclobber !5\l  %174 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %171, i32 0, i32 0, i32 0, i64 1\l  %175 = load float, float addrspace(1)* %174, align 4, !amdgpu.noclobber !5\l  %176 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %171, i32 0, i32 0, i32 0, i64 2\l  %177 = load float, float addrspace(1)* %176, align 8, !amdgpu.noclobber !5\l  %178 = fadd contract float %166, %173\l  %179 = fadd contract float %167, %175\l  %180 = fadd contract float %168, %177\l  %181 = or i32 %129, 4\l  %182 = add nsw i32 %181, %22\l  %183 = sext i32 %182 to i64\l  %184 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %183, i32 0, i32 0, i32 0, i64 0\l  %185 = load float, float addrspace(1)* %184, align 16, !amdgpu.noclobber !5\l  %186 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %183, i32 0, i32 0, i32 0, i64 1\l  %187 = load float, float addrspace(1)* %186, align 4, !amdgpu.noclobber !5\l  %188 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %183, i32 0, i32 0, i32 0, i64 2\l  %189 = load float, float addrspace(1)* %188, align 8, !amdgpu.noclobber !5\l  %190 = fadd contract float %178, %185\l  %191 = fadd contract float %179, %187\l  %192 = fadd contract float %180, %189\l  %193 = or i32 %129, 5\l  %194 = add nsw i32 %193, %22\l  %195 = sext i32 %194 to i64\l  %196 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %195, i32 0, i32 0, i32 0, i64 0\l  %197 = load float, float addrspace(1)* %196, align 16, !amdgpu.noclobber !5\l  %198 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %195, i32 0, i32 0, i32 0, i64 1\l  %199 = load float, float addrspace(1)* %198, align 4, !amdgpu.noclobber !5\l  %200 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %195, i32 0, i32 0, i32 0, i64 2\l  %201 = load float, float addrspace(1)* %200, align 8, !amdgpu.noclobber !5\l  %202 = fadd contract float %190, %197\l  %203 = fadd contract float %191, %199\l  %204 = fadd contract float %192, %201\l  %205 = or i32 %129, 6\l  %206 = add nsw i32 %205, %22\l  %207 = sext i32 %206 to i64\l  %208 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %207, i32 0, i32 0, i32 0, i64 0\l  %209 = load float, float addrspace(1)* %208, align 16, !amdgpu.noclobber !5\l  %210 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %207, i32 0, i32 0, i32 0, i64 1\l  %211 = load float, float addrspace(1)* %210, align 4, !amdgpu.noclobber !5\l  %212 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %207, i32 0, i32 0, i32 0, i64 2\l  %213 = load float, float addrspace(1)* %212, align 8, !amdgpu.noclobber !5\l  %214 = fadd contract float %202, %209\l  %215 = insertelement \<4 x float\> %128, float %214, i64 0\l  %216 = fadd contract float %203, %211\l  %217 = insertelement \<4 x float\> %215, float %216, i64 1\l  %218 = fadd contract float %204, %213\l  %219 = insertelement \<4 x float\> %217, float %218, i64 2\l  %220 = or i32 %129, 7\l  %221 = add nsw i32 %220, %22\l  %222 = sext i32 %221 to i64\l  %223 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %222, i32 0, i32 0, i32 0, i64 0\l  %224 = load float, float addrspace(1)* %223, align 16, !amdgpu.noclobber !5\l  %225 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %222, i32 0, i32 0, i32 0, i64 1\l  %226 = load float, float addrspace(1)* %225, align 4, !amdgpu.noclobber !5\l  %227 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %222, i32 0, i32 0, i32 0, i64 2\l  %228 = load float, float addrspace(1)* %227, align 8, !amdgpu.noclobber !5\l  %229 = fadd contract float %214, %224\l  %230 = insertelement \<4 x float\> %219, float %229, i64 0\l  %231 = fadd contract float %216, %226\l  %232 = insertelement \<4 x float\> %230, float %231, i64 1\l  %233 = fadd contract float %218, %228\l  %234 = insertelement \<4 x float\> %232, float %233, i64 2\l  %235 = add nuw nsw i32 %129, 8\l  %236 = add i32 %130, 8\l  %237 = icmp eq i32 %236, %26\l  br i1 %237, label %27, label %127, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5f37580:s0 -> Node0x5f37640;
	Node0x5f37580:s1 -> Node0x5f37580;
	Node0x5f36dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%238:\l238:                                              \l  ret void\l}"];
}
