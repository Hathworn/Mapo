digraph "CFG for '_Z45cunn_OneVsAllNLLCriterion_updateOutput_kernelPfS_S_iiiS_' function" {
	label="CFG for '_Z45cunn_OneVsAllNLLCriterion_updateOutput_kernelPfS_S_iiiS_' function";

	Node0x53c4f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = mul nsw i32 %8, %4\l  %10 = sext i32 %9 to i64\l  %11 = getelementptr inbounds float, float addrspace(1)* %1, i64 %10\l  %12 = sext i32 %8 to i64\l  %13 = getelementptr inbounds float, float addrspace(1)* %0, i64 %12\l  %14 = getelementptr inbounds float, float addrspace(1)* %2, i64 %12\l  %15 = load float, float addrspace(1)* %14, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %16 = fptosi float %15 to i32\l  %17 = add nsw i32 %16, -1\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !10, !invariant.load\l... !8\l  %23 = zext i16 %22 to i32\l  %24 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ45cunn_OneVsAllNLLCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer, i32\l... 0, i32 %18\l  store float 0.000000e+00, float addrspace(3)* %24, align 4, !tbaa !4\l  %25 = icmp slt i32 %18, %4\l  br i1 %25, label %26, label %31\l|{<s0>T|<s1>F}}"];
	Node0x53c4f30:s0 -> Node0x53c8c10;
	Node0x53c4f30:s1 -> Node0x53c8ca0;
	Node0x53c8c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%26:\l26:                                               \l  %27 = zext i32 %17 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %6, i64 %27\l  %29 = getelementptr inbounds float, float addrspace(1)* %11, i64 %27\l  br label %38\l}"];
	Node0x53c8c10 -> Node0x53c8f90;
	Node0x53c9050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%30:\l30:                                               \l  store float %81, float addrspace(3)* %24, align 4, !tbaa !4\l  br label %31\l}"];
	Node0x53c9050 -> Node0x53c8ca0;
	Node0x53c8ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%31:\l31:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %32 = icmp eq i32 %18, 0\l  br i1 %32, label %33, label %145\l|{<s0>T|<s1>F}}"];
	Node0x53c8ca0:s0 -> Node0x53c6290;
	Node0x53c8ca0:s1 -> Node0x53c6320;
	Node0x53c6290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%33:\l33:                                               \l  %34 = and i32 %23, 7\l  %35 = icmp ult i16 %22, 8\l  br i1 %35, label %84, label %36\l|{<s0>T|<s1>F}}"];
	Node0x53c6290:s0 -> Node0x53c9920;
	Node0x53c6290:s1 -> Node0x53c9970;
	Node0x53c9970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%36:\l36:                                               \l  %37 = and i32 %23, 2040\l  br label %102\l}"];
	Node0x53c9970 -> Node0x53c9b70;
	Node0x53c8f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi float [ 0.000000e+00, %26 ], [ %81, %79 ]\l  %40 = phi i32 [ %18, %26 ], [ %82, %79 ]\l  %41 = icmp eq i32 %40, %17\l  br i1 %41, label %42, label %60\l|{<s0>T|<s1>F}}"];
	Node0x53c8f90:s0 -> Node0x53c9ee0;
	Node0x53c8f90:s1 -> Node0x53c9f70;
	Node0x53c9ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%42:\l42:                                               \l  %43 = load float, float addrspace(1)* %28, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %44 = fneg contract float %43\l  %45 = load float, float addrspace(1)* %29, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %46 = tail call i1 @llvm.amdgcn.class.f32(float %45, i32 144)\l  %47 = select i1 %46, float 0x41F0000000000000, float 1.000000e+00\l  %48 = fmul float %45, %47\l  %49 = tail call float @llvm.log2.f32(float %48)\l  %50 = fmul float %49, 0x3FE62E42E0000000\l  %51 = tail call i1 @llvm.amdgcn.class.f32(float %49, i32 519)\l  %52 = fneg float %50\l  %53 = tail call float @llvm.fma.f32(float %49, float 0x3FE62E42E0000000,\l... float %52)\l  %54 = tail call float @llvm.fma.f32(float %49, float 0x3E6EFA39E0000000,\l... float %53)\l  %55 = fadd float %50, %54\l  %56 = select i1 %51, float %49, float %55\l  %57 = select i1 %46, float 0x40362E4300000000, float 0.000000e+00\l  %58 = fsub float %56, %57\l  %59 = fmul contract float %58, %44\l  br label %79\l}"];
	Node0x53c9ee0 -> Node0x53c9c30;
	Node0x53c9f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%60:\l60:                                               \l  %61 = zext i32 %40 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %11, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %64 = fsub contract float 1.000000e+00, %63\l  %65 = tail call i1 @llvm.amdgcn.class.f32(float %64, i32 144)\l  %66 = select i1 %65, float 0x41F0000000000000, float 1.000000e+00\l  %67 = fmul float %64, %66\l  %68 = tail call float @llvm.log2.f32(float %67)\l  %69 = fmul float %68, 0x3FE62E42E0000000\l  %70 = tail call i1 @llvm.amdgcn.class.f32(float %68, i32 519)\l  %71 = fneg float %69\l  %72 = tail call float @llvm.fma.f32(float %68, float 0x3FE62E42E0000000,\l... float %71)\l  %73 = tail call float @llvm.fma.f32(float %68, float 0x3E6EFA39E0000000,\l... float %72)\l  %74 = fadd float %69, %73\l  %75 = select i1 %70, float %68, float %74\l  %76 = select i1 %65, float 0x40362E4300000000, float 0.000000e+00\l  %77 = fsub float %75, %76\l  %78 = fneg contract float %77\l  br label %79\l}"];
	Node0x53c9f70 -> Node0x53c9c30;
	Node0x53c9c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  %80 = phi contract float [ %59, %42 ], [ %78, %60 ]\l  %81 = fadd contract float %80, %39\l  %82 = add nuw nsw i32 %40, %23\l  %83 = icmp slt i32 %82, %4\l  br i1 %83, label %38, label %30, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x53c9c30:s0 -> Node0x53c8f90;
	Node0x53c9c30:s1 -> Node0x53c9050;
	Node0x53c9920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%84:\l84:                                               \l  %85 = phi float [ undef, %33 ], [ %136, %102 ]\l  %86 = phi i32 [ 0, %33 ], [ %137, %102 ]\l  %87 = phi float [ 0.000000e+00, %33 ], [ %136, %102 ]\l  %88 = icmp eq i32 %34, 0\l  br i1 %88, label %99, label %89\l|{<s0>T|<s1>F}}"];
	Node0x53c9920:s0 -> Node0x53cc900;
	Node0x53c9920:s1 -> Node0x53cc990;
	Node0x53cc990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%89:\l89:                                               \l  %90 = phi i32 [ %96, %89 ], [ %86, %84 ]\l  %91 = phi float [ %95, %89 ], [ %87, %84 ]\l  %92 = phi i32 [ %97, %89 ], [ 0, %84 ]\l  %93 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ45cunn_OneVsAllNLLCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer, i32\l... 0, i32 %90\l  %94 = load float, float addrspace(3)* %93, align 4, !tbaa !4\l  %95 = fadd contract float %91, %94\l  %96 = add nuw nsw i32 %90, 1\l  %97 = add i32 %92, 1\l  %98 = icmp eq i32 %97, %34\l  br i1 %98, label %99, label %89, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x53cc990:s0 -> Node0x53cc900;
	Node0x53cc990:s1 -> Node0x53cc990;
	Node0x53cc900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%99:\l99:                                               \l  %100 = phi float [ %85, %84 ], [ %95, %89 ]\l  %101 = icmp eq i32 %5, 0\l  br i1 %101, label %143, label %140\l|{<s0>T|<s1>F}}"];
	Node0x53cc900:s0 -> Node0x53cd410;
	Node0x53cc900:s1 -> Node0x53cd460;
	Node0x53c9b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%102:\l102:                                              \l  %103 = phi i32 [ 0, %36 ], [ %137, %102 ]\l  %104 = phi float [ 0.000000e+00, %36 ], [ %136, %102 ]\l  %105 = phi i32 [ 0, %36 ], [ %138, %102 ]\l  %106 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ45cunn_OneVsAllNLLCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer, i32\l... 0, i32 %103\l  %107 = load float, float addrspace(3)* %106, align 16, !tbaa !4\l  %108 = fadd contract float %104, %107\l  %109 = or i32 %103, 1\l  %110 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ45cunn_OneVsAllNLLCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer, i32\l... 0, i32 %109\l  %111 = load float, float addrspace(3)* %110, align 4, !tbaa !4\l  %112 = fadd contract float %108, %111\l  %113 = or i32 %103, 2\l  %114 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ45cunn_OneVsAllNLLCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer, i32\l... 0, i32 %113\l  %115 = load float, float addrspace(3)* %114, align 8, !tbaa !4\l  %116 = fadd contract float %112, %115\l  %117 = or i32 %103, 3\l  %118 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ45cunn_OneVsAllNLLCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer, i32\l... 0, i32 %117\l  %119 = load float, float addrspace(3)* %118, align 4, !tbaa !4\l  %120 = fadd contract float %116, %119\l  %121 = or i32 %103, 4\l  %122 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ45cunn_OneVsAllNLLCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer, i32\l... 0, i32 %121\l  %123 = load float, float addrspace(3)* %122, align 16, !tbaa !4\l  %124 = fadd contract float %120, %123\l  %125 = or i32 %103, 5\l  %126 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ45cunn_OneVsAllNLLCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer, i32\l... 0, i32 %125\l  %127 = load float, float addrspace(3)* %126, align 4, !tbaa !4\l  %128 = fadd contract float %124, %127\l  %129 = or i32 %103, 6\l  %130 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ45cunn_OneVsAllNLLCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer, i32\l... 0, i32 %129\l  %131 = load float, float addrspace(3)* %130, align 8, !tbaa !4\l  %132 = fadd contract float %128, %131\l  %133 = or i32 %103, 7\l  %134 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ45cunn_OneVsAllNLLCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer, i32\l... 0, i32 %133\l  %135 = load float, float addrspace(3)* %134, align 4, !tbaa !4\l  %136 = fadd contract float %132, %135\l  %137 = add nuw nsw i32 %103, 8\l  %138 = add i32 %105, 8\l  %139 = icmp eq i32 %138, %37\l  br i1 %139, label %84, label %102, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x53c9b70:s0 -> Node0x53c9920;
	Node0x53c9b70:s1 -> Node0x53c9b70;
	Node0x53cd460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%140:\l140:                                              \l  %141 = sitofp i32 %3 to float\l  %142 = fdiv contract float %100, %141\l  br label %143\l}"];
	Node0x53cd460 -> Node0x53cd410;
	Node0x53cd410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%143:\l143:                                              \l  %144 = phi float [ %142, %140 ], [ %100, %99 ]\l  store float %144, float addrspace(1)* %13, align 4, !tbaa !4\l  br label %145\l}"];
	Node0x53cd410 -> Node0x53c6320;
	Node0x53c6320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%145:\l145:                                              \l  ret void\l}"];
}
