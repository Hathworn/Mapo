digraph "CFG for '_Z12subgradinputPfS_iiiiiii' function" {
	label="CFG for '_Z12subgradinputPfS_iiiiiii' function";

	Node0x4cfa2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%9:\l  %10 = sub nsw i32 %4, %6\l  %11 = sdiv i32 %10, %8\l  %12 = add nsw i32 %11, 1\l  %13 = sub nsw i32 %3, %5\l  %14 = sdiv i32 %13, %7\l  %15 = add nsw i32 %14, 1\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %24 = getelementptr i8, i8 addrspace(4)* %18, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !5, !invariant.load !6\l  %27 = zext i16 %26 to i32\l  %28 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 16\l  %29 = bitcast i8 addrspace(4)* %28 to i32 addrspace(4)*\l  %30 = load i32, i32 addrspace(4)* %29, align 8, !tbaa !7\l  %31 = mul i32 %23, %27\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %33 = add i32 %31, %32\l  %34 = udiv i32 %30, %27\l  %35 = mul i32 %34, %27\l  %36 = icmp ugt i32 %30, %35\l  %37 = zext i1 %36 to i32\l  %38 = add i32 %34, %37\l  %39 = mul i32 %38, %27\l  %40 = mul nsw i32 %12, %16\l  %41 = mul nsw i32 %40, %15\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  %44 = mul i32 %16, %3\l  %45 = mul i32 %44, %4\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %48 = icmp sgt i32 %33, %14\l  br i1 %48, label %151, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4cfa2b0:s0 -> Node0x4cff4e0;
	Node0x4cfa2b0:s1 -> Node0x4cff570;
	Node0x4cff570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%49:\l49:                                               \l  %50 = icmp sgt i32 %17, %11\l  %51 = mul i32 %7, %4\l  %52 = icmp sgt i32 %5, 0\l  %53 = icmp sgt i32 %6, 0\l  %54 = mul nsw i32 %6, %5\l  %55 = sitofp i32 %54 to float\l  %56 = sext i32 %4 to i64\l  %57 = and i32 %6, 7\l  %58 = icmp ult i32 %6, 8\l  %59 = and i32 %6, -8\l  %60 = icmp eq i32 %57, 0\l  br label %61\l}"];
	Node0x4cff570 -> Node0x4cffd60;
	Node0x4cffd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%61:\l61:                                               \l  %62 = phi i32 [ %33, %49 ], [ %149, %148 ]\l  br i1 %50, label %148, label %63\l|{<s0>T|<s1>F}}"];
	Node0x4cffd60:s0 -> Node0x4cffe50;
	Node0x4cffd60:s1 -> Node0x4cfff90;
	Node0x4cfff90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%63:\l63:                                               \l  %64 = mul i32 %51, %62\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %47, i64 %65\l  %67 = mul nsw i32 %62, %12\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %43, i64 %68\l  br label %70\l}"];
	Node0x4cfff90 -> Node0x4d00610;
	Node0x4d00610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%70:\l70:                                               \l  %71 = phi i32 [ %17, %63 ], [ %146, %145 ]\l  br i1 %52, label %72, label %145\l|{<s0>T|<s1>F}}"];
	Node0x4d00610:s0 -> Node0x4d00840;
	Node0x4d00610:s1 -> Node0x4d00700;
	Node0x4d00840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%72:\l72:                                               \l  %73 = zext i32 %71 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %69, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !16\l  %76 = mul nsw i32 %71, %8\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %66, i64 %77\l  %79 = fdiv contract float %75, %55\l  br label %80\l}"];
	Node0x4d00840 -> Node0x4d00e60;
	Node0x4d00e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%80:\l80:                                               \l  %81 = phi i32 [ 0, %72 ], [ %143, %141 ]\l  %82 = phi float addrspace(1)* [ %78, %72 ], [ %142, %141 ]\l  br i1 %53, label %83, label %141\l|{<s0>T|<s1>F}}"];
	Node0x4d00e60:s0 -> Node0x4d011c0;
	Node0x4d00e60:s1 -> Node0x4d00f60;
	Node0x4d011c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%83:\l83:                                               \l  br i1 %58, label %129, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4d011c0:s0 -> Node0x4d01300;
	Node0x4d011c0:s1 -> Node0x4d01350;
	Node0x4d01350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%84:\l84:                                               \l  %85 = phi i32 [ %126, %84 ], [ 0, %83 ]\l  %86 = phi i32 [ %127, %84 ], [ 0, %83 ]\l  %87 = zext i32 %85 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %82, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !16\l  %90 = fadd contract float %79, %89\l  store float %90, float addrspace(1)* %88, align 4, !tbaa !16\l  %91 = or i32 %85, 1\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %82, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !16\l  %95 = fadd contract float %79, %94\l  store float %95, float addrspace(1)* %93, align 4, !tbaa !16\l  %96 = or i32 %85, 2\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %82, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !16\l  %100 = fadd contract float %79, %99\l  store float %100, float addrspace(1)* %98, align 4, !tbaa !16\l  %101 = or i32 %85, 3\l  %102 = zext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %82, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !16\l  %105 = fadd contract float %79, %104\l  store float %105, float addrspace(1)* %103, align 4, !tbaa !16\l  %106 = or i32 %85, 4\l  %107 = zext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %82, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !16\l  %110 = fadd contract float %79, %109\l  store float %110, float addrspace(1)* %108, align 4, !tbaa !16\l  %111 = or i32 %85, 5\l  %112 = zext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %82, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !16\l  %115 = fadd contract float %79, %114\l  store float %115, float addrspace(1)* %113, align 4, !tbaa !16\l  %116 = or i32 %85, 6\l  %117 = zext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %82, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !16\l  %120 = fadd contract float %79, %119\l  store float %120, float addrspace(1)* %118, align 4, !tbaa !16\l  %121 = or i32 %85, 7\l  %122 = zext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %82, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !16\l  %125 = fadd contract float %79, %124\l  store float %125, float addrspace(1)* %123, align 4, !tbaa !16\l  %126 = add nuw nsw i32 %85, 8\l  %127 = add i32 %86, 8\l  %128 = icmp eq i32 %127, %59\l  br i1 %128, label %129, label %84, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4d01350:s0 -> Node0x4d01300;
	Node0x4d01350:s1 -> Node0x4d01350;
	Node0x4d01300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%129:\l129:                                              \l  %130 = phi i32 [ 0, %83 ], [ %126, %84 ]\l  br i1 %60, label %141, label %131\l|{<s0>T|<s1>F}}"];
	Node0x4d01300:s0 -> Node0x4d00f60;
	Node0x4d01300:s1 -> Node0x4d003c0;
	Node0x4d003c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%131:\l131:                                              \l  %132 = phi i32 [ %138, %131 ], [ %130, %129 ]\l  %133 = phi i32 [ %139, %131 ], [ 0, %129 ]\l  %134 = zext i32 %132 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %82, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !16\l  %137 = fadd contract float %79, %136\l  store float %137, float addrspace(1)* %135, align 4, !tbaa !16\l  %138 = add nuw nsw i32 %132, 1\l  %139 = add i32 %133, 1\l  %140 = icmp eq i32 %139, %57\l  br i1 %140, label %141, label %131, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4d003c0:s0 -> Node0x4d00f60;
	Node0x4d003c0:s1 -> Node0x4d003c0;
	Node0x4d00f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%141:\l141:                                              \l  %142 = getelementptr inbounds float, float addrspace(1)* %82, i64 %56\l  %143 = add nuw nsw i32 %81, 1\l  %144 = icmp eq i32 %143, %5\l  br i1 %144, label %145, label %80, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4d00f60:s0 -> Node0x4d00700;
	Node0x4d00f60:s1 -> Node0x4d00e60;
	Node0x4d00700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%145:\l145:                                              \l  %146 = add nuw nsw i32 %71, %22\l  %147 = icmp sgt i32 %146, %11\l  br i1 %147, label %148, label %70, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x4d00700:s0 -> Node0x4cffe50;
	Node0x4d00700:s1 -> Node0x4d00610;
	Node0x4cffe50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%148:\l148:                                              \l  %149 = add nsw i32 %62, %39\l  %150 = icmp sgt i32 %149, %14\l  br i1 %150, label %151, label %61, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x4cffe50:s0 -> Node0x4cff4e0;
	Node0x4cffe50:s1 -> Node0x4cffd60;
	Node0x4cff4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%151:\l151:                                              \l  ret void\l}"];
}
