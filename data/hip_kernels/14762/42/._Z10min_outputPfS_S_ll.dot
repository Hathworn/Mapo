digraph "CFG for '_Z10min_outputPfS_S_ll' function" {
	label="CFG for '_Z10min_outputPfS_S_ll' function";

	Node0x4ec23e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %11\l  %14 = add i32 %13, %6\l  %15 = zext i32 %14 to i64\l  %16 = icmp slt i64 %15, %3\l  br i1 %16, label %17, label %114\l|{<s0>T|<s1>F}}"];
	Node0x4ec23e0:s0 -> Node0x4ec3a20;
	Node0x4ec23e0:s1 -> Node0x4ec43e0;
	Node0x4ec3a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%17:\l17:                                               \l  %18 = mul nsw i64 %15, %4\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %21 = icmp sgt i64 %4, 1\l  br i1 %21, label %22, label %109\l|{<s0>T|<s1>F}}"];
	Node0x4ec3a20:s0 -> Node0x4ec4f10;
	Node0x4ec3a20:s1 -> Node0x4ec4fa0;
	Node0x4ec4f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%22:\l22:                                               \l  %23 = add i64 %4, -1\l  %24 = add i64 %4, -2\l  %25 = and i64 %23, 7\l  %26 = icmp ult i64 %24, 7\l  br i1 %26, label %84, label %27\l|{<s0>T|<s1>F}}"];
	Node0x4ec4f10:s0 -> Node0x4ec53b0;
	Node0x4ec4f10:s1 -> Node0x4ec5400;
	Node0x4ec5400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%27:\l27:                                               \l  %28 = and i64 %23, -8\l  br label %29\l}"];
	Node0x4ec5400 -> Node0x4ec5600;
	Node0x4ec5600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%29:\l29:                                               \l  %30 = phi i64 [ 1, %27 ], [ %81, %29 ]\l  %31 = phi i64 [ 0, %27 ], [ %80, %29 ]\l  %32 = phi float [ %20, %27 ], [ %79, %29 ]\l  %33 = phi i64 [ 0, %27 ], [ %82, %29 ]\l  %34 = getelementptr inbounds float, float addrspace(1)* %19, i64 %30\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %36 = fcmp contract olt float %35, %32\l  %37 = select i1 %36, float %35, float %32\l  %38 = select i1 %36, i64 %30, i64 %31\l  %39 = add nuw nsw i64 %30, 1\l  %40 = getelementptr inbounds float, float addrspace(1)* %19, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %42 = fcmp contract olt float %41, %37\l  %43 = select i1 %42, float %41, float %37\l  %44 = select i1 %42, i64 %39, i64 %38\l  %45 = add nuw nsw i64 %30, 2\l  %46 = getelementptr inbounds float, float addrspace(1)* %19, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %48 = fcmp contract olt float %47, %43\l  %49 = select i1 %48, float %47, float %43\l  %50 = select i1 %48, i64 %45, i64 %44\l  %51 = add nuw nsw i64 %30, 3\l  %52 = getelementptr inbounds float, float addrspace(1)* %19, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %54 = fcmp contract olt float %53, %49\l  %55 = select i1 %54, float %53, float %49\l  %56 = select i1 %54, i64 %51, i64 %50\l  %57 = add nuw nsw i64 %30, 4\l  %58 = getelementptr inbounds float, float addrspace(1)* %19, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %60 = fcmp contract olt float %59, %55\l  %61 = select i1 %60, float %59, float %55\l  %62 = select i1 %60, i64 %57, i64 %56\l  %63 = add nuw nsw i64 %30, 5\l  %64 = getelementptr inbounds float, float addrspace(1)* %19, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %66 = fcmp contract olt float %65, %61\l  %67 = select i1 %66, float %65, float %61\l  %68 = select i1 %66, i64 %63, i64 %62\l  %69 = add nuw nsw i64 %30, 6\l  %70 = getelementptr inbounds float, float addrspace(1)* %19, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %72 = fcmp contract olt float %71, %67\l  %73 = select i1 %72, float %71, float %67\l  %74 = select i1 %72, i64 %69, i64 %68\l  %75 = add nuw nsw i64 %30, 7\l  %76 = getelementptr inbounds float, float addrspace(1)* %19, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %78 = fcmp contract olt float %77, %73\l  %79 = select i1 %78, float %77, float %73\l  %80 = select i1 %78, i64 %75, i64 %74\l  %81 = add nuw nsw i64 %30, 8\l  %82 = add i64 %33, 8\l  %83 = icmp eq i64 %82, %28\l  br i1 %83, label %84, label %29, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4ec5600:s0 -> Node0x4ec53b0;
	Node0x4ec5600:s1 -> Node0x4ec5600;
	Node0x4ec53b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%84:\l84:                                               \l  %85 = phi float [ undef, %22 ], [ %79, %29 ]\l  %86 = phi i64 [ undef, %22 ], [ %80, %29 ]\l  %87 = phi i64 [ 1, %22 ], [ %81, %29 ]\l  %88 = phi i64 [ 0, %22 ], [ %80, %29 ]\l  %89 = phi float [ %20, %22 ], [ %79, %29 ]\l  %90 = icmp eq i64 %25, 0\l  br i1 %90, label %104, label %91\l|{<s0>T|<s1>F}}"];
	Node0x4ec53b0:s0 -> Node0x4ec8d90;
	Node0x4ec53b0:s1 -> Node0x4ec8de0;
	Node0x4ec8de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%91:\l91:                                               \l  %92 = phi i64 [ %101, %91 ], [ %87, %84 ]\l  %93 = phi i64 [ %100, %91 ], [ %88, %84 ]\l  %94 = phi float [ %99, %91 ], [ %89, %84 ]\l  %95 = phi i64 [ %102, %91 ], [ 0, %84 ]\l  %96 = getelementptr inbounds float, float addrspace(1)* %19, i64 %92\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %98 = fcmp contract olt float %97, %94\l  %99 = select i1 %98, float %97, float %94\l  %100 = select i1 %98, i64 %92, i64 %93\l  %101 = add nuw nsw i64 %92, 1\l  %102 = add i64 %95, 1\l  %103 = icmp eq i64 %102, %25\l  br i1 %103, label %104, label %91, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4ec8de0:s0 -> Node0x4ec8d90;
	Node0x4ec8de0:s1 -> Node0x4ec8de0;
	Node0x4ec8d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%104:\l104:                                              \l  %105 = phi float [ %85, %84 ], [ %99, %91 ]\l  %106 = phi i64 [ %86, %84 ], [ %100, %91 ]\l  %107 = add nsw i64 %106, 1\l  %108 = sitofp i64 %107 to float\l  br label %109\l}"];
	Node0x4ec8d90 -> Node0x4ec4fa0;
	Node0x4ec4fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%109:\l109:                                              \l  %110 = phi float [ %20, %17 ], [ %105, %104 ]\l  %111 = phi float [ 1.000000e+00, %17 ], [ %108, %104 ]\l  %112 = getelementptr inbounds float, float addrspace(1)* %1, i64 %15\l  store float %110, float addrspace(1)* %112, align 4, !tbaa !7\l  %113 = getelementptr inbounds float, float addrspace(1)* %2, i64 %15\l  store float %111, float addrspace(1)* %113, align 4, !tbaa !7\l  br label %114\l}"];
	Node0x4ec4fa0 -> Node0x4ec43e0;
	Node0x4ec43e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%114:\l114:                                              \l  ret void\l}"];
}
