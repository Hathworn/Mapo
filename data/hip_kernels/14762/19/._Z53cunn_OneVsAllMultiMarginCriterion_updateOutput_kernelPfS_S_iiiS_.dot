digraph "CFG for '_Z53cunn_OneVsAllMultiMarginCriterion_updateOutput_kernelPfS_S_iiiS_' function" {
	label="CFG for '_Z53cunn_OneVsAllMultiMarginCriterion_updateOutput_kernelPfS_S_iiiS_' function";

	Node0x48f17b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = mul nsw i32 %8, %4\l  %10 = sext i32 %9 to i64\l  %11 = getelementptr inbounds float, float addrspace(1)* %1, i64 %10\l  %12 = sext i32 %8 to i64\l  %13 = getelementptr inbounds float, float addrspace(1)* %0, i64 %12\l  %14 = getelementptr inbounds float, float addrspace(1)* %2, i64 %12\l  %15 = load float, float addrspace(1)* %14, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %16 = fptosi float %15 to i32\l  %17 = add nsw i32 %16, -1\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !10, !invariant.load\l... !8\l  %23 = zext i16 %22 to i32\l  %24 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ53cunn_OneVsAllMultiMarginCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer\l..., i32 0, i32 %18\l  store float 0.000000e+00, float addrspace(3)* %24, align 4, !tbaa !4\l  %25 = icmp slt i32 %18, %4\l  br i1 %25, label %33, label %26\l|{<s0>T|<s1>F}}"];
	Node0x48f17b0:s0 -> Node0x48f5460;
	Node0x48f17b0:s1 -> Node0x48f54f0;
	Node0x48f54f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%26:\l26:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %27 = icmp eq i32 %18, 0\l  br i1 %27, label %28, label %117\l|{<s0>T|<s1>F}}"];
	Node0x48f54f0:s0 -> Node0x48f5920;
	Node0x48f54f0:s1 -> Node0x48f59b0;
	Node0x48f5920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%28:\l28:                                               \l  %29 = and i32 %23, 7\l  %30 = icmp ult i16 %22, 8\l  br i1 %30, label %56, label %31\l|{<s0>T|<s1>F}}"];
	Node0x48f5920:s0 -> Node0x48f5c40;
	Node0x48f5920:s1 -> Node0x48f5c90;
	Node0x48f5c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%31:\l31:                                               \l  %32 = and i32 %23, 2040\l  br label %74\l}"];
	Node0x48f5c90 -> Node0x48f2b20;
	Node0x48f5460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi float [ %53, %52 ], [ 0.000000e+00, %7 ]\l  %35 = phi i32 [ %54, %52 ], [ %18, %7 ]\l  %36 = icmp eq i32 %35, %17\l  %37 = zext i32 %35 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %11, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %40 = fneg contract float %39\l  %41 = select contract i1 %36, float %39, float %40\l  %42 = fsub contract float 1.000000e+00, %41\l  %43 = fcmp contract ogt float %42, 0.000000e+00\l  br i1 %43, label %44, label %52\l|{<s0>T|<s1>F}}"];
	Node0x48f5460:s0 -> Node0x48f6840;
	Node0x48f5460:s1 -> Node0x48f60a0;
	Node0x48f6840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%44:\l44:                                               \l  br i1 %36, label %45, label %48\l|{<s0>T|<s1>F}}"];
	Node0x48f6840:s0 -> Node0x48f6980;
	Node0x48f6840:s1 -> Node0x48f69d0;
	Node0x48f6980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%45:\l45:                                               \l  %46 = getelementptr inbounds float, float addrspace(1)* %6, i64 %37\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  br label %48\l}"];
	Node0x48f6980 -> Node0x48f69d0;
	Node0x48f69d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%48:\l48:                                               \l  %49 = phi float [ %47, %45 ], [ 1.000000e+00, %44 ]\l  %50 = fmul contract float %42, %49\l  %51 = fadd contract float %34, %50\l  store float %51, float addrspace(3)* %24, align 4, !tbaa !4\l  br label %52\l}"];
	Node0x48f69d0 -> Node0x48f60a0;
	Node0x48f60a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi float [ %51, %48 ], [ %34, %33 ]\l  %54 = add nuw nsw i32 %35, %23\l  %55 = icmp slt i32 %54, %4\l  br i1 %55, label %33, label %26, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x48f60a0:s0 -> Node0x48f5460;
	Node0x48f60a0:s1 -> Node0x48f54f0;
	Node0x48f5c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%56:\l56:                                               \l  %57 = phi float [ undef, %28 ], [ %108, %74 ]\l  %58 = phi i32 [ 0, %28 ], [ %109, %74 ]\l  %59 = phi float [ 0.000000e+00, %28 ], [ %108, %74 ]\l  %60 = icmp eq i32 %29, 0\l  br i1 %60, label %71, label %61\l|{<s0>T|<s1>F}}"];
	Node0x48f5c40:s0 -> Node0x48f7500;
	Node0x48f5c40:s1 -> Node0x48f7590;
	Node0x48f7590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%61:\l61:                                               \l  %62 = phi i32 [ %68, %61 ], [ %58, %56 ]\l  %63 = phi float [ %67, %61 ], [ %59, %56 ]\l  %64 = phi i32 [ %69, %61 ], [ 0, %56 ]\l  %65 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ53cunn_OneVsAllMultiMarginCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer\l..., i32 0, i32 %62\l  %66 = load float, float addrspace(3)* %65, align 4, !tbaa !4\l  %67 = fadd contract float %63, %66\l  %68 = add nuw nsw i32 %62, 1\l  %69 = add i32 %64, 1\l  %70 = icmp eq i32 %69, %29\l  br i1 %70, label %71, label %61, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x48f7590:s0 -> Node0x48f7500;
	Node0x48f7590:s1 -> Node0x48f7590;
	Node0x48f7500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%71:\l71:                                               \l  %72 = phi float [ %57, %56 ], [ %67, %61 ]\l  %73 = icmp eq i32 %5, 0\l  br i1 %73, label %115, label %112\l|{<s0>T|<s1>F}}"];
	Node0x48f7500:s0 -> Node0x48f8250;
	Node0x48f7500:s1 -> Node0x48f82a0;
	Node0x48f2b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%74:\l74:                                               \l  %75 = phi i32 [ 0, %31 ], [ %109, %74 ]\l  %76 = phi float [ 0.000000e+00, %31 ], [ %108, %74 ]\l  %77 = phi i32 [ 0, %31 ], [ %110, %74 ]\l  %78 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ53cunn_OneVsAllMultiMarginCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer\l..., i32 0, i32 %75\l  %79 = load float, float addrspace(3)* %78, align 16, !tbaa !4\l  %80 = fadd contract float %76, %79\l  %81 = or i32 %75, 1\l  %82 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ53cunn_OneVsAllMultiMarginCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer\l..., i32 0, i32 %81\l  %83 = load float, float addrspace(3)* %82, align 4, !tbaa !4\l  %84 = fadd contract float %80, %83\l  %85 = or i32 %75, 2\l  %86 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ53cunn_OneVsAllMultiMarginCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer\l..., i32 0, i32 %85\l  %87 = load float, float addrspace(3)* %86, align 8, !tbaa !4\l  %88 = fadd contract float %84, %87\l  %89 = or i32 %75, 3\l  %90 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ53cunn_OneVsAllMultiMarginCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer\l..., i32 0, i32 %89\l  %91 = load float, float addrspace(3)* %90, align 4, !tbaa !4\l  %92 = fadd contract float %88, %91\l  %93 = or i32 %75, 4\l  %94 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ53cunn_OneVsAllMultiMarginCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer\l..., i32 0, i32 %93\l  %95 = load float, float addrspace(3)* %94, align 16, !tbaa !4\l  %96 = fadd contract float %92, %95\l  %97 = or i32 %75, 5\l  %98 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ53cunn_OneVsAllMultiMarginCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer\l..., i32 0, i32 %97\l  %99 = load float, float addrspace(3)* %98, align 4, !tbaa !4\l  %100 = fadd contract float %96, %99\l  %101 = or i32 %75, 6\l  %102 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ53cunn_OneVsAllMultiMarginCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer\l..., i32 0, i32 %101\l  %103 = load float, float addrspace(3)* %102, align 8, !tbaa !4\l  %104 = fadd contract float %100, %103\l  %105 = or i32 %75, 7\l  %106 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ53cunn_OneVsAllMultiMarginCriterion_updateOutput_kernelPfS_S_iiiS_E6buffer\l..., i32 0, i32 %105\l  %107 = load float, float addrspace(3)* %106, align 4, !tbaa !4\l  %108 = fadd contract float %104, %107\l  %109 = add nuw nsw i32 %75, 8\l  %110 = add i32 %77, 8\l  %111 = icmp eq i32 %110, %32\l  br i1 %111, label %56, label %74, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x48f2b20:s0 -> Node0x48f5c40;
	Node0x48f2b20:s1 -> Node0x48f2b20;
	Node0x48f82a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%112:\l112:                                              \l  %113 = sitofp i32 %4 to float\l  %114 = fdiv contract float %72, %113\l  br label %115\l}"];
	Node0x48f82a0 -> Node0x48f8250;
	Node0x48f8250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%115:\l115:                                              \l  %116 = phi float [ %114, %112 ], [ %72, %71 ]\l  store float %116, float addrspace(1)* %13, align 4, !tbaa !4\l  br label %117\l}"];
	Node0x48f8250 -> Node0x48f59b0;
	Node0x48f59b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%117:\l117:                                              \l  ret void\l}"];
}
