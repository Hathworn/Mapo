digraph "CFG for '_Z28sobelEdgeDetectionSharedMem2PiS_iii' function" {
	label="CFG for '_Z28sobelEdgeDetectionSharedMem2PiS_iii' function";

	Node0x5ab9c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = shl i32 %14, 1\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = shl i32 %23, 1\l  %25 = icmp sgt i32 %15, 0\l  %26 = icmp sgt i32 %24, 0\l  %27 = select i1 %25, i1 %26, i1 false\l  %28 = add nsw i32 %2, -1\l  %29 = icmp slt i32 %15, %28\l  %30 = select i1 %27, i1 %29, i1 false\l  %31 = add nsw i32 %3, -1\l  %32 = icmp slt i32 %24, %31\l  %33 = select i1 %30, i1 %32, i1 false\l  br i1 %33, label %34, label %189\l|{<s0>T|<s1>F}}"];
	Node0x5ab9c70:s0 -> Node0x5abbe00;
	Node0x5ab9c70:s1 -> Node0x5abddf0;
	Node0x5abbe00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%34:\l34:                                               \l  %35 = add nsw i32 %24, -1\l  %36 = mul nsw i32 %35, %2\l  %37 = add nsw i32 %36, %15\l  %38 = add nsw i32 %37, -1\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %42 = sext i32 %37 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %42\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %45 = add nsw i32 %37, 1\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %49 = add nsw i32 %37, 2\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %53 = mul nsw i32 %24, %2\l  %54 = add i32 %53, %15\l  %55 = add nsw i32 %54, -1\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %56\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %59 = sext i32 %54 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %62 = or i32 %54, 1\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %66 = add nsw i32 %54, 2\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %70 = add nuw nsw i32 %24, 1\l  %71 = mul nsw i32 %70, %2\l  %72 = add nsw i32 %71, %15\l  %73 = add nsw i32 %72, -1\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %74\l  %76 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %77 = sext i32 %72 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %77\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %80 = add nsw i32 %72, 1\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %84 = add nsw i32 %72, 2\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %85\l  %87 = load i32, i32 addrspace(1)* %86, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %88 = add nuw nsw i32 %24, 2\l  %89 = mul nsw i32 %88, %2\l  %90 = add nsw i32 %89, %15\l  %91 = add nsw i32 %90, -1\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %92\l  %94 = load i32, i32 addrspace(1)* %93, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %95 = sext i32 %90 to i64\l  %96 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %95\l  %97 = load i32, i32 addrspace(1)* %96, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %98 = or i32 %90, 1\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %99\l  %101 = load i32, i32 addrspace(1)* %100, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %102 = add nsw i32 %90, 2\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %103\l  %105 = load i32, i32 addrspace(1)* %104, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %106 = sub i32 %79, %44\l  %107 = shl i32 %106, 1\l  %108 = add i32 %76, %83\l  %109 = add i32 %41, %48\l  %110 = sub i32 %108, %109\l  %111 = add i32 %110, %107\l  %112 = sub i32 %58, %65\l  %113 = shl i32 %112, 1\l  %114 = add i32 %41, %76\l  %115 = add i32 %83, %48\l  %116 = sub i32 %114, %115\l  %117 = add i32 %116, %113\l  %118 = mul nsw i32 %111, %111\l  %119 = mul nsw i32 %117, %117\l  %120 = add nuw nsw i32 %119, %118\l  %121 = icmp sgt i32 %120, %4\l  %122 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %59\l  %123 = select i1 %121, i32 255, i32 0\l  store i32 %123, i32 addrspace(1)* %122, align 4, !tbaa !7\l  %124 = sub i32 %83, %48\l  %125 = shl i32 %124, 1\l  %126 = add i32 %79, %87\l  %127 = add i32 %44, %52\l  %128 = sub i32 %126, %127\l  %129 = add i32 %128, %125\l  %130 = sub i32 %61, %69\l  %131 = shl i32 %130, 1\l  %132 = add i32 %44, %79\l  %133 = add i32 %87, %52\l  %134 = sub i32 %132, %133\l  %135 = add i32 %134, %131\l  %136 = mul nsw i32 %129, %129\l  %137 = mul nsw i32 %135, %135\l  %138 = add nuw nsw i32 %137, %136\l  %139 = icmp sgt i32 %138, %4\l  %140 = select i1 %139, i32 255, i32 0\l  %141 = add nuw nsw i32 %24, 1\l  %142 = mul nsw i32 %141, %2\l  %143 = add i32 %15, %142\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %144\l  store i32 %140, i32 addrspace(1)* %145, align 4, !tbaa !7\l  %146 = add nuw nsw i32 %15, 1\l  %147 = sub i32 %97, %61\l  %148 = shl i32 %147, 1\l  %149 = add i32 %94, %101\l  %150 = add i32 %58, %65\l  %151 = sub i32 %149, %150\l  %152 = add i32 %151, %148\l  %153 = sub i32 %76, %83\l  %154 = shl i32 %153, 1\l  %155 = add i32 %58, %94\l  %156 = add i32 %101, %65\l  %157 = sub i32 %155, %156\l  %158 = add i32 %157, %154\l  %159 = mul nsw i32 %152, %152\l  %160 = mul nsw i32 %158, %158\l  %161 = add nuw nsw i32 %160, %159\l  %162 = icmp sgt i32 %161, %4\l  %163 = select i1 %162, i32 255, i32 0\l  %164 = add i32 %146, %53\l  %165 = sext i32 %164 to i64\l  %166 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %165\l  store i32 %163, i32 addrspace(1)* %166, align 4, !tbaa !7\l  %167 = sub i32 %101, %65\l  %168 = shl i32 %167, 1\l  %169 = add i32 %97, %105\l  %170 = add i32 %61, %69\l  %171 = sub i32 %169, %170\l  %172 = add i32 %171, %168\l  %173 = sub i32 %79, %87\l  %174 = shl i32 %173, 1\l  %175 = add i32 %61, %97\l  %176 = add i32 %105, %69\l  %177 = sub i32 %175, %176\l  %178 = add i32 %177, %174\l  %179 = mul nsw i32 %172, %172\l  %180 = mul nsw i32 %178, %178\l  %181 = add nuw nsw i32 %180, %179\l  %182 = icmp sgt i32 %181, %4\l  %183 = select i1 %182, i32 255, i32 0\l  %184 = add nuw nsw i32 %24, 1\l  %185 = mul nsw i32 %184, %2\l  %186 = add i32 %146, %185\l  %187 = sext i32 %186 to i64\l  %188 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %187\l  store i32 %183, i32 addrspace(1)* %188, align 4, !tbaa !7\l  br label %189\l}"];
	Node0x5abbe00 -> Node0x5abddf0;
	Node0x5abddf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%189:\l189:                                              \l  ret void\l}"];
}
