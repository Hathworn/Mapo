digraph "CFG for '_Z18kernelSumHistogramPyS_iii' function" {
	label="CFG for '_Z18kernelSumHistogramPyS_iii' function";

	Node0x64063b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !7\l  %16 = mul i32 %7, %12\l  %17 = add i32 %16, %6\l  %18 = freeze i32 %2\l  %19 = freeze i32 %4\l  %20 = sdiv i32 %18, %19\l  %21 = mul i32 %20, %19\l  %22 = sub i32 %18, %21\l  %23 = icmp ne i32 %22, 0\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %20, %24\l  %26 = icmp slt i32 %17, %3\l  br i1 %26, label %27, label %121\l|{<s0>T|<s1>F}}"];
	Node0x64063b0:s0 -> Node0x6408a10;
	Node0x64063b0:s1 -> Node0x6408aa0;
	Node0x6408a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%27:\l27:                                               \l  %28 = icmp eq i32 %25, 0\l  %29 = udiv i32 %15, %12\l  %30 = mul i32 %29, %12\l  %31 = icmp ugt i32 %15, %30\l  %32 = zext i1 %31 to i32\l  %33 = add i32 %29, %32\l  %34 = mul i32 %33, %12\l  %35 = add i32 %20, %24\l  %36 = add i32 %35, -1\l  %37 = and i32 %25, 7\l  %38 = icmp ult i32 %36, 7\l  %39 = and i32 %25, -8\l  %40 = icmp eq i32 %37, 0\l  br label %41\l}"];
	Node0x6408a10 -> Node0x64094c0;
	Node0x64094c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%41:\l41:                                               \l  %42 = phi i32 [ %17, %27 ], [ %65, %62 ]\l  %43 = sext i32 %42 to i64\l  br i1 %28, label %62, label %44\l|{<s0>T|<s1>F}}"];
	Node0x64094c0:s0 -> Node0x64095b0;
	Node0x64094c0:s1 -> Node0x6409760;
	Node0x6409760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%44:\l44:                                               \l  %45 = getelementptr i64, i64 addrspace(1)* %0, i64 %43\l  br i1 %38, label %46, label %67\l|{<s0>T|<s1>F}}"];
	Node0x6409760:s0 -> Node0x6409940;
	Node0x6409760:s1 -> Node0x6409990;
	Node0x6409940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%46:\l46:                                               \l  %47 = phi i64 [ undef, %44 ], [ %117, %67 ]\l  %48 = phi i32 [ 0, %44 ], [ %118, %67 ]\l  %49 = phi i64 [ 0, %44 ], [ %117, %67 ]\l  br i1 %40, label %62, label %50\l|{<s0>T|<s1>F}}"];
	Node0x6409940:s0 -> Node0x64095b0;
	Node0x6409940:s1 -> Node0x640a1d0;
	Node0x640a1d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i32 [ %59, %50 ], [ %48, %46 ]\l  %52 = phi i64 [ %58, %50 ], [ %49, %46 ]\l  %53 = phi i32 [ %60, %50 ], [ 0, %46 ]\l  %54 = mul nsw i32 %51, %3\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr i64, i64 addrspace(1)* %45, i64 %55\l  %57 = load i64, i64 addrspace(1)* %56, align 8, !tbaa !16\l  %58 = add i64 %57, %52\l  %59 = add nuw nsw i32 %51, 1\l  %60 = add i32 %53, 1\l  %61 = icmp eq i32 %60, %37\l  br i1 %61, label %62, label %50, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x640a1d0:s0 -> Node0x64095b0;
	Node0x640a1d0:s1 -> Node0x640a1d0;
	Node0x64095b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%62:\l62:                                               \l  %63 = phi i64 [ 0, %41 ], [ %47, %46 ], [ %58, %50 ]\l  %64 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %43\l  store i64 %63, i64 addrspace(1)* %64, align 8, !tbaa !16\l  %65 = add i32 %34, %42\l  %66 = icmp slt i32 %65, %3\l  br i1 %66, label %41, label %121, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x64095b0:s0 -> Node0x64094c0;
	Node0x64095b0:s1 -> Node0x6408aa0;
	Node0x6409990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%67:\l67:                                               \l  %68 = phi i32 [ %118, %67 ], [ 0, %44 ]\l  %69 = phi i64 [ %117, %67 ], [ 0, %44 ]\l  %70 = phi i32 [ %119, %67 ], [ 0, %44 ]\l  %71 = mul nsw i32 %68, %3\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr i64, i64 addrspace(1)* %45, i64 %72\l  %74 = load i64, i64 addrspace(1)* %73, align 8, !tbaa !16\l  %75 = add i64 %74, %69\l  %76 = or i32 %68, 1\l  %77 = mul nsw i32 %76, %3\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr i64, i64 addrspace(1)* %45, i64 %78\l  %80 = load i64, i64 addrspace(1)* %79, align 8, !tbaa !16\l  %81 = add i64 %80, %75\l  %82 = or i32 %68, 2\l  %83 = mul nsw i32 %82, %3\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr i64, i64 addrspace(1)* %45, i64 %84\l  %86 = load i64, i64 addrspace(1)* %85, align 8, !tbaa !16\l  %87 = add i64 %86, %81\l  %88 = or i32 %68, 3\l  %89 = mul nsw i32 %88, %3\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr i64, i64 addrspace(1)* %45, i64 %90\l  %92 = load i64, i64 addrspace(1)* %91, align 8, !tbaa !16\l  %93 = add i64 %92, %87\l  %94 = or i32 %68, 4\l  %95 = mul nsw i32 %94, %3\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr i64, i64 addrspace(1)* %45, i64 %96\l  %98 = load i64, i64 addrspace(1)* %97, align 8, !tbaa !16\l  %99 = add i64 %98, %93\l  %100 = or i32 %68, 5\l  %101 = mul nsw i32 %100, %3\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr i64, i64 addrspace(1)* %45, i64 %102\l  %104 = load i64, i64 addrspace(1)* %103, align 8, !tbaa !16\l  %105 = add i64 %104, %99\l  %106 = or i32 %68, 6\l  %107 = mul nsw i32 %106, %3\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr i64, i64 addrspace(1)* %45, i64 %108\l  %110 = load i64, i64 addrspace(1)* %109, align 8, !tbaa !16\l  %111 = add i64 %110, %105\l  %112 = or i32 %68, 7\l  %113 = mul nsw i32 %112, %3\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr i64, i64 addrspace(1)* %45, i64 %114\l  %116 = load i64, i64 addrspace(1)* %115, align 8, !tbaa !16\l  %117 = add i64 %116, %111\l  %118 = add nuw nsw i32 %68, 8\l  %119 = add i32 %70, 8\l  %120 = icmp eq i32 %119, %39\l  br i1 %120, label %46, label %67, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x6409990:s0 -> Node0x6409940;
	Node0x6409990:s1 -> Node0x6409990;
	Node0x6408aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%121:\l121:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
