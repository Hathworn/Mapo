digraph "CFG for '_Z13kernelCompactPfS_PjS0_ii' function" {
	label="CFG for '_Z13kernelCompactPfS_PjS0_ii' function";

	Node0x5dec4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %11\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %4\l  br i1 %16, label %17, label %118\l|{<s0>T|<s1>F}}"];
	Node0x5dec4c0:s0 -> Node0x5decda0;
	Node0x5dec4c0:s1 -> Node0x5dee490;
	Node0x5decda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%17:\l17:                                               \l  %18 = sext i32 %15 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %21 = icmp eq i32 %20, 1\l  br i1 %21, label %22, label %118\l|{<s0>T|<s1>F}}"];
	Node0x5decda0:s0 -> Node0x5deef70;
	Node0x5decda0:s1 -> Node0x5dee490;
	Node0x5deef70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%22:\l22:                                               \l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %18\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %25 = mul nsw i32 %15, %5\l  %26 = mul i32 %24, %5\l  %27 = icmp sgt i32 %5, 0\l  br i1 %27, label %28, label %118\l|{<s0>T|<s1>F}}"];
	Node0x5deef70:s0 -> Node0x5def9b0;
	Node0x5deef70:s1 -> Node0x5dee490;
	Node0x5def9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%28:\l28:                                               \l  %29 = and i32 %5, 7\l  %30 = icmp ult i32 %5, 8\l  br i1 %30, label %102, label %31\l|{<s0>T|<s1>F}}"];
	Node0x5def9b0:s0 -> Node0x5defc70;
	Node0x5def9b0:s1 -> Node0x5defcc0;
	Node0x5defcc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%31:\l31:                                               \l  %32 = and i32 %5, -8\l  br label %33\l}"];
	Node0x5defcc0 -> Node0x5dee380;
	Node0x5dee380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%33:\l33:                                               \l  %34 = phi i32 [ 0, %31 ], [ %99, %33 ]\l  %35 = phi i32 [ 0, %31 ], [ %100, %33 ]\l  %36 = add nsw i32 %34, %25\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !11\l  %40 = add i32 %34, %26\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  store float %39, float addrspace(1)* %42, align 4, !tbaa !11\l  %43 = or i32 %34, 1\l  %44 = add nsw i32 %43, %25\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !11\l  %48 = add i32 %43, %26\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  store float %47, float addrspace(1)* %50, align 4, !tbaa !11\l  %51 = or i32 %34, 2\l  %52 = add nsw i32 %51, %25\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !11\l  %56 = add i32 %51, %26\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  store float %55, float addrspace(1)* %58, align 4, !tbaa !11\l  %59 = or i32 %34, 3\l  %60 = add nsw i32 %59, %25\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !11\l  %64 = add i32 %59, %26\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %65\l  store float %63, float addrspace(1)* %66, align 4, !tbaa !11\l  %67 = or i32 %34, 4\l  %68 = add nsw i32 %67, %25\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %0, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !11\l  %72 = add i32 %67, %26\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  store float %71, float addrspace(1)* %74, align 4, !tbaa !11\l  %75 = or i32 %34, 5\l  %76 = add nsw i32 %75, %25\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !11\l  %80 = add i32 %75, %26\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %1, i64 %81\l  store float %79, float addrspace(1)* %82, align 4, !tbaa !11\l  %83 = or i32 %34, 6\l  %84 = add nsw i32 %83, %25\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !11\l  %88 = add i32 %83, %26\l  %89 = zext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %1, i64 %89\l  store float %87, float addrspace(1)* %90, align 4, !tbaa !11\l  %91 = or i32 %34, 7\l  %92 = add nsw i32 %91, %25\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %0, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !11\l  %96 = add i32 %91, %26\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %1, i64 %97\l  store float %95, float addrspace(1)* %98, align 4, !tbaa !11\l  %99 = add nuw nsw i32 %34, 8\l  %100 = add i32 %35, 8\l  %101 = icmp eq i32 %100, %32\l  br i1 %101, label %102, label %33, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5dee380:s0 -> Node0x5defc70;
	Node0x5dee380:s1 -> Node0x5dee380;
	Node0x5defc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%102:\l102:                                              \l  %103 = phi i32 [ 0, %28 ], [ %99, %33 ]\l  %104 = icmp eq i32 %29, 0\l  br i1 %104, label %118, label %105\l|{<s0>T|<s1>F}}"];
	Node0x5defc70:s0 -> Node0x5dee490;
	Node0x5defc70:s1 -> Node0x5df3760;
	Node0x5df3760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  %106 = phi i32 [ %115, %105 ], [ %103, %102 ]\l  %107 = phi i32 [ %116, %105 ], [ 0, %102 ]\l  %108 = add nsw i32 %106, %25\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %0, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !11\l  %112 = add i32 %106, %26\l  %113 = zext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %1, i64 %113\l  store float %111, float addrspace(1)* %114, align 4, !tbaa !11\l  %115 = add nuw nsw i32 %106, 1\l  %116 = add i32 %107, 1\l  %117 = icmp eq i32 %116, %29\l  br i1 %117, label %118, label %105, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5df3760:s0 -> Node0x5dee490;
	Node0x5df3760:s1 -> Node0x5df3760;
	Node0x5dee490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%118:\l118:                                              \l  ret void\l}"];
}
