digraph "CFG for '_Z6selectPii' function" {
	label="CFG for '_Z6selectPii' function";

	Node0x60c3070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%2:\l  %3 = sitofp i32 %1 to double\l  %4 = tail call double @llvm.amdgcn.frexp.mant.f64(double %3)\l  %5 = fcmp olt double %4, 0x3FE5555555555555\l  %6 = zext i1 %5 to i32\l  %7 = tail call double @llvm.amdgcn.ldexp.f64(double %4, i32 %6)\l  %8 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %3)\l  %9 = sub nsw i32 %8, %6\l  %10 = fadd double %7, -1.000000e+00\l  %11 = fadd double %7, 1.000000e+00\l  %12 = fadd double %11, -1.000000e+00\l  %13 = fsub double %7, %12\l  %14 = tail call double @llvm.amdgcn.rcp.f64(double %11)\l  %15 = fneg double %11\l  %16 = tail call double @llvm.fma.f64(double %15, double %14, double\l... 1.000000e+00)\l  %17 = tail call double @llvm.fma.f64(double %16, double %14, double %14)\l  %18 = tail call double @llvm.fma.f64(double %15, double %17, double\l... 1.000000e+00)\l  %19 = tail call double @llvm.fma.f64(double %18, double %17, double %17)\l  %20 = fmul double %10, %19\l  %21 = fmul double %11, %20\l  %22 = fneg double %21\l  %23 = tail call double @llvm.fma.f64(double %20, double %11, double %22)\l  %24 = tail call double @llvm.fma.f64(double %20, double %13, double %23)\l  %25 = fadd double %21, %24\l  %26 = fsub double %25, %21\l  %27 = fsub double %24, %26\l  %28 = fsub double %10, %25\l  %29 = fsub double %10, %28\l  %30 = fsub double %29, %25\l  %31 = fsub double %30, %27\l  %32 = fadd double %28, %31\l  %33 = fmul double %19, %32\l  %34 = fadd double %20, %33\l  %35 = fsub double %34, %20\l  %36 = fsub double %33, %35\l  %37 = fmul double %34, %34\l  %38 = tail call double @llvm.fma.f64(double %37, double 0x3FC3AB76BF559E2B,\l... double 0x3FC385386B47B09A)\l  %39 = tail call double @llvm.fma.f64(double %37, double %38, double\l... 0x3FC7474DD7F4DF2E)\l  %40 = tail call double @llvm.fma.f64(double %37, double %39, double\l... 0x3FCC71C016291751)\l  %41 = tail call double @llvm.fma.f64(double %37, double %40, double\l... 0x3FD249249B27ACF1)\l  %42 = tail call double @llvm.fma.f64(double %37, double %41, double\l... 0x3FD99999998EF7B6)\l  %43 = tail call double @llvm.fma.f64(double %37, double %42, double\l... 0x3FE5555555555780)\l  %44 = tail call double @llvm.amdgcn.ldexp.f64(double %34, i32 1)\l  %45 = tail call double @llvm.amdgcn.ldexp.f64(double %36, i32 1)\l  %46 = fmul double %34, %37\l  %47 = fmul double %46, %43\l  %48 = fadd double %44, %47\l  %49 = fsub double %48, %44\l  %50 = fsub double %47, %49\l  %51 = fadd double %45, %50\l  %52 = fadd double %48, %51\l  %53 = fsub double %52, %48\l  %54 = fsub double %51, %53\l  %55 = sitofp i32 %9 to double\l  %56 = fmul double %52, 0x3FF71547652B82FE\l  %57 = fneg double %56\l  %58 = tail call double @llvm.fma.f64(double %52, double 0x3FF71547652B82FE,\l... double %57)\l  %59 = tail call double @llvm.fma.f64(double %54, double 0x3FF71547652B82FE,\l... double %58)\l  %60 = tail call double @llvm.fma.f64(double %52, double 0x3C7777D0FFDA0D24,\l... double %59)\l  %61 = fadd double %56, %60\l  %62 = fsub double %61, %56\l  %63 = fsub double %60, %62\l  %64 = fadd double %61, %55\l  %65 = fsub double %64, %55\l  %66 = fsub double %65, %64\l  %67 = fadd double %66, %55\l  %68 = fsub double %61, %65\l  %69 = fadd double %68, %67\l  %70 = fadd double %63, %69\l  %71 = fadd double %64, %70\l  %72 = tail call double @llvm.fabs.f64(double %3) #3\l  %73 = fcmp oeq double %72, 0x7FF0000000000000\l  %74 = select i1 %73, double %3, double %71\l  %75 = icmp slt i32 %1, 0\l  %76 = select i1 %75, double 0x7FF8000000000000, double %74\l  %77 = icmp eq i32 %1, 0\l  %78 = select i1 %77, double 0xFFF0000000000000, double %76\l  %79 = tail call double @llvm.ceil.f64(double %78)\l  %80 = fptosi double %79 to i32\l  %81 = icmp sgt i32 %80, 0\l  br i1 %81, label %82, label %167\l|{<s0>T|<s1>F}}"];
	Node0x60c3070:s0 -> Node0x60c83f0;
	Node0x60c3070:s1 -> Node0x60c8480;
	Node0x60c83f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%82:\l82:                                               \l  %83 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %84 = getelementptr i8, i8 addrspace(4)* %83, i64 4\l  %85 = bitcast i8 addrspace(4)* %84 to i16 addrspace(4)*\l  %86 = load i16, i16 addrspace(4)* %85, align 4, !range !4, !invariant.load !5\l  %87 = zext i16 %86 to i32\l  %88 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %89 = mul i32 %88, %87\l  %90 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %91 = add i32 %89, %90\l  %92 = shl nsw i32 %91, 1\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %93\l  %95 = add nuw nsw i32 %92, 1\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %96\l  %98 = sext i32 %91 to i64\l  %99 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %98\l  %100 = and i32 %80, 3\l  %101 = icmp ult i32 %80, 4\l  br i1 %101, label %149, label %102\l|{<s0>T|<s1>F}}"];
	Node0x60c83f0:s0 -> Node0x60ca350;
	Node0x60c83f0:s1 -> Node0x60ca3e0;
	Node0x60ca3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%102:\l102:                                              \l  %103 = and i32 %80, -4\l  br label %104\l}"];
	Node0x60ca3e0 -> Node0x60ca5e0;
	Node0x60ca5e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%104:\l104:                                              \l  %105 = phi i32 [ %1, %102 ], [ %140, %146 ]\l  %106 = phi i32 [ 0, %102 ], [ %147, %146 ]\l  %107 = sitofp i32 %105 to double\l  %108 = fmul contract double %107, 5.000000e-01\l  %109 = tail call double @llvm.ceil.f64(double %108)\l  %110 = fptosi double %109 to i32\l  %111 = icmp slt i32 %91, %110\l  br i1 %111, label %112, label %116\l|{<s0>T|<s1>F}}"];
	Node0x60ca5e0:s0 -> Node0x60cac90;
	Node0x60ca5e0:s1 -> Node0x60cad20;
	Node0x60cac90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%112:\l112:                                              \l  %113 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !7\l  %114 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !7\l  %115 = tail call i32 @llvm.smax.i32(i32 %113, i32 %114)\l  store i32 %115, i32 addrspace(1)* %99, align 4, !tbaa !7\l  br label %116\l}"];
	Node0x60cac90 -> Node0x60cad20;
	Node0x60cad20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%116:\l116:                                              \l  %117 = sitofp i32 %110 to double\l  %118 = fmul contract double %117, 5.000000e-01\l  %119 = tail call double @llvm.ceil.f64(double %118)\l  %120 = fptosi double %119 to i32\l  %121 = icmp slt i32 %91, %120\l  br i1 %121, label %122, label %126\l|{<s0>T|<s1>F}}"];
	Node0x60cad20:s0 -> Node0x60cbc80;
	Node0x60cad20:s1 -> Node0x60cbcd0;
	Node0x60cbc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%122:\l122:                                              \l  %123 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !7\l  %124 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !7\l  %125 = tail call i32 @llvm.smax.i32(i32 %123, i32 %124)\l  store i32 %125, i32 addrspace(1)* %99, align 4, !tbaa !7\l  br label %126\l}"];
	Node0x60cbc80 -> Node0x60cbcd0;
	Node0x60cbcd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%126:\l126:                                              \l  %127 = sitofp i32 %120 to double\l  %128 = fmul contract double %127, 5.000000e-01\l  %129 = tail call double @llvm.ceil.f64(double %128)\l  %130 = fptosi double %129 to i32\l  %131 = icmp slt i32 %91, %130\l  br i1 %131, label %132, label %136\l|{<s0>T|<s1>F}}"];
	Node0x60cbcd0:s0 -> Node0x60c76a0;
	Node0x60cbcd0:s1 -> Node0x60c76f0;
	Node0x60c76a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%132:\l132:                                              \l  %133 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !7\l  %134 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !7\l  %135 = tail call i32 @llvm.smax.i32(i32 %133, i32 %134)\l  store i32 %135, i32 addrspace(1)* %99, align 4, !tbaa !7\l  br label %136\l}"];
	Node0x60c76a0 -> Node0x60c76f0;
	Node0x60c76f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%136:\l136:                                              \l  %137 = sitofp i32 %130 to double\l  %138 = fmul contract double %137, 5.000000e-01\l  %139 = tail call double @llvm.ceil.f64(double %138)\l  %140 = fptosi double %139 to i32\l  %141 = icmp slt i32 %91, %140\l  br i1 %141, label %142, label %146\l|{<s0>T|<s1>F}}"];
	Node0x60c76f0:s0 -> Node0x60ccf30;
	Node0x60c76f0:s1 -> Node0x60ca6d0;
	Node0x60ccf30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%142:\l142:                                              \l  %143 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !7\l  %144 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !7\l  %145 = tail call i32 @llvm.smax.i32(i32 %143, i32 %144)\l  store i32 %145, i32 addrspace(1)* %99, align 4, !tbaa !7\l  br label %146\l}"];
	Node0x60ccf30 -> Node0x60ca6d0;
	Node0x60ca6d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%146:\l146:                                              \l  %147 = add i32 %106, 4\l  %148 = icmp eq i32 %147, %103\l  br i1 %148, label %149, label %104, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x60ca6d0:s0 -> Node0x60ca350;
	Node0x60ca6d0:s1 -> Node0x60ca5e0;
	Node0x60ca350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%149:\l149:                                              \l  %150 = phi i32 [ %1, %82 ], [ %140, %146 ]\l  %151 = icmp eq i32 %100, 0\l  br i1 %151, label %167, label %152\l|{<s0>T|<s1>F}}"];
	Node0x60ca350:s0 -> Node0x60c8480;
	Node0x60ca350:s1 -> Node0x60cd6b0;
	Node0x60cd6b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%152:\l152:                                              \l  %153 = phi i32 [ %158, %164 ], [ %150, %149 ]\l  %154 = phi i32 [ %165, %164 ], [ 0, %149 ]\l  %155 = sitofp i32 %153 to double\l  %156 = fmul contract double %155, 5.000000e-01\l  %157 = tail call double @llvm.ceil.f64(double %156)\l  %158 = fptosi double %157 to i32\l  %159 = icmp slt i32 %91, %158\l  br i1 %159, label %160, label %164\l|{<s0>T|<s1>F}}"];
	Node0x60cd6b0:s0 -> Node0x60cdc50;
	Node0x60cd6b0:s1 -> Node0x60cd7b0;
	Node0x60cdc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%160:\l160:                                              \l  %161 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !7\l  %162 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !7\l  %163 = tail call i32 @llvm.smax.i32(i32 %161, i32 %162)\l  store i32 %163, i32 addrspace(1)* %99, align 4, !tbaa !7\l  br label %164\l}"];
	Node0x60cdc50 -> Node0x60cd7b0;
	Node0x60cd7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%164:\l164:                                              \l  %165 = add i32 %154, 1\l  %166 = icmp eq i32 %165, %100\l  br i1 %166, label %167, label %152, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x60cd7b0:s0 -> Node0x60c8480;
	Node0x60cd7b0:s1 -> Node0x60cd6b0;
	Node0x60c8480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%167:\l167:                                              \l  %168 = load i32, i32 addrspace(1)* %0, align 4, !tbaa !7\l  store i32 %168, i32 addrspace(1)* @largest, align 4, !tbaa !7\l  ret void\l}"];
}
