digraph "CFG for '_Z3addPiii' function" {
	label="CFG for '_Z3addPiii' function";

	Node0x6266c10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %39\l|{<s0>T|<s1>F}}"];
	Node0x6266c10:s0 -> Node0x62679b0;
	Node0x6266c10:s1 -> Node0x6268bb0;
	Node0x62679b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %15\l  %17 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %18 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @temp, i32\l... 0, i32 %4\l  store i32 %17, i32 addrspace(3)* %18, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %19 = icmp ult i32 %4, %1\l  br i1 %19, label %24, label %20\l|{<s0>T|<s1>F}}"];
	Node0x62679b0:s0 -> Node0x626a180;
	Node0x62679b0:s1 -> Node0x626a210;
	Node0x626a210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%20:\l20:                                               \l  %21 = sub nsw i32 %4, %1\l  %22 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @temp, i32\l... 0, i32 %21\l  %23 = load i32, i32 addrspace(3)* %22, align 4, !tbaa !7\l  br label %31\l}"];
	Node0x626a210 -> Node0x626a510;
	Node0x626a180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%24:\l24:                                               \l  %25 = icmp slt i32 %12, %1\l  br i1 %25, label %37, label %26\l|{<s0>T|<s1>F}}"];
	Node0x626a180:s0 -> Node0x626a660;
	Node0x626a180:s1 -> Node0x626a6b0;
	Node0x626a6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%26:\l26:                                               \l  %27 = sub nsw i32 %12, %1\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %28\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  br label %31\l}"];
	Node0x626a6b0 -> Node0x626a510;
	Node0x626a510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%31:\l31:                                               \l  %32 = phi i32 [ %30, %26 ], [ %23, %20 ]\l  %33 = zext i32 %4 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7\l  %36 = add nsw i32 %35, %32\l  store i32 %36, i32 addrspace(1)* %34, align 4, !tbaa !7\l  br label %37\l}"];
	Node0x626a510 -> Node0x626a660;
	Node0x626a660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%37:\l37:                                               \l  %38 = load i32, i32 addrspace(3)* %18, align 4, !tbaa !7\l  store i32 %38, i32 addrspace(1)* %16, align 4, !tbaa !7\l  br label %39\l}"];
	Node0x626a660 -> Node0x6268bb0;
	Node0x6268bb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  ret void\l}"];
}
