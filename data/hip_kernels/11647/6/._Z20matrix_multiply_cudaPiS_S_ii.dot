digraph "CFG for '_Z20matrix_multiply_cudaPiS_S_ii' function" {
	label="CFG for '_Z20matrix_multiply_cudaPiS_S_ii' function";

	Node0x52dda40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 2, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %22 = add i32 %20, %21\l  %23 = icmp sgt i32 %4, 0\l  br i1 %23, label %24, label %53\l|{<s0>T|<s1>F}}"];
	Node0x52dda40:s0 -> Node0x52e13b0;
	Node0x52dda40:s1 -> Node0x52e1440;
	Node0x52e13b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%24:\l24:                                               \l  %25 = mul nsw i32 %14, %4\l  %26 = and i32 %4, 7\l  %27 = icmp ult i32 %4, 8\l  br i1 %27, label %30, label %28\l|{<s0>T|<s1>F}}"];
	Node0x52e13b0:s0 -> Node0x52e1790;
	Node0x52e13b0:s1 -> Node0x52e17e0;
	Node0x52e17e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%28:\l28:                                               \l  %29 = and i32 %4, -8\l  br label %59\l}"];
	Node0x52e17e0 -> Node0x52e19e0;
	Node0x52e1790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%30:\l30:                                               \l  %31 = phi i32 [ undef, %24 ], [ %157, %59 ]\l  %32 = phi i32 [ 0, %24 ], [ %158, %59 ]\l  %33 = phi i32 [ 0, %24 ], [ %157, %59 ]\l  %34 = icmp eq i32 %26, 0\l  br i1 %34, label %53, label %35\l|{<s0>T|<s1>F}}"];
	Node0x52e1790:s0 -> Node0x52e1440;
	Node0x52e1790:s1 -> Node0x52dfbe0;
	Node0x52dfbe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i32 [ %50, %35 ], [ %32, %30 ]\l  %37 = phi i32 [ %49, %35 ], [ %33, %30 ]\l  %38 = phi i32 [ %51, %35 ], [ 0, %30 ]\l  %39 = add nsw i32 %36, %25\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %40\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %43 = mul nsw i32 %36, %3\l  %44 = add nsw i32 %43, %22\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %45\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %48 = mul nsw i32 %47, %42\l  %49 = add nsw i32 %48, %37\l  %50 = add nuw nsw i32 %36, 1\l  %51 = add i32 %38, 1\l  %52 = icmp eq i32 %51, %26\l  br i1 %52, label %53, label %35, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x52dfbe0:s0 -> Node0x52e1440;
	Node0x52dfbe0:s1 -> Node0x52dfbe0;
	Node0x52e1440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%53:\l53:                                               \l  %54 = phi i32 [ 0, %5 ], [ %31, %30 ], [ %49, %35 ]\l  %55 = mul nsw i32 %14, %3\l  %56 = add nsw i32 %55, %22\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %57\l  store i32 %54, i32 addrspace(1)* %58, align 4, !tbaa !7\l  ret void\l}"];
	Node0x52e19e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%59:\l59:                                               \l  %60 = phi i32 [ 0, %28 ], [ %158, %59 ]\l  %61 = phi i32 [ 0, %28 ], [ %157, %59 ]\l  %62 = phi i32 [ 0, %28 ], [ %159, %59 ]\l  %63 = add nsw i32 %60, %25\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %64\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %67 = mul nsw i32 %60, %3\l  %68 = add nsw i32 %67, %22\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %69\l  %71 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %72 = mul nsw i32 %71, %66\l  %73 = add nsw i32 %72, %61\l  %74 = or i32 %60, 1\l  %75 = add nsw i32 %74, %25\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %76\l  %78 = load i32, i32 addrspace(1)* %77, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %79 = mul nsw i32 %74, %3\l  %80 = add nsw i32 %79, %22\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %84 = mul nsw i32 %83, %78\l  %85 = add nsw i32 %84, %73\l  %86 = or i32 %60, 2\l  %87 = add nsw i32 %86, %25\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %88\l  %90 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %91 = mul nsw i32 %86, %3\l  %92 = add nsw i32 %91, %22\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %93\l  %95 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %96 = mul nsw i32 %95, %90\l  %97 = add nsw i32 %96, %85\l  %98 = or i32 %60, 3\l  %99 = add nsw i32 %98, %25\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %100\l  %102 = load i32, i32 addrspace(1)* %101, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %103 = mul nsw i32 %98, %3\l  %104 = add nsw i32 %103, %22\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %105\l  %107 = load i32, i32 addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %108 = mul nsw i32 %107, %102\l  %109 = add nsw i32 %108, %97\l  %110 = or i32 %60, 4\l  %111 = add nsw i32 %110, %25\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %112\l  %114 = load i32, i32 addrspace(1)* %113, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %115 = mul nsw i32 %110, %3\l  %116 = add nsw i32 %115, %22\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %117\l  %119 = load i32, i32 addrspace(1)* %118, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %120 = mul nsw i32 %119, %114\l  %121 = add nsw i32 %120, %109\l  %122 = or i32 %60, 5\l  %123 = add nsw i32 %122, %25\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %124\l  %126 = load i32, i32 addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %127 = mul nsw i32 %122, %3\l  %128 = add nsw i32 %127, %22\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %129\l  %131 = load i32, i32 addrspace(1)* %130, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %132 = mul nsw i32 %131, %126\l  %133 = add nsw i32 %132, %121\l  %134 = or i32 %60, 6\l  %135 = add nsw i32 %134, %25\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %136\l  %138 = load i32, i32 addrspace(1)* %137, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %139 = mul nsw i32 %134, %3\l  %140 = add nsw i32 %139, %22\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %141\l  %143 = load i32, i32 addrspace(1)* %142, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %144 = mul nsw i32 %143, %138\l  %145 = add nsw i32 %144, %133\l  %146 = or i32 %60, 7\l  %147 = add nsw i32 %146, %25\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %148\l  %150 = load i32, i32 addrspace(1)* %149, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %151 = mul nsw i32 %146, %3\l  %152 = add nsw i32 %151, %22\l  %153 = sext i32 %152 to i64\l  %154 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %153\l  %155 = load i32, i32 addrspace(1)* %154, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %156 = mul nsw i32 %155, %150\l  %157 = add nsw i32 %156, %145\l  %158 = add nuw nsw i32 %60, 8\l  %159 = add i32 %62, 8\l  %160 = icmp eq i32 %159, %29\l  br i1 %160, label %30, label %59, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x52e19e0:s0 -> Node0x52e1790;
	Node0x52e19e0:s1 -> Node0x52e19e0;
}
