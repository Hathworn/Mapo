digraph "CFG for '_Z24ForwardEliminationColumnPdPiS0_S0_S0_' function" {
	label="CFG for '_Z24ForwardEliminationColumnPdPiS0_S0_S0_' function";

	Node0x612c830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%5:\l  %6 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4, !amdgpu.noclobber !8\l  %7 = load i32, i32 addrspace(1)* %2, align 4, !tbaa !4, !amdgpu.noclobber !8\l  %8 = load i32, i32 addrspace(1)* %3, align 4, !tbaa !4, !amdgpu.noclobber !8\l  %9 = load i32, i32 addrspace(1)* %4, align 4, !tbaa !4, !amdgpu.noclobber !8\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !9, !invariant.load !8\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !10\l  %18 = add i32 %16, %17\l  %19 = mul i32 %18, %8\l  %20 = add nsw i32 %6, 1\l  %21 = mul nsw i32 %9, %20\l  %22 = add nsw i32 %21, %9\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds double, double addrspace(1)* %0, i64 %23\l  %25 = load double, double addrspace(1)* %24, align 8, !tbaa !11,\l... !amdgpu.noclobber !8\l  %26 = mul nsw i32 %7, %20\l  %27 = add nsw i32 %9, %26\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds double, double addrspace(1)* %0, i64 %28\l  %30 = load double, double addrspace(1)* %29, align 8, !tbaa !11,\l... !amdgpu.noclobber !8\l  %31 = fdiv contract double %30, %25\l  %32 = icmp sgt i32 %8, 0\l  br i1 %32, label %34, label %33\l|{<s0>T|<s1>F}}"];
	Node0x612c830:s0 -> Node0x612f2f0;
	Node0x612c830:s1 -> Node0x612f380;
	Node0x612f380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%33:\l33:                                               \l  ret void\l}"];
	Node0x612f2f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i32 [ %50, %49 ], [ 0, %5 ]\l  %36 = add i32 %35, %19\l  %37 = icmp sgt i32 %36, %6\l  br i1 %37, label %49, label %38\l|{<s0>T|<s1>F}}"];
	Node0x612f2f0:s0 -> Node0x6130a70;
	Node0x612f2f0:s1 -> Node0x6130c90;
	Node0x6130c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%38:\l38:                                               \l  %39 = add i32 %36, %21\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds double, double addrspace(1)* %0, i64 %40\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !11\l  %43 = fmul contract double %31, %42\l  %44 = add i32 %36, %26\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds double, double addrspace(1)* %0, i64 %45\l  %47 = load double, double addrspace(1)* %46, align 8, !tbaa !11\l  %48 = fsub contract double %47, %43\l  store double %48, double addrspace(1)* %46, align 8, !tbaa !11\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %49\l}"];
	Node0x6130c90 -> Node0x6130a70;
	Node0x6130a70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = add nuw nsw i32 %35, 1\l  %51 = icmp eq i32 %50, %8\l  br i1 %51, label %33, label %34, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x6130a70:s0 -> Node0x612f380;
	Node0x6130a70:s1 -> Node0x612f2f0;
}
