digraph "CFG for '_Z13dev_normalizePfS_id' function" {
	label="CFG for '_Z13dev_normalizePfS_id' function";

	Node0x5137650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = shl i32 %13, 8\l  %15 = ashr exact i32 %14, 8\l  %16 = mul nsw i32 %15, %9\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %18 = add i32 %16, %17\l  %19 = udiv i32 %12, %9\l  %20 = mul i32 %19, %9\l  %21 = icmp ugt i32 %12, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = shl i32 %23, 8\l  %25 = ashr exact i32 %24, 8\l  %26 = mul nsw i32 %25, %9\l  %27 = icmp slt i32 %18, %2\l  br i1 %27, label %28, label %88\l|{<s0>T|<s1>F}}"];
	Node0x5137650:s0 -> Node0x5139ed0;
	Node0x5137650:s1 -> Node0x5139f60;
	Node0x5139ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%28:\l28:                                               \l  %29 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %30 = mul i32 %29, %2\l  %31 = mul i32 %29, 28\l  %32 = fmul contract double %3, %3\l  %33 = mul i32 %31, %2\l  %34 = or i32 %31, 1\l  %35 = mul i32 %34, %2\l  %36 = or i32 %31, 2\l  %37 = mul i32 %36, %2\l  %38 = or i32 %31, 3\l  %39 = mul i32 %38, %2\l  %40 = add i32 %31, 4\l  %41 = mul i32 %40, %2\l  %42 = add i32 %31, 5\l  %43 = mul i32 %42, %2\l  %44 = add i32 %31, 6\l  %45 = mul i32 %44, %2\l  %46 = add i32 %31, 7\l  %47 = mul i32 %46, %2\l  %48 = add i32 %31, 8\l  %49 = mul i32 %48, %2\l  %50 = add i32 %31, 9\l  %51 = mul i32 %50, %2\l  %52 = add i32 %31, 10\l  %53 = mul i32 %52, %2\l  %54 = add i32 %31, 11\l  %55 = mul i32 %54, %2\l  %56 = add i32 %31, 12\l  %57 = mul i32 %56, %2\l  %58 = add i32 %31, 13\l  %59 = mul i32 %58, %2\l  %60 = add i32 %31, 14\l  %61 = mul i32 %60, %2\l  %62 = add i32 %31, 15\l  %63 = mul i32 %62, %2\l  %64 = add i32 %31, 16\l  %65 = mul i32 %64, %2\l  %66 = add i32 %31, 17\l  %67 = mul i32 %66, %2\l  %68 = add i32 %31, 18\l  %69 = mul i32 %68, %2\l  %70 = add i32 %31, 19\l  %71 = mul i32 %70, %2\l  %72 = add i32 %31, 20\l  %73 = mul i32 %72, %2\l  %74 = add i32 %31, 21\l  %75 = mul i32 %74, %2\l  %76 = add i32 %31, 22\l  %77 = mul i32 %76, %2\l  %78 = add i32 %31, 23\l  %79 = mul i32 %78, %2\l  %80 = add i32 %31, 24\l  %81 = mul i32 %80, %2\l  %82 = add i32 %31, 25\l  %83 = mul i32 %82, %2\l  %84 = add i32 %31, 26\l  %85 = mul i32 %84, %2\l  %86 = add i32 %31, 27\l  %87 = mul i32 %86, %2\l  br label %89\l}"];
	Node0x5139ed0 -> Node0x513cae0;
	Node0x5139f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%88:\l88:                                               \l  ret void\l}"];
	Node0x513cae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%89:\l89:                                               \l  %90 = phi i32 [ %18, %28 ], [ %293, %89 ]\l  %91 = add i32 %90, %30\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %1, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !16\l  %95 = fpext float %94 to double\l  %96 = fadd contract double %32, %95\l  %97 = add i32 %33, %90\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !16\l  %101 = fpext float %100 to double\l  %102 = fdiv contract double %101, %96\l  %103 = fptrunc double %102 to float\l  store float %103, float addrspace(1)* %99, align 4, !tbaa !16\l  %104 = add i32 %35, %90\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %0, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !16\l  %108 = fpext float %107 to double\l  %109 = fdiv contract double %108, %96\l  %110 = fptrunc double %109 to float\l  store float %110, float addrspace(1)* %106, align 4, !tbaa !16\l  %111 = add i32 %37, %90\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %0, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !16\l  %115 = fpext float %114 to double\l  %116 = fdiv contract double %115, %96\l  %117 = fptrunc double %116 to float\l  store float %117, float addrspace(1)* %113, align 4, !tbaa !16\l  %118 = add i32 %39, %90\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %0, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !16\l  %122 = fpext float %121 to double\l  %123 = fdiv contract double %122, %96\l  %124 = fptrunc double %123 to float\l  store float %124, float addrspace(1)* %120, align 4, !tbaa !16\l  %125 = add i32 %41, %90\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %0, i64 %126\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !16\l  %129 = fpext float %128 to double\l  %130 = fdiv contract double %129, %96\l  %131 = fptrunc double %130 to float\l  store float %131, float addrspace(1)* %127, align 4, !tbaa !16\l  %132 = add i32 %43, %90\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %0, i64 %133\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !16\l  %136 = fpext float %135 to double\l  %137 = fdiv contract double %136, %96\l  %138 = fptrunc double %137 to float\l  store float %138, float addrspace(1)* %134, align 4, !tbaa !16\l  %139 = add i32 %45, %90\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %0, i64 %140\l  %142 = load float, float addrspace(1)* %141, align 4, !tbaa !16\l  %143 = fpext float %142 to double\l  %144 = fdiv contract double %143, %96\l  %145 = fptrunc double %144 to float\l  store float %145, float addrspace(1)* %141, align 4, !tbaa !16\l  %146 = add i32 %47, %90\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds float, float addrspace(1)* %0, i64 %147\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !16\l  %150 = fpext float %149 to double\l  %151 = fdiv contract double %150, %96\l  %152 = fptrunc double %151 to float\l  store float %152, float addrspace(1)* %148, align 4, !tbaa !16\l  %153 = add i32 %49, %90\l  %154 = sext i32 %153 to i64\l  %155 = getelementptr inbounds float, float addrspace(1)* %0, i64 %154\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !16\l  %157 = fpext float %156 to double\l  %158 = fdiv contract double %157, %96\l  %159 = fptrunc double %158 to float\l  store float %159, float addrspace(1)* %155, align 4, !tbaa !16\l  %160 = add i32 %51, %90\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds float, float addrspace(1)* %0, i64 %161\l  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !16\l  %164 = fpext float %163 to double\l  %165 = fdiv contract double %164, %96\l  %166 = fptrunc double %165 to float\l  store float %166, float addrspace(1)* %162, align 4, !tbaa !16\l  %167 = add i32 %53, %90\l  %168 = sext i32 %167 to i64\l  %169 = getelementptr inbounds float, float addrspace(1)* %0, i64 %168\l  %170 = load float, float addrspace(1)* %169, align 4, !tbaa !16\l  %171 = fpext float %170 to double\l  %172 = fdiv contract double %171, %96\l  %173 = fptrunc double %172 to float\l  store float %173, float addrspace(1)* %169, align 4, !tbaa !16\l  %174 = add i32 %55, %90\l  %175 = sext i32 %174 to i64\l  %176 = getelementptr inbounds float, float addrspace(1)* %0, i64 %175\l  %177 = load float, float addrspace(1)* %176, align 4, !tbaa !16\l  %178 = fpext float %177 to double\l  %179 = fdiv contract double %178, %96\l  %180 = fptrunc double %179 to float\l  store float %180, float addrspace(1)* %176, align 4, !tbaa !16\l  %181 = add i32 %57, %90\l  %182 = sext i32 %181 to i64\l  %183 = getelementptr inbounds float, float addrspace(1)* %0, i64 %182\l  %184 = load float, float addrspace(1)* %183, align 4, !tbaa !16\l  %185 = fpext float %184 to double\l  %186 = fdiv contract double %185, %96\l  %187 = fptrunc double %186 to float\l  store float %187, float addrspace(1)* %183, align 4, !tbaa !16\l  %188 = add i32 %59, %90\l  %189 = sext i32 %188 to i64\l  %190 = getelementptr inbounds float, float addrspace(1)* %0, i64 %189\l  %191 = load float, float addrspace(1)* %190, align 4, !tbaa !16\l  %192 = fpext float %191 to double\l  %193 = fdiv contract double %192, %96\l  %194 = fptrunc double %193 to float\l  store float %194, float addrspace(1)* %190, align 4, !tbaa !16\l  %195 = add i32 %61, %90\l  %196 = sext i32 %195 to i64\l  %197 = getelementptr inbounds float, float addrspace(1)* %0, i64 %196\l  %198 = load float, float addrspace(1)* %197, align 4, !tbaa !16\l  %199 = fpext float %198 to double\l  %200 = fdiv contract double %199, %96\l  %201 = fptrunc double %200 to float\l  store float %201, float addrspace(1)* %197, align 4, !tbaa !16\l  %202 = add i32 %63, %90\l  %203 = sext i32 %202 to i64\l  %204 = getelementptr inbounds float, float addrspace(1)* %0, i64 %203\l  %205 = load float, float addrspace(1)* %204, align 4, !tbaa !16\l  %206 = fpext float %205 to double\l  %207 = fdiv contract double %206, %96\l  %208 = fptrunc double %207 to float\l  store float %208, float addrspace(1)* %204, align 4, !tbaa !16\l  %209 = add i32 %65, %90\l  %210 = sext i32 %209 to i64\l  %211 = getelementptr inbounds float, float addrspace(1)* %0, i64 %210\l  %212 = load float, float addrspace(1)* %211, align 4, !tbaa !16\l  %213 = fpext float %212 to double\l  %214 = fdiv contract double %213, %96\l  %215 = fptrunc double %214 to float\l  store float %215, float addrspace(1)* %211, align 4, !tbaa !16\l  %216 = add i32 %67, %90\l  %217 = sext i32 %216 to i64\l  %218 = getelementptr inbounds float, float addrspace(1)* %0, i64 %217\l  %219 = load float, float addrspace(1)* %218, align 4, !tbaa !16\l  %220 = fpext float %219 to double\l  %221 = fdiv contract double %220, %96\l  %222 = fptrunc double %221 to float\l  store float %222, float addrspace(1)* %218, align 4, !tbaa !16\l  %223 = add i32 %69, %90\l  %224 = sext i32 %223 to i64\l  %225 = getelementptr inbounds float, float addrspace(1)* %0, i64 %224\l  %226 = load float, float addrspace(1)* %225, align 4, !tbaa !16\l  %227 = fpext float %226 to double\l  %228 = fdiv contract double %227, %96\l  %229 = fptrunc double %228 to float\l  store float %229, float addrspace(1)* %225, align 4, !tbaa !16\l  %230 = add i32 %71, %90\l  %231 = sext i32 %230 to i64\l  %232 = getelementptr inbounds float, float addrspace(1)* %0, i64 %231\l  %233 = load float, float addrspace(1)* %232, align 4, !tbaa !16\l  %234 = fpext float %233 to double\l  %235 = fdiv contract double %234, %96\l  %236 = fptrunc double %235 to float\l  store float %236, float addrspace(1)* %232, align 4, !tbaa !16\l  %237 = add i32 %73, %90\l  %238 = sext i32 %237 to i64\l  %239 = getelementptr inbounds float, float addrspace(1)* %0, i64 %238\l  %240 = load float, float addrspace(1)* %239, align 4, !tbaa !16\l  %241 = fpext float %240 to double\l  %242 = fdiv contract double %241, %96\l  %243 = fptrunc double %242 to float\l  store float %243, float addrspace(1)* %239, align 4, !tbaa !16\l  %244 = add i32 %75, %90\l  %245 = sext i32 %244 to i64\l  %246 = getelementptr inbounds float, float addrspace(1)* %0, i64 %245\l  %247 = load float, float addrspace(1)* %246, align 4, !tbaa !16\l  %248 = fpext float %247 to double\l  %249 = fdiv contract double %248, %96\l  %250 = fptrunc double %249 to float\l  store float %250, float addrspace(1)* %246, align 4, !tbaa !16\l  %251 = add i32 %77, %90\l  %252 = sext i32 %251 to i64\l  %253 = getelementptr inbounds float, float addrspace(1)* %0, i64 %252\l  %254 = load float, float addrspace(1)* %253, align 4, !tbaa !16\l  %255 = fpext float %254 to double\l  %256 = fdiv contract double %255, %96\l  %257 = fptrunc double %256 to float\l  store float %257, float addrspace(1)* %253, align 4, !tbaa !16\l  %258 = add i32 %79, %90\l  %259 = sext i32 %258 to i64\l  %260 = getelementptr inbounds float, float addrspace(1)* %0, i64 %259\l  %261 = load float, float addrspace(1)* %260, align 4, !tbaa !16\l  %262 = fpext float %261 to double\l  %263 = fdiv contract double %262, %96\l  %264 = fptrunc double %263 to float\l  store float %264, float addrspace(1)* %260, align 4, !tbaa !16\l  %265 = add i32 %81, %90\l  %266 = sext i32 %265 to i64\l  %267 = getelementptr inbounds float, float addrspace(1)* %0, i64 %266\l  %268 = load float, float addrspace(1)* %267, align 4, !tbaa !16\l  %269 = fpext float %268 to double\l  %270 = fdiv contract double %269, %96\l  %271 = fptrunc double %270 to float\l  store float %271, float addrspace(1)* %267, align 4, !tbaa !16\l  %272 = add i32 %83, %90\l  %273 = sext i32 %272 to i64\l  %274 = getelementptr inbounds float, float addrspace(1)* %0, i64 %273\l  %275 = load float, float addrspace(1)* %274, align 4, !tbaa !16\l  %276 = fpext float %275 to double\l  %277 = fdiv contract double %276, %96\l  %278 = fptrunc double %277 to float\l  store float %278, float addrspace(1)* %274, align 4, !tbaa !16\l  %279 = add i32 %85, %90\l  %280 = sext i32 %279 to i64\l  %281 = getelementptr inbounds float, float addrspace(1)* %0, i64 %280\l  %282 = load float, float addrspace(1)* %281, align 4, !tbaa !16\l  %283 = fpext float %282 to double\l  %284 = fdiv contract double %283, %96\l  %285 = fptrunc double %284 to float\l  store float %285, float addrspace(1)* %281, align 4, !tbaa !16\l  %286 = add i32 %87, %90\l  %287 = sext i32 %286 to i64\l  %288 = getelementptr inbounds float, float addrspace(1)* %0, i64 %287\l  %289 = load float, float addrspace(1)* %288, align 4, !tbaa !16\l  %290 = fpext float %289 to double\l  %291 = fdiv contract double %290, %96\l  %292 = fptrunc double %291 to float\l  store float %292, float addrspace(1)* %288, align 4, !tbaa !16\l  %293 = add nsw i32 %90, %26\l  %294 = icmp slt i32 %293, %2\l  br i1 %294, label %89, label %88, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x513cae0:s0 -> Node0x513cae0;
	Node0x513cae0:s1 -> Node0x5139f60;
}
