digraph "CFG for '_Z9dev_convnPfS_iiiiiPKfi' function" {
	label="CFG for '_Z9dev_convnPfS_iiiiiPKfi' function";

	Node0x49ed5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%9:\l  %10 = add nsw i32 %8, -1\l  %11 = sub i32 32, %8\l  %12 = sdiv i32 %10, 2\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = udiv i32 %13, %6\l  %15 = mul nsw i32 %14, %6\l  %16 = sub i32 %13, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = shl i32 %17, 4\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %20 = add i32 %18, %19\l  %21 = mul nsw i32 %14, %11\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %23 = add i32 %21, %22\l  %24 = sub i32 %23, %12\l  %25 = mul nsw i32 %24, %4\l  %26 = mul nsw i32 %16, %5\l  %27 = add i32 %26, %20\l  %28 = add i32 %27, %25\l  %29 = mul nuw nsw i32 %19, 31\l  %30 = add nuw nsw i32 %29, %22\l  %31 = icmp sgt i32 %24, -1\l  %32 = icmp slt i32 %24, %3\l  %33 = select i1 %31, i1 %32, i1 false\l  %34 = icmp slt i32 %20, %2\l  %35 = select i1 %33, i1 %34, i1 false\l  br i1 %35, label %36, label %40\l|{<s0>T|<s1>F}}"];
	Node0x49ed5b0:s0 -> Node0x49f0bf0;
	Node0x49ed5b0:s1 -> Node0x49f0c80;
	Node0x49f0bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%36:\l36:                                               \l  %37 = sext i32 %28 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %40\l}"];
	Node0x49f0bf0 -> Node0x49f0c80;
	Node0x49f0c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%40:\l40:                                               \l  %41 = phi contract float [ %39, %36 ], [ 0.000000e+00, %9 ]\l  %42 = getelementptr inbounds [496 x float], [496 x float] addrspace(3)*\l... @_ZZ9dev_convnPfS_iiiiiPKfiE5block, i32 0, i32 %30\l  store float %41, float addrspace(3)* %42, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %43 = mul nsw i32 %12, %4\l  %44 = add nsw i32 %28, %43\l  %45 = icmp slt i32 %23, %3\l  %46 = select i1 %45, i1 %34, i1 false\l  %47 = icmp ult i32 %22, %11\l  %48 = select i1 %46, i1 %47, i1 false\l  br i1 %48, label %49, label %158\l|{<s0>T|<s1>F}}"];
	Node0x49f0c80:s0 -> Node0x49f2100;
	Node0x49f0c80:s1 -> Node0x49f2190;
	Node0x49f2100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%49:\l49:                                               \l  %50 = icmp sgt i32 %8, 0\l  br i1 %50, label %51, label %76\l|{<s0>T|<s1>F}}"];
	Node0x49f2100:s0 -> Node0x49f2360;
	Node0x49f2100:s1 -> Node0x49f23b0;
	Node0x49f2360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%51:\l51:                                               \l  %52 = and i32 %8, 7\l  %53 = icmp ult i32 %8, 8\l  br i1 %53, label %56, label %54\l|{<s0>T|<s1>F}}"];
	Node0x49f2360:s0 -> Node0x49f2640;
	Node0x49f2360:s1 -> Node0x49f2690;
	Node0x49f2690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%54:\l54:                                               \l  %55 = and i32 %8, -8\l  br label %80\l}"];
	Node0x49f2690 -> Node0x49f2890;
	Node0x49f2640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%56:\l56:                                               \l  %57 = phi float [ undef, %51 ], [ %154, %80 ]\l  %58 = phi i32 [ 0, %51 ], [ %155, %80 ]\l  %59 = phi float [ 0.000000e+00, %51 ], [ %154, %80 ]\l  %60 = icmp eq i32 %52, 0\l  br i1 %60, label %76, label %61\l|{<s0>T|<s1>F}}"];
	Node0x49f2640:s0 -> Node0x49f23b0;
	Node0x49f2640:s1 -> Node0x49f2c90;
	Node0x49f2c90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = phi i32 [ %73, %61 ], [ %58, %56 ]\l  %63 = phi float [ %72, %61 ], [ %59, %56 ]\l  %64 = phi i32 [ %74, %61 ], [ 0, %56 ]\l  %65 = add nuw nsw i32 %62, %30\l  %66 = getelementptr inbounds [496 x float], [496 x float] addrspace(3)*\l... @_ZZ9dev_convnPfS_iiiiiPKfiE5block, i32 0, i32 %65\l  %67 = load float, float addrspace(3)* %66, align 4, !tbaa !5\l  %68 = zext i32 %62 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %7, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %71 = fmul contract float %67, %70\l  %72 = fadd contract float %63, %71\l  %73 = add nuw nsw i32 %62, 1\l  %74 = add i32 %64, 1\l  %75 = icmp eq i32 %74, %52\l  br i1 %75, label %76, label %61, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x49f2c90:s0 -> Node0x49f23b0;
	Node0x49f2c90:s1 -> Node0x49f2c90;
	Node0x49f23b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%76:\l76:                                               \l  %77 = phi float [ 0.000000e+00, %49 ], [ %57, %56 ], [ %72, %61 ]\l  %78 = sext i32 %44 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %1, i64 %78\l  store float %77, float addrspace(1)* %79, align 4, !tbaa !5\l  br label %158\l}"];
	Node0x49f23b0 -> Node0x49f2190;
	Node0x49f2890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%80:\l80:                                               \l  %81 = phi i32 [ 0, %54 ], [ %155, %80 ]\l  %82 = phi float [ 0.000000e+00, %54 ], [ %154, %80 ]\l  %83 = phi i32 [ 0, %54 ], [ %156, %80 ]\l  %84 = add nuw nsw i32 %81, %30\l  %85 = getelementptr inbounds [496 x float], [496 x float] addrspace(3)*\l... @_ZZ9dev_convnPfS_iiiiiPKfiE5block, i32 0, i32 %84\l  %86 = load float, float addrspace(3)* %85, align 4, !tbaa !5\l  %87 = zext i32 %81 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %7, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %90 = fmul contract float %86, %89\l  %91 = fadd contract float %82, %90\l  %92 = or i32 %81, 1\l  %93 = add nuw nsw i32 %92, %30\l  %94 = getelementptr inbounds [496 x float], [496 x float] addrspace(3)*\l... @_ZZ9dev_convnPfS_iiiiiPKfiE5block, i32 0, i32 %93\l  %95 = load float, float addrspace(3)* %94, align 4, !tbaa !5\l  %96 = zext i32 %92 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %7, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %99 = fmul contract float %95, %98\l  %100 = fadd contract float %91, %99\l  %101 = or i32 %81, 2\l  %102 = add nuw nsw i32 %101, %30\l  %103 = getelementptr inbounds [496 x float], [496 x float] addrspace(3)*\l... @_ZZ9dev_convnPfS_iiiiiPKfiE5block, i32 0, i32 %102\l  %104 = load float, float addrspace(3)* %103, align 4, !tbaa !5\l  %105 = zext i32 %101 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %7, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %108 = fmul contract float %104, %107\l  %109 = fadd contract float %100, %108\l  %110 = or i32 %81, 3\l  %111 = add nuw nsw i32 %110, %30\l  %112 = getelementptr inbounds [496 x float], [496 x float] addrspace(3)*\l... @_ZZ9dev_convnPfS_iiiiiPKfiE5block, i32 0, i32 %111\l  %113 = load float, float addrspace(3)* %112, align 4, !tbaa !5\l  %114 = zext i32 %110 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %7, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %117 = fmul contract float %113, %116\l  %118 = fadd contract float %109, %117\l  %119 = or i32 %81, 4\l  %120 = add nuw nsw i32 %119, %30\l  %121 = getelementptr inbounds [496 x float], [496 x float] addrspace(3)*\l... @_ZZ9dev_convnPfS_iiiiiPKfiE5block, i32 0, i32 %120\l  %122 = load float, float addrspace(3)* %121, align 4, !tbaa !5\l  %123 = zext i32 %119 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %7, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %126 = fmul contract float %122, %125\l  %127 = fadd contract float %118, %126\l  %128 = or i32 %81, 5\l  %129 = add nuw nsw i32 %128, %30\l  %130 = getelementptr inbounds [496 x float], [496 x float] addrspace(3)*\l... @_ZZ9dev_convnPfS_iiiiiPKfiE5block, i32 0, i32 %129\l  %131 = load float, float addrspace(3)* %130, align 4, !tbaa !5\l  %132 = zext i32 %128 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %7, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %135 = fmul contract float %131, %134\l  %136 = fadd contract float %127, %135\l  %137 = or i32 %81, 6\l  %138 = add nuw nsw i32 %137, %30\l  %139 = getelementptr inbounds [496 x float], [496 x float] addrspace(3)*\l... @_ZZ9dev_convnPfS_iiiiiPKfiE5block, i32 0, i32 %138\l  %140 = load float, float addrspace(3)* %139, align 4, !tbaa !5\l  %141 = zext i32 %137 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %7, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %144 = fmul contract float %140, %143\l  %145 = fadd contract float %136, %144\l  %146 = or i32 %81, 7\l  %147 = add nuw nsw i32 %146, %30\l  %148 = getelementptr inbounds [496 x float], [496 x float] addrspace(3)*\l... @_ZZ9dev_convnPfS_iiiiiPKfiE5block, i32 0, i32 %147\l  %149 = load float, float addrspace(3)* %148, align 4, !tbaa !5\l  %150 = zext i32 %146 to i64\l  %151 = getelementptr inbounds float, float addrspace(1)* %7, i64 %150\l  %152 = load float, float addrspace(1)* %151, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %153 = fmul contract float %149, %152\l  %154 = fadd contract float %145, %153\l  %155 = add nuw nsw i32 %81, 8\l  %156 = add i32 %83, 8\l  %157 = icmp eq i32 %156, %55\l  br i1 %157, label %56, label %80, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x49f2890:s0 -> Node0x49f2640;
	Node0x49f2890:s1 -> Node0x49f2890;
	Node0x49f2190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%158:\l158:                                              \l  ret void\l}"];
}
