digraph "CFG for '_Z13dev_split_RGBPhPfi' function" {
	label="CFG for '_Z13dev_split_RGBPhPfi' function";

	Node0x58f2830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !6\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = shl i32 %12, 8\l  %14 = ashr exact i32 %13, 8\l  %15 = mul nsw i32 %14, %8\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = udiv i32 %11, %8\l  %19 = mul i32 %18, %8\l  %20 = icmp ugt i32 %11, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = shl i32 %22, 8\l  %24 = ashr exact i32 %23, 8\l  %25 = mul nsw i32 %24, %8\l  %26 = bitcast i8 addrspace(1)* %0 to %struct.rgb_s addrspace(1)*\l  %27 = icmp slt i32 %17, %2\l  br i1 %27, label %29, label %28\l|{<s0>T|<s1>F}}"];
	Node0x58f2830:s0 -> Node0x58f50d0;
	Node0x58f2830:s1 -> Node0x58f5160;
	Node0x58f5160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%28:\l28:                                               \l  ret void\l}"];
	Node0x58f50d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %47, %29 ], [ %17, %3 ]\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds %struct.rgb_s, %struct.rgb_s addrspace(1)* %26,\l... i64 %31, i32 0\l  %33 = load i8, i8 addrspace(1)* %32, align 1, !tbaa.struct !16\l  %34 = getelementptr inbounds %struct.rgb_s, %struct.rgb_s addrspace(1)* %26,\l... i64 %31, i32 1\l  %35 = load i8, i8 addrspace(1)* %34, align 1, !tbaa.struct !20\l  %36 = getelementptr inbounds %struct.rgb_s, %struct.rgb_s addrspace(1)* %26,\l... i64 %31, i32 2\l  %37 = load i8, i8 addrspace(1)* %36, align 1, !tbaa.struct !21\l  %38 = zext i8 %33 to i32\l  %39 = zext i8 %35 to i32\l  %40 = add nuw nsw i32 %39, %38\l  %41 = zext i8 %37 to i32\l  %42 = add nuw nsw i32 %40, %41\l  %43 = sitofp i32 %42 to double\l  %44 = fmul contract double %43, 0x3F556AC014BBFA71\l  %45 = fptrunc double %44 to float\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  store float %45, float addrspace(1)* %46, align 4, !tbaa !22\l  %47 = add nsw i32 %30, %25\l  %48 = icmp slt i32 %47, %2\l  br i1 %48, label %29, label %28, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x58f50d0:s0 -> Node0x58f50d0;
	Node0x58f50d0:s1 -> Node0x58f5160;
}
