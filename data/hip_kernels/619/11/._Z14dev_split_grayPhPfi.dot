digraph "CFG for '_Z14dev_split_grayPhPfi' function" {
	label="CFG for '_Z14dev_split_grayPhPfi' function";

	Node0x53f5630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !6\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = shl i32 %12, 8\l  %14 = ashr exact i32 %13, 8\l  %15 = mul nsw i32 %14, %8\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = udiv i32 %11, %8\l  %19 = mul i32 %18, %8\l  %20 = icmp ugt i32 %11, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = shl i32 %22, 8\l  %24 = ashr exact i32 %23, 8\l  %25 = mul nsw i32 %24, %8\l  %26 = icmp slt i32 %17, %2\l  br i1 %26, label %28, label %27\l|{<s0>T|<s1>F}}"];
	Node0x53f5630:s0 -> Node0x53f7e80;
	Node0x53f5630:s1 -> Node0x53f7f10;
	Node0x53f7f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%27:\l27:                                               \l  ret void\l}"];
	Node0x53f7e80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %37, %28 ], [ %17, %3 ]\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %30\l  %32 = load i8, i8 addrspace(1)* %31, align 1, !tbaa !16\l  %33 = uitofp i8 %32 to double\l  %34 = fmul contract double %33, 0x3F701010103CE7D4\l  %35 = fptrunc double %34 to float\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  store float %35, float addrspace(1)* %36, align 4, !tbaa !19\l  %37 = add nsw i32 %29, %25\l  %38 = icmp slt i32 %37, %2\l  br i1 %38, label %28, label %27, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x53f7e80:s0 -> Node0x53f7e80;
	Node0x53f7e80:s1 -> Node0x53f7f10;
}
