digraph "CFG for '_Z8matrix_tPiS_S_S_' function" {
	label="CFG for '_Z8matrix_tPiS_S_S_' function";

	Node0x56eb0f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 5\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = add i32 %6, %7\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = shl i32 %9, 5\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %12 = load i32, i32 addrspace(1)* %3, align 4, !tbaa !5, !amdgpu.noclobber !9\l  %13 = add i32 %11, %10\l  %14 = mul nsw i32 %12, %13\l  %15 = add nsw i32 %8, %14\l  %16 = sext i32 %15 to i64\l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %16\l  %18 = load i32, i32 addrspace(1)* %17, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %19 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ8matrix_tPiS_S_S_E5chunk, i32 0, i32 %7, i32 %11\l  store i32 %18, i32 addrspace(3)* %19, align 4, !tbaa !5\l  %20 = add nuw nsw i32 %11, 8\l  %21 = add i32 %20, %10\l  %22 = mul nsw i32 %12, %21\l  %23 = add nsw i32 %8, %22\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %27 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ8matrix_tPiS_S_S_E5chunk, i32 0, i32 %7, i32 %20\l  store i32 %26, i32 addrspace(3)* %27, align 4, !tbaa !5\l  %28 = add nuw nsw i32 %11, 16\l  %29 = add i32 %28, %10\l  %30 = mul nsw i32 %12, %29\l  %31 = add nsw i32 %8, %30\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %35 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ8matrix_tPiS_S_S_E5chunk, i32 0, i32 %7, i32 %28\l  store i32 %34, i32 addrspace(3)* %35, align 4, !tbaa !5\l  %36 = add nuw nsw i32 %11, 24\l  %37 = add i32 %36, %10\l  %38 = mul nsw i32 %12, %37\l  %39 = add nsw i32 %8, %38\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %40\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %43 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ8matrix_tPiS_S_S_E5chunk, i32 0, i32 %7, i32 %36\l  store i32 %42, i32 addrspace(3)* %43, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %44 = add i32 %10, %7\l  %45 = load i32, i32 addrspace(1)* %2, align 4, !tbaa !5\l  %46 = icmp slt i32 %44, %45\l  br i1 %46, label %47, label %59\l|{<s0>T|<s1>F}}"];
	Node0x56eb0f0:s0 -> Node0x56efea0;
	Node0x56eb0f0:s1 -> Node0x56eff30;
	Node0x56efea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%47:\l47:                                               \l  %48 = add i32 %11, %6\l  %49 = load i32, i32 addrspace(1)* %3, align 4, !tbaa !5\l  %50 = icmp slt i32 %48, %49\l  br i1 %50, label %51, label %59\l|{<s0>T|<s1>F}}"];
	Node0x56efea0:s0 -> Node0x56f0200;
	Node0x56efea0:s1 -> Node0x56eff30;
	Node0x56f0200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%51:\l51:                                               \l  %52 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ8matrix_tPiS_S_S_E5chunk, i32 0, i32 %11, i32 %7\l  %53 = load i32, i32 addrspace(3)* %52, align 4, !tbaa !5\l  %54 = mul nsw i32 %45, %48\l  %55 = add nsw i32 %54, %44\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %56\l  store i32 %53, i32 addrspace(1)* %57, align 4, !tbaa !5\l  %58 = load i32, i32 addrspace(1)* %2, align 4, !tbaa !5\l  br label %59\l}"];
	Node0x56f0200 -> Node0x56eff30;
	Node0x56eff30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi i32 [ %45, %4 ], [ %45, %47 ], [ %58, %51 ]\l  %61 = icmp slt i32 %44, %60\l  br i1 %61, label %62, label %74\l|{<s0>T|<s1>F}}"];
	Node0x56eff30:s0 -> Node0x56f0990;
	Node0x56eff30:s1 -> Node0x56f09e0;
	Node0x56f0990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%62:\l62:                                               \l  %63 = add i32 %20, %6\l  %64 = load i32, i32 addrspace(1)* %3, align 4, !tbaa !5\l  %65 = icmp slt i32 %63, %64\l  br i1 %65, label %66, label %74\l|{<s0>T|<s1>F}}"];
	Node0x56f0990:s0 -> Node0x56ef180;
	Node0x56f0990:s1 -> Node0x56f09e0;
	Node0x56ef180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%66:\l66:                                               \l  %67 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ8matrix_tPiS_S_S_E5chunk, i32 0, i32 %20, i32 %7\l  %68 = load i32, i32 addrspace(3)* %67, align 4, !tbaa !5\l  %69 = mul nsw i32 %60, %63\l  %70 = add nsw i32 %69, %44\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %71\l  store i32 %68, i32 addrspace(1)* %72, align 4, !tbaa !5\l  %73 = load i32, i32 addrspace(1)* %2, align 4, !tbaa !5\l  br label %74\l}"];
	Node0x56ef180 -> Node0x56f09e0;
	Node0x56f09e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = phi i32 [ %73, %66 ], [ %60, %62 ], [ %60, %59 ]\l  %76 = icmp slt i32 %44, %75\l  br i1 %76, label %77, label %89\l|{<s0>T|<s1>F}}"];
	Node0x56f09e0:s0 -> Node0x56f15d0;
	Node0x56f09e0:s1 -> Node0x56f1620;
	Node0x56f15d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%77:\l77:                                               \l  %78 = add i32 %28, %6\l  %79 = load i32, i32 addrspace(1)* %3, align 4, !tbaa !5\l  %80 = icmp slt i32 %78, %79\l  br i1 %80, label %81, label %89\l|{<s0>T|<s1>F}}"];
	Node0x56f15d0:s0 -> Node0x56f18b0;
	Node0x56f15d0:s1 -> Node0x56f1620;
	Node0x56f18b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%81:\l81:                                               \l  %82 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ8matrix_tPiS_S_S_E5chunk, i32 0, i32 %28, i32 %7\l  %83 = load i32, i32 addrspace(3)* %82, align 4, !tbaa !5\l  %84 = mul nsw i32 %75, %78\l  %85 = add nsw i32 %84, %44\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %86\l  store i32 %83, i32 addrspace(1)* %87, align 4, !tbaa !5\l  %88 = load i32, i32 addrspace(1)* %2, align 4, !tbaa !5\l  br label %89\l}"];
	Node0x56f18b0 -> Node0x56f1620;
	Node0x56f1620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%89:\l89:                                               \l  %90 = phi i32 [ %88, %81 ], [ %75, %77 ], [ %75, %74 ]\l  %91 = icmp slt i32 %44, %90\l  br i1 %91, label %92, label %103\l|{<s0>T|<s1>F}}"];
	Node0x56f1620:s0 -> Node0x56f2000;
	Node0x56f1620:s1 -> Node0x56f2050;
	Node0x56f2000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%92:\l92:                                               \l  %93 = add i32 %36, %6\l  %94 = load i32, i32 addrspace(1)* %3, align 4, !tbaa !5\l  %95 = icmp slt i32 %93, %94\l  br i1 %95, label %96, label %103\l|{<s0>T|<s1>F}}"];
	Node0x56f2000:s0 -> Node0x56f22e0;
	Node0x56f2000:s1 -> Node0x56f2050;
	Node0x56f22e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%96:\l96:                                               \l  %97 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ8matrix_tPiS_S_S_E5chunk, i32 0, i32 %36, i32 %7\l  %98 = load i32, i32 addrspace(3)* %97, align 4, !tbaa !5\l  %99 = mul nsw i32 %90, %93\l  %100 = add nsw i32 %99, %44\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %101\l  store i32 %98, i32 addrspace(1)* %102, align 4, !tbaa !5\l  br label %103\l}"];
	Node0x56f22e0 -> Node0x56f2050;
	Node0x56f2050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%103:\l103:                                              \l  ret void\l}"];
}
