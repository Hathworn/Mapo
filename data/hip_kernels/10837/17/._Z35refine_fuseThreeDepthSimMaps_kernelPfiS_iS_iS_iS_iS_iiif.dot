digraph "CFG for '_Z35refine_fuseThreeDepthSimMaps_kernelPfiS_iS_iS_iS_iS_iiif' function" {
	label="CFG for '_Z35refine_fuseThreeDepthSimMaps_kernelPfiS_iS_iS_iS_iS_iiif' function";

	Node0x5e78fc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %18 = getelementptr i8, i8 addrspace(4)* %17, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %16, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %24 = add i32 %22, %23\l  %25 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %26 = getelementptr i8, i8 addrspace(4)* %17, i64 6\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 2, !range !4, !invariant.load !5\l  %29 = zext i16 %28 to i32\l  %30 = mul i32 %25, %29\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %32 = add i32 %30, %31\l  %33 = icmp slt i32 %24, %12\l  %34 = icmp slt i32 %32, %13\l  %35 = select i1 %33, i1 %34, i1 false\l  br i1 %35, label %36, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5e78fc0:s0 -> Node0x5e79fa0;
	Node0x5e78fc0:s1 -> Node0x5e7d880;
	Node0x5e79fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%36:\l36:                                               \l  %37 = mul nsw i32 %32, %3\l  %38 = add nsw i32 %37, %24\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %2, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = mul nsw i32 %32, %7\l  %43 = add nsw i32 %42, %24\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %6, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = mul nsw i32 %32, %11\l  %48 = add nsw i32 %47, %24\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %10, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %52 = mul nsw i32 %32, %5\l  %53 = add nsw i32 %52, %24\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %4, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %57 = mul nsw i32 %32, %9\l  %58 = add nsw i32 %57, %24\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %8, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %62 = fcmp contract olt float %56, %14\l  %63 = select contract i1 %62, float %46, float %41\l  %64 = select contract i1 %62, float %56, float %14\l  %65 = fcmp contract olt float %61, %64\l  %66 = select contract i1 %65, float %51, float %63\l  %67 = select contract i1 %65, float %61, float %64\l  %68 = mul nsw i32 %32, %1\l  %69 = add nsw i32 %68, %24\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  store float %67, float addrspace(1)* %71, align 4, !tbaa !7\l  store float %66, float addrspace(1)* %40, align 4, !tbaa !7\l  br label %72\l}"];
	Node0x5e79fa0 -> Node0x5e7d880;
	Node0x5e7d880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  ret void\l}"];
}
