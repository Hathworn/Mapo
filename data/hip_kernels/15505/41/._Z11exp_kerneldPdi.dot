digraph "CFG for '_Z11exp_kerneldPdi' function" {
	label="CFG for '_Z11exp_kerneldPdi' function";

	Node0x4ea5760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !5, !invariant.load !6\l  %8 = zext i16 %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %8\l  %11 = add i32 %10, %3\l  %12 = icmp slt i32 %11, %1\l  br i1 %12, label %13, label %39\l|{<s0>T|<s1>F}}"];
	Node0x4ea5760:s0 -> Node0x4ea7630;
	Node0x4ea5760:s1 -> Node0x4ea76c0;
	Node0x4ea7630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%13:\l13:                                               \l  %14 = sext i32 %11 to i64\l  %15 = getelementptr inbounds double, double addrspace(1)* %0, i64 %14\l  %16 = load double, double addrspace(1)* %15, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %17 = fmul double %16, 0x3FF71547652B82FE\l  %18 = tail call double @llvm.rint.f64(double %17)\l  %19 = fneg double %18\l  %20 = tail call double @llvm.fma.f64(double %19, double 0x3FE62E42FEFA39EF,\l... double %16)\l  %21 = tail call double @llvm.fma.f64(double %19, double 0x3C7ABC9E3B39803F,\l... double %20)\l  %22 = tail call double @llvm.fma.f64(double %21, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %23 = tail call double @llvm.fma.f64(double %21, double %22, double\l... 0x3EC71DEE623FDE64)\l  %24 = tail call double @llvm.fma.f64(double %21, double %23, double\l... 0x3EFA01997C89E6B0)\l  %25 = tail call double @llvm.fma.f64(double %21, double %24, double\l... 0x3F2A01A014761F6E)\l  %26 = tail call double @llvm.fma.f64(double %21, double %25, double\l... 0x3F56C16C1852B7B0)\l  %27 = tail call double @llvm.fma.f64(double %21, double %26, double\l... 0x3F81111111122322)\l  %28 = tail call double @llvm.fma.f64(double %21, double %27, double\l... 0x3FA55555555502A1)\l  %29 = tail call double @llvm.fma.f64(double %21, double %28, double\l... 0x3FC5555555555511)\l  %30 = tail call double @llvm.fma.f64(double %21, double %29, double\l... 0x3FE000000000000B)\l  %31 = tail call double @llvm.fma.f64(double %21, double %30, double\l... 1.000000e+00)\l  %32 = tail call double @llvm.fma.f64(double %21, double %31, double\l... 1.000000e+00)\l  %33 = fptosi double %18 to i32\l  %34 = tail call double @llvm.amdgcn.ldexp.f64(double %32, i32 %33)\l  %35 = fcmp ogt double %16, 1.024000e+03\l  %36 = select i1 %35, double 0x7FF0000000000000, double %34\l  %37 = fcmp olt double %16, -1.075000e+03\l  %38 = select i1 %37, double 0.000000e+00, double %36\l  store double %38, double addrspace(1)* %15, align 8, !tbaa !7\l  br label %39\l}"];
	Node0x4ea7630 -> Node0x4ea76c0;
	Node0x4ea76c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  ret void\l}"];
}
