digraph "CFG for '_Z10pow_kernelPfif' function" {
	label="CFG for '_Z10pow_kernelPfif' function";

	Node0x55b26f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = add i32 %11, %4\l  %13 = icmp slt i32 %12, %1\l  br i1 %13, label %14, label %209\l|{<s0>T|<s1>F}}"];
	Node0x55b26f0:s0 -> Node0x55b4590;
	Node0x55b26f0:s1 -> Node0x55b4620;
	Node0x55b4590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds float, float addrspace(1)* %0, i64 %15\l  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %18 = tail call float @llvm.fabs.f32(float %17)\l  %19 = tail call float @llvm.amdgcn.frexp.mant.f32(float %18)\l  %20 = fcmp olt float %19, 0x3FE5555560000000\l  %21 = zext i1 %20 to i32\l  %22 = tail call float @llvm.amdgcn.ldexp.f32(float %19, i32 %21)\l  %23 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %18)\l  %24 = sub nsw i32 %23, %21\l  %25 = fadd float %22, -1.000000e+00\l  %26 = fadd float %22, 1.000000e+00\l  %27 = fadd float %26, -1.000000e+00\l  %28 = fsub float %22, %27\l  %29 = tail call float @llvm.amdgcn.rcp.f32(float %26)\l  %30 = fmul float %25, %29\l  %31 = fmul float %26, %30\l  %32 = fneg float %31\l  %33 = tail call float @llvm.fma.f32(float %30, float %26, float %32)\l  %34 = tail call float @llvm.fma.f32(float %30, float %28, float %33)\l  %35 = fadd float %31, %34\l  %36 = fsub float %35, %31\l  %37 = fsub float %34, %36\l  %38 = fsub float %25, %35\l  %39 = fsub float %25, %38\l  %40 = fsub float %39, %35\l  %41 = fsub float %40, %37\l  %42 = fadd float %38, %41\l  %43 = fmul float %29, %42\l  %44 = fadd float %30, %43\l  %45 = fsub float %44, %30\l  %46 = fsub float %43, %45\l  %47 = fmul float %44, %44\l  %48 = fneg float %47\l  %49 = tail call float @llvm.fma.f32(float %44, float %44, float %48)\l  %50 = fmul float %46, 2.000000e+00\l  %51 = tail call float @llvm.fma.f32(float %44, float %50, float %49)\l  %52 = fadd float %47, %51\l  %53 = fsub float %52, %47\l  %54 = fsub float %51, %53\l  %55 = tail call float @llvm.fmuladd.f32(float %52, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %56 = tail call float @llvm.fmuladd.f32(float %52, float %55, float\l... 0x3FD999BDE0000000)\l  %57 = sitofp i32 %24 to float\l  %58 = fmul float %57, 0x3FE62E4300000000\l  %59 = fneg float %58\l  %60 = tail call float @llvm.fma.f32(float %57, float 0x3FE62E4300000000,\l... float %59)\l  %61 = tail call float @llvm.fma.f32(float %57, float 0xBE205C6100000000,\l... float %60)\l  %62 = fadd float %58, %61\l  %63 = fsub float %62, %58\l  %64 = fsub float %61, %63\l  %65 = tail call float @llvm.amdgcn.ldexp.f32(float %44, i32 1)\l  %66 = fmul float %44, %52\l  %67 = fneg float %66\l  %68 = tail call float @llvm.fma.f32(float %52, float %44, float %67)\l  %69 = tail call float @llvm.fma.f32(float %52, float %46, float %68)\l  %70 = tail call float @llvm.fma.f32(float %54, float %44, float %69)\l  %71 = fadd float %66, %70\l  %72 = fsub float %71, %66\l  %73 = fsub float %70, %72\l  %74 = fmul float %52, %56\l  %75 = fneg float %74\l  %76 = tail call float @llvm.fma.f32(float %52, float %56, float %75)\l  %77 = tail call float @llvm.fma.f32(float %54, float %56, float %76)\l  %78 = fadd float %74, %77\l  %79 = fsub float %78, %74\l  %80 = fsub float %77, %79\l  %81 = fadd float %78, 0x3FE5555540000000\l  %82 = fadd float %81, 0xBFE5555540000000\l  %83 = fsub float %78, %82\l  %84 = fadd float %80, 0x3E2E720200000000\l  %85 = fadd float %84, %83\l  %86 = fadd float %81, %85\l  %87 = fsub float %86, %81\l  %88 = fsub float %85, %87\l  %89 = fmul float %71, %86\l  %90 = fneg float %89\l  %91 = tail call float @llvm.fma.f32(float %71, float %86, float %90)\l  %92 = tail call float @llvm.fma.f32(float %71, float %88, float %91)\l  %93 = tail call float @llvm.fma.f32(float %73, float %86, float %92)\l  %94 = tail call float @llvm.amdgcn.ldexp.f32(float %46, i32 1)\l  %95 = fadd float %89, %93\l  %96 = fsub float %95, %89\l  %97 = fsub float %93, %96\l  %98 = fadd float %65, %95\l  %99 = fsub float %98, %65\l  %100 = fsub float %95, %99\l  %101 = fadd float %94, %97\l  %102 = fadd float %101, %100\l  %103 = fadd float %98, %102\l  %104 = fsub float %103, %98\l  %105 = fsub float %102, %104\l  %106 = fadd float %62, %103\l  %107 = fsub float %106, %62\l  %108 = fsub float %106, %107\l  %109 = fsub float %62, %108\l  %110 = fsub float %103, %107\l  %111 = fadd float %110, %109\l  %112 = fadd float %64, %105\l  %113 = fsub float %112, %64\l  %114 = fsub float %112, %113\l  %115 = fsub float %64, %114\l  %116 = fsub float %105, %113\l  %117 = fadd float %116, %115\l  %118 = fadd float %112, %111\l  %119 = fadd float %106, %118\l  %120 = fsub float %119, %106\l  %121 = fsub float %118, %120\l  %122 = fadd float %117, %121\l  %123 = fadd float %119, %122\l  %124 = fsub float %123, %119\l  %125 = fsub float %122, %124\l  %126 = fmul float %123, %2\l  %127 = fneg float %126\l  %128 = tail call float @llvm.fma.f32(float %2, float %123, float %127)\l  %129 = tail call float @llvm.fma.f32(float %2, float %125, float %128)\l  %130 = fadd float %126, %129\l  %131 = fsub float %130, %126\l  %132 = fsub float %129, %131\l  %133 = tail call float @llvm.fabs.f32(float %126) #3\l  %134 = fcmp oeq float %133, 0x7FF0000000000000\l  %135 = select i1 %134, float %126, float %130\l  %136 = tail call float @llvm.fabs.f32(float %135) #3\l  %137 = fcmp oeq float %136, 0x7FF0000000000000\l  %138 = select i1 %137, float 0.000000e+00, float %132\l  %139 = fcmp oeq float %135, 0x40562E4300000000\l  %140 = select i1 %139, float 0x3EE0000000000000, float 0.000000e+00\l  %141 = fsub float %135, %140\l  %142 = fadd float %140, %138\l  %143 = fmul float %141, 0x3FF7154760000000\l  %144 = tail call float @llvm.rint.f32(float %143)\l  %145 = fcmp ogt float %141, 0x40562E4300000000\l  %146 = fcmp olt float %141, 0xC059D1DA00000000\l  %147 = fneg float %143\l  %148 = tail call float @llvm.fma.f32(float %141, float 0x3FF7154760000000,\l... float %147)\l  %149 = tail call float @llvm.fma.f32(float %141, float 0x3E54AE0BE0000000,\l... float %148)\l  %150 = fsub float %143, %144\l  %151 = fadd float %149, %150\l  %152 = tail call float @llvm.exp2.f32(float %151)\l  %153 = fptosi float %144 to i32\l  %154 = tail call float @llvm.amdgcn.ldexp.f32(float %152, i32 %153)\l  %155 = select i1 %146, float 0.000000e+00, float %154\l  %156 = select i1 %145, float 0x7FF0000000000000, float %155\l  %157 = tail call float @llvm.fma.f32(float %156, float %142, float %156)\l  %158 = tail call float @llvm.fabs.f32(float %156) #3\l  %159 = fcmp oeq float %158, 0x7FF0000000000000\l  %160 = select i1 %159, float %156, float %157\l  %161 = tail call float @llvm.fabs.f32(float %2)\l  %162 = tail call float @llvm.trunc.f32(float %161)\l  %163 = fcmp oeq float %161, %162\l  %164 = zext i1 %163 to i32\l  %165 = fmul float %162, 5.000000e-01\l  %166 = tail call float @llvm.amdgcn.fract.f32(float %165)\l  %167 = tail call i1 @llvm.amdgcn.class.f32(float %165, i32 516)\l  %168 = select i1 %167, float 0.000000e+00, float %166\l  %169 = fcmp oeq float %168, 0.000000e+00\l  %170 = and i1 %163, %169\l  %171 = zext i1 %170 to i32\l  %172 = add nuw nsw i32 %171, %164\l  %173 = icmp eq i32 %172, 1\l  %174 = fcmp olt float %17, 0.000000e+00\l  %175 = and i1 %173, %174\l  %176 = select i1 %175, float -0.000000e+00, float 0.000000e+00\l  %177 = tail call float @llvm.copysign.f32(float %160, float %176)\l  %178 = fcmp uge float %17, 0.000000e+00\l  %179 = icmp ne i32 %172, 0\l  %180 = select i1 %178, i1 true, i1 %179\l  %181 = select i1 %180, float %177, float 0x7FF8000000000000\l  %182 = fcmp oeq float %161, 0x7FF0000000000000\l  br i1 %182, label %183, label %192\l|{<s0>T|<s1>F}}"];
	Node0x55b4590:s0 -> Node0x55be9d0;
	Node0x55b4590:s1 -> Node0x55bea60;
	Node0x55be9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%183:\l183:                                              \l  %184 = fcmp oeq float %18, 1.000000e+00\l  %185 = fadd float %18, -1.000000e+00\l  %186 = bitcast float %2 to i32\l  %187 = bitcast float %185 to i32\l  %188 = xor i32 %187, %186\l  %189 = icmp sgt i32 %188, -1\l  %190 = select i1 %189, float 0x7FF0000000000000, float 0.000000e+00\l  %191 = select i1 %184, float %18, float %190\l  br label %192\l}"];
	Node0x55be9d0 -> Node0x55bea60;
	Node0x55bea60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%192:\l192:                                              \l  %193 = phi float [ %181, %14 ], [ %191, %183 ]\l  %194 = fcmp oeq float %18, 0x7FF0000000000000\l  %195 = fcmp oeq float %17, 0.000000e+00\l  %196 = or i1 %195, %194\l  %197 = fcmp olt float %2, 0.000000e+00\l  %198 = xor i1 %197, %195\l  %199 = select i1 %198, float 0.000000e+00, float 0x7FF0000000000000\l  %200 = select i1 %173, float %17, float 0.000000e+00\l  %201 = tail call float @llvm.copysign.f32(float %199, float %200)\l  %202 = select i1 %196, float %201, float %193\l  %203 = fcmp uno float %17, %2\l  %204 = select i1 %203, float 0x7FF8000000000000, float %202\l  %205 = fcmp oeq float %17, 1.000000e+00\l  %206 = fcmp oeq float %2, 0.000000e+00\l  %207 = or i1 %206, %205\l  %208 = select i1 %207, float 1.000000e+00, float %204\l  store float %208, float addrspace(1)* %16, align 4, !tbaa !7\l  br label %209\l}"];
	Node0x55bea60 -> Node0x55b4620;
	Node0x55b4620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%209:\l209:                                              \l  ret void\l}"];
}
