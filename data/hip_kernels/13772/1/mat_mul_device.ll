; ModuleID = '../data/hip_kernels/13772/1/main.cu'
source_filename = "../data/hip_kernels/13772/1/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

@_ZZ7mat_mulPfS_S_E2As = internal unnamed_addr addrspace(3) global [16 x [16 x float]] undef, align 16
@_ZZ7mat_mulPfS_S_E2Bs = internal unnamed_addr addrspace(3) global [16 x [16 x float]] undef, align 16

; Function Attrs: convergent mustprogress norecurse nounwind
define protected amdgpu_kernel void @_Z7mat_mulPfS_S_(float addrspace(1)* nocapture readonly %0, float addrspace(1)* nocapture readonly %1, float addrspace(1)* nocapture writeonly %2) local_unnamed_addr #0 {
  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()
  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4
  %7 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4
  %8 = shl i32 %4, 11
  %9 = shl nuw nsw i32 %6, 7
  %10 = add nuw nsw i32 %9, %7
  %11 = add i32 %10, %8
  %12 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 %7
  %13 = shl nsw i32 %5, 4
  %14 = add nsw i32 %13, %7
  %15 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 %6, i32 %7
  %16 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 0
  %17 = sext i32 %11 to i64
  %18 = getelementptr inbounds float, float addrspace(1)* %0, i64 %17
  %19 = load float, float addrspace(1)* %18, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %19, float addrspace(3)* %12, align 4, !tbaa !5
  %20 = shl nuw nsw i32 %6, 6
  %21 = add nsw i32 %14, %20
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds float, float addrspace(1)* %1, i64 %22
  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %24, float addrspace(3)* %15, align 4, !tbaa !5
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %25 = load float, float addrspace(3)* %16, align 16, !tbaa !5
  %26 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 0, i32 %7
  %27 = load float, float addrspace(3)* %26, align 4, !tbaa !5
  %28 = fmul contract float %25, %27
  %29 = fadd contract float %28, 0.000000e+00
  %30 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 1
  %31 = load float, float addrspace(3)* %30, align 4, !tbaa !5
  %32 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 1, i32 %7
  %33 = load float, float addrspace(3)* %32, align 4, !tbaa !5
  %34 = fmul contract float %31, %33
  %35 = fadd contract float %29, %34
  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 2
  %37 = load float, float addrspace(3)* %36, align 8, !tbaa !5
  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 2, i32 %7
  %39 = load float, float addrspace(3)* %38, align 4, !tbaa !5
  %40 = fmul contract float %37, %39
  %41 = fadd contract float %35, %40
  %42 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 3
  %43 = load float, float addrspace(3)* %42, align 4, !tbaa !5
  %44 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 3, i32 %7
  %45 = load float, float addrspace(3)* %44, align 4, !tbaa !5
  %46 = fmul contract float %43, %45
  %47 = fadd contract float %41, %46
  %48 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 4
  %49 = load float, float addrspace(3)* %48, align 16, !tbaa !5
  %50 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 4, i32 %7
  %51 = load float, float addrspace(3)* %50, align 4, !tbaa !5
  %52 = fmul contract float %49, %51
  %53 = fadd contract float %47, %52
  %54 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 5
  %55 = load float, float addrspace(3)* %54, align 4, !tbaa !5
  %56 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 5, i32 %7
  %57 = load float, float addrspace(3)* %56, align 4, !tbaa !5
  %58 = fmul contract float %55, %57
  %59 = fadd contract float %53, %58
  %60 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 6
  %61 = load float, float addrspace(3)* %60, align 8, !tbaa !5
  %62 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 6, i32 %7
  %63 = load float, float addrspace(3)* %62, align 4, !tbaa !5
  %64 = fmul contract float %61, %63
  %65 = fadd contract float %59, %64
  %66 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 7
  %67 = load float, float addrspace(3)* %66, align 4, !tbaa !5
  %68 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 7, i32 %7
  %69 = load float, float addrspace(3)* %68, align 4, !tbaa !5
  %70 = fmul contract float %67, %69
  %71 = fadd contract float %65, %70
  %72 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 8
  %73 = load float, float addrspace(3)* %72, align 16, !tbaa !5
  %74 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 8, i32 %7
  %75 = load float, float addrspace(3)* %74, align 4, !tbaa !5
  %76 = fmul contract float %73, %75
  %77 = fadd contract float %71, %76
  %78 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 9
  %79 = load float, float addrspace(3)* %78, align 4, !tbaa !5
  %80 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 9, i32 %7
  %81 = load float, float addrspace(3)* %80, align 4, !tbaa !5
  %82 = fmul contract float %79, %81
  %83 = fadd contract float %77, %82
  %84 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 10
  %85 = load float, float addrspace(3)* %84, align 8, !tbaa !5
  %86 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 10, i32 %7
  %87 = load float, float addrspace(3)* %86, align 4, !tbaa !5
  %88 = fmul contract float %85, %87
  %89 = fadd contract float %83, %88
  %90 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 11
  %91 = load float, float addrspace(3)* %90, align 4, !tbaa !5
  %92 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 11, i32 %7
  %93 = load float, float addrspace(3)* %92, align 4, !tbaa !5
  %94 = fmul contract float %91, %93
  %95 = fadd contract float %89, %94
  %96 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 12
  %97 = load float, float addrspace(3)* %96, align 16, !tbaa !5
  %98 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 12, i32 %7
  %99 = load float, float addrspace(3)* %98, align 4, !tbaa !5
  %100 = fmul contract float %97, %99
  %101 = fadd contract float %95, %100
  %102 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 13
  %103 = load float, float addrspace(3)* %102, align 4, !tbaa !5
  %104 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 13, i32 %7
  %105 = load float, float addrspace(3)* %104, align 4, !tbaa !5
  %106 = fmul contract float %103, %105
  %107 = fadd contract float %101, %106
  %108 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 14
  %109 = load float, float addrspace(3)* %108, align 8, !tbaa !5
  %110 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 14, i32 %7
  %111 = load float, float addrspace(3)* %110, align 4, !tbaa !5
  %112 = fmul contract float %109, %111
  %113 = fadd contract float %107, %112
  %114 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2As, i32 0, i32 %6, i32 15
  %115 = load float, float addrspace(3)* %114, align 4, !tbaa !5
  %116 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ7mat_mulPfS_S_E2Bs, i32 0, i32 15, i32 %7
  %117 = load float, float addrspace(3)* %116, align 4, !tbaa !5
  %118 = fmul contract float %115, %117
  %119 = fadd contract float %113, %118
  %120 = add i32 %11, 16
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds float, float addrspace(1)* %0, i64 %121
  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %123, float addrspace(3)* %12, align 4, !tbaa !5
  %124 = shl nuw nsw i32 %6, 6
  %125 = add nuw nsw i32 %124, 1024
  %126 = add nsw i32 %14, %125
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds float, float addrspace(1)* %1, i64 %127
  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %129, float addrspace(3)* %15, align 4, !tbaa !5
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %130 = load float, float addrspace(3)* %16, align 16, !tbaa !5
  %131 = load float, float addrspace(3)* %26, align 4, !tbaa !5
  %132 = fmul contract float %130, %131
  %133 = fadd contract float %119, %132
  %134 = load float, float addrspace(3)* %30, align 4, !tbaa !5
  %135 = load float, float addrspace(3)* %32, align 4, !tbaa !5
  %136 = fmul contract float %134, %135
  %137 = fadd contract float %133, %136
  %138 = load float, float addrspace(3)* %36, align 8, !tbaa !5
  %139 = load float, float addrspace(3)* %38, align 4, !tbaa !5
  %140 = fmul contract float %138, %139
  %141 = fadd contract float %137, %140
  %142 = load float, float addrspace(3)* %42, align 4, !tbaa !5
  %143 = load float, float addrspace(3)* %44, align 4, !tbaa !5
  %144 = fmul contract float %142, %143
  %145 = fadd contract float %141, %144
  %146 = load float, float addrspace(3)* %48, align 16, !tbaa !5
  %147 = load float, float addrspace(3)* %50, align 4, !tbaa !5
  %148 = fmul contract float %146, %147
  %149 = fadd contract float %145, %148
  %150 = load float, float addrspace(3)* %54, align 4, !tbaa !5
  %151 = load float, float addrspace(3)* %56, align 4, !tbaa !5
  %152 = fmul contract float %150, %151
  %153 = fadd contract float %149, %152
  %154 = load float, float addrspace(3)* %60, align 8, !tbaa !5
  %155 = load float, float addrspace(3)* %62, align 4, !tbaa !5
  %156 = fmul contract float %154, %155
  %157 = fadd contract float %153, %156
  %158 = load float, float addrspace(3)* %66, align 4, !tbaa !5
  %159 = load float, float addrspace(3)* %68, align 4, !tbaa !5
  %160 = fmul contract float %158, %159
  %161 = fadd contract float %157, %160
  %162 = load float, float addrspace(3)* %72, align 16, !tbaa !5
  %163 = load float, float addrspace(3)* %74, align 4, !tbaa !5
  %164 = fmul contract float %162, %163
  %165 = fadd contract float %161, %164
  %166 = load float, float addrspace(3)* %78, align 4, !tbaa !5
  %167 = load float, float addrspace(3)* %80, align 4, !tbaa !5
  %168 = fmul contract float %166, %167
  %169 = fadd contract float %165, %168
  %170 = load float, float addrspace(3)* %84, align 8, !tbaa !5
  %171 = load float, float addrspace(3)* %86, align 4, !tbaa !5
  %172 = fmul contract float %170, %171
  %173 = fadd contract float %169, %172
  %174 = load float, float addrspace(3)* %90, align 4, !tbaa !5
  %175 = load float, float addrspace(3)* %92, align 4, !tbaa !5
  %176 = fmul contract float %174, %175
  %177 = fadd contract float %173, %176
  %178 = load float, float addrspace(3)* %96, align 16, !tbaa !5
  %179 = load float, float addrspace(3)* %98, align 4, !tbaa !5
  %180 = fmul contract float %178, %179
  %181 = fadd contract float %177, %180
  %182 = load float, float addrspace(3)* %102, align 4, !tbaa !5
  %183 = load float, float addrspace(3)* %104, align 4, !tbaa !5
  %184 = fmul contract float %182, %183
  %185 = fadd contract float %181, %184
  %186 = load float, float addrspace(3)* %108, align 8, !tbaa !5
  %187 = load float, float addrspace(3)* %110, align 4, !tbaa !5
  %188 = fmul contract float %186, %187
  %189 = fadd contract float %185, %188
  %190 = load float, float addrspace(3)* %114, align 4, !tbaa !5
  %191 = load float, float addrspace(3)* %116, align 4, !tbaa !5
  %192 = fmul contract float %190, %191
  %193 = fadd contract float %189, %192
  %194 = add i32 %11, 32
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds float, float addrspace(1)* %0, i64 %195
  %197 = load float, float addrspace(1)* %196, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %197, float addrspace(3)* %12, align 4, !tbaa !5
  %198 = shl nuw nsw i32 %6, 6
  %199 = add nuw nsw i32 %198, 2048
  %200 = add nsw i32 %14, %199
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds float, float addrspace(1)* %1, i64 %201
  %203 = load float, float addrspace(1)* %202, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %203, float addrspace(3)* %15, align 4, !tbaa !5
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %204 = load float, float addrspace(3)* %16, align 16, !tbaa !5
  %205 = load float, float addrspace(3)* %26, align 4, !tbaa !5
  %206 = fmul contract float %204, %205
  %207 = fadd contract float %193, %206
  %208 = load float, float addrspace(3)* %30, align 4, !tbaa !5
  %209 = load float, float addrspace(3)* %32, align 4, !tbaa !5
  %210 = fmul contract float %208, %209
  %211 = fadd contract float %207, %210
  %212 = load float, float addrspace(3)* %36, align 8, !tbaa !5
  %213 = load float, float addrspace(3)* %38, align 4, !tbaa !5
  %214 = fmul contract float %212, %213
  %215 = fadd contract float %211, %214
  %216 = load float, float addrspace(3)* %42, align 4, !tbaa !5
  %217 = load float, float addrspace(3)* %44, align 4, !tbaa !5
  %218 = fmul contract float %216, %217
  %219 = fadd contract float %215, %218
  %220 = load float, float addrspace(3)* %48, align 16, !tbaa !5
  %221 = load float, float addrspace(3)* %50, align 4, !tbaa !5
  %222 = fmul contract float %220, %221
  %223 = fadd contract float %219, %222
  %224 = load float, float addrspace(3)* %54, align 4, !tbaa !5
  %225 = load float, float addrspace(3)* %56, align 4, !tbaa !5
  %226 = fmul contract float %224, %225
  %227 = fadd contract float %223, %226
  %228 = load float, float addrspace(3)* %60, align 8, !tbaa !5
  %229 = load float, float addrspace(3)* %62, align 4, !tbaa !5
  %230 = fmul contract float %228, %229
  %231 = fadd contract float %227, %230
  %232 = load float, float addrspace(3)* %66, align 4, !tbaa !5
  %233 = load float, float addrspace(3)* %68, align 4, !tbaa !5
  %234 = fmul contract float %232, %233
  %235 = fadd contract float %231, %234
  %236 = load float, float addrspace(3)* %72, align 16, !tbaa !5
  %237 = load float, float addrspace(3)* %74, align 4, !tbaa !5
  %238 = fmul contract float %236, %237
  %239 = fadd contract float %235, %238
  %240 = load float, float addrspace(3)* %78, align 4, !tbaa !5
  %241 = load float, float addrspace(3)* %80, align 4, !tbaa !5
  %242 = fmul contract float %240, %241
  %243 = fadd contract float %239, %242
  %244 = load float, float addrspace(3)* %84, align 8, !tbaa !5
  %245 = load float, float addrspace(3)* %86, align 4, !tbaa !5
  %246 = fmul contract float %244, %245
  %247 = fadd contract float %243, %246
  %248 = load float, float addrspace(3)* %90, align 4, !tbaa !5
  %249 = load float, float addrspace(3)* %92, align 4, !tbaa !5
  %250 = fmul contract float %248, %249
  %251 = fadd contract float %247, %250
  %252 = load float, float addrspace(3)* %96, align 16, !tbaa !5
  %253 = load float, float addrspace(3)* %98, align 4, !tbaa !5
  %254 = fmul contract float %252, %253
  %255 = fadd contract float %251, %254
  %256 = load float, float addrspace(3)* %102, align 4, !tbaa !5
  %257 = load float, float addrspace(3)* %104, align 4, !tbaa !5
  %258 = fmul contract float %256, %257
  %259 = fadd contract float %255, %258
  %260 = load float, float addrspace(3)* %108, align 8, !tbaa !5
  %261 = load float, float addrspace(3)* %110, align 4, !tbaa !5
  %262 = fmul contract float %260, %261
  %263 = fadd contract float %259, %262
  %264 = load float, float addrspace(3)* %114, align 4, !tbaa !5
  %265 = load float, float addrspace(3)* %116, align 4, !tbaa !5
  %266 = fmul contract float %264, %265
  %267 = fadd contract float %263, %266
  %268 = add i32 %11, 48
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds float, float addrspace(1)* %0, i64 %269
  %271 = load float, float addrspace(1)* %270, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %271, float addrspace(3)* %12, align 4, !tbaa !5
  %272 = shl nuw nsw i32 %6, 6
  %273 = add nuw nsw i32 %272, 3072
  %274 = add nsw i32 %14, %273
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds float, float addrspace(1)* %1, i64 %275
  %277 = load float, float addrspace(1)* %276, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %277, float addrspace(3)* %15, align 4, !tbaa !5
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %278 = load float, float addrspace(3)* %16, align 16, !tbaa !5
  %279 = load float, float addrspace(3)* %26, align 4, !tbaa !5
  %280 = fmul contract float %278, %279
  %281 = fadd contract float %267, %280
  %282 = load float, float addrspace(3)* %30, align 4, !tbaa !5
  %283 = load float, float addrspace(3)* %32, align 4, !tbaa !5
  %284 = fmul contract float %282, %283
  %285 = fadd contract float %281, %284
  %286 = load float, float addrspace(3)* %36, align 8, !tbaa !5
  %287 = load float, float addrspace(3)* %38, align 4, !tbaa !5
  %288 = fmul contract float %286, %287
  %289 = fadd contract float %285, %288
  %290 = load float, float addrspace(3)* %42, align 4, !tbaa !5
  %291 = load float, float addrspace(3)* %44, align 4, !tbaa !5
  %292 = fmul contract float %290, %291
  %293 = fadd contract float %289, %292
  %294 = load float, float addrspace(3)* %48, align 16, !tbaa !5
  %295 = load float, float addrspace(3)* %50, align 4, !tbaa !5
  %296 = fmul contract float %294, %295
  %297 = fadd contract float %293, %296
  %298 = load float, float addrspace(3)* %54, align 4, !tbaa !5
  %299 = load float, float addrspace(3)* %56, align 4, !tbaa !5
  %300 = fmul contract float %298, %299
  %301 = fadd contract float %297, %300
  %302 = load float, float addrspace(3)* %60, align 8, !tbaa !5
  %303 = load float, float addrspace(3)* %62, align 4, !tbaa !5
  %304 = fmul contract float %302, %303
  %305 = fadd contract float %301, %304
  %306 = load float, float addrspace(3)* %66, align 4, !tbaa !5
  %307 = load float, float addrspace(3)* %68, align 4, !tbaa !5
  %308 = fmul contract float %306, %307
  %309 = fadd contract float %305, %308
  %310 = load float, float addrspace(3)* %72, align 16, !tbaa !5
  %311 = load float, float addrspace(3)* %74, align 4, !tbaa !5
  %312 = fmul contract float %310, %311
  %313 = fadd contract float %309, %312
  %314 = load float, float addrspace(3)* %78, align 4, !tbaa !5
  %315 = load float, float addrspace(3)* %80, align 4, !tbaa !5
  %316 = fmul contract float %314, %315
  %317 = fadd contract float %313, %316
  %318 = load float, float addrspace(3)* %84, align 8, !tbaa !5
  %319 = load float, float addrspace(3)* %86, align 4, !tbaa !5
  %320 = fmul contract float %318, %319
  %321 = fadd contract float %317, %320
  %322 = load float, float addrspace(3)* %90, align 4, !tbaa !5
  %323 = load float, float addrspace(3)* %92, align 4, !tbaa !5
  %324 = fmul contract float %322, %323
  %325 = fadd contract float %321, %324
  %326 = load float, float addrspace(3)* %96, align 16, !tbaa !5
  %327 = load float, float addrspace(3)* %98, align 4, !tbaa !5
  %328 = fmul contract float %326, %327
  %329 = fadd contract float %325, %328
  %330 = load float, float addrspace(3)* %102, align 4, !tbaa !5
  %331 = load float, float addrspace(3)* %104, align 4, !tbaa !5
  %332 = fmul contract float %330, %331
  %333 = fadd contract float %329, %332
  %334 = load float, float addrspace(3)* %108, align 8, !tbaa !5
  %335 = load float, float addrspace(3)* %110, align 4, !tbaa !5
  %336 = fmul contract float %334, %335
  %337 = fadd contract float %333, %336
  %338 = load float, float addrspace(3)* %114, align 4, !tbaa !5
  %339 = load float, float addrspace(3)* %116, align 4, !tbaa !5
  %340 = fmul contract float %338, %339
  %341 = fadd contract float %337, %340
  %342 = add i32 %11, 64
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds float, float addrspace(1)* %0, i64 %343
  %345 = load float, float addrspace(1)* %344, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %345, float addrspace(3)* %12, align 4, !tbaa !5
  %346 = shl nuw nsw i32 %6, 6
  %347 = add nuw nsw i32 %346, 4096
  %348 = add nsw i32 %14, %347
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds float, float addrspace(1)* %1, i64 %349
  %351 = load float, float addrspace(1)* %350, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %351, float addrspace(3)* %15, align 4, !tbaa !5
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %352 = load float, float addrspace(3)* %16, align 16, !tbaa !5
  %353 = load float, float addrspace(3)* %26, align 4, !tbaa !5
  %354 = fmul contract float %352, %353
  %355 = fadd contract float %341, %354
  %356 = load float, float addrspace(3)* %30, align 4, !tbaa !5
  %357 = load float, float addrspace(3)* %32, align 4, !tbaa !5
  %358 = fmul contract float %356, %357
  %359 = fadd contract float %355, %358
  %360 = load float, float addrspace(3)* %36, align 8, !tbaa !5
  %361 = load float, float addrspace(3)* %38, align 4, !tbaa !5
  %362 = fmul contract float %360, %361
  %363 = fadd contract float %359, %362
  %364 = load float, float addrspace(3)* %42, align 4, !tbaa !5
  %365 = load float, float addrspace(3)* %44, align 4, !tbaa !5
  %366 = fmul contract float %364, %365
  %367 = fadd contract float %363, %366
  %368 = load float, float addrspace(3)* %48, align 16, !tbaa !5
  %369 = load float, float addrspace(3)* %50, align 4, !tbaa !5
  %370 = fmul contract float %368, %369
  %371 = fadd contract float %367, %370
  %372 = load float, float addrspace(3)* %54, align 4, !tbaa !5
  %373 = load float, float addrspace(3)* %56, align 4, !tbaa !5
  %374 = fmul contract float %372, %373
  %375 = fadd contract float %371, %374
  %376 = load float, float addrspace(3)* %60, align 8, !tbaa !5
  %377 = load float, float addrspace(3)* %62, align 4, !tbaa !5
  %378 = fmul contract float %376, %377
  %379 = fadd contract float %375, %378
  %380 = load float, float addrspace(3)* %66, align 4, !tbaa !5
  %381 = load float, float addrspace(3)* %68, align 4, !tbaa !5
  %382 = fmul contract float %380, %381
  %383 = fadd contract float %379, %382
  %384 = load float, float addrspace(3)* %72, align 16, !tbaa !5
  %385 = load float, float addrspace(3)* %74, align 4, !tbaa !5
  %386 = fmul contract float %384, %385
  %387 = fadd contract float %383, %386
  %388 = load float, float addrspace(3)* %78, align 4, !tbaa !5
  %389 = load float, float addrspace(3)* %80, align 4, !tbaa !5
  %390 = fmul contract float %388, %389
  %391 = fadd contract float %387, %390
  %392 = load float, float addrspace(3)* %84, align 8, !tbaa !5
  %393 = load float, float addrspace(3)* %86, align 4, !tbaa !5
  %394 = fmul contract float %392, %393
  %395 = fadd contract float %391, %394
  %396 = load float, float addrspace(3)* %90, align 4, !tbaa !5
  %397 = load float, float addrspace(3)* %92, align 4, !tbaa !5
  %398 = fmul contract float %396, %397
  %399 = fadd contract float %395, %398
  %400 = load float, float addrspace(3)* %96, align 16, !tbaa !5
  %401 = load float, float addrspace(3)* %98, align 4, !tbaa !5
  %402 = fmul contract float %400, %401
  %403 = fadd contract float %399, %402
  %404 = load float, float addrspace(3)* %102, align 4, !tbaa !5
  %405 = load float, float addrspace(3)* %104, align 4, !tbaa !5
  %406 = fmul contract float %404, %405
  %407 = fadd contract float %403, %406
  %408 = load float, float addrspace(3)* %108, align 8, !tbaa !5
  %409 = load float, float addrspace(3)* %110, align 4, !tbaa !5
  %410 = fmul contract float %408, %409
  %411 = fadd contract float %407, %410
  %412 = load float, float addrspace(3)* %114, align 4, !tbaa !5
  %413 = load float, float addrspace(3)* %116, align 4, !tbaa !5
  %414 = fmul contract float %412, %413
  %415 = fadd contract float %411, %414
  %416 = add i32 %11, 80
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds float, float addrspace(1)* %0, i64 %417
  %419 = load float, float addrspace(1)* %418, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %419, float addrspace(3)* %12, align 4, !tbaa !5
  %420 = shl nuw nsw i32 %6, 6
  %421 = add nuw nsw i32 %420, 5120
  %422 = add nsw i32 %14, %421
  %423 = sext i32 %422 to i64
  %424 = getelementptr inbounds float, float addrspace(1)* %1, i64 %423
  %425 = load float, float addrspace(1)* %424, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %425, float addrspace(3)* %15, align 4, !tbaa !5
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %426 = load float, float addrspace(3)* %16, align 16, !tbaa !5
  %427 = load float, float addrspace(3)* %26, align 4, !tbaa !5
  %428 = fmul contract float %426, %427
  %429 = fadd contract float %415, %428
  %430 = load float, float addrspace(3)* %30, align 4, !tbaa !5
  %431 = load float, float addrspace(3)* %32, align 4, !tbaa !5
  %432 = fmul contract float %430, %431
  %433 = fadd contract float %429, %432
  %434 = load float, float addrspace(3)* %36, align 8, !tbaa !5
  %435 = load float, float addrspace(3)* %38, align 4, !tbaa !5
  %436 = fmul contract float %434, %435
  %437 = fadd contract float %433, %436
  %438 = load float, float addrspace(3)* %42, align 4, !tbaa !5
  %439 = load float, float addrspace(3)* %44, align 4, !tbaa !5
  %440 = fmul contract float %438, %439
  %441 = fadd contract float %437, %440
  %442 = load float, float addrspace(3)* %48, align 16, !tbaa !5
  %443 = load float, float addrspace(3)* %50, align 4, !tbaa !5
  %444 = fmul contract float %442, %443
  %445 = fadd contract float %441, %444
  %446 = load float, float addrspace(3)* %54, align 4, !tbaa !5
  %447 = load float, float addrspace(3)* %56, align 4, !tbaa !5
  %448 = fmul contract float %446, %447
  %449 = fadd contract float %445, %448
  %450 = load float, float addrspace(3)* %60, align 8, !tbaa !5
  %451 = load float, float addrspace(3)* %62, align 4, !tbaa !5
  %452 = fmul contract float %450, %451
  %453 = fadd contract float %449, %452
  %454 = load float, float addrspace(3)* %66, align 4, !tbaa !5
  %455 = load float, float addrspace(3)* %68, align 4, !tbaa !5
  %456 = fmul contract float %454, %455
  %457 = fadd contract float %453, %456
  %458 = load float, float addrspace(3)* %72, align 16, !tbaa !5
  %459 = load float, float addrspace(3)* %74, align 4, !tbaa !5
  %460 = fmul contract float %458, %459
  %461 = fadd contract float %457, %460
  %462 = load float, float addrspace(3)* %78, align 4, !tbaa !5
  %463 = load float, float addrspace(3)* %80, align 4, !tbaa !5
  %464 = fmul contract float %462, %463
  %465 = fadd contract float %461, %464
  %466 = load float, float addrspace(3)* %84, align 8, !tbaa !5
  %467 = load float, float addrspace(3)* %86, align 4, !tbaa !5
  %468 = fmul contract float %466, %467
  %469 = fadd contract float %465, %468
  %470 = load float, float addrspace(3)* %90, align 4, !tbaa !5
  %471 = load float, float addrspace(3)* %92, align 4, !tbaa !5
  %472 = fmul contract float %470, %471
  %473 = fadd contract float %469, %472
  %474 = load float, float addrspace(3)* %96, align 16, !tbaa !5
  %475 = load float, float addrspace(3)* %98, align 4, !tbaa !5
  %476 = fmul contract float %474, %475
  %477 = fadd contract float %473, %476
  %478 = load float, float addrspace(3)* %102, align 4, !tbaa !5
  %479 = load float, float addrspace(3)* %104, align 4, !tbaa !5
  %480 = fmul contract float %478, %479
  %481 = fadd contract float %477, %480
  %482 = load float, float addrspace(3)* %108, align 8, !tbaa !5
  %483 = load float, float addrspace(3)* %110, align 4, !tbaa !5
  %484 = fmul contract float %482, %483
  %485 = fadd contract float %481, %484
  %486 = load float, float addrspace(3)* %114, align 4, !tbaa !5
  %487 = load float, float addrspace(3)* %116, align 4, !tbaa !5
  %488 = fmul contract float %486, %487
  %489 = fadd contract float %485, %488
  %490 = add i32 %11, 96
  %491 = sext i32 %490 to i64
  %492 = getelementptr inbounds float, float addrspace(1)* %0, i64 %491
  %493 = load float, float addrspace(1)* %492, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %493, float addrspace(3)* %12, align 4, !tbaa !5
  %494 = shl nuw nsw i32 %6, 6
  %495 = add nuw nsw i32 %494, 6144
  %496 = add nsw i32 %14, %495
  %497 = sext i32 %496 to i64
  %498 = getelementptr inbounds float, float addrspace(1)* %1, i64 %497
  %499 = load float, float addrspace(1)* %498, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %499, float addrspace(3)* %15, align 4, !tbaa !5
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %500 = load float, float addrspace(3)* %16, align 16, !tbaa !5
  %501 = load float, float addrspace(3)* %26, align 4, !tbaa !5
  %502 = fmul contract float %500, %501
  %503 = fadd contract float %489, %502
  %504 = load float, float addrspace(3)* %30, align 4, !tbaa !5
  %505 = load float, float addrspace(3)* %32, align 4, !tbaa !5
  %506 = fmul contract float %504, %505
  %507 = fadd contract float %503, %506
  %508 = load float, float addrspace(3)* %36, align 8, !tbaa !5
  %509 = load float, float addrspace(3)* %38, align 4, !tbaa !5
  %510 = fmul contract float %508, %509
  %511 = fadd contract float %507, %510
  %512 = load float, float addrspace(3)* %42, align 4, !tbaa !5
  %513 = load float, float addrspace(3)* %44, align 4, !tbaa !5
  %514 = fmul contract float %512, %513
  %515 = fadd contract float %511, %514
  %516 = load float, float addrspace(3)* %48, align 16, !tbaa !5
  %517 = load float, float addrspace(3)* %50, align 4, !tbaa !5
  %518 = fmul contract float %516, %517
  %519 = fadd contract float %515, %518
  %520 = load float, float addrspace(3)* %54, align 4, !tbaa !5
  %521 = load float, float addrspace(3)* %56, align 4, !tbaa !5
  %522 = fmul contract float %520, %521
  %523 = fadd contract float %519, %522
  %524 = load float, float addrspace(3)* %60, align 8, !tbaa !5
  %525 = load float, float addrspace(3)* %62, align 4, !tbaa !5
  %526 = fmul contract float %524, %525
  %527 = fadd contract float %523, %526
  %528 = load float, float addrspace(3)* %66, align 4, !tbaa !5
  %529 = load float, float addrspace(3)* %68, align 4, !tbaa !5
  %530 = fmul contract float %528, %529
  %531 = fadd contract float %527, %530
  %532 = load float, float addrspace(3)* %72, align 16, !tbaa !5
  %533 = load float, float addrspace(3)* %74, align 4, !tbaa !5
  %534 = fmul contract float %532, %533
  %535 = fadd contract float %531, %534
  %536 = load float, float addrspace(3)* %78, align 4, !tbaa !5
  %537 = load float, float addrspace(3)* %80, align 4, !tbaa !5
  %538 = fmul contract float %536, %537
  %539 = fadd contract float %535, %538
  %540 = load float, float addrspace(3)* %84, align 8, !tbaa !5
  %541 = load float, float addrspace(3)* %86, align 4, !tbaa !5
  %542 = fmul contract float %540, %541
  %543 = fadd contract float %539, %542
  %544 = load float, float addrspace(3)* %90, align 4, !tbaa !5
  %545 = load float, float addrspace(3)* %92, align 4, !tbaa !5
  %546 = fmul contract float %544, %545
  %547 = fadd contract float %543, %546
  %548 = load float, float addrspace(3)* %96, align 16, !tbaa !5
  %549 = load float, float addrspace(3)* %98, align 4, !tbaa !5
  %550 = fmul contract float %548, %549
  %551 = fadd contract float %547, %550
  %552 = load float, float addrspace(3)* %102, align 4, !tbaa !5
  %553 = load float, float addrspace(3)* %104, align 4, !tbaa !5
  %554 = fmul contract float %552, %553
  %555 = fadd contract float %551, %554
  %556 = load float, float addrspace(3)* %108, align 8, !tbaa !5
  %557 = load float, float addrspace(3)* %110, align 4, !tbaa !5
  %558 = fmul contract float %556, %557
  %559 = fadd contract float %555, %558
  %560 = load float, float addrspace(3)* %114, align 4, !tbaa !5
  %561 = load float, float addrspace(3)* %116, align 4, !tbaa !5
  %562 = fmul contract float %560, %561
  %563 = fadd contract float %559, %562
  %564 = add i32 %11, 112
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds float, float addrspace(1)* %0, i64 %565
  %567 = load float, float addrspace(1)* %566, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %567, float addrspace(3)* %12, align 4, !tbaa !5
  %568 = shl nuw nsw i32 %6, 6
  %569 = add nuw nsw i32 %568, 7168
  %570 = add nsw i32 %14, %569
  %571 = sext i32 %570 to i64
  %572 = getelementptr inbounds float, float addrspace(1)* %1, i64 %571
  %573 = load float, float addrspace(1)* %572, align 4, !tbaa !5, !amdgpu.noclobber !9
  store float %573, float addrspace(3)* %15, align 4, !tbaa !5
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %574 = load float, float addrspace(3)* %16, align 16, !tbaa !5
  %575 = load float, float addrspace(3)* %26, align 4, !tbaa !5
  %576 = fmul contract float %574, %575
  %577 = fadd contract float %563, %576
  %578 = load float, float addrspace(3)* %30, align 4, !tbaa !5
  %579 = load float, float addrspace(3)* %32, align 4, !tbaa !5
  %580 = fmul contract float %578, %579
  %581 = fadd contract float %577, %580
  %582 = load float, float addrspace(3)* %36, align 8, !tbaa !5
  %583 = load float, float addrspace(3)* %38, align 4, !tbaa !5
  %584 = fmul contract float %582, %583
  %585 = fadd contract float %581, %584
  %586 = load float, float addrspace(3)* %42, align 4, !tbaa !5
  %587 = load float, float addrspace(3)* %44, align 4, !tbaa !5
  %588 = fmul contract float %586, %587
  %589 = fadd contract float %585, %588
  %590 = load float, float addrspace(3)* %48, align 16, !tbaa !5
  %591 = load float, float addrspace(3)* %50, align 4, !tbaa !5
  %592 = fmul contract float %590, %591
  %593 = fadd contract float %589, %592
  %594 = load float, float addrspace(3)* %54, align 4, !tbaa !5
  %595 = load float, float addrspace(3)* %56, align 4, !tbaa !5
  %596 = fmul contract float %594, %595
  %597 = fadd contract float %593, %596
  %598 = load float, float addrspace(3)* %60, align 8, !tbaa !5
  %599 = load float, float addrspace(3)* %62, align 4, !tbaa !5
  %600 = fmul contract float %598, %599
  %601 = fadd contract float %597, %600
  %602 = load float, float addrspace(3)* %66, align 4, !tbaa !5
  %603 = load float, float addrspace(3)* %68, align 4, !tbaa !5
  %604 = fmul contract float %602, %603
  %605 = fadd contract float %601, %604
  %606 = load float, float addrspace(3)* %72, align 16, !tbaa !5
  %607 = load float, float addrspace(3)* %74, align 4, !tbaa !5
  %608 = fmul contract float %606, %607
  %609 = fadd contract float %605, %608
  %610 = load float, float addrspace(3)* %78, align 4, !tbaa !5
  %611 = load float, float addrspace(3)* %80, align 4, !tbaa !5
  %612 = fmul contract float %610, %611
  %613 = fadd contract float %609, %612
  %614 = load float, float addrspace(3)* %84, align 8, !tbaa !5
  %615 = load float, float addrspace(3)* %86, align 4, !tbaa !5
  %616 = fmul contract float %614, %615
  %617 = fadd contract float %613, %616
  %618 = load float, float addrspace(3)* %90, align 4, !tbaa !5
  %619 = load float, float addrspace(3)* %92, align 4, !tbaa !5
  %620 = fmul contract float %618, %619
  %621 = fadd contract float %617, %620
  %622 = load float, float addrspace(3)* %96, align 16, !tbaa !5
  %623 = load float, float addrspace(3)* %98, align 4, !tbaa !5
  %624 = fmul contract float %622, %623
  %625 = fadd contract float %621, %624
  %626 = load float, float addrspace(3)* %102, align 4, !tbaa !5
  %627 = load float, float addrspace(3)* %104, align 4, !tbaa !5
  %628 = fmul contract float %626, %627
  %629 = fadd contract float %625, %628
  %630 = load float, float addrspace(3)* %108, align 8, !tbaa !5
  %631 = load float, float addrspace(3)* %110, align 4, !tbaa !5
  %632 = fmul contract float %630, %631
  %633 = fadd contract float %629, %632
  %634 = load float, float addrspace(3)* %114, align 4, !tbaa !5
  %635 = load float, float addrspace(3)* %116, align 4, !tbaa !5
  %636 = fmul contract float %634, %635
  %637 = fadd contract float %633, %636
  %638 = shl i32 %4, 10
  %639 = add nuw nsw i32 %20, %7
  %640 = add i32 %639, %638
  %641 = add i32 %640, %13
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds float, float addrspace(1)* %2, i64 %642
  store float %637, float addrspace(1)* %643, align 4, !tbaa !5
  ret void
}

; Function Attrs: convergent mustprogress nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.y() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.y() #2

attributes #0 = { convergent mustprogress norecurse nounwind "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{i32 0, i32 1024}
!5 = !{!6, !6, i64 0}
!6 = !{!"float", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{}
