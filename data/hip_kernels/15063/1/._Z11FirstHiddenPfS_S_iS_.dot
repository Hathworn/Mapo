digraph "CFG for '_Z11FirstHiddenPfS_S_iS_' function" {
	label="CFG for '_Z11FirstHiddenPfS_S_iS_' function";

	Node0x5fc7280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %11\l  %14 = add i32 %13, %6\l  %15 = icmp sgt i32 %3, 0\l  br i1 %15, label %16, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5fc7280:s0 -> Node0x5fc9100;
	Node0x5fc7280:s1 -> Node0x5fc9190;
	Node0x5fc9100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%16:\l16:                                               \l  %17 = mul nsw i32 %14, %3\l  %18 = and i32 %3, 7\l  %19 = icmp ult i32 %3, 8\l  br i1 %19, label %22, label %20\l|{<s0>T|<s1>F}}"];
	Node0x5fc9100:s0 -> Node0x5fc9560;
	Node0x5fc9100:s1 -> Node0x5fc95b0;
	Node0x5fc95b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%20:\l20:                                               \l  %21 = and i32 %3, -8\l  br label %56\l}"];
	Node0x5fc95b0 -> Node0x5fc97b0;
	Node0x5fc9560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%22:\l22:                                               \l  %23 = phi float [ undef, %16 ], [ %138, %56 ]\l  %24 = phi float [ 0.000000e+00, %16 ], [ %138, %56 ]\l  %25 = phi i32 [ 0, %16 ], [ %139, %56 ]\l  %26 = icmp eq i32 %18, 0\l  br i1 %26, label %43, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5fc9560:s0 -> Node0x5fc9190;
	Node0x5fc9560:s1 -> Node0x5fcaa20;
	Node0x5fcaa20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%27:\l27:                                               \l  %28 = phi float [ %39, %27 ], [ %24, %22 ]\l  %29 = phi i32 [ %40, %27 ], [ %25, %22 ]\l  %30 = phi i32 [ %41, %27 ], [ 0, %22 ]\l  %31 = zext i32 %29 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %34 = add nsw i32 %29, %17\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %38 = fmul contract float %33, %37\l  %39 = fadd contract float %28, %38\l  %40 = add nuw nsw i32 %29, 1\l  %41 = add i32 %30, 1\l  %42 = icmp eq i32 %41, %18\l  br i1 %42, label %43, label %27, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5fcaa20:s0 -> Node0x5fc9190;
	Node0x5fcaa20:s1 -> Node0x5fcaa20;
	Node0x5fc9190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%43:\l43:                                               \l  %44 = phi float [ 0.000000e+00, %5 ], [ %23, %22 ], [ %39, %27 ]\l  %45 = sext i32 %14 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %2, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %48 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %49 = getelementptr inbounds i8, i8 addrspace(4)* %48, i64 24\l  %50 = bitcast i8 addrspace(4)* %49 to i64 addrspace(4)*\l  %51 = load i64, i64 addrspace(4)* %50, align 8, !tbaa !13\l  %52 = inttoptr i64 %51 to i8 addrspace(1)*\l  %53 = addrspacecast i8 addrspace(1)* %52 to i8*\l  %54 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %55 = extractelement \<2 x i64\> %54, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([21 x i8], [21 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %142, label %146\l|{<s0>T|<s1>F}}"];
	Node0x5fc9190:s0 -> Node0x5fcd5b0;
	Node0x5fc9190:s1 -> Node0x5fcdfc0;
	Node0x5fc97b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%56:\l56:                                               \l  %57 = phi float [ 0.000000e+00, %20 ], [ %138, %56 ]\l  %58 = phi i32 [ 0, %20 ], [ %139, %56 ]\l  %59 = phi i32 [ 0, %20 ], [ %140, %56 ]\l  %60 = zext i32 %58 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %63 = add nsw i32 %58, %17\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %67 = fmul contract float %62, %66\l  %68 = fadd contract float %57, %67\l  %69 = or i32 %58, 1\l  %70 = zext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %73 = add nsw i32 %69, %17\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %77 = fmul contract float %72, %76\l  %78 = fadd contract float %68, %77\l  %79 = or i32 %58, 2\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %83 = add nsw i32 %79, %17\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %87 = fmul contract float %82, %86\l  %88 = fadd contract float %78, %87\l  %89 = or i32 %58, 3\l  %90 = zext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %93 = add nsw i32 %89, %17\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %97 = fmul contract float %92, %96\l  %98 = fadd contract float %88, %97\l  %99 = or i32 %58, 4\l  %100 = zext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %0, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %103 = add nsw i32 %99, %17\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %1, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %107 = fmul contract float %102, %106\l  %108 = fadd contract float %98, %107\l  %109 = or i32 %58, 5\l  %110 = zext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %0, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %113 = add nsw i32 %109, %17\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %1, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %117 = fmul contract float %112, %116\l  %118 = fadd contract float %108, %117\l  %119 = or i32 %58, 6\l  %120 = zext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %0, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %123 = add nsw i32 %119, %17\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %1, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %127 = fmul contract float %122, %126\l  %128 = fadd contract float %118, %127\l  %129 = or i32 %58, 7\l  %130 = zext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %0, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %133 = add nsw i32 %129, %17\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %1, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %137 = fmul contract float %132, %136\l  %138 = fadd contract float %128, %137\l  %139 = add nuw nsw i32 %58, 8\l  %140 = add i32 %59, 8\l  %141 = icmp eq i32 %140, %21\l  br i1 %141, label %22, label %56, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5fc97b0:s0 -> Node0x5fc9560;
	Node0x5fc97b0:s1 -> Node0x5fc97b0;
	Node0x5fcd5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%142:\l142:                                              \l  %143 = and i64 %55, -225\l  %144 = or i64 %143, 32\l  %145 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef %144, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %587\l}"];
	Node0x5fcd5b0 -> Node0x5fd1ce0;
	Node0x5fcdfc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%146:\l146:                                              \l  %147 = and i64 %55, 2\l  %148 = and i64 %55, -3\l  %149 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %148, i64 0\l  br label %150\l}"];
	Node0x5fcdfc0 -> Node0x5fd27f0;
	Node0x5fd27f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%150:\l150:                                              \l  %151 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([21 x i8], [21 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([21 x i8], [21 x i8] addrspace(4)*\l... @.str, i64 0, i64 20) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([21 x i8]* addrspacecast ([21 x i8] addrspace(4)* @.str to [21 x i8]*) to\l... i64)), i64 1))), %146 ], [ %584, %576 ]\l  %152 = phi i8 addrspace(4)* [ getelementptr inbounds ([21 x i8], [21 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %146 ], [ %585, %576 ]\l  %153 = phi \<2 x i64\> [ %149, %146 ], [ %583, %576 ]\l  %154 = icmp ugt i64 %151, 56\l  %155 = extractelement \<2 x i64\> %153, i64 0\l  %156 = or i64 %155, %147\l  %157 = insertelement \<2 x i64\> poison, i64 %156, i64 0\l  %158 = select i1 %154, \<2 x i64\> %153, \<2 x i64\> %157\l  %159 = tail call i64 @llvm.umin.i64(i64 %151, i64 56)\l  %160 = trunc i64 %159 to i32\l  %161 = extractelement \<2 x i64\> %158, i64 0\l  %162 = icmp ugt i32 %160, 7\l  br i1 %162, label %165, label %163\l|{<s0>T|<s1>F}}"];
	Node0x5fd27f0:s0 -> Node0x5fd3660;
	Node0x5fd27f0:s1 -> Node0x5fd36f0;
	Node0x5fd36f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%163:\l163:                                              \l  %164 = icmp eq i32 %160, 0\l  br i1 %164, label %218, label %205\l|{<s0>T|<s1>F}}"];
	Node0x5fd36f0:s0 -> Node0x5fd38c0;
	Node0x5fd36f0:s1 -> Node0x5fd3910;
	Node0x5fd3660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%165:\l165:                                              \l  %166 = load i8, i8 addrspace(4)* %152, align 1, !tbaa !19\l  %167 = zext i8 %166 to i64\l  %168 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 1\l  %169 = load i8, i8 addrspace(4)* %168, align 1, !tbaa !19\l  %170 = zext i8 %169 to i64\l  %171 = shl nuw nsw i64 %170, 8\l  %172 = or i64 %171, %167\l  %173 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 2\l  %174 = load i8, i8 addrspace(4)* %173, align 1, !tbaa !19\l  %175 = zext i8 %174 to i64\l  %176 = shl nuw nsw i64 %175, 16\l  %177 = or i64 %172, %176\l  %178 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 3\l  %179 = load i8, i8 addrspace(4)* %178, align 1, !tbaa !19\l  %180 = zext i8 %179 to i64\l  %181 = shl nuw nsw i64 %180, 24\l  %182 = or i64 %177, %181\l  %183 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 4\l  %184 = load i8, i8 addrspace(4)* %183, align 1, !tbaa !19\l  %185 = zext i8 %184 to i64\l  %186 = shl nuw nsw i64 %185, 32\l  %187 = or i64 %182, %186\l  %188 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 5\l  %189 = load i8, i8 addrspace(4)* %188, align 1, !tbaa !19\l  %190 = zext i8 %189 to i64\l  %191 = shl nuw nsw i64 %190, 40\l  %192 = or i64 %187, %191\l  %193 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 6\l  %194 = load i8, i8 addrspace(4)* %193, align 1, !tbaa !19\l  %195 = zext i8 %194 to i64\l  %196 = shl nuw nsw i64 %195, 48\l  %197 = or i64 %192, %196\l  %198 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 7\l  %199 = load i8, i8 addrspace(4)* %198, align 1, !tbaa !19\l  %200 = zext i8 %199 to i64\l  %201 = shl nuw i64 %200, 56\l  %202 = or i64 %197, %201\l  %203 = add nsw i32 %160, -8\l  %204 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 8\l  br label %218\l}"];
	Node0x5fd3660 -> Node0x5fd38c0;
	Node0x5fd3910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%205:\l205:                                              \l  %206 = phi i32 [ %216, %205 ], [ 0, %163 ]\l  %207 = phi i64 [ %215, %205 ], [ 0, %163 ]\l  %208 = zext i32 %206 to i64\l  %209 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 %208\l  %210 = load i8, i8 addrspace(4)* %209, align 1, !tbaa !19\l  %211 = zext i8 %210 to i64\l  %212 = shl i32 %206, 3\l  %213 = zext i32 %212 to i64\l  %214 = shl nuw i64 %211, %213\l  %215 = or i64 %214, %207\l  %216 = add nuw nsw i32 %206, 1\l  %217 = icmp eq i32 %216, %160\l  br i1 %217, label %218, label %205, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5fd3910:s0 -> Node0x5fd38c0;
	Node0x5fd3910:s1 -> Node0x5fd3910;
	Node0x5fd38c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%218:\l218:                                              \l  %219 = phi i8 addrspace(4)* [ %204, %165 ], [ %152, %163 ], [ %152, %205 ]\l  %220 = phi i32 [ %203, %165 ], [ 0, %163 ], [ 0, %205 ]\l  %221 = phi i64 [ %202, %165 ], [ 0, %163 ], [ %215, %205 ]\l  %222 = icmp ugt i32 %220, 7\l  br i1 %222, label %225, label %223\l|{<s0>T|<s1>F}}"];
	Node0x5fd38c0:s0 -> Node0x5fd6380;
	Node0x5fd38c0:s1 -> Node0x5fd63d0;
	Node0x5fd63d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%223:\l223:                                              \l  %224 = icmp eq i32 %220, 0\l  br i1 %224, label %278, label %265\l|{<s0>T|<s1>F}}"];
	Node0x5fd63d0:s0 -> Node0x5fd65a0;
	Node0x5fd63d0:s1 -> Node0x5fd65f0;
	Node0x5fd6380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%225:\l225:                                              \l  %226 = load i8, i8 addrspace(4)* %219, align 1, !tbaa !19\l  %227 = zext i8 %226 to i64\l  %228 = getelementptr inbounds i8, i8 addrspace(4)* %219, i64 1\l  %229 = load i8, i8 addrspace(4)* %228, align 1, !tbaa !19\l  %230 = zext i8 %229 to i64\l  %231 = shl nuw nsw i64 %230, 8\l  %232 = or i64 %231, %227\l  %233 = getelementptr inbounds i8, i8 addrspace(4)* %219, i64 2\l  %234 = load i8, i8 addrspace(4)* %233, align 1, !tbaa !19\l  %235 = zext i8 %234 to i64\l  %236 = shl nuw nsw i64 %235, 16\l  %237 = or i64 %232, %236\l  %238 = getelementptr inbounds i8, i8 addrspace(4)* %219, i64 3\l  %239 = load i8, i8 addrspace(4)* %238, align 1, !tbaa !19\l  %240 = zext i8 %239 to i64\l  %241 = shl nuw nsw i64 %240, 24\l  %242 = or i64 %237, %241\l  %243 = getelementptr inbounds i8, i8 addrspace(4)* %219, i64 4\l  %244 = load i8, i8 addrspace(4)* %243, align 1, !tbaa !19\l  %245 = zext i8 %244 to i64\l  %246 = shl nuw nsw i64 %245, 32\l  %247 = or i64 %242, %246\l  %248 = getelementptr inbounds i8, i8 addrspace(4)* %219, i64 5\l  %249 = load i8, i8 addrspace(4)* %248, align 1, !tbaa !19\l  %250 = zext i8 %249 to i64\l  %251 = shl nuw nsw i64 %250, 40\l  %252 = or i64 %247, %251\l  %253 = getelementptr inbounds i8, i8 addrspace(4)* %219, i64 6\l  %254 = load i8, i8 addrspace(4)* %253, align 1, !tbaa !19\l  %255 = zext i8 %254 to i64\l  %256 = shl nuw nsw i64 %255, 48\l  %257 = or i64 %252, %256\l  %258 = getelementptr inbounds i8, i8 addrspace(4)* %219, i64 7\l  %259 = load i8, i8 addrspace(4)* %258, align 1, !tbaa !19\l  %260 = zext i8 %259 to i64\l  %261 = shl nuw i64 %260, 56\l  %262 = or i64 %257, %261\l  %263 = add nsw i32 %220, -8\l  %264 = getelementptr inbounds i8, i8 addrspace(4)* %219, i64 8\l  br label %278\l}"];
	Node0x5fd6380 -> Node0x5fd65a0;
	Node0x5fd65f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%265:\l265:                                              \l  %266 = phi i32 [ %276, %265 ], [ 0, %223 ]\l  %267 = phi i64 [ %275, %265 ], [ 0, %223 ]\l  %268 = zext i32 %266 to i64\l  %269 = getelementptr inbounds i8, i8 addrspace(4)* %219, i64 %268\l  %270 = load i8, i8 addrspace(4)* %269, align 1, !tbaa !19\l  %271 = zext i8 %270 to i64\l  %272 = shl i32 %266, 3\l  %273 = zext i32 %272 to i64\l  %274 = shl nuw i64 %271, %273\l  %275 = or i64 %274, %267\l  %276 = add nuw nsw i32 %266, 1\l  %277 = icmp eq i32 %276, %220\l  br i1 %277, label %278, label %265\l|{<s0>T|<s1>F}}"];
	Node0x5fd65f0:s0 -> Node0x5fd65a0;
	Node0x5fd65f0:s1 -> Node0x5fd65f0;
	Node0x5fd65a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%278:\l278:                                              \l  %279 = phi i8 addrspace(4)* [ %264, %225 ], [ %219, %223 ], [ %219, %265 ]\l  %280 = phi i32 [ %263, %225 ], [ 0, %223 ], [ 0, %265 ]\l  %281 = phi i64 [ %262, %225 ], [ 0, %223 ], [ %275, %265 ]\l  %282 = icmp ugt i32 %280, 7\l  br i1 %282, label %285, label %283\l|{<s0>T|<s1>F}}"];
	Node0x5fd65a0:s0 -> Node0x5fd8e60;
	Node0x5fd65a0:s1 -> Node0x5fd8eb0;
	Node0x5fd8eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%283:\l283:                                              \l  %284 = icmp eq i32 %280, 0\l  br i1 %284, label %338, label %325\l|{<s0>T|<s1>F}}"];
	Node0x5fd8eb0:s0 -> Node0x5fd9040;
	Node0x5fd8eb0:s1 -> Node0x5fd9090;
	Node0x5fd8e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%285:\l285:                                              \l  %286 = load i8, i8 addrspace(4)* %279, align 1, !tbaa !19\l  %287 = zext i8 %286 to i64\l  %288 = getelementptr inbounds i8, i8 addrspace(4)* %279, i64 1\l  %289 = load i8, i8 addrspace(4)* %288, align 1, !tbaa !19\l  %290 = zext i8 %289 to i64\l  %291 = shl nuw nsw i64 %290, 8\l  %292 = or i64 %291, %287\l  %293 = getelementptr inbounds i8, i8 addrspace(4)* %279, i64 2\l  %294 = load i8, i8 addrspace(4)* %293, align 1, !tbaa !19\l  %295 = zext i8 %294 to i64\l  %296 = shl nuw nsw i64 %295, 16\l  %297 = or i64 %292, %296\l  %298 = getelementptr inbounds i8, i8 addrspace(4)* %279, i64 3\l  %299 = load i8, i8 addrspace(4)* %298, align 1, !tbaa !19\l  %300 = zext i8 %299 to i64\l  %301 = shl nuw nsw i64 %300, 24\l  %302 = or i64 %297, %301\l  %303 = getelementptr inbounds i8, i8 addrspace(4)* %279, i64 4\l  %304 = load i8, i8 addrspace(4)* %303, align 1, !tbaa !19\l  %305 = zext i8 %304 to i64\l  %306 = shl nuw nsw i64 %305, 32\l  %307 = or i64 %302, %306\l  %308 = getelementptr inbounds i8, i8 addrspace(4)* %279, i64 5\l  %309 = load i8, i8 addrspace(4)* %308, align 1, !tbaa !19\l  %310 = zext i8 %309 to i64\l  %311 = shl nuw nsw i64 %310, 40\l  %312 = or i64 %307, %311\l  %313 = getelementptr inbounds i8, i8 addrspace(4)* %279, i64 6\l  %314 = load i8, i8 addrspace(4)* %313, align 1, !tbaa !19\l  %315 = zext i8 %314 to i64\l  %316 = shl nuw nsw i64 %315, 48\l  %317 = or i64 %312, %316\l  %318 = getelementptr inbounds i8, i8 addrspace(4)* %279, i64 7\l  %319 = load i8, i8 addrspace(4)* %318, align 1, !tbaa !19\l  %320 = zext i8 %319 to i64\l  %321 = shl nuw i64 %320, 56\l  %322 = or i64 %317, %321\l  %323 = add nsw i32 %280, -8\l  %324 = getelementptr inbounds i8, i8 addrspace(4)* %279, i64 8\l  br label %338\l}"];
	Node0x5fd8e60 -> Node0x5fd9040;
	Node0x5fd9090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%325:\l325:                                              \l  %326 = phi i32 [ %336, %325 ], [ 0, %283 ]\l  %327 = phi i64 [ %335, %325 ], [ 0, %283 ]\l  %328 = zext i32 %326 to i64\l  %329 = getelementptr inbounds i8, i8 addrspace(4)* %279, i64 %328\l  %330 = load i8, i8 addrspace(4)* %329, align 1, !tbaa !19\l  %331 = zext i8 %330 to i64\l  %332 = shl i32 %326, 3\l  %333 = zext i32 %332 to i64\l  %334 = shl nuw i64 %331, %333\l  %335 = or i64 %334, %327\l  %336 = add nuw nsw i32 %326, 1\l  %337 = icmp eq i32 %336, %280\l  br i1 %337, label %338, label %325\l|{<s0>T|<s1>F}}"];
	Node0x5fd9090:s0 -> Node0x5fd9040;
	Node0x5fd9090:s1 -> Node0x5fd9090;
	Node0x5fd9040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%338:\l338:                                              \l  %339 = phi i8 addrspace(4)* [ %324, %285 ], [ %279, %283 ], [ %279, %325 ]\l  %340 = phi i32 [ %323, %285 ], [ 0, %283 ], [ 0, %325 ]\l  %341 = phi i64 [ %322, %285 ], [ 0, %283 ], [ %335, %325 ]\l  %342 = icmp ugt i32 %340, 7\l  br i1 %342, label %345, label %343\l|{<s0>T|<s1>F}}"];
	Node0x5fd9040:s0 -> Node0x5fdbac0;
	Node0x5fd9040:s1 -> Node0x5fdbb10;
	Node0x5fdbb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%343:\l343:                                              \l  %344 = icmp eq i32 %340, 0\l  br i1 %344, label %398, label %385\l|{<s0>T|<s1>F}}"];
	Node0x5fdbb10:s0 -> Node0x5fdbca0;
	Node0x5fdbb10:s1 -> Node0x5fdbcf0;
	Node0x5fdbac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%345:\l345:                                              \l  %346 = load i8, i8 addrspace(4)* %339, align 1, !tbaa !19\l  %347 = zext i8 %346 to i64\l  %348 = getelementptr inbounds i8, i8 addrspace(4)* %339, i64 1\l  %349 = load i8, i8 addrspace(4)* %348, align 1, !tbaa !19\l  %350 = zext i8 %349 to i64\l  %351 = shl nuw nsw i64 %350, 8\l  %352 = or i64 %351, %347\l  %353 = getelementptr inbounds i8, i8 addrspace(4)* %339, i64 2\l  %354 = load i8, i8 addrspace(4)* %353, align 1, !tbaa !19\l  %355 = zext i8 %354 to i64\l  %356 = shl nuw nsw i64 %355, 16\l  %357 = or i64 %352, %356\l  %358 = getelementptr inbounds i8, i8 addrspace(4)* %339, i64 3\l  %359 = load i8, i8 addrspace(4)* %358, align 1, !tbaa !19\l  %360 = zext i8 %359 to i64\l  %361 = shl nuw nsw i64 %360, 24\l  %362 = or i64 %357, %361\l  %363 = getelementptr inbounds i8, i8 addrspace(4)* %339, i64 4\l  %364 = load i8, i8 addrspace(4)* %363, align 1, !tbaa !19\l  %365 = zext i8 %364 to i64\l  %366 = shl nuw nsw i64 %365, 32\l  %367 = or i64 %362, %366\l  %368 = getelementptr inbounds i8, i8 addrspace(4)* %339, i64 5\l  %369 = load i8, i8 addrspace(4)* %368, align 1, !tbaa !19\l  %370 = zext i8 %369 to i64\l  %371 = shl nuw nsw i64 %370, 40\l  %372 = or i64 %367, %371\l  %373 = getelementptr inbounds i8, i8 addrspace(4)* %339, i64 6\l  %374 = load i8, i8 addrspace(4)* %373, align 1, !tbaa !19\l  %375 = zext i8 %374 to i64\l  %376 = shl nuw nsw i64 %375, 48\l  %377 = or i64 %372, %376\l  %378 = getelementptr inbounds i8, i8 addrspace(4)* %339, i64 7\l  %379 = load i8, i8 addrspace(4)* %378, align 1, !tbaa !19\l  %380 = zext i8 %379 to i64\l  %381 = shl nuw i64 %380, 56\l  %382 = or i64 %377, %381\l  %383 = add nsw i32 %340, -8\l  %384 = getelementptr inbounds i8, i8 addrspace(4)* %339, i64 8\l  br label %398\l}"];
	Node0x5fdbac0 -> Node0x5fdbca0;
	Node0x5fdbcf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%385:\l385:                                              \l  %386 = phi i32 [ %396, %385 ], [ 0, %343 ]\l  %387 = phi i64 [ %395, %385 ], [ 0, %343 ]\l  %388 = zext i32 %386 to i64\l  %389 = getelementptr inbounds i8, i8 addrspace(4)* %339, i64 %388\l  %390 = load i8, i8 addrspace(4)* %389, align 1, !tbaa !19\l  %391 = zext i8 %390 to i64\l  %392 = shl i32 %386, 3\l  %393 = zext i32 %392 to i64\l  %394 = shl nuw i64 %391, %393\l  %395 = or i64 %394, %387\l  %396 = add nuw nsw i32 %386, 1\l  %397 = icmp eq i32 %396, %340\l  br i1 %397, label %398, label %385\l|{<s0>T|<s1>F}}"];
	Node0x5fdbcf0:s0 -> Node0x5fdbca0;
	Node0x5fdbcf0:s1 -> Node0x5fdbcf0;
	Node0x5fdbca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%398:\l398:                                              \l  %399 = phi i8 addrspace(4)* [ %384, %345 ], [ %339, %343 ], [ %339, %385 ]\l  %400 = phi i32 [ %383, %345 ], [ 0, %343 ], [ 0, %385 ]\l  %401 = phi i64 [ %382, %345 ], [ 0, %343 ], [ %395, %385 ]\l  %402 = icmp ugt i32 %400, 7\l  br i1 %402, label %405, label %403\l|{<s0>T|<s1>F}}"];
	Node0x5fdbca0:s0 -> Node0x5fddd10;
	Node0x5fdbca0:s1 -> Node0x5fddd60;
	Node0x5fddd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%403:\l403:                                              \l  %404 = icmp eq i32 %400, 0\l  br i1 %404, label %458, label %445\l|{<s0>T|<s1>F}}"];
	Node0x5fddd60:s0 -> Node0x5fddef0;
	Node0x5fddd60:s1 -> Node0x5fddf40;
	Node0x5fddd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%405:\l405:                                              \l  %406 = load i8, i8 addrspace(4)* %399, align 1, !tbaa !19\l  %407 = zext i8 %406 to i64\l  %408 = getelementptr inbounds i8, i8 addrspace(4)* %399, i64 1\l  %409 = load i8, i8 addrspace(4)* %408, align 1, !tbaa !19\l  %410 = zext i8 %409 to i64\l  %411 = shl nuw nsw i64 %410, 8\l  %412 = or i64 %411, %407\l  %413 = getelementptr inbounds i8, i8 addrspace(4)* %399, i64 2\l  %414 = load i8, i8 addrspace(4)* %413, align 1, !tbaa !19\l  %415 = zext i8 %414 to i64\l  %416 = shl nuw nsw i64 %415, 16\l  %417 = or i64 %412, %416\l  %418 = getelementptr inbounds i8, i8 addrspace(4)* %399, i64 3\l  %419 = load i8, i8 addrspace(4)* %418, align 1, !tbaa !19\l  %420 = zext i8 %419 to i64\l  %421 = shl nuw nsw i64 %420, 24\l  %422 = or i64 %417, %421\l  %423 = getelementptr inbounds i8, i8 addrspace(4)* %399, i64 4\l  %424 = load i8, i8 addrspace(4)* %423, align 1, !tbaa !19\l  %425 = zext i8 %424 to i64\l  %426 = shl nuw nsw i64 %425, 32\l  %427 = or i64 %422, %426\l  %428 = getelementptr inbounds i8, i8 addrspace(4)* %399, i64 5\l  %429 = load i8, i8 addrspace(4)* %428, align 1, !tbaa !19\l  %430 = zext i8 %429 to i64\l  %431 = shl nuw nsw i64 %430, 40\l  %432 = or i64 %427, %431\l  %433 = getelementptr inbounds i8, i8 addrspace(4)* %399, i64 6\l  %434 = load i8, i8 addrspace(4)* %433, align 1, !tbaa !19\l  %435 = zext i8 %434 to i64\l  %436 = shl nuw nsw i64 %435, 48\l  %437 = or i64 %432, %436\l  %438 = getelementptr inbounds i8, i8 addrspace(4)* %399, i64 7\l  %439 = load i8, i8 addrspace(4)* %438, align 1, !tbaa !19\l  %440 = zext i8 %439 to i64\l  %441 = shl nuw i64 %440, 56\l  %442 = or i64 %437, %441\l  %443 = add nsw i32 %400, -8\l  %444 = getelementptr inbounds i8, i8 addrspace(4)* %399, i64 8\l  br label %458\l}"];
	Node0x5fddd10 -> Node0x5fddef0;
	Node0x5fddf40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%445:\l445:                                              \l  %446 = phi i32 [ %456, %445 ], [ 0, %403 ]\l  %447 = phi i64 [ %455, %445 ], [ 0, %403 ]\l  %448 = zext i32 %446 to i64\l  %449 = getelementptr inbounds i8, i8 addrspace(4)* %399, i64 %448\l  %450 = load i8, i8 addrspace(4)* %449, align 1, !tbaa !19\l  %451 = zext i8 %450 to i64\l  %452 = shl i32 %446, 3\l  %453 = zext i32 %452 to i64\l  %454 = shl nuw i64 %451, %453\l  %455 = or i64 %454, %447\l  %456 = add nuw nsw i32 %446, 1\l  %457 = icmp eq i32 %456, %400\l  br i1 %457, label %458, label %445\l|{<s0>T|<s1>F}}"];
	Node0x5fddf40:s0 -> Node0x5fddef0;
	Node0x5fddf40:s1 -> Node0x5fddf40;
	Node0x5fddef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%458:\l458:                                              \l  %459 = phi i8 addrspace(4)* [ %444, %405 ], [ %399, %403 ], [ %399, %445 ]\l  %460 = phi i32 [ %443, %405 ], [ 0, %403 ], [ 0, %445 ]\l  %461 = phi i64 [ %442, %405 ], [ 0, %403 ], [ %455, %445 ]\l  %462 = icmp ugt i32 %460, 7\l  br i1 %462, label %465, label %463\l|{<s0>T|<s1>F}}"];
	Node0x5fddef0:s0 -> Node0x5fe0370;
	Node0x5fddef0:s1 -> Node0x5fe03c0;
	Node0x5fe03c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%463:\l463:                                              \l  %464 = icmp eq i32 %460, 0\l  br i1 %464, label %518, label %505\l|{<s0>T|<s1>F}}"];
	Node0x5fe03c0:s0 -> Node0x5fe0550;
	Node0x5fe03c0:s1 -> Node0x5fe05a0;
	Node0x5fe0370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%465:\l465:                                              \l  %466 = load i8, i8 addrspace(4)* %459, align 1, !tbaa !19\l  %467 = zext i8 %466 to i64\l  %468 = getelementptr inbounds i8, i8 addrspace(4)* %459, i64 1\l  %469 = load i8, i8 addrspace(4)* %468, align 1, !tbaa !19\l  %470 = zext i8 %469 to i64\l  %471 = shl nuw nsw i64 %470, 8\l  %472 = or i64 %471, %467\l  %473 = getelementptr inbounds i8, i8 addrspace(4)* %459, i64 2\l  %474 = load i8, i8 addrspace(4)* %473, align 1, !tbaa !19\l  %475 = zext i8 %474 to i64\l  %476 = shl nuw nsw i64 %475, 16\l  %477 = or i64 %472, %476\l  %478 = getelementptr inbounds i8, i8 addrspace(4)* %459, i64 3\l  %479 = load i8, i8 addrspace(4)* %478, align 1, !tbaa !19\l  %480 = zext i8 %479 to i64\l  %481 = shl nuw nsw i64 %480, 24\l  %482 = or i64 %477, %481\l  %483 = getelementptr inbounds i8, i8 addrspace(4)* %459, i64 4\l  %484 = load i8, i8 addrspace(4)* %483, align 1, !tbaa !19\l  %485 = zext i8 %484 to i64\l  %486 = shl nuw nsw i64 %485, 32\l  %487 = or i64 %482, %486\l  %488 = getelementptr inbounds i8, i8 addrspace(4)* %459, i64 5\l  %489 = load i8, i8 addrspace(4)* %488, align 1, !tbaa !19\l  %490 = zext i8 %489 to i64\l  %491 = shl nuw nsw i64 %490, 40\l  %492 = or i64 %487, %491\l  %493 = getelementptr inbounds i8, i8 addrspace(4)* %459, i64 6\l  %494 = load i8, i8 addrspace(4)* %493, align 1, !tbaa !19\l  %495 = zext i8 %494 to i64\l  %496 = shl nuw nsw i64 %495, 48\l  %497 = or i64 %492, %496\l  %498 = getelementptr inbounds i8, i8 addrspace(4)* %459, i64 7\l  %499 = load i8, i8 addrspace(4)* %498, align 1, !tbaa !19\l  %500 = zext i8 %499 to i64\l  %501 = shl nuw i64 %500, 56\l  %502 = or i64 %497, %501\l  %503 = add nsw i32 %460, -8\l  %504 = getelementptr inbounds i8, i8 addrspace(4)* %459, i64 8\l  br label %518\l}"];
	Node0x5fe0370 -> Node0x5fe0550;
	Node0x5fe05a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%505:\l505:                                              \l  %506 = phi i32 [ %516, %505 ], [ 0, %463 ]\l  %507 = phi i64 [ %515, %505 ], [ 0, %463 ]\l  %508 = zext i32 %506 to i64\l  %509 = getelementptr inbounds i8, i8 addrspace(4)* %459, i64 %508\l  %510 = load i8, i8 addrspace(4)* %509, align 1, !tbaa !19\l  %511 = zext i8 %510 to i64\l  %512 = shl i32 %506, 3\l  %513 = zext i32 %512 to i64\l  %514 = shl nuw i64 %511, %513\l  %515 = or i64 %514, %507\l  %516 = add nuw nsw i32 %506, 1\l  %517 = icmp eq i32 %516, %460\l  br i1 %517, label %518, label %505\l|{<s0>T|<s1>F}}"];
	Node0x5fe05a0:s0 -> Node0x5fe0550;
	Node0x5fe05a0:s1 -> Node0x5fe05a0;
	Node0x5fe0550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%518:\l518:                                              \l  %519 = phi i8 addrspace(4)* [ %504, %465 ], [ %459, %463 ], [ %459, %505 ]\l  %520 = phi i32 [ %503, %465 ], [ 0, %463 ], [ 0, %505 ]\l  %521 = phi i64 [ %502, %465 ], [ 0, %463 ], [ %515, %505 ]\l  %522 = icmp ugt i32 %520, 7\l  br i1 %522, label %525, label %523\l|{<s0>T|<s1>F}}"];
	Node0x5fe0550:s0 -> Node0x5fd7da0;
	Node0x5fe0550:s1 -> Node0x5fd7df0;
	Node0x5fd7df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%523:\l523:                                              \l  %524 = icmp eq i32 %520, 0\l  br i1 %524, label %576, label %563\l|{<s0>T|<s1>F}}"];
	Node0x5fd7df0:s0 -> Node0x5fd2bc0;
	Node0x5fd7df0:s1 -> Node0x5fd7f80;
	Node0x5fd7da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%525:\l525:                                              \l  %526 = load i8, i8 addrspace(4)* %519, align 1, !tbaa !19\l  %527 = zext i8 %526 to i64\l  %528 = getelementptr inbounds i8, i8 addrspace(4)* %519, i64 1\l  %529 = load i8, i8 addrspace(4)* %528, align 1, !tbaa !19\l  %530 = zext i8 %529 to i64\l  %531 = shl nuw nsw i64 %530, 8\l  %532 = or i64 %531, %527\l  %533 = getelementptr inbounds i8, i8 addrspace(4)* %519, i64 2\l  %534 = load i8, i8 addrspace(4)* %533, align 1, !tbaa !19\l  %535 = zext i8 %534 to i64\l  %536 = shl nuw nsw i64 %535, 16\l  %537 = or i64 %532, %536\l  %538 = getelementptr inbounds i8, i8 addrspace(4)* %519, i64 3\l  %539 = load i8, i8 addrspace(4)* %538, align 1, !tbaa !19\l  %540 = zext i8 %539 to i64\l  %541 = shl nuw nsw i64 %540, 24\l  %542 = or i64 %537, %541\l  %543 = getelementptr inbounds i8, i8 addrspace(4)* %519, i64 4\l  %544 = load i8, i8 addrspace(4)* %543, align 1, !tbaa !19\l  %545 = zext i8 %544 to i64\l  %546 = shl nuw nsw i64 %545, 32\l  %547 = or i64 %542, %546\l  %548 = getelementptr inbounds i8, i8 addrspace(4)* %519, i64 5\l  %549 = load i8, i8 addrspace(4)* %548, align 1, !tbaa !19\l  %550 = zext i8 %549 to i64\l  %551 = shl nuw nsw i64 %550, 40\l  %552 = or i64 %547, %551\l  %553 = getelementptr inbounds i8, i8 addrspace(4)* %519, i64 6\l  %554 = load i8, i8 addrspace(4)* %553, align 1, !tbaa !19\l  %555 = zext i8 %554 to i64\l  %556 = shl nuw nsw i64 %555, 48\l  %557 = or i64 %552, %556\l  %558 = getelementptr inbounds i8, i8 addrspace(4)* %519, i64 7\l  %559 = load i8, i8 addrspace(4)* %558, align 1, !tbaa !19\l  %560 = zext i8 %559 to i64\l  %561 = shl nuw i64 %560, 56\l  %562 = or i64 %557, %561\l  br label %576\l}"];
	Node0x5fd7da0 -> Node0x5fd2bc0;
	Node0x5fd7f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%563:\l563:                                              \l  %564 = phi i32 [ %574, %563 ], [ 0, %523 ]\l  %565 = phi i64 [ %573, %563 ], [ 0, %523 ]\l  %566 = zext i32 %564 to i64\l  %567 = getelementptr inbounds i8, i8 addrspace(4)* %519, i64 %566\l  %568 = load i8, i8 addrspace(4)* %567, align 1, !tbaa !19\l  %569 = zext i8 %568 to i64\l  %570 = shl i32 %564, 3\l  %571 = zext i32 %570 to i64\l  %572 = shl nuw i64 %569, %571\l  %573 = or i64 %572, %565\l  %574 = add nuw nsw i32 %564, 1\l  %575 = icmp eq i32 %574, %520\l  br i1 %575, label %576, label %563\l|{<s0>T|<s1>F}}"];
	Node0x5fd7f80:s0 -> Node0x5fd2bc0;
	Node0x5fd7f80:s1 -> Node0x5fd7f80;
	Node0x5fd2bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%576:\l576:                                              \l  %577 = phi i64 [ %562, %525 ], [ 0, %523 ], [ %573, %563 ]\l  %578 = shl nuw nsw i64 %159, 2\l  %579 = add nuw nsw i64 %578, 28\l  %580 = and i64 %579, 480\l  %581 = and i64 %161, -225\l  %582 = or i64 %581, %580\l  %583 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef %582, i64 noundef %221, i64 noundef %281, i64 noundef %341, i64\l... noundef %401, i64 noundef %461, i64 noundef %521, i64 noundef %577) #10\l  %584 = sub i64 %151, %159\l  %585 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 %159\l  %586 = icmp eq i64 %584, 0\l  br i1 %586, label %587, label %150\l|{<s0>T|<s1>F}}"];
	Node0x5fd2bc0:s0 -> Node0x5fd1ce0;
	Node0x5fd2bc0:s1 -> Node0x5fd27f0;
	Node0x5fd1ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%587:\l587:                                              \l  %588 = phi \<2 x i64\> [ %145, %142 ], [ %583, %576 ]\l  %589 = fpext float %44 to double\l  %590 = fpext float %47 to double\l  %591 = extractelement \<2 x i64\> %588, i64 0\l  %592 = bitcast double %589 to i64\l  %593 = and i64 %591, -225\l  %594 = or i64 %593, 32\l  %595 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef %594, i64 noundef %592, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %596 = extractelement \<2 x i64\> %595, i64 0\l  %597 = bitcast double %590 to i64\l  %598 = and i64 %596, -227\l  %599 = or i64 %598, 34\l  %600 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef %599, i64 noundef %597, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %601 = load float, float addrspace(1)* %46, align 4, !tbaa !7\l  %602 = fadd contract float %44, %601\l  %603 = fneg contract float %602\l  %604 = fmul float %602, 0xBFF7154760000000\l  %605 = tail call float @llvm.rint.f32(float %604)\l  %606 = fcmp olt float %602, 0xC0562E4300000000\l  %607 = fcmp ogt float %602, 0x4059D1DA00000000\l  %608 = fneg float %604\l  %609 = tail call float @llvm.fma.f32(float %603, float 0x3FF7154760000000,\l... float %608)\l  %610 = tail call float @llvm.fma.f32(float %603, float 0x3E54AE0BE0000000,\l... float %609)\l  %611 = fsub float %604, %605\l  %612 = fadd float %610, %611\l  %613 = tail call float @llvm.exp2.f32(float %612)\l  %614 = fptosi float %605 to i32\l  %615 = tail call float @llvm.amdgcn.ldexp.f32(float %613, i32 %614)\l  %616 = fadd contract float %615, 1.000000e+00\l  %617 = fdiv contract float 1.000000e+00, %616\l  %618 = select i1 %607, float 1.000000e+00, float %617\l  %619 = select i1 %606, float 0.000000e+00, float %618\l  %620 = getelementptr inbounds float, float addrspace(1)* %4, i64 %45\l  store float %619, float addrspace(1)* %620, align 4, !tbaa !7\l  ret void\l}"];
}
