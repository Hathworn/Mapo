digraph "CFG for '_Z9ApplyMat3PfS_S_' function" {
	label="CFG for '_Z9ApplyMat3PfS_S_' function";

	Node0x627fc40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = add i32 %11, %4\l  %13 = mul nsw i32 %12, 148\l  %14 = getelementptr inbounds float, float addrspace(1)* %2, i64 1\l  %15 = getelementptr inbounds float, float addrspace(1)* %2, i64 2\l  %16 = getelementptr inbounds float, float addrspace(1)* %2, i64 3\l  %17 = getelementptr inbounds float, float addrspace(1)* %2, i64 4\l  %18 = getelementptr inbounds float, float addrspace(1)* %2, i64 5\l  %19 = getelementptr inbounds float, float addrspace(1)* %2, i64 6\l  %20 = getelementptr inbounds float, float addrspace(1)* %2, i64 7\l  %21 = getelementptr inbounds float, float addrspace(1)* %2, i64 8\l  %22 = mul nsw i32 %12, 146\l  br label %24\l}"];
	Node0x627fc40 -> Node0x62822a0;
	Node0x62823a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%23:\l23:                                               \l  ret void\l}"];
	Node0x62822a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ 0, %3 ], [ %161, %24 ]\l  %26 = add nsw i32 %25, %13\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %30 = load float, float addrspace(1)* %2, align 4, !tbaa !7\l  %31 = fmul contract float %29, %30\l  %32 = fadd contract float %31, 0.000000e+00\l  %33 = or i32 %26, 1\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7\l  %37 = load float, float addrspace(1)* %14, align 4, !tbaa !7\l  %38 = fmul contract float %36, %37\l  %39 = fadd contract float %32, %38\l  %40 = add nsw i32 %26, 2\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7\l  %44 = load float, float addrspace(1)* %15, align 4, !tbaa !7\l  %45 = fmul contract float %43, %44\l  %46 = fadd contract float %39, %45\l  %47 = add nsw i32 %26, 148\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7\l  %51 = load float, float addrspace(1)* %16, align 4, !tbaa !7\l  %52 = fmul contract float %50, %51\l  %53 = fadd contract float %46, %52\l  %54 = add nsw i32 %26, 149\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7\l  %58 = load float, float addrspace(1)* %17, align 4, !tbaa !7\l  %59 = fmul contract float %57, %58\l  %60 = fadd contract float %53, %59\l  %61 = add nsw i32 %26, 150\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7\l  %65 = load float, float addrspace(1)* %18, align 4, !tbaa !7\l  %66 = fmul contract float %64, %65\l  %67 = fadd contract float %60, %66\l  %68 = add nsw i32 %26, 296\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %0, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7\l  %72 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  %73 = fmul contract float %71, %72\l  %74 = fadd contract float %67, %73\l  %75 = add nsw i32 %26, 297\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !7\l  %79 = load float, float addrspace(1)* %20, align 4, !tbaa !7\l  %80 = fmul contract float %78, %79\l  %81 = fadd contract float %74, %80\l  %82 = add nsw i32 %26, 298\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !7\l  %86 = load float, float addrspace(1)* %21, align 4, !tbaa !7\l  %87 = fmul contract float %85, %86\l  %88 = fadd contract float %81, %87\l  %89 = tail call float @llvm.maxnum.f32(float %88, float 0.000000e+00)\l  %90 = add nsw i32 %25, %22\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %1, i64 %91\l  store float %89, float addrspace(1)* %92, align 4, !tbaa !7\l  %93 = or i32 %25, 1\l  %94 = add nsw i32 %93, %13\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %0, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !7\l  %98 = load float, float addrspace(1)* %2, align 4, !tbaa !7\l  %99 = fmul contract float %97, %98\l  %100 = fadd contract float %99, 0.000000e+00\l  %101 = add nsw i32 %94, 1\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %0, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !7\l  %105 = load float, float addrspace(1)* %14, align 4, !tbaa !7\l  %106 = fmul contract float %104, %105\l  %107 = fadd contract float %100, %106\l  %108 = add nsw i32 %94, 2\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %0, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !7\l  %112 = load float, float addrspace(1)* %15, align 4, !tbaa !7\l  %113 = fmul contract float %111, %112\l  %114 = fadd contract float %107, %113\l  %115 = add nsw i32 %94, 148\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %0, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !7\l  %119 = load float, float addrspace(1)* %16, align 4, !tbaa !7\l  %120 = fmul contract float %118, %119\l  %121 = fadd contract float %114, %120\l  %122 = add nsw i32 %94, 149\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %0, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !7\l  %126 = load float, float addrspace(1)* %17, align 4, !tbaa !7\l  %127 = fmul contract float %125, %126\l  %128 = fadd contract float %121, %127\l  %129 = add nsw i32 %94, 150\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %0, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !7\l  %133 = load float, float addrspace(1)* %18, align 4, !tbaa !7\l  %134 = fmul contract float %132, %133\l  %135 = fadd contract float %128, %134\l  %136 = add nsw i32 %94, 296\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %0, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !7\l  %140 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  %141 = fmul contract float %139, %140\l  %142 = fadd contract float %135, %141\l  %143 = add nsw i32 %94, 297\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %0, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !7\l  %147 = load float, float addrspace(1)* %20, align 4, !tbaa !7\l  %148 = fmul contract float %146, %147\l  %149 = fadd contract float %142, %148\l  %150 = add nsw i32 %94, 298\l  %151 = sext i32 %150 to i64\l  %152 = getelementptr inbounds float, float addrspace(1)* %0, i64 %151\l  %153 = load float, float addrspace(1)* %152, align 4, !tbaa !7\l  %154 = load float, float addrspace(1)* %21, align 4, !tbaa !7\l  %155 = fmul contract float %153, %154\l  %156 = fadd contract float %149, %155\l  %157 = tail call float @llvm.maxnum.f32(float %156, float 0.000000e+00)\l  %158 = add nsw i32 %93, %22\l  %159 = sext i32 %158 to i64\l  %160 = getelementptr inbounds float, float addrspace(1)* %1, i64 %159\l  store float %157, float addrspace(1)* %160, align 4, !tbaa !7\l  %161 = add nuw nsw i32 %25, 2\l  %162 = icmp eq i32 %161, 146\l  br i1 %162, label %23, label %24, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x62822a0:s0 -> Node0x62823a0;
	Node0x62822a0:s1 -> Node0x62822a0;
}
