digraph "CFG for '_Z9ApplyMat5PfS_S_' function" {
	label="CFG for '_Z9ApplyMat5PfS_S_' function";

	Node0x45258e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = add i32 %11, %4\l  %13 = mul nsw i32 %12, 300\l  %14 = getelementptr inbounds float, float addrspace(1)* %2, i64 1\l  %15 = getelementptr inbounds float, float addrspace(1)* %2, i64 2\l  %16 = getelementptr inbounds float, float addrspace(1)* %2, i64 3\l  %17 = getelementptr inbounds float, float addrspace(1)* %2, i64 4\l  %18 = getelementptr inbounds float, float addrspace(1)* %2, i64 5\l  %19 = getelementptr inbounds float, float addrspace(1)* %2, i64 6\l  %20 = getelementptr inbounds float, float addrspace(1)* %2, i64 7\l  %21 = getelementptr inbounds float, float addrspace(1)* %2, i64 8\l  %22 = getelementptr inbounds float, float addrspace(1)* %2, i64 9\l  %23 = getelementptr inbounds float, float addrspace(1)* %2, i64 10\l  %24 = getelementptr inbounds float, float addrspace(1)* %2, i64 11\l  %25 = getelementptr inbounds float, float addrspace(1)* %2, i64 12\l  %26 = getelementptr inbounds float, float addrspace(1)* %2, i64 13\l  %27 = getelementptr inbounds float, float addrspace(1)* %2, i64 14\l  %28 = getelementptr inbounds float, float addrspace(1)* %2, i64 15\l  %29 = getelementptr inbounds float, float addrspace(1)* %2, i64 16\l  %30 = getelementptr inbounds float, float addrspace(1)* %2, i64 17\l  %31 = getelementptr inbounds float, float addrspace(1)* %2, i64 18\l  %32 = getelementptr inbounds float, float addrspace(1)* %2, i64 19\l  %33 = getelementptr inbounds float, float addrspace(1)* %2, i64 20\l  %34 = getelementptr inbounds float, float addrspace(1)* %2, i64 21\l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 22\l  %36 = getelementptr inbounds float, float addrspace(1)* %2, i64 23\l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 24\l  %38 = mul nsw i32 %12, 296\l  br label %40\l}"];
	Node0x45258e0 -> Node0x4528d50;
	Node0x4528e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%39:\l39:                                               \l  ret void\l}"];
	Node0x4528d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ 0, %3 ], [ %221, %40 ]\l  %42 = add nsw i32 %41, %13\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7\l  %46 = load float, float addrspace(1)* %2, align 4, !tbaa !7\l  %47 = fmul contract float %45, %46\l  %48 = fadd contract float %47, 0.000000e+00\l  %49 = add nsw i32 %42, 1\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  %53 = load float, float addrspace(1)* %14, align 4, !tbaa !7\l  %54 = fmul contract float %52, %53\l  %55 = fadd contract float %48, %54\l  %56 = add nsw i32 %42, 2\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = load float, float addrspace(1)* %15, align 4, !tbaa !7\l  %61 = fmul contract float %59, %60\l  %62 = fadd contract float %55, %61\l  %63 = add nsw i32 %42, 3\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %0, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7\l  %67 = load float, float addrspace(1)* %16, align 4, !tbaa !7\l  %68 = fmul contract float %66, %67\l  %69 = fadd contract float %62, %68\l  %70 = add nsw i32 %42, 4\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7\l  %74 = load float, float addrspace(1)* %17, align 4, !tbaa !7\l  %75 = fmul contract float %73, %74\l  %76 = fadd contract float %69, %75\l  %77 = add nsw i32 %42, 300\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7\l  %81 = load float, float addrspace(1)* %18, align 4, !tbaa !7\l  %82 = fmul contract float %80, %81\l  %83 = fadd contract float %76, %82\l  %84 = add nsw i32 %42, 301\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7\l  %88 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  %89 = fmul contract float %87, %88\l  %90 = fadd contract float %83, %89\l  %91 = add nsw i32 %42, 302\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %0, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7\l  %95 = load float, float addrspace(1)* %20, align 4, !tbaa !7\l  %96 = fmul contract float %94, %95\l  %97 = fadd contract float %90, %96\l  %98 = add nsw i32 %42, 303\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %0, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7\l  %102 = load float, float addrspace(1)* %21, align 4, !tbaa !7\l  %103 = fmul contract float %101, %102\l  %104 = fadd contract float %97, %103\l  %105 = add nsw i32 %42, 304\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %0, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7\l  %109 = load float, float addrspace(1)* %22, align 4, !tbaa !7\l  %110 = fmul contract float %108, %109\l  %111 = fadd contract float %104, %110\l  %112 = add nsw i32 %42, 600\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %0, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7\l  %116 = load float, float addrspace(1)* %23, align 4, !tbaa !7\l  %117 = fmul contract float %115, %116\l  %118 = fadd contract float %111, %117\l  %119 = add nsw i32 %42, 601\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %0, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7\l  %123 = load float, float addrspace(1)* %24, align 4, !tbaa !7\l  %124 = fmul contract float %122, %123\l  %125 = fadd contract float %118, %124\l  %126 = add nsw i32 %42, 602\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds float, float addrspace(1)* %0, i64 %127\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !7\l  %130 = load float, float addrspace(1)* %25, align 4, !tbaa !7\l  %131 = fmul contract float %129, %130\l  %132 = fadd contract float %125, %131\l  %133 = add nsw i32 %42, 603\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %0, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !7\l  %137 = load float, float addrspace(1)* %26, align 4, !tbaa !7\l  %138 = fmul contract float %136, %137\l  %139 = fadd contract float %132, %138\l  %140 = add nsw i32 %42, 604\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %0, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !7\l  %144 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %145 = fmul contract float %143, %144\l  %146 = fadd contract float %139, %145\l  %147 = add nsw i32 %42, 900\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds float, float addrspace(1)* %0, i64 %148\l  %150 = load float, float addrspace(1)* %149, align 4, !tbaa !7\l  %151 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %152 = fmul contract float %150, %151\l  %153 = fadd contract float %146, %152\l  %154 = add nsw i32 %42, 901\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds float, float addrspace(1)* %0, i64 %155\l  %157 = load float, float addrspace(1)* %156, align 4, !tbaa !7\l  %158 = load float, float addrspace(1)* %29, align 4, !tbaa !7\l  %159 = fmul contract float %157, %158\l  %160 = fadd contract float %153, %159\l  %161 = add nsw i32 %42, 902\l  %162 = sext i32 %161 to i64\l  %163 = getelementptr inbounds float, float addrspace(1)* %0, i64 %162\l  %164 = load float, float addrspace(1)* %163, align 4, !tbaa !7\l  %165 = load float, float addrspace(1)* %30, align 4, !tbaa !7\l  %166 = fmul contract float %164, %165\l  %167 = fadd contract float %160, %166\l  %168 = add nsw i32 %42, 903\l  %169 = sext i32 %168 to i64\l  %170 = getelementptr inbounds float, float addrspace(1)* %0, i64 %169\l  %171 = load float, float addrspace(1)* %170, align 4, !tbaa !7\l  %172 = load float, float addrspace(1)* %31, align 4, !tbaa !7\l  %173 = fmul contract float %171, %172\l  %174 = fadd contract float %167, %173\l  %175 = add nsw i32 %42, 904\l  %176 = sext i32 %175 to i64\l  %177 = getelementptr inbounds float, float addrspace(1)* %0, i64 %176\l  %178 = load float, float addrspace(1)* %177, align 4, !tbaa !7\l  %179 = load float, float addrspace(1)* %32, align 4, !tbaa !7\l  %180 = fmul contract float %178, %179\l  %181 = fadd contract float %174, %180\l  %182 = add nsw i32 %42, 1200\l  %183 = sext i32 %182 to i64\l  %184 = getelementptr inbounds float, float addrspace(1)* %0, i64 %183\l  %185 = load float, float addrspace(1)* %184, align 4, !tbaa !7\l  %186 = load float, float addrspace(1)* %33, align 4, !tbaa !7\l  %187 = fmul contract float %185, %186\l  %188 = fadd contract float %181, %187\l  %189 = add nsw i32 %42, 1201\l  %190 = sext i32 %189 to i64\l  %191 = getelementptr inbounds float, float addrspace(1)* %0, i64 %190\l  %192 = load float, float addrspace(1)* %191, align 4, !tbaa !7\l  %193 = load float, float addrspace(1)* %34, align 4, !tbaa !7\l  %194 = fmul contract float %192, %193\l  %195 = fadd contract float %188, %194\l  %196 = add nsw i32 %42, 1202\l  %197 = sext i32 %196 to i64\l  %198 = getelementptr inbounds float, float addrspace(1)* %0, i64 %197\l  %199 = load float, float addrspace(1)* %198, align 4, !tbaa !7\l  %200 = load float, float addrspace(1)* %35, align 4, !tbaa !7\l  %201 = fmul contract float %199, %200\l  %202 = fadd contract float %195, %201\l  %203 = add nsw i32 %42, 1203\l  %204 = sext i32 %203 to i64\l  %205 = getelementptr inbounds float, float addrspace(1)* %0, i64 %204\l  %206 = load float, float addrspace(1)* %205, align 4, !tbaa !7\l  %207 = load float, float addrspace(1)* %36, align 4, !tbaa !7\l  %208 = fmul contract float %206, %207\l  %209 = fadd contract float %202, %208\l  %210 = add nsw i32 %42, 1204\l  %211 = sext i32 %210 to i64\l  %212 = getelementptr inbounds float, float addrspace(1)* %0, i64 %211\l  %213 = load float, float addrspace(1)* %212, align 4, !tbaa !7\l  %214 = load float, float addrspace(1)* %37, align 4, !tbaa !7\l  %215 = fmul contract float %213, %214\l  %216 = fadd contract float %209, %215\l  %217 = tail call float @llvm.maxnum.f32(float %216, float 0.000000e+00)\l  %218 = add nsw i32 %41, %38\l  %219 = sext i32 %218 to i64\l  %220 = getelementptr inbounds float, float addrspace(1)* %1, i64 %219\l  store float %217, float addrspace(1)* %220, align 4, !tbaa !7\l  %221 = add nuw nsw i32 %41, 1\l  %222 = icmp eq i32 %221, 296\l  br i1 %222, label %39, label %40, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4528d50:s0 -> Node0x4528e50;
	Node0x4528d50:s1 -> Node0x4528d50;
}
