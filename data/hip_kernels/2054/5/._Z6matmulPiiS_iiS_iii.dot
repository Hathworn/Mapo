digraph "CFG for '_Z6matmulPiiS_iiS_iii' function" {
	label="CFG for '_Z6matmulPiiS_iiS_iii' function";

	Node0x60dca80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = mul nsw i32 %10, %8\l  %13 = add nsw i32 %12, %11\l  %14 = sdiv i32 %13, %6\l  %15 = icmp sgt i32 %3, 0\l  br i1 %15, label %16, label %134\l|{<s0>T|<s1>F}}"];
	Node0x60dca80:s0 -> Node0x60dedf0;
	Node0x60dca80:s1 -> Node0x60dee80;
	Node0x60dedf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%16:\l16:                                               \l  %17 = mul nsw i32 %14, %6\l  %18 = sub nsw i32 %13, %17\l  %19 = mul nsw i32 %14, %1\l  %20 = and i32 %3, 7\l  %21 = icmp ult i32 %3, 8\l  br i1 %21, label %111, label %22\l|{<s0>T|<s1>F}}"];
	Node0x60dedf0:s0 -> Node0x60df370;
	Node0x60dedf0:s1 -> Node0x60df3c0;
	Node0x60df3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%22:\l22:                                               \l  %23 = and i32 %3, -8\l  br label %24\l}"];
	Node0x60df3c0 -> Node0x60df5c0;
	Node0x60df5c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%24:\l24:                                               \l  %25 = phi i32 [ 0, %22 ], [ %106, %24 ]\l  %26 = phi i32 [ %19, %22 ], [ %107, %24 ]\l  %27 = phi i32 [ %18, %22 ], [ %108, %24 ]\l  %28 = phi i32 [ 0, %22 ], [ %109, %24 ]\l  %29 = sext i32 %26 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %32 = sext i32 %27 to i64\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %35 = mul nsw i32 %34, %31\l  %36 = add nsw i32 %35, %25\l  %37 = add nsw i32 %26, 1\l  %38 = add nsw i32 %27, %4\l  %39 = sext i32 %37 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %42 = sext i32 %38 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %42\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %45 = mul nsw i32 %44, %41\l  %46 = add nsw i32 %45, %36\l  %47 = add nsw i32 %26, 2\l  %48 = add nsw i32 %38, %4\l  %49 = sext i32 %47 to i64\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %49\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %52 = sext i32 %48 to i64\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %52\l  %54 = load i32, i32 addrspace(1)* %53, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %55 = mul nsw i32 %54, %51\l  %56 = add nsw i32 %55, %46\l  %57 = add nsw i32 %26, 3\l  %58 = add nsw i32 %48, %4\l  %59 = sext i32 %57 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %62 = sext i32 %58 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %62\l  %64 = load i32, i32 addrspace(1)* %63, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %65 = mul nsw i32 %64, %61\l  %66 = add nsw i32 %65, %56\l  %67 = add nsw i32 %26, 4\l  %68 = add nsw i32 %58, %4\l  %69 = sext i32 %67 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %69\l  %71 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %72 = sext i32 %68 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %72\l  %74 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %75 = mul nsw i32 %74, %71\l  %76 = add nsw i32 %75, %66\l  %77 = add nsw i32 %26, 5\l  %78 = add nsw i32 %68, %4\l  %79 = sext i32 %77 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %79\l  %81 = load i32, i32 addrspace(1)* %80, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %82 = sext i32 %78 to i64\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %82\l  %84 = load i32, i32 addrspace(1)* %83, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %85 = mul nsw i32 %84, %81\l  %86 = add nsw i32 %85, %76\l  %87 = add nsw i32 %26, 6\l  %88 = add nsw i32 %78, %4\l  %89 = sext i32 %87 to i64\l  %90 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %89\l  %91 = load i32, i32 addrspace(1)* %90, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %92 = sext i32 %88 to i64\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %92\l  %94 = load i32, i32 addrspace(1)* %93, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %95 = mul nsw i32 %94, %91\l  %96 = add nsw i32 %95, %86\l  %97 = add nsw i32 %26, 7\l  %98 = add nsw i32 %88, %4\l  %99 = sext i32 %97 to i64\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %99\l  %101 = load i32, i32 addrspace(1)* %100, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %102 = sext i32 %98 to i64\l  %103 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %102\l  %104 = load i32, i32 addrspace(1)* %103, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %105 = mul nsw i32 %104, %101\l  %106 = add nsw i32 %105, %96\l  %107 = add nsw i32 %26, 8\l  %108 = add nsw i32 %98, %4\l  %109 = add i32 %28, 8\l  %110 = icmp eq i32 %109, %23\l  br i1 %110, label %111, label %24, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x60df5c0:s0 -> Node0x60df370;
	Node0x60df5c0:s1 -> Node0x60df5c0;
	Node0x60df370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%111:\l111:                                              \l  %112 = phi i32 [ undef, %16 ], [ %106, %24 ]\l  %113 = phi i32 [ 0, %16 ], [ %106, %24 ]\l  %114 = phi i32 [ %19, %16 ], [ %107, %24 ]\l  %115 = phi i32 [ %18, %16 ], [ %108, %24 ]\l  %116 = icmp eq i32 %20, 0\l  br i1 %116, label %134, label %117\l|{<s0>T|<s1>F}}"];
	Node0x60df370:s0 -> Node0x60dee80;
	Node0x60df370:s1 -> Node0x60e45a0;
	Node0x60e45a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%117:\l117:                                              \l  %118 = phi i32 [ %129, %117 ], [ %113, %111 ]\l  %119 = phi i32 [ %130, %117 ], [ %114, %111 ]\l  %120 = phi i32 [ %131, %117 ], [ %115, %111 ]\l  %121 = phi i32 [ %132, %117 ], [ 0, %111 ]\l  %122 = sext i32 %119 to i64\l  %123 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %122\l  %124 = load i32, i32 addrspace(1)* %123, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %125 = sext i32 %120 to i64\l  %126 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %125\l  %127 = load i32, i32 addrspace(1)* %126, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %128 = mul nsw i32 %127, %124\l  %129 = add nsw i32 %128, %118\l  %130 = add nsw i32 %119, 1\l  %131 = add nsw i32 %120, %4\l  %132 = add i32 %121, 1\l  %133 = icmp eq i32 %132, %20\l  br i1 %133, label %134, label %117, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x60e45a0:s0 -> Node0x60dee80;
	Node0x60e45a0:s1 -> Node0x60e45a0;
	Node0x60dee80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%134:\l134:                                              \l  %135 = phi i32 [ 0, %9 ], [ %112, %111 ], [ %129, %117 ]\l  %136 = sext i32 %13 to i64\l  %137 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %136\l  store i32 %135, i32 addrspace(1)* %137, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
