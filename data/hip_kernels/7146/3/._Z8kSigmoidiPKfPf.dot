digraph "CFG for '_Z8kSigmoidiPKfPf' function" {
	label="CFG for '_Z8kSigmoidiPKfPf' function";

	Node0x574aa20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %0\l  br i1 %16, label %17, label %24\l|{<s0>T|<s1>F}}"];
	Node0x574aa20:s0 -> Node0x574c370;
	Node0x574aa20:s1 -> Node0x574cd20;
	Node0x574c370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%17:\l17:                                               \l  %18 = udiv i32 %12, %9\l  %19 = mul i32 %18, %9\l  %20 = icmp ugt i32 %12, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %9\l  br label %25\l}"];
	Node0x574c370 -> Node0x574d1a0;
	Node0x574cd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x574d1a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %15, %17 ], [ %50, %25 ]\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16\l  %30 = fneg contract float %29\l  %31 = fmul float %29, 0xBFF7154760000000\l  %32 = tail call float @llvm.rint.f32(float %31)\l  %33 = fcmp olt float %29, 0xC0562E4300000000\l  %34 = fcmp ogt float %29, 0x4059D1DA00000000\l  %35 = fneg float %31\l  %36 = tail call float @llvm.fma.f32(float %30, float 0x3FF7154760000000,\l... float %35)\l  %37 = tail call float @llvm.fma.f32(float %30, float 0x3E54AE0BE0000000,\l... float %36)\l  %38 = fsub float %31, %32\l  %39 = fadd float %37, %38\l  %40 = tail call float @llvm.exp2.f32(float %39)\l  %41 = fptosi float %32 to i32\l  %42 = tail call float @llvm.amdgcn.ldexp.f32(float %40, i32 %41)\l  %43 = select i1 %34, float 0.000000e+00, float %42\l  %44 = select i1 %33, float 0x7FF0000000000000, float %43\l  %45 = fpext float %44 to double\l  %46 = fadd contract double %45, 1.000000e+00\l  %47 = fdiv contract double 1.000000e+00, %46\l  %48 = fptrunc double %47 to float\l  %49 = getelementptr inbounds float, float addrspace(1)* %2, i64 %27\l  store float %48, float addrspace(1)* %49, align 4, !tbaa !16\l  %50 = add i32 %23, %26\l  %51 = icmp slt i32 %50, %0\l  br i1 %51, label %25, label %24, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x574d1a0:s0 -> Node0x574d1a0;
	Node0x574d1a0:s1 -> Node0x574cd20;
}
