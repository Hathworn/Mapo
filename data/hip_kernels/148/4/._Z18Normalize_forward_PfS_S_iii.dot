digraph "CFG for '_Z18Normalize_forward_PfS_S_iii' function" {
	label="CFG for '_Z18Normalize_forward_PfS_S_iii' function";

	Node0x4a7a800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %5\l  br i1 %16, label %17, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4a7a800:s0 -> Node0x4a7ac10;
	Node0x4a7a800:s1 -> Node0x4a7c7e0;
	Node0x4a7ac10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%17:\l17:                                               \l  %18 = srem i32 %15, %3\l  %19 = sdiv i32 %15, %4\l  %20 = sext i32 %15 to i64\l  %21 = getelementptr inbounds float, float addrspace(1)* %0, i64 %20\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %23 = mul nsw i32 %19, %3\l  %24 = add nsw i32 %23, %18\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %1, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %28 = fcmp olt float %27, 0x39F0000000000000\l  %29 = select i1 %28, float 0x41F0000000000000, float 1.000000e+00\l  %30 = fmul float %27, %29\l  %31 = tail call float @llvm.sqrt.f32(float %30)\l  %32 = bitcast float %31 to i32\l  %33 = add nsw i32 %32, -1\l  %34 = bitcast i32 %33 to float\l  %35 = add nsw i32 %32, 1\l  %36 = bitcast i32 %35 to float\l  %37 = tail call i1 @llvm.amdgcn.class.f32(float %30, i32 608)\l  %38 = select i1 %28, float 0x3EF0000000000000, float 1.000000e+00\l  %39 = fneg float %36\l  %40 = tail call float @llvm.fma.f32(float %39, float %31, float %30)\l  %41 = fcmp ogt float %40, 0.000000e+00\l  %42 = fneg float %34\l  %43 = tail call float @llvm.fma.f32(float %42, float %31, float %30)\l  %44 = fcmp ole float %43, 0.000000e+00\l  %45 = select i1 %44, float %34, float %31\l  %46 = select i1 %41, float %36, float %45\l  %47 = fmul float %38, %46\l  %48 = select i1 %37, float %30, float %47\l  %49 = fdiv contract float %22, %48\l  %50 = getelementptr inbounds float, float addrspace(1)* %2, i64 %20\l  store float %49, float addrspace(1)* %50, align 4, !tbaa !7\l  br label %51\l}"];
	Node0x4a7ac10 -> Node0x4a7c7e0;
	Node0x4a7c7e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  ret void\l}"];
}
