digraph "CFG for '_Z22calcSigmoidBackwardGPUPfS_S_S_i' function" {
	label="CFG for '_Z22calcSigmoidBackwardGPUPfS_S_S_i' function";

	Node0x5b73cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !4\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !13, !invariant.load\l... !14\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %7\l  %22 = add i32 %21, %6\l  %23 = mul i32 %22, %15\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %25, %4\l  br i1 %26, label %27, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5b73cb0:s0 -> Node0x5b76520;
	Node0x5b73cb0:s1 -> Node0x5b765b0;
	Node0x5b76520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%27:\l27:                                               \l  %28 = sext i32 %25 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %28\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %33 = fadd contract float %30, %32\l  store float %33, float addrspace(1)* %31, align 4, !tbaa !16\l  %34 = fneg contract float %33\l  %35 = fmul float %33, 0xBFF7154760000000\l  %36 = tail call float @llvm.rint.f32(float %35)\l  %37 = fcmp olt float %33, 0xC0562E4300000000\l  %38 = fcmp ogt float %33, 0x4059D1DA00000000\l  %39 = fneg float %35\l  %40 = tail call float @llvm.fma.f32(float %34, float 0x3FF7154760000000,\l... float %39)\l  %41 = tail call float @llvm.fma.f32(float %34, float 0x3E54AE0BE0000000,\l... float %40)\l  %42 = fsub float %35, %36\l  %43 = fadd float %41, %42\l  %44 = tail call float @llvm.exp2.f32(float %43)\l  %45 = fptosi float %36 to i32\l  %46 = tail call float @llvm.amdgcn.ldexp.f32(float %44, i32 %45)\l  %47 = fadd contract float %46, 1.000000e+00\l  %48 = fdiv contract float 1.000000e+00, %47\l  %49 = select i1 %38, float 1.000000e+00, float %48\l  %50 = select i1 %37, float 0.000000e+00, float %49\l  %51 = fsub contract float 1.000000e+00, %50\l  %52 = fmul contract float %50, %51\l  %53 = fmul contract float %33, %52\l  %54 = getelementptr inbounds float, float addrspace(1)* %2, i64 %28\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %56 = fadd contract float %55, %53\l  store float %56, float addrspace(1)* %54, align 4, !tbaa !16\l  br label %57\l}"];
	Node0x5b76520 -> Node0x5b765b0;
	Node0x5b765b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  ret void\l}"];
}
