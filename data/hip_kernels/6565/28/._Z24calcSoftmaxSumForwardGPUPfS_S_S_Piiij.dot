digraph "CFG for '_Z24calcSoftmaxSumForwardGPUPfS_S_S_Piiij' function" {
	label="CFG for '_Z24calcSoftmaxSumForwardGPUPfS_S_S_Piiij' function";

	Node0x4e890d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !7\l  %19 = mul i32 %10, %15\l  %20 = add i32 %19, %9\l  %21 = udiv i32 %18, %15\l  %22 = mul i32 %21, %15\l  %23 = icmp ugt i32 %18, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %15\l  %27 = icmp ult i32 %20, %7\l  br i1 %27, label %28, label %59\l|{<s0>T|<s1>F}}"];
	Node0x4e890d0:s0 -> Node0x4e8b690;
	Node0x4e890d0:s1 -> Node0x4e8b720;
	Node0x4e8b690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%28:\l28:                                               \l  %29 = zext i32 %10 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %2, i64 %29\l  br label %31\l}"];
	Node0x4e8b690 -> Node0x4e8b970;
	Node0x4e8b970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = phi i32 [ %20, %28 ], [ %57, %31 ]\l  %33 = phi i32 [ 0, %28 ], [ %56, %31 ]\l  %34 = phi float [ 0.000000e+00, %28 ], [ %55, %31 ]\l  %35 = zext i32 %32 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16\l  %38 = load float, float addrspace(1)* %30, align 4, !tbaa !16\l  %39 = fsub contract float %37, %38\l  %40 = fmul float %39, 0x3FF7154760000000\l  %41 = tail call float @llvm.rint.f32(float %40)\l  %42 = fcmp ogt float %39, 0x40562E4300000000\l  %43 = fcmp olt float %39, 0xC059D1DA00000000\l  %44 = fneg float %40\l  %45 = tail call float @llvm.fma.f32(float %39, float 0x3FF7154760000000,\l... float %44)\l  %46 = tail call float @llvm.fma.f32(float %39, float 0x3E54AE0BE0000000,\l... float %45)\l  %47 = fsub float %40, %41\l  %48 = fadd float %46, %47\l  %49 = tail call float @llvm.exp2.f32(float %48)\l  %50 = fptosi float %41 to i32\l  %51 = tail call float @llvm.amdgcn.ldexp.f32(float %49, i32 %50)\l  %52 = select i1 %43, float 0.000000e+00, float %51\l  %53 = select i1 %42, float 0x7FF0000000000000, float %52\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  store float %53, float addrspace(1)* %54, align 4, !tbaa !16\l  %55 = fadd contract float %34, %53\l  %56 = add i32 %33, %26\l  %57 = add i32 %56, %20\l  %58 = icmp ult i32 %57, %7\l  br i1 %58, label %31, label %59, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4e8b970:s0 -> Node0x4e8b970;
	Node0x4e8b970:s1 -> Node0x4e8b720;
	Node0x4e8b720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%59:\l59:                                               \l  %60 = phi float [ 0.000000e+00, %8 ], [ %55, %31 ]\l  %61 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @cache,\l... i32 0, i32 %20\l  store float %60, float addrspace(3)* %61, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %62 = icmp ult i16 %14, 2\l  br i1 %62, label %87, label %63\l|{<s0>T|<s1>F}}"];
	Node0x4e8b720:s0 -> Node0x4e8ecb0;
	Node0x4e8b720:s1 -> Node0x4e8ed40;
	Node0x4e8ed40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%63:\l63:                                               \l  %64 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @cache,\l... i32 0, i32 %19\l  %65 = add i32 %19, -1\l  br label %66\l}"];
	Node0x4e8ed40 -> Node0x4e8bb70;
	Node0x4e8bb70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi i32 [ %15, %63 ], [ %68, %85 ]\l  %68 = lshr i32 %67, 1\l  %69 = icmp ult i32 %9, %68\l  br i1 %69, label %70, label %76\l|{<s0>T|<s1>F}}"];
	Node0x4e8bb70:s0 -> Node0x4e8f550;
	Node0x4e8bb70:s1 -> Node0x4e8f5a0;
	Node0x4e8f550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%70:\l70:                                               \l  %71 = load float, float addrspace(3)* %61, align 4, !tbaa !16\l  %72 = add i32 %68, %20\l  %73 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @cache,\l... i32 0, i32 %72\l  %74 = load float, float addrspace(3)* %73, align 4, !tbaa !16\l  %75 = fadd contract float %71, %74\l  store float %75, float addrspace(3)* %61, align 4, !tbaa !16\l  br label %76\l}"];
	Node0x4e8f550 -> Node0x4e8f5a0;
	Node0x4e8f5a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  %77 = and i32 %67, 1\l  %78 = icmp eq i32 %77, 0\l  br i1 %78, label %85, label %79\l|{<s0>T|<s1>F}}"];
	Node0x4e8f5a0:s0 -> Node0x4e8bc60;
	Node0x4e8f5a0:s1 -> Node0x4e8fbc0;
	Node0x4e8fbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%79:\l79:                                               \l  %80 = load float, float addrspace(3)* %64, align 4, !tbaa !16\l  %81 = add i32 %65, %67\l  %82 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @cache,\l... i32 0, i32 %81\l  %83 = load float, float addrspace(3)* %82, align 4, !tbaa !16\l  %84 = fadd contract float %80, %83\l  store float %84, float addrspace(3)* %64, align 4, !tbaa !16\l  br label %85\l}"];
	Node0x4e8fbc0 -> Node0x4e8bc60;
	Node0x4e8bc60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %86 = icmp ult i32 %67, 4\l  br i1 %86, label %87, label %66, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4e8bc60:s0 -> Node0x4e8ecb0;
	Node0x4e8bc60:s1 -> Node0x4e8bb70;
	Node0x4e8ecb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%87:\l87:                                               \l  %88 = icmp eq i32 %9, 0\l  br i1 %88, label %89, label %100\l|{<s0>T|<s1>F}}"];
	Node0x4e8ecb0:s0 -> Node0x4e90480;
	Node0x4e8ecb0:s1 -> Node0x4e904d0;
	Node0x4e90480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%89:\l89:                                               \l  %90 = cmpxchg i32 addrspace(1)* %4, i32 0, i32 1 syncscope(\"agent-one-as\")\l... monotonic monotonic, align 4\l  %91 = extractvalue \{ i32, i1 \} %90, 1\l  br i1 %91, label %92, label %89, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x4e90480:s0 -> Node0x4e90990;
	Node0x4e90480:s1 -> Node0x4e90480;
	Node0x4e90990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%92:\l92:                                               \l  %93 = zext i32 %10 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %3, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !16\l  %96 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @cache,\l... i32 0, i32 %19\l  %97 = load float, float addrspace(3)* %96, align 4, !tbaa !16\l  %98 = fadd contract float %95, %97\l  store float %98, float addrspace(1)* %94, align 4, !tbaa !16\l  %99 = atomicrmw xchg i32 addrspace(1)* %4, i32 0 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  br label %100\l}"];
	Node0x4e90990 -> Node0x4e904d0;
	Node0x4e904d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%100:\l100:                                              \l  ret void\l}"];
}
