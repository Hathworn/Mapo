digraph "CFG for '_Z20calcDenseBackwardGPUPfS_S_S_S_S_S_S_iiiiiiiff' function" {
	label="CFG for '_Z20calcDenseBackwardGPUPfS_S_S_S_S_S_S_iiiiiiiff' function";

	Node0x5bd6480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 12\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 4, !tbaa !4\l  %24 = getelementptr i8, i8 addrspace(4)* %20, i64 4\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 4, !range !13, !invariant.load\l... !14\l  %27 = zext i16 %26 to i32\l  %28 = udiv i32 %23, %27\l  %29 = mul i32 %28, %27\l  %30 = icmp ugt i32 %23, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = mul i32 %32, %19\l  %34 = add i32 %33, %18\l  %35 = mul i32 %34, %27\l  %36 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %37 = add i32 %35, %36\l  %38 = freeze i32 %37\l  %39 = freeze i32 %12\l  %40 = sdiv i32 %38, %39\l  %41 = mul i32 %10, %9\l  %42 = mul i32 %41, %8\l  %43 = mul i32 %42, %11\l  %44 = mul i32 %43, %12\l  %45 = icmp slt i32 %37, %44\l  br i1 %45, label %46, label %102\l|{<s0>T|<s1>F}}"];
	Node0x5bd6480:s0 -> Node0x5bd9d80;
	Node0x5bd6480:s1 -> Node0x5bd9e10;
	Node0x5bd9d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%46:\l46:                                               \l  %47 = mul i32 %40, %39\l  %48 = sub i32 %38, %47\l  %49 = freeze i32 %9\l  %50 = sdiv i32 %40, %49\l  %51 = mul i32 %50, %49\l  %52 = sub i32 %40, %51\l  %53 = freeze i32 %10\l  %54 = sdiv i32 %50, %53\l  %55 = mul i32 %54, %53\l  %56 = sub i32 %50, %55\l  %57 = freeze i32 %11\l  %58 = sdiv i32 %54, %57\l  %59 = mul i32 %58, %57\l  %60 = sub i32 %54, %59\l  %61 = mul nsw i32 %13, %12\l  %62 = mul nsw i32 %61, %14\l  %63 = mul nsw i32 %62, %58\l  %64 = add nsw i32 %63, %48\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %0, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %68 = mul i32 %48, %11\l  %69 = add i32 %60, %68\l  %70 = mul i32 %69, %10\l  %71 = add i32 %70, %56\l  %72 = mul i32 %71, %9\l  %73 = add i32 %72, %52\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %3, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %77 = mul nsw i32 %48, %8\l  %78 = add nsw i32 %58, %77\l  %79 = shl nsw i32 %78, 1\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %5, i64 %80\l  store float %67, float addrspace(1)* %81, align 4, !tbaa !16\l  %82 = fmul contract float %67, %76\l  %83 = sext i32 %40 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %1, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !16\l  %86 = fadd contract float %82, %85\l  store float %86, float addrspace(1)* %84, align 4, !tbaa !16\l  %87 = getelementptr inbounds float, float addrspace(1)* %2, i64 %83\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !16\l  %89 = load float, float addrspace(1)* %81, align 4, !tbaa !16\l  %90 = add nuw nsw i32 %79, 1\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %5, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !16\l  %94 = fmul contract float %93, %15\l  %95 = fadd contract float %89, %94\l  %96 = fmul contract float %88, %95\l  %97 = fmul contract float %76, %16\l  %98 = fadd contract float %97, %96\l  %99 = getelementptr inbounds float, float addrspace(1)* %6, i64 %74\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !16\l  %101 = fadd contract float %100, %98\l  store float %101, float addrspace(1)* %99, align 4, !tbaa !16\l  br label %102\l}"];
	Node0x5bd9d80 -> Node0x5bd9e10;
	Node0x5bd9e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  ret void\l}"];
}
