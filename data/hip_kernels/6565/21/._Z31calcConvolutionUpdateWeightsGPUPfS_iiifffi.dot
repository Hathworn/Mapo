digraph "CFG for '_Z31calcConvolutionUpdateWeightsGPUPfS_iiifffi' function" {
	label="CFG for '_Z31calcConvolutionUpdateWeightsGPUPfS_iiifffi' function";

	Node0x64a9ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !4\l  %16 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !13, !invariant.load\l... !14\l  %19 = zext i16 %18 to i32\l  %20 = udiv i32 %15, %19\l  %21 = mul i32 %20, %19\l  %22 = icmp ugt i32 %15, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %11\l  %26 = add i32 %25, %10\l  %27 = mul i32 %26, %19\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %29 = add i32 %27, %28\l  %30 = icmp slt i32 %29, %8\l  br i1 %30, label %31, label %63\l|{<s0>T|<s1>F}}"];
	Node0x64a9ba0:s0 -> Node0x64ad160;
	Node0x64a9ba0:s1 -> Node0x64ad1f0;
	Node0x64ad160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%31:\l31:                                               \l  %32 = freeze i32 %29\l  %33 = freeze i32 %4\l  %34 = sdiv i32 %32, %33\l  %35 = mul i32 %34, %33\l  %36 = sub i32 %32, %35\l  %37 = freeze i32 %4\l  %38 = sdiv i32 %34, %37\l  %39 = mul i32 %38, %37\l  %40 = sub i32 %34, %39\l  %41 = freeze i32 %38\l  %42 = mul i32 %41, %4\l  %43 = add i32 %42, %40\l  %44 = mul i32 %43, %4\l  %45 = add i32 %44, %36\l  %46 = shl nsw i32 %45, 1\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %50 = add nuw nsw i32 %46, 1\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %54 = fmul contract float %53, %5\l  %55 = fadd contract float %49, %54\l  store float %55, float addrspace(1)* %52, align 4, !tbaa !16\l  %56 = sext i32 %29 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !16\l  %59 = fmul contract float %58, %6\l  %60 = fadd contract float %55, %59\l  %61 = fmul contract float %60, %7\l  %62 = fsub contract float %58, %61\l  store float %62, float addrspace(1)* %57, align 4, !tbaa !16\l  br label %63\l}"];
	Node0x64ad160 -> Node0x64ad1f0;
	Node0x64ad1f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  ret void\l}"];
}
