digraph "CFG for '_Z27calcDenseBarckwardNabraBGPUPfS_ii' function" {
	label="CFG for '_Z27calcDenseBarckwardNabraBGPUPfS_ii' function";

	Node0x4c1e440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %9 = bitcast i8 addrspace(4)* %8 to i32 addrspace(4)*\l  %10 = load i32, i32 addrspace(4)* %9, align 4, !tbaa !4\l  %11 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !13, !invariant.load\l... !14\l  %14 = zext i16 %13 to i32\l  %15 = udiv i32 %10, %14\l  %16 = mul i32 %15, %14\l  %17 = icmp ugt i32 %10, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %6\l  %21 = add i32 %20, %5\l  %22 = mul i32 %21, %14\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %24 = add i32 %22, %23\l  %25 = icmp slt i32 %24, %3\l  %26 = icmp sgt i32 %2, 0\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %115\l|{<s0>T|<s1>F}}"];
	Node0x4c1e440:s0 -> Node0x4c20e70;
	Node0x4c1e440:s1 -> Node0x4c20f00;
	Node0x4c20e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%28:\l28:                                               \l  %29 = sext i32 %24 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !16\l  %32 = and i32 %2, 7\l  %33 = icmp ult i32 %2, 8\l  br i1 %33, label %98, label %34\l|{<s0>T|<s1>F}}"];
	Node0x4c20e70:s0 -> Node0x4c205c0;
	Node0x4c20e70:s1 -> Node0x4c215d0;
	Node0x4c215d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%34:\l34:                                               \l  %35 = and i32 %2, -8\l  br label %36\l}"];
	Node0x4c215d0 -> Node0x4c217d0;
	Node0x4c217d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%36:\l36:                                               \l  %37 = phi float [ %31, %34 ], [ %94, %36 ]\l  %38 = phi i32 [ 0, %34 ], [ %95, %36 ]\l  %39 = phi i32 [ 0, %34 ], [ %96, %36 ]\l  %40 = mul nsw i32 %38, %3\l  %41 = add nsw i32 %40, %24\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !16\l  %45 = fadd contract float %44, %37\l  store float %45, float addrspace(1)* %30, align 4, !tbaa !16\l  %46 = or i32 %38, 1\l  %47 = mul nsw i32 %46, %3\l  %48 = add nsw i32 %47, %24\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !16\l  %52 = fadd contract float %51, %45\l  store float %52, float addrspace(1)* %30, align 4, !tbaa !16\l  %53 = or i32 %38, 2\l  %54 = mul nsw i32 %53, %3\l  %55 = add nsw i32 %54, %24\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !16\l  %59 = fadd contract float %58, %52\l  store float %59, float addrspace(1)* %30, align 4, !tbaa !16\l  %60 = or i32 %38, 3\l  %61 = mul nsw i32 %60, %3\l  %62 = add nsw i32 %61, %24\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !16\l  %66 = fadd contract float %65, %59\l  store float %66, float addrspace(1)* %30, align 4, !tbaa !16\l  %67 = or i32 %38, 4\l  %68 = mul nsw i32 %67, %3\l  %69 = add nsw i32 %68, %24\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !16\l  %73 = fadd contract float %72, %66\l  store float %73, float addrspace(1)* %30, align 4, !tbaa !16\l  %74 = or i32 %38, 5\l  %75 = mul nsw i32 %74, %3\l  %76 = add nsw i32 %75, %24\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !16\l  %80 = fadd contract float %79, %73\l  store float %80, float addrspace(1)* %30, align 4, !tbaa !16\l  %81 = or i32 %38, 6\l  %82 = mul nsw i32 %81, %3\l  %83 = add nsw i32 %82, %24\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %0, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !16\l  %87 = fadd contract float %86, %80\l  store float %87, float addrspace(1)* %30, align 4, !tbaa !16\l  %88 = or i32 %38, 7\l  %89 = mul nsw i32 %88, %3\l  %90 = add nsw i32 %89, %24\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !16\l  %94 = fadd contract float %93, %87\l  store float %94, float addrspace(1)* %30, align 4, !tbaa !16\l  %95 = add nuw nsw i32 %38, 8\l  %96 = add i32 %39, 8\l  %97 = icmp eq i32 %96, %35\l  br i1 %97, label %98, label %36, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4c217d0:s0 -> Node0x4c205c0;
	Node0x4c217d0:s1 -> Node0x4c217d0;
	Node0x4c205c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%98:\l98:                                               \l  %99 = phi float [ %31, %28 ], [ %94, %36 ]\l  %100 = phi i32 [ 0, %28 ], [ %95, %36 ]\l  %101 = icmp eq i32 %32, 0\l  br i1 %101, label %115, label %102\l|{<s0>T|<s1>F}}"];
	Node0x4c205c0:s0 -> Node0x4c20f00;
	Node0x4c205c0:s1 -> Node0x4c24bf0;
	Node0x4c24bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  %103 = phi float [ %111, %102 ], [ %99, %98 ]\l  %104 = phi i32 [ %112, %102 ], [ %100, %98 ]\l  %105 = phi i32 [ %113, %102 ], [ 0, %98 ]\l  %106 = mul nsw i32 %104, %3\l  %107 = add nsw i32 %106, %24\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %0, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !16\l  %111 = fadd contract float %110, %103\l  store float %111, float addrspace(1)* %30, align 4, !tbaa !16\l  %112 = add nuw nsw i32 %104, 1\l  %113 = add i32 %105, 1\l  %114 = icmp eq i32 %113, %32\l  br i1 %114, label %115, label %102, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4c24bf0:s0 -> Node0x4c20f00;
	Node0x4c24bf0:s1 -> Node0x4c24bf0;
	Node0x4c20f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%115:\l115:                                              \l  ret void\l}"];
}
