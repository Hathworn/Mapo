digraph "CFG for '_Z33calcConvolutionForwardPaddedInGPUPfS_iiiii' function" {
	label="CFG for '_Z33calcConvolutionForwardPaddedInGPUPfS_iiiii' function";

	Node0x5dc5790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !4\l  %14 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !13, !invariant.load\l... !14\l  %17 = zext i16 %16 to i32\l  %18 = udiv i32 %13, %17\l  %19 = mul i32 %18, %17\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %9\l  %24 = add i32 %23, %8\l  %25 = mul i32 %24, %17\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %27 = add i32 %25, %26\l  %28 = mul nsw i32 %3, %2\l  %29 = mul nsw i32 %28, %4\l  %30 = mul nsw i32 %29, %5\l  %31 = icmp slt i32 %27, %30\l  br i1 %31, label %32, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5dc5790:s0 -> Node0x5dc81b0;
	Node0x5dc5790:s1 -> Node0x5dc8240;
	Node0x5dc81b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = freeze i32 %27\l  %34 = freeze i32 %3\l  %35 = sdiv i32 %33, %34\l  %36 = mul i32 %35, %34\l  %37 = sub i32 %33, %36\l  %38 = freeze i32 %4\l  %39 = sdiv i32 %35, %38\l  %40 = mul i32 %39, %38\l  %41 = sub i32 %35, %40\l  %42 = freeze i32 %39\l  %43 = shl nsw i32 %6, 1\l  %44 = add nsw i32 %43, %3\l  %45 = add nsw i32 %43, %4\l  %46 = add nsw i32 %41, %6\l  %47 = add nsw i32 %37, %6\l  %48 = mul i32 %42, %45\l  %49 = add i32 %46, %48\l  %50 = mul i32 %49, %44\l  %51 = add i32 %47, %50\l  %52 = sext i32 %27 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %55 = sext i32 %51 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %55\l  store float %54, float addrspace(1)* %56, align 4, !tbaa !16\l  br label %57\l}"];
	Node0x5dc81b0 -> Node0x5dc8240;
	Node0x5dc8240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  ret void\l}"];
}
