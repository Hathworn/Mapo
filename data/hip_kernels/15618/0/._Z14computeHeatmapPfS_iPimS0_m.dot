digraph "CFG for '_Z14computeHeatmapPfS_iPimS0_m' function" {
	label="CFG for '_Z14computeHeatmapPfS_iPimS0_m' function";

	Node0x4eeabf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %9, %16\l  %18 = add i32 %17, %11\l  %19 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %8, %22\l  %24 = add i32 %23, %10\l  %25 = bitcast i32 addrspace(1)* %3 to i8 addrspace(1)*\l  %26 = sext i32 %24 to i64\l  %27 = mul i64 %26, %4\l  %28 = getelementptr inbounds i8, i8 addrspace(1)* %25, i64 %27\l  %29 = bitcast i8 addrspace(1)* %28 to i32 addrspace(1)*\l  %30 = sext i32 %18 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %29, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %33 = sitofp i32 %32 to double\l  %34 = fmul contract double %33, 8.000000e-01\l  %35 = tail call double @llvm.round.f64(double %34)\l  %36 = fptosi double %35 to i32\l  store i32 %36, i32 addrspace(1)* %31, align 4, !tbaa !7\l  %37 = icmp eq i32 %10, 0\l  %38 = icmp eq i32 %11, 0\l  %39 = select i1 %37, i1 %38, i1 false\l  %40 = icmp sgt i32 %2, 0\l  %41 = select i1 %39, i1 %40, i1 false\l  br i1 %41, label %42, label %141\l|{<s0>T|<s1>F}}"];
	Node0x4eeabf0:s0 -> Node0x4ef0300;
	Node0x4eeabf0:s1 -> Node0x4ef0390;
	Node0x4ef0300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%42:\l42:                                               \l  %43 = and i32 %2, 7\l  %44 = icmp ult i32 %2, 8\l  br i1 %44, label %124, label %45\l|{<s0>T|<s1>F}}"];
	Node0x4ef0300:s0 -> Node0x4ef0650;
	Node0x4ef0300:s1 -> Node0x4ef06a0;
	Node0x4ef06a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%45:\l45:                                               \l  %46 = and i32 %2, -8\l  br label %47\l}"];
	Node0x4ef06a0 -> Node0x4ef08a0;
	Node0x4ef08a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%47:\l47:                                               \l  %48 = phi i32 [ 0, %45 ], [ %121, %47 ]\l  %49 = phi i32 [ 0, %45 ], [ %122, %47 ]\l  %50 = zext i32 %48 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %53 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %48\l  store float %52, float addrspace(3)* %53, align 4, !tbaa !11\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %50\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %56 = add nsw i32 %48, %2\l  %57 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %56\l  store float %55, float addrspace(3)* %57, align 4, !tbaa !11\l  %58 = or i32 %48, 1\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %62 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %58\l  store float %61, float addrspace(3)* %62, align 4, !tbaa !11\l  %63 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %65 = add nsw i32 %58, %2\l  %66 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %65\l  store float %64, float addrspace(3)* %66, align 4, !tbaa !11\l  %67 = or i32 %48, 2\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %71 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %67\l  store float %70, float addrspace(3)* %71, align 4, !tbaa !11\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %68\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %74 = add nsw i32 %67, %2\l  %75 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %74\l  store float %73, float addrspace(3)* %75, align 4, !tbaa !11\l  %76 = or i32 %48, 3\l  %77 = zext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %80 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %76\l  store float %79, float addrspace(3)* %80, align 4, !tbaa !11\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %77\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %83 = add nsw i32 %76, %2\l  %84 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %83\l  store float %82, float addrspace(3)* %84, align 4, !tbaa !11\l  %85 = or i32 %48, 4\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %89 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %85\l  store float %88, float addrspace(3)* %89, align 4, !tbaa !11\l  %90 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %92 = add nsw i32 %85, %2\l  %93 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %92\l  store float %91, float addrspace(3)* %93, align 4, !tbaa !11\l  %94 = or i32 %48, 5\l  %95 = zext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %0, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %98 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %94\l  store float %97, float addrspace(3)* %98, align 4, !tbaa !11\l  %99 = getelementptr inbounds float, float addrspace(1)* %1, i64 %95\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %101 = add nsw i32 %94, %2\l  %102 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %101\l  store float %100, float addrspace(3)* %102, align 4, !tbaa !11\l  %103 = or i32 %48, 6\l  %104 = zext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %0, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %107 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %103\l  store float %106, float addrspace(3)* %107, align 4, !tbaa !11\l  %108 = getelementptr inbounds float, float addrspace(1)* %1, i64 %104\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %110 = add nsw i32 %103, %2\l  %111 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %110\l  store float %109, float addrspace(3)* %111, align 4, !tbaa !11\l  %112 = or i32 %48, 7\l  %113 = zext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %0, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %116 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %112\l  store float %115, float addrspace(3)* %116, align 4, !tbaa !11\l  %117 = getelementptr inbounds float, float addrspace(1)* %1, i64 %113\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %119 = add nsw i32 %112, %2\l  %120 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %119\l  store float %118, float addrspace(3)* %120, align 4, !tbaa !11\l  %121 = add nuw nsw i32 %48, 8\l  %122 = add i32 %49, 8\l  %123 = icmp eq i32 %122, %46\l  br i1 %123, label %124, label %47, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4ef08a0:s0 -> Node0x4ef0650;
	Node0x4ef08a0:s1 -> Node0x4ef08a0;
	Node0x4ef0650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%124:\l124:                                              \l  %125 = phi i32 [ 0, %42 ], [ %121, %47 ]\l  %126 = icmp eq i32 %43, 0\l  br i1 %126, label %141, label %127\l|{<s0>T|<s1>F}}"];
	Node0x4ef0650:s0 -> Node0x4ef0390;
	Node0x4ef0650:s1 -> Node0x4ef5070;
	Node0x4ef5070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%127:\l127:                                              \l  %128 = phi i32 [ %138, %127 ], [ %125, %124 ]\l  %129 = phi i32 [ %139, %127 ], [ 0, %124 ]\l  %130 = zext i32 %128 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %0, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %133 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %128\l  store float %132, float addrspace(3)* %133, align 4, !tbaa !11\l  %134 = getelementptr inbounds float, float addrspace(1)* %1, i64 %130\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %136 = add nsw i32 %128, %2\l  %137 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %136\l  store float %135, float addrspace(3)* %137, align 4, !tbaa !11\l  %138 = add nuw nsw i32 %128, 1\l  %139 = add i32 %129, 1\l  %140 = icmp eq i32 %139, %43\l  br i1 %140, label %141, label %127, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4ef5070:s0 -> Node0x4ef0390;
	Node0x4ef5070:s1 -> Node0x4ef5070;
	Node0x4ef0390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%141:\l141:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %40, label %142, label %166\l|{<s0>T|<s1>F}}"];
	Node0x4ef0390:s0 -> Node0x4ef6310;
	Node0x4ef0390:s1 -> Node0x4ef6360;
	Node0x4ef6310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%142:\l142:                                              \l  %143 = and i32 %2, 1\l  %144 = icmp eq i32 %2, 1\l  br i1 %144, label %147, label %145\l|{<s0>T|<s1>F}}"];
	Node0x4ef6310:s0 -> Node0x4ef65c0;
	Node0x4ef6310:s1 -> Node0x4ef6610;
	Node0x4ef6610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%145:\l145:                                              \l  %146 = and i32 %2, -2\l  br label %167\l}"];
	Node0x4ef6610 -> Node0x4ef67e0;
	Node0x4ef65c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%147:\l147:                                              \l  %148 = phi i32 [ 0, %142 ], [ %203, %202 ]\l  %149 = icmp eq i32 %143, 0\l  br i1 %149, label %166, label %150\l|{<s0>T|<s1>F}}"];
	Node0x4ef65c0:s0 -> Node0x4ef6360;
	Node0x4ef65c0:s1 -> Node0x4ef6aa0;
	Node0x4ef6aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%150:\l150:                                              \l  %151 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %148\l  %152 = load float, float addrspace(3)* %151, align 4, !tbaa !11\l  %153 = fptosi float %152 to i32\l  %154 = icmp eq i32 %18, %153\l  br i1 %154, label %155, label %166\l|{<s0>T|<s1>F}}"];
	Node0x4ef6aa0:s0 -> Node0x4ef6e50;
	Node0x4ef6aa0:s1 -> Node0x4ef6360;
	Node0x4ef6e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%155:\l155:                                              \l  %156 = add nsw i32 %148, %2\l  %157 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %156\l  %158 = load float, float addrspace(3)* %157, align 4, !tbaa !11\l  %159 = fptosi float %158 to i32\l  %160 = icmp eq i32 %24, %159\l  br i1 %160, label %161, label %166\l|{<s0>T|<s1>F}}"];
	Node0x4ef6e50:s0 -> Node0x4ef7210;
	Node0x4ef6e50:s1 -> Node0x4ef6360;
	Node0x4ef7210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%161:\l161:                                              \l  %162 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7\l  %163 = icmp slt i32 %162, 216\l  br i1 %163, label %164, label %166\l|{<s0>T|<s1>F}}"];
	Node0x4ef7210:s0 -> Node0x4ef7410;
	Node0x4ef7210:s1 -> Node0x4ef6360;
	Node0x4ef7410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%164:\l164:                                              \l  %165 = add nsw i32 %162, 40\l  store i32 %165, i32 addrspace(1)* %31, align 4, !tbaa !7\l  br label %166\l}"];
	Node0x4ef7410 -> Node0x4ef6360;
	Node0x4ef6360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%166:\l166:                                              \l  ret void\l}"];
	Node0x4ef67e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%167:\l167:                                              \l  %168 = phi i32 [ 0, %145 ], [ %203, %202 ]\l  %169 = phi i32 [ 0, %145 ], [ %204, %202 ]\l  %170 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %168\l  %171 = load float, float addrspace(3)* %170, align 4, !tbaa !11\l  %172 = fptosi float %171 to i32\l  %173 = icmp eq i32 %18, %172\l  br i1 %173, label %174, label %185\l|{<s0>T|<s1>F}}"];
	Node0x4ef67e0:s0 -> Node0x4eeb850;
	Node0x4ef67e0:s1 -> Node0x4eeb8a0;
	Node0x4eeb850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%174:\l174:                                              \l  %175 = add nsw i32 %168, %2\l  %176 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %175\l  %177 = load float, float addrspace(3)* %176, align 4, !tbaa !11\l  %178 = fptosi float %177 to i32\l  %179 = icmp eq i32 %24, %178\l  br i1 %179, label %180, label %185\l|{<s0>T|<s1>F}}"];
	Node0x4eeb850:s0 -> Node0x4eebc60;
	Node0x4eeb850:s1 -> Node0x4eeb8a0;
	Node0x4eebc60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%180:\l180:                                              \l  %181 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7\l  %182 = icmp slt i32 %181, 216\l  br i1 %182, label %183, label %185\l|{<s0>T|<s1>F}}"];
	Node0x4eebc60:s0 -> Node0x4eebd60;
	Node0x4eebc60:s1 -> Node0x4eeb8a0;
	Node0x4eebd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%183:\l183:                                              \l  %184 = add nsw i32 %181, 40\l  store i32 %184, i32 addrspace(1)* %31, align 4, !tbaa !7\l  br label %185\l}"];
	Node0x4eebd60 -> Node0x4eeb8a0;
	Node0x4eeb8a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%185:\l185:                                              \l  %186 = or i32 %168, 1\l  %187 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %186\l  %188 = load float, float addrspace(3)* %187, align 4, !tbaa !11\l  %189 = fptosi float %188 to i32\l  %190 = icmp eq i32 %18, %189\l  br i1 %190, label %191, label %202\l|{<s0>T|<s1>F}}"];
	Node0x4eeb8a0:s0 -> Node0x4ef9080;
	Node0x4eeb8a0:s1 -> Node0x4ef68d0;
	Node0x4ef9080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%191:\l191:                                              \l  %192 = add nsw i32 %186, %2\l  %193 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @desiredPosition, i32 0, i32 %192\l  %194 = load float, float addrspace(3)* %193, align 4, !tbaa !11\l  %195 = fptosi float %194 to i32\l  %196 = icmp eq i32 %24, %195\l  br i1 %196, label %197, label %202\l|{<s0>T|<s1>F}}"];
	Node0x4ef9080:s0 -> Node0x4ef9440;
	Node0x4ef9080:s1 -> Node0x4ef68d0;
	Node0x4ef9440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%197:\l197:                                              \l  %198 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7\l  %199 = icmp slt i32 %198, 216\l  br i1 %199, label %200, label %202\l|{<s0>T|<s1>F}}"];
	Node0x4ef9440:s0 -> Node0x4ef9640;
	Node0x4ef9440:s1 -> Node0x4ef68d0;
	Node0x4ef9640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%200:\l200:                                              \l  %201 = add nsw i32 %198, 40\l  store i32 %201, i32 addrspace(1)* %31, align 4, !tbaa !7\l  br label %202\l}"];
	Node0x4ef9640 -> Node0x4ef68d0;
	Node0x4ef68d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%202:\l202:                                              \l  %203 = add nuw nsw i32 %168, 2\l  %204 = add i32 %169, 2\l  %205 = icmp eq i32 %204, %146\l  br i1 %205, label %147, label %167, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x4ef68d0:s0 -> Node0x4ef65c0;
	Node0x4ef68d0:s1 -> Node0x4ef67e0;
}
