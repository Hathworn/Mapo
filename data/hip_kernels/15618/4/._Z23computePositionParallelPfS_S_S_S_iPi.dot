digraph "CFG for '_Z23computePositionParallelPfS_S_S_S_iPi' function" {
	label="CFG for '_Z23computePositionParallelPfS_S_S_S_iPi' function";

	Node0x62ca9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !6\l  %17 = mul i32 %8, %13\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %19 = add i32 %17, %18\l  %20 = udiv i32 %16, %13\l  %21 = mul i32 %20, %13\l  %22 = icmp ugt i32 %16, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %13\l  %26 = icmp slt i32 %19, %5\l  br i1 %26, label %28, label %27\l|{<s0>T|<s1>F}}"];
	Node0x62ca9e0:s0 -> Node0x62ccf80;
	Node0x62ca9e0:s1 -> Node0x62cd010;
	Node0x62cd010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%27:\l27:                                               \l  ret void\l}"];
	Node0x62ccf80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %126, %125 ], [ %19, %7 ]\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %33 = fcmp contract oeq float %32, -1.000000e+00\l  br i1 %33, label %125, label %34\l|{<s0>T|<s1>F}}"];
	Node0x62ccf80:s0 -> Node0x62cd1a0;
	Node0x62ccf80:s1 -> Node0x62ce1b0;
	Node0x62ce1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds float, float addrspace(1)* %3, i64 %30\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %37 = fcmp contract oeq float %36, -1.000000e+00\l  br i1 %37, label %125, label %38\l|{<s0>T|<s1>F}}"];
	Node0x62ce1b0:s0 -> Node0x62cd1a0;
	Node0x62ce1b0:s1 -> Node0x62cea60;
	Node0x62cea60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%38:\l38:                                               \l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !16\l  %41 = fsub contract float %32, %40\l  %42 = fpext float %41 to double\l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !16\l  %45 = fsub contract float %36, %44\l  %46 = fpext float %45 to double\l  %47 = fmul contract double %42, %42\l  %48 = fmul contract double %46, %46\l  %49 = fadd contract double %47, %48\l  %50 = fptrunc double %49 to float\l  %51 = fcmp olt float %50, 0x39F0000000000000\l  %52 = select i1 %51, float 0x41F0000000000000, float 1.000000e+00\l  %53 = fmul float %52, %50\l  %54 = tail call float @llvm.sqrt.f32(float %53)\l  %55 = bitcast float %54 to i32\l  %56 = add nsw i32 %55, -1\l  %57 = bitcast i32 %56 to float\l  %58 = add nsw i32 %55, 1\l  %59 = bitcast i32 %58 to float\l  %60 = tail call i1 @llvm.amdgcn.class.f32(float %53, i32 608)\l  %61 = select i1 %51, float 0x3EF0000000000000, float 1.000000e+00\l  %62 = fneg float %59\l  %63 = tail call float @llvm.fma.f32(float %62, float %54, float %53)\l  %64 = fcmp ogt float %63, 0.000000e+00\l  %65 = fneg float %57\l  %66 = tail call float @llvm.fma.f32(float %65, float %54, float %53)\l  %67 = fcmp ole float %66, 0.000000e+00\l  %68 = select i1 %67, float %57, float %54\l  %69 = select i1 %64, float %59, float %68\l  %70 = fmul float %61, %69\l  %71 = select i1 %60, float %53, float %70\l  %72 = fpext float %71 to double\l  %73 = fpext float %40 to double\l  %74 = fdiv contract double %42, %72\l  %75 = fadd contract double %74, %73\l  %76 = fptrunc double %75 to float\l  %77 = tail call float @llvm.rint.f32(float %76)\l  %78 = fptosi float %77 to i64\l  %79 = sitofp i64 %78 to float\l  store float %79, float addrspace(1)* %39, align 4, !tbaa !16\l  %80 = load float, float addrspace(1)* %43, align 4, !tbaa !16\l  %81 = fpext float %80 to double\l  %82 = fdiv contract double %46, %72\l  %83 = fadd contract double %82, %81\l  %84 = fptrunc double %83 to float\l  %85 = tail call float @llvm.rint.f32(float %84)\l  %86 = fptosi float %85 to i64\l  %87 = sitofp i64 %86 to float\l  store float %87, float addrspace(1)* %43, align 4, !tbaa !16\l  %88 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %89 = load float, float addrspace(1)* %39, align 4, !tbaa !16\l  %90 = fsub contract float %88, %89\l  %91 = fpext float %90 to double\l  %92 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %93 = fsub contract float %92, %87\l  %94 = fpext float %93 to double\l  %95 = fmul contract double %91, %91\l  %96 = fmul contract double %94, %94\l  %97 = fadd contract double %95, %96\l  %98 = fptrunc double %97 to float\l  %99 = fcmp olt float %98, 0x39F0000000000000\l  %100 = select i1 %99, float 0x41F0000000000000, float 1.000000e+00\l  %101 = fmul float %100, %98\l  %102 = tail call float @llvm.sqrt.f32(float %101)\l  %103 = bitcast float %102 to i32\l  %104 = add nsw i32 %103, -1\l  %105 = bitcast i32 %104 to float\l  %106 = add nsw i32 %103, 1\l  %107 = bitcast i32 %106 to float\l  %108 = tail call i1 @llvm.amdgcn.class.f32(float %101, i32 608)\l  %109 = select i1 %99, float 0x3EF0000000000000, float 1.000000e+00\l  %110 = fneg float %107\l  %111 = tail call float @llvm.fma.f32(float %110, float %102, float %101)\l  %112 = fcmp ogt float %111, 0.000000e+00\l  %113 = fneg float %105\l  %114 = tail call float @llvm.fma.f32(float %113, float %102, float %101)\l  %115 = fcmp ole float %114, 0.000000e+00\l  %116 = select i1 %115, float %105, float %102\l  %117 = select i1 %112, float %107, float %116\l  %118 = fmul float %109, %117\l  %119 = select i1 %108, float %101, float %118\l  %120 = getelementptr inbounds float, float addrspace(1)* %4, i64 %30\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !16\l  %122 = fcmp contract olt float %119, %121\l  br i1 %122, label %123, label %125\l|{<s0>T|<s1>F}}"];
	Node0x62cea60:s0 -> Node0x62d2730;
	Node0x62cea60:s1 -> Node0x62cd1a0;
	Node0x62d2730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%123:\l123:                                              \l  %124 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %30\l  store i32 1, i32 addrspace(1)* %124, align 4, !tbaa !20\l  br label %125\l}"];
	Node0x62d2730 -> Node0x62cd1a0;
	Node0x62cd1a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%125:\l125:                                              \l  %126 = add nsw i32 %29, %25\l  %127 = icmp slt i32 %126, %5\l  br i1 %127, label %28, label %27, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x62cd1a0:s0 -> Node0x62ccf80;
	Node0x62cd1a0:s1 -> Node0x62cd010;
}
