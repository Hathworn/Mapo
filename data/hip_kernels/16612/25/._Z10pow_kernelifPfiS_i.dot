digraph "CFG for '_Z10pow_kernelifPfiS_i' function" {
	label="CFG for '_Z10pow_kernelifPfiS_i' function";

	Node0x5660ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !4\l  %13 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !13, !invariant.load\l... !14\l  %16 = zext i16 %15 to i32\l  %17 = udiv i32 %12, %16\l  %18 = mul i32 %17, %16\l  %19 = icmp ugt i32 %12, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %8\l  %23 = add i32 %22, %7\l  %24 = mul i32 %23, %16\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %26, %0\l  br i1 %27, label %28, label %227\l|{<s0>T|<s1>F}}"];
	Node0x5660ce0:s0 -> Node0x56634f0;
	Node0x5660ce0:s1 -> Node0x5663580;
	Node0x56634f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%28:\l28:                                               \l  %29 = mul nsw i32 %26, %3\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %33 = tail call float @llvm.fabs.f32(float %32)\l  %34 = tail call float @llvm.amdgcn.frexp.mant.f32(float %33)\l  %35 = fcmp olt float %34, 0x3FE5555560000000\l  %36 = zext i1 %35 to i32\l  %37 = tail call float @llvm.amdgcn.ldexp.f32(float %34, i32 %36)\l  %38 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %33)\l  %39 = sub nsw i32 %38, %36\l  %40 = fadd float %37, -1.000000e+00\l  %41 = fadd float %37, 1.000000e+00\l  %42 = fadd float %41, -1.000000e+00\l  %43 = fsub float %37, %42\l  %44 = tail call float @llvm.amdgcn.rcp.f32(float %41)\l  %45 = fmul float %40, %44\l  %46 = fmul float %41, %45\l  %47 = fneg float %46\l  %48 = tail call float @llvm.fma.f32(float %45, float %41, float %47)\l  %49 = tail call float @llvm.fma.f32(float %45, float %43, float %48)\l  %50 = fadd float %46, %49\l  %51 = fsub float %50, %46\l  %52 = fsub float %49, %51\l  %53 = fsub float %40, %50\l  %54 = fsub float %40, %53\l  %55 = fsub float %54, %50\l  %56 = fsub float %55, %52\l  %57 = fadd float %53, %56\l  %58 = fmul float %44, %57\l  %59 = fadd float %45, %58\l  %60 = fsub float %59, %45\l  %61 = fsub float %58, %60\l  %62 = fmul float %59, %59\l  %63 = fneg float %62\l  %64 = tail call float @llvm.fma.f32(float %59, float %59, float %63)\l  %65 = fmul float %61, 2.000000e+00\l  %66 = tail call float @llvm.fma.f32(float %59, float %65, float %64)\l  %67 = fadd float %62, %66\l  %68 = fsub float %67, %62\l  %69 = fsub float %66, %68\l  %70 = tail call float @llvm.fmuladd.f32(float %67, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %71 = tail call float @llvm.fmuladd.f32(float %67, float %70, float\l... 0x3FD999BDE0000000)\l  %72 = sitofp i32 %39 to float\l  %73 = fmul float %72, 0x3FE62E4300000000\l  %74 = fneg float %73\l  %75 = tail call float @llvm.fma.f32(float %72, float 0x3FE62E4300000000,\l... float %74)\l  %76 = tail call float @llvm.fma.f32(float %72, float 0xBE205C6100000000,\l... float %75)\l  %77 = fadd float %73, %76\l  %78 = fsub float %77, %73\l  %79 = fsub float %76, %78\l  %80 = tail call float @llvm.amdgcn.ldexp.f32(float %59, i32 1)\l  %81 = fmul float %59, %67\l  %82 = fneg float %81\l  %83 = tail call float @llvm.fma.f32(float %67, float %59, float %82)\l  %84 = tail call float @llvm.fma.f32(float %67, float %61, float %83)\l  %85 = tail call float @llvm.fma.f32(float %69, float %59, float %84)\l  %86 = fadd float %81, %85\l  %87 = fsub float %86, %81\l  %88 = fsub float %85, %87\l  %89 = fmul float %67, %71\l  %90 = fneg float %89\l  %91 = tail call float @llvm.fma.f32(float %67, float %71, float %90)\l  %92 = tail call float @llvm.fma.f32(float %69, float %71, float %91)\l  %93 = fadd float %89, %92\l  %94 = fsub float %93, %89\l  %95 = fsub float %92, %94\l  %96 = fadd float %93, 0x3FE5555540000000\l  %97 = fadd float %96, 0xBFE5555540000000\l  %98 = fsub float %93, %97\l  %99 = fadd float %95, 0x3E2E720200000000\l  %100 = fadd float %99, %98\l  %101 = fadd float %96, %100\l  %102 = fsub float %101, %96\l  %103 = fsub float %100, %102\l  %104 = fmul float %86, %101\l  %105 = fneg float %104\l  %106 = tail call float @llvm.fma.f32(float %86, float %101, float %105)\l  %107 = tail call float @llvm.fma.f32(float %86, float %103, float %106)\l  %108 = tail call float @llvm.fma.f32(float %88, float %101, float %107)\l  %109 = tail call float @llvm.amdgcn.ldexp.f32(float %61, i32 1)\l  %110 = fadd float %104, %108\l  %111 = fsub float %110, %104\l  %112 = fsub float %108, %111\l  %113 = fadd float %80, %110\l  %114 = fsub float %113, %80\l  %115 = fsub float %110, %114\l  %116 = fadd float %109, %112\l  %117 = fadd float %116, %115\l  %118 = fadd float %113, %117\l  %119 = fsub float %118, %113\l  %120 = fsub float %117, %119\l  %121 = fadd float %77, %118\l  %122 = fsub float %121, %77\l  %123 = fsub float %121, %122\l  %124 = fsub float %77, %123\l  %125 = fsub float %118, %122\l  %126 = fadd float %125, %124\l  %127 = fadd float %79, %120\l  %128 = fsub float %127, %79\l  %129 = fsub float %127, %128\l  %130 = fsub float %79, %129\l  %131 = fsub float %120, %128\l  %132 = fadd float %131, %130\l  %133 = fadd float %127, %126\l  %134 = fadd float %121, %133\l  %135 = fsub float %134, %121\l  %136 = fsub float %133, %135\l  %137 = fadd float %132, %136\l  %138 = fadd float %134, %137\l  %139 = fsub float %138, %134\l  %140 = fsub float %137, %139\l  %141 = fmul float %138, %1\l  %142 = fneg float %141\l  %143 = tail call float @llvm.fma.f32(float %1, float %138, float %142)\l  %144 = tail call float @llvm.fma.f32(float %1, float %140, float %143)\l  %145 = fadd float %141, %144\l  %146 = fsub float %145, %141\l  %147 = fsub float %144, %146\l  %148 = tail call float @llvm.fabs.f32(float %141) #3\l  %149 = fcmp oeq float %148, 0x7FF0000000000000\l  %150 = select i1 %149, float %141, float %145\l  %151 = tail call float @llvm.fabs.f32(float %150) #3\l  %152 = fcmp oeq float %151, 0x7FF0000000000000\l  %153 = select i1 %152, float 0.000000e+00, float %147\l  %154 = fcmp oeq float %150, 0x40562E4300000000\l  %155 = select i1 %154, float 0x3EE0000000000000, float 0.000000e+00\l  %156 = fsub float %150, %155\l  %157 = fadd float %155, %153\l  %158 = fmul float %156, 0x3FF7154760000000\l  %159 = tail call float @llvm.rint.f32(float %158)\l  %160 = fcmp ogt float %156, 0x40562E4300000000\l  %161 = fcmp olt float %156, 0xC059D1DA00000000\l  %162 = fneg float %158\l  %163 = tail call float @llvm.fma.f32(float %156, float 0x3FF7154760000000,\l... float %162)\l  %164 = tail call float @llvm.fma.f32(float %156, float 0x3E54AE0BE0000000,\l... float %163)\l  %165 = fsub float %158, %159\l  %166 = fadd float %164, %165\l  %167 = tail call float @llvm.exp2.f32(float %166)\l  %168 = fptosi float %159 to i32\l  %169 = tail call float @llvm.amdgcn.ldexp.f32(float %167, i32 %168)\l  %170 = select i1 %161, float 0.000000e+00, float %169\l  %171 = select i1 %160, float 0x7FF0000000000000, float %170\l  %172 = tail call float @llvm.fma.f32(float %171, float %157, float %171)\l  %173 = tail call float @llvm.fabs.f32(float %171) #3\l  %174 = fcmp oeq float %173, 0x7FF0000000000000\l  %175 = select i1 %174, float %171, float %172\l  %176 = tail call float @llvm.fabs.f32(float %1)\l  %177 = tail call float @llvm.trunc.f32(float %176)\l  %178 = fcmp oeq float %176, %177\l  %179 = zext i1 %178 to i32\l  %180 = fmul float %177, 5.000000e-01\l  %181 = tail call float @llvm.amdgcn.fract.f32(float %180)\l  %182 = tail call i1 @llvm.amdgcn.class.f32(float %180, i32 516)\l  %183 = select i1 %182, float 0.000000e+00, float %181\l  %184 = fcmp oeq float %183, 0.000000e+00\l  %185 = and i1 %178, %184\l  %186 = zext i1 %185 to i32\l  %187 = add nuw nsw i32 %186, %179\l  %188 = icmp eq i32 %187, 1\l  %189 = fcmp olt float %32, 0.000000e+00\l  %190 = and i1 %188, %189\l  %191 = select i1 %190, float -0.000000e+00, float 0.000000e+00\l  %192 = tail call float @llvm.copysign.f32(float %175, float %191)\l  %193 = fcmp uge float %32, 0.000000e+00\l  %194 = icmp ne i32 %187, 0\l  %195 = select i1 %193, i1 true, i1 %194\l  %196 = select i1 %195, float %192, float 0x7FF8000000000000\l  %197 = fcmp oeq float %176, 0x7FF0000000000000\l  br i1 %197, label %198, label %207\l|{<s0>T|<s1>F}}"];
	Node0x56634f0:s0 -> Node0x566d930;
	Node0x56634f0:s1 -> Node0x566d9c0;
	Node0x566d930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%198:\l198:                                              \l  %199 = fcmp oeq float %33, 1.000000e+00\l  %200 = fadd float %33, -1.000000e+00\l  %201 = bitcast float %1 to i32\l  %202 = bitcast float %200 to i32\l  %203 = xor i32 %202, %201\l  %204 = icmp sgt i32 %203, -1\l  %205 = select i1 %204, float 0x7FF0000000000000, float 0.000000e+00\l  %206 = select i1 %199, float %33, float %205\l  br label %207\l}"];
	Node0x566d930 -> Node0x566d9c0;
	Node0x566d9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%207:\l207:                                              \l  %208 = phi float [ %196, %28 ], [ %206, %198 ]\l  %209 = fcmp oeq float %33, 0x7FF0000000000000\l  %210 = fcmp oeq float %32, 0.000000e+00\l  %211 = or i1 %210, %209\l  %212 = fcmp olt float %1, 0.000000e+00\l  %213 = xor i1 %212, %210\l  %214 = select i1 %213, float 0.000000e+00, float 0x7FF0000000000000\l  %215 = select i1 %188, float %32, float 0.000000e+00\l  %216 = tail call float @llvm.copysign.f32(float %214, float %215)\l  %217 = select i1 %211, float %216, float %208\l  %218 = fcmp uno float %32, %1\l  %219 = select i1 %218, float 0x7FF8000000000000, float %217\l  %220 = fcmp oeq float %32, 1.000000e+00\l  %221 = fcmp oeq float %1, 0.000000e+00\l  %222 = or i1 %221, %220\l  %223 = select i1 %222, float 1.000000e+00, float %219\l  %224 = mul nsw i32 %26, %5\l  %225 = sext i32 %224 to i64\l  %226 = getelementptr inbounds float, float addrspace(1)* %4, i64 %225\l  store float %223, float addrspace(1)* %226, align 4, !tbaa !16\l  br label %227\l}"];
	Node0x566d9c0 -> Node0x5663580;
	Node0x5663580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%227:\l227:                                              \l  ret void\l}"];
}
