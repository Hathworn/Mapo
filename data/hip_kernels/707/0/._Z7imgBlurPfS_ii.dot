digraph "CFG for '_Z7imgBlurPfS_ii' function" {
	label="CFG for '_Z7imgBlurPfS_ii' function";

	Node0x4e6e2f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %13, %2\l  %23 = icmp slt i32 %21, %3\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %115\l|{<s0>T|<s1>F}}"];
	Node0x4e6e2f0:s0 -> Node0x4e71d90;
	Node0x4e6e2f0:s1 -> Node0x4e71e20;
	Node0x4e71d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%25:\l25:                                               \l  %26 = mul nsw i32 %13, %2\l  %27 = add nsw i32 %26, %21\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = icmp sgt i32 %13, 0\l  %32 = icmp sgt i32 %21, 0\l  %33 = select i1 %31, i1 %32, i1 false\l  br i1 %33, label %34, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4e71d90:s0 -> Node0x4e70510;
	Node0x4e71d90:s1 -> Node0x4e72720;
	Node0x4e70510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%34:\l34:                                               \l  %35 = add nsw i32 %13, -1\l  %36 = mul nsw i32 %35, %2\l  %37 = add nsw i32 %21, -1\l  %38 = add nsw i32 %37, %36\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = fadd contract float %30, %41\l  br label %43\l}"];
	Node0x4e70510 -> Node0x4e72720;
	Node0x4e72720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%43:\l43:                                               \l  %44 = phi float [ %42, %34 ], [ %30, %25 ]\l  br i1 %31, label %45, label %53\l|{<s0>T|<s1>F}}"];
	Node0x4e72720:s0 -> Node0x4e73410;
	Node0x4e72720:s1 -> Node0x4e73460;
	Node0x4e73410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%45:\l45:                                               \l  %46 = add nsw i32 %13, -1\l  %47 = mul nsw i32 %46, %2\l  %48 = add nsw i32 %47, %21\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %52 = fadd contract float %44, %51\l  br label %53\l}"];
	Node0x4e73410 -> Node0x4e73460;
	Node0x4e73460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%53:\l53:                                               \l  %54 = phi float [ %52, %45 ], [ %44, %43 ]\l  %55 = add nsw i32 %2, -1\l  %56 = icmp slt i32 %13, %55\l  br i1 %56, label %57, label %65\l|{<s0>T|<s1>F}}"];
	Node0x4e73460:s0 -> Node0x4e73bd0;
	Node0x4e73460:s1 -> Node0x4e73c20;
	Node0x4e73bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%57:\l57:                                               \l  %58 = add nsw i32 %13, 1\l  %59 = mul nsw i32 %58, %2\l  %60 = add nsw i32 %59, %21\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %64 = fadd contract float %54, %63\l  br label %65\l}"];
	Node0x4e73bd0 -> Node0x4e73c20;
	Node0x4e73c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%65:\l65:                                               \l  %66 = phi float [ %64, %57 ], [ %54, %53 ]\l  %67 = add nsw i32 %3, -1\l  %68 = icmp slt i32 %21, %67\l  %69 = select i1 %56, i1 %68, i1 false\l  br i1 %69, label %70, label %79\l|{<s0>T|<s1>F}}"];
	Node0x4e73c20:s0 -> Node0x4e72680;
	Node0x4e73c20:s1 -> Node0x4e746a0;
	Node0x4e72680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%70:\l70:                                               \l  %71 = add nsw i32 %13, 1\l  %72 = mul nsw i32 %71, %2\l  %73 = add nsw i32 %21, 1\l  %74 = add i32 %73, %72\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %78 = fadd contract float %66, %77\l  br label %79\l}"];
	Node0x4e72680 -> Node0x4e746a0;
	Node0x4e746a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%79:\l79:                                               \l  %80 = phi float [ %78, %70 ], [ %66, %65 ]\l  br i1 %32, label %81, label %95\l|{<s0>T|<s1>F}}"];
	Node0x4e746a0:s0 -> Node0x4e74d50;
	Node0x4e746a0:s1 -> Node0x4e74da0;
	Node0x4e74d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%81:\l81:                                               \l  %82 = add nsw i32 %13, 1\l  %83 = mul nsw i32 %82, %2\l  %84 = add nsw i32 %21, -1\l  %85 = add i32 %84, %83\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %89 = fadd contract float %80, %88\l  %90 = add nsw i32 %27, -1\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %94 = fadd contract float %89, %93\l  br label %95\l}"];
	Node0x4e74d50 -> Node0x4e74da0;
	Node0x4e74da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%95:\l95:                                               \l  %96 = phi float [ %94, %81 ], [ %80, %79 ]\l  %97 = add nsw i32 %27, 1\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %101 = fadd contract float %96, %100\l  br i1 %31, label %102, label %111\l|{<s0>T|<s1>F}}"];
	Node0x4e74da0:s0 -> Node0x4e759d0;
	Node0x4e74da0:s1 -> Node0x4e75a60;
	Node0x4e759d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%102:\l102:                                              \l  %103 = add nsw i32 %13, -1\l  %104 = mul nsw i32 %103, %2\l  %105 = add nsw i32 %21, 1\l  %106 = add i32 %105, %104\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %0, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %110 = fadd contract float %101, %109\l  br label %111\l}"];
	Node0x4e759d0 -> Node0x4e75a60;
	Node0x4e75a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%111:\l111:                                              \l  %112 = phi float [ %110, %102 ], [ %101, %95 ]\l  %113 = fdiv contract float %112, 2.500000e+01\l  %114 = getelementptr inbounds float, float addrspace(1)* %1, i64 %28\l  store float %113, float addrspace(1)* %114, align 4, !tbaa !7\l  br label %115\l}"];
	Node0x4e75a60 -> Node0x4e71e20;
	Node0x4e71e20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%115:\l115:                                              \l  ret void\l}"];
}
