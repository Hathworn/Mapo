digraph "CFG for '_Z15matrix_multiplyPfS_S_im' function" {
	label="CFG for '_Z15matrix_multiplyPfS_S_im' function";

	Node0x53f7940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 2, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = add i32 %15, %7\l  %17 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %8, %20\l  %22 = add i32 %21, %6\l  %23 = add i64 %4, -1\l  %24 = lshr i64 %23, 4\l  %25 = sext i32 %16 to i64\l  %26 = icmp ult i64 %25, %4\l  %27 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 %6\l  %28 = mul i64 %25, %4\l  %29 = zext i32 %6 to i64\l  %30 = add i64 %28, %29\l  %31 = sext i32 %22 to i64\l  %32 = icmp ult i64 %31, %4\l  %33 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 %7, i32 %6\l  %34 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 0\l  %35 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 0, i32 %6\l  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 1\l  %37 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 1, i32 %6\l  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 2\l  %39 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 2, i32 %6\l  %40 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 3\l  %41 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 3, i32 %6\l  %42 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 4\l  %43 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 4, i32 %6\l  %44 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 5\l  %45 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 5, i32 %6\l  %46 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 6\l  %47 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 6, i32 %6\l  %48 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 7\l  %49 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 7, i32 %6\l  %50 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 8\l  %51 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 8, i32 %6\l  %52 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 9\l  %53 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 9, i32 %6\l  %54 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 10\l  %55 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 10, i32 %6\l  %56 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 11\l  %57 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 11, i32 %6\l  %58 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 12\l  %59 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 12, i32 %6\l  %60 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 13\l  %61 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 13, i32 %6\l  %62 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 14\l  %63 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 14, i32 %6\l  %64 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_a, i32 0, i32 %7, i32 15\l  %65 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ15matrix_multiplyPfS_S_imE3s_b, i32 0, i32 15, i32 %6\l  br label %68\l}"];
	Node0x53f7940 -> Node0x53fb440;
	Node0x53fb990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%66:\l66:                                               \l  %67 = select i1 %26, i1 %32, i1 false\l  br i1 %67, label %162, label %167\l|{<s0>T|<s1>F}}"];
	Node0x53fb990:s0 -> Node0x53fdcd0;
	Node0x53fb990:s1 -> Node0x53fdd20;
	Node0x53fb440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = phi i32 [ 0, %5 ], [ %159, %93 ]\l  %70 = phi float [ 0.000000e+00, %5 ], [ %158, %93 ]\l  br i1 %26, label %71, label %81\l|{<s0>T|<s1>F}}"];
	Node0x53fb440:s0 -> Node0x53feb40;
	Node0x53fb440:s1 -> Node0x53febd0;
	Node0x53feb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%71:\l71:                                               \l  %72 = shl nsw i32 %69, 4\l  %73 = add nuw nsw i32 %72, %6\l  %74 = zext i32 %73 to i64\l  %75 = icmp ult i64 %74, %4\l  br i1 %75, label %76, label %81\l|{<s0>T|<s1>F}}"];
	Node0x53feb40:s0 -> Node0x53fef30;
	Node0x53feb40:s1 -> Node0x53febd0;
	Node0x53fef30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%76:\l76:                                               \l  %77 = zext i32 %72 to i64\l  %78 = add i64 %30, %77\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  br label %81\l}"];
	Node0x53fef30 -> Node0x53febd0;
	Node0x53febd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = phi float [ %80, %76 ], [ 0.000000e+00, %71 ], [ 0.000000e+00, %68 ]\l  store float %82, float addrspace(3)* %27, align 4, !tbaa !7\l  br i1 %32, label %83, label %93\l|{<s0>T|<s1>F}}"];
	Node0x53febd0:s0 -> Node0x53ffb90;
	Node0x53febd0:s1 -> Node0x53fde90;
	Node0x53ffb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%83:\l83:                                               \l  %84 = shl nsw i32 %69, 4\l  %85 = add nuw nsw i32 %84, %7\l  %86 = zext i32 %85 to i64\l  %87 = icmp ult i64 %86, %4\l  br i1 %87, label %88, label %93\l|{<s0>T|<s1>F}}"];
	Node0x53ffb90:s0 -> Node0x53ffeb0;
	Node0x53ffb90:s1 -> Node0x53fde90;
	Node0x53ffeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%88:\l88:                                               \l  %89 = mul i64 %86, %4\l  %90 = add i64 %89, %31\l  %91 = getelementptr inbounds float, float addrspace(1)* %1, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  br label %93\l}"];
	Node0x53ffeb0 -> Node0x53fde90;
	Node0x53fde90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%93:\l93:                                               \l  %94 = phi float [ %92, %88 ], [ 0.000000e+00, %83 ], [ 0.000000e+00, %81 ]\l  store float %94, float addrspace(3)* %33, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %95 = load float, float addrspace(3)* %34, align 16, !tbaa !7\l  %96 = load float, float addrspace(3)* %35, align 4, !tbaa !7\l  %97 = fmul contract float %95, %96\l  %98 = fadd contract float %70, %97\l  %99 = load float, float addrspace(3)* %36, align 4, !tbaa !7\l  %100 = load float, float addrspace(3)* %37, align 4, !tbaa !7\l  %101 = fmul contract float %99, %100\l  %102 = fadd contract float %98, %101\l  %103 = load float, float addrspace(3)* %38, align 8, !tbaa !7\l  %104 = load float, float addrspace(3)* %39, align 4, !tbaa !7\l  %105 = fmul contract float %103, %104\l  %106 = fadd contract float %102, %105\l  %107 = load float, float addrspace(3)* %40, align 4, !tbaa !7\l  %108 = load float, float addrspace(3)* %41, align 4, !tbaa !7\l  %109 = fmul contract float %107, %108\l  %110 = fadd contract float %106, %109\l  %111 = load float, float addrspace(3)* %42, align 16, !tbaa !7\l  %112 = load float, float addrspace(3)* %43, align 4, !tbaa !7\l  %113 = fmul contract float %111, %112\l  %114 = fadd contract float %110, %113\l  %115 = load float, float addrspace(3)* %44, align 4, !tbaa !7\l  %116 = load float, float addrspace(3)* %45, align 4, !tbaa !7\l  %117 = fmul contract float %115, %116\l  %118 = fadd contract float %114, %117\l  %119 = load float, float addrspace(3)* %46, align 8, !tbaa !7\l  %120 = load float, float addrspace(3)* %47, align 4, !tbaa !7\l  %121 = fmul contract float %119, %120\l  %122 = fadd contract float %118, %121\l  %123 = load float, float addrspace(3)* %48, align 4, !tbaa !7\l  %124 = load float, float addrspace(3)* %49, align 4, !tbaa !7\l  %125 = fmul contract float %123, %124\l  %126 = fadd contract float %122, %125\l  %127 = load float, float addrspace(3)* %50, align 16, !tbaa !7\l  %128 = load float, float addrspace(3)* %51, align 4, !tbaa !7\l  %129 = fmul contract float %127, %128\l  %130 = fadd contract float %126, %129\l  %131 = load float, float addrspace(3)* %52, align 4, !tbaa !7\l  %132 = load float, float addrspace(3)* %53, align 4, !tbaa !7\l  %133 = fmul contract float %131, %132\l  %134 = fadd contract float %130, %133\l  %135 = load float, float addrspace(3)* %54, align 8, !tbaa !7\l  %136 = load float, float addrspace(3)* %55, align 4, !tbaa !7\l  %137 = fmul contract float %135, %136\l  %138 = fadd contract float %134, %137\l  %139 = load float, float addrspace(3)* %56, align 4, !tbaa !7\l  %140 = load float, float addrspace(3)* %57, align 4, !tbaa !7\l  %141 = fmul contract float %139, %140\l  %142 = fadd contract float %138, %141\l  %143 = load float, float addrspace(3)* %58, align 16, !tbaa !7\l  %144 = load float, float addrspace(3)* %59, align 4, !tbaa !7\l  %145 = fmul contract float %143, %144\l  %146 = fadd contract float %142, %145\l  %147 = load float, float addrspace(3)* %60, align 4, !tbaa !7\l  %148 = load float, float addrspace(3)* %61, align 4, !tbaa !7\l  %149 = fmul contract float %147, %148\l  %150 = fadd contract float %146, %149\l  %151 = load float, float addrspace(3)* %62, align 8, !tbaa !7\l  %152 = load float, float addrspace(3)* %63, align 4, !tbaa !7\l  %153 = fmul contract float %151, %152\l  %154 = fadd contract float %150, %153\l  %155 = load float, float addrspace(3)* %64, align 4, !tbaa !7\l  %156 = load float, float addrspace(3)* %65, align 4, !tbaa !7\l  %157 = fmul contract float %155, %156\l  %158 = fadd contract float %154, %157\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %159 = add nuw nsw i32 %69, 1\l  %160 = zext i32 %159 to i64\l  %161 = icmp ult i64 %24, %160\l  br i1 %161, label %66, label %68, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x53fde90:s0 -> Node0x53fb990;
	Node0x53fde90:s1 -> Node0x53fb440;
	Node0x53fdcd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%162:\l162:                                              \l  %163 = mul nsw i32 %16, %3\l  %164 = add nsw i32 %163, %22\l  %165 = sext i32 %164 to i64\l  %166 = getelementptr inbounds float, float addrspace(1)* %2, i64 %165\l  store float %158, float addrspace(1)* %166, align 4, !tbaa !7\l  br label %167\l}"];
	Node0x53fdcd0 -> Node0x53fdd20;
	Node0x53fdd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%167:\l167:                                              \l  ret void\l}"];
}
