digraph "CFG for '_Z10bestFilterPKdPKbPKfPi' function" {
	label="CFG for '_Z10bestFilterPKdPKbPKfPi' function";

	Node0x6086f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%4:\l  %5 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %6 = fptosi double %5 to i32\l  %7 = getelementptr inbounds double, double addrspace(1)* %0, i64 2\l  %8 = load double, double addrspace(1)* %7, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %9 = fptosi double %8 to i32\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !9, !invariant.load !8\l  %14 = zext i16 %13 to i32\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !10\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = mul i32 %18, %14\l  %20 = udiv i32 %17, %14\l  %21 = getelementptr inbounds double, double addrspace(1)* %0, i64 7\l  %22 = load double, double addrspace(1)* %21, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %23 = fptrunc double %22 to float\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !19\l  %25 = add nsw i32 %19, %24\l  %26 = icmp slt i32 %25, %6\l  br i1 %26, label %27, label %137\l|{<s0>T|<s1>F}}"];
	Node0x6086f40:s0 -> Node0x608a500;
	Node0x6086f40:s1 -> Node0x608a590;
	Node0x608a500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%27:\l27:                                               \l  %28 = mul i32 %20, %14\l  %29 = icmp ugt i32 %17, %28\l  %30 = zext i1 %29 to i32\l  %31 = add i32 %20, %30\l  %32 = icmp sgt i32 %9, 0\l  %33 = fmul contract float %23, %23\l  %34 = mul nsw i32 %31, %14\l  %35 = and i32 %9, 3\l  %36 = icmp ult i32 %9, 4\l  %37 = and i32 %9, -4\l  %38 = icmp eq i32 %35, 0\l  br label %39\l}"];
	Node0x608a500 -> Node0x608ae90;
	Node0x608ae90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%39:\l39:                                               \l  %40 = phi i32 [ %25, %27 ], [ %135, %134 ]\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %41\l  store i32 0, i32 addrspace(1)* %42, align 4, !tbaa !20\l  br i1 %32, label %43, label %130\l|{<s0>T|<s1>F}}"];
	Node0x608ae90:s0 -> Node0x608b3d0;
	Node0x608ae90:s1 -> Node0x608b460;
	Node0x608b3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%43:\l43:                                               \l  br i1 %36, label %106, label %44\l|{<s0>T|<s1>F}}"];
	Node0x608b3d0:s0 -> Node0x608b5a0;
	Node0x608b3d0:s1 -> Node0x608b5f0;
	Node0x608b5f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%44:\l44:                                               \l  %45 = phi float [ %102, %101 ], [ 0.000000e+00, %43 ]\l  %46 = phi i32 [ %103, %101 ], [ 0, %43 ]\l  %47 = phi i32 [ %104, %101 ], [ 0, %43 ]\l  %48 = mul nsw i32 %46, %6\l  %49 = add nsw i32 %48, %40\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %50\l  %52 = load i8, i8 addrspace(1)* %51, align 1, !tbaa !22, !range !24,\l... !amdgpu.noclobber !8\l  %53 = icmp eq i8 %52, 0\l  br i1 %53, label %59, label %54\l|{<s0>T|<s1>F}}"];
	Node0x608b5f0:s0 -> Node0x608cba0;
	Node0x608b5f0:s1 -> Node0x608cbf0;
	Node0x608cbf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%54:\l54:                                               \l  %55 = getelementptr inbounds float, float addrspace(1)* %2, i64 %50\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !25,\l... !amdgpu.noclobber !8\l  %57 = fcmp contract ogt float %56, %45\l  br i1 %57, label %58, label %59\l|{<s0>T|<s1>F}}"];
	Node0x608cbf0:s0 -> Node0x608d010;
	Node0x608cbf0:s1 -> Node0x608cba0;
	Node0x608d010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%58:\l58:                                               \l  store i32 %46, i32 addrspace(1)* %42, align 4, !tbaa !20\l  br label %59\l}"];
	Node0x608d010 -> Node0x608cba0;
	Node0x608cba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%59:\l59:                                               \l  %60 = phi float [ %56, %58 ], [ %45, %54 ], [ %45, %44 ]\l  %61 = or i32 %46, 1\l  %62 = mul nsw i32 %61, %6\l  %63 = add nsw i32 %62, %40\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %64\l  %66 = load i8, i8 addrspace(1)* %65, align 1, !tbaa !22, !range !24,\l... !amdgpu.noclobber !8\l  %67 = icmp eq i8 %66, 0\l  br i1 %67, label %73, label %68\l|{<s0>T|<s1>F}}"];
	Node0x608cba0:s0 -> Node0x608ab20;
	Node0x608cba0:s1 -> Node0x608eb80;
	Node0x608eb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%68:\l68:                                               \l  %69 = getelementptr inbounds float, float addrspace(1)* %2, i64 %64\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !25,\l... !amdgpu.noclobber !8\l  %71 = fcmp contract ogt float %70, %60\l  br i1 %71, label %72, label %73\l|{<s0>T|<s1>F}}"];
	Node0x608eb80:s0 -> Node0x608f470;
	Node0x608eb80:s1 -> Node0x608ab20;
	Node0x608f470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%72:\l72:                                               \l  store i32 %61, i32 addrspace(1)* %42, align 4, !tbaa !20\l  br label %73\l}"];
	Node0x608f470 -> Node0x608ab20;
	Node0x608ab20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%73:\l73:                                               \l  %74 = phi float [ %70, %72 ], [ %60, %68 ], [ %60, %59 ]\l  %75 = or i32 %46, 2\l  %76 = mul nsw i32 %75, %6\l  %77 = add nsw i32 %76, %40\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %78\l  %80 = load i8, i8 addrspace(1)* %79, align 1, !tbaa !22, !range !24,\l... !amdgpu.noclobber !8\l  %81 = icmp eq i8 %80, 0\l  br i1 %81, label %87, label %82\l|{<s0>T|<s1>F}}"];
	Node0x608ab20:s0 -> Node0x608fba0;
	Node0x608ab20:s1 -> Node0x608fbf0;
	Node0x608fbf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%82:\l82:                                               \l  %83 = getelementptr inbounds float, float addrspace(1)* %2, i64 %78\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !25,\l... !amdgpu.noclobber !8\l  %85 = fcmp contract ogt float %84, %74\l  br i1 %85, label %86, label %87\l|{<s0>T|<s1>F}}"];
	Node0x608fbf0:s0 -> Node0x608fed0;
	Node0x608fbf0:s1 -> Node0x608fba0;
	Node0x608fed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%86:\l86:                                               \l  store i32 %75, i32 addrspace(1)* %42, align 4, !tbaa !20\l  br label %87\l}"];
	Node0x608fed0 -> Node0x608fba0;
	Node0x608fba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%87:\l87:                                               \l  %88 = phi float [ %84, %86 ], [ %74, %82 ], [ %74, %73 ]\l  %89 = or i32 %46, 3\l  %90 = mul nsw i32 %89, %6\l  %91 = add nsw i32 %90, %40\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %92\l  %94 = load i8, i8 addrspace(1)* %93, align 1, !tbaa !22, !range !24,\l... !amdgpu.noclobber !8\l  %95 = icmp eq i8 %94, 0\l  br i1 %95, label %101, label %96\l|{<s0>T|<s1>F}}"];
	Node0x608fba0:s0 -> Node0x608b730;
	Node0x608fba0:s1 -> Node0x60905a0;
	Node0x60905a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%96:\l96:                                               \l  %97 = getelementptr inbounds float, float addrspace(1)* %2, i64 %92\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !25,\l... !amdgpu.noclobber !8\l  %99 = fcmp contract ogt float %98, %88\l  br i1 %99, label %100, label %101\l|{<s0>T|<s1>F}}"];
	Node0x60905a0:s0 -> Node0x6090840;
	Node0x60905a0:s1 -> Node0x608b730;
	Node0x6090840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%100:\l100:                                              \l  store i32 %89, i32 addrspace(1)* %42, align 4, !tbaa !20\l  br label %101\l}"];
	Node0x6090840 -> Node0x608b730;
	Node0x608b730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%101:\l101:                                              \l  %102 = phi float [ %98, %100 ], [ %88, %96 ], [ %88, %87 ]\l  %103 = add nuw nsw i32 %46, 4\l  %104 = add i32 %47, 4\l  %105 = icmp eq i32 %104, %37\l  br i1 %105, label %106, label %44, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x608b730:s0 -> Node0x608b5a0;
	Node0x608b730:s1 -> Node0x608b5f0;
	Node0x608b5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%106:\l106:                                              \l  %107 = phi float [ undef, %43 ], [ %102, %101 ]\l  %108 = phi float [ 0.000000e+00, %43 ], [ %102, %101 ]\l  %109 = phi i32 [ 0, %43 ], [ %103, %101 ]\l  br i1 %38, label %130, label %110\l|{<s0>T|<s1>F}}"];
	Node0x608b5a0:s0 -> Node0x608b460;
	Node0x608b5a0:s1 -> Node0x6091450;
	Node0x6091450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%110:\l110:                                              \l  %111 = phi float [ %126, %125 ], [ %108, %106 ]\l  %112 = phi i32 [ %127, %125 ], [ %109, %106 ]\l  %113 = phi i32 [ %128, %125 ], [ 0, %106 ]\l  %114 = mul nsw i32 %112, %6\l  %115 = add nsw i32 %114, %40\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %116\l  %118 = load i8, i8 addrspace(1)* %117, align 1, !tbaa !22, !range !24,\l... !amdgpu.noclobber !8\l  %119 = icmp eq i8 %118, 0\l  br i1 %119, label %125, label %120\l|{<s0>T|<s1>F}}"];
	Node0x6091450:s0 -> Node0x6091550;
	Node0x6091450:s1 -> Node0x6091ba0;
	Node0x6091ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%120:\l120:                                              \l  %121 = getelementptr inbounds float, float addrspace(1)* %2, i64 %116\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !25,\l... !amdgpu.noclobber !8\l  %123 = fcmp contract ogt float %122, %111\l  br i1 %123, label %124, label %125\l|{<s0>T|<s1>F}}"];
	Node0x6091ba0:s0 -> Node0x6091e40;
	Node0x6091ba0:s1 -> Node0x6091550;
	Node0x6091e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%124:\l124:                                              \l  store i32 %112, i32 addrspace(1)* %42, align 4, !tbaa !20\l  br label %125\l}"];
	Node0x6091e40 -> Node0x6091550;
	Node0x6091550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%125:\l125:                                              \l  %126 = phi float [ %122, %124 ], [ %111, %120 ], [ %111, %110 ]\l  %127 = add nuw nsw i32 %112, 1\l  %128 = add i32 %113, 1\l  %129 = icmp eq i32 %128, %35\l  br i1 %129, label %130, label %110, !llvm.loop !29\l|{<s0>T|<s1>F}}"];
	Node0x6091550:s0 -> Node0x608b460;
	Node0x6091550:s1 -> Node0x6091450;
	Node0x608b460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%130:\l130:                                              \l  %131 = phi float [ 0.000000e+00, %39 ], [ %107, %106 ], [ %126, %125 ]\l  %132 = fcmp contract olt float %131, %33\l  br i1 %132, label %133, label %134\l|{<s0>T|<s1>F}}"];
	Node0x608b460:s0 -> Node0x608de70;
	Node0x608b460:s1 -> Node0x608af80;
	Node0x608de70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%133:\l133:                                              \l  store i32 -1, i32 addrspace(1)* %42, align 4, !tbaa !20\l  br label %134\l}"];
	Node0x608de70 -> Node0x608af80;
	Node0x608af80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%134:\l134:                                              \l  %135 = add nsw i32 %40, %34\l  %136 = icmp slt i32 %135, %6\l  br i1 %136, label %39, label %137, !llvm.loop !31\l|{<s0>T|<s1>F}}"];
	Node0x608af80:s0 -> Node0x608ae90;
	Node0x608af80:s1 -> Node0x608a590;
	Node0x608a590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%137:\l137:                                              \l  ret void\l}"];
}
