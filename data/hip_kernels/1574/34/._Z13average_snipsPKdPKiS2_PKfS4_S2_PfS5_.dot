digraph "CFG for '_Z13average_snipsPKdPKiS2_PKfS4_S2_PfS5_' function" {
	label="CFG for '_Z13average_snipsPKdPKiS2_PKfS4_S2_PfS5_' function";

	Node0x452da10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%8:\l  %9 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %10 = fptosi double %9 to i32\l  %11 = getelementptr inbounds double, double addrspace(1)* %0, i64 1\l  %12 = load double, double addrspace(1)* %11, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %13 = fptosi double %12 to i32\l  %14 = getelementptr inbounds double, double addrspace(1)* %0, i64 3\l  %15 = load double, double addrspace(1)* %14, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %16 = fptrunc double %15 to float\l  %17 = getelementptr inbounds double, double addrspace(1)* %0, i64 6\l  %18 = load double, double addrspace(1)* %17, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %19 = fptosi double %18 to i32\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %22 = icmp sgt i32 %10, 0\l  br i1 %22, label %23, label %143\l|{<s0>T|<s1>F}}"];
	Node0x452da10:s0 -> Node0x45306f0;
	Node0x452da10:s1 -> Node0x4530780;
	Node0x45306f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%23:\l23:                                               \l  %24 = getelementptr inbounds double, double addrspace(1)* %0, i64 4\l  %25 = load double, double addrspace(1)* %24, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %26 = fptosi double %25 to i32\l  %27 = mul nsw i32 %21, %26\l  %28 = add i32 %27, %20\l  %29 = fsub contract float 1.000000e+00, %16\l  %30 = icmp sgt i32 %19, 0\l  %31 = mul nsw i32 %21, %19\l  %32 = and i32 %19, 3\l  %33 = icmp ult i32 %19, 4\l  %34 = and i32 %19, -4\l  %35 = icmp eq i32 %32, 0\l  br label %36\l}"];
	Node0x45306f0 -> Node0x452ff70;
	Node0x452ff70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%36:\l36:                                               \l  %37 = phi i32 [ 0, %23 ], [ %141, %140 ]\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %38\l  %40 = load i32, i32 addrspace(1)* %39, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %41 = icmp eq i32 %40, %21\l  br i1 %41, label %42, label %140\l|{<s0>T|<s1>F}}"];
	Node0x452ff70:s0 -> Node0x45321d0;
	Node0x452ff70:s1 -> Node0x4531cd0;
	Node0x45321d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%42:\l42:                                               \l  %43 = mul nsw i32 %37, %13\l  %44 = add nsw i32 %43, %20\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %3, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !12\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %38\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %50 = add i32 %28, %49\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %7, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !12\l  %54 = fmul contract float %53, %16\l  %55 = fmul contract float %29, %47\l  %56 = fadd contract float %55, %54\l  store float %56, float addrspace(1)* %52, align 4, !tbaa !12\l  br i1 %30, label %57, label %140\l|{<s0>T|<s1>F}}"];
	Node0x45321d0:s0 -> Node0x4533870;
	Node0x45321d0:s1 -> Node0x4531cd0;
	Node0x4533870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%57:\l57:                                               \l  br i1 %33, label %119, label %58\l|{<s0>T|<s1>F}}"];
	Node0x4533870:s0 -> Node0x45339b0;
	Node0x4533870:s1 -> Node0x4533a00;
	Node0x4533a00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%58:\l58:                                               \l  %59 = phi i32 [ %116, %58 ], [ 0, %57 ]\l  %60 = phi i32 [ %117, %58 ], [ 0, %57 ]\l  %61 = add nsw i32 %59, %31\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %62\l  %64 = load i32, i32 addrspace(1)* %63, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %65 = mul nsw i32 %64, %10\l  %66 = add nsw i32 %65, %37\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %4, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !12\l  %70 = mul nsw i32 %59, %10\l  %71 = add nsw i32 %70, %37\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %6, i64 %72\l  store float %69, float addrspace(1)* %73, align 4, !tbaa !12\l  %74 = or i32 %59, 1\l  %75 = add nsw i32 %74, %31\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %76\l  %78 = load i32, i32 addrspace(1)* %77, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %79 = mul nsw i32 %78, %10\l  %80 = add nsw i32 %79, %37\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %4, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !12\l  %84 = mul nsw i32 %74, %10\l  %85 = add nsw i32 %84, %37\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %6, i64 %86\l  store float %83, float addrspace(1)* %87, align 4, !tbaa !12\l  %88 = or i32 %59, 2\l  %89 = add nsw i32 %88, %31\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %90\l  %92 = load i32, i32 addrspace(1)* %91, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %93 = mul nsw i32 %92, %10\l  %94 = add nsw i32 %93, %37\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %4, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !12\l  %98 = mul nsw i32 %88, %10\l  %99 = add nsw i32 %98, %37\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %6, i64 %100\l  store float %97, float addrspace(1)* %101, align 4, !tbaa !12\l  %102 = or i32 %59, 3\l  %103 = add nsw i32 %102, %31\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %104\l  %106 = load i32, i32 addrspace(1)* %105, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %107 = mul nsw i32 %106, %10\l  %108 = add nsw i32 %107, %37\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %4, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !12\l  %112 = mul nsw i32 %102, %10\l  %113 = add nsw i32 %112, %37\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %6, i64 %114\l  store float %111, float addrspace(1)* %115, align 4, !tbaa !12\l  %116 = add nuw nsw i32 %59, 4\l  %117 = add i32 %60, 4\l  %118 = icmp eq i32 %117, %34\l  br i1 %118, label %119, label %58, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4533a00:s0 -> Node0x45339b0;
	Node0x4533a00:s1 -> Node0x4533a00;
	Node0x45339b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%119:\l119:                                              \l  %120 = phi i32 [ 0, %57 ], [ %116, %58 ]\l  br i1 %35, label %140, label %121\l|{<s0>T|<s1>F}}"];
	Node0x45339b0:s0 -> Node0x4531cd0;
	Node0x45339b0:s1 -> Node0x45363f0;
	Node0x45363f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%121:\l121:                                              \l  %122 = phi i32 [ %137, %121 ], [ %120, %119 ]\l  %123 = phi i32 [ %138, %121 ], [ 0, %119 ]\l  %124 = add nsw i32 %122, %31\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %125\l  %127 = load i32, i32 addrspace(1)* %126, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %128 = mul nsw i32 %127, %10\l  %129 = add nsw i32 %128, %37\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %4, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !12\l  %133 = mul nsw i32 %122, %10\l  %134 = add nsw i32 %133, %37\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds float, float addrspace(1)* %6, i64 %135\l  store float %132, float addrspace(1)* %136, align 4, !tbaa !12\l  %137 = add nuw nsw i32 %122, 1\l  %138 = add i32 %123, 1\l  %139 = icmp eq i32 %138, %32\l  br i1 %139, label %140, label %121, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x45363f0:s0 -> Node0x4531cd0;
	Node0x45363f0:s1 -> Node0x45363f0;
	Node0x4531cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%140:\l140:                                              \l  %141 = add nuw nsw i32 %37, 1\l  %142 = icmp eq i32 %141, %10\l  br i1 %142, label %143, label %36, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x4531cd0:s0 -> Node0x4530780;
	Node0x4531cd0:s1 -> Node0x452ff70;
	Node0x4530780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%143:\l143:                                              \l  ret void\l}"];
}
