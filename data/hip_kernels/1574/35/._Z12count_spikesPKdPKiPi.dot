digraph "CFG for '_Z12count_spikesPKdPKiPi' function" {
	label="CFG for '_Z12count_spikesPKdPKiPi' function";

	Node0x4844c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%3:\l  %4 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %5 = fptosi double %4 to i32\l  %6 = getelementptr inbounds double, double addrspace(1)* %0, i64 2\l  %7 = load double, double addrspace(1)* %6, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %8 = fptosi double %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !10, !invariant.load\l... !8\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !11\l  %19 = mul i32 %10, %15\l  %20 = udiv i32 %18, %15\l  %21 = add nsw i32 %19, %9\l  %22 = icmp slt i32 %21, %8\l  br i1 %22, label %23, label %135\l|{<s0>T|<s1>F}}"];
	Node0x4844c60:s0 -> Node0x4848020;
	Node0x4844c60:s1 -> Node0x48480b0;
	Node0x4848020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%23:\l23:                                               \l  %24 = mul i32 %20, %15\l  %25 = icmp ugt i32 %18, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %20, %26\l  %28 = icmp sgt i32 %5, 0\l  %29 = mul nsw i32 %27, %15\l  %30 = and i32 %5, 7\l  %31 = icmp ult i32 %5, 8\l  %32 = and i32 %5, -8\l  %33 = icmp eq i32 %30, 0\l  br label %34\l}"];
	Node0x4848020 -> Node0x4847b80;
	Node0x4847b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%34:\l34:                                               \l  %35 = phi i32 [ %21, %23 ], [ %133, %132 ]\l  br i1 %28, label %36, label %132\l|{<s0>T|<s1>F}}"];
	Node0x4847b80:s0 -> Node0x4848b30;
	Node0x4847b80:s1 -> Node0x48489f0;
	Node0x4848b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%36:\l36:                                               \l  %37 = sext i32 %35 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %37\l  br i1 %31, label %116, label %39\l|{<s0>T|<s1>F}}"];
	Node0x4848b30:s0 -> Node0x4848d80;
	Node0x4848b30:s1 -> Node0x4848dd0;
	Node0x4848dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%39:\l39:                                               \l  %40 = phi i32 [ %113, %112 ], [ 0, %36 ]\l  %41 = phi i32 [ %114, %112 ], [ 0, %36 ]\l  %42 = zext i32 %40 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %42\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !20\l  %45 = icmp eq i32 %44, %35\l  br i1 %45, label %46, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4848dd0:s0 -> Node0x4849520;
	Node0x4848dd0:s1 -> Node0x48495b0;
	Node0x4849520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%46:\l46:                                               \l  %47 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !20\l  %48 = add nsw i32 %47, 1\l  store i32 %48, i32 addrspace(1)* %38, align 4, !tbaa !20\l  br label %49\l}"];
	Node0x4849520 -> Node0x48495b0;
	Node0x48495b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%49:\l49:                                               \l  %50 = or i32 %40, 1\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !20\l  %54 = icmp eq i32 %53, %35\l  br i1 %54, label %55, label %58\l|{<s0>T|<s1>F}}"];
	Node0x48495b0:s0 -> Node0x484a1d0;
	Node0x48495b0:s1 -> Node0x484a220;
	Node0x484a1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%55:\l55:                                               \l  %56 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !20\l  %57 = add nsw i32 %56, 1\l  store i32 %57, i32 addrspace(1)* %38, align 4, !tbaa !20\l  br label %58\l}"];
	Node0x484a1d0 -> Node0x484a220;
	Node0x484a220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%58:\l58:                                               \l  %59 = or i32 %40, 2\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %60\l  %62 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !20\l  %63 = icmp eq i32 %62, %35\l  br i1 %63, label %64, label %67\l|{<s0>T|<s1>F}}"];
	Node0x484a220:s0 -> Node0x484a7f0;
	Node0x484a220:s1 -> Node0x484a840;
	Node0x484a7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%64:\l64:                                               \l  %65 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !20\l  %66 = add nsw i32 %65, 1\l  store i32 %66, i32 addrspace(1)* %38, align 4, !tbaa !20\l  br label %67\l}"];
	Node0x484a7f0 -> Node0x484a840;
	Node0x484a840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%67:\l67:                                               \l  %68 = or i32 %40, 3\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %69\l  %71 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !20\l  %72 = icmp eq i32 %71, %35\l  br i1 %72, label %73, label %76\l|{<s0>T|<s1>F}}"];
	Node0x484a840:s0 -> Node0x484aff0;
	Node0x484a840:s1 -> Node0x484b040;
	Node0x484aff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%73:\l73:                                               \l  %74 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !20\l  %75 = add nsw i32 %74, 1\l  store i32 %75, i32 addrspace(1)* %38, align 4, !tbaa !20\l  br label %76\l}"];
	Node0x484aff0 -> Node0x484b040;
	Node0x484b040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%76:\l76:                                               \l  %77 = or i32 %40, 4\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %78\l  %80 = load i32, i32 addrspace(1)* %79, align 4, !tbaa !20\l  %81 = icmp eq i32 %80, %35\l  br i1 %81, label %82, label %85\l|{<s0>T|<s1>F}}"];
	Node0x484b040:s0 -> Node0x484b640;
	Node0x484b040:s1 -> Node0x484b690;
	Node0x484b640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%82:\l82:                                               \l  %83 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !20\l  %84 = add nsw i32 %83, 1\l  store i32 %84, i32 addrspace(1)* %38, align 4, !tbaa !20\l  br label %85\l}"];
	Node0x484b640 -> Node0x484b690;
	Node0x484b690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%85:\l85:                                               \l  %86 = or i32 %40, 5\l  %87 = zext i32 %86 to i64\l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %87\l  %89 = load i32, i32 addrspace(1)* %88, align 4, !tbaa !20\l  %90 = icmp eq i32 %89, %35\l  br i1 %90, label %91, label %94\l|{<s0>T|<s1>F}}"];
	Node0x484b690:s0 -> Node0x484bc60;
	Node0x484b690:s1 -> Node0x484bcb0;
	Node0x484bc60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%91:\l91:                                               \l  %92 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !20\l  %93 = add nsw i32 %92, 1\l  store i32 %93, i32 addrspace(1)* %38, align 4, !tbaa !20\l  br label %94\l}"];
	Node0x484bc60 -> Node0x484bcb0;
	Node0x484bcb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%94:\l94:                                               \l  %95 = or i32 %40, 6\l  %96 = zext i32 %95 to i64\l  %97 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %96\l  %98 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !20\l  %99 = icmp eq i32 %98, %35\l  br i1 %99, label %100, label %103\l|{<s0>T|<s1>F}}"];
	Node0x484bcb0:s0 -> Node0x484c280;
	Node0x484bcb0:s1 -> Node0x484c2d0;
	Node0x484c280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%100:\l100:                                              \l  %101 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !20\l  %102 = add nsw i32 %101, 1\l  store i32 %102, i32 addrspace(1)* %38, align 4, !tbaa !20\l  br label %103\l}"];
	Node0x484c280 -> Node0x484c2d0;
	Node0x484c2d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%103:\l103:                                              \l  %104 = or i32 %40, 7\l  %105 = zext i32 %104 to i64\l  %106 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %105\l  %107 = load i32, i32 addrspace(1)* %106, align 4, !tbaa !20\l  %108 = icmp eq i32 %107, %35\l  br i1 %108, label %109, label %112\l|{<s0>T|<s1>F}}"];
	Node0x484c2d0:s0 -> Node0x484c870;
	Node0x484c2d0:s1 -> Node0x4848f40;
	Node0x484c870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%109:\l109:                                              \l  %110 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !20\l  %111 = add nsw i32 %110, 1\l  store i32 %111, i32 addrspace(1)* %38, align 4, !tbaa !20\l  br label %112\l}"];
	Node0x484c870 -> Node0x4848f40;
	Node0x4848f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%112:\l112:                                              \l  %113 = add nuw nsw i32 %40, 8\l  %114 = add i32 %41, 8\l  %115 = icmp eq i32 %114, %32\l  br i1 %115, label %116, label %39, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4848f40:s0 -> Node0x4848d80;
	Node0x4848f40:s1 -> Node0x4848dd0;
	Node0x4848d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%116:\l116:                                              \l  %117 = phi i32 [ 0, %36 ], [ %113, %112 ]\l  br i1 %33, label %132, label %118\l|{<s0>T|<s1>F}}"];
	Node0x4848d80:s0 -> Node0x48489f0;
	Node0x4848d80:s1 -> Node0x484cf00;
	Node0x484cf00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%118:\l118:                                              \l  %119 = phi i32 [ %129, %128 ], [ %117, %116 ]\l  %120 = phi i32 [ %130, %128 ], [ 0, %116 ]\l  %121 = zext i32 %119 to i64\l  %122 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %121\l  %123 = load i32, i32 addrspace(1)* %122, align 4, !tbaa !20\l  %124 = icmp eq i32 %123, %35\l  br i1 %124, label %125, label %128\l|{<s0>T|<s1>F}}"];
	Node0x484cf00:s0 -> Node0x484d3c0;
	Node0x484cf00:s1 -> Node0x484d000;
	Node0x484d3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%125:\l125:                                              \l  %126 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !20\l  %127 = add nsw i32 %126, 1\l  store i32 %127, i32 addrspace(1)* %38, align 4, !tbaa !20\l  br label %128\l}"];
	Node0x484d3c0 -> Node0x484d000;
	Node0x484d000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%128:\l128:                                              \l  %129 = add nuw nsw i32 %119, 1\l  %130 = add i32 %120, 1\l  %131 = icmp eq i32 %130, %30\l  br i1 %131, label %132, label %118, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x484d000:s0 -> Node0x48489f0;
	Node0x484d000:s1 -> Node0x484cf00;
	Node0x48489f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%132:\l132:                                              \l  %133 = add nsw i32 %35, %29\l  %134 = icmp slt i32 %133, %8\l  br i1 %134, label %34, label %135, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x48489f0:s0 -> Node0x4847b80;
	Node0x48489f0:s1 -> Node0x48480b0;
	Node0x48480b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%135:\l135:                                              \l  ret void\l}"];
}
