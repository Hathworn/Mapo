digraph "CFG for '_Z5max1DPKdPKfPf' function" {
	label="CFG for '_Z5max1DPKdPKfPf' function";

	Node0x6131020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%3:\l  %4 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %5 = fptosi double %4 to i32\l  %6 = getelementptr inbounds double, double addrspace(1)* %0, i64 3\l  %7 = load double, double addrspace(1)* %6, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %8 = fptosi double %7 to i32\l  %9 = getelementptr inbounds double, double addrspace(1)* %0, i64 5\l  %10 = load double, double addrspace(1)* %9, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %11 = fptrunc double %10 to float\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %13 = add nsw i32 %5, -1024\l  %14 = sub i32 %13, %8\l  %15 = icmp slt i32 %14, 0\l  br i1 %15, label %101, label %16\l|{<s0>T|<s1>F}}"];
	Node0x6131020:s0 -> Node0x61339d0;
	Node0x6131020:s1 -> Node0x6133a60;
	Node0x6133a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%16:\l16:                                               \l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = icmp slt i32 %12, %8\l  %19 = mul nsw i32 %17, %5\l  %20 = add i32 %19, %12\l  %21 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ5max1DPKdPKfPfE5sdata, i32 0, i32 %12\l  %22 = addrspacecast float addrspace(3)* %21 to float*\l  %23 = add i32 %12, %8\l  %24 = add i32 %23, %19\l  %25 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ5max1DPKdPKfPfE5sdata, i32 0, i32 %23\l  %26 = addrspacecast float addrspace(3)* %25 to float*\l  %27 = icmp sgt i32 %8, 0\l  %28 = and i32 %8, 3\l  %29 = icmp ult i32 %8, 4\l  %30 = and i32 %8, -4\l  %31 = icmp eq i32 %28, 0\l  br label %32\l}"];
	Node0x6133a60 -> Node0x61346d0;
	Node0x61346d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%32:\l32:                                               \l  %33 = phi i32 [ 0, %16 ], [ %99, %98 ]\l  br i1 %18, label %34, label %39\l|{<s0>T|<s1>F}}"];
	Node0x61346d0:s0 -> Node0x6134a00;
	Node0x61346d0:s1 -> Node0x6134a90;
	Node0x6134a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%34:\l34:                                               \l  %35 = add i32 %20, %33\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !10\l  store volatile float %38, float* %22, align 4, !tbaa !10\l  br label %39\l}"];
	Node0x6134a00 -> Node0x6134a90;
	Node0x6134a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%39:\l39:                                               \l  %40 = add i32 %24, %33\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !10\l  store volatile float %43, float* %26, align 4, !tbaa !10\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %27, label %44, label %91\l|{<s0>T|<s1>F}}"];
	Node0x6134a90:s0 -> Node0x6135b50;
	Node0x6134a90:s1 -> Node0x6135be0;
	Node0x6135b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%44:\l44:                                               \l  br i1 %29, label %75, label %45\l|{<s0>T|<s1>F}}"];
	Node0x6135b50:s0 -> Node0x6135d20;
	Node0x6135b50:s1 -> Node0x6135d70;
	Node0x6135d70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%45:\l45:                                               \l  %46 = phi float [ %71, %45 ], [ 0.000000e+00, %44 ]\l  %47 = phi i32 [ %72, %45 ], [ 0, %44 ]\l  %48 = phi i32 [ %73, %45 ], [ 0, %44 ]\l  %49 = add nuw nsw i32 %47, %12\l  %50 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ5max1DPKdPKfPfE5sdata, i32 0, i32 %49\l  %51 = addrspacecast float addrspace(3)* %50 to float*\l  %52 = load volatile float, float* %51, align 4, !tbaa !10\l  %53 = tail call float @llvm.maxnum.f32(float %46, float %52)\l  %54 = or i32 %47, 1\l  %55 = add nuw nsw i32 %54, %12\l  %56 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ5max1DPKdPKfPfE5sdata, i32 0, i32 %55\l  %57 = addrspacecast float addrspace(3)* %56 to float*\l  %58 = load volatile float, float* %57, align 4, !tbaa !10\l  %59 = tail call float @llvm.maxnum.f32(float %53, float %58)\l  %60 = or i32 %47, 2\l  %61 = add nuw nsw i32 %60, %12\l  %62 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ5max1DPKdPKfPfE5sdata, i32 0, i32 %61\l  %63 = addrspacecast float addrspace(3)* %62 to float*\l  %64 = load volatile float, float* %63, align 4, !tbaa !10\l  %65 = tail call float @llvm.maxnum.f32(float %59, float %64)\l  %66 = or i32 %47, 3\l  %67 = add nuw nsw i32 %66, %12\l  %68 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ5max1DPKdPKfPfE5sdata, i32 0, i32 %67\l  %69 = addrspacecast float addrspace(3)* %68 to float*\l  %70 = load volatile float, float* %69, align 4, !tbaa !10\l  %71 = tail call float @llvm.maxnum.f32(float %65, float %70)\l  %72 = add nuw nsw i32 %47, 4\l  %73 = add i32 %48, 4\l  %74 = icmp eq i32 %73, %30\l  br i1 %74, label %75, label %45, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x6135d70:s0 -> Node0x6135d20;
	Node0x6135d70:s1 -> Node0x6135d70;
	Node0x6135d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%75:\l75:                                               \l  %76 = phi float [ undef, %44 ], [ %71, %45 ]\l  %77 = phi float [ 0.000000e+00, %44 ], [ %71, %45 ]\l  %78 = phi i32 [ 0, %44 ], [ %72, %45 ]\l  br i1 %31, label %91, label %79\l|{<s0>T|<s1>F}}"];
	Node0x6135d20:s0 -> Node0x6135be0;
	Node0x6135d20:s1 -> Node0x61383b0;
	Node0x61383b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  %80 = phi float [ %87, %79 ], [ %77, %75 ]\l  %81 = phi i32 [ %88, %79 ], [ %78, %75 ]\l  %82 = phi i32 [ %89, %79 ], [ 0, %75 ]\l  %83 = add nuw nsw i32 %81, %12\l  %84 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ5max1DPKdPKfPfE5sdata, i32 0, i32 %83\l  %85 = addrspacecast float addrspace(3)* %84 to float*\l  %86 = load volatile float, float* %85, align 4, !tbaa !10\l  %87 = tail call float @llvm.maxnum.f32(float %80, float %86)\l  %88 = add nuw nsw i32 %81, 1\l  %89 = add nuw nsw i32 %82, 1\l  %90 = icmp eq i32 %89, %28\l  br i1 %90, label %91, label %79, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x61383b0:s0 -> Node0x6135be0;
	Node0x61383b0:s1 -> Node0x61383b0;
	Node0x6135be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%91:\l91:                                               \l  %92 = phi float [ 0.000000e+00, %39 ], [ %76, %75 ], [ %87, %79 ]\l  %93 = fcmp contract ogt float %92, %11\l  br i1 %93, label %94, label %98\l|{<s0>T|<s1>F}}"];
	Node0x6135be0:s0 -> Node0x6138ee0;
	Node0x6135be0:s1 -> Node0x6133bd0;
	Node0x6138ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%94:\l94:                                               \l  %95 = add i32 %20, %33\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %2, i64 %96\l  store float %92, float addrspace(1)* %97, align 4, !tbaa !10\l  br label %98\l}"];
	Node0x6138ee0 -> Node0x6133bd0;
	Node0x6133bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%98:\l98:                                               \l  %99 = add nuw nsw i32 %33, 1024\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %100 = icmp sgt i32 %99, %14\l  br i1 %100, label %101, label %32, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x6133bd0:s0 -> Node0x61339d0;
	Node0x6133bd0:s1 -> Node0x61346d0;
	Node0x61339d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%101:\l101:                                              \l  ret void\l}"];
}
