digraph "CFG for '_Z12count_spikesPKdPKiPiPKfPf' function" {
	label="CFG for '_Z12count_spikesPKdPKiPiPKfPf' function";

	Node0x47fcbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%5:\l  %6 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %7 = fptosi double %6 to i32\l  %8 = getelementptr inbounds double, double addrspace(1)* %0, i64 2\l  %9 = load double, double addrspace(1)* %8, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %10 = fptosi double %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !10, !invariant.load\l... !8\l  %17 = zext i16 %16 to i32\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %19 = bitcast i8 addrspace(4)* %18 to i32 addrspace(4)*\l  %20 = load i32, i32 addrspace(4)* %19, align 4, !tbaa !11\l  %21 = mul i32 %12, %17\l  %22 = udiv i32 %20, %17\l  %23 = add nsw i32 %21, %11\l  %24 = icmp slt i32 %23, %10\l  br i1 %24, label %25, label %125\l|{<s0>T|<s1>F}}"];
	Node0x47fcbb0:s0 -> Node0x47fff30;
	Node0x47fcbb0:s1 -> Node0x47fffc0;
	Node0x47fff30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%25:\l25:                                               \l  %26 = mul i32 %22, %17\l  %27 = icmp ugt i32 %20, %26\l  %28 = zext i1 %27 to i32\l  %29 = add i32 %22, %28\l  %30 = icmp sgt i32 %7, 0\l  %31 = mul nsw i32 %29, %17\l  %32 = and i32 %7, 3\l  %33 = icmp ult i32 %7, 4\l  %34 = and i32 %7, -4\l  %35 = icmp eq i32 %32, 0\l  br label %36\l}"];
	Node0x47fff30 -> Node0x4800830;
	Node0x4800830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%36:\l36:                                               \l  %37 = phi i32 [ %23, %25 ], [ %123, %115 ]\l  %38 = sext i32 %37 to i64\l  br i1 %30, label %39, label %115\l|{<s0>T|<s1>F}}"];
	Node0x4800830:s0 -> Node0x4800ad0;
	Node0x4800830:s1 -> Node0x4800920;
	Node0x4800ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%39:\l39:                                               \l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %38\l  %41 = getelementptr inbounds float, float addrspace(1)* %3, i64 %38\l  %42 = getelementptr inbounds float, float addrspace(1)* %4, i64 %38\l  br i1 %33, label %96, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4800ad0:s0 -> Node0x4800df0;
	Node0x4800ad0:s1 -> Node0x4800e40;
	Node0x4800e40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%43:\l43:                                               \l  %44 = phi i32 [ %93, %92 ], [ 0, %39 ]\l  %45 = phi i32 [ %94, %92 ], [ 0, %39 ]\l  %46 = zext i32 %44 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !20\l  %49 = icmp eq i32 %48, %37\l  br i1 %49, label %50, label %56\l|{<s0>T|<s1>F}}"];
	Node0x4800e40:s0 -> Node0x4801590;
	Node0x4800e40:s1 -> Node0x4801620;
	Node0x4801590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%50:\l50:                                               \l  %51 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !20\l  %52 = add nsw i32 %51, 1\l  store i32 %52, i32 addrspace(1)* %40, align 4, !tbaa !20\l  %53 = load float, float addrspace(1)* %41, align 4, !tbaa !22\l  %54 = load float, float addrspace(1)* %42, align 4, !tbaa !22\l  %55 = fadd contract float %53, %54\l  store float %55, float addrspace(1)* %42, align 4, !tbaa !22\l  br label %56\l}"];
	Node0x4801590 -> Node0x4801620;
	Node0x4801620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%56:\l56:                                               \l  %57 = or i32 %44, 1\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %58\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !20\l  %61 = icmp eq i32 %60, %37\l  br i1 %61, label %62, label %68\l|{<s0>T|<s1>F}}"];
	Node0x4801620:s0 -> Node0x4802b50;
	Node0x4801620:s1 -> Node0x4802ba0;
	Node0x4802b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%62:\l62:                                               \l  %63 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !20\l  %64 = add nsw i32 %63, 1\l  store i32 %64, i32 addrspace(1)* %40, align 4, !tbaa !20\l  %65 = load float, float addrspace(1)* %41, align 4, !tbaa !22\l  %66 = load float, float addrspace(1)* %42, align 4, !tbaa !22\l  %67 = fadd contract float %65, %66\l  store float %67, float addrspace(1)* %42, align 4, !tbaa !22\l  br label %68\l}"];
	Node0x4802b50 -> Node0x4802ba0;
	Node0x4802ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%68:\l68:                                               \l  %69 = or i32 %44, 2\l  %70 = zext i32 %69 to i64\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %70\l  %72 = load i32, i32 addrspace(1)* %71, align 4, !tbaa !20\l  %73 = icmp eq i32 %72, %37\l  br i1 %73, label %74, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4802ba0:s0 -> Node0x4803590;
	Node0x4802ba0:s1 -> Node0x48035e0;
	Node0x4803590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%74:\l74:                                               \l  %75 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !20\l  %76 = add nsw i32 %75, 1\l  store i32 %76, i32 addrspace(1)* %40, align 4, !tbaa !20\l  %77 = load float, float addrspace(1)* %41, align 4, !tbaa !22\l  %78 = load float, float addrspace(1)* %42, align 4, !tbaa !22\l  %79 = fadd contract float %77, %78\l  store float %79, float addrspace(1)* %42, align 4, !tbaa !22\l  br label %80\l}"];
	Node0x4803590 -> Node0x48035e0;
	Node0x48035e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%80:\l80:                                               \l  %81 = or i32 %44, 3\l  %82 = zext i32 %81 to i64\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %82\l  %84 = load i32, i32 addrspace(1)* %83, align 4, !tbaa !20\l  %85 = icmp eq i32 %84, %37\l  br i1 %85, label %86, label %92\l|{<s0>T|<s1>F}}"];
	Node0x48035e0:s0 -> Node0x4803db0;
	Node0x48035e0:s1 -> Node0x4800fb0;
	Node0x4803db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%86:\l86:                                               \l  %87 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !20\l  %88 = add nsw i32 %87, 1\l  store i32 %88, i32 addrspace(1)* %40, align 4, !tbaa !20\l  %89 = load float, float addrspace(1)* %41, align 4, !tbaa !22\l  %90 = load float, float addrspace(1)* %42, align 4, !tbaa !22\l  %91 = fadd contract float %89, %90\l  store float %91, float addrspace(1)* %42, align 4, !tbaa !22\l  br label %92\l}"];
	Node0x4803db0 -> Node0x4800fb0;
	Node0x4800fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%92:\l92:                                               \l  %93 = add nuw nsw i32 %44, 4\l  %94 = add i32 %45, 4\l  %95 = icmp eq i32 %94, %34\l  br i1 %95, label %96, label %43, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4800fb0:s0 -> Node0x4800df0;
	Node0x4800fb0:s1 -> Node0x4800e40;
	Node0x4800df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%96:\l96:                                               \l  %97 = phi i32 [ 0, %39 ], [ %93, %92 ]\l  br i1 %35, label %115, label %98\l|{<s0>T|<s1>F}}"];
	Node0x4800df0:s0 -> Node0x4800920;
	Node0x4800df0:s1 -> Node0x4804640;
	Node0x4804640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%98:\l98:                                               \l  %99 = phi i32 [ %112, %111 ], [ %97, %96 ]\l  %100 = phi i32 [ %113, %111 ], [ 0, %96 ]\l  %101 = zext i32 %99 to i64\l  %102 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %101\l  %103 = load i32, i32 addrspace(1)* %102, align 4, !tbaa !20\l  %104 = icmp eq i32 %103, %37\l  br i1 %104, label %105, label %111\l|{<s0>T|<s1>F}}"];
	Node0x4804640:s0 -> Node0x4804b00;
	Node0x4804640:s1 -> Node0x4804740;
	Node0x4804b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%105:\l105:                                              \l  %106 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !20\l  %107 = add nsw i32 %106, 1\l  store i32 %107, i32 addrspace(1)* %40, align 4, !tbaa !20\l  %108 = load float, float addrspace(1)* %41, align 4, !tbaa !22\l  %109 = load float, float addrspace(1)* %42, align 4, !tbaa !22\l  %110 = fadd contract float %108, %109\l  store float %110, float addrspace(1)* %42, align 4, !tbaa !22\l  br label %111\l}"];
	Node0x4804b00 -> Node0x4804740;
	Node0x4804740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  %112 = add nuw nsw i32 %99, 1\l  %113 = add i32 %100, 1\l  %114 = icmp eq i32 %113, %32\l  br i1 %114, label %115, label %98, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x4804740:s0 -> Node0x4800920;
	Node0x4804740:s1 -> Node0x4804640;
	Node0x4800920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%115:\l115:                                              \l  %116 = getelementptr inbounds float, float addrspace(1)* %4, i64 %38\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !22\l  %118 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %38\l  %119 = load i32, i32 addrspace(1)* %118, align 4, !tbaa !20\l  %120 = sitofp i32 %119 to float\l  %121 = fadd contract float %120, 0x3F50624DE0000000\l  %122 = fdiv contract float %117, %121\l  store float %122, float addrspace(1)* %116, align 4, !tbaa !22\l  %123 = add nsw i32 %37, %31\l  %124 = icmp slt i32 %123, %10\l  br i1 %124, label %36, label %125, !llvm.loop !28\l|{<s0>T|<s1>F}}"];
	Node0x4800920:s0 -> Node0x4800830;
	Node0x4800920:s1 -> Node0x47fffc0;
	Node0x47fffc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%125:\l125:                                              \l  ret void\l}"];
}
