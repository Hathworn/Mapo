digraph "CFG for '_Z16average_snips_v3PKdPKiS2_PKfS4_Pf' function" {
	label="CFG for '_Z16average_snips_v3PKdPKiS2_PKfS4_Pf' function";

	Node0x5a6da00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%6:\l  %7 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %8 = fptosi double %7 to i32\l  %9 = getelementptr inbounds double, double addrspace(1)* %0, i64 1\l  %10 = load double, double addrspace(1)* %9, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %11 = fptosi double %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = icmp sgt i32 %8, 0\l  br i1 %14, label %15, label %135\l|{<s0>T|<s1>F}}"];
	Node0x5a6da00:s0 -> Node0x5a70250;
	Node0x5a6da00:s1 -> Node0x5a702e0;
	Node0x5a70250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%15:\l15:                                               \l  %16 = getelementptr inbounds double, double addrspace(1)* %0, i64 4\l  %17 = load double, double addrspace(1)* %16, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %18 = fptosi double %17 to i32\l  %19 = mul i32 %13, %11\l  %20 = add i32 %19, %12\l  %21 = mul i32 %20, %18\l  %22 = add i32 %21, %12\l  %23 = and i32 %8, 3\l  %24 = icmp ult i32 %8, 4\l  br i1 %24, label %108, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5a70250:s0 -> Node0x5a70a80;
	Node0x5a70250:s1 -> Node0x5a70b10;
	Node0x5a70b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%25:\l25:                                               \l  %26 = and i32 %8, -4\l  br label %27\l}"];
	Node0x5a70b10 -> Node0x5a70ce0;
	Node0x5a70ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%27:\l27:                                               \l  %28 = phi i32 [ 0, %25 ], [ %105, %104 ]\l  %29 = phi i32 [ 0, %25 ], [ %106, %104 ]\l  %30 = zext i32 %28 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %33 = icmp eq i32 %32, %13\l  br i1 %33, label %34, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5a70ce0:s0 -> Node0x5a70580;
	Node0x5a70ce0:s1 -> Node0x5a715b0;
	Node0x5a70580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%34:\l34:                                               \l  %35 = mul nsw i32 %28, %11\l  %36 = add nsw i32 %35, %12\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %3, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !12\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %30\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %42 = add i32 %22, %41\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %5, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !12\l  %46 = fadd contract float %39, %45\l  store float %46, float addrspace(1)* %44, align 4, !tbaa !12\l  br label %47\l}"];
	Node0x5a70580 -> Node0x5a715b0;
	Node0x5a715b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%47:\l47:                                               \l  %48 = or i32 %28, 1\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %49\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %52 = icmp eq i32 %51, %13\l  br i1 %52, label %53, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5a715b0:s0 -> Node0x5a72e40;
	Node0x5a715b0:s1 -> Node0x5a72ed0;
	Node0x5a72e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%53:\l53:                                               \l  %54 = mul nsw i32 %48, %11\l  %55 = add nsw i32 %54, %12\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %3, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !12\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %49\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %61 = add i32 %22, %60\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %5, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !12\l  %65 = fadd contract float %58, %64\l  store float %65, float addrspace(1)* %63, align 4, !tbaa !12\l  br label %66\l}"];
	Node0x5a72e40 -> Node0x5a72ed0;
	Node0x5a72ed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%66:\l66:                                               \l  %67 = or i32 %28, 2\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %71 = icmp eq i32 %70, %13\l  br i1 %71, label %72, label %85\l|{<s0>T|<s1>F}}"];
	Node0x5a72ed0:s0 -> Node0x5a73c40;
	Node0x5a72ed0:s1 -> Node0x5a73cd0;
	Node0x5a73c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%72:\l72:                                               \l  %73 = mul nsw i32 %67, %11\l  %74 = add nsw i32 %73, %12\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %3, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !12\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %68\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %80 = add i32 %22, %79\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %5, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !12\l  %84 = fadd contract float %77, %83\l  store float %84, float addrspace(1)* %82, align 4, !tbaa !12\l  br label %85\l}"];
	Node0x5a73c40 -> Node0x5a73cd0;
	Node0x5a73cd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%85:\l85:                                               \l  %86 = or i32 %28, 3\l  %87 = zext i32 %86 to i64\l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %87\l  %89 = load i32, i32 addrspace(1)* %88, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %90 = icmp eq i32 %89, %13\l  br i1 %90, label %91, label %104\l|{<s0>T|<s1>F}}"];
	Node0x5a73cd0:s0 -> Node0x5a74800;
	Node0x5a73cd0:s1 -> Node0x5a70dd0;
	Node0x5a74800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%91:\l91:                                               \l  %92 = mul nsw i32 %86, %11\l  %93 = add nsw i32 %92, %12\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %3, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !12\l  %97 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %87\l  %98 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %99 = add i32 %22, %98\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %5, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !12\l  %103 = fadd contract float %96, %102\l  store float %103, float addrspace(1)* %101, align 4, !tbaa !12\l  br label %104\l}"];
	Node0x5a74800 -> Node0x5a70dd0;
	Node0x5a70dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%104:\l104:                                              \l  %105 = add nuw nsw i32 %28, 4\l  %106 = add i32 %29, 4\l  %107 = icmp eq i32 %106, %26\l  br i1 %107, label %108, label %27, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5a70dd0:s0 -> Node0x5a70a80;
	Node0x5a70dd0:s1 -> Node0x5a70ce0;
	Node0x5a70a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%108:\l108:                                              \l  %109 = phi i32 [ 0, %15 ], [ %105, %104 ]\l  %110 = icmp eq i32 %23, 0\l  br i1 %110, label %135, label %111\l|{<s0>T|<s1>F}}"];
	Node0x5a70a80:s0 -> Node0x5a702e0;
	Node0x5a70a80:s1 -> Node0x5a754b0;
	Node0x5a754b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  %112 = phi i32 [ %132, %131 ], [ %109, %108 ]\l  %113 = phi i32 [ %133, %131 ], [ 0, %108 ]\l  %114 = zext i32 %112 to i64\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %114\l  %116 = load i32, i32 addrspace(1)* %115, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %117 = icmp eq i32 %116, %13\l  br i1 %117, label %118, label %131\l|{<s0>T|<s1>F}}"];
	Node0x5a754b0:s0 -> Node0x5a75a30;
	Node0x5a754b0:s1 -> Node0x5a755b0;
	Node0x5a75a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%118:\l118:                                              \l  %119 = mul nsw i32 %112, %11\l  %120 = add nsw i32 %119, %12\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %3, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !12\l  %124 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %114\l  %125 = load i32, i32 addrspace(1)* %124, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %126 = add i32 %22, %125\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds float, float addrspace(1)* %5, i64 %127\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !12\l  %130 = fadd contract float %123, %129\l  store float %130, float addrspace(1)* %128, align 4, !tbaa !12\l  br label %131\l}"];
	Node0x5a75a30 -> Node0x5a755b0;
	Node0x5a755b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%131:\l131:                                              \l  %132 = add nuw nsw i32 %112, 1\l  %133 = add i32 %113, 1\l  %134 = icmp eq i32 %133, %23\l  br i1 %134, label %135, label %111, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5a755b0:s0 -> Node0x5a702e0;
	Node0x5a755b0:s1 -> Node0x5a754b0;
	Node0x5a702e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%135:\l135:                                              \l  ret void\l}"];
}
