digraph "CFG for '_Z10array_copyPfS_mmmmmmmmm' function" {
	label="CFG for '_Z10array_copyPfS_mmmmmmmmm' function";

	Node0x5ff6ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !4\l  %17 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !13, !invariant.load\l... !14\l  %20 = zext i16 %19 to i32\l  %21 = udiv i32 %16, %20\l  %22 = mul i32 %21, %20\l  %23 = icmp ugt i32 %16, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %12\l  %27 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %28 = add i32 %26, %27\l  %29 = mul i32 %28, %20\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %31 = add i32 %29, %30\l  %32 = zext i32 %31 to i64\l  %33 = lshr i64 %5, 1\l  %34 = freeze i64 %32\l  %35 = freeze i64 %33\l  %36 = udiv i64 %34, %35\l  %37 = mul i64 %36, %35\l  %38 = sub i64 %34, %37\l  %39 = icmp ult i64 %38, %5\l  %40 = lshr i64 %6, 1\l  %41 = icmp ult i64 %36, %40\l  %42 = select i1 %39, i1 %41, i1 false\l  br i1 %42, label %43, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5ff6ba0:s0 -> Node0x5ffa860;
	Node0x5ff6ba0:s1 -> Node0x5ffa8f0;
	Node0x5ffa860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%43:\l43:                                               \l  %44 = mul i64 %36, %5\l  %45 = add i64 %44, %38\l  %46 = shl i64 %45, 1\l  %47 = add i64 %38, %8\l  %48 = add i64 %36, %9\l  %49 = mul i64 %48, %5\l  %50 = add i64 %47, %49\l  %51 = shl i64 %50, 1\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %54 = add nuw nsw i64 %51, 1\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  store float %58, float addrspace(1)* %52, align 4, !tbaa !16\l  %59 = add nuw nsw i64 %46, 1\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !16\l  store float %61, float addrspace(1)* %55, align 4, !tbaa !16\l  store float %53, float addrspace(1)* %57, align 4, !tbaa !16\l  store float %56, float addrspace(1)* %60, align 4, !tbaa !16\l  br label %62\l}"];
	Node0x5ffa860 -> Node0x5ffa8f0;
	Node0x5ffa8f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  ret void\l}"];
}
