digraph "CFG for '_Z6rotatePffS_mmmmmmmmm' function" {
	label="CFG for '_Z6rotatePffS_mmmmmmmmm' function";

	Node0x501d330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %14, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !4\l  %18 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !13, !invariant.load\l... !14\l  %21 = zext i16 %20 to i32\l  %22 = udiv i32 %17, %21\l  %23 = mul i32 %22, %21\l  %24 = icmp ugt i32 %17, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %13\l  %28 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %29 = add i32 %27, %28\l  %30 = mul i32 %29, %21\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %32 = add i32 %30, %31\l  %33 = zext i32 %32 to i64\l  %34 = mul i32 %26, %21\l  %35 = zext i32 %34 to i64\l  %36 = mul i64 %10, %9\l  %37 = mul i64 %36, %11\l  %38 = mul i64 %4, %3\l  %39 = mul i64 %38, %5\l  %40 = udiv i64 %39, %37\l  %41 = udiv i64 %39, %35\l  %42 = mul i64 %41, %33\l  %43 = freeze i64 %42\l  %44 = freeze i64 %40\l  %45 = udiv i64 %43, %44\l  %46 = mul i64 %45, %44\l  %47 = sub i64 %43, %46\l  %48 = urem i64 %45, %9\l  %49 = mul i64 %40, %9\l  %50 = udiv i64 %42, %49\l  %51 = urem i64 %50, %10\l  %52 = mul i64 %49, %10\l  %53 = udiv i64 %42, %52\l  %54 = urem i64 %53, %11\l  %55 = add i64 %40, -1\l  %56 = add i64 %41, -1\l  br label %57\l}"];
	Node0x501d330 -> Node0x50214b0;
	Node0x50214b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%57:\l57:                                               \l  %58 = phi float [ undef, %12 ], [ %179, %173 ]\l  %59 = phi float [ undef, %12 ], [ %178, %173 ]\l  %60 = phi i64 [ 0, %12 ], [ %177, %173 ]\l  %61 = phi i64 [ %54, %12 ], [ %180, %173 ]\l  %62 = phi i64 [ %51, %12 ], [ 0, %173 ]\l  %63 = phi i64 [ %48, %12 ], [ %176, %173 ]\l  %64 = phi i64 [ %47, %12 ], [ %175, %173 ]\l  %65 = phi i64 [ %42, %12 ], [ %174, %173 ]\l  %66 = icmp ult i64 %62, %10\l  br i1 %66, label %67, label %173\l|{<s0>T|<s1>F}}"];
	Node0x50214b0:s0 -> Node0x5020850;
	Node0x50214b0:s1 -> Node0x5021a00;
	Node0x5020850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%67:\l67:                                               \l  %68 = phi float [ %81, %170 ], [ %58, %57 ]\l  %69 = phi float [ %80, %170 ], [ %59, %57 ]\l  %70 = phi i64 [ %79, %170 ], [ %60, %57 ]\l  %71 = phi i64 [ %171, %170 ], [ %62, %57 ]\l  %72 = phi i64 [ 0, %170 ], [ %63, %57 ]\l  %73 = phi i64 [ %77, %170 ], [ %64, %57 ]\l  %74 = phi i64 [ %76, %170 ], [ %65, %57 ]\l  br label %75\l}"];
	Node0x5020850 -> Node0x5022e80;
	Node0x5022e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%75:\l75:                                               \l  %76 = phi i64 [ %146, %145 ], [ %74, %67 ]\l  %77 = phi i64 [ 0, %145 ], [ %73, %67 ]\l  %78 = phi i64 [ %153, %145 ], [ %72, %67 ]\l  %79 = phi i64 [ %168, %145 ], [ %70, %67 ]\l  %80 = phi float [ %151, %145 ], [ %69, %67 ]\l  %81 = phi float [ %152, %145 ], [ %68, %67 ]\l  %82 = icmp ult i64 %78, %9\l  br i1 %82, label %83, label %170\l|{<s0>T|<s1>F}}"];
	Node0x5022e80:s0 -> Node0x50234f0;
	Node0x5022e80:s1 -> Node0x50226f0;
	Node0x50234f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%83:\l83:                                               \l  %84 = mul i64 %77, %6\l  %85 = add i64 %78, %84\l  %86 = urem i64 %85, %3\l  %87 = mul i64 %77, %7\l  %88 = add i64 %87, %71\l  %89 = urem i64 %88, %4\l  %90 = mul i64 %77, %8\l  %91 = add i64 %90, %61\l  %92 = urem i64 %91, %5\l  %93 = icmp ult i64 %79, %41\l  br i1 %93, label %94, label %101\l|{<s0>T|<s1>F}}"];
	Node0x50234f0:s0 -> Node0x5023b90;
	Node0x50234f0:s1 -> Node0x5023be0;
	Node0x5023b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%94:\l94:                                               \l  %95 = mul i64 %89, %3\l  %96 = add i64 %95, %86\l  %97 = mul i64 %92, %38\l  %98 = add i64 %96, %97\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %101\l}"];
	Node0x5023b90 -> Node0x5023be0;
	Node0x5023be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%101:\l101:                                              \l  %102 = phi float [ %100, %94 ], [ %80, %83 ]\l  %103 = icmp ult i64 %77, %55\l  br i1 %103, label %104, label %145\l|{<s0>T|<s1>F}}"];
	Node0x5023be0:s0 -> Node0x5024600;
	Node0x5023be0:s1 -> Node0x5022fb0;
	Node0x5024600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%104:\l104:                                              \l  %105 = phi float [ %133, %140 ], [ %81, %101 ]\l  %106 = phi float [ %143, %140 ], [ %102, %101 ]\l  %107 = phi i64 [ %138, %140 ], [ %79, %101 ]\l  %108 = phi i64 [ %123, %140 ], [ %92, %101 ]\l  %109 = phi i64 [ %121, %140 ], [ %89, %101 ]\l  %110 = phi i64 [ %119, %140 ], [ %86, %101 ]\l  %111 = phi i64 [ %141, %140 ], [ %77, %101 ]\l  %112 = phi i64 [ %117, %140 ], [ %76, %101 ]\l  %113 = icmp ule i64 %107, %56\l  %114 = icmp ult i64 %112, %39\l  %115 = select i1 %113, i1 %114, i1 false\l  br i1 %115, label %116, label %182\l|{<s0>T|<s1>F}}"];
	Node0x5024600:s0 -> Node0x5025220;
	Node0x5024600:s1 -> Node0x50252b0;
	Node0x5025220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%116:\l116:                                              \l  %117 = add nuw i64 %112, 1\l  %118 = add i64 %110, %6\l  %119 = urem i64 %118, %3\l  %120 = add i64 %109, %7\l  %121 = urem i64 %120, %4\l  %122 = add i64 %108, %8\l  %123 = urem i64 %122, %5\l  %124 = mul i64 %121, %3\l  %125 = add i64 %124, %119\l  %126 = mul i64 %123, %38\l  %127 = add i64 %125, %126\l  %128 = icmp ult i64 %107, %56\l  br i1 %128, label %129, label %132\l|{<s0>T|<s1>F}}"];
	Node0x5025220:s0 -> Node0x5024a80;
	Node0x5025220:s1 -> Node0x5024ba0;
	Node0x5024a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%129:\l129:                                              \l  %130 = getelementptr inbounds float, float addrspace(1)* %0, i64 %127\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %132\l}"];
	Node0x5024a80 -> Node0x5024ba0;
	Node0x5024ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%132:\l132:                                              \l  %133 = phi float [ %131, %129 ], [ %105, %116 ]\l  %134 = fpext float %106 to double\l  %135 = fadd contract double %134, 1.000000e-01\l  %136 = fptrunc double %135 to float\l  %137 = getelementptr inbounds float, float addrspace(1)* %2, i64 %127\l  store float %136, float addrspace(1)* %137, align 4, !tbaa !16\l  %138 = add i64 %107, 1\l  %139 = icmp ugt i64 %138, %56\l  br i1 %139, label %182, label %140\l|{<s0>T|<s1>F}}"];
	Node0x5024ba0:s0 -> Node0x50252b0;
	Node0x5024ba0:s1 -> Node0x5024700;
	Node0x5024700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%140:\l140:                                              \l  %141 = add nuw i64 %111, 1\l  %142 = icmp ult i64 %138, %41\l  %143 = select i1 %142, float %133, float %106\l  %144 = icmp ult i64 %141, %55\l  br i1 %144, label %104, label %145, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5024700:s0 -> Node0x5024600;
	Node0x5024700:s1 -> Node0x5022fb0;
	Node0x5022fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%145:\l145:                                              \l  %146 = phi i64 [ %76, %101 ], [ %117, %140 ]\l  %147 = phi i64 [ %86, %101 ], [ %119, %140 ]\l  %148 = phi i64 [ %89, %101 ], [ %121, %140 ]\l  %149 = phi i64 [ %92, %101 ], [ %123, %140 ]\l  %150 = phi i64 [ %79, %101 ], [ %138, %140 ]\l  %151 = phi float [ %102, %101 ], [ %143, %140 ]\l  %152 = phi float [ %81, %101 ], [ %133, %140 ]\l  %153 = add i64 %78, 1\l  %154 = add i64 %147, %6\l  %155 = urem i64 %154, %3\l  %156 = add i64 %148, %7\l  %157 = urem i64 %156, %4\l  %158 = add i64 %149, %8\l  %159 = urem i64 %158, %5\l  %160 = mul i64 %157, %3\l  %161 = add i64 %160, %155\l  %162 = mul i64 %159, %38\l  %163 = add i64 %161, %162\l  %164 = fpext float %151 to double\l  %165 = fadd contract double %164, 1.000000e-01\l  %166 = fptrunc double %165 to float\l  %167 = getelementptr inbounds float, float addrspace(1)* %2, i64 %163\l  store float %166, float addrspace(1)* %167, align 4, !tbaa !16\l  %168 = add i64 %150, 1\l  %169 = icmp ugt i64 %168, %56\l  br i1 %169, label %182, label %75, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5022fb0:s0 -> Node0x50252b0;
	Node0x5022fb0:s1 -> Node0x5022e80;
	Node0x50226f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%170:\l170:                                              \l  %171 = add nuw i64 %71, 1\l  %172 = icmp ult i64 %171, %10\l  br i1 %172, label %67, label %173, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x50226f0:s0 -> Node0x5020850;
	Node0x50226f0:s1 -> Node0x5021a00;
	Node0x5021a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%173:\l173:                                              \l  %174 = phi i64 [ %65, %57 ], [ %76, %170 ]\l  %175 = phi i64 [ %64, %57 ], [ %77, %170 ]\l  %176 = phi i64 [ %63, %57 ], [ 0, %170 ]\l  %177 = phi i64 [ %60, %57 ], [ %79, %170 ]\l  %178 = phi float [ %59, %57 ], [ %80, %170 ]\l  %179 = phi float [ %58, %57 ], [ %81, %170 ]\l  %180 = add i64 %61, 1\l  %181 = icmp ult i64 %180, %11\l  br i1 %181, label %57, label %182, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5021a00:s0 -> Node0x50214b0;
	Node0x5021a00:s1 -> Node0x50252b0;
	Node0x50252b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%182:\l182:                                              \l  ret void\l}"];
}
