digraph "CFG for '_Z24arr_times_const_scramblePffS_mmmmmm' function" {
	label="CFG for '_Z24arr_times_const_scramblePffS_mmmmmm' function";

	Node0x5331bb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !4\l  %15 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !13, !invariant.load\l... !14\l  %18 = zext i16 %17 to i32\l  %19 = udiv i32 %14, %18\l  %20 = mul i32 %19, %18\l  %21 = icmp ugt i32 %14, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %10\l  %25 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %26 = add i32 %24, %25\l  %27 = mul i32 %26, %18\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %29 = add i32 %27, %28\l  %30 = zext i32 %29 to i64\l  %31 = lshr i64 %3, 1\l  %32 = freeze i64 %30\l  %33 = freeze i64 %31\l  %34 = udiv i64 %32, %33\l  %35 = mul i64 %34, %33\l  %36 = sub i64 %32, %35\l  %37 = lshr i64 %4, 1\l  %38 = icmp ult i64 %34, %37\l  br i1 %38, label %39, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5331bb0:s0 -> Node0x53356a0;
	Node0x5331bb0:s1 -> Node0x5335730;
	Node0x53356a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%39:\l39:                                               \l  %40 = mul i64 %34, %3\l  %41 = add i64 %40, %36\l  %42 = shl i64 %41, 1\l  %43 = add i64 %36, %6\l  %44 = add i64 %34, %7\l  %45 = mul i64 %44, %3\l  %46 = add i64 %43, %45\l  %47 = shl i64 %46, 1\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %50 = add nuw nsw i64 %47, 1\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  store float %54, float addrspace(1)* %48, align 4, !tbaa !16\l  %55 = add nuw nsw i64 %42, 1\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !16\l  store float %57, float addrspace(1)* %51, align 4, !tbaa !16\l  store float %49, float addrspace(1)* %53, align 4, !tbaa !16\l  store float %52, float addrspace(1)* %56, align 4, !tbaa !16\l  br label %58\l}"];
	Node0x53356a0 -> Node0x5335730;
	Node0x5335730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  ret void\l}"];
}
