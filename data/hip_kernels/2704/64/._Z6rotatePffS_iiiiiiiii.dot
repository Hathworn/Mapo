digraph "CFG for '_Z6rotatePffS_iiiiiiiii' function" {
	label="CFG for '_Z6rotatePffS_iiiiiiiii' function";

	Node0x55f2350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = getelementptr inbounds i8, i8 addrspace(4)* %14, i64 12\l  %20 = bitcast i8 addrspace(4)* %19 to i32 addrspace(4)*\l  %21 = load i32, i32 addrspace(4)* %20, align 4, !tbaa !6\l  %22 = mul i32 %13, %18\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %24 = add i32 %22, %23\l  %25 = udiv i32 %21, %18\l  %26 = mul i32 %25, %18\l  %27 = icmp ugt i32 %21, %26\l  %28 = zext i1 %27 to i32\l  %29 = add i32 %25, %28\l  %30 = mul i32 %29, %18\l  %31 = mul nsw i32 %10, %9\l  %32 = mul nsw i32 %31, %11\l  %33 = mul nsw i32 %4, %3\l  %34 = mul nsw i32 %33, %5\l  %35 = sdiv i32 %34, %32\l  %36 = sdiv i32 %34, %30\l  %37 = mul nsw i32 %36, %24\l  %38 = mul nsw i32 %35, %9\l  %39 = icmp sgt i32 %11, -1\l  br i1 %39, label %40, label %181\l|{<s0>T|<s1>F}}"];
	Node0x55f2350:s0 -> Node0x55f3b70;
	Node0x55f2350:s1 -> Node0x55f5ae0;
	Node0x55f3b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%40:\l40:                                               \l  %41 = mul nsw i32 %38, %10\l  %42 = sdiv i32 %37, %41\l  %43 = srem i32 %42, %11\l  %44 = sdiv i32 %37, %38\l  %45 = srem i32 %44, %10\l  %46 = freeze i32 %37\l  %47 = freeze i32 %35\l  %48 = sdiv i32 %46, %47\l  %49 = srem i32 %48, %9\l  %50 = mul i32 %48, %47\l  %51 = sub i32 %46, %50\l  %52 = add nsw i32 %35, -1\l  %53 = add nsw i32 %36, -1\l  br label %54\l}"];
	Node0x55f3b70 -> Node0x55f6330;
	Node0x55f6330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%54:\l54:                                               \l  %55 = phi float [ undef, %40 ], [ %178, %172 ]\l  %56 = phi float [ undef, %40 ], [ %177, %172 ]\l  %57 = phi i32 [ 0, %40 ], [ %176, %172 ]\l  %58 = phi i32 [ %43, %40 ], [ %179, %172 ]\l  %59 = phi i32 [ %45, %40 ], [ 0, %172 ]\l  %60 = phi i32 [ %49, %40 ], [ %175, %172 ]\l  %61 = phi i32 [ %51, %40 ], [ %174, %172 ]\l  %62 = phi i32 [ %37, %40 ], [ %173, %172 ]\l  %63 = icmp slt i32 %59, %10\l  br i1 %63, label %64, label %172\l|{<s0>T|<s1>F}}"];
	Node0x55f6330:s0 -> Node0x55f7170;
	Node0x55f6330:s1 -> Node0x55f6800;
	Node0x55f7170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%64:\l64:                                               \l  %65 = phi float [ %78, %169 ], [ %55, %54 ]\l  %66 = phi float [ %77, %169 ], [ %56, %54 ]\l  %67 = phi i32 [ %76, %169 ], [ %57, %54 ]\l  %68 = phi i32 [ %170, %169 ], [ %59, %54 ]\l  %69 = phi i32 [ 0, %169 ], [ %60, %54 ]\l  %70 = phi i32 [ %74, %169 ], [ %61, %54 ]\l  %71 = phi i32 [ %73, %169 ], [ %62, %54 ]\l  br label %72\l}"];
	Node0x55f7170 -> Node0x55f7ca0;
	Node0x55f7ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%72:\l72:                                               \l  %73 = phi i32 [ %144, %143 ], [ %71, %64 ]\l  %74 = phi i32 [ 0, %143 ], [ %70, %64 ]\l  %75 = phi i32 [ %151, %143 ], [ %69, %64 ]\l  %76 = phi i32 [ %167, %143 ], [ %67, %64 ]\l  %77 = phi float [ %149, %143 ], [ %66, %64 ]\l  %78 = phi float [ %150, %143 ], [ %65, %64 ]\l  %79 = icmp slt i32 %75, %9\l  br i1 %79, label %80, label %169\l|{<s0>T|<s1>F}}"];
	Node0x55f7ca0:s0 -> Node0x55f8310;
	Node0x55f7ca0:s1 -> Node0x55f5570;
	Node0x55f8310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%80:\l80:                                               \l  %81 = mul nsw i32 %74, %6\l  %82 = add nsw i32 %75, %81\l  %83 = srem i32 %82, %3\l  %84 = mul nsw i32 %74, %7\l  %85 = add nsw i32 %84, %68\l  %86 = srem i32 %85, %4\l  %87 = mul nsw i32 %74, %8\l  %88 = add nsw i32 %87, %58\l  %89 = srem i32 %88, %5\l  %90 = icmp slt i32 %76, %36\l  br i1 %90, label %91, label %99\l|{<s0>T|<s1>F}}"];
	Node0x55f8310:s0 -> Node0x55f89b0;
	Node0x55f8310:s1 -> Node0x55f8a00;
	Node0x55f89b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%91:\l91:                                               \l  %92 = mul nsw i32 %86, %3\l  %93 = add nsw i32 %92, %83\l  %94 = mul nsw i32 %89, %33\l  %95 = add nsw i32 %93, %94\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %0, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %99\l}"];
	Node0x55f89b0 -> Node0x55f8a00;
	Node0x55f8a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%99:\l99:                                               \l  %100 = phi float [ %98, %91 ], [ %77, %80 ]\l  %101 = icmp slt i32 %74, %52\l  br i1 %101, label %102, label %143\l|{<s0>T|<s1>F}}"];
	Node0x55f8a00:s0 -> Node0x55f9480;
	Node0x55f8a00:s1 -> Node0x55f7dd0;
	Node0x55f9480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  %103 = phi float [ %132, %138 ], [ %78, %99 ]\l  %104 = phi float [ %141, %138 ], [ %100, %99 ]\l  %105 = phi i32 [ %137, %138 ], [ %76, %99 ]\l  %106 = phi i32 [ %121, %138 ], [ %89, %99 ]\l  %107 = phi i32 [ %119, %138 ], [ %86, %99 ]\l  %108 = phi i32 [ %117, %138 ], [ %83, %99 ]\l  %109 = phi i32 [ %139, %138 ], [ %74, %99 ]\l  %110 = phi i32 [ %115, %138 ], [ %73, %99 ]\l  %111 = icmp slt i32 %105, %36\l  %112 = icmp slt i32 %110, %34\l  %113 = select i1 %111, i1 %112, i1 false\l  br i1 %113, label %114, label %181\l|{<s0>T|<s1>F}}"];
	Node0x55f9480:s0 -> Node0x55fa0a0;
	Node0x55f9480:s1 -> Node0x55f5ae0;
	Node0x55fa0a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  %115 = add nsw i32 %110, 1\l  %116 = add nsw i32 %108, %6\l  %117 = srem i32 %116, %3\l  %118 = add nsw i32 %107, %7\l  %119 = srem i32 %118, %4\l  %120 = add nsw i32 %106, %8\l  %121 = srem i32 %120, %5\l  %122 = mul nsw i32 %119, %3\l  %123 = add nsw i32 %122, %117\l  %124 = mul nsw i32 %121, %33\l  %125 = add nsw i32 %123, %124\l  %126 = icmp slt i32 %105, %53\l  %127 = sext i32 %125 to i64\l  br i1 %126, label %128, label %131\l|{<s0>T|<s1>F}}"];
	Node0x55fa0a0:s0 -> Node0x55fa940;
	Node0x55fa0a0:s1 -> Node0x55fa990;
	Node0x55fa940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%128:\l128:                                              \l  %129 = getelementptr inbounds float, float addrspace(1)* %0, i64 %127\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %131\l}"];
	Node0x55fa940 -> Node0x55fa990;
	Node0x55fa990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%131:\l131:                                              \l  %132 = phi float [ %130, %128 ], [ %103, %114 ]\l  %133 = fpext float %104 to double\l  %134 = fadd contract double %133, 1.000000e-01\l  %135 = fptrunc double %134 to float\l  %136 = getelementptr inbounds float, float addrspace(1)* %2, i64 %127\l  store float %135, float addrspace(1)* %136, align 4, !tbaa !16\l  %137 = add nsw i32 %105, 1\l  br i1 %126, label %138, label %181\l|{<s0>T|<s1>F}}"];
	Node0x55fa990:s0 -> Node0x55f9580;
	Node0x55fa990:s1 -> Node0x55f5ae0;
	Node0x55f9580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%138:\l138:                                              \l  %139 = add nsw i32 %109, 1\l  %140 = icmp slt i32 %137, %36\l  %141 = select i1 %140, float %132, float %104\l  %142 = icmp slt i32 %139, %52\l  br i1 %142, label %102, label %143, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x55f9580:s0 -> Node0x55f9480;
	Node0x55f9580:s1 -> Node0x55f7dd0;
	Node0x55f7dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%143:\l143:                                              \l  %144 = phi i32 [ %73, %99 ], [ %115, %138 ]\l  %145 = phi i32 [ %83, %99 ], [ %117, %138 ]\l  %146 = phi i32 [ %86, %99 ], [ %119, %138 ]\l  %147 = phi i32 [ %89, %99 ], [ %121, %138 ]\l  %148 = phi i32 [ %76, %99 ], [ %137, %138 ]\l  %149 = phi float [ %100, %99 ], [ %141, %138 ]\l  %150 = phi float [ %78, %99 ], [ %132, %138 ]\l  %151 = add nsw i32 %75, 1\l  %152 = add nsw i32 %145, %6\l  %153 = srem i32 %152, %3\l  %154 = add nsw i32 %146, %7\l  %155 = srem i32 %154, %4\l  %156 = add nsw i32 %147, %8\l  %157 = srem i32 %156, %5\l  %158 = mul nsw i32 %155, %3\l  %159 = add nsw i32 %158, %153\l  %160 = mul nsw i32 %157, %33\l  %161 = add nsw i32 %159, %160\l  %162 = fpext float %149 to double\l  %163 = fadd contract double %162, 1.000000e-01\l  %164 = fptrunc double %163 to float\l  %165 = sext i32 %161 to i64\l  %166 = getelementptr inbounds float, float addrspace(1)* %2, i64 %165\l  store float %164, float addrspace(1)* %166, align 4, !tbaa !16\l  %167 = add nsw i32 %148, 1\l  %168 = icmp slt i32 %148, %53\l  br i1 %168, label %72, label %181, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x55f7dd0:s0 -> Node0x55f7ca0;
	Node0x55f7dd0:s1 -> Node0x55f5ae0;
	Node0x55f5570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%169:\l169:                                              \l  %170 = add nsw i32 %68, 1\l  %171 = icmp slt i32 %170, %10\l  br i1 %171, label %64, label %172, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x55f5570:s0 -> Node0x55f7170;
	Node0x55f5570:s1 -> Node0x55f6800;
	Node0x55f6800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%172:\l172:                                              \l  %173 = phi i32 [ %62, %54 ], [ %73, %169 ]\l  %174 = phi i32 [ %61, %54 ], [ %74, %169 ]\l  %175 = phi i32 [ %60, %54 ], [ 0, %169 ]\l  %176 = phi i32 [ %57, %54 ], [ %76, %169 ]\l  %177 = phi float [ %56, %54 ], [ %77, %169 ]\l  %178 = phi float [ %55, %54 ], [ %78, %169 ]\l  %179 = add nsw i32 %58, 1\l  %180 = icmp slt i32 %179, %11\l  br i1 %180, label %54, label %181, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x55f6800:s0 -> Node0x55f6330;
	Node0x55f6800:s1 -> Node0x55f5ae0;
	Node0x55f5ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%181:\l181:                                              \l  ret void\l}"];
}
