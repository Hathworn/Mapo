digraph "CFG for '_Z19matrixMultiplyTiledPfS_S_iiiiii' function" {
	label="CFG for '_Z19matrixMultiplyTiledPfS_S_iiiiii' function";

	Node0x4c461b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = shl i32 %12, 4\l  %14 = add i32 %13, %10\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = shl i32 %15, 4\l  %17 = add i32 %16, %11\l  %18 = icmp slt i32 %4, -14\l  br i1 %18, label %59, label %19\l|{<s0>T|<s1>F}}"];
	Node0x4c461b0:s0 -> Node0x4c48b70;
	Node0x4c461b0:s1 -> Node0x4c48c00;
	Node0x4c48c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%19:\l19:                                               \l  %20 = add nsw i32 %4, -1\l  %21 = sdiv i32 %20, 16\l  %22 = icmp ult i32 %17, %3\l  %23 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 %10\l  %24 = mul i32 %17, %4\l  %25 = icmp ult i32 %14, %6\l  %26 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 %11,\l... i32 %10\l  %27 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 0\l  %28 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 0, i32\l... %10\l  %29 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 1\l  %30 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 1, i32\l... %10\l  %31 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 2\l  %32 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 2, i32\l... %10\l  %33 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 3\l  %34 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 3, i32\l... %10\l  %35 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 4\l  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 4, i32\l... %10\l  %37 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 5\l  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 5, i32\l... %10\l  %39 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 6\l  %40 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 6, i32\l... %10\l  %41 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 7\l  %42 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 7, i32\l... %10\l  %43 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 8\l  %44 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 8, i32\l... %10\l  %45 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 9\l  %46 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 9, i32\l... %10\l  %47 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 10\l  %48 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 10, i32\l... %10\l  %49 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 11\l  %50 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 11, i32\l... %10\l  %51 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 12\l  %52 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 12, i32\l... %10\l  %53 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 13\l  %54 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 13, i32\l... %10\l  %55 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 14\l  %56 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 14, i32\l... %10\l  %57 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 15\l  %58 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ19matrixMultiplyTiledPfS_S_iiiiiiE4ds_B, i32 0, i32 15, i32\l... %10\l  br label %64\l}"];
	Node0x4c48c00 -> Node0x4c48fb0;
	Node0x4c48b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%59:\l59:                                               \l  %60 = phi float [ 0.000000e+00, %9 ], [ %152, %87 ]\l  %61 = icmp ult i32 %17, %7\l  %62 = icmp ult i32 %14, %8\l  %63 = select i1 %61, i1 %62, i1 false\l  br i1 %63, label %155, label %160\l|{<s0>T|<s1>F}}"];
	Node0x4c48b70:s0 -> Node0x4c4c0e0;
	Node0x4c48b70:s1 -> Node0x4c4c170;
	Node0x4c48fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = phi float [ 0.000000e+00, %19 ], [ %152, %87 ]\l  %66 = phi i32 [ 0, %19 ], [ %153, %87 ]\l  %67 = shl nsw i32 %66, 4\l  %68 = add nuw i32 %67, %10\l  %69 = add nuw i32 %67, %11\l  %70 = icmp ult i32 %68, %4\l  %71 = select i1 %22, i1 %70, i1 false\l  br i1 %71, label %72, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4c48fb0:s0 -> Node0x4c49a40;
	Node0x4c48fb0:s1 -> Node0x4c4c9f0;
	Node0x4c49a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%72:\l72:                                               \l  %73 = add i32 %68, %24\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %77\l}"];
	Node0x4c49a40 -> Node0x4c4c9f0;
	Node0x4c4c9f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi float [ %76, %72 ], [ 0.000000e+00, %64 ]\l  store float %78, float addrspace(3)* %23, align 4, !tbaa !5\l  %79 = icmp ult i32 %69, %5\l  %80 = select i1 %25, i1 %79, i1 false\l  br i1 %80, label %81, label %87\l|{<s0>T|<s1>F}}"];
	Node0x4c4c9f0:s0 -> Node0x4c4d8c0;
	Node0x4c4c9f0:s1 -> Node0x4c4bda0;
	Node0x4c4d8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%81:\l81:                                               \l  %82 = mul i32 %69, %6\l  %83 = add i32 %82, %14\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %87\l}"];
	Node0x4c4d8c0 -> Node0x4c4bda0;
	Node0x4c4bda0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  %88 = phi float [ %86, %81 ], [ 0.000000e+00, %77 ]\l  store float %88, float addrspace(3)* %26, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %89 = load float, float addrspace(3)* %27, align 16, !tbaa !5\l  %90 = load float, float addrspace(3)* %28, align 4, !tbaa !5\l  %91 = fmul contract float %89, %90\l  %92 = fadd contract float %65, %91\l  %93 = load float, float addrspace(3)* %29, align 4, !tbaa !5\l  %94 = load float, float addrspace(3)* %30, align 4, !tbaa !5\l  %95 = fmul contract float %93, %94\l  %96 = fadd contract float %92, %95\l  %97 = load float, float addrspace(3)* %31, align 8, !tbaa !5\l  %98 = load float, float addrspace(3)* %32, align 4, !tbaa !5\l  %99 = fmul contract float %97, %98\l  %100 = fadd contract float %96, %99\l  %101 = load float, float addrspace(3)* %33, align 4, !tbaa !5\l  %102 = load float, float addrspace(3)* %34, align 4, !tbaa !5\l  %103 = fmul contract float %101, %102\l  %104 = fadd contract float %100, %103\l  %105 = load float, float addrspace(3)* %35, align 16, !tbaa !5\l  %106 = load float, float addrspace(3)* %36, align 4, !tbaa !5\l  %107 = fmul contract float %105, %106\l  %108 = fadd contract float %104, %107\l  %109 = load float, float addrspace(3)* %37, align 4, !tbaa !5\l  %110 = load float, float addrspace(3)* %38, align 4, !tbaa !5\l  %111 = fmul contract float %109, %110\l  %112 = fadd contract float %108, %111\l  %113 = load float, float addrspace(3)* %39, align 8, !tbaa !5\l  %114 = load float, float addrspace(3)* %40, align 4, !tbaa !5\l  %115 = fmul contract float %113, %114\l  %116 = fadd contract float %112, %115\l  %117 = load float, float addrspace(3)* %41, align 4, !tbaa !5\l  %118 = load float, float addrspace(3)* %42, align 4, !tbaa !5\l  %119 = fmul contract float %117, %118\l  %120 = fadd contract float %116, %119\l  %121 = load float, float addrspace(3)* %43, align 16, !tbaa !5\l  %122 = load float, float addrspace(3)* %44, align 4, !tbaa !5\l  %123 = fmul contract float %121, %122\l  %124 = fadd contract float %120, %123\l  %125 = load float, float addrspace(3)* %45, align 4, !tbaa !5\l  %126 = load float, float addrspace(3)* %46, align 4, !tbaa !5\l  %127 = fmul contract float %125, %126\l  %128 = fadd contract float %124, %127\l  %129 = load float, float addrspace(3)* %47, align 8, !tbaa !5\l  %130 = load float, float addrspace(3)* %48, align 4, !tbaa !5\l  %131 = fmul contract float %129, %130\l  %132 = fadd contract float %128, %131\l  %133 = load float, float addrspace(3)* %49, align 4, !tbaa !5\l  %134 = load float, float addrspace(3)* %50, align 4, !tbaa !5\l  %135 = fmul contract float %133, %134\l  %136 = fadd contract float %132, %135\l  %137 = load float, float addrspace(3)* %51, align 16, !tbaa !5\l  %138 = load float, float addrspace(3)* %52, align 4, !tbaa !5\l  %139 = fmul contract float %137, %138\l  %140 = fadd contract float %136, %139\l  %141 = load float, float addrspace(3)* %53, align 4, !tbaa !5\l  %142 = load float, float addrspace(3)* %54, align 4, !tbaa !5\l  %143 = fmul contract float %141, %142\l  %144 = fadd contract float %140, %143\l  %145 = load float, float addrspace(3)* %55, align 8, !tbaa !5\l  %146 = load float, float addrspace(3)* %56, align 4, !tbaa !5\l  %147 = fmul contract float %145, %146\l  %148 = fadd contract float %144, %147\l  %149 = load float, float addrspace(3)* %57, align 4, !tbaa !5\l  %150 = load float, float addrspace(3)* %58, align 4, !tbaa !5\l  %151 = fmul contract float %149, %150\l  %152 = fadd contract float %148, %151\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %153 = add nuw nsw i32 %66, 1\l  %154 = icmp eq i32 %66, %21\l  br i1 %154, label %59, label %64, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4c4bda0:s0 -> Node0x4c48b70;
	Node0x4c4bda0:s1 -> Node0x4c48fb0;
	Node0x4c4c0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%155:\l155:                                              \l  %156 = mul i32 %17, %8\l  %157 = add i32 %156, %14\l  %158 = zext i32 %157 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %2, i64 %158\l  store float %60, float addrspace(1)* %159, align 4, !tbaa !5\l  br label %160\l}"];
	Node0x4c4c0e0 -> Node0x4c4c170;
	Node0x4c4c170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%160:\l160:                                              \l  ret void\l}"];
}
