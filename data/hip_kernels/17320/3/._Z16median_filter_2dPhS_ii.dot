digraph "CFG for '_Z16median_filter_2dPhS_ii' function" {
	label="CFG for '_Z16median_filter_2dPhS_ii' function";

	Node0x52f82a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%4:\l  %5 = alloca [121 x float], align 16, addrspace(5)\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = icmp slt i32 %14, %2\l  %24 = icmp slt i32 %22, %3\l  %25 = select i1 %23, i1 %24, i1 false\l  br i1 %25, label %26, label %180\l|{<s0>T|<s1>F}}"];
	Node0x52f82a0:s0 -> Node0x52fc420;
	Node0x52f82a0:s1 -> Node0x52fc4b0;
	Node0x52fc420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%26:\l26:                                               \l  %27 = mul nsw i32 %22, %2\l  %28 = bitcast [121 x float] addrspace(5)* %5 to i8 addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 484, i8 addrspace(5)* %28) #3\l  %29 = add nsw i32 %14, -4\l  %30 = add nsw i32 %14, 4\l  %31 = add nsw i32 %22, -4\l  %32 = add nsw i32 %22, 4\l  br label %151\l}"];
	Node0x52fc420 -> Node0x52faa60;
	Node0x52fab20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%33:\l33:                                               \l  %34 = add nsw i32 %27, %14\l  %35 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 0\l  %36 = icmp sgt i32 %177, 1\l  br i1 %36, label %37, label %144\l|{<s0>T|<s1>F}}"];
	Node0x52fab20:s0 -> Node0x52fcf70;
	Node0x52fab20:s1 -> Node0x52fd000;
	Node0x52fcf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%37:\l37:                                               \l  %38 = add i32 %177, -2\l  br label %39\l}"];
	Node0x52fcf70 -> Node0x52fd200;
	Node0x52fd200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%39:\l39:                                               \l  %40 = phi i32 [ 0, %37 ], [ %72, %71 ]\l  %41 = xor i32 %40, -1\l  %42 = add i32 %177, %41\l  %43 = xor i32 %40, -1\l  %44 = add i32 %177, %43\l  %45 = icmp sgt i32 %44, 0\l  br i1 %45, label %46, label %71\l|{<s0>T|<s1>F}}"];
	Node0x52fd200:s0 -> Node0x52fd730;
	Node0x52fd200:s1 -> Node0x52fd2f0;
	Node0x52fd730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%46:\l46:                                               \l  %47 = sub i32 %38, %40\l  %48 = load float, float addrspace(5)* %35, align 16, !tbaa !7\l  %49 = and i32 %42, 7\l  %50 = icmp ult i32 %47, 7\l  br i1 %50, label %53, label %51\l|{<s0>T|<s1>F}}"];
	Node0x52fd730:s0 -> Node0x52fdbc0;
	Node0x52fd730:s1 -> Node0x52fdc50;
	Node0x52fdc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%51:\l51:                                               \l  %52 = and i32 %42, -8\l  br label %74\l}"];
	Node0x52fdc50 -> Node0x52fde50;
	Node0x52fdbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%53:\l53:                                               \l  %54 = phi float [ %48, %46 ], [ %141, %140 ]\l  %55 = phi i32 [ 0, %46 ], [ %134, %140 ]\l  %56 = icmp eq i32 %49, 0\l  br i1 %56, label %71, label %57\l|{<s0>T|<s1>F}}"];
	Node0x52fdbc0:s0 -> Node0x52fd2f0;
	Node0x52fdbc0:s1 -> Node0x52fe230;
	Node0x52fe230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%57:\l57:                                               \l  %58 = phi float [ %68, %67 ], [ %54, %53 ]\l  %59 = phi i32 [ %61, %67 ], [ %55, %53 ]\l  %60 = phi i32 [ %69, %67 ], [ 0, %53 ]\l  %61 = add nuw nsw i32 %59, 1\l  %62 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %61\l  %63 = load float, float addrspace(5)* %62, align 4, !tbaa !7\l  %64 = fcmp contract ogt float %58, %63\l  br i1 %64, label %65, label %67\l|{<s0>T|<s1>F}}"];
	Node0x52fe230:s0 -> Node0x52fe4e0;
	Node0x52fe230:s1 -> Node0x52fe3a0;
	Node0x52fe4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%65:\l65:                                               \l  %66 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %59\l  store float %63, float addrspace(5)* %66, align 4, !tbaa !7\l  store float %58, float addrspace(5)* %62, align 4, !tbaa !7\l  br label %67\l}"];
	Node0x52fe4e0 -> Node0x52fe3a0;
	Node0x52fe3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%67:\l67:                                               \l  %68 = phi float [ %63, %57 ], [ %58, %65 ]\l  %69 = add i32 %60, 1\l  %70 = icmp eq i32 %69, %49\l  br i1 %70, label %71, label %57, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x52fe3a0:s0 -> Node0x52fd2f0;
	Node0x52fe3a0:s1 -> Node0x52fe230;
	Node0x52fd2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%71:\l71:                                               \l  %72 = add nuw nsw i32 %40, 1\l  %73 = icmp eq i32 %38, %40\l  br i1 %73, label %144, label %39, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x52fd2f0:s0 -> Node0x52fd000;
	Node0x52fd2f0:s1 -> Node0x52fd200;
	Node0x52fde50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%74:\l74:                                               \l  %75 = phi float [ %48, %51 ], [ %141, %140 ]\l  %76 = phi i32 [ 0, %51 ], [ %134, %140 ]\l  %77 = phi i32 [ 0, %51 ], [ %142, %140 ]\l  %78 = or i32 %76, 1\l  %79 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %78\l  %80 = load float, float addrspace(5)* %79, align 4, !tbaa !7\l  %81 = fcmp contract ogt float %75, %80\l  br i1 %81, label %82, label %84\l|{<s0>T|<s1>F}}"];
	Node0x52fde50:s0 -> Node0x52ffed0;
	Node0x52fde50:s1 -> Node0x52fff60;
	Node0x52ffed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%82:\l82:                                               \l  %83 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %76\l  store float %80, float addrspace(5)* %83, align 16, !tbaa !7\l  store float %75, float addrspace(5)* %79, align 4, !tbaa !7\l  br label %84\l}"];
	Node0x52ffed0 -> Node0x52fff60;
	Node0x52fff60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%84:\l84:                                               \l  %85 = phi float [ %80, %74 ], [ %75, %82 ]\l  %86 = or i32 %76, 2\l  %87 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %86\l  %88 = load float, float addrspace(5)* %87, align 8, !tbaa !7\l  %89 = fcmp contract ogt float %85, %88\l  br i1 %89, label %90, label %92\l|{<s0>T|<s1>F}}"];
	Node0x52fff60:s0 -> Node0x53005f0;
	Node0x52fff60:s1 -> Node0x5300640;
	Node0x53005f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%90:\l90:                                               \l  %91 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %78\l  store float %88, float addrspace(5)* %91, align 4, !tbaa !7\l  store float %85, float addrspace(5)* %87, align 8, !tbaa !7\l  br label %92\l}"];
	Node0x53005f0 -> Node0x5300640;
	Node0x5300640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%92:\l92:                                               \l  %93 = phi float [ %88, %84 ], [ %85, %90 ]\l  %94 = or i32 %76, 3\l  %95 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %94\l  %96 = load float, float addrspace(5)* %95, align 4, !tbaa !7\l  %97 = fcmp contract ogt float %93, %96\l  br i1 %97, label %98, label %100\l|{<s0>T|<s1>F}}"];
	Node0x5300640:s0 -> Node0x5300c90;
	Node0x5300640:s1 -> Node0x5300ce0;
	Node0x5300c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%98:\l98:                                               \l  %99 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %86\l  store float %96, float addrspace(5)* %99, align 8, !tbaa !7\l  store float %93, float addrspace(5)* %95, align 4, !tbaa !7\l  br label %100\l}"];
	Node0x5300c90 -> Node0x5300ce0;
	Node0x5300ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%100:\l100:                                              \l  %101 = phi float [ %96, %92 ], [ %93, %98 ]\l  %102 = or i32 %76, 4\l  %103 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %102\l  %104 = load float, float addrspace(5)* %103, align 16, !tbaa !7\l  %105 = fcmp contract ogt float %101, %104\l  br i1 %105, label %106, label %108\l|{<s0>T|<s1>F}}"];
	Node0x5300ce0:s0 -> Node0x5301330;
	Node0x5300ce0:s1 -> Node0x5301380;
	Node0x5301330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%106:\l106:                                              \l  %107 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %94\l  store float %104, float addrspace(5)* %107, align 4, !tbaa !7\l  store float %101, float addrspace(5)* %103, align 16, !tbaa !7\l  br label %108\l}"];
	Node0x5301330 -> Node0x5301380;
	Node0x5301380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%108:\l108:                                              \l  %109 = phi float [ %104, %100 ], [ %101, %106 ]\l  %110 = or i32 %76, 5\l  %111 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %110\l  %112 = load float, float addrspace(5)* %111, align 4, !tbaa !7\l  %113 = fcmp contract ogt float %109, %112\l  br i1 %113, label %114, label %116\l|{<s0>T|<s1>F}}"];
	Node0x5301380:s0 -> Node0x53019d0;
	Node0x5301380:s1 -> Node0x5301a20;
	Node0x53019d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%114:\l114:                                              \l  %115 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %102\l  store float %112, float addrspace(5)* %115, align 16, !tbaa !7\l  store float %109, float addrspace(5)* %111, align 4, !tbaa !7\l  br label %116\l}"];
	Node0x53019d0 -> Node0x5301a20;
	Node0x5301a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%116:\l116:                                              \l  %117 = phi float [ %112, %108 ], [ %109, %114 ]\l  %118 = or i32 %76, 6\l  %119 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %118\l  %120 = load float, float addrspace(5)* %119, align 8, !tbaa !7\l  %121 = fcmp contract ogt float %117, %120\l  br i1 %121, label %122, label %124\l|{<s0>T|<s1>F}}"];
	Node0x5301a20:s0 -> Node0x53020a0;
	Node0x5301a20:s1 -> Node0x53020f0;
	Node0x53020a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%122:\l122:                                              \l  %123 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %110\l  store float %120, float addrspace(5)* %123, align 4, !tbaa !7\l  store float %117, float addrspace(5)* %119, align 8, !tbaa !7\l  br label %124\l}"];
	Node0x53020a0 -> Node0x53020f0;
	Node0x53020f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%124:\l124:                                              \l  %125 = phi float [ %120, %116 ], [ %117, %122 ]\l  %126 = or i32 %76, 7\l  %127 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %126\l  %128 = load float, float addrspace(5)* %127, align 4, !tbaa !7\l  %129 = fcmp contract ogt float %125, %128\l  br i1 %129, label %130, label %132\l|{<s0>T|<s1>F}}"];
	Node0x53020f0:s0 -> Node0x52ff010;
	Node0x53020f0:s1 -> Node0x52ff060;
	Node0x52ff010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%130:\l130:                                              \l  %131 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %118\l  store float %128, float addrspace(5)* %131, align 8, !tbaa !7\l  store float %125, float addrspace(5)* %127, align 4, !tbaa !7\l  br label %132\l}"];
	Node0x52ff010 -> Node0x52ff060;
	Node0x52ff060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%132:\l132:                                              \l  %133 = phi float [ %128, %124 ], [ %125, %130 ]\l  %134 = add nuw nsw i32 %76, 8\l  %135 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %134\l  %136 = load float, float addrspace(5)* %135, align 16, !tbaa !7\l  %137 = fcmp contract ogt float %133, %136\l  br i1 %137, label %138, label %140\l|{<s0>T|<s1>F}}"];
	Node0x52ff060:s0 -> Node0x53031e0;
	Node0x52ff060:s1 -> Node0x52fdf40;
	Node0x53031e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%138:\l138:                                              \l  %139 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %126\l  store float %136, float addrspace(5)* %139, align 4, !tbaa !7\l  store float %133, float addrspace(5)* %135, align 16, !tbaa !7\l  br label %140\l}"];
	Node0x53031e0 -> Node0x52fdf40;
	Node0x52fdf40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%140:\l140:                                              \l  %141 = phi float [ %136, %132 ], [ %133, %138 ]\l  %142 = add i32 %77, 8\l  %143 = icmp eq i32 %142, %52\l  br i1 %143, label %53, label %74, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x52fdf40:s0 -> Node0x52fdbc0;
	Node0x52fdf40:s1 -> Node0x52fde50;
	Node0x52fd000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%144:\l144:                                              \l  %145 = sdiv i32 %177, 2\l  %146 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %145\l  %147 = load float, float addrspace(5)* %146, align 4, !tbaa !7\l  %148 = fptoui float %147 to i8\l  %149 = sext i32 %34 to i64\l  %150 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %149\l  store i8 %148, i8 addrspace(1)* %150, align 1, !tbaa !16\l  call void @llvm.lifetime.end.p5i8(i64 484, i8 addrspace(5)* %28) #3\l  br label %180\l}"];
	Node0x52fd000 -> Node0x52fc4b0;
	Node0x52faa60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%151:\l151:                                              \l  %152 = phi i32 [ %29, %26 ], [ %157, %156 ]\l  %153 = phi i32 [ 0, %26 ], [ %177, %156 ]\l  %154 = icmp sgt i32 %152, -1\l  %155 = icmp slt i32 %152, %2\l  br label %159\l}"];
	Node0x52faa60 -> Node0x53040d0;
	Node0x5303e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%156:\l156:                                              \l  %157 = add nsw i32 %152, 1\l  %158 = icmp slt i32 %152, %30\l  br i1 %158, label %151, label %33, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5303e00:s0 -> Node0x52faa60;
	Node0x5303e00:s1 -> Node0x52fab20;
	Node0x53040d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%159:\l159:                                              \l  %160 = phi i32 [ %31, %151 ], [ %178, %176 ]\l  %161 = phi i32 [ %153, %151 ], [ %177, %176 ]\l  br i1 %154, label %162, label %176\l|{<s0>T|<s1>F}}"];
	Node0x53040d0:s0 -> Node0x5304650;
	Node0x53040d0:s1 -> Node0x5304460;
	Node0x5304650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%162:\l162:                                              \l  %163 = icmp sgt i32 %160, -1\l  %164 = select i1 %155, i1 %163, i1 false\l  %165 = icmp slt i32 %160, %3\l  %166 = select i1 %164, i1 %165, i1 false\l  br i1 %166, label %167, label %176\l|{<s0>T|<s1>F}}"];
	Node0x5304650:s0 -> Node0x5304a10;
	Node0x5304650:s1 -> Node0x5304460;
	Node0x5304a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%167:\l167:                                              \l  %168 = mul nsw i32 %160, %2\l  %169 = add nsw i32 %168, %152\l  %170 = sext i32 %169 to i64\l  %171 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %170\l  %172 = load i8, i8 addrspace(1)* %171, align 1, !tbaa !16, !amdgpu.noclobber\l... !5\l  %173 = uitofp i8 %172 to float\l  %174 = add nsw i32 %161, 1\l  %175 = getelementptr inbounds [121 x float], [121 x float] addrspace(5)* %5,\l... i32 0, i32 %161\l  store float %173, float addrspace(5)* %175, align 4, !tbaa !7\l  br label %176\l}"];
	Node0x5304a10 -> Node0x5304460;
	Node0x5304460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%176:\l176:                                              \l  %177 = phi i32 [ %174, %167 ], [ %161, %162 ], [ %161, %159 ]\l  %178 = add nsw i32 %160, 1\l  %179 = icmp slt i32 %160, %32\l  br i1 %179, label %159, label %156, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x5304460:s0 -> Node0x53040d0;
	Node0x5304460:s1 -> Node0x5303e00;
	Node0x52fc4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%180:\l180:                                              \l  ret void\l}"];
}
