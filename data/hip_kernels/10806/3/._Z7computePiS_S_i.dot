digraph "CFG for '_Z7computePiS_S_i' function" {
	label="CFG for '_Z7computePiS_S_i' function";

	Node0x4bdd900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  switch i32 %5, label %42 [\l    i32 2, label %6\l    i32 1, label %24\l  ]\l|{<s0>def|<s1>2|<s2>1}}"];
	Node0x4bdd900:s0 -> Node0x4bddb00;
	Node0x4bdd900:s1 -> Node0x4bde1d0;
	Node0x4bdd900:s2 -> Node0x4bde290;
	Node0x4bde1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%6:\l6:                                                \l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = zext i32 %7 to i64\l  %9 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %8\l  %10 = load i32, i32 addrspace(1)* %9, align 4, !tbaa !5, !amdgpu.noclobber !9\l  %11 = add i32 %7, %3\l  %12 = zext i32 %11 to i64\l  %13 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %12\l  %14 = load i32, i32 addrspace(1)* %13, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %15 = mul nsw i32 %14, %10\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %12\l  %17 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %8\l  %19 = load i32, i32 addrspace(1)* %18, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %20 = mul nsw i32 %19, %17\l  %21 = sub nsw i32 %15, %20\l  %22 = shl i32 %3, 1\l  %23 = add i32 %22, %7\l  br label %65\l}"];
	Node0x4bde1d0 -> Node0x4be0b10;
	Node0x4bde290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%24:\l24:                                               \l  %25 = shl i32 %3, 1\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %27 = add i32 %25, %26\l  %28 = zext i32 %27 to i64\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %28\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %31 = zext i32 %26 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %34 = mul nsw i32 %33, %30\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %31\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %28\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %39 = mul nsw i32 %38, %36\l  %40 = sub nsw i32 %34, %39\l  %41 = add i32 %26, %3\l  br label %65\l}"];
	Node0x4bde290 -> Node0x4be0b10;
	Node0x4bddb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%42:\l42:                                               \l  %43 = add i32 %5, 1\l  %44 = mul i32 %43, %3\l  %45 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %46 = add i32 %44, %45\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %50 = add i32 %5, 2\l  %51 = mul i32 %50, %3\l  %52 = add i32 %51, %45\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %56 = mul nsw i32 %55, %49\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %47\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %53\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %61 = mul nsw i32 %60, %58\l  %62 = sub nsw i32 %56, %61\l  %63 = mul i32 %5, %3\l  %64 = add i32 %63, %45\l  br label %65\l}"];
	Node0x4bddb00 -> Node0x4be0b10;
	Node0x4be0b10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = phi i32 [ %41, %24 ], [ %64, %42 ], [ %23, %6 ]\l  %67 = phi i32 [ %40, %24 ], [ %62, %42 ], [ %21, %6 ]\l  %68 = zext i32 %66 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %68\l  store i32 %67, i32 addrspace(1)* %69, align 4, !tbaa !5\l  ret void\l}"];
}
