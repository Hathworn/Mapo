digraph "CFG for '_Z11DiamondStepPhPjiii' function" {
	label="CFG for '_Z11DiamondStepPhPjiii' function";

	Node0x458b7e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = sdiv i32 %2, 2\l  %24 = mul nsw i32 %22, %2\l  %25 = add nsw i32 %24, %23\l  %26 = mul nsw i32 %14, %2\l  %27 = add nsw i32 %26, %23\l  %28 = mul nsw i32 %24, %3\l  %29 = add nsw i32 %28, %26\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %30\l  %32 = load i8, i8 addrspace(1)* %31, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %33 = zext i8 %32 to i32\l  %34 = add nsw i32 %27, %23\l  %35 = add nsw i32 %28, %34\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %36\l  %38 = load i8, i8 addrspace(1)* %37, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %39 = zext i8 %38 to i32\l  %40 = add nsw i32 %25, %23\l  %41 = mul nsw i32 %40, %3\l  %42 = add nsw i32 %41, %26\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %43\l  %45 = load i8, i8 addrspace(1)* %44, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %46 = zext i8 %45 to i32\l  %47 = add nsw i32 %41, %34\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %48\l  %50 = load i8, i8 addrspace(1)* %49, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %51 = zext i8 %50 to i32\l  %52 = mul nsw i32 %25, %3\l  %53 = add nsw i32 %52, %27\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %54\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !10, !amdgpu.noclobber\l... !5\l  %57 = shl nsw i32 %4, 1\l  %58 = urem i32 %56, %57\l  %59 = sub i32 %33, %4\l  %60 = add i32 %59, %39\l  %61 = add i32 %60, %46\l  %62 = add i32 %61, %51\l  %63 = add i32 %62, %58\l  %64 = lshr i32 %63, 2\l  %65 = trunc i32 %64 to i8\l  %66 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %54\l  store i8 %65, i8 addrspace(1)* %66, align 1, !tbaa !7\l  ret void\l}"];
}
