digraph "CFG for '_Z5findYPfS_iffiS_' function" {
	label="CFG for '_Z5findYPfS_iffiS_' function";

	Node0x5984050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%7:\l  %8 = icmp sgt i32 %2, 0\l  br i1 %8, label %9, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5984050:s0 -> Node0x5983270;
	Node0x5984050:s1 -> Node0x59847d0;
	Node0x5983270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%9:\l9:                                                \l  %10 = and i32 %2, 7\l  %11 = icmp ult i32 %2, 8\l  br i1 %11, label %14, label %12\l|{<s0>T|<s1>F}}"];
	Node0x5983270:s0 -> Node0x5984a90;
	Node0x5983270:s1 -> Node0x5984ae0;
	Node0x5984ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%12:\l12:                                               \l  %13 = and i32 %2, -8\l  br label %48\l}"];
	Node0x5984ae0 -> Node0x5984ce0;
	Node0x5984a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%14:\l14:                                               \l  %15 = phi float [ undef, %9 ], [ %170, %169 ]\l  %16 = phi i32 [ undef, %9 ], [ %171, %169 ]\l  %17 = phi i32 [ 0, %9 ], [ %172, %169 ]\l  %18 = phi i32 [ 0, %9 ], [ %171, %169 ]\l  %19 = phi float [ 0.000000e+00, %9 ], [ %170, %169 ]\l  %20 = icmp eq i32 %10, 0\l  br i1 %20, label %43, label %21\l|{<s0>T|<s1>F}}"];
	Node0x5984a90:s0 -> Node0x59847d0;
	Node0x5984a90:s1 -> Node0x5986250;
	Node0x5986250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = phi i32 [ %40, %37 ], [ %17, %14 ]\l  %23 = phi i32 [ %39, %37 ], [ %18, %14 ]\l  %24 = phi float [ %38, %37 ], [ %19, %14 ]\l  %25 = phi i32 [ %41, %37 ], [ 0, %14 ]\l  %26 = zext i32 %22 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %29 = fsub contract float %28, %4\l  %30 = tail call float @llvm.fabs.f32(float %29)\l  %31 = fcmp contract olt float %30, %3\l  br i1 %31, label %32, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5986250:s0 -> Node0x59879f0;
	Node0x5986250:s1 -> Node0x59863c0;
	Node0x59879f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%32:\l32:                                               \l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %26\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %35 = fadd contract float %34, %24\l  %36 = add nsw i32 %23, 1\l  br label %37\l}"];
	Node0x59879f0 -> Node0x59863c0;
	Node0x59863c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi float [ %35, %32 ], [ %24, %21 ]\l  %39 = phi i32 [ %36, %32 ], [ %23, %21 ]\l  %40 = add nuw nsw i32 %22, 1\l  %41 = add i32 %25, 1\l  %42 = icmp eq i32 %41, %10\l  br i1 %42, label %43, label %21, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x59863c0:s0 -> Node0x59847d0;
	Node0x59863c0:s1 -> Node0x5986250;
	Node0x59847d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%43:\l43:                                               \l  %44 = phi float [ 0.000000e+00, %7 ], [ %15, %14 ], [ %38, %37 ]\l  %45 = phi i32 [ 0, %7 ], [ %16, %14 ], [ %39, %37 ]\l  %46 = sitofp i32 %45 to float\l  %47 = fdiv contract float %44, %46\l  store float %47, float addrspace(1)* %6, align 4, !tbaa !4\l  ret void\l}"];
	Node0x5984ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%48:\l48:                                               \l  %49 = phi i32 [ 0, %12 ], [ %172, %169 ]\l  %50 = phi i32 [ 0, %12 ], [ %171, %169 ]\l  %51 = phi float [ 0.000000e+00, %12 ], [ %170, %169 ]\l  %52 = phi i32 [ 0, %12 ], [ %173, %169 ]\l  %53 = zext i32 %49 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %56 = fsub contract float %55, %4\l  %57 = tail call float @llvm.fabs.f32(float %56)\l  %58 = fcmp contract olt float %57, %3\l  br i1 %58, label %59, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5984ce0:s0 -> Node0x5989970;
	Node0x5984ce0:s1 -> Node0x59899c0;
	Node0x5989970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%59:\l59:                                               \l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %62 = fadd contract float %61, %51\l  %63 = add nsw i32 %50, 1\l  br label %64\l}"];
	Node0x5989970 -> Node0x59899c0;
	Node0x59899c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%64:\l64:                                               \l  %65 = phi float [ %62, %59 ], [ %51, %48 ]\l  %66 = phi i32 [ %63, %59 ], [ %50, %48 ]\l  %67 = or i32 %49, 1\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %71 = fsub contract float %70, %4\l  %72 = tail call float @llvm.fabs.f32(float %71)\l  %73 = fcmp contract olt float %72, %3\l  br i1 %73, label %74, label %79\l|{<s0>T|<s1>F}}"];
	Node0x59899c0:s0 -> Node0x598a500;
	Node0x59899c0:s1 -> Node0x598a590;
	Node0x598a500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%74:\l74:                                               \l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %68\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %77 = fadd contract float %76, %65\l  %78 = add nsw i32 %66, 1\l  br label %79\l}"];
	Node0x598a500 -> Node0x598a590;
	Node0x598a590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%79:\l79:                                               \l  %80 = phi float [ %77, %74 ], [ %65, %64 ]\l  %81 = phi i32 [ %78, %74 ], [ %66, %64 ]\l  %82 = or i32 %49, 2\l  %83 = zext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %86 = fsub contract float %85, %4\l  %87 = tail call float @llvm.fabs.f32(float %86)\l  %88 = fcmp contract olt float %87, %3\l  br i1 %88, label %89, label %94\l|{<s0>T|<s1>F}}"];
	Node0x598a590:s0 -> Node0x598aef0;
	Node0x598a590:s1 -> Node0x598af80;
	Node0x598aef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%89:\l89:                                               \l  %90 = getelementptr inbounds float, float addrspace(1)* %1, i64 %83\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %92 = fadd contract float %91, %80\l  %93 = add nsw i32 %81, 1\l  br label %94\l}"];
	Node0x598aef0 -> Node0x598af80;
	Node0x598af80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%94:\l94:                                               \l  %95 = phi float [ %92, %89 ], [ %80, %79 ]\l  %96 = phi i32 [ %93, %89 ], [ %81, %79 ]\l  %97 = or i32 %49, 3\l  %98 = zext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %101 = fsub contract float %100, %4\l  %102 = tail call float @llvm.fabs.f32(float %101)\l  %103 = fcmp contract olt float %102, %3\l  br i1 %103, label %104, label %109\l|{<s0>T|<s1>F}}"];
	Node0x598af80:s0 -> Node0x598b8e0;
	Node0x598af80:s1 -> Node0x598b970;
	Node0x598b8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%104:\l104:                                              \l  %105 = getelementptr inbounds float, float addrspace(1)* %1, i64 %98\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %107 = fadd contract float %106, %95\l  %108 = add nsw i32 %96, 1\l  br label %109\l}"];
	Node0x598b8e0 -> Node0x598b970;
	Node0x598b970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%109:\l109:                                              \l  %110 = phi float [ %107, %104 ], [ %95, %94 ]\l  %111 = phi i32 [ %108, %104 ], [ %96, %94 ]\l  %112 = or i32 %49, 4\l  %113 = zext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %0, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %116 = fsub contract float %115, %4\l  %117 = tail call float @llvm.fabs.f32(float %116)\l  %118 = fcmp contract olt float %117, %3\l  br i1 %118, label %119, label %124\l|{<s0>T|<s1>F}}"];
	Node0x598b970:s0 -> Node0x598c300;
	Node0x598b970:s1 -> Node0x598c390;
	Node0x598c300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%119:\l119:                                              \l  %120 = getelementptr inbounds float, float addrspace(1)* %1, i64 %113\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %122 = fadd contract float %121, %110\l  %123 = add nsw i32 %111, 1\l  br label %124\l}"];
	Node0x598c300 -> Node0x598c390;
	Node0x598c390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%124:\l124:                                              \l  %125 = phi float [ %122, %119 ], [ %110, %109 ]\l  %126 = phi i32 [ %123, %119 ], [ %111, %109 ]\l  %127 = or i32 %49, 5\l  %128 = zext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %0, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %131 = fsub contract float %130, %4\l  %132 = tail call float @llvm.fabs.f32(float %131)\l  %133 = fcmp contract olt float %132, %3\l  br i1 %133, label %134, label %139\l|{<s0>T|<s1>F}}"];
	Node0x598c390:s0 -> Node0x598a0b0;
	Node0x598c390:s1 -> Node0x598d1e0;
	Node0x598a0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%134:\l134:                                              \l  %135 = getelementptr inbounds float, float addrspace(1)* %1, i64 %128\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %137 = fadd contract float %136, %125\l  %138 = add nsw i32 %126, 1\l  br label %139\l}"];
	Node0x598a0b0 -> Node0x598d1e0;
	Node0x598d1e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%139:\l139:                                              \l  %140 = phi float [ %137, %134 ], [ %125, %124 ]\l  %141 = phi i32 [ %138, %134 ], [ %126, %124 ]\l  %142 = or i32 %49, 6\l  %143 = zext i32 %142 to i64\l  %144 = getelementptr inbounds float, float addrspace(1)* %0, i64 %143\l  %145 = load float, float addrspace(1)* %144, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %146 = fsub contract float %145, %4\l  %147 = tail call float @llvm.fabs.f32(float %146)\l  %148 = fcmp contract olt float %147, %3\l  br i1 %148, label %149, label %154\l|{<s0>T|<s1>F}}"];
	Node0x598d1e0:s0 -> Node0x598db40;
	Node0x598d1e0:s1 -> Node0x598dbd0;
	Node0x598db40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%149:\l149:                                              \l  %150 = getelementptr inbounds float, float addrspace(1)* %1, i64 %143\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %152 = fadd contract float %151, %140\l  %153 = add nsw i32 %141, 1\l  br label %154\l}"];
	Node0x598db40 -> Node0x598dbd0;
	Node0x598dbd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%154:\l154:                                              \l  %155 = phi float [ %152, %149 ], [ %140, %139 ]\l  %156 = phi i32 [ %153, %149 ], [ %141, %139 ]\l  %157 = or i32 %49, 7\l  %158 = zext i32 %157 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %0, i64 %158\l  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %161 = fsub contract float %160, %4\l  %162 = tail call float @llvm.fabs.f32(float %161)\l  %163 = fcmp contract olt float %162, %3\l  br i1 %163, label %164, label %169\l|{<s0>T|<s1>F}}"];
	Node0x598dbd0:s0 -> Node0x598e530;
	Node0x598dbd0:s1 -> Node0x59851f0;
	Node0x598e530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%164:\l164:                                              \l  %165 = getelementptr inbounds float, float addrspace(1)* %1, i64 %158\l  %166 = load float, float addrspace(1)* %165, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %167 = fadd contract float %166, %155\l  %168 = add nsw i32 %156, 1\l  br label %169\l}"];
	Node0x598e530 -> Node0x59851f0;
	Node0x59851f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%169:\l169:                                              \l  %170 = phi float [ %167, %164 ], [ %155, %154 ]\l  %171 = phi i32 [ %168, %164 ], [ %156, %154 ]\l  %172 = add nuw nsw i32 %49, 8\l  %173 = add i32 %52, 8\l  %174 = icmp eq i32 %173, %13\l  br i1 %174, label %14, label %48, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x59851f0:s0 -> Node0x5984a90;
	Node0x59851f0:s1 -> Node0x5984ce0;
}
