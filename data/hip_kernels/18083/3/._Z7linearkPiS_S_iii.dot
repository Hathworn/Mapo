digraph "CFG for '_Z7linearkPiS_S_iii' function" {
	label="CFG for '_Z7linearkPiS_S_iii' function";

	Node0x49f1a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 16\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 8, !tbaa !4\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 2, !range !13, !invariant.load\l... !14\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %23 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %24 = bitcast i8 addrspace(4)* %23 to i32 addrspace(4)*\l  %25 = load i32, i32 addrspace(4)* %24, align 4, !tbaa !15\l  %26 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 4, !range !13, !invariant.load\l... !14\l  %29 = zext i16 %28 to i32\l  %30 = udiv i32 %25, %29\l  %31 = mul i32 %30, %29\l  %32 = icmp ugt i32 %25, %31\l  %33 = zext i1 %32 to i32\l  %34 = add i32 %30, %33\l  %35 = mul i32 %34, %22\l  %36 = add i32 %35, %7\l  %37 = mul i32 %36, %20\l  %38 = add i32 %37, %21\l  %39 = mul i32 %38, %29\l  %40 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %41 = add i32 %39, %40\l  %42 = mul nsw i32 %5, %4\l  %43 = freeze i32 %41\l  %44 = freeze i32 %42\l  %45 = udiv i32 %43, %44\l  %46 = mul i32 %45, %44\l  %47 = sub i32 %43, %46\l  %48 = freeze i32 %5\l  %49 = udiv i32 %47, %48\l  %50 = mul i32 %49, %48\l  %51 = sub i32 %47, %50\l  %52 = mul nsw i32 %45, %5\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %53\l  %55 = sext i32 %51 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %54, i64 %55\l  %57 = load i32, i32 addrspace(1)* %56, align 4, !tbaa !17, !amdgpu.noclobber\l... !14\l  %58 = mul nsw i32 %49, %5\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %59\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %60, i64 %55\l  %62 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !17, !amdgpu.noclobber\l... !14\l  %63 = mul nsw i32 %62, %57\l  %64 = mul nsw i32 %45, %4\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %65\l  %67 = sext i32 %49 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %66, i64 %67\l  %69 = atomicrmw add i32 addrspace(1)* %68, i32 %63 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  ret void\l}"];
}
