digraph "CFG for '_Z4convP5_fmapPiS1_iiS0_iiS1_ii' function" {
	label="CFG for '_Z4convP5_fmapPiS1_iiS0_iiS1_ii' function";

	Node0x54e4f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 16\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 8, !tbaa !4\l  %17 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !13, !invariant.load\l... !14\l  %20 = zext i16 %19 to i32\l  %21 = udiv i32 %16, %20\l  %22 = mul i32 %21, %20\l  %23 = icmp ugt i32 %16, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %27 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %28 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %29 = bitcast i8 addrspace(4)* %28 to i32 addrspace(4)*\l  %30 = load i32, i32 addrspace(4)* %29, align 4, !tbaa !15\l  %31 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %32 = bitcast i8 addrspace(4)* %31 to i16 addrspace(4)*\l  %33 = load i16, i16 addrspace(4)* %32, align 4, !range !13, !invariant.load\l... !14\l  %34 = zext i16 %33 to i32\l  %35 = udiv i32 %30, %34\l  %36 = mul i32 %35, %34\l  %37 = icmp ugt i32 %30, %36\l  %38 = zext i1 %37 to i32\l  %39 = add i32 %35, %38\l  %40 = mul i32 %39, %27\l  %41 = add i32 %40, %12\l  %42 = mul i32 %41, %25\l  %43 = add i32 %42, %26\l  %44 = mul i32 %43, %34\l  %45 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %46 = add i32 %44, %45\l  %47 = getelementptr inbounds %struct._fmap, %struct._fmap addrspace(1)* %0,\l... i64 0, i32 2\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !17, !amdgpu.noclobber\l... !14\l  %49 = getelementptr inbounds %struct._fmap, %struct._fmap addrspace(1)* %0,\l... i64 0, i32 3\l  %50 = load i32, i32 addrspace(1)* %49, align 8, !tbaa !23, !amdgpu.noclobber\l... !14\l  %51 = getelementptr inbounds %struct._fmap, %struct._fmap addrspace(1)* %0,\l... i64 0, i32 4\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !24, !amdgpu.noclobber\l... !14\l  %53 = getelementptr inbounds %struct._fmap, %struct._fmap addrspace(1)* %5,\l... i64 0, i32 2\l  %54 = load i32, i32 addrspace(1)* %53, align 4, !tbaa !17, !amdgpu.noclobber\l... !14\l  %55 = getelementptr inbounds %struct._fmap, %struct._fmap addrspace(1)* %5,\l... i64 0, i32 3\l  %56 = load i32, i32 addrspace(1)* %55, align 8, !tbaa !23, !amdgpu.noclobber\l... !14\l  %57 = getelementptr inbounds %struct._fmap, %struct._fmap addrspace(1)* %5,\l... i64 0, i32 4\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !24, !amdgpu.noclobber\l... !14\l  %59 = shl nsw i32 %10, 1\l  %60 = add nsw i32 %50, %59\l  %61 = shl nsw i32 %9, 1\l  %62 = add nsw i32 %52, %61\l  %63 = mul i32 %4, %3\l  %64 = mul i32 %63, %48\l  %65 = mul i32 %64, %54\l  %66 = mul i32 %65, %56\l  %67 = mul i32 %66, %58\l  %68 = freeze i32 %46\l  %69 = freeze i32 %67\l  %70 = udiv i32 %68, %69\l  %71 = mul i32 %70, %69\l  %72 = sub i32 %68, %71\l  %73 = mul i32 %64, %56\l  %74 = mul i32 %73, %58\l  %75 = freeze i32 %74\l  %76 = udiv i32 %72, %75\l  %77 = mul i32 %76, %75\l  %78 = sub i32 %72, %77\l  %79 = mul i32 %64, %58\l  %80 = freeze i32 %78\l  %81 = freeze i32 %79\l  %82 = udiv i32 %80, %81\l  %83 = mul i32 %82, %81\l  %84 = sub i32 %80, %83\l  %85 = freeze i32 %64\l  %86 = udiv i32 %84, %85\l  %87 = mul i32 %86, %85\l  %88 = sub i32 %84, %87\l  %89 = freeze i32 %88\l  %90 = freeze i32 %63\l  %91 = udiv i32 %89, %90\l  %92 = mul i32 %91, %90\l  %93 = sub i32 %89, %92\l  %94 = freeze i32 %4\l  %95 = udiv i32 %93, %94\l  %96 = mul i32 %95, %94\l  %97 = sub i32 %93, %96\l  %98 = mul i32 %62, %60\l  %99 = mul i32 %98, %48\l  %100 = mul i32 %99, %70\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %101\l  %103 = mul i32 %98, %91\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %102, i64 %104\l  %106 = mul nsw i32 %82, %7\l  %107 = add nsw i32 %95, %106\l  %108 = mul nsw i32 %107, %62\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds i32, i32 addrspace(1)* %105, i64 %109\l  %111 = mul nsw i32 %86, %6\l  %112 = add nsw i32 %97, %111\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds i32, i32 addrspace(1)* %110, i64 %113\l  %115 = load i32, i32 addrspace(1)* %114, align 4, !tbaa !25,\l... !amdgpu.noclobber !14\l  %116 = mul i32 %64, %76\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %117\l  %119 = mul i32 %63, %91\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds i32, i32 addrspace(1)* %118, i64 %120\l  %122 = mul nsw i32 %95, %4\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds i32, i32 addrspace(1)* %121, i64 %123\l  %125 = sext i32 %97 to i64\l  %126 = getelementptr inbounds i32, i32 addrspace(1)* %124, i64 %125\l  %127 = load i32, i32 addrspace(1)* %126, align 4, !tbaa !25,\l... !amdgpu.noclobber !14\l  %128 = mul nsw i32 %127, %115\l  %129 = mul i32 %58, %56\l  %130 = mul i32 %129, %54\l  %131 = mul i32 %130, %70\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %132\l  %134 = mul i32 %129, %76\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds i32, i32 addrspace(1)* %133, i64 %135\l  %137 = mul nsw i32 %82, %58\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds i32, i32 addrspace(1)* %136, i64 %138\l  %140 = sext i32 %86 to i64\l  %141 = getelementptr inbounds i32, i32 addrspace(1)* %139, i64 %140\l  %142 = atomicrmw add i32 addrspace(1)* %141, i32 %128\l... syncscope(\"agent-one-as\") monotonic, align 4\l  ret void\l}"];
}
