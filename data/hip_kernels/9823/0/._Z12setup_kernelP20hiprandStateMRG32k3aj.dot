digraph "CFG for '_Z12setup_kernelP20hiprandStateMRG32k3aj' function" {
	label="CFG for '_Z12setup_kernelP20hiprandStateMRG32k3aj' function";

	Node0x4ecbb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = shl i32 %4, 8\l  %6 = add i32 %5, %3\l  %7 = sext i32 %6 to i64\l  %8 = icmp eq i32 %1, 0\l  %9 = select i1 %8, i32 12345, i32 %1\l  %10 = zext i32 %9 to i64\l  %11 = xor i32 %9, 1431655765\l  %12 = lshr i32 %11, 17\l  %13 = zext i32 %12 to i64\l  %14 = zext i32 %11 to i64\l  %15 = shl nuw nsw i64 %13, 17\l  %16 = sub nsw i64 %14, %15\l  %17 = mul nuw nsw i64 %13, %10\l  %18 = lshr i64 %17, 32\l  %19 = trunc i64 %18 to i32\l  %20 = and i64 %17, 4294967295\l  %21 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %19, i64 %20) #2, !srcloc !5\l  %22 = extractvalue \{ i64, i64 \} %21, 0\l  %23 = icmp ugt i64 %22, 4294967086\l  %24 = shl i64 %22, 17\l  %25 = add i64 %24, -562949926027264\l  %26 = select i1 %23, i64 %25, i64 %24\l  %27 = mul i64 %16, %10\l  %28 = lshr i64 %27, 32\l  %29 = trunc i64 %28 to i32\l  %30 = and i64 %27, 4294967295\l  %31 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %29, i64 %30) #2, !srcloc !5\l  %32 = extractvalue \{ i64, i64 \} %31, 0\l  %33 = icmp ugt i64 %32, 4294967086\l  %34 = add i64 %32, -4294967087\l  %35 = select i1 %33, i64 %34, i64 %32\l  %36 = add nsw i64 %26, %35\l  %37 = lshr i64 %36, 32\l  %38 = trunc i64 %37 to i32\l  %39 = and i64 %36, 4294967295\l  %40 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %38, i64 %39) #2, !srcloc !5\l  %41 = extractvalue \{ i64, i64 \} %40, 0\l  %42 = icmp ugt i64 %41, 4294967086\l  %43 = add i64 %41, -4294967087\l  %44 = select i1 %42, i64 %43, i64 %41\l  %45 = icmp slt i64 %44, 0\l  %46 = add nuw nsw i64 %44, 4294967087\l  %47 = select i1 %45, i64 %46, i64 %44\l  %48 = trunc i64 %47 to i32\l  %49 = mul nuw nsw i64 %10, 21845\l  %50 = lshr i64 %49, 32\l  %51 = trunc i64 %50 to i32\l  %52 = and i64 %49, 4294967295\l  %53 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %51, i64 %52) #2, !srcloc !5\l  %54 = extractvalue \{ i64, i64 \} %53, 0\l  %55 = icmp ugt i64 %54, 4294967086\l  %56 = shl i64 %54, 17\l  %57 = add i64 %56, -562949926027264\l  %58 = select i1 %55, i64 %57, i64 %56\l  %59 = mul nuw nsw i64 %10, 43690\l  %60 = lshr i64 %59, 32\l  %61 = trunc i64 %60 to i32\l  %62 = and i64 %59, 4294967294\l  %63 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %61, i64 %62) #2, !srcloc !5\l  %64 = extractvalue \{ i64, i64 \} %63, 0\l  %65 = icmp ugt i64 %64, 4294967086\l  %66 = add i64 %64, -4294967087\l  %67 = select i1 %65, i64 %66, i64 %64\l  %68 = add nsw i64 %58, %67\l  %69 = lshr i64 %68, 32\l  %70 = trunc i64 %69 to i32\l  %71 = and i64 %68, 4294967295\l  %72 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %70, i64 %71) #2, !srcloc !5\l  %73 = extractvalue \{ i64, i64 \} %72, 0\l  %74 = icmp ugt i64 %73, 4294967086\l  %75 = add i64 %73, -4294967087\l  %76 = select i1 %74, i64 %75, i64 %73\l  %77 = icmp slt i64 %76, 0\l  %78 = add nuw nsw i64 %76, 4294967087\l  %79 = select i1 %77, i64 %78, i64 %76\l  %80 = trunc i64 %79 to i32\l  %81 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %19, i64 %20) #2, !srcloc !5\l  %82 = extractvalue \{ i64, i64 \} %81, 0\l  %83 = icmp ugt i64 %82, 4294967086\l  %84 = shl i64 %82, 17\l  %85 = add i64 %84, -562949926027264\l  %86 = select i1 %83, i64 %85, i64 %84\l  %87 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %29, i64 %30) #2, !srcloc !5\l  %88 = extractvalue \{ i64, i64 \} %87, 0\l  %89 = icmp ugt i64 %88, 4294967086\l  %90 = add i64 %88, -4294967087\l  %91 = select i1 %89, i64 %90, i64 %88\l  %92 = add nsw i64 %86, %91\l  %93 = lshr i64 %92, 32\l  %94 = trunc i64 %93 to i32\l  %95 = and i64 %92, 4294967295\l  %96 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %94, i64 %95) #2, !srcloc !5\l  %97 = extractvalue \{ i64, i64 \} %96, 0\l  %98 = icmp ugt i64 %97, 4294967086\l  %99 = add i64 %97, -4294967087\l  %100 = select i1 %98, i64 %99, i64 %97\l  %101 = icmp slt i64 %100, 0\l  %102 = add nuw nsw i64 %100, 4294967087\l  %103 = select i1 %101, i64 %102, i64 %100\l  %104 = trunc i64 %103 to i32\l  %105 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %51, i64 %52) #2, !srcloc !5\l  %106 = extractvalue \{ i64, i64 \} %105, 0\l  %107 = lshr i64 %106, 32\l  %108 = trunc i64 %107 to i32\l  %109 = and i64 %106, 4294967295\l  %110 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %108, i64 %109) #2, !srcloc !5\l  %111 = extractvalue \{ i64, i64 \} %110, 0\l  %112 = icmp ugt i64 %111, 4294944442\l  %113 = shl i64 %111, 17\l  %114 = add i64 %113, -562946958032896\l  %115 = select i1 %112, i64 %114, i64 %113\l  %116 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %61, i64 %62) #2, !srcloc !5\l  %117 = extractvalue \{ i64, i64 \} %116, 0\l  %118 = lshr i64 %117, 32\l  %119 = trunc i64 %118 to i32\l  %120 = and i64 %117, 4294967295\l  %121 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %119, i64 %120) #2, !srcloc !5\l  %122 = extractvalue \{ i64, i64 \} %121, 0\l  %123 = icmp ugt i64 %122, 4294944442\l  %124 = add i64 %122, -4294944443\l  %125 = select i1 %123, i64 %124, i64 %122\l  %126 = add nsw i64 %125, %115\l  %127 = lshr i64 %126, 32\l  %128 = trunc i64 %127 to i32\l  %129 = and i64 %126, 4294967295\l  %130 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %128, i64 %129) #2, !srcloc !5\l  %131 = extractvalue \{ i64, i64 \} %130, 0\l  %132 = lshr i64 %131, 32\l  %133 = trunc i64 %132 to i32\l  %134 = and i64 %131, 4294967295\l  %135 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %133, i64 %134) #2, !srcloc !5\l  %136 = extractvalue \{ i64, i64 \} %135, 0\l  %137 = icmp ugt i64 %136, 4294944442\l  %138 = add i64 %136, -4294944443\l  %139 = select i1 %137, i64 %138, i64 %136\l  %140 = icmp slt i64 %139, 0\l  %141 = add nuw nsw i64 %139, 4294944443\l  %142 = select i1 %140, i64 %141, i64 %139\l  %143 = trunc i64 %142 to i32\l  %144 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %19, i64 %20) #2, !srcloc !5\l  %145 = extractvalue \{ i64, i64 \} %144, 0\l  %146 = lshr i64 %145, 32\l  %147 = trunc i64 %146 to i32\l  %148 = and i64 %145, 4294967295\l  %149 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %147, i64 %148) #2, !srcloc !5\l  %150 = extractvalue \{ i64, i64 \} %149, 0\l  %151 = icmp ugt i64 %150, 4294944442\l  %152 = shl i64 %150, 17\l  %153 = add i64 %152, -562946958032896\l  %154 = select i1 %151, i64 %153, i64 %152\l  %155 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %29, i64 %30) #2, !srcloc !5\l  %156 = extractvalue \{ i64, i64 \} %155, 0\l  %157 = lshr i64 %156, 32\l  %158 = trunc i64 %157 to i32\l  %159 = and i64 %156, 4294967295\l  %160 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %158, i64 %159) #2, !srcloc !5\l  %161 = extractvalue \{ i64, i64 \} %160, 0\l  %162 = icmp ugt i64 %161, 4294944442\l  %163 = add i64 %161, -4294944443\l  %164 = select i1 %162, i64 %163, i64 %161\l  %165 = add nsw i64 %164, %154\l  %166 = lshr i64 %165, 32\l  %167 = trunc i64 %166 to i32\l  %168 = and i64 %165, 4294967295\l  %169 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %167, i64 %168) #2, !srcloc !5\l  %170 = extractvalue \{ i64, i64 \} %169, 0\l  %171 = lshr i64 %170, 32\l  %172 = trunc i64 %171 to i32\l  %173 = and i64 %170, 4294967295\l  %174 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %172, i64 %173) #2, !srcloc !5\l  %175 = extractvalue \{ i64, i64 \} %174, 0\l  %176 = icmp ugt i64 %175, 4294944442\l  %177 = add i64 %175, -4294944443\l  %178 = select i1 %176, i64 %177, i64 %175\l  %179 = icmp slt i64 %178, 0\l  %180 = add nuw nsw i64 %178, 4294944443\l  %181 = select i1 %179, i64 %180, i64 %178\l  %182 = trunc i64 %181 to i32\l  %183 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %51, i64 %52) #2, !srcloc !5\l  %184 = extractvalue \{ i64, i64 \} %183, 0\l  %185 = lshr i64 %184, 32\l  %186 = trunc i64 %185 to i32\l  %187 = and i64 %184, 4294967295\l  %188 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %186, i64 %187) #2, !srcloc !5\l  %189 = extractvalue \{ i64, i64 \} %188, 0\l  %190 = icmp ugt i64 %189, 4294944442\l  %191 = shl i64 %189, 17\l  %192 = add i64 %191, -562946958032896\l  %193 = select i1 %190, i64 %192, i64 %191\l  %194 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %61, i64 %62) #2, !srcloc !5\l  %195 = extractvalue \{ i64, i64 \} %194, 0\l  %196 = lshr i64 %195, 32\l  %197 = trunc i64 %196 to i32\l  %198 = and i64 %195, 4294967295\l  %199 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %197, i64 %198) #2, !srcloc !5\l  %200 = extractvalue \{ i64, i64 \} %199, 0\l  %201 = icmp ugt i64 %200, 4294944442\l  %202 = add i64 %200, -4294944443\l  %203 = select i1 %201, i64 %202, i64 %200\l  %204 = add nsw i64 %203, %193\l  %205 = lshr i64 %204, 32\l  %206 = trunc i64 %205 to i32\l  %207 = and i64 %204, 4294967295\l  %208 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %206, i64 %207) #2, !srcloc !5\l  %209 = extractvalue \{ i64, i64 \} %208, 0\l  %210 = lshr i64 %209, 32\l  %211 = trunc i64 %210 to i32\l  %212 = and i64 %209, 4294967295\l  %213 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %211, i64 %212) #2, !srcloc !5\l  %214 = extractvalue \{ i64, i64 \} %213, 0\l  %215 = icmp ugt i64 %214, 4294944442\l  %216 = add i64 %214, -4294944443\l  %217 = select i1 %215, i64 %216, i64 %214\l  %218 = icmp slt i64 %217, 0\l  %219 = add nuw nsw i64 %217, 4294944443\l  %220 = select i1 %218, i64 %219, i64 %217\l  %221 = trunc i64 %220 to i32\l  %222 = icmp eq i32 %6, 0\l  br i1 %222, label %576, label %223\l|{<s0>T|<s1>F}}"];
	Node0x4ecbb20:s0 -> Node0x4ecd5f0;
	Node0x4ecbb20:s1 -> Node0x4ee3320;
	Node0x4ee3320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%223:\l223:                                              \l  %224 = phi i32 [ %567, %566 ], [ %221, %2 ]\l  %225 = phi i32 [ %568, %566 ], [ %182, %2 ]\l  %226 = phi i32 [ %569, %566 ], [ %143, %2 ]\l  %227 = phi i32 [ %570, %566 ], [ %104, %2 ]\l  %228 = phi i32 [ %571, %566 ], [ %80, %2 ]\l  %229 = phi i32 [ %572, %566 ], [ %48, %2 ]\l  %230 = phi i32 [ %574, %566 ], [ 0, %2 ]\l  %231 = phi i64 [ %573, %566 ], [ %7, %2 ]\l  %232 = and i64 %231, 1\l  %233 = icmp eq i64 %232, 0\l  br i1 %233, label %566, label %234\l|{<s0>T|<s1>F}}"];
	Node0x4ee3320:s0 -> Node0x4ee3460;
	Node0x4ee3320:s1 -> Node0x4ee3ed0;
	Node0x4ee3ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%234:\l234:                                              \l  %235 = zext i32 %230 to i64\l  %236 = getelementptr inbounds [576 x i64], [576 x i64] addrspace(4)*\l... @_ZL7d_A1P76, i64 0, i64 %235\l  %237 = load i64, i64 addrspace(4)* %236, align 8, !tbaa !6\l  %238 = zext i32 %229 to i64\l  %239 = mul i64 %237, %238\l  %240 = lshr i64 %239, 32\l  %241 = trunc i64 %240 to i32\l  %242 = and i64 %239, 4294967295\l  %243 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %241, i64 %242) #2, !srcloc !5\l  %244 = extractvalue \{ i64, i64 \} %243, 0\l  %245 = icmp ugt i64 %244, 4294967086\l  %246 = add i64 %244, -4294967087\l  %247 = select i1 %245, i64 %246, i64 %244\l  %248 = getelementptr inbounds i64, i64 addrspace(4)* %236, i64 1\l  %249 = load i64, i64 addrspace(4)* %248, align 8, !tbaa !6\l  %250 = zext i32 %228 to i64\l  %251 = mul i64 %249, %250\l  %252 = lshr i64 %251, 32\l  %253 = trunc i64 %252 to i32\l  %254 = and i64 %251, 4294967295\l  %255 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %253, i64 %254) #2, !srcloc !5\l  %256 = extractvalue \{ i64, i64 \} %255, 0\l  %257 = icmp ugt i64 %256, 4294967086\l  %258 = add i64 %256, -4294967087\l  %259 = select i1 %257, i64 %258, i64 %256\l  %260 = add i64 %259, %247\l  %261 = getelementptr inbounds i64, i64 addrspace(4)* %236, i64 2\l  %262 = load i64, i64 addrspace(4)* %261, align 8, !tbaa !6\l  %263 = zext i32 %227 to i64\l  %264 = mul i64 %262, %263\l  %265 = lshr i64 %264, 32\l  %266 = trunc i64 %265 to i32\l  %267 = and i64 %264, 4294967295\l  %268 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %266, i64 %267) #2, !srcloc !5\l  %269 = extractvalue \{ i64, i64 \} %268, 0\l  %270 = icmp ugt i64 %269, 4294967086\l  %271 = add i64 %269, -4294967087\l  %272 = select i1 %270, i64 %271, i64 %269\l  %273 = add i64 %260, %272\l  %274 = lshr i64 %273, 32\l  %275 = trunc i64 %274 to i32\l  %276 = and i64 %273, 4294967295\l  %277 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %275, i64 %276) #2, !srcloc !5\l  %278 = extractvalue \{ i64, i64 \} %277, 0\l  %279 = icmp ugt i64 %278, 4294967086\l  %280 = add i64 %278, 209\l  %281 = select i1 %279, i64 %280, i64 %278\l  %282 = getelementptr inbounds i64, i64 addrspace(4)* %236, i64 3\l  %283 = load i64, i64 addrspace(4)* %282, align 8, !tbaa !6\l  %284 = mul i64 %283, %238\l  %285 = lshr i64 %284, 32\l  %286 = trunc i64 %285 to i32\l  %287 = and i64 %284, 4294967295\l  %288 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %286, i64 %287) #2, !srcloc !5\l  %289 = extractvalue \{ i64, i64 \} %288, 0\l  %290 = icmp ugt i64 %289, 4294967086\l  %291 = add i64 %289, -4294967087\l  %292 = select i1 %290, i64 %291, i64 %289\l  %293 = getelementptr inbounds i64, i64 addrspace(4)* %236, i64 4\l  %294 = load i64, i64 addrspace(4)* %293, align 8, !tbaa !6\l  %295 = mul i64 %294, %250\l  %296 = lshr i64 %295, 32\l  %297 = trunc i64 %296 to i32\l  %298 = and i64 %295, 4294967295\l  %299 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %297, i64 %298) #2, !srcloc !5\l  %300 = extractvalue \{ i64, i64 \} %299, 0\l  %301 = icmp ugt i64 %300, 4294967086\l  %302 = add i64 %300, -4294967087\l  %303 = select i1 %301, i64 %302, i64 %300\l  %304 = add i64 %303, %292\l  %305 = getelementptr inbounds i64, i64 addrspace(4)* %236, i64 5\l  %306 = load i64, i64 addrspace(4)* %305, align 8, !tbaa !6\l  %307 = mul i64 %306, %263\l  %308 = lshr i64 %307, 32\l  %309 = trunc i64 %308 to i32\l  %310 = and i64 %307, 4294967295\l  %311 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %309, i64 %310) #2, !srcloc !5\l  %312 = extractvalue \{ i64, i64 \} %311, 0\l  %313 = icmp ugt i64 %312, 4294967086\l  %314 = add i64 %312, -4294967087\l  %315 = select i1 %313, i64 %314, i64 %312\l  %316 = add i64 %304, %315\l  %317 = lshr i64 %316, 32\l  %318 = trunc i64 %317 to i32\l  %319 = and i64 %316, 4294967295\l  %320 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %318, i64 %319) #2, !srcloc !5\l  %321 = extractvalue \{ i64, i64 \} %320, 0\l  %322 = icmp ugt i64 %321, 4294967086\l  %323 = add i64 %321, 209\l  %324 = select i1 %322, i64 %323, i64 %321\l  %325 = getelementptr inbounds i64, i64 addrspace(4)* %236, i64 6\l  %326 = load i64, i64 addrspace(4)* %325, align 8, !tbaa !6\l  %327 = mul i64 %326, %238\l  %328 = lshr i64 %327, 32\l  %329 = trunc i64 %328 to i32\l  %330 = and i64 %327, 4294967295\l  %331 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %329, i64 %330) #2, !srcloc !5\l  %332 = extractvalue \{ i64, i64 \} %331, 0\l  %333 = icmp ugt i64 %332, 4294967086\l  %334 = add i64 %332, -4294967087\l  %335 = select i1 %333, i64 %334, i64 %332\l  %336 = getelementptr inbounds i64, i64 addrspace(4)* %236, i64 7\l  %337 = load i64, i64 addrspace(4)* %336, align 8, !tbaa !6\l  %338 = mul i64 %337, %250\l  %339 = lshr i64 %338, 32\l  %340 = trunc i64 %339 to i32\l  %341 = and i64 %338, 4294967295\l  %342 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %340, i64 %341) #2, !srcloc !5\l  %343 = extractvalue \{ i64, i64 \} %342, 0\l  %344 = icmp ugt i64 %343, 4294967086\l  %345 = add i64 %343, -4294967087\l  %346 = select i1 %344, i64 %345, i64 %343\l  %347 = add i64 %346, %335\l  %348 = getelementptr inbounds i64, i64 addrspace(4)* %236, i64 8\l  %349 = load i64, i64 addrspace(4)* %348, align 8, !tbaa !6\l  %350 = mul i64 %349, %263\l  %351 = lshr i64 %350, 32\l  %352 = trunc i64 %351 to i32\l  %353 = and i64 %350, 4294967295\l  %354 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %352, i64 %353) #2, !srcloc !5\l  %355 = extractvalue \{ i64, i64 \} %354, 0\l  %356 = icmp ugt i64 %355, 4294967086\l  %357 = add i64 %355, -4294967087\l  %358 = select i1 %356, i64 %357, i64 %355\l  %359 = add i64 %347, %358\l  %360 = lshr i64 %359, 32\l  %361 = trunc i64 %360 to i32\l  %362 = and i64 %359, 4294967295\l  %363 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %361, i64 %362) #2, !srcloc !5\l  %364 = extractvalue \{ i64, i64 \} %363, 0\l  %365 = icmp ugt i64 %364, 4294967086\l  %366 = add i64 %364, 209\l  %367 = select i1 %365, i64 %366, i64 %364\l  %368 = trunc i64 %281 to i32\l  %369 = trunc i64 %324 to i32\l  %370 = trunc i64 %367 to i32\l  %371 = getelementptr inbounds [576 x i64], [576 x i64] addrspace(4)*\l... @_ZL7d_A2P76, i64 0, i64 %235\l  %372 = load i64, i64 addrspace(4)* %371, align 8, !tbaa !6\l  %373 = zext i32 %226 to i64\l  %374 = mul i64 %372, %373\l  %375 = lshr i64 %374, 32\l  %376 = trunc i64 %375 to i32\l  %377 = and i64 %374, 4294967295\l  %378 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %376, i64 %377) #2, !srcloc !5\l  %379 = extractvalue \{ i64, i64 \} %378, 0\l  %380 = lshr i64 %379, 32\l  %381 = trunc i64 %380 to i32\l  %382 = and i64 %379, 4294967295\l  %383 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %381, i64 %382) #2, !srcloc !5\l  %384 = extractvalue \{ i64, i64 \} %383, 0\l  %385 = icmp ugt i64 %384, 4294944442\l  %386 = add i64 %384, -4294944443\l  %387 = select i1 %385, i64 %386, i64 %384\l  %388 = getelementptr inbounds i64, i64 addrspace(4)* %371, i64 1\l  %389 = load i64, i64 addrspace(4)* %388, align 8, !tbaa !6\l  %390 = zext i32 %225 to i64\l  %391 = mul i64 %389, %390\l  %392 = lshr i64 %391, 32\l  %393 = trunc i64 %392 to i32\l  %394 = and i64 %391, 4294967295\l  %395 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %393, i64 %394) #2, !srcloc !5\l  %396 = extractvalue \{ i64, i64 \} %395, 0\l  %397 = lshr i64 %396, 32\l  %398 = trunc i64 %397 to i32\l  %399 = and i64 %396, 4294967295\l  %400 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %398, i64 %399) #2, !srcloc !5\l  %401 = extractvalue \{ i64, i64 \} %400, 0\l  %402 = icmp ugt i64 %401, 4294944442\l  %403 = add i64 %401, -4294944443\l  %404 = select i1 %402, i64 %403, i64 %401\l  %405 = add i64 %404, %387\l  %406 = getelementptr inbounds i64, i64 addrspace(4)* %371, i64 2\l  %407 = load i64, i64 addrspace(4)* %406, align 8, !tbaa !6\l  %408 = zext i32 %224 to i64\l  %409 = mul i64 %407, %408\l  %410 = lshr i64 %409, 32\l  %411 = trunc i64 %410 to i32\l  %412 = and i64 %409, 4294967295\l  %413 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %411, i64 %412) #2, !srcloc !5\l  %414 = extractvalue \{ i64, i64 \} %413, 0\l  %415 = lshr i64 %414, 32\l  %416 = trunc i64 %415 to i32\l  %417 = and i64 %414, 4294967295\l  %418 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %416, i64 %417) #2, !srcloc !5\l  %419 = extractvalue \{ i64, i64 \} %418, 0\l  %420 = icmp ugt i64 %419, 4294944442\l  %421 = add i64 %419, -4294944443\l  %422 = select i1 %420, i64 %421, i64 %419\l  %423 = add i64 %405, %422\l  %424 = lshr i64 %423, 32\l  %425 = trunc i64 %424 to i32\l  %426 = and i64 %423, 4294967295\l  %427 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %425, i64 %426) #2, !srcloc !5\l  %428 = extractvalue \{ i64, i64 \} %427, 0\l  %429 = lshr i64 %428, 32\l  %430 = trunc i64 %429 to i32\l  %431 = and i64 %428, 4294967295\l  %432 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %430, i64 %431) #2, !srcloc !5\l  %433 = extractvalue \{ i64, i64 \} %432, 0\l  %434 = icmp ugt i64 %433, 4294944442\l  %435 = add i64 %433, 22853\l  %436 = select i1 %434, i64 %435, i64 %433\l  %437 = getelementptr inbounds i64, i64 addrspace(4)* %371, i64 3\l  %438 = load i64, i64 addrspace(4)* %437, align 8, !tbaa !6\l  %439 = mul i64 %438, %373\l  %440 = lshr i64 %439, 32\l  %441 = trunc i64 %440 to i32\l  %442 = and i64 %439, 4294967295\l  %443 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %441, i64 %442) #2, !srcloc !5\l  %444 = extractvalue \{ i64, i64 \} %443, 0\l  %445 = lshr i64 %444, 32\l  %446 = trunc i64 %445 to i32\l  %447 = and i64 %444, 4294967295\l  %448 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %446, i64 %447) #2, !srcloc !5\l  %449 = extractvalue \{ i64, i64 \} %448, 0\l  %450 = icmp ugt i64 %449, 4294944442\l  %451 = add i64 %449, -4294944443\l  %452 = select i1 %450, i64 %451, i64 %449\l  %453 = getelementptr inbounds i64, i64 addrspace(4)* %371, i64 4\l  %454 = load i64, i64 addrspace(4)* %453, align 8, !tbaa !6\l  %455 = mul i64 %454, %390\l  %456 = lshr i64 %455, 32\l  %457 = trunc i64 %456 to i32\l  %458 = and i64 %455, 4294967295\l  %459 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %457, i64 %458) #2, !srcloc !5\l  %460 = extractvalue \{ i64, i64 \} %459, 0\l  %461 = lshr i64 %460, 32\l  %462 = trunc i64 %461 to i32\l  %463 = and i64 %460, 4294967295\l  %464 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %462, i64 %463) #2, !srcloc !5\l  %465 = extractvalue \{ i64, i64 \} %464, 0\l  %466 = icmp ugt i64 %465, 4294944442\l  %467 = add i64 %465, -4294944443\l  %468 = select i1 %466, i64 %467, i64 %465\l  %469 = add i64 %468, %452\l  %470 = getelementptr inbounds i64, i64 addrspace(4)* %371, i64 5\l  %471 = load i64, i64 addrspace(4)* %470, align 8, !tbaa !6\l  %472 = mul i64 %471, %408\l  %473 = lshr i64 %472, 32\l  %474 = trunc i64 %473 to i32\l  %475 = and i64 %472, 4294967295\l  %476 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %474, i64 %475) #2, !srcloc !5\l  %477 = extractvalue \{ i64, i64 \} %476, 0\l  %478 = lshr i64 %477, 32\l  %479 = trunc i64 %478 to i32\l  %480 = and i64 %477, 4294967295\l  %481 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %479, i64 %480) #2, !srcloc !5\l  %482 = extractvalue \{ i64, i64 \} %481, 0\l  %483 = icmp ugt i64 %482, 4294944442\l  %484 = add i64 %482, -4294944443\l  %485 = select i1 %483, i64 %484, i64 %482\l  %486 = add i64 %469, %485\l  %487 = lshr i64 %486, 32\l  %488 = trunc i64 %487 to i32\l  %489 = and i64 %486, 4294967295\l  %490 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %488, i64 %489) #2, !srcloc !5\l  %491 = extractvalue \{ i64, i64 \} %490, 0\l  %492 = lshr i64 %491, 32\l  %493 = trunc i64 %492 to i32\l  %494 = and i64 %491, 4294967295\l  %495 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %493, i64 %494) #2, !srcloc !5\l  %496 = extractvalue \{ i64, i64 \} %495, 0\l  %497 = icmp ugt i64 %496, 4294944442\l  %498 = add i64 %496, 22853\l  %499 = select i1 %497, i64 %498, i64 %496\l  %500 = getelementptr inbounds i64, i64 addrspace(4)* %371, i64 6\l  %501 = load i64, i64 addrspace(4)* %500, align 8, !tbaa !6\l  %502 = mul i64 %501, %373\l  %503 = lshr i64 %502, 32\l  %504 = trunc i64 %503 to i32\l  %505 = and i64 %502, 4294967295\l  %506 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %504, i64 %505) #2, !srcloc !5\l  %507 = extractvalue \{ i64, i64 \} %506, 0\l  %508 = lshr i64 %507, 32\l  %509 = trunc i64 %508 to i32\l  %510 = and i64 %507, 4294967295\l  %511 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %509, i64 %510) #2, !srcloc !5\l  %512 = extractvalue \{ i64, i64 \} %511, 0\l  %513 = icmp ugt i64 %512, 4294944442\l  %514 = add i64 %512, -4294944443\l  %515 = select i1 %513, i64 %514, i64 %512\l  %516 = getelementptr inbounds i64, i64 addrspace(4)* %371, i64 7\l  %517 = load i64, i64 addrspace(4)* %516, align 8, !tbaa !6\l  %518 = mul i64 %517, %390\l  %519 = lshr i64 %518, 32\l  %520 = trunc i64 %519 to i32\l  %521 = and i64 %518, 4294967295\l  %522 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %520, i64 %521) #2, !srcloc !5\l  %523 = extractvalue \{ i64, i64 \} %522, 0\l  %524 = lshr i64 %523, 32\l  %525 = trunc i64 %524 to i32\l  %526 = and i64 %523, 4294967295\l  %527 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %525, i64 %526) #2, !srcloc !5\l  %528 = extractvalue \{ i64, i64 \} %527, 0\l  %529 = icmp ugt i64 %528, 4294944442\l  %530 = add i64 %528, -4294944443\l  %531 = select i1 %529, i64 %530, i64 %528\l  %532 = add i64 %531, %515\l  %533 = getelementptr inbounds i64, i64 addrspace(4)* %371, i64 8\l  %534 = load i64, i64 addrspace(4)* %533, align 8, !tbaa !6\l  %535 = mul i64 %534, %408\l  %536 = lshr i64 %535, 32\l  %537 = trunc i64 %536 to i32\l  %538 = and i64 %535, 4294967295\l  %539 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %537, i64 %538) #2, !srcloc !5\l  %540 = extractvalue \{ i64, i64 \} %539, 0\l  %541 = lshr i64 %540, 32\l  %542 = trunc i64 %541 to i32\l  %543 = and i64 %540, 4294967295\l  %544 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %542, i64 %543) #2, !srcloc !5\l  %545 = extractvalue \{ i64, i64 \} %544, 0\l  %546 = icmp ugt i64 %545, 4294944442\l  %547 = add i64 %545, -4294944443\l  %548 = select i1 %546, i64 %547, i64 %545\l  %549 = add i64 %532, %548\l  %550 = lshr i64 %549, 32\l  %551 = trunc i64 %550 to i32\l  %552 = and i64 %549, 4294967295\l  %553 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %551, i64 %552) #2, !srcloc !5\l  %554 = extractvalue \{ i64, i64 \} %553, 0\l  %555 = lshr i64 %554, 32\l  %556 = trunc i64 %555 to i32\l  %557 = and i64 %554, 4294967295\l  %558 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %556, i64 %557) #2, !srcloc !5\l  %559 = extractvalue \{ i64, i64 \} %558, 0\l  %560 = icmp ugt i64 %559, 4294944442\l  %561 = add i64 %559, 22853\l  %562 = select i1 %560, i64 %561, i64 %559\l  %563 = trunc i64 %436 to i32\l  %564 = trunc i64 %499 to i32\l  %565 = trunc i64 %562 to i32\l  br label %566\l}"];
	Node0x4ee3ed0 -> Node0x4ee3460;
	Node0x4ee3460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%566:\l566:                                              \l  %567 = phi i32 [ %224, %223 ], [ %565, %234 ]\l  %568 = phi i32 [ %225, %223 ], [ %564, %234 ]\l  %569 = phi i32 [ %226, %223 ], [ %563, %234 ]\l  %570 = phi i32 [ %227, %223 ], [ %370, %234 ]\l  %571 = phi i32 [ %228, %223 ], [ %369, %234 ]\l  %572 = phi i32 [ %229, %223 ], [ %368, %234 ]\l  %573 = lshr i64 %231, 1\l  %574 = add nuw nsw i32 %230, 9\l  %575 = icmp ult i64 %231, 2\l  br i1 %575, label %576, label %223, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4ee3460:s0 -> Node0x4ecd5f0;
	Node0x4ee3460:s1 -> Node0x4ee3320;
	Node0x4ecd5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%576:\l576:                                              \l  %577 = phi i32 [ %221, %2 ], [ %567, %566 ]\l  %578 = phi i32 [ %182, %2 ], [ %568, %566 ]\l  %579 = phi i32 [ %143, %2 ], [ %569, %566 ]\l  %580 = phi i32 [ %104, %2 ], [ %570, %566 ]\l  %581 = phi i32 [ %80, %2 ], [ %571, %566 ]\l  %582 = phi i32 [ %48, %2 ], [ %572, %566 ]\l  %583 = getelementptr inbounds %struct.hiprandStateMRG32k3a,\l... %struct.hiprandStateMRG32k3a addrspace(1)* %0, i64 %7, i32 0, i32 0, i32 0,\l... i64 0\l  store i32 %582, i32 addrspace(1)* %583, align 8, !tbaa.struct !12\l  %584 = getelementptr inbounds %struct.hiprandStateMRG32k3a,\l... %struct.hiprandStateMRG32k3a addrspace(1)* %0, i64 %7, i32 0, i32 0, i32 0,\l... i64 1\l  store i32 %581, i32 addrspace(1)* %584, align 4, !tbaa.struct !20\l  %585 = getelementptr inbounds %struct.hiprandStateMRG32k3a,\l... %struct.hiprandStateMRG32k3a addrspace(1)* %0, i64 %7, i32 0, i32 0, i32 0,\l... i64 2\l  store i32 %580, i32 addrspace(1)* %585, align 8, !tbaa.struct !21\l  %586 = getelementptr inbounds %struct.hiprandStateMRG32k3a,\l... %struct.hiprandStateMRG32k3a addrspace(1)* %0, i64 %7, i32 0, i32 0, i32 1,\l... i64 0\l  store i32 %579, i32 addrspace(1)* %586, align 4, !tbaa.struct !22\l  %587 = getelementptr inbounds %struct.hiprandStateMRG32k3a,\l... %struct.hiprandStateMRG32k3a addrspace(1)* %0, i64 %7, i32 0, i32 0, i32 1,\l... i64 1\l  store i32 %578, i32 addrspace(1)* %587, align 8, !tbaa.struct !23\l  %588 = getelementptr inbounds %struct.hiprandStateMRG32k3a,\l... %struct.hiprandStateMRG32k3a addrspace(1)* %0, i64 %7, i32 0, i32 0, i32 1,\l... i64 2\l  store i32 %577, i32 addrspace(1)* %588, align 4, !tbaa.struct !24\l  %589 = getelementptr inbounds %struct.hiprandStateMRG32k3a,\l... %struct.hiprandStateMRG32k3a addrspace(1)* %0, i64 %7, i32 0, i32 0, i32 2\l  store i32 0, i32 addrspace(1)* %589, align 8, !tbaa.struct !25\l  %590 = getelementptr inbounds %struct.hiprandStateMRG32k3a,\l... %struct.hiprandStateMRG32k3a addrspace(1)* %0, i64 %7, i32 0, i32 0, i32 3\l  store i32 0, i32 addrspace(1)* %590, align 4, !tbaa.struct !26\l  ret void\l}"];
}
