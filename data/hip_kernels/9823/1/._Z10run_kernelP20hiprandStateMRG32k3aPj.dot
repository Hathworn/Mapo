digraph "CFG for '_Z10run_kernelP20hiprandStateMRG32k3aPj' function" {
	label="CFG for '_Z10run_kernelP20hiprandStateMRG32k3aPj' function";

	Node0x5c47c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%2:\l  %3 = alloca \{ i32, i32, float, double \}, align 8, addrspace(5)\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 8\l  %7 = add i32 %6, %4\l  %8 = bitcast \{ i32, i32, float, double \} addrspace(5)* %3 to i8 addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 24, i8 addrspace(5)* %8)\l  %9 = sext i32 %7 to i64\l  %10 = getelementptr inbounds %struct.hiprandStateMRG32k3a,\l... %struct.hiprandStateMRG32k3a addrspace(1)* %0, i64 %9, i32 0, i32 0, i32 0,\l... i64 0\l  %11 = load i32, i32 addrspace(1)* %10, align 8\l  %12 = getelementptr inbounds %struct.hiprandStateMRG32k3a,\l... %struct.hiprandStateMRG32k3a addrspace(1)* %0, i64 %9, i32 0, i32 0, i32 0,\l... i64 1\l  %13 = load i32, i32 addrspace(1)* %12, align 4\l  %14 = getelementptr inbounds %struct.hiprandStateMRG32k3a,\l... %struct.hiprandStateMRG32k3a addrspace(1)* %0, i64 %9, i32 0, i32 0, i32 0,\l... i64 2\l  %15 = load i32, i32 addrspace(1)* %14, align 8\l  %16 = getelementptr inbounds %struct.hiprandStateMRG32k3a,\l... %struct.hiprandStateMRG32k3a addrspace(1)* %0, i64 %9, i32 0, i32 0, i32 1,\l... i64 0\l  %17 = load i32, i32 addrspace(1)* %16, align 4\l  %18 = getelementptr inbounds %struct.hiprandStateMRG32k3a,\l... %struct.hiprandStateMRG32k3a addrspace(1)* %0, i64 %9, i32 0, i32 0, i32 1,\l... i64 1\l  %19 = load i32, i32 addrspace(1)* %18, align 8\l  %20 = getelementptr inbounds %struct.hiprandStateMRG32k3a,\l... %struct.hiprandStateMRG32k3a addrspace(1)* %0, i64 %9, i32 0, i32 0, i32 1,\l... i64 2\l  %21 = load i32, i32 addrspace(1)* %20, align 4\l  %22 = getelementptr inbounds %struct.hiprandStateMRG32k3a,\l... %struct.hiprandStateMRG32k3a addrspace(1)* %0, i64 %9, i32 0, i32 0, i32 2\l  %23 = bitcast i32 addrspace(1)* %22 to i8 addrspace(1)*\l  call void @llvm.memcpy.p5i8.p1i8.i64(i8 addrspace(5)* noundef align 8\l... dereferenceable(24) %8, i8 addrspace(1)* noundef align 8 dereferenceable(24)\l... %23, i64 24, i1 false)\l  %24 = sub i32 -209, %11\l  %25 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 810728, i32 %24, i64 0) #4, !srcloc !5\l  %26 = extractvalue \{ i64, i64 \} %25, 0\l  %27 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 1403580, i32 %13, i64 %26) #4, !srcloc !5\l  %28 = extractvalue \{ i64, i64 \} %27, 0\l  %29 = lshr i64 %28, 32\l  %30 = trunc i64 %29 to i32\l  %31 = and i64 %28, 4294967295\l  %32 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %30, i64 %31) #4, !srcloc !5\l  %33 = extractvalue \{ i64, i64 \} %32, 0\l  %34 = icmp ugt i64 %33, 4294967086\l  %35 = add i64 %33, -4294967087\l  %36 = select i1 %34, i64 %35, i64 %33\l  %37 = trunc i64 %36 to i32\l  %38 = sub i32 -22853, %17\l  %39 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 1370589, i32 %38, i64 0) #4, !srcloc !5\l  %40 = extractvalue \{ i64, i64 \} %39, 0\l  %41 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 527612, i32 %21, i64 %40) #4, !srcloc !5\l  %42 = extractvalue \{ i64, i64 \} %41, 0\l  %43 = lshr i64 %42, 32\l  %44 = trunc i64 %43 to i32\l  %45 = and i64 %42, 4294967295\l  %46 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %44, i64 %45) #4, !srcloc !5\l  %47 = extractvalue \{ i64, i64 \} %46, 0\l  %48 = lshr i64 %47, 32\l  %49 = trunc i64 %48 to i32\l  %50 = and i64 %47, 4294967295\l  %51 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %49, i64 %50) #4, !srcloc !5\l  %52 = extractvalue \{ i64, i64 \} %51, 0\l  %53 = icmp ugt i64 %52, 4294944442\l  %54 = add i64 %52, -4294944443\l  %55 = select i1 %53, i64 %54, i64 %52\l  %56 = trunc i64 %55 to i32\l  %57 = sub i64 %36, %55\l  %58 = icmp ugt i32 %37, %56\l  %59 = select i1 %58, i64 0, i64 4294967087\l  %60 = add i64 %57, %59\l  %61 = trunc i64 %60 to i32\l  %62 = add i32 %61, -1\l  %63 = uitofp i32 %62 to double\l  %64 = fmul contract double %63, 0x3FF000000D10000B\l  %65 = fptoui double %64 to i32\l  %66 = icmp eq i32 %65, 0\l  br i1 %66, label %67, label %120\l|{<s0>T|<s1>F}}"];
	Node0x5c47c80:s0 -> Node0x5c4bc30;
	Node0x5c47c80:s1 -> Node0x5c4bcc0;
	Node0x5c4bc30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi i32 [ %69, %67 ], [ %13, %2 ]\l  %69 = phi i32 [ %70, %67 ], [ %15, %2 ]\l  %70 = phi i32 [ %87, %67 ], [ %37, %2 ]\l  %71 = phi i32 [ %72, %67 ], [ %19, %2 ]\l  %72 = phi i32 [ %73, %67 ], [ %21, %2 ]\l  %73 = phi i32 [ %106, %67 ], [ %56, %2 ]\l  %74 = sub i32 -209, %68\l  %75 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 810728, i32 %74, i64 0) #4, !srcloc !5\l  %76 = extractvalue \{ i64, i64 \} %75, 0\l  %77 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 1403580, i32 %69, i64 %76) #4, !srcloc !5\l  %78 = extractvalue \{ i64, i64 \} %77, 0\l  %79 = lshr i64 %78, 32\l  %80 = trunc i64 %79 to i32\l  %81 = and i64 %78, 4294967295\l  %82 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 209, i32 %80, i64 %81) #4, !srcloc !5\l  %83 = extractvalue \{ i64, i64 \} %82, 0\l  %84 = icmp ugt i64 %83, 4294967086\l  %85 = add i64 %83, -4294967087\l  %86 = select i1 %84, i64 %85, i64 %83\l  %87 = trunc i64 %86 to i32\l  %88 = sub i32 -22853, %71\l  %89 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 1370589, i32 %88, i64 0) #4, !srcloc !5\l  %90 = extractvalue \{ i64, i64 \} %89, 0\l  %91 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 527612, i32 %73, i64 %90) #4, !srcloc !5\l  %92 = extractvalue \{ i64, i64 \} %91, 0\l  %93 = lshr i64 %92, 32\l  %94 = trunc i64 %93 to i32\l  %95 = and i64 %92, 4294967295\l  %96 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %94, i64 %95) #4, !srcloc !5\l  %97 = extractvalue \{ i64, i64 \} %96, 0\l  %98 = lshr i64 %97, 32\l  %99 = trunc i64 %98 to i32\l  %100 = and i64 %97, 4294967295\l  %101 = tail call \{ i64, i64 \} asm sideeffect \"v_mad_u64_u32 $0, $1, $2, $3,\l... $4\", \"=v,=s,r,v,v\"(i32 22853, i32 %99, i64 %100) #4, !srcloc !5\l  %102 = extractvalue \{ i64, i64 \} %101, 0\l  %103 = icmp ugt i64 %102, 4294944442\l  %104 = add i64 %102, -4294944443\l  %105 = select i1 %103, i64 %104, i64 %102\l  %106 = trunc i64 %105 to i32\l  %107 = sub i64 %86, %105\l  %108 = icmp ugt i32 %87, %106\l  %109 = select i1 %108, i64 0, i64 4294967087\l  %110 = add i64 %107, %109\l  %111 = trunc i64 %110 to i32\l  %112 = add i32 %111, -1\l  %113 = uitofp i32 %112 to double\l  %114 = fmul contract double %113, 0x3FF000000D10000B\l  %115 = fptoui double %114 to i32\l  %116 = icmp eq i32 %115, 0\l  br i1 %116, label %67, label %117, !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x5c4bc30:s0 -> Node0x5c4bc30;
	Node0x5c4bc30:s1 -> Node0x5c4e720;
	Node0x5c4e720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%117:\l117:                                              \l  %118 = trunc i64 %86 to i32\l  %119 = trunc i64 %105 to i32\l  br label %120\l}"];
	Node0x5c4e720 -> Node0x5c4bcc0;
	Node0x5c4bcc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%120:\l120:                                              \l  %121 = phi i32 [ %119, %117 ], [ %56, %2 ]\l  %122 = phi i32 [ %73, %117 ], [ %21, %2 ]\l  %123 = phi i32 [ %72, %117 ], [ %19, %2 ]\l  %124 = phi i32 [ %118, %117 ], [ %37, %2 ]\l  %125 = phi i32 [ %70, %117 ], [ %15, %2 ]\l  %126 = phi i32 [ %69, %117 ], [ %13, %2 ]\l  %127 = phi i32 [ %115, %117 ], [ %65, %2 ]\l  store i32 %126, i32 addrspace(1)* %10, align 8\l  store i32 %125, i32 addrspace(1)* %12, align 4\l  store i32 %124, i32 addrspace(1)* %14, align 8\l  store i32 %123, i32 addrspace(1)* %16, align 4\l  store i32 %122, i32 addrspace(1)* %18, align 8\l  store i32 %121, i32 addrspace(1)* %20, align 4\l  call void @llvm.memcpy.p1i8.p5i8.i64(i8 addrspace(1)* noundef align 8\l... dereferenceable(24) %23, i8 addrspace(5)* noundef align 8 dereferenceable(24)\l... %8, i64 24, i1 false)\l  %128 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %9\l  store i32 %127, i32 addrspace(1)* %128, align 4, !tbaa !8\l  call void @llvm.lifetime.end.p5i8(i64 24, i8 addrspace(5)* %8)\l  ret void\l}"];
}
