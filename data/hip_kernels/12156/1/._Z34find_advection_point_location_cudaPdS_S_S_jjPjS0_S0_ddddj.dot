digraph "CFG for '_Z34find_advection_point_location_cudaPdS_S_S_jjPjS0_S0_ddddj' function" {
	label="CFG for '_Z34find_advection_point_location_cudaPdS_S_S_jjPjS0_S0_ddddj' function";

	Node0x629dcb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%14:\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %19 = mul i32 %15, %13\l  %20 = add i32 %19, %17\l  %21 = mul i32 %16, %13\l  %22 = add i32 %21, %18\l  %23 = mul i32 %22, %4\l  %24 = add i32 %20, %23\l  %25 = zext i32 %24 to i64\l  %26 = getelementptr inbounds double, double addrspace(1)* %2, i64 %25\l  %27 = load double, double addrspace(1)* %26, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %28 = fcmp contract ule double %27, %9\l  %29 = fcmp contract uge double %27, %10\l  %30 = select i1 %28, i1 true, i1 %29\l  %31 = getelementptr inbounds double, double addrspace(1)* %3, i64 %25\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %33 = fcmp contract ule double %32, %11\l  %34 = fcmp contract uge double %32, %12\l  %35 = select i1 %33, i1 true, i1 %34\l  %36 = or i1 %30, %35\l  br i1 %36, label %62, label %37\l|{<s0>T|<s1>F}}"];
	Node0x629dcb0:s0 -> Node0x629ee10;
	Node0x629dcb0:s1 -> Node0x62a24e0;
	Node0x62a24e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%37:\l37:                                               \l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %25\l  store i32 1, i32 addrspace(1)* %38, align 4, !tbaa !10\l  br label %39\l}"];
	Node0x62a24e0 -> Node0x62a2880;
	Node0x62a2880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i32 [ 0, %37 ], [ %47, %39 ]\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %0, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %44 = fcmp contract olt double %43, %27\l  %45 = icmp ult i32 %40, %4\l  %46 = select i1 %44, i1 %45, i1 false\l  %47 = add nuw i32 %40, 1\l  br i1 %46, label %39, label %48, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x62a2880:s0 -> Node0x62a2880;
	Node0x62a2880:s1 -> Node0x62a2eb0;
	Node0x62a2eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%48:\l48:                                               \l  %49 = tail call i32 @llvm.usub.sat.i32(i32 %40, i32 1)\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %25\l  store i32 %49, i32 addrspace(1)* %50, align 4, !tbaa !10\l  br label %51\l}"];
	Node0x62a2eb0 -> Node0x62a3a50;
	Node0x62a3a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32 [ 0, %48 ], [ %59, %51 ]\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds double, double addrspace(1)* %1, i64 %53\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %56 = fcmp contract olt double %55, %32\l  %57 = icmp ult i32 %52, %5\l  %58 = select i1 %56, i1 %57, i1 false\l  %59 = add nuw i32 %52, 1\l  br i1 %58, label %51, label %60, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x62a3a50:s0 -> Node0x62a3a50;
	Node0x62a3a50:s1 -> Node0x62a4080;
	Node0x62a4080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%60:\l60:                                               \l  %61 = tail call i32 @llvm.usub.sat.i32(i32 %52, i32 1)\l  br label %108\l}"];
	Node0x62a4080 -> Node0x62a48f0;
	Node0x629ee10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%62:\l62:                                               \l  %63 = xor i1 %35, true\l  %64 = or i1 %30, %63\l  br i1 %64, label %84, label %65\l|{<s0>T|<s1>F}}"];
	Node0x629ee10:s0 -> Node0x62a20c0;
	Node0x629ee10:s1 -> Node0x62a2110;
	Node0x62a2110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%65:\l65:                                               \l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %25\l  store i32 2, i32 addrspace(1)* %66, align 4, !tbaa !10\l  br label %67\l}"];
	Node0x62a2110 -> Node0x62a4f70;
	Node0x62a4f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%67:\l67:                                               \l  %68 = phi i32 [ 0, %65 ], [ %75, %67 ]\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds double, double addrspace(1)* %0, i64 %69\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %72 = fcmp contract olt double %71, %27\l  %73 = icmp ult i32 %68, %4\l  %74 = select i1 %72, i1 %73, i1 false\l  %75 = add nuw i32 %68, 1\l  br i1 %74, label %67, label %76, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x62a4f70:s0 -> Node0x62a4f70;
	Node0x62a4f70:s1 -> Node0x62a5500;
	Node0x62a5500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%76:\l76:                                               \l  %77 = tail call i32 @llvm.usub.sat.i32(i32 %68, i32 1)\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %25\l  store i32 %77, i32 addrspace(1)* %78, align 4, !tbaa !10\l  %79 = fcmp contract ugt double %32, %11\l  br i1 %79, label %80, label %108\l|{<s0>T|<s1>F}}"];
	Node0x62a5500:s0 -> Node0x62a58d0;
	Node0x62a5500:s1 -> Node0x62a48f0;
	Node0x62a58d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%80:\l80:                                               \l  %81 = fcmp contract ult double %32, %12\l  br i1 %81, label %112, label %82\l|{<s0>T|<s1>F}}"];
	Node0x62a58d0:s0 -> Node0x62a5a60;
	Node0x62a58d0:s1 -> Node0x62a5ab0;
	Node0x62a5ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%82:\l82:                                               \l  %83 = add i32 %5, -2\l  br label %108\l}"];
	Node0x62a5ab0 -> Node0x62a48f0;
	Node0x62a20c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%84:\l84:                                               \l  %85 = xor i1 %30, true\l  %86 = or i1 %35, %85\l  br i1 %86, label %106, label %87\l|{<s0>T|<s1>F}}"];
	Node0x62a20c0:s0 -> Node0x62a5e10;
	Node0x62a20c0:s1 -> Node0x62a5e60;
	Node0x62a5e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%87:\l87:                                               \l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %25\l  store i32 3, i32 addrspace(1)* %88, align 4, !tbaa !10\l  br label %89\l}"];
	Node0x62a5e60 -> Node0x62a60c0;
	Node0x62a60c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%89:\l89:                                               \l  %90 = phi i32 [ 0, %87 ], [ %97, %89 ]\l  %91 = zext i32 %90 to i64\l  %92 = getelementptr inbounds double, double addrspace(1)* %1, i64 %91\l  %93 = load double, double addrspace(1)* %92, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %94 = fcmp contract olt double %93, %32\l  %95 = icmp ult i32 %90, %5\l  %96 = select i1 %94, i1 %95, i1 false\l  %97 = add nuw i32 %90, 1\l  br i1 %96, label %89, label %98, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x62a60c0:s0 -> Node0x62a60c0;
	Node0x62a60c0:s1 -> Node0x62a6680;
	Node0x62a6680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%98:\l98:                                               \l  %99 = tail call i32 @llvm.usub.sat.i32(i32 %90, i32 1)\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %25\l  store i32 %99, i32 addrspace(1)* %100, align 4, !tbaa !10\l  %101 = fcmp contract ugt double %27, %9\l  br i1 %101, label %102, label %108\l|{<s0>T|<s1>F}}"];
	Node0x62a6680:s0 -> Node0x62a6a50;
	Node0x62a6680:s1 -> Node0x62a48f0;
	Node0x62a6a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%102:\l102:                                              \l  %103 = fcmp contract ult double %27, %10\l  br i1 %103, label %112, label %104\l|{<s0>T|<s1>F}}"];
	Node0x62a6a50:s0 -> Node0x62a5a60;
	Node0x62a6a50:s1 -> Node0x62a6be0;
	Node0x62a6be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%104:\l104:                                              \l  %105 = add i32 %4, -2\l  br label %108\l}"];
	Node0x62a6be0 -> Node0x62a48f0;
	Node0x62a5e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%106:\l106:                                              \l  %107 = or i1 %85, %63\l  br i1 %107, label %112, label %108\l|{<s0>T|<s1>F}}"];
	Node0x62a5e10:s0 -> Node0x62a5a60;
	Node0x62a5e10:s1 -> Node0x62a48f0;
	Node0x62a48f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%108:\l108:                                              \l  %109 = phi i32 addrspace(1)* [ %7, %82 ], [ %6, %104 ], [ %7, %60 ], [ %7,\l... %76 ], [ %6, %98 ], [ %8, %106 ]\l  %110 = phi i32 [ %83, %82 ], [ %105, %104 ], [ %61, %60 ], [ 0, %76 ], [ 0,\l... %98 ], [ 4, %106 ]\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %109, i64 %25\l  store i32 %110, i32 addrspace(1)* %111, align 4, !tbaa !10\l  br label %112\l}"];
	Node0x62a48f0 -> Node0x62a5a60;
	Node0x62a5a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%112:\l112:                                              \l  ret void\l}"];
}
