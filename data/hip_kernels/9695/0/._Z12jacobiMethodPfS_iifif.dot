digraph "CFG for '_Z12jacobiMethodPfS_iifif' function" {
	label="CFG for '_Z12jacobiMethodPfS_iifif' function";

	Node0x51d55f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = shl nsw i32 %5, 1\l  %24 = add i32 %23, %15\l  %25 = add i32 %23, %21\l  %26 = mul nsw i32 %3, %2\l  %27 = mul nsw i32 %25, %24\l  %28 = icmp slt i32 %8, %24\l  br i1 %28, label %29, label %41\l|{<s0>T|<s1>F}}"];
	Node0x51d55f0:s0 -> Node0x51d90b0;
	Node0x51d55f0:s1 -> Node0x51d9140;
	Node0x51d90b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%29:\l29:                                               \l  %30 = icmp slt i32 %9, %25\l  %31 = sub i32 %22, %5\l  %32 = sub i32 %16, %5\l  %33 = shl nsw i32 %27, 1\l  br label %34\l}"];
	Node0x51d90b0 -> Node0x51d7c30;
	Node0x51d7c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%34:\l34:                                               \l  %35 = phi i32 [ %8, %29 ], [ %55, %54 ]\l  br i1 %30, label %36, label %54\l|{<s0>T|<s1>F}}"];
	Node0x51d7c30:s0 -> Node0x51d97f0;
	Node0x51d7c30:s1 -> Node0x51d96b0;
	Node0x51d97f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%36:\l36:                                               \l  %37 = mul nsw i32 %35, %24\l  %38 = add i32 %31, %35\l  %39 = mul nsw i32 %38, %2\l  %40 = add i32 %32, %39\l  br label %57\l}"];
	Node0x51d97f0 -> Node0x51d9b70;
	Node0x51d9140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%41:\l41:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %42 = icmp sgt i32 %5, 0\l  br i1 %42, label %43, label %83\l|{<s0>T|<s1>F}}"];
	Node0x51d9140:s0 -> Node0x51d9f90;
	Node0x51d9140:s1 -> Node0x51da020;
	Node0x51d9f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%43:\l43:                                               \l  %44 = icmp slt i32 %9, %25\l  %45 = shl nsw i32 %27, 1\l  %46 = add i32 %27, %25\l  %47 = add nsw i32 %24, -1\l  %48 = sub i32 %25, %27\l  %49 = xor i32 %27, -1\l  %50 = add nsw i32 %25, -1\l  %51 = sub i32 1, %27\l  %52 = fmul contract float %4, %4\l  %53 = fmul contract float %52, 2.500000e-01\l  br label %81\l}"];
	Node0x51d9f90 -> Node0x51db140;
	Node0x51d96b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%54:\l54:                                               \l  %55 = add i32 %35, %15\l  %56 = icmp slt i32 %55, %24\l  br i1 %56, label %34, label %41, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x51d96b0:s0 -> Node0x51d7c30;
	Node0x51d96b0:s1 -> Node0x51d9140;
	Node0x51d9b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%57:\l57:                                               \l  %58 = phi i32 [ %9, %36 ], [ %79, %73 ]\l  %59 = add nsw i32 %58, %37\l  %60 = add i32 %40, %58\l  %61 = icmp sgt i32 %60, -1\l  %62 = icmp slt i32 %60, %26\l  %63 = select i1 %61, i1 %62, i1 false\l  br i1 %63, label %64, label %71\l|{<s0>T|<s1>F}}"];
	Node0x51d9b70:s0 -> Node0x51db930;
	Node0x51d9b70:s1 -> Node0x51db9c0;
	Node0x51db930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%64:\l64:                                               \l  %65 = zext i32 %60 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %0, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !9,\l... !amdgpu.noclobber !6\l  %68 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sharedMem, i32 0, i32 %59\l  store float %67, float addrspace(3)* %68, align 4, !tbaa !9\l  %69 = getelementptr inbounds float, float addrspace(1)* %1, i64 %65\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !9,\l... !amdgpu.noclobber !6\l  br label %73\l}"];
	Node0x51db930 -> Node0x51db4d0;
	Node0x51db9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%71:\l71:                                               \l  %72 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sharedMem, i32 0, i32 %59\l  store float 0.000000e+00, float addrspace(3)* %72, align 4, !tbaa !9\l  br label %73\l}"];
	Node0x51db9c0 -> Node0x51db4d0;
	Node0x51db4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%73:\l73:                                               \l  %74 = phi float [ 0.000000e+00, %71 ], [ %70, %64 ]\l  %75 = add nsw i32 %59, %27\l  %76 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sharedMem, i32 0, i32 %75\l  store float %74, float addrspace(3)* %76, align 4, !tbaa !9\l  %77 = add nsw i32 %59, %33\l  %78 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sharedMem, i32 0, i32 %77\l  store float 0.000000e+00, float addrspace(3)* %78, align 4, !tbaa !9\l  %79 = add i32 %58, %21\l  %80 = icmp slt i32 %79, %25\l  br i1 %80, label %57, label %54, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x51db4d0:s0 -> Node0x51d9b70;
	Node0x51db4d0:s1 -> Node0x51d96b0;
	Node0x51db140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%81:\l81:                                               \l  %82 = phi i32 [ 0, %43 ], [ %158, %157 ]\l  br i1 %28, label %90, label %97\l|{<s0>T|<s1>F}}"];
	Node0x51db140:s0 -> Node0x51dd370;
	Node0x51db140:s1 -> Node0x51dd400;
	Node0x51da020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%83:\l83:                                               \l  br i1 %28, label %84, label %182\l|{<s0>T|<s1>F}}"];
	Node0x51da020:s0 -> Node0x51dd540;
	Node0x51da020:s1 -> Node0x51dd590;
	Node0x51dd540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%84:\l84:                                               \l  %85 = icmp slt i32 %9, %25\l  %86 = sub nsw i32 %24, %5\l  %87 = sub i32 %22, %5\l  %88 = sub i32 %16, %5\l  %89 = shl nsw i32 %27, 1\l  br label %172\l}"];
	Node0x51dd540 -> Node0x51dd9a0;
	Node0x51dd370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%90:\l90:                                               \l  %91 = phi i32 [ %99, %98 ], [ %8, %81 ]\l  br i1 %44, label %92, label %98\l|{<s0>T|<s1>F}}"];
	Node0x51dd370:s0 -> Node0x51ddba0;
	Node0x51dd370:s1 -> Node0x51dda60;
	Node0x51ddba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%92:\l92:                                               \l  %93 = mul nsw i32 %91, %24\l  %94 = icmp sgt i32 %91, 1\l  %95 = icmp slt i32 %91, %47\l  %96 = icmp ne i32 %91, %47\l  br label %101\l}"];
	Node0x51ddba0 -> Node0x51ddf20;
	Node0x51dd400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%97:\l97:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %28, label %152, label %157\l|{<s0>T|<s1>F}}"];
	Node0x51dd400:s0 -> Node0x51de1d0;
	Node0x51dd400:s1 -> Node0x51dd230;
	Node0x51dda60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%98:\l98:                                               \l  %99 = add i32 %91, %15\l  %100 = icmp slt i32 %99, %24\l  br i1 %100, label %90, label %97, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x51dda60:s0 -> Node0x51dd370;
	Node0x51dda60:s1 -> Node0x51dd400;
	Node0x51ddf20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%101:\l101:                                              \l  %102 = phi i32 [ %9, %92 ], [ %150, %149 ]\l  %103 = add nsw i32 %102, %93\l  %104 = add nsw i32 %103, %45\l  %105 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sharedMem, i32 0, i32 %104\l  store float 0.000000e+00, float addrspace(3)* %105, align 4, !tbaa !9\l  br i1 %94, label %106, label %112\l|{<s0>T|<s1>F}}"];
	Node0x51ddf20:s0 -> Node0x51de8d0;
	Node0x51ddf20:s1 -> Node0x51de960;
	Node0x51de8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%106:\l106:                                              \l  %107 = sub i32 %104, %46\l  %108 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sharedMem, i32 0, i32 %107\l  %109 = load float, float addrspace(3)* %108, align 4, !tbaa !9\l  %110 = fmul contract float %109, 2.500000e-01\l  %111 = fadd contract float %110, 0.000000e+00\l  store float %111, float addrspace(3)* %105, align 4, !tbaa !9\l  br label %112\l}"];
	Node0x51de8d0 -> Node0x51de960;
	Node0x51de960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%112:\l112:                                              \l  %113 = phi float [ %111, %106 ], [ 0.000000e+00, %101 ]\l  br i1 %95, label %114, label %120\l|{<s0>T|<s1>F}}"];
	Node0x51de960:s0 -> Node0x51def30;
	Node0x51de960:s1 -> Node0x51def80;
	Node0x51def30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%114:\l114:                                              \l  %115 = add i32 %48, %104\l  %116 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sharedMem, i32 0, i32 %115\l  %117 = load float, float addrspace(3)* %116, align 4, !tbaa !9\l  %118 = fmul contract float %117, 2.500000e-01\l  %119 = fadd contract float %113, %118\l  store float %119, float addrspace(3)* %105, align 4, !tbaa !9\l  br label %120\l}"];
	Node0x51def30 -> Node0x51def80;
	Node0x51def80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%120:\l120:                                              \l  %121 = phi float [ %119, %114 ], [ %113, %112 ]\l  %122 = icmp sgt i32 %102, 1\l  br i1 %122, label %123, label %129\l|{<s0>T|<s1>F}}"];
	Node0x51def80:s0 -> Node0x51df5a0;
	Node0x51def80:s1 -> Node0x51df5f0;
	Node0x51df5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%123:\l123:                                              \l  %124 = add i32 %104, %49\l  %125 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sharedMem, i32 0, i32 %124\l  %126 = load float, float addrspace(3)* %125, align 4, !tbaa !9\l  %127 = fmul contract float %126, 2.500000e-01\l  %128 = fadd contract float %121, %127\l  store float %128, float addrspace(3)* %105, align 4, !tbaa !9\l  br label %129\l}"];
	Node0x51df5a0 -> Node0x51df5f0;
	Node0x51df5f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%129:\l129:                                              \l  %130 = phi float [ %128, %123 ], [ %121, %120 ]\l  %131 = icmp slt i32 %102, %50\l  br i1 %131, label %132, label %138\l|{<s0>T|<s1>F}}"];
	Node0x51df5f0:s0 -> Node0x51dbd40;
	Node0x51df5f0:s1 -> Node0x51dbd90;
	Node0x51dbd40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%132:\l132:                                              \l  %133 = add i32 %51, %104\l  %134 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sharedMem, i32 0, i32 %133\l  %135 = load float, float addrspace(3)* %134, align 4, !tbaa !9\l  %136 = fmul contract float %135, 2.500000e-01\l  %137 = fadd contract float %130, %136\l  store float %137, float addrspace(3)* %105, align 4, !tbaa !9\l  br label %138\l}"];
	Node0x51dbd40 -> Node0x51dbd90;
	Node0x51dbd90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%138:\l138:                                              \l  %139 = phi float [ %137, %132 ], [ %130, %129 ]\l  %140 = icmp ne i32 %102, %50\l  %141 = select i1 %96, i1 %140, i1 false\l  %142 = icmp sgt i32 %103, -1\l  %143 = select i1 %141, i1 %142, i1 false\l  br i1 %143, label %144, label %149\l|{<s0>T|<s1>F}}"];
	Node0x51dbd90:s0 -> Node0x51e0880;
	Node0x51dbd90:s1 -> Node0x51de520;
	Node0x51e0880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%144:\l144:                                              \l  %145 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sharedMem, i32 0, i32 %103\l  %146 = load float, float addrspace(3)* %145, align 4, !tbaa !9\l  %147 = fmul contract float %53, %146\l  %148 = fadd contract float %139, %147\l  store float %148, float addrspace(3)* %105, align 4, !tbaa !9\l  br label %149\l}"];
	Node0x51e0880 -> Node0x51de520;
	Node0x51de520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%149:\l149:                                              \l  %150 = add i32 %102, %21\l  %151 = icmp slt i32 %150, %25\l  br i1 %151, label %101, label %98, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x51de520:s0 -> Node0x51ddf20;
	Node0x51de520:s1 -> Node0x51dda60;
	Node0x51de1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%152:\l152:                                              \l  %153 = phi i32 [ %161, %160 ], [ %8, %97 ]\l  br i1 %44, label %154, label %160\l|{<s0>T|<s1>F}}"];
	Node0x51de1d0:s0 -> Node0x51e1020;
	Node0x51de1d0:s1 -> Node0x51e0f20;
	Node0x51e1020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%154:\l154:                                              \l  %155 = mul nsw i32 %153, %24\l  %156 = add i32 %155, %45\l  br label %163\l}"];
	Node0x51e1020 -> Node0x51e1280;
	Node0x51dd230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%157:\l157:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %158 = add nuw nsw i32 %82, 1\l  %159 = icmp eq i32 %158, %5\l  br i1 %159, label %83, label %81, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x51dd230:s0 -> Node0x51da020;
	Node0x51dd230:s1 -> Node0x51db140;
	Node0x51e0f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%160:\l160:                                              \l  %161 = add i32 %153, %15\l  %162 = icmp slt i32 %161, %24\l  br i1 %162, label %152, label %157, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x51e0f20:s0 -> Node0x51de1d0;
	Node0x51e0f20:s1 -> Node0x51dd230;
	Node0x51e1280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%163:\l163:                                              \l  %164 = phi i32 [ %9, %154 ], [ %170, %163 ]\l  %165 = add i32 %156, %164\l  %166 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sharedMem, i32 0, i32 %165\l  %167 = load float, float addrspace(3)* %166, align 4, !tbaa !9\l  %168 = sub nsw i32 %165, %27\l  %169 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sharedMem, i32 0, i32 %168\l  store float %167, float addrspace(3)* %169, align 4, !tbaa !9\l  %170 = add i32 %164, %21\l  %171 = icmp slt i32 %170, %25\l  br i1 %171, label %163, label %160, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x51e1280:s0 -> Node0x51e1280;
	Node0x51e1280:s1 -> Node0x51e0f20;
	Node0x51dd9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%172:\l172:                                              \l  %173 = phi i32 [ %8, %84 ], [ %184, %183 ]\l  br i1 %85, label %174, label %183\l|{<s0>T|<s1>F}}"];
	Node0x51dd9a0:s0 -> Node0x51e2230;
	Node0x51dd9a0:s1 -> Node0x51e20f0;
	Node0x51e2230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%174:\l174:                                              \l  %175 = icmp sge i32 %173, %5\l  %176 = icmp slt i32 %173, %86\l  %177 = add i32 %87, %173\l  %178 = mul nsw i32 %177, %2\l  %179 = add i32 %88, %178\l  %180 = mul nsw i32 %173, %24\l  %181 = add i32 %180, %89\l  br label %186\l}"];
	Node0x51e2230 -> Node0x51e2760;
	Node0x51dd590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%182:\l182:                                              \l  ret void\l}"];
	Node0x51e20f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%183:\l183:                                              \l  %184 = add i32 %173, %15\l  %185 = icmp slt i32 %184, %24\l  br i1 %185, label %172, label %182, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x51e20f0:s0 -> Node0x51dd9a0;
	Node0x51e20f0:s1 -> Node0x51dd590;
	Node0x51e2760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%186:\l186:                                              \l  %187 = phi i32 [ %9, %174 ], [ %205, %204 ]\l  %188 = icmp sge i32 %187, %5\l  %189 = select i1 %175, i1 %188, i1 false\l  %190 = icmp slt i32 %187, %86\l  %191 = select i1 %189, i1 %176, i1 false\l  %192 = select i1 %191, i1 %190, i1 false\l  br i1 %192, label %193, label %204\l|{<s0>T|<s1>F}}"];
	Node0x51e2760:s0 -> Node0x51e2f30;
	Node0x51e2760:s1 -> Node0x51e2ac0;
	Node0x51e2f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%193:\l193:                                              \l  %194 = add i32 %179, %187\l  %195 = icmp sgt i32 %194, 0\l  %196 = icmp slt i32 %194, %26\l  %197 = select i1 %195, i1 %196, i1 false\l  br i1 %197, label %198, label %204\l|{<s0>T|<s1>F}}"];
	Node0x51e2f30:s0 -> Node0x51e32d0;
	Node0x51e2f30:s1 -> Node0x51e2ac0;
	Node0x51e32d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%198:\l198:                                              \l  %199 = add i32 %181, %187\l  %200 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sharedMem, i32 0, i32 %199\l  %201 = load float, float addrspace(3)* %200, align 4, !tbaa !9\l  %202 = zext i32 %194 to i64\l  %203 = getelementptr inbounds float, float addrspace(1)* %1, i64 %202\l  store float %201, float addrspace(1)* %203, align 4, !tbaa !9\l  br label %204\l}"];
	Node0x51e32d0 -> Node0x51e2ac0;
	Node0x51e2ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%204:\l204:                                              \l  %205 = add i32 %187, %21\l  %206 = icmp slt i32 %205, %25\l  br i1 %206, label %186, label %183, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x51e2ac0:s0 -> Node0x51e2760;
	Node0x51e2ac0:s1 -> Node0x51e20f0;
}
