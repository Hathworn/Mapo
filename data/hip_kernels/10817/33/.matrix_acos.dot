digraph "CFG for 'matrix_acos' function" {
	label="CFG for 'matrix_acos' function";

	Node0x4ea9250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp ult i32 %12, %2\l  br i1 %13, label %14, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4ea9250:s0 -> Node0x4eab160;
	Node0x4ea9250:s1 -> Node0x4eab1f0;
	Node0x4eab160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds double, double addrspace(1)* %0, i64 %15\l  %17 = load double, double addrspace(1)* %16, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %18 = tail call double @llvm.fabs.f64(double %17)\l  %19 = fcmp oge double %18, 5.000000e-01\l  %20 = tail call double @llvm.fma.f64(double %18, double -5.000000e-01,\l... double 5.000000e-01)\l  %21 = fmul double %17, %17\l  %22 = select i1 %19, double %20, double %21\l  %23 = tail call double @llvm.fma.f64(double %22, double 0x3FA059859FEA6A70,\l... double 0xBF90A5A378A05EAF)\l  %24 = tail call double @llvm.fma.f64(double %22, double %23, double\l... 0x3F94052137024D6A)\l  %25 = tail call double @llvm.fma.f64(double %22, double %24, double\l... 0x3F7AB3A098A70509)\l  %26 = tail call double @llvm.fma.f64(double %22, double %25, double\l... 0x3F88ED60A300C8D2)\l  %27 = tail call double @llvm.fma.f64(double %22, double %26, double\l... 0x3F8C6FA84B77012B)\l  %28 = tail call double @llvm.fma.f64(double %22, double %27, double\l... 0x3F91C6C111DCCB70)\l  %29 = tail call double @llvm.fma.f64(double %22, double %28, double\l... 0x3F96E89F0A0ADACF)\l  %30 = tail call double @llvm.fma.f64(double %22, double %29, double\l... 0x3F9F1C72C668963F)\l  %31 = tail call double @llvm.fma.f64(double %22, double %30, double\l... 0x3FA6DB6DB41CE4BD)\l  %32 = tail call double @llvm.fma.f64(double %22, double %31, double\l... 0x3FB333333336FD5B)\l  %33 = tail call double @llvm.fma.f64(double %22, double %32, double\l... 0x3FC5555555555380)\l  %34 = fmul double %22, %33\l  %35 = tail call double @llvm.fma.f64(double %17, double %34, double %17)\l  %36 = fneg double %35\l  %37 = tail call double @llvm.fma.f64(double 0x3FEDD9AD336A0500, double\l... 0x3FFAF154EEB562D6, double %36)\l  br i1 %19, label %38, label %85\l|{<s0>T|<s1>F}}"];
	Node0x4eab160:s0 -> Node0x4eae2e0;
	Node0x4eab160:s1 -> Node0x4eae370;
	Node0x4eae2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%38:\l38:                                               \l  %39 = tail call double @llvm.amdgcn.rsq.f64(double %22)\l  %40 = fmul double %22, %39\l  %41 = fmul double %39, 5.000000e-01\l  %42 = fneg double %41\l  %43 = tail call double @llvm.fma.f64(double %42, double %40, double\l... 5.000000e-01)\l  %44 = tail call double @llvm.fma.f64(double %41, double %43, double %41)\l  %45 = tail call double @llvm.fma.f64(double %40, double %43, double %40)\l  %46 = fneg double %45\l  %47 = tail call double @llvm.fma.f64(double %46, double %45, double %22)\l  %48 = tail call double @llvm.fma.f64(double %47, double %44, double %45)\l  %49 = fcmp oeq double %22, 0.000000e+00\l  %50 = select i1 %49, double %22, double %48\l  %51 = fmul double %50, %50\l  %52 = fneg double %51\l  %53 = tail call double @llvm.fma.f64(double %50, double %50, double %52)\l  %54 = fsub double %22, %51\l  %55 = fsub double %22, %54\l  %56 = fsub double %55, %51\l  %57 = fsub double %56, %53\l  %58 = fadd double %54, %57\l  %59 = fmul double %50, 2.000000e+00\l  %60 = tail call double @llvm.amdgcn.rcp.f64(double %59)\l  %61 = fneg double %59\l  %62 = tail call double @llvm.fma.f64(double %61, double %60, double\l... 1.000000e+00)\l  %63 = tail call double @llvm.fma.f64(double %62, double %60, double %60)\l  %64 = tail call double @llvm.fma.f64(double %61, double %63, double\l... 1.000000e+00)\l  %65 = tail call double @llvm.fma.f64(double %64, double %63, double %63)\l  %66 = fmul double %58, %65\l  %67 = tail call double @llvm.fma.f64(double %61, double %66, double %58)\l  %68 = tail call double @llvm.fma.f64(double %67, double %65, double %66)\l  %69 = select i1 %49, double 0.000000e+00, double %68\l  %70 = fadd double %50, %69\l  %71 = fsub double %70, %50\l  %72 = fsub double %69, %71\l  %73 = tail call double @llvm.fma.f64(double %70, double %34, double %70)\l  %74 = fmul double %73, -2.000000e+00\l  %75 = tail call double @llvm.fma.f64(double 0x3FFDD9AD336A0500, double\l... 0x3FFAF154EEB562D6, double %74)\l  %76 = tail call double @llvm.fma.f64(double %70, double %34, double %72)\l  %77 = fadd double %70, %76\l  %78 = fmul double %77, 2.000000e+00\l  %79 = fcmp olt double %17, 0.000000e+00\l  %80 = select i1 %79, double %75, double %78\l  %81 = fcmp oeq double %17, -1.000000e+00\l  %82 = select i1 %81, double 0x400921FB54442D18, double %80\l  %83 = fcmp oeq double %17, 1.000000e+00\l  %84 = select i1 %83, double 0.000000e+00, double %82\l  br label %85\l}"];
	Node0x4eae2e0 -> Node0x4eae370;
	Node0x4eae370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%85:\l85:                                               \l  %86 = phi double [ %84, %38 ], [ %37, %14 ]\l  %87 = getelementptr inbounds double, double addrspace(1)* %1, i64 %15\l  store double %86, double addrspace(1)* %87, align 8, !tbaa !7\l  br label %88\l}"];
	Node0x4eae370 -> Node0x4eab1f0;
	Node0x4eab1f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  ret void\l}"];
}
