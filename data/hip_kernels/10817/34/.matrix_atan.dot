digraph "CFG for 'matrix_atan' function" {
	label="CFG for 'matrix_atan' function";

	Node0x543daf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp ult i32 %12, %2\l  br i1 %13, label %14, label %49\l|{<s0>T|<s1>F}}"];
	Node0x543daf0:s0 -> Node0x543fa00;
	Node0x543daf0:s1 -> Node0x543fa90;
	Node0x543fa00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds double, double addrspace(1)* %0, i64 %15\l  %17 = load double, double addrspace(1)* %16, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %18 = tail call double @llvm.fabs.f64(double %17)\l  %19 = fcmp ogt double %18, 1.000000e+00\l  %20 = fdiv double 1.000000e+00, %18\l  %21 = select i1 %19, double %20, double %18\l  %22 = fmul double %21, %21\l  %23 = tail call double @llvm.fma.f64(double %22, double 0x3EEBA404B5E68A13,\l... double 0xBF23E260BD3237F4)\l  %24 = tail call double @llvm.fma.f64(double %22, double %23, double\l... 0x3F4B2BB069EFB384)\l  %25 = tail call double @llvm.fma.f64(double %22, double %24, double\l... 0xBF67952DAF56DE9B)\l  %26 = tail call double @llvm.fma.f64(double %22, double %25, double\l... 0x3F7D6D43A595C56F)\l  %27 = tail call double @llvm.fma.f64(double %22, double %26, double\l... 0xBF8C6EA4A57D9582)\l  %28 = tail call double @llvm.fma.f64(double %22, double %27, double\l... 0x3F967E295F08B19F)\l  %29 = tail call double @llvm.fma.f64(double %22, double %28, double\l... 0xBF9E9AE6FC27006A)\l  %30 = tail call double @llvm.fma.f64(double %22, double %29, double\l... 0x3FA2C15B5711927A)\l  %31 = tail call double @llvm.fma.f64(double %22, double %30, double\l... 0xBFA59976E82D3FF0)\l  %32 = tail call double @llvm.fma.f64(double %22, double %31, double\l... 0x3FA82D5D6EF28734)\l  %33 = tail call double @llvm.fma.f64(double %22, double %32, double\l... 0xBFAAE5CE6A214619)\l  %34 = tail call double @llvm.fma.f64(double %22, double %33, double\l... 0x3FAE1BB48427B883)\l  %35 = tail call double @llvm.fma.f64(double %22, double %34, double\l... 0xBFB110E48B207F05)\l  %36 = tail call double @llvm.fma.f64(double %22, double %35, double\l... 0x3FB3B13657B87036)\l  %37 = tail call double @llvm.fma.f64(double %22, double %36, double\l... 0xBFB745D119378E4F)\l  %38 = tail call double @llvm.fma.f64(double %22, double %37, double\l... 0x3FBC71C717E1913C)\l  %39 = tail call double @llvm.fma.f64(double %22, double %38, double\l... 0xBFC2492492376B7D)\l  %40 = tail call double @llvm.fma.f64(double %22, double %39, double\l... 0x3FC99999999952CC)\l  %41 = tail call double @llvm.fma.f64(double %22, double %40, double\l... 0xBFD5555555555523)\l  %42 = fmul double %22, %41\l  %43 = tail call double @llvm.fma.f64(double %21, double %42, double %21)\l  %44 = fneg double %43\l  %45 = tail call double @llvm.fma.f64(double 0x3FEDD9AD336A0500, double\l... 0x3FFAF154EEB562D6, double %44)\l  %46 = select i1 %19, double %45, double %43\l  %47 = tail call double @llvm.copysign.f64(double %46, double %17)\l  %48 = getelementptr inbounds double, double addrspace(1)* %1, i64 %15\l  store double %47, double addrspace(1)* %48, align 8, !tbaa !7\l  br label %49\l}"];
	Node0x543fa00 -> Node0x543fa90;
	Node0x543fa90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  ret void\l}"];
}
