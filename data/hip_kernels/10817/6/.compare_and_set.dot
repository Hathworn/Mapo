digraph "CFG for 'compare_and_set' function" {
	label="CFG for 'compare_and_set' function";

	Node0x5b6dcf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %2\l  %28 = icmp slt i32 %26, %3\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %46\l|{<s0>T|<s1>F}}"];
	Node0x5b6dcf0:s0 -> Node0x5b72290;
	Node0x5b6dcf0:s1 -> Node0x5b72320;
	Node0x5b72290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%30:\l30:                                               \l  %31 = mul nsw i32 %18, %3\l  %32 = add nsw i32 %31, %26\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %0, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = fsub contract double %35, %4\l  %37 = tail call double @llvm.fabs.f64(double %36)\l  %38 = fcmp contract olt double %37, %5\l  br i1 %38, label %39, label %41\l|{<s0>T|<s1>F}}"];
	Node0x5b72290:s0 -> Node0x5b72c90;
	Node0x5b72290:s1 -> Node0x5b72d20;
	Node0x5b72c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%39:\l39:                                               \l  %40 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  store double %6, double addrspace(1)* %40, align 8, !tbaa !7\l  br label %46\l}"];
	Node0x5b72c90 -> Node0x5b72320;
	Node0x5b72d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%41:\l41:                                               \l  %42 = fcmp contract olt double %35, %4\l  %43 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  br i1 %42, label %44, label %45\l|{<s0>T|<s1>F}}"];
	Node0x5b72d20:s0 -> Node0x5b73770;
	Node0x5b72d20:s1 -> Node0x5b737c0;
	Node0x5b73770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%44:\l44:                                               \l  store double %7, double addrspace(1)* %43, align 8, !tbaa !7\l  br label %46\l}"];
	Node0x5b73770 -> Node0x5b72320;
	Node0x5b737c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%45:\l45:                                               \l  store double %8, double addrspace(1)* %43, align 8, !tbaa !7\l  br label %46\l}"];
	Node0x5b737c0 -> Node0x5b72320;
	Node0x5b72320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  ret void\l}"];
}
