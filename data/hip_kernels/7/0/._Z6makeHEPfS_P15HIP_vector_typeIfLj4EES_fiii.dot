digraph "CFG for '_Z6makeHEPfS_P15HIP_vector_typeIfLj4EES_fiii' function" {
	label="CFG for '_Z6makeHEPfS_P15HIP_vector_typeIfLj4EES_fiii' function";

	Node0x4f12350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = freeze i32 %17\l  %19 = sdiv i32 %18, 3\l  %20 = icmp slt i32 %17, %7\l  br i1 %20, label %21, label %130\l|{<s0>T|<s1>F}}"];
	Node0x4f12350:s0 -> Node0x4f151b0;
	Node0x4f12350:s1 -> Node0x4f15240;
	Node0x4f151b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%21:\l21:                                               \l  %22 = mul i32 %19, 3\l  %23 = sub i32 %18, %22\l  switch i32 %23, label %86 [\l    i32 0, label %24\l    i32 1, label %55\l  ]\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0x4f151b0:s0 -> Node0x4f154a0;
	Node0x4f151b0:s1 -> Node0x4f15520;
	Node0x4f151b0:s2 -> Node0x4f155e0;
	Node0x4f15520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%24:\l24:                                               \l  %25 = sext i32 %17 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %1, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %28 = sext i32 %19 to i64\l  %29 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64 0\l  %30 = load float, float addrspace(1)* %29, align 16, !tbaa !11,\l... !amdgpu.noclobber !5\l  %31 = fsub contract float %27, %30\l  %32 = getelementptr inbounds float, float addrspace(1)* %3, i64 %28\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = fcmp olt float %33, 0x39F0000000000000\l  %35 = select i1 %34, float 0x41F0000000000000, float 1.000000e+00\l  %36 = fmul float %33, %35\l  %37 = tail call float @llvm.sqrt.f32(float %36)\l  %38 = bitcast float %37 to i32\l  %39 = add nsw i32 %38, -1\l  %40 = bitcast i32 %39 to float\l  %41 = add nsw i32 %38, 1\l  %42 = bitcast i32 %41 to float\l  %43 = tail call i1 @llvm.amdgcn.class.f32(float %36, i32 608)\l  %44 = select i1 %34, float 0x3EF0000000000000, float 1.000000e+00\l  %45 = fneg float %42\l  %46 = tail call float @llvm.fma.f32(float %45, float %37, float %36)\l  %47 = fcmp ogt float %46, 0.000000e+00\l  %48 = fneg float %40\l  %49 = tail call float @llvm.fma.f32(float %48, float %37, float %36)\l  %50 = fcmp ole float %49, 0.000000e+00\l  %51 = select i1 %50, float %40, float %37\l  %52 = select i1 %47, float %42, float %51\l  %53 = fmul float %44, %52\l  %54 = select i1 %43, float %36, float %53\l  br label %117\l}"];
	Node0x4f15520 -> Node0x4f18ae0;
	Node0x4f155e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%55:\l55:                                               \l  %56 = sext i32 %17 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %59 = sext i32 %19 to i64\l  %60 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %59, i32 0, i32 0, i32 0, i64 1\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %62 = fsub contract float %58, %61\l  %63 = getelementptr inbounds float, float addrspace(1)* %3, i64 %59\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %65 = fcmp olt float %64, 0x39F0000000000000\l  %66 = select i1 %65, float 0x41F0000000000000, float 1.000000e+00\l  %67 = fmul float %64, %66\l  %68 = tail call float @llvm.sqrt.f32(float %67)\l  %69 = bitcast float %68 to i32\l  %70 = add nsw i32 %69, -1\l  %71 = bitcast i32 %70 to float\l  %72 = add nsw i32 %69, 1\l  %73 = bitcast i32 %72 to float\l  %74 = tail call i1 @llvm.amdgcn.class.f32(float %67, i32 608)\l  %75 = select i1 %65, float 0x3EF0000000000000, float 1.000000e+00\l  %76 = fneg float %73\l  %77 = tail call float @llvm.fma.f32(float %76, float %68, float %67)\l  %78 = fcmp ogt float %77, 0.000000e+00\l  %79 = fneg float %71\l  %80 = tail call float @llvm.fma.f32(float %79, float %68, float %67)\l  %81 = fcmp ole float %80, 0.000000e+00\l  %82 = select i1 %81, float %71, float %68\l  %83 = select i1 %78, float %73, float %82\l  %84 = fmul float %75, %83\l  %85 = select i1 %74, float %67, float %84\l  br label %117\l}"];
	Node0x4f155e0 -> Node0x4f18ae0;
	Node0x4f154a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%86:\l86:                                               \l  %87 = sext i32 %17 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %90 = sext i32 %19 to i64\l  %91 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %90, i32 0, i32 0, i32 0, i64 2\l  %92 = load float, float addrspace(1)* %91, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %93 = fsub contract float %89, %92\l  %94 = getelementptr inbounds float, float addrspace(1)* %3, i64 %90\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %96 = fcmp olt float %95, 0x39F0000000000000\l  %97 = select i1 %96, float 0x41F0000000000000, float 1.000000e+00\l  %98 = fmul float %95, %97\l  %99 = tail call float @llvm.sqrt.f32(float %98)\l  %100 = bitcast float %99 to i32\l  %101 = add nsw i32 %100, -1\l  %102 = bitcast i32 %101 to float\l  %103 = add nsw i32 %100, 1\l  %104 = bitcast i32 %103 to float\l  %105 = tail call i1 @llvm.amdgcn.class.f32(float %98, i32 608)\l  %106 = select i1 %96, float 0x3EF0000000000000, float 1.000000e+00\l  %107 = fneg float %104\l  %108 = tail call float @llvm.fma.f32(float %107, float %99, float %98)\l  %109 = fcmp ogt float %108, 0.000000e+00\l  %110 = fneg float %102\l  %111 = tail call float @llvm.fma.f32(float %110, float %99, float %98)\l  %112 = fcmp ole float %111, 0.000000e+00\l  %113 = select i1 %112, float %102, float %99\l  %114 = select i1 %109, float %104, float %113\l  %115 = fmul float %106, %114\l  %116 = select i1 %105, float %98, float %115\l  br label %117\l}"];
	Node0x4f154a0 -> Node0x4f18ae0;
	Node0x4f18ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%117:\l117:                                              \l  %118 = phi float [ %54, %24 ], [ %116, %86 ], [ %85, %55 ]\l  %119 = phi float [ %31, %24 ], [ %93, %86 ], [ %62, %55 ]\l  %120 = fpext float %119 to double\l  %121 = fpext float %118 to double\l  %122 = fpext float %4 to double\l  %123 = fmul contract double %122, %121\l  %124 = fdiv contract double %120, %123\l  %125 = fptrunc double %124 to float\l  %126 = mul nsw i32 %17, %6\l  %127 = add nsw i32 %126, %5\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %0, i64 %128\l  store float %125, float addrspace(1)* %129, align 4, !tbaa !7\l  br label %130\l}"];
	Node0x4f18ae0 -> Node0x4f15240;
	Node0x4f15240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%130:\l130:                                              \l  ret void\l}"];
}
