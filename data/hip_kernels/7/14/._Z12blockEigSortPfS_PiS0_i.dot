digraph "CFG for '_Z12blockEigSortPfS_PiS0_i' function" {
	label="CFG for '_Z12blockEigSortPfS_PiS0_i' function";

	Node0x6089f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = sext i32 %14 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %15\l  %17 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %15\l  %19 = load i32, i32 addrspace(1)* %18, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %20 = add nsw i32 %17, -1\l  %21 = add i32 %20, %19\l  %22 = icmp slt i32 %17, %21\l  br i1 %22, label %23, label %34\l|{<s0>T|<s1>F}}"];
	Node0x6089f20:s0 -> Node0x608d050;
	Node0x6089f20:s1 -> Node0x608d0e0;
	Node0x608d050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%23:\l23:                                               \l  %24 = icmp sgt i32 %4, 0\l  %25 = add i32 %19, %17\l  %26 = add i32 %25, -2\l  %27 = and i32 %4, 7\l  %28 = icmp ult i32 %4, 8\l  %29 = and i32 %4, -8\l  %30 = icmp eq i32 %27, 0\l  br label %31\l}"];
	Node0x608d050 -> Node0x608d700;
	Node0x608d700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%31:\l31:                                               \l  %32 = phi i32 [ %17, %23 ], [ %36, %35 ]\l  %33 = icmp slt i32 %17, %32\l  br i1 %33, label %38, label %35\l|{<s0>T|<s1>F}}"];
	Node0x608d700:s0 -> Node0x608bef0;
	Node0x608d700:s1 -> Node0x608d7f0;
	Node0x608d0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%34:\l34:                                               \l  ret void\l}"];
	Node0x608d7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%35:\l35:                                               \l  %36 = add nsw i32 %32, 1\l  %37 = icmp eq i32 %32, %26\l  br i1 %37, label %34, label %31, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x608d7f0:s0 -> Node0x608d0e0;
	Node0x608d7f0:s1 -> Node0x608d700;
	Node0x608bef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%38:\l38:                                               \l  %39 = phi i32 [ %42, %154 ], [ %17, %31 ]\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  %42 = add nsw i32 %39, 1\l  %43 = bitcast float addrspace(1)* %41 to \<2 x float\> addrspace(1)*\l  %44 = load \<2 x float\>, \<2 x float\> addrspace(1)* %43, align 4, !tbaa !13\l  %45 = extractelement \<2 x float\> %44, i64 0\l  %46 = extractelement \<2 x float\> %44, i64 1\l  %47 = fcmp contract ogt float %45, %46\l  br i1 %47, label %48, label %154\l|{<s0>T|<s1>F}}"];
	Node0x608bef0:s0 -> Node0x608eb80;
	Node0x608bef0:s1 -> Node0x608ded0;
	Node0x608eb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%48:\l48:                                               \l  %49 = sext i32 %42 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  store float %46, float addrspace(1)* %41, align 4, !tbaa !13\l  store float %45, float addrspace(1)* %50, align 4, !tbaa !13\l  br i1 %24, label %51, label %154\l|{<s0>T|<s1>F}}"];
	Node0x608eb80:s0 -> Node0x608f500;
	Node0x608eb80:s1 -> Node0x608ded0;
	Node0x608f500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%51:\l51:                                               \l  br i1 %28, label %137, label %52\l|{<s0>T|<s1>F}}"];
	Node0x608f500:s0 -> Node0x608f600;
	Node0x608f500:s1 -> Node0x608f650;
	Node0x608f650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%52:\l52:                                               \l  %53 = phi i32 [ %134, %52 ], [ 0, %51 ]\l  %54 = phi i32 [ %135, %52 ], [ 0, %51 ]\l  %55 = mul nsw i32 %53, %4\l  %56 = add nsw i32 %55, %39\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !13\l  %60 = add nsw i32 %56, 1\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !13\l  store float %63, float addrspace(1)* %58, align 4, !tbaa !13\l  store float %59, float addrspace(1)* %62, align 4, !tbaa !13\l  %64 = or i32 %53, 1\l  %65 = mul nsw i32 %64, %4\l  %66 = add nsw i32 %65, %39\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !13\l  %70 = add nsw i32 %66, 1\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !13\l  store float %73, float addrspace(1)* %68, align 4, !tbaa !13\l  store float %69, float addrspace(1)* %72, align 4, !tbaa !13\l  %74 = or i32 %53, 2\l  %75 = mul nsw i32 %74, %4\l  %76 = add nsw i32 %75, %39\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !13\l  %80 = add nsw i32 %76, 1\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %1, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !13\l  store float %83, float addrspace(1)* %78, align 4, !tbaa !13\l  store float %79, float addrspace(1)* %82, align 4, !tbaa !13\l  %84 = or i32 %53, 3\l  %85 = mul nsw i32 %84, %4\l  %86 = add nsw i32 %85, %39\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !13\l  %90 = add nsw i32 %86, 1\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %1, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !13\l  store float %93, float addrspace(1)* %88, align 4, !tbaa !13\l  store float %89, float addrspace(1)* %92, align 4, !tbaa !13\l  %94 = or i32 %53, 4\l  %95 = mul nsw i32 %94, %4\l  %96 = add nsw i32 %95, %39\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %1, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !13\l  %100 = add nsw i32 %96, 1\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %1, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !13\l  store float %103, float addrspace(1)* %98, align 4, !tbaa !13\l  store float %99, float addrspace(1)* %102, align 4, !tbaa !13\l  %104 = or i32 %53, 5\l  %105 = mul nsw i32 %104, %4\l  %106 = add nsw i32 %105, %39\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %1, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !13\l  %110 = add nsw i32 %106, 1\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %1, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !13\l  store float %113, float addrspace(1)* %108, align 4, !tbaa !13\l  store float %109, float addrspace(1)* %112, align 4, !tbaa !13\l  %114 = or i32 %53, 6\l  %115 = mul nsw i32 %114, %4\l  %116 = add nsw i32 %115, %39\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %1, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !13\l  %120 = add nsw i32 %116, 1\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %1, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !13\l  store float %123, float addrspace(1)* %118, align 4, !tbaa !13\l  store float %119, float addrspace(1)* %122, align 4, !tbaa !13\l  %124 = or i32 %53, 7\l  %125 = mul nsw i32 %124, %4\l  %126 = add nsw i32 %125, %39\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds float, float addrspace(1)* %1, i64 %127\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !13\l  %130 = add nsw i32 %126, 1\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %1, i64 %131\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !13\l  store float %133, float addrspace(1)* %128, align 4, !tbaa !13\l  store float %129, float addrspace(1)* %132, align 4, !tbaa !13\l  %134 = add nuw nsw i32 %53, 8\l  %135 = add i32 %54, 8\l  %136 = icmp eq i32 %135, %29\l  br i1 %136, label %137, label %52, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x608f650:s0 -> Node0x608f600;
	Node0x608f650:s1 -> Node0x608f650;
	Node0x608f600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%137:\l137:                                              \l  %138 = phi i32 [ 0, %51 ], [ %134, %52 ]\l  br i1 %30, label %154, label %139\l|{<s0>T|<s1>F}}"];
	Node0x608f600:s0 -> Node0x608ded0;
	Node0x608f600:s1 -> Node0x6093730;
	Node0x6093730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%139:\l139:                                              \l  %140 = phi i32 [ %151, %139 ], [ %138, %137 ]\l  %141 = phi i32 [ %152, %139 ], [ 0, %137 ]\l  %142 = mul nsw i32 %140, %4\l  %143 = add nsw i32 %142, %39\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %1, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !13\l  %147 = add nsw i32 %143, 1\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds float, float addrspace(1)* %1, i64 %148\l  %150 = load float, float addrspace(1)* %149, align 4, !tbaa !13\l  store float %150, float addrspace(1)* %145, align 4, !tbaa !13\l  store float %146, float addrspace(1)* %149, align 4, !tbaa !13\l  %151 = add nuw nsw i32 %140, 1\l  %152 = add i32 %141, 1\l  %153 = icmp eq i32 %152, %27\l  br i1 %153, label %154, label %139, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x6093730:s0 -> Node0x608ded0;
	Node0x6093730:s1 -> Node0x6093730;
	Node0x608ded0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%154:\l154:                                              \l  %155 = icmp slt i32 %42, %32\l  br i1 %155, label %38, label %35, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x608ded0:s0 -> Node0x608bef0;
	Node0x608ded0:s1 -> Node0x608d7f0;
}
