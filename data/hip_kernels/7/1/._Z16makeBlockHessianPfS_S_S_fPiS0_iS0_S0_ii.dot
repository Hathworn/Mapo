digraph "CFG for '_Z16makeBlockHessianPfS_S_S_fPiS0_iS0_S0_ii' function" {
	label="CFG for '_Z16makeBlockHessianPfS_S_S_fPiS0_iS0_S0_ii' function";

	Node0x51bf5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %22\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %25 = mul nsw i32 %24, 3\l  %26 = add nsw i32 %25, %10\l  %27 = sdiv i32 %26, 3\l  %28 = icmp slt i32 %27, %11\l  br i1 %28, label %29, label %96\l|{<s0>T|<s1>F}}"];
	Node0x51bf5d0:s0 -> Node0x51c2c70;
	Node0x51bf5d0:s1 -> Node0x51c2d00;
	Node0x51c2c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%29:\l29:                                               \l  %30 = add nsw i32 %7, -1\l  %31 = icmp eq i32 %21, %30\l  br i1 %31, label %38, label %32\l|{<s0>T|<s1>F}}"];
	Node0x51c2c70:s0 -> Node0x51c2f90;
	Node0x51c2c70:s1 -> Node0x51c2fe0;
	Node0x51c2fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%32:\l32:                                               \l  %33 = add nsw i32 %21, 1\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %34\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %37 = icmp slt i32 %27, %36\l  br i1 %37, label %38, label %96\l|{<s0>T|<s1>F}}"];
	Node0x51c2fe0:s0 -> Node0x51c2f90;
	Node0x51c2fe0:s1 -> Node0x51c2d00;
	Node0x51c2f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%38:\l38:                                               \l  %39 = phi i32 [ %11, %29 ], [ %36, %32 ]\l  %40 = mul nsw i32 %39, 3\l  %41 = icmp slt i32 %25, %40\l  br i1 %41, label %42, label %96\l|{<s0>T|<s1>F}}"];
	Node0x51c2f90:s0 -> Node0x51c3d80;
	Node0x51c2f90:s1 -> Node0x51c2d00;
	Node0x51c3d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%42:\l42:                                               \l  %43 = sext i32 %27 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %3, i64 %43\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %22\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %22\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %49 = add i32 %46, %10\l  br label %50\l}"];
	Node0x51c3d80 -> Node0x51c42b0;
	Node0x51c42b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i32 [ %25, %42 ], [ %94, %50 ]\l  %52 = load float, float addrspace(1)* %44, align 4, !tbaa !11\l  %53 = sdiv i32 %51, 3\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %3, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !11\l  %57 = fmul contract float %52, %56\l  %58 = fcmp olt float %57, 0x39F0000000000000\l  %59 = select i1 %58, float 0x41F0000000000000, float 1.000000e+00\l  %60 = fmul float %57, %59\l  %61 = tail call float @llvm.sqrt.f32(float %60)\l  %62 = bitcast float %61 to i32\l  %63 = add nsw i32 %62, -1\l  %64 = bitcast i32 %63 to float\l  %65 = add nsw i32 %62, 1\l  %66 = bitcast i32 %65 to float\l  %67 = tail call i1 @llvm.amdgcn.class.f32(float %60, i32 608)\l  %68 = select i1 %58, float 0x3EF0000000000000, float 1.000000e+00\l  %69 = fneg float %66\l  %70 = tail call float @llvm.fma.f32(float %69, float %61, float %60)\l  %71 = fcmp ogt float %70, 0.000000e+00\l  %72 = fneg float %64\l  %73 = tail call float @llvm.fma.f32(float %72, float %61, float %60)\l  %74 = fcmp ole float %73, 0.000000e+00\l  %75 = select i1 %74, float %64, float %61\l  %76 = select i1 %71, float %66, float %75\l  %77 = fmul float %68, %76\l  %78 = select i1 %67, float %60, float %77\l  %79 = fmul contract float %78, %4\l  %80 = fdiv contract float 1.000000e+00, %79\l  %81 = sext i32 %51 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %1, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !11\l  %84 = getelementptr inbounds float, float addrspace(1)* %2, i64 %81\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !11\l  %86 = fsub contract float %83, %85\l  %87 = fmul contract float %86, %80\l  %88 = sub nsw i32 %51, %25\l  %89 = mul i32 %88, 3\l  %90 = mul i32 %89, %48\l  %91 = add i32 %49, %90\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %0, i64 %92\l  store float %87, float addrspace(1)* %93, align 4, !tbaa !11\l  %94 = add nsw i32 %51, 1\l  %95 = icmp slt i32 %94, %40\l  br i1 %95, label %50, label %96, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x51c42b0:s0 -> Node0x51c42b0;
	Node0x51c42b0:s1 -> Node0x51c2d00;
	Node0x51c2d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%96:\l96:                                               \l  ret void\l}"];
}
