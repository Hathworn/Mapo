digraph "CFG for '_Z16perturbPositionsPfP15HIP_vector_typeIfLj4EEfPiiii' function" {
	label="CFG for '_Z16perturbPositionsPfP15HIP_vector_typeIfLj4EEfPiiii' function";

	Node0x4a84580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %4\l  br i1 %17, label %18, label %63\l|{<s0>T|<s1>F}}"];
	Node0x4a84580:s0 -> Node0x4a86460;
	Node0x4a84580:s1 -> Node0x4a864f0;
	Node0x4a86460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%18:\l18:                                               \l  %19 = sext i32 %16 to i64\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %19\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %22 = mul nsw i32 %21, 3\l  %23 = add nsw i32 %22, %5\l  %24 = freeze i32 %23\l  %25 = sdiv i32 %24, 3\l  %26 = icmp slt i32 %25, %6\l  br i1 %26, label %27, label %63\l|{<s0>T|<s1>F}}"];
	Node0x4a86460:s0 -> Node0x4a871f0;
	Node0x4a86460:s1 -> Node0x4a864f0;
	Node0x4a871f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%27:\l27:                                               \l  %28 = add nsw i32 %4, -1\l  %29 = icmp eq i32 %16, %28\l  br i1 %29, label %36, label %30\l|{<s0>T|<s1>F}}"];
	Node0x4a871f0:s0 -> Node0x4a87480;
	Node0x4a871f0:s1 -> Node0x4a874d0;
	Node0x4a874d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%30:\l30:                                               \l  %31 = add nsw i32 %16, 1\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %35 = icmp slt i32 %25, %34\l  br i1 %35, label %36, label %63\l|{<s0>T|<s1>F}}"];
	Node0x4a874d0:s0 -> Node0x4a87480;
	Node0x4a874d0:s1 -> Node0x4a864f0;
	Node0x4a87480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%36:\l36:                                               \l  %37 = mul i32 %25, 3\l  %38 = sub i32 %24, %37\l  switch i32 %38, label %55 [\l    i32 0, label %39\l    i32 1, label %47\l  ]\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0x4a87480:s0 -> Node0x4a881c0;
	Node0x4a87480:s1 -> Node0x4a88240;
	Node0x4a87480:s2 -> Node0x4a882d0;
	Node0x4a88240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%39:\l39:                                               \l  %40 = sext i32 %25 to i64\l  %41 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %40, i32 0, i32 0, i32 0, i64 0\l  %42 = load float, float addrspace(1)* %41, align 16, !tbaa !11,\l... !amdgpu.noclobber !5\l  %43 = sext i32 %23 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  store float %42, float addrspace(1)* %44, align 4, !tbaa !12\l  %45 = load float, float addrspace(1)* %41, align 16, !tbaa !11\l  %46 = fadd contract float %45, %2\l  store float %46, float addrspace(1)* %41, align 16, !tbaa !11\l  br label %63\l}"];
	Node0x4a88240 -> Node0x4a864f0;
	Node0x4a882d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%47:\l47:                                               \l  %48 = sext i32 %25 to i64\l  %49 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %48, i32 0, i32 0, i32 0, i64 1\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %51 = sext i32 %23 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  store float %50, float addrspace(1)* %52, align 4, !tbaa !12\l  %53 = load float, float addrspace(1)* %49, align 4, !tbaa !11\l  %54 = fadd contract float %53, %2\l  store float %54, float addrspace(1)* %49, align 4, !tbaa !11\l  br label %63\l}"];
	Node0x4a882d0 -> Node0x4a864f0;
	Node0x4a881c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%55:\l55:                                               \l  %56 = sext i32 %25 to i64\l  %57 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %56, i32 0, i32 0, i32 0, i64 2\l  %58 = load float, float addrspace(1)* %57, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %59 = sext i32 %23 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  store float %58, float addrspace(1)* %60, align 4, !tbaa !12\l  %61 = load float, float addrspace(1)* %57, align 8, !tbaa !11\l  %62 = fadd contract float %61, %2\l  store float %62, float addrspace(1)* %57, align 8, !tbaa !11\l  br label %63\l}"];
	Node0x4a881c0 -> Node0x4a864f0;
	Node0x4a864f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  ret void\l}"];
}
