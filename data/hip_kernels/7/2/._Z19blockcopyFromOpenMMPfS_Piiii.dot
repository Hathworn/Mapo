digraph "CFG for '_Z19blockcopyFromOpenMMPfS_Piiii' function" {
	label="CFG for '_Z19blockcopyFromOpenMMPfS_Piiii' function";

	Node0x4638430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = sext i32 %15 to i64\l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %16\l  %18 = load i32, i32 addrspace(1)* %17, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %19 = mul nsw i32 %18, 3\l  %20 = add nsw i32 %19, %4\l  %21 = sdiv i32 %20, 3\l  %22 = icmp slt i32 %21, %5\l  br i1 %22, label %23, label %40\l|{<s0>T|<s1>F}}"];
	Node0x4638430:s0 -> Node0x463aeb0;
	Node0x4638430:s1 -> Node0x463af40;
	Node0x463aeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%23:\l23:                                               \l  %24 = icmp eq i32 %15, %3\l  br i1 %24, label %31, label %25\l|{<s0>T|<s1>F}}"];
	Node0x463aeb0:s0 -> Node0x463b110;
	Node0x463aeb0:s1 -> Node0x463b160;
	Node0x463b160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%25:\l25:                                               \l  %26 = add nsw i32 %15, 1\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %30 = icmp slt i32 %21, %29\l  br i1 %30, label %31, label %40\l|{<s0>T|<s1>F}}"];
	Node0x463b160:s0 -> Node0x463b110;
	Node0x463b160:s1 -> Node0x463af40;
	Node0x463b110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%31:\l31:                                               \l  %32 = add i32 %20, 1\l  %33 = add i32 %32, %21\l  %34 = sext i32 %33 to i64\l  %35 = shl nsw i64 %34, 2\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %38 = sext i32 %20 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  store float %37, float addrspace(1)* %39, align 4, !tbaa !11\l  br label %40\l}"];
	Node0x463b110 -> Node0x463af40;
	Node0x463af40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  ret void\l}"];
}
