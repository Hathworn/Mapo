digraph "CFG for '_Z27gpu_stencil37_hack1_cp_colsPdS_S_S_iiiiii' function" {
	label="CFG for '_Z27gpu_stencil37_hack1_cp_colsPdS_S_S_iiiiii' function";

	Node0x46e2320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %12 = mul i32 %11, %9\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 2, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = mul i32 %18, %17\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = mul i32 %20, %7\l  %22 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %23 = bitcast i8 addrspace(4)* %22 to i32 addrspace(4)*\l  %24 = load i32, i32 addrspace(4)* %23, align 4, !tbaa !6\l  %25 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 4, !range !4, !invariant.load !5\l  %28 = zext i16 %27 to i32\l  %29 = udiv i32 %24, %28\l  %30 = mul i32 %29, %28\l  %31 = icmp ugt i32 %24, %30\l  %32 = zext i1 %31 to i32\l  %33 = add i32 %29, %32\l  %34 = add nsw i32 %21, 1\l  %35 = icmp slt i32 %34, %5\l  %36 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %37 = add i32 %19, %36\l  %38 = icmp sge i32 %37, %4\l  %39 = icmp sgt i32 %9, 0\l  br i1 %39, label %40, label %42\l|{<s0>T|<s1>F}}"];
	Node0x46e2320:s0 -> Node0x46e6a60;
	Node0x46e2320:s1 -> Node0x46e6af0;
	Node0x46e6a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%40:\l40:                                               \l  %41 = shl i32 %4, 1\l  br label %43\l}"];
	Node0x46e6a60 -> Node0x46e6cc0;
	Node0x46e6af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%42:\l42:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
	Node0x46e6cc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi i32 [ 0, %40 ], [ %71, %70 ]\l  %45 = add i32 %44, %12\l  %46 = icmp sge i32 %45, %6\l  %47 = mul i32 %45, %4\l  %48 = add i32 %37, %47\l  %49 = mul i32 %48, %5\l  %50 = add i32 %49, %21\l  %51 = mul i32 %45, %33\l  %52 = add i32 %51, %20\l  %53 = mul i32 %41, %52\l  %54 = add i32 %37, %53\l  %55 = select i1 %38, i1 true, i1 %46\l  br i1 %55, label %70, label %56\l|{<s0>T|<s1>F}}"];
	Node0x46e6cc0:s0 -> Node0x46e70a0;
	Node0x46e6cc0:s1 -> Node0x46e7860;
	Node0x46e7860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%56:\l56:                                               \l  %57 = sext i32 %50 to i64\l  %58 = getelementptr inbounds double, double addrspace(1)* %0, i64 %57\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !16\l  %60 = sext i32 %54 to i64\l  %61 = getelementptr inbounds double, double addrspace(1)* %2, i64 %60\l  store double %59, double addrspace(1)* %61, align 8, !tbaa !16\l  br i1 %35, label %62, label %70\l|{<s0>T|<s1>F}}"];
	Node0x46e7860:s0 -> Node0x46e8400;
	Node0x46e7860:s1 -> Node0x46e70a0;
	Node0x46e8400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%62:\l62:                                               \l  %63 = add nsw i32 %50, 1\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds double, double addrspace(1)* %0, i64 %64\l  %66 = load double, double addrspace(1)* %65, align 8, !tbaa !16\l  %67 = add nsw i32 %54, %4\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds double, double addrspace(1)* %2, i64 %68\l  store double %66, double addrspace(1)* %69, align 8, !tbaa !16\l  br label %70\l}"];
	Node0x46e8400 -> Node0x46e70a0;
	Node0x46e70a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %71 = add nuw nsw i32 %44, 1\l  %72 = icmp eq i32 %71, %9\l  br i1 %72, label %42, label %43, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x46e70a0:s0 -> Node0x46e6af0;
	Node0x46e70a0:s1 -> Node0x46e6cc0;
}
