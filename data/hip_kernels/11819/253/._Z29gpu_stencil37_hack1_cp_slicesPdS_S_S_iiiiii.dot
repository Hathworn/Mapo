digraph "CFG for '_Z29gpu_stencil37_hack1_cp_slicesPdS_S_S_iiiiii' function" {
	label="CFG for '_Z29gpu_stencil37_hack1_cp_slicesPdS_S_S_iiiiii' function";

	Node0x464bb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %12 = mul i32 %11, %9\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = mul i32 %13, %8\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = mul i32 %20, %19\l  %22 = mul nsw i32 %5, %4\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %24 = add i32 %21, %23\l  %25 = icmp sge i32 %24, %5\l  %26 = icmp sgt i32 %8, 0\l  br i1 %26, label %27, label %66\l|{<s0>T|<s1>F}}"];
	Node0x464bb60:s0 -> Node0x464ecb0;
	Node0x464bb60:s1 -> Node0x464ed40;
	Node0x464ecb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%27:\l27:                                               \l  %28 = add nsw i32 %12, 1\l  %29 = icmp sge i32 %28, %6\l  %30 = mul nsw i32 %12, %22\l  %31 = shl i32 %11, 1\l  %32 = mul i32 %31, %22\l  %33 = add i32 %24, %32\l  %34 = add i32 %24, %30\l  %35 = select i1 %29, i1 true, i1 %25\l  %36 = and i32 %8, 1\l  %37 = icmp eq i32 %8, 1\l  br i1 %37, label %40, label %38\l|{<s0>T|<s1>F}}"];
	Node0x464ecb0:s0 -> Node0x464d650;
	Node0x464ecb0:s1 -> Node0x464f5f0;
	Node0x464f5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%38:\l38:                                               \l  %39 = and i32 %8, -2\l  br label %67\l}"];
	Node0x464f5f0 -> Node0x464f7f0;
	Node0x464d650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%40:\l40:                                               \l  %41 = phi i32 [ 0, %27 ], [ %117, %116 ]\l  %42 = icmp eq i32 %36, 0\l  br i1 %42, label %66, label %43\l|{<s0>T|<s1>F}}"];
	Node0x464d650:s0 -> Node0x464ed40;
	Node0x464d650:s1 -> Node0x464fab0;
	Node0x464fab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%43:\l43:                                               \l  %44 = add i32 %41, %14\l  %45 = icmp sge i32 %44, %4\l  %46 = mul i32 %44, %5\l  %47 = add i32 %33, %46\l  %48 = add i32 %34, %46\l  %49 = select i1 %25, i1 true, i1 %45\l  br i1 %49, label %56, label %50\l|{<s0>T|<s1>F}}"];
	Node0x464fab0:s0 -> Node0x464ff70;
	Node0x464fab0:s1 -> Node0x464ffc0;
	Node0x464ffc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%50:\l50:                                               \l  %51 = sext i32 %48 to i64\l  %52 = getelementptr inbounds double, double addrspace(1)* %0, i64 %51\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !7\l  %54 = sext i32 %47 to i64\l  %55 = getelementptr inbounds double, double addrspace(1)* %3, i64 %54\l  store double %53, double addrspace(1)* %55, align 8, !tbaa !7\l  br label %56\l}"];
	Node0x464ffc0 -> Node0x464ff70;
	Node0x464ff70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%56:\l56:                                               \l  %57 = select i1 %35, i1 true, i1 %45\l  br i1 %57, label %66, label %58\l|{<s0>T|<s1>F}}"];
	Node0x464ff70:s0 -> Node0x464ed40;
	Node0x464ff70:s1 -> Node0x4650c80;
	Node0x4650c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%58:\l58:                                               \l  %59 = add nsw i32 %48, %22\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds double, double addrspace(1)* %0, i64 %60\l  %62 = load double, double addrspace(1)* %61, align 8, !tbaa !7\l  %63 = add nsw i32 %47, %22\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds double, double addrspace(1)* %3, i64 %64\l  store double %62, double addrspace(1)* %65, align 8, !tbaa !7\l  br label %66\l}"];
	Node0x4650c80 -> Node0x464ed40;
	Node0x464ed40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%66:\l66:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
	Node0x464f7f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi i32 [ 0, %38 ], [ %117, %116 ]\l  %69 = phi i32 [ 0, %38 ], [ %118, %116 ]\l  %70 = add i32 %68, %14\l  %71 = icmp sge i32 %70, %4\l  %72 = mul i32 %70, %5\l  %73 = add i32 %33, %72\l  %74 = add i32 %34, %72\l  %75 = select i1 %25, i1 true, i1 %71\l  br i1 %75, label %82, label %76\l|{<s0>T|<s1>F}}"];
	Node0x464f7f0:s0 -> Node0x4651c00;
	Node0x464f7f0:s1 -> Node0x4651c50;
	Node0x4651c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%76:\l76:                                               \l  %77 = sext i32 %74 to i64\l  %78 = getelementptr inbounds double, double addrspace(1)* %0, i64 %77\l  %79 = load double, double addrspace(1)* %78, align 8, !tbaa !7\l  %80 = sext i32 %73 to i64\l  %81 = getelementptr inbounds double, double addrspace(1)* %3, i64 %80\l  store double %79, double addrspace(1)* %81, align 8, !tbaa !7\l  br label %82\l}"];
	Node0x4651c50 -> Node0x4651c00;
	Node0x4651c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  %83 = select i1 %35, i1 true, i1 %71\l  br i1 %83, label %92, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4651c00:s0 -> Node0x4652200;
	Node0x4651c00:s1 -> Node0x4652250;
	Node0x4652250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%84:\l84:                                               \l  %85 = add nsw i32 %74, %22\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds double, double addrspace(1)* %0, i64 %86\l  %88 = load double, double addrspace(1)* %87, align 8, !tbaa !7\l  %89 = add nsw i32 %73, %22\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds double, double addrspace(1)* %3, i64 %90\l  store double %88, double addrspace(1)* %91, align 8, !tbaa !7\l  br label %92\l}"];
	Node0x4652250 -> Node0x4652200;
	Node0x4652200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%92:\l92:                                               \l  %93 = or i32 %68, 1\l  %94 = add i32 %93, %14\l  %95 = icmp sge i32 %94, %4\l  %96 = mul i32 %94, %5\l  %97 = add i32 %33, %96\l  %98 = add i32 %34, %96\l  %99 = select i1 %25, i1 true, i1 %95\l  br i1 %99, label %106, label %100\l|{<s0>T|<s1>F}}"];
	Node0x4652200:s0 -> Node0x4652c10;
	Node0x4652200:s1 -> Node0x4652c60;
	Node0x4652c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%100:\l100:                                              \l  %101 = sext i32 %98 to i64\l  %102 = getelementptr inbounds double, double addrspace(1)* %0, i64 %101\l  %103 = load double, double addrspace(1)* %102, align 8, !tbaa !7\l  %104 = sext i32 %97 to i64\l  %105 = getelementptr inbounds double, double addrspace(1)* %3, i64 %104\l  store double %103, double addrspace(1)* %105, align 8, !tbaa !7\l  br label %106\l}"];
	Node0x4652c60 -> Node0x4652c10;
	Node0x4652c10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  %107 = select i1 %35, i1 true, i1 %95\l  br i1 %107, label %116, label %108\l|{<s0>T|<s1>F}}"];
	Node0x4652c10:s0 -> Node0x464f8e0;
	Node0x4652c10:s1 -> Node0x46531a0;
	Node0x46531a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%108:\l108:                                              \l  %109 = add nsw i32 %98, %22\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds double, double addrspace(1)* %0, i64 %110\l  %112 = load double, double addrspace(1)* %111, align 8, !tbaa !7\l  %113 = add nsw i32 %97, %22\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds double, double addrspace(1)* %3, i64 %114\l  store double %112, double addrspace(1)* %115, align 8, !tbaa !7\l  br label %116\l}"];
	Node0x46531a0 -> Node0x464f8e0;
	Node0x464f8e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%116:\l116:                                              \l  %117 = add nuw nsw i32 %68, 2\l  %118 = add i32 %69, 2\l  %119 = icmp eq i32 %118, %39\l  br i1 %119, label %40, label %67, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x464f8e0:s0 -> Node0x464d650;
	Node0x464f8e0:s1 -> Node0x464f7f0;
}
