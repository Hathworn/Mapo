digraph "CFG for '_Z27gpu_stencil37_hack2_cp_colsPdS_S_S_iiiiiiiiiiii' function" {
	label="CFG for '_Z27gpu_stencil37_hack2_cp_colsPdS_S_S_iiiiiiiiiiii' function";

	Node0x59c5360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%16:\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %18 = mul i32 %17, %15\l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr i8, i8 addrspace(4)* %19, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %25 = mul i32 %24, %23\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %27 = mul i32 %26, %13\l  %28 = getelementptr inbounds i8, i8 addrspace(4)* %19, i64 12\l  %29 = bitcast i8 addrspace(4)* %28 to i32 addrspace(4)*\l  %30 = load i32, i32 addrspace(4)* %29, align 4, !tbaa !6\l  %31 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %32 = bitcast i8 addrspace(4)* %31 to i16 addrspace(4)*\l  %33 = load i16, i16 addrspace(4)* %32, align 4, !range !4, !invariant.load !5\l  %34 = zext i16 %33 to i32\l  %35 = udiv i32 %30, %34\l  %36 = mul i32 %35, %34\l  %37 = icmp ugt i32 %30, %36\l  %38 = zext i1 %37 to i32\l  %39 = add i32 %35, %38\l  %40 = add nsw i32 %27, 1\l  %41 = icmp slt i32 %40, %11\l  %42 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %43 = add i32 %25, %42\l  %44 = icmp sge i32 %43, %10\l  %45 = icmp sgt i32 %15, 0\l  br i1 %45, label %46, label %48\l|{<s0>T|<s1>F}}"];
	Node0x59c5360:s0 -> Node0x59c9ba0;
	Node0x59c5360:s1 -> Node0x59c9c30;
	Node0x59c9ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%46:\l46:                                               \l  %47 = shl i32 %8, 1\l  br label %49\l}"];
	Node0x59c9ba0 -> Node0x59c9e00;
	Node0x59c9c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%48:\l48:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
	Node0x59c9e00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = phi i32 [ 0, %46 ], [ %77, %76 ]\l  %51 = add i32 %50, %18\l  %52 = icmp sge i32 %51, %12\l  %53 = mul i32 %51, %39\l  %54 = add i32 %53, %26\l  %55 = mul i32 %47, %54\l  %56 = add i32 %43, %55\l  %57 = mul i32 %51, %5\l  %58 = add i32 %43, %57\l  %59 = mul i32 %58, %4\l  %60 = add i32 %59, %27\l  %61 = select i1 %44, i1 true, i1 %52\l  br i1 %61, label %76, label %62\l|{<s0>T|<s1>F}}"];
	Node0x59c9e00:s0 -> Node0x59ca1e0;
	Node0x59c9e00:s1 -> Node0x59ca9a0;
	Node0x59ca9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%62:\l62:                                               \l  %63 = sext i32 %60 to i64\l  %64 = getelementptr inbounds double, double addrspace(1)* %0, i64 %63\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !16\l  %66 = sext i32 %56 to i64\l  %67 = getelementptr inbounds double, double addrspace(1)* %2, i64 %66\l  store double %65, double addrspace(1)* %67, align 8, !tbaa !16\l  br i1 %41, label %68, label %76\l|{<s0>T|<s1>F}}"];
	Node0x59ca9a0:s0 -> Node0x59cb740;
	Node0x59ca9a0:s1 -> Node0x59ca1e0;
	Node0x59cb740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%68:\l68:                                               \l  %69 = add nsw i32 %60, 1\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds double, double addrspace(1)* %0, i64 %70\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !16\l  %73 = add nsw i32 %56, %8\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds double, double addrspace(1)* %2, i64 %74\l  store double %72, double addrspace(1)* %75, align 8, !tbaa !16\l  br label %76\l}"];
	Node0x59cb740 -> Node0x59ca1e0;
	Node0x59ca1e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %77 = add nuw nsw i32 %50, 1\l  %78 = icmp eq i32 %77, %15\l  br i1 %78, label %48, label %49, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x59ca1e0:s0 -> Node0x59c9c30;
	Node0x59ca1e0:s1 -> Node0x59c9e00;
}
