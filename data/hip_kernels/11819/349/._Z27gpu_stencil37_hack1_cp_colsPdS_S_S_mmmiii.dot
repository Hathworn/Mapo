digraph "CFG for '_Z27gpu_stencil37_hack1_cp_colsPdS_S_S_mmmiii' function" {
	label="CFG for '_Z27gpu_stencil37_hack1_cp_colsPdS_S_S_mmmiii' function";

	Node0x5c3a460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %12 = mul i32 %11, %9\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 2, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = mul i32 %18, %17\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = mul i32 %20, %7\l  %22 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %23 = bitcast i8 addrspace(4)* %22 to i32 addrspace(4)*\l  %24 = load i32, i32 addrspace(4)* %23, align 4, !tbaa !6\l  %25 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 4, !range !4, !invariant.load !5\l  %28 = zext i16 %27 to i32\l  %29 = udiv i32 %24, %28\l  %30 = sext i32 %12 to i64\l  %31 = sext i32 %21 to i64\l  %32 = add nsw i32 %21, 1\l  %33 = sext i32 %32 to i64\l  %34 = icmp ult i64 %33, %5\l  %35 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %36 = add nsw i32 %19, %35\l  %37 = sext i32 %36 to i64\l  %38 = icmp uge i64 %37, %4\l  %39 = icmp sgt i32 %9, 0\l  br i1 %39, label %40, label %54\l|{<s0>T|<s1>F}}"];
	Node0x5c3a460:s0 -> Node0x5c3eb50;
	Node0x5c3a460:s1 -> Node0x5c3ebe0;
	Node0x5c3eb50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%40:\l40:                                               \l  %41 = sext i32 %19 to i64\l  %42 = mul i32 %29, %28\l  %43 = icmp ugt i32 %24, %42\l  %44 = zext i1 %43 to i32\l  %45 = add i32 %29, %44\l  %46 = zext i32 %45 to i64\l  %47 = zext i32 %35 to i64\l  %48 = add nsw i64 %41, %47\l  %49 = shl nuw nsw i64 %46, 1\l  %50 = shl i32 %20, 1\l  %51 = zext i32 %50 to i64\l  %52 = zext i32 %19 to i64\l  %53 = add nuw nsw i64 %52, %47\l  br label %55\l}"];
	Node0x5c3eb50 -> Node0x5c3f3e0;
	Node0x5c3ebe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%54:\l54:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
	Node0x5c3f3e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  %56 = phi i32 [ 0, %40 ], [ %82, %81 ]\l  %57 = add nsw i32 %56, %12\l  %58 = sext i32 %57 to i64\l  %59 = icmp uge i64 %58, %6\l  %60 = zext i32 %56 to i64\l  %61 = add nsw i64 %60, %30\l  %62 = mul i64 %61, %4\l  %63 = add i64 %48, %62\l  %64 = mul i64 %63, %5\l  %65 = add i64 %64, %31\l  %66 = mul i64 %49, %58\l  %67 = add i64 %66, %51\l  %68 = mul i64 %67, %4\l  %69 = add i64 %53, %68\l  %70 = select i1 %38, i1 true, i1 %59\l  br i1 %70, label %81, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5c3f3e0:s0 -> Node0x5c3f7c0;
	Node0x5c3f3e0:s1 -> Node0x5c40320;
	Node0x5c40320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%71:\l71:                                               \l  %72 = getelementptr inbounds double, double addrspace(1)* %0, i64 %65\l  %73 = load double, double addrspace(1)* %72, align 8, !tbaa !16\l  %74 = getelementptr inbounds double, double addrspace(1)* %2, i64 %69\l  store double %73, double addrspace(1)* %74, align 8, !tbaa !16\l  br i1 %34, label %75, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5c40320:s0 -> Node0x5c40db0;
	Node0x5c40320:s1 -> Node0x5c3f7c0;
	Node0x5c40db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%75:\l75:                                               \l  %76 = add i64 %65, 1\l  %77 = getelementptr inbounds double, double addrspace(1)* %0, i64 %76\l  %78 = load double, double addrspace(1)* %77, align 8, !tbaa !16\l  %79 = add i64 %69, %4\l  %80 = getelementptr inbounds double, double addrspace(1)* %2, i64 %79\l  store double %78, double addrspace(1)* %80, align 8, !tbaa !16\l  br label %81\l}"];
	Node0x5c40db0 -> Node0x5c3f7c0;
	Node0x5c3f7c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %82 = add nuw nsw i32 %56, 1\l  %83 = icmp eq i32 %82, %9\l  br i1 %83, label %54, label %55, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5c3f7c0:s0 -> Node0x5c3ebe0;
	Node0x5c3f7c0:s1 -> Node0x5c3f3e0;
}
