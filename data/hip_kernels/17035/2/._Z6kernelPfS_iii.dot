digraph "CFG for '_Z6kernelPfS_iii' function" {
	label="CFG for '_Z6kernelPfS_iii' function";

	Node0x5a25530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 16\l  %24 = bitcast i8 addrspace(4)* %23 to i32 addrspace(4)*\l  %25 = load i32, i32 addrspace(4)* %24, align 8, !tbaa !16\l  %26 = mul i32 %18, %22\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %28 = add i32 %26, %27\l  %29 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %30 = getelementptr i8, i8 addrspace(4)* %7, i64 8\l  %31 = bitcast i8 addrspace(4)* %30 to i16 addrspace(4)*\l  %32 = load i16, i16 addrspace(4)* %31, align 4, !range !4, !invariant.load !5\l  %33 = zext i16 %32 to i32\l  %34 = mul i32 %29, %33\l  %35 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !15\l  %36 = add i32 %34, %35\l  %37 = mul nsw i32 %3, %2\l  %38 = mul nsw i32 %37, %4\l  %39 = icmp slt i32 %17, %2\l  %40 = icmp slt i32 %28, %3\l  %41 = select i1 %39, i1 %40, i1 false\l  %42 = icmp slt i32 %36, %4\l  %43 = select i1 %41, i1 %42, i1 false\l  br i1 %43, label %44, label %130\l|{<s0>T|<s1>F}}"];
	Node0x5a25530:s0 -> Node0x5a2a070;
	Node0x5a25530:s1 -> Node0x5a2a100;
	Node0x5a2a070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%44:\l44:                                               \l  %45 = mul i32 %36, %3\l  %46 = add i32 %45, %28\l  %47 = mul i32 %46, %2\l  %48 = add i32 %47, %17\l  %49 = udiv i32 %14, %11\l  %50 = mul i32 %49, %11\l  %51 = icmp ugt i32 %14, %50\l  %52 = zext i1 %51 to i32\l  %53 = add i32 %49, %52\l  %54 = udiv i32 %25, %22\l  %55 = mul i32 %54, %22\l  %56 = icmp ugt i32 %25, %55\l  %57 = zext i1 %56 to i32\l  %58 = add i32 %54, %57\l  %59 = mul i32 %58, %29\l  %60 = add i32 %59, %18\l  %61 = mul i32 %60, %53\l  %62 = add i32 %61, %6\l  %63 = mul i32 %62, %22\l  %64 = add i32 %63, %27\l  %65 = mul i32 %64, %11\l  %66 = add i32 %65, %16\l  %67 = mul nuw nsw i32 %27, 6\l  %68 = add nuw nsw i32 %67, %16\l  %69 = trunc i32 %68 to i16\l  %70 = freeze i16 %69\l  %71 = udiv i16 %70, 6\l  %72 = zext i16 %71 to i32\l  %73 = mul i16 %71, 6\l  %74 = sub i16 %70, %73\l  %75 = zext i16 %74 to i32\l  %76 = icmp ult i32 %68, 36\l  br i1 %76, label %77, label %93\l|{<s0>T|<s1>F}}"];
	Node0x5a2a070:s0 -> Node0x5a2b5e0;
	Node0x5a2a070:s1 -> Node0x5a2b670;
	Node0x5a2b5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%77:\l77:                                               \l  %78 = icmp sgt i32 %17, -1\l  br i1 %78, label %79, label %90\l|{<s0>T|<s1>F}}"];
	Node0x5a2b5e0:s0 -> Node0x5a2b870;
	Node0x5a2b5e0:s1 -> Node0x5a2b8c0;
	Node0x5a2b870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%79:\l79:                                               \l  %80 = icmp slt i32 %28, %2\l  %81 = icmp sgt i32 %28, -1\l  %82 = and i1 %80, %81\l  %83 = icmp sgt i32 %36, -1\l  %84 = select i1 %82, i1 %83, i1 false\l  br i1 %84, label %85, label %90\l|{<s0>T|<s1>F}}"];
	Node0x5a2b870:s0 -> Node0x5a2bcf0;
	Node0x5a2b870:s1 -> Node0x5a2b8c0;
	Node0x5a2bcf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%85:\l85:                                               \l  %86 = sext i32 %66 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !17,\l... !amdgpu.noclobber !5\l  %89 = fptoui float %88 to i8\l  br label %90\l}"];
	Node0x5a2bcf0 -> Node0x5a2b8c0;
	Node0x5a2b8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%90:\l90:                                               \l  %91 = phi i8 [ %89, %85 ], [ 0, %79 ], [ 0, %77 ]\l  %92 = getelementptr inbounds [6 x [6 x i8]], [6 x [6 x i8]] addrspace(3)*\l... @_ZZ6kernelPfS_iiiE4smem, i32 0, i32 %72, i32 %75\l  store i8 %91, i8 addrspace(3)* %92, align 1, !tbaa !21\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %93\l}"];
	Node0x5a2b8c0 -> Node0x5a2b670;
	Node0x5a2b670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%93:\l93:                                               \l  %94 = icmp ult i16 %69, 12\l  br i1 %94, label %100, label %95\l|{<s0>T|<s1>F}}"];
	Node0x5a2b670:s0 -> Node0x5a2c980;
	Node0x5a2b670:s1 -> Node0x5a2c9d0;
	Node0x5a2c9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%95:\l95:                                               \l  %96 = add nsw i32 %72, -2\l  %97 = getelementptr inbounds [6 x [6 x i8]], [6 x [6 x i8]] addrspace(3)*\l... @_ZZ6kernelPfS_iiiE4smem, i32 0, i32 %96, i32 %75\l  %98 = load i8, i8 addrspace(3)* %97, align 1, !tbaa !21\l  %99 = uitofp i8 %98 to float\l  br label %100\l}"];
	Node0x5a2c9d0 -> Node0x5a2c980;
	Node0x5a2c980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%100:\l100:                                              \l  %101 = phi float [ %99, %95 ], [ 0.000000e+00, %93 ]\l  %102 = icmp ult i16 %69, 6\l  br i1 %102, label %108, label %103\l|{<s0>T|<s1>F}}"];
	Node0x5a2c980:s0 -> Node0x5a2dfa0;
	Node0x5a2c980:s1 -> Node0x5a2dff0;
	Node0x5a2dff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%103:\l103:                                              \l  %104 = add nsw i32 %72, -1\l  %105 = getelementptr inbounds [6 x [6 x i8]], [6 x [6 x i8]] addrspace(3)*\l... @_ZZ6kernelPfS_iiiE4smem, i32 0, i32 %104, i32 %75\l  %106 = load i8, i8 addrspace(3)* %105, align 1, !tbaa !21\l  %107 = uitofp i8 %106 to float\l  br label %108\l}"];
	Node0x5a2dff0 -> Node0x5a2dfa0;
	Node0x5a2dfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%108:\l108:                                              \l  %109 = phi float [ %107, %103 ], [ 0.000000e+00, %100 ]\l  %110 = icmp slt i32 %48, %38\l  br i1 %110, label %111, label %130\l|{<s0>T|<s1>F}}"];
	Node0x5a2dfa0:s0 -> Node0x5a2e530;
	Node0x5a2dfa0:s1 -> Node0x5a2a100;
	Node0x5a2e530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%111:\l111:                                              \l  %112 = fadd contract float %101, %109\l  %113 = getelementptr inbounds [6 x [6 x i8]], [6 x [6 x i8]] addrspace(3)*\l... @_ZZ6kernelPfS_iiiE4smem, i32 0, i32 %72, i32 %75\l  %114 = load i8, i8 addrspace(3)* %113, align 1, !tbaa !21\l  %115 = uitofp i8 %114 to float\l  %116 = fadd contract float %112, %115\l  %117 = add nuw nsw i32 %72, 1\l  %118 = getelementptr inbounds [6 x [6 x i8]], [6 x [6 x i8]] addrspace(3)*\l... @_ZZ6kernelPfS_iiiE4smem, i32 0, i32 %117, i32 %75\l  %119 = load i8, i8 addrspace(3)* %118, align 1, !tbaa !21\l  %120 = uitofp i8 %119 to float\l  %121 = fadd contract float %116, %120\l  %122 = add nuw nsw i32 %72, 2\l  %123 = getelementptr inbounds [6 x [6 x i8]], [6 x [6 x i8]] addrspace(3)*\l... @_ZZ6kernelPfS_iiiE4smem, i32 0, i32 %122, i32 %75\l  %124 = load i8, i8 addrspace(3)* %123, align 1, !tbaa !21\l  %125 = uitofp i8 %124 to float\l  %126 = fadd contract float %121, %125\l  %127 = fdiv contract float %126, 5.000000e+00\l  %128 = sext i32 %48 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %1, i64 %128\l  store float %127, float addrspace(1)* %129, align 4, !tbaa !17\l  br label %130\l}"];
	Node0x5a2e530 -> Node0x5a2a100;
	Node0x5a2a100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%130:\l130:                                              \l  ret void\l}"];
}
