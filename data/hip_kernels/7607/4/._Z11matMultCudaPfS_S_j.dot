digraph "CFG for '_Z11matMultCudaPfS_S_j' function" {
	label="CFG for '_Z11matMultCudaPfS_S_j' function";

	Node0x6121d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp ult i32 %13, %3\l  %23 = icmp ult i32 %21, %3\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %180\l|{<s0>T|<s1>F}}"];
	Node0x6121d90:s0 -> Node0x6125830;
	Node0x6121d90:s1 -> Node0x61258c0;
	Node0x6125830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%25:\l25:                                               \l  %26 = mul i32 %13, %3\l  %27 = and i32 %3, 7\l  %28 = icmp ult i32 %3, 8\l  br i1 %28, label %31, label %29\l|{<s0>T|<s1>F}}"];
	Node0x6125830:s0 -> Node0x6125c10;
	Node0x6125830:s1 -> Node0x6125c60;
	Node0x6125c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%29:\l29:                                               \l  %30 = and i32 %3, -8\l  br label %62\l}"];
	Node0x6125c60 -> Node0x6125e60;
	Node0x6125c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%31:\l31:                                               \l  %32 = phi i32 [ undef, %25 ], [ %176, %62 ]\l  %33 = phi i32 [ 0, %25 ], [ %177, %62 ]\l  %34 = phi i32 [ 0, %25 ], [ %176, %62 ]\l  %35 = icmp eq i32 %27, 0\l  br i1 %35, label %56, label %36\l|{<s0>T|<s1>F}}"];
	Node0x6125c10:s0 -> Node0x61267d0;
	Node0x6125c10:s1 -> Node0x6126860;
	Node0x6126860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = phi i32 [ %53, %36 ], [ %33, %31 ]\l  %38 = phi i32 [ %52, %36 ], [ %34, %31 ]\l  %39 = phi i32 [ %54, %36 ], [ 0, %31 ]\l  %40 = add i32 %37, %26\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = mul i32 %37, %3\l  %45 = add i32 %44, %21\l  %46 = zext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %2, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %49 = fmul contract float %43, %48\l  %50 = sitofp i32 %38 to float\l  %51 = fadd contract float %49, %50\l  %52 = fptosi float %51 to i32\l  %53 = add nuw nsw i32 %37, 1\l  %54 = add i32 %39, 1\l  %55 = icmp eq i32 %54, %27\l  br i1 %55, label %56, label %36, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x6126860:s0 -> Node0x61267d0;
	Node0x6126860:s1 -> Node0x6126860;
	Node0x61267d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%56:\l56:                                               \l  %57 = phi i32 [ %32, %31 ], [ %52, %36 ]\l  %58 = sitofp i32 %57 to float\l  %59 = add i32 %26, %21\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  store float %58, float addrspace(1)* %61, align 4, !tbaa !7\l  br label %180\l}"];
	Node0x61267d0 -> Node0x61258c0;
	Node0x6125e60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%62:\l62:                                               \l  %63 = phi i32 [ 0, %29 ], [ %177, %62 ]\l  %64 = phi i32 [ 0, %29 ], [ %176, %62 ]\l  %65 = phi i32 [ 0, %29 ], [ %178, %62 ]\l  %66 = add i32 %63, %26\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %70 = mul i32 %63, %3\l  %71 = add i32 %70, %21\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %2, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %75 = fmul contract float %69, %74\l  %76 = sitofp i32 %64 to float\l  %77 = fadd contract float %75, %76\l  %78 = fptosi float %77 to i32\l  %79 = or i32 %63, 1\l  %80 = add i32 %79, %26\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %1, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %84 = mul i32 %79, %3\l  %85 = add i32 %84, %21\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %2, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %89 = fmul contract float %83, %88\l  %90 = sitofp i32 %78 to float\l  %91 = fadd contract float %89, %90\l  %92 = fptosi float %91 to i32\l  %93 = or i32 %63, 2\l  %94 = add i32 %93, %26\l  %95 = zext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %1, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %98 = mul i32 %93, %3\l  %99 = add i32 %98, %21\l  %100 = zext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %2, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %103 = fmul contract float %97, %102\l  %104 = sitofp i32 %92 to float\l  %105 = fadd contract float %103, %104\l  %106 = fptosi float %105 to i32\l  %107 = or i32 %63, 3\l  %108 = add i32 %107, %26\l  %109 = zext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %1, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %112 = mul i32 %107, %3\l  %113 = add i32 %112, %21\l  %114 = zext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %2, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %117 = fmul contract float %111, %116\l  %118 = sitofp i32 %106 to float\l  %119 = fadd contract float %117, %118\l  %120 = fptosi float %119 to i32\l  %121 = or i32 %63, 4\l  %122 = add i32 %121, %26\l  %123 = zext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %1, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %126 = mul i32 %121, %3\l  %127 = add i32 %126, %21\l  %128 = zext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %2, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %131 = fmul contract float %125, %130\l  %132 = sitofp i32 %120 to float\l  %133 = fadd contract float %131, %132\l  %134 = fptosi float %133 to i32\l  %135 = or i32 %63, 5\l  %136 = add i32 %135, %26\l  %137 = zext i32 %136 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %1, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %140 = mul i32 %135, %3\l  %141 = add i32 %140, %21\l  %142 = zext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %2, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %145 = fmul contract float %139, %144\l  %146 = sitofp i32 %134 to float\l  %147 = fadd contract float %145, %146\l  %148 = fptosi float %147 to i32\l  %149 = or i32 %63, 6\l  %150 = add i32 %149, %26\l  %151 = zext i32 %150 to i64\l  %152 = getelementptr inbounds float, float addrspace(1)* %1, i64 %151\l  %153 = load float, float addrspace(1)* %152, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %154 = mul i32 %149, %3\l  %155 = add i32 %154, %21\l  %156 = zext i32 %155 to i64\l  %157 = getelementptr inbounds float, float addrspace(1)* %2, i64 %156\l  %158 = load float, float addrspace(1)* %157, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %159 = fmul contract float %153, %158\l  %160 = sitofp i32 %148 to float\l  %161 = fadd contract float %159, %160\l  %162 = fptosi float %161 to i32\l  %163 = or i32 %63, 7\l  %164 = add i32 %163, %26\l  %165 = zext i32 %164 to i64\l  %166 = getelementptr inbounds float, float addrspace(1)* %1, i64 %165\l  %167 = load float, float addrspace(1)* %166, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %168 = mul i32 %163, %3\l  %169 = add i32 %168, %21\l  %170 = zext i32 %169 to i64\l  %171 = getelementptr inbounds float, float addrspace(1)* %2, i64 %170\l  %172 = load float, float addrspace(1)* %171, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %173 = fmul contract float %167, %172\l  %174 = sitofp i32 %162 to float\l  %175 = fadd contract float %173, %174\l  %176 = fptosi float %175 to i32\l  %177 = add nuw nsw i32 %63, 8\l  %178 = add i32 %65, 8\l  %179 = icmp eq i32 %178, %30\l  br i1 %179, label %31, label %62, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x6125e60:s0 -> Node0x6125c10;
	Node0x6125e60:s1 -> Node0x6125e60;
	Node0x61258c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%180:\l180:                                              \l  ret void\l}"];
}
