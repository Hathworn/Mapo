digraph "CFG for '_Z15kTanhDerivativeiPKfPf' function" {
	label="CFG for '_Z15kTanhDerivativeiPKfPf' function";

	Node0x5ebb040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %0\l  br i1 %16, label %17, label %24\l|{<s0>T|<s1>F}}"];
	Node0x5ebb040:s0 -> Node0x5ebc990;
	Node0x5ebb040:s1 -> Node0x5ebd340;
	Node0x5ebc990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%17:\l17:                                               \l  %18 = udiv i32 %12, %9\l  %19 = mul i32 %18, %9\l  %20 = icmp ugt i32 %12, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %9\l  br label %25\l}"];
	Node0x5ebc990 -> Node0x5ebd7c0;
	Node0x5ebd340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x5ebd7c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %15, %17 ], [ %63, %57 ]\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16\l  %30 = tail call float @llvm.fabs.f32(float %29)\l  %31 = fcmp olt float %30, 6.250000e-01\l  br i1 %31, label %32, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5ebd7c0:s0 -> Node0x5ebe960;
	Node0x5ebd7c0:s1 -> Node0x5ebe9f0;
	Node0x5ebe960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%32:\l32:                                               \l  %33 = fmul float %29, %29\l  %34 = tail call float @llvm.fmuladd.f32(float %33, float 0xBF7758E7A0000000,\l... float 0x3F95211920000000)\l  %35 = tail call float @llvm.fmuladd.f32(float %33, float %34, float\l... 0xBFAB8389C0000000)\l  %36 = tail call float @llvm.fmuladd.f32(float %33, float %35, float\l... 0x3FC1107040000000)\l  %37 = tail call float @llvm.fmuladd.f32(float %33, float %36, float\l... 0xBFD5555320000000)\l  %38 = fmul float %30, %37\l  %39 = tail call float @llvm.fmuladd.f32(float %33, float %38, float %30)\l  br label %57\l}"];
	Node0x5ebe960 -> Node0x5ebd8d0;
	Node0x5ebe9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%40:\l40:                                               \l  %41 = fmul float %30, 2.000000e+00\l  %42 = fmul float %41, 0x3FF7154760000000\l  %43 = tail call float @llvm.rint.f32(float %42)\l  %44 = fcmp ogt float %41, 0x40562E4300000000\l  %45 = fneg float %42\l  %46 = tail call float @llvm.fma.f32(float %41, float 0x3FF7154760000000,\l... float %45)\l  %47 = tail call float @llvm.fma.f32(float %41, float 0x3E54AE0BE0000000,\l... float %46)\l  %48 = fsub float %42, %43\l  %49 = fadd float %47, %48\l  %50 = tail call float @llvm.exp2.f32(float %49)\l  %51 = fptosi float %43 to i32\l  %52 = tail call float @llvm.amdgcn.ldexp.f32(float %50, i32 %51)\l  %53 = fadd float %52, 1.000000e+00\l  %54 = select i1 %44, float 0x7FF0000000000000, float %53\l  %55 = tail call float @llvm.amdgcn.rcp.f32(float %54)\l  %56 = tail call float @llvm.fmuladd.f32(float %55, float -2.000000e+00,\l... float 1.000000e+00)\l  br label %57\l}"];
	Node0x5ebe9f0 -> Node0x5ebd8d0;
	Node0x5ebd8d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  %58 = phi float [ %39, %32 ], [ %56, %40 ]\l  %59 = tail call float @llvm.copysign.f32(float %58, float %29)\l  %60 = fmul contract float %59, %59\l  %61 = fsub contract float 1.000000e+00, %60\l  %62 = getelementptr inbounds float, float addrspace(1)* %2, i64 %27\l  store float %61, float addrspace(1)* %62, align 4, !tbaa !16\l  %63 = add i32 %23, %26\l  %64 = icmp slt i32 %63, %0\l  br i1 %64, label %25, label %24, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5ebd8d0:s0 -> Node0x5ebd7c0;
	Node0x5ebd8d0:s1 -> Node0x5ebd340;
}
