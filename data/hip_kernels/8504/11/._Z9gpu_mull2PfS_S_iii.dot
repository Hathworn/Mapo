digraph "CFG for '_Z9gpu_mull2PfS_S_iii' function" {
	label="CFG for '_Z9gpu_mull2PfS_S_iii' function";

	Node0x5537800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = shl i32 %7, 5\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = add i32 %8, %9\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %12 = icmp sgt i32 %5, 0\l  br i1 %12, label %13, label %42\l|{<s0>T|<s1>F}}"];
	Node0x5537800:s0 -> Node0x5539180;
	Node0x5537800:s1 -> Node0x5539210;
	Node0x5539180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%13:\l13:                                               \l  %14 = mul nsw i32 %11, %5\l  %15 = and i32 %5, 7\l  %16 = icmp ult i32 %5, 8\l  br i1 %16, label %19, label %17\l|{<s0>T|<s1>F}}"];
	Node0x5539180:s0 -> Node0x5538080;
	Node0x5539180:s1 -> Node0x5539670;
	Node0x5539670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%17:\l17:                                               \l  %18 = and i32 %5, -8\l  br label %48\l}"];
	Node0x5539670 -> Node0x5539830;
	Node0x5538080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = phi float [ undef, %13 ], [ %146, %48 ]\l  %21 = phi i32 [ 0, %13 ], [ %147, %48 ]\l  %22 = phi float [ 0.000000e+00, %13 ], [ %146, %48 ]\l  %23 = icmp eq i32 %15, 0\l  br i1 %23, label %42, label %24\l|{<s0>T|<s1>F}}"];
	Node0x5538080:s0 -> Node0x5539210;
	Node0x5538080:s1 -> Node0x553aaa0;
	Node0x553aaa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %39, %24 ], [ %21, %19 ]\l  %26 = phi float [ %38, %24 ], [ %22, %19 ]\l  %27 = phi i32 [ %40, %24 ], [ 0, %19 ]\l  %28 = mul nsw i32 %25, %3\l  %29 = add nsw i32 %28, %10\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %33 = add nsw i32 %25, %14\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %37 = fmul contract float %32, %36\l  %38 = fadd contract float %26, %37\l  %39 = add nuw nsw i32 %25, 1\l  %40 = add i32 %27, 1\l  %41 = icmp eq i32 %40, %15\l  br i1 %41, label %42, label %24, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x553aaa0:s0 -> Node0x5539210;
	Node0x553aaa0:s1 -> Node0x553aaa0;
	Node0x5539210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%42:\l42:                                               \l  %43 = phi float [ 0.000000e+00, %6 ], [ %20, %19 ], [ %38, %24 ]\l  %44 = mul nsw i32 %11, %3\l  %45 = add nsw i32 %44, %10\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  store float %43, float addrspace(1)* %47, align 4, !tbaa !5\l  ret void\l}"];
	Node0x5539830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%48:\l48:                                               \l  %49 = phi i32 [ 0, %17 ], [ %147, %48 ]\l  %50 = phi float [ 0.000000e+00, %17 ], [ %146, %48 ]\l  %51 = phi i32 [ 0, %17 ], [ %148, %48 ]\l  %52 = mul nsw i32 %49, %3\l  %53 = add nsw i32 %52, %10\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %57 = add nsw i32 %49, %14\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %2, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %61 = fmul contract float %56, %60\l  %62 = fadd contract float %50, %61\l  %63 = or i32 %49, 1\l  %64 = mul nsw i32 %63, %3\l  %65 = add nsw i32 %64, %10\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %1, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %69 = add nsw i32 %63, %14\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %2, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %73 = fmul contract float %68, %72\l  %74 = fadd contract float %62, %73\l  %75 = or i32 %49, 2\l  %76 = mul nsw i32 %75, %3\l  %77 = add nsw i32 %76, %10\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %1, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %81 = add nsw i32 %75, %14\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %2, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %85 = fmul contract float %80, %84\l  %86 = fadd contract float %74, %85\l  %87 = or i32 %49, 3\l  %88 = mul nsw i32 %87, %3\l  %89 = add nsw i32 %88, %10\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %1, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %93 = add nsw i32 %87, %14\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %2, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %97 = fmul contract float %92, %96\l  %98 = fadd contract float %86, %97\l  %99 = or i32 %49, 4\l  %100 = mul nsw i32 %99, %3\l  %101 = add nsw i32 %100, %10\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %1, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %105 = add nsw i32 %99, %14\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %2, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %109 = fmul contract float %104, %108\l  %110 = fadd contract float %98, %109\l  %111 = or i32 %49, 5\l  %112 = mul nsw i32 %111, %3\l  %113 = add nsw i32 %112, %10\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %1, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %117 = add nsw i32 %111, %14\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %2, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %121 = fmul contract float %116, %120\l  %122 = fadd contract float %110, %121\l  %123 = or i32 %49, 6\l  %124 = mul nsw i32 %123, %3\l  %125 = add nsw i32 %124, %10\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %1, i64 %126\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %129 = add nsw i32 %123, %14\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %2, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %133 = fmul contract float %128, %132\l  %134 = fadd contract float %122, %133\l  %135 = or i32 %49, 7\l  %136 = mul nsw i32 %135, %3\l  %137 = add nsw i32 %136, %10\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %1, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %141 = add nsw i32 %135, %14\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %2, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %145 = fmul contract float %140, %144\l  %146 = fadd contract float %134, %145\l  %147 = add nuw nsw i32 %49, 8\l  %148 = add i32 %51, 8\l  %149 = icmp eq i32 %148, %18\l  br i1 %149, label %19, label %48, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5539830:s0 -> Node0x5538080;
	Node0x5539830:s1 -> Node0x5539830;
}
