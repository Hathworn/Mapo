digraph "CFG for '_Z14propose_kernelPlS_PKlS1_l' function" {
	label="CFG for '_Z14propose_kernelPlS_PKlS1_l' function";

	Node0x53b9750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = zext i32 %14 to i64\l  %16 = icmp slt i64 %15, %4\l  br i1 %16, label %17, label %45\l|{<s0>T|<s1>F}}"];
	Node0x53b9750:s0 -> Node0x53ba210;
	Node0x53b9750:s1 -> Node0x53bb760;
	Node0x53ba210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%17:\l17:                                               \l  %18 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %15\l  %19 = load i64, i64 addrspace(1)* %18, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  %20 = icmp eq i64 %19, -1\l  br i1 %20, label %21, label %45\l|{<s0>T|<s1>F}}"];
	Node0x53ba210:s0 -> Node0x53bc1d0;
	Node0x53ba210:s1 -> Node0x53bb760;
	Node0x53bc1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%21:\l21:                                               \l  %22 = getelementptr inbounds i64, i64 addrspace(1)* %2, i64 %15\l  %23 = bitcast i64 addrspace(1)* %22 to \<2 x i64\> addrspace(1)*\l  %24 = load \<2 x i64\>, \<2 x i64\> addrspace(1)* %23, align 8, !tbaa !7\l  %25 = extractelement \<2 x i64\> %24, i64 0\l  %26 = extractelement \<2 x i64\> %24, i64 1\l  %27 = icmp slt i64 %25, %26\l  br i1 %27, label %30, label %44\l|{<s0>T|<s1>F}}"];
	Node0x53bc1d0:s0 -> Node0x53bd290;
	Node0x53bc1d0:s1 -> Node0x53bd320;
	Node0x53bd460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%28:\l28:                                               \l  %29 = icmp slt i64 %40, %26\l  br i1 %29, label %30, label %43, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x53bd460:s0 -> Node0x53bd290;
	Node0x53bd460:s1 -> Node0x53bd5b0;
	Node0x53bd290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i64 [ %40, %28 ], [ %25, %21 ]\l  %32 = phi i1 [ %38, %28 ], [ false, %21 ]\l  %33 = getelementptr inbounds i64, i64 addrspace(1)* %3, i64 %31\l  %34 = load i64, i64 addrspace(1)* %33, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  %35 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %34\l  %36 = load i64, i64 addrspace(1)* %35, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  %37 = icmp slt i64 %36, 0\l  %38 = select i1 %37, i1 true, i1 %32\l  %39 = icmp eq i64 %36, -2\l  %40 = add nsw i64 %31, 1\l  br i1 %39, label %41, label %28\l|{<s0>T|<s1>F}}"];
	Node0x53bd290:s0 -> Node0x53be020;
	Node0x53bd290:s1 -> Node0x53bd460;
	Node0x53be020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%41:\l41:                                               \l  %42 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %15\l  store i64 %34, i64 addrspace(1)* %42, align 8, !tbaa !7\l  br label %43\l}"];
	Node0x53be020 -> Node0x53bd5b0;
	Node0x53bd5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%43:\l43:                                               \l  br i1 %38, label %45, label %44\l|{<s0>T|<s1>F}}"];
	Node0x53bd5b0:s0 -> Node0x53bb760;
	Node0x53bd5b0:s1 -> Node0x53bd320;
	Node0x53bd320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%44:\l44:                                               \l  store i64 %15, i64 addrspace(1)* %18, align 8, !tbaa !7\l  br label %45\l}"];
	Node0x53bd320 -> Node0x53bb760;
	Node0x53bb760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%45:\l45:                                               \l  ret void\l}"];
}
