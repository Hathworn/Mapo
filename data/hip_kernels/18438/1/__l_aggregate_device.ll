; ModuleID = '../data/hip_kernels/18438/1/main.cu'
source_filename = "../data/hip_kernels/18438/1/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

@_ZZ13__l_aggregatePfS_iiE8MinArray = internal unnamed_addr addrspace(3) global [16 x [16 x float]] undef, align 16

; Function Attrs: convergent mustprogress norecurse nounwind
define protected amdgpu_kernel void @_Z13__l_aggregatePfS_ii(float addrspace(1)* nocapture %0, float addrspace(1)* nocapture readonly %1, i32 %2, i32 %3) local_unnamed_addr #0 {
  %5 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4
  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()
  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()
  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 6
  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*
  %10 = load i16, i16 addrspace(4)* %9, align 2, !range !5, !invariant.load !6
  %11 = zext i16 %10 to i32
  %12 = mul i32 %6, %11
  %13 = add i32 %12, %5
  %14 = add nsw i32 %3, -1
  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4
  %16 = sub i32 %14, %15
  %17 = mul nsw i32 %3, %2
  %18 = icmp slt i32 %13, %2
  %19 = icmp sgt i32 %16, -1
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %1678

21:                                               ; preds = %4
  %22 = mul nsw i32 %13, %3
  %23 = sub nsw i32 15, %15
  %24 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ13__l_aggregatePfS_iiE8MinArray, i32 0, i32 %5, i32 %23
  %25 = icmp eq i32 %5, 0
  %26 = add i32 %12, %15
  %27 = icmp slt i32 %26, %2
  %28 = mul nsw i32 %26, %3
  %29 = getelementptr i8, i8 addrspace(4)* %7, i64 4
  %30 = bitcast i8 addrspace(4)* %29 to i16 addrspace(4)*
  %31 = load i16, i16 addrspace(4)* %30, align 4, !range !5, !invariant.load !6
  %32 = zext i16 %31 to i32
  %33 = select i1 %25, i1 %27, i1 false
  br label %34

34:                                               ; preds = %21, %1674
  %35 = phi i32 [ %16, %21 ], [ %1676, %1674 ]
  %36 = phi i32 [ %14, %21 ], [ %1675, %1674 ]
  %37 = add nsw i32 %35, %22
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38
  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7
  %41 = tail call float @llvm.minnum.f32(float %40, float 1.000000e+08)
  %42 = add nsw i32 %37, %17
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43
  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7
  %46 = tail call float @llvm.minnum.f32(float %45, float %41)
  %47 = add nsw i32 %42, %17
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48
  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7
  %51 = tail call float @llvm.minnum.f32(float %50, float %46)
  %52 = add nsw i32 %47, %17
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53
  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7
  %56 = tail call float @llvm.minnum.f32(float %55, float %51)
  %57 = add nsw i32 %52, %17
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58
  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7
  %61 = tail call float @llvm.minnum.f32(float %60, float %56)
  %62 = add nsw i32 %57, %17
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %63
  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7
  %66 = tail call float @llvm.minnum.f32(float %65, float %61)
  %67 = add nsw i32 %62, %17
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68
  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7
  %71 = tail call float @llvm.minnum.f32(float %70, float %66)
  %72 = add nsw i32 %67, %17
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73
  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7
  %76 = tail call float @llvm.minnum.f32(float %75, float %71)
  %77 = add nsw i32 %72, %17
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78
  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7
  %81 = tail call float @llvm.minnum.f32(float %80, float %76)
  %82 = add nsw i32 %77, %17
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %83
  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !7
  %86 = tail call float @llvm.minnum.f32(float %85, float %81)
  %87 = add nsw i32 %82, %17
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88
  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !7
  %91 = tail call float @llvm.minnum.f32(float %90, float %86)
  %92 = add nsw i32 %87, %17
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds float, float addrspace(1)* %0, i64 %93
  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7
  %96 = tail call float @llvm.minnum.f32(float %95, float %91)
  %97 = add nsw i32 %92, %17
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98
  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7
  %101 = tail call float @llvm.minnum.f32(float %100, float %96)
  %102 = add nsw i32 %97, %17
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds float, float addrspace(1)* %0, i64 %103
  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !7
  %106 = tail call float @llvm.minnum.f32(float %105, float %101)
  %107 = add nsw i32 %102, %17
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds float, float addrspace(1)* %0, i64 %108
  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !7
  %111 = tail call float @llvm.minnum.f32(float %110, float %106)
  %112 = add nsw i32 %107, %17
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds float, float addrspace(1)* %0, i64 %113
  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7
  %116 = tail call float @llvm.minnum.f32(float %115, float %111)
  %117 = add nsw i32 %112, %17
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds float, float addrspace(1)* %0, i64 %118
  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !7
  %121 = tail call float @llvm.minnum.f32(float %120, float %116)
  %122 = add nsw i32 %117, %17
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds float, float addrspace(1)* %0, i64 %123
  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !7
  %126 = tail call float @llvm.minnum.f32(float %125, float %121)
  %127 = add nsw i32 %122, %17
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds float, float addrspace(1)* %0, i64 %128
  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !7
  %131 = tail call float @llvm.minnum.f32(float %130, float %126)
  %132 = add nsw i32 %127, %17
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds float, float addrspace(1)* %0, i64 %133
  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !7
  %136 = tail call float @llvm.minnum.f32(float %135, float %131)
  %137 = add nsw i32 %132, %17
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds float, float addrspace(1)* %0, i64 %138
  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !7
  %141 = tail call float @llvm.minnum.f32(float %140, float %136)
  %142 = add nsw i32 %137, %17
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds float, float addrspace(1)* %0, i64 %143
  %145 = load float, float addrspace(1)* %144, align 4, !tbaa !7
  %146 = tail call float @llvm.minnum.f32(float %145, float %141)
  %147 = add nsw i32 %142, %17
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds float, float addrspace(1)* %0, i64 %148
  %150 = load float, float addrspace(1)* %149, align 4, !tbaa !7
  %151 = tail call float @llvm.minnum.f32(float %150, float %146)
  %152 = add nsw i32 %147, %17
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds float, float addrspace(1)* %0, i64 %153
  %155 = load float, float addrspace(1)* %154, align 4, !tbaa !7
  %156 = tail call float @llvm.minnum.f32(float %155, float %151)
  %157 = add nsw i32 %152, %17
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds float, float addrspace(1)* %0, i64 %158
  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !7
  %161 = tail call float @llvm.minnum.f32(float %160, float %156)
  %162 = add nsw i32 %157, %17
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds float, float addrspace(1)* %0, i64 %163
  %165 = load float, float addrspace(1)* %164, align 4, !tbaa !7
  %166 = tail call float @llvm.minnum.f32(float %165, float %161)
  %167 = add nsw i32 %162, %17
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds float, float addrspace(1)* %0, i64 %168
  %170 = load float, float addrspace(1)* %169, align 4, !tbaa !7
  %171 = tail call float @llvm.minnum.f32(float %170, float %166)
  %172 = add nsw i32 %167, %17
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds float, float addrspace(1)* %0, i64 %173
  %175 = load float, float addrspace(1)* %174, align 4, !tbaa !7
  %176 = tail call float @llvm.minnum.f32(float %175, float %171)
  %177 = add nsw i32 %172, %17
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds float, float addrspace(1)* %0, i64 %178
  %180 = load float, float addrspace(1)* %179, align 4, !tbaa !7
  %181 = tail call float @llvm.minnum.f32(float %180, float %176)
  %182 = add nsw i32 %177, %17
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds float, float addrspace(1)* %0, i64 %183
  %185 = load float, float addrspace(1)* %184, align 4, !tbaa !7
  %186 = tail call float @llvm.minnum.f32(float %185, float %181)
  %187 = add nsw i32 %182, %17
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds float, float addrspace(1)* %0, i64 %188
  %190 = load float, float addrspace(1)* %189, align 4, !tbaa !7
  %191 = tail call float @llvm.minnum.f32(float %190, float %186)
  %192 = add nsw i32 %187, %17
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds float, float addrspace(1)* %0, i64 %193
  %195 = load float, float addrspace(1)* %194, align 4, !tbaa !7
  %196 = tail call float @llvm.minnum.f32(float %195, float %191)
  %197 = add nsw i32 %192, %17
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds float, float addrspace(1)* %0, i64 %198
  %200 = load float, float addrspace(1)* %199, align 4, !tbaa !7
  %201 = tail call float @llvm.minnum.f32(float %200, float %196)
  %202 = add nsw i32 %197, %17
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds float, float addrspace(1)* %0, i64 %203
  %205 = load float, float addrspace(1)* %204, align 4, !tbaa !7
  %206 = tail call float @llvm.minnum.f32(float %205, float %201)
  %207 = add nsw i32 %202, %17
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds float, float addrspace(1)* %0, i64 %208
  %210 = load float, float addrspace(1)* %209, align 4, !tbaa !7
  %211 = tail call float @llvm.minnum.f32(float %210, float %206)
  %212 = add nsw i32 %207, %17
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds float, float addrspace(1)* %0, i64 %213
  %215 = load float, float addrspace(1)* %214, align 4, !tbaa !7
  %216 = tail call float @llvm.minnum.f32(float %215, float %211)
  %217 = add nsw i32 %212, %17
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds float, float addrspace(1)* %0, i64 %218
  %220 = load float, float addrspace(1)* %219, align 4, !tbaa !7
  %221 = tail call float @llvm.minnum.f32(float %220, float %216)
  %222 = add nsw i32 %217, %17
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds float, float addrspace(1)* %0, i64 %223
  %225 = load float, float addrspace(1)* %224, align 4, !tbaa !7
  %226 = tail call float @llvm.minnum.f32(float %225, float %221)
  %227 = add nsw i32 %222, %17
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds float, float addrspace(1)* %0, i64 %228
  %230 = load float, float addrspace(1)* %229, align 4, !tbaa !7
  %231 = tail call float @llvm.minnum.f32(float %230, float %226)
  %232 = add nsw i32 %227, %17
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds float, float addrspace(1)* %0, i64 %233
  %235 = load float, float addrspace(1)* %234, align 4, !tbaa !7
  %236 = tail call float @llvm.minnum.f32(float %235, float %231)
  %237 = add nsw i32 %232, %17
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds float, float addrspace(1)* %0, i64 %238
  %240 = load float, float addrspace(1)* %239, align 4, !tbaa !7
  %241 = tail call float @llvm.minnum.f32(float %240, float %236)
  %242 = add nsw i32 %237, %17
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds float, float addrspace(1)* %0, i64 %243
  %245 = load float, float addrspace(1)* %244, align 4, !tbaa !7
  %246 = tail call float @llvm.minnum.f32(float %245, float %241)
  %247 = add nsw i32 %242, %17
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds float, float addrspace(1)* %0, i64 %248
  %250 = load float, float addrspace(1)* %249, align 4, !tbaa !7
  %251 = tail call float @llvm.minnum.f32(float %250, float %246)
  %252 = add nsw i32 %247, %17
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds float, float addrspace(1)* %0, i64 %253
  %255 = load float, float addrspace(1)* %254, align 4, !tbaa !7
  %256 = tail call float @llvm.minnum.f32(float %255, float %251)
  %257 = add nsw i32 %252, %17
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds float, float addrspace(1)* %0, i64 %258
  %260 = load float, float addrspace(1)* %259, align 4, !tbaa !7
  %261 = tail call float @llvm.minnum.f32(float %260, float %256)
  %262 = add nsw i32 %257, %17
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds float, float addrspace(1)* %0, i64 %263
  %265 = load float, float addrspace(1)* %264, align 4, !tbaa !7
  %266 = tail call float @llvm.minnum.f32(float %265, float %261)
  %267 = add nsw i32 %262, %17
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds float, float addrspace(1)* %0, i64 %268
  %270 = load float, float addrspace(1)* %269, align 4, !tbaa !7
  %271 = tail call float @llvm.minnum.f32(float %270, float %266)
  %272 = add nsw i32 %267, %17
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds float, float addrspace(1)* %0, i64 %273
  %275 = load float, float addrspace(1)* %274, align 4, !tbaa !7
  %276 = tail call float @llvm.minnum.f32(float %275, float %271)
  %277 = add nsw i32 %272, %17
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds float, float addrspace(1)* %0, i64 %278
  %280 = load float, float addrspace(1)* %279, align 4, !tbaa !7
  %281 = tail call float @llvm.minnum.f32(float %280, float %276)
  %282 = add nsw i32 %277, %17
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds float, float addrspace(1)* %0, i64 %283
  %285 = load float, float addrspace(1)* %284, align 4, !tbaa !7
  %286 = tail call float @llvm.minnum.f32(float %285, float %281)
  %287 = add nsw i32 %282, %17
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds float, float addrspace(1)* %0, i64 %288
  %290 = load float, float addrspace(1)* %289, align 4, !tbaa !7
  %291 = tail call float @llvm.minnum.f32(float %290, float %286)
  store float %291, float addrspace(3)* %24, align 4, !tbaa !7
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %292 = icmp sgt i32 %36, 0
  %293 = select i1 %33, i1 %292, i1 false
  br i1 %293, label %294, label %1674

294:                                              ; preds = %34
  %295 = add nsw i32 %36, -15
  br label %296

296:                                              ; preds = %294, %296
  %297 = phi i32 [ %1670, %296 ], [ 15, %294 ]
  %298 = phi i32 [ %302, %296 ], [ %36, %294 ]
  %299 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ13__l_aggregatePfS_iiE8MinArray, i32 0, i32 %15, i32 %297
  %300 = load float, float addrspace(3)* %299, align 4, !tbaa !7
  %301 = fadd contract float %300, 9.000000e+04
  %302 = add nsw i32 %298, -1
  %303 = add i32 %302, %28
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds float, float addrspace(1)* %1, i64 %304
  %306 = load float, float addrspace(1)* %305, align 4, !tbaa !7
  %307 = add i32 %298, %28
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds float, float addrspace(1)* %0, i64 %308
  %310 = load float, float addrspace(1)* %309, align 4, !tbaa !7
  %311 = add nsw i32 %307, %17
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds float, float addrspace(1)* %0, i64 %312
  %314 = load float, float addrspace(1)* %313, align 4, !tbaa !7
  %315 = fadd contract float %314, 5.000000e+00
  %316 = tail call float @llvm.minnum.f32(float %310, float 1.000000e+07)
  %317 = tail call float @llvm.minnum.f32(float %315, float %301)
  %318 = tail call float @llvm.minnum.f32(float %316, float %317)
  %319 = fsub contract float %318, %301
  %320 = fadd contract float %319, 9.000000e+04
  %321 = fadd contract float %306, %320
  %322 = getelementptr inbounds float, float addrspace(1)* %0, i64 %304
  %323 = load float, float addrspace(1)* %322, align 4, !tbaa !7
  %324 = fadd contract float %323, %321
  store float %324, float addrspace(1)* %322, align 4, !tbaa !7
  %325 = add nsw i32 %303, %17
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds float, float addrspace(1)* %1, i64 %326
  %328 = load float, float addrspace(1)* %327, align 4, !tbaa !7
  %329 = add nsw i32 %325, 1
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds float, float addrspace(1)* %0, i64 %330
  %332 = load float, float addrspace(1)* %331, align 4, !tbaa !7
  %333 = sub nsw i32 %329, %17
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds float, float addrspace(1)* %0, i64 %334
  %336 = load float, float addrspace(1)* %335, align 4, !tbaa !7
  %337 = fadd contract float %336, 5.000000e+00
  %338 = add nsw i32 %329, %17
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds float, float addrspace(1)* %0, i64 %339
  %341 = load float, float addrspace(1)* %340, align 4, !tbaa !7
  %342 = fadd contract float %341, 5.000000e+00
  %343 = tail call float @llvm.minnum.f32(float %332, float %337)
  %344 = tail call float @llvm.minnum.f32(float %342, float %301)
  %345 = tail call float @llvm.minnum.f32(float %343, float %344)
  %346 = fsub contract float %345, %301
  %347 = fadd contract float %346, 9.000000e+04
  %348 = fadd contract float %328, %347
  %349 = getelementptr inbounds float, float addrspace(1)* %0, i64 %326
  %350 = load float, float addrspace(1)* %349, align 4, !tbaa !7
  %351 = fadd contract float %350, %348
  store float %351, float addrspace(1)* %349, align 4, !tbaa !7
  %352 = add nsw i32 %325, %17
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds float, float addrspace(1)* %1, i64 %353
  %355 = load float, float addrspace(1)* %354, align 4, !tbaa !7
  %356 = add nsw i32 %352, 1
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds float, float addrspace(1)* %0, i64 %357
  %359 = load float, float addrspace(1)* %358, align 4, !tbaa !7
  %360 = sub nsw i32 %356, %17
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds float, float addrspace(1)* %0, i64 %361
  %363 = load float, float addrspace(1)* %362, align 4, !tbaa !7
  %364 = fadd contract float %363, 5.000000e+00
  %365 = add nsw i32 %356, %17
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds float, float addrspace(1)* %0, i64 %366
  %368 = load float, float addrspace(1)* %367, align 4, !tbaa !7
  %369 = fadd contract float %368, 5.000000e+00
  %370 = tail call float @llvm.minnum.f32(float %359, float %364)
  %371 = tail call float @llvm.minnum.f32(float %369, float %301)
  %372 = tail call float @llvm.minnum.f32(float %370, float %371)
  %373 = fsub contract float %372, %301
  %374 = fadd contract float %373, 9.000000e+04
  %375 = fadd contract float %355, %374
  %376 = getelementptr inbounds float, float addrspace(1)* %0, i64 %353
  %377 = load float, float addrspace(1)* %376, align 4, !tbaa !7
  %378 = fadd contract float %377, %375
  store float %378, float addrspace(1)* %376, align 4, !tbaa !7
  %379 = add nsw i32 %352, %17
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds float, float addrspace(1)* %1, i64 %380
  %382 = load float, float addrspace(1)* %381, align 4, !tbaa !7
  %383 = add nsw i32 %379, 1
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds float, float addrspace(1)* %0, i64 %384
  %386 = load float, float addrspace(1)* %385, align 4, !tbaa !7
  %387 = sub nsw i32 %383, %17
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds float, float addrspace(1)* %0, i64 %388
  %390 = load float, float addrspace(1)* %389, align 4, !tbaa !7
  %391 = fadd contract float %390, 5.000000e+00
  %392 = add nsw i32 %383, %17
  %393 = sext i32 %392 to i64
  %394 = getelementptr inbounds float, float addrspace(1)* %0, i64 %393
  %395 = load float, float addrspace(1)* %394, align 4, !tbaa !7
  %396 = fadd contract float %395, 5.000000e+00
  %397 = tail call float @llvm.minnum.f32(float %386, float %391)
  %398 = tail call float @llvm.minnum.f32(float %396, float %301)
  %399 = tail call float @llvm.minnum.f32(float %397, float %398)
  %400 = fsub contract float %399, %301
  %401 = fadd contract float %400, 9.000000e+04
  %402 = fadd contract float %382, %401
  %403 = getelementptr inbounds float, float addrspace(1)* %0, i64 %380
  %404 = load float, float addrspace(1)* %403, align 4, !tbaa !7
  %405 = fadd contract float %404, %402
  store float %405, float addrspace(1)* %403, align 4, !tbaa !7
  %406 = add nsw i32 %379, %17
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds float, float addrspace(1)* %1, i64 %407
  %409 = load float, float addrspace(1)* %408, align 4, !tbaa !7
  %410 = add nsw i32 %406, 1
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds float, float addrspace(1)* %0, i64 %411
  %413 = load float, float addrspace(1)* %412, align 4, !tbaa !7
  %414 = sub nsw i32 %410, %17
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds float, float addrspace(1)* %0, i64 %415
  %417 = load float, float addrspace(1)* %416, align 4, !tbaa !7
  %418 = fadd contract float %417, 5.000000e+00
  %419 = add nsw i32 %410, %17
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds float, float addrspace(1)* %0, i64 %420
  %422 = load float, float addrspace(1)* %421, align 4, !tbaa !7
  %423 = fadd contract float %422, 5.000000e+00
  %424 = tail call float @llvm.minnum.f32(float %413, float %418)
  %425 = tail call float @llvm.minnum.f32(float %423, float %301)
  %426 = tail call float @llvm.minnum.f32(float %424, float %425)
  %427 = fsub contract float %426, %301
  %428 = fadd contract float %427, 9.000000e+04
  %429 = fadd contract float %409, %428
  %430 = getelementptr inbounds float, float addrspace(1)* %0, i64 %407
  %431 = load float, float addrspace(1)* %430, align 4, !tbaa !7
  %432 = fadd contract float %431, %429
  store float %432, float addrspace(1)* %430, align 4, !tbaa !7
  %433 = add nsw i32 %406, %17
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds float, float addrspace(1)* %1, i64 %434
  %436 = load float, float addrspace(1)* %435, align 4, !tbaa !7
  %437 = add nsw i32 %433, 1
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds float, float addrspace(1)* %0, i64 %438
  %440 = load float, float addrspace(1)* %439, align 4, !tbaa !7
  %441 = sub nsw i32 %437, %17
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds float, float addrspace(1)* %0, i64 %442
  %444 = load float, float addrspace(1)* %443, align 4, !tbaa !7
  %445 = fadd contract float %444, 5.000000e+00
  %446 = add nsw i32 %437, %17
  %447 = sext i32 %446 to i64
  %448 = getelementptr inbounds float, float addrspace(1)* %0, i64 %447
  %449 = load float, float addrspace(1)* %448, align 4, !tbaa !7
  %450 = fadd contract float %449, 5.000000e+00
  %451 = tail call float @llvm.minnum.f32(float %440, float %445)
  %452 = tail call float @llvm.minnum.f32(float %450, float %301)
  %453 = tail call float @llvm.minnum.f32(float %451, float %452)
  %454 = fsub contract float %453, %301
  %455 = fadd contract float %454, 9.000000e+04
  %456 = fadd contract float %436, %455
  %457 = getelementptr inbounds float, float addrspace(1)* %0, i64 %434
  %458 = load float, float addrspace(1)* %457, align 4, !tbaa !7
  %459 = fadd contract float %458, %456
  store float %459, float addrspace(1)* %457, align 4, !tbaa !7
  %460 = add nsw i32 %433, %17
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds float, float addrspace(1)* %1, i64 %461
  %463 = load float, float addrspace(1)* %462, align 4, !tbaa !7
  %464 = add nsw i32 %460, 1
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds float, float addrspace(1)* %0, i64 %465
  %467 = load float, float addrspace(1)* %466, align 4, !tbaa !7
  %468 = sub nsw i32 %464, %17
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds float, float addrspace(1)* %0, i64 %469
  %471 = load float, float addrspace(1)* %470, align 4, !tbaa !7
  %472 = fadd contract float %471, 5.000000e+00
  %473 = add nsw i32 %464, %17
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds float, float addrspace(1)* %0, i64 %474
  %476 = load float, float addrspace(1)* %475, align 4, !tbaa !7
  %477 = fadd contract float %476, 5.000000e+00
  %478 = tail call float @llvm.minnum.f32(float %467, float %472)
  %479 = tail call float @llvm.minnum.f32(float %477, float %301)
  %480 = tail call float @llvm.minnum.f32(float %478, float %479)
  %481 = fsub contract float %480, %301
  %482 = fadd contract float %481, 9.000000e+04
  %483 = fadd contract float %463, %482
  %484 = getelementptr inbounds float, float addrspace(1)* %0, i64 %461
  %485 = load float, float addrspace(1)* %484, align 4, !tbaa !7
  %486 = fadd contract float %485, %483
  store float %486, float addrspace(1)* %484, align 4, !tbaa !7
  %487 = add nsw i32 %460, %17
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds float, float addrspace(1)* %1, i64 %488
  %490 = load float, float addrspace(1)* %489, align 4, !tbaa !7
  %491 = add nsw i32 %487, 1
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds float, float addrspace(1)* %0, i64 %492
  %494 = load float, float addrspace(1)* %493, align 4, !tbaa !7
  %495 = sub nsw i32 %491, %17
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds float, float addrspace(1)* %0, i64 %496
  %498 = load float, float addrspace(1)* %497, align 4, !tbaa !7
  %499 = fadd contract float %498, 5.000000e+00
  %500 = add nsw i32 %491, %17
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds float, float addrspace(1)* %0, i64 %501
  %503 = load float, float addrspace(1)* %502, align 4, !tbaa !7
  %504 = fadd contract float %503, 5.000000e+00
  %505 = tail call float @llvm.minnum.f32(float %494, float %499)
  %506 = tail call float @llvm.minnum.f32(float %504, float %301)
  %507 = tail call float @llvm.minnum.f32(float %505, float %506)
  %508 = fsub contract float %507, %301
  %509 = fadd contract float %508, 9.000000e+04
  %510 = fadd contract float %490, %509
  %511 = getelementptr inbounds float, float addrspace(1)* %0, i64 %488
  %512 = load float, float addrspace(1)* %511, align 4, !tbaa !7
  %513 = fadd contract float %512, %510
  store float %513, float addrspace(1)* %511, align 4, !tbaa !7
  %514 = add nsw i32 %487, %17
  %515 = sext i32 %514 to i64
  %516 = getelementptr inbounds float, float addrspace(1)* %1, i64 %515
  %517 = load float, float addrspace(1)* %516, align 4, !tbaa !7
  %518 = add nsw i32 %514, 1
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds float, float addrspace(1)* %0, i64 %519
  %521 = load float, float addrspace(1)* %520, align 4, !tbaa !7
  %522 = sub nsw i32 %518, %17
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds float, float addrspace(1)* %0, i64 %523
  %525 = load float, float addrspace(1)* %524, align 4, !tbaa !7
  %526 = fadd contract float %525, 5.000000e+00
  %527 = add nsw i32 %518, %17
  %528 = sext i32 %527 to i64
  %529 = getelementptr inbounds float, float addrspace(1)* %0, i64 %528
  %530 = load float, float addrspace(1)* %529, align 4, !tbaa !7
  %531 = fadd contract float %530, 5.000000e+00
  %532 = tail call float @llvm.minnum.f32(float %521, float %526)
  %533 = tail call float @llvm.minnum.f32(float %531, float %301)
  %534 = tail call float @llvm.minnum.f32(float %532, float %533)
  %535 = fsub contract float %534, %301
  %536 = fadd contract float %535, 9.000000e+04
  %537 = fadd contract float %517, %536
  %538 = getelementptr inbounds float, float addrspace(1)* %0, i64 %515
  %539 = load float, float addrspace(1)* %538, align 4, !tbaa !7
  %540 = fadd contract float %539, %537
  store float %540, float addrspace(1)* %538, align 4, !tbaa !7
  %541 = add nsw i32 %514, %17
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds float, float addrspace(1)* %1, i64 %542
  %544 = load float, float addrspace(1)* %543, align 4, !tbaa !7
  %545 = add nsw i32 %541, 1
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds float, float addrspace(1)* %0, i64 %546
  %548 = load float, float addrspace(1)* %547, align 4, !tbaa !7
  %549 = sub nsw i32 %545, %17
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds float, float addrspace(1)* %0, i64 %550
  %552 = load float, float addrspace(1)* %551, align 4, !tbaa !7
  %553 = fadd contract float %552, 5.000000e+00
  %554 = add nsw i32 %545, %17
  %555 = sext i32 %554 to i64
  %556 = getelementptr inbounds float, float addrspace(1)* %0, i64 %555
  %557 = load float, float addrspace(1)* %556, align 4, !tbaa !7
  %558 = fadd contract float %557, 5.000000e+00
  %559 = tail call float @llvm.minnum.f32(float %548, float %553)
  %560 = tail call float @llvm.minnum.f32(float %558, float %301)
  %561 = tail call float @llvm.minnum.f32(float %559, float %560)
  %562 = fsub contract float %561, %301
  %563 = fadd contract float %562, 9.000000e+04
  %564 = fadd contract float %544, %563
  %565 = getelementptr inbounds float, float addrspace(1)* %0, i64 %542
  %566 = load float, float addrspace(1)* %565, align 4, !tbaa !7
  %567 = fadd contract float %566, %564
  store float %567, float addrspace(1)* %565, align 4, !tbaa !7
  %568 = add nsw i32 %541, %17
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds float, float addrspace(1)* %1, i64 %569
  %571 = load float, float addrspace(1)* %570, align 4, !tbaa !7
  %572 = add nsw i32 %568, 1
  %573 = sext i32 %572 to i64
  %574 = getelementptr inbounds float, float addrspace(1)* %0, i64 %573
  %575 = load float, float addrspace(1)* %574, align 4, !tbaa !7
  %576 = sub nsw i32 %572, %17
  %577 = sext i32 %576 to i64
  %578 = getelementptr inbounds float, float addrspace(1)* %0, i64 %577
  %579 = load float, float addrspace(1)* %578, align 4, !tbaa !7
  %580 = fadd contract float %579, 5.000000e+00
  %581 = add nsw i32 %572, %17
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds float, float addrspace(1)* %0, i64 %582
  %584 = load float, float addrspace(1)* %583, align 4, !tbaa !7
  %585 = fadd contract float %584, 5.000000e+00
  %586 = tail call float @llvm.minnum.f32(float %575, float %580)
  %587 = tail call float @llvm.minnum.f32(float %585, float %301)
  %588 = tail call float @llvm.minnum.f32(float %586, float %587)
  %589 = fsub contract float %588, %301
  %590 = fadd contract float %589, 9.000000e+04
  %591 = fadd contract float %571, %590
  %592 = getelementptr inbounds float, float addrspace(1)* %0, i64 %569
  %593 = load float, float addrspace(1)* %592, align 4, !tbaa !7
  %594 = fadd contract float %593, %591
  store float %594, float addrspace(1)* %592, align 4, !tbaa !7
  %595 = add nsw i32 %568, %17
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds float, float addrspace(1)* %1, i64 %596
  %598 = load float, float addrspace(1)* %597, align 4, !tbaa !7
  %599 = add nsw i32 %595, 1
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds float, float addrspace(1)* %0, i64 %600
  %602 = load float, float addrspace(1)* %601, align 4, !tbaa !7
  %603 = sub nsw i32 %599, %17
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds float, float addrspace(1)* %0, i64 %604
  %606 = load float, float addrspace(1)* %605, align 4, !tbaa !7
  %607 = fadd contract float %606, 5.000000e+00
  %608 = add nsw i32 %599, %17
  %609 = sext i32 %608 to i64
  %610 = getelementptr inbounds float, float addrspace(1)* %0, i64 %609
  %611 = load float, float addrspace(1)* %610, align 4, !tbaa !7
  %612 = fadd contract float %611, 5.000000e+00
  %613 = tail call float @llvm.minnum.f32(float %602, float %607)
  %614 = tail call float @llvm.minnum.f32(float %612, float %301)
  %615 = tail call float @llvm.minnum.f32(float %613, float %614)
  %616 = fsub contract float %615, %301
  %617 = fadd contract float %616, 9.000000e+04
  %618 = fadd contract float %598, %617
  %619 = getelementptr inbounds float, float addrspace(1)* %0, i64 %596
  %620 = load float, float addrspace(1)* %619, align 4, !tbaa !7
  %621 = fadd contract float %620, %618
  store float %621, float addrspace(1)* %619, align 4, !tbaa !7
  %622 = add nsw i32 %595, %17
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds float, float addrspace(1)* %1, i64 %623
  %625 = load float, float addrspace(1)* %624, align 4, !tbaa !7
  %626 = add nsw i32 %622, 1
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds float, float addrspace(1)* %0, i64 %627
  %629 = load float, float addrspace(1)* %628, align 4, !tbaa !7
  %630 = sub nsw i32 %626, %17
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds float, float addrspace(1)* %0, i64 %631
  %633 = load float, float addrspace(1)* %632, align 4, !tbaa !7
  %634 = fadd contract float %633, 5.000000e+00
  %635 = add nsw i32 %626, %17
  %636 = sext i32 %635 to i64
  %637 = getelementptr inbounds float, float addrspace(1)* %0, i64 %636
  %638 = load float, float addrspace(1)* %637, align 4, !tbaa !7
  %639 = fadd contract float %638, 5.000000e+00
  %640 = tail call float @llvm.minnum.f32(float %629, float %634)
  %641 = tail call float @llvm.minnum.f32(float %639, float %301)
  %642 = tail call float @llvm.minnum.f32(float %640, float %641)
  %643 = fsub contract float %642, %301
  %644 = fadd contract float %643, 9.000000e+04
  %645 = fadd contract float %625, %644
  %646 = getelementptr inbounds float, float addrspace(1)* %0, i64 %623
  %647 = load float, float addrspace(1)* %646, align 4, !tbaa !7
  %648 = fadd contract float %647, %645
  store float %648, float addrspace(1)* %646, align 4, !tbaa !7
  %649 = add nsw i32 %622, %17
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds float, float addrspace(1)* %1, i64 %650
  %652 = load float, float addrspace(1)* %651, align 4, !tbaa !7
  %653 = add nsw i32 %649, 1
  %654 = sext i32 %653 to i64
  %655 = getelementptr inbounds float, float addrspace(1)* %0, i64 %654
  %656 = load float, float addrspace(1)* %655, align 4, !tbaa !7
  %657 = sub nsw i32 %653, %17
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds float, float addrspace(1)* %0, i64 %658
  %660 = load float, float addrspace(1)* %659, align 4, !tbaa !7
  %661 = fadd contract float %660, 5.000000e+00
  %662 = add nsw i32 %653, %17
  %663 = sext i32 %662 to i64
  %664 = getelementptr inbounds float, float addrspace(1)* %0, i64 %663
  %665 = load float, float addrspace(1)* %664, align 4, !tbaa !7
  %666 = fadd contract float %665, 5.000000e+00
  %667 = tail call float @llvm.minnum.f32(float %656, float %661)
  %668 = tail call float @llvm.minnum.f32(float %666, float %301)
  %669 = tail call float @llvm.minnum.f32(float %667, float %668)
  %670 = fsub contract float %669, %301
  %671 = fadd contract float %670, 9.000000e+04
  %672 = fadd contract float %652, %671
  %673 = getelementptr inbounds float, float addrspace(1)* %0, i64 %650
  %674 = load float, float addrspace(1)* %673, align 4, !tbaa !7
  %675 = fadd contract float %674, %672
  store float %675, float addrspace(1)* %673, align 4, !tbaa !7
  %676 = add nsw i32 %649, %17
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds float, float addrspace(1)* %1, i64 %677
  %679 = load float, float addrspace(1)* %678, align 4, !tbaa !7
  %680 = add nsw i32 %676, 1
  %681 = sext i32 %680 to i64
  %682 = getelementptr inbounds float, float addrspace(1)* %0, i64 %681
  %683 = load float, float addrspace(1)* %682, align 4, !tbaa !7
  %684 = sub nsw i32 %680, %17
  %685 = sext i32 %684 to i64
  %686 = getelementptr inbounds float, float addrspace(1)* %0, i64 %685
  %687 = load float, float addrspace(1)* %686, align 4, !tbaa !7
  %688 = fadd contract float %687, 5.000000e+00
  %689 = add nsw i32 %680, %17
  %690 = sext i32 %689 to i64
  %691 = getelementptr inbounds float, float addrspace(1)* %0, i64 %690
  %692 = load float, float addrspace(1)* %691, align 4, !tbaa !7
  %693 = fadd contract float %692, 5.000000e+00
  %694 = tail call float @llvm.minnum.f32(float %683, float %688)
  %695 = tail call float @llvm.minnum.f32(float %693, float %301)
  %696 = tail call float @llvm.minnum.f32(float %694, float %695)
  %697 = fsub contract float %696, %301
  %698 = fadd contract float %697, 9.000000e+04
  %699 = fadd contract float %679, %698
  %700 = getelementptr inbounds float, float addrspace(1)* %0, i64 %677
  %701 = load float, float addrspace(1)* %700, align 4, !tbaa !7
  %702 = fadd contract float %701, %699
  store float %702, float addrspace(1)* %700, align 4, !tbaa !7
  %703 = add nsw i32 %676, %17
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds float, float addrspace(1)* %1, i64 %704
  %706 = load float, float addrspace(1)* %705, align 4, !tbaa !7
  %707 = add nsw i32 %703, 1
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds float, float addrspace(1)* %0, i64 %708
  %710 = load float, float addrspace(1)* %709, align 4, !tbaa !7
  %711 = sub nsw i32 %707, %17
  %712 = sext i32 %711 to i64
  %713 = getelementptr inbounds float, float addrspace(1)* %0, i64 %712
  %714 = load float, float addrspace(1)* %713, align 4, !tbaa !7
  %715 = fadd contract float %714, 5.000000e+00
  %716 = add nsw i32 %707, %17
  %717 = sext i32 %716 to i64
  %718 = getelementptr inbounds float, float addrspace(1)* %0, i64 %717
  %719 = load float, float addrspace(1)* %718, align 4, !tbaa !7
  %720 = fadd contract float %719, 5.000000e+00
  %721 = tail call float @llvm.minnum.f32(float %710, float %715)
  %722 = tail call float @llvm.minnum.f32(float %720, float %301)
  %723 = tail call float @llvm.minnum.f32(float %721, float %722)
  %724 = fsub contract float %723, %301
  %725 = fadd contract float %724, 9.000000e+04
  %726 = fadd contract float %706, %725
  %727 = getelementptr inbounds float, float addrspace(1)* %0, i64 %704
  %728 = load float, float addrspace(1)* %727, align 4, !tbaa !7
  %729 = fadd contract float %728, %726
  store float %729, float addrspace(1)* %727, align 4, !tbaa !7
  %730 = add nsw i32 %703, %17
  %731 = sext i32 %730 to i64
  %732 = getelementptr inbounds float, float addrspace(1)* %1, i64 %731
  %733 = load float, float addrspace(1)* %732, align 4, !tbaa !7
  %734 = add nsw i32 %730, 1
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds float, float addrspace(1)* %0, i64 %735
  %737 = load float, float addrspace(1)* %736, align 4, !tbaa !7
  %738 = sub nsw i32 %734, %17
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds float, float addrspace(1)* %0, i64 %739
  %741 = load float, float addrspace(1)* %740, align 4, !tbaa !7
  %742 = fadd contract float %741, 5.000000e+00
  %743 = add nsw i32 %734, %17
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds float, float addrspace(1)* %0, i64 %744
  %746 = load float, float addrspace(1)* %745, align 4, !tbaa !7
  %747 = fadd contract float %746, 5.000000e+00
  %748 = tail call float @llvm.minnum.f32(float %737, float %742)
  %749 = tail call float @llvm.minnum.f32(float %747, float %301)
  %750 = tail call float @llvm.minnum.f32(float %748, float %749)
  %751 = fsub contract float %750, %301
  %752 = fadd contract float %751, 9.000000e+04
  %753 = fadd contract float %733, %752
  %754 = getelementptr inbounds float, float addrspace(1)* %0, i64 %731
  %755 = load float, float addrspace(1)* %754, align 4, !tbaa !7
  %756 = fadd contract float %755, %753
  store float %756, float addrspace(1)* %754, align 4, !tbaa !7
  %757 = add nsw i32 %730, %17
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds float, float addrspace(1)* %1, i64 %758
  %760 = load float, float addrspace(1)* %759, align 4, !tbaa !7
  %761 = add nsw i32 %757, 1
  %762 = sext i32 %761 to i64
  %763 = getelementptr inbounds float, float addrspace(1)* %0, i64 %762
  %764 = load float, float addrspace(1)* %763, align 4, !tbaa !7
  %765 = sub nsw i32 %761, %17
  %766 = sext i32 %765 to i64
  %767 = getelementptr inbounds float, float addrspace(1)* %0, i64 %766
  %768 = load float, float addrspace(1)* %767, align 4, !tbaa !7
  %769 = fadd contract float %768, 5.000000e+00
  %770 = add nsw i32 %761, %17
  %771 = sext i32 %770 to i64
  %772 = getelementptr inbounds float, float addrspace(1)* %0, i64 %771
  %773 = load float, float addrspace(1)* %772, align 4, !tbaa !7
  %774 = fadd contract float %773, 5.000000e+00
  %775 = tail call float @llvm.minnum.f32(float %764, float %769)
  %776 = tail call float @llvm.minnum.f32(float %774, float %301)
  %777 = tail call float @llvm.minnum.f32(float %775, float %776)
  %778 = fsub contract float %777, %301
  %779 = fadd contract float %778, 9.000000e+04
  %780 = fadd contract float %760, %779
  %781 = getelementptr inbounds float, float addrspace(1)* %0, i64 %758
  %782 = load float, float addrspace(1)* %781, align 4, !tbaa !7
  %783 = fadd contract float %782, %780
  store float %783, float addrspace(1)* %781, align 4, !tbaa !7
  %784 = add nsw i32 %757, %17
  %785 = sext i32 %784 to i64
  %786 = getelementptr inbounds float, float addrspace(1)* %1, i64 %785
  %787 = load float, float addrspace(1)* %786, align 4, !tbaa !7
  %788 = add nsw i32 %784, 1
  %789 = sext i32 %788 to i64
  %790 = getelementptr inbounds float, float addrspace(1)* %0, i64 %789
  %791 = load float, float addrspace(1)* %790, align 4, !tbaa !7
  %792 = sub nsw i32 %788, %17
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds float, float addrspace(1)* %0, i64 %793
  %795 = load float, float addrspace(1)* %794, align 4, !tbaa !7
  %796 = fadd contract float %795, 5.000000e+00
  %797 = add nsw i32 %788, %17
  %798 = sext i32 %797 to i64
  %799 = getelementptr inbounds float, float addrspace(1)* %0, i64 %798
  %800 = load float, float addrspace(1)* %799, align 4, !tbaa !7
  %801 = fadd contract float %800, 5.000000e+00
  %802 = tail call float @llvm.minnum.f32(float %791, float %796)
  %803 = tail call float @llvm.minnum.f32(float %801, float %301)
  %804 = tail call float @llvm.minnum.f32(float %802, float %803)
  %805 = fsub contract float %804, %301
  %806 = fadd contract float %805, 9.000000e+04
  %807 = fadd contract float %787, %806
  %808 = getelementptr inbounds float, float addrspace(1)* %0, i64 %785
  %809 = load float, float addrspace(1)* %808, align 4, !tbaa !7
  %810 = fadd contract float %809, %807
  store float %810, float addrspace(1)* %808, align 4, !tbaa !7
  %811 = add nsw i32 %784, %17
  %812 = sext i32 %811 to i64
  %813 = getelementptr inbounds float, float addrspace(1)* %1, i64 %812
  %814 = load float, float addrspace(1)* %813, align 4, !tbaa !7
  %815 = add nsw i32 %811, 1
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds float, float addrspace(1)* %0, i64 %816
  %818 = load float, float addrspace(1)* %817, align 4, !tbaa !7
  %819 = sub nsw i32 %815, %17
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds float, float addrspace(1)* %0, i64 %820
  %822 = load float, float addrspace(1)* %821, align 4, !tbaa !7
  %823 = fadd contract float %822, 5.000000e+00
  %824 = add nsw i32 %815, %17
  %825 = sext i32 %824 to i64
  %826 = getelementptr inbounds float, float addrspace(1)* %0, i64 %825
  %827 = load float, float addrspace(1)* %826, align 4, !tbaa !7
  %828 = fadd contract float %827, 5.000000e+00
  %829 = tail call float @llvm.minnum.f32(float %818, float %823)
  %830 = tail call float @llvm.minnum.f32(float %828, float %301)
  %831 = tail call float @llvm.minnum.f32(float %829, float %830)
  %832 = fsub contract float %831, %301
  %833 = fadd contract float %832, 9.000000e+04
  %834 = fadd contract float %814, %833
  %835 = getelementptr inbounds float, float addrspace(1)* %0, i64 %812
  %836 = load float, float addrspace(1)* %835, align 4, !tbaa !7
  %837 = fadd contract float %836, %834
  store float %837, float addrspace(1)* %835, align 4, !tbaa !7
  %838 = add nsw i32 %811, %17
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds float, float addrspace(1)* %1, i64 %839
  %841 = load float, float addrspace(1)* %840, align 4, !tbaa !7
  %842 = add nsw i32 %838, 1
  %843 = sext i32 %842 to i64
  %844 = getelementptr inbounds float, float addrspace(1)* %0, i64 %843
  %845 = load float, float addrspace(1)* %844, align 4, !tbaa !7
  %846 = sub nsw i32 %842, %17
  %847 = sext i32 %846 to i64
  %848 = getelementptr inbounds float, float addrspace(1)* %0, i64 %847
  %849 = load float, float addrspace(1)* %848, align 4, !tbaa !7
  %850 = fadd contract float %849, 5.000000e+00
  %851 = add nsw i32 %842, %17
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds float, float addrspace(1)* %0, i64 %852
  %854 = load float, float addrspace(1)* %853, align 4, !tbaa !7
  %855 = fadd contract float %854, 5.000000e+00
  %856 = tail call float @llvm.minnum.f32(float %845, float %850)
  %857 = tail call float @llvm.minnum.f32(float %855, float %301)
  %858 = tail call float @llvm.minnum.f32(float %856, float %857)
  %859 = fsub contract float %858, %301
  %860 = fadd contract float %859, 9.000000e+04
  %861 = fadd contract float %841, %860
  %862 = getelementptr inbounds float, float addrspace(1)* %0, i64 %839
  %863 = load float, float addrspace(1)* %862, align 4, !tbaa !7
  %864 = fadd contract float %863, %861
  store float %864, float addrspace(1)* %862, align 4, !tbaa !7
  %865 = add nsw i32 %838, %17
  %866 = sext i32 %865 to i64
  %867 = getelementptr inbounds float, float addrspace(1)* %1, i64 %866
  %868 = load float, float addrspace(1)* %867, align 4, !tbaa !7
  %869 = add nsw i32 %865, 1
  %870 = sext i32 %869 to i64
  %871 = getelementptr inbounds float, float addrspace(1)* %0, i64 %870
  %872 = load float, float addrspace(1)* %871, align 4, !tbaa !7
  %873 = sub nsw i32 %869, %17
  %874 = sext i32 %873 to i64
  %875 = getelementptr inbounds float, float addrspace(1)* %0, i64 %874
  %876 = load float, float addrspace(1)* %875, align 4, !tbaa !7
  %877 = fadd contract float %876, 5.000000e+00
  %878 = add nsw i32 %869, %17
  %879 = sext i32 %878 to i64
  %880 = getelementptr inbounds float, float addrspace(1)* %0, i64 %879
  %881 = load float, float addrspace(1)* %880, align 4, !tbaa !7
  %882 = fadd contract float %881, 5.000000e+00
  %883 = tail call float @llvm.minnum.f32(float %872, float %877)
  %884 = tail call float @llvm.minnum.f32(float %882, float %301)
  %885 = tail call float @llvm.minnum.f32(float %883, float %884)
  %886 = fsub contract float %885, %301
  %887 = fadd contract float %886, 9.000000e+04
  %888 = fadd contract float %868, %887
  %889 = getelementptr inbounds float, float addrspace(1)* %0, i64 %866
  %890 = load float, float addrspace(1)* %889, align 4, !tbaa !7
  %891 = fadd contract float %890, %888
  store float %891, float addrspace(1)* %889, align 4, !tbaa !7
  %892 = add nsw i32 %865, %17
  %893 = sext i32 %892 to i64
  %894 = getelementptr inbounds float, float addrspace(1)* %1, i64 %893
  %895 = load float, float addrspace(1)* %894, align 4, !tbaa !7
  %896 = add nsw i32 %892, 1
  %897 = sext i32 %896 to i64
  %898 = getelementptr inbounds float, float addrspace(1)* %0, i64 %897
  %899 = load float, float addrspace(1)* %898, align 4, !tbaa !7
  %900 = sub nsw i32 %896, %17
  %901 = sext i32 %900 to i64
  %902 = getelementptr inbounds float, float addrspace(1)* %0, i64 %901
  %903 = load float, float addrspace(1)* %902, align 4, !tbaa !7
  %904 = fadd contract float %903, 5.000000e+00
  %905 = add nsw i32 %896, %17
  %906 = sext i32 %905 to i64
  %907 = getelementptr inbounds float, float addrspace(1)* %0, i64 %906
  %908 = load float, float addrspace(1)* %907, align 4, !tbaa !7
  %909 = fadd contract float %908, 5.000000e+00
  %910 = tail call float @llvm.minnum.f32(float %899, float %904)
  %911 = tail call float @llvm.minnum.f32(float %909, float %301)
  %912 = tail call float @llvm.minnum.f32(float %910, float %911)
  %913 = fsub contract float %912, %301
  %914 = fadd contract float %913, 9.000000e+04
  %915 = fadd contract float %895, %914
  %916 = getelementptr inbounds float, float addrspace(1)* %0, i64 %893
  %917 = load float, float addrspace(1)* %916, align 4, !tbaa !7
  %918 = fadd contract float %917, %915
  store float %918, float addrspace(1)* %916, align 4, !tbaa !7
  %919 = add nsw i32 %892, %17
  %920 = sext i32 %919 to i64
  %921 = getelementptr inbounds float, float addrspace(1)* %1, i64 %920
  %922 = load float, float addrspace(1)* %921, align 4, !tbaa !7
  %923 = add nsw i32 %919, 1
  %924 = sext i32 %923 to i64
  %925 = getelementptr inbounds float, float addrspace(1)* %0, i64 %924
  %926 = load float, float addrspace(1)* %925, align 4, !tbaa !7
  %927 = sub nsw i32 %923, %17
  %928 = sext i32 %927 to i64
  %929 = getelementptr inbounds float, float addrspace(1)* %0, i64 %928
  %930 = load float, float addrspace(1)* %929, align 4, !tbaa !7
  %931 = fadd contract float %930, 5.000000e+00
  %932 = add nsw i32 %923, %17
  %933 = sext i32 %932 to i64
  %934 = getelementptr inbounds float, float addrspace(1)* %0, i64 %933
  %935 = load float, float addrspace(1)* %934, align 4, !tbaa !7
  %936 = fadd contract float %935, 5.000000e+00
  %937 = tail call float @llvm.minnum.f32(float %926, float %931)
  %938 = tail call float @llvm.minnum.f32(float %936, float %301)
  %939 = tail call float @llvm.minnum.f32(float %937, float %938)
  %940 = fsub contract float %939, %301
  %941 = fadd contract float %940, 9.000000e+04
  %942 = fadd contract float %922, %941
  %943 = getelementptr inbounds float, float addrspace(1)* %0, i64 %920
  %944 = load float, float addrspace(1)* %943, align 4, !tbaa !7
  %945 = fadd contract float %944, %942
  store float %945, float addrspace(1)* %943, align 4, !tbaa !7
  %946 = add nsw i32 %919, %17
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds float, float addrspace(1)* %1, i64 %947
  %949 = load float, float addrspace(1)* %948, align 4, !tbaa !7
  %950 = add nsw i32 %946, 1
  %951 = sext i32 %950 to i64
  %952 = getelementptr inbounds float, float addrspace(1)* %0, i64 %951
  %953 = load float, float addrspace(1)* %952, align 4, !tbaa !7
  %954 = sub nsw i32 %950, %17
  %955 = sext i32 %954 to i64
  %956 = getelementptr inbounds float, float addrspace(1)* %0, i64 %955
  %957 = load float, float addrspace(1)* %956, align 4, !tbaa !7
  %958 = fadd contract float %957, 5.000000e+00
  %959 = add nsw i32 %950, %17
  %960 = sext i32 %959 to i64
  %961 = getelementptr inbounds float, float addrspace(1)* %0, i64 %960
  %962 = load float, float addrspace(1)* %961, align 4, !tbaa !7
  %963 = fadd contract float %962, 5.000000e+00
  %964 = tail call float @llvm.minnum.f32(float %953, float %958)
  %965 = tail call float @llvm.minnum.f32(float %963, float %301)
  %966 = tail call float @llvm.minnum.f32(float %964, float %965)
  %967 = fsub contract float %966, %301
  %968 = fadd contract float %967, 9.000000e+04
  %969 = fadd contract float %949, %968
  %970 = getelementptr inbounds float, float addrspace(1)* %0, i64 %947
  %971 = load float, float addrspace(1)* %970, align 4, !tbaa !7
  %972 = fadd contract float %971, %969
  store float %972, float addrspace(1)* %970, align 4, !tbaa !7
  %973 = add nsw i32 %946, %17
  %974 = sext i32 %973 to i64
  %975 = getelementptr inbounds float, float addrspace(1)* %1, i64 %974
  %976 = load float, float addrspace(1)* %975, align 4, !tbaa !7
  %977 = add nsw i32 %973, 1
  %978 = sext i32 %977 to i64
  %979 = getelementptr inbounds float, float addrspace(1)* %0, i64 %978
  %980 = load float, float addrspace(1)* %979, align 4, !tbaa !7
  %981 = sub nsw i32 %977, %17
  %982 = sext i32 %981 to i64
  %983 = getelementptr inbounds float, float addrspace(1)* %0, i64 %982
  %984 = load float, float addrspace(1)* %983, align 4, !tbaa !7
  %985 = fadd contract float %984, 5.000000e+00
  %986 = add nsw i32 %977, %17
  %987 = sext i32 %986 to i64
  %988 = getelementptr inbounds float, float addrspace(1)* %0, i64 %987
  %989 = load float, float addrspace(1)* %988, align 4, !tbaa !7
  %990 = fadd contract float %989, 5.000000e+00
  %991 = tail call float @llvm.minnum.f32(float %980, float %985)
  %992 = tail call float @llvm.minnum.f32(float %990, float %301)
  %993 = tail call float @llvm.minnum.f32(float %991, float %992)
  %994 = fsub contract float %993, %301
  %995 = fadd contract float %994, 9.000000e+04
  %996 = fadd contract float %976, %995
  %997 = getelementptr inbounds float, float addrspace(1)* %0, i64 %974
  %998 = load float, float addrspace(1)* %997, align 4, !tbaa !7
  %999 = fadd contract float %998, %996
  store float %999, float addrspace(1)* %997, align 4, !tbaa !7
  %1000 = add nsw i32 %973, %17
  %1001 = sext i32 %1000 to i64
  %1002 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1001
  %1003 = load float, float addrspace(1)* %1002, align 4, !tbaa !7
  %1004 = add nsw i32 %1000, 1
  %1005 = sext i32 %1004 to i64
  %1006 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1005
  %1007 = load float, float addrspace(1)* %1006, align 4, !tbaa !7
  %1008 = sub nsw i32 %1004, %17
  %1009 = sext i32 %1008 to i64
  %1010 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1009
  %1011 = load float, float addrspace(1)* %1010, align 4, !tbaa !7
  %1012 = fadd contract float %1011, 5.000000e+00
  %1013 = add nsw i32 %1004, %17
  %1014 = sext i32 %1013 to i64
  %1015 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1014
  %1016 = load float, float addrspace(1)* %1015, align 4, !tbaa !7
  %1017 = fadd contract float %1016, 5.000000e+00
  %1018 = tail call float @llvm.minnum.f32(float %1007, float %1012)
  %1019 = tail call float @llvm.minnum.f32(float %1017, float %301)
  %1020 = tail call float @llvm.minnum.f32(float %1018, float %1019)
  %1021 = fsub contract float %1020, %301
  %1022 = fadd contract float %1021, 9.000000e+04
  %1023 = fadd contract float %1003, %1022
  %1024 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1001
  %1025 = load float, float addrspace(1)* %1024, align 4, !tbaa !7
  %1026 = fadd contract float %1025, %1023
  store float %1026, float addrspace(1)* %1024, align 4, !tbaa !7
  %1027 = add nsw i32 %1000, %17
  %1028 = sext i32 %1027 to i64
  %1029 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1028
  %1030 = load float, float addrspace(1)* %1029, align 4, !tbaa !7
  %1031 = add nsw i32 %1027, 1
  %1032 = sext i32 %1031 to i64
  %1033 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1032
  %1034 = load float, float addrspace(1)* %1033, align 4, !tbaa !7
  %1035 = sub nsw i32 %1031, %17
  %1036 = sext i32 %1035 to i64
  %1037 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1036
  %1038 = load float, float addrspace(1)* %1037, align 4, !tbaa !7
  %1039 = fadd contract float %1038, 5.000000e+00
  %1040 = add nsw i32 %1031, %17
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1041
  %1043 = load float, float addrspace(1)* %1042, align 4, !tbaa !7
  %1044 = fadd contract float %1043, 5.000000e+00
  %1045 = tail call float @llvm.minnum.f32(float %1034, float %1039)
  %1046 = tail call float @llvm.minnum.f32(float %1044, float %301)
  %1047 = tail call float @llvm.minnum.f32(float %1045, float %1046)
  %1048 = fsub contract float %1047, %301
  %1049 = fadd contract float %1048, 9.000000e+04
  %1050 = fadd contract float %1030, %1049
  %1051 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1028
  %1052 = load float, float addrspace(1)* %1051, align 4, !tbaa !7
  %1053 = fadd contract float %1052, %1050
  store float %1053, float addrspace(1)* %1051, align 4, !tbaa !7
  %1054 = add nsw i32 %1027, %17
  %1055 = sext i32 %1054 to i64
  %1056 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1055
  %1057 = load float, float addrspace(1)* %1056, align 4, !tbaa !7
  %1058 = add nsw i32 %1054, 1
  %1059 = sext i32 %1058 to i64
  %1060 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1059
  %1061 = load float, float addrspace(1)* %1060, align 4, !tbaa !7
  %1062 = sub nsw i32 %1058, %17
  %1063 = sext i32 %1062 to i64
  %1064 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1063
  %1065 = load float, float addrspace(1)* %1064, align 4, !tbaa !7
  %1066 = fadd contract float %1065, 5.000000e+00
  %1067 = add nsw i32 %1058, %17
  %1068 = sext i32 %1067 to i64
  %1069 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1068
  %1070 = load float, float addrspace(1)* %1069, align 4, !tbaa !7
  %1071 = fadd contract float %1070, 5.000000e+00
  %1072 = tail call float @llvm.minnum.f32(float %1061, float %1066)
  %1073 = tail call float @llvm.minnum.f32(float %1071, float %301)
  %1074 = tail call float @llvm.minnum.f32(float %1072, float %1073)
  %1075 = fsub contract float %1074, %301
  %1076 = fadd contract float %1075, 9.000000e+04
  %1077 = fadd contract float %1057, %1076
  %1078 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1055
  %1079 = load float, float addrspace(1)* %1078, align 4, !tbaa !7
  %1080 = fadd contract float %1079, %1077
  store float %1080, float addrspace(1)* %1078, align 4, !tbaa !7
  %1081 = add nsw i32 %1054, %17
  %1082 = sext i32 %1081 to i64
  %1083 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1082
  %1084 = load float, float addrspace(1)* %1083, align 4, !tbaa !7
  %1085 = add nsw i32 %1081, 1
  %1086 = sext i32 %1085 to i64
  %1087 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1086
  %1088 = load float, float addrspace(1)* %1087, align 4, !tbaa !7
  %1089 = sub nsw i32 %1085, %17
  %1090 = sext i32 %1089 to i64
  %1091 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1090
  %1092 = load float, float addrspace(1)* %1091, align 4, !tbaa !7
  %1093 = fadd contract float %1092, 5.000000e+00
  %1094 = add nsw i32 %1085, %17
  %1095 = sext i32 %1094 to i64
  %1096 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1095
  %1097 = load float, float addrspace(1)* %1096, align 4, !tbaa !7
  %1098 = fadd contract float %1097, 5.000000e+00
  %1099 = tail call float @llvm.minnum.f32(float %1088, float %1093)
  %1100 = tail call float @llvm.minnum.f32(float %1098, float %301)
  %1101 = tail call float @llvm.minnum.f32(float %1099, float %1100)
  %1102 = fsub contract float %1101, %301
  %1103 = fadd contract float %1102, 9.000000e+04
  %1104 = fadd contract float %1084, %1103
  %1105 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1082
  %1106 = load float, float addrspace(1)* %1105, align 4, !tbaa !7
  %1107 = fadd contract float %1106, %1104
  store float %1107, float addrspace(1)* %1105, align 4, !tbaa !7
  %1108 = add nsw i32 %1081, %17
  %1109 = sext i32 %1108 to i64
  %1110 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1109
  %1111 = load float, float addrspace(1)* %1110, align 4, !tbaa !7
  %1112 = add nsw i32 %1108, 1
  %1113 = sext i32 %1112 to i64
  %1114 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1113
  %1115 = load float, float addrspace(1)* %1114, align 4, !tbaa !7
  %1116 = sub nsw i32 %1112, %17
  %1117 = sext i32 %1116 to i64
  %1118 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1117
  %1119 = load float, float addrspace(1)* %1118, align 4, !tbaa !7
  %1120 = fadd contract float %1119, 5.000000e+00
  %1121 = add nsw i32 %1112, %17
  %1122 = sext i32 %1121 to i64
  %1123 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1122
  %1124 = load float, float addrspace(1)* %1123, align 4, !tbaa !7
  %1125 = fadd contract float %1124, 5.000000e+00
  %1126 = tail call float @llvm.minnum.f32(float %1115, float %1120)
  %1127 = tail call float @llvm.minnum.f32(float %1125, float %301)
  %1128 = tail call float @llvm.minnum.f32(float %1126, float %1127)
  %1129 = fsub contract float %1128, %301
  %1130 = fadd contract float %1129, 9.000000e+04
  %1131 = fadd contract float %1111, %1130
  %1132 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1109
  %1133 = load float, float addrspace(1)* %1132, align 4, !tbaa !7
  %1134 = fadd contract float %1133, %1131
  store float %1134, float addrspace(1)* %1132, align 4, !tbaa !7
  %1135 = add nsw i32 %1108, %17
  %1136 = sext i32 %1135 to i64
  %1137 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1136
  %1138 = load float, float addrspace(1)* %1137, align 4, !tbaa !7
  %1139 = add nsw i32 %1135, 1
  %1140 = sext i32 %1139 to i64
  %1141 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1140
  %1142 = load float, float addrspace(1)* %1141, align 4, !tbaa !7
  %1143 = sub nsw i32 %1139, %17
  %1144 = sext i32 %1143 to i64
  %1145 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1144
  %1146 = load float, float addrspace(1)* %1145, align 4, !tbaa !7
  %1147 = fadd contract float %1146, 5.000000e+00
  %1148 = add nsw i32 %1139, %17
  %1149 = sext i32 %1148 to i64
  %1150 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1149
  %1151 = load float, float addrspace(1)* %1150, align 4, !tbaa !7
  %1152 = fadd contract float %1151, 5.000000e+00
  %1153 = tail call float @llvm.minnum.f32(float %1142, float %1147)
  %1154 = tail call float @llvm.minnum.f32(float %1152, float %301)
  %1155 = tail call float @llvm.minnum.f32(float %1153, float %1154)
  %1156 = fsub contract float %1155, %301
  %1157 = fadd contract float %1156, 9.000000e+04
  %1158 = fadd contract float %1138, %1157
  %1159 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1136
  %1160 = load float, float addrspace(1)* %1159, align 4, !tbaa !7
  %1161 = fadd contract float %1160, %1158
  store float %1161, float addrspace(1)* %1159, align 4, !tbaa !7
  %1162 = add nsw i32 %1135, %17
  %1163 = sext i32 %1162 to i64
  %1164 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1163
  %1165 = load float, float addrspace(1)* %1164, align 4, !tbaa !7
  %1166 = add nsw i32 %1162, 1
  %1167 = sext i32 %1166 to i64
  %1168 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1167
  %1169 = load float, float addrspace(1)* %1168, align 4, !tbaa !7
  %1170 = sub nsw i32 %1166, %17
  %1171 = sext i32 %1170 to i64
  %1172 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1171
  %1173 = load float, float addrspace(1)* %1172, align 4, !tbaa !7
  %1174 = fadd contract float %1173, 5.000000e+00
  %1175 = add nsw i32 %1166, %17
  %1176 = sext i32 %1175 to i64
  %1177 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1176
  %1178 = load float, float addrspace(1)* %1177, align 4, !tbaa !7
  %1179 = fadd contract float %1178, 5.000000e+00
  %1180 = tail call float @llvm.minnum.f32(float %1169, float %1174)
  %1181 = tail call float @llvm.minnum.f32(float %1179, float %301)
  %1182 = tail call float @llvm.minnum.f32(float %1180, float %1181)
  %1183 = fsub contract float %1182, %301
  %1184 = fadd contract float %1183, 9.000000e+04
  %1185 = fadd contract float %1165, %1184
  %1186 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1163
  %1187 = load float, float addrspace(1)* %1186, align 4, !tbaa !7
  %1188 = fadd contract float %1187, %1185
  store float %1188, float addrspace(1)* %1186, align 4, !tbaa !7
  %1189 = add nsw i32 %1162, %17
  %1190 = sext i32 %1189 to i64
  %1191 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1190
  %1192 = load float, float addrspace(1)* %1191, align 4, !tbaa !7
  %1193 = add nsw i32 %1189, 1
  %1194 = sext i32 %1193 to i64
  %1195 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1194
  %1196 = load float, float addrspace(1)* %1195, align 4, !tbaa !7
  %1197 = sub nsw i32 %1193, %17
  %1198 = sext i32 %1197 to i64
  %1199 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1198
  %1200 = load float, float addrspace(1)* %1199, align 4, !tbaa !7
  %1201 = fadd contract float %1200, 5.000000e+00
  %1202 = add nsw i32 %1193, %17
  %1203 = sext i32 %1202 to i64
  %1204 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1203
  %1205 = load float, float addrspace(1)* %1204, align 4, !tbaa !7
  %1206 = fadd contract float %1205, 5.000000e+00
  %1207 = tail call float @llvm.minnum.f32(float %1196, float %1201)
  %1208 = tail call float @llvm.minnum.f32(float %1206, float %301)
  %1209 = tail call float @llvm.minnum.f32(float %1207, float %1208)
  %1210 = fsub contract float %1209, %301
  %1211 = fadd contract float %1210, 9.000000e+04
  %1212 = fadd contract float %1192, %1211
  %1213 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1190
  %1214 = load float, float addrspace(1)* %1213, align 4, !tbaa !7
  %1215 = fadd contract float %1214, %1212
  store float %1215, float addrspace(1)* %1213, align 4, !tbaa !7
  %1216 = add nsw i32 %1189, %17
  %1217 = sext i32 %1216 to i64
  %1218 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1217
  %1219 = load float, float addrspace(1)* %1218, align 4, !tbaa !7
  %1220 = add nsw i32 %1216, 1
  %1221 = sext i32 %1220 to i64
  %1222 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1221
  %1223 = load float, float addrspace(1)* %1222, align 4, !tbaa !7
  %1224 = sub nsw i32 %1220, %17
  %1225 = sext i32 %1224 to i64
  %1226 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1225
  %1227 = load float, float addrspace(1)* %1226, align 4, !tbaa !7
  %1228 = fadd contract float %1227, 5.000000e+00
  %1229 = add nsw i32 %1220, %17
  %1230 = sext i32 %1229 to i64
  %1231 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1230
  %1232 = load float, float addrspace(1)* %1231, align 4, !tbaa !7
  %1233 = fadd contract float %1232, 5.000000e+00
  %1234 = tail call float @llvm.minnum.f32(float %1223, float %1228)
  %1235 = tail call float @llvm.minnum.f32(float %1233, float %301)
  %1236 = tail call float @llvm.minnum.f32(float %1234, float %1235)
  %1237 = fsub contract float %1236, %301
  %1238 = fadd contract float %1237, 9.000000e+04
  %1239 = fadd contract float %1219, %1238
  %1240 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1217
  %1241 = load float, float addrspace(1)* %1240, align 4, !tbaa !7
  %1242 = fadd contract float %1241, %1239
  store float %1242, float addrspace(1)* %1240, align 4, !tbaa !7
  %1243 = add nsw i32 %1216, %17
  %1244 = sext i32 %1243 to i64
  %1245 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1244
  %1246 = load float, float addrspace(1)* %1245, align 4, !tbaa !7
  %1247 = add nsw i32 %1243, 1
  %1248 = sext i32 %1247 to i64
  %1249 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1248
  %1250 = load float, float addrspace(1)* %1249, align 4, !tbaa !7
  %1251 = sub nsw i32 %1247, %17
  %1252 = sext i32 %1251 to i64
  %1253 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1252
  %1254 = load float, float addrspace(1)* %1253, align 4, !tbaa !7
  %1255 = fadd contract float %1254, 5.000000e+00
  %1256 = add nsw i32 %1247, %17
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1257
  %1259 = load float, float addrspace(1)* %1258, align 4, !tbaa !7
  %1260 = fadd contract float %1259, 5.000000e+00
  %1261 = tail call float @llvm.minnum.f32(float %1250, float %1255)
  %1262 = tail call float @llvm.minnum.f32(float %1260, float %301)
  %1263 = tail call float @llvm.minnum.f32(float %1261, float %1262)
  %1264 = fsub contract float %1263, %301
  %1265 = fadd contract float %1264, 9.000000e+04
  %1266 = fadd contract float %1246, %1265
  %1267 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1244
  %1268 = load float, float addrspace(1)* %1267, align 4, !tbaa !7
  %1269 = fadd contract float %1268, %1266
  store float %1269, float addrspace(1)* %1267, align 4, !tbaa !7
  %1270 = add nsw i32 %1243, %17
  %1271 = sext i32 %1270 to i64
  %1272 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1271
  %1273 = load float, float addrspace(1)* %1272, align 4, !tbaa !7
  %1274 = add nsw i32 %1270, 1
  %1275 = sext i32 %1274 to i64
  %1276 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1275
  %1277 = load float, float addrspace(1)* %1276, align 4, !tbaa !7
  %1278 = sub nsw i32 %1274, %17
  %1279 = sext i32 %1278 to i64
  %1280 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1279
  %1281 = load float, float addrspace(1)* %1280, align 4, !tbaa !7
  %1282 = fadd contract float %1281, 5.000000e+00
  %1283 = add nsw i32 %1274, %17
  %1284 = sext i32 %1283 to i64
  %1285 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1284
  %1286 = load float, float addrspace(1)* %1285, align 4, !tbaa !7
  %1287 = fadd contract float %1286, 5.000000e+00
  %1288 = tail call float @llvm.minnum.f32(float %1277, float %1282)
  %1289 = tail call float @llvm.minnum.f32(float %1287, float %301)
  %1290 = tail call float @llvm.minnum.f32(float %1288, float %1289)
  %1291 = fsub contract float %1290, %301
  %1292 = fadd contract float %1291, 9.000000e+04
  %1293 = fadd contract float %1273, %1292
  %1294 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1271
  %1295 = load float, float addrspace(1)* %1294, align 4, !tbaa !7
  %1296 = fadd contract float %1295, %1293
  store float %1296, float addrspace(1)* %1294, align 4, !tbaa !7
  %1297 = add nsw i32 %1270, %17
  %1298 = sext i32 %1297 to i64
  %1299 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1298
  %1300 = load float, float addrspace(1)* %1299, align 4, !tbaa !7
  %1301 = add nsw i32 %1297, 1
  %1302 = sext i32 %1301 to i64
  %1303 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1302
  %1304 = load float, float addrspace(1)* %1303, align 4, !tbaa !7
  %1305 = sub nsw i32 %1301, %17
  %1306 = sext i32 %1305 to i64
  %1307 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1306
  %1308 = load float, float addrspace(1)* %1307, align 4, !tbaa !7
  %1309 = fadd contract float %1308, 5.000000e+00
  %1310 = add nsw i32 %1301, %17
  %1311 = sext i32 %1310 to i64
  %1312 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1311
  %1313 = load float, float addrspace(1)* %1312, align 4, !tbaa !7
  %1314 = fadd contract float %1313, 5.000000e+00
  %1315 = tail call float @llvm.minnum.f32(float %1304, float %1309)
  %1316 = tail call float @llvm.minnum.f32(float %1314, float %301)
  %1317 = tail call float @llvm.minnum.f32(float %1315, float %1316)
  %1318 = fsub contract float %1317, %301
  %1319 = fadd contract float %1318, 9.000000e+04
  %1320 = fadd contract float %1300, %1319
  %1321 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1298
  %1322 = load float, float addrspace(1)* %1321, align 4, !tbaa !7
  %1323 = fadd contract float %1322, %1320
  store float %1323, float addrspace(1)* %1321, align 4, !tbaa !7
  %1324 = add nsw i32 %1297, %17
  %1325 = sext i32 %1324 to i64
  %1326 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1325
  %1327 = load float, float addrspace(1)* %1326, align 4, !tbaa !7
  %1328 = add nsw i32 %1324, 1
  %1329 = sext i32 %1328 to i64
  %1330 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1329
  %1331 = load float, float addrspace(1)* %1330, align 4, !tbaa !7
  %1332 = sub nsw i32 %1328, %17
  %1333 = sext i32 %1332 to i64
  %1334 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1333
  %1335 = load float, float addrspace(1)* %1334, align 4, !tbaa !7
  %1336 = fadd contract float %1335, 5.000000e+00
  %1337 = add nsw i32 %1328, %17
  %1338 = sext i32 %1337 to i64
  %1339 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1338
  %1340 = load float, float addrspace(1)* %1339, align 4, !tbaa !7
  %1341 = fadd contract float %1340, 5.000000e+00
  %1342 = tail call float @llvm.minnum.f32(float %1331, float %1336)
  %1343 = tail call float @llvm.minnum.f32(float %1341, float %301)
  %1344 = tail call float @llvm.minnum.f32(float %1342, float %1343)
  %1345 = fsub contract float %1344, %301
  %1346 = fadd contract float %1345, 9.000000e+04
  %1347 = fadd contract float %1327, %1346
  %1348 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1325
  %1349 = load float, float addrspace(1)* %1348, align 4, !tbaa !7
  %1350 = fadd contract float %1349, %1347
  store float %1350, float addrspace(1)* %1348, align 4, !tbaa !7
  %1351 = add nsw i32 %1324, %17
  %1352 = sext i32 %1351 to i64
  %1353 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1352
  %1354 = load float, float addrspace(1)* %1353, align 4, !tbaa !7
  %1355 = add nsw i32 %1351, 1
  %1356 = sext i32 %1355 to i64
  %1357 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1356
  %1358 = load float, float addrspace(1)* %1357, align 4, !tbaa !7
  %1359 = sub nsw i32 %1355, %17
  %1360 = sext i32 %1359 to i64
  %1361 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1360
  %1362 = load float, float addrspace(1)* %1361, align 4, !tbaa !7
  %1363 = fadd contract float %1362, 5.000000e+00
  %1364 = add nsw i32 %1355, %17
  %1365 = sext i32 %1364 to i64
  %1366 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1365
  %1367 = load float, float addrspace(1)* %1366, align 4, !tbaa !7
  %1368 = fadd contract float %1367, 5.000000e+00
  %1369 = tail call float @llvm.minnum.f32(float %1358, float %1363)
  %1370 = tail call float @llvm.minnum.f32(float %1368, float %301)
  %1371 = tail call float @llvm.minnum.f32(float %1369, float %1370)
  %1372 = fsub contract float %1371, %301
  %1373 = fadd contract float %1372, 9.000000e+04
  %1374 = fadd contract float %1354, %1373
  %1375 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1352
  %1376 = load float, float addrspace(1)* %1375, align 4, !tbaa !7
  %1377 = fadd contract float %1376, %1374
  store float %1377, float addrspace(1)* %1375, align 4, !tbaa !7
  %1378 = add nsw i32 %1351, %17
  %1379 = sext i32 %1378 to i64
  %1380 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1379
  %1381 = load float, float addrspace(1)* %1380, align 4, !tbaa !7
  %1382 = add nsw i32 %1378, 1
  %1383 = sext i32 %1382 to i64
  %1384 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1383
  %1385 = load float, float addrspace(1)* %1384, align 4, !tbaa !7
  %1386 = sub nsw i32 %1382, %17
  %1387 = sext i32 %1386 to i64
  %1388 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1387
  %1389 = load float, float addrspace(1)* %1388, align 4, !tbaa !7
  %1390 = fadd contract float %1389, 5.000000e+00
  %1391 = add nsw i32 %1382, %17
  %1392 = sext i32 %1391 to i64
  %1393 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1392
  %1394 = load float, float addrspace(1)* %1393, align 4, !tbaa !7
  %1395 = fadd contract float %1394, 5.000000e+00
  %1396 = tail call float @llvm.minnum.f32(float %1385, float %1390)
  %1397 = tail call float @llvm.minnum.f32(float %1395, float %301)
  %1398 = tail call float @llvm.minnum.f32(float %1396, float %1397)
  %1399 = fsub contract float %1398, %301
  %1400 = fadd contract float %1399, 9.000000e+04
  %1401 = fadd contract float %1381, %1400
  %1402 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1379
  %1403 = load float, float addrspace(1)* %1402, align 4, !tbaa !7
  %1404 = fadd contract float %1403, %1401
  store float %1404, float addrspace(1)* %1402, align 4, !tbaa !7
  %1405 = add nsw i32 %1378, %17
  %1406 = sext i32 %1405 to i64
  %1407 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1406
  %1408 = load float, float addrspace(1)* %1407, align 4, !tbaa !7
  %1409 = add nsw i32 %1405, 1
  %1410 = sext i32 %1409 to i64
  %1411 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1410
  %1412 = load float, float addrspace(1)* %1411, align 4, !tbaa !7
  %1413 = sub nsw i32 %1409, %17
  %1414 = sext i32 %1413 to i64
  %1415 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1414
  %1416 = load float, float addrspace(1)* %1415, align 4, !tbaa !7
  %1417 = fadd contract float %1416, 5.000000e+00
  %1418 = add nsw i32 %1409, %17
  %1419 = sext i32 %1418 to i64
  %1420 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1419
  %1421 = load float, float addrspace(1)* %1420, align 4, !tbaa !7
  %1422 = fadd contract float %1421, 5.000000e+00
  %1423 = tail call float @llvm.minnum.f32(float %1412, float %1417)
  %1424 = tail call float @llvm.minnum.f32(float %1422, float %301)
  %1425 = tail call float @llvm.minnum.f32(float %1423, float %1424)
  %1426 = fsub contract float %1425, %301
  %1427 = fadd contract float %1426, 9.000000e+04
  %1428 = fadd contract float %1408, %1427
  %1429 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1406
  %1430 = load float, float addrspace(1)* %1429, align 4, !tbaa !7
  %1431 = fadd contract float %1430, %1428
  store float %1431, float addrspace(1)* %1429, align 4, !tbaa !7
  %1432 = add nsw i32 %1405, %17
  %1433 = sext i32 %1432 to i64
  %1434 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1433
  %1435 = load float, float addrspace(1)* %1434, align 4, !tbaa !7
  %1436 = add nsw i32 %1432, 1
  %1437 = sext i32 %1436 to i64
  %1438 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1437
  %1439 = load float, float addrspace(1)* %1438, align 4, !tbaa !7
  %1440 = sub nsw i32 %1436, %17
  %1441 = sext i32 %1440 to i64
  %1442 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1441
  %1443 = load float, float addrspace(1)* %1442, align 4, !tbaa !7
  %1444 = fadd contract float %1443, 5.000000e+00
  %1445 = add nsw i32 %1436, %17
  %1446 = sext i32 %1445 to i64
  %1447 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1446
  %1448 = load float, float addrspace(1)* %1447, align 4, !tbaa !7
  %1449 = fadd contract float %1448, 5.000000e+00
  %1450 = tail call float @llvm.minnum.f32(float %1439, float %1444)
  %1451 = tail call float @llvm.minnum.f32(float %1449, float %301)
  %1452 = tail call float @llvm.minnum.f32(float %1450, float %1451)
  %1453 = fsub contract float %1452, %301
  %1454 = fadd contract float %1453, 9.000000e+04
  %1455 = fadd contract float %1435, %1454
  %1456 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1433
  %1457 = load float, float addrspace(1)* %1456, align 4, !tbaa !7
  %1458 = fadd contract float %1457, %1455
  store float %1458, float addrspace(1)* %1456, align 4, !tbaa !7
  %1459 = add nsw i32 %1432, %17
  %1460 = sext i32 %1459 to i64
  %1461 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1460
  %1462 = load float, float addrspace(1)* %1461, align 4, !tbaa !7
  %1463 = add nsw i32 %1459, 1
  %1464 = sext i32 %1463 to i64
  %1465 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1464
  %1466 = load float, float addrspace(1)* %1465, align 4, !tbaa !7
  %1467 = sub nsw i32 %1463, %17
  %1468 = sext i32 %1467 to i64
  %1469 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1468
  %1470 = load float, float addrspace(1)* %1469, align 4, !tbaa !7
  %1471 = fadd contract float %1470, 5.000000e+00
  %1472 = add nsw i32 %1463, %17
  %1473 = sext i32 %1472 to i64
  %1474 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1473
  %1475 = load float, float addrspace(1)* %1474, align 4, !tbaa !7
  %1476 = fadd contract float %1475, 5.000000e+00
  %1477 = tail call float @llvm.minnum.f32(float %1466, float %1471)
  %1478 = tail call float @llvm.minnum.f32(float %1476, float %301)
  %1479 = tail call float @llvm.minnum.f32(float %1477, float %1478)
  %1480 = fsub contract float %1479, %301
  %1481 = fadd contract float %1480, 9.000000e+04
  %1482 = fadd contract float %1462, %1481
  %1483 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1460
  %1484 = load float, float addrspace(1)* %1483, align 4, !tbaa !7
  %1485 = fadd contract float %1484, %1482
  store float %1485, float addrspace(1)* %1483, align 4, !tbaa !7
  %1486 = add nsw i32 %1459, %17
  %1487 = sext i32 %1486 to i64
  %1488 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1487
  %1489 = load float, float addrspace(1)* %1488, align 4, !tbaa !7
  %1490 = add nsw i32 %1486, 1
  %1491 = sext i32 %1490 to i64
  %1492 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1491
  %1493 = load float, float addrspace(1)* %1492, align 4, !tbaa !7
  %1494 = sub nsw i32 %1490, %17
  %1495 = sext i32 %1494 to i64
  %1496 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1495
  %1497 = load float, float addrspace(1)* %1496, align 4, !tbaa !7
  %1498 = fadd contract float %1497, 5.000000e+00
  %1499 = add nsw i32 %1490, %17
  %1500 = sext i32 %1499 to i64
  %1501 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1500
  %1502 = load float, float addrspace(1)* %1501, align 4, !tbaa !7
  %1503 = fadd contract float %1502, 5.000000e+00
  %1504 = tail call float @llvm.minnum.f32(float %1493, float %1498)
  %1505 = tail call float @llvm.minnum.f32(float %1503, float %301)
  %1506 = tail call float @llvm.minnum.f32(float %1504, float %1505)
  %1507 = fsub contract float %1506, %301
  %1508 = fadd contract float %1507, 9.000000e+04
  %1509 = fadd contract float %1489, %1508
  %1510 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1487
  %1511 = load float, float addrspace(1)* %1510, align 4, !tbaa !7
  %1512 = fadd contract float %1511, %1509
  store float %1512, float addrspace(1)* %1510, align 4, !tbaa !7
  %1513 = add nsw i32 %1486, %17
  %1514 = sext i32 %1513 to i64
  %1515 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1514
  %1516 = load float, float addrspace(1)* %1515, align 4, !tbaa !7
  %1517 = add nsw i32 %1513, 1
  %1518 = sext i32 %1517 to i64
  %1519 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1518
  %1520 = load float, float addrspace(1)* %1519, align 4, !tbaa !7
  %1521 = sub nsw i32 %1517, %17
  %1522 = sext i32 %1521 to i64
  %1523 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1522
  %1524 = load float, float addrspace(1)* %1523, align 4, !tbaa !7
  %1525 = fadd contract float %1524, 5.000000e+00
  %1526 = add nsw i32 %1517, %17
  %1527 = sext i32 %1526 to i64
  %1528 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1527
  %1529 = load float, float addrspace(1)* %1528, align 4, !tbaa !7
  %1530 = fadd contract float %1529, 5.000000e+00
  %1531 = tail call float @llvm.minnum.f32(float %1520, float %1525)
  %1532 = tail call float @llvm.minnum.f32(float %1530, float %301)
  %1533 = tail call float @llvm.minnum.f32(float %1531, float %1532)
  %1534 = fsub contract float %1533, %301
  %1535 = fadd contract float %1534, 9.000000e+04
  %1536 = fadd contract float %1516, %1535
  %1537 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1514
  %1538 = load float, float addrspace(1)* %1537, align 4, !tbaa !7
  %1539 = fadd contract float %1538, %1536
  store float %1539, float addrspace(1)* %1537, align 4, !tbaa !7
  %1540 = add nsw i32 %1513, %17
  %1541 = sext i32 %1540 to i64
  %1542 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1541
  %1543 = load float, float addrspace(1)* %1542, align 4, !tbaa !7
  %1544 = add nsw i32 %1540, 1
  %1545 = sext i32 %1544 to i64
  %1546 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1545
  %1547 = load float, float addrspace(1)* %1546, align 4, !tbaa !7
  %1548 = sub nsw i32 %1544, %17
  %1549 = sext i32 %1548 to i64
  %1550 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1549
  %1551 = load float, float addrspace(1)* %1550, align 4, !tbaa !7
  %1552 = fadd contract float %1551, 5.000000e+00
  %1553 = add nsw i32 %1544, %17
  %1554 = sext i32 %1553 to i64
  %1555 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1554
  %1556 = load float, float addrspace(1)* %1555, align 4, !tbaa !7
  %1557 = fadd contract float %1556, 5.000000e+00
  %1558 = tail call float @llvm.minnum.f32(float %1547, float %1552)
  %1559 = tail call float @llvm.minnum.f32(float %1557, float %301)
  %1560 = tail call float @llvm.minnum.f32(float %1558, float %1559)
  %1561 = fsub contract float %1560, %301
  %1562 = fadd contract float %1561, 9.000000e+04
  %1563 = fadd contract float %1543, %1562
  %1564 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1541
  %1565 = load float, float addrspace(1)* %1564, align 4, !tbaa !7
  %1566 = fadd contract float %1565, %1563
  store float %1566, float addrspace(1)* %1564, align 4, !tbaa !7
  %1567 = add nsw i32 %1540, %17
  %1568 = sext i32 %1567 to i64
  %1569 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1568
  %1570 = load float, float addrspace(1)* %1569, align 4, !tbaa !7
  %1571 = add nsw i32 %1567, 1
  %1572 = sext i32 %1571 to i64
  %1573 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1572
  %1574 = load float, float addrspace(1)* %1573, align 4, !tbaa !7
  %1575 = sub nsw i32 %1571, %17
  %1576 = sext i32 %1575 to i64
  %1577 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1576
  %1578 = load float, float addrspace(1)* %1577, align 4, !tbaa !7
  %1579 = fadd contract float %1578, 5.000000e+00
  %1580 = add nsw i32 %1571, %17
  %1581 = sext i32 %1580 to i64
  %1582 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1581
  %1583 = load float, float addrspace(1)* %1582, align 4, !tbaa !7
  %1584 = fadd contract float %1583, 5.000000e+00
  %1585 = tail call float @llvm.minnum.f32(float %1574, float %1579)
  %1586 = tail call float @llvm.minnum.f32(float %1584, float %301)
  %1587 = tail call float @llvm.minnum.f32(float %1585, float %1586)
  %1588 = fsub contract float %1587, %301
  %1589 = fadd contract float %1588, 9.000000e+04
  %1590 = fadd contract float %1570, %1589
  %1591 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1568
  %1592 = load float, float addrspace(1)* %1591, align 4, !tbaa !7
  %1593 = fadd contract float %1592, %1590
  store float %1593, float addrspace(1)* %1591, align 4, !tbaa !7
  %1594 = add nsw i32 %1567, %17
  %1595 = sext i32 %1594 to i64
  %1596 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1595
  %1597 = load float, float addrspace(1)* %1596, align 4, !tbaa !7
  %1598 = add nsw i32 %1594, 1
  %1599 = sext i32 %1598 to i64
  %1600 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1599
  %1601 = load float, float addrspace(1)* %1600, align 4, !tbaa !7
  %1602 = sub nsw i32 %1598, %17
  %1603 = sext i32 %1602 to i64
  %1604 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1603
  %1605 = load float, float addrspace(1)* %1604, align 4, !tbaa !7
  %1606 = fadd contract float %1605, 5.000000e+00
  %1607 = add nsw i32 %1598, %17
  %1608 = sext i32 %1607 to i64
  %1609 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1608
  %1610 = load float, float addrspace(1)* %1609, align 4, !tbaa !7
  %1611 = fadd contract float %1610, 5.000000e+00
  %1612 = tail call float @llvm.minnum.f32(float %1601, float %1606)
  %1613 = tail call float @llvm.minnum.f32(float %1611, float %301)
  %1614 = tail call float @llvm.minnum.f32(float %1612, float %1613)
  %1615 = fsub contract float %1614, %301
  %1616 = fadd contract float %1615, 9.000000e+04
  %1617 = fadd contract float %1597, %1616
  %1618 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1595
  %1619 = load float, float addrspace(1)* %1618, align 4, !tbaa !7
  %1620 = fadd contract float %1619, %1617
  store float %1620, float addrspace(1)* %1618, align 4, !tbaa !7
  %1621 = add nsw i32 %1594, %17
  %1622 = sext i32 %1621 to i64
  %1623 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1622
  %1624 = load float, float addrspace(1)* %1623, align 4, !tbaa !7
  %1625 = add nsw i32 %1621, 1
  %1626 = sext i32 %1625 to i64
  %1627 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1626
  %1628 = load float, float addrspace(1)* %1627, align 4, !tbaa !7
  %1629 = sub nsw i32 %1625, %17
  %1630 = sext i32 %1629 to i64
  %1631 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1630
  %1632 = load float, float addrspace(1)* %1631, align 4, !tbaa !7
  %1633 = fadd contract float %1632, 5.000000e+00
  %1634 = add nsw i32 %1625, %17
  %1635 = sext i32 %1634 to i64
  %1636 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1635
  %1637 = load float, float addrspace(1)* %1636, align 4, !tbaa !7
  %1638 = fadd contract float %1637, 5.000000e+00
  %1639 = tail call float @llvm.minnum.f32(float %1628, float %1633)
  %1640 = tail call float @llvm.minnum.f32(float %1638, float %301)
  %1641 = tail call float @llvm.minnum.f32(float %1639, float %1640)
  %1642 = fsub contract float %1641, %301
  %1643 = fadd contract float %1642, 9.000000e+04
  %1644 = fadd contract float %1624, %1643
  %1645 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1622
  %1646 = load float, float addrspace(1)* %1645, align 4, !tbaa !7
  %1647 = fadd contract float %1646, %1644
  store float %1647, float addrspace(1)* %1645, align 4, !tbaa !7
  %1648 = add nsw i32 %1621, %17
  %1649 = sext i32 %1648 to i64
  %1650 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1649
  %1651 = load float, float addrspace(1)* %1650, align 4, !tbaa !7
  %1652 = add nsw i32 %1648, 1
  %1653 = sext i32 %1652 to i64
  %1654 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1653
  %1655 = load float, float addrspace(1)* %1654, align 4, !tbaa !7
  %1656 = sub nsw i32 %1652, %17
  %1657 = sext i32 %1656 to i64
  %1658 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1657
  %1659 = load float, float addrspace(1)* %1658, align 4, !tbaa !7
  %1660 = fadd contract float %1659, 5.000000e+00
  %1661 = tail call float @llvm.minnum.f32(float %1655, float %1660)
  %1662 = tail call float @llvm.minnum.f32(float %301, float 1.000000e+07)
  %1663 = tail call float @llvm.minnum.f32(float %1661, float %1662)
  %1664 = fsub contract float %1663, %301
  %1665 = fadd contract float %1664, 9.000000e+04
  %1666 = fadd contract float %1651, %1665
  %1667 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1649
  %1668 = load float, float addrspace(1)* %1667, align 4, !tbaa !7
  %1669 = fadd contract float %1668, %1666
  store float %1669, float addrspace(1)* %1667, align 4, !tbaa !7
  %1670 = add nsw i32 %297, -1
  %1671 = icmp sgt i32 %298, 1
  %1672 = icmp sgt i32 %298, %295
  %1673 = select i1 %1671, i1 %1672, i1 false
  br i1 %1673, label %296, label %1674, !llvm.loop !11

1674:                                             ; preds = %296, %34
  %1675 = phi i32 [ %36, %34 ], [ %302, %296 ]
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %1676 = sub i32 %35, %32
  %1677 = icmp sgt i32 %1676, -1
  br i1 %1677, label %34, label %1678, !llvm.loop !13

1678:                                             ; preds = %1674, %4
  ret void
}

; Function Attrs: convergent mustprogress nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.minnum.f32(float, float) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #3

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.y() #3

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr() #3

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.y() #3

attributes #0 = { convergent mustprogress norecurse nounwind "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{i32 0, i32 1024}
!5 = !{i16 1, i16 1025}
!6 = !{}
!7 = !{!8, !8, i64 0}
!8 = !{!"float", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C++ TBAA"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.mustprogress"}
!13 = distinct !{!13, !12}
