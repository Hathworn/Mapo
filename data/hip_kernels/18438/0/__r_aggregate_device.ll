; ModuleID = '../data/hip_kernels/18438/0/main.cu'
source_filename = "../data/hip_kernels/18438/0/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

@_ZZ13__r_aggregatePfS_iiE8MinArray = internal unnamed_addr addrspace(3) global [16 x [16 x float]] undef, align 16

; Function Attrs: convergent mustprogress norecurse nounwind
define protected amdgpu_kernel void @_Z13__r_aggregatePfS_ii(float addrspace(1)* nocapture %0, float addrspace(1)* nocapture readonly %1, i32 %2, i32 %3) local_unnamed_addr #0 {
  %5 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4
  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()
  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()
  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 6
  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*
  %10 = load i16, i16 addrspace(4)* %9, align 2, !range !5, !invariant.load !6
  %11 = zext i16 %10 to i32
  %12 = mul i32 %6, %11
  %13 = add i32 %12, %5
  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4
  %15 = mul nsw i32 %3, %2
  %16 = icmp slt i32 %13, %2
  %17 = icmp slt i32 %14, %3
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %1676

19:                                               ; preds = %4
  %20 = mul nsw i32 %13, %3
  %21 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ13__r_aggregatePfS_iiE8MinArray, i32 0, i32 %5, i32 %14
  %22 = icmp eq i32 %5, 0
  %23 = add i32 %12, %14
  %24 = icmp slt i32 %23, %2
  %25 = add nsw i32 %3, -1
  %26 = mul nsw i32 %23, %3
  %27 = getelementptr i8, i8 addrspace(4)* %7, i64 4
  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*
  %29 = load i16, i16 addrspace(4)* %28, align 4, !range !5, !invariant.load !6
  %30 = zext i16 %29 to i32
  %31 = select i1 %22, i1 %24, i1 false
  br label %32

32:                                               ; preds = %19, %1672
  %33 = phi i32 [ %14, %19 ], [ %1674, %1672 ]
  %34 = phi i32 [ 0, %19 ], [ %1673, %1672 ]
  %35 = add nsw i32 %33, %20
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36
  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7
  %39 = tail call float @llvm.minnum.f32(float %38, float 1.000000e+08)
  %40 = add nsw i32 %35, %15
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41
  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7
  %44 = tail call float @llvm.minnum.f32(float %43, float %39)
  %45 = add nsw i32 %40, %15
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46
  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !7
  %49 = tail call float @llvm.minnum.f32(float %48, float %44)
  %50 = add nsw i32 %45, %15
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51
  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7
  %54 = tail call float @llvm.minnum.f32(float %53, float %49)
  %55 = add nsw i32 %50, %15
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56
  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !7
  %59 = tail call float @llvm.minnum.f32(float %58, float %54)
  %60 = add nsw i32 %55, %15
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61
  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7
  %64 = tail call float @llvm.minnum.f32(float %63, float %59)
  %65 = add nsw i32 %60, %15
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66
  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7
  %69 = tail call float @llvm.minnum.f32(float %68, float %64)
  %70 = add nsw i32 %65, %15
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71
  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7
  %74 = tail call float @llvm.minnum.f32(float %73, float %69)
  %75 = add nsw i32 %70, %15
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76
  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !7
  %79 = tail call float @llvm.minnum.f32(float %78, float %74)
  %80 = add nsw i32 %75, %15
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %81
  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7
  %84 = tail call float @llvm.minnum.f32(float %83, float %79)
  %85 = add nsw i32 %80, %15
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86
  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7
  %89 = tail call float @llvm.minnum.f32(float %88, float %84)
  %90 = add nsw i32 %85, %15
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %91
  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7
  %94 = tail call float @llvm.minnum.f32(float %93, float %89)
  %95 = add nsw i32 %90, %15
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds float, float addrspace(1)* %0, i64 %96
  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7
  %99 = tail call float @llvm.minnum.f32(float %98, float %94)
  %100 = add nsw i32 %95, %15
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds float, float addrspace(1)* %0, i64 %101
  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !7
  %104 = tail call float @llvm.minnum.f32(float %103, float %99)
  %105 = add nsw i32 %100, %15
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds float, float addrspace(1)* %0, i64 %106
  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7
  %109 = tail call float @llvm.minnum.f32(float %108, float %104)
  %110 = add nsw i32 %105, %15
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds float, float addrspace(1)* %0, i64 %111
  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7
  %114 = tail call float @llvm.minnum.f32(float %113, float %109)
  %115 = add nsw i32 %110, %15
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds float, float addrspace(1)* %0, i64 %116
  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !7
  %119 = tail call float @llvm.minnum.f32(float %118, float %114)
  %120 = add nsw i32 %115, %15
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds float, float addrspace(1)* %0, i64 %121
  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !7
  %124 = tail call float @llvm.minnum.f32(float %123, float %119)
  %125 = add nsw i32 %120, %15
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds float, float addrspace(1)* %0, i64 %126
  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !7
  %129 = tail call float @llvm.minnum.f32(float %128, float %124)
  %130 = add nsw i32 %125, %15
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds float, float addrspace(1)* %0, i64 %131
  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !7
  %134 = tail call float @llvm.minnum.f32(float %133, float %129)
  %135 = add nsw i32 %130, %15
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds float, float addrspace(1)* %0, i64 %136
  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !7
  %139 = tail call float @llvm.minnum.f32(float %138, float %134)
  %140 = add nsw i32 %135, %15
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds float, float addrspace(1)* %0, i64 %141
  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !7
  %144 = tail call float @llvm.minnum.f32(float %143, float %139)
  %145 = add nsw i32 %140, %15
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds float, float addrspace(1)* %0, i64 %146
  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !7
  %149 = tail call float @llvm.minnum.f32(float %148, float %144)
  %150 = add nsw i32 %145, %15
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds float, float addrspace(1)* %0, i64 %151
  %153 = load float, float addrspace(1)* %152, align 4, !tbaa !7
  %154 = tail call float @llvm.minnum.f32(float %153, float %149)
  %155 = add nsw i32 %150, %15
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds float, float addrspace(1)* %0, i64 %156
  %158 = load float, float addrspace(1)* %157, align 4, !tbaa !7
  %159 = tail call float @llvm.minnum.f32(float %158, float %154)
  %160 = add nsw i32 %155, %15
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds float, float addrspace(1)* %0, i64 %161
  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !7
  %164 = tail call float @llvm.minnum.f32(float %163, float %159)
  %165 = add nsw i32 %160, %15
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds float, float addrspace(1)* %0, i64 %166
  %168 = load float, float addrspace(1)* %167, align 4, !tbaa !7
  %169 = tail call float @llvm.minnum.f32(float %168, float %164)
  %170 = add nsw i32 %165, %15
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds float, float addrspace(1)* %0, i64 %171
  %173 = load float, float addrspace(1)* %172, align 4, !tbaa !7
  %174 = tail call float @llvm.minnum.f32(float %173, float %169)
  %175 = add nsw i32 %170, %15
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds float, float addrspace(1)* %0, i64 %176
  %178 = load float, float addrspace(1)* %177, align 4, !tbaa !7
  %179 = tail call float @llvm.minnum.f32(float %178, float %174)
  %180 = add nsw i32 %175, %15
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds float, float addrspace(1)* %0, i64 %181
  %183 = load float, float addrspace(1)* %182, align 4, !tbaa !7
  %184 = tail call float @llvm.minnum.f32(float %183, float %179)
  %185 = add nsw i32 %180, %15
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds float, float addrspace(1)* %0, i64 %186
  %188 = load float, float addrspace(1)* %187, align 4, !tbaa !7
  %189 = tail call float @llvm.minnum.f32(float %188, float %184)
  %190 = add nsw i32 %185, %15
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds float, float addrspace(1)* %0, i64 %191
  %193 = load float, float addrspace(1)* %192, align 4, !tbaa !7
  %194 = tail call float @llvm.minnum.f32(float %193, float %189)
  %195 = add nsw i32 %190, %15
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds float, float addrspace(1)* %0, i64 %196
  %198 = load float, float addrspace(1)* %197, align 4, !tbaa !7
  %199 = tail call float @llvm.minnum.f32(float %198, float %194)
  %200 = add nsw i32 %195, %15
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds float, float addrspace(1)* %0, i64 %201
  %203 = load float, float addrspace(1)* %202, align 4, !tbaa !7
  %204 = tail call float @llvm.minnum.f32(float %203, float %199)
  %205 = add nsw i32 %200, %15
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds float, float addrspace(1)* %0, i64 %206
  %208 = load float, float addrspace(1)* %207, align 4, !tbaa !7
  %209 = tail call float @llvm.minnum.f32(float %208, float %204)
  %210 = add nsw i32 %205, %15
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds float, float addrspace(1)* %0, i64 %211
  %213 = load float, float addrspace(1)* %212, align 4, !tbaa !7
  %214 = tail call float @llvm.minnum.f32(float %213, float %209)
  %215 = add nsw i32 %210, %15
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds float, float addrspace(1)* %0, i64 %216
  %218 = load float, float addrspace(1)* %217, align 4, !tbaa !7
  %219 = tail call float @llvm.minnum.f32(float %218, float %214)
  %220 = add nsw i32 %215, %15
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds float, float addrspace(1)* %0, i64 %221
  %223 = load float, float addrspace(1)* %222, align 4, !tbaa !7
  %224 = tail call float @llvm.minnum.f32(float %223, float %219)
  %225 = add nsw i32 %220, %15
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds float, float addrspace(1)* %0, i64 %226
  %228 = load float, float addrspace(1)* %227, align 4, !tbaa !7
  %229 = tail call float @llvm.minnum.f32(float %228, float %224)
  %230 = add nsw i32 %225, %15
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds float, float addrspace(1)* %0, i64 %231
  %233 = load float, float addrspace(1)* %232, align 4, !tbaa !7
  %234 = tail call float @llvm.minnum.f32(float %233, float %229)
  %235 = add nsw i32 %230, %15
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds float, float addrspace(1)* %0, i64 %236
  %238 = load float, float addrspace(1)* %237, align 4, !tbaa !7
  %239 = tail call float @llvm.minnum.f32(float %238, float %234)
  %240 = add nsw i32 %235, %15
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds float, float addrspace(1)* %0, i64 %241
  %243 = load float, float addrspace(1)* %242, align 4, !tbaa !7
  %244 = tail call float @llvm.minnum.f32(float %243, float %239)
  %245 = add nsw i32 %240, %15
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds float, float addrspace(1)* %0, i64 %246
  %248 = load float, float addrspace(1)* %247, align 4, !tbaa !7
  %249 = tail call float @llvm.minnum.f32(float %248, float %244)
  %250 = add nsw i32 %245, %15
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds float, float addrspace(1)* %0, i64 %251
  %253 = load float, float addrspace(1)* %252, align 4, !tbaa !7
  %254 = tail call float @llvm.minnum.f32(float %253, float %249)
  %255 = add nsw i32 %250, %15
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds float, float addrspace(1)* %0, i64 %256
  %258 = load float, float addrspace(1)* %257, align 4, !tbaa !7
  %259 = tail call float @llvm.minnum.f32(float %258, float %254)
  %260 = add nsw i32 %255, %15
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds float, float addrspace(1)* %0, i64 %261
  %263 = load float, float addrspace(1)* %262, align 4, !tbaa !7
  %264 = tail call float @llvm.minnum.f32(float %263, float %259)
  %265 = add nsw i32 %260, %15
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds float, float addrspace(1)* %0, i64 %266
  %268 = load float, float addrspace(1)* %267, align 4, !tbaa !7
  %269 = tail call float @llvm.minnum.f32(float %268, float %264)
  %270 = add nsw i32 %265, %15
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds float, float addrspace(1)* %0, i64 %271
  %273 = load float, float addrspace(1)* %272, align 4, !tbaa !7
  %274 = tail call float @llvm.minnum.f32(float %273, float %269)
  %275 = add nsw i32 %270, %15
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds float, float addrspace(1)* %0, i64 %276
  %278 = load float, float addrspace(1)* %277, align 4, !tbaa !7
  %279 = tail call float @llvm.minnum.f32(float %278, float %274)
  %280 = add nsw i32 %275, %15
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds float, float addrspace(1)* %0, i64 %281
  %283 = load float, float addrspace(1)* %282, align 4, !tbaa !7
  %284 = tail call float @llvm.minnum.f32(float %283, float %279)
  %285 = add nsw i32 %280, %15
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds float, float addrspace(1)* %0, i64 %286
  %288 = load float, float addrspace(1)* %287, align 4, !tbaa !7
  %289 = tail call float @llvm.minnum.f32(float %288, float %284)
  store float %289, float addrspace(3)* %21, align 4, !tbaa !7
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %290 = icmp slt i32 %34, %25
  %291 = select i1 %31, i1 %290, i1 false
  br i1 %291, label %292, label %1672

292:                                              ; preds = %32
  %293 = add nsw i32 %34, 15
  br label %294

294:                                              ; preds = %292, %294
  %295 = phi i32 [ %1668, %294 ], [ 0, %292 ]
  %296 = phi i32 [ %300, %294 ], [ %34, %292 ]
  %297 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]] addrspace(3)* @_ZZ13__r_aggregatePfS_iiE8MinArray, i32 0, i32 %14, i32 %295
  %298 = load float, float addrspace(3)* %297, align 4, !tbaa !7
  %299 = fadd contract float %298, 9.000000e+04
  %300 = add nsw i32 %296, 1
  %301 = add i32 %300, %26
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds float, float addrspace(1)* %1, i64 %302
  %304 = load float, float addrspace(1)* %303, align 4, !tbaa !7
  %305 = add i32 %296, %26
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds float, float addrspace(1)* %0, i64 %306
  %308 = load float, float addrspace(1)* %307, align 4, !tbaa !7
  %309 = add nsw i32 %305, %15
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds float, float addrspace(1)* %0, i64 %310
  %312 = load float, float addrspace(1)* %311, align 4, !tbaa !7
  %313 = fadd contract float %312, 5.000000e+00
  %314 = tail call float @llvm.minnum.f32(float %308, float 1.000000e+07)
  %315 = tail call float @llvm.minnum.f32(float %313, float %299)
  %316 = tail call float @llvm.minnum.f32(float %314, float %315)
  %317 = fsub contract float %316, %299
  %318 = fadd contract float %317, 9.000000e+04
  %319 = fadd contract float %304, %318
  %320 = getelementptr inbounds float, float addrspace(1)* %0, i64 %302
  %321 = load float, float addrspace(1)* %320, align 4, !tbaa !7
  %322 = fadd contract float %321, %319
  store float %322, float addrspace(1)* %320, align 4, !tbaa !7
  %323 = add nsw i32 %301, %15
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds float, float addrspace(1)* %1, i64 %324
  %326 = load float, float addrspace(1)* %325, align 4, !tbaa !7
  %327 = add nsw i32 %323, -1
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds float, float addrspace(1)* %0, i64 %328
  %330 = load float, float addrspace(1)* %329, align 4, !tbaa !7
  %331 = sub nsw i32 %327, %15
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds float, float addrspace(1)* %0, i64 %332
  %334 = load float, float addrspace(1)* %333, align 4, !tbaa !7
  %335 = fadd contract float %334, 5.000000e+00
  %336 = add nsw i32 %327, %15
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds float, float addrspace(1)* %0, i64 %337
  %339 = load float, float addrspace(1)* %338, align 4, !tbaa !7
  %340 = fadd contract float %339, 5.000000e+00
  %341 = tail call float @llvm.minnum.f32(float %330, float %335)
  %342 = tail call float @llvm.minnum.f32(float %340, float %299)
  %343 = tail call float @llvm.minnum.f32(float %341, float %342)
  %344 = fsub contract float %343, %299
  %345 = fadd contract float %344, 9.000000e+04
  %346 = fadd contract float %326, %345
  %347 = getelementptr inbounds float, float addrspace(1)* %0, i64 %324
  %348 = load float, float addrspace(1)* %347, align 4, !tbaa !7
  %349 = fadd contract float %348, %346
  store float %349, float addrspace(1)* %347, align 4, !tbaa !7
  %350 = add nsw i32 %323, %15
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds float, float addrspace(1)* %1, i64 %351
  %353 = load float, float addrspace(1)* %352, align 4, !tbaa !7
  %354 = add nsw i32 %350, -1
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds float, float addrspace(1)* %0, i64 %355
  %357 = load float, float addrspace(1)* %356, align 4, !tbaa !7
  %358 = sub nsw i32 %354, %15
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds float, float addrspace(1)* %0, i64 %359
  %361 = load float, float addrspace(1)* %360, align 4, !tbaa !7
  %362 = fadd contract float %361, 5.000000e+00
  %363 = add nsw i32 %354, %15
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds float, float addrspace(1)* %0, i64 %364
  %366 = load float, float addrspace(1)* %365, align 4, !tbaa !7
  %367 = fadd contract float %366, 5.000000e+00
  %368 = tail call float @llvm.minnum.f32(float %357, float %362)
  %369 = tail call float @llvm.minnum.f32(float %367, float %299)
  %370 = tail call float @llvm.minnum.f32(float %368, float %369)
  %371 = fsub contract float %370, %299
  %372 = fadd contract float %371, 9.000000e+04
  %373 = fadd contract float %353, %372
  %374 = getelementptr inbounds float, float addrspace(1)* %0, i64 %351
  %375 = load float, float addrspace(1)* %374, align 4, !tbaa !7
  %376 = fadd contract float %375, %373
  store float %376, float addrspace(1)* %374, align 4, !tbaa !7
  %377 = add nsw i32 %350, %15
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds float, float addrspace(1)* %1, i64 %378
  %380 = load float, float addrspace(1)* %379, align 4, !tbaa !7
  %381 = add nsw i32 %377, -1
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds float, float addrspace(1)* %0, i64 %382
  %384 = load float, float addrspace(1)* %383, align 4, !tbaa !7
  %385 = sub nsw i32 %381, %15
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds float, float addrspace(1)* %0, i64 %386
  %388 = load float, float addrspace(1)* %387, align 4, !tbaa !7
  %389 = fadd contract float %388, 5.000000e+00
  %390 = add nsw i32 %381, %15
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds float, float addrspace(1)* %0, i64 %391
  %393 = load float, float addrspace(1)* %392, align 4, !tbaa !7
  %394 = fadd contract float %393, 5.000000e+00
  %395 = tail call float @llvm.minnum.f32(float %384, float %389)
  %396 = tail call float @llvm.minnum.f32(float %394, float %299)
  %397 = tail call float @llvm.minnum.f32(float %395, float %396)
  %398 = fsub contract float %397, %299
  %399 = fadd contract float %398, 9.000000e+04
  %400 = fadd contract float %380, %399
  %401 = getelementptr inbounds float, float addrspace(1)* %0, i64 %378
  %402 = load float, float addrspace(1)* %401, align 4, !tbaa !7
  %403 = fadd contract float %402, %400
  store float %403, float addrspace(1)* %401, align 4, !tbaa !7
  %404 = add nsw i32 %377, %15
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds float, float addrspace(1)* %1, i64 %405
  %407 = load float, float addrspace(1)* %406, align 4, !tbaa !7
  %408 = add nsw i32 %404, -1
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds float, float addrspace(1)* %0, i64 %409
  %411 = load float, float addrspace(1)* %410, align 4, !tbaa !7
  %412 = sub nsw i32 %408, %15
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds float, float addrspace(1)* %0, i64 %413
  %415 = load float, float addrspace(1)* %414, align 4, !tbaa !7
  %416 = fadd contract float %415, 5.000000e+00
  %417 = add nsw i32 %408, %15
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds float, float addrspace(1)* %0, i64 %418
  %420 = load float, float addrspace(1)* %419, align 4, !tbaa !7
  %421 = fadd contract float %420, 5.000000e+00
  %422 = tail call float @llvm.minnum.f32(float %411, float %416)
  %423 = tail call float @llvm.minnum.f32(float %421, float %299)
  %424 = tail call float @llvm.minnum.f32(float %422, float %423)
  %425 = fsub contract float %424, %299
  %426 = fadd contract float %425, 9.000000e+04
  %427 = fadd contract float %407, %426
  %428 = getelementptr inbounds float, float addrspace(1)* %0, i64 %405
  %429 = load float, float addrspace(1)* %428, align 4, !tbaa !7
  %430 = fadd contract float %429, %427
  store float %430, float addrspace(1)* %428, align 4, !tbaa !7
  %431 = add nsw i32 %404, %15
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds float, float addrspace(1)* %1, i64 %432
  %434 = load float, float addrspace(1)* %433, align 4, !tbaa !7
  %435 = add nsw i32 %431, -1
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds float, float addrspace(1)* %0, i64 %436
  %438 = load float, float addrspace(1)* %437, align 4, !tbaa !7
  %439 = sub nsw i32 %435, %15
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds float, float addrspace(1)* %0, i64 %440
  %442 = load float, float addrspace(1)* %441, align 4, !tbaa !7
  %443 = fadd contract float %442, 5.000000e+00
  %444 = add nsw i32 %435, %15
  %445 = sext i32 %444 to i64
  %446 = getelementptr inbounds float, float addrspace(1)* %0, i64 %445
  %447 = load float, float addrspace(1)* %446, align 4, !tbaa !7
  %448 = fadd contract float %447, 5.000000e+00
  %449 = tail call float @llvm.minnum.f32(float %438, float %443)
  %450 = tail call float @llvm.minnum.f32(float %448, float %299)
  %451 = tail call float @llvm.minnum.f32(float %449, float %450)
  %452 = fsub contract float %451, %299
  %453 = fadd contract float %452, 9.000000e+04
  %454 = fadd contract float %434, %453
  %455 = getelementptr inbounds float, float addrspace(1)* %0, i64 %432
  %456 = load float, float addrspace(1)* %455, align 4, !tbaa !7
  %457 = fadd contract float %456, %454
  store float %457, float addrspace(1)* %455, align 4, !tbaa !7
  %458 = add nsw i32 %431, %15
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds float, float addrspace(1)* %1, i64 %459
  %461 = load float, float addrspace(1)* %460, align 4, !tbaa !7
  %462 = add nsw i32 %458, -1
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds float, float addrspace(1)* %0, i64 %463
  %465 = load float, float addrspace(1)* %464, align 4, !tbaa !7
  %466 = sub nsw i32 %462, %15
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds float, float addrspace(1)* %0, i64 %467
  %469 = load float, float addrspace(1)* %468, align 4, !tbaa !7
  %470 = fadd contract float %469, 5.000000e+00
  %471 = add nsw i32 %462, %15
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds float, float addrspace(1)* %0, i64 %472
  %474 = load float, float addrspace(1)* %473, align 4, !tbaa !7
  %475 = fadd contract float %474, 5.000000e+00
  %476 = tail call float @llvm.minnum.f32(float %465, float %470)
  %477 = tail call float @llvm.minnum.f32(float %475, float %299)
  %478 = tail call float @llvm.minnum.f32(float %476, float %477)
  %479 = fsub contract float %478, %299
  %480 = fadd contract float %479, 9.000000e+04
  %481 = fadd contract float %461, %480
  %482 = getelementptr inbounds float, float addrspace(1)* %0, i64 %459
  %483 = load float, float addrspace(1)* %482, align 4, !tbaa !7
  %484 = fadd contract float %483, %481
  store float %484, float addrspace(1)* %482, align 4, !tbaa !7
  %485 = add nsw i32 %458, %15
  %486 = sext i32 %485 to i64
  %487 = getelementptr inbounds float, float addrspace(1)* %1, i64 %486
  %488 = load float, float addrspace(1)* %487, align 4, !tbaa !7
  %489 = add nsw i32 %485, -1
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds float, float addrspace(1)* %0, i64 %490
  %492 = load float, float addrspace(1)* %491, align 4, !tbaa !7
  %493 = sub nsw i32 %489, %15
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds float, float addrspace(1)* %0, i64 %494
  %496 = load float, float addrspace(1)* %495, align 4, !tbaa !7
  %497 = fadd contract float %496, 5.000000e+00
  %498 = add nsw i32 %489, %15
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds float, float addrspace(1)* %0, i64 %499
  %501 = load float, float addrspace(1)* %500, align 4, !tbaa !7
  %502 = fadd contract float %501, 5.000000e+00
  %503 = tail call float @llvm.minnum.f32(float %492, float %497)
  %504 = tail call float @llvm.minnum.f32(float %502, float %299)
  %505 = tail call float @llvm.minnum.f32(float %503, float %504)
  %506 = fsub contract float %505, %299
  %507 = fadd contract float %506, 9.000000e+04
  %508 = fadd contract float %488, %507
  %509 = getelementptr inbounds float, float addrspace(1)* %0, i64 %486
  %510 = load float, float addrspace(1)* %509, align 4, !tbaa !7
  %511 = fadd contract float %510, %508
  store float %511, float addrspace(1)* %509, align 4, !tbaa !7
  %512 = add nsw i32 %485, %15
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds float, float addrspace(1)* %1, i64 %513
  %515 = load float, float addrspace(1)* %514, align 4, !tbaa !7
  %516 = add nsw i32 %512, -1
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds float, float addrspace(1)* %0, i64 %517
  %519 = load float, float addrspace(1)* %518, align 4, !tbaa !7
  %520 = sub nsw i32 %516, %15
  %521 = sext i32 %520 to i64
  %522 = getelementptr inbounds float, float addrspace(1)* %0, i64 %521
  %523 = load float, float addrspace(1)* %522, align 4, !tbaa !7
  %524 = fadd contract float %523, 5.000000e+00
  %525 = add nsw i32 %516, %15
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds float, float addrspace(1)* %0, i64 %526
  %528 = load float, float addrspace(1)* %527, align 4, !tbaa !7
  %529 = fadd contract float %528, 5.000000e+00
  %530 = tail call float @llvm.minnum.f32(float %519, float %524)
  %531 = tail call float @llvm.minnum.f32(float %529, float %299)
  %532 = tail call float @llvm.minnum.f32(float %530, float %531)
  %533 = fsub contract float %532, %299
  %534 = fadd contract float %533, 9.000000e+04
  %535 = fadd contract float %515, %534
  %536 = getelementptr inbounds float, float addrspace(1)* %0, i64 %513
  %537 = load float, float addrspace(1)* %536, align 4, !tbaa !7
  %538 = fadd contract float %537, %535
  store float %538, float addrspace(1)* %536, align 4, !tbaa !7
  %539 = add nsw i32 %512, %15
  %540 = sext i32 %539 to i64
  %541 = getelementptr inbounds float, float addrspace(1)* %1, i64 %540
  %542 = load float, float addrspace(1)* %541, align 4, !tbaa !7
  %543 = add nsw i32 %539, -1
  %544 = sext i32 %543 to i64
  %545 = getelementptr inbounds float, float addrspace(1)* %0, i64 %544
  %546 = load float, float addrspace(1)* %545, align 4, !tbaa !7
  %547 = sub nsw i32 %543, %15
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds float, float addrspace(1)* %0, i64 %548
  %550 = load float, float addrspace(1)* %549, align 4, !tbaa !7
  %551 = fadd contract float %550, 5.000000e+00
  %552 = add nsw i32 %543, %15
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds float, float addrspace(1)* %0, i64 %553
  %555 = load float, float addrspace(1)* %554, align 4, !tbaa !7
  %556 = fadd contract float %555, 5.000000e+00
  %557 = tail call float @llvm.minnum.f32(float %546, float %551)
  %558 = tail call float @llvm.minnum.f32(float %556, float %299)
  %559 = tail call float @llvm.minnum.f32(float %557, float %558)
  %560 = fsub contract float %559, %299
  %561 = fadd contract float %560, 9.000000e+04
  %562 = fadd contract float %542, %561
  %563 = getelementptr inbounds float, float addrspace(1)* %0, i64 %540
  %564 = load float, float addrspace(1)* %563, align 4, !tbaa !7
  %565 = fadd contract float %564, %562
  store float %565, float addrspace(1)* %563, align 4, !tbaa !7
  %566 = add nsw i32 %539, %15
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds float, float addrspace(1)* %1, i64 %567
  %569 = load float, float addrspace(1)* %568, align 4, !tbaa !7
  %570 = add nsw i32 %566, -1
  %571 = sext i32 %570 to i64
  %572 = getelementptr inbounds float, float addrspace(1)* %0, i64 %571
  %573 = load float, float addrspace(1)* %572, align 4, !tbaa !7
  %574 = sub nsw i32 %570, %15
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds float, float addrspace(1)* %0, i64 %575
  %577 = load float, float addrspace(1)* %576, align 4, !tbaa !7
  %578 = fadd contract float %577, 5.000000e+00
  %579 = add nsw i32 %570, %15
  %580 = sext i32 %579 to i64
  %581 = getelementptr inbounds float, float addrspace(1)* %0, i64 %580
  %582 = load float, float addrspace(1)* %581, align 4, !tbaa !7
  %583 = fadd contract float %582, 5.000000e+00
  %584 = tail call float @llvm.minnum.f32(float %573, float %578)
  %585 = tail call float @llvm.minnum.f32(float %583, float %299)
  %586 = tail call float @llvm.minnum.f32(float %584, float %585)
  %587 = fsub contract float %586, %299
  %588 = fadd contract float %587, 9.000000e+04
  %589 = fadd contract float %569, %588
  %590 = getelementptr inbounds float, float addrspace(1)* %0, i64 %567
  %591 = load float, float addrspace(1)* %590, align 4, !tbaa !7
  %592 = fadd contract float %591, %589
  store float %592, float addrspace(1)* %590, align 4, !tbaa !7
  %593 = add nsw i32 %566, %15
  %594 = sext i32 %593 to i64
  %595 = getelementptr inbounds float, float addrspace(1)* %1, i64 %594
  %596 = load float, float addrspace(1)* %595, align 4, !tbaa !7
  %597 = add nsw i32 %593, -1
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds float, float addrspace(1)* %0, i64 %598
  %600 = load float, float addrspace(1)* %599, align 4, !tbaa !7
  %601 = sub nsw i32 %597, %15
  %602 = sext i32 %601 to i64
  %603 = getelementptr inbounds float, float addrspace(1)* %0, i64 %602
  %604 = load float, float addrspace(1)* %603, align 4, !tbaa !7
  %605 = fadd contract float %604, 5.000000e+00
  %606 = add nsw i32 %597, %15
  %607 = sext i32 %606 to i64
  %608 = getelementptr inbounds float, float addrspace(1)* %0, i64 %607
  %609 = load float, float addrspace(1)* %608, align 4, !tbaa !7
  %610 = fadd contract float %609, 5.000000e+00
  %611 = tail call float @llvm.minnum.f32(float %600, float %605)
  %612 = tail call float @llvm.minnum.f32(float %610, float %299)
  %613 = tail call float @llvm.minnum.f32(float %611, float %612)
  %614 = fsub contract float %613, %299
  %615 = fadd contract float %614, 9.000000e+04
  %616 = fadd contract float %596, %615
  %617 = getelementptr inbounds float, float addrspace(1)* %0, i64 %594
  %618 = load float, float addrspace(1)* %617, align 4, !tbaa !7
  %619 = fadd contract float %618, %616
  store float %619, float addrspace(1)* %617, align 4, !tbaa !7
  %620 = add nsw i32 %593, %15
  %621 = sext i32 %620 to i64
  %622 = getelementptr inbounds float, float addrspace(1)* %1, i64 %621
  %623 = load float, float addrspace(1)* %622, align 4, !tbaa !7
  %624 = add nsw i32 %620, -1
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds float, float addrspace(1)* %0, i64 %625
  %627 = load float, float addrspace(1)* %626, align 4, !tbaa !7
  %628 = sub nsw i32 %624, %15
  %629 = sext i32 %628 to i64
  %630 = getelementptr inbounds float, float addrspace(1)* %0, i64 %629
  %631 = load float, float addrspace(1)* %630, align 4, !tbaa !7
  %632 = fadd contract float %631, 5.000000e+00
  %633 = add nsw i32 %624, %15
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds float, float addrspace(1)* %0, i64 %634
  %636 = load float, float addrspace(1)* %635, align 4, !tbaa !7
  %637 = fadd contract float %636, 5.000000e+00
  %638 = tail call float @llvm.minnum.f32(float %627, float %632)
  %639 = tail call float @llvm.minnum.f32(float %637, float %299)
  %640 = tail call float @llvm.minnum.f32(float %638, float %639)
  %641 = fsub contract float %640, %299
  %642 = fadd contract float %641, 9.000000e+04
  %643 = fadd contract float %623, %642
  %644 = getelementptr inbounds float, float addrspace(1)* %0, i64 %621
  %645 = load float, float addrspace(1)* %644, align 4, !tbaa !7
  %646 = fadd contract float %645, %643
  store float %646, float addrspace(1)* %644, align 4, !tbaa !7
  %647 = add nsw i32 %620, %15
  %648 = sext i32 %647 to i64
  %649 = getelementptr inbounds float, float addrspace(1)* %1, i64 %648
  %650 = load float, float addrspace(1)* %649, align 4, !tbaa !7
  %651 = add nsw i32 %647, -1
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds float, float addrspace(1)* %0, i64 %652
  %654 = load float, float addrspace(1)* %653, align 4, !tbaa !7
  %655 = sub nsw i32 %651, %15
  %656 = sext i32 %655 to i64
  %657 = getelementptr inbounds float, float addrspace(1)* %0, i64 %656
  %658 = load float, float addrspace(1)* %657, align 4, !tbaa !7
  %659 = fadd contract float %658, 5.000000e+00
  %660 = add nsw i32 %651, %15
  %661 = sext i32 %660 to i64
  %662 = getelementptr inbounds float, float addrspace(1)* %0, i64 %661
  %663 = load float, float addrspace(1)* %662, align 4, !tbaa !7
  %664 = fadd contract float %663, 5.000000e+00
  %665 = tail call float @llvm.minnum.f32(float %654, float %659)
  %666 = tail call float @llvm.minnum.f32(float %664, float %299)
  %667 = tail call float @llvm.minnum.f32(float %665, float %666)
  %668 = fsub contract float %667, %299
  %669 = fadd contract float %668, 9.000000e+04
  %670 = fadd contract float %650, %669
  %671 = getelementptr inbounds float, float addrspace(1)* %0, i64 %648
  %672 = load float, float addrspace(1)* %671, align 4, !tbaa !7
  %673 = fadd contract float %672, %670
  store float %673, float addrspace(1)* %671, align 4, !tbaa !7
  %674 = add nsw i32 %647, %15
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds float, float addrspace(1)* %1, i64 %675
  %677 = load float, float addrspace(1)* %676, align 4, !tbaa !7
  %678 = add nsw i32 %674, -1
  %679 = sext i32 %678 to i64
  %680 = getelementptr inbounds float, float addrspace(1)* %0, i64 %679
  %681 = load float, float addrspace(1)* %680, align 4, !tbaa !7
  %682 = sub nsw i32 %678, %15
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds float, float addrspace(1)* %0, i64 %683
  %685 = load float, float addrspace(1)* %684, align 4, !tbaa !7
  %686 = fadd contract float %685, 5.000000e+00
  %687 = add nsw i32 %678, %15
  %688 = sext i32 %687 to i64
  %689 = getelementptr inbounds float, float addrspace(1)* %0, i64 %688
  %690 = load float, float addrspace(1)* %689, align 4, !tbaa !7
  %691 = fadd contract float %690, 5.000000e+00
  %692 = tail call float @llvm.minnum.f32(float %681, float %686)
  %693 = tail call float @llvm.minnum.f32(float %691, float %299)
  %694 = tail call float @llvm.minnum.f32(float %692, float %693)
  %695 = fsub contract float %694, %299
  %696 = fadd contract float %695, 9.000000e+04
  %697 = fadd contract float %677, %696
  %698 = getelementptr inbounds float, float addrspace(1)* %0, i64 %675
  %699 = load float, float addrspace(1)* %698, align 4, !tbaa !7
  %700 = fadd contract float %699, %697
  store float %700, float addrspace(1)* %698, align 4, !tbaa !7
  %701 = add nsw i32 %674, %15
  %702 = sext i32 %701 to i64
  %703 = getelementptr inbounds float, float addrspace(1)* %1, i64 %702
  %704 = load float, float addrspace(1)* %703, align 4, !tbaa !7
  %705 = add nsw i32 %701, -1
  %706 = sext i32 %705 to i64
  %707 = getelementptr inbounds float, float addrspace(1)* %0, i64 %706
  %708 = load float, float addrspace(1)* %707, align 4, !tbaa !7
  %709 = sub nsw i32 %705, %15
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds float, float addrspace(1)* %0, i64 %710
  %712 = load float, float addrspace(1)* %711, align 4, !tbaa !7
  %713 = fadd contract float %712, 5.000000e+00
  %714 = add nsw i32 %705, %15
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds float, float addrspace(1)* %0, i64 %715
  %717 = load float, float addrspace(1)* %716, align 4, !tbaa !7
  %718 = fadd contract float %717, 5.000000e+00
  %719 = tail call float @llvm.minnum.f32(float %708, float %713)
  %720 = tail call float @llvm.minnum.f32(float %718, float %299)
  %721 = tail call float @llvm.minnum.f32(float %719, float %720)
  %722 = fsub contract float %721, %299
  %723 = fadd contract float %722, 9.000000e+04
  %724 = fadd contract float %704, %723
  %725 = getelementptr inbounds float, float addrspace(1)* %0, i64 %702
  %726 = load float, float addrspace(1)* %725, align 4, !tbaa !7
  %727 = fadd contract float %726, %724
  store float %727, float addrspace(1)* %725, align 4, !tbaa !7
  %728 = add nsw i32 %701, %15
  %729 = sext i32 %728 to i64
  %730 = getelementptr inbounds float, float addrspace(1)* %1, i64 %729
  %731 = load float, float addrspace(1)* %730, align 4, !tbaa !7
  %732 = add nsw i32 %728, -1
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds float, float addrspace(1)* %0, i64 %733
  %735 = load float, float addrspace(1)* %734, align 4, !tbaa !7
  %736 = sub nsw i32 %732, %15
  %737 = sext i32 %736 to i64
  %738 = getelementptr inbounds float, float addrspace(1)* %0, i64 %737
  %739 = load float, float addrspace(1)* %738, align 4, !tbaa !7
  %740 = fadd contract float %739, 5.000000e+00
  %741 = add nsw i32 %732, %15
  %742 = sext i32 %741 to i64
  %743 = getelementptr inbounds float, float addrspace(1)* %0, i64 %742
  %744 = load float, float addrspace(1)* %743, align 4, !tbaa !7
  %745 = fadd contract float %744, 5.000000e+00
  %746 = tail call float @llvm.minnum.f32(float %735, float %740)
  %747 = tail call float @llvm.minnum.f32(float %745, float %299)
  %748 = tail call float @llvm.minnum.f32(float %746, float %747)
  %749 = fsub contract float %748, %299
  %750 = fadd contract float %749, 9.000000e+04
  %751 = fadd contract float %731, %750
  %752 = getelementptr inbounds float, float addrspace(1)* %0, i64 %729
  %753 = load float, float addrspace(1)* %752, align 4, !tbaa !7
  %754 = fadd contract float %753, %751
  store float %754, float addrspace(1)* %752, align 4, !tbaa !7
  %755 = add nsw i32 %728, %15
  %756 = sext i32 %755 to i64
  %757 = getelementptr inbounds float, float addrspace(1)* %1, i64 %756
  %758 = load float, float addrspace(1)* %757, align 4, !tbaa !7
  %759 = add nsw i32 %755, -1
  %760 = sext i32 %759 to i64
  %761 = getelementptr inbounds float, float addrspace(1)* %0, i64 %760
  %762 = load float, float addrspace(1)* %761, align 4, !tbaa !7
  %763 = sub nsw i32 %759, %15
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds float, float addrspace(1)* %0, i64 %764
  %766 = load float, float addrspace(1)* %765, align 4, !tbaa !7
  %767 = fadd contract float %766, 5.000000e+00
  %768 = add nsw i32 %759, %15
  %769 = sext i32 %768 to i64
  %770 = getelementptr inbounds float, float addrspace(1)* %0, i64 %769
  %771 = load float, float addrspace(1)* %770, align 4, !tbaa !7
  %772 = fadd contract float %771, 5.000000e+00
  %773 = tail call float @llvm.minnum.f32(float %762, float %767)
  %774 = tail call float @llvm.minnum.f32(float %772, float %299)
  %775 = tail call float @llvm.minnum.f32(float %773, float %774)
  %776 = fsub contract float %775, %299
  %777 = fadd contract float %776, 9.000000e+04
  %778 = fadd contract float %758, %777
  %779 = getelementptr inbounds float, float addrspace(1)* %0, i64 %756
  %780 = load float, float addrspace(1)* %779, align 4, !tbaa !7
  %781 = fadd contract float %780, %778
  store float %781, float addrspace(1)* %779, align 4, !tbaa !7
  %782 = add nsw i32 %755, %15
  %783 = sext i32 %782 to i64
  %784 = getelementptr inbounds float, float addrspace(1)* %1, i64 %783
  %785 = load float, float addrspace(1)* %784, align 4, !tbaa !7
  %786 = add nsw i32 %782, -1
  %787 = sext i32 %786 to i64
  %788 = getelementptr inbounds float, float addrspace(1)* %0, i64 %787
  %789 = load float, float addrspace(1)* %788, align 4, !tbaa !7
  %790 = sub nsw i32 %786, %15
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds float, float addrspace(1)* %0, i64 %791
  %793 = load float, float addrspace(1)* %792, align 4, !tbaa !7
  %794 = fadd contract float %793, 5.000000e+00
  %795 = add nsw i32 %786, %15
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds float, float addrspace(1)* %0, i64 %796
  %798 = load float, float addrspace(1)* %797, align 4, !tbaa !7
  %799 = fadd contract float %798, 5.000000e+00
  %800 = tail call float @llvm.minnum.f32(float %789, float %794)
  %801 = tail call float @llvm.minnum.f32(float %799, float %299)
  %802 = tail call float @llvm.minnum.f32(float %800, float %801)
  %803 = fsub contract float %802, %299
  %804 = fadd contract float %803, 9.000000e+04
  %805 = fadd contract float %785, %804
  %806 = getelementptr inbounds float, float addrspace(1)* %0, i64 %783
  %807 = load float, float addrspace(1)* %806, align 4, !tbaa !7
  %808 = fadd contract float %807, %805
  store float %808, float addrspace(1)* %806, align 4, !tbaa !7
  %809 = add nsw i32 %782, %15
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds float, float addrspace(1)* %1, i64 %810
  %812 = load float, float addrspace(1)* %811, align 4, !tbaa !7
  %813 = add nsw i32 %809, -1
  %814 = sext i32 %813 to i64
  %815 = getelementptr inbounds float, float addrspace(1)* %0, i64 %814
  %816 = load float, float addrspace(1)* %815, align 4, !tbaa !7
  %817 = sub nsw i32 %813, %15
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds float, float addrspace(1)* %0, i64 %818
  %820 = load float, float addrspace(1)* %819, align 4, !tbaa !7
  %821 = fadd contract float %820, 5.000000e+00
  %822 = add nsw i32 %813, %15
  %823 = sext i32 %822 to i64
  %824 = getelementptr inbounds float, float addrspace(1)* %0, i64 %823
  %825 = load float, float addrspace(1)* %824, align 4, !tbaa !7
  %826 = fadd contract float %825, 5.000000e+00
  %827 = tail call float @llvm.minnum.f32(float %816, float %821)
  %828 = tail call float @llvm.minnum.f32(float %826, float %299)
  %829 = tail call float @llvm.minnum.f32(float %827, float %828)
  %830 = fsub contract float %829, %299
  %831 = fadd contract float %830, 9.000000e+04
  %832 = fadd contract float %812, %831
  %833 = getelementptr inbounds float, float addrspace(1)* %0, i64 %810
  %834 = load float, float addrspace(1)* %833, align 4, !tbaa !7
  %835 = fadd contract float %834, %832
  store float %835, float addrspace(1)* %833, align 4, !tbaa !7
  %836 = add nsw i32 %809, %15
  %837 = sext i32 %836 to i64
  %838 = getelementptr inbounds float, float addrspace(1)* %1, i64 %837
  %839 = load float, float addrspace(1)* %838, align 4, !tbaa !7
  %840 = add nsw i32 %836, -1
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds float, float addrspace(1)* %0, i64 %841
  %843 = load float, float addrspace(1)* %842, align 4, !tbaa !7
  %844 = sub nsw i32 %840, %15
  %845 = sext i32 %844 to i64
  %846 = getelementptr inbounds float, float addrspace(1)* %0, i64 %845
  %847 = load float, float addrspace(1)* %846, align 4, !tbaa !7
  %848 = fadd contract float %847, 5.000000e+00
  %849 = add nsw i32 %840, %15
  %850 = sext i32 %849 to i64
  %851 = getelementptr inbounds float, float addrspace(1)* %0, i64 %850
  %852 = load float, float addrspace(1)* %851, align 4, !tbaa !7
  %853 = fadd contract float %852, 5.000000e+00
  %854 = tail call float @llvm.minnum.f32(float %843, float %848)
  %855 = tail call float @llvm.minnum.f32(float %853, float %299)
  %856 = tail call float @llvm.minnum.f32(float %854, float %855)
  %857 = fsub contract float %856, %299
  %858 = fadd contract float %857, 9.000000e+04
  %859 = fadd contract float %839, %858
  %860 = getelementptr inbounds float, float addrspace(1)* %0, i64 %837
  %861 = load float, float addrspace(1)* %860, align 4, !tbaa !7
  %862 = fadd contract float %861, %859
  store float %862, float addrspace(1)* %860, align 4, !tbaa !7
  %863 = add nsw i32 %836, %15
  %864 = sext i32 %863 to i64
  %865 = getelementptr inbounds float, float addrspace(1)* %1, i64 %864
  %866 = load float, float addrspace(1)* %865, align 4, !tbaa !7
  %867 = add nsw i32 %863, -1
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds float, float addrspace(1)* %0, i64 %868
  %870 = load float, float addrspace(1)* %869, align 4, !tbaa !7
  %871 = sub nsw i32 %867, %15
  %872 = sext i32 %871 to i64
  %873 = getelementptr inbounds float, float addrspace(1)* %0, i64 %872
  %874 = load float, float addrspace(1)* %873, align 4, !tbaa !7
  %875 = fadd contract float %874, 5.000000e+00
  %876 = add nsw i32 %867, %15
  %877 = sext i32 %876 to i64
  %878 = getelementptr inbounds float, float addrspace(1)* %0, i64 %877
  %879 = load float, float addrspace(1)* %878, align 4, !tbaa !7
  %880 = fadd contract float %879, 5.000000e+00
  %881 = tail call float @llvm.minnum.f32(float %870, float %875)
  %882 = tail call float @llvm.minnum.f32(float %880, float %299)
  %883 = tail call float @llvm.minnum.f32(float %881, float %882)
  %884 = fsub contract float %883, %299
  %885 = fadd contract float %884, 9.000000e+04
  %886 = fadd contract float %866, %885
  %887 = getelementptr inbounds float, float addrspace(1)* %0, i64 %864
  %888 = load float, float addrspace(1)* %887, align 4, !tbaa !7
  %889 = fadd contract float %888, %886
  store float %889, float addrspace(1)* %887, align 4, !tbaa !7
  %890 = add nsw i32 %863, %15
  %891 = sext i32 %890 to i64
  %892 = getelementptr inbounds float, float addrspace(1)* %1, i64 %891
  %893 = load float, float addrspace(1)* %892, align 4, !tbaa !7
  %894 = add nsw i32 %890, -1
  %895 = sext i32 %894 to i64
  %896 = getelementptr inbounds float, float addrspace(1)* %0, i64 %895
  %897 = load float, float addrspace(1)* %896, align 4, !tbaa !7
  %898 = sub nsw i32 %894, %15
  %899 = sext i32 %898 to i64
  %900 = getelementptr inbounds float, float addrspace(1)* %0, i64 %899
  %901 = load float, float addrspace(1)* %900, align 4, !tbaa !7
  %902 = fadd contract float %901, 5.000000e+00
  %903 = add nsw i32 %894, %15
  %904 = sext i32 %903 to i64
  %905 = getelementptr inbounds float, float addrspace(1)* %0, i64 %904
  %906 = load float, float addrspace(1)* %905, align 4, !tbaa !7
  %907 = fadd contract float %906, 5.000000e+00
  %908 = tail call float @llvm.minnum.f32(float %897, float %902)
  %909 = tail call float @llvm.minnum.f32(float %907, float %299)
  %910 = tail call float @llvm.minnum.f32(float %908, float %909)
  %911 = fsub contract float %910, %299
  %912 = fadd contract float %911, 9.000000e+04
  %913 = fadd contract float %893, %912
  %914 = getelementptr inbounds float, float addrspace(1)* %0, i64 %891
  %915 = load float, float addrspace(1)* %914, align 4, !tbaa !7
  %916 = fadd contract float %915, %913
  store float %916, float addrspace(1)* %914, align 4, !tbaa !7
  %917 = add nsw i32 %890, %15
  %918 = sext i32 %917 to i64
  %919 = getelementptr inbounds float, float addrspace(1)* %1, i64 %918
  %920 = load float, float addrspace(1)* %919, align 4, !tbaa !7
  %921 = add nsw i32 %917, -1
  %922 = sext i32 %921 to i64
  %923 = getelementptr inbounds float, float addrspace(1)* %0, i64 %922
  %924 = load float, float addrspace(1)* %923, align 4, !tbaa !7
  %925 = sub nsw i32 %921, %15
  %926 = sext i32 %925 to i64
  %927 = getelementptr inbounds float, float addrspace(1)* %0, i64 %926
  %928 = load float, float addrspace(1)* %927, align 4, !tbaa !7
  %929 = fadd contract float %928, 5.000000e+00
  %930 = add nsw i32 %921, %15
  %931 = sext i32 %930 to i64
  %932 = getelementptr inbounds float, float addrspace(1)* %0, i64 %931
  %933 = load float, float addrspace(1)* %932, align 4, !tbaa !7
  %934 = fadd contract float %933, 5.000000e+00
  %935 = tail call float @llvm.minnum.f32(float %924, float %929)
  %936 = tail call float @llvm.minnum.f32(float %934, float %299)
  %937 = tail call float @llvm.minnum.f32(float %935, float %936)
  %938 = fsub contract float %937, %299
  %939 = fadd contract float %938, 9.000000e+04
  %940 = fadd contract float %920, %939
  %941 = getelementptr inbounds float, float addrspace(1)* %0, i64 %918
  %942 = load float, float addrspace(1)* %941, align 4, !tbaa !7
  %943 = fadd contract float %942, %940
  store float %943, float addrspace(1)* %941, align 4, !tbaa !7
  %944 = add nsw i32 %917, %15
  %945 = sext i32 %944 to i64
  %946 = getelementptr inbounds float, float addrspace(1)* %1, i64 %945
  %947 = load float, float addrspace(1)* %946, align 4, !tbaa !7
  %948 = add nsw i32 %944, -1
  %949 = sext i32 %948 to i64
  %950 = getelementptr inbounds float, float addrspace(1)* %0, i64 %949
  %951 = load float, float addrspace(1)* %950, align 4, !tbaa !7
  %952 = sub nsw i32 %948, %15
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds float, float addrspace(1)* %0, i64 %953
  %955 = load float, float addrspace(1)* %954, align 4, !tbaa !7
  %956 = fadd contract float %955, 5.000000e+00
  %957 = add nsw i32 %948, %15
  %958 = sext i32 %957 to i64
  %959 = getelementptr inbounds float, float addrspace(1)* %0, i64 %958
  %960 = load float, float addrspace(1)* %959, align 4, !tbaa !7
  %961 = fadd contract float %960, 5.000000e+00
  %962 = tail call float @llvm.minnum.f32(float %951, float %956)
  %963 = tail call float @llvm.minnum.f32(float %961, float %299)
  %964 = tail call float @llvm.minnum.f32(float %962, float %963)
  %965 = fsub contract float %964, %299
  %966 = fadd contract float %965, 9.000000e+04
  %967 = fadd contract float %947, %966
  %968 = getelementptr inbounds float, float addrspace(1)* %0, i64 %945
  %969 = load float, float addrspace(1)* %968, align 4, !tbaa !7
  %970 = fadd contract float %969, %967
  store float %970, float addrspace(1)* %968, align 4, !tbaa !7
  %971 = add nsw i32 %944, %15
  %972 = sext i32 %971 to i64
  %973 = getelementptr inbounds float, float addrspace(1)* %1, i64 %972
  %974 = load float, float addrspace(1)* %973, align 4, !tbaa !7
  %975 = add nsw i32 %971, -1
  %976 = sext i32 %975 to i64
  %977 = getelementptr inbounds float, float addrspace(1)* %0, i64 %976
  %978 = load float, float addrspace(1)* %977, align 4, !tbaa !7
  %979 = sub nsw i32 %975, %15
  %980 = sext i32 %979 to i64
  %981 = getelementptr inbounds float, float addrspace(1)* %0, i64 %980
  %982 = load float, float addrspace(1)* %981, align 4, !tbaa !7
  %983 = fadd contract float %982, 5.000000e+00
  %984 = add nsw i32 %975, %15
  %985 = sext i32 %984 to i64
  %986 = getelementptr inbounds float, float addrspace(1)* %0, i64 %985
  %987 = load float, float addrspace(1)* %986, align 4, !tbaa !7
  %988 = fadd contract float %987, 5.000000e+00
  %989 = tail call float @llvm.minnum.f32(float %978, float %983)
  %990 = tail call float @llvm.minnum.f32(float %988, float %299)
  %991 = tail call float @llvm.minnum.f32(float %989, float %990)
  %992 = fsub contract float %991, %299
  %993 = fadd contract float %992, 9.000000e+04
  %994 = fadd contract float %974, %993
  %995 = getelementptr inbounds float, float addrspace(1)* %0, i64 %972
  %996 = load float, float addrspace(1)* %995, align 4, !tbaa !7
  %997 = fadd contract float %996, %994
  store float %997, float addrspace(1)* %995, align 4, !tbaa !7
  %998 = add nsw i32 %971, %15
  %999 = sext i32 %998 to i64
  %1000 = getelementptr inbounds float, float addrspace(1)* %1, i64 %999
  %1001 = load float, float addrspace(1)* %1000, align 4, !tbaa !7
  %1002 = add nsw i32 %998, -1
  %1003 = sext i32 %1002 to i64
  %1004 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1003
  %1005 = load float, float addrspace(1)* %1004, align 4, !tbaa !7
  %1006 = sub nsw i32 %1002, %15
  %1007 = sext i32 %1006 to i64
  %1008 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1007
  %1009 = load float, float addrspace(1)* %1008, align 4, !tbaa !7
  %1010 = fadd contract float %1009, 5.000000e+00
  %1011 = add nsw i32 %1002, %15
  %1012 = sext i32 %1011 to i64
  %1013 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1012
  %1014 = load float, float addrspace(1)* %1013, align 4, !tbaa !7
  %1015 = fadd contract float %1014, 5.000000e+00
  %1016 = tail call float @llvm.minnum.f32(float %1005, float %1010)
  %1017 = tail call float @llvm.minnum.f32(float %1015, float %299)
  %1018 = tail call float @llvm.minnum.f32(float %1016, float %1017)
  %1019 = fsub contract float %1018, %299
  %1020 = fadd contract float %1019, 9.000000e+04
  %1021 = fadd contract float %1001, %1020
  %1022 = getelementptr inbounds float, float addrspace(1)* %0, i64 %999
  %1023 = load float, float addrspace(1)* %1022, align 4, !tbaa !7
  %1024 = fadd contract float %1023, %1021
  store float %1024, float addrspace(1)* %1022, align 4, !tbaa !7
  %1025 = add nsw i32 %998, %15
  %1026 = sext i32 %1025 to i64
  %1027 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1026
  %1028 = load float, float addrspace(1)* %1027, align 4, !tbaa !7
  %1029 = add nsw i32 %1025, -1
  %1030 = sext i32 %1029 to i64
  %1031 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1030
  %1032 = load float, float addrspace(1)* %1031, align 4, !tbaa !7
  %1033 = sub nsw i32 %1029, %15
  %1034 = sext i32 %1033 to i64
  %1035 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1034
  %1036 = load float, float addrspace(1)* %1035, align 4, !tbaa !7
  %1037 = fadd contract float %1036, 5.000000e+00
  %1038 = add nsw i32 %1029, %15
  %1039 = sext i32 %1038 to i64
  %1040 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1039
  %1041 = load float, float addrspace(1)* %1040, align 4, !tbaa !7
  %1042 = fadd contract float %1041, 5.000000e+00
  %1043 = tail call float @llvm.minnum.f32(float %1032, float %1037)
  %1044 = tail call float @llvm.minnum.f32(float %1042, float %299)
  %1045 = tail call float @llvm.minnum.f32(float %1043, float %1044)
  %1046 = fsub contract float %1045, %299
  %1047 = fadd contract float %1046, 9.000000e+04
  %1048 = fadd contract float %1028, %1047
  %1049 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1026
  %1050 = load float, float addrspace(1)* %1049, align 4, !tbaa !7
  %1051 = fadd contract float %1050, %1048
  store float %1051, float addrspace(1)* %1049, align 4, !tbaa !7
  %1052 = add nsw i32 %1025, %15
  %1053 = sext i32 %1052 to i64
  %1054 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1053
  %1055 = load float, float addrspace(1)* %1054, align 4, !tbaa !7
  %1056 = add nsw i32 %1052, -1
  %1057 = sext i32 %1056 to i64
  %1058 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1057
  %1059 = load float, float addrspace(1)* %1058, align 4, !tbaa !7
  %1060 = sub nsw i32 %1056, %15
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1061
  %1063 = load float, float addrspace(1)* %1062, align 4, !tbaa !7
  %1064 = fadd contract float %1063, 5.000000e+00
  %1065 = add nsw i32 %1056, %15
  %1066 = sext i32 %1065 to i64
  %1067 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1066
  %1068 = load float, float addrspace(1)* %1067, align 4, !tbaa !7
  %1069 = fadd contract float %1068, 5.000000e+00
  %1070 = tail call float @llvm.minnum.f32(float %1059, float %1064)
  %1071 = tail call float @llvm.minnum.f32(float %1069, float %299)
  %1072 = tail call float @llvm.minnum.f32(float %1070, float %1071)
  %1073 = fsub contract float %1072, %299
  %1074 = fadd contract float %1073, 9.000000e+04
  %1075 = fadd contract float %1055, %1074
  %1076 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1053
  %1077 = load float, float addrspace(1)* %1076, align 4, !tbaa !7
  %1078 = fadd contract float %1077, %1075
  store float %1078, float addrspace(1)* %1076, align 4, !tbaa !7
  %1079 = add nsw i32 %1052, %15
  %1080 = sext i32 %1079 to i64
  %1081 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1080
  %1082 = load float, float addrspace(1)* %1081, align 4, !tbaa !7
  %1083 = add nsw i32 %1079, -1
  %1084 = sext i32 %1083 to i64
  %1085 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1084
  %1086 = load float, float addrspace(1)* %1085, align 4, !tbaa !7
  %1087 = sub nsw i32 %1083, %15
  %1088 = sext i32 %1087 to i64
  %1089 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1088
  %1090 = load float, float addrspace(1)* %1089, align 4, !tbaa !7
  %1091 = fadd contract float %1090, 5.000000e+00
  %1092 = add nsw i32 %1083, %15
  %1093 = sext i32 %1092 to i64
  %1094 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1093
  %1095 = load float, float addrspace(1)* %1094, align 4, !tbaa !7
  %1096 = fadd contract float %1095, 5.000000e+00
  %1097 = tail call float @llvm.minnum.f32(float %1086, float %1091)
  %1098 = tail call float @llvm.minnum.f32(float %1096, float %299)
  %1099 = tail call float @llvm.minnum.f32(float %1097, float %1098)
  %1100 = fsub contract float %1099, %299
  %1101 = fadd contract float %1100, 9.000000e+04
  %1102 = fadd contract float %1082, %1101
  %1103 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1080
  %1104 = load float, float addrspace(1)* %1103, align 4, !tbaa !7
  %1105 = fadd contract float %1104, %1102
  store float %1105, float addrspace(1)* %1103, align 4, !tbaa !7
  %1106 = add nsw i32 %1079, %15
  %1107 = sext i32 %1106 to i64
  %1108 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1107
  %1109 = load float, float addrspace(1)* %1108, align 4, !tbaa !7
  %1110 = add nsw i32 %1106, -1
  %1111 = sext i32 %1110 to i64
  %1112 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1111
  %1113 = load float, float addrspace(1)* %1112, align 4, !tbaa !7
  %1114 = sub nsw i32 %1110, %15
  %1115 = sext i32 %1114 to i64
  %1116 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1115
  %1117 = load float, float addrspace(1)* %1116, align 4, !tbaa !7
  %1118 = fadd contract float %1117, 5.000000e+00
  %1119 = add nsw i32 %1110, %15
  %1120 = sext i32 %1119 to i64
  %1121 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1120
  %1122 = load float, float addrspace(1)* %1121, align 4, !tbaa !7
  %1123 = fadd contract float %1122, 5.000000e+00
  %1124 = tail call float @llvm.minnum.f32(float %1113, float %1118)
  %1125 = tail call float @llvm.minnum.f32(float %1123, float %299)
  %1126 = tail call float @llvm.minnum.f32(float %1124, float %1125)
  %1127 = fsub contract float %1126, %299
  %1128 = fadd contract float %1127, 9.000000e+04
  %1129 = fadd contract float %1109, %1128
  %1130 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1107
  %1131 = load float, float addrspace(1)* %1130, align 4, !tbaa !7
  %1132 = fadd contract float %1131, %1129
  store float %1132, float addrspace(1)* %1130, align 4, !tbaa !7
  %1133 = add nsw i32 %1106, %15
  %1134 = sext i32 %1133 to i64
  %1135 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1134
  %1136 = load float, float addrspace(1)* %1135, align 4, !tbaa !7
  %1137 = add nsw i32 %1133, -1
  %1138 = sext i32 %1137 to i64
  %1139 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1138
  %1140 = load float, float addrspace(1)* %1139, align 4, !tbaa !7
  %1141 = sub nsw i32 %1137, %15
  %1142 = sext i32 %1141 to i64
  %1143 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1142
  %1144 = load float, float addrspace(1)* %1143, align 4, !tbaa !7
  %1145 = fadd contract float %1144, 5.000000e+00
  %1146 = add nsw i32 %1137, %15
  %1147 = sext i32 %1146 to i64
  %1148 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1147
  %1149 = load float, float addrspace(1)* %1148, align 4, !tbaa !7
  %1150 = fadd contract float %1149, 5.000000e+00
  %1151 = tail call float @llvm.minnum.f32(float %1140, float %1145)
  %1152 = tail call float @llvm.minnum.f32(float %1150, float %299)
  %1153 = tail call float @llvm.minnum.f32(float %1151, float %1152)
  %1154 = fsub contract float %1153, %299
  %1155 = fadd contract float %1154, 9.000000e+04
  %1156 = fadd contract float %1136, %1155
  %1157 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1134
  %1158 = load float, float addrspace(1)* %1157, align 4, !tbaa !7
  %1159 = fadd contract float %1158, %1156
  store float %1159, float addrspace(1)* %1157, align 4, !tbaa !7
  %1160 = add nsw i32 %1133, %15
  %1161 = sext i32 %1160 to i64
  %1162 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1161
  %1163 = load float, float addrspace(1)* %1162, align 4, !tbaa !7
  %1164 = add nsw i32 %1160, -1
  %1165 = sext i32 %1164 to i64
  %1166 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1165
  %1167 = load float, float addrspace(1)* %1166, align 4, !tbaa !7
  %1168 = sub nsw i32 %1164, %15
  %1169 = sext i32 %1168 to i64
  %1170 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1169
  %1171 = load float, float addrspace(1)* %1170, align 4, !tbaa !7
  %1172 = fadd contract float %1171, 5.000000e+00
  %1173 = add nsw i32 %1164, %15
  %1174 = sext i32 %1173 to i64
  %1175 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1174
  %1176 = load float, float addrspace(1)* %1175, align 4, !tbaa !7
  %1177 = fadd contract float %1176, 5.000000e+00
  %1178 = tail call float @llvm.minnum.f32(float %1167, float %1172)
  %1179 = tail call float @llvm.minnum.f32(float %1177, float %299)
  %1180 = tail call float @llvm.minnum.f32(float %1178, float %1179)
  %1181 = fsub contract float %1180, %299
  %1182 = fadd contract float %1181, 9.000000e+04
  %1183 = fadd contract float %1163, %1182
  %1184 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1161
  %1185 = load float, float addrspace(1)* %1184, align 4, !tbaa !7
  %1186 = fadd contract float %1185, %1183
  store float %1186, float addrspace(1)* %1184, align 4, !tbaa !7
  %1187 = add nsw i32 %1160, %15
  %1188 = sext i32 %1187 to i64
  %1189 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1188
  %1190 = load float, float addrspace(1)* %1189, align 4, !tbaa !7
  %1191 = add nsw i32 %1187, -1
  %1192 = sext i32 %1191 to i64
  %1193 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1192
  %1194 = load float, float addrspace(1)* %1193, align 4, !tbaa !7
  %1195 = sub nsw i32 %1191, %15
  %1196 = sext i32 %1195 to i64
  %1197 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1196
  %1198 = load float, float addrspace(1)* %1197, align 4, !tbaa !7
  %1199 = fadd contract float %1198, 5.000000e+00
  %1200 = add nsw i32 %1191, %15
  %1201 = sext i32 %1200 to i64
  %1202 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1201
  %1203 = load float, float addrspace(1)* %1202, align 4, !tbaa !7
  %1204 = fadd contract float %1203, 5.000000e+00
  %1205 = tail call float @llvm.minnum.f32(float %1194, float %1199)
  %1206 = tail call float @llvm.minnum.f32(float %1204, float %299)
  %1207 = tail call float @llvm.minnum.f32(float %1205, float %1206)
  %1208 = fsub contract float %1207, %299
  %1209 = fadd contract float %1208, 9.000000e+04
  %1210 = fadd contract float %1190, %1209
  %1211 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1188
  %1212 = load float, float addrspace(1)* %1211, align 4, !tbaa !7
  %1213 = fadd contract float %1212, %1210
  store float %1213, float addrspace(1)* %1211, align 4, !tbaa !7
  %1214 = add nsw i32 %1187, %15
  %1215 = sext i32 %1214 to i64
  %1216 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1215
  %1217 = load float, float addrspace(1)* %1216, align 4, !tbaa !7
  %1218 = add nsw i32 %1214, -1
  %1219 = sext i32 %1218 to i64
  %1220 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1219
  %1221 = load float, float addrspace(1)* %1220, align 4, !tbaa !7
  %1222 = sub nsw i32 %1218, %15
  %1223 = sext i32 %1222 to i64
  %1224 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1223
  %1225 = load float, float addrspace(1)* %1224, align 4, !tbaa !7
  %1226 = fadd contract float %1225, 5.000000e+00
  %1227 = add nsw i32 %1218, %15
  %1228 = sext i32 %1227 to i64
  %1229 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1228
  %1230 = load float, float addrspace(1)* %1229, align 4, !tbaa !7
  %1231 = fadd contract float %1230, 5.000000e+00
  %1232 = tail call float @llvm.minnum.f32(float %1221, float %1226)
  %1233 = tail call float @llvm.minnum.f32(float %1231, float %299)
  %1234 = tail call float @llvm.minnum.f32(float %1232, float %1233)
  %1235 = fsub contract float %1234, %299
  %1236 = fadd contract float %1235, 9.000000e+04
  %1237 = fadd contract float %1217, %1236
  %1238 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1215
  %1239 = load float, float addrspace(1)* %1238, align 4, !tbaa !7
  %1240 = fadd contract float %1239, %1237
  store float %1240, float addrspace(1)* %1238, align 4, !tbaa !7
  %1241 = add nsw i32 %1214, %15
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1242
  %1244 = load float, float addrspace(1)* %1243, align 4, !tbaa !7
  %1245 = add nsw i32 %1241, -1
  %1246 = sext i32 %1245 to i64
  %1247 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1246
  %1248 = load float, float addrspace(1)* %1247, align 4, !tbaa !7
  %1249 = sub nsw i32 %1245, %15
  %1250 = sext i32 %1249 to i64
  %1251 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1250
  %1252 = load float, float addrspace(1)* %1251, align 4, !tbaa !7
  %1253 = fadd contract float %1252, 5.000000e+00
  %1254 = add nsw i32 %1245, %15
  %1255 = sext i32 %1254 to i64
  %1256 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1255
  %1257 = load float, float addrspace(1)* %1256, align 4, !tbaa !7
  %1258 = fadd contract float %1257, 5.000000e+00
  %1259 = tail call float @llvm.minnum.f32(float %1248, float %1253)
  %1260 = tail call float @llvm.minnum.f32(float %1258, float %299)
  %1261 = tail call float @llvm.minnum.f32(float %1259, float %1260)
  %1262 = fsub contract float %1261, %299
  %1263 = fadd contract float %1262, 9.000000e+04
  %1264 = fadd contract float %1244, %1263
  %1265 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1242
  %1266 = load float, float addrspace(1)* %1265, align 4, !tbaa !7
  %1267 = fadd contract float %1266, %1264
  store float %1267, float addrspace(1)* %1265, align 4, !tbaa !7
  %1268 = add nsw i32 %1241, %15
  %1269 = sext i32 %1268 to i64
  %1270 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1269
  %1271 = load float, float addrspace(1)* %1270, align 4, !tbaa !7
  %1272 = add nsw i32 %1268, -1
  %1273 = sext i32 %1272 to i64
  %1274 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1273
  %1275 = load float, float addrspace(1)* %1274, align 4, !tbaa !7
  %1276 = sub nsw i32 %1272, %15
  %1277 = sext i32 %1276 to i64
  %1278 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1277
  %1279 = load float, float addrspace(1)* %1278, align 4, !tbaa !7
  %1280 = fadd contract float %1279, 5.000000e+00
  %1281 = add nsw i32 %1272, %15
  %1282 = sext i32 %1281 to i64
  %1283 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1282
  %1284 = load float, float addrspace(1)* %1283, align 4, !tbaa !7
  %1285 = fadd contract float %1284, 5.000000e+00
  %1286 = tail call float @llvm.minnum.f32(float %1275, float %1280)
  %1287 = tail call float @llvm.minnum.f32(float %1285, float %299)
  %1288 = tail call float @llvm.minnum.f32(float %1286, float %1287)
  %1289 = fsub contract float %1288, %299
  %1290 = fadd contract float %1289, 9.000000e+04
  %1291 = fadd contract float %1271, %1290
  %1292 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1269
  %1293 = load float, float addrspace(1)* %1292, align 4, !tbaa !7
  %1294 = fadd contract float %1293, %1291
  store float %1294, float addrspace(1)* %1292, align 4, !tbaa !7
  %1295 = add nsw i32 %1268, %15
  %1296 = sext i32 %1295 to i64
  %1297 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1296
  %1298 = load float, float addrspace(1)* %1297, align 4, !tbaa !7
  %1299 = add nsw i32 %1295, -1
  %1300 = sext i32 %1299 to i64
  %1301 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1300
  %1302 = load float, float addrspace(1)* %1301, align 4, !tbaa !7
  %1303 = sub nsw i32 %1299, %15
  %1304 = sext i32 %1303 to i64
  %1305 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1304
  %1306 = load float, float addrspace(1)* %1305, align 4, !tbaa !7
  %1307 = fadd contract float %1306, 5.000000e+00
  %1308 = add nsw i32 %1299, %15
  %1309 = sext i32 %1308 to i64
  %1310 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1309
  %1311 = load float, float addrspace(1)* %1310, align 4, !tbaa !7
  %1312 = fadd contract float %1311, 5.000000e+00
  %1313 = tail call float @llvm.minnum.f32(float %1302, float %1307)
  %1314 = tail call float @llvm.minnum.f32(float %1312, float %299)
  %1315 = tail call float @llvm.minnum.f32(float %1313, float %1314)
  %1316 = fsub contract float %1315, %299
  %1317 = fadd contract float %1316, 9.000000e+04
  %1318 = fadd contract float %1298, %1317
  %1319 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1296
  %1320 = load float, float addrspace(1)* %1319, align 4, !tbaa !7
  %1321 = fadd contract float %1320, %1318
  store float %1321, float addrspace(1)* %1319, align 4, !tbaa !7
  %1322 = add nsw i32 %1295, %15
  %1323 = sext i32 %1322 to i64
  %1324 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1323
  %1325 = load float, float addrspace(1)* %1324, align 4, !tbaa !7
  %1326 = add nsw i32 %1322, -1
  %1327 = sext i32 %1326 to i64
  %1328 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1327
  %1329 = load float, float addrspace(1)* %1328, align 4, !tbaa !7
  %1330 = sub nsw i32 %1326, %15
  %1331 = sext i32 %1330 to i64
  %1332 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1331
  %1333 = load float, float addrspace(1)* %1332, align 4, !tbaa !7
  %1334 = fadd contract float %1333, 5.000000e+00
  %1335 = add nsw i32 %1326, %15
  %1336 = sext i32 %1335 to i64
  %1337 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1336
  %1338 = load float, float addrspace(1)* %1337, align 4, !tbaa !7
  %1339 = fadd contract float %1338, 5.000000e+00
  %1340 = tail call float @llvm.minnum.f32(float %1329, float %1334)
  %1341 = tail call float @llvm.minnum.f32(float %1339, float %299)
  %1342 = tail call float @llvm.minnum.f32(float %1340, float %1341)
  %1343 = fsub contract float %1342, %299
  %1344 = fadd contract float %1343, 9.000000e+04
  %1345 = fadd contract float %1325, %1344
  %1346 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1323
  %1347 = load float, float addrspace(1)* %1346, align 4, !tbaa !7
  %1348 = fadd contract float %1347, %1345
  store float %1348, float addrspace(1)* %1346, align 4, !tbaa !7
  %1349 = add nsw i32 %1322, %15
  %1350 = sext i32 %1349 to i64
  %1351 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1350
  %1352 = load float, float addrspace(1)* %1351, align 4, !tbaa !7
  %1353 = add nsw i32 %1349, -1
  %1354 = sext i32 %1353 to i64
  %1355 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1354
  %1356 = load float, float addrspace(1)* %1355, align 4, !tbaa !7
  %1357 = sub nsw i32 %1353, %15
  %1358 = sext i32 %1357 to i64
  %1359 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1358
  %1360 = load float, float addrspace(1)* %1359, align 4, !tbaa !7
  %1361 = fadd contract float %1360, 5.000000e+00
  %1362 = add nsw i32 %1353, %15
  %1363 = sext i32 %1362 to i64
  %1364 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1363
  %1365 = load float, float addrspace(1)* %1364, align 4, !tbaa !7
  %1366 = fadd contract float %1365, 5.000000e+00
  %1367 = tail call float @llvm.minnum.f32(float %1356, float %1361)
  %1368 = tail call float @llvm.minnum.f32(float %1366, float %299)
  %1369 = tail call float @llvm.minnum.f32(float %1367, float %1368)
  %1370 = fsub contract float %1369, %299
  %1371 = fadd contract float %1370, 9.000000e+04
  %1372 = fadd contract float %1352, %1371
  %1373 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1350
  %1374 = load float, float addrspace(1)* %1373, align 4, !tbaa !7
  %1375 = fadd contract float %1374, %1372
  store float %1375, float addrspace(1)* %1373, align 4, !tbaa !7
  %1376 = add nsw i32 %1349, %15
  %1377 = sext i32 %1376 to i64
  %1378 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1377
  %1379 = load float, float addrspace(1)* %1378, align 4, !tbaa !7
  %1380 = add nsw i32 %1376, -1
  %1381 = sext i32 %1380 to i64
  %1382 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1381
  %1383 = load float, float addrspace(1)* %1382, align 4, !tbaa !7
  %1384 = sub nsw i32 %1380, %15
  %1385 = sext i32 %1384 to i64
  %1386 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1385
  %1387 = load float, float addrspace(1)* %1386, align 4, !tbaa !7
  %1388 = fadd contract float %1387, 5.000000e+00
  %1389 = add nsw i32 %1380, %15
  %1390 = sext i32 %1389 to i64
  %1391 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1390
  %1392 = load float, float addrspace(1)* %1391, align 4, !tbaa !7
  %1393 = fadd contract float %1392, 5.000000e+00
  %1394 = tail call float @llvm.minnum.f32(float %1383, float %1388)
  %1395 = tail call float @llvm.minnum.f32(float %1393, float %299)
  %1396 = tail call float @llvm.minnum.f32(float %1394, float %1395)
  %1397 = fsub contract float %1396, %299
  %1398 = fadd contract float %1397, 9.000000e+04
  %1399 = fadd contract float %1379, %1398
  %1400 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1377
  %1401 = load float, float addrspace(1)* %1400, align 4, !tbaa !7
  %1402 = fadd contract float %1401, %1399
  store float %1402, float addrspace(1)* %1400, align 4, !tbaa !7
  %1403 = add nsw i32 %1376, %15
  %1404 = sext i32 %1403 to i64
  %1405 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1404
  %1406 = load float, float addrspace(1)* %1405, align 4, !tbaa !7
  %1407 = add nsw i32 %1403, -1
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1408
  %1410 = load float, float addrspace(1)* %1409, align 4, !tbaa !7
  %1411 = sub nsw i32 %1407, %15
  %1412 = sext i32 %1411 to i64
  %1413 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1412
  %1414 = load float, float addrspace(1)* %1413, align 4, !tbaa !7
  %1415 = fadd contract float %1414, 5.000000e+00
  %1416 = add nsw i32 %1407, %15
  %1417 = sext i32 %1416 to i64
  %1418 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1417
  %1419 = load float, float addrspace(1)* %1418, align 4, !tbaa !7
  %1420 = fadd contract float %1419, 5.000000e+00
  %1421 = tail call float @llvm.minnum.f32(float %1410, float %1415)
  %1422 = tail call float @llvm.minnum.f32(float %1420, float %299)
  %1423 = tail call float @llvm.minnum.f32(float %1421, float %1422)
  %1424 = fsub contract float %1423, %299
  %1425 = fadd contract float %1424, 9.000000e+04
  %1426 = fadd contract float %1406, %1425
  %1427 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1404
  %1428 = load float, float addrspace(1)* %1427, align 4, !tbaa !7
  %1429 = fadd contract float %1428, %1426
  store float %1429, float addrspace(1)* %1427, align 4, !tbaa !7
  %1430 = add nsw i32 %1403, %15
  %1431 = sext i32 %1430 to i64
  %1432 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1431
  %1433 = load float, float addrspace(1)* %1432, align 4, !tbaa !7
  %1434 = add nsw i32 %1430, -1
  %1435 = sext i32 %1434 to i64
  %1436 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1435
  %1437 = load float, float addrspace(1)* %1436, align 4, !tbaa !7
  %1438 = sub nsw i32 %1434, %15
  %1439 = sext i32 %1438 to i64
  %1440 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1439
  %1441 = load float, float addrspace(1)* %1440, align 4, !tbaa !7
  %1442 = fadd contract float %1441, 5.000000e+00
  %1443 = add nsw i32 %1434, %15
  %1444 = sext i32 %1443 to i64
  %1445 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1444
  %1446 = load float, float addrspace(1)* %1445, align 4, !tbaa !7
  %1447 = fadd contract float %1446, 5.000000e+00
  %1448 = tail call float @llvm.minnum.f32(float %1437, float %1442)
  %1449 = tail call float @llvm.minnum.f32(float %1447, float %299)
  %1450 = tail call float @llvm.minnum.f32(float %1448, float %1449)
  %1451 = fsub contract float %1450, %299
  %1452 = fadd contract float %1451, 9.000000e+04
  %1453 = fadd contract float %1433, %1452
  %1454 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1431
  %1455 = load float, float addrspace(1)* %1454, align 4, !tbaa !7
  %1456 = fadd contract float %1455, %1453
  store float %1456, float addrspace(1)* %1454, align 4, !tbaa !7
  %1457 = add nsw i32 %1430, %15
  %1458 = sext i32 %1457 to i64
  %1459 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1458
  %1460 = load float, float addrspace(1)* %1459, align 4, !tbaa !7
  %1461 = add nsw i32 %1457, -1
  %1462 = sext i32 %1461 to i64
  %1463 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1462
  %1464 = load float, float addrspace(1)* %1463, align 4, !tbaa !7
  %1465 = sub nsw i32 %1461, %15
  %1466 = sext i32 %1465 to i64
  %1467 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1466
  %1468 = load float, float addrspace(1)* %1467, align 4, !tbaa !7
  %1469 = fadd contract float %1468, 5.000000e+00
  %1470 = add nsw i32 %1461, %15
  %1471 = sext i32 %1470 to i64
  %1472 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1471
  %1473 = load float, float addrspace(1)* %1472, align 4, !tbaa !7
  %1474 = fadd contract float %1473, 5.000000e+00
  %1475 = tail call float @llvm.minnum.f32(float %1464, float %1469)
  %1476 = tail call float @llvm.minnum.f32(float %1474, float %299)
  %1477 = tail call float @llvm.minnum.f32(float %1475, float %1476)
  %1478 = fsub contract float %1477, %299
  %1479 = fadd contract float %1478, 9.000000e+04
  %1480 = fadd contract float %1460, %1479
  %1481 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1458
  %1482 = load float, float addrspace(1)* %1481, align 4, !tbaa !7
  %1483 = fadd contract float %1482, %1480
  store float %1483, float addrspace(1)* %1481, align 4, !tbaa !7
  %1484 = add nsw i32 %1457, %15
  %1485 = sext i32 %1484 to i64
  %1486 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1485
  %1487 = load float, float addrspace(1)* %1486, align 4, !tbaa !7
  %1488 = add nsw i32 %1484, -1
  %1489 = sext i32 %1488 to i64
  %1490 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1489
  %1491 = load float, float addrspace(1)* %1490, align 4, !tbaa !7
  %1492 = sub nsw i32 %1488, %15
  %1493 = sext i32 %1492 to i64
  %1494 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1493
  %1495 = load float, float addrspace(1)* %1494, align 4, !tbaa !7
  %1496 = fadd contract float %1495, 5.000000e+00
  %1497 = add nsw i32 %1488, %15
  %1498 = sext i32 %1497 to i64
  %1499 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1498
  %1500 = load float, float addrspace(1)* %1499, align 4, !tbaa !7
  %1501 = fadd contract float %1500, 5.000000e+00
  %1502 = tail call float @llvm.minnum.f32(float %1491, float %1496)
  %1503 = tail call float @llvm.minnum.f32(float %1501, float %299)
  %1504 = tail call float @llvm.minnum.f32(float %1502, float %1503)
  %1505 = fsub contract float %1504, %299
  %1506 = fadd contract float %1505, 9.000000e+04
  %1507 = fadd contract float %1487, %1506
  %1508 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1485
  %1509 = load float, float addrspace(1)* %1508, align 4, !tbaa !7
  %1510 = fadd contract float %1509, %1507
  store float %1510, float addrspace(1)* %1508, align 4, !tbaa !7
  %1511 = add nsw i32 %1484, %15
  %1512 = sext i32 %1511 to i64
  %1513 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1512
  %1514 = load float, float addrspace(1)* %1513, align 4, !tbaa !7
  %1515 = add nsw i32 %1511, -1
  %1516 = sext i32 %1515 to i64
  %1517 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1516
  %1518 = load float, float addrspace(1)* %1517, align 4, !tbaa !7
  %1519 = sub nsw i32 %1515, %15
  %1520 = sext i32 %1519 to i64
  %1521 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1520
  %1522 = load float, float addrspace(1)* %1521, align 4, !tbaa !7
  %1523 = fadd contract float %1522, 5.000000e+00
  %1524 = add nsw i32 %1515, %15
  %1525 = sext i32 %1524 to i64
  %1526 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1525
  %1527 = load float, float addrspace(1)* %1526, align 4, !tbaa !7
  %1528 = fadd contract float %1527, 5.000000e+00
  %1529 = tail call float @llvm.minnum.f32(float %1518, float %1523)
  %1530 = tail call float @llvm.minnum.f32(float %1528, float %299)
  %1531 = tail call float @llvm.minnum.f32(float %1529, float %1530)
  %1532 = fsub contract float %1531, %299
  %1533 = fadd contract float %1532, 9.000000e+04
  %1534 = fadd contract float %1514, %1533
  %1535 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1512
  %1536 = load float, float addrspace(1)* %1535, align 4, !tbaa !7
  %1537 = fadd contract float %1536, %1534
  store float %1537, float addrspace(1)* %1535, align 4, !tbaa !7
  %1538 = add nsw i32 %1511, %15
  %1539 = sext i32 %1538 to i64
  %1540 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1539
  %1541 = load float, float addrspace(1)* %1540, align 4, !tbaa !7
  %1542 = add nsw i32 %1538, -1
  %1543 = sext i32 %1542 to i64
  %1544 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1543
  %1545 = load float, float addrspace(1)* %1544, align 4, !tbaa !7
  %1546 = sub nsw i32 %1542, %15
  %1547 = sext i32 %1546 to i64
  %1548 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1547
  %1549 = load float, float addrspace(1)* %1548, align 4, !tbaa !7
  %1550 = fadd contract float %1549, 5.000000e+00
  %1551 = add nsw i32 %1542, %15
  %1552 = sext i32 %1551 to i64
  %1553 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1552
  %1554 = load float, float addrspace(1)* %1553, align 4, !tbaa !7
  %1555 = fadd contract float %1554, 5.000000e+00
  %1556 = tail call float @llvm.minnum.f32(float %1545, float %1550)
  %1557 = tail call float @llvm.minnum.f32(float %1555, float %299)
  %1558 = tail call float @llvm.minnum.f32(float %1556, float %1557)
  %1559 = fsub contract float %1558, %299
  %1560 = fadd contract float %1559, 9.000000e+04
  %1561 = fadd contract float %1541, %1560
  %1562 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1539
  %1563 = load float, float addrspace(1)* %1562, align 4, !tbaa !7
  %1564 = fadd contract float %1563, %1561
  store float %1564, float addrspace(1)* %1562, align 4, !tbaa !7
  %1565 = add nsw i32 %1538, %15
  %1566 = sext i32 %1565 to i64
  %1567 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1566
  %1568 = load float, float addrspace(1)* %1567, align 4, !tbaa !7
  %1569 = add nsw i32 %1565, -1
  %1570 = sext i32 %1569 to i64
  %1571 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1570
  %1572 = load float, float addrspace(1)* %1571, align 4, !tbaa !7
  %1573 = sub nsw i32 %1569, %15
  %1574 = sext i32 %1573 to i64
  %1575 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1574
  %1576 = load float, float addrspace(1)* %1575, align 4, !tbaa !7
  %1577 = fadd contract float %1576, 5.000000e+00
  %1578 = add nsw i32 %1569, %15
  %1579 = sext i32 %1578 to i64
  %1580 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1579
  %1581 = load float, float addrspace(1)* %1580, align 4, !tbaa !7
  %1582 = fadd contract float %1581, 5.000000e+00
  %1583 = tail call float @llvm.minnum.f32(float %1572, float %1577)
  %1584 = tail call float @llvm.minnum.f32(float %1582, float %299)
  %1585 = tail call float @llvm.minnum.f32(float %1583, float %1584)
  %1586 = fsub contract float %1585, %299
  %1587 = fadd contract float %1586, 9.000000e+04
  %1588 = fadd contract float %1568, %1587
  %1589 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1566
  %1590 = load float, float addrspace(1)* %1589, align 4, !tbaa !7
  %1591 = fadd contract float %1590, %1588
  store float %1591, float addrspace(1)* %1589, align 4, !tbaa !7
  %1592 = add nsw i32 %1565, %15
  %1593 = sext i32 %1592 to i64
  %1594 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1593
  %1595 = load float, float addrspace(1)* %1594, align 4, !tbaa !7
  %1596 = add nsw i32 %1592, -1
  %1597 = sext i32 %1596 to i64
  %1598 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1597
  %1599 = load float, float addrspace(1)* %1598, align 4, !tbaa !7
  %1600 = sub nsw i32 %1596, %15
  %1601 = sext i32 %1600 to i64
  %1602 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1601
  %1603 = load float, float addrspace(1)* %1602, align 4, !tbaa !7
  %1604 = fadd contract float %1603, 5.000000e+00
  %1605 = add nsw i32 %1596, %15
  %1606 = sext i32 %1605 to i64
  %1607 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1606
  %1608 = load float, float addrspace(1)* %1607, align 4, !tbaa !7
  %1609 = fadd contract float %1608, 5.000000e+00
  %1610 = tail call float @llvm.minnum.f32(float %1599, float %1604)
  %1611 = tail call float @llvm.minnum.f32(float %1609, float %299)
  %1612 = tail call float @llvm.minnum.f32(float %1610, float %1611)
  %1613 = fsub contract float %1612, %299
  %1614 = fadd contract float %1613, 9.000000e+04
  %1615 = fadd contract float %1595, %1614
  %1616 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1593
  %1617 = load float, float addrspace(1)* %1616, align 4, !tbaa !7
  %1618 = fadd contract float %1617, %1615
  store float %1618, float addrspace(1)* %1616, align 4, !tbaa !7
  %1619 = add nsw i32 %1592, %15
  %1620 = sext i32 %1619 to i64
  %1621 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1620
  %1622 = load float, float addrspace(1)* %1621, align 4, !tbaa !7
  %1623 = add nsw i32 %1619, -1
  %1624 = sext i32 %1623 to i64
  %1625 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1624
  %1626 = load float, float addrspace(1)* %1625, align 4, !tbaa !7
  %1627 = sub nsw i32 %1623, %15
  %1628 = sext i32 %1627 to i64
  %1629 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1628
  %1630 = load float, float addrspace(1)* %1629, align 4, !tbaa !7
  %1631 = fadd contract float %1630, 5.000000e+00
  %1632 = add nsw i32 %1623, %15
  %1633 = sext i32 %1632 to i64
  %1634 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1633
  %1635 = load float, float addrspace(1)* %1634, align 4, !tbaa !7
  %1636 = fadd contract float %1635, 5.000000e+00
  %1637 = tail call float @llvm.minnum.f32(float %1626, float %1631)
  %1638 = tail call float @llvm.minnum.f32(float %1636, float %299)
  %1639 = tail call float @llvm.minnum.f32(float %1637, float %1638)
  %1640 = fsub contract float %1639, %299
  %1641 = fadd contract float %1640, 9.000000e+04
  %1642 = fadd contract float %1622, %1641
  %1643 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1620
  %1644 = load float, float addrspace(1)* %1643, align 4, !tbaa !7
  %1645 = fadd contract float %1644, %1642
  store float %1645, float addrspace(1)* %1643, align 4, !tbaa !7
  %1646 = add nsw i32 %1619, %15
  %1647 = sext i32 %1646 to i64
  %1648 = getelementptr inbounds float, float addrspace(1)* %1, i64 %1647
  %1649 = load float, float addrspace(1)* %1648, align 4, !tbaa !7
  %1650 = add nsw i32 %1646, -1
  %1651 = sext i32 %1650 to i64
  %1652 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1651
  %1653 = load float, float addrspace(1)* %1652, align 4, !tbaa !7
  %1654 = sub nsw i32 %1650, %15
  %1655 = sext i32 %1654 to i64
  %1656 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1655
  %1657 = load float, float addrspace(1)* %1656, align 4, !tbaa !7
  %1658 = fadd contract float %1657, 5.000000e+00
  %1659 = tail call float @llvm.minnum.f32(float %1653, float %1658)
  %1660 = tail call float @llvm.minnum.f32(float %299, float 1.000000e+07)
  %1661 = tail call float @llvm.minnum.f32(float %1659, float %1660)
  %1662 = fsub contract float %1661, %299
  %1663 = fadd contract float %1662, 9.000000e+04
  %1664 = fadd contract float %1649, %1663
  %1665 = getelementptr inbounds float, float addrspace(1)* %0, i64 %1647
  %1666 = load float, float addrspace(1)* %1665, align 4, !tbaa !7
  %1667 = fadd contract float %1666, %1664
  store float %1667, float addrspace(1)* %1665, align 4, !tbaa !7
  %1668 = add nuw nsw i32 %295, 1
  %1669 = icmp slt i32 %300, %25
  %1670 = icmp slt i32 %296, %293
  %1671 = select i1 %1669, i1 %1670, i1 false
  br i1 %1671, label %294, label %1672, !llvm.loop !11

1672:                                             ; preds = %294, %32
  %1673 = phi i32 [ %34, %32 ], [ %300, %294 ]
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %1674 = add i32 %33, %30
  %1675 = icmp slt i32 %1674, %3
  br i1 %1675, label %32, label %1676, !llvm.loop !13

1676:                                             ; preds = %1672, %4
  ret void
}

; Function Attrs: convergent mustprogress nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.minnum.f32(float, float) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #3

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.y() #3

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr() #3

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.y() #3

attributes #0 = { convergent mustprogress norecurse nounwind "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{i32 0, i32 1024}
!5 = !{i16 1, i16 1025}
!6 = !{}
!7 = !{!8, !8, i64 0}
!8 = !{!"float", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C++ TBAA"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.mustprogress"}
!13 = distinct !{!13, !12}
