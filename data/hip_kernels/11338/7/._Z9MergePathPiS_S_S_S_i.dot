digraph "CFG for '_Z9MergePathPiS_S_S_S_i' function" {
	label="CFG for '_Z9MergePathPiS_S_S_S_i' function";

	Node0x47d0170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = icmp eq i32 %12, 0\l  br i1 %13, label %14, label %15\l|{<s0>T|<s1>F}}"];
	Node0x47d0170:s0 -> Node0x47d1d00;
	Node0x47d0170:s1 -> Node0x47d1d90;
	Node0x47d1d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%14:\l14:                                               \l  store i32 0, i32 addrspace(1)* %3, align 4, !tbaa !7\l  store i32 0, i32 addrspace(1)* %4, align 4, !tbaa !7\l  br label %15\l}"];
	Node0x47d1d00 -> Node0x47d1d90;
	Node0x47d1d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%15:\l15:                                               \l  %16 = shl nuw nsw i32 %12, 1\l  %17 = mul i32 %16, %5\l  %18 = sdiv i32 %17, %11\l  %19 = add nsw i32 %5, -1\l  %20 = sub nsw i32 %18, %19\l  %21 = tail call i32 @llvm.smax.i32(i32 %20, i32 0)\l  %22 = tail call i32 @llvm.smin.i32(i32 %19, i32 %18)\l  %23 = icmp slt i32 %20, 1\l  %24 = xor i32 %21, -1\l  %25 = add i32 %24, %5\l  %26 = select i1 %23, i32 %22, i32 %25\l  %27 = icmp slt i32 %26, 0\l  %28 = select i1 %27, i1 true, i1 %13\l  br i1 %28, label %74, label %29\l|{<s0>T|<s1>F}}"];
	Node0x47d1d90:s0 -> Node0x47d3300;
	Node0x47d1d90:s1 -> Node0x47d3390;
	Node0x47d3390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%29:\l29:                                               \l  %30 = zext i32 %12 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %30\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %30\l  br label %33\l}"];
	Node0x47d3390 -> Node0x47d2830;
	Node0x47d2830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ %26, %29 ], [ %70, %68 ]\l  %35 = phi i32 [ 0, %29 ], [ %69, %68 ]\l  %36 = sub nsw i32 %34, %35\l  %37 = sdiv i32 %36, 2\l  %38 = add nsw i32 %37, %35\l  %39 = sub nsw i32 %22, %38\l  %40 = add nsw i32 %38, %21\l  %41 = sext i32 %39 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !7\l  %44 = sext i32 %40 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7\l  %47 = icmp sgt i32 %43, %46\l  br i1 %47, label %48, label %50\l|{<s0>T|<s1>F}}"];
	Node0x47d2830:s0 -> Node0x47d41e0;
	Node0x47d2830:s1 -> Node0x47d4270;
	Node0x47d41e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%48:\l48:                                               \l  %49 = add nsw i32 %38, 1\l  br label %68\l}"];
	Node0x47d41e0 -> Node0x47d3890;
	Node0x47d4270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%50:\l50:                                               \l  %51 = icmp eq i32 %40, 0\l  br i1 %51, label %52, label %54\l|{<s0>T|<s1>F}}"];
	Node0x47d4270:s0 -> Node0x47d4540;
	Node0x47d4270:s1 -> Node0x47d4590;
	Node0x47d4540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%52:\l52:                                               \l  %53 = add nsw i32 %39, 1\l  store i32 %53, i32 addrspace(1)* %31, align 4, !tbaa !7\l  store i32 0, i32 addrspace(1)* %32, align 4, !tbaa !7\l  br label %68\l}"];
	Node0x47d4540 -> Node0x47d3890;
	Node0x47d4590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%54:\l54:                                               \l  %55 = icmp eq i32 %39, %19\l  br i1 %55, label %56, label %57\l|{<s0>T|<s1>F}}"];
	Node0x47d4590:s0 -> Node0x47d4940;
	Node0x47d4590:s1 -> Node0x47d4990;
	Node0x47d4940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%56:\l56:                                               \l  store i32 %5, i32 addrspace(1)* %31, align 4, !tbaa !7\l  store i32 %40, i32 addrspace(1)* %32, align 4, !tbaa !7\l  br label %68\l}"];
	Node0x47d4940 -> Node0x47d3890;
	Node0x47d4990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%57:\l57:                                               \l  %58 = add nsw i32 %39, 1\l  %59 = add nsw i32 %40, -1\l  %60 = sext i32 %58 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %60\l  %62 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !7\l  %63 = sext i32 %59 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !7\l  %66 = icmp sgt i32 %62, %65\l  br i1 %66, label %67, label %68\l|{<s0>T|<s1>F}}"];
	Node0x47d4990:s0 -> Node0x47d3780;
	Node0x47d4990:s1 -> Node0x47d3890;
	Node0x47d3780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%67:\l67:                                               \l  store i32 %58, i32 addrspace(1)* %31, align 4, !tbaa !7\l  store i32 %40, i32 addrspace(1)* %32, align 4, !tbaa !7\l  br label %68\l}"];
	Node0x47d3780 -> Node0x47d3890;
	Node0x47d3890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = phi i32 [ %35, %52 ], [ %35, %56 ], [ %35, %67 ], [ %49, %48 ], [ %35,\l... %57 ]\l  %70 = phi i32 [ %34, %52 ], [ %34, %56 ], [ %34, %67 ], [ %34, %48 ], [ %38,\l... %57 ]\l  %71 = phi i1 [ true, %52 ], [ true, %56 ], [ true, %67 ], [ false, %48 ], [\l... false, %57 ]\l  %72 = icmp slt i32 %70, %69\l  %73 = or i1 %72, %71\l  br i1 %73, label %74, label %33, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x47d3890:s0 -> Node0x47d3300;
	Node0x47d3890:s1 -> Node0x47d2830;
	Node0x47d3300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%74:\l74:                                               \l  %75 = phi i32 [ 0, %15 ], [ %69, %68 ]\l  %76 = phi i1 [ %13, %15 ], [ %71, %68 ]\l  br i1 %76, label %83, label %77\l|{<s0>T|<s1>F}}"];
	Node0x47d3300:s0 -> Node0x47d5c80;
	Node0x47d3300:s1 -> Node0x47d5cd0;
	Node0x47d5cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%77:\l77:                                               \l  %78 = add i32 %22, 1\l  %79 = sub i32 %78, %75\l  %80 = zext i32 %12 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %80\l  store i32 %79, i32 addrspace(1)* %81, align 4, !tbaa !7\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %80\l  store i32 %5, i32 addrspace(1)* %82, align 4, !tbaa !7\l  br label %83\l}"];
	Node0x47d5cd0 -> Node0x47d5c80;
	Node0x47d5c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%83:\l83:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %84 = add nsw i32 %11, -1\l  %85 = icmp eq i32 %12, %84\l  br i1 %85, label %93, label %86\l|{<s0>T|<s1>F}}"];
	Node0x47d5c80:s0 -> Node0x47d6550;
	Node0x47d5c80:s1 -> Node0x47d65a0;
	Node0x47d65a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%86:\l86:                                               \l  %87 = add nuw nsw i32 %12, 1\l  %88 = zext i32 %87 to i64\l  %89 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %88\l  %90 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !7\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %88\l  %92 = load i32, i32 addrspace(1)* %91, align 4, !tbaa !7\l  br label %93\l}"];
	Node0x47d65a0 -> Node0x47d6550;
	Node0x47d6550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%93:\l93:                                               \l  %94 = phi i32 [ %90, %86 ], [ %5, %83 ]\l  %95 = phi i32 [ %92, %86 ], [ %5, %83 ]\l  %96 = zext i32 %12 to i64\l  %97 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %96\l  %98 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !7\l  %99 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %96\l  %100 = load i32, i32 addrspace(1)* %99, align 4, !tbaa !7\l  %101 = add nsw i32 %100, %98\l  %102 = icmp slt i32 %98, %94\l  %103 = icmp slt i32 %100, %95\l  %104 = select i1 %102, i1 %103, i1 false\l  br i1 %104, label %110, label %105\l|{<s0>T|<s1>F}}"];
	Node0x47d6550:s0 -> Node0x47d70f0;
	Node0x47d6550:s1 -> Node0x47d7140;
	Node0x47d7140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%105:\l105:                                              \l  %106 = phi i32 [ %98, %93 ], [ %125, %110 ]\l  %107 = phi i32 [ %100, %93 ], [ %128, %110 ]\l  %108 = phi i32 [ %101, %93 ], [ %129, %110 ]\l  %109 = icmp slt i32 %106, %94\l  br i1 %109, label %136, label %133\l|{<s0>T|<s1>F}}"];
	Node0x47d7140:s0 -> Node0x47d75c0;
	Node0x47d7140:s1 -> Node0x47d7650;
	Node0x47d70f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%110:\l110:                                              \l  %111 = phi i32 [ %129, %110 ], [ %101, %93 ]\l  %112 = phi i32 [ %128, %110 ], [ %100, %93 ]\l  %113 = phi i32 [ %125, %110 ], [ %98, %93 ]\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %114\l  %116 = load i32, i32 addrspace(1)* %115, align 4, !tbaa !7\l  %117 = sext i32 %112 to i64\l  %118 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %117\l  %119 = load i32, i32 addrspace(1)* %118, align 4, !tbaa !7\l  %120 = icmp sle i32 %116, %119\l  %121 = sext i32 %111 to i64\l  %122 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %121\l  %123 = tail call i32 @llvm.smin.i32(i32 %116, i32 %119)\l  %124 = zext i1 %120 to i32\l  %125 = add nsw i32 %113, %124\l  %126 = xor i1 %120, true\l  %127 = zext i1 %126 to i32\l  %128 = add nsw i32 %112, %127\l  store i32 %123, i32 addrspace(1)* %122, align 4, !tbaa !7\l  %129 = add nsw i32 %111, 1\l  %130 = icmp slt i32 %125, %94\l  %131 = icmp slt i32 %128, %95\l  %132 = select i1 %130, i1 %131, i1 false\l  br i1 %132, label %110, label %105, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x47d70f0:s0 -> Node0x47d70f0;
	Node0x47d70f0:s1 -> Node0x47d7140;
	Node0x47d7650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%133:\l133:                                              \l  %134 = phi i32 [ %108, %105 ], [ %143, %136 ]\l  %135 = icmp slt i32 %107, %95\l  br i1 %135, label %147, label %158\l|{<s0>T|<s1>F}}"];
	Node0x47d7650:s0 -> Node0x47d8b90;
	Node0x47d7650:s1 -> Node0x47d8c20;
	Node0x47d75c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%136:\l136:                                              \l  %137 = phi i32 [ %143, %136 ], [ %108, %105 ]\l  %138 = phi i32 [ %139, %136 ], [ %106, %105 ]\l  %139 = add nsw i32 %138, 1\l  %140 = sext i32 %138 to i64\l  %141 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %140\l  %142 = load i32, i32 addrspace(1)* %141, align 4, !tbaa !7\l  %143 = add nsw i32 %137, 1\l  %144 = sext i32 %137 to i64\l  %145 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %144\l  store i32 %142, i32 addrspace(1)* %145, align 4, !tbaa !7\l  %146 = icmp slt i32 %139, %94\l  br i1 %146, label %136, label %133, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x47d75c0:s0 -> Node0x47d75c0;
	Node0x47d75c0:s1 -> Node0x47d7650;
	Node0x47d8b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%147:\l147:                                              \l  %148 = phi i32 [ %154, %147 ], [ %134, %133 ]\l  %149 = phi i32 [ %150, %147 ], [ %107, %133 ]\l  %150 = add nsw i32 %149, 1\l  %151 = sext i32 %149 to i64\l  %152 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %151\l  %153 = load i32, i32 addrspace(1)* %152, align 4, !tbaa !7\l  %154 = add nsw i32 %148, 1\l  %155 = sext i32 %148 to i64\l  %156 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %155\l  store i32 %153, i32 addrspace(1)* %156, align 4, !tbaa !7\l  %157 = icmp slt i32 %150, %95\l  br i1 %157, label %147, label %158, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x47d8b90:s0 -> Node0x47d8b90;
	Node0x47d8b90:s1 -> Node0x47d8c20;
	Node0x47d8c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%158:\l158:                                              \l  ret void\l}"];
}
