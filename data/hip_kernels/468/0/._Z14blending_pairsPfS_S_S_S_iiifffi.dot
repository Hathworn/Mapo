digraph "CFG for '_Z14blending_pairsPfS_S_S_S_iiifffi' function" {
	label="CFG for '_Z14blending_pairsPfS_S_S_S_iiifffi' function";

	Node0x5bd2a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = shl nsw i32 %14, 8\l  %16 = add nsw i32 %15, %13\l  %17 = mul nsw i32 %6, %5\l  %18 = icmp slt i32 %16, %17\l  br i1 %18, label %19, label %28\l|{<s0>T|<s1>F}}"];
	Node0x5bd2a00:s0 -> Node0x5bd4e40;
	Node0x5bd2a00:s1 -> Node0x5bd4ed0;
	Node0x5bd4e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%19:\l19:                                               \l  %20 = fpext float %10 to double\l  %21 = fmul contract double %20, 1.412000e+00\l  %22 = sdiv i32 %7, 2\l  %23 = add nsw i32 %5, -1\l  %24 = add nsw i32 %6, -1\l  %25 = mul nsw i32 %7, %7\l  %26 = sitofp i32 %25 to float\l  %27 = sitofp i32 %11 to float\l  br label %29\l}"];
	Node0x5bd4e40 -> Node0x5bd5ea0;
	Node0x5bd4ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%28:\l28:                                               \l  ret void\l}"];
	Node0x5bd5ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%29:\l29:                                               \l  %30 = phi i32 [ %16, %19 ], [ %268, %267 ]\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %4, i64 %31\l  store float 0.000000e+00, float addrspace(1)* %32, align 4, !tbaa !5\l  %33 = freeze i32 %30\l  %34 = freeze i32 %5\l  %35 = sdiv i32 %33, %34\l  %36 = mul i32 %35, %34\l  %37 = sub i32 %33, %36\l  %38 = getelementptr inbounds float, float addrspace(1)* %3, i64 %31\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !5\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !5\l  %42 = fsub contract float %39, %41\l  %43 = fadd contract float %42, %9\l  %44 = getelementptr inbounds float, float addrspace(1)* %2, i64 %31\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !5\l  %46 = fsub contract float %39, %45\l  %47 = fpext float %46 to double\l  %48 = fadd contract double %21, %47\l  %49 = fptrunc double %48 to float\l  %50 = sub nsw i32 %37, %22\l  %51 = tail call i32 @llvm.smax.i32(i32 %50, i32 0)\l  %52 = add nsw i32 %37, %22\l  %53 = tail call i32 @llvm.smin.i32(i32 %52, i32 %23)\l  %54 = sub nsw i32 %35, %22\l  %55 = tail call i32 @llvm.smax.i32(i32 %54, i32 0)\l  %56 = add nsw i32 %35, %22\l  %57 = tail call i32 @llvm.smin.i32(i32 %56, i32 %24)\l  %58 = icmp sgt i32 %55, %57\l  br i1 %58, label %85, label %59\l|{<s0>T|<s1>F}}"];
	Node0x5bd5ea0:s0 -> Node0x5bd7e60;
	Node0x5bd5ea0:s1 -> Node0x5bd7ef0;
	Node0x5bd7ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%59:\l59:                                               \l  %60 = icmp sgt i32 %51, %53\l  br label %61\l}"];
	Node0x5bd7ef0 -> Node0x5bd80c0;
	Node0x5bd80c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%61:\l61:                                               \l  %62 = phi float [ 0.000000e+00, %59 ], [ %82, %80 ]\l  %63 = phi float [ 0.000000e+00, %59 ], [ %81, %80 ]\l  %64 = phi i32 [ %55, %59 ], [ %83, %80 ]\l  br i1 %60, label %80, label %65\l|{<s0>T|<s1>F}}"];
	Node0x5bd80c0:s0 -> Node0x5bd8180;
	Node0x5bd80c0:s1 -> Node0x5bd6230;
	Node0x5bd6230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%65:\l65:                                               \l  %66 = mul nsw i32 %64, %5\l  br label %67\l}"];
	Node0x5bd6230 -> Node0x5bd8910;
	Node0x5bd8910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi float [ %62, %65 ], [ %77, %67 ]\l  %69 = phi float [ %63, %65 ], [ %76, %67 ]\l  %70 = phi i32 [ %51, %65 ], [ %78, %67 ]\l  %71 = add nsw i32 %70, %66\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %1, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !5\l  %75 = fmul contract float %74, %74\l  %76 = fadd contract float %69, %75\l  %77 = fadd contract float %68, %74\l  %78 = add nuw nsw i32 %70, 1\l  %79 = icmp slt i32 %70, %53\l  br i1 %79, label %67, label %80, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5bd8910:s0 -> Node0x5bd8910;
	Node0x5bd8910:s1 -> Node0x5bd8180;
	Node0x5bd8180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%80:\l80:                                               \l  %81 = phi float [ %63, %61 ], [ %76, %67 ]\l  %82 = phi float [ %62, %61 ], [ %77, %67 ]\l  %83 = add nuw nsw i32 %64, 1\l  %84 = icmp slt i32 %64, %57\l  br i1 %84, label %61, label %85, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5bd8180:s0 -> Node0x5bd80c0;
	Node0x5bd8180:s1 -> Node0x5bd7e60;
	Node0x5bd7e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%85:\l85:                                               \l  %86 = phi float [ 0.000000e+00, %29 ], [ %81, %80 ]\l  %87 = phi float [ 0.000000e+00, %29 ], [ %82, %80 ]\l  %88 = fdiv contract float %86, %26\l  %89 = fdiv contract float %87, %26\l  %90 = fmul contract float %89, %89\l  %91 = fsub contract float %88, %90\l  %92 = fcmp olt float %91, 0x39F0000000000000\l  %93 = select i1 %92, float 0x41F0000000000000, float 1.000000e+00\l  %94 = fmul float %91, %93\l  %95 = tail call float @llvm.sqrt.f32(float %94)\l  %96 = bitcast float %95 to i32\l  %97 = add nsw i32 %96, -1\l  %98 = bitcast i32 %97 to float\l  %99 = add nsw i32 %96, 1\l  %100 = bitcast i32 %99 to float\l  %101 = tail call i1 @llvm.amdgcn.class.f32(float %94, i32 608)\l  %102 = select i1 %92, float 0x3EF0000000000000, float 1.000000e+00\l  %103 = fneg float %100\l  %104 = tail call float @llvm.fma.f32(float %103, float %95, float %94)\l  %105 = fcmp ogt float %104, 0.000000e+00\l  %106 = fneg float %98\l  %107 = tail call float @llvm.fma.f32(float %106, float %95, float %94)\l  %108 = fcmp ole float %107, 0.000000e+00\l  %109 = select i1 %108, float %98, float %95\l  %110 = select i1 %105, float %100, float %109\l  %111 = fmul float %102, %110\l  %112 = select i1 %101, float %94, float %111\l  %113 = fdiv contract float %112, %27\l  br i1 %58, label %226, label %114\l|{<s0>T|<s1>F}}"];
	Node0x5bd7e60:s0 -> Node0x5bdac20;
	Node0x5bd7e60:s1 -> Node0x5bdacb0;
	Node0x5bdacb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%114:\l114:                                              \l  %115 = icmp sgt i32 %51, %53\l  %116 = fcmp contract ogt float %43, 0.000000e+00\l  %117 = fcmp contract olt float %43, 0.000000e+00\l  %118 = fcmp contract ogt float %49, 0.000000e+00\l  %119 = fcmp contract olt float %49, 0.000000e+00\l  br label %120\l}"];
	Node0x5bdacb0 -> Node0x5bdb0c0;
	Node0x5bdb0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%120:\l120:                                              \l  %121 = phi float [ 0.000000e+00, %114 ], [ %220, %219 ]\l  %122 = phi i32 [ 0, %114 ], [ %223, %219 ]\l  %123 = phi float [ 0.000000e+00, %114 ], [ %222, %219 ]\l  %124 = phi i32 [ 0, %114 ], [ %221, %219 ]\l  %125 = phi i32 [ %55, %114 ], [ %224, %219 ]\l  br i1 %115, label %219, label %126\l|{<s0>T|<s1>F}}"];
	Node0x5bdb0c0:s0 -> Node0x5bdb180;
	Node0x5bdb0c0:s1 -> Node0x5bdb740;
	Node0x5bdb740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%126:\l126:                                              \l  %127 = mul nsw i32 %125, %5\l  %128 = sub nsw i32 %35, %125\l  %129 = mul nsw i32 %128, %128\l  br label %130\l}"];
	Node0x5bdb740 -> Node0x5bd8590;
	Node0x5bd8590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%130:\l130:                                              \l  %131 = phi float [ %121, %126 ], [ %213, %212 ]\l  %132 = phi i32 [ %122, %126 ], [ %216, %212 ]\l  %133 = phi float [ %123, %126 ], [ %215, %212 ]\l  %134 = phi i32 [ %124, %126 ], [ %214, %212 ]\l  %135 = phi i32 [ %51, %126 ], [ %217, %212 ]\l  %136 = load float, float addrspace(1)* %40, align 4, !tbaa !5\l  %137 = add nsw i32 %135, %127\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %1, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !5\l  %141 = fsub contract float %136, %140\l  %142 = tail call float @llvm.fabs.f32(float %141)\l  %143 = fcmp contract olt float %142, %113\l  br i1 %143, label %144, label %212\l|{<s0>T|<s1>F}}"];
	Node0x5bd8590:s0 -> Node0x5bdcab0;
	Node0x5bd8590:s1 -> Node0x5bd8680;
	Node0x5bdcab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%144:\l144:                                              \l  %145 = getelementptr inbounds float, float addrspace(1)* %3, i64 %138\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !5\l  %147 = fsub contract float %146, %140\l  %148 = getelementptr inbounds float, float addrspace(1)* %2, i64 %138\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !5\l  %150 = fsub contract float %146, %149\l  %151 = fcmp contract olt float %147, %43\l  %152 = select i1 %116, i1 %151, i1 false\l  %153 = fcmp contract ogt float %147, %43\l  %154 = select i1 %117, i1 %153, i1 false\l  %155 = select i1 %152, i1 true, i1 %154\l  br i1 %155, label %156, label %212\l|{<s0>T|<s1>F}}"];
	Node0x5bdcab0:s0 -> Node0x5bdd2c0;
	Node0x5bdcab0:s1 -> Node0x5bd8680;
	Node0x5bdd2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%156:\l156:                                              \l  %157 = fcmp contract olt float %150, %49\l  %158 = select i1 %118, i1 %157, i1 false\l  %159 = fcmp contract ogt float %150, %49\l  %160 = select i1 %119, i1 %159, i1 false\l  %161 = select i1 %158, i1 true, i1 %160\l  br i1 %161, label %162, label %212\l|{<s0>T|<s1>F}}"];
	Node0x5bdd2c0:s0 -> Node0x5bdd6f0;
	Node0x5bdd2c0:s1 -> Node0x5bd8680;
	Node0x5bdd6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%162:\l162:                                              \l  %163 = tail call float @llvm.fabs.f32(float %147)\l  %164 = fpext float %163 to double\l  %165 = fadd contract double %164, 1.000000e-04\l  %166 = fptrunc double %165 to float\l  %167 = tail call float @llvm.fabs.f32(float %150)\l  %168 = fpext float %167 to double\l  %169 = fadd contract double %168, 1.000000e-04\l  %170 = fptrunc double %169 to float\l  %171 = icmp eq i32 %30, %137\l  %172 = select i1 %171, i32 1, i32 %134\l  %173 = sub nsw i32 %37, %135\l  %174 = mul nsw i32 %173, %173\l  %175 = add nuw nsw i32 %174, %129\l  %176 = sitofp i32 %175 to float\l  %177 = icmp eq i32 %175, 0\l  %178 = select i1 %177, float 0x41F0000000000000, float 1.000000e+00\l  %179 = fmul float %178, %176\l  %180 = tail call float @llvm.sqrt.f32(float %179)\l  %181 = bitcast float %180 to i32\l  %182 = add nsw i32 %181, -1\l  %183 = bitcast i32 %182 to float\l  %184 = add nsw i32 %181, 1\l  %185 = bitcast i32 %184 to float\l  %186 = tail call i1 @llvm.amdgcn.class.f32(float %179, i32 608)\l  %187 = select i1 %177, float 0x3EF0000000000000, float 1.000000e+00\l  %188 = fneg float %185\l  %189 = tail call float @llvm.fma.f32(float %188, float %180, float %179)\l  %190 = fcmp ogt float %189, 0.000000e+00\l  %191 = fneg float %183\l  %192 = tail call float @llvm.fma.f32(float %191, float %180, float %179)\l  %193 = fcmp ole float %192, 0.000000e+00\l  %194 = select i1 %193, float %183, float %180\l  %195 = select i1 %190, float %185, float %194\l  %196 = fmul float %187, %195\l  %197 = select i1 %186, float %179, float %196\l  %198 = fdiv contract float %197, %8\l  %199 = fadd contract float %198, 1.000000e+00\l  %200 = fmul contract float %199, %166\l  %201 = fmul contract float %200, %170\l  %202 = fdiv contract float 1.000000e+00, %201\l  %203 = fadd contract float %202, %131\l  store float %203, float addrspace(1)* %32, align 4, !tbaa !5\l  %204 = load float, float addrspace(1)* %148, align 4, !tbaa !5\l  %205 = load float, float addrspace(1)* %139, align 4, !tbaa !5\l  %206 = fadd contract float %204, %205\l  %207 = load float, float addrspace(1)* %145, align 4, !tbaa !5\l  %208 = fsub contract float %206, %207\l  %209 = fmul contract float %202, %208\l  %210 = fadd contract float %133, %209\l  %211 = add nsw i32 %132, 1\l  br label %212\l}"];
	Node0x5bdd6f0 -> Node0x5bd8680;
	Node0x5bd8680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%212:\l212:                                              \l  %213 = phi float [ %203, %162 ], [ %131, %130 ], [ %131, %144 ], [ %131,\l... %156 ]\l  %214 = phi i32 [ %172, %162 ], [ %134, %130 ], [ %134, %144 ], [ %134, %156 ]\l  %215 = phi float [ %210, %162 ], [ %133, %130 ], [ %133, %144 ], [ %133,\l... %156 ]\l  %216 = phi i32 [ %211, %162 ], [ %132, %130 ], [ %132, %144 ], [ %132, %156 ]\l  %217 = add nuw nsw i32 %135, 1\l  %218 = icmp slt i32 %135, %53\l  br i1 %218, label %130, label %219, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5bd8680:s0 -> Node0x5bd8590;
	Node0x5bd8680:s1 -> Node0x5bdb180;
	Node0x5bdb180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%219:\l219:                                              \l  %220 = phi float [ %121, %120 ], [ %213, %212 ]\l  %221 = phi i32 [ %124, %120 ], [ %214, %212 ]\l  %222 = phi float [ %123, %120 ], [ %215, %212 ]\l  %223 = phi i32 [ %122, %120 ], [ %216, %212 ]\l  %224 = add nuw nsw i32 %125, 1\l  %225 = icmp slt i32 %125, %57\l  br i1 %225, label %120, label %226, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5bdb180:s0 -> Node0x5bdb0c0;
	Node0x5bdb180:s1 -> Node0x5bdac20;
	Node0x5bdac20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%226:\l226:                                              \l  %227 = phi float [ 0.000000e+00, %85 ], [ %220, %219 ]\l  %228 = phi i32 [ 0, %85 ], [ %221, %219 ]\l  %229 = phi float [ 0.000000e+00, %85 ], [ %222, %219 ]\l  %230 = phi i32 [ 0, %85 ], [ %223, %219 ]\l  %231 = icmp eq i32 %230, 0\l  br i1 %231, label %232, label %241\l|{<s0>T|<s1>F}}"];
	Node0x5bdac20:s0 -> Node0x5be05e0;
	Node0x5bdac20:s1 -> Node0x5be0630;
	Node0x5be05e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%232:\l232:                                              \l  %233 = load float, float addrspace(1)* %40, align 4, !tbaa !5\l  %234 = load float, float addrspace(1)* %44, align 4, !tbaa !5\l  %235 = fadd contract float %233, %234\l  %236 = load float, float addrspace(1)* %38, align 4, !tbaa !5\l  %237 = fsub contract float %235, %236\l  %238 = tail call float @llvm.fabs.f32(float %237)\l  %239 = fmul contract float %238, 1.000000e+03\l  %240 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  store float %239, float addrspace(1)* %240, align 4, !tbaa !5\l  store float 1.000000e+03, float addrspace(1)* %32, align 4, !tbaa !5\l  br label %267\l}"];
	Node0x5be05e0 -> Node0x5bd6020;
	Node0x5be0630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%241:\l241:                                              \l  %242 = icmp eq i32 %228, 0\l  br i1 %242, label %243, label %264\l|{<s0>T|<s1>F}}"];
	Node0x5be0630:s0 -> Node0x5be0de0;
	Node0x5be0630:s1 -> Node0x5be0e30;
	Node0x5be0de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%243:\l243:                                              \l  %244 = load float, float addrspace(1)* %38, align 4, !tbaa !5\l  %245 = load float, float addrspace(1)* %40, align 4, !tbaa !5\l  %246 = fsub contract float %244, %245\l  %247 = tail call float @llvm.fabs.f32(float %246)\l  %248 = fpext float %247 to double\l  %249 = fadd contract double %248, 1.000000e-04\l  %250 = fptrunc double %249 to float\l  %251 = load float, float addrspace(1)* %44, align 4, !tbaa !5\l  %252 = fsub contract float %244, %251\l  %253 = tail call float @llvm.fabs.f32(float %252)\l  %254 = fpext float %253 to double\l  %255 = fadd contract double %254, 1.000000e-04\l  %256 = fptrunc double %255 to float\l  %257 = fmul contract float %250, %256\l  %258 = fdiv contract float 1.000000e+00, %257\l  %259 = fadd contract float %245, %251\l  %260 = fsub contract float %259, %244\l  %261 = fmul contract float %260, %258\l  %262 = fadd contract float %229, %261\l  %263 = fadd contract float %227, %258\l  store float %263, float addrspace(1)* %32, align 4, !tbaa !5\l  br label %264\l}"];
	Node0x5be0de0 -> Node0x5be0e30;
	Node0x5be0e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%264:\l264:                                              \l  %265 = phi float [ %262, %243 ], [ %229, %241 ]\l  %266 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  store float %265, float addrspace(1)* %266, align 4, !tbaa !5\l  br label %267\l}"];
	Node0x5be0e30 -> Node0x5bd6020;
	Node0x5bd6020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%267:\l267:                                              \l  %268 = add nsw i32 %30, 65536\l  %269 = icmp slt i32 %268, %17\l  br i1 %269, label %29, label %28, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5bd6020:s0 -> Node0x5bd5ea0;
	Node0x5bd6020:s1 -> Node0x5bd4ed0;
}
