digraph "CFG for '_Z8blendingPfS_S_S_iiifffi' function" {
	label="CFG for '_Z8blendingPfS_S_S_iiifffi' function";

	Node0x5547510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = shl nsw i32 %13, 8\l  %15 = add nsw i32 %14, %12\l  %16 = mul nsw i32 %5, %4\l  %17 = icmp slt i32 %15, %16\l  br i1 %17, label %18, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5547510:s0 -> Node0x5549940;
	Node0x5547510:s1 -> Node0x55499d0;
	Node0x5549940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%18:\l18:                                               \l  %19 = fpext float %9 to double\l  %20 = fmul contract double %19, 1.412000e+00\l  %21 = sdiv i32 %6, 2\l  %22 = add nsw i32 %4, -1\l  %23 = add nsw i32 %5, -1\l  %24 = mul nsw i32 %6, %6\l  %25 = sitofp i32 %24 to float\l  %26 = sitofp i32 %10 to float\l  br label %28\l}"];
	Node0x5549940 -> Node0x554a9a0;
	Node0x55499d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%27:\l27:                                               \l  ret void\l}"];
	Node0x554a9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%28:\l28:                                               \l  %29 = phi i32 [ %15, %18 ], [ %255, %252 ]\l  %30 = freeze i32 %29\l  %31 = freeze i32 %4\l  %32 = sdiv i32 %30, %31\l  %33 = mul i32 %32, %31\l  %34 = sub i32 %30, %33\l  %35 = sext i32 %29 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %3, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !5\l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !5\l  %40 = fsub contract float %37, %39\l  %41 = fadd contract float %40, %8\l  %42 = getelementptr inbounds float, float addrspace(1)* %2, i64 %35\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !5\l  %44 = fsub contract float %37, %43\l  %45 = fpext float %44 to double\l  %46 = fadd contract double %20, %45\l  %47 = fptrunc double %46 to float\l  %48 = sub nsw i32 %34, %21\l  %49 = tail call i32 @llvm.smax.i32(i32 %48, i32 0)\l  %50 = add nsw i32 %34, %21\l  %51 = tail call i32 @llvm.smin.i32(i32 %50, i32 %22)\l  %52 = sub nsw i32 %32, %21\l  %53 = tail call i32 @llvm.smax.i32(i32 %52, i32 0)\l  %54 = add nsw i32 %32, %21\l  %55 = tail call i32 @llvm.smin.i32(i32 %54, i32 %23)\l  %56 = icmp sgt i32 %53, %55\l  br i1 %56, label %83, label %57\l|{<s0>T|<s1>F}}"];
	Node0x554a9a0:s0 -> Node0x554c7d0;
	Node0x554a9a0:s1 -> Node0x554c860;
	Node0x554c860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%57:\l57:                                               \l  %58 = icmp sgt i32 %49, %51\l  br label %59\l}"];
	Node0x554c860 -> Node0x554ca30;
	Node0x554ca30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%59:\l59:                                               \l  %60 = phi float [ 0.000000e+00, %57 ], [ %80, %78 ]\l  %61 = phi float [ 0.000000e+00, %57 ], [ %79, %78 ]\l  %62 = phi i32 [ %53, %57 ], [ %81, %78 ]\l  br i1 %58, label %78, label %63\l|{<s0>T|<s1>F}}"];
	Node0x554ca30:s0 -> Node0x554cb30;
	Node0x554ca30:s1 -> Node0x554ceb0;
	Node0x554ceb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%63:\l63:                                               \l  %64 = mul nsw i32 %62, %4\l  br label %65\l}"];
	Node0x554ceb0 -> Node0x554ad90;
	Node0x554ad90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = phi float [ %60, %63 ], [ %75, %65 ]\l  %67 = phi float [ %61, %63 ], [ %74, %65 ]\l  %68 = phi i32 [ %49, %63 ], [ %76, %65 ]\l  %69 = add nsw i32 %68, %64\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %1, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5\l  %73 = fmul contract float %72, %72\l  %74 = fadd contract float %67, %73\l  %75 = fadd contract float %66, %72\l  %76 = add nuw nsw i32 %68, 1\l  %77 = icmp slt i32 %68, %51\l  br i1 %77, label %65, label %78, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x554ad90:s0 -> Node0x554ad90;
	Node0x554ad90:s1 -> Node0x554cb30;
	Node0x554cb30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%78:\l78:                                               \l  %79 = phi float [ %61, %59 ], [ %74, %65 ]\l  %80 = phi float [ %60, %59 ], [ %75, %65 ]\l  %81 = add nuw nsw i32 %62, 1\l  %82 = icmp slt i32 %62, %55\l  br i1 %82, label %59, label %83, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x554cb30:s0 -> Node0x554ca30;
	Node0x554cb30:s1 -> Node0x554c7d0;
	Node0x554c7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%83:\l83:                                               \l  %84 = phi float [ 0.000000e+00, %28 ], [ %79, %78 ]\l  %85 = phi float [ 0.000000e+00, %28 ], [ %80, %78 ]\l  %86 = fdiv contract float %84, %25\l  %87 = fdiv contract float %85, %25\l  %88 = fmul contract float %87, %87\l  %89 = fsub contract float %86, %88\l  %90 = fcmp olt float %89, 0x39F0000000000000\l  %91 = select i1 %90, float 0x41F0000000000000, float 1.000000e+00\l  %92 = fmul float %89, %91\l  %93 = tail call float @llvm.sqrt.f32(float %92)\l  %94 = bitcast float %93 to i32\l  %95 = add nsw i32 %94, -1\l  %96 = bitcast i32 %95 to float\l  %97 = add nsw i32 %94, 1\l  %98 = bitcast i32 %97 to float\l  %99 = tail call i1 @llvm.amdgcn.class.f32(float %92, i32 608)\l  %100 = select i1 %90, float 0x3EF0000000000000, float 1.000000e+00\l  %101 = fneg float %98\l  %102 = tail call float @llvm.fma.f32(float %101, float %93, float %92)\l  %103 = fcmp ogt float %102, 0.000000e+00\l  %104 = fneg float %96\l  %105 = tail call float @llvm.fma.f32(float %104, float %93, float %92)\l  %106 = fcmp ole float %105, 0.000000e+00\l  %107 = select i1 %106, float %96, float %93\l  %108 = select i1 %103, float %98, float %107\l  %109 = fmul float %100, %108\l  %110 = select i1 %99, float %92, float %109\l  %111 = fdiv contract float %110, %26\l  br i1 %56, label %220, label %112\l|{<s0>T|<s1>F}}"];
	Node0x554c7d0:s0 -> Node0x554f5d0;
	Node0x554c7d0:s1 -> Node0x554f660;
	Node0x554f660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%112:\l112:                                              \l  %113 = icmp sgt i32 %49, %51\l  %114 = fcmp contract ogt float %41, 0.000000e+00\l  %115 = fcmp contract olt float %41, 0.000000e+00\l  %116 = fcmp contract ogt float %47, 0.000000e+00\l  %117 = fcmp contract olt float %47, 0.000000e+00\l  br label %118\l}"];
	Node0x554f660 -> Node0x554fa70;
	Node0x554fa70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%118:\l118:                                              \l  %119 = phi i32 [ 0, %112 ], [ %217, %213 ]\l  %120 = phi float [ 0.000000e+00, %112 ], [ %216, %213 ]\l  %121 = phi float [ 0.000000e+00, %112 ], [ %215, %213 ]\l  %122 = phi i32 [ 0, %112 ], [ %214, %213 ]\l  %123 = phi i32 [ %53, %112 ], [ %218, %213 ]\l  br i1 %113, label %213, label %124\l|{<s0>T|<s1>F}}"];
	Node0x554fa70:s0 -> Node0x554fb30;
	Node0x554fa70:s1 -> Node0x55500f0;
	Node0x55500f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%124:\l124:                                              \l  %125 = mul nsw i32 %123, %4\l  %126 = sub nsw i32 %32, %123\l  %127 = mul nsw i32 %126, %126\l  br label %128\l}"];
	Node0x55500f0 -> Node0x55503e0;
	Node0x55503e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%128:\l128:                                              \l  %129 = phi i32 [ %119, %124 ], [ %210, %206 ]\l  %130 = phi float [ %120, %124 ], [ %209, %206 ]\l  %131 = phi float [ %121, %124 ], [ %208, %206 ]\l  %132 = phi i32 [ %122, %124 ], [ %207, %206 ]\l  %133 = phi i32 [ %49, %124 ], [ %211, %206 ]\l  %134 = add nsw i32 %133, %125\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds float, float addrspace(1)* %1, i64 %135\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !5\l  %138 = fsub contract float %39, %137\l  %139 = tail call float @llvm.fabs.f32(float %138)\l  %140 = fcmp contract olt float %139, %111\l  br i1 %140, label %141, label %206\l|{<s0>T|<s1>F}}"];
	Node0x55503e0:s0 -> Node0x5551420;
	Node0x55503e0:s1 -> Node0x554d0c0;
	Node0x5551420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%141:\l141:                                              \l  %142 = getelementptr inbounds float, float addrspace(1)* %3, i64 %135\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !5\l  %144 = fsub contract float %143, %137\l  %145 = getelementptr inbounds float, float addrspace(1)* %2, i64 %135\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !5\l  %147 = fsub contract float %143, %146\l  %148 = fcmp contract olt float %144, %41\l  %149 = select i1 %114, i1 %148, i1 false\l  %150 = fcmp contract ogt float %144, %41\l  %151 = select i1 %115, i1 %150, i1 false\l  %152 = select i1 %149, i1 true, i1 %151\l  br i1 %152, label %153, label %206\l|{<s0>T|<s1>F}}"];
	Node0x5551420:s0 -> Node0x5551c30;
	Node0x5551420:s1 -> Node0x554d0c0;
	Node0x5551c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%153:\l153:                                              \l  %154 = fcmp contract olt float %147, %47\l  %155 = select i1 %116, i1 %154, i1 false\l  %156 = fcmp contract ogt float %147, %47\l  %157 = select i1 %117, i1 %156, i1 false\l  %158 = select i1 %155, i1 true, i1 %157\l  br i1 %158, label %159, label %206\l|{<s0>T|<s1>F}}"];
	Node0x5551c30:s0 -> Node0x5552060;
	Node0x5551c30:s1 -> Node0x554d0c0;
	Node0x5552060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%159:\l159:                                              \l  %160 = tail call float @llvm.fabs.f32(float %144)\l  %161 = fpext float %160 to double\l  %162 = fadd contract double %161, 1.000000e-04\l  %163 = fptrunc double %162 to float\l  %164 = tail call float @llvm.fabs.f32(float %147)\l  %165 = fpext float %164 to double\l  %166 = fadd contract double %165, 1.000000e-04\l  %167 = fptrunc double %166 to float\l  %168 = icmp eq i32 %29, %134\l  %169 = select i1 %168, i32 1, i32 %132\l  %170 = sub nsw i32 %34, %133\l  %171 = mul nsw i32 %170, %170\l  %172 = add nuw nsw i32 %171, %127\l  %173 = sitofp i32 %172 to float\l  %174 = icmp eq i32 %172, 0\l  %175 = select i1 %174, float 0x41F0000000000000, float 1.000000e+00\l  %176 = fmul float %175, %173\l  %177 = tail call float @llvm.sqrt.f32(float %176)\l  %178 = bitcast float %177 to i32\l  %179 = add nsw i32 %178, -1\l  %180 = bitcast i32 %179 to float\l  %181 = add nsw i32 %178, 1\l  %182 = bitcast i32 %181 to float\l  %183 = tail call i1 @llvm.amdgcn.class.f32(float %176, i32 608)\l  %184 = select i1 %174, float 0x3EF0000000000000, float 1.000000e+00\l  %185 = fneg float %182\l  %186 = tail call float @llvm.fma.f32(float %185, float %177, float %176)\l  %187 = fcmp ogt float %186, 0.000000e+00\l  %188 = fneg float %180\l  %189 = tail call float @llvm.fma.f32(float %188, float %177, float %176)\l  %190 = fcmp ole float %189, 0.000000e+00\l  %191 = select i1 %190, float %180, float %177\l  %192 = select i1 %187, float %182, float %191\l  %193 = fmul float %184, %192\l  %194 = select i1 %183, float %176, float %193\l  %195 = fdiv contract float %194, %7\l  %196 = fadd contract float %195, 1.000000e+00\l  %197 = fmul contract float %196, %163\l  %198 = fmul contract float %197, %167\l  %199 = fdiv contract float 1.000000e+00, %198\l  %200 = fadd contract float %131, %199\l  %201 = fadd contract float %137, %146\l  %202 = fsub contract float %201, %143\l  %203 = fmul contract float %202, %199\l  %204 = fadd contract float %130, %203\l  %205 = add nsw i32 %129, 1\l  br label %206\l}"];
	Node0x5552060 -> Node0x554d0c0;
	Node0x554d0c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%206:\l206:                                              \l  %207 = phi i32 [ %169, %159 ], [ %132, %128 ], [ %132, %141 ], [ %132, %153 ]\l  %208 = phi float [ %200, %159 ], [ %131, %128 ], [ %131, %141 ], [ %131,\l... %153 ]\l  %209 = phi float [ %204, %159 ], [ %130, %128 ], [ %130, %141 ], [ %130,\l... %153 ]\l  %210 = phi i32 [ %205, %159 ], [ %129, %128 ], [ %129, %141 ], [ %129, %153 ]\l  %211 = add nuw nsw i32 %133, 1\l  %212 = icmp slt i32 %133, %51\l  br i1 %212, label %128, label %213, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x554d0c0:s0 -> Node0x55503e0;
	Node0x554d0c0:s1 -> Node0x554fb30;
	Node0x554fb30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%213:\l213:                                              \l  %214 = phi i32 [ %122, %118 ], [ %207, %206 ]\l  %215 = phi float [ %121, %118 ], [ %208, %206 ]\l  %216 = phi float [ %120, %118 ], [ %209, %206 ]\l  %217 = phi i32 [ %119, %118 ], [ %210, %206 ]\l  %218 = add nuw nsw i32 %123, 1\l  %219 = icmp slt i32 %123, %55\l  br i1 %219, label %118, label %220, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x554fb30:s0 -> Node0x554fa70;
	Node0x554fb30:s1 -> Node0x554f5d0;
	Node0x554f5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%220:\l220:                                              \l  %221 = phi i32 [ 0, %83 ], [ %214, %213 ]\l  %222 = phi float [ 0.000000e+00, %83 ], [ %215, %213 ]\l  %223 = phi float [ 0.000000e+00, %83 ], [ %216, %213 ]\l  %224 = phi i32 [ 0, %83 ], [ %217, %213 ]\l  %225 = icmp eq i32 %224, 0\l  br i1 %225, label %226, label %230\l|{<s0>T|<s1>F}}"];
	Node0x554f5d0:s0 -> Node0x5554d70;
	Node0x554f5d0:s1 -> Node0x5554dc0;
	Node0x5554d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%226:\l226:                                              \l  %227 = fadd contract float %39, %43\l  %228 = fsub contract float %227, %37\l  %229 = tail call float @llvm.fabs.f32(float %228)\l  br label %252\l}"];
	Node0x5554d70 -> Node0x554ab20;
	Node0x5554dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%230:\l230:                                              \l  %231 = icmp eq i32 %221, 0\l  br i1 %231, label %232, label %248\l|{<s0>T|<s1>F}}"];
	Node0x5554dc0:s0 -> Node0x55551d0;
	Node0x5554dc0:s1 -> Node0x5555220;
	Node0x55551d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%232:\l232:                                              \l  %233 = tail call float @llvm.fabs.f32(float %40)\l  %234 = fpext float %233 to double\l  %235 = fadd contract double %234, 1.000000e-04\l  %236 = fptrunc double %235 to float\l  %237 = tail call float @llvm.fabs.f32(float %44)\l  %238 = fpext float %237 to double\l  %239 = fadd contract double %238, 1.000000e-04\l  %240 = fptrunc double %239 to float\l  %241 = fmul contract float %236, %240\l  %242 = fdiv contract float 1.000000e+00, %241\l  %243 = fadd contract float %39, %43\l  %244 = fsub contract float %243, %37\l  %245 = fmul contract float %244, %242\l  %246 = fadd contract float %245, %223\l  %247 = fadd contract float %242, %222\l  br label %248\l}"];
	Node0x55551d0 -> Node0x5555220;
	Node0x5555220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%248:\l248:                                              \l  %249 = phi float [ %247, %232 ], [ %222, %230 ]\l  %250 = phi float [ %246, %232 ], [ %223, %230 ]\l  %251 = fdiv contract float %250, %249\l  br label %252\l}"];
	Node0x5555220 -> Node0x554ab20;
	Node0x554ab20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%252:\l252:                                              \l  %253 = phi float [ %229, %226 ], [ %251, %248 ]\l  %254 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  store float %253, float addrspace(1)* %254, align 4, !tbaa !5\l  %255 = add nsw i32 %29, 65536\l  %256 = icmp slt i32 %255, %16\l  br i1 %256, label %28, label %27, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x554ab20:s0 -> Node0x554a9a0;
	Node0x554ab20:s1 -> Node0x55499d0;
}
