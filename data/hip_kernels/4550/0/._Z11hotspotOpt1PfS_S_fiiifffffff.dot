digraph "CFG for '_Z11hotspotOpt1PfS_S_fiiifffffff' function" {
	label="CFG for '_Z11hotspotOpt1PfS_S_fiiifffffff' function";

	Node0x5919460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%14:\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %25 = getelementptr i8, i8 addrspace(4)* %15, i64 6\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 2, !range !4, !invariant.load !5\l  %28 = zext i16 %27 to i32\l  %29 = mul i32 %24, %28\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %31 = add i32 %29, %30\l  %32 = mul nsw i32 %31, %4\l  %33 = add nsw i32 %32, %23\l  %34 = mul nsw i32 %5, %4\l  %35 = icmp eq i32 %23, 0\l  %36 = add nsw i32 %33, -1\l  %37 = select i1 %35, i32 %32, i32 %36\l  %38 = add nsw i32 %4, -1\l  %39 = icmp ne i32 %23, %38\l  %40 = zext i1 %39 to i32\l  %41 = add nsw i32 %33, %40\l  %42 = icmp eq i32 %31, 0\l  %43 = select i1 %42, i32 0, i32 %4\l  %44 = sub nsw i32 %33, %43\l  %45 = add nsw i32 %5, -1\l  %46 = icmp eq i32 %31, %45\l  %47 = select i1 %46, i32 0, i32 %4\l  %48 = add nsw i32 %33, %47\l  %49 = sext i32 %33 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  %51 = add nsw i32 %33, %34\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %1, i64 %52\l  %54 = sext i32 %37 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = sext i32 %41 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %58 = sext i32 %48 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %1, i64 %58\l  %60 = sext i32 %44 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %63 = fmul contract float %11, 8.000000e+01\l  %64 = getelementptr inbounds float, float addrspace(1)* %2, i64 %49\l  %65 = add nsw i32 %48, %34\l  %66 = add nsw i32 %44, %34\l  %67 = add nsw i32 %41, %34\l  %68 = add nsw i32 %37, %34\l  %69 = icmp sgt i32 %6, 2\l  %70 = add i32 %6, -2\l  br label %72\l}"];
	Node0x5919460 -> Node0x591fd00;
	Node0x591fe00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%71:\l71:                                               \l  ret void\l}"];
	Node0x591fd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%72:\l72:                                               \l  %73 = phi i32 [ 0, %14 ], [ %137, %99 ]\l  %74 = load float, float addrspace(1)* %50, align 4, !tbaa !7\l  %75 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  %76 = fmul contract float %74, %13\l  %77 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  %78 = fmul contract float %77, %8\l  %79 = fadd contract float %76, %78\l  %80 = load float, float addrspace(1)* %57, align 4, !tbaa !7\l  %81 = fmul contract float %80, %7\l  %82 = fadd contract float %79, %81\l  %83 = load float, float addrspace(1)* %59, align 4, !tbaa !7\l  %84 = fmul contract float %83, %10\l  %85 = fadd contract float %82, %84\l  %86 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %87 = fmul contract float %86, %9\l  %88 = fadd contract float %85, %87\l  %89 = fmul contract float %74, %12\l  %90 = fadd contract float %89, %88\l  %91 = fmul contract float %75, %11\l  %92 = fadd contract float %91, %90\l  %93 = load float, float addrspace(1)* %62, align 4, !tbaa !7\l  %94 = fmul contract float %93, %3\l  %95 = fadd contract float %94, %92\l  %96 = fadd contract float %63, %95\l  store float %96, float addrspace(1)* %64, align 4, !tbaa !7\l  br i1 %69, label %139, label %99\l|{<s0>T|<s1>F}}"];
	Node0x591fd00:s0 -> Node0x5921430;
	Node0x591fd00:s1 -> Node0x591ff10;
	Node0x5921570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%97:\l97:                                               \l  %98 = fmul contract float %145, %12\l  br label %99\l}"];
	Node0x5921570 -> Node0x591ff10;
	Node0x591ff10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%99:\l99:                                               \l  %100 = phi float [ %175, %97 ], [ %91, %72 ]\l  %101 = phi float [ %98, %97 ], [ %89, %72 ]\l  %102 = phi i64 [ %149, %97 ], [ %52, %72 ]\l  %103 = phi float [ %151, %97 ], [ %75, %72 ]\l  %104 = phi i32 [ %185, %97 ], [ %65, %72 ]\l  %105 = phi i32 [ %186, %97 ], [ %66, %72 ]\l  %106 = phi i32 [ %187, %97 ], [ %67, %72 ]\l  %107 = phi i32 [ %188, %97 ], [ %68, %72 ]\l  %108 = fmul contract float %103, %13\l  %109 = sext i32 %107 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %1, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !7\l  %112 = fmul contract float %111, %8\l  %113 = fadd contract float %108, %112\l  %114 = sext i32 %106 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %1, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7\l  %117 = fmul contract float %116, %7\l  %118 = fadd contract float %113, %117\l  %119 = sext i32 %104 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %1, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7\l  %122 = fmul contract float %121, %10\l  %123 = fadd contract float %118, %122\l  %124 = sext i32 %105 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %1, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7\l  %127 = fmul contract float %126, %9\l  %128 = fadd contract float %123, %127\l  %129 = fadd contract float %101, %128\l  %130 = fadd contract float %100, %129\l  %131 = getelementptr inbounds float, float addrspace(1)* %0, i64 %102\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !7\l  %133 = fmul contract float %132, %3\l  %134 = fadd contract float %133, %130\l  %135 = fadd contract float %63, %134\l  %136 = getelementptr inbounds float, float addrspace(1)* %2, i64 %102\l  store float %135, float addrspace(1)* %136, align 4, !tbaa !7\l  %137 = add nuw nsw i32 %73, 1\l  %138 = icmp eq i32 %137, 100\l  br i1 %138, label %71, label %72, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x591ff10:s0 -> Node0x591fe00;
	Node0x591ff10:s1 -> Node0x591fd00;
	Node0x5921430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%139:\l139:                                              \l  %140 = phi i32 [ %188, %139 ], [ %68, %72 ]\l  %141 = phi i32 [ %187, %139 ], [ %67, %72 ]\l  %142 = phi i32 [ %186, %139 ], [ %66, %72 ]\l  %143 = phi i32 [ %185, %139 ], [ %65, %72 ]\l  %144 = phi i32 [ %184, %139 ], [ 1, %72 ]\l  %145 = phi float [ %151, %139 ], [ %75, %72 ]\l  %146 = phi float [ %145, %139 ], [ %74, %72 ]\l  %147 = phi i32 [ %148, %139 ], [ %51, %72 ]\l  %148 = add nsw i32 %147, %34\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %1, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !7\l  %152 = fmul contract float %145, %13\l  %153 = sext i32 %140 to i64\l  %154 = getelementptr inbounds float, float addrspace(1)* %1, i64 %153\l  %155 = load float, float addrspace(1)* %154, align 4, !tbaa !7\l  %156 = fmul contract float %155, %8\l  %157 = fadd contract float %152, %156\l  %158 = sext i32 %141 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %1, i64 %158\l  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !7\l  %161 = fmul contract float %160, %7\l  %162 = fadd contract float %157, %161\l  %163 = sext i32 %143 to i64\l  %164 = getelementptr inbounds float, float addrspace(1)* %1, i64 %163\l  %165 = load float, float addrspace(1)* %164, align 4, !tbaa !7\l  %166 = fmul contract float %165, %10\l  %167 = fadd contract float %162, %166\l  %168 = sext i32 %142 to i64\l  %169 = getelementptr inbounds float, float addrspace(1)* %1, i64 %168\l  %170 = load float, float addrspace(1)* %169, align 4, !tbaa !7\l  %171 = fmul contract float %170, %9\l  %172 = fadd contract float %167, %171\l  %173 = fmul contract float %146, %12\l  %174 = fadd contract float %173, %172\l  %175 = fmul contract float %151, %11\l  %176 = fadd contract float %175, %174\l  %177 = sext i32 %147 to i64\l  %178 = getelementptr inbounds float, float addrspace(1)* %0, i64 %177\l  %179 = load float, float addrspace(1)* %178, align 4, !tbaa !7\l  %180 = fmul contract float %179, %3\l  %181 = fadd contract float %180, %176\l  %182 = fadd contract float %63, %181\l  %183 = getelementptr inbounds float, float addrspace(1)* %2, i64 %177\l  store float %182, float addrspace(1)* %183, align 4, !tbaa !7\l  %184 = add nuw nsw i32 %144, 1\l  %185 = add nsw i32 %143, %34\l  %186 = add nsw i32 %142, %34\l  %187 = add nsw i32 %141, %34\l  %188 = add nsw i32 %140, %34\l  %189 = icmp eq i32 %144, %70\l  br i1 %189, label %97, label %139, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5921430:s0 -> Node0x5921570;
	Node0x5921430:s1 -> Node0x5921430;
}
