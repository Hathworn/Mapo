digraph "CFG for '_Z14zupdate2_dummyPfS_S_fii' function" {
	label="CFG for '_Z14zupdate2_dummyPfS_S_fii' function";

	Node0x5b8ec40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %4\l  %25 = icmp slt i32 %23, %5\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5b8ec40:s0 -> Node0x5b926c0;
	Node0x5b8ec40:s1 -> Node0x5b92750;
	Node0x5b926c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %23, %4\l  %29 = add nsw i32 %28, %15\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %33 = fmul contract float %32, %32\l  %34 = fadd contract float %33, %33\l  %35 = fcmp olt float %34, 0x39F0000000000000\l  %36 = select i1 %35, float 0x41F0000000000000, float 1.000000e+00\l  %37 = fmul float %34, %36\l  %38 = tail call float @llvm.sqrt.f32(float %37)\l  %39 = bitcast float %38 to i32\l  %40 = add nsw i32 %39, -1\l  %41 = bitcast i32 %40 to float\l  %42 = add nsw i32 %39, 1\l  %43 = bitcast i32 %42 to float\l  %44 = tail call i1 @llvm.amdgcn.class.f32(float %37, i32 608)\l  %45 = select i1 %35, float 0x3EF0000000000000, float 1.000000e+00\l  %46 = fneg float %43\l  %47 = tail call float @llvm.fma.f32(float %46, float %38, float %37)\l  %48 = fcmp ogt float %47, 0.000000e+00\l  %49 = fneg float %41\l  %50 = tail call float @llvm.fma.f32(float %49, float %38, float %37)\l  %51 = fcmp ole float %50, 0.000000e+00\l  %52 = select i1 %51, float %41, float %38\l  %53 = select i1 %48, float %43, float %52\l  %54 = fmul float %45, %53\l  %55 = select i1 %44, float %37, float %54\l  %56 = fmul contract float %55, %3\l  %57 = fadd contract float %56, 1.000000e+00\l  %58 = fdiv contract float 1.000000e+00, %57\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %61 = fmul contract float %32, %3\l  %62 = fadd contract float %60, %61\l  %63 = fmul contract float %62, %58\l  store float %63, float addrspace(1)* %59, align 4, !tbaa !7\l  %64 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7\l  %66 = fadd contract float %61, %65\l  %67 = fmul contract float %66, %58\l  store float %67, float addrspace(1)* %64, align 4, !tbaa !7\l  br label %68\l}"];
	Node0x5b926c0 -> Node0x5b92750;
	Node0x5b92750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  ret void\l}"];
}
