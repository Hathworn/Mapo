digraph "CFG for '_Z13fupdate_interPfS_fii' function" {
	label="CFG for '_Z13fupdate_interPfS_fii' function";

	Node0x5be8ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = mul nsw i32 %22, %3\l  %24 = add nsw i32 %23, %14\l  %25 = icmp slt i32 %14, %3\l  %26 = icmp slt i32 %22, %4\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %80\l|{<s0>T|<s1>F}}"];
	Node0x5be8ce0:s0 -> Node0x5bec870;
	Node0x5be8ce0:s1 -> Node0x5bec900;
	Node0x5bec870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%28:\l28:                                               \l  %29 = add nsw i32 %3, -1\l  %30 = icmp slt i32 %14, %29\l  br i1 %30, label %31, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5bec870:s0 -> Node0x5becb90;
	Node0x5bec870:s1 -> Node0x5becbe0;
	Node0x5becb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %24, 3\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = fadd contract float %35, 0.000000e+00\l  br label %37\l}"];
	Node0x5becb90 -> Node0x5becbe0;
	Node0x5becbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%37:\l37:                                               \l  %38 = phi float [ %36, %31 ], [ 0.000000e+00, %28 ]\l  %39 = icmp sgt i32 %14, 0\l  br i1 %39, label %40, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5becbe0:s0 -> Node0x5bedea0;
	Node0x5becbe0:s1 -> Node0x5bedef0;
	Node0x5bedea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%40:\l40:                                               \l  %41 = mul i32 %24, 3\l  %42 = add i32 %41, -3\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %46 = fsub contract float %38, %45\l  br label %47\l}"];
	Node0x5bedea0 -> Node0x5bedef0;
	Node0x5bedef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%47:\l47:                                               \l  %48 = phi float [ %46, %40 ], [ %38, %37 ]\l  %49 = add nsw i32 %4, -1\l  %50 = icmp slt i32 %22, %49\l  br i1 %50, label %51, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5bedef0:s0 -> Node0x5beebe0;
	Node0x5bedef0:s1 -> Node0x5beec30;
	Node0x5beebe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%51:\l51:                                               \l  %52 = mul nsw i32 %24, 3\l  %53 = add nsw i32 %52, 1\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %57 = fadd contract float %48, %56\l  br label %58\l}"];
	Node0x5beebe0 -> Node0x5beec30;
	Node0x5beec30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%58:\l58:                                               \l  %59 = phi float [ %57, %51 ], [ %48, %47 ]\l  %60 = icmp sgt i32 %22, 0\l  br i1 %60, label %61, label %69\l|{<s0>T|<s1>F}}"];
	Node0x5beec30:s0 -> Node0x5bef2b0;
	Node0x5beec30:s1 -> Node0x5bef300;
	Node0x5bef2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%61:\l61:                                               \l  %62 = sub nsw i32 %24, %3\l  %63 = mul nsw i32 %62, 3\l  %64 = add nsw i32 %63, 1\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %0, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %68 = fsub contract float %59, %67\l  br label %69\l}"];
	Node0x5bef2b0 -> Node0x5bef300;
	Node0x5bef300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%69:\l69:                                               \l  %70 = phi float [ %68, %61 ], [ %59, %58 ]\l  %71 = sext i32 %24 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %74 = fmul contract float %73, %2\l  %75 = fsub contract float %70, %74\l  %76 = mul nsw i32 %24, 3\l  %77 = add nsw i32 %76, 2\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  store float %75, float addrspace(1)* %79, align 4, !tbaa !7\l  br label %80\l}"];
	Node0x5bef300 -> Node0x5bec900;
	Node0x5bec900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  ret void\l}"];
}
