digraph "CFG for '_Z8zupdate2PfS_fii' function" {
	label="CFG for '_Z8zupdate2PfS_fii' function";

	Node0x62710d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = mul nsw i32 %22, %3\l  %24 = add nsw i32 %23, %14\l  %25 = icmp slt i32 %14, %3\l  %26 = icmp slt i32 %22, %4\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %93\l|{<s0>T|<s1>F}}"];
	Node0x62710d0:s0 -> Node0x6274c60;
	Node0x62710d0:s1 -> Node0x6274cf0;
	Node0x6274c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%28:\l28:                                               \l  %29 = sext i32 %24 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %32 = add nsw i32 %3, -1\l  %33 = icmp eq i32 %14, %32\l  br i1 %33, label %40, label %34\l|{<s0>T|<s1>F}}"];
	Node0x6274c60:s0 -> Node0x6273210;
	Node0x6274c60:s1 -> Node0x6275440;
	Node0x6275440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%34:\l34:                                               \l  %35 = add nsw i32 %24, 1\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = fsub contract float %38, %31\l  br label %40\l}"];
	Node0x6275440 -> Node0x6273210;
	Node0x6273210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%40:\l40:                                               \l  %41 = phi float [ 0.000000e+00, %28 ], [ %39, %34 ]\l  %42 = add nsw i32 %4, -1\l  %43 = icmp eq i32 %22, %42\l  br i1 %43, label %50, label %44\l|{<s0>T|<s1>F}}"];
	Node0x6273210:s0 -> Node0x6276a80;
	Node0x6273210:s1 -> Node0x6276b10;
	Node0x6276b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%44:\l44:                                               \l  %45 = add nsw i32 %24, %3\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %49 = fsub contract float %48, %31\l  br label %50\l}"];
	Node0x6276b10 -> Node0x6276a80;
	Node0x6276a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%50:\l50:                                               \l  %51 = phi float [ 0.000000e+00, %40 ], [ %49, %44 ]\l  %52 = fmul contract float %41, %41\l  %53 = fmul contract float %51, %51\l  %54 = fadd contract float %52, %53\l  %55 = fcmp olt float %54, 0x39F0000000000000\l  %56 = select i1 %55, float 0x41F0000000000000, float 1.000000e+00\l  %57 = fmul float %54, %56\l  %58 = tail call float @llvm.sqrt.f32(float %57)\l  %59 = bitcast float %58 to i32\l  %60 = add nsw i32 %59, -1\l  %61 = bitcast i32 %60 to float\l  %62 = add nsw i32 %59, 1\l  %63 = bitcast i32 %62 to float\l  %64 = tail call i1 @llvm.amdgcn.class.f32(float %57, i32 608)\l  %65 = select i1 %55, float 0x3EF0000000000000, float 1.000000e+00\l  %66 = fneg float %63\l  %67 = tail call float @llvm.fma.f32(float %66, float %58, float %57)\l  %68 = fcmp ogt float %67, 0.000000e+00\l  %69 = fneg float %61\l  %70 = tail call float @llvm.fma.f32(float %69, float %58, float %57)\l  %71 = fcmp ole float %70, 0.000000e+00\l  %72 = select i1 %71, float %61, float %58\l  %73 = select i1 %68, float %63, float %72\l  %74 = fmul float %65, %73\l  %75 = select i1 %64, float %57, float %74\l  %76 = fmul contract float %75, %2\l  %77 = fadd contract float %76, 1.000000e+00\l  %78 = fdiv contract float 1.000000e+00, %77\l  %79 = shl nsw i32 %24, 1\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %83 = fmul contract float %41, %2\l  %84 = fadd contract float %83, %82\l  %85 = fmul contract float %84, %78\l  store float %85, float addrspace(1)* %81, align 4, !tbaa !7\l  %86 = add nuw nsw i32 %79, 1\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %90 = fmul contract float %51, %2\l  %91 = fadd contract float %90, %89\l  %92 = fmul contract float %91, %78\l  store float %92, float addrspace(1)* %88, align 4, !tbaa !7\l  br label %93\l}"];
	Node0x6276a80 -> Node0x6274cf0;
	Node0x6274cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%93:\l93:                                               \l  ret void\l}"];
}
