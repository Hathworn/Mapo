digraph "CFG for '_Z16solution_stencilPfS_S_fii' function" {
	label="CFG for '_Z16solution_stencilPfS_S_fii' function";

	Node0x45e6c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = mul nsw i32 %23, %4\l  %25 = add nsw i32 %24, %15\l  %26 = icmp slt i32 %15, %4\l  %27 = icmp slt i32 %23, %5\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %71\l|{<s0>T|<s1>F}}"];
	Node0x45e6c00:s0 -> Node0x45ea7a0;
	Node0x45e6c00:s1 -> Node0x45ea830;
	Node0x45ea7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%29:\l29:                                               \l  %30 = add nsw i32 %4, -1\l  %31 = icmp slt i32 %15, %30\l  br i1 %31, label %32, label %37\l|{<s0>T|<s1>F}}"];
	Node0x45ea7a0:s0 -> Node0x45eaac0;
	Node0x45ea7a0:s1 -> Node0x45eab10;
	Node0x45eaac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%32:\l32:                                               \l  %33 = sext i32 %25 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = fadd contract float %35, 0.000000e+00\l  br label %37\l}"];
	Node0x45eaac0 -> Node0x45eab10;
	Node0x45eab10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%37:\l37:                                               \l  %38 = phi float [ %36, %32 ], [ 0.000000e+00, %29 ]\l  %39 = icmp sgt i32 %15, 0\l  br i1 %39, label %40, label %46\l|{<s0>T|<s1>F}}"];
	Node0x45eab10:s0 -> Node0x45ebd10;
	Node0x45eab10:s1 -> Node0x45ebd60;
	Node0x45ebd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%40:\l40:                                               \l  %41 = add nsw i32 %25, -1\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = fsub contract float %38, %44\l  br label %46\l}"];
	Node0x45ebd10 -> Node0x45ebd60;
	Node0x45ebd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%46:\l46:                                               \l  %47 = phi float [ %45, %40 ], [ %38, %37 ]\l  %48 = add nsw i32 %5, -1\l  %49 = icmp slt i32 %23, %48\l  br i1 %49, label %50, label %55\l|{<s0>T|<s1>F}}"];
	Node0x45ebd60:s0 -> Node0x45ec990;
	Node0x45ebd60:s1 -> Node0x45ec9e0;
	Node0x45ec990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%50:\l50:                                               \l  %51 = sext i32 %25 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %54 = fadd contract float %47, %53\l  br label %55\l}"];
	Node0x45ec990 -> Node0x45ec9e0;
	Node0x45ec9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%55:\l55:                                               \l  %56 = phi float [ %54, %50 ], [ %47, %46 ]\l  %57 = icmp sgt i32 %23, 0\l  br i1 %57, label %58, label %64\l|{<s0>T|<s1>F}}"];
	Node0x45ec9e0:s0 -> Node0x45ecf10;
	Node0x45ec9e0:s1 -> Node0x45ecf60;
	Node0x45ecf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%58:\l58:                                               \l  %59 = sub nsw i32 %25, %4\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = fsub contract float %56, %62\l  br label %64\l}"];
	Node0x45ecf10 -> Node0x45ecf60;
	Node0x45ecf60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%64:\l64:                                               \l  %65 = phi float [ %63, %58 ], [ %56, %55 ]\l  %66 = sext i32 %25 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %2, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %69 = fmul contract float %65, %3\l  %70 = fsub contract float %68, %69\l  store float %70, float addrspace(1)* %67, align 4, !tbaa !7\l  br label %71\l}"];
	Node0x45ecf60 -> Node0x45ea830;
	Node0x45ea830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  ret void\l}"];
}
