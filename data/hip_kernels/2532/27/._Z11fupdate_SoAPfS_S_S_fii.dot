digraph "CFG for '_Z11fupdate_SoAPfS_S_S_fii' function" {
	label="CFG for '_Z11fupdate_SoAPfS_S_S_fii' function";

	Node0x5336a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = mul nsw i32 %24, %5\l  %26 = add nsw i32 %25, %16\l  %27 = icmp slt i32 %16, %5\l  %28 = icmp slt i32 %24, %6\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %65\l|{<s0>T|<s1>F}}"];
	Node0x5336a60:s0 -> Node0x533a5d0;
	Node0x5336a60:s1 -> Node0x533a660;
	Node0x533a5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = sext i32 %26 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %2, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = add nsw i32 %26, -1\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = sub nsw i32 %26, %5\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %2, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = add nsw i32 %5, -1\l  %43 = icmp eq i32 %16, %42\l  br i1 %43, label %48, label %44\l|{<s0>T|<s1>F}}"];
	Node0x533a5d0:s0 -> Node0x533b7d0;
	Node0x533a5d0:s1 -> Node0x533b860;
	Node0x533b860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%44:\l44:                                               \l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = fadd contract float %46, 0.000000e+00\l  br label %48\l}"];
	Node0x533b860 -> Node0x533b7d0;
	Node0x533b7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%48:\l48:                                               \l  %49 = phi float [ 0.000000e+00, %30 ], [ %47, %44 ]\l  %50 = icmp eq i32 %16, 0\l  %51 = select i1 %50, float 0.000000e+00, float %37\l  %52 = fsub contract float %49, %51\l  %53 = add nsw i32 %6, -1\l  %54 = icmp eq i32 %24, %53\l  %55 = select i1 %54, float -0.000000e+00, float %33\l  %56 = fadd contract float %55, %52\l  %57 = icmp eq i32 %24, 0\l  %58 = select i1 %57, float 0.000000e+00, float %41\l  %59 = fsub contract float %56, %58\l  %60 = getelementptr inbounds float, float addrspace(1)* %3, i64 %31\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %62 = fmul contract float %61, %4\l  %63 = fsub contract float %59, %62\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  store float %63, float addrspace(1)* %64, align 4, !tbaa !7\l  br label %65\l}"];
	Node0x533b7d0 -> Node0x533a660;
	Node0x533a660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  ret void\l}"];
}
