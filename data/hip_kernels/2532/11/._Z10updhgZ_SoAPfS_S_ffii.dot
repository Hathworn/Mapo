digraph "CFG for '_Z10updhgZ_SoAPfS_S_ffii' function" {
	label="CFG for '_Z10updhgZ_SoAPfS_S_ffii' function";

	Node0x4556120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = mul nsw i32 %24, %5\l  %26 = add nsw i32 %25, %16\l  %27 = icmp slt i32 %16, %5\l  %28 = icmp slt i32 %24, %6\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %91\l|{<s0>T|<s1>F}}"];
	Node0x4556120:s0 -> Node0x4559c90;
	Node0x4556120:s1 -> Node0x4559d20;
	Node0x4559c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = sext i32 %26 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %2, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = add nsw i32 %5, -1\l  %35 = icmp slt i32 %16, %34\l  br i1 %35, label %36, label %42\l|{<s0>T|<s1>F}}"];
	Node0x4559c90:s0 -> Node0x455a3e0;
	Node0x4559c90:s1 -> Node0x455a470;
	Node0x455a3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%36:\l36:                                               \l  %37 = add nsw i32 %26, 1\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %2, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %41 = fsub contract float %40, %33\l  br label %42\l}"];
	Node0x455a3e0 -> Node0x455a470;
	Node0x455a470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%42:\l42:                                               \l  %43 = phi float [ %41, %36 ], [ 0.000000e+00, %30 ]\l  %44 = add nsw i32 %6, -1\l  %45 = icmp slt i32 %24, %44\l  br i1 %45, label %46, label %52\l|{<s0>T|<s1>F}}"];
	Node0x455a470:s0 -> Node0x455bab0;
	Node0x455a470:s1 -> Node0x455bb40;
	Node0x455bab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%46:\l46:                                               \l  %47 = add nsw i32 %26, %5\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %2, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %51 = fsub contract float %50, %33\l  br label %52\l}"];
	Node0x455bab0 -> Node0x455bb40;
	Node0x455bb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%52:\l52:                                               \l  %53 = phi float [ %51, %46 ], [ 0.000000e+00, %42 ]\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %56 = fmul contract float %3, %4\l  %57 = fmul contract float %56, %43\l  %58 = fadd contract float %57, %55\l  %59 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %61 = fmul contract float %56, %53\l  %62 = fadd contract float %61, %60\l  %63 = fmul contract float %58, %58\l  %64 = fmul contract float %62, %62\l  %65 = fadd contract float %63, %64\l  %66 = fcmp olt float %65, 0x39F0000000000000\l  %67 = select i1 %66, float 0x41F0000000000000, float 1.000000e+00\l  %68 = fmul float %65, %67\l  %69 = tail call float @llvm.sqrt.f32(float %68)\l  %70 = bitcast float %69 to i32\l  %71 = add nsw i32 %70, -1\l  %72 = bitcast i32 %71 to float\l  %73 = add nsw i32 %70, 1\l  %74 = bitcast i32 %73 to float\l  %75 = tail call i1 @llvm.amdgcn.class.f32(float %68, i32 608)\l  %76 = select i1 %66, float 0x3EF0000000000000, float 1.000000e+00\l  %77 = fneg float %74\l  %78 = tail call float @llvm.fma.f32(float %77, float %69, float %68)\l  %79 = fcmp ogt float %78, 0.000000e+00\l  %80 = fneg float %72\l  %81 = tail call float @llvm.fma.f32(float %80, float %69, float %68)\l  %82 = fcmp ole float %81, 0.000000e+00\l  %83 = select i1 %82, float %72, float %69\l  %84 = select i1 %79, float %74, float %83\l  %85 = fmul float %76, %84\l  %86 = select i1 %75, float %68, float %85\l  %87 = fcmp contract ole float %86, 1.000000e+00\l  %88 = select contract i1 %87, float 1.000000e+00, float %86\l  %89 = fdiv contract float %58, %88\l  store float %89, float addrspace(1)* %54, align 4, !tbaa !7\l  %90 = fdiv contract float %62, %88\l  store float %90, float addrspace(1)* %59, align 4, !tbaa !7\l  br label %91\l}"];
	Node0x455bb40 -> Node0x4559d20;
	Node0x4559d20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%91:\l91:                                               \l  ret void\l}"];
}
