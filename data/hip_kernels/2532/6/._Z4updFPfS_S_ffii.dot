digraph "CFG for '_Z4updFPfS_S_ffii' function" {
	label="CFG for '_Z4updFPfS_S_ffii' function";

	Node0x5d1bdc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = mul nsw i32 %24, %5\l  %26 = add nsw i32 %25, %16\l  %27 = icmp slt i32 %16, %5\l  %28 = icmp slt i32 %24, %6\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %85\l|{<s0>T|<s1>F}}"];
	Node0x5d1bdc0:s0 -> Node0x5d1f930;
	Node0x5d1bdc0:s1 -> Node0x5d1f9c0;
	Node0x5d1f930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = add nsw i32 %5, -1\l  %32 = icmp slt i32 %16, %31\l  br i1 %32, label %33, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5d1f930:s0 -> Node0x5d1dbe0;
	Node0x5d1f930:s1 -> Node0x5d1dc30;
	Node0x5d1dbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%33:\l33:                                               \l  %34 = shl nsw i32 %26, 1\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = fadd contract float %37, 0.000000e+00\l  br label %39\l}"];
	Node0x5d1dbe0 -> Node0x5d1dc30;
	Node0x5d1dc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%39:\l39:                                               \l  %40 = phi float [ %38, %33 ], [ 0.000000e+00, %30 ]\l  %41 = icmp sgt i32 %16, 0\l  br i1 %41, label %42, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5d1dc30:s0 -> Node0x5d20f60;
	Node0x5d1dc30:s1 -> Node0x5d20fb0;
	Node0x5d20f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%42:\l42:                                               \l  %43 = shl i32 %26, 1\l  %44 = add i32 %43, -2\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fsub contract float %40, %47\l  br label %49\l}"];
	Node0x5d20f60 -> Node0x5d20fb0;
	Node0x5d20fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%49:\l49:                                               \l  %50 = phi float [ %48, %42 ], [ %40, %39 ]\l  %51 = add nsw i32 %6, -1\l  %52 = icmp slt i32 %24, %51\l  br i1 %52, label %53, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5d20fb0:s0 -> Node0x5d21ca0;
	Node0x5d20fb0:s1 -> Node0x5d21cf0;
	Node0x5d21ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%53:\l53:                                               \l  %54 = shl nsw i32 %26, 1\l  %55 = add nuw nsw i32 %54, 1\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %59 = fadd contract float %50, %58\l  br label %60\l}"];
	Node0x5d21ca0 -> Node0x5d21cf0;
	Node0x5d21cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%60:\l60:                                               \l  %61 = phi float [ %59, %53 ], [ %50, %49 ]\l  %62 = icmp sgt i32 %24, 0\l  br i1 %62, label %63, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5d21cf0:s0 -> Node0x5d22340;
	Node0x5d21cf0:s1 -> Node0x5d22390;
	Node0x5d22340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%63:\l63:                                               \l  %64 = sub nsw i32 %26, %5\l  %65 = shl nsw i32 %64, 1\l  %66 = add nuw nsw i32 %65, 1\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %70 = fsub contract float %61, %69\l  br label %71\l}"];
	Node0x5d22340 -> Node0x5d22390;
	Node0x5d22390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%71:\l71:                                               \l  %72 = phi float [ %70, %63 ], [ %61, %60 ]\l  %73 = sext i32 %26 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %76 = fmul contract float %72, %3\l  %77 = fadd contract float %75, %76\l  %78 = fmul contract float %3, %4\l  %79 = getelementptr inbounds float, float addrspace(1)* %2, i64 %73\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %81 = fmul contract float %78, %80\l  %82 = fadd contract float %77, %81\l  %83 = fadd contract float %78, 1.000000e+00\l  %84 = fdiv contract float %82, %83\l  store float %84, float addrspace(1)* %74, align 4, !tbaa !7\l  br label %85\l}"];
	Node0x5d22390 -> Node0x5d1f9c0;
	Node0x5d1f9c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  ret void\l}"];
}
