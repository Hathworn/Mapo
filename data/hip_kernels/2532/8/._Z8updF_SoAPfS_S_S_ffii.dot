digraph "CFG for '_Z8updF_SoAPfS_S_S_ffii' function" {
	label="CFG for '_Z8updF_SoAPfS_S_S_ffii' function";

	Node0x51f6dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = mul nsw i32 %25, %6\l  %27 = add nsw i32 %26, %17\l  %28 = icmp slt i32 %17, %6\l  %29 = icmp slt i32 %25, %7\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %80\l|{<s0>T|<s1>F}}"];
	Node0x51f6dd0:s0 -> Node0x51fa930;
	Node0x51f6dd0:s1 -> Node0x51fa9c0;
	Node0x51fa930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%31:\l31:                                               \l  %32 = add nsw i32 %6, -1\l  %33 = icmp slt i32 %17, %32\l  br i1 %33, label %34, label %39\l|{<s0>T|<s1>F}}"];
	Node0x51fa930:s0 -> Node0x51f8bf0;
	Node0x51fa930:s1 -> Node0x51fadd0;
	Node0x51f8bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%34:\l34:                                               \l  %35 = sext i32 %27 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = fadd contract float %37, 0.000000e+00\l  br label %39\l}"];
	Node0x51f8bf0 -> Node0x51fadd0;
	Node0x51fadd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%39:\l39:                                               \l  %40 = phi float [ %38, %34 ], [ 0.000000e+00, %31 ]\l  %41 = icmp sgt i32 %17, 0\l  br i1 %41, label %42, label %48\l|{<s0>T|<s1>F}}"];
	Node0x51fadd0:s0 -> Node0x51fbea0;
	Node0x51fadd0:s1 -> Node0x51fbef0;
	Node0x51fbea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%42:\l42:                                               \l  %43 = add nsw i32 %27, -1\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = fsub contract float %40, %46\l  br label %48\l}"];
	Node0x51fbea0 -> Node0x51fbef0;
	Node0x51fbef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%48:\l48:                                               \l  %49 = phi float [ %47, %42 ], [ %40, %39 ]\l  %50 = add nsw i32 %7, -1\l  %51 = icmp slt i32 %25, %50\l  br i1 %51, label %52, label %57\l|{<s0>T|<s1>F}}"];
	Node0x51fbef0:s0 -> Node0x51fcb20;
	Node0x51fbef0:s1 -> Node0x51fcb70;
	Node0x51fcb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%52:\l52:                                               \l  %53 = sext i32 %27 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %2, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %56 = fadd contract float %49, %55\l  br label %57\l}"];
	Node0x51fcb20 -> Node0x51fcb70;
	Node0x51fcb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%57:\l57:                                               \l  %58 = phi float [ %56, %52 ], [ %49, %48 ]\l  %59 = icmp sgt i32 %25, 0\l  br i1 %59, label %60, label %66\l|{<s0>T|<s1>F}}"];
	Node0x51fcb70:s0 -> Node0x51fd0a0;
	Node0x51fcb70:s1 -> Node0x51fd0f0;
	Node0x51fd0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%60:\l60:                                               \l  %61 = sub nsw i32 %27, %6\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %2, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %65 = fsub contract float %58, %64\l  br label %66\l}"];
	Node0x51fd0a0 -> Node0x51fd0f0;
	Node0x51fd0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%66:\l66:                                               \l  %67 = phi float [ %65, %60 ], [ %58, %57 ]\l  %68 = sext i32 %27 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %71 = fmul contract float %67, %4\l  %72 = fadd contract float %70, %71\l  %73 = fmul contract float %4, %5\l  %74 = getelementptr inbounds float, float addrspace(1)* %3, i64 %68\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %76 = fmul contract float %73, %75\l  %77 = fadd contract float %72, %76\l  %78 = fadd contract float %73, 1.000000e+00\l  %79 = fdiv contract float %77, %78\l  store float %79, float addrspace(1)* %69, align 4, !tbaa !7\l  br label %80\l}"];
	Node0x51fd0f0 -> Node0x51fa9c0;
	Node0x51fa9c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  ret void\l}"];
}
