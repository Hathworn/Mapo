digraph "CFG for '_Z15zupdate_stencilPfS_S_S_S_ffii' function" {
	label="CFG for '_Z15zupdate_stencilPfS_S_S_S_ffii' function";

	Node0x6051140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = mul nsw i32 %26, %7\l  %28 = add nsw i32 %27, %18\l  %29 = icmp slt i32 %18, %7\l  %30 = icmp slt i32 %26, %8\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %67\l|{<s0>T|<s1>F}}"];
	Node0x6051140:s0 -> Node0x6055820;
	Node0x6051140:s1 -> Node0x60558b0;
	Node0x6055820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%32:\l32:                                               \l  %33 = add nsw i32 %7, -1\l  %34 = icmp slt i32 %18, %33\l  br i1 %34, label %35, label %40\l|{<s0>T|<s1>F}}"];
	Node0x6055820:s0 -> Node0x60537b0;
	Node0x6055820:s1 -> Node0x6055c90;
	Node0x60537b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%35:\l35:                                               \l  %36 = sext i32 %28 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = fadd contract float %38, 0.000000e+00\l  br label %40\l}"];
	Node0x60537b0 -> Node0x6055c90;
	Node0x6055c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%40:\l40:                                               \l  %41 = phi float [ %39, %35 ], [ 0.000000e+00, %32 ]\l  %42 = icmp sgt i32 %18, 0\l  br i1 %42, label %43, label %49\l|{<s0>T|<s1>F}}"];
	Node0x6055c90:s0 -> Node0x6056d90;
	Node0x6055c90:s1 -> Node0x6056de0;
	Node0x6056d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%43:\l43:                                               \l  %44 = add nsw i32 %28, -1\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fsub contract float %41, %47\l  br label %49\l}"];
	Node0x6056d90 -> Node0x6056de0;
	Node0x6056de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%49:\l49:                                               \l  %50 = phi float [ %48, %43 ], [ %41, %40 ]\l  %51 = add nsw i32 %8, -1\l  %52 = icmp slt i32 %26, %51\l  br i1 %52, label %53, label %58\l|{<s0>T|<s1>F}}"];
	Node0x6056de0:s0 -> Node0x6057a10;
	Node0x6056de0:s1 -> Node0x6057a60;
	Node0x6057a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%53:\l53:                                               \l  %54 = sext i32 %28 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %57 = fadd contract float %50, %56\l  br label %58\l}"];
	Node0x6057a10 -> Node0x6057a60;
	Node0x6057a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%58:\l58:                                               \l  %59 = phi float [ %57, %53 ], [ %50, %49 ]\l  %60 = icmp sgt i32 %26, 0\l  br i1 %60, label %61, label %67\l|{<s0>T|<s1>F}}"];
	Node0x6057a60:s0 -> Node0x6057f90;
	Node0x6057a60:s1 -> Node0x60558b0;
	Node0x6057f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%61:\l61:                                               \l  %62 = sub nsw i32 %28, %7\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %1, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %66 = fsub contract float %59, %65\l  br label %67\l}"];
	Node0x6057f90 -> Node0x60558b0;
	Node0x60558b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi float [ 0.000000e+00, %9 ], [ %66, %61 ], [ %59, %58 ]\l  %69 = add nsw i32 %28, 1\l  %70 = add nsw i32 %18, 1\l  %71 = icmp slt i32 %70, %7\l  %72 = select i1 %71, i1 %30, i1 false\l  br i1 %72, label %73, label %107\l|{<s0>T|<s1>F}}"];
	Node0x60558b0:s0 -> Node0x6055bb0;
	Node0x60558b0:s1 -> Node0x6058920;
	Node0x6055bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%73:\l73:                                               \l  %74 = add nsw i32 %7, -1\l  %75 = icmp slt i32 %70, %74\l  br i1 %75, label %76, label %81\l|{<s0>T|<s1>F}}"];
	Node0x6055bb0:s0 -> Node0x6058b80;
	Node0x6055bb0:s1 -> Node0x6058bd0;
	Node0x6058b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%76:\l76:                                               \l  %77 = sext i32 %69 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %80 = fadd contract float %79, 0.000000e+00\l  br label %81\l}"];
	Node0x6058b80 -> Node0x6058bd0;
	Node0x6058bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%81:\l81:                                               \l  %82 = phi float [ %80, %76 ], [ 0.000000e+00, %73 ]\l  %83 = icmp sgt i32 %18, -1\l  br i1 %83, label %84, label %89\l|{<s0>T|<s1>F}}"];
	Node0x6058bd0:s0 -> Node0x6059100;
	Node0x6058bd0:s1 -> Node0x6059150;
	Node0x6059100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%84:\l84:                                               \l  %85 = sext i32 %28 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %88 = fsub contract float %82, %87\l  br label %89\l}"];
	Node0x6059100 -> Node0x6059150;
	Node0x6059150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%89:\l89:                                               \l  %90 = phi float [ %88, %84 ], [ %82, %81 ]\l  %91 = add nsw i32 %8, -1\l  %92 = icmp slt i32 %26, %91\l  br i1 %92, label %93, label %98\l|{<s0>T|<s1>F}}"];
	Node0x6059150:s0 -> Node0x60596e0;
	Node0x6059150:s1 -> Node0x6059730;
	Node0x60596e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%93:\l93:                                               \l  %94 = sext i32 %69 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %97 = fadd contract float %90, %96\l  br label %98\l}"];
	Node0x60596e0 -> Node0x6059730;
	Node0x6059730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%98:\l98:                                               \l  %99 = phi float [ %97, %93 ], [ %90, %89 ]\l  %100 = icmp sgt i32 %26, 0\l  br i1 %100, label %101, label %107\l|{<s0>T|<s1>F}}"];
	Node0x6059730:s0 -> Node0x6059c30;
	Node0x6059730:s1 -> Node0x6058920;
	Node0x6059c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%101:\l101:                                              \l  %102 = sub nsw i32 %69, %7\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %1, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %106 = fsub contract float %99, %105\l  br label %107\l}"];
	Node0x6059c30 -> Node0x6058920;
	Node0x6058920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  %108 = phi float [ 0.000000e+00, %67 ], [ %106, %101 ], [ %99, %98 ]\l  %109 = add nsw i32 %28, %7\l  %110 = add nsw i32 %26, 1\l  %111 = icmp slt i32 %110, %8\l  %112 = select i1 %29, i1 %111, i1 false\l  br i1 %112, label %113, label %147\l|{<s0>T|<s1>F}}"];
	Node0x6058920:s0 -> Node0x605a370;
	Node0x6058920:s1 -> Node0x605a3c0;
	Node0x605a370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%113:\l113:                                              \l  %114 = add nsw i32 %7, -1\l  %115 = icmp slt i32 %18, %114\l  br i1 %115, label %116, label %121\l|{<s0>T|<s1>F}}"];
	Node0x605a370:s0 -> Node0x605a620;
	Node0x605a370:s1 -> Node0x605a670;
	Node0x605a620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%116:\l116:                                              \l  %117 = sext i32 %109 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %0, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %120 = fadd contract float %119, 0.000000e+00\l  br label %121\l}"];
	Node0x605a620 -> Node0x605a670;
	Node0x605a670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%121:\l121:                                              \l  %122 = phi float [ %120, %116 ], [ 0.000000e+00, %113 ]\l  %123 = icmp sgt i32 %18, 0\l  br i1 %123, label %124, label %130\l|{<s0>T|<s1>F}}"];
	Node0x605a670:s0 -> Node0x605ab70;
	Node0x605a670:s1 -> Node0x605abc0;
	Node0x605ab70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%124:\l124:                                              \l  %125 = add nsw i32 %109, -1\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %0, i64 %126\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %129 = fsub contract float %122, %128\l  br label %130\l}"];
	Node0x605ab70 -> Node0x605abc0;
	Node0x605abc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%130:\l130:                                              \l  %131 = phi float [ %129, %124 ], [ %122, %121 ]\l  %132 = add nsw i32 %8, -1\l  %133 = icmp slt i32 %110, %132\l  br i1 %133, label %134, label %139\l|{<s0>T|<s1>F}}"];
	Node0x605abc0:s0 -> Node0x6058500;
	Node0x605abc0:s1 -> Node0x6058550;
	Node0x6058500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%134:\l134:                                              \l  %135 = sext i32 %109 to i64\l  %136 = getelementptr inbounds float, float addrspace(1)* %1, i64 %135\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %138 = fadd contract float %131, %137\l  br label %139\l}"];
	Node0x6058500 -> Node0x6058550;
	Node0x6058550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%139:\l139:                                              \l  %140 = phi float [ %138, %134 ], [ %131, %130 ]\l  %141 = icmp sgt i32 %26, -1\l  br i1 %141, label %142, label %147\l|{<s0>T|<s1>F}}"];
	Node0x6058550:s0 -> Node0x605bb40;
	Node0x6058550:s1 -> Node0x605a3c0;
	Node0x605bb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%142:\l142:                                              \l  %143 = sext i32 %28 to i64\l  %144 = getelementptr inbounds float, float addrspace(1)* %1, i64 %143\l  %145 = load float, float addrspace(1)* %144, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %146 = fsub contract float %140, %145\l  br label %147\l}"];
	Node0x605bb40 -> Node0x605a3c0;
	Node0x605a3c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%147:\l147:                                              \l  %148 = phi float [ 0.000000e+00, %107 ], [ %146, %142 ], [ %140, %139 ]\l  %149 = sext i32 %28 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %4, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %152 = fmul contract float %151, %6\l  %153 = fsub contract float %68, %152\l  br i1 %31, label %154, label %212\l|{<s0>T|<s1>F}}"];
	Node0x605a3c0:s0 -> Node0x605c230;
	Node0x605a3c0:s1 -> Node0x605c2c0;
	Node0x605c230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%154:\l154:                                              \l  %155 = sext i32 %109 to i64\l  %156 = getelementptr inbounds float, float addrspace(1)* %4, i64 %155\l  %157 = load float, float addrspace(1)* %156, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %158 = fmul contract float %157, %6\l  %159 = fsub contract float %148, %158\l  %160 = sext i32 %69 to i64\l  %161 = getelementptr inbounds float, float addrspace(1)* %4, i64 %160\l  %162 = load float, float addrspace(1)* %161, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %163 = fmul contract float %162, %6\l  %164 = fsub contract float %108, %163\l  %165 = add nsw i32 %7, -1\l  %166 = icmp slt i32 %18, %165\l  %167 = fsub contract float %164, %153\l  %168 = select i1 %166, float %167, float 0.000000e+00\l  %169 = add nsw i32 %8, -1\l  %170 = icmp slt i32 %26, %169\l  %171 = fsub contract float %159, %153\l  %172 = select i1 %170, float %171, float 0.000000e+00\l  %173 = fmul contract float %168, %168\l  %174 = fmul contract float %172, %172\l  %175 = fadd contract float %174, %173\l  %176 = fcmp olt float %175, 0x39F0000000000000\l  %177 = select i1 %176, float 0x41F0000000000000, float 1.000000e+00\l  %178 = fmul float %175, %177\l  %179 = tail call float @llvm.sqrt.f32(float %178)\l  %180 = bitcast float %179 to i32\l  %181 = add nsw i32 %180, -1\l  %182 = bitcast i32 %181 to float\l  %183 = add nsw i32 %180, 1\l  %184 = bitcast i32 %183 to float\l  %185 = tail call i1 @llvm.amdgcn.class.f32(float %178, i32 608)\l  %186 = select i1 %176, float 0x3EF0000000000000, float 1.000000e+00\l  %187 = fneg float %184\l  %188 = tail call float @llvm.fma.f32(float %187, float %179, float %178)\l  %189 = fcmp ogt float %188, 0.000000e+00\l  %190 = fneg float %182\l  %191 = tail call float @llvm.fma.f32(float %190, float %179, float %178)\l  %192 = fcmp ole float %191, 0.000000e+00\l  %193 = select i1 %192, float %182, float %179\l  %194 = select i1 %189, float %184, float %193\l  %195 = fmul float %186, %194\l  %196 = select i1 %185, float %178, float %195\l  %197 = fmul contract float %196, %5\l  %198 = fadd contract float %197, 1.000000e+00\l  %199 = fdiv contract float 1.000000e+00, %198\l  %200 = getelementptr inbounds float, float addrspace(1)* %0, i64 %149\l  %201 = load float, float addrspace(1)* %200, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %202 = fmul contract float %168, %5\l  %203 = fadd contract float %201, %202\l  %204 = fmul contract float %203, %199\l  %205 = getelementptr inbounds float, float addrspace(1)* %2, i64 %149\l  store float %204, float addrspace(1)* %205, align 4, !tbaa !7\l  %206 = getelementptr inbounds float, float addrspace(1)* %1, i64 %149\l  %207 = load float, float addrspace(1)* %206, align 4, !tbaa !7\l  %208 = fmul contract float %172, %5\l  %209 = fadd contract float %207, %208\l  %210 = fmul contract float %209, %199\l  %211 = getelementptr inbounds float, float addrspace(1)* %3, i64 %149\l  store float %210, float addrspace(1)* %211, align 4, !tbaa !7\l  br label %212\l}"];
	Node0x605c230 -> Node0x605c2c0;
	Node0x605c2c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%212:\l212:                                              \l  ret void\l}"];
}
