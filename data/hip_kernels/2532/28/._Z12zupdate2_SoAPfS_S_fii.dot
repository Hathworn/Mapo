digraph "CFG for '_Z12zupdate2_SoAPfS_S_fii' function" {
	label="CFG for '_Z12zupdate2_SoAPfS_S_fii' function";

	Node0x5752010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = mul nsw i32 %23, %4\l  %25 = add nsw i32 %24, %15\l  %26 = icmp slt i32 %15, %4\l  %27 = icmp slt i32 %23, %5\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %88\l|{<s0>T|<s1>F}}"];
	Node0x5752010:s0 -> Node0x5755bb0;
	Node0x5752010:s1 -> Node0x5755c40;
	Node0x5755bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%29:\l29:                                               \l  %30 = sext i32 %25 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %33 = add nsw i32 %25, %4\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = add nsw i32 %4, -1\l  %38 = icmp eq i32 %15, %37\l  br i1 %38, label %45, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5755bb0:s0 -> Node0x5756b40;
	Node0x5755bb0:s1 -> Node0x5756bd0;
	Node0x5756bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%39:\l39:                                               \l  %40 = add nsw i32 %25, 1\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %2, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fsub contract float %43, %32\l  br label %45\l}"];
	Node0x5756bd0 -> Node0x5756b40;
	Node0x5756b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%45:\l45:                                               \l  %46 = phi float [ 0.000000e+00, %29 ], [ %44, %39 ]\l  %47 = add nsw i32 %5, -1\l  %48 = icmp eq i32 %23, %47\l  %49 = fsub contract float %36, %32\l  %50 = select i1 %48, float 0.000000e+00, float %49\l  %51 = fmul contract float %46, %46\l  %52 = fmul contract float %50, %50\l  %53 = fadd contract float %52, %51\l  %54 = fcmp olt float %53, 0x39F0000000000000\l  %55 = select i1 %54, float 0x41F0000000000000, float 1.000000e+00\l  %56 = fmul float %53, %55\l  %57 = tail call float @llvm.sqrt.f32(float %56)\l  %58 = bitcast float %57 to i32\l  %59 = add nsw i32 %58, -1\l  %60 = bitcast i32 %59 to float\l  %61 = add nsw i32 %58, 1\l  %62 = bitcast i32 %61 to float\l  %63 = tail call i1 @llvm.amdgcn.class.f32(float %56, i32 608)\l  %64 = select i1 %54, float 0x3EF0000000000000, float 1.000000e+00\l  %65 = fneg float %62\l  %66 = tail call float @llvm.fma.f32(float %65, float %57, float %56)\l  %67 = fcmp ogt float %66, 0.000000e+00\l  %68 = fneg float %60\l  %69 = tail call float @llvm.fma.f32(float %68, float %57, float %56)\l  %70 = fcmp ole float %69, 0.000000e+00\l  %71 = select i1 %70, float %60, float %57\l  %72 = select i1 %67, float %62, float %71\l  %73 = fmul float %64, %72\l  %74 = select i1 %63, float %56, float %73\l  %75 = fmul contract float %74, %3\l  %76 = fadd contract float %75, 1.000000e+00\l  %77 = fdiv contract float 1.000000e+00, %76\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %80 = fmul contract float %46, %3\l  %81 = fadd contract float %79, %80\l  %82 = fmul contract float %81, %77\l  store float %82, float addrspace(1)* %78, align 4, !tbaa !7\l  %83 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  %85 = fmul contract float %50, %3\l  %86 = fadd contract float %85, %84\l  %87 = fmul contract float %86, %77\l  store float %87, float addrspace(1)* %83, align 4, !tbaa !7\l  br label %88\l}"];
	Node0x5756b40 -> Node0x5755c40;
	Node0x5755c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  ret void\l}"];
}
