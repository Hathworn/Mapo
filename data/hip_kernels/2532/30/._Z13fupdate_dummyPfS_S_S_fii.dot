digraph "CFG for '_Z13fupdate_dummyPfS_S_S_fii' function" {
	label="CFG for '_Z13fupdate_dummyPfS_S_S_fii' function";

	Node0x5e017d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = icmp slt i32 %16, %5\l  %26 = icmp slt i32 %24, %6\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %51\l|{<s0>T|<s1>F}}"];
	Node0x5e017d0:s0 -> Node0x5e05220;
	Node0x5e017d0:s1 -> Node0x5e052b0;
	Node0x5e05220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%28:\l28:                                               \l  %29 = mul nsw i32 %24, %5\l  %30 = add nsw i32 %29, %16\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %2, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = add nsw i32 %5, -1\l  %35 = icmp eq i32 %16, %34\l  br i1 %35, label %40, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5e05220:s0 -> Node0x5e05a90;
	Node0x5e05220:s1 -> Node0x5e05b20;
	Node0x5e05b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%36:\l36:                                               \l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = fadd contract float %38, 0.000000e+00\l  br label %40\l}"];
	Node0x5e05b20 -> Node0x5e05a90;
	Node0x5e05a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%40:\l40:                                               \l  %41 = phi float [ 0.000000e+00, %28 ], [ %39, %36 ]\l  %42 = add nsw i32 %6, -1\l  %43 = icmp eq i32 %24, %42\l  %44 = select i1 %43, float -0.000000e+00, float %33\l  %45 = fadd contract float %44, %41\l  %46 = getelementptr inbounds float, float addrspace(1)* %3, i64 %31\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fmul contract float %47, %4\l  %49 = fsub contract float %45, %48\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  store float %49, float addrspace(1)* %50, align 4, !tbaa !7\l  br label %51\l}"];
	Node0x5e05a90 -> Node0x5e052b0;
	Node0x5e052b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  ret void\l}"];
}
