digraph "CFG for '_Z10FindMinMaxPfS_iii' function" {
	label="CFG for '_Z10FindMinMaxPfS_iii' function";

	Node0x4deafd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = shl i32 %7, 7\l  %9 = add i32 %8, %6\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = shl i32 %10, 4\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !7\l  %20 = mul nsw i32 %11, %3\l  %21 = add nsw i32 %20, %9\l  %22 = icmp slt i32 %9, %2\l  %23 = select i1 %22, i32 %21, i32 %20\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %1, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !16\l  %27 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ10FindMinMaxPfS_iiiE7minvals, i32 0, i32 %6\l  store float %26, float addrspace(3)* %27, align 4\l  %28 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ10FindMinMaxPfS_iiiE7maxvals, i32 0, i32 %6\l  store float %26, float addrspace(3)* %28, align 4\l  %29 = icmp slt i32 %6, %2\l  %30 = add nsw i32 %21, %3\l  br i1 %29, label %31, label %41\l|{<s0>T|<s1>F}}"];
	Node0x4deafd0:s0 -> Node0x4ded9e0;
	Node0x4deafd0:s1 -> Node0x4dede30;
	Node0x4ded9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%31:\l31:                                               \l  %32 = sext i32 %30 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %35 = fcmp contract olt float %34, %26\l  br i1 %35, label %36, label %37\l|{<s0>T|<s1>F}}"];
	Node0x4ded9e0:s0 -> Node0x4deeea0;
	Node0x4ded9e0:s1 -> Node0x4deef30;
	Node0x4deeea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%36:\l36:                                               \l  store float %34, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %37\l}"];
	Node0x4deeea0 -> Node0x4deef30;
	Node0x4deef30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%37:\l37:                                               \l  %38 = phi float [ %34, %36 ], [ %26, %31 ]\l  %39 = fcmp contract ogt float %34, %26\l  br i1 %39, label %40, label %41\l|{<s0>T|<s1>F}}"];
	Node0x4deef30:s0 -> Node0x4def2e0;
	Node0x4deef30:s1 -> Node0x4dede30;
	Node0x4def2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%40:\l40:                                               \l  store float %34, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %41\l}"];
	Node0x4def2e0 -> Node0x4dede30;
	Node0x4dede30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%41:\l41:                                               \l  %42 = phi float [ %26, %37 ], [ %34, %40 ], [ %26, %5 ]\l  %43 = phi float [ %38, %37 ], [ %38, %40 ], [ %26, %5 ]\l  %44 = add nsw i32 %30, %3\l  br i1 %29, label %45, label %55\l|{<s0>T|<s1>F}}"];
	Node0x4dede30:s0 -> Node0x4def710;
	Node0x4dede30:s1 -> Node0x4def760;
	Node0x4def710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%45:\l45:                                               \l  %46 = sext i32 %44 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %49 = fcmp contract olt float %48, %43\l  br i1 %49, label %50, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4def710:s0 -> Node0x4defa70;
	Node0x4def710:s1 -> Node0x4defac0;
	Node0x4defa70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%50:\l50:                                               \l  store float %48, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %51\l}"];
	Node0x4defa70 -> Node0x4defac0;
	Node0x4defac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%51:\l51:                                               \l  %52 = phi float [ %48, %50 ], [ %43, %45 ]\l  %53 = fcmp contract ogt float %48, %42\l  br i1 %53, label %54, label %55\l|{<s0>T|<s1>F}}"];
	Node0x4defac0:s0 -> Node0x4defe40;
	Node0x4defac0:s1 -> Node0x4def760;
	Node0x4defe40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%54:\l54:                                               \l  store float %48, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %55\l}"];
	Node0x4defe40 -> Node0x4def760;
	Node0x4def760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%55:\l55:                                               \l  %56 = phi float [ %48, %54 ], [ %42, %51 ], [ %42, %41 ]\l  %57 = phi float [ %52, %54 ], [ %52, %51 ], [ %43, %41 ]\l  %58 = add nsw i32 %44, %3\l  br i1 %29, label %59, label %69\l|{<s0>T|<s1>F}}"];
	Node0x4def760:s0 -> Node0x4df0270;
	Node0x4def760:s1 -> Node0x4df02c0;
	Node0x4df0270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%59:\l59:                                               \l  %60 = sext i32 %58 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %63 = fcmp contract olt float %62, %57\l  br i1 %63, label %64, label %65\l|{<s0>T|<s1>F}}"];
	Node0x4df0270:s0 -> Node0x4df05d0;
	Node0x4df0270:s1 -> Node0x4df0620;
	Node0x4df05d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%64:\l64:                                               \l  store float %62, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %65\l}"];
	Node0x4df05d0 -> Node0x4df0620;
	Node0x4df0620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%65:\l65:                                               \l  %66 = phi float [ %62, %64 ], [ %57, %59 ]\l  %67 = fcmp contract ogt float %62, %56\l  br i1 %67, label %68, label %69\l|{<s0>T|<s1>F}}"];
	Node0x4df0620:s0 -> Node0x4dee190;
	Node0x4df0620:s1 -> Node0x4df02c0;
	Node0x4dee190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%68:\l68:                                               \l  store float %62, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %69\l}"];
	Node0x4dee190 -> Node0x4df02c0;
	Node0x4df02c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%69:\l69:                                               \l  %70 = phi float [ %62, %68 ], [ %56, %65 ], [ %56, %55 ]\l  %71 = phi float [ %66, %68 ], [ %66, %65 ], [ %57, %55 ]\l  %72 = add nsw i32 %58, %3\l  br i1 %29, label %73, label %83\l|{<s0>T|<s1>F}}"];
	Node0x4df02c0:s0 -> Node0x4df0fe0;
	Node0x4df02c0:s1 -> Node0x4df1030;
	Node0x4df0fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%73:\l73:                                               \l  %74 = sext i32 %72 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %77 = fcmp contract olt float %76, %71\l  br i1 %77, label %78, label %79\l|{<s0>T|<s1>F}}"];
	Node0x4df0fe0:s0 -> Node0x4df1340;
	Node0x4df0fe0:s1 -> Node0x4df1390;
	Node0x4df1340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%78:\l78:                                               \l  store float %76, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %79\l}"];
	Node0x4df1340 -> Node0x4df1390;
	Node0x4df1390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%79:\l79:                                               \l  %80 = phi float [ %76, %78 ], [ %71, %73 ]\l  %81 = fcmp contract ogt float %76, %70\l  br i1 %81, label %82, label %83\l|{<s0>T|<s1>F}}"];
	Node0x4df1390:s0 -> Node0x4df1710;
	Node0x4df1390:s1 -> Node0x4df1030;
	Node0x4df1710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%82:\l82:                                               \l  store float %76, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %83\l}"];
	Node0x4df1710 -> Node0x4df1030;
	Node0x4df1030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%83:\l83:                                               \l  %84 = phi float [ %76, %82 ], [ %70, %79 ], [ %70, %69 ]\l  %85 = phi float [ %80, %82 ], [ %80, %79 ], [ %71, %69 ]\l  %86 = add nsw i32 %72, %3\l  br i1 %29, label %87, label %97\l|{<s0>T|<s1>F}}"];
	Node0x4df1030:s0 -> Node0x4df1b40;
	Node0x4df1030:s1 -> Node0x4df1b90;
	Node0x4df1b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%87:\l87:                                               \l  %88 = sext i32 %86 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %1, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %91 = fcmp contract olt float %90, %85\l  br i1 %91, label %92, label %93\l|{<s0>T|<s1>F}}"];
	Node0x4df1b40:s0 -> Node0x4df1ea0;
	Node0x4df1b40:s1 -> Node0x4df1ef0;
	Node0x4df1ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%92:\l92:                                               \l  store float %90, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %93\l}"];
	Node0x4df1ea0 -> Node0x4df1ef0;
	Node0x4df1ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%93:\l93:                                               \l  %94 = phi float [ %90, %92 ], [ %85, %87 ]\l  %95 = fcmp contract ogt float %90, %84\l  br i1 %95, label %96, label %97\l|{<s0>T|<s1>F}}"];
	Node0x4df1ef0:s0 -> Node0x4df2270;
	Node0x4df1ef0:s1 -> Node0x4df1b90;
	Node0x4df2270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%96:\l96:                                               \l  store float %90, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %97\l}"];
	Node0x4df2270 -> Node0x4df1b90;
	Node0x4df1b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%97:\l97:                                               \l  %98 = phi float [ %90, %96 ], [ %84, %93 ], [ %84, %83 ]\l  %99 = phi float [ %94, %96 ], [ %94, %93 ], [ %85, %83 ]\l  %100 = add nsw i32 %86, %3\l  br i1 %29, label %101, label %111\l|{<s0>T|<s1>F}}"];
	Node0x4df1b90:s0 -> Node0x4df26a0;
	Node0x4df1b90:s1 -> Node0x4df26f0;
	Node0x4df26a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%101:\l101:                                              \l  %102 = sext i32 %100 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %1, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %105 = fcmp contract olt float %104, %99\l  br i1 %105, label %106, label %107\l|{<s0>T|<s1>F}}"];
	Node0x4df26a0:s0 -> Node0x4df2a00;
	Node0x4df26a0:s1 -> Node0x4df2a50;
	Node0x4df2a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%106:\l106:                                              \l  store float %104, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %107\l}"];
	Node0x4df2a00 -> Node0x4df2a50;
	Node0x4df2a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%107:\l107:                                              \l  %108 = phi float [ %104, %106 ], [ %99, %101 ]\l  %109 = fcmp contract ogt float %104, %98\l  br i1 %109, label %110, label %111\l|{<s0>T|<s1>F}}"];
	Node0x4df2a50:s0 -> Node0x4df2dd0;
	Node0x4df2a50:s1 -> Node0x4df26f0;
	Node0x4df2dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%110:\l110:                                              \l  store float %104, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %111\l}"];
	Node0x4df2dd0 -> Node0x4df26f0;
	Node0x4df26f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%111:\l111:                                              \l  %112 = phi float [ %104, %110 ], [ %98, %107 ], [ %98, %97 ]\l  %113 = phi float [ %108, %110 ], [ %108, %107 ], [ %99, %97 ]\l  %114 = add nsw i32 %100, %3\l  br i1 %29, label %115, label %125\l|{<s0>T|<s1>F}}"];
	Node0x4df26f0:s0 -> Node0x4df3200;
	Node0x4df26f0:s1 -> Node0x4df3250;
	Node0x4df3200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%115:\l115:                                              \l  %116 = sext i32 %114 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %1, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %119 = fcmp contract olt float %118, %113\l  br i1 %119, label %120, label %121\l|{<s0>T|<s1>F}}"];
	Node0x4df3200:s0 -> Node0x4df3560;
	Node0x4df3200:s1 -> Node0x4df35b0;
	Node0x4df3560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%120:\l120:                                              \l  store float %118, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %121\l}"];
	Node0x4df3560 -> Node0x4df35b0;
	Node0x4df35b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%121:\l121:                                              \l  %122 = phi float [ %118, %120 ], [ %113, %115 ]\l  %123 = fcmp contract ogt float %118, %112\l  br i1 %123, label %124, label %125\l|{<s0>T|<s1>F}}"];
	Node0x4df35b0:s0 -> Node0x4df3930;
	Node0x4df35b0:s1 -> Node0x4df3250;
	Node0x4df3930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%124:\l124:                                              \l  store float %118, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %125\l}"];
	Node0x4df3930 -> Node0x4df3250;
	Node0x4df3250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%125:\l125:                                              \l  %126 = phi float [ %118, %124 ], [ %112, %121 ], [ %112, %111 ]\l  %127 = phi float [ %122, %124 ], [ %122, %121 ], [ %113, %111 ]\l  %128 = add nsw i32 %114, %3\l  br i1 %29, label %129, label %139\l|{<s0>T|<s1>F}}"];
	Node0x4df3250:s0 -> Node0x4df0760;
	Node0x4df3250:s1 -> Node0x4df07b0;
	Node0x4df0760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%129:\l129:                                              \l  %130 = sext i32 %128 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %1, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %133 = fcmp contract olt float %132, %127\l  br i1 %133, label %134, label %135\l|{<s0>T|<s1>F}}"];
	Node0x4df0760:s0 -> Node0x4df0ac0;
	Node0x4df0760:s1 -> Node0x4df0b10;
	Node0x4df0ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%134:\l134:                                              \l  store float %132, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %135\l}"];
	Node0x4df0ac0 -> Node0x4df0b10;
	Node0x4df0b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%135:\l135:                                              \l  %136 = phi float [ %132, %134 ], [ %127, %129 ]\l  %137 = fcmp contract ogt float %132, %126\l  br i1 %137, label %138, label %139\l|{<s0>T|<s1>F}}"];
	Node0x4df0b10:s0 -> Node0x4df48a0;
	Node0x4df0b10:s1 -> Node0x4df07b0;
	Node0x4df48a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%138:\l138:                                              \l  store float %132, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %139\l}"];
	Node0x4df48a0 -> Node0x4df07b0;
	Node0x4df07b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%139:\l139:                                              \l  %140 = phi float [ %132, %138 ], [ %126, %135 ], [ %126, %125 ]\l  %141 = phi float [ %136, %138 ], [ %136, %135 ], [ %127, %125 ]\l  %142 = add nsw i32 %128, %3\l  br i1 %29, label %143, label %153\l|{<s0>T|<s1>F}}"];
	Node0x4df07b0:s0 -> Node0x4df4cd0;
	Node0x4df07b0:s1 -> Node0x4df4d20;
	Node0x4df4cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%143:\l143:                                              \l  %144 = sext i32 %142 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %1, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %147 = fcmp contract olt float %146, %141\l  br i1 %147, label %148, label %149\l|{<s0>T|<s1>F}}"];
	Node0x4df4cd0:s0 -> Node0x4df5030;
	Node0x4df4cd0:s1 -> Node0x4df5080;
	Node0x4df5030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%148:\l148:                                              \l  store float %146, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %149\l}"];
	Node0x4df5030 -> Node0x4df5080;
	Node0x4df5080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%149:\l149:                                              \l  %150 = phi float [ %146, %148 ], [ %141, %143 ]\l  %151 = fcmp contract ogt float %146, %140\l  br i1 %151, label %152, label %153\l|{<s0>T|<s1>F}}"];
	Node0x4df5080:s0 -> Node0x4df5400;
	Node0x4df5080:s1 -> Node0x4df4d20;
	Node0x4df5400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%152:\l152:                                              \l  store float %146, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %153\l}"];
	Node0x4df5400 -> Node0x4df4d20;
	Node0x4df4d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%153:\l153:                                              \l  %154 = phi float [ %146, %152 ], [ %140, %149 ], [ %140, %139 ]\l  %155 = phi float [ %150, %152 ], [ %150, %149 ], [ %141, %139 ]\l  %156 = add nsw i32 %142, %3\l  br i1 %29, label %157, label %167\l|{<s0>T|<s1>F}}"];
	Node0x4df4d20:s0 -> Node0x4df5830;
	Node0x4df4d20:s1 -> Node0x4df5880;
	Node0x4df5830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%157:\l157:                                              \l  %158 = sext i32 %156 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %1, i64 %158\l  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %161 = fcmp contract olt float %160, %155\l  br i1 %161, label %162, label %163\l|{<s0>T|<s1>F}}"];
	Node0x4df5830:s0 -> Node0x4df5b90;
	Node0x4df5830:s1 -> Node0x4df5be0;
	Node0x4df5b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%162:\l162:                                              \l  store float %160, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %163\l}"];
	Node0x4df5b90 -> Node0x4df5be0;
	Node0x4df5be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%163:\l163:                                              \l  %164 = phi float [ %160, %162 ], [ %155, %157 ]\l  %165 = fcmp contract ogt float %160, %154\l  br i1 %165, label %166, label %167\l|{<s0>T|<s1>F}}"];
	Node0x4df5be0:s0 -> Node0x4df5f60;
	Node0x4df5be0:s1 -> Node0x4df5880;
	Node0x4df5f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%166:\l166:                                              \l  store float %160, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %167\l}"];
	Node0x4df5f60 -> Node0x4df5880;
	Node0x4df5880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%167:\l167:                                              \l  %168 = phi float [ %160, %166 ], [ %154, %163 ], [ %154, %153 ]\l  %169 = phi float [ %164, %166 ], [ %164, %163 ], [ %155, %153 ]\l  %170 = add nsw i32 %156, %3\l  br i1 %29, label %171, label %181\l|{<s0>T|<s1>F}}"];
	Node0x4df5880:s0 -> Node0x4df6390;
	Node0x4df5880:s1 -> Node0x4df63e0;
	Node0x4df6390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%171:\l171:                                              \l  %172 = sext i32 %170 to i64\l  %173 = getelementptr inbounds float, float addrspace(1)* %1, i64 %172\l  %174 = load float, float addrspace(1)* %173, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %175 = fcmp contract olt float %174, %169\l  br i1 %175, label %176, label %177\l|{<s0>T|<s1>F}}"];
	Node0x4df6390:s0 -> Node0x4df66f0;
	Node0x4df6390:s1 -> Node0x4df6740;
	Node0x4df66f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%176:\l176:                                              \l  store float %174, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %177\l}"];
	Node0x4df66f0 -> Node0x4df6740;
	Node0x4df6740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%177:\l177:                                              \l  %178 = phi float [ %174, %176 ], [ %169, %171 ]\l  %179 = fcmp contract ogt float %174, %168\l  br i1 %179, label %180, label %181\l|{<s0>T|<s1>F}}"];
	Node0x4df6740:s0 -> Node0x4df6ac0;
	Node0x4df6740:s1 -> Node0x4df63e0;
	Node0x4df6ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%180:\l180:                                              \l  store float %174, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %181\l}"];
	Node0x4df6ac0 -> Node0x4df63e0;
	Node0x4df63e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%181:\l181:                                              \l  %182 = phi float [ %174, %180 ], [ %168, %177 ], [ %168, %167 ]\l  %183 = phi float [ %178, %180 ], [ %178, %177 ], [ %169, %167 ]\l  %184 = add nsw i32 %170, %3\l  br i1 %29, label %185, label %195\l|{<s0>T|<s1>F}}"];
	Node0x4df63e0:s0 -> Node0x4df6ef0;
	Node0x4df63e0:s1 -> Node0x4df6f40;
	Node0x4df6ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%185:\l185:                                              \l  %186 = sext i32 %184 to i64\l  %187 = getelementptr inbounds float, float addrspace(1)* %1, i64 %186\l  %188 = load float, float addrspace(1)* %187, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %189 = fcmp contract olt float %188, %183\l  br i1 %189, label %190, label %191\l|{<s0>T|<s1>F}}"];
	Node0x4df6ef0:s0 -> Node0x4df7250;
	Node0x4df6ef0:s1 -> Node0x4df72a0;
	Node0x4df7250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%190:\l190:                                              \l  store float %188, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %191\l}"];
	Node0x4df7250 -> Node0x4df72a0;
	Node0x4df72a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%191:\l191:                                              \l  %192 = phi float [ %188, %190 ], [ %183, %185 ]\l  %193 = fcmp contract ogt float %188, %182\l  br i1 %193, label %194, label %195\l|{<s0>T|<s1>F}}"];
	Node0x4df72a0:s0 -> Node0x4df7620;
	Node0x4df72a0:s1 -> Node0x4df6f40;
	Node0x4df7620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%194:\l194:                                              \l  store float %188, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %195\l}"];
	Node0x4df7620 -> Node0x4df6f40;
	Node0x4df6f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%195:\l195:                                              \l  %196 = phi float [ %188, %194 ], [ %182, %191 ], [ %182, %181 ]\l  %197 = phi float [ %192, %194 ], [ %192, %191 ], [ %183, %181 ]\l  %198 = add nsw i32 %184, %3\l  br i1 %29, label %199, label %209\l|{<s0>T|<s1>F}}"];
	Node0x4df6f40:s0 -> Node0x4df7a50;
	Node0x4df6f40:s1 -> Node0x4df7aa0;
	Node0x4df7a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%199:\l199:                                              \l  %200 = sext i32 %198 to i64\l  %201 = getelementptr inbounds float, float addrspace(1)* %1, i64 %200\l  %202 = load float, float addrspace(1)* %201, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %203 = fcmp contract olt float %202, %197\l  br i1 %203, label %204, label %205\l|{<s0>T|<s1>F}}"];
	Node0x4df7a50:s0 -> Node0x4df7db0;
	Node0x4df7a50:s1 -> Node0x4df7e00;
	Node0x4df7db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%204:\l204:                                              \l  store float %202, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %205\l}"];
	Node0x4df7db0 -> Node0x4df7e00;
	Node0x4df7e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%205:\l205:                                              \l  %206 = phi float [ %202, %204 ], [ %197, %199 ]\l  %207 = fcmp contract ogt float %202, %196\l  br i1 %207, label %208, label %209\l|{<s0>T|<s1>F}}"];
	Node0x4df7e00:s0 -> Node0x4df8180;
	Node0x4df7e00:s1 -> Node0x4df7aa0;
	Node0x4df8180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%208:\l208:                                              \l  store float %202, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %209\l}"];
	Node0x4df8180 -> Node0x4df7aa0;
	Node0x4df7aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%209:\l209:                                              \l  %210 = phi float [ %202, %208 ], [ %196, %205 ], [ %196, %195 ]\l  %211 = phi float [ %206, %208 ], [ %206, %205 ], [ %197, %195 ]\l  %212 = add nsw i32 %198, %3\l  br i1 %29, label %213, label %223\l|{<s0>T|<s1>F}}"];
	Node0x4df7aa0:s0 -> Node0x4df85b0;
	Node0x4df7aa0:s1 -> Node0x4df8600;
	Node0x4df85b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%213:\l213:                                              \l  %214 = sext i32 %212 to i64\l  %215 = getelementptr inbounds float, float addrspace(1)* %1, i64 %214\l  %216 = load float, float addrspace(1)* %215, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %217 = fcmp contract olt float %216, %211\l  br i1 %217, label %218, label %219\l|{<s0>T|<s1>F}}"];
	Node0x4df85b0:s0 -> Node0x4df8910;
	Node0x4df85b0:s1 -> Node0x4df8960;
	Node0x4df8910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%218:\l218:                                              \l  store float %216, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %219\l}"];
	Node0x4df8910 -> Node0x4df8960;
	Node0x4df8960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%219:\l219:                                              \l  %220 = phi float [ %216, %218 ], [ %211, %213 ]\l  %221 = fcmp contract ogt float %216, %210\l  br i1 %221, label %222, label %223\l|{<s0>T|<s1>F}}"];
	Node0x4df8960:s0 -> Node0x4df8ce0;
	Node0x4df8960:s1 -> Node0x4df8600;
	Node0x4df8ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%222:\l222:                                              \l  store float %216, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %223\l}"];
	Node0x4df8ce0 -> Node0x4df8600;
	Node0x4df8600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%223:\l223:                                              \l  %224 = phi float [ %216, %222 ], [ %210, %219 ], [ %210, %209 ]\l  %225 = phi float [ %220, %222 ], [ %220, %219 ], [ %211, %209 ]\l  br i1 %29, label %226, label %236\l|{<s0>T|<s1>F}}"];
	Node0x4df8600:s0 -> Node0x4df9080;
	Node0x4df8600:s1 -> Node0x4df90d0;
	Node0x4df9080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%226:\l226:                                              \l  %227 = add nsw i32 %212, %3\l  %228 = sext i32 %227 to i64\l  %229 = getelementptr inbounds float, float addrspace(1)* %1, i64 %228\l  %230 = load float, float addrspace(1)* %229, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %231 = fcmp contract olt float %230, %225\l  br i1 %231, label %232, label %233\l|{<s0>T|<s1>F}}"];
	Node0x4df9080:s0 -> Node0x4df9470;
	Node0x4df9080:s1 -> Node0x4df94c0;
	Node0x4df9470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%232:\l232:                                              \l  store float %230, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %233\l}"];
	Node0x4df9470 -> Node0x4df94c0;
	Node0x4df94c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%233:\l233:                                              \l  %234 = fcmp contract ogt float %230, %224\l  br i1 %234, label %235, label %236\l|{<s0>T|<s1>F}}"];
	Node0x4df94c0:s0 -> Node0x4deb420;
	Node0x4df94c0:s1 -> Node0x4df90d0;
	Node0x4deb420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%235:\l235:                                              \l  store float %230, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %236\l}"];
	Node0x4deb420 -> Node0x4df90d0;
	Node0x4df90d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%236:\l236:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %237 = icmp ugt i16 %15, 1\l  br i1 %237, label %240, label %238\l|{<s0>T|<s1>F}}"];
	Node0x4df90d0:s0 -> Node0x4deb940;
	Node0x4df90d0:s1 -> Node0x4deb990;
	Node0x4deb990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%238:\l238:                                              \l  %239 = icmp eq i32 %6, 0\l  br i1 %239, label %263, label %279\l|{<s0>T|<s1>F}}"];
	Node0x4deb990:s0 -> Node0x4debb20;
	Node0x4deb990:s1 -> Node0x4debb70;
	Node0x4deb940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%240:\l240:                                              \l  %241 = phi i32 [ %261, %258 ], [ 1, %236 ]\l  %242 = phi i32 [ %260, %258 ], [ 1, %236 ]\l  %243 = and i32 %242, %6\l  %244 = icmp eq i32 %243, 0\l  br i1 %244, label %245, label %258\l|{<s0>T|<s1>F}}"];
	Node0x4deb940:s0 -> Node0x4dfae00;
	Node0x4deb940:s1 -> Node0x4debce0;
	Node0x4dfae00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%245:\l245:                                              \l  %246 = add nsw i32 %241, %6\l  %247 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ10FindMinMaxPfS_iiiE7minvals, i32 0, i32 %246\l  %248 = load float, float addrspace(3)* %247, align 4, !tbaa !16\l  %249 = load float, float addrspace(3)* %27, align 4, !tbaa !16\l  %250 = fcmp contract olt float %248, %249\l  br i1 %250, label %251, label %252\l|{<s0>T|<s1>F}}"];
	Node0x4dfae00:s0 -> Node0x4dfafd0;
	Node0x4dfae00:s1 -> Node0x4dee330;
	Node0x4dfafd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%251:\l251:                                              \l  store float %248, float addrspace(3)* %27, align 4, !tbaa !16\l  br label %252\l}"];
	Node0x4dfafd0 -> Node0x4dee330;
	Node0x4dee330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%252:\l252:                                              \l  %253 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ10FindMinMaxPfS_iiiE7maxvals, i32 0, i32 %246\l  %254 = load float, float addrspace(3)* %253, align 4, !tbaa !16\l  %255 = load float, float addrspace(3)* %28, align 4, !tbaa !16\l  %256 = fcmp contract ogt float %254, %255\l  br i1 %256, label %257, label %258\l|{<s0>T|<s1>F}}"];
	Node0x4dee330:s0 -> Node0x4dee570;
	Node0x4dee330:s1 -> Node0x4debce0;
	Node0x4dee570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%257:\l257:                                              \l  store float %254, float addrspace(3)* %28, align 4, !tbaa !16\l  br label %258\l}"];
	Node0x4dee570 -> Node0x4debce0;
	Node0x4debce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%258:\l258:                                              \l  %259 = shl nsw i32 %242, 1\l  %260 = add nuw nsw i32 %259, 1\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %261 = shl i32 %241, 1\l  %262 = icmp slt i32 %261, %16\l  br i1 %262, label %240, label %238, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4debce0:s0 -> Node0x4deb940;
	Node0x4debce0:s1 -> Node0x4deb990;
	Node0x4debb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%263:\l263:                                              \l  %264 = udiv i32 %19, %16\l  %265 = mul i32 %264, %16\l  %266 = icmp ugt i32 %19, %265\l  %267 = zext i1 %266 to i32\l  %268 = add i32 %264, %267\l  %269 = mul i32 %268, %10\l  %270 = add i32 %269, %7\l  %271 = shl i32 %270, 1\l  %272 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)* @_ZZ10FindMinMaxPfS_iiiE7minvals, i32 0,\l... i32 0), align 16, !tbaa !16\l  %273 = sext i32 %271 to i64\l  %274 = getelementptr inbounds float, float addrspace(1)* %0, i64 %273\l  store float %272, float addrspace(1)* %274, align 4, !tbaa !16\l  %275 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)* @_ZZ10FindMinMaxPfS_iiiE7maxvals, i32 0,\l... i32 0), align 16, !tbaa !16\l  %276 = add nuw nsw i32 %271, 1\l  %277 = sext i32 %276 to i64\l  %278 = getelementptr inbounds float, float addrspace(1)* %0, i64 %277\l  store float %275, float addrspace(1)* %278, align 4, !tbaa !16\l  br label %279\l}"];
	Node0x4debb20 -> Node0x4debb70;
	Node0x4debb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%279:\l279:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
