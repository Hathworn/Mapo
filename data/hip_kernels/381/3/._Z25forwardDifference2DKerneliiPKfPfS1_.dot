digraph "CFG for '_Z25forwardDifference2DKerneliiPKfPfS1_' function" {
	label="CFG for '_Z25forwardDifference2DKerneliiPKfPfS1_' function";

	Node0x5f77dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 2, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 16\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 8, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %17 = add nuw nsw i32 %16, 1\l  %18 = add i32 %17, %15\l  %19 = add nsw i32 %0, -1\l  %20 = icmp ult i32 %18, %19\l  br i1 %20, label %21, label %42\l|{<s0>T|<s1>F}}"];
	Node0x5f77dd0:s0 -> Node0x5f7a190;
	Node0x5f77dd0:s1 -> Node0x5f7a220;
	Node0x5f7a190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%21:\l21:                                               \l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %23 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !4, !invariant.load !5\l  %26 = zext i16 %25 to i32\l  %27 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %28 = bitcast i8 addrspace(4)* %27 to i32 addrspace(4)*\l  %29 = load i32, i32 addrspace(4)* %28, align 4, !tbaa !16\l  %30 = mul i32 %22, %26\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %32 = add nuw nsw i32 %31, 1\l  %33 = add i32 %32, %30\l  %34 = add nsw i32 %1, -1\l  %35 = icmp ult i32 %33, %34\l  %36 = udiv i32 %14, %11\l  %37 = mul i32 %36, %11\l  %38 = icmp ugt i32 %14, %37\l  %39 = zext i1 %38 to i32\l  %40 = add i32 %36, %39\l  %41 = mul i32 %40, %11\l  br label %43\l}"];
	Node0x5f7a190 -> Node0x5f7c5e0;
	Node0x5f7a220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%42:\l42:                                               \l  ret void\l}"];
	Node0x5f7c5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%43:\l43:                                               \l  %44 = phi i32 [ %18, %21 ], [ %54, %53 ]\l  br i1 %35, label %45, label %53\l|{<s0>T|<s1>F}}"];
	Node0x5f7c5e0:s0 -> Node0x5f7c860;
	Node0x5f7c5e0:s1 -> Node0x5f7c760;
	Node0x5f7c860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%45:\l45:                                               \l  %46 = mul i32 %44, %1\l  %47 = udiv i32 %29, %26\l  %48 = mul i32 %47, %26\l  %49 = icmp ugt i32 %29, %48\l  %50 = zext i1 %49 to i32\l  %51 = add i32 %47, %50\l  %52 = mul i32 %51, %26\l  br label %56\l}"];
	Node0x5f7c860 -> Node0x5f7cd70;
	Node0x5f7c760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%53:\l53:                                               \l  %54 = add i32 %41, %44\l  %55 = icmp ult i32 %54, %19\l  br i1 %55, label %43, label %42, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5f7c760:s0 -> Node0x5f7c5e0;
	Node0x5f7c760:s1 -> Node0x5f7a220;
	Node0x5f7cd70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  %57 = phi i32 [ %33, %45 ], [ %75, %56 ]\l  %58 = add i32 %57, %46\l  %59 = add i32 %58, 1\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %2, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !19\l  %63 = zext i32 %58 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %2, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !19\l  %66 = fsub contract float %62, %65\l  %67 = getelementptr inbounds float, float addrspace(1)* %3, i64 %63\l  store float %66, float addrspace(1)* %67, align 4, !tbaa !19\l  %68 = add i32 %58, %1\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %2, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !19\l  %72 = load float, float addrspace(1)* %64, align 4, !tbaa !19\l  %73 = fsub contract float %71, %72\l  %74 = getelementptr inbounds float, float addrspace(1)* %4, i64 %63\l  store float %73, float addrspace(1)* %74, align 4, !tbaa !19\l  %75 = add i32 %52, %57\l  %76 = icmp ult i32 %75, %34\l  br i1 %76, label %56, label %53, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5f7cd70:s0 -> Node0x5f7cd70;
	Node0x5f7cd70:s1 -> Node0x5f7c760;
}
