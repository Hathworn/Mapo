digraph "CFG for '_Z16reduce_max_finalPdS_Piji' function" {
	label="CFG for '_Z16reduce_max_finalPdS_Piji' function";

	Node0x46ca080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = shl nsw i32 %4, 1\l  %9 = mul i32 %8, %7\l  %10 = add i32 %9, %6\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !5\l  %15 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !14, !invariant.load\l... !15\l  %18 = zext i16 %17 to i32\l  %19 = udiv i32 %14, %18\l  %20 = mul i32 %19, %18\l  %21 = icmp ugt i32 %14, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %8\l  %25 = icmp ult i32 %10, %3\l  br i1 %25, label %26, label %55\l|{<s0>T|<s1>F}}"];
	Node0x46ca080:s0 -> Node0x46cc700;
	Node0x46ca080:s1 -> Node0x46cc790;
	Node0x46cc700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i32 [ %53, %50 ], [ %10, %5 ]\l  %28 = phi double [ %52, %50 ], [ 0.000000e+00, %5 ]\l  %29 = phi i32 [ %51, %50 ], [ undef, %5 ]\l  %30 = zext i32 %27 to i64\l  %31 = getelementptr inbounds double, double addrspace(1)* %0, i64 %30\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !16,\l... !amdgpu.noclobber !15\l  %33 = fcmp contract olt double %28, %32\l  br i1 %33, label %34, label %37\l|{<s0>T|<s1>F}}"];
	Node0x46cc700:s0 -> Node0x46cbf10;
	Node0x46cc700:s1 -> Node0x46ce200;
	Node0x46cbf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %30\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !20, !amdgpu.noclobber\l... !15\l  br label %37\l}"];
	Node0x46cbf10 -> Node0x46ce200;
	Node0x46ce200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi i32 [ %36, %34 ], [ %29, %26 ]\l  %39 = phi double [ %32, %34 ], [ %28, %26 ]\l  %40 = add i32 %27, %4\l  %41 = icmp ult i32 %40, %3\l  br i1 %41, label %42, label %50\l|{<s0>T|<s1>F}}"];
	Node0x46ce200:s0 -> Node0x46ce880;
	Node0x46ce200:s1 -> Node0x46cc8d0;
	Node0x46ce880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%42:\l42:                                               \l  %43 = zext i32 %40 to i64\l  %44 = getelementptr inbounds double, double addrspace(1)* %0, i64 %43\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !16,\l... !amdgpu.noclobber !15\l  %46 = fcmp contract olt double %39, %45\l  br i1 %46, label %47, label %50\l|{<s0>T|<s1>F}}"];
	Node0x46ce880:s0 -> Node0x46cf1a0;
	Node0x46ce880:s1 -> Node0x46cc8d0;
	Node0x46cf1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%47:\l47:                                               \l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %43\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !20, !amdgpu.noclobber\l... !15\l  br label %50\l}"];
	Node0x46cf1a0 -> Node0x46cc8d0;
	Node0x46cc8d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i32 [ %49, %47 ], [ %38, %42 ], [ %38, %37 ]\l  %52 = phi double [ %45, %47 ], [ %39, %42 ], [ %39, %37 ]\l  %53 = add i32 %27, %24\l  %54 = icmp ult i32 %53, %3\l  br i1 %54, label %26, label %55, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x46cc8d0:s0 -> Node0x46cc700;
	Node0x46cc8d0:s1 -> Node0x46cc790;
	Node0x46cc790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%55:\l55:                                               \l  %56 = phi i32 [ undef, %5 ], [ %51, %50 ]\l  %57 = phi double [ 0.000000e+00, %5 ], [ %52, %50 ]\l  %58 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE5sdata, i32 0, i32 %6\l  store double %57, double addrspace(3)* %58, align 8, !tbaa !16\l  %59 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE7idxData, i32 0, i32 %6\l  store i32 %56, i32 addrspace(3)* %59, align 4, !tbaa !20\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %60 = icmp sgt i32 %4, 511\l  br i1 %60, label %61, label %73\l|{<s0>T|<s1>F}}"];
	Node0x46cc790:s0 -> Node0x46d0590;
	Node0x46cc790:s1 -> Node0x46d05e0;
	Node0x46d0590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%61:\l61:                                               \l  %62 = icmp ult i32 %6, 256\l  br i1 %62, label %63, label %71\l|{<s0>T|<s1>F}}"];
	Node0x46d0590:s0 -> Node0x46d07a0;
	Node0x46d0590:s1 -> Node0x46d07f0;
	Node0x46d07a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%63:\l63:                                               \l  %64 = add nuw nsw i32 %6, 256\l  %65 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE5sdata, i32 0, i32 %64\l  %66 = load double, double addrspace(3)* %65, align 8, !tbaa !16\l  %67 = fcmp contract olt double %57, %66\l  br i1 %67, label %68, label %71\l|{<s0>T|<s1>F}}"];
	Node0x46d07a0:s0 -> Node0x46ce000;
	Node0x46d07a0:s1 -> Node0x46d07f0;
	Node0x46ce000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%68:\l68:                                               \l  store double %66, double addrspace(3)* %58, align 8, !tbaa !16\l  %69 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE7idxData, i32 0, i32 %64\l  %70 = load i32, i32 addrspace(3)* %69, align 4, !tbaa !20\l  store i32 %70, i32 addrspace(3)* %59, align 4, !tbaa !20\l  br label %71\l}"];
	Node0x46ce000 -> Node0x46d07f0;
	Node0x46d07f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%71:\l71:                                               \l  %72 = phi double [ %66, %68 ], [ %57, %63 ], [ %57, %61 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %73\l}"];
	Node0x46d07f0 -> Node0x46d05e0;
	Node0x46d05e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%73:\l73:                                               \l  %74 = phi double [ %72, %71 ], [ %57, %55 ]\l  %75 = icmp sgt i32 %4, 255\l  br i1 %75, label %76, label %88\l|{<s0>T|<s1>F}}"];
	Node0x46d05e0:s0 -> Node0x46d15e0;
	Node0x46d05e0:s1 -> Node0x46d1630;
	Node0x46d15e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%76:\l76:                                               \l  %77 = icmp ult i32 %6, 128\l  br i1 %77, label %78, label %86\l|{<s0>T|<s1>F}}"];
	Node0x46d15e0:s0 -> Node0x46d17c0;
	Node0x46d15e0:s1 -> Node0x46d1810;
	Node0x46d17c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%78:\l78:                                               \l  %79 = add nuw nsw i32 %6, 128\l  %80 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE5sdata, i32 0, i32 %79\l  %81 = load double, double addrspace(3)* %80, align 8, !tbaa !16\l  %82 = fcmp contract olt double %74, %81\l  br i1 %82, label %83, label %86\l|{<s0>T|<s1>F}}"];
	Node0x46d17c0:s0 -> Node0x46d19a0;
	Node0x46d17c0:s1 -> Node0x46d1810;
	Node0x46d19a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%83:\l83:                                               \l  store double %81, double addrspace(3)* %58, align 8, !tbaa !16\l  %84 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE7idxData, i32 0, i32 %79\l  %85 = load i32, i32 addrspace(3)* %84, align 4, !tbaa !20\l  store i32 %85, i32 addrspace(3)* %59, align 4, !tbaa !20\l  br label %86\l}"];
	Node0x46d19a0 -> Node0x46d1810;
	Node0x46d1810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%86:\l86:                                               \l  %87 = phi double [ %81, %83 ], [ %74, %78 ], [ %74, %76 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %88\l}"];
	Node0x46d1810 -> Node0x46d1630;
	Node0x46d1630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%88:\l88:                                               \l  %89 = phi double [ %87, %86 ], [ %74, %73 ]\l  %90 = icmp sgt i32 %4, 127\l  br i1 %90, label %91, label %103\l|{<s0>T|<s1>F}}"];
	Node0x46d1630:s0 -> Node0x46d2340;
	Node0x46d1630:s1 -> Node0x46d2390;
	Node0x46d2340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%91:\l91:                                               \l  %92 = icmp ult i32 %6, 64\l  br i1 %92, label %93, label %101\l|{<s0>T|<s1>F}}"];
	Node0x46d2340:s0 -> Node0x46d2550;
	Node0x46d2340:s1 -> Node0x46d25a0;
	Node0x46d2550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%93:\l93:                                               \l  %94 = add nuw nsw i32 %6, 64\l  %95 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE5sdata, i32 0, i32 %94\l  %96 = load double, double addrspace(3)* %95, align 8, !tbaa !16\l  %97 = fcmp contract olt double %89, %96\l  br i1 %97, label %98, label %101\l|{<s0>T|<s1>F}}"];
	Node0x46d2550:s0 -> Node0x46d2730;
	Node0x46d2550:s1 -> Node0x46d25a0;
	Node0x46d2730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%98:\l98:                                               \l  store double %96, double addrspace(3)* %58, align 8, !tbaa !16\l  %99 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE7idxData, i32 0, i32 %94\l  %100 = load i32, i32 addrspace(3)* %99, align 4, !tbaa !20\l  store i32 %100, i32 addrspace(3)* %59, align 4, !tbaa !20\l  br label %101\l}"];
	Node0x46d2730 -> Node0x46d25a0;
	Node0x46d25a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%101:\l101:                                              \l  %102 = phi double [ %96, %98 ], [ %89, %93 ], [ %89, %91 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %103\l}"];
	Node0x46d25a0 -> Node0x46d2390;
	Node0x46d2390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%103:\l103:                                              \l  %104 = phi double [ %102, %101 ], [ %89, %88 ]\l  %105 = icmp ult i32 %6, 32\l  br i1 %105, label %106, label %202\l|{<s0>T|<s1>F}}"];
	Node0x46d2390:s0 -> Node0x46d30d0;
	Node0x46d2390:s1 -> Node0x46d3120;
	Node0x46d30d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%106:\l106:                                              \l  %107 = icmp sgt i32 %4, 63\l  br i1 %107, label %108, label %121\l|{<s0>T|<s1>F}}"];
	Node0x46d30d0:s0 -> Node0x46d32e0;
	Node0x46d30d0:s1 -> Node0x46d3330;
	Node0x46d32e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%108:\l108:                                              \l  %109 = add nuw nsw i32 %6, 32\l  %110 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE5sdata, i32 0, i32 %109\l  %111 = addrspacecast double addrspace(3)* %110 to double*\l  %112 = load volatile double, double* %111, align 8, !tbaa !16\l  %113 = fcmp contract olt double %104, %112\l  br i1 %113, label %114, label %121\l|{<s0>T|<s1>F}}"];
	Node0x46d32e0:s0 -> Node0x46d34c0;
	Node0x46d32e0:s1 -> Node0x46d3330;
	Node0x46d34c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%114:\l114:                                              \l  %115 = load volatile double, double* %111, align 8, !tbaa !16\l  %116 = addrspacecast double addrspace(3)* %58 to double*\l  store volatile double %115, double* %116, align 8, !tbaa !16\l  %117 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE7idxData, i32 0, i32 %109\l  %118 = addrspacecast i32 addrspace(3)* %117 to i32*\l  %119 = load volatile i32, i32* %118, align 4, !tbaa !20\l  %120 = addrspacecast i32 addrspace(3)* %59 to i32*\l  store volatile i32 %119, i32* %120, align 4, !tbaa !20\l  br label %121\l}"];
	Node0x46d34c0 -> Node0x46d3330;
	Node0x46d3330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%121:\l121:                                              \l  %122 = phi double [ %115, %114 ], [ %104, %108 ], [ %104, %106 ]\l  %123 = icmp sgt i32 %4, 31\l  br i1 %123, label %124, label %137\l|{<s0>T|<s1>F}}"];
	Node0x46d3330:s0 -> Node0x46d3e00;
	Node0x46d3330:s1 -> Node0x46d3e50;
	Node0x46d3e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%124:\l124:                                              \l  %125 = add nuw nsw i32 %6, 16\l  %126 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE5sdata, i32 0, i32 %125\l  %127 = addrspacecast double addrspace(3)* %126 to double*\l  %128 = load volatile double, double* %127, align 8, !tbaa !16\l  %129 = fcmp contract olt double %122, %128\l  br i1 %129, label %130, label %137\l|{<s0>T|<s1>F}}"];
	Node0x46d3e00:s0 -> Node0x46d4010;
	Node0x46d3e00:s1 -> Node0x46d3e50;
	Node0x46d4010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%130:\l130:                                              \l  %131 = load volatile double, double* %127, align 8, !tbaa !16\l  %132 = addrspacecast double addrspace(3)* %58 to double*\l  store volatile double %131, double* %132, align 8, !tbaa !16\l  %133 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE7idxData, i32 0, i32 %125\l  %134 = addrspacecast i32 addrspace(3)* %133 to i32*\l  %135 = load volatile i32, i32* %134, align 4, !tbaa !20\l  %136 = addrspacecast i32 addrspace(3)* %59 to i32*\l  store volatile i32 %135, i32* %136, align 4, !tbaa !20\l  br label %137\l}"];
	Node0x46d4010 -> Node0x46d3e50;
	Node0x46d3e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%137:\l137:                                              \l  %138 = phi double [ %131, %130 ], [ %122, %124 ], [ %122, %121 ]\l  %139 = icmp sgt i32 %4, 15\l  br i1 %139, label %140, label %153\l|{<s0>T|<s1>F}}"];
	Node0x46d3e50:s0 -> Node0x46d4d70;
	Node0x46d3e50:s1 -> Node0x46d4dc0;
	Node0x46d4d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%140:\l140:                                              \l  %141 = add nuw nsw i32 %6, 8\l  %142 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE5sdata, i32 0, i32 %141\l  %143 = addrspacecast double addrspace(3)* %142 to double*\l  %144 = load volatile double, double* %143, align 8, !tbaa !16\l  %145 = fcmp contract olt double %138, %144\l  br i1 %145, label %146, label %153\l|{<s0>T|<s1>F}}"];
	Node0x46d4d70:s0 -> Node0x46d4f80;
	Node0x46d4d70:s1 -> Node0x46d4dc0;
	Node0x46d4f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%146:\l146:                                              \l  %147 = load volatile double, double* %143, align 8, !tbaa !16\l  %148 = addrspacecast double addrspace(3)* %58 to double*\l  store volatile double %147, double* %148, align 8, !tbaa !16\l  %149 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE7idxData, i32 0, i32 %141\l  %150 = addrspacecast i32 addrspace(3)* %149 to i32*\l  %151 = load volatile i32, i32* %150, align 4, !tbaa !20\l  %152 = addrspacecast i32 addrspace(3)* %59 to i32*\l  store volatile i32 %151, i32* %152, align 4, !tbaa !20\l  br label %153\l}"];
	Node0x46d4f80 -> Node0x46d4dc0;
	Node0x46d4dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%153:\l153:                                              \l  %154 = phi double [ %147, %146 ], [ %138, %140 ], [ %138, %137 ]\l  %155 = icmp sgt i32 %4, 7\l  br i1 %155, label %156, label %169\l|{<s0>T|<s1>F}}"];
	Node0x46d4dc0:s0 -> Node0x46d58c0;
	Node0x46d4dc0:s1 -> Node0x46d5910;
	Node0x46d58c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%156:\l156:                                              \l  %157 = add nuw nsw i32 %6, 4\l  %158 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE5sdata, i32 0, i32 %157\l  %159 = addrspacecast double addrspace(3)* %158 to double*\l  %160 = load volatile double, double* %159, align 8, !tbaa !16\l  %161 = fcmp contract olt double %154, %160\l  br i1 %161, label %162, label %169\l|{<s0>T|<s1>F}}"];
	Node0x46d58c0:s0 -> Node0x46d5ad0;
	Node0x46d58c0:s1 -> Node0x46d5910;
	Node0x46d5ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%162:\l162:                                              \l  %163 = load volatile double, double* %159, align 8, !tbaa !16\l  %164 = addrspacecast double addrspace(3)* %58 to double*\l  store volatile double %163, double* %164, align 8, !tbaa !16\l  %165 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE7idxData, i32 0, i32 %157\l  %166 = addrspacecast i32 addrspace(3)* %165 to i32*\l  %167 = load volatile i32, i32* %166, align 4, !tbaa !20\l  %168 = addrspacecast i32 addrspace(3)* %59 to i32*\l  store volatile i32 %167, i32* %168, align 4, !tbaa !20\l  br label %169\l}"];
	Node0x46d5ad0 -> Node0x46d5910;
	Node0x46d5910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%169:\l169:                                              \l  %170 = phi double [ %163, %162 ], [ %154, %156 ], [ %154, %153 ]\l  %171 = icmp sgt i32 %4, 3\l  br i1 %171, label %172, label %185\l|{<s0>T|<s1>F}}"];
	Node0x46d5910:s0 -> Node0x46d6410;
	Node0x46d5910:s1 -> Node0x46d6460;
	Node0x46d6410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%172:\l172:                                              \l  %173 = add nuw nsw i32 %6, 2\l  %174 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE5sdata, i32 0, i32 %173\l  %175 = addrspacecast double addrspace(3)* %174 to double*\l  %176 = load volatile double, double* %175, align 8, !tbaa !16\l  %177 = fcmp contract olt double %170, %176\l  br i1 %177, label %178, label %185\l|{<s0>T|<s1>F}}"];
	Node0x46d6410:s0 -> Node0x46d6620;
	Node0x46d6410:s1 -> Node0x46d6460;
	Node0x46d6620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%178:\l178:                                              \l  %179 = load volatile double, double* %175, align 8, !tbaa !16\l  %180 = addrspacecast double addrspace(3)* %58 to double*\l  store volatile double %179, double* %180, align 8, !tbaa !16\l  %181 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE7idxData, i32 0, i32 %173\l  %182 = addrspacecast i32 addrspace(3)* %181 to i32*\l  %183 = load volatile i32, i32* %182, align 4, !tbaa !20\l  %184 = addrspacecast i32 addrspace(3)* %59 to i32*\l  store volatile i32 %183, i32* %184, align 4, !tbaa !20\l  br label %185\l}"];
	Node0x46d6620 -> Node0x46d6460;
	Node0x46d6460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%185:\l185:                                              \l  %186 = phi double [ %179, %178 ], [ %170, %172 ], [ %170, %169 ]\l  %187 = icmp sgt i32 %4, 1\l  br i1 %187, label %188, label %201\l|{<s0>T|<s1>F}}"];
	Node0x46d6460:s0 -> Node0x46d6f60;
	Node0x46d6460:s1 -> Node0x46d6fb0;
	Node0x46d6f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%188:\l188:                                              \l  %189 = add nuw nsw i32 %6, 1\l  %190 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE5sdata, i32 0, i32 %189\l  %191 = addrspacecast double addrspace(3)* %190 to double*\l  %192 = load volatile double, double* %191, align 8, !tbaa !16\l  %193 = fcmp contract olt double %186, %192\l  br i1 %193, label %194, label %201\l|{<s0>T|<s1>F}}"];
	Node0x46d6f60:s0 -> Node0x46d7140;
	Node0x46d6f60:s1 -> Node0x46d6fb0;
	Node0x46d7140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%194:\l194:                                              \l  %195 = load volatile double, double* %191, align 8, !tbaa !16\l  %196 = addrspacecast double addrspace(3)* %58 to double*\l  store volatile double %195, double* %196, align 8, !tbaa !16\l  %197 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ16reduce_max_finalPdS_PijiE7idxData, i32 0, i32 %189\l  %198 = addrspacecast i32 addrspace(3)* %197 to i32*\l  %199 = load volatile i32, i32* %198, align 4, !tbaa !20\l  %200 = addrspacecast i32 addrspace(3)* %59 to i32*\l  store volatile i32 %199, i32* %200, align 4, !tbaa !20\l  br label %201\l}"];
	Node0x46d7140 -> Node0x46d6fb0;
	Node0x46d6fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%201:\l201:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %202\l}"];
	Node0x46d6fb0 -> Node0x46d3120;
	Node0x46d3120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%202:\l202:                                              \l  %203 = icmp eq i32 %6, 0\l  br i1 %203, label %204, label %210\l|{<s0>T|<s1>F}}"];
	Node0x46d3120:s0 -> Node0x46cac00;
	Node0x46d3120:s1 -> Node0x46cac50;
	Node0x46cac00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%204:\l204:                                              \l  %205 = load double, double addrspace(3)* getelementptr inbounds ([256 x\l... double], [256 x double] addrspace(3)* @_ZZ16reduce_max_finalPdS_PijiE5sdata,\l... i32 0, i32 0), align 16, !tbaa !16\l  %206 = zext i32 %7 to i64\l  %207 = getelementptr inbounds double, double addrspace(1)* %1, i64 %206\l  store double %205, double addrspace(1)* %207, align 8, !tbaa !16\l  %208 = load i32, i32 addrspace(3)* getelementptr inbounds ([256 x i32], [256\l... x i32] addrspace(3)* @_ZZ16reduce_max_finalPdS_PijiE7idxData, i32 0, i32 0),\l... align 16, !tbaa !20\l  %209 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %206\l  store i32 %208, i32 addrspace(1)* %209, align 4, !tbaa !20\l  br label %210\l}"];
	Node0x46cac00 -> Node0x46cac50;
	Node0x46cac50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%210:\l210:                                              \l  ret void\l}"];
}
