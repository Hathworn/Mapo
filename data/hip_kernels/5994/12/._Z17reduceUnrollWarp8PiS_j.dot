digraph "CFG for '_Z17reduceUnrollWarp8PiS_j' function" {
	label="CFG for '_Z17reduceUnrollWarp8PiS_j' function";

	Node0x580e950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = shl i32 %10, 3\l  %14 = zext i32 %13 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %14\l  %16 = mul nuw nsw i32 %9, 7\l  %17 = add i32 %12, %16\l  %18 = icmp ult i32 %17, %2\l  br i1 %18, label %19, label %62\l|{<s0>T|<s1>F}}"];
	Node0x580e950:s0 -> Node0x5810b90;
	Node0x580e950:s1 -> Node0x5810c20;
	Node0x5810b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%19:\l19:                                               \l  %20 = sext i32 %12 to i64\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %20\l  %22 = load i32, i32 addrspace(1)* %21, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %23 = add i32 %12, %9\l  %24 = zext i32 %23 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %27 = shl nuw nsw i32 %9, 1\l  %28 = add i32 %12, %27\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %32 = mul nuw nsw i32 %9, 3\l  %33 = add i32 %12, %32\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %34\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %37 = shl nuw nsw i32 %9, 2\l  %38 = add i32 %12, %37\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %42 = mul nuw nsw i32 %9, 5\l  %43 = add i32 %12, %42\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %47 = mul nuw nsw i32 %9, 6\l  %48 = add i32 %12, %47\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %49\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %52 = zext i32 %17 to i64\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %52\l  %54 = load i32, i32 addrspace(1)* %53, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %55 = add nsw i32 %26, %22\l  %56 = add nsw i32 %55, %31\l  %57 = add nsw i32 %56, %36\l  %58 = add nsw i32 %57, %41\l  %59 = add nsw i32 %58, %46\l  %60 = add nsw i32 %59, %51\l  %61 = add nsw i32 %60, %54\l  store i32 %61, i32 addrspace(1)* %21, align 4, !tbaa !7\l  br label %62\l}"];
	Node0x5810b90 -> Node0x5810c20;
	Node0x5810c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%62:\l62:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %63 = icmp ult i32 %12, %2\l  br i1 %63, label %64, label %136\l|{<s0>T|<s1>F}}"];
	Node0x5810c20:s0 -> Node0x5813950;
	Node0x5810c20:s1 -> Node0x58139a0;
	Node0x5813950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%64:\l64:                                               \l  %65 = icmp ugt i16 %8, 65\l  br i1 %65, label %66, label %69\l|{<s0>T|<s1>F}}"];
	Node0x5813950:s0 -> Node0x5812330;
	Node0x5813950:s1 -> Node0x5812380;
	Node0x5812330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%66:\l66:                                               \l  %67 = zext i32 %11 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %67\l  br label %71\l}"];
	Node0x5812330 -> Node0x5814040;
	Node0x5812380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%69:\l69:                                               \l  %70 = icmp ult i32 %11, 32\l  br i1 %70, label %84, label %130\l|{<s0>T|<s1>F}}"];
	Node0x5812380:s0 -> Node0x5814190;
	Node0x5812380:s1 -> Node0x58141e0;
	Node0x5814040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = phi i32 [ %9, %66 ], [ %73, %82 ]\l  %73 = lshr i32 %72, 1\l  %74 = icmp ult i32 %11, %73\l  br i1 %74, label %75, label %82\l|{<s0>T|<s1>F}}"];
	Node0x5814040:s0 -> Node0x58145b0;
	Node0x5814040:s1 -> Node0x5814350;
	Node0x58145b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%75:\l75:                                               \l  %76 = add nuw nsw i32 %73, %11\l  %77 = zext i32 %76 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %77\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !7\l  %80 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !7\l  %81 = add nsw i32 %80, %79\l  store i32 %81, i32 addrspace(1)* %68, align 4, !tbaa !7\l  br label %82\l}"];
	Node0x58145b0 -> Node0x5814350;
	Node0x5814350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %83 = icmp ugt i32 %72, 131\l  br i1 %83, label %71, label %69, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5814350:s0 -> Node0x5814040;
	Node0x5814350:s1 -> Node0x5812380;
	Node0x5814190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%84:\l84:                                               \l  %85 = add nuw nsw i32 %11, 32\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %86\l  %88 = addrspacecast i32 addrspace(1)* %87 to i32*\l  %89 = load volatile i32, i32* %88, align 4, !tbaa !7\l  %90 = zext i32 %11 to i64\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %90\l  %92 = addrspacecast i32 addrspace(1)* %91 to i32*\l  %93 = load volatile i32, i32* %92, align 4, !tbaa !7\l  %94 = add nsw i32 %93, %89\l  store volatile i32 %94, i32* %92, align 4, !tbaa !7\l  %95 = add nuw nsw i32 %11, 16\l  %96 = zext i32 %95 to i64\l  %97 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %96\l  %98 = addrspacecast i32 addrspace(1)* %97 to i32*\l  %99 = load volatile i32, i32* %98, align 4, !tbaa !7\l  %100 = load volatile i32, i32* %92, align 4, !tbaa !7\l  %101 = add nsw i32 %100, %99\l  store volatile i32 %101, i32* %92, align 4, !tbaa !7\l  %102 = add nuw nsw i32 %11, 8\l  %103 = zext i32 %102 to i64\l  %104 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %103\l  %105 = addrspacecast i32 addrspace(1)* %104 to i32*\l  %106 = load volatile i32, i32* %105, align 4, !tbaa !7\l  %107 = load volatile i32, i32* %92, align 4, !tbaa !7\l  %108 = add nsw i32 %107, %106\l  store volatile i32 %108, i32* %92, align 4, !tbaa !7\l  %109 = add nuw nsw i32 %11, 4\l  %110 = zext i32 %109 to i64\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %110\l  %112 = addrspacecast i32 addrspace(1)* %111 to i32*\l  %113 = load volatile i32, i32* %112, align 4, !tbaa !7\l  %114 = load volatile i32, i32* %92, align 4, !tbaa !7\l  %115 = add nsw i32 %114, %113\l  store volatile i32 %115, i32* %92, align 4, !tbaa !7\l  %116 = add nuw nsw i32 %11, 2\l  %117 = zext i32 %116 to i64\l  %118 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %117\l  %119 = addrspacecast i32 addrspace(1)* %118 to i32*\l  %120 = load volatile i32, i32* %119, align 4, !tbaa !7\l  %121 = load volatile i32, i32* %92, align 4, !tbaa !7\l  %122 = add nsw i32 %121, %120\l  store volatile i32 %122, i32* %92, align 4, !tbaa !7\l  %123 = add nuw nsw i32 %11, 1\l  %124 = zext i32 %123 to i64\l  %125 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %124\l  %126 = addrspacecast i32 addrspace(1)* %125 to i32*\l  %127 = load volatile i32, i32* %126, align 4, !tbaa !7\l  %128 = load volatile i32, i32* %92, align 4, !tbaa !7\l  %129 = add nsw i32 %128, %127\l  store volatile i32 %129, i32* %92, align 4, !tbaa !7\l  br label %130\l}"];
	Node0x5814190 -> Node0x58141e0;
	Node0x58141e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%130:\l130:                                              \l  %131 = icmp eq i32 %11, 0\l  br i1 %131, label %132, label %136\l|{<s0>T|<s1>F}}"];
	Node0x58141e0:s0 -> Node0x5813d00;
	Node0x58141e0:s1 -> Node0x58139a0;
	Node0x5813d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%132:\l132:                                              \l  %133 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !7\l  %134 = zext i32 %4 to i64\l  %135 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %134\l  store i32 %133, i32 addrspace(1)* %135, align 4, !tbaa !7\l  br label %136\l}"];
	Node0x5813d00 -> Node0x58139a0;
	Node0x58139a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%136:\l136:                                              \l  ret void\l}"];
}
