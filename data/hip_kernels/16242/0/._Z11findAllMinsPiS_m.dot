digraph "CFG for '_Z11findAllMinsPiS_m' function" {
	label="CFG for '_Z11findAllMinsPiS_m' function";

	Node0x4570100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = sext i32 %12 to i64\l  %14 = trunc i64 %2 to i32\l  %15 = mul i32 %12, %14\l  %16 = icmp ult i64 %13, %2\l  br i1 %16, label %17, label %123\l|{<s0>T|<s1>F}}"];
	Node0x4570100:s0 -> Node0x4571a50;
	Node0x4570100:s1 -> Node0x4572280;
	Node0x4571a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%17:\l17:                                               \l  %18 = and i64 %2, 7\l  %19 = icmp ult i64 %2, 8\l  br i1 %19, label %22, label %20\l|{<s0>T|<s1>F}}"];
	Node0x4571a50:s0 -> Node0x4572510;
	Node0x4571a50:s1 -> Node0x4572560;
	Node0x4572560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%20:\l20:                                               \l  %21 = and i64 %2, -8\l  br label %45\l}"];
	Node0x4572560 -> Node0x4572760;
	Node0x4572510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%22:\l22:                                               \l  %23 = phi i32 [ undef, %17 ], [ %119, %45 ]\l  %24 = phi i32 [ 0, %17 ], [ %120, %45 ]\l  %25 = phi i32 [ 2147483647, %17 ], [ %119, %45 ]\l  %26 = icmp eq i64 %18, 0\l  br i1 %26, label %42, label %27\l|{<s0>T|<s1>F}}"];
	Node0x4572510:s0 -> Node0x4573010;
	Node0x4572510:s1 -> Node0x45730a0;
	Node0x45730a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %39, %27 ], [ %24, %22 ]\l  %29 = phi i32 [ %38, %27 ], [ %25, %22 ]\l  %30 = phi i64 [ %40, %27 ], [ 0, %22 ]\l  %31 = add nsw i32 %28, %15\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %35 = icmp slt i32 %34, %29\l  %36 = icmp sgt i32 %34, 0\l  %37 = and i1 %35, %36\l  %38 = select i1 %37, i32 %34, i32 %29\l  %39 = add nuw nsw i32 %28, 1\l  %40 = add i64 %30, 1\l  %41 = icmp eq i64 %40, %18\l  br i1 %41, label %42, label %27, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x45730a0:s0 -> Node0x4573010;
	Node0x45730a0:s1 -> Node0x45730a0;
	Node0x4573010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%42:\l42:                                               \l  %43 = phi i32 [ %23, %22 ], [ %38, %27 ]\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %13\l  store i32 %43, i32 addrspace(1)* %44, align 4, !tbaa !7\l  br label %123\l}"];
	Node0x4573010 -> Node0x4572280;
	Node0x4572760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%45:\l45:                                               \l  %46 = phi i32 [ 0, %20 ], [ %120, %45 ]\l  %47 = phi i32 [ 2147483647, %20 ], [ %119, %45 ]\l  %48 = phi i64 [ 0, %20 ], [ %121, %45 ]\l  %49 = add nsw i32 %46, %15\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %53 = icmp slt i32 %52, %47\l  %54 = icmp sgt i32 %52, 0\l  %55 = and i1 %53, %54\l  %56 = select i1 %55, i32 %52, i32 %47\l  %57 = or i32 %46, 1\l  %58 = add nsw i32 %57, %15\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %62 = icmp slt i32 %61, %56\l  %63 = icmp sgt i32 %61, 0\l  %64 = and i1 %62, %63\l  %65 = select i1 %64, i32 %61, i32 %56\l  %66 = or i32 %46, 2\l  %67 = add nsw i32 %66, %15\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %71 = icmp slt i32 %70, %65\l  %72 = icmp sgt i32 %70, 0\l  %73 = and i1 %71, %72\l  %74 = select i1 %73, i32 %70, i32 %65\l  %75 = or i32 %46, 3\l  %76 = add nsw i32 %75, %15\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %77\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %80 = icmp slt i32 %79, %74\l  %81 = icmp sgt i32 %79, 0\l  %82 = and i1 %80, %81\l  %83 = select i1 %82, i32 %79, i32 %74\l  %84 = or i32 %46, 4\l  %85 = add nsw i32 %84, %15\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %86\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %89 = icmp slt i32 %88, %83\l  %90 = icmp sgt i32 %88, 0\l  %91 = and i1 %89, %90\l  %92 = select i1 %91, i32 %88, i32 %83\l  %93 = or i32 %46, 5\l  %94 = add nsw i32 %93, %15\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %95\l  %97 = load i32, i32 addrspace(1)* %96, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %98 = icmp slt i32 %97, %92\l  %99 = icmp sgt i32 %97, 0\l  %100 = and i1 %98, %99\l  %101 = select i1 %100, i32 %97, i32 %92\l  %102 = or i32 %46, 6\l  %103 = add nsw i32 %102, %15\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %104\l  %106 = load i32, i32 addrspace(1)* %105, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %107 = icmp slt i32 %106, %101\l  %108 = icmp sgt i32 %106, 0\l  %109 = and i1 %107, %108\l  %110 = select i1 %109, i32 %106, i32 %101\l  %111 = or i32 %46, 7\l  %112 = add nsw i32 %111, %15\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %113\l  %115 = load i32, i32 addrspace(1)* %114, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %116 = icmp slt i32 %115, %110\l  %117 = icmp sgt i32 %115, 0\l  %118 = and i1 %116, %117\l  %119 = select i1 %118, i32 %115, i32 %110\l  %120 = add nuw nsw i32 %46, 8\l  %121 = add i64 %48, 8\l  %122 = icmp eq i64 %121, %21\l  br i1 %122, label %22, label %45, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4572760:s0 -> Node0x4572510;
	Node0x4572760:s1 -> Node0x4572760;
	Node0x4572280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%123:\l123:                                              \l  ret void\l}"];
}
