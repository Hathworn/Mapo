digraph "CFG for '_Z8kernel_APfii' function" {
	label="CFG for '_Z8kernel_APfii' function";

	Node0x642e8d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 2, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %13 = add i32 %11, %12\l  %14 = mul nsw i32 %13, %1\l  %15 = add nsw i32 %14, %4\l  %16 = sext i32 %15 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %0, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %19 = and i32 %4, 1\l  %20 = icmp eq i32 %19, 0\l  br i1 %20, label %57, label %21\l|{<s0>T|<s1>F}}"];
	Node0x642e8d0:s0 -> Node0x64315d0;
	Node0x642e8d0:s1 -> Node0x6431660;
	Node0x6431660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%21:\l21:                                               \l  %22 = tail call i1 @llvm.amdgcn.class.f32(float %18, i32 144)\l  %23 = select i1 %22, float 0x41F0000000000000, float 1.000000e+00\l  %24 = fmul float %18, %23\l  %25 = tail call float @llvm.log2.f32(float %24)\l  %26 = fmul float %25, 0x3FE62E42E0000000\l  %27 = tail call i1 @llvm.amdgcn.class.f32(float %25, i32 519)\l  %28 = fneg float %26\l  %29 = tail call float @llvm.fma.f32(float %25, float 0x3FE62E42E0000000,\l... float %28)\l  %30 = tail call float @llvm.fma.f32(float %25, float 0x3E6EFA39E0000000,\l... float %29)\l  %31 = fadd float %26, %30\l  %32 = select i1 %27, float %25, float %31\l  %33 = select i1 %22, float 0x40362E4300000000, float 0.000000e+00\l  %34 = fsub float %32, %33\l  %35 = fadd contract float %34, 1.000000e+00\l  %36 = fcmp olt float %35, 0x39F0000000000000\l  %37 = select i1 %36, float 0x41F0000000000000, float 1.000000e+00\l  %38 = fmul float %35, %37\l  %39 = tail call float @llvm.sqrt.f32(float %38)\l  %40 = bitcast float %39 to i32\l  %41 = add nsw i32 %40, -1\l  %42 = bitcast i32 %41 to float\l  %43 = add nsw i32 %40, 1\l  %44 = bitcast i32 %43 to float\l  %45 = tail call i1 @llvm.amdgcn.class.f32(float %38, i32 608)\l  %46 = select i1 %36, float 0x3EF0000000000000, float 1.000000e+00\l  %47 = fneg float %44\l  %48 = tail call float @llvm.fma.f32(float %47, float %39, float %38)\l  %49 = fcmp ogt float %48, 0.000000e+00\l  %50 = fneg float %42\l  %51 = tail call float @llvm.fma.f32(float %50, float %39, float %38)\l  %52 = fcmp ole float %51, 0.000000e+00\l  %53 = select i1 %52, float %42, float %39\l  %54 = select i1 %49, float %44, float %53\l  %55 = fmul float %46, %54\l  %56 = select i1 %45, float %38, float %55\l  br label %218\l}"];
	Node0x6431660 -> Node0x6434310;
	Node0x64315d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%57:\l57:                                               \l  %58 = tail call float @llvm.fabs.f32(float %18)\l  %59 = fcmp olt float %58, 1.310720e+05\l  br i1 %59, label %60, label %67\l|{<s0>T|<s1>F}}"];
	Node0x64315d0:s0 -> Node0x6434660;
	Node0x64315d0:s1 -> Node0x64346f0;
	Node0x6434660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%60:\l60:                                               \l  %61 = fmul float %58, 0x3FE45F3060000000\l  %62 = tail call float @llvm.rint.f32(float %61)\l  %63 = tail call float @llvm.fma.f32(float %62, float 0xBFF921FB40000000,\l... float %58)\l  %64 = tail call float @llvm.fma.f32(float %62, float 0xBE74442D00000000,\l... float %63)\l  %65 = tail call float @llvm.fma.f32(float %62, float 0xBCF8469880000000,\l... float %64)\l  %66 = fptosi float %62 to i32\l  br label %173\l}"];
	Node0x6434660 -> Node0x6435230;
	Node0x64346f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%67:\l67:                                               \l  %68 = bitcast float %58 to i32\l  %69 = lshr i32 %68, 23\l  %70 = and i32 %68, 8388607\l  %71 = or i32 %70, 8388608\l  %72 = zext i32 %71 to i64\l  %73 = mul nuw nsw i64 %72, 4266746795\l  %74 = trunc i64 %73 to i32\l  %75 = lshr i64 %73, 32\l  %76 = mul nuw nsw i64 %72, 1011060801\l  %77 = add nuw nsw i64 %75, %76\l  %78 = trunc i64 %77 to i32\l  %79 = lshr i64 %77, 32\l  %80 = mul nuw nsw i64 %72, 3680671129\l  %81 = add nuw nsw i64 %79, %80\l  %82 = trunc i64 %81 to i32\l  %83 = lshr i64 %81, 32\l  %84 = mul nuw nsw i64 %72, 4113882560\l  %85 = add nuw nsw i64 %83, %84\l  %86 = trunc i64 %85 to i32\l  %87 = lshr i64 %85, 32\l  %88 = mul nuw nsw i64 %72, 4230436817\l  %89 = add nuw nsw i64 %87, %88\l  %90 = trunc i64 %89 to i32\l  %91 = lshr i64 %89, 32\l  %92 = mul nuw nsw i64 %72, 1313084713\l  %93 = add nuw nsw i64 %91, %92\l  %94 = trunc i64 %93 to i32\l  %95 = lshr i64 %93, 32\l  %96 = mul nuw nsw i64 %72, 2734261102\l  %97 = add nuw nsw i64 %95, %96\l  %98 = trunc i64 %97 to i32\l  %99 = lshr i64 %97, 32\l  %100 = trunc i64 %99 to i32\l  %101 = add nsw i32 %69, -120\l  %102 = icmp ugt i32 %101, 63\l  %103 = select i1 %102, i32 %94, i32 %100\l  %104 = select i1 %102, i32 %90, i32 %98\l  %105 = select i1 %102, i32 %86, i32 %94\l  %106 = select i1 %102, i32 %82, i32 %90\l  %107 = select i1 %102, i32 %78, i32 %86\l  %108 = select i1 %102, i32 %74, i32 %82\l  %109 = select i1 %102, i32 -64, i32 0\l  %110 = add nsw i32 %109, %101\l  %111 = icmp ugt i32 %110, 31\l  %112 = select i1 %111, i32 %104, i32 %103\l  %113 = select i1 %111, i32 %105, i32 %104\l  %114 = select i1 %111, i32 %106, i32 %105\l  %115 = select i1 %111, i32 %107, i32 %106\l  %116 = select i1 %111, i32 %108, i32 %107\l  %117 = select i1 %111, i32 -32, i32 0\l  %118 = add nsw i32 %117, %110\l  %119 = icmp ugt i32 %118, 31\l  %120 = select i1 %119, i32 %113, i32 %112\l  %121 = select i1 %119, i32 %114, i32 %113\l  %122 = select i1 %119, i32 %115, i32 %114\l  %123 = select i1 %119, i32 %116, i32 %115\l  %124 = select i1 %119, i32 -32, i32 0\l  %125 = add nsw i32 %124, %118\l  %126 = icmp eq i32 %125, 0\l  %127 = sub nsw i32 32, %125\l  %128 = tail call i32 @llvm.fshr.i32(i32 %120, i32 %121, i32 %127)\l  %129 = tail call i32 @llvm.fshr.i32(i32 %121, i32 %122, i32 %127)\l  %130 = tail call i32 @llvm.fshr.i32(i32 %122, i32 %123, i32 %127)\l  %131 = select i1 %126, i32 %120, i32 %128\l  %132 = select i1 %126, i32 %121, i32 %129\l  %133 = select i1 %126, i32 %122, i32 %130\l  %134 = lshr i32 %131, 29\l  %135 = tail call i32 @llvm.fshl.i32(i32 %131, i32 %132, i32 2)\l  %136 = tail call i32 @llvm.fshl.i32(i32 %132, i32 %133, i32 2)\l  %137 = tail call i32 @llvm.fshl.i32(i32 %133, i32 %123, i32 2)\l  %138 = and i32 %134, 1\l  %139 = sub nsw i32 0, %138\l  %140 = shl i32 %134, 31\l  %141 = xor i32 %135, %139\l  %142 = xor i32 %136, %139\l  %143 = xor i32 %137, %139\l  %144 = tail call i32 @llvm.ctlz.i32(i32 %141, i1 false), !range !11\l  %145 = sub nsw i32 31, %144\l  %146 = tail call i32 @llvm.fshr.i32(i32 %141, i32 %142, i32 %145)\l  %147 = tail call i32 @llvm.fshr.i32(i32 %142, i32 %143, i32 %145)\l  %148 = shl nuw nsw i32 %144, 23\l  %149 = sub nuw nsw i32 1056964608, %148\l  %150 = lshr i32 %146, 9\l  %151 = or i32 %150, %149\l  %152 = or i32 %151, %140\l  %153 = bitcast i32 %152 to float\l  %154 = tail call i32 @llvm.fshl.i32(i32 %146, i32 %147, i32 23)\l  %155 = tail call i32 @llvm.ctlz.i32(i32 %154, i1 false), !range !11\l  %156 = fmul float %153, 0x3FF921FB40000000\l  %157 = add nuw nsw i32 %155, %144\l  %158 = shl nuw nsw i32 %157, 23\l  %159 = sub nuw nsw i32 855638016, %158\l  %160 = sub nsw i32 31, %155\l  %161 = tail call i32 @llvm.fshr.i32(i32 %154, i32 %147, i32 %160)\l  %162 = lshr i32 %161, 9\l  %163 = or i32 %159, %162\l  %164 = or i32 %163, %140\l  %165 = bitcast i32 %164 to float\l  %166 = fneg float %156\l  %167 = tail call float @llvm.fma.f32(float %153, float 0x3FF921FB40000000,\l... float %166)\l  %168 = tail call float @llvm.fma.f32(float %153, float 0x3E74442D00000000,\l... float %167)\l  %169 = tail call float @llvm.fma.f32(float %165, float 0x3FF921FB40000000,\l... float %168)\l  %170 = fadd float %156, %169\l  %171 = lshr i32 %131, 30\l  %172 = add nuw nsw i32 %138, %171\l  br label %173\l}"];
	Node0x64346f0 -> Node0x6435230;
	Node0x6435230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%173:\l173:                                              \l  %174 = phi float [ %65, %60 ], [ %170, %67 ]\l  %175 = phi i32 [ %66, %60 ], [ %172, %67 ]\l  %176 = fmul float %174, %174\l  %177 = tail call float @llvm.fmuladd.f32(float %176, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %178 = tail call float @llvm.fmuladd.f32(float %176, float %177, float\l... 0xBFC55553A0000000)\l  %179 = fmul float %176, %178\l  %180 = tail call float @llvm.fmuladd.f32(float %174, float %179, float %174)\l  %181 = tail call float @llvm.fmuladd.f32(float %176, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %182 = tail call float @llvm.fmuladd.f32(float %176, float %181, float\l... 0x3FA5557EE0000000)\l  %183 = tail call float @llvm.fmuladd.f32(float %176, float %182, float\l... 0xBFE0000080000000)\l  %184 = tail call float @llvm.fmuladd.f32(float %176, float %183, float\l... 1.000000e+00)\l  %185 = fneg float %180\l  %186 = and i32 %175, 1\l  %187 = icmp eq i32 %186, 0\l  %188 = select i1 %187, float %184, float %185\l  %189 = bitcast float %188 to i32\l  %190 = shl i32 %175, 30\l  %191 = and i32 %190, -2147483648\l  %192 = xor i32 %191, %189\l  %193 = bitcast i32 %192 to float\l  %194 = tail call i1 @llvm.amdgcn.class.f32(float %58, i32 504)\l  %195 = fadd contract float %193, 1.000000e+00\l  %196 = select i1 %194, float %195, float 0x7FF8000000000000\l  %197 = fcmp olt float %196, 0x39F0000000000000\l  %198 = select i1 %197, float 0x41F0000000000000, float 1.000000e+00\l  %199 = fmul float %196, %198\l  %200 = tail call float @llvm.sqrt.f32(float %199)\l  %201 = bitcast float %200 to i32\l  %202 = add nsw i32 %201, -1\l  %203 = bitcast i32 %202 to float\l  %204 = add nsw i32 %201, 1\l  %205 = bitcast i32 %204 to float\l  %206 = tail call i1 @llvm.amdgcn.class.f32(float %199, i32 608)\l  %207 = select i1 %197, float 0x3EF0000000000000, float 1.000000e+00\l  %208 = fneg float %205\l  %209 = tail call float @llvm.fma.f32(float %208, float %200, float %199)\l  %210 = fcmp ogt float %209, 0.000000e+00\l  %211 = fneg float %203\l  %212 = tail call float @llvm.fma.f32(float %211, float %200, float %199)\l  %213 = fcmp ole float %212, 0.000000e+00\l  %214 = select i1 %213, float %203, float %200\l  %215 = select i1 %210, float %205, float %214\l  %216 = fmul float %207, %215\l  %217 = select i1 %206, float %199, float %216\l  br label %218\l}"];
	Node0x6435230 -> Node0x6434310;
	Node0x6434310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%218:\l218:                                              \l  %219 = phi float [ %56, %21 ], [ %217, %173 ]\l  %220 = fadd contract float %18, %219\l  store float %220, float addrspace(1)* %17, align 4, !tbaa !7\l  ret void\l}"];
}
