digraph "CFG for '_Z8kernel_CPfii' function" {
	label="CFG for '_Z8kernel_CPfii' function";

	Node0x5d7b090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = bitcast float addrspace(1)* %0 to %struct.HIP_vector_type addrspace(1)*\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = sext i32 %13 to i64\l  %15 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %14, i32 0, i32 0, i32 0, i64 0\l  %16 = load float, float addrspace(1)* %15, align 8, !amdgpu.noclobber !5\l  %17 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %14, i32 0, i32 0, i32 0, i64 1\l  %18 = load float, float addrspace(1)* %17, align 4, !amdgpu.noclobber !5\l  %19 = tail call float @llvm.fabs.f32(float %16)\l  %20 = fcmp olt float %19, 1.310720e+05\l  br i1 %20, label %21, label %28\l|{<s0>T|<s1>F}}"];
	Node0x5d7b090:s0 -> Node0x5d7e720;
	Node0x5d7b090:s1 -> Node0x5d7e7b0;
	Node0x5d7e720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%21:\l21:                                               \l  %22 = fmul float %19, 0x3FE45F3060000000\l  %23 = tail call float @llvm.rint.f32(float %22)\l  %24 = tail call float @llvm.fma.f32(float %23, float 0xBFF921FB40000000,\l... float %19)\l  %25 = tail call float @llvm.fma.f32(float %23, float 0xBE74442D00000000,\l... float %24)\l  %26 = tail call float @llvm.fma.f32(float %23, float 0xBCF8469880000000,\l... float %25)\l  %27 = fptosi float %23 to i32\l  br label %134\l}"];
	Node0x5d7e720 -> Node0x5d7f210;
	Node0x5d7e7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%28:\l28:                                               \l  %29 = bitcast float %19 to i32\l  %30 = lshr i32 %29, 23\l  %31 = and i32 %29, 8388607\l  %32 = or i32 %31, 8388608\l  %33 = zext i32 %32 to i64\l  %34 = mul nuw nsw i64 %33, 4266746795\l  %35 = trunc i64 %34 to i32\l  %36 = lshr i64 %34, 32\l  %37 = mul nuw nsw i64 %33, 1011060801\l  %38 = add nuw nsw i64 %36, %37\l  %39 = trunc i64 %38 to i32\l  %40 = lshr i64 %38, 32\l  %41 = mul nuw nsw i64 %33, 3680671129\l  %42 = add nuw nsw i64 %40, %41\l  %43 = trunc i64 %42 to i32\l  %44 = lshr i64 %42, 32\l  %45 = mul nuw nsw i64 %33, 4113882560\l  %46 = add nuw nsw i64 %44, %45\l  %47 = trunc i64 %46 to i32\l  %48 = lshr i64 %46, 32\l  %49 = mul nuw nsw i64 %33, 4230436817\l  %50 = add nuw nsw i64 %48, %49\l  %51 = trunc i64 %50 to i32\l  %52 = lshr i64 %50, 32\l  %53 = mul nuw nsw i64 %33, 1313084713\l  %54 = add nuw nsw i64 %52, %53\l  %55 = trunc i64 %54 to i32\l  %56 = lshr i64 %54, 32\l  %57 = mul nuw nsw i64 %33, 2734261102\l  %58 = add nuw nsw i64 %56, %57\l  %59 = trunc i64 %58 to i32\l  %60 = lshr i64 %58, 32\l  %61 = trunc i64 %60 to i32\l  %62 = add nsw i32 %30, -120\l  %63 = icmp ugt i32 %62, 63\l  %64 = select i1 %63, i32 %55, i32 %61\l  %65 = select i1 %63, i32 %51, i32 %59\l  %66 = select i1 %63, i32 %47, i32 %55\l  %67 = select i1 %63, i32 %43, i32 %51\l  %68 = select i1 %63, i32 %39, i32 %47\l  %69 = select i1 %63, i32 %35, i32 %43\l  %70 = select i1 %63, i32 -64, i32 0\l  %71 = add nsw i32 %70, %62\l  %72 = icmp ugt i32 %71, 31\l  %73 = select i1 %72, i32 %65, i32 %64\l  %74 = select i1 %72, i32 %66, i32 %65\l  %75 = select i1 %72, i32 %67, i32 %66\l  %76 = select i1 %72, i32 %68, i32 %67\l  %77 = select i1 %72, i32 %69, i32 %68\l  %78 = select i1 %72, i32 -32, i32 0\l  %79 = add nsw i32 %78, %71\l  %80 = icmp ugt i32 %79, 31\l  %81 = select i1 %80, i32 %74, i32 %73\l  %82 = select i1 %80, i32 %75, i32 %74\l  %83 = select i1 %80, i32 %76, i32 %75\l  %84 = select i1 %80, i32 %77, i32 %76\l  %85 = select i1 %80, i32 -32, i32 0\l  %86 = add nsw i32 %85, %79\l  %87 = icmp eq i32 %86, 0\l  %88 = sub nsw i32 32, %86\l  %89 = tail call i32 @llvm.fshr.i32(i32 %81, i32 %82, i32 %88)\l  %90 = tail call i32 @llvm.fshr.i32(i32 %82, i32 %83, i32 %88)\l  %91 = tail call i32 @llvm.fshr.i32(i32 %83, i32 %84, i32 %88)\l  %92 = select i1 %87, i32 %81, i32 %89\l  %93 = select i1 %87, i32 %82, i32 %90\l  %94 = select i1 %87, i32 %83, i32 %91\l  %95 = lshr i32 %92, 29\l  %96 = tail call i32 @llvm.fshl.i32(i32 %92, i32 %93, i32 2)\l  %97 = tail call i32 @llvm.fshl.i32(i32 %93, i32 %94, i32 2)\l  %98 = tail call i32 @llvm.fshl.i32(i32 %94, i32 %84, i32 2)\l  %99 = and i32 %95, 1\l  %100 = sub nsw i32 0, %99\l  %101 = shl i32 %95, 31\l  %102 = xor i32 %96, %100\l  %103 = xor i32 %97, %100\l  %104 = xor i32 %98, %100\l  %105 = tail call i32 @llvm.ctlz.i32(i32 %102, i1 false), !range !7\l  %106 = sub nsw i32 31, %105\l  %107 = tail call i32 @llvm.fshr.i32(i32 %102, i32 %103, i32 %106)\l  %108 = tail call i32 @llvm.fshr.i32(i32 %103, i32 %104, i32 %106)\l  %109 = shl nuw nsw i32 %105, 23\l  %110 = sub nuw nsw i32 1056964608, %109\l  %111 = lshr i32 %107, 9\l  %112 = or i32 %111, %110\l  %113 = or i32 %112, %101\l  %114 = bitcast i32 %113 to float\l  %115 = tail call i32 @llvm.fshl.i32(i32 %107, i32 %108, i32 23)\l  %116 = tail call i32 @llvm.ctlz.i32(i32 %115, i1 false), !range !7\l  %117 = fmul float %114, 0x3FF921FB40000000\l  %118 = add nuw nsw i32 %116, %105\l  %119 = shl nuw nsw i32 %118, 23\l  %120 = sub nuw nsw i32 855638016, %119\l  %121 = sub nsw i32 31, %116\l  %122 = tail call i32 @llvm.fshr.i32(i32 %115, i32 %108, i32 %121)\l  %123 = lshr i32 %122, 9\l  %124 = or i32 %120, %123\l  %125 = or i32 %124, %101\l  %126 = bitcast i32 %125 to float\l  %127 = fneg float %117\l  %128 = tail call float @llvm.fma.f32(float %114, float 0x3FF921FB40000000,\l... float %127)\l  %129 = tail call float @llvm.fma.f32(float %114, float 0x3E74442D00000000,\l... float %128)\l  %130 = tail call float @llvm.fma.f32(float %126, float 0x3FF921FB40000000,\l... float %129)\l  %131 = fadd float %117, %130\l  %132 = lshr i32 %92, 30\l  %133 = add nuw nsw i32 %99, %132\l  br label %134\l}"];
	Node0x5d7e7b0 -> Node0x5d7f210;
	Node0x5d7f210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%134:\l134:                                              \l  %135 = phi float [ %26, %21 ], [ %131, %28 ]\l  %136 = phi i32 [ %27, %21 ], [ %133, %28 ]\l  %137 = fmul float %135, %135\l  %138 = tail call float @llvm.fmuladd.f32(float %137, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %139 = tail call float @llvm.fmuladd.f32(float %137, float %138, float\l... 0xBFC55553A0000000)\l  %140 = fmul float %137, %139\l  %141 = tail call float @llvm.fmuladd.f32(float %135, float %140, float %135)\l  %142 = tail call float @llvm.fmuladd.f32(float %137, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %143 = tail call float @llvm.fmuladd.f32(float %137, float %142, float\l... 0x3FA5557EE0000000)\l  %144 = tail call float @llvm.fmuladd.f32(float %137, float %143, float\l... 0xBFE0000080000000)\l  %145 = tail call float @llvm.fmuladd.f32(float %137, float %144, float\l... 1.000000e+00)\l  %146 = fneg float %141\l  %147 = and i32 %136, 1\l  %148 = icmp eq i32 %147, 0\l  %149 = select i1 %148, float %145, float %146\l  %150 = bitcast float %149 to i32\l  %151 = shl i32 %136, 30\l  %152 = and i32 %151, -2147483648\l  %153 = xor i32 %152, %150\l  %154 = bitcast i32 %153 to float\l  %155 = tail call i1 @llvm.amdgcn.class.f32(float %19, i32 504)\l  %156 = fadd contract float %154, 1.000000e+00\l  %157 = select i1 %155, float %156, float 0x7FF8000000000000\l  %158 = fcmp olt float %157, 0x39F0000000000000\l  %159 = select i1 %158, float 0x41F0000000000000, float 1.000000e+00\l  %160 = fmul float %157, %159\l  %161 = tail call float @llvm.sqrt.f32(float %160)\l  %162 = bitcast float %161 to i32\l  %163 = add nsw i32 %162, -1\l  %164 = bitcast i32 %163 to float\l  %165 = add nsw i32 %162, 1\l  %166 = bitcast i32 %165 to float\l  %167 = tail call i1 @llvm.amdgcn.class.f32(float %160, i32 608)\l  %168 = select i1 %158, float 0x3EF0000000000000, float 1.000000e+00\l  %169 = fneg float %166\l  %170 = tail call float @llvm.fma.f32(float %169, float %161, float %160)\l  %171 = fcmp ogt float %170, 0.000000e+00\l  %172 = fneg float %164\l  %173 = tail call float @llvm.fma.f32(float %172, float %161, float %160)\l  %174 = fcmp ole float %173, 0.000000e+00\l  %175 = select i1 %174, float %164, float %161\l  %176 = select i1 %171, float %166, float %175\l  %177 = fmul float %168, %176\l  %178 = select i1 %167, float %160, float %177\l  %179 = fadd contract float %16, %178\l  %180 = tail call i1 @llvm.amdgcn.class.f32(float %18, i32 144)\l  %181 = select i1 %180, float 0x41F0000000000000, float 1.000000e+00\l  %182 = fmul float %18, %181\l  %183 = tail call float @llvm.log2.f32(float %182)\l  %184 = fmul float %183, 0x3FE62E42E0000000\l  %185 = tail call i1 @llvm.amdgcn.class.f32(float %183, i32 519)\l  %186 = fneg float %184\l  %187 = tail call float @llvm.fma.f32(float %183, float 0x3FE62E42E0000000,\l... float %186)\l  %188 = tail call float @llvm.fma.f32(float %183, float 0x3E6EFA39E0000000,\l... float %187)\l  %189 = fadd float %184, %188\l  %190 = select i1 %185, float %183, float %189\l  %191 = select i1 %180, float 0x40362E4300000000, float 0.000000e+00\l  %192 = fsub float %190, %191\l  %193 = fadd contract float %192, 1.000000e+00\l  %194 = fcmp olt float %193, 0x39F0000000000000\l  %195 = select i1 %194, float 0x41F0000000000000, float 1.000000e+00\l  %196 = fmul float %193, %195\l  %197 = tail call float @llvm.sqrt.f32(float %196)\l  %198 = bitcast float %197 to i32\l  %199 = add nsw i32 %198, -1\l  %200 = bitcast i32 %199 to float\l  %201 = add nsw i32 %198, 1\l  %202 = bitcast i32 %201 to float\l  %203 = tail call i1 @llvm.amdgcn.class.f32(float %196, i32 608)\l  %204 = select i1 %194, float 0x3EF0000000000000, float 1.000000e+00\l  %205 = fneg float %202\l  %206 = tail call float @llvm.fma.f32(float %205, float %197, float %196)\l  %207 = fcmp ogt float %206, 0.000000e+00\l  %208 = fneg float %200\l  %209 = tail call float @llvm.fma.f32(float %208, float %197, float %196)\l  %210 = fcmp ole float %209, 0.000000e+00\l  %211 = select i1 %210, float %200, float %197\l  %212 = select i1 %207, float %202, float %211\l  %213 = fmul float %204, %212\l  %214 = select i1 %203, float %196, float %213\l  %215 = fadd contract float %18, %214\l  store float %179, float addrspace(1)* %15, align 8\l  store float %215, float addrspace(1)* %17, align 4\l  ret void\l}"];
}
