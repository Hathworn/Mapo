digraph "CFG for '_Z8kernel_DPfii' function" {
	label="CFG for '_Z8kernel_DPfii' function";

	Node0x589ec20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = bitcast float addrspace(1)* %0 to %struct.HIP_vector_type addrspace(1)*\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = sext i32 %13 to i64\l  %15 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %14, i32 0, i32 0, i32 0, i64 0\l  %16 = load float, float addrspace(1)* %15, align 16, !amdgpu.noclobber !5\l  %17 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %14, i32 0, i32 0, i32 0, i64 1\l  %18 = load float, float addrspace(1)* %17, align 4, !amdgpu.noclobber !5\l  %19 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %14, i32 0, i32 0, i32 0, i64 2\l  %20 = load float, float addrspace(1)* %19, align 8, !amdgpu.noclobber !5\l  %21 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %14, i32 0, i32 0, i32 0, i64 3\l  %22 = load float, float addrspace(1)* %21, align 4, !amdgpu.noclobber !5\l  %23 = tail call float @llvm.fabs.f32(float %16)\l  %24 = fcmp olt float %23, 1.310720e+05\l  br i1 %24, label %25, label %32\l|{<s0>T|<s1>F}}"];
	Node0x589ec20:s0 -> Node0x58a2630;
	Node0x589ec20:s1 -> Node0x58a26c0;
	Node0x58a2630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%25:\l25:                                               \l  %26 = fmul float %23, 0x3FE45F3060000000\l  %27 = tail call float @llvm.rint.f32(float %26)\l  %28 = tail call float @llvm.fma.f32(float %27, float 0xBFF921FB40000000,\l... float %23)\l  %29 = tail call float @llvm.fma.f32(float %27, float 0xBE74442D00000000,\l... float %28)\l  %30 = tail call float @llvm.fma.f32(float %27, float 0xBCF8469880000000,\l... float %29)\l  %31 = fptosi float %27 to i32\l  br label %138\l}"];
	Node0x58a2630 -> Node0x58a3120;
	Node0x58a26c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = bitcast float %23 to i32\l  %34 = lshr i32 %33, 23\l  %35 = and i32 %33, 8388607\l  %36 = or i32 %35, 8388608\l  %37 = zext i32 %36 to i64\l  %38 = mul nuw nsw i64 %37, 4266746795\l  %39 = trunc i64 %38 to i32\l  %40 = lshr i64 %38, 32\l  %41 = mul nuw nsw i64 %37, 1011060801\l  %42 = add nuw nsw i64 %40, %41\l  %43 = trunc i64 %42 to i32\l  %44 = lshr i64 %42, 32\l  %45 = mul nuw nsw i64 %37, 3680671129\l  %46 = add nuw nsw i64 %44, %45\l  %47 = trunc i64 %46 to i32\l  %48 = lshr i64 %46, 32\l  %49 = mul nuw nsw i64 %37, 4113882560\l  %50 = add nuw nsw i64 %48, %49\l  %51 = trunc i64 %50 to i32\l  %52 = lshr i64 %50, 32\l  %53 = mul nuw nsw i64 %37, 4230436817\l  %54 = add nuw nsw i64 %52, %53\l  %55 = trunc i64 %54 to i32\l  %56 = lshr i64 %54, 32\l  %57 = mul nuw nsw i64 %37, 1313084713\l  %58 = add nuw nsw i64 %56, %57\l  %59 = trunc i64 %58 to i32\l  %60 = lshr i64 %58, 32\l  %61 = mul nuw nsw i64 %37, 2734261102\l  %62 = add nuw nsw i64 %60, %61\l  %63 = trunc i64 %62 to i32\l  %64 = lshr i64 %62, 32\l  %65 = trunc i64 %64 to i32\l  %66 = add nsw i32 %34, -120\l  %67 = icmp ugt i32 %66, 63\l  %68 = select i1 %67, i32 %59, i32 %65\l  %69 = select i1 %67, i32 %55, i32 %63\l  %70 = select i1 %67, i32 %51, i32 %59\l  %71 = select i1 %67, i32 %47, i32 %55\l  %72 = select i1 %67, i32 %43, i32 %51\l  %73 = select i1 %67, i32 %39, i32 %47\l  %74 = select i1 %67, i32 -64, i32 0\l  %75 = add nsw i32 %74, %66\l  %76 = icmp ugt i32 %75, 31\l  %77 = select i1 %76, i32 %69, i32 %68\l  %78 = select i1 %76, i32 %70, i32 %69\l  %79 = select i1 %76, i32 %71, i32 %70\l  %80 = select i1 %76, i32 %72, i32 %71\l  %81 = select i1 %76, i32 %73, i32 %72\l  %82 = select i1 %76, i32 -32, i32 0\l  %83 = add nsw i32 %82, %75\l  %84 = icmp ugt i32 %83, 31\l  %85 = select i1 %84, i32 %78, i32 %77\l  %86 = select i1 %84, i32 %79, i32 %78\l  %87 = select i1 %84, i32 %80, i32 %79\l  %88 = select i1 %84, i32 %81, i32 %80\l  %89 = select i1 %84, i32 -32, i32 0\l  %90 = add nsw i32 %89, %83\l  %91 = icmp eq i32 %90, 0\l  %92 = sub nsw i32 32, %90\l  %93 = tail call i32 @llvm.fshr.i32(i32 %85, i32 %86, i32 %92)\l  %94 = tail call i32 @llvm.fshr.i32(i32 %86, i32 %87, i32 %92)\l  %95 = tail call i32 @llvm.fshr.i32(i32 %87, i32 %88, i32 %92)\l  %96 = select i1 %91, i32 %85, i32 %93\l  %97 = select i1 %91, i32 %86, i32 %94\l  %98 = select i1 %91, i32 %87, i32 %95\l  %99 = lshr i32 %96, 29\l  %100 = tail call i32 @llvm.fshl.i32(i32 %96, i32 %97, i32 2)\l  %101 = tail call i32 @llvm.fshl.i32(i32 %97, i32 %98, i32 2)\l  %102 = tail call i32 @llvm.fshl.i32(i32 %98, i32 %88, i32 2)\l  %103 = and i32 %99, 1\l  %104 = sub nsw i32 0, %103\l  %105 = shl i32 %99, 31\l  %106 = xor i32 %100, %104\l  %107 = xor i32 %101, %104\l  %108 = xor i32 %102, %104\l  %109 = tail call i32 @llvm.ctlz.i32(i32 %106, i1 false), !range !7\l  %110 = sub nsw i32 31, %109\l  %111 = tail call i32 @llvm.fshr.i32(i32 %106, i32 %107, i32 %110)\l  %112 = tail call i32 @llvm.fshr.i32(i32 %107, i32 %108, i32 %110)\l  %113 = shl nuw nsw i32 %109, 23\l  %114 = sub nuw nsw i32 1056964608, %113\l  %115 = lshr i32 %111, 9\l  %116 = or i32 %115, %114\l  %117 = or i32 %116, %105\l  %118 = bitcast i32 %117 to float\l  %119 = tail call i32 @llvm.fshl.i32(i32 %111, i32 %112, i32 23)\l  %120 = tail call i32 @llvm.ctlz.i32(i32 %119, i1 false), !range !7\l  %121 = fmul float %118, 0x3FF921FB40000000\l  %122 = add nuw nsw i32 %120, %109\l  %123 = shl nuw nsw i32 %122, 23\l  %124 = sub nuw nsw i32 855638016, %123\l  %125 = sub nsw i32 31, %120\l  %126 = tail call i32 @llvm.fshr.i32(i32 %119, i32 %112, i32 %125)\l  %127 = lshr i32 %126, 9\l  %128 = or i32 %124, %127\l  %129 = or i32 %128, %105\l  %130 = bitcast i32 %129 to float\l  %131 = fneg float %121\l  %132 = tail call float @llvm.fma.f32(float %118, float 0x3FF921FB40000000,\l... float %131)\l  %133 = tail call float @llvm.fma.f32(float %118, float 0x3E74442D00000000,\l... float %132)\l  %134 = tail call float @llvm.fma.f32(float %130, float 0x3FF921FB40000000,\l... float %133)\l  %135 = fadd float %121, %134\l  %136 = lshr i32 %96, 30\l  %137 = add nuw nsw i32 %103, %136\l  br label %138\l}"];
	Node0x58a26c0 -> Node0x58a3120;
	Node0x58a3120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%138:\l138:                                              \l  %139 = phi float [ %30, %25 ], [ %135, %32 ]\l  %140 = phi i32 [ %31, %25 ], [ %137, %32 ]\l  %141 = fmul float %139, %139\l  %142 = tail call float @llvm.fmuladd.f32(float %141, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %143 = tail call float @llvm.fmuladd.f32(float %141, float %142, float\l... 0xBFC55553A0000000)\l  %144 = fmul float %141, %143\l  %145 = tail call float @llvm.fmuladd.f32(float %139, float %144, float %139)\l  %146 = tail call float @llvm.fmuladd.f32(float %141, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %147 = tail call float @llvm.fmuladd.f32(float %141, float %146, float\l... 0x3FA5557EE0000000)\l  %148 = tail call float @llvm.fmuladd.f32(float %141, float %147, float\l... 0xBFE0000080000000)\l  %149 = tail call float @llvm.fmuladd.f32(float %141, float %148, float\l... 1.000000e+00)\l  %150 = fneg float %145\l  %151 = and i32 %140, 1\l  %152 = icmp eq i32 %151, 0\l  %153 = select i1 %152, float %149, float %150\l  %154 = bitcast float %153 to i32\l  %155 = shl i32 %140, 30\l  %156 = and i32 %155, -2147483648\l  %157 = xor i32 %156, %154\l  %158 = bitcast i32 %157 to float\l  %159 = tail call i1 @llvm.amdgcn.class.f32(float %23, i32 504)\l  %160 = fadd contract float %158, 1.000000e+00\l  %161 = select i1 %159, float %160, float 0x7FF8000000000000\l  %162 = fcmp olt float %161, 0x39F0000000000000\l  %163 = select i1 %162, float 0x41F0000000000000, float 1.000000e+00\l  %164 = fmul float %161, %163\l  %165 = tail call float @llvm.sqrt.f32(float %164)\l  %166 = bitcast float %165 to i32\l  %167 = add nsw i32 %166, -1\l  %168 = bitcast i32 %167 to float\l  %169 = add nsw i32 %166, 1\l  %170 = bitcast i32 %169 to float\l  %171 = tail call i1 @llvm.amdgcn.class.f32(float %18, i32 144)\l  %172 = select i1 %171, float 0x41F0000000000000, float 1.000000e+00\l  %173 = fmul float %18, %172\l  %174 = tail call float @llvm.log2.f32(float %173)\l  %175 = fmul float %174, 0x3FE62E42E0000000\l  %176 = tail call i1 @llvm.amdgcn.class.f32(float %174, i32 519)\l  %177 = fneg float %175\l  %178 = tail call float @llvm.fma.f32(float %174, float 0x3FE62E42E0000000,\l... float %177)\l  %179 = tail call float @llvm.fma.f32(float %174, float 0x3E6EFA39E0000000,\l... float %178)\l  %180 = fadd float %175, %179\l  %181 = select i1 %176, float %174, float %180\l  %182 = select i1 %171, float 0x40362E4300000000, float 0.000000e+00\l  %183 = fsub float %181, %182\l  %184 = fadd contract float %183, 1.000000e+00\l  %185 = fcmp olt float %184, 0x39F0000000000000\l  %186 = select i1 %185, float 0x41F0000000000000, float 1.000000e+00\l  %187 = fmul float %184, %186\l  %188 = tail call float @llvm.sqrt.f32(float %187)\l  %189 = bitcast float %188 to i32\l  %190 = add nsw i32 %189, -1\l  %191 = bitcast i32 %190 to float\l  %192 = add nsw i32 %189, 1\l  %193 = bitcast i32 %192 to float\l  %194 = tail call float @llvm.fabs.f32(float %20)\l  %195 = fcmp olt float %194, 1.310720e+05\l  br i1 %195, label %196, label %203\l|{<s0>T|<s1>F}}"];
	Node0x58a3120:s0 -> Node0x58ac0f0;
	Node0x58a3120:s1 -> Node0x58ac180;
	Node0x58ac0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%196:\l196:                                              \l  %197 = fmul float %194, 0x3FE45F3060000000\l  %198 = tail call float @llvm.rint.f32(float %197)\l  %199 = tail call float @llvm.fma.f32(float %198, float 0xBFF921FB40000000,\l... float %194)\l  %200 = tail call float @llvm.fma.f32(float %198, float 0xBE74442D00000000,\l... float %199)\l  %201 = tail call float @llvm.fma.f32(float %198, float 0xBCF8469880000000,\l... float %200)\l  %202 = fptosi float %198 to i32\l  br label %309\l}"];
	Node0x58ac0f0 -> Node0x58ac840;
	Node0x58ac180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%203:\l203:                                              \l  %204 = bitcast float %194 to i32\l  %205 = lshr i32 %204, 23\l  %206 = and i32 %204, 8388607\l  %207 = or i32 %206, 8388608\l  %208 = zext i32 %207 to i64\l  %209 = mul nuw nsw i64 %208, 4266746795\l  %210 = trunc i64 %209 to i32\l  %211 = lshr i64 %209, 32\l  %212 = mul nuw nsw i64 %208, 1011060801\l  %213 = add nuw nsw i64 %211, %212\l  %214 = trunc i64 %213 to i32\l  %215 = lshr i64 %213, 32\l  %216 = mul nuw nsw i64 %208, 3680671129\l  %217 = add nuw nsw i64 %215, %216\l  %218 = trunc i64 %217 to i32\l  %219 = lshr i64 %217, 32\l  %220 = mul nuw nsw i64 %208, 4113882560\l  %221 = add nuw nsw i64 %219, %220\l  %222 = trunc i64 %221 to i32\l  %223 = lshr i64 %221, 32\l  %224 = mul nuw nsw i64 %208, 4230436817\l  %225 = add nuw nsw i64 %223, %224\l  %226 = trunc i64 %225 to i32\l  %227 = lshr i64 %225, 32\l  %228 = mul nuw nsw i64 %208, 1313084713\l  %229 = add nuw nsw i64 %227, %228\l  %230 = trunc i64 %229 to i32\l  %231 = lshr i64 %229, 32\l  %232 = mul nuw nsw i64 %208, 2734261102\l  %233 = add nuw nsw i64 %231, %232\l  %234 = trunc i64 %233 to i32\l  %235 = lshr i64 %233, 32\l  %236 = trunc i64 %235 to i32\l  %237 = add nsw i32 %205, -120\l  %238 = icmp ugt i32 %237, 63\l  %239 = select i1 %238, i32 %230, i32 %236\l  %240 = select i1 %238, i32 %226, i32 %234\l  %241 = select i1 %238, i32 %222, i32 %230\l  %242 = select i1 %238, i32 %218, i32 %226\l  %243 = select i1 %238, i32 %214, i32 %222\l  %244 = select i1 %238, i32 %210, i32 %218\l  %245 = select i1 %238, i32 -64, i32 0\l  %246 = add nsw i32 %245, %237\l  %247 = icmp ugt i32 %246, 31\l  %248 = select i1 %247, i32 %240, i32 %239\l  %249 = select i1 %247, i32 %241, i32 %240\l  %250 = select i1 %247, i32 %242, i32 %241\l  %251 = select i1 %247, i32 %243, i32 %242\l  %252 = select i1 %247, i32 %244, i32 %243\l  %253 = select i1 %247, i32 -32, i32 0\l  %254 = add nsw i32 %253, %246\l  %255 = icmp ugt i32 %254, 31\l  %256 = select i1 %255, i32 %249, i32 %248\l  %257 = select i1 %255, i32 %250, i32 %249\l  %258 = select i1 %255, i32 %251, i32 %250\l  %259 = select i1 %255, i32 %252, i32 %251\l  %260 = select i1 %255, i32 -32, i32 0\l  %261 = add nsw i32 %260, %254\l  %262 = icmp eq i32 %261, 0\l  %263 = sub nsw i32 32, %261\l  %264 = tail call i32 @llvm.fshr.i32(i32 %256, i32 %257, i32 %263)\l  %265 = tail call i32 @llvm.fshr.i32(i32 %257, i32 %258, i32 %263)\l  %266 = tail call i32 @llvm.fshr.i32(i32 %258, i32 %259, i32 %263)\l  %267 = select i1 %262, i32 %256, i32 %264\l  %268 = select i1 %262, i32 %257, i32 %265\l  %269 = select i1 %262, i32 %258, i32 %266\l  %270 = lshr i32 %267, 29\l  %271 = tail call i32 @llvm.fshl.i32(i32 %267, i32 %268, i32 2)\l  %272 = tail call i32 @llvm.fshl.i32(i32 %268, i32 %269, i32 2)\l  %273 = tail call i32 @llvm.fshl.i32(i32 %269, i32 %259, i32 2)\l  %274 = and i32 %270, 1\l  %275 = sub nsw i32 0, %274\l  %276 = shl i32 %270, 31\l  %277 = xor i32 %271, %275\l  %278 = xor i32 %272, %275\l  %279 = xor i32 %273, %275\l  %280 = tail call i32 @llvm.ctlz.i32(i32 %277, i1 false), !range !7\l  %281 = sub nsw i32 31, %280\l  %282 = tail call i32 @llvm.fshr.i32(i32 %277, i32 %278, i32 %281)\l  %283 = tail call i32 @llvm.fshr.i32(i32 %278, i32 %279, i32 %281)\l  %284 = shl nuw nsw i32 %280, 23\l  %285 = sub nuw nsw i32 1056964608, %284\l  %286 = lshr i32 %282, 9\l  %287 = or i32 %286, %285\l  %288 = or i32 %287, %276\l  %289 = bitcast i32 %288 to float\l  %290 = tail call i32 @llvm.fshl.i32(i32 %282, i32 %283, i32 23)\l  %291 = tail call i32 @llvm.ctlz.i32(i32 %290, i1 false), !range !7\l  %292 = fmul float %289, 0x3FF921FB40000000\l  %293 = add nuw nsw i32 %291, %280\l  %294 = shl nuw nsw i32 %293, 23\l  %295 = sub nuw nsw i32 855638016, %294\l  %296 = sub nsw i32 31, %291\l  %297 = tail call i32 @llvm.fshr.i32(i32 %290, i32 %283, i32 %296)\l  %298 = lshr i32 %297, 9\l  %299 = or i32 %295, %298\l  %300 = or i32 %299, %276\l  %301 = bitcast i32 %300 to float\l  %302 = fneg float %292\l  %303 = tail call float @llvm.fma.f32(float %289, float 0x3FF921FB40000000,\l... float %302)\l  %304 = tail call float @llvm.fma.f32(float %289, float 0x3E74442D00000000,\l... float %303)\l  %305 = tail call float @llvm.fma.f32(float %301, float 0x3FF921FB40000000,\l... float %304)\l  %306 = fadd float %292, %305\l  %307 = lshr i32 %267, 30\l  %308 = add nuw nsw i32 %274, %307\l  br label %309\l}"];
	Node0x58ac180 -> Node0x58ac840;
	Node0x58ac840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%309:\l309:                                              \l  %310 = phi float [ %201, %196 ], [ %306, %203 ]\l  %311 = phi i32 [ %202, %196 ], [ %308, %203 ]\l  %312 = tail call i1 @llvm.amdgcn.class.f32(float %187, i32 608)\l  %313 = select i1 %185, float 0x3EF0000000000000, float 1.000000e+00\l  %314 = fneg float %193\l  %315 = tail call float @llvm.fma.f32(float %314, float %188, float %187)\l  %316 = fcmp ogt float %315, 0.000000e+00\l  %317 = fneg float %191\l  %318 = tail call float @llvm.fma.f32(float %317, float %188, float %187)\l  %319 = fcmp ole float %318, 0.000000e+00\l  %320 = select i1 %319, float %191, float %188\l  %321 = select i1 %316, float %193, float %320\l  %322 = fmul float %313, %321\l  %323 = select i1 %312, float %187, float %322\l  %324 = fadd contract float %18, %323\l  %325 = tail call i1 @llvm.amdgcn.class.f32(float %164, i32 608)\l  %326 = select i1 %162, float 0x3EF0000000000000, float 1.000000e+00\l  %327 = fneg float %170\l  %328 = tail call float @llvm.fma.f32(float %327, float %165, float %164)\l  %329 = fcmp ogt float %328, 0.000000e+00\l  %330 = fneg float %168\l  %331 = tail call float @llvm.fma.f32(float %330, float %165, float %164)\l  %332 = fcmp ole float %331, 0.000000e+00\l  %333 = select i1 %332, float %168, float %165\l  %334 = select i1 %329, float %170, float %333\l  %335 = fmul float %326, %334\l  %336 = select i1 %325, float %164, float %335\l  %337 = fadd contract float %16, %336\l  %338 = fmul float %310, %310\l  %339 = tail call float @llvm.fmuladd.f32(float %338, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %340 = tail call float @llvm.fmuladd.f32(float %338, float %339, float\l... 0xBFC55553A0000000)\l  %341 = fmul float %338, %340\l  %342 = tail call float @llvm.fmuladd.f32(float %310, float %341, float %310)\l  %343 = tail call float @llvm.fmuladd.f32(float %338, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %344 = tail call float @llvm.fmuladd.f32(float %338, float %343, float\l... 0x3FA5557EE0000000)\l  %345 = tail call float @llvm.fmuladd.f32(float %338, float %344, float\l... 0xBFE0000080000000)\l  %346 = tail call float @llvm.fmuladd.f32(float %338, float %345, float\l... 1.000000e+00)\l  %347 = fneg float %342\l  %348 = and i32 %311, 1\l  %349 = icmp eq i32 %348, 0\l  %350 = select i1 %349, float %346, float %347\l  %351 = bitcast float %350 to i32\l  %352 = shl i32 %311, 30\l  %353 = and i32 %352, -2147483648\l  %354 = xor i32 %353, %351\l  %355 = bitcast i32 %354 to float\l  %356 = tail call i1 @llvm.amdgcn.class.f32(float %194, i32 504)\l  %357 = fadd contract float %355, 1.000000e+00\l  %358 = select i1 %356, float %357, float 0x7FF8000000000000\l  %359 = fcmp olt float %358, 0x39F0000000000000\l  %360 = select i1 %359, float 0x41F0000000000000, float 1.000000e+00\l  %361 = fmul float %358, %360\l  %362 = tail call float @llvm.sqrt.f32(float %361)\l  %363 = bitcast float %362 to i32\l  %364 = add nsw i32 %363, -1\l  %365 = bitcast i32 %364 to float\l  %366 = add nsw i32 %363, 1\l  %367 = bitcast i32 %366 to float\l  %368 = tail call i1 @llvm.amdgcn.class.f32(float %361, i32 608)\l  %369 = select i1 %359, float 0x3EF0000000000000, float 1.000000e+00\l  %370 = fneg float %367\l  %371 = tail call float @llvm.fma.f32(float %370, float %362, float %361)\l  %372 = fcmp ogt float %371, 0.000000e+00\l  %373 = fneg float %365\l  %374 = tail call float @llvm.fma.f32(float %373, float %362, float %361)\l  %375 = fcmp ole float %374, 0.000000e+00\l  %376 = select i1 %375, float %365, float %362\l  %377 = select i1 %372, float %367, float %376\l  %378 = fmul float %369, %377\l  %379 = select i1 %368, float %361, float %378\l  %380 = fadd contract float %20, %379\l  %381 = tail call i1 @llvm.amdgcn.class.f32(float %22, i32 144)\l  %382 = select i1 %381, float 0x41F0000000000000, float 1.000000e+00\l  %383 = fmul float %22, %382\l  %384 = tail call float @llvm.log2.f32(float %383)\l  %385 = fmul float %384, 0x3FE62E42E0000000\l  %386 = tail call i1 @llvm.amdgcn.class.f32(float %384, i32 519)\l  %387 = fneg float %385\l  %388 = tail call float @llvm.fma.f32(float %384, float 0x3FE62E42E0000000,\l... float %387)\l  %389 = tail call float @llvm.fma.f32(float %384, float 0x3E6EFA39E0000000,\l... float %388)\l  %390 = fadd float %385, %389\l  %391 = select i1 %386, float %384, float %390\l  %392 = select i1 %381, float 0x40362E4300000000, float 0.000000e+00\l  %393 = fsub float %391, %392\l  %394 = fadd contract float %393, 1.000000e+00\l  %395 = fcmp olt float %394, 0x39F0000000000000\l  %396 = select i1 %395, float 0x41F0000000000000, float 1.000000e+00\l  %397 = fmul float %394, %396\l  %398 = tail call float @llvm.sqrt.f32(float %397)\l  %399 = bitcast float %398 to i32\l  %400 = add nsw i32 %399, -1\l  %401 = bitcast i32 %400 to float\l  %402 = add nsw i32 %399, 1\l  %403 = bitcast i32 %402 to float\l  %404 = tail call i1 @llvm.amdgcn.class.f32(float %397, i32 608)\l  %405 = select i1 %395, float 0x3EF0000000000000, float 1.000000e+00\l  %406 = fneg float %403\l  %407 = tail call float @llvm.fma.f32(float %406, float %398, float %397)\l  %408 = fcmp ogt float %407, 0.000000e+00\l  %409 = fneg float %401\l  %410 = tail call float @llvm.fma.f32(float %409, float %398, float %397)\l  %411 = fcmp ole float %410, 0.000000e+00\l  %412 = select i1 %411, float %401, float %398\l  %413 = select i1 %408, float %403, float %412\l  %414 = fmul float %405, %413\l  %415 = select i1 %404, float %397, float %414\l  %416 = fadd contract float %22, %415\l  store float %337, float addrspace(1)* %15, align 16\l  store float %324, float addrspace(1)* %17, align 4\l  store float %380, float addrspace(1)* %19, align 8\l  store float %416, float addrspace(1)* %21, align 4\l  ret void\l}"];
}
