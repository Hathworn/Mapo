digraph "CFG for '_Z8kernel_BPfii' function" {
	label="CFG for '_Z8kernel_BPfii' function";

	Node0x478c7d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = sext i32 %12 to i64\l  %14 = getelementptr inbounds float, float addrspace(1)* %0, i64 %13\l  %15 = load float, float addrspace(1)* %14, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %16 = and i32 %12, 1\l  %17 = icmp eq i32 %16, 0\l  br i1 %17, label %54, label %18\l|{<s0>T|<s1>F}}"];
	Node0x478c7d0:s0 -> Node0x478e160;
	Node0x478c7d0:s1 -> Node0x478f210;
	Node0x478f210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%18:\l18:                                               \l  %19 = tail call i1 @llvm.amdgcn.class.f32(float %15, i32 144)\l  %20 = select i1 %19, float 0x41F0000000000000, float 1.000000e+00\l  %21 = fmul float %15, %20\l  %22 = tail call float @llvm.log2.f32(float %21)\l  %23 = fmul float %22, 0x3FE62E42E0000000\l  %24 = tail call i1 @llvm.amdgcn.class.f32(float %22, i32 519)\l  %25 = fneg float %23\l  %26 = tail call float @llvm.fma.f32(float %22, float 0x3FE62E42E0000000,\l... float %25)\l  %27 = tail call float @llvm.fma.f32(float %22, float 0x3E6EFA39E0000000,\l... float %26)\l  %28 = fadd float %23, %27\l  %29 = select i1 %24, float %22, float %28\l  %30 = select i1 %19, float 0x40362E4300000000, float 0.000000e+00\l  %31 = fsub float %29, %30\l  %32 = fadd contract float %31, 1.000000e+00\l  %33 = fcmp olt float %32, 0x39F0000000000000\l  %34 = select i1 %33, float 0x41F0000000000000, float 1.000000e+00\l  %35 = fmul float %32, %34\l  %36 = tail call float @llvm.sqrt.f32(float %35)\l  %37 = bitcast float %36 to i32\l  %38 = add nsw i32 %37, -1\l  %39 = bitcast i32 %38 to float\l  %40 = add nsw i32 %37, 1\l  %41 = bitcast i32 %40 to float\l  %42 = tail call i1 @llvm.amdgcn.class.f32(float %35, i32 608)\l  %43 = select i1 %33, float 0x3EF0000000000000, float 1.000000e+00\l  %44 = fneg float %41\l  %45 = tail call float @llvm.fma.f32(float %44, float %36, float %35)\l  %46 = fcmp ogt float %45, 0.000000e+00\l  %47 = fneg float %39\l  %48 = tail call float @llvm.fma.f32(float %47, float %36, float %35)\l  %49 = fcmp ole float %48, 0.000000e+00\l  %50 = select i1 %49, float %39, float %36\l  %51 = select i1 %46, float %41, float %50\l  %52 = fmul float %43, %51\l  %53 = select i1 %42, float %35, float %52\l  br label %215\l}"];
	Node0x478f210 -> Node0x4791ec0;
	Node0x478e160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%54:\l54:                                               \l  %55 = tail call float @llvm.fabs.f32(float %15)\l  %56 = fcmp olt float %55, 1.310720e+05\l  br i1 %56, label %57, label %64\l|{<s0>T|<s1>F}}"];
	Node0x478e160:s0 -> Node0x4792210;
	Node0x478e160:s1 -> Node0x47922a0;
	Node0x4792210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%57:\l57:                                               \l  %58 = fmul float %55, 0x3FE45F3060000000\l  %59 = tail call float @llvm.rint.f32(float %58)\l  %60 = tail call float @llvm.fma.f32(float %59, float 0xBFF921FB40000000,\l... float %55)\l  %61 = tail call float @llvm.fma.f32(float %59, float 0xBE74442D00000000,\l... float %60)\l  %62 = tail call float @llvm.fma.f32(float %59, float 0xBCF8469880000000,\l... float %61)\l  %63 = fptosi float %59 to i32\l  br label %170\l}"];
	Node0x4792210 -> Node0x4792bb0;
	Node0x47922a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%64:\l64:                                               \l  %65 = bitcast float %55 to i32\l  %66 = lshr i32 %65, 23\l  %67 = and i32 %65, 8388607\l  %68 = or i32 %67, 8388608\l  %69 = zext i32 %68 to i64\l  %70 = mul nuw nsw i64 %69, 4266746795\l  %71 = trunc i64 %70 to i32\l  %72 = lshr i64 %70, 32\l  %73 = mul nuw nsw i64 %69, 1011060801\l  %74 = add nuw nsw i64 %72, %73\l  %75 = trunc i64 %74 to i32\l  %76 = lshr i64 %74, 32\l  %77 = mul nuw nsw i64 %69, 3680671129\l  %78 = add nuw nsw i64 %76, %77\l  %79 = trunc i64 %78 to i32\l  %80 = lshr i64 %78, 32\l  %81 = mul nuw nsw i64 %69, 4113882560\l  %82 = add nuw nsw i64 %80, %81\l  %83 = trunc i64 %82 to i32\l  %84 = lshr i64 %82, 32\l  %85 = mul nuw nsw i64 %69, 4230436817\l  %86 = add nuw nsw i64 %84, %85\l  %87 = trunc i64 %86 to i32\l  %88 = lshr i64 %86, 32\l  %89 = mul nuw nsw i64 %69, 1313084713\l  %90 = add nuw nsw i64 %88, %89\l  %91 = trunc i64 %90 to i32\l  %92 = lshr i64 %90, 32\l  %93 = mul nuw nsw i64 %69, 2734261102\l  %94 = add nuw nsw i64 %92, %93\l  %95 = trunc i64 %94 to i32\l  %96 = lshr i64 %94, 32\l  %97 = trunc i64 %96 to i32\l  %98 = add nsw i32 %66, -120\l  %99 = icmp ugt i32 %98, 63\l  %100 = select i1 %99, i32 %91, i32 %97\l  %101 = select i1 %99, i32 %87, i32 %95\l  %102 = select i1 %99, i32 %83, i32 %91\l  %103 = select i1 %99, i32 %79, i32 %87\l  %104 = select i1 %99, i32 %75, i32 %83\l  %105 = select i1 %99, i32 %71, i32 %79\l  %106 = select i1 %99, i32 -64, i32 0\l  %107 = add nsw i32 %106, %98\l  %108 = icmp ugt i32 %107, 31\l  %109 = select i1 %108, i32 %101, i32 %100\l  %110 = select i1 %108, i32 %102, i32 %101\l  %111 = select i1 %108, i32 %103, i32 %102\l  %112 = select i1 %108, i32 %104, i32 %103\l  %113 = select i1 %108, i32 %105, i32 %104\l  %114 = select i1 %108, i32 -32, i32 0\l  %115 = add nsw i32 %114, %107\l  %116 = icmp ugt i32 %115, 31\l  %117 = select i1 %116, i32 %110, i32 %109\l  %118 = select i1 %116, i32 %111, i32 %110\l  %119 = select i1 %116, i32 %112, i32 %111\l  %120 = select i1 %116, i32 %113, i32 %112\l  %121 = select i1 %116, i32 -32, i32 0\l  %122 = add nsw i32 %121, %115\l  %123 = icmp eq i32 %122, 0\l  %124 = sub nsw i32 32, %122\l  %125 = tail call i32 @llvm.fshr.i32(i32 %117, i32 %118, i32 %124)\l  %126 = tail call i32 @llvm.fshr.i32(i32 %118, i32 %119, i32 %124)\l  %127 = tail call i32 @llvm.fshr.i32(i32 %119, i32 %120, i32 %124)\l  %128 = select i1 %123, i32 %117, i32 %125\l  %129 = select i1 %123, i32 %118, i32 %126\l  %130 = select i1 %123, i32 %119, i32 %127\l  %131 = lshr i32 %128, 29\l  %132 = tail call i32 @llvm.fshl.i32(i32 %128, i32 %129, i32 2)\l  %133 = tail call i32 @llvm.fshl.i32(i32 %129, i32 %130, i32 2)\l  %134 = tail call i32 @llvm.fshl.i32(i32 %130, i32 %120, i32 2)\l  %135 = and i32 %131, 1\l  %136 = sub nsw i32 0, %135\l  %137 = shl i32 %131, 31\l  %138 = xor i32 %132, %136\l  %139 = xor i32 %133, %136\l  %140 = xor i32 %134, %136\l  %141 = tail call i32 @llvm.ctlz.i32(i32 %138, i1 false), !range !11\l  %142 = sub nsw i32 31, %141\l  %143 = tail call i32 @llvm.fshr.i32(i32 %138, i32 %139, i32 %142)\l  %144 = tail call i32 @llvm.fshr.i32(i32 %139, i32 %140, i32 %142)\l  %145 = shl nuw nsw i32 %141, 23\l  %146 = sub nuw nsw i32 1056964608, %145\l  %147 = lshr i32 %143, 9\l  %148 = or i32 %147, %146\l  %149 = or i32 %148, %137\l  %150 = bitcast i32 %149 to float\l  %151 = tail call i32 @llvm.fshl.i32(i32 %143, i32 %144, i32 23)\l  %152 = tail call i32 @llvm.ctlz.i32(i32 %151, i1 false), !range !11\l  %153 = fmul float %150, 0x3FF921FB40000000\l  %154 = add nuw nsw i32 %152, %141\l  %155 = shl nuw nsw i32 %154, 23\l  %156 = sub nuw nsw i32 855638016, %155\l  %157 = sub nsw i32 31, %152\l  %158 = tail call i32 @llvm.fshr.i32(i32 %151, i32 %144, i32 %157)\l  %159 = lshr i32 %158, 9\l  %160 = or i32 %156, %159\l  %161 = or i32 %160, %137\l  %162 = bitcast i32 %161 to float\l  %163 = fneg float %153\l  %164 = tail call float @llvm.fma.f32(float %150, float 0x3FF921FB40000000,\l... float %163)\l  %165 = tail call float @llvm.fma.f32(float %150, float 0x3E74442D00000000,\l... float %164)\l  %166 = tail call float @llvm.fma.f32(float %162, float 0x3FF921FB40000000,\l... float %165)\l  %167 = fadd float %153, %166\l  %168 = lshr i32 %128, 30\l  %169 = add nuw nsw i32 %135, %168\l  br label %170\l}"];
	Node0x47922a0 -> Node0x4792bb0;
	Node0x4792bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%170:\l170:                                              \l  %171 = phi float [ %62, %57 ], [ %167, %64 ]\l  %172 = phi i32 [ %63, %57 ], [ %169, %64 ]\l  %173 = fmul float %171, %171\l  %174 = tail call float @llvm.fmuladd.f32(float %173, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %175 = tail call float @llvm.fmuladd.f32(float %173, float %174, float\l... 0xBFC55553A0000000)\l  %176 = fmul float %173, %175\l  %177 = tail call float @llvm.fmuladd.f32(float %171, float %176, float %171)\l  %178 = tail call float @llvm.fmuladd.f32(float %173, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %179 = tail call float @llvm.fmuladd.f32(float %173, float %178, float\l... 0x3FA5557EE0000000)\l  %180 = tail call float @llvm.fmuladd.f32(float %173, float %179, float\l... 0xBFE0000080000000)\l  %181 = tail call float @llvm.fmuladd.f32(float %173, float %180, float\l... 1.000000e+00)\l  %182 = fneg float %177\l  %183 = and i32 %172, 1\l  %184 = icmp eq i32 %183, 0\l  %185 = select i1 %184, float %181, float %182\l  %186 = bitcast float %185 to i32\l  %187 = shl i32 %172, 30\l  %188 = and i32 %187, -2147483648\l  %189 = xor i32 %188, %186\l  %190 = bitcast i32 %189 to float\l  %191 = tail call i1 @llvm.amdgcn.class.f32(float %55, i32 504)\l  %192 = fadd contract float %190, 1.000000e+00\l  %193 = select i1 %191, float %192, float 0x7FF8000000000000\l  %194 = fcmp olt float %193, 0x39F0000000000000\l  %195 = select i1 %194, float 0x41F0000000000000, float 1.000000e+00\l  %196 = fmul float %193, %195\l  %197 = tail call float @llvm.sqrt.f32(float %196)\l  %198 = bitcast float %197 to i32\l  %199 = add nsw i32 %198, -1\l  %200 = bitcast i32 %199 to float\l  %201 = add nsw i32 %198, 1\l  %202 = bitcast i32 %201 to float\l  %203 = tail call i1 @llvm.amdgcn.class.f32(float %196, i32 608)\l  %204 = select i1 %194, float 0x3EF0000000000000, float 1.000000e+00\l  %205 = fneg float %202\l  %206 = tail call float @llvm.fma.f32(float %205, float %197, float %196)\l  %207 = fcmp ogt float %206, 0.000000e+00\l  %208 = fneg float %200\l  %209 = tail call float @llvm.fma.f32(float %208, float %197, float %196)\l  %210 = fcmp ole float %209, 0.000000e+00\l  %211 = select i1 %210, float %200, float %197\l  %212 = select i1 %207, float %202, float %211\l  %213 = fmul float %204, %212\l  %214 = select i1 %203, float %196, float %213\l  br label %215\l}"];
	Node0x4792bb0 -> Node0x4791ec0;
	Node0x4791ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%215:\l215:                                              \l  %216 = phi float [ %53, %18 ], [ %214, %170 ]\l  %217 = fadd contract float %15, %216\l  store float %217, float addrspace(1)* %14, align 4, !tbaa !7\l  ret void\l}"];
}
