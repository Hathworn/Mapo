digraph "CFG for '_Z16getOptimalShiftsP15HIP_vector_typeIfLj2EEPKS0_iiiiii' function" {
	label="CFG for '_Z16getOptimalShiftsP15HIP_vector_typeIfLj2EEPKS0_iiiiii' function";

	Node0x5d4f9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %17, %3\l  %27 = icmp slt i32 %25, %4\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %78\l|{<s0>T|<s1>F}}"];
	Node0x5d4f9b0:s0 -> Node0x5d533b0;
	Node0x5d4f9b0:s1 -> Node0x5d53440;
	Node0x5d533b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%29:\l29:                                               \l  %30 = add nsw i32 %2, -1\l  %31 = mul nsw i32 %25, %3\l  %32 = add nsw i32 %31, %17\l  %33 = mul nsw i32 %32, %30\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %34\l  %36 = icmp slt i32 %6, %7\l  br i1 %36, label %37, label %51\l|{<s0>T|<s1>F}}"];
	Node0x5d533b0:s0 -> Node0x5d53aa0;
	Node0x5d533b0:s1 -> Node0x5d53b30;
	Node0x5d53aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi i32 [ %49, %37 ], [ %6, %29 ]\l  %39 = phi float [ %45, %37 ], [ 0.000000e+00, %29 ]\l  %40 = phi float [ %48, %37 ], [ 0.000000e+00, %29 ]\l  %41 = sext i32 %38 to i64\l  %42 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %35, i64 %41\l  %43 = getelementptr %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(1)* %42, i64 0, i32 0, i32 0, i32 0, i64 0\l  %44 = load float, float addrspace(1)* %43, align 8, !tbaa !7\l  %45 = fadd contract float %39, %44\l  %46 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %42, i64 0, i32 0, i32 0, i32 0, i64 1\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fadd contract float %40, %47\l  %49 = add nsw i32 %38, 1\l  %50 = icmp slt i32 %49, %7\l  br i1 %50, label %37, label %67, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5d53aa0:s0 -> Node0x5d53aa0;
	Node0x5d53aa0:s1 -> Node0x5d55800;
	Node0x5d53b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%51:\l51:                                               \l  %52 = icmp slt i32 %7, %6\l  br i1 %52, label %53, label %67\l|{<s0>T|<s1>F}}"];
	Node0x5d53b30:s0 -> Node0x5d55a90;
	Node0x5d53b30:s1 -> Node0x5d55800;
	Node0x5d55a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%53:\l53:                                               \l  %54 = phi i32 [ %65, %53 ], [ %7, %51 ]\l  %55 = phi float [ %61, %53 ], [ 0.000000e+00, %51 ]\l  %56 = phi float [ %64, %53 ], [ 0.000000e+00, %51 ]\l  %57 = sext i32 %54 to i64\l  %58 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %35, i64 %57\l  %59 = getelementptr %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(1)* %58, i64 0, i32 0, i32 0, i32 0, i64 0\l  %60 = load float, float addrspace(1)* %59, align 8, !tbaa !7\l  %61 = fsub contract float %55, %60\l  %62 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %58, i64 0, i32 0, i32 0, i32 0, i64 1\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %64 = fsub contract float %56, %63\l  %65 = add nsw i32 %54, 1\l  %66 = icmp slt i32 %65, %6\l  br i1 %66, label %53, label %67, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5d55a90:s0 -> Node0x5d55a90;
	Node0x5d55a90:s1 -> Node0x5d55800;
	Node0x5d55800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%67:\l67:                                               \l  %68 = phi float [ 0.000000e+00, %51 ], [ %48, %37 ], [ %64, %53 ]\l  %69 = phi float [ 0.000000e+00, %51 ], [ %45, %37 ], [ %61, %53 ]\l  %70 = bitcast %struct.HIP_vector_type addrspace(1)* %0 to i8 addrspace(1)*\l  %71 = mul nsw i32 %25, %5\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds i8, i8 addrspace(1)* %70, i64 %72\l  %74 = bitcast i8 addrspace(1)* %73 to %struct.HIP_vector_type addrspace(1)*\l  %75 = sext i32 %17 to i64\l  %76 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %74, i64 %75, i32 0, i32 0, i32 0, i64 0\l  store float %69, float addrspace(1)* %76, align 8\l  %77 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %74, i64 %75, i32 0, i32 0, i32 0, i64 1\l  store float %68, float addrspace(1)* %77, align 4\l  br label %78\l}"];
	Node0x5d55800 -> Node0x5d53440;
	Node0x5d53440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%78:\l78:                                               \l  ret void\l}"];
}
