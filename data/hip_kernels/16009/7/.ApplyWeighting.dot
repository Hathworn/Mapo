digraph "CFG for 'ApplyWeighting' function" {
	label="CFG for 'ApplyWeighting' function";

	Node0x5eb0f70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = icmp slt i32 %16, %3\l  %26 = icmp slt i32 %24, %4\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %85\l|{<s0>T|<s1>F}}"];
	Node0x5eb0f70:s0 -> Node0x5eb5750;
	Node0x5eb0f70:s1 -> Node0x5eb57e0;
	Node0x5eb5750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%28:\l28:                                               \l  %29 = bitcast %struct.HIP_vector_type addrspace(1)* %0 to i8 addrspace(1)*\l  %30 = mul nsw i32 %24, %5\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i8, i8 addrspace(1)* %29, i64 %31\l  %33 = bitcast i8 addrspace(1)* %32 to %struct.HIP_vector_type addrspace(1)*\l  %34 = sext i32 %16 to i64\l  %35 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %33, i64 %34, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  %36 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %33, i64 %34, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  %37 = load float, float addrspace(1)* %36, align 4, !amdgpu.noclobber !5\l  %38 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %33, i64 %34, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  %39 = load float, float addrspace(1)* %38, align 4, !amdgpu.noclobber !5\l  %40 = bitcast %struct.HIP_vector_type addrspace(1)* %1 to i8 addrspace(1)*\l  %41 = getelementptr inbounds i8, i8 addrspace(1)* %40, i64 %31\l  %42 = bitcast i8 addrspace(1)* %41 to %struct.HIP_vector_type addrspace(1)*\l  %43 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %42, i64 %34, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  %44 = load float, float addrspace(1)* %43, align 4, !amdgpu.noclobber !5\l  %45 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %42, i64 %34, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  %46 = load float, float addrspace(1)* %45, align 4, !amdgpu.noclobber !5\l  %47 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %42, i64 %34, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  %48 = load float, float addrspace(1)* %47, align 4, !amdgpu.noclobber !5\l  %49 = bitcast %struct.HIP_vector_type addrspace(1)* %2 to i8 addrspace(1)*\l  %50 = getelementptr inbounds i8, i8 addrspace(1)* %49, i64 %31\l  %51 = bitcast i8 addrspace(1)* %50 to %struct.HIP_vector_type addrspace(1)*\l  %52 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %51, i64 %34, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  %53 = load float, float addrspace(1)* %52, align 4, !amdgpu.noclobber !5\l  %54 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %51, i64 %34, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  %55 = load float, float addrspace(1)* %54, align 4, !amdgpu.noclobber !5\l  %56 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %51, i64 %34, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  %57 = load float, float addrspace(1)* %56, align 4, !amdgpu.noclobber !5\l  %58 = fcmp contract olt float %53, %6\l  br i1 %58, label %59, label %63\l|{<s0>T|<s1>F}}"];
	Node0x5eb5750:s0 -> Node0x5eb7060;
	Node0x5eb5750:s1 -> Node0x5eb70b0;
	Node0x5eb7060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%59:\l59:                                               \l  %60 = load float, float addrspace(1)* %35, align 4, !amdgpu.noclobber !5\l  %61 = fadd contract float %44, %60\l  %62 = fadd contract float %53, 1.000000e+00\l  br label %63\l}"];
	Node0x5eb7060 -> Node0x5eb70b0;
	Node0x5eb70b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%63:\l63:                                               \l  %64 = phi float [ %61, %59 ], [ %44, %28 ]\l  %65 = phi float [ %62, %59 ], [ %53, %28 ]\l  %66 = fcmp contract une float %65, 0.000000e+00\l  %67 = fdiv contract float %64, %65\l  %68 = select i1 %66, float %67, float 0.000000e+00\l  %69 = fcmp contract olt float %55, %6\l  %70 = fadd contract float %55, 1.000000e+00\l  %71 = select i1 %69, float %37, float -0.000000e+00\l  %72 = fadd contract float %46, %71\l  %73 = select i1 %69, float %70, float %55\l  %74 = fcmp contract une float %73, 0.000000e+00\l  %75 = fdiv contract float %72, %73\l  %76 = select i1 %74, float %75, float 0.000000e+00\l  %77 = fcmp contract olt float %57, %6\l  %78 = fadd contract float %57, 1.000000e+00\l  %79 = select i1 %77, float %39, float -0.000000e+00\l  %80 = fadd contract float %48, %79\l  %81 = select i1 %77, float %78, float %57\l  %82 = fcmp contract une float %81, 0.000000e+00\l  %83 = fdiv contract float %80, %81\l  %84 = select i1 %82, float %83, float 0.000000e+00\l  store float %68, float addrspace(1)* %35, align 4\l  store float %76, float addrspace(1)* %36, align 4\l  store float %84, float addrspace(1)* %38, align 4\l  br label %85\l}"];
	Node0x5eb70b0 -> Node0x5eb57e0;
	Node0x5eb57e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  ret void\l}"];
}
