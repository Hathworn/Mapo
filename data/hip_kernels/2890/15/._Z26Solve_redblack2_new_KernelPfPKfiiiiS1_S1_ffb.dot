digraph "CFG for '_Z26Solve_redblack2_new_KernelPfPKfiiiiS1_S1_ffb' function" {
	label="CFG for '_Z26Solve_redblack2_new_KernelPfPKfiiiiS1_S1_ffb' function";

	Node0x47da830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %16 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %17 = getelementptr i8, i8 addrspace(4)* %16, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %12, %20\l  %22 = add i32 %21, %14\l  %23 = getelementptr i8, i8 addrspace(4)* %16, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !5, !invariant.load !6\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %13, %26\l  %28 = add i32 %27, %15\l  %29 = srem i32 %28, 2\l  %30 = xor i1 %10, true\l  %31 = zext i1 %30 to i32\l  %32 = add nsw i32 %29, %31\l  %33 = shl nsw i32 %22, 1\l  %34 = add nsw i32 %32, %33\l  %35 = icmp slt i32 %34, %2\l  %36 = icmp slt i32 %28, %3\l  %37 = select i1 %35, i1 %36, i1 false\l  br i1 %37, label %38, label %126\l|{<s0>T|<s1>F}}"];
	Node0x47da830:s0 -> Node0x47df5c0;
	Node0x47da830:s1 -> Node0x47df650;
	Node0x47df5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%38:\l38:                                               \l  %39 = mul nsw i32 %28, %2\l  %40 = add nsw i32 %34, %39\l  %41 = mul nsw i32 %4, %2\l  %42 = mul nsw i32 %40, %4\l  %43 = add nsw i32 %42, %5\l  %44 = icmp sgt i32 %28, 0\l  br i1 %44, label %45, label %58\l|{<s0>T|<s1>F}}"];
	Node0x47df5c0:s0 -> Node0x47dfb20;
	Node0x47df5c0:s1 -> Node0x47dfb70;
	Node0x47dfb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%45:\l45:                                               \l  %46 = sub nsw i32 %40, %2\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %7, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %50 = fmul contract float %49, %8\l  %51 = fadd contract float %50, 0.000000e+00\l  %52 = sub nsw i32 %43, %41\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %56 = fmul contract float %50, %55\l  %57 = fadd contract float %56, 0.000000e+00\l  br label %58\l}"];
	Node0x47dfb20 -> Node0x47dfb70;
	Node0x47dfb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%58:\l58:                                               \l  %59 = phi float [ %51, %45 ], [ 0.000000e+00, %38 ]\l  %60 = phi float [ %57, %45 ], [ 0.000000e+00, %38 ]\l  %61 = add nsw i32 %3, -1\l  %62 = icmp slt i32 %28, %61\l  br i1 %62, label %63, label %75\l|{<s0>T|<s1>F}}"];
	Node0x47dfb70:s0 -> Node0x47e1850;
	Node0x47dfb70:s1 -> Node0x47e18a0;
	Node0x47e1850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%63:\l63:                                               \l  %64 = sext i32 %40 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %7, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %67 = fmul contract float %66, %8\l  %68 = fadd contract float %59, %67\l  %69 = add nsw i32 %43, %41\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %73 = fmul contract float %67, %72\l  %74 = fadd contract float %60, %73\l  br label %75\l}"];
	Node0x47e1850 -> Node0x47e18a0;
	Node0x47e18a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%75:\l75:                                               \l  %76 = phi float [ %68, %63 ], [ %59, %58 ]\l  %77 = phi float [ %74, %63 ], [ %60, %58 ]\l  %78 = icmp sgt i32 %34, 0\l  br i1 %78, label %79, label %92\l|{<s0>T|<s1>F}}"];
	Node0x47e18a0:s0 -> Node0x47e2480;
	Node0x47e18a0:s1 -> Node0x47e24d0;
	Node0x47e2480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%79:\l79:                                               \l  %80 = add nsw i32 %40, -1\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %6, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %84 = fmul contract float %83, %8\l  %85 = fadd contract float %76, %84\l  %86 = sub nsw i32 %43, %4\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %90 = fmul contract float %84, %89\l  %91 = fadd contract float %77, %90\l  br label %92\l}"];
	Node0x47e2480 -> Node0x47e24d0;
	Node0x47e24d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%92:\l92:                                               \l  %93 = phi float [ %85, %79 ], [ %76, %75 ]\l  %94 = phi float [ %91, %79 ], [ %77, %75 ]\l  %95 = add nsw i32 %2, -1\l  %96 = icmp slt i32 %34, %95\l  br i1 %96, label %97, label %109\l|{<s0>T|<s1>F}}"];
	Node0x47e24d0:s0 -> Node0x47e2fa0;
	Node0x47e24d0:s1 -> Node0x47e2ff0;
	Node0x47e2fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%97:\l97:                                               \l  %98 = sext i32 %40 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %6, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %101 = fmul contract float %100, %8\l  %102 = fadd contract float %93, %101\l  %103 = add nsw i32 %43, %4\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %0, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %107 = fmul contract float %101, %106\l  %108 = fadd contract float %94, %107\l  br label %109\l}"];
	Node0x47e2fa0 -> Node0x47e2ff0;
	Node0x47e2ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%109:\l109:                                              \l  %110 = phi float [ %102, %97 ], [ %93, %92 ]\l  %111 = phi float [ %108, %97 ], [ %94, %92 ]\l  %112 = fadd contract float %110, 1.000000e+00\l  %113 = sext i32 %43 to i64\l  %114 = fcmp contract ogt float %112, 0.000000e+00\l  br i1 %114, label %115, label %126\l|{<s0>T|<s1>F}}"];
	Node0x47e2ff0:s0 -> Node0x47e3aa0;
	Node0x47e2ff0:s1 -> Node0x47df650;
	Node0x47e3aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%115:\l115:                                              \l  %116 = getelementptr inbounds float, float addrspace(1)* %1, i64 %113\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %118 = fadd contract float %111, %117\l  %119 = fdiv contract float %118, %112\l  %120 = fmul contract float %119, %9\l  %121 = getelementptr inbounds float, float addrspace(1)* %0, i64 %113\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %123 = fsub contract float 1.000000e+00, %9\l  %124 = fmul contract float %123, %122\l  %125 = fadd contract float %124, %120\l  store float %125, float addrspace(1)* %121, align 4, !tbaa !7\l  br label %126\l}"];
	Node0x47e3aa0 -> Node0x47df650;
	Node0x47df650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%126:\l126:                                              \l  ret void\l}"];
}
