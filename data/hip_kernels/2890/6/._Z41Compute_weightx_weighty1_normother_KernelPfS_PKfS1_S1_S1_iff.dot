digraph "CFG for '_Z41Compute_weightx_weighty1_normother_KernelPfS_PKfS1_S1_S1_iff' function" {
	label="CFG for '_Z41Compute_weightx_weighty1_normother_KernelPfS_PKfS1_S1_S1_iff' function";

	Node0x4cd8800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %10, %16\l  %18 = add i32 %17, %11\l  %19 = icmp slt i32 %18, %6\l  br i1 %19, label %20, label %425\l|{<s0>T|<s1>F}}"];
	Node0x4cd8800:s0 -> Node0x4cdb520;
	Node0x4cd8800:s1 -> Node0x4cdb5b0;
	Node0x4cdb520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%20:\l20:                                               \l  %21 = sext i32 %18 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %2, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %24 = getelementptr inbounds float, float addrspace(1)* %4, i64 %21\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %26 = fsub contract float 2.000000e+00, %7\l  %27 = tail call float @llvm.fabs.f32(float %25)\l  %28 = tail call float @llvm.amdgcn.frexp.mant.f32(float %27)\l  %29 = fcmp olt float %28, 0x3FE5555560000000\l  %30 = zext i1 %29 to i32\l  %31 = tail call float @llvm.amdgcn.ldexp.f32(float %28, i32 %30)\l  %32 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %27)\l  %33 = sub nsw i32 %32, %30\l  %34 = fadd float %31, -1.000000e+00\l  %35 = fadd float %31, 1.000000e+00\l  %36 = fadd float %35, -1.000000e+00\l  %37 = fsub float %31, %36\l  %38 = tail call float @llvm.amdgcn.rcp.f32(float %35)\l  %39 = fmul float %34, %38\l  %40 = fmul float %35, %39\l  %41 = fneg float %40\l  %42 = tail call float @llvm.fma.f32(float %39, float %35, float %41)\l  %43 = tail call float @llvm.fma.f32(float %39, float %37, float %42)\l  %44 = fadd float %40, %43\l  %45 = fsub float %44, %40\l  %46 = fsub float %43, %45\l  %47 = fsub float %34, %44\l  %48 = fsub float %34, %47\l  %49 = fsub float %48, %44\l  %50 = fsub float %49, %46\l  %51 = fadd float %47, %50\l  %52 = fmul float %38, %51\l  %53 = fadd float %39, %52\l  %54 = fsub float %53, %39\l  %55 = fsub float %52, %54\l  %56 = fmul float %53, %53\l  %57 = fneg float %56\l  %58 = tail call float @llvm.fma.f32(float %53, float %53, float %57)\l  %59 = fmul float %55, 2.000000e+00\l  %60 = tail call float @llvm.fma.f32(float %53, float %59, float %58)\l  %61 = fadd float %56, %60\l  %62 = fsub float %61, %56\l  %63 = fsub float %60, %62\l  %64 = tail call float @llvm.fmuladd.f32(float %61, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %65 = tail call float @llvm.fmuladd.f32(float %61, float %64, float\l... 0x3FD999BDE0000000)\l  %66 = sitofp i32 %33 to float\l  %67 = fmul float %66, 0x3FE62E4300000000\l  %68 = fneg float %67\l  %69 = tail call float @llvm.fma.f32(float %66, float 0x3FE62E4300000000,\l... float %68)\l  %70 = tail call float @llvm.fma.f32(float %66, float 0xBE205C6100000000,\l... float %69)\l  %71 = fadd float %67, %70\l  %72 = fsub float %71, %67\l  %73 = fsub float %70, %72\l  %74 = tail call float @llvm.amdgcn.ldexp.f32(float %53, i32 1)\l  %75 = fmul float %53, %61\l  %76 = fneg float %75\l  %77 = tail call float @llvm.fma.f32(float %61, float %53, float %76)\l  %78 = tail call float @llvm.fma.f32(float %61, float %55, float %77)\l  %79 = tail call float @llvm.fma.f32(float %63, float %53, float %78)\l  %80 = fadd float %75, %79\l  %81 = fsub float %80, %75\l  %82 = fsub float %79, %81\l  %83 = fmul float %61, %65\l  %84 = fneg float %83\l  %85 = tail call float @llvm.fma.f32(float %61, float %65, float %84)\l  %86 = tail call float @llvm.fma.f32(float %63, float %65, float %85)\l  %87 = fadd float %83, %86\l  %88 = fsub float %87, %83\l  %89 = fsub float %86, %88\l  %90 = fadd float %87, 0x3FE5555540000000\l  %91 = fadd float %90, 0xBFE5555540000000\l  %92 = fsub float %87, %91\l  %93 = fadd float %89, 0x3E2E720200000000\l  %94 = fadd float %93, %92\l  %95 = fadd float %90, %94\l  %96 = fsub float %95, %90\l  %97 = fsub float %94, %96\l  %98 = fmul float %80, %95\l  %99 = fneg float %98\l  %100 = tail call float @llvm.fma.f32(float %80, float %95, float %99)\l  %101 = tail call float @llvm.fma.f32(float %80, float %97, float %100)\l  %102 = tail call float @llvm.fma.f32(float %82, float %95, float %101)\l  %103 = tail call float @llvm.amdgcn.ldexp.f32(float %55, i32 1)\l  %104 = fadd float %98, %102\l  %105 = fsub float %104, %98\l  %106 = fsub float %102, %105\l  %107 = fadd float %74, %104\l  %108 = fsub float %107, %74\l  %109 = fsub float %104, %108\l  %110 = fadd float %103, %106\l  %111 = fadd float %110, %109\l  %112 = fadd float %107, %111\l  %113 = fsub float %112, %107\l  %114 = fsub float %111, %113\l  %115 = fadd float %71, %112\l  %116 = fsub float %115, %71\l  %117 = fsub float %115, %116\l  %118 = fsub float %71, %117\l  %119 = fsub float %112, %116\l  %120 = fadd float %119, %118\l  %121 = fadd float %73, %114\l  %122 = fsub float %121, %73\l  %123 = fsub float %121, %122\l  %124 = fsub float %73, %123\l  %125 = fsub float %114, %122\l  %126 = fadd float %125, %124\l  %127 = fadd float %121, %120\l  %128 = fadd float %115, %127\l  %129 = fsub float %128, %115\l  %130 = fsub float %127, %129\l  %131 = fadd float %126, %130\l  %132 = fadd float %128, %131\l  %133 = fsub float %132, %128\l  %134 = fsub float %131, %133\l  %135 = fmul float %26, %132\l  %136 = fneg float %135\l  %137 = tail call float @llvm.fma.f32(float %26, float %132, float %136)\l  %138 = tail call float @llvm.fma.f32(float %26, float %134, float %137)\l  %139 = fadd float %135, %138\l  %140 = tail call float @llvm.fabs.f32(float %135) #3\l  %141 = fcmp oeq float %140, 0x7FF0000000000000\l  %142 = select i1 %141, float %135, float %139\l  %143 = fcmp oeq float %142, 0x40562E4300000000\l  %144 = select i1 %143, float 0x3EE0000000000000, float 0.000000e+00\l  %145 = fsub float %142, %144\l  %146 = fmul float %145, 0x3FF7154760000000\l  %147 = tail call float @llvm.rint.f32(float %146)\l  %148 = fcmp ogt float %145, 0x40562E4300000000\l  %149 = fcmp olt float %145, 0xC059D1DA00000000\l  %150 = fneg float %146\l  %151 = tail call float @llvm.fma.f32(float %145, float 0x3FF7154760000000,\l... float %150)\l  %152 = tail call float @llvm.fma.f32(float %145, float 0x3E54AE0BE0000000,\l... float %151)\l  %153 = fsub float %146, %147\l  %154 = fadd float %152, %153\l  %155 = tail call float @llvm.exp2.f32(float %154)\l  %156 = fptosi float %147 to i32\l  %157 = tail call float @llvm.amdgcn.ldexp.f32(float %155, i32 %156)\l  %158 = select i1 %149, float 0.000000e+00, float %157\l  %159 = select i1 %148, float 0x7FF0000000000000, float %158\l  %160 = tail call float @llvm.fabs.f32(float %26)\l  %161 = tail call float @llvm.trunc.f32(float %160)\l  %162 = fcmp oeq float %160, %161\l  %163 = zext i1 %162 to i32\l  %164 = fmul float %161, 5.000000e-01\l  %165 = tail call float @llvm.amdgcn.fract.f32(float %164)\l  %166 = tail call i1 @llvm.amdgcn.class.f32(float %164, i32 516)\l  %167 = select i1 %166, float 0.000000e+00, float %165\l  %168 = fcmp oeq float %167, 0.000000e+00\l  %169 = and i1 %162, %168\l  %170 = zext i1 %169 to i32\l  %171 = add nuw nsw i32 %170, %163\l  %172 = icmp eq i32 %171, 1\l  %173 = icmp ne i32 %171, 0\l  %174 = fcmp oeq float %160, 0x7FF0000000000000\l  br i1 %174, label %175, label %213\l|{<s0>T|<s1>F}}"];
	Node0x4cdb520:s0 -> Node0x4ce5270;
	Node0x4cdb520:s1 -> Node0x4ce5300;
	Node0x4ce5270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%175:\l175:                                              \l  %176 = fcmp oeq float %27, 1.000000e+00\l  %177 = fadd float %27, -1.000000e+00\l  %178 = bitcast float %26 to i32\l  %179 = bitcast float %177 to i32\l  %180 = xor i32 %179, %178\l  %181 = icmp sgt i32 %180, -1\l  %182 = select i1 %181, float 0x7FF0000000000000, float 0.000000e+00\l  %183 = select i1 %176, float %27, float %182\l  %184 = fcmp oeq float %27, 0x7FF0000000000000\l  %185 = fcmp oeq float %25, 0.000000e+00\l  %186 = or i1 %185, %184\l  %187 = fcmp olt float %26, 0.000000e+00\l  %188 = xor i1 %187, %185\l  %189 = select i1 %188, float 0.000000e+00, float 0x7FF0000000000000\l  %190 = select i1 %172, float %25, float 0.000000e+00\l  %191 = tail call float @llvm.copysign.f32(float %189, float %190)\l  %192 = select i1 %186, float %191, float %183\l  %193 = fcmp uno float %25, %26\l  %194 = select i1 %193, float 0x7FF8000000000000, float %192\l  %195 = fcmp oeq float %25, 1.000000e+00\l  %196 = fcmp oeq float %26, 0.000000e+00\l  %197 = or i1 %196, %195\l  %198 = select i1 %197, float 1.000000e+00, float %194\l  %199 = fadd contract float %198, %8\l  %200 = fdiv contract float %23, %199\l  %201 = getelementptr inbounds float, float addrspace(1)* %0, i64 %21\l  store float %200, float addrspace(1)* %201, align 4, !tbaa !7\l  %202 = getelementptr inbounds float, float addrspace(1)* %5, i64 %21\l  %203 = load float, float addrspace(1)* %202, align 4, !tbaa !7\l  %204 = tail call float @llvm.fabs.f32(float %203)\l  %205 = fcmp oeq float %204, 1.000000e+00\l  %206 = fadd float %204, -1.000000e+00\l  %207 = bitcast float %26 to i32\l  %208 = bitcast float %206 to i32\l  %209 = xor i32 %208, %207\l  %210 = icmp sgt i32 %209, -1\l  %211 = select i1 %210, float 0x7FF0000000000000, float 0.000000e+00\l  %212 = select i1 %205, float %204, float %211\l  br label %401\l}"];
	Node0x4ce5270 -> Node0x4ce6cf0;
	Node0x4ce5300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%213:\l213:                                              \l  %214 = fcmp uge float %25, 0.000000e+00\l  %215 = select i1 %214, i1 true, i1 %173\l  %216 = tail call float @llvm.fabs.f32(float %159) #3\l  %217 = fcmp oeq float %216, 0x7FF0000000000000\l  %218 = tail call float @llvm.fabs.f32(float %142) #3\l  %219 = fcmp oeq float %218, 0x7FF0000000000000\l  %220 = fsub float %139, %135\l  %221 = fsub float %138, %220\l  %222 = select i1 %219, float 0.000000e+00, float %221\l  %223 = fadd float %144, %222\l  %224 = tail call float @llvm.fma.f32(float %159, float %223, float %159)\l  %225 = select i1 %217, float %159, float %224\l  %226 = fcmp olt float %25, 0.000000e+00\l  %227 = and i1 %172, %226\l  %228 = select i1 %227, float -0.000000e+00, float 0.000000e+00\l  %229 = tail call float @llvm.copysign.f32(float %225, float %228)\l  %230 = select i1 %215, float %229, float 0x7FF8000000000000\l  %231 = fcmp oeq float %27, 0x7FF0000000000000\l  %232 = fcmp oeq float %25, 0.000000e+00\l  %233 = or i1 %232, %231\l  %234 = fcmp olt float %26, 0.000000e+00\l  %235 = xor i1 %234, %232\l  %236 = select i1 %235, float 0.000000e+00, float 0x7FF0000000000000\l  %237 = select i1 %172, float %25, float 0.000000e+00\l  %238 = tail call float @llvm.copysign.f32(float %236, float %237)\l  %239 = select i1 %233, float %238, float %230\l  %240 = fcmp uno float %25, %26\l  %241 = select i1 %240, float 0x7FF8000000000000, float %239\l  %242 = fcmp oeq float %25, 1.000000e+00\l  %243 = fcmp oeq float %26, 0.000000e+00\l  %244 = or i1 %243, %242\l  %245 = select i1 %244, float 1.000000e+00, float %241\l  %246 = fadd contract float %245, %8\l  %247 = fdiv contract float %23, %246\l  %248 = getelementptr inbounds float, float addrspace(1)* %0, i64 %21\l  store float %247, float addrspace(1)* %248, align 4, !tbaa !7\l  %249 = getelementptr inbounds float, float addrspace(1)* %5, i64 %21\l  %250 = load float, float addrspace(1)* %249, align 4, !tbaa !7\l  %251 = tail call float @llvm.fabs.f32(float %250)\l  %252 = tail call float @llvm.amdgcn.frexp.mant.f32(float %251)\l  %253 = fcmp olt float %252, 0x3FE5555560000000\l  %254 = zext i1 %253 to i32\l  %255 = tail call float @llvm.amdgcn.ldexp.f32(float %252, i32 %254)\l  %256 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %251)\l  %257 = sub nsw i32 %256, %254\l  %258 = fadd float %255, -1.000000e+00\l  %259 = fadd float %255, 1.000000e+00\l  %260 = fadd float %259, -1.000000e+00\l  %261 = fsub float %255, %260\l  %262 = tail call float @llvm.amdgcn.rcp.f32(float %259)\l  %263 = fmul float %258, %262\l  %264 = fmul float %259, %263\l  %265 = fneg float %264\l  %266 = tail call float @llvm.fma.f32(float %263, float %259, float %265)\l  %267 = tail call float @llvm.fma.f32(float %263, float %261, float %266)\l  %268 = fadd float %264, %267\l  %269 = fsub float %268, %264\l  %270 = fsub float %267, %269\l  %271 = fsub float %258, %268\l  %272 = fsub float %258, %271\l  %273 = fsub float %272, %268\l  %274 = fsub float %273, %270\l  %275 = fadd float %271, %274\l  %276 = fmul float %262, %275\l  %277 = fadd float %263, %276\l  %278 = fsub float %277, %263\l  %279 = fsub float %276, %278\l  %280 = fmul float %277, %277\l  %281 = fneg float %280\l  %282 = tail call float @llvm.fma.f32(float %277, float %277, float %281)\l  %283 = fmul float %279, 2.000000e+00\l  %284 = tail call float @llvm.fma.f32(float %277, float %283, float %282)\l  %285 = fadd float %280, %284\l  %286 = fsub float %285, %280\l  %287 = fsub float %284, %286\l  %288 = tail call float @llvm.fmuladd.f32(float %285, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %289 = tail call float @llvm.fmuladd.f32(float %285, float %288, float\l... 0x3FD999BDE0000000)\l  %290 = sitofp i32 %257 to float\l  %291 = fmul float %290, 0x3FE62E4300000000\l  %292 = fneg float %291\l  %293 = tail call float @llvm.fma.f32(float %290, float 0x3FE62E4300000000,\l... float %292)\l  %294 = tail call float @llvm.fma.f32(float %290, float 0xBE205C6100000000,\l... float %293)\l  %295 = fadd float %291, %294\l  %296 = fsub float %295, %291\l  %297 = fsub float %294, %296\l  %298 = tail call float @llvm.amdgcn.ldexp.f32(float %277, i32 1)\l  %299 = fmul float %277, %285\l  %300 = fneg float %299\l  %301 = tail call float @llvm.fma.f32(float %285, float %277, float %300)\l  %302 = tail call float @llvm.fma.f32(float %285, float %279, float %301)\l  %303 = tail call float @llvm.fma.f32(float %287, float %277, float %302)\l  %304 = fadd float %299, %303\l  %305 = fsub float %304, %299\l  %306 = fsub float %303, %305\l  %307 = fmul float %285, %289\l  %308 = fneg float %307\l  %309 = tail call float @llvm.fma.f32(float %285, float %289, float %308)\l  %310 = tail call float @llvm.fma.f32(float %287, float %289, float %309)\l  %311 = fadd float %307, %310\l  %312 = fsub float %311, %307\l  %313 = fsub float %310, %312\l  %314 = fadd float %311, 0x3FE5555540000000\l  %315 = fadd float %314, 0xBFE5555540000000\l  %316 = fsub float %311, %315\l  %317 = fadd float %313, 0x3E2E720200000000\l  %318 = fadd float %317, %316\l  %319 = fadd float %314, %318\l  %320 = fsub float %319, %314\l  %321 = fsub float %318, %320\l  %322 = fmul float %304, %319\l  %323 = fneg float %322\l  %324 = tail call float @llvm.fma.f32(float %304, float %319, float %323)\l  %325 = tail call float @llvm.fma.f32(float %304, float %321, float %324)\l  %326 = tail call float @llvm.fma.f32(float %306, float %319, float %325)\l  %327 = tail call float @llvm.amdgcn.ldexp.f32(float %279, i32 1)\l  %328 = fadd float %322, %326\l  %329 = fsub float %328, %322\l  %330 = fsub float %326, %329\l  %331 = fadd float %298, %328\l  %332 = fsub float %331, %298\l  %333 = fsub float %328, %332\l  %334 = fadd float %327, %330\l  %335 = fadd float %334, %333\l  %336 = fadd float %331, %335\l  %337 = fsub float %336, %331\l  %338 = fsub float %335, %337\l  %339 = fadd float %295, %336\l  %340 = fsub float %339, %295\l  %341 = fsub float %339, %340\l  %342 = fsub float %295, %341\l  %343 = fsub float %336, %340\l  %344 = fadd float %343, %342\l  %345 = fadd float %297, %338\l  %346 = fsub float %345, %297\l  %347 = fsub float %345, %346\l  %348 = fsub float %297, %347\l  %349 = fsub float %338, %346\l  %350 = fadd float %349, %348\l  %351 = fadd float %345, %344\l  %352 = fadd float %339, %351\l  %353 = fsub float %352, %339\l  %354 = fsub float %351, %353\l  %355 = fadd float %350, %354\l  %356 = fadd float %352, %355\l  %357 = fsub float %356, %352\l  %358 = fsub float %355, %357\l  %359 = fmul float %26, %356\l  %360 = fneg float %359\l  %361 = tail call float @llvm.fma.f32(float %26, float %356, float %360)\l  %362 = tail call float @llvm.fma.f32(float %26, float %358, float %361)\l  %363 = fadd float %359, %362\l  %364 = fsub float %363, %359\l  %365 = fsub float %362, %364\l  %366 = tail call float @llvm.fabs.f32(float %359) #3\l  %367 = fcmp oeq float %366, 0x7FF0000000000000\l  %368 = select i1 %367, float %359, float %363\l  %369 = tail call float @llvm.fabs.f32(float %368) #3\l  %370 = fcmp oeq float %369, 0x7FF0000000000000\l  %371 = select i1 %370, float 0.000000e+00, float %365\l  %372 = fcmp oeq float %368, 0x40562E4300000000\l  %373 = select i1 %372, float 0x3EE0000000000000, float 0.000000e+00\l  %374 = fsub float %368, %373\l  %375 = fadd float %373, %371\l  %376 = fmul float %374, 0x3FF7154760000000\l  %377 = tail call float @llvm.rint.f32(float %376)\l  %378 = fcmp ogt float %374, 0x40562E4300000000\l  %379 = fcmp olt float %374, 0xC059D1DA00000000\l  %380 = fneg float %376\l  %381 = tail call float @llvm.fma.f32(float %374, float 0x3FF7154760000000,\l... float %380)\l  %382 = tail call float @llvm.fma.f32(float %374, float 0x3E54AE0BE0000000,\l... float %381)\l  %383 = fsub float %376, %377\l  %384 = fadd float %382, %383\l  %385 = tail call float @llvm.exp2.f32(float %384)\l  %386 = fptosi float %377 to i32\l  %387 = tail call float @llvm.amdgcn.ldexp.f32(float %385, i32 %386)\l  %388 = select i1 %379, float 0.000000e+00, float %387\l  %389 = select i1 %378, float 0x7FF0000000000000, float %388\l  %390 = tail call float @llvm.fma.f32(float %389, float %375, float %389)\l  %391 = tail call float @llvm.fabs.f32(float %389) #3\l  %392 = fcmp oeq float %391, 0x7FF0000000000000\l  %393 = select i1 %392, float %389, float %390\l  %394 = fcmp olt float %250, 0.000000e+00\l  %395 = and i1 %172, %394\l  %396 = select i1 %395, float -0.000000e+00, float 0.000000e+00\l  %397 = tail call float @llvm.copysign.f32(float %393, float %396)\l  %398 = fcmp uge float %250, 0.000000e+00\l  %399 = select i1 %398, i1 true, i1 %173\l  %400 = select i1 %399, float %397, float 0x7FF8000000000000\l  br label %401\l}"];
	Node0x4ce5300 -> Node0x4ce6cf0;
	Node0x4ce6cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%401:\l401:                                              \l  %402 = phi float [ %251, %213 ], [ %204, %175 ]\l  %403 = phi float [ %250, %213 ], [ %203, %175 ]\l  %404 = phi i1 [ %243, %213 ], [ %196, %175 ]\l  %405 = phi i1 [ %234, %213 ], [ %187, %175 ]\l  %406 = phi float [ %400, %213 ], [ %212, %175 ]\l  %407 = getelementptr inbounds float, float addrspace(1)* %3, i64 %21\l  %408 = load float, float addrspace(1)* %407, align 4, !tbaa !7\l  %409 = fcmp oeq float %402, 0x7FF0000000000000\l  %410 = fcmp oeq float %403, 0.000000e+00\l  %411 = or i1 %410, %409\l  %412 = xor i1 %405, %410\l  %413 = select i1 %412, float 0.000000e+00, float 0x7FF0000000000000\l  %414 = select i1 %172, float %403, float 0.000000e+00\l  %415 = tail call float @llvm.copysign.f32(float %413, float %414)\l  %416 = select i1 %411, float %415, float %406\l  %417 = fcmp uno float %403, %26\l  %418 = select i1 %417, float 0x7FF8000000000000, float %416\l  %419 = fcmp oeq float %403, 1.000000e+00\l  %420 = or i1 %404, %419\l  %421 = select i1 %420, float 1.000000e+00, float %418\l  %422 = fadd contract float %421, %8\l  %423 = fdiv contract float %408, %422\l  %424 = getelementptr inbounds float, float addrspace(1)* %1, i64 %21\l  store float %423, float addrspace(1)* %424, align 4, !tbaa !7\l  br label %425\l}"];
	Node0x4ce6cf0 -> Node0x4cdb5b0;
	Node0x4cdb5b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%425:\l425:                                              \l  ret void\l}"];
}
