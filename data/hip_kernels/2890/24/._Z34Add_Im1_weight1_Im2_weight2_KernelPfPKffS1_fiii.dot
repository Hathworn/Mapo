digraph "CFG for '_Z34Add_Im1_weight1_Im2_weight2_KernelPfPKffS1_fiii' function" {
	label="CFG for '_Z34Add_Im1_weight1_Im2_weight2_KernelPfPKffS1_fiii' function";

	Node0x5c4dd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = add i32 %16, %9\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = add i32 %24, %18\l  %26 = icmp slt i32 %17, %5\l  %27 = icmp slt i32 %25, %6\l  %28 = select i1 %26, i1 %27, i1 false\l  %29 = icmp sgt i32 %7, 0\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %151\l|{<s0>T|<s1>F}}"];
	Node0x5c4dd20:s0 -> Node0x5c518d0;
	Node0x5c4dd20:s1 -> Node0x5c51960;
	Node0x5c518d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %25, %5\l  %33 = add nsw i32 %32, %17\l  %34 = mul nsw i32 %33, %7\l  %35 = and i32 %7, 7\l  %36 = icmp ult i32 %7, 8\l  br i1 %36, label %132, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5c518d0:s0 -> Node0x5c51ef0;
	Node0x5c518d0:s1 -> Node0x5c51f40;
	Node0x5c51f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%37:\l37:                                               \l  %38 = and i32 %7, -8\l  br label %39\l}"];
	Node0x5c51f40 -> Node0x5c52140;
	Node0x5c52140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%39:\l39:                                               \l  %40 = phi i32 [ 0, %37 ], [ %129, %39 ]\l  %41 = phi i32 [ 0, %37 ], [ %130, %39 ]\l  %42 = add nsw i32 %40, %34\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7\l  %46 = fmul contract float %45, %2\l  %47 = getelementptr inbounds float, float addrspace(1)* %3, i64 %43\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !7\l  %49 = fmul contract float %48, %4\l  %50 = fadd contract float %46, %49\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  store float %50, float addrspace(1)* %51, align 4, !tbaa !7\l  %52 = or i32 %40, 1\l  %53 = add nsw i32 %52, %34\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  %57 = fmul contract float %56, %2\l  %58 = getelementptr inbounds float, float addrspace(1)* %3, i64 %54\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = fmul contract float %59, %4\l  %61 = fadd contract float %57, %60\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  store float %61, float addrspace(1)* %62, align 4, !tbaa !7\l  %63 = or i32 %40, 2\l  %64 = add nsw i32 %63, %34\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7\l  %68 = fmul contract float %67, %2\l  %69 = getelementptr inbounds float, float addrspace(1)* %3, i64 %65\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7\l  %71 = fmul contract float %70, %4\l  %72 = fadd contract float %68, %71\l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %65\l  store float %72, float addrspace(1)* %73, align 4, !tbaa !7\l  %74 = or i32 %40, 3\l  %75 = add nsw i32 %74, %34\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %1, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !7\l  %79 = fmul contract float %78, %2\l  %80 = getelementptr inbounds float, float addrspace(1)* %3, i64 %76\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !7\l  %82 = fmul contract float %81, %4\l  %83 = fadd contract float %79, %82\l  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  store float %83, float addrspace(1)* %84, align 4, !tbaa !7\l  %85 = or i32 %40, 4\l  %86 = add nsw i32 %85, %34\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7\l  %90 = fmul contract float %89, %2\l  %91 = getelementptr inbounds float, float addrspace(1)* %3, i64 %87\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7\l  %93 = fmul contract float %92, %4\l  %94 = fadd contract float %90, %93\l  %95 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  store float %94, float addrspace(1)* %95, align 4, !tbaa !7\l  %96 = or i32 %40, 5\l  %97 = add nsw i32 %96, %34\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %1, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7\l  %101 = fmul contract float %100, %2\l  %102 = getelementptr inbounds float, float addrspace(1)* %3, i64 %98\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !7\l  %104 = fmul contract float %103, %4\l  %105 = fadd contract float %101, %104\l  %106 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  store float %105, float addrspace(1)* %106, align 4, !tbaa !7\l  %107 = or i32 %40, 6\l  %108 = add nsw i32 %107, %34\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %1, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !7\l  %112 = fmul contract float %111, %2\l  %113 = getelementptr inbounds float, float addrspace(1)* %3, i64 %109\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !7\l  %115 = fmul contract float %114, %4\l  %116 = fadd contract float %112, %115\l  %117 = getelementptr inbounds float, float addrspace(1)* %0, i64 %109\l  store float %116, float addrspace(1)* %117, align 4, !tbaa !7\l  %118 = or i32 %40, 7\l  %119 = add nsw i32 %118, %34\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %1, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7\l  %123 = fmul contract float %122, %2\l  %124 = getelementptr inbounds float, float addrspace(1)* %3, i64 %120\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !7\l  %126 = fmul contract float %125, %4\l  %127 = fadd contract float %123, %126\l  %128 = getelementptr inbounds float, float addrspace(1)* %0, i64 %120\l  store float %127, float addrspace(1)* %128, align 4, !tbaa !7\l  %129 = add nuw nsw i32 %40, 8\l  %130 = add i32 %41, 8\l  %131 = icmp eq i32 %130, %38\l  br i1 %131, label %132, label %39, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5c52140:s0 -> Node0x5c51ef0;
	Node0x5c52140:s1 -> Node0x5c52140;
	Node0x5c51ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%132:\l132:                                              \l  %133 = phi i32 [ 0, %31 ], [ %129, %39 ]\l  %134 = icmp eq i32 %35, 0\l  br i1 %134, label %151, label %135\l|{<s0>T|<s1>F}}"];
	Node0x5c51ef0:s0 -> Node0x5c51960;
	Node0x5c51ef0:s1 -> Node0x5c56b00;
	Node0x5c56b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%135:\l135:                                              \l  %136 = phi i32 [ %148, %135 ], [ %133, %132 ]\l  %137 = phi i32 [ %149, %135 ], [ 0, %132 ]\l  %138 = add nsw i32 %136, %34\l  %139 = sext i32 %138 to i64\l  %140 = getelementptr inbounds float, float addrspace(1)* %1, i64 %139\l  %141 = load float, float addrspace(1)* %140, align 4, !tbaa !7\l  %142 = fmul contract float %141, %2\l  %143 = getelementptr inbounds float, float addrspace(1)* %3, i64 %139\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !7\l  %145 = fmul contract float %144, %4\l  %146 = fadd contract float %142, %145\l  %147 = getelementptr inbounds float, float addrspace(1)* %0, i64 %139\l  store float %146, float addrspace(1)* %147, align 4, !tbaa !7\l  %148 = add nuw nsw i32 %136, 1\l  %149 = add i32 %137, 1\l  %150 = icmp eq i32 %149, %35\l  br i1 %150, label %151, label %135, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5c56b00:s0 -> Node0x5c51960;
	Node0x5c56b00:s1 -> Node0x5c56b00;
	Node0x5c51960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%151:\l151:                                              \l  ret void\l}"];
}
