digraph "CFG for '_Z26Solve_redblack1_new_KernelPfPKfiiiiS1_S1_S1_ffb' function" {
	label="CFG for '_Z26Solve_redblack1_new_KernelPfPKfiiiiS1_S1_S1_ffb' function";

	Node0x602a920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %17 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %18 = getelementptr i8, i8 addrspace(4)* %17, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %13, %21\l  %23 = add i32 %22, %15\l  %24 = getelementptr i8, i8 addrspace(4)* %17, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !5, !invariant.load !6\l  %27 = zext i16 %26 to i32\l  %28 = mul i32 %14, %27\l  %29 = add i32 %28, %16\l  %30 = srem i32 %29, 2\l  %31 = xor i1 %11, true\l  %32 = zext i1 %31 to i32\l  %33 = add nsw i32 %30, %32\l  %34 = shl nsw i32 %23, 1\l  %35 = add nsw i32 %33, %34\l  %36 = icmp slt i32 %35, %2\l  %37 = icmp slt i32 %29, %3\l  %38 = select i1 %36, i1 %37, i1 false\l  br i1 %38, label %39, label %130\l|{<s0>T|<s1>F}}"];
	Node0x602a920:s0 -> Node0x602f6f0;
	Node0x602a920:s1 -> Node0x602f780;
	Node0x602f6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%39:\l39:                                               \l  %40 = mul nsw i32 %29, %2\l  %41 = add nsw i32 %35, %40\l  %42 = mul nsw i32 %4, %2\l  %43 = mul nsw i32 %41, %4\l  %44 = add nsw i32 %43, %5\l  %45 = icmp sgt i32 %29, 0\l  br i1 %45, label %46, label %59\l|{<s0>T|<s1>F}}"];
	Node0x602f6f0:s0 -> Node0x602fc50;
	Node0x602f6f0:s1 -> Node0x602fca0;
	Node0x602fc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%46:\l46:                                               \l  %47 = sub nsw i32 %41, %2\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %8, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %51 = fmul contract float %50, %9\l  %52 = fadd contract float %51, 0.000000e+00\l  %53 = sub nsw i32 %44, %42\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %57 = fmul contract float %51, %56\l  %58 = fadd contract float %57, 0.000000e+00\l  br label %59\l}"];
	Node0x602fc50 -> Node0x602fca0;
	Node0x602fca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%59:\l59:                                               \l  %60 = phi float [ %52, %46 ], [ 0.000000e+00, %39 ]\l  %61 = phi float [ %58, %46 ], [ 0.000000e+00, %39 ]\l  %62 = add nsw i32 %3, -1\l  %63 = icmp slt i32 %29, %62\l  br i1 %63, label %64, label %76\l|{<s0>T|<s1>F}}"];
	Node0x602fca0:s0 -> Node0x6031980;
	Node0x602fca0:s1 -> Node0x60319d0;
	Node0x6031980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%64:\l64:                                               \l  %65 = sext i32 %41 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %8, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %68 = fmul contract float %67, %9\l  %69 = fadd contract float %60, %68\l  %70 = add nsw i32 %44, %42\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %74 = fmul contract float %68, %73\l  %75 = fadd contract float %61, %74\l  br label %76\l}"];
	Node0x6031980 -> Node0x60319d0;
	Node0x60319d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%76:\l76:                                               \l  %77 = phi float [ %69, %64 ], [ %60, %59 ]\l  %78 = phi float [ %75, %64 ], [ %61, %59 ]\l  %79 = icmp sgt i32 %35, 0\l  br i1 %79, label %80, label %93\l|{<s0>T|<s1>F}}"];
	Node0x60319d0:s0 -> Node0x60325d0;
	Node0x60319d0:s1 -> Node0x6032620;
	Node0x60325d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%80:\l80:                                               \l  %81 = add nsw i32 %41, -1\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %7, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %85 = fmul contract float %84, %9\l  %86 = fadd contract float %77, %85\l  %87 = sub nsw i32 %44, %4\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %91 = fmul contract float %85, %90\l  %92 = fadd contract float %78, %91\l  br label %93\l}"];
	Node0x60325d0 -> Node0x6032620;
	Node0x6032620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%93:\l93:                                               \l  %94 = phi float [ %86, %80 ], [ %77, %76 ]\l  %95 = phi float [ %92, %80 ], [ %78, %76 ]\l  %96 = add nsw i32 %2, -1\l  %97 = icmp slt i32 %35, %96\l  %98 = sext i32 %41 to i64\l  br i1 %97, label %99, label %110\l|{<s0>T|<s1>F}}"];
	Node0x6032620:s0 -> Node0x6033160;
	Node0x6032620:s1 -> Node0x60331b0;
	Node0x6033160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%99:\l99:                                               \l  %100 = getelementptr inbounds float, float addrspace(1)* %7, i64 %98\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %102 = fmul contract float %101, %9\l  %103 = fadd contract float %94, %102\l  %104 = add nsw i32 %44, %4\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %0, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %108 = fmul contract float %102, %107\l  %109 = fadd contract float %95, %108\l  br label %110\l}"];
	Node0x6033160 -> Node0x60331b0;
	Node0x60331b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%110:\l110:                                              \l  %111 = phi float [ %103, %99 ], [ %94, %93 ]\l  %112 = phi float [ %109, %99 ], [ %95, %93 ]\l  %113 = getelementptr inbounds float, float addrspace(1)* %6, i64 %98\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %115 = fadd contract float %111, %114\l  %116 = sext i32 %44 to i64\l  %117 = fcmp contract ogt float %115, 0.000000e+00\l  br i1 %117, label %118, label %130\l|{<s0>T|<s1>F}}"];
	Node0x60331b0:s0 -> Node0x6033d00;
	Node0x60331b0:s1 -> Node0x602f780;
	Node0x6033d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%118:\l118:                                              \l  %119 = getelementptr inbounds float, float addrspace(1)* %1, i64 %116\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %121 = fmul contract float %114, %120\l  %122 = fadd contract float %112, %121\l  %123 = fdiv contract float %122, %115\l  %124 = fmul contract float %123, %10\l  %125 = getelementptr inbounds float, float addrspace(1)* %0, i64 %116\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %127 = fsub contract float 1.000000e+00, %10\l  %128 = fmul contract float %127, %126\l  %129 = fadd contract float %128, %124\l  store float %129, float addrspace(1)* %125, align 4, !tbaa !7\l  br label %130\l}"];
	Node0x6033d00 -> Node0x602f780;
	Node0x602f780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%130:\l130:                                              \l  ret void\l}"];
}
