digraph "CFG for '_Z22Solve_redblack1_KernelPfPKfiiiiS1_S1_S1_ffb' function" {
	label="CFG for '_Z22Solve_redblack1_KernelPfPKfiiiiS1_S1_S1_ffb' function";

	Node0x509cb90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %17 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %18 = getelementptr i8, i8 addrspace(4)* %17, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %13, %21\l  %23 = add i32 %22, %15\l  %24 = getelementptr i8, i8 addrspace(4)* %17, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !5, !invariant.load !6\l  %27 = zext i16 %26 to i32\l  %28 = mul i32 %14, %27\l  %29 = add i32 %28, %16\l  %30 = icmp slt i32 %23, %2\l  %31 = icmp slt i32 %29, %3\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %129\l|{<s0>T|<s1>F}}"];
	Node0x509cb90:s0 -> Node0x509f120;
	Node0x509cb90:s1 -> Node0x509f1b0;
	Node0x509f120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%33:\l33:                                               \l  %34 = add nsw i32 %29, %23\l  %35 = srem i32 %34, 2\l  %36 = zext i1 %11 to i32\l  %37 = icmp eq i32 %35, %36\l  br i1 %37, label %129, label %38\l|{<s0>T|<s1>F}}"];
	Node0x509f120:s0 -> Node0x509f1b0;
	Node0x509f120:s1 -> Node0x50a16e0;
	Node0x50a16e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%38:\l38:                                               \l  %39 = mul nsw i32 %29, %2\l  %40 = add nsw i32 %39, %23\l  %41 = mul nsw i32 %4, %2\l  %42 = mul nsw i32 %40, %4\l  %43 = add nsw i32 %42, %5\l  %44 = icmp sgt i32 %29, 0\l  br i1 %44, label %45, label %58\l|{<s0>T|<s1>F}}"];
	Node0x50a16e0:s0 -> Node0x50a1b70;
	Node0x50a16e0:s1 -> Node0x50a1bc0;
	Node0x50a1b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%45:\l45:                                               \l  %46 = sub nsw i32 %40, %2\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %8, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %50 = fmul contract float %49, %9\l  %51 = fadd contract float %50, 0.000000e+00\l  %52 = sub nsw i32 %43, %41\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %56 = fmul contract float %50, %55\l  %57 = fadd contract float %56, 0.000000e+00\l  br label %58\l}"];
	Node0x50a1b70 -> Node0x50a1bc0;
	Node0x50a1bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%58:\l58:                                               \l  %59 = phi float [ %51, %45 ], [ 0.000000e+00, %38 ]\l  %60 = phi float [ %57, %45 ], [ 0.000000e+00, %38 ]\l  %61 = add nsw i32 %3, -1\l  %62 = icmp slt i32 %29, %61\l  br i1 %62, label %63, label %75\l|{<s0>T|<s1>F}}"];
	Node0x50a1bc0:s0 -> Node0x50a38a0;
	Node0x50a1bc0:s1 -> Node0x50a38f0;
	Node0x50a38a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%63:\l63:                                               \l  %64 = sext i32 %40 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %8, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %67 = fmul contract float %66, %9\l  %68 = fadd contract float %59, %67\l  %69 = add nsw i32 %43, %41\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %73 = fmul contract float %67, %72\l  %74 = fadd contract float %60, %73\l  br label %75\l}"];
	Node0x50a38a0 -> Node0x50a38f0;
	Node0x50a38f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%75:\l75:                                               \l  %76 = phi float [ %68, %63 ], [ %59, %58 ]\l  %77 = phi float [ %74, %63 ], [ %60, %58 ]\l  %78 = icmp sgt i32 %23, 0\l  br i1 %78, label %79, label %92\l|{<s0>T|<s1>F}}"];
	Node0x50a38f0:s0 -> Node0x50a44d0;
	Node0x50a38f0:s1 -> Node0x50a4520;
	Node0x50a44d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%79:\l79:                                               \l  %80 = add nsw i32 %40, -1\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %7, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %84 = fmul contract float %83, %9\l  %85 = fadd contract float %76, %84\l  %86 = sub nsw i32 %43, %4\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %90 = fmul contract float %84, %89\l  %91 = fadd contract float %77, %90\l  br label %92\l}"];
	Node0x50a44d0 -> Node0x50a4520;
	Node0x50a4520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%92:\l92:                                               \l  %93 = phi float [ %85, %79 ], [ %76, %75 ]\l  %94 = phi float [ %91, %79 ], [ %77, %75 ]\l  %95 = add nsw i32 %2, -1\l  %96 = icmp slt i32 %23, %95\l  %97 = sext i32 %40 to i64\l  br i1 %96, label %98, label %109\l|{<s0>T|<s1>F}}"];
	Node0x50a4520:s0 -> Node0x50a5060;
	Node0x50a4520:s1 -> Node0x50a50b0;
	Node0x50a5060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%98:\l98:                                               \l  %99 = getelementptr inbounds float, float addrspace(1)* %7, i64 %97\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %101 = fmul contract float %100, %9\l  %102 = fadd contract float %93, %101\l  %103 = add nsw i32 %43, %4\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %0, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %107 = fmul contract float %101, %106\l  %108 = fadd contract float %94, %107\l  br label %109\l}"];
	Node0x50a5060 -> Node0x50a50b0;
	Node0x50a50b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%109:\l109:                                              \l  %110 = phi float [ %102, %98 ], [ %93, %92 ]\l  %111 = phi float [ %108, %98 ], [ %94, %92 ]\l  %112 = getelementptr inbounds float, float addrspace(1)* %6, i64 %97\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %114 = fadd contract float %110, %113\l  %115 = sext i32 %43 to i64\l  %116 = fcmp contract ogt float %114, 0.000000e+00\l  br i1 %116, label %117, label %129\l|{<s0>T|<s1>F}}"];
	Node0x50a50b0:s0 -> Node0x50a5c00;
	Node0x50a50b0:s1 -> Node0x509f1b0;
	Node0x50a5c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%117:\l117:                                              \l  %118 = getelementptr inbounds float, float addrspace(1)* %1, i64 %115\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %120 = fmul contract float %113, %119\l  %121 = fadd contract float %111, %120\l  %122 = fdiv contract float %121, %114\l  %123 = fmul contract float %122, %10\l  %124 = getelementptr inbounds float, float addrspace(1)* %0, i64 %115\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %126 = fsub contract float 1.000000e+00, %10\l  %127 = fmul contract float %126, %125\l  %128 = fadd contract float %127, %123\l  store float %128, float addrspace(1)* %124, align 4, !tbaa !7\l  br label %129\l}"];
	Node0x50a5c00 -> Node0x509f1b0;
	Node0x509f1b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%129:\l129:                                              \l  ret void\l}"];
}
