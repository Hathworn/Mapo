digraph "CFG for '_Z25Compute_weightdata_KernelPfPKfS1_iiiff' function" {
	label="CFG for '_Z25Compute_weightdata_KernelPfPKfS1_iiiff' function";

	Node0x48acdc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %9, %15\l  %17 = add i32 %16, %10\l  %18 = icmp slt i32 %17, %3\l  br i1 %18, label %19, label %235\l|{<s0>T|<s1>F}}"];
	Node0x48acdc0:s0 -> Node0x48aed30;
	Node0x48acdc0:s1 -> Node0x48aedc0;
	Node0x48aed30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%19:\l19:                                               \l  %20 = fcmp contract oeq float %6, 2.000000e+00\l  br i1 %20, label %21, label %23\l|{<s0>T|<s1>F}}"];
	Node0x48aed30:s0 -> Node0x48af9a0;
	Node0x48aed30:s1 -> Node0x48afa30;
	Node0x48af9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%21:\l21:                                               \l  %22 = sext i32 %17 to i64\l  br label %231\l}"];
	Node0x48af9a0 -> Node0x48afbe0;
	Node0x48afa30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%23:\l23:                                               \l  %24 = fcmp contract oeq float %6, 1.000000e+00\l  %25 = sext i32 %17 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %1, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7\l  %28 = mul nsw i32 %17, %4\l  %29 = add nsw i32 %28, %5\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7\l  %33 = fsub contract float %27, %32\l  %34 = tail call float @llvm.fabs.f32(float %33)\l  %35 = fadd contract float %34, %7\l  br i1 %24, label %36, label %38\l|{<s0>T|<s1>F}}"];
	Node0x48afa30:s0 -> Node0x48b0cc0;
	Node0x48afa30:s1 -> Node0x48b0d10;
	Node0x48b0cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%36:\l36:                                               \l  %37 = fdiv contract float 1.000000e+00, %35\l  br label %231\l}"];
	Node0x48b0cc0 -> Node0x48afbe0;
	Node0x48b0d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%38:\l38:                                               \l  %39 = fadd contract float %6, -2.000000e+00\l  %40 = tail call float @llvm.fabs.f32(float %35)\l  %41 = tail call float @llvm.amdgcn.frexp.mant.f32(float %40)\l  %42 = fcmp olt float %41, 0x3FE5555560000000\l  %43 = zext i1 %42 to i32\l  %44 = tail call float @llvm.amdgcn.ldexp.f32(float %41, i32 %43)\l  %45 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %40)\l  %46 = sub nsw i32 %45, %43\l  %47 = fadd float %44, -1.000000e+00\l  %48 = fadd float %44, 1.000000e+00\l  %49 = fadd float %48, -1.000000e+00\l  %50 = fsub float %44, %49\l  %51 = tail call float @llvm.amdgcn.rcp.f32(float %48)\l  %52 = fmul float %47, %51\l  %53 = fmul float %48, %52\l  %54 = fneg float %53\l  %55 = tail call float @llvm.fma.f32(float %52, float %48, float %54)\l  %56 = tail call float @llvm.fma.f32(float %52, float %50, float %55)\l  %57 = fadd float %53, %56\l  %58 = fsub float %57, %53\l  %59 = fsub float %56, %58\l  %60 = fsub float %47, %57\l  %61 = fsub float %47, %60\l  %62 = fsub float %61, %57\l  %63 = fsub float %62, %59\l  %64 = fadd float %60, %63\l  %65 = fmul float %51, %64\l  %66 = fadd float %52, %65\l  %67 = fsub float %66, %52\l  %68 = fsub float %65, %67\l  %69 = fmul float %66, %66\l  %70 = fneg float %69\l  %71 = tail call float @llvm.fma.f32(float %66, float %66, float %70)\l  %72 = fmul float %68, 2.000000e+00\l  %73 = tail call float @llvm.fma.f32(float %66, float %72, float %71)\l  %74 = fadd float %69, %73\l  %75 = fsub float %74, %69\l  %76 = fsub float %73, %75\l  %77 = tail call float @llvm.fmuladd.f32(float %74, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %78 = tail call float @llvm.fmuladd.f32(float %74, float %77, float\l... 0x3FD999BDE0000000)\l  %79 = sitofp i32 %46 to float\l  %80 = fmul float %79, 0x3FE62E4300000000\l  %81 = fneg float %80\l  %82 = tail call float @llvm.fma.f32(float %79, float 0x3FE62E4300000000,\l... float %81)\l  %83 = tail call float @llvm.fma.f32(float %79, float 0xBE205C6100000000,\l... float %82)\l  %84 = fadd float %80, %83\l  %85 = fsub float %84, %80\l  %86 = fsub float %83, %85\l  %87 = tail call float @llvm.amdgcn.ldexp.f32(float %66, i32 1)\l  %88 = fmul float %66, %74\l  %89 = fneg float %88\l  %90 = tail call float @llvm.fma.f32(float %74, float %66, float %89)\l  %91 = tail call float @llvm.fma.f32(float %74, float %68, float %90)\l  %92 = tail call float @llvm.fma.f32(float %76, float %66, float %91)\l  %93 = fadd float %88, %92\l  %94 = fsub float %93, %88\l  %95 = fsub float %92, %94\l  %96 = fmul float %74, %78\l  %97 = fneg float %96\l  %98 = tail call float @llvm.fma.f32(float %74, float %78, float %97)\l  %99 = tail call float @llvm.fma.f32(float %76, float %78, float %98)\l  %100 = fadd float %96, %99\l  %101 = fsub float %100, %96\l  %102 = fsub float %99, %101\l  %103 = fadd float %100, 0x3FE5555540000000\l  %104 = fadd float %103, 0xBFE5555540000000\l  %105 = fsub float %100, %104\l  %106 = fadd float %102, 0x3E2E720200000000\l  %107 = fadd float %106, %105\l  %108 = fadd float %103, %107\l  %109 = fsub float %108, %103\l  %110 = fsub float %107, %109\l  %111 = fmul float %93, %108\l  %112 = fneg float %111\l  %113 = tail call float @llvm.fma.f32(float %93, float %108, float %112)\l  %114 = tail call float @llvm.fma.f32(float %93, float %110, float %113)\l  %115 = tail call float @llvm.fma.f32(float %95, float %108, float %114)\l  %116 = tail call float @llvm.amdgcn.ldexp.f32(float %68, i32 1)\l  %117 = fadd float %111, %115\l  %118 = fsub float %117, %111\l  %119 = fsub float %115, %118\l  %120 = fadd float %87, %117\l  %121 = fsub float %120, %87\l  %122 = fsub float %117, %121\l  %123 = fadd float %116, %119\l  %124 = fadd float %123, %122\l  %125 = fadd float %120, %124\l  %126 = fsub float %125, %120\l  %127 = fsub float %124, %126\l  %128 = fadd float %84, %125\l  %129 = fsub float %128, %84\l  %130 = fsub float %128, %129\l  %131 = fsub float %84, %130\l  %132 = fsub float %125, %129\l  %133 = fadd float %132, %131\l  %134 = fadd float %86, %127\l  %135 = fsub float %134, %86\l  %136 = fsub float %134, %135\l  %137 = fsub float %86, %136\l  %138 = fsub float %127, %135\l  %139 = fadd float %138, %137\l  %140 = fadd float %134, %133\l  %141 = fadd float %128, %140\l  %142 = fsub float %141, %128\l  %143 = fsub float %140, %142\l  %144 = fadd float %139, %143\l  %145 = fadd float %141, %144\l  %146 = fsub float %145, %141\l  %147 = fsub float %144, %146\l  %148 = fmul float %39, %145\l  %149 = fneg float %148\l  %150 = tail call float @llvm.fma.f32(float %39, float %145, float %149)\l  %151 = tail call float @llvm.fma.f32(float %39, float %147, float %150)\l  %152 = fadd float %148, %151\l  %153 = fsub float %152, %148\l  %154 = fsub float %151, %153\l  %155 = tail call float @llvm.fabs.f32(float %148) #3\l  %156 = fcmp oeq float %155, 0x7FF0000000000000\l  %157 = select i1 %156, float %148, float %152\l  %158 = tail call float @llvm.fabs.f32(float %157) #3\l  %159 = fcmp oeq float %158, 0x7FF0000000000000\l  %160 = select i1 %159, float 0.000000e+00, float %154\l  %161 = fcmp oeq float %157, 0x40562E4300000000\l  %162 = select i1 %161, float 0x3EE0000000000000, float 0.000000e+00\l  %163 = fsub float %157, %162\l  %164 = fadd float %162, %160\l  %165 = fmul float %163, 0x3FF7154760000000\l  %166 = tail call float @llvm.rint.f32(float %165)\l  %167 = fcmp ogt float %163, 0x40562E4300000000\l  %168 = fcmp olt float %163, 0xC059D1DA00000000\l  %169 = fneg float %165\l  %170 = tail call float @llvm.fma.f32(float %163, float 0x3FF7154760000000,\l... float %169)\l  %171 = tail call float @llvm.fma.f32(float %163, float 0x3E54AE0BE0000000,\l... float %170)\l  %172 = fsub float %165, %166\l  %173 = fadd float %171, %172\l  %174 = tail call float @llvm.exp2.f32(float %173)\l  %175 = fptosi float %166 to i32\l  %176 = tail call float @llvm.amdgcn.ldexp.f32(float %174, i32 %175)\l  %177 = select i1 %168, float 0.000000e+00, float %176\l  %178 = select i1 %167, float 0x7FF0000000000000, float %177\l  %179 = tail call float @llvm.fma.f32(float %178, float %164, float %178)\l  %180 = tail call float @llvm.fabs.f32(float %178) #3\l  %181 = fcmp oeq float %180, 0x7FF0000000000000\l  %182 = select i1 %181, float %178, float %179\l  %183 = tail call float @llvm.fabs.f32(float %39)\l  %184 = tail call float @llvm.trunc.f32(float %183)\l  %185 = fcmp oeq float %183, %184\l  %186 = zext i1 %185 to i32\l  %187 = fmul float %184, 5.000000e-01\l  %188 = tail call float @llvm.amdgcn.fract.f32(float %187)\l  %189 = tail call i1 @llvm.amdgcn.class.f32(float %187, i32 516)\l  %190 = select i1 %189, float 0.000000e+00, float %188\l  %191 = fcmp oeq float %190, 0.000000e+00\l  %192 = and i1 %185, %191\l  %193 = zext i1 %192 to i32\l  %194 = add nuw nsw i32 %193, %186\l  %195 = icmp eq i32 %194, 1\l  %196 = fcmp olt float %35, 0.000000e+00\l  %197 = and i1 %195, %196\l  %198 = select i1 %197, float -0.000000e+00, float 0.000000e+00\l  %199 = tail call float @llvm.copysign.f32(float %182, float %198)\l  %200 = fcmp uge float %35, 0.000000e+00\l  %201 = icmp ne i32 %194, 0\l  %202 = select i1 %200, i1 true, i1 %201\l  %203 = select i1 %202, float %199, float 0x7FF8000000000000\l  %204 = fcmp oeq float %183, 0x7FF0000000000000\l  br i1 %204, label %205, label %214\l|{<s0>T|<s1>F}}"];
	Node0x48b0d10:s0 -> Node0x48b9bf0;
	Node0x48b0d10:s1 -> Node0x48b9c80;
	Node0x48b9bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%205:\l205:                                              \l  %206 = fcmp oeq float %40, 1.000000e+00\l  %207 = fadd float %40, -1.000000e+00\l  %208 = bitcast float %39 to i32\l  %209 = bitcast float %207 to i32\l  %210 = xor i32 %209, %208\l  %211 = icmp sgt i32 %210, -1\l  %212 = select i1 %211, float 0x7FF0000000000000, float 0.000000e+00\l  %213 = select i1 %206, float %40, float %212\l  br label %214\l}"];
	Node0x48b9bf0 -> Node0x48b9c80;
	Node0x48b9c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%214:\l214:                                              \l  %215 = phi float [ %203, %38 ], [ %213, %205 ]\l  %216 = fcmp oeq float %40, 0x7FF0000000000000\l  %217 = fcmp oeq float %35, 0.000000e+00\l  %218 = or i1 %217, %216\l  %219 = fcmp olt float %39, 0.000000e+00\l  %220 = xor i1 %219, %217\l  %221 = select i1 %220, float 0.000000e+00, float 0x7FF0000000000000\l  %222 = select i1 %195, float %35, float 0.000000e+00\l  %223 = tail call float @llvm.copysign.f32(float %221, float %222)\l  %224 = select i1 %218, float %223, float %215\l  %225 = fcmp uno float %35, %39\l  %226 = select i1 %225, float 0x7FF8000000000000, float %224\l  %227 = fcmp oeq float %35, 1.000000e+00\l  %228 = fcmp oeq float %39, 0.000000e+00\l  %229 = or i1 %228, %227\l  %230 = select i1 %229, float 1.000000e+00, float %226\l  br label %231\l}"];
	Node0x48b9c80 -> Node0x48afbe0;
	Node0x48afbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%231:\l231:                                              \l  %232 = phi i64 [ %22, %21 ], [ %25, %214 ], [ %25, %36 ]\l  %233 = phi float [ 1.000000e+00, %21 ], [ %230, %214 ], [ %37, %36 ]\l  %234 = getelementptr inbounds float, float addrspace(1)* %0, i64 %232\l  store float %233, float addrspace(1)* %234, align 4, !tbaa !7\l  br label %235\l}"];
	Node0x48afbe0 -> Node0x48aedc0;
	Node0x48aedc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%235:\l235:                                              \l  ret void\l}"];
}
