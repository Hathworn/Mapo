digraph "CFG for '_Z30MedianFilterWithMask5x5_KernelPfPKfiiiPKb' function" {
	label="CFG for '_Z30MedianFilterWithMask5x5_KernelPfPKfiiiPKb' function";

	Node0x602a500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%6:\l  %7 = alloca [25 x float], align 16, addrspace(5)\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = add i32 %15, %8\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = add i32 %23, %17\l  %25 = icmp slt i32 %16, %2\l  %26 = icmp slt i32 %24, %3\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %202\l|{<s0>T|<s1>F}}"];
	Node0x602a500:s0 -> Node0x602e640;
	Node0x602a500:s1 -> Node0x602e6d0;
	Node0x602e640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%28:\l28:                                               \l  %29 = mul nsw i32 %24, %2\l  %30 = add nsw i32 %29, %16\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %31\l  %33 = load i8, i8 addrspace(1)* %32, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !6\l  %34 = icmp eq i8 %33, 0\l  br i1 %34, label %96, label %35\l|{<s0>T|<s1>F}}"];
	Node0x602e640:s0 -> Node0x602efa0;
	Node0x602e640:s1 -> Node0x602eff0;
	Node0x602eff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%35:\l35:                                               \l  %36 = icmp sgt i32 %4, 0\l  br i1 %36, label %37, label %202\l|{<s0>T|<s1>F}}"];
	Node0x602eff0:s0 -> Node0x602f1c0;
	Node0x602eff0:s1 -> Node0x602e6d0;
	Node0x602f1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%37:\l37:                                               \l  %38 = mul nsw i32 %30, %4\l  %39 = and i32 %4, 7\l  %40 = icmp ult i32 %4, 8\l  br i1 %40, label %188, label %41\l|{<s0>T|<s1>F}}"];
	Node0x602f1c0:s0 -> Node0x602f4d0;
	Node0x602f1c0:s1 -> Node0x602f520;
	Node0x602f520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%41:\l41:                                               \l  %42 = and i32 %4, -8\l  br label %43\l}"];
	Node0x602f520 -> Node0x602f720;
	Node0x602f720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%43:\l43:                                               \l  %44 = phi i32 [ 0, %41 ], [ %93, %43 ]\l  %45 = phi i32 [ 0, %41 ], [ %94, %43 ]\l  %46 = add nsw i32 %44, %38\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !12\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  store float %49, float addrspace(1)* %50, align 4, !tbaa !12\l  %51 = or i32 %44, 1\l  %52 = add nsw i32 %51, %38\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !12\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  store float %55, float addrspace(1)* %56, align 4, !tbaa !12\l  %57 = or i32 %44, 2\l  %58 = add nsw i32 %57, %38\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !12\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  store float %61, float addrspace(1)* %62, align 4, !tbaa !12\l  %63 = or i32 %44, 3\l  %64 = add nsw i32 %63, %38\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !12\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %65\l  store float %67, float addrspace(1)* %68, align 4, !tbaa !12\l  %69 = or i32 %44, 4\l  %70 = add nsw i32 %69, %38\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !12\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  store float %73, float addrspace(1)* %74, align 4, !tbaa !12\l  %75 = or i32 %44, 5\l  %76 = add nsw i32 %75, %38\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !12\l  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  store float %79, float addrspace(1)* %80, align 4, !tbaa !12\l  %81 = or i32 %44, 6\l  %82 = add nsw i32 %81, %38\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %1, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !12\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %83\l  store float %85, float addrspace(1)* %86, align 4, !tbaa !12\l  %87 = or i32 %44, 7\l  %88 = add nsw i32 %87, %38\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %1, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !12\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %89\l  store float %91, float addrspace(1)* %92, align 4, !tbaa !12\l  %93 = add nuw nsw i32 %44, 8\l  %94 = add i32 %45, 8\l  %95 = icmp eq i32 %94, %42\l  br i1 %95, label %188, label %43, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x602f720:s0 -> Node0x602f4d0;
	Node0x602f720:s1 -> Node0x602f720;
	Node0x602efa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%96:\l96:                                               \l  %97 = bitcast [25 x float] addrspace(5)* %7 to i8 addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 100, i8 addrspace(5)* %97) #5\l  call void @llvm.memset.p5i8.i64(i8 addrspace(5)* noundef align 16\l... dereferenceable(100) %97, i8 0, i64 100, i1 false)\l  %98 = icmp sgt i32 %4, 0\l  br i1 %98, label %99, label %115\l|{<s0>T|<s1>F}}"];
	Node0x602efa0:s0 -> Node0x60329c0;
	Node0x602efa0:s1 -> Node0x6032a50;
	Node0x60329c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%99:\l99:                                               \l  %100 = add nsw i32 %16, -2\l  %101 = icmp sgt i32 %16, 1\l  %102 = select i1 %101, i32 %100, i32 0\l  %103 = add nsw i32 %16, 2\l  %104 = add nsw i32 %2, -1\l  %105 = tail call i32 @llvm.smin.i32(i32 %103, i32 %104)\l  %106 = add nsw i32 %24, -2\l  %107 = icmp sgt i32 %24, 1\l  %108 = select i1 %107, i32 %106, i32 0\l  %109 = add nsw i32 %24, 2\l  %110 = add nsw i32 %3, -1\l  %111 = tail call i32 @llvm.smin.i32(i32 %109, i32 %110)\l  %112 = icmp sgt i32 %108, %111\l  %113 = icmp sgt i32 %102, %105\l  %114 = mul nsw i32 %30, %4\l  br label %116\l}"];
	Node0x60329c0 -> Node0x60336c0;
	Node0x6032a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%115:\l115:                                              \l  call void @llvm.lifetime.end.p5i8(i64 100, i8 addrspace(5)* %97) #5\l  br label %202\l}"];
	Node0x6032a50 -> Node0x602e6d0;
	Node0x60336c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%116:\l116:                                              \l  %117 = phi i32 [ 0, %99 ], [ %186, %181 ]\l  br i1 %112, label %123, label %118\l|{<s0>T|<s1>F}}"];
	Node0x60336c0:s0 -> Node0x6033aa0;
	Node0x60336c0:s1 -> Node0x6033b30;
	Node0x6033b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%118:\l118:                                              \l  %119 = phi i32 [ %128, %126 ], [ %108, %116 ]\l  %120 = phi i32 [ %127, %126 ], [ 0, %116 ]\l  br i1 %113, label %126, label %121\l|{<s0>T|<s1>F}}"];
	Node0x6033b30:s0 -> Node0x6033c70;
	Node0x6033b30:s1 -> Node0x6033ed0;
	Node0x6033ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%121:\l121:                                              \l  %122 = mul nsw i32 %119, %2\l  br label %130\l}"];
	Node0x6033ed0 -> Node0x60340a0;
	Node0x6033aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%123:\l123:                                              \l  %124 = phi i32 [ 0, %116 ], [ %127, %126 ]\l  %125 = icmp eq i32 %124, 0\l  br i1 %125, label %181, label %150\l|{<s0>T|<s1>F}}"];
	Node0x6033aa0:s0 -> Node0x60339a0;
	Node0x6033aa0:s1 -> Node0x60342a0;
	Node0x6033c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%126:\l126:                                              \l  %127 = phi i32 [ %120, %118 ], [ %147, %146 ]\l  %128 = add nsw i32 %119, 1\l  %129 = icmp slt i32 %119, %111\l  br i1 %129, label %118, label %123, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x6033c70:s0 -> Node0x6033b30;
	Node0x6033c70:s1 -> Node0x6033aa0;
	Node0x60340a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%130:\l130:                                              \l  %131 = phi i32 [ %102, %121 ], [ %148, %146 ]\l  %132 = phi i32 [ %120, %121 ], [ %147, %146 ]\l  %133 = add nsw i32 %131, %122\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %134\l  %136 = load i8, i8 addrspace(1)* %135, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !6\l  %137 = icmp eq i8 %136, 0\l  br i1 %137, label %146, label %138\l|{<s0>T|<s1>F}}"];
	Node0x60340a0:s0 -> Node0x60343d0;
	Node0x60340a0:s1 -> Node0x6035c10;
	Node0x6035c10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%138:\l138:                                              \l  %139 = mul nsw i32 %133, %4\l  %140 = add nsw i32 %139, %117\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %1, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !12\l  %144 = add nsw i32 %132, 1\l  %145 = getelementptr inbounds [25 x float], [25 x float] addrspace(5)* %7,\l... i32 0, i32 %132\l  store float %143, float addrspace(5)* %145, align 4, !tbaa !12\l  br label %146\l}"];
	Node0x6035c10 -> Node0x60343d0;
	Node0x60343d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%146:\l146:                                              \l  %147 = phi i32 [ %144, %138 ], [ %132, %130 ]\l  %148 = add nsw i32 %131, 1\l  %149 = icmp slt i32 %131, %105\l  br i1 %149, label %130, label %126, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x60343d0:s0 -> Node0x60340a0;
	Node0x60343d0:s1 -> Node0x6033c70;
	Node0x60342a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%150:\l150:                                              \l  %151 = add nsw i32 %124, 1\l  %152 = sdiv i32 %151, 2\l  %153 = icmp sgt i32 %124, 0\l  br i1 %153, label %154, label %156\l|{<s0>T|<s1>F}}"];
	Node0x60342a0:s0 -> Node0x60366e0;
	Node0x60342a0:s1 -> Node0x6036730;
	Node0x60366e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%154:\l154:                                              \l  %155 = tail call i32 @llvm.smax.i32(i32 %152, i32 1)\l  br label %159\l}"];
	Node0x60366e0 -> Node0x60369d0;
	Node0x6036730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%156:\l156:                                              \l  %157 = getelementptr inbounds [25 x float], [25 x float] addrspace(5)* %7,\l... i32 0, i32 %152\l  %158 = load float, float addrspace(5)* %157, align 4, !tbaa !12\l  br label %181\l}"];
	Node0x6036730 -> Node0x60339a0;
	Node0x60369d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%159:\l159:                                              \l  %160 = phi i32 [ %163, %165 ], [ 0, %154 ]\l  %161 = getelementptr inbounds [25 x float], [25 x float] addrspace(5)* %7,\l... i32 0, i32 %160\l  %162 = load float, float addrspace(5)* %161, align 4, !tbaa !12\l  %163 = add nuw nsw i32 %160, 1\l  %164 = icmp slt i32 %163, %124\l  br i1 %164, label %170, label %165\l|{<s0>T|<s1>F}}"];
	Node0x60369d0:s0 -> Node0x6036ff0;
	Node0x60369d0:s1 -> Node0x6036c70;
	Node0x6036c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%165:\l165:                                              \l  %166 = phi float [ %162, %159 ], [ %177, %170 ]\l  %167 = phi i32 [ %160, %159 ], [ %178, %170 ]\l  %168 = getelementptr inbounds [25 x float], [25 x float] addrspace(5)* %7,\l... i32 0, i32 %167\l  store float %162, float addrspace(5)* %168, align 4, !tbaa !12\l  store float %166, float addrspace(5)* %161, align 4, !tbaa !12\l  %169 = icmp eq i32 %163, %155\l  br i1 %169, label %156, label %159, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x6036c70:s0 -> Node0x6036730;
	Node0x6036c70:s1 -> Node0x60369d0;
	Node0x6036ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%170:\l170:                                              \l  %171 = phi i32 [ %179, %170 ], [ %163, %159 ]\l  %172 = phi i32 [ %178, %170 ], [ %160, %159 ]\l  %173 = phi float [ %177, %170 ], [ %162, %159 ]\l  %174 = getelementptr inbounds [25 x float], [25 x float] addrspace(5)* %7,\l... i32 0, i32 %171\l  %175 = load float, float addrspace(5)* %174, align 4, !tbaa !12\l  %176 = fcmp contract olt float %173, %175\l  %177 = select i1 %176, float %175, float %173\l  %178 = select i1 %176, i32 %171, i32 %172\l  %179 = add nuw nsw i32 %171, 1\l  %180 = icmp slt i32 %179, %124\l  br i1 %180, label %170, label %165, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x6036ff0:s0 -> Node0x6036ff0;
	Node0x6036ff0:s1 -> Node0x6036c70;
	Node0x60339a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%181:\l181:                                              \l  %182 = phi float [ %158, %156 ], [ 0.000000e+00, %123 ]\l  %183 = add nsw i32 %117, %114\l  %184 = sext i32 %183 to i64\l  %185 = getelementptr inbounds float, float addrspace(1)* %0, i64 %184\l  store float %182, float addrspace(1)* %185, align 4, !tbaa !12\l  %186 = add nuw nsw i32 %117, 1\l  %187 = icmp eq i32 %186, %4\l  br i1 %187, label %115, label %116, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x60339a0:s0 -> Node0x6032a50;
	Node0x60339a0:s1 -> Node0x60336c0;
	Node0x602f4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%188:\l188:                                              \l  %189 = phi i32 [ 0, %37 ], [ %93, %43 ]\l  %190 = icmp eq i32 %39, 0\l  br i1 %190, label %202, label %191\l|{<s0>T|<s1>F}}"];
	Node0x602f4d0:s0 -> Node0x602e6d0;
	Node0x602f4d0:s1 -> Node0x6038fd0;
	Node0x6038fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%191:\l191:                                              \l  %192 = phi i32 [ %199, %191 ], [ %189, %188 ]\l  %193 = phi i32 [ %200, %191 ], [ 0, %188 ]\l  %194 = add nsw i32 %192, %38\l  %195 = sext i32 %194 to i64\l  %196 = getelementptr inbounds float, float addrspace(1)* %1, i64 %195\l  %197 = load float, float addrspace(1)* %196, align 4, !tbaa !12\l  %198 = getelementptr inbounds float, float addrspace(1)* %0, i64 %195\l  store float %197, float addrspace(1)* %198, align 4, !tbaa !12\l  %199 = add nuw nsw i32 %192, 1\l  %200 = add i32 %193, 1\l  %201 = icmp eq i32 %200, %39\l  br i1 %201, label %202, label %191, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x6038fd0:s0 -> Node0x602e6d0;
	Node0x6038fd0:s1 -> Node0x6038fd0;
	Node0x602e6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%202:\l202:                                              \l  ret void\l}"];
}
