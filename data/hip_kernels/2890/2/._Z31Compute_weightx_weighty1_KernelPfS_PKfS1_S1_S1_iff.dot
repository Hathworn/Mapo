digraph "CFG for '_Z31Compute_weightx_weighty1_KernelPfS_PKfS1_S1_S1_iff' function" {
	label="CFG for '_Z31Compute_weightx_weighty1_KernelPfS_PKfS1_S1_S1_iff' function";

	Node0x5a6da20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %10, %16\l  %18 = add i32 %17, %11\l  %19 = icmp slt i32 %18, %6\l  br i1 %19, label %20, label %468\l|{<s0>T|<s1>F}}"];
	Node0x5a6da20:s0 -> Node0x5a704f0;
	Node0x5a6da20:s1 -> Node0x5a70580;
	Node0x5a704f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%20:\l20:                                               \l  %21 = fcmp contract oeq float %7, 2.000000e+00\l  br i1 %21, label %22, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5a704f0:s0 -> Node0x5a71160;
	Node0x5a704f0:s1 -> Node0x5a711f0;
	Node0x5a71160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%22:\l22:                                               \l  %23 = sext i32 %18 to i64\l  %24 = getelementptr inbounds float, float addrspace(1)* %2, i64 %23\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %26 = getelementptr inbounds float, float addrspace(1)* %0, i64 %23\l  store float %25, float addrspace(1)* %26, align 4, !tbaa !7\l  %27 = getelementptr inbounds float, float addrspace(1)* %3, i64 %23\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  br label %464\l}"];
	Node0x5a71160 -> Node0x5a72490;
	Node0x5a711f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = fcmp contract oeq float %7, 1.000000e+00\l  br i1 %30, label %31, label %46\l|{<s0>T|<s1>F}}"];
	Node0x5a711f0:s0 -> Node0x5a72620;
	Node0x5a711f0:s1 -> Node0x5a726b0;
	Node0x5a72620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%31:\l31:                                               \l  %32 = sext i32 %18 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %2, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %35 = getelementptr inbounds float, float addrspace(1)* %4, i64 %32\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %37 = fadd contract float %36, %8\l  %38 = fdiv contract float %34, %37\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  store float %38, float addrspace(1)* %39, align 4, !tbaa !7\l  %40 = getelementptr inbounds float, float addrspace(1)* %3, i64 %32\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7\l  %42 = getelementptr inbounds float, float addrspace(1)* %5, i64 %32\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7\l  %44 = fadd contract float %43, %8\l  %45 = fdiv contract float %41, %44\l  br label %464\l}"];
	Node0x5a72620 -> Node0x5a72490;
	Node0x5a726b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%46:\l46:                                               \l  %47 = fcmp contract oeq float %7, 0.000000e+00\l  %48 = sext i32 %18 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %2, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7\l  %51 = getelementptr inbounds float, float addrspace(1)* %4, i64 %48\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  br i1 %47, label %53, label %65\l|{<s0>T|<s1>F}}"];
	Node0x5a726b0:s0 -> Node0x5a734e0;
	Node0x5a726b0:s1 -> Node0x5a73570;
	Node0x5a734e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%53:\l53:                                               \l  %54 = fmul contract float %52, %52\l  %55 = fadd contract float %54, %8\l  %56 = fdiv contract float %50, %55\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  store float %56, float addrspace(1)* %57, align 4, !tbaa !7\l  %58 = getelementptr inbounds float, float addrspace(1)* %3, i64 %48\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = getelementptr inbounds float, float addrspace(1)* %5, i64 %48\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7\l  %62 = fmul contract float %61, %61\l  %63 = fadd contract float %62, %8\l  %64 = fdiv contract float %59, %63\l  br label %464\l}"];
	Node0x5a734e0 -> Node0x5a72490;
	Node0x5a73570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%65:\l65:                                               \l  %66 = fsub contract float 2.000000e+00, %7\l  %67 = tail call float @llvm.fabs.f32(float %52)\l  %68 = tail call float @llvm.amdgcn.frexp.mant.f32(float %67)\l  %69 = fcmp olt float %68, 0x3FE5555560000000\l  %70 = zext i1 %69 to i32\l  %71 = tail call float @llvm.amdgcn.ldexp.f32(float %68, i32 %70)\l  %72 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %67)\l  %73 = sub nsw i32 %72, %70\l  %74 = fadd float %71, -1.000000e+00\l  %75 = fadd float %71, 1.000000e+00\l  %76 = fadd float %75, -1.000000e+00\l  %77 = fsub float %71, %76\l  %78 = tail call float @llvm.amdgcn.rcp.f32(float %75)\l  %79 = fmul float %74, %78\l  %80 = fmul float %75, %79\l  %81 = fneg float %80\l  %82 = tail call float @llvm.fma.f32(float %79, float %75, float %81)\l  %83 = tail call float @llvm.fma.f32(float %79, float %77, float %82)\l  %84 = fadd float %80, %83\l  %85 = fsub float %84, %80\l  %86 = fsub float %83, %85\l  %87 = fsub float %74, %84\l  %88 = fsub float %74, %87\l  %89 = fsub float %88, %84\l  %90 = fsub float %89, %86\l  %91 = fadd float %87, %90\l  %92 = fmul float %78, %91\l  %93 = fadd float %79, %92\l  %94 = fsub float %93, %79\l  %95 = fsub float %92, %94\l  %96 = fmul float %93, %93\l  %97 = fneg float %96\l  %98 = tail call float @llvm.fma.f32(float %93, float %93, float %97)\l  %99 = fmul float %95, 2.000000e+00\l  %100 = tail call float @llvm.fma.f32(float %93, float %99, float %98)\l  %101 = fadd float %96, %100\l  %102 = fsub float %101, %96\l  %103 = fsub float %100, %102\l  %104 = tail call float @llvm.fmuladd.f32(float %101, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %105 = tail call float @llvm.fmuladd.f32(float %101, float %104, float\l... 0x3FD999BDE0000000)\l  %106 = sitofp i32 %73 to float\l  %107 = fmul float %106, 0x3FE62E4300000000\l  %108 = fneg float %107\l  %109 = tail call float @llvm.fma.f32(float %106, float 0x3FE62E4300000000,\l... float %108)\l  %110 = tail call float @llvm.fma.f32(float %106, float 0xBE205C6100000000,\l... float %109)\l  %111 = fadd float %107, %110\l  %112 = fsub float %111, %107\l  %113 = fsub float %110, %112\l  %114 = tail call float @llvm.amdgcn.ldexp.f32(float %93, i32 1)\l  %115 = fmul float %93, %101\l  %116 = fneg float %115\l  %117 = tail call float @llvm.fma.f32(float %101, float %93, float %116)\l  %118 = tail call float @llvm.fma.f32(float %101, float %95, float %117)\l  %119 = tail call float @llvm.fma.f32(float %103, float %93, float %118)\l  %120 = fadd float %115, %119\l  %121 = fsub float %120, %115\l  %122 = fsub float %119, %121\l  %123 = fmul float %101, %105\l  %124 = fneg float %123\l  %125 = tail call float @llvm.fma.f32(float %101, float %105, float %124)\l  %126 = tail call float @llvm.fma.f32(float %103, float %105, float %125)\l  %127 = fadd float %123, %126\l  %128 = fsub float %127, %123\l  %129 = fsub float %126, %128\l  %130 = fadd float %127, 0x3FE5555540000000\l  %131 = fadd float %130, 0xBFE5555540000000\l  %132 = fsub float %127, %131\l  %133 = fadd float %129, 0x3E2E720200000000\l  %134 = fadd float %133, %132\l  %135 = fadd float %130, %134\l  %136 = fsub float %135, %130\l  %137 = fsub float %134, %136\l  %138 = fmul float %120, %135\l  %139 = fneg float %138\l  %140 = tail call float @llvm.fma.f32(float %120, float %135, float %139)\l  %141 = tail call float @llvm.fma.f32(float %120, float %137, float %140)\l  %142 = tail call float @llvm.fma.f32(float %122, float %135, float %141)\l  %143 = tail call float @llvm.amdgcn.ldexp.f32(float %95, i32 1)\l  %144 = fadd float %138, %142\l  %145 = fsub float %144, %138\l  %146 = fsub float %142, %145\l  %147 = fadd float %114, %144\l  %148 = fsub float %147, %114\l  %149 = fsub float %144, %148\l  %150 = fadd float %143, %146\l  %151 = fadd float %150, %149\l  %152 = fadd float %147, %151\l  %153 = fsub float %152, %147\l  %154 = fsub float %151, %153\l  %155 = fadd float %111, %152\l  %156 = fsub float %155, %111\l  %157 = fsub float %155, %156\l  %158 = fsub float %111, %157\l  %159 = fsub float %152, %156\l  %160 = fadd float %159, %158\l  %161 = fadd float %113, %154\l  %162 = fsub float %161, %113\l  %163 = fsub float %161, %162\l  %164 = fsub float %113, %163\l  %165 = fsub float %154, %162\l  %166 = fadd float %165, %164\l  %167 = fadd float %161, %160\l  %168 = fadd float %155, %167\l  %169 = fsub float %168, %155\l  %170 = fsub float %167, %169\l  %171 = fadd float %166, %170\l  %172 = fadd float %168, %171\l  %173 = fsub float %172, %168\l  %174 = fsub float %171, %173\l  %175 = fmul float %66, %172\l  %176 = fneg float %175\l  %177 = tail call float @llvm.fma.f32(float %66, float %172, float %176)\l  %178 = tail call float @llvm.fma.f32(float %66, float %174, float %177)\l  %179 = fadd float %175, %178\l  %180 = tail call float @llvm.fabs.f32(float %175) #3\l  %181 = fcmp oeq float %180, 0x7FF0000000000000\l  %182 = select i1 %181, float %175, float %179\l  %183 = fcmp oeq float %182, 0x40562E4300000000\l  %184 = select i1 %183, float 0x3EE0000000000000, float 0.000000e+00\l  %185 = fsub float %182, %184\l  %186 = fmul float %185, 0x3FF7154760000000\l  %187 = tail call float @llvm.rint.f32(float %186)\l  %188 = fcmp ogt float %185, 0x40562E4300000000\l  %189 = fcmp olt float %185, 0xC059D1DA00000000\l  %190 = fneg float %186\l  %191 = tail call float @llvm.fma.f32(float %185, float 0x3FF7154760000000,\l... float %190)\l  %192 = tail call float @llvm.fma.f32(float %185, float 0x3E54AE0BE0000000,\l... float %191)\l  %193 = fsub float %186, %187\l  %194 = fadd float %192, %193\l  %195 = tail call float @llvm.exp2.f32(float %194)\l  %196 = fptosi float %187 to i32\l  %197 = tail call float @llvm.amdgcn.ldexp.f32(float %195, i32 %196)\l  %198 = select i1 %189, float 0.000000e+00, float %197\l  %199 = select i1 %188, float 0x7FF0000000000000, float %198\l  %200 = tail call float @llvm.fabs.f32(float %66)\l  %201 = tail call float @llvm.trunc.f32(float %200)\l  %202 = fcmp oeq float %200, %201\l  %203 = zext i1 %202 to i32\l  %204 = fmul float %201, 5.000000e-01\l  %205 = tail call float @llvm.amdgcn.fract.f32(float %204)\l  %206 = tail call i1 @llvm.amdgcn.class.f32(float %204, i32 516)\l  %207 = select i1 %206, float 0.000000e+00, float %205\l  %208 = fcmp oeq float %207, 0.000000e+00\l  %209 = and i1 %202, %208\l  %210 = zext i1 %209 to i32\l  %211 = add nuw nsw i32 %210, %203\l  %212 = icmp eq i32 %211, 1\l  %213 = icmp ne i32 %211, 0\l  %214 = fcmp oeq float %200, 0x7FF0000000000000\l  br i1 %214, label %215, label %253\l|{<s0>T|<s1>F}}"];
	Node0x5a73570:s0 -> Node0x5a7bc50;
	Node0x5a73570:s1 -> Node0x5a7bce0;
	Node0x5a7bc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%215:\l215:                                              \l  %216 = fcmp oeq float %67, 1.000000e+00\l  %217 = fadd float %67, -1.000000e+00\l  %218 = bitcast float %66 to i32\l  %219 = bitcast float %217 to i32\l  %220 = xor i32 %219, %218\l  %221 = icmp sgt i32 %220, -1\l  %222 = select i1 %221, float 0x7FF0000000000000, float 0.000000e+00\l  %223 = select i1 %216, float %67, float %222\l  %224 = fcmp oeq float %67, 0x7FF0000000000000\l  %225 = fcmp oeq float %52, 0.000000e+00\l  %226 = or i1 %225, %224\l  %227 = fcmp olt float %66, 0.000000e+00\l  %228 = xor i1 %227, %225\l  %229 = select i1 %228, float 0.000000e+00, float 0x7FF0000000000000\l  %230 = select i1 %212, float %52, float 0.000000e+00\l  %231 = tail call float @llvm.copysign.f32(float %229, float %230)\l  %232 = select i1 %226, float %231, float %223\l  %233 = fcmp uno float %52, %66\l  %234 = select i1 %233, float 0x7FF8000000000000, float %232\l  %235 = fcmp oeq float %52, 1.000000e+00\l  %236 = fcmp oeq float %66, 0.000000e+00\l  %237 = or i1 %236, %235\l  %238 = select i1 %237, float 1.000000e+00, float %234\l  %239 = fadd contract float %238, %8\l  %240 = fdiv contract float %50, %239\l  %241 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  store float %240, float addrspace(1)* %241, align 4, !tbaa !7\l  %242 = getelementptr inbounds float, float addrspace(1)* %5, i64 %48\l  %243 = load float, float addrspace(1)* %242, align 4, !tbaa !7\l  %244 = tail call float @llvm.fabs.f32(float %243)\l  %245 = fcmp oeq float %244, 1.000000e+00\l  %246 = fadd float %244, -1.000000e+00\l  %247 = bitcast float %66 to i32\l  %248 = bitcast float %246 to i32\l  %249 = xor i32 %248, %247\l  %250 = icmp sgt i32 %249, -1\l  %251 = select i1 %250, float 0x7FF0000000000000, float 0.000000e+00\l  %252 = select i1 %245, float %244, float %251\l  br label %441\l}"];
	Node0x5a7bc50 -> Node0x5a7d6d0;
	Node0x5a7bce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%253:\l253:                                              \l  %254 = fcmp uge float %52, 0.000000e+00\l  %255 = select i1 %254, i1 true, i1 %213\l  %256 = tail call float @llvm.fabs.f32(float %199) #3\l  %257 = fcmp oeq float %256, 0x7FF0000000000000\l  %258 = tail call float @llvm.fabs.f32(float %182) #3\l  %259 = fcmp oeq float %258, 0x7FF0000000000000\l  %260 = fsub float %179, %175\l  %261 = fsub float %178, %260\l  %262 = select i1 %259, float 0.000000e+00, float %261\l  %263 = fadd float %184, %262\l  %264 = tail call float @llvm.fma.f32(float %199, float %263, float %199)\l  %265 = select i1 %257, float %199, float %264\l  %266 = fcmp olt float %52, 0.000000e+00\l  %267 = and i1 %212, %266\l  %268 = select i1 %267, float -0.000000e+00, float 0.000000e+00\l  %269 = tail call float @llvm.copysign.f32(float %265, float %268)\l  %270 = select i1 %255, float %269, float 0x7FF8000000000000\l  %271 = fcmp oeq float %67, 0x7FF0000000000000\l  %272 = fcmp oeq float %52, 0.000000e+00\l  %273 = or i1 %272, %271\l  %274 = fcmp olt float %66, 0.000000e+00\l  %275 = xor i1 %274, %272\l  %276 = select i1 %275, float 0.000000e+00, float 0x7FF0000000000000\l  %277 = select i1 %212, float %52, float 0.000000e+00\l  %278 = tail call float @llvm.copysign.f32(float %276, float %277)\l  %279 = select i1 %273, float %278, float %270\l  %280 = fcmp uno float %52, %66\l  %281 = select i1 %280, float 0x7FF8000000000000, float %279\l  %282 = fcmp oeq float %52, 1.000000e+00\l  %283 = fcmp oeq float %66, 0.000000e+00\l  %284 = or i1 %283, %282\l  %285 = select i1 %284, float 1.000000e+00, float %281\l  %286 = fadd contract float %285, %8\l  %287 = fdiv contract float %50, %286\l  %288 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  store float %287, float addrspace(1)* %288, align 4, !tbaa !7\l  %289 = getelementptr inbounds float, float addrspace(1)* %5, i64 %48\l  %290 = load float, float addrspace(1)* %289, align 4, !tbaa !7\l  %291 = tail call float @llvm.fabs.f32(float %290)\l  %292 = tail call float @llvm.amdgcn.frexp.mant.f32(float %291)\l  %293 = fcmp olt float %292, 0x3FE5555560000000\l  %294 = zext i1 %293 to i32\l  %295 = tail call float @llvm.amdgcn.ldexp.f32(float %292, i32 %294)\l  %296 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %291)\l  %297 = sub nsw i32 %296, %294\l  %298 = fadd float %295, -1.000000e+00\l  %299 = fadd float %295, 1.000000e+00\l  %300 = fadd float %299, -1.000000e+00\l  %301 = fsub float %295, %300\l  %302 = tail call float @llvm.amdgcn.rcp.f32(float %299)\l  %303 = fmul float %298, %302\l  %304 = fmul float %299, %303\l  %305 = fneg float %304\l  %306 = tail call float @llvm.fma.f32(float %303, float %299, float %305)\l  %307 = tail call float @llvm.fma.f32(float %303, float %301, float %306)\l  %308 = fadd float %304, %307\l  %309 = fsub float %308, %304\l  %310 = fsub float %307, %309\l  %311 = fsub float %298, %308\l  %312 = fsub float %298, %311\l  %313 = fsub float %312, %308\l  %314 = fsub float %313, %310\l  %315 = fadd float %311, %314\l  %316 = fmul float %302, %315\l  %317 = fadd float %303, %316\l  %318 = fsub float %317, %303\l  %319 = fsub float %316, %318\l  %320 = fmul float %317, %317\l  %321 = fneg float %320\l  %322 = tail call float @llvm.fma.f32(float %317, float %317, float %321)\l  %323 = fmul float %319, 2.000000e+00\l  %324 = tail call float @llvm.fma.f32(float %317, float %323, float %322)\l  %325 = fadd float %320, %324\l  %326 = fsub float %325, %320\l  %327 = fsub float %324, %326\l  %328 = tail call float @llvm.fmuladd.f32(float %325, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %329 = tail call float @llvm.fmuladd.f32(float %325, float %328, float\l... 0x3FD999BDE0000000)\l  %330 = sitofp i32 %297 to float\l  %331 = fmul float %330, 0x3FE62E4300000000\l  %332 = fneg float %331\l  %333 = tail call float @llvm.fma.f32(float %330, float 0x3FE62E4300000000,\l... float %332)\l  %334 = tail call float @llvm.fma.f32(float %330, float 0xBE205C6100000000,\l... float %333)\l  %335 = fadd float %331, %334\l  %336 = fsub float %335, %331\l  %337 = fsub float %334, %336\l  %338 = tail call float @llvm.amdgcn.ldexp.f32(float %317, i32 1)\l  %339 = fmul float %317, %325\l  %340 = fneg float %339\l  %341 = tail call float @llvm.fma.f32(float %325, float %317, float %340)\l  %342 = tail call float @llvm.fma.f32(float %325, float %319, float %341)\l  %343 = tail call float @llvm.fma.f32(float %327, float %317, float %342)\l  %344 = fadd float %339, %343\l  %345 = fsub float %344, %339\l  %346 = fsub float %343, %345\l  %347 = fmul float %325, %329\l  %348 = fneg float %347\l  %349 = tail call float @llvm.fma.f32(float %325, float %329, float %348)\l  %350 = tail call float @llvm.fma.f32(float %327, float %329, float %349)\l  %351 = fadd float %347, %350\l  %352 = fsub float %351, %347\l  %353 = fsub float %350, %352\l  %354 = fadd float %351, 0x3FE5555540000000\l  %355 = fadd float %354, 0xBFE5555540000000\l  %356 = fsub float %351, %355\l  %357 = fadd float %353, 0x3E2E720200000000\l  %358 = fadd float %357, %356\l  %359 = fadd float %354, %358\l  %360 = fsub float %359, %354\l  %361 = fsub float %358, %360\l  %362 = fmul float %344, %359\l  %363 = fneg float %362\l  %364 = tail call float @llvm.fma.f32(float %344, float %359, float %363)\l  %365 = tail call float @llvm.fma.f32(float %344, float %361, float %364)\l  %366 = tail call float @llvm.fma.f32(float %346, float %359, float %365)\l  %367 = tail call float @llvm.amdgcn.ldexp.f32(float %319, i32 1)\l  %368 = fadd float %362, %366\l  %369 = fsub float %368, %362\l  %370 = fsub float %366, %369\l  %371 = fadd float %338, %368\l  %372 = fsub float %371, %338\l  %373 = fsub float %368, %372\l  %374 = fadd float %367, %370\l  %375 = fadd float %374, %373\l  %376 = fadd float %371, %375\l  %377 = fsub float %376, %371\l  %378 = fsub float %375, %377\l  %379 = fadd float %335, %376\l  %380 = fsub float %379, %335\l  %381 = fsub float %379, %380\l  %382 = fsub float %335, %381\l  %383 = fsub float %376, %380\l  %384 = fadd float %383, %382\l  %385 = fadd float %337, %378\l  %386 = fsub float %385, %337\l  %387 = fsub float %385, %386\l  %388 = fsub float %337, %387\l  %389 = fsub float %378, %386\l  %390 = fadd float %389, %388\l  %391 = fadd float %385, %384\l  %392 = fadd float %379, %391\l  %393 = fsub float %392, %379\l  %394 = fsub float %391, %393\l  %395 = fadd float %390, %394\l  %396 = fadd float %392, %395\l  %397 = fsub float %396, %392\l  %398 = fsub float %395, %397\l  %399 = fmul float %66, %396\l  %400 = fneg float %399\l  %401 = tail call float @llvm.fma.f32(float %66, float %396, float %400)\l  %402 = tail call float @llvm.fma.f32(float %66, float %398, float %401)\l  %403 = fadd float %399, %402\l  %404 = fsub float %403, %399\l  %405 = fsub float %402, %404\l  %406 = tail call float @llvm.fabs.f32(float %399) #3\l  %407 = fcmp oeq float %406, 0x7FF0000000000000\l  %408 = select i1 %407, float %399, float %403\l  %409 = tail call float @llvm.fabs.f32(float %408) #3\l  %410 = fcmp oeq float %409, 0x7FF0000000000000\l  %411 = select i1 %410, float 0.000000e+00, float %405\l  %412 = fcmp oeq float %408, 0x40562E4300000000\l  %413 = select i1 %412, float 0x3EE0000000000000, float 0.000000e+00\l  %414 = fsub float %408, %413\l  %415 = fadd float %413, %411\l  %416 = fmul float %414, 0x3FF7154760000000\l  %417 = tail call float @llvm.rint.f32(float %416)\l  %418 = fcmp ogt float %414, 0x40562E4300000000\l  %419 = fcmp olt float %414, 0xC059D1DA00000000\l  %420 = fneg float %416\l  %421 = tail call float @llvm.fma.f32(float %414, float 0x3FF7154760000000,\l... float %420)\l  %422 = tail call float @llvm.fma.f32(float %414, float 0x3E54AE0BE0000000,\l... float %421)\l  %423 = fsub float %416, %417\l  %424 = fadd float %422, %423\l  %425 = tail call float @llvm.exp2.f32(float %424)\l  %426 = fptosi float %417 to i32\l  %427 = tail call float @llvm.amdgcn.ldexp.f32(float %425, i32 %426)\l  %428 = select i1 %419, float 0.000000e+00, float %427\l  %429 = select i1 %418, float 0x7FF0000000000000, float %428\l  %430 = tail call float @llvm.fma.f32(float %429, float %415, float %429)\l  %431 = tail call float @llvm.fabs.f32(float %429) #3\l  %432 = fcmp oeq float %431, 0x7FF0000000000000\l  %433 = select i1 %432, float %429, float %430\l  %434 = fcmp olt float %290, 0.000000e+00\l  %435 = and i1 %212, %434\l  %436 = select i1 %435, float -0.000000e+00, float 0.000000e+00\l  %437 = tail call float @llvm.copysign.f32(float %433, float %436)\l  %438 = fcmp uge float %290, 0.000000e+00\l  %439 = select i1 %438, i1 true, i1 %213\l  %440 = select i1 %439, float %437, float 0x7FF8000000000000\l  br label %441\l}"];
	Node0x5a7bce0 -> Node0x5a7d6d0;
	Node0x5a7d6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%441:\l441:                                              \l  %442 = phi float [ %291, %253 ], [ %244, %215 ]\l  %443 = phi float [ %290, %253 ], [ %243, %215 ]\l  %444 = phi i1 [ %283, %253 ], [ %236, %215 ]\l  %445 = phi i1 [ %274, %253 ], [ %227, %215 ]\l  %446 = phi float [ %440, %253 ], [ %252, %215 ]\l  %447 = getelementptr inbounds float, float addrspace(1)* %3, i64 %48\l  %448 = load float, float addrspace(1)* %447, align 4, !tbaa !7\l  %449 = fcmp oeq float %442, 0x7FF0000000000000\l  %450 = fcmp oeq float %443, 0.000000e+00\l  %451 = or i1 %450, %449\l  %452 = xor i1 %445, %450\l  %453 = select i1 %452, float 0.000000e+00, float 0x7FF0000000000000\l  %454 = select i1 %212, float %443, float 0.000000e+00\l  %455 = tail call float @llvm.copysign.f32(float %453, float %454)\l  %456 = select i1 %451, float %455, float %446\l  %457 = fcmp uno float %443, %66\l  %458 = select i1 %457, float 0x7FF8000000000000, float %456\l  %459 = fcmp oeq float %443, 1.000000e+00\l  %460 = or i1 %444, %459\l  %461 = select i1 %460, float 1.000000e+00, float %458\l  %462 = fadd contract float %461, %8\l  %463 = fdiv contract float %448, %462\l  br label %464\l}"];
	Node0x5a7d6d0 -> Node0x5a72490;
	Node0x5a72490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%464:\l464:                                              \l  %465 = phi i64 [ %23, %22 ], [ %48, %53 ], [ %48, %441 ], [ %32, %31 ]\l  %466 = phi float [ %28, %22 ], [ %64, %53 ], [ %463, %441 ], [ %45, %31 ]\l  %467 = getelementptr inbounds float, float addrspace(1)* %1, i64 %465\l  store float %466, float addrspace(1)* %467, align 4, !tbaa !7\l  br label %468\l}"];
	Node0x5a72490 -> Node0x5a70580;
	Node0x5a70580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%468:\l468:                                              \l  ret void\l}"];
}
