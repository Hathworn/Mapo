digraph "CFG for '_Z22Solve_redblack2_KernelPfPKfiiiiS1_S1_ffb' function" {
	label="CFG for '_Z22Solve_redblack2_KernelPfPKfiiiiS1_S1_ffb' function";

	Node0x5580aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %16 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %17 = getelementptr i8, i8 addrspace(4)* %16, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %12, %20\l  %22 = add i32 %21, %14\l  %23 = getelementptr i8, i8 addrspace(4)* %16, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !5, !invariant.load !6\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %13, %26\l  %28 = add i32 %27, %15\l  %29 = icmp slt i32 %22, %2\l  %30 = icmp slt i32 %28, %3\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %125\l|{<s0>T|<s1>F}}"];
	Node0x5580aa0:s0 -> Node0x5585090;
	Node0x5580aa0:s1 -> Node0x5585120;
	Node0x5585090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%32:\l32:                                               \l  %33 = add nsw i32 %28, %22\l  %34 = srem i32 %33, 2\l  %35 = zext i1 %10 to i32\l  %36 = icmp eq i32 %34, %35\l  br i1 %36, label %125, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5585090:s0 -> Node0x5585120;
	Node0x5585090:s1 -> Node0x55832f0;
	Node0x55832f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%37:\l37:                                               \l  %38 = mul nsw i32 %28, %2\l  %39 = add nsw i32 %38, %22\l  %40 = mul nsw i32 %4, %2\l  %41 = mul nsw i32 %39, %4\l  %42 = add nsw i32 %41, %5\l  %43 = icmp sgt i32 %28, 0\l  br i1 %43, label %44, label %57\l|{<s0>T|<s1>F}}"];
	Node0x55832f0:s0 -> Node0x5585a40;
	Node0x55832f0:s1 -> Node0x5585a90;
	Node0x5585a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%44:\l44:                                               \l  %45 = sub nsw i32 %39, %2\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %7, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %49 = fmul contract float %48, %8\l  %50 = fadd contract float %49, 0.000000e+00\l  %51 = sub nsw i32 %42, %40\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %55 = fmul contract float %49, %54\l  %56 = fadd contract float %55, 0.000000e+00\l  br label %57\l}"];
	Node0x5585a40 -> Node0x5585a90;
	Node0x5585a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%57:\l57:                                               \l  %58 = phi float [ %50, %44 ], [ 0.000000e+00, %37 ]\l  %59 = phi float [ %56, %44 ], [ 0.000000e+00, %37 ]\l  %60 = add nsw i32 %3, -1\l  %61 = icmp slt i32 %28, %60\l  br i1 %61, label %62, label %74\l|{<s0>T|<s1>F}}"];
	Node0x5585a90:s0 -> Node0x5587770;
	Node0x5585a90:s1 -> Node0x55877c0;
	Node0x5587770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%62:\l62:                                               \l  %63 = sext i32 %39 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %7, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %66 = fmul contract float %65, %8\l  %67 = fadd contract float %58, %66\l  %68 = add nsw i32 %42, %40\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %0, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %72 = fmul contract float %66, %71\l  %73 = fadd contract float %59, %72\l  br label %74\l}"];
	Node0x5587770 -> Node0x55877c0;
	Node0x55877c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%74:\l74:                                               \l  %75 = phi float [ %67, %62 ], [ %58, %57 ]\l  %76 = phi float [ %73, %62 ], [ %59, %57 ]\l  %77 = icmp sgt i32 %22, 0\l  br i1 %77, label %78, label %91\l|{<s0>T|<s1>F}}"];
	Node0x55877c0:s0 -> Node0x55883a0;
	Node0x55877c0:s1 -> Node0x55883f0;
	Node0x55883a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%78:\l78:                                               \l  %79 = add nsw i32 %39, -1\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %6, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %83 = fmul contract float %82, %8\l  %84 = fadd contract float %75, %83\l  %85 = sub nsw i32 %42, %4\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %89 = fmul contract float %83, %88\l  %90 = fadd contract float %76, %89\l  br label %91\l}"];
	Node0x55883a0 -> Node0x55883f0;
	Node0x55883f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%91:\l91:                                               \l  %92 = phi float [ %84, %78 ], [ %75, %74 ]\l  %93 = phi float [ %90, %78 ], [ %76, %74 ]\l  %94 = add nsw i32 %2, -1\l  %95 = icmp slt i32 %22, %94\l  br i1 %95, label %96, label %108\l|{<s0>T|<s1>F}}"];
	Node0x55883f0:s0 -> Node0x5588ec0;
	Node0x55883f0:s1 -> Node0x5588f10;
	Node0x5588ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%96:\l96:                                               \l  %97 = sext i32 %39 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %6, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %100 = fmul contract float %99, %8\l  %101 = fadd contract float %92, %100\l  %102 = add nsw i32 %42, %4\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %0, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %106 = fmul contract float %100, %105\l  %107 = fadd contract float %93, %106\l  br label %108\l}"];
	Node0x5588ec0 -> Node0x5588f10;
	Node0x5588f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%108:\l108:                                              \l  %109 = phi float [ %101, %96 ], [ %92, %91 ]\l  %110 = phi float [ %107, %96 ], [ %93, %91 ]\l  %111 = fadd contract float %109, 1.000000e+00\l  %112 = sext i32 %42 to i64\l  %113 = fcmp contract ogt float %111, 0.000000e+00\l  br i1 %113, label %114, label %125\l|{<s0>T|<s1>F}}"];
	Node0x5588f10:s0 -> Node0x55899c0;
	Node0x5588f10:s1 -> Node0x5585120;
	Node0x55899c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%114:\l114:                                              \l  %115 = getelementptr inbounds float, float addrspace(1)* %1, i64 %112\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %117 = fadd contract float %110, %116\l  %118 = fdiv contract float %117, %111\l  %119 = fmul contract float %118, %9\l  %120 = getelementptr inbounds float, float addrspace(1)* %0, i64 %112\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %122 = fsub contract float 1.000000e+00, %9\l  %123 = fmul contract float %122, %121\l  %124 = fadd contract float %123, %119\l  store float %124, float addrspace(1)* %120, align 4, !tbaa !7\l  br label %125\l}"];
	Node0x55899c0 -> Node0x5585120;
	Node0x5585120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%125:\l125:                                              \l  ret void\l}"];
}
