digraph "CFG for '_Z10blurKernelPhS_iii' function" {
	label="CFG for '_Z10blurKernelPhS_iii' function";

	Node0x6487ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 2, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %22 = add i32 %20, %21\l  %23 = icmp slt i32 %22, %2\l  %24 = icmp slt i32 %14, %3\l  %25 = select i1 %23, i1 %24, i1 false\l  br i1 %25, label %26, label %72\l|{<s0>T|<s1>F}}"];
	Node0x6487ac0:s0 -> Node0x648b530;
	Node0x6487ac0:s1 -> Node0x648b5c0;
	Node0x648b530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%26:\l26:                                               \l  %27 = sub i32 0, %4\l  %28 = icmp slt i32 %4, 0\l  br i1 %28, label %40, label %29\l|{<s0>T|<s1>F}}"];
	Node0x648b530:s0 -> Node0x648b850;
	Node0x648b530:s1 -> Node0x648b8a0;
	Node0x648b8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%29:\l29:                                               \l  %30 = phi i32 [ %69, %46 ], [ 0, %26 ]\l  %31 = phi i32 [ %68, %46 ], [ 0, %26 ]\l  %32 = phi i32 [ %47, %46 ], [ %27, %26 ]\l  %33 = add nsw i32 %32, %14\l  %34 = icmp sgt i32 %33, -1\l  %35 = icmp slt i32 %33, %3\l  %36 = mul nsw i32 %33, %2\l  br label %49\l}"];
	Node0x648b8a0 -> Node0x6489c30;
	Node0x648c200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%37:\l37:                                               \l  %38 = sdiv i32 %69, %68\l  %39 = trunc i32 %38 to i8\l  br label %40\l}"];
	Node0x648c200 -> Node0x648b850;
	Node0x648b850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%40:\l40:                                               \l  %41 = phi i8 [ %39, %37 ], [ poison, %26 ]\l  %42 = mul nsw i32 %14, %2\l  %43 = add nsw i32 %42, %22\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %44\l  store i8 %41, i8 addrspace(1)* %45, align 1, !tbaa !7\l  br label %72\l}"];
	Node0x648b850 -> Node0x648b5c0;
	Node0x648ba10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%46:\l46:                                               \l  %47 = add i32 %32, 1\l  %48 = icmp eq i32 %32, %4\l  br i1 %48, label %37, label %29, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x648ba10:s0 -> Node0x648c200;
	Node0x648ba10:s1 -> Node0x648b8a0;
	Node0x6489c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = phi i32 [ %30, %29 ], [ %69, %67 ]\l  %51 = phi i32 [ %31, %29 ], [ %68, %67 ]\l  %52 = phi i32 [ %27, %29 ], [ %70, %67 ]\l  %53 = add nsw i32 %52, %22\l  br i1 %34, label %54, label %67\l|{<s0>T|<s1>F}}"];
	Node0x6489c30:s0 -> Node0x648d2a0;
	Node0x6489c30:s1 -> Node0x648cf70;
	Node0x648d2a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%54:\l54:                                               \l  %55 = icmp sgt i32 %53, -1\l  %56 = select i1 %35, i1 %55, i1 false\l  %57 = icmp slt i32 %53, %2\l  %58 = select i1 %56, i1 %57, i1 false\l  br i1 %58, label %59, label %67\l|{<s0>T|<s1>F}}"];
	Node0x648d2a0:s0 -> Node0x648d660;
	Node0x648d2a0:s1 -> Node0x648cf70;
	Node0x648d660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%59:\l59:                                               \l  %60 = add nsw i32 %53, %36\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %61\l  %63 = load i8, i8 addrspace(1)* %62, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %64 = zext i8 %63 to i32\l  %65 = add nsw i32 %50, %64\l  %66 = add nsw i32 %51, 1\l  br label %67\l}"];
	Node0x648d660 -> Node0x648cf70;
	Node0x648cf70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi i32 [ %66, %59 ], [ %51, %54 ], [ %51, %49 ]\l  %69 = phi i32 [ %65, %59 ], [ %50, %54 ], [ %50, %49 ]\l  %70 = add i32 %52, 1\l  %71 = icmp eq i32 %52, %4\l  br i1 %71, label %46, label %49, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x648cf70:s0 -> Node0x648ba10;
	Node0x648cf70:s1 -> Node0x6489c30;
	Node0x648b5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%72:\l72:                                               \l  ret void\l}"];
}
