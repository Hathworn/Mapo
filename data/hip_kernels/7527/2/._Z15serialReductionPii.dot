digraph "CFG for '_Z15serialReductionPii' function" {
	label="CFG for '_Z15serialReductionPii' function";

	Node0x5866120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%2:\l  %3 = icmp sgt i32 %1, 0\l  br i1 %3, label %4, label %28\l|{<s0>T|<s1>F}}"];
	Node0x5866120:s0 -> Node0x5866840;
	Node0x5866120:s1 -> Node0x58668d0;
	Node0x5866840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%4:\l4:                                                \l  %5 = and i32 %1, 7\l  %6 = icmp ult i32 %1, 8\l  br i1 %6, label %9, label %7\l|{<s0>T|<s1>F}}"];
	Node0x5866840:s0 -> Node0x5866bb0;
	Node0x5866840:s1 -> Node0x5866c00;
	Node0x5866c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%7:\l7:                                                \l  %8 = and i32 %1, -8\l  br label %38\l}"];
	Node0x5866c00 -> Node0x5866a10;
	Node0x5866bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%9:\l9:                                                \l  %10 = phi i32 [ undef, %4 ], [ %80, %38 ]\l  %11 = phi i32 [ 0, %4 ], [ %81, %38 ]\l  %12 = phi i32 [ 0, %4 ], [ %80, %38 ]\l  %13 = icmp eq i32 %5, 0\l  br i1 %13, label %25, label %14\l|{<s0>T|<s1>F}}"];
	Node0x5866bb0:s0 -> Node0x5867660;
	Node0x5866bb0:s1 -> Node0x58676f0;
	Node0x58676f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%14:\l14:                                               \l  %15 = phi i32 [ %22, %14 ], [ %11, %9 ]\l  %16 = phi i32 [ %21, %14 ], [ %12, %9 ]\l  %17 = phi i32 [ %23, %14 ], [ 0, %9 ]\l  %18 = zext i32 %15 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %21 = add nsw i32 %20, %16\l  %22 = add nuw nsw i32 %15, 1\l  %23 = add i32 %17, 1\l  %24 = icmp eq i32 %23, %5\l  br i1 %24, label %25, label %14, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x58676f0:s0 -> Node0x5867660;
	Node0x58676f0:s1 -> Node0x58676f0;
	Node0x5867660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%25:\l25:                                               \l  %26 = phi i32 [ %10, %9 ], [ %21, %14 ]\l  %27 = zext i32 %26 to i64\l  br label %28\l}"];
	Node0x5867660 -> Node0x58668d0;
	Node0x58668d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%28:\l28:                                               \l  %29 = phi i64 [ 0, %2 ], [ %27, %25 ]\l  %30 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %31 = getelementptr inbounds i8, i8 addrspace(4)* %30, i64 24\l  %32 = bitcast i8 addrspace(4)* %31 to i64 addrspace(4)*\l  %33 = load i64, i64 addrspace(4)* %32, align 8, !tbaa !11\l  %34 = inttoptr i64 %33 to i8 addrspace(1)*\l  %35 = addrspacecast i8 addrspace(1)* %34 to i8*\l  %36 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %35,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %37 = extractelement \<2 x i64\> %36, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([3 x i8], [3 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %84, label %88\l|{<s0>T|<s1>F}}"];
	Node0x58668d0:s0 -> Node0x5869eb0;
	Node0x58668d0:s1 -> Node0x586a8a0;
	Node0x5866a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%38:\l38:                                               \l  %39 = phi i32 [ 0, %7 ], [ %81, %38 ]\l  %40 = phi i32 [ 0, %7 ], [ %80, %38 ]\l  %41 = phi i32 [ 0, %7 ], [ %82, %38 ]\l  %42 = zext i32 %39 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %42\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %45 = add nsw i32 %44, %40\l  %46 = or i32 %39, 1\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %50 = add nsw i32 %49, %45\l  %51 = or i32 %39, 2\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %52\l  %54 = load i32, i32 addrspace(1)* %53, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %55 = add nsw i32 %54, %50\l  %56 = or i32 %39, 3\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %57\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %60 = add nsw i32 %59, %55\l  %61 = or i32 %39, 4\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %62\l  %64 = load i32, i32 addrspace(1)* %63, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %65 = add nsw i32 %64, %60\l  %66 = or i32 %39, 5\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %70 = add nsw i32 %69, %65\l  %71 = or i32 %39, 6\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %72\l  %74 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %75 = add nsw i32 %74, %70\l  %76 = or i32 %39, 7\l  %77 = zext i32 %76 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %77\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %80 = add nsw i32 %79, %75\l  %81 = add nuw nsw i32 %39, 8\l  %82 = add i32 %41, 8\l  %83 = icmp eq i32 %82, %8\l  br i1 %83, label %9, label %38, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5866a10:s0 -> Node0x5866bb0;
	Node0x5866a10:s1 -> Node0x5866a10;
	Node0x5869eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%84:\l84:                                               \l  %85 = and i64 %37, -225\l  %86 = or i64 %85, 32\l  %87 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %35,\l... i64 noundef %86, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %529\l}"];
	Node0x5869eb0 -> Node0x586d660;
	Node0x586a8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%88:\l88:                                               \l  %89 = and i64 %37, 2\l  %90 = and i64 %37, -3\l  %91 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %90, i64 0\l  br label %92\l}"];
	Node0x586a8a0 -> Node0x586e1c0;
	Node0x586e1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%92:\l92:                                               \l  %93 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([3 x i8], [3 x i8] addrspace(4)* @.str, i64 0, i64 0)\l... to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([3 x i8], [3 x i8] addrspace(4)* @.str,\l... i64 0, i64 2) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint ([3 x\l... i8]* addrspacecast ([3 x i8] addrspace(4)* @.str to [3 x i8]*) to i64)), i64\l... 1))), %88 ], [ %526, %518 ]\l  %94 = phi i8 addrspace(4)* [ getelementptr inbounds ([3 x i8], [3 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %88 ], [ %527, %518 ]\l  %95 = phi \<2 x i64\> [ %91, %88 ], [ %525, %518 ]\l  %96 = icmp ugt i64 %93, 56\l  %97 = extractelement \<2 x i64\> %95, i64 0\l  %98 = or i64 %97, %89\l  %99 = insertelement \<2 x i64\> poison, i64 %98, i64 0\l  %100 = select i1 %96, \<2 x i64\> %95, \<2 x i64\> %99\l  %101 = tail call i64 @llvm.umin.i64(i64 %93, i64 56)\l  %102 = trunc i64 %101 to i32\l  %103 = extractelement \<2 x i64\> %100, i64 0\l  %104 = icmp ugt i32 %102, 7\l  br i1 %104, label %107, label %105\l|{<s0>T|<s1>F}}"];
	Node0x586e1c0:s0 -> Node0x586f050;
	Node0x586e1c0:s1 -> Node0x586f0e0;
	Node0x586f0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%105:\l105:                                              \l  %106 = icmp eq i32 %102, 0\l  br i1 %106, label %160, label %147\l|{<s0>T|<s1>F}}"];
	Node0x586f0e0:s0 -> Node0x586f2b0;
	Node0x586f0e0:s1 -> Node0x586f300;
	Node0x586f050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%107:\l107:                                              \l  %108 = load i8, i8 addrspace(4)* %94, align 1, !tbaa !17\l  %109 = zext i8 %108 to i64\l  %110 = getelementptr inbounds i8, i8 addrspace(4)* %94, i64 1\l  %111 = load i8, i8 addrspace(4)* %110, align 1, !tbaa !17\l  %112 = zext i8 %111 to i64\l  %113 = shl nuw nsw i64 %112, 8\l  %114 = or i64 %113, %109\l  %115 = getelementptr inbounds i8, i8 addrspace(4)* %94, i64 2\l  %116 = load i8, i8 addrspace(4)* %115, align 1, !tbaa !17\l  %117 = zext i8 %116 to i64\l  %118 = shl nuw nsw i64 %117, 16\l  %119 = or i64 %114, %118\l  %120 = getelementptr inbounds i8, i8 addrspace(4)* %94, i64 3\l  %121 = load i8, i8 addrspace(4)* %120, align 1, !tbaa !17\l  %122 = zext i8 %121 to i64\l  %123 = shl nuw nsw i64 %122, 24\l  %124 = or i64 %119, %123\l  %125 = getelementptr inbounds i8, i8 addrspace(4)* %94, i64 4\l  %126 = load i8, i8 addrspace(4)* %125, align 1, !tbaa !17\l  %127 = zext i8 %126 to i64\l  %128 = shl nuw nsw i64 %127, 32\l  %129 = or i64 %124, %128\l  %130 = getelementptr inbounds i8, i8 addrspace(4)* %94, i64 5\l  %131 = load i8, i8 addrspace(4)* %130, align 1, !tbaa !17\l  %132 = zext i8 %131 to i64\l  %133 = shl nuw nsw i64 %132, 40\l  %134 = or i64 %129, %133\l  %135 = getelementptr inbounds i8, i8 addrspace(4)* %94, i64 6\l  %136 = load i8, i8 addrspace(4)* %135, align 1, !tbaa !17\l  %137 = zext i8 %136 to i64\l  %138 = shl nuw nsw i64 %137, 48\l  %139 = or i64 %134, %138\l  %140 = getelementptr inbounds i8, i8 addrspace(4)* %94, i64 7\l  %141 = load i8, i8 addrspace(4)* %140, align 1, !tbaa !17\l  %142 = zext i8 %141 to i64\l  %143 = shl nuw i64 %142, 56\l  %144 = or i64 %139, %143\l  %145 = add nsw i32 %102, -8\l  %146 = getelementptr inbounds i8, i8 addrspace(4)* %94, i64 8\l  br label %160\l}"];
	Node0x586f050 -> Node0x586f2b0;
	Node0x586f300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%147:\l147:                                              \l  %148 = phi i32 [ %158, %147 ], [ 0, %105 ]\l  %149 = phi i64 [ %157, %147 ], [ 0, %105 ]\l  %150 = zext i32 %148 to i64\l  %151 = getelementptr inbounds i8, i8 addrspace(4)* %94, i64 %150\l  %152 = load i8, i8 addrspace(4)* %151, align 1, !tbaa !17\l  %153 = zext i8 %152 to i64\l  %154 = shl i32 %148, 3\l  %155 = zext i32 %154 to i64\l  %156 = shl nuw i64 %153, %155\l  %157 = or i64 %156, %149\l  %158 = add nuw nsw i32 %148, 1\l  %159 = icmp eq i32 %158, %102\l  br i1 %159, label %160, label %147, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x586f300:s0 -> Node0x586f2b0;
	Node0x586f300:s1 -> Node0x586f300;
	Node0x586f2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%160:\l160:                                              \l  %161 = phi i8 addrspace(4)* [ %146, %107 ], [ %94, %105 ], [ %94, %147 ]\l  %162 = phi i32 [ %145, %107 ], [ 0, %105 ], [ 0, %147 ]\l  %163 = phi i64 [ %144, %107 ], [ 0, %105 ], [ %157, %147 ]\l  %164 = icmp ugt i32 %162, 7\l  br i1 %164, label %167, label %165\l|{<s0>T|<s1>F}}"];
	Node0x586f2b0:s0 -> Node0x58721f0;
	Node0x586f2b0:s1 -> Node0x5872240;
	Node0x5872240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%165:\l165:                                              \l  %166 = icmp eq i32 %162, 0\l  br i1 %166, label %220, label %207\l|{<s0>T|<s1>F}}"];
	Node0x5872240:s0 -> Node0x5872410;
	Node0x5872240:s1 -> Node0x5872460;
	Node0x58721f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%167:\l167:                                              \l  %168 = load i8, i8 addrspace(4)* %161, align 1, !tbaa !17\l  %169 = zext i8 %168 to i64\l  %170 = getelementptr inbounds i8, i8 addrspace(4)* %161, i64 1\l  %171 = load i8, i8 addrspace(4)* %170, align 1, !tbaa !17\l  %172 = zext i8 %171 to i64\l  %173 = shl nuw nsw i64 %172, 8\l  %174 = or i64 %173, %169\l  %175 = getelementptr inbounds i8, i8 addrspace(4)* %161, i64 2\l  %176 = load i8, i8 addrspace(4)* %175, align 1, !tbaa !17\l  %177 = zext i8 %176 to i64\l  %178 = shl nuw nsw i64 %177, 16\l  %179 = or i64 %174, %178\l  %180 = getelementptr inbounds i8, i8 addrspace(4)* %161, i64 3\l  %181 = load i8, i8 addrspace(4)* %180, align 1, !tbaa !17\l  %182 = zext i8 %181 to i64\l  %183 = shl nuw nsw i64 %182, 24\l  %184 = or i64 %179, %183\l  %185 = getelementptr inbounds i8, i8 addrspace(4)* %161, i64 4\l  %186 = load i8, i8 addrspace(4)* %185, align 1, !tbaa !17\l  %187 = zext i8 %186 to i64\l  %188 = shl nuw nsw i64 %187, 32\l  %189 = or i64 %184, %188\l  %190 = getelementptr inbounds i8, i8 addrspace(4)* %161, i64 5\l  %191 = load i8, i8 addrspace(4)* %190, align 1, !tbaa !17\l  %192 = zext i8 %191 to i64\l  %193 = shl nuw nsw i64 %192, 40\l  %194 = or i64 %189, %193\l  %195 = getelementptr inbounds i8, i8 addrspace(4)* %161, i64 6\l  %196 = load i8, i8 addrspace(4)* %195, align 1, !tbaa !17\l  %197 = zext i8 %196 to i64\l  %198 = shl nuw nsw i64 %197, 48\l  %199 = or i64 %194, %198\l  %200 = getelementptr inbounds i8, i8 addrspace(4)* %161, i64 7\l  %201 = load i8, i8 addrspace(4)* %200, align 1, !tbaa !17\l  %202 = zext i8 %201 to i64\l  %203 = shl nuw i64 %202, 56\l  %204 = or i64 %199, %203\l  %205 = add nsw i32 %162, -8\l  %206 = getelementptr inbounds i8, i8 addrspace(4)* %161, i64 8\l  br label %220\l}"];
	Node0x58721f0 -> Node0x5872410;
	Node0x5872460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%207:\l207:                                              \l  %208 = phi i32 [ %218, %207 ], [ 0, %165 ]\l  %209 = phi i64 [ %217, %207 ], [ 0, %165 ]\l  %210 = zext i32 %208 to i64\l  %211 = getelementptr inbounds i8, i8 addrspace(4)* %161, i64 %210\l  %212 = load i8, i8 addrspace(4)* %211, align 1, !tbaa !17\l  %213 = zext i8 %212 to i64\l  %214 = shl i32 %208, 3\l  %215 = zext i32 %214 to i64\l  %216 = shl nuw i64 %213, %215\l  %217 = or i64 %216, %209\l  %218 = add nuw nsw i32 %208, 1\l  %219 = icmp eq i32 %218, %162\l  br i1 %219, label %220, label %207\l|{<s0>T|<s1>F}}"];
	Node0x5872460:s0 -> Node0x5872410;
	Node0x5872460:s1 -> Node0x5872460;
	Node0x5872410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%220:\l220:                                              \l  %221 = phi i8 addrspace(4)* [ %206, %167 ], [ %161, %165 ], [ %161, %207 ]\l  %222 = phi i32 [ %205, %167 ], [ 0, %165 ], [ 0, %207 ]\l  %223 = phi i64 [ %204, %167 ], [ 0, %165 ], [ %217, %207 ]\l  %224 = icmp ugt i32 %222, 7\l  br i1 %224, label %227, label %225\l|{<s0>T|<s1>F}}"];
	Node0x5872410:s0 -> Node0x58744c0;
	Node0x5872410:s1 -> Node0x5874510;
	Node0x5874510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%225:\l225:                                              \l  %226 = icmp eq i32 %222, 0\l  br i1 %226, label %280, label %267\l|{<s0>T|<s1>F}}"];
	Node0x5874510:s0 -> Node0x58746a0;
	Node0x5874510:s1 -> Node0x58746f0;
	Node0x58744c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%227:\l227:                                              \l  %228 = load i8, i8 addrspace(4)* %221, align 1, !tbaa !17\l  %229 = zext i8 %228 to i64\l  %230 = getelementptr inbounds i8, i8 addrspace(4)* %221, i64 1\l  %231 = load i8, i8 addrspace(4)* %230, align 1, !tbaa !17\l  %232 = zext i8 %231 to i64\l  %233 = shl nuw nsw i64 %232, 8\l  %234 = or i64 %233, %229\l  %235 = getelementptr inbounds i8, i8 addrspace(4)* %221, i64 2\l  %236 = load i8, i8 addrspace(4)* %235, align 1, !tbaa !17\l  %237 = zext i8 %236 to i64\l  %238 = shl nuw nsw i64 %237, 16\l  %239 = or i64 %234, %238\l  %240 = getelementptr inbounds i8, i8 addrspace(4)* %221, i64 3\l  %241 = load i8, i8 addrspace(4)* %240, align 1, !tbaa !17\l  %242 = zext i8 %241 to i64\l  %243 = shl nuw nsw i64 %242, 24\l  %244 = or i64 %239, %243\l  %245 = getelementptr inbounds i8, i8 addrspace(4)* %221, i64 4\l  %246 = load i8, i8 addrspace(4)* %245, align 1, !tbaa !17\l  %247 = zext i8 %246 to i64\l  %248 = shl nuw nsw i64 %247, 32\l  %249 = or i64 %244, %248\l  %250 = getelementptr inbounds i8, i8 addrspace(4)* %221, i64 5\l  %251 = load i8, i8 addrspace(4)* %250, align 1, !tbaa !17\l  %252 = zext i8 %251 to i64\l  %253 = shl nuw nsw i64 %252, 40\l  %254 = or i64 %249, %253\l  %255 = getelementptr inbounds i8, i8 addrspace(4)* %221, i64 6\l  %256 = load i8, i8 addrspace(4)* %255, align 1, !tbaa !17\l  %257 = zext i8 %256 to i64\l  %258 = shl nuw nsw i64 %257, 48\l  %259 = or i64 %254, %258\l  %260 = getelementptr inbounds i8, i8 addrspace(4)* %221, i64 7\l  %261 = load i8, i8 addrspace(4)* %260, align 1, !tbaa !17\l  %262 = zext i8 %261 to i64\l  %263 = shl nuw i64 %262, 56\l  %264 = or i64 %259, %263\l  %265 = add nsw i32 %222, -8\l  %266 = getelementptr inbounds i8, i8 addrspace(4)* %221, i64 8\l  br label %280\l}"];
	Node0x58744c0 -> Node0x58746a0;
	Node0x58746f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%267:\l267:                                              \l  %268 = phi i32 [ %278, %267 ], [ 0, %225 ]\l  %269 = phi i64 [ %277, %267 ], [ 0, %225 ]\l  %270 = zext i32 %268 to i64\l  %271 = getelementptr inbounds i8, i8 addrspace(4)* %221, i64 %270\l  %272 = load i8, i8 addrspace(4)* %271, align 1, !tbaa !17\l  %273 = zext i8 %272 to i64\l  %274 = shl i32 %268, 3\l  %275 = zext i32 %274 to i64\l  %276 = shl nuw i64 %273, %275\l  %277 = or i64 %276, %269\l  %278 = add nuw nsw i32 %268, 1\l  %279 = icmp eq i32 %278, %222\l  br i1 %279, label %280, label %267\l|{<s0>T|<s1>F}}"];
	Node0x58746f0:s0 -> Node0x58746a0;
	Node0x58746f0:s1 -> Node0x58746f0;
	Node0x58746a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%280:\l280:                                              \l  %281 = phi i8 addrspace(4)* [ %266, %227 ], [ %221, %225 ], [ %221, %267 ]\l  %282 = phi i32 [ %265, %227 ], [ 0, %225 ], [ 0, %267 ]\l  %283 = phi i64 [ %264, %227 ], [ 0, %225 ], [ %277, %267 ]\l  %284 = icmp ugt i32 %282, 7\l  br i1 %284, label %287, label %285\l|{<s0>T|<s1>F}}"];
	Node0x58746a0:s0 -> Node0x5876f10;
	Node0x58746a0:s1 -> Node0x5876f60;
	Node0x5876f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%285:\l285:                                              \l  %286 = icmp eq i32 %282, 0\l  br i1 %286, label %340, label %327\l|{<s0>T|<s1>F}}"];
	Node0x5876f60:s0 -> Node0x58770f0;
	Node0x5876f60:s1 -> Node0x5877140;
	Node0x5876f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%287:\l287:                                              \l  %288 = load i8, i8 addrspace(4)* %281, align 1, !tbaa !17\l  %289 = zext i8 %288 to i64\l  %290 = getelementptr inbounds i8, i8 addrspace(4)* %281, i64 1\l  %291 = load i8, i8 addrspace(4)* %290, align 1, !tbaa !17\l  %292 = zext i8 %291 to i64\l  %293 = shl nuw nsw i64 %292, 8\l  %294 = or i64 %293, %289\l  %295 = getelementptr inbounds i8, i8 addrspace(4)* %281, i64 2\l  %296 = load i8, i8 addrspace(4)* %295, align 1, !tbaa !17\l  %297 = zext i8 %296 to i64\l  %298 = shl nuw nsw i64 %297, 16\l  %299 = or i64 %294, %298\l  %300 = getelementptr inbounds i8, i8 addrspace(4)* %281, i64 3\l  %301 = load i8, i8 addrspace(4)* %300, align 1, !tbaa !17\l  %302 = zext i8 %301 to i64\l  %303 = shl nuw nsw i64 %302, 24\l  %304 = or i64 %299, %303\l  %305 = getelementptr inbounds i8, i8 addrspace(4)* %281, i64 4\l  %306 = load i8, i8 addrspace(4)* %305, align 1, !tbaa !17\l  %307 = zext i8 %306 to i64\l  %308 = shl nuw nsw i64 %307, 32\l  %309 = or i64 %304, %308\l  %310 = getelementptr inbounds i8, i8 addrspace(4)* %281, i64 5\l  %311 = load i8, i8 addrspace(4)* %310, align 1, !tbaa !17\l  %312 = zext i8 %311 to i64\l  %313 = shl nuw nsw i64 %312, 40\l  %314 = or i64 %309, %313\l  %315 = getelementptr inbounds i8, i8 addrspace(4)* %281, i64 6\l  %316 = load i8, i8 addrspace(4)* %315, align 1, !tbaa !17\l  %317 = zext i8 %316 to i64\l  %318 = shl nuw nsw i64 %317, 48\l  %319 = or i64 %314, %318\l  %320 = getelementptr inbounds i8, i8 addrspace(4)* %281, i64 7\l  %321 = load i8, i8 addrspace(4)* %320, align 1, !tbaa !17\l  %322 = zext i8 %321 to i64\l  %323 = shl nuw i64 %322, 56\l  %324 = or i64 %319, %323\l  %325 = add nsw i32 %282, -8\l  %326 = getelementptr inbounds i8, i8 addrspace(4)* %281, i64 8\l  br label %340\l}"];
	Node0x5876f10 -> Node0x58770f0;
	Node0x5877140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%327:\l327:                                              \l  %328 = phi i32 [ %338, %327 ], [ 0, %285 ]\l  %329 = phi i64 [ %337, %327 ], [ 0, %285 ]\l  %330 = zext i32 %328 to i64\l  %331 = getelementptr inbounds i8, i8 addrspace(4)* %281, i64 %330\l  %332 = load i8, i8 addrspace(4)* %331, align 1, !tbaa !17\l  %333 = zext i8 %332 to i64\l  %334 = shl i32 %328, 3\l  %335 = zext i32 %334 to i64\l  %336 = shl nuw i64 %333, %335\l  %337 = or i64 %336, %329\l  %338 = add nuw nsw i32 %328, 1\l  %339 = icmp eq i32 %338, %282\l  br i1 %339, label %340, label %327\l|{<s0>T|<s1>F}}"];
	Node0x5877140:s0 -> Node0x58770f0;
	Node0x5877140:s1 -> Node0x5877140;
	Node0x58770f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%340:\l340:                                              \l  %341 = phi i8 addrspace(4)* [ %326, %287 ], [ %281, %285 ], [ %281, %327 ]\l  %342 = phi i32 [ %325, %287 ], [ 0, %285 ], [ 0, %327 ]\l  %343 = phi i64 [ %324, %287 ], [ 0, %285 ], [ %337, %327 ]\l  %344 = icmp ugt i32 %342, 7\l  br i1 %344, label %347, label %345\l|{<s0>T|<s1>F}}"];
	Node0x58770f0:s0 -> Node0x5868640;
	Node0x58770f0:s1 -> Node0x5868690;
	Node0x5868690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%345:\l345:                                              \l  %346 = icmp eq i32 %342, 0\l  br i1 %346, label %400, label %387\l|{<s0>T|<s1>F}}"];
	Node0x5868690:s0 -> Node0x5868820;
	Node0x5868690:s1 -> Node0x5868870;
	Node0x5868640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%347:\l347:                                              \l  %348 = load i8, i8 addrspace(4)* %341, align 1, !tbaa !17\l  %349 = zext i8 %348 to i64\l  %350 = getelementptr inbounds i8, i8 addrspace(4)* %341, i64 1\l  %351 = load i8, i8 addrspace(4)* %350, align 1, !tbaa !17\l  %352 = zext i8 %351 to i64\l  %353 = shl nuw nsw i64 %352, 8\l  %354 = or i64 %353, %349\l  %355 = getelementptr inbounds i8, i8 addrspace(4)* %341, i64 2\l  %356 = load i8, i8 addrspace(4)* %355, align 1, !tbaa !17\l  %357 = zext i8 %356 to i64\l  %358 = shl nuw nsw i64 %357, 16\l  %359 = or i64 %354, %358\l  %360 = getelementptr inbounds i8, i8 addrspace(4)* %341, i64 3\l  %361 = load i8, i8 addrspace(4)* %360, align 1, !tbaa !17\l  %362 = zext i8 %361 to i64\l  %363 = shl nuw nsw i64 %362, 24\l  %364 = or i64 %359, %363\l  %365 = getelementptr inbounds i8, i8 addrspace(4)* %341, i64 4\l  %366 = load i8, i8 addrspace(4)* %365, align 1, !tbaa !17\l  %367 = zext i8 %366 to i64\l  %368 = shl nuw nsw i64 %367, 32\l  %369 = or i64 %364, %368\l  %370 = getelementptr inbounds i8, i8 addrspace(4)* %341, i64 5\l  %371 = load i8, i8 addrspace(4)* %370, align 1, !tbaa !17\l  %372 = zext i8 %371 to i64\l  %373 = shl nuw nsw i64 %372, 40\l  %374 = or i64 %369, %373\l  %375 = getelementptr inbounds i8, i8 addrspace(4)* %341, i64 6\l  %376 = load i8, i8 addrspace(4)* %375, align 1, !tbaa !17\l  %377 = zext i8 %376 to i64\l  %378 = shl nuw nsw i64 %377, 48\l  %379 = or i64 %374, %378\l  %380 = getelementptr inbounds i8, i8 addrspace(4)* %341, i64 7\l  %381 = load i8, i8 addrspace(4)* %380, align 1, !tbaa !17\l  %382 = zext i8 %381 to i64\l  %383 = shl nuw i64 %382, 56\l  %384 = or i64 %379, %383\l  %385 = add nsw i32 %342, -8\l  %386 = getelementptr inbounds i8, i8 addrspace(4)* %341, i64 8\l  br label %400\l}"];
	Node0x5868640 -> Node0x5868820;
	Node0x5868870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%387:\l387:                                              \l  %388 = phi i32 [ %398, %387 ], [ 0, %345 ]\l  %389 = phi i64 [ %397, %387 ], [ 0, %345 ]\l  %390 = zext i32 %388 to i64\l  %391 = getelementptr inbounds i8, i8 addrspace(4)* %341, i64 %390\l  %392 = load i8, i8 addrspace(4)* %391, align 1, !tbaa !17\l  %393 = zext i8 %392 to i64\l  %394 = shl i32 %388, 3\l  %395 = zext i32 %394 to i64\l  %396 = shl nuw i64 %393, %395\l  %397 = or i64 %396, %389\l  %398 = add nuw nsw i32 %388, 1\l  %399 = icmp eq i32 %398, %342\l  br i1 %399, label %400, label %387\l|{<s0>T|<s1>F}}"];
	Node0x5868870:s0 -> Node0x5868820;
	Node0x5868870:s1 -> Node0x5868870;
	Node0x5868820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%400:\l400:                                              \l  %401 = phi i8 addrspace(4)* [ %386, %347 ], [ %341, %345 ], [ %341, %387 ]\l  %402 = phi i32 [ %385, %347 ], [ 0, %345 ], [ 0, %387 ]\l  %403 = phi i64 [ %384, %347 ], [ 0, %345 ], [ %397, %387 ]\l  %404 = icmp ugt i32 %402, 7\l  br i1 %404, label %407, label %405\l|{<s0>T|<s1>F}}"];
	Node0x5868820:s0 -> Node0x587bde0;
	Node0x5868820:s1 -> Node0x587be30;
	Node0x587be30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%405:\l405:                                              \l  %406 = icmp eq i32 %402, 0\l  br i1 %406, label %460, label %447\l|{<s0>T|<s1>F}}"];
	Node0x587be30:s0 -> Node0x587bfc0;
	Node0x587be30:s1 -> Node0x587c010;
	Node0x587bde0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%407:\l407:                                              \l  %408 = load i8, i8 addrspace(4)* %401, align 1, !tbaa !17\l  %409 = zext i8 %408 to i64\l  %410 = getelementptr inbounds i8, i8 addrspace(4)* %401, i64 1\l  %411 = load i8, i8 addrspace(4)* %410, align 1, !tbaa !17\l  %412 = zext i8 %411 to i64\l  %413 = shl nuw nsw i64 %412, 8\l  %414 = or i64 %413, %409\l  %415 = getelementptr inbounds i8, i8 addrspace(4)* %401, i64 2\l  %416 = load i8, i8 addrspace(4)* %415, align 1, !tbaa !17\l  %417 = zext i8 %416 to i64\l  %418 = shl nuw nsw i64 %417, 16\l  %419 = or i64 %414, %418\l  %420 = getelementptr inbounds i8, i8 addrspace(4)* %401, i64 3\l  %421 = load i8, i8 addrspace(4)* %420, align 1, !tbaa !17\l  %422 = zext i8 %421 to i64\l  %423 = shl nuw nsw i64 %422, 24\l  %424 = or i64 %419, %423\l  %425 = getelementptr inbounds i8, i8 addrspace(4)* %401, i64 4\l  %426 = load i8, i8 addrspace(4)* %425, align 1, !tbaa !17\l  %427 = zext i8 %426 to i64\l  %428 = shl nuw nsw i64 %427, 32\l  %429 = or i64 %424, %428\l  %430 = getelementptr inbounds i8, i8 addrspace(4)* %401, i64 5\l  %431 = load i8, i8 addrspace(4)* %430, align 1, !tbaa !17\l  %432 = zext i8 %431 to i64\l  %433 = shl nuw nsw i64 %432, 40\l  %434 = or i64 %429, %433\l  %435 = getelementptr inbounds i8, i8 addrspace(4)* %401, i64 6\l  %436 = load i8, i8 addrspace(4)* %435, align 1, !tbaa !17\l  %437 = zext i8 %436 to i64\l  %438 = shl nuw nsw i64 %437, 48\l  %439 = or i64 %434, %438\l  %440 = getelementptr inbounds i8, i8 addrspace(4)* %401, i64 7\l  %441 = load i8, i8 addrspace(4)* %440, align 1, !tbaa !17\l  %442 = zext i8 %441 to i64\l  %443 = shl nuw i64 %442, 56\l  %444 = or i64 %439, %443\l  %445 = add nsw i32 %402, -8\l  %446 = getelementptr inbounds i8, i8 addrspace(4)* %401, i64 8\l  br label %460\l}"];
	Node0x587bde0 -> Node0x587bfc0;
	Node0x587c010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%447:\l447:                                              \l  %448 = phi i32 [ %458, %447 ], [ 0, %405 ]\l  %449 = phi i64 [ %457, %447 ], [ 0, %405 ]\l  %450 = zext i32 %448 to i64\l  %451 = getelementptr inbounds i8, i8 addrspace(4)* %401, i64 %450\l  %452 = load i8, i8 addrspace(4)* %451, align 1, !tbaa !17\l  %453 = zext i8 %452 to i64\l  %454 = shl i32 %448, 3\l  %455 = zext i32 %454 to i64\l  %456 = shl nuw i64 %453, %455\l  %457 = or i64 %456, %449\l  %458 = add nuw nsw i32 %448, 1\l  %459 = icmp eq i32 %458, %402\l  br i1 %459, label %460, label %447\l|{<s0>T|<s1>F}}"];
	Node0x587c010:s0 -> Node0x587bfc0;
	Node0x587c010:s1 -> Node0x587c010;
	Node0x587bfc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%460:\l460:                                              \l  %461 = phi i8 addrspace(4)* [ %446, %407 ], [ %401, %405 ], [ %401, %447 ]\l  %462 = phi i32 [ %445, %407 ], [ 0, %405 ], [ 0, %447 ]\l  %463 = phi i64 [ %444, %407 ], [ 0, %405 ], [ %457, %447 ]\l  %464 = icmp ugt i32 %462, 7\l  br i1 %464, label %467, label %465\l|{<s0>T|<s1>F}}"];
	Node0x587bfc0:s0 -> Node0x587e640;
	Node0x587bfc0:s1 -> Node0x587e690;
	Node0x587e690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%465:\l465:                                              \l  %466 = icmp eq i32 %462, 0\l  br i1 %466, label %518, label %505\l|{<s0>T|<s1>F}}"];
	Node0x587e690:s0 -> Node0x586e5d0;
	Node0x587e690:s1 -> Node0x587e820;
	Node0x587e640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%467:\l467:                                              \l  %468 = load i8, i8 addrspace(4)* %461, align 1, !tbaa !17\l  %469 = zext i8 %468 to i64\l  %470 = getelementptr inbounds i8, i8 addrspace(4)* %461, i64 1\l  %471 = load i8, i8 addrspace(4)* %470, align 1, !tbaa !17\l  %472 = zext i8 %471 to i64\l  %473 = shl nuw nsw i64 %472, 8\l  %474 = or i64 %473, %469\l  %475 = getelementptr inbounds i8, i8 addrspace(4)* %461, i64 2\l  %476 = load i8, i8 addrspace(4)* %475, align 1, !tbaa !17\l  %477 = zext i8 %476 to i64\l  %478 = shl nuw nsw i64 %477, 16\l  %479 = or i64 %474, %478\l  %480 = getelementptr inbounds i8, i8 addrspace(4)* %461, i64 3\l  %481 = load i8, i8 addrspace(4)* %480, align 1, !tbaa !17\l  %482 = zext i8 %481 to i64\l  %483 = shl nuw nsw i64 %482, 24\l  %484 = or i64 %479, %483\l  %485 = getelementptr inbounds i8, i8 addrspace(4)* %461, i64 4\l  %486 = load i8, i8 addrspace(4)* %485, align 1, !tbaa !17\l  %487 = zext i8 %486 to i64\l  %488 = shl nuw nsw i64 %487, 32\l  %489 = or i64 %484, %488\l  %490 = getelementptr inbounds i8, i8 addrspace(4)* %461, i64 5\l  %491 = load i8, i8 addrspace(4)* %490, align 1, !tbaa !17\l  %492 = zext i8 %491 to i64\l  %493 = shl nuw nsw i64 %492, 40\l  %494 = or i64 %489, %493\l  %495 = getelementptr inbounds i8, i8 addrspace(4)* %461, i64 6\l  %496 = load i8, i8 addrspace(4)* %495, align 1, !tbaa !17\l  %497 = zext i8 %496 to i64\l  %498 = shl nuw nsw i64 %497, 48\l  %499 = or i64 %494, %498\l  %500 = getelementptr inbounds i8, i8 addrspace(4)* %461, i64 7\l  %501 = load i8, i8 addrspace(4)* %500, align 1, !tbaa !17\l  %502 = zext i8 %501 to i64\l  %503 = shl nuw i64 %502, 56\l  %504 = or i64 %499, %503\l  br label %518\l}"];
	Node0x587e640 -> Node0x586e5d0;
	Node0x587e820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%505:\l505:                                              \l  %506 = phi i32 [ %516, %505 ], [ 0, %465 ]\l  %507 = phi i64 [ %515, %505 ], [ 0, %465 ]\l  %508 = zext i32 %506 to i64\l  %509 = getelementptr inbounds i8, i8 addrspace(4)* %461, i64 %508\l  %510 = load i8, i8 addrspace(4)* %509, align 1, !tbaa !17\l  %511 = zext i8 %510 to i64\l  %512 = shl i32 %506, 3\l  %513 = zext i32 %512 to i64\l  %514 = shl nuw i64 %511, %513\l  %515 = or i64 %514, %507\l  %516 = add nuw nsw i32 %506, 1\l  %517 = icmp eq i32 %516, %462\l  br i1 %517, label %518, label %505\l|{<s0>T|<s1>F}}"];
	Node0x587e820:s0 -> Node0x586e5d0;
	Node0x587e820:s1 -> Node0x587e820;
	Node0x586e5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%518:\l518:                                              \l  %519 = phi i64 [ %504, %467 ], [ 0, %465 ], [ %515, %505 ]\l  %520 = shl nuw nsw i64 %101, 2\l  %521 = add nuw nsw i64 %520, 28\l  %522 = and i64 %521, 480\l  %523 = and i64 %103, -225\l  %524 = or i64 %523, %522\l  %525 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %35,\l... i64 noundef %524, i64 noundef %163, i64 noundef %223, i64 noundef %283, i64\l... noundef %343, i64 noundef %403, i64 noundef %463, i64 noundef %519) #10\l  %526 = sub i64 %93, %101\l  %527 = getelementptr inbounds i8, i8 addrspace(4)* %94, i64 %101\l  %528 = icmp eq i64 %526, 0\l  br i1 %528, label %529, label %92\l|{<s0>T|<s1>F}}"];
	Node0x586e5d0:s0 -> Node0x586d660;
	Node0x586e5d0:s1 -> Node0x586e1c0;
	Node0x586d660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%529:\l529:                                              \l  %530 = phi \<2 x i64\> [ %87, %84 ], [ %525, %518 ]\l  %531 = extractelement \<2 x i64\> %530, i64 0\l  %532 = and i64 %531, -227\l  %533 = or i64 %532, 34\l  %534 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %35,\l... i64 noundef %533, i64 noundef %29, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  ret void\l}"];
}
