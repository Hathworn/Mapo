digraph "CFG for '_Z17BFS_Bqueue_kernelPjS_S_S_S_S_S_S_' function" {
	label="CFG for '_Z17BFS_Bqueue_kernelPjS_S_S_S_S_S_S_' function";

	Node0x51993c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = icmp eq i32 %9, 0\l  br i1 %10, label %11, label %12\l|{<s0>T|<s1>F}}"];
	Node0x51993c0:s0 -> Node0x519a840;
	Node0x51993c0:s1 -> Node0x519a8d0;
	Node0x519a840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%11:\l11:                                               \l  store i32 0, i32 addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPjS_S_S_S_S_S_S_E17c_frontier_tail_s, align 4, !tbaa !5\l  br label %12\l}"];
	Node0x519a840 -> Node0x519a8d0;
	Node0x519a8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%12:\l12:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !9, !invariant.load\l... !10\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = add i32 %19, %9\l  %21 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !5\l  %22 = icmp ult i32 %20, %21\l  br i1 %22, label %23, label %83\l|{<s0>T|<s1>F}}"];
	Node0x519a8d0:s0 -> Node0x519aa70;
	Node0x519a8d0:s1 -> Node0x519c1d0;
	Node0x519aa70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%23:\l23:                                               \l  %24 = zext i32 %20 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !5\l  %27 = zext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !5\l  %30 = add i32 %26, 1\l  %31 = zext i32 %30 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !5\l  %34 = icmp ult i32 %29, %33\l  br i1 %34, label %35, label %37\l|{<s0>T|<s1>F}}"];
	Node0x519aa70:s0 -> Node0x519c9c0;
	Node0x519aa70:s1 -> Node0x519ca10;
	Node0x519c9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%35:\l35:                                               \l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %27\l  br label %38\l}"];
	Node0x519c9c0 -> Node0x519cbf0;
	Node0x519ca10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%37:\l37:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %10, label %66, label %69\l|{<s0>T|<s1>F}}"];
	Node0x519ca10:s0 -> Node0x519ce60;
	Node0x519ca10:s1 -> Node0x519ceb0;
	Node0x519cbf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i32 [ %29, %35 ], [ %63, %62 ]\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %40\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !5\l  %43 = zext i32 %42 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %43\l  %45 = atomicrmw xchg i32 addrspace(1)* %44, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %46 = icmp eq i32 %45, 0\l  br i1 %46, label %47, label %62\l|{<s0>T|<s1>F}}"];
	Node0x519cbf0:s0 -> Node0x519d510;
	Node0x519cbf0:s1 -> Node0x519cff0;
	Node0x519d510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%47:\l47:                                               \l  %48 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !5\l  %49 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !5\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %50\l  store i32 %48, i32 addrspace(1)* %51, align 4, !tbaa !5\l  %52 = atomicrmw add i32 addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPjS_S_S_S_S_S_S_E17c_frontier_tail_s, i32 1\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %53 = icmp ult i32 %52, 16\l  br i1 %53, label %54, label %57\l|{<s0>T|<s1>F}}"];
	Node0x519d510:s0 -> Node0x519dab0;
	Node0x519d510:s1 -> Node0x519db00;
	Node0x519dab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%54:\l54:                                               \l  %55 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !5\l  %56 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPjS_S_S_S_S_S_S_E12c_frontier_s, i32 0, i32 %52\l  store i32 %55, i32 addrspace(3)* %56, align 4, !tbaa !5\l  br label %62\l}"];
	Node0x519dab0 -> Node0x519cff0;
	Node0x519db00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%57:\l57:                                               \l  store i32 16, i32 addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPjS_S_S_S_S_S_S_E17c_frontier_tail_s, align 4, !tbaa !5\l  %58 = atomicrmw add i32 addrspace(1)* %3, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %59 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !5\l  %60 = zext i32 %58 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %60\l  store i32 %59, i32 addrspace(1)* %61, align 4, !tbaa !5\l  br label %62\l}"];
	Node0x519db00 -> Node0x519cff0;
	Node0x519cff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  %63 = add nuw i32 %39, 1\l  %64 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !5\l  %65 = icmp ult i32 %63, %64\l  br i1 %65, label %38, label %37, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x519cff0:s0 -> Node0x519cbf0;
	Node0x519cff0:s1 -> Node0x519ca10;
	Node0x519ce60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%66:\l66:                                               \l  %67 = load i32, i32 addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPjS_S_S_S_S_S_S_E17c_frontier_tail_s, align 4, !tbaa !5\l  %68 = atomicrmw add i32 addrspace(1)* %3, i32 %67 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  store i32 %68, i32 addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPjS_S_S_S_S_S_S_E19our_c_frontier_tail, align 4, !tbaa\l... !5\l  br label %69\l}"];
	Node0x519ce60 -> Node0x519ceb0;
	Node0x519ceb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%69:\l69:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %70 = load i32, i32 addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPjS_S_S_S_S_S_S_E17c_frontier_tail_s, align 4, !tbaa !5\l  %71 = icmp ult i32 %9, %70\l  br i1 %71, label %72, label %83\l|{<s0>T|<s1>F}}"];
	Node0x519ceb0:s0 -> Node0x519ebd0;
	Node0x519ceb0:s1 -> Node0x519c1d0;
	Node0x519ebd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%72:\l72:                                               \l  %73 = load i32, i32 addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPjS_S_S_S_S_S_S_E19our_c_frontier_tail, align 4, !tbaa\l... !5\l  br label %74\l}"];
	Node0x519ebd0 -> Node0x519ed40;
	Node0x519ed40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = phi i32 [ %9, %72 ], [ %81, %74 ]\l  %76 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPjS_S_S_S_S_S_S_E12c_frontier_s, i32 0, i32 %75\l  %77 = load i32, i32 addrspace(3)* %76, align 4, !tbaa !5\l  %78 = add i32 %73, %75\l  %79 = zext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %79\l  store i32 %77, i32 addrspace(1)* %80, align 4, !tbaa !5\l  %81 = add i32 %75, %18\l  %82 = icmp ult i32 %81, %70\l  br i1 %82, label %74, label %83, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x519ed40:s0 -> Node0x519ed40;
	Node0x519ed40:s1 -> Node0x519c1d0;
	Node0x519c1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%83:\l83:                                               \l  ret void\l}"];
}
