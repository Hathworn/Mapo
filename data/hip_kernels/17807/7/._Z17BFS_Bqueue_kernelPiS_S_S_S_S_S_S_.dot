digraph "CFG for '_Z17BFS_Bqueue_kernelPiS_S_S_S_S_S_S_' function" {
	label="CFG for '_Z17BFS_Bqueue_kernelPiS_S_S_S_S_S_S_' function";

	Node0x4719450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = icmp eq i32 %9, 0\l  br i1 %10, label %11, label %12\l|{<s0>T|<s1>F}}"];
	Node0x4719450:s0 -> Node0x471a8d0;
	Node0x4719450:s1 -> Node0x471a960;
	Node0x471a8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%11:\l11:                                               \l  store i32 0, i32 addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPiS_S_S_S_S_S_S_E17c_frontier_tail_s, align 4, !tbaa !5\l  br label %12\l}"];
	Node0x471a8d0 -> Node0x471a960;
	Node0x471a960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%12:\l12:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !9, !invariant.load\l... !10\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = add i32 %19, %9\l  %21 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !5\l  %22 = icmp slt i32 %20, %21\l  br i1 %22, label %23, label %86\l|{<s0>T|<s1>F}}"];
	Node0x471a960:s0 -> Node0x471ab00;
	Node0x471a960:s1 -> Node0x471c260;
	Node0x471ab00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%23:\l23:                                               \l  %24 = sext i32 %20 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !5\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %27\l  %29 = add nsw i32 %26, 1\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %30\l  %32 = bitcast i32 addrspace(1)* %28 to \<2 x i32\> addrspace(1)*\l  %33 = load \<2 x i32\>, \<2 x i32\> addrspace(1)* %32, align 4, !tbaa !5\l  %34 = extractelement \<2 x i32\> %33, i64 0\l  %35 = extractelement \<2 x i32\> %33, i64 1\l  %36 = icmp slt i32 %34, %35\l  br i1 %36, label %37, label %39\l|{<s0>T|<s1>F}}"];
	Node0x471ab00:s0 -> Node0x471d180;
	Node0x471ab00:s1 -> Node0x471d210;
	Node0x471d180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%37:\l37:                                               \l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %27\l  br label %40\l}"];
	Node0x471d180 -> Node0x471d3f0;
	Node0x471d210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%39:\l39:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %10, label %69, label %72\l|{<s0>T|<s1>F}}"];
	Node0x471d210:s0 -> Node0x471d690;
	Node0x471d210:s1 -> Node0x471d6e0;
	Node0x471d3f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ %34, %37 ], [ %66, %65 ]\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %42\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !5\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %45\l  %47 = atomicrmw xchg i32 addrspace(1)* %46, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %48 = icmp eq i32 %47, 0\l  br i1 %48, label %49, label %65\l|{<s0>T|<s1>F}}"];
	Node0x471d3f0:s0 -> Node0x471dd40;
	Node0x471d3f0:s1 -> Node0x471d820;
	Node0x471dd40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%49:\l49:                                               \l  %50 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !5\l  %51 = add nsw i32 %50, 1\l  %52 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !5\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %53\l  store i32 %51, i32 addrspace(1)* %54, align 4, !tbaa !5\l  %55 = atomicrmw add i32 addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPiS_S_S_S_S_S_S_E17c_frontier_tail_s, i32 1\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %56 = icmp slt i32 %55, 16\l  br i1 %56, label %57, label %60\l|{<s0>T|<s1>F}}"];
	Node0x471dd40:s0 -> Node0x471e370;
	Node0x471dd40:s1 -> Node0x471e3c0;
	Node0x471e370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%57:\l57:                                               \l  %58 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !5\l  %59 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPiS_S_S_S_S_S_S_E12c_frontier_s, i32 0, i32 %55\l  store i32 %58, i32 addrspace(3)* %59, align 4, !tbaa !5\l  br label %65\l}"];
	Node0x471e370 -> Node0x471d820;
	Node0x471e3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%60:\l60:                                               \l  store i32 16, i32 addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPiS_S_S_S_S_S_S_E17c_frontier_tail_s, align 4, !tbaa !5\l  %61 = atomicrmw add i32 addrspace(1)* %3, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %62 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !5\l  %63 = sext i32 %61 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %63\l  store i32 %62, i32 addrspace(1)* %64, align 4, !tbaa !5\l  br label %65\l}"];
	Node0x471e3c0 -> Node0x471d820;
	Node0x471d820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = add nsw i32 %41, 1\l  %67 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !5\l  %68 = icmp slt i32 %66, %67\l  br i1 %68, label %40, label %39, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x471d820:s0 -> Node0x471d3f0;
	Node0x471d820:s1 -> Node0x471d210;
	Node0x471d690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%69:\l69:                                               \l  %70 = load i32, i32 addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPiS_S_S_S_S_S_S_E17c_frontier_tail_s, align 4, !tbaa !5\l  %71 = atomicrmw add i32 addrspace(1)* %3, i32 %70 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  store i32 %71, i32 addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPiS_S_S_S_S_S_S_E19our_c_frontier_tail, align 4, !tbaa\l... !5\l  br label %72\l}"];
	Node0x471d690 -> Node0x471d6e0;
	Node0x471d6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%72:\l72:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %73 = load i32, i32 addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPiS_S_S_S_S_S_S_E17c_frontier_tail_s, align 4, !tbaa !5\l  %74 = icmp slt i32 %9, %73\l  br i1 %74, label %75, label %86\l|{<s0>T|<s1>F}}"];
	Node0x471d6e0:s0 -> Node0x471f4a0;
	Node0x471d6e0:s1 -> Node0x471c260;
	Node0x471f4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%75:\l75:                                               \l  %76 = load i32, i32 addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPiS_S_S_S_S_S_S_E19our_c_frontier_tail, align 4, !tbaa\l... !5\l  br label %77\l}"];
	Node0x471f4a0 -> Node0x471f610;
	Node0x471f610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi i32 [ %9, %75 ], [ %84, %77 ]\l  %79 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ17BFS_Bqueue_kernelPiS_S_S_S_S_S_S_E12c_frontier_s, i32 0, i32 %78\l  %80 = load i32, i32 addrspace(3)* %79, align 4, !tbaa !5\l  %81 = add nsw i32 %76, %78\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %82\l  store i32 %80, i32 addrspace(1)* %83, align 4, !tbaa !5\l  %84 = add i32 %78, %18\l  %85 = icmp slt i32 %84, %73\l  br i1 %85, label %77, label %86, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x471f610:s0 -> Node0x471f610;
	Node0x471f610:s1 -> Node0x471c260;
	Node0x471c260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%86:\l86:                                               \l  ret void\l}"];
}
