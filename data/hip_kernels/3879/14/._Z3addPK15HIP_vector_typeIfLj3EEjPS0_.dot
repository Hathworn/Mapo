digraph "CFG for '_Z3addPK15HIP_vector_typeIfLj3EEjPS0_' function" {
	label="CFG for '_Z3addPK15HIP_vector_typeIfLj3EEjPS0_' function";

	Node0x5b9b3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = udiv i32 %12, %9\l  %17 = mul i32 %16, %9\l  %18 = icmp ugt i32 %12, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %9\l  %22 = icmp ult i32 %15, %1\l  br i1 %22, label %23, label %44\l|{<s0>T|<s1>F}}"];
	Node0x5b9b3f0:s0 -> Node0x5ba08f0;
	Node0x5b9b3f0:s1 -> Node0x5ba0980;
	Node0x5ba08f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%23:\l23:                                               \l  %24 = getelementptr %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(1)* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !16\l  %26 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 0, i32 0, i32 0, i32 0, i32 0,\l... i64 1\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %28 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 0, i32 0, i32 0, i32 0, i32 0,\l... i64 2\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  br label %30\l}"];
	Node0x5ba08f0 -> Node0x5ba1e70;
	Node0x5ba1e70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ %15, %23 ], [ %42, %30 ]\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %32, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16\l  %35 = fadd contract float %25, %34\l  store float %35, float addrspace(1)* %33, align 4, !tbaa !16\l  %36 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %32, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16\l  %38 = fadd contract float %27, %37\l  store float %38, float addrspace(1)* %36, align 4, !tbaa !16\l  %39 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %32, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !16\l  %41 = fadd contract float %29, %40\l  store float %41, float addrspace(1)* %39, align 4, !tbaa !16\l  %42 = add i32 %31, %21\l  %43 = icmp ult i32 %42, %1\l  br i1 %43, label %30, label %44, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5ba1e70:s0 -> Node0x5ba1e70;
	Node0x5ba1e70:s1 -> Node0x5ba0980;
	Node0x5ba0980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%44:\l44:                                               \l  ret void\l}"];
}
