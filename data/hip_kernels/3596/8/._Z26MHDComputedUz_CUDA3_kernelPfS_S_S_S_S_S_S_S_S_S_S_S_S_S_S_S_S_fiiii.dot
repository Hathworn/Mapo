digraph "CFG for '_Z26MHDComputedUz_CUDA3_kernelPfS_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_fiiii' function" {
	label="CFG for '_Z26MHDComputedUz_CUDA3_kernelPfS_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_fiiii' function";

	Node0x48a9cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %25 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %27 = shl i32 %25, 6\l  %28 = add i32 %27, %24\l  %29 = mul i32 %26, 40960\l  %30 = add i32 %28, %29\l  %31 = icmp slt i32 %30, 2\l  %32 = add nsw i32 %19, -3\l  %33 = icmp sgt i32 %30, %32\l  %34 = select i1 %31, i1 true, i1 %33\l  br i1 %34, label %141, label %35\l|{<s0>T|<s1>F}}"];
	Node0x48a9cb0:s0 -> Node0x48a9e50;
	Node0x48a9cb0:s1 -> Node0x48acb20;
	Node0x48acb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%35:\l35:                                               \l  %36 = mul i32 %22, %20\l  %37 = sdiv i32 %30, %36\l  %38 = mul i32 %36, %37\l  %39 = sub nsw i32 %30, %38\l  %40 = sdiv i32 %39, %22\l  %41 = mul nsw i32 %40, %22\l  %42 = sub nsw i32 %39, %41\l  %43 = mul nsw i32 %42, %21\l  %44 = add nsw i32 %43, %37\l  %45 = mul nsw i32 %44, %20\l  %46 = add nsw i32 %45, %40\l  %47 = add nuw nsw i32 %30, 1\l  %48 = sdiv i32 %47, %36\l  %49 = mul i32 %36, %48\l  %50 = sub nsw i32 %47, %49\l  %51 = sdiv i32 %50, %22\l  %52 = mul nsw i32 %51, %22\l  %53 = sub nsw i32 %50, %52\l  %54 = mul nsw i32 %53, %21\l  %55 = add nsw i32 %54, %48\l  %56 = mul nsw i32 %55, %20\l  %57 = add nsw i32 %56, %51\l  %58 = sext i32 %46 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %61 = sext i32 %57 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %64 = fsub contract float %60, %63\l  %65 = fmul contract float %64, %18\l  %66 = getelementptr inbounds float, float addrspace(1)* %9, i64 %58\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %68 = fadd contract float %67, %65\l  store float %68, float addrspace(1)* %66, align 4, !tbaa !5\l  %69 = getelementptr inbounds float, float addrspace(1)* %1, i64 %58\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !5\l  %71 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5\l  %73 = fsub contract float %70, %72\l  %74 = fmul contract float %73, %18\l  %75 = getelementptr inbounds float, float addrspace(1)* %10, i64 %58\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !5\l  %77 = fadd contract float %76, %74\l  store float %77, float addrspace(1)* %75, align 4, !tbaa !5\l  %78 = getelementptr inbounds float, float addrspace(1)* %2, i64 %58\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !5\l  %80 = getelementptr inbounds float, float addrspace(1)* %2, i64 %61\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !5\l  %82 = fsub contract float %79, %81\l  %83 = fmul contract float %82, %18\l  %84 = getelementptr inbounds float, float addrspace(1)* %11, i64 %58\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !5\l  %86 = fadd contract float %85, %83\l  store float %86, float addrspace(1)* %84, align 4, !tbaa !5\l  %87 = getelementptr inbounds float, float addrspace(1)* %3, i64 %58\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !5\l  %89 = getelementptr inbounds float, float addrspace(1)* %3, i64 %61\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !5\l  %91 = fsub contract float %88, %90\l  %92 = fmul contract float %91, %18\l  %93 = getelementptr inbounds float, float addrspace(1)* %12, i64 %58\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !5\l  %95 = fadd contract float %94, %92\l  store float %95, float addrspace(1)* %93, align 4, !tbaa !5\l  %96 = getelementptr inbounds float, float addrspace(1)* %4, i64 %58\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !5\l  %98 = getelementptr inbounds float, float addrspace(1)* %4, i64 %61\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !5\l  %100 = fsub contract float %97, %99\l  %101 = fmul contract float %100, %18\l  %102 = getelementptr inbounds float, float addrspace(1)* %13, i64 %58\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !5\l  %104 = fadd contract float %103, %101\l  store float %104, float addrspace(1)* %102, align 4, !tbaa !5\l  %105 = getelementptr inbounds float, float addrspace(1)* %5, i64 %58\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !5\l  %107 = getelementptr inbounds float, float addrspace(1)* %5, i64 %61\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !5\l  %109 = fsub contract float %106, %108\l  %110 = fmul contract float %109, %18\l  %111 = getelementptr inbounds float, float addrspace(1)* %14, i64 %58\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !5\l  %113 = fadd contract float %112, %110\l  store float %113, float addrspace(1)* %111, align 4, !tbaa !5\l  %114 = getelementptr inbounds float, float addrspace(1)* %6, i64 %58\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !5\l  %116 = getelementptr inbounds float, float addrspace(1)* %6, i64 %61\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !5\l  %118 = fsub contract float %115, %117\l  %119 = fmul contract float %118, %18\l  %120 = getelementptr inbounds float, float addrspace(1)* %15, i64 %58\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !5\l  %122 = fadd contract float %121, %119\l  store float %122, float addrspace(1)* %120, align 4, !tbaa !5\l  %123 = getelementptr inbounds float, float addrspace(1)* %7, i64 %58\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !5\l  %125 = getelementptr inbounds float, float addrspace(1)* %7, i64 %61\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !5\l  %127 = fsub contract float %124, %126\l  %128 = fmul contract float %127, %18\l  %129 = getelementptr inbounds float, float addrspace(1)* %16, i64 %58\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !5\l  %131 = fadd contract float %130, %128\l  store float %131, float addrspace(1)* %129, align 4, !tbaa !5\l  %132 = getelementptr inbounds float, float addrspace(1)* %8, i64 %58\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !5\l  %134 = getelementptr inbounds float, float addrspace(1)* %8, i64 %61\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !5\l  %136 = fsub contract float %133, %135\l  %137 = fmul contract float %136, %18\l  %138 = getelementptr inbounds float, float addrspace(1)* %17, i64 %58\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !5\l  %140 = fadd contract float %139, %137\l  store float %140, float addrspace(1)* %138, align 4, !tbaa !5\l  br label %141\l}"];
	Node0x48acb20 -> Node0x48a9e50;
	Node0x48a9e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%141:\l141:                                              \l  ret void\l}"];
}
