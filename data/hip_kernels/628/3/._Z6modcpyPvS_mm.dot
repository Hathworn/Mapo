digraph "CFG for '_Z6modcpyPvS_mm' function" {
	label="CFG for '_Z6modcpyPvS_mm' function";

	Node0x5eeafc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = mul i32 %5, %10\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %16 = add i32 %14, %15\l  %17 = lshr i64 %2, 4\l  %18 = trunc i64 %17 to i32\l  %19 = lshr i64 %3, 4\l  %20 = trunc i64 %19 to i32\l  %21 = icmp slt i32 %16, %18\l  br i1 %21, label %22, label %31\l|{<s0>T|<s1>F}}"];
	Node0x5eeafc0:s0 -> Node0x5eed460;
	Node0x5eeafc0:s1 -> Node0x5eed4f0;
	Node0x5eed460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%22:\l22:                                               \l  %23 = bitcast i8 addrspace(1)* %1 to %struct.HIP_vector_type addrspace(1)*\l  %24 = bitcast i8 addrspace(1)* %0 to %struct.HIP_vector_type addrspace(1)*\l  %25 = udiv i32 %13, %10\l  %26 = mul i32 %25, %10\l  %27 = icmp ugt i32 %13, %26\l  %28 = zext i1 %27 to i32\l  %29 = add i32 %25, %28\l  %30 = mul i32 %29, %10\l  br label %32\l}"];
	Node0x5eed460 -> Node0x5eeda50;
	Node0x5eed4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%31:\l31:                                               \l  ret void\l}"];
	Node0x5eeda50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = phi i32 [ %16, %22 ], [ %41, %32 ]\l  %34 = srem i32 %33, %20\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %23, i64 %35\l  %37 = sext i32 %33 to i64\l  %38 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %24, i64 %37\l  %39 = bitcast %struct.HIP_vector_type addrspace(1)* %38 to i8 addrspace(1)*\l  %40 = bitcast %struct.HIP_vector_type addrspace(1)* %36 to i8 addrspace(1)*\l  tail call void @llvm.memcpy.p1i8.p1i8.i64(i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %39, i8 addrspace(1)* noundef align 16\l... dereferenceable(16) %40, i64 16, i1 false)\l  %41 = add i32 %30, %33\l  %42 = icmp slt i32 %41, %18\l  br i1 %42, label %32, label %31, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5eeda50:s0 -> Node0x5eeda50;
	Node0x5eeda50:s1 -> Node0x5eed4f0;
}
