digraph "CFG for '_Z11splitKernelPKjPjmjS1_' function" {
	label="CFG for '_Z11splitKernelPKjPjmjS1_' function";

	Node0x4edb860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = udiv i32 %14, %11\l  %21 = mul i32 %20, %11\l  %22 = icmp ugt i32 %14, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %15\l  %26 = add i32 %25, %7\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %29 = mul i32 %26, %19\l  %30 = add i32 %29, %28\l  %31 = mul i32 %30, %11\l  %32 = add i32 %31, %27\l  %33 = sext i32 %32 to i64\l  %34 = icmp ult i64 %33, %2\l  br i1 %34, label %35, label %47\l|{<s0>T|<s1>F}}"];
	Node0x4edb860:s0 -> Node0x4edf9a0;
	Node0x4edb860:s1 -> Node0x4edfa30;
	Node0x4edf9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%35:\l35:                                               \l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %33\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %38 = xor i32 %37, -1\l  %39 = lshr i32 %38, %3\l  %40 = and i32 %39, 1\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %33\l  store i32 %40, i32 addrspace(1)* %41, align 4, !tbaa !16\l  %42 = add i64 %2, -1\l  %43 = icmp eq i64 %42, %33\l  %44 = icmp ne i32 addrspace(1)* %4, addrspacecast (i32* null to i32\l... addrspace(1)*)\l  %45 = select i1 %43, i1 %44, i1 false\l  br i1 %45, label %46, label %47\l|{<s0>T|<s1>F}}"];
	Node0x4edf9a0:s0 -> Node0x4ee1070;
	Node0x4edf9a0:s1 -> Node0x4edfa30;
	Node0x4ee1070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%46:\l46:                                               \l  store i32 %40, i32 addrspace(1)* %4, align 4, !tbaa !16\l  br label %47\l}"];
	Node0x4ee1070 -> Node0x4edfa30;
	Node0x4edfa30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  ret void\l}"];
}
