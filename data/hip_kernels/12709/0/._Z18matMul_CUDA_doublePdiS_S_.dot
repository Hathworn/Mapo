digraph "CFG for '_Z18matMul_CUDA_doublePdiS_S_' function" {
	label="CFG for '_Z18matMul_CUDA_doublePdiS_S_' function";

	Node0x510a050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = mul nsw i32 %1, %1\l  %15 = icmp slt i32 %13, %14\l  %16 = icmp sgt i32 %1, 0\l  %17 = and i1 %15, %16\l  br i1 %17, label %18, label %108\l|{<s0>T|<s1>F}}"];
	Node0x510a050:s0 -> Node0x510c190;
	Node0x510a050:s1 -> Node0x510c220;
	Node0x510c190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%18:\l18:                                               \l  %19 = srem i32 %13, %1\l  %20 = sext i32 %13 to i64\l  %21 = getelementptr inbounds double, double addrspace(1)* %0, i64 %20\l  %22 = load double, double addrspace(1)* %21, align 8, !tbaa !7\l  %23 = and i32 %1, 3\l  %24 = icmp ult i32 %1, 4\l  br i1 %24, label %85, label %25\l|{<s0>T|<s1>F}}"];
	Node0x510c190:s0 -> Node0x510c7f0;
	Node0x510c190:s1 -> Node0x510c880;
	Node0x510c880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%25:\l25:                                               \l  %26 = and i32 %1, -4\l  br label %27\l}"];
	Node0x510c880 -> Node0x510ca80;
	Node0x510ca80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%27:\l27:                                               \l  %28 = phi double [ %22, %25 ], [ %81, %27 ]\l  %29 = phi i32 [ 0, %25 ], [ %82, %27 ]\l  %30 = phi i32 [ 0, %25 ], [ %83, %27 ]\l  %31 = add i32 %29, %13\l  %32 = sub i32 %31, %19\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %36 = mul nsw i32 %29, %1\l  %37 = add nsw i32 %19, %36\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds double, double addrspace(1)* %3, i64 %38\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !7\l  %41 = fmul contract double %35, %40\l  %42 = fadd contract double %28, %41\l  store double %42, double addrspace(1)* %21, align 8, !tbaa !7\l  %43 = or i32 %29, 1\l  %44 = add i32 %43, %13\l  %45 = sub i32 %44, %19\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds double, double addrspace(1)* %2, i64 %46\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !7\l  %49 = mul nsw i32 %43, %1\l  %50 = add nsw i32 %19, %49\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds double, double addrspace(1)* %3, i64 %51\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !7\l  %54 = fmul contract double %48, %53\l  %55 = fadd contract double %42, %54\l  store double %55, double addrspace(1)* %21, align 8, !tbaa !7\l  %56 = or i32 %29, 2\l  %57 = add i32 %56, %13\l  %58 = sub i32 %57, %19\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds double, double addrspace(1)* %2, i64 %59\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !7\l  %62 = mul nsw i32 %56, %1\l  %63 = add nsw i32 %19, %62\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds double, double addrspace(1)* %3, i64 %64\l  %66 = load double, double addrspace(1)* %65, align 8, !tbaa !7\l  %67 = fmul contract double %61, %66\l  %68 = fadd contract double %55, %67\l  store double %68, double addrspace(1)* %21, align 8, !tbaa !7\l  %69 = or i32 %29, 3\l  %70 = add i32 %69, %13\l  %71 = sub i32 %70, %19\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds double, double addrspace(1)* %2, i64 %72\l  %74 = load double, double addrspace(1)* %73, align 8, !tbaa !7\l  %75 = mul nsw i32 %69, %1\l  %76 = add nsw i32 %19, %75\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds double, double addrspace(1)* %3, i64 %77\l  %79 = load double, double addrspace(1)* %78, align 8, !tbaa !7\l  %80 = fmul contract double %74, %79\l  %81 = fadd contract double %68, %80\l  store double %81, double addrspace(1)* %21, align 8, !tbaa !7\l  %82 = add nuw nsw i32 %29, 4\l  %83 = add i32 %30, 4\l  %84 = icmp eq i32 %83, %26\l  br i1 %84, label %85, label %27, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x510ca80:s0 -> Node0x510c7f0;
	Node0x510ca80:s1 -> Node0x510ca80;
	Node0x510c7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%85:\l85:                                               \l  %86 = phi double [ %22, %18 ], [ %81, %27 ]\l  %87 = phi i32 [ 0, %18 ], [ %82, %27 ]\l  %88 = icmp eq i32 %23, 0\l  br i1 %88, label %108, label %89\l|{<s0>T|<s1>F}}"];
	Node0x510c7f0:s0 -> Node0x510c220;
	Node0x510c7f0:s1 -> Node0x510fa40;
	Node0x510fa40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%89:\l89:                                               \l  %90 = phi double [ %104, %89 ], [ %86, %85 ]\l  %91 = phi i32 [ %105, %89 ], [ %87, %85 ]\l  %92 = phi i32 [ %106, %89 ], [ 0, %85 ]\l  %93 = add i32 %91, %13\l  %94 = sub i32 %93, %19\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds double, double addrspace(1)* %2, i64 %95\l  %97 = load double, double addrspace(1)* %96, align 8, !tbaa !7\l  %98 = mul nsw i32 %91, %1\l  %99 = add nsw i32 %19, %98\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds double, double addrspace(1)* %3, i64 %100\l  %102 = load double, double addrspace(1)* %101, align 8, !tbaa !7\l  %103 = fmul contract double %97, %102\l  %104 = fadd contract double %90, %103\l  store double %104, double addrspace(1)* %21, align 8, !tbaa !7\l  %105 = add nuw nsw i32 %91, 1\l  %106 = add i32 %92, 1\l  %107 = icmp eq i32 %106, %23\l  br i1 %107, label %108, label %89, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x510fa40:s0 -> Node0x510c220;
	Node0x510fa40:s1 -> Node0x510fa40;
	Node0x510c220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%108:\l108:                                              \l  ret void\l}"];
}
