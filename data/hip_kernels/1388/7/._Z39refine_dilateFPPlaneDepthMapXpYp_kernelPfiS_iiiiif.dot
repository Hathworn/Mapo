digraph "CFG for '_Z39refine_dilateFPPlaneDepthMapXpYp_kernelPfiS_iiiiif' function" {
	label="CFG for '_Z39refine_dilateFPPlaneDepthMapXpYp_kernelPfiS_iiiiif' function";

	Node0x5ce3c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = add nsw i32 %18, %6\l  %28 = icmp sgt i32 %27, -1\l  br i1 %28, label %29, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5ce3c00:s0 -> Node0x5ce8120;
	Node0x5ce3c00:s1 -> Node0x5ce81b0;
	Node0x5ce8120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%29:\l29:                                               \l  %30 = add nsw i32 %26, %7\l  %31 = icmp sgt i32 %30, -1\l  %32 = icmp slt i32 %27, %4\l  %33 = select i1 %31, i1 %32, i1 false\l  %34 = icmp slt i32 %30, %5\l  %35 = select i1 %33, i1 %34, i1 false\l  %36 = icmp slt i32 %18, %4\l  %37 = select i1 %35, i1 %36, i1 false\l  %38 = icmp slt i32 %26, %5\l  %39 = select i1 %37, i1 %38, i1 false\l  br i1 %39, label %40, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5ce8120:s0 -> Node0x5ce8a70;
	Node0x5ce8120:s1 -> Node0x5ce81b0;
	Node0x5ce8a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%40:\l40:                                               \l  %41 = mul nsw i32 %26, %3\l  %42 = add nsw i32 %41, %18\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %2, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %46 = fcmp contract ogt float %45, 0.000000e+00\l  br i1 %46, label %47, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5ce8a70:s0 -> Node0x5ce9a70;
	Node0x5ce8a70:s1 -> Node0x5ce81b0;
	Node0x5ce9a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%47:\l47:                                               \l  %48 = mul nsw i32 %30, %1\l  %49 = add nsw i32 %48, %27\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  store float %8, float addrspace(1)* %51, align 4, !tbaa !7\l  br label %52\l}"];
	Node0x5ce9a70 -> Node0x5ce81b0;
	Node0x5ce81b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  ret void\l}"];
}
