digraph "CFG for '_Z15conv2genericrevPfS_S_iiiiiifii' function" {
	label="CFG for '_Z15conv2genericrevPfS_S_iiiiiifii' function";

	Node0x4790240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%12:\l  %13 = add nsw i32 %7, -1\l  %14 = mul nsw i32 %13, %10\l  %15 = sub nsw i32 %4, %14\l  %16 = add nsw i32 %8, -1\l  %17 = mul nsw i32 %16, %11\l  %18 = sub nsw i32 %5, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !4\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %23 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %24 = getelementptr i8, i8 addrspace(4)* %23, i64 4\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 4, !range !5, !invariant.load !6\l  %27 = zext i16 %26 to i32\l  %28 = mul nuw nsw i32 %21, %27\l  %29 = add nuw nsw i32 %28, %22\l  %30 = getelementptr i8, i8 addrspace(4)* %23, i64 8\l  %31 = bitcast i8 addrspace(4)* %30 to i16 addrspace(4)*\l  %32 = load i16, i16 addrspace(4)* %31, align 4, !range !5, !invariant.load !6\l  %33 = zext i16 %32 to i32\l  %34 = mul nuw nsw i32 %33, %27\l  %35 = mul nsw i32 %19, %3\l  %36 = add nsw i32 %35, %20\l  %37 = mul i32 %18, %15\l  %38 = mul i32 %37, %36\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %2, i64 %39\l  %41 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %42 = icmp sgt i32 %18, 0\l  br i1 %42, label %43, label %103\l|{<s0>T|<s1>F}}"];
	Node0x4790240:s0 -> Node0x4794bd0;
	Node0x4790240:s1 -> Node0x4794c60;
	Node0x4794bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%43:\l43:                                               \l  %44 = mul i32 %37, %29\l  %45 = getelementptr inbounds [12256 x float], [12256 x float] addrspace(3)*\l... @_ZZ15conv2genericrevPfS_S_iiiiiifiiE13shared_output, i32 0, i32 %44\l  %46 = mul nsw i32 %18, %41\l  %47 = getelementptr inbounds float, float addrspace(3)* %45, i32 %46\l  %48 = mul nsw i32 %21, %3\l  %49 = add nsw i32 %48, %20\l  %50 = mul nsw i32 %49, %4\l  %51 = mul nsw i32 %50, %5\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = mul i32 %41, %5\l  %55 = mul i32 %54, %10\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %53, i64 %56\l  %58 = mul nsw i32 %21, %6\l  %59 = add nsw i32 %58, %19\l  %60 = mul i32 %8, %7\l  %61 = mul i32 %60, %59\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %1, i64 %62\l  %64 = icmp sgt i32 %7, 0\l  %65 = icmp slt i32 %22, %8\l  %66 = sext i32 %5 to i64\l  %67 = sext i32 %8 to i64\l  br label %68\l}"];
	Node0x4794bd0 -> Node0x4794510;
	Node0x4794510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%68:\l68:                                               \l  %69 = phi float addrspace(3)* [ %47, %43 ], [ %100, %98 ]\l  %70 = phi i32 [ 0, %43 ], [ %101, %98 ]\l  br i1 %64, label %71, label %98\l|{<s0>T|<s1>F}}"];
	Node0x4794510:s0 -> Node0x4796090;
	Node0x4794510:s1 -> Node0x4794560;
	Node0x4796090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%71:\l71:                                               \l  %72 = mul nsw i32 %70, %11\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %57, i64 %73\l  br label %75\l}"];
	Node0x4796090 -> Node0x4796370;
	Node0x4796370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%75:\l75:                                               \l  %76 = phi float [ %93, %92 ], [ 0.000000e+00, %71 ]\l  %77 = phi float addrspace(1)* [ %95, %92 ], [ %63, %71 ]\l  %78 = phi float addrspace(1)* [ %94, %92 ], [ %74, %71 ]\l  %79 = phi i32 [ %96, %92 ], [ 0, %71 ]\l  br i1 %65, label %80, label %92\l|{<s0>T|<s1>F}}"];
	Node0x4796370:s0 -> Node0x4797350;
	Node0x4796370:s1 -> Node0x4796460;
	Node0x4797350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = phi float [ %89, %80 ], [ %76, %75 ]\l  %82 = phi i32 [ %90, %80 ], [ %22, %75 ]\l  %83 = zext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %78, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !7\l  %86 = getelementptr inbounds float, float addrspace(1)* %77, i64 %83\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7\l  %88 = fmul contract float %85, %87\l  %89 = fadd contract float %81, %88\l  %90 = add nuw nsw i32 %82, %27\l  %91 = icmp slt i32 %90, %8\l  br i1 %91, label %80, label %92, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4797350:s0 -> Node0x4797350;
	Node0x4797350:s1 -> Node0x4796460;
	Node0x4796460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%92:\l92:                                               \l  %93 = phi float [ %76, %75 ], [ %89, %80 ]\l  %94 = getelementptr inbounds float, float addrspace(1)* %78, i64 %66\l  %95 = getelementptr inbounds float, float addrspace(1)* %77, i64 %67\l  %96 = add nuw nsw i32 %79, 1\l  %97 = icmp eq i32 %96, %7\l  br i1 %97, label %98, label %75, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4796460:s0 -> Node0x4794560;
	Node0x4796460:s1 -> Node0x4796370;
	Node0x4794560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%98:\l98:                                               \l  %99 = phi float [ 0.000000e+00, %68 ], [ %93, %92 ]\l  %100 = getelementptr inbounds float, float addrspace(3)* %69, i32 1\l  store float %99, float addrspace(3)* %69, align 4, !tbaa !7\l  %101 = add nuw nsw i32 %70, 1\l  %102 = icmp slt i32 %101, %18\l  br i1 %102, label %68, label %103, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4794560:s0 -> Node0x4794510;
	Node0x4794560:s1 -> Node0x4794c60;
	Node0x4794c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%103:\l103:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %104 = icmp eq i32 %41, 0\l  br i1 %104, label %105, label %139\l|{<s0>T|<s1>F}}"];
	Node0x4794c60:s0 -> Node0x4798f50;
	Node0x4794c60:s1 -> Node0x4798fa0;
	Node0x4798f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%105:\l105:                                              \l  %106 = icmp ugt i32 %34, 1\l  br i1 %106, label %107, label %113\l|{<s0>T|<s1>F}}"];
	Node0x4798f50:s0 -> Node0x4799130;
	Node0x4798f50:s1 -> Node0x4799180;
	Node0x4799130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%107:\l107:                                              \l  %108 = icmp slt i32 %29, %37\l  br label %109\l}"];
	Node0x4799130 -> Node0x4799350;
	Node0x4799350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%109:\l109:                                              \l  %110 = phi i32 [ 1, %107 ], [ %116, %115 ]\l  br i1 %108, label %111, label %115\l|{<s0>T|<s1>F}}"];
	Node0x4799350:s0 -> Node0x4799550;
	Node0x4799350:s1 -> Node0x4799410;
	Node0x4799550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%111:\l111:                                              \l  %112 = mul i32 %37, %110\l  br label %118\l}"];
	Node0x4799550 -> Node0x4799720;
	Node0x4799180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%113:\l113:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %114 = icmp slt i32 %29, %37\l  br i1 %114, label %128, label %139\l|{<s0>T|<s1>F}}"];
	Node0x4799180:s0 -> Node0x4799a20;
	Node0x4799180:s1 -> Node0x4798fa0;
	Node0x4799410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%115:\l115:                                              \l  %116 = add nuw nsw i32 %110, 1\l  %117 = icmp eq i32 %116, %34\l  br i1 %117, label %113, label %109, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4799410:s0 -> Node0x4799180;
	Node0x4799410:s1 -> Node0x4799350;
	Node0x4799720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%118:\l118:                                              \l  %119 = phi i32 [ %29, %111 ], [ %126, %118 ]\l  %120 = add nsw i32 %119, %112\l  %121 = getelementptr inbounds [12256 x float], [12256 x float] addrspace(3)*\l... @_ZZ15conv2genericrevPfS_S_iiiiiifiiE13shared_output, i32 0, i32 %120\l  %122 = load float, float addrspace(3)* %121, align 4, !tbaa !7\l  %123 = getelementptr inbounds [12256 x float], [12256 x float] addrspace(3)*\l... @_ZZ15conv2genericrevPfS_S_iiiiiifiiE13shared_output, i32 0, i32 %119\l  %124 = load float, float addrspace(3)* %123, align 4, !tbaa !7\l  %125 = fadd contract float %122, %124\l  store float %125, float addrspace(3)* %123, align 4, !tbaa !7\l  %126 = add nuw nsw i32 %119, %34\l  %127 = icmp slt i32 %126, %37\l  br i1 %127, label %118, label %115, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4799720:s0 -> Node0x4799720;
	Node0x4799720:s1 -> Node0x4799410;
	Node0x4799a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%128:\l128:                                              \l  %129 = phi i32 [ %137, %128 ], [ %29, %113 ]\l  %130 = zext i32 %129 to i64\l  %131 = getelementptr inbounds [12256 x float], [12256 x float] addrspace(3)*\l... @_ZZ15conv2genericrevPfS_S_iiiiiifiiE13shared_output, i32 0, i32 %129\l  %132 = load float, float addrspace(3)* %131, align 4, !tbaa !7\l  %133 = fmul contract float %132, %9\l  %134 = getelementptr inbounds float, float addrspace(1)* %40, i64 %130\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !7\l  %136 = fadd contract float %135, %133\l  store float %136, float addrspace(1)* %134, align 4, !tbaa !7\l  %137 = add nuw nsw i32 %129, %34\l  %138 = icmp slt i32 %137, %37\l  br i1 %138, label %128, label %139, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x4799a20:s0 -> Node0x4799a20;
	Node0x4799a20:s1 -> Node0x4798fa0;
	Node0x4798fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%139:\l139:                                              \l  ret void\l}"];
}
