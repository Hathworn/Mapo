digraph "CFG for '_Z10kLogistic1PfS_j' function" {
	label="CFG for '_Z10kLogistic1PfS_j' function";

	Node0x5b6f070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = icmp ult i32 %15, %2\l  br i1 %16, label %17, label %24\l|{<s0>T|<s1>F}}"];
	Node0x5b6f070:s0 -> Node0x5b709c0;
	Node0x5b6f070:s1 -> Node0x5b71370;
	Node0x5b709c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%17:\l17:                                               \l  %18 = udiv i32 %12, %9\l  %19 = mul i32 %18, %9\l  %20 = icmp ugt i32 %12, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %9\l  br label %25\l}"];
	Node0x5b709c0 -> Node0x5b717f0;
	Node0x5b71370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x5b717f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %15, %17 ], [ %64, %58 ]\l  %27 = zext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16\l  %30 = fmul contract float %29, 5.000000e-01\l  %31 = tail call float @llvm.fabs.f32(float %30)\l  %32 = fcmp olt float %31, 6.250000e-01\l  br i1 %32, label %33, label %41\l|{<s0>T|<s1>F}}"];
	Node0x5b717f0:s0 -> Node0x5b71260;
	Node0x5b717f0:s1 -> Node0x5b712f0;
	Node0x5b71260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%33:\l33:                                               \l  %34 = fmul float %30, %30\l  %35 = tail call float @llvm.fmuladd.f32(float %34, float 0xBF7758E7A0000000,\l... float 0x3F95211920000000)\l  %36 = tail call float @llvm.fmuladd.f32(float %34, float %35, float\l... 0xBFAB8389C0000000)\l  %37 = tail call float @llvm.fmuladd.f32(float %34, float %36, float\l... 0x3FC1107040000000)\l  %38 = tail call float @llvm.fmuladd.f32(float %34, float %37, float\l... 0xBFD5555320000000)\l  %39 = fmul float %31, %38\l  %40 = tail call float @llvm.fmuladd.f32(float %34, float %39, float %31)\l  br label %58\l}"];
	Node0x5b71260 -> Node0x5b71900;
	Node0x5b712f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%41:\l41:                                               \l  %42 = fmul float %31, 2.000000e+00\l  %43 = fmul float %42, 0x3FF7154760000000\l  %44 = tail call float @llvm.rint.f32(float %43)\l  %45 = fcmp ogt float %42, 0x40562E4300000000\l  %46 = fneg float %43\l  %47 = tail call float @llvm.fma.f32(float %42, float 0x3FF7154760000000,\l... float %46)\l  %48 = tail call float @llvm.fma.f32(float %42, float 0x3E54AE0BE0000000,\l... float %47)\l  %49 = fsub float %43, %44\l  %50 = fadd float %48, %49\l  %51 = tail call float @llvm.exp2.f32(float %50)\l  %52 = fptosi float %44 to i32\l  %53 = tail call float @llvm.amdgcn.ldexp.f32(float %51, i32 %52)\l  %54 = fadd float %53, 1.000000e+00\l  %55 = select i1 %45, float 0x7FF0000000000000, float %54\l  %56 = tail call float @llvm.amdgcn.rcp.f32(float %55)\l  %57 = tail call float @llvm.fmuladd.f32(float %56, float -2.000000e+00,\l... float 1.000000e+00)\l  br label %58\l}"];
	Node0x5b712f0 -> Node0x5b71900;
	Node0x5b71900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi float [ %40, %33 ], [ %57, %41 ]\l  %60 = tail call float @llvm.copysign.f32(float %59, float %30)\l  %61 = fadd contract float %60, 1.000000e+00\l  %62 = fmul contract float %61, 5.000000e-01\l  %63 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  store float %62, float addrspace(1)* %63, align 4, !tbaa !16\l  %64 = add i32 %23, %26\l  %65 = icmp ult i32 %64, %2\l  br i1 %65, label %25, label %24, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5b71900:s0 -> Node0x5b717f0;
	Node0x5b71900:s1 -> Node0x5b71370;
}
