digraph "CFG for '_Z4kAddPfS_S_jff' function" {
	label="CFG for '_Z4kAddPfS_S_jff' function";

	Node0x5da9560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = mul i32 %7, %12\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %18 = add i32 %16, %17\l  %19 = udiv i32 %15, %12\l  %20 = mul i32 %19, %12\l  %21 = icmp ugt i32 %15, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %12\l  %25 = icmp ult i32 %18, %3\l  br i1 %25, label %27, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5da9560:s0 -> Node0x5dabaf0;
	Node0x5da9560:s1 -> Node0x5dabb80;
	Node0x5dabb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%26:\l26:                                               \l  ret void\l}"];
	Node0x5dabaf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %38, %27 ], [ %18, %6 ]\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %0, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !16\l  %32 = fmul contract float %31, %4\l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %29\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16\l  %35 = fmul contract float %34, %5\l  %36 = fadd contract float %32, %35\l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 %29\l  store float %36, float addrspace(1)* %37, align 4, !tbaa !16\l  %38 = add i32 %28, %24\l  %39 = icmp ult i32 %38, %3\l  br i1 %39, label %27, label %26, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5dabaf0:s0 -> Node0x5dabaf0;
	Node0x5dabaf0:s1 -> Node0x5dabb80;
}
