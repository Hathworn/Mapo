digraph "CFG for '_Z18binary_kernel_samePKfmmS0_mmmPfmf' function" {
	label="CFG for '_Z18binary_kernel_samePKfmmS0_mmmPfmf' function";

	Node0x5508e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = zext i32 %11 to i64\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = zext i32 %13 to i64\l  %15 = icmp eq i32 %11, %13\l  %16 = icmp ult i64 %12, %2\l  %17 = select i1 %15, i1 %16, i1 false\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %19 = icmp eq i32 %18, 0\l  %20 = select i1 %17, i1 %19, i1 false\l  br i1 %20, label %21, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5508e60:s0 -> Node0x550a660;
	Node0x5508e60:s1 -> Node0x550a6f0;
	Node0x550a660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%21:\l21:                                               \l  %22 = mul i64 %14, %8\l  %23 = add i64 %22, %12\l  %24 = getelementptr inbounds float, float addrspace(1)* %7, i64 %23\l  store float 0.000000e+00, float addrspace(1)* %24, align 4, !tbaa !4\l  br label %25\l}"];
	Node0x550a660 -> Node0x550a6f0;
	Node0x550a6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%25:\l25:                                               \l  %26 = icmp ult i64 %14, %2\l  %27 = icmp ult i32 %11, %13\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %109\l|{<s0>T|<s1>F}}"];
	Node0x550a6f0:s0 -> Node0x550c280;
	Node0x550a6f0:s1 -> Node0x550c2d0;
	Node0x550c280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%29:\l29:                                               \l  %30 = getelementptr inbounds [64 x float], [64 x float] addrspace(3)*\l... @_ZZ18binary_kernel_samePKfmmS0_mmmPfmfE4temp, i32 0, i32 %18\l  store float 0.000000e+00, float addrspace(3)* %30, align 4, !tbaa !4\l  %31 = add nuw nsw i32 %18, 32\l  %32 = getelementptr inbounds [64 x float], [64 x float] addrspace(3)*\l... @_ZZ18binary_kernel_samePKfmmS0_mmmPfmfE4temp, i32 0, i32 %31\l  store float 0.000000e+00, float addrspace(3)* %32, align 4, !tbaa !4\l  %33 = zext i32 %18 to i64\l  %34 = icmp ult i64 %33, %6\l  br i1 %34, label %37, label %35\l|{<s0>T|<s1>F}}"];
	Node0x550c280:s0 -> Node0x550c460;
	Node0x550c280:s1 -> Node0x550d000;
	Node0x550d000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%35:\l35:                                               \l  %36 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  br label %45\l}"];
	Node0x550d000 -> Node0x550d2f0;
	Node0x550c460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%37:\l37:                                               \l  %38 = mul i64 %12, %1\l  %39 = mul i64 %14, %1\l  %40 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %41 = getelementptr i8, i8 addrspace(4)* %40, i64 4\l  %42 = bitcast i8 addrspace(4)* %41 to i16 addrspace(4)*\l  %43 = load i16, i16 addrspace(4)* %42, align 4, !range !8, !invariant.load !9\l  %44 = zext i16 %43 to i64\l  br label %54\l}"];
	Node0x550c460 -> Node0x550daf0;
	Node0x550d2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%45:\l45:                                               \l  %46 = phi i8 addrspace(4)* [ %36, %35 ], [ %40, %74 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %47 = getelementptr i8, i8 addrspace(4)* %46, i64 4\l  %48 = bitcast i8 addrspace(4)* %47 to i16 addrspace(4)*\l  %49 = load i16, i16 addrspace(4)* %48, align 4, !range !8, !invariant.load !9\l  %50 = icmp ult i16 %49, 2\l  br i1 %50, label %78, label %51\l|{<s0>T|<s1>F}}"];
	Node0x550d2f0:s0 -> Node0x550ee60;
	Node0x550d2f0:s1 -> Node0x550eef0;
	Node0x550eef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%51:\l51:                                               \l  %52 = lshr i16 %49, 1\l  %53 = zext i16 %52 to i64\l  br label %79\l}"];
	Node0x550eef0 -> Node0x550f160;
	Node0x550daf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = phi float [ 0.000000e+00, %37 ], [ %75, %74 ]\l  %56 = phi float [ 0.000000e+00, %37 ], [ %70, %74 ]\l  %57 = phi i64 [ %33, %37 ], [ %76, %74 ]\l  %58 = add i64 %57, %38\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !4\l  %61 = fcmp contract une float %60, 0.000000e+00\l  %62 = add i64 %57, %39\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !4\l  %65 = fcmp contract une float %64, 0.000000e+00\l  %66 = xor i1 %61, %65\l  br i1 %66, label %67, label %69\l|{<s0>T|<s1>F}}"];
	Node0x550daf0:s0 -> Node0x550ce80;
	Node0x550daf0:s1 -> Node0x550cf10;
	Node0x550ce80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%67:\l67:                                               \l  %68 = fadd contract float %56, 1.000000e+00\l  store float %68, float addrspace(3)* %30, align 4, !tbaa !4\l  br label %69\l}"];
	Node0x550ce80 -> Node0x550cf10;
	Node0x550cf10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  %70 = phi float [ %68, %67 ], [ %56, %54 ]\l  %71 = select i1 %61, i1 true, i1 %65\l  br i1 %71, label %72, label %74\l|{<s0>T|<s1>F}}"];
	Node0x550cf10:s0 -> Node0x5510130;
	Node0x550cf10:s1 -> Node0x550dbf0;
	Node0x5510130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%72:\l72:                                               \l  %73 = fadd contract float %55, 1.000000e+00\l  store float %73, float addrspace(3)* %32, align 4, !tbaa !4\l  br label %74\l}"];
	Node0x5510130 -> Node0x550dbf0;
	Node0x550dbf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = phi float [ %55, %69 ], [ %73, %72 ]\l  %76 = add i64 %57, %44\l  %77 = icmp ult i64 %76, %6\l  br i1 %77, label %54, label %45, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x550dbf0:s0 -> Node0x550daf0;
	Node0x550dbf0:s1 -> Node0x550d2f0;
	Node0x550ee60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%78:\l78:                                               \l  br i1 %19, label %97, label %109\l|{<s0>T|<s1>F}}"];
	Node0x550ee60:s0 -> Node0x55106c0;
	Node0x550ee60:s1 -> Node0x550c2d0;
	Node0x550f160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  %80 = phi i64 [ %95, %94 ], [ %53, %51 ]\l  %81 = icmp ugt i64 %80, %33\l  br i1 %81, label %82, label %94\l|{<s0>T|<s1>F}}"];
	Node0x550f160:s0 -> Node0x5510950;
	Node0x550f160:s1 -> Node0x55107c0;
	Node0x5510950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%82:\l82:                                               \l  %83 = trunc i64 %80 to i32\l  %84 = add nuw nsw i32 %18, %83\l  %85 = getelementptr inbounds [64 x float], [64 x float] addrspace(3)*\l... @_ZZ18binary_kernel_samePKfmmS0_mmmPfmfE4temp, i32 0, i32 %84\l  %86 = load float, float addrspace(3)* %85, align 4, !tbaa !4\l  %87 = load float, float addrspace(3)* %30, align 4, !tbaa !4\l  %88 = fadd contract float %86, %87\l  store float %88, float addrspace(3)* %30, align 4, !tbaa !4\l  %89 = add nuw nsw i32 %84, 32\l  %90 = getelementptr inbounds [64 x float], [64 x float] addrspace(3)*\l... @_ZZ18binary_kernel_samePKfmmS0_mmmPfmfE4temp, i32 0, i32 %89\l  %91 = load float, float addrspace(3)* %90, align 4, !tbaa !4\l  %92 = load float, float addrspace(3)* %32, align 4, !tbaa !4\l  %93 = fadd contract float %91, %92\l  store float %93, float addrspace(3)* %32, align 4, !tbaa !4\l  br label %94\l}"];
	Node0x5510950 -> Node0x55107c0;
	Node0x55107c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %95 = lshr i64 %80, 1\l  %96 = icmp ult i64 %80, 2\l  br i1 %96, label %78, label %79, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x55107c0:s0 -> Node0x550ee60;
	Node0x55107c0:s1 -> Node0x550f160;
	Node0x55106c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%97:\l97:                                               \l  %98 = load float, float addrspace(3)* getelementptr inbounds ([64 x float],\l... [64 x float] addrspace(3)* @_ZZ18binary_kernel_samePKfmmS0_mmmPfmfE4temp, i32\l... 0, i32 0), align 16, !tbaa !4\l  %99 = load float, float addrspace(3)* getelementptr inbounds ([64 x float],\l... [64 x float] addrspace(3)* @_ZZ18binary_kernel_samePKfmmS0_mmmPfmfE4temp, i32\l... 0, i32 32), align 16, !tbaa !4\l  %100 = fcmp contract une float %99, 0.000000e+00\l  %101 = select i1 %100, float %99, float 1.000000e+00\l  %102 = fdiv contract float %98, %101\l  %103 = mul i64 %14, %8\l  %104 = add i64 %103, %12\l  %105 = getelementptr inbounds float, float addrspace(1)* %7, i64 %104\l  store float %102, float addrspace(1)* %105, align 4, !tbaa !4\l  %106 = mul i64 %12, %8\l  %107 = add i64 %106, %14\l  %108 = getelementptr inbounds float, float addrspace(1)* %7, i64 %107\l  store float %102, float addrspace(1)* %108, align 4, !tbaa !4\l  br label %109\l}"];
	Node0x55106c0 -> Node0x550c2d0;
	Node0x550c2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%109:\l109:                                              \l  ret void\l}"];
}
