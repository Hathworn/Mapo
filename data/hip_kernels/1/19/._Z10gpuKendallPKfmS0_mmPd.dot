digraph "CFG for '_Z10gpuKendallPKfmS0_mmPd' function" {
	label="CFG for '_Z10gpuKendallPKfmS0_mmPd' function";

	Node0x4973820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = zext i32 %7 to i64\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %10 = zext i32 %9 to i64\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = zext i32 %11 to i64\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = zext i32 %13 to i64\l  %15 = mul i64 %12, %4\l  %16 = mul i64 %14, %4\l  %17 = icmp ult i64 %8, %4\l  br i1 %17, label %18, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4973820:s0 -> Node0x4975590;
	Node0x4973820:s1 -> Node0x4975620;
	Node0x4975590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%18:\l18:                                               \l  %19 = add nuw nsw i64 %10, 1\l  br label %20\l}"];
	Node0x4975590 -> Node0x4975e00;
	Node0x4975e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%20:\l20:                                               \l  %21 = phi i64 [ %8, %18 ], [ %75, %73 ]\l  %22 = phi float [ 0.000000e+00, %18 ], [ %74, %73 ]\l  %23 = add i64 %19, %21\l  %24 = icmp ult i64 %23, %4\l  br i1 %24, label %25, label %73\l|{<s0>T|<s1>F}}"];
	Node0x4975e00:s0 -> Node0x4976d00;
	Node0x4975e00:s1 -> Node0x4975f30;
	Node0x4976d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%25:\l25:                                               \l  %26 = add i64 %21, %15\l  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %29 = add i64 %21, %16\l  %30 = getelementptr inbounds float, float addrspace(1)* %2, i64 %29\l  br label %31\l}"];
	Node0x4976d00 -> Node0x4977430;
	Node0x4977430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = phi i64 [ %23, %25 ], [ %71, %65 ]\l  %33 = phi float [ %22, %25 ], [ %70, %65 ]\l  %34 = add i64 %32, %15\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %37 = fcmp contract ogt float %36, %28\l  br i1 %37, label %38, label %44\l|{<s0>T|<s1>F}}"];
	Node0x4977430:s0 -> Node0x4978730;
	Node0x4977430:s1 -> Node0x49787c0;
	Node0x4978730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%38:\l38:                                               \l  %39 = add i64 %32, %16\l  %40 = getelementptr inbounds float, float addrspace(1)* %2, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %42 = load float, float addrspace(1)* %30, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %43 = fcmp contract ogt float %41, %42\l  br label %44\l}"];
	Node0x4978730 -> Node0x49787c0;
	Node0x49787c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi i1 [ false, %31 ], [ %43, %38 ]\l  %46 = zext i1 %45 to i64\l  %47 = fcmp contract olt float %36, %28\l  br i1 %47, label %48, label %54\l|{<s0>T|<s1>F}}"];
	Node0x49787c0:s0 -> Node0x4978e30;
	Node0x49787c0:s1 -> Node0x4978e80;
	Node0x4978e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%48:\l48:                                               \l  %49 = add i64 %32, %16\l  %50 = getelementptr inbounds float, float addrspace(1)* %2, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %52 = load float, float addrspace(1)* %30, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %53 = fcmp contract olt float %51, %52\l  br label %54\l}"];
	Node0x4978e30 -> Node0x4978e80;
	Node0x4978e80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = phi i1 [ false, %44 ], [ %53, %48 ]\l  %56 = zext i1 %55 to i64\l  %57 = add nuw nsw i64 %56, %46\l  %58 = fcmp contract oeq float %36, %28\l  br i1 %58, label %59, label %65\l|{<s0>T|<s1>F}}"];
	Node0x4978e80:s0 -> Node0x4979580;
	Node0x4978e80:s1 -> Node0x4977530;
	Node0x4979580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%59:\l59:                                               \l  %60 = add i64 %32, %16\l  %61 = getelementptr inbounds float, float addrspace(1)* %2, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %63 = load float, float addrspace(1)* %30, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %64 = fcmp contract oeq float %62, %63\l  br label %65\l}"];
	Node0x4979580 -> Node0x4977530;
	Node0x4977530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = phi i1 [ false, %54 ], [ %64, %59 ]\l  %67 = zext i1 %66 to i64\l  %68 = add nuw nsw i64 %57, %67\l  %69 = uitofp i64 %68 to float\l  %70 = fadd contract float %33, %69\l  %71 = add i64 %32, 16\l  %72 = icmp ult i64 %71, %4\l  br i1 %72, label %31, label %73, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4977530:s0 -> Node0x4977430;
	Node0x4977530:s1 -> Node0x4975f30;
	Node0x4975f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%73:\l73:                                               \l  %74 = phi float [ %22, %20 ], [ %70, %65 ]\l  %75 = add i64 %21, 16\l  %76 = icmp ult i64 %75, %4\l  br i1 %76, label %20, label %77, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4975f30:s0 -> Node0x4975e00;
	Node0x4975f30:s1 -> Node0x4975620;
	Node0x4975620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%77:\l77:                                               \l  %78 = phi float [ 0.000000e+00, %6 ], [ %74, %73 ]\l  %79 = shl nuw nsw i64 %8, 4\l  %80 = add nuw nsw i64 %79, %10\l  %81 = trunc i64 %80 to i32\l  %82 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ10gpuKendallPKfmS0_mmPdE10threadSums, i32 0, i32 %81\l  store float %78, float addrspace(3)* %82, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %83 = icmp ult i32 %9, 8\l  br i1 %83, label %84, label %91\l|{<s0>T|<s1>F}}"];
	Node0x4975620:s0 -> Node0x497aab0;
	Node0x4975620:s1 -> Node0x497ab00;
	Node0x497aab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%84:\l84:                                               \l  %85 = trunc i64 %80 to i32\l  %86 = add nuw nsw i32 %85, 8\l  %87 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ10gpuKendallPKfmS0_mmPdE10threadSums, i32 0, i32 %86\l  %88 = load float, float addrspace(3)* %87, align 4, !tbaa !5\l  %89 = load float, float addrspace(3)* %82, align 4, !tbaa !5\l  %90 = fadd contract float %88, %89\l  store float %90, float addrspace(3)* %82, align 4, !tbaa !5\l  br label %91\l}"];
	Node0x497aab0 -> Node0x497ab00;
	Node0x497ab00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%91:\l91:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %92 = icmp ult i32 %9, 4\l  br i1 %92, label %93, label %100\l|{<s0>T|<s1>F}}"];
	Node0x497ab00:s0 -> Node0x497b2c0;
	Node0x497ab00:s1 -> Node0x497b310;
	Node0x497b2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%93:\l93:                                               \l  %94 = trunc i64 %80 to i32\l  %95 = add nuw nsw i32 %94, 4\l  %96 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ10gpuKendallPKfmS0_mmPdE10threadSums, i32 0, i32 %95\l  %97 = load float, float addrspace(3)* %96, align 4, !tbaa !5\l  %98 = load float, float addrspace(3)* %82, align 4, !tbaa !5\l  %99 = fadd contract float %97, %98\l  store float %99, float addrspace(3)* %82, align 4, !tbaa !5\l  br label %100\l}"];
	Node0x497b2c0 -> Node0x497b310;
	Node0x497b310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%100:\l100:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %101 = icmp ult i32 %9, 2\l  br i1 %101, label %102, label %109\l|{<s0>T|<s1>F}}"];
	Node0x497b310:s0 -> Node0x497ba70;
	Node0x497b310:s1 -> Node0x497bac0;
	Node0x497ba70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%102:\l102:                                              \l  %103 = trunc i64 %80 to i32\l  %104 = add nuw nsw i32 %103, 2\l  %105 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ10gpuKendallPKfmS0_mmPdE10threadSums, i32 0, i32 %104\l  %106 = load float, float addrspace(3)* %105, align 4, !tbaa !5\l  %107 = load float, float addrspace(3)* %82, align 4, !tbaa !5\l  %108 = fadd contract float %106, %107\l  store float %108, float addrspace(3)* %82, align 4, !tbaa !5\l  br label %109\l}"];
	Node0x497ba70 -> Node0x497bac0;
	Node0x497bac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%109:\l109:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %110 = icmp eq i32 %9, 0\l  br i1 %110, label %111, label %118\l|{<s0>T|<s1>F}}"];
	Node0x497bac0:s0 -> Node0x497c220;
	Node0x497bac0:s1 -> Node0x497c270;
	Node0x497c220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%111:\l111:                                              \l  %112 = trunc i64 %80 to i32\l  %113 = add nuw nsw i32 %112, 1\l  %114 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ10gpuKendallPKfmS0_mmPdE10threadSums, i32 0, i32 %113\l  %115 = load float, float addrspace(3)* %114, align 4, !tbaa !5\l  %116 = load float, float addrspace(3)* %82, align 4, !tbaa !5\l  %117 = fadd contract float %115, %116\l  store float %117, float addrspace(3)* %82, align 4, !tbaa !5\l  br label %118\l}"];
	Node0x497c220 -> Node0x497c270;
	Node0x497c270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%118:\l118:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %119 = icmp eq i32 %9, 0\l  %120 = trunc i64 %79 to i32\l  %121 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ10gpuKendallPKfmS0_mmPdE10threadSums, i32 0, i32 %120\l  %122 = icmp ult i32 %7, 8\l  %123 = select i1 %122, i1 %119, i1 false\l  br i1 %123, label %124, label %131\l|{<s0>T|<s1>F}}"];
	Node0x497c270:s0 -> Node0x497ca40;
	Node0x497c270:s1 -> Node0x497cc90;
	Node0x497ca40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%124:\l124:                                              \l  %125 = shl nuw nsw i32 %7, 4\l  %126 = add nuw nsw i32 %125, 128\l  %127 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ10gpuKendallPKfmS0_mmPdE10threadSums, i32 0, i32 %126\l  %128 = load float, float addrspace(3)* %127, align 16, !tbaa !5\l  %129 = load float, float addrspace(3)* %121, align 16, !tbaa !5\l  %130 = fadd contract float %128, %129\l  store float %130, float addrspace(3)* %121, align 16, !tbaa !5\l  br label %131\l}"];
	Node0x497ca40 -> Node0x497cc90;
	Node0x497cc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%131:\l131:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %132 = icmp ult i32 %7, 4\l  %133 = select i1 %132, i1 %119, i1 false\l  br i1 %133, label %134, label %141\l|{<s0>T|<s1>F}}"];
	Node0x497cc90:s0 -> Node0x497d8f0;
	Node0x497cc90:s1 -> Node0x497d940;
	Node0x497d8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%134:\l134:                                              \l  %135 = shl nuw nsw i32 %7, 4\l  %136 = add nuw nsw i32 %135, 64\l  %137 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ10gpuKendallPKfmS0_mmPdE10threadSums, i32 0, i32 %136\l  %138 = load float, float addrspace(3)* %137, align 16, !tbaa !5\l  %139 = load float, float addrspace(3)* %121, align 16, !tbaa !5\l  %140 = fadd contract float %138, %139\l  store float %140, float addrspace(3)* %121, align 16, !tbaa !5\l  br label %141\l}"];
	Node0x497d8f0 -> Node0x497d940;
	Node0x497d940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%141:\l141:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %142 = icmp ult i32 %7, 2\l  %143 = select i1 %142, i1 %119, i1 false\l  br i1 %143, label %144, label %151\l|{<s0>T|<s1>F}}"];
	Node0x497d940:s0 -> Node0x497e140;
	Node0x497d940:s1 -> Node0x497e190;
	Node0x497e140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%144:\l144:                                              \l  %145 = shl nuw nsw i32 %7, 4\l  %146 = add nuw nsw i32 %145, 32\l  %147 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ10gpuKendallPKfmS0_mmPdE10threadSums, i32 0, i32 %146\l  %148 = load float, float addrspace(3)* %147, align 16, !tbaa !5\l  %149 = load float, float addrspace(3)* %121, align 16, !tbaa !5\l  %150 = fadd contract float %148, %149\l  store float %150, float addrspace(3)* %121, align 16, !tbaa !5\l  br label %151\l}"];
	Node0x497e140 -> Node0x497e190;
	Node0x497e190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%151:\l151:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %152 = icmp eq i32 %7, 0\l  %153 = select i1 %152, i1 %119, i1 false\l  br i1 %153, label %154, label %161\l|{<s0>T|<s1>F}}"];
	Node0x497e190:s0 -> Node0x497e9c0;
	Node0x497e190:s1 -> Node0x497ea10;
	Node0x497e9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%154:\l154:                                              \l  %155 = shl nuw nsw i32 %7, 4\l  %156 = add nuw nsw i32 %155, 16\l  %157 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ10gpuKendallPKfmS0_mmPdE10threadSums, i32 0, i32 %156\l  %158 = load float, float addrspace(3)* %157, align 16, !tbaa !5\l  %159 = load float, float addrspace(3)* %121, align 16, !tbaa !5\l  %160 = fadd contract float %158, %159\l  store float %160, float addrspace(3)* %121, align 16, !tbaa !5\l  br label %161\l}"];
	Node0x497e9c0 -> Node0x497ea10;
	Node0x497ea10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%161:\l161:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %162 = icmp eq i32 %7, 0\l  %163 = select i1 %162, i1 %119, i1 false\l  br i1 %163, label %164, label %178\l|{<s0>T|<s1>F}}"];
	Node0x497ea10:s0 -> Node0x497f240;
	Node0x497ea10:s1 -> Node0x497f290;
	Node0x497f240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%164:\l164:                                              \l  %165 = load float, float addrspace(3)* getelementptr inbounds ([256 x\l... float], [256 x float] addrspace(3)* @_ZZ10gpuKendallPKfmS0_mmPdE10threadSums,\l... i32 0, i32 0), align 16, !tbaa !5\l  %166 = uitofp i64 %4 to float\l  %167 = fadd contract float %166, -1.000000e+00\l  %168 = fmul contract float %167, %166\l  %169 = fmul contract float %168, 5.000000e-01\l  %170 = fsub contract float %169, %165\l  %171 = fsub contract float %165, %170\l  %172 = fpext float %171 to double\l  %173 = fpext float %169 to double\l  %174 = fdiv contract double %172, %173\l  %175 = mul i64 %14, %1\l  %176 = add i64 %175, %12\l  %177 = getelementptr inbounds double, double addrspace(1)* %5, i64 %176\l  store double %174, double addrspace(1)* %177, align 8, !tbaa !13\l  br label %178\l}"];
	Node0x497f240 -> Node0x497f290;
	Node0x497f290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%178:\l178:                                              \l  ret void\l}"];
}
