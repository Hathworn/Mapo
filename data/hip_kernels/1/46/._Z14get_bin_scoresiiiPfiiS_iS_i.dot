digraph "CFG for '_Z14get_bin_scoresiiiPfiiS_iS_i' function" {
	label="CFG for '_Z14get_bin_scoresiiiPfiiS_iS_i' function";

	Node0x4ff8c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%10:\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = mul i32 %16, %15\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = icmp slt i32 %19, %5\l  br i1 %20, label %21, label %125\l|{<s0>T|<s1>F}}"];
	Node0x4ff8c90:s0 -> Node0x4ffb740;
	Node0x4ff8c90:s1 -> Node0x4ffb7d0;
	Node0x4ffb740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%21:\l21:                                               \l  %22 = mul nsw i32 %19, %7\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds float, float addrspace(1)* %6, i64 %23\l  %25 = icmp sgt i32 %4, 0\l  br i1 %25, label %26, label %125\l|{<s0>T|<s1>F}}"];
	Node0x4ffb740:s0 -> Node0x4ffbb40;
	Node0x4ffb740:s1 -> Node0x4ffb7d0;
	Node0x4ffbb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%26:\l26:                                               \l  %27 = mul nsw i32 %19, %9\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %8, i64 %28\l  %30 = icmp slt i32 %1, 2\l  %31 = sext i32 %0 to i64\l  br label %32\l}"];
	Node0x4ffbb40 -> Node0x4ffbf10;
	Node0x4ffbf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%32:\l32:                                               \l  %33 = phi i32 [ 0, %26 ], [ %46, %45 ]\l  %34 = phi float addrspace(1)* [ %29, %26 ], [ %47, %45 ]\l  %35 = zext i32 %33 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %24, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7\l  %38 = tail call float @llvm.floor.f32(float %37)\l  %39 = fptosi float %38 to i32\l  %40 = add nsw i32 %39, %1\l  %41 = tail call i32 @llvm.smin.i32(i32 %40, i32 %0)\l  %42 = add nsw i32 %41, -1\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %34, i64 %43\l  store float 1.000000e+00, float addrspace(1)* %44, align 4, !tbaa !7\l  br i1 %30, label %45, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4ffbf10:s0 -> Node0x4ffb1c0;
	Node0x4ffbf10:s1 -> Node0x4ffde80;
	Node0x4ffb1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%45:\l45:                                               \l  %46 = add nuw nsw i32 %33, 1\l  %47 = getelementptr inbounds float, float addrspace(1)* %34, i64 %31\l  %48 = icmp eq i32 %46, %4\l  br i1 %48, label %125, label %32, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4ffb1c0:s0 -> Node0x4ffb7d0;
	Node0x4ffb1c0:s1 -> Node0x4ffbf10;
	Node0x4ffde80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%49:\l49:                                               \l  %50 = phi i32 [ %54, %53 ], [ 2, %32 ]\l  %51 = sub i32 %41, %50\l  %52 = icmp slt i32 %51, %41\l  br i1 %52, label %56, label %53\l|{<s0>T|<s1>F}}"];
	Node0x4ffde80:s0 -> Node0x4ffe540;
	Node0x4ffde80:s1 -> Node0x4ffe2e0;
	Node0x4ffe2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%53:\l53:                                               \l  %54 = add nuw i32 %50, 1\l  %55 = icmp eq i32 %50, %1\l  br i1 %55, label %45, label %49, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4ffe2e0:s0 -> Node0x4ffb1c0;
	Node0x4ffe2e0:s1 -> Node0x4ffde80;
	Node0x4ffe540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  %57 = phi i32 [ %63, %119 ], [ %51, %49 ]\l  %58 = add nsw i32 %57, %50\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %3, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7\l  %62 = fsub contract float %61, %37\l  %63 = add nsw i32 %57, 1\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %3, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7\l  %67 = fsub contract float %61, %66\l  %68 = fcmp contract oeq float %62, %67\l  %69 = fcmp contract une float %62, 0.000000e+00\l  %70 = and i1 %69, %68\l  %71 = icmp slt i32 %57, 0\l  %72 = icmp sge i32 %57, %2\l  %73 = select i1 %71, i1 true, i1 %72\l  %74 = icmp slt i32 %58, 1\l  %75 = select i1 %73, i1 true, i1 %74\l  br i1 %75, label %98, label %76\l|{<s0>T|<s1>F}}"];
	Node0x4ffe540:s0 -> Node0x4ffc170;
	Node0x4ffe540:s1 -> Node0x4fff700;
	Node0x4fff700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%76:\l76:                                               \l  %77 = add nsw i32 %58, -1\l  %78 = zext i32 %57 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %3, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7\l  %81 = fsub contract float %37, %80\l  %82 = zext i32 %77 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %3, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  %85 = fsub contract float %84, %80\l  %86 = fcmp contract oeq float %81, %85\l  %87 = fcmp contract une float %81, 0.000000e+00\l  %88 = and i1 %87, %86\l  br i1 %88, label %93, label %89\l|{<s0>T|<s1>F}}"];
	Node0x4fff700:s0 -> Node0x4fffea0;
	Node0x4fff700:s1 -> Node0x4fffef0;
	Node0x4fffef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%89:\l89:                                               \l  %90 = fcmp contract une float %85, 0.000000e+00\l  br i1 %90, label %91, label %93\l|{<s0>T|<s1>F}}"];
	Node0x4fffef0:s0 -> Node0x50000c0;
	Node0x4fffef0:s1 -> Node0x4fffea0;
	Node0x50000c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%91:\l91:                                               \l  %92 = fdiv contract float %81, %85\l  br label %93\l}"];
	Node0x50000c0 -> Node0x4fffea0;
	Node0x4fffea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%93:\l93:                                               \l  %94 = phi float [ %92, %91 ], [ 0.000000e+00, %89 ], [ 1.000000e+00, %76 ]\l  %95 = getelementptr inbounds float, float addrspace(1)* %34, i64 %78\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7\l  %97 = fmul contract float %94, %96\l  br label %98\l}"];
	Node0x4fffea0 -> Node0x4ffc170;
	Node0x4ffc170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%98:\l98:                                               \l  %99 = phi float [ %97, %93 ], [ 0.000000e+00, %56 ]\l  %100 = icmp sgt i32 %57, -2\l  %101 = icmp slt i32 %63, %0\l  %102 = select i1 %100, i1 %101, i1 false\l  %103 = icmp slt i32 %63, %2\l  %104 = select i1 %102, i1 %103, i1 false\l  %105 = icmp sgt i32 %58, -1\l  %106 = select i1 %104, i1 %105, i1 false\l  %107 = icmp slt i32 %58, %2\l  %108 = select i1 %106, i1 %107, i1 false\l  br i1 %108, label %109, label %119\l|{<s0>T|<s1>F}}"];
	Node0x4ffc170:s0 -> Node0x5000c10;
	Node0x4ffc170:s1 -> Node0x4ffe910;
	Node0x5000c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%109:\l109:                                              \l  br i1 %70, label %114, label %110\l|{<s0>T|<s1>F}}"];
	Node0x5000c10:s0 -> Node0x5000d10;
	Node0x5000c10:s1 -> Node0x5000d60;
	Node0x5000d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%110:\l110:                                              \l  %111 = fcmp contract une float %67, 0.000000e+00\l  br i1 %111, label %112, label %114\l|{<s0>T|<s1>F}}"];
	Node0x5000d60:s0 -> Node0x5000ef0;
	Node0x5000d60:s1 -> Node0x5000d10;
	Node0x5000ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%112:\l112:                                              \l  %113 = fdiv contract float %62, %67\l  br label %114\l}"];
	Node0x5000ef0 -> Node0x5000d10;
	Node0x5000d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%114:\l114:                                              \l  %115 = phi float [ %113, %112 ], [ 0.000000e+00, %110 ], [ 1.000000e+00,\l... %109 ]\l  %116 = getelementptr inbounds float, float addrspace(1)* %34, i64 %64\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !7\l  %118 = fmul contract float %115, %117\l  br label %119\l}"];
	Node0x5000d10 -> Node0x4ffe910;
	Node0x4ffe910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%119:\l119:                                              \l  %120 = phi float [ %118, %114 ], [ 0.000000e+00, %98 ]\l  %121 = fadd contract float %99, %120\l  %122 = sext i32 %57 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %34, i64 %122\l  store float %121, float addrspace(1)* %123, align 4, !tbaa !7\l  %124 = icmp eq i32 %63, %41\l  br i1 %124, label %53, label %56, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4ffe910:s0 -> Node0x4ffe2e0;
	Node0x4ffe910:s1 -> Node0x4ffe540;
	Node0x4ffb7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%125:\l125:                                              \l  ret void\l}"];
}
