digraph "CFG for '_Z9gpuSignifPKfS0_mPf' function" {
	label="CFG for '_Z9gpuSignifPKfS0_mPf' function";

	Node0x574ace0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = zext i32 %5 to i64\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = shl nuw nsw i64 %6, 9\l  %9 = shl nuw nsw i32 %7, 5\l  %10 = zext i32 %9 to i64\l  %11 = add nuw nsw i64 %8, %10\l  br label %12\l}"];
	Node0x574ace0 -> Node0x574ad30;
	Node0x574ad30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l12:                                               \l  %13 = phi i64 [ 0, %4 ], [ %83, %51 ]\l  %14 = add nuw nsw i64 %11, %13\l  %15 = icmp ult i64 %14, %2\l  br i1 %15, label %16, label %85\l|{<s0>T|<s1>F}}"];
	Node0x574ad30:s0 -> Node0x574c970;
	Node0x574ad30:s1 -> Node0x574ca00;
	Node0x574c970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%16:\l16:                                               \l  %17 = getelementptr inbounds float, float addrspace(1)* %0, i64 %14\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !5\l  %19 = getelementptr inbounds float, float addrspace(1)* %1, i64 %14\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !5\l  %21 = fadd contract float %18, -2.000000e+00\l  %22 = fmul contract float %20, %20\l  %23 = fsub contract float 1.000000e+00, %22\l  %24 = fdiv contract float %21, %23\l  %25 = fcmp olt float %24, 0x39F0000000000000\l  %26 = select i1 %25, float 0x41F0000000000000, float 1.000000e+00\l  %27 = fmul float %24, %26\l  %28 = tail call float @llvm.sqrt.f32(float %27)\l  %29 = bitcast float %28 to i32\l  %30 = add nsw i32 %29, -1\l  %31 = bitcast i32 %30 to float\l  %32 = add nsw i32 %29, 1\l  %33 = bitcast i32 %32 to float\l  %34 = tail call i1 @llvm.amdgcn.class.f32(float %27, i32 608)\l  %35 = select i1 %25, float 0x3EF0000000000000, float 1.000000e+00\l  %36 = fneg float %33\l  %37 = tail call float @llvm.fma.f32(float %36, float %28, float %27)\l  %38 = fcmp ogt float %37, 0.000000e+00\l  %39 = fneg float %31\l  %40 = tail call float @llvm.fma.f32(float %39, float %28, float %27)\l  %41 = fcmp ole float %40, 0.000000e+00\l  %42 = select i1 %41, float %31, float %28\l  %43 = select i1 %38, float %33, float %42\l  %44 = fmul float %35, %43\l  %45 = select i1 %34, float %27, float %44\l  %46 = fmul contract float %20, %45\l  %47 = getelementptr inbounds float, float addrspace(1)* %3, i64 %14\l  store float %46, float addrspace(1)* %47, align 4, !tbaa !5\l  %48 = or i64 %13, 1\l  %49 = add nuw nsw i64 %11, %48\l  %50 = icmp ult i64 %49, %2\l  br i1 %50, label %51, label %85\l|{<s0>T|<s1>F}}"];
	Node0x574c970:s0 -> Node0x574c710;
	Node0x574c970:s1 -> Node0x574ca00;
	Node0x574c710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%51:\l51:                                               \l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !5\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !5\l  %56 = fadd contract float %53, -2.000000e+00\l  %57 = fmul contract float %55, %55\l  %58 = fsub contract float 1.000000e+00, %57\l  %59 = fdiv contract float %56, %58\l  %60 = fcmp olt float %59, 0x39F0000000000000\l  %61 = select i1 %60, float 0x41F0000000000000, float 1.000000e+00\l  %62 = fmul float %59, %61\l  %63 = tail call float @llvm.sqrt.f32(float %62)\l  %64 = bitcast float %63 to i32\l  %65 = add nsw i32 %64, -1\l  %66 = bitcast i32 %65 to float\l  %67 = add nsw i32 %64, 1\l  %68 = bitcast i32 %67 to float\l  %69 = tail call i1 @llvm.amdgcn.class.f32(float %62, i32 608)\l  %70 = select i1 %60, float 0x3EF0000000000000, float 1.000000e+00\l  %71 = fneg float %68\l  %72 = tail call float @llvm.fma.f32(float %71, float %63, float %62)\l  %73 = fcmp ogt float %72, 0.000000e+00\l  %74 = fneg float %66\l  %75 = tail call float @llvm.fma.f32(float %74, float %63, float %62)\l  %76 = fcmp ole float %75, 0.000000e+00\l  %77 = select i1 %76, float %66, float %63\l  %78 = select i1 %73, float %68, float %77\l  %79 = fmul float %70, %78\l  %80 = select i1 %69, float %62, float %79\l  %81 = fmul contract float %55, %80\l  %82 = getelementptr inbounds float, float addrspace(1)* %3, i64 %49\l  store float %81, float addrspace(1)* %82, align 4, !tbaa !5\l  %83 = add nuw nsw i64 %13, 2\l  %84 = icmp eq i64 %83, 32\l  br i1 %84, label %85, label %12, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x574c710:s0 -> Node0x574ca00;
	Node0x574c710:s1 -> Node0x574ad30;
	Node0x574ca00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%85:\l85:                                               \l  ret void\l}"];
}
