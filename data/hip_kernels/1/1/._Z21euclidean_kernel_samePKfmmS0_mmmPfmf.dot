digraph "CFG for '_Z21euclidean_kernel_samePKfmmS0_mmmPfmf' function" {
	label="CFG for '_Z21euclidean_kernel_samePKfmmS0_mmmPfmf' function";

	Node0x529bc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = zext i32 %11 to i64\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = zext i32 %13 to i64\l  %15 = icmp eq i32 %11, %13\l  %16 = icmp ult i64 %12, %2\l  %17 = select i1 %15, i1 %16, i1 false\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %19 = icmp eq i32 %18, 0\l  %20 = select i1 %17, i1 %19, i1 false\l  br i1 %20, label %21, label %25\l|{<s0>T|<s1>F}}"];
	Node0x529bc20:s0 -> Node0x529d430;
	Node0x529bc20:s1 -> Node0x529d4c0;
	Node0x529d430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%21:\l21:                                               \l  %22 = mul i64 %14, %8\l  %23 = add i64 %22, %12\l  %24 = getelementptr inbounds float, float addrspace(1)* %7, i64 %23\l  store float 0.000000e+00, float addrspace(1)* %24, align 4, !tbaa !4\l  br label %25\l}"];
	Node0x529d430 -> Node0x529d4c0;
	Node0x529d4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%25:\l25:                                               \l  %26 = icmp ult i64 %14, %2\l  %27 = icmp ult i32 %11, %13\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %103\l|{<s0>T|<s1>F}}"];
	Node0x529d4c0:s0 -> Node0x529f050;
	Node0x529d4c0:s1 -> Node0x529f0a0;
	Node0x529f050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%29:\l29:                                               \l  %30 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ21euclidean_kernel_samePKfmmS0_mmmPfmfE4temp, i32 0, i32 %18\l  store float 0.000000e+00, float addrspace(3)* %30, align 4, !tbaa !4\l  %31 = zext i32 %18 to i64\l  %32 = icmp ult i64 %31, %6\l  br i1 %32, label %33, label %37\l|{<s0>T|<s1>F}}"];
	Node0x529f050:s0 -> Node0x529f230;
	Node0x529f050:s1 -> Node0x529c920;
	Node0x529f230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%33:\l33:                                               \l  %34 = mul i64 %12, %1\l  %35 = mul i64 %14, %1\l  br label %46\l}"];
	Node0x529f230 -> Node0x529c9b0;
	Node0x529ff40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%36:\l36:                                               \l  store float %57, float addrspace(3)* %30, align 4, !tbaa !4\l  br label %37\l}"];
	Node0x529ff40 -> Node0x529c920;
	Node0x529c920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%37:\l37:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %38 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %39 = getelementptr i8, i8 addrspace(4)* %38, i64 4\l  %40 = bitcast i8 addrspace(4)* %39 to i16 addrspace(4)*\l  %41 = load i16, i16 addrspace(4)* %40, align 4, !range !8, !invariant.load !9\l  %42 = icmp ult i16 %41, 2\l  br i1 %42, label %60, label %43\l|{<s0>T|<s1>F}}"];
	Node0x529c920:s0 -> Node0x52a0a90;
	Node0x529c920:s1 -> Node0x52a0b20;
	Node0x52a0b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%43:\l43:                                               \l  %44 = lshr i16 %41, 1\l  %45 = zext i16 %44 to i64\l  br label %61\l}"];
	Node0x52a0b20 -> Node0x52a0d90;
	Node0x529c9b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi float [ 0.000000e+00, %33 ], [ %57, %46 ]\l  %48 = phi i64 [ %31, %33 ], [ %58, %46 ]\l  %49 = add i64 %48, %34\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !4\l  %52 = add i64 %48, %35\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !4\l  %55 = fsub contract float %51, %54\l  %56 = fmul contract float %55, %55\l  %57 = fadd contract float %47, %56\l  %58 = add i64 %48, 32\l  %59 = icmp ult i64 %58, %6\l  br i1 %59, label %46, label %36, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x529c9b0:s0 -> Node0x529c9b0;
	Node0x529c9b0:s1 -> Node0x529ff40;
	Node0x52a0a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%60:\l60:                                               \l  br i1 %19, label %74, label %103\l|{<s0>T|<s1>F}}"];
	Node0x52a0a90:s0 -> Node0x52a1790;
	Node0x52a0a90:s1 -> Node0x529f0a0;
	Node0x52a0d90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = phi i64 [ %72, %71 ], [ %45, %43 ]\l  %63 = icmp ugt i64 %62, %31\l  br i1 %63, label %64, label %71\l|{<s0>T|<s1>F}}"];
	Node0x52a0d90:s0 -> Node0x52a1a60;
	Node0x52a0d90:s1 -> Node0x52a1890;
	Node0x52a1a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%64:\l64:                                               \l  %65 = trunc i64 %62 to i32\l  %66 = add nuw nsw i32 %18, %65\l  %67 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ21euclidean_kernel_samePKfmmS0_mmmPfmfE4temp, i32 0, i32 %66\l  %68 = load float, float addrspace(3)* %67, align 4, !tbaa !4\l  %69 = load float, float addrspace(3)* %30, align 4, !tbaa !4\l  %70 = fadd contract float %68, %69\l  store float %70, float addrspace(3)* %30, align 4, !tbaa !4\l  br label %71\l}"];
	Node0x52a1a60 -> Node0x52a1890;
	Node0x52a1890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %72 = lshr i64 %62, 1\l  %73 = icmp ult i64 %62, 2\l  br i1 %73, label %60, label %61, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x52a1890:s0 -> Node0x52a0a90;
	Node0x52a1890:s1 -> Node0x52a0d90;
	Node0x52a1790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%74:\l74:                                               \l  %75 = load float, float addrspace(3)* getelementptr inbounds ([32 x float],\l... [32 x float] addrspace(3)* @_ZZ21euclidean_kernel_samePKfmmS0_mmmPfmfE4temp,\l... i32 0, i32 0), align 16, !tbaa !4\l  %76 = fcmp olt float %75, 0x39F0000000000000\l  %77 = select i1 %76, float 0x41F0000000000000, float 1.000000e+00\l  %78 = fmul float %75, %77\l  %79 = tail call float @llvm.sqrt.f32(float %78)\l  %80 = bitcast float %79 to i32\l  %81 = add nsw i32 %80, -1\l  %82 = bitcast i32 %81 to float\l  %83 = add nsw i32 %80, 1\l  %84 = bitcast i32 %83 to float\l  %85 = tail call i1 @llvm.amdgcn.class.f32(float %78, i32 608)\l  %86 = select i1 %76, float 0x3EF0000000000000, float 1.000000e+00\l  %87 = fneg float %84\l  %88 = tail call float @llvm.fma.f32(float %87, float %79, float %78)\l  %89 = fcmp ogt float %88, 0.000000e+00\l  %90 = fneg float %82\l  %91 = tail call float @llvm.fma.f32(float %90, float %79, float %78)\l  %92 = fcmp ole float %91, 0.000000e+00\l  %93 = select i1 %92, float %82, float %79\l  %94 = select i1 %89, float %84, float %93\l  %95 = fmul float %86, %94\l  %96 = select i1 %85, float %78, float %95\l  %97 = mul i64 %14, %8\l  %98 = add i64 %97, %12\l  %99 = getelementptr inbounds float, float addrspace(1)* %7, i64 %98\l  store float %96, float addrspace(1)* %99, align 4, !tbaa !4\l  %100 = mul i64 %12, %8\l  %101 = add i64 %100, %14\l  %102 = getelementptr inbounds float, float addrspace(1)* %7, i64 %101\l  store float %96, float addrspace(1)* %102, align 4, !tbaa !4\l  br label %103\l}"];
	Node0x52a1790 -> Node0x529f0a0;
	Node0x529f0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%103:\l103:                                              \l  ret void\l}"];
}
