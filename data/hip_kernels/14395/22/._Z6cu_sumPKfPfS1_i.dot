digraph "CFG for '_Z6cu_sumPKfPfS1_i' function" {
	label="CFG for '_Z6cu_sumPKfPfS1_i' function";

	Node0x52a8820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp ult i32 %13, %3\l  br i1 %14, label %15, label %19\l|{<s0>T|<s1>F}}"];
	Node0x52a8820:s0 -> Node0x52aa730;
	Node0x52a8820:s1 -> Node0x52aa7c0;
	Node0x52aa730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%15:\l15:                                               \l  %16 = zext i32 %13 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %0, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  br label %19\l}"];
	Node0x52aa730 -> Node0x52aa7c0;
	Node0x52aa7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%19:\l19:                                               \l  %20 = phi float [ %18, %15 ], [ 0.000000e+00, %4 ]\l  %21 = zext i32 %12 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %2, i64 %21\l  store float %20, float addrspace(1)* %22, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %23 = icmp ult i16 %9, 2\l  br i1 %23, label %24, label %26\l|{<s0>T|<s1>F}}"];
	Node0x52aa7c0:s0 -> Node0x52ac900;
	Node0x52aa7c0:s1 -> Node0x52ac990;
	Node0x52ac900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%24:\l24:                                               \l  %25 = icmp eq i32 %12, 0\l  br i1 %25, label %39, label %43\l|{<s0>T|<s1>F}}"];
	Node0x52ac900:s0 -> Node0x52acb90;
	Node0x52ac900:s1 -> Node0x52acbe0;
	Node0x52ac990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i32 [ %28, %37 ], [ %10, %19 ]\l  %28 = lshr i32 %27, 1\l  %29 = icmp ult i32 %12, %28\l  br i1 %29, label %30, label %37\l|{<s0>T|<s1>F}}"];
	Node0x52ac990:s0 -> Node0x52acfe0;
	Node0x52ac990:s1 -> Node0x52acd50;
	Node0x52acfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%30:\l30:                                               \l  %31 = add nuw nsw i32 %28, %12\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %2, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7\l  %35 = load float, float addrspace(1)* %22, align 4, !tbaa !7\l  %36 = fadd contract float %34, %35\l  store float %36, float addrspace(1)* %22, align 4, !tbaa !7\l  br label %37\l}"];
	Node0x52acfe0 -> Node0x52acd50;
	Node0x52acd50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %38 = icmp ult i32 %27, 4\l  br i1 %38, label %24, label %26, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x52acd50:s0 -> Node0x52ac900;
	Node0x52acd50:s1 -> Node0x52ac990;
	Node0x52acb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%39:\l39:                                               \l  %40 = load float, float addrspace(1)* %2, align 4, !tbaa !7\l  %41 = zext i32 %5 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  store float %40, float addrspace(1)* %42, align 4, !tbaa !7\l  br label %43\l}"];
	Node0x52acb90 -> Node0x52acbe0;
	Node0x52acbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%43:\l43:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
