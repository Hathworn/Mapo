digraph "CFG for '_Z7cu_tanhPKfPfi' function" {
	label="CFG for '_Z7cu_tanhPKfPfi' function";

	Node0x4af3fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = mul i32 %5, %10\l  %15 = add i32 %14, %4\l  %16 = udiv i32 %13, %10\l  %17 = mul i32 %16, %10\l  %18 = icmp ugt i32 %13, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %10\l  %22 = icmp slt i32 %15, %2\l  br i1 %22, label %23, label %61\l|{<s0>T|<s1>F}}"];
	Node0x4af3fa0:s0 -> Node0x4af4d30;
	Node0x4af3fa0:s1 -> Node0x4af65e0;
	Node0x4af4d30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i32 [ %59, %55 ], [ %15, %3 ]\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %0, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !16\l  %28 = tail call float @llvm.fabs.f32(float %27)\l  %29 = fcmp olt float %28, 6.250000e-01\l  br i1 %29, label %30, label %38\l|{<s0>T|<s1>F}}"];
	Node0x4af4d30:s0 -> Node0x4af77f0;
	Node0x4af4d30:s1 -> Node0x4af7880;
	Node0x4af77f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%30:\l30:                                               \l  %31 = fmul float %27, %27\l  %32 = tail call float @llvm.fmuladd.f32(float %31, float 0xBF7758E7A0000000,\l... float 0x3F95211920000000)\l  %33 = tail call float @llvm.fmuladd.f32(float %31, float %32, float\l... 0xBFAB8389C0000000)\l  %34 = tail call float @llvm.fmuladd.f32(float %31, float %33, float\l... 0x3FC1107040000000)\l  %35 = tail call float @llvm.fmuladd.f32(float %31, float %34, float\l... 0xBFD5555320000000)\l  %36 = fmul float %28, %35\l  %37 = tail call float @llvm.fmuladd.f32(float %31, float %36, float %28)\l  br label %55\l}"];
	Node0x4af77f0 -> Node0x4af6720;
	Node0x4af7880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%38:\l38:                                               \l  %39 = fmul float %28, 2.000000e+00\l  %40 = fmul float %39, 0x3FF7154760000000\l  %41 = tail call float @llvm.rint.f32(float %40)\l  %42 = fcmp ogt float %39, 0x40562E4300000000\l  %43 = fneg float %40\l  %44 = tail call float @llvm.fma.f32(float %39, float 0x3FF7154760000000,\l... float %43)\l  %45 = tail call float @llvm.fma.f32(float %39, float 0x3E54AE0BE0000000,\l... float %44)\l  %46 = fsub float %40, %41\l  %47 = fadd float %45, %46\l  %48 = tail call float @llvm.exp2.f32(float %47)\l  %49 = fptosi float %41 to i32\l  %50 = tail call float @llvm.amdgcn.ldexp.f32(float %48, i32 %49)\l  %51 = fadd float %50, 1.000000e+00\l  %52 = select i1 %42, float 0x7FF0000000000000, float %51\l  %53 = tail call float @llvm.amdgcn.rcp.f32(float %52)\l  %54 = tail call float @llvm.fmuladd.f32(float %53, float -2.000000e+00,\l... float 1.000000e+00)\l  br label %55\l}"];
	Node0x4af7880 -> Node0x4af6720;
	Node0x4af6720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  %56 = phi float [ %37, %30 ], [ %54, %38 ]\l  %57 = tail call float @llvm.copysign.f32(float %56, float %27)\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %25\l  store float %57, float addrspace(1)* %58, align 4, !tbaa !16\l  %59 = add nsw i32 %24, %21\l  %60 = icmp slt i32 %59, %2\l  br i1 %60, label %23, label %61, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4af6720:s0 -> Node0x4af4d30;
	Node0x4af6720:s1 -> Node0x4af65e0;
	Node0x4af65e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%61:\l61:                                               \l  ret void\l}"];
}
