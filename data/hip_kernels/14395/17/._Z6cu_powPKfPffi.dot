digraph "CFG for '_Z6cu_powPKfPffi' function" {
	label="CFG for '_Z6cu_powPKfPffi' function";

	Node0x591efe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = udiv i32 %14, %11\l  %18 = mul i32 %17, %11\l  %19 = icmp ugt i32 %14, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %11\l  %23 = icmp slt i32 %16, %3\l  br i1 %23, label %24, label %243\l|{<s0>T|<s1>F}}"];
	Node0x591efe0:s0 -> Node0x591f030;
	Node0x591efe0:s1 -> Node0x5921620;
	Node0x591f030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%24:\l24:                                               \l  %25 = tail call float @llvm.fabs.f32(float %2)\l  %26 = tail call float @llvm.trunc.f32(float %25)\l  %27 = fcmp oeq float %25, %26\l  %28 = zext i1 %27 to i32\l  %29 = fmul float %26, 5.000000e-01\l  %30 = tail call float @llvm.amdgcn.fract.f32(float %29)\l  %31 = tail call i1 @llvm.amdgcn.class.f32(float %29, i32 516)\l  %32 = select i1 %31, float 0.000000e+00, float %30\l  %33 = fcmp oeq float %32, 0.000000e+00\l  %34 = and i1 %27, %33\l  %35 = zext i1 %34 to i32\l  %36 = add nuw nsw i32 %35, %28\l  %37 = icmp eq i32 %36, 1\l  %38 = icmp ne i32 %36, 0\l  %39 = fcmp oeq float %25, 0x7FF0000000000000\l  %40 = bitcast float %2 to i32\l  %41 = fcmp olt float %2, 0.000000e+00\l  %42 = fcmp oeq float %2, 0.000000e+00\l  br i1 %39, label %214, label %43\l|{<s0>T|<s1>F}}"];
	Node0x591f030:s0 -> Node0x5923390;
	Node0x591f030:s1 -> Node0x5923420;
	Node0x5923420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d8564670",label="{%43:\l43:                                               \l  %44 = phi i32 [ %212, %43 ], [ %16, %24 ]\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !16\l  %48 = tail call float @llvm.fabs.f32(float %47)\l  %49 = tail call float @llvm.amdgcn.frexp.mant.f32(float %48)\l  %50 = fcmp olt float %49, 0x3FE5555560000000\l  %51 = zext i1 %50 to i32\l  %52 = tail call float @llvm.amdgcn.ldexp.f32(float %49, i32 %51)\l  %53 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %48)\l  %54 = sub nsw i32 %53, %51\l  %55 = fadd float %52, -1.000000e+00\l  %56 = fadd float %52, 1.000000e+00\l  %57 = fadd float %56, -1.000000e+00\l  %58 = fsub float %52, %57\l  %59 = tail call float @llvm.amdgcn.rcp.f32(float %56)\l  %60 = fmul float %55, %59\l  %61 = fmul float %56, %60\l  %62 = fneg float %61\l  %63 = tail call float @llvm.fma.f32(float %60, float %56, float %62)\l  %64 = tail call float @llvm.fma.f32(float %60, float %58, float %63)\l  %65 = fadd float %61, %64\l  %66 = fsub float %65, %61\l  %67 = fsub float %64, %66\l  %68 = fsub float %55, %65\l  %69 = fsub float %55, %68\l  %70 = fsub float %69, %65\l  %71 = fsub float %70, %67\l  %72 = fadd float %68, %71\l  %73 = fmul float %59, %72\l  %74 = fadd float %60, %73\l  %75 = fsub float %74, %60\l  %76 = fsub float %73, %75\l  %77 = fmul float %74, %74\l  %78 = fneg float %77\l  %79 = tail call float @llvm.fma.f32(float %74, float %74, float %78)\l  %80 = fmul float %76, 2.000000e+00\l  %81 = tail call float @llvm.fma.f32(float %74, float %80, float %79)\l  %82 = fadd float %77, %81\l  %83 = fsub float %82, %77\l  %84 = fsub float %81, %83\l  %85 = tail call float @llvm.fmuladd.f32(float %82, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %86 = tail call float @llvm.fmuladd.f32(float %82, float %85, float\l... 0x3FD999BDE0000000)\l  %87 = sitofp i32 %54 to float\l  %88 = fmul float %87, 0x3FE62E4300000000\l  %89 = fneg float %88\l  %90 = tail call float @llvm.fma.f32(float %87, float 0x3FE62E4300000000,\l... float %89)\l  %91 = tail call float @llvm.fma.f32(float %87, float 0xBE205C6100000000,\l... float %90)\l  %92 = fadd float %88, %91\l  %93 = fsub float %92, %88\l  %94 = fsub float %91, %93\l  %95 = tail call float @llvm.amdgcn.ldexp.f32(float %74, i32 1)\l  %96 = fmul float %74, %82\l  %97 = fneg float %96\l  %98 = tail call float @llvm.fma.f32(float %82, float %74, float %97)\l  %99 = tail call float @llvm.fma.f32(float %82, float %76, float %98)\l  %100 = tail call float @llvm.fma.f32(float %84, float %74, float %99)\l  %101 = fadd float %96, %100\l  %102 = fsub float %101, %96\l  %103 = fsub float %100, %102\l  %104 = fmul float %82, %86\l  %105 = fneg float %104\l  %106 = tail call float @llvm.fma.f32(float %82, float %86, float %105)\l  %107 = tail call float @llvm.fma.f32(float %84, float %86, float %106)\l  %108 = fadd float %104, %107\l  %109 = fsub float %108, %104\l  %110 = fsub float %107, %109\l  %111 = fadd float %108, 0x3FE5555540000000\l  %112 = fadd float %111, 0xBFE5555540000000\l  %113 = fsub float %108, %112\l  %114 = fadd float %110, 0x3E2E720200000000\l  %115 = fadd float %114, %113\l  %116 = fadd float %111, %115\l  %117 = fsub float %116, %111\l  %118 = fsub float %115, %117\l  %119 = fmul float %101, %116\l  %120 = fneg float %119\l  %121 = tail call float @llvm.fma.f32(float %101, float %116, float %120)\l  %122 = tail call float @llvm.fma.f32(float %101, float %118, float %121)\l  %123 = tail call float @llvm.fma.f32(float %103, float %116, float %122)\l  %124 = tail call float @llvm.amdgcn.ldexp.f32(float %76, i32 1)\l  %125 = fadd float %119, %123\l  %126 = fsub float %125, %119\l  %127 = fsub float %123, %126\l  %128 = fadd float %95, %125\l  %129 = fsub float %128, %95\l  %130 = fsub float %125, %129\l  %131 = fadd float %124, %127\l  %132 = fadd float %131, %130\l  %133 = fadd float %128, %132\l  %134 = fsub float %133, %128\l  %135 = fsub float %132, %134\l  %136 = fadd float %92, %133\l  %137 = fsub float %136, %92\l  %138 = fsub float %136, %137\l  %139 = fsub float %92, %138\l  %140 = fsub float %133, %137\l  %141 = fadd float %140, %139\l  %142 = fadd float %94, %135\l  %143 = fsub float %142, %94\l  %144 = fsub float %142, %143\l  %145 = fsub float %94, %144\l  %146 = fsub float %135, %143\l  %147 = fadd float %146, %145\l  %148 = fadd float %142, %141\l  %149 = fadd float %136, %148\l  %150 = fsub float %149, %136\l  %151 = fsub float %148, %150\l  %152 = fadd float %147, %151\l  %153 = fadd float %149, %152\l  %154 = fsub float %153, %149\l  %155 = fsub float %152, %154\l  %156 = fmul float %153, %2\l  %157 = fneg float %156\l  %158 = tail call float @llvm.fma.f32(float %2, float %153, float %157)\l  %159 = tail call float @llvm.fma.f32(float %2, float %155, float %158)\l  %160 = fadd float %156, %159\l  %161 = fsub float %160, %156\l  %162 = fsub float %159, %161\l  %163 = tail call float @llvm.fabs.f32(float %156) #3\l  %164 = fcmp oeq float %163, 0x7FF0000000000000\l  %165 = select i1 %164, float %156, float %160\l  %166 = tail call float @llvm.fabs.f32(float %165) #3\l  %167 = fcmp oeq float %166, 0x7FF0000000000000\l  %168 = select i1 %167, float 0.000000e+00, float %162\l  %169 = fcmp oeq float %165, 0x40562E4300000000\l  %170 = select i1 %169, float 0x3EE0000000000000, float 0.000000e+00\l  %171 = fsub float %165, %170\l  %172 = fadd float %170, %168\l  %173 = fmul float %171, 0x3FF7154760000000\l  %174 = tail call float @llvm.rint.f32(float %173)\l  %175 = fcmp ogt float %171, 0x40562E4300000000\l  %176 = fcmp olt float %171, 0xC059D1DA00000000\l  %177 = fneg float %173\l  %178 = tail call float @llvm.fma.f32(float %171, float 0x3FF7154760000000,\l... float %177)\l  %179 = tail call float @llvm.fma.f32(float %171, float 0x3E54AE0BE0000000,\l... float %178)\l  %180 = fsub float %173, %174\l  %181 = fadd float %179, %180\l  %182 = tail call float @llvm.exp2.f32(float %181)\l  %183 = fptosi float %174 to i32\l  %184 = tail call float @llvm.amdgcn.ldexp.f32(float %182, i32 %183)\l  %185 = select i1 %176, float 0.000000e+00, float %184\l  %186 = select i1 %175, float 0x7FF0000000000000, float %185\l  %187 = tail call float @llvm.fma.f32(float %186, float %172, float %186)\l  %188 = tail call float @llvm.fabs.f32(float %186) #3\l  %189 = fcmp oeq float %188, 0x7FF0000000000000\l  %190 = select i1 %189, float %186, float %187\l  %191 = fcmp olt float %47, 0.000000e+00\l  %192 = and i1 %37, %191\l  %193 = select i1 %192, float -0.000000e+00, float 0.000000e+00\l  %194 = tail call float @llvm.copysign.f32(float %190, float %193)\l  %195 = fcmp uge float %47, 0.000000e+00\l  %196 = select i1 %195, i1 true, i1 %38\l  %197 = select i1 %196, float %194, float 0x7FF8000000000000\l  %198 = fcmp oeq float %48, 0x7FF0000000000000\l  %199 = fcmp oeq float %47, 0.000000e+00\l  %200 = or i1 %199, %198\l  %201 = xor i1 %41, %199\l  %202 = select i1 %201, float 0.000000e+00, float 0x7FF0000000000000\l  %203 = select i1 %37, float %47, float 0.000000e+00\l  %204 = tail call float @llvm.copysign.f32(float %202, float %203)\l  %205 = select i1 %200, float %204, float %197\l  %206 = fcmp uno float %47, %2\l  %207 = select i1 %206, float 0x7FF8000000000000, float %205\l  %208 = fcmp oeq float %47, 1.000000e+00\l  %209 = or i1 %42, %208\l  %210 = select i1 %209, float 1.000000e+00, float %207\l  %211 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  store float %210, float addrspace(1)* %211, align 4, !tbaa !16\l  %212 = add nsw i32 %44, %22\l  %213 = icmp slt i32 %212, %3\l  br i1 %213, label %43, label %243, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5923420:s0 -> Node0x5923420;
	Node0x5923420:s1 -> Node0x5921620;
	Node0x5923390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%214:\l214:                                              \l  %215 = phi i32 [ %241, %214 ], [ %16, %24 ]\l  %216 = sext i32 %215 to i64\l  %217 = getelementptr inbounds float, float addrspace(1)* %0, i64 %216\l  %218 = load float, float addrspace(1)* %217, align 4, !tbaa !16\l  %219 = tail call float @llvm.fabs.f32(float %218)\l  %220 = fcmp oeq float %219, 1.000000e+00\l  %221 = fadd float %219, -1.000000e+00\l  %222 = bitcast float %221 to i32\l  %223 = xor i32 %222, %40\l  %224 = icmp sgt i32 %223, -1\l  %225 = select i1 %224, float 0x7FF0000000000000, float 0.000000e+00\l  %226 = select i1 %220, float %219, float %225\l  %227 = fcmp oeq float %219, 0x7FF0000000000000\l  %228 = fcmp oeq float %218, 0.000000e+00\l  %229 = or i1 %228, %227\l  %230 = xor i1 %41, %228\l  %231 = select i1 %230, float 0.000000e+00, float 0x7FF0000000000000\l  %232 = select i1 %37, float %218, float 0.000000e+00\l  %233 = tail call float @llvm.copysign.f32(float %231, float %232)\l  %234 = select i1 %229, float %233, float %226\l  %235 = fcmp uno float %218, %2\l  %236 = select i1 %235, float 0x7FF8000000000000, float %234\l  %237 = fcmp oeq float %218, 1.000000e+00\l  %238 = or i1 %42, %237\l  %239 = select i1 %238, float 1.000000e+00, float %236\l  %240 = getelementptr inbounds float, float addrspace(1)* %1, i64 %216\l  store float %239, float addrspace(1)* %240, align 4, !tbaa !16\l  %241 = add nsw i32 %215, %22\l  %242 = icmp slt i32 %241, %3\l  br i1 %242, label %214, label %243, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5923390:s0 -> Node0x5923390;
	Node0x5923390:s1 -> Node0x5921620;
	Node0x5921620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%243:\l243:                                              \l  ret void\l}"];
}
