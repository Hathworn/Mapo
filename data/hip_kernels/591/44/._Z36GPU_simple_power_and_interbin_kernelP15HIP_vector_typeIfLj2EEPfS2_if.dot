digraph "CFG for '_Z36GPU_simple_power_and_interbin_kernelP15HIP_vector_typeIfLj2EEPfS2_if' function" {
	label="CFG for '_Z36GPU_simple_power_and_interbin_kernelP15HIP_vector_typeIfLj2EEPfS2_if' function";

	Node0x4780450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = ashr i32 %3, 1\l  %17 = icmp slt i32 %14, %16\l  %18 = icmp sgt i32 %14, 0\l  %19 = and i1 %17, %18\l  br i1 %19, label %20, label %39\l|{<s0>T|<s1>F}}"];
	Node0x4780450:s0 -> Node0x4782740;
	Node0x4780450:s1 -> Node0x47827d0;
	Node0x4782740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%20:\l20:                                               \l  %21 = add nsw i32 %16, 1\l  %22 = mul i32 %21, %15\l  %23 = add nsw i32 %14, %22\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %24, i32 0, i32 0, i32 0, i64 0\l  %26 = load float, float addrspace(1)* %25, align 8, !amdgpu.noclobber !5\l  %27 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %24, i32 0, i32 0, i32 0, i64 1\l  %28 = load float, float addrspace(1)* %27, align 4, !amdgpu.noclobber !5\l  %29 = add nsw i32 %23, 1\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %30, i32 0, i32 0, i32 0, i64 0\l  %32 = load float, float addrspace(1)* %31, align 8, !amdgpu.noclobber !5\l  %33 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %30, i32 0, i32 0, i32 0, i64 1\l  %34 = load float, float addrspace(1)* %33, align 4, !amdgpu.noclobber !5\l  %35 = fdiv contract float %26, %4\l  %36 = fdiv contract float %28, %4\l  %37 = fdiv contract float %32, %4\l  %38 = fdiv contract float %34, %4\l  br label %39\l}"];
	Node0x4782740 -> Node0x47827d0;
	Node0x47827d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi float [ %36, %20 ], [ 0.000000e+00, %5 ]\l  %41 = phi float [ %35, %20 ], [ 0.000000e+00, %5 ]\l  %42 = phi float [ %38, %20 ], [ 0.000000e+00, %5 ]\l  %43 = phi float [ %37, %20 ], [ 0.000000e+00, %5 ]\l  br i1 %17, label %44, label %66\l|{<s0>T|<s1>F}}"];
	Node0x47827d0:s0 -> Node0x47849f0;
	Node0x47827d0:s1 -> Node0x4784a40;
	Node0x47849f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%44:\l44:                                               \l  %45 = fmul contract float %41, %41\l  %46 = fmul contract float %40, %40\l  %47 = fadd contract float %46, %45\l  %48 = mul i32 %16, %15\l  %49 = add i32 %14, %48\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %1, i64 %50\l  store float %47, float addrspace(1)* %51, align 4, !tbaa !7\l  %52 = mul i32 %15, %3\l  %53 = shl nsw i32 %14, 1\l  %54 = add i32 %53, %52\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %2, i64 %55\l  store float %47, float addrspace(1)* %56, align 4, !tbaa !7\l  %57 = fsub contract float %41, %43\l  %58 = fmul contract float %57, %57\l  %59 = fsub contract float %40, %42\l  %60 = fmul contract float %59, %59\l  %61 = fadd contract float %60, %58\l  %62 = fmul contract float %61, 0x3FE3BD3CC0000000\l  %63 = add i32 %54, 1\l  %64 = zext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %2, i64 %64\l  store float %62, float addrspace(1)* %65, align 4, !tbaa !7\l  br label %66\l}"];
	Node0x47849f0 -> Node0x4784a40;
	Node0x4784a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  ret void\l}"];
}
