digraph "CFG for '_Z5xcorrPfS_S_iiii' function" {
	label="CFG for '_Z5xcorrPfS_S_iiii' function";

	Node0x5927800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 2, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = add i32 %16, %9\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = add i32 %23, %8\l  %25 = sub i32 %17, %5\l  %26 = add i32 %25, 1\l  %27 = sub i32 %24, %6\l  %28 = add i32 %27, 1\l  %29 = icmp sgt i32 %17, -1\l  br i1 %29, label %30, label %139\l|{<s0>T|<s1>F}}"];
	Node0x5927800:s0 -> Node0x592b370;
	Node0x5927800:s1 -> Node0x592b400;
	Node0x592b370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%30:\l30:                                               \l  %31 = add nsw i32 %5, -1\l  %32 = add i32 %31, %3\l  %33 = icmp slt i32 %17, %32\l  %34 = icmp sgt i32 %24, -1\l  %35 = select i1 %33, i1 %34, i1 false\l  br i1 %35, label %36, label %139\l|{<s0>T|<s1>F}}"];
	Node0x592b370:s0 -> Node0x5929e70;
	Node0x592b370:s1 -> Node0x592b400;
	Node0x5929e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%36:\l36:                                               \l  %37 = add nsw i32 %6, -1\l  %38 = add i32 %37, %4\l  %39 = icmp slt i32 %24, %38\l  br i1 %39, label %40, label %139\l|{<s0>T|<s1>F}}"];
	Node0x5929e70:s0 -> Node0x592bc10;
	Node0x5929e70:s1 -> Node0x592b400;
	Node0x592bc10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%40:\l40:                                               \l  %41 = icmp sgt i32 %5, 0\l  br i1 %41, label %42, label %56\l|{<s0>T|<s1>F}}"];
	Node0x592bc10:s0 -> Node0x592bdd0;
	Node0x592bc10:s1 -> Node0x592be20;
	Node0x592bdd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%42:\l42:                                               \l  %43 = icmp sgt i32 %6, 0\l  %44 = and i32 %6, 1\l  %45 = icmp eq i32 %6, 1\l  %46 = and i32 %6, -2\l  %47 = icmp eq i32 %44, 0\l  br label %48\l}"];
	Node0x592bdd0 -> Node0x592c260;
	Node0x592c260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%48:\l48:                                               \l  %49 = phi i32 [ 0, %42 ], [ %89, %87 ]\l  %50 = phi float [ 0.000000e+00, %42 ], [ %88, %87 ]\l  br i1 %43, label %51, label %87\l|{<s0>T|<s1>F}}"];
	Node0x592c260:s0 -> Node0x592d000;
	Node0x592c260:s1 -> Node0x592c350;
	Node0x592d000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%51:\l51:                                               \l  %52 = add nsw i32 %26, %49\l  %53 = icmp sgt i32 %52, -1\l  %54 = icmp slt i32 %52, %3\l  %55 = select i1 %53, i1 %54, i1 false\l  br i1 %45, label %62, label %91\l|{<s0>T|<s1>F}}"];
	Node0x592d000:s0 -> Node0x592d3a0;
	Node0x592d000:s1 -> Node0x592d3f0;
	Node0x592be20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%56:\l56:                                               \l  %57 = phi float [ 0.000000e+00, %40 ], [ %88, %87 ]\l  %58 = mul nsw i32 %24, %32\l  %59 = add nsw i32 %58, %17\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %2, i64 %60\l  store float %57, float addrspace(1)* %61, align 4, !tbaa !7\l  br label %139\l}"];
	Node0x592be20 -> Node0x592b400;
	Node0x592d3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%62:\l62:                                               \l  %63 = phi float [ undef, %51 ], [ %135, %134 ]\l  %64 = phi i32 [ 0, %51 ], [ %136, %134 ]\l  %65 = phi float [ %50, %51 ], [ %135, %134 ]\l  %66 = xor i1 %55, true\l  %67 = select i1 %47, i1 true, i1 %66\l  %68 = select i1 %47, float %63, float %65\l  br i1 %67, label %87, label %69\l|{<s0>T|<s1>F}}"];
	Node0x592d3a0:s0 -> Node0x592c350;
	Node0x592d3a0:s1 -> Node0x592b7d0;
	Node0x592b7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%69:\l69:                                               \l  %70 = add nsw i32 %28, %64\l  %71 = icmp sgt i32 %70, -1\l  %72 = icmp slt i32 %70, %4\l  %73 = select i1 %71, i1 %72, i1 false\l  br i1 %73, label %74, label %87\l|{<s0>T|<s1>F}}"];
	Node0x592b7d0:s0 -> Node0x592b820;
	Node0x592b7d0:s1 -> Node0x592c350;
	Node0x592b820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%74:\l74:                                               \l  %75 = mul nsw i32 %70, %3\l  %76 = add nsw i32 %75, %52\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %80 = mul nsw i32 %64, %5\l  %81 = add nsw i32 %80, %49\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %1, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %85 = fmul contract float %79, %84\l  %86 = fadd contract float %65, %85\l  br label %87\l}"];
	Node0x592b820 -> Node0x592c350;
	Node0x592c350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%87:\l87:                                               \l  %88 = phi float [ %50, %48 ], [ %68, %62 ], [ %86, %74 ], [ %65, %69 ]\l  %89 = add nuw nsw i32 %49, 1\l  %90 = icmp eq i32 %89, %5\l  br i1 %90, label %56, label %48, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x592c350:s0 -> Node0x592be20;
	Node0x592c350:s1 -> Node0x592c260;
	Node0x592d3f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%91:\l91:                                               \l  %92 = phi i32 [ %136, %134 ], [ 0, %51 ]\l  %93 = phi float [ %135, %134 ], [ %50, %51 ]\l  %94 = phi i32 [ %137, %134 ], [ 0, %51 ]\l  br i1 %55, label %95, label %113\l|{<s0>T|<s1>F}}"];
	Node0x592d3f0:s0 -> Node0x592fd10;
	Node0x592d3f0:s1 -> Node0x592fda0;
	Node0x592fd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%95:\l95:                                               \l  %96 = add nsw i32 %28, %92\l  %97 = icmp sgt i32 %96, -1\l  %98 = icmp slt i32 %96, %4\l  %99 = select i1 %97, i1 %98, i1 false\l  br i1 %99, label %100, label %113\l|{<s0>T|<s1>F}}"];
	Node0x592fd10:s0 -> Node0x5930140;
	Node0x592fd10:s1 -> Node0x592fda0;
	Node0x5930140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%100:\l100:                                              \l  %101 = mul nsw i32 %96, %3\l  %102 = add nsw i32 %101, %52\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %0, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %106 = mul nsw i32 %92, %5\l  %107 = add nsw i32 %106, %49\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %1, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %111 = fmul contract float %105, %110\l  %112 = fadd contract float %93, %111\l  br label %113\l}"];
	Node0x5930140 -> Node0x592fda0;
	Node0x592fda0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%113:\l113:                                              \l  %114 = phi float [ %112, %100 ], [ %93, %95 ], [ %93, %91 ]\l  %115 = or i32 %92, 1\l  br i1 %55, label %116, label %134\l|{<s0>T|<s1>F}}"];
	Node0x592fda0:s0 -> Node0x5930ab0;
	Node0x592fda0:s1 -> Node0x592de50;
	Node0x5930ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%116:\l116:                                              \l  %117 = add nsw i32 %28, %115\l  %118 = icmp sgt i32 %117, -1\l  %119 = icmp slt i32 %117, %4\l  %120 = select i1 %118, i1 %119, i1 false\l  br i1 %120, label %121, label %134\l|{<s0>T|<s1>F}}"];
	Node0x5930ab0:s0 -> Node0x5930e10;
	Node0x5930ab0:s1 -> Node0x592de50;
	Node0x5930e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%121:\l121:                                              \l  %122 = mul nsw i32 %117, %3\l  %123 = add nsw i32 %122, %52\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %0, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %127 = mul nsw i32 %115, %5\l  %128 = add nsw i32 %127, %49\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %1, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %132 = fmul contract float %126, %131\l  %133 = fadd contract float %114, %132\l  br label %134\l}"];
	Node0x5930e10 -> Node0x592de50;
	Node0x592de50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%134:\l134:                                              \l  %135 = phi float [ %133, %121 ], [ %114, %116 ], [ %114, %113 ]\l  %136 = add nuw nsw i32 %92, 2\l  %137 = add i32 %94, 2\l  %138 = icmp eq i32 %137, %46\l  br i1 %138, label %62, label %91, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x592de50:s0 -> Node0x592d3a0;
	Node0x592de50:s1 -> Node0x592d3f0;
	Node0x592b400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%139:\l139:                                              \l  ret void\l}"];
}
