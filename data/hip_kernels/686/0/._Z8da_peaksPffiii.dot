digraph "CFG for '_Z8da_peaksPffiii' function" {
	label="CFG for '_Z8da_peaksPffiii' function";

	Node0x4c32480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 2, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = add i32 %14, %7\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = add i32 %21, %6\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %24 = icmp slt i32 %23, %4\l  %25 = icmp sgt i32 %15, 1\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %202\l|{<s0>T|<s1>F}}"];
	Node0x4c32480:s0 -> Node0x4c360f0;
	Node0x4c32480:s1 -> Node0x4c36180;
	Node0x4c360f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%27:\l27:                                               \l  %28 = add nsw i32 %2, -2\l  %29 = icmp slt i32 %15, %28\l  %30 = icmp sgt i32 %22, 1\l  %31 = select i1 %29, i1 %30, i1 false\l  %32 = add nsw i32 %3, -2\l  %33 = icmp slt i32 %22, %32\l  %34 = select i1 %31, i1 %33, i1 false\l  br i1 %34, label %35, label %202\l|{<s0>T|<s1>F}}"];
	Node0x4c360f0:s0 -> Node0x4c34d30;
	Node0x4c360f0:s1 -> Node0x4c36180;
	Node0x4c34d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%35:\l35:                                               \l  %36 = mul i32 %23, %3\l  %37 = add i32 %36, -2\l  %38 = add i32 %37, %22\l  %39 = add nsw i32 %15, -2\l  %40 = mul i32 %38, %2\l  %41 = add i32 %39, %40\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %45 = add i32 %38, 1\l  %46 = mul i32 %45, %2\l  %47 = add i32 %39, %46\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %51 = add i32 %36, %22\l  %52 = mul i32 %51, %2\l  %53 = add i32 %39, %52\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %57 = add i32 %38, 3\l  %58 = mul i32 %57, %2\l  %59 = add i32 %39, %58\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %63 = add i32 %38, 4\l  %64 = mul i32 %63, %2\l  %65 = add i32 %39, %64\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %69 = add nsw i32 %15, -1\l  %70 = add i32 %69, %40\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %74 = add i32 %69, %46\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %78 = add i32 %69, %52\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %82 = add i32 %69, %58\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %86 = add i32 %69, %64\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %90 = add i32 %15, %40\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %94 = add i32 %15, %46\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %0, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %98 = add i32 %15, %52\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %0, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %102 = add i32 %15, %58\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %0, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %106 = add i32 %15, %64\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %0, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %110 = add nuw nsw i32 %15, 1\l  %111 = add i32 %110, %40\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %0, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %115 = add i32 %110, %46\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %0, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %119 = add i32 %110, %52\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %0, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %123 = add i32 %110, %58\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %0, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %127 = add i32 %110, %64\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %0, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %131 = add nuw i32 %15, 2\l  %132 = add i32 %131, %40\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %0, i64 %133\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %136 = add i32 %131, %46\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %0, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %140 = add i32 %131, %52\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %0, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %144 = add i32 %131, %58\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %0, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %148 = add i32 %131, %64\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %0, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %152 = fcmp contract uge float %101, %1\l  %153 = fcmp contract ule float %44, %101\l  %154 = fcmp contract ule float %50, %101\l  %155 = fcmp contract ule float %56, %101\l  %156 = fcmp contract ule float %62, %101\l  %157 = fcmp contract ule float %68, %101\l  %158 = fcmp contract ule float %73, %101\l  %159 = fcmp contract ule float %77, %101\l  %160 = fcmp contract ule float %81, %101\l  %161 = fcmp contract ule float %85, %101\l  %162 = fcmp contract ule float %89, %101\l  %163 = fcmp contract ule float %93, %101\l  %164 = fcmp contract ule float %97, %101\l  %165 = fcmp contract ule float %105, %101\l  %166 = fcmp contract ule float %109, %101\l  %167 = fcmp contract ule float %114, %101\l  %168 = fcmp contract ule float %118, %101\l  %169 = fcmp contract ule float %122, %101\l  %170 = fcmp contract ule float %126, %101\l  %171 = fcmp contract ule float %130, %101\l  %172 = fcmp contract ule float %135, %101\l  %173 = fcmp contract ule float %139, %101\l  %174 = fcmp contract ule float %143, %101\l  %175 = fcmp contract ule float %147, %101\l  %176 = fcmp contract ule float %151, %101\l  %177 = select i1 %176, i1 %175, i1 false\l  %178 = select i1 %177, i1 %174, i1 false\l  %179 = select i1 %178, i1 %173, i1 false\l  %180 = select i1 %179, i1 %172, i1 false\l  %181 = select i1 %180, i1 %171, i1 false\l  %182 = select i1 %181, i1 %170, i1 false\l  %183 = select i1 %182, i1 %169, i1 false\l  %184 = select i1 %183, i1 %168, i1 false\l  %185 = select i1 %184, i1 %167, i1 false\l  %186 = select i1 %185, i1 %166, i1 false\l  %187 = select i1 %186, i1 %165, i1 false\l  %188 = select i1 %187, i1 %164, i1 false\l  %189 = select i1 %188, i1 %163, i1 false\l  %190 = select i1 %189, i1 %162, i1 false\l  %191 = select i1 %190, i1 %161, i1 false\l  %192 = select i1 %191, i1 %160, i1 false\l  %193 = select i1 %192, i1 %159, i1 false\l  %194 = select i1 %193, i1 %158, i1 false\l  %195 = select i1 %194, i1 %157, i1 false\l  %196 = select i1 %195, i1 %156, i1 false\l  %197 = select i1 %196, i1 %155, i1 false\l  %198 = select i1 %197, i1 %154, i1 false\l  %199 = select i1 %198, i1 %153, i1 false\l  %200 = select i1 %199, i1 %152, i1 false\l  %201 = uitofp i1 %200 to float\l  br label %205\l}"];
	Node0x4c34d30 -> Node0x4c3d980;
	Node0x4c36180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%202:\l202:                                              \l  br i1 %24, label %203, label %213\l|{<s0>T|<s1>F}}"];
	Node0x4c36180:s0 -> Node0x4c3da80;
	Node0x4c36180:s1 -> Node0x4c3dad0;
	Node0x4c3da80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%203:\l203:                                              \l  %204 = mul i32 %23, %3\l  br label %205\l}"];
	Node0x4c3da80 -> Node0x4c3d980;
	Node0x4c3d980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e36c5570",label="{%205:\l205:                                              \l  %206 = phi i32 [ %204, %203 ], [ %36, %35 ]\l  %207 = phi float [ 0.000000e+00, %203 ], [ %201, %35 ]\l  %208 = add i32 %22, %206\l  %209 = mul i32 %208, %2\l  %210 = add i32 %209, %15\l  %211 = sext i32 %210 to i64\l  %212 = getelementptr inbounds float, float addrspace(1)* %0, i64 %211\l  store float %207, float addrspace(1)* %212, align 4, !tbaa !7\l  br label %213\l}"];
	Node0x4c3d980 -> Node0x4c3dad0;
	Node0x4c3dad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%213:\l213:                                              \l  ret void\l}"];
}
