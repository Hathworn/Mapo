digraph "CFG for '_Z5driftPfS_iii' function" {
	label="CFG for '_Z5driftPfS_iii' function";

	Node0x5f5c960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 2, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = add i32 %14, %7\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = add i32 %21, %6\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %24 = sub i32 %15, %2\l  %25 = add i32 %24, 1\l  %26 = sub i32 %22, %3\l  %27 = add i32 %26, 1\l  %28 = icmp sgt i32 %15, -1\l  br i1 %28, label %29, label %152\l|{<s0>T|<s1>F}}"];
	Node0x5f5c960:s0 -> Node0x5f60710;
	Node0x5f5c960:s1 -> Node0x5f607a0;
	Node0x5f60710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%29:\l29:                                               \l  %30 = shl nsw i32 %2, 1\l  %31 = add nsw i32 %30, -1\l  %32 = icmp slt i32 %15, %31\l  %33 = icmp sgt i32 %22, -1\l  %34 = select i1 %32, i1 %33, i1 false\l  br i1 %34, label %35, label %152\l|{<s0>T|<s1>F}}"];
	Node0x5f60710:s0 -> Node0x5f5f280;
	Node0x5f60710:s1 -> Node0x5f607a0;
	Node0x5f5f280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%35:\l35:                                               \l  %36 = shl nsw i32 %3, 1\l  %37 = add nsw i32 %36, -1\l  %38 = icmp slt i32 %22, %37\l  %39 = add nsw i32 %4, -1\l  %40 = icmp slt i32 %23, %39\l  %41 = select i1 %38, i1 %40, i1 false\l  br i1 %41, label %42, label %152\l|{<s0>T|<s1>F}}"];
	Node0x5f5f280:s0 -> Node0x5f61180;
	Node0x5f5f280:s1 -> Node0x5f607a0;
	Node0x5f61180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%42:\l42:                                               \l  %43 = icmp sgt i32 %2, 0\l  br i1 %43, label %44, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5f61180:s0 -> Node0x5f61340;
	Node0x5f61180:s1 -> Node0x5f61390;
	Node0x5f61340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%44:\l44:                                               \l  %45 = icmp sgt i32 %3, 0\l  %46 = mul i32 %23, %3\l  %47 = add nsw i32 %23, 1\l  %48 = mul i32 %47, %3\l  %49 = and i32 %3, 1\l  %50 = icmp eq i32 %3, 1\l  %51 = and i32 %3, -2\l  %52 = icmp eq i32 %49, 0\l  br label %53\l}"];
	Node0x5f61340 -> Node0x5f61980;
	Node0x5f61980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%53:\l53:                                               \l  %54 = phi i32 [ 0, %44 ], [ %98, %96 ]\l  %55 = phi float [ 0.000000e+00, %44 ], [ %97, %96 ]\l  br i1 %45, label %56, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5f61980:s0 -> Node0x5f62720;
	Node0x5f61980:s1 -> Node0x5f61a70;
	Node0x5f62720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%56:\l56:                                               \l  %57 = add nsw i32 %25, %54\l  %58 = icmp sgt i32 %57, -1\l  %59 = icmp slt i32 %57, %2\l  %60 = select i1 %58, i1 %59, i1 false\l  br i1 %50, label %69, label %100\l|{<s0>T|<s1>F}}"];
	Node0x5f62720:s0 -> Node0x5f62ac0;
	Node0x5f62720:s1 -> Node0x5f62b10;
	Node0x5f61390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%61:\l61:                                               \l  %62 = phi float [ 0.000000e+00, %42 ], [ %97, %96 ]\l  %63 = mul i32 %37, %23\l  %64 = add i32 %22, %63\l  %65 = mul i32 %64, %31\l  %66 = add i32 %65, %15\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  store float %62, float addrspace(1)* %68, align 4, !tbaa !7\l  br label %152\l}"];
	Node0x5f61390 -> Node0x5f607a0;
	Node0x5f62ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%69:\l69:                                               \l  %70 = phi float [ undef, %56 ], [ %148, %147 ]\l  %71 = phi i32 [ 0, %56 ], [ %149, %147 ]\l  %72 = phi float [ %55, %56 ], [ %148, %147 ]\l  %73 = xor i1 %60, true\l  %74 = select i1 %52, i1 true, i1 %73\l  %75 = select i1 %52, float %70, float %72\l  br i1 %74, label %96, label %76\l|{<s0>T|<s1>F}}"];
	Node0x5f62ac0:s0 -> Node0x5f61a70;
	Node0x5f62ac0:s1 -> Node0x5f63e10;
	Node0x5f63e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%76:\l76:                                               \l  %77 = add nsw i32 %27, %71\l  %78 = icmp sgt i32 %77, -1\l  %79 = icmp slt i32 %77, %3\l  %80 = select i1 %78, i1 %79, i1 false\l  br i1 %80, label %81, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5f63e10:s0 -> Node0x5f641b0;
	Node0x5f63e10:s1 -> Node0x5f61a70;
	Node0x5f641b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%81:\l81:                                               \l  %82 = add i32 %77, %46\l  %83 = mul i32 %82, %2\l  %84 = add i32 %83, %57\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %88 = add i32 %71, %48\l  %89 = mul i32 %88, %2\l  %90 = add i32 %89, %54\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %94 = fmul contract float %87, %93\l  %95 = fadd contract float %72, %94\l  br label %96\l}"];
	Node0x5f641b0 -> Node0x5f61a70;
	Node0x5f61a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%96:\l96:                                               \l  %97 = phi float [ %55, %53 ], [ %75, %69 ], [ %95, %81 ], [ %72, %76 ]\l  %98 = add nuw nsw i32 %54, 1\l  %99 = icmp eq i32 %98, %2\l  br i1 %99, label %61, label %53, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5f61a70:s0 -> Node0x5f61390;
	Node0x5f61a70:s1 -> Node0x5f61980;
	Node0x5f62b10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%100:\l100:                                              \l  %101 = phi i32 [ %149, %147 ], [ 0, %56 ]\l  %102 = phi float [ %148, %147 ], [ %55, %56 ]\l  %103 = phi i32 [ %150, %147 ], [ 0, %56 ]\l  br i1 %60, label %104, label %124\l|{<s0>T|<s1>F}}"];
	Node0x5f62b10:s0 -> Node0x5f656b0;
	Node0x5f62b10:s1 -> Node0x5f65740;
	Node0x5f656b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%104:\l104:                                              \l  %105 = add nsw i32 %27, %101\l  %106 = icmp sgt i32 %105, -1\l  %107 = icmp slt i32 %105, %3\l  %108 = select i1 %106, i1 %107, i1 false\l  br i1 %108, label %109, label %124\l|{<s0>T|<s1>F}}"];
	Node0x5f656b0:s0 -> Node0x5f65ae0;
	Node0x5f656b0:s1 -> Node0x5f65740;
	Node0x5f65ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%109:\l109:                                              \l  %110 = add i32 %105, %46\l  %111 = mul i32 %110, %2\l  %112 = add i32 %111, %57\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %0, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %116 = add i32 %101, %48\l  %117 = mul i32 %116, %2\l  %118 = add i32 %117, %54\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %0, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %122 = fmul contract float %115, %121\l  %123 = fadd contract float %102, %122\l  br label %124\l}"];
	Node0x5f65ae0 -> Node0x5f65740;
	Node0x5f65740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%124:\l124:                                              \l  %125 = phi float [ %123, %109 ], [ %102, %104 ], [ %102, %100 ]\l  %126 = or i32 %101, 1\l  br i1 %60, label %127, label %147\l|{<s0>T|<s1>F}}"];
	Node0x5f65740:s0 -> Node0x5f66570;
	Node0x5f65740:s1 -> Node0x5f638e0;
	Node0x5f66570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%127:\l127:                                              \l  %128 = add nsw i32 %27, %126\l  %129 = icmp sgt i32 %128, -1\l  %130 = icmp slt i32 %128, %3\l  %131 = select i1 %129, i1 %130, i1 false\l  br i1 %131, label %132, label %147\l|{<s0>T|<s1>F}}"];
	Node0x5f66570:s0 -> Node0x5f62ff0;
	Node0x5f66570:s1 -> Node0x5f638e0;
	Node0x5f62ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%132:\l132:                                              \l  %133 = add i32 %128, %46\l  %134 = mul i32 %133, %2\l  %135 = add i32 %134, %57\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %0, i64 %136\l  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %139 = add i32 %126, %48\l  %140 = mul i32 %139, %2\l  %141 = add i32 %140, %54\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %0, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %145 = fmul contract float %138, %144\l  %146 = fadd contract float %125, %145\l  br label %147\l}"];
	Node0x5f62ff0 -> Node0x5f638e0;
	Node0x5f638e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%147:\l147:                                              \l  %148 = phi float [ %146, %132 ], [ %125, %127 ], [ %125, %124 ]\l  %149 = add nuw nsw i32 %101, 2\l  %150 = add i32 %103, 2\l  %151 = icmp eq i32 %150, %51\l  br i1 %151, label %69, label %100, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5f638e0:s0 -> Node0x5f62ac0;
	Node0x5f638e0:s1 -> Node0x5f62b10;
	Node0x5f607a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%152:\l152:                                              \l  ret void\l}"];
}
