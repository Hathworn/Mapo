digraph "CFG for 'reduce' function" {
	label="CFG for 'reduce' function";

	Node0x60d5b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = shl i32 %5, 1\l  %15 = mul i32 %14, %10\l  %16 = add i32 %15, %4\l  %17 = shl nuw nsw i32 %10, 1\l  %18 = udiv i32 %13, %10\l  %19 = mul i32 %18, %10\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %17, %22\l  %24 = icmp ult i32 %16, %2\l  br i1 %24, label %25, label %43\l|{<s0>T|<s1>F}}"];
	Node0x60d5b00:s0 -> Node0x60d68a0;
	Node0x60d5b00:s1 -> Node0x60d8270;
	Node0x60d68a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %41, %39 ], [ %16, %3 ]\l  %27 = phi float [ %40, %39 ], [ 0.000000e+00, %3 ]\l  %28 = zext i32 %26 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %31 = fadd contract float %27, %30\l  %32 = add i32 %26, %10\l  %33 = icmp ult i32 %32, %2\l  br i1 %33, label %34, label %39\l|{<s0>T|<s1>F}}"];
	Node0x60d68a0:s0 -> Node0x60d7de0;
	Node0x60d68a0:s1 -> Node0x60d83e0;
	Node0x60d7de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%34:\l34:                                               \l  %35 = zext i32 %32 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %38 = fadd contract float %31, %37\l  br label %39\l}"];
	Node0x60d7de0 -> Node0x60d83e0;
	Node0x60d83e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi float [ %38, %34 ], [ %31, %25 ]\l  %41 = add i32 %26, %23\l  %42 = icmp ult i32 %41, %2\l  br i1 %42, label %25, label %43, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x60d83e0:s0 -> Node0x60d68a0;
	Node0x60d83e0:s1 -> Node0x60d8270;
	Node0x60d8270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%43:\l43:                                               \l  %44 = phi float [ 0.000000e+00, %3 ], [ %40, %39 ]\l  %45 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %4\l  store float %44, float addrspace(3)* %45, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %46 = icmp ugt i16 %9, 511\l  br i1 %46, label %47, label %56\l|{<s0>T|<s1>F}}"];
	Node0x60d8270:s0 -> Node0x60dae80;
	Node0x60d8270:s1 -> Node0x60daf10;
	Node0x60dae80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%47:\l47:                                               \l  %48 = icmp ult i32 %4, 256\l  br i1 %48, label %49, label %54\l|{<s0>T|<s1>F}}"];
	Node0x60dae80:s0 -> Node0x60db110;
	Node0x60dae80:s1 -> Node0x60db160;
	Node0x60db110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%49:\l49:                                               \l  %50 = add nuw nsw i32 %4, 256\l  %51 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %50\l  %52 = load float, float addrspace(3)* %51, align 4, !tbaa !16\l  %53 = fadd contract float %44, %52\l  store float %53, float addrspace(3)* %45, align 4, !tbaa !16\l  br label %54\l}"];
	Node0x60db110 -> Node0x60db160;
	Node0x60db160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%54:\l54:                                               \l  %55 = phi float [ %53, %49 ], [ %44, %47 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %56\l}"];
	Node0x60db160 -> Node0x60daf10;
	Node0x60daf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%56:\l56:                                               \l  %57 = phi float [ %55, %54 ], [ %44, %43 ]\l  %58 = icmp ugt i16 %9, 255\l  br i1 %58, label %59, label %68\l|{<s0>T|<s1>F}}"];
	Node0x60daf10:s0 -> Node0x60db9f0;
	Node0x60daf10:s1 -> Node0x60dba40;
	Node0x60db9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%59:\l59:                                               \l  %60 = icmp ult i32 %4, 128\l  br i1 %60, label %61, label %66\l|{<s0>T|<s1>F}}"];
	Node0x60db9f0:s0 -> Node0x60dbbd0;
	Node0x60db9f0:s1 -> Node0x60dbc20;
	Node0x60dbbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%61:\l61:                                               \l  %62 = add nuw nsw i32 %4, 128\l  %63 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %62\l  %64 = load float, float addrspace(3)* %63, align 4, !tbaa !16\l  %65 = fadd contract float %57, %64\l  store float %65, float addrspace(3)* %45, align 4, !tbaa !16\l  br label %66\l}"];
	Node0x60dbbd0 -> Node0x60dbc20;
	Node0x60dbc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%66:\l66:                                               \l  %67 = phi float [ %65, %61 ], [ %57, %59 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %68\l}"];
	Node0x60dbc20 -> Node0x60dba40;
	Node0x60dba40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%68:\l68:                                               \l  %69 = phi float [ %67, %66 ], [ %57, %56 ]\l  %70 = icmp ugt i16 %9, 127\l  br i1 %70, label %71, label %80\l|{<s0>T|<s1>F}}"];
	Node0x60dba40:s0 -> Node0x60dc6e0;
	Node0x60dba40:s1 -> Node0x60dc730;
	Node0x60dc6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%71:\l71:                                               \l  %72 = icmp ult i32 %4, 64\l  br i1 %72, label %73, label %78\l|{<s0>T|<s1>F}}"];
	Node0x60dc6e0:s0 -> Node0x60dc8c0;
	Node0x60dc6e0:s1 -> Node0x60dc910;
	Node0x60dc8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%73:\l73:                                               \l  %74 = add nuw nsw i32 %4, 64\l  %75 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %74\l  %76 = load float, float addrspace(3)* %75, align 4, !tbaa !16\l  %77 = fadd contract float %69, %76\l  store float %77, float addrspace(3)* %45, align 4, !tbaa !16\l  br label %78\l}"];
	Node0x60dc8c0 -> Node0x60dc910;
	Node0x60dc910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%78:\l78:                                               \l  %79 = phi float [ %77, %73 ], [ %69, %71 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %80\l}"];
	Node0x60dc910 -> Node0x60dc730;
	Node0x60dc730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%80:\l80:                                               \l  %81 = phi float [ %79, %78 ], [ %69, %68 ]\l  %82 = icmp ult i32 %4, 32\l  br i1 %82, label %83, label %142\l|{<s0>T|<s1>F}}"];
	Node0x60dc730:s0 -> Node0x60dd160;
	Node0x60dc730:s1 -> Node0x60dd1b0;
	Node0x60dd160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%83:\l83:                                               \l  %84 = icmp ugt i16 %9, 63\l  br i1 %84, label %85, label %92\l|{<s0>T|<s1>F}}"];
	Node0x60dd160:s0 -> Node0x60dd370;
	Node0x60dd160:s1 -> Node0x60dd3c0;
	Node0x60dd370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%85:\l85:                                               \l  %86 = add nuw nsw i32 %4, 32\l  %87 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %86\l  %88 = addrspacecast float addrspace(3)* %87 to float*\l  %89 = load volatile float, float* %88, align 4, !tbaa !16\l  %90 = fadd contract float %81, %89\l  %91 = addrspacecast float addrspace(3)* %45 to float*\l  store volatile float %90, float* %91, align 4, !tbaa !16\l  br label %92\l}"];
	Node0x60dd370 -> Node0x60dd3c0;
	Node0x60dd3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%92:\l92:                                               \l  %93 = phi float [ %90, %85 ], [ %81, %83 ]\l  %94 = icmp ugt i16 %9, 31\l  br i1 %94, label %95, label %102\l|{<s0>T|<s1>F}}"];
	Node0x60dd3c0:s0 -> Node0x60dda60;
	Node0x60dd3c0:s1 -> Node0x60ddab0;
	Node0x60dda60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%95:\l95:                                               \l  %96 = add nuw nsw i32 %4, 16\l  %97 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %96\l  %98 = addrspacecast float addrspace(3)* %97 to float*\l  %99 = load volatile float, float* %98, align 4, !tbaa !16\l  %100 = fadd contract float %93, %99\l  %101 = addrspacecast float addrspace(3)* %45 to float*\l  store volatile float %100, float* %101, align 4, !tbaa !16\l  br label %102\l}"];
	Node0x60dda60 -> Node0x60ddab0;
	Node0x60ddab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%102:\l102:                                              \l  %103 = phi float [ %100, %95 ], [ %93, %92 ]\l  %104 = icmp ugt i16 %9, 15\l  br i1 %104, label %105, label %112\l|{<s0>T|<s1>F}}"];
	Node0x60ddab0:s0 -> Node0x60de180;
	Node0x60ddab0:s1 -> Node0x60de1d0;
	Node0x60de180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%105:\l105:                                              \l  %106 = add nuw nsw i32 %4, 8\l  %107 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %106\l  %108 = addrspacecast float addrspace(3)* %107 to float*\l  %109 = load volatile float, float* %108, align 4, !tbaa !16\l  %110 = fadd contract float %103, %109\l  %111 = addrspacecast float addrspace(3)* %45 to float*\l  store volatile float %110, float* %111, align 4, !tbaa !16\l  br label %112\l}"];
	Node0x60de180 -> Node0x60de1d0;
	Node0x60de1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%112:\l112:                                              \l  %113 = phi float [ %110, %105 ], [ %103, %102 ]\l  %114 = icmp ugt i16 %9, 7\l  br i1 %114, label %115, label %122\l|{<s0>T|<s1>F}}"];
	Node0x60de1d0:s0 -> Node0x60de8a0;
	Node0x60de1d0:s1 -> Node0x60de8f0;
	Node0x60de8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%115:\l115:                                              \l  %116 = add nuw nsw i32 %4, 4\l  %117 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %116\l  %118 = addrspacecast float addrspace(3)* %117 to float*\l  %119 = load volatile float, float* %118, align 4, !tbaa !16\l  %120 = fadd contract float %113, %119\l  %121 = addrspacecast float addrspace(3)* %45 to float*\l  store volatile float %120, float* %121, align 4, !tbaa !16\l  br label %122\l}"];
	Node0x60de8a0 -> Node0x60de8f0;
	Node0x60de8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%122:\l122:                                              \l  %123 = phi float [ %120, %115 ], [ %113, %112 ]\l  %124 = icmp ugt i16 %9, 3\l  br i1 %124, label %125, label %132\l|{<s0>T|<s1>F}}"];
	Node0x60de8f0:s0 -> Node0x60defc0;
	Node0x60de8f0:s1 -> Node0x60df010;
	Node0x60defc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%125:\l125:                                              \l  %126 = add nuw nsw i32 %4, 2\l  %127 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %126\l  %128 = addrspacecast float addrspace(3)* %127 to float*\l  %129 = load volatile float, float* %128, align 4, !tbaa !16\l  %130 = fadd contract float %123, %129\l  %131 = addrspacecast float addrspace(3)* %45 to float*\l  store volatile float %130, float* %131, align 4, !tbaa !16\l  br label %132\l}"];
	Node0x60defc0 -> Node0x60df010;
	Node0x60df010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%132:\l132:                                              \l  %133 = phi float [ %130, %125 ], [ %123, %122 ]\l  %134 = icmp ugt i16 %9, 1\l  br i1 %134, label %135, label %142\l|{<s0>T|<s1>F}}"];
	Node0x60df010:s0 -> Node0x60dc300;
	Node0x60df010:s1 -> Node0x60dd1b0;
	Node0x60dc300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%135:\l135:                                              \l  %136 = add nuw nsw i32 %4, 1\l  %137 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %136\l  %138 = addrspacecast float addrspace(3)* %137 to float*\l  %139 = load volatile float, float* %138, align 4, !tbaa !16\l  %140 = fadd contract float %133, %139\l  %141 = addrspacecast float addrspace(3)* %45 to float*\l  store volatile float %140, float* %141, align 4, !tbaa !16\l  br label %142\l}"];
	Node0x60dc300 -> Node0x60dd1b0;
	Node0x60dd1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%142:\l142:                                              \l  %143 = icmp eq i32 %4, 0\l  br i1 %143, label %144, label %148\l|{<s0>T|<s1>F}}"];
	Node0x60dd1b0:s0 -> Node0x60e00e0;
	Node0x60dd1b0:s1 -> Node0x60e0130;
	Node0x60e00e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%144:\l144:                                              \l  %145 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @sdata, i32 0, i32 0), align 4, !tbaa !16\l  %146 = zext i32 %5 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %1, i64 %146\l  store float %145, float addrspace(1)* %147, align 4, !tbaa !16\l  br label %148\l}"];
	Node0x60e00e0 -> Node0x60e0130;
	Node0x60e0130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%148:\l148:                                              \l  ret void\l}"];
}
