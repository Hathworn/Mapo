digraph "CFG for '_Z12transform_fcPfPKfii' function" {
	label="CFG for '_Z12transform_fcPfPKfii' function";

	Node0x5837210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = mul i32 %2, %2\l  %7 = icmp eq i32 %2, 0\l  br i1 %7, label %33, label %8\l|{<s0>T|<s1>F}}"];
	Node0x5837210:s0 -> Node0x58386f0;
	Node0x5837210:s1 -> Node0x5838780;
	Node0x5838780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%8:\l8:                                                \l  %9 = mul nsw i32 %6, %5\l  %10 = tail call i32 @llvm.umax.i32(i32 %6, i32 1)\l  %11 = add i32 %10, -1\l  %12 = and i32 %10, 7\l  %13 = icmp ult i32 %11, 7\l  br i1 %13, label %16, label %14\l|{<s0>T|<s1>F}}"];
	Node0x5838780:s0 -> Node0x5838da0;
	Node0x5838780:s1 -> Node0x5838e30;
	Node0x5838e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%14:\l14:                                               \l  %15 = and i32 %10, -8\l  br label %35\l}"];
	Node0x5838e30 -> Node0x5839030;
	Node0x5838da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%16:\l16:                                               \l  %17 = phi i32 [ 0, %8 ], [ %109, %35 ]\l  %18 = icmp eq i32 %12, 0\l  br i1 %18, label %33, label %19\l|{<s0>T|<s1>F}}"];
	Node0x5838da0:s0 -> Node0x58386f0;
	Node0x5838da0:s1 -> Node0x58392f0;
	Node0x58392f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = phi i32 [ %30, %19 ], [ %17, %16 ]\l  %21 = phi i32 [ %31, %19 ], [ 0, %16 ]\l  %22 = mul nsw i32 %20, %3\l  %23 = add nsw i32 %22, %5\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %1, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !5\l  %27 = add nuw nsw i32 %20, %9\l  %28 = zext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  store float %26, float addrspace(1)* %29, align 4, !tbaa !5\l  %30 = add nuw nsw i32 %20, 1\l  %31 = add i32 %21, 1\l  %32 = icmp eq i32 %31, %12\l  br i1 %32, label %33, label %19, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x58392f0:s0 -> Node0x58386f0;
	Node0x58392f0:s1 -> Node0x58392f0;
	Node0x58386f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%33:\l33:                                               \l  %34 = icmp eq i32 %5, 0\l  br i1 %34, label %112, label %116\l|{<s0>T|<s1>F}}"];
	Node0x58386f0:s0 -> Node0x583a780;
	Node0x58386f0:s1 -> Node0x583a7d0;
	Node0x5839030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%35:\l35:                                               \l  %36 = phi i32 [ 0, %14 ], [ %109, %35 ]\l  %37 = phi i32 [ 0, %14 ], [ %110, %35 ]\l  %38 = mul nsw i32 %36, %3\l  %39 = add nsw i32 %38, %5\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !5\l  %43 = add nuw nsw i32 %36, %9\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  store float %42, float addrspace(1)* %45, align 4, !tbaa !5\l  %46 = or i32 %36, 1\l  %47 = mul nsw i32 %46, %3\l  %48 = add nsw i32 %47, %5\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !5\l  %52 = add nuw nsw i32 %46, %9\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  store float %51, float addrspace(1)* %54, align 4, !tbaa !5\l  %55 = or i32 %36, 2\l  %56 = mul nsw i32 %55, %3\l  %57 = add nsw i32 %56, %5\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %1, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !5\l  %61 = add nuw nsw i32 %55, %9\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  store float %60, float addrspace(1)* %63, align 4, !tbaa !5\l  %64 = or i32 %36, 3\l  %65 = mul nsw i32 %64, %3\l  %66 = add nsw i32 %65, %5\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !5\l  %70 = add nuw nsw i32 %64, %9\l  %71 = zext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  store float %69, float addrspace(1)* %72, align 4, !tbaa !5\l  %73 = or i32 %36, 4\l  %74 = mul nsw i32 %73, %3\l  %75 = add nsw i32 %74, %5\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %1, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !5\l  %79 = add nuw nsw i32 %73, %9\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  store float %78, float addrspace(1)* %81, align 4, !tbaa !5\l  %82 = or i32 %36, 5\l  %83 = mul nsw i32 %82, %3\l  %84 = add nsw i32 %83, %5\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %1, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !5\l  %88 = add nuw nsw i32 %82, %9\l  %89 = zext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %0, i64 %89\l  store float %87, float addrspace(1)* %90, align 4, !tbaa !5\l  %91 = or i32 %36, 6\l  %92 = mul nsw i32 %91, %3\l  %93 = add nsw i32 %92, %5\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !5\l  %97 = add nuw nsw i32 %91, %9\l  %98 = zext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  store float %96, float addrspace(1)* %99, align 4, !tbaa !5\l  %100 = or i32 %36, 7\l  %101 = mul nsw i32 %100, %3\l  %102 = add nsw i32 %101, %5\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %1, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !5\l  %106 = add nuw nsw i32 %100, %9\l  %107 = zext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %0, i64 %107\l  store float %105, float addrspace(1)* %108, align 4, !tbaa !5\l  %109 = add nuw nsw i32 %36, 8\l  %110 = add i32 %37, 8\l  %111 = icmp eq i32 %110, %15\l  br i1 %111, label %16, label %35, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5839030:s0 -> Node0x5838da0;
	Node0x5839030:s1 -> Node0x5839030;
	Node0x583a780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%112:\l112:                                              \l  %113 = mul nsw i32 %6, %3\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  store float 1.000000e+00, float addrspace(1)* %115, align 4, !tbaa !5\l  br label %116\l}"];
	Node0x583a780 -> Node0x583a7d0;
	Node0x583a7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%116:\l116:                                              \l  ret void\l}"];
}
