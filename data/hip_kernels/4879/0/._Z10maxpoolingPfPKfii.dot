digraph "CFG for '_Z10maxpoolingPfPKfii' function" {
	label="CFG for '_Z10maxpoolingPfPKfii' function";

	Node0x63a7360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = sdiv i32 %2, 2\l  %15 = freeze i32 %13\l  %16 = freeze i32 %14\l  %17 = sdiv i32 %15, %16\l  %18 = mul i32 %17, %16\l  %19 = sub i32 %15, %18\l  %20 = shl nsw i32 %19, 1\l  %21 = shl i32 %2, 1\l  %22 = mul i32 %21, %17\l  %23 = add nsw i32 %22, %20\l  %24 = icmp sgt i32 %3, 0\l  br i1 %24, label %25, label %69\l|{<s0>T|<s1>F}}"];
	Node0x63a7360:s0 -> Node0x63a98a0;
	Node0x63a7360:s1 -> Node0x63a9930;
	Node0x63a98a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%25:\l25:                                               \l  %26 = mul nsw i32 %23, %3\l  %27 = or i32 %23, 1\l  %28 = mul nsw i32 %27, %3\l  %29 = add nsw i32 %23, %2\l  %30 = mul nsw i32 %29, %3\l  %31 = add nsw i32 %29, 1\l  %32 = mul nsw i32 %31, %3\l  %33 = mul nsw i32 %13, %3\l  %34 = and i32 %3, 1\l  %35 = icmp eq i32 %3, 1\l  br i1 %35, label %38, label %36\l|{<s0>T|<s1>F}}"];
	Node0x63a98a0:s0 -> Node0x63a93d0;
	Node0x63a98a0:s1 -> Node0x63aa190;
	Node0x63aa190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%36:\l36:                                               \l  %37 = and i32 %3, -2\l  br label %70\l}"];
	Node0x63aa190 -> Node0x63aa360;
	Node0x63a93d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%38:\l38:                                               \l  %39 = phi i32 [ 0, %25 ], [ %128, %70 ]\l  %40 = icmp eq i32 %34, 0\l  br i1 %40, label %69, label %41\l|{<s0>T|<s1>F}}"];
	Node0x63a93d0:s0 -> Node0x63a9930;
	Node0x63a93d0:s1 -> Node0x63aa590;
	Node0x63aa590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%41:\l41:                                               \l  %42 = add nsw i32 %39, %26\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7\l  %46 = fcmp contract ogt float %45, 0.000000e+00\l  %47 = select i1 %46, float %45, float 0.000000e+00\l  %48 = add nsw i32 %39, %28\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7\l  %52 = fcmp contract olt float %47, %51\l  %53 = select i1 %52, float %51, float %47\l  %54 = add nsw i32 %39, %30\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7\l  %58 = fcmp contract olt float %53, %57\l  %59 = select i1 %58, float %57, float %53\l  %60 = add nsw i32 %39, %32\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7\l  %64 = fcmp contract olt float %59, %63\l  %65 = select i1 %64, float %63, float %59\l  %66 = add nsw i32 %39, %33\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  store float %65, float addrspace(1)* %68, align 4, !tbaa !7\l  br label %69\l}"];
	Node0x63aa590 -> Node0x63a9930;
	Node0x63a9930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%69:\l69:                                               \l  ret void\l}"];
	Node0x63aa360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = phi i32 [ 0, %36 ], [ %128, %70 ]\l  %72 = phi i32 [ 0, %36 ], [ %129, %70 ]\l  %73 = add nsw i32 %71, %26\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7\l  %77 = fcmp contract ogt float %76, 0.000000e+00\l  %78 = select i1 %77, float %76, float 0.000000e+00\l  %79 = add nsw i32 %71, %28\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  %83 = fcmp contract olt float %78, %82\l  %84 = select i1 %83, float %82, float %78\l  %85 = add nsw i32 %71, %30\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7\l  %89 = fcmp contract olt float %84, %88\l  %90 = select i1 %89, float %88, float %84\l  %91 = add nsw i32 %71, %32\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %1, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7\l  %95 = fcmp contract olt float %90, %94\l  %96 = select i1 %95, float %94, float %90\l  %97 = add nsw i32 %71, %33\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  store float %96, float addrspace(1)* %99, align 4, !tbaa !7\l  %100 = or i32 %71, 1\l  %101 = add nsw i32 %100, %26\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %1, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !7\l  %105 = fcmp contract ogt float %104, 0.000000e+00\l  %106 = select i1 %105, float %104, float 0.000000e+00\l  %107 = add nsw i32 %100, %28\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %1, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !7\l  %111 = fcmp contract olt float %106, %110\l  %112 = select i1 %111, float %110, float %106\l  %113 = add nsw i32 %100, %30\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %1, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7\l  %117 = fcmp contract olt float %112, %116\l  %118 = select i1 %117, float %116, float %112\l  %119 = add nsw i32 %100, %32\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %1, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7\l  %123 = fcmp contract olt float %118, %122\l  %124 = select i1 %123, float %122, float %118\l  %125 = add nsw i32 %100, %33\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %0, i64 %126\l  store float %124, float addrspace(1)* %127, align 4, !tbaa !7\l  %128 = add nuw nsw i32 %71, 2\l  %129 = add i32 %72, 2\l  %130 = icmp eq i32 %129, %37\l  br i1 %130, label %38, label %70, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x63aa360:s0 -> Node0x63a93d0;
	Node0x63aa360:s1 -> Node0x63aa360;
}
