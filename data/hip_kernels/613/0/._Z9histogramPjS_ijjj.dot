digraph "CFG for '_Z9histogramPjS_ijjj' function" {
	label="CFG for '_Z9histogramPjS_ijjj' function";

	Node0x5d97340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = icmp ult i32 %7, %3\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  br i1 %8, label %10, label %15\l|{<s0>T|<s1>F}}"];
	Node0x5d97340:s0 -> Node0x5d983a0;
	Node0x5d97340:s1 -> Node0x5d98430;
	Node0x5d983a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%10:\l10:                                               \l  %11 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  br label %27\l}"];
	Node0x5d983a0 -> Node0x5d99050;
	Node0x5d98430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%15:\l15:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 4, !tbaa !7\l  %24 = mul i32 %16, %20\l  %25 = add i32 %24, %7\l  %26 = icmp slt i32 %25, %2\l  br i1 %26, label %32, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5d98430:s0 -> Node0x5d9a990;
	Node0x5d98430:s1 -> Node0x5d9aa20;
	Node0x5d99050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %7, %10 ], [ %30, %27 ]\l  %29 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @s_local_hist, i32 0, i32 %28\l  store i32 0, i32 addrspace(3)* %29, align 4, !tbaa !16\l  %30 = add i32 %28, %14\l  %31 = icmp ult i32 %30, %3\l  br i1 %31, label %27, label %15, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5d99050:s0 -> Node0x5d99050;
	Node0x5d99050:s1 -> Node0x5d98430;
	Node0x5d9a990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%32:\l32:                                               \l  %33 = sext i32 %25 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %36 = lshr i32 %35, %5\l  %37 = and i32 %36, %4\l  %38 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @s_local_hist, i32 0, i32 %37\l  %39 = atomicrmw add i32 addrspace(3)* %38, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  br label %40\l}"];
	Node0x5d9a990 -> Node0x5d9aa20;
	Node0x5d9aa20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%40:\l40:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %8, label %41, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5d9aa20:s0 -> Node0x5d9bf20;
	Node0x5d9aa20:s1 -> Node0x5d9bf70;
	Node0x5d9bf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%41:\l41:                                               \l  %42 = udiv i32 %23, %20\l  %43 = mul i32 %42, %20\l  %44 = icmp ugt i32 %23, %43\l  %45 = zext i1 %44 to i32\l  %46 = add i32 %42, %45\l  br label %48\l}"];
	Node0x5d9bf20 -> Node0x5d9c360;
	Node0x5d9bf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%47:\l47:                                               \l  ret void\l}"];
	Node0x5d9c360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i32 [ %7, %41 ], [ %56, %48 ]\l  %50 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @s_local_hist, i32 0, i32 %49\l  %51 = load i32, i32 addrspace(3)* %50, align 4, !tbaa !16\l  %52 = mul i32 %46, %49\l  %53 = add i32 %52, %16\l  %54 = zext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %54\l  store i32 %51, i32 addrspace(1)* %55, align 4, !tbaa !16\l  %56 = add i32 %49, %20\l  %57 = icmp ult i32 %56, %3\l  br i1 %57, label %48, label %47, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5d9c360:s0 -> Node0x5d9c360;
	Node0x5d9c360:s1 -> Node0x5d9bf70;
}
