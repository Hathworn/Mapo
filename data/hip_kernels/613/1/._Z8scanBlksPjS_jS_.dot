digraph "CFG for '_Z8scanBlksPjS_jS_' function" {
	label="CFG for '_Z8scanBlksPjS_jS_' function";

	Node0x64c5b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 1\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = add i32 %14, %11\l  %16 = icmp ult i32 %14, %2\l  br i1 %16, label %17, label %22\l|{<s0>T|<s1>F}}"];
	Node0x64c5b30:s0 -> Node0x64c6730;
	Node0x64c5b30:s1 -> Node0x64c7ca0;
	Node0x64c6730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%17:\l17:                                               \l  %18 = sext i32 %14 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %21 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @blkData,\l... i32 0, i32 %13\l  store i32 %20, i32 addrspace(3)* %21, align 4, !tbaa !7\l  br label %22\l}"];
	Node0x64c6730 -> Node0x64c7ca0;
	Node0x64c7ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%22:\l22:                                               \l  %23 = icmp ult i32 %15, %2\l  br i1 %23, label %24, label %30\l|{<s0>T|<s1>F}}"];
	Node0x64c7ca0:s0 -> Node0x64c8f50;
	Node0x64c7ca0:s1 -> Node0x64c8fa0;
	Node0x64c8f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%24:\l24:                                               \l  %25 = sext i32 %15 to i64\l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %25\l  %27 = load i32, i32 addrspace(1)* %26, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %28 = add nuw nsw i32 %13, %11\l  %29 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @blkData,\l... i32 0, i32 %28\l  store i32 %27, i32 addrspace(3)* %29, align 4, !tbaa !7\l  br label %30\l}"];
	Node0x64c8f50 -> Node0x64c8fa0;
	Node0x64c8fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%30:\l30:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %31 = shl nuw nsw i32 %11, 1\l  %32 = shl nuw nsw i32 %13, 1\l  %33 = add nuw nsw i32 %32, 2\l  br label %39\l}"];
	Node0x64c8fa0 -> Node0x64c7c20;
	Node0x64c9b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%34:\l34:                                               \l  %35 = icmp ult i16 %10, 2\l  br i1 %35, label %54, label %36\l|{<s0>T|<s1>F}}"];
	Node0x64c9b60:s0 -> Node0x64c9c80;
	Node0x64c9b60:s1 -> Node0x64c9cd0;
	Node0x64c9cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%36:\l36:                                               \l  %37 = shl nuw nsw i32 %13, 1\l  %38 = add nuw nsw i32 %37, 2\l  br label %55\l}"];
	Node0x64c9cd0 -> Node0x64c9f30;
	Node0x64c7c20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i32 [ 1, %30 ], [ %52, %51 ]\l  %41 = mul i32 %40, %33\l  %42 = add i32 %41, -1\l  %43 = icmp ult i32 %42, %31\l  br i1 %43, label %44, label %51\l|{<s0>T|<s1>F}}"];
	Node0x64c7c20:s0 -> Node0x64ca340;
	Node0x64c7c20:s1 -> Node0x64ca020;
	Node0x64ca340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%44:\l44:                                               \l  %45 = sub nsw i32 %42, %40\l  %46 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @blkData,\l... i32 0, i32 %45\l  %47 = load i32, i32 addrspace(3)* %46, align 4, !tbaa !7\l  %48 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @blkData,\l... i32 0, i32 %42\l  %49 = load i32, i32 addrspace(3)* %48, align 4, !tbaa !7\l  %50 = add nsw i32 %49, %47\l  store i32 %50, i32 addrspace(3)* %48, align 4, !tbaa !7\l  br label %51\l}"];
	Node0x64ca340 -> Node0x64ca020;
	Node0x64ca020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %52 = shl nsw i32 %40, 1\l  %53 = icmp ult i32 %52, %31\l  br i1 %53, label %39, label %34, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x64ca020:s0 -> Node0x64c7c20;
	Node0x64ca020:s1 -> Node0x64c9b60;
	Node0x64c9c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%54:\l54:                                               \l  br i1 %16, label %70, label %75\l|{<s0>T|<s1>F}}"];
	Node0x64c9c80:s0 -> Node0x64cad30;
	Node0x64c9c80:s1 -> Node0x64cad80;
	Node0x64c9f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%55:\l55:                                               \l  %56 = phi i32 [ %11, %36 ], [ %57, %68 ]\l  %57 = lshr i32 %56, 1\l  %58 = mul nuw nsw i32 %57, %38\l  %59 = add nsw i32 %58, -1\l  %60 = add nsw i32 %59, %57\l  %61 = icmp ult i32 %60, %31\l  br i1 %61, label %62, label %68\l|{<s0>T|<s1>F}}"];
	Node0x64c9f30:s0 -> Node0x64cb2d0;
	Node0x64c9f30:s1 -> Node0x64caec0;
	Node0x64cb2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%62:\l62:                                               \l  %63 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @blkData,\l... i32 0, i32 %59\l  %64 = load i32, i32 addrspace(3)* %63, align 4, !tbaa !7\l  %65 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @blkData,\l... i32 0, i32 %60\l  %66 = load i32, i32 addrspace(3)* %65, align 4, !tbaa !7\l  %67 = add nsw i32 %66, %64\l  store i32 %67, i32 addrspace(3)* %65, align 4, !tbaa !7\l  br label %68\l}"];
	Node0x64cb2d0 -> Node0x64caec0;
	Node0x64caec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%68:\l68:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %69 = icmp ult i32 %56, 4\l  br i1 %69, label %54, label %55, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x64caec0:s0 -> Node0x64c9c80;
	Node0x64caec0:s1 -> Node0x64c9f30;
	Node0x64cad30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%70:\l70:                                               \l  %71 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @blkData,\l... i32 0, i32 %13\l  %72 = load i32, i32 addrspace(3)* %71, align 4, !tbaa !7\l  %73 = sext i32 %14 to i64\l  %74 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %73\l  store i32 %72, i32 addrspace(1)* %74, align 4, !tbaa !7\l  br label %75\l}"];
	Node0x64cad30 -> Node0x64cad80;
	Node0x64cad80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%75:\l75:                                               \l  br i1 %23, label %76, label %82\l|{<s0>T|<s1>F}}"];
	Node0x64cad80:s0 -> Node0x64cc070;
	Node0x64cad80:s1 -> Node0x64cc0c0;
	Node0x64cc070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%76:\l76:                                               \l  %77 = add nuw nsw i32 %13, %11\l  %78 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @blkData,\l... i32 0, i32 %77\l  %79 = load i32, i32 addrspace(3)* %78, align 4, !tbaa !7\l  %80 = sext i32 %15 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %80\l  store i32 %79, i32 addrspace(1)* %81, align 4, !tbaa !7\l  br label %82\l}"];
	Node0x64cc070 -> Node0x64cc0c0;
	Node0x64cc0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%82:\l82:                                               \l  %83 = icmp ne i32 addrspace(1)* %3, addrspacecast (i32* null to i32\l... addrspace(1)*)\l  %84 = icmp eq i32 %13, 0\l  %85 = select i1 %83, i1 %84, i1 false\l  br i1 %85, label %86, label %92\l|{<s0>T|<s1>F}}"];
	Node0x64cc0c0:s0 -> Node0x64ccd80;
	Node0x64cc0c0:s1 -> Node0x64ccdd0;
	Node0x64ccd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%86:\l86:                                               \l  %87 = add nsw i32 %31, -1\l  %88 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @blkData,\l... i32 0, i32 %87\l  %89 = load i32, i32 addrspace(3)* %88, align 4, !tbaa !7\l  %90 = zext i32 %5 to i64\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %90\l  store i32 %89, i32 addrspace(1)* %91, align 4, !tbaa !7\l  br label %92\l}"];
	Node0x64ccd80 -> Node0x64ccdd0;
	Node0x64ccdd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%92:\l92:                                               \l  ret void\l}"];
}
