digraph "CFG for '_Z19saxpy_float4s_shmemPfS_fPl' function" {
	label="CFG for '_Z19saxpy_float4s_shmemPfS_fPl' function";

	Node0x6053bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = shl i32 %6, 7\l  %8 = add i32 %7, %5\l  %9 = bitcast float addrspace(1)* %1 to %struct.HIP_vector_type addrspace(1)*\l  %10 = bitcast float addrspace(1)* %0 to %struct.HIP_vector_type addrspace(1)*\l  %11 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ19saxpy_float4s_shmemPfS_fPlE8sdata_x0, i32 0, i32 %5\l  %12 = addrspacecast float addrspace(3)* %11 to float*\l  %13 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ19saxpy_float4s_shmemPfS_fPlE8sdata_x1, i32 0, i32 %5\l  %14 = addrspacecast float addrspace(3)* %13 to float*\l  %15 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ19saxpy_float4s_shmemPfS_fPlE8sdata_x2, i32 0, i32 %5\l  %16 = addrspacecast float addrspace(3)* %15 to float*\l  %17 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ19saxpy_float4s_shmemPfS_fPlE8sdata_x3, i32 0, i32 %5\l  %18 = addrspacecast float addrspace(3)* %17 to float*\l  %19 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ19saxpy_float4s_shmemPfS_fPlE8sdata_y0, i32 0, i32 %5\l  %20 = addrspacecast float addrspace(3)* %19 to float*\l  %21 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ19saxpy_float4s_shmemPfS_fPlE8sdata_y1, i32 0, i32 %5\l  %22 = addrspacecast float addrspace(3)* %21 to float*\l  %23 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ19saxpy_float4s_shmemPfS_fPlE8sdata_y2, i32 0, i32 %5\l  %24 = addrspacecast float addrspace(3)* %23 to float*\l  %25 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ19saxpy_float4s_shmemPfS_fPlE8sdata_y3, i32 0, i32 %5\l  %26 = addrspacecast float addrspace(3)* %25 to float*\l  br label %28\l}"];
	Node0x6053bc0 -> Node0x6055430;
	Node0x6055f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%27:\l27:                                               \l  ret void\l}"];
	Node0x6055430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ 0, %4 ], [ %101, %28 ]\l  %30 = mul nuw nsw i32 %29, 1792\l  %31 = add i32 %8, %30\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %9, i64 %32, i32 0, i32 0, i32 0, i64 0\l  %34 = load float, float addrspace(1)* %33, align 16\l  %35 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %9, i64 %32, i32 0, i32 0, i32 0, i64 1\l  %36 = load float, float addrspace(1)* %35, align 4\l  %37 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %9, i64 %32, i32 0, i32 0, i32 0, i64 2\l  %38 = load float, float addrspace(1)* %37, align 8\l  %39 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %9, i64 %32, i32 0, i32 0, i32 0, i64 3\l  %40 = load float, float addrspace(1)* %39, align 4\l  %41 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %32, i32 0, i32 0, i32 0, i64 0\l  %42 = load float, float addrspace(1)* %41, align 16\l  %43 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %32, i32 0, i32 0, i32 0, i64 1\l  %44 = load float, float addrspace(1)* %43, align 4\l  %45 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %32, i32 0, i32 0, i32 0, i64 2\l  %46 = load float, float addrspace(1)* %45, align 8\l  %47 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %32, i32 0, i32 0, i32 0, i64 3\l  %48 = load float, float addrspace(1)* %47, align 4\l  store volatile float %34, float* %12, align 4, !tbaa !5\l  store volatile float %36, float* %14, align 4, !tbaa !5\l  store volatile float %38, float* %16, align 4, !tbaa !5\l  store volatile float %40, float* %18, align 4, !tbaa !5\l  store volatile float %42, float* %20, align 4, !tbaa !5\l  store volatile float %44, float* %22, align 4, !tbaa !5\l  store volatile float %46, float* %24, align 4, !tbaa !5\l  store volatile float %48, float* %26, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %49 = load volatile float, float* %12, align 4, !tbaa !5\l  %50 = fmul contract float %49, %2\l  %51 = load volatile float, float* %20, align 4, !tbaa !5\l  %52 = fadd contract float %50, %51\l  %53 = load volatile float, float* %14, align 4, !tbaa !5\l  %54 = fmul contract float %53, %2\l  %55 = load volatile float, float* %22, align 4, !tbaa !5\l  %56 = fadd contract float %54, %55\l  %57 = load volatile float, float* %16, align 4, !tbaa !5\l  %58 = fmul contract float %57, %2\l  %59 = load volatile float, float* %24, align 4, !tbaa !5\l  %60 = fadd contract float %58, %59\l  %61 = load volatile float, float* %18, align 4, !tbaa !5\l  %62 = fmul contract float %61, %2\l  %63 = load volatile float, float* %26, align 4, !tbaa !5\l  %64 = fadd contract float %62, %63\l  store float %52, float addrspace(1)* %41, align 16\l  store float %56, float addrspace(1)* %43, align 4\l  store float %60, float addrspace(1)* %45, align 8\l  store float %64, float addrspace(1)* %47, align 4\l  %65 = mul nuw i32 %29, 1792\l  %66 = add nuw i32 %65, 1792\l  %67 = add i32 %8, %66\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %9, i64 %68, i32 0, i32 0, i32 0, i64 0\l  %70 = load float, float addrspace(1)* %69, align 16\l  %71 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %9, i64 %68, i32 0, i32 0, i32 0, i64 1\l  %72 = load float, float addrspace(1)* %71, align 4\l  %73 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %9, i64 %68, i32 0, i32 0, i32 0, i64 2\l  %74 = load float, float addrspace(1)* %73, align 8\l  %75 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %9, i64 %68, i32 0, i32 0, i32 0, i64 3\l  %76 = load float, float addrspace(1)* %75, align 4\l  %77 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %68, i32 0, i32 0, i32 0, i64 0\l  %78 = load float, float addrspace(1)* %77, align 16\l  %79 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %68, i32 0, i32 0, i32 0, i64 1\l  %80 = load float, float addrspace(1)* %79, align 4\l  %81 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %68, i32 0, i32 0, i32 0, i64 2\l  %82 = load float, float addrspace(1)* %81, align 8\l  %83 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %68, i32 0, i32 0, i32 0, i64 3\l  %84 = load float, float addrspace(1)* %83, align 4\l  store volatile float %70, float* %12, align 4, !tbaa !5\l  store volatile float %72, float* %14, align 4, !tbaa !5\l  store volatile float %74, float* %16, align 4, !tbaa !5\l  store volatile float %76, float* %18, align 4, !tbaa !5\l  store volatile float %78, float* %20, align 4, !tbaa !5\l  store volatile float %80, float* %22, align 4, !tbaa !5\l  store volatile float %82, float* %24, align 4, !tbaa !5\l  store volatile float %84, float* %26, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %85 = load volatile float, float* %12, align 4, !tbaa !5\l  %86 = fmul contract float %85, %2\l  %87 = load volatile float, float* %20, align 4, !tbaa !5\l  %88 = fadd contract float %86, %87\l  %89 = load volatile float, float* %14, align 4, !tbaa !5\l  %90 = fmul contract float %89, %2\l  %91 = load volatile float, float* %22, align 4, !tbaa !5\l  %92 = fadd contract float %90, %91\l  %93 = load volatile float, float* %16, align 4, !tbaa !5\l  %94 = fmul contract float %93, %2\l  %95 = load volatile float, float* %24, align 4, !tbaa !5\l  %96 = fadd contract float %94, %95\l  %97 = load volatile float, float* %18, align 4, !tbaa !5\l  %98 = fmul contract float %97, %2\l  %99 = load volatile float, float* %26, align 4, !tbaa !5\l  %100 = fadd contract float %98, %99\l  store float %88, float addrspace(1)* %77, align 16\l  store float %92, float addrspace(1)* %79, align 4\l  store float %96, float addrspace(1)* %81, align 8\l  store float %100, float addrspace(1)* %83, align 4\l  %101 = add nuw nsw i32 %29, 2\l  %102 = icmp eq i32 %101, 512\l  br i1 %102, label %27, label %28, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x6055430:s0 -> Node0x6055f40;
	Node0x6055430:s1 -> Node0x6055430;
}
