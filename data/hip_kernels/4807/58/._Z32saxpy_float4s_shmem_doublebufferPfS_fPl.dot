digraph "CFG for '_Z32saxpy_float4s_shmem_doublebufferPfS_fPl' function" {
	label="CFG for '_Z32saxpy_float4s_shmem_doublebufferPfS_fPl' function";

	Node0x4781660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = shl i32 %6, 7\l  %8 = add i32 %7, %5\l  %9 = add i32 %8, 1792\l  %10 = bitcast float addrspace(1)* %1 to %struct.HIP_vector_type addrspace(1)*\l  %11 = bitcast float addrspace(1)* %0 to %struct.HIP_vector_type addrspace(1)*\l  %12 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_x0_0, i32 0, i32 %5\l  %13 = addrspacecast float addrspace(3)* %12 to float*\l  %14 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_x0_1, i32 0, i32 %5\l  %15 = addrspacecast float addrspace(3)* %14 to float*\l  %16 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_y0_1, i32 0, i32 %5\l  %17 = addrspacecast float addrspace(3)* %16 to float*\l  %18 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_x1_1, i32 0, i32 %5\l  %19 = addrspacecast float addrspace(3)* %18 to float*\l  %20 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_y1_1, i32 0, i32 %5\l  %21 = addrspacecast float addrspace(3)* %20 to float*\l  %22 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_x2_1, i32 0, i32 %5\l  %23 = addrspacecast float addrspace(3)* %22 to float*\l  %24 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_y2_1, i32 0, i32 %5\l  %25 = addrspacecast float addrspace(3)* %24 to float*\l  %26 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_x3_1, i32 0, i32 %5\l  %27 = addrspacecast float addrspace(3)* %26 to float*\l  %28 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_y3_1, i32 0, i32 %5\l  %29 = addrspacecast float addrspace(3)* %28 to float*\l  %30 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_x1_0, i32 0, i32 %5\l  %31 = addrspacecast float addrspace(3)* %30 to float*\l  %32 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_x2_0, i32 0, i32 %5\l  %33 = addrspacecast float addrspace(3)* %32 to float*\l  %34 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_x3_0, i32 0, i32 %5\l  %35 = addrspacecast float addrspace(3)* %34 to float*\l  %36 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_y0_0, i32 0, i32 %5\l  %37 = addrspacecast float addrspace(3)* %36 to float*\l  %38 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_y1_0, i32 0, i32 %5\l  %39 = addrspacecast float addrspace(3)* %38 to float*\l  %40 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_y2_0, i32 0, i32 %5\l  %41 = addrspacecast float addrspace(3)* %40 to float*\l  %42 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ32saxpy_float4s_shmem_doublebufferPfS_fPlE10sdata_y3_0, i32 0, i32 %5\l  %43 = addrspacecast float addrspace(3)* %42 to float*\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %44 = zext i32 %8 to i64\l  %45 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %44, i32 0, i32 0, i32 0, i64 0\l  %46 = load float, float addrspace(1)* %45, align 16\l  %47 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %44, i32 0, i32 0, i32 0, i64 1\l  %48 = load float, float addrspace(1)* %47, align 4\l  %49 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %44, i32 0, i32 0, i32 0, i64 2\l  %50 = load float, float addrspace(1)* %49, align 8\l  %51 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %44, i32 0, i32 0, i32 0, i64 3\l  %52 = load float, float addrspace(1)* %51, align 4\l  %53 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %44, i32 0, i32 0, i32 0, i64 0\l  %54 = load float, float addrspace(1)* %53, align 16\l  %55 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %44, i32 0, i32 0, i32 0, i64 1\l  %56 = load float, float addrspace(1)* %55, align 4\l  %57 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %44, i32 0, i32 0, i32 0, i64 2\l  %58 = load float, float addrspace(1)* %57, align 8\l  %59 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %44, i32 0, i32 0, i32 0, i64 3\l  %60 = load float, float addrspace(1)* %59, align 4\l  %61 = zext i32 %9 to i64\l  store volatile float %46, float* %13, align 4, !tbaa !5\l  store volatile float %48, float* %31, align 4, !tbaa !5\l  store volatile float %50, float* %33, align 4, !tbaa !5\l  store volatile float %52, float* %35, align 4, !tbaa !5\l  store volatile float %54, float* %37, align 4, !tbaa !5\l  store volatile float %56, float* %39, align 4, !tbaa !5\l  store volatile float %58, float* %41, align 4, !tbaa !5\l  store volatile float %60, float* %43, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %62 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %61, i32 0, i32 0, i32 0, i64 0\l  %63 = load float, float addrspace(1)* %62, align 16\l  %64 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %61, i32 0, i32 0, i32 0, i64 1\l  %65 = load float, float addrspace(1)* %64, align 4\l  %66 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %61, i32 0, i32 0, i32 0, i64 2\l  %67 = load float, float addrspace(1)* %66, align 8\l  %68 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %61, i32 0, i32 0, i32 0, i64 3\l  %69 = load float, float addrspace(1)* %68, align 4\l  %70 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %61, i32 0, i32 0, i32 0, i64 0\l  %71 = load float, float addrspace(1)* %70, align 16\l  %72 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %61, i32 0, i32 0, i32 0, i64 1\l  %73 = load float, float addrspace(1)* %72, align 4\l  %74 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %61, i32 0, i32 0, i32 0, i64 2\l  %75 = load float, float addrspace(1)* %74, align 8\l  %76 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %61, i32 0, i32 0, i32 0, i64 3\l  %77 = load float, float addrspace(1)* %76, align 4\l  %78 = load volatile float, float* %13, align 4, !tbaa !5\l  %79 = fmul contract float %78, %2\l  %80 = load volatile float, float* %37, align 4, !tbaa !5\l  %81 = fadd contract float %79, %80\l  %82 = load volatile float, float* %31, align 4, !tbaa !5\l  %83 = fmul contract float %82, %2\l  %84 = load volatile float, float* %39, align 4, !tbaa !5\l  %85 = fadd contract float %83, %84\l  %86 = load volatile float, float* %33, align 4, !tbaa !5\l  %87 = fmul contract float %86, %2\l  %88 = load volatile float, float* %41, align 4, !tbaa !5\l  %89 = fadd contract float %87, %88\l  %90 = load volatile float, float* %35, align 4, !tbaa !5\l  %91 = fmul contract float %90, %2\l  %92 = load volatile float, float* %43, align 4, !tbaa !5\l  %93 = fadd contract float %91, %92\l  store float %81, float addrspace(1)* %53, align 16\l  store float %85, float addrspace(1)* %55, align 4\l  store float %89, float addrspace(1)* %57, align 8\l  store float %93, float addrspace(1)* %59, align 4\l  store volatile float %63, float* %15, align 4, !tbaa !5\l  store volatile float %65, float* %19, align 4, !tbaa !5\l  store volatile float %67, float* %23, align 4, !tbaa !5\l  store volatile float %69, float* %27, align 4, !tbaa !5\l  store volatile float %71, float* %17, align 4, !tbaa !5\l  store volatile float %73, float* %21, align 4, !tbaa !5\l  store volatile float %75, float* %25, align 4, !tbaa !5\l  store volatile float %77, float* %29, align 4, !tbaa !5\l  br label %116\l}"];
	Node0x4781660 -> Node0x4788010;
	Node0x47880d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%94:\l94:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %95 = load volatile float, float* %15, align 4, !tbaa !5\l  %96 = fmul contract float %95, %2\l  %97 = load volatile float, float* %17, align 4, !tbaa !5\l  %98 = fadd contract float %96, %97\l  %99 = load volatile float, float* %19, align 4, !tbaa !5\l  %100 = fmul contract float %99, %2\l  %101 = load volatile float, float* %21, align 4, !tbaa !5\l  %102 = fadd contract float %100, %101\l  %103 = load volatile float, float* %23, align 4, !tbaa !5\l  %104 = fmul contract float %103, %2\l  %105 = load volatile float, float* %25, align 4, !tbaa !5\l  %106 = fadd contract float %104, %105\l  %107 = load volatile float, float* %27, align 4, !tbaa !5\l  %108 = fmul contract float %107, %2\l  %109 = load volatile float, float* %29, align 4, !tbaa !5\l  %110 = fadd contract float %108, %109\l  %111 = zext i32 %159 to i64\l  %112 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %111, i32 0, i32 0, i32 0, i64\l... 0\l  store float %98, float addrspace(1)* %112, align 16\l  %113 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %111, i32 0, i32 0, i32 0, i64\l... 1\l  store float %102, float addrspace(1)* %113, align 4\l  %114 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %111, i32 0, i32 0, i32 0, i64\l... 2\l  store float %106, float addrspace(1)* %114, align 8\l  %115 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %111, i32 0, i32 0, i32 0, i64\l... 3\l  store float %110, float addrspace(1)* %115, align 4\l  ret void\l}"];
	Node0x4788010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%116:\l116:                                              \l  %117 = phi i32 [ 2, %4 ], [ %193, %116 ]\l  %118 = phi i32 [ %8, %4 ], [ %120, %116 ]\l  %119 = phi i32 [ %9, %4 ], [ %159, %116 ]\l  %120 = add i32 %118, 3584\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %121 = zext i32 %120 to i64\l  %122 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %121, i32 0, i32 0, i32 0, i64\l... 0\l  %123 = load float, float addrspace(1)* %122, align 16\l  %124 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %121, i32 0, i32 0, i32 0, i64\l... 1\l  %125 = load float, float addrspace(1)* %124, align 4\l  %126 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %121, i32 0, i32 0, i32 0, i64\l... 2\l  %127 = load float, float addrspace(1)* %126, align 8\l  %128 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %121, i32 0, i32 0, i32 0, i64\l... 3\l  %129 = load float, float addrspace(1)* %128, align 4\l  %130 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %121, i32 0, i32 0, i32 0, i64\l... 0\l  %131 = load float, float addrspace(1)* %130, align 16\l  %132 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %121, i32 0, i32 0, i32 0, i64\l... 1\l  %133 = load float, float addrspace(1)* %132, align 4\l  %134 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %121, i32 0, i32 0, i32 0, i64\l... 2\l  %135 = load float, float addrspace(1)* %134, align 8\l  %136 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %121, i32 0, i32 0, i32 0, i64\l... 3\l  %137 = load float, float addrspace(1)* %136, align 4\l  %138 = load volatile float, float* %15, align 4, !tbaa !5\l  %139 = fmul contract float %138, %2\l  %140 = load volatile float, float* %17, align 4, !tbaa !5\l  %141 = fadd contract float %139, %140\l  %142 = load volatile float, float* %19, align 4, !tbaa !5\l  %143 = fmul contract float %142, %2\l  %144 = load volatile float, float* %21, align 4, !tbaa !5\l  %145 = fadd contract float %143, %144\l  %146 = load volatile float, float* %23, align 4, !tbaa !5\l  %147 = fmul contract float %146, %2\l  %148 = load volatile float, float* %25, align 4, !tbaa !5\l  %149 = fadd contract float %147, %148\l  %150 = load volatile float, float* %27, align 4, !tbaa !5\l  %151 = fmul contract float %150, %2\l  %152 = load volatile float, float* %29, align 4, !tbaa !5\l  %153 = fadd contract float %151, %152\l  %154 = zext i32 %119 to i64\l  %155 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %154, i32 0, i32 0, i32 0, i64\l... 0\l  store float %141, float addrspace(1)* %155, align 16\l  %156 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %154, i32 0, i32 0, i32 0, i64\l... 1\l  store float %145, float addrspace(1)* %156, align 4\l  %157 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %154, i32 0, i32 0, i32 0, i64\l... 2\l  store float %149, float addrspace(1)* %157, align 8\l  %158 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %154, i32 0, i32 0, i32 0, i64\l... 3\l  store float %153, float addrspace(1)* %158, align 4\l  %159 = add i32 %119, 3584\l  store volatile float %123, float* %13, align 4, !tbaa !5\l  store volatile float %125, float* %31, align 4, !tbaa !5\l  store volatile float %127, float* %33, align 4, !tbaa !5\l  store volatile float %129, float* %35, align 4, !tbaa !5\l  store volatile float %131, float* %37, align 4, !tbaa !5\l  store volatile float %133, float* %39, align 4, !tbaa !5\l  store volatile float %135, float* %41, align 4, !tbaa !5\l  store volatile float %137, float* %43, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %160 = zext i32 %159 to i64\l  %161 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %160, i32 0, i32 0, i32 0, i64\l... 0\l  %162 = load float, float addrspace(1)* %161, align 16\l  %163 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %160, i32 0, i32 0, i32 0, i64\l... 1\l  %164 = load float, float addrspace(1)* %163, align 4\l  %165 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %160, i32 0, i32 0, i32 0, i64\l... 2\l  %166 = load float, float addrspace(1)* %165, align 8\l  %167 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %10, i64 %160, i32 0, i32 0, i32 0, i64\l... 3\l  %168 = load float, float addrspace(1)* %167, align 4\l  %169 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %160, i32 0, i32 0, i32 0, i64\l... 0\l  %170 = load float, float addrspace(1)* %169, align 16\l  %171 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %160, i32 0, i32 0, i32 0, i64\l... 1\l  %172 = load float, float addrspace(1)* %171, align 4\l  %173 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %160, i32 0, i32 0, i32 0, i64\l... 2\l  %174 = load float, float addrspace(1)* %173, align 8\l  %175 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %160, i32 0, i32 0, i32 0, i64\l... 3\l  %176 = load float, float addrspace(1)* %175, align 4\l  %177 = load volatile float, float* %13, align 4, !tbaa !5\l  %178 = fmul contract float %177, %2\l  %179 = load volatile float, float* %37, align 4, !tbaa !5\l  %180 = fadd contract float %178, %179\l  %181 = load volatile float, float* %31, align 4, !tbaa !5\l  %182 = fmul contract float %181, %2\l  %183 = load volatile float, float* %39, align 4, !tbaa !5\l  %184 = fadd contract float %182, %183\l  %185 = load volatile float, float* %33, align 4, !tbaa !5\l  %186 = fmul contract float %185, %2\l  %187 = load volatile float, float* %41, align 4, !tbaa !5\l  %188 = fadd contract float %186, %187\l  %189 = load volatile float, float* %35, align 4, !tbaa !5\l  %190 = fmul contract float %189, %2\l  %191 = load volatile float, float* %43, align 4, !tbaa !5\l  %192 = fadd contract float %190, %191\l  store float %180, float addrspace(1)* %130, align 16\l  store float %184, float addrspace(1)* %132, align 4\l  store float %188, float addrspace(1)* %134, align 8\l  store float %192, float addrspace(1)* %136, align 4\l  store volatile float %162, float* %15, align 4, !tbaa !5\l  store volatile float %164, float* %19, align 4, !tbaa !5\l  store volatile float %166, float* %23, align 4, !tbaa !5\l  store volatile float %168, float* %27, align 4, !tbaa !5\l  store volatile float %170, float* %17, align 4, !tbaa !5\l  store volatile float %172, float* %21, align 4, !tbaa !5\l  store volatile float %174, float* %25, align 4, !tbaa !5\l  store volatile float %176, float* %29, align 4, !tbaa !5\l  %193 = add nuw nsw i32 %117, 2\l  %194 = icmp ult i32 %117, 510\l  br i1 %194, label %116, label %94, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x4788010:s0 -> Node0x4788010;
	Node0x4788010:s1 -> Node0x47880d0;
}
