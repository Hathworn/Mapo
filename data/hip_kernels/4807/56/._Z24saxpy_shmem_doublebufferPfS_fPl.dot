digraph "CFG for '_Z24saxpy_shmem_doublebufferPfS_fPl' function" {
	label="CFG for '_Z24saxpy_shmem_doublebufferPfS_fPl' function";

	Node0x50c6bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = shl i32 %6, 7\l  %8 = add i32 %7, %5\l  %9 = add i32 %8, 1792\l  %10 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ24saxpy_shmem_doublebufferPfS_fPlE8sdata_x0, i32 0, i32 %5\l  %11 = addrspacecast float addrspace(3)* %10 to float*\l  %12 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ24saxpy_shmem_doublebufferPfS_fPlE8sdata_y0, i32 0, i32 %5\l  %13 = addrspacecast float addrspace(3)* %12 to float*\l  %14 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ24saxpy_shmem_doublebufferPfS_fPlE8sdata_x1, i32 0, i32 %5\l  %15 = addrspacecast float addrspace(3)* %14 to float*\l  %16 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ24saxpy_shmem_doublebufferPfS_fPlE8sdata_y1, i32 0, i32 %5\l  %17 = addrspacecast float addrspace(3)* %16 to float*\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %18 = zext i32 %8 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %1, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !5\l  store volatile float %20, float* %11, align 4, !tbaa !5\l  %21 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !5\l  store volatile float %22, float* %13, align 4, !tbaa !5\l  %23 = zext i32 %9 to i64\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %24 = getelementptr inbounds float, float addrspace(1)* %1, i64 %23\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !5\l  store volatile float %25, float* %15, align 4, !tbaa !5\l  %26 = getelementptr inbounds float, float addrspace(1)* %0, i64 %23\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !5\l  store volatile float %27, float* %17, align 4, !tbaa !5\l  %28 = load volatile float, float* %11, align 4, !tbaa !5\l  %29 = fmul contract float %28, %2\l  %30 = load volatile float, float* %13, align 4, !tbaa !5\l  %31 = fadd contract float %29, %30\l  store float %31, float addrspace(1)* %21, align 4, !tbaa !5\l  br label %39\l}"];
	Node0x50c6bf0 -> Node0x50ca010;
	Node0x50ca0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%32:\l32:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %33 = load volatile float, float* %15, align 4, !tbaa !5\l  %34 = fmul contract float %33, %2\l  %35 = load volatile float, float* %17, align 4, !tbaa !5\l  %36 = fadd contract float %34, %35\l  %37 = zext i32 %99 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  store float %36, float addrspace(1)* %38, align 4, !tbaa !5\l  ret void\l}"];
	Node0x50ca010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i32 [ 2, %4 ], [ %109, %39 ]\l  %41 = phi i32 [ %9, %4 ], [ %99, %39 ]\l  %42 = phi i32 [ %8, %4 ], [ %87, %39 ]\l  %43 = add i32 %42, 3584\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !5\l  store volatile float %46, float* %11, align 4, !tbaa !5\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !5\l  store volatile float %48, float* %13, align 4, !tbaa !5\l  %49 = load volatile float, float* %15, align 4, !tbaa !5\l  %50 = fmul contract float %49, %2\l  %51 = load volatile float, float* %17, align 4, !tbaa !5\l  %52 = fadd contract float %50, %51\l  %53 = zext i32 %41 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  store float %52, float addrspace(1)* %54, align 4, !tbaa !5\l  %55 = add i32 %41, 3584\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !5\l  store volatile float %58, float* %15, align 4, !tbaa !5\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !5\l  store volatile float %60, float* %17, align 4, !tbaa !5\l  %61 = load volatile float, float* %11, align 4, !tbaa !5\l  %62 = fmul contract float %61, %2\l  %63 = load volatile float, float* %13, align 4, !tbaa !5\l  %64 = fadd contract float %62, %63\l  store float %64, float addrspace(1)* %47, align 4, !tbaa !5\l  %65 = add i32 %42, 7168\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %1, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !5\l  store volatile float %68, float* %11, align 4, !tbaa !5\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !5\l  store volatile float %70, float* %13, align 4, !tbaa !5\l  %71 = load volatile float, float* %15, align 4, !tbaa !5\l  %72 = fmul contract float %71, %2\l  %73 = load volatile float, float* %17, align 4, !tbaa !5\l  %74 = fadd contract float %72, %73\l  %75 = zext i32 %55 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %75\l  store float %74, float addrspace(1)* %76, align 4, !tbaa !5\l  %77 = add i32 %41, 7168\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %1, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !5\l  store volatile float %80, float* %15, align 4, !tbaa !5\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !5\l  store volatile float %82, float* %17, align 4, !tbaa !5\l  %83 = load volatile float, float* %11, align 4, !tbaa !5\l  %84 = fmul contract float %83, %2\l  %85 = load volatile float, float* %13, align 4, !tbaa !5\l  %86 = fadd contract float %84, %85\l  store float %86, float addrspace(1)* %69, align 4, !tbaa !5\l  %87 = add i32 %42, 10752\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %88 = zext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %1, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !5\l  store volatile float %90, float* %11, align 4, !tbaa !5\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !5\l  store volatile float %92, float* %13, align 4, !tbaa !5\l  %93 = load volatile float, float* %15, align 4, !tbaa !5\l  %94 = fmul contract float %93, %2\l  %95 = load volatile float, float* %17, align 4, !tbaa !5\l  %96 = fadd contract float %94, %95\l  %97 = zext i32 %77 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  store float %96, float addrspace(1)* %98, align 4, !tbaa !5\l  %99 = add i32 %41, 10752\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %100 = zext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %1, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !5\l  store volatile float %102, float* %15, align 4, !tbaa !5\l  %103 = getelementptr inbounds float, float addrspace(1)* %0, i64 %100\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !5\l  store volatile float %104, float* %17, align 4, !tbaa !5\l  %105 = load volatile float, float* %11, align 4, !tbaa !5\l  %106 = fmul contract float %105, %2\l  %107 = load volatile float, float* %13, align 4, !tbaa !5\l  %108 = fadd contract float %106, %107\l  store float %108, float addrspace(1)* %91, align 4, !tbaa !5\l  %109 = add nuw nsw i32 %40, 6\l  %110 = icmp ult i32 %40, 2042\l  br i1 %110, label %39, label %32, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x50ca010:s0 -> Node0x50ca010;
	Node0x50ca010:s1 -> Node0x50ca0d0;
}
