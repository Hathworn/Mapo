digraph "CFG for '_Z16updateVelocity_kP15HIP_vector_typeIfLj2EEPfS2_iiiim' function" {
	label="CFG for '_Z16updateVelocity_kP15HIP_vector_typeIfLj2EEPfS2_iiiim' function";

	Node0x47e8e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = icmp slt i32 %17, %3\l  %19 = icmp sgt i32 %6, 0\l  %20 = select i1 %18, i1 %19, i1 false\l  br i1 %20, label %21, label %107\l|{<s0>T|<s1>F}}"];
	Node0x47e8e90:s0 -> Node0x47eaee0;
	Node0x47e8e90:s1 -> Node0x47eaf70;
	Node0x47eaee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%21:\l21:                                               \l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !4, !invariant.load !5\l  %26 = zext i16 %25 to i32\l  %27 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %28 = mul i32 %27, %26\l  %29 = add i32 %28, %22\l  %30 = mul i32 %29, %6\l  %31 = mul nsw i32 %5, %3\l  %32 = sitofp i32 %31 to float\l  %33 = fdiv contract float 1.000000e+00, %32\l  %34 = bitcast %struct.HIP_vector_type addrspace(1)* %0 to i8 addrspace(1)*\l  %35 = sext i32 %17 to i64\l  %36 = and i32 %6, 1\l  %37 = icmp eq i32 %6, 1\l  br i1 %37, label %85, label %38\l|{<s0>T|<s1>F}}"];
	Node0x47eaee0:s0 -> Node0x47ed9f0;
	Node0x47eaee0:s1 -> Node0x47eda80;
	Node0x47eda80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%38:\l38:                                               \l  %39 = and i32 %6, -2\l  br label %40\l}"];
	Node0x47eda80 -> Node0x47edc80;
	Node0x47edc80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ 0, %38 ], [ %82, %81 ]\l  %42 = phi i32 [ 0, %38 ], [ %83, %81 ]\l  %43 = add i32 %30, %41\l  %44 = icmp slt i32 %43, %5\l  br i1 %44, label %45, label %61\l|{<s0>T|<s1>F}}"];
	Node0x47edc80:s0 -> Node0x47ee0f0;
	Node0x47edc80:s1 -> Node0x47ee180;
	Node0x47ee0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%45:\l45:                                               \l  %46 = mul nsw i32 %43, %4\l  %47 = add nsw i32 %46, %17\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %1, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %48\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  %53 = fmul contract float %33, %50\l  %54 = fmul contract float %33, %52\l  %55 = sext i32 %43 to i64\l  %56 = mul i64 %55, %7\l  %57 = getelementptr inbounds i8, i8 addrspace(1)* %34, i64 %56\l  %58 = bitcast i8 addrspace(1)* %57 to %struct.HIP_vector_type addrspace(1)*\l  %59 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %58, i64 %35, i32 0, i32 0, i32 0, i64 0\l  store float %53, float addrspace(1)* %59, align 8\l  %60 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %58, i64 %35, i32 0, i32 0, i32 0, i64 1\l  store float %54, float addrspace(1)* %60, align 4\l  br label %61\l}"];
	Node0x47ee0f0 -> Node0x47ee180;
	Node0x47ee180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = or i32 %41, 1\l  %63 = add i32 %30, %62\l  %64 = icmp slt i32 %63, %5\l  br i1 %64, label %65, label %81\l|{<s0>T|<s1>F}}"];
	Node0x47ee180:s0 -> Node0x47ecbd0;
	Node0x47ee180:s1 -> Node0x47edd70;
	Node0x47ecbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%65:\l65:                                               \l  %66 = mul nsw i32 %63, %4\l  %67 = add nsw i32 %66, %17\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %1, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7\l  %71 = getelementptr inbounds float, float addrspace(1)* %2, i64 %68\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7\l  %73 = fmul contract float %33, %70\l  %74 = fmul contract float %33, %72\l  %75 = sext i32 %63 to i64\l  %76 = mul i64 %75, %7\l  %77 = getelementptr inbounds i8, i8 addrspace(1)* %34, i64 %76\l  %78 = bitcast i8 addrspace(1)* %77 to %struct.HIP_vector_type addrspace(1)*\l  %79 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %78, i64 %35, i32 0, i32 0, i32 0, i64 0\l  store float %73, float addrspace(1)* %79, align 8\l  %80 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %78, i64 %35, i32 0, i32 0, i32 0, i64 1\l  store float %74, float addrspace(1)* %80, align 4\l  br label %81\l}"];
	Node0x47ecbd0 -> Node0x47edd70;
	Node0x47edd70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = add nuw nsw i32 %41, 2\l  %83 = add i32 %42, 2\l  %84 = icmp eq i32 %83, %39\l  br i1 %84, label %85, label %40, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x47edd70:s0 -> Node0x47ed9f0;
	Node0x47edd70:s1 -> Node0x47edc80;
	Node0x47ed9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%85:\l85:                                               \l  %86 = phi i32 [ 0, %21 ], [ %82, %81 ]\l  %87 = icmp eq i32 %36, 0\l  br i1 %87, label %107, label %88\l|{<s0>T|<s1>F}}"];
	Node0x47ed9f0:s0 -> Node0x47eaf70;
	Node0x47ed9f0:s1 -> Node0x47f08a0;
	Node0x47f08a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%88:\l88:                                               \l  %89 = add i32 %30, %86\l  %90 = icmp slt i32 %89, %5\l  br i1 %90, label %91, label %107\l|{<s0>T|<s1>F}}"];
	Node0x47f08a0:s0 -> Node0x47f0ac0;
	Node0x47f08a0:s1 -> Node0x47eaf70;
	Node0x47f0ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%91:\l91:                                               \l  %92 = mul nsw i32 %89, %4\l  %93 = add nsw i32 %92, %17\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7\l  %97 = getelementptr inbounds float, float addrspace(1)* %2, i64 %94\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7\l  %99 = fmul contract float %33, %96\l  %100 = fmul contract float %33, %98\l  %101 = sext i32 %89 to i64\l  %102 = mul i64 %101, %7\l  %103 = getelementptr inbounds i8, i8 addrspace(1)* %34, i64 %102\l  %104 = bitcast i8 addrspace(1)* %103 to %struct.HIP_vector_type addrspace(1)*\l  %105 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %104, i64 %35, i32 0, i32 0, i32 0, i64\l... 0\l  store float %99, float addrspace(1)* %105, align 8\l  %106 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %104, i64 %35, i32 0, i32 0, i32 0, i64\l... 1\l  store float %100, float addrspace(1)* %106, align 4\l  br label %107\l}"];
	Node0x47f0ac0 -> Node0x47eaf70;
	Node0x47eaf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%107:\l107:                                              \l  ret void\l}"];
}
