digraph "CFG for '_Z21build_expected_outputPiiiPKi' function" {
	label="CFG for '_Z21build_expected_outputPiiiPKi' function";

	Node0x57c9b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %5\l  %14 = icmp slt i32 %13, %1\l  br i1 %14, label %15, label %75\l|{<s0>T|<s1>F}}"];
	Node0x57c9b10:s0 -> Node0x57cba20;
	Node0x57c9b10:s1 -> Node0x57cbab0;
	Node0x57cba20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %16\l  %18 = load i32, i32 addrspace(1)* %17, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %19 = icmp sgt i32 %2, 0\l  br i1 %19, label %20, label %75\l|{<s0>T|<s1>F}}"];
	Node0x57cba20:s0 -> Node0x57cc660;
	Node0x57cba20:s1 -> Node0x57cbab0;
	Node0x57cc660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%20:\l20:                                               \l  %21 = mul nsw i32 %13, %2\l  %22 = and i32 %2, 7\l  %23 = icmp ult i32 %2, 8\l  br i1 %23, label %63, label %24\l|{<s0>T|<s1>F}}"];
	Node0x57cc660:s0 -> Node0x57cc9b0;
	Node0x57cc660:s1 -> Node0x57cca00;
	Node0x57cca00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%24:\l24:                                               \l  %25 = and i32 %2, -8\l  br label %26\l}"];
	Node0x57cca00 -> Node0x57ccc00;
	Node0x57ccc00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%26:\l26:                                               \l  %27 = phi i32 [ 0, %24 ], [ %60, %26 ]\l  %28 = phi i32 [ 0, %24 ], [ %61, %26 ]\l  %29 = add nsw i32 %27, %21\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %30\l  store i32 %18, i32 addrspace(1)* %31, align 4, !tbaa !7\l  %32 = or i32 %27, 1\l  %33 = add nsw i32 %32, %21\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %34\l  store i32 %18, i32 addrspace(1)* %35, align 4, !tbaa !7\l  %36 = or i32 %27, 2\l  %37 = add nsw i32 %36, %21\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %38\l  store i32 %18, i32 addrspace(1)* %39, align 4, !tbaa !7\l  %40 = or i32 %27, 3\l  %41 = add nsw i32 %40, %21\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %42\l  store i32 %18, i32 addrspace(1)* %43, align 4, !tbaa !7\l  %44 = or i32 %27, 4\l  %45 = add nsw i32 %44, %21\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %46\l  store i32 %18, i32 addrspace(1)* %47, align 4, !tbaa !7\l  %48 = or i32 %27, 5\l  %49 = add nsw i32 %48, %21\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %50\l  store i32 %18, i32 addrspace(1)* %51, align 4, !tbaa !7\l  %52 = or i32 %27, 6\l  %53 = add nsw i32 %52, %21\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %54\l  store i32 %18, i32 addrspace(1)* %55, align 4, !tbaa !7\l  %56 = or i32 %27, 7\l  %57 = add nsw i32 %56, %21\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %58\l  store i32 %18, i32 addrspace(1)* %59, align 4, !tbaa !7\l  %60 = add nuw nsw i32 %27, 8\l  %61 = add i32 %28, 8\l  %62 = icmp eq i32 %61, %25\l  br i1 %62, label %63, label %26, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x57ccc00:s0 -> Node0x57cc9b0;
	Node0x57ccc00:s1 -> Node0x57ccc00;
	Node0x57cc9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%63:\l63:                                               \l  %64 = phi i32 [ 0, %20 ], [ %60, %26 ]\l  %65 = icmp eq i32 %22, 0\l  br i1 %65, label %75, label %66\l|{<s0>T|<s1>F}}"];
	Node0x57cc9b0:s0 -> Node0x57cbab0;
	Node0x57cc9b0:s1 -> Node0x57cd850;
	Node0x57cd850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi i32 [ %72, %66 ], [ %64, %63 ]\l  %68 = phi i32 [ %73, %66 ], [ 0, %63 ]\l  %69 = add nsw i32 %67, %21\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %70\l  store i32 %18, i32 addrspace(1)* %71, align 4, !tbaa !7\l  %72 = add nuw nsw i32 %67, 1\l  %73 = add i32 %68, 1\l  %74 = icmp eq i32 %73, %22\l  br i1 %74, label %75, label %66, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x57cd850:s0 -> Node0x57cbab0;
	Node0x57cd850:s1 -> Node0x57cd850;
	Node0x57cbab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%75:\l75:                                               \l  ret void\l}"];
}
