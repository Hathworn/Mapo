digraph "CFG for '_Z29conv_vertical_naive_gradInputiPfPKfS1_iii' function" {
	label="CFG for '_Z29conv_vertical_naive_gradInputiPfPKfS1_iii' function";

	Node0x5eaabd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !6\l  %17 = mul i32 %8, %13\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %19 = add i32 %17, %18\l  %20 = icmp slt i32 %19, %0\l  br i1 %20, label %21, label %31\l|{<s0>T|<s1>F}}"];
	Node0x5eaabd0:s0 -> Node0x5eace30;
	Node0x5eaabd0:s1 -> Node0x5eacec0;
	Node0x5eace30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%21:\l21:                                               \l  %22 = add nsw i32 %4, -1\l  %23 = add i32 %22, %6\l  %24 = mul nsw i32 %23, %5\l  %25 = udiv i32 %16, %13\l  %26 = mul i32 %25, %13\l  %27 = icmp ugt i32 %16, %26\l  %28 = zext i1 %27 to i32\l  %29 = add i32 %25, %28\l  %30 = mul i32 %29, %13\l  br label %32\l}"];
	Node0x5eace30 -> Node0x5ead4f0;
	Node0x5eacec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%31:\l31:                                               \l  ret void\l}"];
	Node0x5ead4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%32:\l32:                                               \l  %33 = phi i32 [ %19, %21 ], [ %51, %50 ]\l  %34 = freeze i32 %33\l  %35 = freeze i32 %24\l  %36 = sdiv i32 %34, %35\l  %37 = mul i32 %36, %35\l  %38 = sub i32 %34, %37\l  %39 = sdiv i32 %38, %5\l  %40 = mul i32 %36, %4\l  %41 = mul nsw i32 %36, %6\l  %42 = sub nsw i32 %39, %4\l  %43 = tail call i32 @llvm.smax.i32(i32 %42, i32 -1)\l  %44 = add nsw i32 %39, 1\l  %45 = tail call i32 @llvm.smin.i32(i32 %6, i32 %44)\l  %46 = sext i32 %33 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  store float 0.000000e+00, float addrspace(1)* %47, align 4, !tbaa !16\l  %48 = add nsw i32 %43, 1\l  %49 = icmp slt i32 %48, %45\l  br i1 %49, label %53, label %50\l|{<s0>T|<s1>F}}"];
	Node0x5ead4f0:s0 -> Node0x5eaf0d0;
	Node0x5ead4f0:s1 -> Node0x5eac8e0;
	Node0x5eac8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%50:\l50:                                               \l  %51 = add i32 %30, %33\l  %52 = icmp slt i32 %51, %0\l  br i1 %52, label %32, label %31, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5eac8e0:s0 -> Node0x5ead4f0;
	Node0x5eac8e0:s1 -> Node0x5eacec0;
	Node0x5eaf0d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi float [ %67, %53 ], [ 0.000000e+00, %32 ]\l  %55 = phi i32 [ %68, %53 ], [ %48, %32 ]\l  %56 = add nsw i32 %55, %41\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %3, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !16\l  %60 = sub i32 %40, %55\l  %61 = mul i32 %60, %5\l  %62 = add i32 %61, %38\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %2, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !16\l  %66 = fmul contract float %59, %65\l  %67 = fadd contract float %54, %66\l  store float %67, float addrspace(1)* %47, align 4, !tbaa !16\l  %68 = add nsw i32 %55, 1\l  %69 = icmp slt i32 %68, %45\l  br i1 %69, label %53, label %50, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5eaf0d0:s0 -> Node0x5eaf0d0;
	Node0x5eaf0d0:s1 -> Node0x5eac8e0;
}
