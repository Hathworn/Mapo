digraph "CFG for 'vec_asinhf' function" {
	label="CFG for 'vec_asinhf' function";

	Node0x63efbf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = sext i32 %12 to i64\l  %14 = icmp ult i64 %13, %0\l  br i1 %14, label %15, label %173\l|{<s0>T|<s1>F}}"];
	Node0x63efbf0:s0 -> Node0x63f0990;
	Node0x63efbf0:s1 -> Node0x63f1c00;
	Node0x63f0990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = getelementptr inbounds float, float addrspace(1)* %2, i64 %13\l  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %18 = tail call float @llvm.fabs.f32(float %17)\l  %19 = fcmp oge float %18, 0x43F0000000000000\l  %20 = select i1 %19, float 0x3BF0000000000000, float 1.000000e+00\l  %21 = fmul float %18, %20\l  %22 = fmul float %21, %21\l  %23 = fneg float %22\l  %24 = tail call float @llvm.fma.f32(float %21, float %21, float %23)\l  %25 = select i1 %19, float 0x37F0000000000000, float 1.000000e+00\l  %26 = fadd float %25, %22\l  %27 = fsub float %26, %22\l  %28 = fsub float %26, %27\l  %29 = fsub float %22, %28\l  %30 = fsub float %25, %27\l  %31 = fadd float %30, %29\l  %32 = fadd float %24, %31\l  %33 = fadd float %26, %32\l  %34 = tail call float @llvm.sqrt.f32(float %33)\l  %35 = fmul float %34, %34\l  %36 = fneg float %35\l  %37 = tail call float @llvm.fma.f32(float %34, float %34, float %36)\l  %38 = fsub float %33, %26\l  %39 = fsub float %32, %38\l  %40 = fsub float %33, %35\l  %41 = fsub float %33, %40\l  %42 = fsub float %41, %35\l  %43 = fadd float %39, %42\l  %44 = fsub float %43, %37\l  %45 = fadd float %40, %44\l  %46 = fmul float %34, 2.000000e+00\l  %47 = tail call float @llvm.amdgcn.rcp.f32(float %46)\l  %48 = fmul float %47, %45\l  %49 = fcmp oeq float %33, 0.000000e+00\l  %50 = select i1 %49, float 0.000000e+00, float %48\l  %51 = fadd float %34, %50\l  %52 = fsub float %51, %34\l  %53 = fsub float %50, %52\l  %54 = fadd float %21, %51\l  %55 = fsub float %54, %21\l  %56 = fsub float %54, %55\l  %57 = fsub float %21, %56\l  %58 = fsub float %51, %55\l  %59 = fadd float %58, %57\l  %60 = fadd float %53, %59\l  %61 = fadd float %54, %60\l  %62 = fsub float %61, %54\l  %63 = fsub float %60, %62\l  %64 = select i1 %19, i32 64, i32 0\l  %65 = tail call float @llvm.amdgcn.frexp.mant.f32(float %61)\l  %66 = fcmp olt float %65, 0x3FE5555560000000\l  %67 = sext i1 %66 to i32\l  %68 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %61)\l  %69 = add i32 %68, %67\l  %70 = sub nsw i32 0, %69\l  %71 = tail call float @llvm.amdgcn.ldexp.f32(float %61, i32 %70)\l  %72 = tail call float @llvm.amdgcn.ldexp.f32(float %63, i32 %70)\l  %73 = fadd float %71, -1.000000e+00\l  %74 = fadd float %73, 1.000000e+00\l  %75 = fsub float %71, %74\l  %76 = fadd float %72, %75\l  %77 = fadd float %73, %76\l  %78 = fsub float %77, %73\l  %79 = fsub float %76, %78\l  %80 = fadd float %71, 1.000000e+00\l  %81 = fadd float %80, -1.000000e+00\l  %82 = fsub float %71, %81\l  %83 = fadd float %72, %82\l  %84 = fadd float %80, %83\l  %85 = fsub float %84, %80\l  %86 = fsub float %83, %85\l  %87 = tail call float @llvm.amdgcn.rcp.f32(float %84)\l  %88 = fmul float %77, %87\l  %89 = fmul float %84, %88\l  %90 = fneg float %89\l  %91 = tail call float @llvm.fma.f32(float %88, float %84, float %90)\l  %92 = tail call float @llvm.fma.f32(float %88, float %86, float %91)\l  %93 = fadd float %89, %92\l  %94 = fsub float %93, %89\l  %95 = fsub float %92, %94\l  %96 = fsub float %77, %93\l  %97 = fsub float %77, %96\l  %98 = fsub float %97, %93\l  %99 = fadd float %79, %98\l  %100 = fsub float %99, %95\l  %101 = fadd float %96, %100\l  %102 = fmul float %87, %101\l  %103 = fmul float %84, %102\l  %104 = fneg float %103\l  %105 = tail call float @llvm.fma.f32(float %102, float %84, float %104)\l  %106 = tail call float @llvm.fma.f32(float %102, float %86, float %105)\l  %107 = fsub float %101, %96\l  %108 = fsub float %100, %107\l  %109 = fadd float %103, %106\l  %110 = fsub float %109, %103\l  %111 = fsub float %106, %110\l  %112 = fsub float %101, %109\l  %113 = fsub float %101, %112\l  %114 = fsub float %113, %109\l  %115 = fadd float %108, %114\l  %116 = fsub float %115, %111\l  %117 = fadd float %112, %116\l  %118 = fmul float %87, %117\l  %119 = fadd float %88, %102\l  %120 = fsub float %119, %88\l  %121 = fsub float %102, %120\l  %122 = fadd float %121, %118\l  %123 = fadd float %119, %122\l  %124 = fmul float %123, %123\l  %125 = tail call float @llvm.fmuladd.f32(float %124, float\l... 0x3FD36DB580000000, float 0x3FD992B460000000)\l  %126 = tail call float @llvm.fmuladd.f32(float %124, float %125, float\l... 0x3FE5555B40000000)\l  %127 = add nsw i32 %69, %64\l  %128 = sitofp i32 %127 to float\l  %129 = fmul float %128, 0x3FE62E4300000000\l  %130 = fneg float %129\l  %131 = tail call float @llvm.fma.f32(float %128, float 0x3FE62E4300000000,\l... float %130)\l  %132 = tail call float @llvm.fma.f32(float %128, float 0xBE205C6100000000,\l... float %131)\l  %133 = fsub float %123, %119\l  %134 = fsub float %122, %133\l  %135 = fadd float %129, %132\l  %136 = fsub float %135, %129\l  %137 = fsub float %132, %136\l  %138 = tail call float @llvm.amdgcn.ldexp.f32(float %123, i32 1)\l  %139 = tail call float @llvm.amdgcn.ldexp.f32(float %134, i32 1)\l  %140 = fmul float %123, %124\l  %141 = fmul float %140, %126\l  %142 = fadd float %138, %141\l  %143 = fsub float %142, %138\l  %144 = fsub float %141, %143\l  %145 = fadd float %139, %144\l  %146 = fadd float %142, %145\l  %147 = fsub float %146, %142\l  %148 = fsub float %145, %147\l  %149 = fadd float %135, %146\l  %150 = fsub float %149, %135\l  %151 = fsub float %149, %150\l  %152 = fsub float %135, %151\l  %153 = fsub float %146, %150\l  %154 = fadd float %153, %152\l  %155 = fadd float %137, %148\l  %156 = fsub float %155, %137\l  %157 = fsub float %155, %156\l  %158 = fsub float %137, %157\l  %159 = fsub float %148, %156\l  %160 = fadd float %159, %158\l  %161 = fadd float %155, %154\l  %162 = fadd float %149, %161\l  %163 = fsub float %162, %149\l  %164 = fsub float %161, %163\l  %165 = fadd float %160, %164\l  %166 = fadd float %162, %165\l  %167 = fcmp olt float %18, 0x3F30000000000000\l  %168 = tail call i1 @llvm.amdgcn.class.f32(float %18, i32 512)\l  %169 = select i1 %168, i1 true, i1 %167\l  %170 = select i1 %169, float %18, float %166\l  %171 = tail call float @llvm.copysign.f32(float %170, float %17)\l  %172 = getelementptr inbounds float, float addrspace(1)* %1, i64 %13\l  store float %171, float addrspace(1)* %172, align 4, !tbaa !7\l  br label %173\l}"];
	Node0x63f0990 -> Node0x63f1c00;
	Node0x63f1c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%173:\l173:                                              \l  ret void\l}"];
}
