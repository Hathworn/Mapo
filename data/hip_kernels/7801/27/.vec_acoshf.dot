digraph "CFG for 'vec_acoshf' function" {
	label="CFG for 'vec_acoshf' function";

	Node0x542ba60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = sext i32 %12 to i64\l  %14 = icmp ult i64 %13, %0\l  br i1 %14, label %15, label %171\l|{<s0>T|<s1>F}}"];
	Node0x542ba60:s0 -> Node0x542c800;
	Node0x542ba60:s1 -> Node0x542da70;
	Node0x542c800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = getelementptr inbounds float, float addrspace(1)* %2, i64 %13\l  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %18 = fcmp oge float %17, 0x43F0000000000000\l  %19 = select i1 %18, float 0x3BF0000000000000, float 1.000000e+00\l  %20 = fmul float %17, %19\l  %21 = fmul float %20, %20\l  %22 = fneg float %21\l  %23 = tail call float @llvm.fma.f32(float %20, float %20, float %22)\l  %24 = select i1 %18, float 0x37F0000000000000, float 1.000000e+00\l  %25 = fsub float %21, %24\l  %26 = fsub float %25, %21\l  %27 = fsub float %25, %26\l  %28 = fsub float %21, %27\l  %29 = fadd float %24, %26\l  %30 = fsub float %28, %29\l  %31 = fadd float %23, %30\l  %32 = fadd float %25, %31\l  %33 = tail call float @llvm.sqrt.f32(float %32)\l  %34 = fmul float %33, %33\l  %35 = fneg float %34\l  %36 = tail call float @llvm.fma.f32(float %33, float %33, float %35)\l  %37 = fsub float %32, %25\l  %38 = fsub float %31, %37\l  %39 = fsub float %32, %34\l  %40 = fsub float %32, %39\l  %41 = fsub float %40, %34\l  %42 = fadd float %38, %41\l  %43 = fsub float %42, %36\l  %44 = fadd float %39, %43\l  %45 = fmul float %33, 2.000000e+00\l  %46 = tail call float @llvm.amdgcn.rcp.f32(float %45)\l  %47 = fmul float %46, %44\l  %48 = fcmp oeq float %32, 0.000000e+00\l  %49 = select i1 %48, float 0.000000e+00, float %47\l  %50 = fadd float %33, %49\l  %51 = fsub float %50, %33\l  %52 = fsub float %49, %51\l  %53 = fadd float %20, %50\l  %54 = fsub float %53, %20\l  %55 = fsub float %53, %54\l  %56 = fsub float %20, %55\l  %57 = fsub float %50, %54\l  %58 = fadd float %57, %56\l  %59 = fadd float %52, %58\l  %60 = fadd float %53, %59\l  %61 = fsub float %60, %53\l  %62 = fsub float %59, %61\l  %63 = select i1 %18, i32 64, i32 0\l  %64 = tail call float @llvm.amdgcn.frexp.mant.f32(float %60)\l  %65 = fcmp olt float %64, 0x3FE5555560000000\l  %66 = sext i1 %65 to i32\l  %67 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %60)\l  %68 = add i32 %67, %66\l  %69 = sub nsw i32 0, %68\l  %70 = tail call float @llvm.amdgcn.ldexp.f32(float %60, i32 %69)\l  %71 = tail call float @llvm.amdgcn.ldexp.f32(float %62, i32 %69)\l  %72 = fadd float %70, -1.000000e+00\l  %73 = fadd float %72, 1.000000e+00\l  %74 = fsub float %70, %73\l  %75 = fadd float %71, %74\l  %76 = fadd float %72, %75\l  %77 = fsub float %76, %72\l  %78 = fsub float %75, %77\l  %79 = fadd float %70, 1.000000e+00\l  %80 = fadd float %79, -1.000000e+00\l  %81 = fsub float %70, %80\l  %82 = fadd float %71, %81\l  %83 = fadd float %79, %82\l  %84 = fsub float %83, %79\l  %85 = fsub float %82, %84\l  %86 = tail call float @llvm.amdgcn.rcp.f32(float %83)\l  %87 = fmul float %76, %86\l  %88 = fmul float %83, %87\l  %89 = fneg float %88\l  %90 = tail call float @llvm.fma.f32(float %87, float %83, float %89)\l  %91 = tail call float @llvm.fma.f32(float %87, float %85, float %90)\l  %92 = fadd float %88, %91\l  %93 = fsub float %92, %88\l  %94 = fsub float %91, %93\l  %95 = fsub float %76, %92\l  %96 = fsub float %76, %95\l  %97 = fsub float %96, %92\l  %98 = fadd float %78, %97\l  %99 = fsub float %98, %94\l  %100 = fadd float %95, %99\l  %101 = fmul float %86, %100\l  %102 = fmul float %83, %101\l  %103 = fneg float %102\l  %104 = tail call float @llvm.fma.f32(float %101, float %83, float %103)\l  %105 = tail call float @llvm.fma.f32(float %101, float %85, float %104)\l  %106 = fsub float %100, %95\l  %107 = fsub float %99, %106\l  %108 = fadd float %102, %105\l  %109 = fsub float %108, %102\l  %110 = fsub float %105, %109\l  %111 = fsub float %100, %108\l  %112 = fsub float %100, %111\l  %113 = fsub float %112, %108\l  %114 = fadd float %107, %113\l  %115 = fsub float %114, %110\l  %116 = fadd float %111, %115\l  %117 = fmul float %86, %116\l  %118 = fadd float %87, %101\l  %119 = fsub float %118, %87\l  %120 = fsub float %101, %119\l  %121 = fadd float %120, %117\l  %122 = fadd float %118, %121\l  %123 = fmul float %122, %122\l  %124 = tail call float @llvm.fmuladd.f32(float %123, float\l... 0x3FD36DB580000000, float 0x3FD992B460000000)\l  %125 = tail call float @llvm.fmuladd.f32(float %123, float %124, float\l... 0x3FE5555B40000000)\l  %126 = add nsw i32 %68, %63\l  %127 = sitofp i32 %126 to float\l  %128 = fmul float %127, 0x3FE62E4300000000\l  %129 = fneg float %128\l  %130 = tail call float @llvm.fma.f32(float %127, float 0x3FE62E4300000000,\l... float %129)\l  %131 = tail call float @llvm.fma.f32(float %127, float 0xBE205C6100000000,\l... float %130)\l  %132 = fsub float %122, %118\l  %133 = fsub float %121, %132\l  %134 = fadd float %128, %131\l  %135 = fsub float %134, %128\l  %136 = fsub float %131, %135\l  %137 = tail call float @llvm.amdgcn.ldexp.f32(float %122, i32 1)\l  %138 = tail call float @llvm.amdgcn.ldexp.f32(float %133, i32 1)\l  %139 = fmul float %122, %123\l  %140 = fmul float %139, %125\l  %141 = fadd float %137, %140\l  %142 = fsub float %141, %137\l  %143 = fsub float %140, %142\l  %144 = fadd float %138, %143\l  %145 = fadd float %141, %144\l  %146 = fsub float %145, %141\l  %147 = fsub float %144, %146\l  %148 = fadd float %134, %145\l  %149 = fsub float %148, %134\l  %150 = fsub float %148, %149\l  %151 = fsub float %134, %150\l  %152 = fsub float %145, %149\l  %153 = fadd float %152, %151\l  %154 = fadd float %136, %147\l  %155 = fsub float %154, %136\l  %156 = fsub float %154, %155\l  %157 = fsub float %136, %156\l  %158 = fsub float %147, %155\l  %159 = fadd float %158, %157\l  %160 = fadd float %154, %153\l  %161 = fadd float %148, %160\l  %162 = fsub float %161, %148\l  %163 = fsub float %160, %162\l  %164 = fadd float %159, %163\l  %165 = fadd float %161, %164\l  %166 = tail call i1 @llvm.amdgcn.class.f32(float %17, i32 512)\l  %167 = select i1 %166, float %17, float %165\l  %168 = fcmp olt float %17, 1.000000e+00\l  %169 = select i1 %168, float 0x7FF8000000000000, float %167\l  %170 = getelementptr inbounds float, float addrspace(1)* %1, i64 %13\l  store float %169, float addrspace(1)* %170, align 4, !tbaa !7\l  br label %171\l}"];
	Node0x542c800 -> Node0x542da70;
	Node0x542da70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%171:\l171:                                              \l  ret void\l}"];
}
