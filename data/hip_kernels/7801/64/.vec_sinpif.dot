digraph "CFG for 'vec_sinpif' function" {
	label="CFG for 'vec_sinpif' function";

	Node0x4ff0ac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = sext i32 %12 to i64\l  %14 = icmp ult i64 %13, %0\l  br i1 %14, label %15, label %57\l|{<s0>T|<s1>F}}"];
	Node0x4ff0ac0:s0 -> Node0x4ff1860;
	Node0x4ff0ac0:s1 -> Node0x4ff2ad0;
	Node0x4ff1860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = getelementptr inbounds float, float addrspace(1)* %2, i64 %13\l  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %18 = tail call float @llvm.fabs.f32(float %17)\l  %19 = fmul float %18, 5.000000e-01\l  %20 = tail call float @llvm.amdgcn.fract.f32(float %19)\l  %21 = tail call i1 @llvm.amdgcn.class.f32(float %19, i32 516)\l  %22 = fmul float %20, 2.000000e+00\l  %23 = select i1 %21, float 0.000000e+00, float %22\l  %24 = fcmp ogt float %18, 1.000000e+00\l  %25 = select i1 %24, float %23, float %18\l  %26 = fmul float %25, 2.000000e+00\l  %27 = tail call float @llvm.rint.f32(float %26)\l  %28 = tail call float @llvm.fmuladd.f32(float %27, float -5.000000e-01,\l... float %25)\l  %29 = fptosi float %27 to i32\l  %30 = fmul float %28, %28\l  %31 = tail call float @llvm.fmuladd.f32(float %30, float 0x3FCEB54820000000,\l... float 0xBFE3E497C0000000)\l  %32 = tail call float @llvm.fmuladd.f32(float %30, float %31, float\l... 0x400468E6C0000000)\l  %33 = tail call float @llvm.fmuladd.f32(float %30, float %32, float\l... 0xC014ABC1C0000000)\l  %34 = fmul float %28, %30\l  %35 = fmul float %34, %33\l  %36 = tail call float @llvm.fmuladd.f32(float %28, float 0x400921FB60000000,\l... float %35)\l  %37 = tail call float @llvm.fmuladd.f32(float %30, float 0x3FA97CA880000000,\l... float 0x3FCC85D3A0000000)\l  %38 = tail call float @llvm.fmuladd.f32(float %30, float %37, float\l... 0xBFF55A3B40000000)\l  %39 = tail call float @llvm.fmuladd.f32(float %30, float %38, float\l... 0x40103C1A60000000)\l  %40 = tail call float @llvm.fmuladd.f32(float %30, float %39, float\l... 0xC013BD3CC0000000)\l  %41 = tail call float @llvm.fmuladd.f32(float %30, float %40, float\l... 1.000000e+00)\l  %42 = and i32 %29, 1\l  %43 = icmp eq i32 %42, 0\l  %44 = select i1 %43, float %36, float %41\l  %45 = bitcast float %44 to i32\l  %46 = shl i32 %29, 30\l  %47 = and i32 %46, -2147483648\l  %48 = bitcast float %17 to i32\l  %49 = bitcast float %18 to i32\l  %50 = xor i32 %49, %48\l  %51 = xor i32 %50, %47\l  %52 = xor i32 %51, %45\l  %53 = bitcast i32 %52 to float\l  %54 = tail call i1 @llvm.amdgcn.class.f32(float %18, i32 504)\l  %55 = select i1 %54, float %53, float 0x7FF8000000000000\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %13\l  store float %55, float addrspace(1)* %56, align 4, !tbaa !7\l  br label %57\l}"];
	Node0x4ff1860 -> Node0x4ff2ad0;
	Node0x4ff2ad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  ret void\l}"];
}
