digraph "CFG for 'vec_y0f' function" {
	label="CFG for 'vec_y0f' function";

	Node0x621d880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = sext i32 %12 to i64\l  %14 = icmp ult i64 %13, %0\l  br i1 %14, label %15, label %500\l|{<s0>T|<s1>F}}"];
	Node0x621d880:s0 -> Node0x621dba0;
	Node0x621d880:s1 -> Node0x6225930;
	Node0x621dba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%15:\l15:                                               \l  %16 = getelementptr inbounds float, float addrspace(1)* %2, i64 %13\l  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %18 = fcmp ugt float %17, 0x4029180000000000\l  br i1 %18, label %341, label %19\l|{<s0>T|<s1>F}}"];
	Node0x621dba0:s0 -> Node0x6226440;
	Node0x621dba0:s1 -> Node0x62264d0;
	Node0x62264d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%19:\l19:                                               \l  %20 = fcmp olt float %17, 2.000000e+00\l  br i1 %20, label %21, label %46\l|{<s0>T|<s1>F}}"];
	Node0x62264d0:s0 -> Node0x62266a0;
	Node0x62264d0:s1 -> Node0x6226730;
	Node0x62266a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%21:\l21:                                               \l  %22 = fcmp olt float %17, 8.125000e-01\l  br i1 %22, label %23, label %35\l|{<s0>T|<s1>F}}"];
	Node0x62266a0:s0 -> Node0x6226900;
	Node0x62266a0:s1 -> Node0x6226990;
	Node0x6226900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%23:\l23:                                               \l  %24 = fcmp olt float %17, 3.125000e-01\l  br i1 %24, label %72, label %25\l|{<s0>T|<s1>F}}"];
	Node0x6226900:s0 -> Node0x6226b60;
	Node0x6226900:s1 -> Node0x6226bf0;
	Node0x6226bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%25:\l25:                                               \l  %26 = fcmp olt float %17, 4.375000e-01\l  %27 = fcmp olt float %17, 5.625000e-01\l  %28 = fcmp olt float %17, 6.875000e-01\l  %29 = select i1 %28, float 5.625000e-01, float 6.875000e-01\l  %30 = select i1 %28, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 27), float\l... addrspace(4)* getelementptr inbounds ([162 x float], [162 x float]\l... addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 36)\l  %31 = select i1 %27, float 4.375000e-01, float %29\l  %32 = select i1 %27, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 18), float\l... addrspace(4)* %30\l  %33 = select i1 %26, float 3.125000e-01, float %31\l  %34 = select i1 %26, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 9), float\l... addrspace(4)* %32\l  br label %72\l}"];
	Node0x6226bf0 -> Node0x6226b60;
	Node0x6226990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%35:\l35:                                               \l  %36 = fcmp olt float %17, 1.000000e+00\l  %37 = fcmp olt float %17, 1.250000e+00\l  %38 = fcmp olt float %17, 1.625000e+00\l  %39 = select i1 %38, float 1.250000e+00, float 1.625000e+00\l  %40 = select i1 %38, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 63), float\l... addrspace(4)* getelementptr inbounds ([162 x float], [162 x float]\l... addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 72)\l  %41 = select i1 %37, float 1.000000e+00, float %39\l  %42 = select i1 %37, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 54), float\l... addrspace(4)* %40\l  %43 = select i1 %36, float 0xBE4CAFA060000000, float 0.000000e+00\l  %44 = select i1 %36, float 0x3FEC982EC0000000, float %41\l  %45 = select i1 %36, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 45), float\l... addrspace(4)* %42\l  br label %72\l}"];
	Node0x6226990 -> Node0x6226b60;
	Node0x6226730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%46:\l46:                                               \l  %47 = fcmp olt float %17, 0x4019100000000000\l  br i1 %47, label %48, label %61\l|{<s0>T|<s1>F}}"];
	Node0x6226730:s0 -> Node0x62285b0;
	Node0x6226730:s1 -> Node0x6228600;
	Node0x62285b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%48:\l48:                                               \l  %49 = fcmp olt float %17, 2.531250e+00\l  br i1 %49, label %72, label %50\l|{<s0>T|<s1>F}}"];
	Node0x62285b0:s0 -> Node0x6226b60;
	Node0x62285b0:s1 -> Node0x62287d0;
	Node0x62287d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%50:\l50:                                               \l  %51 = fcmp olt float %17, 3.000000e+00\l  br i1 %51, label %72, label %52\l|{<s0>T|<s1>F}}"];
	Node0x62287d0:s0 -> Node0x6226b60;
	Node0x62287d0:s1 -> Node0x62289a0;
	Node0x62289a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%52:\l52:                                               \l  %53 = fcmp olt float %17, 0x400BE00000000000\l  %54 = fcmp olt float %17, 0x4012D00000000000\l  %55 = select i1 %54, float 0x3E7B30AD40000000, float 0x3E8D0F6060000000\l  %56 = select i1 %54, float 0x400FA95340000000, float 0x4015B7FE40000000\l  %57 = select i1 %54, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 108), float\l... addrspace(4)* getelementptr inbounds ([162 x float], [162 x float]\l... addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 117)\l  %58 = select i1 %53, float 0.000000e+00, float %55\l  %59 = select i1 %53, float 3.000000e+00, float %56\l  %60 = select i1 %53, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 99), float\l... addrspace(4)* %57\l  br label %72\l}"];
	Node0x62289a0 -> Node0x6226b60;
	Node0x6228600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%61:\l61:                                               \l  %62 = fcmp olt float %17, 7.843750e+00\l  br i1 %62, label %72, label %63\l|{<s0>T|<s1>F}}"];
	Node0x6228600:s0 -> Node0x6226b60;
	Node0x6228600:s1 -> Node0x62294e0;
	Node0x62294e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%63:\l63:                                               \l  %64 = fcmp olt float %17, 0x4022D80000000000\l  %65 = fcmp olt float %17, 0x4025F80000000000\l  %66 = select i1 %65, float 0xBE94B70560000000, float 0xBE8CAF37E0000000\l  %67 = select i1 %65, float 0x402471D740000000, float 0x40277F9140000000\l  %68 = select i1 %65, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 144), float\l... addrspace(4)* getelementptr inbounds ([162 x float], [162 x float]\l... addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 153)\l  %69 = select i1 %64, float 0x3E9CC2D360000000, float %66\l  %70 = select i1 %64, float 0x40213127A0000000, float %67\l  %71 = select i1 %64, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 135), float\l... addrspace(4)* %68\l  br label %72\l}"];
	Node0x62294e0 -> Node0x6226b60;
	Node0x6226b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%72:\l72:                                               \l  %73 = phi float [ 0.000000e+00, %23 ], [ 0xBE76401B80000000, %48 ], [\l... 0.000000e+00, %50 ], [ 0x3E739C8400000000, %61 ], [ %58, %52 ], [ %69, %63 ],\l... [ 0.000000e+00, %25 ], [ %43, %35 ]\l  %74 = phi float [ 0.000000e+00, %23 ], [ 0x400193BEE0000000, %48 ], [\l... 2.531250e+00, %50 ], [ 0x401C581DC0000000, %61 ], [ %59, %52 ], [ %70, %63 ],\l... [ %33, %25 ], [ %44, %35 ]\l  %75 = phi float addrspace(4)* [ getelementptr inbounds ([162 x float], [162\l... x float] addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 0), %23 ], [\l... getelementptr inbounds ([162 x float], [162 x float] addrspace(4)*\l... @__ocmltbl_M32_Y0, i64 0, i64 81), %48 ], [ getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y0, i64 0, i64 90), %50 ],\l... [ getelementptr inbounds ([162 x float], [162 x float] addrspace(4)*\l... @__ocmltbl_M32_Y0, i64 0, i64 126), %61 ], [ %60, %52 ], [ %71, %63 ], [ %34,\l... %25 ], [ %45, %35 ]\l  %76 = fcmp olt float %17, 3.125000e-01\l  br i1 %76, label %77, label %310\l|{<s0>T|<s1>F}}"];
	Node0x6226b60:s0 -> Node0x622aae0;
	Node0x6226b60:s1 -> Node0x622ab30;
	Node0x622aae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%77:\l77:                                               \l  %78 = tail call float @llvm.fabs.f32(float %17)\l  %79 = fcmp ugt float %78, 0x4029280000000000\l  br i1 %79, label %135, label %80\l|{<s0>T|<s1>F}}"];
	Node0x622aae0:s0 -> Node0x622aef0;
	Node0x622aae0:s1 -> Node0x622af80;
	Node0x622af80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%80:\l80:                                               \l  %81 = fcmp ugt float %78, 0x4019100000000000\l  br i1 %81, label %93, label %82\l|{<s0>T|<s1>F}}"];
	Node0x622af80:s0 -> Node0x622b150;
	Node0x622af80:s1 -> Node0x622b1a0;
	Node0x622b1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%82:\l82:                                               \l  %83 = fcmp ugt float %78, 1.656250e+00\l  br i1 %83, label %84, label %104\l|{<s0>T|<s1>F}}"];
	Node0x622b1a0:s0 -> Node0x622b370;
	Node0x622b1a0:s1 -> Node0x622b400;
	Node0x622b370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%84:\l84:                                               \l  %85 = fcmp ugt float %78, 3.125000e+00\l  %86 = fcmp ugt float %78, 4.687500e+00\l  %87 = select i1 %86, float 0xBE734F46E0000000, float 0xBE74A121E0000000\l  %88 = select i1 %86, float 0x4016148F60000000, float 0x400EA75580000000\l  %89 = select i1 %86, float addrspace(4)* getelementptr inbounds ([72 x\l... float], [72 x float] addrspace(4)* @__ocmltbl_M32_J0, i64 0, i64 27), float\l... addrspace(4)* getelementptr inbounds ([72 x float], [72 x float]\l... addrspace(4)* @__ocmltbl_M32_J0, i64 0, i64 18)\l  %90 = select i1 %85, float %87, float 0x3E7D2E3680000000\l  %91 = select i1 %85, float %88, float 0x40033D1520000000\l  %92 = select i1 %85, float addrspace(4)* %89, float addrspace(4)*\l... getelementptr inbounds ([72 x float], [72 x float] addrspace(4)*\l... @__ocmltbl_M32_J0, i64 0, i64 9)\l  br label %104\l}"];
	Node0x622b370 -> Node0x622b400;
	Node0x622b150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%93:\l93:                                               \l  %94 = fcmp ugt float %78, 7.843750e+00\l  br i1 %94, label %95, label %104\l|{<s0>T|<s1>F}}"];
	Node0x622b150:s0 -> Node0x622bf70;
	Node0x622b150:s1 -> Node0x622b400;
	Node0x622bf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%95:\l95:                                               \l  %96 = fcmp ugt float %78, 0x4022D80000000000\l  %97 = fcmp ugt float %78, 0x4025F80000000000\l  %98 = select i1 %97, float 0x3E504E56C0000000, float 0xBE9E8407A0000000\l  %99 = select i1 %97, float 0x4027954400000000, float 0x402458D0E0000000\l  %100 = select i1 %97, float addrspace(4)* getelementptr inbounds ([72 x\l... float], [72 x float] addrspace(4)* @__ocmltbl_M32_J0, i64 0, i64 63), float\l... addrspace(4)* getelementptr inbounds ([72 x float], [72 x float]\l... addrspace(4)* @__ocmltbl_M32_J0, i64 0, i64 54)\l  %101 = select i1 %96, float %98, float 0x3E9999BDA0000000\l  %102 = select i1 %96, float %99, float 0x40214EB560000000\l  %103 = select i1 %96, float addrspace(4)* %100, float addrspace(4)*\l... getelementptr inbounds ([72 x float], [72 x float] addrspace(4)*\l... @__ocmltbl_M32_J0, i64 0, i64 45)\l  br label %104\l}"];
	Node0x622bf70 -> Node0x622b400;
	Node0x622b400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%104:\l104:                                              \l  %105 = phi float [ 0.000000e+00, %82 ], [ 0xBE88971B60000000, %93 ], [ %90,\l... %84 ], [ %101, %95 ]\l  %106 = phi float [ 0.000000e+00, %82 ], [ 0x401C0FF600000000, %93 ], [ %91,\l... %84 ], [ %102, %95 ]\l  %107 = phi float addrspace(4)* [ getelementptr inbounds ([72 x float], [72 x\l... float] addrspace(4)* @__ocmltbl_M32_J0, i64 0, i64 0), %82 ], [ getelementptr\l... inbounds ([72 x float], [72 x float] addrspace(4)* @__ocmltbl_M32_J0, i64 0,\l... i64 36), %93 ], [ %92, %84 ], [ %103, %95 ]\l  %108 = fsub float %78, %106\l  %109 = fsub float %108, %105\l  %110 = getelementptr inbounds float, float addrspace(4)* %107, i64 8\l  %111 = load float, float addrspace(4)* %110, align 4, !tbaa !11\l  %112 = getelementptr inbounds float, float addrspace(4)* %107, i64 7\l  %113 = load float, float addrspace(4)* %112, align 4, !tbaa !11\l  %114 = tail call float @llvm.fmuladd.f32(float %109, float %111, float %113)\l  %115 = getelementptr inbounds float, float addrspace(4)* %107, i64 6\l  %116 = load float, float addrspace(4)* %115, align 4, !tbaa !11\l  %117 = tail call float @llvm.fmuladd.f32(float %109, float %114, float %116)\l  %118 = getelementptr inbounds float, float addrspace(4)* %107, i64 5\l  %119 = load float, float addrspace(4)* %118, align 4, !tbaa !11\l  %120 = tail call float @llvm.fmuladd.f32(float %109, float %117, float %119)\l  %121 = getelementptr inbounds float, float addrspace(4)* %107, i64 4\l  %122 = load float, float addrspace(4)* %121, align 4, !tbaa !11\l  %123 = tail call float @llvm.fmuladd.f32(float %109, float %120, float %122)\l  %124 = getelementptr inbounds float, float addrspace(4)* %107, i64 3\l  %125 = load float, float addrspace(4)* %124, align 4, !tbaa !11\l  %126 = tail call float @llvm.fmuladd.f32(float %109, float %123, float %125)\l  %127 = getelementptr inbounds float, float addrspace(4)* %107, i64 2\l  %128 = load float, float addrspace(4)* %127, align 4, !tbaa !11\l  %129 = tail call float @llvm.fmuladd.f32(float %109, float %126, float %128)\l  %130 = getelementptr inbounds float, float addrspace(4)* %107, i64 1\l  %131 = load float, float addrspace(4)* %130, align 4, !tbaa !11\l  %132 = tail call float @llvm.fmuladd.f32(float %109, float %129, float %131)\l  %133 = load float, float addrspace(4)* %107, align 4, !tbaa !11\l  %134 = tail call float @llvm.fmuladd.f32(float %109, float %132, float %133)\l  br label %292\l}"];
	Node0x622b400 -> Node0x622ef50;
	Node0x622aef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%135:\l135:                                              \l  %136 = fdiv float 1.000000e+00, %78, !fpmath !15\l  %137 = fmul float %136, %136\l  %138 = tail call float @llvm.fmuladd.f32(float %137, float\l... 0xBFF5EC5E60000000, float 0x3FCAAFB080000000)\l  %139 = tail call float @llvm.fmuladd.f32(float %137, float %138, float\l... 0xBFB0AA9260000000)\l  %140 = tail call float @llvm.fmuladd.f32(float %137, float %139, float\l... 1.250000e-01)\l  %141 = fmul float %136, %140\l  %142 = tail call float @llvm.amdgcn.rsq.f32(float %78)\l  %143 = fmul float %142, 0x3FE9884540000000\l  %144 = tail call float @llvm.fmuladd.f32(float %137, float\l... 0x3FB92AECC0000000, float 0xBFAFFE4720000000)\l  %145 = tail call float @llvm.fmuladd.f32(float %137, float %144, float\l... 1.000000e+00)\l  %146 = fmul float %143, %145\l  %147 = fcmp olt float %78, 1.310720e+05\l  br i1 %147, label %148, label %155\l|{<s0>T|<s1>F}}"];
	Node0x622aef0:s0 -> Node0x622fe60;
	Node0x622aef0:s1 -> Node0x622fef0;
	Node0x622fe60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%148:\l148:                                              \l  %149 = fmul float %78, 0x3FE45F3060000000\l  %150 = tail call float @llvm.rint.f32(float %149)\l  %151 = tail call float @llvm.fma.f32(float %150, float 0xBFF921FB40000000,\l... float %78)\l  %152 = tail call float @llvm.fma.f32(float %150, float 0xBE74442D00000000,\l... float %151)\l  %153 = tail call float @llvm.fma.f32(float %150, float 0xBCF8469880000000,\l... float %152)\l  %154 = fptosi float %150 to i32\l  br label %261\l}"];
	Node0x622fe60 -> Node0x62308d0;
	Node0x622fef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%155:\l155:                                              \l  %156 = bitcast float %78 to i32\l  %157 = lshr i32 %156, 23\l  %158 = and i32 %156, 8388607\l  %159 = or i32 %158, 8388608\l  %160 = zext i32 %159 to i64\l  %161 = mul nuw nsw i64 %160, 4266746795\l  %162 = trunc i64 %161 to i32\l  %163 = lshr i64 %161, 32\l  %164 = mul nuw nsw i64 %160, 1011060801\l  %165 = add nuw nsw i64 %163, %164\l  %166 = trunc i64 %165 to i32\l  %167 = lshr i64 %165, 32\l  %168 = mul nuw nsw i64 %160, 3680671129\l  %169 = add nuw nsw i64 %167, %168\l  %170 = trunc i64 %169 to i32\l  %171 = lshr i64 %169, 32\l  %172 = mul nuw nsw i64 %160, 4113882560\l  %173 = add nuw nsw i64 %171, %172\l  %174 = trunc i64 %173 to i32\l  %175 = lshr i64 %173, 32\l  %176 = mul nuw nsw i64 %160, 4230436817\l  %177 = add nuw nsw i64 %175, %176\l  %178 = trunc i64 %177 to i32\l  %179 = lshr i64 %177, 32\l  %180 = mul nuw nsw i64 %160, 1313084713\l  %181 = add nuw nsw i64 %179, %180\l  %182 = trunc i64 %181 to i32\l  %183 = lshr i64 %181, 32\l  %184 = mul nuw nsw i64 %160, 2734261102\l  %185 = add nuw nsw i64 %183, %184\l  %186 = trunc i64 %185 to i32\l  %187 = lshr i64 %185, 32\l  %188 = trunc i64 %187 to i32\l  %189 = add nsw i32 %157, -120\l  %190 = icmp ugt i32 %189, 63\l  %191 = select i1 %190, i32 %182, i32 %188\l  %192 = select i1 %190, i32 %178, i32 %186\l  %193 = select i1 %190, i32 %174, i32 %182\l  %194 = select i1 %190, i32 %170, i32 %178\l  %195 = select i1 %190, i32 %166, i32 %174\l  %196 = select i1 %190, i32 %162, i32 %170\l  %197 = select i1 %190, i32 -64, i32 0\l  %198 = add nsw i32 %197, %189\l  %199 = icmp ugt i32 %198, 31\l  %200 = select i1 %199, i32 %192, i32 %191\l  %201 = select i1 %199, i32 %193, i32 %192\l  %202 = select i1 %199, i32 %194, i32 %193\l  %203 = select i1 %199, i32 %195, i32 %194\l  %204 = select i1 %199, i32 %196, i32 %195\l  %205 = select i1 %199, i32 -32, i32 0\l  %206 = add nsw i32 %205, %198\l  %207 = icmp ugt i32 %206, 31\l  %208 = select i1 %207, i32 %201, i32 %200\l  %209 = select i1 %207, i32 %202, i32 %201\l  %210 = select i1 %207, i32 %203, i32 %202\l  %211 = select i1 %207, i32 %204, i32 %203\l  %212 = select i1 %207, i32 -32, i32 0\l  %213 = add nsw i32 %212, %206\l  %214 = icmp eq i32 %213, 0\l  %215 = sub nsw i32 32, %213\l  %216 = tail call i32 @llvm.fshr.i32(i32 %208, i32 %209, i32 %215)\l  %217 = tail call i32 @llvm.fshr.i32(i32 %209, i32 %210, i32 %215)\l  %218 = tail call i32 @llvm.fshr.i32(i32 %210, i32 %211, i32 %215)\l  %219 = select i1 %214, i32 %208, i32 %216\l  %220 = select i1 %214, i32 %209, i32 %217\l  %221 = select i1 %214, i32 %210, i32 %218\l  %222 = lshr i32 %219, 29\l  %223 = tail call i32 @llvm.fshl.i32(i32 %219, i32 %220, i32 2)\l  %224 = tail call i32 @llvm.fshl.i32(i32 %220, i32 %221, i32 2)\l  %225 = tail call i32 @llvm.fshl.i32(i32 %221, i32 %211, i32 2)\l  %226 = and i32 %222, 1\l  %227 = sub nsw i32 0, %226\l  %228 = shl i32 %222, 31\l  %229 = xor i32 %223, %227\l  %230 = xor i32 %224, %227\l  %231 = xor i32 %225, %227\l  %232 = tail call i32 @llvm.ctlz.i32(i32 %229, i1 false), !range !16\l  %233 = sub nsw i32 31, %232\l  %234 = tail call i32 @llvm.fshr.i32(i32 %229, i32 %230, i32 %233)\l  %235 = tail call i32 @llvm.fshr.i32(i32 %230, i32 %231, i32 %233)\l  %236 = shl nuw nsw i32 %232, 23\l  %237 = sub nuw nsw i32 1056964608, %236\l  %238 = lshr i32 %234, 9\l  %239 = or i32 %238, %237\l  %240 = or i32 %239, %228\l  %241 = bitcast i32 %240 to float\l  %242 = tail call i32 @llvm.fshl.i32(i32 %234, i32 %235, i32 23)\l  %243 = tail call i32 @llvm.ctlz.i32(i32 %242, i1 false), !range !16\l  %244 = fmul float %241, 0x3FF921FB40000000\l  %245 = add nuw nsw i32 %243, %232\l  %246 = shl nuw nsw i32 %245, 23\l  %247 = sub nuw nsw i32 855638016, %246\l  %248 = sub nsw i32 31, %243\l  %249 = tail call i32 @llvm.fshr.i32(i32 %242, i32 %235, i32 %248)\l  %250 = lshr i32 %249, 9\l  %251 = or i32 %247, %250\l  %252 = or i32 %251, %228\l  %253 = bitcast i32 %252 to float\l  %254 = fneg float %244\l  %255 = tail call float @llvm.fma.f32(float %241, float 0x3FF921FB40000000,\l... float %254)\l  %256 = tail call float @llvm.fma.f32(float %241, float 0x3E74442D00000000,\l... float %255)\l  %257 = tail call float @llvm.fma.f32(float %253, float 0x3FF921FB40000000,\l... float %256)\l  %258 = fadd float %244, %257\l  %259 = lshr i32 %219, 30\l  %260 = add nuw nsw i32 %226, %259\l  br label %261\l}"];
	Node0x622fef0 -> Node0x62308d0;
	Node0x62308d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%261:\l261:                                              \l  %262 = phi float [ %153, %148 ], [ %258, %155 ]\l  %263 = phi i32 [ %154, %148 ], [ %260, %155 ]\l  %264 = and i32 %263, 3\l  %265 = fcmp olt float %262, %141\l  %266 = sext i1 %265 to i32\l  %267 = add nsw i32 %264, %266\l  %268 = fsub float %262, %141\l  %269 = select i1 %265, float 0x3FE921FB60000000, float 0xBFE921FB60000000\l  %270 = fadd float %268, %269\l  %271 = fmul float %270, %270\l  %272 = tail call float @llvm.fmuladd.f32(float %271, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %273 = tail call float @llvm.fmuladd.f32(float %271, float %272, float\l... 0xBFC55553A0000000)\l  %274 = fmul float %271, %273\l  %275 = tail call float @llvm.fmuladd.f32(float %270, float %274, float %270)\l  %276 = tail call float @llvm.fmuladd.f32(float %271, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %277 = tail call float @llvm.fmuladd.f32(float %271, float %276, float\l... 0x3FA5557EE0000000)\l  %278 = tail call float @llvm.fmuladd.f32(float %271, float %277, float\l... 0xBFE0000080000000)\l  %279 = tail call float @llvm.fmuladd.f32(float %271, float %278, float\l... 1.000000e+00)\l  %280 = fneg float %275\l  %281 = and i32 %267, 1\l  %282 = icmp eq i32 %281, 0\l  %283 = select i1 %282, float %279, float %280\l  %284 = bitcast float %283 to i32\l  %285 = shl i32 %267, 30\l  %286 = and i32 %285, -2147483648\l  %287 = xor i32 %286, %284\l  %288 = bitcast i32 %287 to float\l  %289 = fmul float %146, %288\l  %290 = tail call i1 @llvm.amdgcn.class.f32(float %78, i32 512)\l  %291 = select i1 %290, float 0.000000e+00, float %289\l  br label %292\l}"];
	Node0x62308d0 -> Node0x622ef50;
	Node0x622ef50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%292:\l292:                                              \l  %293 = phi float [ %134, %104 ], [ %291, %261 ]\l  %294 = fmul float %293, 0x3FE45F3060000000\l  %295 = tail call i1 @llvm.amdgcn.class.f32(float %17, i32 144)\l  %296 = select i1 %295, float 0x41F0000000000000, float 1.000000e+00\l  %297 = fmul float %17, %296\l  %298 = tail call float @llvm.log2.f32(float %297)\l  %299 = fmul float %298, 0x3FE62E42E0000000\l  %300 = tail call i1 @llvm.amdgcn.class.f32(float %298, i32 519)\l  %301 = fneg float %299\l  %302 = tail call float @llvm.fma.f32(float %298, float 0x3FE62E42E0000000,\l... float %301)\l  %303 = tail call float @llvm.fma.f32(float %298, float 0x3E6EFA39E0000000,\l... float %302)\l  %304 = fadd float %299, %303\l  %305 = select i1 %300, float %298, float %304\l  %306 = select i1 %295, float 0x40362E4300000000, float 0.000000e+00\l  %307 = fsub float %305, %306\l  %308 = fmul float %307, %294\l  %309 = fmul float %17, %17\l  br label %310\l}"];
	Node0x622ef50 -> Node0x622ab30;
	Node0x622ab30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%310:\l310:                                              \l  %311 = phi float [ %308, %292 ], [ 0.000000e+00, %72 ]\l  %312 = phi float [ %309, %292 ], [ %17, %72 ]\l  %313 = fsub float %312, %74\l  %314 = fsub float %313, %73\l  %315 = getelementptr inbounds float, float addrspace(4)* %75, i64 8\l  %316 = load float, float addrspace(4)* %315, align 4, !tbaa !11\l  %317 = getelementptr inbounds float, float addrspace(4)* %75, i64 7\l  %318 = load float, float addrspace(4)* %317, align 4, !tbaa !11\l  %319 = tail call float @llvm.fmuladd.f32(float %314, float %316, float %318)\l  %320 = getelementptr inbounds float, float addrspace(4)* %75, i64 6\l  %321 = load float, float addrspace(4)* %320, align 4, !tbaa !11\l  %322 = tail call float @llvm.fmuladd.f32(float %314, float %319, float %321)\l  %323 = getelementptr inbounds float, float addrspace(4)* %75, i64 5\l  %324 = load float, float addrspace(4)* %323, align 4, !tbaa !11\l  %325 = tail call float @llvm.fmuladd.f32(float %314, float %322, float %324)\l  %326 = getelementptr inbounds float, float addrspace(4)* %75, i64 4\l  %327 = load float, float addrspace(4)* %326, align 4, !tbaa !11\l  %328 = tail call float @llvm.fmuladd.f32(float %314, float %325, float %327)\l  %329 = getelementptr inbounds float, float addrspace(4)* %75, i64 3\l  %330 = load float, float addrspace(4)* %329, align 4, !tbaa !11\l  %331 = tail call float @llvm.fmuladd.f32(float %314, float %328, float %330)\l  %332 = getelementptr inbounds float, float addrspace(4)* %75, i64 2\l  %333 = load float, float addrspace(4)* %332, align 4, !tbaa !11\l  %334 = tail call float @llvm.fmuladd.f32(float %314, float %331, float %333)\l  %335 = getelementptr inbounds float, float addrspace(4)* %75, i64 1\l  %336 = load float, float addrspace(4)* %335, align 4, !tbaa !11\l  %337 = tail call float @llvm.fmuladd.f32(float %314, float %334, float %336)\l  %338 = load float, float addrspace(4)* %75, align 4, !tbaa !11\l  %339 = tail call float @llvm.fmuladd.f32(float %314, float %337, float %338)\l  %340 = fadd float %311, %339\l  br label %497\l}"];
	Node0x622ab30 -> Node0x623acb0;
	Node0x6226440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%341:\l341:                                              \l  %342 = fdiv float 1.000000e+00, %17, !fpmath !15\l  %343 = fmul float %342, %342\l  %344 = tail call float @llvm.fmuladd.f32(float %343, float\l... 0xBFF5EC5E60000000, float 0x3FCAAFB080000000)\l  %345 = tail call float @llvm.fmuladd.f32(float %343, float %344, float\l... 0xBFB0AA9260000000)\l  %346 = tail call float @llvm.fmuladd.f32(float %343, float %345, float\l... 1.250000e-01)\l  %347 = fmul float %342, %346\l  %348 = tail call float @llvm.amdgcn.rsq.f32(float %17)\l  %349 = fmul float %348, 0x3FE9884540000000\l  %350 = tail call float @llvm.fmuladd.f32(float %343, float\l... 0x3FB92AECC0000000, float 0xBFAFFE4720000000)\l  %351 = tail call float @llvm.fmuladd.f32(float %343, float %350, float\l... 1.000000e+00)\l  %352 = fmul float %349, %351\l  %353 = fcmp olt float %17, 1.310720e+05\l  br i1 %353, label %354, label %361\l|{<s0>T|<s1>F}}"];
	Node0x6226440:s0 -> Node0x623bdc0;
	Node0x6226440:s1 -> Node0x623be10;
	Node0x623bdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%354:\l354:                                              \l  %355 = fmul float %17, 0x3FE45F3060000000\l  %356 = tail call float @llvm.rint.f32(float %355)\l  %357 = tail call float @llvm.fma.f32(float %356, float 0xBFF921FB40000000,\l... float %17)\l  %358 = tail call float @llvm.fma.f32(float %356, float 0xBE74442D00000000,\l... float %357)\l  %359 = tail call float @llvm.fma.f32(float %356, float 0xBCF8469880000000,\l... float %358)\l  %360 = fptosi float %356 to i32\l  br label %467\l}"];
	Node0x623bdc0 -> Node0x623c4d0;
	Node0x623be10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%361:\l361:                                              \l  %362 = bitcast float %17 to i32\l  %363 = lshr i32 %362, 23\l  %364 = and i32 %362, 8388607\l  %365 = or i32 %364, 8388608\l  %366 = zext i32 %365 to i64\l  %367 = mul nuw nsw i64 %366, 4266746795\l  %368 = trunc i64 %367 to i32\l  %369 = lshr i64 %367, 32\l  %370 = mul nuw nsw i64 %366, 1011060801\l  %371 = add nuw nsw i64 %369, %370\l  %372 = trunc i64 %371 to i32\l  %373 = lshr i64 %371, 32\l  %374 = mul nuw nsw i64 %366, 3680671129\l  %375 = add nuw nsw i64 %373, %374\l  %376 = trunc i64 %375 to i32\l  %377 = lshr i64 %375, 32\l  %378 = mul nuw nsw i64 %366, 4113882560\l  %379 = add nuw nsw i64 %377, %378\l  %380 = trunc i64 %379 to i32\l  %381 = lshr i64 %379, 32\l  %382 = mul nuw nsw i64 %366, 4230436817\l  %383 = add nuw nsw i64 %381, %382\l  %384 = trunc i64 %383 to i32\l  %385 = lshr i64 %383, 32\l  %386 = mul nuw nsw i64 %366, 1313084713\l  %387 = add nuw nsw i64 %385, %386\l  %388 = trunc i64 %387 to i32\l  %389 = lshr i64 %387, 32\l  %390 = mul nuw nsw i64 %366, 2734261102\l  %391 = add nuw nsw i64 %389, %390\l  %392 = trunc i64 %391 to i32\l  %393 = lshr i64 %391, 32\l  %394 = trunc i64 %393 to i32\l  %395 = add nsw i32 %363, -120\l  %396 = icmp ugt i32 %395, 63\l  %397 = select i1 %396, i32 %388, i32 %394\l  %398 = select i1 %396, i32 %384, i32 %392\l  %399 = select i1 %396, i32 %380, i32 %388\l  %400 = select i1 %396, i32 %376, i32 %384\l  %401 = select i1 %396, i32 %372, i32 %380\l  %402 = select i1 %396, i32 %368, i32 %376\l  %403 = select i1 %396, i32 -64, i32 0\l  %404 = add nsw i32 %403, %395\l  %405 = icmp ugt i32 %404, 31\l  %406 = select i1 %405, i32 %398, i32 %397\l  %407 = select i1 %405, i32 %399, i32 %398\l  %408 = select i1 %405, i32 %400, i32 %399\l  %409 = select i1 %405, i32 %401, i32 %400\l  %410 = select i1 %405, i32 %402, i32 %401\l  %411 = select i1 %405, i32 -32, i32 0\l  %412 = add nsw i32 %411, %404\l  %413 = icmp ugt i32 %412, 31\l  %414 = select i1 %413, i32 %407, i32 %406\l  %415 = select i1 %413, i32 %408, i32 %407\l  %416 = select i1 %413, i32 %409, i32 %408\l  %417 = select i1 %413, i32 %410, i32 %409\l  %418 = select i1 %413, i32 -32, i32 0\l  %419 = add nsw i32 %418, %412\l  %420 = icmp eq i32 %419, 0\l  %421 = sub nsw i32 32, %419\l  %422 = tail call i32 @llvm.fshr.i32(i32 %414, i32 %415, i32 %421)\l  %423 = tail call i32 @llvm.fshr.i32(i32 %415, i32 %416, i32 %421)\l  %424 = tail call i32 @llvm.fshr.i32(i32 %416, i32 %417, i32 %421)\l  %425 = select i1 %420, i32 %414, i32 %422\l  %426 = select i1 %420, i32 %415, i32 %423\l  %427 = select i1 %420, i32 %416, i32 %424\l  %428 = lshr i32 %425, 29\l  %429 = tail call i32 @llvm.fshl.i32(i32 %425, i32 %426, i32 2)\l  %430 = tail call i32 @llvm.fshl.i32(i32 %426, i32 %427, i32 2)\l  %431 = tail call i32 @llvm.fshl.i32(i32 %427, i32 %417, i32 2)\l  %432 = and i32 %428, 1\l  %433 = sub nsw i32 0, %432\l  %434 = shl i32 %428, 31\l  %435 = xor i32 %429, %433\l  %436 = xor i32 %430, %433\l  %437 = xor i32 %431, %433\l  %438 = tail call i32 @llvm.ctlz.i32(i32 %435, i1 false), !range !16\l  %439 = sub nsw i32 31, %438\l  %440 = tail call i32 @llvm.fshr.i32(i32 %435, i32 %436, i32 %439)\l  %441 = tail call i32 @llvm.fshr.i32(i32 %436, i32 %437, i32 %439)\l  %442 = shl nuw nsw i32 %438, 23\l  %443 = sub nuw nsw i32 1056964608, %442\l  %444 = lshr i32 %440, 9\l  %445 = or i32 %444, %443\l  %446 = or i32 %445, %434\l  %447 = bitcast i32 %446 to float\l  %448 = tail call i32 @llvm.fshl.i32(i32 %440, i32 %441, i32 23)\l  %449 = tail call i32 @llvm.ctlz.i32(i32 %448, i1 false), !range !16\l  %450 = fmul float %447, 0x3FF921FB40000000\l  %451 = add nuw nsw i32 %449, %438\l  %452 = shl nuw nsw i32 %451, 23\l  %453 = sub nuw nsw i32 855638016, %452\l  %454 = sub nsw i32 31, %449\l  %455 = tail call i32 @llvm.fshr.i32(i32 %448, i32 %441, i32 %454)\l  %456 = lshr i32 %455, 9\l  %457 = or i32 %453, %456\l  %458 = or i32 %457, %434\l  %459 = bitcast i32 %458 to float\l  %460 = fneg float %450\l  %461 = tail call float @llvm.fma.f32(float %447, float 0x3FF921FB40000000,\l... float %460)\l  %462 = tail call float @llvm.fma.f32(float %447, float 0x3E74442D00000000,\l... float %461)\l  %463 = tail call float @llvm.fma.f32(float %459, float 0x3FF921FB40000000,\l... float %462)\l  %464 = fadd float %450, %463\l  %465 = lshr i32 %425, 30\l  %466 = add nuw nsw i32 %432, %465\l  br label %467\l}"];
	Node0x623be10 -> Node0x623c4d0;
	Node0x623c4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%467:\l467:                                              \l  %468 = phi float [ %359, %354 ], [ %464, %361 ]\l  %469 = phi i32 [ %360, %354 ], [ %466, %361 ]\l  %470 = and i32 %469, 3\l  %471 = fcmp olt float %468, %347\l  %472 = sext i1 %471 to i32\l  %473 = add nsw i32 %470, %472\l  %474 = fsub float %468, %347\l  %475 = select i1 %471, float 0x3FE921FB60000000, float 0xBFE921FB60000000\l  %476 = fadd float %474, %475\l  %477 = fmul float %476, %476\l  %478 = tail call float @llvm.fmuladd.f32(float %477, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %479 = tail call float @llvm.fmuladd.f32(float %477, float %478, float\l... 0xBFC55553A0000000)\l  %480 = fmul float %477, %479\l  %481 = tail call float @llvm.fmuladd.f32(float %476, float %480, float %476)\l  %482 = tail call float @llvm.fmuladd.f32(float %477, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %483 = tail call float @llvm.fmuladd.f32(float %477, float %482, float\l... 0x3FA5557EE0000000)\l  %484 = tail call float @llvm.fmuladd.f32(float %477, float %483, float\l... 0xBFE0000080000000)\l  %485 = tail call float @llvm.fmuladd.f32(float %477, float %484, float\l... 1.000000e+00)\l  %486 = and i32 %473, 1\l  %487 = icmp eq i32 %486, 0\l  %488 = select i1 %487, float %481, float %485\l  %489 = bitcast float %488 to i32\l  %490 = shl i32 %473, 30\l  %491 = and i32 %490, -2147483648\l  %492 = xor i32 %491, %489\l  %493 = bitcast i32 %492 to float\l  %494 = fmul float %352, %493\l  %495 = tail call i1 @llvm.amdgcn.class.f32(float %17, i32 512)\l  %496 = select i1 %495, float 0.000000e+00, float %494\l  br label %497\l}"];
	Node0x623c4d0 -> Node0x623acb0;
	Node0x623acb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%497:\l497:                                              \l  %498 = phi float [ %340, %310 ], [ %496, %467 ]\l  %499 = getelementptr inbounds float, float addrspace(1)* %1, i64 %13\l  store float %498, float addrspace(1)* %499, align 4, !tbaa !7\l  br label %500\l}"];
	Node0x623acb0 -> Node0x6225930;
	Node0x6225930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%500:\l500:                                              \l  ret void\l}"];
}
