digraph "CFG for 'vec_asinf' function" {
	label="CFG for 'vec_asinf' function";

	Node0x6339710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = sext i32 %12 to i64\l  %14 = icmp ult i64 %13, %0\l  br i1 %14, label %15, label %38\l|{<s0>T|<s1>F}}"];
	Node0x6339710:s0 -> Node0x633a4b0;
	Node0x6339710:s1 -> Node0x633b720;
	Node0x633a4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = getelementptr inbounds float, float addrspace(1)* %2, i64 %13\l  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %18 = tail call float @llvm.fabs.f32(float %17)\l  %19 = tail call float @llvm.fmuladd.f32(float %18, float -5.000000e-01,\l... float 5.000000e-01)\l  %20 = fmul float %17, %17\l  %21 = fcmp oge float %18, 5.000000e-01\l  %22 = select i1 %21, float %19, float %20\l  %23 = tail call float @llvm.fmuladd.f32(float %22, float 0x3FA38434E0000000,\l... float 0x3F8BF8BB40000000)\l  %24 = tail call float @llvm.fmuladd.f32(float %22, float %23, float\l... 0x3FA0698780000000)\l  %25 = tail call float @llvm.fmuladd.f32(float %22, float %24, float\l... 0x3FA6C83620000000)\l  %26 = tail call float @llvm.fmuladd.f32(float %22, float %25, float\l... 0x3FB3337900000000)\l  %27 = tail call float @llvm.fmuladd.f32(float %22, float %26, float\l... 0x3FC5555580000000)\l  %28 = fmul float %22, %27\l  %29 = tail call float @llvm.sqrt.f32(float %22)\l  %30 = tail call float @llvm.fmuladd.f32(float %29, float %28, float %29)\l  %31 = fmul float %30, 2.000000e+00\l  %32 = fsub float 0x3FF921FB60000000, %31\l  %33 = tail call float @llvm.fmuladd.f32(float %18, float %28, float %18)\l  %34 = fcmp olt float %18, 5.000000e-01\l  %35 = select i1 %34, float %33, float %32\l  %36 = tail call float @llvm.copysign.f32(float %35, float %17)\l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 %13\l  store float %36, float addrspace(1)* %37, align 4, !tbaa !7\l  br label %38\l}"];
	Node0x633a4b0 -> Node0x633b720;
	Node0x633b720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  ret void\l}"];
}
