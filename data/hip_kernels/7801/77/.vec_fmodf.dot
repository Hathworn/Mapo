digraph "CFG for 'vec_fmodf' function" {
	label="CFG for 'vec_fmodf' function";

	Node0x5e03120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = sext i32 %13 to i64\l  %15 = icmp ult i64 %14, %0\l  br i1 %15, label %16, label %79\l|{<s0>T|<s1>F}}"];
	Node0x5e03120:s0 -> Node0x5e031b0;
	Node0x5e03120:s1 -> Node0x5e05130;
	Node0x5e031b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%16:\l16:                                               \l  %17 = getelementptr inbounds float, float addrspace(1)* %2, i64 %14\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %19 = getelementptr inbounds float, float addrspace(1)* %3, i64 %14\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %21 = tail call float @llvm.fabs.f32(float %18)\l  %22 = tail call float @llvm.fabs.f32(float %20)\l  %23 = fcmp ogt float %21, %22\l  br i1 %23, label %24, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5e031b0:s0 -> Node0x5e066b0;
	Node0x5e031b0:s1 -> Node0x5e06740;
	Node0x5e066b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%24:\l24:                                               \l  %25 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %21)\l  %26 = tail call float @llvm.amdgcn.frexp.mant.f32(float %21)\l  %27 = tail call float @llvm.amdgcn.ldexp.f32(float %26, i32 12)\l  %28 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %22)\l  %29 = add nsw i32 %28, -1\l  %30 = tail call float @llvm.amdgcn.frexp.mant.f32(float %22)\l  %31 = tail call float @llvm.amdgcn.ldexp.f32(float %30, i32 1)\l  %32 = sub i32 %25, %28\l  %33 = tail call float @llvm.amdgcn.rcp.f32(float %31)\l  %34 = icmp sgt i32 %32, 12\l  br i1 %34, label %35, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5e066b0:s0 -> Node0x5e07700;
	Node0x5e066b0:s1 -> Node0x5e07790;
	Node0x5e07700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi float [ %45, %35 ], [ %27, %24 ]\l  %37 = phi i32 [ %46, %35 ], [ %32, %24 ]\l  %38 = fmul float %33, %36\l  %39 = tail call float @llvm.rint.f32(float %38)\l  %40 = fneg float %39\l  %41 = tail call float @llvm.fma.f32(float %40, float %31, float %36)\l  %42 = fcmp olt float %41, 0.000000e+00\l  %43 = select i1 %42, float %31, float -0.000000e+00\l  %44 = fadd float %41, %43\l  %45 = tail call float @llvm.amdgcn.ldexp.f32(float %44, i32 12)\l  %46 = add nsw i32 %37, -12\l  %47 = icmp ugt i32 %37, 24\l  br i1 %47, label %35, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5e07700:s0 -> Node0x5e07700;
	Node0x5e07700:s1 -> Node0x5e07790;
	Node0x5e07790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%48:\l48:                                               \l  %49 = phi i32 [ %32, %24 ], [ %46, %35 ]\l  %50 = phi float [ %27, %24 ], [ %45, %35 ]\l  %51 = add nsw i32 %49, -11\l  %52 = tail call float @llvm.amdgcn.ldexp.f32(float %50, i32 %51)\l  %53 = fmul float %33, %52\l  %54 = tail call float @llvm.rint.f32(float %53)\l  %55 = fneg float %54\l  %56 = tail call float @llvm.fma.f32(float %55, float %31, float %52)\l  %57 = fcmp olt float %56, 0.000000e+00\l  %58 = select i1 %57, float %31, float -0.000000e+00\l  %59 = fadd float %56, %58\l  %60 = tail call float @llvm.amdgcn.ldexp.f32(float %59, i32 %29)\l  %61 = bitcast float %18 to i32\l  %62 = and i32 %61, -2147483648\l  %63 = bitcast float %60 to i32\l  %64 = xor i32 %62, %63\l  %65 = bitcast i32 %64 to float\l  br label %70\l}"];
	Node0x5e07790 -> Node0x5e07430;
	Node0x5e06740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%66:\l66:                                               \l  %67 = fcmp oeq float %21, %22\l  %68 = tail call float @llvm.copysign.f32(float 0.000000e+00, float %18)\l  %69 = select i1 %67, float %68, float %18\l  br label %70\l}"];
	Node0x5e06740 -> Node0x5e07430;
	Node0x5e07430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%70:\l70:                                               \l  %71 = phi float [ %65, %48 ], [ %69, %66 ]\l  %72 = fcmp oeq float %20, 0.000000e+00\l  %73 = select i1 %72, float 0x7FF8000000000000, float %71\l  %74 = fcmp ord float %20, 0.000000e+00\l  %75 = tail call i1 @llvm.amdgcn.class.f32(float %18, i32 504)\l  %76 = select i1 %74, i1 %75, i1 false\l  %77 = select i1 %76, float %73, float 0x7FF8000000000000\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %14\l  store float %77, float addrspace(1)* %78, align 4, !tbaa !7\l  br label %79\l}"];
	Node0x5e07430 -> Node0x5e05130;
	Node0x5e05130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%79:\l79:                                               \l  ret void\l}"];
}
