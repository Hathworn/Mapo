digraph "CFG for 'vec_y1f' function" {
	label="CFG for 'vec_y1f' function";

	Node0x48a2880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = sext i32 %12 to i64\l  %14 = icmp ult i64 %13, %0\l  br i1 %14, label %15, label %512\l|{<s0>T|<s1>F}}"];
	Node0x48a2880:s0 -> Node0x48a2ba0;
	Node0x48a2880:s1 -> Node0x48aa930;
	Node0x48a2ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%15:\l15:                                               \l  %16 = getelementptr inbounds float, float addrspace(1)* %2, i64 %13\l  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %18 = fcmp ugt float %17, 1.256250e+01\l  br i1 %18, label %352, label %19\l|{<s0>T|<s1>F}}"];
	Node0x48a2ba0:s0 -> Node0x48ab440;
	Node0x48a2ba0:s1 -> Node0x48ab4d0;
	Node0x48ab4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%19:\l19:                                               \l  %20 = fcmp olt float %17, 2.312500e+00\l  br i1 %20, label %21, label %46\l|{<s0>T|<s1>F}}"];
	Node0x48ab4d0:s0 -> Node0x48ab6a0;
	Node0x48ab4d0:s1 -> Node0x48ab730;
	Node0x48ab6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%21:\l21:                                               \l  %22 = fcmp olt float %17, 1.218750e+00\l  br i1 %22, label %23, label %35\l|{<s0>T|<s1>F}}"];
	Node0x48ab6a0:s0 -> Node0x48ab900;
	Node0x48ab6a0:s1 -> Node0x48ab990;
	Node0x48ab900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%23:\l23:                                               \l  %24 = fcmp olt float %17, 5.000000e-01\l  br i1 %24, label %72, label %25\l|{<s0>T|<s1>F}}"];
	Node0x48ab900:s0 -> Node0x48abb60;
	Node0x48ab900:s1 -> Node0x48abbb0;
	Node0x48abbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%25:\l25:                                               \l  %26 = fcmp olt float %17, 6.250000e-01\l  %27 = fcmp olt float %17, 7.500000e-01\l  %28 = fcmp olt float %17, 9.375000e-01\l  %29 = select i1 %28, float 7.500000e-01, float 9.375000e-01\l  %30 = select i1 %28, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 27), float\l... addrspace(4)* getelementptr inbounds ([162 x float], [162 x float]\l... addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 36)\l  %31 = select i1 %27, float 6.250000e-01, float %29\l  %32 = select i1 %27, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 18), float\l... addrspace(4)* %30\l  %33 = select i1 %26, float 5.000000e-01, float %31\l  %34 = select i1 %26, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 9), float\l... addrspace(4)* %32\l  br label %72\l}"];
	Node0x48abbb0 -> Node0x48abb60;
	Node0x48ab990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%35:\l35:                                               \l  %36 = fcmp olt float %17, 1.531250e+00\l  br i1 %36, label %72, label %37\l|{<s0>T|<s1>F}}"];
	Node0x48ab990:s0 -> Node0x48abb60;
	Node0x48ab990:s1 -> Node0x48acaf0;
	Node0x48acaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%37:\l37:                                               \l  %38 = fcmp olt float %17, 1.843750e+00\l  %39 = fcmp olt float %17, 0x4000A00000000000\l  %40 = select i1 %39, float 1.843750e+00, float 0x400193BEE0000000\l  %41 = select i1 %39, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 63), float\l... addrspace(4)* getelementptr inbounds ([162 x float], [162 x float]\l... addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 72)\l  %42 = or i1 %38, %39\l  %43 = select i1 %42, float 0.000000e+00, float 0xBE76401B80000000\l  %44 = select i1 %38, float 1.531250e+00, float %40\l  %45 = select i1 %38, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 54), float\l... addrspace(4)* %41\l  br label %72\l}"];
	Node0x48acaf0 -> Node0x48abb60;
	Node0x48ab730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%46:\l46:                                               \l  %47 = fcmp olt float %17, 6.187500e+00\l  br i1 %47, label %48, label %61\l|{<s0>T|<s1>F}}"];
	Node0x48ab730:s0 -> Node0x48ad520;
	Node0x48ab730:s1 -> Node0x48ad570;
	Node0x48ad520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%48:\l48:                                               \l  %49 = fcmp olt float %17, 0x4005E00000000000\l  br i1 %49, label %72, label %50\l|{<s0>T|<s1>F}}"];
	Node0x48ad520:s0 -> Node0x48abb60;
	Node0x48ad520:s1 -> Node0x48ad740;
	Node0x48ad740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%50:\l50:                                               \l  %51 = fcmp olt float %17, 3.156250e+00\l  br i1 %51, label %72, label %52\l|{<s0>T|<s1>F}}"];
	Node0x48ad740:s0 -> Node0x48abb60;
	Node0x48ad740:s1 -> Node0x48ad910;
	Node0x48ad910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%52:\l52:                                               \l  %53 = fcmp olt float %17, 0x4010D00000000000\l  %54 = fcmp olt float %17, 4.687500e+00\l  %55 = select i1 %54, float 0.000000e+00, float 0x3E8D0F6060000000\l  %56 = select i1 %54, float 0x4010D00000000000, float 0x4015B7FE40000000\l  %57 = select i1 %54, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 108), float\l... addrspace(4)* getelementptr inbounds ([162 x float], [162 x float]\l... addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 117)\l  %58 = select i1 %53, float 0x3E7FF742E0000000, float %55\l  %59 = select i1 %53, float 0x400D76D4A0000000, float %56\l  %60 = select i1 %53, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 99), float\l... addrspace(4)* %57\l  br label %72\l}"];
	Node0x48ad910 -> Node0x48abb60;
	Node0x48ad570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%61:\l61:                                               \l  %62 = fcmp olt float %17, 0x401F140000000000\l  br i1 %62, label %72, label %63\l|{<s0>T|<s1>F}}"];
	Node0x48ad570:s0 -> Node0x48abb60;
	Node0x48ad570:s1 -> Node0x48ae450;
	Node0x48ae450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%63:\l63:                                               \l  %64 = fcmp olt float %17, 0x4022B80000000000\l  %65 = fcmp olt float %17, 1.093750e+01\l  %66 = select i1 %65, float 0x3E847A3200000000, float 0xBE8CAF37E0000000\l  %67 = select i1 %65, float 0x40243F2EE0000000, float 0x40277F9140000000\l  %68 = select i1 %65, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 144), float\l... addrspace(4)* getelementptr inbounds ([162 x float], [162 x float]\l... addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 153)\l  %69 = select i1 %64, float 0x3E9CC2D360000000, float %66\l  %70 = select i1 %64, float 0x40213127A0000000, float %67\l  %71 = select i1 %64, float addrspace(4)* getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 135), float\l... addrspace(4)* %68\l  br label %72\l}"];
	Node0x48ae450 -> Node0x48abb60;
	Node0x48abb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%72:\l72:                                               \l  %73 = phi float [ 0.000000e+00, %23 ], [ 0.000000e+00, %35 ], [\l... 0.000000e+00, %48 ], [ 0.000000e+00, %50 ], [ 0xBE8F4EF560000000, %61 ], [\l... %43, %37 ], [ %58, %52 ], [ %69, %63 ], [ 0.000000e+00, %25 ]\l  %74 = phi float [ 0.000000e+00, %23 ], [ 1.218750e+00, %35 ], [\l... 2.312500e+00, %48 ], [ 0x4005E00000000000, %50 ], [ 0x401BC418A0000000, %61\l... ], [ %44, %37 ], [ %59, %52 ], [ %70, %63 ], [ %33, %25 ]\l  %75 = phi float addrspace(4)* [ getelementptr inbounds ([162 x float], [162\l... x float] addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 0), %23 ], [\l... getelementptr inbounds ([162 x float], [162 x float] addrspace(4)*\l... @__ocmltbl_M32_Y1, i64 0, i64 45), %35 ], [ getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 81), %48 ],\l... [ getelementptr inbounds ([162 x float], [162 x float] addrspace(4)*\l... @__ocmltbl_M32_Y1, i64 0, i64 90), %50 ], [ getelementptr inbounds ([162 x\l... float], [162 x float] addrspace(4)* @__ocmltbl_M32_Y1, i64 0, i64 126), %61\l... ], [ %45, %37 ], [ %60, %52 ], [ %71, %63 ], [ %34, %25 ]\l  %76 = fmul float %17, %17\l  %77 = fsub float %17, %74\l  %78 = fsub float %77, %73\l  %79 = fcmp olt float %17, 5.000000e-01\l  %80 = select i1 %79, float %76, float %78\l  %81 = getelementptr inbounds float, float addrspace(4)* %75, i64 8\l  %82 = load float, float addrspace(4)* %81, align 4, !tbaa !11\l  %83 = getelementptr inbounds float, float addrspace(4)* %75, i64 7\l  %84 = load float, float addrspace(4)* %83, align 4, !tbaa !11\l  %85 = tail call float @llvm.fmuladd.f32(float %80, float %82, float %84)\l  %86 = getelementptr inbounds float, float addrspace(4)* %75, i64 6\l  %87 = load float, float addrspace(4)* %86, align 4, !tbaa !11\l  %88 = tail call float @llvm.fmuladd.f32(float %80, float %85, float %87)\l  %89 = getelementptr inbounds float, float addrspace(4)* %75, i64 5\l  %90 = load float, float addrspace(4)* %89, align 4, !tbaa !11\l  %91 = tail call float @llvm.fmuladd.f32(float %80, float %88, float %90)\l  %92 = getelementptr inbounds float, float addrspace(4)* %75, i64 4\l  %93 = load float, float addrspace(4)* %92, align 4, !tbaa !11\l  %94 = tail call float @llvm.fmuladd.f32(float %80, float %91, float %93)\l  %95 = getelementptr inbounds float, float addrspace(4)* %75, i64 3\l  %96 = load float, float addrspace(4)* %95, align 4, !tbaa !11\l  %97 = tail call float @llvm.fmuladd.f32(float %80, float %94, float %96)\l  %98 = getelementptr inbounds float, float addrspace(4)* %75, i64 2\l  %99 = load float, float addrspace(4)* %98, align 4, !tbaa !11\l  %100 = tail call float @llvm.fmuladd.f32(float %80, float %97, float %99)\l  %101 = getelementptr inbounds float, float addrspace(4)* %75, i64 1\l  %102 = load float, float addrspace(4)* %101, align 4, !tbaa !11\l  %103 = tail call float @llvm.fmuladd.f32(float %80, float %100, float %102)\l  %104 = load float, float addrspace(4)* %75, align 4, !tbaa !11\l  %105 = tail call float @llvm.fmuladd.f32(float %80, float %103, float %104)\l  br i1 %79, label %106, label %509\l|{<s0>T|<s1>F}}"];
	Node0x48abb60:s0 -> Node0x48b19d0;
	Node0x48abb60:s1 -> Node0x48b1a20;
	Node0x48b19d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%106:\l106:                                              \l  %107 = fcmp olt float %17, 0x3EB0000000000000\l  %108 = tail call float @llvm.fabs.f32(float %17)\l  br i1 %107, label %109, label %111\l|{<s0>T|<s1>F}}"];
	Node0x48b19d0:s0 -> Node0x48b1db0;
	Node0x48b19d0:s1 -> Node0x48b1e40;
	Node0x48b1db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%109:\l109:                                              \l  %110 = fdiv float 0xBFE45F3060000000, %108, !fpmath !15\l  br label %348\l}"];
	Node0x48b1db0 -> Node0x48b21b0;
	Node0x48b1e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%111:\l111:                                              \l  %112 = fcmp ugt float %108, 0x4029080000000000\l  br i1 %112, label %168, label %113\l|{<s0>T|<s1>F}}"];
	Node0x48b1e40:s0 -> Node0x48b2340;
	Node0x48b1e40:s1 -> Node0x48b23d0;
	Node0x48b23d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%113:\l113:                                              \l  %114 = fcmp ugt float %108, 0x4018B00000000000\l  br i1 %114, label %126, label %115\l|{<s0>T|<s1>F}}"];
	Node0x48b23d0:s0 -> Node0x48b25a0;
	Node0x48b23d0:s1 -> Node0x48b2630;
	Node0x48b2630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%115:\l115:                                              \l  %116 = fcmp ugt float %108, 1.093750e+00\l  br i1 %116, label %117, label %137\l|{<s0>T|<s1>F}}"];
	Node0x48b2630:s0 -> Node0x48b2800;
	Node0x48b2630:s1 -> Node0x48b2890;
	Node0x48b2800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%117:\l117:                                              \l  %118 = fcmp ugt float %108, 2.843750e+00\l  %119 = fcmp ugt float %108, 0x4012500000000000\l  %120 = select i1 %119, float 0xBE6FE6DCC0000000, float 0xBE74A121E0000000\l  %121 = select i1 %119, float 0x40155365C0000000, float 0x400EA75580000000\l  %122 = select i1 %119, float addrspace(4)* getelementptr inbounds ([72 x\l... float], [72 x float] addrspace(4)* @__ocmltbl_M32_J1, i64 0, i64 27), float\l... addrspace(4)* getelementptr inbounds ([72 x float], [72 x float]\l... addrspace(4)* @__ocmltbl_M32_J1, i64 0, i64 18)\l  %123 = select i1 %118, float %120, float 0xBDF375C600000000\l  %124 = select i1 %118, float %121, float 0x3FFD757D20000000\l  %125 = select i1 %118, float addrspace(4)* %122, float addrspace(4)*\l... getelementptr inbounds ([72 x float], [72 x float] addrspace(4)*\l... @__ocmltbl_M32_J1, i64 0, i64 9)\l  br label %137\l}"];
	Node0x48b2800 -> Node0x48b2890;
	Node0x48b25a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%126:\l126:                                              \l  %127 = fcmp ugt float %108, 7.781250e+00\l  br i1 %127, label %128, label %137\l|{<s0>T|<s1>F}}"];
	Node0x48b25a0:s0 -> Node0x48b3400;
	Node0x48b25a0:s1 -> Node0x48b2890;
	Node0x48b3400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%128:\l128:                                              \l  %129 = fcmp ugt float %108, 0x4022B80000000000\l  %130 = fcmp ugt float %108, 0x4025E80000000000\l  %131 = select i1 %130, float 0xBE8A046940000000, float 0xBE9E8407A0000000\l  %132 = select i1 %130, float 0x4027697980000000, float 0x402458D0E0000000\l  %133 = select i1 %130, float addrspace(4)* getelementptr inbounds ([72 x\l... float], [72 x float] addrspace(4)* @__ocmltbl_M32_J1, i64 0, i64 63), float\l... addrspace(4)* getelementptr inbounds ([72 x float], [72 x float]\l... addrspace(4)* @__ocmltbl_M32_J1, i64 0, i64 54)\l  %134 = select i1 %129, float %131, float 0x3E9E171140000000\l  %135 = select i1 %129, float %132, float 0x4021129800000000\l  %136 = select i1 %129, float addrspace(4)* %133, float addrspace(4)*\l... getelementptr inbounds ([72 x float], [72 x float] addrspace(4)*\l... @__ocmltbl_M32_J1, i64 0, i64 45)\l  br label %137\l}"];
	Node0x48b3400 -> Node0x48b2890;
	Node0x48b2890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%137:\l137:                                              \l  %138 = phi float [ 0.000000e+00, %115 ], [ 0xBE88971B60000000, %126 ], [\l... %123, %117 ], [ %134, %128 ]\l  %139 = phi float [ 0.000000e+00, %115 ], [ 0x401C0FF600000000, %126 ], [\l... %124, %117 ], [ %135, %128 ]\l  %140 = phi float addrspace(4)* [ getelementptr inbounds ([72 x float], [72 x\l... float] addrspace(4)* @__ocmltbl_M32_J1, i64 0, i64 0), %115 ], [\l... getelementptr inbounds ([72 x float], [72 x float] addrspace(4)*\l... @__ocmltbl_M32_J1, i64 0, i64 36), %126 ], [ %125, %117 ], [ %136, %128 ]\l  %141 = fsub float %108, %139\l  %142 = fsub float %141, %138\l  %143 = getelementptr inbounds float, float addrspace(4)* %140, i64 8\l  %144 = load float, float addrspace(4)* %143, align 4, !tbaa !11\l  %145 = getelementptr inbounds float, float addrspace(4)* %140, i64 7\l  %146 = load float, float addrspace(4)* %145, align 4, !tbaa !11\l  %147 = tail call float @llvm.fmuladd.f32(float %142, float %144, float %146)\l  %148 = getelementptr inbounds float, float addrspace(4)* %140, i64 6\l  %149 = load float, float addrspace(4)* %148, align 4, !tbaa !11\l  %150 = tail call float @llvm.fmuladd.f32(float %142, float %147, float %149)\l  %151 = getelementptr inbounds float, float addrspace(4)* %140, i64 5\l  %152 = load float, float addrspace(4)* %151, align 4, !tbaa !11\l  %153 = tail call float @llvm.fmuladd.f32(float %142, float %150, float %152)\l  %154 = getelementptr inbounds float, float addrspace(4)* %140, i64 4\l  %155 = load float, float addrspace(4)* %154, align 4, !tbaa !11\l  %156 = tail call float @llvm.fmuladd.f32(float %142, float %153, float %155)\l  %157 = getelementptr inbounds float, float addrspace(4)* %140, i64 3\l  %158 = load float, float addrspace(4)* %157, align 4, !tbaa !11\l  %159 = tail call float @llvm.fmuladd.f32(float %142, float %156, float %158)\l  %160 = getelementptr inbounds float, float addrspace(4)* %140, i64 2\l  %161 = load float, float addrspace(4)* %160, align 4, !tbaa !11\l  %162 = tail call float @llvm.fmuladd.f32(float %142, float %159, float %161)\l  %163 = getelementptr inbounds float, float addrspace(4)* %140, i64 1\l  %164 = load float, float addrspace(4)* %163, align 4, !tbaa !11\l  %165 = tail call float @llvm.fmuladd.f32(float %142, float %162, float %164)\l  %166 = load float, float addrspace(4)* %140, align 4, !tbaa !11\l  %167 = tail call float @llvm.fmuladd.f32(float %142, float %165, float %166)\l  br label %326\l}"];
	Node0x48b2890 -> Node0x48b5a10;
	Node0x48b2340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%168:\l168:                                              \l  %169 = fdiv float 1.000000e+00, %108, !fpmath !15\l  %170 = fmul float %169, %169\l  %171 = tail call float @llvm.fmuladd.f32(float %170, float\l... 0x4000214CE0000000, float 0xBFD7A54CA0000000)\l  %172 = tail call float @llvm.fmuladd.f32(float %170, float %171, float\l... 0x3FC4FFEFE0000000)\l  %173 = tail call float @llvm.fmuladd.f32(float %170, float %172, float\l... -3.750000e-01)\l  %174 = fmul float %169, %173\l  %175 = tail call float @llvm.amdgcn.rsq.f32(float %108)\l  %176 = fmul float %175, 0x3FE9884540000000\l  %177 = tail call float @llvm.fmuladd.f32(float %170, float\l... 0xBFC7C0D460000000, float 0x3FC7FF5AA0000000)\l  %178 = tail call float @llvm.fmuladd.f32(float %170, float %177, float\l... 1.000000e+00)\l  %179 = fmul float %176, %178\l  %180 = fcmp olt float %108, 1.310720e+05\l  br i1 %180, label %181, label %188\l|{<s0>T|<s1>F}}"];
	Node0x48b2340:s0 -> Node0x48b6e70;
	Node0x48b2340:s1 -> Node0x48b6f00;
	Node0x48b6e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%181:\l181:                                              \l  %182 = fmul float %108, 0x3FE45F3060000000\l  %183 = tail call float @llvm.rint.f32(float %182)\l  %184 = tail call float @llvm.fma.f32(float %183, float 0xBFF921FB40000000,\l... float %108)\l  %185 = tail call float @llvm.fma.f32(float %183, float 0xBE74442D00000000,\l... float %184)\l  %186 = tail call float @llvm.fma.f32(float %183, float 0xBCF8469880000000,\l... float %185)\l  %187 = fptosi float %183 to i32\l  br label %294\l}"];
	Node0x48b6e70 -> Node0x48b78e0;
	Node0x48b6f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%188:\l188:                                              \l  %189 = bitcast float %108 to i32\l  %190 = lshr i32 %189, 23\l  %191 = and i32 %189, 8388607\l  %192 = or i32 %191, 8388608\l  %193 = zext i32 %192 to i64\l  %194 = mul nuw nsw i64 %193, 4266746795\l  %195 = trunc i64 %194 to i32\l  %196 = lshr i64 %194, 32\l  %197 = mul nuw nsw i64 %193, 1011060801\l  %198 = add nuw nsw i64 %196, %197\l  %199 = trunc i64 %198 to i32\l  %200 = lshr i64 %198, 32\l  %201 = mul nuw nsw i64 %193, 3680671129\l  %202 = add nuw nsw i64 %200, %201\l  %203 = trunc i64 %202 to i32\l  %204 = lshr i64 %202, 32\l  %205 = mul nuw nsw i64 %193, 4113882560\l  %206 = add nuw nsw i64 %204, %205\l  %207 = trunc i64 %206 to i32\l  %208 = lshr i64 %206, 32\l  %209 = mul nuw nsw i64 %193, 4230436817\l  %210 = add nuw nsw i64 %208, %209\l  %211 = trunc i64 %210 to i32\l  %212 = lshr i64 %210, 32\l  %213 = mul nuw nsw i64 %193, 1313084713\l  %214 = add nuw nsw i64 %212, %213\l  %215 = trunc i64 %214 to i32\l  %216 = lshr i64 %214, 32\l  %217 = mul nuw nsw i64 %193, 2734261102\l  %218 = add nuw nsw i64 %216, %217\l  %219 = trunc i64 %218 to i32\l  %220 = lshr i64 %218, 32\l  %221 = trunc i64 %220 to i32\l  %222 = add nsw i32 %190, -120\l  %223 = icmp ugt i32 %222, 63\l  %224 = select i1 %223, i32 %215, i32 %221\l  %225 = select i1 %223, i32 %211, i32 %219\l  %226 = select i1 %223, i32 %207, i32 %215\l  %227 = select i1 %223, i32 %203, i32 %211\l  %228 = select i1 %223, i32 %199, i32 %207\l  %229 = select i1 %223, i32 %195, i32 %203\l  %230 = select i1 %223, i32 -64, i32 0\l  %231 = add nsw i32 %230, %222\l  %232 = icmp ugt i32 %231, 31\l  %233 = select i1 %232, i32 %225, i32 %224\l  %234 = select i1 %232, i32 %226, i32 %225\l  %235 = select i1 %232, i32 %227, i32 %226\l  %236 = select i1 %232, i32 %228, i32 %227\l  %237 = select i1 %232, i32 %229, i32 %228\l  %238 = select i1 %232, i32 -32, i32 0\l  %239 = add nsw i32 %238, %231\l  %240 = icmp ugt i32 %239, 31\l  %241 = select i1 %240, i32 %234, i32 %233\l  %242 = select i1 %240, i32 %235, i32 %234\l  %243 = select i1 %240, i32 %236, i32 %235\l  %244 = select i1 %240, i32 %237, i32 %236\l  %245 = select i1 %240, i32 -32, i32 0\l  %246 = add nsw i32 %245, %239\l  %247 = icmp eq i32 %246, 0\l  %248 = sub nsw i32 32, %246\l  %249 = tail call i32 @llvm.fshr.i32(i32 %241, i32 %242, i32 %248)\l  %250 = tail call i32 @llvm.fshr.i32(i32 %242, i32 %243, i32 %248)\l  %251 = tail call i32 @llvm.fshr.i32(i32 %243, i32 %244, i32 %248)\l  %252 = select i1 %247, i32 %241, i32 %249\l  %253 = select i1 %247, i32 %242, i32 %250\l  %254 = select i1 %247, i32 %243, i32 %251\l  %255 = lshr i32 %252, 29\l  %256 = tail call i32 @llvm.fshl.i32(i32 %252, i32 %253, i32 2)\l  %257 = tail call i32 @llvm.fshl.i32(i32 %253, i32 %254, i32 2)\l  %258 = tail call i32 @llvm.fshl.i32(i32 %254, i32 %244, i32 2)\l  %259 = and i32 %255, 1\l  %260 = sub nsw i32 0, %259\l  %261 = shl i32 %255, 31\l  %262 = xor i32 %256, %260\l  %263 = xor i32 %257, %260\l  %264 = xor i32 %258, %260\l  %265 = tail call i32 @llvm.ctlz.i32(i32 %262, i1 false), !range !16\l  %266 = sub nsw i32 31, %265\l  %267 = tail call i32 @llvm.fshr.i32(i32 %262, i32 %263, i32 %266)\l  %268 = tail call i32 @llvm.fshr.i32(i32 %263, i32 %264, i32 %266)\l  %269 = shl nuw nsw i32 %265, 23\l  %270 = sub nuw nsw i32 1056964608, %269\l  %271 = lshr i32 %267, 9\l  %272 = or i32 %271, %270\l  %273 = or i32 %272, %261\l  %274 = bitcast i32 %273 to float\l  %275 = tail call i32 @llvm.fshl.i32(i32 %267, i32 %268, i32 23)\l  %276 = tail call i32 @llvm.ctlz.i32(i32 %275, i1 false), !range !16\l  %277 = fmul float %274, 0x3FF921FB40000000\l  %278 = add nuw nsw i32 %276, %265\l  %279 = shl nuw nsw i32 %278, 23\l  %280 = sub nuw nsw i32 855638016, %279\l  %281 = sub nsw i32 31, %276\l  %282 = tail call i32 @llvm.fshr.i32(i32 %275, i32 %268, i32 %281)\l  %283 = lshr i32 %282, 9\l  %284 = or i32 %280, %283\l  %285 = or i32 %284, %261\l  %286 = bitcast i32 %285 to float\l  %287 = fneg float %277\l  %288 = tail call float @llvm.fma.f32(float %274, float 0x3FF921FB40000000,\l... float %287)\l  %289 = tail call float @llvm.fma.f32(float %274, float 0x3E74442D00000000,\l... float %288)\l  %290 = tail call float @llvm.fma.f32(float %286, float 0x3FF921FB40000000,\l... float %289)\l  %291 = fadd float %277, %290\l  %292 = lshr i32 %252, 30\l  %293 = add nuw nsw i32 %259, %292\l  br label %294\l}"];
	Node0x48b6f00 -> Node0x48b78e0;
	Node0x48b78e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%294:\l294:                                              \l  %295 = phi float [ %186, %181 ], [ %291, %188 ]\l  %296 = phi i32 [ %187, %181 ], [ %293, %188 ]\l  %297 = and i32 %296, 3\l  %298 = fcmp olt float %295, %174\l  %299 = sext i1 %298 to i32\l  %300 = add nsw i32 %297, -1\l  %301 = add nsw i32 %300, %299\l  %302 = fsub float %295, %174\l  %303 = select i1 %298, float 0x3FE921FB60000000, float 0xBFE921FB60000000\l  %304 = fadd float %302, %303\l  %305 = fmul float %304, %304\l  %306 = tail call float @llvm.fmuladd.f32(float %305, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %307 = tail call float @llvm.fmuladd.f32(float %305, float %306, float\l... 0xBFC55553A0000000)\l  %308 = fmul float %305, %307\l  %309 = tail call float @llvm.fmuladd.f32(float %304, float %308, float %304)\l  %310 = tail call float @llvm.fmuladd.f32(float %305, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %311 = tail call float @llvm.fmuladd.f32(float %305, float %310, float\l... 0x3FA5557EE0000000)\l  %312 = tail call float @llvm.fmuladd.f32(float %305, float %311, float\l... 0xBFE0000080000000)\l  %313 = tail call float @llvm.fmuladd.f32(float %305, float %312, float\l... 1.000000e+00)\l  %314 = fneg float %309\l  %315 = and i32 %301, 1\l  %316 = icmp eq i32 %315, 0\l  %317 = select i1 %316, float %313, float %314\l  %318 = bitcast float %317 to i32\l  %319 = shl i32 %301, 30\l  %320 = and i32 %319, -2147483648\l  %321 = xor i32 %320, %318\l  %322 = bitcast i32 %321 to float\l  %323 = fmul float %179, %322\l  %324 = tail call i1 @llvm.amdgcn.class.f32(float %108, i32 512)\l  %325 = select i1 %324, float 0.000000e+00, float %323\l  br label %326\l}"];
	Node0x48b78e0 -> Node0x48b5a10;
	Node0x48b5a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%326:\l326:                                              \l  %327 = phi float [ %167, %137 ], [ %325, %294 ]\l  %328 = fcmp olt float %17, 0.000000e+00\l  %329 = fneg float %327\l  %330 = select i1 %328, float %329, float %327\l  %331 = tail call i1 @llvm.amdgcn.class.f32(float %17, i32 144)\l  %332 = select i1 %331, float 0x41F0000000000000, float 1.000000e+00\l  %333 = fmul float %17, %332\l  %334 = tail call float @llvm.log2.f32(float %333)\l  %335 = fmul float %334, 0x3FE62E42E0000000\l  %336 = tail call i1 @llvm.amdgcn.class.f32(float %334, i32 519)\l  %337 = fneg float %335\l  %338 = tail call float @llvm.fma.f32(float %334, float 0x3FE62E42E0000000,\l... float %337)\l  %339 = tail call float @llvm.fma.f32(float %334, float 0x3E6EFA39E0000000,\l... float %338)\l  %340 = fadd float %335, %339\l  %341 = select i1 %336, float %334, float %340\l  %342 = select i1 %331, float 0x40362E4300000000, float 0.000000e+00\l  %343 = fsub float %341, %342\l  %344 = fdiv float -1.000000e+00, %17\l  %345 = tail call float @llvm.fmuladd.f32(float %330, float %343, float %344)\l  %346 = fmul float %345, 0x3FE45F3060000000\l  %347 = tail call float @llvm.fmuladd.f32(float %105, float %17, float %346)\l  br label %348\l}"];
	Node0x48b5a10 -> Node0x48b21b0;
	Node0x48b21b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%348:\l348:                                              \l  %349 = phi float [ %110, %109 ], [ %347, %326 ]\l  %350 = fcmp olt float %17, 0.000000e+00\l  %351 = select i1 %350, float 0x7FF8000000000000, float %349\l  br label %509\l}"];
	Node0x48b21b0 -> Node0x48b1a20;
	Node0x48ab440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%352:\l352:                                              \l  %353 = fdiv float 1.000000e+00, %17, !fpmath !15\l  %354 = fmul float %353, %353\l  %355 = tail call float @llvm.fmuladd.f32(float %354, float\l... 0x4000214CE0000000, float 0xBFD7A54CA0000000)\l  %356 = tail call float @llvm.fmuladd.f32(float %354, float %355, float\l... 0x3FC4FFEFE0000000)\l  %357 = tail call float @llvm.fmuladd.f32(float %354, float %356, float\l... -3.750000e-01)\l  %358 = fmul float %353, %357\l  %359 = tail call float @llvm.amdgcn.rsq.f32(float %17)\l  %360 = fmul float %359, 0x3FE9884540000000\l  %361 = tail call float @llvm.fmuladd.f32(float %354, float\l... 0xBFC7C0D460000000, float 0x3FC7FF5AA0000000)\l  %362 = tail call float @llvm.fmuladd.f32(float %354, float %361, float\l... 1.000000e+00)\l  %363 = fmul float %360, %362\l  %364 = fcmp olt float %17, 1.310720e+05\l  br i1 %364, label %365, label %372\l|{<s0>T|<s1>F}}"];
	Node0x48ab440:s0 -> Node0x48c1890;
	Node0x48ab440:s1 -> Node0x48c18e0;
	Node0x48c1890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%365:\l365:                                              \l  %366 = fmul float %17, 0x3FE45F3060000000\l  %367 = tail call float @llvm.rint.f32(float %366)\l  %368 = tail call float @llvm.fma.f32(float %367, float 0xBFF921FB40000000,\l... float %17)\l  %369 = tail call float @llvm.fma.f32(float %367, float 0xBE74442D00000000,\l... float %368)\l  %370 = tail call float @llvm.fma.f32(float %367, float 0xBCF8469880000000,\l... float %369)\l  %371 = fptosi float %367 to i32\l  br label %478\l}"];
	Node0x48c1890 -> Node0x48c1f60;
	Node0x48c18e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%372:\l372:                                              \l  %373 = bitcast float %17 to i32\l  %374 = lshr i32 %373, 23\l  %375 = and i32 %373, 8388607\l  %376 = or i32 %375, 8388608\l  %377 = zext i32 %376 to i64\l  %378 = mul nuw nsw i64 %377, 4266746795\l  %379 = trunc i64 %378 to i32\l  %380 = lshr i64 %378, 32\l  %381 = mul nuw nsw i64 %377, 1011060801\l  %382 = add nuw nsw i64 %380, %381\l  %383 = trunc i64 %382 to i32\l  %384 = lshr i64 %382, 32\l  %385 = mul nuw nsw i64 %377, 3680671129\l  %386 = add nuw nsw i64 %384, %385\l  %387 = trunc i64 %386 to i32\l  %388 = lshr i64 %386, 32\l  %389 = mul nuw nsw i64 %377, 4113882560\l  %390 = add nuw nsw i64 %388, %389\l  %391 = trunc i64 %390 to i32\l  %392 = lshr i64 %390, 32\l  %393 = mul nuw nsw i64 %377, 4230436817\l  %394 = add nuw nsw i64 %392, %393\l  %395 = trunc i64 %394 to i32\l  %396 = lshr i64 %394, 32\l  %397 = mul nuw nsw i64 %377, 1313084713\l  %398 = add nuw nsw i64 %396, %397\l  %399 = trunc i64 %398 to i32\l  %400 = lshr i64 %398, 32\l  %401 = mul nuw nsw i64 %377, 2734261102\l  %402 = add nuw nsw i64 %400, %401\l  %403 = trunc i64 %402 to i32\l  %404 = lshr i64 %402, 32\l  %405 = trunc i64 %404 to i32\l  %406 = add nsw i32 %374, -120\l  %407 = icmp ugt i32 %406, 63\l  %408 = select i1 %407, i32 %399, i32 %405\l  %409 = select i1 %407, i32 %395, i32 %403\l  %410 = select i1 %407, i32 %391, i32 %399\l  %411 = select i1 %407, i32 %387, i32 %395\l  %412 = select i1 %407, i32 %383, i32 %391\l  %413 = select i1 %407, i32 %379, i32 %387\l  %414 = select i1 %407, i32 -64, i32 0\l  %415 = add nsw i32 %414, %406\l  %416 = icmp ugt i32 %415, 31\l  %417 = select i1 %416, i32 %409, i32 %408\l  %418 = select i1 %416, i32 %410, i32 %409\l  %419 = select i1 %416, i32 %411, i32 %410\l  %420 = select i1 %416, i32 %412, i32 %411\l  %421 = select i1 %416, i32 %413, i32 %412\l  %422 = select i1 %416, i32 -32, i32 0\l  %423 = add nsw i32 %422, %415\l  %424 = icmp ugt i32 %423, 31\l  %425 = select i1 %424, i32 %418, i32 %417\l  %426 = select i1 %424, i32 %419, i32 %418\l  %427 = select i1 %424, i32 %420, i32 %419\l  %428 = select i1 %424, i32 %421, i32 %420\l  %429 = select i1 %424, i32 -32, i32 0\l  %430 = add nsw i32 %429, %423\l  %431 = icmp eq i32 %430, 0\l  %432 = sub nsw i32 32, %430\l  %433 = tail call i32 @llvm.fshr.i32(i32 %425, i32 %426, i32 %432)\l  %434 = tail call i32 @llvm.fshr.i32(i32 %426, i32 %427, i32 %432)\l  %435 = tail call i32 @llvm.fshr.i32(i32 %427, i32 %428, i32 %432)\l  %436 = select i1 %431, i32 %425, i32 %433\l  %437 = select i1 %431, i32 %426, i32 %434\l  %438 = select i1 %431, i32 %427, i32 %435\l  %439 = lshr i32 %436, 29\l  %440 = tail call i32 @llvm.fshl.i32(i32 %436, i32 %437, i32 2)\l  %441 = tail call i32 @llvm.fshl.i32(i32 %437, i32 %438, i32 2)\l  %442 = tail call i32 @llvm.fshl.i32(i32 %438, i32 %428, i32 2)\l  %443 = and i32 %439, 1\l  %444 = sub nsw i32 0, %443\l  %445 = shl i32 %439, 31\l  %446 = xor i32 %440, %444\l  %447 = xor i32 %441, %444\l  %448 = xor i32 %442, %444\l  %449 = tail call i32 @llvm.ctlz.i32(i32 %446, i1 false), !range !16\l  %450 = sub nsw i32 31, %449\l  %451 = tail call i32 @llvm.fshr.i32(i32 %446, i32 %447, i32 %450)\l  %452 = tail call i32 @llvm.fshr.i32(i32 %447, i32 %448, i32 %450)\l  %453 = shl nuw nsw i32 %449, 23\l  %454 = sub nuw nsw i32 1056964608, %453\l  %455 = lshr i32 %451, 9\l  %456 = or i32 %455, %454\l  %457 = or i32 %456, %445\l  %458 = bitcast i32 %457 to float\l  %459 = tail call i32 @llvm.fshl.i32(i32 %451, i32 %452, i32 23)\l  %460 = tail call i32 @llvm.ctlz.i32(i32 %459, i1 false), !range !16\l  %461 = fmul float %458, 0x3FF921FB40000000\l  %462 = add nuw nsw i32 %460, %449\l  %463 = shl nuw nsw i32 %462, 23\l  %464 = sub nuw nsw i32 855638016, %463\l  %465 = sub nsw i32 31, %460\l  %466 = tail call i32 @llvm.fshr.i32(i32 %459, i32 %452, i32 %465)\l  %467 = lshr i32 %466, 9\l  %468 = or i32 %464, %467\l  %469 = or i32 %468, %445\l  %470 = bitcast i32 %469 to float\l  %471 = fneg float %461\l  %472 = tail call float @llvm.fma.f32(float %458, float 0x3FF921FB40000000,\l... float %471)\l  %473 = tail call float @llvm.fma.f32(float %458, float 0x3E74442D00000000,\l... float %472)\l  %474 = tail call float @llvm.fma.f32(float %470, float 0x3FF921FB40000000,\l... float %473)\l  %475 = fadd float %461, %474\l  %476 = lshr i32 %436, 30\l  %477 = add nuw nsw i32 %443, %476\l  br label %478\l}"];
	Node0x48c18e0 -> Node0x48c1f60;
	Node0x48c1f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%478:\l478:                                              \l  %479 = phi float [ %370, %365 ], [ %475, %372 ]\l  %480 = phi i32 [ %371, %365 ], [ %477, %372 ]\l  %481 = and i32 %480, 3\l  %482 = fcmp olt float %479, %358\l  %483 = sext i1 %482 to i32\l  %484 = add nsw i32 %481, -1\l  %485 = add nsw i32 %484, %483\l  %486 = fsub float %479, %358\l  %487 = select i1 %482, float 0x3FE921FB60000000, float 0xBFE921FB60000000\l  %488 = fadd float %486, %487\l  %489 = fmul float %488, %488\l  %490 = tail call float @llvm.fmuladd.f32(float %489, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %491 = tail call float @llvm.fmuladd.f32(float %489, float %490, float\l... 0xBFC55553A0000000)\l  %492 = fmul float %489, %491\l  %493 = tail call float @llvm.fmuladd.f32(float %488, float %492, float %488)\l  %494 = tail call float @llvm.fmuladd.f32(float %489, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %495 = tail call float @llvm.fmuladd.f32(float %489, float %494, float\l... 0x3FA5557EE0000000)\l  %496 = tail call float @llvm.fmuladd.f32(float %489, float %495, float\l... 0xBFE0000080000000)\l  %497 = tail call float @llvm.fmuladd.f32(float %489, float %496, float\l... 1.000000e+00)\l  %498 = and i32 %485, 1\l  %499 = icmp eq i32 %498, 0\l  %500 = select i1 %499, float %493, float %497\l  %501 = bitcast float %500 to i32\l  %502 = shl i32 %485, 30\l  %503 = and i32 %502, -2147483648\l  %504 = xor i32 %503, %501\l  %505 = bitcast i32 %504 to float\l  %506 = fmul float %363, %505\l  %507 = tail call i1 @llvm.amdgcn.class.f32(float %17, i32 512)\l  %508 = select i1 %507, float 0.000000e+00, float %506\l  br label %509\l}"];
	Node0x48c1f60 -> Node0x48b1a20;
	Node0x48b1a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%509:\l509:                                              \l  %510 = phi float [ %508, %478 ], [ %351, %348 ], [ %105, %72 ]\l  %511 = getelementptr inbounds float, float addrspace(1)* %1, i64 %13\l  store float %510, float addrspace(1)* %511, align 4, !tbaa !7\l  br label %512\l}"];
	Node0x48b1a20 -> Node0x48aa930;
	Node0x48aa930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%512:\l512:                                              \l  ret void\l}"];
}
