digraph "CFG for '_Z22CudaSobelEdgeDetectionPhS_iii' function" {
	label="CFG for '_Z22CudaSobelEdgeDetectionPhS_iii' function";

	Node0x5e96030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = add nsw i32 %2, -1\l  %7 = icmp sgt i32 %2, 1\l  br i1 %7, label %8, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5e96030:s0 -> Node0x5e961a0;
	Node0x5e96030:s1 -> Node0x5e961f0;
	Node0x5e961a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%8:\l8:                                                \l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !4\l  %13 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !13, !invariant.load\l... !14\l  %16 = zext i16 %15 to i32\l  %17 = udiv i32 %12, %16\l  %18 = mul i32 %17, %16\l  %19 = icmp ugt i32 %12, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %24 = add nsw i32 %3, -2\l  %25 = mul nsw i32 %4, %4\l  %26 = sitofp i32 %25 to double\l  br label %28\l}"];
	Node0x5e961a0 -> Node0x5e98190;
	Node0x5e961f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%27:\l27:                                               \l  ret void\l}"];
	Node0x5e98190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ 0, %8 ], [ %130, %28 ]\l  %30 = mul i32 %21, %29\l  %31 = add i32 %30, %22\l  %32 = mul i32 %31, %16\l  %33 = add i32 %32, %23\l  %34 = freeze i32 %33\l  %35 = freeze i32 %24\l  %36 = udiv i32 %34, %35\l  %37 = add i32 %36, 1\l  %38 = mul i32 %36, %35\l  %39 = sub i32 %34, %38\l  %40 = add nuw i32 %39, 1\l  %41 = load i32, i32 addrspace(1)* getelementptr inbounds ([3 x [3 x i32]],\l... [3 x [3 x i32]] addrspace(1)* @Sobel_Gx, i64 0, i64 0, i64 0), align 16,\l... !tbaa !16\l  %42 = mul nsw i32 %36, %3\l  %43 = add nsw i32 %42, %39\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %44\l  %46 = load i8, i8 addrspace(1)* %45, align 1, !tbaa !20\l  %47 = zext i8 %46 to i32\l  %48 = mul nsw i32 %41, %47\l  %49 = load i32, i32 addrspace(1)* getelementptr inbounds ([3 x [3 x i32]],\l... [3 x [3 x i32]] addrspace(1)* @Sobel_Gx, i64 0, i64 0, i64 2), align 8, !tbaa\l... !16\l  %50 = add i32 %39, 2\l  %51 = add nsw i32 %50, %42\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %52\l  %54 = load i8, i8 addrspace(1)* %53, align 1, !tbaa !20\l  %55 = zext i8 %54 to i32\l  %56 = mul nsw i32 %49, %55\l  %57 = add nsw i32 %56, %48\l  %58 = load i32, i32 addrspace(1)* getelementptr inbounds ([3 x [3 x i32]],\l... [3 x [3 x i32]] addrspace(1)* @Sobel_Gx, i64 0, i64 1, i64 0), align 4, !tbaa\l... !16\l  %59 = mul nsw i32 %37, %3\l  %60 = add nsw i32 %59, %39\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %61\l  %63 = load i8, i8 addrspace(1)* %62, align 1, !tbaa !20\l  %64 = zext i8 %63 to i32\l  %65 = mul nsw i32 %58, %64\l  %66 = add nsw i32 %57, %65\l  %67 = load i32, i32 addrspace(1)* getelementptr inbounds ([3 x [3 x i32]],\l... [3 x [3 x i32]] addrspace(1)* @Sobel_Gx, i64 0, i64 1, i64 2), align 4, !tbaa\l... !16\l  %68 = add nsw i32 %59, %50\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %69\l  %71 = load i8, i8 addrspace(1)* %70, align 1, !tbaa !20\l  %72 = zext i8 %71 to i32\l  %73 = mul nsw i32 %67, %72\l  %74 = add nsw i32 %66, %73\l  %75 = load i32, i32 addrspace(1)* getelementptr inbounds ([3 x [3 x i32]],\l... [3 x [3 x i32]] addrspace(1)* @Sobel_Gx, i64 0, i64 2, i64 0), align 8, !tbaa\l... !16\l  %76 = add i32 %36, 2\l  %77 = mul nsw i32 %76, %3\l  %78 = add nsw i32 %77, %39\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %79\l  %81 = load i8, i8 addrspace(1)* %80, align 1, !tbaa !20\l  %82 = zext i8 %81 to i32\l  %83 = mul nsw i32 %75, %82\l  %84 = add nsw i32 %74, %83\l  %85 = load i32, i32 addrspace(1)* getelementptr inbounds ([3 x [3 x i32]],\l... [3 x [3 x i32]] addrspace(1)* @Sobel_Gx, i64 0, i64 2, i64 2), align 16,\l... !tbaa !16\l  %86 = add nsw i32 %77, %50\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %87\l  %89 = load i8, i8 addrspace(1)* %88, align 1, !tbaa !20\l  %90 = zext i8 %89 to i32\l  %91 = mul nsw i32 %85, %90\l  %92 = add nsw i32 %84, %91\l  %93 = sitofp i32 %92 to double\l  %94 = load i32, i32 addrspace(1)* getelementptr inbounds ([3 x [3 x i32]],\l... [3 x [3 x i32]] addrspace(1)* @Sobel_Gy, i64 0, i64 0, i64 0), align 16,\l... !tbaa !16\l  %95 = mul nsw i32 %94, %47\l  %96 = load i32, i32 addrspace(1)* getelementptr inbounds ([3 x [3 x i32]],\l... [3 x [3 x i32]] addrspace(1)* @Sobel_Gy, i64 0, i64 0, i64 1), align 4, !tbaa\l... !16\l  %97 = add nsw i32 %40, %42\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %98\l  %100 = load i8, i8 addrspace(1)* %99, align 1, !tbaa !20\l  %101 = zext i8 %100 to i32\l  %102 = mul nsw i32 %96, %101\l  %103 = add nsw i32 %102, %95\l  %104 = load i32, i32 addrspace(1)* getelementptr inbounds ([3 x [3 x i32]],\l... [3 x [3 x i32]] addrspace(1)* @Sobel_Gy, i64 0, i64 0, i64 2), align 8, !tbaa\l... !16\l  %105 = mul nsw i32 %104, %55\l  %106 = add nsw i32 %103, %105\l  %107 = load i32, i32 addrspace(1)* getelementptr inbounds ([3 x [3 x i32]],\l... [3 x [3 x i32]] addrspace(1)* @Sobel_Gy, i64 0, i64 2, i64 0), align 8, !tbaa\l... !16\l  %108 = mul nsw i32 %107, %82\l  %109 = add nsw i32 %106, %108\l  %110 = load i32, i32 addrspace(1)* getelementptr inbounds ([3 x [3 x i32]],\l... [3 x [3 x i32]] addrspace(1)* @Sobel_Gy, i64 0, i64 2, i64 1), align 4, !tbaa\l... !16\l  %111 = add nsw i32 %77, %40\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %112\l  %114 = load i8, i8 addrspace(1)* %113, align 1, !tbaa !20\l  %115 = zext i8 %114 to i32\l  %116 = mul nsw i32 %110, %115\l  %117 = add nsw i32 %109, %116\l  %118 = load i32, i32 addrspace(1)* getelementptr inbounds ([3 x [3 x i32]],\l... [3 x [3 x i32]] addrspace(1)* @Sobel_Gy, i64 0, i64 2, i64 2), align 16,\l... !tbaa !16\l  %119 = mul nsw i32 %118, %90\l  %120 = add nsw i32 %117, %119\l  %121 = sitofp i32 %120 to double\l  %122 = fmul contract double %93, %93\l  %123 = fmul contract double %121, %121\l  %124 = fadd contract double %122, %123\l  %125 = fcmp contract ogt double %124, %26\l  %126 = add nsw i32 %59, %40\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %127\l  %129 = sext i1 %125 to i8\l  store i8 %129, i8 addrspace(1)* %128, align 1, !tbaa !20\l  %130 = add nuw nsw i32 %29, 1\l  %131 = icmp slt i32 %37, %6\l  br i1 %131, label %28, label %27, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x5e98190:s0 -> Node0x5e98190;
	Node0x5e98190:s1 -> Node0x5e961f0;
}
