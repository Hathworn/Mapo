digraph "CFG for '_Z10__ADAGradmiiPfS_S_S_fS_ifS_iS_iS_iffiP12hiprandState' function" {
	label="CFG for '_Z10__ADAGradmiiPfS_S_S_fS_ifS_iS_iS_iffiP12hiprandState' function";

	Node0x50031b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%20:\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %22 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %23 = getelementptr i8, i8 addrspace(4)* %22, i64 4\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !5, !invariant.load !6\l  %26 = zext i16 %25 to i32\l  %27 = getelementptr inbounds i8, i8 addrspace(4)* %22, i64 12\l  %28 = bitcast i8 addrspace(4)* %27 to i32 addrspace(4)*\l  %29 = load i32, i32 addrspace(4)* %28, align 4, !tbaa !7\l  %30 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %31 = udiv i32 %29, %26\l  %32 = mul i32 %31, %26\l  %33 = icmp ugt i32 %29, %32\l  %34 = zext i1 %33 to i32\l  %35 = add i32 %31, %34\l  %36 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %37 = mul i32 %35, %36\l  %38 = add i32 %37, %30\l  %39 = mul i32 %38, %26\l  %40 = add i32 %39, %21\l  %41 = mul i32 %35, %26\l  %42 = getelementptr inbounds i8, i8 addrspace(4)* %22, i64 16\l  %43 = bitcast i8 addrspace(4)* %42 to i32 addrspace(4)*\l  %44 = load i32, i32 addrspace(4)* %43, align 8, !tbaa !16\l  %45 = getelementptr i8, i8 addrspace(4)* %22, i64 6\l  %46 = bitcast i8 addrspace(4)* %45 to i16 addrspace(4)*\l  %47 = load i16, i16 addrspace(4)* %46, align 2, !range !5, !invariant.load !6\l  %48 = zext i16 %47 to i32\l  %49 = udiv i32 %44, %48\l  %50 = mul i32 %49, %48\l  %51 = icmp ugt i32 %44, %50\l  %52 = zext i1 %51 to i32\l  %53 = add i32 %49, %52\l  %54 = mul i32 %41, %53\l  %55 = fcmp olt float %9, 0x39F0000000000000\l  %56 = select i1 %55, float 0x41F0000000000000, float 1.000000e+00\l  %57 = fmul float %56, %9\l  %58 = tail call float @llvm.sqrt.f32(float %57)\l  %59 = bitcast float %58 to i32\l  %60 = add nsw i32 %59, -1\l  %61 = bitcast i32 %60 to float\l  %62 = add nsw i32 %59, 1\l  %63 = bitcast i32 %62 to float\l  %64 = tail call i1 @llvm.amdgcn.class.f32(float %57, i32 608)\l  %65 = select i1 %55, float 0x3EF0000000000000, float 1.000000e+00\l  %66 = fneg float %63\l  %67 = tail call float @llvm.fma.f32(float %66, float %58, float %57)\l  %68 = fcmp ogt float %67, 0.000000e+00\l  %69 = fneg float %61\l  %70 = tail call float @llvm.fma.f32(float %69, float %58, float %57)\l  %71 = fcmp ole float %70, 0.000000e+00\l  %72 = select i1 %71, float %61, float %58\l  %73 = select i1 %68, float %63, float %72\l  %74 = fmul float %65, %73\l  %75 = select i1 %64, float %57, float %74\l  %76 = fsub contract float 1.000000e+00, %9\l  %77 = fcmp olt float %76, 0x39F0000000000000\l  %78 = select i1 %77, float 0x41F0000000000000, float 1.000000e+00\l  %79 = fmul float %76, %78\l  %80 = tail call float @llvm.sqrt.f32(float %79)\l  %81 = bitcast float %80 to i32\l  %82 = add nsw i32 %81, -1\l  %83 = bitcast i32 %82 to float\l  %84 = add nsw i32 %81, 1\l  %85 = bitcast i32 %84 to float\l  %86 = tail call i1 @llvm.amdgcn.class.f32(float %79, i32 608)\l  %87 = select i1 %77, float 0x3EF0000000000000, float 1.000000e+00\l  %88 = fneg float %85\l  %89 = tail call float @llvm.fma.f32(float %88, float %80, float %79)\l  %90 = fcmp ogt float %89, 0.000000e+00\l  %91 = fneg float %83\l  %92 = tail call float @llvm.fma.f32(float %91, float %80, float %79)\l  %93 = fcmp ole float %92, 0.000000e+00\l  %94 = select i1 %93, float %83, float %80\l  %95 = select i1 %90, float %85, float %94\l  %96 = fmul float %87, %95\l  %97 = select i1 %86, float %79, float %96\l  %98 = fcmp olt float %17, 0x39F0000000000000\l  %99 = select i1 %98, float 0x41F0000000000000, float 1.000000e+00\l  %100 = fmul float %99, %17\l  %101 = tail call float @llvm.sqrt.f32(float %100)\l  %102 = bitcast float %101 to i32\l  %103 = add nsw i32 %102, -1\l  %104 = bitcast i32 %103 to float\l  %105 = add nsw i32 %102, 1\l  %106 = bitcast i32 %105 to float\l  %107 = sext i32 %40 to i64\l  %108 = mul nsw i32 %1, %0\l  %109 = icmp slt i32 %40, %108\l  br i1 %109, label %110, label %487\l|{<s0>T|<s1>F}}"];
	Node0x50031b0:s0 -> Node0x500b340;
	Node0x50031b0:s1 -> Node0x500b390;
	Node0x500b340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%110:\l110:                                              \l  %111 = tail call i1 @llvm.amdgcn.class.f32(float %100, i32 608)\l  %112 = select i1 %98, float 0x3EF0000000000000, float 1.000000e+00\l  %113 = fneg float %106\l  %114 = tail call float @llvm.fma.f32(float %113, float %101, float %100)\l  %115 = fcmp ogt float %114, 0.000000e+00\l  %116 = fneg float %104\l  %117 = tail call float @llvm.fma.f32(float %116, float %101, float %100)\l  %118 = fcmp ole float %117, 0.000000e+00\l  %119 = select i1 %118, float %104, float %101\l  %120 = select i1 %115, float %106, float %119\l  %121 = fmul float %112, %120\l  %122 = select i1 %111, float %100, float %121\l  %123 = icmp eq i32 %18, 0\l  %124 = icmp sgt i32 %11, 1\l  %125 = icmp sgt i32 %13, 1\l  %126 = icmp sgt i32 %15, 1\l  %127 = tail call float @llvm.fabs.f32(float %122)\l  %128 = fcmp contract ogt float %16, 0.000000e+00\l  %129 = getelementptr %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %19, i64 %107, i32 0, i32 0, i32 1\l  %130 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %19, i64 %107, i32 0, i32 0, i32 3\l  %131 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %19, i64 %107, i32 0, i32 0, i32 5, i64 0\l  %132 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %19, i64 %107, i32 0, i32 0, i32 5, i64 1\l  %133 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %19, i64 %107, i32 0, i32 0, i32 5, i64 2\l  %134 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %19, i64 %107, i32 0, i32 0, i32 5, i64 3\l  %135 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %19, i64 %107, i32 0, i32 0, i32 5, i64 4\l  %136 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %19, i64 %107, i32 0, i32 0, i32 0\l  %137 = icmp sgt i32 %8, 0\l  %138 = icmp eq i32 %8, 1\l  br label %139\l}"];
	Node0x500b340 -> Node0x500d120;
	Node0x500d120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%139:\l139:                                              \l  %140 = phi i32 [ %40, %110 ], [ %485, %484 ]\l  %141 = sdiv i32 %140, %0\l  %142 = sext i32 %140 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %3, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !17\l  %145 = getelementptr inbounds float, float addrspace(1)* %4, i64 %142\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !17\l  %147 = fmul contract float %75, %144\l  %148 = fmul contract float %97, %146\l  %149 = tail call float @llvm.fabs.f32(float %147)\l  %150 = tail call float @llvm.fabs.f32(float %148)\l  %151 = tail call float @llvm.maxnum.f32(float %149, float %150)\l  %152 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %151)\l  %153 = sub nsw i32 0, %152\l  %154 = tail call float @llvm.amdgcn.ldexp.f32(float %149, i32 %153)\l  %155 = tail call float @llvm.amdgcn.ldexp.f32(float %150, i32 %153)\l  %156 = fmul float %155, %155\l  %157 = tail call float @llvm.fmuladd.f32(float %154, float %154, float %156)\l  %158 = tail call float @llvm.sqrt.f32(float %157)\l  %159 = tail call float @llvm.amdgcn.ldexp.f32(float %158, i32 %152)\l  %160 = tail call float @llvm.fabs.f32(float %151) #3\l  %161 = fcmp oeq float %160, 0x7FF0000000000000\l  %162 = select i1 %161, float 0x7FF0000000000000, float %159\l  store float %162, float addrspace(1)* %145, align 4, !tbaa !17\l  br i1 %123, label %484, label %163\l|{<s0>T|<s1>F}}"];
	Node0x500d120:s0 -> Node0x500d250;
	Node0x500d120:s1 -> Node0x500f1e0;
	Node0x500f1e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%163:\l163:                                              \l  %164 = mul nsw i32 %141, %0\l  %165 = sub nsw i32 %140, %164\l  %166 = getelementptr inbounds float, float addrspace(1)* %2, i64 %142\l  %167 = load float, float addrspace(1)* %166, align 4, !tbaa !17\l  %168 = sext i32 %165 to i64\l  %169 = select i1 %124, i64 %168, i64 0\l  %170 = getelementptr float, float addrspace(1)* %10, i64 %169\l  %171 = load float, float addrspace(1)* %170, align 4, !tbaa !17\l  %172 = select i1 %125, i64 %168, i64 0\l  %173 = getelementptr float, float addrspace(1)* %12, i64 %172\l  %174 = load float, float addrspace(1)* %173, align 4, !tbaa !17\l  %175 = select i1 %126, i64 %168, i64 0\l  %176 = getelementptr float, float addrspace(1)* %14, i64 %175\l  %177 = load float, float addrspace(1)* %176, align 4, !tbaa !17\l  %178 = tail call float @llvm.fabs.f32(float %162)\l  %179 = tail call float @llvm.maxnum.f32(float %178, float %127)\l  %180 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %179)\l  %181 = sub nsw i32 0, %180\l  %182 = tail call float @llvm.amdgcn.ldexp.f32(float %178, i32 %181)\l  %183 = tail call float @llvm.amdgcn.ldexp.f32(float %127, i32 %181)\l  %184 = fmul float %183, %183\l  %185 = tail call float @llvm.fmuladd.f32(float %182, float %182, float %184)\l  %186 = tail call float @llvm.sqrt.f32(float %185)\l  %187 = tail call float @llvm.amdgcn.ldexp.f32(float %186, i32 %180)\l  %188 = tail call float @llvm.fabs.f32(float %179) #3\l  %189 = fcmp oeq float %188, 0x7FF0000000000000\l  %190 = select i1 %189, float 0x7FF0000000000000, float %187\l  %191 = fcmp contract oeq float %171, 5.000000e-01\l  br i1 %191, label %385, label %192\l|{<s0>T|<s1>F}}"];
	Node0x500f1e0:s0 -> Node0x5010780;
	Node0x500f1e0:s1 -> Node0x50107d0;
	Node0x50107d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%192:\l192:                                              \l  %193 = fmul contract float %171, 2.000000e+00\l  %194 = tail call float @llvm.fabs.f32(float %190)\l  %195 = tail call float @llvm.amdgcn.frexp.mant.f32(float %194)\l  %196 = fcmp olt float %195, 0x3FE5555560000000\l  %197 = zext i1 %196 to i32\l  %198 = tail call float @llvm.amdgcn.ldexp.f32(float %195, i32 %197)\l  %199 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %194)\l  %200 = sub nsw i32 %199, %197\l  %201 = fadd float %198, -1.000000e+00\l  %202 = fadd float %198, 1.000000e+00\l  %203 = fadd float %202, -1.000000e+00\l  %204 = fsub float %198, %203\l  %205 = tail call float @llvm.amdgcn.rcp.f32(float %202)\l  %206 = fmul float %201, %205\l  %207 = fmul float %202, %206\l  %208 = fneg float %207\l  %209 = tail call float @llvm.fma.f32(float %206, float %202, float %208)\l  %210 = tail call float @llvm.fma.f32(float %206, float %204, float %209)\l  %211 = fadd float %207, %210\l  %212 = fsub float %211, %207\l  %213 = fsub float %210, %212\l  %214 = fsub float %201, %211\l  %215 = fsub float %201, %214\l  %216 = fsub float %215, %211\l  %217 = fsub float %216, %213\l  %218 = fadd float %214, %217\l  %219 = fmul float %205, %218\l  %220 = fadd float %206, %219\l  %221 = fsub float %220, %206\l  %222 = fsub float %219, %221\l  %223 = fmul float %220, %220\l  %224 = fneg float %223\l  %225 = tail call float @llvm.fma.f32(float %220, float %220, float %224)\l  %226 = fmul float %222, 2.000000e+00\l  %227 = tail call float @llvm.fma.f32(float %220, float %226, float %225)\l  %228 = fadd float %223, %227\l  %229 = fsub float %228, %223\l  %230 = fsub float %227, %229\l  %231 = tail call float @llvm.fmuladd.f32(float %228, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %232 = tail call float @llvm.fmuladd.f32(float %228, float %231, float\l... 0x3FD999BDE0000000)\l  %233 = sitofp i32 %200 to float\l  %234 = fmul float %233, 0x3FE62E4300000000\l  %235 = fneg float %234\l  %236 = tail call float @llvm.fma.f32(float %233, float 0x3FE62E4300000000,\l... float %235)\l  %237 = tail call float @llvm.fma.f32(float %233, float 0xBE205C6100000000,\l... float %236)\l  %238 = fadd float %234, %237\l  %239 = fsub float %238, %234\l  %240 = fsub float %237, %239\l  %241 = tail call float @llvm.amdgcn.ldexp.f32(float %220, i32 1)\l  %242 = fmul float %220, %228\l  %243 = fneg float %242\l  %244 = tail call float @llvm.fma.f32(float %228, float %220, float %243)\l  %245 = tail call float @llvm.fma.f32(float %228, float %222, float %244)\l  %246 = tail call float @llvm.fma.f32(float %230, float %220, float %245)\l  %247 = fadd float %242, %246\l  %248 = fsub float %247, %242\l  %249 = fsub float %246, %248\l  %250 = fmul float %228, %232\l  %251 = fneg float %250\l  %252 = tail call float @llvm.fma.f32(float %228, float %232, float %251)\l  %253 = tail call float @llvm.fma.f32(float %230, float %232, float %252)\l  %254 = fadd float %250, %253\l  %255 = fsub float %254, %250\l  %256 = fsub float %253, %255\l  %257 = fadd float %254, 0x3FE5555540000000\l  %258 = fadd float %257, 0xBFE5555540000000\l  %259 = fsub float %254, %258\l  %260 = fadd float %256, 0x3E2E720200000000\l  %261 = fadd float %260, %259\l  %262 = fadd float %257, %261\l  %263 = fsub float %262, %257\l  %264 = fsub float %261, %263\l  %265 = fmul float %247, %262\l  %266 = fneg float %265\l  %267 = tail call float @llvm.fma.f32(float %247, float %262, float %266)\l  %268 = tail call float @llvm.fma.f32(float %247, float %264, float %267)\l  %269 = tail call float @llvm.fma.f32(float %249, float %262, float %268)\l  %270 = tail call float @llvm.amdgcn.ldexp.f32(float %222, i32 1)\l  %271 = fadd float %265, %269\l  %272 = fsub float %271, %265\l  %273 = fsub float %269, %272\l  %274 = fadd float %241, %271\l  %275 = fsub float %274, %241\l  %276 = fsub float %271, %275\l  %277 = fadd float %270, %273\l  %278 = fadd float %277, %276\l  %279 = fadd float %274, %278\l  %280 = fsub float %279, %274\l  %281 = fsub float %278, %280\l  %282 = fadd float %238, %279\l  %283 = fsub float %282, %238\l  %284 = fsub float %282, %283\l  %285 = fsub float %238, %284\l  %286 = fsub float %279, %283\l  %287 = fadd float %286, %285\l  %288 = fadd float %240, %281\l  %289 = fsub float %288, %240\l  %290 = fsub float %288, %289\l  %291 = fsub float %240, %290\l  %292 = fsub float %281, %289\l  %293 = fadd float %292, %291\l  %294 = fadd float %288, %287\l  %295 = fadd float %282, %294\l  %296 = fsub float %295, %282\l  %297 = fsub float %294, %296\l  %298 = fadd float %293, %297\l  %299 = fadd float %295, %298\l  %300 = fsub float %299, %295\l  %301 = fsub float %298, %300\l  %302 = fmul float %299, %193\l  %303 = fneg float %302\l  %304 = tail call float @llvm.fma.f32(float %193, float %299, float %303)\l  %305 = tail call float @llvm.fma.f32(float %193, float %301, float %304)\l  %306 = fadd float %302, %305\l  %307 = fsub float %306, %302\l  %308 = fsub float %305, %307\l  %309 = tail call float @llvm.fabs.f32(float %302) #3\l  %310 = fcmp oeq float %309, 0x7FF0000000000000\l  %311 = select i1 %310, float %302, float %306\l  %312 = tail call float @llvm.fabs.f32(float %311) #3\l  %313 = fcmp oeq float %312, 0x7FF0000000000000\l  %314 = select i1 %313, float 0.000000e+00, float %308\l  %315 = fcmp oeq float %311, 0x40562E4300000000\l  %316 = select i1 %315, float 0x3EE0000000000000, float 0.000000e+00\l  %317 = fsub float %311, %316\l  %318 = fadd float %316, %314\l  %319 = fmul float %317, 0x3FF7154760000000\l  %320 = tail call float @llvm.rint.f32(float %319)\l  %321 = fcmp ogt float %317, 0x40562E4300000000\l  %322 = fcmp olt float %317, 0xC059D1DA00000000\l  %323 = fneg float %319\l  %324 = tail call float @llvm.fma.f32(float %317, float 0x3FF7154760000000,\l... float %323)\l  %325 = tail call float @llvm.fma.f32(float %317, float 0x3E54AE0BE0000000,\l... float %324)\l  %326 = fsub float %319, %320\l  %327 = fadd float %325, %326\l  %328 = tail call float @llvm.exp2.f32(float %327)\l  %329 = fptosi float %320 to i32\l  %330 = tail call float @llvm.amdgcn.ldexp.f32(float %328, i32 %329)\l  %331 = select i1 %322, float 0.000000e+00, float %330\l  %332 = select i1 %321, float 0x7FF0000000000000, float %331\l  %333 = tail call float @llvm.fma.f32(float %332, float %318, float %332)\l  %334 = tail call float @llvm.fabs.f32(float %332) #3\l  %335 = fcmp oeq float %334, 0x7FF0000000000000\l  %336 = select i1 %335, float %332, float %333\l  %337 = tail call float @llvm.fabs.f32(float %193)\l  %338 = tail call float @llvm.trunc.f32(float %337)\l  %339 = fcmp oeq float %337, %338\l  %340 = zext i1 %339 to i32\l  %341 = fmul float %338, 5.000000e-01\l  %342 = tail call float @llvm.amdgcn.fract.f32(float %341)\l  %343 = tail call i1 @llvm.amdgcn.class.f32(float %341, i32 516)\l  %344 = select i1 %343, float 0.000000e+00, float %342\l  %345 = fcmp oeq float %344, 0.000000e+00\l  %346 = and i1 %339, %345\l  %347 = zext i1 %346 to i32\l  %348 = add nuw nsw i32 %347, %340\l  %349 = icmp eq i32 %348, 1\l  %350 = fcmp olt float %190, 0.000000e+00\l  %351 = and i1 %350, %349\l  %352 = select i1 %351, float -0.000000e+00, float 0.000000e+00\l  %353 = tail call float @llvm.copysign.f32(float %336, float %352)\l  %354 = fcmp uge float %190, 0.000000e+00\l  %355 = icmp ne i32 %348, 0\l  %356 = select i1 %354, i1 true, i1 %355\l  %357 = select i1 %356, float %353, float 0x7FF8000000000000\l  %358 = fcmp oeq float %337, 0x7FF0000000000000\l  br i1 %358, label %359, label %368\l|{<s0>T|<s1>F}}"];
	Node0x50107d0:s0 -> Node0x5019010;
	Node0x50107d0:s1 -> Node0x50190a0;
	Node0x5019010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%359:\l359:                                              \l  %360 = fcmp oeq float %194, 1.000000e+00\l  %361 = fadd float %194, -1.000000e+00\l  %362 = bitcast float %193 to i32\l  %363 = bitcast float %361 to i32\l  %364 = xor i32 %362, %363\l  %365 = icmp sgt i32 %364, -1\l  %366 = select i1 %365, float 0x7FF0000000000000, float 0.000000e+00\l  %367 = select i1 %360, float %194, float %366\l  br label %368\l}"];
	Node0x5019010 -> Node0x50190a0;
	Node0x50190a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%368:\l368:                                              \l  %369 = phi float [ %357, %192 ], [ %367, %359 ]\l  %370 = fcmp oeq float %194, 0x7FF0000000000000\l  %371 = fcmp oeq float %190, 0.000000e+00\l  %372 = or i1 %371, %370\l  %373 = fcmp olt float %193, 0.000000e+00\l  %374 = xor i1 %371, %373\l  %375 = select i1 %374, float 0.000000e+00, float 0x7FF0000000000000\l  %376 = select i1 %349, float %190, float 0.000000e+00\l  %377 = tail call float @llvm.copysign.f32(float %375, float %376)\l  %378 = select i1 %372, float %377, float %369\l  %379 = fcmp uno float %190, %193\l  %380 = select i1 %379, float 0x7FF8000000000000, float %378\l  %381 = fcmp oeq float %190, 1.000000e+00\l  %382 = fcmp oeq float %193, 0.000000e+00\l  %383 = or i1 %381, %382\l  %384 = select i1 %383, float 1.000000e+00, float %380\l  br label %385\l}"];
	Node0x50190a0 -> Node0x5010780;
	Node0x5010780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%385:\l385:                                              \l  %386 = phi contract float [ %384, %368 ], [ %190, %163 ]\l  %387 = fdiv contract float %144, %386\l  br i1 %128, label %388, label %467\l|{<s0>T|<s1>F}}"];
	Node0x5010780:s0 -> Node0x501a2c0;
	Node0x5010780:s1 -> Node0x501a310;
	Node0x501a2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%388:\l388:                                              \l  %389 = load i32, i32 addrspace(1)* %129, align 4, !tbaa !21\l  %390 = icmp eq i32 %389, 0\l  br i1 %390, label %393, label %391\l|{<s0>T|<s1>F}}"];
	Node0x501a2c0:s0 -> Node0x501a640;
	Node0x501a2c0:s1 -> Node0x501a6d0;
	Node0x501a6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%391:\l391:                                              \l  store i32 0, i32 addrspace(1)* %129, align 4, !tbaa !21\l  %392 = load float, float addrspace(1)* %130, align 4, !tbaa !26\l  br label %463\l}"];
	Node0x501a6d0 -> Node0x501b020;
	Node0x501a640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%393:\l393:                                              \l  %394 = load i32, i32 addrspace(1)* %131, align 8, !tbaa !27\l  %395 = lshr i32 %394, 2\l  %396 = xor i32 %395, %394\l  %397 = load i32, i32 addrspace(1)* %132, align 4, !tbaa !27\l  %398 = load i32, i32 addrspace(1)* %133, align 8, !tbaa !27\l  %399 = load i32, i32 addrspace(1)* %134, align 4, !tbaa !27\l  %400 = load i32, i32 addrspace(1)* %135, align 8, !tbaa !27\l  %401 = shl i32 %400, 4\l  %402 = shl i32 %396, 1\l  %403 = xor i32 %402, %401\l  %404 = xor i32 %403, %396\l  %405 = xor i32 %404, %400\l  %406 = load i32, i32 addrspace(1)* %136, align 8, !tbaa !28\l  %407 = add i32 %406, 362437\l  %408 = add i32 %407, %405\l  %409 = lshr i32 %397, 2\l  %410 = xor i32 %409, %397\l  store i32 %398, i32 addrspace(1)* %131, align 8, !tbaa !27\l  store i32 %399, i32 addrspace(1)* %132, align 4, !tbaa !27\l  store i32 %400, i32 addrspace(1)* %133, align 8, !tbaa !27\l  store i32 %405, i32 addrspace(1)* %134, align 4, !tbaa !27\l  %411 = shl i32 %405, 4\l  %412 = shl i32 %410, 1\l  %413 = xor i32 %412, %411\l  %414 = xor i32 %413, %410\l  %415 = xor i32 %414, %405\l  store i32 %415, i32 addrspace(1)* %135, align 8, !tbaa !27\l  %416 = add i32 %406, 724874\l  store i32 %416, i32 addrspace(1)* %136, align 8, !tbaa !28\l  %417 = add i32 %415, %416\l  %418 = uitofp i32 %408 to float\l  %419 = fmul contract float %418, 0x3DF0000000000000\l  %420 = fadd contract float %419, 0x3DF0000000000000\l  %421 = uitofp i32 %417 to float\l  %422 = fmul contract float %421, 0x3E1921FB60000000\l  %423 = fadd contract float %422, 0x3E1921FB60000000\l  %424 = tail call i1 @llvm.amdgcn.class.f32(float %420, i32 144)\l  %425 = select i1 %424, float 0x41F0000000000000, float 1.000000e+00\l  %426 = fmul float %420, %425\l  %427 = tail call float @llvm.log2.f32(float %426)\l  %428 = fmul float %427, 0x3FE62E42E0000000\l  %429 = tail call i1 @llvm.amdgcn.class.f32(float %427, i32 519)\l  %430 = fneg float %428\l  %431 = tail call float @llvm.fma.f32(float %427, float 0x3FE62E42E0000000,\l... float %430)\l  %432 = tail call float @llvm.fma.f32(float %427, float 0x3E6EFA39E0000000,\l... float %431)\l  %433 = fadd float %428, %432\l  %434 = select i1 %429, float %427, float %433\l  %435 = select i1 %424, float 0x40362E4300000000, float 0.000000e+00\l  %436 = fsub float %434, %435\l  %437 = fmul contract float %436, -2.000000e+00\l  %438 = fcmp olt float %437, 0x39F0000000000000\l  %439 = select i1 %438, float 0x41F0000000000000, float 1.000000e+00\l  %440 = fmul float %437, %439\l  %441 = tail call float @llvm.sqrt.f32(float %440)\l  %442 = bitcast float %441 to i32\l  %443 = add nsw i32 %442, -1\l  %444 = bitcast i32 %443 to float\l  %445 = add nsw i32 %442, 1\l  %446 = bitcast i32 %445 to float\l  %447 = tail call i1 @llvm.amdgcn.class.f32(float %440, i32 608)\l  %448 = select i1 %438, float 0x3EF0000000000000, float 1.000000e+00\l  %449 = fneg float %446\l  %450 = tail call float @llvm.fma.f32(float %449, float %441, float %440)\l  %451 = fcmp ogt float %450, 0.000000e+00\l  %452 = fneg float %444\l  %453 = tail call float @llvm.fma.f32(float %452, float %441, float %440)\l  %454 = fcmp ole float %453, 0.000000e+00\l  %455 = select i1 %454, float %444, float %441\l  %456 = select i1 %451, float %446, float %455\l  %457 = fmul float %448, %456\l  %458 = select i1 %447, float %440, float %457\l  %459 = tail call float @llvm.sin.f32(float %423)\l  %460 = tail call float @llvm.cos.f32(float %423)\l  %461 = fmul contract float %459, %458\l  %462 = fmul contract float %460, %458\l  store i32 1, i32 addrspace(1)* %129, align 4, !tbaa !21\l  store float %462, float addrspace(1)* %130, align 4, !tbaa !26\l  br label %463\l}"];
	Node0x501a640 -> Node0x501b020;
	Node0x501b020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%463:\l463:                                              \l  %464 = phi float [ %392, %391 ], [ %461, %393 ]\l  %465 = fmul contract float %464, %16\l  %466 = fadd contract float %387, %465\l  br label %467\l}"];
	Node0x501b020 -> Node0x501a310;
	Node0x501a310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%467:\l467:                                              \l  %468 = phi float [ %466, %463 ], [ %387, %385 ]\l  %469 = fmul contract float %177, %468\l  %470 = fmul contract float %174, %469\l  %471 = getelementptr inbounds float, float addrspace(1)* %5, i64 %142\l  %472 = load float, float addrspace(1)* %471, align 4, !tbaa !17\l  %473 = fmul contract float %472, %6\l  %474 = fadd contract float %470, %473\l  store float %474, float addrspace(1)* %471, align 4, !tbaa !17\l  %475 = fadd contract float %167, %474\l  br i1 %137, label %476, label %482\l|{<s0>T|<s1>F}}"];
	Node0x501a310:s0 -> Node0x50203c0;
	Node0x501a310:s1 -> Node0x5020410;
	Node0x50203c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%476:\l476:                                              \l  %477 = sext i32 %141 to i64\l  %478 = select i1 %138, i64 %477, i64 %142\l  %479 = getelementptr inbounds float, float addrspace(1)* %7, i64 %478\l  %480 = load float, float addrspace(1)* %479, align 4, !tbaa !17\l  %481 = fmul contract float %475, %480\l  br label %482\l}"];
	Node0x50203c0 -> Node0x5020410;
	Node0x5020410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%482:\l482:                                              \l  %483 = phi float [ %475, %467 ], [ %481, %476 ]\l  store float %483, float addrspace(1)* %166, align 4, !tbaa !17\l  br label %484\l}"];
	Node0x5020410 -> Node0x500d250;
	Node0x500d250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%484:\l484:                                              \l  %485 = add nsw i32 %140, %54\l  %486 = icmp slt i32 %485, %108\l  br i1 %486, label %139, label %487, !llvm.loop !29\l|{<s0>T|<s1>F}}"];
	Node0x500d250:s0 -> Node0x500d120;
	Node0x500d250:s1 -> Node0x500b390;
	Node0x500b390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%487:\l487:                                              \l  ret void\l}"];
}
