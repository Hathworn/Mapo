digraph "CFG for '_Z9__ADAGradiiPfS_S_S_ifS_iS_iS_iffiP12hiprandState' function" {
	label="CFG for '_Z9__ADAGradiiPfS_S_S_ifS_iS_iS_iffiP12hiprandState' function";

	Node0x60a5250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%18:\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %20 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %21 = getelementptr i8, i8 addrspace(4)* %20, i64 4\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 4, !range !5, !invariant.load !6\l  %24 = zext i16 %23 to i32\l  %25 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 12\l  %26 = bitcast i8 addrspace(4)* %25 to i32 addrspace(4)*\l  %27 = load i32, i32 addrspace(4)* %26, align 4, !tbaa !7\l  %28 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %29 = udiv i32 %27, %24\l  %30 = mul i32 %29, %24\l  %31 = icmp ugt i32 %27, %30\l  %32 = zext i1 %31 to i32\l  %33 = add i32 %29, %32\l  %34 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %35 = mul i32 %33, %34\l  %36 = add i32 %35, %28\l  %37 = mul i32 %36, %24\l  %38 = add i32 %37, %19\l  %39 = mul i32 %33, %24\l  %40 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 16\l  %41 = bitcast i8 addrspace(4)* %40 to i32 addrspace(4)*\l  %42 = load i32, i32 addrspace(4)* %41, align 8, !tbaa !16\l  %43 = getelementptr i8, i8 addrspace(4)* %20, i64 6\l  %44 = bitcast i8 addrspace(4)* %43 to i16 addrspace(4)*\l  %45 = load i16, i16 addrspace(4)* %44, align 2, !range !5, !invariant.load !6\l  %46 = zext i16 %45 to i32\l  %47 = udiv i32 %42, %46\l  %48 = mul i32 %47, %46\l  %49 = icmp ugt i32 %42, %48\l  %50 = zext i1 %49 to i32\l  %51 = add i32 %47, %50\l  %52 = mul i32 %39, %51\l  %53 = fcmp olt float %7, 0x39F0000000000000\l  %54 = select i1 %53, float 0x41F0000000000000, float 1.000000e+00\l  %55 = fmul float %54, %7\l  %56 = tail call float @llvm.sqrt.f32(float %55)\l  %57 = bitcast float %56 to i32\l  %58 = add nsw i32 %57, -1\l  %59 = bitcast i32 %58 to float\l  %60 = add nsw i32 %57, 1\l  %61 = bitcast i32 %60 to float\l  %62 = tail call i1 @llvm.amdgcn.class.f32(float %55, i32 608)\l  %63 = select i1 %53, float 0x3EF0000000000000, float 1.000000e+00\l  %64 = fneg float %61\l  %65 = tail call float @llvm.fma.f32(float %64, float %56, float %55)\l  %66 = fcmp ogt float %65, 0.000000e+00\l  %67 = fneg float %59\l  %68 = tail call float @llvm.fma.f32(float %67, float %56, float %55)\l  %69 = fcmp ole float %68, 0.000000e+00\l  %70 = select i1 %69, float %59, float %56\l  %71 = select i1 %66, float %61, float %70\l  %72 = fmul float %63, %71\l  %73 = select i1 %62, float %55, float %72\l  %74 = fsub contract float 1.000000e+00, %7\l  %75 = fcmp olt float %74, 0x39F0000000000000\l  %76 = select i1 %75, float 0x41F0000000000000, float 1.000000e+00\l  %77 = fmul float %74, %76\l  %78 = tail call float @llvm.sqrt.f32(float %77)\l  %79 = bitcast float %78 to i32\l  %80 = add nsw i32 %79, -1\l  %81 = bitcast i32 %80 to float\l  %82 = add nsw i32 %79, 1\l  %83 = bitcast i32 %82 to float\l  %84 = tail call i1 @llvm.amdgcn.class.f32(float %77, i32 608)\l  %85 = select i1 %75, float 0x3EF0000000000000, float 1.000000e+00\l  %86 = fneg float %83\l  %87 = tail call float @llvm.fma.f32(float %86, float %78, float %77)\l  %88 = fcmp ogt float %87, 0.000000e+00\l  %89 = fneg float %81\l  %90 = tail call float @llvm.fma.f32(float %89, float %78, float %77)\l  %91 = fcmp ole float %90, 0.000000e+00\l  %92 = select i1 %91, float %81, float %78\l  %93 = select i1 %88, float %83, float %92\l  %94 = fmul float %85, %93\l  %95 = select i1 %84, float %77, float %94\l  %96 = fcmp olt float %15, 0x39F0000000000000\l  %97 = select i1 %96, float 0x41F0000000000000, float 1.000000e+00\l  %98 = fmul float %97, %15\l  %99 = tail call float @llvm.sqrt.f32(float %98)\l  %100 = bitcast float %99 to i32\l  %101 = add nsw i32 %100, -1\l  %102 = bitcast i32 %101 to float\l  %103 = add nsw i32 %100, 1\l  %104 = bitcast i32 %103 to float\l  %105 = sext i32 %38 to i64\l  %106 = mul nsw i32 %1, %0\l  %107 = icmp slt i32 %38, %106\l  br i1 %107, label %108, label %481\l|{<s0>T|<s1>F}}"];
	Node0x60a5250:s0 -> Node0x60ad2c0;
	Node0x60a5250:s1 -> Node0x60ad310;
	Node0x60ad2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%108:\l108:                                              \l  %109 = tail call i1 @llvm.amdgcn.class.f32(float %98, i32 608)\l  %110 = select i1 %96, float 0x3EF0000000000000, float 1.000000e+00\l  %111 = fneg float %104\l  %112 = tail call float @llvm.fma.f32(float %111, float %99, float %98)\l  %113 = fcmp ogt float %112, 0.000000e+00\l  %114 = fneg float %102\l  %115 = tail call float @llvm.fma.f32(float %114, float %99, float %98)\l  %116 = fcmp ole float %115, 0.000000e+00\l  %117 = select i1 %116, float %102, float %99\l  %118 = select i1 %113, float %104, float %117\l  %119 = fmul float %110, %118\l  %120 = select i1 %109, float %98, float %119\l  %121 = icmp eq i32 %16, 0\l  %122 = icmp sgt i32 %9, 1\l  %123 = icmp sgt i32 %11, 1\l  %124 = icmp sgt i32 %13, 1\l  %125 = tail call float @llvm.fabs.f32(float %120)\l  %126 = fcmp contract ogt float %14, 0.000000e+00\l  %127 = getelementptr %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %17, i64 %105, i32 0, i32 0, i32 1\l  %128 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %17, i64 %105, i32 0, i32 0, i32 3\l  %129 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %17, i64 %105, i32 0, i32 0, i32 5, i64 0\l  %130 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %17, i64 %105, i32 0, i32 0, i32 5, i64 1\l  %131 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %17, i64 %105, i32 0, i32 0, i32 5, i64 2\l  %132 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %17, i64 %105, i32 0, i32 0, i32 5, i64 3\l  %133 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %17, i64 %105, i32 0, i32 0, i32 5, i64 4\l  %134 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %17, i64 %105, i32 0, i32 0, i32 0\l  %135 = icmp sgt i32 %6, 0\l  %136 = icmp eq i32 %6, 1\l  br label %137\l}"];
	Node0x60ad2c0 -> Node0x60ab660;
	Node0x60ab660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%137:\l137:                                              \l  %138 = phi i32 [ %38, %108 ], [ %479, %478 ]\l  %139 = sdiv i32 %138, %0\l  %140 = sext i32 %138 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %3, i64 %140\l  %142 = load float, float addrspace(1)* %141, align 4, !tbaa !17\l  %143 = getelementptr inbounds float, float addrspace(1)* %4, i64 %140\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !17\l  %145 = fmul contract float %73, %142\l  %146 = fmul contract float %95, %144\l  %147 = tail call float @llvm.fabs.f32(float %145)\l  %148 = tail call float @llvm.fabs.f32(float %146)\l  %149 = tail call float @llvm.maxnum.f32(float %147, float %148)\l  %150 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %149)\l  %151 = sub nsw i32 0, %150\l  %152 = tail call float @llvm.amdgcn.ldexp.f32(float %147, i32 %151)\l  %153 = tail call float @llvm.amdgcn.ldexp.f32(float %148, i32 %151)\l  %154 = fmul float %153, %153\l  %155 = tail call float @llvm.fmuladd.f32(float %152, float %152, float %154)\l  %156 = tail call float @llvm.sqrt.f32(float %155)\l  %157 = tail call float @llvm.amdgcn.ldexp.f32(float %156, i32 %150)\l  %158 = tail call float @llvm.fabs.f32(float %149) #3\l  %159 = fcmp oeq float %158, 0x7FF0000000000000\l  %160 = select i1 %159, float 0x7FF0000000000000, float %157\l  store float %160, float addrspace(1)* %143, align 4, !tbaa !17\l  br i1 %121, label %478, label %161\l|{<s0>T|<s1>F}}"];
	Node0x60ab660:s0 -> Node0x60af1b0;
	Node0x60ab660:s1 -> Node0x60b1140;
	Node0x60b1140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%161:\l161:                                              \l  %162 = mul nsw i32 %139, %0\l  %163 = sub nsw i32 %138, %162\l  %164 = getelementptr inbounds float, float addrspace(1)* %2, i64 %140\l  %165 = load float, float addrspace(1)* %164, align 4, !tbaa !17\l  %166 = sext i32 %163 to i64\l  %167 = select i1 %122, i64 %166, i64 0\l  %168 = getelementptr float, float addrspace(1)* %8, i64 %167\l  %169 = load float, float addrspace(1)* %168, align 4, !tbaa !17\l  %170 = select i1 %123, i64 %166, i64 0\l  %171 = getelementptr float, float addrspace(1)* %10, i64 %170\l  %172 = load float, float addrspace(1)* %171, align 4, !tbaa !17\l  %173 = select i1 %124, i64 %166, i64 0\l  %174 = getelementptr float, float addrspace(1)* %12, i64 %173\l  %175 = load float, float addrspace(1)* %174, align 4, !tbaa !17\l  %176 = tail call float @llvm.fabs.f32(float %160)\l  %177 = tail call float @llvm.maxnum.f32(float %176, float %125)\l  %178 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %177)\l  %179 = sub nsw i32 0, %178\l  %180 = tail call float @llvm.amdgcn.ldexp.f32(float %176, i32 %179)\l  %181 = tail call float @llvm.amdgcn.ldexp.f32(float %125, i32 %179)\l  %182 = fmul float %181, %181\l  %183 = tail call float @llvm.fmuladd.f32(float %180, float %180, float %182)\l  %184 = tail call float @llvm.sqrt.f32(float %183)\l  %185 = tail call float @llvm.amdgcn.ldexp.f32(float %184, i32 %178)\l  %186 = tail call float @llvm.fabs.f32(float %177) #3\l  %187 = fcmp oeq float %186, 0x7FF0000000000000\l  %188 = select i1 %187, float 0x7FF0000000000000, float %185\l  %189 = fcmp contract oeq float %169, 5.000000e-01\l  br i1 %189, label %383, label %190\l|{<s0>T|<s1>F}}"];
	Node0x60b1140:s0 -> Node0x60b2700;
	Node0x60b1140:s1 -> Node0x60b2750;
	Node0x60b2750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%190:\l190:                                              \l  %191 = fmul contract float %169, 2.000000e+00\l  %192 = tail call float @llvm.fabs.f32(float %188)\l  %193 = tail call float @llvm.amdgcn.frexp.mant.f32(float %192)\l  %194 = fcmp olt float %193, 0x3FE5555560000000\l  %195 = zext i1 %194 to i32\l  %196 = tail call float @llvm.amdgcn.ldexp.f32(float %193, i32 %195)\l  %197 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %192)\l  %198 = sub nsw i32 %197, %195\l  %199 = fadd float %196, -1.000000e+00\l  %200 = fadd float %196, 1.000000e+00\l  %201 = fadd float %200, -1.000000e+00\l  %202 = fsub float %196, %201\l  %203 = tail call float @llvm.amdgcn.rcp.f32(float %200)\l  %204 = fmul float %199, %203\l  %205 = fmul float %200, %204\l  %206 = fneg float %205\l  %207 = tail call float @llvm.fma.f32(float %204, float %200, float %206)\l  %208 = tail call float @llvm.fma.f32(float %204, float %202, float %207)\l  %209 = fadd float %205, %208\l  %210 = fsub float %209, %205\l  %211 = fsub float %208, %210\l  %212 = fsub float %199, %209\l  %213 = fsub float %199, %212\l  %214 = fsub float %213, %209\l  %215 = fsub float %214, %211\l  %216 = fadd float %212, %215\l  %217 = fmul float %203, %216\l  %218 = fadd float %204, %217\l  %219 = fsub float %218, %204\l  %220 = fsub float %217, %219\l  %221 = fmul float %218, %218\l  %222 = fneg float %221\l  %223 = tail call float @llvm.fma.f32(float %218, float %218, float %222)\l  %224 = fmul float %220, 2.000000e+00\l  %225 = tail call float @llvm.fma.f32(float %218, float %224, float %223)\l  %226 = fadd float %221, %225\l  %227 = fsub float %226, %221\l  %228 = fsub float %225, %227\l  %229 = tail call float @llvm.fmuladd.f32(float %226, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %230 = tail call float @llvm.fmuladd.f32(float %226, float %229, float\l... 0x3FD999BDE0000000)\l  %231 = sitofp i32 %198 to float\l  %232 = fmul float %231, 0x3FE62E4300000000\l  %233 = fneg float %232\l  %234 = tail call float @llvm.fma.f32(float %231, float 0x3FE62E4300000000,\l... float %233)\l  %235 = tail call float @llvm.fma.f32(float %231, float 0xBE205C6100000000,\l... float %234)\l  %236 = fadd float %232, %235\l  %237 = fsub float %236, %232\l  %238 = fsub float %235, %237\l  %239 = tail call float @llvm.amdgcn.ldexp.f32(float %218, i32 1)\l  %240 = fmul float %218, %226\l  %241 = fneg float %240\l  %242 = tail call float @llvm.fma.f32(float %226, float %218, float %241)\l  %243 = tail call float @llvm.fma.f32(float %226, float %220, float %242)\l  %244 = tail call float @llvm.fma.f32(float %228, float %218, float %243)\l  %245 = fadd float %240, %244\l  %246 = fsub float %245, %240\l  %247 = fsub float %244, %246\l  %248 = fmul float %226, %230\l  %249 = fneg float %248\l  %250 = tail call float @llvm.fma.f32(float %226, float %230, float %249)\l  %251 = tail call float @llvm.fma.f32(float %228, float %230, float %250)\l  %252 = fadd float %248, %251\l  %253 = fsub float %252, %248\l  %254 = fsub float %251, %253\l  %255 = fadd float %252, 0x3FE5555540000000\l  %256 = fadd float %255, 0xBFE5555540000000\l  %257 = fsub float %252, %256\l  %258 = fadd float %254, 0x3E2E720200000000\l  %259 = fadd float %258, %257\l  %260 = fadd float %255, %259\l  %261 = fsub float %260, %255\l  %262 = fsub float %259, %261\l  %263 = fmul float %245, %260\l  %264 = fneg float %263\l  %265 = tail call float @llvm.fma.f32(float %245, float %260, float %264)\l  %266 = tail call float @llvm.fma.f32(float %245, float %262, float %265)\l  %267 = tail call float @llvm.fma.f32(float %247, float %260, float %266)\l  %268 = tail call float @llvm.amdgcn.ldexp.f32(float %220, i32 1)\l  %269 = fadd float %263, %267\l  %270 = fsub float %269, %263\l  %271 = fsub float %267, %270\l  %272 = fadd float %239, %269\l  %273 = fsub float %272, %239\l  %274 = fsub float %269, %273\l  %275 = fadd float %268, %271\l  %276 = fadd float %275, %274\l  %277 = fadd float %272, %276\l  %278 = fsub float %277, %272\l  %279 = fsub float %276, %278\l  %280 = fadd float %236, %277\l  %281 = fsub float %280, %236\l  %282 = fsub float %280, %281\l  %283 = fsub float %236, %282\l  %284 = fsub float %277, %281\l  %285 = fadd float %284, %283\l  %286 = fadd float %238, %279\l  %287 = fsub float %286, %238\l  %288 = fsub float %286, %287\l  %289 = fsub float %238, %288\l  %290 = fsub float %279, %287\l  %291 = fadd float %290, %289\l  %292 = fadd float %286, %285\l  %293 = fadd float %280, %292\l  %294 = fsub float %293, %280\l  %295 = fsub float %292, %294\l  %296 = fadd float %291, %295\l  %297 = fadd float %293, %296\l  %298 = fsub float %297, %293\l  %299 = fsub float %296, %298\l  %300 = fmul float %297, %191\l  %301 = fneg float %300\l  %302 = tail call float @llvm.fma.f32(float %191, float %297, float %301)\l  %303 = tail call float @llvm.fma.f32(float %191, float %299, float %302)\l  %304 = fadd float %300, %303\l  %305 = fsub float %304, %300\l  %306 = fsub float %303, %305\l  %307 = tail call float @llvm.fabs.f32(float %300) #3\l  %308 = fcmp oeq float %307, 0x7FF0000000000000\l  %309 = select i1 %308, float %300, float %304\l  %310 = tail call float @llvm.fabs.f32(float %309) #3\l  %311 = fcmp oeq float %310, 0x7FF0000000000000\l  %312 = select i1 %311, float 0.000000e+00, float %306\l  %313 = fcmp oeq float %309, 0x40562E4300000000\l  %314 = select i1 %313, float 0x3EE0000000000000, float 0.000000e+00\l  %315 = fsub float %309, %314\l  %316 = fadd float %314, %312\l  %317 = fmul float %315, 0x3FF7154760000000\l  %318 = tail call float @llvm.rint.f32(float %317)\l  %319 = fcmp ogt float %315, 0x40562E4300000000\l  %320 = fcmp olt float %315, 0xC059D1DA00000000\l  %321 = fneg float %317\l  %322 = tail call float @llvm.fma.f32(float %315, float 0x3FF7154760000000,\l... float %321)\l  %323 = tail call float @llvm.fma.f32(float %315, float 0x3E54AE0BE0000000,\l... float %322)\l  %324 = fsub float %317, %318\l  %325 = fadd float %323, %324\l  %326 = tail call float @llvm.exp2.f32(float %325)\l  %327 = fptosi float %318 to i32\l  %328 = tail call float @llvm.amdgcn.ldexp.f32(float %326, i32 %327)\l  %329 = select i1 %320, float 0.000000e+00, float %328\l  %330 = select i1 %319, float 0x7FF0000000000000, float %329\l  %331 = tail call float @llvm.fma.f32(float %330, float %316, float %330)\l  %332 = tail call float @llvm.fabs.f32(float %330) #3\l  %333 = fcmp oeq float %332, 0x7FF0000000000000\l  %334 = select i1 %333, float %330, float %331\l  %335 = tail call float @llvm.fabs.f32(float %191)\l  %336 = tail call float @llvm.trunc.f32(float %335)\l  %337 = fcmp oeq float %335, %336\l  %338 = zext i1 %337 to i32\l  %339 = fmul float %336, 5.000000e-01\l  %340 = tail call float @llvm.amdgcn.fract.f32(float %339)\l  %341 = tail call i1 @llvm.amdgcn.class.f32(float %339, i32 516)\l  %342 = select i1 %341, float 0.000000e+00, float %340\l  %343 = fcmp oeq float %342, 0.000000e+00\l  %344 = and i1 %337, %343\l  %345 = zext i1 %344 to i32\l  %346 = add nuw nsw i32 %345, %338\l  %347 = icmp eq i32 %346, 1\l  %348 = fcmp olt float %188, 0.000000e+00\l  %349 = and i1 %348, %347\l  %350 = select i1 %349, float -0.000000e+00, float 0.000000e+00\l  %351 = tail call float @llvm.copysign.f32(float %334, float %350)\l  %352 = fcmp uge float %188, 0.000000e+00\l  %353 = icmp ne i32 %346, 0\l  %354 = select i1 %352, i1 true, i1 %353\l  %355 = select i1 %354, float %351, float 0x7FF8000000000000\l  %356 = fcmp oeq float %335, 0x7FF0000000000000\l  br i1 %356, label %357, label %366\l|{<s0>T|<s1>F}}"];
	Node0x60b2750:s0 -> Node0x60baf90;
	Node0x60b2750:s1 -> Node0x60bb020;
	Node0x60baf90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%357:\l357:                                              \l  %358 = fcmp oeq float %192, 1.000000e+00\l  %359 = fadd float %192, -1.000000e+00\l  %360 = bitcast float %191 to i32\l  %361 = bitcast float %359 to i32\l  %362 = xor i32 %360, %361\l  %363 = icmp sgt i32 %362, -1\l  %364 = select i1 %363, float 0x7FF0000000000000, float 0.000000e+00\l  %365 = select i1 %358, float %192, float %364\l  br label %366\l}"];
	Node0x60baf90 -> Node0x60bb020;
	Node0x60bb020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%366:\l366:                                              \l  %367 = phi float [ %355, %190 ], [ %365, %357 ]\l  %368 = fcmp oeq float %192, 0x7FF0000000000000\l  %369 = fcmp oeq float %188, 0.000000e+00\l  %370 = or i1 %369, %368\l  %371 = fcmp olt float %191, 0.000000e+00\l  %372 = xor i1 %369, %371\l  %373 = select i1 %372, float 0.000000e+00, float 0x7FF0000000000000\l  %374 = select i1 %347, float %188, float 0.000000e+00\l  %375 = tail call float @llvm.copysign.f32(float %373, float %374)\l  %376 = select i1 %370, float %375, float %367\l  %377 = fcmp uno float %188, %191\l  %378 = select i1 %377, float 0x7FF8000000000000, float %376\l  %379 = fcmp oeq float %188, 1.000000e+00\l  %380 = fcmp oeq float %191, 0.000000e+00\l  %381 = or i1 %379, %380\l  %382 = select i1 %381, float 1.000000e+00, float %378\l  br label %383\l}"];
	Node0x60bb020 -> Node0x60b2700;
	Node0x60b2700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%383:\l383:                                              \l  %384 = phi contract float [ %382, %366 ], [ %188, %161 ]\l  %385 = fdiv contract float %142, %384\l  br i1 %126, label %386, label %465\l|{<s0>T|<s1>F}}"];
	Node0x60b2700:s0 -> Node0x60bc240;
	Node0x60b2700:s1 -> Node0x60bc290;
	Node0x60bc240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%386:\l386:                                              \l  %387 = load i32, i32 addrspace(1)* %127, align 4, !tbaa !21\l  %388 = icmp eq i32 %387, 0\l  br i1 %388, label %391, label %389\l|{<s0>T|<s1>F}}"];
	Node0x60bc240:s0 -> Node0x60bc5c0;
	Node0x60bc240:s1 -> Node0x60bc650;
	Node0x60bc650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%389:\l389:                                              \l  store i32 0, i32 addrspace(1)* %127, align 4, !tbaa !21\l  %390 = load float, float addrspace(1)* %128, align 4, !tbaa !26\l  br label %461\l}"];
	Node0x60bc650 -> Node0x60bcfa0;
	Node0x60bc5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%391:\l391:                                              \l  %392 = load i32, i32 addrspace(1)* %129, align 8, !tbaa !27\l  %393 = lshr i32 %392, 2\l  %394 = xor i32 %393, %392\l  %395 = load i32, i32 addrspace(1)* %130, align 4, !tbaa !27\l  %396 = load i32, i32 addrspace(1)* %131, align 8, !tbaa !27\l  %397 = load i32, i32 addrspace(1)* %132, align 4, !tbaa !27\l  %398 = load i32, i32 addrspace(1)* %133, align 8, !tbaa !27\l  %399 = shl i32 %398, 4\l  %400 = shl i32 %394, 1\l  %401 = xor i32 %400, %399\l  %402 = xor i32 %401, %394\l  %403 = xor i32 %402, %398\l  %404 = load i32, i32 addrspace(1)* %134, align 8, !tbaa !28\l  %405 = add i32 %404, 362437\l  %406 = add i32 %405, %403\l  %407 = lshr i32 %395, 2\l  %408 = xor i32 %407, %395\l  store i32 %396, i32 addrspace(1)* %129, align 8, !tbaa !27\l  store i32 %397, i32 addrspace(1)* %130, align 4, !tbaa !27\l  store i32 %398, i32 addrspace(1)* %131, align 8, !tbaa !27\l  store i32 %403, i32 addrspace(1)* %132, align 4, !tbaa !27\l  %409 = shl i32 %403, 4\l  %410 = shl i32 %408, 1\l  %411 = xor i32 %410, %409\l  %412 = xor i32 %411, %408\l  %413 = xor i32 %412, %403\l  store i32 %413, i32 addrspace(1)* %133, align 8, !tbaa !27\l  %414 = add i32 %404, 724874\l  store i32 %414, i32 addrspace(1)* %134, align 8, !tbaa !28\l  %415 = add i32 %413, %414\l  %416 = uitofp i32 %406 to float\l  %417 = fmul contract float %416, 0x3DF0000000000000\l  %418 = fadd contract float %417, 0x3DF0000000000000\l  %419 = uitofp i32 %415 to float\l  %420 = fmul contract float %419, 0x3E1921FB60000000\l  %421 = fadd contract float %420, 0x3E1921FB60000000\l  %422 = tail call i1 @llvm.amdgcn.class.f32(float %418, i32 144)\l  %423 = select i1 %422, float 0x41F0000000000000, float 1.000000e+00\l  %424 = fmul float %418, %423\l  %425 = tail call float @llvm.log2.f32(float %424)\l  %426 = fmul float %425, 0x3FE62E42E0000000\l  %427 = tail call i1 @llvm.amdgcn.class.f32(float %425, i32 519)\l  %428 = fneg float %426\l  %429 = tail call float @llvm.fma.f32(float %425, float 0x3FE62E42E0000000,\l... float %428)\l  %430 = tail call float @llvm.fma.f32(float %425, float 0x3E6EFA39E0000000,\l... float %429)\l  %431 = fadd float %426, %430\l  %432 = select i1 %427, float %425, float %431\l  %433 = select i1 %422, float 0x40362E4300000000, float 0.000000e+00\l  %434 = fsub float %432, %433\l  %435 = fmul contract float %434, -2.000000e+00\l  %436 = fcmp olt float %435, 0x39F0000000000000\l  %437 = select i1 %436, float 0x41F0000000000000, float 1.000000e+00\l  %438 = fmul float %435, %437\l  %439 = tail call float @llvm.sqrt.f32(float %438)\l  %440 = bitcast float %439 to i32\l  %441 = add nsw i32 %440, -1\l  %442 = bitcast i32 %441 to float\l  %443 = add nsw i32 %440, 1\l  %444 = bitcast i32 %443 to float\l  %445 = tail call i1 @llvm.amdgcn.class.f32(float %438, i32 608)\l  %446 = select i1 %436, float 0x3EF0000000000000, float 1.000000e+00\l  %447 = fneg float %444\l  %448 = tail call float @llvm.fma.f32(float %447, float %439, float %438)\l  %449 = fcmp ogt float %448, 0.000000e+00\l  %450 = fneg float %442\l  %451 = tail call float @llvm.fma.f32(float %450, float %439, float %438)\l  %452 = fcmp ole float %451, 0.000000e+00\l  %453 = select i1 %452, float %442, float %439\l  %454 = select i1 %449, float %444, float %453\l  %455 = fmul float %446, %454\l  %456 = select i1 %445, float %438, float %455\l  %457 = tail call float @llvm.sin.f32(float %421)\l  %458 = tail call float @llvm.cos.f32(float %421)\l  %459 = fmul contract float %457, %456\l  %460 = fmul contract float %458, %456\l  store i32 1, i32 addrspace(1)* %127, align 4, !tbaa !21\l  store float %460, float addrspace(1)* %128, align 4, !tbaa !26\l  br label %461\l}"];
	Node0x60bc5c0 -> Node0x60bcfa0;
	Node0x60bcfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%461:\l461:                                              \l  %462 = phi float [ %390, %389 ], [ %459, %391 ]\l  %463 = fmul contract float %462, %14\l  %464 = fadd contract float %385, %463\l  br label %465\l}"];
	Node0x60bcfa0 -> Node0x60bc290;
	Node0x60bc290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%465:\l465:                                              \l  %466 = phi float [ %464, %461 ], [ %385, %383 ]\l  %467 = fmul contract float %175, %466\l  %468 = fmul contract float %172, %467\l  %469 = fadd contract float %165, %468\l  br i1 %135, label %470, label %476\l|{<s0>T|<s1>F}}"];
	Node0x60bc290:s0 -> Node0x60c2080;
	Node0x60bc290:s1 -> Node0x60c20d0;
	Node0x60c2080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%470:\l470:                                              \l  %471 = sext i32 %139 to i64\l  %472 = select i1 %136, i64 %471, i64 %140\l  %473 = getelementptr inbounds float, float addrspace(1)* %5, i64 %472\l  %474 = load float, float addrspace(1)* %473, align 4, !tbaa !17\l  %475 = fmul contract float %469, %474\l  br label %476\l}"];
	Node0x60c2080 -> Node0x60c20d0;
	Node0x60c20d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%476:\l476:                                              \l  %477 = phi float [ %469, %465 ], [ %475, %470 ]\l  store float %477, float addrspace(1)* %164, align 4, !tbaa !17\l  br label %478\l}"];
	Node0x60c20d0 -> Node0x60af1b0;
	Node0x60af1b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%478:\l478:                                              \l  %479 = add nsw i32 %138, %52\l  %480 = icmp slt i32 %479, %106\l  br i1 %480, label %137, label %481, !llvm.loop !29\l|{<s0>T|<s1>F}}"];
	Node0x60af1b0:s0 -> Node0x60ab660;
	Node0x60af1b0:s1 -> Node0x60ad310;
	Node0x60ad310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%481:\l481:                                              \l  ret void\l}"];
}
