digraph "CFG for '_Z16__findBoundariesPxPiiii' function" {
	label="CFG for '_Z16__findBoundariesPxPiiii' function";

	Node0x4625040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%5:\l  %6 = sext i32 %2 to i64\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = zext i32 %7 to i64\l  %9 = mul nsw i64 %6, %8\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !4\l  %14 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !13, !invariant.load\l... !14\l  %17 = zext i16 %16 to i32\l  %18 = udiv i32 %13, %17\l  %19 = mul i32 %18, %17\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = shl i32 %22, 5\l  %24 = zext i32 %23 to i64\l  %25 = sdiv i64 %9, %24\l  %26 = trunc i64 %25 to i32\l  %27 = shl i32 %26, 5\l  %28 = add i32 %7, 1\l  %29 = zext i32 %28 to i64\l  %30 = mul nsw i64 %6, %29\l  %31 = sdiv i64 %30, %24\l  %32 = trunc i64 %31 to i32\l  %33 = shl i32 %32, 5\l  %34 = add i32 %33, 32\l  %35 = tail call i32 @llvm.smin.i32(i32 %2, i32 %34)\l  %36 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %37 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %38 = mul nuw nsw i32 %37, %17\l  %39 = add nuw nsw i32 %38, %36\l  %40 = icmp eq i32 %39, 0\l  %41 = icmp eq i32 %7, 0\l  %42 = select i1 %40, i1 %41, i1 false\l  br i1 %42, label %43, label %44\l|{<s0>T|<s1>F}}"];
	Node0x4625040:s0 -> Node0x4628a80;
	Node0x4625040:s1 -> Node0x4628b10;
	Node0x4628a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%43:\l43:                                               \l  store i32 0, i32 addrspace(1)* %1, align 4, !tbaa !16\l  br label %44\l}"];
	Node0x4628a80 -> Node0x4628b10;
	Node0x4628b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%44:\l44:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %45 = icmp sgt i32 %27, %35\l  br i1 %45, label %92, label %46\l|{<s0>T|<s1>F}}"];
	Node0x4628b10:s0 -> Node0x46291b0;
	Node0x4628b10:s1 -> Node0x4629240;
	Node0x4629240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%46:\l46:                                               \l  %47 = zext i32 %4 to i64\l  %48 = getelementptr inbounds [1024 x i32], [1024 x i32] addrspace(3)*\l... @_ZZ16__findBoundariesPxPiiiiE5dbuff, i32 0, i32 %39\l  %49 = add nsw i32 %39, -1\l  %50 = getelementptr inbounds [1024 x i32], [1024 x i32] addrspace(3)*\l... @_ZZ16__findBoundariesPxPiiiiE5dbuff, i32 0, i32 %49\l  %51 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %52 = bitcast i8 addrspace(4)* %51 to i16 addrspace(4)*\l  %53 = load i16, i16 addrspace(4)* %52, align 2\l  %54 = zext i16 %53 to i32\l  %55 = mul nuw nsw i32 %54, %17\l  %56 = add nsw i32 %55, -1\l  %57 = getelementptr inbounds [1024 x i32], [1024 x i32] addrspace(3)*\l... @_ZZ16__findBoundariesPxPiiiiE5dbuff, i32 0, i32 %56\l  br label %58\l}"];
	Node0x4629240 -> Node0x4629440;
	Node0x4629440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%58:\l58:                                               \l  %59 = phi i32 [ %27, %46 ], [ %90, %88 ]\l  %60 = phi i32 [ 2147483647, %46 ], [ %89, %88 ]\l  %61 = add nsw i32 %59, %39\l  %62 = icmp slt i32 %61, %35\l  br i1 %62, label %63, label %69\l|{<s0>T|<s1>F}}"];
	Node0x4629440:s0 -> Node0x4629ec0;
	Node0x4629440:s1 -> Node0x4629f50;
	Node0x4629ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%63:\l63:                                               \l  %64 = sext i32 %61 to i64\l  %65 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %64\l  %66 = load i64, i64 addrspace(1)* %65, align 8, !tbaa !20, !amdgpu.noclobber\l... !14\l  %67 = ashr i64 %66, %47\l  %68 = trunc i64 %67 to i32\l  store i32 %68, i32 addrspace(3)* %48, align 4, !tbaa !16\l  br label %69\l}"];
	Node0x4629ec0 -> Node0x4629f50;
	Node0x4629f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%69:\l69:                                               \l  %70 = phi i32 [ %68, %63 ], [ %3, %58 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %71 = icmp eq i32 %61, %2\l  %72 = select i1 %62, i1 true, i1 %71\l  br i1 %72, label %73, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4629f50:s0 -> Node0x462b740;
	Node0x4629f50:s1 -> Node0x4629b10;
	Node0x462b740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%73:\l73:                                               \l  br i1 %40, label %76, label %74\l|{<s0>T|<s1>F}}"];
	Node0x462b740:s0 -> Node0x462b840;
	Node0x462b740:s1 -> Node0x462b890;
	Node0x462b890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%74:\l74:                                               \l  %75 = load i32, i32 addrspace(3)* %50, align 4, !tbaa !16\l  br label %76\l}"];
	Node0x462b890 -> Node0x462b840;
	Node0x462b840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%76:\l76:                                               \l  %77 = phi i32 [ %75, %74 ], [ %60, %73 ]\l  %78 = icmp sgt i32 %70, %77\l  br i1 %78, label %79, label %85\l|{<s0>T|<s1>F}}"];
	Node0x462b840:s0 -> Node0x462bc20;
	Node0x462b840:s1 -> Node0x462bc70;
	Node0x462bc20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  %80 = phi i32 [ %81, %79 ], [ %77, %76 ]\l  %81 = add nsw i32 %80, 1\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %82\l  store i32 %61, i32 addrspace(1)* %83, align 4, !tbaa !16\l  %84 = icmp slt i32 %81, %70\l  br i1 %84, label %79, label %85, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x462bc20:s0 -> Node0x462bc20;
	Node0x462bc20:s1 -> Node0x462bc70;
	Node0x462bc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%85:\l85:                                               \l  br i1 %40, label %86, label %88\l|{<s0>T|<s1>F}}"];
	Node0x462bc70:s0 -> Node0x462c290;
	Node0x462bc70:s1 -> Node0x4629b10;
	Node0x462c290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%86:\l86:                                               \l  %87 = load i32, i32 addrspace(3)* %57, align 4, !tbaa !16\l  br label %88\l}"];
	Node0x462c290 -> Node0x4629b10;
	Node0x4629b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%88:\l88:                                               \l  %89 = phi i32 [ %87, %86 ], [ %77, %85 ], [ %60, %69 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %90 = add i32 %55, %59\l  %91 = icmp sgt i32 %90, %35\l  br i1 %91, label %92, label %58, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4629b10:s0 -> Node0x46291b0;
	Node0x4629b10:s1 -> Node0x4629440;
	Node0x46291b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%92:\l92:                                               \l  ret void\l}"];
}
