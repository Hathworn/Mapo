digraph "CFG for '_Z48cunn_MultiMarginCriterion_updateGradInput_kernelPfS_S_iii' function" {
	label="CFG for '_Z48cunn_MultiMarginCriterion_updateGradInput_kernelPfS_S_iii' function";

	Node0x5cd37f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = mul nsw i32 %7, %4\l  %9 = sext i32 %8 to i64\l  %10 = getelementptr inbounds float, float addrspace(1)* %1, i64 %9\l  %11 = getelementptr inbounds float, float addrspace(1)* %0, i64 %9\l  %12 = sext i32 %7 to i64\l  %13 = getelementptr inbounds float, float addrspace(1)* %2, i64 %12\l  %14 = load float, float addrspace(1)* %13, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %15 = fptosi float %14 to i32\l  %16 = add nsw i32 %15, -1\l  %17 = sext i32 %16 to i64\l  %18 = getelementptr inbounds float, float addrspace(1)* %10, i64 %17\l  %19 = load float, float addrspace(1)* %18, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %20 = icmp eq i32 %5, 0\l  br i1 %20, label %24, label %21\l|{<s0>T|<s1>F}}"];
	Node0x5cd37f0:s0 -> Node0x5cd6130;
	Node0x5cd37f0:s1 -> Node0x5cd61c0;
	Node0x5cd61c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%21:\l21:                                               \l  %22 = sitofp i32 %4 to float\l  %23 = fdiv contract float 1.000000e+00, %22\l  br label %24\l}"];
	Node0x5cd61c0 -> Node0x5cd6130;
	Node0x5cd6130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%24:\l24:                                               \l  %25 = phi float [ %23, %21 ], [ 1.000000e+00, %6 ]\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %27 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %28 = getelementptr i8, i8 addrspace(4)* %27, i64 4\l  %29 = bitcast i8 addrspace(4)* %28 to i16 addrspace(4)*\l  %30 = load i16, i16 addrspace(4)* %29, align 4, !range !10, !invariant.load\l... !8\l  %31 = zext i16 %30 to i32\l  %32 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ48cunn_MultiMarginCriterion_updateGradInput_kernelPfS_S_iiiE6buffer, i32\l... 0, i32 %26\l  store float 0.000000e+00, float addrspace(3)* %32, align 4, !tbaa !4\l  %33 = icmp slt i32 %26, %4\l  br i1 %33, label %34, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5cd6130:s0 -> Node0x5cd7ca0;
	Node0x5cd6130:s1 -> Node0x5cd7cf0;
	Node0x5cd7ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%34:\l34:                                               \l  %35 = fsub contract float 1.000000e+00, %19\l  br label %43\l}"];
	Node0x5cd7ca0 -> Node0x5cd7ec0;
	Node0x5cd7cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%36:\l36:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %37 = icmp eq i32 %26, 0\l  br i1 %37, label %38, label %119\l|{<s0>T|<s1>F}}"];
	Node0x5cd7cf0:s0 -> Node0x5cd8200;
	Node0x5cd7cf0:s1 -> Node0x5cd8290;
	Node0x5cd8200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%38:\l38:                                               \l  %39 = and i32 %31, 7\l  %40 = icmp ult i16 %30, 8\l  br i1 %40, label %63, label %41\l|{<s0>T|<s1>F}}"];
	Node0x5cd8200:s0 -> Node0x5cd8520;
	Node0x5cd8200:s1 -> Node0x5cd8570;
	Node0x5cd8570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%41:\l41:                                               \l  %42 = and i32 %31, 2040\l  br label %81\l}"];
	Node0x5cd8570 -> Node0x5cd8770;
	Node0x5cd7ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi float [ 0.000000e+00, %34 ], [ %60, %59 ]\l  %45 = phi i32 [ %26, %34 ], [ %61, %59 ]\l  %46 = zext i32 %45 to i64\l  %47 = icmp eq i32 %45, %16\l  br i1 %47, label %59, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5cd7ec0:s0 -> Node0x5cd8860;
	Node0x5cd7ec0:s1 -> Node0x5cd8bc0;
	Node0x5cd8bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%48:\l48:                                               \l  %49 = getelementptr inbounds float, float addrspace(1)* %10, i64 %46\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !4\l  %51 = fadd contract float %35, %50\l  %52 = fcmp contract ogt float %51, 0.000000e+00\l  br i1 %52, label %53, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5cd8bc0:s0 -> Node0x5cd8f60;
	Node0x5cd8bc0:s1 -> Node0x5cd8fb0;
	Node0x5cd8f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%53:\l53:                                               \l  %54 = fsub contract float %44, %25\l  store float %54, float addrspace(3)* %32, align 4, !tbaa !4\l  br label %55\l}"];
	Node0x5cd8f60 -> Node0x5cd8fb0;
	Node0x5cd8fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%55:\l55:                                               \l  %56 = phi float [ %25, %53 ], [ 0.000000e+00, %48 ]\l  %57 = phi float [ %54, %53 ], [ %44, %48 ]\l  %58 = getelementptr inbounds float, float addrspace(1)* %11, i64 %46\l  store float %56, float addrspace(1)* %58, align 4, !tbaa !4\l  br label %59\l}"];
	Node0x5cd8fb0 -> Node0x5cd8860;
	Node0x5cd8860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi float [ %44, %43 ], [ %57, %55 ]\l  %61 = add nuw nsw i32 %45, %31\l  %62 = icmp slt i32 %61, %4\l  br i1 %62, label %43, label %36, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5cd8860:s0 -> Node0x5cd7ec0;
	Node0x5cd8860:s1 -> Node0x5cd7cf0;
	Node0x5cd8520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%63:\l63:                                               \l  %64 = phi float [ undef, %38 ], [ %115, %81 ]\l  %65 = phi i32 [ 0, %38 ], [ %116, %81 ]\l  %66 = phi float [ 0.000000e+00, %38 ], [ %115, %81 ]\l  %67 = icmp eq i32 %39, 0\l  br i1 %67, label %78, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5cd8520:s0 -> Node0x5cd9d40;
	Node0x5cd8520:s1 -> Node0x5cd9d90;
	Node0x5cd9d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%68:\l68:                                               \l  %69 = phi i32 [ %75, %68 ], [ %65, %63 ]\l  %70 = phi float [ %74, %68 ], [ %66, %63 ]\l  %71 = phi i32 [ %76, %68 ], [ 0, %63 ]\l  %72 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ48cunn_MultiMarginCriterion_updateGradInput_kernelPfS_S_iiiE6buffer, i32\l... 0, i32 %69\l  %73 = load float, float addrspace(3)* %72, align 4, !tbaa !4\l  %74 = fadd contract float %70, %73\l  %75 = add nuw nsw i32 %69, 1\l  %76 = add i32 %71, 1\l  %77 = icmp eq i32 %76, %39\l  br i1 %77, label %78, label %68, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5cd9d90:s0 -> Node0x5cd9d40;
	Node0x5cd9d90:s1 -> Node0x5cd9d90;
	Node0x5cd9d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%78:\l78:                                               \l  %79 = phi float [ %64, %63 ], [ %74, %68 ]\l  %80 = getelementptr inbounds float, float addrspace(1)* %11, i64 %17\l  store float %79, float addrspace(1)* %80, align 4, !tbaa !4\l  br label %119\l}"];
	Node0x5cd9d40 -> Node0x5cd8290;
	Node0x5cd8770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%81:\l81:                                               \l  %82 = phi i32 [ 0, %41 ], [ %116, %81 ]\l  %83 = phi float [ 0.000000e+00, %41 ], [ %115, %81 ]\l  %84 = phi i32 [ 0, %41 ], [ %117, %81 ]\l  %85 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ48cunn_MultiMarginCriterion_updateGradInput_kernelPfS_S_iiiE6buffer, i32\l... 0, i32 %82\l  %86 = load float, float addrspace(3)* %85, align 16, !tbaa !4\l  %87 = fadd contract float %83, %86\l  %88 = or i32 %82, 1\l  %89 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ48cunn_MultiMarginCriterion_updateGradInput_kernelPfS_S_iiiE6buffer, i32\l... 0, i32 %88\l  %90 = load float, float addrspace(3)* %89, align 4, !tbaa !4\l  %91 = fadd contract float %87, %90\l  %92 = or i32 %82, 2\l  %93 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ48cunn_MultiMarginCriterion_updateGradInput_kernelPfS_S_iiiE6buffer, i32\l... 0, i32 %92\l  %94 = load float, float addrspace(3)* %93, align 8, !tbaa !4\l  %95 = fadd contract float %91, %94\l  %96 = or i32 %82, 3\l  %97 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ48cunn_MultiMarginCriterion_updateGradInput_kernelPfS_S_iiiE6buffer, i32\l... 0, i32 %96\l  %98 = load float, float addrspace(3)* %97, align 4, !tbaa !4\l  %99 = fadd contract float %95, %98\l  %100 = or i32 %82, 4\l  %101 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ48cunn_MultiMarginCriterion_updateGradInput_kernelPfS_S_iiiE6buffer, i32\l... 0, i32 %100\l  %102 = load float, float addrspace(3)* %101, align 16, !tbaa !4\l  %103 = fadd contract float %99, %102\l  %104 = or i32 %82, 5\l  %105 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ48cunn_MultiMarginCriterion_updateGradInput_kernelPfS_S_iiiE6buffer, i32\l... 0, i32 %104\l  %106 = load float, float addrspace(3)* %105, align 4, !tbaa !4\l  %107 = fadd contract float %103, %106\l  %108 = or i32 %82, 6\l  %109 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ48cunn_MultiMarginCriterion_updateGradInput_kernelPfS_S_iiiE6buffer, i32\l... 0, i32 %108\l  %110 = load float, float addrspace(3)* %109, align 8, !tbaa !4\l  %111 = fadd contract float %107, %110\l  %112 = or i32 %82, 7\l  %113 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ48cunn_MultiMarginCriterion_updateGradInput_kernelPfS_S_iiiE6buffer, i32\l... 0, i32 %112\l  %114 = load float, float addrspace(3)* %113, align 4, !tbaa !4\l  %115 = fadd contract float %111, %114\l  %116 = add nuw nsw i32 %82, 8\l  %117 = add i32 %84, 8\l  %118 = icmp eq i32 %117, %42\l  br i1 %118, label %63, label %81, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5cd8770:s0 -> Node0x5cd8520;
	Node0x5cd8770:s1 -> Node0x5cd8770;
	Node0x5cd8290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%119:\l119:                                              \l  ret void\l}"];
}
