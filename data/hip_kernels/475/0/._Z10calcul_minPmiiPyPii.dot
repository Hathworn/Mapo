digraph "CFG for '_Z10calcul_minPmiiPyPii' function" {
	label="CFG for '_Z10calcul_minPmiiPyPii' function";

	Node0x4f8f7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = sub nsw i32 %2, %1\l  %9 = add nsw i32 %8, -1\l  %10 = sitofp i32 %9 to float\l  %11 = sitofp i32 %5 to float\l  %12 = fdiv contract float %10, %11\l  %13 = tail call float @llvm.ceil.f32(float %12)\l  %14 = fptosi float %13 to i32\l  %15 = sitofp i32 %14 to float\l  %16 = fdiv contract float %10, %15\l  %17 = tail call float @llvm.ceil.f32(float %16)\l  %18 = fptosi float %17 to i32\l  %19 = mul nsw i32 %7, %18\l  %20 = add i32 %1, 1\l  %21 = add i32 %20, %19\l  %22 = add nsw i32 %14, -1\l  %23 = icmp eq i32 %7, %22\l  %24 = mul nsw i32 %22, %18\l  %25 = sub nsw i32 %9, %24\l  %26 = select i1 %23, i32 %25, i32 %18\l  %27 = sext i32 %21 to i64\l  %28 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %27\l  %29 = load i64, i64 addrspace(1)* %28, align 8, !tbaa !5, !amdgpu.noclobber\l... !9\l  %30 = add nsw i32 %26, %21\l  %31 = icmp sgt i32 %26, 0\l  br i1 %31, label %32, label %44\l|{<s0>T|<s1>F}}"];
	Node0x4f8f7b0:s0 -> Node0x4f91e20;
	Node0x4f8f7b0:s1 -> Node0x4f91eb0;
	Node0x4f91e20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = phi i32 [ %42, %32 ], [ %21, %6 ]\l  %34 = phi i32 [ %41, %32 ], [ %21, %6 ]\l  %35 = phi i64 [ %40, %32 ], [ %29, %6 ]\l  %36 = sext i32 %33 to i64\l  %37 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %36\l  %38 = load i64, i64 addrspace(1)* %37, align 8, !tbaa !5, !amdgpu.noclobber\l... !9\l  %39 = icmp ult i64 %38, %35\l  %40 = tail call i64 @llvm.umin.i64(i64 %38, i64 %35)\l  %41 = select i1 %39, i32 %33, i32 %34\l  %42 = add nsw i32 %33, 1\l  %43 = icmp slt i32 %42, %30\l  br i1 %43, label %32, label %44, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4f91e20:s0 -> Node0x4f91e20;
	Node0x4f91e20:s1 -> Node0x4f91eb0;
	Node0x4f91eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%44:\l44:                                               \l  %45 = phi i64 [ %29, %6 ], [ %40, %32 ]\l  %46 = phi i32 [ %21, %6 ], [ %41, %32 ]\l  %47 = atomicrmw umin i64 addrspace(1)* %3, i64 %45 syncscope(\"agent-one-as\")\l... monotonic, align 8\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %48 = load i64, i64 addrspace(1)* %3, align 8, !tbaa !12\l  %49 = icmp eq i64 %48, %45\l  br i1 %49, label %50, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4f91eb0:s0 -> Node0x4f93e70;
	Node0x4f91eb0:s1 -> Node0x4f93f00;
	Node0x4f93e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%50:\l50:                                               \l  store i32 %46, i32 addrspace(1)* %4, align 4, !tbaa !14\l  br label %51\l}"];
	Node0x4f93e70 -> Node0x4f93f00;
	Node0x4f93f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%51:\l51:                                               \l  ret void\l}"];
}
