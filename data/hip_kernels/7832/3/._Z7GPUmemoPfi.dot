digraph "CFG for '_Z7GPUmemoPfi' function" {
	label="CFG for '_Z7GPUmemoPfi' function";

	Node0x45cdec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%2:\l  %3 = sext i32 %1 to i64\l  %4 = shl nsw i64 %3, 2\l  %5 = tail call fastcc i8 addrspace(1)* @__ockl_dm_alloc(i64 %4) #11\l  %6 = ptrtoint i8 addrspace(1)* %5 to i64\l  %7 = inttoptr i64 %6 to i8*\l  store i8* %7, i8* addrspace(3)* bitcast (float* addrspace(3)*\l... @_ZZ7GPUmemoPfiE5trace to i8* addrspace(3)*), align 8, !tbaa !4\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !8\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !17, !invariant.load\l... !18\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = icmp eq i32 %20, 0\l  br i1 %21, label %100, label %22\l|{<s0>T|<s1>F}}"];
	Node0x45cdec0:s0 -> Node0x45ce080;
	Node0x45cdec0:s1 -> Node0x45d00d0;
	Node0x45d00d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%22:\l22:                                               \l  %23 = inttoptr i64 %6 to float*\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !19\l  %25 = zext i32 %24 to i64\l  %26 = getelementptr inbounds float, float* %23, i64 %25\l  %27 = add i32 %16, %19\l  %28 = add i32 %27, -1\l  %29 = and i32 %20, 7\l  %30 = icmp ult i32 %28, 7\l  br i1 %30, label %86, label %31\l|{<s0>T|<s1>F}}"];
	Node0x45d00d0:s0 -> Node0x45d08e0;
	Node0x45d00d0:s1 -> Node0x45d0970;
	Node0x45d0970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%31:\l31:                                               \l  %32 = and i32 %20, -8\l  br label %33\l}"];
	Node0x45d0970 -> Node0x45cfd60;
	Node0x45cfd60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%33:\l33:                                               \l  %34 = phi i32 [ 0, %31 ], [ %83, %33 ]\l  %35 = phi i32 [ 0, %31 ], [ %84, %33 ]\l  %36 = mul nsw i32 %34, %1\l  %37 = add i32 %36, %24\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !20\l  store float %40, float* %26, align 4, !tbaa !20\l  %41 = or i32 %34, 1\l  %42 = mul nsw i32 %41, %1\l  %43 = add i32 %42, %24\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !20\l  store float %46, float* %26, align 4, !tbaa !20\l  %47 = or i32 %34, 2\l  %48 = mul nsw i32 %47, %1\l  %49 = add i32 %48, %24\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !20\l  store float %52, float* %26, align 4, !tbaa !20\l  %53 = or i32 %34, 3\l  %54 = mul nsw i32 %53, %1\l  %55 = add i32 %54, %24\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !20\l  store float %58, float* %26, align 4, !tbaa !20\l  %59 = or i32 %34, 4\l  %60 = mul nsw i32 %59, %1\l  %61 = add i32 %60, %24\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !20\l  store float %64, float* %26, align 4, !tbaa !20\l  %65 = or i32 %34, 5\l  %66 = mul nsw i32 %65, %1\l  %67 = add i32 %66, %24\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !20\l  store float %70, float* %26, align 4, !tbaa !20\l  %71 = or i32 %34, 6\l  %72 = mul nsw i32 %71, %1\l  %73 = add i32 %72, %24\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !20\l  store float %76, float* %26, align 4, !tbaa !20\l  %77 = or i32 %34, 7\l  %78 = mul nsw i32 %77, %1\l  %79 = add i32 %78, %24\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !20\l  store float %82, float* %26, align 4, !tbaa !20\l  %83 = add nuw nsw i32 %34, 8\l  %84 = add i32 %35, 8\l  %85 = icmp eq i32 %84, %32\l  br i1 %85, label %86, label %33, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x45cfd60:s0 -> Node0x45d08e0;
	Node0x45cfd60:s1 -> Node0x45cfd60;
	Node0x45d08e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%86:\l86:                                               \l  %87 = phi i32 [ 0, %22 ], [ %83, %33 ]\l  %88 = icmp eq i32 %29, 0\l  br i1 %88, label %100, label %89\l|{<s0>T|<s1>F}}"];
	Node0x45d08e0:s0 -> Node0x45ce080;
	Node0x45d08e0:s1 -> Node0x45d3ac0;
	Node0x45d3ac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%89:\l89:                                               \l  %90 = phi i32 [ %97, %89 ], [ %87, %86 ]\l  %91 = phi i32 [ %98, %89 ], [ 0, %86 ]\l  %92 = mul nsw i32 %90, %1\l  %93 = add i32 %92, %24\l  %94 = zext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %0, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !20\l  store float %96, float* %26, align 4, !tbaa !20\l  %97 = add nuw nsw i32 %90, 1\l  %98 = add i32 %91, 1\l  %99 = icmp eq i32 %98, %29\l  br i1 %99, label %100, label %89, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x45d3ac0:s0 -> Node0x45ce080;
	Node0x45d3ac0:s1 -> Node0x45d3ac0;
	Node0x45ce080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%100:\l100:                                              \l  ret void\l}"];
}
