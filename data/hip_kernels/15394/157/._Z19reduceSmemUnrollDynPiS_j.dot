digraph "CFG for '_Z19reduceSmemUnrollDynPiS_j' function" {
	label="CFG for '_Z19reduceSmemUnrollDynPiS_j' function";

	Node0x5dae550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = shl i32 %5, 2\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %4\l  %14 = icmp ult i32 %13, %2\l  br i1 %14, label %15, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5dae550:s0 -> Node0x5daf2e0;
	Node0x5dae550:s1 -> Node0x5db0570;
	Node0x5daf2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%15:\l15:                                               \l  %16 = zext i32 %13 to i64\l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %16\l  %18 = load i32, i32 addrspace(1)* %17, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %19 = add i32 %13, %10\l  %20 = icmp ult i32 %19, %2\l  br i1 %20, label %21, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5daf2e0:s0 -> Node0x5db11b0;
	Node0x5daf2e0:s1 -> Node0x5db1240;
	Node0x5db11b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%21:\l21:                                               \l  %22 = zext i32 %19 to i64\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %22\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  br label %25\l}"];
	Node0x5db11b0 -> Node0x5db1240;
	Node0x5db1240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%25:\l25:                                               \l  %26 = phi i32 [ %24, %21 ], [ 0, %15 ]\l  %27 = shl nuw nsw i32 %10, 1\l  %28 = add i32 %13, %27\l  %29 = icmp ult i32 %28, %2\l  br i1 %29, label %30, label %34\l|{<s0>T|<s1>F}}"];
	Node0x5db1240:s0 -> Node0x5db1e10;
	Node0x5db1240:s1 -> Node0x5db1e60;
	Node0x5db1e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%30:\l30:                                               \l  %31 = zext i32 %28 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  br label %34\l}"];
	Node0x5db1e10 -> Node0x5db1e60;
	Node0x5db1e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%34:\l34:                                               \l  %35 = phi i32 [ %33, %30 ], [ 0, %25 ]\l  %36 = mul nuw nsw i32 %10, 3\l  %37 = add i32 %13, %36\l  %38 = icmp ult i32 %37, %2\l  br i1 %38, label %39, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5db1e60:s0 -> Node0x5db2520;
	Node0x5db1e60:s1 -> Node0x5db2570;
	Node0x5db2520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%39:\l39:                                               \l  %40 = zext i32 %37 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %40\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  br label %43\l}"];
	Node0x5db2520 -> Node0x5db2570;
	Node0x5db2570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%43:\l43:                                               \l  %44 = phi i32 [ %42, %39 ], [ 0, %34 ]\l  %45 = add nsw i32 %26, %18\l  %46 = add nsw i32 %45, %35\l  %47 = add nsw i32 %46, %44\l  br label %48\l}"];
	Node0x5db2570 -> Node0x5db0570;
	Node0x5db0570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i32 [ %47, %43 ], [ 0, %3 ]\l  %50 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %4\l  store i32 %49, i32 addrspace(3)* %50, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %51 = icmp ugt i16 %9, 1023\l  %52 = icmp ult i32 %4, 512\l  %53 = select i1 %51, i1 %52, i1 false\l  br i1 %53, label %54, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5db0570:s0 -> Node0x5db3260;
	Node0x5db0570:s1 -> Node0x5db32b0;
	Node0x5db3260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%54:\l54:                                               \l  %55 = add nuw nsw i32 %4, 512\l  %56 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %55\l  %57 = load i32, i32 addrspace(3)* %56, align 4, !tbaa !7\l  %58 = load i32, i32 addrspace(3)* %50, align 4, !tbaa !7\l  %59 = add nsw i32 %58, %57\l  store i32 %59, i32 addrspace(3)* %50, align 4, !tbaa !7\l  br label %60\l}"];
	Node0x5db3260 -> Node0x5db32b0;
	Node0x5db32b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %61 = icmp ugt i16 %9, 511\l  %62 = icmp ult i32 %4, 256\l  %63 = select i1 %61, i1 %62, i1 false\l  br i1 %63, label %64, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5db32b0:s0 -> Node0x5db3b20;
	Node0x5db32b0:s1 -> Node0x5db3b70;
	Node0x5db3b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%64:\l64:                                               \l  %65 = add nuw nsw i32 %4, 256\l  %66 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %65\l  %67 = load i32, i32 addrspace(3)* %66, align 4, !tbaa !7\l  %68 = load i32, i32 addrspace(3)* %50, align 4, !tbaa !7\l  %69 = add nsw i32 %68, %67\l  store i32 %69, i32 addrspace(3)* %50, align 4, !tbaa !7\l  br label %70\l}"];
	Node0x5db3b20 -> Node0x5db3b70;
	Node0x5db3b70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %71 = icmp ugt i16 %9, 255\l  %72 = icmp ult i32 %4, 128\l  %73 = select i1 %71, i1 %72, i1 false\l  br i1 %73, label %74, label %80\l|{<s0>T|<s1>F}}"];
	Node0x5db3b70:s0 -> Node0x5db4600;
	Node0x5db3b70:s1 -> Node0x5db4650;
	Node0x5db4600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%74:\l74:                                               \l  %75 = add nuw nsw i32 %4, 128\l  %76 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %75\l  %77 = load i32, i32 addrspace(3)* %76, align 4, !tbaa !7\l  %78 = load i32, i32 addrspace(3)* %50, align 4, !tbaa !7\l  %79 = add nsw i32 %78, %77\l  store i32 %79, i32 addrspace(3)* %50, align 4, !tbaa !7\l  br label %80\l}"];
	Node0x5db4600 -> Node0x5db4650;
	Node0x5db4650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %81 = icmp ugt i16 %9, 127\l  %82 = icmp ult i32 %4, 64\l  %83 = select i1 %81, i1 %82, i1 false\l  br i1 %83, label %84, label %90\l|{<s0>T|<s1>F}}"];
	Node0x5db4650:s0 -> Node0x5db4ef0;
	Node0x5db4650:s1 -> Node0x5db4f40;
	Node0x5db4ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%84:\l84:                                               \l  %85 = add nuw nsw i32 %4, 64\l  %86 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %85\l  %87 = load i32, i32 addrspace(3)* %86, align 4, !tbaa !7\l  %88 = load i32, i32 addrspace(3)* %50, align 4, !tbaa !7\l  %89 = add nsw i32 %88, %87\l  store i32 %89, i32 addrspace(3)* %50, align 4, !tbaa !7\l  br label %90\l}"];
	Node0x5db4ef0 -> Node0x5db4f40;
	Node0x5db4f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %91 = icmp ult i32 %4, 32\l  br i1 %91, label %92, label %130\l|{<s0>T|<s1>F}}"];
	Node0x5db4f40:s0 -> Node0x5db5630;
	Node0x5db4f40:s1 -> Node0x5db5680;
	Node0x5db5630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%92:\l92:                                               \l  %93 = add nuw nsw i32 %4, 32\l  %94 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %93\l  %95 = addrspacecast i32 addrspace(3)* %94 to i32*\l  %96 = load volatile i32, i32* %95, align 4, !tbaa !7\l  %97 = addrspacecast i32 addrspace(3)* %50 to i32*\l  %98 = load volatile i32, i32* %97, align 4, !tbaa !7\l  %99 = add nsw i32 %98, %96\l  store volatile i32 %99, i32* %97, align 4, !tbaa !7\l  %100 = add nuw nsw i32 %4, 16\l  %101 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %100\l  %102 = addrspacecast i32 addrspace(3)* %101 to i32*\l  %103 = load volatile i32, i32* %102, align 4, !tbaa !7\l  %104 = load volatile i32, i32* %97, align 4, !tbaa !7\l  %105 = add nsw i32 %104, %103\l  store volatile i32 %105, i32* %97, align 4, !tbaa !7\l  %106 = add nuw nsw i32 %4, 8\l  %107 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %106\l  %108 = addrspacecast i32 addrspace(3)* %107 to i32*\l  %109 = load volatile i32, i32* %108, align 4, !tbaa !7\l  %110 = load volatile i32, i32* %97, align 4, !tbaa !7\l  %111 = add nsw i32 %110, %109\l  store volatile i32 %111, i32* %97, align 4, !tbaa !7\l  %112 = add nuw nsw i32 %4, 4\l  %113 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %112\l  %114 = addrspacecast i32 addrspace(3)* %113 to i32*\l  %115 = load volatile i32, i32* %114, align 4, !tbaa !7\l  %116 = load volatile i32, i32* %97, align 4, !tbaa !7\l  %117 = add nsw i32 %116, %115\l  store volatile i32 %117, i32* %97, align 4, !tbaa !7\l  %118 = add nuw nsw i32 %4, 2\l  %119 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %118\l  %120 = addrspacecast i32 addrspace(3)* %119 to i32*\l  %121 = load volatile i32, i32* %120, align 4, !tbaa !7\l  %122 = load volatile i32, i32* %97, align 4, !tbaa !7\l  %123 = add nsw i32 %122, %121\l  store volatile i32 %123, i32* %97, align 4, !tbaa !7\l  %124 = add nuw nsw i32 %4, 1\l  %125 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %124\l  %126 = addrspacecast i32 addrspace(3)* %125 to i32*\l  %127 = load volatile i32, i32* %126, align 4, !tbaa !7\l  %128 = load volatile i32, i32* %97, align 4, !tbaa !7\l  %129 = add nsw i32 %128, %127\l  store volatile i32 %129, i32* %97, align 4, !tbaa !7\l  br label %130\l}"];
	Node0x5db5630 -> Node0x5db5680;
	Node0x5db5680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%130:\l130:                                              \l  %131 = icmp eq i32 %4, 0\l  br i1 %131, label %132, label %136\l|{<s0>T|<s1>F}}"];
	Node0x5db5680:s0 -> Node0x5db3ed0;
	Node0x5db5680:s1 -> Node0x5db3f20;
	Node0x5db3ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%132:\l132:                                              \l  %133 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @smem, i32 0, i32 0), align 4, !tbaa !7\l  %134 = zext i32 %5 to i64\l  %135 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %134\l  store i32 %133, i32 addrspace(1)* %135, align 4, !tbaa !7\l  br label %136\l}"];
	Node0x5db3ed0 -> Node0x5db3f20;
	Node0x5db3f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%136:\l136:                                              \l  ret void\l}"];
}
