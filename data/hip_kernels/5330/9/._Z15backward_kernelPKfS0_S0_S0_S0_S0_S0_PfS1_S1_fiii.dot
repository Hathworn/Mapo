digraph "CFG for '_Z15backward_kernelPKfS0_S0_S0_S0_S0_S0_PfS1_S1_fiii' function" {
	label="CFG for '_Z15backward_kernelPKfS0_S0_S0_S0_S0_S0_PfS1_S1_fiii' function";

	Node0x5a533b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%14:\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = sext i32 %15 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %5, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %19 = getelementptr inbounds float, float addrspace(1)* %6, i64 %16\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %21 = icmp eq float addrspace(1)* %3, addrspacecast (float* null to float\l... addrspace(1)*)\l  br i1 %21, label %27, label %22\l|{<s0>T|<s1>F}}"];
	Node0x5a533b0:s0 -> Node0x5a565d0;
	Node0x5a533b0:s1 -> Node0x5a56660;
	Node0x5a56660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%22:\l22:                                               \l  %23 = getelementptr inbounds float, float addrspace(1)* %3, i64 %16\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %25 = tail call float @llvm.fabs.f32(float %24)\l  %26 = fadd contract float %25, %10\l  br label %27\l}"];
	Node0x5a56660 -> Node0x5a565d0;
	Node0x5a565d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%27:\l27:                                               \l  %28 = phi contract float [ %26, %22 ], [ 1.000000e+00, %14 ]\l  %29 = icmp eq float addrspace(1)* %4, addrspacecast (float* null to float\l... addrspace(1)*)\l  br i1 %29, label %33, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5a565d0:s0 -> Node0x5a576c0;
	Node0x5a565d0:s1 -> Node0x5a57750;
	Node0x5a57750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%30:\l30:                                               \l  %31 = getelementptr inbounds float, float addrspace(1)* %4, i64 %16\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  br label %33\l}"];
	Node0x5a57750 -> Node0x5a576c0;
	Node0x5a576c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%33:\l33:                                               \l  %34 = phi contract float [ %32, %30 ], [ 0.000000e+00, %27 ]\l  %35 = icmp eq float addrspace(1)* %7, addrspacecast (float* null to float\l... addrspace(1)*)\l  br i1 %35, label %104, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5a576c0:s0 -> Node0x5a543c0;
	Node0x5a576c0:s1 -> Node0x5a57d80;
	Node0x5a57d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%36:\l36:                                               \l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 %16\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %39 = fcmp contract une float %38, 0.000000e+00\l  %40 = fcmp contract une float %10, 0.000000e+00\l  %41 = select i1 %39, i1 true, i1 %40\l  br i1 %41, label %42, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5a57d80:s0 -> Node0x5a587b0;
	Node0x5a57d80:s1 -> Node0x5a58840;
	Node0x5a587b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%42:\l42:                                               \l  %43 = fadd contract float %38, %10\l  %44 = fcmp olt float %43, 0x39F0000000000000\l  %45 = select i1 %44, float 0x41F0000000000000, float 1.000000e+00\l  %46 = fmul float %43, %45\l  %47 = tail call float @llvm.sqrt.f32(float %46)\l  %48 = bitcast float %47 to i32\l  %49 = add nsw i32 %48, -1\l  %50 = bitcast i32 %49 to float\l  %51 = add nsw i32 %48, 1\l  %52 = bitcast i32 %51 to float\l  %53 = tail call i1 @llvm.amdgcn.class.f32(float %46, i32 608)\l  %54 = select i1 %44, float 0x3EF0000000000000, float 1.000000e+00\l  %55 = fneg float %52\l  %56 = tail call float @llvm.fma.f32(float %55, float %47, float %46)\l  %57 = fcmp ogt float %56, 0.000000e+00\l  %58 = fneg float %50\l  %59 = tail call float @llvm.fma.f32(float %58, float %47, float %46)\l  %60 = fcmp ole float %59, 0.000000e+00\l  %61 = select i1 %60, float %50, float %47\l  %62 = select i1 %57, float %52, float %61\l  %63 = fmul float %54, %62\l  %64 = select i1 %53, float %46, float %63\l  %65 = fdiv contract float 1.000000e+00, %64\l  br label %66\l}"];
	Node0x5a587b0 -> Node0x5a58840;
	Node0x5a58840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%66:\l66:                                               \l  %67 = phi float [ %65, %42 ], [ 0.000000e+00, %36 ]\l  %68 = fmul contract float %28, %67\l  %69 = icmp sgt i32 %11, 0\l  br i1 %69, label %70, label %104\l|{<s0>T|<s1>F}}"];
	Node0x5a58840:s0 -> Node0x5a57bf0;
	Node0x5a58840:s1 -> Node0x5a543c0;
	Node0x5a57bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%70:\l70:                                               \l  %71 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %72 = icmp slt i32 %71, %13\l  %73 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %74 = getelementptr i8, i8 addrspace(4)* %73, i64 4\l  %75 = bitcast i8 addrspace(4)* %74 to i16 addrspace(4)*\l  br label %76\l}"];
	Node0x5a57bf0 -> Node0x5a5a9c0;
	Node0x5a5a9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%76:\l76:                                               \l  %77 = phi i32 [ 0, %70 ], [ %85, %84 ]\l  br i1 %72, label %78, label %84\l|{<s0>T|<s1>F}}"];
	Node0x5a5a9c0:s0 -> Node0x5a5ac30;
	Node0x5a5a9c0:s1 -> Node0x5a5aaf0;
	Node0x5a5ac30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%78:\l78:                                               \l  %79 = mul nsw i32 %77, %12\l  %80 = add nsw i32 %79, %15\l  %81 = mul nsw i32 %80, %13\l  %82 = load i16, i16 addrspace(4)* %75, align 4, !range !10, !invariant.load\l... !8\l  %83 = zext i16 %82 to i32\l  br label %87\l}"];
	Node0x5a5ac30 -> Node0x5a5b1a0;
	Node0x5a5aaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%84:\l84:                                               \l  %85 = add nuw nsw i32 %77, 1\l  %86 = icmp eq i32 %85, %11\l  br i1 %86, label %104, label %76, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5a5aaf0:s0 -> Node0x5a543c0;
	Node0x5a5aaf0:s1 -> Node0x5a5a9c0;
	Node0x5a5b1a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  %88 = phi i32 [ %71, %78 ], [ %102, %87 ]\l  %89 = add nsw i32 %88, %81\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !4\l  %93 = getelementptr inbounds float, float addrspace(1)* %1, i64 %90\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !4\l  %95 = fsub contract float %94, %34\l  %96 = fdiv contract float %95, %28\l  %97 = fsub contract float %92, %18\l  %98 = fmul contract float %20, %96\l  %99 = fsub contract float %97, %98\l  %100 = fmul contract float %68, %99\l  %101 = getelementptr inbounds float, float addrspace(1)* %7, i64 %90\l  store float %100, float addrspace(1)* %101, align 4, !tbaa !4\l  %102 = add i32 %88, %83\l  %103 = icmp slt i32 %102, %13\l  br i1 %103, label %87, label %84, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5a5b1a0:s0 -> Node0x5a5b1a0;
	Node0x5a5b1a0:s1 -> Node0x5a5aaf0;
	Node0x5a543c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%104:\l104:                                              \l  %105 = icmp ne float addrspace(1)* %8, addrspacecast (float* null to float\l... addrspace(1)*)\l  %106 = icmp ne float addrspace(1)* %9, addrspacecast (float* null to float\l... addrspace(1)*)\l  %107 = select i1 %105, i1 true, i1 %106\l  br i1 %107, label %108, label %137\l|{<s0>T|<s1>F}}"];
	Node0x5a543c0:s0 -> Node0x5a5c230;
	Node0x5a543c0:s1 -> Node0x5a5c280;
	Node0x5a5c230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%108:\l108:                                              \l  %109 = mul nsw i32 %13, %11\l  %110 = sitofp i32 %109 to float\l  %111 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %112 = icmp eq i32 %111, 0\l  %113 = select i1 %105, i1 %112, i1 false\l  br i1 %113, label %114, label %130\l|{<s0>T|<s1>F}}"];
	Node0x5a5c230:s0 -> Node0x5a5c710;
	Node0x5a5c230:s1 -> Node0x5a5c760;
	Node0x5a5c710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%114:\l114:                                              \l  %115 = getelementptr inbounds float, float addrspace(1)* %3, i64 %16\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !4\l  %117 = fcmp contract ogt float %116, 0.000000e+00\l  br i1 %117, label %118, label %123\l|{<s0>T|<s1>F}}"];
	Node0x5a5c710:s0 -> Node0x5a5ca40;
	Node0x5a5c710:s1 -> Node0x5a5ca90;
	Node0x5a5ca40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%118:\l118:                                              \l  %119 = fmul contract float %20, %110\l  %120 = getelementptr inbounds float, float addrspace(1)* %8, i64 %16\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !4\l  %122 = fadd contract float %119, %121\l  store float %122, float addrspace(1)* %120, align 4, !tbaa !4\l  br label %130\l}"];
	Node0x5a5ca40 -> Node0x5a5c760;
	Node0x5a5ca90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%123:\l123:                                              \l  %124 = fcmp contract olt float %116, 0.000000e+00\l  br i1 %124, label %125, label %130\l|{<s0>T|<s1>F}}"];
	Node0x5a5ca90:s0 -> Node0x5a5cf90;
	Node0x5a5ca90:s1 -> Node0x5a5c760;
	Node0x5a5cf90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%125:\l125:                                              \l  %126 = fmul contract float %20, %110\l  %127 = getelementptr inbounds float, float addrspace(1)* %8, i64 %16\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !4\l  %129 = fsub contract float %128, %126\l  store float %129, float addrspace(1)* %127, align 4, !tbaa !4\l  br label %130\l}"];
	Node0x5a5cf90 -> Node0x5a5c760;
	Node0x5a5c760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%130:\l130:                                              \l  %131 = select i1 %106, i1 %112, i1 false\l  br i1 %131, label %132, label %137\l|{<s0>T|<s1>F}}"];
	Node0x5a5c760:s0 -> Node0x5a59f20;
	Node0x5a5c760:s1 -> Node0x5a5c280;
	Node0x5a59f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%132:\l132:                                              \l  %133 = fmul contract float %18, %110\l  %134 = getelementptr inbounds float, float addrspace(1)* %9, i64 %16\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !4\l  %136 = fadd contract float %133, %135\l  store float %136, float addrspace(1)* %134, align 4, !tbaa !4\l  br label %137\l}"];
	Node0x5a59f20 -> Node0x5a5c280;
	Node0x5a5c280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%137:\l137:                                              \l  ret void\l}"];
}
