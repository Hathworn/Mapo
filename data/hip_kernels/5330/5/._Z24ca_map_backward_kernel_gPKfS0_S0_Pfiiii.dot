digraph "CFG for '_Z24ca_map_backward_kernel_gPKfS0_S0_Pfiiii' function" {
	label="CFG for '_Z24ca_map_backward_kernel_gPKfS0_S0_Pfiiii' function";

	Node0x4957020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = mul nsw i32 %7, %6\l  %27 = add nsw i32 %6, -1\l  %28 = add i32 %27, %7\l  %29 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %30 = icmp slt i32 %17, %7\l  %31 = icmp slt i32 %25, %6\l  %32 = select i1 %30, i1 %31, i1 false\l  %33 = icmp slt i32 %29, %5\l  %34 = select i1 %32, i1 %33, i1 false\l  %35 = icmp sgt i32 %4, 0\l  %36 = select i1 %34, i1 %35, i1 false\l  br i1 %36, label %37, label %262\l|{<s0>T|<s1>F}}"];
	Node0x4957020:s0 -> Node0x4958eb0;
	Node0x4957020:s1 -> Node0x495b2a0;
	Node0x4958eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%37:\l37:                                               \l  %38 = icmp sgt i32 %7, 0\l  %39 = mul nsw i32 %25, %7\l  %40 = icmp sgt i32 %6, 0\l  %41 = add i32 %25, %7\l  %42 = and i32 %7, 7\l  %43 = icmp ult i32 %7, 8\l  %44 = and i32 %7, -8\l  %45 = icmp eq i32 %42, 0\l  %46 = and i32 %6, 1\l  %47 = icmp eq i32 %6, 1\l  %48 = and i32 %6, -2\l  %49 = icmp eq i32 %46, 0\l  br label %50\l}"];
	Node0x4958eb0 -> Node0x495bb90;
	Node0x495bb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%50:\l50:                                               \l  %51 = phi i32 [ 0, %37 ], [ %213, %212 ]\l  br i1 %38, label %52, label %85\l|{<s0>T|<s1>F}}"];
	Node0x495bb90:s0 -> Node0x495bdc0;
	Node0x495bb90:s1 -> Node0x495be50;
	Node0x495bdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%52:\l52:                                               \l  %53 = mul nsw i32 %51, %5\l  %54 = add nsw i32 %53, %29\l  %55 = mul nsw i32 %54, %26\l  %56 = add nsw i32 %55, %39\l  %57 = mul nsw i32 %51, %28\l  %58 = add nsw i32 %57, %17\l  %59 = mul nsw i32 %58, %26\l  %60 = add nsw i32 %59, %39\l  %61 = add nsw i32 %56, %17\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %3, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7\l  br i1 %43, label %65, label %96\l|{<s0>T|<s1>F}}"];
	Node0x495bdc0:s0 -> Node0x495ae60;
	Node0x495bdc0:s1 -> Node0x495aef0;
	Node0x495ae60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%65:\l65:                                               \l  %66 = phi float [ %64, %52 ], [ %186, %96 ]\l  %67 = phi i32 [ 0, %52 ], [ %187, %96 ]\l  br i1 %45, label %85, label %68\l|{<s0>T|<s1>F}}"];
	Node0x495ae60:s0 -> Node0x495be50;
	Node0x495ae60:s1 -> Node0x495cd30;
	Node0x495cd30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = phi float [ %81, %68 ], [ %66, %65 ]\l  %70 = phi i32 [ %82, %68 ], [ %67, %65 ]\l  %71 = phi i32 [ %83, %68 ], [ 0, %65 ]\l  %72 = add nsw i32 %70, %56\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7\l  %76 = add nsw i32 %60, %70\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7\l  %80 = fmul contract float %75, %79\l  %81 = fadd contract float %69, %80\l  store float %81, float addrspace(1)* %63, align 4, !tbaa !7\l  %82 = add nuw nsw i32 %70, 1\l  %83 = add i32 %71, 1\l  %84 = icmp eq i32 %83, %42\l  br i1 %84, label %85, label %68, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x495cd30:s0 -> Node0x495be50;
	Node0x495cd30:s1 -> Node0x495cd30;
	Node0x495be50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%85:\l85:                                               \l  br i1 %40, label %86, label %212\l|{<s0>T|<s1>F}}"];
	Node0x495be50:s0 -> Node0x495e080;
	Node0x495be50:s1 -> Node0x495bc80;
	Node0x495e080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%86:\l86:                                               \l  %87 = mul nsw i32 %51, %5\l  %88 = add nsw i32 %87, %29\l  %89 = mul nsw i32 %88, %26\l  %90 = add i32 %89, %17\l  %91 = mul nsw i32 %51, %28\l  %92 = add i32 %41, %91\l  %93 = add i32 %90, %39\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %3, i64 %94\l  br i1 %47, label %190, label %215\l|{<s0>T|<s1>F}}"];
	Node0x495e080:s0 -> Node0x495e680;
	Node0x495e080:s1 -> Node0x495e6d0;
	Node0x495aef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%96:\l96:                                               \l  %97 = phi float [ %186, %96 ], [ %64, %52 ]\l  %98 = phi i32 [ %187, %96 ], [ 0, %52 ]\l  %99 = phi i32 [ %188, %96 ], [ 0, %52 ]\l  %100 = add nsw i32 %98, %56\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %0, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !7\l  %104 = add nsw i32 %60, %98\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %1, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7\l  %108 = fmul contract float %103, %107\l  %109 = fadd contract float %97, %108\l  store float %109, float addrspace(1)* %63, align 4, !tbaa !7\l  %110 = or i32 %98, 1\l  %111 = add nsw i32 %110, %56\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %0, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !7\l  %115 = add nsw i32 %60, %110\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %1, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !7\l  %119 = fmul contract float %114, %118\l  %120 = fadd contract float %109, %119\l  store float %120, float addrspace(1)* %63, align 4, !tbaa !7\l  %121 = or i32 %98, 2\l  %122 = add nsw i32 %121, %56\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %0, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !7\l  %126 = add nsw i32 %60, %121\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds float, float addrspace(1)* %1, i64 %127\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !7\l  %130 = fmul contract float %125, %129\l  %131 = fadd contract float %120, %130\l  store float %131, float addrspace(1)* %63, align 4, !tbaa !7\l  %132 = or i32 %98, 3\l  %133 = add nsw i32 %132, %56\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %0, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !7\l  %137 = add nsw i32 %60, %132\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %1, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !7\l  %141 = fmul contract float %136, %140\l  %142 = fadd contract float %131, %141\l  store float %142, float addrspace(1)* %63, align 4, !tbaa !7\l  %143 = or i32 %98, 4\l  %144 = add nsw i32 %143, %56\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %0, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !7\l  %148 = add nsw i32 %60, %143\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %1, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !7\l  %152 = fmul contract float %147, %151\l  %153 = fadd contract float %142, %152\l  store float %153, float addrspace(1)* %63, align 4, !tbaa !7\l  %154 = or i32 %98, 5\l  %155 = add nsw i32 %154, %56\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds float, float addrspace(1)* %0, i64 %156\l  %158 = load float, float addrspace(1)* %157, align 4, !tbaa !7\l  %159 = add nsw i32 %60, %154\l  %160 = sext i32 %159 to i64\l  %161 = getelementptr inbounds float, float addrspace(1)* %1, i64 %160\l  %162 = load float, float addrspace(1)* %161, align 4, !tbaa !7\l  %163 = fmul contract float %158, %162\l  %164 = fadd contract float %153, %163\l  store float %164, float addrspace(1)* %63, align 4, !tbaa !7\l  %165 = or i32 %98, 6\l  %166 = add nsw i32 %165, %56\l  %167 = sext i32 %166 to i64\l  %168 = getelementptr inbounds float, float addrspace(1)* %0, i64 %167\l  %169 = load float, float addrspace(1)* %168, align 4, !tbaa !7\l  %170 = add nsw i32 %60, %165\l  %171 = sext i32 %170 to i64\l  %172 = getelementptr inbounds float, float addrspace(1)* %1, i64 %171\l  %173 = load float, float addrspace(1)* %172, align 4, !tbaa !7\l  %174 = fmul contract float %169, %173\l  %175 = fadd contract float %164, %174\l  store float %175, float addrspace(1)* %63, align 4, !tbaa !7\l  %176 = or i32 %98, 7\l  %177 = add nsw i32 %176, %56\l  %178 = sext i32 %177 to i64\l  %179 = getelementptr inbounds float, float addrspace(1)* %0, i64 %178\l  %180 = load float, float addrspace(1)* %179, align 4, !tbaa !7\l  %181 = add nsw i32 %60, %176\l  %182 = sext i32 %181 to i64\l  %183 = getelementptr inbounds float, float addrspace(1)* %1, i64 %182\l  %184 = load float, float addrspace(1)* %183, align 4, !tbaa !7\l  %185 = fmul contract float %180, %184\l  %186 = fadd contract float %175, %185\l  store float %186, float addrspace(1)* %63, align 4, !tbaa !7\l  %187 = add nuw nsw i32 %98, 8\l  %188 = add i32 %99, 8\l  %189 = icmp eq i32 %188, %44\l  br i1 %189, label %65, label %96, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x495aef0:s0 -> Node0x495ae60;
	Node0x495aef0:s1 -> Node0x495aef0;
	Node0x495e680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%190:\l190:                                              \l  %191 = phi i32 [ 0, %86 ], [ %259, %258 ]\l  %192 = icmp eq i32 %191, %25\l  %193 = select i1 %49, i1 true, i1 %192\l  br i1 %193, label %212, label %194\l|{<s0>T|<s1>F}}"];
	Node0x495e680:s0 -> Node0x495bc80;
	Node0x495e680:s1 -> Node0x4962640;
	Node0x4962640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%194:\l194:                                              \l  %195 = icmp sle i32 %191, %25\l  %196 = sext i1 %195 to i32\l  %197 = mul nsw i32 %191, %7\l  %198 = add i32 %90, %197\l  %199 = sext i32 %198 to i64\l  %200 = getelementptr inbounds float, float addrspace(1)* %0, i64 %199\l  %201 = load float, float addrspace(1)* %200, align 4, !tbaa !7\l  %202 = add i32 %92, %196\l  %203 = mul nsw i32 %202, %26\l  %204 = add i32 %197, %17\l  %205 = add i32 %204, %203\l  %206 = sext i32 %205 to i64\l  %207 = getelementptr inbounds float, float addrspace(1)* %1, i64 %206\l  %208 = load float, float addrspace(1)* %207, align 4, !tbaa !7\l  %209 = fmul contract float %201, %208\l  %210 = load float, float addrspace(1)* %95, align 4, !tbaa !7\l  %211 = fadd contract float %210, %209\l  store float %211, float addrspace(1)* %95, align 4, !tbaa !7\l  br label %212\l}"];
	Node0x4962640 -> Node0x495bc80;
	Node0x495bc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%212:\l212:                                              \l  %213 = add nuw nsw i32 %51, 1\l  %214 = icmp eq i32 %213, %4\l  br i1 %214, label %262, label %50, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x495bc80:s0 -> Node0x495b2a0;
	Node0x495bc80:s1 -> Node0x495bb90;
	Node0x495e6d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%215:\l215:                                              \l  %216 = phi i32 [ %259, %258 ], [ 0, %86 ]\l  %217 = phi i32 [ %260, %258 ], [ 0, %86 ]\l  %218 = icmp eq i32 %216, %25\l  br i1 %218, label %237, label %219\l|{<s0>T|<s1>F}}"];
	Node0x495e6d0:s0 -> Node0x49635b0;
	Node0x495e6d0:s1 -> Node0x4963640;
	Node0x4963640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%219:\l219:                                              \l  %220 = icmp sle i32 %216, %25\l  %221 = sext i1 %220 to i32\l  %222 = mul nsw i32 %216, %7\l  %223 = add i32 %90, %222\l  %224 = sext i32 %223 to i64\l  %225 = getelementptr inbounds float, float addrspace(1)* %0, i64 %224\l  %226 = load float, float addrspace(1)* %225, align 4, !tbaa !7\l  %227 = add i32 %92, %221\l  %228 = mul nsw i32 %227, %26\l  %229 = add i32 %222, %17\l  %230 = add i32 %229, %228\l  %231 = sext i32 %230 to i64\l  %232 = getelementptr inbounds float, float addrspace(1)* %1, i64 %231\l  %233 = load float, float addrspace(1)* %232, align 4, !tbaa !7\l  %234 = fmul contract float %226, %233\l  %235 = load float, float addrspace(1)* %95, align 4, !tbaa !7\l  %236 = fadd contract float %235, %234\l  store float %236, float addrspace(1)* %95, align 4, !tbaa !7\l  br label %237\l}"];
	Node0x4963640 -> Node0x49635b0;
	Node0x49635b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%237:\l237:                                              \l  %238 = or i32 %216, 1\l  %239 = icmp eq i32 %238, %25\l  br i1 %239, label %258, label %240\l|{<s0>T|<s1>F}}"];
	Node0x49635b0:s0 -> Node0x4962400;
	Node0x49635b0:s1 -> Node0x4964290;
	Node0x4964290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%240:\l240:                                              \l  %241 = icmp slt i32 %216, %25\l  %242 = sext i1 %241 to i32\l  %243 = mul nsw i32 %238, %7\l  %244 = add i32 %90, %243\l  %245 = sext i32 %244 to i64\l  %246 = getelementptr inbounds float, float addrspace(1)* %0, i64 %245\l  %247 = load float, float addrspace(1)* %246, align 4, !tbaa !7\l  %248 = add i32 %92, %242\l  %249 = mul nsw i32 %248, %26\l  %250 = add i32 %243, %17\l  %251 = add i32 %250, %249\l  %252 = sext i32 %251 to i64\l  %253 = getelementptr inbounds float, float addrspace(1)* %1, i64 %252\l  %254 = load float, float addrspace(1)* %253, align 4, !tbaa !7\l  %255 = fmul contract float %247, %254\l  %256 = load float, float addrspace(1)* %95, align 4, !tbaa !7\l  %257 = fadd contract float %256, %255\l  store float %257, float addrspace(1)* %95, align 4, !tbaa !7\l  br label %258\l}"];
	Node0x4964290 -> Node0x4962400;
	Node0x4962400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%258:\l258:                                              \l  %259 = add nuw nsw i32 %216, 2\l  %260 = add i32 %217, 2\l  %261 = icmp eq i32 %260, %48\l  br i1 %261, label %190, label %215, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4962400:s0 -> Node0x495e680;
	Node0x4962400:s1 -> Node0x495e6d0;
	Node0x495b2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%262:\l262:                                              \l  ret void\l}"];
}
