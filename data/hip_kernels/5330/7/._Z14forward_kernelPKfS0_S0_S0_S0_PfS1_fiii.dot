digraph "CFG for '_Z14forward_kernelPKfS0_S0_S0_S0_PfS1_fiii' function" {
	label="CFG for '_Z14forward_kernelPKfS0_S0_S0_S0_PfS1_fiii' function";

	Node0x493c860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = sext i32 %12 to i64\l  %14 = getelementptr inbounds float, float addrspace(1)* %1, i64 %13\l  %15 = load float, float addrspace(1)* %14, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %16 = getelementptr inbounds float, float addrspace(1)* %2, i64 %13\l  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %18 = fcmp contract une float %17, 0.000000e+00\l  %19 = fcmp contract une float %7, 0.000000e+00\l  %20 = select i1 %18, i1 true, i1 %19\l  br i1 %20, label %21, label %45\l|{<s0>T|<s1>F}}"];
	Node0x493c860:s0 -> Node0x4940540;
	Node0x493c860:s1 -> Node0x49405d0;
	Node0x4940540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%21:\l21:                                               \l  %22 = fadd contract float %17, %7\l  %23 = fcmp olt float %22, 0x39F0000000000000\l  %24 = select i1 %23, float 0x41F0000000000000, float 1.000000e+00\l  %25 = fmul float %22, %24\l  %26 = tail call float @llvm.sqrt.f32(float %25)\l  %27 = bitcast float %26 to i32\l  %28 = add nsw i32 %27, -1\l  %29 = bitcast i32 %28 to float\l  %30 = add nsw i32 %27, 1\l  %31 = bitcast i32 %30 to float\l  %32 = tail call i1 @llvm.amdgcn.class.f32(float %25, i32 608)\l  %33 = select i1 %23, float 0x3EF0000000000000, float 1.000000e+00\l  %34 = fneg float %31\l  %35 = tail call float @llvm.fma.f32(float %34, float %26, float %25)\l  %36 = fcmp ogt float %35, 0.000000e+00\l  %37 = fneg float %29\l  %38 = tail call float @llvm.fma.f32(float %37, float %26, float %25)\l  %39 = fcmp ole float %38, 0.000000e+00\l  %40 = select i1 %39, float %29, float %26\l  %41 = select i1 %36, float %31, float %40\l  %42 = fmul float %33, %41\l  %43 = select i1 %32, float %25, float %42\l  %44 = fdiv contract float 1.000000e+00, %43\l  br label %45\l}"];
	Node0x4940540 -> Node0x49405d0;
	Node0x49405d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%45:\l45:                                               \l  %46 = phi float [ %44, %21 ], [ 0.000000e+00, %11 ]\l  %47 = icmp eq float addrspace(1)* %3, addrspacecast (float* null to float\l... addrspace(1)*)\l  br i1 %47, label %53, label %48\l|{<s0>T|<s1>F}}"];
	Node0x49405d0:s0 -> Node0x4942440;
	Node0x49405d0:s1 -> Node0x49424d0;
	Node0x49424d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%48:\l48:                                               \l  %49 = getelementptr inbounds float, float addrspace(1)* %3, i64 %13\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %51 = tail call float @llvm.fabs.f32(float %50)\l  %52 = fadd contract float %51, %7\l  br label %53\l}"];
	Node0x49424d0 -> Node0x4942440;
	Node0x4942440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%53:\l53:                                               \l  %54 = phi contract float [ %52, %48 ], [ 1.000000e+00, %45 ]\l  %55 = icmp eq float addrspace(1)* %4, addrspacecast (float* null to float\l... addrspace(1)*)\l  br i1 %55, label %59, label %56\l|{<s0>T|<s1>F}}"];
	Node0x4942440:s0 -> Node0x4942b60;
	Node0x4942440:s1 -> Node0x4942bb0;
	Node0x4942bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%56:\l56:                                               \l  %57 = getelementptr inbounds float, float addrspace(1)* %4, i64 %13\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  br label %59\l}"];
	Node0x4942bb0 -> Node0x4942b60;
	Node0x4942b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%59:\l59:                                               \l  %60 = phi contract float [ %58, %56 ], [ 0.000000e+00, %53 ]\l  %61 = icmp sgt i32 %8, 0\l  br i1 %61, label %62, label %68\l|{<s0>T|<s1>F}}"];
	Node0x4942b60:s0 -> Node0x4943020;
	Node0x4942b60:s1 -> Node0x4943070;
	Node0x4943020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%62:\l62:                                               \l  %63 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %64 = icmp slt i32 %63, %10\l  %65 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %66 = getelementptr i8, i8 addrspace(4)* %65, i64 4\l  %67 = bitcast i8 addrspace(4)* %66 to i16 addrspace(4)*\l  br label %69\l}"];
	Node0x4943020 -> Node0x4943ac0;
	Node0x4943070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%68:\l68:                                               \l  ret void\l}"];
	Node0x4943ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%69:\l69:                                               \l  %70 = phi i32 [ 0, %62 ], [ %78, %77 ]\l  br i1 %64, label %71, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4943ac0:s0 -> Node0x4943d00;
	Node0x4943ac0:s1 -> Node0x4943c00;
	Node0x4943d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%71:\l71:                                               \l  %72 = mul nsw i32 %70, %9\l  %73 = add nsw i32 %72, %12\l  %74 = mul nsw i32 %73, %10\l  %75 = load i16, i16 addrspace(4)* %67, align 4, !range !10, !invariant.load\l... !8\l  %76 = zext i16 %75 to i32\l  br label %80\l}"];
	Node0x4943d00 -> Node0x4944270;
	Node0x4943c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%77:\l77:                                               \l  %78 = add nuw nsw i32 %70, 1\l  %79 = icmp eq i32 %78, %8\l  br i1 %79, label %68, label %69, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4943c00:s0 -> Node0x4943070;
	Node0x4943c00:s1 -> Node0x4943ac0;
	Node0x4944270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = phi i32 [ %63, %71 ], [ %92, %80 ]\l  %82 = add nsw i32 %81, %74\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !4\l  %86 = fsub contract float %85, %15\l  %87 = fmul contract float %46, %86\l  %88 = fmul contract float %54, %87\l  %89 = fadd contract float %60, %88\l  %90 = getelementptr inbounds float, float addrspace(1)* %5, i64 %83\l  store float %87, float addrspace(1)* %90, align 4, !tbaa !4\l  %91 = getelementptr inbounds float, float addrspace(1)* %6, i64 %83\l  store float %89, float addrspace(1)* %91, align 4, !tbaa !4\l  %92 = add i32 %81, %76\l  %93 = icmp slt i32 %92, %10\l  br i1 %93, label %80, label %77, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4944270:s0 -> Node0x4944270;
	Node0x4944270:s1 -> Node0x4943c00;
}
