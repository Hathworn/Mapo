digraph "CFG for '_Z24ca_map_backward_kernel_wPKfS0_S0_Pfiiii' function" {
	label="CFG for '_Z24ca_map_backward_kernel_wPKfS0_S0_Pfiiii' function";

	Node0x5ccdb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = mul nsw i32 %7, %6\l  %27 = add nsw i32 %6, -1\l  %28 = add i32 %27, %7\l  %29 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %30 = icmp slt i32 %17, %7\l  %31 = icmp slt i32 %25, %6\l  %32 = select i1 %30, i1 %31, i1 false\l  %33 = icmp slt i32 %29, %28\l  %34 = select i1 %32, i1 %33, i1 false\l  %35 = icmp sgt i32 %4, 0\l  %36 = select i1 %34, i1 %35, i1 false\l  br i1 %36, label %37, label %162\l|{<s0>T|<s1>F}}"];
	Node0x5ccdb60:s0 -> Node0x5ccf9f0;
	Node0x5ccdb60:s1 -> Node0x5cd1de0;
	Node0x5ccf9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%37:\l37:                                               \l  %38 = icmp sgt i32 %5, 0\l  %39 = mul nsw i32 %25, %7\l  %40 = icmp slt i32 %29, %7\l  %41 = sub nsw i32 %29, %7\l  %42 = icmp sge i32 %41, %25\l  %43 = zext i1 %42 to i32\l  %44 = add nsw i32 %41, %43\l  %45 = mul nsw i32 %44, %7\l  %46 = add i32 %45, %17\l  %47 = add i32 %39, %17\l  %48 = and i32 %5, 3\l  %49 = icmp ult i32 %5, 4\l  %50 = and i32 %5, -4\l  %51 = icmp eq i32 %48, 0\l  br label %52\l}"];
	Node0x5ccf9f0 -> Node0x5cd2770;
	Node0x5cd2770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%52:\l52:                                               \l  %53 = phi i32 [ 0, %37 ], [ %87, %86 ]\l  br i1 %38, label %54, label %86\l|{<s0>T|<s1>F}}"];
	Node0x5cd2770:s0 -> Node0x5cd29a0;
	Node0x5cd2770:s1 -> Node0x5cd2860;
	Node0x5cd29a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%54:\l54:                                               \l  %55 = mul nsw i32 %53, %5\l  %56 = mul nsw i32 %53, %28\l  %57 = add i32 %56, %29\l  %58 = mul nsw i32 %57, %26\l  %59 = add i32 %47, %58\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %3, i64 %60\l  br i1 %49, label %62, label %89\l|{<s0>T|<s1>F}}"];
	Node0x5cd29a0:s0 -> Node0x5cd2ec0;
	Node0x5cd29a0:s1 -> Node0x5cd2f10;
	Node0x5cd2ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%62:\l62:                                               \l  %63 = phi i32 [ 0, %54 ], [ %159, %89 ]\l  br i1 %51, label %86, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5cd2ec0:s0 -> Node0x5cd2860;
	Node0x5cd2ec0:s1 -> Node0x5cd3130;
	Node0x5cd3130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = phi i32 [ %83, %64 ], [ %63, %62 ]\l  %66 = phi i32 [ %84, %64 ], [ 0, %62 ]\l  %67 = add nsw i32 %65, %55\l  %68 = mul nsw i32 %67, %26\l  %69 = add nsw i32 %68, %39\l  %70 = add nsw i32 %69, %17\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7\l  %74 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %75 = add i32 %46, %68\l  %76 = add nsw i32 %69, %29\l  %77 = select i1 %40, i32 %76, i32 %75\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %2, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7\l  %81 = fmul contract float %73, %80\l  %82 = fadd contract float %74, %81\l  store float %82, float addrspace(1)* %61, align 4, !tbaa !7\l  %83 = add nuw nsw i32 %65, 1\l  %84 = add i32 %66, 1\l  %85 = icmp eq i32 %84, %48\l  br i1 %85, label %86, label %64, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5cd3130:s0 -> Node0x5cd2860;
	Node0x5cd3130:s1 -> Node0x5cd3130;
	Node0x5cd2860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%86:\l86:                                               \l  %87 = add nuw nsw i32 %53, 1\l  %88 = icmp eq i32 %87, %4\l  br i1 %88, label %162, label %52, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5cd2860:s0 -> Node0x5cd1de0;
	Node0x5cd2860:s1 -> Node0x5cd2770;
	Node0x5cd2f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%89:\l89:                                               \l  %90 = phi i32 [ %159, %89 ], [ 0, %54 ]\l  %91 = phi i32 [ %160, %89 ], [ 0, %54 ]\l  %92 = add nsw i32 %90, %55\l  %93 = mul nsw i32 %92, %26\l  %94 = add nsw i32 %93, %39\l  %95 = add nsw i32 %94, %17\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %0, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7\l  %99 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %100 = add i32 %46, %93\l  %101 = add nsw i32 %94, %29\l  %102 = select i1 %40, i32 %101, i32 %100\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %2, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !7\l  %106 = fmul contract float %98, %105\l  %107 = fadd contract float %99, %106\l  store float %107, float addrspace(1)* %61, align 4, !tbaa !7\l  %108 = or i32 %90, 1\l  %109 = add nsw i32 %108, %55\l  %110 = mul nsw i32 %109, %26\l  %111 = add nsw i32 %110, %39\l  %112 = add nsw i32 %111, %17\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %0, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7\l  %116 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %117 = add i32 %46, %110\l  %118 = add nsw i32 %111, %29\l  %119 = select i1 %40, i32 %118, i32 %117\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %2, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7\l  %123 = fmul contract float %115, %122\l  %124 = fadd contract float %116, %123\l  store float %124, float addrspace(1)* %61, align 4, !tbaa !7\l  %125 = or i32 %90, 2\l  %126 = add nsw i32 %125, %55\l  %127 = mul nsw i32 %126, %26\l  %128 = add nsw i32 %127, %39\l  %129 = add nsw i32 %128, %17\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %0, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !7\l  %133 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %134 = add i32 %46, %127\l  %135 = add nsw i32 %128, %29\l  %136 = select i1 %40, i32 %135, i32 %134\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %2, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !7\l  %140 = fmul contract float %132, %139\l  %141 = fadd contract float %133, %140\l  store float %141, float addrspace(1)* %61, align 4, !tbaa !7\l  %142 = or i32 %90, 3\l  %143 = add nsw i32 %142, %55\l  %144 = mul nsw i32 %143, %26\l  %145 = add nsw i32 %144, %39\l  %146 = add nsw i32 %145, %17\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds float, float addrspace(1)* %0, i64 %147\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !7\l  %150 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %151 = add i32 %46, %144\l  %152 = add nsw i32 %145, %29\l  %153 = select i1 %40, i32 %152, i32 %151\l  %154 = sext i32 %153 to i64\l  %155 = getelementptr inbounds float, float addrspace(1)* %2, i64 %154\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !7\l  %157 = fmul contract float %149, %156\l  %158 = fadd contract float %150, %157\l  store float %158, float addrspace(1)* %61, align 4, !tbaa !7\l  %159 = add nuw nsw i32 %90, 4\l  %160 = add i32 %91, 4\l  %161 = icmp eq i32 %160, %50\l  br i1 %161, label %62, label %89, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5cd2f10:s0 -> Node0x5cd2ec0;
	Node0x5cd2f10:s1 -> Node0x5cd2f10;
	Node0x5cd1de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%162:\l162:                                              \l  ret void\l}"];
}
