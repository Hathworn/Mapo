digraph "CFG for '_Z22normalize_delta_kerneliPfS_S_S_S_iiiS_' function" {
	label="CFG for '_Z22normalize_delta_kerneliPfS_S_S_S_iiiS_' function";

	Node0x4a47510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !4\l  %17 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !13, !invariant.load\l... !14\l  %20 = zext i16 %19 to i32\l  %21 = udiv i32 %16, %20\l  %22 = mul i32 %21, %20\l  %23 = icmp ugt i32 %16, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %12\l  %27 = add i32 %26, %11\l  %28 = mul i32 %27, %20\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %30 = add i32 %28, %29\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %81\l|{<s0>T|<s1>F}}"];
	Node0x4a47510:s0 -> Node0x4a4a8f0;
	Node0x4a47510:s1 -> Node0x4a4a980;
	Node0x4a4a8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = sdiv i32 %30, %8\l  %34 = srem i32 %33, %7\l  %35 = sext i32 %30 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %9, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %38 = sext i32 %34 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %3, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %41 = fadd contract float %40, 0x3EE4F8B580000000\l  %42 = fcmp olt float %41, 0x39F0000000000000\l  %43 = select i1 %42, float 0x41F0000000000000, float 1.000000e+00\l  %44 = fmul float %41, %43\l  %45 = tail call float @llvm.sqrt.f32(float %44)\l  %46 = bitcast float %45 to i32\l  %47 = add nsw i32 %46, -1\l  %48 = bitcast i32 %47 to float\l  %49 = add nsw i32 %46, 1\l  %50 = bitcast i32 %49 to float\l  %51 = tail call i1 @llvm.amdgcn.class.f32(float %44, i32 608)\l  %52 = select i1 %42, float 0x3EF0000000000000, float 1.000000e+00\l  %53 = fneg float %50\l  %54 = tail call float @llvm.fma.f32(float %53, float %45, float %44)\l  %55 = fcmp ogt float %54, 0.000000e+00\l  %56 = fneg float %48\l  %57 = tail call float @llvm.fma.f32(float %56, float %45, float %44)\l  %58 = fcmp ole float %57, 0.000000e+00\l  %59 = select i1 %58, float %48, float %45\l  %60 = select i1 %55, float %50, float %59\l  %61 = fmul float %52, %60\l  %62 = select i1 %51, float %44, float %61\l  %63 = fdiv contract float %37, %62\l  %64 = getelementptr inbounds float, float addrspace(1)* %5, i64 %38\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %66 = fmul contract float %65, 2.000000e+00\l  %67 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %69 = getelementptr inbounds float, float addrspace(1)* %2, i64 %38\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %71 = fsub contract float %68, %70\l  %72 = fmul contract float %66, %71\l  %73 = mul nsw i32 %8, %6\l  %74 = sitofp i32 %73 to float\l  %75 = fdiv contract float %72, %74\l  %76 = fadd contract float %75, %63\l  %77 = getelementptr inbounds float, float addrspace(1)* %4, i64 %38\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %79 = fdiv contract float %78, %74\l  %80 = fadd contract float %79, %76\l  store float %80, float addrspace(1)* %36, align 4, !tbaa !16\l  br label %81\l}"];
	Node0x4a4a8f0 -> Node0x4a4a980;
	Node0x4a4a980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  ret void\l}"];
}
