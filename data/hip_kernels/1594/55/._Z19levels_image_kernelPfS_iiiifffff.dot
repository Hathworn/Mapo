digraph "CFG for '_Z19levels_image_kernelPfS_iiiifffff' function" {
	label="CFG for '_Z19levels_image_kernelPfS_iiiifffff' function";

	Node0x59b7cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = mul i32 %4, %3\l  %13 = mul i32 %12, %2\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %16, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !4\l  %20 = getelementptr i8, i8 addrspace(4)* %16, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !13, !invariant.load\l... !14\l  %23 = zext i16 %22 to i32\l  %24 = udiv i32 %19, %23\l  %25 = mul i32 %24, %23\l  %26 = icmp ugt i32 %19, %25\l  %27 = zext i1 %26 to i32\l  %28 = add i32 %24, %27\l  %29 = mul i32 %28, %15\l  %30 = add i32 %29, %14\l  %31 = mul i32 %30, %23\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %33 = add i32 %31, %32\l  %34 = icmp slt i32 %33, %13\l  br i1 %34, label %35, label %198\l|{<s0>T|<s1>F}}"];
	Node0x59b7cb0:s0 -> Node0x59b9090;
	Node0x59b7cb0:s1 -> Node0x59bb360;
	Node0x59b9090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%35:\l35:                                               \l  %36 = freeze i32 %33\l  %37 = freeze i32 %3\l  %38 = sdiv i32 %36, %37\l  %39 = mul i32 %38, %37\l  %40 = sub i32 %36, %39\l  %41 = freeze i32 %4\l  %42 = sdiv i32 %38, %41\l  %43 = mul i32 %42, %41\l  %44 = sub i32 %38, %43\l  %45 = load float, float addrspace(1)* %1, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 1\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 2\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %50 = shl nsw i32 %42, 3\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %54 = add nuw nsw i32 %50, 1\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %58 = add nuw nsw i32 %50, 2\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %62 = add nuw nsw i32 %50, 3\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %1, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %66 = fadd contract float %6, -1.000000e+00\l  %67 = fmul contract float %66, %53\l  %68 = fadd contract float %67, 1.000000e+00\l  %69 = fcmp contract ogt float %57, 5.000000e-01\l  %70 = fdiv contract float 1.000000e+00, %68\l  %71 = select contract i1 %69, float %70, float %68\l  %72 = fadd contract float %7, -1.000000e+00\l  %73 = fmul contract float %72, %61\l  %74 = fadd contract float %73, 1.000000e+00\l  %75 = fcmp contract ogt float %65, 5.000000e-01\l  %76 = fdiv contract float 1.000000e+00, %74\l  %77 = select contract i1 %75, float %76, float %74\l  %78 = mul i32 %12, 3\l  %79 = mul i32 %78, %42\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  %82 = mul nsw i32 %44, %3\l  %83 = add nsw i32 %82, %40\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %81, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %87 = add nsw i32 %44, %4\l  %88 = mul nsw i32 %87, %3\l  %89 = add nsw i32 %88, %40\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %81, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %93 = shl nsw i32 %4, 1\l  %94 = add nsw i32 %44, %93\l  %95 = mul nsw i32 %94, %3\l  %96 = add nsw i32 %95, %40\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %81, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %100 = icmp eq i32 %5, 0\l  br i1 %100, label %178, label %101\l|{<s0>T|<s1>F}}"];
	Node0x59b9090:s0 -> Node0x59bf4e0;
	Node0x59b9090:s1 -> Node0x59bf570;
	Node0x59bf570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%101:\l101:                                              \l  %102 = fcmp contract ogt float %86, %92\l  %103 = fcmp contract ogt float %86, %99\l  %104 = select contract i1 %103, float %86, float %99\l  %105 = fcmp contract ogt float %92, %99\l  %106 = select contract i1 %105, float %92, float %99\l  %107 = select contract i1 %102, float %104, float %106\l  %108 = fcmp contract olt float %86, %92\l  %109 = fcmp contract olt float %86, %99\l  %110 = select contract i1 %109, float %86, float %99\l  %111 = fcmp contract olt float %92, %99\l  %112 = select contract i1 %111, float %92, float %99\l  %113 = select contract i1 %108, float %110, float %112\l  %114 = fsub contract float %107, %113\l  %115 = fcmp contract oeq float %107, 0.000000e+00\l  br i1 %115, label %137, label %116\l|{<s0>T|<s1>F}}"];
	Node0x59bf570:s0 -> Node0x59bff50;
	Node0x59bf570:s1 -> Node0x59bffe0;
	Node0x59bffe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%116:\l116:                                              \l  %117 = fdiv contract float %114, %107\l  %118 = fcmp contract oeq float %86, %107\l  br i1 %118, label %119, label %122\l|{<s0>T|<s1>F}}"];
	Node0x59bffe0:s0 -> Node0x59c0240;
	Node0x59bffe0:s1 -> Node0x59c0290;
	Node0x59c0240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%119:\l119:                                              \l  %120 = fsub contract float %92, %99\l  %121 = fdiv contract float %120, %114\l  br label %132\l}"];
	Node0x59c0240 -> Node0x59c04f0;
	Node0x59c0290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%122:\l122:                                              \l  %123 = fcmp contract oeq float %92, %107\l  br i1 %123, label %124, label %128\l|{<s0>T|<s1>F}}"];
	Node0x59c0290:s0 -> Node0x59c0640;
	Node0x59c0290:s1 -> Node0x59c0690;
	Node0x59c0640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%124:\l124:                                              \l  %125 = fsub contract float %99, %86\l  %126 = fdiv contract float %125, %114\l  %127 = fadd contract float %126, 2.000000e+00\l  br label %132\l}"];
	Node0x59c0640 -> Node0x59c04f0;
	Node0x59c0690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%128:\l128:                                              \l  %129 = fsub contract float %86, %92\l  %130 = fdiv contract float %129, %114\l  %131 = fadd contract float %130, 4.000000e+00\l  br label %132\l}"];
	Node0x59c0690 -> Node0x59c04f0;
	Node0x59c04f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%132:\l132:                                              \l  %133 = phi float [ %121, %119 ], [ %127, %124 ], [ %131, %128 ]\l  %134 = fcmp contract olt float %133, 0.000000e+00\l  %135 = fadd contract float %133, 6.000000e+00\l  %136 = select i1 %134, float %135, float %133\l  br label %137\l}"];
	Node0x59c04f0 -> Node0x59bff50;
	Node0x59bff50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%137:\l137:                                              \l  %138 = phi float [ 0.000000e+00, %101 ], [ %117, %132 ]\l  %139 = phi float [ -1.000000e+00, %101 ], [ %136, %132 ]\l  %140 = fmul contract float %71, %138\l  %141 = fmul contract float %77, %107\l  %142 = fcmp contract oeq float %140, 0.000000e+00\l  br i1 %142, label %162, label %143\l|{<s0>T|<s1>F}}"];
	Node0x59bff50:s0 -> Node0x59c1630;
	Node0x59bff50:s1 -> Node0x59c1680;
	Node0x59c1680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%143:\l143:                                              \l  %144 = tail call float @llvm.floor.f32(float %139)\l  %145 = fptosi float %144 to i32\l  %146 = sitofp i32 %145 to float\l  %147 = fsub contract float %139, %146\l  %148 = fsub contract float 1.000000e+00, %140\l  %149 = fmul contract float %141, %148\l  %150 = fmul contract float %140, %147\l  %151 = fsub contract float 1.000000e+00, %150\l  %152 = fmul contract float %141, %151\l  %153 = fsub contract float 1.000000e+00, %147\l  %154 = fmul contract float %140, %153\l  %155 = fsub contract float 1.000000e+00, %154\l  %156 = fmul contract float %141, %155\l  switch i32 %145, label %161 [\l    i32 0, label %162\l    i32 1, label %157\l    i32 2, label %158\l    i32 3, label %159\l    i32 4, label %160\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2|<s4>3|<s5>4}}"];
	Node0x59c1680:s0 -> Node0x59c1ff0;
	Node0x59c1680:s1 -> Node0x59c1630;
	Node0x59c1680:s2 -> Node0x59c2080;
	Node0x59c1680:s3 -> Node0x59c2110;
	Node0x59c1680:s4 -> Node0x59c21a0;
	Node0x59c1680:s5 -> Node0x59c2260;
	Node0x59c2080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%157:\l157:                                              \l  br label %162\l}"];
	Node0x59c2080 -> Node0x59c1630;
	Node0x59c2110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%158:\l158:                                              \l  br label %162\l}"];
	Node0x59c2110 -> Node0x59c1630;
	Node0x59c21a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%159:\l159:                                              \l  br label %162\l}"];
	Node0x59c21a0 -> Node0x59c1630;
	Node0x59c2260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%160:\l160:                                              \l  br label %162\l}"];
	Node0x59c2260 -> Node0x59c1630;
	Node0x59c1ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%161:\l161:                                              \l  br label %162\l}"];
	Node0x59c1ff0 -> Node0x59c1630;
	Node0x59c1630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%162:\l162:                                              \l  %163 = phi float [ %141, %137 ], [ %149, %157 ], [ %156, %158 ], [ %141,\l... %159 ], [ %141, %160 ], [ %152, %161 ], [ %149, %143 ]\l  %164 = phi float [ %141, %137 ], [ %141, %157 ], [ %141, %158 ], [ %152,\l... %159 ], [ %149, %160 ], [ %149, %161 ], [ %156, %143 ]\l  %165 = phi float [ %141, %137 ], [ %152, %157 ], [ %149, %158 ], [ %149,\l... %159 ], [ %156, %160 ], [ %141, %161 ], [ %141, %143 ]\l  %166 = fcmp contract olt float %165, 0.000000e+00\l  %167 = fcmp contract ogt float %165, 1.000000e+00\l  %168 = select contract i1 %167, float 1.000000e+00, float %165\l  %169 = select contract i1 %166, float 0.000000e+00, float %168\l  %170 = fcmp contract olt float %164, 0.000000e+00\l  %171 = fcmp contract ogt float %164, 1.000000e+00\l  %172 = select contract i1 %171, float 1.000000e+00, float %164\l  %173 = select contract i1 %170, float 0.000000e+00, float %172\l  %174 = fcmp contract olt float %163, 0.000000e+00\l  %175 = fcmp contract ogt float %163, 1.000000e+00\l  %176 = select contract i1 %175, float 1.000000e+00, float %163\l  %177 = select contract i1 %174, float 0.000000e+00, float %176\l  br label %178\l}"];
	Node0x59c1630 -> Node0x59bf4e0;
	Node0x59bf4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%178:\l178:                                              \l  %179 = phi float [ %169, %162 ], [ %86, %35 ]\l  %180 = phi float [ %173, %162 ], [ %92, %35 ]\l  %181 = phi float [ %177, %162 ], [ %99, %35 ]\l  %182 = phi float [ %10, %162 ], [ 0.000000e+00, %35 ]\l  %183 = fmul contract float %179, %9\l  %184 = fadd contract float %183, %8\l  %185 = fadd contract float %45, -5.000000e-01\l  %186 = fmul contract float %185, %182\l  %187 = fadd contract float %184, %186\l  store float %187, float addrspace(1)* %85, align 4, !tbaa !16\l  %188 = fmul contract float %180, %9\l  %189 = fadd contract float %188, %8\l  %190 = fadd contract float %47, -5.000000e-01\l  %191 = fmul contract float %190, %182\l  %192 = fadd contract float %189, %191\l  store float %192, float addrspace(1)* %91, align 4, !tbaa !16\l  %193 = fmul contract float %181, %9\l  %194 = fadd contract float %193, %8\l  %195 = fadd contract float %49, -5.000000e-01\l  %196 = fmul contract float %195, %182\l  %197 = fadd contract float %194, %196\l  store float %197, float addrspace(1)* %98, align 4, !tbaa !16\l  br label %198\l}"];
	Node0x59bf4e0 -> Node0x59bb360;
	Node0x59bb360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%198:\l198:                                              \l  ret void\l}"];
}
