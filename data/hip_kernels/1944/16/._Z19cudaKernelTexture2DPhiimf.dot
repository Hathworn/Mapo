digraph "CFG for '_Z19cudaKernelTexture2DPhiimf' function" {
	label="CFG for '_Z19cudaKernelTexture2DPhiimf' function";

	Node0x5bfb470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = icmp slt i32 %14, %1\l  %24 = icmp slt i32 %22, %2\l  %25 = select i1 %23, i1 %24, i1 false\l  br i1 %25, label %26, label %799\l|{<s0>T|<s1>F}}"];
	Node0x5bfb470:s0 -> Node0x5bfeeb0;
	Node0x5bfb470:s1 -> Node0x5bfef40;
	Node0x5bfeeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%26:\l26:                                               \l  %27 = sext i32 %22 to i64\l  %28 = mul i64 %27, %3\l  %29 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %28\l  %30 = shl nsw i32 %14, 2\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i8, i8 addrspace(1)* %29, i64 %31\l  %33 = sitofp i32 %14 to float\l  %34 = fmul contract float %33, 2.000000e+00\l  %35 = sitofp i32 %1 to float\l  %36 = fdiv contract float %34, %35\l  %37 = fadd contract float %36, -1.000000e+00\l  %38 = fmul contract float %37, 1.000000e+01\l  %39 = fadd contract float %38, %4\l  %40 = tail call float @llvm.fabs.f32(float %39)\l  %41 = fcmp olt float %40, 1.310720e+05\l  br i1 %41, label %42, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5bfeeb0:s0 -> Node0x5c00600;
	Node0x5bfeeb0:s1 -> Node0x5c00690;
	Node0x5c00600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%42:\l42:                                               \l  %43 = fmul float %40, 0x3FE45F3060000000\l  %44 = tail call float @llvm.rint.f32(float %43)\l  %45 = tail call float @llvm.fma.f32(float %44, float 0xBFF921FB40000000,\l... float %40)\l  %46 = tail call float @llvm.fma.f32(float %44, float 0xBE74442D00000000,\l... float %45)\l  %47 = tail call float @llvm.fma.f32(float %44, float 0xBCF8469880000000,\l... float %46)\l  %48 = fptosi float %44 to i32\l  br label %155\l}"];
	Node0x5c00600 -> Node0x5c010f0;
	Node0x5c00690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%49:\l49:                                               \l  %50 = bitcast float %40 to i32\l  %51 = lshr i32 %50, 23\l  %52 = and i32 %50, 8388607\l  %53 = or i32 %52, 8388608\l  %54 = zext i32 %53 to i64\l  %55 = mul nuw nsw i64 %54, 4266746795\l  %56 = trunc i64 %55 to i32\l  %57 = lshr i64 %55, 32\l  %58 = mul nuw nsw i64 %54, 1011060801\l  %59 = add nuw nsw i64 %57, %58\l  %60 = trunc i64 %59 to i32\l  %61 = lshr i64 %59, 32\l  %62 = mul nuw nsw i64 %54, 3680671129\l  %63 = add nuw nsw i64 %61, %62\l  %64 = trunc i64 %63 to i32\l  %65 = lshr i64 %63, 32\l  %66 = mul nuw nsw i64 %54, 4113882560\l  %67 = add nuw nsw i64 %65, %66\l  %68 = trunc i64 %67 to i32\l  %69 = lshr i64 %67, 32\l  %70 = mul nuw nsw i64 %54, 4230436817\l  %71 = add nuw nsw i64 %69, %70\l  %72 = trunc i64 %71 to i32\l  %73 = lshr i64 %71, 32\l  %74 = mul nuw nsw i64 %54, 1313084713\l  %75 = add nuw nsw i64 %73, %74\l  %76 = trunc i64 %75 to i32\l  %77 = lshr i64 %75, 32\l  %78 = mul nuw nsw i64 %54, 2734261102\l  %79 = add nuw nsw i64 %77, %78\l  %80 = trunc i64 %79 to i32\l  %81 = lshr i64 %79, 32\l  %82 = trunc i64 %81 to i32\l  %83 = add nsw i32 %51, -120\l  %84 = icmp ugt i32 %83, 63\l  %85 = select i1 %84, i32 %76, i32 %82\l  %86 = select i1 %84, i32 %72, i32 %80\l  %87 = select i1 %84, i32 %68, i32 %76\l  %88 = select i1 %84, i32 %64, i32 %72\l  %89 = select i1 %84, i32 %60, i32 %68\l  %90 = select i1 %84, i32 %56, i32 %64\l  %91 = select i1 %84, i32 -64, i32 0\l  %92 = add nsw i32 %91, %83\l  %93 = icmp ugt i32 %92, 31\l  %94 = select i1 %93, i32 %86, i32 %85\l  %95 = select i1 %93, i32 %87, i32 %86\l  %96 = select i1 %93, i32 %88, i32 %87\l  %97 = select i1 %93, i32 %89, i32 %88\l  %98 = select i1 %93, i32 %90, i32 %89\l  %99 = select i1 %93, i32 -32, i32 0\l  %100 = add nsw i32 %99, %92\l  %101 = icmp ugt i32 %100, 31\l  %102 = select i1 %101, i32 %95, i32 %94\l  %103 = select i1 %101, i32 %96, i32 %95\l  %104 = select i1 %101, i32 %97, i32 %96\l  %105 = select i1 %101, i32 %98, i32 %97\l  %106 = select i1 %101, i32 -32, i32 0\l  %107 = add nsw i32 %106, %100\l  %108 = icmp eq i32 %107, 0\l  %109 = sub nsw i32 32, %107\l  %110 = tail call i32 @llvm.fshr.i32(i32 %102, i32 %103, i32 %109)\l  %111 = tail call i32 @llvm.fshr.i32(i32 %103, i32 %104, i32 %109)\l  %112 = tail call i32 @llvm.fshr.i32(i32 %104, i32 %105, i32 %109)\l  %113 = select i1 %108, i32 %102, i32 %110\l  %114 = select i1 %108, i32 %103, i32 %111\l  %115 = select i1 %108, i32 %104, i32 %112\l  %116 = lshr i32 %113, 29\l  %117 = tail call i32 @llvm.fshl.i32(i32 %113, i32 %114, i32 2)\l  %118 = tail call i32 @llvm.fshl.i32(i32 %114, i32 %115, i32 2)\l  %119 = tail call i32 @llvm.fshl.i32(i32 %115, i32 %105, i32 2)\l  %120 = and i32 %116, 1\l  %121 = sub nsw i32 0, %120\l  %122 = shl i32 %116, 31\l  %123 = xor i32 %117, %121\l  %124 = xor i32 %118, %121\l  %125 = xor i32 %119, %121\l  %126 = tail call i32 @llvm.ctlz.i32(i32 %123, i1 false), !range !7\l  %127 = sub nsw i32 31, %126\l  %128 = tail call i32 @llvm.fshr.i32(i32 %123, i32 %124, i32 %127)\l  %129 = tail call i32 @llvm.fshr.i32(i32 %124, i32 %125, i32 %127)\l  %130 = shl nuw nsw i32 %126, 23\l  %131 = sub nuw nsw i32 1056964608, %130\l  %132 = lshr i32 %128, 9\l  %133 = or i32 %132, %131\l  %134 = or i32 %133, %122\l  %135 = bitcast i32 %134 to float\l  %136 = tail call i32 @llvm.fshl.i32(i32 %128, i32 %129, i32 23)\l  %137 = tail call i32 @llvm.ctlz.i32(i32 %136, i1 false), !range !7\l  %138 = fmul float %135, 0x3FF921FB40000000\l  %139 = add nuw nsw i32 %137, %126\l  %140 = shl nuw nsw i32 %139, 23\l  %141 = sub nuw nsw i32 855638016, %140\l  %142 = sub nsw i32 31, %137\l  %143 = tail call i32 @llvm.fshr.i32(i32 %136, i32 %129, i32 %142)\l  %144 = lshr i32 %143, 9\l  %145 = or i32 %141, %144\l  %146 = or i32 %145, %122\l  %147 = bitcast i32 %146 to float\l  %148 = fneg float %138\l  %149 = tail call float @llvm.fma.f32(float %135, float 0x3FF921FB40000000,\l... float %148)\l  %150 = tail call float @llvm.fma.f32(float %135, float 0x3E74442D00000000,\l... float %149)\l  %151 = tail call float @llvm.fma.f32(float %147, float 0x3FF921FB40000000,\l... float %150)\l  %152 = fadd float %138, %151\l  %153 = lshr i32 %113, 30\l  %154 = add nuw nsw i32 %120, %153\l  br label %155\l}"];
	Node0x5c00690 -> Node0x5c010f0;
	Node0x5c010f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%155:\l155:                                              \l  %156 = phi float [ %47, %42 ], [ %152, %49 ]\l  %157 = phi i32 [ %48, %42 ], [ %154, %49 ]\l  %158 = fmul float %156, %156\l  %159 = tail call float @llvm.fmuladd.f32(float %158, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %160 = tail call float @llvm.fmuladd.f32(float %158, float %159, float\l... 0xBFC55553A0000000)\l  %161 = fmul float %158, %160\l  %162 = tail call float @llvm.fmuladd.f32(float %156, float %161, float %156)\l  %163 = tail call float @llvm.fmuladd.f32(float %158, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %164 = tail call float @llvm.fmuladd.f32(float %158, float %163, float\l... 0x3FA5557EE0000000)\l  %165 = tail call float @llvm.fmuladd.f32(float %158, float %164, float\l... 0xBFE0000080000000)\l  %166 = tail call float @llvm.fmuladd.f32(float %158, float %165, float\l... 1.000000e+00)\l  %167 = fneg float %162\l  %168 = and i32 %157, 1\l  %169 = icmp eq i32 %168, 0\l  %170 = select i1 %169, float %166, float %167\l  %171 = bitcast float %170 to i32\l  %172 = shl i32 %157, 30\l  %173 = and i32 %172, -2147483648\l  %174 = xor i32 %173, %171\l  %175 = bitcast i32 %174 to float\l  %176 = tail call i1 @llvm.amdgcn.class.f32(float %40, i32 504)\l  %177 = fmul contract float %175, 5.000000e-01\l  %178 = fadd contract float %177, 5.000000e-01\l  %179 = select i1 %176, float %178, float 0x7FF8000000000000\l  %180 = sitofp i32 %22 to float\l  %181 = fmul contract float %180, 2.000000e+00\l  %182 = sitofp i32 %2 to float\l  %183 = fdiv contract float %181, %182\l  %184 = fadd contract float %183, -1.000000e+00\l  %185 = fmul contract float %184, 1.000000e+01\l  %186 = fadd contract float %185, %4\l  %187 = tail call float @llvm.fabs.f32(float %186)\l  %188 = fcmp olt float %187, 1.310720e+05\l  br i1 %188, label %189, label %196\l|{<s0>T|<s1>F}}"];
	Node0x5c010f0:s0 -> Node0x5c08a30;
	Node0x5c010f0:s1 -> Node0x5c08ac0;
	Node0x5c08a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%189:\l189:                                              \l  %190 = fmul float %187, 0x3FE45F3060000000\l  %191 = tail call float @llvm.rint.f32(float %190)\l  %192 = tail call float @llvm.fma.f32(float %191, float 0xBFF921FB40000000,\l... float %187)\l  %193 = tail call float @llvm.fma.f32(float %191, float 0xBE74442D00000000,\l... float %192)\l  %194 = tail call float @llvm.fma.f32(float %191, float 0xBCF8469880000000,\l... float %193)\l  %195 = fptosi float %191 to i32\l  br label %302\l}"];
	Node0x5c08a30 -> Node0x5c09180;
	Node0x5c08ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%196:\l196:                                              \l  %197 = bitcast float %187 to i32\l  %198 = lshr i32 %197, 23\l  %199 = and i32 %197, 8388607\l  %200 = or i32 %199, 8388608\l  %201 = zext i32 %200 to i64\l  %202 = mul nuw nsw i64 %201, 4266746795\l  %203 = trunc i64 %202 to i32\l  %204 = lshr i64 %202, 32\l  %205 = mul nuw nsw i64 %201, 1011060801\l  %206 = add nuw nsw i64 %204, %205\l  %207 = trunc i64 %206 to i32\l  %208 = lshr i64 %206, 32\l  %209 = mul nuw nsw i64 %201, 3680671129\l  %210 = add nuw nsw i64 %208, %209\l  %211 = trunc i64 %210 to i32\l  %212 = lshr i64 %210, 32\l  %213 = mul nuw nsw i64 %201, 4113882560\l  %214 = add nuw nsw i64 %212, %213\l  %215 = trunc i64 %214 to i32\l  %216 = lshr i64 %214, 32\l  %217 = mul nuw nsw i64 %201, 4230436817\l  %218 = add nuw nsw i64 %216, %217\l  %219 = trunc i64 %218 to i32\l  %220 = lshr i64 %218, 32\l  %221 = mul nuw nsw i64 %201, 1313084713\l  %222 = add nuw nsw i64 %220, %221\l  %223 = trunc i64 %222 to i32\l  %224 = lshr i64 %222, 32\l  %225 = mul nuw nsw i64 %201, 2734261102\l  %226 = add nuw nsw i64 %224, %225\l  %227 = trunc i64 %226 to i32\l  %228 = lshr i64 %226, 32\l  %229 = trunc i64 %228 to i32\l  %230 = add nsw i32 %198, -120\l  %231 = icmp ugt i32 %230, 63\l  %232 = select i1 %231, i32 %223, i32 %229\l  %233 = select i1 %231, i32 %219, i32 %227\l  %234 = select i1 %231, i32 %215, i32 %223\l  %235 = select i1 %231, i32 %211, i32 %219\l  %236 = select i1 %231, i32 %207, i32 %215\l  %237 = select i1 %231, i32 %203, i32 %211\l  %238 = select i1 %231, i32 -64, i32 0\l  %239 = add nsw i32 %238, %230\l  %240 = icmp ugt i32 %239, 31\l  %241 = select i1 %240, i32 %233, i32 %232\l  %242 = select i1 %240, i32 %234, i32 %233\l  %243 = select i1 %240, i32 %235, i32 %234\l  %244 = select i1 %240, i32 %236, i32 %235\l  %245 = select i1 %240, i32 %237, i32 %236\l  %246 = select i1 %240, i32 -32, i32 0\l  %247 = add nsw i32 %246, %239\l  %248 = icmp ugt i32 %247, 31\l  %249 = select i1 %248, i32 %242, i32 %241\l  %250 = select i1 %248, i32 %243, i32 %242\l  %251 = select i1 %248, i32 %244, i32 %243\l  %252 = select i1 %248, i32 %245, i32 %244\l  %253 = select i1 %248, i32 -32, i32 0\l  %254 = add nsw i32 %253, %247\l  %255 = icmp eq i32 %254, 0\l  %256 = sub nsw i32 32, %254\l  %257 = tail call i32 @llvm.fshr.i32(i32 %249, i32 %250, i32 %256)\l  %258 = tail call i32 @llvm.fshr.i32(i32 %250, i32 %251, i32 %256)\l  %259 = tail call i32 @llvm.fshr.i32(i32 %251, i32 %252, i32 %256)\l  %260 = select i1 %255, i32 %249, i32 %257\l  %261 = select i1 %255, i32 %250, i32 %258\l  %262 = select i1 %255, i32 %251, i32 %259\l  %263 = lshr i32 %260, 29\l  %264 = tail call i32 @llvm.fshl.i32(i32 %260, i32 %261, i32 2)\l  %265 = tail call i32 @llvm.fshl.i32(i32 %261, i32 %262, i32 2)\l  %266 = tail call i32 @llvm.fshl.i32(i32 %262, i32 %252, i32 2)\l  %267 = and i32 %263, 1\l  %268 = sub nsw i32 0, %267\l  %269 = shl i32 %263, 31\l  %270 = xor i32 %264, %268\l  %271 = xor i32 %265, %268\l  %272 = xor i32 %266, %268\l  %273 = tail call i32 @llvm.ctlz.i32(i32 %270, i1 false), !range !7\l  %274 = sub nsw i32 31, %273\l  %275 = tail call i32 @llvm.fshr.i32(i32 %270, i32 %271, i32 %274)\l  %276 = tail call i32 @llvm.fshr.i32(i32 %271, i32 %272, i32 %274)\l  %277 = shl nuw nsw i32 %273, 23\l  %278 = sub nuw nsw i32 1056964608, %277\l  %279 = lshr i32 %275, 9\l  %280 = or i32 %279, %278\l  %281 = or i32 %280, %269\l  %282 = bitcast i32 %281 to float\l  %283 = tail call i32 @llvm.fshl.i32(i32 %275, i32 %276, i32 23)\l  %284 = tail call i32 @llvm.ctlz.i32(i32 %283, i1 false), !range !7\l  %285 = fmul float %282, 0x3FF921FB40000000\l  %286 = add nuw nsw i32 %284, %273\l  %287 = shl nuw nsw i32 %286, 23\l  %288 = sub nuw nsw i32 855638016, %287\l  %289 = sub nsw i32 31, %284\l  %290 = tail call i32 @llvm.fshr.i32(i32 %283, i32 %276, i32 %289)\l  %291 = lshr i32 %290, 9\l  %292 = or i32 %288, %291\l  %293 = or i32 %292, %269\l  %294 = bitcast i32 %293 to float\l  %295 = fneg float %285\l  %296 = tail call float @llvm.fma.f32(float %282, float 0x3FF921FB40000000,\l... float %295)\l  %297 = tail call float @llvm.fma.f32(float %282, float 0x3E74442D00000000,\l... float %296)\l  %298 = tail call float @llvm.fma.f32(float %294, float 0x3FF921FB40000000,\l... float %297)\l  %299 = fadd float %285, %298\l  %300 = lshr i32 %260, 30\l  %301 = add nuw nsw i32 %267, %300\l  br label %302\l}"];
	Node0x5c08ac0 -> Node0x5c09180;
	Node0x5c09180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%302:\l302:                                              \l  %303 = phi float [ %194, %189 ], [ %299, %196 ]\l  %304 = phi i32 [ %195, %189 ], [ %301, %196 ]\l  %305 = fmul float %303, %303\l  %306 = tail call float @llvm.fmuladd.f32(float %305, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %307 = tail call float @llvm.fmuladd.f32(float %305, float %306, float\l... 0xBFC55553A0000000)\l  %308 = fmul float %305, %307\l  %309 = tail call float @llvm.fmuladd.f32(float %303, float %308, float %303)\l  %310 = tail call float @llvm.fmuladd.f32(float %305, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %311 = tail call float @llvm.fmuladd.f32(float %305, float %310, float\l... 0x3FA5557EE0000000)\l  %312 = tail call float @llvm.fmuladd.f32(float %305, float %311, float\l... 0xBFE0000080000000)\l  %313 = tail call float @llvm.fmuladd.f32(float %305, float %312, float\l... 1.000000e+00)\l  %314 = fneg float %309\l  %315 = and i32 %304, 1\l  %316 = icmp eq i32 %315, 0\l  %317 = select i1 %316, float %313, float %314\l  %318 = bitcast float %317 to i32\l  %319 = shl i32 %304, 30\l  %320 = and i32 %319, -2147483648\l  %321 = xor i32 %320, %318\l  %322 = bitcast i32 %321 to float\l  %323 = tail call i1 @llvm.amdgcn.class.f32(float %187, i32 504)\l  %324 = fmul contract float %322, 5.000000e-01\l  %325 = fadd contract float %324, 5.000000e-01\l  %326 = select i1 %323, float %325, float 0x7FF8000000000000\l  %327 = tail call float @llvm.fabs.f32(float %4)\l  %328 = fcmp olt float %327, 1.310720e+05\l  br i1 %328, label %329, label %336\l|{<s0>T|<s1>F}}"];
	Node0x5c09180:s0 -> Node0x5c0f3f0;
	Node0x5c09180:s1 -> Node0x5c0f440;
	Node0x5c0f3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%329:\l329:                                              \l  %330 = fmul float %327, 0x3FE45F3060000000\l  %331 = tail call float @llvm.rint.f32(float %330)\l  %332 = tail call float @llvm.fma.f32(float %331, float 0xBFF921FB40000000,\l... float %327)\l  %333 = tail call float @llvm.fma.f32(float %331, float 0xBE74442D00000000,\l... float %332)\l  %334 = tail call float @llvm.fma.f32(float %331, float 0xBCF8469880000000,\l... float %333)\l  %335 = fptosi float %331 to i32\l  br label %442\l}"];
	Node0x5c0f3f0 -> Node0x5c0fb00;
	Node0x5c0f440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%336:\l336:                                              \l  %337 = bitcast float %327 to i32\l  %338 = lshr i32 %337, 23\l  %339 = and i32 %337, 8388607\l  %340 = or i32 %339, 8388608\l  %341 = zext i32 %340 to i64\l  %342 = mul nuw nsw i64 %341, 4266746795\l  %343 = trunc i64 %342 to i32\l  %344 = lshr i64 %342, 32\l  %345 = mul nuw nsw i64 %341, 1011060801\l  %346 = add nuw nsw i64 %344, %345\l  %347 = trunc i64 %346 to i32\l  %348 = lshr i64 %346, 32\l  %349 = mul nuw nsw i64 %341, 3680671129\l  %350 = add nuw nsw i64 %348, %349\l  %351 = trunc i64 %350 to i32\l  %352 = lshr i64 %350, 32\l  %353 = mul nuw nsw i64 %341, 4113882560\l  %354 = add nuw nsw i64 %352, %353\l  %355 = trunc i64 %354 to i32\l  %356 = lshr i64 %354, 32\l  %357 = mul nuw nsw i64 %341, 4230436817\l  %358 = add nuw nsw i64 %356, %357\l  %359 = trunc i64 %358 to i32\l  %360 = lshr i64 %358, 32\l  %361 = mul nuw nsw i64 %341, 1313084713\l  %362 = add nuw nsw i64 %360, %361\l  %363 = trunc i64 %362 to i32\l  %364 = lshr i64 %362, 32\l  %365 = mul nuw nsw i64 %341, 2734261102\l  %366 = add nuw nsw i64 %364, %365\l  %367 = trunc i64 %366 to i32\l  %368 = lshr i64 %366, 32\l  %369 = trunc i64 %368 to i32\l  %370 = add nsw i32 %338, -120\l  %371 = icmp ugt i32 %370, 63\l  %372 = select i1 %371, i32 %363, i32 %369\l  %373 = select i1 %371, i32 %359, i32 %367\l  %374 = select i1 %371, i32 %355, i32 %363\l  %375 = select i1 %371, i32 %351, i32 %359\l  %376 = select i1 %371, i32 %347, i32 %355\l  %377 = select i1 %371, i32 %343, i32 %351\l  %378 = select i1 %371, i32 -64, i32 0\l  %379 = add nsw i32 %378, %370\l  %380 = icmp ugt i32 %379, 31\l  %381 = select i1 %380, i32 %373, i32 %372\l  %382 = select i1 %380, i32 %374, i32 %373\l  %383 = select i1 %380, i32 %375, i32 %374\l  %384 = select i1 %380, i32 %376, i32 %375\l  %385 = select i1 %380, i32 %377, i32 %376\l  %386 = select i1 %380, i32 -32, i32 0\l  %387 = add nsw i32 %386, %379\l  %388 = icmp ugt i32 %387, 31\l  %389 = select i1 %388, i32 %382, i32 %381\l  %390 = select i1 %388, i32 %383, i32 %382\l  %391 = select i1 %388, i32 %384, i32 %383\l  %392 = select i1 %388, i32 %385, i32 %384\l  %393 = select i1 %388, i32 -32, i32 0\l  %394 = add nsw i32 %393, %387\l  %395 = icmp eq i32 %394, 0\l  %396 = sub nsw i32 32, %394\l  %397 = tail call i32 @llvm.fshr.i32(i32 %389, i32 %390, i32 %396)\l  %398 = tail call i32 @llvm.fshr.i32(i32 %390, i32 %391, i32 %396)\l  %399 = tail call i32 @llvm.fshr.i32(i32 %391, i32 %392, i32 %396)\l  %400 = select i1 %395, i32 %389, i32 %397\l  %401 = select i1 %395, i32 %390, i32 %398\l  %402 = select i1 %395, i32 %391, i32 %399\l  %403 = lshr i32 %400, 29\l  %404 = tail call i32 @llvm.fshl.i32(i32 %400, i32 %401, i32 2)\l  %405 = tail call i32 @llvm.fshl.i32(i32 %401, i32 %402, i32 2)\l  %406 = tail call i32 @llvm.fshl.i32(i32 %402, i32 %392, i32 2)\l  %407 = and i32 %403, 1\l  %408 = sub nsw i32 0, %407\l  %409 = shl i32 %403, 31\l  %410 = xor i32 %404, %408\l  %411 = xor i32 %405, %408\l  %412 = xor i32 %406, %408\l  %413 = tail call i32 @llvm.ctlz.i32(i32 %410, i1 false), !range !7\l  %414 = sub nsw i32 31, %413\l  %415 = tail call i32 @llvm.fshr.i32(i32 %410, i32 %411, i32 %414)\l  %416 = tail call i32 @llvm.fshr.i32(i32 %411, i32 %412, i32 %414)\l  %417 = shl nuw nsw i32 %413, 23\l  %418 = sub nuw nsw i32 1056964608, %417\l  %419 = lshr i32 %415, 9\l  %420 = or i32 %419, %418\l  %421 = or i32 %420, %409\l  %422 = bitcast i32 %421 to float\l  %423 = tail call i32 @llvm.fshl.i32(i32 %415, i32 %416, i32 23)\l  %424 = tail call i32 @llvm.ctlz.i32(i32 %423, i1 false), !range !7\l  %425 = fmul float %422, 0x3FF921FB40000000\l  %426 = add nuw nsw i32 %424, %413\l  %427 = shl nuw nsw i32 %426, 23\l  %428 = sub nuw nsw i32 855638016, %427\l  %429 = sub nsw i32 31, %424\l  %430 = tail call i32 @llvm.fshr.i32(i32 %423, i32 %416, i32 %429)\l  %431 = lshr i32 %430, 9\l  %432 = or i32 %428, %431\l  %433 = or i32 %432, %409\l  %434 = bitcast i32 %433 to float\l  %435 = fneg float %425\l  %436 = tail call float @llvm.fma.f32(float %422, float 0x3FF921FB40000000,\l... float %435)\l  %437 = tail call float @llvm.fma.f32(float %422, float 0x3E74442D00000000,\l... float %436)\l  %438 = tail call float @llvm.fma.f32(float %434, float 0x3FF921FB40000000,\l... float %437)\l  %439 = fadd float %425, %438\l  %440 = lshr i32 %400, 30\l  %441 = add nuw nsw i32 %407, %440\l  br label %442\l}"];
	Node0x5c0f440 -> Node0x5c0fb00;
	Node0x5c0fb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%442:\l442:                                              \l  %443 = phi float [ %334, %329 ], [ %439, %336 ]\l  %444 = phi i32 [ %335, %329 ], [ %441, %336 ]\l  %445 = fmul float %443, %443\l  %446 = tail call float @llvm.fmuladd.f32(float %445, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %447 = tail call float @llvm.fmuladd.f32(float %445, float %446, float\l... 0xBFC55553A0000000)\l  %448 = fmul float %445, %447\l  %449 = tail call float @llvm.fmuladd.f32(float %443, float %448, float %443)\l  %450 = tail call float @llvm.fmuladd.f32(float %445, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %451 = tail call float @llvm.fmuladd.f32(float %445, float %450, float\l... 0x3FA5557EE0000000)\l  %452 = tail call float @llvm.fmuladd.f32(float %445, float %451, float\l... 0xBFE0000080000000)\l  %453 = tail call float @llvm.fmuladd.f32(float %445, float %452, float\l... 1.000000e+00)\l  %454 = fneg float %449\l  %455 = and i32 %444, 1\l  %456 = icmp eq i32 %455, 0\l  %457 = select i1 %456, float %453, float %454\l  %458 = bitcast float %457 to i32\l  %459 = shl i32 %444, 30\l  %460 = and i32 %459, -2147483648\l  %461 = xor i32 %460, %458\l  %462 = bitcast i32 %461 to float\l  %463 = fmul contract float %462, 5.000000e-01\l  %464 = fadd contract float %463, 5.000000e-01\l  %465 = fmul contract float %464, 2.550000e+02\l  %466 = fptoui float %465 to i8\l  store i8 %466, i8 addrspace(1)* %32, align 1, !tbaa !8\l  %467 = getelementptr inbounds i8, i8 addrspace(1)* %32, i64 1\l  %468 = load i8, i8 addrspace(1)* %467, align 1, !tbaa !8, !amdgpu.noclobber\l... !5\l  %469 = uitofp i8 %468 to double\l  %470 = fmul contract double %469, 5.000000e-01\l  %471 = fdiv contract double %470, 2.550000e+02\l  %472 = tail call float @llvm.fabs.f32(float %326)\l  %473 = tail call float @llvm.amdgcn.frexp.mant.f32(float %472)\l  %474 = fcmp olt float %473, 0x3FE5555560000000\l  %475 = zext i1 %474 to i32\l  %476 = tail call float @llvm.amdgcn.ldexp.f32(float %473, i32 %475)\l  %477 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %472)\l  %478 = sub nsw i32 %477, %475\l  %479 = fadd float %476, -1.000000e+00\l  %480 = fadd float %476, 1.000000e+00\l  %481 = fadd float %480, -1.000000e+00\l  %482 = fsub float %476, %481\l  %483 = tail call float @llvm.amdgcn.rcp.f32(float %480)\l  %484 = fmul float %479, %483\l  %485 = fmul float %480, %484\l  %486 = fneg float %485\l  %487 = tail call float @llvm.fma.f32(float %484, float %480, float %486)\l  %488 = tail call float @llvm.fma.f32(float %484, float %482, float %487)\l  %489 = fadd float %485, %488\l  %490 = fsub float %489, %485\l  %491 = fsub float %488, %490\l  %492 = fsub float %479, %489\l  %493 = fsub float %479, %492\l  %494 = fsub float %493, %489\l  %495 = fsub float %494, %491\l  %496 = fadd float %492, %495\l  %497 = fmul float %483, %496\l  %498 = fadd float %484, %497\l  %499 = fsub float %498, %484\l  %500 = fsub float %497, %499\l  %501 = fmul float %498, %498\l  %502 = fneg float %501\l  %503 = tail call float @llvm.fma.f32(float %498, float %498, float %502)\l  %504 = fmul float %500, 2.000000e+00\l  %505 = tail call float @llvm.fma.f32(float %498, float %504, float %503)\l  %506 = fadd float %501, %505\l  %507 = fsub float %506, %501\l  %508 = fsub float %505, %507\l  %509 = tail call float @llvm.fmuladd.f32(float %506, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %510 = tail call float @llvm.fmuladd.f32(float %506, float %509, float\l... 0x3FD999BDE0000000)\l  %511 = sitofp i32 %478 to float\l  %512 = fmul float %511, 0x3FE62E4300000000\l  %513 = fneg float %512\l  %514 = tail call float @llvm.fma.f32(float %511, float 0x3FE62E4300000000,\l... float %513)\l  %515 = tail call float @llvm.fma.f32(float %511, float 0xBE205C6100000000,\l... float %514)\l  %516 = fadd float %512, %515\l  %517 = fsub float %516, %512\l  %518 = fsub float %515, %517\l  %519 = tail call float @llvm.amdgcn.ldexp.f32(float %498, i32 1)\l  %520 = fmul float %498, %506\l  %521 = fneg float %520\l  %522 = tail call float @llvm.fma.f32(float %506, float %498, float %521)\l  %523 = tail call float @llvm.fma.f32(float %506, float %500, float %522)\l  %524 = tail call float @llvm.fma.f32(float %508, float %498, float %523)\l  %525 = fadd float %520, %524\l  %526 = fsub float %525, %520\l  %527 = fsub float %524, %526\l  %528 = fmul float %506, %510\l  %529 = fneg float %528\l  %530 = tail call float @llvm.fma.f32(float %506, float %510, float %529)\l  %531 = tail call float @llvm.fma.f32(float %508, float %510, float %530)\l  %532 = fadd float %528, %531\l  %533 = fsub float %532, %528\l  %534 = fsub float %531, %533\l  %535 = fadd float %532, 0x3FE5555540000000\l  %536 = fadd float %535, 0xBFE5555540000000\l  %537 = fsub float %532, %536\l  %538 = fadd float %534, 0x3E2E720200000000\l  %539 = fadd float %538, %537\l  %540 = fadd float %535, %539\l  %541 = fsub float %540, %535\l  %542 = fsub float %539, %541\l  %543 = fmul float %525, %540\l  %544 = fneg float %543\l  %545 = tail call float @llvm.fma.f32(float %525, float %540, float %544)\l  %546 = tail call float @llvm.fma.f32(float %525, float %542, float %545)\l  %547 = tail call float @llvm.fma.f32(float %527, float %540, float %546)\l  %548 = tail call float @llvm.amdgcn.ldexp.f32(float %500, i32 1)\l  %549 = fadd float %543, %547\l  %550 = fsub float %549, %543\l  %551 = fsub float %547, %550\l  %552 = fadd float %519, %549\l  %553 = fsub float %552, %519\l  %554 = fsub float %549, %553\l  %555 = fadd float %548, %551\l  %556 = fadd float %555, %554\l  %557 = fadd float %552, %556\l  %558 = fsub float %557, %552\l  %559 = fsub float %556, %558\l  %560 = fadd float %516, %557\l  %561 = fsub float %560, %516\l  %562 = fsub float %560, %561\l  %563 = fsub float %516, %562\l  %564 = fsub float %557, %561\l  %565 = fadd float %564, %563\l  %566 = fadd float %518, %559\l  %567 = fsub float %566, %518\l  %568 = fsub float %566, %567\l  %569 = fsub float %518, %568\l  %570 = fsub float %559, %567\l  %571 = fadd float %570, %569\l  %572 = fadd float %566, %565\l  %573 = fadd float %560, %572\l  %574 = fsub float %573, %560\l  %575 = fsub float %572, %574\l  %576 = fadd float %571, %575\l  %577 = fadd float %573, %576\l  %578 = fsub float %577, %573\l  %579 = fsub float %576, %578\l  %580 = fmul float %577, 3.000000e+00\l  %581 = fneg float %580\l  %582 = tail call float @llvm.fma.f32(float %577, float 3.000000e+00, float\l... %581)\l  %583 = tail call float @llvm.fma.f32(float %579, float 3.000000e+00, float\l... %582)\l  %584 = fadd float %580, %583\l  %585 = fsub float %584, %580\l  %586 = fsub float %583, %585\l  %587 = tail call float @llvm.fabs.f32(float %580) #3\l  %588 = fcmp oeq float %587, 0x7FF0000000000000\l  %589 = select i1 %588, float %580, float %584\l  %590 = tail call float @llvm.fabs.f32(float %589) #3\l  %591 = fcmp oeq float %590, 0x7FF0000000000000\l  %592 = select i1 %591, float 0.000000e+00, float %586\l  %593 = fcmp oeq float %589, 0x40562E4300000000\l  %594 = select i1 %593, float 0x3EE0000000000000, float 0.000000e+00\l  %595 = fsub float %589, %594\l  %596 = fadd float %594, %592\l  %597 = fmul float %595, 0x3FF7154760000000\l  %598 = tail call float @llvm.rint.f32(float %597)\l  %599 = fcmp ogt float %595, 0x40562E4300000000\l  %600 = fcmp olt float %595, 0xC059D1DA00000000\l  %601 = fneg float %597\l  %602 = tail call float @llvm.fma.f32(float %595, float 0x3FF7154760000000,\l... float %601)\l  %603 = tail call float @llvm.fma.f32(float %595, float 0x3E54AE0BE0000000,\l... float %602)\l  %604 = fsub float %597, %598\l  %605 = fadd float %603, %604\l  %606 = tail call float @llvm.exp2.f32(float %605)\l  %607 = fptosi float %598 to i32\l  %608 = tail call float @llvm.amdgcn.ldexp.f32(float %606, i32 %607)\l  %609 = select i1 %600, float 0.000000e+00, float %608\l  %610 = select i1 %599, float 0x7FF0000000000000, float %609\l  %611 = tail call float @llvm.fma.f32(float %610, float %596, float %610)\l  %612 = tail call float @llvm.fabs.f32(float %610) #3\l  %613 = fcmp oeq float %612, 0x7FF0000000000000\l  %614 = select i1 %613, float %610, float %611\l  %615 = fcmp olt float %326, 0.000000e+00\l  %616 = select i1 %615, float -0.000000e+00, float 0.000000e+00\l  %617 = tail call float @llvm.copysign.f32(float %614, float %616)\l  %618 = fcmp oeq float %472, 0x7FF0000000000000\l  %619 = fcmp oeq float %326, 0.000000e+00\l  %620 = or i1 %619, %618\l  %621 = select i1 %619, float 0.000000e+00, float 0x7FF0000000000000\l  %622 = tail call float @llvm.copysign.f32(float %621, float %326)\l  %623 = select i1 %620, float %622, float %617\l  %624 = fcmp uno float %326, 0.000000e+00\l  %625 = select i1 %624, float 0x7FF8000000000000, float %623\l  %626 = fcmp oeq float %326, 1.000000e+00\l  %627 = select i1 %626, float 1.000000e+00, float %625\l  %628 = fpext float %627 to double\l  %629 = fmul contract double %628, 5.000000e-01\l  %630 = fadd contract double %629, %471\l  %631 = fmul contract double %630, 2.550000e+02\l  %632 = fptoui double %631 to i8\l  store i8 %632, i8 addrspace(1)* %467, align 1, !tbaa !8\l  %633 = uitofp i8 %466 to double\l  %634 = fmul contract double %633, 5.000000e-01\l  %635 = fdiv contract double %634, 2.550000e+02\l  %636 = tail call float @llvm.fabs.f32(float %179)\l  %637 = tail call float @llvm.amdgcn.frexp.mant.f32(float %636)\l  %638 = fcmp olt float %637, 0x3FE5555560000000\l  %639 = zext i1 %638 to i32\l  %640 = tail call float @llvm.amdgcn.ldexp.f32(float %637, i32 %639)\l  %641 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %636)\l  %642 = sub nsw i32 %641, %639\l  %643 = fadd float %640, -1.000000e+00\l  %644 = fadd float %640, 1.000000e+00\l  %645 = fadd float %644, -1.000000e+00\l  %646 = fsub float %640, %645\l  %647 = tail call float @llvm.amdgcn.rcp.f32(float %644)\l  %648 = fmul float %643, %647\l  %649 = fmul float %644, %648\l  %650 = fneg float %649\l  %651 = tail call float @llvm.fma.f32(float %648, float %644, float %650)\l  %652 = tail call float @llvm.fma.f32(float %648, float %646, float %651)\l  %653 = fadd float %649, %652\l  %654 = fsub float %653, %649\l  %655 = fsub float %652, %654\l  %656 = fsub float %643, %653\l  %657 = fsub float %643, %656\l  %658 = fsub float %657, %653\l  %659 = fsub float %658, %655\l  %660 = fadd float %656, %659\l  %661 = fmul float %647, %660\l  %662 = fadd float %648, %661\l  %663 = fsub float %662, %648\l  %664 = fsub float %661, %663\l  %665 = fmul float %662, %662\l  %666 = fneg float %665\l  %667 = tail call float @llvm.fma.f32(float %662, float %662, float %666)\l  %668 = fmul float %664, 2.000000e+00\l  %669 = tail call float @llvm.fma.f32(float %662, float %668, float %667)\l  %670 = fadd float %665, %669\l  %671 = fsub float %670, %665\l  %672 = fsub float %669, %671\l  %673 = tail call float @llvm.fmuladd.f32(float %670, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %674 = tail call float @llvm.fmuladd.f32(float %670, float %673, float\l... 0x3FD999BDE0000000)\l  %675 = sitofp i32 %642 to float\l  %676 = fmul float %675, 0x3FE62E4300000000\l  %677 = fneg float %676\l  %678 = tail call float @llvm.fma.f32(float %675, float 0x3FE62E4300000000,\l... float %677)\l  %679 = tail call float @llvm.fma.f32(float %675, float 0xBE205C6100000000,\l... float %678)\l  %680 = fadd float %676, %679\l  %681 = fsub float %680, %676\l  %682 = fsub float %679, %681\l  %683 = tail call float @llvm.amdgcn.ldexp.f32(float %662, i32 1)\l  %684 = fmul float %662, %670\l  %685 = fneg float %684\l  %686 = tail call float @llvm.fma.f32(float %670, float %662, float %685)\l  %687 = tail call float @llvm.fma.f32(float %670, float %664, float %686)\l  %688 = tail call float @llvm.fma.f32(float %672, float %662, float %687)\l  %689 = fadd float %684, %688\l  %690 = fsub float %689, %684\l  %691 = fsub float %688, %690\l  %692 = fmul float %670, %674\l  %693 = fneg float %692\l  %694 = tail call float @llvm.fma.f32(float %670, float %674, float %693)\l  %695 = tail call float @llvm.fma.f32(float %672, float %674, float %694)\l  %696 = fadd float %692, %695\l  %697 = fsub float %696, %692\l  %698 = fsub float %695, %697\l  %699 = fadd float %696, 0x3FE5555540000000\l  %700 = fadd float %699, 0xBFE5555540000000\l  %701 = fsub float %696, %700\l  %702 = fadd float %698, 0x3E2E720200000000\l  %703 = fadd float %702, %701\l  %704 = fadd float %699, %703\l  %705 = fsub float %704, %699\l  %706 = fsub float %703, %705\l  %707 = fmul float %689, %704\l  %708 = fneg float %707\l  %709 = tail call float @llvm.fma.f32(float %689, float %704, float %708)\l  %710 = tail call float @llvm.fma.f32(float %689, float %706, float %709)\l  %711 = tail call float @llvm.fma.f32(float %691, float %704, float %710)\l  %712 = tail call float @llvm.amdgcn.ldexp.f32(float %664, i32 1)\l  %713 = fadd float %707, %711\l  %714 = fsub float %713, %707\l  %715 = fsub float %711, %714\l  %716 = fadd float %683, %713\l  %717 = fsub float %716, %683\l  %718 = fsub float %713, %717\l  %719 = fadd float %712, %715\l  %720 = fadd float %719, %718\l  %721 = fadd float %716, %720\l  %722 = fsub float %721, %716\l  %723 = fsub float %720, %722\l  %724 = fadd float %680, %721\l  %725 = fsub float %724, %680\l  %726 = fsub float %724, %725\l  %727 = fsub float %680, %726\l  %728 = fsub float %721, %725\l  %729 = fadd float %728, %727\l  %730 = fadd float %682, %723\l  %731 = fsub float %730, %682\l  %732 = fsub float %730, %731\l  %733 = fsub float %682, %732\l  %734 = fsub float %723, %731\l  %735 = fadd float %734, %733\l  %736 = fadd float %730, %729\l  %737 = fadd float %724, %736\l  %738 = fsub float %737, %724\l  %739 = fsub float %736, %738\l  %740 = fadd float %735, %739\l  %741 = fadd float %737, %740\l  %742 = fsub float %741, %737\l  %743 = fsub float %740, %742\l  %744 = fmul float %741, 3.000000e+00\l  %745 = fneg float %744\l  %746 = tail call float @llvm.fma.f32(float %741, float 3.000000e+00, float\l... %745)\l  %747 = tail call float @llvm.fma.f32(float %743, float 3.000000e+00, float\l... %746)\l  %748 = fadd float %744, %747\l  %749 = fsub float %748, %744\l  %750 = fsub float %747, %749\l  %751 = tail call float @llvm.fabs.f32(float %744) #3\l  %752 = fcmp oeq float %751, 0x7FF0000000000000\l  %753 = select i1 %752, float %744, float %748\l  %754 = tail call float @llvm.fabs.f32(float %753) #3\l  %755 = fcmp oeq float %754, 0x7FF0000000000000\l  %756 = select i1 %755, float 0.000000e+00, float %750\l  %757 = fcmp oeq float %753, 0x40562E4300000000\l  %758 = select i1 %757, float 0x3EE0000000000000, float 0.000000e+00\l  %759 = fsub float %753, %758\l  %760 = fadd float %758, %756\l  %761 = fmul float %759, 0x3FF7154760000000\l  %762 = tail call float @llvm.rint.f32(float %761)\l  %763 = fcmp ogt float %759, 0x40562E4300000000\l  %764 = fcmp olt float %759, 0xC059D1DA00000000\l  %765 = fneg float %761\l  %766 = tail call float @llvm.fma.f32(float %759, float 0x3FF7154760000000,\l... float %765)\l  %767 = tail call float @llvm.fma.f32(float %759, float 0x3E54AE0BE0000000,\l... float %766)\l  %768 = fsub float %761, %762\l  %769 = fadd float %767, %768\l  %770 = tail call float @llvm.exp2.f32(float %769)\l  %771 = fptosi float %762 to i32\l  %772 = tail call float @llvm.amdgcn.ldexp.f32(float %770, i32 %771)\l  %773 = select i1 %764, float 0.000000e+00, float %772\l  %774 = select i1 %763, float 0x7FF0000000000000, float %773\l  %775 = tail call float @llvm.fma.f32(float %774, float %760, float %774)\l  %776 = tail call float @llvm.fabs.f32(float %774) #3\l  %777 = fcmp oeq float %776, 0x7FF0000000000000\l  %778 = select i1 %777, float %774, float %775\l  %779 = fcmp olt float %179, 0.000000e+00\l  %780 = select i1 %779, float -0.000000e+00, float 0.000000e+00\l  %781 = tail call float @llvm.copysign.f32(float %778, float %780)\l  %782 = fcmp oeq float %636, 0x7FF0000000000000\l  %783 = fcmp oeq float %179, 0.000000e+00\l  %784 = or i1 %783, %782\l  %785 = select i1 %783, float 0.000000e+00, float 0x7FF0000000000000\l  %786 = tail call float @llvm.copysign.f32(float %785, float %179)\l  %787 = select i1 %784, float %786, float %781\l  %788 = fcmp uno float %179, 0.000000e+00\l  %789 = select i1 %788, float 0x7FF8000000000000, float %787\l  %790 = fcmp oeq float %179, 1.000000e+00\l  %791 = select i1 %790, float 1.000000e+00, float %789\l  %792 = fpext float %791 to double\l  %793 = fmul contract double %792, 5.000000e-01\l  %794 = fadd contract double %793, %635\l  %795 = fmul contract double %794, 2.550000e+02\l  %796 = fptoui double %795 to i8\l  %797 = getelementptr inbounds i8, i8 addrspace(1)* %32, i64 2\l  store i8 %796, i8 addrspace(1)* %797, align 1, !tbaa !8\l  %798 = getelementptr inbounds i8, i8 addrspace(1)* %32, i64 3\l  store i8 -1, i8 addrspace(1)* %798, align 1, !tbaa !8\l  br label %799\l}"];
	Node0x5c0fb00 -> Node0x5bfef40;
	Node0x5bfef40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%799:\l799:                                              \l  ret void\l}"];
}
