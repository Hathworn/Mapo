digraph "CFG for '_Z18inclusivePrefixAddPjS_' function" {
	label="CFG for '_Z18inclusivePrefixAddPjS_' function";

	Node0x526adc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = add i32 %10, %3\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %12\l  %14 = load i32, i32 addrspace(1)* %13, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %15 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @segment,\l... i32 0, i32 %3\l  store i32 %14, i32 addrspace(3)* %15, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %16 = icmp ugt i16 %8, 1\l  br i1 %16, label %20, label %17\l|{<s0>T|<s1>F}}"];
	Node0x526adc0:s0 -> Node0x526ca90;
	Node0x526adc0:s1 -> Node0x526e1c0;
	Node0x526e1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%17:\l17:                                               \l  %18 = icmp eq i32 %4, 0\l  %19 = load i32, i32 addrspace(3)* %15, align 4, !tbaa !7\l  br i1 %18, label %39, label %32\l|{<s0>T|<s1>F}}"];
	Node0x526e1c0:s0 -> Node0x526e430;
	Node0x526e1c0:s1 -> Node0x526e480;
	Node0x526ca90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = phi i32 [ %30, %29 ], [ 1, %2 ]\l  %22 = icmp ult i32 %3, %21\l  br i1 %22, label %29, label %23\l|{<s0>T|<s1>F}}"];
	Node0x526ca90:s0 -> Node0x526e5c0;
	Node0x526ca90:s1 -> Node0x526e7c0;
	Node0x526e7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%23:\l23:                                               \l  %24 = load i32, i32 addrspace(3)* %15, align 4, !tbaa !7\l  %25 = sub i32 %3, %21\l  %26 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @segment,\l... i32 0, i32 %25\l  %27 = load i32, i32 addrspace(3)* %26, align 4, !tbaa !7\l  %28 = add i32 %27, %24\l  store i32 %28, i32 addrspace(3)* %15, align 4, !tbaa !7\l  br label %29\l}"];
	Node0x526e7c0 -> Node0x526e5c0;
	Node0x526e5c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %30 = shl i32 %21, 1\l  %31 = icmp ult i32 %30, %9\l  br i1 %31, label %20, label %17, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x526e5c0:s0 -> Node0x526ca90;
	Node0x526e5c0:s1 -> Node0x526e1c0;
	Node0x526e480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%32:\l32:                                               \l  %33 = add i32 %4, -1\l  %34 = mul i32 %33, %9\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %35\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %38 = add i32 %37, %19\l  store i32 %38, i32 addrspace(3)* %15, align 4, !tbaa !7\l  br label %39\l}"];
	Node0x526e480 -> Node0x526e430;
	Node0x526e430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%39:\l39:                                               \l  %40 = phi i32 [ %38, %32 ], [ %19, %17 ]\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %12\l  store i32 %40, i32 addrspace(1)* %41, align 4, !tbaa !7\l  ret void\l}"];
}
