digraph "CFG for '_Z14kernel_stencilPfS_S_S_S_S_S_' function" {
	label="CFG for '_Z14kernel_stencilPfS_S_S_S_S_S_' function";

	Node0x53265f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = add i32 %15, %8\l  %17 = icmp sgt i32 %16, 545024\l  br i1 %17, label %213, label %18\l|{<s0>T|<s1>F}}"];
	Node0x53265f0:s0 -> Node0x5328560;
	Node0x53265f0:s1 -> Node0x53285f0;
	Node0x53285f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%18:\l18:                                               \l  %19 = freeze i32 %16\l  %20 = sdiv i32 %19, 65\l  %21 = sdiv i32 %16, 4225\l  %22 = srem i32 %20, 65\l  %23 = mul i32 %20, 65\l  %24 = sub i32 %19, %23\l  %25 = add i32 %16, -540800\l  %26 = icmp ult i32 %25, -536575\l  br i1 %26, label %27, label %29\l|{<s0>T|<s1>F}}"];
	Node0x53285f0:s0 -> Node0x5328c50;
	Node0x53285f0:s1 -> Node0x5328ca0;
	Node0x5328c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%27:\l27:                                               \l  %28 = sext i32 %16 to i64\l  br label %209\l}"];
	Node0x5328c50 -> Node0x5328e50;
	Node0x5328ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%29:\l29:                                               \l  %30 = icmp slt i32 %22, 1\l  br i1 %30, label %34, label %31\l|{<s0>T|<s1>F}}"];
	Node0x5328ca0:s0 -> Node0x5328fd0;
	Node0x5328ca0:s1 -> Node0x5329020;
	Node0x5329020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%31:\l31:                                               \l  %32 = add nsw i32 %24, 1\l  %33 = icmp sgt i32 %24, 63\l  br i1 %33, label %34, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5329020:s0 -> Node0x5328fd0;
	Node0x5329020:s1 -> Node0x5328510;
	Node0x5328fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%34:\l34:                                               \l  %35 = zext i32 %16 to i64\l  br label %209\l}"];
	Node0x5328fd0 -> Node0x5328e50;
	Node0x5328510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%36:\l36:                                               \l  %37 = mul nsw i32 %21, 4225\l  %38 = mul nuw nsw i32 %22, 65\l  %39 = add nsw i32 %38, %37\l  %40 = add nsw i32 %39, %24\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %44 = add nsw i32 %37, 4225\l  %45 = add nsw i32 %44, %38\l  %46 = add nsw i32 %45, %24\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %50 = add nuw nsw i32 %38, 65\l  %51 = add nsw i32 %50, %37\l  %52 = add nsw i32 %51, %24\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %56 = add nsw i32 %39, %32\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %60 = add nsw i32 %44, %24\l  %61 = add nsw i32 %60, %50\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %1, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %65 = add nsw i32 %38, -65\l  %66 = add nsw i32 %60, %65\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %70 = add i32 %37, -4225\l  %71 = add i32 %70, %24\l  %72 = add i32 %71, %50\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %76 = add i32 %71, %65\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %80 = add nsw i32 %51, %32\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %1, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %84 = add nsw i32 %65, %37\l  %85 = add nsw i32 %84, %32\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %89 = add nsw i32 %24, -1\l  %90 = add nsw i32 %51, %89\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %1, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %94 = add nsw i32 %84, %89\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %1, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %98 = add nsw i32 %45, %32\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %1, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %102 = add nsw i32 %70, %38\l  %103 = add nsw i32 %102, %32\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %1, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %107 = add nsw i32 %45, %89\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %1, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %111 = add nsw i32 %102, %89\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %1, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %115 = add nsw i32 %102, %24\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %1, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %119 = add nsw i32 %84, %24\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %1, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %123 = add nsw i32 %39, %89\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %1, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %127 = fpext float %43 to double\l  %128 = mul nsw i32 %21, 16900\l  %129 = mul nuw nsw i32 %22, 260\l  %130 = shl nsw i32 %24, 2\l  %131 = add i32 %130, %128\l  %132 = add i32 %131, %129\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %2, i64 %133\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %136 = fmul contract float %49, %135\l  %137 = or i32 %132, 1\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %2, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %141 = fmul contract float %55, %140\l  %142 = fadd contract float %136, %141\l  %143 = or i32 %132, 2\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %2, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %147 = fmul contract float %59, %146\l  %148 = fadd contract float %142, %147\l  %149 = mul nsw i32 %21, 12675\l  %150 = mul nuw nsw i32 %22, 195\l  %151 = mul nsw i32 %24, 3\l  %152 = add i32 %151, %149\l  %153 = add i32 %152, %150\l  %154 = sext i32 %153 to i64\l  %155 = getelementptr inbounds float, float addrspace(1)* %3, i64 %154\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %157 = fsub contract float %64, %69\l  %158 = fsub contract float %157, %75\l  %159 = fadd contract float %158, %79\l  %160 = fmul contract float %159, %156\l  %161 = fadd contract float %148, %160\l  %162 = add nsw i32 %153, 1\l  %163 = sext i32 %162 to i64\l  %164 = getelementptr inbounds float, float addrspace(1)* %3, i64 %163\l  %165 = load float, float addrspace(1)* %164, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %166 = fsub contract float %83, %88\l  %167 = fsub contract float %166, %93\l  %168 = fadd contract float %167, %97\l  %169 = fmul contract float %168, %165\l  %170 = fadd contract float %161, %169\l  %171 = add nsw i32 %153, 2\l  %172 = sext i32 %171 to i64\l  %173 = getelementptr inbounds float, float addrspace(1)* %3, i64 %172\l  %174 = load float, float addrspace(1)* %173, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %175 = fsub contract float %101, %106\l  %176 = fsub contract float %175, %110\l  %177 = fadd contract float %176, %114\l  %178 = fmul contract float %177, %174\l  %179 = fadd contract float %170, %178\l  %180 = getelementptr inbounds float, float addrspace(1)* %4, i64 %154\l  %181 = load float, float addrspace(1)* %180, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %182 = fmul contract float %118, %181\l  %183 = fadd contract float %179, %182\l  %184 = getelementptr inbounds float, float addrspace(1)* %4, i64 %163\l  %185 = load float, float addrspace(1)* %184, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %186 = fmul contract float %122, %185\l  %187 = fadd contract float %183, %186\l  %188 = getelementptr inbounds float, float addrspace(1)* %4, i64 %172\l  %189 = load float, float addrspace(1)* %188, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %190 = fmul contract float %126, %189\l  %191 = fadd contract float %187, %190\l  %192 = getelementptr inbounds float, float addrspace(1)* %5, i64 %41\l  %193 = load float, float addrspace(1)* %192, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %194 = fadd contract float %193, %191\l  %195 = or i32 %132, 3\l  %196 = sext i32 %195 to i64\l  %197 = getelementptr inbounds float, float addrspace(1)* %2, i64 %196\l  %198 = load float, float addrspace(1)* %197, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %199 = fmul contract float %198, %194\l  %200 = fsub contract float %199, %43\l  %201 = getelementptr inbounds float, float addrspace(1)* %6, i64 %41\l  %202 = load float, float addrspace(1)* %201, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %203 = fmul contract float %202, %200\l  %204 = fpext float %203 to double\l  %205 = fmul contract double %204, 8.000000e-01\l  %206 = fadd contract double %205, %127\l  %207 = fptrunc double %206 to float\l  %208 = zext i32 %16 to i64\l  br label %209\l}"];
	Node0x5328510 -> Node0x5328e50;
	Node0x5328e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%209:\l209:                                              \l  %210 = phi i64 [ %28, %27 ], [ %35, %34 ], [ %208, %36 ]\l  %211 = phi float [ 0.000000e+00, %27 ], [ 0.000000e+00, %34 ], [ %207, %36 ]\l  %212 = getelementptr inbounds float, float addrspace(1)* %0, i64 %210\l  store float %211, float addrspace(1)* %212, align 4, !tbaa !7\l  br label %213\l}"];
	Node0x5328e50 -> Node0x5328560;
	Node0x5328560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%213:\l213:                                              \l  ret void\l}"];
}
