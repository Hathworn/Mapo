digraph "CFG for '_Z12gpuCrossoverPcP12hiprandStateiiifS_' function" {
	label="CFG for '_Z12gpuCrossoverPcP12hiprandStateiiifS_' function";

	Node0x46ab810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 0, i32 0, i32 0, i32 0\l  %18 = load i32, i32 addrspace(1)* %17, align 8, !amdgpu.noclobber !5\l  %19 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 0, i32 0, i32 0, i32 5, i64 0\l  %20 = load i32, i32 addrspace(1)* %19, align 8, !amdgpu.noclobber !5\l  %21 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 0, i32 0, i32 0, i32 5, i64 1\l  %22 = load i32, i32 addrspace(1)* %21, align 4, !amdgpu.noclobber !5\l  %23 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 0, i32 0, i32 0, i32 5, i64 2\l  %24 = load i32, i32 addrspace(1)* %23, align 8, !amdgpu.noclobber !5\l  %25 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 0, i32 0, i32 0, i32 5, i64 3\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !amdgpu.noclobber !5\l  %27 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 0, i32 0, i32 0, i32 5, i64 4\l  %28 = load i32, i32 addrspace(1)* %27, align 8, !amdgpu.noclobber !5\l  %29 = lshr i32 %20, 2\l  %30 = xor i32 %29, %20\l  %31 = shl i32 %28, 4\l  %32 = shl i32 %30, 1\l  %33 = xor i32 %32, %31\l  %34 = xor i32 %33, %30\l  %35 = xor i32 %34, %28\l  %36 = add i32 %18, 362437\l  store i32 %36, i32 addrspace(1)* %17, align 8\l  store i32 %22, i32 addrspace(1)* %19, align 8\l  store i32 %24, i32 addrspace(1)* %21, align 4\l  store i32 %26, i32 addrspace(1)* %23, align 8\l  store i32 %28, i32 addrspace(1)* %25, align 4\l  store i32 %35, i32 addrspace(1)* %27, align 8\l  %37 = sitofp i32 %2 to float\l  %38 = shl nsw i32 %16, 1\l  %39 = mul nsw i32 %38, %2\l  %40 = add nsw i32 %39, %2\l  %41 = add nsw i32 %40, %2\l  %42 = mul nsw i32 %3, %2\l  %43 = icmp slt i32 %41, %42\l  br i1 %43, label %44, label %73\l|{<s0>T|<s1>F}}"];
	Node0x46ab810:s0 -> Node0x46ad6b0;
	Node0x46ab810:s1 -> Node0x46af510;
	Node0x46ad6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%44:\l44:                                               \l  %45 = add i32 %35, %36\l  %46 = uitofp i32 %45 to float\l  %47 = fmul contract float %46, 0x3DF0000000000000\l  %48 = fadd contract float %47, 0x3DF0000000000000\l  %49 = fmul contract float %48, %37\l  %50 = fptosi float %49 to i32\l  %51 = icmp slt i32 %50, %2\l  br i1 %51, label %52, label %73\l|{<s0>T|<s1>F}}"];
	Node0x46ad6b0:s0 -> Node0x46b0410;
	Node0x46ad6b0:s1 -> Node0x46af510;
	Node0x46b0410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%52:\l52:                                               \l  %53 = add nsw i32 %39, %50\l  %54 = add nsw i32 %40, %50\l  %55 = sext i32 %53 to i64\l  %56 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %55\l  %57 = sext i32 %54 to i64\l  %58 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %57\l  %59 = load i8, i8 addrspace(1)* %58, align 1, !tbaa !7\l  br label %60\l}"];
	Node0x46b0410 -> Node0x46b0a30;
	Node0x46b0a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  %61 = phi i8 [ %59, %52 ], [ %63, %60 ]\l  %62 = phi i32 [ %50, %52 ], [ %64, %60 ]\l  %63 = load i8, i8 addrspace(1)* %56, align 1, !tbaa !7\l  store i8 %61, i8 addrspace(1)* %56, align 1, !tbaa !7\l  store i8 %63, i8 addrspace(1)* %58, align 1, !tbaa !7\l  %64 = add nsw i32 %62, 1\l  %65 = icmp slt i32 %64, %2\l  br i1 %65, label %60, label %66, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x46b0a30:s0 -> Node0x46b0a30;
	Node0x46b0a30:s1 -> Node0x46aeab0;
	Node0x46aeab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%66:\l66:                                               \l  %67 = load i32, i32 addrspace(1)* %17, align 8\l  %68 = load i32, i32 addrspace(1)* %19, align 8\l  %69 = load i32, i32 addrspace(1)* %21, align 4\l  %70 = load i32, i32 addrspace(1)* %23, align 8\l  %71 = load i32, i32 addrspace(1)* %25, align 4\l  %72 = load i32, i32 addrspace(1)* %27, align 8\l  br label %73\l}"];
	Node0x46aeab0 -> Node0x46af510;
	Node0x46af510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%73:\l73:                                               \l  %74 = phi i32 [ %72, %66 ], [ %35, %44 ], [ %35, %7 ]\l  %75 = phi i32 [ %71, %66 ], [ %28, %44 ], [ %28, %7 ]\l  %76 = phi i32 [ %70, %66 ], [ %26, %44 ], [ %26, %7 ]\l  %77 = phi i32 [ %69, %66 ], [ %24, %44 ], [ %24, %7 ]\l  %78 = phi i32 [ %68, %66 ], [ %22, %44 ], [ %22, %7 ]\l  %79 = phi i32 [ %67, %66 ], [ %36, %44 ], [ %36, %7 ]\l  %80 = lshr i32 %78, 2\l  %81 = xor i32 %80, %78\l  %82 = shl i32 %74, 4\l  %83 = shl i32 %81, 1\l  %84 = xor i32 %83, %82\l  %85 = xor i32 %84, %81\l  %86 = xor i32 %85, %74\l  %87 = add i32 %79, 362437\l  %88 = add i32 %86, %87\l  %89 = uitofp i32 %88 to float\l  %90 = fmul contract float %89, 0x3DF0000000000000\l  %91 = fadd contract float %90, 0x3DF0000000000000\l  store i32 %87, i32 addrspace(1)* %17, align 8\l  store i32 %77, i32 addrspace(1)* %19, align 8\l  store i32 %76, i32 addrspace(1)* %21, align 4\l  store i32 %75, i32 addrspace(1)* %23, align 8\l  store i32 %74, i32 addrspace(1)* %25, align 4\l  store i32 %86, i32 addrspace(1)* %27, align 8\l  %92 = fmul contract float %91, 1.000000e+02\l  %93 = fptosi float %92 to i32\l  %94 = sitofp i32 %93 to float\l  %95 = fmul contract float %5, 1.000000e+02\l  %96 = fcmp contract ogt float %95, %94\l  br i1 %96, label %97, label %244\l|{<s0>T|<s1>F}}"];
	Node0x46af510:s0 -> Node0x46b2e40;
	Node0x46af510:s1 -> Node0x46b2e90;
	Node0x46b2e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%97:\l97:                                               \l  %98 = lshr i32 %77, 2\l  %99 = xor i32 %98, %77\l  %100 = shl i32 %86, 4\l  %101 = shl i32 %99, 1\l  %102 = xor i32 %101, %100\l  %103 = xor i32 %102, %99\l  %104 = xor i32 %103, %86\l  %105 = add i32 %79, 724874\l  %106 = add i32 %104, %105\l  %107 = uitofp i32 %106 to float\l  %108 = fmul contract float %107, 0x3DF0000000000000\l  %109 = fadd contract float %108, 0x3DF0000000000000\l  store i32 %105, i32 addrspace(1)* %17, align 8\l  store i32 %76, i32 addrspace(1)* %19, align 8\l  store i32 %75, i32 addrspace(1)* %21, align 4\l  store i32 %74, i32 addrspace(1)* %23, align 8\l  store i32 %86, i32 addrspace(1)* %25, align 4\l  store i32 %104, i32 addrspace(1)* %27, align 8\l  %110 = sdiv i32 %2, 4\l  %111 = sitofp i32 %110 to float\l  %112 = fmul contract float %109, %111\l  %113 = fptosi float %112 to i32\l  %114 = icmp sgt i32 %113, 0\l  br i1 %114, label %115, label %244\l|{<s0>T|<s1>F}}"];
	Node0x46b2e40:s0 -> Node0x46b3c60;
	Node0x46b2e40:s1 -> Node0x46b2e90;
	Node0x46b3c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%115:\l115:                                              \l  %116 = and i32 %113, 1\l  %117 = icmp eq i32 %113, 1\l  br i1 %117, label %202, label %118\l|{<s0>T|<s1>F}}"];
	Node0x46b3c60:s0 -> Node0x46b3e80;
	Node0x46b3c60:s1 -> Node0x46b3ed0;
	Node0x46b3ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%118:\l118:                                              \l  %119 = and i32 %113, -2\l  br label %120\l}"];
	Node0x46b3ed0 -> Node0x46b40a0;
	Node0x46b40a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%120:\l120:                                              \l  %121 = phi i32 [ 0, %118 ], [ %200, %120 ]\l  %122 = load i32, i32 addrspace(1)* %17, align 8\l  %123 = load i32, i32 addrspace(1)* %19, align 8\l  %124 = load i32, i32 addrspace(1)* %21, align 4\l  %125 = load i32, i32 addrspace(1)* %23, align 8\l  %126 = load i32, i32 addrspace(1)* %25, align 4\l  %127 = load i32, i32 addrspace(1)* %27, align 8\l  %128 = lshr i32 %123, 2\l  %129 = xor i32 %128, %123\l  %130 = shl i32 %127, 4\l  %131 = shl i32 %129, 1\l  %132 = xor i32 %131, %130\l  %133 = xor i32 %132, %129\l  %134 = xor i32 %133, %127\l  %135 = add i32 %122, 362437\l  %136 = add i32 %134, %135\l  %137 = uitofp i32 %136 to float\l  %138 = fmul contract float %137, 0x3DF0000000000000\l  %139 = fadd contract float %138, 0x3DF0000000000000\l  %140 = fmul contract float %139, %37\l  %141 = fptosi float %140 to i32\l  %142 = lshr i32 %124, 2\l  %143 = xor i32 %142, %124\l  %144 = shl i32 %134, 4\l  %145 = shl i32 %143, 1\l  %146 = xor i32 %145, %144\l  %147 = xor i32 %146, %143\l  %148 = xor i32 %147, %134\l  %149 = add i32 %122, 724874\l  %150 = add i32 %148, %149\l  %151 = uitofp i32 %150 to float\l  %152 = fmul contract float %151, 0x3DF0000000000000\l  %153 = fadd contract float %152, 0x3DF0000000000000\l  store i32 %149, i32 addrspace(1)* %17, align 8\l  store i32 %125, i32 addrspace(1)* %19, align 8\l  store i32 %126, i32 addrspace(1)* %21, align 4\l  store i32 %127, i32 addrspace(1)* %23, align 8\l  store i32 %134, i32 addrspace(1)* %25, align 4\l  store i32 %148, i32 addrspace(1)* %27, align 8\l  %154 = fmul contract float %153, %37\l  %155 = fptosi float %154 to i32\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds i8, i8 addrspace(1)* %6, i64 %156\l  %158 = load i8, i8 addrspace(1)* %157, align 1, !tbaa !7\l  %159 = sext i32 %141 to i64\l  %160 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %159\l  store i8 %158, i8 addrspace(1)* %160, align 1, !tbaa !7\l  %161 = load i32, i32 addrspace(1)* %17, align 8\l  %162 = load i32, i32 addrspace(1)* %19, align 8\l  %163 = load i32, i32 addrspace(1)* %21, align 4\l  %164 = load i32, i32 addrspace(1)* %23, align 8\l  %165 = load i32, i32 addrspace(1)* %25, align 4\l  %166 = load i32, i32 addrspace(1)* %27, align 8\l  %167 = lshr i32 %162, 2\l  %168 = xor i32 %167, %162\l  %169 = shl i32 %166, 4\l  %170 = shl i32 %168, 1\l  %171 = xor i32 %170, %169\l  %172 = xor i32 %171, %168\l  %173 = xor i32 %172, %166\l  %174 = add i32 %161, 362437\l  %175 = add i32 %173, %174\l  %176 = uitofp i32 %175 to float\l  %177 = fmul contract float %176, 0x3DF0000000000000\l  %178 = fadd contract float %177, 0x3DF0000000000000\l  %179 = fmul contract float %178, %37\l  %180 = fptosi float %179 to i32\l  %181 = lshr i32 %163, 2\l  %182 = xor i32 %181, %163\l  %183 = shl i32 %173, 4\l  %184 = shl i32 %182, 1\l  %185 = xor i32 %184, %183\l  %186 = xor i32 %185, %182\l  %187 = xor i32 %186, %173\l  %188 = add i32 %161, 724874\l  %189 = add i32 %187, %188\l  %190 = uitofp i32 %189 to float\l  %191 = fmul contract float %190, 0x3DF0000000000000\l  %192 = fadd contract float %191, 0x3DF0000000000000\l  store i32 %188, i32 addrspace(1)* %17, align 8\l  store i32 %164, i32 addrspace(1)* %19, align 8\l  store i32 %165, i32 addrspace(1)* %21, align 4\l  store i32 %166, i32 addrspace(1)* %23, align 8\l  store i32 %173, i32 addrspace(1)* %25, align 4\l  store i32 %187, i32 addrspace(1)* %27, align 8\l  %193 = fmul contract float %192, %37\l  %194 = fptosi float %193 to i32\l  %195 = sext i32 %194 to i64\l  %196 = getelementptr inbounds i8, i8 addrspace(1)* %6, i64 %195\l  %197 = load i8, i8 addrspace(1)* %196, align 1, !tbaa !7\l  %198 = sext i32 %180 to i64\l  %199 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %198\l  store i8 %197, i8 addrspace(1)* %199, align 1, !tbaa !7\l  %200 = add i32 %121, 2\l  %201 = icmp eq i32 %200, %119\l  br i1 %201, label %202, label %120, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x46b40a0:s0 -> Node0x46b3e80;
	Node0x46b40a0:s1 -> Node0x46b40a0;
	Node0x46b3e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%202:\l202:                                              \l  %203 = icmp eq i32 %116, 0\l  br i1 %203, label %244, label %204\l|{<s0>T|<s1>F}}"];
	Node0x46b3e80:s0 -> Node0x46b2e90;
	Node0x46b3e80:s1 -> Node0x46b7ab0;
	Node0x46b7ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%204:\l204:                                              \l  %205 = load i32, i32 addrspace(1)* %17, align 8\l  %206 = load i32, i32 addrspace(1)* %19, align 8\l  %207 = load i32, i32 addrspace(1)* %21, align 4\l  %208 = load i32, i32 addrspace(1)* %23, align 8\l  %209 = load i32, i32 addrspace(1)* %25, align 4\l  %210 = load i32, i32 addrspace(1)* %27, align 8\l  %211 = lshr i32 %206, 2\l  %212 = xor i32 %211, %206\l  %213 = shl i32 %210, 4\l  %214 = shl i32 %212, 1\l  %215 = xor i32 %214, %213\l  %216 = xor i32 %215, %212\l  %217 = xor i32 %216, %210\l  %218 = add i32 %205, 362437\l  %219 = add i32 %217, %218\l  %220 = uitofp i32 %219 to float\l  %221 = fmul contract float %220, 0x3DF0000000000000\l  %222 = fadd contract float %221, 0x3DF0000000000000\l  %223 = fmul contract float %222, %37\l  %224 = fptosi float %223 to i32\l  %225 = lshr i32 %207, 2\l  %226 = xor i32 %225, %207\l  %227 = shl i32 %217, 4\l  %228 = shl i32 %226, 1\l  %229 = xor i32 %228, %227\l  %230 = xor i32 %229, %226\l  %231 = xor i32 %230, %217\l  %232 = add i32 %205, 724874\l  %233 = add i32 %231, %232\l  %234 = uitofp i32 %233 to float\l  %235 = fmul contract float %234, 0x3DF0000000000000\l  %236 = fadd contract float %235, 0x3DF0000000000000\l  store i32 %232, i32 addrspace(1)* %17, align 8\l  store i32 %208, i32 addrspace(1)* %19, align 8\l  store i32 %209, i32 addrspace(1)* %21, align 4\l  store i32 %210, i32 addrspace(1)* %23, align 8\l  store i32 %217, i32 addrspace(1)* %25, align 4\l  store i32 %231, i32 addrspace(1)* %27, align 8\l  %237 = fmul contract float %236, %37\l  %238 = fptosi float %237 to i32\l  %239 = sext i32 %238 to i64\l  %240 = getelementptr inbounds i8, i8 addrspace(1)* %6, i64 %239\l  %241 = load i8, i8 addrspace(1)* %240, align 1, !tbaa !7\l  %242 = sext i32 %224 to i64\l  %243 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %242\l  store i8 %241, i8 addrspace(1)* %243, align 1, !tbaa !7\l  br label %244\l}"];
	Node0x46b7ab0 -> Node0x46b2e90;
	Node0x46b2e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%244:\l244:                                              \l  ret void\l}"];
}
