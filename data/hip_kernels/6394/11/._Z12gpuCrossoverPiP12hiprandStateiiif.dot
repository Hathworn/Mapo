digraph "CFG for '_Z12gpuCrossoverPiP12hiprandStateiiif' function" {
	label="CFG for '_Z12gpuCrossoverPiP12hiprandStateiiif' function";

	Node0x469a1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 0, i32 0, i32 0, i32 0\l  %17 = load i32, i32 addrspace(1)* %16, align 8, !amdgpu.noclobber !5\l  %18 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 0, i32 0, i32 0, i32 5, i64 0\l  %19 = load i32, i32 addrspace(1)* %18, align 8, !amdgpu.noclobber !5\l  %20 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 0, i32 0, i32 0, i32 5, i64 1\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !amdgpu.noclobber !5\l  %22 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 0, i32 0, i32 0, i32 5, i64 2\l  %23 = load i32, i32 addrspace(1)* %22, align 8, !amdgpu.noclobber !5\l  %24 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 0, i32 0, i32 0, i32 5, i64 3\l  %25 = load i32, i32 addrspace(1)* %24, align 4, !amdgpu.noclobber !5\l  %26 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 0, i32 0, i32 0, i32 5, i64 4\l  %27 = load i32, i32 addrspace(1)* %26, align 8, !amdgpu.noclobber !5\l  %28 = lshr i32 %19, 2\l  %29 = xor i32 %28, %19\l  %30 = shl i32 %27, 4\l  %31 = shl i32 %29, 1\l  %32 = xor i32 %31, %30\l  %33 = xor i32 %32, %29\l  %34 = xor i32 %33, %27\l  %35 = add i32 %17, 362437\l  store i32 %35, i32 addrspace(1)* %16, align 8\l  store i32 %21, i32 addrspace(1)* %18, align 8\l  store i32 %23, i32 addrspace(1)* %20, align 4\l  store i32 %25, i32 addrspace(1)* %22, align 8\l  store i32 %27, i32 addrspace(1)* %24, align 4\l  store i32 %34, i32 addrspace(1)* %26, align 8\l  %36 = sitofp i32 %2 to float\l  %37 = shl nsw i32 %15, 1\l  %38 = mul nsw i32 %37, %2\l  %39 = add nsw i32 %38, %2\l  %40 = add nsw i32 %39, %2\l  %41 = mul nsw i32 %3, %2\l  %42 = icmp slt i32 %40, %41\l  br i1 %42, label %43, label %72\l|{<s0>T|<s1>F}}"];
	Node0x469a1e0:s0 -> Node0x469c200;
	Node0x469a1e0:s1 -> Node0x469df30;
	Node0x469c200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%43:\l43:                                               \l  %44 = add i32 %34, %35\l  %45 = uitofp i32 %44 to float\l  %46 = fmul contract float %45, 0x3DF0000000000000\l  %47 = fadd contract float %46, 0x3DF0000000000000\l  %48 = fmul contract float %47, %36\l  %49 = fptosi float %48 to i32\l  %50 = icmp slt i32 %49, %2\l  br i1 %50, label %51, label %72\l|{<s0>T|<s1>F}}"];
	Node0x469c200:s0 -> Node0x469ee30;
	Node0x469c200:s1 -> Node0x469df30;
	Node0x469ee30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%51:\l51:                                               \l  %52 = add nsw i32 %38, %49\l  %53 = add nsw i32 %39, %49\l  %54 = sext i32 %52 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %54\l  %56 = sext i32 %53 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %56\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !7\l  br label %59\l}"];
	Node0x469ee30 -> Node0x469f450;
	Node0x469f450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi i32 [ %58, %51 ], [ %62, %59 ]\l  %61 = phi i32 [ %49, %51 ], [ %63, %59 ]\l  %62 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !7\l  store i32 %60, i32 addrspace(1)* %55, align 4, !tbaa !7\l  store i32 %62, i32 addrspace(1)* %57, align 4, !tbaa !7\l  %63 = add nsw i32 %61, 1\l  %64 = icmp slt i32 %63, %2\l  br i1 %64, label %59, label %65, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x469f450:s0 -> Node0x469f450;
	Node0x469f450:s1 -> Node0x469f600;
	Node0x469f600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%65:\l65:                                               \l  %66 = load i32, i32 addrspace(1)* %16, align 8\l  %67 = load i32, i32 addrspace(1)* %18, align 8\l  %68 = load i32, i32 addrspace(1)* %20, align 4\l  %69 = load i32, i32 addrspace(1)* %22, align 8\l  %70 = load i32, i32 addrspace(1)* %24, align 4\l  %71 = load i32, i32 addrspace(1)* %26, align 8\l  br label %72\l}"];
	Node0x469f600 -> Node0x469df30;
	Node0x469df30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%72:\l72:                                               \l  %73 = phi i32 [ %71, %65 ], [ %34, %43 ], [ %34, %6 ]\l  %74 = phi i32 [ %70, %65 ], [ %27, %43 ], [ %27, %6 ]\l  %75 = phi i32 [ %69, %65 ], [ %25, %43 ], [ %25, %6 ]\l  %76 = phi i32 [ %68, %65 ], [ %23, %43 ], [ %23, %6 ]\l  %77 = phi i32 [ %67, %65 ], [ %21, %43 ], [ %21, %6 ]\l  %78 = phi i32 [ %66, %65 ], [ %35, %43 ], [ %35, %6 ]\l  %79 = lshr i32 %77, 2\l  %80 = xor i32 %79, %77\l  %81 = shl i32 %73, 4\l  %82 = shl i32 %80, 1\l  %83 = xor i32 %82, %81\l  %84 = xor i32 %83, %80\l  %85 = xor i32 %84, %73\l  %86 = add i32 %78, 362437\l  %87 = add i32 %85, %86\l  %88 = uitofp i32 %87 to float\l  %89 = fmul contract float %88, 0x3DF0000000000000\l  %90 = fadd contract float %89, 0x3DF0000000000000\l  store i32 %86, i32 addrspace(1)* %16, align 8\l  store i32 %76, i32 addrspace(1)* %18, align 8\l  store i32 %75, i32 addrspace(1)* %20, align 4\l  store i32 %74, i32 addrspace(1)* %22, align 8\l  store i32 %73, i32 addrspace(1)* %24, align 4\l  store i32 %85, i32 addrspace(1)* %26, align 8\l  %91 = fmul contract float %90, 1.000000e+02\l  %92 = fptosi float %91 to i32\l  %93 = sitofp i32 %92 to float\l  %94 = fmul contract float %5, 1.000000e+02\l  %95 = fcmp contract ogt float %94, %93\l  br i1 %95, label %96, label %201\l|{<s0>T|<s1>F}}"];
	Node0x469df30:s0 -> Node0x46a1870;
	Node0x469df30:s1 -> Node0x46a18c0;
	Node0x46a1870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%96:\l96:                                               \l  %97 = lshr i32 %76, 2\l  %98 = xor i32 %97, %76\l  %99 = shl i32 %85, 4\l  %100 = shl i32 %98, 1\l  %101 = xor i32 %100, %99\l  %102 = xor i32 %101, %98\l  %103 = xor i32 %102, %85\l  %104 = add i32 %78, 724874\l  %105 = add i32 %103, %104\l  %106 = uitofp i32 %105 to float\l  %107 = fmul contract float %106, 0x3DF0000000000000\l  %108 = fadd contract float %107, 0x3DF0000000000000\l  store i32 %104, i32 addrspace(1)* %16, align 8\l  store i32 %75, i32 addrspace(1)* %18, align 8\l  store i32 %74, i32 addrspace(1)* %20, align 4\l  store i32 %73, i32 addrspace(1)* %22, align 8\l  store i32 %85, i32 addrspace(1)* %24, align 4\l  store i32 %103, i32 addrspace(1)* %26, align 8\l  %109 = sdiv i32 %2, 4\l  %110 = sitofp i32 %109 to float\l  %111 = fmul contract float %108, %110\l  %112 = fptosi float %111 to i32\l  %113 = icmp sgt i32 %112, 0\l  br i1 %113, label %114, label %201\l|{<s0>T|<s1>F}}"];
	Node0x46a1870:s0 -> Node0x46a2690;
	Node0x46a1870:s1 -> Node0x46a18c0;
	Node0x46a2690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%114:\l114:                                              \l  %115 = and i32 %112, 1\l  %116 = icmp eq i32 %112, 1\l  br i1 %116, label %173, label %117\l|{<s0>T|<s1>F}}"];
	Node0x46a2690:s0 -> Node0x46a28b0;
	Node0x46a2690:s1 -> Node0x46a2900;
	Node0x46a2900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%117:\l117:                                              \l  %118 = and i32 %112, -2\l  br label %119\l}"];
	Node0x46a2900 -> Node0x46a2b00;
	Node0x46a2b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%119:\l119:                                              \l  %120 = phi i32 [ 0, %117 ], [ %171, %119 ]\l  %121 = load i32, i32 addrspace(1)* %16, align 8\l  %122 = load i32, i32 addrspace(1)* %18, align 8\l  %123 = load i32, i32 addrspace(1)* %20, align 4\l  %124 = load i32, i32 addrspace(1)* %22, align 8\l  %125 = load i32, i32 addrspace(1)* %24, align 4\l  %126 = load i32, i32 addrspace(1)* %26, align 8\l  %127 = lshr i32 %122, 2\l  %128 = xor i32 %127, %122\l  %129 = shl i32 %126, 4\l  %130 = shl i32 %128, 1\l  %131 = xor i32 %130, %129\l  %132 = xor i32 %131, %128\l  %133 = xor i32 %132, %126\l  %134 = add i32 %121, 362437\l  %135 = add i32 %133, %134\l  %136 = uitofp i32 %135 to float\l  %137 = fmul contract float %136, 0x3DF0000000000000\l  %138 = fadd contract float %137, 0x3DF0000000000000\l  store i32 %134, i32 addrspace(1)* %16, align 8\l  store i32 %123, i32 addrspace(1)* %18, align 8\l  store i32 %124, i32 addrspace(1)* %20, align 4\l  store i32 %125, i32 addrspace(1)* %22, align 8\l  store i32 %126, i32 addrspace(1)* %24, align 4\l  store i32 %133, i32 addrspace(1)* %26, align 8\l  %139 = fmul contract float %138, %36\l  %140 = fptosi float %139 to i32\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %141\l  %143 = load i32, i32 addrspace(1)* %142, align 4, !tbaa !7\l  %144 = icmp ne i32 %143, 1\l  %145 = zext i1 %144 to i32\l  store i32 %145, i32 addrspace(1)* %142, align 4, !tbaa !7\l  %146 = load i32, i32 addrspace(1)* %16, align 8\l  %147 = load i32, i32 addrspace(1)* %18, align 8\l  %148 = load i32, i32 addrspace(1)* %20, align 4\l  %149 = load i32, i32 addrspace(1)* %22, align 8\l  %150 = load i32, i32 addrspace(1)* %24, align 4\l  %151 = load i32, i32 addrspace(1)* %26, align 8\l  %152 = lshr i32 %147, 2\l  %153 = xor i32 %152, %147\l  %154 = shl i32 %151, 4\l  %155 = shl i32 %153, 1\l  %156 = xor i32 %155, %154\l  %157 = xor i32 %156, %153\l  %158 = xor i32 %157, %151\l  %159 = add i32 %146, 362437\l  %160 = add i32 %158, %159\l  %161 = uitofp i32 %160 to float\l  %162 = fmul contract float %161, 0x3DF0000000000000\l  %163 = fadd contract float %162, 0x3DF0000000000000\l  store i32 %159, i32 addrspace(1)* %16, align 8\l  store i32 %148, i32 addrspace(1)* %18, align 8\l  store i32 %149, i32 addrspace(1)* %20, align 4\l  store i32 %150, i32 addrspace(1)* %22, align 8\l  store i32 %151, i32 addrspace(1)* %24, align 4\l  store i32 %158, i32 addrspace(1)* %26, align 8\l  %164 = fmul contract float %163, %36\l  %165 = fptosi float %164 to i32\l  %166 = sext i32 %165 to i64\l  %167 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %166\l  %168 = load i32, i32 addrspace(1)* %167, align 4, !tbaa !7\l  %169 = icmp ne i32 %168, 1\l  %170 = zext i1 %169 to i32\l  store i32 %170, i32 addrspace(1)* %167, align 4, !tbaa !7\l  %171 = add i32 %120, 2\l  %172 = icmp eq i32 %171, %118\l  br i1 %172, label %173, label %119, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x46a2b00:s0 -> Node0x46a28b0;
	Node0x46a2b00:s1 -> Node0x46a2b00;
	Node0x46a28b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%173:\l173:                                              \l  %174 = icmp eq i32 %115, 0\l  br i1 %174, label %201, label %175\l|{<s0>T|<s1>F}}"];
	Node0x46a28b0:s0 -> Node0x46a18c0;
	Node0x46a28b0:s1 -> Node0x46a55b0;
	Node0x46a55b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%175:\l175:                                              \l  %176 = load i32, i32 addrspace(1)* %16, align 8\l  %177 = load i32, i32 addrspace(1)* %18, align 8\l  %178 = load i32, i32 addrspace(1)* %20, align 4\l  %179 = load i32, i32 addrspace(1)* %22, align 8\l  %180 = load i32, i32 addrspace(1)* %24, align 4\l  %181 = load i32, i32 addrspace(1)* %26, align 8\l  %182 = lshr i32 %177, 2\l  %183 = xor i32 %182, %177\l  %184 = shl i32 %181, 4\l  %185 = shl i32 %183, 1\l  %186 = xor i32 %185, %184\l  %187 = xor i32 %186, %183\l  %188 = xor i32 %187, %181\l  %189 = add i32 %176, 362437\l  %190 = add i32 %188, %189\l  %191 = uitofp i32 %190 to float\l  %192 = fmul contract float %191, 0x3DF0000000000000\l  %193 = fadd contract float %192, 0x3DF0000000000000\l  store i32 %189, i32 addrspace(1)* %16, align 8\l  store i32 %178, i32 addrspace(1)* %18, align 8\l  store i32 %179, i32 addrspace(1)* %20, align 4\l  store i32 %180, i32 addrspace(1)* %22, align 8\l  store i32 %181, i32 addrspace(1)* %24, align 4\l  store i32 %188, i32 addrspace(1)* %26, align 8\l  %194 = fmul contract float %193, %36\l  %195 = fptosi float %194 to i32\l  %196 = sext i32 %195 to i64\l  %197 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %196\l  %198 = load i32, i32 addrspace(1)* %197, align 4, !tbaa !7\l  %199 = icmp ne i32 %198, 1\l  %200 = zext i1 %199 to i32\l  store i32 %200, i32 addrspace(1)* %197, align 4, !tbaa !7\l  br label %201\l}"];
	Node0x46a55b0 -> Node0x46a18c0;
	Node0x46a18c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%201:\l201:                                              \l  ret void\l}"];
}
