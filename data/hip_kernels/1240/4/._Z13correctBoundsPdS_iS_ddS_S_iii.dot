digraph "CFG for '_Z13correctBoundsPdS_iS_ddS_S_iii' function" {
	label="CFG for '_Z13correctBoundsPdS_iS_ddS_S_iii' function";

	Node0x63da020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %19 = bitcast i8 addrspace(4)* %18 to i32 addrspace(4)*\l  %20 = load i32, i32 addrspace(4)* %19, align 4, !tbaa !6\l  %21 = mul i32 %12, %17\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %23 = add i32 %21, %22\l  %24 = udiv i32 %20, %17\l  %25 = mul i32 %24, %17\l  %26 = icmp ugt i32 %20, %25\l  %27 = zext i1 %26 to i32\l  %28 = add i32 %24, %27\l  %29 = mul i32 %28, %17\l  %30 = icmp slt i32 %23, %2\l  br i1 %30, label %31, label %33\l|{<s0>T|<s1>F}}"];
	Node0x63da020:s0 -> Node0x63dd170;
	Node0x63da020:s1 -> Node0x63dd200;
	Node0x63dd170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %10, %2\l  br label %34\l}"];
	Node0x63dd170 -> Node0x63dc530;
	Node0x63dd200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%33:\l33:                                               \l  ret void\l}"];
	Node0x63dc530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i32 [ %23, %31 ], [ %62, %51 ]\l  %36 = mul nsw i32 %35, %8\l  %37 = add nsw i32 %36, %9\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds double, double addrspace(1)* %7, i64 %38\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !16\l  %41 = sext i32 %35 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %0, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !16\l  %44 = fcmp contract ogt double %40, %43\l  br i1 %44, label %49, label %45\l|{<s0>T|<s1>F}}"];
	Node0x63dc530:s0 -> Node0x63de310;
	Node0x63dc530:s1 -> Node0x63de3a0;
	Node0x63de3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%45:\l45:                                               \l  %46 = getelementptr inbounds double, double addrspace(1)* %1, i64 %41\l  %47 = load double, double addrspace(1)* %46, align 8, !tbaa !16\l  %48 = fcmp contract olt double %40, %47\l  br i1 %48, label %49, label %51\l|{<s0>T|<s1>F}}"];
	Node0x63de3a0:s0 -> Node0x63de310;
	Node0x63de3a0:s1 -> Node0x63dd5e0;
	Node0x63de310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%49:\l49:                                               \l  %50 = phi double [ %43, %34 ], [ %47, %45 ]\l  store double %50, double addrspace(1)* %39, align 8, !tbaa !16\l  br label %51\l}"];
	Node0x63de310 -> Node0x63dd5e0;
	Node0x63dd5e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi double [ %40, %45 ], [ %50, %49 ]\l  %53 = add nsw i32 %35, %32\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds double, double addrspace(1)* %3, i64 %54\l  store double %52, double addrspace(1)* %55, align 8, !tbaa !16\l  %56 = getelementptr inbounds double, double addrspace(1)* %6, i64 %54\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !16\l  %58 = fmul contract double %57, %4\l  %59 = load double, double addrspace(1)* %39, align 8, !tbaa !16\l  %60 = fmul contract double %59, %5\l  %61 = fadd contract double %58, %60\l  store double %61, double addrspace(1)* %56, align 8, !tbaa !16\l  %62 = add nsw i32 %35, %29\l  %63 = icmp slt i32 %62, %2\l  br i1 %63, label %34, label %33, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x63dd5e0:s0 -> Node0x63dc530;
	Node0x63dd5e0:s1 -> Node0x63dd200;
}
