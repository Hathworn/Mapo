digraph "CFG for '_Z15reprojectPoint2PdiiS_S_iii' function" {
	label="CFG for '_Z15reprojectPoint2PdiiS_S_iii' function";

	Node0x52c0610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !6\l  %18 = mul i32 %9, %14\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %20 = add i32 %18, %19\l  %21 = udiv i32 %17, %14\l  %22 = mul i32 %21, %14\l  %23 = icmp ugt i32 %17, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %14\l  %27 = icmp slt i32 %20, %1\l  br i1 %27, label %28, label %38\l|{<s0>T|<s1>F}}"];
	Node0x52c0610:s0 -> Node0x52c2b90;
	Node0x52c0610:s1 -> Node0x52c2c20;
	Node0x52c2b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%28:\l28:                                               \l  %29 = sub nsw i32 %1, %2\l  %30 = icmp sgt i32 %29, 0\l  %31 = mul nsw i32 %7, %1\l  %32 = xor i32 %2, -1\l  %33 = add i32 %32, %1\l  %34 = and i32 %29, 3\l  %35 = icmp ult i32 %33, 3\l  %36 = and i32 %29, -4\l  %37 = icmp eq i32 %34, 0\l  br label %39\l}"];
	Node0x52c2b90 -> Node0x52c3420;
	Node0x52c2c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%38:\l38:                                               \l  ret void\l}"];
	Node0x52c3420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%39:\l39:                                               \l  %40 = phi i32 [ %20, %28 ], [ %68, %67 ]\l  %41 = mul nsw i32 %40, %5\l  %42 = add nsw i32 %41, %6\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds double, double addrspace(1)* %4, i64 %43\l  store double 0.000000e+00, double addrspace(1)* %44, align 8, !tbaa !16\l  br i1 %30, label %45, label %67\l|{<s0>T|<s1>F}}"];
	Node0x52c3420:s0 -> Node0x52c44e0;
	Node0x52c3420:s1 -> Node0x52c3560;
	Node0x52c44e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%45:\l45:                                               \l  br i1 %35, label %46, label %70\l|{<s0>T|<s1>F}}"];
	Node0x52c44e0:s0 -> Node0x52c4620;
	Node0x52c44e0:s1 -> Node0x52c4670;
	Node0x52c4620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%46:\l46:                                               \l  %47 = phi double [ 0.000000e+00, %45 ], [ %120, %70 ]\l  %48 = phi i32 [ 0, %45 ], [ %121, %70 ]\l  br i1 %37, label %67, label %49\l|{<s0>T|<s1>F}}"];
	Node0x52c4620:s0 -> Node0x52c3560;
	Node0x52c4620:s1 -> Node0x52c4980;
	Node0x52c4980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = phi double [ %63, %49 ], [ %47, %46 ]\l  %51 = phi i32 [ %64, %49 ], [ %48, %46 ]\l  %52 = phi i32 [ %65, %49 ], [ 0, %46 ]\l  %53 = mul nsw i32 %51, %1\l  %54 = add nsw i32 %53, %40\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds double, double addrspace(1)* %0, i64 %55\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !16\l  %58 = add nsw i32 %51, %31\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds double, double addrspace(1)* %3, i64 %59\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !16\l  %62 = fmul contract double %57, %61\l  %63 = fadd contract double %50, %62\l  store double %63, double addrspace(1)* %44, align 8, !tbaa !16\l  %64 = add nuw nsw i32 %51, 1\l  %65 = add i32 %52, 1\l  %66 = icmp eq i32 %65, %34\l  br i1 %66, label %67, label %49, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x52c4980:s0 -> Node0x52c3560;
	Node0x52c4980:s1 -> Node0x52c4980;
	Node0x52c3560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%67:\l67:                                               \l  %68 = add nsw i32 %40, %26\l  %69 = icmp slt i32 %68, %1\l  br i1 %69, label %39, label %38, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x52c3560:s0 -> Node0x52c3420;
	Node0x52c3560:s1 -> Node0x52c2c20;
	Node0x52c4670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%70:\l70:                                               \l  %71 = phi double [ %120, %70 ], [ 0.000000e+00, %45 ]\l  %72 = phi i32 [ %121, %70 ], [ 0, %45 ]\l  %73 = phi i32 [ %122, %70 ], [ 0, %45 ]\l  %74 = mul nsw i32 %72, %1\l  %75 = add nsw i32 %74, %40\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds double, double addrspace(1)* %0, i64 %76\l  %78 = load double, double addrspace(1)* %77, align 8, !tbaa !16\l  %79 = add nsw i32 %72, %31\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds double, double addrspace(1)* %3, i64 %80\l  %82 = load double, double addrspace(1)* %81, align 8, !tbaa !16\l  %83 = fmul contract double %78, %82\l  %84 = fadd contract double %71, %83\l  store double %84, double addrspace(1)* %44, align 8, !tbaa !16\l  %85 = or i32 %72, 1\l  %86 = mul nsw i32 %85, %1\l  %87 = add nsw i32 %86, %40\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds double, double addrspace(1)* %0, i64 %88\l  %90 = load double, double addrspace(1)* %89, align 8, !tbaa !16\l  %91 = add nsw i32 %85, %31\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds double, double addrspace(1)* %3, i64 %92\l  %94 = load double, double addrspace(1)* %93, align 8, !tbaa !16\l  %95 = fmul contract double %90, %94\l  %96 = fadd contract double %84, %95\l  store double %96, double addrspace(1)* %44, align 8, !tbaa !16\l  %97 = or i32 %72, 2\l  %98 = mul nsw i32 %97, %1\l  %99 = add nsw i32 %98, %40\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds double, double addrspace(1)* %0, i64 %100\l  %102 = load double, double addrspace(1)* %101, align 8, !tbaa !16\l  %103 = add nsw i32 %97, %31\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds double, double addrspace(1)* %3, i64 %104\l  %106 = load double, double addrspace(1)* %105, align 8, !tbaa !16\l  %107 = fmul contract double %102, %106\l  %108 = fadd contract double %96, %107\l  store double %108, double addrspace(1)* %44, align 8, !tbaa !16\l  %109 = or i32 %72, 3\l  %110 = mul nsw i32 %109, %1\l  %111 = add nsw i32 %110, %40\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds double, double addrspace(1)* %0, i64 %112\l  %114 = load double, double addrspace(1)* %113, align 8, !tbaa !16\l  %115 = add nsw i32 %109, %31\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds double, double addrspace(1)* %3, i64 %116\l  %118 = load double, double addrspace(1)* %117, align 8, !tbaa !16\l  %119 = fmul contract double %114, %118\l  %120 = fadd contract double %108, %119\l  store double %120, double addrspace(1)* %44, align 8, !tbaa !16\l  %121 = add nuw nsw i32 %72, 4\l  %122 = add i32 %73, 4\l  %123 = icmp eq i32 %122, %36\l  br i1 %123, label %46, label %70, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x52c4670:s0 -> Node0x52c4620;
	Node0x52c4670:s1 -> Node0x52c4670;
}
