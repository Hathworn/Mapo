digraph "CFG for '_Z12subgradinputPfS_S_iiiiiii' function" {
	label="CFG for '_Z12subgradinputPfS_S_iiiiiii' function";

	Node0x590a380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%10:\l  %11 = sub nsw i32 %5, %7\l  %12 = sdiv i32 %11, %9\l  %13 = add nsw i32 %12, 1\l  %14 = sub nsw i32 %4, %6\l  %15 = sdiv i32 %14, %8\l  %16 = add nsw i32 %15, 1\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = urem i32 %17, %3\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %20 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %21 = getelementptr i8, i8 addrspace(4)* %20, i64 4\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 4, !range !5, !invariant.load !6\l  %24 = zext i16 %23 to i32\l  %25 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %26 = getelementptr i8, i8 addrspace(4)* %20, i64 6\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 2, !range !5, !invariant.load !6\l  %29 = zext i16 %28 to i32\l  %30 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 16\l  %31 = bitcast i8 addrspace(4)* %30 to i32 addrspace(4)*\l  %32 = load i32, i32 addrspace(4)* %31, align 8, !tbaa !7\l  %33 = mul i32 %25, %29\l  %34 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %35 = add i32 %33, %34\l  %36 = udiv i32 %32, %29\l  %37 = mul i32 %36, %29\l  %38 = icmp ugt i32 %32, %37\l  %39 = zext i1 %38 to i32\l  %40 = add i32 %36, %39\l  %41 = mul i32 %40, %29\l  %42 = mul nsw i32 %13, %17\l  %43 = mul nsw i32 %42, %16\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = mul i32 %17, %4\l  %47 = mul i32 %46, %5\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  %50 = sext i32 %18 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %53 = icmp sgt i32 %35, %15\l  br i1 %53, label %154, label %54\l|{<s0>T|<s1>F}}"];
	Node0x590a380:s0 -> Node0x590f9d0;
	Node0x590a380:s1 -> Node0x590fa60;
	Node0x590fa60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%54:\l54:                                               \l  %55 = icmp sgt i32 %19, %12\l  %56 = mul i32 %8, %5\l  %57 = icmp sgt i32 %6, 0\l  %58 = icmp sgt i32 %7, 0\l  %59 = sext i32 %5 to i64\l  %60 = and i32 %7, 7\l  %61 = icmp ult i32 %7, 8\l  %62 = and i32 %7, -8\l  %63 = icmp eq i32 %60, 0\l  br label %64\l}"];
	Node0x590fa60 -> Node0x5910120;
	Node0x5910120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%64:\l64:                                               \l  %65 = phi i32 [ %35, %54 ], [ %152, %151 ]\l  br i1 %55, label %151, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5910120:s0 -> Node0x590e460;
	Node0x5910120:s1 -> Node0x590e5a0;
	Node0x590e5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%66:\l66:                                               \l  %67 = mul i32 %56, %65\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %49, i64 %68\l  %70 = mul nsw i32 %65, %13\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %45, i64 %71\l  br label %73\l}"];
	Node0x590e5a0 -> Node0x59109e0;
	Node0x59109e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%73:\l73:                                               \l  %74 = phi i32 [ %19, %66 ], [ %149, %148 ]\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %72, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !16\l  %78 = fmul contract float %52, %77\l  br i1 %57, label %79, label %148\l|{<s0>T|<s1>F}}"];
	Node0x59109e0:s0 -> Node0x5911430;
	Node0x59109e0:s1 -> Node0x5910ad0;
	Node0x5911430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%79:\l79:                                               \l  %80 = mul nsw i32 %74, %9\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %69, i64 %81\l  br label %83\l}"];
	Node0x5911430 -> Node0x5911710;
	Node0x5911710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%83:\l83:                                               \l  %84 = phi i32 [ %146, %144 ], [ 0, %79 ]\l  %85 = phi float addrspace(1)* [ %145, %144 ], [ %82, %79 ]\l  br i1 %58, label %86, label %144\l|{<s0>T|<s1>F}}"];
	Node0x5911710:s0 -> Node0x5911a60;
	Node0x5911710:s1 -> Node0x5911800;
	Node0x5911a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%86:\l86:                                               \l  br i1 %61, label %132, label %87\l|{<s0>T|<s1>F}}"];
	Node0x5911a60:s0 -> Node0x5911ba0;
	Node0x5911a60:s1 -> Node0x5911bf0;
	Node0x5911bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%87:\l87:                                               \l  %88 = phi i32 [ %129, %87 ], [ 0, %86 ]\l  %89 = phi i32 [ %130, %87 ], [ 0, %86 ]\l  %90 = zext i32 %88 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %85, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !16\l  %93 = fadd contract float %78, %92\l  store float %93, float addrspace(1)* %91, align 4, !tbaa !16\l  %94 = or i32 %88, 1\l  %95 = zext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %85, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !16\l  %98 = fadd contract float %78, %97\l  store float %98, float addrspace(1)* %96, align 4, !tbaa !16\l  %99 = or i32 %88, 2\l  %100 = zext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %85, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !16\l  %103 = fadd contract float %78, %102\l  store float %103, float addrspace(1)* %101, align 4, !tbaa !16\l  %104 = or i32 %88, 3\l  %105 = zext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %85, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !16\l  %108 = fadd contract float %78, %107\l  store float %108, float addrspace(1)* %106, align 4, !tbaa !16\l  %109 = or i32 %88, 4\l  %110 = zext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %85, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !16\l  %113 = fadd contract float %78, %112\l  store float %113, float addrspace(1)* %111, align 4, !tbaa !16\l  %114 = or i32 %88, 5\l  %115 = zext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %85, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !16\l  %118 = fadd contract float %78, %117\l  store float %118, float addrspace(1)* %116, align 4, !tbaa !16\l  %119 = or i32 %88, 6\l  %120 = zext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %85, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !16\l  %123 = fadd contract float %78, %122\l  store float %123, float addrspace(1)* %121, align 4, !tbaa !16\l  %124 = or i32 %88, 7\l  %125 = zext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %85, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !16\l  %128 = fadd contract float %78, %127\l  store float %128, float addrspace(1)* %126, align 4, !tbaa !16\l  %129 = add nuw nsw i32 %88, 8\l  %130 = add i32 %89, 8\l  %131 = icmp eq i32 %130, %62\l  br i1 %131, label %132, label %87, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5911bf0:s0 -> Node0x5911ba0;
	Node0x5911bf0:s1 -> Node0x5911bf0;
	Node0x5911ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%132:\l132:                                              \l  %133 = phi i32 [ 0, %86 ], [ %129, %87 ]\l  br i1 %63, label %144, label %134\l|{<s0>T|<s1>F}}"];
	Node0x5911ba0:s0 -> Node0x5911800;
	Node0x5911ba0:s1 -> Node0x5914120;
	Node0x5914120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%134:\l134:                                              \l  %135 = phi i32 [ %141, %134 ], [ %133, %132 ]\l  %136 = phi i32 [ %142, %134 ], [ 0, %132 ]\l  %137 = zext i32 %135 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %85, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !16\l  %140 = fadd contract float %78, %139\l  store float %140, float addrspace(1)* %138, align 4, !tbaa !16\l  %141 = add nuw nsw i32 %135, 1\l  %142 = add i32 %136, 1\l  %143 = icmp eq i32 %142, %60\l  br i1 %143, label %144, label %134, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5914120:s0 -> Node0x5911800;
	Node0x5914120:s1 -> Node0x5914120;
	Node0x5911800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%144:\l144:                                              \l  %145 = getelementptr inbounds float, float addrspace(1)* %85, i64 %59\l  %146 = add nuw nsw i32 %84, 1\l  %147 = icmp eq i32 %146, %6\l  br i1 %147, label %148, label %83, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5911800:s0 -> Node0x5910ad0;
	Node0x5911800:s1 -> Node0x5911710;
	Node0x5910ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%148:\l148:                                              \l  %149 = add nuw nsw i32 %74, %24\l  %150 = icmp sgt i32 %149, %12\l  br i1 %150, label %151, label %73, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x5910ad0:s0 -> Node0x590e460;
	Node0x5910ad0:s1 -> Node0x59109e0;
	Node0x590e460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%151:\l151:                                              \l  %152 = add nsw i32 %65, %41\l  %153 = icmp sgt i32 %152, %15\l  br i1 %153, label %154, label %64, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x590e460:s0 -> Node0x590f9d0;
	Node0x590e460:s1 -> Node0x5910120;
	Node0x590f9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%154:\l154:                                              \l  ret void\l}"];
}
