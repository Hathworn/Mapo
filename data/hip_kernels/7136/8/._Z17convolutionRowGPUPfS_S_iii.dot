digraph "CFG for '_Z17convolutionRowGPUPfS_S_iii' function" {
	label="CFG for '_Z17convolutionRowGPUPfS_S_iii' function";

	Node0x593caa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %8, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %15 = add i32 %14, %5\l  %16 = add i32 %15, %13\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %24 = add i32 %23, %5\l  %25 = add i32 %24, %22\l  %26 = shl i32 %5, 1\l  %27 = add nsw i32 %26, %3\l  %28 = icmp slt i32 %5, 0\l  br i1 %28, label %29, label %32\l|{<s0>T|<s1>F}}"];
	Node0x593caa0:s0 -> Node0x5940640;
	Node0x593caa0:s1 -> Node0x59406d0;
	Node0x5940640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %16, %27\l  %31 = add nsw i32 %30, %25\l  br label %149\l}"];
	Node0x5940640 -> Node0x5940930;
	Node0x59406d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%32:\l32:                                               \l  %33 = sub nsw i32 0, %5\l  %34 = mul nsw i32 %16, %27\l  %35 = add i32 %34, %25\l  %36 = add nuw nsw i32 %26, 1\l  %37 = and i32 %36, 7\l  br label %38\l}"];
	Node0x59406d0 -> Node0x593ea30;
	Node0x593ea30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i32 [ %33, %32 ], [ %52, %38 ]\l  %40 = phi float [ 0.000000e+00, %32 ], [ %51, %38 ]\l  %41 = phi i32 [ 0, %32 ], [ %53, %38 ]\l  %42 = add i32 %35, %39\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %46 = sub nsw i32 %5, %39\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %50 = fmul contract float %45, %49\l  %51 = fadd contract float %40, %50\l  %52 = add i32 %39, 1\l  %53 = add i32 %41, 1\l  %54 = icmp eq i32 %53, %37\l  br i1 %54, label %55, label %38, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x593ea30:s0 -> Node0x5942b50;
	Node0x593ea30:s1 -> Node0x593ea30;
	Node0x5942b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%55:\l55:                                               \l  %56 = icmp ult i32 %26, 7\l  br i1 %56, label %149, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5942b50:s0 -> Node0x5940930;
	Node0x5942b50:s1 -> Node0x5942da0;
	Node0x5942da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%57:\l57:                                               \l  %58 = phi i32 [ %147, %57 ], [ %52, %55 ]\l  %59 = phi float [ %146, %57 ], [ %51, %55 ]\l  %60 = add i32 %35, %58\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %64 = sub nsw i32 %5, %58\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %2, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %68 = fmul contract float %63, %67\l  %69 = fadd contract float %59, %68\l  %70 = add i32 %58, 1\l  %71 = add i32 %35, %70\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %1, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %75 = sub nsw i32 %5, %70\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %2, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %79 = fmul contract float %74, %78\l  %80 = fadd contract float %69, %79\l  %81 = add i32 %58, 2\l  %82 = add i32 %35, %81\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %1, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %86 = sub nsw i32 %5, %81\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %2, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %90 = fmul contract float %85, %89\l  %91 = fadd contract float %80, %90\l  %92 = add i32 %58, 3\l  %93 = add i32 %35, %92\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %97 = sub nsw i32 %5, %92\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %2, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %101 = fmul contract float %96, %100\l  %102 = fadd contract float %91, %101\l  %103 = add i32 %58, 4\l  %104 = add i32 %35, %103\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %1, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %108 = sub nsw i32 %5, %103\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %2, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %112 = fmul contract float %107, %111\l  %113 = fadd contract float %102, %112\l  %114 = add i32 %58, 5\l  %115 = add i32 %35, %114\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %1, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %119 = sub nsw i32 %5, %114\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %2, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %123 = fmul contract float %118, %122\l  %124 = fadd contract float %113, %123\l  %125 = add i32 %58, 6\l  %126 = add i32 %35, %125\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds float, float addrspace(1)* %1, i64 %127\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %130 = sub nsw i32 %5, %125\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %2, i64 %131\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %134 = fmul contract float %129, %133\l  %135 = fadd contract float %124, %134\l  %136 = add i32 %58, 7\l  %137 = add i32 %35, %136\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %1, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %141 = sub nsw i32 %5, %136\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %2, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %145 = fmul contract float %140, %144\l  %146 = fadd contract float %135, %145\l  %147 = add i32 %58, 8\l  %148 = icmp eq i32 %136, %5\l  br i1 %148, label %149, label %57, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5942da0:s0 -> Node0x5940930;
	Node0x5942da0:s1 -> Node0x5942da0;
	Node0x5940930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%149:\l149:                                              \l  %150 = phi i32 [ %31, %29 ], [ %35, %57 ], [ %35, %55 ]\l  %151 = phi float [ 0.000000e+00, %29 ], [ %51, %55 ], [ %146, %57 ]\l  %152 = sext i32 %150 to i64\l  %153 = getelementptr inbounds float, float addrspace(1)* %0, i64 %152\l  store float %151, float addrspace(1)* %153, align 4, !tbaa !7\l  ret void\l}"];
}
