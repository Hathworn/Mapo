digraph "CFG for '_Z20convolutionColumnGPUPfS_S_iii' function" {
	label="CFG for '_Z20convolutionColumnGPUPfS_S_iii' function";

	Node0x4635bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %8, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %15 = add i32 %14, %5\l  %16 = add i32 %15, %13\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %24 = add i32 %23, %5\l  %25 = add i32 %24, %22\l  %26 = shl i32 %5, 1\l  %27 = add nsw i32 %26, %3\l  %28 = icmp slt i32 %5, 0\l  br i1 %28, label %162, label %29\l|{<s0>T|<s1>F}}"];
	Node0x4635bf0:s0 -> Node0x46397d0;
	Node0x4635bf0:s1 -> Node0x4639860;
	Node0x4639860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%29:\l29:                                               \l  %30 = sub nsw i32 0, %5\l  %31 = add nuw nsw i32 %26, 1\l  %32 = and i32 %31, 7\l  br label %33\l}"];
	Node0x4639860 -> Node0x4637b00;
	Node0x4637b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ %49, %33 ], [ %30, %29 ]\l  %35 = phi float [ %48, %33 ], [ 0.000000e+00, %29 ]\l  %36 = phi i32 [ %50, %33 ], [ 0, %29 ]\l  %37 = add nsw i32 %34, %16\l  %38 = mul nsw i32 %37, %27\l  %39 = add nsw i32 %38, %25\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = sub nsw i32 %5, %34\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %2, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = fmul contract float %42, %46\l  %48 = fadd contract float %35, %47\l  %49 = add i32 %34, 1\l  %50 = add i32 %36, 1\l  %51 = icmp eq i32 %50, %32\l  br i1 %51, label %52, label %33, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4637b00:s0 -> Node0x463bb20;
	Node0x4637b00:s1 -> Node0x4637b00;
	Node0x463bb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%52:\l52:                                               \l  %53 = icmp ult i32 %26, 7\l  br i1 %53, label %162, label %54\l|{<s0>T|<s1>F}}"];
	Node0x463bb20:s0 -> Node0x46397d0;
	Node0x463bb20:s1 -> Node0x463bd70;
	Node0x463bd70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%54:\l54:                                               \l  %55 = phi i32 [ %160, %54 ], [ %49, %52 ]\l  %56 = phi float [ %159, %54 ], [ %48, %52 ]\l  %57 = add nsw i32 %55, %16\l  %58 = mul nsw i32 %57, %27\l  %59 = add nsw i32 %58, %25\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = sub nsw i32 %5, %55\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %2, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %67 = fmul contract float %62, %66\l  %68 = fadd contract float %56, %67\l  %69 = add i32 %55, 1\l  %70 = add nsw i32 %69, %16\l  %71 = mul nsw i32 %70, %27\l  %72 = add nsw i32 %71, %25\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %76 = sub nsw i32 %5, %69\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %2, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %80 = fmul contract float %75, %79\l  %81 = fadd contract float %68, %80\l  %82 = add i32 %55, 2\l  %83 = add nsw i32 %82, %16\l  %84 = mul nsw i32 %83, %27\l  %85 = add nsw i32 %84, %25\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %89 = sub nsw i32 %5, %82\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %2, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %93 = fmul contract float %88, %92\l  %94 = fadd contract float %81, %93\l  %95 = add i32 %55, 3\l  %96 = add nsw i32 %95, %16\l  %97 = mul nsw i32 %96, %27\l  %98 = add nsw i32 %97, %25\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %1, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %102 = sub nsw i32 %5, %95\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %2, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %106 = fmul contract float %101, %105\l  %107 = fadd contract float %94, %106\l  %108 = add i32 %55, 4\l  %109 = add nsw i32 %108, %16\l  %110 = mul nsw i32 %109, %27\l  %111 = add nsw i32 %110, %25\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %1, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %115 = sub nsw i32 %5, %108\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %2, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %119 = fmul contract float %114, %118\l  %120 = fadd contract float %107, %119\l  %121 = add i32 %55, 5\l  %122 = add nsw i32 %121, %16\l  %123 = mul nsw i32 %122, %27\l  %124 = add nsw i32 %123, %25\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %1, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %128 = sub nsw i32 %5, %121\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %2, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %132 = fmul contract float %127, %131\l  %133 = fadd contract float %120, %132\l  %134 = add i32 %55, 6\l  %135 = add nsw i32 %134, %16\l  %136 = mul nsw i32 %135, %27\l  %137 = add nsw i32 %136, %25\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %1, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %141 = sub nsw i32 %5, %134\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %2, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %145 = fmul contract float %140, %144\l  %146 = fadd contract float %133, %145\l  %147 = add i32 %55, 7\l  %148 = add nsw i32 %147, %16\l  %149 = mul nsw i32 %148, %27\l  %150 = add nsw i32 %149, %25\l  %151 = sext i32 %150 to i64\l  %152 = getelementptr inbounds float, float addrspace(1)* %1, i64 %151\l  %153 = load float, float addrspace(1)* %152, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %154 = sub nsw i32 %5, %147\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds float, float addrspace(1)* %2, i64 %155\l  %157 = load float, float addrspace(1)* %156, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %158 = fmul contract float %153, %157\l  %159 = fadd contract float %146, %158\l  %160 = add i32 %55, 8\l  %161 = icmp eq i32 %147, %5\l  br i1 %161, label %162, label %54, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x463bd70:s0 -> Node0x46397d0;
	Node0x463bd70:s1 -> Node0x463bd70;
	Node0x46397d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%162:\l162:                                              \l  %163 = phi float [ 0.000000e+00, %6 ], [ %48, %52 ], [ %159, %54 ]\l  %164 = mul nsw i32 %16, %27\l  %165 = add nsw i32 %164, %25\l  %166 = sext i32 %165 to i64\l  %167 = getelementptr inbounds float, float addrspace(1)* %0, i64 %166\l  store float %163, float addrspace(1)* %167, align 4, !tbaa !7\l  ret void\l}"];
}
