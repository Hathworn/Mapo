digraph "CFG for '_Z16BitonicMergeSortPfS_i' function" {
	label="CFG for '_Z16BitonicMergeSortPfS_i' function";

	Node0x63ed580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = add i32 %11, %4\l  %13 = sitofp i32 %2 to double\l  %14 = tail call double @llvm.amdgcn.frexp.mant.f64(double %13)\l  %15 = fcmp olt double %14, 0x3FE5555555555555\l  %16 = zext i1 %15 to i32\l  %17 = tail call double @llvm.amdgcn.ldexp.f64(double %14, i32 %16)\l  %18 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %13)\l  %19 = sub nsw i32 %18, %16\l  %20 = fadd double %17, -1.000000e+00\l  %21 = fadd double %17, 1.000000e+00\l  %22 = fadd double %21, -1.000000e+00\l  %23 = fsub double %17, %22\l  %24 = tail call double @llvm.amdgcn.rcp.f64(double %21)\l  %25 = fneg double %21\l  %26 = tail call double @llvm.fma.f64(double %25, double %24, double\l... 1.000000e+00)\l  %27 = tail call double @llvm.fma.f64(double %26, double %24, double %24)\l  %28 = tail call double @llvm.fma.f64(double %25, double %27, double\l... 1.000000e+00)\l  %29 = tail call double @llvm.fma.f64(double %28, double %27, double %27)\l  %30 = fmul double %20, %29\l  %31 = fmul double %21, %30\l  %32 = fneg double %31\l  %33 = tail call double @llvm.fma.f64(double %30, double %21, double %32)\l  %34 = tail call double @llvm.fma.f64(double %30, double %23, double %33)\l  %35 = fadd double %31, %34\l  %36 = fsub double %35, %31\l  %37 = fsub double %34, %36\l  %38 = fsub double %20, %35\l  %39 = fsub double %20, %38\l  %40 = fsub double %39, %35\l  %41 = fsub double %40, %37\l  %42 = fadd double %38, %41\l  %43 = fmul double %29, %42\l  %44 = fadd double %30, %43\l  %45 = fsub double %44, %30\l  %46 = fsub double %43, %45\l  %47 = fmul double %44, %44\l  %48 = tail call double @llvm.fma.f64(double %47, double 0x3FC3AB76BF559E2B,\l... double 0x3FC385386B47B09A)\l  %49 = tail call double @llvm.fma.f64(double %47, double %48, double\l... 0x3FC7474DD7F4DF2E)\l  %50 = tail call double @llvm.fma.f64(double %47, double %49, double\l... 0x3FCC71C016291751)\l  %51 = tail call double @llvm.fma.f64(double %47, double %50, double\l... 0x3FD249249B27ACF1)\l  %52 = tail call double @llvm.fma.f64(double %47, double %51, double\l... 0x3FD99999998EF7B6)\l  %53 = tail call double @llvm.fma.f64(double %47, double %52, double\l... 0x3FE5555555555780)\l  %54 = tail call double @llvm.amdgcn.ldexp.f64(double %44, i32 1)\l  %55 = tail call double @llvm.amdgcn.ldexp.f64(double %46, i32 1)\l  %56 = fmul double %44, %47\l  %57 = fmul double %56, %53\l  %58 = fadd double %54, %57\l  %59 = fsub double %58, %54\l  %60 = fsub double %57, %59\l  %61 = fadd double %55, %60\l  %62 = fadd double %58, %61\l  %63 = fsub double %62, %58\l  %64 = fsub double %61, %63\l  %65 = sitofp i32 %19 to double\l  %66 = fmul double %62, 0x3FF71547652B82FE\l  %67 = fneg double %66\l  %68 = tail call double @llvm.fma.f64(double %62, double 0x3FF71547652B82FE,\l... double %67)\l  %69 = tail call double @llvm.fma.f64(double %64, double 0x3FF71547652B82FE,\l... double %68)\l  %70 = tail call double @llvm.fma.f64(double %62, double 0x3C7777D0FFDA0D24,\l... double %69)\l  %71 = fadd double %66, %70\l  %72 = fsub double %71, %66\l  %73 = fsub double %70, %72\l  %74 = fadd double %71, %65\l  %75 = fsub double %74, %65\l  %76 = fsub double %75, %74\l  %77 = fadd double %76, %65\l  %78 = fsub double %71, %75\l  %79 = fadd double %78, %77\l  %80 = fadd double %73, %79\l  %81 = fadd double %74, %80\l  %82 = tail call double @llvm.fabs.f64(double %13) #4\l  %83 = fcmp oeq double %82, 0x7FF0000000000000\l  %84 = select i1 %83, double %13, double %81\l  %85 = icmp slt i32 %2, 0\l  %86 = icmp eq i32 %2, 0\l  %87 = fadd contract double %84, -1.000000e+00\l  %88 = select i1 %85, double 0x7FF8000000000000, double %87\l  %89 = select i1 %86, double 0xFFF0000000000000, double %88\l  %90 = sext i32 %12 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %1, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %93 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_data, i32 0, i32 %4\l  store float %92, float addrspace(3)* %93, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %94 = fcmp contract ult double %89, 0.000000e+00\l  br i1 %94, label %95, label %98\l|{<s0>T|<s1>F}}"];
	Node0x63ed580:s0 -> Node0x63f58f0;
	Node0x63ed580:s1 -> Node0x63f5980;
	Node0x63f58f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%95:\l95:                                               \l  %96 = load float, float addrspace(3)* %93, align 4, !tbaa !7\l  %97 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  store float %96, float addrspace(1)* %97, align 4, !tbaa !7\l  ret void\l}"];
	Node0x63f5980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%98:\l98:                                               \l  %99 = phi i16 [ %109, %108 ], [ 0, %3 ]\l  %100 = zext i16 %99 to i32\l  %101 = icmp sgt i16 %99, -1\l  br i1 %101, label %102, label %108\l|{<s0>T|<s1>F}}"];
	Node0x63f5980:s0 -> Node0x63f5f10;
	Node0x63f5980:s1 -> Node0x63f5cb0;
	Node0x63f5f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%102:\l102:                                              \l  %103 = shl i32 131072, %100\l  %104 = ashr exact i32 %103, 16\l  %105 = udiv i32 %4, %104\l  %106 = and i32 %105, 1\l  %107 = icmp eq i32 %106, 0\l  br label %112\l}"];
	Node0x63f5f10 -> Node0x63f6380;
	Node0x63f5cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%108:\l108:                                              \l  %109 = add i16 %99, 1\l  %110 = sitofp i16 %109 to double\l  %111 = fcmp contract ult double %89, %110\l  br i1 %111, label %95, label %98, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x63f5cb0:s0 -> Node0x63f58f0;
	Node0x63f5cb0:s1 -> Node0x63f5980;
	Node0x63f6380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%112:\l112:                                              \l  %113 = phi i32 [ %100, %102 ], [ %137, %136 ]\l  %114 = shl i32 65536, %113\l  %115 = ashr exact i32 %114, 16\l  %116 = shl i32 131072, %113\l  %117 = ashr exact i32 %116, 16\l  %118 = srem i32 %4, %117\l  %119 = icmp slt i32 %118, %115\l  br i1 %107, label %120, label %128\l|{<s0>T|<s1>F}}"];
	Node0x63f6380:s0 -> Node0x63f6c40;
	Node0x63f6380:s1 -> Node0x63f6cd0;
	Node0x63f6c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%120:\l120:                                              \l  br i1 %119, label %121, label %136\l|{<s0>T|<s1>F}}"];
	Node0x63f6c40:s0 -> Node0x63f6e10;
	Node0x63f6c40:s1 -> Node0x63f6770;
	Node0x63f6e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%121:\l121:                                              \l  %122 = load float, float addrspace(3)* %93, align 4, !tbaa !7\l  %123 = add nsw i32 %115, %4\l  %124 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_data, i32 0, i32 %123\l  %125 = load float, float addrspace(3)* %124, align 4, !tbaa !7\l  %126 = fcmp contract olt float %125, %122\l  br i1 %126, label %127, label %136\l|{<s0>T|<s1>F}}"];
	Node0x63f6e10:s0 -> Node0x63f7200;
	Node0x63f6e10:s1 -> Node0x63f6770;
	Node0x63f7200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%127:\l127:                                              \l  store float %125, float addrspace(3)* %93, align 4, !tbaa !7\l  store float %122, float addrspace(3)* %124, align 4, !tbaa !7\l  br label %136\l}"];
	Node0x63f7200 -> Node0x63f6770;
	Node0x63f6cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%128:\l128:                                              \l  br i1 %119, label %136, label %129\l|{<s0>T|<s1>F}}"];
	Node0x63f6cd0:s0 -> Node0x63f6770;
	Node0x63f6cd0:s1 -> Node0x63f2ff0;
	Node0x63f2ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%129:\l129:                                              \l  %130 = load float, float addrspace(3)* %93, align 4, !tbaa !7\l  %131 = sub nsw i32 %4, %115\l  %132 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_data, i32 0, i32 %131\l  %133 = load float, float addrspace(3)* %132, align 4, !tbaa !7\l  %134 = fcmp contract olt float %133, %130\l  br i1 %134, label %135, label %136\l|{<s0>T|<s1>F}}"];
	Node0x63f2ff0:s0 -> Node0x63f33b0;
	Node0x63f2ff0:s1 -> Node0x63f6770;
	Node0x63f33b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%135:\l135:                                              \l  store float %133, float addrspace(3)* %93, align 4, !tbaa !7\l  store float %130, float addrspace(3)* %132, align 4, !tbaa !7\l  br label %136\l}"];
	Node0x63f33b0 -> Node0x63f6770;
	Node0x63f6770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%136:\l136:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %137 = add nsw i32 %113, -1\l  %138 = trunc i32 %113 to i16\l  %139 = icmp sgt i16 %138, 0\l  br i1 %139, label %112, label %108, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x63f6770:s0 -> Node0x63f6380;
	Node0x63f6770:s1 -> Node0x63f5cb0;
}
