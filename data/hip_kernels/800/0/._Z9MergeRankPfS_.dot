digraph "CFG for '_Z9MergeRankPfS_' function" {
	label="CFG for '_Z9MergeRankPfS_' function";

	Node0x482e540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = mul i32 %3, %8\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = add i32 %9, %10\l  %12 = add nsw i32 %11, 2048\l  %13 = sext i32 %11 to i64\l  %14 = getelementptr inbounds float, float addrspace(1)* %0, i64 %13\l  %15 = load float, float addrspace(1)* %14, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %16 = sext i32 %12 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %0, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  br label %19\l}"];
	Node0x482e540 -> Node0x4831660;
	Node0x4831660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = phi i32 [ 2048, %2 ], [ %25, %19 ]\l  %21 = zext i32 %20 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %0, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = fcmp contract olt float %23, %15\l  %25 = add nuw i32 %20, 1\l  br i1 %24, label %19, label %26, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4831660:s0 -> Node0x4831660;
	Node0x4831660:s1 -> Node0x4831b20;
	Node0x4831b20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i32 [ %32, %26 ], [ 0, %19 ]\l  %28 = zext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = fcmp contract olt float %30, %18\l  %32 = add nuw i32 %27, 1\l  br i1 %31, label %26, label %33, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4831b20:s0 -> Node0x4831b20;
	Node0x4831b20:s1 -> Node0x4830e60;
	Node0x4830e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%33:\l33:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %34 = add i32 %25, %11\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  store float %15, float addrspace(1)* %36, align 4, !tbaa !7\l  %37 = add i32 %32, %12\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %1, i64 %38\l  store float %18, float addrspace(1)* %39, align 4, !tbaa !7\l  ret void\l}"];
}
