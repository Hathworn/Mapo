digraph "CFG for '_Z29chol_kernel_cudaUFMG_divisionPfi' function" {
	label="CFG for '_Z29chol_kernel_cudaUFMG_divisionPfi' function";

	Node0x4f338c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%2:\l  %3 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %4 = getelementptr i8, i8 addrspace(4)* %3, i64 4\l  %5 = bitcast i8 addrspace(4)* %4 to i16 addrspace(4)*\l  %6 = load i16, i16 addrspace(4)* %5, align 4, !range !4, !invariant.load !5\l  %7 = zext i16 %6 to i32\l  %8 = getelementptr inbounds i8, i8 addrspace(4)* %3, i64 12\l  %9 = bitcast i8 addrspace(4)* %8 to i32 addrspace(4)*\l  %10 = load i32, i32 addrspace(4)* %9, align 4, !tbaa !6\l  %11 = udiv i32 %10, %7\l  %12 = icmp eq i32 %1, 0\l  br i1 %12, label %33, label %13\l|{<s0>T|<s1>F}}"];
	Node0x4f338c0:s0 -> Node0x4f34240;
	Node0x4f338c0:s1 -> Node0x4f355c0;
	Node0x4f355c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%13:\l13:                                               \l  %14 = mul i32 %11, %7\l  %15 = icmp ugt i32 %10, %14\l  %16 = zext i1 %15 to i32\l  %17 = add i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %3, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %25 = add i32 %23, %24\l  %26 = mul i32 %17, %25\l  %27 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %28 = add i32 %26, %27\l  %29 = mul i32 %28, %7\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %31 = add i32 %29, %30\l  %32 = mul nsw i32 %31, %1\l  br label %34\l}"];
	Node0x4f355c0 -> Node0x4f35890;
	Node0x4f34240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%33:\l33:                                               \l  ret void\l}"];
	Node0x4f35890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i32 [ 0, %13 ], [ %59, %58 ]\l  %36 = add i32 %35, %32\l  %37 = freeze i32 %36\l  %38 = sdiv i32 %37, 2048\l  %39 = mul i32 %38, 2048\l  %40 = sub i32 %37, %39\l  %41 = icmp eq i32 %40, %38\l  br i1 %41, label %58, label %42\l|{<s0>T|<s1>F}}"];
	Node0x4f35890:s0 -> Node0x4f37df0;
	Node0x4f35890:s1 -> Node0x4f38260;
	Node0x4f38260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%42:\l42:                                               \l  %43 = icmp sgt i32 %38, %40\l  %44 = sub nsw i32 2047, %40\l  %45 = sub nsw i32 2047, %38\l  %46 = select i1 %43, i32 %44, i32 %40\l  %47 = select i1 %43, i32 %45, i32 %38\l  %48 = shl nsw i32 %47, 11\l  %49 = add nsw i32 %48, %46\l  %50 = mul nsw i32 %47, 2049\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !16\l  %54 = sext i32 %49 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !16\l  %57 = fdiv contract float %56, %53\l  store float %57, float addrspace(1)* %55, align 4, !tbaa !16\l  br label %58\l}"];
	Node0x4f38260 -> Node0x4f37df0;
	Node0x4f37df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = add nuw i32 %35, 1\l  %60 = icmp eq i32 %59, %1\l  br i1 %60, label %33, label %34, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4f37df0:s0 -> Node0x4f34240;
	Node0x4f37df0:s1 -> Node0x4f35890;
}
