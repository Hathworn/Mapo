digraph "CFG for '_Z32chol_kernel_cudaUFMG_eliminationPfi' function" {
	label="CFG for '_Z32chol_kernel_cudaUFMG_eliminationPfi' function";

	Node0x5e941f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = add i32 %3, 1\l  %5 = add i32 %4, %1\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = add i32 %5, %6\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = shl nsw i32 %1, 11\l  %14 = shl nsw i32 %5, 11\l  %15 = icmp slt i32 %7, 2048\l  br i1 %15, label %16, label %20\l|{<s0>T|<s1>F}}"];
	Node0x5e941f0:s0 -> Node0x5e94b10;
	Node0x5e941f0:s1 -> Node0x5e96400;
	Node0x5e94b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%16:\l16:                                               \l  %17 = add nsw i32 %5, %13\l  %18 = sext i32 %17 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  br label %21\l}"];
	Node0x5e94b10 -> Node0x5e96760;
	Node0x5e96400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%20:\l20:                                               \l  ret void\l}"];
	Node0x5e96760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = phi i32 [ %7, %16 ], [ %34, %21 ]\l  %23 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  %24 = add nsw i32 %22, %13\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %0, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7\l  %28 = fmul contract float %23, %27\l  %29 = add nsw i32 %22, %14\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7\l  %33 = fsub contract float %32, %28\l  store float %33, float addrspace(1)* %31, align 4, !tbaa !7\l  %34 = add nsw i32 %22, %12\l  %35 = icmp slt i32 %34, 2048\l  br i1 %35, label %21, label %20, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5e96760:s0 -> Node0x5e96760;
	Node0x5e96760:s1 -> Node0x5e96400;
}
