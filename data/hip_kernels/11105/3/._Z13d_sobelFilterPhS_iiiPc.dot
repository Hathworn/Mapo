digraph "CFG for '_Z13d_sobelFilterPhS_iiiPc' function" {
	label="CFG for '_Z13d_sobelFilterPhS_iiiPc' function";

	Node0x5627760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %8, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = sdiv i32 %4, 2\l  %25 = sub nsw i32 %15, %24\l  %26 = sub nsw i32 %23, %24\l  %27 = icmp slt i32 %15, %3\l  %28 = icmp slt i32 %23, %2\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %132\l|{<s0>T|<s1>F}}"];
	Node0x5627760:s0 -> Node0x562b3c0;
	Node0x5627760:s1 -> Node0x562b450;
	Node0x562b3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%30:\l30:                                               \l  %31 = icmp sgt i32 %4, 0\l  br i1 %31, label %32, label %46\l|{<s0>T|<s1>F}}"];
	Node0x562b3c0:s0 -> Node0x562b650;
	Node0x562b3c0:s1 -> Node0x562b6a0;
	Node0x562b650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%32:\l32:                                               \l  %33 = and i32 %4, 1\l  %34 = icmp eq i32 %4, 1\l  %35 = and i32 %4, -2\l  %36 = icmp eq i32 %33, 0\l  br label %37\l}"];
	Node0x562b650 -> Node0x562bba0;
	Node0x562bba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%37:\l37:                                               \l  %38 = phi i32 [ %82, %80 ], [ 0, %32 ]\l  %39 = phi i32 [ %81, %80 ], [ 0, %32 ]\l  %40 = add nsw i32 %38, %25\l  %41 = icmp sgt i32 %40, -1\l  %42 = icmp slt i32 %40, %3\l  %43 = select i1 %41, i1 %42, i1 false\l  %44 = mul nsw i32 %40, %2\l  %45 = mul nsw i32 %38, %4\l  br i1 %34, label %55, label %84\l|{<s0>T|<s1>F}}"];
	Node0x562bba0:s0 -> Node0x562c2a0;
	Node0x562bba0:s1 -> Node0x562c330;
	Node0x562b6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%46:\l46:                                               \l  %47 = phi i32 [ 0, %30 ], [ %81, %80 ]\l  %48 = tail call i32 @llvm.smin.i32(i32 %47, i32 255)\l  %49 = tail call i32 @llvm.smax.i32(i32 %48, i32 0)\l  %50 = trunc i32 %49 to i8\l  %51 = mul nsw i32 %15, %2\l  %52 = add nsw i32 %51, %23\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %53\l  store i8 %50, i8 addrspace(1)* %54, align 1, !tbaa !7\l  br label %132\l}"];
	Node0x562b6a0 -> Node0x562b450;
	Node0x562c2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%55:\l55:                                               \l  %56 = phi i32 [ undef, %37 ], [ %128, %127 ]\l  %57 = phi i32 [ 0, %37 ], [ %129, %127 ]\l  %58 = phi i32 [ %39, %37 ], [ %128, %127 ]\l  %59 = xor i1 %43, true\l  %60 = select i1 %36, i1 true, i1 %59\l  %61 = select i1 %36, i32 %56, i32 %58\l  br i1 %60, label %80, label %62\l|{<s0>T|<s1>F}}"];
	Node0x562c2a0:s0 -> Node0x562bc90;
	Node0x562c2a0:s1 -> Node0x562d7e0;
	Node0x562d7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%62:\l62:                                               \l  %63 = add nsw i32 %57, %26\l  %64 = icmp sgt i32 %63, -1\l  %65 = icmp slt i32 %63, %2\l  %66 = select i1 %64, i1 %65, i1 false\l  br i1 %66, label %67, label %80\l|{<s0>T|<s1>F}}"];
	Node0x562d7e0:s0 -> Node0x562b920;
	Node0x562d7e0:s1 -> Node0x562bc90;
	Node0x562b920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%67:\l67:                                               \l  %68 = add nsw i32 %63, %44\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %69\l  %71 = load i8, i8 addrspace(1)* %70, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %72 = zext i8 %71 to i32\l  %73 = add nsw i32 %57, %45\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %74\l  %76 = load i8, i8 addrspace(1)* %75, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %77 = sext i8 %76 to i32\l  %78 = mul nsw i32 %77, %72\l  %79 = add nsw i32 %78, %58\l  br label %80\l}"];
	Node0x562b920 -> Node0x562bc90;
	Node0x562bc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%80:\l80:                                               \l  %81 = phi i32 [ %61, %55 ], [ %79, %67 ], [ %58, %62 ]\l  %82 = add nuw nsw i32 %38, 1\l  %83 = icmp eq i32 %82, %4\l  br i1 %83, label %46, label %37, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x562bc90:s0 -> Node0x562b6a0;
	Node0x562bc90:s1 -> Node0x562bba0;
	Node0x562c330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  %85 = phi i32 [ %129, %127 ], [ 0, %37 ]\l  %86 = phi i32 [ %128, %127 ], [ %39, %37 ]\l  %87 = phi i32 [ %130, %127 ], [ 0, %37 ]\l  br i1 %43, label %88, label %106\l|{<s0>T|<s1>F}}"];
	Node0x562c330:s0 -> Node0x562f110;
	Node0x562c330:s1 -> Node0x562f1a0;
	Node0x562f110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%88:\l88:                                               \l  %89 = add nsw i32 %85, %26\l  %90 = icmp sgt i32 %89, -1\l  %91 = icmp slt i32 %89, %2\l  %92 = select i1 %90, i1 %91, i1 false\l  br i1 %92, label %93, label %106\l|{<s0>T|<s1>F}}"];
	Node0x562f110:s0 -> Node0x562f540;
	Node0x562f110:s1 -> Node0x562f1a0;
	Node0x562f540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%93:\l93:                                               \l  %94 = add nsw i32 %89, %44\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %95\l  %97 = load i8, i8 addrspace(1)* %96, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %98 = zext i8 %97 to i32\l  %99 = add nsw i32 %85, %45\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %100\l  %102 = load i8, i8 addrspace(1)* %101, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %103 = sext i8 %102 to i32\l  %104 = mul nsw i32 %103, %98\l  %105 = add nsw i32 %104, %86\l  br label %106\l}"];
	Node0x562f540 -> Node0x562f1a0;
	Node0x562f1a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  %107 = phi i32 [ %105, %93 ], [ %86, %88 ], [ %86, %84 ]\l  %108 = or i32 %85, 1\l  br i1 %43, label %109, label %127\l|{<s0>T|<s1>F}}"];
	Node0x562f1a0:s0 -> Node0x562fe70;
	Node0x562f1a0:s1 -> Node0x562d2b0;
	Node0x562fe70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%109:\l109:                                              \l  %110 = add nsw i32 %108, %26\l  %111 = icmp sgt i32 %110, -1\l  %112 = icmp slt i32 %110, %2\l  %113 = select i1 %111, i1 %112, i1 false\l  br i1 %113, label %114, label %127\l|{<s0>T|<s1>F}}"];
	Node0x562fe70:s0 -> Node0x56301d0;
	Node0x562fe70:s1 -> Node0x562d2b0;
	Node0x56301d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%114:\l114:                                              \l  %115 = add nsw i32 %110, %44\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %116\l  %118 = load i8, i8 addrspace(1)* %117, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %119 = zext i8 %118 to i32\l  %120 = add nsw i32 %108, %45\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %121\l  %123 = load i8, i8 addrspace(1)* %122, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %124 = sext i8 %123 to i32\l  %125 = mul nsw i32 %124, %119\l  %126 = add nsw i32 %125, %107\l  br label %127\l}"];
	Node0x56301d0 -> Node0x562d2b0;
	Node0x562d2b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%127:\l127:                                              \l  %128 = phi i32 [ %126, %114 ], [ %107, %109 ], [ %107, %106 ]\l  %129 = add nuw nsw i32 %85, 2\l  %130 = add i32 %87, 2\l  %131 = icmp eq i32 %130, %35\l  br i1 %131, label %55, label %84, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x562d2b0:s0 -> Node0x562c2a0;
	Node0x562d2b0:s1 -> Node0x562c330;
	Node0x562b450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%132:\l132:                                              \l  ret void\l}"];
}
