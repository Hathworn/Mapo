digraph "CFG for '_Z27adaptive_log_tonemap_kernelPfS_iiiffS_' function" {
	label="CFG for '_Z27adaptive_log_tonemap_kernelPfS_iiiffS_' function";

	Node0x4521530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 2, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %10, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %17, %3\l  %27 = icmp slt i32 %25, %2\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %320\l|{<s0>T|<s1>F}}"];
	Node0x4521530:s0 -> Node0x4524fb0;
	Node0x4521530:s1 -> Node0x4525040;
	Node0x4524fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %17, %2\l  %31 = add nsw i32 %30, %25\l  %32 = mul nsw i32 %31, 3\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = add nsw i32 %32, 1\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = add nsw i32 %32, 2\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fpext float %35 to double\l  %45 = fmul contract double %44, 7.220000e-02\l  %46 = fpext float %39 to double\l  %47 = fmul contract double %46, 7.152000e-01\l  %48 = fadd contract double %45, %47\l  %49 = fpext float %43 to double\l  %50 = fmul contract double %49, 2.126000e-01\l  %51 = fadd contract double %48, %50\l  %52 = fptrunc double %51 to float\l  %53 = load float, float addrspace(1)* %7, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %54 = fadd contract float %53, 1.000000e+00\l  %55 = tail call i1 @llvm.amdgcn.class.f32(float %54, i32 144)\l  %56 = select i1 %55, float 0x41F0000000000000, float 1.000000e+00\l  %57 = fmul float %54, %56\l  %58 = tail call float @llvm.log2.f32(float %57)\l  %59 = fmul float %58, 0x3FD3441340000000\l  %60 = fadd contract float %52, 1.000000e+00\l  %61 = tail call i1 @llvm.amdgcn.class.f32(float %60, i32 144)\l  %62 = select i1 %61, float 0x41F0000000000000, float 1.000000e+00\l  %63 = fmul float %60, %62\l  %64 = tail call float @llvm.log2.f32(float %63)\l  %65 = fmul float %64, 0x3FE62E42E0000000\l  %66 = fdiv contract float %52, %53\l  %67 = tail call i1 @llvm.amdgcn.class.f32(float %5, i32 144)\l  %68 = select i1 %67, float 0x41F0000000000000, float 1.000000e+00\l  %69 = fmul float %68, %5\l  %70 = tail call float @llvm.log2.f32(float %69)\l  %71 = fmul float %70, 0x3FE62E42E0000000\l  %72 = tail call i1 @llvm.amdgcn.class.f32(float %70, i32 519)\l  %73 = fneg float %71\l  %74 = tail call float @llvm.fma.f32(float %70, float 0x3FE62E42E0000000,\l... float %73)\l  %75 = tail call float @llvm.fma.f32(float %70, float 0x3E6EFA39E0000000,\l... float %74)\l  %76 = fadd float %71, %75\l  %77 = select i1 %72, float %70, float %76\l  %78 = select i1 %67, float 0x40362E4300000000, float 0.000000e+00\l  %79 = fsub float %77, %78\l  %80 = fdiv contract float %79, 0xBFE62E4300000000\l  %81 = tail call float @llvm.fabs.f32(float %66)\l  %82 = tail call float @llvm.amdgcn.frexp.mant.f32(float %81)\l  %83 = fcmp olt float %82, 0x3FE5555560000000\l  %84 = zext i1 %83 to i32\l  %85 = tail call float @llvm.amdgcn.ldexp.f32(float %82, i32 %84)\l  %86 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %81)\l  %87 = sub nsw i32 %86, %84\l  %88 = fadd float %85, -1.000000e+00\l  %89 = fadd float %85, 1.000000e+00\l  %90 = fadd float %89, -1.000000e+00\l  %91 = fsub float %85, %90\l  %92 = tail call float @llvm.amdgcn.rcp.f32(float %89)\l  %93 = fmul float %88, %92\l  %94 = fmul float %89, %93\l  %95 = fneg float %94\l  %96 = tail call float @llvm.fma.f32(float %93, float %89, float %95)\l  %97 = tail call float @llvm.fma.f32(float %93, float %91, float %96)\l  %98 = fadd float %94, %97\l  %99 = fsub float %98, %94\l  %100 = fsub float %97, %99\l  %101 = fsub float %88, %98\l  %102 = fsub float %88, %101\l  %103 = fsub float %102, %98\l  %104 = fsub float %103, %100\l  %105 = fadd float %101, %104\l  %106 = fmul float %92, %105\l  %107 = fadd float %93, %106\l  %108 = fsub float %107, %93\l  %109 = fsub float %106, %108\l  %110 = fmul float %107, %107\l  %111 = fneg float %110\l  %112 = tail call float @llvm.fma.f32(float %107, float %107, float %111)\l  %113 = fmul float %109, 2.000000e+00\l  %114 = tail call float @llvm.fma.f32(float %107, float %113, float %112)\l  %115 = fadd float %110, %114\l  %116 = fsub float %115, %110\l  %117 = fsub float %114, %116\l  %118 = tail call float @llvm.fmuladd.f32(float %115, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %119 = tail call float @llvm.fmuladd.f32(float %115, float %118, float\l... 0x3FD999BDE0000000)\l  %120 = sitofp i32 %87 to float\l  %121 = fmul float %120, 0x3FE62E4300000000\l  %122 = fneg float %121\l  %123 = tail call float @llvm.fma.f32(float %120, float 0x3FE62E4300000000,\l... float %122)\l  %124 = tail call float @llvm.fma.f32(float %120, float 0xBE205C6100000000,\l... float %123)\l  %125 = fadd float %121, %124\l  %126 = fsub float %125, %121\l  %127 = fsub float %124, %126\l  %128 = tail call float @llvm.amdgcn.ldexp.f32(float %107, i32 1)\l  %129 = fmul float %107, %115\l  %130 = fneg float %129\l  %131 = tail call float @llvm.fma.f32(float %115, float %107, float %130)\l  %132 = tail call float @llvm.fma.f32(float %115, float %109, float %131)\l  %133 = tail call float @llvm.fma.f32(float %117, float %107, float %132)\l  %134 = fadd float %129, %133\l  %135 = fsub float %134, %129\l  %136 = fsub float %133, %135\l  %137 = fmul float %115, %119\l  %138 = fneg float %137\l  %139 = tail call float @llvm.fma.f32(float %115, float %119, float %138)\l  %140 = tail call float @llvm.fma.f32(float %117, float %119, float %139)\l  %141 = fadd float %137, %140\l  %142 = fsub float %141, %137\l  %143 = fsub float %140, %142\l  %144 = fadd float %141, 0x3FE5555540000000\l  %145 = fadd float %144, 0xBFE5555540000000\l  %146 = fsub float %141, %145\l  %147 = fadd float %143, 0x3E2E720200000000\l  %148 = fadd float %147, %146\l  %149 = fadd float %144, %148\l  %150 = fsub float %149, %144\l  %151 = fsub float %148, %150\l  %152 = fmul float %134, %149\l  %153 = fneg float %152\l  %154 = tail call float @llvm.fma.f32(float %134, float %149, float %153)\l  %155 = tail call float @llvm.fma.f32(float %134, float %151, float %154)\l  %156 = tail call float @llvm.fma.f32(float %136, float %149, float %155)\l  %157 = tail call float @llvm.amdgcn.ldexp.f32(float %109, i32 1)\l  %158 = fadd float %152, %156\l  %159 = fsub float %158, %152\l  %160 = fsub float %156, %159\l  %161 = fadd float %128, %158\l  %162 = fsub float %161, %128\l  %163 = fsub float %158, %162\l  %164 = fadd float %157, %160\l  %165 = fadd float %164, %163\l  %166 = fadd float %161, %165\l  %167 = fsub float %166, %161\l  %168 = fsub float %165, %167\l  %169 = fadd float %125, %166\l  %170 = fsub float %169, %125\l  %171 = fsub float %169, %170\l  %172 = fsub float %125, %171\l  %173 = fsub float %166, %170\l  %174 = fadd float %173, %172\l  %175 = fadd float %127, %168\l  %176 = fsub float %175, %127\l  %177 = fsub float %175, %176\l  %178 = fsub float %127, %177\l  %179 = fsub float %168, %176\l  %180 = fadd float %179, %178\l  %181 = fadd float %175, %174\l  %182 = fadd float %169, %181\l  %183 = fsub float %182, %169\l  %184 = fsub float %181, %183\l  %185 = fadd float %180, %184\l  %186 = fadd float %182, %185\l  %187 = fsub float %186, %182\l  %188 = fsub float %185, %187\l  %189 = fmul float %80, %186\l  %190 = fneg float %189\l  %191 = tail call float @llvm.fma.f32(float %80, float %186, float %190)\l  %192 = tail call float @llvm.fma.f32(float %80, float %188, float %191)\l  %193 = fadd float %189, %192\l  %194 = fsub float %193, %189\l  %195 = fsub float %192, %194\l  %196 = tail call float @llvm.fabs.f32(float %189) #3\l  %197 = fcmp oeq float %196, 0x7FF0000000000000\l  %198 = select i1 %197, float %189, float %193\l  %199 = tail call float @llvm.fabs.f32(float %198) #3\l  %200 = fcmp oeq float %199, 0x7FF0000000000000\l  %201 = select i1 %200, float 0.000000e+00, float %195\l  %202 = fcmp oeq float %198, 0x40562E4300000000\l  %203 = select i1 %202, float 0x3EE0000000000000, float 0.000000e+00\l  %204 = fsub float %198, %203\l  %205 = fadd float %203, %201\l  %206 = fmul float %204, 0x3FF7154760000000\l  %207 = tail call float @llvm.rint.f32(float %206)\l  %208 = fcmp ogt float %204, 0x40562E4300000000\l  %209 = fcmp olt float %204, 0xC059D1DA00000000\l  %210 = fneg float %206\l  %211 = tail call float @llvm.fma.f32(float %204, float 0x3FF7154760000000,\l... float %210)\l  %212 = tail call float @llvm.fma.f32(float %204, float 0x3E54AE0BE0000000,\l... float %211)\l  %213 = fsub float %206, %207\l  %214 = fadd float %212, %213\l  %215 = tail call float @llvm.exp2.f32(float %214)\l  %216 = fptosi float %207 to i32\l  %217 = tail call float @llvm.amdgcn.ldexp.f32(float %215, i32 %216)\l  %218 = select i1 %209, float 0.000000e+00, float %217\l  %219 = select i1 %208, float 0x7FF0000000000000, float %218\l  %220 = tail call float @llvm.fma.f32(float %219, float %205, float %219)\l  %221 = tail call float @llvm.fabs.f32(float %219) #3\l  %222 = fcmp oeq float %221, 0x7FF0000000000000\l  %223 = select i1 %222, float %219, float %220\l  %224 = tail call float @llvm.fabs.f32(float %80)\l  %225 = tail call float @llvm.trunc.f32(float %224)\l  %226 = fcmp oeq float %224, %225\l  %227 = zext i1 %226 to i32\l  %228 = fmul float %225, 5.000000e-01\l  %229 = tail call float @llvm.amdgcn.fract.f32(float %228)\l  %230 = tail call i1 @llvm.amdgcn.class.f32(float %228, i32 516)\l  %231 = select i1 %230, float 0.000000e+00, float %229\l  %232 = fcmp oeq float %231, 0.000000e+00\l  %233 = and i1 %226, %232\l  %234 = zext i1 %233 to i32\l  %235 = add nuw nsw i32 %234, %227\l  %236 = icmp eq i32 %235, 1\l  %237 = fcmp olt float %66, 0.000000e+00\l  %238 = and i1 %236, %237\l  %239 = select i1 %238, float -0.000000e+00, float 0.000000e+00\l  %240 = tail call float @llvm.copysign.f32(float %223, float %239)\l  %241 = fcmp uge float %66, 0.000000e+00\l  %242 = icmp ne i32 %235, 0\l  %243 = select i1 %241, i1 true, i1 %242\l  %244 = select i1 %243, float %240, float 0x7FF8000000000000\l  %245 = fcmp oeq float %224, 0x7FF0000000000000\l  br i1 %245, label %246, label %255\l|{<s0>T|<s1>F}}"];
	Node0x4524fb0:s0 -> Node0x4531790;
	Node0x4524fb0:s1 -> Node0x4531820;
	Node0x4531790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%246:\l246:                                              \l  %247 = fcmp oeq float %81, 1.000000e+00\l  %248 = fadd float %81, -1.000000e+00\l  %249 = bitcast float %80 to i32\l  %250 = bitcast float %248 to i32\l  %251 = xor i32 %250, %249\l  %252 = icmp sgt i32 %251, -1\l  %253 = select i1 %252, float 0x7FF0000000000000, float 0.000000e+00\l  %254 = select i1 %247, float %81, float %253\l  br label %255\l}"];
	Node0x4531790 -> Node0x4531820;
	Node0x4531820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%255:\l255:                                              \l  %256 = phi float [ %244, %29 ], [ %254, %246 ]\l  %257 = tail call i1 @llvm.amdgcn.class.f32(float %64, i32 519)\l  %258 = fneg float %65\l  %259 = tail call float @llvm.fma.f32(float %64, float 0x3FE62E42E0000000,\l... float %258)\l  %260 = tail call float @llvm.fma.f32(float %64, float 0x3E6EFA39E0000000,\l... float %259)\l  %261 = fadd float %65, %260\l  %262 = select i1 %257, float %64, float %261\l  %263 = select i1 %61, float 0x40362E4300000000, float 0.000000e+00\l  %264 = fsub float %262, %263\l  %265 = fpext float %6 to double\l  %266 = tail call i1 @llvm.amdgcn.class.f32(float %58, i32 519)\l  %267 = fneg float %59\l  %268 = tail call float @llvm.fma.f32(float %58, float 0x3FD3441340000000,\l... float %267)\l  %269 = tail call float @llvm.fma.f32(float %58, float 0x3E509F79E0000000,\l... float %268)\l  %270 = fadd float %59, %269\l  %271 = select i1 %266, float %58, float %270\l  %272 = select i1 %55, float 0x4023441360000000, float 0.000000e+00\l  %273 = fsub float %271, %272\l  %274 = fpext float %273 to double\l  %275 = fmul contract double %274, 1.000000e+02\l  %276 = fdiv contract double %265, %275\l  %277 = fcmp oeq float %81, 0x7FF0000000000000\l  %278 = fcmp oeq float %66, 0.000000e+00\l  %279 = or i1 %278, %277\l  %280 = fcmp olt float %80, 0.000000e+00\l  %281 = xor i1 %280, %278\l  %282 = select i1 %281, float 0.000000e+00, float 0x7FF0000000000000\l  %283 = select i1 %236, float %66, float 0.000000e+00\l  %284 = tail call float @llvm.copysign.f32(float %282, float %283)\l  %285 = select i1 %279, float %284, float %256\l  %286 = fcmp uno float %66, %80\l  %287 = select i1 %286, float 0x7FF8000000000000, float %285\l  %288 = fcmp oeq float %66, 1.000000e+00\l  %289 = fcmp oeq float %80, 0.000000e+00\l  %290 = or i1 %289, %288\l  %291 = fpext float %287 to double\l  %292 = fmul contract double %291, 8.000000e+00\l  %293 = fadd contract double %292, 2.000000e+00\l  %294 = fptrunc double %293 to float\l  %295 = select i1 %290, float 1.000000e+01, float %294\l  %296 = tail call i1 @llvm.amdgcn.class.f32(float %295, i32 144)\l  %297 = select i1 %296, float 0x41F0000000000000, float 1.000000e+00\l  %298 = fmul float %295, %297\l  %299 = tail call float @llvm.log2.f32(float %298)\l  %300 = fmul float %299, 0x3FE62E42E0000000\l  %301 = tail call i1 @llvm.amdgcn.class.f32(float %299, i32 519)\l  %302 = fneg float %300\l  %303 = tail call float @llvm.fma.f32(float %299, float 0x3FE62E42E0000000,\l... float %302)\l  %304 = tail call float @llvm.fma.f32(float %299, float 0x3E6EFA39E0000000,\l... float %303)\l  %305 = fadd float %300, %304\l  %306 = select i1 %301, float %299, float %305\l  %307 = select i1 %296, float 0x40362E4300000000, float 0.000000e+00\l  %308 = fsub float %306, %307\l  %309 = fdiv contract float %264, %308\l  %310 = fpext float %309 to double\l  %311 = fmul contract double %276, %310\l  %312 = fptrunc double %311 to float\l  %313 = fdiv contract float %312, %52\l  %314 = fmul contract float %35, %313\l  %315 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  store float %314, float addrspace(1)* %315, align 4, !tbaa !7\l  %316 = fmul contract float %39, %313\l  %317 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  store float %316, float addrspace(1)* %317, align 4, !tbaa !7\l  %318 = fmul contract float %43, %313\l  %319 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  store float %318, float addrspace(1)* %319, align 4, !tbaa !7\l  br label %320\l}"];
	Node0x4531820 -> Node0x4525040;
	Node0x4525040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%320:\l320:                                              \l  ret void\l}"];
}
