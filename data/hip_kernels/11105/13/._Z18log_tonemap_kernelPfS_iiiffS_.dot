digraph "CFG for '_Z18log_tonemap_kernelPfS_iiiffS_' function" {
	label="CFG for '_Z18log_tonemap_kernelPfS_iiiffS_' function";

	Node0x5180190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 2, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %10, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %17, %3\l  %27 = icmp slt i32 %25, %2\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %92\l|{<s0>T|<s1>F}}"];
	Node0x5180190:s0 -> Node0x5183c10;
	Node0x5180190:s1 -> Node0x5183ca0;
	Node0x5183c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %17, %2\l  %31 = add nsw i32 %30, %25\l  %32 = mul nsw i32 %31, 3\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = add nsw i32 %32, 1\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = add nsw i32 %32, 2\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fpext float %35 to double\l  %45 = fmul contract double %44, 7.220000e-02\l  %46 = fpext float %39 to double\l  %47 = fmul contract double %46, 7.152000e-01\l  %48 = fadd contract double %45, %47\l  %49 = fpext float %43 to double\l  %50 = fmul contract double %49, 2.126000e-01\l  %51 = fadd contract double %48, %50\l  %52 = fptrunc double %51 to float\l  %53 = load float, float addrspace(1)* %7, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %54 = fmul contract float %52, %6\l  %55 = fadd contract float %54, 1.000000e+00\l  %56 = tail call i1 @llvm.amdgcn.class.f32(float %55, i32 144)\l  %57 = select i1 %56, float 0x41F0000000000000, float 1.000000e+00\l  %58 = fmul float %55, %57\l  %59 = tail call float @llvm.log2.f32(float %58)\l  %60 = fmul float %59, 0x3FD3441340000000\l  %61 = tail call i1 @llvm.amdgcn.class.f32(float %59, i32 519)\l  %62 = fneg float %60\l  %63 = tail call float @llvm.fma.f32(float %59, float 0x3FD3441340000000,\l... float %62)\l  %64 = tail call float @llvm.fma.f32(float %59, float 0x3E509F79E0000000,\l... float %63)\l  %65 = fadd float %60, %64\l  %66 = select i1 %61, float %59, float %65\l  %67 = select i1 %56, float 0x4023441360000000, float 0.000000e+00\l  %68 = fsub float %66, %67\l  %69 = fmul contract float %53, %5\l  %70 = fadd contract float %69, 1.000000e+00\l  %71 = tail call i1 @llvm.amdgcn.class.f32(float %70, i32 144)\l  %72 = select i1 %71, float 0x41F0000000000000, float 1.000000e+00\l  %73 = fmul float %70, %72\l  %74 = tail call float @llvm.log2.f32(float %73)\l  %75 = fmul float %74, 0x3FD3441340000000\l  %76 = tail call i1 @llvm.amdgcn.class.f32(float %74, i32 519)\l  %77 = fneg float %75\l  %78 = tail call float @llvm.fma.f32(float %74, float 0x3FD3441340000000,\l... float %77)\l  %79 = tail call float @llvm.fma.f32(float %74, float 0x3E509F79E0000000,\l... float %78)\l  %80 = fadd float %75, %79\l  %81 = select i1 %76, float %74, float %80\l  %82 = select i1 %71, float 0x4023441360000000, float 0.000000e+00\l  %83 = fsub float %81, %82\l  %84 = fdiv contract float %68, %83\l  %85 = fdiv contract float %84, %52\l  %86 = fmul contract float %35, %85\l  %87 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  store float %86, float addrspace(1)* %87, align 4, !tbaa !7\l  %88 = fmul contract float %39, %85\l  %89 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  store float %88, float addrspace(1)* %89, align 4, !tbaa !7\l  %90 = fmul contract float %43, %85\l  %91 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  store float %90, float addrspace(1)* %91, align 4, !tbaa !7\l  br label %92\l}"];
	Node0x5183c10 -> Node0x5183ca0;
	Node0x5183ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%92:\l92:                                               \l  ret void\l}"];
}
