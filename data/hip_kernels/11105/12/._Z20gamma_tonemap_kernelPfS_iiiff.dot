digraph "CFG for '_Z20gamma_tonemap_kernelPfS_iiiff' function" {
	label="CFG for '_Z20gamma_tonemap_kernelPfS_iiiff' function";

	Node0x5ca54e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 2, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %9, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %24 = add i32 %22, %23\l  %25 = icmp slt i32 %16, %3\l  %26 = icmp slt i32 %24, %2\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %298\l|{<s0>T|<s1>F}}"];
	Node0x5ca54e0:s0 -> Node0x5ca8f70;
	Node0x5ca54e0:s1 -> Node0x5ca9000;
	Node0x5ca8f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%28:\l28:                                               \l  %29 = mul nsw i32 %16, %2\l  %30 = add nsw i32 %29, %24\l  %31 = mul nsw i32 %30, 3\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %35 = add nsw i32 %31, 1\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = add nsw i32 %31, 2\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = fpext float %34 to double\l  %44 = fmul contract double %43, 7.220000e-02\l  %45 = fpext float %38 to double\l  %46 = fmul contract double %45, 7.152000e-01\l  %47 = fadd contract double %44, %46\l  %48 = fpext float %42 to double\l  %49 = fmul contract double %48, 2.126000e-01\l  %50 = fadd contract double %47, %49\l  %51 = fptrunc double %50 to float\l  %52 = fmul float %5, 0x3FE62E4300000000\l  %53 = fneg float %52\l  %54 = tail call float @llvm.fma.f32(float %5, float 0x3FE62E4300000000,\l... float %53)\l  %55 = tail call float @llvm.fma.f32(float %5, float 0xBE205C6100000000,\l... float %54)\l  %56 = fadd float %52, %55\l  %57 = fsub float %56, %52\l  %58 = fsub float %55, %57\l  %59 = tail call float @llvm.fabs.f32(float %52) #3\l  %60 = fcmp oeq float %59, 0x7FF0000000000000\l  %61 = select i1 %60, float %52, float %56\l  %62 = tail call float @llvm.fabs.f32(float %61) #3\l  %63 = fcmp oeq float %62, 0x7FF0000000000000\l  %64 = select i1 %63, float 0.000000e+00, float %58\l  %65 = fcmp oeq float %61, 0x40562E4300000000\l  %66 = select i1 %65, float 0x3EE0000000000000, float 0.000000e+00\l  %67 = fsub float %61, %66\l  %68 = fadd float %66, %64\l  %69 = fmul float %67, 0x3FF7154760000000\l  %70 = tail call float @llvm.rint.f32(float %69)\l  %71 = fcmp ogt float %67, 0x40562E4300000000\l  %72 = fcmp olt float %67, 0xC059D1DA00000000\l  %73 = fneg float %69\l  %74 = tail call float @llvm.fma.f32(float %67, float 0x3FF7154760000000,\l... float %73)\l  %75 = tail call float @llvm.fma.f32(float %67, float 0x3E54AE0BE0000000,\l... float %74)\l  %76 = fsub float %69, %70\l  %77 = fadd float %75, %76\l  %78 = tail call float @llvm.exp2.f32(float %77)\l  %79 = fptosi float %70 to i32\l  %80 = tail call float @llvm.amdgcn.ldexp.f32(float %78, i32 %79)\l  %81 = select i1 %72, float 0.000000e+00, float %80\l  %82 = select i1 %71, float 0x7FF0000000000000, float %81\l  %83 = tail call float @llvm.fma.f32(float %82, float %68, float %82)\l  %84 = tail call float @llvm.fabs.f32(float %82) #3\l  %85 = fcmp oeq float %84, 0x7FF0000000000000\l  %86 = select i1 %85, float %82, float %83\l  %87 = tail call float @llvm.fabs.f32(float %5)\l  %88 = tail call float @llvm.fabs.f32(float %86)\l  %89 = fcmp oeq float %87, 0x7FF0000000000000\l  %90 = bitcast float %5 to i32\l  %91 = icmp sgt i32 %90, -1\l  %92 = select i1 %91, float 0x7FF0000000000000, float 0.000000e+00\l  %93 = select i1 %89, float %92, float %88\l  %94 = fcmp uno float %5, 0.000000e+00\l  %95 = select i1 %94, float 0x7FF8000000000000, float %93\l  %96 = fcmp oeq float %5, 0.000000e+00\l  %97 = select i1 %96, float 1.000000e+00, float %95\l  %98 = fmul contract float %97, %51\l  %99 = fdiv contract float 1.000000e+00, %6\l  %100 = tail call float @llvm.fabs.f32(float %98)\l  %101 = tail call float @llvm.amdgcn.frexp.mant.f32(float %100)\l  %102 = fcmp olt float %101, 0x3FE5555560000000\l  %103 = zext i1 %102 to i32\l  %104 = tail call float @llvm.amdgcn.ldexp.f32(float %101, i32 %103)\l  %105 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %100)\l  %106 = sub nsw i32 %105, %103\l  %107 = fadd float %104, -1.000000e+00\l  %108 = fadd float %104, 1.000000e+00\l  %109 = fadd float %108, -1.000000e+00\l  %110 = fsub float %104, %109\l  %111 = tail call float @llvm.amdgcn.rcp.f32(float %108)\l  %112 = fmul float %107, %111\l  %113 = fmul float %108, %112\l  %114 = fneg float %113\l  %115 = tail call float @llvm.fma.f32(float %112, float %108, float %114)\l  %116 = tail call float @llvm.fma.f32(float %112, float %110, float %115)\l  %117 = fadd float %113, %116\l  %118 = fsub float %117, %113\l  %119 = fsub float %116, %118\l  %120 = fsub float %107, %117\l  %121 = fsub float %107, %120\l  %122 = fsub float %121, %117\l  %123 = fsub float %122, %119\l  %124 = fadd float %120, %123\l  %125 = fmul float %111, %124\l  %126 = fadd float %112, %125\l  %127 = fsub float %126, %112\l  %128 = fsub float %125, %127\l  %129 = fmul float %126, %126\l  %130 = fneg float %129\l  %131 = tail call float @llvm.fma.f32(float %126, float %126, float %130)\l  %132 = fmul float %128, 2.000000e+00\l  %133 = tail call float @llvm.fma.f32(float %126, float %132, float %131)\l  %134 = fadd float %129, %133\l  %135 = fsub float %134, %129\l  %136 = fsub float %133, %135\l  %137 = tail call float @llvm.fmuladd.f32(float %134, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %138 = tail call float @llvm.fmuladd.f32(float %134, float %137, float\l... 0x3FD999BDE0000000)\l  %139 = sitofp i32 %106 to float\l  %140 = fmul float %139, 0x3FE62E4300000000\l  %141 = fneg float %140\l  %142 = tail call float @llvm.fma.f32(float %139, float 0x3FE62E4300000000,\l... float %141)\l  %143 = tail call float @llvm.fma.f32(float %139, float 0xBE205C6100000000,\l... float %142)\l  %144 = fadd float %140, %143\l  %145 = fsub float %144, %140\l  %146 = fsub float %143, %145\l  %147 = tail call float @llvm.amdgcn.ldexp.f32(float %126, i32 1)\l  %148 = fmul float %126, %134\l  %149 = fneg float %148\l  %150 = tail call float @llvm.fma.f32(float %134, float %126, float %149)\l  %151 = tail call float @llvm.fma.f32(float %134, float %128, float %150)\l  %152 = tail call float @llvm.fma.f32(float %136, float %126, float %151)\l  %153 = fadd float %148, %152\l  %154 = fsub float %153, %148\l  %155 = fsub float %152, %154\l  %156 = fmul float %134, %138\l  %157 = fneg float %156\l  %158 = tail call float @llvm.fma.f32(float %134, float %138, float %157)\l  %159 = tail call float @llvm.fma.f32(float %136, float %138, float %158)\l  %160 = fadd float %156, %159\l  %161 = fsub float %160, %156\l  %162 = fsub float %159, %161\l  %163 = fadd float %160, 0x3FE5555540000000\l  %164 = fadd float %163, 0xBFE5555540000000\l  %165 = fsub float %160, %164\l  %166 = fadd float %162, 0x3E2E720200000000\l  %167 = fadd float %166, %165\l  %168 = fadd float %163, %167\l  %169 = fsub float %168, %163\l  %170 = fsub float %167, %169\l  %171 = fmul float %153, %168\l  %172 = fneg float %171\l  %173 = tail call float @llvm.fma.f32(float %153, float %168, float %172)\l  %174 = tail call float @llvm.fma.f32(float %153, float %170, float %173)\l  %175 = tail call float @llvm.fma.f32(float %155, float %168, float %174)\l  %176 = tail call float @llvm.amdgcn.ldexp.f32(float %128, i32 1)\l  %177 = fadd float %171, %175\l  %178 = fsub float %177, %171\l  %179 = fsub float %175, %178\l  %180 = fadd float %147, %177\l  %181 = fsub float %180, %147\l  %182 = fsub float %177, %181\l  %183 = fadd float %176, %179\l  %184 = fadd float %183, %182\l  %185 = fadd float %180, %184\l  %186 = fsub float %185, %180\l  %187 = fsub float %184, %186\l  %188 = fadd float %144, %185\l  %189 = fsub float %188, %144\l  %190 = fsub float %188, %189\l  %191 = fsub float %144, %190\l  %192 = fsub float %185, %189\l  %193 = fadd float %192, %191\l  %194 = fadd float %146, %187\l  %195 = fsub float %194, %146\l  %196 = fsub float %194, %195\l  %197 = fsub float %146, %196\l  %198 = fsub float %187, %195\l  %199 = fadd float %198, %197\l  %200 = fadd float %194, %193\l  %201 = fadd float %188, %200\l  %202 = fsub float %201, %188\l  %203 = fsub float %200, %202\l  %204 = fadd float %199, %203\l  %205 = fadd float %201, %204\l  %206 = fsub float %205, %201\l  %207 = fsub float %204, %206\l  %208 = fmul float %99, %205\l  %209 = fneg float %208\l  %210 = tail call float @llvm.fma.f32(float %99, float %205, float %209)\l  %211 = tail call float @llvm.fma.f32(float %99, float %207, float %210)\l  %212 = fadd float %208, %211\l  %213 = fsub float %212, %208\l  %214 = fsub float %211, %213\l  %215 = tail call float @llvm.fabs.f32(float %208) #3\l  %216 = fcmp oeq float %215, 0x7FF0000000000000\l  %217 = select i1 %216, float %208, float %212\l  %218 = tail call float @llvm.fabs.f32(float %217) #3\l  %219 = fcmp oeq float %218, 0x7FF0000000000000\l  %220 = select i1 %219, float 0.000000e+00, float %214\l  %221 = fcmp oeq float %217, 0x40562E4300000000\l  %222 = select i1 %221, float 0x3EE0000000000000, float 0.000000e+00\l  %223 = fsub float %217, %222\l  %224 = fadd float %222, %220\l  %225 = fmul float %223, 0x3FF7154760000000\l  %226 = tail call float @llvm.rint.f32(float %225)\l  %227 = fcmp ogt float %223, 0x40562E4300000000\l  %228 = fcmp olt float %223, 0xC059D1DA00000000\l  %229 = fneg float %225\l  %230 = tail call float @llvm.fma.f32(float %223, float 0x3FF7154760000000,\l... float %229)\l  %231 = tail call float @llvm.fma.f32(float %223, float 0x3E54AE0BE0000000,\l... float %230)\l  %232 = fsub float %225, %226\l  %233 = fadd float %231, %232\l  %234 = tail call float @llvm.exp2.f32(float %233)\l  %235 = fptosi float %226 to i32\l  %236 = tail call float @llvm.amdgcn.ldexp.f32(float %234, i32 %235)\l  %237 = select i1 %228, float 0.000000e+00, float %236\l  %238 = select i1 %227, float 0x7FF0000000000000, float %237\l  %239 = tail call float @llvm.fma.f32(float %238, float %224, float %238)\l  %240 = tail call float @llvm.fabs.f32(float %238) #3\l  %241 = fcmp oeq float %240, 0x7FF0000000000000\l  %242 = select i1 %241, float %238, float %239\l  %243 = tail call float @llvm.fabs.f32(float %99)\l  %244 = tail call float @llvm.trunc.f32(float %243)\l  %245 = fcmp oeq float %243, %244\l  %246 = zext i1 %245 to i32\l  %247 = fmul float %244, 5.000000e-01\l  %248 = tail call float @llvm.amdgcn.fract.f32(float %247)\l  %249 = tail call i1 @llvm.amdgcn.class.f32(float %247, i32 516)\l  %250 = select i1 %249, float 0.000000e+00, float %248\l  %251 = fcmp oeq float %250, 0.000000e+00\l  %252 = and i1 %245, %251\l  %253 = zext i1 %252 to i32\l  %254 = add nuw nsw i32 %253, %246\l  %255 = icmp eq i32 %254, 1\l  %256 = fcmp olt float %98, 0.000000e+00\l  %257 = and i1 %255, %256\l  %258 = select i1 %257, float -0.000000e+00, float 0.000000e+00\l  %259 = tail call float @llvm.copysign.f32(float %242, float %258)\l  %260 = fcmp uge float %98, 0.000000e+00\l  %261 = icmp ne i32 %254, 0\l  %262 = select i1 %260, i1 true, i1 %261\l  %263 = select i1 %262, float %259, float 0x7FF8000000000000\l  %264 = fcmp oeq float %243, 0x7FF0000000000000\l  br i1 %264, label %265, label %274\l|{<s0>T|<s1>F}}"];
	Node0x5ca8f70:s0 -> Node0x5cafe40;
	Node0x5ca8f70:s1 -> Node0x5cb6ab0;
	Node0x5cafe40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%265:\l265:                                              \l  %266 = fcmp oeq float %100, 1.000000e+00\l  %267 = fadd float %100, -1.000000e+00\l  %268 = bitcast float %99 to i32\l  %269 = bitcast float %267 to i32\l  %270 = xor i32 %269, %268\l  %271 = icmp sgt i32 %270, -1\l  %272 = select i1 %271, float 0x7FF0000000000000, float 0.000000e+00\l  %273 = select i1 %266, float %100, float %272\l  br label %274\l}"];
	Node0x5cafe40 -> Node0x5cb6ab0;
	Node0x5cb6ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%274:\l274:                                              \l  %275 = phi float [ %263, %28 ], [ %273, %265 ]\l  %276 = fcmp oeq float %100, 0x7FF0000000000000\l  %277 = fcmp oeq float %98, 0.000000e+00\l  %278 = or i1 %277, %276\l  %279 = fcmp olt float %99, 0.000000e+00\l  %280 = xor i1 %279, %277\l  %281 = select i1 %280, float 0.000000e+00, float 0x7FF0000000000000\l  %282 = select i1 %255, float %98, float 0.000000e+00\l  %283 = tail call float @llvm.copysign.f32(float %281, float %282)\l  %284 = select i1 %278, float %283, float %275\l  %285 = fcmp uno float %98, %99\l  %286 = select i1 %285, float 0x7FF8000000000000, float %284\l  %287 = fcmp oeq float %98, 1.000000e+00\l  %288 = fcmp oeq float %99, 0.000000e+00\l  %289 = or i1 %288, %287\l  %290 = select i1 %289, float 1.000000e+00, float %286\l  %291 = fdiv contract float %290, %51\l  %292 = fmul contract float %34, %291\l  %293 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  store float %292, float addrspace(1)* %293, align 4, !tbaa !7\l  %294 = fmul contract float %38, %291\l  %295 = getelementptr inbounds float, float addrspace(1)* %1, i64 %36\l  store float %294, float addrspace(1)* %295, align 4, !tbaa !7\l  %296 = fmul contract float %42, %291\l  %297 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  store float %296, float addrspace(1)* %297, align 4, !tbaa !7\l  br label %298\l}"];
	Node0x5cb6ab0 -> Node0x5ca9000;
	Node0x5ca9000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%298:\l298:                                              \l  ret void\l}"];
}
