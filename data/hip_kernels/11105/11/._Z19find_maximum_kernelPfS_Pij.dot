digraph "CFG for '_Z19find_maximum_kernelPfS_Pij' function" {
	label="CFG for '_Z19find_maximum_kernelPfS_Pij' function";

	Node0x52a7990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = udiv i32 %14, %11\l  %18 = mul i32 %17, %11\l  %19 = icmp ugt i32 %14, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %11\l  %23 = mul i32 %16, 3\l  %24 = add i32 %23, 2\l  %25 = icmp ult i32 %24, %3\l  br i1 %25, label %26, label %56\l|{<s0>T|<s1>F}}"];
	Node0x52a7990:s0 -> Node0x52a79e0;
	Node0x52a7990:s1 -> Node0x52aa120;
	Node0x52a79e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i32 [ %54, %26 ], [ %24, %4 ]\l  %28 = phi i32 [ %53, %26 ], [ %23, %4 ]\l  %29 = phi i32 [ %51, %26 ], [ 0, %4 ]\l  %30 = phi float [ %50, %26 ], [ -1.000000e+00, %4 ]\l  %31 = zext i32 %28 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %34 = add i32 %28, 1\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %38 = zext i32 %27 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %41 = fpext float %33 to double\l  %42 = fmul contract double %41, 7.220000e-02\l  %43 = fpext float %37 to double\l  %44 = fmul contract double %43, 7.152000e-01\l  %45 = fadd contract double %42, %44\l  %46 = fpext float %40 to double\l  %47 = fmul contract double %46, 2.126000e-01\l  %48 = fadd contract double %45, %47\l  %49 = fptrunc double %48 to float\l  %50 = tail call float @llvm.maxnum.f32(float %30, float %49)\l  %51 = add i32 %29, %22\l  %52 = add i32 %16, %51\l  %53 = mul i32 %52, 3\l  %54 = add i32 %53, 2\l  %55 = icmp ult i32 %54, %3\l  br i1 %55, label %26, label %56, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x52a79e0:s0 -> Node0x52a79e0;
	Node0x52a79e0:s1 -> Node0x52aa120;
	Node0x52aa120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%56:\l56:                                               \l  %57 = phi float [ -1.000000e+00, %4 ], [ %50, %26 ]\l  %58 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @cache,\l... i32 0, i32 %5\l  store float %57, float addrspace(3)* %58, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %59 = icmp ult i16 %10, 2\l  br i1 %59, label %72, label %60\l|{<s0>T|<s1>F}}"];
	Node0x52aa120:s0 -> Node0x52ad5b0;
	Node0x52aa120:s1 -> Node0x52ad640;
	Node0x52ad640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  %61 = phi i32 [ %62, %70 ], [ %11, %56 ]\l  %62 = lshr i32 %61, 1\l  %63 = icmp ult i32 %5, %62\l  br i1 %63, label %64, label %70\l|{<s0>T|<s1>F}}"];
	Node0x52ad640:s0 -> Node0x52ada10;
	Node0x52ad640:s1 -> Node0x52ad7b0;
	Node0x52ada10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%64:\l64:                                               \l  %65 = load float, float addrspace(3)* %58, align 4, !tbaa !16\l  %66 = add nuw nsw i32 %62, %5\l  %67 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @cache,\l... i32 0, i32 %66\l  %68 = load float, float addrspace(3)* %67, align 4, !tbaa !16\l  %69 = tail call float @llvm.maxnum.f32(float %65, float %68)\l  store float %69, float addrspace(3)* %58, align 4, !tbaa !16\l  br label %70\l}"];
	Node0x52ada10 -> Node0x52ad7b0;
	Node0x52ad7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %71 = icmp ult i32 %61, 4\l  br i1 %71, label %72, label %60, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x52ad7b0:s0 -> Node0x52ad5b0;
	Node0x52ad7b0:s1 -> Node0x52ad640;
	Node0x52ad5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%72:\l72:                                               \l  %73 = icmp eq i32 %5, 0\l  br i1 %73, label %74, label %82\l|{<s0>T|<s1>F}}"];
	Node0x52ad5b0:s0 -> Node0x52ae5a0;
	Node0x52ad5b0:s1 -> Node0x52ae5f0;
	Node0x52ae5a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%74:\l74:                                               \l  %75 = cmpxchg i32 addrspace(1)* %2, i32 0, i32 1 syncscope(\"agent-one-as\")\l... monotonic monotonic, align 4\l  %76 = extractvalue \{ i32, i1 \} %75, 1\l  br i1 %76, label %77, label %74, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x52ae5a0:s0 -> Node0x52aeab0;
	Node0x52ae5a0:s1 -> Node0x52ae5a0;
	Node0x52aeab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%77:\l77:                                               \l  %78 = load float, float addrspace(1)* %1, align 4, !tbaa !16\l  %79 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @cache, i32 0, i32 0), align 4, !tbaa !16\l  %80 = tail call float @llvm.maxnum.f32(float %78, float %79)\l  store float %80, float addrspace(1)* %1, align 4, !tbaa !16\l  %81 = atomicrmw xchg i32 addrspace(1)* %2, i32 0 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  br label %82\l}"];
	Node0x52aeab0 -> Node0x52ae5f0;
	Node0x52ae5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%82:\l82:                                               \l  ret void\l}"];
}
