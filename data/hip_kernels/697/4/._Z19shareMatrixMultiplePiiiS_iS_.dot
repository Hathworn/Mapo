digraph "CFG for '_Z19shareMatrixMultiplePiiiS_iS_' function" {
	label="CFG for '_Z19shareMatrixMultiplePiiiS_iS_' function";

	Node0x4622ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = shl i32 %7, 5\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %10 = add i32 %8, %9\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = shl i32 %11, 5\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = add i32 %12, %13\l  %15 = add i32 %1, 1\l  %16 = sub i32 %15, %4\l  %17 = add nsw i32 %4, 31\l  %18 = mul nsw i32 %10, %1\l  %19 = add nsw i32 %18, %14\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %20\l  %22 = load i32, i32 addrspace(1)* %21, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %23 = mul i32 %17, %9\l  %24 = add i32 %23, %13\l  %25 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @tileImage,\l... i32 0, i32 %24\l  store i32 %22, i32 addrspace(3)* %25, align 4, !tbaa !5\l  %26 = add nsw i32 %4, -1\l  %27 = icmp uge i32 %13, %26\l  br i1 %27, label %35, label %28\l|{<s0>T|<s1>F}}"];
	Node0x4622ae0:s0 -> Node0x4625f80;
	Node0x4622ae0:s1 -> Node0x4626010;
	Node0x4626010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%28:\l28:                                               \l  %29 = add nsw i32 %19, 32\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %33 = add i32 %24, 32\l  %34 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @tileImage,\l... i32 0, i32 %33\l  store i32 %32, i32 addrspace(3)* %34, align 4, !tbaa !5\l  br label %35\l}"];
	Node0x4626010 -> Node0x4625f80;
	Node0x4625f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%35:\l35:                                               \l  %36 = icmp uge i32 %9, %26\l  br i1 %36, label %48, label %37\l|{<s0>T|<s1>F}}"];
	Node0x4625f80:s0 -> Node0x4624f60;
	Node0x4625f80:s1 -> Node0x4626e00;
	Node0x4626e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%37:\l37:                                               \l  %38 = add nsw i32 %10, 32\l  %39 = mul nsw i32 %38, %1\l  %40 = add nsw i32 %39, %14\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %44 = add nuw nsw i32 %9, 32\l  %45 = mul i32 %17, %44\l  %46 = add i32 %45, %13\l  %47 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @tileImage,\l... i32 0, i32 %46\l  store i32 %43, i32 addrspace(3)* %47, align 4, !tbaa !5\l  br label %48\l}"];
	Node0x4626e00 -> Node0x4624f60;
	Node0x4624f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%48:\l48:                                               \l  %49 = select i1 %27, i1 true, i1 %36\l  br i1 %49, label %63, label %50\l|{<s0>T|<s1>F}}"];
	Node0x4624f60:s0 -> Node0x4627690;
	Node0x4624f60:s1 -> Node0x46276e0;
	Node0x46276e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%50:\l50:                                               \l  %51 = add nsw i32 %10, 32\l  %52 = mul nsw i32 %51, %1\l  %53 = add i32 %14, 32\l  %54 = add i32 %53, %52\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %55\l  %57 = load i32, i32 addrspace(1)* %56, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %58 = add nuw nsw i32 %9, 32\l  %59 = mul i32 %17, %58\l  %60 = add nuw nsw i32 %13, 32\l  %61 = add i32 %60, %59\l  %62 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @tileImage,\l... i32 0, i32 %61\l  store i32 %57, i32 addrspace(3)* %62, align 4, !tbaa !5\l  br label %63\l}"];
	Node0x46276e0 -> Node0x4627690;
	Node0x4627690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%63:\l63:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %64 = mul nsw i32 %2, %1\l  %65 = icmp slt i32 %19, %64\l  br i1 %65, label %66, label %196\l|{<s0>T|<s1>F}}"];
	Node0x4627690:s0 -> Node0x4626a30;
	Node0x4627690:s1 -> Node0x4626a80;
	Node0x4626a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%66:\l66:                                               \l  %67 = icmp sgt i32 %4, 0\l  br i1 %67, label %68, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4626a30:s0 -> Node0x4628840;
	Node0x4626a30:s1 -> Node0x4628890;
	Node0x4628840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%68:\l68:                                               \l  %69 = and i32 %4, 7\l  %70 = icmp ult i32 %4, 8\l  %71 = and i32 %4, -8\l  %72 = icmp eq i32 %69, 0\l  br label %73\l}"];
	Node0x4628840 -> Node0x4628c70;
	Node0x4628c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%73:\l73:                                               \l  %74 = phi i32 [ %108, %106 ], [ 0, %68 ]\l  %75 = phi i32 [ %107, %106 ], [ 0, %68 ]\l  %76 = mul nsw i32 %74, %4\l  %77 = add nuw i32 %74, %9\l  %78 = mul i32 %77, %17\l  %79 = add i32 %78, %13\l  br i1 %70, label %86, label %110\l|{<s0>T|<s1>F}}"];
	Node0x4628c70:s0 -> Node0x4629200;
	Node0x4628c70:s1 -> Node0x4629290;
	Node0x4628890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%80:\l80:                                               \l  %81 = phi i32 [ 0, %66 ], [ %107, %106 ]\l  %82 = mul nsw i32 %16, %10\l  %83 = add nsw i32 %82, %14\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %84\l  store i32 %81, i32 addrspace(1)* %85, align 4, !tbaa !5\l  br label %196\l}"];
	Node0x4628890 -> Node0x4626a80;
	Node0x4629200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%86:\l86:                                               \l  %87 = phi i32 [ undef, %73 ], [ %192, %110 ]\l  %88 = phi i32 [ 0, %73 ], [ %193, %110 ]\l  %89 = phi i32 [ %75, %73 ], [ %192, %110 ]\l  br i1 %72, label %106, label %90\l|{<s0>T|<s1>F}}"];
	Node0x4629200:s0 -> Node0x4628d60;
	Node0x4629200:s1 -> Node0x4629e40;
	Node0x4629e40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = phi i32 [ %103, %90 ], [ %88, %86 ]\l  %92 = phi i32 [ %102, %90 ], [ %89, %86 ]\l  %93 = phi i32 [ %104, %90 ], [ 0, %86 ]\l  %94 = add nsw i32 %91, %76\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %95\l  %97 = load i32, i32 addrspace(1)* %96, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %98 = add i32 %79, %91\l  %99 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @tileImage,\l... i32 0, i32 %98\l  %100 = load i32, i32 addrspace(3)* %99, align 4, !tbaa !5\l  %101 = mul nsw i32 %100, %97\l  %102 = add nsw i32 %101, %92\l  %103 = add nuw nsw i32 %91, 1\l  %104 = add i32 %93, 1\l  %105 = icmp eq i32 %104, %69\l  br i1 %105, label %106, label %90, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4629e40:s0 -> Node0x4628d60;
	Node0x4629e40:s1 -> Node0x4629e40;
	Node0x4628d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%106:\l106:                                              \l  %107 = phi i32 [ %87, %86 ], [ %102, %90 ]\l  %108 = add nuw nsw i32 %74, 1\l  %109 = icmp eq i32 %108, %4\l  br i1 %109, label %80, label %73, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4628d60:s0 -> Node0x4628890;
	Node0x4628d60:s1 -> Node0x4628c70;
	Node0x4629290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%110:\l110:                                              \l  %111 = phi i32 [ %193, %110 ], [ 0, %73 ]\l  %112 = phi i32 [ %192, %110 ], [ %75, %73 ]\l  %113 = phi i32 [ %194, %110 ], [ 0, %73 ]\l  %114 = add nsw i32 %111, %76\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %115\l  %117 = load i32, i32 addrspace(1)* %116, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %118 = add i32 %79, %111\l  %119 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @tileImage,\l... i32 0, i32 %118\l  %120 = load i32, i32 addrspace(3)* %119, align 4, !tbaa !5\l  %121 = mul nsw i32 %120, %117\l  %122 = add nsw i32 %121, %112\l  %123 = or i32 %111, 1\l  %124 = add nsw i32 %123, %76\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %125\l  %127 = load i32, i32 addrspace(1)* %126, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %128 = add i32 %79, %123\l  %129 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @tileImage,\l... i32 0, i32 %128\l  %130 = load i32, i32 addrspace(3)* %129, align 4, !tbaa !5\l  %131 = mul nsw i32 %130, %127\l  %132 = add nsw i32 %131, %122\l  %133 = or i32 %111, 2\l  %134 = add nsw i32 %133, %76\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %135\l  %137 = load i32, i32 addrspace(1)* %136, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %138 = add i32 %79, %133\l  %139 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @tileImage,\l... i32 0, i32 %138\l  %140 = load i32, i32 addrspace(3)* %139, align 4, !tbaa !5\l  %141 = mul nsw i32 %140, %137\l  %142 = add nsw i32 %141, %132\l  %143 = or i32 %111, 3\l  %144 = add nsw i32 %143, %76\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %145\l  %147 = load i32, i32 addrspace(1)* %146, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %148 = add i32 %79, %143\l  %149 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @tileImage,\l... i32 0, i32 %148\l  %150 = load i32, i32 addrspace(3)* %149, align 4, !tbaa !5\l  %151 = mul nsw i32 %150, %147\l  %152 = add nsw i32 %151, %142\l  %153 = or i32 %111, 4\l  %154 = add nsw i32 %153, %76\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %155\l  %157 = load i32, i32 addrspace(1)* %156, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %158 = add i32 %79, %153\l  %159 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @tileImage,\l... i32 0, i32 %158\l  %160 = load i32, i32 addrspace(3)* %159, align 4, !tbaa !5\l  %161 = mul nsw i32 %160, %157\l  %162 = add nsw i32 %161, %152\l  %163 = or i32 %111, 5\l  %164 = add nsw i32 %163, %76\l  %165 = sext i32 %164 to i64\l  %166 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %165\l  %167 = load i32, i32 addrspace(1)* %166, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %168 = add i32 %79, %163\l  %169 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @tileImage,\l... i32 0, i32 %168\l  %170 = load i32, i32 addrspace(3)* %169, align 4, !tbaa !5\l  %171 = mul nsw i32 %170, %167\l  %172 = add nsw i32 %171, %162\l  %173 = or i32 %111, 6\l  %174 = add nsw i32 %173, %76\l  %175 = sext i32 %174 to i64\l  %176 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %175\l  %177 = load i32, i32 addrspace(1)* %176, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %178 = add i32 %79, %173\l  %179 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @tileImage,\l... i32 0, i32 %178\l  %180 = load i32, i32 addrspace(3)* %179, align 4, !tbaa !5\l  %181 = mul nsw i32 %180, %177\l  %182 = add nsw i32 %181, %172\l  %183 = or i32 %111, 7\l  %184 = add nsw i32 %183, %76\l  %185 = sext i32 %184 to i64\l  %186 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %185\l  %187 = load i32, i32 addrspace(1)* %186, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %188 = add i32 %79, %183\l  %189 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @tileImage,\l... i32 0, i32 %188\l  %190 = load i32, i32 addrspace(3)* %189, align 4, !tbaa !5\l  %191 = mul nsw i32 %190, %187\l  %192 = add nsw i32 %191, %182\l  %193 = add nuw nsw i32 %111, 8\l  %194 = add i32 %113, 8\l  %195 = icmp eq i32 %194, %71\l  br i1 %195, label %86, label %110, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4629290:s0 -> Node0x4629200;
	Node0x4629290:s1 -> Node0x4629290;
	Node0x4626a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%196:\l196:                                              \l  ret void\l}"];
}
