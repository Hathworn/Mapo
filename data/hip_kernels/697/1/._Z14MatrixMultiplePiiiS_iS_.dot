digraph "CFG for '_Z14MatrixMultiplePiiiS_iS_' function" {
	label="CFG for '_Z14MatrixMultiplePiiiS_iS_' function";

	Node0x64b09d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = shl i32 %7, 5\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %10 = add i32 %8, %9\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = shl i32 %11, 5\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = add i32 %12, %13\l  %15 = add i32 %1, 1\l  %16 = sub i32 %15, %4\l  %17 = mul nsw i32 %10, %1\l  %18 = add nsw i32 %17, %14\l  %19 = mul nsw i32 %2, %1\l  %20 = icmp slt i32 %18, %19\l  br i1 %20, label %21, label %160\l|{<s0>T|<s1>F}}"];
	Node0x64b09d0:s0 -> Node0x64b3010;
	Node0x64b09d0:s1 -> Node0x64b30a0;
	Node0x64b3010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%21:\l21:                                               \l  %22 = icmp sgt i32 %4, 0\l  br i1 %22, label %23, label %35\l|{<s0>T|<s1>F}}"];
	Node0x64b3010:s0 -> Node0x64b32a0;
	Node0x64b3010:s1 -> Node0x64b32f0;
	Node0x64b32a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%23:\l23:                                               \l  %24 = and i32 %4, 7\l  %25 = icmp ult i32 %4, 8\l  %26 = and i32 %4, -8\l  %27 = icmp eq i32 %24, 0\l  br label %28\l}"];
	Node0x64b32a0 -> Node0x64b3700;
	Node0x64b3700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%28:\l28:                                               \l  %29 = phi i32 [ %64, %62 ], [ 0, %23 ]\l  %30 = phi i32 [ %63, %62 ], [ 0, %23 ]\l  %31 = mul nsw i32 %29, %4\l  %32 = add nsw i32 %29, %10\l  %33 = mul nsw i32 %32, %1\l  %34 = add nsw i32 %33, %14\l  br i1 %25, label %41, label %66\l|{<s0>T|<s1>F}}"];
	Node0x64b3700:s0 -> Node0x64b2de0;
	Node0x64b3700:s1 -> Node0x64b3e50;
	Node0x64b32f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%35:\l35:                                               \l  %36 = phi i32 [ 0, %21 ], [ %63, %62 ]\l  %37 = mul nsw i32 %16, %10\l  %38 = add nsw i32 %37, %14\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %39\l  store i32 %36, i32 addrspace(1)* %40, align 4, !tbaa !5\l  br label %160\l}"];
	Node0x64b32f0 -> Node0x64b30a0;
	Node0x64b2de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = phi i32 [ undef, %28 ], [ %156, %66 ]\l  %43 = phi i32 [ 0, %28 ], [ %157, %66 ]\l  %44 = phi i32 [ %30, %28 ], [ %156, %66 ]\l  br i1 %27, label %62, label %45\l|{<s0>T|<s1>F}}"];
	Node0x64b2de0:s0 -> Node0x64b37f0;
	Node0x64b2de0:s1 -> Node0x64b4b00;
	Node0x64b4b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = phi i32 [ %59, %45 ], [ %43, %41 ]\l  %47 = phi i32 [ %58, %45 ], [ %44, %41 ]\l  %48 = phi i32 [ %60, %45 ], [ 0, %41 ]\l  %49 = add nsw i32 %46, %31\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %53 = add nsw i32 %34, %46\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %54\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %57 = mul nsw i32 %56, %52\l  %58 = add nsw i32 %57, %47\l  %59 = add nuw nsw i32 %46, 1\l  %60 = add i32 %48, 1\l  %61 = icmp eq i32 %60, %24\l  br i1 %61, label %62, label %45, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x64b4b00:s0 -> Node0x64b37f0;
	Node0x64b4b00:s1 -> Node0x64b4b00;
	Node0x64b37f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%62:\l62:                                               \l  %63 = phi i32 [ %42, %41 ], [ %58, %45 ]\l  %64 = add nuw nsw i32 %29, 1\l  %65 = icmp eq i32 %64, %4\l  br i1 %65, label %35, label %28, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x64b37f0:s0 -> Node0x64b32f0;
	Node0x64b37f0:s1 -> Node0x64b3700;
	Node0x64b3e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%66:\l66:                                               \l  %67 = phi i32 [ %157, %66 ], [ 0, %28 ]\l  %68 = phi i32 [ %156, %66 ], [ %30, %28 ]\l  %69 = phi i32 [ %158, %66 ], [ 0, %28 ]\l  %70 = add nsw i32 %67, %31\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %71\l  %73 = load i32, i32 addrspace(1)* %72, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %74 = add nsw i32 %34, %67\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %75\l  %77 = load i32, i32 addrspace(1)* %76, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %78 = mul nsw i32 %77, %73\l  %79 = add nsw i32 %78, %68\l  %80 = or i32 %67, 1\l  %81 = add nsw i32 %80, %31\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %82\l  %84 = load i32, i32 addrspace(1)* %83, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %85 = add nsw i32 %34, %80\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %86\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %89 = mul nsw i32 %88, %84\l  %90 = add nsw i32 %89, %79\l  %91 = or i32 %67, 2\l  %92 = add nsw i32 %91, %31\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %93\l  %95 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %96 = add nsw i32 %34, %91\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %97\l  %99 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %100 = mul nsw i32 %99, %95\l  %101 = add nsw i32 %100, %90\l  %102 = or i32 %67, 3\l  %103 = add nsw i32 %102, %31\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %104\l  %106 = load i32, i32 addrspace(1)* %105, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %107 = add nsw i32 %34, %102\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %108\l  %110 = load i32, i32 addrspace(1)* %109, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %111 = mul nsw i32 %110, %106\l  %112 = add nsw i32 %111, %101\l  %113 = or i32 %67, 4\l  %114 = add nsw i32 %113, %31\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %115\l  %117 = load i32, i32 addrspace(1)* %116, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %118 = add nsw i32 %34, %113\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %119\l  %121 = load i32, i32 addrspace(1)* %120, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %122 = mul nsw i32 %121, %117\l  %123 = add nsw i32 %122, %112\l  %124 = or i32 %67, 5\l  %125 = add nsw i32 %124, %31\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %126\l  %128 = load i32, i32 addrspace(1)* %127, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %129 = add nsw i32 %34, %124\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %130\l  %132 = load i32, i32 addrspace(1)* %131, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %133 = mul nsw i32 %132, %128\l  %134 = add nsw i32 %133, %123\l  %135 = or i32 %67, 6\l  %136 = add nsw i32 %135, %31\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %137\l  %139 = load i32, i32 addrspace(1)* %138, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %140 = add nsw i32 %34, %135\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %141\l  %143 = load i32, i32 addrspace(1)* %142, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %144 = mul nsw i32 %143, %139\l  %145 = add nsw i32 %144, %134\l  %146 = or i32 %67, 7\l  %147 = add nsw i32 %146, %31\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %148\l  %150 = load i32, i32 addrspace(1)* %149, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %151 = add nsw i32 %34, %146\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %152\l  %154 = load i32, i32 addrspace(1)* %153, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %155 = mul nsw i32 %154, %150\l  %156 = add nsw i32 %155, %145\l  %157 = add nuw nsw i32 %67, 8\l  %158 = add i32 %69, 8\l  %159 = icmp eq i32 %158, %26\l  br i1 %159, label %41, label %66, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x64b3e50:s0 -> Node0x64b2de0;
	Node0x64b3e50:s1 -> Node0x64b3e50;
	Node0x64b30a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%160:\l160:                                              \l  ret void\l}"];
}
