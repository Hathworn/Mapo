digraph "CFG for '_Z13windowHammingPfi' function" {
	label="CFG for '_Z13windowHammingPfi' function";

	Node0x5b86c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = add i32 %10, %3\l  %12 = icmp slt i32 %11, %1\l  br i1 %12, label %13, label %164\l|{<s0>T|<s1>F}}"];
	Node0x5b86c70:s0 -> Node0x5b87be0;
	Node0x5b86c70:s1 -> Node0x5b88c00;
	Node0x5b87be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%13:\l13:                                               \l  %14 = shl nsw i32 %11, 1\l  %15 = sitofp i32 %14 to float\l  %16 = fmul contract float %15, 0x400921FA00000000\l  %17 = add nsw i32 %1, -1\l  %18 = sitofp i32 %17 to float\l  %19 = fdiv contract float %16, %18\l  %20 = tail call float @llvm.fabs.f32(float %19)\l  %21 = fcmp olt float %20, 1.310720e+05\l  br i1 %21, label %22, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5b87be0:s0 -> Node0x5b89e10;
	Node0x5b87be0:s1 -> Node0x5b89ea0;
	Node0x5b89e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%22:\l22:                                               \l  %23 = fmul float %20, 0x3FE45F3060000000\l  %24 = tail call float @llvm.rint.f32(float %23)\l  %25 = tail call float @llvm.fma.f32(float %24, float 0xBFF921FB40000000,\l... float %20)\l  %26 = tail call float @llvm.fma.f32(float %24, float 0xBE74442D00000000,\l... float %25)\l  %27 = tail call float @llvm.fma.f32(float %24, float 0xBCF8469880000000,\l... float %26)\l  %28 = fptosi float %24 to i32\l  br label %135\l}"];
	Node0x5b89e10 -> Node0x5b8a8b0;
	Node0x5b89ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%29:\l29:                                               \l  %30 = bitcast float %20 to i32\l  %31 = lshr i32 %30, 23\l  %32 = and i32 %30, 8388607\l  %33 = or i32 %32, 8388608\l  %34 = zext i32 %33 to i64\l  %35 = mul nuw nsw i64 %34, 4266746795\l  %36 = trunc i64 %35 to i32\l  %37 = lshr i64 %35, 32\l  %38 = mul nuw nsw i64 %34, 1011060801\l  %39 = add nuw nsw i64 %37, %38\l  %40 = trunc i64 %39 to i32\l  %41 = lshr i64 %39, 32\l  %42 = mul nuw nsw i64 %34, 3680671129\l  %43 = add nuw nsw i64 %41, %42\l  %44 = trunc i64 %43 to i32\l  %45 = lshr i64 %43, 32\l  %46 = mul nuw nsw i64 %34, 4113882560\l  %47 = add nuw nsw i64 %45, %46\l  %48 = trunc i64 %47 to i32\l  %49 = lshr i64 %47, 32\l  %50 = mul nuw nsw i64 %34, 4230436817\l  %51 = add nuw nsw i64 %49, %50\l  %52 = trunc i64 %51 to i32\l  %53 = lshr i64 %51, 32\l  %54 = mul nuw nsw i64 %34, 1313084713\l  %55 = add nuw nsw i64 %53, %54\l  %56 = trunc i64 %55 to i32\l  %57 = lshr i64 %55, 32\l  %58 = mul nuw nsw i64 %34, 2734261102\l  %59 = add nuw nsw i64 %57, %58\l  %60 = trunc i64 %59 to i32\l  %61 = lshr i64 %59, 32\l  %62 = trunc i64 %61 to i32\l  %63 = add nsw i32 %31, -120\l  %64 = icmp ugt i32 %63, 63\l  %65 = select i1 %64, i32 %56, i32 %62\l  %66 = select i1 %64, i32 %52, i32 %60\l  %67 = select i1 %64, i32 %48, i32 %56\l  %68 = select i1 %64, i32 %44, i32 %52\l  %69 = select i1 %64, i32 %40, i32 %48\l  %70 = select i1 %64, i32 %36, i32 %44\l  %71 = select i1 %64, i32 -64, i32 0\l  %72 = add nsw i32 %71, %63\l  %73 = icmp ugt i32 %72, 31\l  %74 = select i1 %73, i32 %66, i32 %65\l  %75 = select i1 %73, i32 %67, i32 %66\l  %76 = select i1 %73, i32 %68, i32 %67\l  %77 = select i1 %73, i32 %69, i32 %68\l  %78 = select i1 %73, i32 %70, i32 %69\l  %79 = select i1 %73, i32 -32, i32 0\l  %80 = add nsw i32 %79, %72\l  %81 = icmp ugt i32 %80, 31\l  %82 = select i1 %81, i32 %75, i32 %74\l  %83 = select i1 %81, i32 %76, i32 %75\l  %84 = select i1 %81, i32 %77, i32 %76\l  %85 = select i1 %81, i32 %78, i32 %77\l  %86 = select i1 %81, i32 -32, i32 0\l  %87 = add nsw i32 %86, %80\l  %88 = icmp eq i32 %87, 0\l  %89 = sub nsw i32 32, %87\l  %90 = tail call i32 @llvm.fshr.i32(i32 %82, i32 %83, i32 %89)\l  %91 = tail call i32 @llvm.fshr.i32(i32 %83, i32 %84, i32 %89)\l  %92 = tail call i32 @llvm.fshr.i32(i32 %84, i32 %85, i32 %89)\l  %93 = select i1 %88, i32 %82, i32 %90\l  %94 = select i1 %88, i32 %83, i32 %91\l  %95 = select i1 %88, i32 %84, i32 %92\l  %96 = lshr i32 %93, 29\l  %97 = tail call i32 @llvm.fshl.i32(i32 %93, i32 %94, i32 2)\l  %98 = tail call i32 @llvm.fshl.i32(i32 %94, i32 %95, i32 2)\l  %99 = tail call i32 @llvm.fshl.i32(i32 %95, i32 %85, i32 2)\l  %100 = and i32 %96, 1\l  %101 = sub nsw i32 0, %100\l  %102 = shl i32 %96, 31\l  %103 = xor i32 %97, %101\l  %104 = xor i32 %98, %101\l  %105 = xor i32 %99, %101\l  %106 = tail call i32 @llvm.ctlz.i32(i32 %103, i1 false), !range !7\l  %107 = sub nsw i32 31, %106\l  %108 = tail call i32 @llvm.fshr.i32(i32 %103, i32 %104, i32 %107)\l  %109 = tail call i32 @llvm.fshr.i32(i32 %104, i32 %105, i32 %107)\l  %110 = shl nuw nsw i32 %106, 23\l  %111 = sub nuw nsw i32 1056964608, %110\l  %112 = lshr i32 %108, 9\l  %113 = or i32 %112, %111\l  %114 = or i32 %113, %102\l  %115 = bitcast i32 %114 to float\l  %116 = tail call i32 @llvm.fshl.i32(i32 %108, i32 %109, i32 23)\l  %117 = tail call i32 @llvm.ctlz.i32(i32 %116, i1 false), !range !7\l  %118 = fmul float %115, 0x3FF921FB40000000\l  %119 = add nuw nsw i32 %117, %106\l  %120 = shl nuw nsw i32 %119, 23\l  %121 = sub nuw nsw i32 855638016, %120\l  %122 = sub nsw i32 31, %117\l  %123 = tail call i32 @llvm.fshr.i32(i32 %116, i32 %109, i32 %122)\l  %124 = lshr i32 %123, 9\l  %125 = or i32 %121, %124\l  %126 = or i32 %125, %102\l  %127 = bitcast i32 %126 to float\l  %128 = fneg float %118\l  %129 = tail call float @llvm.fma.f32(float %115, float 0x3FF921FB40000000,\l... float %128)\l  %130 = tail call float @llvm.fma.f32(float %115, float 0x3E74442D00000000,\l... float %129)\l  %131 = tail call float @llvm.fma.f32(float %127, float 0x3FF921FB40000000,\l... float %130)\l  %132 = fadd float %118, %131\l  %133 = lshr i32 %93, 30\l  %134 = add nuw nsw i32 %100, %133\l  br label %135\l}"];
	Node0x5b89ea0 -> Node0x5b8a8b0;
	Node0x5b8a8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%135:\l135:                                              \l  %136 = phi float [ %27, %22 ], [ %132, %29 ]\l  %137 = phi i32 [ %28, %22 ], [ %134, %29 ]\l  %138 = fmul float %136, %136\l  %139 = tail call float @llvm.fmuladd.f32(float %138, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %140 = tail call float @llvm.fmuladd.f32(float %138, float %139, float\l... 0xBFC55553A0000000)\l  %141 = fmul float %138, %140\l  %142 = tail call float @llvm.fmuladd.f32(float %136, float %141, float %136)\l  %143 = tail call float @llvm.fmuladd.f32(float %138, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %144 = tail call float @llvm.fmuladd.f32(float %138, float %143, float\l... 0x3FA5557EE0000000)\l  %145 = tail call float @llvm.fmuladd.f32(float %138, float %144, float\l... 0xBFE0000080000000)\l  %146 = tail call float @llvm.fmuladd.f32(float %138, float %145, float\l... 1.000000e+00)\l  %147 = fneg float %142\l  %148 = and i32 %137, 1\l  %149 = icmp eq i32 %148, 0\l  %150 = select i1 %149, float %146, float %147\l  %151 = bitcast float %150 to i32\l  %152 = shl i32 %137, 30\l  %153 = and i32 %152, -2147483648\l  %154 = xor i32 %153, %151\l  %155 = bitcast i32 %154 to float\l  %156 = tail call i1 @llvm.amdgcn.class.f32(float %20, i32 504)\l  %157 = fpext float %155 to double\l  %158 = fmul contract double %157, 4.600000e-01\l  %159 = fsub contract double 5.400000e-01, %158\l  %160 = fptrunc double %159 to float\l  %161 = select i1 %156, float %160, float 0x7FF8000000000000\l  %162 = sext i32 %11 to i64\l  %163 = getelementptr inbounds float, float addrspace(1)* %0, i64 %162\l  store float %161, float addrspace(1)* %163, align 4, !tbaa !8\l  br label %164\l}"];
	Node0x5b8a8b0 -> Node0x5b88c00;
	Node0x5b88c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%164:\l164:                                              \l  ret void\l}"];
}
