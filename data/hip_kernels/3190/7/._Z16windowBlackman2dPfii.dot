digraph "CFG for '_Z16windowBlackman2dPfii' function" {
	label="CFG for '_Z16windowBlackman2dPfii' function";

	Node0x5052400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = add i32 %19, %13\l  %21 = icmp slt i32 %12, %1\l  %22 = icmp slt i32 %20, %2\l  %23 = select i1 %21, i1 %22, i1 false\l  br i1 %23, label %24, label %615\l|{<s0>T|<s1>F}}"];
	Node0x5052400:s0 -> Node0x5055e90;
	Node0x5052400:s1 -> Node0x5055f20;
	Node0x5055e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%24:\l24:                                               \l  %25 = sitofp i32 %20 to float\l  %26 = fmul contract float %25, 0x401921FA00000000\l  %27 = add nsw i32 %2, -1\l  %28 = sitofp i32 %27 to float\l  %29 = fdiv contract float %26, %28\l  %30 = tail call float @llvm.fabs.f32(float %29)\l  %31 = fcmp olt float %30, 1.310720e+05\l  br i1 %31, label %32, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5055e90:s0 -> Node0x5056fc0;
	Node0x5055e90:s1 -> Node0x5057050;
	Node0x5056fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%32:\l32:                                               \l  %33 = fmul float %30, 0x3FE45F3060000000\l  %34 = tail call float @llvm.rint.f32(float %33)\l  %35 = tail call float @llvm.fma.f32(float %34, float 0xBFF921FB40000000,\l... float %30)\l  %36 = tail call float @llvm.fma.f32(float %34, float 0xBE74442D00000000,\l... float %35)\l  %37 = tail call float @llvm.fma.f32(float %34, float 0xBCF8469880000000,\l... float %36)\l  %38 = fptosi float %34 to i32\l  br label %145\l}"];
	Node0x5056fc0 -> Node0x5057bb0;
	Node0x5057050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%39:\l39:                                               \l  %40 = bitcast float %30 to i32\l  %41 = lshr i32 %40, 23\l  %42 = and i32 %40, 8388607\l  %43 = or i32 %42, 8388608\l  %44 = zext i32 %43 to i64\l  %45 = mul nuw nsw i64 %44, 4266746795\l  %46 = trunc i64 %45 to i32\l  %47 = lshr i64 %45, 32\l  %48 = mul nuw nsw i64 %44, 1011060801\l  %49 = add nuw nsw i64 %47, %48\l  %50 = trunc i64 %49 to i32\l  %51 = lshr i64 %49, 32\l  %52 = mul nuw nsw i64 %44, 3680671129\l  %53 = add nuw nsw i64 %51, %52\l  %54 = trunc i64 %53 to i32\l  %55 = lshr i64 %53, 32\l  %56 = mul nuw nsw i64 %44, 4113882560\l  %57 = add nuw nsw i64 %55, %56\l  %58 = trunc i64 %57 to i32\l  %59 = lshr i64 %57, 32\l  %60 = mul nuw nsw i64 %44, 4230436817\l  %61 = add nuw nsw i64 %59, %60\l  %62 = trunc i64 %61 to i32\l  %63 = lshr i64 %61, 32\l  %64 = mul nuw nsw i64 %44, 1313084713\l  %65 = add nuw nsw i64 %63, %64\l  %66 = trunc i64 %65 to i32\l  %67 = lshr i64 %65, 32\l  %68 = mul nuw nsw i64 %44, 2734261102\l  %69 = add nuw nsw i64 %67, %68\l  %70 = trunc i64 %69 to i32\l  %71 = lshr i64 %69, 32\l  %72 = trunc i64 %71 to i32\l  %73 = add nsw i32 %41, -120\l  %74 = icmp ugt i32 %73, 63\l  %75 = select i1 %74, i32 %66, i32 %72\l  %76 = select i1 %74, i32 %62, i32 %70\l  %77 = select i1 %74, i32 %58, i32 %66\l  %78 = select i1 %74, i32 %54, i32 %62\l  %79 = select i1 %74, i32 %50, i32 %58\l  %80 = select i1 %74, i32 %46, i32 %54\l  %81 = select i1 %74, i32 -64, i32 0\l  %82 = add nsw i32 %81, %73\l  %83 = icmp ugt i32 %82, 31\l  %84 = select i1 %83, i32 %76, i32 %75\l  %85 = select i1 %83, i32 %77, i32 %76\l  %86 = select i1 %83, i32 %78, i32 %77\l  %87 = select i1 %83, i32 %79, i32 %78\l  %88 = select i1 %83, i32 %80, i32 %79\l  %89 = select i1 %83, i32 -32, i32 0\l  %90 = add nsw i32 %89, %82\l  %91 = icmp ugt i32 %90, 31\l  %92 = select i1 %91, i32 %85, i32 %84\l  %93 = select i1 %91, i32 %86, i32 %85\l  %94 = select i1 %91, i32 %87, i32 %86\l  %95 = select i1 %91, i32 %88, i32 %87\l  %96 = select i1 %91, i32 -32, i32 0\l  %97 = add nsw i32 %96, %90\l  %98 = icmp eq i32 %97, 0\l  %99 = sub nsw i32 32, %97\l  %100 = tail call i32 @llvm.fshr.i32(i32 %92, i32 %93, i32 %99)\l  %101 = tail call i32 @llvm.fshr.i32(i32 %93, i32 %94, i32 %99)\l  %102 = tail call i32 @llvm.fshr.i32(i32 %94, i32 %95, i32 %99)\l  %103 = select i1 %98, i32 %92, i32 %100\l  %104 = select i1 %98, i32 %93, i32 %101\l  %105 = select i1 %98, i32 %94, i32 %102\l  %106 = lshr i32 %103, 29\l  %107 = tail call i32 @llvm.fshl.i32(i32 %103, i32 %104, i32 2)\l  %108 = tail call i32 @llvm.fshl.i32(i32 %104, i32 %105, i32 2)\l  %109 = tail call i32 @llvm.fshl.i32(i32 %105, i32 %95, i32 2)\l  %110 = and i32 %106, 1\l  %111 = sub nsw i32 0, %110\l  %112 = shl i32 %106, 31\l  %113 = xor i32 %107, %111\l  %114 = xor i32 %108, %111\l  %115 = xor i32 %109, %111\l  %116 = tail call i32 @llvm.ctlz.i32(i32 %113, i1 false), !range !7\l  %117 = sub nsw i32 31, %116\l  %118 = tail call i32 @llvm.fshr.i32(i32 %113, i32 %114, i32 %117)\l  %119 = tail call i32 @llvm.fshr.i32(i32 %114, i32 %115, i32 %117)\l  %120 = shl nuw nsw i32 %116, 23\l  %121 = sub nuw nsw i32 1056964608, %120\l  %122 = lshr i32 %118, 9\l  %123 = or i32 %122, %121\l  %124 = or i32 %123, %112\l  %125 = bitcast i32 %124 to float\l  %126 = tail call i32 @llvm.fshl.i32(i32 %118, i32 %119, i32 23)\l  %127 = tail call i32 @llvm.ctlz.i32(i32 %126, i1 false), !range !7\l  %128 = fmul float %125, 0x3FF921FB40000000\l  %129 = add nuw nsw i32 %127, %116\l  %130 = shl nuw nsw i32 %129, 23\l  %131 = sub nuw nsw i32 855638016, %130\l  %132 = sub nsw i32 31, %127\l  %133 = tail call i32 @llvm.fshr.i32(i32 %126, i32 %119, i32 %132)\l  %134 = lshr i32 %133, 9\l  %135 = or i32 %131, %134\l  %136 = or i32 %135, %112\l  %137 = bitcast i32 %136 to float\l  %138 = fneg float %128\l  %139 = tail call float @llvm.fma.f32(float %125, float 0x3FF921FB40000000,\l... float %138)\l  %140 = tail call float @llvm.fma.f32(float %125, float 0x3E74442D00000000,\l... float %139)\l  %141 = tail call float @llvm.fma.f32(float %137, float 0x3FF921FB40000000,\l... float %140)\l  %142 = fadd float %128, %141\l  %143 = lshr i32 %103, 30\l  %144 = add nuw nsw i32 %110, %143\l  br label %145\l}"];
	Node0x5057050 -> Node0x5057bb0;
	Node0x5057bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%145:\l145:                                              \l  %146 = phi float [ %37, %32 ], [ %142, %39 ]\l  %147 = phi i32 [ %38, %32 ], [ %144, %39 ]\l  %148 = fmul float %146, %146\l  %149 = tail call float @llvm.fmuladd.f32(float %148, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %150 = tail call float @llvm.fmuladd.f32(float %148, float %149, float\l... 0xBFC55553A0000000)\l  %151 = fmul float %148, %150\l  %152 = tail call float @llvm.fmuladd.f32(float %146, float %151, float %146)\l  %153 = tail call float @llvm.fmuladd.f32(float %148, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %154 = tail call float @llvm.fmuladd.f32(float %148, float %153, float\l... 0x3FA5557EE0000000)\l  %155 = tail call float @llvm.fmuladd.f32(float %148, float %154, float\l... 0xBFE0000080000000)\l  %156 = tail call float @llvm.fmuladd.f32(float %148, float %155, float\l... 1.000000e+00)\l  %157 = fneg float %152\l  %158 = and i32 %147, 1\l  %159 = icmp eq i32 %158, 0\l  %160 = select i1 %159, float %156, float %157\l  %161 = bitcast float %160 to i32\l  %162 = shl i32 %147, 30\l  %163 = and i32 %162, -2147483648\l  %164 = xor i32 %163, %161\l  %165 = bitcast i32 %164 to float\l  %166 = tail call i1 @llvm.amdgcn.class.f32(float %30, i32 504)\l  %167 = fpext float %165 to double\l  %168 = fmul contract double %167, -1.850000e-01\l  %169 = select i1 %166, double %168, double 0x7FF8000000000000\l  %170 = fmul contract float %25, 0x402921FA00000000\l  %171 = fdiv contract float %170, %28\l  %172 = tail call float @llvm.fabs.f32(float %171)\l  %173 = fcmp olt float %172, 1.310720e+05\l  br i1 %173, label %174, label %182\l|{<s0>T|<s1>F}}"];
	Node0x5057bb0:s0 -> Node0x505f2d0;
	Node0x5057bb0:s1 -> Node0x505f360;
	Node0x505f2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%174:\l174:                                              \l  %175 = fmul float %172, 0x3FE45F3060000000\l  %176 = tail call float @llvm.rint.f32(float %175)\l  %177 = tail call float @llvm.fma.f32(float %176, float 0xBFF921FB40000000,\l... float %172)\l  %178 = tail call float @llvm.fma.f32(float %176, float 0xBE74442D00000000,\l... float %177)\l  %179 = tail call float @llvm.fma.f32(float %176, float 0xBCF8469880000000,\l... float %178)\l  %180 = fptosi float %176 to i32\l  %181 = bitcast float %172 to i32\l  br label %288\l}"];
	Node0x505f2d0 -> Node0x505fa90;
	Node0x505f360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%182:\l182:                                              \l  %183 = bitcast float %172 to i32\l  %184 = lshr i32 %183, 23\l  %185 = and i32 %183, 8388607\l  %186 = or i32 %185, 8388608\l  %187 = zext i32 %186 to i64\l  %188 = mul nuw nsw i64 %187, 4266746795\l  %189 = trunc i64 %188 to i32\l  %190 = lshr i64 %188, 32\l  %191 = mul nuw nsw i64 %187, 1011060801\l  %192 = add nuw nsw i64 %190, %191\l  %193 = trunc i64 %192 to i32\l  %194 = lshr i64 %192, 32\l  %195 = mul nuw nsw i64 %187, 3680671129\l  %196 = add nuw nsw i64 %194, %195\l  %197 = trunc i64 %196 to i32\l  %198 = lshr i64 %196, 32\l  %199 = mul nuw nsw i64 %187, 4113882560\l  %200 = add nuw nsw i64 %198, %199\l  %201 = trunc i64 %200 to i32\l  %202 = lshr i64 %200, 32\l  %203 = mul nuw nsw i64 %187, 4230436817\l  %204 = add nuw nsw i64 %202, %203\l  %205 = trunc i64 %204 to i32\l  %206 = lshr i64 %204, 32\l  %207 = mul nuw nsw i64 %187, 1313084713\l  %208 = add nuw nsw i64 %206, %207\l  %209 = trunc i64 %208 to i32\l  %210 = lshr i64 %208, 32\l  %211 = mul nuw nsw i64 %187, 2734261102\l  %212 = add nuw nsw i64 %210, %211\l  %213 = trunc i64 %212 to i32\l  %214 = lshr i64 %212, 32\l  %215 = trunc i64 %214 to i32\l  %216 = add nsw i32 %184, -120\l  %217 = icmp ugt i32 %216, 63\l  %218 = select i1 %217, i32 %209, i32 %215\l  %219 = select i1 %217, i32 %205, i32 %213\l  %220 = select i1 %217, i32 %201, i32 %209\l  %221 = select i1 %217, i32 %197, i32 %205\l  %222 = select i1 %217, i32 %193, i32 %201\l  %223 = select i1 %217, i32 %189, i32 %197\l  %224 = select i1 %217, i32 -64, i32 0\l  %225 = add nsw i32 %224, %216\l  %226 = icmp ugt i32 %225, 31\l  %227 = select i1 %226, i32 %219, i32 %218\l  %228 = select i1 %226, i32 %220, i32 %219\l  %229 = select i1 %226, i32 %221, i32 %220\l  %230 = select i1 %226, i32 %222, i32 %221\l  %231 = select i1 %226, i32 %223, i32 %222\l  %232 = select i1 %226, i32 -32, i32 0\l  %233 = add nsw i32 %232, %225\l  %234 = icmp ugt i32 %233, 31\l  %235 = select i1 %234, i32 %228, i32 %227\l  %236 = select i1 %234, i32 %229, i32 %228\l  %237 = select i1 %234, i32 %230, i32 %229\l  %238 = select i1 %234, i32 %231, i32 %230\l  %239 = select i1 %234, i32 -32, i32 0\l  %240 = add nsw i32 %239, %233\l  %241 = icmp eq i32 %240, 0\l  %242 = sub nsw i32 32, %240\l  %243 = tail call i32 @llvm.fshr.i32(i32 %235, i32 %236, i32 %242)\l  %244 = tail call i32 @llvm.fshr.i32(i32 %236, i32 %237, i32 %242)\l  %245 = tail call i32 @llvm.fshr.i32(i32 %237, i32 %238, i32 %242)\l  %246 = select i1 %241, i32 %235, i32 %243\l  %247 = select i1 %241, i32 %236, i32 %244\l  %248 = select i1 %241, i32 %237, i32 %245\l  %249 = lshr i32 %246, 29\l  %250 = tail call i32 @llvm.fshl.i32(i32 %246, i32 %247, i32 2)\l  %251 = tail call i32 @llvm.fshl.i32(i32 %247, i32 %248, i32 2)\l  %252 = tail call i32 @llvm.fshl.i32(i32 %248, i32 %238, i32 2)\l  %253 = and i32 %249, 1\l  %254 = sub nsw i32 0, %253\l  %255 = shl i32 %249, 31\l  %256 = xor i32 %250, %254\l  %257 = xor i32 %251, %254\l  %258 = xor i32 %252, %254\l  %259 = tail call i32 @llvm.ctlz.i32(i32 %256, i1 false), !range !7\l  %260 = sub nsw i32 31, %259\l  %261 = tail call i32 @llvm.fshr.i32(i32 %256, i32 %257, i32 %260)\l  %262 = tail call i32 @llvm.fshr.i32(i32 %257, i32 %258, i32 %260)\l  %263 = shl nuw nsw i32 %259, 23\l  %264 = sub nuw nsw i32 1056964608, %263\l  %265 = lshr i32 %261, 9\l  %266 = or i32 %265, %264\l  %267 = or i32 %266, %255\l  %268 = bitcast i32 %267 to float\l  %269 = tail call i32 @llvm.fshl.i32(i32 %261, i32 %262, i32 23)\l  %270 = tail call i32 @llvm.ctlz.i32(i32 %269, i1 false), !range !7\l  %271 = fmul float %268, 0x3FF921FB40000000\l  %272 = add nuw nsw i32 %270, %259\l  %273 = shl nuw nsw i32 %272, 23\l  %274 = sub nuw nsw i32 855638016, %273\l  %275 = sub nsw i32 31, %270\l  %276 = tail call i32 @llvm.fshr.i32(i32 %269, i32 %262, i32 %275)\l  %277 = lshr i32 %276, 9\l  %278 = or i32 %274, %277\l  %279 = or i32 %278, %255\l  %280 = bitcast i32 %279 to float\l  %281 = fneg float %271\l  %282 = tail call float @llvm.fma.f32(float %268, float 0x3FF921FB40000000,\l... float %281)\l  %283 = tail call float @llvm.fma.f32(float %268, float 0x3E74442D00000000,\l... float %282)\l  %284 = tail call float @llvm.fma.f32(float %280, float 0x3FF921FB40000000,\l... float %283)\l  %285 = fadd float %271, %284\l  %286 = lshr i32 %246, 30\l  %287 = add nuw nsw i32 %253, %286\l  br label %288\l}"];
	Node0x505f360 -> Node0x505fa90;
	Node0x505fa90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%288:\l288:                                              \l  %289 = phi i32 [ %181, %174 ], [ %183, %182 ]\l  %290 = phi float [ %179, %174 ], [ %285, %182 ]\l  %291 = phi i32 [ %180, %174 ], [ %287, %182 ]\l  %292 = fmul float %290, %290\l  %293 = tail call float @llvm.fmuladd.f32(float %292, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %294 = tail call float @llvm.fmuladd.f32(float %292, float %293, float\l... 0xBFC55553A0000000)\l  %295 = fmul float %292, %294\l  %296 = tail call float @llvm.fmuladd.f32(float %290, float %295, float %290)\l  %297 = tail call float @llvm.fmuladd.f32(float %292, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %298 = tail call float @llvm.fmuladd.f32(float %292, float %297, float\l... 0x3FA5557EE0000000)\l  %299 = tail call float @llvm.fmuladd.f32(float %292, float %298, float\l... 0xBFE0000080000000)\l  %300 = tail call float @llvm.fmuladd.f32(float %292, float %299, float\l... 1.000000e+00)\l  %301 = and i32 %291, 1\l  %302 = icmp eq i32 %301, 0\l  %303 = select i1 %302, float %296, float %300\l  %304 = bitcast float %303 to i32\l  %305 = shl i32 %291, 30\l  %306 = and i32 %305, -2147483648\l  %307 = bitcast float %171 to i32\l  %308 = xor i32 %289, %307\l  %309 = xor i32 %308, %306\l  %310 = xor i32 %309, %304\l  %311 = bitcast i32 %310 to float\l  %312 = tail call i1 @llvm.amdgcn.class.f32(float %172, i32 504)\l  %313 = fpext float %311 to double\l  %314 = fmul contract double %313, 8.000000e-02\l  %315 = select i1 %312, double %314, double 0x7FF8000000000000\l  %316 = fadd contract double %169, %315\l  %317 = sitofp i32 %12 to float\l  %318 = fmul contract float %317, 0x401921FA00000000\l  %319 = add nsw i32 %1, -1\l  %320 = sitofp i32 %319 to float\l  %321 = fdiv contract float %318, %320\l  %322 = tail call float @llvm.fabs.f32(float %321)\l  %323 = fcmp olt float %322, 1.310720e+05\l  br i1 %323, label %324, label %331\l|{<s0>T|<s1>F}}"];
	Node0x505fa90:s0 -> Node0x50661e0;
	Node0x505fa90:s1 -> Node0x5066270;
	Node0x50661e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%324:\l324:                                              \l  %325 = fmul float %322, 0x3FE45F3060000000\l  %326 = tail call float @llvm.rint.f32(float %325)\l  %327 = tail call float @llvm.fma.f32(float %326, float 0xBFF921FB40000000,\l... float %322)\l  %328 = tail call float @llvm.fma.f32(float %326, float 0xBE74442D00000000,\l... float %327)\l  %329 = tail call float @llvm.fma.f32(float %326, float 0xBCF8469880000000,\l... float %328)\l  %330 = fptosi float %326 to i32\l  br label %437\l}"];
	Node0x50661e0 -> Node0x5066930;
	Node0x5066270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%331:\l331:                                              \l  %332 = bitcast float %322 to i32\l  %333 = lshr i32 %332, 23\l  %334 = and i32 %332, 8388607\l  %335 = or i32 %334, 8388608\l  %336 = zext i32 %335 to i64\l  %337 = mul nuw nsw i64 %336, 4266746795\l  %338 = trunc i64 %337 to i32\l  %339 = lshr i64 %337, 32\l  %340 = mul nuw nsw i64 %336, 1011060801\l  %341 = add nuw nsw i64 %339, %340\l  %342 = trunc i64 %341 to i32\l  %343 = lshr i64 %341, 32\l  %344 = mul nuw nsw i64 %336, 3680671129\l  %345 = add nuw nsw i64 %343, %344\l  %346 = trunc i64 %345 to i32\l  %347 = lshr i64 %345, 32\l  %348 = mul nuw nsw i64 %336, 4113882560\l  %349 = add nuw nsw i64 %347, %348\l  %350 = trunc i64 %349 to i32\l  %351 = lshr i64 %349, 32\l  %352 = mul nuw nsw i64 %336, 4230436817\l  %353 = add nuw nsw i64 %351, %352\l  %354 = trunc i64 %353 to i32\l  %355 = lshr i64 %353, 32\l  %356 = mul nuw nsw i64 %336, 1313084713\l  %357 = add nuw nsw i64 %355, %356\l  %358 = trunc i64 %357 to i32\l  %359 = lshr i64 %357, 32\l  %360 = mul nuw nsw i64 %336, 2734261102\l  %361 = add nuw nsw i64 %359, %360\l  %362 = trunc i64 %361 to i32\l  %363 = lshr i64 %361, 32\l  %364 = trunc i64 %363 to i32\l  %365 = add nsw i32 %333, -120\l  %366 = icmp ugt i32 %365, 63\l  %367 = select i1 %366, i32 %358, i32 %364\l  %368 = select i1 %366, i32 %354, i32 %362\l  %369 = select i1 %366, i32 %350, i32 %358\l  %370 = select i1 %366, i32 %346, i32 %354\l  %371 = select i1 %366, i32 %342, i32 %350\l  %372 = select i1 %366, i32 %338, i32 %346\l  %373 = select i1 %366, i32 -64, i32 0\l  %374 = add nsw i32 %373, %365\l  %375 = icmp ugt i32 %374, 31\l  %376 = select i1 %375, i32 %368, i32 %367\l  %377 = select i1 %375, i32 %369, i32 %368\l  %378 = select i1 %375, i32 %370, i32 %369\l  %379 = select i1 %375, i32 %371, i32 %370\l  %380 = select i1 %375, i32 %372, i32 %371\l  %381 = select i1 %375, i32 -32, i32 0\l  %382 = add nsw i32 %381, %374\l  %383 = icmp ugt i32 %382, 31\l  %384 = select i1 %383, i32 %377, i32 %376\l  %385 = select i1 %383, i32 %378, i32 %377\l  %386 = select i1 %383, i32 %379, i32 %378\l  %387 = select i1 %383, i32 %380, i32 %379\l  %388 = select i1 %383, i32 -32, i32 0\l  %389 = add nsw i32 %388, %382\l  %390 = icmp eq i32 %389, 0\l  %391 = sub nsw i32 32, %389\l  %392 = tail call i32 @llvm.fshr.i32(i32 %384, i32 %385, i32 %391)\l  %393 = tail call i32 @llvm.fshr.i32(i32 %385, i32 %386, i32 %391)\l  %394 = tail call i32 @llvm.fshr.i32(i32 %386, i32 %387, i32 %391)\l  %395 = select i1 %390, i32 %384, i32 %392\l  %396 = select i1 %390, i32 %385, i32 %393\l  %397 = select i1 %390, i32 %386, i32 %394\l  %398 = lshr i32 %395, 29\l  %399 = tail call i32 @llvm.fshl.i32(i32 %395, i32 %396, i32 2)\l  %400 = tail call i32 @llvm.fshl.i32(i32 %396, i32 %397, i32 2)\l  %401 = tail call i32 @llvm.fshl.i32(i32 %397, i32 %387, i32 2)\l  %402 = and i32 %398, 1\l  %403 = sub nsw i32 0, %402\l  %404 = shl i32 %398, 31\l  %405 = xor i32 %399, %403\l  %406 = xor i32 %400, %403\l  %407 = xor i32 %401, %403\l  %408 = tail call i32 @llvm.ctlz.i32(i32 %405, i1 false), !range !7\l  %409 = sub nsw i32 31, %408\l  %410 = tail call i32 @llvm.fshr.i32(i32 %405, i32 %406, i32 %409)\l  %411 = tail call i32 @llvm.fshr.i32(i32 %406, i32 %407, i32 %409)\l  %412 = shl nuw nsw i32 %408, 23\l  %413 = sub nuw nsw i32 1056964608, %412\l  %414 = lshr i32 %410, 9\l  %415 = or i32 %414, %413\l  %416 = or i32 %415, %404\l  %417 = bitcast i32 %416 to float\l  %418 = tail call i32 @llvm.fshl.i32(i32 %410, i32 %411, i32 23)\l  %419 = tail call i32 @llvm.ctlz.i32(i32 %418, i1 false), !range !7\l  %420 = fmul float %417, 0x3FF921FB40000000\l  %421 = add nuw nsw i32 %419, %408\l  %422 = shl nuw nsw i32 %421, 23\l  %423 = sub nuw nsw i32 855638016, %422\l  %424 = sub nsw i32 31, %419\l  %425 = tail call i32 @llvm.fshr.i32(i32 %418, i32 %411, i32 %424)\l  %426 = lshr i32 %425, 9\l  %427 = or i32 %423, %426\l  %428 = or i32 %427, %404\l  %429 = bitcast i32 %428 to float\l  %430 = fneg float %420\l  %431 = tail call float @llvm.fma.f32(float %417, float 0x3FF921FB40000000,\l... float %430)\l  %432 = tail call float @llvm.fma.f32(float %417, float 0x3E74442D00000000,\l... float %431)\l  %433 = tail call float @llvm.fma.f32(float %429, float 0x3FF921FB40000000,\l... float %432)\l  %434 = fadd float %420, %433\l  %435 = lshr i32 %395, 30\l  %436 = add nuw nsw i32 %402, %435\l  br label %437\l}"];
	Node0x5066270 -> Node0x5066930;
	Node0x5066930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%437:\l437:                                              \l  %438 = phi float [ %329, %324 ], [ %434, %331 ]\l  %439 = phi i32 [ %330, %324 ], [ %436, %331 ]\l  %440 = fmul float %438, %438\l  %441 = tail call float @llvm.fmuladd.f32(float %440, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %442 = tail call float @llvm.fmuladd.f32(float %440, float %441, float\l... 0xBFC55553A0000000)\l  %443 = fmul float %440, %442\l  %444 = tail call float @llvm.fmuladd.f32(float %438, float %443, float %438)\l  %445 = tail call float @llvm.fmuladd.f32(float %440, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %446 = tail call float @llvm.fmuladd.f32(float %440, float %445, float\l... 0x3FA5557EE0000000)\l  %447 = tail call float @llvm.fmuladd.f32(float %440, float %446, float\l... 0xBFE0000080000000)\l  %448 = tail call float @llvm.fmuladd.f32(float %440, float %447, float\l... 1.000000e+00)\l  %449 = fneg float %444\l  %450 = and i32 %439, 1\l  %451 = icmp eq i32 %450, 0\l  %452 = select i1 %451, float %448, float %449\l  %453 = bitcast float %452 to i32\l  %454 = shl i32 %439, 30\l  %455 = and i32 %454, -2147483648\l  %456 = xor i32 %455, %453\l  %457 = bitcast i32 %456 to float\l  %458 = tail call i1 @llvm.amdgcn.class.f32(float %322, i32 504)\l  %459 = fpext float %457 to double\l  %460 = fmul contract double %459, -1.850000e-01\l  %461 = select i1 %458, double %460, double 0x7FF8000000000000\l  %462 = fmul contract float %317, 0x402921FA00000000\l  %463 = fdiv contract float %462, %320\l  %464 = tail call float @llvm.fabs.f32(float %463)\l  %465 = fcmp olt float %464, 1.310720e+05\l  br i1 %465, label %466, label %474\l|{<s0>T|<s1>F}}"];
	Node0x5066930:s0 -> Node0x506c490;
	Node0x5066930:s1 -> Node0x506c4e0;
	Node0x506c490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%466:\l466:                                              \l  %467 = fmul float %464, 0x3FE45F3060000000\l  %468 = tail call float @llvm.rint.f32(float %467)\l  %469 = tail call float @llvm.fma.f32(float %468, float 0xBFF921FB40000000,\l... float %464)\l  %470 = tail call float @llvm.fma.f32(float %468, float 0xBE74442D00000000,\l... float %469)\l  %471 = tail call float @llvm.fma.f32(float %468, float 0xBCF8469880000000,\l... float %470)\l  %472 = fptosi float %468 to i32\l  %473 = bitcast float %464 to i32\l  br label %580\l}"];
	Node0x506c490 -> Node0x506cbd0;
	Node0x506c4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%474:\l474:                                              \l  %475 = bitcast float %464 to i32\l  %476 = lshr i32 %475, 23\l  %477 = and i32 %475, 8388607\l  %478 = or i32 %477, 8388608\l  %479 = zext i32 %478 to i64\l  %480 = mul nuw nsw i64 %479, 4266746795\l  %481 = trunc i64 %480 to i32\l  %482 = lshr i64 %480, 32\l  %483 = mul nuw nsw i64 %479, 1011060801\l  %484 = add nuw nsw i64 %482, %483\l  %485 = trunc i64 %484 to i32\l  %486 = lshr i64 %484, 32\l  %487 = mul nuw nsw i64 %479, 3680671129\l  %488 = add nuw nsw i64 %486, %487\l  %489 = trunc i64 %488 to i32\l  %490 = lshr i64 %488, 32\l  %491 = mul nuw nsw i64 %479, 4113882560\l  %492 = add nuw nsw i64 %490, %491\l  %493 = trunc i64 %492 to i32\l  %494 = lshr i64 %492, 32\l  %495 = mul nuw nsw i64 %479, 4230436817\l  %496 = add nuw nsw i64 %494, %495\l  %497 = trunc i64 %496 to i32\l  %498 = lshr i64 %496, 32\l  %499 = mul nuw nsw i64 %479, 1313084713\l  %500 = add nuw nsw i64 %498, %499\l  %501 = trunc i64 %500 to i32\l  %502 = lshr i64 %500, 32\l  %503 = mul nuw nsw i64 %479, 2734261102\l  %504 = add nuw nsw i64 %502, %503\l  %505 = trunc i64 %504 to i32\l  %506 = lshr i64 %504, 32\l  %507 = trunc i64 %506 to i32\l  %508 = add nsw i32 %476, -120\l  %509 = icmp ugt i32 %508, 63\l  %510 = select i1 %509, i32 %501, i32 %507\l  %511 = select i1 %509, i32 %497, i32 %505\l  %512 = select i1 %509, i32 %493, i32 %501\l  %513 = select i1 %509, i32 %489, i32 %497\l  %514 = select i1 %509, i32 %485, i32 %493\l  %515 = select i1 %509, i32 %481, i32 %489\l  %516 = select i1 %509, i32 -64, i32 0\l  %517 = add nsw i32 %516, %508\l  %518 = icmp ugt i32 %517, 31\l  %519 = select i1 %518, i32 %511, i32 %510\l  %520 = select i1 %518, i32 %512, i32 %511\l  %521 = select i1 %518, i32 %513, i32 %512\l  %522 = select i1 %518, i32 %514, i32 %513\l  %523 = select i1 %518, i32 %515, i32 %514\l  %524 = select i1 %518, i32 -32, i32 0\l  %525 = add nsw i32 %524, %517\l  %526 = icmp ugt i32 %525, 31\l  %527 = select i1 %526, i32 %520, i32 %519\l  %528 = select i1 %526, i32 %521, i32 %520\l  %529 = select i1 %526, i32 %522, i32 %521\l  %530 = select i1 %526, i32 %523, i32 %522\l  %531 = select i1 %526, i32 -32, i32 0\l  %532 = add nsw i32 %531, %525\l  %533 = icmp eq i32 %532, 0\l  %534 = sub nsw i32 32, %532\l  %535 = tail call i32 @llvm.fshr.i32(i32 %527, i32 %528, i32 %534)\l  %536 = tail call i32 @llvm.fshr.i32(i32 %528, i32 %529, i32 %534)\l  %537 = tail call i32 @llvm.fshr.i32(i32 %529, i32 %530, i32 %534)\l  %538 = select i1 %533, i32 %527, i32 %535\l  %539 = select i1 %533, i32 %528, i32 %536\l  %540 = select i1 %533, i32 %529, i32 %537\l  %541 = lshr i32 %538, 29\l  %542 = tail call i32 @llvm.fshl.i32(i32 %538, i32 %539, i32 2)\l  %543 = tail call i32 @llvm.fshl.i32(i32 %539, i32 %540, i32 2)\l  %544 = tail call i32 @llvm.fshl.i32(i32 %540, i32 %530, i32 2)\l  %545 = and i32 %541, 1\l  %546 = sub nsw i32 0, %545\l  %547 = shl i32 %541, 31\l  %548 = xor i32 %542, %546\l  %549 = xor i32 %543, %546\l  %550 = xor i32 %544, %546\l  %551 = tail call i32 @llvm.ctlz.i32(i32 %548, i1 false), !range !7\l  %552 = sub nsw i32 31, %551\l  %553 = tail call i32 @llvm.fshr.i32(i32 %548, i32 %549, i32 %552)\l  %554 = tail call i32 @llvm.fshr.i32(i32 %549, i32 %550, i32 %552)\l  %555 = shl nuw nsw i32 %551, 23\l  %556 = sub nuw nsw i32 1056964608, %555\l  %557 = lshr i32 %553, 9\l  %558 = or i32 %557, %556\l  %559 = or i32 %558, %547\l  %560 = bitcast i32 %559 to float\l  %561 = tail call i32 @llvm.fshl.i32(i32 %553, i32 %554, i32 23)\l  %562 = tail call i32 @llvm.ctlz.i32(i32 %561, i1 false), !range !7\l  %563 = fmul float %560, 0x3FF921FB40000000\l  %564 = add nuw nsw i32 %562, %551\l  %565 = shl nuw nsw i32 %564, 23\l  %566 = sub nuw nsw i32 855638016, %565\l  %567 = sub nsw i32 31, %562\l  %568 = tail call i32 @llvm.fshr.i32(i32 %561, i32 %554, i32 %567)\l  %569 = lshr i32 %568, 9\l  %570 = or i32 %566, %569\l  %571 = or i32 %570, %547\l  %572 = bitcast i32 %571 to float\l  %573 = fneg float %563\l  %574 = tail call float @llvm.fma.f32(float %560, float 0x3FF921FB40000000,\l... float %573)\l  %575 = tail call float @llvm.fma.f32(float %560, float 0x3E74442D00000000,\l... float %574)\l  %576 = tail call float @llvm.fma.f32(float %572, float 0x3FF921FB40000000,\l... float %575)\l  %577 = fadd float %563, %576\l  %578 = lshr i32 %538, 30\l  %579 = add nuw nsw i32 %545, %578\l  br label %580\l}"];
	Node0x506c4e0 -> Node0x506cbd0;
	Node0x506cbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%580:\l580:                                              \l  %581 = phi i32 [ %473, %466 ], [ %475, %474 ]\l  %582 = phi float [ %471, %466 ], [ %577, %474 ]\l  %583 = phi i32 [ %472, %466 ], [ %579, %474 ]\l  %584 = fmul float %582, %582\l  %585 = tail call float @llvm.fmuladd.f32(float %584, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %586 = tail call float @llvm.fmuladd.f32(float %584, float %585, float\l... 0xBFC55553A0000000)\l  %587 = fmul float %584, %586\l  %588 = tail call float @llvm.fmuladd.f32(float %582, float %587, float %582)\l  %589 = tail call float @llvm.fmuladd.f32(float %584, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %590 = tail call float @llvm.fmuladd.f32(float %584, float %589, float\l... 0x3FA5557EE0000000)\l  %591 = tail call float @llvm.fmuladd.f32(float %584, float %590, float\l... 0xBFE0000080000000)\l  %592 = tail call float @llvm.fmuladd.f32(float %584, float %591, float\l... 1.000000e+00)\l  %593 = and i32 %583, 1\l  %594 = icmp eq i32 %593, 0\l  %595 = select i1 %594, float %588, float %592\l  %596 = bitcast float %595 to i32\l  %597 = shl i32 %583, 30\l  %598 = and i32 %597, -2147483648\l  %599 = bitcast float %463 to i32\l  %600 = xor i32 %581, %599\l  %601 = xor i32 %600, %598\l  %602 = xor i32 %601, %596\l  %603 = bitcast i32 %602 to float\l  %604 = tail call i1 @llvm.amdgcn.class.f32(float %464, i32 504)\l  %605 = fpext float %603 to double\l  %606 = fmul contract double %605, 8.000000e-02\l  %607 = select i1 %604, double %606, double 0x7FF8000000000000\l  %608 = fadd contract double %461, %607\l  %609 = fmul contract double %316, %608\l  %610 = fptrunc double %609 to float\l  %611 = mul nsw i32 %20, %1\l  %612 = add nsw i32 %611, %12\l  %613 = sext i32 %612 to i64\l  %614 = getelementptr inbounds float, float addrspace(1)* %0, i64 %613\l  store float %610, float addrspace(1)* %614, align 4, !tbaa !8\l  br label %615\l}"];
	Node0x506cbd0 -> Node0x5055f20;
	Node0x5055f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%615:\l615:                                              \l  ret void\l}"];
}
