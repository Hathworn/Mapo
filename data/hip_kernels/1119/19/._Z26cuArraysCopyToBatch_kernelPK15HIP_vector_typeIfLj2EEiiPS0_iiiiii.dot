digraph "CFG for '_Z26cuArraysCopyToBatch_kernelPK15HIP_vector_typeIfLj2EEiiPS0_iiiiii' function" {
	label="CFG for '_Z26cuArraysCopyToBatch_kernelPK15HIP_vector_typeIfLj2EEiiPS0_iiiiii' function";

	Node0x61e9590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = add i32 %19, %12\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !5, !invariant.load !6\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = add i32 %27, %21\l  %29 = mul nsw i32 %7, %6\l  %30 = icmp slt i32 %11, %29\l  %31 = icmp slt i32 %20, %4\l  %32 = select i1 %30, i1 %31, i1 false\l  %33 = icmp slt i32 %28, %5\l  %34 = select i1 %32, i1 %33, i1 false\l  br i1 %34, label %35, label %58\l|{<s0>T|<s1>F}}"];
	Node0x61e9590:s0 -> Node0x61ebd00;
	Node0x61e9590:s1 -> Node0x61ee140;
	Node0x61ebd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%35:\l35:                                               \l  %36 = mul nsw i32 %11, %4\l  %37 = add i32 %20, %36\l  %38 = mul i32 %37, %5\l  %39 = add nsw i32 %38, %28\l  %40 = freeze i32 %11\l  %41 = freeze i32 %7\l  %42 = sdiv i32 %40, %41\l  %43 = mul i32 %42, %41\l  %44 = sub i32 %40, %43\l  %45 = mul nsw i32 %42, %8\l  %46 = add nsw i32 %45, %20\l  %47 = mul nsw i32 %46, %2\l  %48 = mul nsw i32 %44, %9\l  %49 = add i32 %48, %28\l  %50 = add i32 %49, %47\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %51\l  %53 = sext i32 %39 to i64\l  %54 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %3, i64 %53\l  %55 = bitcast %struct.HIP_vector_type addrspace(1)* %52 to i64 addrspace(1)*\l  %56 = bitcast %struct.HIP_vector_type addrspace(1)* %54 to i64 addrspace(1)*\l  %57 = load i64, i64 addrspace(1)* %55, align 8, !amdgpu.noclobber !6\l  store i64 %57, i64 addrspace(1)* %56, align 8\l  br label %58\l}"];
	Node0x61ebd00 -> Node0x61ee140;
	Node0x61ee140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  ret void\l}"];
}
