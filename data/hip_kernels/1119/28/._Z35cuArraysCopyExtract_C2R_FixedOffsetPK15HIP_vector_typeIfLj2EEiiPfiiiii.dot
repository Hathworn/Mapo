digraph "CFG for '_Z35cuArraysCopyExtract_C2R_FixedOffsetPK15HIP_vector_typeIfLj2EEiiPfiiiii' function" {
	label="CFG for '_Z35cuArraysCopyExtract_C2R_FixedOffsetPK15HIP_vector_typeIfLj2EEiiPfiiiii' function";

	Node0x4be44a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %12, %16\l  %18 = add i32 %17, %10\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !5, !invariant.load !6\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = add i32 %25, %19\l  %27 = icmp slt i32 %18, %4\l  %28 = icmp slt i32 %26, %5\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %47\l|{<s0>T|<s1>F}}"];
	Node0x4be44a0:s0 -> Node0x4be8a80;
	Node0x4be44a0:s1 -> Node0x4be8b10;
	Node0x4be8a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%30:\l30:                                               \l  %31 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %32 = mul i32 %31, %4\l  %33 = add i32 %18, %32\l  %34 = mul i32 %33, %5\l  %35 = add i32 %34, %26\l  %36 = mul i32 %31, %1\l  %37 = add i32 %36, %7\l  %38 = add i32 %37, %18\l  %39 = mul i32 %38, %2\l  %40 = add i32 %26, %8\l  %41 = add i32 %40, %39\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %42, i32 0, i32 0, i32 0, i64 0\l  %44 = load float, float addrspace(1)* %43, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %45 = sext i32 %35 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %3, i64 %45\l  store float %44, float addrspace(1)* %46, align 4, !tbaa !10\l  br label %47\l}"];
	Node0x4be8a80 -> Node0x4be8b10;
	Node0x4be8b10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  ret void\l}"];
}
