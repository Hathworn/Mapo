digraph "CFG for '_Z36cuArraysCopyExtractVaryingOffsetCorrPKfiiPfiiPiiPK15HIP_vector_typeIiLj2EE' function" {
	label="CFG for '_Z36cuArraysCopyExtractVaryingOffsetCorrPKfiiPfiiPiiPK15HIP_vector_typeIiLj2EE' function";

	Node0x5940980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = add i32 %18, %11\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !5, !invariant.load !6\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %21, %25\l  %27 = add i32 %26, %20\l  %28 = sext i32 %10 to i64\l  %29 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %8, i64 %28, i32 0, i32 0, i32 0, i64 0\l  %30 = load i32, i32 addrspace(1)* %29, align 8, !tbaa !7, !amdgpu.noclobber\l... !6\l  %31 = sdiv i32 %4, -2\l  %32 = add i32 %30, %31\l  %33 = add i32 %32, %19\l  %34 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %8, i64 %28, i32 0, i32 0, i32 0, i64 1\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %36 = sdiv i32 %5, -2\l  %37 = add i32 %35, %36\l  %38 = add i32 %37, %27\l  %39 = icmp slt i32 %19, %4\l  %40 = icmp slt i32 %27, %5\l  %41 = select i1 %39, i1 %40, i1 false\l  br i1 %41, label %42, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5940980:s0 -> Node0x5943480;
	Node0x5940980:s1 -> Node0x59462e0;
	Node0x5943480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%42:\l42:                                               \l  %43 = mul i32 %10, %4\l  %44 = add i32 %19, %43\l  %45 = mul i32 %44, %5\l  %46 = add i32 %45, %27\l  %47 = icmp sgt i32 %33, -1\l  %48 = icmp sgt i32 %38, -1\l  %49 = select i1 %47, i1 %48, i1 false\l  %50 = icmp slt i32 %33, %1\l  %51 = select i1 %49, i1 %50, i1 false\l  %52 = icmp slt i32 %38, %2\l  %53 = select i1 %51, i1 %52, i1 false\l  br i1 %53, label %54, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5943480:s0 -> Node0x5946ae0;
	Node0x5943480:s1 -> Node0x5946b30;
	Node0x5946ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%54:\l54:                                               \l  %55 = mul i32 %10, %1\l  %56 = add i32 %33, %55\l  %57 = mul i32 %56, %2\l  %58 = add i32 %57, %38\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !10,\l... !amdgpu.noclobber !6\l  br label %62\l}"];
	Node0x5946ae0 -> Node0x5946b30;
	Node0x5946b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%62:\l62:                                               \l  %63 = phi float [ %61, %54 ], [ 0.000000e+00, %42 ]\l  %64 = phi i32 [ 1, %54 ], [ 0, %42 ]\l  %65 = sext i32 %46 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %3, i64 %65\l  store float %63, float addrspace(1)* %66, align 4, !tbaa !10\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %65\l  store i32 %64, i32 addrspace(1)* %67, align 4, !tbaa !12\l  br label %68\l}"];
	Node0x5946b30 -> Node0x59462e0;
	Node0x59462e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  ret void\l}"];
}
