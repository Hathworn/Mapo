digraph "CFG for '_Z36cuArraysCopyExtractVaryingOffset_C2CPK15HIP_vector_typeIfLj2EEiiPS0_iiiPKS_IiLj2EE' function" {
	label="CFG for '_Z36cuArraysCopyExtractVaryingOffset_C2CPK15HIP_vector_typeIfLj2EEiiPS0_iiiPKS_IiLj2EE' function";

	Node0x468a4c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %11, %15\l  %17 = add i32 %16, %9\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = add i32 %24, %18\l  %26 = icmp slt i32 %17, %4\l  %27 = icmp slt i32 %25, %5\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %53\l|{<s0>T|<s1>F}}"];
	Node0x468a4c0:s0 -> Node0x468ded0;
	Node0x468a4c0:s1 -> Node0x468df60;
	Node0x468ded0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %31 = mul i32 %30, %4\l  %32 = add i32 %17, %31\l  %33 = mul i32 %32, %5\l  %34 = add i32 %33, %25\l  %35 = mul i32 %30, %1\l  %36 = add i32 %17, %35\l  %37 = sext i32 %30 to i64\l  %38 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %7, i64 %37, i32 0, i32 0, i32 0, i64\l... 0\l  %39 = load i32, i32 addrspace(1)* %38, align 8, !tbaa !7, !amdgpu.noclobber\l... !6\l  %40 = add i32 %36, %39\l  %41 = mul i32 %40, %2\l  %42 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %7, i64 %37, i32 0, i32 0, i32 0, i64\l... 1\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %44 = add i32 %43, %25\l  %45 = add i32 %44, %41\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %46\l  %48 = sext i32 %34 to i64\l  %49 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %3, i64 %48\l  %50 = bitcast %struct.HIP_vector_type addrspace(1)* %47 to i64 addrspace(1)*\l  %51 = bitcast %struct.HIP_vector_type addrspace(1)* %49 to i64 addrspace(1)*\l  %52 = load i64, i64 addrspace(1)* %50, align 8, !amdgpu.noclobber !6\l  store i64 %52, i64 addrspace(1)* %51, align 8\l  br label %53\l}"];
	Node0x468ded0 -> Node0x468df60;
	Node0x468df60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  ret void\l}"];
}
