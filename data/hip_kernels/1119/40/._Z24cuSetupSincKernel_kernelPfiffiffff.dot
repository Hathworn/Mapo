digraph "CFG for '_Z24cuSetupSincKernel_kernelPfiffiffff' function" {
	label="CFG for '_Z24cuSetupSincKernel_kernelPfiffiffff' function";

	Node0x5f777a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = mul i32 %16, %15\l  %18 = add i32 %17, %10\l  %19 = icmp sgt i32 %18, %1\l  br i1 %19, label %321, label %20\l|{<s0>T|<s1>F}}"];
	Node0x5f777a0:s0 -> Node0x5f7a440;
	Node0x5f777a0:s1 -> Node0x5f7a4d0;
	Node0x5f7a4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%20:\l20:                                               \l  %21 = sitofp i32 %18 to float\l  %22 = fsub contract float %21, %2\l  %23 = fsub contract float 1.000000e+00, %3\l  %24 = fmul contract float %22, 0x400921FB60000000\l  %25 = fmul contract float %24, %5\l  %26 = tail call float @llvm.fabs.f32(float %25)\l  %27 = fcmp olt float %26, 1.310720e+05\l  br i1 %27, label %28, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5f7a4d0:s0 -> Node0x5f7b5d0;
	Node0x5f7a4d0:s1 -> Node0x5f7b660;
	Node0x5f7b5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%28:\l28:                                               \l  %29 = fmul float %26, 0x3FE45F3060000000\l  %30 = tail call float @llvm.rint.f32(float %29)\l  %31 = tail call float @llvm.fma.f32(float %30, float 0xBFF921FB40000000,\l... float %26)\l  %32 = tail call float @llvm.fma.f32(float %30, float 0xBE74442D00000000,\l... float %31)\l  %33 = tail call float @llvm.fma.f32(float %30, float 0xBCF8469880000000,\l... float %32)\l  %34 = fptosi float %30 to i32\l  br label %141\l}"];
	Node0x5f7b5d0 -> Node0x5f7c1b0;
	Node0x5f7b660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%35:\l35:                                               \l  %36 = bitcast float %26 to i32\l  %37 = lshr i32 %36, 23\l  %38 = and i32 %36, 8388607\l  %39 = or i32 %38, 8388608\l  %40 = zext i32 %39 to i64\l  %41 = mul nuw nsw i64 %40, 4266746795\l  %42 = trunc i64 %41 to i32\l  %43 = lshr i64 %41, 32\l  %44 = mul nuw nsw i64 %40, 1011060801\l  %45 = add nuw nsw i64 %43, %44\l  %46 = trunc i64 %45 to i32\l  %47 = lshr i64 %45, 32\l  %48 = mul nuw nsw i64 %40, 3680671129\l  %49 = add nuw nsw i64 %47, %48\l  %50 = trunc i64 %49 to i32\l  %51 = lshr i64 %49, 32\l  %52 = mul nuw nsw i64 %40, 4113882560\l  %53 = add nuw nsw i64 %51, %52\l  %54 = trunc i64 %53 to i32\l  %55 = lshr i64 %53, 32\l  %56 = mul nuw nsw i64 %40, 4230436817\l  %57 = add nuw nsw i64 %55, %56\l  %58 = trunc i64 %57 to i32\l  %59 = lshr i64 %57, 32\l  %60 = mul nuw nsw i64 %40, 1313084713\l  %61 = add nuw nsw i64 %59, %60\l  %62 = trunc i64 %61 to i32\l  %63 = lshr i64 %61, 32\l  %64 = mul nuw nsw i64 %40, 2734261102\l  %65 = add nuw nsw i64 %63, %64\l  %66 = trunc i64 %65 to i32\l  %67 = lshr i64 %65, 32\l  %68 = trunc i64 %67 to i32\l  %69 = add nsw i32 %37, -120\l  %70 = icmp ugt i32 %69, 63\l  %71 = select i1 %70, i32 %62, i32 %68\l  %72 = select i1 %70, i32 %58, i32 %66\l  %73 = select i1 %70, i32 %54, i32 %62\l  %74 = select i1 %70, i32 %50, i32 %58\l  %75 = select i1 %70, i32 %46, i32 %54\l  %76 = select i1 %70, i32 %42, i32 %50\l  %77 = select i1 %70, i32 -64, i32 0\l  %78 = add nsw i32 %77, %69\l  %79 = icmp ugt i32 %78, 31\l  %80 = select i1 %79, i32 %72, i32 %71\l  %81 = select i1 %79, i32 %73, i32 %72\l  %82 = select i1 %79, i32 %74, i32 %73\l  %83 = select i1 %79, i32 %75, i32 %74\l  %84 = select i1 %79, i32 %76, i32 %75\l  %85 = select i1 %79, i32 -32, i32 0\l  %86 = add nsw i32 %85, %78\l  %87 = icmp ugt i32 %86, 31\l  %88 = select i1 %87, i32 %81, i32 %80\l  %89 = select i1 %87, i32 %82, i32 %81\l  %90 = select i1 %87, i32 %83, i32 %82\l  %91 = select i1 %87, i32 %84, i32 %83\l  %92 = select i1 %87, i32 -32, i32 0\l  %93 = add nsw i32 %92, %86\l  %94 = icmp eq i32 %93, 0\l  %95 = sub nsw i32 32, %93\l  %96 = tail call i32 @llvm.fshr.i32(i32 %88, i32 %89, i32 %95)\l  %97 = tail call i32 @llvm.fshr.i32(i32 %89, i32 %90, i32 %95)\l  %98 = tail call i32 @llvm.fshr.i32(i32 %90, i32 %91, i32 %95)\l  %99 = select i1 %94, i32 %88, i32 %96\l  %100 = select i1 %94, i32 %89, i32 %97\l  %101 = select i1 %94, i32 %90, i32 %98\l  %102 = lshr i32 %99, 29\l  %103 = tail call i32 @llvm.fshl.i32(i32 %99, i32 %100, i32 2)\l  %104 = tail call i32 @llvm.fshl.i32(i32 %100, i32 %101, i32 2)\l  %105 = tail call i32 @llvm.fshl.i32(i32 %101, i32 %91, i32 2)\l  %106 = and i32 %102, 1\l  %107 = sub nsw i32 0, %106\l  %108 = shl i32 %102, 31\l  %109 = xor i32 %103, %107\l  %110 = xor i32 %104, %107\l  %111 = xor i32 %105, %107\l  %112 = tail call i32 @llvm.ctlz.i32(i32 %109, i1 false), !range !7\l  %113 = sub nsw i32 31, %112\l  %114 = tail call i32 @llvm.fshr.i32(i32 %109, i32 %110, i32 %113)\l  %115 = tail call i32 @llvm.fshr.i32(i32 %110, i32 %111, i32 %113)\l  %116 = shl nuw nsw i32 %112, 23\l  %117 = sub nuw nsw i32 1056964608, %116\l  %118 = lshr i32 %114, 9\l  %119 = or i32 %118, %117\l  %120 = or i32 %119, %108\l  %121 = bitcast i32 %120 to float\l  %122 = tail call i32 @llvm.fshl.i32(i32 %114, i32 %115, i32 23)\l  %123 = tail call i32 @llvm.ctlz.i32(i32 %122, i1 false), !range !7\l  %124 = fmul float %121, 0x3FF921FB40000000\l  %125 = add nuw nsw i32 %123, %112\l  %126 = shl nuw nsw i32 %125, 23\l  %127 = sub nuw nsw i32 855638016, %126\l  %128 = sub nsw i32 31, %123\l  %129 = tail call i32 @llvm.fshr.i32(i32 %122, i32 %115, i32 %128)\l  %130 = lshr i32 %129, 9\l  %131 = or i32 %127, %130\l  %132 = or i32 %131, %108\l  %133 = bitcast i32 %132 to float\l  %134 = fneg float %124\l  %135 = tail call float @llvm.fma.f32(float %121, float 0x3FF921FB40000000,\l... float %134)\l  %136 = tail call float @llvm.fma.f32(float %121, float 0x3E74442D00000000,\l... float %135)\l  %137 = tail call float @llvm.fma.f32(float %133, float 0x3FF921FB40000000,\l... float %136)\l  %138 = fadd float %124, %137\l  %139 = lshr i32 %99, 30\l  %140 = add nuw nsw i32 %106, %139\l  br label %141\l}"];
	Node0x5f7b660 -> Node0x5f7c1b0;
	Node0x5f7c1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%141:\l141:                                              \l  %142 = phi float [ %33, %28 ], [ %138, %35 ]\l  %143 = phi i32 [ %34, %28 ], [ %140, %35 ]\l  %144 = fmul float %142, %142\l  %145 = tail call float @llvm.fmuladd.f32(float %144, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %146 = tail call float @llvm.fmuladd.f32(float %144, float %145, float\l... 0xBFC55553A0000000)\l  %147 = fmul float %144, %146\l  %148 = tail call float @llvm.fmuladd.f32(float %142, float %147, float %142)\l  %149 = tail call float @llvm.fmuladd.f32(float %144, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %150 = tail call float @llvm.fmuladd.f32(float %144, float %149, float\l... 0x3FA5557EE0000000)\l  %151 = tail call float @llvm.fmuladd.f32(float %144, float %150, float\l... 0xBFE0000080000000)\l  %152 = tail call float @llvm.fmuladd.f32(float %144, float %151, float\l... 1.000000e+00)\l  %153 = fneg float %148\l  %154 = and i32 %143, 1\l  %155 = icmp eq i32 %154, 0\l  %156 = select i1 %155, float %152, float %153\l  %157 = bitcast float %156 to i32\l  %158 = shl i32 %143, 30\l  %159 = and i32 %158, -2147483648\l  %160 = xor i32 %159, %157\l  %161 = bitcast i32 %160 to float\l  %162 = tail call i1 @llvm.amdgcn.class.f32(float %26, i32 504)\l  %163 = select i1 %162, float %161, float 0x7FF8000000000000\l  %164 = fmul contract float %163, %3\l  %165 = fadd contract float %23, %164\l  %166 = fmul contract float %22, %6\l  %167 = fmul contract float %166, %7\l  %168 = fmul contract float %167, 0x400921FB60000000\l  %169 = fcmp contract une float %168, 0.000000e+00\l  br i1 %169, label %170, label %314\l|{<s0>T|<s1>F}}"];
	Node0x5f7c1b0:s0 -> Node0x5f837f0;
	Node0x5f7c1b0:s1 -> Node0x5f83880;
	Node0x5f837f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%170:\l170:                                              \l  %171 = tail call float @llvm.fabs.f32(float %168)\l  %172 = fcmp olt float %171, 1.310720e+05\l  br i1 %172, label %173, label %181\l|{<s0>T|<s1>F}}"];
	Node0x5f837f0:s0 -> Node0x5f83ba0;
	Node0x5f837f0:s1 -> Node0x5f83bf0;
	Node0x5f83ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%173:\l173:                                              \l  %174 = fmul float %171, 0x3FE45F3060000000\l  %175 = tail call float @llvm.rint.f32(float %174)\l  %176 = tail call float @llvm.fma.f32(float %175, float 0xBFF921FB40000000,\l... float %171)\l  %177 = tail call float @llvm.fma.f32(float %175, float 0xBE74442D00000000,\l... float %176)\l  %178 = tail call float @llvm.fma.f32(float %175, float 0xBCF8469880000000,\l... float %177)\l  %179 = fptosi float %175 to i32\l  %180 = bitcast float %171 to i32\l  br label %287\l}"];
	Node0x5f83ba0 -> Node0x5f84320;
	Node0x5f83bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%181:\l181:                                              \l  %182 = bitcast float %171 to i32\l  %183 = lshr i32 %182, 23\l  %184 = and i32 %182, 8388607\l  %185 = or i32 %184, 8388608\l  %186 = zext i32 %185 to i64\l  %187 = mul nuw nsw i64 %186, 4266746795\l  %188 = trunc i64 %187 to i32\l  %189 = lshr i64 %187, 32\l  %190 = mul nuw nsw i64 %186, 1011060801\l  %191 = add nuw nsw i64 %189, %190\l  %192 = trunc i64 %191 to i32\l  %193 = lshr i64 %191, 32\l  %194 = mul nuw nsw i64 %186, 3680671129\l  %195 = add nuw nsw i64 %193, %194\l  %196 = trunc i64 %195 to i32\l  %197 = lshr i64 %195, 32\l  %198 = mul nuw nsw i64 %186, 4113882560\l  %199 = add nuw nsw i64 %197, %198\l  %200 = trunc i64 %199 to i32\l  %201 = lshr i64 %199, 32\l  %202 = mul nuw nsw i64 %186, 4230436817\l  %203 = add nuw nsw i64 %201, %202\l  %204 = trunc i64 %203 to i32\l  %205 = lshr i64 %203, 32\l  %206 = mul nuw nsw i64 %186, 1313084713\l  %207 = add nuw nsw i64 %205, %206\l  %208 = trunc i64 %207 to i32\l  %209 = lshr i64 %207, 32\l  %210 = mul nuw nsw i64 %186, 2734261102\l  %211 = add nuw nsw i64 %209, %210\l  %212 = trunc i64 %211 to i32\l  %213 = lshr i64 %211, 32\l  %214 = trunc i64 %213 to i32\l  %215 = add nsw i32 %183, -120\l  %216 = icmp ugt i32 %215, 63\l  %217 = select i1 %216, i32 %208, i32 %214\l  %218 = select i1 %216, i32 %204, i32 %212\l  %219 = select i1 %216, i32 %200, i32 %208\l  %220 = select i1 %216, i32 %196, i32 %204\l  %221 = select i1 %216, i32 %192, i32 %200\l  %222 = select i1 %216, i32 %188, i32 %196\l  %223 = select i1 %216, i32 -64, i32 0\l  %224 = add nsw i32 %223, %215\l  %225 = icmp ugt i32 %224, 31\l  %226 = select i1 %225, i32 %218, i32 %217\l  %227 = select i1 %225, i32 %219, i32 %218\l  %228 = select i1 %225, i32 %220, i32 %219\l  %229 = select i1 %225, i32 %221, i32 %220\l  %230 = select i1 %225, i32 %222, i32 %221\l  %231 = select i1 %225, i32 -32, i32 0\l  %232 = add nsw i32 %231, %224\l  %233 = icmp ugt i32 %232, 31\l  %234 = select i1 %233, i32 %227, i32 %226\l  %235 = select i1 %233, i32 %228, i32 %227\l  %236 = select i1 %233, i32 %229, i32 %228\l  %237 = select i1 %233, i32 %230, i32 %229\l  %238 = select i1 %233, i32 -32, i32 0\l  %239 = add nsw i32 %238, %232\l  %240 = icmp eq i32 %239, 0\l  %241 = sub nsw i32 32, %239\l  %242 = tail call i32 @llvm.fshr.i32(i32 %234, i32 %235, i32 %241)\l  %243 = tail call i32 @llvm.fshr.i32(i32 %235, i32 %236, i32 %241)\l  %244 = tail call i32 @llvm.fshr.i32(i32 %236, i32 %237, i32 %241)\l  %245 = select i1 %240, i32 %234, i32 %242\l  %246 = select i1 %240, i32 %235, i32 %243\l  %247 = select i1 %240, i32 %236, i32 %244\l  %248 = lshr i32 %245, 29\l  %249 = tail call i32 @llvm.fshl.i32(i32 %245, i32 %246, i32 2)\l  %250 = tail call i32 @llvm.fshl.i32(i32 %246, i32 %247, i32 2)\l  %251 = tail call i32 @llvm.fshl.i32(i32 %247, i32 %237, i32 2)\l  %252 = and i32 %248, 1\l  %253 = sub nsw i32 0, %252\l  %254 = shl i32 %248, 31\l  %255 = xor i32 %249, %253\l  %256 = xor i32 %250, %253\l  %257 = xor i32 %251, %253\l  %258 = tail call i32 @llvm.ctlz.i32(i32 %255, i1 false), !range !7\l  %259 = sub nsw i32 31, %258\l  %260 = tail call i32 @llvm.fshr.i32(i32 %255, i32 %256, i32 %259)\l  %261 = tail call i32 @llvm.fshr.i32(i32 %256, i32 %257, i32 %259)\l  %262 = shl nuw nsw i32 %258, 23\l  %263 = sub nuw nsw i32 1056964608, %262\l  %264 = lshr i32 %260, 9\l  %265 = or i32 %264, %263\l  %266 = or i32 %265, %254\l  %267 = bitcast i32 %266 to float\l  %268 = tail call i32 @llvm.fshl.i32(i32 %260, i32 %261, i32 23)\l  %269 = tail call i32 @llvm.ctlz.i32(i32 %268, i1 false), !range !7\l  %270 = fmul float %267, 0x3FF921FB40000000\l  %271 = add nuw nsw i32 %269, %258\l  %272 = shl nuw nsw i32 %271, 23\l  %273 = sub nuw nsw i32 855638016, %272\l  %274 = sub nsw i32 31, %269\l  %275 = tail call i32 @llvm.fshr.i32(i32 %268, i32 %261, i32 %274)\l  %276 = lshr i32 %275, 9\l  %277 = or i32 %273, %276\l  %278 = or i32 %277, %254\l  %279 = bitcast i32 %278 to float\l  %280 = fneg float %270\l  %281 = tail call float @llvm.fma.f32(float %267, float 0x3FF921FB40000000,\l... float %280)\l  %282 = tail call float @llvm.fma.f32(float %267, float 0x3E74442D00000000,\l... float %281)\l  %283 = tail call float @llvm.fma.f32(float %279, float 0x3FF921FB40000000,\l... float %282)\l  %284 = fadd float %270, %283\l  %285 = lshr i32 %245, 30\l  %286 = add nuw nsw i32 %252, %285\l  br label %287\l}"];
	Node0x5f83bf0 -> Node0x5f84320;
	Node0x5f84320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%287:\l287:                                              \l  %288 = phi i32 [ %180, %173 ], [ %182, %181 ]\l  %289 = phi float [ %178, %173 ], [ %284, %181 ]\l  %290 = phi i32 [ %179, %173 ], [ %286, %181 ]\l  %291 = fmul float %289, %289\l  %292 = tail call float @llvm.fmuladd.f32(float %291, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %293 = tail call float @llvm.fmuladd.f32(float %291, float %292, float\l... 0xBFC55553A0000000)\l  %294 = fmul float %291, %293\l  %295 = tail call float @llvm.fmuladd.f32(float %289, float %294, float %289)\l  %296 = tail call float @llvm.fmuladd.f32(float %291, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %297 = tail call float @llvm.fmuladd.f32(float %291, float %296, float\l... 0x3FA5557EE0000000)\l  %298 = tail call float @llvm.fmuladd.f32(float %291, float %297, float\l... 0xBFE0000080000000)\l  %299 = tail call float @llvm.fmuladd.f32(float %291, float %298, float\l... 1.000000e+00)\l  %300 = and i32 %290, 1\l  %301 = icmp eq i32 %300, 0\l  %302 = select i1 %301, float %295, float %299\l  %303 = bitcast float %302 to i32\l  %304 = shl i32 %290, 30\l  %305 = and i32 %304, -2147483648\l  %306 = bitcast float %168 to i32\l  %307 = xor i32 %288, %306\l  %308 = xor i32 %307, %305\l  %309 = xor i32 %308, %303\l  %310 = bitcast i32 %309 to float\l  %311 = tail call i1 @llvm.amdgcn.class.f32(float %171, i32 504)\l  %312 = select i1 %311, float %310, float 0x7FF8000000000000\l  %313 = fdiv contract float %312, %168\l  br label %314\l}"];
	Node0x5f84320 -> Node0x5f83880;
	Node0x5f83880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%314:\l314:                                              \l  %315 = phi float [ %313, %287 ], [ 1.000000e+00, %141 ]\l  %316 = icmp eq i32 %4, 1\l  %317 = select i1 %316, float %165, float 1.000000e+00\l  %318 = fmul contract float %315, %317\l  %319 = sext i32 %18 to i64\l  %320 = getelementptr inbounds float, float addrspace(1)* %0, i64 %319\l  store float %318, float addrspace(1)* %320, align 4, !tbaa !8\l  br label %321\l}"];
	Node0x5f83880 -> Node0x5f7a440;
	Node0x5f7a440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%321:\l321:                                              \l  ret void\l}"];
}
