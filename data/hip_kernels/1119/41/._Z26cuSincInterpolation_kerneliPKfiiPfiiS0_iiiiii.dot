digraph "CFG for '_Z26cuSincInterpolation_kerneliPKfiiPfiiS0_iiiiii' function" {
	label="CFG for '_Z26cuSincInterpolation_kerneliPKfiiPfiiS0_iiiiii' function";

	Node0x5b491b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%14:\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %17 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = getelementptr i8, i8 addrspace(4)* %17, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = add i32 %23, %16\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %27 = getelementptr i8, i8 addrspace(4)* %17, i64 6\l  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*\l  %29 = load i16, i16 addrspace(4)* %28, align 2, !range !5, !invariant.load !6\l  %30 = zext i16 %29 to i32\l  %31 = mul i32 %26, %30\l  %32 = add i32 %31, %25\l  %33 = icmp slt i32 %15, %0\l  %34 = icmp slt i32 %24, %13\l  %35 = select i1 %33, i1 %34, i1 false\l  %36 = icmp slt i32 %32, %13\l  %37 = select i1 %35, i1 %36, i1 false\l  br i1 %37, label %38, label %180\l|{<s0>T|<s1>F}}"];
	Node0x5b491b0:s0 -> Node0x5b4aea0;
	Node0x5b491b0:s1 -> Node0x5b4dd90;
	Node0x5b4aea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%38:\l38:                                               \l  %39 = add nsw i32 %24, %11\l  %40 = add nsw i32 %32, %12\l  %41 = mul nsw i32 %15, %5\l  %42 = add i32 %39, %41\l  %43 = mul i32 %42, %6\l  %44 = add nsw i32 %43, %40\l  %45 = sitofp i32 %39 to float\l  %46 = sitofp i32 %8 to float\l  %47 = fdiv contract float %45, %46\l  %48 = fptosi float %47 to i32\l  %49 = sitofp i32 %48 to float\l  %50 = fsub contract float %47, %49\l  %51 = sitofp i32 %9 to float\l  %52 = fmul contract float %50, %51\l  %53 = fptosi float %52 to i32\l  %54 = sitofp i32 %40 to float\l  %55 = fdiv contract float %54, %46\l  %56 = fptosi float %55 to i32\l  %57 = sitofp i32 %56 to float\l  %58 = fsub contract float %55, %57\l  %59 = fmul contract float %58, %51\l  %60 = fptosi float %59 to i32\l  %61 = icmp sgt i32 %2, 0\l  br i1 %61, label %62, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5b4aea0:s0 -> Node0x5b4ea80;
	Node0x5b4aea0:s1 -> Node0x5b4ead0;
	Node0x5b4ea80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%62:\l62:                                               \l  %63 = sdiv i32 %10, 2\l  %64 = icmp sgt i32 %3, 0\l  %65 = mul nsw i32 %15, %2\l  %66 = and i32 %3, 1\l  %67 = icmp eq i32 %3, 1\l  %68 = and i32 %3, -2\l  %69 = icmp eq i32 %66, 0\l  br label %76\l}"];
	Node0x5b4ea80 -> Node0x5b4f290;
	Node0x5b4f350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%70:\l70:                                               \l  %71 = fdiv contract float %126, %125\l  br label %72\l}"];
	Node0x5b4f350 -> Node0x5b4ead0;
	Node0x5b4ead0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%72:\l72:                                               \l  %73 = phi float [ %71, %70 ], [ 0x7FF8000000000000, %38 ]\l  %74 = sext i32 %44 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %4, i64 %74\l  store float %73, float addrspace(1)* %75, align 4, !tbaa !7\l  br label %180\l}"];
	Node0x5b4ead0 -> Node0x5b4dd90;
	Node0x5b4f290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%76:\l76:                                               \l  %77 = phi float [ 0.000000e+00, %62 ], [ %126, %124 ]\l  %78 = phi i32 [ 0, %62 ], [ %127, %124 ]\l  %79 = phi float [ 0.000000e+00, %62 ], [ %125, %124 ]\l  %80 = sub nsw i32 %48, %78\l  %81 = add nsw i32 %80, %63\l  %82 = icmp slt i32 %81, 0\l  %83 = select i1 %82, i32 %10, i32 0\l  %84 = add nsw i32 %83, %81\l  %85 = icmp slt i32 %84, %10\l  %86 = select i1 %85, i32 0, i32 %10\l  %87 = sub nsw i32 %84, %86\l  %88 = mul nsw i32 %87, %9\l  %89 = add nsw i32 %88, %53\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %7, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  br i1 %64, label %93, label %124\l|{<s0>T|<s1>F}}"];
	Node0x5b4f290:s0 -> Node0x5b51490;
	Node0x5b4f290:s1 -> Node0x5b503c0;
	Node0x5b51490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%93:\l93:                                               \l  %94 = add i32 %78, %65\l  %95 = mul i32 %94, %3\l  br i1 %67, label %96, label %129\l|{<s0>T|<s1>F}}"];
	Node0x5b51490:s0 -> Node0x5b516f0;
	Node0x5b51490:s1 -> Node0x5b51740;
	Node0x5b516f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%96:\l96:                                               \l  %97 = phi float [ undef, %93 ], [ %170, %129 ]\l  %98 = phi float [ undef, %93 ], [ %176, %129 ]\l  %99 = phi i32 [ 0, %93 ], [ %177, %129 ]\l  %100 = phi float [ %77, %93 ], [ %176, %129 ]\l  %101 = phi float [ %79, %93 ], [ %170, %129 ]\l  br i1 %69, label %124, label %102\l|{<s0>T|<s1>F}}"];
	Node0x5b516f0:s0 -> Node0x5b503c0;
	Node0x5b516f0:s1 -> Node0x5b52120;
	Node0x5b52120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%102:\l102:                                              \l  %103 = sub nsw i32 %56, %99\l  %104 = add nsw i32 %103, %63\l  %105 = icmp slt i32 %104, 0\l  %106 = select i1 %105, i32 %10, i32 0\l  %107 = add nsw i32 %106, %104\l  %108 = icmp slt i32 %107, %10\l  %109 = select i1 %108, i32 0, i32 %10\l  %110 = sub nsw i32 %107, %109\l  %111 = mul nsw i32 %110, %9\l  %112 = add nsw i32 %111, %60\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %7, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %116 = fmul contract float %92, %115\l  %117 = fadd contract float %101, %116\l  %118 = add nsw i32 %99, %95\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %1, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %122 = fmul contract float %121, %116\l  %123 = fadd contract float %100, %122\l  br label %124\l}"];
	Node0x5b52120 -> Node0x5b503c0;
	Node0x5b503c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%124:\l124:                                              \l  %125 = phi float [ %79, %76 ], [ %97, %96 ], [ %117, %102 ]\l  %126 = phi float [ %77, %76 ], [ %98, %96 ], [ %123, %102 ]\l  %127 = add nuw nsw i32 %78, 1\l  %128 = icmp eq i32 %127, %2\l  br i1 %128, label %70, label %76, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5b503c0:s0 -> Node0x5b4f350;
	Node0x5b503c0:s1 -> Node0x5b4f290;
	Node0x5b51740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%129:\l129:                                              \l  %130 = phi i32 [ %177, %129 ], [ 0, %93 ]\l  %131 = phi float [ %176, %129 ], [ %77, %93 ]\l  %132 = phi float [ %170, %129 ], [ %79, %93 ]\l  %133 = phi i32 [ %178, %129 ], [ 0, %93 ]\l  %134 = sub nsw i32 %56, %130\l  %135 = add nsw i32 %134, %63\l  %136 = icmp slt i32 %135, 0\l  %137 = select i1 %136, i32 %10, i32 0\l  %138 = add nsw i32 %137, %135\l  %139 = icmp slt i32 %138, %10\l  %140 = select i1 %139, i32 0, i32 %10\l  %141 = sub nsw i32 %138, %140\l  %142 = mul nsw i32 %141, %9\l  %143 = add nsw i32 %142, %60\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %7, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %147 = fmul contract float %92, %146\l  %148 = fadd contract float %132, %147\l  %149 = add nsw i32 %130, %95\l  %150 = sext i32 %149 to i64\l  %151 = getelementptr inbounds float, float addrspace(1)* %1, i64 %150\l  %152 = load float, float addrspace(1)* %151, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %153 = fmul contract float %152, %147\l  %154 = fadd contract float %131, %153\l  %155 = or i32 %130, 1\l  %156 = sub nsw i32 %56, %155\l  %157 = add nsw i32 %156, %63\l  %158 = icmp slt i32 %157, 0\l  %159 = select i1 %158, i32 %10, i32 0\l  %160 = add nsw i32 %159, %157\l  %161 = icmp slt i32 %160, %10\l  %162 = select i1 %161, i32 0, i32 %10\l  %163 = sub nsw i32 %160, %162\l  %164 = mul nsw i32 %163, %9\l  %165 = add nsw i32 %164, %60\l  %166 = sext i32 %165 to i64\l  %167 = getelementptr inbounds float, float addrspace(1)* %7, i64 %166\l  %168 = load float, float addrspace(1)* %167, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %169 = fmul contract float %92, %168\l  %170 = fadd contract float %148, %169\l  %171 = add nsw i32 %155, %95\l  %172 = sext i32 %171 to i64\l  %173 = getelementptr inbounds float, float addrspace(1)* %1, i64 %172\l  %174 = load float, float addrspace(1)* %173, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %175 = fmul contract float %174, %169\l  %176 = fadd contract float %154, %175\l  %177 = add nuw nsw i32 %130, 2\l  %178 = add i32 %133, 2\l  %179 = icmp eq i32 %178, %68\l  br i1 %179, label %96, label %129, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5b51740:s0 -> Node0x5b516f0;
	Node0x5b51740:s1 -> Node0x5b51740;
	Node0x5b4dd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%180:\l180:                                              \l  ret void\l}"];
}
