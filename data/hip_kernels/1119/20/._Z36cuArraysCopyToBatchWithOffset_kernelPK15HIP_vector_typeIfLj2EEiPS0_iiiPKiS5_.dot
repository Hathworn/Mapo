digraph "CFG for '_Z36cuArraysCopyToBatchWithOffset_kernelPK15HIP_vector_typeIfLj2EEiPS0_iiiPKiS5_' function" {
	label="CFG for '_Z36cuArraysCopyToBatchWithOffset_kernelPK15HIP_vector_typeIfLj2EEiPS0_iiiPKiS5_' function";

	Node0x56c9250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %12, %16\l  %18 = add i32 %17, %10\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !5, !invariant.load !6\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = add i32 %25, %19\l  %27 = icmp slt i32 %9, %5\l  %28 = icmp slt i32 %18, %3\l  %29 = select i1 %27, i1 %28, i1 false\l  %30 = icmp slt i32 %26, %4\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %53\l|{<s0>T|<s1>F}}"];
	Node0x56c9250:s0 -> Node0x56ccfd0;
	Node0x56c9250:s1 -> Node0x56cd060;
	Node0x56ccfd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = mul nsw i32 %9, %3\l  %34 = add i32 %18, %33\l  %35 = mul i32 %34, %4\l  %36 = add nsw i32 %35, %26\l  %37 = sext i32 %9 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %37\l  %39 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %40 = add nsw i32 %39, %18\l  %41 = mul nsw i32 %40, %1\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %37\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %44 = add i32 %43, %26\l  %45 = add i32 %44, %41\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %46\l  %48 = sext i32 %36 to i64\l  %49 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %48\l  %50 = bitcast %struct.HIP_vector_type addrspace(1)* %47 to i64 addrspace(1)*\l  %51 = bitcast %struct.HIP_vector_type addrspace(1)* %49 to i64 addrspace(1)*\l  %52 = load i64, i64 addrspace(1)* %50, align 8, !amdgpu.noclobber !6\l  store i64 %52, i64 addrspace(1)* %51, align 8\l  br label %53\l}"];
	Node0x56ccfd0 -> Node0x56cd060;
	Node0x56cd060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  ret void\l}"];
}
