digraph "CFG for '_Z15LowPassColMultiPfS_iii' function" {
	label="CFG for '_Z15LowPassColMultiPfS_iii' function";

	Node0x47f7220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = and i32 %8, 7\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = mul i32 %10, 40\l  %12 = add nsw i32 %11, 40\l  %13 = tail call i32 @llvm.smin.i32(i32 %12, i32 %4)\l  %14 = add nsw i32 %13, 3\l  %15 = shl nsw i32 %8, 2\l  %16 = and i32 %15, -32\l  %17 = add nsw i32 %16, %6\l  %18 = add nsw i32 %4, -1\l  %19 = mul nsw i32 %18, %3\l  %20 = add nsw i32 %19, %17\l  %21 = shl nsw i32 %3, 3\l  %22 = shl nuw nsw i32 %9, 4\l  %23 = zext i32 %22 to i64\l  %24 = getelementptr inbounds [192 x float], [192 x float] addrspace(4)*\l... @d_Kernel, i64 0, i64 %23\l  %25 = mul i32 %9, %3\l  %26 = mul i32 %25, %4\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %30 = icmp slt i32 %17, %2\l  br i1 %30, label %31, label %67\l|{<s0>T|<s1>F}}"];
	Node0x47f7220:s0 -> Node0x47f9b60;
	Node0x47f7220:s1 -> Node0x47f9bf0;
	Node0x47f9b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%31:\l31:                                               \l  %32 = add i32 %11, %7\l  %33 = add nsw i32 %32, -4\l  %34 = icmp sgt i32 %33, %14\l  br i1 %34, label %67, label %35\l|{<s0>T|<s1>F}}"];
	Node0x47f9b60:s0 -> Node0x47f9bf0;
	Node0x47f9b60:s1 -> Node0x47f92f0;
	Node0x47f92f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%35:\l35:                                               \l  %36 = mul nsw i32 %33, %3\l  %37 = add nsw i32 %36, %17\l  %38 = shl nuw nsw i32 %7, 5\l  %39 = getelementptr inbounds [1536 x float], [1536 x float] addrspace(3)*\l... @_ZZ15LowPassColMultiPfS_iiiE4data, i32 0, i32 %38\l  %40 = getelementptr inbounds float, float addrspace(3)* %39, i32 %6\l  %41 = sext i32 %20 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %29, i64 %41\l  %43 = sext i32 %17 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %29, i64 %43\l  %45 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %46 = getelementptr i8, i8 addrspace(4)* %45, i64 6\l  %47 = bitcast i8 addrspace(4)* %46 to i16 addrspace(4)*\l  %48 = load i16, i16 addrspace(4)* %47, align 2, !range !5, !invariant.load !6\l  %49 = zext i16 %48 to i32\l  br label %50\l}"];
	Node0x47f92f0 -> Node0x47fadb0;
	Node0x47fadb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i32 [ %33, %35 ], [ %65, %60 ]\l  %52 = phi i32 [ %37, %35 ], [ %64, %60 ]\l  %53 = phi float addrspace(3)* [ %40, %35 ], [ %63, %60 ]\l  %54 = icmp slt i32 %51, 0\l  br i1 %54, label %60, label %55\l|{<s0>T|<s1>F}}"];
	Node0x47fadb0:s0 -> Node0x47faeb0;
	Node0x47fadb0:s1 -> Node0x47fb2c0;
	Node0x47fb2c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%55:\l55:                                               \l  %56 = icmp slt i32 %51, %4\l  br i1 %56, label %57, label %60\l|{<s0>T|<s1>F}}"];
	Node0x47fb2c0:s0 -> Node0x47fb490;
	Node0x47fb2c0:s1 -> Node0x47faeb0;
	Node0x47fb490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%57:\l57:                                               \l  %58 = sext i32 %52 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %29, i64 %58\l  br label %60\l}"];
	Node0x47fb490 -> Node0x47faeb0;
	Node0x47faeb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  %61 = phi float addrspace(1)* [ %59, %57 ], [ %44, %50 ], [ %42, %55 ]\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  store float %62, float addrspace(3)* %53, align 4, !tbaa !7\l  %63 = getelementptr inbounds float, float addrspace(3)* %53, i32 256\l  %64 = add nsw i32 %52, %21\l  %65 = add i32 %51, %49\l  %66 = icmp sgt i32 %65, %14\l  br i1 %66, label %67, label %50, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x47faeb0:s0 -> Node0x47f9bf0;
	Node0x47faeb0:s1 -> Node0x47fadb0;
	Node0x47f9bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%67:\l67:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %30, label %68, label %131\l|{<s0>T|<s1>F}}"];
	Node0x47f9bf0:s0 -> Node0x47fc7c0;
	Node0x47f9bf0:s1 -> Node0x47fc850;
	Node0x47fc7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%68:\l68:                                               \l  %69 = add nsw i32 %11, %7\l  %70 = icmp slt i32 %69, %13\l  br i1 %70, label %71, label %131\l|{<s0>T|<s1>F}}"];
	Node0x47fc7c0:s0 -> Node0x47fcab0;
	Node0x47fc7c0:s1 -> Node0x47fc850;
	Node0x47fcab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%71:\l71:                                               \l  %72 = mul nsw i32 %69, %3\l  %73 = add nsw i32 %72, %17\l  %74 = shl nuw nsw i32 %7, 5\l  %75 = getelementptr inbounds [1536 x float], [1536 x float] addrspace(3)*\l... @_ZZ15LowPassColMultiPfS_iiiE4data, i32 0, i32 %74\l  %76 = getelementptr inbounds float, float addrspace(3)* %75, i32 %6\l  %77 = load float, float addrspace(4)* %24, align 16, !tbaa !7\l  %78 = getelementptr inbounds float, float addrspace(4)* %24, i64 1\l  %79 = load float, float addrspace(4)* %78, align 4, !tbaa !7\l  %80 = getelementptr inbounds float, float addrspace(4)* %24, i64 2\l  %81 = load float, float addrspace(4)* %80, align 8, !tbaa !7\l  %82 = getelementptr inbounds float, float addrspace(4)* %24, i64 3\l  %83 = load float, float addrspace(4)* %82, align 4, !tbaa !7\l  %84 = getelementptr inbounds float, float addrspace(4)* %24, i64 4\l  %85 = load float, float addrspace(4)* %84, align 16, !tbaa !7\l  %86 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %87 = getelementptr i8, i8 addrspace(4)* %86, i64 6\l  %88 = bitcast i8 addrspace(4)* %87 to i16 addrspace(4)*\l  %89 = load i16, i16 addrspace(4)* %88, align 2, !range !5, !invariant.load !6\l  %90 = zext i16 %89 to i32\l  %91 = load float, float addrspace(3)* %76, align 4, !tbaa !7\l  br label %92\l}"];
	Node0x47fcab0 -> Node0x47fe3a0;
	Node0x47fe3a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%92:\l92:                                               \l  %93 = phi float [ %91, %71 ], [ %98, %92 ]\l  %94 = phi i32 [ %69, %71 ], [ %129, %92 ]\l  %95 = phi i32 [ %73, %71 ], [ %128, %92 ]\l  %96 = phi float addrspace(3)* [ %76, %71 ], [ %97, %92 ]\l  %97 = getelementptr inbounds float, float addrspace(3)* %96, i32 256\l  %98 = load float, float addrspace(3)* %97, align 4, !tbaa !7\l  %99 = fadd contract float %93, %98\l  %100 = fmul contract float %99, %77\l  %101 = getelementptr inbounds float, float addrspace(3)* %96, i32 32\l  %102 = load float, float addrspace(3)* %101, align 4, !tbaa !7\l  %103 = getelementptr inbounds float, float addrspace(3)* %96, i32 224\l  %104 = load float, float addrspace(3)* %103, align 4, !tbaa !7\l  %105 = fadd contract float %102, %104\l  %106 = fmul contract float %105, %79\l  %107 = fadd contract float %100, %106\l  %108 = getelementptr inbounds float, float addrspace(3)* %96, i32 64\l  %109 = load float, float addrspace(3)* %108, align 4, !tbaa !7\l  %110 = getelementptr inbounds float, float addrspace(3)* %96, i32 192\l  %111 = load float, float addrspace(3)* %110, align 4, !tbaa !7\l  %112 = fadd contract float %109, %111\l  %113 = fmul contract float %112, %81\l  %114 = fadd contract float %107, %113\l  %115 = getelementptr inbounds float, float addrspace(3)* %96, i32 96\l  %116 = load float, float addrspace(3)* %115, align 4, !tbaa !7\l  %117 = getelementptr inbounds float, float addrspace(3)* %96, i32 160\l  %118 = load float, float addrspace(3)* %117, align 4, !tbaa !7\l  %119 = fadd contract float %116, %118\l  %120 = fmul contract float %119, %83\l  %121 = fadd contract float %114, %120\l  %122 = getelementptr inbounds float, float addrspace(3)* %96, i32 128\l  %123 = load float, float addrspace(3)* %122, align 4, !tbaa !7\l  %124 = fmul contract float %123, %85\l  %125 = fadd contract float %121, %124\l  %126 = sext i32 %95 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %28, i64 %126\l  store float %125, float addrspace(1)* %127, align 4, !tbaa !7\l  %128 = add nsw i32 %95, %21\l  %129 = add i32 %94, %90\l  %130 = icmp slt i32 %129, %13\l  br i1 %130, label %92, label %131, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x47fe3a0:s0 -> Node0x47fe3a0;
	Node0x47fe3a0:s1 -> Node0x47fc850;
	Node0x47fc850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%131:\l131:                                              \l  ret void\l}"];
}
