digraph "CFG for '_Z22additionMatricesKernelPiS_S_' function" {
	label="CFG for '_Z22additionMatricesKernelPiS_S_' function";

	Node0x5b04a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = mul i32 %5, %10\l  %15 = add i32 %14, %4\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 16\l  %21 = bitcast i8 addrspace(4)* %20 to i32 addrspace(4)*\l  %22 = load i32, i32 addrspace(4)* %21, align 8, !tbaa !16\l  %23 = icmp slt i32 %15, 4\l  br i1 %23, label %24, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5b04a80:s0 -> Node0x5b07ed0;
	Node0x5b04a80:s1 -> Node0x5b07f60;
	Node0x5b07ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%24:\l24:                                               \l  %25 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %26 = mul i32 %25, %19\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %28 = add i32 %26, %27\l  %29 = icmp slt i32 %28, 4\l  %30 = udiv i32 %13, %10\l  %31 = mul i32 %30, %10\l  %32 = icmp ugt i32 %13, %31\l  %33 = zext i1 %32 to i32\l  %34 = add i32 %30, %33\l  %35 = mul i32 %34, %10\l  br label %36\l}"];
	Node0x5b07ed0 -> Node0x5b09090;
	Node0x5b09090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%36:\l36:                                               \l  %37 = phi i32 [ %15, %24 ], [ %59, %58 ]\l  br i1 %29, label %38, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5b09090:s0 -> Node0x5b09300;
	Node0x5b09090:s1 -> Node0x5b091c0;
	Node0x5b09300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%38:\l38:                                               \l  %39 = shl nsw i32 %37, 2\l  %40 = udiv i32 %22, %19\l  %41 = mul i32 %40, %19\l  %42 = icmp ugt i32 %22, %41\l  %43 = zext i1 %42 to i32\l  %44 = add i32 %40, %43\l  %45 = mul i32 %44, %19\l  br label %46\l}"];
	Node0x5b09300 -> Node0x5b09840;
	Node0x5b09840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i32 [ %28, %38 ], [ %56, %46 ]\l  %48 = add nsw i32 %47, %39\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %49\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !17\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %49\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !17\l  %54 = add nsw i32 %53, %51\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %49\l  store i32 %54, i32 addrspace(1)* %55, align 4, !tbaa !17\l  %56 = add i32 %45, %47\l  %57 = icmp slt i32 %56, 4\l  br i1 %57, label %46, label %58, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x5b09840:s0 -> Node0x5b09840;
	Node0x5b09840:s1 -> Node0x5b091c0;
	Node0x5b091c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%58:\l58:                                               \l  %59 = add i32 %35, %37\l  %60 = icmp slt i32 %59, 4\l  br i1 %60, label %36, label %61, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5b091c0:s0 -> Node0x5b09090;
	Node0x5b091c0:s1 -> Node0x5b07f60;
	Node0x5b07f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%61:\l61:                                               \l  ret void\l}"];
}
