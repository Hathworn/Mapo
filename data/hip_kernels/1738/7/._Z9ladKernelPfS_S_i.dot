digraph "CFG for '_Z9ladKernelPfS_S_i' function" {
	label="CFG for '_Z9ladKernelPfS_S_i' function";

	Node0x64c02c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = shl nuw nsw i32 %11, 1\l  %16 = mul i32 %15, %6\l  %17 = add i32 %16, %5\l  %18 = udiv i32 %14, %11\l  %19 = mul i32 %18, %11\l  %20 = icmp ugt i32 %14, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %15\l  %24 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %5\l  store float 0.000000e+00, float addrspace(3)* %24, align 4, !tbaa !16\l  %25 = icmp ult i32 %17, %3\l  br i1 %25, label %28, label %26\l|{<s0>T|<s1>F}}"];
	Node0x64c02c0:s0 -> Node0x64c3650;
	Node0x64c02c0:s1 -> Node0x64c36e0;
	Node0x64c36e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%26:\l26:                                               \l  %27 = icmp ugt i16 %10, 65\l  br i1 %27, label %52, label %50\l|{<s0>T|<s1>F}}"];
	Node0x64c36e0:s0 -> Node0x64c38b0;
	Node0x64c36e0:s1 -> Node0x64c3900;
	Node0x64c3650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %48, %28 ], [ %17, %4 ]\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16\l  %35 = fsub contract float %32, %34\l  %36 = tail call float @llvm.fabs.f32(float %35)\l  %37 = add i32 %29, %11\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !16\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %38\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !16\l  %43 = fsub contract float %40, %42\l  %44 = tail call float @llvm.fabs.f32(float %43)\l  %45 = fadd contract float %36, %44\l  %46 = load float, float addrspace(3)* %24, align 4, !tbaa !16\l  %47 = fadd contract float %46, %45\l  store float %47, float addrspace(3)* %24, align 4, !tbaa !16\l  %48 = add i32 %29, %23\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %49 = icmp ult i32 %48, %3\l  br i1 %49, label %28, label %26, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x64c3650:s0 -> Node0x64c3650;
	Node0x64c3650:s1 -> Node0x64c36e0;
	Node0x64c3900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%50:\l50:                                               \l  %51 = icmp ult i32 %5, 32\l  br i1 %51, label %64, label %95\l|{<s0>T|<s1>F}}"];
	Node0x64c3900:s0 -> Node0x64c5470;
	Node0x64c3900:s1 -> Node0x64c54c0;
	Node0x64c38b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi i32 [ %54, %62 ], [ %11, %26 ]\l  %54 = lshr i32 %53, 1\l  %55 = icmp ult i32 %5, %54\l  br i1 %55, label %56, label %62\l|{<s0>T|<s1>F}}"];
	Node0x64c38b0:s0 -> Node0x64c5890;
	Node0x64c38b0:s1 -> Node0x64c5630;
	Node0x64c5890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%56:\l56:                                               \l  %57 = add nuw nsw i32 %54, %5\l  %58 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %57\l  %59 = load float, float addrspace(3)* %58, align 4, !tbaa !16\l  %60 = load float, float addrspace(3)* %24, align 4, !tbaa !16\l  %61 = fadd contract float %59, %60\l  store float %61, float addrspace(3)* %24, align 4, !tbaa !16\l  br label %62\l}"];
	Node0x64c5890 -> Node0x64c5630;
	Node0x64c5630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %63 = icmp ugt i32 %53, 131\l  br i1 %63, label %52, label %50, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x64c5630:s0 -> Node0x64c38b0;
	Node0x64c5630:s1 -> Node0x64c3900;
	Node0x64c5470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%64:\l64:                                               \l  %65 = add nuw nsw i32 %5, 32\l  %66 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %65\l  %67 = load float, float addrspace(3)* %66, align 4, !tbaa !16\l  %68 = load float, float addrspace(3)* %24, align 4, !tbaa !16\l  %69 = fadd contract float %67, %68\l  store float %69, float addrspace(3)* %24, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %70 = add nuw nsw i32 %5, 16\l  %71 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %70\l  %72 = load float, float addrspace(3)* %71, align 4, !tbaa !16\l  %73 = load float, float addrspace(3)* %24, align 4, !tbaa !16\l  %74 = fadd contract float %72, %73\l  store float %74, float addrspace(3)* %24, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %75 = add nuw nsw i32 %5, 8\l  %76 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %75\l  %77 = load float, float addrspace(3)* %76, align 4, !tbaa !16\l  %78 = load float, float addrspace(3)* %24, align 4, !tbaa !16\l  %79 = fadd contract float %77, %78\l  store float %79, float addrspace(3)* %24, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %80 = add nuw nsw i32 %5, 4\l  %81 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %80\l  %82 = load float, float addrspace(3)* %81, align 4, !tbaa !16\l  %83 = load float, float addrspace(3)* %24, align 4, !tbaa !16\l  %84 = fadd contract float %82, %83\l  store float %84, float addrspace(3)* %24, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %85 = add nuw nsw i32 %5, 2\l  %86 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %85\l  %87 = load float, float addrspace(3)* %86, align 4, !tbaa !16\l  %88 = load float, float addrspace(3)* %24, align 4, !tbaa !16\l  %89 = fadd contract float %87, %88\l  store float %89, float addrspace(3)* %24, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %90 = add nuw nsw i32 %5, 1\l  %91 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %90\l  %92 = load float, float addrspace(3)* %91, align 4, !tbaa !16\l  %93 = load float, float addrspace(3)* %24, align 4, !tbaa !16\l  %94 = fadd contract float %92, %93\l  store float %94, float addrspace(3)* %24, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %95\l}"];
	Node0x64c5470 -> Node0x64c54c0;
	Node0x64c54c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%95:\l95:                                               \l  %96 = icmp eq i32 %5, 0\l  br i1 %96, label %97, label %101\l|{<s0>T|<s1>F}}"];
	Node0x64c54c0:s0 -> Node0x64c8140;
	Node0x64c54c0:s1 -> Node0x64c8190;
	Node0x64c8140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%97:\l97:                                               \l  %98 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @sdata, i32 0, i32 0), align 4, !tbaa !16\l  %99 = zext i32 %6 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %2, i64 %99\l  store float %98, float addrspace(1)* %100, align 4, !tbaa !16\l  br label %101\l}"];
	Node0x64c8140 -> Node0x64c8190;
	Node0x64c8190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%101:\l101:                                              \l  ret void\l}"];
}
