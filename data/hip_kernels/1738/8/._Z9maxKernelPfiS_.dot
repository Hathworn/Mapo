digraph "CFG for '_Z9maxKernelPfiS_' function" {
	label="CFG for '_Z9maxKernelPfiS_' function";

	Node0x6333130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 1\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %4\l  %17 = shl nuw nsw i32 %11, 1\l  %18 = udiv i32 %14, %11\l  %19 = mul i32 %18, %11\l  %20 = icmp ugt i32 %14, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %17, %22\l  %24 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %4\l  store float 0.000000e+00, float addrspace(3)* %24, align 4, !tbaa !16\l  %25 = icmp ult i32 %16, %1\l  br i1 %25, label %28, label %26\l|{<s0>T|<s1>F}}"];
	Node0x6333130:s0 -> Node0x6336550;
	Node0x6333130:s1 -> Node0x63365e0;
	Node0x63365e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%26:\l26:                                               \l  %27 = icmp ugt i16 %10, 65\l  br i1 %27, label %42, label %40\l|{<s0>T|<s1>F}}"];
	Node0x63365e0:s0 -> Node0x63367b0;
	Node0x63365e0:s1 -> Node0x6336800;
	Node0x6336550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %38, %28 ], [ %16, %3 ]\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %33 = add i32 %29, %11\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %37 = tail call float @llvm.maxnum.f32(float %32, float %36)\l  store float %37, float addrspace(3)* %24, align 4, !tbaa !16\l  %38 = add i32 %29, %23\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %39 = icmp ult i32 %38, %1\l  br i1 %39, label %28, label %26, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x6336550:s0 -> Node0x6336550;
	Node0x6336550:s1 -> Node0x63365e0;
	Node0x6336800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%40:\l40:                                               \l  %41 = icmp ult i32 %4, 32\l  br i1 %41, label %54, label %85\l|{<s0>T|<s1>F}}"];
	Node0x6336800:s0 -> Node0x6337df0;
	Node0x6336800:s1 -> Node0x6337e40;
	Node0x63367b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = phi i32 [ %44, %52 ], [ %11, %26 ]\l  %44 = lshr i32 %43, 1\l  %45 = icmp ult i32 %4, %44\l  br i1 %45, label %46, label %52\l|{<s0>T|<s1>F}}"];
	Node0x63367b0:s0 -> Node0x6338210;
	Node0x63367b0:s1 -> Node0x6337fb0;
	Node0x6338210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%46:\l46:                                               \l  %47 = load float, float addrspace(3)* %24, align 4, !tbaa !16\l  %48 = add nuw nsw i32 %44, %4\l  %49 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %48\l  %50 = load float, float addrspace(3)* %49, align 4, !tbaa !16\l  %51 = tail call float @llvm.maxnum.f32(float %47, float %50)\l  store float %51, float addrspace(3)* %24, align 4, !tbaa !16\l  br label %52\l}"];
	Node0x6338210 -> Node0x6337fb0;
	Node0x6337fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %53 = icmp ugt i32 %43, 131\l  br i1 %53, label %42, label %40, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x6337fb0:s0 -> Node0x63367b0;
	Node0x6337fb0:s1 -> Node0x6336800;
	Node0x6337df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%54:\l54:                                               \l  %55 = load float, float addrspace(3)* %24, align 4, !tbaa !16\l  %56 = add nuw nsw i32 %4, 32\l  %57 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %56\l  %58 = load float, float addrspace(3)* %57, align 4, !tbaa !16\l  %59 = tail call float @llvm.maxnum.f32(float %55, float %58)\l  store float %59, float addrspace(3)* %24, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %60 = load float, float addrspace(3)* %24, align 4, !tbaa !16\l  %61 = add nuw nsw i32 %4, 16\l  %62 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %61\l  %63 = load float, float addrspace(3)* %62, align 4, !tbaa !16\l  %64 = tail call float @llvm.maxnum.f32(float %60, float %63)\l  store float %64, float addrspace(3)* %24, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %65 = load float, float addrspace(3)* %24, align 4, !tbaa !16\l  %66 = add nuw nsw i32 %4, 8\l  %67 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %66\l  %68 = load float, float addrspace(3)* %67, align 4, !tbaa !16\l  %69 = tail call float @llvm.maxnum.f32(float %65, float %68)\l  store float %69, float addrspace(3)* %24, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %70 = load float, float addrspace(3)* %24, align 4, !tbaa !16\l  %71 = add nuw nsw i32 %4, 4\l  %72 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %71\l  %73 = load float, float addrspace(3)* %72, align 4, !tbaa !16\l  %74 = tail call float @llvm.maxnum.f32(float %70, float %73)\l  store float %74, float addrspace(3)* %24, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %75 = load float, float addrspace(3)* %24, align 4, !tbaa !16\l  %76 = add nuw nsw i32 %4, 2\l  %77 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %76\l  %78 = load float, float addrspace(3)* %77, align 4, !tbaa !16\l  %79 = tail call float @llvm.maxnum.f32(float %75, float %78)\l  store float %79, float addrspace(3)* %24, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %80 = load float, float addrspace(3)* %24, align 4, !tbaa !16\l  %81 = add nuw nsw i32 %4, 1\l  %82 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %81\l  %83 = load float, float addrspace(3)* %82, align 4, !tbaa !16\l  %84 = tail call float @llvm.maxnum.f32(float %80, float %83)\l  store float %84, float addrspace(3)* %24, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %85\l}"];
	Node0x6337df0 -> Node0x6337e40;
	Node0x6337e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%85:\l85:                                               \l  %86 = icmp eq i32 %4, 0\l  br i1 %86, label %87, label %91\l|{<s0>T|<s1>F}}"];
	Node0x6337e40:s0 -> Node0x633ae60;
	Node0x6337e40:s1 -> Node0x633aeb0;
	Node0x633ae60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%87:\l87:                                               \l  %88 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @sdata, i32 0, i32 0), align 4, !tbaa !16\l  %89 = zext i32 %5 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %2, i64 %89\l  store float %88, float addrspace(1)* %90, align 4, !tbaa !16\l  br label %91\l}"];
	Node0x633ae60 -> Node0x633aeb0;
	Node0x633aeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%91:\l91:                                               \l  ret void\l}"];
}
