digraph "CFG for '_Z24imageNormalizationKernelP15HIP_vector_typeIfLj3EEii' function" {
	label="CFG for '_Z24imageNormalizationKernelP15HIP_vector_typeIfLj3EEii' function";

	Node0x478c110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = add i32 %19, %13\l  %21 = icmp slt i32 %12, %1\l  %22 = icmp slt i32 %20, %2\l  %23 = select i1 %21, i1 %22, i1 false\l  br i1 %23, label %24, label %46\l|{<s0>T|<s1>F}}"];
	Node0x478c110:s0 -> Node0x478fb20;
	Node0x478c110:s1 -> Node0x478fbb0;
	Node0x478fb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%24:\l24:                                               \l  %25 = mul nsw i32 %20, %1\l  %26 = add nsw i32 %25, %12\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %27, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  %29 = load float, float addrspace(1)* %28, align 4, !amdgpu.noclobber !6\l  %30 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %27, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  %31 = load float, float addrspace(1)* %30, align 4, !amdgpu.noclobber !6\l  %32 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %27, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  %33 = load float, float addrspace(1)* %32, align 4, !amdgpu.noclobber !6\l  %34 = fpext float %29 to double\l  %35 = fadd contract double %34, -1.275000e+02\l  %36 = fmul contract double %35, 7.812500e-03\l  %37 = fptrunc double %36 to float\l  %38 = fpext float %31 to double\l  %39 = fadd contract double %38, -1.275000e+02\l  %40 = fmul contract double %39, 7.812500e-03\l  %41 = fptrunc double %40 to float\l  %42 = fpext float %33 to double\l  %43 = fadd contract double %42, -1.275000e+02\l  %44 = fmul contract double %43, 7.812500e-03\l  %45 = fptrunc double %44 to float\l  store float %37, float addrspace(1)* %28, align 4\l  store float %41, float addrspace(1)* %30, align 4\l  store float %45, float addrspace(1)* %32, align 4\l  br label %46\l}"];
	Node0x478fb20 -> Node0x478fbb0;
	Node0x478fbb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  ret void\l}"];
}
