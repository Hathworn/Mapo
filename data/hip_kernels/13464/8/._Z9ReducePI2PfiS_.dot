digraph "CFG for '_Z9ReducePI2PfiS_' function" {
	label="CFG for '_Z9ReducePI2PfiS_' function";

	Node0x4de4260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = zext i32 %4 to i64\l  %6 = getelementptr inbounds float, float addrspace(1)* %0, i64 %5\l  %7 = load float, float addrspace(1)* %6, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %8 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s_sum,\l... i32 0, i32 %4\l  store float %7, float addrspace(3)* %8, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !10, !invariant.load\l... !9\l  %13 = icmp ult i16 %12, 2\l  br i1 %13, label %16, label %14\l|{<s0>T|<s1>F}}"];
	Node0x4de4260:s0 -> Node0x4de71c0;
	Node0x4de4260:s1 -> Node0x4de7250;
	Node0x4de7250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%14:\l14:                                               \l  %15 = zext i16 %12 to i32\l  br label %27\l}"];
	Node0x4de7250 -> Node0x4de7400;
	Node0x4de71c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%16:\l16:                                               \l  %17 = load float, float addrspace(3)* %8, align 4, !tbaa !5\l  %18 = fpext float %17 to double\l  %19 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %20 = getelementptr inbounds i8, i8 addrspace(4)* %19, i64 24\l  %21 = bitcast i8 addrspace(4)* %20 to i64 addrspace(4)*\l  %22 = load i64, i64 addrspace(4)* %21, align 8, !tbaa !11\l  %23 = inttoptr i64 %22 to i8 addrspace(1)*\l  %24 = addrspacecast i8 addrspace(1)* %23 to i8*\l  %25 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %26 = extractelement \<2 x i64\> %25, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([7 x i8], [7 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %39, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4de71c0:s0 -> Node0x4de8460;
	Node0x4de71c0:s1 -> Node0x4de8e50;
	Node0x4de7400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%27:\l27:                                               \l  %28 = phi i32 [ %29, %37 ], [ %15, %14 ]\l  %29 = lshr i32 %28, 1\l  %30 = icmp ult i32 %4, %29\l  br i1 %30, label %31, label %37\l|{<s0>T|<s1>F}}"];
	Node0x4de7400:s0 -> Node0x4de9250;
	Node0x4de7400:s1 -> Node0x4de8fc0;
	Node0x4de9250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%31:\l31:                                               \l  %32 = add nuw nsw i32 %29, %4\l  %33 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s_sum,\l... i32 0, i32 %32\l  %34 = load float, float addrspace(3)* %33, align 4, !tbaa !5\l  %35 = load float, float addrspace(3)* %8, align 4, !tbaa !5\l  %36 = fadd contract float %34, %35\l  store float %36, float addrspace(3)* %8, align 4, !tbaa !5\l  br label %37\l}"];
	Node0x4de9250 -> Node0x4de8fc0;
	Node0x4de8fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%37:\l37:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %38 = icmp ult i32 %28, 4\l  br i1 %38, label %16, label %27, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4de8fc0:s0 -> Node0x4de71c0;
	Node0x4de8fc0:s1 -> Node0x4de7400;
	Node0x4de8460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%39:\l39:                                               \l  %40 = and i64 %26, -225\l  %41 = or i64 %40, 32\l  %42 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef %41, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %484\l}"];
	Node0x4de8460 -> Node0x4de9d20;
	Node0x4de8e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%43:\l43:                                               \l  %44 = and i64 %26, 2\l  %45 = and i64 %26, -3\l  %46 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %45, i64 0\l  br label %47\l}"];
	Node0x4de8e50 -> Node0x4dea880;
	Node0x4dea880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%47:\l47:                                               \l  %48 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([7 x i8], [7 x i8] addrspace(4)* @.str, i64 0, i64 0)\l... to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([7 x i8], [7 x i8] addrspace(4)* @.str,\l... i64 0, i64 6) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint ([7 x\l... i8]* addrspacecast ([7 x i8] addrspace(4)* @.str to [7 x i8]*) to i64)), i64\l... 1))), %43 ], [ %481, %473 ]\l  %49 = phi i8 addrspace(4)* [ getelementptr inbounds ([7 x i8], [7 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %43 ], [ %482, %473 ]\l  %50 = phi \<2 x i64\> [ %46, %43 ], [ %480, %473 ]\l  %51 = icmp ugt i64 %48, 56\l  %52 = extractelement \<2 x i64\> %50, i64 0\l  %53 = or i64 %52, %44\l  %54 = insertelement \<2 x i64\> poison, i64 %53, i64 0\l  %55 = select i1 %51, \<2 x i64\> %50, \<2 x i64\> %54\l  %56 = tail call i64 @llvm.umin.i64(i64 %48, i64 56)\l  %57 = trunc i64 %56 to i32\l  %58 = extractelement \<2 x i64\> %55, i64 0\l  %59 = icmp ugt i32 %57, 7\l  br i1 %59, label %62, label %60\l|{<s0>T|<s1>F}}"];
	Node0x4dea880:s0 -> Node0x4deb7f0;
	Node0x4dea880:s1 -> Node0x4deb880;
	Node0x4deb880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%60:\l60:                                               \l  %61 = icmp eq i32 %57, 0\l  br i1 %61, label %115, label %102\l|{<s0>T|<s1>F}}"];
	Node0x4deb880:s0 -> Node0x4deba50;
	Node0x4deb880:s1 -> Node0x4debaa0;
	Node0x4deb7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%62:\l62:                                               \l  %63 = load i8, i8 addrspace(4)* %49, align 1, !tbaa !17\l  %64 = zext i8 %63 to i64\l  %65 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 1\l  %66 = load i8, i8 addrspace(4)* %65, align 1, !tbaa !17\l  %67 = zext i8 %66 to i64\l  %68 = shl nuw nsw i64 %67, 8\l  %69 = or i64 %68, %64\l  %70 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 2\l  %71 = load i8, i8 addrspace(4)* %70, align 1, !tbaa !17\l  %72 = zext i8 %71 to i64\l  %73 = shl nuw nsw i64 %72, 16\l  %74 = or i64 %69, %73\l  %75 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 3\l  %76 = load i8, i8 addrspace(4)* %75, align 1, !tbaa !17\l  %77 = zext i8 %76 to i64\l  %78 = shl nuw nsw i64 %77, 24\l  %79 = or i64 %74, %78\l  %80 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 4\l  %81 = load i8, i8 addrspace(4)* %80, align 1, !tbaa !17\l  %82 = zext i8 %81 to i64\l  %83 = shl nuw nsw i64 %82, 32\l  %84 = or i64 %79, %83\l  %85 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 5\l  %86 = load i8, i8 addrspace(4)* %85, align 1, !tbaa !17\l  %87 = zext i8 %86 to i64\l  %88 = shl nuw nsw i64 %87, 40\l  %89 = or i64 %84, %88\l  %90 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 6\l  %91 = load i8, i8 addrspace(4)* %90, align 1, !tbaa !17\l  %92 = zext i8 %91 to i64\l  %93 = shl nuw nsw i64 %92, 48\l  %94 = or i64 %89, %93\l  %95 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 7\l  %96 = load i8, i8 addrspace(4)* %95, align 1, !tbaa !17\l  %97 = zext i8 %96 to i64\l  %98 = shl nuw i64 %97, 56\l  %99 = or i64 %94, %98\l  %100 = add nsw i32 %57, -8\l  %101 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 8\l  br label %115\l}"];
	Node0x4deb7f0 -> Node0x4deba50;
	Node0x4debaa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  %103 = phi i32 [ %113, %102 ], [ 0, %60 ]\l  %104 = phi i64 [ %112, %102 ], [ 0, %60 ]\l  %105 = zext i32 %103 to i64\l  %106 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 %105\l  %107 = load i8, i8 addrspace(4)* %106, align 1, !tbaa !17\l  %108 = zext i8 %107 to i64\l  %109 = shl i32 %103, 3\l  %110 = zext i32 %109 to i64\l  %111 = shl nuw i64 %108, %110\l  %112 = or i64 %111, %104\l  %113 = add nuw nsw i32 %103, 1\l  %114 = icmp eq i32 %113, %57\l  br i1 %114, label %115, label %102, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x4debaa0:s0 -> Node0x4deba50;
	Node0x4debaa0:s1 -> Node0x4debaa0;
	Node0x4deba50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%115:\l115:                                              \l  %116 = phi i8 addrspace(4)* [ %101, %62 ], [ %49, %60 ], [ %49, %102 ]\l  %117 = phi i32 [ %100, %62 ], [ 0, %60 ], [ 0, %102 ]\l  %118 = phi i64 [ %99, %62 ], [ 0, %60 ], [ %112, %102 ]\l  %119 = icmp ugt i32 %117, 7\l  br i1 %119, label %122, label %120\l|{<s0>T|<s1>F}}"];
	Node0x4deba50:s0 -> Node0x4dee710;
	Node0x4deba50:s1 -> Node0x4dee760;
	Node0x4dee760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%120:\l120:                                              \l  %121 = icmp eq i32 %117, 0\l  br i1 %121, label %175, label %162\l|{<s0>T|<s1>F}}"];
	Node0x4dee760:s0 -> Node0x4dee930;
	Node0x4dee760:s1 -> Node0x4dee980;
	Node0x4dee710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%122:\l122:                                              \l  %123 = load i8, i8 addrspace(4)* %116, align 1, !tbaa !17\l  %124 = zext i8 %123 to i64\l  %125 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 1\l  %126 = load i8, i8 addrspace(4)* %125, align 1, !tbaa !17\l  %127 = zext i8 %126 to i64\l  %128 = shl nuw nsw i64 %127, 8\l  %129 = or i64 %128, %124\l  %130 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 2\l  %131 = load i8, i8 addrspace(4)* %130, align 1, !tbaa !17\l  %132 = zext i8 %131 to i64\l  %133 = shl nuw nsw i64 %132, 16\l  %134 = or i64 %129, %133\l  %135 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 3\l  %136 = load i8, i8 addrspace(4)* %135, align 1, !tbaa !17\l  %137 = zext i8 %136 to i64\l  %138 = shl nuw nsw i64 %137, 24\l  %139 = or i64 %134, %138\l  %140 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 4\l  %141 = load i8, i8 addrspace(4)* %140, align 1, !tbaa !17\l  %142 = zext i8 %141 to i64\l  %143 = shl nuw nsw i64 %142, 32\l  %144 = or i64 %139, %143\l  %145 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 5\l  %146 = load i8, i8 addrspace(4)* %145, align 1, !tbaa !17\l  %147 = zext i8 %146 to i64\l  %148 = shl nuw nsw i64 %147, 40\l  %149 = or i64 %144, %148\l  %150 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 6\l  %151 = load i8, i8 addrspace(4)* %150, align 1, !tbaa !17\l  %152 = zext i8 %151 to i64\l  %153 = shl nuw nsw i64 %152, 48\l  %154 = or i64 %149, %153\l  %155 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 7\l  %156 = load i8, i8 addrspace(4)* %155, align 1, !tbaa !17\l  %157 = zext i8 %156 to i64\l  %158 = shl nuw i64 %157, 56\l  %159 = or i64 %154, %158\l  %160 = add nsw i32 %117, -8\l  %161 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 8\l  br label %175\l}"];
	Node0x4dee710 -> Node0x4dee930;
	Node0x4dee980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%162:\l162:                                              \l  %163 = phi i32 [ %173, %162 ], [ 0, %120 ]\l  %164 = phi i64 [ %172, %162 ], [ 0, %120 ]\l  %165 = zext i32 %163 to i64\l  %166 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 %165\l  %167 = load i8, i8 addrspace(4)* %166, align 1, !tbaa !17\l  %168 = zext i8 %167 to i64\l  %169 = shl i32 %163, 3\l  %170 = zext i32 %169 to i64\l  %171 = shl nuw i64 %168, %170\l  %172 = or i64 %171, %164\l  %173 = add nuw nsw i32 %163, 1\l  %174 = icmp eq i32 %173, %117\l  br i1 %174, label %175, label %162\l|{<s0>T|<s1>F}}"];
	Node0x4dee980:s0 -> Node0x4dee930;
	Node0x4dee980:s1 -> Node0x4dee980;
	Node0x4dee930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%175:\l175:                                              \l  %176 = phi i8 addrspace(4)* [ %161, %122 ], [ %116, %120 ], [ %116, %162 ]\l  %177 = phi i32 [ %160, %122 ], [ 0, %120 ], [ 0, %162 ]\l  %178 = phi i64 [ %159, %122 ], [ 0, %120 ], [ %172, %162 ]\l  %179 = icmp ugt i32 %177, 7\l  br i1 %179, label %182, label %180\l|{<s0>T|<s1>F}}"];
	Node0x4dee930:s0 -> Node0x4df0e20;
	Node0x4dee930:s1 -> Node0x4df0e70;
	Node0x4df0e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%180:\l180:                                              \l  %181 = icmp eq i32 %177, 0\l  br i1 %181, label %235, label %222\l|{<s0>T|<s1>F}}"];
	Node0x4df0e70:s0 -> Node0x4df1000;
	Node0x4df0e70:s1 -> Node0x4df1050;
	Node0x4df0e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%182:\l182:                                              \l  %183 = load i8, i8 addrspace(4)* %176, align 1, !tbaa !17\l  %184 = zext i8 %183 to i64\l  %185 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 1\l  %186 = load i8, i8 addrspace(4)* %185, align 1, !tbaa !17\l  %187 = zext i8 %186 to i64\l  %188 = shl nuw nsw i64 %187, 8\l  %189 = or i64 %188, %184\l  %190 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 2\l  %191 = load i8, i8 addrspace(4)* %190, align 1, !tbaa !17\l  %192 = zext i8 %191 to i64\l  %193 = shl nuw nsw i64 %192, 16\l  %194 = or i64 %189, %193\l  %195 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 3\l  %196 = load i8, i8 addrspace(4)* %195, align 1, !tbaa !17\l  %197 = zext i8 %196 to i64\l  %198 = shl nuw nsw i64 %197, 24\l  %199 = or i64 %194, %198\l  %200 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 4\l  %201 = load i8, i8 addrspace(4)* %200, align 1, !tbaa !17\l  %202 = zext i8 %201 to i64\l  %203 = shl nuw nsw i64 %202, 32\l  %204 = or i64 %199, %203\l  %205 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 5\l  %206 = load i8, i8 addrspace(4)* %205, align 1, !tbaa !17\l  %207 = zext i8 %206 to i64\l  %208 = shl nuw nsw i64 %207, 40\l  %209 = or i64 %204, %208\l  %210 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 6\l  %211 = load i8, i8 addrspace(4)* %210, align 1, !tbaa !17\l  %212 = zext i8 %211 to i64\l  %213 = shl nuw nsw i64 %212, 48\l  %214 = or i64 %209, %213\l  %215 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 7\l  %216 = load i8, i8 addrspace(4)* %215, align 1, !tbaa !17\l  %217 = zext i8 %216 to i64\l  %218 = shl nuw i64 %217, 56\l  %219 = or i64 %214, %218\l  %220 = add nsw i32 %177, -8\l  %221 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 8\l  br label %235\l}"];
	Node0x4df0e20 -> Node0x4df1000;
	Node0x4df1050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%222:\l222:                                              \l  %223 = phi i32 [ %233, %222 ], [ 0, %180 ]\l  %224 = phi i64 [ %232, %222 ], [ 0, %180 ]\l  %225 = zext i32 %223 to i64\l  %226 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 %225\l  %227 = load i8, i8 addrspace(4)* %226, align 1, !tbaa !17\l  %228 = zext i8 %227 to i64\l  %229 = shl i32 %223, 3\l  %230 = zext i32 %229 to i64\l  %231 = shl nuw i64 %228, %230\l  %232 = or i64 %231, %224\l  %233 = add nuw nsw i32 %223, 1\l  %234 = icmp eq i32 %233, %177\l  br i1 %234, label %235, label %222\l|{<s0>T|<s1>F}}"];
	Node0x4df1050:s0 -> Node0x4df1000;
	Node0x4df1050:s1 -> Node0x4df1050;
	Node0x4df1000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%235:\l235:                                              \l  %236 = phi i8 addrspace(4)* [ %221, %182 ], [ %176, %180 ], [ %176, %222 ]\l  %237 = phi i32 [ %220, %182 ], [ 0, %180 ], [ 0, %222 ]\l  %238 = phi i64 [ %219, %182 ], [ 0, %180 ], [ %232, %222 ]\l  %239 = icmp ugt i32 %237, 7\l  br i1 %239, label %242, label %240\l|{<s0>T|<s1>F}}"];
	Node0x4df1000:s0 -> Node0x4df30a0;
	Node0x4df1000:s1 -> Node0x4df30f0;
	Node0x4df30f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%240:\l240:                                              \l  %241 = icmp eq i32 %237, 0\l  br i1 %241, label %295, label %282\l|{<s0>T|<s1>F}}"];
	Node0x4df30f0:s0 -> Node0x4df3280;
	Node0x4df30f0:s1 -> Node0x4df32d0;
	Node0x4df30a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%242:\l242:                                              \l  %243 = load i8, i8 addrspace(4)* %236, align 1, !tbaa !17\l  %244 = zext i8 %243 to i64\l  %245 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 1\l  %246 = load i8, i8 addrspace(4)* %245, align 1, !tbaa !17\l  %247 = zext i8 %246 to i64\l  %248 = shl nuw nsw i64 %247, 8\l  %249 = or i64 %248, %244\l  %250 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 2\l  %251 = load i8, i8 addrspace(4)* %250, align 1, !tbaa !17\l  %252 = zext i8 %251 to i64\l  %253 = shl nuw nsw i64 %252, 16\l  %254 = or i64 %249, %253\l  %255 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 3\l  %256 = load i8, i8 addrspace(4)* %255, align 1, !tbaa !17\l  %257 = zext i8 %256 to i64\l  %258 = shl nuw nsw i64 %257, 24\l  %259 = or i64 %254, %258\l  %260 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 4\l  %261 = load i8, i8 addrspace(4)* %260, align 1, !tbaa !17\l  %262 = zext i8 %261 to i64\l  %263 = shl nuw nsw i64 %262, 32\l  %264 = or i64 %259, %263\l  %265 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 5\l  %266 = load i8, i8 addrspace(4)* %265, align 1, !tbaa !17\l  %267 = zext i8 %266 to i64\l  %268 = shl nuw nsw i64 %267, 40\l  %269 = or i64 %264, %268\l  %270 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 6\l  %271 = load i8, i8 addrspace(4)* %270, align 1, !tbaa !17\l  %272 = zext i8 %271 to i64\l  %273 = shl nuw nsw i64 %272, 48\l  %274 = or i64 %269, %273\l  %275 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 7\l  %276 = load i8, i8 addrspace(4)* %275, align 1, !tbaa !17\l  %277 = zext i8 %276 to i64\l  %278 = shl nuw i64 %277, 56\l  %279 = or i64 %274, %278\l  %280 = add nsw i32 %237, -8\l  %281 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 8\l  br label %295\l}"];
	Node0x4df30a0 -> Node0x4df3280;
	Node0x4df32d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%282:\l282:                                              \l  %283 = phi i32 [ %293, %282 ], [ 0, %240 ]\l  %284 = phi i64 [ %292, %282 ], [ 0, %240 ]\l  %285 = zext i32 %283 to i64\l  %286 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 %285\l  %287 = load i8, i8 addrspace(4)* %286, align 1, !tbaa !17\l  %288 = zext i8 %287 to i64\l  %289 = shl i32 %283, 3\l  %290 = zext i32 %289 to i64\l  %291 = shl nuw i64 %288, %290\l  %292 = or i64 %291, %284\l  %293 = add nuw nsw i32 %283, 1\l  %294 = icmp eq i32 %293, %237\l  br i1 %294, label %295, label %282\l|{<s0>T|<s1>F}}"];
	Node0x4df32d0:s0 -> Node0x4df3280;
	Node0x4df32d0:s1 -> Node0x4df32d0;
	Node0x4df3280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%295:\l295:                                              \l  %296 = phi i8 addrspace(4)* [ %281, %242 ], [ %236, %240 ], [ %236, %282 ]\l  %297 = phi i32 [ %280, %242 ], [ 0, %240 ], [ 0, %282 ]\l  %298 = phi i64 [ %279, %242 ], [ 0, %240 ], [ %292, %282 ]\l  %299 = icmp ugt i32 %297, 7\l  br i1 %299, label %302, label %300\l|{<s0>T|<s1>F}}"];
	Node0x4df3280:s0 -> Node0x4df5b20;
	Node0x4df3280:s1 -> Node0x4df5b70;
	Node0x4df5b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%300:\l300:                                              \l  %301 = icmp eq i32 %297, 0\l  br i1 %301, label %355, label %342\l|{<s0>T|<s1>F}}"];
	Node0x4df5b70:s0 -> Node0x4df5d00;
	Node0x4df5b70:s1 -> Node0x4df5d50;
	Node0x4df5b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%302:\l302:                                              \l  %303 = load i8, i8 addrspace(4)* %296, align 1, !tbaa !17\l  %304 = zext i8 %303 to i64\l  %305 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 1\l  %306 = load i8, i8 addrspace(4)* %305, align 1, !tbaa !17\l  %307 = zext i8 %306 to i64\l  %308 = shl nuw nsw i64 %307, 8\l  %309 = or i64 %308, %304\l  %310 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 2\l  %311 = load i8, i8 addrspace(4)* %310, align 1, !tbaa !17\l  %312 = zext i8 %311 to i64\l  %313 = shl nuw nsw i64 %312, 16\l  %314 = or i64 %309, %313\l  %315 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 3\l  %316 = load i8, i8 addrspace(4)* %315, align 1, !tbaa !17\l  %317 = zext i8 %316 to i64\l  %318 = shl nuw nsw i64 %317, 24\l  %319 = or i64 %314, %318\l  %320 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 4\l  %321 = load i8, i8 addrspace(4)* %320, align 1, !tbaa !17\l  %322 = zext i8 %321 to i64\l  %323 = shl nuw nsw i64 %322, 32\l  %324 = or i64 %319, %323\l  %325 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 5\l  %326 = load i8, i8 addrspace(4)* %325, align 1, !tbaa !17\l  %327 = zext i8 %326 to i64\l  %328 = shl nuw nsw i64 %327, 40\l  %329 = or i64 %324, %328\l  %330 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 6\l  %331 = load i8, i8 addrspace(4)* %330, align 1, !tbaa !17\l  %332 = zext i8 %331 to i64\l  %333 = shl nuw nsw i64 %332, 48\l  %334 = or i64 %329, %333\l  %335 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 7\l  %336 = load i8, i8 addrspace(4)* %335, align 1, !tbaa !17\l  %337 = zext i8 %336 to i64\l  %338 = shl nuw i64 %337, 56\l  %339 = or i64 %334, %338\l  %340 = add nsw i32 %297, -8\l  %341 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 8\l  br label %355\l}"];
	Node0x4df5b20 -> Node0x4df5d00;
	Node0x4df5d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%342:\l342:                                              \l  %343 = phi i32 [ %353, %342 ], [ 0, %300 ]\l  %344 = phi i64 [ %352, %342 ], [ 0, %300 ]\l  %345 = zext i32 %343 to i64\l  %346 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 %345\l  %347 = load i8, i8 addrspace(4)* %346, align 1, !tbaa !17\l  %348 = zext i8 %347 to i64\l  %349 = shl i32 %343, 3\l  %350 = zext i32 %349 to i64\l  %351 = shl nuw i64 %348, %350\l  %352 = or i64 %351, %344\l  %353 = add nuw nsw i32 %343, 1\l  %354 = icmp eq i32 %353, %297\l  br i1 %354, label %355, label %342\l|{<s0>T|<s1>F}}"];
	Node0x4df5d50:s0 -> Node0x4df5d00;
	Node0x4df5d50:s1 -> Node0x4df5d50;
	Node0x4df5d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%355:\l355:                                              \l  %356 = phi i8 addrspace(4)* [ %341, %302 ], [ %296, %300 ], [ %296, %342 ]\l  %357 = phi i32 [ %340, %302 ], [ 0, %300 ], [ 0, %342 ]\l  %358 = phi i64 [ %339, %302 ], [ 0, %300 ], [ %352, %342 ]\l  %359 = icmp ugt i32 %357, 7\l  br i1 %359, label %362, label %360\l|{<s0>T|<s1>F}}"];
	Node0x4df5d00:s0 -> Node0x4df87c0;
	Node0x4df5d00:s1 -> Node0x4df8810;
	Node0x4df8810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%360:\l360:                                              \l  %361 = icmp eq i32 %357, 0\l  br i1 %361, label %415, label %402\l|{<s0>T|<s1>F}}"];
	Node0x4df8810:s0 -> Node0x4df89a0;
	Node0x4df8810:s1 -> Node0x4df89f0;
	Node0x4df87c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%362:\l362:                                              \l  %363 = load i8, i8 addrspace(4)* %356, align 1, !tbaa !17\l  %364 = zext i8 %363 to i64\l  %365 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 1\l  %366 = load i8, i8 addrspace(4)* %365, align 1, !tbaa !17\l  %367 = zext i8 %366 to i64\l  %368 = shl nuw nsw i64 %367, 8\l  %369 = or i64 %368, %364\l  %370 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 2\l  %371 = load i8, i8 addrspace(4)* %370, align 1, !tbaa !17\l  %372 = zext i8 %371 to i64\l  %373 = shl nuw nsw i64 %372, 16\l  %374 = or i64 %369, %373\l  %375 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 3\l  %376 = load i8, i8 addrspace(4)* %375, align 1, !tbaa !17\l  %377 = zext i8 %376 to i64\l  %378 = shl nuw nsw i64 %377, 24\l  %379 = or i64 %374, %378\l  %380 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 4\l  %381 = load i8, i8 addrspace(4)* %380, align 1, !tbaa !17\l  %382 = zext i8 %381 to i64\l  %383 = shl nuw nsw i64 %382, 32\l  %384 = or i64 %379, %383\l  %385 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 5\l  %386 = load i8, i8 addrspace(4)* %385, align 1, !tbaa !17\l  %387 = zext i8 %386 to i64\l  %388 = shl nuw nsw i64 %387, 40\l  %389 = or i64 %384, %388\l  %390 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 6\l  %391 = load i8, i8 addrspace(4)* %390, align 1, !tbaa !17\l  %392 = zext i8 %391 to i64\l  %393 = shl nuw nsw i64 %392, 48\l  %394 = or i64 %389, %393\l  %395 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 7\l  %396 = load i8, i8 addrspace(4)* %395, align 1, !tbaa !17\l  %397 = zext i8 %396 to i64\l  %398 = shl nuw i64 %397, 56\l  %399 = or i64 %394, %398\l  %400 = add nsw i32 %357, -8\l  %401 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 8\l  br label %415\l}"];
	Node0x4df87c0 -> Node0x4df89a0;
	Node0x4df89f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%402:\l402:                                              \l  %403 = phi i32 [ %413, %402 ], [ 0, %360 ]\l  %404 = phi i64 [ %412, %402 ], [ 0, %360 ]\l  %405 = zext i32 %403 to i64\l  %406 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 %405\l  %407 = load i8, i8 addrspace(4)* %406, align 1, !tbaa !17\l  %408 = zext i8 %407 to i64\l  %409 = shl i32 %403, 3\l  %410 = zext i32 %409 to i64\l  %411 = shl nuw i64 %408, %410\l  %412 = or i64 %411, %404\l  %413 = add nuw nsw i32 %403, 1\l  %414 = icmp eq i32 %413, %357\l  br i1 %414, label %415, label %402\l|{<s0>T|<s1>F}}"];
	Node0x4df89f0:s0 -> Node0x4df89a0;
	Node0x4df89f0:s1 -> Node0x4df89f0;
	Node0x4df89a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%415:\l415:                                              \l  %416 = phi i8 addrspace(4)* [ %401, %362 ], [ %356, %360 ], [ %356, %402 ]\l  %417 = phi i32 [ %400, %362 ], [ 0, %360 ], [ 0, %402 ]\l  %418 = phi i64 [ %399, %362 ], [ 0, %360 ], [ %412, %402 ]\l  %419 = icmp ugt i32 %417, 7\l  br i1 %419, label %422, label %420\l|{<s0>T|<s1>F}}"];
	Node0x4df89a0:s0 -> Node0x4dfb020;
	Node0x4df89a0:s1 -> Node0x4dfb070;
	Node0x4dfb070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%420:\l420:                                              \l  %421 = icmp eq i32 %417, 0\l  br i1 %421, label %473, label %460\l|{<s0>T|<s1>F}}"];
	Node0x4dfb070:s0 -> Node0x4dead20;
	Node0x4dfb070:s1 -> Node0x4dfb200;
	Node0x4dfb020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%422:\l422:                                              \l  %423 = load i8, i8 addrspace(4)* %416, align 1, !tbaa !17\l  %424 = zext i8 %423 to i64\l  %425 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 1\l  %426 = load i8, i8 addrspace(4)* %425, align 1, !tbaa !17\l  %427 = zext i8 %426 to i64\l  %428 = shl nuw nsw i64 %427, 8\l  %429 = or i64 %428, %424\l  %430 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 2\l  %431 = load i8, i8 addrspace(4)* %430, align 1, !tbaa !17\l  %432 = zext i8 %431 to i64\l  %433 = shl nuw nsw i64 %432, 16\l  %434 = or i64 %429, %433\l  %435 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 3\l  %436 = load i8, i8 addrspace(4)* %435, align 1, !tbaa !17\l  %437 = zext i8 %436 to i64\l  %438 = shl nuw nsw i64 %437, 24\l  %439 = or i64 %434, %438\l  %440 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 4\l  %441 = load i8, i8 addrspace(4)* %440, align 1, !tbaa !17\l  %442 = zext i8 %441 to i64\l  %443 = shl nuw nsw i64 %442, 32\l  %444 = or i64 %439, %443\l  %445 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 5\l  %446 = load i8, i8 addrspace(4)* %445, align 1, !tbaa !17\l  %447 = zext i8 %446 to i64\l  %448 = shl nuw nsw i64 %447, 40\l  %449 = or i64 %444, %448\l  %450 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 6\l  %451 = load i8, i8 addrspace(4)* %450, align 1, !tbaa !17\l  %452 = zext i8 %451 to i64\l  %453 = shl nuw nsw i64 %452, 48\l  %454 = or i64 %449, %453\l  %455 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 7\l  %456 = load i8, i8 addrspace(4)* %455, align 1, !tbaa !17\l  %457 = zext i8 %456 to i64\l  %458 = shl nuw i64 %457, 56\l  %459 = or i64 %454, %458\l  br label %473\l}"];
	Node0x4dfb020 -> Node0x4dead20;
	Node0x4dfb200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%460:\l460:                                              \l  %461 = phi i32 [ %471, %460 ], [ 0, %420 ]\l  %462 = phi i64 [ %470, %460 ], [ 0, %420 ]\l  %463 = zext i32 %461 to i64\l  %464 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 %463\l  %465 = load i8, i8 addrspace(4)* %464, align 1, !tbaa !17\l  %466 = zext i8 %465 to i64\l  %467 = shl i32 %461, 3\l  %468 = zext i32 %467 to i64\l  %469 = shl nuw i64 %466, %468\l  %470 = or i64 %469, %462\l  %471 = add nuw nsw i32 %461, 1\l  %472 = icmp eq i32 %471, %417\l  br i1 %472, label %473, label %460\l|{<s0>T|<s1>F}}"];
	Node0x4dfb200:s0 -> Node0x4dead20;
	Node0x4dfb200:s1 -> Node0x4dfb200;
	Node0x4dead20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%473:\l473:                                              \l  %474 = phi i64 [ %459, %422 ], [ 0, %420 ], [ %470, %460 ]\l  %475 = shl nuw nsw i64 %56, 2\l  %476 = add nuw nsw i64 %475, 28\l  %477 = and i64 %476, 480\l  %478 = and i64 %58, -225\l  %479 = or i64 %478, %477\l  %480 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef %479, i64 noundef %118, i64 noundef %178, i64 noundef %238, i64\l... noundef %298, i64 noundef %358, i64 noundef %418, i64 noundef %474) #11\l  %481 = sub i64 %48, %56\l  %482 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 %56\l  %483 = icmp eq i64 %481, 0\l  br i1 %483, label %484, label %47\l|{<s0>T|<s1>F}}"];
	Node0x4dead20:s0 -> Node0x4de9d20;
	Node0x4dead20:s1 -> Node0x4dea880;
	Node0x4de9d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%484:\l484:                                              \l  %485 = phi \<2 x i64\> [ %42, %39 ], [ %480, %473 ]\l  %486 = extractelement \<2 x i64\> %485, i64 0\l  %487 = and i64 %486, -225\l  %488 = or i64 %487, 32\l  %489 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef %488, i64 noundef %5, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %490 = extractelement \<2 x i64\> %489, i64 0\l  %491 = bitcast double %18 to i64\l  %492 = and i64 %490, -227\l  %493 = or i64 %492, 34\l  %494 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef %493, i64 noundef %491, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %495 = icmp eq i32 %4, 0\l  br i1 %495, label %496, label %959\l|{<s0>T|<s1>F}}"];
	Node0x4de9d20:s0 -> Node0x4dfe120;
	Node0x4de9d20:s1 -> Node0x4deacb0;
	Node0x4dfe120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%496:\l496:                                              \l  %497 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @s_sum, i32 0, i32 0), align 4, !tbaa !5\l  %498 = sitofp i32 %1 to float\l  %499 = fdiv contract float %497, %498\l  store float %499, float addrspace(1)* %2, align 4, !tbaa !5\l  %500 = fpext float %499 to double\l  %501 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %502 = extractelement \<2 x i64\> %501, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([7 x i8], [7 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %503, label %507\l|{<s0>T|<s1>F}}"];
	Node0x4dfe120:s0 -> Node0x4dfe790;
	Node0x4dfe120:s1 -> Node0x4dfea10;
	Node0x4dfe790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%503:\l503:                                              \l  %504 = and i64 %502, -225\l  %505 = or i64 %504, 32\l  %506 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef %505, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %948\l}"];
	Node0x4dfe790 -> Node0x4dfec30;
	Node0x4dfea10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%507:\l507:                                              \l  %508 = and i64 %502, 2\l  %509 = and i64 %502, -3\l  %510 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %509, i64 0\l  br label %511\l}"];
	Node0x4dfea10 -> Node0x4dfecf0;
	Node0x4dfecf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%511:\l511:                                              \l  %512 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([7 x i8], [7 x i8] addrspace(4)* @.str, i64 0, i64 0)\l... to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([7 x i8], [7 x i8] addrspace(4)* @.str,\l... i64 0, i64 6) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint ([7 x\l... i8]* addrspacecast ([7 x i8] addrspace(4)* @.str to [7 x i8]*) to i64)), i64\l... 1))), %507 ], [ %945, %937 ]\l  %513 = phi i8 addrspace(4)* [ getelementptr inbounds ([7 x i8], [7 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %507 ], [ %946, %937 ]\l  %514 = phi \<2 x i64\> [ %510, %507 ], [ %944, %937 ]\l  %515 = icmp ugt i64 %512, 56\l  %516 = extractelement \<2 x i64\> %514, i64 0\l  %517 = or i64 %516, %508\l  %518 = insertelement \<2 x i64\> poison, i64 %517, i64 0\l  %519 = select i1 %515, \<2 x i64\> %514, \<2 x i64\> %518\l  %520 = tail call i64 @llvm.umin.i64(i64 %512, i64 56)\l  %521 = trunc i64 %520 to i32\l  %522 = extractelement \<2 x i64\> %519, i64 0\l  %523 = icmp ugt i32 %521, 7\l  br i1 %523, label %526, label %524\l|{<s0>T|<s1>F}}"];
	Node0x4dfecf0:s0 -> Node0x4df4270;
	Node0x4dfecf0:s1 -> Node0x4df42c0;
	Node0x4df42c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%524:\l524:                                              \l  %525 = icmp eq i32 %521, 0\l  br i1 %525, label %579, label %566\l|{<s0>T|<s1>F}}"];
	Node0x4df42c0:s0 -> Node0x4df4490;
	Node0x4df42c0:s1 -> Node0x4df44e0;
	Node0x4df4270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%526:\l526:                                              \l  %527 = load i8, i8 addrspace(4)* %513, align 1, !tbaa !17\l  %528 = zext i8 %527 to i64\l  %529 = getelementptr inbounds i8, i8 addrspace(4)* %513, i64 1\l  %530 = load i8, i8 addrspace(4)* %529, align 1, !tbaa !17\l  %531 = zext i8 %530 to i64\l  %532 = shl nuw nsw i64 %531, 8\l  %533 = or i64 %532, %528\l  %534 = getelementptr inbounds i8, i8 addrspace(4)* %513, i64 2\l  %535 = load i8, i8 addrspace(4)* %534, align 1, !tbaa !17\l  %536 = zext i8 %535 to i64\l  %537 = shl nuw nsw i64 %536, 16\l  %538 = or i64 %533, %537\l  %539 = getelementptr inbounds i8, i8 addrspace(4)* %513, i64 3\l  %540 = load i8, i8 addrspace(4)* %539, align 1, !tbaa !17\l  %541 = zext i8 %540 to i64\l  %542 = shl nuw nsw i64 %541, 24\l  %543 = or i64 %538, %542\l  %544 = getelementptr inbounds i8, i8 addrspace(4)* %513, i64 4\l  %545 = load i8, i8 addrspace(4)* %544, align 1, !tbaa !17\l  %546 = zext i8 %545 to i64\l  %547 = shl nuw nsw i64 %546, 32\l  %548 = or i64 %543, %547\l  %549 = getelementptr inbounds i8, i8 addrspace(4)* %513, i64 5\l  %550 = load i8, i8 addrspace(4)* %549, align 1, !tbaa !17\l  %551 = zext i8 %550 to i64\l  %552 = shl nuw nsw i64 %551, 40\l  %553 = or i64 %548, %552\l  %554 = getelementptr inbounds i8, i8 addrspace(4)* %513, i64 6\l  %555 = load i8, i8 addrspace(4)* %554, align 1, !tbaa !17\l  %556 = zext i8 %555 to i64\l  %557 = shl nuw nsw i64 %556, 48\l  %558 = or i64 %553, %557\l  %559 = getelementptr inbounds i8, i8 addrspace(4)* %513, i64 7\l  %560 = load i8, i8 addrspace(4)* %559, align 1, !tbaa !17\l  %561 = zext i8 %560 to i64\l  %562 = shl nuw i64 %561, 56\l  %563 = or i64 %558, %562\l  %564 = add nsw i32 %521, -8\l  %565 = getelementptr inbounds i8, i8 addrspace(4)* %513, i64 8\l  br label %579\l}"];
	Node0x4df4270 -> Node0x4df4490;
	Node0x4df44e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%566:\l566:                                              \l  %567 = phi i32 [ %577, %566 ], [ 0, %524 ]\l  %568 = phi i64 [ %576, %566 ], [ 0, %524 ]\l  %569 = zext i32 %567 to i64\l  %570 = getelementptr inbounds i8, i8 addrspace(4)* %513, i64 %569\l  %571 = load i8, i8 addrspace(4)* %570, align 1, !tbaa !17\l  %572 = zext i8 %571 to i64\l  %573 = shl i32 %567, 3\l  %574 = zext i32 %573 to i64\l  %575 = shl nuw i64 %572, %574\l  %576 = or i64 %575, %568\l  %577 = add nuw nsw i32 %567, 1\l  %578 = icmp eq i32 %577, %521\l  br i1 %578, label %579, label %566, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x4df44e0:s0 -> Node0x4df4490;
	Node0x4df44e0:s1 -> Node0x4df44e0;
	Node0x4df4490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%579:\l579:                                              \l  %580 = phi i8 addrspace(4)* [ %565, %526 ], [ %513, %524 ], [ %513, %566 ]\l  %581 = phi i32 [ %564, %526 ], [ 0, %524 ], [ 0, %566 ]\l  %582 = phi i64 [ %563, %526 ], [ 0, %524 ], [ %576, %566 ]\l  %583 = icmp ugt i32 %581, 7\l  br i1 %583, label %586, label %584\l|{<s0>T|<s1>F}}"];
	Node0x4df4490:s0 -> Node0x4e03340;
	Node0x4df4490:s1 -> Node0x4e03390;
	Node0x4e03390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%584:\l584:                                              \l  %585 = icmp eq i32 %581, 0\l  br i1 %585, label %639, label %626\l|{<s0>T|<s1>F}}"];
	Node0x4e03390:s0 -> Node0x4e03520;
	Node0x4e03390:s1 -> Node0x4e03570;
	Node0x4e03340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%586:\l586:                                              \l  %587 = load i8, i8 addrspace(4)* %580, align 1, !tbaa !17\l  %588 = zext i8 %587 to i64\l  %589 = getelementptr inbounds i8, i8 addrspace(4)* %580, i64 1\l  %590 = load i8, i8 addrspace(4)* %589, align 1, !tbaa !17\l  %591 = zext i8 %590 to i64\l  %592 = shl nuw nsw i64 %591, 8\l  %593 = or i64 %592, %588\l  %594 = getelementptr inbounds i8, i8 addrspace(4)* %580, i64 2\l  %595 = load i8, i8 addrspace(4)* %594, align 1, !tbaa !17\l  %596 = zext i8 %595 to i64\l  %597 = shl nuw nsw i64 %596, 16\l  %598 = or i64 %593, %597\l  %599 = getelementptr inbounds i8, i8 addrspace(4)* %580, i64 3\l  %600 = load i8, i8 addrspace(4)* %599, align 1, !tbaa !17\l  %601 = zext i8 %600 to i64\l  %602 = shl nuw nsw i64 %601, 24\l  %603 = or i64 %598, %602\l  %604 = getelementptr inbounds i8, i8 addrspace(4)* %580, i64 4\l  %605 = load i8, i8 addrspace(4)* %604, align 1, !tbaa !17\l  %606 = zext i8 %605 to i64\l  %607 = shl nuw nsw i64 %606, 32\l  %608 = or i64 %603, %607\l  %609 = getelementptr inbounds i8, i8 addrspace(4)* %580, i64 5\l  %610 = load i8, i8 addrspace(4)* %609, align 1, !tbaa !17\l  %611 = zext i8 %610 to i64\l  %612 = shl nuw nsw i64 %611, 40\l  %613 = or i64 %608, %612\l  %614 = getelementptr inbounds i8, i8 addrspace(4)* %580, i64 6\l  %615 = load i8, i8 addrspace(4)* %614, align 1, !tbaa !17\l  %616 = zext i8 %615 to i64\l  %617 = shl nuw nsw i64 %616, 48\l  %618 = or i64 %613, %617\l  %619 = getelementptr inbounds i8, i8 addrspace(4)* %580, i64 7\l  %620 = load i8, i8 addrspace(4)* %619, align 1, !tbaa !17\l  %621 = zext i8 %620 to i64\l  %622 = shl nuw i64 %621, 56\l  %623 = or i64 %618, %622\l  %624 = add nsw i32 %581, -8\l  %625 = getelementptr inbounds i8, i8 addrspace(4)* %580, i64 8\l  br label %639\l}"];
	Node0x4e03340 -> Node0x4e03520;
	Node0x4e03570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%626:\l626:                                              \l  %627 = phi i32 [ %637, %626 ], [ 0, %584 ]\l  %628 = phi i64 [ %636, %626 ], [ 0, %584 ]\l  %629 = zext i32 %627 to i64\l  %630 = getelementptr inbounds i8, i8 addrspace(4)* %580, i64 %629\l  %631 = load i8, i8 addrspace(4)* %630, align 1, !tbaa !17\l  %632 = zext i8 %631 to i64\l  %633 = shl i32 %627, 3\l  %634 = zext i32 %633 to i64\l  %635 = shl nuw i64 %632, %634\l  %636 = or i64 %635, %628\l  %637 = add nuw nsw i32 %627, 1\l  %638 = icmp eq i32 %637, %581\l  br i1 %638, label %639, label %626\l|{<s0>T|<s1>F}}"];
	Node0x4e03570:s0 -> Node0x4e03520;
	Node0x4e03570:s1 -> Node0x4e03570;
	Node0x4e03520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%639:\l639:                                              \l  %640 = phi i8 addrspace(4)* [ %625, %586 ], [ %580, %584 ], [ %580, %626 ]\l  %641 = phi i32 [ %624, %586 ], [ 0, %584 ], [ 0, %626 ]\l  %642 = phi i64 [ %623, %586 ], [ 0, %584 ], [ %636, %626 ]\l  %643 = icmp ugt i32 %641, 7\l  br i1 %643, label %646, label %644\l|{<s0>T|<s1>F}}"];
	Node0x4e03520:s0 -> Node0x4e05590;
	Node0x4e03520:s1 -> Node0x4e055e0;
	Node0x4e055e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%644:\l644:                                              \l  %645 = icmp eq i32 %641, 0\l  br i1 %645, label %699, label %686\l|{<s0>T|<s1>F}}"];
	Node0x4e055e0:s0 -> Node0x4e05770;
	Node0x4e055e0:s1 -> Node0x4e057c0;
	Node0x4e05590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%646:\l646:                                              \l  %647 = load i8, i8 addrspace(4)* %640, align 1, !tbaa !17\l  %648 = zext i8 %647 to i64\l  %649 = getelementptr inbounds i8, i8 addrspace(4)* %640, i64 1\l  %650 = load i8, i8 addrspace(4)* %649, align 1, !tbaa !17\l  %651 = zext i8 %650 to i64\l  %652 = shl nuw nsw i64 %651, 8\l  %653 = or i64 %652, %648\l  %654 = getelementptr inbounds i8, i8 addrspace(4)* %640, i64 2\l  %655 = load i8, i8 addrspace(4)* %654, align 1, !tbaa !17\l  %656 = zext i8 %655 to i64\l  %657 = shl nuw nsw i64 %656, 16\l  %658 = or i64 %653, %657\l  %659 = getelementptr inbounds i8, i8 addrspace(4)* %640, i64 3\l  %660 = load i8, i8 addrspace(4)* %659, align 1, !tbaa !17\l  %661 = zext i8 %660 to i64\l  %662 = shl nuw nsw i64 %661, 24\l  %663 = or i64 %658, %662\l  %664 = getelementptr inbounds i8, i8 addrspace(4)* %640, i64 4\l  %665 = load i8, i8 addrspace(4)* %664, align 1, !tbaa !17\l  %666 = zext i8 %665 to i64\l  %667 = shl nuw nsw i64 %666, 32\l  %668 = or i64 %663, %667\l  %669 = getelementptr inbounds i8, i8 addrspace(4)* %640, i64 5\l  %670 = load i8, i8 addrspace(4)* %669, align 1, !tbaa !17\l  %671 = zext i8 %670 to i64\l  %672 = shl nuw nsw i64 %671, 40\l  %673 = or i64 %668, %672\l  %674 = getelementptr inbounds i8, i8 addrspace(4)* %640, i64 6\l  %675 = load i8, i8 addrspace(4)* %674, align 1, !tbaa !17\l  %676 = zext i8 %675 to i64\l  %677 = shl nuw nsw i64 %676, 48\l  %678 = or i64 %673, %677\l  %679 = getelementptr inbounds i8, i8 addrspace(4)* %640, i64 7\l  %680 = load i8, i8 addrspace(4)* %679, align 1, !tbaa !17\l  %681 = zext i8 %680 to i64\l  %682 = shl nuw i64 %681, 56\l  %683 = or i64 %678, %682\l  %684 = add nsw i32 %641, -8\l  %685 = getelementptr inbounds i8, i8 addrspace(4)* %640, i64 8\l  br label %699\l}"];
	Node0x4e05590 -> Node0x4e05770;
	Node0x4e057c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%686:\l686:                                              \l  %687 = phi i32 [ %697, %686 ], [ 0, %644 ]\l  %688 = phi i64 [ %696, %686 ], [ 0, %644 ]\l  %689 = zext i32 %687 to i64\l  %690 = getelementptr inbounds i8, i8 addrspace(4)* %640, i64 %689\l  %691 = load i8, i8 addrspace(4)* %690, align 1, !tbaa !17\l  %692 = zext i8 %691 to i64\l  %693 = shl i32 %687, 3\l  %694 = zext i32 %693 to i64\l  %695 = shl nuw i64 %692, %694\l  %696 = or i64 %695, %688\l  %697 = add nuw nsw i32 %687, 1\l  %698 = icmp eq i32 %697, %641\l  br i1 %698, label %699, label %686\l|{<s0>T|<s1>F}}"];
	Node0x4e057c0:s0 -> Node0x4e05770;
	Node0x4e057c0:s1 -> Node0x4e057c0;
	Node0x4e05770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%699:\l699:                                              \l  %700 = phi i8 addrspace(4)* [ %685, %646 ], [ %640, %644 ], [ %640, %686 ]\l  %701 = phi i32 [ %684, %646 ], [ 0, %644 ], [ 0, %686 ]\l  %702 = phi i64 [ %683, %646 ], [ 0, %644 ], [ %696, %686 ]\l  %703 = icmp ugt i32 %701, 7\l  br i1 %703, label %706, label %704\l|{<s0>T|<s1>F}}"];
	Node0x4e05770:s0 -> Node0x4e08bf0;
	Node0x4e05770:s1 -> Node0x4e08c40;
	Node0x4e08c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%704:\l704:                                              \l  %705 = icmp eq i32 %701, 0\l  br i1 %705, label %759, label %746\l|{<s0>T|<s1>F}}"];
	Node0x4e08c40:s0 -> Node0x4e08dd0;
	Node0x4e08c40:s1 -> Node0x4e08e20;
	Node0x4e08bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%706:\l706:                                              \l  %707 = load i8, i8 addrspace(4)* %700, align 1, !tbaa !17\l  %708 = zext i8 %707 to i64\l  %709 = getelementptr inbounds i8, i8 addrspace(4)* %700, i64 1\l  %710 = load i8, i8 addrspace(4)* %709, align 1, !tbaa !17\l  %711 = zext i8 %710 to i64\l  %712 = shl nuw nsw i64 %711, 8\l  %713 = or i64 %712, %708\l  %714 = getelementptr inbounds i8, i8 addrspace(4)* %700, i64 2\l  %715 = load i8, i8 addrspace(4)* %714, align 1, !tbaa !17\l  %716 = zext i8 %715 to i64\l  %717 = shl nuw nsw i64 %716, 16\l  %718 = or i64 %713, %717\l  %719 = getelementptr inbounds i8, i8 addrspace(4)* %700, i64 3\l  %720 = load i8, i8 addrspace(4)* %719, align 1, !tbaa !17\l  %721 = zext i8 %720 to i64\l  %722 = shl nuw nsw i64 %721, 24\l  %723 = or i64 %718, %722\l  %724 = getelementptr inbounds i8, i8 addrspace(4)* %700, i64 4\l  %725 = load i8, i8 addrspace(4)* %724, align 1, !tbaa !17\l  %726 = zext i8 %725 to i64\l  %727 = shl nuw nsw i64 %726, 32\l  %728 = or i64 %723, %727\l  %729 = getelementptr inbounds i8, i8 addrspace(4)* %700, i64 5\l  %730 = load i8, i8 addrspace(4)* %729, align 1, !tbaa !17\l  %731 = zext i8 %730 to i64\l  %732 = shl nuw nsw i64 %731, 40\l  %733 = or i64 %728, %732\l  %734 = getelementptr inbounds i8, i8 addrspace(4)* %700, i64 6\l  %735 = load i8, i8 addrspace(4)* %734, align 1, !tbaa !17\l  %736 = zext i8 %735 to i64\l  %737 = shl nuw nsw i64 %736, 48\l  %738 = or i64 %733, %737\l  %739 = getelementptr inbounds i8, i8 addrspace(4)* %700, i64 7\l  %740 = load i8, i8 addrspace(4)* %739, align 1, !tbaa !17\l  %741 = zext i8 %740 to i64\l  %742 = shl nuw i64 %741, 56\l  %743 = or i64 %738, %742\l  %744 = add nsw i32 %701, -8\l  %745 = getelementptr inbounds i8, i8 addrspace(4)* %700, i64 8\l  br label %759\l}"];
	Node0x4e08bf0 -> Node0x4e08dd0;
	Node0x4e08e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%746:\l746:                                              \l  %747 = phi i32 [ %757, %746 ], [ 0, %704 ]\l  %748 = phi i64 [ %756, %746 ], [ 0, %704 ]\l  %749 = zext i32 %747 to i64\l  %750 = getelementptr inbounds i8, i8 addrspace(4)* %700, i64 %749\l  %751 = load i8, i8 addrspace(4)* %750, align 1, !tbaa !17\l  %752 = zext i8 %751 to i64\l  %753 = shl i32 %747, 3\l  %754 = zext i32 %753 to i64\l  %755 = shl nuw i64 %752, %754\l  %756 = or i64 %755, %748\l  %757 = add nuw nsw i32 %747, 1\l  %758 = icmp eq i32 %757, %701\l  br i1 %758, label %759, label %746\l|{<s0>T|<s1>F}}"];
	Node0x4e08e20:s0 -> Node0x4e08dd0;
	Node0x4e08e20:s1 -> Node0x4e08e20;
	Node0x4e08dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%759:\l759:                                              \l  %760 = phi i8 addrspace(4)* [ %745, %706 ], [ %700, %704 ], [ %700, %746 ]\l  %761 = phi i32 [ %744, %706 ], [ 0, %704 ], [ 0, %746 ]\l  %762 = phi i64 [ %743, %706 ], [ 0, %704 ], [ %756, %746 ]\l  %763 = icmp ugt i32 %761, 7\l  br i1 %763, label %766, label %764\l|{<s0>T|<s1>F}}"];
	Node0x4e08dd0:s0 -> Node0x4e0ba40;
	Node0x4e08dd0:s1 -> Node0x4e0ba90;
	Node0x4e0ba90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%764:\l764:                                              \l  %765 = icmp eq i32 %761, 0\l  br i1 %765, label %819, label %806\l|{<s0>T|<s1>F}}"];
	Node0x4e0ba90:s0 -> Node0x4e0bc20;
	Node0x4e0ba90:s1 -> Node0x4e0bc70;
	Node0x4e0ba40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%766:\l766:                                              \l  %767 = load i8, i8 addrspace(4)* %760, align 1, !tbaa !17\l  %768 = zext i8 %767 to i64\l  %769 = getelementptr inbounds i8, i8 addrspace(4)* %760, i64 1\l  %770 = load i8, i8 addrspace(4)* %769, align 1, !tbaa !17\l  %771 = zext i8 %770 to i64\l  %772 = shl nuw nsw i64 %771, 8\l  %773 = or i64 %772, %768\l  %774 = getelementptr inbounds i8, i8 addrspace(4)* %760, i64 2\l  %775 = load i8, i8 addrspace(4)* %774, align 1, !tbaa !17\l  %776 = zext i8 %775 to i64\l  %777 = shl nuw nsw i64 %776, 16\l  %778 = or i64 %773, %777\l  %779 = getelementptr inbounds i8, i8 addrspace(4)* %760, i64 3\l  %780 = load i8, i8 addrspace(4)* %779, align 1, !tbaa !17\l  %781 = zext i8 %780 to i64\l  %782 = shl nuw nsw i64 %781, 24\l  %783 = or i64 %778, %782\l  %784 = getelementptr inbounds i8, i8 addrspace(4)* %760, i64 4\l  %785 = load i8, i8 addrspace(4)* %784, align 1, !tbaa !17\l  %786 = zext i8 %785 to i64\l  %787 = shl nuw nsw i64 %786, 32\l  %788 = or i64 %783, %787\l  %789 = getelementptr inbounds i8, i8 addrspace(4)* %760, i64 5\l  %790 = load i8, i8 addrspace(4)* %789, align 1, !tbaa !17\l  %791 = zext i8 %790 to i64\l  %792 = shl nuw nsw i64 %791, 40\l  %793 = or i64 %788, %792\l  %794 = getelementptr inbounds i8, i8 addrspace(4)* %760, i64 6\l  %795 = load i8, i8 addrspace(4)* %794, align 1, !tbaa !17\l  %796 = zext i8 %795 to i64\l  %797 = shl nuw nsw i64 %796, 48\l  %798 = or i64 %793, %797\l  %799 = getelementptr inbounds i8, i8 addrspace(4)* %760, i64 7\l  %800 = load i8, i8 addrspace(4)* %799, align 1, !tbaa !17\l  %801 = zext i8 %800 to i64\l  %802 = shl nuw i64 %801, 56\l  %803 = or i64 %798, %802\l  %804 = add nsw i32 %761, -8\l  %805 = getelementptr inbounds i8, i8 addrspace(4)* %760, i64 8\l  br label %819\l}"];
	Node0x4e0ba40 -> Node0x4e0bc20;
	Node0x4e0bc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%806:\l806:                                              \l  %807 = phi i32 [ %817, %806 ], [ 0, %764 ]\l  %808 = phi i64 [ %816, %806 ], [ 0, %764 ]\l  %809 = zext i32 %807 to i64\l  %810 = getelementptr inbounds i8, i8 addrspace(4)* %760, i64 %809\l  %811 = load i8, i8 addrspace(4)* %810, align 1, !tbaa !17\l  %812 = zext i8 %811 to i64\l  %813 = shl i32 %807, 3\l  %814 = zext i32 %813 to i64\l  %815 = shl nuw i64 %812, %814\l  %816 = or i64 %815, %808\l  %817 = add nuw nsw i32 %807, 1\l  %818 = icmp eq i32 %817, %761\l  br i1 %818, label %819, label %806\l|{<s0>T|<s1>F}}"];
	Node0x4e0bc70:s0 -> Node0x4e0bc20;
	Node0x4e0bc70:s1 -> Node0x4e0bc70;
	Node0x4e0bc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%819:\l819:                                              \l  %820 = phi i8 addrspace(4)* [ %805, %766 ], [ %760, %764 ], [ %760, %806 ]\l  %821 = phi i32 [ %804, %766 ], [ 0, %764 ], [ 0, %806 ]\l  %822 = phi i64 [ %803, %766 ], [ 0, %764 ], [ %816, %806 ]\l  %823 = icmp ugt i32 %821, 7\l  br i1 %823, label %826, label %824\l|{<s0>T|<s1>F}}"];
	Node0x4e0bc20:s0 -> Node0x4e0dc90;
	Node0x4e0bc20:s1 -> Node0x4e0dce0;
	Node0x4e0dce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%824:\l824:                                              \l  %825 = icmp eq i32 %821, 0\l  br i1 %825, label %879, label %866\l|{<s0>T|<s1>F}}"];
	Node0x4e0dce0:s0 -> Node0x4e0de70;
	Node0x4e0dce0:s1 -> Node0x4e0dec0;
	Node0x4e0dc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%826:\l826:                                              \l  %827 = load i8, i8 addrspace(4)* %820, align 1, !tbaa !17\l  %828 = zext i8 %827 to i64\l  %829 = getelementptr inbounds i8, i8 addrspace(4)* %820, i64 1\l  %830 = load i8, i8 addrspace(4)* %829, align 1, !tbaa !17\l  %831 = zext i8 %830 to i64\l  %832 = shl nuw nsw i64 %831, 8\l  %833 = or i64 %832, %828\l  %834 = getelementptr inbounds i8, i8 addrspace(4)* %820, i64 2\l  %835 = load i8, i8 addrspace(4)* %834, align 1, !tbaa !17\l  %836 = zext i8 %835 to i64\l  %837 = shl nuw nsw i64 %836, 16\l  %838 = or i64 %833, %837\l  %839 = getelementptr inbounds i8, i8 addrspace(4)* %820, i64 3\l  %840 = load i8, i8 addrspace(4)* %839, align 1, !tbaa !17\l  %841 = zext i8 %840 to i64\l  %842 = shl nuw nsw i64 %841, 24\l  %843 = or i64 %838, %842\l  %844 = getelementptr inbounds i8, i8 addrspace(4)* %820, i64 4\l  %845 = load i8, i8 addrspace(4)* %844, align 1, !tbaa !17\l  %846 = zext i8 %845 to i64\l  %847 = shl nuw nsw i64 %846, 32\l  %848 = or i64 %843, %847\l  %849 = getelementptr inbounds i8, i8 addrspace(4)* %820, i64 5\l  %850 = load i8, i8 addrspace(4)* %849, align 1, !tbaa !17\l  %851 = zext i8 %850 to i64\l  %852 = shl nuw nsw i64 %851, 40\l  %853 = or i64 %848, %852\l  %854 = getelementptr inbounds i8, i8 addrspace(4)* %820, i64 6\l  %855 = load i8, i8 addrspace(4)* %854, align 1, !tbaa !17\l  %856 = zext i8 %855 to i64\l  %857 = shl nuw nsw i64 %856, 48\l  %858 = or i64 %853, %857\l  %859 = getelementptr inbounds i8, i8 addrspace(4)* %820, i64 7\l  %860 = load i8, i8 addrspace(4)* %859, align 1, !tbaa !17\l  %861 = zext i8 %860 to i64\l  %862 = shl nuw i64 %861, 56\l  %863 = or i64 %858, %862\l  %864 = add nsw i32 %821, -8\l  %865 = getelementptr inbounds i8, i8 addrspace(4)* %820, i64 8\l  br label %879\l}"];
	Node0x4e0dc90 -> Node0x4e0de70;
	Node0x4e0dec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%866:\l866:                                              \l  %867 = phi i32 [ %877, %866 ], [ 0, %824 ]\l  %868 = phi i64 [ %876, %866 ], [ 0, %824 ]\l  %869 = zext i32 %867 to i64\l  %870 = getelementptr inbounds i8, i8 addrspace(4)* %820, i64 %869\l  %871 = load i8, i8 addrspace(4)* %870, align 1, !tbaa !17\l  %872 = zext i8 %871 to i64\l  %873 = shl i32 %867, 3\l  %874 = zext i32 %873 to i64\l  %875 = shl nuw i64 %872, %874\l  %876 = or i64 %875, %868\l  %877 = add nuw nsw i32 %867, 1\l  %878 = icmp eq i32 %877, %821\l  br i1 %878, label %879, label %866\l|{<s0>T|<s1>F}}"];
	Node0x4e0dec0:s0 -> Node0x4e0de70;
	Node0x4e0dec0:s1 -> Node0x4e0dec0;
	Node0x4e0de70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%879:\l879:                                              \l  %880 = phi i8 addrspace(4)* [ %865, %826 ], [ %820, %824 ], [ %820, %866 ]\l  %881 = phi i32 [ %864, %826 ], [ 0, %824 ], [ 0, %866 ]\l  %882 = phi i64 [ %863, %826 ], [ 0, %824 ], [ %876, %866 ]\l  %883 = icmp ugt i32 %881, 7\l  br i1 %883, label %886, label %884\l|{<s0>T|<s1>F}}"];
	Node0x4e0de70:s0 -> Node0x4e0fee0;
	Node0x4e0de70:s1 -> Node0x4e0ff30;
	Node0x4e0ff30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%884:\l884:                                              \l  %885 = icmp eq i32 %881, 0\l  br i1 %885, label %937, label %924\l|{<s0>T|<s1>F}}"];
	Node0x4e0ff30:s0 -> Node0x4dff180;
	Node0x4e0ff30:s1 -> Node0x4e100c0;
	Node0x4e0fee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%886:\l886:                                              \l  %887 = load i8, i8 addrspace(4)* %880, align 1, !tbaa !17\l  %888 = zext i8 %887 to i64\l  %889 = getelementptr inbounds i8, i8 addrspace(4)* %880, i64 1\l  %890 = load i8, i8 addrspace(4)* %889, align 1, !tbaa !17\l  %891 = zext i8 %890 to i64\l  %892 = shl nuw nsw i64 %891, 8\l  %893 = or i64 %892, %888\l  %894 = getelementptr inbounds i8, i8 addrspace(4)* %880, i64 2\l  %895 = load i8, i8 addrspace(4)* %894, align 1, !tbaa !17\l  %896 = zext i8 %895 to i64\l  %897 = shl nuw nsw i64 %896, 16\l  %898 = or i64 %893, %897\l  %899 = getelementptr inbounds i8, i8 addrspace(4)* %880, i64 3\l  %900 = load i8, i8 addrspace(4)* %899, align 1, !tbaa !17\l  %901 = zext i8 %900 to i64\l  %902 = shl nuw nsw i64 %901, 24\l  %903 = or i64 %898, %902\l  %904 = getelementptr inbounds i8, i8 addrspace(4)* %880, i64 4\l  %905 = load i8, i8 addrspace(4)* %904, align 1, !tbaa !17\l  %906 = zext i8 %905 to i64\l  %907 = shl nuw nsw i64 %906, 32\l  %908 = or i64 %903, %907\l  %909 = getelementptr inbounds i8, i8 addrspace(4)* %880, i64 5\l  %910 = load i8, i8 addrspace(4)* %909, align 1, !tbaa !17\l  %911 = zext i8 %910 to i64\l  %912 = shl nuw nsw i64 %911, 40\l  %913 = or i64 %908, %912\l  %914 = getelementptr inbounds i8, i8 addrspace(4)* %880, i64 6\l  %915 = load i8, i8 addrspace(4)* %914, align 1, !tbaa !17\l  %916 = zext i8 %915 to i64\l  %917 = shl nuw nsw i64 %916, 48\l  %918 = or i64 %913, %917\l  %919 = getelementptr inbounds i8, i8 addrspace(4)* %880, i64 7\l  %920 = load i8, i8 addrspace(4)* %919, align 1, !tbaa !17\l  %921 = zext i8 %920 to i64\l  %922 = shl nuw i64 %921, 56\l  %923 = or i64 %918, %922\l  br label %937\l}"];
	Node0x4e0fee0 -> Node0x4dff180;
	Node0x4e100c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%924:\l924:                                              \l  %925 = phi i32 [ %935, %924 ], [ 0, %884 ]\l  %926 = phi i64 [ %934, %924 ], [ 0, %884 ]\l  %927 = zext i32 %925 to i64\l  %928 = getelementptr inbounds i8, i8 addrspace(4)* %880, i64 %927\l  %929 = load i8, i8 addrspace(4)* %928, align 1, !tbaa !17\l  %930 = zext i8 %929 to i64\l  %931 = shl i32 %925, 3\l  %932 = zext i32 %931 to i64\l  %933 = shl nuw i64 %930, %932\l  %934 = or i64 %933, %926\l  %935 = add nuw nsw i32 %925, 1\l  %936 = icmp eq i32 %935, %881\l  br i1 %936, label %937, label %924\l|{<s0>T|<s1>F}}"];
	Node0x4e100c0:s0 -> Node0x4dff180;
	Node0x4e100c0:s1 -> Node0x4e100c0;
	Node0x4dff180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%937:\l937:                                              \l  %938 = phi i64 [ %923, %886 ], [ 0, %884 ], [ %934, %924 ]\l  %939 = shl nuw nsw i64 %520, 2\l  %940 = add nuw nsw i64 %939, 28\l  %941 = and i64 %940, 480\l  %942 = and i64 %522, -225\l  %943 = or i64 %942, %941\l  %944 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef %943, i64 noundef %582, i64 noundef %642, i64 noundef %702, i64\l... noundef %762, i64 noundef %822, i64 noundef %882, i64 noundef %938) #11\l  %945 = sub i64 %512, %520\l  %946 = getelementptr inbounds i8, i8 addrspace(4)* %513, i64 %520\l  %947 = icmp eq i64 %945, 0\l  br i1 %947, label %948, label %511\l|{<s0>T|<s1>F}}"];
	Node0x4dff180:s0 -> Node0x4dfec30;
	Node0x4dff180:s1 -> Node0x4dfecf0;
	Node0x4dfec30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%948:\l948:                                              \l  %949 = phi \<2 x i64\> [ %506, %503 ], [ %944, %937 ]\l  %950 = extractelement \<2 x i64\> %949, i64 0\l  %951 = and i64 %950, -225\l  %952 = or i64 %951, 32\l  %953 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef %952, i64 noundef %5, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %954 = extractelement \<2 x i64\> %953, i64 0\l  %955 = bitcast double %500 to i64\l  %956 = and i64 %954, -227\l  %957 = or i64 %956, 34\l  %958 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %24,\l... i64 noundef %957, i64 noundef %955, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %959\l}"];
	Node0x4dfec30 -> Node0x4deacb0;
	Node0x4deacb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%959:\l959:                                              \l  ret void\l}"];
}
