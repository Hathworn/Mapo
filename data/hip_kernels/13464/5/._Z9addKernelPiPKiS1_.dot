digraph "CFG for '_Z9addKernelPiPKiS1_' function" {
	label="CFG for '_Z9addKernelPiPKiS1_' function";

	Node0x5d5c150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = zext i32 %4 to i64\l  %6 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %5\l  %7 = load i32, i32 addrspace(1)* %6, align 4, !tbaa !5, !amdgpu.noclobber !9\l  %8 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %5\l  %9 = load i32, i32 addrspace(1)* %8, align 4, !tbaa !5, !amdgpu.noclobber !9\l  %10 = add nsw i32 %9, %7\l  %11 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %5\l  store i32 %10, i32 addrspace(1)* %11, align 4, !tbaa !5\l  br label %13\l}"];
	Node0x5d5c150 -> Node0x5d5e330;
	Node0x5d5e430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%12:\l12:                                               \l  ret void\l}"];
	Node0x5d5e330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%13:\l13:                                               \l  %14 = phi i64 [ 0, %3 ], [ %104, %13 ]\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %14\l  %16 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !5\l  %17 = mul nsw i32 %16, 10\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %14\l  %19 = load i32, i32 addrspace(1)* %18, align 4, !tbaa !5\l  %20 = mul nsw i32 %19, 5\l  %21 = add nsw i32 %20, %17\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %14\l  store i32 %21, i32 addrspace(1)* %22, align 4, !tbaa !5\l  %23 = or i64 %14, 1\l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %23\l  %25 = load i32, i32 addrspace(1)* %24, align 4, !tbaa !5\l  %26 = mul nsw i32 %25, 10\l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %23\l  %28 = load i32, i32 addrspace(1)* %27, align 4, !tbaa !5\l  %29 = mul nsw i32 %28, 5\l  %30 = add nsw i32 %29, %26\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %23\l  store i32 %30, i32 addrspace(1)* %31, align 4, !tbaa !5\l  %32 = add nuw nsw i64 %14, 2\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !5\l  %35 = mul nsw i32 %34, 10\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %32\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !5\l  %38 = mul nsw i32 %37, 5\l  %39 = add nsw i32 %38, %35\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %32\l  store i32 %39, i32 addrspace(1)* %40, align 4, !tbaa !5\l  %41 = add nuw nsw i64 %14, 3\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !5\l  %44 = mul nsw i32 %43, 10\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %41\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !5\l  %47 = mul nsw i32 %46, 5\l  %48 = add nsw i32 %47, %44\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %41\l  store i32 %48, i32 addrspace(1)* %49, align 4, !tbaa !5\l  %50 = add nuw nsw i64 %14, 4\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !5\l  %53 = mul nsw i32 %52, 10\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %50\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !5\l  %56 = mul nsw i32 %55, 5\l  %57 = add nsw i32 %56, %53\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %50\l  store i32 %57, i32 addrspace(1)* %58, align 4, !tbaa !5\l  %59 = add nuw nsw i64 %14, 5\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !5\l  %62 = mul nsw i32 %61, 10\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %59\l  %64 = load i32, i32 addrspace(1)* %63, align 4, !tbaa !5\l  %65 = mul nsw i32 %64, 5\l  %66 = add nsw i32 %65, %62\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %59\l  store i32 %66, i32 addrspace(1)* %67, align 4, !tbaa !5\l  %68 = add nuw nsw i64 %14, 6\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !5\l  %71 = mul nsw i32 %70, 10\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %68\l  %73 = load i32, i32 addrspace(1)* %72, align 4, !tbaa !5\l  %74 = mul nsw i32 %73, 5\l  %75 = add nsw i32 %74, %71\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %68\l  store i32 %75, i32 addrspace(1)* %76, align 4, !tbaa !5\l  %77 = add nuw nsw i64 %14, 7\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %77\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !5\l  %80 = mul nsw i32 %79, 10\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %77\l  %82 = load i32, i32 addrspace(1)* %81, align 4, !tbaa !5\l  %83 = mul nsw i32 %82, 5\l  %84 = add nsw i32 %83, %80\l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %77\l  store i32 %84, i32 addrspace(1)* %85, align 4, !tbaa !5\l  %86 = add nuw nsw i64 %14, 8\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %86\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !5\l  %89 = mul nsw i32 %88, 10\l  %90 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %86\l  %91 = load i32, i32 addrspace(1)* %90, align 4, !tbaa !5\l  %92 = mul nsw i32 %91, 5\l  %93 = add nsw i32 %92, %89\l  %94 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %86\l  store i32 %93, i32 addrspace(1)* %94, align 4, !tbaa !5\l  %95 = add nuw nsw i64 %14, 9\l  %96 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %95\l  %97 = load i32, i32 addrspace(1)* %96, align 4, !tbaa !5\l  %98 = mul nsw i32 %97, 10\l  %99 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %95\l  %100 = load i32, i32 addrspace(1)* %99, align 4, !tbaa !5\l  %101 = mul nsw i32 %100, 5\l  %102 = add nsw i32 %101, %98\l  %103 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %95\l  store i32 %102, i32 addrspace(1)* %103, align 4, !tbaa !5\l  %104 = add nuw nsw i64 %14, 10\l  %105 = icmp eq i64 %104, 512000\l  br i1 %105, label %12, label %13, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5d5e330:s0 -> Node0x5d5e430;
	Node0x5d5e330:s1 -> Node0x5d5e330;
}
