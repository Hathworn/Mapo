digraph "CFG for '_Z14laplace_2d_gpuPdS_ii' function" {
	label="CFG for '_Z14laplace_2d_gpuPdS_ii' function";

	Node0x5c5cb80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = add i32 %23, %17\l  %25 = icmp eq i32 %16, 0\l  br i1 %25, label %68, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5c5cb80:s0 -> Node0x5c607d0;
	Node0x5c5cb80:s1 -> Node0x5c60860;
	Node0x5c60860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e36c5570",label="{%26:\l26:                                               \l  %27 = add nsw i32 %2, 1\l  %28 = icmp ult i32 %16, %27\l  %29 = icmp ne i32 %24, 0\l  %30 = select i1 %28, i1 %29, i1 false\l  %31 = add nsw i32 %3, 1\l  %32 = icmp ult i32 %24, %31\l  %33 = select i1 %30, i1 %32, i1 false\l  br i1 %33, label %34, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5c60860:s0 -> Node0x5c5ede0;
	Node0x5c60860:s1 -> Node0x5c607d0;
	Node0x5c5ede0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%34:\l34:                                               \l  %35 = udiv i32 %14, %11\l  %36 = mul i32 %35, %11\l  %37 = icmp ugt i32 %14, %36\l  %38 = zext i1 %37 to i32\l  %39 = add i32 %35, %38\l  %40 = mul i32 %39, %11\l  %41 = mul i32 %40, %24\l  %42 = add i32 %41, %16\l  %43 = zext i32 %42 to i64\l  %44 = getelementptr inbounds double, double addrspace(1)* %1, i64 %43\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %46 = fmul contract double %45, 4.000000e+00\l  %47 = add i32 %42, -1\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %1, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %51 = add i32 %42, 1\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds double, double addrspace(1)* %1, i64 %52\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %55 = fadd contract double %50, %54\l  %56 = sub i32 %42, %40\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds double, double addrspace(1)* %1, i64 %57\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %60 = fadd contract double %55, %59\l  %61 = add i32 %42, %40\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds double, double addrspace(1)* %1, i64 %62\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %65 = fadd contract double %60, %64\l  %66 = fsub contract double %46, %65\l  %67 = getelementptr inbounds double, double addrspace(1)* %0, i64 %43\l  store double %66, double addrspace(1)* %67, align 8, !tbaa !16\l  br label %68\l}"];
	Node0x5c5ede0 -> Node0x5c607d0;
	Node0x5c607d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  ret void\l}"];
}
