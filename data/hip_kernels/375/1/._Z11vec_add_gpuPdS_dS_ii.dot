digraph "CFG for '_Z11vec_add_gpuPdS_dS_ii' function" {
	label="CFG for '_Z11vec_add_gpuPdS_dS_ii' function";

	Node0x4e29940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = mul i32 %8, %13\l  %18 = add i32 %17, %7\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !5, !invariant.load !6\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = add i32 %25, %19\l  %27 = icmp eq i32 %18, 0\l  br i1 %27, label %53, label %28\l|{<s0>T|<s1>F}}"];
	Node0x4e29940:s0 -> Node0x4e2d530;
	Node0x4e29940:s1 -> Node0x4e2d5c0;
	Node0x4e2d5c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e36c5570",label="{%28:\l28:                                               \l  %29 = add nsw i32 %4, 1\l  %30 = icmp ult i32 %18, %29\l  %31 = icmp ne i32 %26, 0\l  %32 = select i1 %30, i1 %31, i1 false\l  %33 = add nsw i32 %5, 1\l  %34 = icmp ult i32 %26, %33\l  %35 = select i1 %32, i1 %34, i1 false\l  br i1 %35, label %36, label %53\l|{<s0>T|<s1>F}}"];
	Node0x4e2d5c0:s0 -> Node0x4e2b9c0;
	Node0x4e2d5c0:s1 -> Node0x4e2d530;
	Node0x4e2b9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%36:\l36:                                               \l  %37 = udiv i32 %16, %13\l  %38 = mul i32 %37, %13\l  %39 = icmp ugt i32 %16, %38\l  %40 = zext i1 %39 to i32\l  %41 = add i32 %37, %40\l  %42 = mul i32 %26, %13\l  %43 = mul i32 %42, %41\l  %44 = add i32 %43, %18\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds double, double addrspace(1)* %1, i64 %45\l  %47 = load double, double addrspace(1)* %46, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %48 = getelementptr inbounds double, double addrspace(1)* %3, i64 %45\l  %49 = load double, double addrspace(1)* %48, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %50 = fmul contract double %49, %2\l  %51 = fadd contract double %47, %50\l  %52 = getelementptr inbounds double, double addrspace(1)* %0, i64 %45\l  store double %51, double addrspace(1)* %52, align 8, !tbaa !16\l  br label %53\l}"];
	Node0x4e2b9c0 -> Node0x4e2d530;
	Node0x4e2d530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  ret void\l}"];
}
