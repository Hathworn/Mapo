digraph "CFG for '_Z7matMultPfS_S_' function" {
	label="CFG for '_Z7matMultPfS_S_' function";

	Node0x571d1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %8 = shl nsw i32 %5, 16\l  %9 = shl nuw nsw i32 %7, 11\l  %10 = add nsw i32 %8, %9\l  %11 = shl nsw i32 %4, 5\l  %12 = add i32 %11, %6\l  br label %18\l}"];
	Node0x571d1b0 -> Node0x571d390;
	Node0x571f620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%13:\l13:                                               \l  %14 = add i32 %12, %8\l  %15 = add i32 %14, %9\l  %16 = sext i32 %15 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %2, i64 %16\l  store float %115, float addrspace(1)* %17, align 4, !tbaa !5\l  ret void\l}"];
	Node0x571d390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%18:\l18:                                               \l  %19 = phi float [ 0.000000e+00, %3 ], [ %115, %18 ]\l  %20 = phi i32 [ 0, %3 ], [ %116, %18 ]\l  %21 = add nuw nsw i32 %10, %20\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %0, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %25 = shl nuw nsw i32 %20, 11\l  %26 = add nsw i32 %12, %25\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %30 = fmul contract float %24, %29\l  %31 = fadd contract float %19, %30\l  %32 = or i32 %20, 1\l  %33 = add nuw nsw i32 %10, %32\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %37 = shl nuw nsw i32 %32, 11\l  %38 = add nsw i32 %12, %37\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %42 = fmul contract float %36, %41\l  %43 = fadd contract float %31, %42\l  %44 = or i32 %20, 2\l  %45 = add nuw nsw i32 %10, %44\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %49 = shl nuw nsw i32 %44, 11\l  %50 = add nsw i32 %12, %49\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %54 = fmul contract float %48, %53\l  %55 = fadd contract float %43, %54\l  %56 = or i32 %20, 3\l  %57 = add nuw nsw i32 %10, %56\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %61 = shl nuw nsw i32 %56, 11\l  %62 = add nsw i32 %12, %61\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %1, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %66 = fmul contract float %60, %65\l  %67 = fadd contract float %55, %66\l  %68 = or i32 %20, 4\l  %69 = add nuw nsw i32 %10, %68\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %73 = shl nuw nsw i32 %68, 11\l  %74 = add nsw i32 %12, %73\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %1, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %78 = fmul contract float %72, %77\l  %79 = fadd contract float %67, %78\l  %80 = or i32 %20, 5\l  %81 = add nuw nsw i32 %10, %80\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %0, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %85 = shl nuw nsw i32 %80, 11\l  %86 = add nsw i32 %12, %85\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %90 = fmul contract float %84, %89\l  %91 = fadd contract float %79, %90\l  %92 = or i32 %20, 6\l  %93 = add nuw nsw i32 %10, %92\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %0, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %97 = shl nuw nsw i32 %92, 11\l  %98 = add nsw i32 %12, %97\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %1, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %102 = fmul contract float %96, %101\l  %103 = fadd contract float %91, %102\l  %104 = or i32 %20, 7\l  %105 = add nuw nsw i32 %10, %104\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %0, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %109 = shl nuw nsw i32 %104, 11\l  %110 = add nsw i32 %12, %109\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %1, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %114 = fmul contract float %108, %113\l  %115 = fadd contract float %103, %114\l  %116 = add nuw nsw i32 %20, 8\l  %117 = icmp eq i32 %116, 2048\l  br i1 %117, label %13, label %18, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x571d390:s0 -> Node0x571f620;
	Node0x571d390:s1 -> Node0x571d390;
}
