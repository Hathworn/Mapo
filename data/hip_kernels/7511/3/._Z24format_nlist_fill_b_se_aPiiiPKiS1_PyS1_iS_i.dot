digraph "CFG for '_Z24format_nlist_fill_b_se_aPiiiPKiS1_PyS1_iS_i' function" {
	label="CFG for '_Z24format_nlist_fill_b_se_aPiiiPKiS1_PyS1_iS_i' function";

	Node0x5331e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = icmp ult i32 %19, %2\l  br i1 %20, label %21, label %131\l|{<s0>T|<s1>F}}"];
	Node0x5331e70:s0 -> Node0x5334990;
	Node0x5331e70:s1 -> Node0x5334a20;
	Node0x5334990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%21:\l21:                                               \l  %22 = mul i32 %19, %1\l  %23 = zext i32 %22 to i64\l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %23\l  %25 = mul i32 %19, %7\l  %26 = zext i32 %25 to i64\l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %26\l  %28 = mul nsw i32 %9, %2\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds i64, i64 addrspace(1)* %5, i64 %29\l  %31 = mul i32 %19, %9\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds i64, i64 addrspace(1)* %30, i64 %32\l  %34 = icmp sgt i32 %7, 0\l  br i1 %34, label %35, label %53\l|{<s0>T|<s1>F}}"];
	Node0x5334990:s0 -> Node0x53344b0;
	Node0x5334990:s1 -> Node0x53353e0;
	Node0x53344b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%35:\l35:                                               \l  %36 = and i32 %7, 7\l  %37 = icmp ult i32 %7, 8\l  br i1 %37, label %40, label %38\l|{<s0>T|<s1>F}}"];
	Node0x53344b0:s0 -> Node0x53356a0;
	Node0x53344b0:s1 -> Node0x53356f0;
	Node0x53356f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%38:\l38:                                               \l  %39 = and i32 %7, -8\l  br label %60\l}"];
	Node0x53356f0 -> Node0x53358f0;
	Node0x53356a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%40:\l40:                                               \l  %41 = phi i32 [ 0, %35 ], [ %102, %60 ]\l  %42 = icmp eq i32 %36, 0\l  br i1 %42, label %53, label %43\l|{<s0>T|<s1>F}}"];
	Node0x53356a0:s0 -> Node0x53353e0;
	Node0x53356a0:s1 -> Node0x5335b20;
	Node0x5335b20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%43:\l43:                                               \l  %44 = phi i32 [ %50, %43 ], [ %41, %40 ]\l  %45 = phi i32 [ %51, %43 ], [ 0, %40 ]\l  %46 = zext i32 %44 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %27, i64 %46\l  store i32 %48, i32 addrspace(1)* %49, align 4, !tbaa !7\l  %50 = add nuw nsw i32 %44, 1\l  %51 = add i32 %45, 1\l  %52 = icmp eq i32 %51, %36\l  br i1 %52, label %53, label %43, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5335b20:s0 -> Node0x53353e0;
	Node0x5335b20:s1 -> Node0x5335b20;
	Node0x53353e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%53:\l53:                                               \l  %54 = add nsw i32 %9, -1\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i64, i64 addrspace(1)* %33, i64 %55\l  %57 = load i64, i64 addrspace(1)* %56, align 8, !tbaa !13, !amdgpu.noclobber\l... !5\l  %58 = load i64, i64 addrspace(1)* %33, align 8, !tbaa !13, !amdgpu.noclobber\l... !5\l  %59 = icmp eq i64 %58, %57\l  br i1 %59, label %131, label %105\l|{<s0>T|<s1>F}}"];
	Node0x53353e0:s0 -> Node0x5334a20;
	Node0x53353e0:s1 -> Node0x5337ca0;
	Node0x53358f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%60:\l60:                                               \l  %61 = phi i32 [ 0, %38 ], [ %102, %60 ]\l  %62 = phi i32 [ 0, %38 ], [ %103, %60 ]\l  %63 = zext i32 %61 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !7\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %27, i64 %63\l  store i32 %65, i32 addrspace(1)* %66, align 4, !tbaa !7\l  %67 = or i32 %61, 1\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !7\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %27, i64 %68\l  store i32 %70, i32 addrspace(1)* %71, align 4, !tbaa !7\l  %72 = or i32 %61, 2\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %73\l  %75 = load i32, i32 addrspace(1)* %74, align 4, !tbaa !7\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %27, i64 %73\l  store i32 %75, i32 addrspace(1)* %76, align 4, !tbaa !7\l  %77 = or i32 %61, 3\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %78\l  %80 = load i32, i32 addrspace(1)* %79, align 4, !tbaa !7\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %27, i64 %78\l  store i32 %80, i32 addrspace(1)* %81, align 4, !tbaa !7\l  %82 = or i32 %61, 4\l  %83 = zext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !7\l  %86 = getelementptr inbounds i32, i32 addrspace(1)* %27, i64 %83\l  store i32 %85, i32 addrspace(1)* %86, align 4, !tbaa !7\l  %87 = or i32 %61, 5\l  %88 = zext i32 %87 to i64\l  %89 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %88\l  %90 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !7\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %27, i64 %88\l  store i32 %90, i32 addrspace(1)* %91, align 4, !tbaa !7\l  %92 = or i32 %61, 6\l  %93 = zext i32 %92 to i64\l  %94 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %93\l  %95 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !7\l  %96 = getelementptr inbounds i32, i32 addrspace(1)* %27, i64 %93\l  store i32 %95, i32 addrspace(1)* %96, align 4, !tbaa !7\l  %97 = or i32 %61, 7\l  %98 = zext i32 %97 to i64\l  %99 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %98\l  %100 = load i32, i32 addrspace(1)* %99, align 4, !tbaa !7\l  %101 = getelementptr inbounds i32, i32 addrspace(1)* %27, i64 %98\l  store i32 %100, i32 addrspace(1)* %101, align 4, !tbaa !7\l  %102 = add nuw nsw i32 %61, 8\l  %103 = add i32 %62, 8\l  %104 = icmp eq i32 %103, %39\l  br i1 %104, label %40, label %60, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x53358f0:s0 -> Node0x53356a0;
	Node0x53358f0:s1 -> Node0x53358f0;
	Node0x5337ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  %106 = phi i64 [ %129, %125 ], [ %58, %53 ]\l  %107 = phi i32 [ %126, %125 ], [ 0, %53 ]\l  %108 = uitofp i64 %106 to double\l  %109 = fdiv contract double %108, 1.000000e+15\l  %110 = fptosi double %109 to i32\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds i32, i32 addrspace(1)* %27, i64 %111\l  %113 = load i32, i32 addrspace(1)* %112, align 4, !tbaa !7\l  %114 = add nsw i32 %110, 1\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %115\l  %117 = load i32, i32 addrspace(1)* %116, align 4, !tbaa !7\l  %118 = icmp slt i32 %113, %117\l  br i1 %118, label %119, label %125\l|{<s0>T|<s1>F}}"];
	Node0x5337ca0:s0 -> Node0x533b100;
	Node0x5337ca0:s1 -> Node0x5339ef0;
	Node0x533b100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%119:\l119:                                              \l  %120 = urem i64 %106, 100000\l  %121 = trunc i64 %120 to i32\l  %122 = add nsw i32 %113, 1\l  store i32 %122, i32 addrspace(1)* %112, align 4, !tbaa !7\l  %123 = sext i32 %113 to i64\l  %124 = getelementptr inbounds i32, i32 addrspace(1)* %24, i64 %123\l  store i32 %121, i32 addrspace(1)* %124, align 4, !tbaa !7\l  br label %125\l}"];
	Node0x533b100 -> Node0x5339ef0;
	Node0x5339ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%125:\l125:                                              \l  %126 = add i32 %107, 1\l  %127 = zext i32 %126 to i64\l  %128 = getelementptr inbounds i64, i64 addrspace(1)* %33, i64 %127\l  %129 = load i64, i64 addrspace(1)* %128, align 8, !tbaa !13,\l... !amdgpu.noclobber !5\l  %130 = icmp eq i64 %129, %57\l  br i1 %130, label %131, label %105, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5339ef0:s0 -> Node0x5334a20;
	Node0x5339ef0:s1 -> Node0x5337ca0;
	Node0x5334a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%131:\l131:                                              \l  ret void\l}"];
}
