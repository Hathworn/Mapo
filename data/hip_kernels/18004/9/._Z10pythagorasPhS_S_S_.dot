digraph "CFG for '_Z10pythagorasPhS_S_S_' function" {
	label="CFG for '_Z10pythagorasPhS_S_S_' function";

	Node0x5c4de60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = sext i32 %13 to i64\l  %15 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %14\l  %16 = load i8, i8 addrspace(1)* %15, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %17 = uitofp i8 %16 to float\l  %18 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %14\l  %19 = load i8, i8 addrspace(1)* %18, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %20 = uitofp i8 %19 to float\l  %21 = fmul contract float %17, %17\l  %22 = fmul contract float %20, %20\l  %23 = fadd contract float %21, %22\l  %24 = fcmp olt float %23, 0x39F0000000000000\l  %25 = select i1 %24, float 0x41F0000000000000, float 1.000000e+00\l  %26 = fmul float %23, %25\l  %27 = tail call float @llvm.sqrt.f32(float %26)\l  %28 = bitcast float %27 to i32\l  %29 = add nsw i32 %28, -1\l  %30 = bitcast i32 %29 to float\l  %31 = add nsw i32 %28, 1\l  %32 = bitcast i32 %31 to float\l  %33 = tail call i1 @llvm.amdgcn.class.f32(float %26, i32 608)\l  %34 = select i1 %24, float 0x3EF0000000000000, float 1.000000e+00\l  %35 = fneg float %32\l  %36 = tail call float @llvm.fma.f32(float %35, float %27, float %26)\l  %37 = fcmp ogt float %36, 0.000000e+00\l  %38 = fneg float %30\l  %39 = tail call float @llvm.fma.f32(float %38, float %27, float %26)\l  %40 = fcmp ole float %39, 0.000000e+00\l  %41 = select i1 %40, float %30, float %27\l  %42 = select i1 %37, float %32, float %41\l  %43 = fmul float %34, %42\l  %44 = select i1 %33, float %26, float %43\l  %45 = fptoui float %44 to i8\l  %46 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %14\l  store i8 %45, i8 addrspace(1)* %46, align 1, !tbaa !7\l  %47 = tail call float @llvm.minnum.f32(float %20, float %17)\l  %48 = tail call float @llvm.maxnum.f32(float %20, float %17)\l  %49 = fdiv float %47, %48, !fpmath !10\l  %50 = fmul float %49, %49\l  %51 = tail call float @llvm.fmuladd.f32(float %50, float 0x3F65A54B00000000,\l... float 0xBF8F4B2180000000)\l  %52 = tail call float @llvm.fmuladd.f32(float %50, float %51, float\l... 0x3FA53F67E0000000)\l  %53 = tail call float @llvm.fmuladd.f32(float %50, float %52, float\l... 0xBFB2FA9AE0000000)\l  %54 = tail call float @llvm.fmuladd.f32(float %50, float %53, float\l... 0x3FBB263640000000)\l  %55 = tail call float @llvm.fmuladd.f32(float %50, float %54, float\l... 0xBFC22C1CC0000000)\l  %56 = tail call float @llvm.fmuladd.f32(float %50, float %55, float\l... 0x3FC99717E0000000)\l  %57 = tail call float @llvm.fmuladd.f32(float %50, float %56, float\l... 0xBFD5554C40000000)\l  %58 = fmul float %50, %57\l  %59 = tail call float @llvm.fmuladd.f32(float %49, float %58, float %49)\l  %60 = fsub float 0x3FF921FB60000000, %59\l  %61 = fcmp ogt float %17, %20\l  %62 = select i1 %61, float %60, float %59\l  %63 = icmp eq i8 %16, 0\l  %64 = select i1 %63, float 0.000000e+00, float %62\l  %65 = tail call float @llvm.fabs.f32(float %64)\l  %66 = fptoui float %65 to i8\l  %67 = uitofp i8 %66 to double\l  %68 = fmul contract double %67, 6.399400e+01\l  %69 = fptoui double %68 to i8\l  %70 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %14\l  store i8 %69, i8 addrspace(1)* %70, align 1, !tbaa !7\l  ret void\l}"];
}
