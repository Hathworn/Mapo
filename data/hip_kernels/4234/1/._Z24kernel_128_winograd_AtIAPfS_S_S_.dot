digraph "CFG for '_Z24kernel_128_winograd_AtIAPfS_S_S_' function" {
	label="CFG for '_Z24kernel_128_winograd_AtIAPfS_S_S_' function";

	Node0x62acf70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = mul nuw nsw i32 %9, 6\l  %11 = add nuw nsw i32 %10, %7\l  %12 = shl nuw nsw i32 %11, 11\l  %13 = shl i32 %5, 9\l  %14 = shl i32 %6, 7\l  %15 = add i32 %14, %8\l  %16 = add i32 %15, %13\l  %17 = add i32 %16, %12\l  %18 = sext i32 %17 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %21 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %11\l  store float %20, float addrspace(3)* %21, align 4, !tbaa !5\l  %22 = sext i32 %8 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %1, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %24, float addrspace(3)*\l... @_ZZ24kernel_128_winograd_AtIAPfS_S_S_E4bias, align 4, !tbaa !5\l  %25 = getelementptr inbounds float, float addrspace(1)* %2, i64 %22\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %26, float addrspace(3)*\l... @_ZZ24kernel_128_winograd_AtIAPfS_S_S_E5scale, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  switch i32 %9, label %104 [\l    i32 0, label %27\l    i32 1, label %46\l    i32 2, label %64\l    i32 3, label %82\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2|<s4>3}}"];
	Node0x62acf70:s0 -> Node0x62b1120;
	Node0x62acf70:s1 -> Node0x62b11b0;
	Node0x62acf70:s2 -> Node0x62b1240;
	Node0x62acf70:s3 -> Node0x62b1300;
	Node0x62acf70:s4 -> Node0x62b13c0;
	Node0x62b11b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%27:\l27:                                               \l  %28 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %7\l  %29 = load float, float addrspace(3)* %28, align 4, !tbaa !5\l  %30 = add nuw nsw i32 %7, 6\l  %31 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %30\l  %32 = load float, float addrspace(3)* %31, align 4, !tbaa !5\l  %33 = fadd contract float %29, %32\l  %34 = add nuw nsw i32 %7, 12\l  %35 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %34\l  %36 = load float, float addrspace(3)* %35, align 4, !tbaa !5\l  %37 = fadd contract float %33, %36\l  %38 = add nuw nsw i32 %7, 18\l  %39 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %38\l  %40 = load float, float addrspace(3)* %39, align 4, !tbaa !5\l  %41 = fadd contract float %37, %40\l  %42 = add nuw nsw i32 %7, 24\l  %43 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %42\l  %44 = load float, float addrspace(3)* %43, align 4, !tbaa !5\l  %45 = fadd contract float %41, %44\l  br label %104\l}"];
	Node0x62b11b0 -> Node0x62b1120;
	Node0x62b1240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%46:\l46:                                               \l  %47 = add nuw nsw i32 %7, 6\l  %48 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %47\l  %49 = load float, float addrspace(3)* %48, align 4, !tbaa !5\l  %50 = add nuw nsw i32 %7, 12\l  %51 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %50\l  %52 = load float, float addrspace(3)* %51, align 4, !tbaa !5\l  %53 = fsub contract float %49, %52\l  %54 = add nuw nsw i32 %7, 18\l  %55 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %54\l  %56 = load float, float addrspace(3)* %55, align 4, !tbaa !5\l  %57 = fmul contract float %56, 2.000000e+00\l  %58 = fadd contract float %53, %57\l  %59 = add nuw nsw i32 %7, 24\l  %60 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %59\l  %61 = load float, float addrspace(3)* %60, align 4, !tbaa !5\l  %62 = fmul contract float %61, 2.000000e+00\l  %63 = fsub contract float %58, %62\l  br label %104\l}"];
	Node0x62b1240 -> Node0x62b1120;
	Node0x62b1300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%64:\l64:                                               \l  %65 = add nuw nsw i32 %7, 6\l  %66 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %65\l  %67 = load float, float addrspace(3)* %66, align 4, !tbaa !5\l  %68 = add nuw nsw i32 %7, 12\l  %69 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %68\l  %70 = load float, float addrspace(3)* %69, align 4, !tbaa !5\l  %71 = fadd contract float %67, %70\l  %72 = add nuw nsw i32 %7, 18\l  %73 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %72\l  %74 = load float, float addrspace(3)* %73, align 4, !tbaa !5\l  %75 = fmul contract float %74, 4.000000e+00\l  %76 = fadd contract float %71, %75\l  %77 = add nuw nsw i32 %7, 24\l  %78 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %77\l  %79 = load float, float addrspace(3)* %78, align 4, !tbaa !5\l  %80 = fmul contract float %79, 4.000000e+00\l  %81 = fadd contract float %76, %80\l  br label %104\l}"];
	Node0x62b1300 -> Node0x62b1120;
	Node0x62b13c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%82:\l82:                                               \l  %83 = add nuw nsw i32 %7, 6\l  %84 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %83\l  %85 = load float, float addrspace(3)* %84, align 4, !tbaa !5\l  %86 = add nuw nsw i32 %7, 12\l  %87 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %86\l  %88 = load float, float addrspace(3)* %87, align 4, !tbaa !5\l  %89 = fsub contract float %85, %88\l  %90 = add nuw nsw i32 %7, 18\l  %91 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %90\l  %92 = load float, float addrspace(3)* %91, align 4, !tbaa !5\l  %93 = fmul contract float %92, 8.000000e+00\l  %94 = fadd contract float %89, %93\l  %95 = add nuw nsw i32 %7, 24\l  %96 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %95\l  %97 = load float, float addrspace(3)* %96, align 4, !tbaa !5\l  %98 = fmul contract float %97, 8.000000e+00\l  %99 = fsub contract float %94, %98\l  %100 = add nuw nsw i32 %7, 30\l  %101 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %100\l  %102 = load float, float addrspace(3)* %101, align 4, !tbaa !5\l  %103 = fadd contract float %102, %99\l  br label %104\l}"];
	Node0x62b13c0 -> Node0x62b1120;
	Node0x62b1120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%104:\l104:                                              \l  %105 = phi float [ 0.000000e+00, %4 ], [ %103, %82 ], [ %81, %64 ], [ %63,\l... %46 ], [ %45, %27 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  store float %105, float addrspace(3)* %21, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %106 = icmp ugt i32 %9, 3\l  br i1 %106, label %218, label %107\l|{<s0>T|<s1>F}}"];
	Node0x62b1120:s0 -> Node0x62b5580;
	Node0x62b1120:s1 -> Node0x62b55d0;
	Node0x62b55d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%107:\l107:                                              \l  %108 = icmp eq i32 %5, 3\l  %109 = icmp ugt i32 %9, 1\l  %110 = select i1 %108, i1 %109, i1 false\l  br i1 %110, label %218, label %111\l|{<s0>T|<s1>F}}"];
	Node0x62b55d0:s0 -> Node0x62b5580;
	Node0x62b55d0:s1 -> Node0x62b58e0;
	Node0x62b58e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%111:\l111:                                              \l  switch i32 %7, label %218 [\l    i32 0, label %112\l    i32 1, label %133\l    i32 2, label %153\l    i32 3, label %175\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2|<s4>3}}"];
	Node0x62b58e0:s0 -> Node0x62b5580;
	Node0x62b58e0:s1 -> Node0x62b59e0;
	Node0x62b58e0:s2 -> Node0x62b5a30;
	Node0x62b58e0:s3 -> Node0x62b5ac0;
	Node0x62b58e0:s4 -> Node0x62b5b50;
	Node0x62b59e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%112:\l112:                                              \l  %113 = load float, float addrspace(3)*\l... @_ZZ24kernel_128_winograd_AtIAPfS_S_S_E5scale, align 4, !tbaa !5\l  %114 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %10\l  %115 = bitcast float addrspace(3)* %114 to \<2 x float\> addrspace(3)*\l  %116 = load \<2 x float\>, \<2 x float\> addrspace(3)* %115, align 4, !tbaa !5\l  %117 = extractelement \<2 x float\> %116, i64 0\l  %118 = extractelement \<2 x float\> %116, i64 1\l  %119 = fadd contract float %117, %118\l  %120 = add nuw nsw i32 %10, 2\l  %121 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %120\l  %122 = load float, float addrspace(3)* %121, align 4, !tbaa !5\l  %123 = fadd contract float %119, %122\l  %124 = add nuw nsw i32 %10, 3\l  %125 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %124\l  %126 = load float, float addrspace(3)* %125, align 4, !tbaa !5\l  %127 = fadd contract float %123, %126\l  %128 = add nuw nsw i32 %10, 4\l  %129 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %128\l  %130 = load float, float addrspace(3)* %129, align 4, !tbaa !5\l  %131 = fadd contract float %127, %130\l  %132 = fmul contract float %113, %131\l  br label %201\l}"];
	Node0x62b59e0 -> Node0x62b3980;
	Node0x62b5a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%133:\l133:                                              \l  %134 = load float, float addrspace(3)*\l... @_ZZ24kernel_128_winograd_AtIAPfS_S_S_E5scale, align 4, !tbaa !5\l  %135 = or i32 %10, 1\l  %136 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %135\l  %137 = bitcast float addrspace(3)* %136 to \<2 x float\> addrspace(3)*\l  %138 = load \<2 x float\>, \<2 x float\> addrspace(3)* %137, align 4, !tbaa !5\l  %139 = extractelement \<2 x float\> %138, i64 0\l  %140 = extractelement \<2 x float\> %138, i64 1\l  %141 = fsub contract float %139, %140\l  %142 = add nuw nsw i32 %10, 3\l  %143 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %142\l  %144 = load float, float addrspace(3)* %143, align 4, !tbaa !5\l  %145 = fmul contract float %144, 2.000000e+00\l  %146 = fadd contract float %141, %145\l  %147 = add nuw nsw i32 %10, 4\l  %148 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %147\l  %149 = load float, float addrspace(3)* %148, align 4, !tbaa !5\l  %150 = fmul contract float %149, 2.000000e+00\l  %151 = fsub contract float %146, %150\l  %152 = fmul contract float %134, %151\l  br label %201\l}"];
	Node0x62b5a30 -> Node0x62b3980;
	Node0x62b5ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%153:\l153:                                              \l  %154 = icmp eq i32 %6, 3\l  br i1 %154, label %218, label %155\l|{<s0>T|<s1>F}}"];
	Node0x62b5ac0:s0 -> Node0x62b5580;
	Node0x62b5ac0:s1 -> Node0x62b3a40;
	Node0x62b3a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%155:\l155:                                              \l  %156 = load float, float addrspace(3)*\l... @_ZZ24kernel_128_winograd_AtIAPfS_S_S_E5scale, align 4, !tbaa !5\l  %157 = or i32 %10, 1\l  %158 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %157\l  %159 = bitcast float addrspace(3)* %158 to \<2 x float\> addrspace(3)*\l  %160 = load \<2 x float\>, \<2 x float\> addrspace(3)* %159, align 4, !tbaa !5\l  %161 = extractelement \<2 x float\> %160, i64 0\l  %162 = extractelement \<2 x float\> %160, i64 1\l  %163 = fadd contract float %161, %162\l  %164 = add nuw nsw i32 %10, 3\l  %165 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %164\l  %166 = load float, float addrspace(3)* %165, align 4, !tbaa !5\l  %167 = fmul contract float %166, 4.000000e+00\l  %168 = fadd contract float %163, %167\l  %169 = add nuw nsw i32 %10, 4\l  %170 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %169\l  %171 = load float, float addrspace(3)* %170, align 4, !tbaa !5\l  %172 = fmul contract float %171, 4.000000e+00\l  %173 = fadd contract float %168, %172\l  %174 = fmul contract float %156, %173\l  br label %201\l}"];
	Node0x62b3a40 -> Node0x62b3980;
	Node0x62b5b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%175:\l175:                                              \l  %176 = icmp eq i32 %6, 3\l  br i1 %176, label %218, label %177\l|{<s0>T|<s1>F}}"];
	Node0x62b5b50:s0 -> Node0x62b5580;
	Node0x62b5b50:s1 -> Node0x62b8110;
	Node0x62b8110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%177:\l177:                                              \l  %178 = load float, float addrspace(3)*\l... @_ZZ24kernel_128_winograd_AtIAPfS_S_S_E5scale, align 4, !tbaa !5\l  %179 = or i32 %10, 1\l  %180 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %179\l  %181 = bitcast float addrspace(3)* %180 to \<2 x float\> addrspace(3)*\l  %182 = load \<2 x float\>, \<2 x float\> addrspace(3)* %181, align 4, !tbaa !5\l  %183 = extractelement \<2 x float\> %182, i64 0\l  %184 = extractelement \<2 x float\> %182, i64 1\l  %185 = fsub contract float %183, %184\l  %186 = add nuw nsw i32 %10, 3\l  %187 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %186\l  %188 = load float, float addrspace(3)* %187, align 4, !tbaa !5\l  %189 = fmul contract float %188, 8.000000e+00\l  %190 = fadd contract float %185, %189\l  %191 = add nuw nsw i32 %10, 4\l  %192 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %191\l  %193 = load float, float addrspace(3)* %192, align 4, !tbaa !5\l  %194 = fmul contract float %193, 8.000000e+00\l  %195 = fsub contract float %190, %194\l  %196 = add nuw nsw i32 %10, 5\l  %197 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @input,\l... i32 0, i32 %196\l  %198 = load float, float addrspace(3)* %197, align 4, !tbaa !5\l  %199 = fadd contract float %198, %195\l  %200 = fmul contract float %178, %199\l  br label %201\l}"];
	Node0x62b8110 -> Node0x62b3980;
	Node0x62b3980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%201:\l201:                                              \l  %202 = phi float [ %200, %177 ], [ %174, %155 ], [ %152, %133 ], [ %132,\l... %112 ]\l  %203 = phi i32 [ 512, %177 ], [ 384, %155 ], [ 256, %133 ], [ 128, %112 ]\l  %204 = load float, float addrspace(3)*\l... @_ZZ24kernel_128_winograd_AtIAPfS_S_S_E4bias, align 4, !tbaa !5\l  %205 = fadd contract float %204, %202\l  %206 = fcmp contract ogt float %205, 0.000000e+00\l  %207 = select contract i1 %206, float %205, float 0.000000e+00\l  %208 = shl i32 %6, 9\l  %209 = shl i32 %5, 13\l  %210 = shl nuw nsw i32 %9, 11\l  %211 = add nuw nsw i32 %210, 2048\l  %212 = add i32 %209, %211\l  %213 = add i32 %8, %203\l  %214 = add i32 %213, %208\l  %215 = add i32 %214, %212\l  %216 = sext i32 %215 to i64\l  %217 = getelementptr inbounds float, float addrspace(1)* %3, i64 %216\l  store float %207, float addrspace(1)* %217, align 4, !tbaa !5\l  br label %218\l}"];
	Node0x62b3980 -> Node0x62b5580;
	Node0x62b5580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%218:\l218:                                              \l  ret void\l}"];
}
