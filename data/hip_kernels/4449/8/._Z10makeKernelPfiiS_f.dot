digraph "CFG for '_Z10makeKernelPfiiS_f' function" {
	label="CFG for '_Z10makeKernelPfiiS_f' function";

	Node0x6212fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = mul i32 %14, %10\l  %16 = udiv i32 %13, %10\l  %17 = mul i32 %16, %10\l  %18 = icmp ugt i32 %13, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %10\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %23 = add i32 %15, %22\l  %24 = getelementptr inbounds float, float addrspace(1)* %3, i64 1\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %26 = load float, float addrspace(1)* %3, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %27 = getelementptr inbounds float, float addrspace(1)* %3, i64 2\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %29 = getelementptr inbounds float, float addrspace(1)* %3, i64 3\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %31 = fdiv contract float %25, %26\l  %32 = fmul contract float %31, %4\l  %33 = fdiv contract float %28, %30\l  %34 = mul nsw i32 %2, %1\l  %35 = icmp slt i32 %23, %34\l  br i1 %35, label %36, label %39\l|{<s0>T|<s1>F}}"];
	Node0x6212fd0:s0 -> Node0x6214e00;
	Node0x6212fd0:s1 -> Node0x6216c10;
	Node0x6214e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%36:\l36:                                               \l  %37 = sdiv i32 %1, 2\l  %38 = fmul contract float %33, %33\l  br label %40\l}"];
	Node0x6214e00 -> Node0x6216e70;
	Node0x6216c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%39:\l39:                                               \l  ret void\l}"];
	Node0x6216e70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ %23, %36 ], [ %85, %81 ]\l  %42 = freeze i32 %41\l  %43 = freeze i32 %1\l  %44 = sdiv i32 %42, %43\l  %45 = mul i32 %44, %43\l  %46 = sub i32 %42, %45\l  %47 = sub nsw i32 %46, %37\l  %48 = sitofp i32 %47 to float\l  %49 = fmul contract float %32, %48\l  %50 = sub nsw i32 %44, %37\l  %51 = sitofp i32 %50 to float\l  %52 = fmul contract float %32, %51\l  %53 = fmul contract float %49, %49\l  %54 = fsub contract float %38, %53\l  %55 = fmul contract float %52, %52\l  %56 = fsub contract float %54, %55\l  %57 = fcmp contract ult float %56, 0.000000e+00\l  br i1 %57, label %81, label %58\l|{<s0>T|<s1>F}}"];
	Node0x6216e70:s0 -> Node0x6216f80;
	Node0x6216e70:s1 -> Node0x6218350;
	Node0x6218350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%58:\l58:                                               \l  %59 = fcmp olt float %56, 0x39F0000000000000\l  %60 = select i1 %59, float 0x41F0000000000000, float 1.000000e+00\l  %61 = fmul float %56, %60\l  %62 = tail call float @llvm.sqrt.f32(float %61)\l  %63 = bitcast float %62 to i32\l  %64 = add nsw i32 %63, -1\l  %65 = bitcast i32 %64 to float\l  %66 = add nsw i32 %63, 1\l  %67 = bitcast i32 %66 to float\l  %68 = tail call i1 @llvm.amdgcn.class.f32(float %61, i32 608)\l  %69 = select i1 %59, float 0x3EF0000000000000, float 1.000000e+00\l  %70 = fneg float %67\l  %71 = tail call float @llvm.fma.f32(float %70, float %62, float %61)\l  %72 = fcmp ogt float %71, 0.000000e+00\l  %73 = fneg float %65\l  %74 = tail call float @llvm.fma.f32(float %73, float %62, float %61)\l  %75 = fcmp ole float %74, 0.000000e+00\l  %76 = select i1 %75, float %65, float %62\l  %77 = select i1 %72, float %67, float %76\l  %78 = fmul float %69, %77\l  %79 = select i1 %68, float %61, float %78\l  %80 = fsub contract float %79, %33\l  br label %81\l}"];
	Node0x6218350 -> Node0x6216f80;
	Node0x6216f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = phi contract float [ %80, %58 ], [ 0.000000e+00, %40 ]\l  %83 = sext i32 %41 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %83\l  store float %82, float addrspace(1)* %84, align 4, !tbaa !16\l  %85 = add nsw i32 %41, %21\l  %86 = icmp slt i32 %85, %34\l  br i1 %86, label %40, label %39, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x6216f80:s0 -> Node0x6216e70;
	Node0x6216f80:s1 -> Node0x6216c10;
}
