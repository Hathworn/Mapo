digraph "CFG for '_Z10ScaleArrayPffi' function" {
	label="CFG for '_Z10ScaleArrayPffi' function";

	Node0x5dc3350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !6\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %8\l  %14 = udiv i32 %11, %8\l  %15 = mul i32 %14, %8\l  %16 = icmp ugt i32 %11, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = mul i32 %18, %8\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %21 = add i32 %13, %20\l  %22 = icmp slt i32 %21, %2\l  br i1 %22, label %24, label %23\l|{<s0>T|<s1>F}}"];
	Node0x5dc3350:s0 -> Node0x5dc58f0;
	Node0x5dc3350:s1 -> Node0x5dc5980;
	Node0x5dc5980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%23:\l23:                                               \l  ret void\l}"];
	Node0x5dc58f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %30, %24 ], [ %21, %3 ]\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !16\l  %29 = fmul contract float %28, %1\l  store float %29, float addrspace(1)* %27, align 4, !tbaa !16\l  %30 = add nsw i32 %25, %19\l  %31 = icmp slt i32 %30, %2\l  br i1 %31, label %24, label %23, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5dc58f0:s0 -> Node0x5dc58f0;
	Node0x5dc58f0:s1 -> Node0x5dc5980;
}
