digraph "CFG for '_Z23makeKernel_nonefftshiftPfiiS_' function" {
	label="CFG for '_Z23makeKernel_nonefftshiftPfiiS_' function";

	Node0x5e70090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = mul i32 %13, %9\l  %15 = udiv i32 %12, %9\l  %16 = mul i32 %15, %9\l  %17 = icmp ugt i32 %12, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %9\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %14, %21\l  %23 = load float, float addrspace(1)* %3, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %24 = getelementptr inbounds float, float addrspace(1)* %3, i64 1\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %26 = getelementptr inbounds float, float addrspace(1)* %3, i64 2\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %28 = getelementptr inbounds float, float addrspace(1)* %3, i64 3\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %30 = getelementptr inbounds float, float addrspace(1)* %3, i64 4\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %32 = fdiv contract float 1.000000e+00, %31\l  %33 = fdiv contract float %25, %23\l  %34 = fmul contract float %33, %32\l  %35 = fdiv contract float %27, %29\l  %36 = mul nsw i32 %2, %1\l  %37 = icmp slt i32 %22, %36\l  br i1 %37, label %38, label %41\l|{<s0>T|<s1>F}}"];
	Node0x5e70090:s0 -> Node0x5e71fd0;
	Node0x5e70090:s1 -> Node0x5e74980;
	Node0x5e71fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%38:\l38:                                               \l  %39 = sdiv i32 %1, 2\l  %40 = fmul contract float %35, %35\l  br label %42\l}"];
	Node0x5e71fd0 -> Node0x5e74be0;
	Node0x5e74980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%41:\l41:                                               \l  ret void\l}"];
	Node0x5e74be0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = phi i32 [ %22, %38 ], [ %91, %87 ]\l  %44 = freeze i32 %43\l  %45 = freeze i32 %1\l  %46 = sdiv i32 %44, %45\l  %47 = mul i32 %46, %45\l  %48 = sub i32 %44, %47\l  %49 = icmp sgt i32 %48, %39\l  %50 = select i1 %49, i32 %1, i32 0\l  %51 = sub nsw i32 %48, %50\l  %52 = icmp sgt i32 %46, %39\l  %53 = select i1 %52, i32 %1, i32 0\l  %54 = sub nsw i32 %46, %53\l  %55 = sitofp i32 %51 to float\l  %56 = fmul contract float %34, %55\l  %57 = sitofp i32 %54 to float\l  %58 = fmul contract float %34, %57\l  %59 = fmul contract float %56, %56\l  %60 = fsub contract float %40, %59\l  %61 = fmul contract float %58, %58\l  %62 = fsub contract float %60, %61\l  %63 = fcmp contract ult float %62, 0.000000e+00\l  br i1 %63, label %87, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5e74be0:s0 -> Node0x5e74cf0;
	Node0x5e74be0:s1 -> Node0x5e75960;
	Node0x5e75960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%64:\l64:                                               \l  %65 = fcmp olt float %62, 0x39F0000000000000\l  %66 = select i1 %65, float 0x41F0000000000000, float 1.000000e+00\l  %67 = fmul float %62, %66\l  %68 = tail call float @llvm.sqrt.f32(float %67)\l  %69 = bitcast float %68 to i32\l  %70 = add nsw i32 %69, -1\l  %71 = bitcast i32 %70 to float\l  %72 = add nsw i32 %69, 1\l  %73 = bitcast i32 %72 to float\l  %74 = tail call i1 @llvm.amdgcn.class.f32(float %67, i32 608)\l  %75 = select i1 %65, float 0x3EF0000000000000, float 1.000000e+00\l  %76 = fneg float %73\l  %77 = tail call float @llvm.fma.f32(float %76, float %68, float %67)\l  %78 = fcmp ogt float %77, 0.000000e+00\l  %79 = fneg float %71\l  %80 = tail call float @llvm.fma.f32(float %79, float %68, float %67)\l  %81 = fcmp ole float %80, 0.000000e+00\l  %82 = select i1 %81, float %71, float %68\l  %83 = select i1 %78, float %73, float %82\l  %84 = fmul float %75, %83\l  %85 = select i1 %74, float %67, float %84\l  %86 = fsub contract float %85, %35\l  br label %87\l}"];
	Node0x5e75960 -> Node0x5e74cf0;
	Node0x5e74cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  %88 = phi contract float [ %86, %64 ], [ 0.000000e+00, %42 ]\l  %89 = sext i32 %43 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %0, i64 %89\l  store float %88, float addrspace(1)* %90, align 4, !tbaa !16\l  %91 = add nsw i32 %43, %20\l  %92 = icmp slt i32 %91, %36\l  br i1 %92, label %42, label %41, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5e74cf0:s0 -> Node0x5e74be0;
	Node0x5e74cf0:s1 -> Node0x5e74980;
}
