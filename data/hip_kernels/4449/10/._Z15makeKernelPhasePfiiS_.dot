digraph "CFG for '_Z15makeKernelPhasePfiiS_' function" {
	label="CFG for '_Z15makeKernelPhasePfiiS_' function";

	Node0x5046040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = mul i32 %13, %9\l  %15 = udiv i32 %12, %9\l  %16 = mul i32 %15, %9\l  %17 = icmp ugt i32 %12, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %9\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %14, %21\l  %23 = getelementptr inbounds float, float addrspace(1)* %3, i64 1\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %25 = load float, float addrspace(1)* %3, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %26 = fdiv contract float %24, %25\l  %27 = getelementptr inbounds float, float addrspace(1)* %3, i64 2\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %29 = getelementptr inbounds float, float addrspace(1)* %3, i64 3\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  %31 = fdiv contract float %28, %30\l  %32 = mul nsw i32 %2, %1\l  %33 = icmp slt i32 %22, %32\l  br i1 %33, label %34, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5046040:s0 -> Node0x5047f40;
	Node0x5046040:s1 -> Node0x5049c30;
	Node0x5047f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%34:\l34:                                               \l  %35 = sdiv i32 %1, 2\l  %36 = sitofp i32 %1 to float\l  %37 = fmul contract float %31, %31\l  br label %39\l}"];
	Node0x5047f40 -> Node0x5049f00;
	Node0x5049c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%38:\l38:                                               \l  ret void\l}"];
	Node0x5049f00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i32 [ %22, %34 ], [ %90, %86 ]\l  %41 = freeze i32 %40\l  %42 = freeze i32 %1\l  %43 = sdiv i32 %41, %42\l  %44 = mul i32 %43, %42\l  %45 = sub i32 %41, %44\l  %46 = icmp sgt i32 %45, %35\l  %47 = select i1 %46, i32 %1, i32 0\l  %48 = sub nsw i32 %45, %47\l  %49 = icmp sgt i32 %43, %35\l  %50 = select i1 %49, i32 %1, i32 0\l  %51 = sub nsw i32 %43, %50\l  %52 = sitofp i32 %48 to float\l  %53 = fmul contract float %26, %52\l  %54 = fdiv contract float %53, %36\l  %55 = sitofp i32 %51 to float\l  %56 = fmul contract float %26, %55\l  %57 = fdiv contract float %56, %36\l  %58 = fmul contract float %54, %54\l  %59 = fsub contract float %37, %58\l  %60 = fmul contract float %57, %57\l  %61 = fsub contract float %59, %60\l  %62 = fcmp contract ult float %61, 0.000000e+00\l  br i1 %62, label %86, label %63\l|{<s0>T|<s1>F}}"];
	Node0x5049f00:s0 -> Node0x504a010;
	Node0x5049f00:s1 -> Node0x504b7b0;
	Node0x504b7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%63:\l63:                                               \l  %64 = fcmp olt float %61, 0x39F0000000000000\l  %65 = select i1 %64, float 0x41F0000000000000, float 1.000000e+00\l  %66 = fmul float %61, %65\l  %67 = tail call float @llvm.sqrt.f32(float %66)\l  %68 = bitcast float %67 to i32\l  %69 = add nsw i32 %68, -1\l  %70 = bitcast i32 %69 to float\l  %71 = add nsw i32 %68, 1\l  %72 = bitcast i32 %71 to float\l  %73 = tail call i1 @llvm.amdgcn.class.f32(float %66, i32 608)\l  %74 = select i1 %64, float 0x3EF0000000000000, float 1.000000e+00\l  %75 = fneg float %72\l  %76 = tail call float @llvm.fma.f32(float %75, float %67, float %66)\l  %77 = fcmp ogt float %76, 0.000000e+00\l  %78 = fneg float %70\l  %79 = tail call float @llvm.fma.f32(float %78, float %67, float %66)\l  %80 = fcmp ole float %79, 0.000000e+00\l  %81 = select i1 %80, float %70, float %67\l  %82 = select i1 %77, float %72, float %81\l  %83 = fmul float %74, %82\l  %84 = select i1 %73, float %66, float %83\l  %85 = fsub contract float %84, %31\l  br label %86\l}"];
	Node0x504b7b0 -> Node0x504a010;
	Node0x504a010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  %87 = phi contract float [ %85, %63 ], [ 0.000000e+00, %39 ]\l  %88 = sext i32 %40 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88\l  store float %87, float addrspace(1)* %89, align 4, !tbaa !16\l  %90 = add nsw i32 %40, %20\l  %91 = icmp slt i32 %90, %32\l  br i1 %91, label %39, label %38, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x504a010:s0 -> Node0x5049f00;
	Node0x504a010:s1 -> Node0x5049c30;
}
