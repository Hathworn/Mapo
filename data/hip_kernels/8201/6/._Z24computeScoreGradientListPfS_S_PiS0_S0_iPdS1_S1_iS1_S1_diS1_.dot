digraph "CFG for '_Z24computeScoreGradientListPfS_S_PiS0_S0_iPdS1_S1_iS1_S1_diS1_' function" {
	label="CFG for '_Z24computeScoreGradientListPfS_S_PiS0_S0_iPdS1_S1_iS1_S1_diS1_' function";

	Node0x47b3d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%16:\l  %17 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %18 = getelementptr i8, i8 addrspace(4)* %17, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = getelementptr inbounds i8, i8 addrspace(4)* %17, i64 12\l  %23 = bitcast i8 addrspace(4)* %22 to i32 addrspace(4)*\l  %24 = load i32, i32 addrspace(4)* %23, align 4, !tbaa !6\l  %25 = udiv i32 %24, %21\l  %26 = mul i32 %25, %21\l  %27 = icmp ugt i32 %24, %26\l  %28 = zext i1 %27 to i32\l  %29 = add i32 %25, %28\l  %30 = mul i32 %29, %21\l  %31 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %32 = icmp slt i32 %31, 6\l  br i1 %32, label %33, label %118\l|{<s0>T|<s1>F}}"];
	Node0x47b3d20:s0 -> Node0x47b4c40;
	Node0x47b3d20:s1 -> Node0x47b4cd0;
	Node0x47b4c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%33:\l33:                                               \l  %34 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %35 = mul i32 %34, %21\l  %36 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %37 = add i32 %35, %36\l  %38 = mul nsw i32 %31, %6\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds double, double addrspace(1)* %15, i64 %39\l  %41 = mul nsw i32 %31, %14\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds double, double addrspace(1)* %12, i64 %42\l  %44 = mul nsw i32 %14, 6\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds double, double addrspace(1)* %43, i64 %45\l  %47 = getelementptr inbounds double, double addrspace(1)* %46, i64 %45\l  %48 = icmp slt i32 %37, %6\l  br i1 %48, label %49, label %118\l|{<s0>T|<s1>F}}"];
	Node0x47b4c40:s0 -> Node0x47b7a10;
	Node0x47b4c40:s1 -> Node0x47b4cd0;
	Node0x47b7a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%49:\l49:                                               \l  %50 = phi i32 [ %74, %71 ], [ %37, %33 ]\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %57 = fpext float %56 to double\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %60 = fpext float %59 to double\l  %61 = getelementptr inbounds float, float addrspace(1)* %2, i64 %54\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %63 = fpext float %62 to double\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %51\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %66 = add nsw i32 %50, 1\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %70 = icmp slt i32 %65, %69\l  br i1 %70, label %76, label %71\l|{<s0>T|<s1>F}}"];
	Node0x47b7a10:s0 -> Node0x47b9fb0;
	Node0x47b7a10:s1 -> Node0x47b7b50;
	Node0x47b7b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%71:\l71:                                               \l  %72 = phi double [ 0.000000e+00, %49 ], [ %115, %114 ]\l  %73 = getelementptr inbounds double, double addrspace(1)* %40, i64 %51\l  store double %72, double addrspace(1)* %73, align 8, !tbaa !22\l  %74 = add nsw i32 %50, %30\l  %75 = icmp slt i32 %74, %6\l  br i1 %75, label %49, label %118, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x47b7b50:s0 -> Node0x47b7a10;
	Node0x47b7b50:s1 -> Node0x47b4cd0;
	Node0x47b9fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  %77 = phi i32 [ %116, %114 ], [ %65, %49 ]\l  %78 = phi double [ %115, %114 ], [ 0.000000e+00, %49 ]\l  %79 = sext i32 %77 to i64\l  %80 = getelementptr inbounds double, double addrspace(1)* %11, i64 %79\l  %81 = load double, double addrspace(1)* %80, align 8, !tbaa !22\l  %82 = fcmp contract ogt double %81, 1.000000e+00\l  %83 = fcmp contract olt double %81, 0.000000e+00\l  %84 = or i1 %82, %83\l  %85 = fcmp contract uno double %81, 0.000000e+00\l  %86 = or i1 %85, %84\l  br i1 %86, label %114, label %87\l|{<s0>T|<s1>F}}"];
	Node0x47b9fb0:s0 -> Node0x47bab40;
	Node0x47b9fb0:s1 -> Node0x47bbdc0;
	Node0x47bbdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%87:\l87:                                               \l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %79\l  %89 = load i32, i32 addrspace(1)* %88, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %90 = fmul contract double %81, %13\l  %91 = sext i32 %89 to i64\l  %92 = getelementptr inbounds double, double addrspace(1)* %7, i64 %91\l  %93 = load double, double addrspace(1)* %92, align 8, !tbaa !22\l  %94 = fsub contract double %57, %93\l  %95 = getelementptr inbounds double, double addrspace(1)* %43, i64 %79\l  %96 = load double, double addrspace(1)* %95, align 8, !tbaa !22\l  %97 = fmul contract double %94, %96\l  %98 = getelementptr inbounds double, double addrspace(1)* %8, i64 %91\l  %99 = load double, double addrspace(1)* %98, align 8, !tbaa !22\l  %100 = fsub contract double %60, %99\l  %101 = getelementptr inbounds double, double addrspace(1)* %46, i64 %79\l  %102 = load double, double addrspace(1)* %101, align 8, !tbaa !22\l  %103 = fmul contract double %100, %102\l  %104 = fadd contract double %97, %103\l  %105 = getelementptr inbounds double, double addrspace(1)* %9, i64 %91\l  %106 = load double, double addrspace(1)* %105, align 8, !tbaa !22\l  %107 = fsub contract double %63, %106\l  %108 = getelementptr inbounds double, double addrspace(1)* %47, i64 %79\l  %109 = load double, double addrspace(1)* %108, align 8, !tbaa !22\l  %110 = fmul contract double %107, %109\l  %111 = fadd contract double %104, %110\l  %112 = fmul contract double %90, %111\l  %113 = fadd contract double %78, %112\l  br label %114\l}"];
	Node0x47bbdc0 -> Node0x47bab40;
	Node0x47bab40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  %115 = phi double [ %78, %76 ], [ %113, %87 ]\l  %116 = add nsw i32 %77, 1\l  %117 = icmp slt i32 %116, %69\l  br i1 %117, label %76, label %71, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x47bab40:s0 -> Node0x47b9fb0;
	Node0x47bab40:s1 -> Node0x47b7b50;
	Node0x47b4cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%118:\l118:                                              \l  ret void\l}"];
}
