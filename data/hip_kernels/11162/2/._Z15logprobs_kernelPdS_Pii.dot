digraph "CFG for '_Z15logprobs_kernelPdS_Pii' function" {
	label="CFG for '_Z15logprobs_kernelPdS_Pii' function";

	Node0x5871000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = mul nsw i32 %5, %3\l  %7 = sext i32 %5 to i64\l  %8 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %7\l  %9 = load i32, i32 addrspace(1)* %8, align 4, !tbaa !4, !amdgpu.noclobber !8\l  %10 = add nsw i32 %9, %6\l  %11 = sext i32 %10 to i64\l  %12 = getelementptr inbounds double, double addrspace(1)* %1, i64 %11\l  %13 = load double, double addrspace(1)* %12, align 8, !tbaa !9,\l... !amdgpu.noclobber !8\l  %14 = tail call double @llvm.amdgcn.frexp.mant.f64(double %13)\l  %15 = fcmp olt double %14, 0x3FE5555555555555\l  %16 = zext i1 %15 to i32\l  %17 = tail call double @llvm.amdgcn.ldexp.f64(double %14, i32 %16)\l  %18 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %13)\l  %19 = sub nsw i32 %18, %16\l  %20 = fadd double %17, -1.000000e+00\l  %21 = fadd double %17, 1.000000e+00\l  %22 = fadd double %21, -1.000000e+00\l  %23 = fsub double %17, %22\l  %24 = tail call double @llvm.amdgcn.rcp.f64(double %21)\l  %25 = fneg double %21\l  %26 = tail call double @llvm.fma.f64(double %25, double %24, double\l... 1.000000e+00)\l  %27 = tail call double @llvm.fma.f64(double %26, double %24, double %24)\l  %28 = tail call double @llvm.fma.f64(double %25, double %27, double\l... 1.000000e+00)\l  %29 = tail call double @llvm.fma.f64(double %28, double %27, double %27)\l  %30 = fmul double %20, %29\l  %31 = fmul double %21, %30\l  %32 = fneg double %31\l  %33 = tail call double @llvm.fma.f64(double %30, double %21, double %32)\l  %34 = tail call double @llvm.fma.f64(double %30, double %23, double %33)\l  %35 = fadd double %31, %34\l  %36 = fsub double %35, %31\l  %37 = fsub double %34, %36\l  %38 = fsub double %20, %35\l  %39 = fsub double %20, %38\l  %40 = fsub double %39, %35\l  %41 = fsub double %40, %37\l  %42 = fadd double %38, %41\l  %43 = fmul double %29, %42\l  %44 = fadd double %30, %43\l  %45 = fsub double %44, %30\l  %46 = fsub double %43, %45\l  %47 = fmul double %44, %44\l  %48 = tail call double @llvm.fma.f64(double %47, double 0x3FC3AB76BF559E2B,\l... double 0x3FC385386B47B09A)\l  %49 = tail call double @llvm.fma.f64(double %47, double %48, double\l... 0x3FC7474DD7F4DF2E)\l  %50 = tail call double @llvm.fma.f64(double %47, double %49, double\l... 0x3FCC71C016291751)\l  %51 = tail call double @llvm.fma.f64(double %47, double %50, double\l... 0x3FD249249B27ACF1)\l  %52 = tail call double @llvm.fma.f64(double %47, double %51, double\l... 0x3FD99999998EF7B6)\l  %53 = tail call double @llvm.fma.f64(double %47, double %52, double\l... 0x3FE5555555555780)\l  %54 = tail call double @llvm.amdgcn.ldexp.f64(double %44, i32 1)\l  %55 = tail call double @llvm.amdgcn.ldexp.f64(double %46, i32 1)\l  %56 = fmul double %44, %47\l  %57 = fmul double %56, %53\l  %58 = fadd double %54, %57\l  %59 = fsub double %58, %54\l  %60 = fsub double %57, %59\l  %61 = fadd double %55, %60\l  %62 = fadd double %58, %61\l  %63 = fsub double %62, %58\l  %64 = fsub double %61, %63\l  %65 = sitofp i32 %19 to double\l  %66 = fmul double %65, 0x3FE62E42FEFA39EF\l  %67 = fneg double %66\l  %68 = tail call double @llvm.fma.f64(double %65, double 0x3FE62E42FEFA39EF,\l... double %67)\l  %69 = tail call double @llvm.fma.f64(double %65, double 0x3C7ABC9E3B39803F,\l... double %68)\l  %70 = fadd double %66, %69\l  %71 = fsub double %70, %66\l  %72 = fsub double %69, %71\l  %73 = fadd double %70, %62\l  %74 = fsub double %73, %70\l  %75 = fsub double %73, %74\l  %76 = fsub double %70, %75\l  %77 = fsub double %62, %74\l  %78 = fadd double %77, %76\l  %79 = fadd double %72, %64\l  %80 = fsub double %79, %72\l  %81 = fsub double %79, %80\l  %82 = fsub double %72, %81\l  %83 = fsub double %64, %80\l  %84 = fadd double %83, %82\l  %85 = fadd double %79, %78\l  %86 = fadd double %73, %85\l  %87 = fsub double %86, %73\l  %88 = fsub double %85, %87\l  %89 = fadd double %84, %88\l  %90 = fadd double %86, %89\l  %91 = tail call double @llvm.fabs.f64(double %13) #3\l  %92 = fcmp oeq double %91, 0x7FF0000000000000\l  %93 = select i1 %92, double %13, double %90\l  %94 = fcmp olt double %13, 0.000000e+00\l  %95 = select i1 %94, double 0x7FF8000000000000, double %93\l  %96 = fcmp oeq double %13, 0.000000e+00\l  %97 = select i1 %96, double 0xFFF0000000000000, double %95\l  %98 = fneg contract double %97\l  %99 = getelementptr inbounds double, double addrspace(1)* %0, i64 %7\l  store double %98, double addrspace(1)* %99, align 8, !tbaa !9\l  ret void\l}"];
}
