digraph "CFG for '_Z20upsample_corr_kernelPiS_iiii' function" {
	label="CFG for '_Z20upsample_corr_kernelPiS_iiii' function";

	Node0x4f4bb30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = mul nsw i32 %5, %4\l  %17 = icmp slt i32 %15, %16\l  br i1 %17, label %18, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4f4bb30:s0 -> Node0x4f4db50;
	Node0x4f4bb30:s1 -> Node0x4f4dbe0;
	Node0x4f4db50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = freeze i32 %15\l  %20 = freeze i32 %5\l  %21 = sdiv i32 %19, %20\l  %22 = mul i32 %21, %20\l  %23 = sub i32 %19, %22\l  %24 = sitofp i32 %5 to float\l  %25 = sitofp i32 %3 to float\l  %26 = fdiv contract float %24, %25\l  %27 = sitofp i32 %4 to float\l  %28 = sitofp i32 %2 to float\l  %29 = fdiv contract float %27, %28\l  %30 = sitofp i32 %23 to double\l  %31 = fadd contract double %30, 5.000000e-01\l  %32 = fpext float %26 to double\l  %33 = fdiv contract double %31, %32\l  %34 = fptosi double %33 to i32\l  %35 = sitofp i32 %21 to double\l  %36 = fadd contract double %35, 5.000000e-01\l  %37 = fpext float %29 to double\l  %38 = fdiv contract double %36, %37\l  %39 = fptosi double %38 to i32\l  %40 = add nsw i32 %3, -1\l  %41 = tail call i32 @llvm.smin.i32(i32 %40, i32 %34)\l  %42 = tail call i32 @llvm.smax.i32(i32 %41, i32 0)\l  %43 = add nsw i32 %2, -1\l  %44 = tail call i32 @llvm.smin.i32(i32 %43, i32 %39)\l  %45 = tail call i32 @llvm.smax.i32(i32 %44, i32 0)\l  %46 = mul nsw i32 %45, %3\l  %47 = add nsw i32 %46, %42\l  %48 = shl nsw i32 %47, 1\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %49\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %52 = add nuw nsw i32 %48, 1\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %56 = sitofp i32 %23 to float\l  %57 = sub nsw i32 %51, %42\l  %58 = sitofp i32 %57 to float\l  %59 = fmul contract float %26, %58\l  %60 = fadd contract float %59, %56\l  %61 = fpext float %60 to double\l  %62 = fadd contract double %61, 5.000000e-01\l  %63 = fptosi double %62 to i32\l  %64 = sitofp i32 %21 to float\l  %65 = sub nsw i32 %55, %45\l  %66 = sitofp i32 %65 to float\l  %67 = fmul contract float %29, %66\l  %68 = fadd contract float %67, %64\l  %69 = fpext float %68 to double\l  %70 = fadd contract double %69, 5.000000e-01\l  %71 = fptosi double %70 to i32\l  %72 = add nsw i32 %5, -1\l  %73 = tail call i32 @llvm.smin.i32(i32 %72, i32 %63)\l  %74 = tail call i32 @llvm.smax.i32(i32 %73, i32 0)\l  %75 = add nsw i32 %4, -1\l  %76 = tail call i32 @llvm.smin.i32(i32 %75, i32 %71)\l  %77 = tail call i32 @llvm.smax.i32(i32 %76, i32 0)\l  %78 = shl nsw i32 %15, 1\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %79\l  store i32 %74, i32 addrspace(1)* %80, align 4, !tbaa !7\l  %81 = add nuw nsw i32 %78, 1\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %82\l  store i32 %77, i32 addrspace(1)* %83, align 4, !tbaa !7\l  br label %84\l}"];
	Node0x4f4db50 -> Node0x4f4dbe0;
	Node0x4f4dbe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  ret void\l}"];
}
