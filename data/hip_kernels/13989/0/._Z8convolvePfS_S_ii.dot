digraph "CFG for '_Z8convolvePfS_S_ii' function" {
	label="CFG for '_Z8convolvePfS_S_ii' function";

	Node0x48b7190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = mul nsw i32 %7, %4\l  %9 = add nsw i32 %8, %6\l  %10 = sext i32 %9 to i64\l  %11 = getelementptr inbounds float, float addrspace(1)* %1, i64 %10\l  store float 0.000000e+00, float addrspace(1)* %11, align 4, !tbaa !5\l  %12 = icmp sgt i32 %3, 0\l  br i1 %12, label %13, label %42\l|{<s0>T|<s1>F}}"];
	Node0x48b7190:s0 -> Node0x48b9640;
	Node0x48b7190:s1 -> Node0x48b96d0;
	Node0x48b9640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%13:\l13:                                               \l  %14 = and i32 %3, 3\l  %15 = icmp ult i32 %3, 4\l  br i1 %15, label %18, label %16\l|{<s0>T|<s1>F}}"];
	Node0x48b9640:s0 -> Node0x48b9990;
	Node0x48b9640:s1 -> Node0x48b99e0;
	Node0x48b99e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%16:\l16:                                               \l  %17 = and i32 %3, -4\l  br label %43\l}"];
	Node0x48b99e0 -> Node0x48b8190;
	Node0x48b9990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%18:\l18:                                               \l  %19 = phi float [ 0.000000e+00, %13 ], [ %101, %100 ]\l  %20 = phi i32 [ 0, %13 ], [ %102, %100 ]\l  %21 = icmp eq i32 %14, 0\l  br i1 %21, label %42, label %22\l|{<s0>T|<s1>F}}"];
	Node0x48b9990:s0 -> Node0x48b96d0;
	Node0x48b9990:s1 -> Node0x48ba050;
	Node0x48ba050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = phi float [ %38, %37 ], [ %19, %18 ]\l  %24 = phi i32 [ %39, %37 ], [ %20, %18 ]\l  %25 = phi i32 [ %40, %37 ], [ 0, %18 ]\l  %26 = sub nsw i32 %9, %24\l  %27 = icmp sgt i32 %26, -1\l  br i1 %27, label %28, label %37\l|{<s0>T|<s1>F}}"];
	Node0x48ba050:s0 -> Node0x48ba690;
	Node0x48ba050:s1 -> Node0x48ba1c0;
	Node0x48ba690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%28:\l28:                                               \l  %29 = zext i32 %24 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %2, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !5\l  %32 = zext i32 %26 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !5\l  %35 = fmul contract float %31, %34\l  %36 = fadd contract float %23, %35\l  store float %36, float addrspace(1)* %11, align 4, !tbaa !5\l  br label %37\l}"];
	Node0x48ba690 -> Node0x48ba1c0;
	Node0x48ba1c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi float [ %23, %22 ], [ %36, %28 ]\l  %39 = add nuw nsw i32 %24, 1\l  %40 = add i32 %25, 1\l  %41 = icmp eq i32 %40, %14\l  br i1 %41, label %42, label %22, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x48ba1c0:s0 -> Node0x48b96d0;
	Node0x48ba1c0:s1 -> Node0x48ba050;
	Node0x48b96d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%42:\l42:                                               \l  ret void\l}"];
	Node0x48b8190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%43:\l43:                                               \l  %44 = phi float [ 0.000000e+00, %16 ], [ %101, %100 ]\l  %45 = phi i32 [ 0, %16 ], [ %102, %100 ]\l  %46 = phi i32 [ 0, %16 ], [ %103, %100 ]\l  %47 = sub nsw i32 %9, %45\l  %48 = icmp sgt i32 %47, -1\l  br i1 %48, label %49, label %58\l|{<s0>T|<s1>F}}"];
	Node0x48b8190:s0 -> Node0x48bbb40;
	Node0x48b8190:s1 -> Node0x48bbb90;
	Node0x48bbb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%49:\l49:                                               \l  %50 = zext i32 %45 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !5\l  %53 = zext i32 %47 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !5\l  %56 = fmul contract float %52, %55\l  %57 = fadd contract float %44, %56\l  store float %57, float addrspace(1)* %11, align 4, !tbaa !5\l  br label %58\l}"];
	Node0x48bbb40 -> Node0x48bbb90;
	Node0x48bbb90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%58:\l58:                                               \l  %59 = phi float [ %44, %43 ], [ %57, %49 ]\l  %60 = or i32 %45, 1\l  %61 = sub nsw i32 %9, %60\l  %62 = icmp sgt i32 %61, -1\l  br i1 %62, label %63, label %72\l|{<s0>T|<s1>F}}"];
	Node0x48bbb90:s0 -> Node0x48bc410;
	Node0x48bbb90:s1 -> Node0x48bc460;
	Node0x48bc410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%63:\l63:                                               \l  %64 = zext i32 %60 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %2, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !5\l  %67 = zext i32 %61 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !5\l  %70 = fmul contract float %66, %69\l  %71 = fadd contract float %59, %70\l  store float %71, float addrspace(1)* %11, align 4, !tbaa !5\l  br label %72\l}"];
	Node0x48bc410 -> Node0x48bc460;
	Node0x48bc460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%72:\l72:                                               \l  %73 = phi float [ %59, %58 ], [ %71, %63 ]\l  %74 = or i32 %45, 2\l  %75 = sub nsw i32 %9, %74\l  %76 = icmp sgt i32 %75, -1\l  br i1 %76, label %77, label %86\l|{<s0>T|<s1>F}}"];
	Node0x48bc460:s0 -> Node0x48bcf00;
	Node0x48bc460:s1 -> Node0x48bcf50;
	Node0x48bcf00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%77:\l77:                                               \l  %78 = zext i32 %74 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %2, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !5\l  %81 = zext i32 %75 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !5\l  %84 = fmul contract float %80, %83\l  %85 = fadd contract float %73, %84\l  store float %85, float addrspace(1)* %11, align 4, !tbaa !5\l  br label %86\l}"];
	Node0x48bcf00 -> Node0x48bcf50;
	Node0x48bcf50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%86:\l86:                                               \l  %87 = phi float [ %73, %72 ], [ %85, %77 ]\l  %88 = or i32 %45, 3\l  %89 = sub nsw i32 %9, %88\l  %90 = icmp sgt i32 %89, -1\l  br i1 %90, label %91, label %100\l|{<s0>T|<s1>F}}"];
	Node0x48bcf50:s0 -> Node0x48bd7d0;
	Node0x48bcf50:s1 -> Node0x48b9d60;
	Node0x48bd7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%91:\l91:                                               \l  %92 = zext i32 %88 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %2, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !5\l  %95 = zext i32 %89 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %0, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !5\l  %98 = fmul contract float %94, %97\l  %99 = fadd contract float %87, %98\l  store float %99, float addrspace(1)* %11, align 4, !tbaa !5\l  br label %100\l}"];
	Node0x48bd7d0 -> Node0x48b9d60;
	Node0x48b9d60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%100:\l100:                                              \l  %101 = phi float [ %87, %86 ], [ %99, %91 ]\l  %102 = add nuw nsw i32 %45, 4\l  %103 = add i32 %46, 4\l  %104 = icmp eq i32 %103, %17\l  br i1 %104, label %18, label %43, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x48b9d60:s0 -> Node0x48b9990;
	Node0x48b9d60:s1 -> Node0x48b8190;
}
