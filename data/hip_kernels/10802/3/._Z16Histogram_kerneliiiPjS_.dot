digraph "CFG for '_Z16Histogram_kerneliiiPjS_' function" {
	label="CFG for '_Z16Histogram_kerneliiiPjS_' function";

	Node0x48ca3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !7\l  %16 = udiv i32 %15, %12\l  %17 = mul i32 %16, %12\l  %18 = icmp ugt i32 %15, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = sub nsw i32 %1, %2\l  %22 = sdiv i32 %21, %20\l  %23 = mul nsw i32 %22, %6\l  %24 = add nsw i32 %23, %2\l  %25 = add nsw i32 %24, %22\l  %26 = icmp slt i32 %7, %22\l  br i1 %26, label %29, label %27\l|{<s0>T|<s1>F}}"];
	Node0x48ca3f0:s0 -> Node0x48cca90;
	Node0x48ca3f0:s1 -> Node0x48ccb20;
	Node0x48ccb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%27:\l27:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %28 = icmp slt i32 %7, %0\l  br i1 %28, label %35, label %34\l|{<s0>T|<s1>F}}"];
	Node0x48ccb20:s0 -> Node0x48ccf90;
	Node0x48ccb20:s1 -> Node0x48cd020;
	Node0x48cca90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %32, %29 ], [ %7, %5 ]\l  %31 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @l_mem, i32\l... 0, i32 %30\l  store i32 0, i32 addrspace(3)* %31, align 4, !tbaa !16\l  %32 = add nuw nsw i32 %30, %12\l  %33 = icmp slt i32 %32, %22\l  br i1 %33, label %29, label %27, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x48cca90:s0 -> Node0x48cca90;
	Node0x48cca90:s1 -> Node0x48ccb20;
	Node0x48cd020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%34:\l34:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %26, label %52, label %63\l|{<s0>T|<s1>F}}"];
	Node0x48cd020:s0 -> Node0x48cda80;
	Node0x48cd020:s1 -> Node0x48cdad0;
	Node0x48ccf90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i32 [ %50, %49 ], [ %7, %27 ]\l  %37 = zext i32 %36 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %37\l  %39 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %40 = mul i32 %39, %1\l  %41 = lshr i32 %40, 12\l  %42 = icmp uge i32 %41, %24\l  %43 = icmp ult i32 %41, %25\l  %44 = select i1 %42, i1 %43, i1 false\l  br i1 %44, label %45, label %49\l|{<s0>T|<s1>F}}"];
	Node0x48ccf90:s0 -> Node0x48cee50;
	Node0x48ccf90:s1 -> Node0x48cdc10;
	Node0x48cee50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%45:\l45:                                               \l  %46 = sub i32 %41, %24\l  %47 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @l_mem, i32\l... 0, i32 %46\l  %48 = atomicrmw add i32 addrspace(3)* %47, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  br label %49\l}"];
	Node0x48cee50 -> Node0x48cdc10;
	Node0x48cdc10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = add nuw nsw i32 %36, %12\l  %51 = icmp slt i32 %50, %0\l  br i1 %51, label %35, label %34, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x48cdc10:s0 -> Node0x48ccf90;
	Node0x48cdc10:s1 -> Node0x48cd020;
	Node0x48cda80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi i32 [ %61, %52 ], [ %7, %34 ]\l  %54 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @l_mem, i32\l... 0, i32 %53\l  %55 = load i32, i32 addrspace(3)* %54, align 4, !tbaa !16\l  %56 = add nsw i32 %53, %24\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %57\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !16\l  %60 = add i32 %59, %55\l  store i32 %60, i32 addrspace(1)* %58, align 4, !tbaa !16\l  %61 = add nuw nsw i32 %53, %12\l  %62 = icmp slt i32 %61, %22\l  br i1 %62, label %52, label %63, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x48cda80:s0 -> Node0x48cda80;
	Node0x48cda80:s1 -> Node0x48cdad0;
	Node0x48cdad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%63:\l63:                                               \l  ret void\l}"];
}
