digraph "CFG for '_Z29TgvThresholdingL1MaskedKernelP15HIP_vector_typeIfLj2EEPfS2_S2_S2_ffS2_S2_S2_iii' function" {
	label="CFG for '_Z29TgvThresholdingL1MaskedKernelP15HIP_vector_typeIfLj2EEPfS2_S2_S2_ffS2_S2_S2_iii' function";

	Node0x4715460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%13:\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %14, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %24 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 4, !range !4, !invariant.load !5\l  %27 = zext i16 %26 to i32\l  %28 = mul i32 %23, %27\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %30 = add i32 %28, %29\l  %31 = icmp slt i32 %22, %11\l  %32 = icmp slt i32 %30, %10\l  %33 = select i1 %31, i1 true, i1 %32\l  br i1 %33, label %34, label %170\l|{<s0>T|<s1>F}}"];
	Node0x4715460:s0 -> Node0x4719c10;
	Node0x4715460:s1 -> Node0x4719ca0;
	Node0x4719c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%34:\l34:                                               \l  %35 = mul nsw i32 %22, %12\l  %36 = add i32 %30, %35\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %4, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = fcmp contract oeq float %39, 0.000000e+00\l  br i1 %40, label %170, label %41\l|{<s0>T|<s1>F}}"];
	Node0x4719c10:s0 -> Node0x4719ca0;
	Node0x4719c10:s1 -> Node0x471ace0;
	Node0x471ace0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%41:\l41:                                               \l  %42 = add nsw i32 %30, 1\l  %43 = add nsw i32 %22, 1\l  %44 = mul nsw i32 %43, %12\l  %45 = add nsw i32 %44, %30\l  %46 = add nsw i32 %36, -1\l  %47 = add nsw i32 %22, -1\l  %48 = mul nsw i32 %47, %12\l  %49 = add nsw i32 %48, %30\l  %50 = icmp slt i32 %42, %10\l  br i1 %50, label %51, label %56\l|{<s0>T|<s1>F}}"];
	Node0x471ace0:s0 -> Node0x471b360;
	Node0x471ace0:s1 -> Node0x471b3b0;
	Node0x471b360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%51:\l51:                                               \l  %52 = add nsw i32 %42, %35\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %4, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  br label %56\l}"];
	Node0x471b360 -> Node0x471b3b0;
	Node0x471b3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%56:\l56:                                               \l  %57 = phi float [ %55, %51 ], [ 0.000000e+00, %41 ]\l  %58 = icmp slt i32 %30, 1\l  br i1 %58, label %63, label %59\l|{<s0>T|<s1>F}}"];
	Node0x471b3b0:s0 -> Node0x471bec0;
	Node0x471b3b0:s1 -> Node0x471bf10;
	Node0x471bf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%59:\l59:                                               \l  %60 = sext i32 %46 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %4, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  br label %63\l}"];
	Node0x471bf10 -> Node0x471bec0;
	Node0x471bec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%63:\l63:                                               \l  %64 = phi float [ %62, %59 ], [ 0.000000e+00, %56 ]\l  %65 = icmp slt i32 %43, %11\l  br i1 %65, label %66, label %70\l|{<s0>T|<s1>F}}"];
	Node0x471bec0:s0 -> Node0x4719a90;
	Node0x471bec0:s1 -> Node0x4719ae0;
	Node0x4719a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%66:\l66:                                               \l  %67 = sext i32 %45 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %4, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  br label %70\l}"];
	Node0x4719a90 -> Node0x4719ae0;
	Node0x4719ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%70:\l70:                                               \l  %71 = phi float [ %69, %66 ], [ 0.000000e+00, %63 ]\l  %72 = icmp slt i32 %22, 1\l  br i1 %72, label %77, label %73\l|{<s0>T|<s1>F}}"];
	Node0x4719ae0:s0 -> Node0x471caa0;
	Node0x4719ae0:s1 -> Node0x471caf0;
	Node0x471caf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%73:\l73:                                               \l  %74 = sext i32 %49 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %4, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  br label %77\l}"];
	Node0x471caf0 -> Node0x471caa0;
	Node0x471caa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%77:\l77:                                               \l  %78 = phi float [ %76, %73 ], [ 0.000000e+00, %70 ]\l  %79 = fcmp contract une float %64, 0.000000e+00\l  %80 = fcmp contract une float %57, 0.000000e+00\l  %81 = select i1 %79, i1 %80, i1 false\l  br i1 %81, label %82, label %89\l|{<s0>T|<s1>F}}"];
	Node0x471caa0:s0 -> Node0x471d0a0;
	Node0x471caa0:s1 -> Node0x471d0f0;
	Node0x471d0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%82:\l82:                                               \l  %83 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %37, i32 0, i32 0, i32 0, i64 0\l  %84 = load float, float addrspace(1)* %83, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %85 = sext i32 %46 to i64\l  %86 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %85, i32 0, i32 0, i32 0, i64 0\l  %87 = load float, float addrspace(1)* %86, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %88 = fsub contract float %84, %87\l  br label %99\l}"];
	Node0x471d0a0 -> Node0x471de50;
	Node0x471d0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%89:\l89:                                               \l  %90 = fcmp contract oeq float %57, 0.000000e+00\l  br i1 %90, label %91, label %96\l|{<s0>T|<s1>F}}"];
	Node0x471d0f0:s0 -> Node0x471dfe0;
	Node0x471d0f0:s1 -> Node0x471e030;
	Node0x471dfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%91:\l91:                                               \l  %92 = sext i32 %46 to i64\l  %93 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %92, i32 0, i32 0, i32 0, i64 0\l  %94 = load float, float addrspace(1)* %93, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %95 = fneg contract float %94\l  br label %99\l}"];
	Node0x471dfe0 -> Node0x471de50;
	Node0x471e030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%96:\l96:                                               \l  %97 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %37, i32 0, i32 0, i32 0, i64 0\l  %98 = load float, float addrspace(1)* %97, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %99\l}"];
	Node0x471e030 -> Node0x471de50;
	Node0x471de50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%99:\l99:                                               \l  %100 = phi float [ %88, %82 ], [ %95, %91 ], [ %98, %96 ]\l  %101 = fcmp contract une float %78, 0.000000e+00\l  %102 = fcmp contract une float %71, 0.000000e+00\l  %103 = select i1 %101, i1 %102, i1 false\l  br i1 %103, label %104, label %111\l|{<s0>T|<s1>F}}"];
	Node0x471de50:s0 -> Node0x471e8f0;
	Node0x471de50:s1 -> Node0x471e940;
	Node0x471e8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%104:\l104:                                              \l  %105 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %37, i32 0, i32 0, i32 0, i64 1\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %107 = sext i32 %49 to i64\l  %108 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %107, i32 0, i32 0, i32 0, i64 1\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %110 = fsub contract float %106, %109\l  br label %121\l}"];
	Node0x471e8f0 -> Node0x471ef10;
	Node0x471e940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%111:\l111:                                              \l  %112 = fcmp contract oeq float %71, 0.000000e+00\l  br i1 %112, label %113, label %118\l|{<s0>T|<s1>F}}"];
	Node0x471e940:s0 -> Node0x471f0a0;
	Node0x471e940:s1 -> Node0x471f0f0;
	Node0x471f0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%113:\l113:                                              \l  %114 = sext i32 %49 to i64\l  %115 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %114, i32 0, i32 0, i32 0, i64 1\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %117 = fneg contract float %116\l  br label %121\l}"];
	Node0x471f0a0 -> Node0x471ef10;
	Node0x471f0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%118:\l118:                                              \l  %119 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %37, i32 0, i32 0, i32 0, i64 1\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %121\l}"];
	Node0x471f0f0 -> Node0x471ef10;
	Node0x471ef10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%121:\l121:                                              \l  %122 = phi float [ %110, %104 ], [ %117, %113 ], [ %120, %118 ]\l  %123 = fadd contract float %100, %122\l  %124 = getelementptr inbounds float, float addrspace(1)* %7, i64 %37\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %126 = fcmp contract oeq float %125, 0.000000e+00\l  %127 = select i1 %126, float 1.000000e+00, float %125\l  %128 = fdiv contract float %6, %127\l  %129 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %131 = fmul contract float %123, %128\l  %132 = fadd contract float %130, %131\l  %133 = getelementptr inbounds float, float addrspace(1)* %8, i64 %37\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %135 = fsub contract float %132, %134\l  %136 = getelementptr inbounds float, float addrspace(1)* %2, i64 %37\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %138 = fmul contract float %137, %135\l  %139 = getelementptr inbounds float, float addrspace(1)* %3, i64 %37\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %141 = fadd contract float %140, %138\l  %142 = fmul contract float %128, %5\l  %143 = fmul contract float %137, %137\l  %144 = fmul contract float %142, %143\l  %145 = fneg contract float %5\l  %146 = fmul contract float %128, %145\l  %147 = fmul contract float %146, %143\l  %148 = fcmp contract ugt float %141, %144\l  %149 = fcmp contract ult float %141, %147\l  %150 = select i1 %148, i1 true, i1 %149\l  br i1 %150, label %156, label %151\l|{<s0>T|<s1>F}}"];
	Node0x471ef10:s0 -> Node0x471c6e0;
	Node0x471ef10:s1 -> Node0x4720d40;
	Node0x4720d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%151:\l151:                                              \l  %152 = fcmp contract oeq float %137, 0.000000e+00\l  br i1 %152, label %166, label %153\l|{<s0>T|<s1>F}}"];
	Node0x4720d40:s0 -> Node0x4720f10;
	Node0x4720d40:s1 -> Node0x4720f60;
	Node0x4720f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%153:\l153:                                              \l  %154 = fdiv contract float %141, %137\l  %155 = fsub contract float %135, %154\l  br label %166\l}"];
	Node0x4720f60 -> Node0x4720f10;
	Node0x471c6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%156:\l156:                                              \l  %157 = fcmp contract olt float %141, %147\l  br i1 %157, label %158, label %161\l|{<s0>T|<s1>F}}"];
	Node0x471c6e0:s0 -> Node0x47212c0;
	Node0x471c6e0:s1 -> Node0x4721310;
	Node0x47212c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%158:\l158:                                              \l  %159 = fmul contract float %137, %142\l  %160 = fadd contract float %159, %135\l  br label %166\l}"];
	Node0x47212c0 -> Node0x4720f10;
	Node0x4721310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%161:\l161:                                              \l  %162 = fcmp contract ogt float %141, %144\l  %163 = fmul contract float %137, %142\l  %164 = fsub contract float %135, %163\l  %165 = select i1 %162, float %164, float undef\l  br label %166\l}"];
	Node0x4721310 -> Node0x4720f10;
	Node0x4720f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%166:\l166:                                              \l  %167 = phi float [ %155, %153 ], [ %160, %158 ], [ %135, %151 ], [ %165,\l... %161 ]\l  %168 = fadd contract float %134, %167\l  %169 = getelementptr inbounds float, float addrspace(1)* %9, i64 %37\l  store float %168, float addrspace(1)* %169, align 4, !tbaa !7\l  br label %170\l}"];
	Node0x4720f10 -> Node0x4719ca0;
	Node0x4719ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%170:\l170:                                              \l  ret void\l}"];
}
