digraph "CFG for '_Z22TgvUpscaleMaskedKernelPfiiifS_' function" {
	label="CFG for '_Z22TgvUpscaleMaskedKernelPfiiifS_' function";

	Node0x4d08780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = add i32 %14, %7\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = add i32 %22, %16\l  %24 = icmp slt i32 %23, %2\l  %25 = icmp slt i32 %15, %1\l  %26 = select i1 %24, i1 true, i1 %25\l  br i1 %26, label %27, label %79\l|{<s0>T|<s1>F}}"];
	Node0x4d08780:s0 -> Node0x4d0bbc0;
	Node0x4d08780:s1 -> Node0x4d0bc50;
	Node0x4d0bbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %23, %3\l  %29 = add nsw i32 %28, %15\l  %30 = sitofp i32 %15 to float\l  %31 = fadd contract float %30, 5.000000e-01\l  %32 = sitofp i32 %1 to float\l  %33 = fdiv contract float %31, %32\l  %34 = sitofp i32 %23 to float\l  %35 = fadd contract float %34, 5.000000e-01\l  %36 = sitofp i32 %2 to float\l  %37 = fdiv contract float %35, %36\l  %38 = load %struct.__hip_texture*, %struct.__hip_texture* addrspace(1)*\l... getelementptr inbounds (%struct.texture, %struct.texture addrspace(1)*\l... @texCoarse, i64 0, i32 0, i32 11), align 8\l  %39 = bitcast %struct.__hip_texture* %38 to i32*\l  %40 = addrspacecast i32* %39 to i32 addrspace(4)*\l  %41 = getelementptr inbounds i32, i32 addrspace(4)* %40, i64 12\l  %42 = getelementptr inbounds i32, i32 addrspace(4)* %40, i64 10\l  %43 = load i32, i32 addrspace(4)* %42, align 4, !tbaa !7\l  %44 = uitofp i32 %43 to float\l  %45 = getelementptr inbounds i32, i32 addrspace(4)* %40, i64 2\l  %46 = load i32, i32 addrspace(4)* %45, align 4, !tbaa !7\l  %47 = lshr i32 %46, 14\l  %48 = and i32 %47, 16383\l  %49 = add nuw nsw i32 %48, 1\l  %50 = uitofp i32 %49 to float\l  %51 = load i32, i32 addrspace(4)* %41, align 4, !tbaa !7\l  %52 = and i32 %51, 32768\l  %53 = icmp eq i32 %52, 0\l  %54 = select i1 %53, float %44, float 1.000000e+00\l  %55 = select i1 %53, float %50, float 1.000000e+00\l  %56 = getelementptr inbounds i32, i32 addrspace(4)* %40, i64 14\l  %57 = load i32, i32 addrspace(4)* %56, align 4, !tbaa !7\l  %58 = and i32 %57, 1048576\l  %59 = icmp eq i32 %58, 0\l  %60 = bitcast i32 addrspace(4)* %41 to \<4 x i32\> addrspace(4)*\l  %61 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %60, align 16, !tbaa !11\l  %62 = bitcast %struct.__hip_texture* %38 to \<8 x i32\>*\l  %63 = addrspacecast \<8 x i32\>* %62 to \<8 x i32\> addrspace(4)*\l  %64 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %63, align 32, !tbaa !11\l  %65 = tail call float @llvm.amdgcn.rcp.f32(float %55)\l  %66 = fmul float %37, %55\l  %67 = tail call float @llvm.floor.f32(float %66)\l  %68 = fmul float %65, %67\l  %69 = select i1 %59, float %68, float %37\l  %70 = tail call float @llvm.amdgcn.rcp.f32(float %54)\l  %71 = fmul float %33, %54\l  %72 = tail call float @llvm.floor.f32(float %71)\l  %73 = fmul float %70, %72\l  %74 = select i1 %59, float %73, float %33\l  %75 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %74, float %69, \<8 x i32\> %64, \<4 x i32\> %61, i1 false, i32 0, i32 0)\l  %76 = fmul contract float %75, %4\l  %77 = sext i32 %29 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %5, i64 %77\l  store float %76, float addrspace(1)* %78, align 4, !tbaa !12\l  br label %79\l}"];
	Node0x4d0bbc0 -> Node0x4d0bc50;
	Node0x4d0bc50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  ret void\l}"];
}
