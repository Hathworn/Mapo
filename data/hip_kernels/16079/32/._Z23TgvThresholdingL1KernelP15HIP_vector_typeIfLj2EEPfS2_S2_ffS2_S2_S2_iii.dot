digraph "CFG for '_Z23TgvThresholdingL1KernelP15HIP_vector_typeIfLj2EEPfS2_S2_ffS2_S2_S2_iii' function" {
	label="CFG for '_Z23TgvThresholdingL1KernelP15HIP_vector_typeIfLj2EEPfS2_S2_ffS2_S2_S2_iii' function";

	Node0x4f43440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %23 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !4, !invariant.load !5\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %29 = add i32 %27, %28\l  %30 = sitofp i32 %9 to float\l  %31 = fmul contract float %30, 5.000000e-01\l  %32 = sitofp i32 %10 to float\l  %33 = fmul contract float %32, 5.000000e-01\l  %34 = sitofp i32 %21 to float\l  %35 = fsub contract float %34, %33\l  %36 = fmul contract float %35, %35\l  %37 = sitofp i32 %29 to float\l  %38 = fsub contract float %37, %31\l  %39 = fmul contract float %38, %38\l  %40 = fadd contract float %36, %39\l  %41 = fcmp olt float %40, 0x39F0000000000000\l  %42 = select i1 %41, float 0x41F0000000000000, float 1.000000e+00\l  %43 = fmul float %40, %42\l  %44 = tail call float @llvm.sqrt.f32(float %43)\l  %45 = bitcast float %44 to i32\l  %46 = add nsw i32 %45, -1\l  %47 = bitcast i32 %46 to float\l  %48 = add nsw i32 %45, 1\l  %49 = bitcast i32 %48 to float\l  %50 = icmp slt i32 %21, %10\l  %51 = icmp slt i32 %29, %9\l  %52 = select i1 %50, i1 %51, i1 false\l  br i1 %52, label %53, label %175\l|{<s0>T|<s1>F}}"];
	Node0x4f43440:s0 -> Node0x4f49300;
	Node0x4f43440:s1 -> Node0x4f49390;
	Node0x4f49300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%53:\l53:                                               \l  %54 = tail call i1 @llvm.amdgcn.class.f32(float %43, i32 608)\l  %55 = select i1 %41, float 0x3EF0000000000000, float 1.000000e+00\l  %56 = fneg float %49\l  %57 = tail call float @llvm.fma.f32(float %56, float %44, float %43)\l  %58 = fcmp ogt float %57, 0.000000e+00\l  %59 = fneg float %47\l  %60 = tail call float @llvm.fma.f32(float %59, float %44, float %43)\l  %61 = fcmp ole float %60, 0.000000e+00\l  %62 = select i1 %61, float %47, float %44\l  %63 = select i1 %58, float %49, float %62\l  %64 = fmul float %55, %63\l  %65 = select i1 %54, float %43, float %64\l  %66 = fdiv contract float %30, 0x40019999A0000000\l  %67 = mul nsw i32 %21, %11\l  %68 = add i32 %29, %67\l  %69 = fcmp contract ult float %65, %66\l  br i1 %69, label %72, label %70\l|{<s0>T|<s1>F}}"];
	Node0x4f49300:s0 -> Node0x4f4a550;
	Node0x4f49300:s1 -> Node0x4f4a5e0;
	Node0x4f4a5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%70:\l70:                                               \l  %71 = sext i32 %68 to i64\l  br label %171\l}"];
	Node0x4f4a5e0 -> Node0x4f4a790;
	Node0x4f4a550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%72:\l72:                                               \l  %73 = add nsw i32 %68, -1\l  %74 = add nsw i32 %21, -1\l  %75 = mul nsw i32 %74, %11\l  %76 = add nsw i32 %75, %29\l  %77 = icmp sgt i32 %29, 0\l  br i1 %77, label %78, label %86\l|{<s0>T|<s1>F}}"];
	Node0x4f4a550:s0 -> Node0x4f4ab20;
	Node0x4f4a550:s1 -> Node0x4f4ab70;
	Node0x4f4ab20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%78:\l78:                                               \l  %79 = sext i32 %68 to i64\l  %80 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %79, i32 0, i32 0, i32 0, i64 0\l  %81 = load float, float addrspace(1)* %80, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %82 = sext i32 %73 to i64\l  %83 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %82, i32 0, i32 0, i32 0, i64 0\l  %84 = load float, float addrspace(1)* %83, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %85 = fsub contract float %81, %84\l  br label %98\l}"];
	Node0x4f4ab20 -> Node0x4f4b940;
	Node0x4f4ab70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%86:\l86:                                               \l  %87 = add nsw i32 %9, -1\l  %88 = icmp eq i32 %29, %87\l  br i1 %88, label %89, label %94\l|{<s0>T|<s1>F}}"];
	Node0x4f4ab70:s0 -> Node0x4f4bb60;
	Node0x4f4ab70:s1 -> Node0x4f4bbb0;
	Node0x4f4bb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%89:\l89:                                               \l  %90 = sext i32 %73 to i64\l  %91 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %90, i32 0, i32 0, i32 0, i64 0\l  %92 = load float, float addrspace(1)* %91, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %93 = fneg contract float %92\l  br label %98\l}"];
	Node0x4f4bb60 -> Node0x4f4b940;
	Node0x4f4bbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%94:\l94:                                               \l  %95 = sext i32 %68 to i64\l  %96 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %95, i32 0, i32 0, i32 0, i64 0\l  %97 = load float, float addrspace(1)* %96, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  br label %98\l}"];
	Node0x4f4bbb0 -> Node0x4f4b940;
	Node0x4f4b940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%98:\l98:                                               \l  %99 = phi float [ %85, %78 ], [ %93, %89 ], [ %97, %94 ]\l  %100 = icmp sgt i32 %21, 0\l  br i1 %100, label %101, label %109\l|{<s0>T|<s1>F}}"];
	Node0x4f4b940:s0 -> Node0x4f4c3d0;
	Node0x4f4b940:s1 -> Node0x4f4c420;
	Node0x4f4c3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%101:\l101:                                              \l  %102 = sext i32 %68 to i64\l  %103 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %102, i32 0, i32 0, i32 0, i64 1\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %105 = sext i32 %76 to i64\l  %106 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %105, i32 0, i32 0, i32 0, i64 1\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %108 = fsub contract float %104, %107\l  br label %122\l}"];
	Node0x4f4c3d0 -> Node0x4f4ca60;
	Node0x4f4c420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%109:\l109:                                              \l  %110 = add nsw i32 %10, -1\l  %111 = icmp eq i32 %21, %110\l  br i1 %111, label %112, label %118\l|{<s0>T|<s1>F}}"];
	Node0x4f4c420:s0 -> Node0x4f4cc80;
	Node0x4f4c420:s1 -> Node0x4f4ccd0;
	Node0x4f4cc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%112:\l112:                                              \l  %113 = sext i32 %76 to i64\l  %114 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %113, i32 0, i32 0, i32 0, i64 1\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %116 = fneg contract float %115\l  %117 = sext i32 %68 to i64\l  br label %122\l}"];
	Node0x4f4cc80 -> Node0x4f4ca60;
	Node0x4f4ccd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%118:\l118:                                              \l  %119 = sext i32 %68 to i64\l  %120 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %119, i32 0, i32 0, i32 0, i64 1\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  br label %122\l}"];
	Node0x4f4ccd0 -> Node0x4f4ca60;
	Node0x4f4ca60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%122:\l122:                                              \l  %123 = phi i64 [ %117, %112 ], [ %119, %118 ], [ %102, %101 ]\l  %124 = phi float [ %116, %112 ], [ %121, %118 ], [ %108, %101 ]\l  %125 = fadd contract float %99, %124\l  %126 = getelementptr inbounds float, float addrspace(1)* %6, i64 %123\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %128 = fcmp contract oeq float %127, 0.000000e+00\l  %129 = select i1 %128, float 1.000000e+00, float %127\l  %130 = fdiv contract float %5, %129\l  %131 = getelementptr inbounds float, float addrspace(1)* %1, i64 %123\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %133 = fmul contract float %125, %130\l  %134 = fadd contract float %132, %133\l  %135 = getelementptr inbounds float, float addrspace(1)* %7, i64 %123\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %137 = fsub contract float %134, %136\l  %138 = getelementptr inbounds float, float addrspace(1)* %2, i64 %123\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %140 = fmul contract float %139, %137\l  %141 = getelementptr inbounds float, float addrspace(1)* %3, i64 %123\l  %142 = load float, float addrspace(1)* %141, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %143 = fadd contract float %142, %140\l  %144 = fmul contract float %130, %4\l  %145 = fmul contract float %139, %139\l  %146 = fmul contract float %144, %145\l  %147 = fneg contract float %4\l  %148 = fmul contract float %130, %147\l  %149 = fmul contract float %148, %145\l  %150 = fcmp contract ugt float %143, %146\l  %151 = fcmp contract ult float %143, %149\l  %152 = select i1 %150, i1 true, i1 %151\l  br i1 %152, label %158, label %153\l|{<s0>T|<s1>F}}"];
	Node0x4f4ca60:s0 -> Node0x4f4f170;
	Node0x4f4ca60:s1 -> Node0x4f4f200;
	Node0x4f4f200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%153:\l153:                                              \l  %154 = fcmp contract oeq float %139, 0.000000e+00\l  br i1 %154, label %168, label %155\l|{<s0>T|<s1>F}}"];
	Node0x4f4f200:s0 -> Node0x4f4f3d0;
	Node0x4f4f200:s1 -> Node0x4f4f420;
	Node0x4f4f420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%155:\l155:                                              \l  %156 = fdiv contract float %143, %139\l  %157 = fsub contract float %137, %156\l  br label %168\l}"];
	Node0x4f4f420 -> Node0x4f4f3d0;
	Node0x4f4f170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%158:\l158:                                              \l  %159 = fcmp contract olt float %143, %149\l  br i1 %159, label %160, label %163\l|{<s0>T|<s1>F}}"];
	Node0x4f4f170:s0 -> Node0x4f4f780;
	Node0x4f4f170:s1 -> Node0x4f4f7d0;
	Node0x4f4f780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%160:\l160:                                              \l  %161 = fmul contract float %139, %144\l  %162 = fadd contract float %161, %137\l  br label %168\l}"];
	Node0x4f4f780 -> Node0x4f4f3d0;
	Node0x4f4f7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%163:\l163:                                              \l  %164 = fcmp contract ogt float %143, %146\l  %165 = fmul contract float %139, %144\l  %166 = fsub contract float %137, %165\l  %167 = select i1 %164, float %166, float undef\l  br label %168\l}"];
	Node0x4f4f7d0 -> Node0x4f4f3d0;
	Node0x4f4f3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%168:\l168:                                              \l  %169 = phi float [ %157, %155 ], [ %162, %160 ], [ %137, %153 ], [ %167,\l... %163 ]\l  %170 = fadd contract float %136, %169\l  br label %171\l}"];
	Node0x4f4f3d0 -> Node0x4f4a790;
	Node0x4f4a790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%171:\l171:                                              \l  %172 = phi i64 [ %71, %70 ], [ %123, %168 ]\l  %173 = phi float [ 0.000000e+00, %70 ], [ %170, %168 ]\l  %174 = getelementptr inbounds float, float addrspace(1)* %8, i64 %172\l  store float %173, float addrspace(1)* %174, align 4, !tbaa !10\l  br label %175\l}"];
	Node0x4f4a790 -> Node0x4f49390;
	Node0x4f49390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%175:\l175:                                              \l  ret void\l}"];
}
