digraph "CFG for '_Z16TgvSolveTpKernelPfS_S_P15HIP_vector_typeIfLj2EES2_iii' function" {
	label="CFG for '_Z16TgvSolveTpKernelPfS_S_P15HIP_vector_typeIfLj2EES2_iii' function";

	Node0x583b400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 2, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %17, %6\l  %27 = icmp slt i32 %25, %5\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %54\l|{<s0>T|<s1>F}}"];
	Node0x583b400:s0 -> Node0x583edf0;
	Node0x583b400:s1 -> Node0x583ee80;
	Node0x583edf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %17, %7\l  %31 = add nsw i32 %25, %30\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %35 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %3, i64 %32, i32 0, i32 0, i32 0, i64 0\l  %36 = load float, float addrspace(1)* %35, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %37 = fmul contract float %34, %36\l  %38 = getelementptr inbounds float, float addrspace(1)* %2, i64 %32\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %3, i64 %32, i32 0, i32 0, i32 0, i64 1\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %42 = fmul contract float %39, %41\l  %43 = fadd contract float %37, %42\l  %44 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %32, i32 0, i32 0, i32 0, i64 0\l  store float %43, float addrspace(1)* %44, align 8, !tbaa !11\l  %45 = load float, float addrspace(1)* %38, align 4, !tbaa !7\l  %46 = load float, float addrspace(1)* %35, align 8, !tbaa !11\l  %47 = fmul contract float %45, %46\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7\l  %50 = load float, float addrspace(1)* %40, align 4, !tbaa !11\l  %51 = fmul contract float %49, %50\l  %52 = fadd contract float %47, %51\l  %53 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %32, i32 0, i32 0, i32 0, i64 1\l  store float %52, float addrspace(1)* %53, align 4, !tbaa !11\l  br label %54\l}"];
	Node0x583edf0 -> Node0x583ee80;
	Node0x583ee80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  ret void\l}"];
}
