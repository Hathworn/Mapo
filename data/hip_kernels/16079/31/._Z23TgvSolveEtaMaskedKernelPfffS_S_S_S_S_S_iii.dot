digraph "CFG for '_Z23TgvSolveEtaMaskedKernelPfffS_S_S_S_S_S_iii' function" {
	label="CFG for '_Z23TgvSolveEtaMaskedKernelPfffS_S_S_S_S_S_iii' function";

	Node0x4cff110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %23 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !4, !invariant.load !5\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %29 = add i32 %27, %28\l  %30 = icmp slt i32 %21, %10\l  %31 = icmp slt i32 %29, %9\l  %32 = select i1 %30, i1 true, i1 %31\l  br i1 %32, label %33, label %73\l|{<s0>T|<s1>F}}"];
	Node0x4cff110:s0 -> Node0x4d008a0;
	Node0x4cff110:s1 -> Node0x4d00930;
	Node0x4d008a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%33:\l33:                                               \l  %34 = mul nsw i32 %21, %11\l  %35 = add nsw i32 %29, %34\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = fcmp contract oeq float %38, 0.000000e+00\l  br i1 %39, label %73, label %40\l|{<s0>T|<s1>F}}"];
	Node0x4d008a0:s0 -> Node0x4d00930;
	Node0x4d008a0:s1 -> Node0x4d04940;
	Node0x4d04940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%40:\l40:                                               \l  %41 = getelementptr inbounds float, float addrspace(1)* %3, i64 %36\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = getelementptr inbounds float, float addrspace(1)* %4, i64 %36\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = getelementptr inbounds float, float addrspace(1)* %5, i64 %36\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = fmul contract float %42, %42\l  %48 = fmul contract float %44, %44\l  %49 = fadd contract float %47, %48\l  %50 = fmul contract float %46, 2.000000e+00\l  %51 = fmul contract float %46, %50\l  %52 = fadd contract float %49, %51\l  %53 = fadd contract float %42, %46\l  %54 = fmul contract float %53, %53\l  %55 = fadd contract float %54, %52\l  %56 = fadd contract float %44, %46\l  %57 = fmul contract float %56, %56\l  %58 = fadd contract float %57, %55\l  %59 = fmul contract float %2, %2\l  %60 = fmul contract float %59, %58\l  %61 = getelementptr inbounds float, float addrspace(1)* %6, i64 %36\l  store float %60, float addrspace(1)* %61, align 4, !tbaa !7\l  %62 = fmul contract float %46, %46\l  %63 = fadd contract float %48, %62\l  %64 = fmul contract float %59, %63\l  %65 = fmul contract float %1, 4.000000e+00\l  %66 = fmul contract float %65, %1\l  %67 = fadd contract float %66, %64\l  %68 = getelementptr inbounds float, float addrspace(1)* %7, i64 %36\l  store float %67, float addrspace(1)* %68, align 4, !tbaa !7\l  %69 = fadd contract float %47, %62\l  %70 = fmul contract float %59, %69\l  %71 = fadd contract float %66, %70\l  %72 = getelementptr inbounds float, float addrspace(1)* %8, i64 %36\l  store float %71, float addrspace(1)* %72, align 4, !tbaa !7\l  br label %73\l}"];
	Node0x4d04940 -> Node0x4d00930;
	Node0x4d00930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  ret void\l}"];
}
