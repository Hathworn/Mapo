digraph "CFG for '_Z22TgvSolveTpMaskedKernelPfS_S_S_P15HIP_vector_typeIfLj2EES2_iii' function" {
	label="CFG for '_Z22TgvSolveTpMaskedKernelPfS_S_S_P15HIP_vector_typeIfLj2EES2_iii' function";

	Node0x5681a00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 2, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %7\l  %28 = icmp slt i32 %26, %6\l  %29 = select i1 %27, i1 true, i1 %28\l  br i1 %29, label %30, label %59\l|{<s0>T|<s1>F}}"];
	Node0x5681a00:s0 -> Node0x5685fd0;
	Node0x5681a00:s1 -> Node0x5686060;
	Node0x5685fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%30:\l30:                                               \l  %31 = mul nsw i32 %18, %8\l  %32 = add nsw i32 %26, %31\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = fcmp contract oeq float %35, 0.000000e+00\l  br i1 %36, label %59, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5685fd0:s0 -> Node0x5686060;
	Node0x5685fd0:s1 -> Node0x56871d0;
	Node0x56871d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%37:\l37:                                               \l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %33, i32 0, i32 0, i32 0, i64 0\l  %41 = load float, float addrspace(1)* %40, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %42 = fmul contract float %39, %41\l  %43 = getelementptr inbounds float, float addrspace(1)* %3, i64 %33\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %33, i32 0, i32 0, i32 0, i64 1\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %47 = fmul contract float %44, %46\l  %48 = fadd contract float %42, %47\l  %49 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %5, i64 %33, i32 0, i32 0, i32 0, i64 0\l  store float %48, float addrspace(1)* %49, align 8, !tbaa !11\l  %50 = load float, float addrspace(1)* %43, align 4, !tbaa !7\l  %51 = load float, float addrspace(1)* %40, align 8, !tbaa !11\l  %52 = fmul contract float %50, %51\l  %53 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  %55 = load float, float addrspace(1)* %45, align 4, !tbaa !11\l  %56 = fmul contract float %54, %55\l  %57 = fadd contract float %52, %56\l  %58 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %5, i64 %33, i32 0, i32 0, i32 0, i64 1\l  store float %57, float addrspace(1)* %58, align 4, !tbaa !11\l  br label %59\l}"];
	Node0x56871d0 -> Node0x5686060;
	Node0x5686060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  ret void\l}"];
}
