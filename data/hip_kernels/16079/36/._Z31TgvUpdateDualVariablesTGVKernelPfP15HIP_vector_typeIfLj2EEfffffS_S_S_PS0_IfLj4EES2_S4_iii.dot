digraph "CFG for '_Z31TgvUpdateDualVariablesTGVKernelPfP15HIP_vector_typeIfLj2EEfffffS_S_S_PS0_IfLj4EES2_S4_iii' function" {
	label="CFG for '_Z31TgvUpdateDualVariablesTGVKernelPfP15HIP_vector_typeIfLj2EEfffffS_S_S_PS0_IfLj4EES2_S4_iii' function";

	Node0x582d440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr i8, i8 addrspace(4)* %18, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %17, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %27 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*\l  %29 = load i16, i16 addrspace(4)* %28, align 4, !range !4, !invariant.load !5\l  %30 = zext i16 %29 to i32\l  %31 = mul i32 %26, %30\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %33 = add i32 %31, %32\l  %34 = sitofp i32 %13 to float\l  %35 = fmul contract float %34, 5.000000e-01\l  %36 = sitofp i32 %14 to float\l  %37 = fmul contract float %36, 5.000000e-01\l  %38 = sitofp i32 %25 to float\l  %39 = fsub contract float %38, %37\l  %40 = fmul contract float %39, %39\l  %41 = sitofp i32 %33 to float\l  %42 = fsub contract float %41, %35\l  %43 = fmul contract float %42, %42\l  %44 = fadd contract float %40, %43\l  %45 = fcmp olt float %44, 0x39F0000000000000\l  %46 = select i1 %45, float 0x41F0000000000000, float 1.000000e+00\l  %47 = fmul float %44, %46\l  %48 = tail call float @llvm.sqrt.f32(float %47)\l  %49 = bitcast float %48 to i32\l  %50 = add nsw i32 %49, -1\l  %51 = bitcast i32 %50 to float\l  %52 = add nsw i32 %49, 1\l  %53 = bitcast i32 %52 to float\l  %54 = icmp slt i32 %25, %14\l  %55 = icmp slt i32 %33, %13\l  %56 = select i1 %54, i1 %55, i1 false\l  br i1 %56, label %57, label %335\l|{<s0>T|<s1>F}}"];
	Node0x582d440:s0 -> Node0x58333a0;
	Node0x582d440:s1 -> Node0x5833430;
	Node0x58333a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%57:\l57:                                               \l  %58 = tail call i1 @llvm.amdgcn.class.f32(float %47, i32 608)\l  %59 = select i1 %45, float 0x3EF0000000000000, float 1.000000e+00\l  %60 = fneg float %53\l  %61 = tail call float @llvm.fma.f32(float %60, float %48, float %47)\l  %62 = fcmp ogt float %61, 0.000000e+00\l  %63 = fneg float %51\l  %64 = tail call float @llvm.fma.f32(float %63, float %48, float %47)\l  %65 = fcmp ole float %64, 0.000000e+00\l  %66 = select i1 %65, float %51, float %48\l  %67 = select i1 %62, float %53, float %66\l  %68 = fmul float %59, %67\l  %69 = select i1 %58, float %47, float %68\l  %70 = fdiv contract float %34, 0x40019999A0000000\l  %71 = mul nsw i32 %25, %15\l  %72 = add i32 %33, %71\l  %73 = fcmp contract ult float %69, %70\l  br i1 %73, label %81, label %74\l|{<s0>T|<s1>F}}"];
	Node0x58333a0:s0 -> Node0x5834610;
	Node0x58333a0:s1 -> Node0x58346a0;
	Node0x58346a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%74:\l74:                                               \l  %75 = sext i32 %72 to i64\l  %76 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %75\l  %77 = bitcast %struct.HIP_vector_type addrspace(1)* %76 to i32 addrspace(1)*\l  store i32 0, i32 addrspace(1)* %77, align 8\l  %78 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %75, i32 0, i32 0, i32 0, i64 1\l  %79 = bitcast float addrspace(1)* %78 to i32 addrspace(1)*\l  store i32 0, i32 addrspace(1)* %79, align 4\l  %80 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %12, i64 %75, i32 0, i32 0, i32 0\l  store \<4 x float\> zeroinitializer, \<4 x float\> addrspace(1)* %80, align 16\l  br label %335\l}"];
	Node0x58346a0 -> Node0x5833430;
	Node0x5834610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%81:\l81:                                               \l  %82 = add nsw i32 %33, 1\l  %83 = add nsw i32 %82, %71\l  %84 = add nsw i32 %25, 1\l  %85 = mul nsw i32 %84, %15\l  %86 = add nsw i32 %85, %33\l  %87 = add nsw i32 %72, -1\l  %88 = add nsw i32 %25, -1\l  %89 = mul nsw i32 %88, %15\l  %90 = add nsw i32 %89, %33\l  %91 = icmp slt i32 %82, %13\l  br i1 %91, label %92, label %100\l|{<s0>T|<s1>F}}"];
	Node0x5834610:s0 -> Node0x58357c0;
	Node0x5834610:s1 -> Node0x5835810;
	Node0x58357c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%92:\l92:                                               \l  %93 = sext i32 %83 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %0, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %96 = sext i32 %72 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %0, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %99 = fsub contract float %95, %98\l  br label %108\l}"];
	Node0x58357c0 -> Node0x58364a0;
	Node0x5835810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%100:\l100:                                              \l  %101 = sext i32 %72 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %0, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %104 = sext i32 %87 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %0, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %107 = fsub contract float %103, %106\l  br label %108\l}"];
	Node0x5835810 -> Node0x58364a0;
	Node0x58364a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%108:\l108:                                              \l  %109 = phi i64 [ %101, %100 ], [ %96, %92 ]\l  %110 = phi float [ %107, %100 ], [ %99, %92 ]\l  %111 = phi float [ %103, %100 ], [ %98, %92 ]\l  %112 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %109, i32 0, i32 0, i32 0, i64 0\l  %113 = load float, float addrspace(1)* %112, align 8, !tbaa !11\l  %114 = fsub contract float %110, %113\l  %115 = icmp slt i32 %84, %14\l  br i1 %115, label %116, label %186\l|{<s0>T|<s1>F}}"];
	Node0x58364a0:s0 -> Node0x5837000;
	Node0x58364a0:s1 -> Node0x5837090;
	Node0x5837000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%116:\l116:                                              \l  %117 = sext i32 %86 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %0, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %120 = fsub contract float %119, %111\l  %121 = sext i32 %72 to i64\l  %122 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %121, i32 0, i32 0, i32 0, i64 1\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !11\l  %124 = fsub contract float %120, %123\l  %125 = getelementptr inbounds float, float addrspace(1)* %7, i64 %121\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %127 = fmul contract float %114, %126\l  %128 = getelementptr inbounds float, float addrspace(1)* %9, i64 %121\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %130 = fmul contract float %124, %129\l  %131 = fadd contract float %127, %130\l  %132 = fmul contract float %114, %129\l  %133 = getelementptr inbounds float, float addrspace(1)* %8, i64 %121\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %135 = fmul contract float %124, %134\l  %136 = fadd contract float %132, %135\l  %137 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %121, i32 0, i32 0, i32 0, i64\l... 0\l  %138 = load float, float addrspace(1)* %137, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %139 = fmul contract float %3, %4\l  %140 = fdiv contract float %139, %5\l  %141 = fmul contract float %140, %131\l  %142 = fadd contract float %138, %141\l  %143 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %121, i32 0, i32 0, i32 0, i64\l... 1\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %145 = fmul contract float %140, %136\l  %146 = fadd contract float %144, %145\l  %147 = fmul contract float %142, %142\l  %148 = fmul contract float %146, %146\l  %149 = fadd contract float %147, %148\l  %150 = fcmp olt float %149, 0x39F0000000000000\l  %151 = select i1 %150, float 0x41F0000000000000, float 1.000000e+00\l  %152 = fmul float %149, %151\l  %153 = tail call float @llvm.sqrt.f32(float %152)\l  %154 = bitcast float %153 to i32\l  %155 = add nsw i32 %154, -1\l  %156 = bitcast i32 %155 to float\l  %157 = add nsw i32 %154, 1\l  %158 = bitcast i32 %157 to float\l  %159 = tail call i1 @llvm.amdgcn.class.f32(float %152, i32 608)\l  %160 = select i1 %150, float 0x3EF0000000000000, float 1.000000e+00\l  %161 = fneg float %158\l  %162 = tail call float @llvm.fma.f32(float %161, float %153, float %152)\l  %163 = fcmp ogt float %162, 0.000000e+00\l  %164 = fneg float %156\l  %165 = tail call float @llvm.fma.f32(float %164, float %153, float %152)\l  %166 = fcmp ole float %165, 0.000000e+00\l  %167 = select i1 %166, float %156, float %153\l  %168 = select i1 %163, float %158, float %167\l  %169 = fmul float %160, %168\l  %170 = select i1 %159, float %152, float %169\l  %171 = fcmp contract olt float %170, 1.000000e+00\l  %172 = select i1 %171, float 1.000000e+00, float %170\l  %173 = fdiv contract float %142, %172\l  store float %173, float addrspace(1)* %137, align 8, !tbaa !11\l  %174 = fdiv contract float %146, %172\l  store float %174, float addrspace(1)* %143, align 4, !tbaa !11\l  %175 = sext i32 %87 to i64\l  %176 = sext i32 %83 to i64\l  %177 = select i1 %91, i64 %121, i64 %175\l  %178 = select i1 %91, i64 %176, i64 %121\l  %179 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %178, i32 0, i32 0, i32 0, i64 0\l  %180 = load float, float addrspace(1)* %179, align 8, !tbaa !11\l  %181 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %177, i32 0, i32 0, i32 0, i64 0\l  %182 = load float, float addrspace(1)* %181, align 8, !tbaa !11\l  %183 = fsub contract float %180, %182\l  %184 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %10, i64 %121, i32 0, i32 0, i32 0,\l... i64 0\l  store float %183, float addrspace(1)* %184, align 16\l  %185 = sext i32 %86 to i64\l  br label %256\l}"];
	Node0x5837000 -> Node0x583aa60;
	Node0x5837090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%186:\l186:                                              \l  %187 = sext i32 %90 to i64\l  %188 = getelementptr inbounds float, float addrspace(1)* %0, i64 %187\l  %189 = load float, float addrspace(1)* %188, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %190 = fsub contract float %111, %189\l  %191 = sext i32 %72 to i64\l  %192 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %191, i32 0, i32 0, i32 0, i64 1\l  %193 = load float, float addrspace(1)* %192, align 4, !tbaa !11\l  %194 = fsub contract float %190, %193\l  %195 = getelementptr inbounds float, float addrspace(1)* %7, i64 %191\l  %196 = load float, float addrspace(1)* %195, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %197 = fmul contract float %114, %196\l  %198 = getelementptr inbounds float, float addrspace(1)* %9, i64 %191\l  %199 = load float, float addrspace(1)* %198, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %200 = fmul contract float %194, %199\l  %201 = fadd contract float %197, %200\l  %202 = fmul contract float %114, %199\l  %203 = getelementptr inbounds float, float addrspace(1)* %8, i64 %191\l  %204 = load float, float addrspace(1)* %203, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %205 = fmul contract float %194, %204\l  %206 = fadd contract float %202, %205\l  %207 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %191, i32 0, i32 0, i32 0, i64\l... 0\l  %208 = load float, float addrspace(1)* %207, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %209 = fmul contract float %3, %4\l  %210 = fdiv contract float %209, %5\l  %211 = fmul contract float %210, %201\l  %212 = fadd contract float %208, %211\l  %213 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %11, i64 %191, i32 0, i32 0, i32 0, i64\l... 1\l  %214 = load float, float addrspace(1)* %213, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %215 = fmul contract float %210, %206\l  %216 = fadd contract float %214, %215\l  %217 = fmul contract float %212, %212\l  %218 = fmul contract float %216, %216\l  %219 = fadd contract float %217, %218\l  %220 = fcmp olt float %219, 0x39F0000000000000\l  %221 = select i1 %220, float 0x41F0000000000000, float 1.000000e+00\l  %222 = fmul float %219, %221\l  %223 = tail call float @llvm.sqrt.f32(float %222)\l  %224 = bitcast float %223 to i32\l  %225 = add nsw i32 %224, -1\l  %226 = bitcast i32 %225 to float\l  %227 = add nsw i32 %224, 1\l  %228 = bitcast i32 %227 to float\l  %229 = tail call i1 @llvm.amdgcn.class.f32(float %222, i32 608)\l  %230 = select i1 %220, float 0x3EF0000000000000, float 1.000000e+00\l  %231 = fneg float %228\l  %232 = tail call float @llvm.fma.f32(float %231, float %223, float %222)\l  %233 = fcmp ogt float %232, 0.000000e+00\l  %234 = fneg float %226\l  %235 = tail call float @llvm.fma.f32(float %234, float %223, float %222)\l  %236 = fcmp ole float %235, 0.000000e+00\l  %237 = select i1 %236, float %226, float %223\l  %238 = select i1 %233, float %228, float %237\l  %239 = fmul float %230, %238\l  %240 = select i1 %229, float %222, float %239\l  %241 = fcmp contract olt float %240, 1.000000e+00\l  %242 = select i1 %241, float 1.000000e+00, float %240\l  %243 = fdiv contract float %212, %242\l  store float %243, float addrspace(1)* %207, align 8, !tbaa !11\l  %244 = fdiv contract float %216, %242\l  store float %244, float addrspace(1)* %213, align 4, !tbaa !11\l  %245 = sext i32 %87 to i64\l  %246 = sext i32 %83 to i64\l  %247 = select i1 %91, i64 %191, i64 %245\l  %248 = select i1 %91, i64 %246, i64 %191\l  %249 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %248, i32 0, i32 0, i32 0, i64 0\l  %250 = load float, float addrspace(1)* %249, align 8, !tbaa !11\l  %251 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %247, i32 0, i32 0, i32 0, i64 0\l  %252 = load float, float addrspace(1)* %251, align 8, !tbaa !11\l  %253 = fsub contract float %250, %252\l  %254 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %10, i64 %191, i32 0, i32 0, i32 0,\l... i64 0\l  store float %253, float addrspace(1)* %254, align 16\l  %255 = sext i32 %90 to i64\l  br label %256\l}"];
	Node0x5837090 -> Node0x583aa60;
	Node0x583aa60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%256:\l256:                                              \l  %257 = phi float [ %183, %116 ], [ %253, %186 ]\l  %258 = phi i64 [ %121, %116 ], [ %191, %186 ]\l  %259 = phi i64 [ %121, %116 ], [ %255, %186 ]\l  %260 = phi i64 [ %185, %116 ], [ %191, %186 ]\l  %261 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %260, i32 0, i32 0, i32 0, i64 1\l  %262 = load float, float addrspace(1)* %261, align 4, !tbaa !11\l  %263 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %259, i32 0, i32 0, i32 0, i64 1\l  %264 = load float, float addrspace(1)* %263, align 4, !tbaa !11\l  %265 = fsub contract float %262, %264\l  %266 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %10, i64 %258, i32 0, i32 0, i32 0,\l... i64 1\l  store float %265, float addrspace(1)* %266, align 4, !tbaa !11\l  %267 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %260, i32 0, i32 0, i32 0, i64 0\l  %268 = load float, float addrspace(1)* %267, align 8, !tbaa !11\l  %269 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %259, i32 0, i32 0, i32 0, i64 0\l  %270 = load float, float addrspace(1)* %269, align 8, !tbaa !11\l  %271 = fsub contract float %268, %270\l  %272 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %10, i64 %258, i32 0, i32 0, i32 0,\l... i64 2\l  store float %271, float addrspace(1)* %272, align 8\l  %273 = sext i32 %87 to i64\l  %274 = sext i32 %83 to i64\l  %275 = select i1 %91, i64 %258, i64 %273\l  %276 = select i1 %91, i64 %274, i64 %258\l  %277 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %276, i32 0, i32 0, i32 0, i64 1\l  %278 = load float, float addrspace(1)* %277, align 4, !tbaa !11\l  %279 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %275, i32 0, i32 0, i32 0, i64 1\l  %280 = load float, float addrspace(1)* %279, align 4, !tbaa !11\l  %281 = fsub contract float %278, %280\l  %282 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %10, i64 %258, i32 0, i32 0, i32 0,\l... i64 3\l  store float %281, float addrspace(1)* %282, align 4\l  %283 = fmul contract float %2, %4\l  %284 = fdiv contract float %283, %6\l  %285 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %12, i64 %258, i32 0, i32 0, i32 0,\l... i64 0\l  %286 = load float, float addrspace(1)* %285, align 16, !tbaa !11\l  %287 = fmul contract float %284, %257\l  %288 = fadd contract float %286, %287\l  %289 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %12, i64 %258, i32 0, i32 0, i32 0,\l... i64 1\l  %290 = load float, float addrspace(1)* %289, align 4, !tbaa !11\l  %291 = fmul contract float %284, %265\l  %292 = fadd contract float %290, %291\l  %293 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %12, i64 %258, i32 0, i32 0, i32 0,\l... i64 2\l  %294 = load float, float addrspace(1)* %293, align 8, !tbaa !11\l  %295 = fmul contract float %284, %271\l  %296 = fadd contract float %294, %295\l  %297 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %12, i64 %258, i32 0, i32 0, i32 0,\l... i64 3\l  %298 = load float, float addrspace(1)* %297, align 4, !tbaa !11\l  %299 = fmul contract float %284, %281\l  %300 = fadd contract float %298, %299\l  %301 = fmul contract float %288, %288\l  %302 = fmul contract float %292, %292\l  %303 = fadd contract float %301, %302\l  %304 = fmul contract float %296, %296\l  %305 = fadd contract float %303, %304\l  %306 = fmul contract float %300, %300\l  %307 = fadd contract float %305, %306\l  %308 = fcmp olt float %307, 0x39F0000000000000\l  %309 = select i1 %308, float 0x41F0000000000000, float 1.000000e+00\l  %310 = fmul float %307, %309\l  %311 = tail call float @llvm.sqrt.f32(float %310)\l  %312 = bitcast float %311 to i32\l  %313 = add nsw i32 %312, -1\l  %314 = bitcast i32 %313 to float\l  %315 = add nsw i32 %312, 1\l  %316 = bitcast i32 %315 to float\l  %317 = tail call i1 @llvm.amdgcn.class.f32(float %310, i32 608)\l  %318 = select i1 %308, float 0x3EF0000000000000, float 1.000000e+00\l  %319 = fneg float %316\l  %320 = tail call float @llvm.fma.f32(float %319, float %311, float %310)\l  %321 = fcmp ogt float %320, 0.000000e+00\l  %322 = fneg float %314\l  %323 = tail call float @llvm.fma.f32(float %322, float %311, float %310)\l  %324 = fcmp ole float %323, 0.000000e+00\l  %325 = select i1 %324, float %314, float %311\l  %326 = select i1 %321, float %316, float %325\l  %327 = fmul float %318, %326\l  %328 = select i1 %317, float %310, float %327\l  %329 = fcmp contract olt float %328, 1.000000e+00\l  %330 = select i1 %329, float 1.000000e+00, float %328\l  %331 = fdiv contract float %288, %330\l  store float %331, float addrspace(1)* %285, align 16, !tbaa !11\l  %332 = fdiv contract float %292, %330\l  store float %332, float addrspace(1)* %289, align 4, !tbaa !11\l  %333 = fdiv contract float %296, %330\l  store float %333, float addrspace(1)* %293, align 8, !tbaa !11\l  %334 = fdiv contract float %300, %330\l  store float %334, float addrspace(1)* %297, align 4, !tbaa !11\l  br label %335\l}"];
	Node0x583aa60 -> Node0x5833430;
	Node0x5833430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%335:\l335:                                              \l  ret void\l}"];
}
