digraph "CFG for '_Z39TgvComputeOpticalFlowVectorMaskedKernelPKfPK15HIP_vector_typeIfLj2EEPfiiiPS2_' function" {
	label="CFG for '_Z39TgvComputeOpticalFlowVectorMaskedKernelPKfPK15HIP_vector_typeIfLj2EEPfiiiPS2_' function";

	Node0x4c642e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = add i32 %15, %8\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = add i32 %23, %17\l  %25 = icmp slt i32 %24, %4\l  %26 = icmp slt i32 %16, %3\l  %27 = select i1 %25, i1 true, i1 %26\l  br i1 %27, label %28, label %46\l|{<s0>T|<s1>F}}"];
	Node0x4c642e0:s0 -> Node0x4c67d00;
	Node0x4c642e0:s1 -> Node0x4c67d90;
	Node0x4c67d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%28:\l28:                                               \l  %29 = mul nsw i32 %24, %5\l  %30 = add nsw i32 %29, %16\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %2, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %34 = fcmp contract oeq float %33, 0.000000e+00\l  br i1 %34, label %46, label %35\l|{<s0>T|<s1>F}}"];
	Node0x4c67d00:s0 -> Node0x4c67d90;
	Node0x4c67d00:s1 -> Node0x4c68f30;
	Node0x4c68f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%35:\l35:                                               \l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %38 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %31, i32 0, i32 0, i32 0, i64 0\l  %39 = load float, float addrspace(1)* %38, align 8, !amdgpu.noclobber !6\l  %40 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %31, i32 0, i32 0, i32 0, i64 1\l  %41 = load float, float addrspace(1)* %40, align 4, !amdgpu.noclobber !6\l  %42 = fmul contract float %37, %39\l  %43 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %31, i32 0, i32 0, i32 0, i64 0\l  store float %42, float addrspace(1)* %43, align 8, !tbaa !11\l  %44 = fmul contract float %37, %41\l  %45 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %31, i32 0, i32 0, i32 0, i64 1\l  store float %44, float addrspace(1)* %45, align 4, !tbaa !11\l  br label %46\l}"];
	Node0x4c68f30 -> Node0x4c67d90;
	Node0x4c67d90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  ret void\l}"];
}
