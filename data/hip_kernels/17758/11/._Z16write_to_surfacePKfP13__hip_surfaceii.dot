digraph "CFG for '_Z16write_to_surfacePKfP13__hip_surfaceii' function" {
	label="CFG for '_Z16write_to_surfacePKfP13__hip_surfaceii' function";

	Node0x5af05a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %23 = icmp slt i32 %13, %2\l  %24 = icmp slt i32 %21, %3\l  %25 = select i1 %23, i1 %24, i1 false\l  br i1 %25, label %26, label %86\l|{<s0>T|<s1>F}}"];
	Node0x5af05a0:s0 -> Node0x5af3bf0;
	Node0x5af05a0:s1 -> Node0x5af3c80;
	Node0x5af3bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%26:\l26:                                               \l  %27 = shl i32 %22, 2\l  %28 = mul nsw i32 %3, %2\l  %29 = mul nsw i32 %27, %28\l  %30 = mul nsw i32 %21, %2\l  %31 = add i32 %13, %29\l  %32 = add i32 %31, %30\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = insertelement \<4 x float\> undef, float %35, i64 0\l  %37 = add nsw i32 %32, %28\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %41 = insertelement \<4 x float\> %36, float %40, i64 1\l  %42 = shl nsw i32 %28, 1\l  %43 = add nsw i32 %32, %42\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = insertelement \<4 x float\> %41, float %46, i64 2\l  %48 = mul nsw i32 %28, 3\l  %49 = add nsw i32 %32, %48\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %53 = insertelement \<4 x float\> %47, float %52, i64 3\l  %54 = shl i32 %13, 4\l  %55 = bitcast %struct.__hip_surface addrspace(1)* %1 to i32 addrspace(1)*\l  %56 = addrspacecast i32 addrspace(1)* %55 to i32 addrspace(4)*\l  %57 = getelementptr inbounds i32, i32 addrspace(4)* %56, i64 8\l  %58 = load i32, i32 addrspace(4)* %57, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %59 = getelementptr inbounds i32, i32 addrspace(4)* %56, i64 9\l  %60 = load i32, i32 addrspace(4)* %59, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %61 = icmp eq i32 %58, 4\l  br i1 %61, label %62, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5af3bf0:s0 -> Node0x5af6da0;
	Node0x5af3bf0:s1 -> Node0x5af6e30;
	Node0x5af6da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%62:\l62:                                               \l  %63 = sdiv i32 %54, 3\l  br label %69\l}"];
	Node0x5af6da0 -> Node0x5af7000;
	Node0x5af6e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%64:\l64:                                               \l  %65 = sext i32 %58 to i64\l  %66 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE9FormatLUT, i64 0, i64 %65\l  %67 = load i32, i32 addrspace(4)* %66, align 4, !tbaa !15\l  %68 = ashr i32 %54, %67\l  br label %69\l}"];
	Node0x5af6e30 -> Node0x5af7000;
	Node0x5af7000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%69:\l69:                                               \l  %70 = phi i32 [ %63, %62 ], [ %68, %64 ]\l  %71 = sext i32 %60 to i64\l  %72 = lshr i64 4176, %71\l  %73 = and i64 %72, 1\l  %74 = icmp eq i64 %73, 0\l  br i1 %74, label %77, label %75\l|{<s0>T|<s1>F}}"];
	Node0x5af7000:s0 -> Node0x5af79c0;
	Node0x5af7000:s1 -> Node0x5af7a10;
	Node0x5af7a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%75:\l75:                                               \l  %76 = sdiv i32 %70, 3\l  br label %81\l}"];
	Node0x5af7a10 -> Node0x5af7ba0;
	Node0x5af79c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%77:\l77:                                               \l  %78 = getelementptr inbounds [20 x i32], [20 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE8OrderLUT, i64 0, i64 %71\l  %79 = load i32, i32 addrspace(4)* %78, align 4, !tbaa !15\l  %80 = ashr i32 %70, %79\l  br label %81\l}"];
	Node0x5af79c0 -> Node0x5af7ba0;
	Node0x5af7ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%81:\l81:                                               \l  %82 = phi i32 [ %76, %75 ], [ %80, %77 ]\l  %83 = bitcast %struct.__hip_surface addrspace(1)* %1 to \<8 x i32\>\l... addrspace(1)*\l  %84 = addrspacecast \<8 x i32\> addrspace(1)* %83 to \<8 x i32\> addrspace(4)*\l  %85 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %84, align 32, !tbaa !17,\l... !amdgpu.noclobber !5\l  tail call void @llvm.amdgcn.image.store.mip.2d.v4f32.i32(\<4 x float\> %53,\l... i32 15, i32 %82, i32 %21, i32 %22, \<8 x i32\> %85, i32 0, i32 0)\l  br label %86\l}"];
	Node0x5af7ba0 -> Node0x5af3c80;
	Node0x5af3c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  ret void\l}"];
}
