digraph "CFG for '_Z20root_pointer_jumpingPiS_iPb' function" {
	label="CFG for '_Z20root_pointer_jumpingPiS_iPb' function";

	Node0x48c9c90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %5, %11\l  %13 = add i32 %12, %6\l  %14 = icmp ne i32 %6, 0\l  br i1 %14, label %16, label %15\l|{<s0>T|<s1>F}}"];
	Node0x48c9c90:s0 -> Node0x48c9ce0;
	Node0x48c9c90:s1 -> Node0x48cbc20;
	Node0x48cbc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%15:\l15:                                               \l  store i8 0, i8 addrspace(3)* @_ZZ20root_pointer_jumpingPiS_iPbE10block_flag,\l... align 1, !tbaa !7\l  br label %16\l}"];
	Node0x48cbc20 -> Node0x48c9ce0;
	Node0x48c9ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %17 = icmp slt i32 %13, %2\l  br i1 %17, label %18, label %32\l|{<s0>T|<s1>F}}"];
	Node0x48c9ce0:s0 -> Node0x48cc390;
	Node0x48c9ce0:s1 -> Node0x48cc420;
	Node0x48cc390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%18:\l18:                                               \l  %19 = sext i32 %13 to i64\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %19\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !11, !amdgpu.noclobber\l... !6\l  %22 = icmp eq i32 %21, 0\l  br i1 %22, label %23, label %32\l|{<s0>T|<s1>F}}"];
	Node0x48cc390:s0 -> Node0x48ccf00;
	Node0x48cc390:s1 -> Node0x48cc420;
	Node0x48ccf00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%23:\l23:                                               \l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %19\l  %25 = load i32, i32 addrspace(1)* %24, align 4, !tbaa !11, !amdgpu.noclobber\l... !6\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %26\l  %28 = load i32, i32 addrspace(1)* %27, align 4, !tbaa !11, !amdgpu.noclobber\l... !6\l  %29 = icmp eq i32 %25, %28\l  br i1 %29, label %31, label %30\l|{<s0>T|<s1>F}}"];
	Node0x48ccf00:s0 -> Node0x48cd9b0;
	Node0x48ccf00:s1 -> Node0x48cda40;
	Node0x48cda40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%30:\l30:                                               \l  store i32 %28, i32 addrspace(1)* %24, align 4, !tbaa !11\l  store i8 1, i8 addrspace(3)* @_ZZ20root_pointer_jumpingPiS_iPbE10block_flag,\l... align 1, !tbaa !7\l  br label %32\l}"];
	Node0x48cda40 -> Node0x48cc420;
	Node0x48cd9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%31:\l31:                                               \l  store i32 -1, i32 addrspace(1)* %20, align 4, !tbaa !11\l  br label %32\l}"];
	Node0x48cd9b0 -> Node0x48cc420;
	Node0x48cc420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = load i8, i8 addrspace(3)*\l... @_ZZ20root_pointer_jumpingPiS_iPbE10block_flag, align 1\l  %34 = icmp eq i8 %33, 0\l  %35 = select i1 %14, i1 true, i1 %34\l  br i1 %35, label %37, label %36\l|{<s0>T|<s1>F}}"];
	Node0x48cc420:s0 -> Node0x48cdc60;
	Node0x48cc420:s1 -> Node0x48ce7b0;
	Node0x48ce7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%36:\l36:                                               \l  store i8 1, i8 addrspace(1)* %3, align 1, !tbaa !7\l  br label %37\l}"];
	Node0x48ce7b0 -> Node0x48cdc60;
	Node0x48cdc60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  ret void\l}"];
}
