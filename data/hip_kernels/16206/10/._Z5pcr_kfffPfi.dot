digraph "CFG for '_Z5pcr_kfffPfi' function" {
	label="CFG for '_Z5pcr_kfffPfi' function";

	Node0x5b6f5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = freeze i32 %6\l  %8 = freeze i32 %4\l  %9 = udiv i32 %7, %8\l  %10 = mul i32 %9, %8\l  %11 = sub i32 %7, %10\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = udiv i32 %17, %4\l  %19 = mul i32 %18, %12\l  %20 = add i32 %19, %9\l  %21 = mul i32 %4, 5\l  %22 = mul i32 %21, %9\l  %23 = freeze i32 %4\l  %24 = sdiv i32 %23, 2\l  %25 = mul i32 %24, 2\l  %26 = sub i32 %23, %25\l  %27 = add nsw i32 %24, %26\l  %28 = and i32 %11, 1\l  %29 = icmp eq i32 %28, 0\l  %30 = select i1 %29, i32 0, i32 %27\l  %31 = lshr i32 %11, 1\l  %32 = add nsw i32 %30, %31\l  %33 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sAds,\l... i32 0, i32 %22\l  %34 = getelementptr inbounds float, float addrspace(3)* %33, i32 %4\l  %35 = getelementptr inbounds float, float addrspace(3)* %34, i32 %4\l  %36 = getelementptr inbounds float, float addrspace(3)* %35, i32 %4\l  %37 = getelementptr inbounds float, float addrspace(3)* %36, i32 %4\l  %38 = getelementptr inbounds float, float addrspace(3)* %33, i32 %11\l  store float %0, float addrspace(3)* %38, align 4, !tbaa !7\l  %39 = getelementptr inbounds float, float addrspace(3)* %34, i32 %11\l  store float %1, float addrspace(3)* %39, align 4, !tbaa !7\l  %40 = getelementptr inbounds float, float addrspace(3)* %35, i32 %11\l  store float %2, float addrspace(3)* %40, align 4, !tbaa !7\l  %41 = mul nsw i32 %20, %4\l  %42 = add nsw i32 %41, %11\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %3, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %46 = getelementptr inbounds float, float addrspace(3)* %36, i32 %11\l  store float %45, float addrspace(3)* %46, align 4, !tbaa !7\l  %47 = getelementptr inbounds float, float addrspace(3)* %37, i32 %11\l  %48 = bitcast float addrspace(3)* %47 to i32 addrspace(3)*\l  store i32 %11, i32 addrspace(3)* %48, align 4, !tbaa !11\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %49 = tail call i32 @llvm.smax.i32(i32 %11, i32 1)\l  %50 = add nsw i32 %49, -1\l  %51 = add nuw nsw i32 %11, 1\l  %52 = icmp slt i32 %51, %4\l  %53 = select i1 %52, i32 %51, i32 0\l  %54 = sitofp i32 %4 to float\l  %55 = tail call i1 @llvm.amdgcn.class.f32(float %54, i32 144)\l  %56 = select i1 %55, float 0x41F0000000000000, float 1.000000e+00\l  %57 = fmul float %56, %54\l  %58 = tail call float @llvm.log2.f32(float %57)\l  %59 = select i1 %55, float 3.200000e+01, float 0.000000e+00\l  %60 = fsub float %58, %59\l  %61 = fptosi float %60 to i32\l  %62 = icmp slt i32 %61, 0\l  br i1 %62, label %130, label %63\l|{<s0>T|<s1>F}}"];
	Node0x5b6f5d0:s0 -> Node0x5b756f0;
	Node0x5b6f5d0:s1 -> Node0x5b75780;
	Node0x5b75780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%63:\l63:                                               \l  %64 = getelementptr inbounds float, float addrspace(3)* %34, i32 %50\l  %65 = getelementptr inbounds float, float addrspace(3)* %33, i32 %50\l  %66 = getelementptr inbounds float, float addrspace(3)* %36, i32 %50\l  %67 = getelementptr inbounds float, float addrspace(3)* %33, i32 %53\l  %68 = getelementptr inbounds float, float addrspace(3)* %34, i32 %53\l  %69 = getelementptr inbounds float, float addrspace(3)* %35, i32 %53\l  %70 = getelementptr inbounds float, float addrspace(3)* %36, i32 %53\l  %71 = getelementptr inbounds float, float addrspace(3)* %33, i32 %32\l  %72 = getelementptr inbounds float, float addrspace(3)* %34, i32 %32\l  %73 = getelementptr inbounds float, float addrspace(3)* %35, i32 %32\l  %74 = getelementptr inbounds float, float addrspace(3)* %36, i32 %32\l  %75 = getelementptr inbounds float, float addrspace(3)* %37, i32 %32\l  %76 = bitcast float addrspace(3)* %75 to i32 addrspace(3)*\l  br label %77\l}"];
	Node0x5b75780 -> Node0x5b762e0;
	Node0x5b762e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi i32 [ 0, %63 ], [ %126, %125 ]\l  %79 = load i32, i32 addrspace(3)* %48, align 4, !tbaa !11\l  %80 = load float, float addrspace(3)* %38, align 4, !tbaa !7\l  %81 = load float, float addrspace(3)* %39, align 4, !tbaa !7\l  %82 = load float, float addrspace(3)* %40, align 4, !tbaa !7\l  %83 = load float, float addrspace(3)* %46, align 4, !tbaa !7\l  %84 = load float, float addrspace(3)* %64, align 4, !tbaa !7\l  %85 = tail call float @llvm.fabs.f32(float %80)\l  %86 = fcmp contract ogt float %85, 0x3E7AD7F2A0000000\l  br i1 %86, label %87, label %99\l|{<s0>T|<s1>F}}"];
	Node0x5b762e0:s0 -> Node0x5b77080;
	Node0x5b762e0:s1 -> Node0x5b77110;
	Node0x5b77080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%87:\l87:                                               \l  %88 = load float, float addrspace(3)* %65, align 4, !tbaa !7\l  %89 = load float, float addrspace(3)* %66, align 4, !tbaa !7\l  %90 = fmul contract float %80, %82\l  %91 = fdiv contract float %90, %84\l  %92 = fsub contract float %81, %91\l  %93 = fmul contract float %80, %89\l  %94 = fdiv contract float %93, %84\l  %95 = fsub contract float %83, %94\l  %96 = fneg contract float %80\l  %97 = fmul contract float %88, %96\l  %98 = fdiv contract float %97, %84\l  br label %99\l}"];
	Node0x5b77080 -> Node0x5b77110;
	Node0x5b77110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%99:\l99:                                               \l  %100 = phi float [ %95, %87 ], [ %83, %77 ]\l  %101 = phi float [ %92, %87 ], [ %81, %77 ]\l  %102 = phi float [ %98, %87 ], [ %80, %77 ]\l  %103 = load float, float addrspace(3)* %67, align 4, !tbaa !7\l  %104 = load float, float addrspace(3)* %68, align 4, !tbaa !7\l  %105 = load float, float addrspace(3)* %69, align 4, !tbaa !7\l  %106 = tail call float @llvm.fabs.f32(float %103)\l  %107 = fcmp contract ogt float %106, 0x3E7AD7F2A0000000\l  br i1 %107, label %108, label %119\l|{<s0>T|<s1>F}}"];
	Node0x5b77110:s0 -> Node0x5b77dd0;
	Node0x5b77110:s1 -> Node0x5b77e20;
	Node0x5b77dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%108:\l108:                                              \l  %109 = load float, float addrspace(3)* %70, align 4, !tbaa !7\l  %110 = fmul contract float %103, %105\l  %111 = fdiv contract float %110, %104\l  %112 = fsub contract float %101, %111\l  %113 = fmul contract float %105, %109\l  %114 = fdiv contract float %113, %104\l  %115 = fsub contract float %100, %114\l  %116 = fneg contract float %82\l  %117 = fmul contract float %105, %116\l  %118 = fdiv contract float %117, %104\l  br label %119\l}"];
	Node0x5b77dd0 -> Node0x5b77e20;
	Node0x5b77e20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%119:\l119:                                              \l  %120 = phi float [ %118, %108 ], [ %82, %99 ]\l  %121 = phi float [ %115, %108 ], [ %100, %99 ]\l  %122 = phi float [ %112, %108 ], [ %101, %99 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %123 = icmp slt i32 %78, %61\l  br i1 %123, label %124, label %125\l|{<s0>T|<s1>F}}"];
	Node0x5b77e20:s0 -> Node0x5b78900;
	Node0x5b77e20:s1 -> Node0x5b763a0;
	Node0x5b78900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%124:\l124:                                              \l  store float %102, float addrspace(3)* %71, align 4, !tbaa !7\l  store float %122, float addrspace(3)* %72, align 4, !tbaa !7\l  store float %120, float addrspace(3)* %73, align 4, !tbaa !7\l  store float %121, float addrspace(3)* %74, align 4, !tbaa !7\l  store i32 %79, i32 addrspace(3)* %76, align 4, !tbaa !11\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %125\l}"];
	Node0x5b78900 -> Node0x5b763a0;
	Node0x5b763a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%125:\l125:                                              \l  %126 = add nuw i32 %78, 1\l  %127 = icmp eq i32 %78, %61\l  br i1 %127, label %128, label %77, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5b763a0:s0 -> Node0x5b78fd0;
	Node0x5b763a0:s1 -> Node0x5b762e0;
	Node0x5b78fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%128:\l128:                                              \l  %129 = fdiv contract float %121, %122\l  br label %130\l}"];
	Node0x5b78fd0 -> Node0x5b756f0;
	Node0x5b756f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%130:\l130:                                              \l  %131 = phi float [ %129, %128 ], [ undef, %5 ]\l  store float %131, float addrspace(3)* %46, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %132 = load float, float addrspace(3)* %46, align 4, !tbaa !7\l  %133 = load i32, i32 addrspace(3)* %48, align 4, !tbaa !11\l  %134 = add nsw i32 %133, %41\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds float, float addrspace(1)* %3, i64 %135\l  store float %132, float addrspace(1)* %136, align 4, !tbaa !7\l  ret void\l}"];
}
