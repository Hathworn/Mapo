digraph "CFG for '_Z18tridiag_x_matrix_kfffPfi' function" {
	label="CFG for '_Z18tridiag_x_matrix_kfffPfi' function";

	Node0x47ccf40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = urem i32 %6, %4\l  %8 = sub nsw i32 %6, %7\l  %9 = freeze i32 %8\l  %10 = urem i32 %9, %4\l  %11 = sub nuw i32 %9, %10\l  %12 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sAds,\l... i32 0, i32 %11\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = add i32 %19, %6\l  %21 = zext i32 %20 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %3, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %24 = getelementptr inbounds float, float addrspace(3)* %12, i32 %6\l  store float %23, float addrspace(3)* %24, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %25 = icmp ne i32 %7, 0\l  %26 = add nsw i32 %4, -1\l  %27 = icmp slt i32 %7, %26\l  %28 = select i1 %25, i1 %27, i1 false\l  br i1 %28, label %29, label %39\l|{<s0>T|<s1>F}}"];
	Node0x47ccf40:s0 -> Node0x47d0780;
	Node0x47ccf40:s1 -> Node0x47d0810;
	Node0x47d0780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%29:\l29:                                               \l  %30 = add nsw i32 %7, -1\l  %31 = getelementptr inbounds float, float addrspace(3)* %12, i32 %30\l  %32 = load float, float addrspace(3)* %31, align 4, !tbaa !7\l  %33 = fmul contract float %32, %0\l  %34 = getelementptr inbounds float, float addrspace(3)* %12, i32 %7\l  %35 = load float, float addrspace(3)* %34, align 4, !tbaa !7\l  %36 = fmul contract float %35, %1\l  %37 = fadd contract float %33, %36\l  %38 = add nuw nsw i32 %7, 1\l  br label %49\l}"];
	Node0x47d0780 -> Node0x47d0f80;
	Node0x47d0810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%39:\l39:                                               \l  %40 = icmp eq i32 %7, 0\l  br i1 %40, label %41, label %44\l|{<s0>T|<s1>F}}"];
	Node0x47d0810:s0 -> Node0x47d10d0;
	Node0x47d0810:s1 -> Node0x47d1120;
	Node0x47d10d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%41:\l41:                                               \l  %42 = load float, float addrspace(3)* %12, align 4, !tbaa !7\l  %43 = fmul contract float %42, %1\l  br label %49\l}"];
	Node0x47d10d0 -> Node0x47d0f80;
	Node0x47d1120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%44:\l44:                                               \l  %45 = add nsw i32 %7, -1\l  %46 = getelementptr inbounds float, float addrspace(3)* %12, i32 %45\l  %47 = load float, float addrspace(3)* %46, align 4, !tbaa !7\l  %48 = fmul contract float %47, %0\l  br label %49\l}"];
	Node0x47d1120 -> Node0x47d0f80;
	Node0x47d0f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = phi i32 [ 1, %41 ], [ %7, %44 ], [ %38, %29 ]\l  %51 = phi float [ %2, %41 ], [ %1, %44 ], [ %2, %29 ]\l  %52 = phi float [ %43, %41 ], [ %48, %44 ], [ %37, %29 ]\l  %53 = getelementptr inbounds float, float addrspace(3)* %12, i32 %50\l  %54 = load float, float addrspace(3)* %53, align 4, !tbaa !7\l  %55 = fmul contract float %54, %51\l  %56 = fadd contract float %52, %55\l  store float %56, float addrspace(1)* %22, align 4, !tbaa !7\l  ret void\l}"];
}
