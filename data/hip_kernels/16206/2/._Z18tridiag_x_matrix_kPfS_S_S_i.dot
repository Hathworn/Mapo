digraph "CFG for '_Z18tridiag_x_matrix_kPfS_S_S_i' function" {
	label="CFG for '_Z18tridiag_x_matrix_kPfS_S_S_i' function";

	Node0x5f8b710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = freeze i32 %6\l  %8 = freeze i32 %4\l  %9 = udiv i32 %7, %8\l  %10 = mul i32 %9, %8\l  %11 = sub i32 %7, %10\l  %12 = shl i32 %4, 2\l  %13 = mul i32 %12, %9\l  %14 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sAds,\l... i32 0, i32 %13\l  %15 = getelementptr inbounds float, float addrspace(3)* %14, i32 %4\l  %16 = getelementptr inbounds float, float addrspace(3)* %15, i32 %4\l  %17 = getelementptr inbounds float, float addrspace(3)* %16, i32 %4\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %18, %23\l  %25 = add i32 %24, %6\l  %26 = zext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %3, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %29 = getelementptr inbounds float, float addrspace(3)* %14, i32 %6\l  store float %28, float addrspace(3)* %29, align 4, !tbaa !7\l  %30 = zext i32 %11 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %33 = getelementptr inbounds float, float addrspace(3)* %15, i32 %6\l  store float %32, float addrspace(3)* %33, align 4, !tbaa !7\l  %34 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %36 = getelementptr inbounds float, float addrspace(3)* %16, i32 %6\l  store float %35, float addrspace(3)* %36, align 4, !tbaa !7\l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %39 = getelementptr inbounds float, float addrspace(3)* %17, i32 %6\l  store float %38, float addrspace(3)* %39, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %40 = icmp ne i32 %11, 0\l  %41 = add nsw i32 %4, -1\l  %42 = icmp slt i32 %11, %41\l  %43 = select i1 %40, i1 %42, i1 false\l  br i1 %43, label %44, label %59\l|{<s0>T|<s1>F}}"];
	Node0x5f8b710:s0 -> Node0x5f8fb70;
	Node0x5f8b710:s1 -> Node0x5f8fc00;
	Node0x5f8fb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%44:\l44:                                               \l  %45 = getelementptr inbounds float, float addrspace(3)* %15, i32 %11\l  %46 = load float, float addrspace(3)* %45, align 4, !tbaa !7\l  %47 = add nsw i32 %11, -1\l  %48 = getelementptr inbounds float, float addrspace(3)* %14, i32 %47\l  %49 = load float, float addrspace(3)* %48, align 4, !tbaa !7\l  %50 = fmul contract float %46, %49\l  %51 = getelementptr inbounds float, float addrspace(3)* %16, i32 %11\l  %52 = load float, float addrspace(3)* %51, align 4, !tbaa !7\l  %53 = getelementptr inbounds float, float addrspace(3)* %14, i32 %11\l  %54 = load float, float addrspace(3)* %53, align 4, !tbaa !7\l  %55 = fmul contract float %52, %54\l  %56 = fadd contract float %50, %55\l  %57 = getelementptr inbounds float, float addrspace(3)* %17, i32 %11\l  %58 = add nuw nsw i32 %11, 1\l  br label %73\l}"];
	Node0x5f8fb70 -> Node0x5f90520;
	Node0x5f8fc00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%59:\l59:                                               \l  %60 = icmp eq i32 %11, 0\l  br i1 %60, label %61, label %65\l|{<s0>T|<s1>F}}"];
	Node0x5f8fc00:s0 -> Node0x5f90670;
	Node0x5f8fc00:s1 -> Node0x5f906c0;
	Node0x5f90670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%61:\l61:                                               \l  %62 = load float, float addrspace(3)* %16, align 4, !tbaa !7\l  %63 = load float, float addrspace(3)* %14, align 4, !tbaa !7\l  %64 = fmul contract float %62, %63\l  br label %73\l}"];
	Node0x5f90670 -> Node0x5f90520;
	Node0x5f906c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%65:\l65:                                               \l  %66 = getelementptr inbounds float, float addrspace(3)* %15, i32 %11\l  %67 = load float, float addrspace(3)* %66, align 4, !tbaa !7\l  %68 = add nsw i32 %11, -1\l  %69 = getelementptr inbounds float, float addrspace(3)* %14, i32 %68\l  %70 = load float, float addrspace(3)* %69, align 4, !tbaa !7\l  %71 = fmul contract float %67, %70\l  %72 = getelementptr inbounds float, float addrspace(3)* %16, i32 %11\l  br label %73\l}"];
	Node0x5f906c0 -> Node0x5f90520;
	Node0x5f90520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  %74 = phi i32 [ 1, %61 ], [ %11, %65 ], [ %58, %44 ]\l  %75 = phi float addrspace(3)* [ %17, %61 ], [ %72, %65 ], [ %57, %44 ]\l  %76 = phi float [ %64, %61 ], [ %71, %65 ], [ %56, %44 ]\l  %77 = load float, float addrspace(3)* %75, align 4, !tbaa !7\l  %78 = getelementptr inbounds float, float addrspace(3)* %14, i32 %74\l  %79 = load float, float addrspace(3)* %78, align 4, !tbaa !7\l  %80 = fmul contract float %77, %79\l  %81 = fadd contract float %76, %80\l  store float %81, float addrspace(1)* %27, align 4, !tbaa !7\l  ret void\l}"];
}
