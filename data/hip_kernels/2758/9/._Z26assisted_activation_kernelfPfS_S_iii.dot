digraph "CFG for '_Z26assisted_activation_kernelfPfS_S_iii' function" {
	label="CFG for '_Z26assisted_activation_kernelfPfS_S_iii' function";

	Node0x5f20060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = freeze i32 %16\l  %18 = freeze i32 %4\l  %19 = sdiv i32 %17, %18\l  %20 = mul i32 %19, %18\l  %21 = sub i32 %17, %20\l  %22 = icmp slt i32 %19, %6\l  %23 = icmp sgt i32 %5, 0\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %107\l|{<s0>T|<s1>F}}"];
	Node0x5f20060:s0 -> Node0x5f223f0;
	Node0x5f20060:s1 -> Node0x5f22480;
	Node0x5f223f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%25:\l25:                                               \l  %26 = sext i32 %16 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %2, i64 %26\l  %28 = getelementptr inbounds float, float addrspace(1)* %3, i64 %26\l  %29 = mul nsw i32 %19, %5\l  %30 = and i32 %5, 3\l  %31 = icmp ult i32 %5, 4\l  br i1 %31, label %87, label %32\l|{<s0>T|<s1>F}}"];
	Node0x5f223f0:s0 -> Node0x5f22980;
	Node0x5f223f0:s1 -> Node0x5f229d0;
	Node0x5f229d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%32:\l32:                                               \l  %33 = and i32 %5, -4\l  br label %34\l}"];
	Node0x5f229d0 -> Node0x5f21f80;
	Node0x5f21f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%34:\l34:                                               \l  %35 = phi i32 [ 0, %32 ], [ %84, %34 ]\l  %36 = phi i32 [ 0, %32 ], [ %85, %34 ]\l  %37 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %38 = fmul contract float %37, %0\l  %39 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %40 = fmul contract float %38, %39\l  %41 = add nsw i32 %35, %29\l  %42 = mul nsw i32 %41, %4\l  %43 = add nsw i32 %42, %21\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %47 = fadd contract float %46, %40\l  store float %47, float addrspace(1)* %45, align 4, !tbaa !7\l  %48 = or i32 %35, 1\l  %49 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %50 = fmul contract float %49, %0\l  %51 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %52 = fmul contract float %50, %51\l  %53 = add nsw i32 %48, %29\l  %54 = mul nsw i32 %53, %4\l  %55 = add nsw i32 %54, %21\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !7\l  %59 = fadd contract float %58, %52\l  store float %59, float addrspace(1)* %57, align 4, !tbaa !7\l  %60 = or i32 %35, 2\l  %61 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %62 = fmul contract float %61, %0\l  %63 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %64 = fmul contract float %62, %63\l  %65 = add nsw i32 %60, %29\l  %66 = mul nsw i32 %65, %4\l  %67 = add nsw i32 %66, %21\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %1, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7\l  %71 = fadd contract float %70, %64\l  store float %71, float addrspace(1)* %69, align 4, !tbaa !7\l  %72 = or i32 %35, 3\l  %73 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %74 = fmul contract float %73, %0\l  %75 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %76 = fmul contract float %74, %75\l  %77 = add nsw i32 %72, %29\l  %78 = mul nsw i32 %77, %4\l  %79 = add nsw i32 %78, %21\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  %83 = fadd contract float %82, %76\l  store float %83, float addrspace(1)* %81, align 4, !tbaa !7\l  %84 = add nuw nsw i32 %35, 4\l  %85 = add i32 %36, 4\l  %86 = icmp eq i32 %85, %33\l  br i1 %86, label %87, label %34, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5f21f80:s0 -> Node0x5f22980;
	Node0x5f21f80:s1 -> Node0x5f21f80;
	Node0x5f22980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%87:\l87:                                               \l  %88 = phi i32 [ 0, %25 ], [ %84, %34 ]\l  %89 = icmp eq i32 %30, 0\l  br i1 %89, label %107, label %90\l|{<s0>T|<s1>F}}"];
	Node0x5f22980:s0 -> Node0x5f22480;
	Node0x5f22980:s1 -> Node0x5f258e0;
	Node0x5f258e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = phi i32 [ %104, %90 ], [ %88, %87 ]\l  %92 = phi i32 [ %105, %90 ], [ 0, %87 ]\l  %93 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %94 = fmul contract float %93, %0\l  %95 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %96 = fmul contract float %94, %95\l  %97 = add nsw i32 %91, %29\l  %98 = mul nsw i32 %97, %4\l  %99 = add nsw i32 %98, %21\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %1, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !7\l  %103 = fadd contract float %102, %96\l  store float %103, float addrspace(1)* %101, align 4, !tbaa !7\l  %104 = add nuw nsw i32 %91, 1\l  %105 = add i32 %92, 1\l  %106 = icmp eq i32 %105, %30\l  br i1 %106, label %107, label %90, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5f258e0:s0 -> Node0x5f22480;
	Node0x5f258e0:s1 -> Node0x5f258e0;
	Node0x5f22480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%107:\l107:                                              \l  ret void\l}"];
}
