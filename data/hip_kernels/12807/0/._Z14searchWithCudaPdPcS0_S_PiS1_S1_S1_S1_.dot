digraph "CFG for '_Z14searchWithCudaPdPcS0_S_PiS1_S1_S1_S1_' function" {
	label="CFG for '_Z14searchWithCudaPdPcS0_S_PiS1_S1_S1_S1_' function";

	Node0x4fbf920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %12 = sext i32 %10 to i64\l  %13 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %12\l  %14 = bitcast i32 addrspace(1)* %13 to \<2 x i32\> addrspace(1)*\l  %15 = load \<2 x i32\>, \<2 x i32\> addrspace(1)* %14, align 4, !tbaa !4\l  %16 = extractelement \<2 x i32\> %15, i64 0\l  %17 = sext i32 %16 to i64\l  %18 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %17\l  %19 = extractelement \<2 x i32\> %15, i64 1\l  %20 = sub nsw i32 %19, %16\l  %21 = sext i32 %11 to i64\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %21\l  %23 = bitcast i32 addrspace(1)* %22 to \<2 x i32\> addrspace(1)*\l  %24 = load \<2 x i32\>, \<2 x i32\> addrspace(1)* %23, align 4, !tbaa !4\l  %25 = extractelement \<2 x i32\> %24, i64 0\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %26\l  %28 = extractelement \<2 x i32\> %24, i64 1\l  %29 = sub nsw i32 %28, %25\l  %30 = icmp eq i32 %20, %29\l  br i1 %30, label %31, label %117\l|{<s0>T|<s1>F}}"];
	Node0x4fbf920:s0 -> Node0x4fc3130;
	Node0x4fbf920:s1 -> Node0x4fc31c0;
	Node0x4fc3130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%31:\l31:                                               \l  %32 = icmp sgt i32 %20, 0\l  br i1 %32, label %45, label %35\l|{<s0>T|<s1>F}}"];
	Node0x4fc3130:s0 -> Node0x4fc22e0;
	Node0x4fc3130:s1 -> Node0x4fc2330;
	Node0x4fc3680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%33:\l33:                                               \l  %34 = icmp slt i32 %53, %20\l  br i1 %34, label %45, label %35, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x4fc3680:s0 -> Node0x4fc22e0;
	Node0x4fc3680:s1 -> Node0x4fc2330;
	Node0x4fc2330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%35:\l35:                                               \l  %36 = load i32, i32 addrspace(1)* %6, align 4, !tbaa !4, !amdgpu.noclobber\l... !10\l  %37 = icmp sgt i32 %36, 0\l  br i1 %37, label %38, label %117\l|{<s0>T|<s1>F}}"];
	Node0x4fc2330:s0 -> Node0x4fc3c30;
	Node0x4fc2330:s1 -> Node0x4fc31c0;
	Node0x4fc3c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%38:\l38:                                               \l  %39 = load i32, i32 addrspace(1)* %8, align 4, !tbaa !4, !amdgpu.noclobber\l... !10\l  %40 = load i32, i32 addrspace(1)* %7, align 4, !tbaa !4, !amdgpu.noclobber\l... !10\l  %41 = and i32 %36, 3\l  %42 = icmp ult i32 %36, 4\l  br i1 %42, label %99, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4fc3c30:s0 -> Node0x4fc45f0;
	Node0x4fc3c30:s1 -> Node0x4fc4680;
	Node0x4fc4680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%43:\l43:                                               \l  %44 = and i32 %36, -4\l  br label %54\l}"];
	Node0x4fc4680 -> Node0x4fc4880;
	Node0x4fc22e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = phi i32 [ %53, %33 ], [ 0, %31 ]\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds i8, i8 addrspace(1)* %18, i64 %47\l  %49 = load i8, i8 addrspace(1)* %48, align 1, !tbaa !11, !amdgpu.noclobber\l... !10\l  %50 = getelementptr inbounds i8, i8 addrspace(1)* %27, i64 %47\l  %51 = load i8, i8 addrspace(1)* %50, align 1, !tbaa !11, !amdgpu.noclobber\l... !10\l  %52 = icmp eq i8 %49, %51\l  %53 = add nuw nsw i32 %46, 1\l  br i1 %52, label %33, label %117\l|{<s0>T|<s1>F}}"];
	Node0x4fc22e0:s0 -> Node0x4fc3680;
	Node0x4fc22e0:s1 -> Node0x4fc31c0;
	Node0x4fc4880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%54:\l54:                                               \l  %55 = phi i32 [ 0, %43 ], [ %96, %54 ]\l  %56 = phi i32 [ 0, %43 ], [ %97, %54 ]\l  %57 = mul nsw i32 %39, %55\l  %58 = add nsw i32 %57, %11\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds double, double addrspace(1)* %3, i64 %59\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !12\l  %62 = mul nsw i32 %40, %55\l  %63 = add nsw i32 %62, %10\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds double, double addrspace(1)* %0, i64 %64\l  store double %61, double addrspace(1)* %65, align 8, !tbaa !12\l  %66 = or i32 %55, 1\l  %67 = mul nsw i32 %39, %66\l  %68 = add nsw i32 %67, %11\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds double, double addrspace(1)* %3, i64 %69\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !12\l  %72 = mul nsw i32 %40, %66\l  %73 = add nsw i32 %72, %10\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds double, double addrspace(1)* %0, i64 %74\l  store double %71, double addrspace(1)* %75, align 8, !tbaa !12\l  %76 = or i32 %55, 2\l  %77 = mul nsw i32 %39, %76\l  %78 = add nsw i32 %77, %11\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds double, double addrspace(1)* %3, i64 %79\l  %81 = load double, double addrspace(1)* %80, align 8, !tbaa !12\l  %82 = mul nsw i32 %40, %76\l  %83 = add nsw i32 %82, %10\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds double, double addrspace(1)* %0, i64 %84\l  store double %81, double addrspace(1)* %85, align 8, !tbaa !12\l  %86 = or i32 %55, 3\l  %87 = mul nsw i32 %39, %86\l  %88 = add nsw i32 %87, %11\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds double, double addrspace(1)* %3, i64 %89\l  %91 = load double, double addrspace(1)* %90, align 8, !tbaa !12\l  %92 = mul nsw i32 %40, %86\l  %93 = add nsw i32 %92, %10\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds double, double addrspace(1)* %0, i64 %94\l  store double %91, double addrspace(1)* %95, align 8, !tbaa !12\l  %96 = add nuw nsw i32 %55, 4\l  %97 = add i32 %56, 4\l  %98 = icmp eq i32 %97, %44\l  br i1 %98, label %99, label %54, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4fc4880:s0 -> Node0x4fc45f0;
	Node0x4fc4880:s1 -> Node0x4fc4880;
	Node0x4fc45f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%99:\l99:                                               \l  %100 = phi i32 [ 0, %38 ], [ %96, %54 ]\l  %101 = icmp eq i32 %41, 0\l  br i1 %101, label %117, label %102\l|{<s0>T|<s1>F}}"];
	Node0x4fc45f0:s0 -> Node0x4fc31c0;
	Node0x4fc45f0:s1 -> Node0x4fc7d00;
	Node0x4fc7d00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%102:\l102:                                              \l  %103 = phi i32 [ %114, %102 ], [ %100, %99 ]\l  %104 = phi i32 [ %115, %102 ], [ 0, %99 ]\l  %105 = mul nsw i32 %39, %103\l  %106 = add nsw i32 %105, %11\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds double, double addrspace(1)* %3, i64 %107\l  %109 = load double, double addrspace(1)* %108, align 8, !tbaa !12\l  %110 = mul nsw i32 %40, %103\l  %111 = add nsw i32 %110, %10\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds double, double addrspace(1)* %0, i64 %112\l  store double %109, double addrspace(1)* %113, align 8, !tbaa !12\l  %114 = add nuw nsw i32 %103, 1\l  %115 = add i32 %104, 1\l  %116 = icmp eq i32 %115, %41\l  br i1 %116, label %117, label %102, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4fc7d00:s0 -> Node0x4fc31c0;
	Node0x4fc7d00:s1 -> Node0x4fc7d00;
	Node0x4fc31c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%117:\l117:                                              \l  ret void\l}"];
}
