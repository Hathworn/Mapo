digraph "CFG for '_Z9kernelGPUPfS_S_S_S_S_iii' function" {
	label="CFG for '_Z9kernelGPUPfS_S_S_S_S_iii' function";

	Node0x5c9d160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = add i32 %17, %10\l  %19 = mul i32 %7, %6\l  %20 = icmp slt i32 %18, %19\l  br i1 %20, label %21, label %133\l|{<s0>T|<s1>F}}"];
	Node0x5c9d160:s0 -> Node0x5c9fc80;
	Node0x5c9d160:s1 -> Node0x5c9fd10;
	Node0x5c9fc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%21:\l21:                                               \l  %22 = sext i32 %18 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %0, i64 %22\l  store float 0.000000e+00, float addrspace(1)* %23, align 4, !tbaa !7\l  %24 = getelementptr inbounds float, float addrspace(1)* %1, i64 %22\l  store float 0.000000e+00, float addrspace(1)* %24, align 4, !tbaa !7\l  %25 = getelementptr inbounds float, float addrspace(1)* %2, i64 %22\l  store float 0.000000e+00, float addrspace(1)* %25, align 4, !tbaa !7\l  %26 = icmp sgt i32 %8, 0\l  br i1 %26, label %27, label %125\l|{<s0>T|<s1>F}}"];
	Node0x5c9fc80:s0 -> Node0x5ca1440;
	Node0x5c9fc80:s1 -> Node0x5ca14d0;
	Node0x5ca1440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%27:\l27:                                               \l  %28 = and i32 %8, 3\l  %29 = icmp ult i32 %8, 4\l  br i1 %29, label %101, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5ca1440:s0 -> Node0x5ca1790;
	Node0x5ca1440:s1 -> Node0x5ca17e0;
	Node0x5ca17e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%30:\l30:                                               \l  %31 = and i32 %8, -4\l  br label %32\l}"];
	Node0x5ca17e0 -> Node0x5ca19e0;
	Node0x5ca19e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = phi i32 [ 0, %30 ], [ %98, %32 ]\l  %34 = phi i32 [ 0, %30 ], [ %99, %32 ]\l  %35 = mul i32 %19, %33\l  %36 = add nsw i32 %35, %18\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %3, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7\l  %40 = load float, float addrspace(1)* %23, align 4, !tbaa !7\l  %41 = fadd contract float %39, %40\l  store float %41, float addrspace(1)* %23, align 4, !tbaa !7\l  %42 = getelementptr inbounds float, float addrspace(1)* %4, i64 %37\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7\l  %44 = load float, float addrspace(1)* %24, align 4, !tbaa !7\l  %45 = fadd contract float %43, %44\l  store float %45, float addrspace(1)* %24, align 4, !tbaa !7\l  %46 = getelementptr inbounds float, float addrspace(1)* %5, i64 %37\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7\l  %48 = load float, float addrspace(1)* %25, align 4, !tbaa !7\l  %49 = fadd contract float %47, %48\l  store float %49, float addrspace(1)* %25, align 4, !tbaa !7\l  %50 = or i32 %33, 1\l  %51 = mul i32 %19, %50\l  %52 = add nsw i32 %51, %18\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %3, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %56 = load float, float addrspace(1)* %23, align 4, !tbaa !7\l  %57 = fadd contract float %55, %56\l  store float %57, float addrspace(1)* %23, align 4, !tbaa !7\l  %58 = getelementptr inbounds float, float addrspace(1)* %4, i64 %53\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = load float, float addrspace(1)* %24, align 4, !tbaa !7\l  %61 = fadd contract float %59, %60\l  store float %61, float addrspace(1)* %24, align 4, !tbaa !7\l  %62 = getelementptr inbounds float, float addrspace(1)* %5, i64 %53\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7\l  %64 = load float, float addrspace(1)* %25, align 4, !tbaa !7\l  %65 = fadd contract float %63, %64\l  store float %65, float addrspace(1)* %25, align 4, !tbaa !7\l  %66 = or i32 %33, 2\l  %67 = mul i32 %19, %66\l  %68 = add nsw i32 %67, %18\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %3, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7\l  %72 = load float, float addrspace(1)* %23, align 4, !tbaa !7\l  %73 = fadd contract float %71, %72\l  store float %73, float addrspace(1)* %23, align 4, !tbaa !7\l  %74 = getelementptr inbounds float, float addrspace(1)* %4, i64 %69\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7\l  %76 = load float, float addrspace(1)* %24, align 4, !tbaa !7\l  %77 = fadd contract float %75, %76\l  store float %77, float addrspace(1)* %24, align 4, !tbaa !7\l  %78 = getelementptr inbounds float, float addrspace(1)* %5, i64 %69\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7\l  %80 = load float, float addrspace(1)* %25, align 4, !tbaa !7\l  %81 = fadd contract float %79, %80\l  store float %81, float addrspace(1)* %25, align 4, !tbaa !7\l  %82 = or i32 %33, 3\l  %83 = mul i32 %19, %82\l  %84 = add nsw i32 %83, %18\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %3, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7\l  %88 = load float, float addrspace(1)* %23, align 4, !tbaa !7\l  %89 = fadd contract float %87, %88\l  store float %89, float addrspace(1)* %23, align 4, !tbaa !7\l  %90 = getelementptr inbounds float, float addrspace(1)* %4, i64 %85\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !7\l  %92 = load float, float addrspace(1)* %24, align 4, !tbaa !7\l  %93 = fadd contract float %91, %92\l  store float %93, float addrspace(1)* %24, align 4, !tbaa !7\l  %94 = getelementptr inbounds float, float addrspace(1)* %5, i64 %85\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7\l  %96 = load float, float addrspace(1)* %25, align 4, !tbaa !7\l  %97 = fadd contract float %95, %96\l  store float %97, float addrspace(1)* %25, align 4, !tbaa !7\l  %98 = add nuw nsw i32 %33, 4\l  %99 = add i32 %34, 4\l  %100 = icmp eq i32 %99, %31\l  br i1 %100, label %101, label %32, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5ca19e0:s0 -> Node0x5ca1790;
	Node0x5ca19e0:s1 -> Node0x5ca19e0;
	Node0x5ca1790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%101:\l101:                                              \l  %102 = phi i32 [ 0, %27 ], [ %98, %32 ]\l  %103 = icmp eq i32 %28, 0\l  br i1 %103, label %125, label %104\l|{<s0>T|<s1>F}}"];
	Node0x5ca1790:s0 -> Node0x5ca14d0;
	Node0x5ca1790:s1 -> Node0x5ca4c30;
	Node0x5ca4c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%104:\l104:                                              \l  %105 = phi i32 [ %122, %104 ], [ %102, %101 ]\l  %106 = phi i32 [ %123, %104 ], [ 0, %101 ]\l  %107 = mul i32 %19, %105\l  %108 = add nsw i32 %107, %18\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %3, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !7\l  %112 = load float, float addrspace(1)* %23, align 4, !tbaa !7\l  %113 = fadd contract float %111, %112\l  store float %113, float addrspace(1)* %23, align 4, !tbaa !7\l  %114 = getelementptr inbounds float, float addrspace(1)* %4, i64 %109\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7\l  %116 = load float, float addrspace(1)* %24, align 4, !tbaa !7\l  %117 = fadd contract float %115, %116\l  store float %117, float addrspace(1)* %24, align 4, !tbaa !7\l  %118 = getelementptr inbounds float, float addrspace(1)* %5, i64 %109\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !7\l  %120 = load float, float addrspace(1)* %25, align 4, !tbaa !7\l  %121 = fadd contract float %119, %120\l  store float %121, float addrspace(1)* %25, align 4, !tbaa !7\l  %122 = add nuw nsw i32 %105, 1\l  %123 = add i32 %106, 1\l  %124 = icmp eq i32 %123, %28\l  br i1 %124, label %125, label %104, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5ca4c30:s0 -> Node0x5ca14d0;
	Node0x5ca4c30:s1 -> Node0x5ca4c30;
	Node0x5ca14d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%125:\l125:                                              \l  %126 = load float, float addrspace(1)* %23, align 4, !tbaa !7\l  %127 = sitofp i32 %8 to float\l  %128 = fdiv contract float %126, %127\l  store float %128, float addrspace(1)* %23, align 4, !tbaa !7\l  %129 = load float, float addrspace(1)* %24, align 4, !tbaa !7\l  %130 = fdiv contract float %129, %127\l  store float %130, float addrspace(1)* %24, align 4, !tbaa !7\l  %131 = load float, float addrspace(1)* %25, align 4, !tbaa !7\l  %132 = fdiv contract float %131, %127\l  store float %132, float addrspace(1)* %25, align 4, !tbaa !7\l  br label %133\l}"];
	Node0x5ca14d0 -> Node0x5c9fd10;
	Node0x5c9fd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%133:\l133:                                              \l  ret void\l}"];
}
