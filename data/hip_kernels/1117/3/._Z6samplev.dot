digraph "CFG for '_Z6samplev' function" {
	label="CFG for '_Z6samplev' function";

	Node0x55de020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%0:\l  %1 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %2 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = sext i32 %1 to i64\l  %5 = sext i32 %2 to i64\l  %6 = add nsw i64 %4, %5\l  %7 = zext i32 %3 to i64\l  %8 = add nsw i64 %6, %7\l  %9 = icmp eq i64 %8, 10\l  br i1 %9, label %10, label %481\l|{<s0>T|<s1>F}}"];
	Node0x55de020:s0 -> Node0x55df2a0;
	Node0x55de020:s1 -> Node0x55dfc60;
	Node0x55df2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%10:\l10:                                               \l  %11 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 24\l  %13 = bitcast i8 addrspace(4)* %12 to i64 addrspace(4)*\l  %14 = load i64, i64 addrspace(4)* %13, align 8, !tbaa !5\l  %15 = inttoptr i64 %14 to i8 addrspace(1)*\l  %16 = addrspacecast i8 addrspace(1)* %15 to i8*\l  %17 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %18 = extractelement \<2 x i64\> %17, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([18 x i8], [18 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %19, label %23\l|{<s0>T|<s1>F}}"];
	Node0x55df2a0:s0 -> Node0x55e0c20;
	Node0x55df2a0:s1 -> Node0x55e1610;
	Node0x55e0c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%19:\l19:                                               \l  %20 = and i64 %18, -225\l  %21 = or i64 %20, 32\l  %22 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %21, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %464\l}"];
	Node0x55e0c20 -> Node0x55e18f0;
	Node0x55e1610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%23:\l23:                                               \l  %24 = and i64 %18, 2\l  %25 = and i64 %18, -3\l  %26 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %25, i64 0\l  br label %27\l}"];
	Node0x55e1610 -> Node0x55e2490;
	Node0x55e2490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%27:\l27:                                               \l  %28 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([18 x i8], [18 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([18 x i8], [18 x i8] addrspace(4)*\l... @.str, i64 0, i64 17) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([18 x i8]* addrspacecast ([18 x i8] addrspace(4)* @.str to [18 x i8]*) to\l... i64)), i64 1))), %23 ], [ %461, %453 ]\l  %29 = phi i8 addrspace(4)* [ getelementptr inbounds ([18 x i8], [18 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %23 ], [ %462, %453 ]\l  %30 = phi \<2 x i64\> [ %26, %23 ], [ %460, %453 ]\l  %31 = icmp ugt i64 %28, 56\l  %32 = extractelement \<2 x i64\> %30, i64 0\l  %33 = or i64 %32, %24\l  %34 = insertelement \<2 x i64\> poison, i64 %33, i64 0\l  %35 = select i1 %31, \<2 x i64\> %30, \<2 x i64\> %34\l  %36 = tail call i64 @llvm.umin.i64(i64 %28, i64 56)\l  %37 = trunc i64 %36 to i32\l  %38 = extractelement \<2 x i64\> %35, i64 0\l  %39 = icmp ugt i32 %37, 7\l  br i1 %39, label %42, label %40\l|{<s0>T|<s1>F}}"];
	Node0x55e2490:s0 -> Node0x55e3510;
	Node0x55e2490:s1 -> Node0x55e35a0;
	Node0x55e35a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%40:\l40:                                               \l  %41 = icmp eq i32 %37, 0\l  br i1 %41, label %95, label %82\l|{<s0>T|<s1>F}}"];
	Node0x55e35a0:s0 -> Node0x55e37a0;
	Node0x55e35a0:s1 -> Node0x55e37f0;
	Node0x55e3510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%42:\l42:                                               \l  %43 = load i8, i8 addrspace(4)* %29, align 1, !tbaa !9\l  %44 = zext i8 %43 to i64\l  %45 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 1\l  %46 = load i8, i8 addrspace(4)* %45, align 1, !tbaa !9\l  %47 = zext i8 %46 to i64\l  %48 = shl nuw nsw i64 %47, 8\l  %49 = or i64 %48, %44\l  %50 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 2\l  %51 = load i8, i8 addrspace(4)* %50, align 1, !tbaa !9\l  %52 = zext i8 %51 to i64\l  %53 = shl nuw nsw i64 %52, 16\l  %54 = or i64 %49, %53\l  %55 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 3\l  %56 = load i8, i8 addrspace(4)* %55, align 1, !tbaa !9\l  %57 = zext i8 %56 to i64\l  %58 = shl nuw nsw i64 %57, 24\l  %59 = or i64 %54, %58\l  %60 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 4\l  %61 = load i8, i8 addrspace(4)* %60, align 1, !tbaa !9\l  %62 = zext i8 %61 to i64\l  %63 = shl nuw nsw i64 %62, 32\l  %64 = or i64 %59, %63\l  %65 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 5\l  %66 = load i8, i8 addrspace(4)* %65, align 1, !tbaa !9\l  %67 = zext i8 %66 to i64\l  %68 = shl nuw nsw i64 %67, 40\l  %69 = or i64 %64, %68\l  %70 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 6\l  %71 = load i8, i8 addrspace(4)* %70, align 1, !tbaa !9\l  %72 = zext i8 %71 to i64\l  %73 = shl nuw nsw i64 %72, 48\l  %74 = or i64 %69, %73\l  %75 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 7\l  %76 = load i8, i8 addrspace(4)* %75, align 1, !tbaa !9\l  %77 = zext i8 %76 to i64\l  %78 = shl nuw i64 %77, 56\l  %79 = or i64 %74, %78\l  %80 = add nsw i32 %37, -8\l  %81 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 8\l  br label %95\l}"];
	Node0x55e3510 -> Node0x55e37a0;
	Node0x55e37f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  %83 = phi i32 [ %93, %82 ], [ 0, %40 ]\l  %84 = phi i64 [ %92, %82 ], [ 0, %40 ]\l  %85 = zext i32 %83 to i64\l  %86 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 %85\l  %87 = load i8, i8 addrspace(4)* %86, align 1, !tbaa !9\l  %88 = zext i8 %87 to i64\l  %89 = shl i32 %83, 3\l  %90 = zext i32 %89 to i64\l  %91 = shl nuw i64 %88, %90\l  %92 = or i64 %91, %84\l  %93 = add nuw nsw i32 %83, 1\l  %94 = icmp eq i32 %93, %37\l  br i1 %94, label %95, label %82, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x55e37f0:s0 -> Node0x55e37a0;
	Node0x55e37f0:s1 -> Node0x55e37f0;
	Node0x55e37a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%95:\l95:                                               \l  %96 = phi i8 addrspace(4)* [ %81, %42 ], [ %29, %40 ], [ %29, %82 ]\l  %97 = phi i32 [ %80, %42 ], [ 0, %40 ], [ 0, %82 ]\l  %98 = phi i64 [ %79, %42 ], [ 0, %40 ], [ %92, %82 ]\l  %99 = icmp ugt i32 %97, 7\l  br i1 %99, label %102, label %100\l|{<s0>T|<s1>F}}"];
	Node0x55e37a0:s0 -> Node0x55e64d0;
	Node0x55e37a0:s1 -> Node0x55e6520;
	Node0x55e6520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%100:\l100:                                              \l  %101 = icmp eq i32 %97, 0\l  br i1 %101, label %155, label %142\l|{<s0>T|<s1>F}}"];
	Node0x55e6520:s0 -> Node0x55e66f0;
	Node0x55e6520:s1 -> Node0x55e6740;
	Node0x55e64d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%102:\l102:                                              \l  %103 = load i8, i8 addrspace(4)* %96, align 1, !tbaa !9\l  %104 = zext i8 %103 to i64\l  %105 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 1\l  %106 = load i8, i8 addrspace(4)* %105, align 1, !tbaa !9\l  %107 = zext i8 %106 to i64\l  %108 = shl nuw nsw i64 %107, 8\l  %109 = or i64 %108, %104\l  %110 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 2\l  %111 = load i8, i8 addrspace(4)* %110, align 1, !tbaa !9\l  %112 = zext i8 %111 to i64\l  %113 = shl nuw nsw i64 %112, 16\l  %114 = or i64 %109, %113\l  %115 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 3\l  %116 = load i8, i8 addrspace(4)* %115, align 1, !tbaa !9\l  %117 = zext i8 %116 to i64\l  %118 = shl nuw nsw i64 %117, 24\l  %119 = or i64 %114, %118\l  %120 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 4\l  %121 = load i8, i8 addrspace(4)* %120, align 1, !tbaa !9\l  %122 = zext i8 %121 to i64\l  %123 = shl nuw nsw i64 %122, 32\l  %124 = or i64 %119, %123\l  %125 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 5\l  %126 = load i8, i8 addrspace(4)* %125, align 1, !tbaa !9\l  %127 = zext i8 %126 to i64\l  %128 = shl nuw nsw i64 %127, 40\l  %129 = or i64 %124, %128\l  %130 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 6\l  %131 = load i8, i8 addrspace(4)* %130, align 1, !tbaa !9\l  %132 = zext i8 %131 to i64\l  %133 = shl nuw nsw i64 %132, 48\l  %134 = or i64 %129, %133\l  %135 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 7\l  %136 = load i8, i8 addrspace(4)* %135, align 1, !tbaa !9\l  %137 = zext i8 %136 to i64\l  %138 = shl nuw i64 %137, 56\l  %139 = or i64 %134, %138\l  %140 = add nsw i32 %97, -8\l  %141 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 8\l  br label %155\l}"];
	Node0x55e64d0 -> Node0x55e66f0;
	Node0x55e6740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%142:\l142:                                              \l  %143 = phi i32 [ %153, %142 ], [ 0, %100 ]\l  %144 = phi i64 [ %152, %142 ], [ 0, %100 ]\l  %145 = zext i32 %143 to i64\l  %146 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 %145\l  %147 = load i8, i8 addrspace(4)* %146, align 1, !tbaa !9\l  %148 = zext i8 %147 to i64\l  %149 = shl i32 %143, 3\l  %150 = zext i32 %149 to i64\l  %151 = shl nuw i64 %148, %150\l  %152 = or i64 %151, %144\l  %153 = add nuw nsw i32 %143, 1\l  %154 = icmp eq i32 %153, %97\l  br i1 %154, label %155, label %142\l|{<s0>T|<s1>F}}"];
	Node0x55e6740:s0 -> Node0x55e66f0;
	Node0x55e6740:s1 -> Node0x55e6740;
	Node0x55e66f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%155:\l155:                                              \l  %156 = phi i8 addrspace(4)* [ %141, %102 ], [ %96, %100 ], [ %96, %142 ]\l  %157 = phi i32 [ %140, %102 ], [ 0, %100 ], [ 0, %142 ]\l  %158 = phi i64 [ %139, %102 ], [ 0, %100 ], [ %152, %142 ]\l  %159 = icmp ugt i32 %157, 7\l  br i1 %159, label %162, label %160\l|{<s0>T|<s1>F}}"];
	Node0x55e66f0:s0 -> Node0x55e8c10;
	Node0x55e66f0:s1 -> Node0x55e8c60;
	Node0x55e8c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%160:\l160:                                              \l  %161 = icmp eq i32 %157, 0\l  br i1 %161, label %215, label %202\l|{<s0>T|<s1>F}}"];
	Node0x55e8c60:s0 -> Node0x55e8df0;
	Node0x55e8c60:s1 -> Node0x55e8e40;
	Node0x55e8c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%162:\l162:                                              \l  %163 = load i8, i8 addrspace(4)* %156, align 1, !tbaa !9\l  %164 = zext i8 %163 to i64\l  %165 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 1\l  %166 = load i8, i8 addrspace(4)* %165, align 1, !tbaa !9\l  %167 = zext i8 %166 to i64\l  %168 = shl nuw nsw i64 %167, 8\l  %169 = or i64 %168, %164\l  %170 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 2\l  %171 = load i8, i8 addrspace(4)* %170, align 1, !tbaa !9\l  %172 = zext i8 %171 to i64\l  %173 = shl nuw nsw i64 %172, 16\l  %174 = or i64 %169, %173\l  %175 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 3\l  %176 = load i8, i8 addrspace(4)* %175, align 1, !tbaa !9\l  %177 = zext i8 %176 to i64\l  %178 = shl nuw nsw i64 %177, 24\l  %179 = or i64 %174, %178\l  %180 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 4\l  %181 = load i8, i8 addrspace(4)* %180, align 1, !tbaa !9\l  %182 = zext i8 %181 to i64\l  %183 = shl nuw nsw i64 %182, 32\l  %184 = or i64 %179, %183\l  %185 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 5\l  %186 = load i8, i8 addrspace(4)* %185, align 1, !tbaa !9\l  %187 = zext i8 %186 to i64\l  %188 = shl nuw nsw i64 %187, 40\l  %189 = or i64 %184, %188\l  %190 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 6\l  %191 = load i8, i8 addrspace(4)* %190, align 1, !tbaa !9\l  %192 = zext i8 %191 to i64\l  %193 = shl nuw nsw i64 %192, 48\l  %194 = or i64 %189, %193\l  %195 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 7\l  %196 = load i8, i8 addrspace(4)* %195, align 1, !tbaa !9\l  %197 = zext i8 %196 to i64\l  %198 = shl nuw i64 %197, 56\l  %199 = or i64 %194, %198\l  %200 = add nsw i32 %157, -8\l  %201 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 8\l  br label %215\l}"];
	Node0x55e8c10 -> Node0x55e8df0;
	Node0x55e8e40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%202:\l202:                                              \l  %203 = phi i32 [ %213, %202 ], [ 0, %160 ]\l  %204 = phi i64 [ %212, %202 ], [ 0, %160 ]\l  %205 = zext i32 %203 to i64\l  %206 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 %205\l  %207 = load i8, i8 addrspace(4)* %206, align 1, !tbaa !9\l  %208 = zext i8 %207 to i64\l  %209 = shl i32 %203, 3\l  %210 = zext i32 %209 to i64\l  %211 = shl nuw i64 %208, %210\l  %212 = or i64 %211, %204\l  %213 = add nuw nsw i32 %203, 1\l  %214 = icmp eq i32 %213, %157\l  br i1 %214, label %215, label %202\l|{<s0>T|<s1>F}}"];
	Node0x55e8e40:s0 -> Node0x55e8df0;
	Node0x55e8e40:s1 -> Node0x55e8e40;
	Node0x55e8df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%215:\l215:                                              \l  %216 = phi i8 addrspace(4)* [ %201, %162 ], [ %156, %160 ], [ %156, %202 ]\l  %217 = phi i32 [ %200, %162 ], [ 0, %160 ], [ 0, %202 ]\l  %218 = phi i64 [ %199, %162 ], [ 0, %160 ], [ %212, %202 ]\l  %219 = icmp ugt i32 %217, 7\l  br i1 %219, label %222, label %220\l|{<s0>T|<s1>F}}"];
	Node0x55e8df0:s0 -> Node0x55eae90;
	Node0x55e8df0:s1 -> Node0x55eaee0;
	Node0x55eaee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%220:\l220:                                              \l  %221 = icmp eq i32 %217, 0\l  br i1 %221, label %275, label %262\l|{<s0>T|<s1>F}}"];
	Node0x55eaee0:s0 -> Node0x55eb070;
	Node0x55eaee0:s1 -> Node0x55eb0c0;
	Node0x55eae90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%222:\l222:                                              \l  %223 = load i8, i8 addrspace(4)* %216, align 1, !tbaa !9\l  %224 = zext i8 %223 to i64\l  %225 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 1\l  %226 = load i8, i8 addrspace(4)* %225, align 1, !tbaa !9\l  %227 = zext i8 %226 to i64\l  %228 = shl nuw nsw i64 %227, 8\l  %229 = or i64 %228, %224\l  %230 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 2\l  %231 = load i8, i8 addrspace(4)* %230, align 1, !tbaa !9\l  %232 = zext i8 %231 to i64\l  %233 = shl nuw nsw i64 %232, 16\l  %234 = or i64 %229, %233\l  %235 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 3\l  %236 = load i8, i8 addrspace(4)* %235, align 1, !tbaa !9\l  %237 = zext i8 %236 to i64\l  %238 = shl nuw nsw i64 %237, 24\l  %239 = or i64 %234, %238\l  %240 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 4\l  %241 = load i8, i8 addrspace(4)* %240, align 1, !tbaa !9\l  %242 = zext i8 %241 to i64\l  %243 = shl nuw nsw i64 %242, 32\l  %244 = or i64 %239, %243\l  %245 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 5\l  %246 = load i8, i8 addrspace(4)* %245, align 1, !tbaa !9\l  %247 = zext i8 %246 to i64\l  %248 = shl nuw nsw i64 %247, 40\l  %249 = or i64 %244, %248\l  %250 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 6\l  %251 = load i8, i8 addrspace(4)* %250, align 1, !tbaa !9\l  %252 = zext i8 %251 to i64\l  %253 = shl nuw nsw i64 %252, 48\l  %254 = or i64 %249, %253\l  %255 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 7\l  %256 = load i8, i8 addrspace(4)* %255, align 1, !tbaa !9\l  %257 = zext i8 %256 to i64\l  %258 = shl nuw i64 %257, 56\l  %259 = or i64 %254, %258\l  %260 = add nsw i32 %217, -8\l  %261 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 8\l  br label %275\l}"];
	Node0x55eae90 -> Node0x55eb070;
	Node0x55eb0c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%262:\l262:                                              \l  %263 = phi i32 [ %273, %262 ], [ 0, %220 ]\l  %264 = phi i64 [ %272, %262 ], [ 0, %220 ]\l  %265 = zext i32 %263 to i64\l  %266 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 %265\l  %267 = load i8, i8 addrspace(4)* %266, align 1, !tbaa !9\l  %268 = zext i8 %267 to i64\l  %269 = shl i32 %263, 3\l  %270 = zext i32 %269 to i64\l  %271 = shl nuw i64 %268, %270\l  %272 = or i64 %271, %264\l  %273 = add nuw nsw i32 %263, 1\l  %274 = icmp eq i32 %273, %217\l  br i1 %274, label %275, label %262\l|{<s0>T|<s1>F}}"];
	Node0x55eb0c0:s0 -> Node0x55eb070;
	Node0x55eb0c0:s1 -> Node0x55eb0c0;
	Node0x55eb070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%275:\l275:                                              \l  %276 = phi i8 addrspace(4)* [ %261, %222 ], [ %216, %220 ], [ %216, %262 ]\l  %277 = phi i32 [ %260, %222 ], [ 0, %220 ], [ 0, %262 ]\l  %278 = phi i64 [ %259, %222 ], [ 0, %220 ], [ %272, %262 ]\l  %279 = icmp ugt i32 %277, 7\l  br i1 %279, label %282, label %280\l|{<s0>T|<s1>F}}"];
	Node0x55eb070:s0 -> Node0x55ed8e0;
	Node0x55eb070:s1 -> Node0x55ed930;
	Node0x55ed930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%280:\l280:                                              \l  %281 = icmp eq i32 %277, 0\l  br i1 %281, label %335, label %322\l|{<s0>T|<s1>F}}"];
	Node0x55ed930:s0 -> Node0x55edac0;
	Node0x55ed930:s1 -> Node0x55edb10;
	Node0x55ed8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%282:\l282:                                              \l  %283 = load i8, i8 addrspace(4)* %276, align 1, !tbaa !9\l  %284 = zext i8 %283 to i64\l  %285 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 1\l  %286 = load i8, i8 addrspace(4)* %285, align 1, !tbaa !9\l  %287 = zext i8 %286 to i64\l  %288 = shl nuw nsw i64 %287, 8\l  %289 = or i64 %288, %284\l  %290 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 2\l  %291 = load i8, i8 addrspace(4)* %290, align 1, !tbaa !9\l  %292 = zext i8 %291 to i64\l  %293 = shl nuw nsw i64 %292, 16\l  %294 = or i64 %289, %293\l  %295 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 3\l  %296 = load i8, i8 addrspace(4)* %295, align 1, !tbaa !9\l  %297 = zext i8 %296 to i64\l  %298 = shl nuw nsw i64 %297, 24\l  %299 = or i64 %294, %298\l  %300 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 4\l  %301 = load i8, i8 addrspace(4)* %300, align 1, !tbaa !9\l  %302 = zext i8 %301 to i64\l  %303 = shl nuw nsw i64 %302, 32\l  %304 = or i64 %299, %303\l  %305 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 5\l  %306 = load i8, i8 addrspace(4)* %305, align 1, !tbaa !9\l  %307 = zext i8 %306 to i64\l  %308 = shl nuw nsw i64 %307, 40\l  %309 = or i64 %304, %308\l  %310 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 6\l  %311 = load i8, i8 addrspace(4)* %310, align 1, !tbaa !9\l  %312 = zext i8 %311 to i64\l  %313 = shl nuw nsw i64 %312, 48\l  %314 = or i64 %309, %313\l  %315 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 7\l  %316 = load i8, i8 addrspace(4)* %315, align 1, !tbaa !9\l  %317 = zext i8 %316 to i64\l  %318 = shl nuw i64 %317, 56\l  %319 = or i64 %314, %318\l  %320 = add nsw i32 %277, -8\l  %321 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 8\l  br label %335\l}"];
	Node0x55ed8e0 -> Node0x55edac0;
	Node0x55edb10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%322:\l322:                                              \l  %323 = phi i32 [ %333, %322 ], [ 0, %280 ]\l  %324 = phi i64 [ %332, %322 ], [ 0, %280 ]\l  %325 = zext i32 %323 to i64\l  %326 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 %325\l  %327 = load i8, i8 addrspace(4)* %326, align 1, !tbaa !9\l  %328 = zext i8 %327 to i64\l  %329 = shl i32 %323, 3\l  %330 = zext i32 %329 to i64\l  %331 = shl nuw i64 %328, %330\l  %332 = or i64 %331, %324\l  %333 = add nuw nsw i32 %323, 1\l  %334 = icmp eq i32 %333, %277\l  br i1 %334, label %335, label %322\l|{<s0>T|<s1>F}}"];
	Node0x55edb10:s0 -> Node0x55edac0;
	Node0x55edb10:s1 -> Node0x55edb10;
	Node0x55edac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%335:\l335:                                              \l  %336 = phi i8 addrspace(4)* [ %321, %282 ], [ %276, %280 ], [ %276, %322 ]\l  %337 = phi i32 [ %320, %282 ], [ 0, %280 ], [ 0, %322 ]\l  %338 = phi i64 [ %319, %282 ], [ 0, %280 ], [ %332, %322 ]\l  %339 = icmp ugt i32 %337, 7\l  br i1 %339, label %342, label %340\l|{<s0>T|<s1>F}}"];
	Node0x55edac0:s0 -> Node0x55def80;
	Node0x55edac0:s1 -> Node0x55defd0;
	Node0x55defd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%340:\l340:                                              \l  %341 = icmp eq i32 %337, 0\l  br i1 %341, label %395, label %382\l|{<s0>T|<s1>F}}"];
	Node0x55defd0:s0 -> Node0x55df160;
	Node0x55defd0:s1 -> Node0x55df1b0;
	Node0x55def80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%342:\l342:                                              \l  %343 = load i8, i8 addrspace(4)* %336, align 1, !tbaa !9\l  %344 = zext i8 %343 to i64\l  %345 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 1\l  %346 = load i8, i8 addrspace(4)* %345, align 1, !tbaa !9\l  %347 = zext i8 %346 to i64\l  %348 = shl nuw nsw i64 %347, 8\l  %349 = or i64 %348, %344\l  %350 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 2\l  %351 = load i8, i8 addrspace(4)* %350, align 1, !tbaa !9\l  %352 = zext i8 %351 to i64\l  %353 = shl nuw nsw i64 %352, 16\l  %354 = or i64 %349, %353\l  %355 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 3\l  %356 = load i8, i8 addrspace(4)* %355, align 1, !tbaa !9\l  %357 = zext i8 %356 to i64\l  %358 = shl nuw nsw i64 %357, 24\l  %359 = or i64 %354, %358\l  %360 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 4\l  %361 = load i8, i8 addrspace(4)* %360, align 1, !tbaa !9\l  %362 = zext i8 %361 to i64\l  %363 = shl nuw nsw i64 %362, 32\l  %364 = or i64 %359, %363\l  %365 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 5\l  %366 = load i8, i8 addrspace(4)* %365, align 1, !tbaa !9\l  %367 = zext i8 %366 to i64\l  %368 = shl nuw nsw i64 %367, 40\l  %369 = or i64 %364, %368\l  %370 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 6\l  %371 = load i8, i8 addrspace(4)* %370, align 1, !tbaa !9\l  %372 = zext i8 %371 to i64\l  %373 = shl nuw nsw i64 %372, 48\l  %374 = or i64 %369, %373\l  %375 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 7\l  %376 = load i8, i8 addrspace(4)* %375, align 1, !tbaa !9\l  %377 = zext i8 %376 to i64\l  %378 = shl nuw i64 %377, 56\l  %379 = or i64 %374, %378\l  %380 = add nsw i32 %337, -8\l  %381 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 8\l  br label %395\l}"];
	Node0x55def80 -> Node0x55df160;
	Node0x55df1b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%382:\l382:                                              \l  %383 = phi i32 [ %393, %382 ], [ 0, %340 ]\l  %384 = phi i64 [ %392, %382 ], [ 0, %340 ]\l  %385 = zext i32 %383 to i64\l  %386 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 %385\l  %387 = load i8, i8 addrspace(4)* %386, align 1, !tbaa !9\l  %388 = zext i8 %387 to i64\l  %389 = shl i32 %383, 3\l  %390 = zext i32 %389 to i64\l  %391 = shl nuw i64 %388, %390\l  %392 = or i64 %391, %384\l  %393 = add nuw nsw i32 %383, 1\l  %394 = icmp eq i32 %393, %337\l  br i1 %394, label %395, label %382\l|{<s0>T|<s1>F}}"];
	Node0x55df1b0:s0 -> Node0x55df160;
	Node0x55df1b0:s1 -> Node0x55df1b0;
	Node0x55df160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%395:\l395:                                              \l  %396 = phi i8 addrspace(4)* [ %381, %342 ], [ %336, %340 ], [ %336, %382 ]\l  %397 = phi i32 [ %380, %342 ], [ 0, %340 ], [ 0, %382 ]\l  %398 = phi i64 [ %379, %342 ], [ 0, %340 ], [ %392, %382 ]\l  %399 = icmp ugt i32 %397, 7\l  br i1 %399, label %402, label %400\l|{<s0>T|<s1>F}}"];
	Node0x55df160:s0 -> Node0x55f2dc0;
	Node0x55df160:s1 -> Node0x55f2e10;
	Node0x55f2e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%400:\l400:                                              \l  %401 = icmp eq i32 %397, 0\l  br i1 %401, label %453, label %440\l|{<s0>T|<s1>F}}"];
	Node0x55f2e10:s0 -> Node0x55e2930;
	Node0x55f2e10:s1 -> Node0x55f2fa0;
	Node0x55f2dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%402:\l402:                                              \l  %403 = load i8, i8 addrspace(4)* %396, align 1, !tbaa !9\l  %404 = zext i8 %403 to i64\l  %405 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 1\l  %406 = load i8, i8 addrspace(4)* %405, align 1, !tbaa !9\l  %407 = zext i8 %406 to i64\l  %408 = shl nuw nsw i64 %407, 8\l  %409 = or i64 %408, %404\l  %410 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 2\l  %411 = load i8, i8 addrspace(4)* %410, align 1, !tbaa !9\l  %412 = zext i8 %411 to i64\l  %413 = shl nuw nsw i64 %412, 16\l  %414 = or i64 %409, %413\l  %415 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 3\l  %416 = load i8, i8 addrspace(4)* %415, align 1, !tbaa !9\l  %417 = zext i8 %416 to i64\l  %418 = shl nuw nsw i64 %417, 24\l  %419 = or i64 %414, %418\l  %420 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 4\l  %421 = load i8, i8 addrspace(4)* %420, align 1, !tbaa !9\l  %422 = zext i8 %421 to i64\l  %423 = shl nuw nsw i64 %422, 32\l  %424 = or i64 %419, %423\l  %425 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 5\l  %426 = load i8, i8 addrspace(4)* %425, align 1, !tbaa !9\l  %427 = zext i8 %426 to i64\l  %428 = shl nuw nsw i64 %427, 40\l  %429 = or i64 %424, %428\l  %430 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 6\l  %431 = load i8, i8 addrspace(4)* %430, align 1, !tbaa !9\l  %432 = zext i8 %431 to i64\l  %433 = shl nuw nsw i64 %432, 48\l  %434 = or i64 %429, %433\l  %435 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 7\l  %436 = load i8, i8 addrspace(4)* %435, align 1, !tbaa !9\l  %437 = zext i8 %436 to i64\l  %438 = shl nuw i64 %437, 56\l  %439 = or i64 %434, %438\l  br label %453\l}"];
	Node0x55f2dc0 -> Node0x55e2930;
	Node0x55f2fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%440:\l440:                                              \l  %441 = phi i32 [ %451, %440 ], [ 0, %400 ]\l  %442 = phi i64 [ %450, %440 ], [ 0, %400 ]\l  %443 = zext i32 %441 to i64\l  %444 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 %443\l  %445 = load i8, i8 addrspace(4)* %444, align 1, !tbaa !9\l  %446 = zext i8 %445 to i64\l  %447 = shl i32 %441, 3\l  %448 = zext i32 %447 to i64\l  %449 = shl nuw i64 %446, %448\l  %450 = or i64 %449, %442\l  %451 = add nuw nsw i32 %441, 1\l  %452 = icmp eq i32 %451, %397\l  br i1 %452, label %453, label %440\l|{<s0>T|<s1>F}}"];
	Node0x55f2fa0:s0 -> Node0x55e2930;
	Node0x55f2fa0:s1 -> Node0x55f2fa0;
	Node0x55e2930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%453:\l453:                                              \l  %454 = phi i64 [ %439, %402 ], [ 0, %400 ], [ %450, %440 ]\l  %455 = shl nuw nsw i64 %36, 2\l  %456 = add nuw nsw i64 %455, 28\l  %457 = and i64 %456, 480\l  %458 = and i64 %38, -225\l  %459 = or i64 %458, %457\l  %460 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %459, i64 noundef %98, i64 noundef %158, i64 noundef %218, i64\l... noundef %278, i64 noundef %338, i64 noundef %398, i64 noundef %454) #10\l  %461 = sub i64 %28, %36\l  %462 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 %36\l  %463 = icmp eq i64 %461, 0\l  br i1 %463, label %464, label %27\l|{<s0>T|<s1>F}}"];
	Node0x55e2930:s0 -> Node0x55e18f0;
	Node0x55e2930:s1 -> Node0x55e2490;
	Node0x55e18f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%464:\l464:                                              \l  %465 = phi \<2 x i64\> [ %22, %19 ], [ %460, %453 ]\l  %466 = extractelement \<2 x i64\> %465, i64 0\l  %467 = zext i32 %1 to i64\l  %468 = and i64 %466, -225\l  %469 = or i64 %468, 32\l  %470 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %469, i64 noundef %467, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %471 = extractelement \<2 x i64\> %470, i64 0\l  %472 = zext i32 %2 to i64\l  %473 = and i64 %471, -225\l  %474 = or i64 %473, 32\l  %475 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %474, i64 noundef %472, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %476 = extractelement \<2 x i64\> %475, i64 0\l  %477 = zext i32 %3 to i64\l  %478 = and i64 %476, -227\l  %479 = or i64 %478, 34\l  %480 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %479, i64 noundef %477, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %481\l}"];
	Node0x55e18f0 -> Node0x55dfc60;
	Node0x55dfc60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%481:\l481:                                              \l  ret void\l}"];
}
