digraph "CFG for '_Z17copyChunks_kernelPviP15HIP_vector_typeIiLj2EEiPiS_' function" {
	label="CFG for '_Z17copyChunks_kernelPviP15HIP_vector_typeIiLj2EEiPiS_' function";

	Node0x627c3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !7\l  %19 = udiv i32 %18, %15\l  %20 = mul i32 %19, %15\l  %21 = icmp ugt i32 %18, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %7\l  %25 = add i32 %10, %8\l  %26 = add i32 %25, %24\l  %27 = mul i32 %26, %15\l  %28 = add i32 %9, %1\l  %29 = add i32 %28, %27\l  %30 = icmp slt i32 %29, %3\l  br i1 %30, label %31, label %131\l|{<s0>T|<s1>F}}"];
	Node0x627c3a0:s0 -> Node0x627f4c0;
	Node0x627c3a0:s1 -> Node0x627f550;
	Node0x627f4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%31:\l31:                                               \l  %32 = sext i32 %29 to i64\l  %33 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %32, i32 0, i32 0, i32 0, i64 0\l  %34 = load i32, i32 addrspace(1)* %33, align 8, !amdgpu.noclobber !6\l  %35 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %32, i32 0, i32 0, i32 0, i64 1\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !amdgpu.noclobber !6\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %32\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %39 = icmp sgt i32 %36, 0\l  br i1 %39, label %40, label %130\l|{<s0>T|<s1>F}}"];
	Node0x627f4c0:s0 -> Node0x62804e0;
	Node0x627f4c0:s1 -> Node0x6280570;
	Node0x62804e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%40:\l40:                                               \l  %41 = and i32 %36, 7\l  %42 = icmp ult i32 %36, 8\l  br i1 %42, label %114, label %43\l|{<s0>T|<s1>F}}"];
	Node0x62804e0:s0 -> Node0x6280800;
	Node0x62804e0:s1 -> Node0x6280850;
	Node0x6280850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%43:\l43:                                               \l  %44 = and i32 %36, -8\l  br label %45\l}"];
	Node0x6280850 -> Node0x6280a50;
	Node0x6280a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%45:\l45:                                               \l  %46 = phi i32 [ 0, %43 ], [ %111, %45 ]\l  %47 = phi i32 [ 0, %43 ], [ %112, %45 ]\l  %48 = add nsw i32 %46, %34\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %49\l  %51 = load i8, i8 addrspace(1)* %50, align 1, !tbaa !20\l  %52 = add nsw i32 %46, %38\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %53\l  store i8 %51, i8 addrspace(1)* %54, align 1, !tbaa !20\l  %55 = or i32 %46, 1\l  %56 = add nsw i32 %55, %34\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %57\l  %59 = load i8, i8 addrspace(1)* %58, align 1, !tbaa !20\l  %60 = add nsw i32 %55, %38\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %61\l  store i8 %59, i8 addrspace(1)* %62, align 1, !tbaa !20\l  %63 = or i32 %46, 2\l  %64 = add nsw i32 %63, %34\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %65\l  %67 = load i8, i8 addrspace(1)* %66, align 1, !tbaa !20\l  %68 = add nsw i32 %63, %38\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %69\l  store i8 %67, i8 addrspace(1)* %70, align 1, !tbaa !20\l  %71 = or i32 %46, 3\l  %72 = add nsw i32 %71, %34\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %73\l  %75 = load i8, i8 addrspace(1)* %74, align 1, !tbaa !20\l  %76 = add nsw i32 %71, %38\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %77\l  store i8 %75, i8 addrspace(1)* %78, align 1, !tbaa !20\l  %79 = or i32 %46, 4\l  %80 = add nsw i32 %79, %34\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %81\l  %83 = load i8, i8 addrspace(1)* %82, align 1, !tbaa !20\l  %84 = add nsw i32 %79, %38\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %85\l  store i8 %83, i8 addrspace(1)* %86, align 1, !tbaa !20\l  %87 = or i32 %46, 5\l  %88 = add nsw i32 %87, %34\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %89\l  %91 = load i8, i8 addrspace(1)* %90, align 1, !tbaa !20\l  %92 = add nsw i32 %87, %38\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %93\l  store i8 %91, i8 addrspace(1)* %94, align 1, !tbaa !20\l  %95 = or i32 %46, 6\l  %96 = add nsw i32 %95, %34\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %97\l  %99 = load i8, i8 addrspace(1)* %98, align 1, !tbaa !20\l  %100 = add nsw i32 %95, %38\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %101\l  store i8 %99, i8 addrspace(1)* %102, align 1, !tbaa !20\l  %103 = or i32 %46, 7\l  %104 = add nsw i32 %103, %34\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %105\l  %107 = load i8, i8 addrspace(1)* %106, align 1, !tbaa !20\l  %108 = add nsw i32 %103, %38\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %109\l  store i8 %107, i8 addrspace(1)* %110, align 1, !tbaa !20\l  %111 = add nuw nsw i32 %46, 8\l  %112 = add i32 %47, 8\l  %113 = icmp eq i32 %112, %44\l  br i1 %113, label %114, label %45, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x6280a50:s0 -> Node0x6280800;
	Node0x6280a50:s1 -> Node0x6280a50;
	Node0x6280800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%114:\l114:                                              \l  %115 = phi i32 [ 0, %40 ], [ %111, %45 ]\l  %116 = icmp eq i32 %41, 0\l  br i1 %116, label %130, label %117\l|{<s0>T|<s1>F}}"];
	Node0x6280800:s0 -> Node0x6280570;
	Node0x6280800:s1 -> Node0x6284200;
	Node0x6284200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%117:\l117:                                              \l  %118 = phi i32 [ %127, %117 ], [ %115, %114 ]\l  %119 = phi i32 [ %128, %117 ], [ 0, %114 ]\l  %120 = add nsw i32 %118, %34\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %121\l  %123 = load i8, i8 addrspace(1)* %122, align 1, !tbaa !20\l  %124 = add nsw i32 %118, %38\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %125\l  store i8 %123, i8 addrspace(1)* %126, align 1, !tbaa !20\l  %127 = add nuw nsw i32 %118, 1\l  %128 = add i32 %119, 1\l  %129 = icmp eq i32 %128, %41\l  br i1 %129, label %130, label %117, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x6284200:s0 -> Node0x6280570;
	Node0x6284200:s1 -> Node0x6284200;
	Node0x6280570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%130:\l130:                                              \l  store i32 %38, i32 addrspace(1)* %33, align 8\l  store i32 %36, i32 addrspace(1)* %35, align 4\l  br label %131\l}"];
	Node0x6280570 -> Node0x627f550;
	Node0x627f550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%131:\l131:                                              \l  ret void\l}"];
}
