digraph "CFG for '_Z36yMaxDeltaIntegralReplicateFracKernelPKfPfiiiS0_S0_S0_S0_iii' function" {
	label="CFG for '_Z36yMaxDeltaIntegralReplicateFracKernelPKfPfiiiS0_S0_S0_S0_iii' function";

	Node0x62a1d30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = add nsw i32 %3, -1\l  %14 = add i32 %13, %10\l  %15 = sdiv i32 %14, %10\l  %16 = add nsw i32 %4, -1\l  %17 = add i32 %16, %11\l  %18 = sdiv i32 %17, %11\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = shl i32 %19, 4\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %22 = add i32 %20, %21\l  %23 = freeze i32 %22\l  %24 = freeze i32 %18\l  %25 = sdiv i32 %23, %24\l  %26 = mul i32 %25, %24\l  %27 = sub i32 %23, %26\l  %28 = freeze i32 %15\l  %29 = sdiv i32 %25, %28\l  %30 = mul i32 %29, %28\l  %31 = sub i32 %25, %30\l  %32 = icmp slt i32 %29, %2\l  %33 = icmp sgt i32 %15, -1\l  %34 = and i1 %33, %32\l  %35 = icmp sgt i32 %18, -1\l  %36 = select i1 %34, i1 %35, i1 false\l  br i1 %36, label %37, label %146\l|{<s0>T|<s1>F}}"];
	Node0x62a1d30:s0 -> Node0x62a3300;
	Node0x62a1d30:s1 -> Node0x62a4de0;
	Node0x62a3300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%37:\l37:                                               \l  %38 = mul nsw i32 %31, %10\l  %39 = add nsw i32 %38, 1\l  %40 = mul nsw i32 %27, %11\l  %41 = add nsw i32 %40, 1\l  %42 = mul i32 %18, %15\l  %43 = mul i32 %42, %29\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = sext i32 %29 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %5, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %49 = fadd contract float %48, -1.000000e+00\l  %50 = tail call float @llvm.ceil.f32(float %49)\l  %51 = fptosi float %50 to i32\l  %52 = sitofp i32 %51 to float\l  %53 = fsub contract float %52, %48\l  %54 = fadd contract float %53, 1.000000e+00\l  %55 = getelementptr inbounds float, float addrspace(1)* %6, i64 %46\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %57 = tail call float @llvm.floor.f32(float %56)\l  %58 = fptosi float %57 to i32\l  %59 = sitofp i32 %58 to float\l  %60 = fsub contract float %56, %59\l  %61 = getelementptr inbounds float, float addrspace(1)* %7, i64 %46\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %63 = tail call float @llvm.floor.f32(float %62)\l  %64 = fptosi float %63 to i32\l  %65 = add nsw i32 %41, %64\l  %66 = icmp slt i32 %65, %4\l  %67 = add nsw i32 %39, %51\l  %68 = icmp sgt i32 %67, 0\l  %69 = select i1 %66, i1 %68, i1 false\l  br i1 %69, label %70, label %81\l|{<s0>T|<s1>F}}"];
	Node0x62a3300:s0 -> Node0x62a4b70;
	Node0x62a3300:s1 -> Node0x62a80d0;
	Node0x62a4b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%70:\l70:                                               \l  %71 = add i32 %38, %51\l  %72 = tail call i32 @llvm.smin.i32(i32 %13, i32 %71)\l  %73 = tail call i32 @llvm.smax.i32(i32 %72, i32 0)\l  %74 = mul nsw i32 %73, %9\l  %75 = tail call i32 @llvm.smin.i32(i32 %16, i32 %65)\l  %76 = tail call i32 @llvm.smax.i32(i32 %75, i32 0)\l  %77 = add nsw i32 %74, %76\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %8, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %81\l}"];
	Node0x62a4b70 -> Node0x62a80d0;
	Node0x62a80d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%81:\l81:                                               \l  %82 = phi contract float [ %80, %70 ], [ 0.000000e+00, %37 ]\l  %83 = add nsw i32 %39, %58\l  %84 = icmp slt i32 %83, %3\l  %85 = select i1 %66, i1 %84, i1 false\l  br i1 %85, label %86, label %96\l|{<s0>T|<s1>F}}"];
	Node0x62a80d0:s0 -> Node0x62a8f10;
	Node0x62a80d0:s1 -> Node0x62a8fa0;
	Node0x62a8f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%86:\l86:                                               \l  %87 = tail call i32 @llvm.smin.i32(i32 %13, i32 %83)\l  %88 = tail call i32 @llvm.smax.i32(i32 %87, i32 0)\l  %89 = mul nsw i32 %88, %9\l  %90 = tail call i32 @llvm.smin.i32(i32 %16, i32 %65)\l  %91 = tail call i32 @llvm.smax.i32(i32 %90, i32 0)\l  %92 = add nsw i32 %89, %91\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %8, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %96\l}"];
	Node0x62a8f10 -> Node0x62a8fa0;
	Node0x62a8fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%96:\l96:                                               \l  %97 = phi contract float [ %95, %86 ], [ 0.000000e+00, %81 ]\l  %98 = icmp slt i32 %67, %3\l  %99 = select contract i1 %98, float %54, float 1.000000e+00\l  %100 = fmul contract float %99, %82\l  %101 = fadd contract float %100, 0.000000e+00\l  %102 = icmp slt i32 %83, 1\l  %103 = select contract i1 %102, float 1.000000e+00, float %60\l  %104 = fmul contract float %103, %97\l  %105 = fadd contract float %101, %104\l  %106 = tail call i32 @llvm.smin.i32(i32 %83, i32 %3)\l  %107 = tail call i32 @llvm.smax.i32(i32 %106, i32 0)\l  %108 = add nsw i32 %4, 1\l  %109 = mul nsw i32 %107, %108\l  %110 = add nsw i32 %65, 1\l  %111 = tail call i32 @llvm.smin.i32(i32 %110, i32 %4)\l  %112 = tail call i32 @llvm.smax.i32(i32 %111, i32 0)\l  %113 = add nsw i32 %112, %109\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %117 = fadd contract float %116, %105\l  %118 = tail call i32 @llvm.smin.i32(i32 %65, i32 %4)\l  %119 = tail call i32 @llvm.smax.i32(i32 %118, i32 0)\l  %120 = add nsw i32 %109, %119\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %0, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %124 = fsub contract float %117, %123\l  %125 = tail call i32 @llvm.smin.i32(i32 %67, i32 %3)\l  %126 = tail call i32 @llvm.smax.i32(i32 %125, i32 0)\l  %127 = mul nsw i32 %126, %108\l  %128 = add nsw i32 %112, %127\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %0, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %132 = fsub contract float %124, %131\l  %133 = add nsw i32 %127, %119\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %0, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %137 = fadd contract float %136, %132\l  %138 = icmp sgt i32 %65, 0\l  %139 = uitofp i1 %66 to float\l  %140 = select i1 %138, float %139, float 0.000000e+00\l  %141 = fmul contract float %140, %137\l  %142 = mul nsw i32 %31, %18\l  %143 = add nsw i32 %142, %27\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %45, i64 %144\l  store float %141, float addrspace(1)* %145, align 4, !tbaa !5\l  br label %146\l}"];
	Node0x62a8fa0 -> Node0x62a4de0;
	Node0x62a4de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%146:\l146:                                              \l  ret void\l}"];
}
