digraph "CFG for '_Z37accumulateColsInplaceTransposedKernelPfiii' function" {
	label="CFG for '_Z37accumulateColsInplaceTransposedKernelPfiii' function";

	Node0x4612250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 4\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = add i32 %6, %7\l  %9 = mul nsw i32 %2, %1\l  %10 = icmp slt i32 %8, %9\l  br i1 %10, label %11, label %125\l|{<s0>T|<s1>F}}"];
	Node0x4612250:s0 -> Node0x46122e0;
	Node0x4612250:s1 -> Node0x4613ba0;
	Node0x46122e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%11:\l11:                                               \l  %12 = sdiv i32 %8, %2\l  %13 = add nsw i32 %2, 1\l  %14 = mul nsw i32 %12, %13\l  %15 = sext i32 %14 to i64\l  %16 = getelementptr inbounds float, float addrspace(1)* %0, i64 %15\l  store float 0.000000e+00, float addrspace(1)* %16, align 4, !tbaa !5\l  %17 = add nsw i32 %8, 1\l  %18 = add i32 %17, %12\l  %19 = sext i32 %18 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %0, i64 %19\l  store float 0.000000e+00, float addrspace(1)* %20, align 4, !tbaa !5\l  %21 = icmp slt i32 %3, 1\l  br i1 %21, label %125, label %22\l|{<s0>T|<s1>F}}"];
	Node0x46122e0:s0 -> Node0x4613ba0;
	Node0x46122e0:s1 -> Node0x4615590;
	Node0x4615590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%22:\l22:                                               \l  %23 = mul i32 %13, %1\l  %24 = and i32 %3, 7\l  %25 = icmp ult i32 %3, 8\l  br i1 %25, label %106, label %26\l|{<s0>T|<s1>F}}"];
	Node0x4615590:s0 -> Node0x46158b0;
	Node0x4615590:s1 -> Node0x4615900;
	Node0x4615900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%26:\l26:                                               \l  %27 = and i32 %3, -8\l  br label %28\l}"];
	Node0x4615900 -> Node0x4615b00;
	Node0x4615b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%28:\l28:                                               \l  %29 = phi i32 [ 1, %26 ], [ %103, %28 ]\l  %30 = phi double [ 0.000000e+00, %26 ], [ %101, %28 ]\l  %31 = phi i32 [ 0, %26 ], [ %104, %28 ]\l  %32 = mul i32 %23, %29\l  %33 = add nsw i32 %32, %18\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !5\l  %37 = fpext float %36 to double\l  %38 = fadd contract double %30, %37\l  %39 = fptrunc double %38 to float\l  store float %39, float addrspace(1)* %35, align 4, !tbaa !5\l  %40 = add nuw nsw i32 %29, 1\l  %41 = mul i32 %23, %40\l  %42 = add nsw i32 %41, %18\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !5\l  %46 = fpext float %45 to double\l  %47 = fadd contract double %38, %46\l  %48 = fptrunc double %47 to float\l  store float %48, float addrspace(1)* %44, align 4, !tbaa !5\l  %49 = add nuw nsw i32 %29, 2\l  %50 = mul i32 %23, %49\l  %51 = add nsw i32 %50, %18\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !5\l  %55 = fpext float %54 to double\l  %56 = fadd contract double %47, %55\l  %57 = fptrunc double %56 to float\l  store float %57, float addrspace(1)* %53, align 4, !tbaa !5\l  %58 = add nuw nsw i32 %29, 3\l  %59 = mul i32 %23, %58\l  %60 = add nsw i32 %59, %18\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !5\l  %64 = fpext float %63 to double\l  %65 = fadd contract double %56, %64\l  %66 = fptrunc double %65 to float\l  store float %66, float addrspace(1)* %62, align 4, !tbaa !5\l  %67 = add nuw nsw i32 %29, 4\l  %68 = mul i32 %23, %67\l  %69 = add nsw i32 %68, %18\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5\l  %73 = fpext float %72 to double\l  %74 = fadd contract double %65, %73\l  %75 = fptrunc double %74 to float\l  store float %75, float addrspace(1)* %71, align 4, !tbaa !5\l  %76 = add nuw nsw i32 %29, 5\l  %77 = mul i32 %23, %76\l  %78 = add nsw i32 %77, %18\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !5\l  %82 = fpext float %81 to double\l  %83 = fadd contract double %74, %82\l  %84 = fptrunc double %83 to float\l  store float %84, float addrspace(1)* %80, align 4, !tbaa !5\l  %85 = add nuw nsw i32 %29, 6\l  %86 = mul i32 %23, %85\l  %87 = add nsw i32 %86, %18\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !5\l  %91 = fpext float %90 to double\l  %92 = fadd contract double %83, %91\l  %93 = fptrunc double %92 to float\l  store float %93, float addrspace(1)* %89, align 4, !tbaa !5\l  %94 = add nuw i32 %29, 7\l  %95 = mul i32 %23, %94\l  %96 = add nsw i32 %95, %18\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !5\l  %100 = fpext float %99 to double\l  %101 = fadd contract double %92, %100\l  %102 = fptrunc double %101 to float\l  store float %102, float addrspace(1)* %98, align 4, !tbaa !5\l  %103 = add nuw i32 %29, 8\l  %104 = add i32 %31, 8\l  %105 = icmp eq i32 %104, %27\l  br i1 %105, label %106, label %28, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x4615b00:s0 -> Node0x46158b0;
	Node0x4615b00:s1 -> Node0x4615b00;
	Node0x46158b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%106:\l106:                                              \l  %107 = phi i32 [ 1, %22 ], [ %103, %28 ]\l  %108 = phi double [ 0.000000e+00, %22 ], [ %101, %28 ]\l  %109 = icmp eq i32 %24, 0\l  br i1 %109, label %125, label %110\l|{<s0>T|<s1>F}}"];
	Node0x46158b0:s0 -> Node0x4613ba0;
	Node0x46158b0:s1 -> Node0x4619120;
	Node0x4619120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%110:\l110:                                              \l  %111 = phi i32 [ %122, %110 ], [ %107, %106 ]\l  %112 = phi double [ %120, %110 ], [ %108, %106 ]\l  %113 = phi i32 [ %123, %110 ], [ 0, %106 ]\l  %114 = mul i32 %23, %111\l  %115 = add nsw i32 %114, %18\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %0, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !5\l  %119 = fpext float %118 to double\l  %120 = fadd contract double %112, %119\l  %121 = fptrunc double %120 to float\l  store float %121, float addrspace(1)* %117, align 4, !tbaa !5\l  %122 = add nuw i32 %111, 1\l  %123 = add i32 %113, 1\l  %124 = icmp eq i32 %123, %24\l  br i1 %124, label %125, label %110, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4619120:s0 -> Node0x4613ba0;
	Node0x4619120:s1 -> Node0x4619120;
	Node0x4613ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%125:\l125:                                              \l  ret void\l}"];
}
