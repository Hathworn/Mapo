digraph "CFG for '_Z27xMinDeltaIntegralFracKernelPKfiPfiiiiiS0_S0_S0_S0_ii' function" {
	label="CFG for '_Z27xMinDeltaIntegralFracKernelPKfiPfiiiiiS0_S0_S0_S0_ii' function";

	Node0x50f8b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = shl i32 %15, 8\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %18 = add i32 %16, %17\l  %19 = freeze i32 %18\l  %20 = freeze i32 %7\l  %21 = sdiv i32 %19, %20\l  %22 = mul i32 %21, %20\l  %23 = sub i32 %19, %22\l  %24 = add nsw i32 %23, 1\l  %25 = freeze i32 %6\l  %26 = sdiv i32 %21, %25\l  %27 = freeze i32 %26\l  %28 = freeze i32 %5\l  %29 = sdiv i32 %27, %28\l  %30 = mul nsw i32 %29, %1\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = mul nsw i32 %29, %13\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %11, i64 %34\l  %36 = freeze i32 %29\l  %37 = freeze i32 %4\l  %38 = sdiv i32 %36, %37\l  %39 = icmp slt i32 %38, %3\l  br i1 %39, label %40, label %146\l|{<s0>T|<s1>F}}"];
	Node0x50f8b30:s0 -> Node0x50fbb30;
	Node0x50f8b30:s1 -> Node0x50fbbc0;
	Node0x50fbb30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%40:\l40:                                               \l  %41 = mul i32 %38, %37\l  %42 = sub i32 %36, %41\l  %43 = mul nsw i32 %42, %5\l  %44 = mul i32 %29, %28\l  %45 = sub i32 %27, %44\l  %46 = add nsw i32 %43, %45\l  %47 = mul i32 %26, %25\l  %48 = sub i32 %21, %47\l  %49 = sext i32 %18 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %2, i64 %49\l  %51 = sext i32 %46 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %8, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %54 = fadd contract float %53, -1.000000e+00\l  %55 = tail call float @llvm.ceil.f32(float %54)\l  %56 = fptosi float %55 to i32\l  %57 = getelementptr inbounds float, float addrspace(1)* %9, i64 %51\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %59 = fadd contract float %58, -1.000000e+00\l  %60 = tail call float @llvm.ceil.f32(float %59)\l  %61 = fptosi float %60 to i32\l  %62 = sitofp i32 %61 to float\l  %63 = fsub contract float %62, %58\l  %64 = fadd contract float %63, 1.000000e+00\l  %65 = getelementptr inbounds float, float addrspace(1)* %10, i64 %51\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %67 = tail call float @llvm.floor.f32(float %66)\l  %68 = fptosi float %67 to i32\l  %69 = sitofp i32 %68 to float\l  %70 = fsub contract float %66, %69\l  %71 = add nsw i32 %24, %61\l  %72 = icmp sgt i32 %71, 0\l  %73 = icmp sle i32 %71, %7\l  %74 = and i1 %72, %73\l  %75 = add i32 %48, %56\l  %76 = add i32 %75, 1\l  %77 = icmp ult i32 %75, 2147483647\l  %78 = and i1 %77, %74\l  %79 = uitofp i1 %78 to float\l  %80 = add nsw i32 %6, -1\l  %81 = tail call i32 @llvm.smin.i32(i32 %80, i32 %75)\l  %82 = tail call i32 @llvm.smax.i32(i32 %81, i32 0)\l  %83 = mul nsw i32 %82, %12\l  %84 = add nsw i32 %7, -1\l  %85 = add i32 %23, %61\l  %86 = tail call i32 @llvm.smin.i32(i32 %84, i32 %85)\l  %87 = tail call i32 @llvm.smax.i32(i32 %86, i32 0)\l  %88 = add nsw i32 %83, %87\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %35, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %92 = fmul contract float %91, %79\l  %93 = add nsw i32 %24, %68\l  %94 = icmp sgt i32 %93, -1\l  %95 = icmp slt i32 %93, %7\l  %96 = and i1 %94, %95\l  %97 = and i1 %77, %96\l  %98 = uitofp i1 %97 to float\l  %99 = tail call i32 @llvm.smin.i32(i32 %84, i32 %93)\l  %100 = tail call i32 @llvm.smax.i32(i32 %99, i32 0)\l  %101 = add nsw i32 %83, %100\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %35, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %105 = fmul contract float %104, %98\l  %106 = fmul contract float %70, %105\l  %107 = fadd contract float %106, 0.000000e+00\l  %108 = fmul contract float %64, %92\l  %109 = fadd contract float %108, %107\l  %110 = tail call i32 @llvm.smin.i32(i32 %76, i32 %6)\l  %111 = tail call i32 @llvm.smax.i32(i32 %110, i32 0)\l  %112 = add nsw i32 %7, 1\l  %113 = mul nsw i32 %111, %112\l  %114 = tail call i32 @llvm.smin.i32(i32 %93, i32 %7)\l  %115 = tail call i32 @llvm.smax.i32(i32 %114, i32 0)\l  %116 = add nsw i32 %115, %113\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %32, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %120 = fadd contract float %119, %109\l  %121 = tail call i32 @llvm.smin.i32(i32 %75, i32 %6)\l  %122 = tail call i32 @llvm.smax.i32(i32 %121, i32 0)\l  %123 = mul nsw i32 %122, %112\l  %124 = add nsw i32 %123, %115\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %32, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %128 = fsub contract float %120, %127\l  %129 = tail call i32 @llvm.smin.i32(i32 %71, i32 %7)\l  %130 = tail call i32 @llvm.smax.i32(i32 %129, i32 0)\l  %131 = add nsw i32 %130, %113\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %32, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %135 = fsub contract float %128, %134\l  %136 = add nsw i32 %123, %130\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %32, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %140 = fadd contract float %139, %135\l  %141 = icmp sle i32 %76, %6\l  %142 = and i1 %77, %141\l  %143 = uitofp i1 %142 to float\l  %144 = fneg contract float %140\l  %145 = fmul contract float %143, %144\l  store float %145, float addrspace(1)* %50, align 4, !tbaa !5\l  br label %146\l}"];
	Node0x50fbb30 -> Node0x50fbbc0;
	Node0x50fbbc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%146:\l146:                                              \l  ret void\l}"];
}
