digraph "CFG for '_Z29updateGradInputVarScaleKernelPfS_iiiS_S_S_S_' function" {
	label="CFG for '_Z29updateGradInputVarScaleKernelPfS_iiiS_S_S_S_' function";

	Node0x497eab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = shl i32 %10, 2\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = shl i32 %14, 2\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %17 = add i32 %15, %16\l  %18 = icmp slt i32 %13, %2\l  %19 = icmp slt i32 %17, %3\l  %20 = select i1 %18, i1 %19, i1 false\l  br i1 %20, label %21, label %124\l|{<s0>T|<s1>F}}"];
	Node0x497eab0:s0 -> Node0x4981ae0;
	Node0x497eab0:s1 -> Node0x4981b70;
	Node0x4981ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%21:\l21:                                               \l  %22 = icmp sgt i32 %4, 0\l  br i1 %22, label %23, label %38\l|{<s0>T|<s1>F}}"];
	Node0x4981ae0:s0 -> Node0x4981d70;
	Node0x4981ae0:s1 -> Node0x4981dc0;
	Node0x4981d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%23:\l23:                                               \l  %24 = icmp eq i32 %13, 0\l  %25 = add nsw i32 %2, -1\l  %26 = icmp eq i32 %13, %25\l  %27 = add nsw i32 %2, 66\l  %28 = icmp eq i32 %17, 0\l  %29 = add nsw i32 %3, -1\l  %30 = icmp eq i32 %17, %29\l  %31 = add nsw i32 %3, 66\l  %32 = add nsw i32 %3, 1\l  %33 = add nsw i32 %2, 1\l  %34 = mul nsw i32 %32, %33\l  %35 = sext i32 %34 to i64\l  br label %44\l}"];
	Node0x4981d70 -> Node0x4982740;
	Node0x4982800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%36:\l36:                                               \l  %37 = fptrunc double %120 to float\l  br label %38\l}"];
	Node0x4982800 -> Node0x4981dc0;
	Node0x4981dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%38:\l38:                                               \l  %39 = phi float [ 0.000000e+00, %21 ], [ %37, %36 ]\l  %40 = mul nsw i32 %13, %3\l  %41 = add nsw i32 %40, %17\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  store float %39, float addrspace(1)* %43, align 4, !tbaa !5\l  br label %124\l}"];
	Node0x4981dc0 -> Node0x4981b70;
	Node0x4982740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi float addrspace(1)* [ %0, %23 ], [ %121, %44 ]\l  %46 = phi i32 [ 0, %23 ], [ %122, %44 ]\l  %47 = phi double [ 0.000000e+00, %23 ], [ %120, %44 ]\l  %48 = zext i32 %46 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %6, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %51 = fneg contract float %50\l  %52 = tail call float @llvm.ceil.f32(float %51)\l  %53 = fptosi float %52 to i32\l  %54 = getelementptr inbounds float, float addrspace(1)* %8, i64 %48\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %56 = fneg contract float %55\l  %57 = tail call float @llvm.ceil.f32(float %56)\l  %58 = fptosi float %57 to i32\l  %59 = getelementptr inbounds float, float addrspace(1)* %5, i64 %48\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %61 = fneg contract float %60\l  %62 = tail call float @llvm.floor.f32(float %61)\l  %63 = fptosi float %62 to i32\l  %64 = add nsw i32 %63, 1\l  %65 = getelementptr inbounds float, float addrspace(1)* %7, i64 %48\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %67 = fneg contract float %66\l  %68 = tail call float @llvm.floor.f32(float %67)\l  %69 = fptosi float %68 to i32\l  %70 = add nsw i32 %69, 1\l  %71 = icmp sgt i32 %63, -2\l  %72 = select i1 %24, i1 %71, i1 false\l  %73 = icmp slt i32 %53, 1\l  %74 = select i1 %26, i1 %73, i1 false\l  %75 = select i1 %72, i32 0, i32 %53\l  %76 = select i1 %74, i32 %27, i32 %64\l  %77 = icmp sgt i32 %69, -2\l  %78 = select i1 %28, i1 %77, i1 false\l  %79 = icmp slt i32 %58, 1\l  %80 = select i1 %30, i1 %79, i1 false\l  %81 = select i1 %78, i32 0, i32 %58\l  %82 = select i1 %80, i32 %31, i32 %70\l  %83 = add nsw i32 %75, %13\l  %84 = tail call i32 @llvm.smin.i32(i32 %83, i32 %2)\l  %85 = tail call i32 @llvm.smax.i32(i32 %84, i32 0)\l  %86 = add nsw i32 %76, %13\l  %87 = tail call i32 @llvm.smin.i32(i32 %86, i32 %2)\l  %88 = tail call i32 @llvm.smax.i32(i32 %87, i32 0)\l  %89 = add nsw i32 %81, %17\l  %90 = tail call i32 @llvm.smin.i32(i32 %89, i32 %3)\l  %91 = tail call i32 @llvm.smax.i32(i32 %90, i32 0)\l  %92 = add nsw i32 %82, %17\l  %93 = tail call i32 @llvm.smin.i32(i32 %92, i32 %3)\l  %94 = tail call i32 @llvm.smax.i32(i32 %93, i32 0)\l  %95 = mul nsw i32 %88, %32\l  %96 = add nsw i32 %95, %94\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %45, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !5\l  %100 = fpext float %99 to double\l  %101 = fadd contract double %47, %100\l  %102 = mul nsw i32 %85, %32\l  %103 = add nsw i32 %102, %94\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %45, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !5\l  %107 = fpext float %106 to double\l  %108 = fsub contract double %101, %107\l  %109 = add nsw i32 %91, %95\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %45, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !5\l  %113 = fpext float %112 to double\l  %114 = fsub contract double %108, %113\l  %115 = add nsw i32 %102, %91\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %45, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !5\l  %119 = fpext float %118 to double\l  %120 = fadd contract double %114, %119\l  %121 = getelementptr inbounds float, float addrspace(1)* %45, i64 %35\l  %122 = add nuw nsw i32 %46, 1\l  %123 = icmp eq i32 %122, %4\l  br i1 %123, label %36, label %44, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4982740:s0 -> Node0x4982800;
	Node0x4982740:s1 -> Node0x4982740;
	Node0x4981b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%124:\l124:                                              \l  ret void\l}"];
}
