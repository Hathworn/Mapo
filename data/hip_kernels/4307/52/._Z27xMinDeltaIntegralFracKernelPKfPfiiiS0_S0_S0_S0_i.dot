digraph "CFG for '_Z27xMinDeltaIntegralFracKernelPKfPfiiiS0_S0_S0_S0_i' function" {
	label="CFG for '_Z27xMinDeltaIntegralFracKernelPKfPfiiiS0_S0_S0_S0_i' function";

	Node0x61bb160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = shl i32 %11, 4\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = add i32 %12, %13\l  %15 = freeze i32 %14\l  %16 = freeze i32 %4\l  %17 = sdiv i32 %15, %16\l  %18 = mul i32 %17, %16\l  %19 = sub i32 %15, %18\l  %20 = add nsw i32 %19, 1\l  %21 = freeze i32 %3\l  %22 = sdiv i32 %17, %21\l  %23 = mul i32 %22, %21\l  %24 = sub i32 %17, %23\l  %25 = icmp slt i32 %22, %2\l  %26 = icmp sgt i32 %3, -1\l  %27 = and i1 %26, %25\l  %28 = icmp sgt i32 %4, -1\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %177\l|{<s0>T|<s1>F}}"];
	Node0x61bb160:s0 -> Node0x61bdfa0;
	Node0x61bb160:s1 -> Node0x61be030;
	Node0x61bdfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%30:\l30:                                               \l  %31 = mul i32 %4, %3\l  %32 = mul i32 %31, %22\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  %35 = sdiv i32 %22, 4\l  %36 = mul i32 %35, 4\l  %37 = sub i32 %22, %36\l  %38 = icmp eq i32 %37, 0\l  br i1 %38, label %39, label %44\l|{<s0>T|<s1>F}}"];
	Node0x61bdfa0:s0 -> Node0x61be710;
	Node0x61bdfa0:s1 -> Node0x61be760;
	Node0x61be710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%39:\l39:                                               \l  %40 = mul nsw i32 %24, %4\l  %41 = add nsw i32 %40, %19\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %34, i64 %42\l  store float 0.000000e+00, float addrspace(1)* %43, align 4, !tbaa !5\l  br label %177\l}"];
	Node0x61be710 -> Node0x61be030;
	Node0x61be760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%44:\l44:                                               \l  %45 = mul nsw i32 %35, 3\l  %46 = icmp sgt i32 %37, 0\l  %47 = sext i1 %46 to i32\l  %48 = add nsw i32 %45, %37\l  %49 = add nsw i32 %48, %47\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %5, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %53 = icmp eq i32 %37, 2\l  br i1 %53, label %54, label %57\l|{<s0>T|<s1>F}}"];
	Node0x61be760:s0 -> Node0x61c03d0;
	Node0x61be760:s1 -> Node0x61c0460;
	Node0x61c03d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%54:\l54:                                               \l  %55 = sub nsw i32 0, %4\l  %56 = sitofp i32 %55 to float\l  br label %64\l}"];
	Node0x61c03d0 -> Node0x61c06a0;
	Node0x61c0460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%57:\l57:                                               \l  %58 = icmp sgt i32 %37, 2\l  %59 = sext i1 %58 to i32\l  %60 = add nsw i32 %48, %59\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %6, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %64\l}"];
	Node0x61c0460 -> Node0x61c06a0;
	Node0x61c06a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%64:\l64:                                               \l  %65 = phi contract float [ %56, %54 ], [ %63, %57 ]\l  %66 = icmp eq i32 %37, 3\l  br i1 %66, label %67, label %69\l|{<s0>T|<s1>F}}"];
	Node0x61c06a0:s0 -> Node0x61be3d0;
	Node0x61c06a0:s1 -> Node0x61be420;
	Node0x61be3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%67:\l67:                                               \l  %68 = sitofp i32 %4 to float\l  br label %73\l}"];
	Node0x61be3d0 -> Node0x61c1660;
	Node0x61be420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%69:\l69:                                               \l  %70 = sext i32 %48 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %7, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %73\l}"];
	Node0x61be420 -> Node0x61c1660;
	Node0x61c1660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%73:\l73:                                               \l  %74 = phi contract float [ %68, %67 ], [ %72, %69 ]\l  %75 = fadd contract float %52, -1.000000e+00\l  %76 = tail call float @llvm.ceil.f32(float %75)\l  %77 = fptosi float %76 to i32\l  %78 = fadd contract float %65, -1.000000e+00\l  %79 = tail call float @llvm.ceil.f32(float %78)\l  %80 = fptosi float %79 to i32\l  %81 = sitofp i32 %80 to float\l  %82 = fsub contract float %81, %65\l  %83 = fadd contract float %82, 1.000000e+00\l  %84 = tail call float @llvm.floor.f32(float %74)\l  %85 = fptosi float %84 to i32\l  %86 = sitofp i32 %85 to float\l  %87 = fsub contract float %74, %86\l  %88 = add nsw i32 %20, %80\l  %89 = icmp slt i32 %88, 1\l  %90 = add i32 %24, %77\l  %91 = add i32 %90, 1\l  %92 = icmp ugt i32 %90, 2147483646\l  %93 = select i1 %89, i1 true, i1 %92\l  br i1 %93, label %107, label %94\l|{<s0>T|<s1>F}}"];
	Node0x61c1660:s0 -> Node0x61c27c0;
	Node0x61c1660:s1 -> Node0x61c2850;
	Node0x61c2850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%94:\l94:                                               \l  %95 = add nsw i32 %3, -1\l  %96 = tail call i32 @llvm.smin.i32(i32 %95, i32 %90)\l  %97 = tail call i32 @llvm.smax.i32(i32 %96, i32 0)\l  %98 = mul nsw i32 %97, %9\l  %99 = add nsw i32 %4, -1\l  %100 = add i32 %19, %80\l  %101 = tail call i32 @llvm.smin.i32(i32 %99, i32 %100)\l  %102 = tail call i32 @llvm.smax.i32(i32 %101, i32 0)\l  %103 = add nsw i32 %102, %98\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %8, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %107\l}"];
	Node0x61c2850 -> Node0x61c27c0;
	Node0x61c27c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%107:\l107:                                              \l  %108 = phi contract float [ %106, %94 ], [ 0.000000e+00, %73 ]\l  %109 = add nsw i32 %20, %85\l  %110 = icmp sge i32 %109, %4\l  %111 = select i1 %110, i1 true, i1 %92\l  br i1 %111, label %124, label %112\l|{<s0>T|<s1>F}}"];
	Node0x61c27c0:s0 -> Node0x61c3810;
	Node0x61c27c0:s1 -> Node0x61c3860;
	Node0x61c3860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%112:\l112:                                              \l  %113 = add nsw i32 %3, -1\l  %114 = tail call i32 @llvm.smin.i32(i32 %113, i32 %90)\l  %115 = tail call i32 @llvm.smax.i32(i32 %114, i32 0)\l  %116 = mul nsw i32 %115, %9\l  %117 = add nsw i32 %4, -1\l  %118 = tail call i32 @llvm.smin.i32(i32 %117, i32 %109)\l  %119 = tail call i32 @llvm.smax.i32(i32 %118, i32 0)\l  %120 = add nsw i32 %119, %116\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %8, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %124\l}"];
	Node0x61c3860 -> Node0x61c3810;
	Node0x61c3810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%124:\l124:                                              \l  %125 = phi contract float [ %123, %112 ], [ 0.000000e+00, %107 ]\l  %126 = icmp slt i32 %109, 1\l  %127 = select contract i1 %126, float 1.000000e+00, float %87\l  %128 = fmul contract float %127, %125\l  %129 = fadd contract float %128, 0.000000e+00\l  %130 = icmp slt i32 %88, %4\l  %131 = select contract i1 %130, float %83, float 1.000000e+00\l  %132 = fmul contract float %131, %108\l  %133 = fadd contract float %132, %129\l  %134 = tail call i32 @llvm.smin.i32(i32 %91, i32 %3)\l  %135 = tail call i32 @llvm.smax.i32(i32 %134, i32 0)\l  %136 = add nuw nsw i32 %4, 1\l  %137 = mul nsw i32 %135, %136\l  %138 = tail call i32 @llvm.smin.i32(i32 %109, i32 %4)\l  %139 = tail call i32 @llvm.smax.i32(i32 %138, i32 0)\l  %140 = add nsw i32 %139, %137\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %0, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %144 = fadd contract float %143, %133\l  %145 = tail call i32 @llvm.smin.i32(i32 %90, i32 %3)\l  %146 = tail call i32 @llvm.smax.i32(i32 %145, i32 0)\l  %147 = mul nsw i32 %146, %136\l  %148 = add nsw i32 %139, %147\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %0, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %152 = fsub contract float %144, %151\l  %153 = tail call i32 @llvm.smin.i32(i32 %88, i32 %4)\l  %154 = tail call i32 @llvm.smax.i32(i32 %153, i32 0)\l  %155 = add nsw i32 %154, %137\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds float, float addrspace(1)* %0, i64 %156\l  %158 = load float, float addrspace(1)* %157, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %159 = fsub contract float %152, %158\l  %160 = add nsw i32 %154, %147\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds float, float addrspace(1)* %0, i64 %161\l  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %164 = fadd contract float %163, %159\l  %165 = icmp ult i32 %90, 2147483647\l  %166 = icmp slt i32 %91, %3\l  %167 = uitofp i1 %166 to float\l  %168 = select i1 %165, float %167, float 0.000000e+00\l  %169 = fneg contract float %164\l  %170 = fmul contract float %168, %169\l  %171 = mul nsw i32 %24, %4\l  %172 = add nsw i32 %171, %19\l  %173 = sext i32 %172 to i64\l  %174 = getelementptr inbounds float, float addrspace(1)* %34, i64 %173\l  %175 = load float, float addrspace(1)* %174, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %176 = fmul contract float %175, %170\l  store float %176, float addrspace(1)* %174, align 4, !tbaa !5\l  br label %177\l}"];
	Node0x61c3810 -> Node0x61be030;
	Node0x61be030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%177:\l177:                                              \l  ret void\l}"];
}
