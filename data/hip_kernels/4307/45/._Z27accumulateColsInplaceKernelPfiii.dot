digraph "CFG for '_Z27accumulateColsInplaceKernelPfiii' function" {
	label="CFG for '_Z27accumulateColsInplaceKernelPfiii' function";

	Node0x5040290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 4\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = add i32 %6, %7\l  %9 = mul nsw i32 %3, %1\l  %10 = icmp slt i32 %8, %9\l  br i1 %10, label %11, label %129\l|{<s0>T|<s1>F}}"];
	Node0x5040290:s0 -> Node0x5040320;
	Node0x5040290:s1 -> Node0x5041be0;
	Node0x5040320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%11:\l11:                                               \l  %12 = freeze i32 %8\l  %13 = freeze i32 %3\l  %14 = sdiv i32 %12, %13\l  %15 = add i32 %2, 1\l  %16 = add nsw i32 %3, 1\l  %17 = mul i32 %16, %15\l  %18 = mul i32 %17, %14\l  %19 = sext i32 %18 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %0, i64 %19\l  %21 = mul i32 %14, %13\l  %22 = sub i32 %12, %21\l  %23 = add nsw i32 %22, 1\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %20, i64 %24\l  store float 0.000000e+00, float addrspace(1)* %25, align 4, !tbaa !5\l  %26 = icmp slt i32 %2, 1\l  br i1 %26, label %129, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5040320:s0 -> Node0x5041be0;
	Node0x5040320:s1 -> Node0x50431c0;
	Node0x50431c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%27:\l27:                                               \l  %28 = and i32 %2, 7\l  %29 = icmp ult i32 %2, 8\l  br i1 %29, label %110, label %30\l|{<s0>T|<s1>F}}"];
	Node0x50431c0:s0 -> Node0x5043450;
	Node0x50431c0:s1 -> Node0x50434a0;
	Node0x50434a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%30:\l30:                                               \l  %31 = and i32 %2, -8\l  br label %32\l}"];
	Node0x50434a0 -> Node0x50436a0;
	Node0x50436a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = phi i32 [ 1, %30 ], [ %107, %32 ]\l  %34 = phi double [ 0.000000e+00, %30 ], [ %105, %32 ]\l  %35 = phi i32 [ 0, %30 ], [ %108, %32 ]\l  %36 = mul nsw i32 %33, %16\l  %37 = add nsw i32 %36, %23\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %20, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !5\l  %41 = fpext float %40 to double\l  %42 = fadd contract double %34, %41\l  %43 = fptrunc double %42 to float\l  store float %43, float addrspace(1)* %39, align 4, !tbaa !5\l  %44 = add nuw nsw i32 %33, 1\l  %45 = mul nsw i32 %44, %16\l  %46 = add nsw i32 %45, %23\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %20, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !5\l  %50 = fpext float %49 to double\l  %51 = fadd contract double %42, %50\l  %52 = fptrunc double %51 to float\l  store float %52, float addrspace(1)* %48, align 4, !tbaa !5\l  %53 = add nuw nsw i32 %33, 2\l  %54 = mul nsw i32 %53, %16\l  %55 = add nsw i32 %54, %23\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %20, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !5\l  %59 = fpext float %58 to double\l  %60 = fadd contract double %51, %59\l  %61 = fptrunc double %60 to float\l  store float %61, float addrspace(1)* %57, align 4, !tbaa !5\l  %62 = add nuw nsw i32 %33, 3\l  %63 = mul nsw i32 %62, %16\l  %64 = add nsw i32 %63, %23\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %20, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !5\l  %68 = fpext float %67 to double\l  %69 = fadd contract double %60, %68\l  %70 = fptrunc double %69 to float\l  store float %70, float addrspace(1)* %66, align 4, !tbaa !5\l  %71 = add nuw nsw i32 %33, 4\l  %72 = mul nsw i32 %71, %16\l  %73 = add nsw i32 %72, %23\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %20, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !5\l  %77 = fpext float %76 to double\l  %78 = fadd contract double %69, %77\l  %79 = fptrunc double %78 to float\l  store float %79, float addrspace(1)* %75, align 4, !tbaa !5\l  %80 = add nuw nsw i32 %33, 5\l  %81 = mul nsw i32 %80, %16\l  %82 = add nsw i32 %81, %23\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %20, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !5\l  %86 = fpext float %85 to double\l  %87 = fadd contract double %78, %86\l  %88 = fptrunc double %87 to float\l  store float %88, float addrspace(1)* %84, align 4, !tbaa !5\l  %89 = add nuw nsw i32 %33, 6\l  %90 = mul nsw i32 %89, %16\l  %91 = add nsw i32 %90, %23\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %20, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !5\l  %95 = fpext float %94 to double\l  %96 = fadd contract double %87, %95\l  %97 = fptrunc double %96 to float\l  store float %97, float addrspace(1)* %93, align 4, !tbaa !5\l  %98 = add nuw i32 %33, 7\l  %99 = mul nsw i32 %98, %16\l  %100 = add nsw i32 %99, %23\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %20, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !5\l  %104 = fpext float %103 to double\l  %105 = fadd contract double %96, %104\l  %106 = fptrunc double %105 to float\l  store float %106, float addrspace(1)* %102, align 4, !tbaa !5\l  %107 = add nuw i32 %33, 8\l  %108 = add i32 %35, 8\l  %109 = icmp eq i32 %108, %31\l  br i1 %109, label %110, label %32, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x50436a0:s0 -> Node0x5043450;
	Node0x50436a0:s1 -> Node0x50436a0;
	Node0x5043450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%110:\l110:                                              \l  %111 = phi i32 [ 1, %27 ], [ %107, %32 ]\l  %112 = phi double [ 0.000000e+00, %27 ], [ %105, %32 ]\l  %113 = icmp eq i32 %28, 0\l  br i1 %113, label %129, label %114\l|{<s0>T|<s1>F}}"];
	Node0x5043450:s0 -> Node0x5041be0;
	Node0x5043450:s1 -> Node0x50472b0;
	Node0x50472b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  %115 = phi i32 [ %126, %114 ], [ %111, %110 ]\l  %116 = phi double [ %124, %114 ], [ %112, %110 ]\l  %117 = phi i32 [ %127, %114 ], [ 0, %110 ]\l  %118 = mul nsw i32 %115, %16\l  %119 = add nsw i32 %118, %23\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %20, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !5\l  %123 = fpext float %122 to double\l  %124 = fadd contract double %116, %123\l  %125 = fptrunc double %124 to float\l  store float %125, float addrspace(1)* %121, align 4, !tbaa !5\l  %126 = add nuw i32 %115, 1\l  %127 = add i32 %117, 1\l  %128 = icmp eq i32 %127, %28\l  br i1 %128, label %129, label %114, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x50472b0:s0 -> Node0x5041be0;
	Node0x50472b0:s1 -> Node0x50472b0;
	Node0x5041be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%129:\l129:                                              \l  ret void\l}"];
}
