digraph "CFG for '_Z20accumulateColsKernelPfS_iii' function" {
	label="CFG for '_Z20accumulateColsKernelPfS_iii' function";

	Node0x4b180c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = shl i32 %6, 4\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = add i32 %7, %8\l  %10 = mul nsw i32 %4, %2\l  %11 = icmp slt i32 %9, %10\l  br i1 %11, label %12, label %120\l|{<s0>T|<s1>F}}"];
	Node0x4b180c0:s0 -> Node0x4b17320;
	Node0x4b180c0:s1 -> Node0x4b19980;
	Node0x4b17320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%12:\l12:                                               \l  %13 = freeze i32 %9\l  %14 = freeze i32 %4\l  %15 = sdiv i32 %13, %14\l  %16 = mul i32 %4, %3\l  %17 = mul i32 %16, %15\l  %18 = sext i32 %17 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %20 = add i32 %3, 1\l  %21 = add nsw i32 %4, 1\l  %22 = mul i32 %21, %20\l  %23 = mul i32 %22, %15\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %1, i64 %24\l  %26 = mul i32 %15, %14\l  %27 = sub i32 %13, %26\l  %28 = add nsw i32 %27, 1\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %25, i64 %29\l  store float 0.000000e+00, float addrspace(1)* %30, align 4, !tbaa !5\l  %31 = icmp slt i32 %3, 1\l  br i1 %31, label %120, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4b17320:s0 -> Node0x4b19980;
	Node0x4b17320:s1 -> Node0x4b1b190;
	Node0x4b1b190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%32:\l32:                                               \l  %33 = and i32 %3, 3\l  %34 = icmp ult i32 %3, 4\l  br i1 %34, label %96, label %35\l|{<s0>T|<s1>F}}"];
	Node0x4b1b190:s0 -> Node0x4b19d50;
	Node0x4b1b190:s1 -> Node0x4b1b570;
	Node0x4b1b570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%35:\l35:                                               \l  %36 = and i32 %3, -4\l  br label %37\l}"];
	Node0x4b1b570 -> Node0x4b1b740;
	Node0x4b1b740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%37:\l37:                                               \l  %38 = phi i32 [ 1, %35 ], [ %93, %37 ]\l  %39 = phi double [ 0.000000e+00, %35 ], [ %87, %37 ]\l  %40 = phi i32 [ 0, %35 ], [ %94, %37 ]\l  %41 = add nsw i32 %38, -1\l  %42 = mul nsw i32 %41, %4\l  %43 = add i32 %42, %27\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %19, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !5\l  %47 = fpext float %46 to double\l  %48 = fadd contract double %39, %47\l  %49 = fptrunc double %48 to float\l  %50 = mul nsw i32 %38, %21\l  %51 = add nsw i32 %50, %28\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %25, i64 %52\l  store float %49, float addrspace(1)* %53, align 4, !tbaa !5\l  %54 = add nuw nsw i32 %38, 1\l  %55 = mul nsw i32 %38, %4\l  %56 = add i32 %55, %27\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %19, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !5\l  %60 = fpext float %59 to double\l  %61 = fadd contract double %48, %60\l  %62 = fptrunc double %61 to float\l  %63 = mul nsw i32 %54, %21\l  %64 = add nsw i32 %63, %28\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %25, i64 %65\l  store float %62, float addrspace(1)* %66, align 4, !tbaa !5\l  %67 = add nuw nsw i32 %38, 2\l  %68 = mul nsw i32 %54, %4\l  %69 = add i32 %68, %27\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %19, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5\l  %73 = fpext float %72 to double\l  %74 = fadd contract double %61, %73\l  %75 = fptrunc double %74 to float\l  %76 = mul nsw i32 %67, %21\l  %77 = add nsw i32 %76, %28\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %25, i64 %78\l  store float %75, float addrspace(1)* %79, align 4, !tbaa !5\l  %80 = add nuw i32 %38, 3\l  %81 = mul nsw i32 %67, %4\l  %82 = add i32 %81, %27\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %19, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !5\l  %86 = fpext float %85 to double\l  %87 = fadd contract double %74, %86\l  %88 = fptrunc double %87 to float\l  %89 = mul nsw i32 %80, %21\l  %90 = add nsw i32 %89, %28\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %25, i64 %91\l  store float %88, float addrspace(1)* %92, align 4, !tbaa !5\l  %93 = add nuw i32 %38, 4\l  %94 = add i32 %40, 4\l  %95 = icmp eq i32 %94, %36\l  br i1 %95, label %96, label %37, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x4b1b740:s0 -> Node0x4b19d50;
	Node0x4b1b740:s1 -> Node0x4b1b740;
	Node0x4b19d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%96:\l96:                                               \l  %97 = phi i32 [ 1, %32 ], [ %93, %37 ]\l  %98 = phi double [ 0.000000e+00, %32 ], [ %87, %37 ]\l  %99 = icmp eq i32 %33, 0\l  br i1 %99, label %120, label %100\l|{<s0>T|<s1>F}}"];
	Node0x4b19d50:s0 -> Node0x4b19980;
	Node0x4b19d50:s1 -> Node0x4b1e680;
	Node0x4b1e680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%100:\l100:                                              \l  %101 = phi i32 [ %117, %100 ], [ %97, %96 ]\l  %102 = phi double [ %111, %100 ], [ %98, %96 ]\l  %103 = phi i32 [ %118, %100 ], [ 0, %96 ]\l  %104 = add nsw i32 %101, -1\l  %105 = mul nsw i32 %104, %4\l  %106 = add i32 %105, %27\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %19, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !5\l  %110 = fpext float %109 to double\l  %111 = fadd contract double %102, %110\l  %112 = fptrunc double %111 to float\l  %113 = mul nsw i32 %101, %21\l  %114 = add nsw i32 %113, %28\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %25, i64 %115\l  store float %112, float addrspace(1)* %116, align 4, !tbaa !5\l  %117 = add nuw i32 %101, 1\l  %118 = add i32 %103, 1\l  %119 = icmp eq i32 %118, %33\l  br i1 %119, label %120, label %100, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4b1e680:s0 -> Node0x4b19980;
	Node0x4b1e680:s1 -> Node0x4b1e680;
	Node0x4b19980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%120:\l120:                                              \l  ret void\l}"];
}
