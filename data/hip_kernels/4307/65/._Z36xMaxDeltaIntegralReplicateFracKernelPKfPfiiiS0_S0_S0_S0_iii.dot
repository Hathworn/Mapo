digraph "CFG for '_Z36xMaxDeltaIntegralReplicateFracKernelPKfPfiiiS0_S0_S0_S0_iii' function" {
	label="CFG for '_Z36xMaxDeltaIntegralReplicateFracKernelPKfPfiiiS0_S0_S0_S0_iii' function";

	Node0x4e26de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = add nsw i32 %3, -1\l  %14 = add i32 %13, %10\l  %15 = sdiv i32 %14, %10\l  %16 = add nsw i32 %4, -1\l  %17 = add i32 %16, %11\l  %18 = sdiv i32 %17, %11\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = shl i32 %19, 4\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %22 = add i32 %20, %21\l  %23 = freeze i32 %22\l  %24 = freeze i32 %18\l  %25 = sdiv i32 %23, %24\l  %26 = mul i32 %25, %24\l  %27 = sub i32 %23, %26\l  %28 = freeze i32 %15\l  %29 = sdiv i32 %25, %28\l  %30 = mul i32 %29, %28\l  %31 = sub i32 %25, %30\l  %32 = icmp slt i32 %29, %2\l  %33 = icmp sgt i32 %15, -1\l  %34 = and i1 %33, %32\l  %35 = icmp sgt i32 %18, -1\l  %36 = select i1 %34, i1 %35, i1 false\l  br i1 %36, label %37, label %149\l|{<s0>T|<s1>F}}"];
	Node0x4e26de0:s0 -> Node0x4e283b0;
	Node0x4e26de0:s1 -> Node0x4e29e90;
	Node0x4e283b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%37:\l37:                                               \l  %38 = mul nsw i32 %31, %10\l  %39 = add nsw i32 %38, 1\l  %40 = mul nsw i32 %27, %11\l  %41 = add nsw i32 %40, 1\l  %42 = mul i32 %18, %15\l  %43 = mul i32 %42, %29\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = sext i32 %29 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %6, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %49 = fadd contract float %48, -1.000000e+00\l  %50 = tail call float @llvm.ceil.f32(float %49)\l  %51 = fptosi float %50 to i32\l  %52 = sitofp i32 %51 to float\l  %53 = fsub contract float %52, %48\l  %54 = fadd contract float %53, 1.000000e+00\l  %55 = getelementptr inbounds float, float addrspace(1)* %5, i64 %46\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %57 = tail call float @llvm.floor.f32(float %56)\l  %58 = fptosi float %57 to i32\l  %59 = getelementptr inbounds float, float addrspace(1)* %7, i64 %46\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %61 = tail call float @llvm.floor.f32(float %60)\l  %62 = fptosi float %61 to i32\l  %63 = sitofp i32 %62 to float\l  %64 = fsub contract float %60, %63\l  %65 = add nsw i32 %41, %51\l  %66 = icmp slt i32 %65, 1\l  br i1 %66, label %81, label %67\l|{<s0>T|<s1>F}}"];
	Node0x4e283b0:s0 -> Node0x4e29b90;
	Node0x4e283b0:s1 -> Node0x4e29c20;
	Node0x4e29c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%67:\l67:                                               \l  %68 = add nsw i32 %39, %58\l  %69 = icmp slt i32 %68, %3\l  br i1 %69, label %70, label %81\l|{<s0>T|<s1>F}}"];
	Node0x4e29c20:s0 -> Node0x4e2d210;
	Node0x4e29c20:s1 -> Node0x4e29b90;
	Node0x4e2d210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%70:\l70:                                               \l  %71 = tail call i32 @llvm.smin.i32(i32 %13, i32 %68)\l  %72 = tail call i32 @llvm.smax.i32(i32 %71, i32 0)\l  %73 = mul nsw i32 %72, %9\l  %74 = add i32 %40, %51\l  %75 = tail call i32 @llvm.smin.i32(i32 %16, i32 %74)\l  %76 = tail call i32 @llvm.smax.i32(i32 %75, i32 0)\l  %77 = add nsw i32 %73, %76\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %8, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %81\l}"];
	Node0x4e2d210 -> Node0x4e29b90;
	Node0x4e29b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%81:\l81:                                               \l  %82 = phi contract float [ %80, %70 ], [ 0.000000e+00, %67 ], [\l... 0.000000e+00, %37 ]\l  %83 = add nsw i32 %41, %62\l  %84 = icmp slt i32 %83, %4\l  %85 = add nsw i32 %39, %58\l  %86 = icmp slt i32 %85, %3\l  %87 = select i1 %84, i1 %86, i1 false\l  br i1 %87, label %88, label %98\l|{<s0>T|<s1>F}}"];
	Node0x4e29b90:s0 -> Node0x4e2e150;
	Node0x4e29b90:s1 -> Node0x4e2e1e0;
	Node0x4e2e150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%88:\l88:                                               \l  %89 = tail call i32 @llvm.smin.i32(i32 %13, i32 %85)\l  %90 = tail call i32 @llvm.smax.i32(i32 %89, i32 0)\l  %91 = mul nsw i32 %90, %9\l  %92 = tail call i32 @llvm.smin.i32(i32 %16, i32 %83)\l  %93 = tail call i32 @llvm.smax.i32(i32 %92, i32 0)\l  %94 = add nsw i32 %91, %93\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %8, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %98\l}"];
	Node0x4e2e150 -> Node0x4e2e1e0;
	Node0x4e2e1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%98:\l98:                                               \l  %99 = phi contract float [ %97, %88 ], [ 0.000000e+00, %81 ]\l  %100 = icmp slt i32 %83, 1\l  %101 = select contract i1 %100, float 1.000000e+00, float %64\l  %102 = fmul contract float %101, %99\l  %103 = fadd contract float %102, 0.000000e+00\l  %104 = icmp slt i32 %65, %4\l  %105 = select contract i1 %104, float %54, float 1.000000e+00\l  %106 = fmul contract float %105, %82\l  %107 = fadd contract float %106, %103\l  %108 = add nsw i32 %85, 1\l  %109 = tail call i32 @llvm.smin.i32(i32 %108, i32 %3)\l  %110 = tail call i32 @llvm.smax.i32(i32 %109, i32 0)\l  %111 = add nsw i32 %4, 1\l  %112 = mul nsw i32 %110, %111\l  %113 = tail call i32 @llvm.smin.i32(i32 %83, i32 %4)\l  %114 = tail call i32 @llvm.smax.i32(i32 %113, i32 0)\l  %115 = add nsw i32 %112, %114\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %0, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %119 = fadd contract float %118, %107\l  %120 = tail call i32 @llvm.smin.i32(i32 %85, i32 %3)\l  %121 = tail call i32 @llvm.smax.i32(i32 %120, i32 0)\l  %122 = mul nsw i32 %121, %111\l  %123 = add nsw i32 %122, %114\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %0, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %127 = fsub contract float %119, %126\l  %128 = tail call i32 @llvm.smin.i32(i32 %65, i32 %4)\l  %129 = tail call i32 @llvm.smax.i32(i32 %128, i32 0)\l  %130 = add nsw i32 %112, %129\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %0, i64 %131\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %134 = fsub contract float %127, %133\l  %135 = add nsw i32 %122, %129\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %0, i64 %136\l  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %139 = fadd contract float %138, %134\l  %140 = icmp sgt i32 %85, 0\l  %141 = icmp slt i32 %85, %3\l  %142 = uitofp i1 %141 to float\l  %143 = select i1 %140, float %142, float 0.000000e+00\l  %144 = fmul contract float %143, %139\l  %145 = mul nsw i32 %31, %18\l  %146 = add nsw i32 %145, %27\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds float, float addrspace(1)* %45, i64 %147\l  store float %144, float addrspace(1)* %148, align 4, !tbaa !5\l  br label %149\l}"];
	Node0x4e2e1e0 -> Node0x4e29e90;
	Node0x4e29e90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%149:\l149:                                              \l  ret void\l}"];
}
