digraph "CFG for '_Z23yMaxDeltaIntegralKernelPKfiPfiiiiiS0_S0_S0_' function" {
	label="CFG for '_Z23yMaxDeltaIntegralKernelPKfiPfiiiiiS0_S0_S0_' function";

	Node0x6438410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = shl i32 %12, 8\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %15 = add i32 %13, %14\l  %16 = freeze i32 %15\l  %17 = freeze i32 %7\l  %18 = sdiv i32 %16, %17\l  %19 = freeze i32 %18\l  %20 = freeze i32 %6\l  %21 = sdiv i32 %19, %20\l  %22 = mul i32 %21, %20\l  %23 = sub i32 %19, %22\l  %24 = add nsw i32 %23, 1\l  %25 = freeze i32 %5\l  %26 = sdiv i32 %21, %25\l  %27 = mul nsw i32 %26, %1\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = freeze i32 %26\l  %31 = freeze i32 %4\l  %32 = sdiv i32 %30, %31\l  %33 = icmp slt i32 %32, %3\l  br i1 %33, label %34, label %100\l|{<s0>T|<s1>F}}"];
	Node0x6438410:s0 -> Node0x643a7e0;
	Node0x6438410:s1 -> Node0x643b270;
	Node0x643a7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%34:\l34:                                               \l  %35 = sext i32 %15 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %2, i64 %35\l  %37 = mul i32 %32, %31\l  %38 = sub i32 %30, %37\l  %39 = mul nsw i32 %38, %5\l  %40 = mul i32 %26, %25\l  %41 = sub i32 %21, %40\l  %42 = add nsw i32 %39, %41\l  %43 = mul i32 %18, %17\l  %44 = sub i32 %16, %43\l  %45 = add nsw i32 %44, 1\l  %46 = sext i32 %42 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %8, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %49 = fadd contract float %48, -1.000000e+00\l  %50 = tail call float @llvm.ceil.f32(float %49)\l  %51 = fptosi float %50 to i32\l  %52 = getelementptr inbounds float, float addrspace(1)* %9, i64 %46\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %54 = tail call float @llvm.floor.f32(float %53)\l  %55 = fptosi float %54 to i32\l  %56 = getelementptr inbounds float, float addrspace(1)* %10, i64 %46\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %58 = tail call float @llvm.floor.f32(float %57)\l  %59 = fptosi float %58 to i32\l  %60 = add nsw i32 %24, %55\l  %61 = tail call i32 @llvm.smin.i32(i32 %60, i32 %6)\l  %62 = tail call i32 @llvm.smax.i32(i32 %61, i32 0)\l  %63 = add nsw i32 %7, 1\l  %64 = mul nsw i32 %62, %63\l  %65 = add nsw i32 %45, %59\l  %66 = add nsw i32 %65, 1\l  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 %7)\l  %68 = tail call i32 @llvm.smax.i32(i32 %67, i32 0)\l  %69 = add nsw i32 %68, %64\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %29, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %73 = fadd contract float %72, 0.000000e+00\l  %74 = tail call i32 @llvm.smin.i32(i32 %65, i32 %7)\l  %75 = tail call i32 @llvm.smax.i32(i32 %74, i32 0)\l  %76 = add nsw i32 %64, %75\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %29, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %80 = fsub contract float %73, %79\l  %81 = add nsw i32 %24, %51\l  %82 = tail call i32 @llvm.smin.i32(i32 %81, i32 %6)\l  %83 = tail call i32 @llvm.smax.i32(i32 %82, i32 0)\l  %84 = mul nsw i32 %83, %63\l  %85 = add nsw i32 %68, %84\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %29, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %89 = fsub contract float %80, %88\l  %90 = add nsw i32 %84, %75\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %29, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %94 = fadd contract float %89, %93\l  %95 = icmp sgt i32 %65, 0\l  %96 = icmp slt i32 %65, %7\l  %97 = uitofp i1 %96 to float\l  %98 = select i1 %95, float %97, float 0.000000e+00\l  %99 = fmul contract float %94, %98\l  store float %99, float addrspace(1)* %36, align 4, !tbaa !5\l  br label %100\l}"];
	Node0x643a7e0 -> Node0x643b270;
	Node0x643b270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%100:\l100:                                              \l  ret void\l}"];
}
