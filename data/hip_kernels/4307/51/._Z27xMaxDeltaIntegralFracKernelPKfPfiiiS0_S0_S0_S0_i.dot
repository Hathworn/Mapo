digraph "CFG for '_Z27xMaxDeltaIntegralFracKernelPKfPfiiiS0_S0_S0_S0_i' function" {
	label="CFG for '_Z27xMaxDeltaIntegralFracKernelPKfPfiiiS0_S0_S0_S0_i' function";

	Node0x5ba2320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = shl i32 %11, 4\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = add i32 %12, %13\l  %15 = freeze i32 %14\l  %16 = freeze i32 %4\l  %17 = sdiv i32 %15, %16\l  %18 = mul i32 %17, %16\l  %19 = sub i32 %15, %18\l  %20 = add nsw i32 %19, 1\l  %21 = freeze i32 %3\l  %22 = sdiv i32 %17, %21\l  %23 = mul i32 %22, %21\l  %24 = sub i32 %17, %23\l  %25 = add nsw i32 %24, 1\l  %26 = icmp slt i32 %22, %2\l  %27 = icmp sgt i32 %3, -1\l  %28 = and i1 %27, %26\l  %29 = icmp sgt i32 %4, -1\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %173\l|{<s0>T|<s1>F}}"];
	Node0x5ba2320:s0 -> Node0x5ba4f80;
	Node0x5ba2320:s1 -> Node0x5ba5010;
	Node0x5ba4f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%31:\l31:                                               \l  %32 = mul i32 %4, %3\l  %33 = mul i32 %32, %22\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %36 = sdiv i32 %22, 4\l  %37 = mul i32 %36, 4\l  %38 = sub i32 %22, %37\l  %39 = icmp eq i32 %38, 1\l  br i1 %39, label %167, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5ba4f80:s0 -> Node0x5ba56d0;
	Node0x5ba4f80:s1 -> Node0x5ba5720;
	Node0x5ba5720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%40:\l40:                                               \l  %41 = mul nsw i32 %36, 3\l  %42 = icmp sgt i32 %38, 1\l  %43 = sext i1 %42 to i32\l  %44 = add nsw i32 %41, %38\l  %45 = add nsw i32 %44, %43\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %5, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %49 = icmp eq i32 %38, 2\l  br i1 %49, label %50, label %53\l|{<s0>T|<s1>F}}"];
	Node0x5ba5720:s0 -> Node0x5ba6040;
	Node0x5ba5720:s1 -> Node0x5ba60d0;
	Node0x5ba6040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%50:\l50:                                               \l  %51 = sub nsw i32 0, %4\l  %52 = sitofp i32 %51 to float\l  br label %60\l}"];
	Node0x5ba6040 -> Node0x5ba6340;
	Node0x5ba60d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%53:\l53:                                               \l  %54 = icmp sgt i32 %38, 2\l  %55 = sext i1 %54 to i32\l  %56 = add nsw i32 %44, %55\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %6, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %60\l}"];
	Node0x5ba60d0 -> Node0x5ba6340;
	Node0x5ba6340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%60:\l60:                                               \l  %61 = phi contract float [ %52, %50 ], [ %59, %53 ]\l  %62 = icmp eq i32 %38, 3\l  br i1 %62, label %63, label %65\l|{<s0>T|<s1>F}}"];
	Node0x5ba6340:s0 -> Node0x5ba74e0;
	Node0x5ba6340:s1 -> Node0x5ba7530;
	Node0x5ba74e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%63:\l63:                                               \l  %64 = sitofp i32 %4 to float\l  br label %69\l}"];
	Node0x5ba74e0 -> Node0x5ba51e0;
	Node0x5ba7530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%65:\l65:                                               \l  %66 = sext i32 %44 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %7, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %69\l}"];
	Node0x5ba7530 -> Node0x5ba51e0;
	Node0x5ba51e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%69:\l69:                                               \l  %70 = phi contract float [ %64, %63 ], [ %68, %65 ]\l  %71 = fadd contract float %61, -1.000000e+00\l  %72 = tail call float @llvm.ceil.f32(float %71)\l  %73 = fptosi float %72 to i32\l  %74 = sitofp i32 %73 to float\l  %75 = fsub contract float %74, %61\l  %76 = fadd contract float %75, 1.000000e+00\l  %77 = tail call float @llvm.floor.f32(float %48)\l  %78 = fptosi float %77 to i32\l  %79 = tail call float @llvm.floor.f32(float %70)\l  %80 = fptosi float %79 to i32\l  %81 = sitofp i32 %80 to float\l  %82 = fsub contract float %70, %81\l  %83 = add nsw i32 %20, %73\l  %84 = icmp slt i32 %83, 1\l  br i1 %84, label %101, label %85\l|{<s0>T|<s1>F}}"];
	Node0x5ba51e0:s0 -> Node0x5ba9190;
	Node0x5ba51e0:s1 -> Node0x5ba9220;
	Node0x5ba9220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%85:\l85:                                               \l  %86 = add nsw i32 %25, %78\l  %87 = icmp slt i32 %86, %3\l  br i1 %87, label %88, label %101\l|{<s0>T|<s1>F}}"];
	Node0x5ba9220:s0 -> Node0x5ba9480;
	Node0x5ba9220:s1 -> Node0x5ba9190;
	Node0x5ba9480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%88:\l88:                                               \l  %89 = add nsw i32 %3, -1\l  %90 = tail call i32 @llvm.smin.i32(i32 %89, i32 %86)\l  %91 = tail call i32 @llvm.smax.i32(i32 %90, i32 0)\l  %92 = mul nsw i32 %91, %9\l  %93 = add nsw i32 %4, -1\l  %94 = add i32 %19, %73\l  %95 = tail call i32 @llvm.smin.i32(i32 %93, i32 %94)\l  %96 = tail call i32 @llvm.smax.i32(i32 %95, i32 0)\l  %97 = add nsw i32 %96, %92\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %8, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %101\l}"];
	Node0x5ba9480 -> Node0x5ba9190;
	Node0x5ba9190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%101:\l101:                                              \l  %102 = phi contract float [ %100, %88 ], [ 0.000000e+00, %85 ], [\l... 0.000000e+00, %69 ]\l  %103 = add nsw i32 %20, %80\l  %104 = icmp slt i32 %103, %4\l  %105 = add nsw i32 %25, %78\l  %106 = icmp slt i32 %105, %3\l  %107 = select i1 %104, i1 %106, i1 false\l  br i1 %107, label %108, label %120\l|{<s0>T|<s1>F}}"];
	Node0x5ba9190:s0 -> Node0x5baa4e0;
	Node0x5ba9190:s1 -> Node0x5baa570;
	Node0x5baa4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%108:\l108:                                              \l  %109 = add nsw i32 %3, -1\l  %110 = tail call i32 @llvm.smin.i32(i32 %109, i32 %105)\l  %111 = tail call i32 @llvm.smax.i32(i32 %110, i32 0)\l  %112 = mul nsw i32 %111, %9\l  %113 = add nsw i32 %4, -1\l  %114 = tail call i32 @llvm.smin.i32(i32 %113, i32 %103)\l  %115 = tail call i32 @llvm.smax.i32(i32 %114, i32 0)\l  %116 = add nsw i32 %115, %112\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %8, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %120\l}"];
	Node0x5baa4e0 -> Node0x5baa570;
	Node0x5baa570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%120:\l120:                                              \l  %121 = phi contract float [ %119, %108 ], [ 0.000000e+00, %101 ]\l  %122 = icmp slt i32 %103, 1\l  %123 = select contract i1 %122, float 1.000000e+00, float %82\l  %124 = fmul contract float %123, %121\l  %125 = fadd contract float %124, 0.000000e+00\l  %126 = icmp slt i32 %83, %4\l  %127 = select contract i1 %126, float %76, float 1.000000e+00\l  %128 = fmul contract float %127, %102\l  %129 = fadd contract float %128, %125\l  %130 = add nsw i32 %105, 1\l  %131 = tail call i32 @llvm.smin.i32(i32 %130, i32 %3)\l  %132 = tail call i32 @llvm.smax.i32(i32 %131, i32 0)\l  %133 = add nuw nsw i32 %4, 1\l  %134 = mul nsw i32 %132, %133\l  %135 = tail call i32 @llvm.smin.i32(i32 %103, i32 %4)\l  %136 = tail call i32 @llvm.smax.i32(i32 %135, i32 0)\l  %137 = add nsw i32 %136, %134\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %0, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %141 = fadd contract float %140, %129\l  %142 = tail call i32 @llvm.smin.i32(i32 %105, i32 %3)\l  %143 = tail call i32 @llvm.smax.i32(i32 %142, i32 0)\l  %144 = mul nsw i32 %143, %133\l  %145 = add nsw i32 %136, %144\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %0, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %149 = fsub contract float %141, %148\l  %150 = tail call i32 @llvm.smin.i32(i32 %83, i32 %4)\l  %151 = tail call i32 @llvm.smax.i32(i32 %150, i32 0)\l  %152 = add nsw i32 %151, %134\l  %153 = sext i32 %152 to i64\l  %154 = getelementptr inbounds float, float addrspace(1)* %0, i64 %153\l  %155 = load float, float addrspace(1)* %154, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %156 = fsub contract float %149, %155\l  %157 = add nsw i32 %151, %144\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %0, i64 %158\l  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %161 = fadd contract float %160, %156\l  %162 = icmp sgt i32 %105, 0\l  %163 = icmp slt i32 %105, %3\l  %164 = uitofp i1 %163 to float\l  %165 = select i1 %162, float %164, float 0.000000e+00\l  %166 = fmul contract float %165, %161\l  br label %167\l}"];
	Node0x5baa570 -> Node0x5ba56d0;
	Node0x5ba56d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%167:\l167:                                              \l  %168 = phi float [ %166, %120 ], [ 0.000000e+00, %31 ]\l  %169 = mul nsw i32 %24, %4\l  %170 = add nsw i32 %169, %19\l  %171 = sext i32 %170 to i64\l  %172 = getelementptr inbounds float, float addrspace(1)* %35, i64 %171\l  store float %168, float addrspace(1)* %172, align 4, !tbaa !5\l  br label %173\l}"];
	Node0x5ba56d0 -> Node0x5ba5010;
	Node0x5ba5010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%173:\l173:                                              \l  ret void\l}"];
}
