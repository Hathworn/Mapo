digraph "CFG for '_Z27yMinDeltaIntegralFracKernelPKfPfiiiS0_S0_S0_S0_i' function" {
	label="CFG for '_Z27yMinDeltaIntegralFracKernelPKfPfiiiS0_S0_S0_S0_i' function";

	Node0x5e98220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = shl i32 %11, 4\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = add i32 %12, %13\l  %15 = freeze i32 %14\l  %16 = freeze i32 %4\l  %17 = sdiv i32 %15, %16\l  %18 = mul i32 %17, %16\l  %19 = sub i32 %15, %18\l  %20 = freeze i32 %3\l  %21 = sdiv i32 %17, %20\l  %22 = mul i32 %21, %20\l  %23 = sub i32 %17, %22\l  %24 = add nsw i32 %23, 1\l  %25 = icmp slt i32 %21, %2\l  %26 = icmp sgt i32 %3, -1\l  %27 = and i1 %26, %25\l  %28 = icmp sgt i32 %4, -1\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %184\l|{<s0>T|<s1>F}}"];
	Node0x5e98220:s0 -> Node0x5e9b060;
	Node0x5e98220:s1 -> Node0x5e9b0f0;
	Node0x5e9b060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%30:\l30:                                               \l  %31 = mul i32 %4, %3\l  %32 = mul i32 %31, %21\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  %35 = sdiv i32 %21, 4\l  %36 = mul i32 %35, 4\l  %37 = sub i32 %21, %36\l  switch i32 %37, label %46 [\l    i32 2, label %38\l    i32 0, label %43\l  ]\l|{<s0>def|<s1>2|<s2>0}}"];
	Node0x5e9b060:s0 -> Node0x5e9b710;
	Node0x5e9b060:s1 -> Node0x5e9b790;
	Node0x5e9b060:s2 -> Node0x5e9b850;
	Node0x5e9b790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%38:\l38:                                               \l  %39 = mul nsw i32 %23, %4\l  %40 = add nsw i32 %39, %19\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %34, i64 %41\l  store float 0.000000e+00, float addrspace(1)* %42, align 4, !tbaa !5\l  br label %184\l}"];
	Node0x5e9b790 -> Node0x5e9b0f0;
	Node0x5e9b850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%43:\l43:                                               \l  %44 = sub nsw i32 0, %3\l  %45 = sitofp i32 %44 to float\l  br label %56\l}"];
	Node0x5e9b850 -> Node0x5e9c9b0;
	Node0x5e9b710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%46:\l46:                                               \l  %47 = sdiv i32 %21, 4\l  %48 = mul nsw i32 %47, 3\l  %49 = icmp sgt i32 %37, 0\l  %50 = sext i1 %49 to i32\l  %51 = add nsw i32 %48, %37\l  %52 = add nsw i32 %51, %50\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %5, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %56\l}"];
	Node0x5e9b710 -> Node0x5e9c9b0;
	Node0x5e9c9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%56:\l56:                                               \l  %57 = phi contract float [ %45, %43 ], [ %55, %46 ]\l  %58 = icmp eq i32 %37, 1\l  br i1 %58, label %59, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5e9c9b0:s0 -> Node0x5e9d870;
	Node0x5e9c9b0:s1 -> Node0x5e9d8c0;
	Node0x5e9d870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%59:\l59:                                               \l  %60 = sitofp i32 %3 to float\l  %61 = sdiv i32 %21, 4\l  %62 = mul nsw i32 %61, 3\l  %63 = add nsw i32 %62, 1\l  br label %73\l}"];
	Node0x5e9d870 -> Node0x5e9dc20;
	Node0x5e9d8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%64:\l64:                                               \l  %65 = mul nsw i32 %35, 3\l  %66 = icmp sgt i32 %37, 1\l  %67 = sext i1 %66 to i32\l  %68 = add nsw i32 %65, %37\l  %69 = add nsw i32 %68, %67\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %6, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %73\l}"];
	Node0x5e9d8c0 -> Node0x5e9dc20;
	Node0x5e9dc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%73:\l73:                                               \l  %74 = phi i32 [ %68, %64 ], [ %63, %59 ]\l  %75 = phi contract float [ %72, %64 ], [ %60, %59 ]\l  %76 = icmp sgt i32 %37, 2\l  %77 = sext i1 %76 to i32\l  %78 = add nsw i32 %74, %77\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %7, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %82 = fadd contract float %57, -1.000000e+00\l  %83 = tail call float @llvm.ceil.f32(float %82)\l  %84 = fptosi float %83 to i32\l  %85 = sitofp i32 %84 to float\l  %86 = fsub contract float %85, %57\l  %87 = fadd contract float %86, 1.000000e+00\l  %88 = fadd contract float %81, -1.000000e+00\l  %89 = tail call float @llvm.ceil.f32(float %88)\l  %90 = fptosi float %89 to i32\l  %91 = tail call float @llvm.floor.f32(float %75)\l  %92 = fptosi float %91 to i32\l  %93 = sitofp i32 %92 to float\l  %94 = fsub contract float %75, %93\l  %95 = add i32 %19, %90\l  %96 = add i32 %95, 1\l  %97 = icmp ugt i32 %95, 2147483646\l  %98 = add nsw i32 %24, %84\l  %99 = icmp slt i32 %98, 1\l  %100 = select i1 %97, i1 true, i1 %99\l  br i1 %100, label %114, label %101\l|{<s0>T|<s1>F}}"];
	Node0x5e9dc20:s0 -> Node0x5e9fc80;
	Node0x5e9dc20:s1 -> Node0x5e9fd10;
	Node0x5e9fd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%101:\l101:                                              \l  %102 = add nsw i32 %3, -1\l  %103 = add i32 %23, %84\l  %104 = tail call i32 @llvm.smin.i32(i32 %102, i32 %103)\l  %105 = tail call i32 @llvm.smax.i32(i32 %104, i32 0)\l  %106 = mul nsw i32 %105, %9\l  %107 = add nsw i32 %4, -1\l  %108 = tail call i32 @llvm.smin.i32(i32 %107, i32 %95)\l  %109 = tail call i32 @llvm.smax.i32(i32 %108, i32 0)\l  %110 = add nsw i32 %109, %106\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %8, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %114\l}"];
	Node0x5e9fd10 -> Node0x5e9fc80;
	Node0x5e9fc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%114:\l114:                                              \l  %115 = phi contract float [ %113, %101 ], [ 0.000000e+00, %73 ]\l  %116 = add nsw i32 %24, %92\l  %117 = icmp sge i32 %116, %3\l  %118 = select i1 %97, i1 true, i1 %117\l  br i1 %118, label %131, label %119\l|{<s0>T|<s1>F}}"];
	Node0x5e9fc80:s0 -> Node0x5ea0cd0;
	Node0x5e9fc80:s1 -> Node0x5ea0d20;
	Node0x5ea0d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%119:\l119:                                              \l  %120 = add nsw i32 %3, -1\l  %121 = tail call i32 @llvm.smin.i32(i32 %120, i32 %116)\l  %122 = tail call i32 @llvm.smax.i32(i32 %121, i32 0)\l  %123 = mul nsw i32 %122, %9\l  %124 = add nsw i32 %4, -1\l  %125 = tail call i32 @llvm.smin.i32(i32 %124, i32 %95)\l  %126 = tail call i32 @llvm.smax.i32(i32 %125, i32 0)\l  %127 = add nsw i32 %126, %123\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %8, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %131\l}"];
	Node0x5ea0d20 -> Node0x5ea0cd0;
	Node0x5ea0cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%131:\l131:                                              \l  %132 = phi contract float [ %130, %119 ], [ 0.000000e+00, %114 ]\l  %133 = icmp slt i32 %98, %3\l  %134 = select contract i1 %133, float %87, float 1.000000e+00\l  %135 = fmul contract float %134, %115\l  %136 = fadd contract float %135, 0.000000e+00\l  %137 = icmp slt i32 %116, 1\l  %138 = select contract i1 %137, float 1.000000e+00, float %94\l  %139 = fmul contract float %138, %132\l  %140 = fadd contract float %136, %139\l  %141 = tail call i32 @llvm.smin.i32(i32 %116, i32 %3)\l  %142 = tail call i32 @llvm.smax.i32(i32 %141, i32 0)\l  %143 = add nuw nsw i32 %4, 1\l  %144 = mul nsw i32 %142, %143\l  %145 = tail call i32 @llvm.smin.i32(i32 %96, i32 %4)\l  %146 = tail call i32 @llvm.smax.i32(i32 %145, i32 0)\l  %147 = add nsw i32 %144, %146\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds float, float addrspace(1)* %0, i64 %148\l  %150 = load float, float addrspace(1)* %149, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %151 = fadd contract float %150, %140\l  %152 = tail call i32 @llvm.smin.i32(i32 %95, i32 %4)\l  %153 = tail call i32 @llvm.smax.i32(i32 %152, i32 0)\l  %154 = add nsw i32 %153, %144\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds float, float addrspace(1)* %0, i64 %155\l  %157 = load float, float addrspace(1)* %156, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %158 = fsub contract float %151, %157\l  %159 = tail call i32 @llvm.smin.i32(i32 %98, i32 %3)\l  %160 = tail call i32 @llvm.smax.i32(i32 %159, i32 0)\l  %161 = mul nsw i32 %160, %143\l  %162 = add nsw i32 %161, %146\l  %163 = sext i32 %162 to i64\l  %164 = getelementptr inbounds float, float addrspace(1)* %0, i64 %163\l  %165 = load float, float addrspace(1)* %164, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %166 = fsub contract float %158, %165\l  %167 = add nsw i32 %153, %161\l  %168 = sext i32 %167 to i64\l  %169 = getelementptr inbounds float, float addrspace(1)* %0, i64 %168\l  %170 = load float, float addrspace(1)* %169, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %171 = fadd contract float %170, %166\l  %172 = icmp ult i32 %95, 2147483647\l  %173 = icmp slt i32 %96, %4\l  %174 = uitofp i1 %173 to float\l  %175 = select i1 %172, float %174, float 0.000000e+00\l  %176 = fneg contract float %171\l  %177 = fmul contract float %175, %176\l  %178 = mul nsw i32 %23, %4\l  %179 = add nsw i32 %178, %19\l  %180 = sext i32 %179 to i64\l  %181 = getelementptr inbounds float, float addrspace(1)* %34, i64 %180\l  %182 = load float, float addrspace(1)* %181, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %183 = fmul contract float %182, %177\l  store float %183, float addrspace(1)* %181, align 4, !tbaa !5\l  br label %184\l}"];
	Node0x5ea0cd0 -> Node0x5e9b0f0;
	Node0x5e9b0f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%184:\l184:                                              \l  ret void\l}"];
}
