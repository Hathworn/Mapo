digraph "CFG for '_Z23xMinDeltaIntegralKernelPKfPfiiiS0_S0_S0_' function" {
	label="CFG for '_Z23xMinDeltaIntegralKernelPKfPfiiiS0_S0_S0_' function";

	Node0x614cf30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = shl i32 %9, 4\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = add i32 %10, %11\l  %13 = freeze i32 %12\l  %14 = freeze i32 %4\l  %15 = sdiv i32 %13, %14\l  %16 = mul i32 %15, %14\l  %17 = sub i32 %13, %16\l  %18 = add nsw i32 %17, 1\l  %19 = freeze i32 %3\l  %20 = sdiv i32 %15, %19\l  %21 = mul i32 %20, %19\l  %22 = sub i32 %15, %21\l  %23 = icmp slt i32 %20, %2\l  %24 = icmp sgt i32 %3, -1\l  %25 = and i1 %24, %23\l  %26 = icmp sgt i32 %4, -1\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %96\l|{<s0>T|<s1>F}}"];
	Node0x614cf30:s0 -> Node0x614ef90;
	Node0x614cf30:s1 -> Node0x614f020;
	Node0x614ef90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%28:\l28:                                               \l  %29 = mul i32 %4, %3\l  %30 = mul i32 %29, %20\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %33 = sext i32 %20 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %5, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %36 = fadd contract float %35, -1.000000e+00\l  %37 = tail call float @llvm.ceil.f32(float %36)\l  %38 = fptosi float %37 to i32\l  %39 = getelementptr inbounds float, float addrspace(1)* %6, i64 %33\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %41 = fadd contract float %40, -1.000000e+00\l  %42 = tail call float @llvm.ceil.f32(float %41)\l  %43 = fptosi float %42 to i32\l  %44 = getelementptr inbounds float, float addrspace(1)* %7, i64 %33\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %46 = tail call float @llvm.floor.f32(float %45)\l  %47 = fptosi float %46 to i32\l  %48 = add i32 %22, %38\l  %49 = add i32 %48, 1\l  %50 = add nsw i32 %3, -1\l  %51 = tail call i32 @llvm.smin.i32(i32 %49, i32 %50)\l  %52 = tail call i32 @llvm.smax.i32(i32 %51, i32 0)\l  %53 = add nuw nsw i32 %4, 1\l  %54 = mul nsw i32 %52, %53\l  %55 = add nsw i32 %18, %47\l  %56 = tail call i32 @llvm.smin.i32(i32 %55, i32 %4)\l  %57 = tail call i32 @llvm.smax.i32(i32 %56, i32 0)\l  %58 = add nsw i32 %57, %54\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %62 = fadd contract float %61, 0.000000e+00\l  %63 = tail call i32 @llvm.smin.i32(i32 %48, i32 %3)\l  %64 = tail call i32 @llvm.smax.i32(i32 %63, i32 0)\l  %65 = mul nsw i32 %64, %53\l  %66 = add nsw i32 %65, %57\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %70 = fsub contract float %62, %69\l  %71 = add nsw i32 %18, %43\l  %72 = tail call i32 @llvm.smin.i32(i32 %71, i32 %4)\l  %73 = tail call i32 @llvm.smax.i32(i32 %72, i32 0)\l  %74 = add nsw i32 %73, %54\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %78 = fsub contract float %70, %77\l  %79 = add nsw i32 %65, %73\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %83 = fadd contract float %78, %82\l  %84 = icmp ult i32 %48, 2147483647\l  %85 = icmp slt i32 %49, %3\l  %86 = uitofp i1 %85 to float\l  %87 = select i1 %84, float %86, float 0.000000e+00\l  %88 = fneg contract float %83\l  %89 = fmul contract float %87, %88\l  %90 = mul nsw i32 %22, %4\l  %91 = add nsw i32 %90, %17\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %32, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %95 = fmul contract float %94, %89\l  store float %95, float addrspace(1)* %93, align 4, !tbaa !5\l  br label %96\l}"];
	Node0x614ef90 -> Node0x614f020;
	Node0x614f020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%96:\l96:                                               \l  ret void\l}"];
}
