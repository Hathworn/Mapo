digraph "CFG for '_Z36xMinDeltaIntegralReplicateFracKernelPKfPfiiiS0_S0_S0_S0_iii' function" {
	label="CFG for '_Z36xMinDeltaIntegralReplicateFracKernelPKfPfiiiS0_S0_S0_S0_iii' function";

	Node0x52a9ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = add nsw i32 %3, -1\l  %14 = add i32 %13, %10\l  %15 = sdiv i32 %14, %10\l  %16 = add nsw i32 %4, -1\l  %17 = add i32 %16, %11\l  %18 = sdiv i32 %17, %11\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = shl i32 %19, 4\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %22 = add i32 %20, %21\l  %23 = freeze i32 %22\l  %24 = freeze i32 %18\l  %25 = sdiv i32 %23, %24\l  %26 = mul i32 %25, %24\l  %27 = sub i32 %23, %26\l  %28 = freeze i32 %15\l  %29 = sdiv i32 %25, %28\l  %30 = mul i32 %29, %28\l  %31 = sub i32 %25, %30\l  %32 = icmp slt i32 %29, %2\l  %33 = icmp sgt i32 %15, -1\l  %34 = and i1 %33, %32\l  %35 = icmp sgt i32 %18, -1\l  %36 = select i1 %34, i1 %35, i1 false\l  br i1 %36, label %37, label %150\l|{<s0>T|<s1>F}}"];
	Node0x52a9ba0:s0 -> Node0x52ab3a0;
	Node0x52a9ba0:s1 -> Node0x52ace80;
	Node0x52ab3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%37:\l37:                                               \l  %38 = mul nsw i32 %31, %10\l  %39 = mul nsw i32 %27, %11\l  %40 = add nsw i32 %39, 1\l  %41 = mul i32 %18, %15\l  %42 = mul i32 %41, %29\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  %45 = sext i32 %29 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %5, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %48 = fadd contract float %47, -1.000000e+00\l  %49 = tail call float @llvm.ceil.f32(float %48)\l  %50 = fptosi float %49 to i32\l  %51 = getelementptr inbounds float, float addrspace(1)* %6, i64 %45\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %53 = fadd contract float %52, -1.000000e+00\l  %54 = tail call float @llvm.ceil.f32(float %53)\l  %55 = fptosi float %54 to i32\l  %56 = sitofp i32 %55 to float\l  %57 = fsub contract float %56, %52\l  %58 = fadd contract float %57, 1.000000e+00\l  %59 = getelementptr inbounds float, float addrspace(1)* %7, i64 %45\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %61 = tail call float @llvm.floor.f32(float %60)\l  %62 = fptosi float %61 to i32\l  %63 = sitofp i32 %62 to float\l  %64 = fsub contract float %60, %63\l  %65 = add nsw i32 %40, %55\l  %66 = icmp slt i32 %65, 1\l  %67 = add i32 %38, %50\l  %68 = add i32 %67, 1\l  %69 = icmp ugt i32 %67, 2147483646\l  %70 = select i1 %66, i1 true, i1 %69\l  br i1 %70, label %82, label %71\l|{<s0>T|<s1>F}}"];
	Node0x52ab3a0:s0 -> Node0x52b0120;
	Node0x52ab3a0:s1 -> Node0x52b01b0;
	Node0x52b01b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%71:\l71:                                               \l  %72 = tail call i32 @llvm.smin.i32(i32 %13, i32 %67)\l  %73 = tail call i32 @llvm.smax.i32(i32 %72, i32 0)\l  %74 = mul nsw i32 %73, %9\l  %75 = add i32 %39, %55\l  %76 = tail call i32 @llvm.smin.i32(i32 %16, i32 %75)\l  %77 = tail call i32 @llvm.smax.i32(i32 %76, i32 0)\l  %78 = add nsw i32 %74, %77\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %8, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %82\l}"];
	Node0x52b01b0 -> Node0x52b0120;
	Node0x52b0120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%82:\l82:                                               \l  %83 = phi contract float [ %81, %71 ], [ 0.000000e+00, %37 ]\l  %84 = add nsw i32 %40, %62\l  %85 = icmp sge i32 %84, %4\l  %86 = select i1 %85, i1 true, i1 %69\l  br i1 %86, label %97, label %87\l|{<s0>T|<s1>F}}"];
	Node0x52b0120:s0 -> Node0x52b1080;
	Node0x52b0120:s1 -> Node0x52b1110;
	Node0x52b1110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%87:\l87:                                               \l  %88 = tail call i32 @llvm.smin.i32(i32 %13, i32 %67)\l  %89 = tail call i32 @llvm.smax.i32(i32 %88, i32 0)\l  %90 = mul nsw i32 %89, %9\l  %91 = tail call i32 @llvm.smin.i32(i32 %16, i32 %84)\l  %92 = tail call i32 @llvm.smax.i32(i32 %91, i32 0)\l  %93 = add nsw i32 %90, %92\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %8, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %97\l}"];
	Node0x52b1110 -> Node0x52b1080;
	Node0x52b1080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%97:\l97:                                               \l  %98 = phi contract float [ %96, %87 ], [ 0.000000e+00, %82 ]\l  %99 = icmp slt i32 %84, 1\l  %100 = select contract i1 %99, float 1.000000e+00, float %64\l  %101 = fmul contract float %100, %98\l  %102 = fadd contract float %101, 0.000000e+00\l  %103 = icmp slt i32 %65, %4\l  %104 = select contract i1 %103, float %58, float 1.000000e+00\l  %105 = fmul contract float %104, %83\l  %106 = fadd contract float %105, %102\l  %107 = tail call i32 @llvm.smin.i32(i32 %68, i32 %3)\l  %108 = tail call i32 @llvm.smax.i32(i32 %107, i32 0)\l  %109 = add nsw i32 %4, 1\l  %110 = mul nsw i32 %108, %109\l  %111 = tail call i32 @llvm.smin.i32(i32 %84, i32 %4)\l  %112 = tail call i32 @llvm.smax.i32(i32 %111, i32 0)\l  %113 = add nsw i32 %112, %110\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %117 = fadd contract float %116, %106\l  %118 = tail call i32 @llvm.smin.i32(i32 %67, i32 %3)\l  %119 = tail call i32 @llvm.smax.i32(i32 %118, i32 0)\l  %120 = mul nsw i32 %119, %109\l  %121 = add nsw i32 %120, %112\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %0, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %125 = fsub contract float %117, %124\l  %126 = tail call i32 @llvm.smin.i32(i32 %65, i32 %4)\l  %127 = tail call i32 @llvm.smax.i32(i32 %126, i32 0)\l  %128 = add nsw i32 %127, %110\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %0, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %132 = fsub contract float %125, %131\l  %133 = add nsw i32 %120, %127\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %0, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %137 = fadd contract float %136, %132\l  %138 = icmp ult i32 %67, 2147483647\l  %139 = icmp slt i32 %68, %3\l  %140 = uitofp i1 %139 to float\l  %141 = select i1 %138, float %140, float 0.000000e+00\l  %142 = fneg contract float %137\l  %143 = fmul contract float %141, %142\l  %144 = mul nsw i32 %31, %18\l  %145 = add nsw i32 %144, %27\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %44, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %149 = fmul contract float %148, %143\l  store float %149, float addrspace(1)* %147, align 4, !tbaa !5\l  br label %150\l}"];
	Node0x52b1080 -> Node0x52ace80;
	Node0x52ace80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%150:\l150:                                              \l  ret void\l}"];
}
