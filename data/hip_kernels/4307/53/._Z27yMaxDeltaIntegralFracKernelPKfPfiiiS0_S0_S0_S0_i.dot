digraph "CFG for '_Z27yMaxDeltaIntegralFracKernelPKfPfiiiS0_S0_S0_S0_i' function" {
	label="CFG for '_Z27yMaxDeltaIntegralFracKernelPKfPfiiiS0_S0_S0_S0_i' function";

	Node0x5ef72c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = shl i32 %11, 4\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = add i32 %12, %13\l  %15 = freeze i32 %14\l  %16 = freeze i32 %4\l  %17 = sdiv i32 %15, %16\l  %18 = mul i32 %17, %16\l  %19 = sub i32 %15, %18\l  %20 = add nsw i32 %19, 1\l  %21 = freeze i32 %3\l  %22 = sdiv i32 %17, %21\l  %23 = mul i32 %22, %21\l  %24 = sub i32 %17, %23\l  %25 = add nsw i32 %24, 1\l  %26 = icmp slt i32 %22, %2\l  %27 = icmp sgt i32 %3, -1\l  %28 = and i1 %27, %26\l  %29 = icmp sgt i32 %4, -1\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %174\l|{<s0>T|<s1>F}}"];
	Node0x5ef72c0:s0 -> Node0x5ef9f20;
	Node0x5ef72c0:s1 -> Node0x5ef9fb0;
	Node0x5ef9f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%31:\l31:                                               \l  %32 = mul i32 %4, %3\l  %33 = mul i32 %32, %22\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %36 = sdiv i32 %22, 4\l  %37 = mul i32 %36, 4\l  %38 = sub i32 %22, %37\l  switch i32 %38, label %42 [\l    i32 3, label %168\l    i32 0, label %39\l  ]\l|{<s0>def|<s1>3|<s2>0}}"];
	Node0x5ef9f20:s0 -> Node0x5efa5e0;
	Node0x5ef9f20:s1 -> Node0x5efa660;
	Node0x5ef9f20:s2 -> Node0x5efa720;
	Node0x5efa720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%39:\l39:                                               \l  %40 = sub nsw i32 0, %3\l  %41 = sitofp i32 %40 to float\l  br label %52\l}"];
	Node0x5efa720 -> Node0x5efa9d0;
	Node0x5efa5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%42:\l42:                                               \l  %43 = sdiv i32 %22, 4\l  %44 = mul nsw i32 %43, 3\l  %45 = icmp sgt i32 %38, 0\l  %46 = sext i1 %45 to i32\l  %47 = add nsw i32 %44, %38\l  %48 = add nsw i32 %47, %46\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %5, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %52\l}"];
	Node0x5efa5e0 -> Node0x5efa9d0;
	Node0x5efa9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%52:\l52:                                               \l  %53 = phi contract float [ %41, %39 ], [ %51, %42 ]\l  %54 = icmp eq i32 %38, 1\l  br i1 %54, label %55, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5efa9d0:s0 -> Node0x5efb3f0;
	Node0x5efa9d0:s1 -> Node0x5efb440;
	Node0x5efb3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%55:\l55:                                               \l  %56 = sitofp i32 %3 to float\l  %57 = sdiv i32 %22, 4\l  %58 = mul nsw i32 %57, 3\l  %59 = add nsw i32 %58, 1\l  br label %69\l}"];
	Node0x5efb3f0 -> Node0x5efb7a0;
	Node0x5efb440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%60:\l60:                                               \l  %61 = mul nsw i32 %36, 3\l  %62 = icmp sgt i32 %38, 1\l  %63 = sext i1 %62 to i32\l  %64 = add nsw i32 %61, %38\l  %65 = add nsw i32 %64, %63\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %6, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %69\l}"];
	Node0x5efb440 -> Node0x5efb7a0;
	Node0x5efb7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%69:\l69:                                               \l  %70 = phi i32 [ %64, %60 ], [ %59, %55 ]\l  %71 = phi contract float [ %68, %60 ], [ %56, %55 ]\l  %72 = sext i32 %70 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %7, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %75 = fadd contract float %53, -1.000000e+00\l  %76 = tail call float @llvm.ceil.f32(float %75)\l  %77 = fptosi float %76 to i32\l  %78 = sitofp i32 %77 to float\l  %79 = fsub contract float %78, %53\l  %80 = fadd contract float %79, 1.000000e+00\l  %81 = tail call float @llvm.floor.f32(float %71)\l  %82 = fptosi float %81 to i32\l  %83 = sitofp i32 %82 to float\l  %84 = fsub contract float %71, %83\l  %85 = tail call float @llvm.floor.f32(float %74)\l  %86 = fptosi float %85 to i32\l  %87 = add nsw i32 %20, %86\l  %88 = icmp slt i32 %87, %4\l  %89 = add nsw i32 %25, %77\l  %90 = icmp sgt i32 %89, 0\l  %91 = select i1 %88, i1 %90, i1 false\l  br i1 %91, label %92, label %105\l|{<s0>T|<s1>F}}"];
	Node0x5efb7a0:s0 -> Node0x5efe520;
	Node0x5efb7a0:s1 -> Node0x5efe5b0;
	Node0x5efe520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%92:\l92:                                               \l  %93 = add nsw i32 %3, -1\l  %94 = add i32 %24, %77\l  %95 = tail call i32 @llvm.smin.i32(i32 %93, i32 %94)\l  %96 = tail call i32 @llvm.smax.i32(i32 %95, i32 0)\l  %97 = mul nsw i32 %96, %9\l  %98 = add nsw i32 %4, -1\l  %99 = tail call i32 @llvm.smin.i32(i32 %98, i32 %87)\l  %100 = tail call i32 @llvm.smax.i32(i32 %99, i32 0)\l  %101 = add nsw i32 %100, %97\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %8, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %105\l}"];
	Node0x5efe520 -> Node0x5efe5b0;
	Node0x5efe5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%105:\l105:                                              \l  %106 = phi contract float [ %104, %92 ], [ 0.000000e+00, %69 ]\l  %107 = add nsw i32 %25, %82\l  %108 = icmp slt i32 %107, %3\l  %109 = select i1 %88, i1 %108, i1 false\l  br i1 %109, label %110, label %122\l|{<s0>T|<s1>F}}"];
	Node0x5efe5b0:s0 -> Node0x5eff510;
	Node0x5efe5b0:s1 -> Node0x5eff5a0;
	Node0x5eff510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%110:\l110:                                              \l  %111 = add nsw i32 %3, -1\l  %112 = tail call i32 @llvm.smin.i32(i32 %111, i32 %107)\l  %113 = tail call i32 @llvm.smax.i32(i32 %112, i32 0)\l  %114 = mul nsw i32 %113, %9\l  %115 = add nsw i32 %4, -1\l  %116 = tail call i32 @llvm.smin.i32(i32 %115, i32 %87)\l  %117 = tail call i32 @llvm.smax.i32(i32 %116, i32 0)\l  %118 = add nsw i32 %114, %117\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %8, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %122\l}"];
	Node0x5eff510 -> Node0x5eff5a0;
	Node0x5eff5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%122:\l122:                                              \l  %123 = phi contract float [ %121, %110 ], [ 0.000000e+00, %105 ]\l  %124 = icmp slt i32 %89, %3\l  %125 = select contract i1 %124, float %80, float 1.000000e+00\l  %126 = fmul contract float %125, %106\l  %127 = fadd contract float %126, 0.000000e+00\l  %128 = icmp slt i32 %107, 1\l  %129 = select contract i1 %128, float 1.000000e+00, float %84\l  %130 = fmul contract float %129, %123\l  %131 = fadd contract float %127, %130\l  %132 = tail call i32 @llvm.smin.i32(i32 %107, i32 %3)\l  %133 = tail call i32 @llvm.smax.i32(i32 %132, i32 0)\l  %134 = add nuw nsw i32 %4, 1\l  %135 = mul nsw i32 %133, %134\l  %136 = add nsw i32 %87, 1\l  %137 = tail call i32 @llvm.smin.i32(i32 %136, i32 %4)\l  %138 = tail call i32 @llvm.smax.i32(i32 %137, i32 0)\l  %139 = add nsw i32 %138, %135\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %0, i64 %140\l  %142 = load float, float addrspace(1)* %141, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %143 = fadd contract float %142, %131\l  %144 = tail call i32 @llvm.smin.i32(i32 %87, i32 %4)\l  %145 = tail call i32 @llvm.smax.i32(i32 %144, i32 0)\l  %146 = add nsw i32 %135, %145\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds float, float addrspace(1)* %0, i64 %147\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %150 = fsub contract float %143, %149\l  %151 = tail call i32 @llvm.smin.i32(i32 %89, i32 %3)\l  %152 = tail call i32 @llvm.smax.i32(i32 %151, i32 0)\l  %153 = mul nsw i32 %152, %134\l  %154 = add nsw i32 %138, %153\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds float, float addrspace(1)* %0, i64 %155\l  %157 = load float, float addrspace(1)* %156, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %158 = fsub contract float %150, %157\l  %159 = add nsw i32 %145, %153\l  %160 = sext i32 %159 to i64\l  %161 = getelementptr inbounds float, float addrspace(1)* %0, i64 %160\l  %162 = load float, float addrspace(1)* %161, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %163 = fadd contract float %162, %158\l  %164 = icmp sgt i32 %87, 0\l  %165 = uitofp i1 %88 to float\l  %166 = select i1 %164, float %165, float 0.000000e+00\l  %167 = fmul contract float %166, %163\l  br label %168\l}"];
	Node0x5eff5a0 -> Node0x5efa660;
	Node0x5efa660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%168:\l168:                                              \l  %169 = phi float [ %167, %122 ], [ 0.000000e+00, %31 ]\l  %170 = mul nsw i32 %24, %4\l  %171 = add nsw i32 %170, %19\l  %172 = sext i32 %171 to i64\l  %173 = getelementptr inbounds float, float addrspace(1)* %35, i64 %172\l  store float %169, float addrspace(1)* %173, align 4, !tbaa !5\l  br label %174\l}"];
	Node0x5efa660 -> Node0x5ef9fb0;
	Node0x5ef9fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%174:\l174:                                              \l  ret void\l}"];
}
