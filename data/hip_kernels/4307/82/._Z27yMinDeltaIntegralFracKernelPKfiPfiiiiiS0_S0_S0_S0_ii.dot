digraph "CFG for '_Z27yMinDeltaIntegralFracKernelPKfiPfiiiiiS0_S0_S0_S0_ii' function" {
	label="CFG for '_Z27yMinDeltaIntegralFracKernelPKfiPfiiiiiS0_S0_S0_S0_ii' function";

	Node0x5034b50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = shl i32 %15, 8\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %18 = add i32 %16, %17\l  %19 = freeze i32 %18\l  %20 = freeze i32 %7\l  %21 = sdiv i32 %19, %20\l  %22 = freeze i32 %21\l  %23 = freeze i32 %6\l  %24 = sdiv i32 %22, %23\l  %25 = mul i32 %24, %23\l  %26 = sub i32 %22, %25\l  %27 = add nsw i32 %26, 1\l  %28 = freeze i32 %5\l  %29 = sdiv i32 %24, %28\l  %30 = mul nsw i32 %29, %1\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = mul nsw i32 %29, %13\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %11, i64 %34\l  %36 = freeze i32 %29\l  %37 = freeze i32 %4\l  %38 = sdiv i32 %36, %37\l  %39 = icmp slt i32 %38, %3\l  br i1 %39, label %40, label %147\l|{<s0>T|<s1>F}}"];
	Node0x5034b50:s0 -> Node0x5037b50;
	Node0x5034b50:s1 -> Node0x5037be0;
	Node0x5037b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%40:\l40:                                               \l  %41 = mul i32 %38, %37\l  %42 = sub i32 %36, %41\l  %43 = mul nsw i32 %42, %5\l  %44 = mul i32 %29, %28\l  %45 = sub i32 %24, %44\l  %46 = add nsw i32 %43, %45\l  %47 = mul i32 %21, %20\l  %48 = sub i32 %19, %47\l  %49 = sext i32 %18 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %2, i64 %49\l  %51 = sext i32 %46 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %8, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %54 = fadd contract float %53, -1.000000e+00\l  %55 = tail call float @llvm.ceil.f32(float %54)\l  %56 = fptosi float %55 to i32\l  %57 = sitofp i32 %56 to float\l  %58 = fsub contract float %57, %53\l  %59 = fadd contract float %58, 1.000000e+00\l  %60 = getelementptr inbounds float, float addrspace(1)* %10, i64 %51\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %62 = fadd contract float %61, -1.000000e+00\l  %63 = tail call float @llvm.ceil.f32(float %62)\l  %64 = fptosi float %63 to i32\l  %65 = getelementptr inbounds float, float addrspace(1)* %9, i64 %51\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %67 = tail call float @llvm.floor.f32(float %66)\l  %68 = fptosi float %67 to i32\l  %69 = sitofp i32 %68 to float\l  %70 = fsub contract float %66, %69\l  %71 = add i32 %48, %64\l  %72 = add i32 %71, 1\l  %73 = icmp ult i32 %71, 2147483647\l  %74 = add nsw i32 %27, %56\l  %75 = icmp sgt i32 %74, 0\l  %76 = icmp sle i32 %74, %6\l  %77 = and i1 %75, %76\l  %78 = and i1 %73, %77\l  %79 = uitofp i1 %78 to float\l  %80 = add nsw i32 %6, -1\l  %81 = add i32 %26, %56\l  %82 = tail call i32 @llvm.smin.i32(i32 %80, i32 %81)\l  %83 = tail call i32 @llvm.smax.i32(i32 %82, i32 0)\l  %84 = mul nsw i32 %83, %12\l  %85 = add nsw i32 %7, -1\l  %86 = tail call i32 @llvm.smin.i32(i32 %85, i32 %71)\l  %87 = tail call i32 @llvm.smax.i32(i32 %86, i32 0)\l  %88 = add nsw i32 %84, %87\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %35, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %92 = fmul contract float %91, %79\l  %93 = add nsw i32 %27, %68\l  %94 = icmp sgt i32 %93, -1\l  %95 = icmp slt i32 %93, %6\l  %96 = and i1 %94, %95\l  %97 = and i1 %73, %96\l  %98 = uitofp i1 %97 to float\l  %99 = tail call i32 @llvm.smin.i32(i32 %80, i32 %93)\l  %100 = tail call i32 @llvm.smax.i32(i32 %99, i32 0)\l  %101 = mul nsw i32 %100, %12\l  %102 = add nsw i32 %101, %87\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %35, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %106 = fmul contract float %105, %98\l  %107 = fmul contract float %59, %92\l  %108 = fadd contract float %107, 0.000000e+00\l  %109 = fmul contract float %70, %106\l  %110 = fadd contract float %108, %109\l  %111 = tail call i32 @llvm.smin.i32(i32 %93, i32 %6)\l  %112 = tail call i32 @llvm.smax.i32(i32 %111, i32 0)\l  %113 = add nsw i32 %7, 1\l  %114 = mul nsw i32 %112, %113\l  %115 = tail call i32 @llvm.smin.i32(i32 %72, i32 %7)\l  %116 = tail call i32 @llvm.smax.i32(i32 %115, i32 0)\l  %117 = add nsw i32 %114, %116\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %32, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %121 = fadd contract float %120, %110\l  %122 = tail call i32 @llvm.smin.i32(i32 %71, i32 %7)\l  %123 = tail call i32 @llvm.smax.i32(i32 %122, i32 0)\l  %124 = add nsw i32 %114, %123\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %32, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %128 = fsub contract float %121, %127\l  %129 = tail call i32 @llvm.smin.i32(i32 %74, i32 %6)\l  %130 = tail call i32 @llvm.smax.i32(i32 %129, i32 0)\l  %131 = mul nsw i32 %130, %113\l  %132 = add nsw i32 %131, %116\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %32, i64 %133\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %136 = fsub contract float %128, %135\l  %137 = add nsw i32 %131, %123\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %32, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %141 = fadd contract float %140, %136\l  %142 = icmp sle i32 %72, %7\l  %143 = and i1 %73, %142\l  %144 = uitofp i1 %143 to float\l  %145 = fneg contract float %141\l  %146 = fmul contract float %144, %145\l  store float %146, float addrspace(1)* %50, align 4, !tbaa !5\l  br label %147\l}"];
	Node0x5037b50 -> Node0x5037be0;
	Node0x5037be0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%147:\l147:                                              \l  ret void\l}"];
}
