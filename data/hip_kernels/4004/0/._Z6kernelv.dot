digraph "CFG for '_Z6kernelv' function" {
	label="CFG for '_Z6kernelv' function";

	Node0x4f9d020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%0:\l  %1 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %2 = getelementptr i8, i8 addrspace(4)* %1, i64 4\l  %3 = bitcast i8 addrspace(4)* %2 to i16 addrspace(4)*\l  %4 = load i16, i16 addrspace(4)* %3, align 4, !range !4, !invariant.load !5\l  %5 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %6 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 24\l  %7 = bitcast i8 addrspace(4)* %6 to i64 addrspace(4)*\l  %8 = load i64, i64 addrspace(4)* %7, align 8, !tbaa !6\l  %9 = inttoptr i64 %8 to i8 addrspace(1)*\l  %10 = addrspacecast i8 addrspace(1)* %9 to i8*\l  %11 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %10,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %12 = extractelement \<2 x i64\> %11, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([17 x i8], [17 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %13, label %17\l|{<s0>T|<s1>F}}"];
	Node0x4f9d020:s0 -> Node0x4f9f640;
	Node0x4f9d020:s1 -> Node0x4fa0030;
	Node0x4f9f640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%13:\l13:                                               \l  %14 = and i64 %12, -225\l  %15 = or i64 %14, 32\l  %16 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %10,\l... i64 noundef %15, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %458\l}"];
	Node0x4f9f640 -> Node0x4fa0420;
	Node0x4fa0030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%17:\l17:                                               \l  %18 = and i64 %12, 2\l  %19 = and i64 %12, -3\l  %20 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %19, i64 0\l  br label %21\l}"];
	Node0x4fa0030 -> Node0x4fa0f50;
	Node0x4fa0f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%21:\l21:                                               \l  %22 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([17 x i8], [17 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([17 x i8], [17 x i8] addrspace(4)*\l... @.str, i64 0, i64 16) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([17 x i8]* addrspacecast ([17 x i8] addrspace(4)* @.str to [17 x i8]*) to\l... i64)), i64 1))), %17 ], [ %455, %447 ]\l  %23 = phi i8 addrspace(4)* [ getelementptr inbounds ([17 x i8], [17 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %17 ], [ %456, %447 ]\l  %24 = phi \<2 x i64\> [ %20, %17 ], [ %454, %447 ]\l  %25 = icmp ugt i64 %22, 56\l  %26 = extractelement \<2 x i64\> %24, i64 0\l  %27 = or i64 %26, %18\l  %28 = insertelement \<2 x i64\> poison, i64 %27, i64 0\l  %29 = select i1 %25, \<2 x i64\> %24, \<2 x i64\> %28\l  %30 = tail call i64 @llvm.umin.i64(i64 %22, i64 56)\l  %31 = trunc i64 %30 to i32\l  %32 = extractelement \<2 x i64\> %29, i64 0\l  %33 = icmp ugt i32 %31, 7\l  br i1 %33, label %36, label %34\l|{<s0>T|<s1>F}}"];
	Node0x4fa0f50:s0 -> Node0x4fa03d0;
	Node0x4fa0f50:s1 -> Node0x4fa2030;
	Node0x4fa2030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%34:\l34:                                               \l  %35 = icmp eq i32 %31, 0\l  br i1 %35, label %89, label %76\l|{<s0>T|<s1>F}}"];
	Node0x4fa2030:s0 -> Node0x4fa2230;
	Node0x4fa2030:s1 -> Node0x4fa2280;
	Node0x4fa03d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%36:\l36:                                               \l  %37 = load i8, i8 addrspace(4)* %23, align 1, !tbaa !10\l  %38 = zext i8 %37 to i64\l  %39 = getelementptr inbounds i8, i8 addrspace(4)* %23, i64 1\l  %40 = load i8, i8 addrspace(4)* %39, align 1, !tbaa !10\l  %41 = zext i8 %40 to i64\l  %42 = shl nuw nsw i64 %41, 8\l  %43 = or i64 %42, %38\l  %44 = getelementptr inbounds i8, i8 addrspace(4)* %23, i64 2\l  %45 = load i8, i8 addrspace(4)* %44, align 1, !tbaa !10\l  %46 = zext i8 %45 to i64\l  %47 = shl nuw nsw i64 %46, 16\l  %48 = or i64 %43, %47\l  %49 = getelementptr inbounds i8, i8 addrspace(4)* %23, i64 3\l  %50 = load i8, i8 addrspace(4)* %49, align 1, !tbaa !10\l  %51 = zext i8 %50 to i64\l  %52 = shl nuw nsw i64 %51, 24\l  %53 = or i64 %48, %52\l  %54 = getelementptr inbounds i8, i8 addrspace(4)* %23, i64 4\l  %55 = load i8, i8 addrspace(4)* %54, align 1, !tbaa !10\l  %56 = zext i8 %55 to i64\l  %57 = shl nuw nsw i64 %56, 32\l  %58 = or i64 %53, %57\l  %59 = getelementptr inbounds i8, i8 addrspace(4)* %23, i64 5\l  %60 = load i8, i8 addrspace(4)* %59, align 1, !tbaa !10\l  %61 = zext i8 %60 to i64\l  %62 = shl nuw nsw i64 %61, 40\l  %63 = or i64 %58, %62\l  %64 = getelementptr inbounds i8, i8 addrspace(4)* %23, i64 6\l  %65 = load i8, i8 addrspace(4)* %64, align 1, !tbaa !10\l  %66 = zext i8 %65 to i64\l  %67 = shl nuw nsw i64 %66, 48\l  %68 = or i64 %63, %67\l  %69 = getelementptr inbounds i8, i8 addrspace(4)* %23, i64 7\l  %70 = load i8, i8 addrspace(4)* %69, align 1, !tbaa !10\l  %71 = zext i8 %70 to i64\l  %72 = shl nuw i64 %71, 56\l  %73 = or i64 %68, %72\l  %74 = add nsw i32 %31, -8\l  %75 = getelementptr inbounds i8, i8 addrspace(4)* %23, i64 8\l  br label %89\l}"];
	Node0x4fa03d0 -> Node0x4fa2230;
	Node0x4fa2280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  %77 = phi i32 [ %87, %76 ], [ 0, %34 ]\l  %78 = phi i64 [ %86, %76 ], [ 0, %34 ]\l  %79 = zext i32 %77 to i64\l  %80 = getelementptr inbounds i8, i8 addrspace(4)* %23, i64 %79\l  %81 = load i8, i8 addrspace(4)* %80, align 1, !tbaa !10\l  %82 = zext i8 %81 to i64\l  %83 = shl i32 %77, 3\l  %84 = zext i32 %83 to i64\l  %85 = shl nuw i64 %82, %84\l  %86 = or i64 %85, %78\l  %87 = add nuw nsw i32 %77, 1\l  %88 = icmp eq i32 %87, %31\l  br i1 %88, label %89, label %76, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4fa2280:s0 -> Node0x4fa2230;
	Node0x4fa2280:s1 -> Node0x4fa2280;
	Node0x4fa2230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%89:\l89:                                               \l  %90 = phi i8 addrspace(4)* [ %75, %36 ], [ %23, %34 ], [ %23, %76 ]\l  %91 = phi i32 [ %74, %36 ], [ 0, %34 ], [ 0, %76 ]\l  %92 = phi i64 [ %73, %36 ], [ 0, %34 ], [ %86, %76 ]\l  %93 = icmp ugt i32 %91, 7\l  br i1 %93, label %96, label %94\l|{<s0>T|<s1>F}}"];
	Node0x4fa2230:s0 -> Node0x4fa4f00;
	Node0x4fa2230:s1 -> Node0x4fa4f50;
	Node0x4fa4f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%94:\l94:                                               \l  %95 = icmp eq i32 %91, 0\l  br i1 %95, label %149, label %136\l|{<s0>T|<s1>F}}"];
	Node0x4fa4f50:s0 -> Node0x4fa5120;
	Node0x4fa4f50:s1 -> Node0x4fa5170;
	Node0x4fa4f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%96:\l96:                                               \l  %97 = load i8, i8 addrspace(4)* %90, align 1, !tbaa !10\l  %98 = zext i8 %97 to i64\l  %99 = getelementptr inbounds i8, i8 addrspace(4)* %90, i64 1\l  %100 = load i8, i8 addrspace(4)* %99, align 1, !tbaa !10\l  %101 = zext i8 %100 to i64\l  %102 = shl nuw nsw i64 %101, 8\l  %103 = or i64 %102, %98\l  %104 = getelementptr inbounds i8, i8 addrspace(4)* %90, i64 2\l  %105 = load i8, i8 addrspace(4)* %104, align 1, !tbaa !10\l  %106 = zext i8 %105 to i64\l  %107 = shl nuw nsw i64 %106, 16\l  %108 = or i64 %103, %107\l  %109 = getelementptr inbounds i8, i8 addrspace(4)* %90, i64 3\l  %110 = load i8, i8 addrspace(4)* %109, align 1, !tbaa !10\l  %111 = zext i8 %110 to i64\l  %112 = shl nuw nsw i64 %111, 24\l  %113 = or i64 %108, %112\l  %114 = getelementptr inbounds i8, i8 addrspace(4)* %90, i64 4\l  %115 = load i8, i8 addrspace(4)* %114, align 1, !tbaa !10\l  %116 = zext i8 %115 to i64\l  %117 = shl nuw nsw i64 %116, 32\l  %118 = or i64 %113, %117\l  %119 = getelementptr inbounds i8, i8 addrspace(4)* %90, i64 5\l  %120 = load i8, i8 addrspace(4)* %119, align 1, !tbaa !10\l  %121 = zext i8 %120 to i64\l  %122 = shl nuw nsw i64 %121, 40\l  %123 = or i64 %118, %122\l  %124 = getelementptr inbounds i8, i8 addrspace(4)* %90, i64 6\l  %125 = load i8, i8 addrspace(4)* %124, align 1, !tbaa !10\l  %126 = zext i8 %125 to i64\l  %127 = shl nuw nsw i64 %126, 48\l  %128 = or i64 %123, %127\l  %129 = getelementptr inbounds i8, i8 addrspace(4)* %90, i64 7\l  %130 = load i8, i8 addrspace(4)* %129, align 1, !tbaa !10\l  %131 = zext i8 %130 to i64\l  %132 = shl nuw i64 %131, 56\l  %133 = or i64 %128, %132\l  %134 = add nsw i32 %91, -8\l  %135 = getelementptr inbounds i8, i8 addrspace(4)* %90, i64 8\l  br label %149\l}"];
	Node0x4fa4f00 -> Node0x4fa5120;
	Node0x4fa5170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%136:\l136:                                              \l  %137 = phi i32 [ %147, %136 ], [ 0, %94 ]\l  %138 = phi i64 [ %146, %136 ], [ 0, %94 ]\l  %139 = zext i32 %137 to i64\l  %140 = getelementptr inbounds i8, i8 addrspace(4)* %90, i64 %139\l  %141 = load i8, i8 addrspace(4)* %140, align 1, !tbaa !10\l  %142 = zext i8 %141 to i64\l  %143 = shl i32 %137, 3\l  %144 = zext i32 %143 to i64\l  %145 = shl nuw i64 %142, %144\l  %146 = or i64 %145, %138\l  %147 = add nuw nsw i32 %137, 1\l  %148 = icmp eq i32 %147, %91\l  br i1 %148, label %149, label %136\l|{<s0>T|<s1>F}}"];
	Node0x4fa5170:s0 -> Node0x4fa5120;
	Node0x4fa5170:s1 -> Node0x4fa5170;
	Node0x4fa5120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%149:\l149:                                              \l  %150 = phi i8 addrspace(4)* [ %135, %96 ], [ %90, %94 ], [ %90, %136 ]\l  %151 = phi i32 [ %134, %96 ], [ 0, %94 ], [ 0, %136 ]\l  %152 = phi i64 [ %133, %96 ], [ 0, %94 ], [ %146, %136 ]\l  %153 = icmp ugt i32 %151, 7\l  br i1 %153, label %156, label %154\l|{<s0>T|<s1>F}}"];
	Node0x4fa5120:s0 -> Node0x4fa7640;
	Node0x4fa5120:s1 -> Node0x4fa7690;
	Node0x4fa7690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%154:\l154:                                              \l  %155 = icmp eq i32 %151, 0\l  br i1 %155, label %209, label %196\l|{<s0>T|<s1>F}}"];
	Node0x4fa7690:s0 -> Node0x4fa7820;
	Node0x4fa7690:s1 -> Node0x4fa7870;
	Node0x4fa7640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%156:\l156:                                              \l  %157 = load i8, i8 addrspace(4)* %150, align 1, !tbaa !10\l  %158 = zext i8 %157 to i64\l  %159 = getelementptr inbounds i8, i8 addrspace(4)* %150, i64 1\l  %160 = load i8, i8 addrspace(4)* %159, align 1, !tbaa !10\l  %161 = zext i8 %160 to i64\l  %162 = shl nuw nsw i64 %161, 8\l  %163 = or i64 %162, %158\l  %164 = getelementptr inbounds i8, i8 addrspace(4)* %150, i64 2\l  %165 = load i8, i8 addrspace(4)* %164, align 1, !tbaa !10\l  %166 = zext i8 %165 to i64\l  %167 = shl nuw nsw i64 %166, 16\l  %168 = or i64 %163, %167\l  %169 = getelementptr inbounds i8, i8 addrspace(4)* %150, i64 3\l  %170 = load i8, i8 addrspace(4)* %169, align 1, !tbaa !10\l  %171 = zext i8 %170 to i64\l  %172 = shl nuw nsw i64 %171, 24\l  %173 = or i64 %168, %172\l  %174 = getelementptr inbounds i8, i8 addrspace(4)* %150, i64 4\l  %175 = load i8, i8 addrspace(4)* %174, align 1, !tbaa !10\l  %176 = zext i8 %175 to i64\l  %177 = shl nuw nsw i64 %176, 32\l  %178 = or i64 %173, %177\l  %179 = getelementptr inbounds i8, i8 addrspace(4)* %150, i64 5\l  %180 = load i8, i8 addrspace(4)* %179, align 1, !tbaa !10\l  %181 = zext i8 %180 to i64\l  %182 = shl nuw nsw i64 %181, 40\l  %183 = or i64 %178, %182\l  %184 = getelementptr inbounds i8, i8 addrspace(4)* %150, i64 6\l  %185 = load i8, i8 addrspace(4)* %184, align 1, !tbaa !10\l  %186 = zext i8 %185 to i64\l  %187 = shl nuw nsw i64 %186, 48\l  %188 = or i64 %183, %187\l  %189 = getelementptr inbounds i8, i8 addrspace(4)* %150, i64 7\l  %190 = load i8, i8 addrspace(4)* %189, align 1, !tbaa !10\l  %191 = zext i8 %190 to i64\l  %192 = shl nuw i64 %191, 56\l  %193 = or i64 %188, %192\l  %194 = add nsw i32 %151, -8\l  %195 = getelementptr inbounds i8, i8 addrspace(4)* %150, i64 8\l  br label %209\l}"];
	Node0x4fa7640 -> Node0x4fa7820;
	Node0x4fa7870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%196:\l196:                                              \l  %197 = phi i32 [ %207, %196 ], [ 0, %154 ]\l  %198 = phi i64 [ %206, %196 ], [ 0, %154 ]\l  %199 = zext i32 %197 to i64\l  %200 = getelementptr inbounds i8, i8 addrspace(4)* %150, i64 %199\l  %201 = load i8, i8 addrspace(4)* %200, align 1, !tbaa !10\l  %202 = zext i8 %201 to i64\l  %203 = shl i32 %197, 3\l  %204 = zext i32 %203 to i64\l  %205 = shl nuw i64 %202, %204\l  %206 = or i64 %205, %198\l  %207 = add nuw nsw i32 %197, 1\l  %208 = icmp eq i32 %207, %151\l  br i1 %208, label %209, label %196\l|{<s0>T|<s1>F}}"];
	Node0x4fa7870:s0 -> Node0x4fa7820;
	Node0x4fa7870:s1 -> Node0x4fa7870;
	Node0x4fa7820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%209:\l209:                                              \l  %210 = phi i8 addrspace(4)* [ %195, %156 ], [ %150, %154 ], [ %150, %196 ]\l  %211 = phi i32 [ %194, %156 ], [ 0, %154 ], [ 0, %196 ]\l  %212 = phi i64 [ %193, %156 ], [ 0, %154 ], [ %206, %196 ]\l  %213 = icmp ugt i32 %211, 7\l  br i1 %213, label %216, label %214\l|{<s0>T|<s1>F}}"];
	Node0x4fa7820:s0 -> Node0x4fa98c0;
	Node0x4fa7820:s1 -> Node0x4fa9910;
	Node0x4fa9910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%214:\l214:                                              \l  %215 = icmp eq i32 %211, 0\l  br i1 %215, label %269, label %256\l|{<s0>T|<s1>F}}"];
	Node0x4fa9910:s0 -> Node0x4fa9aa0;
	Node0x4fa9910:s1 -> Node0x4fa9af0;
	Node0x4fa98c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%216:\l216:                                              \l  %217 = load i8, i8 addrspace(4)* %210, align 1, !tbaa !10\l  %218 = zext i8 %217 to i64\l  %219 = getelementptr inbounds i8, i8 addrspace(4)* %210, i64 1\l  %220 = load i8, i8 addrspace(4)* %219, align 1, !tbaa !10\l  %221 = zext i8 %220 to i64\l  %222 = shl nuw nsw i64 %221, 8\l  %223 = or i64 %222, %218\l  %224 = getelementptr inbounds i8, i8 addrspace(4)* %210, i64 2\l  %225 = load i8, i8 addrspace(4)* %224, align 1, !tbaa !10\l  %226 = zext i8 %225 to i64\l  %227 = shl nuw nsw i64 %226, 16\l  %228 = or i64 %223, %227\l  %229 = getelementptr inbounds i8, i8 addrspace(4)* %210, i64 3\l  %230 = load i8, i8 addrspace(4)* %229, align 1, !tbaa !10\l  %231 = zext i8 %230 to i64\l  %232 = shl nuw nsw i64 %231, 24\l  %233 = or i64 %228, %232\l  %234 = getelementptr inbounds i8, i8 addrspace(4)* %210, i64 4\l  %235 = load i8, i8 addrspace(4)* %234, align 1, !tbaa !10\l  %236 = zext i8 %235 to i64\l  %237 = shl nuw nsw i64 %236, 32\l  %238 = or i64 %233, %237\l  %239 = getelementptr inbounds i8, i8 addrspace(4)* %210, i64 5\l  %240 = load i8, i8 addrspace(4)* %239, align 1, !tbaa !10\l  %241 = zext i8 %240 to i64\l  %242 = shl nuw nsw i64 %241, 40\l  %243 = or i64 %238, %242\l  %244 = getelementptr inbounds i8, i8 addrspace(4)* %210, i64 6\l  %245 = load i8, i8 addrspace(4)* %244, align 1, !tbaa !10\l  %246 = zext i8 %245 to i64\l  %247 = shl nuw nsw i64 %246, 48\l  %248 = or i64 %243, %247\l  %249 = getelementptr inbounds i8, i8 addrspace(4)* %210, i64 7\l  %250 = load i8, i8 addrspace(4)* %249, align 1, !tbaa !10\l  %251 = zext i8 %250 to i64\l  %252 = shl nuw i64 %251, 56\l  %253 = or i64 %248, %252\l  %254 = add nsw i32 %211, -8\l  %255 = getelementptr inbounds i8, i8 addrspace(4)* %210, i64 8\l  br label %269\l}"];
	Node0x4fa98c0 -> Node0x4fa9aa0;
	Node0x4fa9af0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%256:\l256:                                              \l  %257 = phi i32 [ %267, %256 ], [ 0, %214 ]\l  %258 = phi i64 [ %266, %256 ], [ 0, %214 ]\l  %259 = zext i32 %257 to i64\l  %260 = getelementptr inbounds i8, i8 addrspace(4)* %210, i64 %259\l  %261 = load i8, i8 addrspace(4)* %260, align 1, !tbaa !10\l  %262 = zext i8 %261 to i64\l  %263 = shl i32 %257, 3\l  %264 = zext i32 %263 to i64\l  %265 = shl nuw i64 %262, %264\l  %266 = or i64 %265, %258\l  %267 = add nuw nsw i32 %257, 1\l  %268 = icmp eq i32 %267, %211\l  br i1 %268, label %269, label %256\l|{<s0>T|<s1>F}}"];
	Node0x4fa9af0:s0 -> Node0x4fa9aa0;
	Node0x4fa9af0:s1 -> Node0x4fa9af0;
	Node0x4fa9aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%269:\l269:                                              \l  %270 = phi i8 addrspace(4)* [ %255, %216 ], [ %210, %214 ], [ %210, %256 ]\l  %271 = phi i32 [ %254, %216 ], [ 0, %214 ], [ 0, %256 ]\l  %272 = phi i64 [ %253, %216 ], [ 0, %214 ], [ %266, %256 ]\l  %273 = icmp ugt i32 %271, 7\l  br i1 %273, label %276, label %274\l|{<s0>T|<s1>F}}"];
	Node0x4fa9aa0:s0 -> Node0x4fac310;
	Node0x4fa9aa0:s1 -> Node0x4fac360;
	Node0x4fac360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%274:\l274:                                              \l  %275 = icmp eq i32 %271, 0\l  br i1 %275, label %329, label %316\l|{<s0>T|<s1>F}}"];
	Node0x4fac360:s0 -> Node0x4fac4f0;
	Node0x4fac360:s1 -> Node0x4fac540;
	Node0x4fac310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%276:\l276:                                              \l  %277 = load i8, i8 addrspace(4)* %270, align 1, !tbaa !10\l  %278 = zext i8 %277 to i64\l  %279 = getelementptr inbounds i8, i8 addrspace(4)* %270, i64 1\l  %280 = load i8, i8 addrspace(4)* %279, align 1, !tbaa !10\l  %281 = zext i8 %280 to i64\l  %282 = shl nuw nsw i64 %281, 8\l  %283 = or i64 %282, %278\l  %284 = getelementptr inbounds i8, i8 addrspace(4)* %270, i64 2\l  %285 = load i8, i8 addrspace(4)* %284, align 1, !tbaa !10\l  %286 = zext i8 %285 to i64\l  %287 = shl nuw nsw i64 %286, 16\l  %288 = or i64 %283, %287\l  %289 = getelementptr inbounds i8, i8 addrspace(4)* %270, i64 3\l  %290 = load i8, i8 addrspace(4)* %289, align 1, !tbaa !10\l  %291 = zext i8 %290 to i64\l  %292 = shl nuw nsw i64 %291, 24\l  %293 = or i64 %288, %292\l  %294 = getelementptr inbounds i8, i8 addrspace(4)* %270, i64 4\l  %295 = load i8, i8 addrspace(4)* %294, align 1, !tbaa !10\l  %296 = zext i8 %295 to i64\l  %297 = shl nuw nsw i64 %296, 32\l  %298 = or i64 %293, %297\l  %299 = getelementptr inbounds i8, i8 addrspace(4)* %270, i64 5\l  %300 = load i8, i8 addrspace(4)* %299, align 1, !tbaa !10\l  %301 = zext i8 %300 to i64\l  %302 = shl nuw nsw i64 %301, 40\l  %303 = or i64 %298, %302\l  %304 = getelementptr inbounds i8, i8 addrspace(4)* %270, i64 6\l  %305 = load i8, i8 addrspace(4)* %304, align 1, !tbaa !10\l  %306 = zext i8 %305 to i64\l  %307 = shl nuw nsw i64 %306, 48\l  %308 = or i64 %303, %307\l  %309 = getelementptr inbounds i8, i8 addrspace(4)* %270, i64 7\l  %310 = load i8, i8 addrspace(4)* %309, align 1, !tbaa !10\l  %311 = zext i8 %310 to i64\l  %312 = shl nuw i64 %311, 56\l  %313 = or i64 %308, %312\l  %314 = add nsw i32 %271, -8\l  %315 = getelementptr inbounds i8, i8 addrspace(4)* %270, i64 8\l  br label %329\l}"];
	Node0x4fac310 -> Node0x4fac4f0;
	Node0x4fac540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%316:\l316:                                              \l  %317 = phi i32 [ %327, %316 ], [ 0, %274 ]\l  %318 = phi i64 [ %326, %316 ], [ 0, %274 ]\l  %319 = zext i32 %317 to i64\l  %320 = getelementptr inbounds i8, i8 addrspace(4)* %270, i64 %319\l  %321 = load i8, i8 addrspace(4)* %320, align 1, !tbaa !10\l  %322 = zext i8 %321 to i64\l  %323 = shl i32 %317, 3\l  %324 = zext i32 %323 to i64\l  %325 = shl nuw i64 %322, %324\l  %326 = or i64 %325, %318\l  %327 = add nuw nsw i32 %317, 1\l  %328 = icmp eq i32 %327, %271\l  br i1 %328, label %329, label %316\l|{<s0>T|<s1>F}}"];
	Node0x4fac540:s0 -> Node0x4fac4f0;
	Node0x4fac540:s1 -> Node0x4fac540;
	Node0x4fac4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%329:\l329:                                              \l  %330 = phi i8 addrspace(4)* [ %315, %276 ], [ %270, %274 ], [ %270, %316 ]\l  %331 = phi i32 [ %314, %276 ], [ 0, %274 ], [ 0, %316 ]\l  %332 = phi i64 [ %313, %276 ], [ 0, %274 ], [ %326, %316 ]\l  %333 = icmp ugt i32 %331, 7\l  br i1 %333, label %336, label %334\l|{<s0>T|<s1>F}}"];
	Node0x4fac4f0:s0 -> Node0x4fa2a70;
	Node0x4fac4f0:s1 -> Node0x4fa2ac0;
	Node0x4fa2ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%334:\l334:                                              \l  %335 = icmp eq i32 %331, 0\l  br i1 %335, label %389, label %376\l|{<s0>T|<s1>F}}"];
	Node0x4fa2ac0:s0 -> Node0x4fa2c50;
	Node0x4fa2ac0:s1 -> Node0x4fa2ca0;
	Node0x4fa2a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%336:\l336:                                              \l  %337 = load i8, i8 addrspace(4)* %330, align 1, !tbaa !10\l  %338 = zext i8 %337 to i64\l  %339 = getelementptr inbounds i8, i8 addrspace(4)* %330, i64 1\l  %340 = load i8, i8 addrspace(4)* %339, align 1, !tbaa !10\l  %341 = zext i8 %340 to i64\l  %342 = shl nuw nsw i64 %341, 8\l  %343 = or i64 %342, %338\l  %344 = getelementptr inbounds i8, i8 addrspace(4)* %330, i64 2\l  %345 = load i8, i8 addrspace(4)* %344, align 1, !tbaa !10\l  %346 = zext i8 %345 to i64\l  %347 = shl nuw nsw i64 %346, 16\l  %348 = or i64 %343, %347\l  %349 = getelementptr inbounds i8, i8 addrspace(4)* %330, i64 3\l  %350 = load i8, i8 addrspace(4)* %349, align 1, !tbaa !10\l  %351 = zext i8 %350 to i64\l  %352 = shl nuw nsw i64 %351, 24\l  %353 = or i64 %348, %352\l  %354 = getelementptr inbounds i8, i8 addrspace(4)* %330, i64 4\l  %355 = load i8, i8 addrspace(4)* %354, align 1, !tbaa !10\l  %356 = zext i8 %355 to i64\l  %357 = shl nuw nsw i64 %356, 32\l  %358 = or i64 %353, %357\l  %359 = getelementptr inbounds i8, i8 addrspace(4)* %330, i64 5\l  %360 = load i8, i8 addrspace(4)* %359, align 1, !tbaa !10\l  %361 = zext i8 %360 to i64\l  %362 = shl nuw nsw i64 %361, 40\l  %363 = or i64 %358, %362\l  %364 = getelementptr inbounds i8, i8 addrspace(4)* %330, i64 6\l  %365 = load i8, i8 addrspace(4)* %364, align 1, !tbaa !10\l  %366 = zext i8 %365 to i64\l  %367 = shl nuw nsw i64 %366, 48\l  %368 = or i64 %363, %367\l  %369 = getelementptr inbounds i8, i8 addrspace(4)* %330, i64 7\l  %370 = load i8, i8 addrspace(4)* %369, align 1, !tbaa !10\l  %371 = zext i8 %370 to i64\l  %372 = shl nuw i64 %371, 56\l  %373 = or i64 %368, %372\l  %374 = add nsw i32 %331, -8\l  %375 = getelementptr inbounds i8, i8 addrspace(4)* %330, i64 8\l  br label %389\l}"];
	Node0x4fa2a70 -> Node0x4fa2c50;
	Node0x4fa2ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%376:\l376:                                              \l  %377 = phi i32 [ %387, %376 ], [ 0, %334 ]\l  %378 = phi i64 [ %386, %376 ], [ 0, %334 ]\l  %379 = zext i32 %377 to i64\l  %380 = getelementptr inbounds i8, i8 addrspace(4)* %330, i64 %379\l  %381 = load i8, i8 addrspace(4)* %380, align 1, !tbaa !10\l  %382 = zext i8 %381 to i64\l  %383 = shl i32 %377, 3\l  %384 = zext i32 %383 to i64\l  %385 = shl nuw i64 %382, %384\l  %386 = or i64 %385, %378\l  %387 = add nuw nsw i32 %377, 1\l  %388 = icmp eq i32 %387, %331\l  br i1 %388, label %389, label %376\l|{<s0>T|<s1>F}}"];
	Node0x4fa2ca0:s0 -> Node0x4fa2c50;
	Node0x4fa2ca0:s1 -> Node0x4fa2ca0;
	Node0x4fa2c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%389:\l389:                                              \l  %390 = phi i8 addrspace(4)* [ %375, %336 ], [ %330, %334 ], [ %330, %376 ]\l  %391 = phi i32 [ %374, %336 ], [ 0, %334 ], [ 0, %376 ]\l  %392 = phi i64 [ %373, %336 ], [ 0, %334 ], [ %386, %376 ]\l  %393 = icmp ugt i32 %391, 7\l  br i1 %393, label %396, label %394\l|{<s0>T|<s1>F}}"];
	Node0x4fa2c50:s0 -> Node0x4fb17f0;
	Node0x4fa2c50:s1 -> Node0x4fb1840;
	Node0x4fb1840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%394:\l394:                                              \l  %395 = icmp eq i32 %391, 0\l  br i1 %395, label %447, label %434\l|{<s0>T|<s1>F}}"];
	Node0x4fb1840:s0 -> Node0x4fa13d0;
	Node0x4fb1840:s1 -> Node0x4fb19d0;
	Node0x4fb17f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%396:\l396:                                              \l  %397 = load i8, i8 addrspace(4)* %390, align 1, !tbaa !10\l  %398 = zext i8 %397 to i64\l  %399 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 1\l  %400 = load i8, i8 addrspace(4)* %399, align 1, !tbaa !10\l  %401 = zext i8 %400 to i64\l  %402 = shl nuw nsw i64 %401, 8\l  %403 = or i64 %402, %398\l  %404 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 2\l  %405 = load i8, i8 addrspace(4)* %404, align 1, !tbaa !10\l  %406 = zext i8 %405 to i64\l  %407 = shl nuw nsw i64 %406, 16\l  %408 = or i64 %403, %407\l  %409 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 3\l  %410 = load i8, i8 addrspace(4)* %409, align 1, !tbaa !10\l  %411 = zext i8 %410 to i64\l  %412 = shl nuw nsw i64 %411, 24\l  %413 = or i64 %408, %412\l  %414 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 4\l  %415 = load i8, i8 addrspace(4)* %414, align 1, !tbaa !10\l  %416 = zext i8 %415 to i64\l  %417 = shl nuw nsw i64 %416, 32\l  %418 = or i64 %413, %417\l  %419 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 5\l  %420 = load i8, i8 addrspace(4)* %419, align 1, !tbaa !10\l  %421 = zext i8 %420 to i64\l  %422 = shl nuw nsw i64 %421, 40\l  %423 = or i64 %418, %422\l  %424 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 6\l  %425 = load i8, i8 addrspace(4)* %424, align 1, !tbaa !10\l  %426 = zext i8 %425 to i64\l  %427 = shl nuw nsw i64 %426, 48\l  %428 = or i64 %423, %427\l  %429 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 7\l  %430 = load i8, i8 addrspace(4)* %429, align 1, !tbaa !10\l  %431 = zext i8 %430 to i64\l  %432 = shl nuw i64 %431, 56\l  %433 = or i64 %428, %432\l  br label %447\l}"];
	Node0x4fb17f0 -> Node0x4fa13d0;
	Node0x4fb19d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%434:\l434:                                              \l  %435 = phi i32 [ %445, %434 ], [ 0, %394 ]\l  %436 = phi i64 [ %444, %434 ], [ 0, %394 ]\l  %437 = zext i32 %435 to i64\l  %438 = getelementptr inbounds i8, i8 addrspace(4)* %390, i64 %437\l  %439 = load i8, i8 addrspace(4)* %438, align 1, !tbaa !10\l  %440 = zext i8 %439 to i64\l  %441 = shl i32 %435, 3\l  %442 = zext i32 %441 to i64\l  %443 = shl nuw i64 %440, %442\l  %444 = or i64 %443, %436\l  %445 = add nuw nsw i32 %435, 1\l  %446 = icmp eq i32 %445, %391\l  br i1 %446, label %447, label %434\l|{<s0>T|<s1>F}}"];
	Node0x4fb19d0:s0 -> Node0x4fa13d0;
	Node0x4fb19d0:s1 -> Node0x4fb19d0;
	Node0x4fa13d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%447:\l447:                                              \l  %448 = phi i64 [ %433, %396 ], [ 0, %394 ], [ %444, %434 ]\l  %449 = shl nuw nsw i64 %30, 2\l  %450 = add nuw nsw i64 %449, 28\l  %451 = and i64 %450, 480\l  %452 = and i64 %32, -225\l  %453 = or i64 %452, %451\l  %454 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %10,\l... i64 noundef %453, i64 noundef %92, i64 noundef %152, i64 noundef %212, i64\l... noundef %272, i64 noundef %332, i64 noundef %392, i64 noundef %448) #10\l  %455 = sub i64 %22, %30\l  %456 = getelementptr inbounds i8, i8 addrspace(4)* %23, i64 %30\l  %457 = icmp eq i64 %455, 0\l  br i1 %457, label %458, label %21\l|{<s0>T|<s1>F}}"];
	Node0x4fa13d0:s0 -> Node0x4fa0420;
	Node0x4fa13d0:s1 -> Node0x4fa0f50;
	Node0x4fa0420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%458:\l458:                                              \l  %459 = phi \<2 x i64\> [ %16, %13 ], [ %454, %447 ]\l  %460 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %461 = zext i16 %4 to i32\l  %462 = mul i32 %460, %461\l  %463 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !13\l  %464 = add i32 %462, %463\l  %465 = extractelement \<2 x i64\> %459, i64 0\l  %466 = zext i32 %464 to i64\l  %467 = and i64 %465, -227\l  %468 = or i64 %467, 34\l  %469 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %10,\l... i64 noundef %468, i64 noundef %466, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  ret void\l}"];
}
