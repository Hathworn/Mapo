digraph "CFG for '_Z15computePdKernelPdiiS_' function" {
	label="CFG for '_Z15computePdKernelPdiiS_' function";

	Node0x52b4700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = icmp slt i32 %5, %2\l  br i1 %6, label %7, label %45\l|{<s0>T|<s1>F}}"];
	Node0x52b4700:s0 -> Node0x52b4990;
	Node0x52b4700:s1 -> Node0x52b4a20;
	Node0x52b4990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%7:\l7:                                                \l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ15computePdKernelPdiiS_E5shmem, i32 0, i32 %8\l  %13 = addrspacecast double addrspace(3)* %12 to double*\l  %14 = icmp ult i32 %8, 128\l  %15 = add nuw nsw i32 %8, 128\l  %16 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ15computePdKernelPdiiS_E5shmem, i32 0, i32 %15\l  %17 = addrspacecast double addrspace(3)* %16 to double*\l  %18 = icmp ult i32 %8, 64\l  %19 = add nuw nsw i32 %8, 64\l  %20 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ15computePdKernelPdiiS_E5shmem, i32 0, i32 %19\l  %21 = addrspacecast double addrspace(3)* %20 to double*\l  %22 = icmp ult i32 %8, 32\l  %23 = add nuw nsw i32 %8, 32\l  %24 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ15computePdKernelPdiiS_E5shmem, i32 0, i32 %23\l  %25 = addrspacecast double addrspace(3)* %24 to double*\l  %26 = add nuw nsw i32 %8, 16\l  %27 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ15computePdKernelPdiiS_E5shmem, i32 0, i32 %26\l  %28 = addrspacecast double addrspace(3)* %27 to double*\l  %29 = add nuw nsw i32 %8, 8\l  %30 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ15computePdKernelPdiiS_E5shmem, i32 0, i32 %29\l  %31 = addrspacecast double addrspace(3)* %30 to double*\l  %32 = add nuw nsw i32 %8, 4\l  %33 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ15computePdKernelPdiiS_E5shmem, i32 0, i32 %32\l  %34 = addrspacecast double addrspace(3)* %33 to double*\l  %35 = add nuw nsw i32 %8, 2\l  %36 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ15computePdKernelPdiiS_E5shmem, i32 0, i32 %35\l  %37 = addrspacecast double addrspace(3)* %36 to double*\l  %38 = add nuw nsw i32 %8, 1\l  %39 = getelementptr inbounds [256 x double], [256 x double] addrspace(3)*\l... @_ZZ15computePdKernelPdiiS_E5shmem, i32 0, i32 %38\l  %40 = addrspacecast double addrspace(3)* %39 to double*\l  %41 = icmp eq i32 %8, 0\l  %42 = sitofp i32 %1 to double\l  %43 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %44 = bitcast i8 addrspace(4)* %43 to i32 addrspace(4)*\l  br label %46\l}"];
	Node0x52b4990 -> Node0x52b62c0;
	Node0x52b4a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%45:\l45:                                               \l  ret void\l}"];
	Node0x52b62c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%46:\l46:                                               \l  %47 = phi i32 [ %5, %7 ], [ %104, %95 ]\l  %48 = mul nsw i32 %47, %1\l  %49 = add i32 %48, %8\l  %50 = add nsw i32 %48, %1\l  %51 = icmp slt i32 %49, %50\l  br i1 %51, label %52, label %55\l|{<s0>T|<s1>F}}"];
	Node0x52b62c0:s0 -> Node0x52b7e10;
	Node0x52b62c0:s1 -> Node0x52b7ea0;
	Node0x52b7e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%52:\l52:                                               \l  %53 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %54 = zext i16 %53 to i32\l  br label %81\l}"];
	Node0x52b7e10 -> Node0x52b8370;
	Node0x52b7ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%55:\l55:                                               \l  %56 = phi double [ 0.000000e+00, %46 ], [ %87, %81 ]\l  store volatile double %56, double* %13, align 8, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %14, label %57, label %60\l|{<s0>T|<s1>F}}"];
	Node0x52b7ea0:s0 -> Node0x52b9440;
	Node0x52b7ea0:s1 -> Node0x52b94d0;
	Node0x52b9440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%57:\l57:                                               \l  %58 = load volatile double, double* %17, align 8, !tbaa !7\l  %59 = fadd contract double %56, %58\l  store volatile double %59, double* %13, align 8, !tbaa !7\l  br label %60\l}"];
	Node0x52b9440 -> Node0x52b94d0;
	Node0x52b94d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%60:\l60:                                               \l  %61 = phi double [ %59, %57 ], [ %56, %55 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %18, label %62, label %65\l|{<s0>T|<s1>F}}"];
	Node0x52b94d0:s0 -> Node0x52ba040;
	Node0x52b94d0:s1 -> Node0x52ba090;
	Node0x52ba040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%62:\l62:                                               \l  %63 = load volatile double, double* %21, align 8, !tbaa !7\l  %64 = fadd contract double %61, %63\l  store volatile double %64, double* %13, align 8, !tbaa !7\l  br label %65\l}"];
	Node0x52ba040 -> Node0x52ba090;
	Node0x52ba090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%65:\l65:                                               \l  %66 = phi double [ %64, %62 ], [ %61, %60 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %22, label %67, label %80\l|{<s0>T|<s1>F}}"];
	Node0x52ba090:s0 -> Node0x52ba800;
	Node0x52ba090:s1 -> Node0x52ba850;
	Node0x52ba800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%67:\l67:                                               \l  %68 = load volatile double, double* %25, align 8, !tbaa !7\l  %69 = fadd contract double %66, %68\l  store volatile double %69, double* %13, align 8, !tbaa !7\l  %70 = load volatile double, double* %28, align 8, !tbaa !7\l  %71 = fadd contract double %69, %70\l  store volatile double %71, double* %13, align 8, !tbaa !7\l  %72 = load volatile double, double* %31, align 8, !tbaa !7\l  %73 = fadd contract double %71, %72\l  store volatile double %73, double* %13, align 8, !tbaa !7\l  %74 = load volatile double, double* %34, align 8, !tbaa !7\l  %75 = fadd contract double %73, %74\l  store volatile double %75, double* %13, align 8, !tbaa !7\l  %76 = load volatile double, double* %37, align 8, !tbaa !7\l  %77 = fadd contract double %75, %76\l  store volatile double %77, double* %13, align 8, !tbaa !7\l  %78 = load volatile double, double* %40, align 8, !tbaa !7\l  %79 = fadd contract double %77, %78\l  store volatile double %79, double* %13, align 8, !tbaa !7\l  br label %80\l}"];
	Node0x52ba800 -> Node0x52ba850;
	Node0x52ba850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%80:\l80:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %41, label %90, label %95\l|{<s0>T|<s1>F}}"];
	Node0x52ba850:s0 -> Node0x52bb490;
	Node0x52ba850:s1 -> Node0x52b7ad0;
	Node0x52b8370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = phi i32 [ %49, %52 ], [ %88, %81 ]\l  %83 = phi double [ 0.000000e+00, %52 ], [ %87, %81 ]\l  %84 = sext i32 %82 to i64\l  %85 = getelementptr inbounds double, double addrspace(1)* %0, i64 %84\l  %86 = load double, double addrspace(1)* %85, align 8, !tbaa !7\l  %87 = fadd contract double %83, %86\l  %88 = add i32 %82, %54\l  %89 = icmp slt i32 %88, %50\l  br i1 %89, label %81, label %55, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x52b8370:s0 -> Node0x52b8370;
	Node0x52b8370:s1 -> Node0x52b7ea0;
	Node0x52bb490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%90:\l90:                                               \l  %91 = load double, double addrspace(3)* getelementptr inbounds ([256 x\l... double], [256 x double] addrspace(3)* @_ZZ15computePdKernelPdiiS_E5shmem, i32\l... 0, i32 0), align 16, !tbaa !7\l  %92 = fdiv contract double %91, %42\l  %93 = sext i32 %47 to i64\l  %94 = getelementptr inbounds double, double addrspace(1)* %3, i64 %93\l  store double %92, double addrspace(1)* %94, align 8, !tbaa !7\l  br label %95\l}"];
	Node0x52bb490 -> Node0x52b7ad0;
	Node0x52b7ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%95:\l95:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %96 = load i32, i32 addrspace(4)* %44, align 4, !tbaa !13\l  %97 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %98 = zext i16 %97 to i32\l  %99 = udiv i32 %96, %98\l  %100 = mul i32 %99, %98\l  %101 = icmp ugt i32 %96, %100\l  %102 = zext i1 %101 to i32\l  %103 = add i32 %99, %47\l  %104 = add i32 %103, %102\l  %105 = icmp slt i32 %104, %2\l  br i1 %105, label %46, label %45, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x52b7ad0:s0 -> Node0x52b62c0;
	Node0x52b7ad0:s1 -> Node0x52b4a20;
}
