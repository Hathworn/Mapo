digraph "CFG for '_Z12expandKernelPdiiS_' function" {
	label="CFG for '_Z12expandKernelPdiiS_' function";

	Node0x49d9640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = udiv i32 %14, %11\l  %18 = mul i32 %17, %11\l  %19 = icmp ugt i32 %14, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %11\l  %23 = mul nsw i32 %2, %1\l  %24 = icmp slt i32 %16, %23\l  br i1 %24, label %25, label %27\l|{<s0>T|<s1>F}}"];
	Node0x49d9640:s0 -> Node0x49d9690;
	Node0x49d9640:s1 -> Node0x49dbd10;
	Node0x49d9690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%25:\l25:                                               \l  %26 = sitofp i32 %2 to double\l  br label %28\l}"];
	Node0x49d9690 -> Node0x49dbec0;
	Node0x49dbd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%27:\l27:                                               \l  ret void\l}"];
	Node0x49dbec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %16, %25 ], [ %39, %28 ]\l  %30 = sitofp i32 %29 to double\l  %31 = fdiv contract double %30, %26\l  %32 = tail call double @llvm.floor.f64(double %31)\l  %33 = fptosi double %32 to i32\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %0, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !16\l  %37 = sext i32 %29 to i64\l  %38 = getelementptr inbounds double, double addrspace(1)* %3, i64 %37\l  store double %36, double addrspace(1)* %38, align 8, !tbaa !16\l  %39 = add nsw i32 %29, %22\l  %40 = icmp slt i32 %39, %23\l  br i1 %40, label %28, label %27, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x49dbec0:s0 -> Node0x49dbec0;
	Node0x49dbec0:s1 -> Node0x49dbd10;
}
