digraph "CFG for '_Z15pw_scatter_cu_zPdPKddiiPKi' function" {
	label="CFG for '_Z15pw_scatter_cu_zPdPKddiiPKi' function";

	Node0x6100c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %9 = bitcast i8 addrspace(4)* %8 to i32 addrspace(4)*\l  %10 = load i32, i32 addrspace(4)* %9, align 4, !tbaa !4\l  %11 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !13, !invariant.load\l... !14\l  %14 = zext i16 %13 to i32\l  %15 = udiv i32 %10, %14\l  %16 = mul i32 %15, %14\l  %17 = icmp ugt i32 %10, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = mul i32 %19, %20\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %23 = add i32 %21, %22\l  %24 = mul i32 %23, %14\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %26, %3\l  br i1 %27, label %28, label %65\l|{<s0>T|<s1>F}}"];
	Node0x6100c00:s0 -> Node0x6103430;
	Node0x6100c00:s1 -> Node0x61034c0;
	Node0x6103430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%28:\l28:                                               \l  %29 = shl nsw i32 %26, 1\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds double, double addrspace(1)* %1, i64 %30\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  %33 = fmul contract double %32, %2\l  %34 = sext i32 %26 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %34\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !20, !amdgpu.noclobber\l... !14\l  %37 = shl nsw i32 %36, 1\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds double, double addrspace(1)* %0, i64 %38\l  store double %33, double addrspace(1)* %39, align 8, !tbaa !16\l  %40 = add nuw nsw i32 %29, 1\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %1, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !16\l  %44 = fmul contract double %43, %2\l  %45 = add nuw nsw i32 %37, 1\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds double, double addrspace(1)* %0, i64 %46\l  store double %44, double addrspace(1)* %47, align 8, !tbaa !16\l  %48 = icmp eq i32 %4, 2\l  br i1 %48, label %49, label %65\l|{<s0>T|<s1>F}}"];
	Node0x6103430:s0 -> Node0x6105210;
	Node0x6103430:s1 -> Node0x61034c0;
	Node0x6105210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%49:\l49:                                               \l  %50 = load double, double addrspace(1)* %31, align 8, !tbaa !16\l  %51 = fmul contract double %50, %2\l  %52 = add nsw i32 %26, %3\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !20, !amdgpu.noclobber\l... !14\l  %56 = shl nsw i32 %55, 1\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds double, double addrspace(1)* %0, i64 %57\l  store double %51, double addrspace(1)* %58, align 8, !tbaa !16\l  %59 = fneg contract double %2\l  %60 = load double, double addrspace(1)* %42, align 8, !tbaa !16\l  %61 = fmul contract double %60, %59\l  %62 = add nuw nsw i32 %56, 1\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds double, double addrspace(1)* %0, i64 %63\l  store double %61, double addrspace(1)* %64, align 8, !tbaa !16\l  br label %65\l}"];
	Node0x6105210 -> Node0x61034c0;
	Node0x61034c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  ret void\l}"];
}
