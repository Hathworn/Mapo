digraph "CFG for '_Z36build_sequence_length_padding_offsetPKiiiPiS1_' function" {
	label="CFG for '_Z36build_sequence_length_padding_offsetPKiiiPiS1_' function";

	Node0x56058e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%5:\l  %6 = icmp sgt i32 %1, 0\l  br i1 %6, label %9, label %7\l|{<s0>T|<s1>F}}"];
	Node0x56058e0:s0 -> Node0x5605860;
	Node0x56058e0:s1 -> Node0x5606010;
	Node0x5606010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%7:\l7:                                                \l  %8 = phi i32 [ 0, %5 ], [ %37, %33 ]\l  store i32 %8, i32 addrspace(1)* %3, align 4, !tbaa !4\l  ret void\l}"];
	Node0x5605860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%9:\l9:                                                \l  %10 = phi i32 [ %37, %33 ], [ 0, %5 ]\l  %11 = phi i32 [ %38, %33 ], [ 0, %5 ]\l  %12 = phi i32 [ %34, %33 ], [ 0, %5 ]\l  %13 = phi i32 [ %36, %33 ], [ 0, %5 ]\l  %14 = zext i32 %11 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %14\l  %16 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !4\l  %17 = icmp sgt i32 %16, 0\l  br i1 %17, label %18, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5605860:s0 -> Node0x5607b70;
	Node0x5605860:s1 -> Node0x5606150;
	Node0x5607b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%18:\l18:                                               \l  %19 = add i32 %12, %16\l  %20 = and i32 %16, 7\l  %21 = icmp eq i32 %20, 0\l  br i1 %21, label %30, label %22\l|{<s0>T|<s1>F}}"];
	Node0x5607b70:s0 -> Node0x5607e90;
	Node0x5607b70:s1 -> Node0x5607ee0;
	Node0x5607ee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = phi i32 [ %27, %22 ], [ %12, %18 ]\l  %24 = phi i32 [ %28, %22 ], [ 0, %18 ]\l  %25 = sext i32 %23 to i64\l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %25\l  store i32 %13, i32 addrspace(1)* %26, align 4, !tbaa !4\l  %27 = add i32 %23, 1\l  %28 = add i32 %24, 1\l  %29 = icmp eq i32 %28, %20\l  br i1 %29, label %30, label %22, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x5607ee0:s0 -> Node0x5607e90;
	Node0x5607ee0:s1 -> Node0x5607ee0;
	Node0x5607e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%30:\l30:                                               \l  %31 = phi i32 [ %12, %18 ], [ %27, %22 ]\l  %32 = icmp ult i32 %16, 8\l  br i1 %32, label %33, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5607e90:s0 -> Node0x5606150;
	Node0x5607e90:s1 -> Node0x5607a60;
	Node0x5606150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%33:\l33:                                               \l  %34 = phi i32 [ %12, %9 ], [ %19, %40 ], [ %19, %30 ]\l  %35 = add i32 %13, %2\l  %36 = sub i32 %35, %16\l  %37 = add nsw i32 %16, %10\l  %38 = add nuw nsw i32 %11, 1\l  %39 = icmp eq i32 %38, %1\l  br i1 %39, label %7, label %9, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5606150:s0 -> Node0x5606010;
	Node0x5606150:s1 -> Node0x5605860;
	Node0x5607a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%40:\l40:                                               \l  %41 = phi i32 [ %65, %40 ], [ %31, %30 ]\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %42\l  store i32 %13, i32 addrspace(1)* %43, align 4, !tbaa !4\l  %44 = add i32 %41, 1\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %45\l  store i32 %13, i32 addrspace(1)* %46, align 4, !tbaa !4\l  %47 = add i32 %41, 2\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %48\l  store i32 %13, i32 addrspace(1)* %49, align 4, !tbaa !4\l  %50 = add i32 %41, 3\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %51\l  store i32 %13, i32 addrspace(1)* %52, align 4, !tbaa !4\l  %53 = add i32 %41, 4\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %54\l  store i32 %13, i32 addrspace(1)* %55, align 4, !tbaa !4\l  %56 = add i32 %41, 5\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %57\l  store i32 %13, i32 addrspace(1)* %58, align 4, !tbaa !4\l  %59 = add i32 %41, 6\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %60\l  store i32 %13, i32 addrspace(1)* %61, align 4, !tbaa !4\l  %62 = add i32 %41, 7\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %63\l  store i32 %13, i32 addrspace(1)* %64, align 4, !tbaa !4\l  %65 = add i32 %41, 8\l  %66 = icmp eq i32 %65, %19\l  br i1 %66, label %33, label %40, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5607a60:s0 -> Node0x5606150;
	Node0x5607a60:s1 -> Node0x5607a60;
}
