digraph "CFG for '_Z27GatherBackwardFuseSgdKernelPKfliiiPKlfPf' function" {
	label="CFG for '_Z27GatherBackwardFuseSgdKernelPKfliiiPKlfPf' function";

	Node0x64d27d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = icmp slt i32 %9, %4\l  br i1 %11, label %12, label %19\l|{<s0>T|<s1>F}}"];
	Node0x64d27d0:s0 -> Node0x64d3820;
	Node0x64d27d0:s1 -> Node0x64d38b0;
	Node0x64d3820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%12:\l12:                                               \l  %13 = mul nsw i32 %10, %4\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  br label %30\l}"];
	Node0x64d3820 -> Node0x64d4870;
	Node0x64d38b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%19:\l19:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %20 = icmp sgt i32 %4, 0\l  br i1 %20, label %21, label %58\l|{<s0>T|<s1>F}}"];
	Node0x64d38b0:s0 -> Node0x64d4c70;
	Node0x64d38b0:s1 -> Node0x64d4d00;
	Node0x64d4c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%21:\l21:                                               \l  %22 = sext i32 %2 to i64\l  %23 = zext i32 %9 to i64\l  %24 = fneg contract float %6\l  %25 = mul nsw i32 %10, %4\l  %26 = and i32 %4, 1\l  %27 = icmp eq i32 %4, 1\l  br i1 %27, label %40, label %28\l|{<s0>T|<s1>F}}"];
	Node0x64d4c70:s0 -> Node0x64d5170;
	Node0x64d4c70:s1 -> Node0x64d51c0;
	Node0x64d51c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%28:\l28:                                               \l  %29 = and i32 %4, -2\l  br label %59\l}"];
	Node0x64d51c0 -> Node0x64d53c0;
	Node0x64d4870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ %9, %12 ], [ %38, %30 ]\l  %32 = add nsw i32 %31, %13\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds i64, i64 addrspace(1)* %5, i64 %33\l  %35 = load i64, i64 addrspace(1)* %34, align 8, !tbaa !7, !amdgpu.noclobber\l... !6\l  %36 = trunc i64 %35 to i32\l  %37 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @shmem_indices, i32 0, i32 %31\l  store i32 %36, i32 addrspace(3)* %37, align 4, !tbaa !11\l  %38 = add i32 %31, %18\l  %39 = icmp slt i32 %38, %4\l  br i1 %39, label %30, label %19, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x64d4870:s0 -> Node0x64d4870;
	Node0x64d4870:s1 -> Node0x64d38b0;
	Node0x64d5170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%40:\l40:                                               \l  %41 = phi i32 [ 0, %21 ], [ %91, %59 ]\l  %42 = icmp eq i32 %26, 0\l  br i1 %42, label %58, label %43\l|{<s0>T|<s1>F}}"];
	Node0x64d5170:s0 -> Node0x64d4d00;
	Node0x64d5170:s1 -> Node0x64d6780;
	Node0x64d6780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%43:\l43:                                               \l  %44 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @shmem_indices, i32 0, i32 %41\l  %45 = load i32, i32 addrspace(3)* %44, align 4, !tbaa !11\l  %46 = sext i32 %45 to i64\l  %47 = mul nsw i64 %46, %22\l  %48 = add nsw i64 %47, %23\l  %49 = getelementptr inbounds float, float addrspace(1)* %7, i64 %48\l  %50 = add nsw i32 %41, %25\l  %51 = mul nsw i32 %50, %2\l  %52 = add nsw i32 %51, %9\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !15\l  %56 = fmul contract float %55, %24\l  %57 = atomicrmw fadd float addrspace(1)* %49, float %56\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %58\l}"];
	Node0x64d6780 -> Node0x64d4d00;
	Node0x64d4d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%58:\l58:                                               \l  ret void\l}"];
	Node0x64d53c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%59:\l59:                                               \l  %60 = phi i32 [ 0, %28 ], [ %91, %59 ]\l  %61 = phi i32 [ 0, %28 ], [ %92, %59 ]\l  %62 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @shmem_indices, i32 0, i32 %60\l  %63 = load i32, i32 addrspace(3)* %62, align 4, !tbaa !11\l  %64 = sext i32 %63 to i64\l  %65 = mul nsw i64 %64, %22\l  %66 = add nsw i64 %65, %23\l  %67 = getelementptr inbounds float, float addrspace(1)* %7, i64 %66\l  %68 = add nsw i32 %60, %25\l  %69 = mul nsw i32 %68, %2\l  %70 = add nsw i32 %69, %9\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !15\l  %74 = fmul contract float %73, %24\l  %75 = atomicrmw fadd float addrspace(1)* %67, float %74\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %76 = or i32 %60, 1\l  %77 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @shmem_indices, i32 0, i32 %76\l  %78 = load i32, i32 addrspace(3)* %77, align 4, !tbaa !11\l  %79 = sext i32 %78 to i64\l  %80 = mul nsw i64 %79, %22\l  %81 = add nsw i64 %80, %23\l  %82 = getelementptr inbounds float, float addrspace(1)* %7, i64 %81\l  %83 = add nsw i32 %76, %25\l  %84 = mul nsw i32 %83, %2\l  %85 = add nsw i32 %84, %9\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !15\l  %89 = fmul contract float %88, %24\l  %90 = atomicrmw fadd float addrspace(1)* %82, float %89\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %91 = add nuw nsw i32 %60, 2\l  %92 = add i32 %61, 2\l  %93 = icmp eq i32 %92, %29\l  br i1 %93, label %40, label %59, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x64d53c0:s0 -> Node0x64d5170;
	Node0x64d53c0:s1 -> Node0x64d53c0;
}
