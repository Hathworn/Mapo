digraph "CFG for '_Z12GatherKernelPKfliiiPKlPf' function" {
	label="CFG for '_Z12GatherKernelPKfliiiPKlPf' function";

	Node0x5523690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = icmp slt i32 %8, %4\l  br i1 %10, label %11, label %18\l|{<s0>T|<s1>F}}"];
	Node0x5523690:s0 -> Node0x55246a0;
	Node0x5523690:s1 -> Node0x5524730;
	Node0x55246a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%11:\l11:                                               \l  %12 = mul nsw i32 %9, %4\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  br label %28\l}"];
	Node0x55246a0 -> Node0x55256e0;
	Node0x5524730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%18:\l18:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %19 = icmp sgt i32 %4, 0\l  br i1 %19, label %20, label %54\l|{<s0>T|<s1>F}}"];
	Node0x5524730:s0 -> Node0x5525b10;
	Node0x5524730:s1 -> Node0x5525ba0;
	Node0x5525b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%20:\l20:                                               \l  %21 = sext i32 %2 to i64\l  %22 = zext i32 %8 to i64\l  %23 = mul nsw i32 %9, %4\l  %24 = and i32 %4, 1\l  %25 = icmp eq i32 %4, 1\l  br i1 %25, label %38, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5525b10:s0 -> Node0x5525fa0;
	Node0x5525b10:s1 -> Node0x5525ff0;
	Node0x5525ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%26:\l26:                                               \l  %27 = and i32 %4, -2\l  br label %55\l}"];
	Node0x5525ff0 -> Node0x55261f0;
	Node0x55256e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %8, %11 ], [ %36, %28 ]\l  %30 = add nsw i32 %29, %12\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i64, i64 addrspace(1)* %5, i64 %31\l  %33 = load i64, i64 addrspace(1)* %32, align 8, !tbaa !7, !amdgpu.noclobber\l... !6\l  %34 = trunc i64 %33 to i32\l  %35 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @shmem_indices, i32 0, i32 %29\l  store i32 %34, i32 addrspace(3)* %35, align 4, !tbaa !11\l  %36 = add i32 %29, %17\l  %37 = icmp slt i32 %36, %4\l  br i1 %37, label %28, label %18, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55256e0:s0 -> Node0x55256e0;
	Node0x55256e0:s1 -> Node0x5524730;
	Node0x5525fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%38:\l38:                                               \l  %39 = phi i32 [ 0, %20 ], [ %83, %55 ]\l  %40 = icmp eq i32 %24, 0\l  br i1 %40, label %54, label %41\l|{<s0>T|<s1>F}}"];
	Node0x5525fa0:s0 -> Node0x5525ba0;
	Node0x5525fa0:s1 -> Node0x55275e0;
	Node0x55275e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%41:\l41:                                               \l  %42 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @shmem_indices, i32 0, i32 %39\l  %43 = load i32, i32 addrspace(3)* %42, align 4, !tbaa !11\l  %44 = sext i32 %43 to i64\l  %45 = mul nsw i64 %44, %21\l  %46 = add nsw i64 %45, %22\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !15\l  %49 = add nsw i32 %39, %23\l  %50 = mul nsw i32 %49, %2\l  %51 = add nsw i32 %50, %8\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %6, i64 %52\l  store float %48, float addrspace(1)* %53, align 4, !tbaa !15\l  br label %54\l}"];
	Node0x55275e0 -> Node0x5525ba0;
	Node0x5525ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%54:\l54:                                               \l  ret void\l}"];
	Node0x55261f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%55:\l55:                                               \l  %56 = phi i32 [ 0, %26 ], [ %83, %55 ]\l  %57 = phi i32 [ 0, %26 ], [ %84, %55 ]\l  %58 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @shmem_indices, i32 0, i32 %56\l  %59 = load i32, i32 addrspace(3)* %58, align 4, !tbaa !11\l  %60 = sext i32 %59 to i64\l  %61 = mul nsw i64 %60, %21\l  %62 = add nsw i64 %61, %22\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !15\l  %65 = add nsw i32 %56, %23\l  %66 = mul nsw i32 %65, %2\l  %67 = add nsw i32 %66, %8\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %6, i64 %68\l  store float %64, float addrspace(1)* %69, align 4, !tbaa !15\l  %70 = or i32 %56, 1\l  %71 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @shmem_indices, i32 0, i32 %70\l  %72 = load i32, i32 addrspace(3)* %71, align 4, !tbaa !11\l  %73 = sext i32 %72 to i64\l  %74 = mul nsw i64 %73, %21\l  %75 = add nsw i64 %74, %22\l  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !15\l  %78 = add nsw i32 %70, %23\l  %79 = mul nsw i32 %78, %2\l  %80 = add nsw i32 %79, %8\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %6, i64 %81\l  store float %77, float addrspace(1)* %82, align 4, !tbaa !15\l  %83 = add nuw nsw i32 %56, 2\l  %84 = add i32 %57, 2\l  %85 = icmp eq i32 %84, %27\l  br i1 %85, label %38, label %55, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x55261f0:s0 -> Node0x5525fa0;
	Node0x55261f0:s1 -> Node0x55261f0;
}
