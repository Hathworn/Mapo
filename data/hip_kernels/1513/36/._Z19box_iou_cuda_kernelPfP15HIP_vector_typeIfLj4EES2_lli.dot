digraph "CFG for '_Z19box_iou_cuda_kernelPfP15HIP_vector_typeIfLj4EES2_lli' function" {
	label="CFG for '_Z19box_iou_cuda_kernelPfP15HIP_vector_typeIfLj4EES2_lli' function";

	Node0x6220880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = sext i32 %15 to i64\l  %17 = mul nsw i64 %4, %3\l  %18 = icmp sgt i64 %17, %16\l  br i1 %18, label %19, label %21\l|{<s0>T|<s1>F}}"];
	Node0x6220880:s0 -> Node0x6222880;
	Node0x6220880:s1 -> Node0x6222910;
	Node0x6222880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%19:\l19:                                               \l  %20 = sext i32 %5 to i64\l  br label %22\l}"];
	Node0x6222880 -> Node0x6222ac0;
	Node0x6222910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%21:\l21:                                               \l  ret void\l}"];
	Node0x6222ac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = phi i64 [ %16, %19 ], [ %74, %22 ]\l  %24 = freeze i64 %23\l  %25 = freeze i64 %4\l  %26 = sdiv i64 %24, %25\l  %27 = mul i64 %26, %25\l  %28 = sub i64 %24, %27\l  %29 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %26, i32 0, i32 0, i32 0, i64 0\l  %30 = load float, float addrspace(1)* %29, align 16, !tbaa !7\l  %31 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %26, i32 0, i32 0, i32 0, i64 1\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7\l  %33 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %26, i32 0, i32 0, i32 0, i64 2\l  %34 = load float, float addrspace(1)* %33, align 8, !tbaa !7\l  %35 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %26, i32 0, i32 0, i32 0, i64 3\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7\l  %37 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64 0\l  %38 = load float, float addrspace(1)* %37, align 16, !tbaa !7\l  %39 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64 1\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7\l  %41 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64 2\l  %42 = load float, float addrspace(1)* %41, align 8, !tbaa !7\l  %43 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64 3\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7\l  %45 = tail call float @llvm.maxnum.f32(float %30, float %38)\l  %46 = tail call float @llvm.maxnum.f32(float %32, float %40)\l  %47 = tail call float @llvm.minnum.f32(float %34, float %42)\l  %48 = tail call float @llvm.minnum.f32(float %36, float %44)\l  %49 = fsub contract float %47, %45\l  %50 = fadd contract float %49, 1.000000e+00\l  %51 = fcmp contract olt float %50, 0.000000e+00\l  %52 = select contract i1 %51, float 0.000000e+00, float %50\l  %53 = fsub contract float %48, %46\l  %54 = fadd contract float %53, 1.000000e+00\l  %55 = fcmp contract olt float %54, 0.000000e+00\l  %56 = select contract i1 %55, float 0.000000e+00, float %54\l  %57 = fmul contract float %52, %56\l  %58 = fsub contract float %34, %30\l  %59 = fadd contract float %58, 1.000000e+00\l  %60 = fsub contract float %36, %32\l  %61 = fadd contract float %60, 1.000000e+00\l  %62 = fmul contract float %59, %61\l  %63 = fsub contract float %42, %38\l  %64 = fadd contract float %63, 1.000000e+00\l  %65 = fsub contract float %44, %40\l  %66 = fadd contract float %65, 1.000000e+00\l  %67 = fmul contract float %64, %66\l  %68 = fadd contract float %62, %67\l  %69 = fsub contract float %68, %57\l  %70 = fdiv contract float %57, %69\l  %71 = mul i64 %26, %4\l  %72 = add i64 %71, %28\l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %72\l  store float %70, float addrspace(1)* %73, align 4, !tbaa !10\l  %74 = add nsw i64 %23, %20\l  %75 = icmp slt i64 %74, %17\l  br i1 %75, label %22, label %21, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x6222ac0:s0 -> Node0x6222ac0;
	Node0x6222ac0:s1 -> Node0x6222910;
}
