digraph "CFG for '_Z16init_topp_id_valPiS_ii' function" {
	label="CFG for '_Z16init_topp_id_valPiS_ii' function";

	Node0x6362480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = icmp ne i32 %6, 0\l  %8 = icmp sgt i32 %5, %2\l  %9 = select i1 %7, i1 true, i1 %8\l  br i1 %9, label %23, label %10\l|{<s0>T|<s1>F}}"];
	Node0x6362480:s0 -> Node0x63624d0;
	Node0x6362480:s1 -> Node0x6363cc0;
	Node0x6363cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%10:\l10:                                               \l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  br label %16\l}"];
	Node0x6363cc0 -> Node0x6364560;
	Node0x6364560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  %17 = phi i32 [ %5, %10 ], [ %21, %16 ]\l  %18 = mul nsw i32 %17, %3\l  %19 = sext i32 %17 to i64\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %19\l  store i32 %18, i32 addrspace(1)* %20, align 4, !tbaa !7\l  %21 = add i32 %17, %15\l  %22 = icmp sgt i32 %21, %2\l  br i1 %22, label %23, label %16, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x6364560:s0 -> Node0x63624d0;
	Node0x6364560:s1 -> Node0x6364560;
	Node0x63624d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%23:\l23:                                               \l  %24 = icmp slt i32 %5, %3\l  br i1 %24, label %25, label %39\l|{<s0>T|<s1>F}}"];
	Node0x63624d0:s0 -> Node0x6364e60;
	Node0x63624d0:s1 -> Node0x6364eb0;
	Node0x6364e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%25:\l25:                                               \l  %26 = mul nsw i32 %6, %3\l  %27 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %28 = getelementptr i8, i8 addrspace(4)* %27, i64 4\l  %29 = bitcast i8 addrspace(4)* %28 to i16 addrspace(4)*\l  %30 = load i16, i16 addrspace(4)* %29, align 4, !range !5, !invariant.load !6\l  %31 = zext i16 %30 to i32\l  br label %32\l}"];
	Node0x6364e60 -> Node0x6365fa0;
	Node0x6365fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = phi i32 [ %5, %25 ], [ %37, %32 ]\l  %34 = add nsw i32 %33, %26\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %35\l  store i32 %33, i32 addrspace(1)* %36, align 4, !tbaa !7\l  %37 = add i32 %33, %31\l  %38 = icmp slt i32 %37, %3\l  br i1 %38, label %32, label %39, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x6365fa0:s0 -> Node0x6365fa0;
	Node0x6365fa0:s1 -> Node0x6364eb0;
	Node0x6364eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%39:\l39:                                               \l  ret void\l}"];
}
