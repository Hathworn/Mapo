digraph "CFG for '_Z26topp_initialization_kernelPbPiS0_S0_S0_iii' function" {
	label="CFG for '_Z26topp_initialization_kernelPbPiS0_S0_S0_iii' function";

	Node0x527be50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = icmp eq i32 %10, 0\l  br i1 %11, label %12, label %43\l|{<s0>T|<s1>F}}"];
	Node0x527be50:s0 -> Node0x527d4b0;
	Node0x527be50:s1 -> Node0x527d540;
	Node0x527d4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%12:\l12:                                               \l  %13 = icmp sgt i32 %9, %5\l  br i1 %13, label %20, label %14\l|{<s0>T|<s1>F}}"];
	Node0x527d4b0:s0 -> Node0x527d710;
	Node0x527d4b0:s1 -> Node0x527d760;
	Node0x527d760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%14:\l14:                                               \l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  br label %28\l}"];
	Node0x527d760 -> Node0x527e0a0;
	Node0x527d710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%20:\l20:                                               \l  %21 = icmp slt i32 %9, %5\l  br i1 %21, label %22, label %43\l|{<s0>T|<s1>F}}"];
	Node0x527d710:s0 -> Node0x527e230;
	Node0x527d710:s1 -> Node0x527d540;
	Node0x527e230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%22:\l22:                                               \l  %23 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %24 = getelementptr i8, i8 addrspace(4)* %23, i64 4\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 4, !range !5, !invariant.load !6\l  %27 = zext i16 %26 to i32\l  br label %35\l}"];
	Node0x527e230 -> Node0x527f250;
	Node0x527e0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %9, %14 ], [ %33, %28 ]\l  %30 = mul nsw i32 %29, %6\l  %31 = sext i32 %29 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %31\l  store i32 %30, i32 addrspace(1)* %32, align 4, !tbaa !7\l  %33 = add i32 %29, %19\l  %34 = icmp sgt i32 %33, %5\l  br i1 %34, label %20, label %28, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x527e0a0:s0 -> Node0x527d710;
	Node0x527e0a0:s1 -> Node0x527e0a0;
	Node0x527f250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%35:\l35:                                               \l  %36 = phi i32 [ %9, %22 ], [ %41, %35 ]\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %37\l  store i8 0, i8 addrspace(1)* %38, align 1, !tbaa !13\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %37\l  store i32 0, i32 addrspace(1)* %39, align 4, !tbaa !7\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %37\l  store i32 %7, i32 addrspace(1)* %40, align 4, !tbaa !7\l  %41 = add i32 %36, %27\l  %42 = icmp slt i32 %41, %5\l  br i1 %42, label %35, label %43, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x527f250:s0 -> Node0x527f250;
	Node0x527f250:s1 -> Node0x527d540;
	Node0x527d540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%43:\l43:                                               \l  %44 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %45 = getelementptr i8, i8 addrspace(4)* %44, i64 4\l  %46 = bitcast i8 addrspace(4)* %45 to i16 addrspace(4)*\l  %47 = load i16, i16 addrspace(4)* %46, align 4, !range !5, !invariant.load !6\l  %48 = zext i16 %47 to i32\l  %49 = getelementptr inbounds i8, i8 addrspace(4)* %44, i64 12\l  %50 = bitcast i8 addrspace(4)* %49 to i32 addrspace(4)*\l  %51 = load i32, i32 addrspace(4)* %50, align 4, !tbaa !16\l  %52 = mul i32 %10, %48\l  %53 = add i32 %52, %9\l  %54 = mul nsw i32 %6, %5\l  %55 = icmp slt i32 %53, %54\l  br i1 %55, label %56, label %70\l|{<s0>T|<s1>F}}"];
	Node0x527d540:s0 -> Node0x5281200;
	Node0x527d540:s1 -> Node0x5281290;
	Node0x5281200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%56:\l56:                                               \l  %57 = udiv i32 %51, %48\l  %58 = mul i32 %57, %48\l  %59 = icmp ugt i32 %51, %58\l  %60 = zext i1 %59 to i32\l  %61 = add i32 %57, %60\l  %62 = mul i32 %61, %48\l  br label %63\l}"];
	Node0x5281200 -> Node0x5281710;
	Node0x5281710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = phi i32 [ %53, %56 ], [ %68, %63 ]\l  %65 = srem i32 %64, %6\l  %66 = sext i32 %64 to i64\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %66\l  store i32 %65, i32 addrspace(1)* %67, align 4, !tbaa !7\l  %68 = add i32 %62, %64\l  %69 = icmp slt i32 %68, %54\l  br i1 %69, label %63, label %70, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x5281710:s0 -> Node0x5281710;
	Node0x5281710:s1 -> Node0x5281290;
	Node0x5281290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%70:\l70:                                               \l  ret void\l}"];
}
