digraph "CFG for '_Z7kernel4iiiPfS_S_' function" {
	label="CFG for '_Z7kernel4iiiPfS_S_' function";

	Node0x4606a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %11\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %1\l  br i1 %16, label %17, label %157\l|{<s0>T|<s1>F}}"];
	Node0x4606a90:s0 -> Node0x4607370;
	Node0x4606a90:s1 -> Node0x4608a60;
	Node0x4607370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%17:\l17:                                               \l  %18 = icmp sgt i32 %0, 0\l  br i1 %18, label %19, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4607370:s0 -> Node0x4608c30;
	Node0x4607370:s1 -> Node0x4608c80;
	Node0x4608c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = mul nsw i32 %2, %0\l  %21 = mul nsw i32 %15, %0\l  %22 = and i32 %0, 7\l  %23 = icmp ult i32 %0, 8\l  br i1 %23, label %26, label %24\l|{<s0>T|<s1>F}}"];
	Node0x4608c30:s0 -> Node0x4609060;
	Node0x4608c30:s1 -> Node0x46090b0;
	Node0x46090b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%24:\l24:                                               \l  %25 = and i32 %0, -8\l  br label %55\l}"];
	Node0x46090b0 -> Node0x46092b0;
	Node0x4609060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%26:\l26:                                               \l  %27 = phi float [ undef, %19 ], [ %153, %55 ]\l  %28 = phi i32 [ 0, %19 ], [ %154, %55 ]\l  %29 = phi float [ 0.000000e+00, %19 ], [ %153, %55 ]\l  %30 = icmp eq i32 %22, 0\l  br i1 %30, label %49, label %31\l|{<s0>T|<s1>F}}"];
	Node0x4609060:s0 -> Node0x4608c80;
	Node0x4609060:s1 -> Node0x460a520;
	Node0x460a520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = phi i32 [ %46, %31 ], [ %28, %26 ]\l  %33 = phi float [ %45, %31 ], [ %29, %26 ]\l  %34 = phi i32 [ %47, %31 ], [ 0, %26 ]\l  %35 = add nsw i32 %32, %20\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %3, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = add nsw i32 %32, %21\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %4, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = fsub contract float %38, %42\l  %44 = fmul contract float %43, %43\l  %45 = fadd contract float %33, %44\l  %46 = add nuw nsw i32 %32, 1\l  %47 = add i32 %34, 1\l  %48 = icmp eq i32 %47, %22\l  br i1 %48, label %49, label %31, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x460a520:s0 -> Node0x4608c80;
	Node0x460a520:s1 -> Node0x460a520;
	Node0x4608c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%49:\l49:                                               \l  %50 = phi float [ 0.000000e+00, %17 ], [ %27, %26 ], [ %45, %31 ]\l  %51 = mul nsw i32 %2, %1\l  %52 = add nsw i32 %15, %51\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %5, i64 %53\l  store float %50, float addrspace(1)* %54, align 4, !tbaa !7\l  br label %157\l}"];
	Node0x4608c80 -> Node0x4608a60;
	Node0x46092b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%55:\l55:                                               \l  %56 = phi i32 [ 0, %24 ], [ %154, %55 ]\l  %57 = phi float [ 0.000000e+00, %24 ], [ %153, %55 ]\l  %58 = phi i32 [ 0, %24 ], [ %155, %55 ]\l  %59 = add nsw i32 %56, %20\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %3, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = add nsw i32 %56, %21\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %4, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %67 = fsub contract float %62, %66\l  %68 = fmul contract float %67, %67\l  %69 = fadd contract float %57, %68\l  %70 = or i32 %56, 1\l  %71 = add nsw i32 %70, %20\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %3, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %75 = add nsw i32 %70, %21\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %4, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %79 = fsub contract float %74, %78\l  %80 = fmul contract float %79, %79\l  %81 = fadd contract float %69, %80\l  %82 = or i32 %56, 2\l  %83 = add nsw i32 %82, %20\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %3, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %87 = add nsw i32 %82, %21\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %4, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %91 = fsub contract float %86, %90\l  %92 = fmul contract float %91, %91\l  %93 = fadd contract float %81, %92\l  %94 = or i32 %56, 3\l  %95 = add nsw i32 %94, %20\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %3, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %99 = add nsw i32 %94, %21\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %4, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %103 = fsub contract float %98, %102\l  %104 = fmul contract float %103, %103\l  %105 = fadd contract float %93, %104\l  %106 = or i32 %56, 4\l  %107 = add nsw i32 %106, %20\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %3, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %111 = add nsw i32 %106, %21\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %4, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %115 = fsub contract float %110, %114\l  %116 = fmul contract float %115, %115\l  %117 = fadd contract float %105, %116\l  %118 = or i32 %56, 5\l  %119 = add nsw i32 %118, %20\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %3, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %123 = add nsw i32 %118, %21\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %4, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %127 = fsub contract float %122, %126\l  %128 = fmul contract float %127, %127\l  %129 = fadd contract float %117, %128\l  %130 = or i32 %56, 6\l  %131 = add nsw i32 %130, %20\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %3, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %135 = add nsw i32 %130, %21\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %4, i64 %136\l  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %139 = fsub contract float %134, %138\l  %140 = fmul contract float %139, %139\l  %141 = fadd contract float %129, %140\l  %142 = or i32 %56, 7\l  %143 = add nsw i32 %142, %20\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %3, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %147 = add nsw i32 %142, %21\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds float, float addrspace(1)* %4, i64 %148\l  %150 = load float, float addrspace(1)* %149, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %151 = fsub contract float %146, %150\l  %152 = fmul contract float %151, %151\l  %153 = fadd contract float %141, %152\l  %154 = add nuw nsw i32 %56, 8\l  %155 = add i32 %58, 8\l  %156 = icmp eq i32 %155, %25\l  br i1 %156, label %26, label %55, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x46092b0:s0 -> Node0x4609060;
	Node0x46092b0:s1 -> Node0x46092b0;
	Node0x4608a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%157:\l157:                                              \l  ret void\l}"];
}
