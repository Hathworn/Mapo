digraph "CFG for '_Z13lowHysterisisiiPfS_fS_' function" {
	label="CFG for '_Z13lowHysterisisiiPfS_fS_' function";

	Node0x5634700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = add i32 %14, %7\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = add i32 %22, %16\l  %24 = icmp sgt i32 %15, 0\l  br i1 %24, label %25, label %106\l|{<s0>T|<s1>F}}"];
	Node0x5634700:s0 -> Node0x5638010;
	Node0x5634700:s1 -> Node0x56380a0;
	Node0x5638010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d8564670",label="{%25:\l25:                                               \l  %26 = add nsw i32 %0, -1\l  %27 = icmp slt i32 %15, %26\l  %28 = icmp sgt i32 %23, 0\l  %29 = select i1 %27, i1 %28, i1 false\l  %30 = add nsw i32 %1, -1\l  %31 = icmp slt i32 %23, %30\l  %32 = select i1 %29, i1 %31, i1 false\l  br i1 %32, label %33, label %106\l|{<s0>T|<s1>F}}"];
	Node0x5638010:s0 -> Node0x5636d10;
	Node0x5638010:s1 -> Node0x56380a0;
	Node0x5636d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%33:\l33:                                               \l  %34 = mul nsw i32 %23, %0\l  %35 = add nsw i32 %34, %15\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %3, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %39 = getelementptr inbounds float, float addrspace(1)* %5, i64 %36\l  store float %38, float addrspace(1)* %39, align 4, !tbaa !7\l  %40 = load float, float addrspace(1)* %37, align 4, !tbaa !7\l  %41 = fcmp contract oeq float %40, 1.000000e+00\l  br i1 %41, label %42, label %106\l|{<s0>T|<s1>F}}"];
	Node0x5636d10:s0 -> Node0x5639f60;
	Node0x5636d10:s1 -> Node0x56380a0;
	Node0x5639f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%42:\l42:                                               \l  %43 = add nsw i32 %35, 1\l  %44 = add nsw i32 %35, -1\l  %45 = sub nsw i32 %35, %0\l  %46 = add nsw i32 %35, %0\l  %47 = add nsw i32 %46, 1\l  %48 = add nsw i32 %45, 1\l  %49 = add nsw i32 %46, -1\l  %50 = add nsw i32 %45, -1\l  %51 = sext i32 %43 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %2, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7\l  %54 = fcmp contract ogt float %53, %4\l  br i1 %54, label %55, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5639f60:s0 -> Node0x563a760;
	Node0x5639f60:s1 -> Node0x563a7b0;
	Node0x563a760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%55:\l55:                                               \l  %56 = getelementptr inbounds float, float addrspace(1)* %5, i64 %51\l  store float 1.000000e+00, float addrspace(1)* %56, align 4, !tbaa !7\l  br label %57\l}"];
	Node0x563a760 -> Node0x563a7b0;
	Node0x563a7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%57:\l57:                                               \l  %58 = sext i32 %44 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %2, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7\l  %61 = fcmp contract ogt float %60, %4\l  br i1 %61, label %62, label %64\l|{<s0>T|<s1>F}}"];
	Node0x563a7b0:s0 -> Node0x563aca0;
	Node0x563a7b0:s1 -> Node0x563acf0;
	Node0x563aca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%62:\l62:                                               \l  %63 = getelementptr inbounds float, float addrspace(1)* %5, i64 %58\l  store float 1.000000e+00, float addrspace(1)* %63, align 4, !tbaa !7\l  br label %64\l}"];
	Node0x563aca0 -> Node0x563acf0;
	Node0x563acf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%64:\l64:                                               \l  %65 = sext i32 %45 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %2, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7\l  %68 = fcmp contract ogt float %67, %4\l  br i1 %68, label %69, label %71\l|{<s0>T|<s1>F}}"];
	Node0x563acf0:s0 -> Node0x563b3a0;
	Node0x563acf0:s1 -> Node0x563b3f0;
	Node0x563b3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%69:\l69:                                               \l  %70 = getelementptr inbounds float, float addrspace(1)* %5, i64 %65\l  store float 1.000000e+00, float addrspace(1)* %70, align 4, !tbaa !7\l  br label %71\l}"];
	Node0x563b3a0 -> Node0x563b3f0;
	Node0x563b3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%71:\l71:                                               \l  %72 = sext i32 %46 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %2, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7\l  %75 = fcmp contract ogt float %74, %4\l  br i1 %75, label %76, label %78\l|{<s0>T|<s1>F}}"];
	Node0x563b3f0:s0 -> Node0x563b8a0;
	Node0x563b3f0:s1 -> Node0x563b8f0;
	Node0x563b8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%76:\l76:                                               \l  %77 = getelementptr inbounds float, float addrspace(1)* %5, i64 %72\l  store float 1.000000e+00, float addrspace(1)* %77, align 4, !tbaa !7\l  br label %78\l}"];
	Node0x563b8a0 -> Node0x563b8f0;
	Node0x563b8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%78:\l78:                                               \l  %79 = sext i32 %47 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %2, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !7\l  %82 = fcmp contract ogt float %81, %4\l  br i1 %82, label %83, label %85\l|{<s0>T|<s1>F}}"];
	Node0x563b8f0:s0 -> Node0x563bda0;
	Node0x563b8f0:s1 -> Node0x563bdf0;
	Node0x563bda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%83:\l83:                                               \l  %84 = getelementptr inbounds float, float addrspace(1)* %5, i64 %79\l  store float 1.000000e+00, float addrspace(1)* %84, align 4, !tbaa !7\l  br label %85\l}"];
	Node0x563bda0 -> Node0x563bdf0;
	Node0x563bdf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%85:\l85:                                               \l  %86 = sext i32 %48 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %2, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7\l  %89 = fcmp contract ogt float %88, %4\l  br i1 %89, label %90, label %92\l|{<s0>T|<s1>F}}"];
	Node0x563bdf0:s0 -> Node0x563c2a0;
	Node0x563bdf0:s1 -> Node0x563c2f0;
	Node0x563c2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%90:\l90:                                               \l  %91 = getelementptr inbounds float, float addrspace(1)* %5, i64 %86\l  store float 1.000000e+00, float addrspace(1)* %91, align 4, !tbaa !7\l  br label %92\l}"];
	Node0x563c2a0 -> Node0x563c2f0;
	Node0x563c2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%92:\l92:                                               \l  %93 = sext i32 %49 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %2, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7\l  %96 = fcmp contract ogt float %95, %4\l  br i1 %96, label %97, label %99\l|{<s0>T|<s1>F}}"];
	Node0x563c2f0:s0 -> Node0x563c7a0;
	Node0x563c2f0:s1 -> Node0x563c7f0;
	Node0x563c7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%97:\l97:                                               \l  %98 = getelementptr inbounds float, float addrspace(1)* %5, i64 %93\l  store float 1.000000e+00, float addrspace(1)* %98, align 4, !tbaa !7\l  br label %99\l}"];
	Node0x563c7a0 -> Node0x563c7f0;
	Node0x563c7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%99:\l99:                                               \l  %100 = sext i32 %50 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %2, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !7\l  %103 = fcmp contract ogt float %102, %4\l  br i1 %103, label %104, label %106\l|{<s0>T|<s1>F}}"];
	Node0x563c7f0:s0 -> Node0x563cca0;
	Node0x563c7f0:s1 -> Node0x56380a0;
	Node0x563cca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%104:\l104:                                              \l  %105 = getelementptr inbounds float, float addrspace(1)* %5, i64 %100\l  store float 1.000000e+00, float addrspace(1)* %105, align 4, !tbaa !7\l  br label %106\l}"];
	Node0x563cca0 -> Node0x56380a0;
	Node0x56380a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  ret void\l}"];
}
