digraph "CFG for '_Z6Conv2DPfS_S_iii' function" {
	label="CFG for '_Z6Conv2DPfS_S_iii' function";

	Node0x5a7d600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %8 = shl nuw nsw i32 %7, 5\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = add nuw nsw i32 %8, %9\l  %11 = trunc i32 %10 to i16\l  %12 = freeze i16 %11\l  %13 = udiv i16 %12, 36\l  %14 = zext i16 %13 to i32\l  %15 = mul i16 %13, 36\l  %16 = sub i16 %12, %15\l  %17 = zext i16 %16 to i32\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = shl i32 %18, 5\l  %20 = add i32 %19, %14\l  %21 = sdiv i32 %5, -2\l  %22 = add i32 %20, %21\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %24 = shl i32 %23, 5\l  %25 = add i32 %24, %17\l  %26 = add i32 %25, %21\l  %27 = mul nsw i32 %22, %3\l  %28 = add nsw i32 %27, %26\l  %29 = icmp sgt i32 %22, -1\l  br i1 %29, label %30, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5a7d600:s0 -> Node0x5a80120;
	Node0x5a7d600:s1 -> Node0x5a801b0;
	Node0x5a80120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%30:\l30:                                               \l  %31 = icmp slt i32 %22, %4\l  %32 = icmp sgt i32 %26, -1\l  %33 = select i1 %31, i1 %32, i1 false\l  %34 = icmp slt i32 %26, %3\l  %35 = select i1 %33, i1 %34, i1 false\l  br i1 %35, label %36, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5a80120:s0 -> Node0x5a80760;
	Node0x5a80120:s1 -> Node0x5a801b0;
	Node0x5a80760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%36:\l36:                                               \l  %37 = sext i32 %28 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %40\l}"];
	Node0x5a80760 -> Node0x5a801b0;
	Node0x5a801b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%40:\l40:                                               \l  %41 = phi float [ %39, %36 ], [ 0.000000e+00, %30 ], [ 0.000000e+00, %6 ]\l  %42 = getelementptr inbounds [36 x [36 x float]], [36 x [36 x float]]\l... addrspace(3)* @_ZZ6Conv2DPfS_S_iiiE9sharedMem, i32 0, i32 %14, i32 %17\l  store float %41, float addrspace(3)* %42, align 4, !tbaa !5\l  %43 = trunc i32 %10 to i16\l  %44 = add nuw i16 %43, 1024\l  %45 = freeze i16 %44\l  %46 = udiv i16 %45, 36\l  %47 = zext i16 %46 to i32\l  %48 = mul i16 %46, 36\l  %49 = sub i16 %45, %48\l  %50 = zext i16 %49 to i32\l  %51 = add i32 %19, %47\l  %52 = add i32 %51, %21\l  %53 = add i32 %24, %50\l  %54 = add i32 %53, %21\l  %55 = mul nsw i32 %52, %3\l  %56 = add nsw i32 %55, %54\l  %57 = icmp ult i32 %10, 272\l  br i1 %57, label %58, label %73\l|{<s0>T|<s1>F}}"];
	Node0x5a801b0:s0 -> Node0x5a82810;
	Node0x5a801b0:s1 -> Node0x5a828a0;
	Node0x5a82810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%58:\l58:                                               \l  %59 = icmp sgt i32 %52, -1\l  br i1 %59, label %60, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5a82810:s0 -> Node0x5a82a70;
	Node0x5a82810:s1 -> Node0x5a82ac0;
	Node0x5a82a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%60:\l60:                                               \l  %61 = icmp slt i32 %52, %4\l  %62 = icmp sgt i32 %54, -1\l  %63 = select i1 %61, i1 %62, i1 false\l  %64 = icmp slt i32 %54, %3\l  %65 = select i1 %63, i1 %64, i1 false\l  br i1 %65, label %66, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5a82a70:s0 -> Node0x5a804c0;
	Node0x5a82a70:s1 -> Node0x5a82ac0;
	Node0x5a804c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%66:\l66:                                               \l  %67 = sext i32 %56 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %70\l}"];
	Node0x5a804c0 -> Node0x5a82ac0;
	Node0x5a82ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%70:\l70:                                               \l  %71 = phi float [ %69, %66 ], [ 0.000000e+00, %60 ], [ 0.000000e+00, %58 ]\l  %72 = getelementptr inbounds [36 x [36 x float]], [36 x [36 x float]]\l... addrspace(3)* @_ZZ6Conv2DPfS_S_iiiE9sharedMem, i32 0, i32 %47, i32 %50\l  store float %71, float addrspace(3)* %72, align 4, !tbaa !5\l  br label %73\l}"];
	Node0x5a82ac0 -> Node0x5a828a0;
	Node0x5a828a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%73:\l73:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %74 = icmp sgt i32 %5, 0\l  br i1 %74, label %75, label %85\l|{<s0>T|<s1>F}}"];
	Node0x5a828a0:s0 -> Node0x5a84020;
	Node0x5a828a0:s1 -> Node0x5a84070;
	Node0x5a84020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%75:\l75:                                               \l  %76 = and i32 %5, 7\l  %77 = icmp ult i32 %5, 8\l  %78 = and i32 %5, -8\l  %79 = icmp eq i32 %76, 0\l  br label %80\l}"];
	Node0x5a84020 -> Node0x5a84450;
	Node0x5a84450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%80:\l80:                                               \l  %81 = phi i32 [ %114, %112 ], [ 0, %75 ]\l  %82 = phi float [ %113, %112 ], [ 0.000000e+00, %75 ]\l  %83 = add nuw i32 %81, %7\l  %84 = mul nsw i32 %81, %5\l  br i1 %77, label %92, label %116\l|{<s0>T|<s1>F}}"];
	Node0x5a84450:s0 -> Node0x5a848c0;
	Node0x5a84450:s1 -> Node0x5a84950;
	Node0x5a84070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%85:\l85:                                               \l  %86 = phi float [ 0.000000e+00, %73 ], [ %113, %112 ]\l  %87 = add i32 %24, %9\l  %88 = add i32 %19, %7\l  %89 = icmp slt i32 %87, %3\l  %90 = icmp slt i32 %88, %4\l  %91 = select i1 %89, i1 %90, i1 false\l  br i1 %91, label %202, label %209\l|{<s0>T|<s1>F}}"];
	Node0x5a84070:s0 -> Node0x5a84e30;
	Node0x5a84070:s1 -> Node0x5a84e80;
	Node0x5a848c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%92:\l92:                                               \l  %93 = phi float [ undef, %80 ], [ %198, %116 ]\l  %94 = phi i32 [ 0, %80 ], [ %199, %116 ]\l  %95 = phi float [ %82, %80 ], [ %198, %116 ]\l  br i1 %79, label %112, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5a848c0:s0 -> Node0x5a84540;
	Node0x5a848c0:s1 -> Node0x5a85270;
	Node0x5a85270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%96:\l96:                                               \l  %97 = phi i32 [ %109, %96 ], [ %94, %92 ]\l  %98 = phi float [ %108, %96 ], [ %95, %92 ]\l  %99 = phi i32 [ %110, %96 ], [ 0, %92 ]\l  %100 = add nuw i32 %97, %9\l  %101 = getelementptr inbounds [36 x [36 x float]], [36 x [36 x float]]\l... addrspace(3)* @_ZZ6Conv2DPfS_S_iiiE9sharedMem, i32 0, i32 %83, i32 %100\l  %102 = load float, float addrspace(3)* %101, align 4, !tbaa !5\l  %103 = add nsw i32 %97, %84\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %1, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %107 = fmul contract float %102, %106\l  %108 = fadd contract float %98, %107\l  %109 = add nuw nsw i32 %97, 1\l  %110 = add i32 %99, 1\l  %111 = icmp eq i32 %110, %76\l  br i1 %111, label %112, label %96, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5a85270:s0 -> Node0x5a84540;
	Node0x5a85270:s1 -> Node0x5a85270;
	Node0x5a84540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%112:\l112:                                              \l  %113 = phi float [ %93, %92 ], [ %108, %96 ]\l  %114 = add nuw nsw i32 %81, 1\l  %115 = icmp eq i32 %114, %5\l  br i1 %115, label %85, label %80, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5a84540:s0 -> Node0x5a84070;
	Node0x5a84540:s1 -> Node0x5a84450;
	Node0x5a84950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%116:\l116:                                              \l  %117 = phi i32 [ %199, %116 ], [ 0, %80 ]\l  %118 = phi float [ %198, %116 ], [ %82, %80 ]\l  %119 = phi i32 [ %200, %116 ], [ 0, %80 ]\l  %120 = add nuw i32 %117, %9\l  %121 = getelementptr inbounds [36 x [36 x float]], [36 x [36 x float]]\l... addrspace(3)* @_ZZ6Conv2DPfS_S_iiiE9sharedMem, i32 0, i32 %83, i32 %120\l  %122 = load float, float addrspace(3)* %121, align 4, !tbaa !5\l  %123 = add nsw i32 %117, %84\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %1, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %127 = fmul contract float %122, %126\l  %128 = fadd contract float %118, %127\l  %129 = or i32 %117, 1\l  %130 = add nuw i32 %129, %9\l  %131 = getelementptr inbounds [36 x [36 x float]], [36 x [36 x float]]\l... addrspace(3)* @_ZZ6Conv2DPfS_S_iiiE9sharedMem, i32 0, i32 %83, i32 %130\l  %132 = load float, float addrspace(3)* %131, align 4, !tbaa !5\l  %133 = add nsw i32 %129, %84\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %1, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %137 = fmul contract float %132, %136\l  %138 = fadd contract float %128, %137\l  %139 = or i32 %117, 2\l  %140 = add nuw i32 %139, %9\l  %141 = getelementptr inbounds [36 x [36 x float]], [36 x [36 x float]]\l... addrspace(3)* @_ZZ6Conv2DPfS_S_iiiE9sharedMem, i32 0, i32 %83, i32 %140\l  %142 = load float, float addrspace(3)* %141, align 4, !tbaa !5\l  %143 = add nsw i32 %139, %84\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %1, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %147 = fmul contract float %142, %146\l  %148 = fadd contract float %138, %147\l  %149 = or i32 %117, 3\l  %150 = add nuw i32 %149, %9\l  %151 = getelementptr inbounds [36 x [36 x float]], [36 x [36 x float]]\l... addrspace(3)* @_ZZ6Conv2DPfS_S_iiiE9sharedMem, i32 0, i32 %83, i32 %150\l  %152 = load float, float addrspace(3)* %151, align 4, !tbaa !5\l  %153 = add nsw i32 %149, %84\l  %154 = sext i32 %153 to i64\l  %155 = getelementptr inbounds float, float addrspace(1)* %1, i64 %154\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %157 = fmul contract float %152, %156\l  %158 = fadd contract float %148, %157\l  %159 = or i32 %117, 4\l  %160 = add nuw i32 %159, %9\l  %161 = getelementptr inbounds [36 x [36 x float]], [36 x [36 x float]]\l... addrspace(3)* @_ZZ6Conv2DPfS_S_iiiE9sharedMem, i32 0, i32 %83, i32 %160\l  %162 = load float, float addrspace(3)* %161, align 4, !tbaa !5\l  %163 = add nsw i32 %159, %84\l  %164 = sext i32 %163 to i64\l  %165 = getelementptr inbounds float, float addrspace(1)* %1, i64 %164\l  %166 = load float, float addrspace(1)* %165, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %167 = fmul contract float %162, %166\l  %168 = fadd contract float %158, %167\l  %169 = or i32 %117, 5\l  %170 = add nuw i32 %169, %9\l  %171 = getelementptr inbounds [36 x [36 x float]], [36 x [36 x float]]\l... addrspace(3)* @_ZZ6Conv2DPfS_S_iiiE9sharedMem, i32 0, i32 %83, i32 %170\l  %172 = load float, float addrspace(3)* %171, align 4, !tbaa !5\l  %173 = add nsw i32 %169, %84\l  %174 = sext i32 %173 to i64\l  %175 = getelementptr inbounds float, float addrspace(1)* %1, i64 %174\l  %176 = load float, float addrspace(1)* %175, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %177 = fmul contract float %172, %176\l  %178 = fadd contract float %168, %177\l  %179 = or i32 %117, 6\l  %180 = add nuw i32 %179, %9\l  %181 = getelementptr inbounds [36 x [36 x float]], [36 x [36 x float]]\l... addrspace(3)* @_ZZ6Conv2DPfS_S_iiiE9sharedMem, i32 0, i32 %83, i32 %180\l  %182 = load float, float addrspace(3)* %181, align 4, !tbaa !5\l  %183 = add nsw i32 %179, %84\l  %184 = sext i32 %183 to i64\l  %185 = getelementptr inbounds float, float addrspace(1)* %1, i64 %184\l  %186 = load float, float addrspace(1)* %185, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %187 = fmul contract float %182, %186\l  %188 = fadd contract float %178, %187\l  %189 = or i32 %117, 7\l  %190 = add nuw i32 %189, %9\l  %191 = getelementptr inbounds [36 x [36 x float]], [36 x [36 x float]]\l... addrspace(3)* @_ZZ6Conv2DPfS_S_iiiE9sharedMem, i32 0, i32 %83, i32 %190\l  %192 = load float, float addrspace(3)* %191, align 4, !tbaa !5\l  %193 = add nsw i32 %189, %84\l  %194 = sext i32 %193 to i64\l  %195 = getelementptr inbounds float, float addrspace(1)* %1, i64 %194\l  %196 = load float, float addrspace(1)* %195, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %197 = fmul contract float %192, %196\l  %198 = fadd contract float %188, %197\l  %199 = add nuw nsw i32 %117, 8\l  %200 = add i32 %119, 8\l  %201 = icmp eq i32 %200, %78\l  br i1 %201, label %92, label %116, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5a84950:s0 -> Node0x5a848c0;
	Node0x5a84950:s1 -> Node0x5a84950;
	Node0x5a84e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%202:\l202:                                              \l  %203 = tail call float @llvm.maxnum.f32(float %86, float 0.000000e+00)\l  %204 = tail call float @llvm.minnum.f32(float %203, float 1.000000e+00)\l  %205 = mul nsw i32 %88, %3\l  %206 = add nsw i32 %205, %87\l  %207 = sext i32 %206 to i64\l  %208 = getelementptr inbounds float, float addrspace(1)* %2, i64 %207\l  store float %204, float addrspace(1)* %208, align 4, !tbaa !5\l  br label %209\l}"];
	Node0x5a84e30 -> Node0x5a84e80;
	Node0x5a84e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%209:\l209:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
