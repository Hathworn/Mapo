digraph "CFG for '_Z18fillAndAddKernelV2PfS_S_' function" {
	label="CFG for '_Z18fillAndAddKernelV2PfS_S_' function";

	Node0x5096420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = sitofp i32 %12 to double\l  %14 = tail call double @llvm.fabs.f64(double %13)\l  %15 = fcmp olt double %14, 0x41D0000000000000\l  br i1 %15, label %16, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5096420:s0 -> Node0x5098fa0;
	Node0x5096420:s1 -> Node0x5099030;
	Node0x5098fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%16:\l16:                                               \l  %17 = fmul double %14, 0x3FE45F306DC9C883\l  %18 = tail call double @llvm.rint.f64(double %17)\l  %19 = tail call double @llvm.fma.f64(double %18, double 0xBFF921FB54442D18,\l... double %14)\l  %20 = tail call double @llvm.fma.f64(double %18, double 0xBC91A62633145C00,\l... double %19)\l  %21 = fmul double %18, 0x3C91A62633145C00\l  %22 = fneg double %21\l  %23 = tail call double @llvm.fma.f64(double %18, double 0x3C91A62633145C00,\l... double %22)\l  %24 = fsub double %19, %21\l  %25 = fsub double %19, %24\l  %26 = fsub double %25, %21\l  %27 = fsub double %24, %20\l  %28 = fadd double %27, %26\l  %29 = fsub double %28, %23\l  %30 = tail call double @llvm.fma.f64(double %18, double 0xB97B839A252049C0,\l... double %29)\l  %31 = fadd double %20, %30\l  %32 = fsub double %31, %20\l  %33 = fsub double %30, %32\l  %34 = fptosi double %18 to i32\l  br label %111\l}"];
	Node0x5098fa0 -> Node0x509a380;
	Node0x5099030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%35:\l35:                                               \l  %36 = tail call double @llvm.amdgcn.trig.preop.f64(double %14, i32 0)\l  %37 = tail call double @llvm.amdgcn.trig.preop.f64(double %14, i32 1)\l  %38 = tail call double @llvm.amdgcn.trig.preop.f64(double %14, i32 2)\l  %39 = fcmp oge double %14, 0x7B00000000000000\l  %40 = tail call double @llvm.amdgcn.ldexp.f64(double %14, i32 -128)\l  %41 = select i1 %39, double %40, double %14\l  %42 = fmul double %38, %41\l  %43 = fneg double %42\l  %44 = tail call double @llvm.fma.f64(double %38, double %41, double %43)\l  %45 = fmul double %37, %41\l  %46 = fneg double %45\l  %47 = tail call double @llvm.fma.f64(double %37, double %41, double %46)\l  %48 = fmul double %36, %41\l  %49 = fneg double %48\l  %50 = tail call double @llvm.fma.f64(double %36, double %41, double %49)\l  %51 = fadd double %45, %50\l  %52 = fsub double %51, %45\l  %53 = fsub double %51, %52\l  %54 = fsub double %50, %52\l  %55 = fsub double %45, %53\l  %56 = fadd double %54, %55\l  %57 = fadd double %42, %47\l  %58 = fsub double %57, %42\l  %59 = fsub double %57, %58\l  %60 = fsub double %47, %58\l  %61 = fsub double %42, %59\l  %62 = fadd double %60, %61\l  %63 = fadd double %57, %56\l  %64 = fsub double %63, %57\l  %65 = fsub double %63, %64\l  %66 = fsub double %56, %64\l  %67 = fsub double %57, %65\l  %68 = fadd double %66, %67\l  %69 = fadd double %62, %68\l  %70 = fadd double %44, %69\l  %71 = fadd double %48, %51\l  %72 = fsub double %71, %48\l  %73 = fsub double %51, %72\l  %74 = fadd double %73, %63\l  %75 = fsub double %74, %73\l  %76 = fsub double %63, %75\l  %77 = fadd double %76, %70\l  %78 = tail call double @llvm.amdgcn.ldexp.f64(double %71, i32 -2)\l  %79 = tail call double @llvm.amdgcn.fract.f64(double %78)\l  %80 = tail call i1 @llvm.amdgcn.class.f64(double %78, i32 516)\l  %81 = select i1 %80, double 0.000000e+00, double %79\l  %82 = tail call double @llvm.amdgcn.ldexp.f64(double %81, i32 2)\l  %83 = fadd double %82, %74\l  %84 = fcmp olt double %83, 0.000000e+00\l  %85 = select i1 %84, double 4.000000e+00, double 0.000000e+00\l  %86 = fadd double %82, %85\l  %87 = fadd double %74, %86\l  %88 = fptosi double %87 to i32\l  %89 = sitofp i32 %88 to double\l  %90 = fsub double %86, %89\l  %91 = fadd double %74, %90\l  %92 = fsub double %91, %90\l  %93 = fsub double %74, %92\l  %94 = fadd double %77, %93\l  %95 = fcmp oge double %91, 5.000000e-01\l  %96 = zext i1 %95 to i32\l  %97 = add nsw i32 %96, %88\l  %98 = select i1 %95, double 1.000000e+00, double 0.000000e+00\l  %99 = fsub double %91, %98\l  %100 = fadd double %99, %94\l  %101 = fsub double %100, %99\l  %102 = fsub double %94, %101\l  %103 = fmul double %100, 0x3FF921FB54442D18\l  %104 = fneg double %103\l  %105 = tail call double @llvm.fma.f64(double %100, double\l... 0x3FF921FB54442D18, double %104)\l  %106 = tail call double @llvm.fma.f64(double %100, double\l... 0x3C91A62633145C07, double %105)\l  %107 = tail call double @llvm.fma.f64(double %102, double\l... 0x3FF921FB54442D18, double %106)\l  %108 = fadd double %103, %107\l  %109 = fsub double %108, %103\l  %110 = fsub double %107, %109\l  br label %111\l}"];
	Node0x5099030 -> Node0x509a380;
	Node0x509a380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  %112 = phi double [ %33, %16 ], [ %110, %35 ]\l  %113 = phi double [ %31, %16 ], [ %108, %35 ]\l  %114 = phi i32 [ %34, %16 ], [ %97, %35 ]\l  %115 = fmul double %113, %113\l  %116 = fmul double %115, 5.000000e-01\l  %117 = fsub double 1.000000e+00, %116\l  %118 = fsub double 1.000000e+00, %117\l  %119 = fsub double %118, %116\l  %120 = fmul double %115, %115\l  %121 = tail call double @llvm.fma.f64(double %115, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %122 = tail call double @llvm.fma.f64(double %115, double %121, double\l... 0xBE927E4FA17F65F6)\l  %123 = tail call double @llvm.fma.f64(double %115, double %122, double\l... 0x3EFA01A019F4EC90)\l  %124 = tail call double @llvm.fma.f64(double %115, double %123, double\l... 0xBF56C16C16C16967)\l  %125 = tail call double @llvm.fma.f64(double %115, double %124, double\l... 0x3FA5555555555555)\l  %126 = fneg double %112\l  %127 = tail call double @llvm.fma.f64(double %113, double %126, double %119)\l  %128 = tail call double @llvm.fma.f64(double %120, double %125, double %127)\l  %129 = fadd double %117, %128\l  %130 = tail call double @llvm.fma.f64(double %115, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %131 = tail call double @llvm.fma.f64(double %115, double %130, double\l... 0x3EC71DE3796CDE01)\l  %132 = tail call double @llvm.fma.f64(double %115, double %131, double\l... 0xBF2A01A019E83E5C)\l  %133 = tail call double @llvm.fma.f64(double %115, double %132, double\l... 0x3F81111111110BB3)\l  %134 = fneg double %115\l  %135 = fmul double %113, %134\l  %136 = fmul double %112, 5.000000e-01\l  %137 = tail call double @llvm.fma.f64(double %135, double %133, double %136)\l  %138 = tail call double @llvm.fma.f64(double %115, double %137, double %126)\l  %139 = tail call double @llvm.fma.f64(double %135, double\l... 0xBFC5555555555555, double %138)\l  %140 = fsub double %113, %139\l  %141 = and i32 %114, 1\l  %142 = icmp eq i32 %141, 0\l  %143 = select i1 %142, double %140, double %129\l  %144 = bitcast double %143 to \<2 x i32\>\l  %145 = shl i32 %114, 30\l  %146 = bitcast double %13 to \<2 x i32\>\l  %147 = extractelement \<2 x i32\> %146, i64 1\l  %148 = xor i32 %145, %147\l  %149 = and i32 %148, -2147483648\l  %150 = extractelement \<2 x i32\> %144, i64 1\l  %151 = xor i32 %150, %149\l  %152 = insertelement \<2 x i32\> %144, i32 %151, i64 1\l  %153 = tail call i1 @llvm.amdgcn.class.f64(double %14, i32 504)\l  %154 = select i1 %153, \<2 x i32\> %152, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %155 = bitcast \<2 x i32\> %154 to double\l  br i1 %15, label %156, label %261\l|{<s0>T|<s1>F}}"];
	Node0x509a380:s0 -> Node0x50a1150;
	Node0x509a380:s1 -> Node0x50a11e0;
	Node0x50a1150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%156:\l156:                                              \l  %157 = fmul double %14, 0x3FE45F306DC9C883\l  %158 = tail call double @llvm.rint.f64(double %157)\l  %159 = tail call double @llvm.fma.f64(double %158, double\l... 0xBFF921FB54442D18, double %14)\l  %160 = tail call double @llvm.fma.f64(double %158, double\l... 0xBC91A62633145C00, double %159)\l  %161 = fmul double %158, 0x3C91A62633145C00\l  %162 = fneg double %161\l  %163 = tail call double @llvm.fma.f64(double %158, double\l... 0x3C91A62633145C00, double %162)\l  %164 = fsub double %159, %161\l  %165 = fsub double %159, %164\l  %166 = fsub double %165, %161\l  %167 = fsub double %164, %160\l  %168 = fadd double %167, %166\l  %169 = fsub double %168, %163\l  %170 = tail call double @llvm.fma.f64(double %158, double\l... 0xB97B839A252049C0, double %169)\l  %171 = fadd double %160, %170\l  %172 = fsub double %171, %160\l  %173 = fsub double %170, %172\l  %174 = fptosi double %158 to i32\l  %175 = fmul double %171, %171\l  %176 = fmul double %175, 5.000000e-01\l  %177 = fsub double 1.000000e+00, %176\l  %178 = fsub double 1.000000e+00, %177\l  %179 = fsub double %178, %176\l  %180 = fmul double %175, %175\l  %181 = tail call double @llvm.fma.f64(double %175, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %182 = tail call double @llvm.fma.f64(double %175, double %181, double\l... 0xBE927E4FA17F65F6)\l  %183 = tail call double @llvm.fma.f64(double %175, double %182, double\l... 0x3EFA01A019F4EC90)\l  %184 = tail call double @llvm.fma.f64(double %175, double %183, double\l... 0xBF56C16C16C16967)\l  %185 = tail call double @llvm.fma.f64(double %175, double %184, double\l... 0x3FA5555555555555)\l  %186 = fneg double %173\l  %187 = tail call double @llvm.fma.f64(double %171, double %186, double %179)\l  %188 = tail call double @llvm.fma.f64(double %180, double %185, double %187)\l  %189 = fadd double %177, %188\l  %190 = tail call double @llvm.fma.f64(double %175, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %191 = tail call double @llvm.fma.f64(double %175, double %190, double\l... 0x3EC71DE3796CDE01)\l  %192 = tail call double @llvm.fma.f64(double %175, double %191, double\l... 0xBF2A01A019E83E5C)\l  %193 = tail call double @llvm.fma.f64(double %175, double %192, double\l... 0x3F81111111110BB3)\l  %194 = fneg double %175\l  %195 = fmul double %171, %194\l  %196 = fmul double %173, 5.000000e-01\l  %197 = tail call double @llvm.fma.f64(double %195, double %193, double %196)\l  %198 = tail call double @llvm.fma.f64(double %175, double %197, double %186)\l  %199 = tail call double @llvm.fma.f64(double %195, double\l... 0xBFC5555555555555, double %198)\l  %200 = fsub double %171, %199\l  %201 = and i32 %174, 1\l  %202 = icmp eq i32 %201, 0\l  %203 = select i1 %202, double %200, double %189\l  %204 = bitcast double %203 to \<2 x i32\>\l  %205 = shl i32 %174, 30\l  %206 = xor i32 %205, %147\l  %207 = and i32 %206, -2147483648\l  %208 = extractelement \<2 x i32\> %204, i64 1\l  %209 = xor i32 %208, %207\l  %210 = insertelement \<2 x i32\> %204, i32 %209, i64 1\l  %211 = select i1 %153, \<2 x i32\> %210, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %212 = bitcast \<2 x i32\> %211 to double\l  %213 = fmul contract double %155, %212\l  %214 = fptrunc double %213 to float\l  %215 = sext i32 %12 to i64\l  %216 = getelementptr inbounds float, float addrspace(1)* %1, i64 %215\l  store float %214, float addrspace(1)* %216, align 4, !tbaa !7\l  %217 = fmul double %14, 0x3FE45F306DC9C883\l  %218 = tail call double @llvm.rint.f64(double %217)\l  %219 = tail call double @llvm.fma.f64(double %218, double\l... 0xBFF921FB54442D18, double %14)\l  %220 = tail call double @llvm.fma.f64(double %218, double\l... 0xBC91A62633145C00, double %219)\l  %221 = fmul double %218, 0x3C91A62633145C00\l  %222 = fneg double %221\l  %223 = tail call double @llvm.fma.f64(double %218, double\l... 0x3C91A62633145C00, double %222)\l  %224 = fsub double %219, %221\l  %225 = fsub double %219, %224\l  %226 = fsub double %225, %221\l  %227 = fsub double %224, %220\l  %228 = fadd double %227, %226\l  %229 = fsub double %228, %223\l  %230 = tail call double @llvm.fma.f64(double %218, double\l... 0xB97B839A252049C0, double %229)\l  %231 = fadd double %220, %230\l  %232 = fsub double %231, %220\l  %233 = fsub double %230, %232\l  %234 = fptosi double %218 to i32\l  %235 = fmul double %231, %231\l  %236 = fmul double %235, 5.000000e-01\l  %237 = fsub double 1.000000e+00, %236\l  %238 = fsub double 1.000000e+00, %237\l  %239 = fsub double %238, %236\l  %240 = fmul double %235, %235\l  %241 = tail call double @llvm.fma.f64(double %235, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %242 = tail call double @llvm.fma.f64(double %235, double %241, double\l... 0xBE927E4FA17F65F6)\l  %243 = tail call double @llvm.fma.f64(double %235, double %242, double\l... 0x3EFA01A019F4EC90)\l  %244 = tail call double @llvm.fma.f64(double %235, double %243, double\l... 0xBF56C16C16C16967)\l  %245 = tail call double @llvm.fma.f64(double %235, double %244, double\l... 0x3FA5555555555555)\l  %246 = fneg double %233\l  %247 = tail call double @llvm.fma.f64(double %231, double %246, double %239)\l  %248 = tail call double @llvm.fma.f64(double %240, double %245, double %247)\l  %249 = fadd double %237, %248\l  %250 = tail call double @llvm.fma.f64(double %235, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %251 = tail call double @llvm.fma.f64(double %235, double %250, double\l... 0x3EC71DE3796CDE01)\l  %252 = tail call double @llvm.fma.f64(double %235, double %251, double\l... 0xBF2A01A019E83E5C)\l  %253 = tail call double @llvm.fma.f64(double %235, double %252, double\l... 0x3F81111111110BB3)\l  %254 = fneg double %235\l  %255 = fmul double %231, %254\l  %256 = fmul double %233, 5.000000e-01\l  %257 = tail call double @llvm.fma.f64(double %255, double %253, double %256)\l  %258 = tail call double @llvm.fma.f64(double %235, double %257, double %246)\l  %259 = tail call double @llvm.fma.f64(double %255, double\l... 0xBFC5555555555555, double %258)\l  %260 = fsub double %231, %259\l  br label %480\l}"];
	Node0x50a1150 -> Node0x509f3c0;
	Node0x50a11e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%261:\l261:                                              \l  %262 = tail call double @llvm.amdgcn.trig.preop.f64(double %14, i32 0)\l  %263 = tail call double @llvm.amdgcn.trig.preop.f64(double %14, i32 1)\l  %264 = tail call double @llvm.amdgcn.trig.preop.f64(double %14, i32 2)\l  %265 = fcmp oge double %14, 0x7B00000000000000\l  %266 = tail call double @llvm.amdgcn.ldexp.f64(double %14, i32 -128)\l  %267 = select i1 %265, double %266, double %14\l  %268 = fmul double %264, %267\l  %269 = fneg double %268\l  %270 = tail call double @llvm.fma.f64(double %264, double %267, double %269)\l  %271 = fmul double %263, %267\l  %272 = fneg double %271\l  %273 = tail call double @llvm.fma.f64(double %263, double %267, double %272)\l  %274 = fmul double %262, %267\l  %275 = fneg double %274\l  %276 = tail call double @llvm.fma.f64(double %262, double %267, double %275)\l  %277 = fadd double %271, %276\l  %278 = fsub double %277, %271\l  %279 = fsub double %277, %278\l  %280 = fsub double %276, %278\l  %281 = fsub double %271, %279\l  %282 = fadd double %280, %281\l  %283 = fadd double %268, %273\l  %284 = fsub double %283, %268\l  %285 = fsub double %283, %284\l  %286 = fsub double %273, %284\l  %287 = fsub double %268, %285\l  %288 = fadd double %286, %287\l  %289 = fadd double %283, %282\l  %290 = fsub double %289, %283\l  %291 = fsub double %289, %290\l  %292 = fsub double %282, %290\l  %293 = fsub double %283, %291\l  %294 = fadd double %292, %293\l  %295 = fadd double %288, %294\l  %296 = fadd double %270, %295\l  %297 = fadd double %274, %277\l  %298 = fsub double %297, %274\l  %299 = fsub double %277, %298\l  %300 = fadd double %299, %289\l  %301 = fsub double %300, %299\l  %302 = fsub double %289, %301\l  %303 = fadd double %302, %296\l  %304 = tail call double @llvm.amdgcn.ldexp.f64(double %297, i32 -2)\l  %305 = tail call double @llvm.amdgcn.fract.f64(double %304)\l  %306 = tail call i1 @llvm.amdgcn.class.f64(double %304, i32 516)\l  %307 = select i1 %306, double 0.000000e+00, double %305\l  %308 = tail call double @llvm.amdgcn.ldexp.f64(double %307, i32 2)\l  %309 = fadd double %308, %300\l  %310 = fcmp olt double %309, 0.000000e+00\l  %311 = select i1 %310, double 4.000000e+00, double 0.000000e+00\l  %312 = fadd double %308, %311\l  %313 = fadd double %300, %312\l  %314 = fptosi double %313 to i32\l  %315 = sitofp i32 %314 to double\l  %316 = fsub double %312, %315\l  %317 = fadd double %300, %316\l  %318 = fsub double %317, %316\l  %319 = fsub double %300, %318\l  %320 = fadd double %303, %319\l  %321 = fcmp oge double %317, 5.000000e-01\l  %322 = zext i1 %321 to i32\l  %323 = add nsw i32 %322, %314\l  %324 = select i1 %321, double 1.000000e+00, double 0.000000e+00\l  %325 = fsub double %317, %324\l  %326 = fadd double %325, %320\l  %327 = fsub double %326, %325\l  %328 = fsub double %320, %327\l  %329 = fmul double %326, 0x3FF921FB54442D18\l  %330 = fneg double %329\l  %331 = tail call double @llvm.fma.f64(double %326, double\l... 0x3FF921FB54442D18, double %330)\l  %332 = tail call double @llvm.fma.f64(double %326, double\l... 0x3C91A62633145C07, double %331)\l  %333 = tail call double @llvm.fma.f64(double %328, double\l... 0x3FF921FB54442D18, double %332)\l  %334 = fadd double %329, %333\l  %335 = fsub double %334, %329\l  %336 = fsub double %333, %335\l  %337 = fmul double %334, %334\l  %338 = fmul double %337, 5.000000e-01\l  %339 = fsub double 1.000000e+00, %338\l  %340 = fsub double 1.000000e+00, %339\l  %341 = fsub double %340, %338\l  %342 = fmul double %337, %337\l  %343 = tail call double @llvm.fma.f64(double %337, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %344 = tail call double @llvm.fma.f64(double %337, double %343, double\l... 0xBE927E4FA17F65F6)\l  %345 = tail call double @llvm.fma.f64(double %337, double %344, double\l... 0x3EFA01A019F4EC90)\l  %346 = tail call double @llvm.fma.f64(double %337, double %345, double\l... 0xBF56C16C16C16967)\l  %347 = tail call double @llvm.fma.f64(double %337, double %346, double\l... 0x3FA5555555555555)\l  %348 = fneg double %336\l  %349 = tail call double @llvm.fma.f64(double %334, double %348, double %341)\l  %350 = tail call double @llvm.fma.f64(double %342, double %347, double %349)\l  %351 = fadd double %339, %350\l  %352 = tail call double @llvm.fma.f64(double %337, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %353 = tail call double @llvm.fma.f64(double %337, double %352, double\l... 0x3EC71DE3796CDE01)\l  %354 = tail call double @llvm.fma.f64(double %337, double %353, double\l... 0xBF2A01A019E83E5C)\l  %355 = tail call double @llvm.fma.f64(double %337, double %354, double\l... 0x3F81111111110BB3)\l  %356 = fneg double %337\l  %357 = fmul double %334, %356\l  %358 = fmul double %336, 5.000000e-01\l  %359 = tail call double @llvm.fma.f64(double %357, double %355, double %358)\l  %360 = tail call double @llvm.fma.f64(double %337, double %359, double %348)\l  %361 = tail call double @llvm.fma.f64(double %357, double\l... 0xBFC5555555555555, double %360)\l  %362 = fsub double %334, %361\l  %363 = and i32 %323, 1\l  %364 = icmp eq i32 %363, 0\l  %365 = select i1 %364, double %362, double %351\l  %366 = bitcast double %365 to \<2 x i32\>\l  %367 = shl i32 %323, 30\l  %368 = xor i32 %367, %147\l  %369 = and i32 %368, -2147483648\l  %370 = extractelement \<2 x i32\> %366, i64 1\l  %371 = xor i32 %370, %369\l  %372 = insertelement \<2 x i32\> %366, i32 %371, i64 1\l  %373 = select i1 %153, \<2 x i32\> %372, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %374 = bitcast \<2 x i32\> %373 to double\l  %375 = fmul contract double %155, %374\l  %376 = fptrunc double %375 to float\l  %377 = sext i32 %12 to i64\l  %378 = getelementptr inbounds float, float addrspace(1)* %1, i64 %377\l  store float %376, float addrspace(1)* %378, align 4, !tbaa !7\l  %379 = tail call double @llvm.amdgcn.trig.preop.f64(double %14, i32 0)\l  %380 = tail call double @llvm.amdgcn.trig.preop.f64(double %14, i32 1)\l  %381 = tail call double @llvm.amdgcn.trig.preop.f64(double %14, i32 2)\l  %382 = fcmp oge double %14, 0x7B00000000000000\l  %383 = tail call double @llvm.amdgcn.ldexp.f64(double %14, i32 -128)\l  %384 = select i1 %382, double %383, double %14\l  %385 = fmul double %381, %384\l  %386 = fneg double %385\l  %387 = tail call double @llvm.fma.f64(double %381, double %384, double %386)\l  %388 = fmul double %380, %384\l  %389 = fneg double %388\l  %390 = tail call double @llvm.fma.f64(double %380, double %384, double %389)\l  %391 = fmul double %379, %384\l  %392 = fneg double %391\l  %393 = tail call double @llvm.fma.f64(double %379, double %384, double %392)\l  %394 = fadd double %388, %393\l  %395 = fsub double %394, %388\l  %396 = fsub double %394, %395\l  %397 = fsub double %393, %395\l  %398 = fsub double %388, %396\l  %399 = fadd double %397, %398\l  %400 = fadd double %385, %390\l  %401 = fsub double %400, %385\l  %402 = fsub double %400, %401\l  %403 = fsub double %390, %401\l  %404 = fsub double %385, %402\l  %405 = fadd double %403, %404\l  %406 = fadd double %400, %399\l  %407 = fsub double %406, %400\l  %408 = fsub double %406, %407\l  %409 = fsub double %399, %407\l  %410 = fsub double %400, %408\l  %411 = fadd double %409, %410\l  %412 = fadd double %405, %411\l  %413 = fadd double %387, %412\l  %414 = fadd double %391, %394\l  %415 = fsub double %414, %391\l  %416 = fsub double %394, %415\l  %417 = fadd double %416, %406\l  %418 = fsub double %417, %416\l  %419 = fsub double %406, %418\l  %420 = fadd double %419, %413\l  %421 = tail call double @llvm.amdgcn.ldexp.f64(double %414, i32 -2)\l  %422 = tail call double @llvm.amdgcn.fract.f64(double %421)\l  %423 = tail call i1 @llvm.amdgcn.class.f64(double %421, i32 516)\l  %424 = select i1 %423, double 0.000000e+00, double %422\l  %425 = tail call double @llvm.amdgcn.ldexp.f64(double %424, i32 2)\l  %426 = fadd double %425, %417\l  %427 = fcmp olt double %426, 0.000000e+00\l  %428 = select i1 %427, double 4.000000e+00, double 0.000000e+00\l  %429 = fadd double %425, %428\l  %430 = fadd double %417, %429\l  %431 = fptosi double %430 to i32\l  %432 = sitofp i32 %431 to double\l  %433 = fsub double %429, %432\l  %434 = fadd double %417, %433\l  %435 = fsub double %434, %433\l  %436 = fsub double %417, %435\l  %437 = fadd double %420, %436\l  %438 = fcmp oge double %434, 5.000000e-01\l  %439 = zext i1 %438 to i32\l  %440 = add nsw i32 %439, %431\l  %441 = select i1 %438, double 1.000000e+00, double 0.000000e+00\l  %442 = fsub double %434, %441\l  %443 = fadd double %442, %437\l  %444 = fsub double %443, %442\l  %445 = fsub double %437, %444\l  %446 = fmul double %443, 0x3FF921FB54442D18\l  %447 = fneg double %446\l  %448 = tail call double @llvm.fma.f64(double %443, double\l... 0x3FF921FB54442D18, double %447)\l  %449 = tail call double @llvm.fma.f64(double %443, double\l... 0x3C91A62633145C07, double %448)\l  %450 = tail call double @llvm.fma.f64(double %445, double\l... 0x3FF921FB54442D18, double %449)\l  %451 = fadd double %446, %450\l  %452 = fsub double %451, %446\l  %453 = fsub double %450, %452\l  %454 = fmul double %451, %451\l  %455 = fmul double %454, 5.000000e-01\l  %456 = fsub double 1.000000e+00, %455\l  %457 = fsub double 1.000000e+00, %456\l  %458 = fsub double %457, %455\l  %459 = fmul double %454, %454\l  %460 = tail call double @llvm.fma.f64(double %454, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %461 = tail call double @llvm.fma.f64(double %454, double %460, double\l... 0xBE927E4FA17F65F6)\l  %462 = tail call double @llvm.fma.f64(double %454, double %461, double\l... 0x3EFA01A019F4EC90)\l  %463 = tail call double @llvm.fma.f64(double %454, double %462, double\l... 0xBF56C16C16C16967)\l  %464 = tail call double @llvm.fma.f64(double %454, double %463, double\l... 0x3FA5555555555555)\l  %465 = fneg double %453\l  %466 = tail call double @llvm.fma.f64(double %451, double %465, double %458)\l  %467 = tail call double @llvm.fma.f64(double %459, double %464, double %466)\l  %468 = fadd double %456, %467\l  %469 = tail call double @llvm.fma.f64(double %454, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %470 = tail call double @llvm.fma.f64(double %454, double %469, double\l... 0x3EC71DE3796CDE01)\l  %471 = tail call double @llvm.fma.f64(double %454, double %470, double\l... 0xBF2A01A019E83E5C)\l  %472 = tail call double @llvm.fma.f64(double %454, double %471, double\l... 0x3F81111111110BB3)\l  %473 = fneg double %454\l  %474 = fmul double %451, %473\l  %475 = fmul double %453, 5.000000e-01\l  %476 = tail call double @llvm.fma.f64(double %474, double %472, double %475)\l  %477 = tail call double @llvm.fma.f64(double %454, double %476, double %465)\l  %478 = tail call double @llvm.fma.f64(double %474, double\l... 0xBFC5555555555555, double %477)\l  %479 = fsub double %451, %478\l  br label %480\l}"];
	Node0x50a11e0 -> Node0x509f3c0;
	Node0x509f3c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%480:\l480:                                              \l  %481 = phi float addrspace(1)* [ %216, %156 ], [ %378, %261 ]\l  %482 = phi i64 [ %215, %156 ], [ %377, %261 ]\l  %483 = phi double [ %260, %156 ], [ %479, %261 ]\l  %484 = phi i32 [ %234, %156 ], [ %440, %261 ]\l  %485 = phi double [ %249, %156 ], [ %468, %261 ]\l  %486 = fneg double %483\l  %487 = and i32 %484, 1\l  %488 = icmp eq i32 %487, 0\l  %489 = select i1 %488, double %485, double %486\l  %490 = bitcast double %489 to \<2 x i32\>\l  %491 = shl i32 %484, 30\l  %492 = and i32 %491, -2147483648\l  %493 = extractelement \<2 x i32\> %490, i64 1\l  %494 = xor i32 %493, %492\l  %495 = insertelement \<2 x i32\> %490, i32 %494, i64 1\l  %496 = select i1 %153, \<2 x i32\> %495, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %497 = bitcast \<2 x i32\> %496 to double\l  %498 = bitcast \<2 x i32\> %496 to double\l  %499 = fmul contract double %497, %498\l  %500 = fptrunc double %499 to float\l  %501 = getelementptr inbounds float, float addrspace(1)* %2, i64 %482\l  store float %500, float addrspace(1)* %501, align 4, !tbaa !7\l  %502 = load float, float addrspace(1)* %481, align 4, !tbaa !7\l  %503 = fadd contract float %502, %500\l  %504 = getelementptr inbounds float, float addrspace(1)* %0, i64 %482\l  store float %503, float addrspace(1)* %504, align 4, !tbaa !7\l  ret void\l}"];
}
