digraph "CFG for '_Z12fillKernelV2PfS_' function" {
	label="CFG for '_Z12fillKernelV2PfS_' function";

	Node0x5a25390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = add i32 %10, %3\l  %12 = sitofp i32 %11 to double\l  %13 = tail call double @llvm.fabs.f64(double %12)\l  %14 = fcmp olt double %13, 0x41D0000000000000\l  br i1 %14, label %15, label %34\l|{<s0>T|<s1>F}}"];
	Node0x5a25390:s0 -> Node0x5a27f10;
	Node0x5a25390:s1 -> Node0x5a27fa0;
	Node0x5a27f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = fmul double %13, 0x3FE45F306DC9C883\l  %17 = tail call double @llvm.rint.f64(double %16)\l  %18 = tail call double @llvm.fma.f64(double %17, double 0xBFF921FB54442D18,\l... double %13)\l  %19 = tail call double @llvm.fma.f64(double %17, double 0xBC91A62633145C00,\l... double %18)\l  %20 = fmul double %17, 0x3C91A62633145C00\l  %21 = fneg double %20\l  %22 = tail call double @llvm.fma.f64(double %17, double 0x3C91A62633145C00,\l... double %21)\l  %23 = fsub double %18, %20\l  %24 = fsub double %18, %23\l  %25 = fsub double %24, %20\l  %26 = fsub double %23, %19\l  %27 = fadd double %26, %25\l  %28 = fsub double %27, %22\l  %29 = tail call double @llvm.fma.f64(double %17, double 0xB97B839A252049C0,\l... double %28)\l  %30 = fadd double %19, %29\l  %31 = fsub double %30, %19\l  %32 = fsub double %29, %31\l  %33 = fptosi double %17 to i32\l  br label %110\l}"];
	Node0x5a27f10 -> Node0x5a281e0;
	Node0x5a27fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%34:\l34:                                               \l  %35 = tail call double @llvm.amdgcn.trig.preop.f64(double %13, i32 0)\l  %36 = tail call double @llvm.amdgcn.trig.preop.f64(double %13, i32 1)\l  %37 = tail call double @llvm.amdgcn.trig.preop.f64(double %13, i32 2)\l  %38 = fcmp oge double %13, 0x7B00000000000000\l  %39 = tail call double @llvm.amdgcn.ldexp.f64(double %13, i32 -128)\l  %40 = select i1 %38, double %39, double %13\l  %41 = fmul double %37, %40\l  %42 = fneg double %41\l  %43 = tail call double @llvm.fma.f64(double %37, double %40, double %42)\l  %44 = fmul double %36, %40\l  %45 = fneg double %44\l  %46 = tail call double @llvm.fma.f64(double %36, double %40, double %45)\l  %47 = fmul double %35, %40\l  %48 = fneg double %47\l  %49 = tail call double @llvm.fma.f64(double %35, double %40, double %48)\l  %50 = fadd double %44, %49\l  %51 = fsub double %50, %44\l  %52 = fsub double %50, %51\l  %53 = fsub double %49, %51\l  %54 = fsub double %44, %52\l  %55 = fadd double %53, %54\l  %56 = fadd double %41, %46\l  %57 = fsub double %56, %41\l  %58 = fsub double %56, %57\l  %59 = fsub double %46, %57\l  %60 = fsub double %41, %58\l  %61 = fadd double %59, %60\l  %62 = fadd double %56, %55\l  %63 = fsub double %62, %56\l  %64 = fsub double %62, %63\l  %65 = fsub double %55, %63\l  %66 = fsub double %56, %64\l  %67 = fadd double %65, %66\l  %68 = fadd double %61, %67\l  %69 = fadd double %43, %68\l  %70 = fadd double %47, %50\l  %71 = fsub double %70, %47\l  %72 = fsub double %50, %71\l  %73 = fadd double %72, %62\l  %74 = fsub double %73, %72\l  %75 = fsub double %62, %74\l  %76 = fadd double %75, %69\l  %77 = tail call double @llvm.amdgcn.ldexp.f64(double %70, i32 -2)\l  %78 = tail call double @llvm.amdgcn.fract.f64(double %77)\l  %79 = tail call i1 @llvm.amdgcn.class.f64(double %77, i32 516)\l  %80 = select i1 %79, double 0.000000e+00, double %78\l  %81 = tail call double @llvm.amdgcn.ldexp.f64(double %80, i32 2)\l  %82 = fadd double %81, %73\l  %83 = fcmp olt double %82, 0.000000e+00\l  %84 = select i1 %83, double 4.000000e+00, double 0.000000e+00\l  %85 = fadd double %81, %84\l  %86 = fadd double %73, %85\l  %87 = fptosi double %86 to i32\l  %88 = sitofp i32 %87 to double\l  %89 = fsub double %85, %88\l  %90 = fadd double %73, %89\l  %91 = fsub double %90, %89\l  %92 = fsub double %73, %91\l  %93 = fadd double %76, %92\l  %94 = fcmp oge double %90, 5.000000e-01\l  %95 = zext i1 %94 to i32\l  %96 = add nsw i32 %95, %87\l  %97 = select i1 %94, double 1.000000e+00, double 0.000000e+00\l  %98 = fsub double %90, %97\l  %99 = fadd double %98, %93\l  %100 = fsub double %99, %98\l  %101 = fsub double %93, %100\l  %102 = fmul double %99, 0x3FF921FB54442D18\l  %103 = fneg double %102\l  %104 = tail call double @llvm.fma.f64(double %99, double 0x3FF921FB54442D18,\l... double %103)\l  %105 = tail call double @llvm.fma.f64(double %99, double 0x3C91A62633145C07,\l... double %104)\l  %106 = tail call double @llvm.fma.f64(double %101, double\l... 0x3FF921FB54442D18, double %105)\l  %107 = fadd double %102, %106\l  %108 = fsub double %107, %102\l  %109 = fsub double %106, %108\l  br label %110\l}"];
	Node0x5a27fa0 -> Node0x5a281e0;
	Node0x5a281e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%110:\l110:                                              \l  %111 = phi double [ %32, %15 ], [ %109, %34 ]\l  %112 = phi double [ %30, %15 ], [ %107, %34 ]\l  %113 = phi i32 [ %33, %15 ], [ %96, %34 ]\l  %114 = fmul double %112, %112\l  %115 = fmul double %114, 5.000000e-01\l  %116 = fsub double 1.000000e+00, %115\l  %117 = fsub double 1.000000e+00, %116\l  %118 = fsub double %117, %115\l  %119 = fmul double %114, %114\l  %120 = tail call double @llvm.fma.f64(double %114, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %121 = tail call double @llvm.fma.f64(double %114, double %120, double\l... 0xBE927E4FA17F65F6)\l  %122 = tail call double @llvm.fma.f64(double %114, double %121, double\l... 0x3EFA01A019F4EC90)\l  %123 = tail call double @llvm.fma.f64(double %114, double %122, double\l... 0xBF56C16C16C16967)\l  %124 = tail call double @llvm.fma.f64(double %114, double %123, double\l... 0x3FA5555555555555)\l  %125 = fneg double %111\l  %126 = tail call double @llvm.fma.f64(double %112, double %125, double %118)\l  %127 = tail call double @llvm.fma.f64(double %119, double %124, double %126)\l  %128 = fadd double %116, %127\l  %129 = tail call double @llvm.fma.f64(double %114, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %130 = tail call double @llvm.fma.f64(double %114, double %129, double\l... 0x3EC71DE3796CDE01)\l  %131 = tail call double @llvm.fma.f64(double %114, double %130, double\l... 0xBF2A01A019E83E5C)\l  %132 = tail call double @llvm.fma.f64(double %114, double %131, double\l... 0x3F81111111110BB3)\l  %133 = fneg double %114\l  %134 = fmul double %112, %133\l  %135 = fmul double %111, 5.000000e-01\l  %136 = tail call double @llvm.fma.f64(double %134, double %132, double %135)\l  %137 = tail call double @llvm.fma.f64(double %114, double %136, double %125)\l  %138 = tail call double @llvm.fma.f64(double %134, double\l... 0xBFC5555555555555, double %137)\l  %139 = fsub double %112, %138\l  %140 = and i32 %113, 1\l  %141 = icmp eq i32 %140, 0\l  %142 = select i1 %141, double %139, double %128\l  %143 = bitcast double %142 to \<2 x i32\>\l  %144 = shl i32 %113, 30\l  %145 = bitcast double %12 to \<2 x i32\>\l  %146 = extractelement \<2 x i32\> %145, i64 1\l  %147 = xor i32 %144, %146\l  %148 = and i32 %147, -2147483648\l  %149 = extractelement \<2 x i32\> %143, i64 1\l  %150 = xor i32 %149, %148\l  %151 = insertelement \<2 x i32\> %143, i32 %150, i64 1\l  %152 = tail call i1 @llvm.amdgcn.class.f64(double %13, i32 504)\l  %153 = select i1 %152, \<2 x i32\> %151, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %154 = bitcast \<2 x i32\> %153 to double\l  br i1 %14, label %155, label %260\l|{<s0>T|<s1>F}}"];
	Node0x5a281e0:s0 -> Node0x5a300b0;
	Node0x5a281e0:s1 -> Node0x5a30140;
	Node0x5a300b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%155:\l155:                                              \l  %156 = fmul double %13, 0x3FE45F306DC9C883\l  %157 = tail call double @llvm.rint.f64(double %156)\l  %158 = tail call double @llvm.fma.f64(double %157, double\l... 0xBFF921FB54442D18, double %13)\l  %159 = tail call double @llvm.fma.f64(double %157, double\l... 0xBC91A62633145C00, double %158)\l  %160 = fmul double %157, 0x3C91A62633145C00\l  %161 = fneg double %160\l  %162 = tail call double @llvm.fma.f64(double %157, double\l... 0x3C91A62633145C00, double %161)\l  %163 = fsub double %158, %160\l  %164 = fsub double %158, %163\l  %165 = fsub double %164, %160\l  %166 = fsub double %163, %159\l  %167 = fadd double %166, %165\l  %168 = fsub double %167, %162\l  %169 = tail call double @llvm.fma.f64(double %157, double\l... 0xB97B839A252049C0, double %168)\l  %170 = fadd double %159, %169\l  %171 = fsub double %170, %159\l  %172 = fsub double %169, %171\l  %173 = fptosi double %157 to i32\l  %174 = fmul double %170, %170\l  %175 = fmul double %174, 5.000000e-01\l  %176 = fsub double 1.000000e+00, %175\l  %177 = fsub double 1.000000e+00, %176\l  %178 = fsub double %177, %175\l  %179 = fmul double %174, %174\l  %180 = tail call double @llvm.fma.f64(double %174, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %181 = tail call double @llvm.fma.f64(double %174, double %180, double\l... 0xBE927E4FA17F65F6)\l  %182 = tail call double @llvm.fma.f64(double %174, double %181, double\l... 0x3EFA01A019F4EC90)\l  %183 = tail call double @llvm.fma.f64(double %174, double %182, double\l... 0xBF56C16C16C16967)\l  %184 = tail call double @llvm.fma.f64(double %174, double %183, double\l... 0x3FA5555555555555)\l  %185 = fneg double %172\l  %186 = tail call double @llvm.fma.f64(double %170, double %185, double %178)\l  %187 = tail call double @llvm.fma.f64(double %179, double %184, double %186)\l  %188 = fadd double %176, %187\l  %189 = tail call double @llvm.fma.f64(double %174, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %190 = tail call double @llvm.fma.f64(double %174, double %189, double\l... 0x3EC71DE3796CDE01)\l  %191 = tail call double @llvm.fma.f64(double %174, double %190, double\l... 0xBF2A01A019E83E5C)\l  %192 = tail call double @llvm.fma.f64(double %174, double %191, double\l... 0x3F81111111110BB3)\l  %193 = fneg double %174\l  %194 = fmul double %170, %193\l  %195 = fmul double %172, 5.000000e-01\l  %196 = tail call double @llvm.fma.f64(double %194, double %192, double %195)\l  %197 = tail call double @llvm.fma.f64(double %174, double %196, double %185)\l  %198 = tail call double @llvm.fma.f64(double %194, double\l... 0xBFC5555555555555, double %197)\l  %199 = fsub double %170, %198\l  %200 = and i32 %173, 1\l  %201 = icmp eq i32 %200, 0\l  %202 = select i1 %201, double %199, double %188\l  %203 = bitcast double %202 to \<2 x i32\>\l  %204 = shl i32 %173, 30\l  %205 = xor i32 %204, %146\l  %206 = and i32 %205, -2147483648\l  %207 = extractelement \<2 x i32\> %203, i64 1\l  %208 = xor i32 %207, %206\l  %209 = insertelement \<2 x i32\> %203, i32 %208, i64 1\l  %210 = select i1 %152, \<2 x i32\> %209, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %211 = bitcast \<2 x i32\> %210 to double\l  %212 = fmul contract double %154, %211\l  %213 = fptrunc double %212 to float\l  %214 = sext i32 %11 to i64\l  %215 = getelementptr inbounds float, float addrspace(1)* %0, i64 %214\l  store float %213, float addrspace(1)* %215, align 4, !tbaa !7\l  %216 = fmul double %13, 0x3FE45F306DC9C883\l  %217 = tail call double @llvm.rint.f64(double %216)\l  %218 = tail call double @llvm.fma.f64(double %217, double\l... 0xBFF921FB54442D18, double %13)\l  %219 = tail call double @llvm.fma.f64(double %217, double\l... 0xBC91A62633145C00, double %218)\l  %220 = fmul double %217, 0x3C91A62633145C00\l  %221 = fneg double %220\l  %222 = tail call double @llvm.fma.f64(double %217, double\l... 0x3C91A62633145C00, double %221)\l  %223 = fsub double %218, %220\l  %224 = fsub double %218, %223\l  %225 = fsub double %224, %220\l  %226 = fsub double %223, %219\l  %227 = fadd double %226, %225\l  %228 = fsub double %227, %222\l  %229 = tail call double @llvm.fma.f64(double %217, double\l... 0xB97B839A252049C0, double %228)\l  %230 = fadd double %219, %229\l  %231 = fsub double %230, %219\l  %232 = fsub double %229, %231\l  %233 = fptosi double %217 to i32\l  %234 = fmul double %230, %230\l  %235 = fmul double %234, 5.000000e-01\l  %236 = fsub double 1.000000e+00, %235\l  %237 = fsub double 1.000000e+00, %236\l  %238 = fsub double %237, %235\l  %239 = fmul double %234, %234\l  %240 = tail call double @llvm.fma.f64(double %234, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %241 = tail call double @llvm.fma.f64(double %234, double %240, double\l... 0xBE927E4FA17F65F6)\l  %242 = tail call double @llvm.fma.f64(double %234, double %241, double\l... 0x3EFA01A019F4EC90)\l  %243 = tail call double @llvm.fma.f64(double %234, double %242, double\l... 0xBF56C16C16C16967)\l  %244 = tail call double @llvm.fma.f64(double %234, double %243, double\l... 0x3FA5555555555555)\l  %245 = fneg double %232\l  %246 = tail call double @llvm.fma.f64(double %230, double %245, double %238)\l  %247 = tail call double @llvm.fma.f64(double %239, double %244, double %246)\l  %248 = fadd double %236, %247\l  %249 = tail call double @llvm.fma.f64(double %234, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %250 = tail call double @llvm.fma.f64(double %234, double %249, double\l... 0x3EC71DE3796CDE01)\l  %251 = tail call double @llvm.fma.f64(double %234, double %250, double\l... 0xBF2A01A019E83E5C)\l  %252 = tail call double @llvm.fma.f64(double %234, double %251, double\l... 0x3F81111111110BB3)\l  %253 = fneg double %234\l  %254 = fmul double %230, %253\l  %255 = fmul double %232, 5.000000e-01\l  %256 = tail call double @llvm.fma.f64(double %254, double %252, double %255)\l  %257 = tail call double @llvm.fma.f64(double %234, double %256, double %245)\l  %258 = tail call double @llvm.fma.f64(double %254, double\l... 0xBFC5555555555555, double %257)\l  %259 = fsub double %230, %258\l  br label %479\l}"];
	Node0x5a300b0 -> Node0x5a2e280;
	Node0x5a30140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%260:\l260:                                              \l  %261 = tail call double @llvm.amdgcn.trig.preop.f64(double %13, i32 0)\l  %262 = tail call double @llvm.amdgcn.trig.preop.f64(double %13, i32 1)\l  %263 = tail call double @llvm.amdgcn.trig.preop.f64(double %13, i32 2)\l  %264 = fcmp oge double %13, 0x7B00000000000000\l  %265 = tail call double @llvm.amdgcn.ldexp.f64(double %13, i32 -128)\l  %266 = select i1 %264, double %265, double %13\l  %267 = fmul double %263, %266\l  %268 = fneg double %267\l  %269 = tail call double @llvm.fma.f64(double %263, double %266, double %268)\l  %270 = fmul double %262, %266\l  %271 = fneg double %270\l  %272 = tail call double @llvm.fma.f64(double %262, double %266, double %271)\l  %273 = fmul double %261, %266\l  %274 = fneg double %273\l  %275 = tail call double @llvm.fma.f64(double %261, double %266, double %274)\l  %276 = fadd double %270, %275\l  %277 = fsub double %276, %270\l  %278 = fsub double %276, %277\l  %279 = fsub double %275, %277\l  %280 = fsub double %270, %278\l  %281 = fadd double %279, %280\l  %282 = fadd double %267, %272\l  %283 = fsub double %282, %267\l  %284 = fsub double %282, %283\l  %285 = fsub double %272, %283\l  %286 = fsub double %267, %284\l  %287 = fadd double %285, %286\l  %288 = fadd double %282, %281\l  %289 = fsub double %288, %282\l  %290 = fsub double %288, %289\l  %291 = fsub double %281, %289\l  %292 = fsub double %282, %290\l  %293 = fadd double %291, %292\l  %294 = fadd double %287, %293\l  %295 = fadd double %269, %294\l  %296 = fadd double %273, %276\l  %297 = fsub double %296, %273\l  %298 = fsub double %276, %297\l  %299 = fadd double %298, %288\l  %300 = fsub double %299, %298\l  %301 = fsub double %288, %300\l  %302 = fadd double %301, %295\l  %303 = tail call double @llvm.amdgcn.ldexp.f64(double %296, i32 -2)\l  %304 = tail call double @llvm.amdgcn.fract.f64(double %303)\l  %305 = tail call i1 @llvm.amdgcn.class.f64(double %303, i32 516)\l  %306 = select i1 %305, double 0.000000e+00, double %304\l  %307 = tail call double @llvm.amdgcn.ldexp.f64(double %306, i32 2)\l  %308 = fadd double %307, %299\l  %309 = fcmp olt double %308, 0.000000e+00\l  %310 = select i1 %309, double 4.000000e+00, double 0.000000e+00\l  %311 = fadd double %307, %310\l  %312 = fadd double %299, %311\l  %313 = fptosi double %312 to i32\l  %314 = sitofp i32 %313 to double\l  %315 = fsub double %311, %314\l  %316 = fadd double %299, %315\l  %317 = fsub double %316, %315\l  %318 = fsub double %299, %317\l  %319 = fadd double %302, %318\l  %320 = fcmp oge double %316, 5.000000e-01\l  %321 = zext i1 %320 to i32\l  %322 = add nsw i32 %321, %313\l  %323 = select i1 %320, double 1.000000e+00, double 0.000000e+00\l  %324 = fsub double %316, %323\l  %325 = fadd double %324, %319\l  %326 = fsub double %325, %324\l  %327 = fsub double %319, %326\l  %328 = fmul double %325, 0x3FF921FB54442D18\l  %329 = fneg double %328\l  %330 = tail call double @llvm.fma.f64(double %325, double\l... 0x3FF921FB54442D18, double %329)\l  %331 = tail call double @llvm.fma.f64(double %325, double\l... 0x3C91A62633145C07, double %330)\l  %332 = tail call double @llvm.fma.f64(double %327, double\l... 0x3FF921FB54442D18, double %331)\l  %333 = fadd double %328, %332\l  %334 = fsub double %333, %328\l  %335 = fsub double %332, %334\l  %336 = fmul double %333, %333\l  %337 = fmul double %336, 5.000000e-01\l  %338 = fsub double 1.000000e+00, %337\l  %339 = fsub double 1.000000e+00, %338\l  %340 = fsub double %339, %337\l  %341 = fmul double %336, %336\l  %342 = tail call double @llvm.fma.f64(double %336, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %343 = tail call double @llvm.fma.f64(double %336, double %342, double\l... 0xBE927E4FA17F65F6)\l  %344 = tail call double @llvm.fma.f64(double %336, double %343, double\l... 0x3EFA01A019F4EC90)\l  %345 = tail call double @llvm.fma.f64(double %336, double %344, double\l... 0xBF56C16C16C16967)\l  %346 = tail call double @llvm.fma.f64(double %336, double %345, double\l... 0x3FA5555555555555)\l  %347 = fneg double %335\l  %348 = tail call double @llvm.fma.f64(double %333, double %347, double %340)\l  %349 = tail call double @llvm.fma.f64(double %341, double %346, double %348)\l  %350 = fadd double %338, %349\l  %351 = tail call double @llvm.fma.f64(double %336, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %352 = tail call double @llvm.fma.f64(double %336, double %351, double\l... 0x3EC71DE3796CDE01)\l  %353 = tail call double @llvm.fma.f64(double %336, double %352, double\l... 0xBF2A01A019E83E5C)\l  %354 = tail call double @llvm.fma.f64(double %336, double %353, double\l... 0x3F81111111110BB3)\l  %355 = fneg double %336\l  %356 = fmul double %333, %355\l  %357 = fmul double %335, 5.000000e-01\l  %358 = tail call double @llvm.fma.f64(double %356, double %354, double %357)\l  %359 = tail call double @llvm.fma.f64(double %336, double %358, double %347)\l  %360 = tail call double @llvm.fma.f64(double %356, double\l... 0xBFC5555555555555, double %359)\l  %361 = fsub double %333, %360\l  %362 = and i32 %322, 1\l  %363 = icmp eq i32 %362, 0\l  %364 = select i1 %363, double %361, double %350\l  %365 = bitcast double %364 to \<2 x i32\>\l  %366 = shl i32 %322, 30\l  %367 = xor i32 %366, %146\l  %368 = and i32 %367, -2147483648\l  %369 = extractelement \<2 x i32\> %365, i64 1\l  %370 = xor i32 %369, %368\l  %371 = insertelement \<2 x i32\> %365, i32 %370, i64 1\l  %372 = select i1 %152, \<2 x i32\> %371, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %373 = bitcast \<2 x i32\> %372 to double\l  %374 = fmul contract double %154, %373\l  %375 = fptrunc double %374 to float\l  %376 = sext i32 %11 to i64\l  %377 = getelementptr inbounds float, float addrspace(1)* %0, i64 %376\l  store float %375, float addrspace(1)* %377, align 4, !tbaa !7\l  %378 = tail call double @llvm.amdgcn.trig.preop.f64(double %13, i32 0)\l  %379 = tail call double @llvm.amdgcn.trig.preop.f64(double %13, i32 1)\l  %380 = tail call double @llvm.amdgcn.trig.preop.f64(double %13, i32 2)\l  %381 = fcmp oge double %13, 0x7B00000000000000\l  %382 = tail call double @llvm.amdgcn.ldexp.f64(double %13, i32 -128)\l  %383 = select i1 %381, double %382, double %13\l  %384 = fmul double %380, %383\l  %385 = fneg double %384\l  %386 = tail call double @llvm.fma.f64(double %380, double %383, double %385)\l  %387 = fmul double %379, %383\l  %388 = fneg double %387\l  %389 = tail call double @llvm.fma.f64(double %379, double %383, double %388)\l  %390 = fmul double %378, %383\l  %391 = fneg double %390\l  %392 = tail call double @llvm.fma.f64(double %378, double %383, double %391)\l  %393 = fadd double %387, %392\l  %394 = fsub double %393, %387\l  %395 = fsub double %393, %394\l  %396 = fsub double %392, %394\l  %397 = fsub double %387, %395\l  %398 = fadd double %396, %397\l  %399 = fadd double %384, %389\l  %400 = fsub double %399, %384\l  %401 = fsub double %399, %400\l  %402 = fsub double %389, %400\l  %403 = fsub double %384, %401\l  %404 = fadd double %402, %403\l  %405 = fadd double %399, %398\l  %406 = fsub double %405, %399\l  %407 = fsub double %405, %406\l  %408 = fsub double %398, %406\l  %409 = fsub double %399, %407\l  %410 = fadd double %408, %409\l  %411 = fadd double %404, %410\l  %412 = fadd double %386, %411\l  %413 = fadd double %390, %393\l  %414 = fsub double %413, %390\l  %415 = fsub double %393, %414\l  %416 = fadd double %415, %405\l  %417 = fsub double %416, %415\l  %418 = fsub double %405, %417\l  %419 = fadd double %418, %412\l  %420 = tail call double @llvm.amdgcn.ldexp.f64(double %413, i32 -2)\l  %421 = tail call double @llvm.amdgcn.fract.f64(double %420)\l  %422 = tail call i1 @llvm.amdgcn.class.f64(double %420, i32 516)\l  %423 = select i1 %422, double 0.000000e+00, double %421\l  %424 = tail call double @llvm.amdgcn.ldexp.f64(double %423, i32 2)\l  %425 = fadd double %424, %416\l  %426 = fcmp olt double %425, 0.000000e+00\l  %427 = select i1 %426, double 4.000000e+00, double 0.000000e+00\l  %428 = fadd double %424, %427\l  %429 = fadd double %416, %428\l  %430 = fptosi double %429 to i32\l  %431 = sitofp i32 %430 to double\l  %432 = fsub double %428, %431\l  %433 = fadd double %416, %432\l  %434 = fsub double %433, %432\l  %435 = fsub double %416, %434\l  %436 = fadd double %419, %435\l  %437 = fcmp oge double %433, 5.000000e-01\l  %438 = zext i1 %437 to i32\l  %439 = add nsw i32 %438, %430\l  %440 = select i1 %437, double 1.000000e+00, double 0.000000e+00\l  %441 = fsub double %433, %440\l  %442 = fadd double %441, %436\l  %443 = fsub double %442, %441\l  %444 = fsub double %436, %443\l  %445 = fmul double %442, 0x3FF921FB54442D18\l  %446 = fneg double %445\l  %447 = tail call double @llvm.fma.f64(double %442, double\l... 0x3FF921FB54442D18, double %446)\l  %448 = tail call double @llvm.fma.f64(double %442, double\l... 0x3C91A62633145C07, double %447)\l  %449 = tail call double @llvm.fma.f64(double %444, double\l... 0x3FF921FB54442D18, double %448)\l  %450 = fadd double %445, %449\l  %451 = fsub double %450, %445\l  %452 = fsub double %449, %451\l  %453 = fmul double %450, %450\l  %454 = fmul double %453, 5.000000e-01\l  %455 = fsub double 1.000000e+00, %454\l  %456 = fsub double 1.000000e+00, %455\l  %457 = fsub double %456, %454\l  %458 = fmul double %453, %453\l  %459 = tail call double @llvm.fma.f64(double %453, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %460 = tail call double @llvm.fma.f64(double %453, double %459, double\l... 0xBE927E4FA17F65F6)\l  %461 = tail call double @llvm.fma.f64(double %453, double %460, double\l... 0x3EFA01A019F4EC90)\l  %462 = tail call double @llvm.fma.f64(double %453, double %461, double\l... 0xBF56C16C16C16967)\l  %463 = tail call double @llvm.fma.f64(double %453, double %462, double\l... 0x3FA5555555555555)\l  %464 = fneg double %452\l  %465 = tail call double @llvm.fma.f64(double %450, double %464, double %457)\l  %466 = tail call double @llvm.fma.f64(double %458, double %463, double %465)\l  %467 = fadd double %455, %466\l  %468 = tail call double @llvm.fma.f64(double %453, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %469 = tail call double @llvm.fma.f64(double %453, double %468, double\l... 0x3EC71DE3796CDE01)\l  %470 = tail call double @llvm.fma.f64(double %453, double %469, double\l... 0xBF2A01A019E83E5C)\l  %471 = tail call double @llvm.fma.f64(double %453, double %470, double\l... 0x3F81111111110BB3)\l  %472 = fneg double %453\l  %473 = fmul double %450, %472\l  %474 = fmul double %452, 5.000000e-01\l  %475 = tail call double @llvm.fma.f64(double %473, double %471, double %474)\l  %476 = tail call double @llvm.fma.f64(double %453, double %475, double %464)\l  %477 = tail call double @llvm.fma.f64(double %473, double\l... 0xBFC5555555555555, double %476)\l  %478 = fsub double %450, %477\l  br label %479\l}"];
	Node0x5a30140 -> Node0x5a2e280;
	Node0x5a2e280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%479:\l479:                                              \l  %480 = phi i64 [ %214, %155 ], [ %376, %260 ]\l  %481 = phi double [ %259, %155 ], [ %478, %260 ]\l  %482 = phi i32 [ %233, %155 ], [ %439, %260 ]\l  %483 = phi double [ %248, %155 ], [ %467, %260 ]\l  %484 = fneg double %481\l  %485 = and i32 %482, 1\l  %486 = icmp eq i32 %485, 0\l  %487 = select i1 %486, double %483, double %484\l  %488 = bitcast double %487 to \<2 x i32\>\l  %489 = shl i32 %482, 30\l  %490 = and i32 %489, -2147483648\l  %491 = extractelement \<2 x i32\> %488, i64 1\l  %492 = xor i32 %491, %490\l  %493 = insertelement \<2 x i32\> %488, i32 %492, i64 1\l  %494 = select i1 %152, \<2 x i32\> %493, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %495 = bitcast \<2 x i32\> %494 to double\l  %496 = bitcast \<2 x i32\> %494 to double\l  %497 = fmul contract double %495, %496\l  %498 = fptrunc double %497 to float\l  %499 = getelementptr inbounds float, float addrspace(1)* %1, i64 %480\l  store float %498, float addrspace(1)* %499, align 4, !tbaa !7\l  ret void\l}"];
}
