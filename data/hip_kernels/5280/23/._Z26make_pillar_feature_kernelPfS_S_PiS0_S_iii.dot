digraph "CFG for '_Z26make_pillar_feature_kernelPfS_S_PiS0_S_iii' function" {
	label="CFG for '_Z26make_pillar_feature_kernelPfS_S_PiS0_S_iii' function";

	Node0x4f86d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = sext i32 %10 to i64\l  %12 = getelementptr inbounds float, float addrspace(1)* %5, i64 %11\l  %13 = load float, float addrspace(1)* %12, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %14 = fptosi float %13 to i32\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %16 = icmp slt i32 %15, %14\l  br i1 %16, label %17, label %143\l|{<s0>T|<s1>F}}"];
	Node0x4f86d60:s0 -> Node0x4f86a90;
	Node0x4f86d60:s1 -> Node0x4f88f10;
	Node0x4f86a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%17:\l17:                                               \l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %11\l  %19 = load i32, i32 addrspace(1)* %18, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %11\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %22 = mul i32 %7, %6\l  %23 = mul i32 %22, %10\l  %24 = mul nsw i32 %15, %7\l  %25 = mul nsw i32 %21, %8\l  %26 = add i32 %25, %19\l  %27 = mul i32 %22, %26\l  %28 = icmp sgt i32 %7, 0\l  br i1 %28, label %29, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4f86a90:s0 -> Node0x4f8aa40;
	Node0x4f86a90:s1 -> Node0x4f8aad0;
	Node0x4f8aa40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%29:\l29:                                               \l  %30 = and i32 %7, 7\l  %31 = icmp ult i32 %7, 8\l  br i1 %31, label %34, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4f8aa40:s0 -> Node0x4f8ad90;
	Node0x4f8aa40:s1 -> Node0x4f8ade0;
	Node0x4f8ade0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%32:\l32:                                               \l  %33 = and i32 %7, -8\l  br label %66\l}"];
	Node0x4f8ade0 -> Node0x4f88ec0;
	Node0x4f8ad90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%34:\l34:                                               \l  %35 = phi i32 [ 0, %29 ], [ %140, %66 ]\l  %36 = icmp eq i32 %30, 0\l  br i1 %36, label %51, label %37\l|{<s0>T|<s1>F}}"];
	Node0x4f8ad90:s0 -> Node0x4f8aad0;
	Node0x4f8ad90:s1 -> Node0x4f8b310;
	Node0x4f8b310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi i32 [ %48, %37 ], [ %35, %34 ]\l  %39 = phi i32 [ %49, %37 ], [ 0, %34 ]\l  %40 = add i32 %38, %24\l  %41 = add i32 %40, %27\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !4\l  %45 = add i32 %40, %23\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  store float %44, float addrspace(1)* %47, align 4, !tbaa !4\l  %48 = add nuw nsw i32 %38, 1\l  %49 = add i32 %39, 1\l  %50 = icmp eq i32 %49, %30\l  br i1 %50, label %51, label %37, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4f8b310:s0 -> Node0x4f8aad0;
	Node0x4f8b310:s1 -> Node0x4f8b310;
	Node0x4f8aad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%51:\l51:                                               \l  %52 = sitofp i32 %19 to float\l  %53 = sitofp i32 %21 to float\l  %54 = shl nsw i32 %10, 2\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %2, i64 %55\l  store float 0.000000e+00, float addrspace(1)* %56, align 4, !tbaa !4\l  %57 = add nuw nsw i32 %54, 1\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %2, i64 %58\l  store float 0.000000e+00, float addrspace(1)* %59, align 4, !tbaa !4\l  %60 = add nuw nsw i32 %54, 2\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %2, i64 %61\l  store float %53, float addrspace(1)* %62, align 4, !tbaa !4\l  %63 = add nuw nsw i32 %54, 3\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %2, i64 %64\l  store float %52, float addrspace(1)* %65, align 4, !tbaa !4\l  br label %143\l}"];
	Node0x4f8aad0 -> Node0x4f88f10;
	Node0x4f88ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%66:\l66:                                               \l  %67 = phi i32 [ 0, %32 ], [ %140, %66 ]\l  %68 = phi i32 [ 0, %32 ], [ %141, %66 ]\l  %69 = add i32 %67, %24\l  %70 = add i32 %69, %27\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !4\l  %74 = add i32 %69, %23\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %1, i64 %75\l  store float %73, float addrspace(1)* %76, align 4, !tbaa !4\l  %77 = or i32 %67, 1\l  %78 = add i32 %77, %24\l  %79 = add i32 %78, %27\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !4\l  %83 = add i32 %78, %23\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  store float %82, float addrspace(1)* %85, align 4, !tbaa !4\l  %86 = or i32 %67, 2\l  %87 = add i32 %86, %24\l  %88 = add i32 %87, %27\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %0, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !4\l  %92 = add i32 %87, %23\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %1, i64 %93\l  store float %91, float addrspace(1)* %94, align 4, !tbaa !4\l  %95 = or i32 %67, 3\l  %96 = add i32 %95, %24\l  %97 = add i32 %96, %27\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !4\l  %101 = add i32 %96, %23\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %1, i64 %102\l  store float %100, float addrspace(1)* %103, align 4, !tbaa !4\l  %104 = or i32 %67, 4\l  %105 = add i32 %104, %24\l  %106 = add i32 %105, %27\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %0, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !4\l  %110 = add i32 %105, %23\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %1, i64 %111\l  store float %109, float addrspace(1)* %112, align 4, !tbaa !4\l  %113 = or i32 %67, 5\l  %114 = add i32 %113, %24\l  %115 = add i32 %114, %27\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %0, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !4\l  %119 = add i32 %114, %23\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %1, i64 %120\l  store float %118, float addrspace(1)* %121, align 4, !tbaa !4\l  %122 = or i32 %67, 6\l  %123 = add i32 %122, %24\l  %124 = add i32 %123, %27\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %0, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !4\l  %128 = add i32 %123, %23\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %1, i64 %129\l  store float %127, float addrspace(1)* %130, align 4, !tbaa !4\l  %131 = or i32 %67, 7\l  %132 = add i32 %131, %24\l  %133 = add i32 %132, %27\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %0, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !4\l  %137 = add i32 %132, %23\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %1, i64 %138\l  store float %136, float addrspace(1)* %139, align 4, !tbaa !4\l  %140 = add nuw nsw i32 %67, 8\l  %141 = add i32 %68, 8\l  %142 = icmp eq i32 %141, %33\l  br i1 %142, label %34, label %66, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4f88ec0:s0 -> Node0x4f8ad90;
	Node0x4f88ec0:s1 -> Node0x4f88ec0;
	Node0x4f88f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%143:\l143:                                              \l  ret void\l}"];
}
