digraph "CFG for '_Z20_norm_forward_kernelPfS_S_iii' function" {
	label="CFG for '_Z20_norm_forward_kernelPfS_S_iii' function";

	Node0x4e76c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !4\l  %13 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !13, !invariant.load\l... !14\l  %16 = zext i16 %15 to i32\l  %17 = udiv i32 %12, %16\l  %18 = mul i32 %17, %16\l  %19 = icmp ugt i32 %12, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %8\l  %23 = add i32 %22, %7\l  %24 = mul i32 %23, %16\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %26 = add i32 %24, %25\l  %27 = mul nsw i32 %4, %3\l  %28 = mul nsw i32 %27, %5\l  %29 = icmp slt i32 %26, %28\l  br i1 %29, label %30, label %65\l|{<s0>T|<s1>F}}"];
	Node0x4e76c70:s0 -> Node0x4e795e0;
	Node0x4e76c70:s1 -> Node0x4e79670;
	Node0x4e795e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%30:\l30:                                               \l  %31 = sdiv i32 %26, %5\l  %32 = srem i32 %31, %4\l  %33 = sext i32 %26 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %36 = sext i32 %32 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %39 = fsub contract float %35, %38\l  %40 = getelementptr inbounds float, float addrspace(1)* %2, i64 %36\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %42 = fadd contract float %41, 0x3EB0C6F7A0000000\l  %43 = fcmp olt float %42, 0x39F0000000000000\l  %44 = select i1 %43, float 0x41F0000000000000, float 1.000000e+00\l  %45 = fmul float %42, %44\l  %46 = tail call float @llvm.sqrt.f32(float %45)\l  %47 = bitcast float %46 to i32\l  %48 = add nsw i32 %47, -1\l  %49 = bitcast i32 %48 to float\l  %50 = add nsw i32 %47, 1\l  %51 = bitcast i32 %50 to float\l  %52 = tail call i1 @llvm.amdgcn.class.f32(float %45, i32 608)\l  %53 = select i1 %43, float 0x3EF0000000000000, float 1.000000e+00\l  %54 = fneg float %51\l  %55 = tail call float @llvm.fma.f32(float %54, float %46, float %45)\l  %56 = fcmp ogt float %55, 0.000000e+00\l  %57 = fneg float %49\l  %58 = tail call float @llvm.fma.f32(float %57, float %46, float %45)\l  %59 = fcmp ole float %58, 0.000000e+00\l  %60 = select i1 %59, float %49, float %46\l  %61 = select i1 %56, float %51, float %60\l  %62 = fmul float %53, %61\l  %63 = select i1 %52, float %45, float %62\l  %64 = fdiv contract float %39, %63\l  store float %64, float addrspace(1)* %34, align 4, !tbaa !16\l  br label %65\l}"];
	Node0x4e795e0 -> Node0x4e79670;
	Node0x4e79670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  ret void\l}"];
}
