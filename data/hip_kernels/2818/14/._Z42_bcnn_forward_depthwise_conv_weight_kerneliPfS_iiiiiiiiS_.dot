digraph "CFG for '_Z42_bcnn_forward_depthwise_conv_weight_kerneliPfS_iiiiiiiiS_' function" {
	label="CFG for '_Z42_bcnn_forward_depthwise_conv_weight_kerneliPfS_iiiiiiiiS_' function";

	Node0x5aac6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = getelementptr inbounds i8, i8 addrspace(4)* %14, i64 12\l  %20 = bitcast i8 addrspace(4)* %19 to i32 addrspace(4)*\l  %21 = load i32, i32 addrspace(4)* %20, align 4, !tbaa !6\l  %22 = mul i32 %13, %18\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %24 = add i32 %22, %23\l  %25 = icmp slt i32 %24, %0\l  br i1 %25, label %26, label %194\l|{<s0>T|<s1>F}}"];
	Node0x5aac6a0:s0 -> Node0x5aaf760;
	Node0x5aac6a0:s1 -> Node0x5aaf7f0;
	Node0x5aaf760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%26:\l26:                                               \l  %27 = mul i32 %8, %8\l  %28 = icmp sgt i32 %8, 0\l  %29 = udiv i32 %21, %18\l  %30 = mul i32 %29, %18\l  %31 = icmp ugt i32 %21, %30\l  %32 = zext i1 %31 to i32\l  %33 = add i32 %29, %32\l  %34 = mul i32 %33, %18\l  %35 = and i32 %8, 3\l  %36 = icmp ult i32 %8, 4\l  %37 = and i32 %8, -4\l  %38 = icmp eq i32 %35, 0\l  br label %39\l}"];
	Node0x5aaf760 -> Node0x5ab0180;
	Node0x5ab0180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%39:\l39:                                               \l  %40 = phi i32 [ %24, %26 ], [ %192, %188 ]\l  %41 = sdiv i32 %40, %4\l  %42 = sdiv i32 %41, %5\l  %43 = srem i32 %42, %3\l  br i1 %28, label %44, label %188\l|{<s0>T|<s1>F}}"];
	Node0x5ab0180:s0 -> Node0x5ab0560;
	Node0x5ab0180:s1 -> Node0x5ab0270;
	Node0x5ab0560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%44:\l44:                                               \l  %45 = mul i32 %27, %43\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %2, i64 %46\l  %48 = freeze i32 %40\l  %49 = freeze i32 %5\l  %50 = sdiv i32 %48, %49\l  %51 = mul i32 %50, %49\l  %52 = sub i32 %48, %51\l  %53 = srem i32 %50, %4\l  %54 = sdiv i32 %40, %3\l  %55 = sdiv i32 %54, %4\l  %56 = sdiv i32 %55, %5\l  %57 = mul nsw i32 %53, %9\l  %58 = sub i32 %57, %10\l  %59 = mul nsw i32 %52, %9\l  %60 = sub i32 %59, %10\l  %61 = mul nsw i32 %56, %3\l  %62 = add nsw i32 %43, %61\l  %63 = mul nsw i32 %62, %6\l  br label %64\l}"];
	Node0x5ab0560 -> Node0x5ab1100;
	Node0x5ab1100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%64:\l64:                                               \l  %65 = phi float addrspace(1)* [ %47, %44 ], [ %185, %183 ]\l  %66 = phi float [ 0.000000e+00, %44 ], [ %184, %183 ]\l  %67 = phi i32 [ 0, %44 ], [ %186, %183 ]\l  %68 = add nsw i32 %67, %58\l  %69 = icmp sgt i32 %68, -1\l  %70 = icmp slt i32 %68, %6\l  %71 = add nsw i32 %68, %63\l  %72 = mul nsw i32 %71, %7\l  br i1 %36, label %152, label %73\l|{<s0>T|<s1>F}}"];
	Node0x5ab1100:s0 -> Node0x5ab24f0;
	Node0x5ab1100:s1 -> Node0x5ab2580;
	Node0x5ab2580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%73:\l73:                                               \l  %74 = phi float addrspace(1)* [ %148, %146 ], [ %65, %64 ]\l  %75 = phi float [ %147, %146 ], [ %66, %64 ]\l  %76 = phi i32 [ %149, %146 ], [ 0, %64 ]\l  %77 = phi i32 [ %150, %146 ], [ 0, %64 ]\l  %78 = add nsw i32 %76, %60\l  br i1 %69, label %79, label %92\l|{<s0>T|<s1>F}}"];
	Node0x5ab2580:s0 -> Node0x5ab2c20;
	Node0x5ab2580:s1 -> Node0x5ab2cb0;
	Node0x5ab2c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%79:\l79:                                               \l  %80 = icmp sgt i32 %78, -1\l  %81 = select i1 %70, i1 %80, i1 false\l  %82 = icmp slt i32 %78, %7\l  %83 = select i1 %81, i1 %82, i1 false\l  br i1 %83, label %84, label %92\l|{<s0>T|<s1>F}}"];
	Node0x5ab2c20:s0 -> Node0x5ab30a0;
	Node0x5ab2c20:s1 -> Node0x5ab2cb0;
	Node0x5ab30a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%84:\l84:                                               \l  %85 = add nsw i32 %78, %72\l  %86 = load float, float addrspace(1)* %74, align 4, !tbaa !16\l  %87 = sext i32 %85 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !16\l  %90 = fmul contract float %86, %89\l  %91 = fadd contract float %75, %90\l  br label %92\l}"];
	Node0x5ab30a0 -> Node0x5ab2cb0;
	Node0x5ab2cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%92:\l92:                                               \l  %93 = phi float [ %91, %84 ], [ %75, %79 ], [ %75, %73 ]\l  %94 = getelementptr inbounds float, float addrspace(1)* %74, i64 1\l  %95 = or i32 %76, 1\l  %96 = add nsw i32 %95, %60\l  br i1 %69, label %97, label %110\l|{<s0>T|<s1>F}}"];
	Node0x5ab2cb0:s0 -> Node0x5ab3fb0;
	Node0x5ab2cb0:s1 -> Node0x5ab4000;
	Node0x5ab3fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%97:\l97:                                               \l  %98 = icmp sgt i32 %96, -1\l  %99 = select i1 %70, i1 %98, i1 false\l  %100 = icmp slt i32 %96, %7\l  %101 = select i1 %99, i1 %100, i1 false\l  br i1 %101, label %102, label %110\l|{<s0>T|<s1>F}}"];
	Node0x5ab3fb0:s0 -> Node0x5ab43c0;
	Node0x5ab3fb0:s1 -> Node0x5ab4000;
	Node0x5ab43c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%102:\l102:                                              \l  %103 = add nsw i32 %96, %72\l  %104 = load float, float addrspace(1)* %94, align 4, !tbaa !16\l  %105 = sext i32 %103 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %1, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !16\l  %108 = fmul contract float %104, %107\l  %109 = fadd contract float %93, %108\l  br label %110\l}"];
	Node0x5ab43c0 -> Node0x5ab4000;
	Node0x5ab4000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%110:\l110:                                              \l  %111 = phi float [ %109, %102 ], [ %93, %97 ], [ %93, %92 ]\l  %112 = getelementptr inbounds float, float addrspace(1)* %74, i64 2\l  %113 = or i32 %76, 2\l  %114 = add nsw i32 %113, %60\l  br i1 %69, label %115, label %128\l|{<s0>T|<s1>F}}"];
	Node0x5ab4000:s0 -> Node0x5ab4bc0;
	Node0x5ab4000:s1 -> Node0x5ab4c10;
	Node0x5ab4bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%115:\l115:                                              \l  %116 = icmp sgt i32 %114, -1\l  %117 = select i1 %70, i1 %116, i1 false\l  %118 = icmp slt i32 %114, %7\l  %119 = select i1 %117, i1 %118, i1 false\l  br i1 %119, label %120, label %128\l|{<s0>T|<s1>F}}"];
	Node0x5ab4bc0:s0 -> Node0x5ab4f90;
	Node0x5ab4bc0:s1 -> Node0x5ab4c10;
	Node0x5ab4f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%120:\l120:                                              \l  %121 = add nsw i32 %114, %72\l  %122 = load float, float addrspace(1)* %112, align 4, !tbaa !16\l  %123 = sext i32 %121 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %1, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !16\l  %126 = fmul contract float %122, %125\l  %127 = fadd contract float %111, %126\l  br label %128\l}"];
	Node0x5ab4f90 -> Node0x5ab4c10;
	Node0x5ab4c10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%128:\l128:                                              \l  %129 = phi float [ %127, %120 ], [ %111, %115 ], [ %111, %110 ]\l  %130 = getelementptr inbounds float, float addrspace(1)* %74, i64 3\l  %131 = or i32 %76, 3\l  %132 = add nsw i32 %131, %60\l  br i1 %69, label %133, label %146\l|{<s0>T|<s1>F}}"];
	Node0x5ab4c10:s0 -> Node0x5ab1450;
	Node0x5ab4c10:s1 -> Node0x5ab26f0;
	Node0x5ab1450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%133:\l133:                                              \l  %134 = icmp sgt i32 %132, -1\l  %135 = select i1 %70, i1 %134, i1 false\l  %136 = icmp slt i32 %132, %7\l  %137 = select i1 %135, i1 %136, i1 false\l  br i1 %137, label %138, label %146\l|{<s0>T|<s1>F}}"];
	Node0x5ab1450:s0 -> Node0x5ab1550;
	Node0x5ab1450:s1 -> Node0x5ab26f0;
	Node0x5ab1550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%138:\l138:                                              \l  %139 = add nsw i32 %132, %72\l  %140 = load float, float addrspace(1)* %130, align 4, !tbaa !16\l  %141 = sext i32 %139 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %1, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !16\l  %144 = fmul contract float %140, %143\l  %145 = fadd contract float %129, %144\l  br label %146\l}"];
	Node0x5ab1550 -> Node0x5ab26f0;
	Node0x5ab26f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%146:\l146:                                              \l  %147 = phi float [ %145, %138 ], [ %129, %133 ], [ %129, %128 ]\l  %148 = getelementptr inbounds float, float addrspace(1)* %74, i64 4\l  %149 = add nuw nsw i32 %76, 4\l  %150 = add i32 %77, 4\l  %151 = icmp eq i32 %150, %37\l  br i1 %151, label %152, label %73, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5ab26f0:s0 -> Node0x5ab24f0;
	Node0x5ab26f0:s1 -> Node0x5ab2580;
	Node0x5ab24f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%152:\l152:                                              \l  %153 = phi float [ undef, %64 ], [ %147, %146 ]\l  %154 = phi float addrspace(1)* [ undef, %64 ], [ %148, %146 ]\l  %155 = phi float addrspace(1)* [ %65, %64 ], [ %148, %146 ]\l  %156 = phi float [ %66, %64 ], [ %147, %146 ]\l  %157 = phi i32 [ 0, %64 ], [ %149, %146 ]\l  br i1 %38, label %183, label %158\l|{<s0>T|<s1>F}}"];
	Node0x5ab24f0:s0 -> Node0x5aafcb0;
	Node0x5ab24f0:s1 -> Node0x5ab6fa0;
	Node0x5ab6fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%158:\l158:                                              \l  %159 = phi float addrspace(1)* [ %179, %177 ], [ %155, %152 ]\l  %160 = phi float [ %178, %177 ], [ %156, %152 ]\l  %161 = phi i32 [ %180, %177 ], [ %157, %152 ]\l  %162 = phi i32 [ %181, %177 ], [ 0, %152 ]\l  %163 = add nsw i32 %161, %60\l  br i1 %69, label %164, label %177\l|{<s0>T|<s1>F}}"];
	Node0x5ab6fa0:s0 -> Node0x5ab7480;
	Node0x5ab6fa0:s1 -> Node0x5ab70a0;
	Node0x5ab7480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%164:\l164:                                              \l  %165 = icmp sgt i32 %163, -1\l  %166 = select i1 %70, i1 %165, i1 false\l  %167 = icmp slt i32 %163, %7\l  %168 = select i1 %166, i1 %167, i1 false\l  br i1 %168, label %169, label %177\l|{<s0>T|<s1>F}}"];
	Node0x5ab7480:s0 -> Node0x5ab7840;
	Node0x5ab7480:s1 -> Node0x5ab70a0;
	Node0x5ab7840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%169:\l169:                                              \l  %170 = add nsw i32 %163, %72\l  %171 = load float, float addrspace(1)* %159, align 4, !tbaa !16\l  %172 = sext i32 %170 to i64\l  %173 = getelementptr inbounds float, float addrspace(1)* %1, i64 %172\l  %174 = load float, float addrspace(1)* %173, align 4, !tbaa !16\l  %175 = fmul contract float %171, %174\l  %176 = fadd contract float %160, %175\l  br label %177\l}"];
	Node0x5ab7840 -> Node0x5ab70a0;
	Node0x5ab70a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%177:\l177:                                              \l  %178 = phi float [ %176, %169 ], [ %160, %164 ], [ %160, %158 ]\l  %179 = getelementptr inbounds float, float addrspace(1)* %159, i64 1\l  %180 = add nuw nsw i32 %161, 1\l  %181 = add i32 %162, 1\l  %182 = icmp eq i32 %181, %35\l  br i1 %182, label %183, label %158, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5ab70a0:s0 -> Node0x5aafcb0;
	Node0x5ab70a0:s1 -> Node0x5ab6fa0;
	Node0x5aafcb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%183:\l183:                                              \l  %184 = phi float [ %153, %152 ], [ %178, %177 ]\l  %185 = phi float addrspace(1)* [ %154, %152 ], [ %179, %177 ]\l  %186 = add nuw nsw i32 %67, 1\l  %187 = icmp eq i32 %186, %8\l  br i1 %187, label %188, label %64, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5aafcb0:s0 -> Node0x5ab0270;
	Node0x5aafcb0:s1 -> Node0x5ab1100;
	Node0x5ab0270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%188:\l188:                                              \l  %189 = phi float [ 0.000000e+00, %39 ], [ %184, %183 ]\l  %190 = sext i32 %40 to i64\l  %191 = getelementptr inbounds float, float addrspace(1)* %11, i64 %190\l  store float %189, float addrspace(1)* %191, align 4, !tbaa !16\l  %192 = add i32 %34, %40\l  %193 = icmp slt i32 %192, %0\l  br i1 %193, label %39, label %194, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x5ab0270:s0 -> Node0x5ab0180;
	Node0x5ab0270:s1 -> Node0x5aaf7f0;
	Node0x5aaf7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%194:\l194:                                              \l  ret void\l}"];
}
