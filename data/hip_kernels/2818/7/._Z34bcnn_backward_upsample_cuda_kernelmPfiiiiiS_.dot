digraph "CFG for '_Z34bcnn_backward_upsample_cuda_kernelmPfiiiiiS_' function" {
	label="CFG for '_Z34bcnn_backward_upsample_cuda_kernelmPfiiiiiS_' function";

	Node0x5ccb9a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !4\l  %15 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !13, !invariant.load\l... !14\l  %18 = zext i16 %17 to i32\l  %19 = udiv i32 %14, %18\l  %20 = mul i32 %19, %18\l  %21 = icmp ugt i32 %14, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %10\l  %25 = add i32 %24, %9\l  %26 = mul i32 %25, %18\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %28 = add i32 %26, %27\l  %29 = zext i32 %28 to i64\l  %30 = icmp ult i64 %29, %0\l  br i1 %30, label %31, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5ccb9a0:s0 -> Node0x5cce220;
	Node0x5ccb9a0:s1 -> Node0x5cce2b0;
	Node0x5cce220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %6, %2\l  %33 = sext i32 %32 to i64\l  %34 = freeze i64 %29\l  %35 = freeze i64 %33\l  %36 = udiv i64 %34, %35\l  %37 = mul i64 %36, %35\l  %38 = sub i64 %34, %37\l  %39 = trunc i64 %38 to i32\l  %40 = mul nsw i32 %6, %3\l  %41 = sext i32 %40 to i64\l  %42 = freeze i64 %41\l  %43 = udiv i64 %36, %42\l  %44 = mul i64 %43, %42\l  %45 = sub i64 %36, %44\l  %46 = trunc i64 %45 to i32\l  %47 = sext i32 %4 to i64\l  %48 = freeze i64 %47\l  %49 = udiv i64 %43, %48\l  %50 = mul i64 %49, %48\l  %51 = sub i64 %43, %50\l  %52 = trunc i64 %51 to i32\l  %53 = sext i32 %5 to i64\l  %54 = urem i64 %49, %53\l  %55 = trunc i64 %54 to i32\l  %56 = sdiv i32 %39, %6\l  %57 = sdiv i32 %46, %6\l  %58 = mul i32 %55, %4\l  %59 = add i32 %58, %52\l  %60 = mul i32 %59, %3\l  %61 = add i32 %60, %57\l  %62 = mul i32 %61, %2\l  %63 = add i32 %62, %56\l  %64 = sext i32 %28 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %7, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %67 = sext i32 %63 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %70 = fadd contract float %66, %69\l  store float %70, float addrspace(1)* %68, align 4, !tbaa !16\l  br label %71\l}"];
	Node0x5cce220 -> Node0x5cce2b0;
	Node0x5cce2b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  ret void\l}"];
}
