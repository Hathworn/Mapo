digraph "CFG for '_Z20fast_variance_kernelPfS_iiiS_' function" {
	label="CFG for '_Z20fast_variance_kernelPfS_iiiS_' function";

	Node0x5dd0fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %7\l  store float 0.000000e+00, float addrspace(3)* %8, align 4, !tbaa !5\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = icmp sgt i32 %2, 0\l  br i1 %10, label %11, label %177\l|{<s0>T|<s1>F}}"];
	Node0x5dd0fd0:s0 -> Node0x5dd3330;
	Node0x5dd0fd0:s1 -> Node0x5dd33c0;
	Node0x5dd3330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%11:\l11:                                               \l  %12 = icmp sgt i32 %4, 0\l  %13 = sext i32 %9 to i64\l  %14 = getelementptr inbounds float, float addrspace(1)* %1, i64 %13\l  %15 = add i32 %4, -1\l  %16 = lshr i32 %15, 9\l  %17 = add nuw nsw i32 %16, 1\l  %18 = and i32 %17, 7\l  %19 = icmp ult i32 %4, 3585\l  %20 = and i32 %17, -8\l  %21 = icmp eq i32 %18, 0\l  br label %22\l}"];
	Node0x5dd3330 -> Node0x5dd3c30;
	Node0x5dd3c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%22:\l22:                                               \l  %23 = phi float [ 0.000000e+00, %11 ], [ %174, %173 ]\l  %24 = phi i32 [ 0, %11 ], [ %175, %173 ]\l  br i1 %12, label %25, label %173\l|{<s0>T|<s1>F}}"];
	Node0x5dd3c30:s0 -> Node0x5dd3f80;
	Node0x5dd3c30:s1 -> Node0x5dd3d20;
	Node0x5dd3f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%25:\l25:                                               \l  %26 = mul i32 %24, %3\l  %27 = add i32 %26, %9\l  %28 = mul i32 %27, %4\l  br i1 %19, label %147, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5dd3f80:s0 -> Node0x5dd4270;
	Node0x5dd3f80:s1 -> Node0x5dd42c0;
	Node0x5dd42c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%29:\l29:                                               \l  %30 = phi float [ %143, %141 ], [ %23, %25 ]\l  %31 = phi i32 [ %144, %141 ], [ 0, %25 ]\l  %32 = phi i32 [ %145, %141 ], [ 0, %25 ]\l  %33 = or i32 %31, %7\l  %34 = icmp slt i32 %33, %4\l  br i1 %34, label %35, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5dd42c0:s0 -> Node0x5dd38b0;
	Node0x5dd42c0:s1 -> Node0x5dd4a90;
	Node0x5dd38b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%35:\l35:                                               \l  %36 = add i32 %33, %28\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %40 = load float, float addrspace(1)* %14, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %41 = fsub contract float %39, %40\l  %42 = fmul contract float %41, %41\l  br label %43\l}"];
	Node0x5dd38b0 -> Node0x5dd4a90;
	Node0x5dd4a90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%43:\l43:                                               \l  %44 = phi contract float [ %42, %35 ], [ 0.000000e+00, %29 ]\l  %45 = fadd contract float %44, %30\l  %46 = or i32 %31, 512\l  %47 = add nuw nsw i32 %46, %7\l  %48 = icmp slt i32 %47, %4\l  br i1 %48, label %49, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5dd4a90:s0 -> Node0x5dd60e0;
	Node0x5dd4a90:s1 -> Node0x5dd6130;
	Node0x5dd60e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%49:\l49:                                               \l  %50 = add i32 %47, %28\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %54 = load float, float addrspace(1)* %14, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %55 = fsub contract float %53, %54\l  %56 = fmul contract float %55, %55\l  br label %57\l}"];
	Node0x5dd60e0 -> Node0x5dd6130;
	Node0x5dd6130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%57:\l57:                                               \l  %58 = phi contract float [ %56, %49 ], [ 0.000000e+00, %43 ]\l  %59 = fadd contract float %58, %45\l  %60 = or i32 %31, %7\l  %61 = or i32 %60, 1024\l  %62 = icmp slt i32 %61, %4\l  br i1 %62, label %63, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5dd6130:s0 -> Node0x5dd69e0;
	Node0x5dd6130:s1 -> Node0x5dd6a30;
	Node0x5dd69e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%63:\l63:                                               \l  %64 = add i32 %61, %28\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %0, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %68 = load float, float addrspace(1)* %14, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %69 = fsub contract float %67, %68\l  %70 = fmul contract float %69, %69\l  br label %71\l}"];
	Node0x5dd69e0 -> Node0x5dd6a30;
	Node0x5dd6a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%71:\l71:                                               \l  %72 = phi contract float [ %70, %63 ], [ 0.000000e+00, %57 ]\l  %73 = fadd contract float %72, %59\l  %74 = or i32 %31, 1536\l  %75 = add nuw nsw i32 %74, %7\l  %76 = icmp slt i32 %75, %4\l  br i1 %76, label %77, label %85\l|{<s0>T|<s1>F}}"];
	Node0x5dd6a30:s0 -> Node0x5dd7500;
	Node0x5dd6a30:s1 -> Node0x5dd7550;
	Node0x5dd7500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%77:\l77:                                               \l  %78 = add i32 %75, %28\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %82 = load float, float addrspace(1)* %14, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %83 = fsub contract float %81, %82\l  %84 = fmul contract float %83, %83\l  br label %85\l}"];
	Node0x5dd7500 -> Node0x5dd7550;
	Node0x5dd7550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%85:\l85:                                               \l  %86 = phi contract float [ %84, %77 ], [ 0.000000e+00, %71 ]\l  %87 = fadd contract float %86, %73\l  %88 = or i32 %31, %7\l  %89 = or i32 %88, 2048\l  %90 = icmp slt i32 %89, %4\l  br i1 %90, label %91, label %99\l|{<s0>T|<s1>F}}"];
	Node0x5dd7550:s0 -> Node0x5dd7e00;
	Node0x5dd7550:s1 -> Node0x5dd7e50;
	Node0x5dd7e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%91:\l91:                                               \l  %92 = add i32 %89, %28\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %0, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %96 = load float, float addrspace(1)* %14, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %97 = fsub contract float %95, %96\l  %98 = fmul contract float %97, %97\l  br label %99\l}"];
	Node0x5dd7e00 -> Node0x5dd7e50;
	Node0x5dd7e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%99:\l99:                                               \l  %100 = phi contract float [ %98, %91 ], [ 0.000000e+00, %85 ]\l  %101 = fadd contract float %100, %87\l  %102 = or i32 %31, 2560\l  %103 = add nuw nsw i32 %102, %7\l  %104 = icmp slt i32 %103, %4\l  br i1 %104, label %105, label %113\l|{<s0>T|<s1>F}}"];
	Node0x5dd7e50:s0 -> Node0x5dd8700;
	Node0x5dd7e50:s1 -> Node0x5dd8750;
	Node0x5dd8700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%105:\l105:                                              \l  %106 = add i32 %103, %28\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %0, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %110 = load float, float addrspace(1)* %14, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %111 = fsub contract float %109, %110\l  %112 = fmul contract float %111, %111\l  br label %113\l}"];
	Node0x5dd8700 -> Node0x5dd8750;
	Node0x5dd8750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%113:\l113:                                              \l  %114 = phi contract float [ %112, %105 ], [ 0.000000e+00, %99 ]\l  %115 = fadd contract float %114, %101\l  %116 = or i32 %31, %7\l  %117 = or i32 %116, 3072\l  %118 = icmp slt i32 %117, %4\l  br i1 %118, label %119, label %127\l|{<s0>T|<s1>F}}"];
	Node0x5dd8750:s0 -> Node0x5dd9000;
	Node0x5dd8750:s1 -> Node0x5dd9050;
	Node0x5dd9000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%119:\l119:                                              \l  %120 = add i32 %117, %28\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %0, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %124 = load float, float addrspace(1)* %14, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %125 = fsub contract float %123, %124\l  %126 = fmul contract float %125, %125\l  br label %127\l}"];
	Node0x5dd9000 -> Node0x5dd9050;
	Node0x5dd9050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%127:\l127:                                              \l  %128 = phi contract float [ %126, %119 ], [ 0.000000e+00, %113 ]\l  %129 = fadd contract float %128, %115\l  %130 = or i32 %31, 3584\l  %131 = add nuw nsw i32 %130, %7\l  %132 = icmp slt i32 %131, %4\l  br i1 %132, label %133, label %141\l|{<s0>T|<s1>F}}"];
	Node0x5dd9050:s0 -> Node0x5dd6e40;
	Node0x5dd9050:s1 -> Node0x5dd4430;
	Node0x5dd6e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%133:\l133:                                              \l  %134 = add i32 %131, %28\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds float, float addrspace(1)* %0, i64 %135\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %138 = load float, float addrspace(1)* %14, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %139 = fsub contract float %137, %138\l  %140 = fmul contract float %139, %139\l  br label %141\l}"];
	Node0x5dd6e40 -> Node0x5dd4430;
	Node0x5dd4430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%141:\l141:                                              \l  %142 = phi contract float [ %140, %133 ], [ 0.000000e+00, %127 ]\l  %143 = fadd contract float %142, %129\l  %144 = add nuw nsw i32 %31, 4096\l  %145 = add i32 %32, 8\l  %146 = icmp eq i32 %145, %20\l  br i1 %146, label %147, label %29, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5dd4430:s0 -> Node0x5dd4270;
	Node0x5dd4430:s1 -> Node0x5dd42c0;
	Node0x5dd4270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%147:\l147:                                              \l  %148 = phi float [ undef, %25 ], [ %143, %141 ]\l  %149 = phi float [ %23, %25 ], [ %143, %141 ]\l  %150 = phi i32 [ 0, %25 ], [ %144, %141 ]\l  br i1 %21, label %171, label %151\l|{<s0>T|<s1>F}}"];
	Node0x5dd4270:s0 -> Node0x5dda8b0;
	Node0x5dd4270:s1 -> Node0x5dda900;
	Node0x5dda900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%151:\l151:                                              \l  %152 = phi float [ %167, %165 ], [ %149, %147 ]\l  %153 = phi i32 [ %168, %165 ], [ %150, %147 ]\l  %154 = phi i32 [ %169, %165 ], [ 0, %147 ]\l  %155 = add nuw nsw i32 %153, %7\l  %156 = icmp slt i32 %155, %4\l  br i1 %156, label %157, label %165\l|{<s0>T|<s1>F}}"];
	Node0x5dda900:s0 -> Node0x5ddae70;
	Node0x5dda900:s1 -> Node0x5ddaa00;
	Node0x5ddae70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%157:\l157:                                              \l  %158 = add i32 %155, %28\l  %159 = sext i32 %158 to i64\l  %160 = getelementptr inbounds float, float addrspace(1)* %0, i64 %159\l  %161 = load float, float addrspace(1)* %160, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %162 = load float, float addrspace(1)* %14, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %163 = fsub contract float %161, %162\l  %164 = fmul contract float %163, %163\l  br label %165\l}"];
	Node0x5ddae70 -> Node0x5ddaa00;
	Node0x5ddaa00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%165:\l165:                                              \l  %166 = phi contract float [ %164, %157 ], [ 0.000000e+00, %151 ]\l  %167 = fadd contract float %166, %152\l  %168 = add nuw nsw i32 %153, 512\l  %169 = add i32 %154, 1\l  %170 = icmp eq i32 %169, %18\l  br i1 %170, label %171, label %151, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5ddaa00:s0 -> Node0x5dda8b0;
	Node0x5ddaa00:s1 -> Node0x5dda900;
	Node0x5dda8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%171:\l171:                                              \l  %172 = phi float [ %148, %147 ], [ %167, %165 ]\l  store float %172, float addrspace(3)* %8, align 4, !tbaa !5\l  br label %173\l}"];
	Node0x5dda8b0 -> Node0x5dd3d20;
	Node0x5dd3d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%173:\l173:                                              \l  %174 = phi float [ %172, %171 ], [ %23, %22 ]\l  %175 = add nuw nsw i32 %24, 1\l  %176 = icmp eq i32 %175, %2\l  br i1 %176, label %177, label %22, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5dd3d20:s0 -> Node0x5dd33c0;
	Node0x5dd3d20:s1 -> Node0x5dd3c30;
	Node0x5dd33c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%177:\l177:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %178 = icmp eq i32 %7, 0\l  br i1 %178, label %179, label %255\l|{<s0>T|<s1>F}}"];
	Node0x5dd33c0:s0 -> Node0x5ddbfe0;
	Node0x5dd33c0:s1 -> Node0x5ddc030;
	Node0x5ddbfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%179:\l179:                                              \l  %180 = sext i32 %9 to i64\l  %181 = getelementptr inbounds float, float addrspace(1)* %5, i64 %180\l  store float 0.000000e+00, float addrspace(1)* %181, align 4, !tbaa !5\l  br label %182\l}"];
	Node0x5ddbfe0 -> Node0x5ddc2d0;
	Node0x5ddc2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%182:\l182:                                              \l  %183 = phi i32 [ 0, %179 ], [ %248, %182 ]\l  %184 = phi float [ 0.000000e+00, %179 ], [ %247, %182 ]\l  %185 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %183\l  %186 = load float, float addrspace(3)* %185, align 16, !tbaa !5\l  %187 = fadd contract float %186, %184\l  %188 = or i32 %183, 1\l  %189 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %188\l  %190 = load float, float addrspace(3)* %189, align 4, !tbaa !5\l  %191 = fadd contract float %190, %187\l  %192 = or i32 %183, 2\l  %193 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %192\l  %194 = load float, float addrspace(3)* %193, align 8, !tbaa !5\l  %195 = fadd contract float %194, %191\l  %196 = or i32 %183, 3\l  %197 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %196\l  %198 = load float, float addrspace(3)* %197, align 4, !tbaa !5\l  %199 = fadd contract float %198, %195\l  %200 = or i32 %183, 4\l  %201 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %200\l  %202 = load float, float addrspace(3)* %201, align 16, !tbaa !5\l  %203 = fadd contract float %202, %199\l  %204 = or i32 %183, 5\l  %205 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %204\l  %206 = load float, float addrspace(3)* %205, align 4, !tbaa !5\l  %207 = fadd contract float %206, %203\l  %208 = or i32 %183, 6\l  %209 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %208\l  %210 = load float, float addrspace(3)* %209, align 8, !tbaa !5\l  %211 = fadd contract float %210, %207\l  %212 = or i32 %183, 7\l  %213 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %212\l  %214 = load float, float addrspace(3)* %213, align 4, !tbaa !5\l  %215 = fadd contract float %214, %211\l  %216 = or i32 %183, 8\l  %217 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %216\l  %218 = load float, float addrspace(3)* %217, align 16, !tbaa !5\l  %219 = fadd contract float %218, %215\l  %220 = or i32 %183, 9\l  %221 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %220\l  %222 = load float, float addrspace(3)* %221, align 4, !tbaa !5\l  %223 = fadd contract float %222, %219\l  %224 = or i32 %183, 10\l  %225 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %224\l  %226 = load float, float addrspace(3)* %225, align 8, !tbaa !5\l  %227 = fadd contract float %226, %223\l  %228 = or i32 %183, 11\l  %229 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %228\l  %230 = load float, float addrspace(3)* %229, align 4, !tbaa !5\l  %231 = fadd contract float %230, %227\l  %232 = or i32 %183, 12\l  %233 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %232\l  %234 = load float, float addrspace(3)* %233, align 16, !tbaa !5\l  %235 = fadd contract float %234, %231\l  %236 = or i32 %183, 13\l  %237 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %236\l  %238 = load float, float addrspace(3)* %237, align 4, !tbaa !5\l  %239 = fadd contract float %238, %235\l  %240 = or i32 %183, 14\l  %241 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %240\l  %242 = load float, float addrspace(3)* %241, align 8, !tbaa !5\l  %243 = fadd contract float %242, %239\l  %244 = or i32 %183, 15\l  %245 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %244\l  %246 = load float, float addrspace(3)* %245, align 4, !tbaa !5\l  %247 = fadd contract float %246, %243\l  %248 = add nuw nsw i32 %183, 16\l  %249 = icmp eq i32 %248, 512\l  br i1 %249, label %250, label %182, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5ddc2d0:s0 -> Node0x5ddc540;
	Node0x5ddc2d0:s1 -> Node0x5ddc2d0;
	Node0x5ddc540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%250:\l250:                                              \l  %251 = mul nsw i32 %4, %2\l  %252 = add nsw i32 %251, -1\l  %253 = sitofp i32 %252 to float\l  %254 = fdiv contract float %247, %253\l  store float %254, float addrspace(1)* %181, align 4, !tbaa !5\l  br label %255\l}"];
	Node0x5ddc540 -> Node0x5ddc030;
	Node0x5ddc030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%255:\l255:                                              \l  ret void\l}"];
}
