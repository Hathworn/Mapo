digraph "CFG for '_Z18calculate_A_ch_1_2PfS_S_S_S_fiiiS_' function" {
	label="CFG for '_Z18calculate_A_ch_1_2PfS_S_S_S_fiiiS_' function";

	Node0x5b20080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %27 = add i32 %25, %26\l  %28 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %29 = getelementptr i8, i8 addrspace(4)* %12, i64 8\l  %30 = bitcast i8 addrspace(4)* %29 to i16 addrspace(4)*\l  %31 = load i16, i16 addrspace(4)* %30, align 4, !range !4, !invariant.load !5\l  %32 = zext i16 %31 to i32\l  %33 = mul i32 %28, %32\l  %34 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !6\l  %35 = add i32 %33, %34\l  %36 = icmp slt i32 %19, %6\l  %37 = icmp slt i32 %27, %8\l  %38 = select i1 %36, i1 %37, i1 false\l  br i1 %38, label %39, label %69\l|{<s0>T|<s1>F}}"];
	Node0x5b20080:s0 -> Node0x5b24f10;
	Node0x5b20080:s1 -> Node0x5b24fa0;
	Node0x5b24f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%39:\l39:                                               \l  %40 = mul nsw i32 %35, %6\l  %41 = add nsw i32 %40, %19\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = sext i32 %19 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fdiv contract float %44, %47\l  %49 = mul i32 %8, 3\l  %50 = mul i32 %49, %35\l  %51 = add nsw i32 %50, %27\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %2, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %55 = fmul contract float %54, %5\l  %56 = getelementptr inbounds float, float addrspace(1)* %3, i64 %45\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %58 = getelementptr inbounds float, float addrspace(1)* %4, i64 %52\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %60 = fmul contract float %57, %59\l  %61 = fsub contract float %55, %60\l  %62 = fmul contract float %48, %61\l  %63 = mul nsw i32 %40, %8\l  %64 = mul nsw i32 %27, %6\l  %65 = add i32 %64, %19\l  %66 = add i32 %65, %63\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %9, i64 %67\l  store float %62, float addrspace(1)* %68, align 4, !tbaa !7\l  br label %69\l}"];
	Node0x5b24f10 -> Node0x5b24fa0;
	Node0x5b24fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  ret void\l}"];
}
