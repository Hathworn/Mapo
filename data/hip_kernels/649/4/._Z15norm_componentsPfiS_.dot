digraph "CFG for '_Z15norm_componentsPfiS_' function" {
	label="CFG for '_Z15norm_componentsPfiS_' function";

	Node0x476f8e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %1\l  br i1 %13, label %14, label %55\l|{<s0>T|<s1>F}}"];
	Node0x476f8e0:s0 -> Node0x47717e0;
	Node0x476f8e0:s1 -> Node0x4771870;
	Node0x47717e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds float, float addrspace(1)* %0, i64 %15\l  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %18 = fmul contract float %17, %17\l  %19 = add nsw i32 %12, %1\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds float, float addrspace(1)* %0, i64 %20\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %23 = fmul contract float %22, %22\l  %24 = fadd contract float %18, %23\l  %25 = shl nsw i32 %1, 1\l  %26 = add nsw i32 %12, %25\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %30 = fmul contract float %29, %29\l  %31 = fadd contract float %24, %30\l  %32 = fcmp olt float %31, 0x39F0000000000000\l  %33 = select i1 %32, float 0x41F0000000000000, float 1.000000e+00\l  %34 = fmul float %31, %33\l  %35 = tail call float @llvm.sqrt.f32(float %34)\l  %36 = bitcast float %35 to i32\l  %37 = add nsw i32 %36, -1\l  %38 = bitcast i32 %37 to float\l  %39 = add nsw i32 %36, 1\l  %40 = bitcast i32 %39 to float\l  %41 = tail call i1 @llvm.amdgcn.class.f32(float %34, i32 608)\l  %42 = select i1 %32, float 0x3EF0000000000000, float 1.000000e+00\l  %43 = fneg float %40\l  %44 = tail call float @llvm.fma.f32(float %43, float %35, float %34)\l  %45 = fcmp ogt float %44, 0.000000e+00\l  %46 = fneg float %38\l  %47 = tail call float @llvm.fma.f32(float %46, float %35, float %34)\l  %48 = fcmp ole float %47, 0.000000e+00\l  %49 = select i1 %48, float %38, float %35\l  %50 = select i1 %45, float %40, float %49\l  %51 = fmul float %42, %50\l  %52 = select i1 %41, float %34, float %51\l  %53 = tail call float @llvm.maxnum.f32(float %52, float 0x3DDB7CDFE0000000)\l  %54 = getelementptr inbounds float, float addrspace(1)* %2, i64 %15\l  store float %53, float addrspace(1)* %54, align 4, !tbaa !7\l  br label %55\l}"];
	Node0x47717e0 -> Node0x4771870;
	Node0x4771870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  ret void\l}"];
}
