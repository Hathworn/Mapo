digraph "CFG for '_Z26A_for_lightning_estimationPfS_iS_' function" {
	label="CFG for '_Z26A_for_lightning_estimationPfS_iS_' function";

	Node0x61d9700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %2\l  br i1 %14, label %15, label %47\l|{<s0>T|<s1>F}}"];
	Node0x61d9700:s0 -> Node0x61db650;
	Node0x61d9700:s1 -> Node0x61db6e0;
	Node0x61db650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !6\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %18 = getelementptr i8, i8 addrspace(4)* %6, i64 8\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %25 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 2, !range !4, !invariant.load !5\l  %28 = zext i16 %27 to i32\l  %29 = mul i32 %24, %28\l  %30 = add i32 %22, %16\l  %31 = add i32 %29, %23\l  %32 = mul nsw i32 %31, %2\l  %33 = add nsw i32 %32, %13\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = mul nsw i32 %30, %2\l  %38 = add i32 %37, %13\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = fmul contract float %36, %41\l  %43 = shl nsw i32 %32, 2\l  %44 = add i32 %38, %43\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %3, i64 %45\l  store float %42, float addrspace(1)* %46, align 4, !tbaa !7\l  br label %47\l}"];
	Node0x61db650 -> Node0x61db6e0;
	Node0x61db6e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  ret void\l}"];
}
