digraph "CFG for '_Z16gpu_seqrd_kernelPimm' function" {
	label="CFG for '_Z16gpu_seqrd_kernelPimm' function";

	Node0x61bdce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%3:\l  %4 = icmp eq i64 %1, 0\l  br i1 %4, label %27, label %5\l|{<s0>T|<s1>F}}"];
	Node0x61bdce0:s0 -> Node0x61be3d0;
	Node0x61bdce0:s1 -> Node0x61be460;
	Node0x61be460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%5:\l5:                                                \l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = zext i32 %17 to i64\l  %19 = udiv i32 %14, %11\l  %20 = mul i32 %19, %11\l  %21 = icmp ugt i32 %14, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %11\l  %25 = zext i32 %24 to i64\l  %26 = icmp ult i64 %18, %2\l  br label %30\l}"];
	Node0x61be460 -> Node0x61c0590;
	Node0x61be3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%27:\l27:                                               \l  %28 = phi i32 [ 0, %3 ], [ %74, %73 ]\l  %29 = icmp sgt i32 %28, 0\l  br i1 %29, label %77, label %78\l|{<s0>T|<s1>F}}"];
	Node0x61be3d0:s0 -> Node0x61c0890;
	Node0x61be3d0:s1 -> Node0x61c0920;
	Node0x61c0590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%30:\l30:                                               \l  %31 = phi i32 [ 0, %5 ], [ %74, %73 ]\l  %32 = phi i64 [ 0, %5 ], [ %75, %73 ]\l  br i1 %26, label %33, label %73\l|{<s0>T|<s1>F}}"];
	Node0x61c0590:s0 -> Node0x61bffd0;
	Node0x61c0590:s1 -> Node0x61c06c0;
	Node0x61bffd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ %71, %57 ], [ %31, %30 ]\l  %35 = phi i64 [ %59, %57 ], [ %18, %30 ]\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %35\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %38 = add i64 %35, %25\l  %39 = icmp ult i64 %38, %2\l  br i1 %39, label %40, label %43\l|{<s0>T|<s1>F}}"];
	Node0x61bffd0:s0 -> Node0x61c1af0;
	Node0x61bffd0:s1 -> Node0x61c1b80;
	Node0x61c1af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%40:\l40:                                               \l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %38\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  br label %43\l}"];
	Node0x61c1af0 -> Node0x61c1b80;
	Node0x61c1b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi i32 [ %42, %40 ], [ 0, %33 ]\l  %45 = add i64 %38, %25\l  %46 = icmp ult i64 %45, %2\l  br i1 %46, label %47, label %50\l|{<s0>T|<s1>F}}"];
	Node0x61c1b80:s0 -> Node0x61c2620;
	Node0x61c1b80:s1 -> Node0x61c2670;
	Node0x61c2620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%47:\l47:                                               \l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %45\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  br label %50\l}"];
	Node0x61c2620 -> Node0x61c2670;
	Node0x61c2670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i32 [ %49, %47 ], [ 0, %43 ]\l  %52 = add i64 %45, %25\l  %53 = icmp ult i64 %52, %2\l  br i1 %53, label %54, label %57\l|{<s0>T|<s1>F}}"];
	Node0x61c2670:s0 -> Node0x61c2b00;
	Node0x61c2670:s1 -> Node0x61c0090;
	Node0x61c2b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%54:\l54:                                               \l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %52\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  br label %57\l}"];
	Node0x61c2b00 -> Node0x61c0090;
	Node0x61c0090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  %58 = phi i32 [ %56, %54 ], [ 0, %50 ]\l  %59 = add i64 %52, %25\l  %60 = icmp ne i32 %37, 0\l  %61 = zext i1 %60 to i32\l  %62 = add nsw i32 %34, %61\l  %63 = icmp ne i32 %44, 0\l  %64 = zext i1 %63 to i32\l  %65 = add nsw i32 %62, %64\l  %66 = icmp ne i32 %51, 0\l  %67 = zext i1 %66 to i32\l  %68 = add nsw i32 %65, %67\l  %69 = icmp ne i32 %58, 0\l  %70 = zext i1 %69 to i32\l  %71 = add nsw i32 %68, %70\l  %72 = icmp ult i64 %59, %2\l  br i1 %72, label %33, label %73, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x61c0090:s0 -> Node0x61bffd0;
	Node0x61c0090:s1 -> Node0x61c06c0;
	Node0x61c06c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%73:\l73:                                               \l  %74 = phi i32 [ %31, %30 ], [ %71, %57 ]\l  %75 = add nuw i64 %32, 1\l  %76 = icmp eq i64 %75, %1\l  br i1 %76, label %27, label %30, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x61c06c0:s0 -> Node0x61be3d0;
	Node0x61c06c0:s1 -> Node0x61c0590;
	Node0x61c0890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%77:\l77:                                               \l  store i32 %28, i32 addrspace(1)* %0, align 4, !tbaa !16\l  br label %78\l}"];
	Node0x61c0890 -> Node0x61c0920;
	Node0x61c0920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%78:\l78:                                               \l  ret void\l}"];
}
