digraph "CFG for '_Z18gpu_latency_kernelPimmm' function" {
	label="CFG for '_Z18gpu_latency_kernelPimmm' function";

	Node0x5331190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%4:\l  %5 = icmp eq i64 %1, 0\l  br i1 %5, label %11, label %6\l|{<s0>T|<s1>F}}"];
	Node0x5331190:s0 -> Node0x53318d0;
	Node0x5331190:s1 -> Node0x5331920;
	Node0x5331920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%6:\l6:                                                \l  %7 = icmp eq i64 %2, 0\l  %8 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 24\l  %10 = bitcast i8 addrspace(4)* %9 to i64 addrspace(4)*\l  br label %16\l}"];
	Node0x5331920 -> Node0x53311e0;
	Node0x53318d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%11:\l11:                                               \l  %12 = phi i32 [ 0, %4 ], [ %23, %22 ]\l  %13 = icmp sgt i32 %12, 0\l  %14 = icmp ugt i64 %1, %3\l  %15 = select i1 %13, i1 %14, i1 false\l  br i1 %15, label %504, label %505\l|{<s0>T|<s1>F}}"];
	Node0x53318d0:s0 -> Node0x53322a0;
	Node0x53318d0:s1 -> Node0x5332330;
	Node0x53311e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%16:\l16:                                               \l  %17 = phi i32 [ 0, %6 ], [ %23, %22 ]\l  %18 = phi i64 [ 0, %6 ], [ %24, %22 ]\l  br i1 %7, label %22, label %19\l|{<s0>T|<s1>F}}"];
	Node0x53311e0:s0 -> Node0x5331f60;
	Node0x53311e0:s1 -> Node0x5332690;
	Node0x5332690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%19:\l19:                                               \l  %20 = trunc i64 %18 to i32\l  %21 = and i32 %20, 31\l  br label %26\l}"];
	Node0x5332690 -> Node0x5332900;
	Node0x5331f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%22:\l22:                                               \l  %23 = phi i32 [ %17, %16 ], [ %501, %499 ]\l  %24 = add nuw i64 %18, 1\l  %25 = icmp eq i64 %24, %1\l  br i1 %25, label %11, label %16, !llvm.loop !4\l|{<s0>T|<s1>F}}"];
	Node0x5331f60:s0 -> Node0x53318d0;
	Node0x5331f60:s1 -> Node0x53311e0;
	Node0x5332900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%26:\l26:                                               \l  %27 = phi i32 [ %501, %499 ], [ %17, %19 ]\l  %28 = phi i64 [ %502, %499 ], [ 0, %19 ]\l  %29 = phi i32 [ %500, %499 ], [ %21, %19 ]\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !6\l  %33 = icmp sgt i32 %32, -1\l  %34 = zext i32 %32 to i64\l  %35 = icmp ult i64 %34, %3\l  %36 = select i1 %33, i1 %35, i1 false\l  br i1 %36, label %499, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5332900:s0 -> Node0x53329f0;
	Node0x5332900:s1 -> Node0x53340b0;
	Node0x53340b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%37:\l37:                                               \l  %38 = load i64, i64 addrspace(4)* %10, align 8, !tbaa !10\l  %39 = inttoptr i64 %38 to i8 addrspace(1)*\l  %40 = addrspacecast i8 addrspace(1)* %39 to i8*\l  %41 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %40,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %42 = extractelement \<2 x i64\> %41, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([10 x i8], [10 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %43, label %47\l|{<s0>T|<s1>F}}"];
	Node0x53340b0:s0 -> Node0x5334c90;
	Node0x53340b0:s1 -> Node0x5335680;
	Node0x5334c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%43:\l43:                                               \l  %44 = and i64 %42, -225\l  %45 = or i64 %44, 32\l  %46 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %40,\l... i64 noundef %45, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %488\l}"];
	Node0x5334c90 -> Node0x5335960;
	Node0x5335680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%47:\l47:                                               \l  %48 = and i64 %42, 2\l  %49 = and i64 %42, -3\l  %50 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %49, i64 0\l  br label %51\l}"];
	Node0x5335680 -> Node0x5336500;
	Node0x5336500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%51:\l51:                                               \l  %52 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([10 x i8], [10 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([10 x i8], [10 x i8] addrspace(4)*\l... @.str, i64 0, i64 9) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([10 x i8]* addrspacecast ([10 x i8] addrspace(4)* @.str to [10 x i8]*) to\l... i64)), i64 1))), %47 ], [ %485, %477 ]\l  %53 = phi i8 addrspace(4)* [ getelementptr inbounds ([10 x i8], [10 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %47 ], [ %486, %477 ]\l  %54 = phi \<2 x i64\> [ %50, %47 ], [ %484, %477 ]\l  %55 = icmp ugt i64 %52, 56\l  %56 = extractelement \<2 x i64\> %54, i64 0\l  %57 = or i64 %56, %48\l  %58 = insertelement \<2 x i64\> poison, i64 %57, i64 0\l  %59 = select i1 %55, \<2 x i64\> %54, \<2 x i64\> %58\l  %60 = tail call i64 @llvm.umin.i64(i64 %52, i64 56)\l  %61 = trunc i64 %60 to i32\l  %62 = extractelement \<2 x i64\> %59, i64 0\l  %63 = icmp ugt i32 %61, 7\l  br i1 %63, label %66, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5336500:s0 -> Node0x5337440;
	Node0x5336500:s1 -> Node0x53374d0;
	Node0x53374d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%64:\l64:                                               \l  %65 = icmp eq i32 %61, 0\l  br i1 %65, label %119, label %106\l|{<s0>T|<s1>F}}"];
	Node0x53374d0:s0 -> Node0x5333df0;
	Node0x53374d0:s1 -> Node0x5333e40;
	Node0x5337440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%66:\l66:                                               \l  %67 = load i8, i8 addrspace(4)* %53, align 1, !tbaa !14\l  %68 = zext i8 %67 to i64\l  %69 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 1\l  %70 = load i8, i8 addrspace(4)* %69, align 1, !tbaa !14\l  %71 = zext i8 %70 to i64\l  %72 = shl nuw nsw i64 %71, 8\l  %73 = or i64 %72, %68\l  %74 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 2\l  %75 = load i8, i8 addrspace(4)* %74, align 1, !tbaa !14\l  %76 = zext i8 %75 to i64\l  %77 = shl nuw nsw i64 %76, 16\l  %78 = or i64 %73, %77\l  %79 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 3\l  %80 = load i8, i8 addrspace(4)* %79, align 1, !tbaa !14\l  %81 = zext i8 %80 to i64\l  %82 = shl nuw nsw i64 %81, 24\l  %83 = or i64 %78, %82\l  %84 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 4\l  %85 = load i8, i8 addrspace(4)* %84, align 1, !tbaa !14\l  %86 = zext i8 %85 to i64\l  %87 = shl nuw nsw i64 %86, 32\l  %88 = or i64 %83, %87\l  %89 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 5\l  %90 = load i8, i8 addrspace(4)* %89, align 1, !tbaa !14\l  %91 = zext i8 %90 to i64\l  %92 = shl nuw nsw i64 %91, 40\l  %93 = or i64 %88, %92\l  %94 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 6\l  %95 = load i8, i8 addrspace(4)* %94, align 1, !tbaa !14\l  %96 = zext i8 %95 to i64\l  %97 = shl nuw nsw i64 %96, 48\l  %98 = or i64 %93, %97\l  %99 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 7\l  %100 = load i8, i8 addrspace(4)* %99, align 1, !tbaa !14\l  %101 = zext i8 %100 to i64\l  %102 = shl nuw i64 %101, 56\l  %103 = or i64 %98, %102\l  %104 = add nsw i32 %61, -8\l  %105 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 8\l  br label %119\l}"];
	Node0x5337440 -> Node0x5333df0;
	Node0x5333e40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  %107 = phi i32 [ %117, %106 ], [ 0, %64 ]\l  %108 = phi i64 [ %116, %106 ], [ 0, %64 ]\l  %109 = zext i32 %107 to i64\l  %110 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 %109\l  %111 = load i8, i8 addrspace(4)* %110, align 1, !tbaa !14\l  %112 = zext i8 %111 to i64\l  %113 = shl i32 %107, 3\l  %114 = zext i32 %113 to i64\l  %115 = shl nuw i64 %112, %114\l  %116 = or i64 %115, %108\l  %117 = add nuw nsw i32 %107, 1\l  %118 = icmp eq i32 %117, %61\l  br i1 %118, label %119, label %106, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5333e40:s0 -> Node0x5333df0;
	Node0x5333e40:s1 -> Node0x5333e40;
	Node0x5333df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%119:\l119:                                              \l  %120 = phi i8 addrspace(4)* [ %105, %66 ], [ %53, %64 ], [ %53, %106 ]\l  %121 = phi i32 [ %104, %66 ], [ 0, %64 ], [ 0, %106 ]\l  %122 = phi i64 [ %103, %66 ], [ 0, %64 ], [ %116, %106 ]\l  %123 = icmp ugt i32 %121, 7\l  br i1 %123, label %126, label %124\l|{<s0>T|<s1>F}}"];
	Node0x5333df0:s0 -> Node0x533a3c0;
	Node0x5333df0:s1 -> Node0x533a410;
	Node0x533a410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%124:\l124:                                              \l  %125 = icmp eq i32 %121, 0\l  br i1 %125, label %179, label %166\l|{<s0>T|<s1>F}}"];
	Node0x533a410:s0 -> Node0x533a5e0;
	Node0x533a410:s1 -> Node0x533a630;
	Node0x533a3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%126:\l126:                                              \l  %127 = load i8, i8 addrspace(4)* %120, align 1, !tbaa !14\l  %128 = zext i8 %127 to i64\l  %129 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 1\l  %130 = load i8, i8 addrspace(4)* %129, align 1, !tbaa !14\l  %131 = zext i8 %130 to i64\l  %132 = shl nuw nsw i64 %131, 8\l  %133 = or i64 %132, %128\l  %134 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 2\l  %135 = load i8, i8 addrspace(4)* %134, align 1, !tbaa !14\l  %136 = zext i8 %135 to i64\l  %137 = shl nuw nsw i64 %136, 16\l  %138 = or i64 %133, %137\l  %139 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 3\l  %140 = load i8, i8 addrspace(4)* %139, align 1, !tbaa !14\l  %141 = zext i8 %140 to i64\l  %142 = shl nuw nsw i64 %141, 24\l  %143 = or i64 %138, %142\l  %144 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 4\l  %145 = load i8, i8 addrspace(4)* %144, align 1, !tbaa !14\l  %146 = zext i8 %145 to i64\l  %147 = shl nuw nsw i64 %146, 32\l  %148 = or i64 %143, %147\l  %149 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 5\l  %150 = load i8, i8 addrspace(4)* %149, align 1, !tbaa !14\l  %151 = zext i8 %150 to i64\l  %152 = shl nuw nsw i64 %151, 40\l  %153 = or i64 %148, %152\l  %154 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 6\l  %155 = load i8, i8 addrspace(4)* %154, align 1, !tbaa !14\l  %156 = zext i8 %155 to i64\l  %157 = shl nuw nsw i64 %156, 48\l  %158 = or i64 %153, %157\l  %159 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 7\l  %160 = load i8, i8 addrspace(4)* %159, align 1, !tbaa !14\l  %161 = zext i8 %160 to i64\l  %162 = shl nuw i64 %161, 56\l  %163 = or i64 %158, %162\l  %164 = add nsw i32 %121, -8\l  %165 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 8\l  br label %179\l}"];
	Node0x533a3c0 -> Node0x533a5e0;
	Node0x533a630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%166:\l166:                                              \l  %167 = phi i32 [ %177, %166 ], [ 0, %124 ]\l  %168 = phi i64 [ %176, %166 ], [ 0, %124 ]\l  %169 = zext i32 %167 to i64\l  %170 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 %169\l  %171 = load i8, i8 addrspace(4)* %170, align 1, !tbaa !14\l  %172 = zext i8 %171 to i64\l  %173 = shl i32 %167, 3\l  %174 = zext i32 %173 to i64\l  %175 = shl nuw i64 %172, %174\l  %176 = or i64 %175, %168\l  %177 = add nuw nsw i32 %167, 1\l  %178 = icmp eq i32 %177, %121\l  br i1 %178, label %179, label %166\l|{<s0>T|<s1>F}}"];
	Node0x533a630:s0 -> Node0x533a5e0;
	Node0x533a630:s1 -> Node0x533a630;
	Node0x533a5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%179:\l179:                                              \l  %180 = phi i8 addrspace(4)* [ %165, %126 ], [ %120, %124 ], [ %120, %166 ]\l  %181 = phi i32 [ %164, %126 ], [ 0, %124 ], [ 0, %166 ]\l  %182 = phi i64 [ %163, %126 ], [ 0, %124 ], [ %176, %166 ]\l  %183 = icmp ugt i32 %181, 7\l  br i1 %183, label %186, label %184\l|{<s0>T|<s1>F}}"];
	Node0x533a5e0:s0 -> Node0x533cb10;
	Node0x533a5e0:s1 -> Node0x533cb60;
	Node0x533cb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%184:\l184:                                              \l  %185 = icmp eq i32 %181, 0\l  br i1 %185, label %239, label %226\l|{<s0>T|<s1>F}}"];
	Node0x533cb60:s0 -> Node0x533ccf0;
	Node0x533cb60:s1 -> Node0x533cd40;
	Node0x533cb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%186:\l186:                                              \l  %187 = load i8, i8 addrspace(4)* %180, align 1, !tbaa !14\l  %188 = zext i8 %187 to i64\l  %189 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 1\l  %190 = load i8, i8 addrspace(4)* %189, align 1, !tbaa !14\l  %191 = zext i8 %190 to i64\l  %192 = shl nuw nsw i64 %191, 8\l  %193 = or i64 %192, %188\l  %194 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 2\l  %195 = load i8, i8 addrspace(4)* %194, align 1, !tbaa !14\l  %196 = zext i8 %195 to i64\l  %197 = shl nuw nsw i64 %196, 16\l  %198 = or i64 %193, %197\l  %199 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 3\l  %200 = load i8, i8 addrspace(4)* %199, align 1, !tbaa !14\l  %201 = zext i8 %200 to i64\l  %202 = shl nuw nsw i64 %201, 24\l  %203 = or i64 %198, %202\l  %204 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 4\l  %205 = load i8, i8 addrspace(4)* %204, align 1, !tbaa !14\l  %206 = zext i8 %205 to i64\l  %207 = shl nuw nsw i64 %206, 32\l  %208 = or i64 %203, %207\l  %209 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 5\l  %210 = load i8, i8 addrspace(4)* %209, align 1, !tbaa !14\l  %211 = zext i8 %210 to i64\l  %212 = shl nuw nsw i64 %211, 40\l  %213 = or i64 %208, %212\l  %214 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 6\l  %215 = load i8, i8 addrspace(4)* %214, align 1, !tbaa !14\l  %216 = zext i8 %215 to i64\l  %217 = shl nuw nsw i64 %216, 48\l  %218 = or i64 %213, %217\l  %219 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 7\l  %220 = load i8, i8 addrspace(4)* %219, align 1, !tbaa !14\l  %221 = zext i8 %220 to i64\l  %222 = shl nuw i64 %221, 56\l  %223 = or i64 %218, %222\l  %224 = add nsw i32 %181, -8\l  %225 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 8\l  br label %239\l}"];
	Node0x533cb10 -> Node0x533ccf0;
	Node0x533cd40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%226:\l226:                                              \l  %227 = phi i32 [ %237, %226 ], [ 0, %184 ]\l  %228 = phi i64 [ %236, %226 ], [ 0, %184 ]\l  %229 = zext i32 %227 to i64\l  %230 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 %229\l  %231 = load i8, i8 addrspace(4)* %230, align 1, !tbaa !14\l  %232 = zext i8 %231 to i64\l  %233 = shl i32 %227, 3\l  %234 = zext i32 %233 to i64\l  %235 = shl nuw i64 %232, %234\l  %236 = or i64 %235, %228\l  %237 = add nuw nsw i32 %227, 1\l  %238 = icmp eq i32 %237, %181\l  br i1 %238, label %239, label %226\l|{<s0>T|<s1>F}}"];
	Node0x533cd40:s0 -> Node0x533ccf0;
	Node0x533cd40:s1 -> Node0x533cd40;
	Node0x533ccf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%239:\l239:                                              \l  %240 = phi i8 addrspace(4)* [ %225, %186 ], [ %180, %184 ], [ %180, %226 ]\l  %241 = phi i32 [ %224, %186 ], [ 0, %184 ], [ 0, %226 ]\l  %242 = phi i64 [ %223, %186 ], [ 0, %184 ], [ %236, %226 ]\l  %243 = icmp ugt i32 %241, 7\l  br i1 %243, label %246, label %244\l|{<s0>T|<s1>F}}"];
	Node0x533ccf0:s0 -> Node0x533ed90;
	Node0x533ccf0:s1 -> Node0x533ede0;
	Node0x533ede0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%244:\l244:                                              \l  %245 = icmp eq i32 %241, 0\l  br i1 %245, label %299, label %286\l|{<s0>T|<s1>F}}"];
	Node0x533ede0:s0 -> Node0x533ef70;
	Node0x533ede0:s1 -> Node0x533efc0;
	Node0x533ed90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%246:\l246:                                              \l  %247 = load i8, i8 addrspace(4)* %240, align 1, !tbaa !14\l  %248 = zext i8 %247 to i64\l  %249 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 1\l  %250 = load i8, i8 addrspace(4)* %249, align 1, !tbaa !14\l  %251 = zext i8 %250 to i64\l  %252 = shl nuw nsw i64 %251, 8\l  %253 = or i64 %252, %248\l  %254 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 2\l  %255 = load i8, i8 addrspace(4)* %254, align 1, !tbaa !14\l  %256 = zext i8 %255 to i64\l  %257 = shl nuw nsw i64 %256, 16\l  %258 = or i64 %253, %257\l  %259 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 3\l  %260 = load i8, i8 addrspace(4)* %259, align 1, !tbaa !14\l  %261 = zext i8 %260 to i64\l  %262 = shl nuw nsw i64 %261, 24\l  %263 = or i64 %258, %262\l  %264 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 4\l  %265 = load i8, i8 addrspace(4)* %264, align 1, !tbaa !14\l  %266 = zext i8 %265 to i64\l  %267 = shl nuw nsw i64 %266, 32\l  %268 = or i64 %263, %267\l  %269 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 5\l  %270 = load i8, i8 addrspace(4)* %269, align 1, !tbaa !14\l  %271 = zext i8 %270 to i64\l  %272 = shl nuw nsw i64 %271, 40\l  %273 = or i64 %268, %272\l  %274 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 6\l  %275 = load i8, i8 addrspace(4)* %274, align 1, !tbaa !14\l  %276 = zext i8 %275 to i64\l  %277 = shl nuw nsw i64 %276, 48\l  %278 = or i64 %273, %277\l  %279 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 7\l  %280 = load i8, i8 addrspace(4)* %279, align 1, !tbaa !14\l  %281 = zext i8 %280 to i64\l  %282 = shl nuw i64 %281, 56\l  %283 = or i64 %278, %282\l  %284 = add nsw i32 %241, -8\l  %285 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 8\l  br label %299\l}"];
	Node0x533ed90 -> Node0x533ef70;
	Node0x533efc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%286:\l286:                                              \l  %287 = phi i32 [ %297, %286 ], [ 0, %244 ]\l  %288 = phi i64 [ %296, %286 ], [ 0, %244 ]\l  %289 = zext i32 %287 to i64\l  %290 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 %289\l  %291 = load i8, i8 addrspace(4)* %290, align 1, !tbaa !14\l  %292 = zext i8 %291 to i64\l  %293 = shl i32 %287, 3\l  %294 = zext i32 %293 to i64\l  %295 = shl nuw i64 %292, %294\l  %296 = or i64 %295, %288\l  %297 = add nuw nsw i32 %287, 1\l  %298 = icmp eq i32 %297, %241\l  br i1 %298, label %299, label %286\l|{<s0>T|<s1>F}}"];
	Node0x533efc0:s0 -> Node0x533ef70;
	Node0x533efc0:s1 -> Node0x533efc0;
	Node0x533ef70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%299:\l299:                                              \l  %300 = phi i8 addrspace(4)* [ %285, %246 ], [ %240, %244 ], [ %240, %286 ]\l  %301 = phi i32 [ %284, %246 ], [ 0, %244 ], [ 0, %286 ]\l  %302 = phi i64 [ %283, %246 ], [ 0, %244 ], [ %296, %286 ]\l  %303 = icmp ugt i32 %301, 7\l  br i1 %303, label %306, label %304\l|{<s0>T|<s1>F}}"];
	Node0x533ef70:s0 -> Node0x5341810;
	Node0x533ef70:s1 -> Node0x5341860;
	Node0x5341860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%304:\l304:                                              \l  %305 = icmp eq i32 %301, 0\l  br i1 %305, label %359, label %346\l|{<s0>T|<s1>F}}"];
	Node0x5341860:s0 -> Node0x53419f0;
	Node0x5341860:s1 -> Node0x5341a40;
	Node0x5341810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%306:\l306:                                              \l  %307 = load i8, i8 addrspace(4)* %300, align 1, !tbaa !14\l  %308 = zext i8 %307 to i64\l  %309 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 1\l  %310 = load i8, i8 addrspace(4)* %309, align 1, !tbaa !14\l  %311 = zext i8 %310 to i64\l  %312 = shl nuw nsw i64 %311, 8\l  %313 = or i64 %312, %308\l  %314 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 2\l  %315 = load i8, i8 addrspace(4)* %314, align 1, !tbaa !14\l  %316 = zext i8 %315 to i64\l  %317 = shl nuw nsw i64 %316, 16\l  %318 = or i64 %313, %317\l  %319 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 3\l  %320 = load i8, i8 addrspace(4)* %319, align 1, !tbaa !14\l  %321 = zext i8 %320 to i64\l  %322 = shl nuw nsw i64 %321, 24\l  %323 = or i64 %318, %322\l  %324 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 4\l  %325 = load i8, i8 addrspace(4)* %324, align 1, !tbaa !14\l  %326 = zext i8 %325 to i64\l  %327 = shl nuw nsw i64 %326, 32\l  %328 = or i64 %323, %327\l  %329 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 5\l  %330 = load i8, i8 addrspace(4)* %329, align 1, !tbaa !14\l  %331 = zext i8 %330 to i64\l  %332 = shl nuw nsw i64 %331, 40\l  %333 = or i64 %328, %332\l  %334 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 6\l  %335 = load i8, i8 addrspace(4)* %334, align 1, !tbaa !14\l  %336 = zext i8 %335 to i64\l  %337 = shl nuw nsw i64 %336, 48\l  %338 = or i64 %333, %337\l  %339 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 7\l  %340 = load i8, i8 addrspace(4)* %339, align 1, !tbaa !14\l  %341 = zext i8 %340 to i64\l  %342 = shl nuw i64 %341, 56\l  %343 = or i64 %338, %342\l  %344 = add nsw i32 %301, -8\l  %345 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 8\l  br label %359\l}"];
	Node0x5341810 -> Node0x53419f0;
	Node0x5341a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%346:\l346:                                              \l  %347 = phi i32 [ %357, %346 ], [ 0, %304 ]\l  %348 = phi i64 [ %356, %346 ], [ 0, %304 ]\l  %349 = zext i32 %347 to i64\l  %350 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 %349\l  %351 = load i8, i8 addrspace(4)* %350, align 1, !tbaa !14\l  %352 = zext i8 %351 to i64\l  %353 = shl i32 %347, 3\l  %354 = zext i32 %353 to i64\l  %355 = shl nuw i64 %352, %354\l  %356 = or i64 %355, %348\l  %357 = add nuw nsw i32 %347, 1\l  %358 = icmp eq i32 %357, %301\l  br i1 %358, label %359, label %346\l|{<s0>T|<s1>F}}"];
	Node0x5341a40:s0 -> Node0x53419f0;
	Node0x5341a40:s1 -> Node0x5341a40;
	Node0x53419f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%359:\l359:                                              \l  %360 = phi i8 addrspace(4)* [ %345, %306 ], [ %300, %304 ], [ %300, %346 ]\l  %361 = phi i32 [ %344, %306 ], [ 0, %304 ], [ 0, %346 ]\l  %362 = phi i64 [ %343, %306 ], [ 0, %304 ], [ %356, %346 ]\l  %363 = icmp ugt i32 %361, 7\l  br i1 %363, label %366, label %364\l|{<s0>T|<s1>F}}"];
	Node0x53419f0:s0 -> Node0x5344460;
	Node0x53419f0:s1 -> Node0x53444b0;
	Node0x53444b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%364:\l364:                                              \l  %365 = icmp eq i32 %361, 0\l  br i1 %365, label %419, label %406\l|{<s0>T|<s1>F}}"];
	Node0x53444b0:s0 -> Node0x5344640;
	Node0x53444b0:s1 -> Node0x5344690;
	Node0x5344460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%366:\l366:                                              \l  %367 = load i8, i8 addrspace(4)* %360, align 1, !tbaa !14\l  %368 = zext i8 %367 to i64\l  %369 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 1\l  %370 = load i8, i8 addrspace(4)* %369, align 1, !tbaa !14\l  %371 = zext i8 %370 to i64\l  %372 = shl nuw nsw i64 %371, 8\l  %373 = or i64 %372, %368\l  %374 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 2\l  %375 = load i8, i8 addrspace(4)* %374, align 1, !tbaa !14\l  %376 = zext i8 %375 to i64\l  %377 = shl nuw nsw i64 %376, 16\l  %378 = or i64 %373, %377\l  %379 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 3\l  %380 = load i8, i8 addrspace(4)* %379, align 1, !tbaa !14\l  %381 = zext i8 %380 to i64\l  %382 = shl nuw nsw i64 %381, 24\l  %383 = or i64 %378, %382\l  %384 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 4\l  %385 = load i8, i8 addrspace(4)* %384, align 1, !tbaa !14\l  %386 = zext i8 %385 to i64\l  %387 = shl nuw nsw i64 %386, 32\l  %388 = or i64 %383, %387\l  %389 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 5\l  %390 = load i8, i8 addrspace(4)* %389, align 1, !tbaa !14\l  %391 = zext i8 %390 to i64\l  %392 = shl nuw nsw i64 %391, 40\l  %393 = or i64 %388, %392\l  %394 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 6\l  %395 = load i8, i8 addrspace(4)* %394, align 1, !tbaa !14\l  %396 = zext i8 %395 to i64\l  %397 = shl nuw nsw i64 %396, 48\l  %398 = or i64 %393, %397\l  %399 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 7\l  %400 = load i8, i8 addrspace(4)* %399, align 1, !tbaa !14\l  %401 = zext i8 %400 to i64\l  %402 = shl nuw i64 %401, 56\l  %403 = or i64 %398, %402\l  %404 = add nsw i32 %361, -8\l  %405 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 8\l  br label %419\l}"];
	Node0x5344460 -> Node0x5344640;
	Node0x5344690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%406:\l406:                                              \l  %407 = phi i32 [ %417, %406 ], [ 0, %364 ]\l  %408 = phi i64 [ %416, %406 ], [ 0, %364 ]\l  %409 = zext i32 %407 to i64\l  %410 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 %409\l  %411 = load i8, i8 addrspace(4)* %410, align 1, !tbaa !14\l  %412 = zext i8 %411 to i64\l  %413 = shl i32 %407, 3\l  %414 = zext i32 %413 to i64\l  %415 = shl nuw i64 %412, %414\l  %416 = or i64 %415, %408\l  %417 = add nuw nsw i32 %407, 1\l  %418 = icmp eq i32 %417, %361\l  br i1 %418, label %419, label %406\l|{<s0>T|<s1>F}}"];
	Node0x5344690:s0 -> Node0x5344640;
	Node0x5344690:s1 -> Node0x5344690;
	Node0x5344640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%419:\l419:                                              \l  %420 = phi i8 addrspace(4)* [ %405, %366 ], [ %360, %364 ], [ %360, %406 ]\l  %421 = phi i32 [ %404, %366 ], [ 0, %364 ], [ 0, %406 ]\l  %422 = phi i64 [ %403, %366 ], [ 0, %364 ], [ %416, %406 ]\l  %423 = icmp ugt i32 %421, 7\l  br i1 %423, label %426, label %424\l|{<s0>T|<s1>F}}"];
	Node0x5344640:s0 -> Node0x5346cc0;
	Node0x5344640:s1 -> Node0x5346d10;
	Node0x5346d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%424:\l424:                                              \l  %425 = icmp eq i32 %421, 0\l  br i1 %425, label %477, label %464\l|{<s0>T|<s1>F}}"];
	Node0x5346d10:s0 -> Node0x5336970;
	Node0x5346d10:s1 -> Node0x5346ea0;
	Node0x5346cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%426:\l426:                                              \l  %427 = load i8, i8 addrspace(4)* %420, align 1, !tbaa !14\l  %428 = zext i8 %427 to i64\l  %429 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 1\l  %430 = load i8, i8 addrspace(4)* %429, align 1, !tbaa !14\l  %431 = zext i8 %430 to i64\l  %432 = shl nuw nsw i64 %431, 8\l  %433 = or i64 %432, %428\l  %434 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 2\l  %435 = load i8, i8 addrspace(4)* %434, align 1, !tbaa !14\l  %436 = zext i8 %435 to i64\l  %437 = shl nuw nsw i64 %436, 16\l  %438 = or i64 %433, %437\l  %439 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 3\l  %440 = load i8, i8 addrspace(4)* %439, align 1, !tbaa !14\l  %441 = zext i8 %440 to i64\l  %442 = shl nuw nsw i64 %441, 24\l  %443 = or i64 %438, %442\l  %444 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 4\l  %445 = load i8, i8 addrspace(4)* %444, align 1, !tbaa !14\l  %446 = zext i8 %445 to i64\l  %447 = shl nuw nsw i64 %446, 32\l  %448 = or i64 %443, %447\l  %449 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 5\l  %450 = load i8, i8 addrspace(4)* %449, align 1, !tbaa !14\l  %451 = zext i8 %450 to i64\l  %452 = shl nuw nsw i64 %451, 40\l  %453 = or i64 %448, %452\l  %454 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 6\l  %455 = load i8, i8 addrspace(4)* %454, align 1, !tbaa !14\l  %456 = zext i8 %455 to i64\l  %457 = shl nuw nsw i64 %456, 48\l  %458 = or i64 %453, %457\l  %459 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 7\l  %460 = load i8, i8 addrspace(4)* %459, align 1, !tbaa !14\l  %461 = zext i8 %460 to i64\l  %462 = shl nuw i64 %461, 56\l  %463 = or i64 %458, %462\l  br label %477\l}"];
	Node0x5346cc0 -> Node0x5336970;
	Node0x5346ea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%464:\l464:                                              \l  %465 = phi i32 [ %475, %464 ], [ 0, %424 ]\l  %466 = phi i64 [ %474, %464 ], [ 0, %424 ]\l  %467 = zext i32 %465 to i64\l  %468 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 %467\l  %469 = load i8, i8 addrspace(4)* %468, align 1, !tbaa !14\l  %470 = zext i8 %469 to i64\l  %471 = shl i32 %465, 3\l  %472 = zext i32 %471 to i64\l  %473 = shl nuw i64 %470, %472\l  %474 = or i64 %473, %466\l  %475 = add nuw nsw i32 %465, 1\l  %476 = icmp eq i32 %475, %421\l  br i1 %476, label %477, label %464\l|{<s0>T|<s1>F}}"];
	Node0x5346ea0:s0 -> Node0x5336970;
	Node0x5346ea0:s1 -> Node0x5346ea0;
	Node0x5336970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%477:\l477:                                              \l  %478 = phi i64 [ %463, %426 ], [ 0, %424 ], [ %474, %464 ]\l  %479 = shl nuw nsw i64 %60, 2\l  %480 = add nuw nsw i64 %479, 28\l  %481 = and i64 %480, 480\l  %482 = and i64 %62, -225\l  %483 = or i64 %482, %481\l  %484 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %40,\l... i64 noundef %483, i64 noundef %122, i64 noundef %182, i64 noundef %242, i64\l... noundef %302, i64 noundef %362, i64 noundef %422, i64 noundef %478) #10\l  %485 = sub i64 %52, %60\l  %486 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 %60\l  %487 = icmp eq i64 %485, 0\l  br i1 %487, label %488, label %51\l|{<s0>T|<s1>F}}"];
	Node0x5336970:s0 -> Node0x5335960;
	Node0x5336970:s1 -> Node0x5336500;
	Node0x5335960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%488:\l488:                                              \l  %489 = phi \<2 x i64\> [ %46, %43 ], [ %484, %477 ]\l  %490 = extractelement \<2 x i64\> %489, i64 0\l  %491 = and i64 %490, -225\l  %492 = or i64 %491, 32\l  %493 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %40,\l... i64 noundef %492, i64 noundef %30, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %494 = extractelement \<2 x i64\> %493, i64 0\l  %495 = and i64 %494, -227\l  %496 = or i64 %495, 34\l  %497 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %40,\l... i64 noundef %496, i64 noundef %34, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %498 = add nsw i32 %27, 1\l  br label %499\l}"];
	Node0x5335960 -> Node0x53329f0;
	Node0x53329f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%499:\l499:                                              \l  %500 = phi i32 [ 0, %488 ], [ %32, %26 ]\l  %501 = phi i32 [ %498, %488 ], [ %27, %26 ]\l  %502 = add nuw i64 %28, 1\l  %503 = icmp eq i64 %502, %2\l  br i1 %503, label %22, label %26, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x53329f0:s0 -> Node0x5331f60;
	Node0x53329f0:s1 -> Node0x5332900;
	Node0x53322a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%504:\l504:                                              \l  store i32 %12, i32 addrspace(1)* %0, align 4, !tbaa !6\l  br label %505\l}"];
	Node0x53322a0 -> Node0x5332330;
	Node0x5332330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%505:\l505:                                              \l  ret void\l}"];
}
