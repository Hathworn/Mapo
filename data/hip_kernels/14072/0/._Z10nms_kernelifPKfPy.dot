digraph "CFG for '_Z10nms_kernelifPKfPy' function" {
	label="CFG for '_Z10nms_kernelifPKfPy' function";

	Node0x5944520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = shl nsw i32 %5, 6\l  %8 = sub nsw i32 %0, %7\l  %9 = tail call i32 @llvm.smin.i32(i32 %8, i32 64)\l  %10 = shl nsw i32 %6, 6\l  %11 = sub nsw i32 %0, %10\l  %12 = tail call i32 @llvm.smin.i32(i32 %11, i32 64)\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = icmp ult i32 %13, %12\l  br i1 %14, label %15, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5944520:s0 -> Node0x59463c0;
	Node0x5944520:s1 -> Node0x5946450;
	Node0x59463c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%15:\l15:                                               \l  %16 = add i32 %10, %13\l  %17 = mul i32 %16, 5\l  %18 = zext i32 %17 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %2, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %21 = mul nuw nsw i32 %13, 5\l  %22 = getelementptr inbounds [320 x float], [320 x float] addrspace(3)*\l... @_ZZ10nms_kernelifPKfPyE11block_boxes, i32 0, i32 %21\l  store float %20, float addrspace(3)* %22, align 4, !tbaa !5\l  %23 = add i32 %17, 1\l  %24 = zext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %2, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %27 = add nuw nsw i32 %21, 1\l  %28 = getelementptr inbounds [320 x float], [320 x float] addrspace(3)*\l... @_ZZ10nms_kernelifPKfPyE11block_boxes, i32 0, i32 %27\l  store float %26, float addrspace(3)* %28, align 4, !tbaa !5\l  %29 = add i32 %17, 2\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %33 = add nuw nsw i32 %21, 2\l  %34 = getelementptr inbounds [320 x float], [320 x float] addrspace(3)*\l... @_ZZ10nms_kernelifPKfPyE11block_boxes, i32 0, i32 %33\l  store float %32, float addrspace(3)* %34, align 4, !tbaa !5\l  %35 = add i32 %17, 3\l  %36 = zext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %39 = add nuw nsw i32 %21, 3\l  %40 = getelementptr inbounds [320 x float], [320 x float] addrspace(3)*\l... @_ZZ10nms_kernelifPKfPyE11block_boxes, i32 0, i32 %39\l  store float %38, float addrspace(3)* %40, align 4, !tbaa !5\l  %41 = add i32 %17, 4\l  %42 = zext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %2, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %45 = add nuw nsw i32 %21, 4\l  %46 = getelementptr inbounds [320 x float], [320 x float] addrspace(3)*\l... @_ZZ10nms_kernelifPKfPyE11block_boxes, i32 0, i32 %45\l  store float %44, float addrspace(3)* %46, align 4, !tbaa !5\l  br label %47\l}"];
	Node0x59463c0 -> Node0x5946450;
	Node0x5946450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%47:\l47:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %48 = icmp ult i32 %13, %9\l  br i1 %48, label %49, label %120\l|{<s0>T|<s1>F}}"];
	Node0x5946450:s0 -> Node0x5949020;
	Node0x5946450:s1 -> Node0x59490b0;
	Node0x5949020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%49:\l49:                                               \l  %50 = add i32 %7, %13\l  %51 = mul nsw i32 %50, 5\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %2, i64 %52\l  %54 = icmp eq i32 %5, %6\l  %55 = add nuw nsw i32 %13, 1\l  %56 = select i1 %54, i32 %55, i32 0\l  %57 = icmp slt i32 %56, %12\l  br i1 %57, label %58, label %109\l|{<s0>T|<s1>F}}"];
	Node0x5949020:s0 -> Node0x5949680;
	Node0x5949020:s1 -> Node0x59496d0;
	Node0x5949680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%58:\l58:                                               \l  %59 = load float, float addrspace(1)* %53, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %60 = getelementptr inbounds float, float addrspace(1)* %53, i64 2\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %62 = getelementptr inbounds float, float addrspace(1)* %53, i64 1\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %64 = getelementptr inbounds float, float addrspace(1)* %53, i64 3\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %66 = fsub contract float %61, %59\l  %67 = fadd contract float %66, 1.000000e+00\l  %68 = fsub contract float %65, %63\l  %69 = fadd contract float %68, 1.000000e+00\l  %70 = fmul contract float %67, %69\l  br label %71\l}"];
	Node0x5949680 -> Node0x59482e0;
	Node0x59482e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = phi i32 [ %56, %58 ], [ %107, %71 ]\l  %73 = phi i64 [ 0, %58 ], [ %106, %71 ]\l  %74 = mul nuw nsw i32 %72, 5\l  %75 = getelementptr inbounds [320 x float], [320 x float] addrspace(3)*\l... @_ZZ10nms_kernelifPKfPyE11block_boxes, i32 0, i32 %74\l  %76 = load float, float addrspace(3)* %75, align 4, !tbaa !5\l  %77 = tail call float @llvm.maxnum.f32(float %59, float %76)\l  %78 = getelementptr inbounds float, float addrspace(3)* %75, i32 2\l  %79 = load float, float addrspace(3)* %78, align 4, !tbaa !5\l  %80 = tail call float @llvm.minnum.f32(float %61, float %79)\l  %81 = getelementptr inbounds float, float addrspace(3)* %75, i32 1\l  %82 = load float, float addrspace(3)* %81, align 4, !tbaa !5\l  %83 = tail call float @llvm.maxnum.f32(float %63, float %82)\l  %84 = getelementptr inbounds float, float addrspace(3)* %75, i32 3\l  %85 = load float, float addrspace(3)* %84, align 4, !tbaa !5\l  %86 = tail call float @llvm.minnum.f32(float %65, float %85)\l  %87 = fsub contract float %80, %77\l  %88 = fadd contract float %87, 1.000000e+00\l  %89 = tail call float @llvm.maxnum.f32(float %88, float 0.000000e+00)\l  %90 = fsub contract float %86, %83\l  %91 = fadd contract float %90, 1.000000e+00\l  %92 = tail call float @llvm.maxnum.f32(float %91, float 0.000000e+00)\l  %93 = fmul contract float %89, %92\l  %94 = fsub contract float %79, %76\l  %95 = fadd contract float %94, 1.000000e+00\l  %96 = fsub contract float %85, %82\l  %97 = fadd contract float %96, 1.000000e+00\l  %98 = fmul contract float %95, %97\l  %99 = fadd contract float %70, %98\l  %100 = fsub contract float %99, %93\l  %101 = fdiv contract float %93, %100\l  %102 = fcmp contract ogt float %101, %1\l  %103 = zext i32 %72 to i64\l  %104 = shl nuw i64 1, %103\l  %105 = select i1 %102, i64 %104, i64 0\l  %106 = or i64 %105, %73\l  %107 = add nuw nsw i32 %72, 1\l  %108 = icmp slt i32 %107, %12\l  br i1 %108, label %71, label %109, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x59482e0:s0 -> Node0x59482e0;
	Node0x59482e0:s1 -> Node0x59496d0;
	Node0x59496d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%109:\l109:                                              \l  %110 = phi i64 [ 0, %49 ], [ %106, %71 ]\l  %111 = sdiv i32 %0, 64\l  %112 = and i32 %0, -2147483585\l  %113 = icmp sgt i32 %112, 0\l  %114 = zext i1 %113 to i32\l  %115 = add nsw i32 %111, %114\l  %116 = mul nsw i32 %115, %50\l  %117 = add nsw i32 %116, %6\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds i64, i64 addrspace(1)* %3, i64 %118\l  store i64 %110, i64 addrspace(1)* %119, align 8, !tbaa !12\l  br label %120\l}"];
	Node0x59496d0 -> Node0x59490b0;
	Node0x59490b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%120:\l120:                                              \l  ret void\l}"];
}
