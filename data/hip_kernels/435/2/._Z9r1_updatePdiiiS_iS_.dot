digraph "CFG for '_Z9r1_updatePdiiiS_iS_' function" {
	label="CFG for '_Z9r1_updatePdiiiS_iS_' function";

	Node0x4842c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = icmp slt i32 %16, %1\l  %26 = icmp slt i32 %24, %1\l  %27 = select i1 %25, i1 %26, i1 false\l  %28 = icmp sgt i32 %2, 1\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %153\l|{<s0>T|<s1>F}}"];
	Node0x4842c80:s0 -> Node0x4846840;
	Node0x4842c80:s1 -> Node0x48468d0;
	Node0x4846840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%30:\l30:                                               \l  %31 = mul nsw i32 %16, %3\l  %32 = mul nsw i32 %24, %5\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %4, i64 %33\l  %35 = add i32 %2, -2\l  %36 = add i32 %2, -1\l  %37 = and i32 %36, 7\l  %38 = icmp ult i32 %35, 7\l  br i1 %38, label %134, label %39\l|{<s0>T|<s1>F}}"];
	Node0x4846840:s0 -> Node0x4847010;
	Node0x4846840:s1 -> Node0x4847060;
	Node0x4847060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%39:\l39:                                               \l  %40 = and i32 %36, -8\l  br label %41\l}"];
	Node0x4847060 -> Node0x4847260;
	Node0x4847260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%41:\l41:                                               \l  %42 = phi i32 [ 0, %39 ], [ %121, %41 ]\l  %43 = phi i32 [ 0, %39 ], [ %132, %41 ]\l  %44 = or i32 %42, 1\l  %45 = add i32 %44, %31\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds double, double addrspace(1)* %0, i64 %46\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !7\l  %49 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %50 = zext i32 %44 to i64\l  %51 = getelementptr inbounds double, double addrspace(1)* %6, i64 %50\l  %52 = load double, double addrspace(1)* %51, align 8, !tbaa !7\l  %53 = fmul contract double %49, %52\l  %54 = fsub contract double %48, %53\l  store double %54, double addrspace(1)* %47, align 8, !tbaa !7\l  %55 = or i32 %42, 2\l  %56 = add i32 %55, %31\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds double, double addrspace(1)* %0, i64 %57\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !7\l  %60 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %61 = zext i32 %55 to i64\l  %62 = getelementptr inbounds double, double addrspace(1)* %6, i64 %61\l  %63 = load double, double addrspace(1)* %62, align 8, !tbaa !7\l  %64 = fmul contract double %60, %63\l  %65 = fsub contract double %59, %64\l  store double %65, double addrspace(1)* %58, align 8, !tbaa !7\l  %66 = or i32 %42, 3\l  %67 = add i32 %66, %31\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds double, double addrspace(1)* %0, i64 %68\l  %70 = load double, double addrspace(1)* %69, align 8, !tbaa !7\l  %71 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %72 = zext i32 %66 to i64\l  %73 = getelementptr inbounds double, double addrspace(1)* %6, i64 %72\l  %74 = load double, double addrspace(1)* %73, align 8, !tbaa !7\l  %75 = fmul contract double %71, %74\l  %76 = fsub contract double %70, %75\l  store double %76, double addrspace(1)* %69, align 8, !tbaa !7\l  %77 = or i32 %42, 4\l  %78 = add i32 %77, %31\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds double, double addrspace(1)* %0, i64 %79\l  %81 = load double, double addrspace(1)* %80, align 8, !tbaa !7\l  %82 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %83 = zext i32 %77 to i64\l  %84 = getelementptr inbounds double, double addrspace(1)* %6, i64 %83\l  %85 = load double, double addrspace(1)* %84, align 8, !tbaa !7\l  %86 = fmul contract double %82, %85\l  %87 = fsub contract double %81, %86\l  store double %87, double addrspace(1)* %80, align 8, !tbaa !7\l  %88 = or i32 %42, 5\l  %89 = add i32 %88, %31\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds double, double addrspace(1)* %0, i64 %90\l  %92 = load double, double addrspace(1)* %91, align 8, !tbaa !7\l  %93 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %94 = zext i32 %88 to i64\l  %95 = getelementptr inbounds double, double addrspace(1)* %6, i64 %94\l  %96 = load double, double addrspace(1)* %95, align 8, !tbaa !7\l  %97 = fmul contract double %93, %96\l  %98 = fsub contract double %92, %97\l  store double %98, double addrspace(1)* %91, align 8, !tbaa !7\l  %99 = or i32 %42, 6\l  %100 = add i32 %99, %31\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds double, double addrspace(1)* %0, i64 %101\l  %103 = load double, double addrspace(1)* %102, align 8, !tbaa !7\l  %104 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %105 = zext i32 %99 to i64\l  %106 = getelementptr inbounds double, double addrspace(1)* %6, i64 %105\l  %107 = load double, double addrspace(1)* %106, align 8, !tbaa !7\l  %108 = fmul contract double %104, %107\l  %109 = fsub contract double %103, %108\l  store double %109, double addrspace(1)* %102, align 8, !tbaa !7\l  %110 = or i32 %42, 7\l  %111 = add i32 %110, %31\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds double, double addrspace(1)* %0, i64 %112\l  %114 = load double, double addrspace(1)* %113, align 8, !tbaa !7\l  %115 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %116 = zext i32 %110 to i64\l  %117 = getelementptr inbounds double, double addrspace(1)* %6, i64 %116\l  %118 = load double, double addrspace(1)* %117, align 8, !tbaa !7\l  %119 = fmul contract double %115, %118\l  %120 = fsub contract double %114, %119\l  store double %120, double addrspace(1)* %113, align 8, !tbaa !7\l  %121 = add nuw nsw i32 %42, 8\l  %122 = add i32 %121, %31\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds double, double addrspace(1)* %0, i64 %123\l  %125 = load double, double addrspace(1)* %124, align 8, !tbaa !7\l  %126 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %127 = zext i32 %121 to i64\l  %128 = getelementptr inbounds double, double addrspace(1)* %6, i64 %127\l  %129 = load double, double addrspace(1)* %128, align 8, !tbaa !7\l  %130 = fmul contract double %126, %129\l  %131 = fsub contract double %125, %130\l  store double %131, double addrspace(1)* %124, align 8, !tbaa !7\l  %132 = add i32 %43, 8\l  %133 = icmp eq i32 %132, %40\l  br i1 %133, label %134, label %41, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4847260:s0 -> Node0x4847010;
	Node0x4847260:s1 -> Node0x4847260;
	Node0x4847010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%134:\l134:                                              \l  %135 = phi i32 [ 0, %30 ], [ %121, %41 ]\l  %136 = icmp eq i32 %37, 0\l  br i1 %136, label %153, label %137\l|{<s0>T|<s1>F}}"];
	Node0x4847010:s0 -> Node0x48468d0;
	Node0x4847010:s1 -> Node0x484b9b0;
	Node0x484b9b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%137:\l137:                                              \l  %138 = phi i32 [ %140, %137 ], [ %135, %134 ]\l  %139 = phi i32 [ %151, %137 ], [ 0, %134 ]\l  %140 = add nuw nsw i32 %138, 1\l  %141 = add i32 %140, %31\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds double, double addrspace(1)* %0, i64 %142\l  %144 = load double, double addrspace(1)* %143, align 8, !tbaa !7\l  %145 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %146 = zext i32 %140 to i64\l  %147 = getelementptr inbounds double, double addrspace(1)* %6, i64 %146\l  %148 = load double, double addrspace(1)* %147, align 8, !tbaa !7\l  %149 = fmul contract double %145, %148\l  %150 = fsub contract double %144, %149\l  store double %150, double addrspace(1)* %143, align 8, !tbaa !7\l  %151 = add i32 %139, 1\l  %152 = icmp eq i32 %151, %37\l  br i1 %152, label %153, label %137, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x484b9b0:s0 -> Node0x48468d0;
	Node0x484b9b0:s1 -> Node0x484b9b0;
	Node0x48468d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%153:\l153:                                              \l  ret void\l}"];
}
