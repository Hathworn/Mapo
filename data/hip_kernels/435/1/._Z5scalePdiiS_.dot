digraph "CFG for '_Z5scalePdiiS_' function" {
	label="CFG for '_Z5scalePdiiS_' function";

	Node0x60b9600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %1\l  br i1 %14, label %15, label %44\l|{<s0>T|<s1>F}}"];
	Node0x60b9600:s0 -> Node0x60bb520;
	Node0x60b9600:s1 -> Node0x60bb5b0;
	Node0x60bb520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = mul nsw i32 %13, %2\l  %17 = sext i32 %16 to i64\l  %18 = getelementptr inbounds double, double addrspace(1)* %0, i64 %17\l  %19 = load double, double addrspace(1)* %18, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %20 = load double, double addrspace(1)* %3, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %21 = fcmp olt double %20, 0x1000000000000000\l  %22 = select i1 %21, double 0x4FF0000000000000, double 1.000000e+00\l  %23 = fmul double %20, %22\l  %24 = tail call double @llvm.amdgcn.rsq.f64(double %23)\l  %25 = fmul double %23, %24\l  %26 = fmul double %24, 5.000000e-01\l  %27 = fneg double %26\l  %28 = tail call double @llvm.fma.f64(double %27, double %25, double\l... 5.000000e-01)\l  %29 = tail call double @llvm.fma.f64(double %26, double %28, double %26)\l  %30 = tail call double @llvm.fma.f64(double %25, double %28, double %25)\l  %31 = fneg double %30\l  %32 = tail call double @llvm.fma.f64(double %31, double %30, double %23)\l  %33 = tail call double @llvm.fma.f64(double %32, double %29, double %30)\l  %34 = fneg double %33\l  %35 = tail call double @llvm.fma.f64(double %34, double %33, double %23)\l  %36 = tail call double @llvm.fma.f64(double %35, double %29, double %33)\l  %37 = select i1 %21, double 0x37F0000000000000, double 1.000000e+00\l  %38 = fmul double %37, %36\l  %39 = fcmp oeq double %23, 0.000000e+00\l  %40 = fcmp oeq double %23, 0x7FF0000000000000\l  %41 = or i1 %39, %40\l  %42 = select i1 %41, double %23, double %38\l  %43 = fdiv contract double %19, %42\l  store double %43, double addrspace(1)* %18, align 8, !tbaa !7\l  br label %44\l}"];
	Node0x60bb520 -> Node0x60bb5b0;
	Node0x60bb5b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  ret void\l}"];
}
