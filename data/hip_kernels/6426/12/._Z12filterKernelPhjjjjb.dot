digraph "CFG for '_Z12filterKernelPhjjjjb' function" {
	label="CFG for '_Z12filterKernelPhjjjjb' function";

	Node0x519e770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp ult i32 %15, %1\l  br i1 %16, label %17, label %155\l|{<s0>T|<s1>F}}"];
	Node0x519e770:s0 -> Node0x519eb80;
	Node0x519e770:s1 -> Node0x51a0720;
	Node0x519eb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%17:\l17:                                               \l  %18 = mul i32 %15, %3\l  %19 = zext i32 %18 to i64\l  %20 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %19\l  %21 = mul i32 %3, %1\l  %22 = mul i32 %21, %4\l  %23 = zext i32 %22 to i64\l  %24 = getelementptr inbounds i8, i8 addrspace(1)* %20, i64 %23\l  %25 = load i8, i8 addrspace(1)* %24, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %26 = zext i8 %25 to i32\l  br i1 %5, label %27, label %34\l|{<s0>T|<s1>F}}"];
	Node0x519eb80:s0 -> Node0x51a14a0;
	Node0x519eb80:s1 -> Node0x51a1530;
	Node0x51a14a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%27:\l27:                                               \l  %28 = add i32 %2, -1\l  %29 = mul i32 %22, %28\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds i8, i8 addrspace(1)* %20, i64 %30\l  %32 = load i8, i8 addrspace(1)* %31, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %33 = zext i8 %32 to i32\l  br label %34\l}"];
	Node0x51a14a0 -> Node0x51a1530;
	Node0x51a1530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%34:\l34:                                               \l  %35 = phi i32 [ %33, %27 ], [ %26, %17 ]\l  %36 = load i8, i8 addrspace(1)* %20, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %37 = zext i8 %36 to i32\l  %38 = shl nuw nsw i32 %37, 1\l  %39 = add nuw nsw i32 %35, %26\l  %40 = add nuw nsw i32 %39, %38\l  %41 = lshr i32 %40, 2\l  %42 = trunc i32 %41 to i8\l  store i8 %42, i8 addrspace(1)* %20, align 1, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %43 = icmp ugt i32 %2, 2\l  br i1 %43, label %44, label %155\l|{<s0>T|<s1>F}}"];
	Node0x51a1530:s0 -> Node0x51a29d0;
	Node0x51a1530:s1 -> Node0x51a0720;
	Node0x51a29d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%44:\l44:                                               \l  %45 = add i32 %2, -3\l  %46 = lshr i32 %45, 1\l  %47 = add nuw i32 %46, 1\l  %48 = and i32 %47, 3\l  %49 = icmp ult i32 %45, 6\l  br i1 %49, label %128, label %50\l|{<s0>T|<s1>F}}"];
	Node0x51a29d0:s0 -> Node0x51a2e40;
	Node0x51a29d0:s1 -> Node0x51a2e90;
	Node0x51a2e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%50:\l50:                                               \l  %51 = and i32 %47, -4\l  br label %52\l}"];
	Node0x51a2e90 -> Node0x51a3090;
	Node0x51a3090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%52:\l52:                                               \l  %53 = phi i32 [ %26, %50 ], [ %112, %52 ]\l  %54 = phi i32 [ 2, %50 ], [ %123, %52 ]\l  %55 = phi i32 [ 0, %50 ], [ %124, %52 ]\l  %56 = or i32 %54, 1\l  %57 = mul i32 %56, %22\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds i8, i8 addrspace(1)* %20, i64 %58\l  %60 = load i8, i8 addrspace(1)* %59, align 1, !tbaa !7\l  %61 = zext i8 %60 to i32\l  %62 = mul i32 %54, %22\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds i8, i8 addrspace(1)* %20, i64 %63\l  %65 = load i8, i8 addrspace(1)* %64, align 1, !tbaa !7\l  %66 = zext i8 %65 to i32\l  %67 = shl nuw nsw i32 %66, 1\l  %68 = add nuw nsw i32 %53, %61\l  %69 = add nuw nsw i32 %68, %67\l  %70 = lshr i32 %69, 2\l  %71 = trunc i32 %70 to i8\l  store i8 %71, i8 addrspace(1)* %64, align 1, !tbaa !7\l  %72 = add nuw nsw i32 %54, 2\l  %73 = or i32 %72, 1\l  %74 = mul i32 %73, %22\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds i8, i8 addrspace(1)* %20, i64 %75\l  %77 = load i8, i8 addrspace(1)* %76, align 1, !tbaa !7\l  %78 = zext i8 %77 to i32\l  %79 = mul i32 %72, %22\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds i8, i8 addrspace(1)* %20, i64 %80\l  %82 = load i8, i8 addrspace(1)* %81, align 1, !tbaa !7\l  %83 = zext i8 %82 to i32\l  %84 = shl nuw nsw i32 %83, 1\l  %85 = add nuw nsw i32 %61, %78\l  %86 = add nuw nsw i32 %85, %84\l  %87 = lshr i32 %86, 2\l  %88 = trunc i32 %87 to i8\l  store i8 %88, i8 addrspace(1)* %81, align 1, !tbaa !7\l  %89 = add nuw nsw i32 %54, 4\l  %90 = or i32 %89, 1\l  %91 = mul i32 %90, %22\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds i8, i8 addrspace(1)* %20, i64 %92\l  %94 = load i8, i8 addrspace(1)* %93, align 1, !tbaa !7\l  %95 = zext i8 %94 to i32\l  %96 = mul i32 %89, %22\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds i8, i8 addrspace(1)* %20, i64 %97\l  %99 = load i8, i8 addrspace(1)* %98, align 1, !tbaa !7\l  %100 = zext i8 %99 to i32\l  %101 = shl nuw nsw i32 %100, 1\l  %102 = add nuw nsw i32 %78, %95\l  %103 = add nuw nsw i32 %102, %101\l  %104 = lshr i32 %103, 2\l  %105 = trunc i32 %104 to i8\l  store i8 %105, i8 addrspace(1)* %98, align 1, !tbaa !7\l  %106 = add nuw i32 %54, 6\l  %107 = or i32 %106, 1\l  %108 = mul i32 %107, %22\l  %109 = zext i32 %108 to i64\l  %110 = getelementptr inbounds i8, i8 addrspace(1)* %20, i64 %109\l  %111 = load i8, i8 addrspace(1)* %110, align 1, !tbaa !7\l  %112 = zext i8 %111 to i32\l  %113 = mul i32 %106, %22\l  %114 = zext i32 %113 to i64\l  %115 = getelementptr inbounds i8, i8 addrspace(1)* %20, i64 %114\l  %116 = load i8, i8 addrspace(1)* %115, align 1, !tbaa !7\l  %117 = zext i8 %116 to i32\l  %118 = shl nuw nsw i32 %117, 1\l  %119 = add nuw nsw i32 %95, %112\l  %120 = add nuw nsw i32 %119, %118\l  %121 = lshr i32 %120, 2\l  %122 = trunc i32 %121 to i8\l  store i8 %122, i8 addrspace(1)* %115, align 1, !tbaa !7\l  %123 = add nuw i32 %54, 8\l  %124 = add i32 %55, 4\l  %125 = icmp eq i32 %124, %51\l  br i1 %125, label %126, label %52, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x51a3090:s0 -> Node0x51a5db0;
	Node0x51a3090:s1 -> Node0x51a3090;
	Node0x51a5db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%126:\l126:                                              \l  %127 = zext i8 %111 to i32\l  br label %128\l}"];
	Node0x51a5db0 -> Node0x51a2e40;
	Node0x51a2e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%128:\l128:                                              \l  %129 = phi i32 [ %26, %44 ], [ %127, %126 ]\l  %130 = phi i32 [ 2, %44 ], [ %123, %126 ]\l  %131 = icmp eq i32 %48, 0\l  br i1 %131, label %155, label %132\l|{<s0>T|<s1>F}}"];
	Node0x51a2e40:s0 -> Node0x51a0720;
	Node0x51a2e40:s1 -> Node0x51a3b20;
	Node0x51a3b20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%132:\l132:                                              \l  %133 = phi i32 [ %141, %132 ], [ %129, %128 ]\l  %134 = phi i32 [ %152, %132 ], [ %130, %128 ]\l  %135 = phi i32 [ %153, %132 ], [ 0, %128 ]\l  %136 = or i32 %134, 1\l  %137 = mul i32 %136, %22\l  %138 = zext i32 %137 to i64\l  %139 = getelementptr inbounds i8, i8 addrspace(1)* %20, i64 %138\l  %140 = load i8, i8 addrspace(1)* %139, align 1, !tbaa !7\l  %141 = zext i8 %140 to i32\l  %142 = mul i32 %134, %22\l  %143 = zext i32 %142 to i64\l  %144 = getelementptr inbounds i8, i8 addrspace(1)* %20, i64 %143\l  %145 = load i8, i8 addrspace(1)* %144, align 1, !tbaa !7\l  %146 = zext i8 %145 to i32\l  %147 = shl nuw nsw i32 %146, 1\l  %148 = add nuw nsw i32 %133, %141\l  %149 = add nuw nsw i32 %148, %147\l  %150 = lshr i32 %149, 2\l  %151 = trunc i32 %150 to i8\l  store i8 %151, i8 addrspace(1)* %144, align 1, !tbaa !7\l  %152 = add nuw i32 %134, 2\l  %153 = add i32 %135, 1\l  %154 = icmp eq i32 %153, %48\l  br i1 %154, label %155, label %132, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x51a3b20:s0 -> Node0x51a0720;
	Node0x51a3b20:s1 -> Node0x51a3b20;
	Node0x51a0720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%155:\l155:                                              \l  ret void\l}"];
}
