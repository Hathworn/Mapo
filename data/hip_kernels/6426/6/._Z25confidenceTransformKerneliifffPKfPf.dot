digraph "CFG for '_Z25confidenceTransformKerneliifffPKfPf' function" {
	label="CFG for '_Z25confidenceTransformKerneliifffPKfPf' function";

	Node0x5896ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = icmp ult i32 %16, %0\l  %26 = icmp ult i32 %24, %1\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %230\l|{<s0>T|<s1>F}}"];
	Node0x5896ce0:s0 -> Node0x589a770;
	Node0x5896ce0:s1 -> Node0x589a800;
	Node0x589a770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%28:\l28:                                               \l  %29 = mul i32 %24, %0\l  %30 = add i32 %29, %16\l  %31 = zext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %5, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = fcmp contract olt float %33, %2\l  br i1 %34, label %227, label %35\l|{<s0>T|<s1>F}}"];
	Node0x589a770:s0 -> Node0x589af50;
	Node0x589a770:s1 -> Node0x589afe0;
	Node0x589afe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%35:\l35:                                               \l  %36 = tail call float @llvm.fabs.f32(float %33)\l  %37 = tail call float @llvm.amdgcn.frexp.mant.f32(float %36)\l  %38 = fcmp olt float %37, 0x3FE5555560000000\l  %39 = zext i1 %38 to i32\l  %40 = tail call float @llvm.amdgcn.ldexp.f32(float %37, i32 %39)\l  %41 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %36)\l  %42 = sub nsw i32 %41, %39\l  %43 = fadd float %40, -1.000000e+00\l  %44 = fadd float %40, 1.000000e+00\l  %45 = fadd float %44, -1.000000e+00\l  %46 = fsub float %40, %45\l  %47 = tail call float @llvm.amdgcn.rcp.f32(float %44)\l  %48 = fmul float %43, %47\l  %49 = fmul float %44, %48\l  %50 = fneg float %49\l  %51 = tail call float @llvm.fma.f32(float %48, float %44, float %50)\l  %52 = tail call float @llvm.fma.f32(float %48, float %46, float %51)\l  %53 = fadd float %49, %52\l  %54 = fsub float %53, %49\l  %55 = fsub float %52, %54\l  %56 = fsub float %43, %53\l  %57 = fsub float %43, %56\l  %58 = fsub float %57, %53\l  %59 = fsub float %58, %55\l  %60 = fadd float %56, %59\l  %61 = fmul float %47, %60\l  %62 = fadd float %48, %61\l  %63 = fsub float %62, %48\l  %64 = fsub float %61, %63\l  %65 = fmul float %62, %62\l  %66 = fneg float %65\l  %67 = tail call float @llvm.fma.f32(float %62, float %62, float %66)\l  %68 = fmul float %64, 2.000000e+00\l  %69 = tail call float @llvm.fma.f32(float %62, float %68, float %67)\l  %70 = fadd float %65, %69\l  %71 = fsub float %70, %65\l  %72 = fsub float %69, %71\l  %73 = tail call float @llvm.fmuladd.f32(float %70, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %74 = tail call float @llvm.fmuladd.f32(float %70, float %73, float\l... 0x3FD999BDE0000000)\l  %75 = sitofp i32 %42 to float\l  %76 = fmul float %75, 0x3FE62E4300000000\l  %77 = fneg float %76\l  %78 = tail call float @llvm.fma.f32(float %75, float 0x3FE62E4300000000,\l... float %77)\l  %79 = tail call float @llvm.fma.f32(float %75, float 0xBE205C6100000000,\l... float %78)\l  %80 = fadd float %76, %79\l  %81 = fsub float %80, %76\l  %82 = fsub float %79, %81\l  %83 = tail call float @llvm.amdgcn.ldexp.f32(float %62, i32 1)\l  %84 = fmul float %62, %70\l  %85 = fneg float %84\l  %86 = tail call float @llvm.fma.f32(float %70, float %62, float %85)\l  %87 = tail call float @llvm.fma.f32(float %70, float %64, float %86)\l  %88 = tail call float @llvm.fma.f32(float %72, float %62, float %87)\l  %89 = fadd float %84, %88\l  %90 = fsub float %89, %84\l  %91 = fsub float %88, %90\l  %92 = fmul float %70, %74\l  %93 = fneg float %92\l  %94 = tail call float @llvm.fma.f32(float %70, float %74, float %93)\l  %95 = tail call float @llvm.fma.f32(float %72, float %74, float %94)\l  %96 = fadd float %92, %95\l  %97 = fsub float %96, %92\l  %98 = fsub float %95, %97\l  %99 = fadd float %96, 0x3FE5555540000000\l  %100 = fadd float %99, 0xBFE5555540000000\l  %101 = fsub float %96, %100\l  %102 = fadd float %98, 0x3E2E720200000000\l  %103 = fadd float %102, %101\l  %104 = fadd float %99, %103\l  %105 = fsub float %104, %99\l  %106 = fsub float %103, %105\l  %107 = fmul float %89, %104\l  %108 = fneg float %107\l  %109 = tail call float @llvm.fma.f32(float %89, float %104, float %108)\l  %110 = tail call float @llvm.fma.f32(float %89, float %106, float %109)\l  %111 = tail call float @llvm.fma.f32(float %91, float %104, float %110)\l  %112 = tail call float @llvm.amdgcn.ldexp.f32(float %64, i32 1)\l  %113 = fadd float %107, %111\l  %114 = fsub float %113, %107\l  %115 = fsub float %111, %114\l  %116 = fadd float %83, %113\l  %117 = fsub float %116, %83\l  %118 = fsub float %113, %117\l  %119 = fadd float %112, %115\l  %120 = fadd float %119, %118\l  %121 = fadd float %116, %120\l  %122 = fsub float %121, %116\l  %123 = fsub float %120, %122\l  %124 = fadd float %80, %121\l  %125 = fsub float %124, %80\l  %126 = fsub float %124, %125\l  %127 = fsub float %80, %126\l  %128 = fsub float %121, %125\l  %129 = fadd float %128, %127\l  %130 = fadd float %82, %123\l  %131 = fsub float %130, %82\l  %132 = fsub float %130, %131\l  %133 = fsub float %82, %132\l  %134 = fsub float %123, %131\l  %135 = fadd float %134, %133\l  %136 = fadd float %130, %129\l  %137 = fadd float %124, %136\l  %138 = fsub float %137, %124\l  %139 = fsub float %136, %138\l  %140 = fadd float %135, %139\l  %141 = fadd float %137, %140\l  %142 = fsub float %141, %137\l  %143 = fsub float %140, %142\l  %144 = fmul float %141, %3\l  %145 = fneg float %144\l  %146 = tail call float @llvm.fma.f32(float %3, float %141, float %145)\l  %147 = tail call float @llvm.fma.f32(float %3, float %143, float %146)\l  %148 = fadd float %144, %147\l  %149 = fsub float %148, %144\l  %150 = fsub float %147, %149\l  %151 = tail call float @llvm.fabs.f32(float %144) #3\l  %152 = fcmp oeq float %151, 0x7FF0000000000000\l  %153 = select i1 %152, float %144, float %148\l  %154 = tail call float @llvm.fabs.f32(float %153) #3\l  %155 = fcmp oeq float %154, 0x7FF0000000000000\l  %156 = select i1 %155, float 0.000000e+00, float %150\l  %157 = fcmp oeq float %153, 0x40562E4300000000\l  %158 = select i1 %157, float 0x3EE0000000000000, float 0.000000e+00\l  %159 = fsub float %153, %158\l  %160 = fadd float %158, %156\l  %161 = fmul float %159, 0x3FF7154760000000\l  %162 = tail call float @llvm.rint.f32(float %161)\l  %163 = fcmp ogt float %159, 0x40562E4300000000\l  %164 = fcmp olt float %159, 0xC059D1DA00000000\l  %165 = fneg float %161\l  %166 = tail call float @llvm.fma.f32(float %159, float 0x3FF7154760000000,\l... float %165)\l  %167 = tail call float @llvm.fma.f32(float %159, float 0x3E54AE0BE0000000,\l... float %166)\l  %168 = fsub float %161, %162\l  %169 = fadd float %167, %168\l  %170 = tail call float @llvm.exp2.f32(float %169)\l  %171 = fptosi float %162 to i32\l  %172 = tail call float @llvm.amdgcn.ldexp.f32(float %170, i32 %171)\l  %173 = select i1 %164, float 0.000000e+00, float %172\l  %174 = select i1 %163, float 0x7FF0000000000000, float %173\l  %175 = tail call float @llvm.fma.f32(float %174, float %160, float %174)\l  %176 = tail call float @llvm.fabs.f32(float %174) #3\l  %177 = fcmp oeq float %176, 0x7FF0000000000000\l  %178 = select i1 %177, float %174, float %175\l  %179 = tail call float @llvm.fabs.f32(float %3)\l  %180 = tail call float @llvm.trunc.f32(float %179)\l  %181 = fcmp oeq float %179, %180\l  %182 = zext i1 %181 to i32\l  %183 = fmul float %180, 5.000000e-01\l  %184 = tail call float @llvm.amdgcn.fract.f32(float %183)\l  %185 = tail call i1 @llvm.amdgcn.class.f32(float %183, i32 516)\l  %186 = select i1 %185, float 0.000000e+00, float %184\l  %187 = fcmp oeq float %186, 0.000000e+00\l  %188 = and i1 %181, %187\l  %189 = zext i1 %188 to i32\l  %190 = add nuw nsw i32 %189, %182\l  %191 = icmp eq i32 %190, 1\l  %192 = fcmp olt float %33, 0.000000e+00\l  %193 = and i1 %191, %192\l  %194 = select i1 %193, float -0.000000e+00, float 0.000000e+00\l  %195 = tail call float @llvm.copysign.f32(float %178, float %194)\l  %196 = fcmp uge float %33, 0.000000e+00\l  %197 = icmp ne i32 %190, 0\l  %198 = select i1 %196, i1 true, i1 %197\l  %199 = select i1 %198, float %195, float 0x7FF8000000000000\l  %200 = fcmp oeq float %179, 0x7FF0000000000000\l  br i1 %200, label %201, label %210\l|{<s0>T|<s1>F}}"];
	Node0x589afe0:s0 -> Node0x58a4860;
	Node0x589afe0:s1 -> Node0x58a48f0;
	Node0x58a4860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%201:\l201:                                              \l  %202 = fcmp oeq float %36, 1.000000e+00\l  %203 = fadd float %36, -1.000000e+00\l  %204 = bitcast float %3 to i32\l  %205 = bitcast float %203 to i32\l  %206 = xor i32 %205, %204\l  %207 = icmp sgt i32 %206, -1\l  %208 = select i1 %207, float 0x7FF0000000000000, float 0.000000e+00\l  %209 = select i1 %202, float %36, float %208\l  br label %210\l}"];
	Node0x58a4860 -> Node0x58a48f0;
	Node0x58a48f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%210:\l210:                                              \l  %211 = phi float [ %199, %35 ], [ %209, %201 ]\l  %212 = fcmp oeq float %36, 0x7FF0000000000000\l  %213 = fcmp oeq float %33, 0.000000e+00\l  %214 = or i1 %213, %212\l  %215 = fcmp olt float %3, 0.000000e+00\l  %216 = xor i1 %215, %213\l  %217 = select i1 %216, float 0.000000e+00, float 0x7FF0000000000000\l  %218 = select i1 %191, float %33, float 0.000000e+00\l  %219 = tail call float @llvm.copysign.f32(float %217, float %218)\l  %220 = select i1 %214, float %219, float %211\l  %221 = fcmp uno float %33, %3\l  %222 = select i1 %221, float 0x7FF8000000000000, float %220\l  %223 = fcmp oeq float %33, 1.000000e+00\l  %224 = fcmp oeq float %3, 0.000000e+00\l  %225 = or i1 %224, %223\l  %226 = select i1 %225, float 1.000000e+00, float %222\l  br label %227\l}"];
	Node0x58a48f0 -> Node0x589af50;
	Node0x589af50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%227:\l227:                                              \l  %228 = phi float [ %226, %210 ], [ 0.000000e+00, %28 ]\l  %229 = getelementptr inbounds float, float addrspace(1)* %6, i64 %31\l  store float %228, float addrspace(1)* %229, align 4, !tbaa !7\l  br label %230\l}"];
	Node0x589af50 -> Node0x589a800;
	Node0x589a800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%230:\l230:                                              \l  ret void\l}"];
}
