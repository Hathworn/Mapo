digraph "CFG for '_Z29unpackSourceKernelGrayscale16PtjP13__hip_surfacejj' function" {
	label="CFG for '_Z29unpackSourceKernelGrayscale16PtjP13__hip_surfacejj' function";

	Node0x5bd9510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = icmp ult i32 %14, %3\l  %24 = icmp ult i32 %22, %4\l  %25 = select i1 %23, i1 %24, i1 false\l  br i1 %25, label %26, label %69\l|{<s0>T|<s1>F}}"];
	Node0x5bd9510:s0 -> Node0x5bdc910;
	Node0x5bd9510:s1 -> Node0x5bdc9a0;
	Node0x5bdc910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%26:\l26:                                               \l  %27 = shl i32 %14, 2\l  %28 = bitcast %struct.__hip_surface addrspace(1)* %2 to i32 addrspace(1)*\l  %29 = addrspacecast i32 addrspace(1)* %28 to i32 addrspace(4)*\l  %30 = getelementptr inbounds i32, i32 addrspace(4)* %29, i64 8\l  %31 = load i32, i32 addrspace(4)* %30, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %32 = getelementptr inbounds i32, i32 addrspace(4)* %29, i64 9\l  %33 = load i32, i32 addrspace(4)* %32, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %34 = icmp eq i32 %31, 4\l  br i1 %34, label %35, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5bdc910:s0 -> Node0x5bdd890;
	Node0x5bdc910:s1 -> Node0x5bdd920;
	Node0x5bdd890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%35:\l35:                                               \l  %36 = sdiv i32 %27, 3\l  br label %42\l}"];
	Node0x5bdd890 -> Node0x5bddaf0;
	Node0x5bdd920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%37:\l37:                                               \l  %38 = sext i32 %31 to i64\l  %39 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE9FormatLUT, i64 0, i64 %38\l  %40 = load i32, i32 addrspace(4)* %39, align 4, !tbaa !11\l  %41 = ashr i32 %27, %40\l  br label %42\l}"];
	Node0x5bdd920 -> Node0x5bddaf0;
	Node0x5bddaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%42:\l42:                                               \l  %43 = phi i32 [ %36, %35 ], [ %41, %37 ]\l  %44 = sext i32 %33 to i64\l  %45 = lshr i64 4176, %44\l  %46 = and i64 %45, 1\l  %47 = icmp eq i64 %46, 0\l  br i1 %47, label %50, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5bddaf0:s0 -> Node0x5bde290;
	Node0x5bddaf0:s1 -> Node0x5bde2e0;
	Node0x5bde2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%48:\l48:                                               \l  %49 = sdiv i32 %43, 3\l  br label %54\l}"];
	Node0x5bde2e0 -> Node0x5bde4b0;
	Node0x5bde290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%50:\l50:                                               \l  %51 = getelementptr inbounds [20 x i32], [20 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE8OrderLUT, i64 0, i64 %44\l  %52 = load i32, i32 addrspace(4)* %51, align 4, !tbaa !11\l  %53 = ashr i32 %43, %52\l  br label %54\l}"];
	Node0x5bde290 -> Node0x5bde4b0;
	Node0x5bde4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%54:\l54:                                               \l  %55 = phi i32 [ %49, %48 ], [ %53, %50 ]\l  %56 = bitcast %struct.__hip_surface addrspace(1)* %2 to \<8 x i32\>\l... addrspace(1)*\l  %57 = addrspacecast \<8 x i32\> addrspace(1)* %56 to \<8 x i32\> addrspace(4)*\l  %58 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %57, align 32, !tbaa !15,\l... !amdgpu.noclobber !5\l  %59 = tail call float @llvm.amdgcn.image.load.2d.f32.i32(i32 1, i32 %55, i32\l... %22, \<8 x i32\> %58, i32 0, i32 0)\l  %60 = fmul contract float %59, 1.000000e+03\l  %61 = tail call float @llvm.round.f32(float %60)\l  %62 = tail call float @llvm.minnum.f32(float %61, float 6.553500e+04)\l  %63 = tail call float @llvm.maxnum.f32(float %62, float 0.000000e+00)\l  %64 = fptoui float %63 to i16\l  %65 = mul i32 %22, %1\l  %66 = add i32 %65, %14\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %67\l  store i16 %64, i16 addrspace(1)* %68, align 2, !tbaa !16\l  br label %69\l}"];
	Node0x5bde4b0 -> Node0x5bdc9a0;
	Node0x5bdc9a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  ret void\l}"];
}
