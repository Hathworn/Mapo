digraph "CFG for '_Z26onBothBufferOperatorKerneliiiiiPKjiiiiS0_iiiiPj' function" {
	label="CFG for '_Z26onBothBufferOperatorKerneliiiiiPKjiiiiS0_iiiiPj' function";

	Node0x49ff0c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %17, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %25 = add i32 %23, %24\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %27 = getelementptr i8, i8 addrspace(4)* %18, i64 6\l  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*\l  %29 = load i16, i16 addrspace(4)* %28, align 2, !range !4, !invariant.load !5\l  %30 = zext i16 %29 to i32\l  %31 = mul i32 %26, %30\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %33 = add i32 %31, %32\l  %34 = icmp slt i32 %25, %13\l  %35 = icmp slt i32 %33, %14\l  %36 = select i1 %34, i1 %35, i1 false\l  br i1 %36, label %37, label %83\l|{<s0>T|<s1>F}}"];
	Node0x49ff0c0:s0 -> Node0x4a00080;
	Node0x49ff0c0:s1 -> Node0x4a03920;
	Node0x4a00080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%37:\l37:                                               \l  %38 = add nsw i32 %33, %12\l  %39 = add i32 %11, %0\l  %40 = add i32 %39, %25\l  %41 = sub nsw i32 %40, %1\l  %42 = srem i32 %41, %0\l  %43 = sub nsw i32 %38, %2\l  %44 = sub nsw i32 %40, %6\l  %45 = srem i32 %44, %0\l  %46 = sub nsw i32 %38, %7\l  %47 = icmp sgt i32 %45, -1\l  br i1 %47, label %48, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4a00080:s0 -> Node0x4a04030;
	Node0x4a00080:s1 -> Node0x4a04080;
	Node0x4a04030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%48:\l48:                                               \l  %49 = icmp slt i32 %45, %8\l  %50 = icmp sgt i32 %46, -1\l  %51 = select i1 %49, i1 %50, i1 false\l  br i1 %51, label %52, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4a04030:s0 -> Node0x4a04390;
	Node0x4a04030:s1 -> Node0x4a04080;
	Node0x4a04390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%52:\l52:                                               \l  %53 = icmp slt i32 %46, %9\l  %54 = icmp sgt i32 %42, -1\l  %55 = select i1 %53, i1 %54, i1 false\l  br i1 %55, label %56, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4a04390:s0 -> Node0x4a04660;
	Node0x4a04390:s1 -> Node0x4a04080;
	Node0x4a04660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%56:\l56:                                               \l  %57 = icmp slt i32 %42, %3\l  %58 = icmp sgt i32 %43, -1\l  %59 = select i1 %57, i1 %58, i1 false\l  %60 = icmp slt i32 %43, %4\l  %61 = select i1 %59, i1 %60, i1 false\l  br i1 %61, label %62, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4a04660:s0 -> Node0x4a04a70;
	Node0x4a04660:s1 -> Node0x4a04080;
	Node0x4a04a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%62:\l62:                                               \l  %63 = mul nsw i32 %43, %3\l  %64 = add nsw i32 %42, %63\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %65\l  %67 = load i32, i32 addrspace(1)* %66, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %68 = icmp eq i32 %67, 0\l  br i1 %68, label %76, label %69\l|{<s0>T|<s1>F}}"];
	Node0x4a04a70:s0 -> Node0x4a05270;
	Node0x4a04a70:s1 -> Node0x4a05300;
	Node0x4a05300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%69:\l69:                                               \l  %70 = mul nsw i32 %46, %8\l  %71 = add nsw i32 %45, %70\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %10, i64 %72\l  %74 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %75 = icmp eq i32 %74, 0\l  br i1 %75, label %76, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4a05300:s0 -> Node0x4a05270;
	Node0x4a05300:s1 -> Node0x4a04080;
	Node0x4a05270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%76:\l76:                                               \l  br label %77\l}"];
	Node0x4a05270 -> Node0x4a04080;
	Node0x4a04080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%77:\l77:                                               \l  %78 = phi i32 [ 0, %76 ], [ 0, %56 ], [ 0, %52 ], [ 0, %48 ], [ 0, %37 ], [\l... 1, %69 ]\l  %79 = mul nsw i32 %33, %13\l  %80 = add nsw i32 %79, %25\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %81\l  store i32 %78, i32 addrspace(1)* %82, align 4, !tbaa !7\l  br label %83\l}"];
	Node0x4a04080 -> Node0x4a03920;
	Node0x4a03920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  ret void\l}"];
}
