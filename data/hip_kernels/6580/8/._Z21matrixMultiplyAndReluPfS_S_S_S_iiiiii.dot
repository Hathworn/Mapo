digraph "CFG for '_Z21matrixMultiplyAndReluPfS_S_S_S_iiiiii' function" {
	label="CFG for '_Z21matrixMultiplyAndReluPfS_S_S_S_iiiiii' function";

	Node0x6430690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %16 = shl nsw i32 %13, 4\l  %17 = add nsw i32 %16, %15\l  %18 = shl nsw i32 %12, 4\l  %19 = add nsw i32 %18, %14\l  %20 = icmp slt i32 %6, -14\l  br i1 %20, label %61, label %21\l|{<s0>T|<s1>F}}"];
	Node0x6430690:s0 -> Node0x6433110;
	Node0x6430690:s1 -> Node0x64331a0;
	Node0x64331a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%21:\l21:                                               \l  %22 = add nsw i32 %6, -1\l  %23 = sdiv i32 %22, 16\l  %24 = icmp slt i32 %17, %5\l  %25 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 %14\l  %26 = mul nsw i32 %17, %6\l  %27 = icmp slt i32 %19, %8\l  %28 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... %15, i32 %14\l  %29 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 0\l  %30 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 0, i32 %14\l  %31 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 1\l  %32 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 1, i32 %14\l  %33 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 2\l  %34 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 2, i32 %14\l  %35 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 3\l  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 3, i32 %14\l  %37 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 4\l  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 4, i32 %14\l  %39 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 5\l  %40 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 5, i32 %14\l  %41 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 6\l  %42 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 6, i32 %14\l  %43 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 7\l  %44 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 7, i32 %14\l  %45 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 8\l  %46 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 8, i32 %14\l  %47 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 9\l  %48 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 9, i32 %14\l  %49 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 10\l  %50 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 10, i32 %14\l  %51 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 11\l  %52 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 11, i32 %14\l  %53 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 12\l  %54 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 12, i32 %14\l  %55 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 13\l  %56 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 13, i32 %14\l  %57 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 14\l  %58 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 14, i32 %14\l  %59 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_M, i32 0, i32\l... %15, i32 15\l  %60 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ21matrixMultiplyAndReluPfS_S_S_S_iiiiiiE4ds_N, i32 0, i32\l... 15, i32 %14\l  br label %66\l}"];
	Node0x64331a0 -> Node0x6435830;
	Node0x6433110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%61:\l61:                                               \l  %62 = phi float [ 0.000000e+00, %11 ], [ %155, %90 ]\l  %63 = icmp slt i32 %17, %9\l  %64 = icmp slt i32 %19, %10\l  %65 = select i1 %63, i1 %64, i1 false\l  br i1 %65, label %158, label %169\l|{<s0>T|<s1>F}}"];
	Node0x6433110:s0 -> Node0x6433cf0;
	Node0x6433110:s1 -> Node0x6433d80;
	Node0x6435830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi float [ 0.000000e+00, %21 ], [ %155, %90 ]\l  %68 = phi i32 [ 0, %21 ], [ %156, %90 ]\l  br i1 %24, label %69, label %78\l|{<s0>T|<s1>F}}"];
	Node0x6435830:s0 -> Node0x6436bc0;
	Node0x6435830:s1 -> Node0x6436c50;
	Node0x6436bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%69:\l69:                                               \l  %70 = shl nsw i32 %68, 4\l  %71 = add nuw i32 %70, %14\l  %72 = icmp slt i32 %71, %6\l  br i1 %72, label %73, label %78\l|{<s0>T|<s1>F}}"];
	Node0x6436bc0:s0 -> Node0x6436f40;
	Node0x6436bc0:s1 -> Node0x6436c50;
	Node0x6436f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%73:\l73:                                               \l  %74 = add i32 %71, %26\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %78\l}"];
	Node0x6436f40 -> Node0x6436c50;
	Node0x6436c50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%78:\l78:                                               \l  %79 = phi float [ %77, %73 ], [ 0.000000e+00, %69 ], [ 0.000000e+00, %66 ]\l  store float %79, float addrspace(3)* %25, align 4, !tbaa !5\l  br i1 %27, label %80, label %90\l|{<s0>T|<s1>F}}"];
	Node0x6436c50:s0 -> Node0x6437ce0;
	Node0x6436c50:s1 -> Node0x6436340;
	Node0x6437ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%80:\l80:                                               \l  %81 = shl nsw i32 %68, 4\l  %82 = add nuw nsw i32 %81, %15\l  %83 = icmp slt i32 %82, %7\l  br i1 %83, label %84, label %90\l|{<s0>T|<s1>F}}"];
	Node0x6437ce0:s0 -> Node0x6437f90;
	Node0x6437ce0:s1 -> Node0x6436340;
	Node0x6437f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%84:\l84:                                               \l  %85 = mul nsw i32 %82, %8\l  %86 = add nsw i32 %85, %19\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %90\l}"];
	Node0x6437f90 -> Node0x6436340;
	Node0x6436340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = phi float [ %89, %84 ], [ 0.000000e+00, %80 ], [ 0.000000e+00, %78 ]\l  store float %91, float addrspace(3)* %28, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %92 = load float, float addrspace(3)* %29, align 16, !tbaa !5\l  %93 = load float, float addrspace(3)* %30, align 4, !tbaa !5\l  %94 = fmul contract float %92, %93\l  %95 = fadd contract float %67, %94\l  %96 = load float, float addrspace(3)* %31, align 4, !tbaa !5\l  %97 = load float, float addrspace(3)* %32, align 4, !tbaa !5\l  %98 = fmul contract float %96, %97\l  %99 = fadd contract float %95, %98\l  %100 = load float, float addrspace(3)* %33, align 8, !tbaa !5\l  %101 = load float, float addrspace(3)* %34, align 4, !tbaa !5\l  %102 = fmul contract float %100, %101\l  %103 = fadd contract float %99, %102\l  %104 = load float, float addrspace(3)* %35, align 4, !tbaa !5\l  %105 = load float, float addrspace(3)* %36, align 4, !tbaa !5\l  %106 = fmul contract float %104, %105\l  %107 = fadd contract float %103, %106\l  %108 = load float, float addrspace(3)* %37, align 16, !tbaa !5\l  %109 = load float, float addrspace(3)* %38, align 4, !tbaa !5\l  %110 = fmul contract float %108, %109\l  %111 = fadd contract float %107, %110\l  %112 = load float, float addrspace(3)* %39, align 4, !tbaa !5\l  %113 = load float, float addrspace(3)* %40, align 4, !tbaa !5\l  %114 = fmul contract float %112, %113\l  %115 = fadd contract float %111, %114\l  %116 = load float, float addrspace(3)* %41, align 8, !tbaa !5\l  %117 = load float, float addrspace(3)* %42, align 4, !tbaa !5\l  %118 = fmul contract float %116, %117\l  %119 = fadd contract float %115, %118\l  %120 = load float, float addrspace(3)* %43, align 4, !tbaa !5\l  %121 = load float, float addrspace(3)* %44, align 4, !tbaa !5\l  %122 = fmul contract float %120, %121\l  %123 = fadd contract float %119, %122\l  %124 = load float, float addrspace(3)* %45, align 16, !tbaa !5\l  %125 = load float, float addrspace(3)* %46, align 4, !tbaa !5\l  %126 = fmul contract float %124, %125\l  %127 = fadd contract float %123, %126\l  %128 = load float, float addrspace(3)* %47, align 4, !tbaa !5\l  %129 = load float, float addrspace(3)* %48, align 4, !tbaa !5\l  %130 = fmul contract float %128, %129\l  %131 = fadd contract float %127, %130\l  %132 = load float, float addrspace(3)* %49, align 8, !tbaa !5\l  %133 = load float, float addrspace(3)* %50, align 4, !tbaa !5\l  %134 = fmul contract float %132, %133\l  %135 = fadd contract float %131, %134\l  %136 = load float, float addrspace(3)* %51, align 4, !tbaa !5\l  %137 = load float, float addrspace(3)* %52, align 4, !tbaa !5\l  %138 = fmul contract float %136, %137\l  %139 = fadd contract float %135, %138\l  %140 = load float, float addrspace(3)* %53, align 16, !tbaa !5\l  %141 = load float, float addrspace(3)* %54, align 4, !tbaa !5\l  %142 = fmul contract float %140, %141\l  %143 = fadd contract float %139, %142\l  %144 = load float, float addrspace(3)* %55, align 4, !tbaa !5\l  %145 = load float, float addrspace(3)* %56, align 4, !tbaa !5\l  %146 = fmul contract float %144, %145\l  %147 = fadd contract float %143, %146\l  %148 = load float, float addrspace(3)* %57, align 8, !tbaa !5\l  %149 = load float, float addrspace(3)* %58, align 4, !tbaa !5\l  %150 = fmul contract float %148, %149\l  %151 = fadd contract float %147, %150\l  %152 = load float, float addrspace(3)* %59, align 4, !tbaa !5\l  %153 = load float, float addrspace(3)* %60, align 4, !tbaa !5\l  %154 = fmul contract float %152, %153\l  %155 = fadd contract float %151, %154\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %156 = add nuw nsw i32 %68, 1\l  %157 = icmp eq i32 %68, %23\l  br i1 %157, label %61, label %66, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x6436340:s0 -> Node0x6433110;
	Node0x6436340:s1 -> Node0x6435830;
	Node0x6433cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%158:\l158:                                              \l  %159 = sext i32 %17 to i64\l  %160 = getelementptr inbounds float, float addrspace(1)* %3, i64 %159\l  %161 = load float, float addrspace(1)* %160, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %162 = fadd contract float %62, %161\l  %163 = mul nsw i32 %17, %10\l  %164 = add nsw i32 %163, %19\l  %165 = sext i32 %164 to i64\l  %166 = getelementptr inbounds float, float addrspace(1)* %4, i64 %165\l  store float %162, float addrspace(1)* %166, align 4, !tbaa !5\l  %167 = tail call float @llvm.maxnum.f32(float %162, float 0.000000e+00)\l  %168 = getelementptr inbounds float, float addrspace(1)* %2, i64 %165\l  store float %167, float addrspace(1)* %168, align 4, !tbaa !5\l  br label %169\l}"];
	Node0x6433cf0 -> Node0x6433d80;
	Node0x6433d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%169:\l169:                                              \l  ret void\l}"];
}
