digraph "CFG for '_Z13g_getSoftMaxPPfS_ii' function" {
	label="CFG for '_Z13g_getSoftMaxPPfS_ii' function";

	Node0x4850fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @_share,\l... i32 0, i32 %10\l  %12 = sext i32 %5 to i64\l  %13 = getelementptr inbounds float, float addrspace(1)* %0, i64 %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = getelementptr inbounds float, float addrspace(3)* %11, i32 %14\l  store float 0.000000e+00, float addrspace(3)* %15, align 4, !tbaa !7\l  %16 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @_share,\l... i32 0, i32 %14\l  store float -1.000000e+08, float addrspace(3)* %16, align 4, !tbaa !7\l  %17 = mul i32 %14, %2\l  %18 = add i32 %17, %5\l  %19 = mul nsw i32 %3, %2\l  %20 = icmp slt i32 %18, %19\l  br i1 %20, label %24, label %22\l|{<s0>T|<s1>F}}"];
	Node0x4850fb0:s0 -> Node0x4851ba0;
	Node0x4850fb0:s1 -> Node0x48546c0;
	Node0x4854800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%21:\l21:                                               \l  store float %33, float addrspace(3)* %16, align 4, !tbaa !7\l  br label %22\l}"];
	Node0x4854800 -> Node0x48546c0;
	Node0x48546c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%22:\l22:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %23 = icmp eq i16 %9, 1\l  br i1 %23, label %51, label %36\l|{<s0>T|<s1>F}}"];
	Node0x48546c0:s0 -> Node0x4854cf0;
	Node0x48546c0:s1 -> Node0x4854d80;
	Node0x4851ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi float [ %33, %24 ], [ -1.000000e+08, %4 ]\l  %26 = phi i32 [ %34, %24 ], [ %18, %4 ]\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %30 = getelementptr inbounds float, float addrspace(1)* %13, i64 %27\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7\l  %32 = fadd contract float %29, %31\l  store float %32, float addrspace(1)* %30, align 4, !tbaa !7\l  %33 = tail call float @llvm.maxnum.f32(float %25, float %32)\l  %34 = add nsw i32 %26, %2\l  %35 = icmp slt i32 %34, %19\l  br i1 %35, label %24, label %21, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4851ba0:s0 -> Node0x4851ba0;
	Node0x4851ba0:s1 -> Node0x4854800;
	Node0x4854d80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = phi i32 [ %39, %49 ], [ %10, %22 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %38 = add nsw i32 %37, 1\l  %39 = ashr i32 %38, 1\l  %40 = ashr i32 %37, 1\l  %41 = icmp ult i32 %14, %40\l  br i1 %41, label %42, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4854d80:s0 -> Node0x4855f50;
	Node0x4854d80:s1 -> Node0x48559e0;
	Node0x4855f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%42:\l42:                                               \l  %43 = load float, float addrspace(3)* %16, align 4, !tbaa !7\l  %44 = add nsw i32 %39, %14\l  %45 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @_share,\l... i32 0, i32 %44\l  %46 = load float, float addrspace(3)* %45, align 4, !tbaa !7\l  %47 = fcmp contract olt float %43, %46\l  br i1 %47, label %48, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4855f50:s0 -> Node0x4856310;
	Node0x4855f50:s1 -> Node0x48559e0;
	Node0x4856310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%48:\l48:                                               \l  store float %46, float addrspace(3)* %16, align 4, !tbaa !7\l  br label %49\l}"];
	Node0x4856310 -> Node0x48559e0;
	Node0x48559e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = icmp eq i32 %39, 1\l  br i1 %50, label %51, label %36, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x48559e0:s0 -> Node0x4854cf0;
	Node0x48559e0:s1 -> Node0x4854d80;
	Node0x4854cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%51:\l51:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %20, label %52, label %56\l|{<s0>T|<s1>F}}"];
	Node0x4854cf0:s0 -> Node0x4856840;
	Node0x4854cf0:s1 -> Node0x4856890;
	Node0x4856840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%52:\l52:                                               \l  %53 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @_share, i32 0, i32 0), align 4, !tbaa !7\l  %54 = load float, float addrspace(3)* %15, align 4, !tbaa !7\l  br label %57\l}"];
	Node0x4856840 -> Node0x4856d50;
	Node0x4856e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%55:\l55:                                               \l  store float %65, float addrspace(3)* %15, align 4, !tbaa !7\l  br label %56\l}"];
	Node0x4856e10 -> Node0x4856890;
	Node0x4856890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%56:\l56:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %23, label %82, label %68\l|{<s0>T|<s1>F}}"];
	Node0x4856890:s0 -> Node0x4857110;
	Node0x4856890:s1 -> Node0x4857160;
	Node0x4856d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  %58 = phi float [ %54, %52 ], [ %65, %57 ]\l  %59 = phi i32 [ %18, %52 ], [ %66, %57 ]\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %13, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %63 = fsub contract float %62, %53\l  %64 = tail call float @llvm.exp.f32(float %63)\l  store float %64, float addrspace(1)* %61, align 4, !tbaa !7\l  %65 = fadd contract float %58, %64\l  %66 = add nsw i32 %59, %2\l  %67 = icmp slt i32 %66, %19\l  br i1 %67, label %57, label %55, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4856d50:s0 -> Node0x4856d50;
	Node0x4856d50:s1 -> Node0x4856e10;
	Node0x4857160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = phi i32 [ %71, %80 ], [ %10, %56 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %70 = add nsw i32 %69, 1\l  %71 = ashr i32 %70, 1\l  %72 = ashr i32 %69, 1\l  %73 = icmp ult i32 %14, %72\l  br i1 %73, label %74, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4857160:s0 -> Node0x4858380;
	Node0x4857160:s1 -> Node0x4857e10;
	Node0x4858380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%74:\l74:                                               \l  %75 = add nsw i32 %71, %14\l  %76 = getelementptr inbounds float, float addrspace(3)* %11, i32 %75\l  %77 = load float, float addrspace(3)* %76, align 4, !tbaa !7\l  %78 = load float, float addrspace(3)* %15, align 4, !tbaa !7\l  %79 = fadd contract float %77, %78\l  store float %79, float addrspace(3)* %15, align 4, !tbaa !7\l  br label %80\l}"];
	Node0x4858380 -> Node0x4857e10;
	Node0x4857e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = icmp eq i32 %71, 1\l  br i1 %81, label %82, label %68, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4857e10:s0 -> Node0x4857110;
	Node0x4857e10:s1 -> Node0x4857160;
	Node0x4857110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%82:\l82:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %20, label %83, label %85\l|{<s0>T|<s1>F}}"];
	Node0x4857110:s0 -> Node0x4858b50;
	Node0x4857110:s1 -> Node0x4858ba0;
	Node0x4858b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%83:\l83:                                               \l  %84 = load float, float addrspace(3)* %11, align 4, !tbaa !7\l  br label %86\l}"];
	Node0x4858b50 -> Node0x4858d50;
	Node0x4858ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%85:\l85:                                               \l  ret void\l}"];
	Node0x4858d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  %87 = phi i32 [ %18, %83 ], [ %92, %86 ]\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %13, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !7\l  %91 = fdiv contract float %90, %84\l  store float %91, float addrspace(1)* %89, align 4, !tbaa !7\l  %92 = add nsw i32 %87, %2\l  %93 = icmp slt i32 %92, %19\l  br i1 %93, label %86, label %85, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4858d50:s0 -> Node0x4858d50;
	Node0x4858d50:s1 -> Node0x4858ba0;
}
