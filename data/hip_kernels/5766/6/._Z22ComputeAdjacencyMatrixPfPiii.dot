digraph "CFG for '_Z22ComputeAdjacencyMatrixPfPiii' function" {
	label="CFG for '_Z22ComputeAdjacencyMatrixPfPiii' function";

	Node0x52a19d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp ult i32 %13, %2\l  br i1 %14, label %15, label %137\l|{<s0>T|<s1>F}}"];
	Node0x52a19d0:s0 -> Node0x52a3920;
	Node0x52a19d0:s1 -> Node0x52a39b0;
	Node0x52a3920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%15:\l15:                                               \l  %16 = mul i32 %13, %2\l  %17 = zext i32 %16 to i64\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %17\l  %19 = icmp sgt i32 %3, 0\l  br i1 %19, label %20, label %137\l|{<s0>T|<s1>F}}"];
	Node0x52a3920:s0 -> Node0x52a3dc0;
	Node0x52a3920:s1 -> Node0x52a39b0;
	Node0x52a3dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%20:\l20:                                               \l  %21 = and i32 %3, 7\l  %22 = icmp ult i32 %3, 8\l  br i1 %22, label %118, label %23\l|{<s0>T|<s1>F}}"];
	Node0x52a3dc0:s0 -> Node0x52a4040;
	Node0x52a3dc0:s1 -> Node0x52a4090;
	Node0x52a4090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%23:\l23:                                               \l  %24 = and i32 %3, -8\l  br label %25\l}"];
	Node0x52a4090 -> Node0x52a4290;
	Node0x52a4290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%25:\l25:                                               \l  %26 = phi i32 [ 0, %23 ], [ %115, %25 ]\l  %27 = phi i32 [ 0, %23 ], [ %116, %25 ]\l  %28 = zext i32 %26 to i64\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %28\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %31 = mul nsw i32 %30, %2\l  %32 = add i32 %31, %13\l  %33 = zext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  store float 1.000000e+00, float addrspace(1)* %34, align 4, !tbaa !11\l  %35 = add i32 %30, %16\l  %36 = zext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  store float 1.000000e+00, float addrspace(1)* %37, align 4, !tbaa !11\l  %38 = or i32 %26, 1\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %42 = mul nsw i32 %41, %2\l  %43 = add i32 %42, %13\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  store float 1.000000e+00, float addrspace(1)* %45, align 4, !tbaa !11\l  %46 = add i32 %41, %16\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  store float 1.000000e+00, float addrspace(1)* %48, align 4, !tbaa !11\l  %49 = or i32 %26, 2\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %53 = mul nsw i32 %52, %2\l  %54 = add i32 %53, %13\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  store float 1.000000e+00, float addrspace(1)* %56, align 4, !tbaa !11\l  %57 = add i32 %52, %16\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  store float 1.000000e+00, float addrspace(1)* %59, align 4, !tbaa !11\l  %60 = or i32 %26, 3\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %61\l  %63 = load i32, i32 addrspace(1)* %62, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %64 = mul nsw i32 %63, %2\l  %65 = add i32 %64, %13\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  store float 1.000000e+00, float addrspace(1)* %67, align 4, !tbaa !11\l  %68 = add i32 %63, %16\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %0, i64 %69\l  store float 1.000000e+00, float addrspace(1)* %70, align 4, !tbaa !11\l  %71 = or i32 %26, 4\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %72\l  %74 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %75 = mul nsw i32 %74, %2\l  %76 = add i32 %75, %13\l  %77 = zext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  store float 1.000000e+00, float addrspace(1)* %78, align 4, !tbaa !11\l  %79 = add i32 %74, %16\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  store float 1.000000e+00, float addrspace(1)* %81, align 4, !tbaa !11\l  %82 = or i32 %26, 5\l  %83 = zext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %86 = mul nsw i32 %85, %2\l  %87 = add i32 %86, %13\l  %88 = zext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88\l  store float 1.000000e+00, float addrspace(1)* %89, align 4, !tbaa !11\l  %90 = add i32 %85, %16\l  %91 = zext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %91\l  store float 1.000000e+00, float addrspace(1)* %92, align 4, !tbaa !11\l  %93 = or i32 %26, 6\l  %94 = zext i32 %93 to i64\l  %95 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %94\l  %96 = load i32, i32 addrspace(1)* %95, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %97 = mul nsw i32 %96, %2\l  %98 = add i32 %97, %13\l  %99 = zext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %0, i64 %99\l  store float 1.000000e+00, float addrspace(1)* %100, align 4, !tbaa !11\l  %101 = add i32 %96, %16\l  %102 = zext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %0, i64 %102\l  store float 1.000000e+00, float addrspace(1)* %103, align 4, !tbaa !11\l  %104 = or i32 %26, 7\l  %105 = zext i32 %104 to i64\l  %106 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %105\l  %107 = load i32, i32 addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %108 = mul nsw i32 %107, %2\l  %109 = add i32 %108, %13\l  %110 = zext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %0, i64 %110\l  store float 1.000000e+00, float addrspace(1)* %111, align 4, !tbaa !11\l  %112 = add i32 %107, %16\l  %113 = zext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %0, i64 %113\l  store float 1.000000e+00, float addrspace(1)* %114, align 4, !tbaa !11\l  %115 = add nuw nsw i32 %26, 8\l  %116 = add i32 %27, 8\l  %117 = icmp eq i32 %116, %24\l  br i1 %117, label %118, label %25, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x52a4290:s0 -> Node0x52a4040;
	Node0x52a4290:s1 -> Node0x52a4290;
	Node0x52a4040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%118:\l118:                                              \l  %119 = phi i32 [ 0, %20 ], [ %115, %25 ]\l  %120 = icmp eq i32 %21, 0\l  br i1 %120, label %137, label %121\l|{<s0>T|<s1>F}}"];
	Node0x52a4040:s0 -> Node0x52a39b0;
	Node0x52a4040:s1 -> Node0x52aa6b0;
	Node0x52aa6b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%121:\l121:                                              \l  %122 = phi i32 [ %134, %121 ], [ %119, %118 ]\l  %123 = phi i32 [ %135, %121 ], [ 0, %118 ]\l  %124 = zext i32 %122 to i64\l  %125 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %124\l  %126 = load i32, i32 addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %127 = mul nsw i32 %126, %2\l  %128 = add i32 %127, %13\l  %129 = zext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %0, i64 %129\l  store float 1.000000e+00, float addrspace(1)* %130, align 4, !tbaa !11\l  %131 = add i32 %126, %16\l  %132 = zext i32 %131 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %0, i64 %132\l  store float 1.000000e+00, float addrspace(1)* %133, align 4, !tbaa !11\l  %134 = add nuw nsw i32 %122, 1\l  %135 = add i32 %123, 1\l  %136 = icmp eq i32 %135, %21\l  br i1 %136, label %137, label %121, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x52aa6b0:s0 -> Node0x52a39b0;
	Node0x52aa6b0:s1 -> Node0x52aa6b0;
	Node0x52a39b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%137:\l137:                                              \l  ret void\l}"];
}
