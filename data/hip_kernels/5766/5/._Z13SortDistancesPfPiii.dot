digraph "CFG for '_Z13SortDistancesPfPiii' function" {
	label="CFG for '_Z13SortDistancesPfPiii' function";

	Node0x48f8240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp ult i32 %13, %2\l  br i1 %14, label %15, label %98\l|{<s0>T|<s1>F}}"];
	Node0x48f8240:s0 -> Node0x48fa120;
	Node0x48f8240:s1 -> Node0x48fa1b0;
	Node0x48fa120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%15:\l15:                                               \l  %16 = mul i32 %13, %2\l  %17 = zext i32 %16 to i64\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %17\l  %19 = icmp sgt i32 %2, 0\l  br i1 %19, label %20, label %36\l|{<s0>T|<s1>F}}"];
	Node0x48fa120:s0 -> Node0x48fa5c0;
	Node0x48fa120:s1 -> Node0x48fa610;
	Node0x48fa5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%20:\l20:                                               \l  %21 = and i32 %2, 7\l  %22 = icmp ult i32 %2, 8\l  br i1 %22, label %25, label %23\l|{<s0>T|<s1>F}}"];
	Node0x48fa5c0:s0 -> Node0x48fa8d0;
	Node0x48fa5c0:s1 -> Node0x48fa920;
	Node0x48fa920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%23:\l23:                                               \l  %24 = and i32 %2, -8\l  br label %39\l}"];
	Node0x48fa920 -> Node0x48fab20;
	Node0x48fa8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%25:\l25:                                               \l  %26 = phi i32 [ 0, %20 ], [ %65, %39 ]\l  %27 = icmp eq i32 %21, 0\l  br i1 %27, label %36, label %28\l|{<s0>T|<s1>F}}"];
	Node0x48fa8d0:s0 -> Node0x48fa610;
	Node0x48fa8d0:s1 -> Node0x48fad50;
	Node0x48fad50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%28:\l28:                                               \l  %29 = phi i32 [ %33, %28 ], [ %26, %25 ]\l  %30 = phi i32 [ %34, %28 ], [ 0, %25 ]\l  %31 = zext i32 %29 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %31\l  store i32 %29, i32 addrspace(1)* %32, align 4, !tbaa !7\l  %33 = add nuw nsw i32 %29, 1\l  %34 = add i32 %30, 1\l  %35 = icmp eq i32 %34, %21\l  br i1 %35, label %36, label %28, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x48fad50:s0 -> Node0x48fa610;
	Node0x48fad50:s1 -> Node0x48fad50;
	Node0x48fa610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%36:\l36:                                               \l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %17\l  %38 = icmp sgt i32 %3, 0\l  br i1 %38, label %68, label %98\l|{<s0>T|<s1>F}}"];
	Node0x48fa610:s0 -> Node0x48fb900;
	Node0x48fa610:s1 -> Node0x48fa1b0;
	Node0x48fab20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%39:\l39:                                               \l  %40 = phi i32 [ 0, %23 ], [ %65, %39 ]\l  %41 = phi i32 [ 0, %23 ], [ %66, %39 ]\l  %42 = zext i32 %40 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %42\l  store i32 %40, i32 addrspace(1)* %43, align 4, !tbaa !7\l  %44 = or i32 %40, 1\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %45\l  store i32 %44, i32 addrspace(1)* %46, align 4, !tbaa !7\l  %47 = or i32 %40, 2\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %48\l  store i32 %47, i32 addrspace(1)* %49, align 4, !tbaa !7\l  %50 = or i32 %40, 3\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %51\l  store i32 %50, i32 addrspace(1)* %52, align 4, !tbaa !7\l  %53 = or i32 %40, 4\l  %54 = zext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %54\l  store i32 %53, i32 addrspace(1)* %55, align 4, !tbaa !7\l  %56 = or i32 %40, 5\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %57\l  store i32 %56, i32 addrspace(1)* %58, align 4, !tbaa !7\l  %59 = or i32 %40, 6\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %60\l  store i32 %59, i32 addrspace(1)* %61, align 4, !tbaa !7\l  %62 = or i32 %40, 7\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %63\l  store i32 %62, i32 addrspace(1)* %64, align 4, !tbaa !7\l  %65 = add nuw nsw i32 %40, 8\l  %66 = add i32 %41, 8\l  %67 = icmp eq i32 %66, %24\l  br i1 %67, label %25, label %39, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x48fab20:s0 -> Node0x48fa8d0;
	Node0x48fab20:s1 -> Node0x48fab20;
	Node0x48fb900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%68:\l68:                                               \l  %69 = phi i32 [ %70, %72 ], [ 0, %36 ]\l  %70 = add nuw nsw i32 %69, 1\l  %71 = icmp slt i32 %70, %2\l  br i1 %71, label %85, label %72\l|{<s0>T|<s1>F}}"];
	Node0x48fb900:s0 -> Node0x48fdaf0;
	Node0x48fb900:s1 -> Node0x48fd890;
	Node0x48fd890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%72:\l72:                                               \l  %73 = phi i32 [ %69, %68 ], [ %95, %85 ]\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %37, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !15\l  %77 = zext i32 %69 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %37, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !15\l  store float %79, float addrspace(1)* %75, align 4, !tbaa !15\l  store float %76, float addrspace(1)* %78, align 4, !tbaa !15\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %74\l  %81 = load i32, i32 addrspace(1)* %80, align 4, !tbaa !7\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %77\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !7\l  store i32 %83, i32 addrspace(1)* %80, align 4, !tbaa !7\l  store i32 %81, i32 addrspace(1)* %82, align 4, !tbaa !7\l  %84 = icmp eq i32 %70, %3\l  br i1 %84, label %98, label %68, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x48fd890:s0 -> Node0x48fa1b0;
	Node0x48fd890:s1 -> Node0x48fb900;
	Node0x48fdaf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  %86 = phi i32 [ %96, %85 ], [ %70, %68 ]\l  %87 = phi i32 [ %95, %85 ], [ %69, %68 ]\l  %88 = zext i32 %86 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %37, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !15\l  %91 = sext i32 %87 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %37, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !15\l  %94 = fcmp contract olt float %90, %93\l  %95 = select i1 %94, i32 %86, i32 %87\l  %96 = add nuw nsw i32 %86, 1\l  %97 = icmp slt i32 %96, %2\l  br i1 %97, label %85, label %72, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x48fdaf0:s0 -> Node0x48fdaf0;
	Node0x48fdaf0:s1 -> Node0x48fd890;
	Node0x48fa1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%98:\l98:                                               \l  ret void\l}"];
}
