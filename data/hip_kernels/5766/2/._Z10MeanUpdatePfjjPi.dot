digraph "CFG for '_Z10MeanUpdatePfjjPi' function" {
	label="CFG for '_Z10MeanUpdatePfjjPi' function";

	Node0x4868d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = zext i32 %5 to i64\l  %7 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %6\l  %8 = load i32, i32 addrspace(1)* %7, align 4, !tbaa !5, !amdgpu.noclobber !9\l  %9 = tail call i32 @llvm.smax.i32(i32 %8, i32 1)\l  %10 = sitofp i32 %9 to float\l  %11 = fdiv contract float 1.000000e+00, %10\l  %12 = icmp eq i32 %2, 0\l  br i1 %12, label %33, label %13\l|{<s0>T|<s1>F}}"];
	Node0x4868d10:s0 -> Node0x486b3d0;
	Node0x4868d10:s1 -> Node0x486b460;
	Node0x486b460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%13:\l13:                                               \l  %14 = mul i32 %5, %2\l  %15 = and i32 %2, 7\l  %16 = icmp ult i32 %2, 8\l  br i1 %16, label %19, label %17\l|{<s0>T|<s1>F}}"];
	Node0x486b460:s0 -> Node0x4869f40;
	Node0x486b460:s1 -> Node0x486b8c0;
	Node0x486b8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%17:\l17:                                               \l  %18 = and i32 %2, -8\l  br label %34\l}"];
	Node0x486b8c0 -> Node0x486ba80;
	Node0x4869f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = phi i32 [ 0, %13 ], [ %84, %34 ]\l  %21 = icmp eq i32 %15, 0\l  br i1 %21, label %33, label %22\l|{<s0>T|<s1>F}}"];
	Node0x4869f40:s0 -> Node0x486b3d0;
	Node0x4869f40:s1 -> Node0x486bcb0;
	Node0x486bcb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = phi i32 [ %30, %22 ], [ %20, %19 ]\l  %24 = phi i32 [ %31, %22 ], [ 0, %19 ]\l  %25 = add i32 %23, %14\l  %26 = zext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !10\l  %29 = fmul contract float %11, %28\l  store float %29, float addrspace(1)* %27, align 4, !tbaa !10\l  %30 = add nuw nsw i32 %23, 1\l  %31 = add i32 %24, 1\l  %32 = icmp eq i32 %31, %15\l  br i1 %32, label %33, label %22, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x486bcb0:s0 -> Node0x486b3d0;
	Node0x486bcb0:s1 -> Node0x486bcb0;
	Node0x486b3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%33:\l33:                                               \l  ret void\l}"];
	Node0x486ba80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%34:\l34:                                               \l  %35 = phi i32 [ 0, %17 ], [ %84, %34 ]\l  %36 = phi i32 [ 0, %17 ], [ %85, %34 ]\l  %37 = add i32 %35, %14\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !10\l  %41 = fmul contract float %11, %40\l  store float %41, float addrspace(1)* %39, align 4, !tbaa !10\l  %42 = or i32 %35, 1\l  %43 = add i32 %42, %14\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !10\l  %47 = fmul contract float %11, %46\l  store float %47, float addrspace(1)* %45, align 4, !tbaa !10\l  %48 = or i32 %35, 2\l  %49 = add i32 %48, %14\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !10\l  %53 = fmul contract float %11, %52\l  store float %53, float addrspace(1)* %51, align 4, !tbaa !10\l  %54 = or i32 %35, 3\l  %55 = add i32 %54, %14\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !10\l  %59 = fmul contract float %11, %58\l  store float %59, float addrspace(1)* %57, align 4, !tbaa !10\l  %60 = or i32 %35, 4\l  %61 = add i32 %60, %14\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !10\l  %65 = fmul contract float %11, %64\l  store float %65, float addrspace(1)* %63, align 4, !tbaa !10\l  %66 = or i32 %35, 5\l  %67 = add i32 %66, %14\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !10\l  %71 = fmul contract float %11, %70\l  store float %71, float addrspace(1)* %69, align 4, !tbaa !10\l  %72 = or i32 %35, 6\l  %73 = add i32 %72, %14\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !10\l  %77 = fmul contract float %11, %76\l  store float %77, float addrspace(1)* %75, align 4, !tbaa !10\l  %78 = or i32 %35, 7\l  %79 = add i32 %78, %14\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !10\l  %83 = fmul contract float %11, %82\l  store float %83, float addrspace(1)* %81, align 4, !tbaa !10\l  %84 = add nuw nsw i32 %35, 8\l  %85 = add i32 %36, 8\l  %86 = icmp eq i32 %85, %18\l  br i1 %86, label %19, label %34, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x486ba80:s0 -> Node0x4869f40;
	Node0x486ba80:s1 -> Node0x486ba80;
}
