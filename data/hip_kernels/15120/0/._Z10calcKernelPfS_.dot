digraph "CFG for '_Z10calcKernelPfS_' function" {
	label="CFG for '_Z10calcKernelPfS_' function";

	Node0x62a9520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = add i32 %10, %3\l  %12 = zext i32 %11 to i64\l  %13 = getelementptr inbounds float, float addrspace(1)* %0, i64 %12\l  %14 = load float, float addrspace(1)* %13, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %15 = fpext float %14 to double\l  %16 = fadd contract double %15, -2.300000e+00\l  %17 = fdiv contract double %15, %16\l  %18 = tail call double @llvm.fabs.f64(double %17)\l  %19 = tail call double @llvm.amdgcn.frexp.mant.f64(double %18)\l  %20 = fcmp olt double %19, 0x3FE5555555555555\l  %21 = zext i1 %20 to i32\l  %22 = tail call double @llvm.amdgcn.ldexp.f64(double %19, i32 %21)\l  %23 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %18)\l  %24 = sub nsw i32 %23, %21\l  %25 = fadd double %22, -1.000000e+00\l  %26 = fadd double %22, 1.000000e+00\l  %27 = fadd double %26, -1.000000e+00\l  %28 = fsub double %22, %27\l  %29 = tail call double @llvm.amdgcn.rcp.f64(double %26)\l  %30 = fneg double %26\l  %31 = tail call double @llvm.fma.f64(double %30, double %29, double\l... 1.000000e+00)\l  %32 = tail call double @llvm.fma.f64(double %31, double %29, double %29)\l  %33 = tail call double @llvm.fma.f64(double %30, double %32, double\l... 1.000000e+00)\l  %34 = tail call double @llvm.fma.f64(double %33, double %32, double %32)\l  %35 = fmul double %25, %34\l  %36 = fmul double %26, %35\l  %37 = fneg double %36\l  %38 = tail call double @llvm.fma.f64(double %35, double %26, double %37)\l  %39 = tail call double @llvm.fma.f64(double %35, double %28, double %38)\l  %40 = fadd double %36, %39\l  %41 = fsub double %40, %36\l  %42 = fsub double %39, %41\l  %43 = fsub double %25, %40\l  %44 = fsub double %25, %43\l  %45 = fsub double %44, %40\l  %46 = fsub double %45, %42\l  %47 = fadd double %43, %46\l  %48 = fmul double %34, %47\l  %49 = fadd double %35, %48\l  %50 = fsub double %49, %35\l  %51 = fsub double %48, %50\l  %52 = fmul double %49, %49\l  %53 = fneg double %52\l  %54 = tail call double @llvm.fma.f64(double %49, double %49, double %53)\l  %55 = fmul double %51, 2.000000e+00\l  %56 = tail call double @llvm.fma.f64(double %49, double %55, double %54)\l  %57 = fadd double %52, %56\l  %58 = fsub double %57, %52\l  %59 = fsub double %56, %58\l  %60 = tail call double @llvm.fma.f64(double %57, double 0x3FBDEE674222DE17,\l... double 0x3FBA6564968915A9)\l  %61 = tail call double @llvm.fma.f64(double %57, double %60, double\l... 0x3FBE25E43ABE935A)\l  %62 = tail call double @llvm.fma.f64(double %57, double %61, double\l... 0x3FC110EF47E6C9C2)\l  %63 = tail call double @llvm.fma.f64(double %57, double %62, double\l... 0x3FC3B13BCFA74449)\l  %64 = tail call double @llvm.fma.f64(double %57, double %63, double\l... 0x3FC745D171BF3C30)\l  %65 = tail call double @llvm.fma.f64(double %57, double %64, double\l... 0x3FCC71C71C7792CE)\l  %66 = tail call double @llvm.fma.f64(double %57, double %65, double\l... 0x3FD24924924920DA)\l  %67 = tail call double @llvm.fma.f64(double %57, double %66, double\l... 0x3FD999999999999C)\l  %68 = sitofp i32 %24 to double\l  %69 = fmul double %68, 0x3FE62E42FEFA39EF\l  %70 = fneg double %69\l  %71 = tail call double @llvm.fma.f64(double %68, double 0x3FE62E42FEFA39EF,\l... double %70)\l  %72 = tail call double @llvm.fma.f64(double %68, double 0x3C7ABC9E3B39803F,\l... double %71)\l  %73 = fadd double %69, %72\l  %74 = fsub double %73, %69\l  %75 = fsub double %72, %74\l  %76 = tail call double @llvm.amdgcn.ldexp.f64(double %49, i32 1)\l  %77 = tail call double @llvm.amdgcn.ldexp.f64(double %51, i32 1)\l  %78 = fmul double %49, %57\l  %79 = fneg double %78\l  %80 = tail call double @llvm.fma.f64(double %57, double %49, double %79)\l  %81 = tail call double @llvm.fma.f64(double %57, double %51, double %80)\l  %82 = tail call double @llvm.fma.f64(double %59, double %49, double %81)\l  %83 = fadd double %78, %82\l  %84 = fsub double %83, %78\l  %85 = fsub double %82, %84\l  %86 = fmul double %57, %67\l  %87 = fneg double %86\l  %88 = tail call double @llvm.fma.f64(double %57, double %67, double %87)\l  %89 = tail call double @llvm.fma.f64(double %59, double %67, double %88)\l  %90 = fadd double %86, %89\l  %91 = fsub double %90, %86\l  %92 = fsub double %89, %91\l  %93 = fadd double %90, 0x3FE5555555555555\l  %94 = fadd double %93, 0xBFE5555555555555\l  %95 = fsub double %90, %94\l  %96 = fadd double %92, 0x3C8543B0D5DF274D\l  %97 = fadd double %96, %95\l  %98 = fadd double %93, %97\l  %99 = fsub double %98, %93\l  %100 = fsub double %97, %99\l  %101 = fmul double %83, %98\l  %102 = fneg double %101\l  %103 = tail call double @llvm.fma.f64(double %83, double %98, double %102)\l  %104 = tail call double @llvm.fma.f64(double %83, double %100, double %103)\l  %105 = tail call double @llvm.fma.f64(double %85, double %98, double %104)\l  %106 = fadd double %101, %105\l  %107 = fsub double %106, %101\l  %108 = fsub double %105, %107\l  %109 = fadd double %76, %106\l  %110 = fsub double %109, %76\l  %111 = fsub double %106, %110\l  %112 = fadd double %77, %108\l  %113 = fadd double %112, %111\l  %114 = fadd double %109, %113\l  %115 = fsub double %114, %109\l  %116 = fsub double %113, %115\l  %117 = fadd double %73, %114\l  %118 = fsub double %117, %73\l  %119 = fsub double %117, %118\l  %120 = fsub double %73, %119\l  %121 = fsub double %114, %118\l  %122 = fadd double %121, %120\l  %123 = fadd double %75, %116\l  %124 = fsub double %123, %75\l  %125 = fsub double %123, %124\l  %126 = fsub double %75, %125\l  %127 = fsub double %116, %124\l  %128 = fadd double %127, %126\l  %129 = fadd double %123, %122\l  %130 = fadd double %117, %129\l  %131 = fsub double %130, %117\l  %132 = fsub double %129, %131\l  %133 = fadd double %128, %132\l  %134 = fadd double %130, %133\l  %135 = fsub double %134, %130\l  %136 = fsub double %133, %135\l  %137 = fmul double %134, 3.000000e+00\l  %138 = fneg double %137\l  %139 = tail call double @llvm.fma.f64(double %134, double 3.000000e+00,\l... double %138)\l  %140 = tail call double @llvm.fma.f64(double %136, double 3.000000e+00,\l... double %139)\l  %141 = fadd double %137, %140\l  %142 = fsub double %141, %137\l  %143 = fsub double %140, %142\l  %144 = tail call double @llvm.fabs.f64(double %137) #3\l  %145 = fcmp oeq double %144, 0x7FF0000000000000\l  %146 = select i1 %145, double %137, double %141\l  %147 = tail call double @llvm.fabs.f64(double %146) #3\l  %148 = fcmp oeq double %147, 0x7FF0000000000000\l  %149 = select i1 %148, double 0.000000e+00, double %143\l  %150 = fmul double %146, 0x3FF71547652B82FE\l  %151 = tail call double @llvm.rint.f64(double %150)\l  %152 = fneg double %151\l  %153 = tail call double @llvm.fma.f64(double %152, double\l... 0x3FE62E42FEFA39EF, double %146)\l  %154 = tail call double @llvm.fma.f64(double %152, double\l... 0x3C7ABC9E3B39803F, double %153)\l  %155 = tail call double @llvm.fma.f64(double %154, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %156 = tail call double @llvm.fma.f64(double %154, double %155, double\l... 0x3EC71DEE623FDE64)\l  %157 = tail call double @llvm.fma.f64(double %154, double %156, double\l... 0x3EFA01997C89E6B0)\l  %158 = tail call double @llvm.fma.f64(double %154, double %157, double\l... 0x3F2A01A014761F6E)\l  %159 = tail call double @llvm.fma.f64(double %154, double %158, double\l... 0x3F56C16C1852B7B0)\l  %160 = tail call double @llvm.fma.f64(double %154, double %159, double\l... 0x3F81111111122322)\l  %161 = tail call double @llvm.fma.f64(double %154, double %160, double\l... 0x3FA55555555502A1)\l  %162 = tail call double @llvm.fma.f64(double %154, double %161, double\l... 0x3FC5555555555511)\l  %163 = tail call double @llvm.fma.f64(double %154, double %162, double\l... 0x3FE000000000000B)\l  %164 = tail call double @llvm.fma.f64(double %154, double %163, double\l... 1.000000e+00)\l  %165 = tail call double @llvm.fma.f64(double %154, double %164, double\l... 1.000000e+00)\l  %166 = fptosi double %151 to i32\l  %167 = tail call double @llvm.amdgcn.ldexp.f64(double %165, i32 %166)\l  %168 = fcmp ogt double %146, 1.024000e+03\l  %169 = select i1 %168, double 0x7FF0000000000000, double %167\l  %170 = fcmp olt double %146, -1.075000e+03\l  %171 = select i1 %170, double 0.000000e+00, double %169\l  %172 = tail call double @llvm.fma.f64(double %171, double %149, double %171)\l  %173 = tail call double @llvm.fabs.f64(double %171) #3\l  %174 = fcmp oeq double %173, 0x7FF0000000000000\l  %175 = select i1 %174, double %171, double %172\l  %176 = fcmp uge double %17, 0.000000e+00\l  %177 = select i1 %176, double 0.000000e+00, double -0.000000e+00\l  %178 = tail call double @llvm.copysign.f64(double %175, double %177)\l  %179 = fcmp oeq double %18, 0x7FF0000000000000\l  %180 = fcmp oeq double %17, 0.000000e+00\l  %181 = or i1 %180, %179\l  %182 = select i1 %180, double 0.000000e+00, double 0x7FF0000000000000\l  %183 = tail call double @llvm.copysign.f64(double %182, double %17)\l  %184 = select i1 %181, double %183, double %178\l  %185 = fcmp uno double %17, 0.000000e+00\l  %186 = select i1 %185, double 0x7FF8000000000000, double %184\l  %187 = fptrunc double %186 to float\l  %188 = getelementptr inbounds float, float addrspace(1)* %1, i64 %12\l  store float %187, float addrspace(1)* %188, align 4, !tbaa !7\l  ret void\l}"];
}
