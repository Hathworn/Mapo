digraph "CFG for '_Z5sobelPciS_' function" {
	label="CFG for '_Z5sobelPciS_' function";

	Node0x606bff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = add i32 %19, %13\l  %21 = add nsw i32 %12, -1\l  %22 = add nsw i32 %20, -1\l  %23 = mul nsw i32 %22, %1\l  %24 = add nsw i32 %23, %21\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %25\l  %27 = load i8, i8 addrspace(1)* %26, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %28 = sext i8 %27 to i32\l  %29 = mul nsw i32 %20, %1\l  %30 = add nsw i32 %29, %21\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %31\l  %33 = load i8, i8 addrspace(1)* %32, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %34 = sext i8 %33 to i32\l  %35 = add nsw i32 %20, 1\l  %36 = mul nsw i32 %35, %1\l  %37 = add nsw i32 %36, %21\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %38\l  %40 = load i8, i8 addrspace(1)* %39, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %41 = sext i8 %40 to i32\l  %42 = add nsw i32 %12, 1\l  %43 = add nsw i32 %23, %42\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %44\l  %46 = load i8, i8 addrspace(1)* %45, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %47 = sext i8 %46 to i32\l  %48 = add nsw i32 %29, %42\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %49\l  %51 = load i8, i8 addrspace(1)* %50, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %52 = sext i8 %51 to i32\l  %53 = add nsw i32 %36, %42\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %54\l  %56 = load i8, i8 addrspace(1)* %55, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %57 = sext i8 %56 to i32\l  %58 = add nsw i32 %23, %12\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %59\l  %61 = load i8, i8 addrspace(1)* %60, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %62 = sext i8 %61 to i32\l  %63 = add nsw i32 %36, %12\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %64\l  %66 = load i8, i8 addrspace(1)* %65, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %67 = sext i8 %66 to i32\l  %68 = sub nsw i32 %52, %34\l  %69 = shl nsw i32 %68, 1\l  %70 = add nsw i32 %41, %28\l  %71 = sub nsw i32 %47, %70\l  %72 = add nsw i32 %71, %57\l  %73 = add nsw i32 %72, %69\l  %74 = sub nsw i32 %67, %62\l  %75 = shl nsw i32 %74, 1\l  %76 = add nsw i32 %28, %47\l  %77 = sub nsw i32 %41, %76\l  %78 = add nsw i32 %77, %57\l  %79 = add nsw i32 %78, %75\l  %80 = mul nsw i32 %73, %73\l  %81 = mul nsw i32 %79, %79\l  %82 = add nuw nsw i32 %81, %80\l  %83 = sitofp i32 %82 to float\l  %84 = icmp eq i32 %82, 0\l  %85 = select i1 %84, float 0x41F0000000000000, float 1.000000e+00\l  %86 = fmul float %85, %83\l  %87 = tail call float @llvm.sqrt.f32(float %86)\l  %88 = bitcast float %87 to i32\l  %89 = add nsw i32 %88, -1\l  %90 = bitcast i32 %89 to float\l  %91 = add nsw i32 %88, 1\l  %92 = bitcast i32 %91 to float\l  %93 = tail call i1 @llvm.amdgcn.class.f32(float %86, i32 608)\l  %94 = select i1 %84, float 0x3EF0000000000000, float 1.000000e+00\l  %95 = fneg float %92\l  %96 = tail call float @llvm.fma.f32(float %95, float %87, float %86)\l  %97 = fcmp ogt float %96, 0.000000e+00\l  %98 = fneg float %90\l  %99 = tail call float @llvm.fma.f32(float %98, float %87, float %86)\l  %100 = fcmp ole float %99, 0.000000e+00\l  %101 = select i1 %100, float %90, float %87\l  %102 = select i1 %97, float %92, float %101\l  %103 = fmul float %94, %102\l  %104 = select i1 %93, float %86, float %103\l  %105 = fptosi float %104 to i8\l  %106 = add nsw i32 %29, %12\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %107\l  store i8 %105, i8 addrspace(1)* %108, align 1, !tbaa !7\l  ret void\l}"];
}
