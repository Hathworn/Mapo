digraph "CFG for '_Z8addValuePiS_' function" {
	label="CFG for '_Z8addValuePiS_' function";

	Node0x56c24d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !5, !invariant.load !6\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = icmp ult i16 %7, 2\l  br i1 %9, label %30, label %10\l|{<s0>T|<s1>F}}"];
	Node0x56c24d0:s0 -> Node0x56c34d0;
	Node0x56c24d0:s1 -> Node0x56c42e0;
	Node0x56c42e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%10:\l10:                                               \l  %11 = lshr i16 %7, 1\l  %12 = zext i16 %11 to i32\l  %13 = shl i32 %8, 3\l  %14 = add i32 %13, %3\l  %15 = zext i32 %14 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %15\l  br label %17\l}"];
	Node0x56c42e0 -> Node0x56c4180;
	Node0x56c4180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = phi i32 [ %12, %10 ], [ %28, %27 ]\l  %19 = icmp ult i32 %3, %18\l  br i1 %19, label %20, label %27\l|{<s0>T|<s1>F}}"];
	Node0x56c4180:s0 -> Node0x56c4b00;
	Node0x56c4180:s1 -> Node0x56c4930;
	Node0x56c4b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%20:\l20:                                               \l  %21 = add i32 %18, %14\l  %22 = zext i32 %21 to i64\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %22\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !7\l  %25 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !7\l  %26 = add nsw i32 %25, %24\l  store i32 %26, i32 addrspace(1)* %16, align 4, !tbaa !7\l  br label %27\l}"];
	Node0x56c4b00 -> Node0x56c4930;
	Node0x56c4930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %28 = lshr i32 %18, 1\l  %29 = icmp ult i32 %18, 2\l  br i1 %29, label %30, label %17, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x56c4930:s0 -> Node0x56c34d0;
	Node0x56c4930:s1 -> Node0x56c4180;
	Node0x56c34d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%30:\l30:                                               \l  %31 = icmp eq i32 %3, 0\l  br i1 %31, label %32, label %39\l|{<s0>T|<s1>F}}"];
	Node0x56c34d0:s0 -> Node0x56c5de0;
	Node0x56c34d0:s1 -> Node0x56c5e30;
	Node0x56c5de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%32:\l32:                                               \l  %33 = shl i32 %8, 3\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %34\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !7\l  %37 = zext i32 %8 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %37\l  store i32 %36, i32 addrspace(1)* %38, align 4, !tbaa !7\l  br label %39\l}"];
	Node0x56c5de0 -> Node0x56c5e30;
	Node0x56c5e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%39:\l39:                                               \l  ret void\l}"];
}
