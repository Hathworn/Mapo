digraph "CFG for '_Z10findLowestiPiS_' function" {
	label="CFG for '_Z10findLowestiPiS_' function";

	Node0x53501e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = mul i32 %4, %0\l  %6 = add nsw i32 %0, -1\l  %7 = add i32 %6, %5\l  %8 = sext i32 %5 to i64\l  %9 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %8\l  %10 = load i32, i32 addrspace(1)* %9, align 4, !tbaa !5, !amdgpu.noclobber !9\l  %11 = icmp ult i32 %5, %7\l  br i1 %11, label %12, label %33\l|{<s0>T|<s1>F}}"];
	Node0x53501e0:s0 -> Node0x5350f70;
	Node0x53501e0:s1 -> Node0x5351d60;
	Node0x5350f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%12:\l12:                                               \l  %13 = add i32 %0, 7\l  %14 = add i32 %0, -2\l  %15 = and i32 %13, 7\l  %16 = icmp eq i32 %15, 0\l  br i1 %16, label %28, label %17\l|{<s0>T|<s1>F}}"];
	Node0x5350f70:s0 -> Node0x53517f0;
	Node0x5350f70:s1 -> Node0x5352250;
	Node0x5352250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%17:\l17:                                               \l  %18 = phi i32 [ %25, %17 ], [ %5, %12 ]\l  %19 = phi i32 [ %24, %17 ], [ %10, %12 ]\l  %20 = phi i32 [ %26, %17 ], [ 0, %12 ]\l  %21 = zext i32 %18 to i64\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %21\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %24 = tail call i32 @llvm.smin.i32(i32 %23, i32 %19)\l  %25 = add nuw i32 %18, 1\l  %26 = add i32 %20, 1\l  %27 = icmp eq i32 %26, %15\l  br i1 %27, label %28, label %17, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5352250:s0 -> Node0x53517f0;
	Node0x5352250:s1 -> Node0x5352250;
	Node0x53517f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%28:\l28:                                               \l  %29 = phi i32 [ undef, %12 ], [ %24, %17 ]\l  %30 = phi i32 [ %5, %12 ], [ %25, %17 ]\l  %31 = phi i32 [ %10, %12 ], [ %24, %17 ]\l  %32 = icmp ult i32 %14, 7\l  br i1 %32, label %33, label %45\l|{<s0>T|<s1>F}}"];
	Node0x53517f0:s0 -> Node0x5351d60;
	Node0x53517f0:s1 -> Node0x5352140;
	Node0x5351d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%33:\l33:                                               \l  %34 = phi i32 [ %10, %3 ], [ %29, %28 ], [ %86, %45 ]\l  %35 = zext i32 %4 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %35\l  store i32 %34, i32 addrspace(1)* %36, align 4, !tbaa !5\l  %37 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %38 = getelementptr inbounds i8, i8 addrspace(4)* %37, i64 24\l  %39 = bitcast i8 addrspace(4)* %38 to i64 addrspace(4)*\l  %40 = load i64, i64 addrspace(4)* %39, align 8, !tbaa !12\l  %41 = inttoptr i64 %40 to i8 addrspace(1)*\l  %42 = addrspacecast i8 addrspace(1)* %41 to i8*\l  %43 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %42,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %44 = extractelement \<2 x i64\> %43, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([25 x i8], [25 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %89, label %93\l|{<s0>T|<s1>F}}"];
	Node0x5351d60:s0 -> Node0x53552d0;
	Node0x5351d60:s1 -> Node0x5355ce0;
	Node0x5352140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%45:\l45:                                               \l  %46 = phi i32 [ %87, %45 ], [ %30, %28 ]\l  %47 = phi i32 [ %86, %45 ], [ %31, %28 ]\l  %48 = zext i32 %46 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %48\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %51 = tail call i32 @llvm.smin.i32(i32 %50, i32 %47)\l  %52 = add nuw i32 %46, 1\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %56 = tail call i32 @llvm.smin.i32(i32 %55, i32 %51)\l  %57 = add nuw i32 %46, 2\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %58\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %61 = tail call i32 @llvm.smin.i32(i32 %60, i32 %56)\l  %62 = add nuw i32 %46, 3\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %66 = tail call i32 @llvm.smin.i32(i32 %65, i32 %61)\l  %67 = add nuw i32 %46, 4\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %71 = tail call i32 @llvm.smin.i32(i32 %70, i32 %66)\l  %72 = add nuw i32 %46, 5\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %73\l  %75 = load i32, i32 addrspace(1)* %74, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %76 = tail call i32 @llvm.smin.i32(i32 %75, i32 %71)\l  %77 = add nuw i32 %46, 6\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %78\l  %80 = load i32, i32 addrspace(1)* %79, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %81 = tail call i32 @llvm.smin.i32(i32 %80, i32 %76)\l  %82 = add nuw i32 %46, 7\l  %83 = zext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %86 = tail call i32 @llvm.smin.i32(i32 %85, i32 %81)\l  %87 = add nuw i32 %46, 8\l  %88 = icmp eq i32 %87, %7\l  br i1 %88, label %33, label %45, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5352140:s0 -> Node0x5351d60;
	Node0x5352140:s1 -> Node0x5352140;
	Node0x53552d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%89:\l89:                                               \l  %90 = and i64 %44, -225\l  %91 = or i64 %90, 32\l  %92 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %42,\l... i64 noundef %91, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %534\l}"];
	Node0x53552d0 -> Node0x53581b0;
	Node0x5355ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%93:\l93:                                               \l  %94 = and i64 %44, 2\l  %95 = and i64 %44, -3\l  %96 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %95, i64 0\l  br label %97\l}"];
	Node0x5355ce0 -> Node0x5358d10;
	Node0x5358d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%97:\l97:                                               \l  %98 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([25 x i8], [25 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([25 x i8], [25 x i8] addrspace(4)*\l... @.str, i64 0, i64 24) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([25 x i8]* addrspacecast ([25 x i8] addrspace(4)* @.str to [25 x i8]*) to\l... i64)), i64 1))), %93 ], [ %531, %523 ]\l  %99 = phi i8 addrspace(4)* [ getelementptr inbounds ([25 x i8], [25 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %93 ], [ %532, %523 ]\l  %100 = phi \<2 x i64\> [ %96, %93 ], [ %530, %523 ]\l  %101 = icmp ugt i64 %98, 56\l  %102 = extractelement \<2 x i64\> %100, i64 0\l  %103 = or i64 %102, %94\l  %104 = insertelement \<2 x i64\> poison, i64 %103, i64 0\l  %105 = select i1 %101, \<2 x i64\> %100, \<2 x i64\> %104\l  %106 = tail call i64 @llvm.umin.i64(i64 %98, i64 56)\l  %107 = trunc i64 %106 to i32\l  %108 = extractelement \<2 x i64\> %105, i64 0\l  %109 = icmp ugt i32 %107, 7\l  br i1 %109, label %112, label %110\l|{<s0>T|<s1>F}}"];
	Node0x5358d10:s0 -> Node0x5359bc0;
	Node0x5358d10:s1 -> Node0x5359c50;
	Node0x5359c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%110:\l110:                                              \l  %111 = icmp eq i32 %107, 0\l  br i1 %111, label %165, label %152\l|{<s0>T|<s1>F}}"];
	Node0x5359c50:s0 -> Node0x5359e20;
	Node0x5359c50:s1 -> Node0x5359e70;
	Node0x5359bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%112:\l112:                                              \l  %113 = load i8, i8 addrspace(4)* %99, align 1, !tbaa !18\l  %114 = zext i8 %113 to i64\l  %115 = getelementptr inbounds i8, i8 addrspace(4)* %99, i64 1\l  %116 = load i8, i8 addrspace(4)* %115, align 1, !tbaa !18\l  %117 = zext i8 %116 to i64\l  %118 = shl nuw nsw i64 %117, 8\l  %119 = or i64 %118, %114\l  %120 = getelementptr inbounds i8, i8 addrspace(4)* %99, i64 2\l  %121 = load i8, i8 addrspace(4)* %120, align 1, !tbaa !18\l  %122 = zext i8 %121 to i64\l  %123 = shl nuw nsw i64 %122, 16\l  %124 = or i64 %119, %123\l  %125 = getelementptr inbounds i8, i8 addrspace(4)* %99, i64 3\l  %126 = load i8, i8 addrspace(4)* %125, align 1, !tbaa !18\l  %127 = zext i8 %126 to i64\l  %128 = shl nuw nsw i64 %127, 24\l  %129 = or i64 %124, %128\l  %130 = getelementptr inbounds i8, i8 addrspace(4)* %99, i64 4\l  %131 = load i8, i8 addrspace(4)* %130, align 1, !tbaa !18\l  %132 = zext i8 %131 to i64\l  %133 = shl nuw nsw i64 %132, 32\l  %134 = or i64 %129, %133\l  %135 = getelementptr inbounds i8, i8 addrspace(4)* %99, i64 5\l  %136 = load i8, i8 addrspace(4)* %135, align 1, !tbaa !18\l  %137 = zext i8 %136 to i64\l  %138 = shl nuw nsw i64 %137, 40\l  %139 = or i64 %134, %138\l  %140 = getelementptr inbounds i8, i8 addrspace(4)* %99, i64 6\l  %141 = load i8, i8 addrspace(4)* %140, align 1, !tbaa !18\l  %142 = zext i8 %141 to i64\l  %143 = shl nuw nsw i64 %142, 48\l  %144 = or i64 %139, %143\l  %145 = getelementptr inbounds i8, i8 addrspace(4)* %99, i64 7\l  %146 = load i8, i8 addrspace(4)* %145, align 1, !tbaa !18\l  %147 = zext i8 %146 to i64\l  %148 = shl nuw i64 %147, 56\l  %149 = or i64 %144, %148\l  %150 = add nsw i32 %107, -8\l  %151 = getelementptr inbounds i8, i8 addrspace(4)* %99, i64 8\l  br label %165\l}"];
	Node0x5359bc0 -> Node0x5359e20;
	Node0x5359e70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%152:\l152:                                              \l  %153 = phi i32 [ %163, %152 ], [ 0, %110 ]\l  %154 = phi i64 [ %162, %152 ], [ 0, %110 ]\l  %155 = zext i32 %153 to i64\l  %156 = getelementptr inbounds i8, i8 addrspace(4)* %99, i64 %155\l  %157 = load i8, i8 addrspace(4)* %156, align 1, !tbaa !18\l  %158 = zext i8 %157 to i64\l  %159 = shl i32 %153, 3\l  %160 = zext i32 %159 to i64\l  %161 = shl nuw i64 %158, %160\l  %162 = or i64 %161, %154\l  %163 = add nuw nsw i32 %153, 1\l  %164 = icmp eq i32 %163, %107\l  br i1 %164, label %165, label %152, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5359e70:s0 -> Node0x5359e20;
	Node0x5359e70:s1 -> Node0x5359e70;
	Node0x5359e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%165:\l165:                                              \l  %166 = phi i8 addrspace(4)* [ %151, %112 ], [ %99, %110 ], [ %99, %152 ]\l  %167 = phi i32 [ %150, %112 ], [ 0, %110 ], [ 0, %152 ]\l  %168 = phi i64 [ %149, %112 ], [ 0, %110 ], [ %162, %152 ]\l  %169 = icmp ugt i32 %167, 7\l  br i1 %169, label %172, label %170\l|{<s0>T|<s1>F}}"];
	Node0x5359e20:s0 -> Node0x535cd50;
	Node0x5359e20:s1 -> Node0x535cda0;
	Node0x535cda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%170:\l170:                                              \l  %171 = icmp eq i32 %167, 0\l  br i1 %171, label %225, label %212\l|{<s0>T|<s1>F}}"];
	Node0x535cda0:s0 -> Node0x535cf70;
	Node0x535cda0:s1 -> Node0x535cfc0;
	Node0x535cd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%172:\l172:                                              \l  %173 = load i8, i8 addrspace(4)* %166, align 1, !tbaa !18\l  %174 = zext i8 %173 to i64\l  %175 = getelementptr inbounds i8, i8 addrspace(4)* %166, i64 1\l  %176 = load i8, i8 addrspace(4)* %175, align 1, !tbaa !18\l  %177 = zext i8 %176 to i64\l  %178 = shl nuw nsw i64 %177, 8\l  %179 = or i64 %178, %174\l  %180 = getelementptr inbounds i8, i8 addrspace(4)* %166, i64 2\l  %181 = load i8, i8 addrspace(4)* %180, align 1, !tbaa !18\l  %182 = zext i8 %181 to i64\l  %183 = shl nuw nsw i64 %182, 16\l  %184 = or i64 %179, %183\l  %185 = getelementptr inbounds i8, i8 addrspace(4)* %166, i64 3\l  %186 = load i8, i8 addrspace(4)* %185, align 1, !tbaa !18\l  %187 = zext i8 %186 to i64\l  %188 = shl nuw nsw i64 %187, 24\l  %189 = or i64 %184, %188\l  %190 = getelementptr inbounds i8, i8 addrspace(4)* %166, i64 4\l  %191 = load i8, i8 addrspace(4)* %190, align 1, !tbaa !18\l  %192 = zext i8 %191 to i64\l  %193 = shl nuw nsw i64 %192, 32\l  %194 = or i64 %189, %193\l  %195 = getelementptr inbounds i8, i8 addrspace(4)* %166, i64 5\l  %196 = load i8, i8 addrspace(4)* %195, align 1, !tbaa !18\l  %197 = zext i8 %196 to i64\l  %198 = shl nuw nsw i64 %197, 40\l  %199 = or i64 %194, %198\l  %200 = getelementptr inbounds i8, i8 addrspace(4)* %166, i64 6\l  %201 = load i8, i8 addrspace(4)* %200, align 1, !tbaa !18\l  %202 = zext i8 %201 to i64\l  %203 = shl nuw nsw i64 %202, 48\l  %204 = or i64 %199, %203\l  %205 = getelementptr inbounds i8, i8 addrspace(4)* %166, i64 7\l  %206 = load i8, i8 addrspace(4)* %205, align 1, !tbaa !18\l  %207 = zext i8 %206 to i64\l  %208 = shl nuw i64 %207, 56\l  %209 = or i64 %204, %208\l  %210 = add nsw i32 %167, -8\l  %211 = getelementptr inbounds i8, i8 addrspace(4)* %166, i64 8\l  br label %225\l}"];
	Node0x535cd50 -> Node0x535cf70;
	Node0x535cfc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%212:\l212:                                              \l  %213 = phi i32 [ %223, %212 ], [ 0, %170 ]\l  %214 = phi i64 [ %222, %212 ], [ 0, %170 ]\l  %215 = zext i32 %213 to i64\l  %216 = getelementptr inbounds i8, i8 addrspace(4)* %166, i64 %215\l  %217 = load i8, i8 addrspace(4)* %216, align 1, !tbaa !18\l  %218 = zext i8 %217 to i64\l  %219 = shl i32 %213, 3\l  %220 = zext i32 %219 to i64\l  %221 = shl nuw i64 %218, %220\l  %222 = or i64 %221, %214\l  %223 = add nuw nsw i32 %213, 1\l  %224 = icmp eq i32 %223, %167\l  br i1 %224, label %225, label %212\l|{<s0>T|<s1>F}}"];
	Node0x535cfc0:s0 -> Node0x535cf70;
	Node0x535cfc0:s1 -> Node0x535cfc0;
	Node0x535cf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%225:\l225:                                              \l  %226 = phi i8 addrspace(4)* [ %211, %172 ], [ %166, %170 ], [ %166, %212 ]\l  %227 = phi i32 [ %210, %172 ], [ 0, %170 ], [ 0, %212 ]\l  %228 = phi i64 [ %209, %172 ], [ 0, %170 ], [ %222, %212 ]\l  %229 = icmp ugt i32 %227, 7\l  br i1 %229, label %232, label %230\l|{<s0>T|<s1>F}}"];
	Node0x535cf70:s0 -> Node0x535f020;
	Node0x535cf70:s1 -> Node0x535f070;
	Node0x535f070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%230:\l230:                                              \l  %231 = icmp eq i32 %227, 0\l  br i1 %231, label %285, label %272\l|{<s0>T|<s1>F}}"];
	Node0x535f070:s0 -> Node0x535f200;
	Node0x535f070:s1 -> Node0x535f250;
	Node0x535f020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%232:\l232:                                              \l  %233 = load i8, i8 addrspace(4)* %226, align 1, !tbaa !18\l  %234 = zext i8 %233 to i64\l  %235 = getelementptr inbounds i8, i8 addrspace(4)* %226, i64 1\l  %236 = load i8, i8 addrspace(4)* %235, align 1, !tbaa !18\l  %237 = zext i8 %236 to i64\l  %238 = shl nuw nsw i64 %237, 8\l  %239 = or i64 %238, %234\l  %240 = getelementptr inbounds i8, i8 addrspace(4)* %226, i64 2\l  %241 = load i8, i8 addrspace(4)* %240, align 1, !tbaa !18\l  %242 = zext i8 %241 to i64\l  %243 = shl nuw nsw i64 %242, 16\l  %244 = or i64 %239, %243\l  %245 = getelementptr inbounds i8, i8 addrspace(4)* %226, i64 3\l  %246 = load i8, i8 addrspace(4)* %245, align 1, !tbaa !18\l  %247 = zext i8 %246 to i64\l  %248 = shl nuw nsw i64 %247, 24\l  %249 = or i64 %244, %248\l  %250 = getelementptr inbounds i8, i8 addrspace(4)* %226, i64 4\l  %251 = load i8, i8 addrspace(4)* %250, align 1, !tbaa !18\l  %252 = zext i8 %251 to i64\l  %253 = shl nuw nsw i64 %252, 32\l  %254 = or i64 %249, %253\l  %255 = getelementptr inbounds i8, i8 addrspace(4)* %226, i64 5\l  %256 = load i8, i8 addrspace(4)* %255, align 1, !tbaa !18\l  %257 = zext i8 %256 to i64\l  %258 = shl nuw nsw i64 %257, 40\l  %259 = or i64 %254, %258\l  %260 = getelementptr inbounds i8, i8 addrspace(4)* %226, i64 6\l  %261 = load i8, i8 addrspace(4)* %260, align 1, !tbaa !18\l  %262 = zext i8 %261 to i64\l  %263 = shl nuw nsw i64 %262, 48\l  %264 = or i64 %259, %263\l  %265 = getelementptr inbounds i8, i8 addrspace(4)* %226, i64 7\l  %266 = load i8, i8 addrspace(4)* %265, align 1, !tbaa !18\l  %267 = zext i8 %266 to i64\l  %268 = shl nuw i64 %267, 56\l  %269 = or i64 %264, %268\l  %270 = add nsw i32 %227, -8\l  %271 = getelementptr inbounds i8, i8 addrspace(4)* %226, i64 8\l  br label %285\l}"];
	Node0x535f020 -> Node0x535f200;
	Node0x535f250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%272:\l272:                                              \l  %273 = phi i32 [ %283, %272 ], [ 0, %230 ]\l  %274 = phi i64 [ %282, %272 ], [ 0, %230 ]\l  %275 = zext i32 %273 to i64\l  %276 = getelementptr inbounds i8, i8 addrspace(4)* %226, i64 %275\l  %277 = load i8, i8 addrspace(4)* %276, align 1, !tbaa !18\l  %278 = zext i8 %277 to i64\l  %279 = shl i32 %273, 3\l  %280 = zext i32 %279 to i64\l  %281 = shl nuw i64 %278, %280\l  %282 = or i64 %281, %274\l  %283 = add nuw nsw i32 %273, 1\l  %284 = icmp eq i32 %283, %227\l  br i1 %284, label %285, label %272\l|{<s0>T|<s1>F}}"];
	Node0x535f250:s0 -> Node0x535f200;
	Node0x535f250:s1 -> Node0x535f250;
	Node0x535f200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%285:\l285:                                              \l  %286 = phi i8 addrspace(4)* [ %271, %232 ], [ %226, %230 ], [ %226, %272 ]\l  %287 = phi i32 [ %270, %232 ], [ 0, %230 ], [ 0, %272 ]\l  %288 = phi i64 [ %269, %232 ], [ 0, %230 ], [ %282, %272 ]\l  %289 = icmp ugt i32 %287, 7\l  br i1 %289, label %292, label %290\l|{<s0>T|<s1>F}}"];
	Node0x535f200:s0 -> Node0x5361a80;
	Node0x535f200:s1 -> Node0x5361ad0;
	Node0x5361ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%290:\l290:                                              \l  %291 = icmp eq i32 %287, 0\l  br i1 %291, label %345, label %332\l|{<s0>T|<s1>F}}"];
	Node0x5361ad0:s0 -> Node0x5361c60;
	Node0x5361ad0:s1 -> Node0x5361cb0;
	Node0x5361a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%292:\l292:                                              \l  %293 = load i8, i8 addrspace(4)* %286, align 1, !tbaa !18\l  %294 = zext i8 %293 to i64\l  %295 = getelementptr inbounds i8, i8 addrspace(4)* %286, i64 1\l  %296 = load i8, i8 addrspace(4)* %295, align 1, !tbaa !18\l  %297 = zext i8 %296 to i64\l  %298 = shl nuw nsw i64 %297, 8\l  %299 = or i64 %298, %294\l  %300 = getelementptr inbounds i8, i8 addrspace(4)* %286, i64 2\l  %301 = load i8, i8 addrspace(4)* %300, align 1, !tbaa !18\l  %302 = zext i8 %301 to i64\l  %303 = shl nuw nsw i64 %302, 16\l  %304 = or i64 %299, %303\l  %305 = getelementptr inbounds i8, i8 addrspace(4)* %286, i64 3\l  %306 = load i8, i8 addrspace(4)* %305, align 1, !tbaa !18\l  %307 = zext i8 %306 to i64\l  %308 = shl nuw nsw i64 %307, 24\l  %309 = or i64 %304, %308\l  %310 = getelementptr inbounds i8, i8 addrspace(4)* %286, i64 4\l  %311 = load i8, i8 addrspace(4)* %310, align 1, !tbaa !18\l  %312 = zext i8 %311 to i64\l  %313 = shl nuw nsw i64 %312, 32\l  %314 = or i64 %309, %313\l  %315 = getelementptr inbounds i8, i8 addrspace(4)* %286, i64 5\l  %316 = load i8, i8 addrspace(4)* %315, align 1, !tbaa !18\l  %317 = zext i8 %316 to i64\l  %318 = shl nuw nsw i64 %317, 40\l  %319 = or i64 %314, %318\l  %320 = getelementptr inbounds i8, i8 addrspace(4)* %286, i64 6\l  %321 = load i8, i8 addrspace(4)* %320, align 1, !tbaa !18\l  %322 = zext i8 %321 to i64\l  %323 = shl nuw nsw i64 %322, 48\l  %324 = or i64 %319, %323\l  %325 = getelementptr inbounds i8, i8 addrspace(4)* %286, i64 7\l  %326 = load i8, i8 addrspace(4)* %325, align 1, !tbaa !18\l  %327 = zext i8 %326 to i64\l  %328 = shl nuw i64 %327, 56\l  %329 = or i64 %324, %328\l  %330 = add nsw i32 %287, -8\l  %331 = getelementptr inbounds i8, i8 addrspace(4)* %286, i64 8\l  br label %345\l}"];
	Node0x5361a80 -> Node0x5361c60;
	Node0x5361cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%332:\l332:                                              \l  %333 = phi i32 [ %343, %332 ], [ 0, %290 ]\l  %334 = phi i64 [ %342, %332 ], [ 0, %290 ]\l  %335 = zext i32 %333 to i64\l  %336 = getelementptr inbounds i8, i8 addrspace(4)* %286, i64 %335\l  %337 = load i8, i8 addrspace(4)* %336, align 1, !tbaa !18\l  %338 = zext i8 %337 to i64\l  %339 = shl i32 %333, 3\l  %340 = zext i32 %339 to i64\l  %341 = shl nuw i64 %338, %340\l  %342 = or i64 %341, %334\l  %343 = add nuw nsw i32 %333, 1\l  %344 = icmp eq i32 %343, %287\l  br i1 %344, label %345, label %332\l|{<s0>T|<s1>F}}"];
	Node0x5361cb0:s0 -> Node0x5361c60;
	Node0x5361cb0:s1 -> Node0x5361cb0;
	Node0x5361c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%345:\l345:                                              \l  %346 = phi i8 addrspace(4)* [ %331, %292 ], [ %286, %290 ], [ %286, %332 ]\l  %347 = phi i32 [ %330, %292 ], [ 0, %290 ], [ 0, %332 ]\l  %348 = phi i64 [ %329, %292 ], [ 0, %290 ], [ %342, %332 ]\l  %349 = icmp ugt i32 %347, 7\l  br i1 %349, label %352, label %350\l|{<s0>T|<s1>F}}"];
	Node0x5361c60:s0 -> Node0x53646e0;
	Node0x5361c60:s1 -> Node0x5364730;
	Node0x5364730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%350:\l350:                                              \l  %351 = icmp eq i32 %347, 0\l  br i1 %351, label %405, label %392\l|{<s0>T|<s1>F}}"];
	Node0x5364730:s0 -> Node0x53648c0;
	Node0x5364730:s1 -> Node0x5364910;
	Node0x53646e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%352:\l352:                                              \l  %353 = load i8, i8 addrspace(4)* %346, align 1, !tbaa !18\l  %354 = zext i8 %353 to i64\l  %355 = getelementptr inbounds i8, i8 addrspace(4)* %346, i64 1\l  %356 = load i8, i8 addrspace(4)* %355, align 1, !tbaa !18\l  %357 = zext i8 %356 to i64\l  %358 = shl nuw nsw i64 %357, 8\l  %359 = or i64 %358, %354\l  %360 = getelementptr inbounds i8, i8 addrspace(4)* %346, i64 2\l  %361 = load i8, i8 addrspace(4)* %360, align 1, !tbaa !18\l  %362 = zext i8 %361 to i64\l  %363 = shl nuw nsw i64 %362, 16\l  %364 = or i64 %359, %363\l  %365 = getelementptr inbounds i8, i8 addrspace(4)* %346, i64 3\l  %366 = load i8, i8 addrspace(4)* %365, align 1, !tbaa !18\l  %367 = zext i8 %366 to i64\l  %368 = shl nuw nsw i64 %367, 24\l  %369 = or i64 %364, %368\l  %370 = getelementptr inbounds i8, i8 addrspace(4)* %346, i64 4\l  %371 = load i8, i8 addrspace(4)* %370, align 1, !tbaa !18\l  %372 = zext i8 %371 to i64\l  %373 = shl nuw nsw i64 %372, 32\l  %374 = or i64 %369, %373\l  %375 = getelementptr inbounds i8, i8 addrspace(4)* %346, i64 5\l  %376 = load i8, i8 addrspace(4)* %375, align 1, !tbaa !18\l  %377 = zext i8 %376 to i64\l  %378 = shl nuw nsw i64 %377, 40\l  %379 = or i64 %374, %378\l  %380 = getelementptr inbounds i8, i8 addrspace(4)* %346, i64 6\l  %381 = load i8, i8 addrspace(4)* %380, align 1, !tbaa !18\l  %382 = zext i8 %381 to i64\l  %383 = shl nuw nsw i64 %382, 48\l  %384 = or i64 %379, %383\l  %385 = getelementptr inbounds i8, i8 addrspace(4)* %346, i64 7\l  %386 = load i8, i8 addrspace(4)* %385, align 1, !tbaa !18\l  %387 = zext i8 %386 to i64\l  %388 = shl nuw i64 %387, 56\l  %389 = or i64 %384, %388\l  %390 = add nsw i32 %347, -8\l  %391 = getelementptr inbounds i8, i8 addrspace(4)* %346, i64 8\l  br label %405\l}"];
	Node0x53646e0 -> Node0x53648c0;
	Node0x5364910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%392:\l392:                                              \l  %393 = phi i32 [ %403, %392 ], [ 0, %350 ]\l  %394 = phi i64 [ %402, %392 ], [ 0, %350 ]\l  %395 = zext i32 %393 to i64\l  %396 = getelementptr inbounds i8, i8 addrspace(4)* %346, i64 %395\l  %397 = load i8, i8 addrspace(4)* %396, align 1, !tbaa !18\l  %398 = zext i8 %397 to i64\l  %399 = shl i32 %393, 3\l  %400 = zext i32 %399 to i64\l  %401 = shl nuw i64 %398, %400\l  %402 = or i64 %401, %394\l  %403 = add nuw nsw i32 %393, 1\l  %404 = icmp eq i32 %403, %347\l  br i1 %404, label %405, label %392\l|{<s0>T|<s1>F}}"];
	Node0x5364910:s0 -> Node0x53648c0;
	Node0x5364910:s1 -> Node0x5364910;
	Node0x53648c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%405:\l405:                                              \l  %406 = phi i8 addrspace(4)* [ %391, %352 ], [ %346, %350 ], [ %346, %392 ]\l  %407 = phi i32 [ %390, %352 ], [ 0, %350 ], [ 0, %392 ]\l  %408 = phi i64 [ %389, %352 ], [ 0, %350 ], [ %402, %392 ]\l  %409 = icmp ugt i32 %407, 7\l  br i1 %409, label %412, label %410\l|{<s0>T|<s1>F}}"];
	Node0x53648c0:s0 -> Node0x5366970;
	Node0x53648c0:s1 -> Node0x53669c0;
	Node0x53669c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%410:\l410:                                              \l  %411 = icmp eq i32 %407, 0\l  br i1 %411, label %465, label %452\l|{<s0>T|<s1>F}}"];
	Node0x53669c0:s0 -> Node0x5366b50;
	Node0x53669c0:s1 -> Node0x5366ba0;
	Node0x5366970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%412:\l412:                                              \l  %413 = load i8, i8 addrspace(4)* %406, align 1, !tbaa !18\l  %414 = zext i8 %413 to i64\l  %415 = getelementptr inbounds i8, i8 addrspace(4)* %406, i64 1\l  %416 = load i8, i8 addrspace(4)* %415, align 1, !tbaa !18\l  %417 = zext i8 %416 to i64\l  %418 = shl nuw nsw i64 %417, 8\l  %419 = or i64 %418, %414\l  %420 = getelementptr inbounds i8, i8 addrspace(4)* %406, i64 2\l  %421 = load i8, i8 addrspace(4)* %420, align 1, !tbaa !18\l  %422 = zext i8 %421 to i64\l  %423 = shl nuw nsw i64 %422, 16\l  %424 = or i64 %419, %423\l  %425 = getelementptr inbounds i8, i8 addrspace(4)* %406, i64 3\l  %426 = load i8, i8 addrspace(4)* %425, align 1, !tbaa !18\l  %427 = zext i8 %426 to i64\l  %428 = shl nuw nsw i64 %427, 24\l  %429 = or i64 %424, %428\l  %430 = getelementptr inbounds i8, i8 addrspace(4)* %406, i64 4\l  %431 = load i8, i8 addrspace(4)* %430, align 1, !tbaa !18\l  %432 = zext i8 %431 to i64\l  %433 = shl nuw nsw i64 %432, 32\l  %434 = or i64 %429, %433\l  %435 = getelementptr inbounds i8, i8 addrspace(4)* %406, i64 5\l  %436 = load i8, i8 addrspace(4)* %435, align 1, !tbaa !18\l  %437 = zext i8 %436 to i64\l  %438 = shl nuw nsw i64 %437, 40\l  %439 = or i64 %434, %438\l  %440 = getelementptr inbounds i8, i8 addrspace(4)* %406, i64 6\l  %441 = load i8, i8 addrspace(4)* %440, align 1, !tbaa !18\l  %442 = zext i8 %441 to i64\l  %443 = shl nuw nsw i64 %442, 48\l  %444 = or i64 %439, %443\l  %445 = getelementptr inbounds i8, i8 addrspace(4)* %406, i64 7\l  %446 = load i8, i8 addrspace(4)* %445, align 1, !tbaa !18\l  %447 = zext i8 %446 to i64\l  %448 = shl nuw i64 %447, 56\l  %449 = or i64 %444, %448\l  %450 = add nsw i32 %407, -8\l  %451 = getelementptr inbounds i8, i8 addrspace(4)* %406, i64 8\l  br label %465\l}"];
	Node0x5366970 -> Node0x5366b50;
	Node0x5366ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%452:\l452:                                              \l  %453 = phi i32 [ %463, %452 ], [ 0, %410 ]\l  %454 = phi i64 [ %462, %452 ], [ 0, %410 ]\l  %455 = zext i32 %453 to i64\l  %456 = getelementptr inbounds i8, i8 addrspace(4)* %406, i64 %455\l  %457 = load i8, i8 addrspace(4)* %456, align 1, !tbaa !18\l  %458 = zext i8 %457 to i64\l  %459 = shl i32 %453, 3\l  %460 = zext i32 %459 to i64\l  %461 = shl nuw i64 %458, %460\l  %462 = or i64 %461, %454\l  %463 = add nuw nsw i32 %453, 1\l  %464 = icmp eq i32 %463, %407\l  br i1 %464, label %465, label %452\l|{<s0>T|<s1>F}}"];
	Node0x5366ba0:s0 -> Node0x5366b50;
	Node0x5366ba0:s1 -> Node0x5366ba0;
	Node0x5366b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%465:\l465:                                              \l  %466 = phi i8 addrspace(4)* [ %451, %412 ], [ %406, %410 ], [ %406, %452 ]\l  %467 = phi i32 [ %450, %412 ], [ 0, %410 ], [ 0, %452 ]\l  %468 = phi i64 [ %449, %412 ], [ 0, %410 ], [ %462, %452 ]\l  %469 = icmp ugt i32 %467, 7\l  br i1 %469, label %472, label %470\l|{<s0>T|<s1>F}}"];
	Node0x5366b50:s0 -> Node0x53695e0;
	Node0x5366b50:s1 -> Node0x5369630;
	Node0x5369630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%470:\l470:                                              \l  %471 = icmp eq i32 %467, 0\l  br i1 %471, label %523, label %510\l|{<s0>T|<s1>F}}"];
	Node0x5369630:s0 -> Node0x5359120;
	Node0x5369630:s1 -> Node0x53697c0;
	Node0x53695e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%472:\l472:                                              \l  %473 = load i8, i8 addrspace(4)* %466, align 1, !tbaa !18\l  %474 = zext i8 %473 to i64\l  %475 = getelementptr inbounds i8, i8 addrspace(4)* %466, i64 1\l  %476 = load i8, i8 addrspace(4)* %475, align 1, !tbaa !18\l  %477 = zext i8 %476 to i64\l  %478 = shl nuw nsw i64 %477, 8\l  %479 = or i64 %478, %474\l  %480 = getelementptr inbounds i8, i8 addrspace(4)* %466, i64 2\l  %481 = load i8, i8 addrspace(4)* %480, align 1, !tbaa !18\l  %482 = zext i8 %481 to i64\l  %483 = shl nuw nsw i64 %482, 16\l  %484 = or i64 %479, %483\l  %485 = getelementptr inbounds i8, i8 addrspace(4)* %466, i64 3\l  %486 = load i8, i8 addrspace(4)* %485, align 1, !tbaa !18\l  %487 = zext i8 %486 to i64\l  %488 = shl nuw nsw i64 %487, 24\l  %489 = or i64 %484, %488\l  %490 = getelementptr inbounds i8, i8 addrspace(4)* %466, i64 4\l  %491 = load i8, i8 addrspace(4)* %490, align 1, !tbaa !18\l  %492 = zext i8 %491 to i64\l  %493 = shl nuw nsw i64 %492, 32\l  %494 = or i64 %489, %493\l  %495 = getelementptr inbounds i8, i8 addrspace(4)* %466, i64 5\l  %496 = load i8, i8 addrspace(4)* %495, align 1, !tbaa !18\l  %497 = zext i8 %496 to i64\l  %498 = shl nuw nsw i64 %497, 40\l  %499 = or i64 %494, %498\l  %500 = getelementptr inbounds i8, i8 addrspace(4)* %466, i64 6\l  %501 = load i8, i8 addrspace(4)* %500, align 1, !tbaa !18\l  %502 = zext i8 %501 to i64\l  %503 = shl nuw nsw i64 %502, 48\l  %504 = or i64 %499, %503\l  %505 = getelementptr inbounds i8, i8 addrspace(4)* %466, i64 7\l  %506 = load i8, i8 addrspace(4)* %505, align 1, !tbaa !18\l  %507 = zext i8 %506 to i64\l  %508 = shl nuw i64 %507, 56\l  %509 = or i64 %504, %508\l  br label %523\l}"];
	Node0x53695e0 -> Node0x5359120;
	Node0x53697c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%510:\l510:                                              \l  %511 = phi i32 [ %521, %510 ], [ 0, %470 ]\l  %512 = phi i64 [ %520, %510 ], [ 0, %470 ]\l  %513 = zext i32 %511 to i64\l  %514 = getelementptr inbounds i8, i8 addrspace(4)* %466, i64 %513\l  %515 = load i8, i8 addrspace(4)* %514, align 1, !tbaa !18\l  %516 = zext i8 %515 to i64\l  %517 = shl i32 %511, 3\l  %518 = zext i32 %517 to i64\l  %519 = shl nuw i64 %516, %518\l  %520 = or i64 %519, %512\l  %521 = add nuw nsw i32 %511, 1\l  %522 = icmp eq i32 %521, %467\l  br i1 %522, label %523, label %510\l|{<s0>T|<s1>F}}"];
	Node0x53697c0:s0 -> Node0x5359120;
	Node0x53697c0:s1 -> Node0x53697c0;
	Node0x5359120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%523:\l523:                                              \l  %524 = phi i64 [ %509, %472 ], [ 0, %470 ], [ %520, %510 ]\l  %525 = shl nuw nsw i64 %106, 2\l  %526 = add nuw nsw i64 %525, 28\l  %527 = and i64 %526, 480\l  %528 = and i64 %108, -225\l  %529 = or i64 %528, %527\l  %530 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %42,\l... i64 noundef %529, i64 noundef %168, i64 noundef %228, i64 noundef %288, i64\l... noundef %348, i64 noundef %408, i64 noundef %468, i64 noundef %524) #10\l  %531 = sub i64 %98, %106\l  %532 = getelementptr inbounds i8, i8 addrspace(4)* %99, i64 %106\l  %533 = icmp eq i64 %531, 0\l  br i1 %533, label %534, label %97\l|{<s0>T|<s1>F}}"];
	Node0x5359120:s0 -> Node0x53581b0;
	Node0x5359120:s1 -> Node0x5358d10;
	Node0x53581b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%534:\l534:                                              \l  %535 = phi \<2 x i64\> [ %92, %89 ], [ %530, %523 ]\l  %536 = extractelement \<2 x i64\> %535, i64 0\l  %537 = and i64 %536, -225\l  %538 = or i64 %537, 32\l  %539 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %42,\l... i64 noundef %538, i64 noundef %35, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %540 = extractelement \<2 x i64\> %539, i64 0\l  %541 = zext i32 %34 to i64\l  %542 = and i64 %540, -227\l  %543 = or i64 %542, 34\l  %544 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %42,\l... i64 noundef %543, i64 noundef %541, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  ret void\l}"];
}
