digraph "CFG for '_Z21logistic_x_ent_kerneliPfS_S_S_' function" {
	label="CFG for '_Z21logistic_x_ent_kerneliPfS_S_S_' function";

	Node0x576f9c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !4\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !13, !invariant.load\l... !14\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %7\l  %22 = add i32 %21, %6\l  %23 = mul i32 %22, %15\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %25, %0\l  br i1 %26, label %27, label %217\l|{<s0>T|<s1>F}}"];
	Node0x576f9c0:s0 -> Node0x5772230;
	Node0x576f9c0:s1 -> Node0x57722c0;
	Node0x5772230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%27:\l27:                                               \l  %28 = sext i32 %25 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %2, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %28\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %33 = fneg contract float %30\l  %34 = fpext float %33 to double\l  %35 = fpext float %32 to double\l  %36 = fadd contract double %35, 0x3E7AD7F29ABCAF48\l  %37 = tail call double @llvm.amdgcn.frexp.mant.f64(double %36)\l  %38 = fcmp olt double %37, 0x3FE5555555555555\l  %39 = zext i1 %38 to i32\l  %40 = tail call double @llvm.amdgcn.ldexp.f64(double %37, i32 %39)\l  %41 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %36)\l  %42 = sub nsw i32 %41, %39\l  %43 = fadd double %40, -1.000000e+00\l  %44 = fadd double %40, 1.000000e+00\l  %45 = fadd double %44, -1.000000e+00\l  %46 = fsub double %40, %45\l  %47 = tail call double @llvm.amdgcn.rcp.f64(double %44)\l  %48 = fneg double %44\l  %49 = tail call double @llvm.fma.f64(double %48, double %47, double\l... 1.000000e+00)\l  %50 = tail call double @llvm.fma.f64(double %49, double %47, double %47)\l  %51 = tail call double @llvm.fma.f64(double %48, double %50, double\l... 1.000000e+00)\l  %52 = tail call double @llvm.fma.f64(double %51, double %50, double %50)\l  %53 = fmul double %43, %52\l  %54 = fmul double %44, %53\l  %55 = fneg double %54\l  %56 = tail call double @llvm.fma.f64(double %53, double %44, double %55)\l  %57 = tail call double @llvm.fma.f64(double %53, double %46, double %56)\l  %58 = fadd double %54, %57\l  %59 = fsub double %58, %54\l  %60 = fsub double %57, %59\l  %61 = fsub double %43, %58\l  %62 = fsub double %43, %61\l  %63 = fsub double %62, %58\l  %64 = fsub double %63, %60\l  %65 = fadd double %61, %64\l  %66 = fmul double %52, %65\l  %67 = fadd double %53, %66\l  %68 = fsub double %67, %53\l  %69 = fsub double %66, %68\l  %70 = fmul double %67, %67\l  %71 = tail call double @llvm.fma.f64(double %70, double 0x3FC3AB76BF559E2B,\l... double 0x3FC385386B47B09A)\l  %72 = tail call double @llvm.fma.f64(double %70, double %71, double\l... 0x3FC7474DD7F4DF2E)\l  %73 = tail call double @llvm.fma.f64(double %70, double %72, double\l... 0x3FCC71C016291751)\l  %74 = tail call double @llvm.fma.f64(double %70, double %73, double\l... 0x3FD249249B27ACF1)\l  %75 = tail call double @llvm.fma.f64(double %70, double %74, double\l... 0x3FD99999998EF7B6)\l  %76 = tail call double @llvm.fma.f64(double %70, double %75, double\l... 0x3FE5555555555780)\l  %77 = tail call double @llvm.amdgcn.ldexp.f64(double %67, i32 1)\l  %78 = tail call double @llvm.amdgcn.ldexp.f64(double %69, i32 1)\l  %79 = fmul double %67, %70\l  %80 = fmul double %79, %76\l  %81 = fadd double %77, %80\l  %82 = fsub double %81, %77\l  %83 = fsub double %80, %82\l  %84 = fadd double %78, %83\l  %85 = fadd double %81, %84\l  %86 = fsub double %85, %81\l  %87 = fsub double %84, %86\l  %88 = sitofp i32 %42 to double\l  %89 = fmul double %88, 0x3FE62E42FEFA39EF\l  %90 = fneg double %89\l  %91 = tail call double @llvm.fma.f64(double %88, double 0x3FE62E42FEFA39EF,\l... double %90)\l  %92 = tail call double @llvm.fma.f64(double %88, double 0x3C7ABC9E3B39803F,\l... double %91)\l  %93 = fadd double %89, %92\l  %94 = fsub double %93, %89\l  %95 = fsub double %92, %94\l  %96 = fadd double %93, %85\l  %97 = fsub double %96, %93\l  %98 = fsub double %96, %97\l  %99 = fsub double %93, %98\l  %100 = fsub double %85, %97\l  %101 = fadd double %100, %99\l  %102 = fadd double %95, %87\l  %103 = fsub double %102, %95\l  %104 = fsub double %102, %103\l  %105 = fsub double %95, %104\l  %106 = fsub double %87, %103\l  %107 = fadd double %106, %105\l  %108 = fadd double %102, %101\l  %109 = fadd double %96, %108\l  %110 = fsub double %109, %96\l  %111 = fsub double %108, %110\l  %112 = fadd double %107, %111\l  %113 = fadd double %109, %112\l  %114 = tail call double @llvm.fabs.f64(double %36) #3\l  %115 = fcmp oeq double %114, 0x7FF0000000000000\l  %116 = select i1 %115, double %36, double %113\l  %117 = fcmp olt double %36, 0.000000e+00\l  %118 = select i1 %117, double 0x7FF8000000000000, double %116\l  %119 = fcmp oeq double %36, 0.000000e+00\l  %120 = select i1 %119, double 0xFFF0000000000000, double %118\l  %121 = fmul contract double %120, %34\l  %122 = fsub contract float 1.000000e+00, %30\l  %123 = fpext float %122 to double\l  %124 = fsub contract float 1.000000e+00, %32\l  %125 = fpext float %124 to double\l  %126 = fadd contract double %125, 0x3E7AD7F29ABCAF48\l  %127 = tail call double @llvm.amdgcn.frexp.mant.f64(double %126)\l  %128 = fcmp olt double %127, 0x3FE5555555555555\l  %129 = zext i1 %128 to i32\l  %130 = tail call double @llvm.amdgcn.ldexp.f64(double %127, i32 %129)\l  %131 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %126)\l  %132 = sub nsw i32 %131, %129\l  %133 = fadd double %130, -1.000000e+00\l  %134 = fadd double %130, 1.000000e+00\l  %135 = fadd double %134, -1.000000e+00\l  %136 = fsub double %130, %135\l  %137 = tail call double @llvm.amdgcn.rcp.f64(double %134)\l  %138 = fneg double %134\l  %139 = tail call double @llvm.fma.f64(double %138, double %137, double\l... 1.000000e+00)\l  %140 = tail call double @llvm.fma.f64(double %139, double %137, double %137)\l  %141 = tail call double @llvm.fma.f64(double %138, double %140, double\l... 1.000000e+00)\l  %142 = tail call double @llvm.fma.f64(double %141, double %140, double %140)\l  %143 = fmul double %133, %142\l  %144 = fmul double %134, %143\l  %145 = fneg double %144\l  %146 = tail call double @llvm.fma.f64(double %143, double %134, double %145)\l  %147 = tail call double @llvm.fma.f64(double %143, double %136, double %146)\l  %148 = fadd double %144, %147\l  %149 = fsub double %148, %144\l  %150 = fsub double %147, %149\l  %151 = fsub double %133, %148\l  %152 = fsub double %133, %151\l  %153 = fsub double %152, %148\l  %154 = fsub double %153, %150\l  %155 = fadd double %151, %154\l  %156 = fmul double %142, %155\l  %157 = fadd double %143, %156\l  %158 = fsub double %157, %143\l  %159 = fsub double %156, %158\l  %160 = fmul double %157, %157\l  %161 = tail call double @llvm.fma.f64(double %160, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %162 = tail call double @llvm.fma.f64(double %160, double %161, double\l... 0x3FC7474DD7F4DF2E)\l  %163 = tail call double @llvm.fma.f64(double %160, double %162, double\l... 0x3FCC71C016291751)\l  %164 = tail call double @llvm.fma.f64(double %160, double %163, double\l... 0x3FD249249B27ACF1)\l  %165 = tail call double @llvm.fma.f64(double %160, double %164, double\l... 0x3FD99999998EF7B6)\l  %166 = tail call double @llvm.fma.f64(double %160, double %165, double\l... 0x3FE5555555555780)\l  %167 = tail call double @llvm.amdgcn.ldexp.f64(double %157, i32 1)\l  %168 = tail call double @llvm.amdgcn.ldexp.f64(double %159, i32 1)\l  %169 = fmul double %157, %160\l  %170 = fmul double %169, %166\l  %171 = fadd double %167, %170\l  %172 = fsub double %171, %167\l  %173 = fsub double %170, %172\l  %174 = fadd double %168, %173\l  %175 = fadd double %171, %174\l  %176 = fsub double %175, %171\l  %177 = fsub double %174, %176\l  %178 = sitofp i32 %132 to double\l  %179 = fmul double %178, 0x3FE62E42FEFA39EF\l  %180 = fneg double %179\l  %181 = tail call double @llvm.fma.f64(double %178, double\l... 0x3FE62E42FEFA39EF, double %180)\l  %182 = tail call double @llvm.fma.f64(double %178, double\l... 0x3C7ABC9E3B39803F, double %181)\l  %183 = fadd double %179, %182\l  %184 = fsub double %183, %179\l  %185 = fsub double %182, %184\l  %186 = fadd double %183, %175\l  %187 = fsub double %186, %183\l  %188 = fsub double %186, %187\l  %189 = fsub double %183, %188\l  %190 = fsub double %175, %187\l  %191 = fadd double %190, %189\l  %192 = fadd double %185, %177\l  %193 = fsub double %192, %185\l  %194 = fsub double %192, %193\l  %195 = fsub double %185, %194\l  %196 = fsub double %177, %193\l  %197 = fadd double %196, %195\l  %198 = fadd double %192, %191\l  %199 = fadd double %186, %198\l  %200 = fsub double %199, %186\l  %201 = fsub double %198, %200\l  %202 = fadd double %197, %201\l  %203 = fadd double %199, %202\l  %204 = tail call double @llvm.fabs.f64(double %126) #3\l  %205 = fcmp oeq double %204, 0x7FF0000000000000\l  %206 = select i1 %205, double %126, double %203\l  %207 = fcmp olt double %126, 0.000000e+00\l  %208 = select i1 %207, double 0x7FF8000000000000, double %206\l  %209 = fcmp oeq double %126, 0.000000e+00\l  %210 = select i1 %209, double 0xFFF0000000000000, double %208\l  %211 = fmul contract double %210, %123\l  %212 = fsub contract double %121, %211\l  %213 = fptrunc double %212 to float\l  %214 = getelementptr inbounds float, float addrspace(1)* %4, i64 %28\l  store float %213, float addrspace(1)* %214, align 4, !tbaa !16\l  %215 = fsub contract float %30, %32\l  %216 = getelementptr inbounds float, float addrspace(1)* %3, i64 %28\l  store float %215, float addrspace(1)* %216, align 4, !tbaa !16\l  br label %217\l}"];
	Node0x5772230 -> Node0x57722c0;
	Node0x57722c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%217:\l217:                                              \l  ret void\l}"];
}
