digraph "CFG for '_Z8spread_iPdjS_j' function" {
	label="CFG for '_Z8spread_iPdjS_j' function";

	Node0x510b480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %8 = bitcast i8 addrspace(4)* %7 to i32 addrspace(4)*\l  %9 = load i32, i32 addrspace(4)* %8, align 4, !tbaa !4\l  %10 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !13, !invariant.load\l... !14\l  %13 = zext i16 %12 to i32\l  %14 = udiv i32 %9, %13\l  %15 = mul i32 %14, %13\l  %16 = icmp ugt i32 %9, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = mul i32 %18, %5\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = add i32 %19, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %23 = icmp ult i32 %22, %3\l  br i1 %23, label %24, label %34\l|{<s0>T|<s1>F}}"];
	Node0x510b480:s0 -> Node0x510dc00;
	Node0x510b480:s1 -> Node0x510dc90;
	Node0x510dc00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%24:\l24:                                               \l  %25 = mul i32 %21, %3\l  %26 = add i32 %25, %22\l  %27 = zext i32 %26 to i64\l  %28 = getelementptr inbounds double, double addrspace(1)* %0, i64 %27\l  %29 = load double, double addrspace(1)* %28, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  %30 = mul i32 %21, %1\l  %31 = add i32 %30, %22\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds double, double addrspace(1)* %2, i64 %32\l  store double %29, double addrspace(1)* %33, align 8, !tbaa !16\l  br label %34\l}"];
	Node0x510dc00 -> Node0x510dc90;
	Node0x510dc90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  ret void\l}"];
}
