digraph "CFG for 'reduce_exp' function" {
	label="CFG for 'reduce_exp' function";

	Node0x5b05c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = shl i32 %5, 1\l  %15 = mul i32 %14, %10\l  %16 = add i32 %15, %4\l  %17 = shl nuw nsw i32 %10, 1\l  %18 = udiv i32 %13, %10\l  %19 = mul i32 %18, %10\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %17, %22\l  %24 = icmp ult i32 %16, %2\l  br i1 %24, label %25, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5b05c00:s0 -> Node0x5b069a0;
	Node0x5b05c00:s1 -> Node0x5b08370;
	Node0x5b069a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %41, %39 ], [ %16, %3 ]\l  %27 = phi double [ %40, %39 ], [ 0.000000e+00, %3 ]\l  %28 = zext i32 %26 to i64\l  %29 = getelementptr inbounds double, double addrspace(1)* %0, i64 %28\l  %30 = load double, double addrspace(1)* %29, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %31 = fadd contract double %27, %30\l  %32 = add i32 %26, %10\l  %33 = icmp ult i32 %32, %2\l  br i1 %33, label %34, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5b069a0:s0 -> Node0x5b07ee0;
	Node0x5b069a0:s1 -> Node0x5b084e0;
	Node0x5b07ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%34:\l34:                                               \l  %35 = zext i32 %32 to i64\l  %36 = getelementptr inbounds double, double addrspace(1)* %0, i64 %35\l  %37 = load double, double addrspace(1)* %36, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %38 = fadd contract double %31, %37\l  br label %39\l}"];
	Node0x5b07ee0 -> Node0x5b084e0;
	Node0x5b084e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi double [ %38, %34 ], [ %31, %25 ]\l  %41 = add i32 %26, %23\l  %42 = icmp ult i32 %41, %2\l  br i1 %42, label %25, label %43, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5b084e0:s0 -> Node0x5b069a0;
	Node0x5b084e0:s1 -> Node0x5b08370;
	Node0x5b08370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%43:\l43:                                               \l  %44 = phi double [ 0.000000e+00, %3 ], [ %40, %39 ]\l  %45 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %4\l  store double %44, double addrspace(3)* %45, align 8, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %46 = icmp ugt i16 %9, 511\l  br i1 %46, label %47, label %56\l|{<s0>T|<s1>F}}"];
	Node0x5b08370:s0 -> Node0x5b0af80;
	Node0x5b08370:s1 -> Node0x5b0b010;
	Node0x5b0af80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%47:\l47:                                               \l  %48 = icmp ult i32 %4, 256\l  br i1 %48, label %49, label %54\l|{<s0>T|<s1>F}}"];
	Node0x5b0af80:s0 -> Node0x5b0b210;
	Node0x5b0af80:s1 -> Node0x5b0b260;
	Node0x5b0b210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%49:\l49:                                               \l  %50 = add nuw nsw i32 %4, 256\l  %51 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %50\l  %52 = load double, double addrspace(3)* %51, align 8, !tbaa !16\l  %53 = fadd contract double %44, %52\l  store double %53, double addrspace(3)* %45, align 8, !tbaa !16\l  br label %54\l}"];
	Node0x5b0b210 -> Node0x5b0b260;
	Node0x5b0b260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%54:\l54:                                               \l  %55 = phi double [ %53, %49 ], [ %44, %47 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %56\l}"];
	Node0x5b0b260 -> Node0x5b0b010;
	Node0x5b0b010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%56:\l56:                                               \l  %57 = phi double [ %55, %54 ], [ %44, %43 ]\l  %58 = icmp ugt i16 %9, 255\l  br i1 %58, label %59, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5b0b010:s0 -> Node0x5b0baf0;
	Node0x5b0b010:s1 -> Node0x5b0bb40;
	Node0x5b0baf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%59:\l59:                                               \l  %60 = icmp ult i32 %4, 128\l  br i1 %60, label %61, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5b0baf0:s0 -> Node0x5b0bcd0;
	Node0x5b0baf0:s1 -> Node0x5b0bd20;
	Node0x5b0bcd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%61:\l61:                                               \l  %62 = add nuw nsw i32 %4, 128\l  %63 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %62\l  %64 = load double, double addrspace(3)* %63, align 8, !tbaa !16\l  %65 = fadd contract double %57, %64\l  store double %65, double addrspace(3)* %45, align 8, !tbaa !16\l  br label %66\l}"];
	Node0x5b0bcd0 -> Node0x5b0bd20;
	Node0x5b0bd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%66:\l66:                                               \l  %67 = phi double [ %65, %61 ], [ %57, %59 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %68\l}"];
	Node0x5b0bd20 -> Node0x5b0bb40;
	Node0x5b0bb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%68:\l68:                                               \l  %69 = phi double [ %67, %66 ], [ %57, %56 ]\l  %70 = icmp ugt i16 %9, 127\l  br i1 %70, label %71, label %80\l|{<s0>T|<s1>F}}"];
	Node0x5b0bb40:s0 -> Node0x5b0c7e0;
	Node0x5b0bb40:s1 -> Node0x5b0c830;
	Node0x5b0c7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%71:\l71:                                               \l  %72 = icmp ult i32 %4, 64\l  br i1 %72, label %73, label %78\l|{<s0>T|<s1>F}}"];
	Node0x5b0c7e0:s0 -> Node0x5b0c9c0;
	Node0x5b0c7e0:s1 -> Node0x5b0ca10;
	Node0x5b0c9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%73:\l73:                                               \l  %74 = add nuw nsw i32 %4, 64\l  %75 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %74\l  %76 = load double, double addrspace(3)* %75, align 8, !tbaa !16\l  %77 = fadd contract double %69, %76\l  store double %77, double addrspace(3)* %45, align 8, !tbaa !16\l  br label %78\l}"];
	Node0x5b0c9c0 -> Node0x5b0ca10;
	Node0x5b0ca10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%78:\l78:                                               \l  %79 = phi double [ %77, %73 ], [ %69, %71 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %80\l}"];
	Node0x5b0ca10 -> Node0x5b0c830;
	Node0x5b0c830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%80:\l80:                                               \l  %81 = phi double [ %79, %78 ], [ %69, %68 ]\l  %82 = icmp ult i32 %4, 32\l  br i1 %82, label %83, label %142\l|{<s0>T|<s1>F}}"];
	Node0x5b0c830:s0 -> Node0x5b0d260;
	Node0x5b0c830:s1 -> Node0x5b0d2b0;
	Node0x5b0d260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%83:\l83:                                               \l  %84 = icmp ugt i16 %9, 63\l  br i1 %84, label %85, label %92\l|{<s0>T|<s1>F}}"];
	Node0x5b0d260:s0 -> Node0x5b0d470;
	Node0x5b0d260:s1 -> Node0x5b0d4c0;
	Node0x5b0d470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%85:\l85:                                               \l  %86 = add nuw nsw i32 %4, 32\l  %87 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %86\l  %88 = addrspacecast double addrspace(3)* %87 to double*\l  %89 = load volatile double, double* %88, align 8, !tbaa !16\l  %90 = fadd contract double %81, %89\l  %91 = addrspacecast double addrspace(3)* %45 to double*\l  store volatile double %90, double* %91, align 8, !tbaa !16\l  br label %92\l}"];
	Node0x5b0d470 -> Node0x5b0d4c0;
	Node0x5b0d4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%92:\l92:                                               \l  %93 = phi double [ %90, %85 ], [ %81, %83 ]\l  %94 = icmp ugt i16 %9, 31\l  br i1 %94, label %95, label %102\l|{<s0>T|<s1>F}}"];
	Node0x5b0d4c0:s0 -> Node0x5b0db60;
	Node0x5b0d4c0:s1 -> Node0x5b0dbb0;
	Node0x5b0db60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%95:\l95:                                               \l  %96 = add nuw nsw i32 %4, 16\l  %97 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %96\l  %98 = addrspacecast double addrspace(3)* %97 to double*\l  %99 = load volatile double, double* %98, align 8, !tbaa !16\l  %100 = fadd contract double %93, %99\l  %101 = addrspacecast double addrspace(3)* %45 to double*\l  store volatile double %100, double* %101, align 8, !tbaa !16\l  br label %102\l}"];
	Node0x5b0db60 -> Node0x5b0dbb0;
	Node0x5b0dbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%102:\l102:                                              \l  %103 = phi double [ %100, %95 ], [ %93, %92 ]\l  %104 = icmp ugt i16 %9, 15\l  br i1 %104, label %105, label %112\l|{<s0>T|<s1>F}}"];
	Node0x5b0dbb0:s0 -> Node0x5b0e280;
	Node0x5b0dbb0:s1 -> Node0x5b0e2d0;
	Node0x5b0e280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%105:\l105:                                              \l  %106 = add nuw nsw i32 %4, 8\l  %107 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %106\l  %108 = addrspacecast double addrspace(3)* %107 to double*\l  %109 = load volatile double, double* %108, align 8, !tbaa !16\l  %110 = fadd contract double %103, %109\l  %111 = addrspacecast double addrspace(3)* %45 to double*\l  store volatile double %110, double* %111, align 8, !tbaa !16\l  br label %112\l}"];
	Node0x5b0e280 -> Node0x5b0e2d0;
	Node0x5b0e2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%112:\l112:                                              \l  %113 = phi double [ %110, %105 ], [ %103, %102 ]\l  %114 = icmp ugt i16 %9, 7\l  br i1 %114, label %115, label %122\l|{<s0>T|<s1>F}}"];
	Node0x5b0e2d0:s0 -> Node0x5b0e9a0;
	Node0x5b0e2d0:s1 -> Node0x5b0e9f0;
	Node0x5b0e9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%115:\l115:                                              \l  %116 = add nuw nsw i32 %4, 4\l  %117 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %116\l  %118 = addrspacecast double addrspace(3)* %117 to double*\l  %119 = load volatile double, double* %118, align 8, !tbaa !16\l  %120 = fadd contract double %113, %119\l  %121 = addrspacecast double addrspace(3)* %45 to double*\l  store volatile double %120, double* %121, align 8, !tbaa !16\l  br label %122\l}"];
	Node0x5b0e9a0 -> Node0x5b0e9f0;
	Node0x5b0e9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%122:\l122:                                              \l  %123 = phi double [ %120, %115 ], [ %113, %112 ]\l  %124 = icmp ugt i16 %9, 3\l  br i1 %124, label %125, label %132\l|{<s0>T|<s1>F}}"];
	Node0x5b0e9f0:s0 -> Node0x5b0f0c0;
	Node0x5b0e9f0:s1 -> Node0x5b0f110;
	Node0x5b0f0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%125:\l125:                                              \l  %126 = add nuw nsw i32 %4, 2\l  %127 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %126\l  %128 = addrspacecast double addrspace(3)* %127 to double*\l  %129 = load volatile double, double* %128, align 8, !tbaa !16\l  %130 = fadd contract double %123, %129\l  %131 = addrspacecast double addrspace(3)* %45 to double*\l  store volatile double %130, double* %131, align 8, !tbaa !16\l  br label %132\l}"];
	Node0x5b0f0c0 -> Node0x5b0f110;
	Node0x5b0f110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%132:\l132:                                              \l  %133 = phi double [ %130, %125 ], [ %123, %122 ]\l  %134 = icmp ugt i16 %9, 1\l  br i1 %134, label %135, label %142\l|{<s0>T|<s1>F}}"];
	Node0x5b0f110:s0 -> Node0x5b0c400;
	Node0x5b0f110:s1 -> Node0x5b0d2b0;
	Node0x5b0c400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%135:\l135:                                              \l  %136 = add nuw nsw i32 %4, 1\l  %137 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %136\l  %138 = addrspacecast double addrspace(3)* %137 to double*\l  %139 = load volatile double, double* %138, align 8, !tbaa !16\l  %140 = fadd contract double %133, %139\l  %141 = addrspacecast double addrspace(3)* %45 to double*\l  store volatile double %140, double* %141, align 8, !tbaa !16\l  br label %142\l}"];
	Node0x5b0c400 -> Node0x5b0d2b0;
	Node0x5b0d2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%142:\l142:                                              \l  %143 = icmp eq i32 %4, 0\l  br i1 %143, label %144, label %148\l|{<s0>T|<s1>F}}"];
	Node0x5b0d2b0:s0 -> Node0x5b101e0;
	Node0x5b0d2b0:s1 -> Node0x5b10230;
	Node0x5b101e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%144:\l144:                                              \l  %145 = load double, double addrspace(3)* getelementptr inbounds ([0 x\l... double], [0 x double] addrspace(3)* @sdata, i32 0, i32 0), align 8, !tbaa !16\l  %146 = zext i32 %5 to i64\l  %147 = getelementptr inbounds double, double addrspace(1)* %1, i64 %146\l  store double %145, double addrspace(1)* %147, align 8, !tbaa !16\l  br label %148\l}"];
	Node0x5b101e0 -> Node0x5b10230;
	Node0x5b10230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%148:\l148:                                              \l  ret void\l}"];
}
