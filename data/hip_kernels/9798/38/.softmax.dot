digraph "CFG for 'softmax' function" {
	label="CFG for 'softmax' function";

	Node0x63f03b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = shl i32 %5, 1\l  %15 = mul i32 %14, %10\l  %16 = add i32 %15, %4\l  %17 = shl nuw nsw i32 %10, 1\l  %18 = udiv i32 %13, %10\l  %19 = mul i32 %18, %10\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %17, %22\l  %24 = icmp ult i32 %16, %2\l  br i1 %24, label %25, label %71\l|{<s0>T|<s1>F}}"];
	Node0x63f03b0:s0 -> Node0x63f1150;
	Node0x63f03b0:s1 -> Node0x63f2b20;
	Node0x63f1150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %69, %67 ], [ %16, %3 ]\l  %27 = phi float [ %68, %67 ], [ 0.000000e+00, %3 ]\l  %28 = zext i32 %26 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %31 = fmul float %30, 0x3FF7154760000000\l  %32 = tail call float @llvm.rint.f32(float %31)\l  %33 = fcmp ogt float %30, 0x40562E4300000000\l  %34 = fcmp olt float %30, 0xC059D1DA00000000\l  %35 = fneg float %31\l  %36 = tail call float @llvm.fma.f32(float %30, float 0x3FF7154760000000,\l... float %35)\l  %37 = tail call float @llvm.fma.f32(float %30, float 0x3E54AE0BE0000000,\l... float %36)\l  %38 = fsub float %31, %32\l  %39 = fadd float %37, %38\l  %40 = tail call float @llvm.exp2.f32(float %39)\l  %41 = fptosi float %32 to i32\l  %42 = tail call float @llvm.amdgcn.ldexp.f32(float %40, i32 %41)\l  %43 = select i1 %34, float 0.000000e+00, float %42\l  %44 = select i1 %33, float 0x7FF0000000000000, float %43\l  %45 = fadd contract float %27, %44\l  %46 = add i32 %26, %10\l  %47 = icmp ult i32 %46, %2\l  br i1 %47, label %48, label %67\l|{<s0>T|<s1>F}}"];
	Node0x63f1150:s0 -> Node0x63f5590;
	Node0x63f1150:s1 -> Node0x63f2c90;
	Node0x63f5590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%48:\l48:                                               \l  %49 = zext i32 %46 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %52 = fmul float %51, 0x3FF7154760000000\l  %53 = tail call float @llvm.rint.f32(float %52)\l  %54 = fcmp ogt float %51, 0x40562E4300000000\l  %55 = fcmp olt float %51, 0xC059D1DA00000000\l  %56 = fneg float %52\l  %57 = tail call float @llvm.fma.f32(float %51, float 0x3FF7154760000000,\l... float %56)\l  %58 = tail call float @llvm.fma.f32(float %51, float 0x3E54AE0BE0000000,\l... float %57)\l  %59 = fsub float %52, %53\l  %60 = fadd float %58, %59\l  %61 = tail call float @llvm.exp2.f32(float %60)\l  %62 = fptosi float %53 to i32\l  %63 = tail call float @llvm.amdgcn.ldexp.f32(float %61, i32 %62)\l  %64 = select i1 %55, float 0.000000e+00, float %63\l  %65 = select i1 %54, float 0x7FF0000000000000, float %64\l  %66 = fadd contract float %45, %65\l  br label %67\l}"];
	Node0x63f5590 -> Node0x63f2c90;
	Node0x63f2c90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi float [ %66, %48 ], [ %45, %25 ]\l  %69 = add i32 %26, %23\l  %70 = icmp ult i32 %69, %2\l  br i1 %70, label %25, label %71, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x63f2c90:s0 -> Node0x63f1150;
	Node0x63f2c90:s1 -> Node0x63f2b20;
	Node0x63f2b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%71:\l71:                                               \l  %72 = phi float [ 0.000000e+00, %3 ], [ %68, %67 ]\l  %73 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %4\l  store float %72, float addrspace(3)* %73, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %74 = icmp ugt i16 %9, 511\l  br i1 %74, label %75, label %84\l|{<s0>T|<s1>F}}"];
	Node0x63f2b20:s0 -> Node0x63f7450;
	Node0x63f2b20:s1 -> Node0x63f74e0;
	Node0x63f7450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%75:\l75:                                               \l  %76 = icmp ult i32 %4, 256\l  br i1 %76, label %77, label %82\l|{<s0>T|<s1>F}}"];
	Node0x63f7450:s0 -> Node0x63f76e0;
	Node0x63f7450:s1 -> Node0x63f7730;
	Node0x63f76e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%77:\l77:                                               \l  %78 = add nuw nsw i32 %4, 256\l  %79 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %78\l  %80 = load float, float addrspace(3)* %79, align 4, !tbaa !16\l  %81 = fadd contract float %72, %80\l  store float %81, float addrspace(3)* %73, align 4, !tbaa !16\l  br label %82\l}"];
	Node0x63f76e0 -> Node0x63f7730;
	Node0x63f7730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%82:\l82:                                               \l  %83 = phi float [ %81, %77 ], [ %72, %75 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %84\l}"];
	Node0x63f7730 -> Node0x63f74e0;
	Node0x63f74e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%84:\l84:                                               \l  %85 = phi float [ %83, %82 ], [ %72, %71 ]\l  %86 = icmp ugt i16 %9, 255\l  br i1 %86, label %87, label %96\l|{<s0>T|<s1>F}}"];
	Node0x63f74e0:s0 -> Node0x63f7fc0;
	Node0x63f74e0:s1 -> Node0x63f8010;
	Node0x63f7fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%87:\l87:                                               \l  %88 = icmp ult i32 %4, 128\l  br i1 %88, label %89, label %94\l|{<s0>T|<s1>F}}"];
	Node0x63f7fc0:s0 -> Node0x63f81d0;
	Node0x63f7fc0:s1 -> Node0x63f8220;
	Node0x63f81d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%89:\l89:                                               \l  %90 = add nuw nsw i32 %4, 128\l  %91 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %90\l  %92 = load float, float addrspace(3)* %91, align 4, !tbaa !16\l  %93 = fadd contract float %85, %92\l  store float %93, float addrspace(3)* %73, align 4, !tbaa !16\l  br label %94\l}"];
	Node0x63f81d0 -> Node0x63f8220;
	Node0x63f8220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%94:\l94:                                               \l  %95 = phi float [ %93, %89 ], [ %85, %87 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %96\l}"];
	Node0x63f8220 -> Node0x63f8010;
	Node0x63f8010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%96:\l96:                                               \l  %97 = phi float [ %95, %94 ], [ %85, %84 ]\l  %98 = icmp ugt i16 %9, 127\l  br i1 %98, label %99, label %108\l|{<s0>T|<s1>F}}"];
	Node0x63f8010:s0 -> Node0x63f8a70;
	Node0x63f8010:s1 -> Node0x63f8ac0;
	Node0x63f8a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%99:\l99:                                               \l  %100 = icmp ult i32 %4, 64\l  br i1 %100, label %101, label %106\l|{<s0>T|<s1>F}}"];
	Node0x63f8a70:s0 -> Node0x63f8c80;
	Node0x63f8a70:s1 -> Node0x63f8cd0;
	Node0x63f8c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%101:\l101:                                              \l  %102 = add nuw nsw i32 %4, 64\l  %103 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %102\l  %104 = load float, float addrspace(3)* %103, align 4, !tbaa !16\l  %105 = fadd contract float %97, %104\l  store float %105, float addrspace(3)* %73, align 4, !tbaa !16\l  br label %106\l}"];
	Node0x63f8c80 -> Node0x63f8cd0;
	Node0x63f8cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%106:\l106:                                              \l  %107 = phi float [ %105, %101 ], [ %97, %99 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %108\l}"];
	Node0x63f8cd0 -> Node0x63f8ac0;
	Node0x63f8ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%108:\l108:                                              \l  %109 = phi float [ %107, %106 ], [ %97, %96 ]\l  %110 = icmp ult i32 %4, 32\l  br i1 %110, label %111, label %170\l|{<s0>T|<s1>F}}"];
	Node0x63f8ac0:s0 -> Node0x63f9520;
	Node0x63f8ac0:s1 -> Node0x63f9570;
	Node0x63f9520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%111:\l111:                                              \l  %112 = icmp ugt i16 %9, 63\l  br i1 %112, label %113, label %120\l|{<s0>T|<s1>F}}"];
	Node0x63f9520:s0 -> Node0x63f9730;
	Node0x63f9520:s1 -> Node0x63f9780;
	Node0x63f9730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%113:\l113:                                              \l  %114 = add nuw nsw i32 %4, 32\l  %115 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %114\l  %116 = addrspacecast float addrspace(3)* %115 to float*\l  %117 = load volatile float, float* %116, align 4, !tbaa !16\l  %118 = fadd contract float %109, %117\l  %119 = addrspacecast float addrspace(3)* %73 to float*\l  store volatile float %118, float* %119, align 4, !tbaa !16\l  br label %120\l}"];
	Node0x63f9730 -> Node0x63f9780;
	Node0x63f9780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%120:\l120:                                              \l  %121 = phi float [ %118, %113 ], [ %109, %111 ]\l  %122 = icmp ugt i16 %9, 31\l  br i1 %122, label %123, label %130\l|{<s0>T|<s1>F}}"];
	Node0x63f9780:s0 -> Node0x63f9e20;
	Node0x63f9780:s1 -> Node0x63f9e70;
	Node0x63f9e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%123:\l123:                                              \l  %124 = add nuw nsw i32 %4, 16\l  %125 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %124\l  %126 = addrspacecast float addrspace(3)* %125 to float*\l  %127 = load volatile float, float* %126, align 4, !tbaa !16\l  %128 = fadd contract float %121, %127\l  %129 = addrspacecast float addrspace(3)* %73 to float*\l  store volatile float %128, float* %129, align 4, !tbaa !16\l  br label %130\l}"];
	Node0x63f9e20 -> Node0x63f9e70;
	Node0x63f9e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%130:\l130:                                              \l  %131 = phi float [ %128, %123 ], [ %121, %120 ]\l  %132 = icmp ugt i16 %9, 15\l  br i1 %132, label %133, label %140\l|{<s0>T|<s1>F}}"];
	Node0x63f9e70:s0 -> Node0x63f6b80;
	Node0x63f9e70:s1 -> Node0x63f6bd0;
	Node0x63f6b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%133:\l133:                                              \l  %134 = add nuw nsw i32 %4, 8\l  %135 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %134\l  %136 = addrspacecast float addrspace(3)* %135 to float*\l  %137 = load volatile float, float* %136, align 4, !tbaa !16\l  %138 = fadd contract float %131, %137\l  %139 = addrspacecast float addrspace(3)* %73 to float*\l  store volatile float %138, float* %139, align 4, !tbaa !16\l  br label %140\l}"];
	Node0x63f6b80 -> Node0x63f6bd0;
	Node0x63f6bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%140:\l140:                                              \l  %141 = phi float [ %138, %133 ], [ %131, %130 ]\l  %142 = icmp ugt i16 %9, 7\l  br i1 %142, label %143, label %150\l|{<s0>T|<s1>F}}"];
	Node0x63f6bd0:s0 -> Node0x63fb070;
	Node0x63f6bd0:s1 -> Node0x63fb0c0;
	Node0x63fb070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%143:\l143:                                              \l  %144 = add nuw nsw i32 %4, 4\l  %145 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %144\l  %146 = addrspacecast float addrspace(3)* %145 to float*\l  %147 = load volatile float, float* %146, align 4, !tbaa !16\l  %148 = fadd contract float %141, %147\l  %149 = addrspacecast float addrspace(3)* %73 to float*\l  store volatile float %148, float* %149, align 4, !tbaa !16\l  br label %150\l}"];
	Node0x63fb070 -> Node0x63fb0c0;
	Node0x63fb0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%150:\l150:                                              \l  %151 = phi float [ %148, %143 ], [ %141, %140 ]\l  %152 = icmp ugt i16 %9, 3\l  br i1 %152, label %153, label %160\l|{<s0>T|<s1>F}}"];
	Node0x63fb0c0:s0 -> Node0x63fb790;
	Node0x63fb0c0:s1 -> Node0x63fb7e0;
	Node0x63fb790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%153:\l153:                                              \l  %154 = add nuw nsw i32 %4, 2\l  %155 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %154\l  %156 = addrspacecast float addrspace(3)* %155 to float*\l  %157 = load volatile float, float* %156, align 4, !tbaa !16\l  %158 = fadd contract float %151, %157\l  %159 = addrspacecast float addrspace(3)* %73 to float*\l  store volatile float %158, float* %159, align 4, !tbaa !16\l  br label %160\l}"];
	Node0x63fb790 -> Node0x63fb7e0;
	Node0x63fb7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%160:\l160:                                              \l  %161 = phi float [ %158, %153 ], [ %151, %150 ]\l  %162 = icmp ugt i16 %9, 1\l  br i1 %162, label %163, label %170\l|{<s0>T|<s1>F}}"];
	Node0x63fb7e0:s0 -> Node0x63fbeb0;
	Node0x63fb7e0:s1 -> Node0x63f9570;
	Node0x63fbeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%163:\l163:                                              \l  %164 = add nuw nsw i32 %4, 1\l  %165 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %164\l  %166 = addrspacecast float addrspace(3)* %165 to float*\l  %167 = load volatile float, float* %166, align 4, !tbaa !16\l  %168 = fadd contract float %161, %167\l  %169 = addrspacecast float addrspace(3)* %73 to float*\l  store volatile float %168, float* %169, align 4, !tbaa !16\l  br label %170\l}"];
	Node0x63fbeb0 -> Node0x63f9570;
	Node0x63f9570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%170:\l170:                                              \l  %171 = icmp eq i32 %4, 0\l  br i1 %171, label %172, label %176\l|{<s0>T|<s1>F}}"];
	Node0x63f9570:s0 -> Node0x63fc4a0;
	Node0x63f9570:s1 -> Node0x63fc4f0;
	Node0x63fc4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%172:\l172:                                              \l  %173 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @sdata, i32 0, i32 0), align 4, !tbaa !16\l  %174 = zext i32 %5 to i64\l  %175 = getelementptr inbounds float, float addrspace(1)* %1, i64 %174\l  store float %173, float addrspace(1)* %175, align 4, !tbaa !16\l  br label %176\l}"];
	Node0x63fc4a0 -> Node0x63fc4f0;
	Node0x63fc4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%176:\l176:                                              \l  ret void\l}"];
}
