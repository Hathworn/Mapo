digraph "CFG for '_Z8evaluateP10chromosomePiS1_i' function" {
	label="CFG for '_Z8evaluateP10chromosomePiS1_i' function";

	Node0x5b434e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = icmp sgt i32 %3, 0\l  br i1 %5, label %6, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5b434e0:s0 -> Node0x5b43480;
	Node0x5b434e0:s1 -> Node0x5b46ac0;
	Node0x5b43480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%6:\l6:                                                \l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = sext i32 %15 to i64\l  %17 = getelementptr inbounds %struct.chromosome, %struct.chromosome\l... addrspace(1)* %0, i64 %16, i32 1\l  %18 = getelementptr inbounds %struct.chromosome, %struct.chromosome\l... addrspace(1)* %0, i64 %16, i32 0\l  %19 = load i64, i64 addrspace(1)* %18, align 8, !tbaa !7\l  %20 = and i32 %3, 3\l  %21 = icmp ult i32 %3, 4\l  br i1 %21, label %24, label %22\l|{<s0>T|<s1>F}}"];
	Node0x5b43480:s0 -> Node0x5b48990;
	Node0x5b43480:s1 -> Node0x5b48a20;
	Node0x5b48a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%22:\l22:                                               \l  %23 = and i32 %3, -4\l  br label %56\l}"];
	Node0x5b48a20 -> Node0x5b48c20;
	Node0x5b48990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%24:\l24:                                               \l  %25 = phi i64 [ undef, %6 ], [ %130, %124 ]\l  %26 = phi i64 [ %19, %6 ], [ %130, %124 ]\l  %27 = phi i32 [ 0, %6 ], [ %131, %124 ]\l  %28 = icmp eq i32 %20, 0\l  br i1 %28, label %53, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5b48990:s0 -> Node0x5b494d0;
	Node0x5b48990:s1 -> Node0x5b49560;
	Node0x5b49560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i64 [ %49, %43 ], [ %26, %24 ]\l  %31 = phi i32 [ %50, %43 ], [ %27, %24 ]\l  %32 = phi i32 [ %51, %43 ], [ 0, %24 ]\l  %33 = zext i32 %31 to i64\l  %34 = getelementptr inbounds %struct.chromosome, %struct.chromosome\l... addrspace(1)* %0, i64 %16, i32 2, i64 %33\l  %35 = load i8, i8 addrspace(1)* %34, align 1, !tbaa !12, !range !14,\l... !amdgpu.noclobber !5\l  %36 = icmp eq i8 %35, 0\l  br i1 %36, label %43, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5b49560:s0 -> Node0x5b496d0;
	Node0x5b49560:s1 -> Node0x5b4a700;
	Node0x5b4a700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%37:\l37:                                               \l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %33\l  %39 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !15, !amdgpu.noclobber\l... !5\l  %40 = sext i32 %39 to i64\l  %41 = load i64, i64 addrspace(1)* %17, align 8, !tbaa !17\l  %42 = add nsw i64 %41, %40\l  store i64 %42, i64 addrspace(1)* %17, align 8, !tbaa !17\l  br label %43\l}"];
	Node0x5b4a700 -> Node0x5b496d0;
	Node0x5b496d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = zext i8 %35 to i32\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %33\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !15, !amdgpu.noclobber\l... !5\l  %47 = mul nuw nsw i32 %46, %44\l  %48 = sext i32 %47 to i64\l  %49 = add nsw i64 %30, %48\l  %50 = add nuw nsw i32 %31, 1\l  %51 = add i32 %32, 1\l  %52 = icmp eq i32 %51, %20\l  br i1 %52, label %53, label %29, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x5b496d0:s0 -> Node0x5b494d0;
	Node0x5b496d0:s1 -> Node0x5b49560;
	Node0x5b494d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%53:\l53:                                               \l  %54 = phi i64 [ %25, %24 ], [ %49, %43 ]\l  store i64 %54, i64 addrspace(1)* %18, align 8, !tbaa !7\l  br label %55\l}"];
	Node0x5b494d0 -> Node0x5b46ac0;
	Node0x5b46ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%55:\l55:                                               \l  ret void\l}"];
	Node0x5b48c20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%56:\l56:                                               \l  %57 = phi i64 [ %19, %22 ], [ %130, %124 ]\l  %58 = phi i32 [ 0, %22 ], [ %131, %124 ]\l  %59 = phi i32 [ 0, %22 ], [ %132, %124 ]\l  %60 = zext i32 %58 to i64\l  %61 = getelementptr inbounds %struct.chromosome, %struct.chromosome\l... addrspace(1)* %0, i64 %16, i32 2, i64 %60\l  %62 = load i8, i8 addrspace(1)* %61, align 1, !tbaa !12, !range !14,\l... !amdgpu.noclobber !5\l  %63 = icmp eq i8 %62, 0\l  br i1 %63, label %70, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5b48c20:s0 -> Node0x5b4d910;
	Node0x5b48c20:s1 -> Node0x5b4d960;
	Node0x5b4d960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%64:\l64:                                               \l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %60\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !15, !amdgpu.noclobber\l... !5\l  %67 = sext i32 %66 to i64\l  %68 = load i64, i64 addrspace(1)* %17, align 8, !tbaa !17\l  %69 = add nsw i64 %68, %67\l  store i64 %69, i64 addrspace(1)* %17, align 8, !tbaa !17\l  br label %70\l}"];
	Node0x5b4d960 -> Node0x5b4d910;
	Node0x5b4d910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%70:\l70:                                               \l  %71 = zext i8 %62 to i32\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %60\l  %73 = load i32, i32 addrspace(1)* %72, align 4, !tbaa !15, !amdgpu.noclobber\l... !5\l  %74 = mul nuw nsw i32 %73, %71\l  %75 = sext i32 %74 to i64\l  %76 = add nsw i64 %57, %75\l  %77 = or i32 %58, 1\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds %struct.chromosome, %struct.chromosome\l... addrspace(1)* %0, i64 %16, i32 2, i64 %78\l  %80 = load i8, i8 addrspace(1)* %79, align 1, !tbaa !12, !range !14,\l... !amdgpu.noclobber !5\l  %81 = icmp eq i8 %80, 0\l  br i1 %81, label %88, label %82\l|{<s0>T|<s1>F}}"];
	Node0x5b4d910:s0 -> Node0x5b4e6b0;
	Node0x5b4d910:s1 -> Node0x5b4e700;
	Node0x5b4e700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%82:\l82:                                               \l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %78\l  %84 = load i32, i32 addrspace(1)* %83, align 4, !tbaa !15, !amdgpu.noclobber\l... !5\l  %85 = sext i32 %84 to i64\l  %86 = load i64, i64 addrspace(1)* %17, align 8, !tbaa !17\l  %87 = add nsw i64 %86, %85\l  store i64 %87, i64 addrspace(1)* %17, align 8, !tbaa !17\l  br label %88\l}"];
	Node0x5b4e700 -> Node0x5b4e6b0;
	Node0x5b4e6b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%88:\l88:                                               \l  %89 = zext i8 %80 to i32\l  %90 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %78\l  %91 = load i32, i32 addrspace(1)* %90, align 4, !tbaa !15, !amdgpu.noclobber\l... !5\l  %92 = mul nuw nsw i32 %91, %89\l  %93 = sext i32 %92 to i64\l  %94 = add nsw i64 %76, %93\l  %95 = or i32 %58, 2\l  %96 = zext i32 %95 to i64\l  %97 = getelementptr inbounds %struct.chromosome, %struct.chromosome\l... addrspace(1)* %0, i64 %16, i32 2, i64 %96\l  %98 = load i8, i8 addrspace(1)* %97, align 1, !tbaa !12, !range !14,\l... !amdgpu.noclobber !5\l  %99 = icmp eq i8 %98, 0\l  br i1 %99, label %106, label %100\l|{<s0>T|<s1>F}}"];
	Node0x5b4e6b0:s0 -> Node0x5b4f230;
	Node0x5b4e6b0:s1 -> Node0x5b4f280;
	Node0x5b4f280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%100:\l100:                                              \l  %101 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %96\l  %102 = load i32, i32 addrspace(1)* %101, align 4, !tbaa !15,\l... !amdgpu.noclobber !5\l  %103 = sext i32 %102 to i64\l  %104 = load i64, i64 addrspace(1)* %17, align 8, !tbaa !17\l  %105 = add nsw i64 %104, %103\l  store i64 %105, i64 addrspace(1)* %17, align 8, !tbaa !17\l  br label %106\l}"];
	Node0x5b4f280 -> Node0x5b4f230;
	Node0x5b4f230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%106:\l106:                                              \l  %107 = zext i8 %98 to i32\l  %108 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %96\l  %109 = load i32, i32 addrspace(1)* %108, align 4, !tbaa !15,\l... !amdgpu.noclobber !5\l  %110 = mul nuw nsw i32 %109, %107\l  %111 = sext i32 %110 to i64\l  %112 = add nsw i64 %94, %111\l  %113 = or i32 %58, 3\l  %114 = zext i32 %113 to i64\l  %115 = getelementptr inbounds %struct.chromosome, %struct.chromosome\l... addrspace(1)* %0, i64 %16, i32 2, i64 %114\l  %116 = load i8, i8 addrspace(1)* %115, align 1, !tbaa !12, !range !14,\l... !amdgpu.noclobber !5\l  %117 = icmp eq i8 %116, 0\l  br i1 %117, label %124, label %118\l|{<s0>T|<s1>F}}"];
	Node0x5b4f230:s0 -> Node0x5b49130;
	Node0x5b4f230:s1 -> Node0x5b4fdb0;
	Node0x5b4fdb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%118:\l118:                                              \l  %119 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %114\l  %120 = load i32, i32 addrspace(1)* %119, align 4, !tbaa !15,\l... !amdgpu.noclobber !5\l  %121 = sext i32 %120 to i64\l  %122 = load i64, i64 addrspace(1)* %17, align 8, !tbaa !17\l  %123 = add nsw i64 %122, %121\l  store i64 %123, i64 addrspace(1)* %17, align 8, !tbaa !17\l  br label %124\l}"];
	Node0x5b4fdb0 -> Node0x5b49130;
	Node0x5b49130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%124:\l124:                                              \l  %125 = zext i8 %116 to i32\l  %126 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %114\l  %127 = load i32, i32 addrspace(1)* %126, align 4, !tbaa !15,\l... !amdgpu.noclobber !5\l  %128 = mul nuw nsw i32 %127, %125\l  %129 = sext i32 %128 to i64\l  %130 = add nsw i64 %112, %129\l  %131 = add nuw nsw i32 %58, 4\l  %132 = add i32 %59, 4\l  %133 = icmp eq i32 %132, %23\l  br i1 %133, label %24, label %56, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5b49130:s0 -> Node0x5b48990;
	Node0x5b49130:s1 -> Node0x5b48c20;
}
